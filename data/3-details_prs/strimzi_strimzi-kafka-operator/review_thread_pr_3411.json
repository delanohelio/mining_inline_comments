{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4NTI5NTUz", "number": 3411, "reviewThreads": {"totalCount": 28, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNzo1OTozNFrOETXXQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNToxMTozMFrOEUF-xA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NzQxMTg2OnYy", "diffSide": "RIGHT", "path": "examples/metrics/grafana-dashboards/strimzi-cruise-control.json", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNzo1OTozNFrOG5D2fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxODo0MDo0NlrOG5vTPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ4NTExOA==", "bodyText": "Can we get some better descriptions? For example I have no idea what does Balancedness Score, which value is good, which bad etc. ... I guess 100 is bad here since it is orange in the screenshot?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r462485118", "createdAt": "2020-07-29T17:59:34Z", "author": {"login": "scholzj"}, "path": "examples/metrics/grafana-dashboards/strimzi-cruise-control.json", "diffHunk": "@@ -0,0 +1,2062 @@\n+{\n+  \"__inputs\": [\n+    {\n+      \"name\": \"DS_PROMETHEUS\",\n+      \"label\": \"Prometheus\",\n+      \"description\": \"\",\n+      \"type\": \"datasource\",\n+      \"pluginId\": \"prometheus\",\n+      \"pluginName\": \"Prometheus\"\n+    }\n+  ],\n+  \"__requires\": [\n+    {\n+      \"type\": \"grafana\",\n+      \"id\": \"grafana\",\n+      \"name\": \"Grafana\",\n+      \"version\": \"6.3.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"graph\",\n+      \"name\": \"Graph\",\n+      \"version\": \"\"\n+    },\n+    {\n+      \"type\": \"datasource\",\n+      \"id\": \"prometheus\",\n+      \"name\": \"Prometheus\",\n+      \"version\": \"1.0.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"singlestat\",\n+      \"name\": \"Singlestat\",\n+      \"version\": \"\"\n+    }\n+  ],\n+  \"annotations\": {\n+    \"list\": [\n+      {\n+        \"builtIn\": 1,\n+        \"datasource\": \"-- Grafana --\",\n+        \"enable\": true,\n+        \"hide\": true,\n+        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n+        \"name\": \"Annotations & Alerts\",\n+        \"type\": \"dashboard\"\n+      }\n+    ]\n+  },\n+  \"editable\": true,\n+  \"gnetId\": null,\n+  \"graphTooltip\": 0,\n+  \"id\": null,\n+  \"iteration\": 1596032501954,\n+  \"links\": [],\n+  \"panels\": [\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#d44a3a\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#299c46\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"The number of snapshot windows that is monitored\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 0,\n+        \"y\": 0\n+      },\n+      \"id\": 46,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"repeat\": null,\n+      \"repeatDirection\": \"h\",\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_total_monitored_windows_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"0,2\",\n+      \"title\": \"Total Monitored Windows\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"#e5ac0e\",\n+        \"#bf1b00\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Number of valid windows\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 4,\n+        \"y\": 0\n+      },\n+      \"id\": 36,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_valid_windows_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Valid Windows\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Number of ongoing executions running for proposals or rebalance\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 8,\n+        \"y\": 0\n+      },\n+      \"id\": 38,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_executor_ongoing_execution_non_kafka_assigner_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Ongoing Execution\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Balancedness Score\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c387808483f7d1e283db00938adcf173ec7ec2f"}, "originalPosition": 320}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUzNjUyNA==", "bodyText": "Yes, I reverted the logic in the dashboard, now higher values are green while lower are orange and then red. I used 50 (for red) and 80 (orange) as thresholds.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r462536524", "createdAt": "2020-07-29T19:29:45Z", "author": {"login": "ppatierno"}, "path": "examples/metrics/grafana-dashboards/strimzi-cruise-control.json", "diffHunk": "@@ -0,0 +1,2062 @@\n+{\n+  \"__inputs\": [\n+    {\n+      \"name\": \"DS_PROMETHEUS\",\n+      \"label\": \"Prometheus\",\n+      \"description\": \"\",\n+      \"type\": \"datasource\",\n+      \"pluginId\": \"prometheus\",\n+      \"pluginName\": \"Prometheus\"\n+    }\n+  ],\n+  \"__requires\": [\n+    {\n+      \"type\": \"grafana\",\n+      \"id\": \"grafana\",\n+      \"name\": \"Grafana\",\n+      \"version\": \"6.3.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"graph\",\n+      \"name\": \"Graph\",\n+      \"version\": \"\"\n+    },\n+    {\n+      \"type\": \"datasource\",\n+      \"id\": \"prometheus\",\n+      \"name\": \"Prometheus\",\n+      \"version\": \"1.0.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"singlestat\",\n+      \"name\": \"Singlestat\",\n+      \"version\": \"\"\n+    }\n+  ],\n+  \"annotations\": {\n+    \"list\": [\n+      {\n+        \"builtIn\": 1,\n+        \"datasource\": \"-- Grafana --\",\n+        \"enable\": true,\n+        \"hide\": true,\n+        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n+        \"name\": \"Annotations & Alerts\",\n+        \"type\": \"dashboard\"\n+      }\n+    ]\n+  },\n+  \"editable\": true,\n+  \"gnetId\": null,\n+  \"graphTooltip\": 0,\n+  \"id\": null,\n+  \"iteration\": 1596032501954,\n+  \"links\": [],\n+  \"panels\": [\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#d44a3a\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#299c46\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"The number of snapshot windows that is monitored\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 0,\n+        \"y\": 0\n+      },\n+      \"id\": 46,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"repeat\": null,\n+      \"repeatDirection\": \"h\",\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_total_monitored_windows_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"0,2\",\n+      \"title\": \"Total Monitored Windows\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"#e5ac0e\",\n+        \"#bf1b00\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Number of valid windows\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 4,\n+        \"y\": 0\n+      },\n+      \"id\": 36,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_valid_windows_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Valid Windows\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Number of ongoing executions running for proposals or rebalance\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 8,\n+        \"y\": 0\n+      },\n+      \"id\": 38,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_executor_ongoing_execution_non_kafka_assigner_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Ongoing Execution\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Balancedness Score\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ4NTExOA=="}, "originalCommit": {"oid": "5c387808483f7d1e283db00938adcf173ec7ec2f"}, "originalPosition": 320}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU1MTI1OQ==", "bodyText": "So is 100 a maximum? TBH, I think the Cruise Control is relative niche ... so the descriptions are IMHO quite important since many people will be looking at it as I'm ... without having a clue.\nBTW: Should we have a sample alert for this as well?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r462551259", "createdAt": "2020-07-29T19:57:14Z", "author": {"login": "scholzj"}, "path": "examples/metrics/grafana-dashboards/strimzi-cruise-control.json", "diffHunk": "@@ -0,0 +1,2062 @@\n+{\n+  \"__inputs\": [\n+    {\n+      \"name\": \"DS_PROMETHEUS\",\n+      \"label\": \"Prometheus\",\n+      \"description\": \"\",\n+      \"type\": \"datasource\",\n+      \"pluginId\": \"prometheus\",\n+      \"pluginName\": \"Prometheus\"\n+    }\n+  ],\n+  \"__requires\": [\n+    {\n+      \"type\": \"grafana\",\n+      \"id\": \"grafana\",\n+      \"name\": \"Grafana\",\n+      \"version\": \"6.3.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"graph\",\n+      \"name\": \"Graph\",\n+      \"version\": \"\"\n+    },\n+    {\n+      \"type\": \"datasource\",\n+      \"id\": \"prometheus\",\n+      \"name\": \"Prometheus\",\n+      \"version\": \"1.0.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"singlestat\",\n+      \"name\": \"Singlestat\",\n+      \"version\": \"\"\n+    }\n+  ],\n+  \"annotations\": {\n+    \"list\": [\n+      {\n+        \"builtIn\": 1,\n+        \"datasource\": \"-- Grafana --\",\n+        \"enable\": true,\n+        \"hide\": true,\n+        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n+        \"name\": \"Annotations & Alerts\",\n+        \"type\": \"dashboard\"\n+      }\n+    ]\n+  },\n+  \"editable\": true,\n+  \"gnetId\": null,\n+  \"graphTooltip\": 0,\n+  \"id\": null,\n+  \"iteration\": 1596032501954,\n+  \"links\": [],\n+  \"panels\": [\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#d44a3a\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#299c46\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"The number of snapshot windows that is monitored\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 0,\n+        \"y\": 0\n+      },\n+      \"id\": 46,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"repeat\": null,\n+      \"repeatDirection\": \"h\",\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_total_monitored_windows_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"0,2\",\n+      \"title\": \"Total Monitored Windows\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"#e5ac0e\",\n+        \"#bf1b00\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Number of valid windows\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 4,\n+        \"y\": 0\n+      },\n+      \"id\": 36,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_valid_windows_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Valid Windows\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Number of ongoing executions running for proposals or rebalance\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 8,\n+        \"y\": 0\n+      },\n+      \"id\": 38,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_executor_ongoing_execution_non_kafka_assigner_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Ongoing Execution\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Balancedness Score\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ4NTExOA=="}, "originalCommit": {"oid": "5c387808483f7d1e283db00938adcf173ec7ec2f"}, "originalPosition": 320}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU1MjUwNw==", "bodyText": "Yes 100 is the max.\nRegarding the alerts I would add them in a different PR as already did for the bridge metrics.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r462552507", "createdAt": "2020-07-29T19:59:40Z", "author": {"login": "ppatierno"}, "path": "examples/metrics/grafana-dashboards/strimzi-cruise-control.json", "diffHunk": "@@ -0,0 +1,2062 @@\n+{\n+  \"__inputs\": [\n+    {\n+      \"name\": \"DS_PROMETHEUS\",\n+      \"label\": \"Prometheus\",\n+      \"description\": \"\",\n+      \"type\": \"datasource\",\n+      \"pluginId\": \"prometheus\",\n+      \"pluginName\": \"Prometheus\"\n+    }\n+  ],\n+  \"__requires\": [\n+    {\n+      \"type\": \"grafana\",\n+      \"id\": \"grafana\",\n+      \"name\": \"Grafana\",\n+      \"version\": \"6.3.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"graph\",\n+      \"name\": \"Graph\",\n+      \"version\": \"\"\n+    },\n+    {\n+      \"type\": \"datasource\",\n+      \"id\": \"prometheus\",\n+      \"name\": \"Prometheus\",\n+      \"version\": \"1.0.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"singlestat\",\n+      \"name\": \"Singlestat\",\n+      \"version\": \"\"\n+    }\n+  ],\n+  \"annotations\": {\n+    \"list\": [\n+      {\n+        \"builtIn\": 1,\n+        \"datasource\": \"-- Grafana --\",\n+        \"enable\": true,\n+        \"hide\": true,\n+        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n+        \"name\": \"Annotations & Alerts\",\n+        \"type\": \"dashboard\"\n+      }\n+    ]\n+  },\n+  \"editable\": true,\n+  \"gnetId\": null,\n+  \"graphTooltip\": 0,\n+  \"id\": null,\n+  \"iteration\": 1596032501954,\n+  \"links\": [],\n+  \"panels\": [\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#d44a3a\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#299c46\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"The number of snapshot windows that is monitored\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 0,\n+        \"y\": 0\n+      },\n+      \"id\": 46,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"repeat\": null,\n+      \"repeatDirection\": \"h\",\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_total_monitored_windows_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"0,2\",\n+      \"title\": \"Total Monitored Windows\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"#e5ac0e\",\n+        \"#bf1b00\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Number of valid windows\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 4,\n+        \"y\": 0\n+      },\n+      \"id\": 36,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_valid_windows_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Valid Windows\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Number of ongoing executions running for proposals or rebalance\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 8,\n+        \"y\": 0\n+      },\n+      \"id\": 38,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_executor_ongoing_execution_non_kafka_assigner_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Ongoing Execution\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Balancedness Score\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ4NTExOA=="}, "originalCommit": {"oid": "5c387808483f7d1e283db00938adcf173ec7ec2f"}, "originalPosition": 320}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAxNjY2Ng==", "bodyText": "I think it is useful to have this metric as a one-stop-shop for quickly checking the state of the cluster. To be clear this is the current balancedness score of the cluster as calculated by the anomaly detector (using KafkaCruiseControlUtils.balancednessCostByGoal CC method) and isupdated every 5 mins by default (can be changed by setting anomaly.detection.interval.ms). I wonder if we need some docs to describe how this is calculated and what it means?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r463016666", "createdAt": "2020-07-30T13:59:09Z", "author": {"login": "tomncooper"}, "path": "examples/metrics/grafana-dashboards/strimzi-cruise-control.json", "diffHunk": "@@ -0,0 +1,2062 @@\n+{\n+  \"__inputs\": [\n+    {\n+      \"name\": \"DS_PROMETHEUS\",\n+      \"label\": \"Prometheus\",\n+      \"description\": \"\",\n+      \"type\": \"datasource\",\n+      \"pluginId\": \"prometheus\",\n+      \"pluginName\": \"Prometheus\"\n+    }\n+  ],\n+  \"__requires\": [\n+    {\n+      \"type\": \"grafana\",\n+      \"id\": \"grafana\",\n+      \"name\": \"Grafana\",\n+      \"version\": \"6.3.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"graph\",\n+      \"name\": \"Graph\",\n+      \"version\": \"\"\n+    },\n+    {\n+      \"type\": \"datasource\",\n+      \"id\": \"prometheus\",\n+      \"name\": \"Prometheus\",\n+      \"version\": \"1.0.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"singlestat\",\n+      \"name\": \"Singlestat\",\n+      \"version\": \"\"\n+    }\n+  ],\n+  \"annotations\": {\n+    \"list\": [\n+      {\n+        \"builtIn\": 1,\n+        \"datasource\": \"-- Grafana --\",\n+        \"enable\": true,\n+        \"hide\": true,\n+        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n+        \"name\": \"Annotations & Alerts\",\n+        \"type\": \"dashboard\"\n+      }\n+    ]\n+  },\n+  \"editable\": true,\n+  \"gnetId\": null,\n+  \"graphTooltip\": 0,\n+  \"id\": null,\n+  \"iteration\": 1596032501954,\n+  \"links\": [],\n+  \"panels\": [\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#d44a3a\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#299c46\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"The number of snapshot windows that is monitored\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 0,\n+        \"y\": 0\n+      },\n+      \"id\": 46,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"repeat\": null,\n+      \"repeatDirection\": \"h\",\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_total_monitored_windows_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"0,2\",\n+      \"title\": \"Total Monitored Windows\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"#e5ac0e\",\n+        \"#bf1b00\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Number of valid windows\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 4,\n+        \"y\": 0\n+      },\n+      \"id\": 36,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_valid_windows_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Valid Windows\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Number of ongoing executions running for proposals or rebalance\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 8,\n+        \"y\": 0\n+      },\n+      \"id\": 38,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_executor_ongoing_execution_non_kafka_assigner_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Ongoing Execution\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Balancedness Score\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ4NTExOA=="}, "originalCommit": {"oid": "5c387808483f7d1e283db00938adcf173ec7ec2f"}, "originalPosition": 320}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE5Njk4OA==", "bodyText": "So can we add this stuff to the description?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r463196988", "createdAt": "2020-07-30T18:40:46Z", "author": {"login": "scholzj"}, "path": "examples/metrics/grafana-dashboards/strimzi-cruise-control.json", "diffHunk": "@@ -0,0 +1,2062 @@\n+{\n+  \"__inputs\": [\n+    {\n+      \"name\": \"DS_PROMETHEUS\",\n+      \"label\": \"Prometheus\",\n+      \"description\": \"\",\n+      \"type\": \"datasource\",\n+      \"pluginId\": \"prometheus\",\n+      \"pluginName\": \"Prometheus\"\n+    }\n+  ],\n+  \"__requires\": [\n+    {\n+      \"type\": \"grafana\",\n+      \"id\": \"grafana\",\n+      \"name\": \"Grafana\",\n+      \"version\": \"6.3.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"graph\",\n+      \"name\": \"Graph\",\n+      \"version\": \"\"\n+    },\n+    {\n+      \"type\": \"datasource\",\n+      \"id\": \"prometheus\",\n+      \"name\": \"Prometheus\",\n+      \"version\": \"1.0.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"singlestat\",\n+      \"name\": \"Singlestat\",\n+      \"version\": \"\"\n+    }\n+  ],\n+  \"annotations\": {\n+    \"list\": [\n+      {\n+        \"builtIn\": 1,\n+        \"datasource\": \"-- Grafana --\",\n+        \"enable\": true,\n+        \"hide\": true,\n+        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n+        \"name\": \"Annotations & Alerts\",\n+        \"type\": \"dashboard\"\n+      }\n+    ]\n+  },\n+  \"editable\": true,\n+  \"gnetId\": null,\n+  \"graphTooltip\": 0,\n+  \"id\": null,\n+  \"iteration\": 1596032501954,\n+  \"links\": [],\n+  \"panels\": [\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#d44a3a\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#299c46\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"The number of snapshot windows that is monitored\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 0,\n+        \"y\": 0\n+      },\n+      \"id\": 46,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"repeat\": null,\n+      \"repeatDirection\": \"h\",\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_total_monitored_windows_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"0,2\",\n+      \"title\": \"Total Monitored Windows\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"#e5ac0e\",\n+        \"#bf1b00\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Number of valid windows\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 4,\n+        \"y\": 0\n+      },\n+      \"id\": 36,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_valid_windows_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Valid Windows\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Number of ongoing executions running for proposals or rebalance\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 8,\n+        \"y\": 0\n+      },\n+      \"id\": 38,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_executor_ongoing_execution_non_kafka_assigner_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Ongoing Execution\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Balancedness Score\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ4NTExOA=="}, "originalCommit": {"oid": "5c387808483f7d1e283db00938adcf173ec7ec2f"}, "originalPosition": 320}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NzQxNDQxOnYy", "diffSide": "RIGHT", "path": "examples/metrics/grafana-dashboards/strimzi-cruise-control.json", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxODowMDowNFrOG5D4Bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxODozOTo1NlrOG5vRuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ4NTUxMQ==", "bodyText": "What does valid window mean?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r462485511", "createdAt": "2020-07-29T18:00:04Z", "author": {"login": "scholzj"}, "path": "examples/metrics/grafana-dashboards/strimzi-cruise-control.json", "diffHunk": "@@ -0,0 +1,2062 @@\n+{\n+  \"__inputs\": [\n+    {\n+      \"name\": \"DS_PROMETHEUS\",\n+      \"label\": \"Prometheus\",\n+      \"description\": \"\",\n+      \"type\": \"datasource\",\n+      \"pluginId\": \"prometheus\",\n+      \"pluginName\": \"Prometheus\"\n+    }\n+  ],\n+  \"__requires\": [\n+    {\n+      \"type\": \"grafana\",\n+      \"id\": \"grafana\",\n+      \"name\": \"Grafana\",\n+      \"version\": \"6.3.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"graph\",\n+      \"name\": \"Graph\",\n+      \"version\": \"\"\n+    },\n+    {\n+      \"type\": \"datasource\",\n+      \"id\": \"prometheus\",\n+      \"name\": \"Prometheus\",\n+      \"version\": \"1.0.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"singlestat\",\n+      \"name\": \"Singlestat\",\n+      \"version\": \"\"\n+    }\n+  ],\n+  \"annotations\": {\n+    \"list\": [\n+      {\n+        \"builtIn\": 1,\n+        \"datasource\": \"-- Grafana --\",\n+        \"enable\": true,\n+        \"hide\": true,\n+        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n+        \"name\": \"Annotations & Alerts\",\n+        \"type\": \"dashboard\"\n+      }\n+    ]\n+  },\n+  \"editable\": true,\n+  \"gnetId\": null,\n+  \"graphTooltip\": 0,\n+  \"id\": null,\n+  \"iteration\": 1596032501954,\n+  \"links\": [],\n+  \"panels\": [\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#d44a3a\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#299c46\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"The number of snapshot windows that is monitored\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 0,\n+        \"y\": 0\n+      },\n+      \"id\": 46,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"repeat\": null,\n+      \"repeatDirection\": \"h\",\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_total_monitored_windows_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"0,2\",\n+      \"title\": \"Total Monitored Windows\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"#e5ac0e\",\n+        \"#bf1b00\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Number of valid windows\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c387808483f7d1e283db00938adcf173ec7ec2f"}, "originalPosition": 154}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUzODI5OA==", "bodyText": "It should be a time window where there are enough samples for computing a proposal, but I am sure @tomncooper can say more.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r462538298", "createdAt": "2020-07-29T19:32:51Z", "author": {"login": "ppatierno"}, "path": "examples/metrics/grafana-dashboards/strimzi-cruise-control.json", "diffHunk": "@@ -0,0 +1,2062 @@\n+{\n+  \"__inputs\": [\n+    {\n+      \"name\": \"DS_PROMETHEUS\",\n+      \"label\": \"Prometheus\",\n+      \"description\": \"\",\n+      \"type\": \"datasource\",\n+      \"pluginId\": \"prometheus\",\n+      \"pluginName\": \"Prometheus\"\n+    }\n+  ],\n+  \"__requires\": [\n+    {\n+      \"type\": \"grafana\",\n+      \"id\": \"grafana\",\n+      \"name\": \"Grafana\",\n+      \"version\": \"6.3.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"graph\",\n+      \"name\": \"Graph\",\n+      \"version\": \"\"\n+    },\n+    {\n+      \"type\": \"datasource\",\n+      \"id\": \"prometheus\",\n+      \"name\": \"Prometheus\",\n+      \"version\": \"1.0.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"singlestat\",\n+      \"name\": \"Singlestat\",\n+      \"version\": \"\"\n+    }\n+  ],\n+  \"annotations\": {\n+    \"list\": [\n+      {\n+        \"builtIn\": 1,\n+        \"datasource\": \"-- Grafana --\",\n+        \"enable\": true,\n+        \"hide\": true,\n+        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n+        \"name\": \"Annotations & Alerts\",\n+        \"type\": \"dashboard\"\n+      }\n+    ]\n+  },\n+  \"editable\": true,\n+  \"gnetId\": null,\n+  \"graphTooltip\": 0,\n+  \"id\": null,\n+  \"iteration\": 1596032501954,\n+  \"links\": [],\n+  \"panels\": [\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#d44a3a\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#299c46\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"The number of snapshot windows that is monitored\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 0,\n+        \"y\": 0\n+      },\n+      \"id\": 46,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"repeat\": null,\n+      \"repeatDirection\": \"h\",\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_total_monitored_windows_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"0,2\",\n+      \"title\": \"Total Monitored Windows\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"#e5ac0e\",\n+        \"#bf1b00\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Number of valid windows\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ4NTUxMQ=="}, "originalCommit": {"oid": "5c387808483f7d1e283db00938adcf173ec7ec2f"}, "originalPosition": 154}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk3MjA3MA==", "bodyText": "Each window has a number of samples after which it is considered \"valid\". The user can also configure how many windows CC should hold onto. Details here", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r462972070", "createdAt": "2020-07-30T12:50:20Z", "author": {"login": "tomncooper"}, "path": "examples/metrics/grafana-dashboards/strimzi-cruise-control.json", "diffHunk": "@@ -0,0 +1,2062 @@\n+{\n+  \"__inputs\": [\n+    {\n+      \"name\": \"DS_PROMETHEUS\",\n+      \"label\": \"Prometheus\",\n+      \"description\": \"\",\n+      \"type\": \"datasource\",\n+      \"pluginId\": \"prometheus\",\n+      \"pluginName\": \"Prometheus\"\n+    }\n+  ],\n+  \"__requires\": [\n+    {\n+      \"type\": \"grafana\",\n+      \"id\": \"grafana\",\n+      \"name\": \"Grafana\",\n+      \"version\": \"6.3.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"graph\",\n+      \"name\": \"Graph\",\n+      \"version\": \"\"\n+    },\n+    {\n+      \"type\": \"datasource\",\n+      \"id\": \"prometheus\",\n+      \"name\": \"Prometheus\",\n+      \"version\": \"1.0.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"singlestat\",\n+      \"name\": \"Singlestat\",\n+      \"version\": \"\"\n+    }\n+  ],\n+  \"annotations\": {\n+    \"list\": [\n+      {\n+        \"builtIn\": 1,\n+        \"datasource\": \"-- Grafana --\",\n+        \"enable\": true,\n+        \"hide\": true,\n+        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n+        \"name\": \"Annotations & Alerts\",\n+        \"type\": \"dashboard\"\n+      }\n+    ]\n+  },\n+  \"editable\": true,\n+  \"gnetId\": null,\n+  \"graphTooltip\": 0,\n+  \"id\": null,\n+  \"iteration\": 1596032501954,\n+  \"links\": [],\n+  \"panels\": [\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#d44a3a\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#299c46\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"The number of snapshot windows that is monitored\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 0,\n+        \"y\": 0\n+      },\n+      \"id\": 46,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"repeat\": null,\n+      \"repeatDirection\": \"h\",\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_total_monitored_windows_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"0,2\",\n+      \"title\": \"Total Monitored Windows\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"#e5ac0e\",\n+        \"#bf1b00\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Number of valid windows\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ4NTUxMQ=="}, "originalCommit": {"oid": "5c387808483f7d1e283db00938adcf173ec7ec2f"}, "originalPosition": 154}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE5NjYwMA==", "bodyText": "So can we add it to the description?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r463196600", "createdAt": "2020-07-30T18:39:56Z", "author": {"login": "scholzj"}, "path": "examples/metrics/grafana-dashboards/strimzi-cruise-control.json", "diffHunk": "@@ -0,0 +1,2062 @@\n+{\n+  \"__inputs\": [\n+    {\n+      \"name\": \"DS_PROMETHEUS\",\n+      \"label\": \"Prometheus\",\n+      \"description\": \"\",\n+      \"type\": \"datasource\",\n+      \"pluginId\": \"prometheus\",\n+      \"pluginName\": \"Prometheus\"\n+    }\n+  ],\n+  \"__requires\": [\n+    {\n+      \"type\": \"grafana\",\n+      \"id\": \"grafana\",\n+      \"name\": \"Grafana\",\n+      \"version\": \"6.3.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"graph\",\n+      \"name\": \"Graph\",\n+      \"version\": \"\"\n+    },\n+    {\n+      \"type\": \"datasource\",\n+      \"id\": \"prometheus\",\n+      \"name\": \"Prometheus\",\n+      \"version\": \"1.0.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"singlestat\",\n+      \"name\": \"Singlestat\",\n+      \"version\": \"\"\n+    }\n+  ],\n+  \"annotations\": {\n+    \"list\": [\n+      {\n+        \"builtIn\": 1,\n+        \"datasource\": \"-- Grafana --\",\n+        \"enable\": true,\n+        \"hide\": true,\n+        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n+        \"name\": \"Annotations & Alerts\",\n+        \"type\": \"dashboard\"\n+      }\n+    ]\n+  },\n+  \"editable\": true,\n+  \"gnetId\": null,\n+  \"graphTooltip\": 0,\n+  \"id\": null,\n+  \"iteration\": 1596032501954,\n+  \"links\": [],\n+  \"panels\": [\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#d44a3a\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#299c46\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"The number of snapshot windows that is monitored\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 0,\n+        \"y\": 0\n+      },\n+      \"id\": 46,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"repeat\": null,\n+      \"repeatDirection\": \"h\",\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_total_monitored_windows_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"0,2\",\n+      \"title\": \"Total Monitored Windows\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"#e5ac0e\",\n+        \"#bf1b00\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Number of valid windows\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ4NTUxMQ=="}, "originalCommit": {"oid": "5c387808483f7d1e283db00938adcf173ec7ec2f"}, "originalPosition": 154}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NzQxNjI4OnYy", "diffSide": "RIGHT", "path": "examples/metrics/grafana-dashboards/strimzi-cruise-control.json", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxODowMDozNVrOG5D5Pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxOToxMjo1NFrOG5Gbaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ4NTgyMw==", "bodyText": "Should it be are monitored? (just guessing)\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  \"description\": \"The number of snapshot windows that is monitored\",\n          \n          \n            \n                  \"description\": \"The number of snapshot windows that is monitored\",", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r462485823", "createdAt": "2020-07-29T18:00:35Z", "author": {"login": "scholzj"}, "path": "examples/metrics/grafana-dashboards/strimzi-cruise-control.json", "diffHunk": "@@ -0,0 +1,2062 @@\n+{\n+  \"__inputs\": [\n+    {\n+      \"name\": \"DS_PROMETHEUS\",\n+      \"label\": \"Prometheus\",\n+      \"description\": \"\",\n+      \"type\": \"datasource\",\n+      \"pluginId\": \"prometheus\",\n+      \"pluginName\": \"Prometheus\"\n+    }\n+  ],\n+  \"__requires\": [\n+    {\n+      \"type\": \"grafana\",\n+      \"id\": \"grafana\",\n+      \"name\": \"Grafana\",\n+      \"version\": \"6.3.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"graph\",\n+      \"name\": \"Graph\",\n+      \"version\": \"\"\n+    },\n+    {\n+      \"type\": \"datasource\",\n+      \"id\": \"prometheus\",\n+      \"name\": \"Prometheus\",\n+      \"version\": \"1.0.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"singlestat\",\n+      \"name\": \"Singlestat\",\n+      \"version\": \"\"\n+    }\n+  ],\n+  \"annotations\": {\n+    \"list\": [\n+      {\n+        \"builtIn\": 1,\n+        \"datasource\": \"-- Grafana --\",\n+        \"enable\": true,\n+        \"hide\": true,\n+        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n+        \"name\": \"Annotations & Alerts\",\n+        \"type\": \"dashboard\"\n+      }\n+    ]\n+  },\n+  \"editable\": true,\n+  \"gnetId\": null,\n+  \"graphTooltip\": 0,\n+  \"id\": null,\n+  \"iteration\": 1596032501954,\n+  \"links\": [],\n+  \"panels\": [\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#d44a3a\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#299c46\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"The number of snapshot windows that is monitored\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c387808483f7d1e283db00938adcf173ec7ec2f"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUyNzMzOQ==", "bodyText": "You are suggesting the same :-) ... but I got what you want ;-)", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r462527339", "createdAt": "2020-07-29T19:12:54Z", "author": {"login": "ppatierno"}, "path": "examples/metrics/grafana-dashboards/strimzi-cruise-control.json", "diffHunk": "@@ -0,0 +1,2062 @@\n+{\n+  \"__inputs\": [\n+    {\n+      \"name\": \"DS_PROMETHEUS\",\n+      \"label\": \"Prometheus\",\n+      \"description\": \"\",\n+      \"type\": \"datasource\",\n+      \"pluginId\": \"prometheus\",\n+      \"pluginName\": \"Prometheus\"\n+    }\n+  ],\n+  \"__requires\": [\n+    {\n+      \"type\": \"grafana\",\n+      \"id\": \"grafana\",\n+      \"name\": \"Grafana\",\n+      \"version\": \"6.3.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"graph\",\n+      \"name\": \"Graph\",\n+      \"version\": \"\"\n+    },\n+    {\n+      \"type\": \"datasource\",\n+      \"id\": \"prometheus\",\n+      \"name\": \"Prometheus\",\n+      \"version\": \"1.0.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"singlestat\",\n+      \"name\": \"Singlestat\",\n+      \"version\": \"\"\n+    }\n+  ],\n+  \"annotations\": {\n+    \"list\": [\n+      {\n+        \"builtIn\": 1,\n+        \"datasource\": \"-- Grafana --\",\n+        \"enable\": true,\n+        \"hide\": true,\n+        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n+        \"name\": \"Annotations & Alerts\",\n+        \"type\": \"dashboard\"\n+      }\n+    ]\n+  },\n+  \"editable\": true,\n+  \"gnetId\": null,\n+  \"graphTooltip\": 0,\n+  \"id\": null,\n+  \"iteration\": 1596032501954,\n+  \"links\": [],\n+  \"panels\": [\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#d44a3a\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#299c46\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"The number of snapshot windows that is monitored\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ4NTgyMw=="}, "originalCommit": {"oid": "5c387808483f7d1e283db00938adcf173ec7ec2f"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NzQxODQ1OnYy", "diffSide": "RIGHT", "path": "examples/metrics/grafana-dashboards/strimzi-cruise-control.json", "isResolved": true, "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxODowMToxOFrOG5D6tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxMzoxMToxMlrOG6H_yQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ4NjE5OQ==", "bodyText": "What does this mean? That the disk died?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r462486199", "createdAt": "2020-07-29T18:01:18Z", "author": {"login": "scholzj"}, "path": "examples/metrics/grafana-dashboards/strimzi-cruise-control.json", "diffHunk": "@@ -0,0 +1,2062 @@\n+{\n+  \"__inputs\": [\n+    {\n+      \"name\": \"DS_PROMETHEUS\",\n+      \"label\": \"Prometheus\",\n+      \"description\": \"\",\n+      \"type\": \"datasource\",\n+      \"pluginId\": \"prometheus\",\n+      \"pluginName\": \"Prometheus\"\n+    }\n+  ],\n+  \"__requires\": [\n+    {\n+      \"type\": \"grafana\",\n+      \"id\": \"grafana\",\n+      \"name\": \"Grafana\",\n+      \"version\": \"6.3.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"graph\",\n+      \"name\": \"Graph\",\n+      \"version\": \"\"\n+    },\n+    {\n+      \"type\": \"datasource\",\n+      \"id\": \"prometheus\",\n+      \"name\": \"Prometheus\",\n+      \"version\": \"1.0.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"singlestat\",\n+      \"name\": \"Singlestat\",\n+      \"version\": \"\"\n+    }\n+  ],\n+  \"annotations\": {\n+    \"list\": [\n+      {\n+        \"builtIn\": 1,\n+        \"datasource\": \"-- Grafana --\",\n+        \"enable\": true,\n+        \"hide\": true,\n+        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n+        \"name\": \"Annotations & Alerts\",\n+        \"type\": \"dashboard\"\n+      }\n+    ]\n+  },\n+  \"editable\": true,\n+  \"gnetId\": null,\n+  \"graphTooltip\": 0,\n+  \"id\": null,\n+  \"iteration\": 1596032501954,\n+  \"links\": [],\n+  \"panels\": [\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#d44a3a\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#299c46\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"The number of snapshot windows that is monitored\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 0,\n+        \"y\": 0\n+      },\n+      \"id\": 46,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"repeat\": null,\n+      \"repeatDirection\": \"h\",\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_total_monitored_windows_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"0,2\",\n+      \"title\": \"Total Monitored Windows\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"#e5ac0e\",\n+        \"#bf1b00\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Number of valid windows\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 4,\n+        \"y\": 0\n+      },\n+      \"id\": 36,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_valid_windows_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Valid Windows\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Number of ongoing executions running for proposals or rebalance\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 8,\n+        \"y\": 0\n+      },\n+      \"id\": 38,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_executor_ongoing_execution_non_kafka_assigner_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Ongoing Execution\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Balancedness Score\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 12,\n+        \"y\": 0\n+      },\n+      \"id\": 116,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_anomalydetector_balancedness_score_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Balancedness Score\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Monitored Partition Percentage\",\n+      \"format\": \"percentunit\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 16,\n+        \"y\": 0\n+      },\n+      \"id\": 115,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_monitored_partitions_percentage_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Monitored Partition\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"gridPos\": {\n+        \"h\": 1,\n+        \"w\": 24,\n+        \"x\": 0,\n+        \"y\": 4\n+      },\n+      \"id\": 114,\n+      \"title\": \"Cruise Control\",\n+      \"type\": \"row\"\n+    },\n+    {\n+      \"aliasColors\": {},\n+      \"bars\": false,\n+      \"dashLength\": 10,\n+      \"dashes\": false,\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Goal Violation Rate\",\n+      \"fill\": 1,\n+      \"fillGradient\": 0,\n+      \"gridPos\": {\n+        \"h\": 8,\n+        \"w\": 12,\n+        \"x\": 0,\n+        \"y\": 5\n+      },\n+      \"id\": 106,\n+      \"legend\": {\n+        \"alignAsTable\": false,\n+        \"avg\": false,\n+        \"current\": false,\n+        \"hideEmpty\": false,\n+        \"hideZero\": false,\n+        \"max\": false,\n+        \"min\": false,\n+        \"rightSide\": false,\n+        \"show\": true,\n+        \"total\": false,\n+        \"values\": false\n+      },\n+      \"lines\": true,\n+      \"linewidth\": 1,\n+      \"links\": [],\n+      \"nullPointMode\": \"null\",\n+      \"options\": {\n+        \"dataLinks\": []\n+      },\n+      \"paceLength\": 10,\n+      \"percentage\": false,\n+      \"pointradius\": 5,\n+      \"points\": false,\n+      \"renderer\": \"flot\",\n+      \"seriesOverrides\": [],\n+      \"spaceLength\": 10,\n+      \"stack\": false,\n+      \"steppedLine\": false,\n+      \"targets\": [\n+        {\n+          \"expr\": \"sum(irate(kafka_cruisecontrol_anomalydetector_goal_violation_rate_count{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\",kubernetes_pod_name=~\\\"$strimzi_cluster_name-cruise-control-.*\\\"}[1m]))\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"instant\": false,\n+          \"interval\": \"\",\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"Goal Violation Rate\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": [],\n+      \"timeFrom\": null,\n+      \"timeRegions\": [],\n+      \"timeShift\": null,\n+      \"title\": \"Goal Violation Rate\",\n+      \"tooltip\": {\n+        \"shared\": true,\n+        \"sort\": 0,\n+        \"value_type\": \"individual\"\n+      },\n+      \"type\": \"graph\",\n+      \"xaxis\": {\n+        \"buckets\": null,\n+        \"mode\": \"time\",\n+        \"name\": null,\n+        \"show\": true,\n+        \"values\": []\n+      },\n+      \"yaxes\": [\n+        {\n+          \"decimals\": null,\n+          \"format\": \"short\",\n+          \"label\": \"violations/sec\",\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        },\n+        {\n+          \"format\": \"short\",\n+          \"label\": null,\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        }\n+      ],\n+      \"yaxis\": {\n+        \"align\": false,\n+        \"alignLevel\": null\n+      }\n+    },\n+    {\n+      \"aliasColors\": {},\n+      \"bars\": false,\n+      \"dashLength\": 10,\n+      \"dashes\": false,\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Disk Failure Rate\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c387808483f7d1e283db00938adcf173ec7ec2f"}, "originalPosition": 592}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU0MzA0MQ==", "bodyText": "So as far as I understood from the DiskFailureDetector code, it periodically tries to get info on the log dirs on the brokers (using the Admin Client API describeLogDirs) and the callback is able to provide info about errors which are potential disk failures.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r462543041", "createdAt": "2020-07-29T19:41:28Z", "author": {"login": "ppatierno"}, "path": "examples/metrics/grafana-dashboards/strimzi-cruise-control.json", "diffHunk": "@@ -0,0 +1,2062 @@\n+{\n+  \"__inputs\": [\n+    {\n+      \"name\": \"DS_PROMETHEUS\",\n+      \"label\": \"Prometheus\",\n+      \"description\": \"\",\n+      \"type\": \"datasource\",\n+      \"pluginId\": \"prometheus\",\n+      \"pluginName\": \"Prometheus\"\n+    }\n+  ],\n+  \"__requires\": [\n+    {\n+      \"type\": \"grafana\",\n+      \"id\": \"grafana\",\n+      \"name\": \"Grafana\",\n+      \"version\": \"6.3.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"graph\",\n+      \"name\": \"Graph\",\n+      \"version\": \"\"\n+    },\n+    {\n+      \"type\": \"datasource\",\n+      \"id\": \"prometheus\",\n+      \"name\": \"Prometheus\",\n+      \"version\": \"1.0.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"singlestat\",\n+      \"name\": \"Singlestat\",\n+      \"version\": \"\"\n+    }\n+  ],\n+  \"annotations\": {\n+    \"list\": [\n+      {\n+        \"builtIn\": 1,\n+        \"datasource\": \"-- Grafana --\",\n+        \"enable\": true,\n+        \"hide\": true,\n+        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n+        \"name\": \"Annotations & Alerts\",\n+        \"type\": \"dashboard\"\n+      }\n+    ]\n+  },\n+  \"editable\": true,\n+  \"gnetId\": null,\n+  \"graphTooltip\": 0,\n+  \"id\": null,\n+  \"iteration\": 1596032501954,\n+  \"links\": [],\n+  \"panels\": [\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#d44a3a\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#299c46\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"The number of snapshot windows that is monitored\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 0,\n+        \"y\": 0\n+      },\n+      \"id\": 46,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"repeat\": null,\n+      \"repeatDirection\": \"h\",\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_total_monitored_windows_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"0,2\",\n+      \"title\": \"Total Monitored Windows\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"#e5ac0e\",\n+        \"#bf1b00\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Number of valid windows\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 4,\n+        \"y\": 0\n+      },\n+      \"id\": 36,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_valid_windows_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Valid Windows\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Number of ongoing executions running for proposals or rebalance\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 8,\n+        \"y\": 0\n+      },\n+      \"id\": 38,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_executor_ongoing_execution_non_kafka_assigner_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Ongoing Execution\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Balancedness Score\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 12,\n+        \"y\": 0\n+      },\n+      \"id\": 116,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_anomalydetector_balancedness_score_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Balancedness Score\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Monitored Partition Percentage\",\n+      \"format\": \"percentunit\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 16,\n+        \"y\": 0\n+      },\n+      \"id\": 115,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_monitored_partitions_percentage_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Monitored Partition\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"gridPos\": {\n+        \"h\": 1,\n+        \"w\": 24,\n+        \"x\": 0,\n+        \"y\": 4\n+      },\n+      \"id\": 114,\n+      \"title\": \"Cruise Control\",\n+      \"type\": \"row\"\n+    },\n+    {\n+      \"aliasColors\": {},\n+      \"bars\": false,\n+      \"dashLength\": 10,\n+      \"dashes\": false,\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Goal Violation Rate\",\n+      \"fill\": 1,\n+      \"fillGradient\": 0,\n+      \"gridPos\": {\n+        \"h\": 8,\n+        \"w\": 12,\n+        \"x\": 0,\n+        \"y\": 5\n+      },\n+      \"id\": 106,\n+      \"legend\": {\n+        \"alignAsTable\": false,\n+        \"avg\": false,\n+        \"current\": false,\n+        \"hideEmpty\": false,\n+        \"hideZero\": false,\n+        \"max\": false,\n+        \"min\": false,\n+        \"rightSide\": false,\n+        \"show\": true,\n+        \"total\": false,\n+        \"values\": false\n+      },\n+      \"lines\": true,\n+      \"linewidth\": 1,\n+      \"links\": [],\n+      \"nullPointMode\": \"null\",\n+      \"options\": {\n+        \"dataLinks\": []\n+      },\n+      \"paceLength\": 10,\n+      \"percentage\": false,\n+      \"pointradius\": 5,\n+      \"points\": false,\n+      \"renderer\": \"flot\",\n+      \"seriesOverrides\": [],\n+      \"spaceLength\": 10,\n+      \"stack\": false,\n+      \"steppedLine\": false,\n+      \"targets\": [\n+        {\n+          \"expr\": \"sum(irate(kafka_cruisecontrol_anomalydetector_goal_violation_rate_count{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\",kubernetes_pod_name=~\\\"$strimzi_cluster_name-cruise-control-.*\\\"}[1m]))\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"instant\": false,\n+          \"interval\": \"\",\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"Goal Violation Rate\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": [],\n+      \"timeFrom\": null,\n+      \"timeRegions\": [],\n+      \"timeShift\": null,\n+      \"title\": \"Goal Violation Rate\",\n+      \"tooltip\": {\n+        \"shared\": true,\n+        \"sort\": 0,\n+        \"value_type\": \"individual\"\n+      },\n+      \"type\": \"graph\",\n+      \"xaxis\": {\n+        \"buckets\": null,\n+        \"mode\": \"time\",\n+        \"name\": null,\n+        \"show\": true,\n+        \"values\": []\n+      },\n+      \"yaxes\": [\n+        {\n+          \"decimals\": null,\n+          \"format\": \"short\",\n+          \"label\": \"violations/sec\",\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        },\n+        {\n+          \"format\": \"short\",\n+          \"label\": null,\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        }\n+      ],\n+      \"yaxis\": {\n+        \"align\": false,\n+        \"alignLevel\": null\n+      }\n+    },\n+    {\n+      \"aliasColors\": {},\n+      \"bars\": false,\n+      \"dashLength\": 10,\n+      \"dashes\": false,\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Disk Failure Rate\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ4NjE5OQ=="}, "originalCommit": {"oid": "5c387808483f7d1e283db00938adcf173ec7ec2f"}, "originalPosition": 592}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE5Nzc1NA==", "bodyText": "I think this is a bit scary then ... what about calling it Failed disk queries or something like that?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r463197754", "createdAt": "2020-07-30T18:42:14Z", "author": {"login": "scholzj"}, "path": "examples/metrics/grafana-dashboards/strimzi-cruise-control.json", "diffHunk": "@@ -0,0 +1,2062 @@\n+{\n+  \"__inputs\": [\n+    {\n+      \"name\": \"DS_PROMETHEUS\",\n+      \"label\": \"Prometheus\",\n+      \"description\": \"\",\n+      \"type\": \"datasource\",\n+      \"pluginId\": \"prometheus\",\n+      \"pluginName\": \"Prometheus\"\n+    }\n+  ],\n+  \"__requires\": [\n+    {\n+      \"type\": \"grafana\",\n+      \"id\": \"grafana\",\n+      \"name\": \"Grafana\",\n+      \"version\": \"6.3.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"graph\",\n+      \"name\": \"Graph\",\n+      \"version\": \"\"\n+    },\n+    {\n+      \"type\": \"datasource\",\n+      \"id\": \"prometheus\",\n+      \"name\": \"Prometheus\",\n+      \"version\": \"1.0.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"singlestat\",\n+      \"name\": \"Singlestat\",\n+      \"version\": \"\"\n+    }\n+  ],\n+  \"annotations\": {\n+    \"list\": [\n+      {\n+        \"builtIn\": 1,\n+        \"datasource\": \"-- Grafana --\",\n+        \"enable\": true,\n+        \"hide\": true,\n+        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n+        \"name\": \"Annotations & Alerts\",\n+        \"type\": \"dashboard\"\n+      }\n+    ]\n+  },\n+  \"editable\": true,\n+  \"gnetId\": null,\n+  \"graphTooltip\": 0,\n+  \"id\": null,\n+  \"iteration\": 1596032501954,\n+  \"links\": [],\n+  \"panels\": [\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#d44a3a\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#299c46\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"The number of snapshot windows that is monitored\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 0,\n+        \"y\": 0\n+      },\n+      \"id\": 46,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"repeat\": null,\n+      \"repeatDirection\": \"h\",\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_total_monitored_windows_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"0,2\",\n+      \"title\": \"Total Monitored Windows\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"#e5ac0e\",\n+        \"#bf1b00\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Number of valid windows\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 4,\n+        \"y\": 0\n+      },\n+      \"id\": 36,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_valid_windows_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Valid Windows\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Number of ongoing executions running for proposals or rebalance\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 8,\n+        \"y\": 0\n+      },\n+      \"id\": 38,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_executor_ongoing_execution_non_kafka_assigner_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Ongoing Execution\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Balancedness Score\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 12,\n+        \"y\": 0\n+      },\n+      \"id\": 116,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_anomalydetector_balancedness_score_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Balancedness Score\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Monitored Partition Percentage\",\n+      \"format\": \"percentunit\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 16,\n+        \"y\": 0\n+      },\n+      \"id\": 115,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_monitored_partitions_percentage_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Monitored Partition\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"gridPos\": {\n+        \"h\": 1,\n+        \"w\": 24,\n+        \"x\": 0,\n+        \"y\": 4\n+      },\n+      \"id\": 114,\n+      \"title\": \"Cruise Control\",\n+      \"type\": \"row\"\n+    },\n+    {\n+      \"aliasColors\": {},\n+      \"bars\": false,\n+      \"dashLength\": 10,\n+      \"dashes\": false,\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Goal Violation Rate\",\n+      \"fill\": 1,\n+      \"fillGradient\": 0,\n+      \"gridPos\": {\n+        \"h\": 8,\n+        \"w\": 12,\n+        \"x\": 0,\n+        \"y\": 5\n+      },\n+      \"id\": 106,\n+      \"legend\": {\n+        \"alignAsTable\": false,\n+        \"avg\": false,\n+        \"current\": false,\n+        \"hideEmpty\": false,\n+        \"hideZero\": false,\n+        \"max\": false,\n+        \"min\": false,\n+        \"rightSide\": false,\n+        \"show\": true,\n+        \"total\": false,\n+        \"values\": false\n+      },\n+      \"lines\": true,\n+      \"linewidth\": 1,\n+      \"links\": [],\n+      \"nullPointMode\": \"null\",\n+      \"options\": {\n+        \"dataLinks\": []\n+      },\n+      \"paceLength\": 10,\n+      \"percentage\": false,\n+      \"pointradius\": 5,\n+      \"points\": false,\n+      \"renderer\": \"flot\",\n+      \"seriesOverrides\": [],\n+      \"spaceLength\": 10,\n+      \"stack\": false,\n+      \"steppedLine\": false,\n+      \"targets\": [\n+        {\n+          \"expr\": \"sum(irate(kafka_cruisecontrol_anomalydetector_goal_violation_rate_count{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\",kubernetes_pod_name=~\\\"$strimzi_cluster_name-cruise-control-.*\\\"}[1m]))\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"instant\": false,\n+          \"interval\": \"\",\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"Goal Violation Rate\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": [],\n+      \"timeFrom\": null,\n+      \"timeRegions\": [],\n+      \"timeShift\": null,\n+      \"title\": \"Goal Violation Rate\",\n+      \"tooltip\": {\n+        \"shared\": true,\n+        \"sort\": 0,\n+        \"value_type\": \"individual\"\n+      },\n+      \"type\": \"graph\",\n+      \"xaxis\": {\n+        \"buckets\": null,\n+        \"mode\": \"time\",\n+        \"name\": null,\n+        \"show\": true,\n+        \"values\": []\n+      },\n+      \"yaxes\": [\n+        {\n+          \"decimals\": null,\n+          \"format\": \"short\",\n+          \"label\": \"violations/sec\",\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        },\n+        {\n+          \"format\": \"short\",\n+          \"label\": null,\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        }\n+      ],\n+      \"yaxis\": {\n+        \"align\": false,\n+        \"alignLevel\": null\n+      }\n+    },\n+    {\n+      \"aliasColors\": {},\n+      \"bars\": false,\n+      \"dashLength\": 10,\n+      \"dashes\": false,\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Disk Failure Rate\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ4NjE5OQ=="}, "originalCommit": {"oid": "5c387808483f7d1e283db00938adcf173ec7ec2f"}, "originalPosition": 592}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzUwNzI5OQ==", "bodyText": "Maybe \"disk read failure rate\"?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r463507299", "createdAt": "2020-07-31T09:31:59Z", "author": {"login": "ppatierno"}, "path": "examples/metrics/grafana-dashboards/strimzi-cruise-control.json", "diffHunk": "@@ -0,0 +1,2062 @@\n+{\n+  \"__inputs\": [\n+    {\n+      \"name\": \"DS_PROMETHEUS\",\n+      \"label\": \"Prometheus\",\n+      \"description\": \"\",\n+      \"type\": \"datasource\",\n+      \"pluginId\": \"prometheus\",\n+      \"pluginName\": \"Prometheus\"\n+    }\n+  ],\n+  \"__requires\": [\n+    {\n+      \"type\": \"grafana\",\n+      \"id\": \"grafana\",\n+      \"name\": \"Grafana\",\n+      \"version\": \"6.3.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"graph\",\n+      \"name\": \"Graph\",\n+      \"version\": \"\"\n+    },\n+    {\n+      \"type\": \"datasource\",\n+      \"id\": \"prometheus\",\n+      \"name\": \"Prometheus\",\n+      \"version\": \"1.0.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"singlestat\",\n+      \"name\": \"Singlestat\",\n+      \"version\": \"\"\n+    }\n+  ],\n+  \"annotations\": {\n+    \"list\": [\n+      {\n+        \"builtIn\": 1,\n+        \"datasource\": \"-- Grafana --\",\n+        \"enable\": true,\n+        \"hide\": true,\n+        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n+        \"name\": \"Annotations & Alerts\",\n+        \"type\": \"dashboard\"\n+      }\n+    ]\n+  },\n+  \"editable\": true,\n+  \"gnetId\": null,\n+  \"graphTooltip\": 0,\n+  \"id\": null,\n+  \"iteration\": 1596032501954,\n+  \"links\": [],\n+  \"panels\": [\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#d44a3a\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#299c46\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"The number of snapshot windows that is monitored\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 0,\n+        \"y\": 0\n+      },\n+      \"id\": 46,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"repeat\": null,\n+      \"repeatDirection\": \"h\",\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_total_monitored_windows_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"0,2\",\n+      \"title\": \"Total Monitored Windows\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"#e5ac0e\",\n+        \"#bf1b00\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Number of valid windows\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 4,\n+        \"y\": 0\n+      },\n+      \"id\": 36,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_valid_windows_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Valid Windows\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Number of ongoing executions running for proposals or rebalance\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 8,\n+        \"y\": 0\n+      },\n+      \"id\": 38,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_executor_ongoing_execution_non_kafka_assigner_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Ongoing Execution\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Balancedness Score\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 12,\n+        \"y\": 0\n+      },\n+      \"id\": 116,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_anomalydetector_balancedness_score_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Balancedness Score\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Monitored Partition Percentage\",\n+      \"format\": \"percentunit\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 16,\n+        \"y\": 0\n+      },\n+      \"id\": 115,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_monitored_partitions_percentage_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Monitored Partition\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"gridPos\": {\n+        \"h\": 1,\n+        \"w\": 24,\n+        \"x\": 0,\n+        \"y\": 4\n+      },\n+      \"id\": 114,\n+      \"title\": \"Cruise Control\",\n+      \"type\": \"row\"\n+    },\n+    {\n+      \"aliasColors\": {},\n+      \"bars\": false,\n+      \"dashLength\": 10,\n+      \"dashes\": false,\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Goal Violation Rate\",\n+      \"fill\": 1,\n+      \"fillGradient\": 0,\n+      \"gridPos\": {\n+        \"h\": 8,\n+        \"w\": 12,\n+        \"x\": 0,\n+        \"y\": 5\n+      },\n+      \"id\": 106,\n+      \"legend\": {\n+        \"alignAsTable\": false,\n+        \"avg\": false,\n+        \"current\": false,\n+        \"hideEmpty\": false,\n+        \"hideZero\": false,\n+        \"max\": false,\n+        \"min\": false,\n+        \"rightSide\": false,\n+        \"show\": true,\n+        \"total\": false,\n+        \"values\": false\n+      },\n+      \"lines\": true,\n+      \"linewidth\": 1,\n+      \"links\": [],\n+      \"nullPointMode\": \"null\",\n+      \"options\": {\n+        \"dataLinks\": []\n+      },\n+      \"paceLength\": 10,\n+      \"percentage\": false,\n+      \"pointradius\": 5,\n+      \"points\": false,\n+      \"renderer\": \"flot\",\n+      \"seriesOverrides\": [],\n+      \"spaceLength\": 10,\n+      \"stack\": false,\n+      \"steppedLine\": false,\n+      \"targets\": [\n+        {\n+          \"expr\": \"sum(irate(kafka_cruisecontrol_anomalydetector_goal_violation_rate_count{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\",kubernetes_pod_name=~\\\"$strimzi_cluster_name-cruise-control-.*\\\"}[1m]))\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"instant\": false,\n+          \"interval\": \"\",\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"Goal Violation Rate\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": [],\n+      \"timeFrom\": null,\n+      \"timeRegions\": [],\n+      \"timeShift\": null,\n+      \"title\": \"Goal Violation Rate\",\n+      \"tooltip\": {\n+        \"shared\": true,\n+        \"sort\": 0,\n+        \"value_type\": \"individual\"\n+      },\n+      \"type\": \"graph\",\n+      \"xaxis\": {\n+        \"buckets\": null,\n+        \"mode\": \"time\",\n+        \"name\": null,\n+        \"show\": true,\n+        \"values\": []\n+      },\n+      \"yaxes\": [\n+        {\n+          \"decimals\": null,\n+          \"format\": \"short\",\n+          \"label\": \"violations/sec\",\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        },\n+        {\n+          \"format\": \"short\",\n+          \"label\": null,\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        }\n+      ],\n+      \"yaxis\": {\n+        \"align\": false,\n+        \"alignLevel\": null\n+      }\n+    },\n+    {\n+      \"aliasColors\": {},\n+      \"bars\": false,\n+      \"dashLength\": 10,\n+      \"dashes\": false,\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Disk Failure Rate\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ4NjE5OQ=="}, "originalCommit": {"oid": "5c387808483f7d1e283db00938adcf173ec7ec2f"}, "originalPosition": 592}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU3MjQ1MQ==", "bodyText": "TBH, I think Failed disk queries would be better because IMHO it makes it more clear that this is just about Cruise Control issue when querying the disk. Disk read failure rate can still be easily confused with a physical disk issue. But I can live with it if needed.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r463572451", "createdAt": "2020-07-31T12:08:24Z", "author": {"login": "scholzj"}, "path": "examples/metrics/grafana-dashboards/strimzi-cruise-control.json", "diffHunk": "@@ -0,0 +1,2062 @@\n+{\n+  \"__inputs\": [\n+    {\n+      \"name\": \"DS_PROMETHEUS\",\n+      \"label\": \"Prometheus\",\n+      \"description\": \"\",\n+      \"type\": \"datasource\",\n+      \"pluginId\": \"prometheus\",\n+      \"pluginName\": \"Prometheus\"\n+    }\n+  ],\n+  \"__requires\": [\n+    {\n+      \"type\": \"grafana\",\n+      \"id\": \"grafana\",\n+      \"name\": \"Grafana\",\n+      \"version\": \"6.3.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"graph\",\n+      \"name\": \"Graph\",\n+      \"version\": \"\"\n+    },\n+    {\n+      \"type\": \"datasource\",\n+      \"id\": \"prometheus\",\n+      \"name\": \"Prometheus\",\n+      \"version\": \"1.0.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"singlestat\",\n+      \"name\": \"Singlestat\",\n+      \"version\": \"\"\n+    }\n+  ],\n+  \"annotations\": {\n+    \"list\": [\n+      {\n+        \"builtIn\": 1,\n+        \"datasource\": \"-- Grafana --\",\n+        \"enable\": true,\n+        \"hide\": true,\n+        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n+        \"name\": \"Annotations & Alerts\",\n+        \"type\": \"dashboard\"\n+      }\n+    ]\n+  },\n+  \"editable\": true,\n+  \"gnetId\": null,\n+  \"graphTooltip\": 0,\n+  \"id\": null,\n+  \"iteration\": 1596032501954,\n+  \"links\": [],\n+  \"panels\": [\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#d44a3a\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#299c46\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"The number of snapshot windows that is monitored\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 0,\n+        \"y\": 0\n+      },\n+      \"id\": 46,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"repeat\": null,\n+      \"repeatDirection\": \"h\",\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_total_monitored_windows_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"0,2\",\n+      \"title\": \"Total Monitored Windows\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"#e5ac0e\",\n+        \"#bf1b00\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Number of valid windows\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 4,\n+        \"y\": 0\n+      },\n+      \"id\": 36,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_valid_windows_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Valid Windows\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Number of ongoing executions running for proposals or rebalance\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 8,\n+        \"y\": 0\n+      },\n+      \"id\": 38,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_executor_ongoing_execution_non_kafka_assigner_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Ongoing Execution\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Balancedness Score\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 12,\n+        \"y\": 0\n+      },\n+      \"id\": 116,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_anomalydetector_balancedness_score_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Balancedness Score\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Monitored Partition Percentage\",\n+      \"format\": \"percentunit\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 16,\n+        \"y\": 0\n+      },\n+      \"id\": 115,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_monitored_partitions_percentage_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Monitored Partition\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"gridPos\": {\n+        \"h\": 1,\n+        \"w\": 24,\n+        \"x\": 0,\n+        \"y\": 4\n+      },\n+      \"id\": 114,\n+      \"title\": \"Cruise Control\",\n+      \"type\": \"row\"\n+    },\n+    {\n+      \"aliasColors\": {},\n+      \"bars\": false,\n+      \"dashLength\": 10,\n+      \"dashes\": false,\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Goal Violation Rate\",\n+      \"fill\": 1,\n+      \"fillGradient\": 0,\n+      \"gridPos\": {\n+        \"h\": 8,\n+        \"w\": 12,\n+        \"x\": 0,\n+        \"y\": 5\n+      },\n+      \"id\": 106,\n+      \"legend\": {\n+        \"alignAsTable\": false,\n+        \"avg\": false,\n+        \"current\": false,\n+        \"hideEmpty\": false,\n+        \"hideZero\": false,\n+        \"max\": false,\n+        \"min\": false,\n+        \"rightSide\": false,\n+        \"show\": true,\n+        \"total\": false,\n+        \"values\": false\n+      },\n+      \"lines\": true,\n+      \"linewidth\": 1,\n+      \"links\": [],\n+      \"nullPointMode\": \"null\",\n+      \"options\": {\n+        \"dataLinks\": []\n+      },\n+      \"paceLength\": 10,\n+      \"percentage\": false,\n+      \"pointradius\": 5,\n+      \"points\": false,\n+      \"renderer\": \"flot\",\n+      \"seriesOverrides\": [],\n+      \"spaceLength\": 10,\n+      \"stack\": false,\n+      \"steppedLine\": false,\n+      \"targets\": [\n+        {\n+          \"expr\": \"sum(irate(kafka_cruisecontrol_anomalydetector_goal_violation_rate_count{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\",kubernetes_pod_name=~\\\"$strimzi_cluster_name-cruise-control-.*\\\"}[1m]))\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"instant\": false,\n+          \"interval\": \"\",\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"Goal Violation Rate\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": [],\n+      \"timeFrom\": null,\n+      \"timeRegions\": [],\n+      \"timeShift\": null,\n+      \"title\": \"Goal Violation Rate\",\n+      \"tooltip\": {\n+        \"shared\": true,\n+        \"sort\": 0,\n+        \"value_type\": \"individual\"\n+      },\n+      \"type\": \"graph\",\n+      \"xaxis\": {\n+        \"buckets\": null,\n+        \"mode\": \"time\",\n+        \"name\": null,\n+        \"show\": true,\n+        \"values\": []\n+      },\n+      \"yaxes\": [\n+        {\n+          \"decimals\": null,\n+          \"format\": \"short\",\n+          \"label\": \"violations/sec\",\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        },\n+        {\n+          \"format\": \"short\",\n+          \"label\": null,\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        }\n+      ],\n+      \"yaxis\": {\n+        \"align\": false,\n+        \"alignLevel\": null\n+      }\n+    },\n+    {\n+      \"aliasColors\": {},\n+      \"bars\": false,\n+      \"dashLength\": 10,\n+      \"dashes\": false,\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Disk Failure Rate\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ4NjE5OQ=="}, "originalCommit": {"oid": "5c387808483f7d1e283db00938adcf173ec7ec2f"}, "originalPosition": 592}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU3NzM5Nw==", "bodyText": "I see your point you want to highlight that it's something more related to CC than the disk itself even if when CC has a \"query\" failure, it could mean a real disk failure. @tomncooper any opinion on this?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r463577397", "createdAt": "2020-07-31T12:20:16Z", "author": {"login": "ppatierno"}, "path": "examples/metrics/grafana-dashboards/strimzi-cruise-control.json", "diffHunk": "@@ -0,0 +1,2062 @@\n+{\n+  \"__inputs\": [\n+    {\n+      \"name\": \"DS_PROMETHEUS\",\n+      \"label\": \"Prometheus\",\n+      \"description\": \"\",\n+      \"type\": \"datasource\",\n+      \"pluginId\": \"prometheus\",\n+      \"pluginName\": \"Prometheus\"\n+    }\n+  ],\n+  \"__requires\": [\n+    {\n+      \"type\": \"grafana\",\n+      \"id\": \"grafana\",\n+      \"name\": \"Grafana\",\n+      \"version\": \"6.3.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"graph\",\n+      \"name\": \"Graph\",\n+      \"version\": \"\"\n+    },\n+    {\n+      \"type\": \"datasource\",\n+      \"id\": \"prometheus\",\n+      \"name\": \"Prometheus\",\n+      \"version\": \"1.0.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"singlestat\",\n+      \"name\": \"Singlestat\",\n+      \"version\": \"\"\n+    }\n+  ],\n+  \"annotations\": {\n+    \"list\": [\n+      {\n+        \"builtIn\": 1,\n+        \"datasource\": \"-- Grafana --\",\n+        \"enable\": true,\n+        \"hide\": true,\n+        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n+        \"name\": \"Annotations & Alerts\",\n+        \"type\": \"dashboard\"\n+      }\n+    ]\n+  },\n+  \"editable\": true,\n+  \"gnetId\": null,\n+  \"graphTooltip\": 0,\n+  \"id\": null,\n+  \"iteration\": 1596032501954,\n+  \"links\": [],\n+  \"panels\": [\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#d44a3a\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#299c46\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"The number of snapshot windows that is monitored\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 0,\n+        \"y\": 0\n+      },\n+      \"id\": 46,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"repeat\": null,\n+      \"repeatDirection\": \"h\",\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_total_monitored_windows_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"0,2\",\n+      \"title\": \"Total Monitored Windows\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"#e5ac0e\",\n+        \"#bf1b00\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Number of valid windows\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 4,\n+        \"y\": 0\n+      },\n+      \"id\": 36,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_valid_windows_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Valid Windows\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Number of ongoing executions running for proposals or rebalance\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 8,\n+        \"y\": 0\n+      },\n+      \"id\": 38,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_executor_ongoing_execution_non_kafka_assigner_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Ongoing Execution\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Balancedness Score\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 12,\n+        \"y\": 0\n+      },\n+      \"id\": 116,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_anomalydetector_balancedness_score_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Balancedness Score\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Monitored Partition Percentage\",\n+      \"format\": \"percentunit\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 16,\n+        \"y\": 0\n+      },\n+      \"id\": 115,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_monitored_partitions_percentage_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Monitored Partition\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"gridPos\": {\n+        \"h\": 1,\n+        \"w\": 24,\n+        \"x\": 0,\n+        \"y\": 4\n+      },\n+      \"id\": 114,\n+      \"title\": \"Cruise Control\",\n+      \"type\": \"row\"\n+    },\n+    {\n+      \"aliasColors\": {},\n+      \"bars\": false,\n+      \"dashLength\": 10,\n+      \"dashes\": false,\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Goal Violation Rate\",\n+      \"fill\": 1,\n+      \"fillGradient\": 0,\n+      \"gridPos\": {\n+        \"h\": 8,\n+        \"w\": 12,\n+        \"x\": 0,\n+        \"y\": 5\n+      },\n+      \"id\": 106,\n+      \"legend\": {\n+        \"alignAsTable\": false,\n+        \"avg\": false,\n+        \"current\": false,\n+        \"hideEmpty\": false,\n+        \"hideZero\": false,\n+        \"max\": false,\n+        \"min\": false,\n+        \"rightSide\": false,\n+        \"show\": true,\n+        \"total\": false,\n+        \"values\": false\n+      },\n+      \"lines\": true,\n+      \"linewidth\": 1,\n+      \"links\": [],\n+      \"nullPointMode\": \"null\",\n+      \"options\": {\n+        \"dataLinks\": []\n+      },\n+      \"paceLength\": 10,\n+      \"percentage\": false,\n+      \"pointradius\": 5,\n+      \"points\": false,\n+      \"renderer\": \"flot\",\n+      \"seriesOverrides\": [],\n+      \"spaceLength\": 10,\n+      \"stack\": false,\n+      \"steppedLine\": false,\n+      \"targets\": [\n+        {\n+          \"expr\": \"sum(irate(kafka_cruisecontrol_anomalydetector_goal_violation_rate_count{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\",kubernetes_pod_name=~\\\"$strimzi_cluster_name-cruise-control-.*\\\"}[1m]))\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"instant\": false,\n+          \"interval\": \"\",\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"Goal Violation Rate\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": [],\n+      \"timeFrom\": null,\n+      \"timeRegions\": [],\n+      \"timeShift\": null,\n+      \"title\": \"Goal Violation Rate\",\n+      \"tooltip\": {\n+        \"shared\": true,\n+        \"sort\": 0,\n+        \"value_type\": \"individual\"\n+      },\n+      \"type\": \"graph\",\n+      \"xaxis\": {\n+        \"buckets\": null,\n+        \"mode\": \"time\",\n+        \"name\": null,\n+        \"show\": true,\n+        \"values\": []\n+      },\n+      \"yaxes\": [\n+        {\n+          \"decimals\": null,\n+          \"format\": \"short\",\n+          \"label\": \"violations/sec\",\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        },\n+        {\n+          \"format\": \"short\",\n+          \"label\": null,\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        }\n+      ],\n+      \"yaxis\": {\n+        \"align\": false,\n+        \"alignLevel\": null\n+      }\n+    },\n+    {\n+      \"aliasColors\": {},\n+      \"bars\": false,\n+      \"dashLength\": 10,\n+      \"dashes\": false,\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Disk Failure Rate\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ4NjE5OQ=="}, "originalCommit": {"oid": "5c387808483f7d1e283db00938adcf173ec7ec2f"}, "originalPosition": 592}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU4NjE0NA==", "bodyText": "So the disk failures are detected using the code here. It seems to use the Kafka Admin client to ask for broker status and then checks for reported errors in each of the log directories.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r463586144", "createdAt": "2020-07-31T12:39:39Z", "author": {"login": "tomncooper"}, "path": "examples/metrics/grafana-dashboards/strimzi-cruise-control.json", "diffHunk": "@@ -0,0 +1,2062 @@\n+{\n+  \"__inputs\": [\n+    {\n+      \"name\": \"DS_PROMETHEUS\",\n+      \"label\": \"Prometheus\",\n+      \"description\": \"\",\n+      \"type\": \"datasource\",\n+      \"pluginId\": \"prometheus\",\n+      \"pluginName\": \"Prometheus\"\n+    }\n+  ],\n+  \"__requires\": [\n+    {\n+      \"type\": \"grafana\",\n+      \"id\": \"grafana\",\n+      \"name\": \"Grafana\",\n+      \"version\": \"6.3.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"graph\",\n+      \"name\": \"Graph\",\n+      \"version\": \"\"\n+    },\n+    {\n+      \"type\": \"datasource\",\n+      \"id\": \"prometheus\",\n+      \"name\": \"Prometheus\",\n+      \"version\": \"1.0.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"singlestat\",\n+      \"name\": \"Singlestat\",\n+      \"version\": \"\"\n+    }\n+  ],\n+  \"annotations\": {\n+    \"list\": [\n+      {\n+        \"builtIn\": 1,\n+        \"datasource\": \"-- Grafana --\",\n+        \"enable\": true,\n+        \"hide\": true,\n+        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n+        \"name\": \"Annotations & Alerts\",\n+        \"type\": \"dashboard\"\n+      }\n+    ]\n+  },\n+  \"editable\": true,\n+  \"gnetId\": null,\n+  \"graphTooltip\": 0,\n+  \"id\": null,\n+  \"iteration\": 1596032501954,\n+  \"links\": [],\n+  \"panels\": [\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#d44a3a\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#299c46\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"The number of snapshot windows that is monitored\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 0,\n+        \"y\": 0\n+      },\n+      \"id\": 46,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"repeat\": null,\n+      \"repeatDirection\": \"h\",\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_total_monitored_windows_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"0,2\",\n+      \"title\": \"Total Monitored Windows\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"#e5ac0e\",\n+        \"#bf1b00\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Number of valid windows\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 4,\n+        \"y\": 0\n+      },\n+      \"id\": 36,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_valid_windows_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Valid Windows\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Number of ongoing executions running for proposals or rebalance\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 8,\n+        \"y\": 0\n+      },\n+      \"id\": 38,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_executor_ongoing_execution_non_kafka_assigner_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Ongoing Execution\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Balancedness Score\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 12,\n+        \"y\": 0\n+      },\n+      \"id\": 116,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_anomalydetector_balancedness_score_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Balancedness Score\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Monitored Partition Percentage\",\n+      \"format\": \"percentunit\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 16,\n+        \"y\": 0\n+      },\n+      \"id\": 115,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_monitored_partitions_percentage_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Monitored Partition\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"gridPos\": {\n+        \"h\": 1,\n+        \"w\": 24,\n+        \"x\": 0,\n+        \"y\": 4\n+      },\n+      \"id\": 114,\n+      \"title\": \"Cruise Control\",\n+      \"type\": \"row\"\n+    },\n+    {\n+      \"aliasColors\": {},\n+      \"bars\": false,\n+      \"dashLength\": 10,\n+      \"dashes\": false,\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Goal Violation Rate\",\n+      \"fill\": 1,\n+      \"fillGradient\": 0,\n+      \"gridPos\": {\n+        \"h\": 8,\n+        \"w\": 12,\n+        \"x\": 0,\n+        \"y\": 5\n+      },\n+      \"id\": 106,\n+      \"legend\": {\n+        \"alignAsTable\": false,\n+        \"avg\": false,\n+        \"current\": false,\n+        \"hideEmpty\": false,\n+        \"hideZero\": false,\n+        \"max\": false,\n+        \"min\": false,\n+        \"rightSide\": false,\n+        \"show\": true,\n+        \"total\": false,\n+        \"values\": false\n+      },\n+      \"lines\": true,\n+      \"linewidth\": 1,\n+      \"links\": [],\n+      \"nullPointMode\": \"null\",\n+      \"options\": {\n+        \"dataLinks\": []\n+      },\n+      \"paceLength\": 10,\n+      \"percentage\": false,\n+      \"pointradius\": 5,\n+      \"points\": false,\n+      \"renderer\": \"flot\",\n+      \"seriesOverrides\": [],\n+      \"spaceLength\": 10,\n+      \"stack\": false,\n+      \"steppedLine\": false,\n+      \"targets\": [\n+        {\n+          \"expr\": \"sum(irate(kafka_cruisecontrol_anomalydetector_goal_violation_rate_count{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\",kubernetes_pod_name=~\\\"$strimzi_cluster_name-cruise-control-.*\\\"}[1m]))\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"instant\": false,\n+          \"interval\": \"\",\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"Goal Violation Rate\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": [],\n+      \"timeFrom\": null,\n+      \"timeRegions\": [],\n+      \"timeShift\": null,\n+      \"title\": \"Goal Violation Rate\",\n+      \"tooltip\": {\n+        \"shared\": true,\n+        \"sort\": 0,\n+        \"value_type\": \"individual\"\n+      },\n+      \"type\": \"graph\",\n+      \"xaxis\": {\n+        \"buckets\": null,\n+        \"mode\": \"time\",\n+        \"name\": null,\n+        \"show\": true,\n+        \"values\": []\n+      },\n+      \"yaxes\": [\n+        {\n+          \"decimals\": null,\n+          \"format\": \"short\",\n+          \"label\": \"violations/sec\",\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        },\n+        {\n+          \"format\": \"short\",\n+          \"label\": null,\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        }\n+      ],\n+      \"yaxis\": {\n+        \"align\": false,\n+        \"alignLevel\": null\n+      }\n+    },\n+    {\n+      \"aliasColors\": {},\n+      \"bars\": false,\n+      \"dashLength\": 10,\n+      \"dashes\": false,\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Disk Failure Rate\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ4NjE5OQ=="}, "originalCommit": {"oid": "5c387808483f7d1e283db00938adcf173ec7ec2f"}, "originalPosition": 592}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU5MzM5MQ==", "bodyText": "That was the code I was referring to (without linking the code actually). But what's a good name/description for you?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r463593391", "createdAt": "2020-07-31T12:54:49Z", "author": {"login": "ppatierno"}, "path": "examples/metrics/grafana-dashboards/strimzi-cruise-control.json", "diffHunk": "@@ -0,0 +1,2062 @@\n+{\n+  \"__inputs\": [\n+    {\n+      \"name\": \"DS_PROMETHEUS\",\n+      \"label\": \"Prometheus\",\n+      \"description\": \"\",\n+      \"type\": \"datasource\",\n+      \"pluginId\": \"prometheus\",\n+      \"pluginName\": \"Prometheus\"\n+    }\n+  ],\n+  \"__requires\": [\n+    {\n+      \"type\": \"grafana\",\n+      \"id\": \"grafana\",\n+      \"name\": \"Grafana\",\n+      \"version\": \"6.3.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"graph\",\n+      \"name\": \"Graph\",\n+      \"version\": \"\"\n+    },\n+    {\n+      \"type\": \"datasource\",\n+      \"id\": \"prometheus\",\n+      \"name\": \"Prometheus\",\n+      \"version\": \"1.0.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"singlestat\",\n+      \"name\": \"Singlestat\",\n+      \"version\": \"\"\n+    }\n+  ],\n+  \"annotations\": {\n+    \"list\": [\n+      {\n+        \"builtIn\": 1,\n+        \"datasource\": \"-- Grafana --\",\n+        \"enable\": true,\n+        \"hide\": true,\n+        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n+        \"name\": \"Annotations & Alerts\",\n+        \"type\": \"dashboard\"\n+      }\n+    ]\n+  },\n+  \"editable\": true,\n+  \"gnetId\": null,\n+  \"graphTooltip\": 0,\n+  \"id\": null,\n+  \"iteration\": 1596032501954,\n+  \"links\": [],\n+  \"panels\": [\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#d44a3a\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#299c46\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"The number of snapshot windows that is monitored\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 0,\n+        \"y\": 0\n+      },\n+      \"id\": 46,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"repeat\": null,\n+      \"repeatDirection\": \"h\",\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_total_monitored_windows_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"0,2\",\n+      \"title\": \"Total Monitored Windows\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"#e5ac0e\",\n+        \"#bf1b00\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Number of valid windows\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 4,\n+        \"y\": 0\n+      },\n+      \"id\": 36,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_valid_windows_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Valid Windows\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Number of ongoing executions running for proposals or rebalance\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 8,\n+        \"y\": 0\n+      },\n+      \"id\": 38,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_executor_ongoing_execution_non_kafka_assigner_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Ongoing Execution\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Balancedness Score\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 12,\n+        \"y\": 0\n+      },\n+      \"id\": 116,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_anomalydetector_balancedness_score_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Balancedness Score\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Monitored Partition Percentage\",\n+      \"format\": \"percentunit\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 16,\n+        \"y\": 0\n+      },\n+      \"id\": 115,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_monitored_partitions_percentage_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Monitored Partition\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"gridPos\": {\n+        \"h\": 1,\n+        \"w\": 24,\n+        \"x\": 0,\n+        \"y\": 4\n+      },\n+      \"id\": 114,\n+      \"title\": \"Cruise Control\",\n+      \"type\": \"row\"\n+    },\n+    {\n+      \"aliasColors\": {},\n+      \"bars\": false,\n+      \"dashLength\": 10,\n+      \"dashes\": false,\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Goal Violation Rate\",\n+      \"fill\": 1,\n+      \"fillGradient\": 0,\n+      \"gridPos\": {\n+        \"h\": 8,\n+        \"w\": 12,\n+        \"x\": 0,\n+        \"y\": 5\n+      },\n+      \"id\": 106,\n+      \"legend\": {\n+        \"alignAsTable\": false,\n+        \"avg\": false,\n+        \"current\": false,\n+        \"hideEmpty\": false,\n+        \"hideZero\": false,\n+        \"max\": false,\n+        \"min\": false,\n+        \"rightSide\": false,\n+        \"show\": true,\n+        \"total\": false,\n+        \"values\": false\n+      },\n+      \"lines\": true,\n+      \"linewidth\": 1,\n+      \"links\": [],\n+      \"nullPointMode\": \"null\",\n+      \"options\": {\n+        \"dataLinks\": []\n+      },\n+      \"paceLength\": 10,\n+      \"percentage\": false,\n+      \"pointradius\": 5,\n+      \"points\": false,\n+      \"renderer\": \"flot\",\n+      \"seriesOverrides\": [],\n+      \"spaceLength\": 10,\n+      \"stack\": false,\n+      \"steppedLine\": false,\n+      \"targets\": [\n+        {\n+          \"expr\": \"sum(irate(kafka_cruisecontrol_anomalydetector_goal_violation_rate_count{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\",kubernetes_pod_name=~\\\"$strimzi_cluster_name-cruise-control-.*\\\"}[1m]))\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"instant\": false,\n+          \"interval\": \"\",\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"Goal Violation Rate\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": [],\n+      \"timeFrom\": null,\n+      \"timeRegions\": [],\n+      \"timeShift\": null,\n+      \"title\": \"Goal Violation Rate\",\n+      \"tooltip\": {\n+        \"shared\": true,\n+        \"sort\": 0,\n+        \"value_type\": \"individual\"\n+      },\n+      \"type\": \"graph\",\n+      \"xaxis\": {\n+        \"buckets\": null,\n+        \"mode\": \"time\",\n+        \"name\": null,\n+        \"show\": true,\n+        \"values\": []\n+      },\n+      \"yaxes\": [\n+        {\n+          \"decimals\": null,\n+          \"format\": \"short\",\n+          \"label\": \"violations/sec\",\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        },\n+        {\n+          \"format\": \"short\",\n+          \"label\": null,\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        }\n+      ],\n+      \"yaxis\": {\n+        \"align\": false,\n+        \"alignLevel\": null\n+      }\n+    },\n+    {\n+      \"aliasColors\": {},\n+      \"bars\": false,\n+      \"dashLength\": 10,\n+      \"dashes\": false,\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Disk Failure Rate\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ4NjE5OQ=="}, "originalCommit": {"oid": "5c387808483f7d1e283db00938adcf173ec7ec2f"}, "originalPosition": 592}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzYwMTYwOQ==", "bodyText": "Sorry @ppatierno I didn't read your comment at the top and basically repeated exactly what you said. Not very helpful. Anyway this metric is the number of disc failures in the last detection interval (which will be the same as the AD interval unless the user specifies a different interval for the disk failure detection), so it is a \"rate\" and it is a failure according to Kafka. So something like \"Disk Failure Rate\", \"Reported Disk Failure Rate\" or \"Kafka Reported Disk Failure Rate\" seems accurate to me.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r463601609", "createdAt": "2020-07-31T13:11:12Z", "author": {"login": "tomncooper"}, "path": "examples/metrics/grafana-dashboards/strimzi-cruise-control.json", "diffHunk": "@@ -0,0 +1,2062 @@\n+{\n+  \"__inputs\": [\n+    {\n+      \"name\": \"DS_PROMETHEUS\",\n+      \"label\": \"Prometheus\",\n+      \"description\": \"\",\n+      \"type\": \"datasource\",\n+      \"pluginId\": \"prometheus\",\n+      \"pluginName\": \"Prometheus\"\n+    }\n+  ],\n+  \"__requires\": [\n+    {\n+      \"type\": \"grafana\",\n+      \"id\": \"grafana\",\n+      \"name\": \"Grafana\",\n+      \"version\": \"6.3.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"graph\",\n+      \"name\": \"Graph\",\n+      \"version\": \"\"\n+    },\n+    {\n+      \"type\": \"datasource\",\n+      \"id\": \"prometheus\",\n+      \"name\": \"Prometheus\",\n+      \"version\": \"1.0.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"singlestat\",\n+      \"name\": \"Singlestat\",\n+      \"version\": \"\"\n+    }\n+  ],\n+  \"annotations\": {\n+    \"list\": [\n+      {\n+        \"builtIn\": 1,\n+        \"datasource\": \"-- Grafana --\",\n+        \"enable\": true,\n+        \"hide\": true,\n+        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n+        \"name\": \"Annotations & Alerts\",\n+        \"type\": \"dashboard\"\n+      }\n+    ]\n+  },\n+  \"editable\": true,\n+  \"gnetId\": null,\n+  \"graphTooltip\": 0,\n+  \"id\": null,\n+  \"iteration\": 1596032501954,\n+  \"links\": [],\n+  \"panels\": [\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#d44a3a\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#299c46\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"The number of snapshot windows that is monitored\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 0,\n+        \"y\": 0\n+      },\n+      \"id\": 46,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"repeat\": null,\n+      \"repeatDirection\": \"h\",\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_total_monitored_windows_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"0,2\",\n+      \"title\": \"Total Monitored Windows\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"#e5ac0e\",\n+        \"#bf1b00\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Number of valid windows\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 4,\n+        \"y\": 0\n+      },\n+      \"id\": 36,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_valid_windows_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Valid Windows\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Number of ongoing executions running for proposals or rebalance\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 8,\n+        \"y\": 0\n+      },\n+      \"id\": 38,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_executor_ongoing_execution_non_kafka_assigner_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Ongoing Execution\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Balancedness Score\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 12,\n+        \"y\": 0\n+      },\n+      \"id\": 116,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_anomalydetector_balancedness_score_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Balancedness Score\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Monitored Partition Percentage\",\n+      \"format\": \"percentunit\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 16,\n+        \"y\": 0\n+      },\n+      \"id\": 115,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_monitored_partitions_percentage_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Monitored Partition\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"gridPos\": {\n+        \"h\": 1,\n+        \"w\": 24,\n+        \"x\": 0,\n+        \"y\": 4\n+      },\n+      \"id\": 114,\n+      \"title\": \"Cruise Control\",\n+      \"type\": \"row\"\n+    },\n+    {\n+      \"aliasColors\": {},\n+      \"bars\": false,\n+      \"dashLength\": 10,\n+      \"dashes\": false,\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Goal Violation Rate\",\n+      \"fill\": 1,\n+      \"fillGradient\": 0,\n+      \"gridPos\": {\n+        \"h\": 8,\n+        \"w\": 12,\n+        \"x\": 0,\n+        \"y\": 5\n+      },\n+      \"id\": 106,\n+      \"legend\": {\n+        \"alignAsTable\": false,\n+        \"avg\": false,\n+        \"current\": false,\n+        \"hideEmpty\": false,\n+        \"hideZero\": false,\n+        \"max\": false,\n+        \"min\": false,\n+        \"rightSide\": false,\n+        \"show\": true,\n+        \"total\": false,\n+        \"values\": false\n+      },\n+      \"lines\": true,\n+      \"linewidth\": 1,\n+      \"links\": [],\n+      \"nullPointMode\": \"null\",\n+      \"options\": {\n+        \"dataLinks\": []\n+      },\n+      \"paceLength\": 10,\n+      \"percentage\": false,\n+      \"pointradius\": 5,\n+      \"points\": false,\n+      \"renderer\": \"flot\",\n+      \"seriesOverrides\": [],\n+      \"spaceLength\": 10,\n+      \"stack\": false,\n+      \"steppedLine\": false,\n+      \"targets\": [\n+        {\n+          \"expr\": \"sum(irate(kafka_cruisecontrol_anomalydetector_goal_violation_rate_count{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\",kubernetes_pod_name=~\\\"$strimzi_cluster_name-cruise-control-.*\\\"}[1m]))\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"instant\": false,\n+          \"interval\": \"\",\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"Goal Violation Rate\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": [],\n+      \"timeFrom\": null,\n+      \"timeRegions\": [],\n+      \"timeShift\": null,\n+      \"title\": \"Goal Violation Rate\",\n+      \"tooltip\": {\n+        \"shared\": true,\n+        \"sort\": 0,\n+        \"value_type\": \"individual\"\n+      },\n+      \"type\": \"graph\",\n+      \"xaxis\": {\n+        \"buckets\": null,\n+        \"mode\": \"time\",\n+        \"name\": null,\n+        \"show\": true,\n+        \"values\": []\n+      },\n+      \"yaxes\": [\n+        {\n+          \"decimals\": null,\n+          \"format\": \"short\",\n+          \"label\": \"violations/sec\",\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        },\n+        {\n+          \"format\": \"short\",\n+          \"label\": null,\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        }\n+      ],\n+      \"yaxis\": {\n+        \"align\": false,\n+        \"alignLevel\": null\n+      }\n+    },\n+    {\n+      \"aliasColors\": {},\n+      \"bars\": false,\n+      \"dashLength\": 10,\n+      \"dashes\": false,\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Disk Failure Rate\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ4NjE5OQ=="}, "originalCommit": {"oid": "5c387808483f7d1e283db00938adcf173ec7ec2f"}, "originalPosition": 592}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NzQyMTczOnYy", "diffSide": "RIGHT", "path": "examples/metrics/grafana-dashboards/strimzi-cruise-control.json", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxODowMjoxNVrOG5D8xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxOTozMDozOVrOG5HBWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ4NjcyNg==", "bodyText": "Is this number of executed partition movemenets per second or something like that?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r462486726", "createdAt": "2020-07-29T18:02:15Z", "author": {"login": "scholzj"}, "path": "examples/metrics/grafana-dashboards/strimzi-cruise-control.json", "diffHunk": "@@ -0,0 +1,2062 @@\n+{\n+  \"__inputs\": [\n+    {\n+      \"name\": \"DS_PROMETHEUS\",\n+      \"label\": \"Prometheus\",\n+      \"description\": \"\",\n+      \"type\": \"datasource\",\n+      \"pluginId\": \"prometheus\",\n+      \"pluginName\": \"Prometheus\"\n+    }\n+  ],\n+  \"__requires\": [\n+    {\n+      \"type\": \"grafana\",\n+      \"id\": \"grafana\",\n+      \"name\": \"Grafana\",\n+      \"version\": \"6.3.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"graph\",\n+      \"name\": \"Graph\",\n+      \"version\": \"\"\n+    },\n+    {\n+      \"type\": \"datasource\",\n+      \"id\": \"prometheus\",\n+      \"name\": \"Prometheus\",\n+      \"version\": \"1.0.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"singlestat\",\n+      \"name\": \"Singlestat\",\n+      \"version\": \"\"\n+    }\n+  ],\n+  \"annotations\": {\n+    \"list\": [\n+      {\n+        \"builtIn\": 1,\n+        \"datasource\": \"-- Grafana --\",\n+        \"enable\": true,\n+        \"hide\": true,\n+        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n+        \"name\": \"Annotations & Alerts\",\n+        \"type\": \"dashboard\"\n+      }\n+    ]\n+  },\n+  \"editable\": true,\n+  \"gnetId\": null,\n+  \"graphTooltip\": 0,\n+  \"id\": null,\n+  \"iteration\": 1596032501954,\n+  \"links\": [],\n+  \"panels\": [\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#d44a3a\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#299c46\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"The number of snapshot windows that is monitored\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 0,\n+        \"y\": 0\n+      },\n+      \"id\": 46,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"repeat\": null,\n+      \"repeatDirection\": \"h\",\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_total_monitored_windows_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"0,2\",\n+      \"title\": \"Total Monitored Windows\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"#e5ac0e\",\n+        \"#bf1b00\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Number of valid windows\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 4,\n+        \"y\": 0\n+      },\n+      \"id\": 36,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_valid_windows_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Valid Windows\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Number of ongoing executions running for proposals or rebalance\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 8,\n+        \"y\": 0\n+      },\n+      \"id\": 38,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_executor_ongoing_execution_non_kafka_assigner_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Ongoing Execution\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Balancedness Score\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 12,\n+        \"y\": 0\n+      },\n+      \"id\": 116,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_anomalydetector_balancedness_score_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Balancedness Score\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Monitored Partition Percentage\",\n+      \"format\": \"percentunit\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 16,\n+        \"y\": 0\n+      },\n+      \"id\": 115,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_monitored_partitions_percentage_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Monitored Partition\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"gridPos\": {\n+        \"h\": 1,\n+        \"w\": 24,\n+        \"x\": 0,\n+        \"y\": 4\n+      },\n+      \"id\": 114,\n+      \"title\": \"Cruise Control\",\n+      \"type\": \"row\"\n+    },\n+    {\n+      \"aliasColors\": {},\n+      \"bars\": false,\n+      \"dashLength\": 10,\n+      \"dashes\": false,\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Goal Violation Rate\",\n+      \"fill\": 1,\n+      \"fillGradient\": 0,\n+      \"gridPos\": {\n+        \"h\": 8,\n+        \"w\": 12,\n+        \"x\": 0,\n+        \"y\": 5\n+      },\n+      \"id\": 106,\n+      \"legend\": {\n+        \"alignAsTable\": false,\n+        \"avg\": false,\n+        \"current\": false,\n+        \"hideEmpty\": false,\n+        \"hideZero\": false,\n+        \"max\": false,\n+        \"min\": false,\n+        \"rightSide\": false,\n+        \"show\": true,\n+        \"total\": false,\n+        \"values\": false\n+      },\n+      \"lines\": true,\n+      \"linewidth\": 1,\n+      \"links\": [],\n+      \"nullPointMode\": \"null\",\n+      \"options\": {\n+        \"dataLinks\": []\n+      },\n+      \"paceLength\": 10,\n+      \"percentage\": false,\n+      \"pointradius\": 5,\n+      \"points\": false,\n+      \"renderer\": \"flot\",\n+      \"seriesOverrides\": [],\n+      \"spaceLength\": 10,\n+      \"stack\": false,\n+      \"steppedLine\": false,\n+      \"targets\": [\n+        {\n+          \"expr\": \"sum(irate(kafka_cruisecontrol_anomalydetector_goal_violation_rate_count{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\",kubernetes_pod_name=~\\\"$strimzi_cluster_name-cruise-control-.*\\\"}[1m]))\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"instant\": false,\n+          \"interval\": \"\",\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"Goal Violation Rate\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": [],\n+      \"timeFrom\": null,\n+      \"timeRegions\": [],\n+      \"timeShift\": null,\n+      \"title\": \"Goal Violation Rate\",\n+      \"tooltip\": {\n+        \"shared\": true,\n+        \"sort\": 0,\n+        \"value_type\": \"individual\"\n+      },\n+      \"type\": \"graph\",\n+      \"xaxis\": {\n+        \"buckets\": null,\n+        \"mode\": \"time\",\n+        \"name\": null,\n+        \"show\": true,\n+        \"values\": []\n+      },\n+      \"yaxes\": [\n+        {\n+          \"decimals\": null,\n+          \"format\": \"short\",\n+          \"label\": \"violations/sec\",\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        },\n+        {\n+          \"format\": \"short\",\n+          \"label\": null,\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        }\n+      ],\n+      \"yaxis\": {\n+        \"align\": false,\n+        \"alignLevel\": null\n+      }\n+    },\n+    {\n+      \"aliasColors\": {},\n+      \"bars\": false,\n+      \"dashLength\": 10,\n+      \"dashes\": false,\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Disk Failure Rate\",\n+      \"fill\": 1,\n+      \"fillGradient\": 0,\n+      \"gridPos\": {\n+        \"h\": 8,\n+        \"w\": 12,\n+        \"x\": 12,\n+        \"y\": 5\n+      },\n+      \"id\": 107,\n+      \"legend\": {\n+        \"alignAsTable\": false,\n+        \"avg\": false,\n+        \"current\": false,\n+        \"hideEmpty\": false,\n+        \"hideZero\": false,\n+        \"max\": false,\n+        \"min\": false,\n+        \"rightSide\": false,\n+        \"show\": true,\n+        \"total\": false,\n+        \"values\": false\n+      },\n+      \"lines\": true,\n+      \"linewidth\": 1,\n+      \"links\": [],\n+      \"nullPointMode\": \"null\",\n+      \"options\": {\n+        \"dataLinks\": []\n+      },\n+      \"paceLength\": 10,\n+      \"percentage\": false,\n+      \"pointradius\": 5,\n+      \"points\": false,\n+      \"renderer\": \"flot\",\n+      \"seriesOverrides\": [],\n+      \"spaceLength\": 10,\n+      \"stack\": false,\n+      \"steppedLine\": false,\n+      \"targets\": [\n+        {\n+          \"expr\": \"sum(irate(kafka_cruisecontrol_anomalydetector_disk_failure_rate_count{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\",kubernetes_pod_name=~\\\"$strimzi_cluster_name-cruise-control-.*\\\"}[1m]))\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"instant\": false,\n+          \"interval\": \"\",\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"Disk Failure Rate\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": [],\n+      \"timeFrom\": null,\n+      \"timeRegions\": [],\n+      \"timeShift\": null,\n+      \"title\": \"Disk Failure Rate\",\n+      \"tooltip\": {\n+        \"shared\": true,\n+        \"sort\": 0,\n+        \"value_type\": \"individual\"\n+      },\n+      \"type\": \"graph\",\n+      \"xaxis\": {\n+        \"buckets\": null,\n+        \"mode\": \"time\",\n+        \"name\": null,\n+        \"show\": true,\n+        \"values\": []\n+      },\n+      \"yaxes\": [\n+        {\n+          \"decimals\": null,\n+          \"format\": \"short\",\n+          \"label\": \"failures/sec\",\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        },\n+        {\n+          \"format\": \"short\",\n+          \"label\": null,\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        }\n+      ],\n+      \"yaxis\": {\n+        \"align\": false,\n+        \"alignLevel\": null\n+      }\n+    },\n+    {\n+      \"aliasColors\": {},\n+      \"bars\": false,\n+      \"dashLength\": 10,\n+      \"dashes\": false,\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Partition Samples Fetcher Failure Rate\",\n+      \"fill\": 1,\n+      \"fillGradient\": 0,\n+      \"gridPos\": {\n+        \"h\": 8,\n+        \"w\": 12,\n+        \"x\": 0,\n+        \"y\": 13\n+      },\n+      \"id\": 117,\n+      \"legend\": {\n+        \"alignAsTable\": false,\n+        \"avg\": false,\n+        \"current\": false,\n+        \"hideEmpty\": false,\n+        \"hideZero\": false,\n+        \"max\": false,\n+        \"min\": false,\n+        \"rightSide\": false,\n+        \"show\": true,\n+        \"total\": false,\n+        \"values\": false\n+      },\n+      \"lines\": true,\n+      \"linewidth\": 1,\n+      \"links\": [],\n+      \"nullPointMode\": \"null\",\n+      \"options\": {\n+        \"dataLinks\": []\n+      },\n+      \"paceLength\": 10,\n+      \"percentage\": false,\n+      \"pointradius\": 5,\n+      \"points\": false,\n+      \"renderer\": \"flot\",\n+      \"seriesOverrides\": [],\n+      \"spaceLength\": 10,\n+      \"stack\": false,\n+      \"steppedLine\": false,\n+      \"targets\": [\n+        {\n+          \"expr\": \"sum(irate(kafka_cruisecontrol_metricfetchermanager_partition_samples_fetcher_failure_rate_count{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\",kubernetes_pod_name=~\\\"$strimzi_cluster_name-cruise-control-.*\\\"}[1m]))\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"instant\": false,\n+          \"interval\": \"\",\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"Partition Samples Fetcher Failure Rate\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": [],\n+      \"timeFrom\": null,\n+      \"timeRegions\": [],\n+      \"timeShift\": null,\n+      \"title\": \"Partition Samples Fetcher Failure Rate\",\n+      \"tooltip\": {\n+        \"shared\": true,\n+        \"sort\": 0,\n+        \"value_type\": \"individual\"\n+      },\n+      \"type\": \"graph\",\n+      \"xaxis\": {\n+        \"buckets\": null,\n+        \"mode\": \"time\",\n+        \"name\": null,\n+        \"show\": true,\n+        \"values\": []\n+      },\n+      \"yaxes\": [\n+        {\n+          \"decimals\": null,\n+          \"format\": \"short\",\n+          \"label\": \"failures/sec\",\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        },\n+        {\n+          \"format\": \"short\",\n+          \"label\": null,\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        }\n+      ],\n+      \"yaxis\": {\n+        \"align\": false,\n+        \"alignLevel\": null\n+      }\n+    },\n+    {\n+      \"aliasColors\": {},\n+      \"bars\": false,\n+      \"dashLength\": 10,\n+      \"dashes\": false,\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Training Samples Fetcher Failure Rate\",\n+      \"fill\": 1,\n+      \"fillGradient\": 0,\n+      \"gridPos\": {\n+        \"h\": 8,\n+        \"w\": 12,\n+        \"x\": 12,\n+        \"y\": 13\n+      },\n+      \"id\": 118,\n+      \"legend\": {\n+        \"alignAsTable\": false,\n+        \"avg\": false,\n+        \"current\": false,\n+        \"hideEmpty\": false,\n+        \"hideZero\": false,\n+        \"max\": false,\n+        \"min\": false,\n+        \"rightSide\": false,\n+        \"show\": true,\n+        \"total\": false,\n+        \"values\": false\n+      },\n+      \"lines\": true,\n+      \"linewidth\": 1,\n+      \"links\": [],\n+      \"nullPointMode\": \"null\",\n+      \"options\": {\n+        \"dataLinks\": []\n+      },\n+      \"paceLength\": 10,\n+      \"percentage\": false,\n+      \"pointradius\": 5,\n+      \"points\": false,\n+      \"renderer\": \"flot\",\n+      \"seriesOverrides\": [],\n+      \"spaceLength\": 10,\n+      \"stack\": false,\n+      \"steppedLine\": false,\n+      \"targets\": [\n+        {\n+          \"expr\": \"sum(irate(kafka_cruisecontrol_metricfetchermanager_training_samples_fetcher_failure_rate_count{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\",kubernetes_pod_name=~\\\"$strimzi_cluster_name-cruise-control-.*\\\"}[1m]))\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"instant\": false,\n+          \"interval\": \"\",\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"Training Samples Fetcher Failure Rate\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": [],\n+      \"timeFrom\": null,\n+      \"timeRegions\": [],\n+      \"timeShift\": null,\n+      \"title\": \"Training Samples Fetcher Failure Rate\",\n+      \"tooltip\": {\n+        \"shared\": true,\n+        \"sort\": 0,\n+        \"value_type\": \"individual\"\n+      },\n+      \"type\": \"graph\",\n+      \"xaxis\": {\n+        \"buckets\": null,\n+        \"mode\": \"time\",\n+        \"name\": null,\n+        \"show\": true,\n+        \"values\": []\n+      },\n+      \"yaxes\": [\n+        {\n+          \"decimals\": null,\n+          \"format\": \"short\",\n+          \"label\": \"failures/sec\",\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        },\n+        {\n+          \"format\": \"short\",\n+          \"label\": null,\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        }\n+      ],\n+      \"yaxis\": {\n+        \"align\": false,\n+        \"alignLevel\": null\n+      }\n+    },\n+    {\n+      \"aliasColors\": {},\n+      \"bars\": false,\n+      \"dashLength\": 10,\n+      \"dashes\": false,\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Proposal Computation Time\",\n+      \"fill\": 1,\n+      \"fillGradient\": 0,\n+      \"gridPos\": {\n+        \"h\": 8,\n+        \"w\": 12,\n+        \"x\": 0,\n+        \"y\": 21\n+      },\n+      \"id\": 109,\n+      \"legend\": {\n+        \"alignAsTable\": false,\n+        \"avg\": false,\n+        \"current\": false,\n+        \"hideEmpty\": false,\n+        \"hideZero\": false,\n+        \"max\": false,\n+        \"min\": false,\n+        \"rightSide\": false,\n+        \"show\": true,\n+        \"total\": false,\n+        \"values\": false\n+      },\n+      \"lines\": true,\n+      \"linewidth\": 1,\n+      \"links\": [],\n+      \"nullPointMode\": \"null\",\n+      \"options\": {\n+        \"dataLinks\": []\n+      },\n+      \"paceLength\": 10,\n+      \"percentage\": false,\n+      \"pointradius\": 5,\n+      \"points\": false,\n+      \"renderer\": \"flot\",\n+      \"seriesOverrides\": [],\n+      \"spaceLength\": 10,\n+      \"stack\": false,\n+      \"steppedLine\": false,\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_goaloptimizer_proposal_computation_timer_max{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\",kubernetes_pod_name=~\\\"$strimzi_cluster_name-cruise-control-.*\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"instant\": false,\n+          \"interval\": \"\",\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"max\",\n+          \"refId\": \"A\"\n+        },\n+        {\n+          \"expr\": \"kafka_cruisecontrol_goaloptimizer_proposal_computation_timer_mean{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\",kubernetes_pod_name=~\\\"$strimzi_cluster_name-cruise-control-.*\\\"}\",\n+          \"legendFormat\": \"mean\",\n+          \"refId\": \"B\"\n+        },\n+        {\n+          \"expr\": \"kafka_cruisecontrol_goaloptimizer_proposal_computation_timer_99thpercentile{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\",kubernetes_pod_name=~\\\"$strimzi_cluster_name-cruise-control-.*\\\"}\",\n+          \"legendFormat\": \"99th\",\n+          \"refId\": \"C\"\n+        },\n+        {\n+          \"expr\": \"kafka_cruisecontrol_goaloptimizer_proposal_computation_timer_999thpercentile{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\",kubernetes_pod_name=~\\\"$strimzi_cluster_name-cruise-control-.*\\\"}\",\n+          \"legendFormat\": \"99.90th\",\n+          \"refId\": \"D\"\n+        }\n+      ],\n+      \"thresholds\": [],\n+      \"timeFrom\": null,\n+      \"timeRegions\": [],\n+      \"timeShift\": null,\n+      \"title\": \"Proposal Computation Time\",\n+      \"tooltip\": {\n+        \"shared\": true,\n+        \"sort\": 0,\n+        \"value_type\": \"individual\"\n+      },\n+      \"type\": \"graph\",\n+      \"xaxis\": {\n+        \"buckets\": null,\n+        \"mode\": \"time\",\n+        \"name\": null,\n+        \"show\": true,\n+        \"values\": []\n+      },\n+      \"yaxes\": [\n+        {\n+          \"decimals\": null,\n+          \"format\": \"short\",\n+          \"label\": \"ms\",\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        },\n+        {\n+          \"format\": \"short\",\n+          \"label\": null,\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        }\n+      ],\n+      \"yaxis\": {\n+        \"align\": false,\n+        \"alignLevel\": null\n+      }\n+    },\n+    {\n+      \"aliasColors\": {\n+        \"99th\": \"light-blue\"\n+      },\n+      \"bars\": false,\n+      \"dashLength\": 10,\n+      \"dashes\": false,\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Cluster Model Creation Time\",\n+      \"fill\": 1,\n+      \"fillGradient\": 0,\n+      \"gridPos\": {\n+        \"h\": 8,\n+        \"w\": 12,\n+        \"x\": 12,\n+        \"y\": 21\n+      },\n+      \"id\": 111,\n+      \"legend\": {\n+        \"alignAsTable\": false,\n+        \"avg\": false,\n+        \"current\": false,\n+        \"hideEmpty\": false,\n+        \"hideZero\": false,\n+        \"max\": false,\n+        \"min\": false,\n+        \"rightSide\": false,\n+        \"show\": true,\n+        \"total\": false,\n+        \"values\": false\n+      },\n+      \"lines\": true,\n+      \"linewidth\": 1,\n+      \"links\": [],\n+      \"nullPointMode\": \"null\",\n+      \"options\": {\n+        \"dataLinks\": []\n+      },\n+      \"paceLength\": 10,\n+      \"percentage\": false,\n+      \"pointradius\": 5,\n+      \"points\": false,\n+      \"renderer\": \"flot\",\n+      \"seriesOverrides\": [],\n+      \"spaceLength\": 10,\n+      \"stack\": false,\n+      \"steppedLine\": false,\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_cluster_model_creation_timer_max{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\",kubernetes_pod_name=~\\\"$strimzi_cluster_name-cruise-control-.*\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"instant\": false,\n+          \"interval\": \"\",\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"max\",\n+          \"refId\": \"A\"\n+        },\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_cluster_model_creation_timer_mean{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\",kubernetes_pod_name=~\\\"$strimzi_cluster_name-cruise-control-.*\\\"}\",\n+          \"legendFormat\": \"mean\",\n+          \"refId\": \"B\"\n+        },\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_cluster_model_creation_timer_99thpercentile{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\",kubernetes_pod_name=~\\\"$strimzi_cluster_name-cruise-control-.*\\\"}\",\n+          \"legendFormat\": \"99th\",\n+          \"refId\": \"C\"\n+        },\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_cluster_model_creation_timer_999thpercentile{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\",kubernetes_pod_name=~\\\"$strimzi_cluster_name-cruise-control-.*\\\"}\",\n+          \"legendFormat\": \"99.90th\",\n+          \"refId\": \"D\"\n+        }\n+      ],\n+      \"thresholds\": [],\n+      \"timeFrom\": null,\n+      \"timeRegions\": [],\n+      \"timeShift\": null,\n+      \"title\": \"Cluster Model Creation Time\",\n+      \"tooltip\": {\n+        \"shared\": true,\n+        \"sort\": 0,\n+        \"value_type\": \"individual\"\n+      },\n+      \"type\": \"graph\",\n+      \"xaxis\": {\n+        \"buckets\": null,\n+        \"mode\": \"time\",\n+        \"name\": null,\n+        \"show\": true,\n+        \"values\": []\n+      },\n+      \"yaxes\": [\n+        {\n+          \"decimals\": null,\n+          \"format\": \"short\",\n+          \"label\": \"ms\",\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        },\n+        {\n+          \"format\": \"short\",\n+          \"label\": null,\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        }\n+      ],\n+      \"yaxis\": {\n+        \"align\": false,\n+        \"alignLevel\": null\n+      }\n+    },\n+    {\n+      \"collapsed\": false,\n+      \"gridPos\": {\n+        \"h\": 1,\n+        \"w\": 24,\n+        \"x\": 0,\n+        \"y\": 29\n+      },\n+      \"id\": 105,\n+      \"panels\": [],\n+      \"title\": \"Cruise Control REST API\",\n+      \"type\": \"row\"\n+    },\n+    {\n+      \"aliasColors\": {},\n+      \"bars\": false,\n+      \"dashLength\": 10,\n+      \"dashes\": false,\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Rebalance Request Rate\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c387808483f7d1e283db00938adcf173ec7ec2f"}, "originalPosition": 1132}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUzNzA1MQ==", "bodyText": "It's the REST API call to the /rebalance endpoint.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r462537051", "createdAt": "2020-07-29T19:30:39Z", "author": {"login": "ppatierno"}, "path": "examples/metrics/grafana-dashboards/strimzi-cruise-control.json", "diffHunk": "@@ -0,0 +1,2062 @@\n+{\n+  \"__inputs\": [\n+    {\n+      \"name\": \"DS_PROMETHEUS\",\n+      \"label\": \"Prometheus\",\n+      \"description\": \"\",\n+      \"type\": \"datasource\",\n+      \"pluginId\": \"prometheus\",\n+      \"pluginName\": \"Prometheus\"\n+    }\n+  ],\n+  \"__requires\": [\n+    {\n+      \"type\": \"grafana\",\n+      \"id\": \"grafana\",\n+      \"name\": \"Grafana\",\n+      \"version\": \"6.3.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"graph\",\n+      \"name\": \"Graph\",\n+      \"version\": \"\"\n+    },\n+    {\n+      \"type\": \"datasource\",\n+      \"id\": \"prometheus\",\n+      \"name\": \"Prometheus\",\n+      \"version\": \"1.0.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"singlestat\",\n+      \"name\": \"Singlestat\",\n+      \"version\": \"\"\n+    }\n+  ],\n+  \"annotations\": {\n+    \"list\": [\n+      {\n+        \"builtIn\": 1,\n+        \"datasource\": \"-- Grafana --\",\n+        \"enable\": true,\n+        \"hide\": true,\n+        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n+        \"name\": \"Annotations & Alerts\",\n+        \"type\": \"dashboard\"\n+      }\n+    ]\n+  },\n+  \"editable\": true,\n+  \"gnetId\": null,\n+  \"graphTooltip\": 0,\n+  \"id\": null,\n+  \"iteration\": 1596032501954,\n+  \"links\": [],\n+  \"panels\": [\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#d44a3a\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#299c46\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"The number of snapshot windows that is monitored\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 0,\n+        \"y\": 0\n+      },\n+      \"id\": 46,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"repeat\": null,\n+      \"repeatDirection\": \"h\",\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_total_monitored_windows_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"0,2\",\n+      \"title\": \"Total Monitored Windows\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"#e5ac0e\",\n+        \"#bf1b00\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Number of valid windows\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 4,\n+        \"y\": 0\n+      },\n+      \"id\": 36,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_valid_windows_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Valid Windows\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Number of ongoing executions running for proposals or rebalance\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 8,\n+        \"y\": 0\n+      },\n+      \"id\": 38,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_executor_ongoing_execution_non_kafka_assigner_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Ongoing Execution\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Balancedness Score\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 12,\n+        \"y\": 0\n+      },\n+      \"id\": 116,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_anomalydetector_balancedness_score_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Balancedness Score\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Monitored Partition Percentage\",\n+      \"format\": \"percentunit\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 16,\n+        \"y\": 0\n+      },\n+      \"id\": 115,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_monitored_partitions_percentage_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"2\",\n+      \"title\": \"Monitored Partition\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"gridPos\": {\n+        \"h\": 1,\n+        \"w\": 24,\n+        \"x\": 0,\n+        \"y\": 4\n+      },\n+      \"id\": 114,\n+      \"title\": \"Cruise Control\",\n+      \"type\": \"row\"\n+    },\n+    {\n+      \"aliasColors\": {},\n+      \"bars\": false,\n+      \"dashLength\": 10,\n+      \"dashes\": false,\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Goal Violation Rate\",\n+      \"fill\": 1,\n+      \"fillGradient\": 0,\n+      \"gridPos\": {\n+        \"h\": 8,\n+        \"w\": 12,\n+        \"x\": 0,\n+        \"y\": 5\n+      },\n+      \"id\": 106,\n+      \"legend\": {\n+        \"alignAsTable\": false,\n+        \"avg\": false,\n+        \"current\": false,\n+        \"hideEmpty\": false,\n+        \"hideZero\": false,\n+        \"max\": false,\n+        \"min\": false,\n+        \"rightSide\": false,\n+        \"show\": true,\n+        \"total\": false,\n+        \"values\": false\n+      },\n+      \"lines\": true,\n+      \"linewidth\": 1,\n+      \"links\": [],\n+      \"nullPointMode\": \"null\",\n+      \"options\": {\n+        \"dataLinks\": []\n+      },\n+      \"paceLength\": 10,\n+      \"percentage\": false,\n+      \"pointradius\": 5,\n+      \"points\": false,\n+      \"renderer\": \"flot\",\n+      \"seriesOverrides\": [],\n+      \"spaceLength\": 10,\n+      \"stack\": false,\n+      \"steppedLine\": false,\n+      \"targets\": [\n+        {\n+          \"expr\": \"sum(irate(kafka_cruisecontrol_anomalydetector_goal_violation_rate_count{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\",kubernetes_pod_name=~\\\"$strimzi_cluster_name-cruise-control-.*\\\"}[1m]))\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"instant\": false,\n+          \"interval\": \"\",\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"Goal Violation Rate\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": [],\n+      \"timeFrom\": null,\n+      \"timeRegions\": [],\n+      \"timeShift\": null,\n+      \"title\": \"Goal Violation Rate\",\n+      \"tooltip\": {\n+        \"shared\": true,\n+        \"sort\": 0,\n+        \"value_type\": \"individual\"\n+      },\n+      \"type\": \"graph\",\n+      \"xaxis\": {\n+        \"buckets\": null,\n+        \"mode\": \"time\",\n+        \"name\": null,\n+        \"show\": true,\n+        \"values\": []\n+      },\n+      \"yaxes\": [\n+        {\n+          \"decimals\": null,\n+          \"format\": \"short\",\n+          \"label\": \"violations/sec\",\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        },\n+        {\n+          \"format\": \"short\",\n+          \"label\": null,\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        }\n+      ],\n+      \"yaxis\": {\n+        \"align\": false,\n+        \"alignLevel\": null\n+      }\n+    },\n+    {\n+      \"aliasColors\": {},\n+      \"bars\": false,\n+      \"dashLength\": 10,\n+      \"dashes\": false,\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Disk Failure Rate\",\n+      \"fill\": 1,\n+      \"fillGradient\": 0,\n+      \"gridPos\": {\n+        \"h\": 8,\n+        \"w\": 12,\n+        \"x\": 12,\n+        \"y\": 5\n+      },\n+      \"id\": 107,\n+      \"legend\": {\n+        \"alignAsTable\": false,\n+        \"avg\": false,\n+        \"current\": false,\n+        \"hideEmpty\": false,\n+        \"hideZero\": false,\n+        \"max\": false,\n+        \"min\": false,\n+        \"rightSide\": false,\n+        \"show\": true,\n+        \"total\": false,\n+        \"values\": false\n+      },\n+      \"lines\": true,\n+      \"linewidth\": 1,\n+      \"links\": [],\n+      \"nullPointMode\": \"null\",\n+      \"options\": {\n+        \"dataLinks\": []\n+      },\n+      \"paceLength\": 10,\n+      \"percentage\": false,\n+      \"pointradius\": 5,\n+      \"points\": false,\n+      \"renderer\": \"flot\",\n+      \"seriesOverrides\": [],\n+      \"spaceLength\": 10,\n+      \"stack\": false,\n+      \"steppedLine\": false,\n+      \"targets\": [\n+        {\n+          \"expr\": \"sum(irate(kafka_cruisecontrol_anomalydetector_disk_failure_rate_count{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\",kubernetes_pod_name=~\\\"$strimzi_cluster_name-cruise-control-.*\\\"}[1m]))\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"instant\": false,\n+          \"interval\": \"\",\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"Disk Failure Rate\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": [],\n+      \"timeFrom\": null,\n+      \"timeRegions\": [],\n+      \"timeShift\": null,\n+      \"title\": \"Disk Failure Rate\",\n+      \"tooltip\": {\n+        \"shared\": true,\n+        \"sort\": 0,\n+        \"value_type\": \"individual\"\n+      },\n+      \"type\": \"graph\",\n+      \"xaxis\": {\n+        \"buckets\": null,\n+        \"mode\": \"time\",\n+        \"name\": null,\n+        \"show\": true,\n+        \"values\": []\n+      },\n+      \"yaxes\": [\n+        {\n+          \"decimals\": null,\n+          \"format\": \"short\",\n+          \"label\": \"failures/sec\",\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        },\n+        {\n+          \"format\": \"short\",\n+          \"label\": null,\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        }\n+      ],\n+      \"yaxis\": {\n+        \"align\": false,\n+        \"alignLevel\": null\n+      }\n+    },\n+    {\n+      \"aliasColors\": {},\n+      \"bars\": false,\n+      \"dashLength\": 10,\n+      \"dashes\": false,\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Partition Samples Fetcher Failure Rate\",\n+      \"fill\": 1,\n+      \"fillGradient\": 0,\n+      \"gridPos\": {\n+        \"h\": 8,\n+        \"w\": 12,\n+        \"x\": 0,\n+        \"y\": 13\n+      },\n+      \"id\": 117,\n+      \"legend\": {\n+        \"alignAsTable\": false,\n+        \"avg\": false,\n+        \"current\": false,\n+        \"hideEmpty\": false,\n+        \"hideZero\": false,\n+        \"max\": false,\n+        \"min\": false,\n+        \"rightSide\": false,\n+        \"show\": true,\n+        \"total\": false,\n+        \"values\": false\n+      },\n+      \"lines\": true,\n+      \"linewidth\": 1,\n+      \"links\": [],\n+      \"nullPointMode\": \"null\",\n+      \"options\": {\n+        \"dataLinks\": []\n+      },\n+      \"paceLength\": 10,\n+      \"percentage\": false,\n+      \"pointradius\": 5,\n+      \"points\": false,\n+      \"renderer\": \"flot\",\n+      \"seriesOverrides\": [],\n+      \"spaceLength\": 10,\n+      \"stack\": false,\n+      \"steppedLine\": false,\n+      \"targets\": [\n+        {\n+          \"expr\": \"sum(irate(kafka_cruisecontrol_metricfetchermanager_partition_samples_fetcher_failure_rate_count{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\",kubernetes_pod_name=~\\\"$strimzi_cluster_name-cruise-control-.*\\\"}[1m]))\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"instant\": false,\n+          \"interval\": \"\",\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"Partition Samples Fetcher Failure Rate\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": [],\n+      \"timeFrom\": null,\n+      \"timeRegions\": [],\n+      \"timeShift\": null,\n+      \"title\": \"Partition Samples Fetcher Failure Rate\",\n+      \"tooltip\": {\n+        \"shared\": true,\n+        \"sort\": 0,\n+        \"value_type\": \"individual\"\n+      },\n+      \"type\": \"graph\",\n+      \"xaxis\": {\n+        \"buckets\": null,\n+        \"mode\": \"time\",\n+        \"name\": null,\n+        \"show\": true,\n+        \"values\": []\n+      },\n+      \"yaxes\": [\n+        {\n+          \"decimals\": null,\n+          \"format\": \"short\",\n+          \"label\": \"failures/sec\",\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        },\n+        {\n+          \"format\": \"short\",\n+          \"label\": null,\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        }\n+      ],\n+      \"yaxis\": {\n+        \"align\": false,\n+        \"alignLevel\": null\n+      }\n+    },\n+    {\n+      \"aliasColors\": {},\n+      \"bars\": false,\n+      \"dashLength\": 10,\n+      \"dashes\": false,\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Training Samples Fetcher Failure Rate\",\n+      \"fill\": 1,\n+      \"fillGradient\": 0,\n+      \"gridPos\": {\n+        \"h\": 8,\n+        \"w\": 12,\n+        \"x\": 12,\n+        \"y\": 13\n+      },\n+      \"id\": 118,\n+      \"legend\": {\n+        \"alignAsTable\": false,\n+        \"avg\": false,\n+        \"current\": false,\n+        \"hideEmpty\": false,\n+        \"hideZero\": false,\n+        \"max\": false,\n+        \"min\": false,\n+        \"rightSide\": false,\n+        \"show\": true,\n+        \"total\": false,\n+        \"values\": false\n+      },\n+      \"lines\": true,\n+      \"linewidth\": 1,\n+      \"links\": [],\n+      \"nullPointMode\": \"null\",\n+      \"options\": {\n+        \"dataLinks\": []\n+      },\n+      \"paceLength\": 10,\n+      \"percentage\": false,\n+      \"pointradius\": 5,\n+      \"points\": false,\n+      \"renderer\": \"flot\",\n+      \"seriesOverrides\": [],\n+      \"spaceLength\": 10,\n+      \"stack\": false,\n+      \"steppedLine\": false,\n+      \"targets\": [\n+        {\n+          \"expr\": \"sum(irate(kafka_cruisecontrol_metricfetchermanager_training_samples_fetcher_failure_rate_count{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\",kubernetes_pod_name=~\\\"$strimzi_cluster_name-cruise-control-.*\\\"}[1m]))\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"instant\": false,\n+          \"interval\": \"\",\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"Training Samples Fetcher Failure Rate\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": [],\n+      \"timeFrom\": null,\n+      \"timeRegions\": [],\n+      \"timeShift\": null,\n+      \"title\": \"Training Samples Fetcher Failure Rate\",\n+      \"tooltip\": {\n+        \"shared\": true,\n+        \"sort\": 0,\n+        \"value_type\": \"individual\"\n+      },\n+      \"type\": \"graph\",\n+      \"xaxis\": {\n+        \"buckets\": null,\n+        \"mode\": \"time\",\n+        \"name\": null,\n+        \"show\": true,\n+        \"values\": []\n+      },\n+      \"yaxes\": [\n+        {\n+          \"decimals\": null,\n+          \"format\": \"short\",\n+          \"label\": \"failures/sec\",\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        },\n+        {\n+          \"format\": \"short\",\n+          \"label\": null,\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        }\n+      ],\n+      \"yaxis\": {\n+        \"align\": false,\n+        \"alignLevel\": null\n+      }\n+    },\n+    {\n+      \"aliasColors\": {},\n+      \"bars\": false,\n+      \"dashLength\": 10,\n+      \"dashes\": false,\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Proposal Computation Time\",\n+      \"fill\": 1,\n+      \"fillGradient\": 0,\n+      \"gridPos\": {\n+        \"h\": 8,\n+        \"w\": 12,\n+        \"x\": 0,\n+        \"y\": 21\n+      },\n+      \"id\": 109,\n+      \"legend\": {\n+        \"alignAsTable\": false,\n+        \"avg\": false,\n+        \"current\": false,\n+        \"hideEmpty\": false,\n+        \"hideZero\": false,\n+        \"max\": false,\n+        \"min\": false,\n+        \"rightSide\": false,\n+        \"show\": true,\n+        \"total\": false,\n+        \"values\": false\n+      },\n+      \"lines\": true,\n+      \"linewidth\": 1,\n+      \"links\": [],\n+      \"nullPointMode\": \"null\",\n+      \"options\": {\n+        \"dataLinks\": []\n+      },\n+      \"paceLength\": 10,\n+      \"percentage\": false,\n+      \"pointradius\": 5,\n+      \"points\": false,\n+      \"renderer\": \"flot\",\n+      \"seriesOverrides\": [],\n+      \"spaceLength\": 10,\n+      \"stack\": false,\n+      \"steppedLine\": false,\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_goaloptimizer_proposal_computation_timer_max{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\",kubernetes_pod_name=~\\\"$strimzi_cluster_name-cruise-control-.*\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"instant\": false,\n+          \"interval\": \"\",\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"max\",\n+          \"refId\": \"A\"\n+        },\n+        {\n+          \"expr\": \"kafka_cruisecontrol_goaloptimizer_proposal_computation_timer_mean{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\",kubernetes_pod_name=~\\\"$strimzi_cluster_name-cruise-control-.*\\\"}\",\n+          \"legendFormat\": \"mean\",\n+          \"refId\": \"B\"\n+        },\n+        {\n+          \"expr\": \"kafka_cruisecontrol_goaloptimizer_proposal_computation_timer_99thpercentile{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\",kubernetes_pod_name=~\\\"$strimzi_cluster_name-cruise-control-.*\\\"}\",\n+          \"legendFormat\": \"99th\",\n+          \"refId\": \"C\"\n+        },\n+        {\n+          \"expr\": \"kafka_cruisecontrol_goaloptimizer_proposal_computation_timer_999thpercentile{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\",kubernetes_pod_name=~\\\"$strimzi_cluster_name-cruise-control-.*\\\"}\",\n+          \"legendFormat\": \"99.90th\",\n+          \"refId\": \"D\"\n+        }\n+      ],\n+      \"thresholds\": [],\n+      \"timeFrom\": null,\n+      \"timeRegions\": [],\n+      \"timeShift\": null,\n+      \"title\": \"Proposal Computation Time\",\n+      \"tooltip\": {\n+        \"shared\": true,\n+        \"sort\": 0,\n+        \"value_type\": \"individual\"\n+      },\n+      \"type\": \"graph\",\n+      \"xaxis\": {\n+        \"buckets\": null,\n+        \"mode\": \"time\",\n+        \"name\": null,\n+        \"show\": true,\n+        \"values\": []\n+      },\n+      \"yaxes\": [\n+        {\n+          \"decimals\": null,\n+          \"format\": \"short\",\n+          \"label\": \"ms\",\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        },\n+        {\n+          \"format\": \"short\",\n+          \"label\": null,\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        }\n+      ],\n+      \"yaxis\": {\n+        \"align\": false,\n+        \"alignLevel\": null\n+      }\n+    },\n+    {\n+      \"aliasColors\": {\n+        \"99th\": \"light-blue\"\n+      },\n+      \"bars\": false,\n+      \"dashLength\": 10,\n+      \"dashes\": false,\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Cluster Model Creation Time\",\n+      \"fill\": 1,\n+      \"fillGradient\": 0,\n+      \"gridPos\": {\n+        \"h\": 8,\n+        \"w\": 12,\n+        \"x\": 12,\n+        \"y\": 21\n+      },\n+      \"id\": 111,\n+      \"legend\": {\n+        \"alignAsTable\": false,\n+        \"avg\": false,\n+        \"current\": false,\n+        \"hideEmpty\": false,\n+        \"hideZero\": false,\n+        \"max\": false,\n+        \"min\": false,\n+        \"rightSide\": false,\n+        \"show\": true,\n+        \"total\": false,\n+        \"values\": false\n+      },\n+      \"lines\": true,\n+      \"linewidth\": 1,\n+      \"links\": [],\n+      \"nullPointMode\": \"null\",\n+      \"options\": {\n+        \"dataLinks\": []\n+      },\n+      \"paceLength\": 10,\n+      \"percentage\": false,\n+      \"pointradius\": 5,\n+      \"points\": false,\n+      \"renderer\": \"flot\",\n+      \"seriesOverrides\": [],\n+      \"spaceLength\": 10,\n+      \"stack\": false,\n+      \"steppedLine\": false,\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_cluster_model_creation_timer_max{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\",kubernetes_pod_name=~\\\"$strimzi_cluster_name-cruise-control-.*\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"instant\": false,\n+          \"interval\": \"\",\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"max\",\n+          \"refId\": \"A\"\n+        },\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_cluster_model_creation_timer_mean{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\",kubernetes_pod_name=~\\\"$strimzi_cluster_name-cruise-control-.*\\\"}\",\n+          \"legendFormat\": \"mean\",\n+          \"refId\": \"B\"\n+        },\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_cluster_model_creation_timer_99thpercentile{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\",kubernetes_pod_name=~\\\"$strimzi_cluster_name-cruise-control-.*\\\"}\",\n+          \"legendFormat\": \"99th\",\n+          \"refId\": \"C\"\n+        },\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_cluster_model_creation_timer_999thpercentile{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\",kubernetes_pod_name=~\\\"$strimzi_cluster_name-cruise-control-.*\\\"}\",\n+          \"legendFormat\": \"99.90th\",\n+          \"refId\": \"D\"\n+        }\n+      ],\n+      \"thresholds\": [],\n+      \"timeFrom\": null,\n+      \"timeRegions\": [],\n+      \"timeShift\": null,\n+      \"title\": \"Cluster Model Creation Time\",\n+      \"tooltip\": {\n+        \"shared\": true,\n+        \"sort\": 0,\n+        \"value_type\": \"individual\"\n+      },\n+      \"type\": \"graph\",\n+      \"xaxis\": {\n+        \"buckets\": null,\n+        \"mode\": \"time\",\n+        \"name\": null,\n+        \"show\": true,\n+        \"values\": []\n+      },\n+      \"yaxes\": [\n+        {\n+          \"decimals\": null,\n+          \"format\": \"short\",\n+          \"label\": \"ms\",\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        },\n+        {\n+          \"format\": \"short\",\n+          \"label\": null,\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        }\n+      ],\n+      \"yaxis\": {\n+        \"align\": false,\n+        \"alignLevel\": null\n+      }\n+    },\n+    {\n+      \"collapsed\": false,\n+      \"gridPos\": {\n+        \"h\": 1,\n+        \"w\": 24,\n+        \"x\": 0,\n+        \"y\": 29\n+      },\n+      \"id\": 105,\n+      \"panels\": [],\n+      \"title\": \"Cruise Control REST API\",\n+      \"type\": \"row\"\n+    },\n+    {\n+      \"aliasColors\": {},\n+      \"bars\": false,\n+      \"dashLength\": 10,\n+      \"dashes\": false,\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Rebalance Request Rate\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ4NjcyNg=="}, "originalCommit": {"oid": "5c387808483f7d1e283db00938adcf173ec7ec2f"}, "originalPosition": 1132}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MDU1NDA0OnYy", "diffSide": "RIGHT", "path": "examples/metrics/grafana-dashboards/strimzi-cruise-control.json", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMjo1MToxMFrOG5hmcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxMDozMDo1MFrOG6D4Zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk3MjUzMQ==", "bodyText": "AFAIK this value is not always going to 100. The user can define how many windows that CC should hold on to.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r462972531", "createdAt": "2020-07-30T12:51:10Z", "author": {"login": "tomncooper"}, "path": "examples/metrics/grafana-dashboards/strimzi-cruise-control.json", "diffHunk": "@@ -0,0 +1,2062 @@\n+{\n+  \"__inputs\": [\n+    {\n+      \"name\": \"DS_PROMETHEUS\",\n+      \"label\": \"Prometheus\",\n+      \"description\": \"\",\n+      \"type\": \"datasource\",\n+      \"pluginId\": \"prometheus\",\n+      \"pluginName\": \"Prometheus\"\n+    }\n+  ],\n+  \"__requires\": [\n+    {\n+      \"type\": \"grafana\",\n+      \"id\": \"grafana\",\n+      \"name\": \"Grafana\",\n+      \"version\": \"6.3.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"graph\",\n+      \"name\": \"Graph\",\n+      \"version\": \"\"\n+    },\n+    {\n+      \"type\": \"datasource\",\n+      \"id\": \"prometheus\",\n+      \"name\": \"Prometheus\",\n+      \"version\": \"1.0.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"singlestat\",\n+      \"name\": \"Singlestat\",\n+      \"version\": \"\"\n+    }\n+  ],\n+  \"annotations\": {\n+    \"list\": [\n+      {\n+        \"builtIn\": 1,\n+        \"datasource\": \"-- Grafana --\",\n+        \"enable\": true,\n+        \"hide\": true,\n+        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n+        \"name\": \"Annotations & Alerts\",\n+        \"type\": \"dashboard\"\n+      }\n+    ]\n+  },\n+  \"editable\": true,\n+  \"gnetId\": null,\n+  \"graphTooltip\": 0,\n+  \"id\": null,\n+  \"iteration\": 1596037257491,\n+  \"links\": [],\n+  \"panels\": [\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#d44a3a\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#299c46\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"The number of snapshot windows that are monitored\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 0,\n+        \"y\": 0\n+      },\n+      \"id\": 46,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"repeat\": null,\n+      \"repeatDirection\": \"h\",\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_total_monitored_windows_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"0,2\",\n+      \"title\": \"Total Monitored Windows\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"#e5ac0e\",\n+        \"#bf1b00\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Number of valid windows\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f56ec9209d3b6cb6e3041eb6673ac9524b68220"}, "originalPosition": 157}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzUzNDE4Mg==", "bodyText": "It's just a default provided by Grafana, it doesn't hurt I guess.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r463534182", "createdAt": "2020-07-31T10:30:50Z", "author": {"login": "ppatierno"}, "path": "examples/metrics/grafana-dashboards/strimzi-cruise-control.json", "diffHunk": "@@ -0,0 +1,2062 @@\n+{\n+  \"__inputs\": [\n+    {\n+      \"name\": \"DS_PROMETHEUS\",\n+      \"label\": \"Prometheus\",\n+      \"description\": \"\",\n+      \"type\": \"datasource\",\n+      \"pluginId\": \"prometheus\",\n+      \"pluginName\": \"Prometheus\"\n+    }\n+  ],\n+  \"__requires\": [\n+    {\n+      \"type\": \"grafana\",\n+      \"id\": \"grafana\",\n+      \"name\": \"Grafana\",\n+      \"version\": \"6.3.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"graph\",\n+      \"name\": \"Graph\",\n+      \"version\": \"\"\n+    },\n+    {\n+      \"type\": \"datasource\",\n+      \"id\": \"prometheus\",\n+      \"name\": \"Prometheus\",\n+      \"version\": \"1.0.0\"\n+    },\n+    {\n+      \"type\": \"panel\",\n+      \"id\": \"singlestat\",\n+      \"name\": \"Singlestat\",\n+      \"version\": \"\"\n+    }\n+  ],\n+  \"annotations\": {\n+    \"list\": [\n+      {\n+        \"builtIn\": 1,\n+        \"datasource\": \"-- Grafana --\",\n+        \"enable\": true,\n+        \"hide\": true,\n+        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n+        \"name\": \"Annotations & Alerts\",\n+        \"type\": \"dashboard\"\n+      }\n+    ]\n+  },\n+  \"editable\": true,\n+  \"gnetId\": null,\n+  \"graphTooltip\": 0,\n+  \"id\": null,\n+  \"iteration\": 1596037257491,\n+  \"links\": [],\n+  \"panels\": [\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#d44a3a\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#299c46\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"The number of snapshot windows that are monitored\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 4,\n+        \"w\": 4,\n+        \"x\": 0,\n+        \"y\": 0\n+      },\n+      \"id\": 46,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"options\": {},\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"repeat\": null,\n+      \"repeatDirection\": \"h\",\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"kafka_cruisecontrol_loadmonitor_total_monitored_windows_value{namespace=\\\"$kubernetes_namespace\\\",strimzi_io_cluster=\\\"$strimzi_cluster_name\\\"}\",\n+          \"format\": \"time_series\",\n+          \"hide\": false,\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"0,2\",\n+      \"title\": \"Total Monitored Windows\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": true,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"#e5ac0e\",\n+        \"#bf1b00\"\n+      ],\n+      \"datasource\": \"${DS_PROMETHEUS}\",\n+      \"description\": \"Number of valid windows\",\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk3MjUzMQ=="}, "originalCommit": {"oid": "1f56ec9209d3b6cb6e3041eb6673ac9524b68220"}, "originalPosition": 157}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MDk0MDkwOnYy", "diffSide": "RIGHT", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/CruiseControl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNDoyMjo0MlrOG5lUFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwOTozNDoxMVrOG6CTSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAzMzM2Nw==", "bodyText": "I'm not sure if this boolean needs to exist if we are always equating it to\n if (metrics != null)\n\nCould always just gate the logic on that? (i.e. line 600)\nThough it does make it minorly easier to generate the netpol. Just thought it was worth mentioning", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r463033367", "createdAt": "2020-07-30T14:22:42Z", "author": {"login": "samuel-hawker"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/CruiseControl.java", "diffHunk": "@@ -160,6 +164,7 @@ protected CruiseControl(HasMetadata resource) {\n         this.mountPath = \"/var/lib/kafka\";\n         this.logAndMetricsConfigVolumeName = LOG_AND_METRICS_CONFIG_VOLUME_NAME;\n         this.logAndMetricsConfigMountPath = LOG_AND_METRICS_CONFIG_VOLUME_MOUNT;\n+        this.isMetricsEnabled = DEFAULT_CRUISE_CONTROL_METRICS_ENABLED;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f56ec9209d3b6cb6e3041eb6673ac9524b68220"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzUwODI5Nw==", "bodyText": "I agree but this field comes from history, I would avoid to change it now because removing it means refactoring other classes still using the field and they are not related to this PR. We should do a refactoring for that in a different PR.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r463508297", "createdAt": "2020-07-31T09:34:11Z", "author": {"login": "ppatierno"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/CruiseControl.java", "diffHunk": "@@ -160,6 +164,7 @@ protected CruiseControl(HasMetadata resource) {\n         this.mountPath = \"/var/lib/kafka\";\n         this.logAndMetricsConfigVolumeName = LOG_AND_METRICS_CONFIG_VOLUME_NAME;\n         this.logAndMetricsConfigMountPath = LOG_AND_METRICS_CONFIG_VOLUME_MOUNT;\n+        this.isMetricsEnabled = DEFAULT_CRUISE_CONTROL_METRICS_ENABLED;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAzMzM2Nw=="}, "originalCommit": {"oid": "1f56ec9209d3b6cb6e3041eb6673ac9524b68220"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NDI3NjU5OnYy", "diffSide": "RIGHT", "path": "documentation/assemblies/metrics/assembly_metrics-cruise-control.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxMToxMDoyMFrOG6E2AQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxMToxMDoyMFrOG6E2AQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU0OTk1Mw==", "bodyText": "This should be \"optimization proposals\" rather than \"rebalance\" to be consitent with the rest of the docs.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r463549953", "createdAt": "2020-07-31T11:10:20Z", "author": {"login": "tomncooper"}, "path": "documentation/assemblies/metrics/assembly_metrics-cruise-control.adoc", "diffHunk": "@@ -0,0 +1,69 @@\n+// This assembly is included in the following assemblies:\n+//\n+// metrics/assembly-metrics.adoc\n+\n+[id='assembly-cruise-control-{context}']\n+= Monitor Cruise Control\n+\n+If you are already using Prometheus and Grafana for monitoring of built-in Kafka metrics, you can configure Prometheus to also scrape the Cruise Control Prometheus endpoint.\n+\n+The example Grafana dashboard for the Cruise Control provides:\n+\n+* Information about rebalance proposals computation, goals violation, cluster balancedness and more", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84f0d6d02e8a7d2faa9c5b72d47bca0e9d1b3913"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NDI4NDk3OnYy", "diffSide": "RIGHT", "path": "documentation/assemblies/metrics/assembly_metrics-cruise-control.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxMToxNDowN1rOG6E7PA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxMToxNDowN1rOG6E7PA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU1MTI5Mg==", "bodyText": "The other points don't end with a full stop so, for consitency, you should remove the one at the end of this line.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r463551292", "createdAt": "2020-07-31T11:14:07Z", "author": {"login": "tomncooper"}, "path": "documentation/assemblies/metrics/assembly_metrics-cruise-control.adoc", "diffHunk": "@@ -0,0 +1,69 @@\n+// This assembly is included in the following assemblies:\n+//\n+// metrics/assembly-metrics.adoc\n+\n+[id='assembly-cruise-control-{context}']\n+= Monitor Cruise Control\n+\n+If you are already using Prometheus and Grafana for monitoring of built-in Kafka metrics, you can configure Prometheus to also scrape the Cruise Control Prometheus endpoint.\n+\n+The example Grafana dashboard for the Cruise Control provides:\n+\n+* Information about rebalance proposals computation, goals violation, cluster balancedness and more\n+* Information about REST API calls for rebalance proposals and actual rebalance operations\n+* JVM metrics from Cruise Control itself\n+\n+== Configuring Cruise Control\n+\n+You can enable the Cruise Control metrics in the `Kafka` resource using the `cruiseControl.metrics` property that contains the JMX exporter configuration about metrics to expose.\n+\n+For example:\n++\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: Kafka\n+metadata:\n+  name: my-cluster\n+spec:\n+  # ...\n+  kafka:\n+    # ...\n+  zookeeper:\n+    # ...\n+  cruiseControl:\n+    metrics:\n+      lowercaseOutputName: true\n+      rules:\n+      - pattern: kafka.cruisecontrol<name=(.+)><>(\\w+)\n+        name: kafka_cruisecontrol_$1_$2\n+        type: GAUGE\n+----\n+\n+== Enabling the Cruise Control Grafana dashboard\n+\n+If you deployed Cruise Control with your Kafka cluster with the metrics enabled, you can enable Grafana to present the metrics data it exposes.\n+\n+A Cruise Control dashboard is provided in the `examples/metrics` directory as a JSON file:\n+\n+* `strimzi-cruise-control.json`\n+\n+When metrics data has been collected for some time, the Cruise Control charts are populated.\n+\n+Cruise Control:: Shows metrics for:\n++\n+* The number of snapshot windows that are monitored\n+* Number of time windows considered to be valid because of enough samples for computing a proposal.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84f0d6d02e8a7d2faa9c5b72d47bca0e9d1b3913"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NDI4NzcxOnYy", "diffSide": "RIGHT", "path": "documentation/assemblies/metrics/assembly_metrics-cruise-control.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxMToxNToxOVrOG6E83A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxMToxNToxOVrOG6E83A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU1MTcwOA==", "bodyText": "\"rebalances\"", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r463551708", "createdAt": "2020-07-31T11:15:19Z", "author": {"login": "tomncooper"}, "path": "documentation/assemblies/metrics/assembly_metrics-cruise-control.adoc", "diffHunk": "@@ -0,0 +1,69 @@\n+// This assembly is included in the following assemblies:\n+//\n+// metrics/assembly-metrics.adoc\n+\n+[id='assembly-cruise-control-{context}']\n+= Monitor Cruise Control\n+\n+If you are already using Prometheus and Grafana for monitoring of built-in Kafka metrics, you can configure Prometheus to also scrape the Cruise Control Prometheus endpoint.\n+\n+The example Grafana dashboard for the Cruise Control provides:\n+\n+* Information about rebalance proposals computation, goals violation, cluster balancedness and more\n+* Information about REST API calls for rebalance proposals and actual rebalance operations\n+* JVM metrics from Cruise Control itself\n+\n+== Configuring Cruise Control\n+\n+You can enable the Cruise Control metrics in the `Kafka` resource using the `cruiseControl.metrics` property that contains the JMX exporter configuration about metrics to expose.\n+\n+For example:\n++\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: Kafka\n+metadata:\n+  name: my-cluster\n+spec:\n+  # ...\n+  kafka:\n+    # ...\n+  zookeeper:\n+    # ...\n+  cruiseControl:\n+    metrics:\n+      lowercaseOutputName: true\n+      rules:\n+      - pattern: kafka.cruisecontrol<name=(.+)><>(\\w+)\n+        name: kafka_cruisecontrol_$1_$2\n+        type: GAUGE\n+----\n+\n+== Enabling the Cruise Control Grafana dashboard\n+\n+If you deployed Cruise Control with your Kafka cluster with the metrics enabled, you can enable Grafana to present the metrics data it exposes.\n+\n+A Cruise Control dashboard is provided in the `examples/metrics` directory as a JSON file:\n+\n+* `strimzi-cruise-control.json`\n+\n+When metrics data has been collected for some time, the Cruise Control charts are populated.\n+\n+Cruise Control:: Shows metrics for:\n++\n+* The number of snapshot windows that are monitored\n+* Number of time windows considered to be valid because of enough samples for computing a proposal.\n+* Number of ongoing executions running for proposals or rebalance", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84f0d6d02e8a7d2faa9c5b72d47bca0e9d1b3913"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NDI4OTA0OnYy", "diffSide": "RIGHT", "path": "documentation/assemblies/metrics/assembly_metrics-cruise-control.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxMToxNTo0NlrOG6E9nA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxMToxNTo0NlrOG6E9nA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU1MTkwMA==", "bodyText": "\"percentage\"", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r463551900", "createdAt": "2020-07-31T11:15:46Z", "author": {"login": "tomncooper"}, "path": "documentation/assemblies/metrics/assembly_metrics-cruise-control.adoc", "diffHunk": "@@ -0,0 +1,69 @@\n+// This assembly is included in the following assemblies:\n+//\n+// metrics/assembly-metrics.adoc\n+\n+[id='assembly-cruise-control-{context}']\n+= Monitor Cruise Control\n+\n+If you are already using Prometheus and Grafana for monitoring of built-in Kafka metrics, you can configure Prometheus to also scrape the Cruise Control Prometheus endpoint.\n+\n+The example Grafana dashboard for the Cruise Control provides:\n+\n+* Information about rebalance proposals computation, goals violation, cluster balancedness and more\n+* Information about REST API calls for rebalance proposals and actual rebalance operations\n+* JVM metrics from Cruise Control itself\n+\n+== Configuring Cruise Control\n+\n+You can enable the Cruise Control metrics in the `Kafka` resource using the `cruiseControl.metrics` property that contains the JMX exporter configuration about metrics to expose.\n+\n+For example:\n++\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: Kafka\n+metadata:\n+  name: my-cluster\n+spec:\n+  # ...\n+  kafka:\n+    # ...\n+  zookeeper:\n+    # ...\n+  cruiseControl:\n+    metrics:\n+      lowercaseOutputName: true\n+      rules:\n+      - pattern: kafka.cruisecontrol<name=(.+)><>(\\w+)\n+        name: kafka_cruisecontrol_$1_$2\n+        type: GAUGE\n+----\n+\n+== Enabling the Cruise Control Grafana dashboard\n+\n+If you deployed Cruise Control with your Kafka cluster with the metrics enabled, you can enable Grafana to present the metrics data it exposes.\n+\n+A Cruise Control dashboard is provided in the `examples/metrics` directory as a JSON file:\n+\n+* `strimzi-cruise-control.json`\n+\n+When metrics data has been collected for some time, the Cruise Control charts are populated.\n+\n+Cruise Control:: Shows metrics for:\n++\n+* The number of snapshot windows that are monitored\n+* Number of time windows considered to be valid because of enough samples for computing a proposal.\n+* Number of ongoing executions running for proposals or rebalance\n+* The current balancedness score of the Kafka cluster as calculated by the anomaly detector (every 5 minutes by default)\n+* The percentafe of monitored partitions", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84f0d6d02e8a7d2faa9c5b72d47bca0e9d1b3913"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NDI5MzczOnYy", "diffSide": "RIGHT", "path": "documentation/assemblies/metrics/assembly_metrics-cruise-control.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxMToxNzoyNlrOG6FALg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxMToxNzoyNlrOG6FALg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU1MjU1OA==", "bodyText": "Is it a rate? Probably better to say \"the number of goal violations reported by the anomaly detector (every 5 mins by default)\".", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r463552558", "createdAt": "2020-07-31T11:17:26Z", "author": {"login": "tomncooper"}, "path": "documentation/assemblies/metrics/assembly_metrics-cruise-control.adoc", "diffHunk": "@@ -0,0 +1,69 @@\n+// This assembly is included in the following assemblies:\n+//\n+// metrics/assembly-metrics.adoc\n+\n+[id='assembly-cruise-control-{context}']\n+= Monitor Cruise Control\n+\n+If you are already using Prometheus and Grafana for monitoring of built-in Kafka metrics, you can configure Prometheus to also scrape the Cruise Control Prometheus endpoint.\n+\n+The example Grafana dashboard for the Cruise Control provides:\n+\n+* Information about rebalance proposals computation, goals violation, cluster balancedness and more\n+* Information about REST API calls for rebalance proposals and actual rebalance operations\n+* JVM metrics from Cruise Control itself\n+\n+== Configuring Cruise Control\n+\n+You can enable the Cruise Control metrics in the `Kafka` resource using the `cruiseControl.metrics` property that contains the JMX exporter configuration about metrics to expose.\n+\n+For example:\n++\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: Kafka\n+metadata:\n+  name: my-cluster\n+spec:\n+  # ...\n+  kafka:\n+    # ...\n+  zookeeper:\n+    # ...\n+  cruiseControl:\n+    metrics:\n+      lowercaseOutputName: true\n+      rules:\n+      - pattern: kafka.cruisecontrol<name=(.+)><>(\\w+)\n+        name: kafka_cruisecontrol_$1_$2\n+        type: GAUGE\n+----\n+\n+== Enabling the Cruise Control Grafana dashboard\n+\n+If you deployed Cruise Control with your Kafka cluster with the metrics enabled, you can enable Grafana to present the metrics data it exposes.\n+\n+A Cruise Control dashboard is provided in the `examples/metrics` directory as a JSON file:\n+\n+* `strimzi-cruise-control.json`\n+\n+When metrics data has been collected for some time, the Cruise Control charts are populated.\n+\n+Cruise Control:: Shows metrics for:\n++\n+* The number of snapshot windows that are monitored\n+* Number of time windows considered to be valid because of enough samples for computing a proposal.\n+* Number of ongoing executions running for proposals or rebalance\n+* The current balancedness score of the Kafka cluster as calculated by the anomaly detector (every 5 minutes by default)\n+* The percentafe of monitored partitions\n+* How often a goal violation happens", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84f0d6d02e8a7d2faa9c5b72d47bca0e9d1b3913"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NDI5NjA3OnYy", "diffSide": "RIGHT", "path": "documentation/assemblies/metrics/assembly_metrics-cruise-control.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxMToxODozNFrOG6FByg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxMToxODozNFrOG6FByg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU1Mjk3MA==", "bodyText": "\"Rate of metric sample fetch failures\"", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r463552970", "createdAt": "2020-07-31T11:18:34Z", "author": {"login": "tomncooper"}, "path": "documentation/assemblies/metrics/assembly_metrics-cruise-control.adoc", "diffHunk": "@@ -0,0 +1,69 @@\n+// This assembly is included in the following assemblies:\n+//\n+// metrics/assembly-metrics.adoc\n+\n+[id='assembly-cruise-control-{context}']\n+= Monitor Cruise Control\n+\n+If you are already using Prometheus and Grafana for monitoring of built-in Kafka metrics, you can configure Prometheus to also scrape the Cruise Control Prometheus endpoint.\n+\n+The example Grafana dashboard for the Cruise Control provides:\n+\n+* Information about rebalance proposals computation, goals violation, cluster balancedness and more\n+* Information about REST API calls for rebalance proposals and actual rebalance operations\n+* JVM metrics from Cruise Control itself\n+\n+== Configuring Cruise Control\n+\n+You can enable the Cruise Control metrics in the `Kafka` resource using the `cruiseControl.metrics` property that contains the JMX exporter configuration about metrics to expose.\n+\n+For example:\n++\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: Kafka\n+metadata:\n+  name: my-cluster\n+spec:\n+  # ...\n+  kafka:\n+    # ...\n+  zookeeper:\n+    # ...\n+  cruiseControl:\n+    metrics:\n+      lowercaseOutputName: true\n+      rules:\n+      - pattern: kafka.cruisecontrol<name=(.+)><>(\\w+)\n+        name: kafka_cruisecontrol_$1_$2\n+        type: GAUGE\n+----\n+\n+== Enabling the Cruise Control Grafana dashboard\n+\n+If you deployed Cruise Control with your Kafka cluster with the metrics enabled, you can enable Grafana to present the metrics data it exposes.\n+\n+A Cruise Control dashboard is provided in the `examples/metrics` directory as a JSON file:\n+\n+* `strimzi-cruise-control.json`\n+\n+When metrics data has been collected for some time, the Cruise Control charts are populated.\n+\n+Cruise Control:: Shows metrics for:\n++\n+* The number of snapshot windows that are monitored\n+* Number of time windows considered to be valid because of enough samples for computing a proposal.\n+* Number of ongoing executions running for proposals or rebalance\n+* The current balancedness score of the Kafka cluster as calculated by the anomaly detector (every 5 minutes by default)\n+* The percentafe of monitored partitions\n+* How often a goal violation happens\n+* How often a disk read failure happens on the brokers\n+* Failures rate about fetching samples", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84f0d6d02e8a7d2faa9c5b72d47bca0e9d1b3913"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NDI5NjYzOnYy", "diffSide": "RIGHT", "path": "documentation/assemblies/metrics/assembly_metrics-cruise-control.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxMToxODo0OFrOG6FCHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxMToxODo0OFrOG6FCHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU1MzA1NQ==", "bodyText": "optimization proposal", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r463553055", "createdAt": "2020-07-31T11:18:48Z", "author": {"login": "tomncooper"}, "path": "documentation/assemblies/metrics/assembly_metrics-cruise-control.adoc", "diffHunk": "@@ -0,0 +1,69 @@\n+// This assembly is included in the following assemblies:\n+//\n+// metrics/assembly-metrics.adoc\n+\n+[id='assembly-cruise-control-{context}']\n+= Monitor Cruise Control\n+\n+If you are already using Prometheus and Grafana for monitoring of built-in Kafka metrics, you can configure Prometheus to also scrape the Cruise Control Prometheus endpoint.\n+\n+The example Grafana dashboard for the Cruise Control provides:\n+\n+* Information about rebalance proposals computation, goals violation, cluster balancedness and more\n+* Information about REST API calls for rebalance proposals and actual rebalance operations\n+* JVM metrics from Cruise Control itself\n+\n+== Configuring Cruise Control\n+\n+You can enable the Cruise Control metrics in the `Kafka` resource using the `cruiseControl.metrics` property that contains the JMX exporter configuration about metrics to expose.\n+\n+For example:\n++\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: Kafka\n+metadata:\n+  name: my-cluster\n+spec:\n+  # ...\n+  kafka:\n+    # ...\n+  zookeeper:\n+    # ...\n+  cruiseControl:\n+    metrics:\n+      lowercaseOutputName: true\n+      rules:\n+      - pattern: kafka.cruisecontrol<name=(.+)><>(\\w+)\n+        name: kafka_cruisecontrol_$1_$2\n+        type: GAUGE\n+----\n+\n+== Enabling the Cruise Control Grafana dashboard\n+\n+If you deployed Cruise Control with your Kafka cluster with the metrics enabled, you can enable Grafana to present the metrics data it exposes.\n+\n+A Cruise Control dashboard is provided in the `examples/metrics` directory as a JSON file:\n+\n+* `strimzi-cruise-control.json`\n+\n+When metrics data has been collected for some time, the Cruise Control charts are populated.\n+\n+Cruise Control:: Shows metrics for:\n++\n+* The number of snapshot windows that are monitored\n+* Number of time windows considered to be valid because of enough samples for computing a proposal.\n+* Number of ongoing executions running for proposals or rebalance\n+* The current balancedness score of the Kafka cluster as calculated by the anomaly detector (every 5 minutes by default)\n+* The percentafe of monitored partitions\n+* How often a goal violation happens\n+* How often a disk read failure happens on the brokers\n+* Failures rate about fetching samples\n+* Time needed for computing a rebalance proposal", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84f0d6d02e8a7d2faa9c5b72d47bca0e9d1b3913"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NDk5MjMyOnYy", "diffSide": "RIGHT", "path": "documentation/modules/metrics/proc_metrics-grafana-dashboard.adoc", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNDo1NTozOFrOG6Lk3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNzoyMDo0M1rOG6QFcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY2MDI1NA==", "bodyText": "At the end of this module there is a bulleted list of metrics for each dashboard\nI suggest adding a new list for Cruise Control.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r463660254", "createdAt": "2020-07-31T14:55:38Z", "author": {"login": "laidan6000"}, "path": "documentation/modules/metrics/proc_metrics-grafana-dashboard.adoc", "diffHunk": "@@ -15,6 +15,7 @@ Example dashboards are provided in the `examples/metrics` directory as JSON file\n * `strimzi-kafka-mirror-maker-2.json`\n * `strimzi-operators.json`\n * `strimzi-kafka-bridge.json`\n+* `strimzi-cruise-control.json`\n \n The example dashboards are a good starting point for monitoring key metrics, but they do not represent all available metrics.\n You can modify the example dashboards or add other metrics, depending on your infrastructure.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e0afebcc531af76cc05c3b72cd86df4f72abf89"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY2MzAwNw==", "bodyText": "Actually, that information is in the new assembly. I'm not sure you need to repeat it again.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r463663007", "createdAt": "2020-07-31T15:00:37Z", "author": {"login": "laidan6000"}, "path": "documentation/modules/metrics/proc_metrics-grafana-dashboard.adoc", "diffHunk": "@@ -15,6 +15,7 @@ Example dashboards are provided in the `examples/metrics` directory as JSON file\n * `strimzi-kafka-mirror-maker-2.json`\n * `strimzi-operators.json`\n * `strimzi-kafka-bridge.json`\n+* `strimzi-cruise-control.json`\n \n The example dashboards are a good starting point for monitoring key metrics, but they do not represent all available metrics.\n You can modify the example dashboards or add other metrics, depending on your infrastructure.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY2MDI1NA=="}, "originalCommit": {"oid": "5e0afebcc531af76cc05c3b72cd86df4f72abf89"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzczNDEyOA==", "bodyText": "Yeah the list is already in the new assembly as for the bridge, I don't think we should repeat it again.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r463734128", "createdAt": "2020-07-31T17:20:43Z", "author": {"login": "ppatierno"}, "path": "documentation/modules/metrics/proc_metrics-grafana-dashboard.adoc", "diffHunk": "@@ -15,6 +15,7 @@ Example dashboards are provided in the `examples/metrics` directory as JSON file\n * `strimzi-kafka-mirror-maker-2.json`\n * `strimzi-operators.json`\n * `strimzi-kafka-bridge.json`\n+* `strimzi-cruise-control.json`\n \n The example dashboards are a good starting point for monitoring key metrics, but they do not represent all available metrics.\n You can modify the example dashboards or add other metrics, depending on your infrastructure.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY2MDI1NA=="}, "originalCommit": {"oid": "5e0afebcc531af76cc05c3b72cd86df4f72abf89"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NTAwNjk3OnYy", "diffSide": "RIGHT", "path": "documentation/assemblies/metrics/assembly_metrics-cruise-control.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNDo1OTo0OFrOG6Lt-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNDo1OTo0OFrOG6Lt-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY2MjU4Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The example Grafana dashboard for the Cruise Control provides:\n          \n          \n            \n            The example Grafana dashboard for Cruise Control provides:", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r463662586", "createdAt": "2020-07-31T14:59:48Z", "author": {"login": "laidan6000"}, "path": "documentation/assemblies/metrics/assembly_metrics-cruise-control.adoc", "diffHunk": "@@ -0,0 +1,69 @@\n+// This assembly is included in the following assemblies:\n+//\n+// metrics/assembly-metrics.adoc\n+\n+[id='assembly-cruise-control-{context}']\n+= Monitor Cruise Control\n+\n+If you are already using Prometheus and Grafana for monitoring of built-in Kafka metrics, you can configure Prometheus to also scrape the Cruise Control Prometheus endpoint.\n+\n+The example Grafana dashboard for the Cruise Control provides:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e0afebcc531af76cc05c3b72cd86df4f72abf89"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NTAxMjAxOnYy", "diffSide": "RIGHT", "path": "documentation/assemblies/metrics/assembly_metrics-cruise-control.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNTowMToxN1rOG6Lw-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNTowMToxN1rOG6Lw-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY2MzM1Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Information about optimization proposals computation, goals violation, cluster balancedness and more\n          \n          \n            \n            * Information about optimization proposals computation, goals violation, cluster balancedness, and more", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r463663353", "createdAt": "2020-07-31T15:01:17Z", "author": {"login": "laidan6000"}, "path": "documentation/assemblies/metrics/assembly_metrics-cruise-control.adoc", "diffHunk": "@@ -0,0 +1,69 @@\n+// This assembly is included in the following assemblies:\n+//\n+// metrics/assembly-metrics.adoc\n+\n+[id='assembly-cruise-control-{context}']\n+= Monitor Cruise Control\n+\n+If you are already using Prometheus and Grafana for monitoring of built-in Kafka metrics, you can configure Prometheus to also scrape the Cruise Control Prometheus endpoint.\n+\n+The example Grafana dashboard for the Cruise Control provides:\n+\n+* Information about optimization proposals computation, goals violation, cluster balancedness and more", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e0afebcc531af76cc05c3b72cd86df4f72abf89"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NTAxOTM0OnYy", "diffSide": "RIGHT", "path": "documentation/assemblies/metrics/assembly_metrics-cruise-control.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNTowMzoyNFrOG6L1fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNTowMzoyNFrOG6L1fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY2NDUxMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            You can enable the Cruise Control metrics in the `Kafka` resource using the `cruiseControl.metrics` property that contains the JMX exporter configuration about metrics to expose.\n          \n          \n            \n            You can enable the Cruise Control metrics in the `Kafka` resource using the `cruiseControl.metrics` property that contains the JMX exporter configuration about the metrics to expose.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r463664511", "createdAt": "2020-07-31T15:03:24Z", "author": {"login": "laidan6000"}, "path": "documentation/assemblies/metrics/assembly_metrics-cruise-control.adoc", "diffHunk": "@@ -0,0 +1,69 @@\n+// This assembly is included in the following assemblies:\n+//\n+// metrics/assembly-metrics.adoc\n+\n+[id='assembly-cruise-control-{context}']\n+= Monitor Cruise Control\n+\n+If you are already using Prometheus and Grafana for monitoring of built-in Kafka metrics, you can configure Prometheus to also scrape the Cruise Control Prometheus endpoint.\n+\n+The example Grafana dashboard for the Cruise Control provides:\n+\n+* Information about optimization proposals computation, goals violation, cluster balancedness and more\n+* Information about REST API calls for rebalance proposals and actual rebalance operations\n+* JVM metrics from Cruise Control itself\n+\n+== Configuring Cruise Control\n+\n+You can enable the Cruise Control metrics in the `Kafka` resource using the `cruiseControl.metrics` property that contains the JMX exporter configuration about metrics to expose.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e0afebcc531af76cc05c3b72cd86df4f72abf89"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NTAyMjczOnYy", "diffSide": "RIGHT", "path": "documentation/assemblies/metrics/assembly_metrics-cruise-control.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNTowNDoyOFrOG6L3rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNzoyMzoyM1rOG6QKDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY2NTA3MA==", "bodyText": "You don't need a plus here unless I'm mistaken!", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r463665070", "createdAt": "2020-07-31T15:04:28Z", "author": {"login": "laidan6000"}, "path": "documentation/assemblies/metrics/assembly_metrics-cruise-control.adoc", "diffHunk": "@@ -0,0 +1,69 @@\n+// This assembly is included in the following assemblies:\n+//\n+// metrics/assembly-metrics.adoc\n+\n+[id='assembly-cruise-control-{context}']\n+= Monitor Cruise Control\n+\n+If you are already using Prometheus and Grafana for monitoring of built-in Kafka metrics, you can configure Prometheus to also scrape the Cruise Control Prometheus endpoint.\n+\n+The example Grafana dashboard for the Cruise Control provides:\n+\n+* Information about optimization proposals computation, goals violation, cluster balancedness and more\n+* Information about REST API calls for rebalance proposals and actual rebalance operations\n+* JVM metrics from Cruise Control itself\n+\n+== Configuring Cruise Control\n+\n+You can enable the Cruise Control metrics in the `Kafka` resource using the `cruiseControl.metrics` property that contains the JMX exporter configuration about metrics to expose.\n+\n+For example:\n++", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e0afebcc531af76cc05c3b72cd86df4f72abf89"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzczNTMwOA==", "bodyText": "I copied it from the assembly_metrics-kafka-bridge.adoc, if you think it's not needed I am going to remove it anyway.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r463735308", "createdAt": "2020-07-31T17:23:23Z", "author": {"login": "ppatierno"}, "path": "documentation/assemblies/metrics/assembly_metrics-cruise-control.adoc", "diffHunk": "@@ -0,0 +1,69 @@\n+// This assembly is included in the following assemblies:\n+//\n+// metrics/assembly-metrics.adoc\n+\n+[id='assembly-cruise-control-{context}']\n+= Monitor Cruise Control\n+\n+If you are already using Prometheus and Grafana for monitoring of built-in Kafka metrics, you can configure Prometheus to also scrape the Cruise Control Prometheus endpoint.\n+\n+The example Grafana dashboard for the Cruise Control provides:\n+\n+* Information about optimization proposals computation, goals violation, cluster balancedness and more\n+* Information about REST API calls for rebalance proposals and actual rebalance operations\n+* JVM metrics from Cruise Control itself\n+\n+== Configuring Cruise Control\n+\n+You can enable the Cruise Control metrics in the `Kafka` resource using the `cruiseControl.metrics` property that contains the JMX exporter configuration about metrics to expose.\n+\n+For example:\n++", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY2NTA3MA=="}, "originalCommit": {"oid": "5e0afebcc531af76cc05c3b72cd86df4f72abf89"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NTAyNzY4OnYy", "diffSide": "RIGHT", "path": "documentation/assemblies/metrics/assembly_metrics-cruise-control.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNTowNTo0NlrOG6L6jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNTowNTo0NlrOG6L6jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY2NTgwNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * The number of snapshot windows that are monitored\n          \n          \n            \n            * Number of snapshot windows that are monitored by Cruise Control", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r463665806", "createdAt": "2020-07-31T15:05:46Z", "author": {"login": "laidan6000"}, "path": "documentation/assemblies/metrics/assembly_metrics-cruise-control.adoc", "diffHunk": "@@ -0,0 +1,69 @@\n+// This assembly is included in the following assemblies:\n+//\n+// metrics/assembly-metrics.adoc\n+\n+[id='assembly-cruise-control-{context}']\n+= Monitor Cruise Control\n+\n+If you are already using Prometheus and Grafana for monitoring of built-in Kafka metrics, you can configure Prometheus to also scrape the Cruise Control Prometheus endpoint.\n+\n+The example Grafana dashboard for the Cruise Control provides:\n+\n+* Information about optimization proposals computation, goals violation, cluster balancedness and more\n+* Information about REST API calls for rebalance proposals and actual rebalance operations\n+* JVM metrics from Cruise Control itself\n+\n+== Configuring Cruise Control\n+\n+You can enable the Cruise Control metrics in the `Kafka` resource using the `cruiseControl.metrics` property that contains the JMX exporter configuration about metrics to expose.\n+\n+For example:\n++\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: Kafka\n+metadata:\n+  name: my-cluster\n+spec:\n+  # ...\n+  kafka:\n+    # ...\n+  zookeeper:\n+    # ...\n+  cruiseControl:\n+    metrics:\n+      lowercaseOutputName: true\n+      rules:\n+      - pattern: kafka.cruisecontrol<name=(.+)><>(\\w+)\n+        name: kafka_cruisecontrol_$1_$2\n+        type: GAUGE\n+----\n+\n+== Enabling the Cruise Control Grafana dashboard\n+\n+If you deployed Cruise Control with your Kafka cluster with the metrics enabled, you can enable Grafana to present the metrics data it exposes.\n+\n+A Cruise Control dashboard is provided in the `examples/metrics` directory as a JSON file:\n+\n+* `strimzi-cruise-control.json`\n+\n+When metrics data has been collected for some time, the Cruise Control charts are populated.\n+\n+Cruise Control:: Shows metrics for:\n++\n+* The number of snapshot windows that are monitored", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e0afebcc531af76cc05c3b72cd86df4f72abf89"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NTAzNDYxOnYy", "diffSide": "RIGHT", "path": "documentation/assemblies/metrics/assembly_metrics-cruise-control.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNTowNzo0M1rOG6L-ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNTowNzo0M1rOG6L-ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY2Njg1MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Number of time windows considered to be valid because of enough samples for computing a proposal\n          \n          \n            \n            * Number of time windows considered valid because they contain enough samples to compute an optimization proposal", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r463666851", "createdAt": "2020-07-31T15:07:43Z", "author": {"login": "laidan6000"}, "path": "documentation/assemblies/metrics/assembly_metrics-cruise-control.adoc", "diffHunk": "@@ -0,0 +1,69 @@\n+// This assembly is included in the following assemblies:\n+//\n+// metrics/assembly-metrics.adoc\n+\n+[id='assembly-cruise-control-{context}']\n+= Monitor Cruise Control\n+\n+If you are already using Prometheus and Grafana for monitoring of built-in Kafka metrics, you can configure Prometheus to also scrape the Cruise Control Prometheus endpoint.\n+\n+The example Grafana dashboard for the Cruise Control provides:\n+\n+* Information about optimization proposals computation, goals violation, cluster balancedness and more\n+* Information about REST API calls for rebalance proposals and actual rebalance operations\n+* JVM metrics from Cruise Control itself\n+\n+== Configuring Cruise Control\n+\n+You can enable the Cruise Control metrics in the `Kafka` resource using the `cruiseControl.metrics` property that contains the JMX exporter configuration about metrics to expose.\n+\n+For example:\n++\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: Kafka\n+metadata:\n+  name: my-cluster\n+spec:\n+  # ...\n+  kafka:\n+    # ...\n+  zookeeper:\n+    # ...\n+  cruiseControl:\n+    metrics:\n+      lowercaseOutputName: true\n+      rules:\n+      - pattern: kafka.cruisecontrol<name=(.+)><>(\\w+)\n+        name: kafka_cruisecontrol_$1_$2\n+        type: GAUGE\n+----\n+\n+== Enabling the Cruise Control Grafana dashboard\n+\n+If you deployed Cruise Control with your Kafka cluster with the metrics enabled, you can enable Grafana to present the metrics data it exposes.\n+\n+A Cruise Control dashboard is provided in the `examples/metrics` directory as a JSON file:\n+\n+* `strimzi-cruise-control.json`\n+\n+When metrics data has been collected for some time, the Cruise Control charts are populated.\n+\n+Cruise Control:: Shows metrics for:\n++\n+* The number of snapshot windows that are monitored\n+* Number of time windows considered to be valid because of enough samples for computing a proposal", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e0afebcc531af76cc05c3b72cd86df4f72abf89"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NTAzODAzOnYy", "diffSide": "RIGHT", "path": "documentation/assemblies/metrics/assembly_metrics-cruise-control.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNTowODo0MlrOG6MAvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNTowODo0MlrOG6MAvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY2NzM5MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * The current balancedness score of the Kafka cluster as calculated by the anomaly detector (every 5 minutes by default)\n          \n          \n            \n            * Current balancedness score of the Kafka cluster as calculated by the anomaly detector component of Cruise Control (every 5 minutes by default)", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r463667390", "createdAt": "2020-07-31T15:08:42Z", "author": {"login": "laidan6000"}, "path": "documentation/assemblies/metrics/assembly_metrics-cruise-control.adoc", "diffHunk": "@@ -0,0 +1,69 @@\n+// This assembly is included in the following assemblies:\n+//\n+// metrics/assembly-metrics.adoc\n+\n+[id='assembly-cruise-control-{context}']\n+= Monitor Cruise Control\n+\n+If you are already using Prometheus and Grafana for monitoring of built-in Kafka metrics, you can configure Prometheus to also scrape the Cruise Control Prometheus endpoint.\n+\n+The example Grafana dashboard for the Cruise Control provides:\n+\n+* Information about optimization proposals computation, goals violation, cluster balancedness and more\n+* Information about REST API calls for rebalance proposals and actual rebalance operations\n+* JVM metrics from Cruise Control itself\n+\n+== Configuring Cruise Control\n+\n+You can enable the Cruise Control metrics in the `Kafka` resource using the `cruiseControl.metrics` property that contains the JMX exporter configuration about metrics to expose.\n+\n+For example:\n++\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: Kafka\n+metadata:\n+  name: my-cluster\n+spec:\n+  # ...\n+  kafka:\n+    # ...\n+  zookeeper:\n+    # ...\n+  cruiseControl:\n+    metrics:\n+      lowercaseOutputName: true\n+      rules:\n+      - pattern: kafka.cruisecontrol<name=(.+)><>(\\w+)\n+        name: kafka_cruisecontrol_$1_$2\n+        type: GAUGE\n+----\n+\n+== Enabling the Cruise Control Grafana dashboard\n+\n+If you deployed Cruise Control with your Kafka cluster with the metrics enabled, you can enable Grafana to present the metrics data it exposes.\n+\n+A Cruise Control dashboard is provided in the `examples/metrics` directory as a JSON file:\n+\n+* `strimzi-cruise-control.json`\n+\n+When metrics data has been collected for some time, the Cruise Control charts are populated.\n+\n+Cruise Control:: Shows metrics for:\n++\n+* The number of snapshot windows that are monitored\n+* Number of time windows considered to be valid because of enough samples for computing a proposal\n+* Number of ongoing executions running for proposals or rebalances\n+* The current balancedness score of the Kafka cluster as calculated by the anomaly detector (every 5 minutes by default)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e0afebcc531af76cc05c3b72cd86df4f72abf89"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NTA0MTI0OnYy", "diffSide": "RIGHT", "path": "documentation/assemblies/metrics/assembly_metrics-cruise-control.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNTowOToyN1rOG6MCjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNTowOToyN1rOG6MCjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY2Nzg1Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * The percentage of monitored partitions\n          \n          \n            \n            * Percentage of monitored partitions", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r463667852", "createdAt": "2020-07-31T15:09:27Z", "author": {"login": "laidan6000"}, "path": "documentation/assemblies/metrics/assembly_metrics-cruise-control.adoc", "diffHunk": "@@ -0,0 +1,69 @@\n+// This assembly is included in the following assemblies:\n+//\n+// metrics/assembly-metrics.adoc\n+\n+[id='assembly-cruise-control-{context}']\n+= Monitor Cruise Control\n+\n+If you are already using Prometheus and Grafana for monitoring of built-in Kafka metrics, you can configure Prometheus to also scrape the Cruise Control Prometheus endpoint.\n+\n+The example Grafana dashboard for the Cruise Control provides:\n+\n+* Information about optimization proposals computation, goals violation, cluster balancedness and more\n+* Information about REST API calls for rebalance proposals and actual rebalance operations\n+* JVM metrics from Cruise Control itself\n+\n+== Configuring Cruise Control\n+\n+You can enable the Cruise Control metrics in the `Kafka` resource using the `cruiseControl.metrics` property that contains the JMX exporter configuration about metrics to expose.\n+\n+For example:\n++\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: Kafka\n+metadata:\n+  name: my-cluster\n+spec:\n+  # ...\n+  kafka:\n+    # ...\n+  zookeeper:\n+    # ...\n+  cruiseControl:\n+    metrics:\n+      lowercaseOutputName: true\n+      rules:\n+      - pattern: kafka.cruisecontrol<name=(.+)><>(\\w+)\n+        name: kafka_cruisecontrol_$1_$2\n+        type: GAUGE\n+----\n+\n+== Enabling the Cruise Control Grafana dashboard\n+\n+If you deployed Cruise Control with your Kafka cluster with the metrics enabled, you can enable Grafana to present the metrics data it exposes.\n+\n+A Cruise Control dashboard is provided in the `examples/metrics` directory as a JSON file:\n+\n+* `strimzi-cruise-control.json`\n+\n+When metrics data has been collected for some time, the Cruise Control charts are populated.\n+\n+Cruise Control:: Shows metrics for:\n++\n+* The number of snapshot windows that are monitored\n+* Number of time windows considered to be valid because of enough samples for computing a proposal\n+* Number of ongoing executions running for proposals or rebalances\n+* The current balancedness score of the Kafka cluster as calculated by the anomaly detector (every 5 minutes by default)\n+* The percentage of monitored partitions", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e0afebcc531af76cc05c3b72cd86df4f72abf89"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NTA0MjUxOnYy", "diffSide": "RIGHT", "path": "documentation/assemblies/metrics/assembly_metrics-cruise-control.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNTowOTo0NFrOG6MDRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNTowOTo0NFrOG6MDRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY2ODAzNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * The number of goal violations reported by the anomaly detector (every 5 minutes by default)\n          \n          \n            \n            * Number of goal violations reported by the anomaly detector (every 5 minutes by default)", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r463668036", "createdAt": "2020-07-31T15:09:44Z", "author": {"login": "laidan6000"}, "path": "documentation/assemblies/metrics/assembly_metrics-cruise-control.adoc", "diffHunk": "@@ -0,0 +1,69 @@\n+// This assembly is included in the following assemblies:\n+//\n+// metrics/assembly-metrics.adoc\n+\n+[id='assembly-cruise-control-{context}']\n+= Monitor Cruise Control\n+\n+If you are already using Prometheus and Grafana for monitoring of built-in Kafka metrics, you can configure Prometheus to also scrape the Cruise Control Prometheus endpoint.\n+\n+The example Grafana dashboard for the Cruise Control provides:\n+\n+* Information about optimization proposals computation, goals violation, cluster balancedness and more\n+* Information about REST API calls for rebalance proposals and actual rebalance operations\n+* JVM metrics from Cruise Control itself\n+\n+== Configuring Cruise Control\n+\n+You can enable the Cruise Control metrics in the `Kafka` resource using the `cruiseControl.metrics` property that contains the JMX exporter configuration about metrics to expose.\n+\n+For example:\n++\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: Kafka\n+metadata:\n+  name: my-cluster\n+spec:\n+  # ...\n+  kafka:\n+    # ...\n+  zookeeper:\n+    # ...\n+  cruiseControl:\n+    metrics:\n+      lowercaseOutputName: true\n+      rules:\n+      - pattern: kafka.cruisecontrol<name=(.+)><>(\\w+)\n+        name: kafka_cruisecontrol_$1_$2\n+        type: GAUGE\n+----\n+\n+== Enabling the Cruise Control Grafana dashboard\n+\n+If you deployed Cruise Control with your Kafka cluster with the metrics enabled, you can enable Grafana to present the metrics data it exposes.\n+\n+A Cruise Control dashboard is provided in the `examples/metrics` directory as a JSON file:\n+\n+* `strimzi-cruise-control.json`\n+\n+When metrics data has been collected for some time, the Cruise Control charts are populated.\n+\n+Cruise Control:: Shows metrics for:\n++\n+* The number of snapshot windows that are monitored\n+* Number of time windows considered to be valid because of enough samples for computing a proposal\n+* Number of ongoing executions running for proposals or rebalances\n+* The current balancedness score of the Kafka cluster as calculated by the anomaly detector (every 5 minutes by default)\n+* The percentage of monitored partitions\n+* The number of goal violations reported by the anomaly detector (every 5 minutes by default)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e0afebcc531af76cc05c3b72cd86df4f72abf89"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NTA0NTcxOnYy", "diffSide": "RIGHT", "path": "documentation/assemblies/metrics/assembly_metrics-cruise-control.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNToxMDoyM1rOG6ME-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNToxMDoyM1rOG6ME-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY2ODQ3Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Time needed for computing an optimization proposal\n          \n          \n            \n            * Time needed to compute an optimization proposal", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r463668473", "createdAt": "2020-07-31T15:10:23Z", "author": {"login": "laidan6000"}, "path": "documentation/assemblies/metrics/assembly_metrics-cruise-control.adoc", "diffHunk": "@@ -0,0 +1,69 @@\n+// This assembly is included in the following assemblies:\n+//\n+// metrics/assembly-metrics.adoc\n+\n+[id='assembly-cruise-control-{context}']\n+= Monitor Cruise Control\n+\n+If you are already using Prometheus and Grafana for monitoring of built-in Kafka metrics, you can configure Prometheus to also scrape the Cruise Control Prometheus endpoint.\n+\n+The example Grafana dashboard for the Cruise Control provides:\n+\n+* Information about optimization proposals computation, goals violation, cluster balancedness and more\n+* Information about REST API calls for rebalance proposals and actual rebalance operations\n+* JVM metrics from Cruise Control itself\n+\n+== Configuring Cruise Control\n+\n+You can enable the Cruise Control metrics in the `Kafka` resource using the `cruiseControl.metrics` property that contains the JMX exporter configuration about metrics to expose.\n+\n+For example:\n++\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: Kafka\n+metadata:\n+  name: my-cluster\n+spec:\n+  # ...\n+  kafka:\n+    # ...\n+  zookeeper:\n+    # ...\n+  cruiseControl:\n+    metrics:\n+      lowercaseOutputName: true\n+      rules:\n+      - pattern: kafka.cruisecontrol<name=(.+)><>(\\w+)\n+        name: kafka_cruisecontrol_$1_$2\n+        type: GAUGE\n+----\n+\n+== Enabling the Cruise Control Grafana dashboard\n+\n+If you deployed Cruise Control with your Kafka cluster with the metrics enabled, you can enable Grafana to present the metrics data it exposes.\n+\n+A Cruise Control dashboard is provided in the `examples/metrics` directory as a JSON file:\n+\n+* `strimzi-cruise-control.json`\n+\n+When metrics data has been collected for some time, the Cruise Control charts are populated.\n+\n+Cruise Control:: Shows metrics for:\n++\n+* The number of snapshot windows that are monitored\n+* Number of time windows considered to be valid because of enough samples for computing a proposal\n+* Number of ongoing executions running for proposals or rebalances\n+* The current balancedness score of the Kafka cluster as calculated by the anomaly detector (every 5 minutes by default)\n+* The percentage of monitored partitions\n+* The number of goal violations reported by the anomaly detector (every 5 minutes by default)\n+* How often a disk read failure happens on the brokers\n+* Rate of metric sample fetch failures\n+* Time needed for computing an optimization proposal", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e0afebcc531af76cc05c3b72cd86df4f72abf89"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NTA0NzMxOnYy", "diffSide": "RIGHT", "path": "documentation/assemblies/metrics/assembly_metrics-cruise-control.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNToxMDo1MVrOG6MF9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNToxMDo1MVrOG6MF9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY2ODcyNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Time for creating a cluster model\n          \n          \n            \n            * Time needed to create the cluster model", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r463668724", "createdAt": "2020-07-31T15:10:51Z", "author": {"login": "laidan6000"}, "path": "documentation/assemblies/metrics/assembly_metrics-cruise-control.adoc", "diffHunk": "@@ -0,0 +1,69 @@\n+// This assembly is included in the following assemblies:\n+//\n+// metrics/assembly-metrics.adoc\n+\n+[id='assembly-cruise-control-{context}']\n+= Monitor Cruise Control\n+\n+If you are already using Prometheus and Grafana for monitoring of built-in Kafka metrics, you can configure Prometheus to also scrape the Cruise Control Prometheus endpoint.\n+\n+The example Grafana dashboard for the Cruise Control provides:\n+\n+* Information about optimization proposals computation, goals violation, cluster balancedness and more\n+* Information about REST API calls for rebalance proposals and actual rebalance operations\n+* JVM metrics from Cruise Control itself\n+\n+== Configuring Cruise Control\n+\n+You can enable the Cruise Control metrics in the `Kafka` resource using the `cruiseControl.metrics` property that contains the JMX exporter configuration about metrics to expose.\n+\n+For example:\n++\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: Kafka\n+metadata:\n+  name: my-cluster\n+spec:\n+  # ...\n+  kafka:\n+    # ...\n+  zookeeper:\n+    # ...\n+  cruiseControl:\n+    metrics:\n+      lowercaseOutputName: true\n+      rules:\n+      - pattern: kafka.cruisecontrol<name=(.+)><>(\\w+)\n+        name: kafka_cruisecontrol_$1_$2\n+        type: GAUGE\n+----\n+\n+== Enabling the Cruise Control Grafana dashboard\n+\n+If you deployed Cruise Control with your Kafka cluster with the metrics enabled, you can enable Grafana to present the metrics data it exposes.\n+\n+A Cruise Control dashboard is provided in the `examples/metrics` directory as a JSON file:\n+\n+* `strimzi-cruise-control.json`\n+\n+When metrics data has been collected for some time, the Cruise Control charts are populated.\n+\n+Cruise Control:: Shows metrics for:\n++\n+* The number of snapshot windows that are monitored\n+* Number of time windows considered to be valid because of enough samples for computing a proposal\n+* Number of ongoing executions running for proposals or rebalances\n+* The current balancedness score of the Kafka cluster as calculated by the anomaly detector (every 5 minutes by default)\n+* The percentage of monitored partitions\n+* The number of goal violations reported by the anomaly detector (every 5 minutes by default)\n+* How often a disk read failure happens on the brokers\n+* Rate of metric sample fetch failures\n+* Time needed for computing an optimization proposal\n+* Time for creating a cluster model", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e0afebcc531af76cc05c3b72cd86df4f72abf89"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NTA0ODYyOnYy", "diffSide": "RIGHT", "path": "documentation/assemblies/metrics/assembly_metrics-cruise-control.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNToxMToxM1rOG6MGxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNToxMToxM1rOG6MGxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY2ODkzNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * How often a proposal request or an actual rebalance request is made through the REST API\n          \n          \n            \n            * How often a proposal request or an actual rebalance request is made through the Cruise Control REST API", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r463668934", "createdAt": "2020-07-31T15:11:13Z", "author": {"login": "laidan6000"}, "path": "documentation/assemblies/metrics/assembly_metrics-cruise-control.adoc", "diffHunk": "@@ -0,0 +1,69 @@\n+// This assembly is included in the following assemblies:\n+//\n+// metrics/assembly-metrics.adoc\n+\n+[id='assembly-cruise-control-{context}']\n+= Monitor Cruise Control\n+\n+If you are already using Prometheus and Grafana for monitoring of built-in Kafka metrics, you can configure Prometheus to also scrape the Cruise Control Prometheus endpoint.\n+\n+The example Grafana dashboard for the Cruise Control provides:\n+\n+* Information about optimization proposals computation, goals violation, cluster balancedness and more\n+* Information about REST API calls for rebalance proposals and actual rebalance operations\n+* JVM metrics from Cruise Control itself\n+\n+== Configuring Cruise Control\n+\n+You can enable the Cruise Control metrics in the `Kafka` resource using the `cruiseControl.metrics` property that contains the JMX exporter configuration about metrics to expose.\n+\n+For example:\n++\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: Kafka\n+metadata:\n+  name: my-cluster\n+spec:\n+  # ...\n+  kafka:\n+    # ...\n+  zookeeper:\n+    # ...\n+  cruiseControl:\n+    metrics:\n+      lowercaseOutputName: true\n+      rules:\n+      - pattern: kafka.cruisecontrol<name=(.+)><>(\\w+)\n+        name: kafka_cruisecontrol_$1_$2\n+        type: GAUGE\n+----\n+\n+== Enabling the Cruise Control Grafana dashboard\n+\n+If you deployed Cruise Control with your Kafka cluster with the metrics enabled, you can enable Grafana to present the metrics data it exposes.\n+\n+A Cruise Control dashboard is provided in the `examples/metrics` directory as a JSON file:\n+\n+* `strimzi-cruise-control.json`\n+\n+When metrics data has been collected for some time, the Cruise Control charts are populated.\n+\n+Cruise Control:: Shows metrics for:\n++\n+* The number of snapshot windows that are monitored\n+* Number of time windows considered to be valid because of enough samples for computing a proposal\n+* Number of ongoing executions running for proposals or rebalances\n+* The current balancedness score of the Kafka cluster as calculated by the anomaly detector (every 5 minutes by default)\n+* The percentage of monitored partitions\n+* The number of goal violations reported by the anomaly detector (every 5 minutes by default)\n+* How often a disk read failure happens on the brokers\n+* Rate of metric sample fetch failures\n+* Time needed for computing an optimization proposal\n+* Time for creating a cluster model\n+* How often a proposal request or an actual rebalance request is made through the REST API", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e0afebcc531af76cc05c3b72cd86df4f72abf89"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NTA0OTY0OnYy", "diffSide": "RIGHT", "path": "documentation/assemblies/metrics/assembly_metrics-cruise-control.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNToxMTozMFrOG6MHaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNToxMTozMFrOG6MHaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY2OTA5Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * How often the overall cluster state and the user tasks state are requested through the REST API\n          \n          \n            \n            * How often the overall cluster state and the user tasks state are requested through the Cruise Control REST API", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3411#discussion_r463669097", "createdAt": "2020-07-31T15:11:30Z", "author": {"login": "laidan6000"}, "path": "documentation/assemblies/metrics/assembly_metrics-cruise-control.adoc", "diffHunk": "@@ -0,0 +1,69 @@\n+// This assembly is included in the following assemblies:\n+//\n+// metrics/assembly-metrics.adoc\n+\n+[id='assembly-cruise-control-{context}']\n+= Monitor Cruise Control\n+\n+If you are already using Prometheus and Grafana for monitoring of built-in Kafka metrics, you can configure Prometheus to also scrape the Cruise Control Prometheus endpoint.\n+\n+The example Grafana dashboard for the Cruise Control provides:\n+\n+* Information about optimization proposals computation, goals violation, cluster balancedness and more\n+* Information about REST API calls for rebalance proposals and actual rebalance operations\n+* JVM metrics from Cruise Control itself\n+\n+== Configuring Cruise Control\n+\n+You can enable the Cruise Control metrics in the `Kafka` resource using the `cruiseControl.metrics` property that contains the JMX exporter configuration about metrics to expose.\n+\n+For example:\n++\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: Kafka\n+metadata:\n+  name: my-cluster\n+spec:\n+  # ...\n+  kafka:\n+    # ...\n+  zookeeper:\n+    # ...\n+  cruiseControl:\n+    metrics:\n+      lowercaseOutputName: true\n+      rules:\n+      - pattern: kafka.cruisecontrol<name=(.+)><>(\\w+)\n+        name: kafka_cruisecontrol_$1_$2\n+        type: GAUGE\n+----\n+\n+== Enabling the Cruise Control Grafana dashboard\n+\n+If you deployed Cruise Control with your Kafka cluster with the metrics enabled, you can enable Grafana to present the metrics data it exposes.\n+\n+A Cruise Control dashboard is provided in the `examples/metrics` directory as a JSON file:\n+\n+* `strimzi-cruise-control.json`\n+\n+When metrics data has been collected for some time, the Cruise Control charts are populated.\n+\n+Cruise Control:: Shows metrics for:\n++\n+* The number of snapshot windows that are monitored\n+* Number of time windows considered to be valid because of enough samples for computing a proposal\n+* Number of ongoing executions running for proposals or rebalances\n+* The current balancedness score of the Kafka cluster as calculated by the anomaly detector (every 5 minutes by default)\n+* The percentage of monitored partitions\n+* The number of goal violations reported by the anomaly detector (every 5 minutes by default)\n+* How often a disk read failure happens on the brokers\n+* Rate of metric sample fetch failures\n+* Time needed for computing an optimization proposal\n+* Time for creating a cluster model\n+* How often a proposal request or an actual rebalance request is made through the REST API\n+* How often the overall cluster state and the user tasks state are requested through the REST API", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e0afebcc531af76cc05c3b72cd86df4f72abf89"}, "originalPosition": 66}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1571, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}