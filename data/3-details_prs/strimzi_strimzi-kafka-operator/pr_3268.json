{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyNjQ3OTk1", "number": 3268, "title": "Sts diff comparing empty strings", "bodyText": "Signed-off-by: Stanislav Knot sknot@redhat.com\nType of change\n\nBugfix\n\nDescription\nSetting this in the Kafka CR\napiVersion: kafka.strimzi.io/v1beta1\nkind: Kafka\nspec:\n  kafka:\n    template:\n      pod:\n        tolerations:\n          - effect: NoSchedule\n            key: kafkarole\n            operator: Equal \n            value: ''\n\ncauses indefinite kafka rolling because \"\"\"\" and \"\" values are compared.\nFixed by determining whether node is a string node. If so, all \" characters are removed. After this step, the emptiness of the node is tested. If the result is an empty string, we can say they are the same.\nThis change might be needed in other diff classes as well.\nChecklist\nPlease go through this checklist and make sure all applicable tasks have been done\n\n Update/write design documentation in ./design\n Write tests\n Make sure all tests pass\n Update documentation\n Check RBAC rights for Kubernetes / OpenShift roles\n Try your changes from Pod inside your Kubernetes and OpenShift cluster, not just locally\n Reference relevant issue(s) and close them after merging\n Update CHANGELOG.md", "createdAt": "2020-07-01T11:51:01Z", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3268", "merged": true, "mergeCommit": {"oid": "73a7332990e30f06dec750c1f2d6b2094916050b"}, "closed": true, "closedAt": "2020-07-27T18:26:09Z", "author": {"login": "sknot-rh"}, "timelineItems": {"totalCount": 30, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwpaAxABqjM1MDIyMjMxMDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc4FQV6gFqTQ1NDk1MzQzNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3a61f8acc2e2bd1749f2316fab662f83d6bada82", "author": {"user": {"login": "sknot-rh", "name": "Stanislav Knot"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/3a61f8acc2e2bd1749f2316fab662f83d6bada82", "committedDate": "2020-07-01T11:44:53Z", "message": "Sts diff comparing empty strings\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>"}, "afterCommit": {"oid": "c272f89b36c07f2b703ef764dc17ceeb18f947c2", "author": {"user": {"login": "sknot-rh", "name": "Stanislav Knot"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/c272f89b36c07f2b703ef764dc17ceeb18f947c2", "committedDate": "2020-07-01T12:28:45Z", "message": "Sts diff comparing empty strings\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxMDYwNDIz", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3268#pullrequestreview-441060423", "createdAt": "2020-07-01T17:20:27Z", "commit": {"oid": "c272f89b36c07f2b703ef764dc17ceeb18f947c2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNzoyMDoyN1rOGruy4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNzoyMDoyN1rOGruy4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODUwODY0Mw==", "bodyText": "I'm not quite sure I understand this. isMissingNode() is the case where a property has the JSON value null.\nIf you were conflating null with the empty string, I could understand, but I think you're trying to say that the string containing two double quotes is the same as the empty string  and the same as null. I don't understand why that is necessarily true. Remember, you're changing this for all JsonNodes in an STS, so while it might be true for the value of a toleration, it might not be true elsewhere.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3268#discussion_r448508643", "createdAt": "2020-07-01T17:20:27Z", "author": {"login": "tombentley"}, "path": "operator-common/src/main/java/io/strimzi/operator/common/operator/resource/AbstractResourceDiff.java", "diffHunk": "@@ -24,6 +25,15 @@ protected JsonNode lookupPath(JsonNode source, String path) {\n         return s;\n     }\n \n+    /**\n+     * Empty node can have a value \"\"\"\" which compared with \"\" is different but semantically they are the same\n+     * @param node tested node\n+     * @return true if node is empty or has empty value\n+     */\n+    protected boolean nodeMissingOrEmpty(JsonNode node) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c272f89b36c07f2b703ef764dc17ceeb18f947c2"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNjE1MDUx", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3268#pullrequestreview-441615051", "createdAt": "2020-07-02T12:08:18Z", "commit": {"oid": "7f4f44b5258020657fcda7e4b55a7ed19688470a"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMjowODoxOFrOGsJ_Nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMjoxMDoyMlrOGsKDkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk1NDE2Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                protected boolean nodeMissingOrEmpty(JsonNode node) {\n          \n          \n            \n                protected boolean isNodeMissingOrEmpty(JsonNode node) {", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3268#discussion_r448954167", "createdAt": "2020-07-02T12:08:18Z", "author": {"login": "samuel-hawker"}, "path": "operator-common/src/main/java/io/strimzi/operator/common/operator/resource/AbstractResourceDiff.java", "diffHunk": "@@ -24,6 +25,15 @@ protected JsonNode lookupPath(JsonNode source, String path) {\n         return s;\n     }\n \n+    /**\n+     * Empty node can have a value \"\"\"\" which compared with \"\" is different but semantically they are the same\n+     * @param node tested node\n+     * @return true if node is empty or has empty value\n+     */\n+    protected boolean nodeMissingOrEmpty(JsonNode node) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f4f44b5258020657fcda7e4b55a7ed19688470a"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk1NTI4MQ==", "bodyText": "Maybe add a comment with the intent behind this condition, i.e.\n// If source and target are missing tolerations then continue because ...", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3268#discussion_r448955281", "createdAt": "2020-07-02T12:10:22Z", "author": {"login": "samuel-hawker"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/StatefulSetDiff.java", "diffHunk": "@@ -97,6 +98,14 @@ public StatefulSetDiff(StatefulSet current, StatefulSet desired) {\n                     }\n                 }\n             }\n+\n+            Matcher tolerationMatchers = TOLERATION_VALUE.matcher(pathValue);\n+            if (tolerationMatchers.matches()) {\n+                if (nodeMissingOrEmpty(lookupPath(source, pathValue)) && nodeMissingOrEmpty(lookupPath(target, pathValue))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f4f44b5258020657fcda7e4b55a7ed19688470a"}, "originalPosition": 15}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a0827c51efd8761dcdcf56ada46d8058b6808ea2", "author": {"user": {"login": "sknot-rh", "name": "Stanislav Knot"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/a0827c51efd8761dcdcf56ada46d8058b6808ea2", "committedDate": "2020-07-02T12:16:17Z", "message": "prettier and less dumb\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>"}, "afterCommit": {"oid": "0763ea8adc9144539be32117a2db7e117fdc9792", "author": {"user": {"login": "sknot-rh", "name": "Stanislav Knot"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/0763ea8adc9144539be32117a2db7e117fdc9792", "committedDate": "2020-07-02T12:16:47Z", "message": "prettier and less dumb\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyNjg1NDc0", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3268#pullrequestreview-442685474", "createdAt": "2020-07-05T15:14:19Z", "commit": {"oid": "c914051c2b7bea0c9bbdf29c0c4756f4c6204fac"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxNToxNDoyMFrOGtDApA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxNToxNDoyMFrOGtDApA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg4ODQyMA==", "bodyText": "Maybe you should call it TOLERATION_VALUE_PATH? The VALUE can be IMHO a bit confusing.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3268#discussion_r449888420", "createdAt": "2020-07-05T15:14:20Z", "author": {"login": "scholzj"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/StatefulSetDiff.java", "diffHunk": "@@ -56,6 +56,7 @@\n \n     private static final Pattern RESOURCE_PATH = Pattern.compile(\"^/spec/template/spec/(?:initContainers|containers)/[0-9]+/resources/(?:limits|requests)/(memory|cpu)$\");\n     private static final Pattern VOLUME_SIZE = Pattern.compile(\"^/spec/volumeClaimTemplates/[0-9]+/spec/resources/.*$\");\n+    private static final Pattern TOLERATION_VALUE = Pattern.compile(\"^/spec/template/spec/tolerations/[0-9]+/value$\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c914051c2b7bea0c9bbdf29c0c4756f4c6204fac"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3a3b656abc0b18f366595b1472e36a3a7fad51ae", "author": {"user": {"login": "sknot-rh", "name": "Stanislav Knot"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/3a3b656abc0b18f366595b1472e36a3a7fad51ae", "committedDate": "2020-07-07T08:53:59Z", "message": "different approach\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>"}, "afterCommit": {"oid": "565261b7b3e2b7baa93154cad636c0e208da1862", "author": {"user": {"login": "sknot-rh", "name": "Stanislav Knot"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/565261b7b3e2b7baa93154cad636c0e208da1862", "committedDate": "2020-07-07T09:57:15Z", "message": "different approach\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNzg1MzIx", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3268#pullrequestreview-443785321", "createdAt": "2020-07-07T11:03:28Z", "commit": {"oid": "565261b7b3e2b7baa93154cad636c0e208da1862"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMTowMzoyOFrOGt5mGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMTowMzoyOFrOGt5mGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc4Mjc0Ng==", "bodyText": "This is worth factoring into a method, I think.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3268#discussion_r450782746", "createdAt": "2020-07-07T11:03:28Z", "author": {"login": "tombentley"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/EntityOperator.java", "diffHunk": "@@ -198,16 +198,21 @@ public static EntityOperator fromCrd(Kafka kafkaAssembly, KafkaVersion.Lookup ve\n \n     @SuppressWarnings(\"deprecation\")\n     static List<Toleration> tolerations(EntityOperatorSpec entityOperatorSpec) {\n+        List<Toleration> tolerations;\n         if (entityOperatorSpec.getTemplate() != null\n                 && entityOperatorSpec.getTemplate().getPod() != null\n                 && entityOperatorSpec.getTemplate().getPod().getTolerations() != null) {\n             if (entityOperatorSpec.getTolerations() != null) {\n                 log.warn(\"Tolerations given on both spec.entityOperator.tolerations and spec.entityOperator.template.pod.tolerations; latter takes precedence\");\n             }\n-            return entityOperatorSpec.getTemplate().getPod().getTolerations();\n+            tolerations = entityOperatorSpec.getTemplate().getPod().getTolerations();\n         } else {\n-            return entityOperatorSpec.getTolerations();\n+            tolerations = entityOperatorSpec.getTolerations();\n         }\n+        if (tolerations != null) {\n+            tolerations.stream().filter(toleration -> toleration.getValue() != null && toleration.getValue().isEmpty()).forEach(emptyValTol -> emptyValTol.setValue(null));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "565261b7b3e2b7baa93154cad636c0e208da1862"}, "originalPosition": 18}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "482138c4e11ddda8b57989454d6c2ba439d1cdf8", "author": {"user": {"login": "sknot-rh", "name": "Stanislav Knot"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/482138c4e11ddda8b57989454d6c2ba439d1cdf8", "committedDate": "2020-07-07T11:59:32Z", "message": "comment\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>"}, "afterCommit": {"oid": "eb40a1610f1a426cf1f1eaed7920eb3314063ed6", "author": {"user": {"login": "sknot-rh", "name": "Stanislav Knot"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/eb40a1610f1a426cf1f1eaed7920eb3314063ed6", "committedDate": "2020-07-08T06:44:56Z", "message": "comment\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1MzkwMTIw", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3268#pullrequestreview-445390120", "createdAt": "2020-07-09T08:17:24Z", "commit": {"oid": "eb40a1610f1a426cf1f1eaed7920eb3314063ed6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwODoxNzoyNFrOGvGnmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwODoxNzoyNFrOGvGnmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA0NDY5OA==", "bodyText": "We have this method 4 times... I wonder if we can factor out a method in ModelUtils which takes a PodTemplate and a List<Toleration> in order to simplify the call sites to something like:\nreturn ModelUtils.tolerations(\"spec.kafka.template.pod.tolerations\",\n                              kafkaClusterSpec.getTemplate() != null ? kafkaClusterSpec.getTemplate().getPod() : null,\n                              \"spec.kafka.tolerations\",\n                              kafkaClusterSpec.getTolerations());", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3268#discussion_r452044698", "createdAt": "2020-07-09T08:17:24Z", "author": {"login": "tombentley"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/KafkaCluster.java", "diffHunk": "@@ -770,16 +770,19 @@ protected static void validateIntConfigProperty(String propertyName, KafkaCluste\n \n     @SuppressWarnings(\"deprecation\")\n     static List<Toleration> tolerations(KafkaClusterSpec kafkaClusterSpec) {\n+        List<Toleration> tolerations;\n         if (kafkaClusterSpec.getTemplate() != null\n                 && kafkaClusterSpec.getTemplate().getPod() != null\n                 && kafkaClusterSpec.getTemplate().getPod().getTolerations() != null) {\n             if (kafkaClusterSpec.getTolerations() != null) {\n                 log.warn(\"Tolerations given on both spec.kafka.tolerations and spec.kafka.template.pod.tolerations; latter takes precedence\");\n             }\n-            return kafkaClusterSpec.getTemplate().getPod().getTolerations();\n+            tolerations = kafkaClusterSpec.getTemplate().getPod().getTolerations();\n         } else {\n-            return kafkaClusterSpec.getTolerations();\n+            tolerations = kafkaClusterSpec.getTolerations();\n         }\n+        ModelUtils.removeEmptyValuesFromTolerations(tolerations);\n+        return tolerations;\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb40a1610f1a426cf1f1eaed7920eb3314063ed6"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1NjA4Nzc3", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3268#pullrequestreview-445608777", "createdAt": "2020-07-09T13:22:02Z", "commit": {"oid": "65a5399c2baa1fee9ca1d745327229aab7f54069"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMzoyMjowMlrOGvQ3vQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMzoyMjowMlrOGvQ3vQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjIxMjY2OQ==", "bodyText": "Think about the parameter order. Why is it sensible to put tolerations first and tolerationList last, when they're to do with the same thing (the former is describing the path at which we found the latter). They belong next to each other, imho.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3268#discussion_r452212669", "createdAt": "2020-07-09T13:22:02Z", "author": {"login": "tombentley"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/ModelUtils.java", "diffHunk": "@@ -551,4 +552,24 @@ public static String getJavaSystemPropertiesToString(List<SystemProperty> javaSy\n         }\n         return String.join(\" \", javaSystemPropertiesList);\n     }\n+\n+    public static void removeEmptyValuesFromTolerations(List<Toleration> tolerations) {\n+        if (tolerations != null) {\n+            tolerations.stream().filter(toleration -> toleration.getValue() != null && toleration.getValue().isEmpty()).forEach(emptyValTol -> emptyValTol.setValue(null));\n+        }\n+    }\n+\n+    public static List<Toleration> tolerations(String tolerations, String templateTolerations, PodTemplate podTemplate, List<Toleration> tolerationList) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a5399c2baa1fee9ca1d745327229aab7f54069"}, "originalPosition": 19}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b0f28a3e702b5f90eb130ea046cebf01de0dc35d", "author": {"user": {"login": "sknot-rh", "name": "Stanislav Knot"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/b0f28a3e702b5f90eb130ea046cebf01de0dc35d", "committedDate": "2020-07-09T13:38:50Z", "message": "just another parameters order\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>"}, "afterCommit": {"oid": "1659dca778808b773804e56853125b3c7e812291", "author": {"user": {"login": "sknot-rh", "name": "Stanislav Knot"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/1659dca778808b773804e56853125b3c7e812291", "committedDate": "2020-07-09T14:00:45Z", "message": "just another parameters order\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1NjQ3NjA3", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3268#pullrequestreview-445647607", "createdAt": "2020-07-09T14:03:13Z", "commit": {"oid": "1659dca778808b773804e56853125b3c7e812291"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2MDEwODg1", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3268#pullrequestreview-446010885", "createdAt": "2020-07-09T22:28:51Z", "commit": {"oid": "1659dca778808b773804e56853125b3c7e812291"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMjoyODo1MVrOGvj6WQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMjozMTo1NFrOGvj-cQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUyNDYzMw==", "bodyText": "Javadocs please ... plus should this be really private? It does not seem to be used from anywhere else than tolerations(...).", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3268#discussion_r452524633", "createdAt": "2020-07-09T22:28:51Z", "author": {"login": "scholzj"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/ModelUtils.java", "diffHunk": "@@ -551,4 +552,24 @@ public static String getJavaSystemPropertiesToString(List<SystemProperty> javaSy\n         }\n         return String.join(\" \", javaSystemPropertiesList);\n     }\n+\n+    public static void removeEmptyValuesFromTolerations(List<Toleration> tolerations) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1659dca778808b773804e56853125b3c7e812291"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUyNTY4MQ==", "bodyText": "Javadoc please", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3268#discussion_r452525681", "createdAt": "2020-07-09T22:31:54Z", "author": {"login": "scholzj"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/ModelUtils.java", "diffHunk": "@@ -551,4 +552,24 @@ public static String getJavaSystemPropertiesToString(List<SystemProperty> javaSy\n         }\n         return String.join(\" \", javaSystemPropertiesList);\n     }\n+\n+    public static void removeEmptyValuesFromTolerations(List<Toleration> tolerations) {\n+        if (tolerations != null) {\n+            tolerations.stream().filter(toleration -> toleration.getValue() != null && toleration.getValue().isEmpty()).forEach(emptyValTol -> emptyValTol.setValue(null));\n+        }\n+    }\n+\n+    public static List<Toleration> tolerations(String tolerations, List<Toleration> tolerationList, String templateTolerations, PodTemplate podTemplate) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1659dca778808b773804e56853125b3c7e812291"}, "originalPosition": 19}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bd6b13ee2eda7fb9a47005950679e60bf47d64b3", "author": {"user": {"login": "sknot-rh", "name": "Stanislav Knot"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/bd6b13ee2eda7fb9a47005950679e60bf47d64b3", "committedDate": "2020-07-10T12:08:41Z", "message": "wait for vertx\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>"}, "afterCommit": {"oid": "192a30cd3876d3b7d21ab6bb62f1e2fb8d5215ef", "author": {"user": {"login": "sknot-rh", "name": "Stanislav Knot"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/192a30cd3876d3b7d21ab6bb62f1e2fb8d5215ef", "committedDate": "2020-07-10T12:33:56Z", "message": "wait for vertx\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5MjgyMTY4", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3268#pullrequestreview-449282168", "createdAt": "2020-07-15T19:53:37Z", "commit": {"oid": "192a30cd3876d3b7d21ab6bb62f1e2fb8d5215ef"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxOTo1MzozN1rOGyNi0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxOTo1ODowNFrOGyNsWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTMwMzg4OA==", "bodyText": "Maybe TolerationsIT?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3268#discussion_r455303888", "createdAt": "2020-07-15T19:53:37Z", "author": {"login": "scholzj"}, "path": "cluster-operator/src/test/java/io/strimzi/operator/cluster/operator/assembly/KafkaIT.java", "diffHunk": "@@ -0,0 +1,125 @@\n+/*\n+ * Copyright Strimzi authors.\n+ * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n+ */\n+package io.strimzi.operator.cluster.operator.assembly;\n+\n+import io.fabric8.kubernetes.api.model.LabelSelectorBuilder;\n+import io.fabric8.kubernetes.api.model.Toleration;\n+import io.fabric8.kubernetes.api.model.TolerationBuilder;\n+import io.fabric8.kubernetes.api.model.apps.StatefulSet;\n+import io.fabric8.kubernetes.api.model.apps.StatefulSetBuilder;\n+import io.fabric8.kubernetes.client.DefaultKubernetesClient;\n+import io.fabric8.kubernetes.client.KubernetesClient;\n+import io.strimzi.operator.cluster.model.ModelUtils;\n+import io.strimzi.operator.cluster.operator.resource.StatefulSetDiff;\n+import io.strimzi.test.k8s.KubeClusterResource;\n+import io.vertx.core.Vertx;\n+import io.vertx.core.VertxOptions;\n+import io.vertx.junit5.Checkpoint;\n+import io.vertx.junit5.VertxExtension;\n+import io.vertx.junit5.VertxTestContext;\n+import io.vertx.micrometer.MicrometerMetricsOptions;\n+import io.vertx.micrometer.VertxPrometheusOptions;\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+\n+import static org.hamcrest.CoreMatchers.nullValue;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+\n+@ExtendWith(VertxExtension.class)\n+public class KafkaIT {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "192a30cd3876d3b7d21ab6bb62f1e2fb8d5215ef"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTMwNDU1MA==", "bodyText": "Alignment and empty line.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3268#discussion_r455304550", "createdAt": "2020-07-15T19:54:53Z", "author": {"login": "scholzj"}, "path": "cluster-operator/src/test/java/io/strimzi/operator/cluster/operator/assembly/KafkaIT.java", "diffHunk": "@@ -0,0 +1,125 @@\n+/*\n+ * Copyright Strimzi authors.\n+ * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n+ */\n+package io.strimzi.operator.cluster.operator.assembly;\n+\n+import io.fabric8.kubernetes.api.model.LabelSelectorBuilder;\n+import io.fabric8.kubernetes.api.model.Toleration;\n+import io.fabric8.kubernetes.api.model.TolerationBuilder;\n+import io.fabric8.kubernetes.api.model.apps.StatefulSet;\n+import io.fabric8.kubernetes.api.model.apps.StatefulSetBuilder;\n+import io.fabric8.kubernetes.client.DefaultKubernetesClient;\n+import io.fabric8.kubernetes.client.KubernetesClient;\n+import io.strimzi.operator.cluster.model.ModelUtils;\n+import io.strimzi.operator.cluster.operator.resource.StatefulSetDiff;\n+import io.strimzi.test.k8s.KubeClusterResource;\n+import io.vertx.core.Vertx;\n+import io.vertx.core.VertxOptions;\n+import io.vertx.junit5.Checkpoint;\n+import io.vertx.junit5.VertxExtension;\n+import io.vertx.junit5.VertxTestContext;\n+import io.vertx.micrometer.MicrometerMetricsOptions;\n+import io.vertx.micrometer.VertxPrometheusOptions;\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+\n+import static org.hamcrest.CoreMatchers.nullValue;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+\n+@ExtendWith(VertxExtension.class)\n+public class KafkaIT {\n+\n+    protected KubeClusterResource cluster = KubeClusterResource.getInstance();\n+    private static Vertx vertx;\n+    private String namespace = \"kafka-it-2\";\n+\n+    @BeforeAll\n+    public static void before() {\n+        vertx = Vertx.vertx(new VertxOptions().setMetricsOptions(\n+                new MicrometerMetricsOptions()\n+                        .setPrometheusOptions(new VertxPrometheusOptions().setEnabled(true))\n+                        .setEnabled(true)\n+        ));\n+    }\n+\n+    @AfterAll\n+    public static void after(VertxTestContext context) {\n+        Checkpoint checkpoint = context.checkpoint();\n+        vertx.close(done -> {\n+            checkpoint.flag();\n+        });\n+    }\n+\n+    @BeforeEach\n+    public void beforeEach() throws IOException, InterruptedException {\n+        cluster.createNamespace(namespace);\n+    }\n+\n+    @AfterEach\n+    public void afterEach() {\n+        cluster.deleteNamespaces();\n+    }\n+\n+    @Test\n+    public void testEmptyStringValueIntoleration(VertxTestContext context) {\n+        Toleration t1 = new TolerationBuilder()\n+                .withEffect(\"NoSchedule\")\n+                .withValue(\"\")\n+                .build();\n+\n+        List<Toleration> tolerationList = new ArrayList<>();\n+        tolerationList.add(t1);\n+\n+        // CO does this over the generated STS\n+        ModelUtils.removeEmptyValuesFromTolerations(tolerationList);\n+\n+        StatefulSet ss = new StatefulSetBuilder()\n+                .withNewMetadata()\n+                .withNamespace(namespace)\n+                .withName(\"foo\")\n+                .endMetadata()\n+                .withNewSpec()\n+                    .withSelector(new LabelSelectorBuilder().withMatchLabels(Collections.singletonMap(\"app\", \"test\")).build())\n+                    .withNewTemplate()\n+                        .withNewMetadata()\n+                            .withLabels(Collections.singletonMap(\"app\", \"test\"))\n+                        .endMetadata()\n+                        .withNewSpec()\n+                            .withTolerations(tolerationList)\n+                        .withDnsPolicy(\"ClusterFirst\")\n+                        .withRestartPolicy(\"Always\")\n+                        .withSchedulerName(\"default-scheduler\")\n+                        .withSecurityContext(null)\n+                        .withTerminationGracePeriodSeconds(30L)\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "192a30cd3876d3b7d21ab6bb62f1e2fb8d5215ef"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTMwNjMyOQ==", "bodyText": "What is Vertx used for? I do not see it in the code.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3268#discussion_r455306329", "createdAt": "2020-07-15T19:58:04Z", "author": {"login": "scholzj"}, "path": "cluster-operator/src/test/java/io/strimzi/operator/cluster/operator/assembly/KafkaIT.java", "diffHunk": "@@ -0,0 +1,125 @@\n+/*\n+ * Copyright Strimzi authors.\n+ * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n+ */\n+package io.strimzi.operator.cluster.operator.assembly;\n+\n+import io.fabric8.kubernetes.api.model.LabelSelectorBuilder;\n+import io.fabric8.kubernetes.api.model.Toleration;\n+import io.fabric8.kubernetes.api.model.TolerationBuilder;\n+import io.fabric8.kubernetes.api.model.apps.StatefulSet;\n+import io.fabric8.kubernetes.api.model.apps.StatefulSetBuilder;\n+import io.fabric8.kubernetes.client.DefaultKubernetesClient;\n+import io.fabric8.kubernetes.client.KubernetesClient;\n+import io.strimzi.operator.cluster.model.ModelUtils;\n+import io.strimzi.operator.cluster.operator.resource.StatefulSetDiff;\n+import io.strimzi.test.k8s.KubeClusterResource;\n+import io.vertx.core.Vertx;\n+import io.vertx.core.VertxOptions;\n+import io.vertx.junit5.Checkpoint;\n+import io.vertx.junit5.VertxExtension;\n+import io.vertx.junit5.VertxTestContext;\n+import io.vertx.micrometer.MicrometerMetricsOptions;\n+import io.vertx.micrometer.VertxPrometheusOptions;\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+\n+import static org.hamcrest.CoreMatchers.nullValue;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+\n+@ExtendWith(VertxExtension.class)\n+public class KafkaIT {\n+\n+    protected KubeClusterResource cluster = KubeClusterResource.getInstance();\n+    private static Vertx vertx;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "192a30cd3876d3b7d21ab6bb62f1e2fb8d5215ef"}, "originalPosition": 44}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c4803e12a4fe1a77f3c685591d3cc9b787a3531", "author": {"user": {"login": "sknot-rh", "name": "Stanislav Knot"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/8c4803e12a4fe1a77f3c685591d3cc9b787a3531", "committedDate": "2020-07-24T06:58:11Z", "message": "Sts diff comparing empty strings\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3a6e89156b671a579538542f270b22aa6eb6aa8", "author": {"user": {"login": "sknot-rh", "name": "Stanislav Knot"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/e3a6e89156b671a579538542f270b22aa6eb6aa8", "committedDate": "2020-07-24T06:58:11Z", "message": "comments\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b061c1e7f7c9e470c71daab0b71555a02d14ca1", "author": {"user": {"login": "sknot-rh", "name": "Stanislav Knot"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/4b061c1e7f7c9e470c71daab0b71555a02d14ca1", "committedDate": "2020-07-24T06:58:11Z", "message": "prettier and less dumb\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "568d92f10a1f1a54a37eb265a48b6cf59a109c9c", "author": {"user": {"login": "sknot-rh", "name": "Stanislav Knot"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/568d92f10a1f1a54a37eb265a48b6cf59a109c9c", "committedDate": "2020-07-24T06:58:11Z", "message": "comments\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "787855c84061e41549a6dd82366710b0b0571ed3", "author": {"user": {"login": "sknot-rh", "name": "Stanislav Knot"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/787855c84061e41549a6dd82366710b0b0571ed3", "committedDate": "2020-07-24T06:58:11Z", "message": "rename var\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e650a76722573a6f10fd402b886fe94f43f200dc", "author": {"user": {"login": "sknot-rh", "name": "Stanislav Knot"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/e650a76722573a6f10fd402b886fe94f43f200dc", "committedDate": "2020-07-24T06:58:11Z", "message": "different approach\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66b45351b77af4d3fadcd130a8aa8862b81ff415", "author": {"user": {"login": "sknot-rh", "name": "Stanislav Knot"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/66b45351b77af4d3fadcd130a8aa8862b81ff415", "committedDate": "2020-07-24T06:58:51Z", "message": "comment\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1d210eba8a61b832eaffdbf3e553d8db0a66bf7", "author": {"user": {"login": "sknot-rh", "name": "Stanislav Knot"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/d1d210eba8a61b832eaffdbf3e553d8db0a66bf7", "committedDate": "2020-07-24T06:58:51Z", "message": "refactor\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "838c1615dd8c88b6b1942e0be2926edb63bea3bb", "author": {"user": {"login": "sknot-rh", "name": "Stanislav Knot"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/838c1615dd8c88b6b1942e0be2926edb63bea3bb", "committedDate": "2020-07-24T06:58:51Z", "message": "just another parameters order\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f2af961b0c20c0f8bd9968cde6048c7c9d90f6d", "author": {"user": {"login": "sknot-rh", "name": "Stanislav Knot"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/9f2af961b0c20c0f8bd9968cde6048c7c9d90f6d", "committedDate": "2020-07-24T06:59:33Z", "message": "friday tests\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9fbcc7820321f7a5807323a5de0eef36b5b01035", "author": {"user": {"login": "sknot-rh", "name": "Stanislav Knot"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/9fbcc7820321f7a5807323a5de0eef36b5b01035", "committedDate": "2020-07-24T06:59:33Z", "message": "wait for vertx\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "192a30cd3876d3b7d21ab6bb62f1e2fb8d5215ef", "author": {"user": {"login": "sknot-rh", "name": "Stanislav Knot"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/192a30cd3876d3b7d21ab6bb62f1e2fb8d5215ef", "committedDate": "2020-07-10T12:33:56Z", "message": "wait for vertx\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>"}, "afterCommit": {"oid": "d0ad34ffb480fc7a41b9a41777798eac1ac11f40", "author": {"user": {"login": "sknot-rh", "name": "Stanislav Knot"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/d0ad34ffb480fc7a41b9a41777798eac1ac11f40", "committedDate": "2020-07-24T07:03:15Z", "message": "rebase + comments\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "113f6b3788a451938490d7ec1de86a93a0d7d801", "author": {"user": {"login": "sknot-rh", "name": "Stanislav Knot"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/113f6b3788a451938490d7ec1de86a93a0d7d801", "committedDate": "2020-07-24T07:08:35Z", "message": "rebase + comments\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d0ad34ffb480fc7a41b9a41777798eac1ac11f40", "author": {"user": {"login": "sknot-rh", "name": "Stanislav Knot"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/d0ad34ffb480fc7a41b9a41777798eac1ac11f40", "committedDate": "2020-07-24T07:03:15Z", "message": "rebase + comments\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>"}, "afterCommit": {"oid": "113f6b3788a451938490d7ec1de86a93a0d7d801", "author": {"user": {"login": "sknot-rh", "name": "Stanislav Knot"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/113f6b3788a451938490d7ec1de86a93a0d7d801", "committedDate": "2020-07-24T07:08:35Z", "message": "rebase + comments\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0OTUzNDM3", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3268#pullrequestreview-454953437", "createdAt": "2020-07-24T14:53:13Z", "commit": {"oid": "113f6b3788a451938490d7ec1de86a93a0d7d801"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1268, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}