{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0MDIxNjQ1", "number": 2963, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMzoyNDoyMVrOD50GVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMzoyNDoyMVrOD50GVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxOTQ5MDEyOnYy", "diffSide": "RIGHT", "path": "documentation/modules/deploying/proc-deploy-user-operator-standalone.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMzoyNDoyMVrOGRSxng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwOTowNjo0OVrOGR1ZfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc4NjU5MA==", "bodyText": "Would it be worth to explicitly say that these two are optional?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2963#discussion_r420786590", "createdAt": "2020-05-06T13:24:21Z", "author": {"login": "see-quick"}, "path": "documentation/modules/deploying/proc-deploy-user-operator-standalone.adoc", "diffHunk": "@@ -18,21 +18,21 @@ a standalone deployment is more flexible as the User Operator can operate with _\n \n . Edit the following `Deployment.spec.template.spec.containers[0].env` properties in the `install/user-operator/05-Deployment-strimzi-user-operator.yaml` file by setting:\n +\n+.. `STRIMZI_KAFKA_BOOTSTRAP_SERVERS` to list the Kafka brokers, given as a comma-separated list of `_hostname_:\u200d_port_` pairs.\n+.. `STRIMZI_ZOOKEEPER_CONNECT` to list the ZooKeeper nodes, given as a comma-separated list of `_hostname_:\u200d_port_` pairs. This must be the same ZooKeeper cluster that your Kafka cluster is using. Connecting to ZooKeeper nodes with TLS encryption is not supported.\n+.. `STRIMZI_NAMESPACE` to the Kubernetes namespace in which you want the operator to watch for `KafkaUser` resources.\n .. `STRIMZI_CA_CERT_NAME` to point to a Kubernetes `Secret` that contains the public key of the Certificate Authority for signing new user certificates for TLS client authentication.\n The `Secret` must contain the public key of the Certificate Authority under the key `ca.crt`.\n .. `STRIMZI_CA_KEY_NAME` to point to a Kubernetes `Secret` that contains the private key of the Certificate Authority for signing new user certificates for TLS client authentication.\n The `Secret` must contain the private key of the Certificate Authority under the key `ca.key`.\n-.. `STRIMZI_ZOOKEEPER_CONNECT` to list the ZooKeeper nodes, given as a comma-separated list of `_hostname_:\u200d_port_` pairs. This must be the same ZooKeeper cluster that your Kafka cluster is using. Connecting to ZooKeeper nodes with TLS encryption is not supported. \n-.. `STRIMZI_NAMESPACE` to the Kubernetes namespace in which you want the operator to watch for `KafkaUser` resources.\n-.. `STRIMZI_JAVA_OPTS` to the Java options used for the JVM running User Operator. An example is `-Xmx=512M -Xms=256M`.\n-.. `STRIMZI_JAVA_SYSTEM_PROPERTIES` to list the `-D` options which are set to the User Operator. An example is `-Djavax.net.debug=verbose -DpropertyName=value`.\n-.. `STRIMZI_KAFKA_BOOTSTRAP_SERVERS` to list the Kafka brokers, given as a comma-separated list of `_hostname_:\u200d_port_` pairs.\n-.. `STRIMZI_CLUSTER_CA_CERT_SECRET_NAME` to point to a Kubernetes `Secret` containing the public key of the Certificate Authority used for signing Kafka brokers certificates for enabling TLS based communication.\n+.. `STRIMZI_CLUSTER_CA_CERT_SECRET_NAME` to point to a Kubernetes `Secret` containing the public key of the Certificate Authority used for signing Kafka brokers certificates for enabling TLS-based communication.\n The `Secret` must contain the public key of the Certificate Authority under the key `ca.crt`.\n This environment variable is optional and should be set only if the communication with the Kafka cluster is TLS based.\n .. `STRIMZI_EO_KEY_SECRET_NAME` to point to a Kubernetes `Secret` containing the private key and related certificate for TLS client authentication against the Kafka cluster.\n The `Secret` must contain the keystore with the private key and certificate under the key `entity-operator.p12`, and the related password under the key `entity-operator.password`.\n This environment variable is optional and should be set only if TLS client authentication is needed when the communication with the Kafka cluster is TLS based.\n+.. `STRIMZI_JAVA_OPTS` to the Java options used for the JVM running User Operator. An example is `-Xmx=512M -Xms=256M`.\n+.. `STRIMZI_JAVA_SYSTEM_PROPERTIES` to list the `-D` options which are set to the User Operator. An example is `-Djavax.net.debug=verbose -DpropertyName=value`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9ab9c61ec001f92882801e2daa465dc1e2efb5e"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM1Mzg1Mg==", "bodyText": "Absolutely.\n\nSTRIMZI_JAVA_OPTS (optional)\nSTRIMZI_JAVA_SYSTEM_PROPERTIES (optional)", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2963#discussion_r421353852", "createdAt": "2020-05-07T09:06:49Z", "author": {"login": "PaulRMellor"}, "path": "documentation/modules/deploying/proc-deploy-user-operator-standalone.adoc", "diffHunk": "@@ -18,21 +18,21 @@ a standalone deployment is more flexible as the User Operator can operate with _\n \n . Edit the following `Deployment.spec.template.spec.containers[0].env` properties in the `install/user-operator/05-Deployment-strimzi-user-operator.yaml` file by setting:\n +\n+.. `STRIMZI_KAFKA_BOOTSTRAP_SERVERS` to list the Kafka brokers, given as a comma-separated list of `_hostname_:\u200d_port_` pairs.\n+.. `STRIMZI_ZOOKEEPER_CONNECT` to list the ZooKeeper nodes, given as a comma-separated list of `_hostname_:\u200d_port_` pairs. This must be the same ZooKeeper cluster that your Kafka cluster is using. Connecting to ZooKeeper nodes with TLS encryption is not supported.\n+.. `STRIMZI_NAMESPACE` to the Kubernetes namespace in which you want the operator to watch for `KafkaUser` resources.\n .. `STRIMZI_CA_CERT_NAME` to point to a Kubernetes `Secret` that contains the public key of the Certificate Authority for signing new user certificates for TLS client authentication.\n The `Secret` must contain the public key of the Certificate Authority under the key `ca.crt`.\n .. `STRIMZI_CA_KEY_NAME` to point to a Kubernetes `Secret` that contains the private key of the Certificate Authority for signing new user certificates for TLS client authentication.\n The `Secret` must contain the private key of the Certificate Authority under the key `ca.key`.\n-.. `STRIMZI_ZOOKEEPER_CONNECT` to list the ZooKeeper nodes, given as a comma-separated list of `_hostname_:\u200d_port_` pairs. This must be the same ZooKeeper cluster that your Kafka cluster is using. Connecting to ZooKeeper nodes with TLS encryption is not supported. \n-.. `STRIMZI_NAMESPACE` to the Kubernetes namespace in which you want the operator to watch for `KafkaUser` resources.\n-.. `STRIMZI_JAVA_OPTS` to the Java options used for the JVM running User Operator. An example is `-Xmx=512M -Xms=256M`.\n-.. `STRIMZI_JAVA_SYSTEM_PROPERTIES` to list the `-D` options which are set to the User Operator. An example is `-Djavax.net.debug=verbose -DpropertyName=value`.\n-.. `STRIMZI_KAFKA_BOOTSTRAP_SERVERS` to list the Kafka brokers, given as a comma-separated list of `_hostname_:\u200d_port_` pairs.\n-.. `STRIMZI_CLUSTER_CA_CERT_SECRET_NAME` to point to a Kubernetes `Secret` containing the public key of the Certificate Authority used for signing Kafka brokers certificates for enabling TLS based communication.\n+.. `STRIMZI_CLUSTER_CA_CERT_SECRET_NAME` to point to a Kubernetes `Secret` containing the public key of the Certificate Authority used for signing Kafka brokers certificates for enabling TLS-based communication.\n The `Secret` must contain the public key of the Certificate Authority under the key `ca.crt`.\n This environment variable is optional and should be set only if the communication with the Kafka cluster is TLS based.\n .. `STRIMZI_EO_KEY_SECRET_NAME` to point to a Kubernetes `Secret` containing the private key and related certificate for TLS client authentication against the Kafka cluster.\n The `Secret` must contain the keystore with the private key and certificate under the key `entity-operator.p12`, and the related password under the key `entity-operator.password`.\n This environment variable is optional and should be set only if TLS client authentication is needed when the communication with the Kafka cluster is TLS based.\n+.. `STRIMZI_JAVA_OPTS` to the Java options used for the JVM running User Operator. An example is `-Xmx=512M -Xms=256M`.\n+.. `STRIMZI_JAVA_SYSTEM_PROPERTIES` to list the `-D` options which are set to the User Operator. An example is `-Djavax.net.debug=verbose -DpropertyName=value`.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc4NjU5MA=="}, "originalCommit": {"oid": "f9ab9c61ec001f92882801e2daa465dc1e2efb5e"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4984, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}