{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1NzI1NTg1", "number": 2984, "title": "Allow 0 replica in kafka bridge.", "bodyText": "Type of change\n\nBugfix\n\nDescription\nAllow the Kafka bridge to scale to 0 replica. See: #2967\nChecklist\nPlease go through this checklist and make sure all applicable tasks have been done\n\n Write tests\n Make sure all tests pass\n Update documentation\n Check RBAC rights for Kubernetes / OpenShift roles\n Try your changes from Pod inside your Kubernetes and OpenShift cluster, not just locally\n Reference relevant issue(s) and close them after merging\n Update CHANGELOG.md", "createdAt": "2020-05-10T14:05:40Z", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2984", "merged": true, "mergeCommit": {"oid": "d73b1f20ec73c76542b2e1dcfb64bfb24f00cdd2"}, "closed": true, "closedAt": "2020-05-26T21:55:29Z", "author": {"login": "leonardgee"}, "timelineItems": {"totalCount": 34, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcf72CAgBqjMzMjAzNjY5NTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABclL7JBAFqTQxODcwNjU5Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d4abb0fe1d004ab4f2263187065a51df88d500da", "author": {"user": {"login": "leonardge", "name": "Leonard Ge"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/d4abb0fe1d004ab4f2263187065a51df88d500da", "committedDate": "2020-05-10T13:57:35Z", "message": "Allow 0 replica in bridge."}, "afterCommit": {"oid": "54cc51c890e5e7ed9c493322bc5f04d992c16d56", "author": {"user": {"login": "leonardge", "name": "Leonard Ge"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/54cc51c890e5e7ed9c493322bc5f04d992c16d56", "committedDate": "2020-05-10T14:20:23Z", "message": "Allow 0 replica in bridge.\n\nSigned-off-by: Leonard Ge <gw980531@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "54cc51c890e5e7ed9c493322bc5f04d992c16d56", "author": {"user": {"login": "leonardge", "name": "Leonard Ge"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/54cc51c890e5e7ed9c493322bc5f04d992c16d56", "committedDate": "2020-05-10T14:20:23Z", "message": "Allow 0 replica in bridge.\n\nSigned-off-by: Leonard Ge <gw980531@gmail.com>"}, "afterCommit": {"oid": "c032172826017eae1067497508aa8e4544fa860b", "author": {"user": {"login": "leonardgee", "name": "Leofis G"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/c032172826017eae1067497508aa8e4544fa860b", "committedDate": "2020-05-10T14:23:36Z", "message": "Allow kafka bridge to scale to 0."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05f7b18b2a7432dde45477c620ab31569e04c18b", "author": {"user": {"login": "leonardgee", "name": "Leofis G"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/05f7b18b2a7432dde45477c620ab31569e04c18b", "committedDate": "2020-05-10T14:24:19Z", "message": "Allow kafka bridge to scale to 0.\n\nSigned-off-by: Leonard Ge <gw980531@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c032172826017eae1067497508aa8e4544fa860b", "author": {"user": {"login": "leonardgee", "name": "Leofis G"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/c032172826017eae1067497508aa8e4544fa860b", "committedDate": "2020-05-10T14:23:36Z", "message": "Allow kafka bridge to scale to 0."}, "afterCommit": {"oid": "05f7b18b2a7432dde45477c620ab31569e04c18b", "author": {"user": {"login": "leonardgee", "name": "Leofis G"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/05f7b18b2a7432dde45477c620ab31569e04c18b", "committedDate": "2020-05-10T14:24:19Z", "message": "Allow kafka bridge to scale to 0.\n\nSigned-off-by: Leonard Ge <gw980531@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NzgzOTM4", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2984#pullrequestreview-408783938", "createdAt": "2020-05-10T21:34:48Z", "commit": {"oid": "05f7b18b2a7432dde45477c620ab31569e04c18b"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee0c1fe966a65ad540161553b1c4165734d782ed", "author": {"user": {"login": "leonardgee", "name": "Leofis G"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/ee0c1fe966a65ad540161553b1c4165734d782ed", "committedDate": "2020-05-11T08:05:59Z", "message": "Added test for 0 replica bridge.\n\nSigned-off-by: Leonard Ge <gw980531@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "feb78f79a4e4b59b5c3c1b88ac3ce089ec5dcbd1", "author": {"user": {"login": "leonardgee", "name": "Leofis G"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/feb78f79a4e4b59b5c3c1b88ac3ce089ec5dcbd1", "committedDate": "2020-05-11T08:05:29Z", "message": "Added test for 0 replica bridge."}, "afterCommit": {"oid": "ee0c1fe966a65ad540161553b1c4165734d782ed", "author": {"user": {"login": "leonardgee", "name": "Leofis G"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/ee0c1fe966a65ad540161553b1c4165734d782ed", "committedDate": "2020-05-11T08:05:59Z", "message": "Added test for 0 replica bridge.\n\nSigned-off-by: Leonard Ge <gw980531@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cee371ec9c953255af64be472bae3960717db2db", "author": {"user": {"login": "leonardgee", "name": "Leofis G"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/cee371ec9c953255af64be472bae3960717db2db", "committedDate": "2020-05-11T08:09:48Z", "message": "Refactored test slightly.\n\nSigned-off-by: Leonard Ge <gw980531@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4OTkwODQ0", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2984#pullrequestreview-408990844", "createdAt": "2020-05-11T09:04:45Z", "commit": {"oid": "cee371ec9c953255af64be472bae3960717db2db"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwOTowNDo0NVrOGTTWlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwOTowNToxNVrOGTTXzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjg5MzIwNg==", "bodyText": "When the bridge is scaled to 0, the status should show that it is ready, but it should not list the URL. So I think you should add similar condition also arount the lines 106-110 to prevent this.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2984#discussion_r422893206", "createdAt": "2020-05-11T09:04:45Z", "author": {"login": "scholzj"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaBridgeAssemblyOperator.java", "diffHunk": "@@ -100,7 +101,7 @@ public KafkaBridgeAssemblyOperator(Vertx vertx, PlatformFeaturesAvailability pfa\n             .compose(i -> deploymentOperations.reconcile(namespace, bridge.getName(), bridge.generateDeployment(annotations, pfa.isOpenshift(), imagePullPolicy, imagePullSecrets)))\n             .compose(i -> deploymentOperations.scaleUp(namespace, bridge.getName(), bridge.getReplicas()))\n             .compose(i -> deploymentOperations.waitForObserved(namespace, bridge.getName(), 1_000, operationTimeoutMs))\n-            .compose(i -> deploymentOperations.readiness(namespace, bridge.getName(), 1_000, operationTimeoutMs))\n+            .compose(i -> bridgeHasZeroReplicas ? Future.succeededFuture() : deploymentOperations.readiness(namespace, bridge.getName(), 1_000, operationTimeoutMs))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cee371ec9c953255af64be472bae3960717db2db"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjg5MzI2NA==", "bodyText": "Can you keep this as separte imports? Maybe that is the checkstyle issue crashing the CI builds?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2984#discussion_r422893264", "createdAt": "2020-05-11T09:04:52Z", "author": {"login": "scholzj"}, "path": "cluster-operator/src/test/java/io/strimzi/operator/cluster/operator/assembly/KafkaBridgeAssemblyOperatorTest.java", "diffHunk": "@@ -67,10 +67,7 @@\n import static org.mockito.ArgumentMatchers.anyLong;\n import static org.mockito.ArgumentMatchers.anyString;\n import static org.mockito.ArgumentMatchers.eq;\n-import static org.mockito.Mockito.doAnswer;\n-import static org.mockito.Mockito.never;\n-import static org.mockito.Mockito.verify;\n-import static org.mockito.Mockito.when;\n+import static org.mockito.Mockito.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cee371ec9c953255af64be472bae3960717db2db"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjg5MzUxNg==", "bodyText": "I think it would be great to also test the captured state to check that the URL is not present when scaled to 0.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2984#discussion_r422893516", "createdAt": "2020-05-11T09:05:15Z", "author": {"login": "scholzj"}, "path": "cluster-operator/src/test/java/io/strimzi/operator/cluster/operator/assembly/KafkaBridgeAssemblyOperatorTest.java", "diffHunk": "@@ -684,4 +681,49 @@ public void testCreateClusterStatusNotReady(VertxTestContext context) {\n         });\n     }\n \n+    @Test\n+    public void testCreateOrUpdateBridgeZeroReplica(VertxTestContext context) {\n+        ResourceOperatorSupplier supplier = ResourceUtils.supplierWithMocks(true);\n+        CrdOperator mockBridgeOps = supplier.kafkaBridgeOperator;\n+        DeploymentOperator mockDcOps = supplier.deploymentOperations;\n+        PodDisruptionBudgetOperator mockPdbOps = supplier.podDisruptionBudgetOperator;\n+        ConfigMapOperator mockCmOps = supplier.configMapOperations;\n+        ServiceOperator mockServiceOps = supplier.serviceOperations;\n+\n+        String clusterCmName = \"foo\";\n+        String clusterCmNamespace = \"test\";\n+        String failureMsg = \"failure\";\n+        Map<String, Object> metricsCm = new HashMap<>();\n+        metricsCm.put(\"foo\", \"bar\");\n+        KafkaBridge clusterCm = ResourceUtils.createKafkaBridgeCluster(clusterCmNamespace, clusterCmName, image, 0,\n+                BOOTSTRAP_SERVERS, KAFKA_BRIDGE_PRODUCER_SPEC, KAFKA_BRIDGE_CONSUMER_SPEC, KAFKA_BRIDGE_HTTP_SPEC, metricsCm);\n+\n+        when(mockBridgeOps.get(clusterCmNamespace, clusterCmName)).thenReturn(clusterCm);\n+        when(mockBridgeOps.getAsync(anyString(), anyString())).thenReturn(Future.succeededFuture(clusterCm));\n+        when(mockServiceOps.reconcile(anyString(), anyString(), any())).thenReturn(Future.succeededFuture());\n+        when(mockDcOps.reconcile(anyString(), anyString(), any())).thenReturn(Future.succeededFuture());\n+        when(mockDcOps.scaleUp(anyString(), anyString(), anyInt())).thenReturn(Future.succeededFuture(42));\n+        when(mockDcOps.scaleDown(anyString(), anyString(), anyInt())).thenReturn(Future.succeededFuture(42));\n+        when(mockDcOps.waitForObserved(anyString(), anyString(), anyLong(), anyLong())).thenReturn(Future.succeededFuture());\n+        when(mockPdbOps.reconcile(anyString(), any(), any())).thenReturn(Future.succeededFuture());\n+        when(mockCmOps.reconcile(anyString(), any(), any())).thenReturn(Future.succeededFuture(ReconcileResult.created(new ConfigMap())));\n+        ArgumentCaptor<KafkaBridge> bridgeCaptor = ArgumentCaptor.forClass(KafkaBridge.class);\n+        when(mockBridgeOps.updateStatusAsync(bridgeCaptor.capture())).thenReturn(Future.succeededFuture());\n+        KafkaBridgeAssemblyOperator ops = new KafkaBridgeAssemblyOperator(vertx,\n+                new PlatformFeaturesAvailability(true, kubernetesVersion),\n+                new MockCertManager(), new PasswordGenerator(10, \"a\", \"a\"),\n+                supplier,\n+                ResourceUtils.dummyClusterOperatorConfig(VERSIONS));\n+\n+        Checkpoint async = context.checkpoint();\n+        ops.createOrUpdate(new Reconciliation(\"test-trigger\", KafkaBridge.RESOURCE_KIND, clusterCmNamespace, clusterCmName), clusterCm).setHandler(createResult -> {\n+            context.verify(() -> assertThat(createResult.succeeded(), is(true)));\n+\n+            // Replica is 0 so readiness shouldn't get called.\n+            verify(mockDcOps, never()).readiness(anyString(), anyString(), anyLong(), anyLong());\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cee371ec9c953255af64be472bae3960717db2db"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5MDA2OTc0", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2984#pullrequestreview-409006974", "createdAt": "2020-05-11T09:27:03Z", "commit": {"oid": "cee371ec9c953255af64be472bae3960717db2db"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwOToyNzowM1rOGTULqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwOToyNzowM1rOGTULqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjkwNjc5Mg==", "bodyText": "// 0 Replicas - readiness should never get called.\n\nSlight tweak just to match the code syntax", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2984#discussion_r422906792", "createdAt": "2020-05-11T09:27:03Z", "author": {"login": "samuel-hawker"}, "path": "cluster-operator/src/test/java/io/strimzi/operator/cluster/operator/assembly/KafkaBridgeAssemblyOperatorTest.java", "diffHunk": "@@ -684,4 +681,49 @@ public void testCreateClusterStatusNotReady(VertxTestContext context) {\n         });\n     }\n \n+    @Test\n+    public void testCreateOrUpdateBridgeZeroReplica(VertxTestContext context) {\n+        ResourceOperatorSupplier supplier = ResourceUtils.supplierWithMocks(true);\n+        CrdOperator mockBridgeOps = supplier.kafkaBridgeOperator;\n+        DeploymentOperator mockDcOps = supplier.deploymentOperations;\n+        PodDisruptionBudgetOperator mockPdbOps = supplier.podDisruptionBudgetOperator;\n+        ConfigMapOperator mockCmOps = supplier.configMapOperations;\n+        ServiceOperator mockServiceOps = supplier.serviceOperations;\n+\n+        String clusterCmName = \"foo\";\n+        String clusterCmNamespace = \"test\";\n+        String failureMsg = \"failure\";\n+        Map<String, Object> metricsCm = new HashMap<>();\n+        metricsCm.put(\"foo\", \"bar\");\n+        KafkaBridge clusterCm = ResourceUtils.createKafkaBridgeCluster(clusterCmNamespace, clusterCmName, image, 0,\n+                BOOTSTRAP_SERVERS, KAFKA_BRIDGE_PRODUCER_SPEC, KAFKA_BRIDGE_CONSUMER_SPEC, KAFKA_BRIDGE_HTTP_SPEC, metricsCm);\n+\n+        when(mockBridgeOps.get(clusterCmNamespace, clusterCmName)).thenReturn(clusterCm);\n+        when(mockBridgeOps.getAsync(anyString(), anyString())).thenReturn(Future.succeededFuture(clusterCm));\n+        when(mockServiceOps.reconcile(anyString(), anyString(), any())).thenReturn(Future.succeededFuture());\n+        when(mockDcOps.reconcile(anyString(), anyString(), any())).thenReturn(Future.succeededFuture());\n+        when(mockDcOps.scaleUp(anyString(), anyString(), anyInt())).thenReturn(Future.succeededFuture(42));\n+        when(mockDcOps.scaleDown(anyString(), anyString(), anyInt())).thenReturn(Future.succeededFuture(42));\n+        when(mockDcOps.waitForObserved(anyString(), anyString(), anyLong(), anyLong())).thenReturn(Future.succeededFuture());\n+        when(mockPdbOps.reconcile(anyString(), any(), any())).thenReturn(Future.succeededFuture());\n+        when(mockCmOps.reconcile(anyString(), any(), any())).thenReturn(Future.succeededFuture(ReconcileResult.created(new ConfigMap())));\n+        ArgumentCaptor<KafkaBridge> bridgeCaptor = ArgumentCaptor.forClass(KafkaBridge.class);\n+        when(mockBridgeOps.updateStatusAsync(bridgeCaptor.capture())).thenReturn(Future.succeededFuture());\n+        KafkaBridgeAssemblyOperator ops = new KafkaBridgeAssemblyOperator(vertx,\n+                new PlatformFeaturesAvailability(true, kubernetesVersion),\n+                new MockCertManager(), new PasswordGenerator(10, \"a\", \"a\"),\n+                supplier,\n+                ResourceUtils.dummyClusterOperatorConfig(VERSIONS));\n+\n+        Checkpoint async = context.checkpoint();\n+        ops.createOrUpdate(new Reconciliation(\"test-trigger\", KafkaBridge.RESOURCE_KIND, clusterCmNamespace, clusterCmName), clusterCm).setHandler(createResult -> {\n+            context.verify(() -> assertThat(createResult.succeeded(), is(true)));\n+\n+            // Replica is 0 so readiness shouldn't get called.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cee371ec9c953255af64be472bae3960717db2db"}, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5MDA4NDA3", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2984#pullrequestreview-409008407", "createdAt": "2020-05-11T09:28:58Z", "commit": {"oid": "cee371ec9c953255af64be472bae3960717db2db"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwOToyODo1OFrOGTUQNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwOToyODo1OFrOGTUQNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjkwNzk1OA==", "bodyText": "Can we change:\n        ops.createOrUpdate(new Reconciliation(\"test-trigger\", KafkaBridge.RESOURCE_KIND, clusterCmNamespace, clusterCmName), clusterCm).setHandler(createResult -> {\n            context.verify(() -> assertThat(createResult.succeeded(), is(true)));\n\nTo:\n        ops.createOrUpdate(new Reconciliation(\"test-trigger\", KafkaBridge.RESOURCE_KIND, clusterCmNamespace, clusterCmName), clusterCm)\n            .setHandler(context.succeeding(v -> context.verify(() ->\n\n\nContext succeeding ensures we always have a non error and stops the need to check the result", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2984#discussion_r422907958", "createdAt": "2020-05-11T09:28:58Z", "author": {"login": "samuel-hawker"}, "path": "cluster-operator/src/test/java/io/strimzi/operator/cluster/operator/assembly/KafkaBridgeAssemblyOperatorTest.java", "diffHunk": "@@ -684,4 +681,49 @@ public void testCreateClusterStatusNotReady(VertxTestContext context) {\n         });\n     }\n \n+    @Test\n+    public void testCreateOrUpdateBridgeZeroReplica(VertxTestContext context) {\n+        ResourceOperatorSupplier supplier = ResourceUtils.supplierWithMocks(true);\n+        CrdOperator mockBridgeOps = supplier.kafkaBridgeOperator;\n+        DeploymentOperator mockDcOps = supplier.deploymentOperations;\n+        PodDisruptionBudgetOperator mockPdbOps = supplier.podDisruptionBudgetOperator;\n+        ConfigMapOperator mockCmOps = supplier.configMapOperations;\n+        ServiceOperator mockServiceOps = supplier.serviceOperations;\n+\n+        String clusterCmName = \"foo\";\n+        String clusterCmNamespace = \"test\";\n+        String failureMsg = \"failure\";\n+        Map<String, Object> metricsCm = new HashMap<>();\n+        metricsCm.put(\"foo\", \"bar\");\n+        KafkaBridge clusterCm = ResourceUtils.createKafkaBridgeCluster(clusterCmNamespace, clusterCmName, image, 0,\n+                BOOTSTRAP_SERVERS, KAFKA_BRIDGE_PRODUCER_SPEC, KAFKA_BRIDGE_CONSUMER_SPEC, KAFKA_BRIDGE_HTTP_SPEC, metricsCm);\n+\n+        when(mockBridgeOps.get(clusterCmNamespace, clusterCmName)).thenReturn(clusterCm);\n+        when(mockBridgeOps.getAsync(anyString(), anyString())).thenReturn(Future.succeededFuture(clusterCm));\n+        when(mockServiceOps.reconcile(anyString(), anyString(), any())).thenReturn(Future.succeededFuture());\n+        when(mockDcOps.reconcile(anyString(), anyString(), any())).thenReturn(Future.succeededFuture());\n+        when(mockDcOps.scaleUp(anyString(), anyString(), anyInt())).thenReturn(Future.succeededFuture(42));\n+        when(mockDcOps.scaleDown(anyString(), anyString(), anyInt())).thenReturn(Future.succeededFuture(42));\n+        when(mockDcOps.waitForObserved(anyString(), anyString(), anyLong(), anyLong())).thenReturn(Future.succeededFuture());\n+        when(mockPdbOps.reconcile(anyString(), any(), any())).thenReturn(Future.succeededFuture());\n+        when(mockCmOps.reconcile(anyString(), any(), any())).thenReturn(Future.succeededFuture(ReconcileResult.created(new ConfigMap())));\n+        ArgumentCaptor<KafkaBridge> bridgeCaptor = ArgumentCaptor.forClass(KafkaBridge.class);\n+        when(mockBridgeOps.updateStatusAsync(bridgeCaptor.capture())).thenReturn(Future.succeededFuture());\n+        KafkaBridgeAssemblyOperator ops = new KafkaBridgeAssemblyOperator(vertx,\n+                new PlatformFeaturesAvailability(true, kubernetesVersion),\n+                new MockCertManager(), new PasswordGenerator(10, \"a\", \"a\"),\n+                supplier,\n+                ResourceUtils.dummyClusterOperatorConfig(VERSIONS));\n+\n+        Checkpoint async = context.checkpoint();\n+        ops.createOrUpdate(new Reconciliation(\"test-trigger\", KafkaBridge.RESOURCE_KIND, clusterCmNamespace, clusterCmName), clusterCm).setHandler(createResult -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cee371ec9c953255af64be472bae3960717db2db"}, "originalPosition": 51}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34f53820c1f9b3402e19a8ff9dc4766c56dd7668", "author": {"user": {"login": "leonardgee", "name": "Leofis G"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/34f53820c1f9b3402e19a8ff9dc4766c56dd7668", "committedDate": "2020-05-22T08:53:53Z", "message": "Refactored according to reviewer comments.\n\nSigned-off-by: Leonard Ge <gw980531@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f17cb05e9639e0e23c8ea554d174a5deb656f83d", "author": {"user": {"login": "leonardgee", "name": "Leofis G"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/f17cb05e9639e0e23c8ea554d174a5deb656f83d", "committedDate": "2020-05-22T08:45:47Z", "message": "Refactored according to reviewer comments."}, "afterCommit": {"oid": "34f53820c1f9b3402e19a8ff9dc4766c56dd7668", "author": {"user": {"login": "leonardgee", "name": "Leofis G"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/34f53820c1f9b3402e19a8ff9dc4766c56dd7668", "committedDate": "2020-05-22T08:53:53Z", "message": "Refactored according to reviewer comments.\n\nSigned-off-by: Leonard Ge <gw980531@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "916dc8ee1815d66be441580c680c1cfb40975c92", "author": {"user": {"login": "leonardgee", "name": "Leofis G"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/916dc8ee1815d66be441580c680c1cfb40975c92", "committedDate": "2020-05-22T08:56:50Z", "message": "Merge branch 'master' into set_bridge_replica_to_zero"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "db6653f54a90fae7b1297c3daf18e6cf74a3458d", "author": {"user": {"login": "leonardgee", "name": "Leofis G"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/db6653f54a90fae7b1297c3daf18e6cf74a3458d", "committedDate": "2020-05-22T11:08:58Z", "message": "Merge branch 'set_bridge_replica_to_zero' of github.com:524119574/strimzi-kafka-operator into set_bridge_replica_to_zero"}, "afterCommit": {"oid": "d67bfc309fb8981c1d6741c255caec23e719345b", "author": {"user": {"login": "leonardgee", "name": "Leofis G"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/d67bfc309fb8981c1d6741c255caec23e719345b", "committedDate": "2020-05-22T11:09:33Z", "message": "Merge branch 'set_bridge_replica_to_zero' of github.com:524119574/strimzi-kafka-operator into set_bridge_replica_to_zero\n\nSigned-off-by: Leonard Ge <gw980531@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d67bfc309fb8981c1d6741c255caec23e719345b", "author": {"user": {"login": "leonardgee", "name": "Leofis G"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/d67bfc309fb8981c1d6741c255caec23e719345b", "committedDate": "2020-05-22T11:09:33Z", "message": "Merge branch 'set_bridge_replica_to_zero' of github.com:524119574/strimzi-kafka-operator into set_bridge_replica_to_zero\n\nSigned-off-by: Leonard Ge <gw980531@gmail.com>"}, "afterCommit": {"oid": "2892816c91e391819b07da58ea68fd4c7fdf9182", "author": {"user": {"login": "leonardgee", "name": "Leofis G"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/2892816c91e391819b07da58ea68fd4c7fdf9182", "committedDate": "2020-05-22T11:12:44Z", "message": "Merge branch 'set_bridge_replica_to_zero' of github.com:524119574/strimzi-kafka-operator into set_bridge_replica_to_zero\n\nSigned-off-by: Leonard Ge <gw980531@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2892816c91e391819b07da58ea68fd4c7fdf9182", "author": {"user": {"login": "leonardgee", "name": "Leofis G"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/2892816c91e391819b07da58ea68fd4c7fdf9182", "committedDate": "2020-05-22T11:12:44Z", "message": "Merge branch 'set_bridge_replica_to_zero' of github.com:524119574/strimzi-kafka-operator into set_bridge_replica_to_zero\n\nSigned-off-by: Leonard Ge <gw980531@gmail.com>"}, "afterCommit": {"oid": "8793e9a9a4f56aa5933205b2397c271cf171af62", "author": {"user": {"login": "leonardgee", "name": "Leofis G"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/8793e9a9a4f56aa5933205b2397c271cf171af62", "committedDate": "2020-05-22T11:14:34Z", "message": "Merge branch 'set_bridge_replica_to_zero' of github.com:524119574/strimzi-kafka-operator into set_bridge_replica_to_zero\n\nSigned-off-by: Leonard Ge <gw980531@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf12c11d06c07a158b8e44dc92b51ecda1592a64", "author": {"user": {"login": "leonardgee", "name": "Leofis G"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/bf12c11d06c07a158b8e44dc92b51ecda1592a64", "committedDate": "2020-05-22T11:28:44Z", "message": "Changed default replica.\n\nSigned-off-by: Leonard Ge <gw980531@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "edc74631c9df8fca040ba6c1e3740114bd082511", "author": {"user": {"login": "leonardgee", "name": "Leofis G"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/edc74631c9df8fca040ba6c1e3740114bd082511", "committedDate": "2020-05-22T11:26:33Z", "message": "Changed default replica.\n\nSigned-off-by: Leonard Ge <gw980531@gmail.com>"}, "afterCommit": {"oid": "bf12c11d06c07a158b8e44dc92b51ecda1592a64", "author": {"user": {"login": "leonardgee", "name": "Leofis G"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/bf12c11d06c07a158b8e44dc92b51ecda1592a64", "committedDate": "2020-05-22T11:28:44Z", "message": "Changed default replica.\n\nSigned-off-by: Leonard Ge <gw980531@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2OTA0ODg2", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2984#pullrequestreview-416904886", "createdAt": "2020-05-22T13:22:07Z", "commit": {"oid": "bf12c11d06c07a158b8e44dc92b51ecda1592a64"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMzoyMjowN1rOGZW3Rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMzoyMjowN1rOGZW3Rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI0MjE4Mw==", "bodyText": "TBH, most users would expect it to run. So I think the DEFAULT_REPLICAS should stay 1.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2984#discussion_r429242183", "createdAt": "2020-05-22T13:22:07Z", "author": {"login": "scholzj"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/KafkaBridgeCluster.java", "diffHunk": "@@ -57,7 +57,7 @@\n     protected static final String PASSWORD_VOLUME_MOUNT = \"/opt/strimzi/bridge-password/\";\n \n     // Configuration defaults\n-    protected static final int DEFAULT_REPLICAS = 1;\n+    protected static final int DEFAULT_REPLICAS = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf12c11d06c07a158b8e44dc92b51ecda1592a64"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e42995a3433b748027b1110b66f19d4be00cf944", "author": {"user": {"login": "leonardgee", "name": "Leofis G"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/e42995a3433b748027b1110b66f19d4be00cf944", "committedDate": "2020-05-24T08:46:18Z", "message": "Refactored according to comments.\n\nSigned-off-by: Leonard Ge <gw980531@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MzQ4NjM0", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2984#pullrequestreview-417348634", "createdAt": "2020-05-24T11:15:02Z", "commit": {"oid": "76ecdd07b8eedf690aa1fe267744efc52127777b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxMToxNTowMlrOGZuQTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxMToxNTowMlrOGZuQTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYyNTQyMg==", "bodyText": "To match the recent vertx upgrade we did this should now be onComplete instead of setHandler", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2984#discussion_r429625422", "createdAt": "2020-05-24T11:15:02Z", "author": {"login": "samuel-hawker"}, "path": "cluster-operator/src/test/java/io/strimzi/operator/cluster/operator/assembly/KafkaBridgeAssemblyOperatorTest.java", "diffHunk": "@@ -687,4 +688,49 @@ public void testCreateClusterStatusNotReady(VertxTestContext context) {\n             })));\n     }\n \n+    @Test\n+    public void testCreateOrUpdateBridgeZeroReplica(VertxTestContext context) {\n+        ResourceOperatorSupplier supplier = ResourceUtils.supplierWithMocks(true);\n+        CrdOperator mockBridgeOps = supplier.kafkaBridgeOperator;\n+        DeploymentOperator mockDcOps = supplier.deploymentOperations;\n+        PodDisruptionBudgetOperator mockPdbOps = supplier.podDisruptionBudgetOperator;\n+        ConfigMapOperator mockCmOps = supplier.configMapOperations;\n+        ServiceOperator mockServiceOps = supplier.serviceOperations;\n+\n+        String clusterCmName = \"foo\";\n+        String clusterCmNamespace = \"test\";\n+        String failureMsg = \"failure\";\n+        Map<String, Object> metricsCm = new HashMap<>();\n+        metricsCm.put(\"foo\", \"bar\");\n+        KafkaBridge clusterCm = ResourceUtils.createKafkaBridgeCluster(clusterCmNamespace, clusterCmName, image, 0,\n+                BOOTSTRAP_SERVERS, KAFKA_BRIDGE_PRODUCER_SPEC, KAFKA_BRIDGE_CONSUMER_SPEC, KAFKA_BRIDGE_HTTP_SPEC, metricsCm);\n+\n+        when(mockBridgeOps.get(clusterCmNamespace, clusterCmName)).thenReturn(clusterCm);\n+        when(mockBridgeOps.getAsync(anyString(), anyString())).thenReturn(Future.succeededFuture(clusterCm));\n+        when(mockServiceOps.reconcile(anyString(), anyString(), any())).thenReturn(Future.succeededFuture());\n+        when(mockDcOps.reconcile(anyString(), anyString(), any())).thenReturn(Future.succeededFuture());\n+        when(mockDcOps.scaleUp(anyString(), anyString(), anyInt())).thenReturn(Future.succeededFuture(42));\n+        when(mockDcOps.scaleDown(anyString(), anyString(), anyInt())).thenReturn(Future.succeededFuture(42));\n+        when(mockDcOps.waitForObserved(anyString(), anyString(), anyLong(), anyLong())).thenReturn(Future.succeededFuture());\n+        when(mockPdbOps.reconcile(anyString(), any(), any())).thenReturn(Future.succeededFuture());\n+        when(mockCmOps.reconcile(anyString(), any(), any())).thenReturn(Future.succeededFuture(ReconcileResult.created(new ConfigMap())));\n+        ArgumentCaptor<KafkaBridge> bridgeCaptor = ArgumentCaptor.forClass(KafkaBridge.class);\n+        when(mockBridgeOps.updateStatusAsync(bridgeCaptor.capture())).thenReturn(Future.succeededFuture());\n+        KafkaBridgeAssemblyOperator ops = new KafkaBridgeAssemblyOperator(vertx,\n+                new PlatformFeaturesAvailability(true, kubernetesVersion),\n+                new MockCertManager(), new PasswordGenerator(10, \"a\", \"a\"),\n+                supplier,\n+                ResourceUtils.dummyClusterOperatorConfig(VERSIONS));\n+\n+        Checkpoint async = context.checkpoint();\n+        ops.createOrUpdate(new Reconciliation(\"test-trigger\", KafkaBridge.RESOURCE_KIND, clusterCmNamespace, clusterCmName), clusterCm)\n+                .setHandler(context.succeeding(v -> context.verify(() -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76ecdd07b8eedf690aa1fe267744efc52127777b"}, "originalPosition": 48}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "26371cf492e6a9bec39b49ac3d6efb0349c11b56", "author": {"user": {"login": "leonardgee", "name": "Leofis G"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/26371cf492e6a9bec39b49ac3d6efb0349c11b56", "committedDate": "2020-05-24T12:24:28Z", "message": "Merge branch 'set_bridge_replica_to_zero' of github.com:524119574/strimzi-kafka-operator into set_bridge_replica_to_zero"}, "afterCommit": {"oid": "c2a2e42de5e7f8591df7aa81607fcf0c58ec7736", "author": {"user": {"login": "leonardgee", "name": "Leofis G"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/c2a2e42de5e7f8591df7aa81607fcf0c58ec7736", "committedDate": "2020-05-24T12:25:31Z", "message": "Merge branch 'set_bridge_replica_to_zero' of github.com:524119574/strimzi-kafka-operator into set_bridge_replica_to_zero\n\nSigned-off-by: Leonard Ge <gw980531@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e7a43031cb0a9abd45f43a0bd4db44d3c9d9019", "author": {"user": {"login": "leonardgee", "name": "Leofis G"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/3e7a43031cb0a9abd45f43a0bd4db44d3c9d9019", "committedDate": "2020-05-24T12:26:56Z", "message": "Refactored based on reiviewer comments.\n\nSigned-off-by: Leonard Ge <gw980531@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c2a2e42de5e7f8591df7aa81607fcf0c58ec7736", "author": {"user": {"login": "leonardgee", "name": "Leofis G"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/c2a2e42de5e7f8591df7aa81607fcf0c58ec7736", "committedDate": "2020-05-24T12:25:31Z", "message": "Merge branch 'set_bridge_replica_to_zero' of github.com:524119574/strimzi-kafka-operator into set_bridge_replica_to_zero\n\nSigned-off-by: Leonard Ge <gw980531@gmail.com>"}, "afterCommit": {"oid": "3e7a43031cb0a9abd45f43a0bd4db44d3c9d9019", "author": {"user": {"login": "leonardgee", "name": "Leofis G"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/3e7a43031cb0a9abd45f43a0bd4db44d3c9d9019", "committedDate": "2020-05-24T12:26:56Z", "message": "Refactored based on reiviewer comments.\n\nSigned-off-by: Leonard Ge <gw980531@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5855418c8c7bfca531c6731ffe99f9dc0b30b00a", "author": {"user": {"login": "leonardgee", "name": "Leofis G"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/5855418c8c7bfca531c6731ffe99f9dc0b30b00a", "committedDate": "2020-05-24T12:28:19Z", "message": "Merge branch 'master' into set_bridge_replica_to_zero"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MzYxMTI0", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2984#pullrequestreview-417361124", "createdAt": "2020-05-24T13:57:44Z", "commit": {"oid": "5855418c8c7bfca531c6731ffe99f9dc0b30b00a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxMzo1Nzo0NFrOGZvHdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxMzo1Nzo0NFrOGZvHdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYzOTU0MQ==", "bodyText": "Why are you not using the constant here to make clear the intent that replicas is initialized with the default", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2984#discussion_r429639541", "createdAt": "2020-05-24T13:57:44Z", "author": {"login": "samuel-hawker"}, "path": "api/src/main/java/io/strimzi/api/kafka/model/KafkaBridgeSpec.java", "diffHunk": "@@ -35,7 +35,7 @@\n \n     private static final long serialVersionUID = 1L;\n \n-    private int replicas;\n+    private int replicas = 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5855418c8c7bfca531c6731ffe99f9dc0b30b00a"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf143b94b763fc6e46bb9daecfb2edd18c607a53", "author": {"user": {"login": "leonardgee", "name": "Leofis G"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/cf143b94b763fc6e46bb9daecfb2edd18c607a53", "committedDate": "2020-05-24T14:38:03Z", "message": "Used constant for replicas.\n\nSigned-off-by: Leonard Ge <gw980531@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cbb6468cc6412c65fadef94764596687b72a2075", "author": {"user": {"login": "leonardgee", "name": "Leofis G"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/cbb6468cc6412c65fadef94764596687b72a2075", "committedDate": "2020-05-24T14:48:12Z", "message": "Created constant for default replica.\n\nSigned-off-by: Leonard Ge <gw980531@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d56196d20e0bad6028471d9b703b448fecbfe4e9", "author": {"user": {"login": "leonardgee", "name": "Leofis G"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/d56196d20e0bad6028471d9b703b448fecbfe4e9", "committedDate": "2020-05-24T14:48:42Z", "message": "Merge branch 'set_bridge_replica_to_zero' of github.com:524119574/strimzi-kafka-operator into set_bridge_replica_to_zero\n\nSigned-off-by: Leonard Ge <gw980531@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c957c73ce5dce33c5e0d72feb45182ee8f39cfd8", "author": {"user": {"login": "leonardgee", "name": "Leofis G"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/c957c73ce5dce33c5e0d72feb45182ee8f39cfd8", "committedDate": "2020-05-24T14:50:05Z", "message": "Fixed new line issue.\n\nSigned-off-by: Leonard Ge <gw980531@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3Mzc2NjI3", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2984#pullrequestreview-417376627", "createdAt": "2020-05-24T17:26:28Z", "commit": {"oid": "c957c73ce5dce33c5e0d72feb45182ee8f39cfd8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MzgyOTk2", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2984#pullrequestreview-417382996", "createdAt": "2020-05-24T19:00:54Z", "commit": {"oid": "c957c73ce5dce33c5e0d72feb45182ee8f39cfd8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4NzA2NTk2", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2984#pullrequestreview-418706596", "createdAt": "2020-05-26T21:54:50Z", "commit": {"oid": "c957c73ce5dce33c5e0d72feb45182ee8f39cfd8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1674, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}