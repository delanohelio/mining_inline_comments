{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4ODk5MzYy", "number": 3754, "title": "Fix upgrade from 0.19 when Kafka version is not specified in the CRD", "bodyText": "Type of change\n\nBugfix\n\nDescription\nKafka upgrade can currently happen in two ways:\n\n\nThe regular one when .spec.kafka.version is specified happens separately from the operator upgrade. In that case the operator does first a regular rolling update (in this case for example from Strimzi 0.19.0/2.5.0 to Strimzi 0.20.0/2.5.0) and only in later phase it upgrades the Kafka to 2.6.0 when user changes the version. This means that when the Kafka upgrade happens, all the other Kubernetes resources are already updated to the new version of the operator. We want to do the upgrade as soon as possible to make sure it does just the upgrade and ideally doesn't mix in any other changes.\n\n\nThe second upgrade type happens when .spec.kafka.version is not specified. In that case the upgrade is done in one go - both operator upgrade as well as Kafka upgrade ((in this case for example from Strimzi 0.19.0/2.5.0 to Strimzi 0.20.0/2.6.0). This is problematic, because we start with all the services, config maps and stateful sets not updated. So ideally we want to first let the operator update all the Kube resources and only as the last thing do the upgrade roll of the Kafka pods. This means we have different requirements here from the regular Kafka upgrade.\n\n\nIn this PR I split the version change into 3 parts:\n\nThe upgrade check on the beginning just checks if versions changed and upgrade is needed.\nThe first upgrade call does the regular upgrade with the old statefulset and config maps from previous reconciliation. This is used only for the regular upgrade. This runs early in the reconciliation.\nThe second upgrade call does the all-in-one upgrade without specified Kafka version. I called this postponed and it runs only as the last part before the regular rolling update.\n\nThis should make it much easier to handle both kinds of upgrades even when there were major changes to the way the pods are configured such as happened in relation to the listener change which caused the latest issue here.\nThis should close #3685.\nChecklist\n\n Write tests\n Make sure all tests pass\n Try your changes from Pod inside your Kubernetes and OpenShift cluster, not just locally\n Reference relevant issue(s) and close them after merging", "createdAt": "2020-10-07T00:03:14Z", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3754", "merged": true, "mergeCommit": {"oid": "ffa7cc519d13522a14425d2966f942d7163aeb51"}, "closed": true, "closedAt": "2020-10-08T13:01:25Z", "author": {"login": "scholzj"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdQATfpgH2gAyNDk4ODk5MzYyOmZlN2RlZjdmMGY0MmIxYzZkYjg4MmUyMTUyZmViNDFmZWVmYmEyZTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQhHwpAFqTUwNDc1MDc1NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fe7def7f0f42b1c6db882e2152feb41feefba2e5", "author": {"user": {"login": "scholzj", "name": "Jakub Scholz"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/fe7def7f0f42b1c6db882e2152feb41feefba2e5", "committedDate": "2020-10-06T22:41:19Z", "message": "Fix upgrade from 0.19 when Kafka version is not specified in the CRD - Closes #3685\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb1d957a1dd5a9de8803af2172b47681f8b2027d", "author": {"user": {"login": "scholzj", "name": "Jakub Scholz"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/cb1d957a1dd5a9de8803af2172b47681f8b2027d", "committedDate": "2020-10-06T23:22:35Z", "message": "Fix NPE on new clusters when the version is not known yet\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzNjEwMDUw", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3754#pullrequestreview-503610050", "createdAt": "2020-10-07T07:49:46Z", "commit": {"oid": "cb1d957a1dd5a9de8803af2172b47681f8b2027d"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwNzo0OTo0NlrOHdmzCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwNzo1MzoyOFrOHdm8JQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDgwNjQxMA==", "bodyText": "Just typo ...\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            log.debug(\"{}: Kafka versions are not known yet, upgrade iwll be skipped\", reconciliation);\n          \n          \n            \n                            log.debug(\"{}: Kafka versions are not known yet, upgrade will be skipped\", reconciliation);", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3754#discussion_r500806410", "createdAt": "2020-10-07T07:49:46Z", "author": {"login": "im-konge"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaAssemblyOperator.java", "diffHunk": "@@ -896,35 +898,65 @@ private KafkaVersionChange getKafkaVersionChange(StatefulSet kafkaSts) {\n                             return Future.succeededFuture(this);\n                         }\n \n-                        KafkaVersionChange versionChange = getKafkaVersionChange(oldSts);\n+                        this.versionChange = getKafkaVersionChange(oldSts);\n+                        return Future.succeededFuture(this);\n+                    });\n+        }\n \n-                        // Get the current version of the cluster\n-                        KafkaVersion currentVersion = versions.version(Annotations.annotations(oldSts).get(ANNO_STRIMZI_IO_KAFKA_VERSION));\n+        /**\n+         * Does the Kafka upgrade from one version to another. Regular upgrades with Kafka version specified in the\n+         * Kafka CR are done as early as possible in the cycle since the broker has already rolled with the new Strimzi\n+         * version before. This is indicated by the postponedUpgrade flag being set to false. Upgrades without Kafka\n+         * version specified in the Kafka CR upgrade the operator and Kafka in one go. These have to run only before the\n+         * regular Kafka rolling update when all resources are already updated. This is indicated by the\n+         * postponedUpgrade flag being set to true.\n+         *\n+         * @param postponedUpgrade     Indicates the phase from which is this method called.\n+         * @return\n+         */\n+        Future<ReconciliationState> kafkaVersionChange(boolean postponedUpgrade) {\n+            boolean shouldBePostponed = kafkaAssembly.getSpec().getKafka().getVersion() == null;\n \n-                        StatefulSet sts;\n-                        ConfigMap cm;\n+            if (versionChange == null)   {\n+                log.debug(\"{}: Kafka versions are not known yet, upgrade iwll be skipped\", reconciliation);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb1d957a1dd5a9de8803af2172b47681f8b2027d"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDgwODc0MQ==", "bodyText": "I think that we can remove this, as we are not checking this anywhere.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3754#discussion_r500808741", "createdAt": "2020-10-07T07:53:28Z", "author": {"login": "im-konge"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/upgrade/StrimziUpgradeST.java", "diffHunk": "@@ -180,33 +179,34 @@ void testChainUpgrade() throws Exception {\n         }\n     }\n \n-    // TODO: remove disabled tag after fix of issue #3685\n     @Test\n-    @Disabled(\"Disabled because of bug https://github.com/strimzi/strimzi-kafka-operator/issues/3685\")\n     void testUpgradeKafkaWithoutVersion() throws IOException {\n-        File dir = FileUtils.downloadAndUnzip(latestReleasedOperator);\n-        File kafkaPersistent = new File(dir, \"strimzi-\" + latestReleasedVersion + \"/examples/kafka/kafka-persistent.yaml\");\n-        File kafkaVersions = FileUtils.downloadYaml(\"https://raw.githubusercontent.com/strimzi/strimzi-kafka-operator/\" + latestReleasedVersion + \"/kafka-versions.yaml\");\n+        File dir = FileUtils.downloadAndUnzip(strimziReleaseWithOlderKafka);\n+        File previousKafkaPersistent = new File(dir, \"strimzi-\" + strimziReleaseWithOlderKafkaVersion + \"/examples/kafka/kafka-persistent.yaml\");\n+        File previousKafkaVersionsYaml = FileUtils.downloadYaml(\"https://raw.githubusercontent.com/strimzi/strimzi-kafka-operator/\" + strimziReleaseWithOlderKafkaVersion + \"/kafka-versions.yaml\");\n+        File latestKafkaVersionsYaml = new File(TestUtils.USER_PATH + \"//../kafka-versions.yaml\");\n \n-        coDir = new File(dir, \"strimzi-\" + latestReleasedVersion + \"/install/cluster-operator/\");\n+        coDir = new File(dir, \"strimzi-\" + strimziReleaseWithOlderKafkaVersion + \"/install/cluster-operator/\");\n \n-        String latestKafkaVersion = getValueForLastKafkaVersionInFile(kafkaVersions, \"version\");\n+        //String previousKafkaVersion = getValueForLastKafkaVersionInFile(previousKafkaVersionsYaml, \"version\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb1d957a1dd5a9de8803af2172b47681f8b2027d"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzODMzMzA5", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3754#pullrequestreview-503833309", "createdAt": "2020-10-07T12:40:05Z", "commit": {"oid": "cb1d957a1dd5a9de8803af2172b47681f8b2027d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMjo0MDowNVrOHdxSGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMjo0MDowNVrOHdxSGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk3ODIwMQ==", "bodyText": "Do we want to use a boolean argument here, I wonder if it would be better to have two separate methods:\nkafkaVersionChange\n\nand\nkafkaVersionChangePostponed", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3754#discussion_r500978201", "createdAt": "2020-10-07T12:40:05Z", "author": {"login": "samuel-hawker"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaAssemblyOperator.java", "diffHunk": "@@ -280,7 +280,8 @@ public KafkaAssemblyOperator(Vertx vertx, PlatformFeaturesAvailability pfa,\n                 .compose(state -> state.kafkaManualPodCleaning())\n                 .compose(state -> state.kafkaNetPolicy())\n                 .compose(state -> state.kafkaManualRollingUpdate())\n-                .compose(state -> state.kafkaVersionChange())\n+                .compose(state -> state.kafkaVersionChangeCheck())\n+                .compose(state -> state.kafkaVersionChange(false))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb1d957a1dd5a9de8803af2172b47681f8b2027d"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzODQ3NDQ3", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3754#pullrequestreview-503847447", "createdAt": "2020-10-07T12:56:12Z", "commit": {"oid": "cb1d957a1dd5a9de8803af2172b47681f8b2027d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f4fb9a69d09c00c027e5b30d9ecd497abac6bf7", "author": {"user": {"login": "scholzj", "name": "Jakub Scholz"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/1f4fb9a69d09c00c027e5b30d9ecd497abac6bf7", "committedDate": "2020-10-07T17:48:54Z", "message": "Review comments\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0NzUwNzU1", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3754#pullrequestreview-504750755", "createdAt": "2020-10-08T12:55:22Z", "commit": {"oid": "1f4fb9a69d09c00c027e5b30d9ecd497abac6bf7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1034, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}