{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyNDM0Mjk1", "number": 2516, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwODozMzoyM1rODeXaQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwODozNDo1OVrODeXbwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMTY3NDI1OnYy", "diffSide": "RIGHT", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaAssemblyOperator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwODozMzoyM1rOFndcAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwODozMzoyM1rOFndcAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjkyMTA4OA==", "bodyText": "I think kafkaAncillaryCmGeneration is a more natural ordering of these terms. zkAncillaryCmGeneration too.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2516#discussion_r376921088", "createdAt": "2020-02-10T08:33:23Z", "author": {"login": "tombentley"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaAssemblyOperator.java", "diffHunk": "@@ -387,7 +387,8 @@ ReconciliationState createReconciliationState(Reconciliation reconciliation, Kaf\n         private Set<String> kafkaExternalAdvertisedHostnames = new LinkedHashSet<>();\n         private Set<String> kafkaExternalAdvertisedPorts = new LinkedHashSet<>();\n         private Map<Integer, Set<String>> kafkaExternalDnsNames = new HashMap<>();\n-        private boolean kafkaAncillaryCmChange;\n+        private Long ancillaryZkCmGeneration = 0L;\n+        private Long ancillaryKafkaCmGeneration = 0L;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb42ff926c0322a207015c528686a1f6ab58df8e"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMTY3ODA4OnYy", "diffSide": "RIGHT", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaAssemblyOperator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwODozNDo1OVrOFndeRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwODozNDo1OVrOFndeRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjkyMTY2OQ==", "bodyText": "In theory a NPE might be possible here if the ancillaryCmGeneration is null. Probably best to do the roll if it's null.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2516#discussion_r376921669", "createdAt": "2020-02-10T08:34:59Z", "author": {"login": "tombentley"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaAssemblyOperator.java", "diffHunk": "@@ -2920,7 +2926,7 @@ private boolean isPodToRestart(StatefulSet sts, Pod pod, boolean isAncillaryCmCh\n                         reasons.add(\"Pod has old \" + ca + \" certificate generation\");\n                     }\n                 }\n-                if (isAncillaryCmChange) {\n+                if (cmAnno != ancillaryCmGeneration) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb42ff926c0322a207015c528686a1f6ab58df8e"}, "originalPosition": 124}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 428, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}