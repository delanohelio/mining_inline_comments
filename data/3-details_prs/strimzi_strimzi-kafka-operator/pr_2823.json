{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyMjUwMzQ0", "number": 2823, "title": "Allow changes to storage overrides before scale-up or after scale-down", "bodyText": "Type of change\n\nEnhancement / new feature\n\nDescription\nStrimzi doesn't support changes to existing storage configuration because it cannot really change the storage class of existing disk for example. The only changes currently supported are:\n\nIncreasing the storage size (when supported by the storage class)\nAdding/removing volumes to/from JBOD storage\n\nOne of the problems of this is that we support per-broker overrides which let the users to specify the storage class for each broker. But right now these could be set only when deploying new cluster. That is ok as long as you don't plan to scale the brokers (Zookeepers). When you want to scale the brokers and want to add new overrides for them, the mechanism which protects the storage changes will not allow them.\nThis PR makes is possible to change the overrides (add, remove, modify) for the brokers which:\n\nDo not exist yet (and will be added later - e.g. broker 4 and 5 with 3 node cluster)\nBrokers which are being scaled-up (i.e. you can add/modify the overrides for the new brokers just as you change the replicas field)\nBrokers which are being scaled-down (i.e. you can remove the overrides for the old brokers just as you change the replicas field)\n\nChecklist\n\n Write tests\n Make sure all tests pass\n Try your changes from Pod inside your Kubernetes and OpenShift cluster, not just locally", "createdAt": "2020-04-11T21:35:53Z", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2823", "merged": true, "mergeCommit": {"oid": "3a6224800e93fffa5190ee6dd515ab788e08aa97"}, "closed": true, "closedAt": "2020-04-12T13:22:42Z", "author": {"login": "scholzj"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcWsTdxAH2gAyNDAyMjUwMzQ0OjlmMzQxNzdiZWJlNTY0NzkwMjgwODg5N2M0YWNkMWZmMWVlMzA4YjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcW3lwVAFqTM5MTg0MjIzOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9f34177bebe5647902808897c4acd1ff1ee308b5", "author": {"user": {"login": "scholzj", "name": "Jakub Scholz"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/9f34177bebe5647902808897c4acd1ff1ee308b5", "committedDate": "2020-04-11T21:09:30Z", "message": "Allow changes to storage overrides before scale-up or after scale-down\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxODQwNDc0", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2823#pullrequestreview-391840474", "createdAt": "2020-04-12T09:54:24Z", "commit": {"oid": "9f34177bebe5647902808897c4acd1ff1ee308b5"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQwOTo1NDoyNFrOGET-rQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQxMDowMDo0MVrOGEUBWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE3NDgyOQ==", "bodyText": "any reason for not calling using nodeId directly in the for loop?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2823#discussion_r407174829", "createdAt": "2020-04-12T09:54:24Z", "author": {"login": "ppatierno"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/StorageDiff.java", "diffHunk": "@@ -136,4 +171,55 @@ public boolean changesType() {\n     public boolean shrinkSize() {\n         return shrinkSize;\n     }\n+\n+    /**\n+     * Validates the changes to the storage overrides and decides whether they are allowed or not. Allowed changes are\n+     * those to nodes which will be added, removed or which do nto exist yet.\n+     *\n+     * @param current           Current Storage configuration\n+     * @param desired           New storage configuration\n+     * @param currentReplicas   Current number of replicas\n+     * @param desiredReplicas   Desired number of replicas\n+     * @return                  True if only allowed override changes were done, false othewise\n+     */\n+    private boolean isOverrideChangeAllowed(Storage current, Storage desired,  int currentReplicas, int desiredReplicas)   {\n+        List<PersistentClaimStorageOverride> currentOverrides = ((PersistentClaimStorage) current).getOverrides();\n+        if (currentOverrides == null)   {\n+            currentOverrides = Collections.emptyList();\n+        }\n+\n+        List<PersistentClaimStorageOverride> desiredOverrides = ((PersistentClaimStorage) desired).getOverrides();\n+        if (desiredOverrides == null)   {\n+            desiredOverrides = Collections.emptyList();\n+        }\n+\n+        // We care only about the nodes which existed before this reconciliation and will still exist after it\n+        int existedAndWillExist = Math.min(currentReplicas, desiredReplicas);\n+\n+        for (int i = 0; i < existedAndWillExist; i++)    {\n+            int nodeId = i;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f34177bebe5647902808897c4acd1ff1ee308b5"}, "originalPosition": 116}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE3NTUxNA==", "bodyText": "Maybe not related to this PR but why the zkCurrentReplicas is declared as Integer and not just a simple int which makes a little bit different the way we pass the old replicas between ZooKeeper and Kafka in the next code? Can the getReplicas() return null on a StatefulSet? The same is used in the KafkaClusterDescription but setting an int so I would say no.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2823#discussion_r407175514", "createdAt": "2020-04-12T10:00:41Z", "author": {"login": "ppatierno"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaAssemblyOperator.java", "diffHunk": "@@ -1278,14 +1278,14 @@ private KafkaVersionChange getKafkaVersionChange(StatefulSet kafkaSts) {\n                     .compose(sts -> {\n                         Storage oldStorage = getOldStorage(sts);\n \n-                        this.zkCluster = ZookeeperCluster.fromCrd(kafkaAssembly, versions, oldStorage);\n-                        this.zkService = zkCluster.generateService();\n-                        this.zkHeadlessService = zkCluster.generateHeadlessService();\n-\n                         if (sts != null && sts.getSpec() != null)   {\n                             this.zkCurrentReplicas = sts.getSpec().getReplicas();\n                         }\n \n+                        this.zkCluster = ZookeeperCluster.fromCrd(kafkaAssembly, versions, oldStorage, zkCurrentReplicas != null ? zkCurrentReplicas : 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f34177bebe5647902808897c4acd1ff1ee308b5"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxODQyMjM5", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2823#pullrequestreview-391842239", "createdAt": "2020-04-12T10:18:26Z", "commit": {"oid": "9f34177bebe5647902808897c4acd1ff1ee308b5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1847, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}