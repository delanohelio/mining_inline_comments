{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0NTkxMDg3", "number": 2975, "title": "[systemtest] Edit ClientUtils receive method", "bodyText": "Type of change\n\nEdit\n\nDescription\nThis PR gonna edit our wait for receive messages method in ClientUtils to try only 3 times if consumer will receive messages. The receiveMessagesTls() have waitFor inside it, so there is no need to have it in our method and that's why I change it. Other than that -> if consumer won't receive messages on 3 tries, it will not receive it in the timeout.\nChecklist\n\n Make sure all tests pass", "createdAt": "2020-05-07T10:16:40Z", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2975", "merged": true, "mergeCommit": {"oid": "0f7a1a70989287d72f2486963fce66c6d5806939"}, "closed": true, "closedAt": "2020-05-08T12:32:43Z", "author": {"login": "im-konge"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABce5ppGgH2gAyNDE0NTkxMDg3OjA5MDk0MWEwZTY5NjYzMzk2ZTgxYTZiNmYzZmIwODg2NWRmODdmY2M=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcfMlwTAFqTQwODA0ODE0MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "090941a0e69663396e81a6b6f3fb08865df87fcc", "author": {"user": null}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/090941a0e69663396e81a6b6f3fb08865df87fcc", "committedDate": "2020-05-07T09:13:53Z", "message": "rewrite method with counter\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f3cac0db5ff0de9e470c3e7c43f54b40bd2d459", "author": {"user": {"login": "im-konge", "name": "Luk\u00e1\u0161 Kr\u00e1l"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/7f3cac0db5ff0de9e470c3e7c43f54b40bd2d459", "committedDate": "2020-05-07T10:09:56Z", "message": "add exception to method signature\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3MzM5MTUy", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2975#pullrequestreview-407339152", "createdAt": "2020-05-07T10:20:18Z", "commit": {"oid": "7f3cac0db5ff0de9e470c3e7c43f54b40bd2d459"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMDoyMDoxOFrOGR4Gkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMDoyMDoxOFrOGR4Gkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM5ODE2Mw==", "bodyText": "Use RuntimeException instead of this", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2975#discussion_r421398163", "createdAt": "2020-05-07T10:20:18Z", "author": {"login": "Frawless"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/ClientUtils.java", "diffHunk": "@@ -24,18 +23,21 @@\n     // ensuring that object can not be created outside of class\n     private ClientUtils() {}\n \n-    public static void waitUntilClientReceivedMessagesTls(KafkaClientOperations kafkaClient, int exceptedMessages) {\n-        TestUtils.waitFor(\"Kafka \" + kafkaClient.toString() + \" client received messages\", Constants.GLOBAL_CLIENTS_POLL, Constants.GLOBAL_TIMEOUT,\n-            () -> {\n-                int receivedMessages = 0;\n-                try {\n-                    receivedMessages = kafkaClient.receiveMessagesTls(Constants.GLOBAL_CLIENTS_TIMEOUT);\n-                    return receivedMessages == exceptedMessages;\n-                } catch (Exception e) {\n-                    LOGGER.warn(\"Client not received excepted messages {}, instead received only {}!\", exceptedMessages, receivedMessages);\n-                    return false;\n-                }\n-            });\n+    public static void waitUntilClientReceivedMessagesTls(KafkaClientOperations kafkaClient, int exceptedMessages) throws Throwable {\n+        int receivedMessages;\n+        int tries = 3;\n+\n+        for (; tries > 0; tries--) {\n+            receivedMessages = kafkaClient.receiveMessagesTls(Constants.GLOBAL_CLIENTS_TIMEOUT);\n+\n+            if (receivedMessages == exceptedMessages) {\n+                LOGGER.info(\"Consumer successfully consumed {} messages\", exceptedMessages);\n+                break;\n+            }\n+        }\n+        if (tries == 0) {\n+            throw new Throwable(String.format(\"Consumer wasn't able to consume %s messages for 3 times\", exceptedMessages));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f3cac0db5ff0de9e470c3e7c43f54b40bd2d459"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3MzUzODI5", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2975#pullrequestreview-407353829", "createdAt": "2020-05-07T10:43:19Z", "commit": {"oid": "7f3cac0db5ff0de9e470c3e7c43f54b40bd2d459"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMDo0MzoxOVrOGR41tA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMDo0Mzo1MlrOGR43AA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQxMDIyOA==", "bodyText": "why do you reverse the counting? Shouldn't be better iterate from 1 to 3 inclusive and use that value in the logging?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2975#discussion_r421410228", "createdAt": "2020-05-07T10:43:19Z", "author": {"login": "see-quick"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/ClientUtils.java", "diffHunk": "@@ -24,18 +23,21 @@\n     // ensuring that object can not be created outside of class\n     private ClientUtils() {}\n \n-    public static void waitUntilClientReceivedMessagesTls(KafkaClientOperations kafkaClient, int exceptedMessages) {\n-        TestUtils.waitFor(\"Kafka \" + kafkaClient.toString() + \" client received messages\", Constants.GLOBAL_CLIENTS_POLL, Constants.GLOBAL_TIMEOUT,\n-            () -> {\n-                int receivedMessages = 0;\n-                try {\n-                    receivedMessages = kafkaClient.receiveMessagesTls(Constants.GLOBAL_CLIENTS_TIMEOUT);\n-                    return receivedMessages == exceptedMessages;\n-                } catch (Exception e) {\n-                    LOGGER.warn(\"Client not received excepted messages {}, instead received only {}!\", exceptedMessages, receivedMessages);\n-                    return false;\n-                }\n-            });\n+    public static void waitUntilClientReceivedMessagesTls(KafkaClientOperations kafkaClient, int exceptedMessages) throws Throwable {\n+        int receivedMessages;\n+        int tries = 3;\n+\n+        for (; tries > 0; tries--) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f3cac0db5ff0de9e470c3e7c43f54b40bd2d459"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQxMDU2MA==", "bodyText": "here you can use it\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            LOGGER.info(\"Consumer successfully consumed {} messages\", exceptedMessages);\n          \n          \n            \n                            LOGGER.info(\"Consumer successfully consumed {} messages for the {} time\", exceptedMessages, tries);", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2975#discussion_r421410560", "createdAt": "2020-05-07T10:43:52Z", "author": {"login": "see-quick"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/ClientUtils.java", "diffHunk": "@@ -24,18 +23,21 @@\n     // ensuring that object can not be created outside of class\n     private ClientUtils() {}\n \n-    public static void waitUntilClientReceivedMessagesTls(KafkaClientOperations kafkaClient, int exceptedMessages) {\n-        TestUtils.waitFor(\"Kafka \" + kafkaClient.toString() + \" client received messages\", Constants.GLOBAL_CLIENTS_POLL, Constants.GLOBAL_TIMEOUT,\n-            () -> {\n-                int receivedMessages = 0;\n-                try {\n-                    receivedMessages = kafkaClient.receiveMessagesTls(Constants.GLOBAL_CLIENTS_TIMEOUT);\n-                    return receivedMessages == exceptedMessages;\n-                } catch (Exception e) {\n-                    LOGGER.warn(\"Client not received excepted messages {}, instead received only {}!\", exceptedMessages, receivedMessages);\n-                    return false;\n-                }\n-            });\n+    public static void waitUntilClientReceivedMessagesTls(KafkaClientOperations kafkaClient, int exceptedMessages) throws Throwable {\n+        int receivedMessages;\n+        int tries = 3;\n+\n+        for (; tries > 0; tries--) {\n+            receivedMessages = kafkaClient.receiveMessagesTls(Constants.GLOBAL_CLIENTS_TIMEOUT);\n+\n+            if (receivedMessages == exceptedMessages) {\n+                LOGGER.info(\"Consumer successfully consumed {} messages\", exceptedMessages);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f3cac0db5ff0de9e470c3e7c43f54b40bd2d459"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91efa8a7992e07f9ceb151ff9cde71f929a66f98", "author": {"user": {"login": "im-konge", "name": "Luk\u00e1\u0161 Kr\u00e1l"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/91efa8a7992e07f9ceb151ff9cde71f929a66f98", "committedDate": "2020-05-07T13:50:42Z", "message": "comments\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3NTM4MDM3", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2975#pullrequestreview-407538037", "createdAt": "2020-05-07T14:37:30Z", "commit": {"oid": "91efa8a7992e07f9ceb151ff9cde71f929a66f98"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4MDQ0Nzc0", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2975#pullrequestreview-408044774", "createdAt": "2020-05-08T07:10:56Z", "commit": {"oid": "91efa8a7992e07f9ceb151ff9cde71f929a66f98"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4MDQ4MTQx", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2975#pullrequestreview-408048141", "createdAt": "2020-05-08T07:17:50Z", "commit": {"oid": "91efa8a7992e07f9ceb151ff9cde71f929a66f98"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1658, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}