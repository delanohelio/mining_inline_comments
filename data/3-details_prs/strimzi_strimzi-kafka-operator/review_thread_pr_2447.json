{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2NDAwNjcy", "number": 2447, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNDo0Njo0MVrODagiZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNDo0Nzo0NlrODagjug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MTIyNjYzOnYy", "diffSide": "RIGHT", "path": "systemtest/src/test/java/io/strimzi/systemtest/CustomResourceStatusST.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNDo0Njo0MVrOFhf7VQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNTowNzo1NlrOFhgnsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY3MDQyMQ==", "bodyText": "Are you saying that the NotReady has a NullPointerException as its reason? If so we should fix that.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2447#discussion_r370670421", "createdAt": "2020-01-24T14:46:41Z", "author": {"login": "tombentley"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/CustomResourceStatusST.java", "diffHunk": "@@ -250,6 +253,20 @@ void testKafkaConnectS2IStatus() throws InterruptedException {\n         assertKafkaConnectS2IStatus(3, connectS2IUrl, connectS2IDeploymentConfigName);\n     }\n \n+    @Test\n+    void testKafkaConnectorWithoutClusterConfig() {\n+        // This test check NPE when connect cluster is not specified in labels", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93ffc60f97b7f6d0eb3f4e3caf775a38bdc8472a"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY4MTc3Nw==", "bodyText": "No, it was already fixed and this test just check, that no NPE is in log during this test case.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2447#discussion_r370681777", "createdAt": "2020-01-24T15:07:56Z", "author": {"login": "Frawless"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/CustomResourceStatusST.java", "diffHunk": "@@ -250,6 +253,20 @@ void testKafkaConnectS2IStatus() throws InterruptedException {\n         assertKafkaConnectS2IStatus(3, connectS2IUrl, connectS2IDeploymentConfigName);\n     }\n \n+    @Test\n+    void testKafkaConnectorWithoutClusterConfig() {\n+        // This test check NPE when connect cluster is not specified in labels", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY3MDQyMQ=="}, "originalCommit": {"oid": "93ffc60f97b7f6d0eb3f4e3caf775a38bdc8472a"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MTIyOTc1OnYy", "diffSide": "RIGHT", "path": "systemtest/src/test/java/io/strimzi/systemtest/CustomResourceStatusST.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNDo0Nzo0MFrOFhf9Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNDo0Nzo0MFrOFhf9Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY3MDkyNg==", "bodyText": "We should reuse the checkConnectorInStatus().", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2447#discussion_r370670926", "createdAt": "2020-01-24T14:47:40Z", "author": {"login": "tombentley"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/CustomResourceStatusST.java", "diffHunk": "@@ -416,13 +433,31 @@ void assertKafkaConnectStatus(long expectedObservedGeneration, String expectedUr\n         KafkaConnectStatus kafkaConnectStatus = KafkaConnectResource.kafkaConnectClient().inNamespace(NAMESPACE).withName(CLUSTER_NAME).get().getStatus();\n         assertThat(\"Kafka Connect cluster status has incorrect Observed Generation\", kafkaConnectStatus.getObservedGeneration(), is(expectedObservedGeneration));\n         assertThat(\"Kafka Connect cluster status has incorrect URL\", kafkaConnectStatus.getUrl(), is(expectedUrl));\n+\n+        List<ConnectorPlugin> pluginsList = kafkaConnectStatus.getConnectorPlugins();\n+        assertThat(pluginsList, notNullValue());\n+        List<String> pluginsClasses = pluginsList.stream().map(p -> p.getConnectorClass()).collect(Collectors.toList());\n+        assertThat(pluginsClasses, hasItems(\"org.apache.kafka.connect.file.FileStreamSinkConnector\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93ffc60f97b7f6d0eb3f4e3caf775a38bdc8472a"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MTIzMDAyOnYy", "diffSide": "RIGHT", "path": "systemtest/src/test/java/io/strimzi/systemtest/CustomResourceStatusST.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNDo0Nzo0N1rOFhf9gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNDo0Nzo0N1rOFhf9gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY3MDk3OQ==", "bodyText": "We should reuse the checkConnectorInStatus().", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2447#discussion_r370670979", "createdAt": "2020-01-24T14:47:47Z", "author": {"login": "tombentley"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/CustomResourceStatusST.java", "diffHunk": "@@ -416,13 +433,31 @@ void assertKafkaConnectStatus(long expectedObservedGeneration, String expectedUr\n         KafkaConnectStatus kafkaConnectStatus = KafkaConnectResource.kafkaConnectClient().inNamespace(NAMESPACE).withName(CLUSTER_NAME).get().getStatus();\n         assertThat(\"Kafka Connect cluster status has incorrect Observed Generation\", kafkaConnectStatus.getObservedGeneration(), is(expectedObservedGeneration));\n         assertThat(\"Kafka Connect cluster status has incorrect URL\", kafkaConnectStatus.getUrl(), is(expectedUrl));\n+\n+        List<ConnectorPlugin> pluginsList = kafkaConnectStatus.getConnectorPlugins();\n+        assertThat(pluginsList, notNullValue());\n+        List<String> pluginsClasses = pluginsList.stream().map(p -> p.getConnectorClass()).collect(Collectors.toList());\n+        assertThat(pluginsClasses, hasItems(\"org.apache.kafka.connect.file.FileStreamSinkConnector\",\n+                \"org.apache.kafka.connect.file.FileStreamSourceConnector\",\n+                \"org.apache.kafka.connect.mirror.MirrorCheckpointConnector\",\n+                \"org.apache.kafka.connect.mirror.MirrorHeartbeatConnector\",\n+                \"org.apache.kafka.connect.mirror.MirrorSourceConnector\"));\n     }\n \n     void assertKafkaConnectS2IStatus(long expectedObservedGeneration, String expectedUrl, String expectedConfigName) {\n         KafkaConnectS2Istatus kafkaConnectS2IStatus = KafkaConnectS2IResource.kafkaConnectS2IClient().inNamespace(NAMESPACE).withName(CONNECTS2I_CLUSTER_NAME).get().getStatus();\n         assertThat(\"Kafka ConnectS2I cluster status has incorrect Observed Generation\", kafkaConnectS2IStatus.getObservedGeneration(), is(expectedObservedGeneration));\n         assertThat(\"Kafka ConnectS2I cluster status has incorrect URL\", kafkaConnectS2IStatus.getUrl(), is(expectedUrl));\n         assertThat(\"Kafka ConnectS2I cluster status has incorrect BuildConfigName\", kafkaConnectS2IStatus.getBuildConfigName(), is(expectedConfigName));\n+\n+        List<ConnectorPlugin> pluginsList = kafkaConnectS2IStatus.getConnectorPlugins();\n+        assertThat(pluginsList, notNullValue());\n+        List<String> pluginsClasses = pluginsList.stream().map(p -> p.getConnectorClass()).collect(Collectors.toList());\n+        assertThat(pluginsClasses, hasItems(\"org.apache.kafka.connect.file.FileStreamSinkConnector\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93ffc60f97b7f6d0eb3f4e3caf775a38bdc8472a"}, "originalPosition": 67}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 660, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}