{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4OTM1NjMw", "number": 3414, "title": "Small typos & test CC for extra perf options", "bodyText": "Type of change\n\nEnhancement / new feature / Tests\n\nDescription\nAdded checks for extra tuning options for CC rebalance.\nconcurrent_partition_movements_per_broker,\nconcurrent_intra_partition_movements,\nconcurrent_leader_movements,\nreplication_throttle\nChecklist\nPlease go through this checklist and make sure all applicable tasks have been done\n\n Write tests\n Make sure all tests pass\n Update documentation", "createdAt": "2020-07-30T07:35:57Z", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3414", "merged": true, "mergeCommit": {"oid": "3594bda8898f7955dceb18c150dc3675982a4a01"}, "closed": true, "closedAt": "2020-08-17T20:23:19Z", "author": {"login": "michalxo"}, "timelineItems": {"totalCount": 47, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc59HWQABqjM2MDMxODE3OTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc_4W4LgFqTQ2ODgwNjYxOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d1b3c8565a61d26269890cf957011b41c0462bc1", "author": {"user": {"login": "michalxo", "name": "Michal T"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/d1b3c8565a61d26269890cf957011b41c0462bc1", "committedDate": "2020-07-30T07:24:51Z", "message": "NEW(Tests) Added checks for CC perf tuning opts\n\nSigned-off-by: Michal T\u00f3th <mtoth@redhat.com>"}, "afterCommit": {"oid": "edc64a3c2836050e8cd34400f0a9024ff6266851", "author": {"user": {"login": "michalxo", "name": "Michal T"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/edc64a3c2836050e8cd34400f0a9024ff6266851", "committedDate": "2020-07-30T10:31:38Z", "message": "NEW(Tests) Added checks for CC perf tuning opts\n\nSigned-off-by: Michal T\u00f3th <mtoth@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4Mjg1MTU4", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3414#pullrequestreview-458285158", "createdAt": "2020-07-30T10:39:50Z", "commit": {"oid": "edc64a3c2836050e8cd34400f0a9024ff6266851"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMDozOTo1MVrOG5dsIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMDozOTo1MVrOG5dsIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjkwODQ0OQ==", "bodyText": "You can iterate over the created enum.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3414#discussion_r462908449", "createdAt": "2020-07-30T10:39:51Z", "author": {"login": "see-quick"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/cruisecontrol/CruiseControlConfigurationST.java", "diffHunk": "@@ -225,6 +227,75 @@ void testConfigurationFileIsCreated() {\n \n         assertThat(cruiseControlConfigurationFileContent, not(nullValue()));\n     }\n+\n+    @Order(6)\n+    @Test\n+    void testConfigurationPerformanceOptions() throws IOException {\n+        Container cruiseControlContainer = null;\n+        EnvVar cruiseControlConfiguration = null;\n+\n+        Map<String, String> kafkaSnapShot = StatefulSetUtils.ssSnapshot(KafkaResources.kafkaStatefulSetName(CLUSTER_NAME));\n+        Map<String, String> cruiseControlSnapShot = DeploymentUtils.depSnapshot(CruiseControlResources.deploymentName(CLUSTER_NAME));\n+\n+        KafkaResource.replaceKafkaResource(CLUSTER_NAME, kafka -> {\n+\n+            LOGGER.info(\"Changing cruise control performance tuning options\");\n+\n+            CruiseControlSpec cruiseControl = new CruiseControlSpecBuilder()\n+                    .addToConfig(CruiseControlServerParameters.CONCURRENT_INTRA_PARTITION_MOVEMENTS.getName(),\n+                            CruiseControlServerParameters.CONCURRENT_INTRA_PARTITION_MOVEMENTS.getDefaultValue())\n+                    .addToConfig(CruiseControlServerParameters.CONCURRENT_PARTITION_MOVEMENTS.getName(),\n+                            CruiseControlServerParameters.CONCURRENT_PARTITION_MOVEMENTS.getDefaultValue())\n+                    .addToConfig(CruiseControlServerParameters.CONCURRENT_LEADER_MOVEMENTS.getName(),\n+                            CruiseControlServerParameters.CONCURRENT_LEADER_MOVEMENTS.getDefaultValue())\n+                    .addToConfig(CruiseControlServerParameters.REPLICATION_THROTTLE.getName(),\n+                            CruiseControlServerParameters.REPLICATION_THROTTLE.getDefaultValue())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edc64a3c2836050e8cd34400f0a9024ff6266851"}, "originalPosition": 64}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4Mjg3NTEy", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3414#pullrequestreview-458287512", "createdAt": "2020-07-30T10:43:51Z", "commit": {"oid": "edc64a3c2836050e8cd34400f0a9024ff6266851"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "edc64a3c2836050e8cd34400f0a9024ff6266851", "author": {"user": {"login": "michalxo", "name": "Michal T"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/edc64a3c2836050e8cd34400f0a9024ff6266851", "committedDate": "2020-07-30T10:31:38Z", "message": "NEW(Tests) Added checks for CC perf tuning opts\n\nSigned-off-by: Michal T\u00f3th <mtoth@redhat.com>"}, "afterCommit": {"oid": "28b41ec01f34ba691813f46b9f9c8dd9d5a40f12", "author": {"user": {"login": "michalxo", "name": "Michal T"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/28b41ec01f34ba691813f46b9f9c8dd9d5a40f12", "committedDate": "2020-07-30T11:05:12Z", "message": "NEW(Tests) Added test for CruiseControl perf tuning opts\n\nSigned-off-by: Michal T\u00f3th <mtoth@redhat.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "28b41ec01f34ba691813f46b9f9c8dd9d5a40f12", "author": {"user": {"login": "michalxo", "name": "Michal T"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/28b41ec01f34ba691813f46b9f9c8dd9d5a40f12", "committedDate": "2020-07-30T11:05:12Z", "message": "NEW(Tests) Added test for CruiseControl perf tuning opts\n\nSigned-off-by: Michal T\u00f3th <mtoth@redhat.com>"}, "afterCommit": {"oid": "f5b5a17cd617cd38c7dccec58e878bb4941f380b", "author": {"user": {"login": "michalxo", "name": "Michal T"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/f5b5a17cd617cd38c7dccec58e878bb4941f380b", "committedDate": "2020-07-30T11:21:12Z", "message": "NEW(Tests) Added test for CruiseControl perf tuning opts\n\nSigned-off-by: Michal T\u00f3th <mtoth@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4NjU3NDgw", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3414#pullrequestreview-458657480", "createdAt": "2020-07-30T18:34:29Z", "commit": {"oid": "f5b5a17cd617cd38c7dccec58e878bb4941f380b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxODozNDozMFrOG5vGTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxODozNDozMFrOG5vGTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE5MzY3OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                CruiseControlServerParameters(String name, Object defaulValue) {\n          \n          \n            \n                CruiseControlServerParameters(String name, Object defaultValue) {", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3414#discussion_r463193679", "createdAt": "2020-07-30T18:34:30Z", "author": {"login": "samuel-hawker"}, "path": "operator-common/src/main/java/io/strimzi/operator/cluster/operator/resource/cruisecontrol/CruiseControlServerParameters.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package io.strimzi.operator.cluster.operator.resource.cruisecontrol;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+public enum CruiseControlServerParameters {\n+\n+    CONCURRENT_PARTITION_MOVEMENTS(\"num.concurrent.partition.movements.per.broker\", 5),\n+    CONCURRENT_INTRA_PARTITION_MOVEMENTS(\"num.concurrent.intra.broker.partition.movements\", 2),\n+    CONCURRENT_LEADER_MOVEMENTS(\"num.concurrent.leader.movements\", 1000),\n+    REPLICATION_THROTTLE(\"default.replication.throttle\", -1),\n+    BROKER_METRICS_WINDOWS(\"num.broker.metrics.windows\", \"20\"),\n+    BROKER_METRICS_WINDOW_MS(\"broker.metrics.window.ms\", Integer.toString(300_000)),\n+    PARTITION_METRICS_WINDOWS(\"num.partition.metrics.windows\", \"1\"),\n+    PARTITION_METRICS_WINDOW_MS(\"partition.metrics.window.ms\", Integer.toString(300_000)),\n+    COMPLETED_USER_TASK_RETENTION_MS(\"completed.user.task.retention.time.ms\", Long.toString(TimeUnit.DAYS.toMillis(1))),\n+    // TODO io/strimzi/operator/cluster/model/CruiseControlConfiguration.java:101\n+    GOALS(\"goals\", xxx),\n+    DEFAULT_GOALS(\"default.goals\", XXX);\n+\n+    private final String name;\n+    private final Object defaultValue;\n+\n+    CruiseControlServerParameters(String name, Object defaulValue) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5b5a17cd617cd38c7dccec58e878bb4941f380b"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwNjk4NDkz", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3414#pullrequestreview-460698493", "createdAt": "2020-08-04T10:42:53Z", "commit": {"oid": "a34ac589a24e0f7b263c389e243e7c45361d8d37"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "61a98ead405c91d803c6a555e9074cdec0d0a7a2", "author": {"user": {"login": "michalxo", "name": "Michal T"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/61a98ead405c91d803c6a555e9074cdec0d0a7a2", "committedDate": "2020-08-04T10:57:38Z", "message": "Merge branch 'master' into mt_typo"}, "afterCommit": {"oid": "34d188f315eed21feb6e22158b9b2b929b78f6e9", "author": {"user": {"login": "michalxo", "name": "Michal T"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/34d188f315eed21feb6e22158b9b2b929b78f6e9", "committedDate": "2020-08-04T11:04:01Z", "message": "fixup! NEW(Tests) Added test for CruiseControl perf tuning opts\n\nSigned-off-by: Michal T\u00f3th <mtoth@redhat.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d5f04591f147c283ada967b9218beeec6da37b2f", "author": {"user": {"login": "michalxo", "name": "Michal T"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/d5f04591f147c283ada967b9218beeec6da37b2f", "committedDate": "2020-08-04T11:23:28Z", "message": "fixup! fixup! NEW(Tests) Added test for CruiseControl perf tuning opts"}, "afterCommit": {"oid": "83cdcfd109e2bd2cc2ca6371fa5085ee95e0bc11", "author": {"user": {"login": "michalxo", "name": "Michal T"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/83cdcfd109e2bd2cc2ca6371fa5085ee95e0bc11", "committedDate": "2020-08-04T11:23:58Z", "message": "fixup! fixup! NEW(Tests) Added test for CruiseControl perf tuning opts\n\nSigned-off-by: Michal T\u00f3th <mtoth@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMjAxNjA4", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3414#pullrequestreview-461201608", "createdAt": "2020-08-04T21:55:14Z", "commit": {"oid": "83cdcfd109e2bd2cc2ca6371fa5085ee95e0bc11"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMTo1NToxNFrOG7y2vQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMTo1NToxNFrOG7y2vQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM1MjM4MQ==", "bodyText": "Because you're not using assertThat I think this doesn't error if it doesnt match. I also recommend you static import the matches to reduce the length of the line.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3414#discussion_r465352381", "createdAt": "2020-08-04T21:55:14Z", "author": {"login": "samuel-hawker"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/cruisecontrol/CruiseControlConfigurationST.java", "diffHunk": "@@ -225,6 +237,81 @@ void testConfigurationFileIsCreated() {\n \n         assertThat(cruiseControlConfigurationFileContent, not(nullValue()));\n     }\n+\n+    @Order(6)\n+    @Test\n+    void testConfigurationPerformanceOptions() throws IOException {\n+        Container cruiseControlContainer = null;\n+        EnvVar cruiseControlConfiguration = null;\n+\n+        Map<String, String> kafkaSnapShot = StatefulSetUtils.ssSnapshot(KafkaResources.kafkaStatefulSetName(CLUSTER_NAME));\n+        Map<String, String> cruiseControlSnapShot = DeploymentUtils.depSnapshot(CruiseControlResources.deploymentName(CLUSTER_NAME));\n+\n+        KafkaResource.replaceKafkaResource(CLUSTER_NAME, kafka -> {\n+\n+            LOGGER.info(\"Changing cruise control performance tuning options\");\n+\n+            CruiseControlSpec cruiseControl = new CruiseControlSpecBuilder()\n+                    .addToConfig(CruiseControlServerParameters.CONCURRENT_INTRA_PARTITION_MOVEMENTS.getName(),\n+                            CruiseControlServerParameters.CONCURRENT_INTRA_PARTITION_MOVEMENTS.getDefaultValue())\n+                    .addToConfig(CruiseControlServerParameters.CONCURRENT_PARTITION_MOVEMENTS.getName(),\n+                            CruiseControlServerParameters.CONCURRENT_PARTITION_MOVEMENTS.getDefaultValue())\n+                    .addToConfig(CruiseControlServerParameters.CONCURRENT_LEADER_MOVEMENTS.getName(),\n+                            CruiseControlServerParameters.CONCURRENT_LEADER_MOVEMENTS.getDefaultValue())\n+                    .addToConfig(CruiseControlServerParameters.REPLICATION_THROTTLE.getName(),\n+                            CruiseControlServerParameters.REPLICATION_THROTTLE.getDefaultValue())\n+                .build();\n+\n+            kafka.getSpec().setCruiseControl(cruiseControl);\n+        });\n+\n+        LOGGER.info(\"Verifying that CC pod is rolling, after changing options\");\n+        DeploymentUtils.waitTillDepHasRolled(CruiseControlResources.deploymentName(CLUSTER_NAME), 1, cruiseControlSnapShot);\n+\n+        LOGGER.info(\"Verifying that Kafka pods did not roll\");\n+        StatefulSetUtils.waitForNoRollingUpdate(KafkaResources.kafkaStatefulSetName(CLUSTER_NAME), kafkaSnapShot);\n+\n+        LOGGER.info(\"Verifying new configuration in the Kafka CR\");\n+        Pod cruiseControlPod = kubeClient().listPodsByPrefixInName(CRUISE_CONTROL_POD_PREFIX).get(0);\n+        String cruiseControlPodName = cruiseControlPod.getMetadata().getName();\n+\n+        // Get CruiseControl resource properties\n+        for (Container container : cruiseControlPod.getSpec().getContainers()) {\n+            if (container.getName().equals(\"cruise-control\")) {\n+                cruiseControlContainer = container;\n+            }\n+        }\n+        for (EnvVar envVar : Objects.requireNonNull(cruiseControlContainer).getEnv()) {\n+            if (envVar.getName().equals(\"CRUISE_CONTROL_CONFIGURATION\")) {\n+                cruiseControlConfiguration = envVar;\n+            }\n+        }\n+        InputStream configurationContainerStream = new ByteArrayInputStream(Objects.requireNonNull(cruiseControlConfiguration).getValue().getBytes(StandardCharsets.UTF_8));\n+        Properties containerConfiguration = new Properties();\n+        containerConfiguration.load(configurationContainerStream);\n+\n+        String configurationFileContent = cmdKubeClient().execInPod(cruiseControlPodName, \"/bin/bash\", \"-c\", \"cat \" + CRUISE_CONTROL_CONFIGURATION_FILE_PATH).out();\n+        InputStream configurationFileStream = new ByteArrayInputStream(configurationFileContent.getBytes(StandardCharsets.UTF_8));\n+        Properties fileConfiguration = new Properties();\n+        fileConfiguration.load(configurationFileStream);\n+\n+        LOGGER.info(\"Verifying Cruise control performance options are set in Kafka CR\");\n+        List<String> checkCCProperties = Arrays.asList(\n+                CruiseControlServerParameters.CONCURRENT_INTRA_PARTITION_MOVEMENTS.getName(),\n+                CruiseControlServerParameters.CONCURRENT_PARTITION_MOVEMENTS.getName(),\n+                CruiseControlServerParameters.CONCURRENT_LEADER_MOVEMENTS.getName(),\n+                CruiseControlServerParameters.REPLICATION_THROTTLE.getName()\n+        );\n+\n+        LOGGER.info(\"Verifying Cruise control configuration keys changes\");\n+        IsIterableContainingInAnyOrder.containsInAnyOrder(containerConfiguration.stringPropertyNames(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83cdcfd109e2bd2cc2ca6371fa5085ee95e0bc11"}, "originalPosition": 133}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "83cdcfd109e2bd2cc2ca6371fa5085ee95e0bc11", "author": {"user": {"login": "michalxo", "name": "Michal T"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/83cdcfd109e2bd2cc2ca6371fa5085ee95e0bc11", "committedDate": "2020-08-04T11:23:58Z", "message": "fixup! fixup! NEW(Tests) Added test for CruiseControl perf tuning opts\n\nSigned-off-by: Michal T\u00f3th <mtoth@redhat.com>"}, "afterCommit": {"oid": "40ffc3e6ba6c520bd79873cf3c33b9a3212fd705", "author": {"user": {"login": "michalxo", "name": "Michal T"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/40ffc3e6ba6c520bd79873cf3c33b9a3212fd705", "committedDate": "2020-08-05T10:11:43Z", "message": "fixup! fixup! NEW(Tests) Added test for CruiseControl perf tuning opts\n\nSigned-off-by: Michal T\u00f3th <mtoth@redhat.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "40ffc3e6ba6c520bd79873cf3c33b9a3212fd705", "author": {"user": {"login": "michalxo", "name": "Michal T"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/40ffc3e6ba6c520bd79873cf3c33b9a3212fd705", "committedDate": "2020-08-05T10:11:43Z", "message": "fixup! fixup! NEW(Tests) Added test for CruiseControl perf tuning opts\n\nSigned-off-by: Michal T\u00f3th <mtoth@redhat.com>"}, "afterCommit": {"oid": "07c649a34868b8f9e489564b54637698601455dc", "author": {"user": {"login": "michalxo", "name": "Michal T"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/07c649a34868b8f9e489564b54637698601455dc", "committedDate": "2020-08-05T10:15:24Z", "message": "fixup! fixup! NEW(Tests) Added test for CruiseControl perf tuning opts\n\nSigned-off-by: Michal T\u00f3th <mtoth@redhat.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "07c649a34868b8f9e489564b54637698601455dc", "author": {"user": {"login": "michalxo", "name": "Michal T"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/07c649a34868b8f9e489564b54637698601455dc", "committedDate": "2020-08-05T10:15:24Z", "message": "fixup! fixup! NEW(Tests) Added test for CruiseControl perf tuning opts\n\nSigned-off-by: Michal T\u00f3th <mtoth@redhat.com>"}, "afterCommit": {"oid": "f8f912b6b424aa080ecb25810795104b10b27538", "author": {"user": {"login": "michalxo", "name": "Michal T"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/f8f912b6b424aa080ecb25810795104b10b27538", "committedDate": "2020-08-05T10:20:26Z", "message": "fixup! fixup! NEW(Tests) Added test for CruiseControl perf tuning opts\n\nSigned-off-by: Michal T\u00f3th <mtoth@redhat.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f8f912b6b424aa080ecb25810795104b10b27538", "author": {"user": {"login": "michalxo", "name": "Michal T"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/f8f912b6b424aa080ecb25810795104b10b27538", "committedDate": "2020-08-05T10:20:26Z", "message": "fixup! fixup! NEW(Tests) Added test for CruiseControl perf tuning opts\n\nSigned-off-by: Michal T\u00f3th <mtoth@redhat.com>"}, "afterCommit": {"oid": "cb85a173aaa290cef2abb7d3a6f7ce33610762d4", "author": {"user": {"login": "michalxo", "name": "Michal T"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/cb85a173aaa290cef2abb7d3a6f7ce33610762d4", "committedDate": "2020-08-05T10:25:19Z", "message": "fixup! fixup! NEW(Tests) Added test for CruiseControl perf tuning opts\n\nSigned-off-by: Michal T\u00f3th <mtoth@redhat.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cb85a173aaa290cef2abb7d3a6f7ce33610762d4", "author": {"user": {"login": "michalxo", "name": "Michal T"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/cb85a173aaa290cef2abb7d3a6f7ce33610762d4", "committedDate": "2020-08-05T10:25:19Z", "message": "fixup! fixup! NEW(Tests) Added test for CruiseControl perf tuning opts\n\nSigned-off-by: Michal T\u00f3th <mtoth@redhat.com>"}, "afterCommit": {"oid": "a43c806e68e665273b7c468aad5f140f6cc13ea7", "author": {"user": {"login": "michalxo", "name": "Michal T"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/a43c806e68e665273b7c468aad5f140f6cc13ea7", "committedDate": "2020-08-05T10:50:07Z", "message": "fixup! fixup! NEW(Tests) Added test for CruiseControl perf tuning opts\n\nSigned-off-by: Michal T\u00f3th <mtoth@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzODA4NDQ4", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3414#pullrequestreview-463808448", "createdAt": "2020-08-08T15:07:18Z", "commit": {"oid": "a43c806e68e665273b7c468aad5f140f6cc13ea7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQxNTowNzoxOVrOG90UhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQxNTowNzoxOVrOG90UhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQ3MzU0MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    KafkaResource.replaceKafkaResource(CLUSTER_NAME, kafka -> {\n          \n          \n            \n            \n          \n          \n            \n                        LOGGER.info(\"Changing cruise control performance tuning options\");\n          \n          \n            \n            \n          \n          \n            \n                        CruiseControlSpec cruiseControl = new CruiseControlSpecBuilder()\n          \n          \n            \n                                .addToConfig(performanceTuningOpts).build();\n          \n          \n            \n            \n          \n          \n            \n                        kafka.getSpec().setCruiseControl(cruiseControl);\n          \n          \n            \n                    });\n          \n          \n            \n                    KafkaResource.replaceKafkaResource(CLUSTER_NAME, kafka -> {\n          \n          \n            \n                    \n          \n          \n            \n                        LOGGER.info(\"Changing cruise control performance tuning options\");\n          \n          \n            \n                        kafka = KafkaBuilder(kafka)\n          \n          \n            \n                            .editSpec()\n          \n          \n            \n                              .editCruiseControl()\n          \n          \n            \n                                .addToConfig(performanceTuningOpts)\n          \n          \n            \n                              .endCruiseControl()\n          \n          \n            \n                            .endSpec()\n          \n          \n            \n                            .build\n          \n          \n            \n                    });\n          \n      \n    \n    \n  \n\nI haven't ran this locally so unsure if it actually works, but this would be slightly more readable and guarantees the prior cruiseControl configuration is not lost (as we are not doing a replace but an edit)", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3414#discussion_r467473540", "createdAt": "2020-08-08T15:07:19Z", "author": {"login": "samuel-hawker"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/cruisecontrol/CruiseControlConfigurationST.java", "diffHunk": "@@ -226,6 +236,65 @@ void testConfigurationFileIsCreated() {\n \n         assertThat(cruiseControlConfigurationFileContent, not(nullValue()));\n     }\n+\n+    @Order(6)\n+    @Test\n+    void testConfigurationPerformanceOptions() throws IOException {\n+        Container cruiseControlContainer = null;\n+        EnvVar cruiseControlConfiguration = null;\n+\n+        Map<String, String> kafkaSnapShot = StatefulSetUtils.ssSnapshot(KafkaResources.kafkaStatefulSetName(CLUSTER_NAME));\n+        Map<String, String> cruiseControlSnapShot = DeploymentUtils.depSnapshot(CruiseControlResources.deploymentName(CLUSTER_NAME));\n+        Map<String, Object> performanceTuningOpts = new HashMap<String, Object>() {{\n+                put(CruiseControlServerParameters.CONCURRENT_INTRA_PARTITION_MOVEMENTS.getName(),\n+                    CruiseControlServerParameters.CONCURRENT_INTRA_PARTITION_MOVEMENTS.getDefaultValue());\n+                put(CruiseControlServerParameters.CONCURRENT_PARTITION_MOVEMENTS.getName(),\n+                    CruiseControlServerParameters.CONCURRENT_PARTITION_MOVEMENTS.getDefaultValue());\n+                put(CruiseControlServerParameters.CONCURRENT_LEADER_MOVEMENTS.getName(),\n+                    CruiseControlServerParameters.CONCURRENT_LEADER_MOVEMENTS.getDefaultValue());\n+                put(CruiseControlServerParameters.REPLICATION_THROTTLE.getName(),\n+                    CruiseControlServerParameters.REPLICATION_THROTTLE.getDefaultValue());\n+            }};\n+\n+        KafkaResource.replaceKafkaResource(CLUSTER_NAME, kafka -> {\n+\n+            LOGGER.info(\"Changing cruise control performance tuning options\");\n+\n+            CruiseControlSpec cruiseControl = new CruiseControlSpecBuilder()\n+                    .addToConfig(performanceTuningOpts).build();\n+\n+            kafka.getSpec().setCruiseControl(cruiseControl);\n+        });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a43c806e68e665273b7c468aad5f140f6cc13ea7"}, "originalPosition": 97}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzODA4NjE2", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3414#pullrequestreview-463808616", "createdAt": "2020-08-08T15:10:13Z", "commit": {"oid": "a43c806e68e665273b7c468aad5f140f6cc13ea7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQxNToxMDoxM1rOG90VzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQxNToxMDoxM1rOG90VzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQ3Mzg2OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    for (Container container : cruiseControlPod.getSpec().getContainers()) {\n          \n          \n            \n                        if (container.getName().equals(\"cruise-control\")) {\n          \n          \n            \n                            cruiseControlContainer = container;\n          \n          \n            \n                        }\n          \n          \n            \n                    }\n          \n          \n            \n                    cruiseControlContainer = cruiseControlPod.getSpec().getContainers().stream()\n          \n          \n            \n                      .filter(container -> container.getName().equals(CruiseControl.CRUISE_CONTROL_CONTAINER_NAME))\n          \n          \n            \n                      .findFirst().orElse(null)", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3414#discussion_r467473868", "createdAt": "2020-08-08T15:10:13Z", "author": {"login": "samuel-hawker"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/cruisecontrol/CruiseControlConfigurationST.java", "diffHunk": "@@ -226,6 +236,65 @@ void testConfigurationFileIsCreated() {\n \n         assertThat(cruiseControlConfigurationFileContent, not(nullValue()));\n     }\n+\n+    @Order(6)\n+    @Test\n+    void testConfigurationPerformanceOptions() throws IOException {\n+        Container cruiseControlContainer = null;\n+        EnvVar cruiseControlConfiguration = null;\n+\n+        Map<String, String> kafkaSnapShot = StatefulSetUtils.ssSnapshot(KafkaResources.kafkaStatefulSetName(CLUSTER_NAME));\n+        Map<String, String> cruiseControlSnapShot = DeploymentUtils.depSnapshot(CruiseControlResources.deploymentName(CLUSTER_NAME));\n+        Map<String, Object> performanceTuningOpts = new HashMap<String, Object>() {{\n+                put(CruiseControlServerParameters.CONCURRENT_INTRA_PARTITION_MOVEMENTS.getName(),\n+                    CruiseControlServerParameters.CONCURRENT_INTRA_PARTITION_MOVEMENTS.getDefaultValue());\n+                put(CruiseControlServerParameters.CONCURRENT_PARTITION_MOVEMENTS.getName(),\n+                    CruiseControlServerParameters.CONCURRENT_PARTITION_MOVEMENTS.getDefaultValue());\n+                put(CruiseControlServerParameters.CONCURRENT_LEADER_MOVEMENTS.getName(),\n+                    CruiseControlServerParameters.CONCURRENT_LEADER_MOVEMENTS.getDefaultValue());\n+                put(CruiseControlServerParameters.REPLICATION_THROTTLE.getName(),\n+                    CruiseControlServerParameters.REPLICATION_THROTTLE.getDefaultValue());\n+            }};\n+\n+        KafkaResource.replaceKafkaResource(CLUSTER_NAME, kafka -> {\n+\n+            LOGGER.info(\"Changing cruise control performance tuning options\");\n+\n+            CruiseControlSpec cruiseControl = new CruiseControlSpecBuilder()\n+                    .addToConfig(performanceTuningOpts).build();\n+\n+            kafka.getSpec().setCruiseControl(cruiseControl);\n+        });\n+\n+        LOGGER.info(\"Verifying that CC pod is rolling, after changing options\");\n+        DeploymentUtils.waitTillDepHasRolled(CruiseControlResources.deploymentName(CLUSTER_NAME), 1, cruiseControlSnapShot);\n+\n+        LOGGER.info(\"Verifying that Kafka pods did not roll\");\n+        StatefulSetUtils.waitForNoRollingUpdate(KafkaResources.kafkaStatefulSetName(CLUSTER_NAME), kafkaSnapShot);\n+\n+        LOGGER.info(\"Verifying new configuration in the Kafka CR\");\n+        Pod cruiseControlPod = kubeClient().listPodsByPrefixInName(CRUISE_CONTROL_POD_PREFIX).get(0);\n+\n+        // Get CruiseControl resource properties\n+        for (Container container : cruiseControlPod.getSpec().getContainers()) {\n+            if (container.getName().equals(\"cruise-control\")) {\n+                cruiseControlContainer = container;\n+            }\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a43c806e68e665273b7c468aad5f140f6cc13ea7"}, "originalPosition": 113}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzODA4NzE3", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3414#pullrequestreview-463808717", "createdAt": "2020-08-08T15:11:49Z", "commit": {"oid": "a43c806e68e665273b7c468aad5f140f6cc13ea7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQxNToxMTo1MFrOG90WYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQxNToxMTo1MFrOG90WYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQ3NDAxOQ==", "bodyText": "Use a similar filter here", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3414#discussion_r467474019", "createdAt": "2020-08-08T15:11:50Z", "author": {"login": "samuel-hawker"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/cruisecontrol/CruiseControlConfigurationST.java", "diffHunk": "@@ -226,6 +236,65 @@ void testConfigurationFileIsCreated() {\n \n         assertThat(cruiseControlConfigurationFileContent, not(nullValue()));\n     }\n+\n+    @Order(6)\n+    @Test\n+    void testConfigurationPerformanceOptions() throws IOException {\n+        Container cruiseControlContainer = null;\n+        EnvVar cruiseControlConfiguration = null;\n+\n+        Map<String, String> kafkaSnapShot = StatefulSetUtils.ssSnapshot(KafkaResources.kafkaStatefulSetName(CLUSTER_NAME));\n+        Map<String, String> cruiseControlSnapShot = DeploymentUtils.depSnapshot(CruiseControlResources.deploymentName(CLUSTER_NAME));\n+        Map<String, Object> performanceTuningOpts = new HashMap<String, Object>() {{\n+                put(CruiseControlServerParameters.CONCURRENT_INTRA_PARTITION_MOVEMENTS.getName(),\n+                    CruiseControlServerParameters.CONCURRENT_INTRA_PARTITION_MOVEMENTS.getDefaultValue());\n+                put(CruiseControlServerParameters.CONCURRENT_PARTITION_MOVEMENTS.getName(),\n+                    CruiseControlServerParameters.CONCURRENT_PARTITION_MOVEMENTS.getDefaultValue());\n+                put(CruiseControlServerParameters.CONCURRENT_LEADER_MOVEMENTS.getName(),\n+                    CruiseControlServerParameters.CONCURRENT_LEADER_MOVEMENTS.getDefaultValue());\n+                put(CruiseControlServerParameters.REPLICATION_THROTTLE.getName(),\n+                    CruiseControlServerParameters.REPLICATION_THROTTLE.getDefaultValue());\n+            }};\n+\n+        KafkaResource.replaceKafkaResource(CLUSTER_NAME, kafka -> {\n+\n+            LOGGER.info(\"Changing cruise control performance tuning options\");\n+\n+            CruiseControlSpec cruiseControl = new CruiseControlSpecBuilder()\n+                    .addToConfig(performanceTuningOpts).build();\n+\n+            kafka.getSpec().setCruiseControl(cruiseControl);\n+        });\n+\n+        LOGGER.info(\"Verifying that CC pod is rolling, after changing options\");\n+        DeploymentUtils.waitTillDepHasRolled(CruiseControlResources.deploymentName(CLUSTER_NAME), 1, cruiseControlSnapShot);\n+\n+        LOGGER.info(\"Verifying that Kafka pods did not roll\");\n+        StatefulSetUtils.waitForNoRollingUpdate(KafkaResources.kafkaStatefulSetName(CLUSTER_NAME), kafkaSnapShot);\n+\n+        LOGGER.info(\"Verifying new configuration in the Kafka CR\");\n+        Pod cruiseControlPod = kubeClient().listPodsByPrefixInName(CRUISE_CONTROL_POD_PREFIX).get(0);\n+\n+        // Get CruiseControl resource properties\n+        for (Container container : cruiseControlPod.getSpec().getContainers()) {\n+            if (container.getName().equals(\"cruise-control\")) {\n+                cruiseControlContainer = container;\n+            }\n+        }\n+        for (EnvVar envVar : Objects.requireNonNull(cruiseControlContainer).getEnv()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a43c806e68e665273b7c468aad5f140f6cc13ea7"}, "originalPosition": 114}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzODA4NzUw", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3414#pullrequestreview-463808750", "createdAt": "2020-08-08T15:12:24Z", "commit": {"oid": "a43c806e68e665273b7c468aad5f140f6cc13ea7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQxNToxMjoyNFrOG90WkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQxNToxMjoyNFrOG90WkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQ3NDA2NA==", "bodyText": "rm comment", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3414#discussion_r467474064", "createdAt": "2020-08-08T15:12:24Z", "author": {"login": "samuel-hawker"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/cruisecontrol/CruiseControlConfigurationST.java", "diffHunk": "@@ -226,6 +236,65 @@ void testConfigurationFileIsCreated() {\n \n         assertThat(cruiseControlConfigurationFileContent, not(nullValue()));\n     }\n+\n+    @Order(6)\n+    @Test\n+    void testConfigurationPerformanceOptions() throws IOException {\n+        Container cruiseControlContainer = null;\n+        EnvVar cruiseControlConfiguration = null;\n+\n+        Map<String, String> kafkaSnapShot = StatefulSetUtils.ssSnapshot(KafkaResources.kafkaStatefulSetName(CLUSTER_NAME));\n+        Map<String, String> cruiseControlSnapShot = DeploymentUtils.depSnapshot(CruiseControlResources.deploymentName(CLUSTER_NAME));\n+        Map<String, Object> performanceTuningOpts = new HashMap<String, Object>() {{\n+                put(CruiseControlServerParameters.CONCURRENT_INTRA_PARTITION_MOVEMENTS.getName(),\n+                    CruiseControlServerParameters.CONCURRENT_INTRA_PARTITION_MOVEMENTS.getDefaultValue());\n+                put(CruiseControlServerParameters.CONCURRENT_PARTITION_MOVEMENTS.getName(),\n+                    CruiseControlServerParameters.CONCURRENT_PARTITION_MOVEMENTS.getDefaultValue());\n+                put(CruiseControlServerParameters.CONCURRENT_LEADER_MOVEMENTS.getName(),\n+                    CruiseControlServerParameters.CONCURRENT_LEADER_MOVEMENTS.getDefaultValue());\n+                put(CruiseControlServerParameters.REPLICATION_THROTTLE.getName(),\n+                    CruiseControlServerParameters.REPLICATION_THROTTLE.getDefaultValue());\n+            }};\n+\n+        KafkaResource.replaceKafkaResource(CLUSTER_NAME, kafka -> {\n+\n+            LOGGER.info(\"Changing cruise control performance tuning options\");\n+\n+            CruiseControlSpec cruiseControl = new CruiseControlSpecBuilder()\n+                    .addToConfig(performanceTuningOpts).build();\n+\n+            kafka.getSpec().setCruiseControl(cruiseControl);\n+        });\n+\n+        LOGGER.info(\"Verifying that CC pod is rolling, after changing options\");\n+        DeploymentUtils.waitTillDepHasRolled(CruiseControlResources.deploymentName(CLUSTER_NAME), 1, cruiseControlSnapShot);\n+\n+        LOGGER.info(\"Verifying that Kafka pods did not roll\");\n+        StatefulSetUtils.waitForNoRollingUpdate(KafkaResources.kafkaStatefulSetName(CLUSTER_NAME), kafkaSnapShot);\n+\n+        LOGGER.info(\"Verifying new configuration in the Kafka CR\");\n+        Pod cruiseControlPod = kubeClient().listPodsByPrefixInName(CRUISE_CONTROL_POD_PREFIX).get(0);\n+\n+        // Get CruiseControl resource properties\n+        for (Container container : cruiseControlPod.getSpec().getContainers()) {\n+            if (container.getName().equals(\"cruise-control\")) {\n+                cruiseControlContainer = container;\n+            }\n+        }\n+        for (EnvVar envVar : Objects.requireNonNull(cruiseControlContainer).getEnv()) {\n+            if (envVar.getName().equals(\"CRUISE_CONTROL_CONFIGURATION\")) {\n+                cruiseControlConfiguration = envVar;\n+            }\n+        }\n+        InputStream configurationContainerStream = new ByteArrayInputStream(Objects.requireNonNull(cruiseControlConfiguration).getValue().getBytes(StandardCharsets.UTF_8));\n+        Properties containerConfiguration = new Properties();\n+        containerConfiguration.load(configurationContainerStream);\n+\n+        LOGGER.info(\"Verifying Cruise control performance options are set in Kafka CR\");\n+//        Map<String, String> tmpContainerConfigMap = Maps.fromProperties(containerConfiguration);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a43c806e68e665273b7c468aad5f140f6cc13ea7"}, "originalPosition": 124}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0MDMwODg3", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3414#pullrequestreview-464030887", "createdAt": "2020-08-10T08:13:26Z", "commit": {"oid": "a43c806e68e665273b7c468aad5f140f6cc13ea7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0MDc4Mzgy", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3414#pullrequestreview-464078382", "createdAt": "2020-08-10T09:28:03Z", "commit": {"oid": "a43c806e68e665273b7c468aad5f140f6cc13ea7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyODowM1rOG-HYAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyODowM1rOG-HYAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NTczMA==", "bodyText": "As we have a CruiseControlServerParameters enum and these values are server configs I think I would make sense to put move these to that enum so there is a single source of truth for these Keys. Otherwise we now have to manage these in two places?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3414#discussion_r467785730", "createdAt": "2020-08-10T09:28:03Z", "author": {"login": "tomncooper"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/CruiseControlConfiguration.java", "diffHunk": "@@ -79,6 +79,11 @@\n     public static final String CRUISE_CONTROL_HARD_GOALS_CONFIG_KEY = \"hard.goals\";\n     public static final String CRUISE_CONTROL_SELF_HEALING_CONFIG_KEY = \"self.healing.goals\";\n     public static final String CRUISE_CONTROL_ANOMALY_DETECTION_CONFIG_KEY = \"anomaly.detection.goals\";\n+    public static final String CRUISE_CONTROL_PARTITION_METRICS_WINDOW_MS_CONFIG_KEY = \"partition.metrics.window.ms\";\n+    public static final String CRUISE_CONTROL_PARTITION_METRICS_WINDOW_NUM_CONFIG_KEY = \"num.partition.metrics.windows\";\n+    public static final String CRUISE_CONTROL_BROKER_METRICS_WINDOW_MS_CONFIG_KEY = \"broker.metrics.window.ms\";\n+    public static final String CRUISE_CONTROL_BROKER_METRICS_WINDOW_NUM_CONFIG_KEY = \"num.broker.metrics.windows\";\n+    public static final String CRUISE_CONTROL_COMPLETED_USER_TASK_RETENTION_MS_CONFIG_KEY = \"completed.user.task.retention.time.ms\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a43c806e68e665273b7c468aad5f140f6cc13ea7"}, "originalPosition": 8}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a43c806e68e665273b7c468aad5f140f6cc13ea7", "author": {"user": {"login": "michalxo", "name": "Michal T"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/a43c806e68e665273b7c468aad5f140f6cc13ea7", "committedDate": "2020-08-05T10:50:07Z", "message": "fixup! fixup! NEW(Tests) Added test for CruiseControl perf tuning opts\n\nSigned-off-by: Michal T\u00f3th <mtoth@redhat.com>"}, "afterCommit": {"oid": "e0b1fa4aba531c715816a4d50d3d466f41d0d36b", "author": {"user": {"login": "michalxo", "name": "Michal T"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/e0b1fa4aba531c715816a4d50d3d466f41d0d36b", "committedDate": "2020-08-10T11:08:57Z", "message": "fixup! fixup! fixup! NEW(Tests) Added test for CruiseControl perf tuning opts"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e0b1fa4aba531c715816a4d50d3d466f41d0d36b", "author": {"user": {"login": "michalxo", "name": "Michal T"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/e0b1fa4aba531c715816a4d50d3d466f41d0d36b", "committedDate": "2020-08-10T11:08:57Z", "message": "fixup! fixup! fixup! NEW(Tests) Added test for CruiseControl perf tuning opts"}, "afterCommit": {"oid": "47505523fa86aa3a519a6f20af02cc3b299d7825", "author": {"user": {"login": "michalxo", "name": "Michal T"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/47505523fa86aa3a519a6f20af02cc3b299d7825", "committedDate": "2020-08-10T11:09:29Z", "message": "fixup! fixup! fixup! NEW(Tests) Added test for CruiseControl perf tuning opts\n\nSigned-off-by: Michal T\u00f3th <mtoth@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0MjEyMzc0", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3414#pullrequestreview-464212374", "createdAt": "2020-08-10T13:10:20Z", "commit": {"oid": "47505523fa86aa3a519a6f20af02cc3b299d7825"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMzoxMDoyMFrOG-Nz-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMzoxMDo1OFrOG-N1bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzg5MTE5NA==", "bodyText": "I am fine to move everything there.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3414#discussion_r467891194", "createdAt": "2020-08-10T13:10:20Z", "author": {"login": "ppatierno"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/CruiseControlConfiguration.java", "diffHunk": "@@ -79,6 +79,11 @@\n     public static final String CRUISE_CONTROL_HARD_GOALS_CONFIG_KEY = \"hard.goals\";\n     public static final String CRUISE_CONTROL_SELF_HEALING_CONFIG_KEY = \"self.healing.goals\";\n     public static final String CRUISE_CONTROL_ANOMALY_DETECTION_CONFIG_KEY = \"anomaly.detection.goals\";\n+    public static final String CRUISE_CONTROL_PARTITION_METRICS_WINDOW_MS_CONFIG_KEY = \"partition.metrics.window.ms\";\n+    public static final String CRUISE_CONTROL_PARTITION_METRICS_WINDOW_NUM_CONFIG_KEY = \"num.partition.metrics.windows\";\n+    public static final String CRUISE_CONTROL_BROKER_METRICS_WINDOW_MS_CONFIG_KEY = \"broker.metrics.window.ms\";\n+    public static final String CRUISE_CONTROL_BROKER_METRICS_WINDOW_NUM_CONFIG_KEY = \"num.broker.metrics.windows\";\n+    public static final String CRUISE_CONTROL_COMPLETED_USER_TASK_RETENTION_MS_CONFIG_KEY = \"completed.user.task.retention.time.ms\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NTczMA=="}, "originalCommit": {"oid": "a43c806e68e665273b7c468aad5f140f6cc13ea7"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzg5MTU2Nw==", "bodyText": "can we change in CruiseControlConfigurationParameters? wdyt @tomncooper ?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3414#discussion_r467891567", "createdAt": "2020-08-10T13:10:58Z", "author": {"login": "ppatierno"}, "path": "operator-common/src/main/java/io/strimzi/operator/cluster/operator/resource/cruisecontrol/CruiseControlServerParameters.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright Strimzi authors.\n+ * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n+ */\n+package io.strimzi.operator.cluster.operator.resource.cruisecontrol;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+public enum CruiseControlServerParameters {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47505523fa86aa3a519a6f20af02cc3b299d7825"}, "originalPosition": 9}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "43f69fe045ed57c9a23c8554220e77600c0e24b6", "author": {"user": {"login": "michalxo", "name": "Michal T"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/43f69fe045ed57c9a23c8554220e77600c0e24b6", "committedDate": "2020-08-10T14:46:15Z", "message": "REF(CC) Goals and Config options refactor\n\nSigned-off-by: Michal T\u00f3th <mtoth@redhat.com>"}, "afterCommit": {"oid": "d80ddfa65916412695d70673a693b475812b6941", "author": {"user": {"login": "michalxo", "name": "Michal T"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/d80ddfa65916412695d70673a693b475812b6941", "committedDate": "2020-08-10T14:50:52Z", "message": "REF(CC) Goals and Config options refactor\n\nSigned-off-by: Michal T\u00f3th <mtoth@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0MzE5OTQy", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3414#pullrequestreview-464319942", "createdAt": "2020-08-10T15:11:59Z", "commit": {"oid": "d80ddfa65916412695d70673a693b475812b6941"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNToxMjowMFrOG-S3DA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNToxMjowMFrOG-S3DA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk3MzkwMA==", "bodyText": "We could move the default goal list definitions into this class as well? WDYT @ppatierno?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3414#discussion_r467973900", "createdAt": "2020-08-10T15:12:00Z", "author": {"login": "tomncooper"}, "path": "operator-common/src/main/java/io/strimzi/operator/cluster/operator/resource/cruisecontrol/CruiseControlConfigurationParameters.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright Strimzi authors.\n+ * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n+ */\n+package io.strimzi.operator.cluster.operator.resource.cruisecontrol;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+public enum CruiseControlConfigurationParameters {\n+\n+    // 'goals' and 'default.goals' are currently not defined, due to unnecessary dependency pulling for now", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d80ddfa65916412695d70673a693b475812b6941"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0MzIxMzIx", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3414#pullrequestreview-464321321", "createdAt": "2020-08-10T15:13:37Z", "commit": {"oid": "d80ddfa65916412695d70673a693b475812b6941"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNToxMzozOFrOG-S7KQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNToxMzozOFrOG-S7KQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk3NDk1Mw==", "bodyText": "Even if you define the list in this class you can still move the key to the Enum and just leave the default value as null? We want to avoid having these config keys defined in two places.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3414#discussion_r467974953", "createdAt": "2020-08-10T15:13:38Z", "author": {"login": "tomncooper"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/CruiseControlConfiguration.java", "diffHunk": "@@ -79,7 +80,6 @@\n     public static final String CRUISE_CONTROL_HARD_GOALS_CONFIG_KEY = \"hard.goals\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d80ddfa65916412695d70673a693b475812b6941"}, "originalPosition": 88}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0MzIyMjE0", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3414#pullrequestreview-464322214", "createdAt": "2020-08-10T15:14:37Z", "commit": {"oid": "d80ddfa65916412695d70673a693b475812b6941"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNToxNDozN1rOG-S9sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNToxNDozN1rOG-S9sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk3NTYwMg==", "bodyText": "I would just call this CruiseControlGoals", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3414#discussion_r467975602", "createdAt": "2020-08-10T15:14:37Z", "author": {"login": "tomncooper"}, "path": "operator-common/src/main/java/io/strimzi/operator/cluster/operator/resource/cruisecontrol/CruiseControlConfigurationGoals.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright Strimzi authors.\n+ * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n+ */\n+package io.strimzi.operator.cluster.operator.resource.cruisecontrol;\n+\n+public enum CruiseControlConfigurationGoals {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d80ddfa65916412695d70673a693b475812b6941"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0NDEwNTUw", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3414#pullrequestreview-464410550", "createdAt": "2020-08-10T16:58:59Z", "commit": {"oid": "d80ddfa65916412695d70673a693b475812b6941"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "46c1a683c5f5aa982de5cb22be9431565cb796bc", "author": {"user": {"login": "michalxo", "name": "Michal T"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/46c1a683c5f5aa982de5cb22be9431565cb796bc", "committedDate": "2020-08-10T18:25:51Z", "message": "fixup! REF(CC) Goals and Config options refactor\n\nSigned-off-by: Michal T\u00f3th <mtoth@redhat.com>"}, "afterCommit": {"oid": "e19995248adb14d2d60c7bfdda2372c0ca6efe24", "author": {"user": {"login": "michalxo", "name": "Michal T"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/e19995248adb14d2d60c7bfdda2372c0ca6efe24", "committedDate": "2020-08-10T19:14:54Z", "message": "fixup! REF(CC) Goals and Config options refactor\n\nSigned-off-by: Michal T\u00f3th <mtoth@redhat.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "40aba52197bd431b80edb56d9f3c449f750c730c", "author": {"user": {"login": "michalxo", "name": "Michal T"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/40aba52197bd431b80edb56d9f3c449f750c730c", "committedDate": "2020-08-11T06:38:04Z", "message": "fixup! fixup! REF(CC) Goals and Config options refactor\n\nSigned-off-by: Michal T\u00f3th <mtoth@redhat.com>"}, "afterCommit": {"oid": "7277fdd09556792ce078d58003f6abeb27813404", "author": {"user": {"login": "michalxo", "name": "Michal T"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/7277fdd09556792ce078d58003f6abeb27813404", "committedDate": "2020-08-11T07:04:50Z", "message": "fixup! fixup! REF(CC) Goals and Config options refactor\n\nSigned-off-by: Michal T\u00f3th <mtoth@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "10a663ec5464763163edd08d15cad49d7a7c0d37", "author": {"user": {"login": "michalxo", "name": "Michal T"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/10a663ec5464763163edd08d15cad49d7a7c0d37", "committedDate": "2020-08-13T07:10:09Z", "message": "FIX(Typo) Minor typo in defaultClusterOperator\n\nSigned-off-by: Michal T\u00f3th <mtoth@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "589c4daa0af2830c2b23053800ecb7face78e312", "author": {"user": {"login": "michalxo", "name": "Michal T"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/589c4daa0af2830c2b23053800ecb7face78e312", "committedDate": "2020-08-13T07:10:09Z", "message": "NEW(Tests) Added test for CruiseControl perf tuning opts\n\nSigned-off-by: Michal T\u00f3th <mtoth@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28221fae9124fbde64ec0505ab78884b874ec397", "author": {"user": {"login": "michalxo", "name": "Michal T"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/28221fae9124fbde64ec0505ab78884b874ec397", "committedDate": "2020-08-13T07:10:09Z", "message": "fixup! NEW(Tests) Added test for CruiseControl perf tuning opts\n\nSigned-off-by: Michal T\u00f3th <mtoth@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41ca0e75ee80ef102fbb18ec205df7f53d203461", "author": {"user": {"login": "michalxo", "name": "Michal T"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/41ca0e75ee80ef102fbb18ec205df7f53d203461", "committedDate": "2020-08-13T07:10:09Z", "message": "fixup! fixup! NEW(Tests) Added test for CruiseControl perf tuning opts\n\nSigned-off-by: Michal T\u00f3th <mtoth@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6afdda5e322cb73b0b74a02d0118207e56c21fc2", "author": {"user": {"login": "michalxo", "name": "Michal T"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/6afdda5e322cb73b0b74a02d0118207e56c21fc2", "committedDate": "2020-08-13T07:10:09Z", "message": "fixup! fixup! fixup! NEW(Tests) Added test for CruiseControl perf tuning opts\n\nSigned-off-by: Michal T\u00f3th <mtoth@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b3c91bd2f2dc3bc435cd184fc2cc972da61107a1", "author": {"user": {"login": "michalxo", "name": "Michal T"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/b3c91bd2f2dc3bc435cd184fc2cc972da61107a1", "committedDate": "2020-08-13T07:10:09Z", "message": "REF(CC) Goals and Config options refactor\n\nSigned-off-by: Michal T\u00f3th <mtoth@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d3a1ff00ff896fc6a2253a536790052eb7072cd", "author": {"user": {"login": "michalxo", "name": "Michal T"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/9d3a1ff00ff896fc6a2253a536790052eb7072cd", "committedDate": "2020-08-13T07:10:09Z", "message": "fixup! REF(CC) Goals and Config options refactor\n\nSigned-off-by: Michal T\u00f3th <mtoth@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03def3c2f767e5145f9f29ef417f441a46c1c49e", "author": {"user": {"login": "michalxo", "name": "Michal T"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/03def3c2f767e5145f9f29ef417f441a46c1c49e", "committedDate": "2020-08-13T07:10:09Z", "message": "fixup! fixup! REF(CC) Goals and Config options refactor\n\nSigned-off-by: Michal T\u00f3th <mtoth@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c92b56995bd9a2ef6b3d664f446c960051f12fff", "author": {"user": {"login": "michalxo", "name": "Michal T"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/c92b56995bd9a2ef6b3d664f446c960051f12fff", "committedDate": "2020-08-13T07:58:22Z", "message": "fixup! fixup! fixup! REF(CC) Goals and Config options refactor\n\nSigned-off-by: Michal T\u00f3th <mtoth@redhat.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7277fdd09556792ce078d58003f6abeb27813404", "author": {"user": {"login": "michalxo", "name": "Michal T"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/7277fdd09556792ce078d58003f6abeb27813404", "committedDate": "2020-08-11T07:04:50Z", "message": "fixup! fixup! REF(CC) Goals and Config options refactor\n\nSigned-off-by: Michal T\u00f3th <mtoth@redhat.com>"}, "afterCommit": {"oid": "c92b56995bd9a2ef6b3d664f446c960051f12fff", "author": {"user": {"login": "michalxo", "name": "Michal T"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/c92b56995bd9a2ef6b3d664f446c960051f12fff", "committedDate": "2020-08-13T07:58:22Z", "message": "fixup! fixup! fixup! REF(CC) Goals and Config options refactor\n\nSigned-off-by: Michal T\u00f3th <mtoth@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2NjIzODk4", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3414#pullrequestreview-466623898", "createdAt": "2020-08-13T10:08:42Z", "commit": {"oid": "c92b56995bd9a2ef6b3d664f446c960051f12fff"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMDowODo0MlrOHAFAGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMDowODo0MlrOHAFAGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg0Mzk5Mw==", "bodyText": "I think the goals made sense as a separate enum, they are not really config parameter keys but rather values assigned to the keys. However, that might be being too picky.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3414#discussion_r469843993", "createdAt": "2020-08-13T10:08:42Z", "author": {"login": "tomncooper"}, "path": "operator-common/src/main/java/io/strimzi/operator/cluster/operator/resource/cruisecontrol/CruiseControlConfigurationParameters.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Copyright Strimzi authors.\n+ * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n+ */\n+package io.strimzi.operator.cluster.operator.resource.cruisecontrol;\n+\n+public enum CruiseControlConfigurationParameters {\n+\n+    CONCURRENT_PARTITION_MOVEMENTS(\"num.concurrent.partition.movements.per.broker\"),\n+    CONCURRENT_INTRA_PARTITION_MOVEMENTS(\"num.concurrent.intra.broker.partition.movements\"),\n+    CONCURRENT_LEADER_MOVEMENTS(\"num.concurrent.leader.movements\"),\n+    REPLICATION_THROTTLE(\"default.replication.throttle\"),\n+    BROKER_METRICS_WINDOWS(\"num.broker.metrics.windows\"),\n+    BROKER_METRICS_WINDOW_MS(\"broker.metrics.window.ms\"),\n+    PARTITION_METRICS_WINDOWS(\"num.partition.metrics.windows\"),\n+    PARTITION_METRICS_WINDOW_MS(\"partition.metrics.window.ms\"),\n+    COMPLETED_USER_TASK_RETENTION_MS(\"completed.user.task.retention.time.ms\"),\n+    CRUISE_CONTROL_PARTITION_METRICS_WINDOW_MS_CONFIG_KEY(\"partition.metrics.window.ms\"),\n+    CRUISE_CONTROL_PARTITION_METRICS_WINDOW_NUM_CONFIG_KEY(\"num.partition.metrics.windows\"),\n+    CRUISE_CONTROL_BROKER_METRICS_WINDOW_MS_CONFIG_KEY(\"broker.metrics.window.ms\"),\n+    CRUISE_CONTROL_BROKER_METRICS_WINDOW_NUM_CONFIG_KEY(\"num.broker.metrics.windows\"),\n+    CRUISE_CONTROL_COMPLETED_USER_TASK_RETENTION_MS_CONFIG_KEY(\"completed.user.task.retention.time.ms\"),\n+\n+    // Goals String lists\n+    CRUISE_CONTROL_GOALS_CONFIG_KEY(\"goals\"),\n+    CRUISE_CONTROL_DEFAULT_GOALS_CONFIG_KEY(\"default.goals\"),\n+    CRUISE_CONTROL_HARD_GOALS_CONFIG_KEY(\"hard.goals\"),\n+    CRUISE_CONTROL_SELF_HEALING_CONFIG_KEY(\"self.healing.goals\"),\n+    CRUISE_CONTROL_ANOMALY_DETECTION_CONFIG_KEY(\"anomaly.detection.goals\"),\n+\n+    RACK_AWARENESS_GOAL(\"com.linkedin.kafka.cruisecontrol.analyzer.goals.RackAwareGoal\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c92b56995bd9a2ef6b3d664f446c960051f12fff"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5cdc23585a7fe2cbe77a337c5abf8d5f4ab2dfb", "author": {"user": {"login": "michalxo", "name": "Michal T"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/b5cdc23585a7fe2cbe77a337c5abf8d5f4ab2dfb", "committedDate": "2020-08-17T06:43:00Z", "message": "fixup! fixup! fixup! fixup! REF(CC) Goals and Config options refactor\n\nSigned-off-by: Michal T\u00f3th <mtoth@redhat.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6a8bb41f22fd2de46338fa3cd82e6e0740ebd1ff", "author": {"user": {"login": "michalxo", "name": "Michal T"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/6a8bb41f22fd2de46338fa3cd82e6e0740ebd1ff", "committedDate": "2020-08-17T06:38:18Z", "message": "fixup! fixup! fixup! fixup! REF(CC) Goals and Config options refactor"}, "afterCommit": {"oid": "b5cdc23585a7fe2cbe77a337c5abf8d5f4ab2dfb", "author": {"user": {"login": "michalxo", "name": "Michal T"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/b5cdc23585a7fe2cbe77a337c5abf8d5f4ab2dfb", "committedDate": "2020-08-17T06:43:00Z", "message": "fixup! fixup! fixup! fixup! REF(CC) Goals and Config options refactor\n\nSigned-off-by: Michal T\u00f3th <mtoth@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4NTYzNzU1", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3414#pullrequestreview-468563755", "createdAt": "2020-08-17T15:24:55Z", "commit": {"oid": "b5cdc23585a7fe2cbe77a337c5abf8d5f4ab2dfb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4NTc3ODg1", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3414#pullrequestreview-468577885", "createdAt": "2020-08-17T15:41:25Z", "commit": {"oid": "b5cdc23585a7fe2cbe77a337c5abf8d5f4ab2dfb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4ODA2NjE4", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3414#pullrequestreview-468806618", "createdAt": "2020-08-17T20:22:59Z", "commit": {"oid": "b5cdc23585a7fe2cbe77a337c5abf8d5f4ab2dfb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1045, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}