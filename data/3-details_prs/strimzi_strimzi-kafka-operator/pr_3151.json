{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3NDM5NjI5", "number": 3151, "title": "[MO] - [keycloak] -> keycloak instance", "bodyText": "Signed-off-by: morsak xorsak02@stud.fit.vutbr.cz\nType of change\n\nEnhancement / new feature\n\nDescription\nThis PR adding the KeycloakResource and also KeycloakInstance, which basically wraps to one logical unit inside one class. Moreover, I have discovered that KeycloakOperator is not ready for usage because of the verification of the certificate between Kafka and Keycloak. The question is if we want to let this KeycloakResource for future usages or should I remove it and let that Deployment of the Keycloak.\nChecklist\n\n Write tests\n Make sure all tests pass", "createdAt": "2020-06-03T20:36:51Z", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3151", "merged": true, "mergeCommit": {"oid": "55b3711f4ec13b3ebddaee7780d11801e5b0ac38"}, "closed": true, "closedAt": "2020-08-21T15:43:46Z", "author": {"login": "see-quick"}, "timelineItems": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcn97eZABqjM0MDY4MDU2MTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdBFEruAH2gAyNDI3NDM5NjI5OmIzNWU1Y2UxZTQ1NTVmOTk0NmIzOGNjZjYzMDM4ZTNhNjZiY2E0ZGM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "14dd01e1e65920c2441f32c2bbb50b7caf373618", "author": {"user": {"login": "see-quick", "name": "Ors\u00e1k Maro\u0161"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/14dd01e1e65920c2441f32c2bbb50b7caf373618", "committedDate": "2020-06-03T20:35:47Z", "message": "[MO] - [keycloak] -> keycloak resource\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>"}, "afterCommit": {"oid": "c34aa6ebb98cec22eb8f3d0eb5d20315a93098e9", "author": {"user": {"login": "see-quick", "name": "Ors\u00e1k Maro\u0161"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/c34aa6ebb98cec22eb8f3d0eb5d20315a93098e9", "committedDate": "2020-06-04T13:17:59Z", "message": "[MO] - [kc instance + import] -> new\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MzQ3MDMx", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3151#pullrequestreview-428347031", "createdAt": "2020-06-10T19:03:29Z", "commit": {"oid": "75d729293b99077480db45dc3879dfcc8c55ace0"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxOTowMzoyOVrOGiCgZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxOTowNDoyOFrOGiCiPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM0NTgzMQ==", "bodyText": "What does this profile mean?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3151#discussion_r438345831", "createdAt": "2020-06-10T19:03:29Z", "author": {"login": "scholzj"}, "path": "systemtest/src/main/resources/keycloak/sso_instance.yaml", "diffHunk": "@@ -0,0 +1,13 @@\n+apiVersion: keycloak.org/v1alpha1\n+kind: Keycloak\n+metadata:\n+  name: example-keycloak\n+  labels:\n+    app: sso\n+spec:\n+  instances: 1\n+  extensions:\n+    - https://github.com/aerogear/keycloak-metrics-spi/releases/download/1.0.4/keycloak-metrics-spi-1.0.4.jar\n+  externalAccess:\n+    enabled: True\n+  profile: RHSSO", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75d729293b99077480db45dc3879dfcc8c55ace0"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM0NjMwMw==", "bodyText": "Why are we having some files locally and some files remotely? Wouldn't it be better to use just one?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3151#discussion_r438346303", "createdAt": "2020-06-10T19:04:28Z", "author": {"login": "scholzj"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/resources/KeycloakResource.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Copyright Strimzi authors.\n+ * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n+ */\n+package io.strimzi.systemtest.resources;\n+\n+import io.strimzi.systemtest.Constants;\n+import io.strimzi.systemtest.utils.FileUtils;\n+import io.strimzi.systemtest.utils.kubeUtils.controllers.DeploymentUtils;\n+import io.strimzi.systemtest.utils.kubeUtils.objects.PodUtils;\n+import io.strimzi.systemtest.utils.specific.KeycloakUtils;\n+import io.strimzi.test.TestUtils;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import java.io.IOException;\n+\n+public class KeycloakResource {\n+\n+    private static final Logger LOGGER = LogManager.getLogger(KeycloakResource.class);\n+\n+    private static final String KEYCLOAK_OPERATOR_DEPLOYMENT_NAME = \"keycloak-operator\";\n+    private static final String KEYCLOAK_CUSTOM_RESOURCE_NAME = \"keycloak\";\n+    private static final String KEYCLOAK_POD_NAME = \"keycloak-0\";\n+\n+    public static void keycloakOperator(String namespace) {\n+\n+        LOGGER.info(\"Deploying CRDs for Keycloak Operator in {} namespace\", ResourceManager.cmdKubeClient().namespace());\n+\n+        try {\n+            ResourceManager.cmdKubeClient().apply(FileUtils.downloadAndUnzip(\"https://raw.githubusercontent.com/keycloak/keycloak-operator/master/deploy/olm-catalog/keycloak-operator/9.0.2/keycloak-operator.v9.0.2.clusterserviceversion.yaml\"));\n+            ResourceManager.cmdKubeClient().apply(FileUtils.downloadAndUnzip(\"https://raw.githubusercontent.com/keycloak/keycloak-operator/master/deploy/olm-catalog/keycloak-operator/9.0.2/keycloakbackups.keycloak.org.crd.yaml\"));\n+            ResourceManager.cmdKubeClient().apply(FileUtils.downloadAndUnzip(\"https://raw.githubusercontent.com/keycloak/keycloak-operator/master/deploy/olm-catalog/keycloak-operator/9.0.2/keycloakclients.keycloak.org.crd.yaml\"));\n+            ResourceManager.cmdKubeClient().apply(FileUtils.downloadAndUnzip(\"https://raw.githubusercontent.com/keycloak/keycloak-operator/master/deploy/olm-catalog/keycloak-operator/9.0.2/keycloakrealms.keycloak.org.crd.yaml\"));\n+            ResourceManager.cmdKubeClient().apply(FileUtils.downloadAndUnzip(\"https://raw.githubusercontent.com/keycloak/keycloak-operator/master/deploy/olm-catalog/keycloak-operator/9.0.2/keycloaks.keycloak.org.crd.yaml\"));\n+            ResourceManager.cmdKubeClient().apply(FileUtils.downloadAndUnzip(\"https://raw.githubusercontent.com/keycloak/keycloak-operator/master/deploy/olm-catalog/keycloak-operator/9.0.2/keycloakusers.keycloak.org.crd.yaml\"));\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+\n+        ResourceManager.cmdKubeClient().namespace(namespace).apply(KeycloakResource.class.getResource(\"/keycloak/role.yaml\").getFile());\n+        ResourceManager.cmdKubeClient().namespace(namespace).apply(KeycloakResource.class.getResource(\"/keycloak/role_binding.yaml\").getFile());\n+        ResourceManager.cmdKubeClient().namespace(namespace).apply(KeycloakResource.class.getResource(\"/keycloak/service_account.yaml\").getFile());\n+\n+        LOGGER.info(\"Deploying Keycloak Operator in {} namespace\", ResourceManager.cmdKubeClient().namespace());\n+\n+        ResourceManager.cmdKubeClient().namespace(namespace).apply(KeycloakResource.class.getResource(\"/keycloak/operator.yaml\").getFile());\n+\n+        TestUtils.waitFor(\"Keycloak Operator deployment creation\", Constants.GLOBAL_POLL_INTERVAL, Constants.TIMEOUT_FOR_RESOURCE_CREATION,\n+            () -> ResourceManager.kubeClient().getDeployment(KEYCLOAK_OPERATOR_DEPLOYMENT_NAME) != null);\n+        String deploymentName = ResourceManager.kubeClient().getDeployment(KEYCLOAK_OPERATOR_DEPLOYMENT_NAME).getMetadata().getName();\n+\n+        // schedule deletion after teardown\n+        ResourceManager.getPointerResources().push(() -> deleteKeycloakOperator(deploymentName, namespace));\n+        // Wait for operator creation\n+        waitForKeycloakOperator(deploymentName, namespace, 1);\n+    }\n+\n+    public static void deployKeycloak(String namespace) {\n+        ResourceManager.cmdKubeClient().namespace(namespace).apply(KeycloakResource.class.getResource(\"/keycloak/keycloak_instance.yaml\").getFile());\n+        waitForKeycloak(namespace);\n+\n+        // schedule deletion after teardown\n+        ResourceManager.getPointerResources().push(() -> deleteKeycloak(namespace));\n+    }\n+\n+    private static void deleteKeycloakOperator(String deploymentName, String namespace) {\n+\n+        try {\n+            ResourceManager.cmdKubeClient().delete(FileUtils.downloadAndUnzip(\"https://raw.githubusercontent.com/keycloak/keycloak-operator/master/deploy/olm-catalog/keycloak-operator/9.0.2/keycloak-operator.v9.0.2.clusterserviceversion.yaml\"));\n+            ResourceManager.cmdKubeClient().delete(FileUtils.downloadAndUnzip(\"https://raw.githubusercontent.com/keycloak/keycloak-operator/master/deploy/olm-catalog/keycloak-operator/9.0.2/keycloakbackups.keycloak.org.crd.yaml\"));\n+            ResourceManager.cmdKubeClient().delete(FileUtils.downloadAndUnzip(\"https://raw.githubusercontent.com/keycloak/keycloak-operator/master/deploy/olm-catalog/keycloak-operator/9.0.2/keycloakclients.keycloak.org.crd.yaml\"));\n+            ResourceManager.cmdKubeClient().delete(FileUtils.downloadAndUnzip(\"https://raw.githubusercontent.com/keycloak/keycloak-operator/master/deploy/olm-catalog/keycloak-operator/9.0.2/keycloakrealms.keycloak.org.crd.yaml\"));\n+            ResourceManager.cmdKubeClient().delete(FileUtils.downloadAndUnzip(\"https://raw.githubusercontent.com/keycloak/keycloak-operator/master/deploy/olm-catalog/keycloak-operator/9.0.2/keycloaks.keycloak.org.crd.yaml\"));\n+            ResourceManager.cmdKubeClient().delete(FileUtils.downloadAndUnzip(\"https://raw.githubusercontent.com/keycloak/keycloak-operator/master/deploy/olm-catalog/keycloak-operator/9.0.2/keycloakusers.keycloak.org.crd.yaml\"));\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+\n+        ResourceManager.cmdKubeClient().namespace(namespace).delete(KeycloakResource.class.getResource(\"/keycloak/role.yaml\").getFile());\n+        ResourceManager.cmdKubeClient().namespace(namespace).delete(KeycloakResource.class.getResource(\"/keycloak/role_binding.yaml\").getFile());\n+        ResourceManager.cmdKubeClient().namespace(namespace).delete(KeycloakResource.class.getResource(\"/keycloak/service_account.yaml\").getFile());\n+\n+        ResourceManager.cmdKubeClient().namespace(namespace).delete(KeycloakResource.class.getResource(\"/keycloak/operator.yaml\").getFile());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75d729293b99077480db45dc3879dfcc8c55ace0"}, "originalPosition": 84}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ff383279b4642d9cce1b507c47ef2496004d4576", "author": {"user": {"login": "see-quick", "name": "Ors\u00e1k Maro\u0161"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/ff383279b4642d9cce1b507c47ef2496004d4576", "committedDate": "2020-07-14T06:26:30Z", "message": "[MO] - [s] -> delete\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>"}, "afterCommit": {"oid": "2bd46da7829c643d10b17a4b20677606f0ff2b28", "author": {"user": {"login": "see-quick", "name": "Ors\u00e1k Maro\u0161"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/2bd46da7829c643d10b17a4b20677606f0ff2b28", "committedDate": "2020-07-14T06:29:33Z", "message": "[MO] - [s] -> delete\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2bd46da7829c643d10b17a4b20677606f0ff2b28", "author": {"user": {"login": "see-quick", "name": "Ors\u00e1k Maro\u0161"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/2bd46da7829c643d10b17a4b20677606f0ff2b28", "committedDate": "2020-07-14T06:29:33Z", "message": "[MO] - [s] -> delete\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>"}, "afterCommit": {"oid": "c325fde94dde7caa3f7f8a7ac74fdf375b71bb37", "author": {"user": {"login": "see-quick", "name": "Ors\u00e1k Maro\u0161"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/c325fde94dde7caa3f7f8a7ac74fdf375b71bb37", "committedDate": "2020-08-18T13:11:59Z", "message": "remove sso + rebase\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d708d641fc83cf60638cbb98809c0c218a246e44", "author": {"user": {"login": "see-quick", "name": "Ors\u00e1k Maro\u0161"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/d708d641fc83cf60638cbb98809c0c218a246e44", "committedDate": "2020-08-18T13:27:20Z", "message": "[MO] - [keycloak] -> keycloak resource\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a08ee750346860777d133635b11d942feef966f", "author": {"user": {"login": "see-quick", "name": "Ors\u00e1k Maro\u0161"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/0a08ee750346860777d133635b11d942feef966f", "committedDate": "2020-08-18T13:27:20Z", "message": "[MO] - [kc instance + import] -> new\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93d6379d0b5b268f005e6af7af828188a7759a66", "author": {"user": {"login": "see-quick", "name": "Ors\u00e1k Maro\u0161"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/93d6379d0b5b268f005e6af7af828188a7759a66", "committedDate": "2020-08-18T13:27:20Z", "message": "[MO] - [yamls] -> use crds upstream instead local one\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a962396801fc9f4d50fdb8d38c7ff40db0e75bc", "author": {"user": {"login": "see-quick", "name": "Ors\u00e1k Maro\u0161"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/8a962396801fc9f4d50fdb8d38c7ff40db0e75bc", "committedDate": "2020-08-18T13:27:21Z", "message": "[MO] - update\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1f7c84b613d341c1b41855acd1fb82f4a53dc85", "author": {"user": {"login": "see-quick", "name": "Ors\u00e1k Maro\u0161"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/c1f7c84b613d341c1b41855acd1fb82f4a53dc85", "committedDate": "2020-08-18T13:27:21Z", "message": "update\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0873aea915335b7052bca8e9d262d1a33a5ba44", "author": {"user": {"login": "see-quick", "name": "Ors\u00e1k Maro\u0161"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/f0873aea915335b7052bca8e9d262d1a33a5ba44", "committedDate": "2020-08-18T13:27:21Z", "message": "[MO] - [update\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d29ed8355f8d39c2086a5e38240caa9b6dcd0466", "author": {"user": {"login": "see-quick", "name": "Ors\u00e1k Maro\u0161"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/d29ed8355f8d39c2086a5e38240caa9b6dcd0466", "committedDate": "2020-08-18T13:27:21Z", "message": "fix;\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d6a7406de6d3e0a654ff5226faff0182d70d724", "author": {"user": {"login": "see-quick", "name": "Ors\u00e1k Maro\u0161"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/7d6a7406de6d3e0a654ff5226faff0182d70d724", "committedDate": "2020-08-18T13:27:21Z", "message": "[MO] - [s] -> delete\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8fa174b4416eeed91b062fb37c7ade0398881e02", "author": {"user": {"login": "see-quick", "name": "Ors\u00e1k Maro\u0161"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/8fa174b4416eeed91b062fb37c7ade0398881e02", "committedDate": "2020-08-18T13:27:21Z", "message": "remove sso + rebase\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2500ba128c62b4c2696217a8031e96bb517f7398", "author": {"user": {"login": "see-quick", "name": "Ors\u00e1k Maro\u0161"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/2500ba128c62b4c2696217a8031e96bb517f7398", "committedDate": "2020-08-18T13:34:28Z", "message": "cr\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c325fde94dde7caa3f7f8a7ac74fdf375b71bb37", "author": {"user": {"login": "see-quick", "name": "Ors\u00e1k Maro\u0161"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/c325fde94dde7caa3f7f8a7ac74fdf375b71bb37", "committedDate": "2020-08-18T13:11:59Z", "message": "remove sso + rebase\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>"}, "afterCommit": {"oid": "2500ba128c62b4c2696217a8031e96bb517f7398", "author": {"user": {"login": "see-quick", "name": "Ors\u00e1k Maro\u0161"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/2500ba128c62b4c2696217a8031e96bb517f7398", "committedDate": "2020-08-18T13:34:28Z", "message": "cr\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5NjE0NzA1", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3151#pullrequestreview-469614705", "createdAt": "2020-08-18T16:16:04Z", "commit": {"oid": "2500ba128c62b4c2696217a8031e96bb517f7398"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNjoxNjowNFrOHCb9mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNjoyMjo0OFrOHCcOqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjMxNzMzOQ==", "bodyText": "We should keep those URLs in some constants, since it's used on multiple places.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3151#discussion_r472317339", "createdAt": "2020-08-18T16:16:04Z", "author": {"login": "Frawless"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/resources/KeycloakResource.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ * Copyright Strimzi authors.\n+ * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n+ */\n+package io.strimzi.systemtest.resources;\n+\n+import io.strimzi.systemtest.Constants;\n+import io.strimzi.systemtest.utils.FileUtils;\n+import io.strimzi.systemtest.utils.kubeUtils.controllers.DeploymentUtils;\n+import io.strimzi.systemtest.utils.kubeUtils.objects.PodUtils;\n+import io.strimzi.systemtest.utils.specific.KeycloakUtils;\n+import io.strimzi.test.TestUtils;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import java.io.IOException;\n+\n+import static io.strimzi.systemtest.resources.ResourceManager.CR_CREATION_TIMEOUT;\n+\n+public class KeycloakResource {\n+\n+    private static final Logger LOGGER = LogManager.getLogger(KeycloakResource.class);\n+\n+    private static final String KEYCLOAK_OPERATOR_DEPLOYMENT_NAME = \"keycloak-operator\";\n+    private static final String KEYCLOAK_CUSTOM_RESOURCE_NAME = \"keycloak\";\n+    private static final String KEYCLOAK_POD_NAME = \"keycloak-0\";\n+\n+    public static void keycloakOperator(String namespace) {\n+\n+        LOGGER.info(\"Deploying CRDs for Keycloak Operator in {} namespace\", ResourceManager.cmdKubeClient().namespace());\n+\n+        try {\n+            ResourceManager.cmdKubeClient().apply(FileUtils.downloadAndUnzip(\"https://raw.githubusercontent.com/keycloak/keycloak-operator/master/deploy/olm-catalog/keycloak-operator/9.0.2/keycloak-operator.v9.0.2.clusterserviceversion.yaml\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2500ba128c62b4c2696217a8031e96bb517f7398"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjMxOTAyMw==", "bodyText": "https://github.com/keycloak/keycloak-operator/blob/9.0.2/deploy/operator.yaml  hm?  You use 9.0.2 for all files, but master image in \"local\" operator data. I think we should use files from github if you don't need to change anything special here.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3151#discussion_r472319023", "createdAt": "2020-08-18T16:18:40Z", "author": {"login": "Frawless"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/resources/KeycloakResource.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Copyright Strimzi authors.\n+ * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n+ */\n+package io.strimzi.systemtest.resources;\n+\n+import io.strimzi.systemtest.Constants;\n+import io.strimzi.systemtest.utils.FileUtils;\n+import io.strimzi.systemtest.utils.kubeUtils.controllers.DeploymentUtils;\n+import io.strimzi.systemtest.utils.kubeUtils.objects.PodUtils;\n+import io.strimzi.systemtest.utils.specific.KeycloakUtils;\n+import io.strimzi.test.TestUtils;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import java.io.IOException;\n+\n+public class KeycloakResource {\n+\n+    private static final Logger LOGGER = LogManager.getLogger(KeycloakResource.class);\n+\n+    private static final String KEYCLOAK_OPERATOR_DEPLOYMENT_NAME = \"keycloak-operator\";\n+    private static final String KEYCLOAK_CUSTOM_RESOURCE_NAME = \"keycloak\";\n+    private static final String KEYCLOAK_POD_NAME = \"keycloak-0\";\n+\n+    public static void keycloakOperator(String namespace) {\n+\n+        LOGGER.info(\"Deploying CRDs for Keycloak Operator in {} namespace\", ResourceManager.cmdKubeClient().namespace());\n+\n+        try {\n+            ResourceManager.cmdKubeClient().apply(FileUtils.downloadAndUnzip(\"https://raw.githubusercontent.com/keycloak/keycloak-operator/master/deploy/olm-catalog/keycloak-operator/9.0.2/keycloak-operator.v9.0.2.clusterserviceversion.yaml\"));\n+            ResourceManager.cmdKubeClient().apply(FileUtils.downloadAndUnzip(\"https://raw.githubusercontent.com/keycloak/keycloak-operator/master/deploy/olm-catalog/keycloak-operator/9.0.2/keycloakbackups.keycloak.org.crd.yaml\"));\n+            ResourceManager.cmdKubeClient().apply(FileUtils.downloadAndUnzip(\"https://raw.githubusercontent.com/keycloak/keycloak-operator/master/deploy/olm-catalog/keycloak-operator/9.0.2/keycloakclients.keycloak.org.crd.yaml\"));\n+            ResourceManager.cmdKubeClient().apply(FileUtils.downloadAndUnzip(\"https://raw.githubusercontent.com/keycloak/keycloak-operator/master/deploy/olm-catalog/keycloak-operator/9.0.2/keycloakrealms.keycloak.org.crd.yaml\"));\n+            ResourceManager.cmdKubeClient().apply(FileUtils.downloadAndUnzip(\"https://raw.githubusercontent.com/keycloak/keycloak-operator/master/deploy/olm-catalog/keycloak-operator/9.0.2/keycloaks.keycloak.org.crd.yaml\"));\n+            ResourceManager.cmdKubeClient().apply(FileUtils.downloadAndUnzip(\"https://raw.githubusercontent.com/keycloak/keycloak-operator/master/deploy/olm-catalog/keycloak-operator/9.0.2/keycloakusers.keycloak.org.crd.yaml\"));\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+\n+        ResourceManager.cmdKubeClient().namespace(namespace).apply(KeycloakResource.class.getResource(\"/keycloak/role.yaml\").getFile());\n+        ResourceManager.cmdKubeClient().namespace(namespace).apply(KeycloakResource.class.getResource(\"/keycloak/role_binding.yaml\").getFile());\n+        ResourceManager.cmdKubeClient().namespace(namespace).apply(KeycloakResource.class.getResource(\"/keycloak/service_account.yaml\").getFile());\n+\n+        LOGGER.info(\"Deploying Keycloak Operator in {} namespace\", ResourceManager.cmdKubeClient().namespace());\n+\n+        ResourceManager.cmdKubeClient().namespace(namespace).apply(KeycloakResource.class.getResource(\"/keycloak/operator.yaml\").getFile());\n+\n+        TestUtils.waitFor(\"Keycloak Operator deployment creation\", Constants.GLOBAL_POLL_INTERVAL, Constants.TIMEOUT_FOR_RESOURCE_CREATION,\n+            () -> ResourceManager.kubeClient().getDeployment(KEYCLOAK_OPERATOR_DEPLOYMENT_NAME) != null);\n+        String deploymentName = ResourceManager.kubeClient().getDeployment(KEYCLOAK_OPERATOR_DEPLOYMENT_NAME).getMetadata().getName();\n+\n+        // schedule deletion after teardown\n+        ResourceManager.getPointerResources().push(() -> deleteKeycloakOperator(deploymentName, namespace));\n+        // Wait for operator creation\n+        waitForKeycloakOperator(deploymentName, namespace, 1);\n+    }\n+\n+    public static void deployKeycloak(String namespace) {\n+        ResourceManager.cmdKubeClient().namespace(namespace).apply(KeycloakResource.class.getResource(\"/keycloak/keycloak_instance.yaml\").getFile());\n+        waitForKeycloak(namespace);\n+\n+        // schedule deletion after teardown\n+        ResourceManager.getPointerResources().push(() -> deleteKeycloak(namespace));\n+    }\n+\n+    private static void deleteKeycloakOperator(String deploymentName, String namespace) {\n+\n+        try {\n+            ResourceManager.cmdKubeClient().delete(FileUtils.downloadAndUnzip(\"https://raw.githubusercontent.com/keycloak/keycloak-operator/master/deploy/olm-catalog/keycloak-operator/9.0.2/keycloak-operator.v9.0.2.clusterserviceversion.yaml\"));\n+            ResourceManager.cmdKubeClient().delete(FileUtils.downloadAndUnzip(\"https://raw.githubusercontent.com/keycloak/keycloak-operator/master/deploy/olm-catalog/keycloak-operator/9.0.2/keycloakbackups.keycloak.org.crd.yaml\"));\n+            ResourceManager.cmdKubeClient().delete(FileUtils.downloadAndUnzip(\"https://raw.githubusercontent.com/keycloak/keycloak-operator/master/deploy/olm-catalog/keycloak-operator/9.0.2/keycloakclients.keycloak.org.crd.yaml\"));\n+            ResourceManager.cmdKubeClient().delete(FileUtils.downloadAndUnzip(\"https://raw.githubusercontent.com/keycloak/keycloak-operator/master/deploy/olm-catalog/keycloak-operator/9.0.2/keycloakrealms.keycloak.org.crd.yaml\"));\n+            ResourceManager.cmdKubeClient().delete(FileUtils.downloadAndUnzip(\"https://raw.githubusercontent.com/keycloak/keycloak-operator/master/deploy/olm-catalog/keycloak-operator/9.0.2/keycloaks.keycloak.org.crd.yaml\"));\n+            ResourceManager.cmdKubeClient().delete(FileUtils.downloadAndUnzip(\"https://raw.githubusercontent.com/keycloak/keycloak-operator/master/deploy/olm-catalog/keycloak-operator/9.0.2/keycloakusers.keycloak.org.crd.yaml\"));\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+\n+        ResourceManager.cmdKubeClient().namespace(namespace).delete(KeycloakResource.class.getResource(\"/keycloak/role.yaml\").getFile());\n+        ResourceManager.cmdKubeClient().namespace(namespace).delete(KeycloakResource.class.getResource(\"/keycloak/role_binding.yaml\").getFile());\n+        ResourceManager.cmdKubeClient().namespace(namespace).delete(KeycloakResource.class.getResource(\"/keycloak/service_account.yaml\").getFile());\n+\n+        ResourceManager.cmdKubeClient().namespace(namespace).delete(KeycloakResource.class.getResource(\"/keycloak/operator.yaml\").getFile());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM0NjMwMw=="}, "originalCommit": {"oid": "75d729293b99077480db45dc3879dfcc8c55ace0"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjMxOTk4MQ==", "bodyText": "https://github.com/keycloak/keycloak-operator/blob/9.0.2/deploy/examples/keycloak/keycloak.yaml", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3151#discussion_r472319981", "createdAt": "2020-08-18T16:20:10Z", "author": {"login": "Frawless"}, "path": "systemtest/src/main/resources/keycloak/keycloak_instance.yaml", "diffHunk": "@@ -0,0 +1,14 @@\n+apiVersion: keycloak.org/v1alpha1\n+kind: Keycloak\n+metadata:\n+  name: example-keycloak\n+  labels:\n+    app: keycloak-instance\n+spec:\n+  instances: 1\n+  extensions:\n+    - https://github.com/aerogear/keycloak-metrics-spi/releases/download/1.0.4/keycloak-metrics-spi-1.0.4.jar\n+  externalAccess:\n+    enabled: True\n+  podDisruptionBudget:\n+    enabled: True", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2500ba128c62b4c2696217a8031e96bb517f7398"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjMyMTM2Mw==", "bodyText": "https://github.com/keycloak/keycloak-operator/blob/9.0.2/deploy/operator.yaml", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3151#discussion_r472321363", "createdAt": "2020-08-18T16:22:18Z", "author": {"login": "Frawless"}, "path": "systemtest/src/main/resources/keycloak/operator.yaml", "diffHunk": "@@ -0,0 +1,33 @@\n+apiVersion: apps/v1\n+kind: Deployment\n+metadata:\n+  name: keycloak-operator\n+spec:\n+  replicas: 1\n+  selector:\n+    matchLabels:\n+      name: keycloak-operator\n+  template:\n+    metadata:\n+      labels:\n+        name: keycloak-operator\n+    spec:\n+      serviceAccountName: keycloak-operator\n+      containers:\n+        - name: keycloak-operator\n+          # Replace this with the built image name\n+          image: quay.io/keycloak/keycloak-operator:master\n+          command:\n+          - keycloak-operator\n+          imagePullPolicy: Always\n+          env:\n+            - name: WATCH_NAMESPACE\n+              valueFrom:\n+                fieldRef:\n+                  fieldPath: metadata.namespace\n+            - name: POD_NAME\n+              valueFrom:\n+                fieldRef:\n+                  fieldPath: metadata.name\n+            - name: OPERATOR_NAME\n+              value: \"keycloak-operator\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2500ba128c62b4c2696217a8031e96bb517f7398"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjMyMTUwOQ==", "bodyText": "Same as above", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3151#discussion_r472321509", "createdAt": "2020-08-18T16:22:31Z", "author": {"login": "Frawless"}, "path": "systemtest/src/main/resources/keycloak/role.yaml", "diffHunk": "@@ -0,0 +1,132 @@\n+apiVersion: rbac.authorization.k8s.io/v1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2500ba128c62b4c2696217a8031e96bb517f7398"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjMyMTYwMg==", "bodyText": "Same as above", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3151#discussion_r472321602", "createdAt": "2020-08-18T16:22:39Z", "author": {"login": "Frawless"}, "path": "systemtest/src/main/resources/keycloak/role_binding.yaml", "diffHunk": "@@ -0,0 +1,11 @@\n+kind: RoleBinding", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2500ba128c62b4c2696217a8031e96bb517f7398"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjMyMTcwNg==", "bodyText": "Same as above", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3151#discussion_r472321706", "createdAt": "2020-08-18T16:22:48Z", "author": {"login": "Frawless"}, "path": "systemtest/src/main/resources/keycloak/service_account.yaml", "diffHunk": "@@ -0,0 +1,4 @@\n+apiVersion: v1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2500ba128c62b4c2696217a8031e96bb517f7398"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5NzM0MDgx", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3151#pullrequestreview-469734081", "createdAt": "2020-08-18T18:52:08Z", "commit": {"oid": "2500ba128c62b4c2696217a8031e96bb517f7398"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxODo1MjowOFrOHChpDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxOTowMjo0OVrOHCh_gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQxMDM4Mg==", "bodyText": "Why are we using OLM for this instead of regular installation files? It seems like that could only bring complications down the road. We should also not rely on master files but at least pull it from some tag or copy it locally to make sure it is stable.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3151#discussion_r472410382", "createdAt": "2020-08-18T18:52:08Z", "author": {"login": "scholzj"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/resources/KeycloakResource.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ * Copyright Strimzi authors.\n+ * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n+ */\n+package io.strimzi.systemtest.resources;\n+\n+import io.strimzi.systemtest.Constants;\n+import io.strimzi.systemtest.utils.FileUtils;\n+import io.strimzi.systemtest.utils.kubeUtils.controllers.DeploymentUtils;\n+import io.strimzi.systemtest.utils.kubeUtils.objects.PodUtils;\n+import io.strimzi.systemtest.utils.specific.KeycloakUtils;\n+import io.strimzi.test.TestUtils;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import java.io.IOException;\n+\n+import static io.strimzi.systemtest.resources.ResourceManager.CR_CREATION_TIMEOUT;\n+\n+public class KeycloakResource {\n+\n+    private static final Logger LOGGER = LogManager.getLogger(KeycloakResource.class);\n+\n+    private static final String KEYCLOAK_OPERATOR_DEPLOYMENT_NAME = \"keycloak-operator\";\n+    private static final String KEYCLOAK_CUSTOM_RESOURCE_NAME = \"keycloak\";\n+    private static final String KEYCLOAK_POD_NAME = \"keycloak-0\";\n+\n+    public static void keycloakOperator(String namespace) {\n+\n+        LOGGER.info(\"Deploying CRDs for Keycloak Operator in {} namespace\", ResourceManager.cmdKubeClient().namespace());\n+\n+        try {\n+            ResourceManager.cmdKubeClient().apply(FileUtils.downloadAndUnzip(\"https://raw.githubusercontent.com/keycloak/keycloak-operator/master/deploy/olm-catalog/keycloak-operator/9.0.2/keycloak-operator.v9.0.2.clusterserviceversion.yaml\"));\n+            ResourceManager.cmdKubeClient().apply(FileUtils.downloadAndUnzip(\"https://raw.githubusercontent.com/keycloak/keycloak-operator/master/deploy/olm-catalog/keycloak-operator/9.0.2/keycloakbackups.keycloak.org.crd.yaml\"));\n+            ResourceManager.cmdKubeClient().apply(FileUtils.downloadAndUnzip(\"https://raw.githubusercontent.com/keycloak/keycloak-operator/master/deploy/olm-catalog/keycloak-operator/9.0.2/keycloakclients.keycloak.org.crd.yaml\"));\n+            ResourceManager.cmdKubeClient().apply(FileUtils.downloadAndUnzip(\"https://raw.githubusercontent.com/keycloak/keycloak-operator/master/deploy/olm-catalog/keycloak-operator/9.0.2/keycloakrealms.keycloak.org.crd.yaml\"));\n+            ResourceManager.cmdKubeClient().apply(FileUtils.downloadAndUnzip(\"https://raw.githubusercontent.com/keycloak/keycloak-operator/master/deploy/olm-catalog/keycloak-operator/9.0.2/keycloaks.keycloak.org.crd.yaml\"));\n+            ResourceManager.cmdKubeClient().apply(FileUtils.downloadAndUnzip(\"https://raw.githubusercontent.com/keycloak/keycloak-operator/master/deploy/olm-catalog/keycloak-operator/9.0.2/keycloakusers.keycloak.org.crd.yaml\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2500ba128c62b4c2696217a8031e96bb517f7398"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQxNjEzMA==", "bodyText": "Do we really need this?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3151#discussion_r472416130", "createdAt": "2020-08-18T19:02:49Z", "author": {"login": "scholzj"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/specific/KeycloakUtils.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Copyright Strimzi authors.\n+ * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n+ */\n+package io.strimzi.systemtest.utils.specific;\n+\n+import io.strimzi.systemtest.Constants;\n+import io.strimzi.systemtest.resources.ResourceManager;\n+import io.strimzi.test.TestUtils;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+public class KeycloakUtils {\n+\n+    private static final Logger LOGGER = LogManager.getLogger(KeycloakUtils.class);\n+\n+    private KeycloakUtils() {}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2500ba128c62b4c2696217a8031e96bb517f7398"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4dea93530067700d25e55791b03f598840d5d2bc", "author": {"user": {"login": "see-quick", "name": "Ors\u00e1k Maro\u0161"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/4dea93530067700d25e55791b03f598840d5d2bc", "committedDate": "2020-08-19T07:44:48Z", "message": "commends\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwNzU0MjIz", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3151#pullrequestreview-470754223", "createdAt": "2020-08-19T19:02:25Z", "commit": {"oid": "4dea93530067700d25e55791b03f598840d5d2bc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73401ffaf58654cf08ff3116442c5a0eaefba077", "author": {"user": {"login": "see-quick", "name": "Ors\u00e1k Maro\u0161"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/73401ffaf58654cf08ff3116442c5a0eaefba077", "committedDate": "2020-08-20T11:54:03Z", "message": "kafka doesnt work\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "893daf54db79fe9b9fdefe352020a58258a0843c", "author": {"user": {"login": "see-quick", "name": "Ors\u00e1k Maro\u0161"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/893daf54db79fe9b9fdefe352020a58258a0843c", "committedDate": "2020-08-21T08:52:25Z", "message": "removing operator just keycloak instance stays\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyMzIwNzI2", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3151#pullrequestreview-472320726", "createdAt": "2020-08-21T08:55:46Z", "commit": {"oid": "893daf54db79fe9b9fdefe352020a58258a0843c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01913f70a22cabdbfe54bfa058261e1758ed4212", "author": {"user": {"login": "see-quick", "name": "Ors\u00e1k Maro\u0161"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/01913f70a22cabdbfe54bfa058261e1758ed4212", "committedDate": "2020-08-21T09:00:07Z", "message": "checkstyle\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b35e5ce1e4555f9946b38ccf63038e3a66bca4dc", "author": {"user": {"login": "see-quick", "name": "Ors\u00e1k Maro\u0161"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/b35e5ce1e4555f9946b38ccf63038e3a66bca4dc", "committedDate": "2020-08-21T13:45:48Z", "message": "check\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1480, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}