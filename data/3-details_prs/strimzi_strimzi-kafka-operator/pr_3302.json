{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3MzUyODU4", "number": 3302, "title": "ST: Add test for bridge metrics are exposed properly", "bodyText": "Signed-off-by: Jakub Stejskal xstejs24@gmail.com\nType of change\nSelect the type of your PR\n\nEnhancement / new feature\n\nDescription\nThis PR adds test which check metrics exported by KafkaBridge.\nChecklist\n\n Write tests\n Make sure all tests pass", "createdAt": "2020-07-10T10:11:48Z", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3302", "merged": true, "mergeCommit": {"oid": "8e3c4649425912300d74f27928cf996c41c61df1"}, "closed": true, "closedAt": "2020-07-15T07:53:38Z", "author": {"login": "Frawless"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABczpV3wgFqTQ0NjY3MTY4MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc1F1gNAFqTQ0ODcxMTc1Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2NjcxNjgx", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3302#pullrequestreview-446671681", "createdAt": "2020-07-10T20:06:07Z", "commit": {"oid": "acd01d9ba219a80778ec662bcdded852cc482b2f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMDowNjowOFrOGwEOqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMDowNjowOFrOGwEOqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA1NDEyMw==", "bodyText": "Should we have similar check for Kafka Producer and Kafka Consumer metrics?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3302#discussion_r453054123", "createdAt": "2020-07-10T20:06:08Z", "author": {"login": "scholzj"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/metrics/MetricsST.java", "diffHunk": "@@ -286,6 +290,18 @@ void testMirrorMaker2Metrics() {\n         assertThat(values.stream().mapToDouble(i -> i).sum(), is((double) 1));\n     }\n \n+    @Test\n+    void testKafkaBridgeMetrics() {\n+        kafkaBridgeMetricsData = MetricsUtils.collectKafkaBridgePodMetrics(BRIDGE_CLUSTER);\n+        assertThat(\"Collected KafkaBridge metrics are empty\", kafkaBridgeMetricsData.size() > 0);\n+        assertThat(\"Collected KafkaBridge metrics doesn't contains vertx metrics\", kafkaBridgeMetricsData.values().toString().contains(\"vertx\"));\n+        assertThat(\"Collected KafkaBridge metrics doesn't contains jvm metrics\", kafkaBridgeMetricsData.values().toString().contains(\"jvm\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acd01d9ba219a80778ec662bcdded852cc482b2f"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2Njg3MDIz", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3302#pullrequestreview-446687023", "createdAt": "2020-07-10T20:37:41Z", "commit": {"oid": "acd01d9ba219a80778ec662bcdded852cc482b2f"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMDozNzo0MlrOGwE9Ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMDozNzo0OVrOGwE9aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA2NjA0Mw==", "bodyText": "Let's remember that when the new bridge 0.18.0 will be out, the metrics will contain strimzi_bridge", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3302#discussion_r453066043", "createdAt": "2020-07-10T20:37:42Z", "author": {"login": "ppatierno"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/metrics/MetricsST.java", "diffHunk": "@@ -286,6 +290,18 @@ void testMirrorMaker2Metrics() {\n         assertThat(values.stream().mapToDouble(i -> i).sum(), is((double) 1));\n     }\n \n+    @Test\n+    void testKafkaBridgeMetrics() {\n+        kafkaBridgeMetricsData = MetricsUtils.collectKafkaBridgePodMetrics(BRIDGE_CLUSTER);\n+        assertThat(\"Collected KafkaBridge metrics are empty\", kafkaBridgeMetricsData.size() > 0);\n+        assertThat(\"Collected KafkaBridge metrics doesn't contains vertx metrics\", kafkaBridgeMetricsData.values().toString().contains(\"vertx\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acd01d9ba219a80778ec662bcdded852cc482b2f"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA2NjA5MQ==", "bodyText": "Agreed", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3302#discussion_r453066091", "createdAt": "2020-07-10T20:37:49Z", "author": {"login": "ppatierno"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/metrics/MetricsST.java", "diffHunk": "@@ -286,6 +290,18 @@ void testMirrorMaker2Metrics() {\n         assertThat(values.stream().mapToDouble(i -> i).sum(), is((double) 1));\n     }\n \n+    @Test\n+    void testKafkaBridgeMetrics() {\n+        kafkaBridgeMetricsData = MetricsUtils.collectKafkaBridgePodMetrics(BRIDGE_CLUSTER);\n+        assertThat(\"Collected KafkaBridge metrics are empty\", kafkaBridgeMetricsData.size() > 0);\n+        assertThat(\"Collected KafkaBridge metrics doesn't contains vertx metrics\", kafkaBridgeMetricsData.values().toString().contains(\"vertx\"));\n+        assertThat(\"Collected KafkaBridge metrics doesn't contains jvm metrics\", kafkaBridgeMetricsData.values().toString().contains(\"jvm\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA1NDEyMw=="}, "originalCommit": {"oid": "acd01d9ba219a80778ec662bcdded852cc482b2f"}, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2bd73ace9265093249a5af85a15e101534f1ea55", "author": {"user": {"login": "Frawless", "name": "Jakub Stejskal"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/2bd73ace9265093249a5af85a15e101534f1ea55", "committedDate": "2020-07-14T08:13:33Z", "message": "Add test for bridge metrics are exposed properly\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92f63c2fea4156c8070eb19d35662acc225bd086", "author": {"user": {"login": "Frawless", "name": "Jakub Stejskal"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/92f63c2fea4156c8070eb19d35662acc225bd086", "committedDate": "2020-07-14T08:13:33Z", "message": "fixup! Add test for bridge metrics are exposed properly\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ffbd93ae4a4dfc3e3427845bacbd71c48e20ce60", "author": {"user": {"login": "Frawless", "name": "Jakub Stejskal"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/ffbd93ae4a4dfc3e3427845bacbd71c48e20ce60", "committedDate": "2020-07-14T08:13:33Z", "message": "Attach clients to bridge metrics tests\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3c61d58d0e54e89c6c0af0f41fe41ab0c73470bf", "author": {"user": {"login": "Frawless", "name": "Jakub Stejskal"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/3c61d58d0e54e89c6c0af0f41fe41ab0c73470bf", "committedDate": "2020-07-13T10:28:53Z", "message": "Attach clients to bridge metrics tests\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>"}, "afterCommit": {"oid": "ffbd93ae4a4dfc3e3427845bacbd71c48e20ce60", "author": {"user": {"login": "Frawless", "name": "Jakub Stejskal"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/ffbd93ae4a4dfc3e3427845bacbd71c48e20ce60", "committedDate": "2020-07-14T08:13:33Z", "message": "Attach clients to bridge metrics tests\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fcf50cdf66043feb28325efe463665385621958f", "author": {"user": {"login": "Frawless", "name": "Jakub Stejskal"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/fcf50cdf66043feb28325efe463665385621958f", "committedDate": "2020-07-14T09:17:59Z", "message": "FIx soem asserts\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3OTYyNjQ4", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3302#pullrequestreview-447962648", "createdAt": "2020-07-14T09:57:12Z", "commit": {"oid": "fcf50cdf66043feb28325efe463665385621958f"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwOTo1NzoxMlrOGxMwKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMDowMTo0OFrOGxM6Qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI0MjM0Nw==", "bodyText": "typo \"BRIDGE\"", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3302#discussion_r454242347", "createdAt": "2020-07-14T09:57:12Z", "author": {"login": "ppatierno"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/Constants.java", "diffHunk": "@@ -77,6 +77,7 @@\n      */\n     String KAFKA_CLIENTS_LABEL_KEY = \"user-test-app\";\n     String KAFKA_CLIENTS_LABEL_VALUE = \"kafka-clients\";\n+    String KAFKA_BRDIGE_CLIENTS_LABEL_VALUE = \"kafka-clients\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fcf50cdf66043feb28325efe463665385621958f"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI0NDkzMA==", "bodyText": "\"HTTP metrics\"", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3302#discussion_r454244930", "createdAt": "2020-07-14T10:01:48Z", "author": {"login": "ppatierno"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/metrics/MetricsST.java", "diffHunk": "@@ -286,6 +295,40 @@ void testMirrorMaker2Metrics() {\n         assertThat(values.stream().mapToDouble(i -> i).sum(), is((double) 1));\n     }\n \n+    @Test\n+    @Tag(BRIDGE)\n+    void testKafkaBridgeMetrics() {\n+        String producerName = \"bridge-producer\";\n+        String consumerName = \"bridge-consumer\";\n+\n+        // Attach consumer before producer\n+        KafkaClientsResource.consumerStrimziBridge(consumerName, KafkaBridgeResources.serviceName(BRIDGE_CLUSTER), Constants.HTTP_BRIDGE_DEFAULT_PORT, bridgeTopic, 200).done();\n+        KafkaClientsResource.producerStrimziBridge(producerName, KafkaBridgeResources.serviceName(BRIDGE_CLUSTER), Constants.HTTP_BRIDGE_DEFAULT_PORT, bridgeTopic, 200).done();\n+\n+        TestUtils.waitFor(\"KafkaProducer metrics will be available\", Constants.GLOBAL_POLL_INTERVAL, Constants.GLOBAL_TIMEOUT, () -> {\n+            LOGGER.info(\"Looking for 'strimzi_bridge_kafka_producer_count' in bridge metrics\");\n+            kafkaBridgeMetricsData = MetricsUtils.collectKafkaBridgePodMetrics(BRIDGE_CLUSTER);\n+            Pattern producerCountPattern = Pattern.compile(\"strimzi_bridge_kafka_producer_count\\\\{.*,} ([\\\\d.][^\\\\n]+)\");\n+            ArrayList<Double> producerCountValues = MetricsUtils.collectSpecificMetric(producerCountPattern, kafkaBridgeMetricsData);\n+            return producerCountValues.stream().mapToDouble(i -> i).count() == (double) 1;\n+        });\n+\n+        TestUtils.waitFor(\"KafkaConsumer metrics will be available\", Constants.GLOBAL_POLL_INTERVAL, Constants.GLOBAL_TIMEOUT, () -> {\n+            LOGGER.info(\"Looking for 'strimzi_bridge_kafka_consumer_connection_count' in bridge metrics\");\n+            kafkaBridgeMetricsData = MetricsUtils.collectKafkaBridgePodMetrics(BRIDGE_CLUSTER);\n+            Pattern consumerConnectionsPattern = Pattern.compile(\"strimzi_bridge_kafka_consumer_connection_count\\\\{.*,} ([\\\\d.][^\\\\n]+)\");\n+            ArrayList<Double> consumerConnectionsValues = MetricsUtils.collectSpecificMetric(consumerConnectionsPattern, kafkaBridgeMetricsData);\n+            return consumerConnectionsValues.stream().mapToDouble(i -> i).count() > 0;\n+        });\n+\n+        assertThat(\"Collected KafkaBridge metrics doesn't contains jvm metrics\", kafkaBridgeMetricsData.values().toString().contains(\"jvm\"));\n+        assertThat(\"Collected KafkaBridge metrics doesn't contains strimzi metrics\", kafkaBridgeMetricsData.values().toString().contains(\"strimzi_bridge_http_server\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fcf50cdf66043feb28325efe463665385621958f"}, "originalPosition": 115}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96ee06e86ca142e7429652b670318a79bae2be8b", "author": {"user": {"login": "Frawless", "name": "Jakub Stejskal"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/96ee06e86ca142e7429652b670318a79bae2be8b", "committedDate": "2020-07-14T10:22:31Z", "message": "Fix comments\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4NzExNzU2", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3302#pullrequestreview-448711756", "createdAt": "2020-07-15T07:52:02Z", "commit": {"oid": "96ee06e86ca142e7429652b670318a79bae2be8b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1296, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}