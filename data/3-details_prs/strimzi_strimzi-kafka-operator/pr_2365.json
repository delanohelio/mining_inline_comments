{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5NjM4MTA3", "number": 2365, "title": "Fix rolling update of existing pods when scaling up/down", "bodyText": "Type of change\n\nBugfix\n\nDescription\nWhen checking the update of the secrets with server certificates for our different STS / Deployments, we trigger unnecessary rolling update when scaling up or down (new records are added to the secret -> the secret changed and we trigger rolling update of all pods.). This PR checks the changes in more details so that it triggers the rolling update only when the certificates which eisted before changed. Thanks to that Kafka doesn't roll when it scales up or down.\nChecklist\n\n Make sure all tests pass\n Try your changes from Pod inside your Kubernetes and OpenShift cluster, not just locally", "createdAt": "2020-01-06T17:32:57Z", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2365", "merged": true, "mergeCommit": {"oid": "902cf03d73a16a63e4a7a58717b9db3bbb6362a9"}, "closed": true, "closedAt": "2020-01-07T22:33:59Z", "author": {"login": "scholzj"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb3vnHzAH2gAyMzU5NjM4MTA3OmI5MTIwZDIzNmJhNTVlNzEwZjI1MjE0MWQzNDQwY2UwZDA0ZjkyMTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb4D1jjAFqTMzOTM3Mzc4MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b9120d236ba55e710f252141d3440ce0d04f9218", "author": {"user": {"login": "scholzj", "name": "Jakub Scholz"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/b9120d236ba55e710f252141d3440ce0d04f9218", "committedDate": "2020-01-06T17:29:02Z", "message": "Fix rolling update of existing pods when scaling up/down\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59500b446f6c2a54a53678d6879eabe9257695b9", "author": {"user": {"login": "scholzj", "name": "Jakub Scholz"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/59500b446f6c2a54a53678d6879eabe9257695b9", "committedDate": "2020-01-06T19:06:58Z", "message": "Fix tests\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5MTE2NTY3", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2365#pullrequestreview-339116567", "createdAt": "2020-01-07T09:24:05Z", "commit": {"oid": "59500b446f6c2a54a53678d6879eabe9257695b9"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwOToyNDowNVrOFaz3tQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwOTozMToyN1rOFa0Ebw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY1NzE0MQ==", "bodyText": "I wonder if the name (do)commonCertificatesDiffer is better?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2365#discussion_r363657141", "createdAt": "2020-01-07T09:24:05Z", "author": {"login": "tombentley"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/ModelUtils.java", "diffHunk": "@@ -366,4 +366,31 @@ public static String encodeStorageToJson(Storage storage) {\n     private static byte[] decodeFromSecret(Secret secret, String key) {\n         return Base64.getDecoder().decode(secret.getData().get(key));\n     }\n+\n+    /**\n+     * Compares two Secrets with certificates and checks whether any value for a key which exists in both Secrets\n+     * changed. This method is used to evaluate whether rolling update of existing brokers is needed when secrets with\n+     * certificates change. It separates changes for existing certificates with other changes to the secret such as\n+     * added or removed certificates (scale-up or scale-down).\n+     *\n+     * @param current   Existing secret\n+     * @param desired   Desired secret\n+     *\n+     * @return  True if there is a key which exists in the data sections of both secrets and which changed.\n+     */\n+    public static boolean didAnyCertificateChangedInSecret(Secret current, Secret desired) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59500b446f6c2a54a53678d6879eabe9257695b9"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY1OTM5NQ==", "bodyText": "We've got this same pattern of method calls repeated three or four times in this PR. Surely we can factor out a common method which takes the secret name and BiFunction whose argument is a method reference to kafkaExporter::generateSecret or whatever?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2365#discussion_r363659395", "createdAt": "2020-01-07T09:29:22Z", "author": {"login": "tombentley"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaAssemblyOperator.java", "diffHunk": "@@ -2866,12 +2884,18 @@ String getInternalServiceHostname(String serviceName)    {\n         }\n \n         Future<ReconciliationState> kafkaExporterSecret(Supplier<Date> dateSupplier) {\n-            return secretOperations.reconcile(namespace, KafkaExporter.secretName(name),\n-                    kafkaExporter == null ? null : kafkaExporter.generateSecret(clusterCa, isMaintenanceTimeWindowsSatisfied(dateSupplier)))\n-                    .map(res -> {\n-                        isKafkaExporterCertsChanged = res instanceof ReconcileResult.Patched;\n-                        return this;\n-                    });\n+            return secretOperations.getAsync(namespace, KafkaExporter.secretName(name))\n+                    .compose(oldSecret -> secretOperations.reconcile(namespace, KafkaExporter.secretName(name),\n+                            kafkaExporter == null ? null : kafkaExporter.generateSecret(clusterCa, isMaintenanceTimeWindowsSatisfied(dateSupplier)))\n+                            .map(res -> {\n+                                if (res instanceof ReconcileResult.Patched) {\n+                                    // The secret is patched and some changes to the existing certificates actually occured\n+                                    isExistingKafkaExporterCertsChanged = ModelUtils.didAnyCertificateChangedInSecret(oldSecret, res.resource());\n+                                }\n+\n+                                return this;\n+                            })\n+                    );\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59500b446f6c2a54a53678d6879eabe9257695b9"}, "originalPosition": 157}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY2MDM5OQ==", "bodyText": "If we're changing the name of these anyway, I wonder if we should drop the is part. The tense disagrees with the changed suffix, so it reads a bit awkwardly.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2365#discussion_r363660399", "createdAt": "2020-01-07T09:31:27Z", "author": {"login": "tombentley"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaAssemblyOperator.java", "diffHunk": "@@ -383,10 +383,10 @@ ReconciliationState createReconciliationState(Reconciliation reconciliation, Kaf\n         /* test */ Set<String> fsResizingRestartRequest = new HashSet<>();\n \n         // Certificate change indicators\n-        private boolean isZookeeperCertsChanged = false;\n-        private boolean isKafkaCertsChanged = false;\n-        private boolean isKafkaExporterCertsChanged = false;\n-        private boolean isEntityOperatorCertsChanged = false;\n+        private boolean isExistingZookeeperCertsChanged = false;\n+        private boolean isExistingKafkaCertsChanged = false;\n+        private boolean isExistingKafkaExporterCertsChanged = false;\n+        private boolean isExistingEntityOperatorCertsChanged = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59500b446f6c2a54a53678d6879eabe9257695b9"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "230412bf605c6acd3a1e404e348b49e402b54453", "author": {"user": {"login": "scholzj", "name": "Jakub Scholz"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/230412bf605c6acd3a1e404e348b49e402b54453", "committedDate": "2020-01-07T16:11:03Z", "message": "Review comments\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5MzczNzgw", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2365#pullrequestreview-339373780", "createdAt": "2020-01-07T17:02:55Z", "commit": {"oid": "230412bf605c6acd3a1e404e348b49e402b54453"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1772, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}