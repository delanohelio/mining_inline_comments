{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4ODQ1MjQz", "number": 2355, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwODoxMTowM1rODWds4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwODoyODozNVrODWd7VA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0ODgxODg4OnYy", "diffSide": "RIGHT", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/KafkaCluster.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwODoxMTowM1rOFbPNkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwODoxMTowM1rOFbPNkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDEwNTEwNA==", "bodyText": "I guess it's \"...type if...\"", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2355#discussion_r364105104", "createdAt": "2020-01-08T08:11:03Z", "author": {"login": "ppatierno"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/KafkaCluster.java", "diffHunk": "@@ -2355,4 +2355,21 @@ public boolean isJmxAuthenticated() {\n     public void setJmxAuthenticated(boolean jmxAuthenticated) {\n         isJmxAuthenticated = jmxAuthenticated;\n     }\n+\n+    /**\n+     * Returns the preferred node address type is configured by the user. Returns null otherwise.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac2b2df5a6c4e824bd80cffaf86caf2d539610f5"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0ODg1NTg4OnYy", "diffSide": "RIGHT", "path": "operator-common/src/main/java/io/strimzi/operator/common/operator/resource/NodeOperator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwODoyODozNVrOFbPkBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwODoyODozNVrOFbPkBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDExMDg1Mg==", "bodyText": "additional blank line", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2355#discussion_r364110852", "createdAt": "2020-01-08T08:28:35Z", "author": {"login": "ppatierno"}, "path": "operator-common/src/main/java/io/strimzi/operator/common/operator/resource/NodeOperator.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Copyright Strimzi authors.\n+ * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n+ */\n+package io.strimzi.operator.common.operator.resource;\n+\n+import io.fabric8.kubernetes.api.model.DoneableNode;\n+import io.fabric8.kubernetes.api.model.Node;\n+import io.fabric8.kubernetes.api.model.NodeList;\n+import io.fabric8.kubernetes.client.KubernetesClient;\n+import io.fabric8.kubernetes.client.dsl.NonNamespaceOperation;\n+import io.fabric8.kubernetes.client.dsl.Resource;\n+import io.vertx.core.Vertx;\n+\n+public class NodeOperator extends AbstractNonNamespacedResourceOperator<KubernetesClient,\n+        Node, NodeList, DoneableNode, Resource<Node, DoneableNode>> {\n+\n+    /**\n+     * Constructor.\n+     * @param vertx The Vertx instance.\n+     * @param client The Kubernetes client.\n+     * @param operationTimeoutMs The timeout in milliseconds.\n+     */\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac2b2df5a6c4e824bd80cffaf86caf2d539610f5"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 542, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}