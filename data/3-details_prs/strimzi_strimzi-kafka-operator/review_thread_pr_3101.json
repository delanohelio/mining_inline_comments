{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzNzExOTgx", "number": 3101, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMDowNjowOFrOEABYEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNTozNjo1NlrOEAJ_mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NDU4MDAyOnYy", "diffSide": "RIGHT", "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/specific/CruiseControlUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMDowNjowOFrOGbCbdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwOToxODo0OVrOGbsuEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTAwNDUzNA==", "bodyText": "So these endpoints are already defined in the cluster-operator module. I know we decided against putting the cc client stuff in operator-common but preventing duplicate code like this might be a good argument for moving it. Particularly if the endpoints need to be updated in future.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3101#discussion_r431004534", "createdAt": "2020-05-27T10:06:08Z", "author": {"login": "tomncooper"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/specific/CruiseControlUtils.java", "diffHunk": "@@ -48,6 +49,8 @@ private CruiseControlUtils() { }\n         USER_TASKS\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e6adf5113339b10bcc48b8d8de5541dc0d17ab8"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY5NzQyNA==", "bodyText": "Hmm, so if you moved that code in operator-common I would be glad and totally agree with that. @tomncooper", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3101#discussion_r431697424", "createdAt": "2020-05-28T09:18:49Z", "author": {"login": "see-quick"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/specific/CruiseControlUtils.java", "diffHunk": "@@ -48,6 +49,8 @@ private CruiseControlUtils() { }\n         USER_TASKS\n     }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTAwNDUzNA=="}, "originalCommit": {"oid": "6e6adf5113339b10bcc48b8d8de5541dc0d17ab8"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NTMxNjY1OnYy", "diffSide": "RIGHT", "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/specific/CruiseControlUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMzoyNDowOVrOGbJ7oQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMzoyNDowOVrOGbJ7oQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTEyNzQ1Nw==", "bodyText": "Maybe you can use better name for this method? Something like callApi ? But it's just a suggestion", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3101#discussion_r431127457", "createdAt": "2020-05-27T13:24:09Z", "author": {"login": "Frawless"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/specific/CruiseControlUtils.java", "diffHunk": "@@ -29,8 +32,37 @@\n     private static final String CRUISE_CONTROL_MODEL_TRAINING_SAMPLES_TOPIC = \"strimzi.cruisecontrol.modeltrainingsamples\"; // partitions 32 , rf - 2\n     private static final String CRUISE_CONTROL_PARTITION_METRICS_SAMPLES_TOPIC = \"strimzi.cruisecontrol.partitionmetricsamples\"; // partitions 32 , rf - 2\n \n+    private static final int CRUISE_CONTROL_DEFAULT_PORT = 9090;\n+    private static final String CRUISE_CONTROL_ENDPOINT = \"/kafkacruisecontrol/\";\n+\n     private CruiseControlUtils() { }\n \n+    public enum SupportedHttpMethods {\n+        GET,\n+        POST\n+    }\n+\n+    public enum CruiseControlEndpoints {\n+        STATE,\n+        REBALANCE,\n+        STOP_PROPOSAL_EXECUTION,\n+        USER_TASKS\n+    }\n+\n+    @SuppressWarnings(\"Regexp\")\n+    @SuppressFBWarnings(\"DM_CONVERT_CASE\")\n+    public static String call(SupportedHttpMethods method, CruiseControlEndpoints endpoint) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e6adf5113339b10bcc48b8d8de5541dc0d17ab8"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NTk4OTMxOnYy", "diffSide": "RIGHT", "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/specific/CruiseControlUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNTozNjoxNlrOGbQrqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNTo0NDo1M1rOGbRFBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIzODA1OA==", "bodyText": "it's not an endpoint on its own, should we call it CRUISE_CONTROL_BASE_ENDPOINT or maybe better CRUISE_CONTROL_ENDPOINT_BASE? @tomncooper wdyt? Or using ROOT instead of BASE ...", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3101#discussion_r431238058", "createdAt": "2020-05-27T15:36:16Z", "author": {"login": "ppatierno"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/specific/CruiseControlUtils.java", "diffHunk": "@@ -29,8 +32,37 @@\n     private static final String CRUISE_CONTROL_MODEL_TRAINING_SAMPLES_TOPIC = \"strimzi.cruisecontrol.modeltrainingsamples\"; // partitions 32 , rf - 2\n     private static final String CRUISE_CONTROL_PARTITION_METRICS_SAMPLES_TOPIC = \"strimzi.cruisecontrol.partitionmetricsamples\"; // partitions 32 , rf - 2\n \n+    private static final int CRUISE_CONTROL_DEFAULT_PORT = 9090;\n+    private static final String CRUISE_CONTROL_ENDPOINT = \"/kafkacruisecontrol/\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e6adf5113339b10bcc48b8d8de5541dc0d17ab8"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI0NDU1MQ==", "bodyText": "Yeah all the endpoints start with this and it is not endpoint on its own AFAIK", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3101#discussion_r431244551", "createdAt": "2020-05-27T15:44:53Z", "author": {"login": "tomncooper"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/specific/CruiseControlUtils.java", "diffHunk": "@@ -29,8 +32,37 @@\n     private static final String CRUISE_CONTROL_MODEL_TRAINING_SAMPLES_TOPIC = \"strimzi.cruisecontrol.modeltrainingsamples\"; // partitions 32 , rf - 2\n     private static final String CRUISE_CONTROL_PARTITION_METRICS_SAMPLES_TOPIC = \"strimzi.cruisecontrol.partitionmetricsamples\"; // partitions 32 , rf - 2\n \n+    private static final int CRUISE_CONTROL_DEFAULT_PORT = 9090;\n+    private static final String CRUISE_CONTROL_ENDPOINT = \"/kafkacruisecontrol/\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIzODA1OA=="}, "originalCommit": {"oid": "6e6adf5113339b10bcc48b8d8de5541dc0d17ab8"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NTk5MTk0OnYy", "diffSide": "RIGHT", "path": "systemtest/src/test/java/io/strimzi/systemtest/cruisecontrol/CruiseControlApiST.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNTozNjo1NlrOGbQtcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNTozNjo1NlrOGbQtcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIzODUxMw==", "bodyText": "CruiseControlApiST", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3101#discussion_r431238513", "createdAt": "2020-05-27T15:36:56Z", "author": {"login": "ppatierno"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/cruisecontrol/CruiseControlApiST.java", "diffHunk": "@@ -0,0 +1,143 @@\n+/*\n+ * Copyright Strimzi authors.\n+ * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n+ */\n+package io.strimzi.systemtest.cruisecontrol;\n+\n+import io.strimzi.systemtest.BaseST;\n+import io.strimzi.systemtest.resources.KubernetesResource;\n+import io.strimzi.systemtest.resources.ResourceManager;\n+import io.strimzi.systemtest.resources.crd.KafkaResource;\n+import io.strimzi.systemtest.utils.specific.CruiseControlUtils;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.MethodOrderer;\n+import org.junit.jupiter.api.Order;\n+import org.junit.jupiter.api.Tag;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.TestMethodOrder;\n+\n+import java.util.List;\n+\n+import static io.strimzi.systemtest.Constants.ACCEPTANCE;\n+import static io.strimzi.systemtest.Constants.CRUISE_CONTROL;\n+import static io.strimzi.systemtest.Constants.REGRESSION;\n+import static org.hamcrest.CoreMatchers.containsString;\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.CoreMatchers.not;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+\n+@Tag(REGRESSION)\n+@Tag(CRUISE_CONTROL)\n+@TestMethodOrder(MethodOrderer.OrderAnnotation.class)\n+public class CruiseControlApiST extends BaseST {\n+\n+    private static final Logger LOGGER = LogManager.getLogger(CruiseControlConfigurationST.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e6adf5113339b10bcc48b8d8de5541dc0d17ab8"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1573, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}