{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1ODI0ODgy", "number": 2439, "title": "Delete zk node after user is removed", "bodyText": "Signed-off-by: Stanislav Knot sknot@redhat.com\nType of change\n\nBugfix\n\nDescription\nFixes #2411\nupdated related ST\nChecklist\nPlease go through this checklist and make sure all applicable tasks have been done\n\n Update/write design documentation in ./design\n Write tests\n Make sure all tests pass\n Update documentation\n Check RBAC rights for Kubernetes / OpenShift roles\n Try your changes from Pod inside your Kubernetes and OpenShift cluster, not just locally\n Reference relevant issue(s) and close them after merging\n Update CHANGELOG.md", "createdAt": "2020-01-22T12:20:43Z", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2439", "merged": true, "mergeCommit": {"oid": "f8b008ed57bb53df949da47e766a2400189bea10"}, "closed": true, "closedAt": "2020-01-26T13:40:55Z", "author": {"login": "sknot-rh"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb80xqzAH2gAyMzY1ODI0ODgyOmI1YTY3MTYwOWIzNTg1NTUzYjg1NThlNjQxYjk4N2U0MjQzMjNkYmI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb9fAOqgFqTM0Nzk1MzA5OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b5a671609b3585553b8558e641b987e424323dbb", "author": {"user": {"login": "sknot-rh", "name": "Stanislav Knot"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/b5a671609b3585553b8558e641b987e424323dbb", "committedDate": "2020-01-22T12:19:42Z", "message": "Delete zk node after user is removed\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2NjA5MTM0", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2439#pullrequestreview-346609134", "createdAt": "2020-01-22T14:04:19Z", "commit": {"oid": "b5a671609b3585553b8558e641b987e424323dbb"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNDowNDoxOVrOFgdKnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNDoxMDowNFrOFgdXAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU3NjYwNQ==", "bodyText": "Wouldn't configJsonIsEmpty() be a better name?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2439#discussion_r369576605", "createdAt": "2020-01-22T14:04:19Z", "author": {"login": "tombentley"}, "path": "user-operator/src/main/java/io/strimzi/operator/user/operator/KafkaUserQuotasOperator.java", "diffHunk": "@@ -195,6 +195,14 @@ boolean exists(String username) {\n         return false;\n     }\n \n+    private boolean jsonConfigEmpty(byte[] data) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5a671609b3585553b8558e641b987e424323dbb"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU3OTU2OQ==", "bodyText": "So remove removeQuotasFromJsonUser takes a byte[], parses it as JSON, removes something, serializes it and then jsonConfigEmpty() parses it again? That's not ideal. Is there a reason why removeQuotasFromJsonUser() doesn't return the JsonObject and let the caller serialize it if&when they need to? jsonConfigEmpty would then take a JsonObject, but that's better than passing around these byte[] and having each method parse and reparse it.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2439#discussion_r369579569", "createdAt": "2020-01-22T14:09:44Z", "author": {"login": "tombentley"}, "path": "user-operator/src/main/java/io/strimzi/operator/user/operator/KafkaUserQuotasOperator.java", "diffHunk": "@@ -206,7 +214,13 @@ public void delete(String username) {\n \n         if (data != null)   {\n             log.debug(\"Deleting quotas for user {}\", username);\n-            zkClient.writeData(\"/config/users/\" + username, removeQuotasFromJsonUser(data));\n+            byte[] deleteJson = removeQuotasFromJsonUser(data);\n+            if (jsonConfigEmpty(deleteJson)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5a671609b3585553b8558e641b987e424323dbb"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU3OTc3OQ==", "bodyText": "Again jsonConfigIsEmpty", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2439#discussion_r369579779", "createdAt": "2020-01-22T14:10:04Z", "author": {"login": "tombentley"}, "path": "user-operator/src/main/java/io/strimzi/operator/user/operator/ScramShaCredentials.java", "diffHunk": "@@ -56,6 +57,14 @@ public void createOrUpdate(String username, String password) {\n         notifyChanges(username);\n     }\n \n+    private boolean jsonConfigEmpty(byte[] data) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5a671609b3585553b8558e641b987e424323dbb"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e20cca4a056cf8630416feaf37dc0adfe1ecbf96", "author": {"user": {"login": "sknot-rh", "name": "Stanislav Knot"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/e20cca4a056cf8630416feaf37dc0adfe1ecbf96", "committedDate": "2020-01-22T14:34:11Z", "message": "comment\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c34c69d6b340c3aaae10eb1b87af5fa8818041da", "author": {"user": {"login": "sknot-rh", "name": "Stanislav Knot"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/c34c69d6b340c3aaae10eb1b87af5fa8818041da", "committedDate": "2020-01-22T15:43:32Z", "message": "checkstyle\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2NzAxODUx", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2439#pullrequestreview-346701851", "createdAt": "2020-01-22T15:59:09Z", "commit": {"oid": "c34c69d6b340c3aaae10eb1b87af5fa8818041da"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3MTEzNzU2", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2439#pullrequestreview-347113756", "createdAt": "2020-01-23T08:07:38Z", "commit": {"oid": "c34c69d6b340c3aaae10eb1b87af5fa8818041da"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwODowNzozOFrOFg1g4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwODowNzozOFrOFg1g4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk3NTUyMQ==", "bodyText": "Stupid question, but do we test these things also in ITs? Assuming we have ITs for this with a real Zoo and Kafka (I know there are some open issues). That would help to test this already at Travis.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2439#discussion_r369975521", "createdAt": "2020-01-23T08:07:38Z", "author": {"login": "scholzj"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/UserST.java", "diffHunk": "@@ -171,12 +171,19 @@ void testUserWithQuotas() {\n         assertThat(result.out().contains(\"producer_byte_rate=\" + prodRate), is(true));\n         assertThat(result.out().contains(\"consumer_byte_rate=\" + consRate), is(true));\n \n+        String zkListCommand = \"sh /opt/kafka/bin/zookeeper-shell.sh localhost:21810 <<< 'ls /config/users'\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c34c69d6b340c3aaae10eb1b87af5fa8818041da"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3MTU1NzQ0", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2439#pullrequestreview-347155744", "createdAt": "2020-01-23T09:27:25Z", "commit": {"oid": "c34c69d6b340c3aaae10eb1b87af5fa8818041da"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3MTU3MjYw", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2439#pullrequestreview-347157260", "createdAt": "2020-01-23T09:29:50Z", "commit": {"oid": "c34c69d6b340c3aaae10eb1b87af5fa8818041da"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwOToyOTo1MVrOFg3m8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwOToyOTo1MVrOFg3m8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDAwOTg0Mw==", "bodyText": "I think we need to serialize here.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2439#discussion_r370009843", "createdAt": "2020-01-23T09:29:51Z", "author": {"login": "tombentley"}, "path": "user-operator/src/main/java/io/strimzi/operator/user/operator/ScramShaCredentials.java", "diffHunk": "@@ -76,8 +73,8 @@ public void delete(String username) {\n \n         if (data != null)   {\n             log.debug(\"Deleting {} credentials for user {}\", mechanism.mechanismName(), username);\n-            byte[] deletedJson = deleteUserJson(data);\n-            if (jsonConfigEmpty(deletedJson)) {\n+            JsonObject deletedJson = deleteUserJson(data);\n+            if (configJsonIsEmpty(deletedJson)) {\n                 zkClient.deleteRecursive(\"/config/users/\" + username);\n             } else {\n                 zkClient.writeData(\"/config/users/\" + username, deletedJson);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c34c69d6b340c3aaae10eb1b87af5fa8818041da"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39f628583363f5cf2bcdef674d80bc88f8021a43", "author": {"user": {"login": "sknot-rh", "name": "Stanislav Knot"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/39f628583363f5cf2bcdef674d80bc88f8021a43", "committedDate": "2020-01-24T09:57:36Z", "message": "comments\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3OTUzMDk5", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2439#pullrequestreview-347953099", "createdAt": "2020-01-24T13:31:37Z", "commit": {"oid": "39f628583363f5cf2bcdef674d80bc88f8021a43"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1847, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}