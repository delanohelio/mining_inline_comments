{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2NDAwNjcy", "number": 2447, "title": "ST: Add test coverage for improvements for connect and connector operator", "bodyText": "Signed-off-by: Jakub Stejskal xstejs24@gmail.com\nType of change\n\nEnhancement / new feature\n\nDescription\nAdd system test coverage for #2425 and #2324\nChecklist\n\n Write tests\n Make sure all tests pass", "createdAt": "2020-01-23T14:47:56Z", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2447", "merged": true, "mergeCommit": {"oid": "0d5fcd113216f1a4867384d6e0cb670f8caa15ce"}, "closed": true, "closedAt": "2020-01-27T18:35:36Z", "author": {"login": "Frawless"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb9LOOQAH2gAyMzY2NDAwNjcyOjAxMjIzZDNjZGIwOGNjNjE4YTEzZGRiZTY4MDA4ZDc1M2IxYWFiNjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb-ZssugFqTM0ODU0MDk5Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "01223d3cdb08cc618a13ddbe68008d753b1aab67", "author": {"user": {"login": "Frawless", "name": "Jakub Stejskal"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/01223d3cdb08cc618a13ddbe68008d753b1aab67", "committedDate": "2020-01-23T14:28:48Z", "message": "Add test coverage for improvements for connect and connector operator\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93ffc60f97b7f6d0eb3f4e3caf775a38bdc8472a", "author": {"user": {"login": "Frawless", "name": "Jakub Stejskal"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/93ffc60f97b7f6d0eb3f4e3caf775a38bdc8472a", "committedDate": "2020-01-23T14:47:39Z", "message": "Add s2i status checks\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3NjUyMDEy", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2447#pullrequestreview-347652012", "createdAt": "2020-01-23T22:29:22Z", "commit": {"oid": "93ffc60f97b7f6d0eb3f4e3caf775a38bdc8472a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3OTc4NzEx", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2447#pullrequestreview-347978711", "createdAt": "2020-01-24T14:14:21Z", "commit": {"oid": "93ffc60f97b7f6d0eb3f4e3caf775a38bdc8472a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MDAwOTAx", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2447#pullrequestreview-348000901", "createdAt": "2020-01-24T14:46:40Z", "commit": {"oid": "93ffc60f97b7f6d0eb3f4e3caf775a38bdc8472a"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNDo0Njo0MVrOFhf7VQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNDo0Nzo0N1rOFhf9gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY3MDQyMQ==", "bodyText": "Are you saying that the NotReady has a NullPointerException as its reason? If so we should fix that.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2447#discussion_r370670421", "createdAt": "2020-01-24T14:46:41Z", "author": {"login": "tombentley"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/CustomResourceStatusST.java", "diffHunk": "@@ -250,6 +253,20 @@ void testKafkaConnectS2IStatus() throws InterruptedException {\n         assertKafkaConnectS2IStatus(3, connectS2IUrl, connectS2IDeploymentConfigName);\n     }\n \n+    @Test\n+    void testKafkaConnectorWithoutClusterConfig() {\n+        // This test check NPE when connect cluster is not specified in labels", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93ffc60f97b7f6d0eb3f4e3caf775a38bdc8472a"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY3MDkyNg==", "bodyText": "We should reuse the checkConnectorInStatus().", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2447#discussion_r370670926", "createdAt": "2020-01-24T14:47:40Z", "author": {"login": "tombentley"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/CustomResourceStatusST.java", "diffHunk": "@@ -416,13 +433,31 @@ void assertKafkaConnectStatus(long expectedObservedGeneration, String expectedUr\n         KafkaConnectStatus kafkaConnectStatus = KafkaConnectResource.kafkaConnectClient().inNamespace(NAMESPACE).withName(CLUSTER_NAME).get().getStatus();\n         assertThat(\"Kafka Connect cluster status has incorrect Observed Generation\", kafkaConnectStatus.getObservedGeneration(), is(expectedObservedGeneration));\n         assertThat(\"Kafka Connect cluster status has incorrect URL\", kafkaConnectStatus.getUrl(), is(expectedUrl));\n+\n+        List<ConnectorPlugin> pluginsList = kafkaConnectStatus.getConnectorPlugins();\n+        assertThat(pluginsList, notNullValue());\n+        List<String> pluginsClasses = pluginsList.stream().map(p -> p.getConnectorClass()).collect(Collectors.toList());\n+        assertThat(pluginsClasses, hasItems(\"org.apache.kafka.connect.file.FileStreamSinkConnector\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93ffc60f97b7f6d0eb3f4e3caf775a38bdc8472a"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY3MDk3OQ==", "bodyText": "We should reuse the checkConnectorInStatus().", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2447#discussion_r370670979", "createdAt": "2020-01-24T14:47:47Z", "author": {"login": "tombentley"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/CustomResourceStatusST.java", "diffHunk": "@@ -416,13 +433,31 @@ void assertKafkaConnectStatus(long expectedObservedGeneration, String expectedUr\n         KafkaConnectStatus kafkaConnectStatus = KafkaConnectResource.kafkaConnectClient().inNamespace(NAMESPACE).withName(CLUSTER_NAME).get().getStatus();\n         assertThat(\"Kafka Connect cluster status has incorrect Observed Generation\", kafkaConnectStatus.getObservedGeneration(), is(expectedObservedGeneration));\n         assertThat(\"Kafka Connect cluster status has incorrect URL\", kafkaConnectStatus.getUrl(), is(expectedUrl));\n+\n+        List<ConnectorPlugin> pluginsList = kafkaConnectStatus.getConnectorPlugins();\n+        assertThat(pluginsList, notNullValue());\n+        List<String> pluginsClasses = pluginsList.stream().map(p -> p.getConnectorClass()).collect(Collectors.toList());\n+        assertThat(pluginsClasses, hasItems(\"org.apache.kafka.connect.file.FileStreamSinkConnector\",\n+                \"org.apache.kafka.connect.file.FileStreamSourceConnector\",\n+                \"org.apache.kafka.connect.mirror.MirrorCheckpointConnector\",\n+                \"org.apache.kafka.connect.mirror.MirrorHeartbeatConnector\",\n+                \"org.apache.kafka.connect.mirror.MirrorSourceConnector\"));\n     }\n \n     void assertKafkaConnectS2IStatus(long expectedObservedGeneration, String expectedUrl, String expectedConfigName) {\n         KafkaConnectS2Istatus kafkaConnectS2IStatus = KafkaConnectS2IResource.kafkaConnectS2IClient().inNamespace(NAMESPACE).withName(CONNECTS2I_CLUSTER_NAME).get().getStatus();\n         assertThat(\"Kafka ConnectS2I cluster status has incorrect Observed Generation\", kafkaConnectS2IStatus.getObservedGeneration(), is(expectedObservedGeneration));\n         assertThat(\"Kafka ConnectS2I cluster status has incorrect URL\", kafkaConnectS2IStatus.getUrl(), is(expectedUrl));\n         assertThat(\"Kafka ConnectS2I cluster status has incorrect BuildConfigName\", kafkaConnectS2IStatus.getBuildConfigName(), is(expectedConfigName));\n+\n+        List<ConnectorPlugin> pluginsList = kafkaConnectS2IStatus.getConnectorPlugins();\n+        assertThat(pluginsList, notNullValue());\n+        List<String> pluginsClasses = pluginsList.stream().map(p -> p.getConnectorClass()).collect(Collectors.toList());\n+        assertThat(pluginsClasses, hasItems(\"org.apache.kafka.connect.file.FileStreamSinkConnector\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93ffc60f97b7f6d0eb3f4e3caf775a38bdc8472a"}, "originalPosition": 67}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "855352ece8b4561b8575206962bf71a0cc41cd90", "author": {"user": {"login": "Frawless", "name": "Jakub Stejskal"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/855352ece8b4561b8575206962bf71a0cc41cd90", "committedDate": "2020-01-24T15:30:32Z", "message": "Fixup comments\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4NTI1NDkz", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2447#pullrequestreview-348525493", "createdAt": "2020-01-27T09:28:18Z", "commit": {"oid": "855352ece8b4561b8575206962bf71a0cc41cd90"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4NTQwOTk3", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2447#pullrequestreview-348540997", "createdAt": "2020-01-27T09:54:41Z", "commit": {"oid": "855352ece8b4561b8575206962bf71a0cc41cd90"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1856, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}