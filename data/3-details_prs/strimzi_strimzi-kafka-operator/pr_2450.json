{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2Nzg2MDcz", "number": 2450, "title": "Edit testCustomAndUpdatedValues with checks for missing kafka configuration", "bodyText": "Type of change\n\nRefactoring\n\nDescription\n\nAdd method for checking kafka configuration\nAdd methods for resolving kafka configuration\nEdit test checks for missing kafka env\n\nChecklist\n\n Write tests\n Make sure all tests pass", "createdAt": "2020-01-24T11:09:07Z", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2450", "merged": true, "mergeCommit": {"oid": "b75bbbfaa89fe4bac905d3ce8b9605903381545d"}, "closed": true, "closedAt": "2020-02-03T22:22:51Z", "author": {"login": "im-konge"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb9dSTggBqjI5NzY5MjY3MjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcAtTDIgBqjMwMDIyNzcxODE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d74daf2eacafd4a4eb390d4bbcf57fd9afd38401", "author": {"user": null}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/d74daf2eacafd4a4eb390d4bbcf57fd9afd38401", "committedDate": "2020-01-24T09:58:56Z", "message": "Edit testCustomAndUpdatedValues with checks for kafka configuration\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>"}, "afterCommit": {"oid": "064ebd2f076d32eec37664e1f7f9871dd1c8b062", "author": {"user": null}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/064ebd2f076d32eec37664e1f7f9871dd1c8b062", "committedDate": "2020-01-24T11:30:20Z", "message": "Edit testCustomAndUpdatedValues with checks for kafka configuration\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3OTcxMzMx", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2450#pullrequestreview-347971331", "createdAt": "2020-01-24T14:02:55Z", "commit": {"oid": "064ebd2f076d32eec37664e1f7f9871dd1c8b062"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNDowMjo1NVrOFhejxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNDowNzo1MVrOFhetQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY0ODAwNw==", "bodyText": "Move it to some utils class.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2450#discussion_r370648007", "createdAt": "2020-01-24T14:02:55Z", "author": {"login": "Frawless"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/BaseST.java", "diffHunk": "@@ -376,6 +379,58 @@ protected void checkComponentConfiguration(String podNamePrefix, String containe\n         }\n     }\n \n+    private Properties stringToProperties(String str) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "064ebd2f076d32eec37664e1f7f9871dd1c8b062"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY0ODA0MQ==", "bodyText": "Move it to some utils class.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2450#discussion_r370648041", "createdAt": "2020-01-24T14:02:59Z", "author": {"login": "Frawless"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/BaseST.java", "diffHunk": "@@ -376,6 +379,58 @@ protected void checkComponentConfiguration(String podNamePrefix, String containe\n         }\n     }\n \n+    private Properties stringToProperties(String str) {\n+        Properties result = new Properties();\n+        List<String> list = getLinesWithoutCommentsAndEmptyLines(str);\n+        for (String line: list) {\n+            String[] split = line.split(\"=\");\n+            if (split.length == 1) {\n+                result.put(split[0], \"\");\n+            } else {\n+                result.put(split[0], split[1]);\n+            }\n+        }\n+        return result;\n+    }\n+\n+    private Properties configMap2Properties(ConfigMap cm) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "064ebd2f076d32eec37664e1f7f9871dd1c8b062"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY0ODEzMA==", "bodyText": "Move it to some utils class.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2450#discussion_r370648130", "createdAt": "2020-01-24T14:03:11Z", "author": {"login": "Frawless"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/BaseST.java", "diffHunk": "@@ -376,6 +379,58 @@ protected void checkComponentConfiguration(String podNamePrefix, String containe\n         }\n     }\n \n+    private Properties stringToProperties(String str) {\n+        Properties result = new Properties();\n+        List<String> list = getLinesWithoutCommentsAndEmptyLines(str);\n+        for (String line: list) {\n+            String[] split = line.split(\"=\");\n+            if (split.length == 1) {\n+                result.put(split[0], \"\");\n+            } else {\n+                result.put(split[0], split[1]);\n+            }\n+        }\n+        return result;\n+    }\n+\n+    private Properties configMap2Properties(ConfigMap cm) {\n+        return stringToProperties(cm.getData().get(\"server.config\"));\n+    }\n+\n+    private List<String> getLinesWithoutCommentsAndEmptyLines(String config) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "064ebd2f076d32eec37664e1f7f9871dd1c8b062"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY0OTg3Mw==", "bodyText": "I think use here classic for is more readable.\nYou can loop over config items and some this: assertThat(properties, hasEntry(configEntry));", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2450#discussion_r370649873", "createdAt": "2020-01-24T14:06:38Z", "author": {"login": "Frawless"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/BaseST.java", "diffHunk": "@@ -376,6 +379,58 @@ protected void checkComponentConfiguration(String podNamePrefix, String containe\n         }\n     }\n \n+    private Properties stringToProperties(String str) {\n+        Properties result = new Properties();\n+        List<String> list = getLinesWithoutCommentsAndEmptyLines(str);\n+        for (String line: list) {\n+            String[] split = line.split(\"=\");\n+            if (split.length == 1) {\n+                result.put(split[0], \"\");\n+            } else {\n+                result.put(split[0], split[1]);\n+            }\n+        }\n+        return result;\n+    }\n+\n+    private Properties configMap2Properties(ConfigMap cm) {\n+        return stringToProperties(cm.getData().get(\"server.config\"));\n+    }\n+\n+    private List<String> getLinesWithoutCommentsAndEmptyLines(String config) {\n+        List<String> allLines = Arrays.asList(config.split(\"\\\\r?\\\\n\"));\n+        List<String> validLines = new ArrayList<>();\n+\n+        for (String line : allLines)    {\n+            if (!line.replace(\" \", \"\").startsWith(\"#\") && !line.isEmpty())   {\n+                validLines.add(line.replace(\" \", \"\"));\n+            }\n+        }\n+        return validLines;\n+    }\n+\n+    protected void checkKafkaConfiguration(String podNamePrefix, Map<String, Object> config, String clusterName) {\n+        LOGGER.info(\"Checking kafka configuration\");\n+        List<Pod> pods = kubeClient().listPodsByPrefixInName(podNamePrefix);\n+\n+        Properties properties = configMap2Properties(kubeClient().getConfigMap(clusterName + \"-kafka-config\"));\n+\n+        config.forEach((key, val) -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "064ebd2f076d32eec37664e1f7f9871dd1c8b062"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY1MDQzNA==", "bodyText": "same as above", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2450#discussion_r370650434", "createdAt": "2020-01-24T14:07:51Z", "author": {"login": "Frawless"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/BaseST.java", "diffHunk": "@@ -376,6 +379,58 @@ protected void checkComponentConfiguration(String podNamePrefix, String containe\n         }\n     }\n \n+    private Properties stringToProperties(String str) {\n+        Properties result = new Properties();\n+        List<String> list = getLinesWithoutCommentsAndEmptyLines(str);\n+        for (String line: list) {\n+            String[] split = line.split(\"=\");\n+            if (split.length == 1) {\n+                result.put(split[0], \"\");\n+            } else {\n+                result.put(split[0], split[1]);\n+            }\n+        }\n+        return result;\n+    }\n+\n+    private Properties configMap2Properties(ConfigMap cm) {\n+        return stringToProperties(cm.getData().get(\"server.config\"));\n+    }\n+\n+    private List<String> getLinesWithoutCommentsAndEmptyLines(String config) {\n+        List<String> allLines = Arrays.asList(config.split(\"\\\\r?\\\\n\"));\n+        List<String> validLines = new ArrayList<>();\n+\n+        for (String line : allLines)    {\n+            if (!line.replace(\" \", \"\").startsWith(\"#\") && !line.isEmpty())   {\n+                validLines.add(line.replace(\" \", \"\"));\n+            }\n+        }\n+        return validLines;\n+    }\n+\n+    protected void checkKafkaConfiguration(String podNamePrefix, Map<String, Object> config, String clusterName) {\n+        LOGGER.info(\"Checking kafka configuration\");\n+        List<Pod> pods = kubeClient().listPodsByPrefixInName(podNamePrefix);\n+\n+        Properties properties = configMap2Properties(kubeClient().getConfigMap(clusterName + \"-kafka-config\"));\n+\n+        config.forEach((key, val) -> {\n+            assertThat(properties.keySet().contains(key), is(true));\n+            assertThat(properties.getProperty(key), is(val));\n+        });\n+\n+        for (Pod pod: pods) {\n+            ExecResult result = cmdKubeClient().execInPod(pod.getMetadata().getName(), \"/bin/bash\", \"-c\", \"cat /tmp/strimzi.properties\");\n+            Properties execProperties = stringToProperties(result.out());\n+\n+            config.forEach((key, val) -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "064ebd2f076d32eec37664e1f7f9871dd1c8b062"}, "originalPosition": 73}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "064ebd2f076d32eec37664e1f7f9871dd1c8b062", "author": {"user": null}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/064ebd2f076d32eec37664e1f7f9871dd1c8b062", "committedDate": "2020-01-24T11:30:20Z", "message": "Edit testCustomAndUpdatedValues with checks for kafka configuration\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>"}, "afterCommit": {"oid": "b5298f17ca828d49b846066b155672d8cea07488", "author": {"user": null}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/b5298f17ca828d49b846066b155672d8cea07488", "committedDate": "2020-01-28T07:33:10Z", "message": "Edit testCustomAndUpdatedValues with checks for kafka configuration\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1c40ec43a60053f443571ee109cc958da053f7d9", "author": {"user": null}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/1c40ec43a60053f443571ee109cc958da053f7d9", "committedDate": "2020-01-28T09:23:45Z", "message": "Add checkKafkaConfiguration from BaseST\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>"}, "afterCommit": {"oid": "e005cf64402c0da667b04db37f09b664a3371939", "author": {"user": null}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/e005cf64402c0da667b04db37f09b664a3371939", "committedDate": "2020-01-28T09:34:48Z", "message": "Add checkKafkaConfiguration from BaseST\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MzA1MzYz", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2450#pullrequestreview-349305363", "createdAt": "2020-01-28T11:32:10Z", "commit": {"oid": "e005cf64402c0da667b04db37f09b664a3371939"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MzMzMzQ2", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2450#pullrequestreview-349333346", "createdAt": "2020-01-28T12:23:48Z", "commit": {"oid": "e005cf64402c0da667b04db37f09b664a3371939"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MzQ2Njgw", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2450#pullrequestreview-349346680", "createdAt": "2020-01-28T12:47:51Z", "commit": {"oid": "e005cf64402c0da667b04db37f09b664a3371939"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMjo0Nzo1MVrOFijt3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMjo0Nzo1MVrOFijt3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc4MTA4Ng==", "bodyText": "what about?\nresult.put(split[0], split.length == 1 ? \"\" : split[1])", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2450#discussion_r371781086", "createdAt": "2020-01-28T12:47:51Z", "author": {"login": "ppatierno"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/StUtils.java", "diffHunk": "@@ -176,4 +178,34 @@ public static void checkCologForUsedVariable(String varName) {\n     public static String globalVariableJsonPathBuilder(int containerIndex, String envVar) {\n         return \"$.spec.containers[\" + containerIndex + \"].env[?(@.name=='\" + envVar + \"')].value\";\n     }\n+\n+    public static Properties stringToProperties(String str) {\n+        Properties result = new Properties();\n+        List<String> list = getLinesWithoutCommentsAndEmptyLines(str);\n+        for (String line: list) {\n+            String[] split = line.split(\"=\");\n+            if (split.length == 1) {\n+                result.put(split[0], \"\");\n+            } else {\n+                result.put(split[0], split[1]);\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e005cf64402c0da667b04db37f09b664a3371939"}, "originalPosition": 30}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e005cf64402c0da667b04db37f09b664a3371939", "author": {"user": null}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/e005cf64402c0da667b04db37f09b664a3371939", "committedDate": "2020-01-28T09:34:48Z", "message": "Add checkKafkaConfiguration from BaseST\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>"}, "afterCommit": {"oid": "25eba960a4c1273fdb92fad9551a82b40a90c8ed", "author": {"user": null}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/25eba960a4c1273fdb92fad9551a82b40a90c8ed", "committedDate": "2020-01-29T09:24:50Z", "message": "Change if/else to ternary operator in stringToProperties function\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4b6de0328bdb384eb4de14d08f6432c65107ab0", "author": {"user": null}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/a4b6de0328bdb384eb4de14d08f6432c65107ab0", "committedDate": "2020-02-03T13:49:15Z", "message": "Add asserts for checking kafka configuration\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03a7cd1992352953845d0e54ba1c49439643ab69", "author": {"user": null}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/03a7cd1992352953845d0e54ba1c49439643ab69", "committedDate": "2020-02-03T13:49:15Z", "message": "Edit testCustomAndUpdatedValues with checks for kafka configuration\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e38456e223396882328ed7348172f14ae96f4ea", "author": {"user": null}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/8e38456e223396882328ed7348172f14ae96f4ea", "committedDate": "2020-02-03T13:49:15Z", "message": "Add utils for resolving kafka configuration\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ca26a8a544c2b50c1774ac7a68d0e73835dc85f", "author": {"user": null}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/6ca26a8a544c2b50c1774ac7a68d0e73835dc85f", "committedDate": "2020-02-03T13:49:15Z", "message": "Change forEach to for to be more readable\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c050592646a51080798f489f4f0b73f6974c3d6b", "author": {"user": null}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/c050592646a51080798f489f4f0b73f6974c3d6b", "committedDate": "2020-02-03T13:49:15Z", "message": "Remove checkKafkaConfiguration from BaseST and move it to KafkaST - single use method\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29091349a7a82f586934d007b8a68b07ef85e66a", "author": {"user": null}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/29091349a7a82f586934d007b8a68b07ef85e66a", "committedDate": "2020-02-03T13:51:38Z", "message": "Add checkKafkaConfiguration from BaseST\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d1ae2a64735d3ef930057d8eaee9d8019694852", "author": {"user": null}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/7d1ae2a64735d3ef930057d8eaee9d8019694852", "committedDate": "2020-02-03T13:51:38Z", "message": "Change if/else to ternary operator in stringToProperties function\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "25eba960a4c1273fdb92fad9551a82b40a90c8ed", "author": {"user": null}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/25eba960a4c1273fdb92fad9551a82b40a90c8ed", "committedDate": "2020-01-29T09:24:50Z", "message": "Change if/else to ternary operator in stringToProperties function\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>"}, "afterCommit": {"oid": "7d1ae2a64735d3ef930057d8eaee9d8019694852", "author": {"user": null}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/7d1ae2a64735d3ef930057d8eaee9d8019694852", "committedDate": "2020-02-03T13:51:38Z", "message": "Change if/else to ternary operator in stringToProperties function\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1860, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}