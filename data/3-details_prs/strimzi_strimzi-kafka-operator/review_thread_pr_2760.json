{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1MTAwMjkx", "number": 2760, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxNzo0ODo1MlrODsVjOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxNzo0ODo1MlrODsVjOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3ODE3MDE5OnYy", "diffSide": "RIGHT", "path": "mockkube/src/test/java/io/strimzi/test/io/strimzi/test/mockkube/MockKubeTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxNzo0ODo1MlrOF9LIQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxODoyOTozM1rOF9LYZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY4OTc5Mg==", "bodyText": "I know you didn't changed it, but should this be commented out?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2760#discussion_r399689792", "createdAt": "2020-03-28T17:48:52Z", "author": {"login": "scholzj"}, "path": "mockkube/src/test/java/io/strimzi/test/io/strimzi/test/mockkube/MockKubeTest.java", "diffHunk": "@@ -182,55 +179,51 @@ public void podNameScopedCreateListGetDelete(Class<RT> cls,\n         mixedOp.apply(client).withName(pod.getMetadata().getName()).create(pod);\n         assertThat(w.lastEvent().action, is(Watcher.Action.ADDED));\n         assertThat(w.lastEvent().resource, is(pod));\n-        try {\n-            mixedOp.apply(client).create(pod);\n-            fail();\n-        } catch (KubernetesClientException e) {\n-            assertThat(e.getMessage(), is(expectedResourceExistsMessage(pod)));\n-        }\n+        KubernetesClientException e = assertThrows(KubernetesClientException.class, () ->  mixedOp.apply(client).create(pod));\n+        assertThat(e.getMessage(), is(expectedResourceExistsMessage(pod)));\n \n         // List\n         List<RT> items = mixedOp.apply(client).list().getItems();\n-        assertThat(items.size(), is(1));\n+        assertThat(items, hasSize(1));\n         RT item = items.get(0);\n         item.getMetadata().setResourceVersion(null);\n         item.getMetadata().setGeneration(null);\n         assertThat(item, is(pod));\n \n         // List with namespace\n         items = mixedOp.apply(client).inNamespace(\"other\").list().getItems();\n-        // TODO assertEquals(0, items.size());\n+        // TODO assertThat(items.size(), is(0));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abb757cf33c430e8925152f77c5c78102534735d"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY5MzkyNw==", "bodyText": "I thought exactly this as well - I uncommented it out and the line fails.\nMy understanding is that this has been left commented out as a reminder that this should be passing but isn't...\nI.e. mixedOp.apply(client).inNamespace(\"other\").* should actually be behaving differently to how it currently is. (Incomplete work in the MockKube)\nSimilar for this other line in the same file:\n\n  \n    \n      strimzi-kafka-operator/mockkube/src/test/java/io/strimzi/test/io/strimzi/test/mockkube/MockKubeTest.java\n    \n    \n         Line 236\n      in\n      abb757c\n    \n    \n    \n    \n\n        \n          \n           // TODO assertNull(gotResource);", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2760#discussion_r399693927", "createdAt": "2020-03-28T18:29:33Z", "author": {"login": "samuel-hawker"}, "path": "mockkube/src/test/java/io/strimzi/test/io/strimzi/test/mockkube/MockKubeTest.java", "diffHunk": "@@ -182,55 +179,51 @@ public void podNameScopedCreateListGetDelete(Class<RT> cls,\n         mixedOp.apply(client).withName(pod.getMetadata().getName()).create(pod);\n         assertThat(w.lastEvent().action, is(Watcher.Action.ADDED));\n         assertThat(w.lastEvent().resource, is(pod));\n-        try {\n-            mixedOp.apply(client).create(pod);\n-            fail();\n-        } catch (KubernetesClientException e) {\n-            assertThat(e.getMessage(), is(expectedResourceExistsMessage(pod)));\n-        }\n+        KubernetesClientException e = assertThrows(KubernetesClientException.class, () ->  mixedOp.apply(client).create(pod));\n+        assertThat(e.getMessage(), is(expectedResourceExistsMessage(pod)));\n \n         // List\n         List<RT> items = mixedOp.apply(client).list().getItems();\n-        assertThat(items.size(), is(1));\n+        assertThat(items, hasSize(1));\n         RT item = items.get(0);\n         item.getMetadata().setResourceVersion(null);\n         item.getMetadata().setGeneration(null);\n         assertThat(item, is(pod));\n \n         // List with namespace\n         items = mixedOp.apply(client).inNamespace(\"other\").list().getItems();\n-        // TODO assertEquals(0, items.size());\n+        // TODO assertThat(items.size(), is(0));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY4OTc5Mg=="}, "originalCommit": {"oid": "abb757cf33c430e8925152f77c5c78102534735d"}, "originalPosition": 79}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 371, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}