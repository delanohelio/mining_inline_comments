{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyNjYwODE1", "number": 2744, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNzoyNjowOFrODqq1bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNzoyNjowOFrODqq1bA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MDY4NTg4OnYy", "diffSide": "RIGHT", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/ZookeeperScaler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNzoyNjowOFrOF6jn_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNzoyNjowOFrOF6jn_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk0NTQwNw==", "bodyText": "remove commented line", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2744#discussion_r396945407", "createdAt": "2020-03-24T07:26:08Z", "author": {"login": "ppatierno"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/ZookeeperScaler.java", "diffHunk": "@@ -64,12 +73,51 @@ protected ZookeeperScaler(Vertx vertx, ZooKeeperAdminProvider zooAdminProvider,\n         this.zooAdminProvider = zooAdminProvider;\n         this.zookeeperConnectionString = zookeeperConnectionString;\n         this.operationTimeoutMs = operationTimeoutMs;\n-        trustStorePassword = new String(Util.decodeFromSecret(clusterCaCertSecret, Ca.CA_STORE_PASSWORD), StandardCharsets.US_ASCII);\n-        trustStoreFile = Util.createFileStore(getClass().getName(), \"p12\", Util.decodeFromSecret(clusterCaCertSecret, Ca.CA_STORE));\n+\n+        // Setup truststore from PEM file in cluster CA secret\n+        // We cannot use P12 because of custom CAs which for simplicity provide only PEM\n+        PasswordGenerator pg = new PasswordGenerator(12);\n+        trustStorePassword = pg.generate();\n+        trustStoreFile = setupTrustStore(getClass().getName(), \"p12\", trustStorePassword.toCharArray(), Ca.cert(clusterCaCertSecret, Ca.CA_CRT));\n+        //trustStoreFile = Util.createFileStore(getClass().getName(), \"p12\", Util.decodeFromSecret(clusterCaCertSecret, Ca.CA_STORE));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4606b65601ba647561922c35b5c104de488ff482"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 360, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}