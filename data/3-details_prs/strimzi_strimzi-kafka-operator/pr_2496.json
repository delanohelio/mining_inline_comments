{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwMDc0Mzc2", "number": 2496, "title": "KafkaMirrorMaker2: Support MM2 connectors pause/resume and status", "bodyText": "Type of change\nEnhancement / new feature\nDescription\nBased on the enhancement to the KafkaConnector operator and spec in #2363, this PR uses the pause property in\nKafkaMirrorMaker2.spec.mirror.[sourceConnector|checkpointConnector|heartbeatConnector] to control pausing/resuming MirrorMaker 2.0 connectors running in a KafkaMirrorMaker2 deployment (which is a Kafka Connect cluster).\nThe PR also adds a connectors property to the KafkaMirrorMaker2.status to expose a list of all the configured MirrorMaker 2.0 connectors and their statuses. Each status is a JSON result of the\nGET /connectors/<MM2ConnectorName>/status endpoint. With this change a typical status for a KafkaMirrorMaker2 CR with a single mirror using the checkpointConnector and the sourceConnector looks like like this:\nstatus:\n  conditions:\n  - lastTransitionTime: \"2020-02-02T23:51:15.943Z\"\n    status: \"True\"\n    type: Ready\n  connectors:\n  - connector:\n      state: RUNNING\n      worker_id: 10.254.22.65:8083\n    name: my-cluster-source->my-cluster-target.MirrorCheckpointConnector\n    tasks:\n    - id: 0\n      state: RUNNING\n      worker_id: 10.254.22.65:8083\n    type: source\n  - connector:\n      state: PAUSED\n      worker_id: 10.254.22.65:8083\n    name: my-cluster-source->my-cluster-target.MirrorSourceConnector\n    tasks:\n    - id: 0\n      state: RUNNING\n      worker_id: 10.254.22.65:8083\n    type: source\n  observedGeneration: 2\n  url: http://my-cluster-mirrormaker2-api.mirrormaker2-cluster-test.svc:8083\n\n\nAs with the KafkaConnector PR, note that the REST API calls to /pause and /resume are asynchronous and the operator doesn't poll waiting for all tasks to stop. This means the status example above (with a PAUSED connector and a RUNNING task) would exist until the next reconciliation (when the status would be updated to show a PAUSED task--assuming the task had indeed stopped) even though the task was actually paused much sooner than that.\nSigned-off-by: Andrew Borley borley@uk.ibm.com", "createdAt": "2020-02-03T00:20:03Z", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2496", "merged": true, "mergeCommit": {"oid": "3e11e87f88d8bfe52f80e2449d68e8633bebb95d"}, "closed": true, "closedAt": "2020-02-13T23:33:10Z", "author": {"login": "ajborley"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcAo2u2AFqTM1MjA4OTQ5MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcEC4h0AFqTM1ODYwNTQxMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyMDg5NDkw", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2496#pullrequestreview-352089490", "createdAt": "2020-02-03T08:41:58Z", "commit": {"oid": "b47c336df743597aed48494fd2d841929d319578"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwODo0MTo1OFrOFkpsbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwODo0MTo1OFrOFkpsbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzk3NjE3Mw==", "bodyText": "How does this fit with the KafkaConnectorStatus class? It seems there is some overlap, I wonder if we can reuse it or something.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2496#discussion_r373976173", "createdAt": "2020-02-03T08:41:58Z", "author": {"login": "scholzj"}, "path": "api/src/main/java/io/strimzi/api/kafka/model/status/ConnectorStatus.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/*\n+ * Copyright Strimzi authors.\n+ * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n+ */\n+package io.strimzi.api.kafka.model.status;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n+\n+import io.strimzi.api.kafka.model.UnknownPropertyPreserving;\n+import io.strimzi.crdgenerator.annotations.Description;\n+import io.sundr.builder.annotations.Buildable;\n+import lombok.EqualsAndHashCode;\n+\n+import java.io.Serializable;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ * Representation of the status of a connector in the Kafka MirrorMaker 2.0 deployment\n+ */\n+@Buildable(\n+        editableEnabled = false,\n+        generateBuilderPackage = false,\n+        builderPackage = \"io.fabric8.kubernetes.api.builder\"\n+)\n+@JsonInclude(JsonInclude.Include.NON_DEFAULT)\n+@JsonPropertyOrder({ \"name\", \"status\" })\n+@EqualsAndHashCode\n+public class ConnectorStatus implements Serializable, UnknownPropertyPreserving {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b47c336df743597aed48494fd2d841929d319578"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0OTkxNjU1", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2496#pullrequestreview-354991655", "createdAt": "2020-02-07T08:22:17Z", "commit": {"oid": "b47c336df743597aed48494fd2d841929d319578"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwODoyMjoxN1rOFm1VOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwODoyMjoxN1rOFm1VOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI2Mzk5NQ==", "bodyText": "This looks to be more or less identical to the code we use for KafkaConnectors. Can we factor out a common method?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2496#discussion_r376263995", "createdAt": "2020-02-07T08:22:17Z", "author": {"login": "tombentley"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaMirrorMaker2AssemblyOperator.java", "diffHunk": "@@ -358,6 +362,47 @@ private static void addClusterToMirrorMaker2ConnectorConfig(Map<String, Object>\n         config.putAll(cluster.getAdditionalProperties());\n     }\n \n+    private Future<Map<String, Object>> reconcileMirrorMaker2Connector(Reconciliation reconciliation, KafkaMirrorMaker2 mirrorMaker2, KafkaConnectApi apiClient, String host, String connectorName, KafkaConnectorSpec connectorSpec, KafkaMirrorMaker2Status mirrorMaker2Status) {\n+        return apiClient.createOrUpdatePutRequest(host, KafkaConnectCluster.REST_API_PORT, connectorName, asJson(connectorSpec))\n+                .compose(ignored -> apiClient.statusWithBackOff(new BackOff(200L, 2, 6), host, KafkaConnectCluster.REST_API_PORT, connectorName))\n+                .compose(status -> {\n+                    Object path = ((Map) status.getOrDefault(\"connector\", emptyMap())).get(\"state\");\n+                    if (!(path instanceof String)) {\n+                        return Future.failedFuture(\"JSON response lacked $.connector.state\");\n+                    } else {\n+                        String state = (String) path;\n+                        boolean shouldPause = Boolean.TRUE.equals(connectorSpec.getPause());\n+                        if (\"RUNNING\".equals(state) && shouldPause) {\n+                            log.debug(\"{}: Pausing connector {}\", reconciliation, connectorName);\n+                            return apiClient.pause(host, KafkaConnectCluster.REST_API_PORT, connectorName)\n+                                    .compose(ignored ->\n+                                            apiClient.status(host, KafkaConnectCluster.REST_API_PORT,\n+                                                    connectorName));\n+                        } else if (\"PAUSED\".equals(state) && !shouldPause) {\n+                            log.debug(\"{}: Resuming connector {}\", reconciliation, connectorName);\n+                            return apiClient.resume(host, KafkaConnectCluster.REST_API_PORT,\n+                                    connectorName)\n+                                    .compose(ignored ->\n+                                            apiClient.status(host, KafkaConnectCluster.REST_API_PORT,\n+                                                    connectorName));\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b47c336df743597aed48494fd2d841929d319578"}, "originalPosition": 99}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b47c336df743597aed48494fd2d841929d319578", "author": {"user": {"login": "ajborley", "name": "Andrew Borley"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/b47c336df743597aed48494fd2d841929d319578", "committedDate": "2020-02-02T23:58:27Z", "message": "feat: Support pausing/resuming MM2 connectors via MM2 CR\n\n - Also reports the status of mirrorMaker 2.0 connectors in the CR\n\nSigned-off-by: Andrew Borley <borley@uk.ibm.com>"}, "afterCommit": {"oid": "14f3e371af284790b2673cf0aeaacd29b28d0162", "author": {"user": {"login": "ajborley", "name": "Andrew Borley"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/14f3e371af284790b2673cf0aeaacd29b28d0162", "committedDate": "2020-02-07T16:31:36Z", "message": "Address review comments\n\n - This commit supports using a list of maps in the CrdGenerator, which\nremoves the need for the ConnectorStatus class.\n - It also refactors the Connector and MM2 operators so that I'm not\nduplicating code.\n\nSigned-off-by: Andrew Borley <borley@uk.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f238f862cbae62aac7b0ebebdbe92370792c8681", "author": {"user": {"login": "ajborley", "name": "Andrew Borley"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/f238f862cbae62aac7b0ebebdbe92370792c8681", "committedDate": "2020-02-07T17:46:43Z", "message": "feat: Support pausing/resuming MM2 connectors via MM2 CR\n\n - Also reports the status of mirrorMaker 2.0 connectors in the CR\n\nSigned-off-by: Andrew Borley <borley@uk.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2f9246068f829f96bf147f936322bdbb0819c3f", "author": {"user": {"login": "ajborley", "name": "Andrew Borley"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/a2f9246068f829f96bf147f936322bdbb0819c3f", "committedDate": "2020-02-07T17:46:43Z", "message": "Address review comments\n\n - This commit supports using a list of maps in the CrdGenerator, which\nremoves the need for the ConnectorStatus class.\n - It also refactors the Connector and MM2 operators so that I'm not\nduplicating code.\n\nSigned-off-by: Andrew Borley <borley@uk.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "14f3e371af284790b2673cf0aeaacd29b28d0162", "author": {"user": {"login": "ajborley", "name": "Andrew Borley"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/14f3e371af284790b2673cf0aeaacd29b28d0162", "committedDate": "2020-02-07T16:31:36Z", "message": "Address review comments\n\n - This commit supports using a list of maps in the CrdGenerator, which\nremoves the need for the ConnectorStatus class.\n - It also refactors the Connector and MM2 operators so that I'm not\nduplicating code.\n\nSigned-off-by: Andrew Borley <borley@uk.ibm.com>"}, "afterCommit": {"oid": "a2f9246068f829f96bf147f936322bdbb0819c3f", "author": {"user": {"login": "ajborley", "name": "Andrew Borley"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/a2f9246068f829f96bf147f936322bdbb0819c3f", "committedDate": "2020-02-07T17:46:43Z", "message": "Address review comments\n\n - This commit supports using a list of maps in the CrdGenerator, which\nremoves the need for the ConnectorStatus class.\n - It also refactors the Connector and MM2 operators so that I'm not\nduplicating code.\n\nSigned-off-by: Andrew Borley <borley@uk.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1ODE0MzY4", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2496#pullrequestreview-355814368", "createdAt": "2020-02-10T10:07:15Z", "commit": {"oid": "a2f9246068f829f96bf147f936322bdbb0819c3f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2MDA5NDQw", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2496#pullrequestreview-356009440", "createdAt": "2020-02-10T15:06:27Z", "commit": {"oid": "a2f9246068f829f96bf147f936322bdbb0819c3f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4NjA1NDEw", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2496#pullrequestreview-358605410", "createdAt": "2020-02-13T22:43:20Z", "commit": {"oid": "a2f9246068f829f96bf147f936322bdbb0819c3f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1889, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}