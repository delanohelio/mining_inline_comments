{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3MTExMzg4", "number": 3216, "reviewThreads": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxMzo0OTozMlrOEHH3iA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxMDoxOToxNVrOEKCCnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1OTA0MzkyOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/strimzi/api/kafka/model/KafkaRebalanceSpec.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxMzo0OTozMlrOGmVhpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxMzo0OTozMlrOGmVhpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg1MTc0OA==", "bodyText": "what's kind of \"leadership\" this is referring? \"leader\" partition movements? can you make it clear?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r442851748", "createdAt": "2020-06-19T13:49:32Z", "author": {"login": "ppatierno"}, "path": "api/src/main/java/io/strimzi/api/kafka/model/KafkaRebalanceSpec.java", "diffHunk": "@@ -55,6 +64,47 @@ public void setSkipHardGoalCheck(boolean skipHardGoalCheck) {\n         this.skipHardGoalCheck = skipHardGoalCheck;\n     }\n \n+    @Description(\"The upper bound of ongoing replica movements going into/out of each broker\")\n+    @Minimum(0)\n+    public int getConcurrentPartitionMovementsPerBroker() {\n+        return concurrentPartitionMovementsPerBroker;\n+    }\n+\n+    public void setConcurrentPartitionMovementsPerBroker(int movements) {\n+        this.concurrentPartitionMovementsPerBroker = movements;\n+    }\n+\n+    @Description(\"The upper bound of ongoing replica movements between disks within each broker\")\n+    @Minimum(0)\n+    public int getConcurrentIntraBrokerPartitionMovements() {\n+        return concurrentIntraBrokerPartitionMovements;\n+    }\n+\n+    public void setConcurrentIntraBrokerPartitionMovements(int movements) {\n+        this.concurrentIntraBrokerPartitionMovements = movements;\n+    }\n+\n+    @Description(\"The upper bound of ongoing leadership movements\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8a805e2158eb3dfb387d6ef7d24b9df277cd887"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1OTA1Mjc5OnYy", "diffSide": "RIGHT", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/cruisecontrol/PathBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxMzo1MjowNlrOGmVnHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxMzo1MjowNlrOGmVnHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg1MzE1MA==", "bodyText": "can you have just the version with long and using cast to int of the parameter when it's safe to do it?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r442853150", "createdAt": "2020-06-19T13:52:06Z", "author": {"login": "ppatierno"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/cruisecontrol/PathBuilder.java", "diffHunk": "@@ -61,12 +61,29 @@ public PathBuilder addParameter(CruiseControlParameters param, List<String> valu\n         return this;\n     }\n \n+    private void addIfNotZero(PathBuilder builder, CruiseControlParameters param, int value) {\n+        if (value > 0) {\n+            builder.addParameter(param, String.valueOf(value));\n+        }\n+    }\n+\n+    private void addIfNotZero(PathBuilder builder, CruiseControlParameters param, long value) {\n+        if (value > 0) {\n+            builder.addParameter(param, String.valueOf(value));\n+        }\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8a805e2158eb3dfb387d6ef7d24b9df277cd887"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MjQ5OTY0OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/strimzi/api/kafka/model/KafkaRebalanceSpec.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwNzoxMjozOVrOGm0a9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxMzo1OToxM1rOGnB3QQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM1Nzk0Mg==", "bodyText": "do all these parameters have defaults? Are we forcing the user to set them even at 0? How was it working until today without this configuration?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r443357942", "createdAt": "2020-06-22T07:12:39Z", "author": {"login": "ppatierno"}, "path": "api/src/main/java/io/strimzi/api/kafka/model/KafkaRebalanceSpec.java", "diffHunk": "@@ -55,6 +64,47 @@ public void setSkipHardGoalCheck(boolean skipHardGoalCheck) {\n         this.skipHardGoalCheck = skipHardGoalCheck;\n     }\n \n+    @Description(\"The upper bound of ongoing partition replica movements going into/out of each broker\")\n+    @Minimum(0)\n+    public int getConcurrentPartitionMovementsPerBroker() {\n+        return concurrentPartitionMovementsPerBroker;\n+    }\n+\n+    public void setConcurrentPartitionMovementsPerBroker(int movements) {\n+        this.concurrentPartitionMovementsPerBroker = movements;\n+    }\n+\n+    @Description(\"The upper bound of ongoing partition replica movements between disks within each broker\")\n+    @Minimum(0)\n+    public int getConcurrentIntraBrokerPartitionMovements() {\n+        return concurrentIntraBrokerPartitionMovements;\n+    }\n+\n+    public void setConcurrentIntraBrokerPartitionMovements(int movements) {\n+        this.concurrentIntraBrokerPartitionMovements = movements;\n+    }\n+\n+    @Description(\"The upper bound of ongoing partition leadership movements\")\n+    @Minimum(0)\n+    public int getConcurrentLeaderMovements() {\n+        return concurrentLeaderMovements;\n+    }\n+\n+    public void setConcurrentLeaderMovements(int movements) {\n+        this.concurrentLeaderMovements = movements;\n+    }\n+\n+    @Description(\"The upper bound, in bytes per second, on the bandwidth used to move replicas\")\n+    @Minimum(0)\n+    public long getReplicationThrottle() {\n+        return replicationThrottle;\n+    }\n+\n+    public void setReplicationThrottle(long bandwidth) {\n+        this.replicationThrottle = bandwidth;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "375ceb7abdedacf091760f6f1a6e988fec579678"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQwNDM2NQ==", "bodyText": "They all have defaults in CC, which are in the documentation. If the keys are not present or set to zero they are ignored (which I should add to the documentation).", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r443404365", "createdAt": "2020-06-22T08:42:02Z", "author": {"login": "tomncooper"}, "path": "api/src/main/java/io/strimzi/api/kafka/model/KafkaRebalanceSpec.java", "diffHunk": "@@ -55,6 +64,47 @@ public void setSkipHardGoalCheck(boolean skipHardGoalCheck) {\n         this.skipHardGoalCheck = skipHardGoalCheck;\n     }\n \n+    @Description(\"The upper bound of ongoing partition replica movements going into/out of each broker\")\n+    @Minimum(0)\n+    public int getConcurrentPartitionMovementsPerBroker() {\n+        return concurrentPartitionMovementsPerBroker;\n+    }\n+\n+    public void setConcurrentPartitionMovementsPerBroker(int movements) {\n+        this.concurrentPartitionMovementsPerBroker = movements;\n+    }\n+\n+    @Description(\"The upper bound of ongoing partition replica movements between disks within each broker\")\n+    @Minimum(0)\n+    public int getConcurrentIntraBrokerPartitionMovements() {\n+        return concurrentIntraBrokerPartitionMovements;\n+    }\n+\n+    public void setConcurrentIntraBrokerPartitionMovements(int movements) {\n+        this.concurrentIntraBrokerPartitionMovements = movements;\n+    }\n+\n+    @Description(\"The upper bound of ongoing partition leadership movements\")\n+    @Minimum(0)\n+    public int getConcurrentLeaderMovements() {\n+        return concurrentLeaderMovements;\n+    }\n+\n+    public void setConcurrentLeaderMovements(int movements) {\n+        this.concurrentLeaderMovements = movements;\n+    }\n+\n+    @Description(\"The upper bound, in bytes per second, on the bandwidth used to move replicas\")\n+    @Minimum(0)\n+    public long getReplicationThrottle() {\n+        return replicationThrottle;\n+    }\n+\n+    public void setReplicationThrottle(long bandwidth) {\n+        this.replicationThrottle = bandwidth;\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM1Nzk0Mg=="}, "originalCommit": {"oid": "375ceb7abdedacf091760f6f1a6e988fec579678"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQwNjU0OA==", "bodyText": "but setting Minimum(0) are you sure that the API server validates as ok a KafkaRebalance without these settings? I don't remember tbh.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r443406548", "createdAt": "2020-06-22T08:45:51Z", "author": {"login": "ppatierno"}, "path": "api/src/main/java/io/strimzi/api/kafka/model/KafkaRebalanceSpec.java", "diffHunk": "@@ -55,6 +64,47 @@ public void setSkipHardGoalCheck(boolean skipHardGoalCheck) {\n         this.skipHardGoalCheck = skipHardGoalCheck;\n     }\n \n+    @Description(\"The upper bound of ongoing partition replica movements going into/out of each broker\")\n+    @Minimum(0)\n+    public int getConcurrentPartitionMovementsPerBroker() {\n+        return concurrentPartitionMovementsPerBroker;\n+    }\n+\n+    public void setConcurrentPartitionMovementsPerBroker(int movements) {\n+        this.concurrentPartitionMovementsPerBroker = movements;\n+    }\n+\n+    @Description(\"The upper bound of ongoing partition replica movements between disks within each broker\")\n+    @Minimum(0)\n+    public int getConcurrentIntraBrokerPartitionMovements() {\n+        return concurrentIntraBrokerPartitionMovements;\n+    }\n+\n+    public void setConcurrentIntraBrokerPartitionMovements(int movements) {\n+        this.concurrentIntraBrokerPartitionMovements = movements;\n+    }\n+\n+    @Description(\"The upper bound of ongoing partition leadership movements\")\n+    @Minimum(0)\n+    public int getConcurrentLeaderMovements() {\n+        return concurrentLeaderMovements;\n+    }\n+\n+    public void setConcurrentLeaderMovements(int movements) {\n+        this.concurrentLeaderMovements = movements;\n+    }\n+\n+    @Description(\"The upper bound, in bytes per second, on the bandwidth used to move replicas\")\n+    @Minimum(0)\n+    public long getReplicationThrottle() {\n+        return replicationThrottle;\n+    }\n+\n+    public void setReplicationThrottle(long bandwidth) {\n+        this.replicationThrottle = bandwidth;\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM1Nzk0Mg=="}, "originalCommit": {"oid": "375ceb7abdedacf091760f6f1a6e988fec579678"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU3ODE3Nw==", "bodyText": "I have tested it with and without configuration and it works fine.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r443578177", "createdAt": "2020-06-22T13:59:13Z", "author": {"login": "tomncooper"}, "path": "api/src/main/java/io/strimzi/api/kafka/model/KafkaRebalanceSpec.java", "diffHunk": "@@ -55,6 +64,47 @@ public void setSkipHardGoalCheck(boolean skipHardGoalCheck) {\n         this.skipHardGoalCheck = skipHardGoalCheck;\n     }\n \n+    @Description(\"The upper bound of ongoing partition replica movements going into/out of each broker\")\n+    @Minimum(0)\n+    public int getConcurrentPartitionMovementsPerBroker() {\n+        return concurrentPartitionMovementsPerBroker;\n+    }\n+\n+    public void setConcurrentPartitionMovementsPerBroker(int movements) {\n+        this.concurrentPartitionMovementsPerBroker = movements;\n+    }\n+\n+    @Description(\"The upper bound of ongoing partition replica movements between disks within each broker\")\n+    @Minimum(0)\n+    public int getConcurrentIntraBrokerPartitionMovements() {\n+        return concurrentIntraBrokerPartitionMovements;\n+    }\n+\n+    public void setConcurrentIntraBrokerPartitionMovements(int movements) {\n+        this.concurrentIntraBrokerPartitionMovements = movements;\n+    }\n+\n+    @Description(\"The upper bound of ongoing partition leadership movements\")\n+    @Minimum(0)\n+    public int getConcurrentLeaderMovements() {\n+        return concurrentLeaderMovements;\n+    }\n+\n+    public void setConcurrentLeaderMovements(int movements) {\n+        this.concurrentLeaderMovements = movements;\n+    }\n+\n+    @Description(\"The upper bound, in bytes per second, on the bandwidth used to move replicas\")\n+    @Minimum(0)\n+    public long getReplicationThrottle() {\n+        return replicationThrottle;\n+    }\n+\n+    public void setReplicationThrottle(long bandwidth) {\n+        this.replicationThrottle = bandwidth;\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM1Nzk0Mg=="}, "originalCommit": {"oid": "375ceb7abdedacf091760f6f1a6e988fec579678"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MjUwOTEyOnYy", "diffSide": "RIGHT", "path": "documentation/modules/cruise-control/con-rebalance-performance.adoc", "isResolved": true, "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwNzoxNjowMlrOGm0gvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMTowNDoyMlrOGoNaMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM1OTQyMw==", "bodyText": "I think that with the latest documentation updates we are avoiding to replicate what we already have in the CRD and the related doc autogenerated in the appendix. Should we just add a link to the appendix here? @laidan6000 @PaulRMellor am I wrong?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r443359423", "createdAt": "2020-06-22T07:16:02Z", "author": {"login": "ppatierno"}, "path": "documentation/modules/cruise-control/con-rebalance-performance.adoc", "diffHunk": "@@ -0,0 +1,40 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-{context}']\n+\n+= Rebalance Performance Tuning Overview \n+\n+When an xref:con-optimization-proposals-{context}[optimization proposal] is xref:proc-approving-optimization-proposal-{context}[approved], the partition reassignment commands that make up the proposal are applied to the Kafka cluster by the Cruise Control server. These commands consist of two distinct operations:\n+\n+* Partition movement: This involves physically transferring the partition replica and its data to a new location and can take one of two forms.\n+    ** Inter-broker movement: The partition replica is moved to a log directory on another broker.\n+    ** Intra-broker movement: The partition replica is moved to a different log directory on the same broker.\n+\n+* Leadership movement: This involves switching the leader of a set of partition replicas.\n+\n+Cruise Control will batch up these reassignment commands and issue them to the Kafka cluster. The number of each type of these movements in these batches can effect the performance impact of the rebalance on the Kafka cluster whilst it is enacting them. Cruise control offers several configuration options for tuning the rebalance which can be set at the xref:ref-cruise-control-configuration-{context}[server] or xref:proc-generating-optimization-proposals-{context}[individual rebalance request] level. \n+\n+The Cruise Control server setting can be set in the Kafka custom resource under\n+`Kafka.spec.kafka.spec.cruiseControl.spec`. The individual rebalance performance configurations can be set under `KafkaRebalance.spec`. The relevant configurations are summarised below:\n+\n+|==========================================================================================================================\n+| Server Configuration                              | KafkaRebalance Configuration            | Description | Default Value \n+\n+| `num.concurrent.partition.movements.per.broker`   | `concurrentPartitionMovementsPerBroker` | \n+  The maximum number of inter-broker partition movements in each partition reassignment batch | 10\n+\n+| `num.concurrent.intra.broker.partition.movements` | `concurrentIntraBrokerPartitionMovements`     | \n+  The maximum number of intra-broker partition movements in each partition reassignment batch | 2\n+\n+\n+| `num.concurrent.leader.movements`                 | `concurrentLeaderMovements`             | \n+  The maximum number of partition leadership changes in each partition reassignment batch     | 1000        \n+\n+\n+| `default.replication.throttle`                    | `replicationThrottle`                   |\n+  The bandwidth (in bytes per second) to be assigned to the reassigning of partitions         | No Limit    \n+|==========================================================================================================================", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "375ceb7abdedacf091760f6f1a6e988fec579678"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQwNDk4OQ==", "bodyText": "Can you document a value's default with an annotation in the CRD java class?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r443404989", "createdAt": "2020-06-22T08:43:04Z", "author": {"login": "tomncooper"}, "path": "documentation/modules/cruise-control/con-rebalance-performance.adoc", "diffHunk": "@@ -0,0 +1,40 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-{context}']\n+\n+= Rebalance Performance Tuning Overview \n+\n+When an xref:con-optimization-proposals-{context}[optimization proposal] is xref:proc-approving-optimization-proposal-{context}[approved], the partition reassignment commands that make up the proposal are applied to the Kafka cluster by the Cruise Control server. These commands consist of two distinct operations:\n+\n+* Partition movement: This involves physically transferring the partition replica and its data to a new location and can take one of two forms.\n+    ** Inter-broker movement: The partition replica is moved to a log directory on another broker.\n+    ** Intra-broker movement: The partition replica is moved to a different log directory on the same broker.\n+\n+* Leadership movement: This involves switching the leader of a set of partition replicas.\n+\n+Cruise Control will batch up these reassignment commands and issue them to the Kafka cluster. The number of each type of these movements in these batches can effect the performance impact of the rebalance on the Kafka cluster whilst it is enacting them. Cruise control offers several configuration options for tuning the rebalance which can be set at the xref:ref-cruise-control-configuration-{context}[server] or xref:proc-generating-optimization-proposals-{context}[individual rebalance request] level. \n+\n+The Cruise Control server setting can be set in the Kafka custom resource under\n+`Kafka.spec.kafka.spec.cruiseControl.spec`. The individual rebalance performance configurations can be set under `KafkaRebalance.spec`. The relevant configurations are summarised below:\n+\n+|==========================================================================================================================\n+| Server Configuration                              | KafkaRebalance Configuration            | Description | Default Value \n+\n+| `num.concurrent.partition.movements.per.broker`   | `concurrentPartitionMovementsPerBroker` | \n+  The maximum number of inter-broker partition movements in each partition reassignment batch | 10\n+\n+| `num.concurrent.intra.broker.partition.movements` | `concurrentIntraBrokerPartitionMovements`     | \n+  The maximum number of intra-broker partition movements in each partition reassignment batch | 2\n+\n+\n+| `num.concurrent.leader.movements`                 | `concurrentLeaderMovements`             | \n+  The maximum number of partition leadership changes in each partition reassignment batch     | 1000        \n+\n+\n+| `default.replication.throttle`                    | `replicationThrottle`                   |\n+  The bandwidth (in bytes per second) to be assigned to the reassigning of partitions         | No Limit    \n+|==========================================================================================================================", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM1OTQyMw=="}, "originalCommit": {"oid": "375ceb7abdedacf091760f6f1a6e988fec579678"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDAwNTUxMw==", "bodyText": "@tombentley ?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r444005513", "createdAt": "2020-06-23T07:05:29Z", "author": {"login": "ppatierno"}, "path": "documentation/modules/cruise-control/con-rebalance-performance.adoc", "diffHunk": "@@ -0,0 +1,40 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-{context}']\n+\n+= Rebalance Performance Tuning Overview \n+\n+When an xref:con-optimization-proposals-{context}[optimization proposal] is xref:proc-approving-optimization-proposal-{context}[approved], the partition reassignment commands that make up the proposal are applied to the Kafka cluster by the Cruise Control server. These commands consist of two distinct operations:\n+\n+* Partition movement: This involves physically transferring the partition replica and its data to a new location and can take one of two forms.\n+    ** Inter-broker movement: The partition replica is moved to a log directory on another broker.\n+    ** Intra-broker movement: The partition replica is moved to a different log directory on the same broker.\n+\n+* Leadership movement: This involves switching the leader of a set of partition replicas.\n+\n+Cruise Control will batch up these reassignment commands and issue them to the Kafka cluster. The number of each type of these movements in these batches can effect the performance impact of the rebalance on the Kafka cluster whilst it is enacting them. Cruise control offers several configuration options for tuning the rebalance which can be set at the xref:ref-cruise-control-configuration-{context}[server] or xref:proc-generating-optimization-proposals-{context}[individual rebalance request] level. \n+\n+The Cruise Control server setting can be set in the Kafka custom resource under\n+`Kafka.spec.kafka.spec.cruiseControl.spec`. The individual rebalance performance configurations can be set under `KafkaRebalance.spec`. The relevant configurations are summarised below:\n+\n+|==========================================================================================================================\n+| Server Configuration                              | KafkaRebalance Configuration            | Description | Default Value \n+\n+| `num.concurrent.partition.movements.per.broker`   | `concurrentPartitionMovementsPerBroker` | \n+  The maximum number of inter-broker partition movements in each partition reassignment batch | 10\n+\n+| `num.concurrent.intra.broker.partition.movements` | `concurrentIntraBrokerPartitionMovements`     | \n+  The maximum number of intra-broker partition movements in each partition reassignment batch | 2\n+\n+\n+| `num.concurrent.leader.movements`                 | `concurrentLeaderMovements`             | \n+  The maximum number of partition leadership changes in each partition reassignment batch     | 1000        \n+\n+\n+| `default.replication.throttle`                    | `replicationThrottle`                   |\n+  The bandwidth (in bytes per second) to be assigned to the reassigning of partitions         | No Limit    \n+|==========================================================================================================================", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM1OTQyMw=="}, "originalCommit": {"oid": "375ceb7abdedacf091760f6f1a6e988fec579678"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDAxNDUxOQ==", "bodyText": "I think the DocGenerator will document @JsonProperty(defaultValue=\"...\")", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r444014519", "createdAt": "2020-06-23T07:23:12Z", "author": {"login": "tombentley"}, "path": "documentation/modules/cruise-control/con-rebalance-performance.adoc", "diffHunk": "@@ -0,0 +1,40 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-{context}']\n+\n+= Rebalance Performance Tuning Overview \n+\n+When an xref:con-optimization-proposals-{context}[optimization proposal] is xref:proc-approving-optimization-proposal-{context}[approved], the partition reassignment commands that make up the proposal are applied to the Kafka cluster by the Cruise Control server. These commands consist of two distinct operations:\n+\n+* Partition movement: This involves physically transferring the partition replica and its data to a new location and can take one of two forms.\n+    ** Inter-broker movement: The partition replica is moved to a log directory on another broker.\n+    ** Intra-broker movement: The partition replica is moved to a different log directory on the same broker.\n+\n+* Leadership movement: This involves switching the leader of a set of partition replicas.\n+\n+Cruise Control will batch up these reassignment commands and issue them to the Kafka cluster. The number of each type of these movements in these batches can effect the performance impact of the rebalance on the Kafka cluster whilst it is enacting them. Cruise control offers several configuration options for tuning the rebalance which can be set at the xref:ref-cruise-control-configuration-{context}[server] or xref:proc-generating-optimization-proposals-{context}[individual rebalance request] level. \n+\n+The Cruise Control server setting can be set in the Kafka custom resource under\n+`Kafka.spec.kafka.spec.cruiseControl.spec`. The individual rebalance performance configurations can be set under `KafkaRebalance.spec`. The relevant configurations are summarised below:\n+\n+|==========================================================================================================================\n+| Server Configuration                              | KafkaRebalance Configuration            | Description | Default Value \n+\n+| `num.concurrent.partition.movements.per.broker`   | `concurrentPartitionMovementsPerBroker` | \n+  The maximum number of inter-broker partition movements in each partition reassignment batch | 10\n+\n+| `num.concurrent.intra.broker.partition.movements` | `concurrentIntraBrokerPartitionMovements`     | \n+  The maximum number of intra-broker partition movements in each partition reassignment batch | 2\n+\n+\n+| `num.concurrent.leader.movements`                 | `concurrentLeaderMovements`             | \n+  The maximum number of partition leadership changes in each partition reassignment batch     | 1000        \n+\n+\n+| `default.replication.throttle`                    | `replicationThrottle`                   |\n+  The bandwidth (in bytes per second) to be assigned to the reassigning of partitions         | No Limit    \n+|==========================================================================================================================", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM1OTQyMw=="}, "originalCommit": {"oid": "375ceb7abdedacf091760f6f1a6e988fec579678"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDE0NTk4Ng==", "bodyText": "I added those properties but it didn't seem to feed through to the CRDs (presuming they are recreated during a make clean all). What is the build command for (only) forcing a regen of the CRDs?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r444145986", "createdAt": "2020-06-23T11:14:14Z", "author": {"login": "tomncooper"}, "path": "documentation/modules/cruise-control/con-rebalance-performance.adoc", "diffHunk": "@@ -0,0 +1,40 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-{context}']\n+\n+= Rebalance Performance Tuning Overview \n+\n+When an xref:con-optimization-proposals-{context}[optimization proposal] is xref:proc-approving-optimization-proposal-{context}[approved], the partition reassignment commands that make up the proposal are applied to the Kafka cluster by the Cruise Control server. These commands consist of two distinct operations:\n+\n+* Partition movement: This involves physically transferring the partition replica and its data to a new location and can take one of two forms.\n+    ** Inter-broker movement: The partition replica is moved to a log directory on another broker.\n+    ** Intra-broker movement: The partition replica is moved to a different log directory on the same broker.\n+\n+* Leadership movement: This involves switching the leader of a set of partition replicas.\n+\n+Cruise Control will batch up these reassignment commands and issue them to the Kafka cluster. The number of each type of these movements in these batches can effect the performance impact of the rebalance on the Kafka cluster whilst it is enacting them. Cruise control offers several configuration options for tuning the rebalance which can be set at the xref:ref-cruise-control-configuration-{context}[server] or xref:proc-generating-optimization-proposals-{context}[individual rebalance request] level. \n+\n+The Cruise Control server setting can be set in the Kafka custom resource under\n+`Kafka.spec.kafka.spec.cruiseControl.spec`. The individual rebalance performance configurations can be set under `KafkaRebalance.spec`. The relevant configurations are summarised below:\n+\n+|==========================================================================================================================\n+| Server Configuration                              | KafkaRebalance Configuration            | Description | Default Value \n+\n+| `num.concurrent.partition.movements.per.broker`   | `concurrentPartitionMovementsPerBroker` | \n+  The maximum number of inter-broker partition movements in each partition reassignment batch | 10\n+\n+| `num.concurrent.intra.broker.partition.movements` | `concurrentIntraBrokerPartitionMovements`     | \n+  The maximum number of intra-broker partition movements in each partition reassignment batch | 2\n+\n+\n+| `num.concurrent.leader.movements`                 | `concurrentLeaderMovements`             | \n+  The maximum number of partition leadership changes in each partition reassignment batch     | 1000        \n+\n+\n+| `default.replication.throttle`                    | `replicationThrottle`                   |\n+  The bandwidth (in bytes per second) to be assigned to the reassigning of partitions         | No Limit    \n+|==========================================================================================================================", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM1OTQyMw=="}, "originalCommit": {"oid": "375ceb7abdedacf091760f6f1a6e988fec579678"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM3MTU5Mg==", "bodyText": "Yes, we are moving towards having the configs only documented in the appendix. However, I think you should list the names of the configs here and then add links to the appendix (for both Kafka and KafkaRebalance) to get more information.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r444371592", "createdAt": "2020-06-23T16:57:44Z", "author": {"login": "laidan6000"}, "path": "documentation/modules/cruise-control/con-rebalance-performance.adoc", "diffHunk": "@@ -0,0 +1,40 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-{context}']\n+\n+= Rebalance Performance Tuning Overview \n+\n+When an xref:con-optimization-proposals-{context}[optimization proposal] is xref:proc-approving-optimization-proposal-{context}[approved], the partition reassignment commands that make up the proposal are applied to the Kafka cluster by the Cruise Control server. These commands consist of two distinct operations:\n+\n+* Partition movement: This involves physically transferring the partition replica and its data to a new location and can take one of two forms.\n+    ** Inter-broker movement: The partition replica is moved to a log directory on another broker.\n+    ** Intra-broker movement: The partition replica is moved to a different log directory on the same broker.\n+\n+* Leadership movement: This involves switching the leader of a set of partition replicas.\n+\n+Cruise Control will batch up these reassignment commands and issue them to the Kafka cluster. The number of each type of these movements in these batches can effect the performance impact of the rebalance on the Kafka cluster whilst it is enacting them. Cruise control offers several configuration options for tuning the rebalance which can be set at the xref:ref-cruise-control-configuration-{context}[server] or xref:proc-generating-optimization-proposals-{context}[individual rebalance request] level. \n+\n+The Cruise Control server setting can be set in the Kafka custom resource under\n+`Kafka.spec.kafka.spec.cruiseControl.spec`. The individual rebalance performance configurations can be set under `KafkaRebalance.spec`. The relevant configurations are summarised below:\n+\n+|==========================================================================================================================\n+| Server Configuration                              | KafkaRebalance Configuration            | Description | Default Value \n+\n+| `num.concurrent.partition.movements.per.broker`   | `concurrentPartitionMovementsPerBroker` | \n+  The maximum number of inter-broker partition movements in each partition reassignment batch | 10\n+\n+| `num.concurrent.intra.broker.partition.movements` | `concurrentIntraBrokerPartitionMovements`     | \n+  The maximum number of intra-broker partition movements in each partition reassignment batch | 2\n+\n+\n+| `num.concurrent.leader.movements`                 | `concurrentLeaderMovements`             | \n+  The maximum number of partition leadership changes in each partition reassignment batch     | 1000        \n+\n+\n+| `default.replication.throttle`                    | `replicationThrottle`                   |\n+  The bandwidth (in bytes per second) to be assigned to the reassigning of partitions         | No Limit    \n+|==========================================================================================================================", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM1OTQyMw=="}, "originalCommit": {"oid": "375ceb7abdedacf091760f6f1a6e988fec579678"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDcwOTAzMA==", "bodyText": "@tomncooper looks like I was wrong. I see no reason why we couldn't change that though, for both the DocGenerator and the CrdGenerator. It would mean we could make the defaults more explicit e.g. by having a column for them in the tables, rather than them having to be documented in the description. WDYT?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r444709030", "createdAt": "2020-06-24T07:50:35Z", "author": {"login": "tombentley"}, "path": "documentation/modules/cruise-control/con-rebalance-performance.adoc", "diffHunk": "@@ -0,0 +1,40 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-{context}']\n+\n+= Rebalance Performance Tuning Overview \n+\n+When an xref:con-optimization-proposals-{context}[optimization proposal] is xref:proc-approving-optimization-proposal-{context}[approved], the partition reassignment commands that make up the proposal are applied to the Kafka cluster by the Cruise Control server. These commands consist of two distinct operations:\n+\n+* Partition movement: This involves physically transferring the partition replica and its data to a new location and can take one of two forms.\n+    ** Inter-broker movement: The partition replica is moved to a log directory on another broker.\n+    ** Intra-broker movement: The partition replica is moved to a different log directory on the same broker.\n+\n+* Leadership movement: This involves switching the leader of a set of partition replicas.\n+\n+Cruise Control will batch up these reassignment commands and issue them to the Kafka cluster. The number of each type of these movements in these batches can effect the performance impact of the rebalance on the Kafka cluster whilst it is enacting them. Cruise control offers several configuration options for tuning the rebalance which can be set at the xref:ref-cruise-control-configuration-{context}[server] or xref:proc-generating-optimization-proposals-{context}[individual rebalance request] level. \n+\n+The Cruise Control server setting can be set in the Kafka custom resource under\n+`Kafka.spec.kafka.spec.cruiseControl.spec`. The individual rebalance performance configurations can be set under `KafkaRebalance.spec`. The relevant configurations are summarised below:\n+\n+|==========================================================================================================================\n+| Server Configuration                              | KafkaRebalance Configuration            | Description | Default Value \n+\n+| `num.concurrent.partition.movements.per.broker`   | `concurrentPartitionMovementsPerBroker` | \n+  The maximum number of inter-broker partition movements in each partition reassignment batch | 10\n+\n+| `num.concurrent.intra.broker.partition.movements` | `concurrentIntraBrokerPartitionMovements`     | \n+  The maximum number of intra-broker partition movements in each partition reassignment batch | 2\n+\n+\n+| `num.concurrent.leader.movements`                 | `concurrentLeaderMovements`             | \n+  The maximum number of partition leadership changes in each partition reassignment batch     | 1000        \n+\n+\n+| `default.replication.throttle`                    | `replicationThrottle`                   |\n+  The bandwidth (in bytes per second) to be assigned to the reassigning of partitions         | No Limit    \n+|==========================================================================================================================", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM1OTQyMw=="}, "originalCommit": {"oid": "375ceb7abdedacf091760f6f1a6e988fec579678"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc0Njc2MA==", "bodyText": "I think that would be useful, we have had a few questions about defaults for CC. I will put together a separate PR. I have added the default values to the description for now and they are in the docs.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r444746760", "createdAt": "2020-06-24T08:56:23Z", "author": {"login": "tomncooper"}, "path": "documentation/modules/cruise-control/con-rebalance-performance.adoc", "diffHunk": "@@ -0,0 +1,40 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-{context}']\n+\n+= Rebalance Performance Tuning Overview \n+\n+When an xref:con-optimization-proposals-{context}[optimization proposal] is xref:proc-approving-optimization-proposal-{context}[approved], the partition reassignment commands that make up the proposal are applied to the Kafka cluster by the Cruise Control server. These commands consist of two distinct operations:\n+\n+* Partition movement: This involves physically transferring the partition replica and its data to a new location and can take one of two forms.\n+    ** Inter-broker movement: The partition replica is moved to a log directory on another broker.\n+    ** Intra-broker movement: The partition replica is moved to a different log directory on the same broker.\n+\n+* Leadership movement: This involves switching the leader of a set of partition replicas.\n+\n+Cruise Control will batch up these reassignment commands and issue them to the Kafka cluster. The number of each type of these movements in these batches can effect the performance impact of the rebalance on the Kafka cluster whilst it is enacting them. Cruise control offers several configuration options for tuning the rebalance which can be set at the xref:ref-cruise-control-configuration-{context}[server] or xref:proc-generating-optimization-proposals-{context}[individual rebalance request] level. \n+\n+The Cruise Control server setting can be set in the Kafka custom resource under\n+`Kafka.spec.kafka.spec.cruiseControl.spec`. The individual rebalance performance configurations can be set under `KafkaRebalance.spec`. The relevant configurations are summarised below:\n+\n+|==========================================================================================================================\n+| Server Configuration                              | KafkaRebalance Configuration            | Description | Default Value \n+\n+| `num.concurrent.partition.movements.per.broker`   | `concurrentPartitionMovementsPerBroker` | \n+  The maximum number of inter-broker partition movements in each partition reassignment batch | 10\n+\n+| `num.concurrent.intra.broker.partition.movements` | `concurrentIntraBrokerPartitionMovements`     | \n+  The maximum number of intra-broker partition movements in each partition reassignment batch | 2\n+\n+\n+| `num.concurrent.leader.movements`                 | `concurrentLeaderMovements`             | \n+  The maximum number of partition leadership changes in each partition reassignment batch     | 1000        \n+\n+\n+| `default.replication.throttle`                    | `replicationThrottle`                   |\n+  The bandwidth (in bytes per second) to be assigned to the reassigning of partitions         | No Limit    \n+|==========================================================================================================================", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM1OTQyMw=="}, "originalCommit": {"oid": "375ceb7abdedacf091760f6f1a6e988fec579678"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc1MDU5Nw==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r444750597", "createdAt": "2020-06-24T09:02:55Z", "author": {"login": "tombentley"}, "path": "documentation/modules/cruise-control/con-rebalance-performance.adoc", "diffHunk": "@@ -0,0 +1,40 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-{context}']\n+\n+= Rebalance Performance Tuning Overview \n+\n+When an xref:con-optimization-proposals-{context}[optimization proposal] is xref:proc-approving-optimization-proposal-{context}[approved], the partition reassignment commands that make up the proposal are applied to the Kafka cluster by the Cruise Control server. These commands consist of two distinct operations:\n+\n+* Partition movement: This involves physically transferring the partition replica and its data to a new location and can take one of two forms.\n+    ** Inter-broker movement: The partition replica is moved to a log directory on another broker.\n+    ** Intra-broker movement: The partition replica is moved to a different log directory on the same broker.\n+\n+* Leadership movement: This involves switching the leader of a set of partition replicas.\n+\n+Cruise Control will batch up these reassignment commands and issue them to the Kafka cluster. The number of each type of these movements in these batches can effect the performance impact of the rebalance on the Kafka cluster whilst it is enacting them. Cruise control offers several configuration options for tuning the rebalance which can be set at the xref:ref-cruise-control-configuration-{context}[server] or xref:proc-generating-optimization-proposals-{context}[individual rebalance request] level. \n+\n+The Cruise Control server setting can be set in the Kafka custom resource under\n+`Kafka.spec.kafka.spec.cruiseControl.spec`. The individual rebalance performance configurations can be set under `KafkaRebalance.spec`. The relevant configurations are summarised below:\n+\n+|==========================================================================================================================\n+| Server Configuration                              | KafkaRebalance Configuration            | Description | Default Value \n+\n+| `num.concurrent.partition.movements.per.broker`   | `concurrentPartitionMovementsPerBroker` | \n+  The maximum number of inter-broker partition movements in each partition reassignment batch | 10\n+\n+| `num.concurrent.intra.broker.partition.movements` | `concurrentIntraBrokerPartitionMovements`     | \n+  The maximum number of intra-broker partition movements in each partition reassignment batch | 2\n+\n+\n+| `num.concurrent.leader.movements`                 | `concurrentLeaderMovements`             | \n+  The maximum number of partition leadership changes in each partition reassignment batch     | 1000        \n+\n+\n+| `default.replication.throttle`                    | `replicationThrottle`                   |\n+  The bandwidth (in bytes per second) to be assigned to the reassigning of partitions         | No Limit    \n+|==========================================================================================================================", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM1OTQyMw=="}, "originalCommit": {"oid": "375ceb7abdedacf091760f6f1a6e988fec579678"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDgxNTkyMw==", "bodyText": "Noted.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r444815923", "createdAt": "2020-06-24T11:04:22Z", "author": {"login": "laidan6000"}, "path": "documentation/modules/cruise-control/con-rebalance-performance.adoc", "diffHunk": "@@ -0,0 +1,40 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-{context}']\n+\n+= Rebalance Performance Tuning Overview \n+\n+When an xref:con-optimization-proposals-{context}[optimization proposal] is xref:proc-approving-optimization-proposal-{context}[approved], the partition reassignment commands that make up the proposal are applied to the Kafka cluster by the Cruise Control server. These commands consist of two distinct operations:\n+\n+* Partition movement: This involves physically transferring the partition replica and its data to a new location and can take one of two forms.\n+    ** Inter-broker movement: The partition replica is moved to a log directory on another broker.\n+    ** Intra-broker movement: The partition replica is moved to a different log directory on the same broker.\n+\n+* Leadership movement: This involves switching the leader of a set of partition replicas.\n+\n+Cruise Control will batch up these reassignment commands and issue them to the Kafka cluster. The number of each type of these movements in these batches can effect the performance impact of the rebalance on the Kafka cluster whilst it is enacting them. Cruise control offers several configuration options for tuning the rebalance which can be set at the xref:ref-cruise-control-configuration-{context}[server] or xref:proc-generating-optimization-proposals-{context}[individual rebalance request] level. \n+\n+The Cruise Control server setting can be set in the Kafka custom resource under\n+`Kafka.spec.kafka.spec.cruiseControl.spec`. The individual rebalance performance configurations can be set under `KafkaRebalance.spec`. The relevant configurations are summarised below:\n+\n+|==========================================================================================================================\n+| Server Configuration                              | KafkaRebalance Configuration            | Description | Default Value \n+\n+| `num.concurrent.partition.movements.per.broker`   | `concurrentPartitionMovementsPerBroker` | \n+  The maximum number of inter-broker partition movements in each partition reassignment batch | 10\n+\n+| `num.concurrent.intra.broker.partition.movements` | `concurrentIntraBrokerPartitionMovements`     | \n+  The maximum number of intra-broker partition movements in each partition reassignment batch | 2\n+\n+\n+| `num.concurrent.leader.movements`                 | `concurrentLeaderMovements`             | \n+  The maximum number of partition leadership changes in each partition reassignment batch     | 1000        \n+\n+\n+| `default.replication.throttle`                    | `replicationThrottle`                   |\n+  The bandwidth (in bytes per second) to be assigned to the reassigning of partitions         | No Limit    \n+|==========================================================================================================================", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM1OTQyMw=="}, "originalCommit": {"oid": "375ceb7abdedacf091760f6f1a6e988fec579678"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NTY1NzcwOnYy", "diffSide": "RIGHT", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/cruisecontrol/RebalanceOptions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMjo0Njo1NFrOGnTcPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMjo0Njo1NFrOGnTcPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg2NjE3NA==", "bodyText": "weather -> whether", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r443866174", "createdAt": "2020-06-22T22:46:54Z", "author": {"login": "kyguy"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/cruisecontrol/RebalanceOptions.java", "diffHunk": "@@ -8,11 +8,24 @@\n \n public class RebalanceOptions {\n \n+    /** Sets weather this rebalance only provides an optimisation proposal (true) or starts a rebalance (false) */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e6b05cc1346d6e21c494e0a5872a69b1c909796"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NTY2MzUyOnYy", "diffSide": "RIGHT", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/cruisecontrol/RebalanceOptions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMjo0OTo1MVrOGnTftQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMjo0OTo1MVrOGnTftQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg2NzA2MQ==", "bodyText": "weather -> whether", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r443867061", "createdAt": "2020-06-22T22:49:51Z", "author": {"login": "kyguy"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/cruisecontrol/RebalanceOptions.java", "diffHunk": "@@ -8,11 +8,24 @@\n \n public class RebalanceOptions {\n \n+    /** Sets weather this rebalance only provides an optimisation proposal (true) or starts a rebalance (false) */\n     private boolean isDryRun;\n+    /** List of optimisation goal class names, must be a sub-set of the configured master goals and include all hard.goals unless skipHardGoals=true */\n     private List<String> goals;\n+    /** Include additional information in the response from the Cruise Control Server */\n     private boolean verbose;\n+    /** Allows specifying a custom goals list that does not incude all configured hard.goals */\n     private boolean skipHardGoalCheck;\n+    /** Sets weather the response should be JSON formatted or formated for readibility on the command line */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e6b05cc1346d6e21c494e0a5872a69b1c909796"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2ODYyMDY5OnYy", "diffSide": "RIGHT", "path": "documentation/modules/cruise-control/con-rebalance-performance.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNjowNToyM1rOGnwSXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNjowNToyM1rOGnwSXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDMzODc4MA==", "bodyText": "Use sentence case for titles.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r444338780", "createdAt": "2020-06-23T16:05:23Z", "author": {"login": "laidan6000"}, "path": "documentation/modules/cruise-control/con-rebalance-performance.adoc", "diffHunk": "@@ -0,0 +1,40 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-{context}']\n+\n+= Rebalance Performance Tuning Overview ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e6b05cc1346d6e21c494e0a5872a69b1c909796"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2ODYzMjQ1OnYy", "diffSide": "RIGHT", "path": "documentation/modules/cruise-control/con-rebalance-performance.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNjowNzo1NlrOGnwZoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNjowNzo1NlrOGnwZoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM0MDY0MQ==", "bodyText": "Suggested changes:\nthat make up the proposal > that comprise the proposal\ntwo distinct operations > two types of operations", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r444340641", "createdAt": "2020-06-23T16:07:56Z", "author": {"login": "laidan6000"}, "path": "documentation/modules/cruise-control/con-rebalance-performance.adoc", "diffHunk": "@@ -0,0 +1,40 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-{context}']\n+\n+= Rebalance Performance Tuning Overview \n+\n+When an xref:con-optimization-proposals-{context}[optimization proposal] is xref:proc-approving-optimization-proposal-{context}[approved], the partition reassignment commands that make up the proposal are applied to the Kafka cluster by the Cruise Control server. These commands consist of two distinct operations:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e6b05cc1346d6e21c494e0a5872a69b1c909796"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2ODYzMzc1OnYy", "diffSide": "RIGHT", "path": "documentation/modules/cruise-control/con-rebalance-performance.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNjowODoxNVrOGnwadw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNjowODoxNVrOGnwadw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM0MDg1NQ==", "bodyText": "One sentence per line is usually preferred by reviewers.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r444340855", "createdAt": "2020-06-23T16:08:15Z", "author": {"login": "laidan6000"}, "path": "documentation/modules/cruise-control/con-rebalance-performance.adoc", "diffHunk": "@@ -0,0 +1,40 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-{context}']\n+\n+= Rebalance Performance Tuning Overview \n+\n+When an xref:con-optimization-proposals-{context}[optimization proposal] is xref:proc-approving-optimization-proposal-{context}[approved], the partition reassignment commands that make up the proposal are applied to the Kafka cluster by the Cruise Control server. These commands consist of two distinct operations:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e6b05cc1346d6e21c494e0a5872a69b1c909796"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2ODY1ODQ1OnYy", "diffSide": "RIGHT", "path": "documentation/modules/cruise-control/con-rebalance-performance.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNjoxNDoyNFrOGnwqSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNjoxNDoyNFrOGnwqSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM0NDkwNw==", "bodyText": "Suggested change:\nPartition movement: This involves physically transferring the partition replica and its data to a new location and can take one of two forms.\n>>>\nPartition movement: Involves transferring the partition replica and its data to a new location. Partition movements are in one of two forms:", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r444344907", "createdAt": "2020-06-23T16:14:24Z", "author": {"login": "laidan6000"}, "path": "documentation/modules/cruise-control/con-rebalance-performance.adoc", "diffHunk": "@@ -0,0 +1,40 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-{context}']\n+\n+= Rebalance Performance Tuning Overview \n+\n+When an xref:con-optimization-proposals-{context}[optimization proposal] is xref:proc-approving-optimization-proposal-{context}[approved], the partition reassignment commands that make up the proposal are applied to the Kafka cluster by the Cruise Control server. These commands consist of two distinct operations:\n+\n+* Partition movement: This involves physically transferring the partition replica and its data to a new location and can take one of two forms.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e6b05cc1346d6e21c494e0a5872a69b1c909796"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2ODY2MTE3OnYy", "diffSide": "RIGHT", "path": "documentation/modules/cruise-control/con-rebalance-performance.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNjoxNTowNVrOGnwr8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNjoxNTowNVrOGnwr8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM0NTMyOQ==", "bodyText": "Suggested change:\nanother broker > a different broker", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r444345329", "createdAt": "2020-06-23T16:15:05Z", "author": {"login": "laidan6000"}, "path": "documentation/modules/cruise-control/con-rebalance-performance.adoc", "diffHunk": "@@ -0,0 +1,40 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-{context}']\n+\n+= Rebalance Performance Tuning Overview \n+\n+When an xref:con-optimization-proposals-{context}[optimization proposal] is xref:proc-approving-optimization-proposal-{context}[approved], the partition reassignment commands that make up the proposal are applied to the Kafka cluster by the Cruise Control server. These commands consist of two distinct operations:\n+\n+* Partition movement: This involves physically transferring the partition replica and its data to a new location and can take one of two forms.\n+    ** Inter-broker movement: The partition replica is moved to a log directory on another broker.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e6b05cc1346d6e21c494e0a5872a69b1c909796"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2ODY2Mzc5OnYy", "diffSide": "RIGHT", "path": "documentation/modules/cruise-control/con-rebalance-performance.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNjoxNTo0NFrOGnwtoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMDowNToxOVrOGoLnDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM0NTc2MA==", "bodyText": "Suggested change:\nThis involves switching the leader of a set of partition replicas.\n>>>\nThe leader of a set of partition replicas is switched to a different broker.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r444345760", "createdAt": "2020-06-23T16:15:44Z", "author": {"login": "laidan6000"}, "path": "documentation/modules/cruise-control/con-rebalance-performance.adoc", "diffHunk": "@@ -0,0 +1,40 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-{context}']\n+\n+= Rebalance Performance Tuning Overview \n+\n+When an xref:con-optimization-proposals-{context}[optimization proposal] is xref:proc-approving-optimization-proposal-{context}[approved], the partition reassignment commands that make up the proposal are applied to the Kafka cluster by the Cruise Control server. These commands consist of two distinct operations:\n+\n+* Partition movement: This involves physically transferring the partition replica and its data to a new location and can take one of two forms.\n+    ** Inter-broker movement: The partition replica is moved to a log directory on another broker.\n+    ** Intra-broker movement: The partition replica is moved to a different log directory on the same broker.\n+\n+* Leadership movement: This involves switching the leader of a set of partition replicas.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e6b05cc1346d6e21c494e0a5872a69b1c909796"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc4NjQ0NQ==", "bodyText": "Not necessarily a different broker.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r444786445", "createdAt": "2020-06-24T10:05:19Z", "author": {"login": "tomncooper"}, "path": "documentation/modules/cruise-control/con-rebalance-performance.adoc", "diffHunk": "@@ -0,0 +1,40 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-{context}']\n+\n+= Rebalance Performance Tuning Overview \n+\n+When an xref:con-optimization-proposals-{context}[optimization proposal] is xref:proc-approving-optimization-proposal-{context}[approved], the partition reassignment commands that make up the proposal are applied to the Kafka cluster by the Cruise Control server. These commands consist of two distinct operations:\n+\n+* Partition movement: This involves physically transferring the partition replica and its data to a new location and can take one of two forms.\n+    ** Inter-broker movement: The partition replica is moved to a log directory on another broker.\n+    ** Intra-broker movement: The partition replica is moved to a different log directory on the same broker.\n+\n+* Leadership movement: This involves switching the leader of a set of partition replicas.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM0NTc2MA=="}, "originalCommit": {"oid": "9e6b05cc1346d6e21c494e0a5872a69b1c909796"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2ODY3MDU3OnYy", "diffSide": "RIGHT", "path": "documentation/modules/cruise-control/con-rebalance-performance.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNjoxNzozMFrOGnwx7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNjoxNzozMFrOGnwx7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM0Njg2Mw==", "bodyText": "Suggest using present tense.\nCruise Control will batch up these reassignment commands and issue them to the Kafka cluster.\n>>>\nCruise Control batches up these reassignment commands and issues them to the Kafka cluster.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r444346863", "createdAt": "2020-06-23T16:17:30Z", "author": {"login": "laidan6000"}, "path": "documentation/modules/cruise-control/con-rebalance-performance.adoc", "diffHunk": "@@ -0,0 +1,40 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-{context}']\n+\n+= Rebalance Performance Tuning Overview \n+\n+When an xref:con-optimization-proposals-{context}[optimization proposal] is xref:proc-approving-optimization-proposal-{context}[approved], the partition reassignment commands that make up the proposal are applied to the Kafka cluster by the Cruise Control server. These commands consist of two distinct operations:\n+\n+* Partition movement: This involves physically transferring the partition replica and its data to a new location and can take one of two forms.\n+    ** Inter-broker movement: The partition replica is moved to a log directory on another broker.\n+    ** Intra-broker movement: The partition replica is moved to a different log directory on the same broker.\n+\n+* Leadership movement: This involves switching the leader of a set of partition replicas.\n+\n+Cruise Control will batch up these reassignment commands and issue them to the Kafka cluster. The number of each type of these movements in these batches can effect the performance impact of the rebalance on the Kafka cluster whilst it is enacting them. Cruise control offers several configuration options for tuning the rebalance which can be set at the xref:ref-cruise-control-configuration-{context}[server] or xref:proc-generating-optimization-proposals-{context}[individual rebalance request] level. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e6b05cc1346d6e21c494e0a5872a69b1c909796"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2ODcwOTIyOnYy", "diffSide": "RIGHT", "path": "documentation/modules/cruise-control/con-rebalance-performance.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNjoyNzo1MVrOGnxLQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNjo0MTo1NVrOGnxtLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM1MzM0Ng==", "bodyText": "A tricky sentence. Suggested rewording:\nThe number of each type of these movements in these batches can effect the performance impact of the rebalance on the Kafka cluster whilst it is enacting them.\n>>>\nThe performance of the cluster during the rebalance is affected by the quantities of each type of movement contained in each batch.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r444353346", "createdAt": "2020-06-23T16:27:51Z", "author": {"login": "laidan6000"}, "path": "documentation/modules/cruise-control/con-rebalance-performance.adoc", "diffHunk": "@@ -0,0 +1,40 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-{context}']\n+\n+= Rebalance Performance Tuning Overview \n+\n+When an xref:con-optimization-proposals-{context}[optimization proposal] is xref:proc-approving-optimization-proposal-{context}[approved], the partition reassignment commands that make up the proposal are applied to the Kafka cluster by the Cruise Control server. These commands consist of two distinct operations:\n+\n+* Partition movement: This involves physically transferring the partition replica and its data to a new location and can take one of two forms.\n+    ** Inter-broker movement: The partition replica is moved to a log directory on another broker.\n+    ** Intra-broker movement: The partition replica is moved to a different log directory on the same broker.\n+\n+* Leadership movement: This involves switching the leader of a set of partition replicas.\n+\n+Cruise Control will batch up these reassignment commands and issue them to the Kafka cluster. The number of each type of these movements in these batches can effect the performance impact of the rebalance on the Kafka cluster whilst it is enacting them. Cruise control offers several configuration options for tuning the rebalance which can be set at the xref:ref-cruise-control-configuration-{context}[server] or xref:proc-generating-optimization-proposals-{context}[individual rebalance request] level. \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e6b05cc1346d6e21c494e0a5872a69b1c909796"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM2MjAyOQ==", "bodyText": "Suggested rewording:\nCruise control offers several configuration options for tuning the rebalance which can be set at the xref:ref-cruise-control-configuration-{context}[server] or xref:proc-generating-optimization-proposals-{context}[individual rebalance request] level.\n>>>\nCruise Control provides several configuration options for tuning a cluster rebalance for optimal performance. You can set these tuning options at either the xref:ref-cruise-control-configuration-{context}[Cruise Control server] or xref:proc-generating-optimization-proposals-{context}[optimization proposal] levels.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r444362029", "createdAt": "2020-06-23T16:41:55Z", "author": {"login": "laidan6000"}, "path": "documentation/modules/cruise-control/con-rebalance-performance.adoc", "diffHunk": "@@ -0,0 +1,40 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-{context}']\n+\n+= Rebalance Performance Tuning Overview \n+\n+When an xref:con-optimization-proposals-{context}[optimization proposal] is xref:proc-approving-optimization-proposal-{context}[approved], the partition reassignment commands that make up the proposal are applied to the Kafka cluster by the Cruise Control server. These commands consist of two distinct operations:\n+\n+* Partition movement: This involves physically transferring the partition replica and its data to a new location and can take one of two forms.\n+    ** Inter-broker movement: The partition replica is moved to a log directory on another broker.\n+    ** Intra-broker movement: The partition replica is moved to a different log directory on the same broker.\n+\n+* Leadership movement: This involves switching the leader of a set of partition replicas.\n+\n+Cruise Control will batch up these reassignment commands and issue them to the Kafka cluster. The number of each type of these movements in these batches can effect the performance impact of the rebalance on the Kafka cluster whilst it is enacting them. Cruise control offers several configuration options for tuning the rebalance which can be set at the xref:ref-cruise-control-configuration-{context}[server] or xref:proc-generating-optimization-proposals-{context}[individual rebalance request] level. \n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM1MzM0Ng=="}, "originalCommit": {"oid": "9e6b05cc1346d6e21c494e0a5872a69b1c909796"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2ODgwMjQ2OnYy", "diffSide": "RIGHT", "path": "documentation/modules/cruise-control/con-rebalance-performance.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNjo1MzowNVrOGnyH1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNjo1MzowNVrOGnyH1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM2ODg1Mg==", "bodyText": "Suggest using an unordered list:\n\n\nAt the Cruise Control server level, set tuning options in the spec.cruiseControl property of the Kafka resource.\n\n\nAt the optimization proposal level, set tuning options in the spec property of KafkaRebalance resources.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r444368852", "createdAt": "2020-06-23T16:53:05Z", "author": {"login": "laidan6000"}, "path": "documentation/modules/cruise-control/con-rebalance-performance.adoc", "diffHunk": "@@ -0,0 +1,40 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-{context}']\n+\n+= Rebalance Performance Tuning Overview \n+\n+When an xref:con-optimization-proposals-{context}[optimization proposal] is xref:proc-approving-optimization-proposal-{context}[approved], the partition reassignment commands that make up the proposal are applied to the Kafka cluster by the Cruise Control server. These commands consist of two distinct operations:\n+\n+* Partition movement: This involves physically transferring the partition replica and its data to a new location and can take one of two forms.\n+    ** Inter-broker movement: The partition replica is moved to a log directory on another broker.\n+    ** Intra-broker movement: The partition replica is moved to a different log directory on the same broker.\n+\n+* Leadership movement: This involves switching the leader of a set of partition replicas.\n+\n+Cruise Control will batch up these reassignment commands and issue them to the Kafka cluster. The number of each type of these movements in these batches can effect the performance impact of the rebalance on the Kafka cluster whilst it is enacting them. Cruise control offers several configuration options for tuning the rebalance which can be set at the xref:ref-cruise-control-configuration-{context}[server] or xref:proc-generating-optimization-proposals-{context}[individual rebalance request] level. \n+\n+The Cruise Control server setting can be set in the Kafka custom resource under", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e6b05cc1346d6e21c494e0a5872a69b1c909796"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2ODg1MzEwOnYy", "diffSide": "RIGHT", "path": "documentation/modules/cruise-control/con-rebalance-performance.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNzowNzozNVrOGnypEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNzowNzozNVrOGnypEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM3NzM2MQ==", "bodyText": "Suggested change:\nChanging these settings will effect the length of time the rebalance takes to complete as well as the load placed on the Kafka cluster whilst it is being enacted. Lower values will reduce the load but extend the time taken to complete and visa versa.\n>>>\nChanging the default settings affects the length of time that the rebalance takes to complete, as well as the load placed on the Kafka cluster during the rebalance. Using lower values reduces the load but increases the amount of time taken, and vice versa.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r444377361", "createdAt": "2020-06-23T17:07:35Z", "author": {"login": "laidan6000"}, "path": "documentation/modules/cruise-control/con-rebalance-performance.adoc", "diffHunk": "@@ -0,0 +1,40 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-{context}']\n+\n+= Rebalance Performance Tuning Overview \n+\n+When an xref:con-optimization-proposals-{context}[optimization proposal] is xref:proc-approving-optimization-proposal-{context}[approved], the partition reassignment commands that make up the proposal are applied to the Kafka cluster by the Cruise Control server. These commands consist of two distinct operations:\n+\n+* Partition movement: This involves physically transferring the partition replica and its data to a new location and can take one of two forms.\n+    ** Inter-broker movement: The partition replica is moved to a log directory on another broker.\n+    ** Intra-broker movement: The partition replica is moved to a different log directory on the same broker.\n+\n+* Leadership movement: This involves switching the leader of a set of partition replicas.\n+\n+Cruise Control will batch up these reassignment commands and issue them to the Kafka cluster. The number of each type of these movements in these batches can effect the performance impact of the rebalance on the Kafka cluster whilst it is enacting them. Cruise control offers several configuration options for tuning the rebalance which can be set at the xref:ref-cruise-control-configuration-{context}[server] or xref:proc-generating-optimization-proposals-{context}[individual rebalance request] level. \n+\n+The Cruise Control server setting can be set in the Kafka custom resource under\n+`Kafka.spec.kafka.spec.cruiseControl.spec`. The individual rebalance performance configurations can be set under `KafkaRebalance.spec`. The relevant configurations are summarised below:\n+\n+|==========================================================================================================================\n+| Server Configuration                              | KafkaRebalance Configuration            | Description | Default Value \n+\n+| `num.concurrent.partition.movements.per.broker`   | `concurrentPartitionMovementsPerBroker` | \n+  The maximum number of inter-broker partition movements in each partition reassignment batch | 10\n+\n+| `num.concurrent.intra.broker.partition.movements` | `concurrentIntraBrokerPartitionMovements`     | \n+  The maximum number of intra-broker partition movements in each partition reassignment batch | 2\n+\n+\n+| `num.concurrent.leader.movements`                 | `concurrentLeaderMovements`             | \n+  The maximum number of partition leadership changes in each partition reassignment batch     | 1000        \n+\n+\n+| `default.replication.throttle`                    | `replicationThrottle`                   |\n+  The bandwidth (in bytes per second) to be assigned to the reassigning of partitions         | No Limit    \n+|==========================================================================================================================\n+\n+Changing these settings will effect the length of time the rebalance takes to complete as well as the load placed on the Kafka cluster whilst it is being enacted. Lower values will reduce the load but extend the time taken to complete and visa versa.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e6b05cc1346d6e21c494e0a5872a69b1c909796"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MTU2NjczOnYy", "diffSide": "RIGHT", "path": "documentation/modules/cruise-control/con-rebalance-performance.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMDo1NTo0NFrOGoNJAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMDo1NTo0NFrOGoNJAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDgxMTUyMw==", "bodyText": "Please use a colon.\nPartition movements can take one of two forms:", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r444811523", "createdAt": "2020-06-24T10:55:44Z", "author": {"login": "laidan6000"}, "path": "documentation/modules/cruise-control/con-rebalance-performance.adoc", "diffHunk": "@@ -0,0 +1,54 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-{context}']\n+\n+= Rebalance performance tuning overview \n+\n+When an xref:con-optimization-proposals-{context}[optimization proposal] is xref:proc-approving-optimization-proposal-{context}[approved], the partition reassignment commands that comprise the proposal are applied to the Kafka cluster by the Cruise Control server. \n+These commands consist of two types of operations:\n+\n+* Partition movement: Involves transferring the partition replica and its data to a new location. Partition movements can take one of two forms.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "703ed73eb33cc4960abd263809656a657ea90592"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MTU3Njk2OnYy", "diffSide": "RIGHT", "path": "documentation/modules/cruise-control/con-rebalance-performance.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMDo1ODo1MlrOGoNPHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMDo1ODo1MlrOGoNPHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDgxMzA4Ng==", "bodyText": "Start a new paragraph at line 20.\nUse italics for tuning.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r444813086", "createdAt": "2020-06-24T10:58:52Z", "author": {"login": "laidan6000"}, "path": "documentation/modules/cruise-control/con-rebalance-performance.adoc", "diffHunk": "@@ -0,0 +1,54 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-{context}']\n+\n+= Rebalance performance tuning overview \n+\n+When an xref:con-optimization-proposals-{context}[optimization proposal] is xref:proc-approving-optimization-proposal-{context}[approved], the partition reassignment commands that comprise the proposal are applied to the Kafka cluster by the Cruise Control server. \n+These commands consist of two types of operations:\n+\n+* Partition movement: Involves transferring the partition replica and its data to a new location. Partition movements can take one of two forms.\n+    ** Inter-broker movement: The partition replica is moved to a log directory on a different broker.\n+    ** Intra-broker movement: The partition replica is moved to a different log directory on the same broker.\n+\n+* Leadership movement: This involves switching the leader of the partition's replicas.\n+\n+Cruise Control batches up these reassignment commands and issues them to the Kafka cluster. \n+The performance of the cluster during the rebalance is affected by the quantities of each type of movement contained in each batch.\n+Cruise Control provides several configuration options for tuning a cluster rebalance for optimal performance. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "703ed73eb33cc4960abd263809656a657ea90592"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MTU5MDY2OnYy", "diffSide": "RIGHT", "path": "documentation/modules/cruise-control/con-rebalance-performance.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMTowMzowMVrOGoNXTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMTowMzowMVrOGoNXTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDgxNTE4Mg==", "bodyText": "Is the lead-in sentence before the bullets correct?\nThe Cruise Control server setting can be set in either:\nAre both of them related to to the server settings?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r444815182", "createdAt": "2020-06-24T11:03:01Z", "author": {"login": "laidan6000"}, "path": "documentation/modules/cruise-control/con-rebalance-performance.adoc", "diffHunk": "@@ -0,0 +1,54 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-{context}']\n+\n+= Rebalance performance tuning overview \n+\n+When an xref:con-optimization-proposals-{context}[optimization proposal] is xref:proc-approving-optimization-proposal-{context}[approved], the partition reassignment commands that comprise the proposal are applied to the Kafka cluster by the Cruise Control server. \n+These commands consist of two types of operations:\n+\n+* Partition movement: Involves transferring the partition replica and its data to a new location. Partition movements can take one of two forms.\n+    ** Inter-broker movement: The partition replica is moved to a log directory on a different broker.\n+    ** Intra-broker movement: The partition replica is moved to a different log directory on the same broker.\n+\n+* Leadership movement: This involves switching the leader of the partition's replicas.\n+\n+Cruise Control batches up these reassignment commands and issues them to the Kafka cluster. \n+The performance of the cluster during the rebalance is affected by the quantities of each type of movement contained in each batch.\n+Cruise Control provides several configuration options for tuning a cluster rebalance for optimal performance. \n+You can set these tuning options at either the xref:ref-cruise-control-configuration-{context}[Cruise Control server] or xref:proc-generating-optimization-proposals-{context}[optimization proposal] levels.\n+\n+The Cruise Control server setting can be set in either:\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "703ed73eb33cc4960abd263809656a657ea90592"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4ODg3Nzk0OnYy", "diffSide": "RIGHT", "path": "documentation/modules/cruise-control/con-rebalance-performance.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNzoyODozNVrOGqvVDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNzoyODozNVrOGqvVDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ2ODgxMg==", "bodyText": "Do you mean the number, rather than the quantity?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The performance of the cluster during the rebalance is affected by the quantities of each type of movement contained in each batch.\n          \n          \n            \n            The performance of the cluster during the rebalance is affected by the number of each type of movement contained in each batch.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r447468812", "createdAt": "2020-06-30T07:28:35Z", "author": {"login": "tombentley"}, "path": "documentation/modules/cruise-control/con-rebalance-performance.adoc", "diffHunk": "@@ -0,0 +1,53 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-{context}']\n+\n+= Rebalance performance tuning overview \n+\n+When an xref:con-optimization-proposals-{context}[optimization proposal] is xref:proc-approving-optimization-proposal-{context}[approved], the partition reassignment commands that comprise the proposal are applied to the Kafka cluster by the Cruise Control server. \n+These commands consist of two types of operations:\n+\n+* Partition movement: Involves transferring the partition replica and its data to a new location. Partition movements can take one of two forms:\n+    ** Inter-broker movement: The partition replica is moved to a log directory on a different broker.\n+    ** Intra-broker movement: The partition replica is moved to a different log directory on the same broker.\n+\n+* Leadership movement: This involves switching the leader of the partition's replicas.\n+\n+Cruise Control batches up these reassignment commands and issues them to the Kafka cluster. \n+The performance of the cluster during the rebalance is affected by the quantities of each type of movement contained in each batch.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd00a2a97e226a6c8bdf9752be8a61a73eaf4a59"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4ODg4ODk2OnYy", "diffSide": "RIGHT", "path": "documentation/modules/cruise-control/con-rebalance-performance.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNzozMTozNlrOGqvbxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwOTozODoxNFrOGq0VHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ3MDUzMg==", "bodyText": "I'm surprised by this default. Perhaps naively I would have expected that since intrabroker movement is \"just copying some files around\" (i.e. not requiring any network) it would be less burdensome on the cluster and therefore the default could be higher than the interbroker case.Is my intuition wrong, or is it just a weird default?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r447470532", "createdAt": "2020-06-30T07:31:36Z", "author": {"login": "tombentley"}, "path": "documentation/modules/cruise-control/con-rebalance-performance.adoc", "diffHunk": "@@ -0,0 +1,53 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-{context}']\n+\n+= Rebalance performance tuning overview \n+\n+When an xref:con-optimization-proposals-{context}[optimization proposal] is xref:proc-approving-optimization-proposal-{context}[approved], the partition reassignment commands that comprise the proposal are applied to the Kafka cluster by the Cruise Control server. \n+These commands consist of two types of operations:\n+\n+* Partition movement: Involves transferring the partition replica and its data to a new location. Partition movements can take one of two forms:\n+    ** Inter-broker movement: The partition replica is moved to a log directory on a different broker.\n+    ** Intra-broker movement: The partition replica is moved to a different log directory on the same broker.\n+\n+* Leadership movement: This involves switching the leader of the partition's replicas.\n+\n+Cruise Control batches up these reassignment commands and issues them to the Kafka cluster. \n+The performance of the cluster during the rebalance is affected by the quantities of each type of movement contained in each batch.\n+Cruise Control provides several configuration options for tuning a cluster rebalance for optimal performance. \n+\n+You can set these _tuning_ options at either the xref:ref-cruise-control-configuration-{context}[Cruise Control server] or xref:proc-generating-optimization-proposals-{context}[optimization proposal] levels:\n+\n+* The Cruise Control server setting can be set in the Kafka custom resource under `Kafka.spec.kafka.spec.cruiseControl.spec`. \n+* The individual rebalance performance configurations can be set under `KafkaRebalance.spec`. \n+\n+The relevant configurations are summarised below:\n+\n+|==========================================================================================================================\n+| Server Configuration                              | KafkaRebalance Configuration            | Description | Default Value \n+\n+| `num.concurrent.partition.movements.per.broker`   | `concurrentPartitionMovementsPerBroker` | \n+  The maximum number of inter-broker partition movements in each partition reassignment batch | 10\n+\n+| `num.concurrent.intra.broker.partition.movements` | `concurrentIntraBrokerPartitionMovements`     | \n+  The maximum number of intra-broker partition movements in each partition reassignment batch | 2", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd00a2a97e226a6c8bdf9752be8a61a73eaf4a59"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU1MDc0OA==", "bodyText": "So having dug into the code and the inter-broker default is not 10 (as it says in the CC config docs - I have submitted an upstream PR to fix that) it is actually 5 which makes the difference compared to the intra-broker value less. But, I agree this seems counter-intuitive and it is not clear why it is lower than the inter-broker value.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r447550748", "createdAt": "2020-06-30T09:38:14Z", "author": {"login": "tomncooper"}, "path": "documentation/modules/cruise-control/con-rebalance-performance.adoc", "diffHunk": "@@ -0,0 +1,53 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-{context}']\n+\n+= Rebalance performance tuning overview \n+\n+When an xref:con-optimization-proposals-{context}[optimization proposal] is xref:proc-approving-optimization-proposal-{context}[approved], the partition reassignment commands that comprise the proposal are applied to the Kafka cluster by the Cruise Control server. \n+These commands consist of two types of operations:\n+\n+* Partition movement: Involves transferring the partition replica and its data to a new location. Partition movements can take one of two forms:\n+    ** Inter-broker movement: The partition replica is moved to a log directory on a different broker.\n+    ** Intra-broker movement: The partition replica is moved to a different log directory on the same broker.\n+\n+* Leadership movement: This involves switching the leader of the partition's replicas.\n+\n+Cruise Control batches up these reassignment commands and issues them to the Kafka cluster. \n+The performance of the cluster during the rebalance is affected by the quantities of each type of movement contained in each batch.\n+Cruise Control provides several configuration options for tuning a cluster rebalance for optimal performance. \n+\n+You can set these _tuning_ options at either the xref:ref-cruise-control-configuration-{context}[Cruise Control server] or xref:proc-generating-optimization-proposals-{context}[optimization proposal] levels:\n+\n+* The Cruise Control server setting can be set in the Kafka custom resource under `Kafka.spec.kafka.spec.cruiseControl.spec`. \n+* The individual rebalance performance configurations can be set under `KafkaRebalance.spec`. \n+\n+The relevant configurations are summarised below:\n+\n+|==========================================================================================================================\n+| Server Configuration                              | KafkaRebalance Configuration            | Description | Default Value \n+\n+| `num.concurrent.partition.movements.per.broker`   | `concurrentPartitionMovementsPerBroker` | \n+  The maximum number of inter-broker partition movements in each partition reassignment batch | 10\n+\n+| `num.concurrent.intra.broker.partition.movements` | `concurrentIntraBrokerPartitionMovements`     | \n+  The maximum number of intra-broker partition movements in each partition reassignment batch | 2", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ3MDUzMg=="}, "originalCommit": {"oid": "fd00a2a97e226a6c8bdf9752be8a61a73eaf4a59"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4ODkwMjY5OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/strimzi/api/kafka/model/KafkaRebalanceSpec.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNzozNTozMVrOGqvkGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNzozNTozMVrOGqvkGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ3MjY2NA==", "bodyText": "Do we need two blank lines?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r447472664", "createdAt": "2020-06-30T07:35:31Z", "author": {"login": "tombentley"}, "path": "api/src/main/java/io/strimzi/api/kafka/model/KafkaRebalanceSpec.java", "diffHunk": "@@ -55,6 +64,47 @@ public void setSkipHardGoalCheck(boolean skipHardGoalCheck) {\n         this.skipHardGoalCheck = skipHardGoalCheck;\n     }\n \n+    @Description(\"The upper bound of ongoing partition replica movements going into/out of each broker. Default is 10.\")\n+    @Minimum(0)\n+    public int getConcurrentPartitionMovementsPerBroker() {\n+        return concurrentPartitionMovementsPerBroker;\n+    }\n+\n+    public void setConcurrentPartitionMovementsPerBroker(int movements) {\n+        this.concurrentPartitionMovementsPerBroker = movements;\n+    }\n+\n+    @Description(\"The upper bound of ongoing partition replica movements between disks within each broker. Default is 2.\")\n+    @Minimum(0)\n+    public int getConcurrentIntraBrokerPartitionMovements() {\n+        return concurrentIntraBrokerPartitionMovements;\n+    }\n+\n+    public void setConcurrentIntraBrokerPartitionMovements(int movements) {\n+        this.concurrentIntraBrokerPartitionMovements = movements;\n+    }\n+\n+    @Description(\"The upper bound of ongoing partition leadership movements. Default is 1000.\")\n+    @Minimum(0)\n+    public int getConcurrentLeaderMovements() {\n+        return concurrentLeaderMovements;\n+    }\n+\n+    public void setConcurrentLeaderMovements(int movements) {\n+        this.concurrentLeaderMovements = movements;\n+    }\n+\n+    @Description(\"The upper bound, in bytes per second, on the bandwidth used to move replicas. There is no limit by default.\")\n+    @Minimum(0)\n+    public long getReplicationThrottle() {\n+        return replicationThrottle;\n+    }\n+\n+    public void setReplicationThrottle(long bandwidth) {\n+        this.replicationThrottle = bandwidth;\n+    }\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd00a2a97e226a6c8bdf9752be8a61a73eaf4a59"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4OTU0NjUyOnYy", "diffSide": "RIGHT", "path": "documentation/modules/cruise-control/con-rebalance-performance.adoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxMDoxOToxNVrOGq10jQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxMDoxOToxNVrOGq10jQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU3NTE4MQ==", "bodyText": "I wonder if this should be in the APi reference (added usin the @DescriptionFile annotation). WDYT @PaulRMellor ?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r447575181", "createdAt": "2020-06-30T10:19:15Z", "author": {"login": "scholzj"}, "path": "documentation/modules/cruise-control/con-rebalance-performance.adoc", "diffHunk": "@@ -0,0 +1,53 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-{context}']\n+\n+= Rebalance performance tuning overview ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b06678e59d22bd9bd4f7c562b9119881d1b19bc"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1706, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}