{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3NDIyNDM5", "number": 3654, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxOToxMzoyOFrOEju-Ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxOToyMzo1M1rOEksHWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1OTA1MjQzOnYy", "diffSide": "RIGHT", "path": "documentation/modules/upgrading/con-upgrade-listeners.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxOToxMzoyOFrOHSQczA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzo0Mjo1NVrOHTi4AA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkwNTkzMg==", "bodyText": "After the upgrade would be better I guess since it gives the reader a clear time window.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3654#discussion_r488905932", "createdAt": "2020-09-15T19:13:28Z", "author": {"login": "scholzj"}, "path": "documentation/modules/upgrading/con-upgrade-listeners.adoc", "diffHunk": "@@ -0,0 +1,63 @@\n+// This module is included in the following assemblies:\n+//\n+// upgrading/assembly_upgrade-kafka-versions.adoc\n+\n+[id='con-upgrade-listeners-{context}']\n+= Updating listener configuration\n+\n+Strimzi provides a `GenericKafkaListener` schema for the configuration of Kafka listeners in a `Kafka` resource.\n+\n+`GenericKafkaListener` replaces the `KafkaListeners` schema, which is deprecated.\n+\n+The `GenericKafkaListener` schema is backwards compatible.\n+\n+With the `GenericKafkaListener` schema, you can configure as many listeners as required,\n+as long as their names and ports are unique.\n+The listener configuration is defined as an array.\n+\n+For clients inside the Kubernetes cluster, you can create `plain` (without encryption) or `tls` _internal_ listeners.\n+\n+For clients outside the Kubernetes cluster, you create _external_ listeners and specify a connection mechanism,\n+which can be `nodeport`, `loadbalancer`, `ingress` or `route`.\n+\n+The `KafkaListeners` schema uses sub-properties for `plain`, `tls` and `external` listeners, with fixed ports for each.\n+As part of your upgrade, you can convert listeners configured using the `KafkaListeners` schema into the format of the `GenericKafkaListener` schema.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "816158ca79a095474cee39c8314872aae5aa0481"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI1NjM4NA==", "bodyText": "Changed to: After the Kafka upgrade", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3654#discussion_r490256384", "createdAt": "2020-09-17T13:42:55Z", "author": {"login": "PaulRMellor"}, "path": "documentation/modules/upgrading/con-upgrade-listeners.adoc", "diffHunk": "@@ -0,0 +1,63 @@\n+// This module is included in the following assemblies:\n+//\n+// upgrading/assembly_upgrade-kafka-versions.adoc\n+\n+[id='con-upgrade-listeners-{context}']\n+= Updating listener configuration\n+\n+Strimzi provides a `GenericKafkaListener` schema for the configuration of Kafka listeners in a `Kafka` resource.\n+\n+`GenericKafkaListener` replaces the `KafkaListeners` schema, which is deprecated.\n+\n+The `GenericKafkaListener` schema is backwards compatible.\n+\n+With the `GenericKafkaListener` schema, you can configure as many listeners as required,\n+as long as their names and ports are unique.\n+The listener configuration is defined as an array.\n+\n+For clients inside the Kubernetes cluster, you can create `plain` (without encryption) or `tls` _internal_ listeners.\n+\n+For clients outside the Kubernetes cluster, you create _external_ listeners and specify a connection mechanism,\n+which can be `nodeport`, `loadbalancer`, `ingress` or `route`.\n+\n+The `KafkaListeners` schema uses sub-properties for `plain`, `tls` and `external` listeners, with fixed ports for each.\n+As part of your upgrade, you can convert listeners configured using the `KafkaListeners` schema into the format of the `GenericKafkaListener` schema.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkwNTkzMg=="}, "originalCommit": {"oid": "816158ca79a095474cee39c8314872aae5aa0481"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1OTA2ODQ4OnYy", "diffSide": "RIGHT", "path": "documentation/modules/upgrading/con-upgrade-listeners.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxOToxODoyM1rOHSQmrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNDo0MjoxMVrOHTlz1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkwODQ2MQ==", "bodyText": "Can we please stress out two points:\n\nThe name and port numbers here are really important for the backwards compatibility. Using other names will possibly result in differently named listeners in Kafka or services in Kubernetes which will cause problems.\nThe options in configuration or overrides of the old listeners need to be adjusted into the new configuration format", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3654#discussion_r488908461", "createdAt": "2020-09-15T19:18:23Z", "author": {"login": "scholzj"}, "path": "documentation/modules/upgrading/con-upgrade-listeners.adoc", "diffHunk": "@@ -0,0 +1,63 @@\n+// This module is included in the following assemblies:\n+//\n+// upgrading/assembly_upgrade-kafka-versions.adoc\n+\n+[id='con-upgrade-listeners-{context}']\n+= Updating listener configuration\n+\n+Strimzi provides a `GenericKafkaListener` schema for the configuration of Kafka listeners in a `Kafka` resource.\n+\n+`GenericKafkaListener` replaces the `KafkaListeners` schema, which is deprecated.\n+\n+The `GenericKafkaListener` schema is backwards compatible.\n+\n+With the `GenericKafkaListener` schema, you can configure as many listeners as required,\n+as long as their names and ports are unique.\n+The listener configuration is defined as an array.\n+\n+For clients inside the Kubernetes cluster, you can create `plain` (without encryption) or `tls` _internal_ listeners.\n+\n+For clients outside the Kubernetes cluster, you create _external_ listeners and specify a connection mechanism,\n+which can be `nodeport`, `loadbalancer`, `ingress` or `route`.\n+\n+The `KafkaListeners` schema uses sub-properties for `plain`, `tls` and `external` listeners, with fixed ports for each.\n+As part of your upgrade, you can convert listeners configured using the `KafkaListeners` schema into the format of the `GenericKafkaListener` schema.\n+\n+For example, if you are currently using the following configuration in your `Kafka` configuration:\n+\n+[source,shell,subs=\"+quotes,attributes\"]\n+----\n+listeners:\n+  plain:\n+    # ...\n+  tls:\n+    # ...\n+  external:\n+    type: loadbalancer\n+    # ...\n+----\n+\n+Convert the listeners into the new format using:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "816158ca79a095474cee39c8314872aae5aa0481"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDMwNDQ2OA==", "bodyText": "Updated. I thought it might be useful to add some more details of the change too.\nSo:\n\nMake sure to use the the exact names and port numbers shown.\nFor any additional configuration or overrides properties used with the old format, you need to update them to the new format.\nChanges introduced to the listener configuration:\n\noverrides is merged with the configuration section\ndnsAnnotations has been renamed annotations\npreferredAddressType has been renamed preferredNodePortAddressType\naddress has been renamed alternativenames\nloadBalancerSourceRanges and externalTrafficPolicy move to the listener configuration from the now deprecated template\n\nFor example, this configuration:\n.Old additional listener configuration\n----\nlisteners:\n  external:\n    type: loadbalancer\n    authentication:\n      type: tls\n    overrides:\n      bootstrap:\n        dnsAnnotations:\n          #...\n\nChanges to:\n.New additional listener configuration\n----\nlisteners:\n    #...\n  - name: external\n    port: 9094\n    type:loadbalancer\n    tls: true\n    configuration:\n      bootstrap:\n        annotations:\n          #...\n\nIMPORTANT: The name and port numbers shown in the new configuration must be used for backwards compatibility.\nUsing any other values will cause problems with the naming of Kafka listeners and Kubernetes services.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3654#discussion_r490304468", "createdAt": "2020-09-17T14:42:11Z", "author": {"login": "PaulRMellor"}, "path": "documentation/modules/upgrading/con-upgrade-listeners.adoc", "diffHunk": "@@ -0,0 +1,63 @@\n+// This module is included in the following assemblies:\n+//\n+// upgrading/assembly_upgrade-kafka-versions.adoc\n+\n+[id='con-upgrade-listeners-{context}']\n+= Updating listener configuration\n+\n+Strimzi provides a `GenericKafkaListener` schema for the configuration of Kafka listeners in a `Kafka` resource.\n+\n+`GenericKafkaListener` replaces the `KafkaListeners` schema, which is deprecated.\n+\n+The `GenericKafkaListener` schema is backwards compatible.\n+\n+With the `GenericKafkaListener` schema, you can configure as many listeners as required,\n+as long as their names and ports are unique.\n+The listener configuration is defined as an array.\n+\n+For clients inside the Kubernetes cluster, you can create `plain` (without encryption) or `tls` _internal_ listeners.\n+\n+For clients outside the Kubernetes cluster, you create _external_ listeners and specify a connection mechanism,\n+which can be `nodeport`, `loadbalancer`, `ingress` or `route`.\n+\n+The `KafkaListeners` schema uses sub-properties for `plain`, `tls` and `external` listeners, with fixed ports for each.\n+As part of your upgrade, you can convert listeners configured using the `KafkaListeners` schema into the format of the `GenericKafkaListener` schema.\n+\n+For example, if you are currently using the following configuration in your `Kafka` configuration:\n+\n+[source,shell,subs=\"+quotes,attributes\"]\n+----\n+listeners:\n+  plain:\n+    # ...\n+  tls:\n+    # ...\n+  external:\n+    type: loadbalancer\n+    # ...\n+----\n+\n+Convert the listeners into the new format using:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkwODQ2MQ=="}, "originalCommit": {"oid": "816158ca79a095474cee39c8314872aae5aa0481"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1OTA2OTQzOnYy", "diffSide": "RIGHT", "path": "documentation/modules/upgrading/con-upgrade-listeners.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxOToxODo0MFrOHSQnRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNDo1NzozOFrOHTmyvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkwODYxMw==", "bodyText": "I don't think this is really true. The listeners field supports both the old deprecated form and the new array form. would be a better way to put it.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3654#discussion_r488908613", "createdAt": "2020-09-15T19:18:40Z", "author": {"login": "scholzj"}, "path": "documentation/modules/upgrading/con-upgrade-listeners.adoc", "diffHunk": "@@ -0,0 +1,63 @@\n+// This module is included in the following assemblies:\n+//\n+// upgrading/assembly_upgrade-kafka-versions.adoc\n+\n+[id='con-upgrade-listeners-{context}']\n+= Updating listener configuration\n+\n+Strimzi provides a `GenericKafkaListener` schema for the configuration of Kafka listeners in a `Kafka` resource.\n+\n+`GenericKafkaListener` replaces the `KafkaListeners` schema, which is deprecated.\n+\n+The `GenericKafkaListener` schema is backwards compatible.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "816158ca79a095474cee39c8314872aae5aa0481"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDMyMDU3Mg==", "bodyText": "Changed and moved into the next paragraph:\n\nWith the GenericKafkaListener schema, you can configure as many listeners as required,\nas long as their names and ports are unique. The listeners configuration is defined as an array, but the deprecated format is also supported.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3654#discussion_r490320572", "createdAt": "2020-09-17T14:57:38Z", "author": {"login": "PaulRMellor"}, "path": "documentation/modules/upgrading/con-upgrade-listeners.adoc", "diffHunk": "@@ -0,0 +1,63 @@\n+// This module is included in the following assemblies:\n+//\n+// upgrading/assembly_upgrade-kafka-versions.adoc\n+\n+[id='con-upgrade-listeners-{context}']\n+= Updating listener configuration\n+\n+Strimzi provides a `GenericKafkaListener` schema for the configuration of Kafka listeners in a `Kafka` resource.\n+\n+`GenericKafkaListener` replaces the `KafkaListeners` schema, which is deprecated.\n+\n+The `GenericKafkaListener` schema is backwards compatible.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkwODYxMw=="}, "originalCommit": {"oid": "816158ca79a095474cee39c8314872aae5aa0481"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2OTA2NTc3OnYy", "diffSide": "RIGHT", "path": "documentation/modules/upgrading/con-upgrade-listeners.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxOToyMzoxM1rOHTxv2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxOToyMzoxM1rOHTxv2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDUwMDA1OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Using any other values will cause problems with the naming of Kafka listeners and Kubernetes services.\n          \n          \n            \n            Using any other values will cause renaming of Kafka listeners and Kubernetes services.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3654#discussion_r490500058", "createdAt": "2020-09-17T19:23:13Z", "author": {"login": "scholzj"}, "path": "documentation/modules/upgrading/con-upgrade-listeners.adoc", "diffHunk": "@@ -0,0 +1,111 @@\n+// This module is included in the following assemblies:\n+//\n+// upgrading/assembly_upgrade-kafka-versions.adoc\n+\n+[id='con-upgrade-listeners-{context}']\n+= Updating listener configuration\n+\n+Strimzi provides a `GenericKafkaListener` schema for the configuration of Kafka listeners in a `Kafka` resource.\n+\n+`GenericKafkaListener` replaces the `KafkaListeners` schema, which is deprecated.\n+\n+With the `GenericKafkaListener` schema, you can configure as many listeners as required,\n+as long as their names and ports are unique.\n+The `listeners` configuration is defined as an array, but the deprecated format is also supported.\n+\n+For clients inside the Kubernetes cluster, you can create `plain` (without encryption) or `tls` _internal_ listeners.\n+\n+For clients outside the Kubernetes cluster, you create _external_ listeners and specify a connection mechanism,\n+which can be `nodeport`, `loadbalancer`, `ingress` or `route`.\n+\n+The `KafkaListeners` schema uses sub-properties for `plain`, `tls` and `external` listeners, with fixed ports for each.\n+After the Kafka upgrade, you can convert listeners configured using the `KafkaListeners` schema into the format of the `GenericKafkaListener` schema.\n+\n+For example, if you are currently using the following configuration in your `Kafka` configuration:\n+\n+.Old listener configuration\n+[source,shell,subs=\"+quotes,attributes\"]\n+----\n+listeners:\n+  plain:\n+    # ...\n+  tls:\n+    # ...\n+  external:\n+    type: loadbalancer\n+    # ...\n+----\n+\n+Convert the listeners into the new format using:\n+\n+.New listener configuration\n+[source,shell,subs=\"+quotes,attributes\"]\n+----\n+listeners:\n+  #...\n+  - name: plain\n+    port: 9092\n+    type: internal\n+    tls: false <1>\n+  - name: tls\n+    port: 9093\n+    type: internal\n+    tls: true\n+  - name: external\n+    port: 9094\n+    type: _EXTERNAL-LISTENER-TYPE_ <2>\n+    tls: true\n+----\n+<1> The TLS property is now required for all listeners.\n+<2> Options: `ingress`, `loadbalancer`, `nodeport`, `route`.\n+\n+Make sure to use the the *exact* names and port numbers shown.\n+\n+For any additional `configuration` or `overrides` properties used with the old format, you need to update them to the new format.\n+\n+Changes introduced to the listener `configuration`:\n+\n+* `overrides` is merged with the `configuration` section\n+* `dnsAnnotations` has been renamed `annotations`\n+* `preferredAddressType` has been renamed `preferredNodePortAddressType`\n+* `address` has been renamed `alternativenames`\n+* `loadBalancerSourceRanges` and `externalTrafficPolicy` move to the listener configuration from the now deprecated `template`\n+\n+For example, this configuration:\n+\n+.Old additional listener configuration\n+[source,shell,subs=\"+quotes,attributes\"]\n+----\n+listeners:\n+  external:\n+    type: loadbalancer\n+    authentication:\n+      type: tls\n+    overrides:\n+      bootstrap:\n+        dnsAnnotations:\n+          #...\n+----\n+\n+Changes to:\n+\n+.New additional listener configuration\n+[source,shell,subs=\"+quotes,attributes\"]\n+----\n+listeners:\n+    #...\n+  - name: external\n+    port: 9094\n+    type:loadbalancer\n+    tls: true\n+    configuration:\n+      bootstrap:\n+        annotations:\n+          #...\n+----\n+\n+IMPORTANT: The name and port numbers shown in the new listener configuration *must* be used for backwards compatibility.\n+Using any other values will cause problems with the naming of Kafka listeners and Kubernetes services.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cde793188e7a77e5ce756f403ff0a53e02e0b84"}, "originalPosition": 108}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2OTA2OTY4OnYy", "diffSide": "RIGHT", "path": "documentation/modules/upgrading/con-upgrade-listeners.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxOToyMzo1M1rOHTxyFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMzo1NTozMlrOHUOOYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDUwMDYyOA==", "bodyText": "Just to make it more clear and identical with the old example above.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            listeners:\n          \n          \n            \n                #...\n          \n          \n            \n              - name: external\n          \n          \n            \n                port: 9094\n          \n          \n            \n                type:loadbalancer\n          \n          \n            \n                tls: true\n          \n          \n            \n                configuration:\n          \n          \n            \n                  bootstrap:\n          \n          \n            \n                    annotations:\n          \n          \n            \n                      #...\n          \n          \n            \n            listeners:\n          \n          \n            \n                #...\n          \n          \n            \n              - name: external\n          \n          \n            \n                port: 9094\n          \n          \n            \n                type:loadbalancer\n          \n          \n            \n                tls: true\n          \n          \n            \n                authentication:\n          \n          \n            \n                  type: tls\n          \n          \n            \n                configuration:\n          \n          \n            \n                  bootstrap:\n          \n          \n            \n                    annotations:\n          \n          \n            \n                      #...", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3654#discussion_r490500628", "createdAt": "2020-09-17T19:23:53Z", "author": {"login": "scholzj"}, "path": "documentation/modules/upgrading/con-upgrade-listeners.adoc", "diffHunk": "@@ -0,0 +1,111 @@\n+// This module is included in the following assemblies:\n+//\n+// upgrading/assembly_upgrade-kafka-versions.adoc\n+\n+[id='con-upgrade-listeners-{context}']\n+= Updating listener configuration\n+\n+Strimzi provides a `GenericKafkaListener` schema for the configuration of Kafka listeners in a `Kafka` resource.\n+\n+`GenericKafkaListener` replaces the `KafkaListeners` schema, which is deprecated.\n+\n+With the `GenericKafkaListener` schema, you can configure as many listeners as required,\n+as long as their names and ports are unique.\n+The `listeners` configuration is defined as an array, but the deprecated format is also supported.\n+\n+For clients inside the Kubernetes cluster, you can create `plain` (without encryption) or `tls` _internal_ listeners.\n+\n+For clients outside the Kubernetes cluster, you create _external_ listeners and specify a connection mechanism,\n+which can be `nodeport`, `loadbalancer`, `ingress` or `route`.\n+\n+The `KafkaListeners` schema uses sub-properties for `plain`, `tls` and `external` listeners, with fixed ports for each.\n+After the Kafka upgrade, you can convert listeners configured using the `KafkaListeners` schema into the format of the `GenericKafkaListener` schema.\n+\n+For example, if you are currently using the following configuration in your `Kafka` configuration:\n+\n+.Old listener configuration\n+[source,shell,subs=\"+quotes,attributes\"]\n+----\n+listeners:\n+  plain:\n+    # ...\n+  tls:\n+    # ...\n+  external:\n+    type: loadbalancer\n+    # ...\n+----\n+\n+Convert the listeners into the new format using:\n+\n+.New listener configuration\n+[source,shell,subs=\"+quotes,attributes\"]\n+----\n+listeners:\n+  #...\n+  - name: plain\n+    port: 9092\n+    type: internal\n+    tls: false <1>\n+  - name: tls\n+    port: 9093\n+    type: internal\n+    tls: true\n+  - name: external\n+    port: 9094\n+    type: _EXTERNAL-LISTENER-TYPE_ <2>\n+    tls: true\n+----\n+<1> The TLS property is now required for all listeners.\n+<2> Options: `ingress`, `loadbalancer`, `nodeport`, `route`.\n+\n+Make sure to use the the *exact* names and port numbers shown.\n+\n+For any additional `configuration` or `overrides` properties used with the old format, you need to update them to the new format.\n+\n+Changes introduced to the listener `configuration`:\n+\n+* `overrides` is merged with the `configuration` section\n+* `dnsAnnotations` has been renamed `annotations`\n+* `preferredAddressType` has been renamed `preferredNodePortAddressType`\n+* `address` has been renamed `alternativenames`\n+* `loadBalancerSourceRanges` and `externalTrafficPolicy` move to the listener configuration from the now deprecated `template`\n+\n+For example, this configuration:\n+\n+.Old additional listener configuration\n+[source,shell,subs=\"+quotes,attributes\"]\n+----\n+listeners:\n+  external:\n+    type: loadbalancer\n+    authentication:\n+      type: tls\n+    overrides:\n+      bootstrap:\n+        dnsAnnotations:\n+          #...\n+----\n+\n+Changes to:\n+\n+.New additional listener configuration\n+[source,shell,subs=\"+quotes,attributes\"]\n+----\n+listeners:\n+    #...\n+  - name: external\n+    port: 9094\n+    type:loadbalancer\n+    tls: true\n+    configuration:\n+      bootstrap:\n+        annotations:\n+          #...", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cde793188e7a77e5ce756f403ff0a53e02e0b84"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk2NjYyNg==", "bodyText": "Thanks. Missed that.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3654#discussion_r490966626", "createdAt": "2020-09-18T13:55:32Z", "author": {"login": "PaulRMellor"}, "path": "documentation/modules/upgrading/con-upgrade-listeners.adoc", "diffHunk": "@@ -0,0 +1,111 @@\n+// This module is included in the following assemblies:\n+//\n+// upgrading/assembly_upgrade-kafka-versions.adoc\n+\n+[id='con-upgrade-listeners-{context}']\n+= Updating listener configuration\n+\n+Strimzi provides a `GenericKafkaListener` schema for the configuration of Kafka listeners in a `Kafka` resource.\n+\n+`GenericKafkaListener` replaces the `KafkaListeners` schema, which is deprecated.\n+\n+With the `GenericKafkaListener` schema, you can configure as many listeners as required,\n+as long as their names and ports are unique.\n+The `listeners` configuration is defined as an array, but the deprecated format is also supported.\n+\n+For clients inside the Kubernetes cluster, you can create `plain` (without encryption) or `tls` _internal_ listeners.\n+\n+For clients outside the Kubernetes cluster, you create _external_ listeners and specify a connection mechanism,\n+which can be `nodeport`, `loadbalancer`, `ingress` or `route`.\n+\n+The `KafkaListeners` schema uses sub-properties for `plain`, `tls` and `external` listeners, with fixed ports for each.\n+After the Kafka upgrade, you can convert listeners configured using the `KafkaListeners` schema into the format of the `GenericKafkaListener` schema.\n+\n+For example, if you are currently using the following configuration in your `Kafka` configuration:\n+\n+.Old listener configuration\n+[source,shell,subs=\"+quotes,attributes\"]\n+----\n+listeners:\n+  plain:\n+    # ...\n+  tls:\n+    # ...\n+  external:\n+    type: loadbalancer\n+    # ...\n+----\n+\n+Convert the listeners into the new format using:\n+\n+.New listener configuration\n+[source,shell,subs=\"+quotes,attributes\"]\n+----\n+listeners:\n+  #...\n+  - name: plain\n+    port: 9092\n+    type: internal\n+    tls: false <1>\n+  - name: tls\n+    port: 9093\n+    type: internal\n+    tls: true\n+  - name: external\n+    port: 9094\n+    type: _EXTERNAL-LISTENER-TYPE_ <2>\n+    tls: true\n+----\n+<1> The TLS property is now required for all listeners.\n+<2> Options: `ingress`, `loadbalancer`, `nodeport`, `route`.\n+\n+Make sure to use the the *exact* names and port numbers shown.\n+\n+For any additional `configuration` or `overrides` properties used with the old format, you need to update them to the new format.\n+\n+Changes introduced to the listener `configuration`:\n+\n+* `overrides` is merged with the `configuration` section\n+* `dnsAnnotations` has been renamed `annotations`\n+* `preferredAddressType` has been renamed `preferredNodePortAddressType`\n+* `address` has been renamed `alternativenames`\n+* `loadBalancerSourceRanges` and `externalTrafficPolicy` move to the listener configuration from the now deprecated `template`\n+\n+For example, this configuration:\n+\n+.Old additional listener configuration\n+[source,shell,subs=\"+quotes,attributes\"]\n+----\n+listeners:\n+  external:\n+    type: loadbalancer\n+    authentication:\n+      type: tls\n+    overrides:\n+      bootstrap:\n+        dnsAnnotations:\n+          #...\n+----\n+\n+Changes to:\n+\n+.New additional listener configuration\n+[source,shell,subs=\"+quotes,attributes\"]\n+----\n+listeners:\n+    #...\n+  - name: external\n+    port: 9094\n+    type:loadbalancer\n+    tls: true\n+    configuration:\n+      bootstrap:\n+        annotations:\n+          #...", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDUwMDYyOA=="}, "originalCommit": {"oid": "1cde793188e7a77e5ce756f403ff0a53e02e0b84"}, "originalPosition": 104}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1130, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}