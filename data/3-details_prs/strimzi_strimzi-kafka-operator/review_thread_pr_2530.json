{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczMjk3OTE2", "number": 2530, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwODo0NjowN1rODeuIpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMjozODowNFrODeyYMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNTM5NzUxOnYy", "diffSide": "RIGHT", "path": "systemtest/src/test/java/io/strimzi/systemtest/LogSettingST.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwODo0NjowN1rOFoAy6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwOToxNDo0N1rOFoBjow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzUwMDM5Mw==", "bodyText": "is there a plan for some other test to check that even Kafka Bridge, Mirror Maker, Mirror Maker 2 and Connect are there as well?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2530#discussion_r377500393", "createdAt": "2020-02-11T08:46:07Z", "author": {"login": "ppatierno"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/LogSettingST.java", "diffHunk": "@@ -245,6 +249,23 @@ void testGcLoggingSetDisabled() {\n         assertThat(\"Mirror-maker GC logging is disabled\", checkGcLoggingDeployments(KafkaMirrorMakerResources.deploymentName(CLUSTER_NAME)), is(false));\n     }\n \n+    @Test\n+    @Order(11)\n+    void testKubectlGetStrimzi() {\n+        String userName = \"test-user\";\n+        String topicName = \"test-topic\";\n+\n+        KafkaTopicResource.topic(CLUSTER_NAME, topicName).done();\n+        KafkaUserResource.tlsUser(CLUSTER_NAME, userName).done();\n+\n+        String strimziCRs = cmdKubeClient().execInCurrentNamespace(\"get\", \"strimzi\").out();\n+\n+        assertThat(strimziCRs, containsString(CLUSTER_NAME));\n+        assertThat(strimziCRs, containsString(GC_LOGGING_SET_NAME));\n+        assertThat(strimziCRs, containsString(userName));\n+        assertThat(strimziCRs, containsString(topicName));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13c5d8d457f1648e28235b166a6df2ebf5698817"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzUwMjgwMA==", "bodyText": "I guess that could be added to the ST for those specific CRs.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2530#discussion_r377502800", "createdAt": "2020-02-11T08:52:11Z", "author": {"login": "tombentley"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/LogSettingST.java", "diffHunk": "@@ -245,6 +249,23 @@ void testGcLoggingSetDisabled() {\n         assertThat(\"Mirror-maker GC logging is disabled\", checkGcLoggingDeployments(KafkaMirrorMakerResources.deploymentName(CLUSTER_NAME)), is(false));\n     }\n \n+    @Test\n+    @Order(11)\n+    void testKubectlGetStrimzi() {\n+        String userName = \"test-user\";\n+        String topicName = \"test-topic\";\n+\n+        KafkaTopicResource.topic(CLUSTER_NAME, topicName).done();\n+        KafkaUserResource.tlsUser(CLUSTER_NAME, userName).done();\n+\n+        String strimziCRs = cmdKubeClient().execInCurrentNamespace(\"get\", \"strimzi\").out();\n+\n+        assertThat(strimziCRs, containsString(CLUSTER_NAME));\n+        assertThat(strimziCRs, containsString(GC_LOGGING_SET_NAME));\n+        assertThat(strimziCRs, containsString(userName));\n+        assertThat(strimziCRs, containsString(topicName));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzUwMDM5Mw=="}, "originalCommit": {"oid": "13c5d8d457f1648e28235b166a6df2ebf5698817"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzUwNTY4Mw==", "bodyText": "Well currently for example Bridge is deployed with same name as Kafka and only way how to distinguish it's Kafka and not Bridge could be via some regex. Question is - is that worthy? Or change the name of each component and assert all new names. I can try both later (there are other things with higher priority atm).", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2530#discussion_r377505683", "createdAt": "2020-02-11T08:58:40Z", "author": {"login": "Frawless"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/LogSettingST.java", "diffHunk": "@@ -245,6 +249,23 @@ void testGcLoggingSetDisabled() {\n         assertThat(\"Mirror-maker GC logging is disabled\", checkGcLoggingDeployments(KafkaMirrorMakerResources.deploymentName(CLUSTER_NAME)), is(false));\n     }\n \n+    @Test\n+    @Order(11)\n+    void testKubectlGetStrimzi() {\n+        String userName = \"test-user\";\n+        String topicName = \"test-topic\";\n+\n+        KafkaTopicResource.topic(CLUSTER_NAME, topicName).done();\n+        KafkaUserResource.tlsUser(CLUSTER_NAME, userName).done();\n+\n+        String strimziCRs = cmdKubeClient().execInCurrentNamespace(\"get\", \"strimzi\").out();\n+\n+        assertThat(strimziCRs, containsString(CLUSTER_NAME));\n+        assertThat(strimziCRs, containsString(GC_LOGGING_SET_NAME));\n+        assertThat(strimziCRs, containsString(userName));\n+        assertThat(strimziCRs, containsString(topicName));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzUwMDM5Mw=="}, "originalCommit": {"oid": "13c5d8d457f1648e28235b166a6df2ebf5698817"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzUwNjg4Ng==", "bodyText": "Why the bridge is deployed with the same name as Kafka? Even our examples have my-cluster and my-bridge as different names.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2530#discussion_r377506886", "createdAt": "2020-02-11T09:01:12Z", "author": {"login": "ppatierno"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/LogSettingST.java", "diffHunk": "@@ -245,6 +249,23 @@ void testGcLoggingSetDisabled() {\n         assertThat(\"Mirror-maker GC logging is disabled\", checkGcLoggingDeployments(KafkaMirrorMakerResources.deploymentName(CLUSTER_NAME)), is(false));\n     }\n \n+    @Test\n+    @Order(11)\n+    void testKubectlGetStrimzi() {\n+        String userName = \"test-user\";\n+        String topicName = \"test-topic\";\n+\n+        KafkaTopicResource.topic(CLUSTER_NAME, topicName).done();\n+        KafkaUserResource.tlsUser(CLUSTER_NAME, userName).done();\n+\n+        String strimziCRs = cmdKubeClient().execInCurrentNamespace(\"get\", \"strimzi\").out();\n+\n+        assertThat(strimziCRs, containsString(CLUSTER_NAME));\n+        assertThat(strimziCRs, containsString(GC_LOGGING_SET_NAME));\n+        assertThat(strimziCRs, containsString(userName));\n+        assertThat(strimziCRs, containsString(topicName));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzUwMDM5Mw=="}, "originalCommit": {"oid": "13c5d8d457f1648e28235b166a6df2ebf5698817"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzUxMjg2Nw==", "bodyText": "I think I just wanted to use only one variable. I will change it in this PR.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2530#discussion_r377512867", "createdAt": "2020-02-11T09:14:47Z", "author": {"login": "Frawless"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/LogSettingST.java", "diffHunk": "@@ -245,6 +249,23 @@ void testGcLoggingSetDisabled() {\n         assertThat(\"Mirror-maker GC logging is disabled\", checkGcLoggingDeployments(KafkaMirrorMakerResources.deploymentName(CLUSTER_NAME)), is(false));\n     }\n \n+    @Test\n+    @Order(11)\n+    void testKubectlGetStrimzi() {\n+        String userName = \"test-user\";\n+        String topicName = \"test-topic\";\n+\n+        KafkaTopicResource.topic(CLUSTER_NAME, topicName).done();\n+        KafkaUserResource.tlsUser(CLUSTER_NAME, userName).done();\n+\n+        String strimziCRs = cmdKubeClient().execInCurrentNamespace(\"get\", \"strimzi\").out();\n+\n+        assertThat(strimziCRs, containsString(CLUSTER_NAME));\n+        assertThat(strimziCRs, containsString(GC_LOGGING_SET_NAME));\n+        assertThat(strimziCRs, containsString(userName));\n+        assertThat(strimziCRs, containsString(topicName));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzUwMDM5Mw=="}, "originalCommit": {"oid": "13c5d8d457f1648e28235b166a6df2ebf5698817"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNjA5MjY2OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/strimzi/api/kafka/model/KafkaMirrorMaker2.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMjozODowNFrOFoHYyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMjo1OToyMVrOFoH_Dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzYwODM5NA==", "bodyText": "You have to build api module and do make crd_install to propagate this change into CRD files.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2530#discussion_r377608394", "createdAt": "2020-02-11T12:38:04Z", "author": {"login": "sknot-rh"}, "path": "api/src/main/java/io/strimzi/api/kafka/model/KafkaMirrorMaker2.java", "diffHunk": "@@ -36,7 +37,8 @@\n                 names = @Crd.Spec.Names(\n                         kind = KafkaMirrorMaker2.RESOURCE_KIND,\n                         plural = KafkaMirrorMaker2.RESOURCE_PLURAL,\n-                        shortNames = {KafkaMirrorMaker2.SHORT_NAME}\n+                        shortNames = {KafkaMirrorMaker2.SHORT_NAME},\n+                        categories = {STRIMZI_CATEGORY}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4192a1f8e8c49637d84ac9abce3ff643ce5a8acb"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzYxODE5MQ==", "bodyText": "Fixed, thank you!", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2530#discussion_r377618191", "createdAt": "2020-02-11T12:59:21Z", "author": {"login": "Frawless"}, "path": "api/src/main/java/io/strimzi/api/kafka/model/KafkaMirrorMaker2.java", "diffHunk": "@@ -36,7 +37,8 @@\n                 names = @Crd.Spec.Names(\n                         kind = KafkaMirrorMaker2.RESOURCE_KIND,\n                         plural = KafkaMirrorMaker2.RESOURCE_PLURAL,\n-                        shortNames = {KafkaMirrorMaker2.SHORT_NAME}\n+                        shortNames = {KafkaMirrorMaker2.SHORT_NAME},\n+                        categories = {STRIMZI_CATEGORY}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzYwODM5NA=="}, "originalCommit": {"oid": "4192a1f8e8c49637d84ac9abce3ff643ce5a8acb"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 435, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}