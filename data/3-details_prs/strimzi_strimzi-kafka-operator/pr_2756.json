{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0ODI3MDc5", "number": 2756, "title": "Accidentally removed CA should trigger crt recreation (and rolling update)", "bodyText": "Signed-off-by: Stanislav Knot sknot@redhat.com\nType of change\n\nBugfix\n\nDescription\nFixes #542\nChecklist\n\n Update/write design documentation in ./design\n Write tests\n Make sure all tests pass\n Update documentation\n Check RBAC rights for Kubernetes / OpenShift roles\n Try your changes from Pod inside your Kubernetes and OpenShift cluster, not just locally\n Reference relevant issue(s) and close them after merging\n Update CHANGELOG.md", "createdAt": "2020-03-27T15:41:37Z", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2756", "merged": true, "mergeCommit": {"oid": "001579569056239e979675e382800d5f630f379c"}, "closed": true, "closedAt": "2020-04-01T20:10:58Z", "author": {"login": "sknot-rh"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRylkagH2gAyMzk0ODI3MDc5OmFhMDZmMDM2YjVkOTgxMmY1Mzk5YzhkZTU2OTI3ZWNkOWNiODY2N2U=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcSphd_gH2gAyMzk0ODI3MDc5OjU5YTQ1OWUyZmYwYzQ2ZTkyYzZkM2I1ZDNlZWYwZmJmZjUyYWNjZTE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "aa06f036b5d9812f5399c8de56927ecd9cb8667e", "author": {"user": {"login": "sknot-rh", "name": "Stanislav Knot"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/aa06f036b5d9812f5399c8de56927ecd9cb8667e", "committedDate": "2020-03-27T15:39:05Z", "message": "Accidentally removed CA should trigger crt recreation (and rolling update)\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyOTkwNzgx", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2756#pullrequestreview-382990781", "createdAt": "2020-03-27T15:59:58Z", "commit": {"oid": "aa06f036b5d9812f5399c8de56927ecd9cb8667e"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNTo1OTo1OFrOF83oCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNjowODoxOFrOF839xQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM3MDI1MA==", "bodyText": "If I am reading the logic correctly, might it make sense to put isMaintenanceTimeWindowsSatisfied first, i.e\nif (isMaintenanceTimeWindowsSatisfied && ...\n\nAs the prior three checks dont matter if this is false?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2756#discussion_r399370250", "createdAt": "2020-03-27T15:59:58Z", "author": {"login": "samuel-hawker"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/ModelUtils.java", "diffHunk": "@@ -234,14 +234,14 @@ public static Secret buildSecret(ClusterCa clusterCa, Secret secret, String name\n             reasons.add(\"certificate doesn't exist yet\");\n             shouldBeRegenerated = true;\n         } else {\n-            if (clusterCa.certRenewed() || (clusterCa.isExpiring(secret, keyCertName + \".crt\") && isMaintenanceTimeWindowsSatisfied)) {\n+            if (clusterCa.keyCreated() || clusterCa.certRenewed() || (clusterCa.isExpiring(secret, keyCertName + \".crt\") && isMaintenanceTimeWindowsSatisfied)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa06f036b5d9812f5399c8de56927ecd9cb8667e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM3MTkwMA==", "bodyText": "This is mostly stylistic but I believe .equals is generally preferred to == as we can choose to override how we compare objects and can avoid object hashes not matching https://stackoverflow.com/questions/7520432/what-is-the-difference-between-and-equals-in-java\n99% of the time it doesn't matter but thought it was worth a mention.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2756#discussion_r399371900", "createdAt": "2020-03-27T16:02:21Z", "author": {"login": "samuel-hawker"}, "path": "operator-common/src/main/java/io/strimzi/operator/cluster/model/Ca.java", "diffHunk": "@@ -737,6 +741,10 @@ public boolean keyReplaced() {\n         return renewalType == RenewalType.REPLACE_KEY;\n     }\n \n+    public boolean keyCreated() {\n+        return renewalType == RenewalType.CREATE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa06f036b5d9812f5399c8de56927ecd9cb8667e"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM3MzgzMQ==", "bodyText": "Might be overly nit-picky, but the cause of why it is removed could be seen as not part of the 'test'\nI would opt to have it be called something like\ntestClusterCaRemovedTriggersRollingUpdate\n\nand then have a documented comment explaining the context of this test is it being accidentally removed.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2756#discussion_r399373831", "createdAt": "2020-03-27T16:05:15Z", "author": {"login": "samuel-hawker"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/RollingUpdateST.java", "diffHunk": "@@ -777,6 +778,41 @@ void testTriggerRollingUpdateAfterOverrideBootstrap() throws CertificateExceptio\n         // TODO: send and recv messages via this new bootstrap (after client builder) https://github.com/strimzi/strimzi-kafka-operator/pull/2520\n     }\n \n+    @Test\n+    void testAccidentallyRemovedCaTriggersRollingUpdate() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa06f036b5d9812f5399c8de56927ecd9cb8667e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM3NTgxMw==", "bodyText": "isKeyCreated would be slightly more idiomatic, but given the other similar methods are not using is I can understand why you matched the convention", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2756#discussion_r399375813", "createdAt": "2020-03-27T16:08:18Z", "author": {"login": "samuel-hawker"}, "path": "operator-common/src/main/java/io/strimzi/operator/cluster/model/Ca.java", "diffHunk": "@@ -737,6 +741,10 @@ public boolean keyReplaced() {\n         return renewalType == RenewalType.REPLACE_KEY;\n     }\n \n+    public boolean keyCreated() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa06f036b5d9812f5399c8de56927ecd9cb8667e"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzMzE0Njc3", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2756#pullrequestreview-383314677", "createdAt": "2020-03-28T13:49:11Z", "commit": {"oid": "aa06f036b5d9812f5399c8de56927ecd9cb8667e"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxMzo0OToxMVrOF9Jlxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxMzo1NDo0MlrOF9Jn-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY2NDU4Mw==", "bodyText": "use please username from BaseST  & remove that redundant definition\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    KafkaUser user = KafkaUserResource.tlsUser(CLUSTER_NAME, userName).done();\n          \n          \n            \n                    KafkaUser user = KafkaUserResource.tlsUser(CLUSTER_NAME, USER_NAME).done();", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2756#discussion_r399664583", "createdAt": "2020-03-28T13:49:11Z", "author": {"login": "see-quick"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/RollingUpdateST.java", "diffHunk": "@@ -777,6 +778,41 @@ void testTriggerRollingUpdateAfterOverrideBootstrap() throws CertificateExceptio\n         // TODO: send and recv messages via this new bootstrap (after client builder) https://github.com/strimzi/strimzi-kafka-operator/pull/2520\n     }\n \n+    @Test\n+    void testAccidentallyRemovedCaTriggersRollingUpdate() {\n+        KafkaResource.kafkaPersistent(CLUSTER_NAME, 3, 3).done();\n+        String topicName = \"test-topic-\" + new Random().nextInt(Integer.MAX_VALUE);\n+        KafkaTopicResource.topic(CLUSTER_NAME, topicName, 2, 2).done();\n+\n+        String userName = \"alice\";\n+        KafkaUser user = KafkaUserResource.tlsUser(CLUSTER_NAME, userName).done();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa06f036b5d9812f5399c8de56927ecd9cb8667e"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY2NTE0NA==", "bodyText": "Do we need to explicitly choose namespace? Will the following simply not work?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    kubeClient(NAMESPACE).deleteSecret(KafkaResources.clusterCaKeySecretName(CLUSTER_NAME));\n          \n          \n            \n                    kubeClient().deleteSecret(KafkaResources.clusterCaKeySecretName(CLUSTER_NAME));", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2756#discussion_r399665144", "createdAt": "2020-03-28T13:54:42Z", "author": {"login": "see-quick"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/RollingUpdateST.java", "diffHunk": "@@ -777,6 +778,41 @@ void testTriggerRollingUpdateAfterOverrideBootstrap() throws CertificateExceptio\n         // TODO: send and recv messages via this new bootstrap (after client builder) https://github.com/strimzi/strimzi-kafka-operator/pull/2520\n     }\n \n+    @Test\n+    void testAccidentallyRemovedCaTriggersRollingUpdate() {\n+        KafkaResource.kafkaPersistent(CLUSTER_NAME, 3, 3).done();\n+        String topicName = \"test-topic-\" + new Random().nextInt(Integer.MAX_VALUE);\n+        KafkaTopicResource.topic(CLUSTER_NAME, topicName, 2, 2).done();\n+\n+        String userName = \"alice\";\n+        KafkaUser user = KafkaUserResource.tlsUser(CLUSTER_NAME, userName).done();\n+\n+        KafkaClientsResource.deployKafkaClients(true, CLUSTER_NAME + \"-\" + Constants.KAFKA_CLIENTS, user).done();\n+        final String defaultKafkaClientsPodName =\n+                ResourceManager.kubeClient().listPodsByPrefixInName(CLUSTER_NAME + \"-\" + Constants.KAFKA_CLIENTS).get(0).getMetadata().getName();\n+\n+        internalKafkaClient.setPodName(defaultKafkaClientsPodName);\n+\n+        Map<String, String> kafkaPods = StatefulSetUtils.ssSnapshot(KafkaResources.kafkaStatefulSetName(CLUSTER_NAME));\n+        Map<String, String> zkPods = StatefulSetUtils.ssSnapshot(KafkaResources.zookeeperStatefulSetName(CLUSTER_NAME));\n+\n+        int sent = internalKafkaClient.sendMessagesTls(topicName, NAMESPACE, CLUSTER_NAME, userName, MESSAGE_COUNT, \"TLS\");\n+        assertThat(sent, is(MESSAGE_COUNT));\n+\n+        String zkCrtBeforeAccident = kubeClient(NAMESPACE).getSecret(CLUSTER_NAME + \"-zookeeper-nodes\").getData().get(CLUSTER_NAME + \"-zookeeper-0.crt\");\n+        String kCrtBeforeAccident = kubeClient(NAMESPACE).getSecret(CLUSTER_NAME + \"-kafka-brokers\").getData().get(CLUSTER_NAME + \"-kafka-0.crt\");\n+        kubeClient(NAMESPACE).deleteSecret(KafkaResources.clusterCaKeySecretName(CLUSTER_NAME));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa06f036b5d9812f5399c8de56927ecd9cb8667e"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNDI1NTA0", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2756#pullrequestreview-383425504", "createdAt": "2020-03-29T15:49:10Z", "commit": {"oid": "aa06f036b5d9812f5399c8de56927ecd9cb8667e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNTc4NTIw", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2756#pullrequestreview-383578520", "createdAt": "2020-03-30T07:06:20Z", "commit": {"oid": "aa06f036b5d9812f5399c8de56927ecd9cb8667e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59a459e2ff0c46e92c6d3b5d3eef0fbff52acce1", "author": {"user": {"login": "sknot-rh", "name": "Stanislav Knot"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/59a459e2ff0c46e92c6d3b5d3eef0fbff52acce1", "committedDate": "2020-03-30T07:39:23Z", "message": "comments\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2142, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}