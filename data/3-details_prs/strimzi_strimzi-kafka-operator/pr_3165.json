{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI5NTAzMTEw", "number": 3165, "title": "Add support for scale subresource to Connect, S2I, MM1, MM2, Bridge and Connectors", "bodyText": "Type of change\n\nEnhancement / new feature\n\nDescription\nThis PR adds support for scale subresource. Rght now it is added to following resources:\n\nKafkaConnect, KafkaConnectS2I and KafkaMirrorMaker2\nKafkaMirrorMaker\nKafkaBridge\nKafkaConnector\n\nThe scale subresource is useful because it makes it easier to scale the resources and for example use different tools for autoscaling on them.\nTo allow support for the scale subresource, some new status fields have been added. One is a field which mirrors the corresponding number of replicas. Other one is label selector which is important for use with Horizontal Pod Autoscalers.\nFor all Deployment based resources, this is done by a new field .status.replicas which mirrors .spec.replicas and .status.podSelector which can be used to select the pods. KafkaConnector is an example of scaling a resource not represented by pods. In this case, the label selector is not present and the .spec.tasksMax and .status.tasksMax represent the replicas field.\nThe tests include a test for the CRD generator with CRD including status and scale subresources, tests of the api module that test that the scale subresource works and Cluster Operator tests testing the new status fields. To make the api tests pass I had to update kubectl to 1.16 (1.15 has a bug kubernetes/kubernetes#81342 due to which it doesn't work).\nThis PR also fixes the flaky test KafkaCrdIT.testKafkaWithTemplate which was causing problems while testing this.\nChecklist\n\n Write tests\n Make sure all tests pass\n Update documentation\n Check RBAC rights for Kubernetes / OpenShift roles\n Try your changes from Pod inside your Kubernetes and OpenShift cluster, not just locally\n Update CHANGELOG.md", "createdAt": "2020-06-06T23:09:52Z", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3165", "merged": true, "mergeCommit": {"oid": "3a06fbd1db0c4d60c8349ffead6e4860a5e8cbf0"}, "closed": true, "closedAt": "2020-06-11T20:42:21Z", "author": {"login": "scholzj"}, "timelineItems": {"totalCount": 27, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcpRWpbAFqTQyNjI2MzE0NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcqJ8mHAFqTQyODY5NzM2NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2MjYzMTQ1", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3165#pullrequestreview-426263145", "createdAt": "2020-06-08T13:50:42Z", "commit": {"oid": "d1287c310907e51c64e8303d59341d9cbc05dd39"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMzo1MDo0MlrOGgfNoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNDoyODowMFrOGghOeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjcxOTAwOQ==", "bodyText": "They're not really representing the resource. I'm suggesting provide, but I'm not completely convinced by that either.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Description(\"Total number of pods representing this resource.\")\n          \n          \n            \n                @Description(\"The current number of pods being used to provide this resource.\")", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3165#discussion_r436719009", "createdAt": "2020-06-08T13:50:42Z", "author": {"login": "tombentley"}, "path": "api/src/main/java/io/strimzi/api/kafka/model/status/KafkaConnectStatus.java", "diffHunk": "@@ -50,4 +53,24 @@ public void setUrl(String url) {\n     public void setConnectorPlugins(List<ConnectorPlugin> connectorPlugins) {\n         this.connectorPlugins = connectorPlugins;\n     }\n+\n+    @JsonInclude(JsonInclude.Include.NON_NULL)\n+    @Description(\"Total number of pods representing this resource.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1287c310907e51c64e8303d59341d9cbc05dd39"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjcxOTQ0OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Description(\"Label selector for pods representing this resource.\")\n          \n          \n            \n                @Description(\"Label selector for pods providing this resource.\")", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3165#discussion_r436719448", "createdAt": "2020-06-08T13:51:07Z", "author": {"login": "tombentley"}, "path": "api/src/main/java/io/strimzi/api/kafka/model/status/KafkaConnectStatus.java", "diffHunk": "@@ -50,4 +53,24 @@ public void setUrl(String url) {\n     public void setConnectorPlugins(List<ConnectorPlugin> connectorPlugins) {\n         this.connectorPlugins = connectorPlugins;\n     }\n+\n+    @JsonInclude(JsonInclude.Include.NON_NULL)\n+    @Description(\"Total number of pods representing this resource.\")\n+    public int getReplicas() {\n+        return replicas;\n+    }\n+\n+    public void setReplicas(int replicas) {\n+        this.replicas = replicas;\n+    }\n+\n+    @JsonInclude(JsonInclude.Include.NON_NULL)\n+    @Description(\"Label selector for pods representing this resource.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1287c310907e51c64e8303d59341d9cbc05dd39"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjcyMzM1MQ==", "bodyText": "If you default this to the empty array you won't have to specify an empty scale subresource for things which don't have it, like Kafka.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        Scale[] scale();\n          \n          \n            \n                        Scale[] scale() default {};", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3165#discussion_r436723351", "createdAt": "2020-06-08T13:54:54Z", "author": {"login": "tombentley"}, "path": "crd-generator/src/main/java/io/strimzi/crdgenerator/annotations/Crd.java", "diffHunk": "@@ -108,17 +110,31 @@\n          * @return The subresources of a custom resources that this is the definition for.\n          * @see <a href=\"https://v1-11.docs.kubernetes.io/docs/reference/generated/kubernetes-api/v1.11/#customresourcedefinitionversion-v1beta1-apiextensions\">Kubernetes 1.11 API documtation</a>\n          */\n-        Subresources subresources() default @Subresources(status = {});\n+        Subresources subresources() default @Subresources(\n+                status = {},\n+                scale = {}\n+                );\n \n         /**\n          * The subresources of a custom resources that this is the definition for.\n          * @see <a href=\"https://v1-11.docs.kubernetes.io/docs/reference/generated/kubernetes-api/v1.11/#customresourcedefinitionversion-v1beta1-apiextensions\">Kubernetes 1.11 API documtation</a>\n          */\n         @interface Subresources {\n             Status[] status();\n+            Scale[] scale();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1287c310907e51c64e8303d59341d9cbc05dd39"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjczNDkzNg==", "bodyText": "In the CRD schema status and scale are both scalar quantities. When I added support for the status subresource wanted to have a way to say \"this CRD supports status\" or not, and I chose not to use a boolean flag for that, but rather use the presence/absence of the @Status annotation to indicate that. Since you can only omit an annotation value if it has a default, and you can't default an annotation to null that forced me to make status an array. You're using the same pattern here, which I guess is fine, but I suppose we should have the CrdGenerator exit with an error if the length of the array is greater than 1.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3165#discussion_r436734936", "createdAt": "2020-06-08T14:06:34Z", "author": {"login": "tombentley"}, "path": "crd-generator/src/main/java/io/strimzi/crdgenerator/CrdGenerator.java", "diffHunk": "@@ -254,11 +254,27 @@ private ObjectNode buildSpec(Crd.Spec crd, Class<? extends CustomResource> crdCl\n             result.set(\"additionalPrinterColumns\", cols);\n         }\n         if (crd.subresources().status().length != 0) {\n-            ObjectNode statusNode = nf.objectNode();\n+            ObjectNode subresources = nf.objectNode();\n+\n             if (crd.subresources().status().length > 0) {\n-                statusNode.set(\"status\", nf.objectNode());\n+                subresources.set(\"status\", nf.objectNode());\n+            }\n+\n+            if (crd.subresources().scale().length > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1287c310907e51c64e8303d59341d9cbc05dd39"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc1MTk5Mw==", "bodyText": "This isn't correct. A Connector.taskConfigs(int maxTasks) is called by Connect to get the tasks configs, but the connector is not obliged to return maxTasks configs. Some connectors (such as the Debezium [MySQL connector}(https://debezium.io/documentation/reference/1.1/connectors/mysql.html)) return fewer task configs. So we would at least need to get the actual number of tasks that the connector is using, via the REST API, rather than copying the value from the spec.\nSomething else to be aware of: for a source connector it's possible that returning >1 task config when there's no way of partitioning the source data will result in duplicated records in the topic, because two or more tasks consume the same events from the source system. In theory people should be writing their connectors to return only 1 task config in that case, but that doesn't mean people actually do that in practice. Turning an autoscaler loose on such connectors would result in dupes. So it might be worthwhile have some way, in the CR, of opting in to having these published on the status (or maybe autoscalers already work by selecting their victims via labels, and it would be up to the user to not configure those labels for KafkaConnector resources which didn't properly support multiple tasks.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3165#discussion_r436751993", "createdAt": "2020-06-08T14:28:00Z", "author": {"login": "tombentley"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/AbstractConnectOperator.java", "diffHunk": "@@ -565,6 +565,7 @@ public static void updateStatus(Throwable error, KafkaConnector kafkaConnector2,\n         }\n         StatusUtils.setStatusConditionAndObservedGeneration(connector, status, error != null ? Future.failedFuture(error) : Future.succeededFuture());\n         status.setConnectorStatus(statusResult);\n+        status.setTasksMax(connector.getSpec().getTasksMax());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1287c310907e51c64e8303d59341d9cbc05dd39"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9968ff7329502f12afe3f1ddf8144682ba4fb05f", "author": {"user": {"login": "scholzj", "name": "Jakub Scholz"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/9968ff7329502f12afe3f1ddf8144682ba4fb05f", "committedDate": "2020-06-08T21:41:03Z", "message": "Add scaling to Bridge and MM\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>"}, "afterCommit": {"oid": "6a5727df14b12716df3007386f78695e355983af", "author": {"user": {"login": "scholzj", "name": "Jakub Scholz"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/6a5727df14b12716df3007386f78695e355983af", "committedDate": "2020-06-08T21:47:36Z", "message": "Add scaling to Bridge and MM\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2ODkxMjcy", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3165#pullrequestreview-426891272", "createdAt": "2020-06-09T08:12:34Z", "commit": {"oid": "6a5727df14b12716df3007386f78695e355983af"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwODoxMjozNFrOGg9s1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwODoxMjozNFrOGg9s1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIxODUxOQ==", "bodyText": "isn't kafkabridges/scale missing?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3165#discussion_r437218519", "createdAt": "2020-06-09T08:12:34Z", "author": {"login": "ppatierno"}, "path": "install/strimzi-admin/010-ClusterRole-strimzi-admin.yaml", "diffHunk": "@@ -13,13 +13,17 @@ rules:\n   resources:\n   - kafkas\n   - kafkaconnects\n+  - kafkaconnects/scale\n   - kafkaconnects2is\n+  - kafkaconnects2is/scale\n   - kafkamirrormakers\n   - kafkausers\n   - kafkatopics\n   - kafkabridges", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a5727df14b12716df3007386f78695e355983af"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2OTA4NTU1", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3165#pullrequestreview-426908555", "createdAt": "2020-06-09T08:33:48Z", "commit": {"oid": "6a5727df14b12716df3007386f78695e355983af"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwODozMzo0OVrOGg-gVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwODozMzo0OVrOGg-gVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIzMTcwMg==", "bodyText": "I think we are missing a full stop here", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3165#discussion_r437231702", "createdAt": "2020-06-09T08:33:49Z", "author": {"login": "samuel-hawker"}, "path": "api/src/main/java/io/strimzi/api/kafka/model/status/KafkaConnectorStatus.java", "diffHunk": "@@ -39,4 +40,14 @@\n     public void setConnectorStatus(Map<String, Object> connectorStatus) {\n         this.connectorStatus = connectorStatus;\n     }\n+\n+    @JsonInclude(JsonInclude.Include.NON_NULL)\n+    @Description(\"The maximum number of tasks for the Kafka Connector\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a5727df14b12716df3007386f78695e355983af"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3ODE2MzIz", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3165#pullrequestreview-427816323", "createdAt": "2020-06-10T08:14:35Z", "commit": {"oid": "745ddd648be12ca0b1dba0a9d836f9e8b763252f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwODoxNDozNVrOGhp5bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwODoxNDozNVrOGhp5bA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk0MjYzNg==", "bodyText": "I wonder if it is worth a small doc comment explaining why this is the 'actual' value and why tasksMax is sometimes not set?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3165#discussion_r437942636", "createdAt": "2020-06-10T08:14:35Z", "author": {"login": "samuel-hawker"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/AbstractConnectOperator.java", "diffHunk": "@@ -565,14 +565,28 @@ public static void updateStatus(Throwable error, KafkaConnector kafkaConnector2,\n         }\n         StatusUtils.setStatusConditionAndObservedGeneration(connector, status, error != null ? Future.failedFuture(error) : Future.succeededFuture());\n         status.setConnectorStatus(statusResult);\n-        status.setTasksMax(connector.getSpec().getTasksMax());\n+\n+        status.setTasksMax(getActualTaskCount(connector, statusResult));\n \n         return maybeUpdateStatusCommon(connectorOperator, connector, reconciliation, status,\n             (connector1, status1) -> {\n                 return new KafkaConnectorBuilder(connector1).withStatus(status1).build();\n             });\n     }\n \n+    protected int getActualTaskCount(KafkaConnector connector, Map<String, Object> statusResult)  {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "745ddd648be12ca0b1dba0a9d836f9e8b763252f"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed16b7f96eb238b68a2f3fde1db14fb10b24f12b", "author": {"user": {"login": "scholzj", "name": "Jakub Scholz"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/ed16b7f96eb238b68a2f3fde1db14fb10b24f12b", "committedDate": "2020-06-10T12:58:27Z", "message": "Add support for scale subresource in KafkaConnect, its derivatives and KafkaConnector\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38ea61283aa2faa65c379db86d8149950251ea76", "author": {"user": {"login": "scholzj", "name": "Jakub Scholz"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/38ea61283aa2faa65c379db86d8149950251ea76", "committedDate": "2020-06-10T12:58:27Z", "message": "Apply suggestions from code review\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>\n\nCo-authored-by: Tom Bentley <tombentley@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48f19a59d7f555771e1da6585512ee623f17f408", "author": {"user": {"login": "scholzj", "name": "Jakub Scholz"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/48f19a59d7f555771e1da6585512ee623f17f408", "committedDate": "2020-06-10T12:58:27Z", "message": "Review comments\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c40d93bf12492a071532c01b4e0c0c904d3ee652", "author": {"user": {"login": "scholzj", "name": "Jakub Scholz"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/c40d93bf12492a071532c01b4e0c0c904d3ee652", "committedDate": "2020-06-10T12:58:27Z", "message": "Add scaling to Bridge and MM\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3fea37eda0f24898bbae6baa579550bf12f47f7", "author": {"user": {"login": "scholzj", "name": "Jakub Scholz"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/d3fea37eda0f24898bbae6baa579550bf12f47f7", "committedDate": "2020-06-10T12:58:27Z", "message": "Make existing tests pass and fix some review comments\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e4b00b8b2eafcb0de9d3e4dcfbee630ac8edfb6", "author": {"user": {"login": "scholzj", "name": "Jakub Scholz"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/8e4b00b8b2eafcb0de9d3e4dcfbee630ac8edfb6", "committedDate": "2020-06-10T12:58:27Z", "message": "Add CRD tests\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MDI3NTA5", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3165#pullrequestreview-428027509", "createdAt": "2020-06-10T13:01:33Z", "commit": {"oid": "745ddd648be12ca0b1dba0a9d836f9e8b763252f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5587b101f93314cbe0d4ba44c02359cadbd1033e", "author": {"user": {"login": "scholzj", "name": "Jakub Scholz"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/5587b101f93314cbe0d4ba44c02359cadbd1033e", "committedDate": "2020-06-10T13:31:35Z", "message": "Regen of APi reference after rebase\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "745ddd648be12ca0b1dba0a9d836f9e8b763252f", "author": {"user": {"login": "scholzj", "name": "Jakub Scholz"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/745ddd648be12ca0b1dba0a9d836f9e8b763252f", "committedDate": "2020-06-09T22:21:06Z", "message": "Make existing tests pass and fix some review comments\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>"}, "afterCommit": {"oid": "5587b101f93314cbe0d4ba44c02359cadbd1033e", "author": {"user": {"login": "scholzj", "name": "Jakub Scholz"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/5587b101f93314cbe0d4ba44c02359cadbd1033e", "committedDate": "2020-06-10T13:31:35Z", "message": "Regen of APi reference after rebase\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6f9dc3633e22e5c013143f10dbe07634099e9b9", "author": {"user": {"login": "scholzj", "name": "Jakub Scholz"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/e6f9dc3633e22e5c013143f10dbe07634099e9b9", "committedDate": "2020-06-10T15:03:44Z", "message": "Add more tests for setitng the right statuses in the different resources, try to fix the CRD tests on Minikube\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2b68d0d31243d02196e626253c1bc971a900716", "author": {"user": {"login": "scholzj", "name": "Jakub Scholz"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/c2b68d0d31243d02196e626253c1bc971a900716", "committedDate": "2020-06-10T15:08:37Z", "message": "Fix unused imports and improve CHANGELOG.md\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43afe7d779e757feab785e34229a2e51cde88ec4", "author": {"user": {"login": "scholzj", "name": "Jakub Scholz"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/43afe7d779e757feab785e34229a2e51cde88ec4", "committedDate": "2020-06-10T15:49:12Z", "message": "Travis seems to be too fast?\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f540ed61246bc20a75603dc3eb837a87410ac21", "author": {"user": {"login": "scholzj", "name": "Jakub Scholz"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/8f540ed61246bc20a75603dc3eb837a87410ac21", "committedDate": "2020-06-10T17:08:35Z", "message": "Try to fix Travis race conditions\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ed8a51f3ff57bd2851532966f0815e64c7b2470", "author": {"user": {"login": "scholzj", "name": "Jakub Scholz"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/0ed8a51f3ff57bd2851532966f0815e64c7b2470", "committedDate": "2020-06-10T17:28:18Z", "message": "Try to fix Travis race conditions II\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8dc917a4bd82bfaee299464593abeb10d6ee849", "author": {"user": {"login": "scholzj", "name": "Jakub Scholz"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/e8dc917a4bd82bfaee299464593abeb10d6ee849", "committedDate": "2020-06-10T17:43:52Z", "message": "Debug Travis\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2dd8d70d0c5690fd287dbd1d68304edaa8f0e5e3", "author": {"user": {"login": "scholzj", "name": "Jakub Scholz"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/2dd8d70d0c5690fd287dbd1d68304edaa8f0e5e3", "committedDate": "2020-06-10T18:55:21Z", "message": "Bump kubectl to 1.16.0 since the issue seems ot be caused by Kubernetes bug #81342\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a3bc1f4f4de8122145912e05c169f4cd1e0dbc3", "author": {"user": {"login": "scholzj", "name": "Jakub Scholz"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/4a3bc1f4f4de8122145912e05c169f4cd1e0dbc3", "committedDate": "2020-06-10T19:41:14Z", "message": "Cleanup previous debug and fix attempts\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NDE3MjA0", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3165#pullrequestreview-428417204", "createdAt": "2020-06-10T20:49:28Z", "commit": {"oid": "4a3bc1f4f4de8122145912e05c169f4cd1e0dbc3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDo0OToyOVrOGiFzqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDo0OToyOVrOGiFzqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM5OTkxNA==", "bodyText": "isn't this technically just a condition as opposed to ready as we can pass in Predicates for any user defined condition?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3165#discussion_r438399914", "createdAt": "2020-06-10T20:49:29Z", "author": {"login": "samuel-hawker"}, "path": "test/src/main/java/io/strimzi/test/k8s/cmdClient/KubeCmdClient.java", "diffHunk": "@@ -111,6 +123,15 @@ default K delete(String... files) {\n      */\n     ExecResult exec(boolean throwError, boolean logToOutput, String... command);\n \n+    /**\n+     * Wait for the resource with the given {@code name} to be reach the state defined by the predicate.\n+     * @param resource The resource type.\n+     * @param name The resource name.\n+     * @param ready Predicate to test if the resource is or isn't \"ready\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a3bc1f4f4de8122145912e05c169f4cd1e0dbc3"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c80d559352bb649d3f86d3a69b52e32d3cc5899d", "author": {"user": {"login": "scholzj", "name": "Jakub Scholz"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/c80d559352bb649d3f86d3a69b52e32d3cc5899d", "committedDate": "2020-06-10T21:28:57Z", "message": "Use better name in waitFor method\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NDQ0NTg4", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3165#pullrequestreview-428444588", "createdAt": "2020-06-10T21:33:56Z", "commit": {"oid": "c80d559352bb649d3f86d3a69b52e32d3cc5899d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NjcwMTY1", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3165#pullrequestreview-428670165", "createdAt": "2020-06-11T07:47:20Z", "commit": {"oid": "c80d559352bb649d3f86d3a69b52e32d3cc5899d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4Njk3MzY0", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3165#pullrequestreview-428697364", "createdAt": "2020-06-11T08:26:14Z", "commit": {"oid": "c80d559352bb649d3f86d3a69b52e32d3cc5899d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1499, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}