{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwMzIzMjkz", "number": 2711, "title": "[MO] -> 1st part of removing dependency of logs", "bodyText": "Signed-off-by: morsak xorsak02@stud.fit.vutbr.cz\nType of change\n\nRefactoring\n\nDescription\nThis PR is first part removing dependency to CO logs, specifically on reconciliation.\nChecklist\n\n Make sure all tests pass", "createdAt": "2020-03-18T09:35:13Z", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2711", "merged": true, "mergeCommit": {"oid": "2b97914706e9b6eea8214c4cdf8420c2a3ecf1c3"}, "closed": true, "closedAt": "2020-03-19T20:18:50Z", "author": {"login": "see-quick"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcOz6nKAH2gAyMzkwMzIzMjkzOjVkMGVhYzM5NTM2MWFiNTY1NWVkYTQxNjRhM2VlMTZlYmE4MmZkMTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcPNwpjgH2gAyMzkwMzIzMjkzOjgzYjQwZTVlZDIyYjE0ZjQ5YWRmYTA4NjYyYTI0MTVlZWNmZjRiN2Q=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5d0eac395361ab5655eda4164a3ee16eba82fd10", "author": {"user": {"login": "see-quick", "name": "Ors\u00e1k Maro\u0161"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/5d0eac395361ab5655eda4164a3ee16eba82fd10", "committedDate": "2020-03-18T09:30:12Z", "message": "[MO] -> 1st part of removing dependency of logs\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2NzYxODQ3", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2711#pullrequestreview-376761847", "createdAt": "2020-03-18T11:06:14Z", "commit": {"oid": "5d0eac395361ab5655eda4164a3ee16eba82fd10"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMTowNjoxNFrOF4AF-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMTowNjoxNFrOF4AF-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI2NjEwNA==", "bodyText": "Surely waitForConnectorStability() is a better name?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2711#discussion_r394266104", "createdAt": "2020-03-18T11:06:14Z", "author": {"login": "tombentley"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/kafkaUtils/KafkaConnectorUtils.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright Strimzi authors.\n+ * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n+ */\n+package io.strimzi.systemtest.utils.kafkaUtils;\n+\n+import io.strimzi.systemtest.Constants;\n+import io.strimzi.test.TestUtils;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+public class KafkaConnectorUtils {\n+\n+    private static final Logger LOGGER = LogManager.getLogger(KafkaConnectorUtils.class);\n+\n+    private KafkaConnectorUtils() {}\n+\n+    /**\n+     * WaitForStabilityConnector method, verifying stability of connector\n+     * @param connectorName connector name\n+     * @param connectPodName connects2i or connect pod name\n+     */\n+    public static void waitForStabilityConnector(String connectorName, String connectPodName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d0eac395361ab5655eda4164a3ee16eba82fd10"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2NzgwOTYz", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2711#pullrequestreview-376780963", "createdAt": "2020-03-18T11:35:43Z", "commit": {"oid": "5d0eac395361ab5655eda4164a3ee16eba82fd10"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMTozNTo0M1rOF4BBww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMTozNTo0M1rOF4BBww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI4MTQxMQ==", "bodyText": "Might be good to have some comments explaining what these are.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2711#discussion_r394281411", "createdAt": "2020-03-18T11:35:43Z", "author": {"login": "scholzj"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/Constants.java", "diffHunk": "@@ -59,6 +59,9 @@\n     long CO_OPERATION_TIMEOUT_POLL = Duration.ofSeconds(2).toMillis();\n     long RECONCILIATION_INTERVAL = Duration.ofSeconds(30).toMillis();\n \n+    int GLOBAL_STABILITY_COUNT = 20;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d0eac395361ab5655eda4164a3ee16eba82fd10"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d0b7208da1ad26f9436555a7cd2ad2da6a32c9f", "author": {"user": {"login": "see-quick", "name": "Ors\u00e1k Maro\u0161"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/5d0b7208da1ad26f9436555a7cd2ad2da6a32c9f", "committedDate": "2020-03-19T09:56:39Z", "message": "[MO] - [refactor] -> update comments\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3NTgzNTEw", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2711#pullrequestreview-377583510", "createdAt": "2020-03-19T10:15:08Z", "commit": {"oid": "5d0b7208da1ad26f9436555a7cd2ad2da6a32c9f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3NzkwNDQ3", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2711#pullrequestreview-377790447", "createdAt": "2020-03-19T14:46:10Z", "commit": {"oid": "5d0b7208da1ad26f9436555a7cd2ad2da6a32c9f"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNDo0NjoxMVrOF4x2zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNDo0NzozNFrOF4x6zQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTA4MTQyMw==", "bodyText": "\"Connector with name {} is present. Remaining seconds for stability {}\"  ?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2711#discussion_r395081423", "createdAt": "2020-03-19T14:46:11Z", "author": {"login": "Frawless"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/kafkaUtils/KafkaConnectorUtils.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright Strimzi authors.\n+ * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n+ */\n+package io.strimzi.systemtest.utils.kafkaUtils;\n+\n+import io.strimzi.systemtest.Constants;\n+import io.strimzi.test.TestUtils;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+public class KafkaConnectorUtils {\n+\n+    private static final Logger LOGGER = LogManager.getLogger(KafkaConnectorUtils.class);\n+\n+    private KafkaConnectorUtils() {}\n+\n+    /**\n+     * WaitForStabilityConnector method, verifying stability of connector\n+     * @param connectorName connector name\n+     * @param connectPodName connects2i or connect pod name\n+     */\n+    public static void waitForConnectorStability(String connectorName, String connectPodName) {\n+        // alternative to sync hassling AtomicInteger one could use an integer array instead\n+        // not need to be final because reference to the array does not get another array assigned\n+        int[] i = {0};\n+\n+        TestUtils.waitFor(\"Waiting for stability of connector \" + connectorName, Constants.GLOBAL_POLL_INTERVAL, Constants.GLOBAL_TIMEOUT,\n+            () -> {\n+                String availableConnectors = KafkaConnectUtils.getCreatedConnectors(connectPodName);\n+                if (availableConnectors.contains(connectorName)) {\n+                    LOGGER.info(\"Connector with name {} is present remaining seconds for stability {}\", connectorName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d0b7208da1ad26f9436555a7cd2ad2da6a32c9f"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTA4MjQ0NQ==", "bodyText": "Maybe we should use better log text like :{} pods didn't roll. Remaining seconds for stability: {}  wdyt?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2711#discussion_r395082445", "createdAt": "2020-03-19T14:47:34Z", "author": {"login": "Frawless"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/kubeUtils/controllers/StatefulSetUtils.java", "diffHunk": "@@ -193,4 +193,22 @@ public static void waitForKafkaStatefulSetLabelsDeletion(String statefulSet, Str\n             LOGGER.info(\"Kafka statefulSet label {} change to {}\", labelKey, null);\n         }\n     }\n+\n+    public static void waitForNoRollingUpdate(String statefulSetName, Map<String, String> pods) {\n+        // alternative to sync hassling AtomicInteger one could use an integer array instead\n+        // not need to be final because reference to the array does not get another array assigned\n+        int[] i = {0};\n+\n+        TestUtils.waitFor(\"Waiting for stability of rolling update will be not triggered\", Constants.GLOBAL_POLL_INTERVAL, Constants.GLOBAL_TIMEOUT,\n+            () -> {\n+                if (!StatefulSetUtils.ssHasRolled(statefulSetName, pods)) {\n+                    LOGGER.info(\"{} pods not rolling waiting, remaining seconds for stability {}\", pods.toString(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d0b7208da1ad26f9436555a7cd2ad2da6a32c9f"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83b40e5ed22b14f49adfa08662a2415eecff4b7d", "author": {"user": {"login": "see-quick", "name": "Ors\u00e1k Maro\u0161"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/83b40e5ed22b14f49adfa08662a2415eecff4b7d", "committedDate": "2020-03-19T15:36:51Z", "message": "[MO] - [refactor] -> commends\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2070, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}