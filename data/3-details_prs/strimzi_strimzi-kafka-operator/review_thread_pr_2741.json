{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyMzU1MzI4", "number": 2741, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNDowNDowNVrODqZDsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNDowNDowNVrODqZDsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1Nzc3MzI4OnYy", "diffSide": "RIGHT", "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/TestKafkaVersion.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNDowNDowNlrOF6G3uQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNDozODo1N1rOF6Ia7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ3NDI5Nw==", "bodyText": "What's the benefit of using singleton here, compared with just having all static methods?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2741#discussion_r396474297", "createdAt": "2020-03-23T14:04:06Z", "author": {"login": "tombentley"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/TestKafkaVersion.java", "diffHunk": "@@ -15,10 +15,29 @@\n import java.nio.charset.StandardCharsets;\n import java.util.Collections;\n import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n \n @JsonIgnoreProperties(ignoreUnknown = true)\n public class TestKafkaVersion implements Comparable<TestKafkaVersion> {\n \n+    private static TestKafkaVersion instance;\n+    private static List<TestKafkaVersion> kafkaVersions;\n+\n+    public static synchronized TestKafkaVersion getInstance() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ce583e3bba655f5f5d4619023e012b7ac681224"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ4MTM5NA==", "bodyText": "I used singleton here to keep parsed kafka-versions file instead of loading it everytime when method is used.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2741#discussion_r396481394", "createdAt": "2020-03-23T14:14:16Z", "author": {"login": "Frawless"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/TestKafkaVersion.java", "diffHunk": "@@ -15,10 +15,29 @@\n import java.nio.charset.StandardCharsets;\n import java.util.Collections;\n import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n \n @JsonIgnoreProperties(ignoreUnknown = true)\n public class TestKafkaVersion implements Comparable<TestKafkaVersion> {\n \n+    private static TestKafkaVersion instance;\n+    private static List<TestKafkaVersion> kafkaVersions;\n+\n+    public static synchronized TestKafkaVersion getInstance() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ3NDI5Nw=="}, "originalCommit": {"oid": "4ce583e3bba655f5f5d4619023e012b7ac681224"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ4NzkwNw==", "bodyText": "You could use a static { } block to do that.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2741#discussion_r396487907", "createdAt": "2020-03-23T14:23:01Z", "author": {"login": "tombentley"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/TestKafkaVersion.java", "diffHunk": "@@ -15,10 +15,29 @@\n import java.nio.charset.StandardCharsets;\n import java.util.Collections;\n import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n \n @JsonIgnoreProperties(ignoreUnknown = true)\n public class TestKafkaVersion implements Comparable<TestKafkaVersion> {\n \n+    private static TestKafkaVersion instance;\n+    private static List<TestKafkaVersion> kafkaVersions;\n+\n+    public static synchronized TestKafkaVersion getInstance() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ3NDI5Nw=="}, "originalCommit": {"oid": "4ce583e3bba655f5f5d4619023e012b7ac681224"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ4ODE3MA==", "bodyText": "(aka class initializer, <clinit>)", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2741#discussion_r396488170", "createdAt": "2020-03-23T14:23:23Z", "author": {"login": "tombentley"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/TestKafkaVersion.java", "diffHunk": "@@ -15,10 +15,29 @@\n import java.nio.charset.StandardCharsets;\n import java.util.Collections;\n import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n \n @JsonIgnoreProperties(ignoreUnknown = true)\n public class TestKafkaVersion implements Comparable<TestKafkaVersion> {\n \n+    private static TestKafkaVersion instance;\n+    private static List<TestKafkaVersion> kafkaVersions;\n+\n+    public static synchronized TestKafkaVersion getInstance() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ3NDI5Nw=="}, "originalCommit": {"oid": "4ce583e3bba655f5f5d4619023e012b7ac681224"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ5OTY5NQ==", "bodyText": "I see, let me rework it :)", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2741#discussion_r396499695", "createdAt": "2020-03-23T14:38:57Z", "author": {"login": "Frawless"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/TestKafkaVersion.java", "diffHunk": "@@ -15,10 +15,29 @@\n import java.nio.charset.StandardCharsets;\n import java.util.Collections;\n import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n \n @JsonIgnoreProperties(ignoreUnknown = true)\n public class TestKafkaVersion implements Comparable<TestKafkaVersion> {\n \n+    private static TestKafkaVersion instance;\n+    private static List<TestKafkaVersion> kafkaVersions;\n+\n+    public static synchronized TestKafkaVersion getInstance() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ3NDI5Nw=="}, "originalCommit": {"oid": "4ce583e3bba655f5f5d4619023e012b7ac681224"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 354, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}