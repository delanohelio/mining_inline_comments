{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczMTI2MTIy", "number": 3546, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMTo1NDowMlrOEcCIoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMTo1NDowMlrOEcCIoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3ODMwNTYwOnYy", "diffSide": "RIGHT", "path": "systemtest/src/main/java/io/strimzi/systemtest/kafkaclients/internalClients/VerifiableClient.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMTo1NDowMlrOHGUizg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMToyMToyMFrOHILtvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM5MDA5NA==", "bodyText": "I think we should store client version somewhere during init and there just ask about it. During clients deployment, you can get version from image name I guess and you don't need to get image from pod directly.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3546#discussion_r476390094", "createdAt": "2020-08-25T11:54:02Z", "author": {"login": "Frawless"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/kafkaclients/internalClients/VerifiableClient.java", "diffHunk": "@@ -128,18 +128,19 @@ public VerifiableClient(VerifiableClientBuilder verifiableClientBuilder) {\n \n         this.setAllowedArguments(this.clientType);\n         this.clientArgumentMap = new ClientArgumentMap();\n-        this.clientArgumentMap.put(ClientArgument.BOOTSTRAP_SERVER, bootstrapServer);\n         this.clientArgumentMap.put(ClientArgument.TOPIC, topicName);\n         this.clientArgumentMap.put(ClientArgument.MAX_MESSAGES, Integer.toString(maxMessages));\n         if (kafkaUsername != null) this.clientArgumentMap.put(ClientArgument.USER,  kafkaUsername.replace(\"-\", \"_\"));\n \n+        String image = kubeClient().getPod(this.podName).getSpec().getContainers().get(0).getImage();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14f61718fef6ed6b8f0bfe25a09edfe9b77f0295"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQwMzExMg==", "bodyText": "Yep, that's right, gonna take a look at it. Thanks", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3546#discussion_r476403112", "createdAt": "2020-08-25T12:18:30Z", "author": {"login": "im-konge"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/kafkaclients/internalClients/VerifiableClient.java", "diffHunk": "@@ -128,18 +128,19 @@ public VerifiableClient(VerifiableClientBuilder verifiableClientBuilder) {\n \n         this.setAllowedArguments(this.clientType);\n         this.clientArgumentMap = new ClientArgumentMap();\n-        this.clientArgumentMap.put(ClientArgument.BOOTSTRAP_SERVER, bootstrapServer);\n         this.clientArgumentMap.put(ClientArgument.TOPIC, topicName);\n         this.clientArgumentMap.put(ClientArgument.MAX_MESSAGES, Integer.toString(maxMessages));\n         if (kafkaUsername != null) this.clientArgumentMap.put(ClientArgument.USER,  kafkaUsername.replace(\"-\", \"_\"));\n \n+        String image = kubeClient().getPod(this.podName).getSpec().getContainers().get(0).getImage();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM5MDA5NA=="}, "originalCommit": {"oid": "14f61718fef6ed6b8f0bfe25a09edfe9b77f0295"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0MjU5MA==", "bodyText": "Will be resolved in next PR.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3546#discussion_r478342590", "createdAt": "2020-08-27T11:21:20Z", "author": {"login": "im-konge"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/kafkaclients/internalClients/VerifiableClient.java", "diffHunk": "@@ -128,18 +128,19 @@ public VerifiableClient(VerifiableClientBuilder verifiableClientBuilder) {\n \n         this.setAllowedArguments(this.clientType);\n         this.clientArgumentMap = new ClientArgumentMap();\n-        this.clientArgumentMap.put(ClientArgument.BOOTSTRAP_SERVER, bootstrapServer);\n         this.clientArgumentMap.put(ClientArgument.TOPIC, topicName);\n         this.clientArgumentMap.put(ClientArgument.MAX_MESSAGES, Integer.toString(maxMessages));\n         if (kafkaUsername != null) this.clientArgumentMap.put(ClientArgument.USER,  kafkaUsername.replace(\"-\", \"_\"));\n \n+        String image = kubeClient().getPod(this.podName).getSpec().getContainers().get(0).getImage();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM5MDA5NA=="}, "originalCommit": {"oid": "14f61718fef6ed6b8f0bfe25a09edfe9b77f0295"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1356, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}