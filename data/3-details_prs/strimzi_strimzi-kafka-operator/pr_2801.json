{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwMjk3NTg5", "number": 2801, "title": "Make sure volume names are valid", "bodyText": "Type of change\n\nBugfix\n\nDescription\nStrimzi usually uses volumes to mount different secrets with passwords or certificates. Quite often we seem to name volumes after the secrets names. However, the volume names follow the DNS label standard as defined in RFC 1123. This means the name must:\n\ncontain at most 63 characters\ncontain only lowercase alphanumeric characters or \u2018-\u2019\nstart with an alphanumeric character\nend with an alphanumeric character\n\nTeh rules for resources such as secrets are much more relaxed. So this does not work in some cases - for example when the user secret mounted is for a user with a . in the name.\nThis PR should fix this by doing the following:\n\nCheck if the desired volume name is valid and if it is, just use it as it is\nIf it is not valid\n\nFix all the invalid characters (such as the . mentioned above)\nCreate SHA-1 has of the original name\nShorten the original name (when needed) and attach the first 8 characters form the has to the end of the volume name\n\n\n\nThat should give us a reasonable certainty that we will not have duplicate volumes names when using volumes with similar names (such as for my-user and my.user).\nChecklist\n\n Write tests\n Make sure all tests pass\n Try your changes from Pod inside your Kubernetes and OpenShift cluster, not just locally", "createdAt": "2020-04-07T14:19:08Z", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2801", "merged": true, "mergeCommit": {"oid": "8b362fe3a7a736389a15d29e9bb43172787e469d"}, "closed": true, "closedAt": "2020-04-08T10:06:39Z", "author": {"login": "scholzj"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcVT8zVAH2gAyNDAwMjk3NTg5OmIzNzEwNTk4Njk5ZDY1Nzg3ODJiMTFjNjFhNTEwYmI1YjM2YmI4MDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVjW2wAFqTM4OTc0NDQwMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b3710598699d6578782b11c61a510bb5b36bb801", "author": {"user": {"login": "scholzj", "name": "Jakub Scholz"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/b3710598699d6578782b11c61a510bb5b36bb801", "committedDate": "2020-04-07T14:13:06Z", "message": "Make sure volume names are valid\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5MTY3NjI4", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2801#pullrequestreview-389167628", "createdAt": "2020-04-07T14:23:11Z", "commit": {"oid": "b3710598699d6578782b11c61a510bb5b36bb801"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNDoyMzoxMlrOGCGCSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNDoyOTo1MFrOGCGXJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDg0OTIyNQ==", "bodyText": "I am curious, why use the AbstractModel log object as opposed to one inside this class?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2801#discussion_r404849225", "createdAt": "2020-04-07T14:23:12Z", "author": {"login": "samuel-hawker"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/VolumeUtils.java", "diffHunk": "@@ -36,8 +43,28 @@\n  * Shared methods for working with Volume\n  */\n public class VolumeUtils {\n-\n     protected static final Logger log = LogManager.getLogger(VolumeUtils.class.getName());\n+    private static Pattern volumeNamePattern = Pattern.compile(\"^([a-z0-9]{1}[a-z0-9-]{0,61}[a-z0-9]{1})$\");\n+\n+    /**\n+     * Creates a Kubernetes volume which will map to ConfigMap\n+     *\n+     * @param name              Name of the Volume\n+     * @param configMapName     Name of the ConfigMap\n+     * @return                  The newly created Volume\n+     */\n+    public static Volume createConfigMapVolume(String name, String configMapName) {\n+        ConfigMapVolumeSource configMapVolumeSource = new ConfigMapVolumeSourceBuilder()\n+                .withName(configMapName)\n+                .build();\n+\n+        Volume volume = new VolumeBuilder()\n+                .withName(getValidVolumeName(name))\n+                .withConfigMap(configMapVolumeSource)\n+                .build();\n+        AbstractModel.log.trace(\"Created configMap Volume named '{}' with source configMap '{}'\", name, configMapName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3710598699d6578782b11c61a510bb5b36bb801"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDg1MTUxNg==", "bodyText": "missing a space between to and 63 :P", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2801#discussion_r404851516", "createdAt": "2020-04-07T14:26:03Z", "author": {"login": "samuel-hawker"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/VolumeUtils.java", "diffHunk": "@@ -257,4 +284,80 @@ public static VolumeMount createVolumeMount(String name, String path) {\n     public static String getVolumePrefix(Integer id) {\n         return id == null ? AbstractModel.VOLUME_NAME : AbstractModel.VOLUME_NAME + \"-\" + id;\n     }\n+\n+    /**\n+     * Volume names have to follow DNS label standard form RFC1123:\n+     *     - contain at most 63 characters\n+     *     - contain only lowercase alphanumeric characters or \u2018-\u2019\n+     *     - start with an alphanumeric character\n+     *     - end with an alphanumeric character\n+     *\n+     *  This method checkes if the volume name is a valid name and if not it will modify it to make it valid.\n+     *\n+     * @param originalName  The original name of the volume\n+     * @return              Either the original volume name or a modified version to match volume name criteria\n+     */\n+    public static String getValidVolumeName(String originalName) {\n+        if (originalName == null) {\n+            throw new RuntimeException(\"Volume name cannot be null\");\n+        }\n+\n+        if (volumeNamePattern.matcher(originalName).matches()) {\n+            return originalName;\n+        } else {\n+            return makeValidVolumeName(originalName);\n+        }\n+    }\n+\n+    /**\n+     * Makes a valid volume name out of an invalid name. To do so it:\n+     *     - Replaces . and _ characters with -\n+     *     - Shortens the name if needed\n+     *     - Uses SHA1 hash for uniqueness of the new name\n+     *\n+     * @param originalName  Original invalid volume name\n+     * @return              New valid volume name\n+     */\n+    /*test*/ static String makeValidVolumeName(String originalName) {\n+        // SHA-1 hash is used for uniqueness\n+        String digestStub = getVolumeNameHashStub(originalName);\n+\n+        // Special characters need to be replaced\n+        String newName = originalName\n+                .replace(\".\", \"-\")\n+                .replace(\"_\", \"-\");\n+\n+        // The name with the hash should be only up to63 characters long", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3710598699d6578782b11c61a510bb5b36bb801"}, "originalPosition": 157}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDg1NDU2Ng==", "bodyText": "Considering how similar this method and the volume name one are, is it worth consolidating them down into a single\nmakeValidKubernetesName\n\nmethod (or names something similar)", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2801#discussion_r404854566", "createdAt": "2020-04-07T14:29:50Z", "author": {"login": "samuel-hawker"}, "path": "operator-common/src/main/java/io/strimzi/operator/common/model/Labels.java", "diffHunk": "@@ -286,7 +286,7 @@ public Labels withKubernetesPartOf(String instanceName) {\n         while (i > 0) {\n             char lastChar = instance.charAt(i - 1);\n \n-            if (lastChar == '.' || lastChar == '-') {\n+            if (lastChar == '.' || lastChar == '-' || lastChar == '_') {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3710598699d6578782b11c61a510bb5b36bb801"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5MTcwNzI2", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2801#pullrequestreview-389170726", "createdAt": "2020-04-07T14:26:09Z", "commit": {"oid": "b3710598699d6578782b11c61a510bb5b36bb801"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNDoyNjowOVrOGCGLfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNDoyODoyNFrOGCGShQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDg1MTU4MA==", "bodyText": "Objects.requireNonNull(originalName, \"Volume name cannot be null\") ?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2801#discussion_r404851580", "createdAt": "2020-04-07T14:26:09Z", "author": {"login": "tombentley"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/VolumeUtils.java", "diffHunk": "@@ -257,4 +284,80 @@ public static VolumeMount createVolumeMount(String name, String path) {\n     public static String getVolumePrefix(Integer id) {\n         return id == null ? AbstractModel.VOLUME_NAME : AbstractModel.VOLUME_NAME + \"-\" + id;\n     }\n+\n+    /**\n+     * Volume names have to follow DNS label standard form RFC1123:\n+     *     - contain at most 63 characters\n+     *     - contain only lowercase alphanumeric characters or \u2018-\u2019\n+     *     - start with an alphanumeric character\n+     *     - end with an alphanumeric character\n+     *\n+     *  This method checkes if the volume name is a valid name and if not it will modify it to make it valid.\n+     *\n+     * @param originalName  The original name of the volume\n+     * @return              Either the original volume name or a modified version to match volume name criteria\n+     */\n+    public static String getValidVolumeName(String originalName) {\n+        if (originalName == null) {\n+            throw new RuntimeException(\"Volume name cannot be null\");\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3710598699d6578782b11c61a510bb5b36bb801"}, "originalPosition": 130}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDg1MzM4MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @return      First 8 characters of the sHA-1 hash\n          \n          \n            \n                 * @return      First 8 characters of the SHA-1 hash", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2801#discussion_r404853381", "createdAt": "2020-04-07T14:28:24Z", "author": {"login": "tombentley"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/VolumeUtils.java", "diffHunk": "@@ -257,4 +284,80 @@ public static VolumeMount createVolumeMount(String name, String path) {\n     public static String getVolumePrefix(Integer id) {\n         return id == null ? AbstractModel.VOLUME_NAME : AbstractModel.VOLUME_NAME + \"-\" + id;\n     }\n+\n+    /**\n+     * Volume names have to follow DNS label standard form RFC1123:\n+     *     - contain at most 63 characters\n+     *     - contain only lowercase alphanumeric characters or \u2018-\u2019\n+     *     - start with an alphanumeric character\n+     *     - end with an alphanumeric character\n+     *\n+     *  This method checkes if the volume name is a valid name and if not it will modify it to make it valid.\n+     *\n+     * @param originalName  The original name of the volume\n+     * @return              Either the original volume name or a modified version to match volume name criteria\n+     */\n+    public static String getValidVolumeName(String originalName) {\n+        if (originalName == null) {\n+            throw new RuntimeException(\"Volume name cannot be null\");\n+        }\n+\n+        if (volumeNamePattern.matcher(originalName).matches()) {\n+            return originalName;\n+        } else {\n+            return makeValidVolumeName(originalName);\n+        }\n+    }\n+\n+    /**\n+     * Makes a valid volume name out of an invalid name. To do so it:\n+     *     - Replaces . and _ characters with -\n+     *     - Shortens the name if needed\n+     *     - Uses SHA1 hash for uniqueness of the new name\n+     *\n+     * @param originalName  Original invalid volume name\n+     * @return              New valid volume name\n+     */\n+    /*test*/ static String makeValidVolumeName(String originalName) {\n+        // SHA-1 hash is used for uniqueness\n+        String digestStub = getVolumeNameHashStub(originalName);\n+\n+        // Special characters need to be replaced\n+        String newName = originalName\n+                .replace(\".\", \"-\")\n+                .replace(\"_\", \"-\");\n+\n+        // The name with the hash should be only up to63 characters long\n+        int i = Math.min(newName.length(), 54);\n+\n+        while (i > 0) {\n+            char lastChar = newName.charAt(i - 1);\n+\n+            if (lastChar == '-') {\n+                i--;\n+            } else {\n+                break;\n+            }\n+        }\n+\n+        // Returned new fixed name with the hash at the end\n+        return newName.substring(0, i) + \"-\" + digestStub;\n+    }\n+\n+    /**\n+     * Gets the first 8 characters from a SHA-1 hash of a volume name\n+     *\n+     * @param name  Volume name\n+     * @return      First 8 characters of the sHA-1 hash", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3710598699d6578782b11c61a510bb5b36bb801"}, "originalPosition": 178}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40a101e9ae699b08e756566a9ba0904e9dc3ea31", "author": {"user": {"login": "scholzj", "name": "Jakub Scholz"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/40a101e9ae699b08e756566a9ba0904e9dc3ea31", "committedDate": "2020-04-07T14:42:07Z", "message": "Review comments\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5008251082b192df38325cf746530214014aec1d", "author": {"user": {"login": "scholzj", "name": "Jakub Scholz"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/5008251082b192df38325cf746530214014aec1d", "committedDate": "2020-04-07T16:11:48Z", "message": "Review comments II\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5Mjg0MzQ0", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2801#pullrequestreview-389284344", "createdAt": "2020-04-07T16:24:00Z", "commit": {"oid": "5008251082b192df38325cf746530214014aec1d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5MzI1MzM5", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2801#pullrequestreview-389325339", "createdAt": "2020-04-07T17:13:25Z", "commit": {"oid": "5008251082b192df38325cf746530214014aec1d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzoxMzoyNlrOGCN0DA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzoxMzoyNlrOGCN0DA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk3NjY1Mg==", "bodyText": "actually you are logging the name not the mangled one, maybe we could log them together.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2801#discussion_r404976652", "createdAt": "2020-04-07T17:13:26Z", "author": {"login": "ppatierno"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/VolumeUtils.java", "diffHunk": "@@ -36,8 +43,28 @@\n  * Shared methods for working with Volume\n  */\n public class VolumeUtils {\n-\n     protected static final Logger log = LogManager.getLogger(VolumeUtils.class.getName());\n+    private static Pattern volumeNamePattern = Pattern.compile(\"^([a-z0-9]{1}[a-z0-9-]{0,61}[a-z0-9]{1})$\");\n+\n+    /**\n+     * Creates a Kubernetes volume which will map to ConfigMap\n+     *\n+     * @param name              Name of the Volume\n+     * @param configMapName     Name of the ConfigMap\n+     * @return                  The newly created Volume\n+     */\n+    public static Volume createConfigMapVolume(String name, String configMapName) {\n+        ConfigMapVolumeSource configMapVolumeSource = new ConfigMapVolumeSourceBuilder()\n+                .withName(configMapName)\n+                .build();\n+\n+        Volume volume = new VolumeBuilder()\n+                .withName(getValidVolumeName(name))\n+                .withConfigMap(configMapVolumeSource)\n+                .build();\n+        log.trace(\"Created configMap Volume named '{}' with source configMap '{}'\", name, configMapName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5008251082b192df38325cf746530214014aec1d"}, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6fd669001edcada81e8f0f36662a20406711d7d8", "author": {"user": {"login": "scholzj", "name": "Jakub Scholz"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/6fd669001edcada81e8f0f36662a20406711d7d8", "committedDate": "2020-04-07T18:16:12Z", "message": "Review comments III\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5NzQyODcz", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2801#pullrequestreview-389742873", "createdAt": "2020-04-08T08:08:00Z", "commit": {"oid": "6fd669001edcada81e8f0f36662a20406711d7d8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5NzQ0NDAx", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2801#pullrequestreview-389744401", "createdAt": "2020-04-08T08:10:08Z", "commit": {"oid": "6fd669001edcada81e8f0f36662a20406711d7d8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1811, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}