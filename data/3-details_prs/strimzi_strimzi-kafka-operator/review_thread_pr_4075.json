{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1MTUxNzIz", "number": 4075, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMzoyNjoxNVrOFC7Eww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwODozNzowN1rOFE3OOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NjA5MzQ3OnYy", "diffSide": "RIGHT", "path": "operator-common/src/main/java/io/strimzi/operator/common/operator/resource/AbstractResourceOperator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMzoyNjoxNVrOICUfHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMzoyNjoxNVrOICUfHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMwMzcwOA==", "bodyText": "What about in the synchronous get above? And in the AbstractNonNamespacedResourceOperator?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4075#discussion_r539303708", "createdAt": "2020-12-09T13:26:15Z", "author": {"login": "tombentley"}, "path": "operator-common/src/main/java/io/strimzi/operator/common/operator/resource/AbstractResourceOperator.java", "diffHunk": "@@ -240,6 +240,9 @@ public T get(String namespace, String name) {\n      * @return A Future for the result.\n      */\n     public Future<T> getAsync(String namespace, String name) {\n+        if (name == null || name.isEmpty()) {\n+            throw new IllegalArgumentException(resourceKind + \" with an empty name cannot be configured. Please provide a name.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a09a781e24c2dabc61cc5900332d69f0bcc7ddc"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5MjI1MDc2OnYy", "diffSide": "RIGHT", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/ListenersValidator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxNDozODo1M1rOIDMbRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxNDozODo1M1rOIDMbRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDIyMDIzMQ==", "bodyText": "Looks good. just one quick idea ... it might read better if you move it into separate method like the other validation. Plus ... would it make sense to validate the other fields as well if we already access the object?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4075#discussion_r540220231", "createdAt": "2020-12-10T14:38:53Z", "author": {"login": "scholzj"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/ListenersValidator.java", "diffHunk": "@@ -92,6 +92,12 @@ public static void validate(int replicas, List<GenericKafkaListener> listeners)\n                         validateBrokerDnsAnnotations(errors, listener, broker);\n                     }\n                 }\n+\n+                if (listener.getConfiguration().getBrokerCertChainAndKey() != null\n+                    && (listener.getConfiguration().getBrokerCertChainAndKey().getSecretName() == null\n+                    || listener.getConfiguration().getBrokerCertChainAndKey().getSecretName().isEmpty())) {\n+                    errors.add(\"listener '\" + listener.getName() + \"' cannot have empty secret name in the brokerCertChainAndKey\");\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42e2a1abedbfa132588a15ea479e2087e505ff6a"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNjQyNzQ3OnYy", "diffSide": "RIGHT", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/ListenersValidator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwODozNToyOVrOIFFNKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwODozNToyOVrOIFFNKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE5OTA4MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        errors.add(\"listener '\" + listener.getName() + \"' cannot have empty secret name in the brokerCertChainAndKey\");\n          \n          \n            \n                        errors.add(\"listener '\" + listener.getName() + \"' cannot have an empty secret name in the brokerCertChainAndKey\");", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4075#discussion_r542199081", "createdAt": "2020-12-14T08:35:29Z", "author": {"login": "tombentley"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/ListenersValidator.java", "diffHunk": "@@ -101,6 +105,29 @@ public static void validate(int replicas, List<GenericKafkaListener> listeners)\n \n         return errors;\n     }\n+    /**\n+     * Validates that the listener has a BrokerCertChainAndKey with non-empty values\n+     *\n+     * @param errors    List where any found errors will be added\n+     * @param listener  Listener which needs to be validated\n+     */\n+    private static void validateBrokerCertChainAndKey(Set<String> errors, GenericKafkaListener listener) {\n+        if (listener.getConfiguration().getBrokerCertChainAndKey().getSecretName() == null\n+                || listener.getConfiguration().getBrokerCertChainAndKey().getSecretName().isEmpty()) {\n+            errors.add(\"listener '\" + listener.getName() + \"' cannot have empty secret name in the brokerCertChainAndKey\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22f2e15e9fad85c947ed89df5bc60f132af44cc9"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNjQyODEzOnYy", "diffSide": "RIGHT", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/ListenersValidator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwODozNTo0MlrOIFFNnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwODozNTo0MlrOIFFNnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE5OTE5Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        errors.add(\"listener '\" + listener.getName() + \"' cannot have empty key in the brokerCertChainAndKey\");\n          \n          \n            \n                        errors.add(\"listener '\" + listener.getName() + \"' cannot have an empty key in the brokerCertChainAndKey\");", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4075#discussion_r542199197", "createdAt": "2020-12-14T08:35:42Z", "author": {"login": "tombentley"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/ListenersValidator.java", "diffHunk": "@@ -101,6 +105,29 @@ public static void validate(int replicas, List<GenericKafkaListener> listeners)\n \n         return errors;\n     }\n+    /**\n+     * Validates that the listener has a BrokerCertChainAndKey with non-empty values\n+     *\n+     * @param errors    List where any found errors will be added\n+     * @param listener  Listener which needs to be validated\n+     */\n+    private static void validateBrokerCertChainAndKey(Set<String> errors, GenericKafkaListener listener) {\n+        if (listener.getConfiguration().getBrokerCertChainAndKey().getSecretName() == null\n+                || listener.getConfiguration().getBrokerCertChainAndKey().getSecretName().isEmpty()) {\n+            errors.add(\"listener '\" + listener.getName() + \"' cannot have empty secret name in the brokerCertChainAndKey\");\n+        }\n+\n+        if (listener.getConfiguration().getBrokerCertChainAndKey().getKey() == null\n+                || listener.getConfiguration().getBrokerCertChainAndKey().getKey().isEmpty()) {\n+            errors.add(\"listener '\" + listener.getName() + \"' cannot have empty key in the brokerCertChainAndKey\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22f2e15e9fad85c947ed89df5bc60f132af44cc9"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNjQyODgzOnYy", "diffSide": "RIGHT", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/ListenersValidator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwODozNTo1NFrOIFFN_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwODozNTo1NFrOIFFN_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE5OTI5NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        errors.add(\"listener '\" + listener.getName() + \"' cannot have empty certificate in the brokerCertChainAndKey\");\n          \n          \n            \n                        errors.add(\"listener '\" + listener.getName() + \"' cannot have an empty certificate in the brokerCertChainAndKey\");", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4075#discussion_r542199294", "createdAt": "2020-12-14T08:35:54Z", "author": {"login": "tombentley"}, "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/ListenersValidator.java", "diffHunk": "@@ -101,6 +105,29 @@ public static void validate(int replicas, List<GenericKafkaListener> listeners)\n \n         return errors;\n     }\n+    /**\n+     * Validates that the listener has a BrokerCertChainAndKey with non-empty values\n+     *\n+     * @param errors    List where any found errors will be added\n+     * @param listener  Listener which needs to be validated\n+     */\n+    private static void validateBrokerCertChainAndKey(Set<String> errors, GenericKafkaListener listener) {\n+        if (listener.getConfiguration().getBrokerCertChainAndKey().getSecretName() == null\n+                || listener.getConfiguration().getBrokerCertChainAndKey().getSecretName().isEmpty()) {\n+            errors.add(\"listener '\" + listener.getName() + \"' cannot have empty secret name in the brokerCertChainAndKey\");\n+        }\n+\n+        if (listener.getConfiguration().getBrokerCertChainAndKey().getKey() == null\n+                || listener.getConfiguration().getBrokerCertChainAndKey().getKey().isEmpty()) {\n+            errors.add(\"listener '\" + listener.getName() + \"' cannot have empty key in the brokerCertChainAndKey\");\n+        }\n+\n+        if (listener.getConfiguration().getBrokerCertChainAndKey().getCertificate() == null\n+                || listener.getConfiguration().getBrokerCertChainAndKey().getCertificate().isEmpty()) {\n+            errors.add(\"listener '\" + listener.getName() + \"' cannot have empty certificate in the brokerCertChainAndKey\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22f2e15e9fad85c947ed89df5bc60f132af44cc9"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNjQzMjI2OnYy", "diffSide": "RIGHT", "path": "operator-common/src/main/java/io/strimzi/operator/common/operator/resource/AbstractResourceOperator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwODozNjo0NlrOIFFQFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwODozNjo0NlrOIFFQFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE5OTgzMQ==", "bodyText": "We should include the namespace in the message.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4075#discussion_r542199831", "createdAt": "2020-12-14T08:36:46Z", "author": {"login": "tombentley"}, "path": "operator-common/src/main/java/io/strimzi/operator/common/operator/resource/AbstractResourceOperator.java", "diffHunk": "@@ -230,6 +230,9 @@ protected boolean wasChanged(T oldVersion, T newVersion) {\n      * @return The resource, or null if it doesn't exist.\n      */\n     public T get(String namespace, String name) {\n+        if (name == null || name.isEmpty()) {\n+            throw new IllegalArgumentException(resourceKind + \" with an empty name cannot be configured. Please provide a name.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22f2e15e9fad85c947ed89df5bc60f132af44cc9"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNjQzMzg2OnYy", "diffSide": "RIGHT", "path": "operator-common/src/main/java/io/strimzi/operator/common/operator/resource/AbstractResourceOperator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwODozNzowN1rOIFFQ9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwODozNzowN1rOIFFQ9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjIwMDA1Mw==", "bodyText": "Again, can we include the namespace in the message?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4075#discussion_r542200053", "createdAt": "2020-12-14T08:37:07Z", "author": {"login": "tombentley"}, "path": "operator-common/src/main/java/io/strimzi/operator/common/operator/resource/AbstractResourceOperator.java", "diffHunk": "@@ -240,6 +243,9 @@ public T get(String namespace, String name) {\n      * @return A Future for the result.\n      */\n     public Future<T> getAsync(String namespace, String name) {\n+        if (name == null || name.isEmpty()) {\n+            throw new IllegalArgumentException(resourceKind + \" with an empty name cannot be configured. Please provide a name.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22f2e15e9fad85c947ed89df5bc60f132af44cc9"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 832, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}