{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2MTczNzUy", "number": 2679, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNToyODo0MFrODmu19w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNToyODo0MFrODmu19w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxOTM5OTU5OnYy", "diffSide": "RIGHT", "path": "systemtest/src/test/java/io/strimzi/systemtest/KafkaST.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNToyODo0MFrOF0UNyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNTo0MjozNlrOF0U2-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQwMTQ4MQ==", "bodyText": "Maybe this looks simpler\nString value = container.getEnv().stream().filter(envVar ->\n                        envVar.getName().equals(\"STRIMZI_JAVA_SYSTEM_PROPERTIES\")).findFirst().get().getValue();", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2679#discussion_r390401481", "createdAt": "2020-03-10T15:28:40Z", "author": {"login": "sknot-rh"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/KafkaST.java", "diffHunk": "@@ -771,6 +783,16 @@ void testJvmAndResources() {\n         assertResources(cmdKubeClient().namespace(), pod.get().getMetadata().getName(), \"user-operator\",\n                 \"512M\", \"300m\", \"256M\", \"300m\");\n \n+        String eoPod = eoPods.keySet().toArray()[0].toString();\n+        kubeClient().getPod(eoPod).getSpec().getContainers().forEach(container -> {\n+            if (!container.getName().equals(\"tls-sidecar\")) {\n+                LOGGER.info(\"Check if -D java options are present in {}\", container.getName());\n+                String value = container.getEnv().stream().filter(envVar ->\n+                        envVar.getName().equals(\"STRIMZI_JAVA_SYSTEM_PROPERTIES\")).collect(Collectors.toList()).get(0).getValue();\n+                assertThat(value, is(\"-Djavax.net.debug=verbose\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bacacb77b4027d73a869409fad65a46db240efff"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQxMjAyNA==", "bodyText": "yeah, good point, thanks :)", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2679#discussion_r390412024", "createdAt": "2020-03-10T15:42:36Z", "author": {"login": "im-konge"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/KafkaST.java", "diffHunk": "@@ -771,6 +783,16 @@ void testJvmAndResources() {\n         assertResources(cmdKubeClient().namespace(), pod.get().getMetadata().getName(), \"user-operator\",\n                 \"512M\", \"300m\", \"256M\", \"300m\");\n \n+        String eoPod = eoPods.keySet().toArray()[0].toString();\n+        kubeClient().getPod(eoPod).getSpec().getContainers().forEach(container -> {\n+            if (!container.getName().equals(\"tls-sidecar\")) {\n+                LOGGER.info(\"Check if -D java options are present in {}\", container.getName());\n+                String value = container.getEnv().stream().filter(envVar ->\n+                        envVar.getName().equals(\"STRIMZI_JAVA_SYSTEM_PROPERTIES\")).collect(Collectors.toList()).get(0).getValue();\n+                assertThat(value, is(\"-Djavax.net.debug=verbose\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQwMTQ4MQ=="}, "originalCommit": {"oid": "bacacb77b4027d73a869409fad65a46db240efff"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 293, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}