{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0NzY1MDU4", "number": 4072, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMlQxNzozNDo0MVrOFZ7XpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMlQxNzozNDo0MVrOFZ7XpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzYyNzMxNDI5OnYy", "diffSide": "RIGHT", "path": "documentation/modules/oauth/proc-oauth-authentication-broker-config.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMlQxNzozNDo0MVrOIku-bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMlQxNzozNDo0MVrOIku-bA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTM4OTI5Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            <10> Additional custom rules can be imposed on the JWT access token during validation by setting this to a JsonPath filter query. If matching fails, the access token is rejected. When using `introspectionEndpointUri` the custom check is applied to the introspection endpoint response JSON.\n          \n          \n            \n            <10> Additional custom rules can be imposed on the JWT access token during validation by setting this to a JsonPath filter query. If the access token does not contain the necessary data, it is rejected. When using the `introspectionEndpointUri`, the custom check is applied to the introspection endpoint response JSON.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4072#discussion_r575389292", "createdAt": "2021-02-12T17:34:41Z", "author": {"login": "PaulRMellor"}, "path": "documentation/modules/oauth/proc-oauth-authentication-broker-config.adoc", "diffHunk": "@@ -135,6 +136,7 @@ Depending on how you apply OAuth 2.0 authentication, and the type of authorizati\n <7> Set this to `false` in order to disable the SASL_OAUTHBEARER mechanism on the listener. At least one of SASL_PLAIN or SASL_OAUTHBEARER has to be enabled. Default is `true`.\n <8> Set this to `true` in order to enable the SASL_PLAIN mechanism on the listener, which is supported by all clients on all platforms. The Kafka client has to enable the SASL_PLAIN mechanism and set the `username` and the `password`. This mechanism can be used to authenticate either by using the OAuth access token, or by using the OAuth clientId and secret (client credentials). If the client sets `username` to `access-token` then the password is interpreted as access token on the server, otherwise the user is interpreted as the clientId, and password as the client secret. Default is `false`.\n <9> This has to be set to support the client credentials authentication when `enablePlain` is set to true, as described in previous point.\n+<10> Additional custom rules can be imposed on the JWT access token during validation by setting this to a JsonPath filter query. If matching fails, the access token is rejected. When using `introspectionEndpointUri` the custom check is applied to the introspection endpoint response JSON.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3056509395dc458a187fbaa2694b93d9d1c08055"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 829, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}