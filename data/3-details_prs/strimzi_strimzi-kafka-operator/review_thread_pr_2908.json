{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwMzUwNjEz", "number": 2908, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNjo0ODo0M1rOD3fxAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwODoyOToyOFrOD3huew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NTE4NzIxOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/strimzi/api/kafka/model/status/ListenerStatus.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNjo0ODo0M1rOGNxutA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNzo1OTozMlrOGNzzRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA5OTQ0NA==", "bodyText": "what about using \"comma-separated list of hostname:\u200dport pairs\" which is how we already explain what bootstrap means in our doc?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2908#discussion_r417099444", "createdAt": "2020-04-29T06:48:43Z", "author": {"login": "ppatierno"}, "path": "api/src/main/java/io/strimzi/api/kafka/model/status/ListenerStatus.java", "diffHunk": "@@ -54,6 +56,17 @@ public void setType(String type) {\n \n     public void setAddresses(List<ListenerAddress> addresses) {\n         this.addresses = addresses;\n+        if ((addresses == null) || (addresses.isEmpty())) {\n+            bootstrap = null;\n+        } else {\n+            bootstrap = addresses.stream().map(a -> a.getHost() + \":\" + a.getPort()).collect(Collectors.joining(\",\"));\n+        }\n+    }\n+\n+    @Description(\"A concatenated list of the bootstrap addresses for this listener.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b70da05750d2d2dd74a6286eba0959c1938fff83"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEzMzM4Mg==", "bodyText": "I'm all for consistency. Just building that change now and will add a new commit shortly.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2908#discussion_r417133382", "createdAt": "2020-04-29T07:59:32Z", "author": {"login": "AndrewJSchofield"}, "path": "api/src/main/java/io/strimzi/api/kafka/model/status/ListenerStatus.java", "diffHunk": "@@ -54,6 +56,17 @@ public void setType(String type) {\n \n     public void setAddresses(List<ListenerAddress> addresses) {\n         this.addresses = addresses;\n+        if ((addresses == null) || (addresses.isEmpty())) {\n+            bootstrap = null;\n+        } else {\n+            bootstrap = addresses.stream().map(a -> a.getHost() + \":\" + a.getPort()).collect(Collectors.joining(\",\"));\n+        }\n+    }\n+\n+    @Description(\"A concatenated list of the bootstrap addresses for this listener.\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA5OTQ0NA=="}, "originalCommit": {"oid": "b70da05750d2d2dd74a6286eba0959c1938fff83"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NTUwODQzOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/strimzi/api/kafka/model/status/ListenerStatus.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwODoyOToyOFrOGN0xkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwODoyOToyOFrOGN0xkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE0OTMzMQ==", "bodyText": "Unnecessary parens", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2908#discussion_r417149331", "createdAt": "2020-04-29T08:29:28Z", "author": {"login": "tombentley"}, "path": "api/src/main/java/io/strimzi/api/kafka/model/status/ListenerStatus.java", "diffHunk": "@@ -54,6 +56,17 @@ public void setType(String type) {\n \n     public void setAddresses(List<ListenerAddress> addresses) {\n         this.addresses = addresses;\n+        if ((addresses == null) || (addresses.isEmpty())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b70da05750d2d2dd74a6286eba0959c1938fff83"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 247, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}