{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyMDk4NzY1", "number": 2737, "title": "Add more metrics to our cluster and user operators", "bodyText": "Type of change\n\nEnhancement / new feature\n\nDescription\nOur operators currently provides only the basic metrics for JVM, Vert.x etc. Thsi PR adds some additional metrics from the operator world to Cluster and User Operators:\n\nNumber of custom resources seen by the operator\nNumber of periodical reconciliations\nNumber of started individual reconciliations\nNumber of failed reocnciliations\nNumber of successful reconciliations\nNumber of reconciliations which failed because of lock\nAverage and max reconciliation times\n\nIt also adds new dashabord for operators (see attachement).\nMetrics for Topic Oeprator will be added in separate PR. This PR does only some initial preparation to collect them from the Topic Operator container and to show the information in the dashabord.\nChecklist\n\n Write tests\n Make sure all tests pass\n Update documentation\n Try your changes from Pod inside your Kubernetes and OpenShift cluster, not just locally\n Update CHANGELOG.md", "createdAt": "2020-03-23T00:26:24Z", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2737", "merged": true, "mergeCommit": {"oid": "cc996ee747914ec4d37fa7378e5b959e07fa3c35"}, "closed": true, "closedAt": "2020-04-03T10:05:11Z", "author": {"login": "scholzj"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQYtwNAFqTM3OTE2NTM1Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTtJkCgFqTM4NjQ3OTQ0MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5MTY1MzU3", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2737#pullrequestreview-379165357", "createdAt": "2020-03-23T06:49:18Z", "commit": {"oid": "8ca665888d6c50bc786afcb76d2f96a04425d64d"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNjo0OToxOFrOF54jKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNjo1MToxNFrOF54lPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIzOTY1Nw==", "bodyText": "if we could assume that strimzi.reconciliations is a sort of root for the reconciliations related metrics, should the others be strimzi.reconciliations.periodical and not the other way around?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2737#discussion_r396239657", "createdAt": "2020-03-23T06:49:18Z", "author": {"login": "ppatierno"}, "path": "operator-common/src/main/java/io/strimzi/operator/common/AbstractOperator.java", "diffHunk": "@@ -59,10 +64,46 @@\n     protected final S resourceOperator;\n     private final String kind;\n \n+    private final MeterRegistry metrics;\n+    private final Counter periodicReconciliationsCounter;\n+    private final Counter reconciliationsCounter;\n+    private final Counter failedReconciliationsCounter;\n+    private final Counter successfulReconciliationsCounter;\n+    private final AtomicInteger resourceCounter;\n+\n     public AbstractOperator(Vertx vertx, String kind, S resourceOperator) {\n         this.vertx = vertx;\n         this.kind = kind;\n         this.resourceOperator = resourceOperator;\n+\n+        // Setup metrics\n+        metrics = BackendRegistries.getDefaultNow();\n+        \n+        periodicReconciliationsCounter = Counter.builder(\"strimzi.periodical.reconcilitions\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ca665888d6c50bc786afcb76d2f96a04425d64d"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI0MDE4OA==", "bodyText": "isn't it enough one failedReconciliationsCounter.increment(); call out of this if and elseif statements?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2737#discussion_r396240188", "createdAt": "2020-03-23T06:51:14Z", "author": {"login": "ppatierno"}, "path": "operator-common/src/main/java/io/strimzi/operator/common/AbstractOperator.java", "diffHunk": "@@ -259,15 +303,25 @@ public void accept(KubernetesClientException e) {\n      */\n     private void handleResult(Reconciliation reconciliation, AsyncResult<Void> result) {\n         if (result.succeeded()) {\n+            successfulReconciliationsCounter.increment();\n             log.info(\"{}: reconciled\", reconciliation);\n         } else {\n             Throwable cause = result.cause();\n             if (cause instanceof InvalidConfigParameterException) {\n+                failedReconciliationsCounter.increment();\n                 log.warn(\"{}: Failed to reconcile {}\", reconciliation, cause.getMessage());\n             } else if (!(cause instanceof UnableToAcquireLockException)) {\n+                failedReconciliationsCounter.increment();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ca665888d6c50bc786afcb76d2f96a04425d64d"}, "originalPosition": 94}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5MjM2NTAz", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2737#pullrequestreview-379236503", "createdAt": "2020-03-23T09:01:50Z", "commit": {"oid": "8ca665888d6c50bc786afcb76d2f96a04425d64d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwOTowMTo1MVrOF58EuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwOTowMTo1MVrOF58EuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI5NzQwMQ==", "bodyText": "Typo in multiple locations s/reconcilitions/reconciliations", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2737#discussion_r396297401", "createdAt": "2020-03-23T09:01:51Z", "author": {"login": "sknot-rh"}, "path": "operator-common/src/main/java/io/strimzi/operator/common/AbstractOperator.java", "diffHunk": "@@ -59,10 +64,46 @@\n     protected final S resourceOperator;\n     private final String kind;\n \n+    private final MeterRegistry metrics;\n+    private final Counter periodicReconciliationsCounter;\n+    private final Counter reconciliationsCounter;\n+    private final Counter failedReconciliationsCounter;\n+    private final Counter successfulReconciliationsCounter;\n+    private final AtomicInteger resourceCounter;\n+\n     public AbstractOperator(Vertx vertx, String kind, S resourceOperator) {\n         this.vertx = vertx;\n         this.kind = kind;\n         this.resourceOperator = resourceOperator;\n+\n+        // Setup metrics\n+        metrics = BackendRegistries.getDefaultNow();\n+        \n+        periodicReconciliationsCounter = Counter.builder(\"strimzi.periodical.reconcilitions\")\n+                .description(\"Number of periodical reconciliations done by the operator\")\n+                .tag(\"kind\", kind())\n+                .register(metrics);\n+\n+        reconciliationsCounter = Counter.builder(\"strimzi.reconcilitions\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ca665888d6c50bc786afcb76d2f96a04425d64d"}, "originalPosition": 49}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8ca665888d6c50bc786afcb76d2f96a04425d64d", "author": {"user": {"login": "scholzj", "name": "Jakub Scholz"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/8ca665888d6c50bc786afcb76d2f96a04425d64d", "committedDate": "2020-03-23T00:54:10Z", "message": "Fix checkstyleL\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>"}, "afterCommit": {"oid": "c2aeebc50b8d1a71d4bbd769b42f9fb39a6f25b1", "author": {"user": {"login": "scholzj", "name": "Jakub Scholz"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/c2aeebc50b8d1a71d4bbd769b42f9fb39a6f25b1", "committedDate": "2020-03-27T23:34:45Z", "message": "Review comments + timer\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9078507933a6de4dbb0bc19dea13f3cad3d2aef8", "author": {"user": {"login": "scholzj", "name": "Jakub Scholz"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/9078507933a6de4dbb0bc19dea13f3cad3d2aef8", "committedDate": "2020-04-01T00:02:22Z", "message": "Add more metrics to our operators\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>\n\nCHANGELOG.md\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>\n\nFix checkstyleL\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>\n\nReview comments + timer\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>\n\nAdd Connector metrics + Add MetricsProvider to mock metrics in tests\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>\n\nRemove histograms and quantiles, finish dashabord, add Prometheus integration (credit Standa)\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>\n\nFix imports\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>\n\nAdd tests\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>\n\nCleanup metrics setup not needed when we now use mocks for UTs\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>\n\nAdd docs\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dde8491980eecd650cbf9f8a95128e2a9fc8358c", "author": {"user": {"login": "scholzj", "name": "Jakub Scholz"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/dde8491980eecd650cbf9f8a95128e2a9fc8358c", "committedDate": "2020-03-31T23:15:32Z", "message": "Add docs\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>"}, "afterCommit": {"oid": "9078507933a6de4dbb0bc19dea13f3cad3d2aef8", "author": {"user": {"login": "scholzj", "name": "Jakub Scholz"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/9078507933a6de4dbb0bc19dea13f3cad3d2aef8", "committedDate": "2020-04-01T00:02:22Z", "message": "Add more metrics to our operators\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>\n\nCHANGELOG.md\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>\n\nFix checkstyleL\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>\n\nReview comments + timer\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>\n\nAdd Connector metrics + Add MetricsProvider to mock metrics in tests\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>\n\nRemove histograms and quantiles, finish dashabord, add Prometheus integration (credit Standa)\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>\n\nFix imports\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>\n\nAdd tests\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>\n\nCleanup metrics setup not needed when we now use mocks for UTs\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>\n\nAdd docs\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1MzMxNDY4", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2737#pullrequestreview-385331468", "createdAt": "2020-04-01T07:35:48Z", "commit": {"oid": "9078507933a6de4dbb0bc19dea13f3cad3d2aef8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNzozNTo0OFrOF-0PKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNzozNTo0OFrOF-0PKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQxMTg4Mw==", "bodyText": "Do we want to say something in the introduction to this procedure about service and pod metrics data? Examples?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2737#discussion_r401411883", "createdAt": "2020-04-01T07:35:48Z", "author": {"login": "PaulRMellor"}, "path": "documentation/modules/proc-metrics-deploying-prometheus.adoc", "diffHunk": "@@ -29,7 +29,9 @@ On MacOS, use:\n [source,shell,subs=\"+quotes,attributes\"]\n sed -i '' 's/namespace: .*/namespace: _my-namespace_/' prometheus.yaml\n \n-. Edit the `ServiceMonitor` resource in `strimzi-service-monitor.yaml` to define Prometheus jobs that will scrape the metrics data.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9078507933a6de4dbb0bc19dea13f3cad3d2aef8"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1MzM5Mjk0", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2737#pullrequestreview-385339294", "createdAt": "2020-04-01T07:47:59Z", "commit": {"oid": "9078507933a6de4dbb0bc19dea13f3cad3d2aef8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "75bdeab8562442f55a0eb995a2b666bfbfe6992c", "author": {"user": {"login": "scholzj", "name": "Jakub Scholz"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/75bdeab8562442f55a0eb995a2b666bfbfe6992c", "committedDate": "2020-04-01T07:54:26Z", "message": "Add Javadoc\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe0e7d40c6fc38e2130109c7545c305d4ec47c4e", "author": {"user": {"login": "scholzj", "name": "Jakub Scholz"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/fe0e7d40c6fc38e2130109c7545c305d4ec47c4e", "committedDate": "2020-04-01T11:04:31Z", "message": "Improve the docs\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1NTIxMTgw", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2737#pullrequestreview-385521180", "createdAt": "2020-04-01T12:08:49Z", "commit": {"oid": "fe0e7d40c6fc38e2130109c7545c305d4ec47c4e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1NjA4NDg4", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2737#pullrequestreview-385608488", "createdAt": "2020-04-01T13:54:28Z", "commit": {"oid": "fe0e7d40c6fc38e2130109c7545c305d4ec47c4e"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMzo1NDoyOFrOF_BxcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMzo1NDoyOFrOF_BxcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYzMzY0OQ==", "bodyText": "Type \"Mircometer\" -> \"Micrometer\"", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2737#discussion_r401633649", "createdAt": "2020-04-01T13:54:28Z", "author": {"login": "tomaley"}, "path": "operator-common/src/main/java/io/strimzi/operator/common/MicrometerMetricsProvider.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Copyright Strimzi authors.\n+ * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n+ */\n+package io.strimzi.operator.common;\n+\n+import io.micrometer.core.instrument.Counter;\n+import io.micrometer.core.instrument.Gauge;\n+import io.micrometer.core.instrument.MeterRegistry;\n+import io.micrometer.core.instrument.Tags;\n+import io.micrometer.core.instrument.Timer;\n+import io.vertx.micrometer.backends.BackendRegistries;\n+\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+/**\n+ * Wraps creation of Micrometer metrics.\n+ */\n+public class MicrometerMetricsProvider implements MetricsProvider {\n+    private final MeterRegistry metrics;\n+\n+    /**\n+     * Constructor of the Micrometer metrics provider\n+     */\n+    public MicrometerMetricsProvider() {\n+        this.metrics = BackendRegistries.getDefaultNow();\n+    }\n+\n+    /**\n+     * Returns the Mircometer MeterRegistry with all metrics", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe0e7d40c6fc38e2130109c7545c305d4ec47c4e"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c67c4224dab634af03f8d689dbf91027996eb73a", "author": {"user": {"login": "scholzj", "name": "Jakub Scholz"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/c67c4224dab634af03f8d689dbf91027996eb73a", "committedDate": "2020-04-01T15:44:47Z", "message": "Fix typo in JavaDocs\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2MjA2NzM0", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2737#pullrequestreview-386206734", "createdAt": "2020-04-02T08:25:31Z", "commit": {"oid": "c67c4224dab634af03f8d689dbf91027996eb73a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff2a93ca67b5ffd7d8ce579c62f5eb4bb87aad3e", "author": {"user": {"login": "scholzj", "name": "Jakub Scholz"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/ff2a93ca67b5ffd7d8ce579c62f5eb4bb87aad3e", "committedDate": "2020-04-02T08:47:36Z", "message": "Use constant in the metrics names\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2NDc5NDQw", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2737#pullrequestreview-386479440", "createdAt": "2020-04-02T14:25:35Z", "commit": {"oid": "ff2a93ca67b5ffd7d8ce579c62f5eb4bb87aad3e"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNDoyNTozNVrOF_tyTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNDoyNTozNVrOF_tyTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM1NDc2Ng==", "bodyText": "I assume it's the number of reconciliation started due to added, updated or deleted CRs. Maybe just \"Started\" is not enough to understand, at least for me. Something around \"CRs triggered Reconciliation per hour\" ... but I have not strong opinion, just that \"Started\" doesn't clarify the nature.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2737#discussion_r402354766", "createdAt": "2020-04-02T14:25:35Z", "author": {"login": "ppatierno"}, "path": "examples/metrics/grafana-dashboards/strimzi-operators.json", "diffHunk": "@@ -0,0 +1,1705 @@\n+{\n+  \"annotations\": {\n+    \"list\": [\n+      {\n+        \"builtIn\": 1,\n+        \"datasource\": \"-- Grafana --\",\n+        \"enable\": true,\n+        \"hide\": true,\n+        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n+        \"name\": \"Annotations & Alerts\",\n+        \"type\": \"dashboard\"\n+      }\n+    ]\n+  },\n+  \"editable\": true,\n+  \"gnetId\": null,\n+  \"graphTooltip\": 0,\n+  \"id\": 5,\n+  \"links\": [],\n+  \"panels\": [\n+    {\n+      \"collapsed\": false,\n+      \"gridPos\": {\n+        \"h\": 1,\n+        \"w\": 24,\n+        \"x\": 0,\n+        \"y\": 0\n+      },\n+      \"id\": 4,\n+      \"panels\": [],\n+      \"title\": \"Custom Resources\",\n+      \"type\": \"row\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": false,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 3,\n+        \"w\": 3,\n+        \"x\": 0,\n+        \"y\": 1\n+      },\n+      \"id\": 2,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"sum(strimzi_resources{kind=\\\"Kafka\\\"})\",\n+          \"format\": \"time_series\",\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"\",\n+      \"timeFrom\": null,\n+      \"timeShift\": null,\n+      \"title\": \"Kafka CRs\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"120%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": false,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 3,\n+        \"w\": 3,\n+        \"x\": 3,\n+        \"y\": 1\n+      },\n+      \"id\": 11,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"sum(strimzi_resources{kind=\\\"KafkaConnect\\\"})\",\n+          \"format\": \"time_series\",\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"\",\n+      \"timeFrom\": null,\n+      \"timeShift\": null,\n+      \"title\": \"Connect CRs\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"120%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": false,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 3,\n+        \"w\": 3,\n+        \"x\": 6,\n+        \"y\": 1\n+      },\n+      \"id\": 14,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"sum(strimzi_resources{kind=\\\"KafkaConnectS2I\\\"})\",\n+          \"format\": \"time_series\",\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"\",\n+      \"timeFrom\": null,\n+      \"timeShift\": null,\n+      \"title\": \"Connect S2I CRs\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"120%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": false,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 6,\n+        \"w\": 5,\n+        \"x\": 9,\n+        \"y\": 1\n+      },\n+      \"id\": 54,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"sum(strimzi_resources{kind=\\\"KafkaConnector\\\"})\",\n+          \"format\": \"time_series\",\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"\",\n+      \"timeFrom\": null,\n+      \"timeShift\": null,\n+      \"title\": \"Connector CRs\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": false,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 6,\n+        \"w\": 5,\n+        \"x\": 14,\n+        \"y\": 1\n+      },\n+      \"id\": 15,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"sum(strimzi_resources{kind=\\\"KafkaUser\\\"})\",\n+          \"format\": \"time_series\",\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"\",\n+      \"timeFrom\": null,\n+      \"timeShift\": null,\n+      \"title\": \"User CRs\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"0\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": false,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 6,\n+        \"w\": 5,\n+        \"x\": 19,\n+        \"y\": 1\n+      },\n+      \"id\": 50,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"sum(strimzi_resources{kind=\\\"KafkaTopic\\\"})\",\n+          \"format\": \"time_series\",\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"\",\n+      \"timeFrom\": null,\n+      \"timeShift\": null,\n+      \"title\": \"Topics CRs\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"0\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": false,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 3,\n+        \"w\": 3,\n+        \"x\": 0,\n+        \"y\": 4\n+      },\n+      \"id\": 13,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"sum(strimzi_resources{kind=\\\"KafkaBridge\\\"})\",\n+          \"format\": \"time_series\",\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"\",\n+      \"timeFrom\": null,\n+      \"timeShift\": null,\n+      \"title\": \"Bridge CRs\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"120%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": false,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 3,\n+        \"w\": 3,\n+        \"x\": 3,\n+        \"y\": 4\n+      },\n+      \"id\": 12,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"sum(strimzi_resources{kind=\\\"KafkaMirrorMaker\\\"})\",\n+          \"format\": \"time_series\",\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"\",\n+      \"timeFrom\": null,\n+      \"timeShift\": null,\n+      \"title\": \"Mirror Maker CRs\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"120%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": false,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 3,\n+        \"w\": 3,\n+        \"x\": 6,\n+        \"y\": 4\n+      },\n+      \"id\": 16,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"sum(strimzi_resources{kind=\\\"KafkaMirrorMaker2\\\"})\",\n+          \"format\": \"time_series\",\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"\",\n+      \"timeFrom\": null,\n+      \"timeShift\": null,\n+      \"title\": \"Mirror Maker 2 CRs\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"120%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"collapsed\": false,\n+      \"gridPos\": {\n+        \"h\": 1,\n+        \"w\": 24,\n+        \"x\": 0,\n+        \"y\": 7\n+      },\n+      \"id\": 10,\n+      \"panels\": [],\n+      \"title\": \"Reconciliations\",\n+      \"type\": \"row\"\n+    },\n+    {\n+      \"aliasColors\": {},\n+      \"bars\": false,\n+      \"dashLength\": 10,\n+      \"dashes\": false,\n+      \"decimals\": null,\n+      \"fill\": 1,\n+      \"gridPos\": {\n+        \"h\": 8,\n+        \"w\": 12,\n+        \"x\": 0,\n+        \"y\": 8\n+      },\n+      \"id\": 48,\n+      \"legend\": {\n+        \"avg\": false,\n+        \"current\": false,\n+        \"hideEmpty\": false,\n+        \"hideZero\": false,\n+        \"max\": false,\n+        \"min\": false,\n+        \"show\": true,\n+        \"total\": false,\n+        \"values\": false\n+      },\n+      \"lines\": true,\n+      \"linewidth\": 1,\n+      \"links\": [],\n+      \"nullPointMode\": \"null\",\n+      \"paceLength\": 10,\n+      \"percentage\": false,\n+      \"pointradius\": 2,\n+      \"points\": false,\n+      \"renderer\": \"flot\",\n+      \"seriesOverrides\": [],\n+      \"stack\": false,\n+      \"steppedLine\": false,\n+      \"targets\": [\n+        {\n+          \"expr\": \"sum(increase(strimzi_reconciliations_successful_total[1h])) by (kind)\",\n+          \"format\": \"time_series\",\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"{{kind}}\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": [],\n+      \"timeFrom\": null,\n+      \"timeRegions\": [],\n+      \"timeShift\": null,\n+      \"title\": \"Successful Reconciliation per hour\",\n+      \"tooltip\": {\n+        \"shared\": true,\n+        \"sort\": 0,\n+        \"value_type\": \"individual\"\n+      },\n+      \"type\": \"graph\",\n+      \"xaxis\": {\n+        \"buckets\": null,\n+        \"mode\": \"time\",\n+        \"name\": null,\n+        \"show\": true,\n+        \"values\": []\n+      },\n+      \"yaxes\": [\n+        {\n+          \"format\": \"short\",\n+          \"label\": null,\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        },\n+        {\n+          \"format\": \"short\",\n+          \"label\": null,\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        }\n+      ],\n+      \"yaxis\": {\n+        \"align\": false,\n+        \"alignLevel\": null\n+      }\n+    },\n+    {\n+      \"aliasColors\": {},\n+      \"bars\": false,\n+      \"dashLength\": 10,\n+      \"dashes\": false,\n+      \"decimals\": null,\n+      \"fill\": 1,\n+      \"gridPos\": {\n+        \"h\": 8,\n+        \"w\": 6,\n+        \"x\": 12,\n+        \"y\": 8\n+      },\n+      \"id\": 49,\n+      \"legend\": {\n+        \"avg\": false,\n+        \"current\": false,\n+        \"hideEmpty\": false,\n+        \"hideZero\": false,\n+        \"max\": false,\n+        \"min\": false,\n+        \"show\": true,\n+        \"total\": false,\n+        \"values\": false\n+      },\n+      \"lines\": true,\n+      \"linewidth\": 1,\n+      \"links\": [],\n+      \"nullPointMode\": \"null\",\n+      \"paceLength\": 10,\n+      \"percentage\": false,\n+      \"pointradius\": 2,\n+      \"points\": false,\n+      \"renderer\": \"flot\",\n+      \"seriesOverrides\": [],\n+      \"stack\": false,\n+      \"steppedLine\": false,\n+      \"targets\": [\n+        {\n+          \"expr\": \"sum(increase(strimzi_reconciliations_failed_total[1h])) by (kind)\",\n+          \"format\": \"time_series\",\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"{{kind}}\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": [],\n+      \"timeFrom\": null,\n+      \"timeRegions\": [],\n+      \"timeShift\": null,\n+      \"title\": \"Failed Reconciliation per hour\",\n+      \"tooltip\": {\n+        \"shared\": true,\n+        \"sort\": 0,\n+        \"value_type\": \"individual\"\n+      },\n+      \"type\": \"graph\",\n+      \"xaxis\": {\n+        \"buckets\": null,\n+        \"mode\": \"time\",\n+        \"name\": null,\n+        \"show\": true,\n+        \"values\": []\n+      },\n+      \"yaxes\": [\n+        {\n+          \"format\": \"short\",\n+          \"label\": null,\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        },\n+        {\n+          \"format\": \"short\",\n+          \"label\": null,\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        }\n+      ],\n+      \"yaxis\": {\n+        \"align\": false,\n+        \"alignLevel\": null\n+      }\n+    },\n+    {\n+      \"aliasColors\": {},\n+      \"bars\": false,\n+      \"dashLength\": 10,\n+      \"dashes\": false,\n+      \"decimals\": null,\n+      \"fill\": 1,\n+      \"gridPos\": {\n+        \"h\": 8,\n+        \"w\": 6,\n+        \"x\": 18,\n+        \"y\": 8\n+      },\n+      \"id\": 51,\n+      \"legend\": {\n+        \"avg\": false,\n+        \"current\": false,\n+        \"hideEmpty\": false,\n+        \"hideZero\": false,\n+        \"max\": false,\n+        \"min\": false,\n+        \"show\": true,\n+        \"total\": false,\n+        \"values\": false\n+      },\n+      \"lines\": true,\n+      \"linewidth\": 1,\n+      \"links\": [],\n+      \"nullPointMode\": \"null\",\n+      \"paceLength\": 10,\n+      \"percentage\": false,\n+      \"pointradius\": 2,\n+      \"points\": false,\n+      \"renderer\": \"flot\",\n+      \"seriesOverrides\": [],\n+      \"stack\": false,\n+      \"steppedLine\": false,\n+      \"targets\": [\n+        {\n+          \"expr\": \"sum(increase(strimzi_reconciliations_locked_total[1h])) by (kind)\",\n+          \"format\": \"time_series\",\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"{{kind}}\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": [],\n+      \"timeFrom\": null,\n+      \"timeRegions\": [],\n+      \"timeShift\": null,\n+      \"title\": \"Reconciliation without Lock per hour\",\n+      \"tooltip\": {\n+        \"shared\": true,\n+        \"sort\": 0,\n+        \"value_type\": \"individual\"\n+      },\n+      \"type\": \"graph\",\n+      \"xaxis\": {\n+        \"buckets\": null,\n+        \"mode\": \"time\",\n+        \"name\": null,\n+        \"show\": true,\n+        \"values\": []\n+      },\n+      \"yaxes\": [\n+        {\n+          \"format\": \"short\",\n+          \"label\": null,\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        },\n+        {\n+          \"format\": \"short\",\n+          \"label\": null,\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        }\n+      ],\n+      \"yaxis\": {\n+        \"align\": false,\n+        \"alignLevel\": null\n+      }\n+    },\n+    {\n+      \"aliasColors\": {},\n+      \"bars\": false,\n+      \"cacheTimeout\": null,\n+      \"dashLength\": 10,\n+      \"dashes\": false,\n+      \"decimals\": null,\n+      \"fill\": 1,\n+      \"gridPos\": {\n+        \"h\": 8,\n+        \"w\": 12,\n+        \"x\": 0,\n+        \"y\": 16\n+      },\n+      \"id\": 47,\n+      \"legend\": {\n+        \"avg\": false,\n+        \"current\": false,\n+        \"hideEmpty\": false,\n+        \"hideZero\": false,\n+        \"max\": false,\n+        \"min\": false,\n+        \"show\": true,\n+        \"total\": false,\n+        \"values\": false\n+      },\n+      \"lines\": true,\n+      \"linewidth\": 1,\n+      \"links\": [],\n+      \"nullPointMode\": \"null\",\n+      \"paceLength\": 10,\n+      \"percentage\": false,\n+      \"pointradius\": 2,\n+      \"points\": false,\n+      \"renderer\": \"flot\",\n+      \"seriesOverrides\": [],\n+      \"stack\": false,\n+      \"steppedLine\": false,\n+      \"targets\": [\n+        {\n+          \"expr\": \"sum(increase(strimzi_reconciliations_total[1h])) by (kind)\",\n+          \"format\": \"time_series\",\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"{{kind}}\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": [],\n+      \"timeFrom\": null,\n+      \"timeRegions\": [],\n+      \"timeShift\": null,\n+      \"title\": \"Started Reconciliation per hour\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2a93ca67b5ffd7d8ce579c62f5eb4bb87aad3e"}, "originalPosition": 1088}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2111, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}