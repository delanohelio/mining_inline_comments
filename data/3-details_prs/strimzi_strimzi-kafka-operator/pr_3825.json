{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0MTk1MzQw", "number": 3825, "title": "Fix custom, oauth and authz-keycloak related P12 truststore are not built correctly", "bodyText": "Type of change\n\nBugfix\n\nDescription\nThis PR fixes #3823.\nChecklist\nPlease go through this checklist and make sure all applicable tasks have been done\n\n Write tests\n Make sure all tests pass\n Update documentation\n Check RBAC rights for Kubernetes / OpenShift roles\n Try your changes from Pod inside your Kubernetes and OpenShift cluster, not just locally\n Reference relevant issue(s) and close them after merging\n Update CHANGELOG.md\n Supply screenshots for visual changes, such as Grafana dashboards", "createdAt": "2020-10-15T15:34:55Z", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3825", "merged": true, "mergeCommit": {"oid": "5beff1b2b2744d02b3b182691bdcf0cbc3c7a99f"}, "closed": true, "closedAt": "2020-10-16T21:29:23Z", "author": {"login": "ppatierno"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSzkRdgH2gAyNTA0MTk1MzQwOjliMzYyMjNjYTQ0N2YyZjgyN2Q0ZWQ4MmJlNDRkY2MxZDg1NWIyYmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdTJKw9AFqTUxMDYzNTE4OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9b36223ca447f2f827d4ed82be44dcc1d855b2bc", "author": {"user": {"login": "ppatierno", "name": "Paolo Patierno"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/9b36223ca447f2f827d4ed82be44dcc1d855b2bc", "committedDate": "2020-10-15T15:32:39Z", "message": "Fix for P12 truststore generation for listeners custom certificates\n\nSigned-off-by: Paolo Patierno <ppatierno@live.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5NTI5MDUw", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3825#pullrequestreview-509529050", "createdAt": "2020-10-15T15:53:07Z", "commit": {"oid": "9b36223ca447f2f827d4ed82be44dcc1d855b2bc"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNTo1MzowOFrOHiOsmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNTo1NDowNFrOHiOvVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY1NDQyNw==", "bodyText": "Do we really need the regex? Is the prefix not enough? This is something what just ties it too much to changes in other places.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3825#discussion_r505654427", "createdAt": "2020-10-15T15:53:08Z", "author": {"login": "scholzj"}, "path": "docker-images/kafka/scripts/kafka_tls_prepare_certificates.sh", "diffHunk": "@@ -72,19 +72,31 @@ create_keystore /tmp/kafka/cluster.keystore.p12 \"$CERTS_STORE_PASSWORD\" \\\n     \"$HOSTNAME\"\n echo \"Preparing keystore for replication and clienttls listener is complete\"\n \n-CUSTOM_CERT_DIR=\"/opt/kafka/certificates/custom-tls-9093-certs\"\n-if [ -d \"$CUSTOM_CERT_DIR\" ]; then\n-    echo \"Preparing custom keystore for tls listener\"\n-    create_keystore_without_ca_file /tmp/kafka/custom-tls-9093.keystore.p12 \"$CERTS_STORE_PASSWORD\" \"${CUSTOM_CERT_DIR}/tls.crt\" \"${CUSTOM_CERT_DIR}/tls.key\" custom-key\n-    echo \"Preparing custom keystore for tls listener is complete\"\n-fi\n+regex=\"^\\/opt\\/kafka\\/certificates\\/custom-([a-z0-9]{1,11})-([0-9]+)-certs$\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b36223ca447f2f827d4ed82be44dcc1d855b2bc"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY1NTEyNQ==", "bodyText": "I guess this can be deleted (maybe you planned to do it later)", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3825#discussion_r505655125", "createdAt": "2020-10-15T15:54:04Z", "author": {"login": "scholzj"}, "path": "docker-images/kafka/scripts/kafka_tls_prepare_certificates.sh", "diffHunk": "@@ -72,19 +72,31 @@ create_keystore /tmp/kafka/cluster.keystore.p12 \"$CERTS_STORE_PASSWORD\" \\\n     \"$HOSTNAME\"\n echo \"Preparing keystore for replication and clienttls listener is complete\"\n \n-CUSTOM_CERT_DIR=\"/opt/kafka/certificates/custom-tls-9093-certs\"\n-if [ -d \"$CUSTOM_CERT_DIR\" ]; then\n-    echo \"Preparing custom keystore for tls listener\"\n-    create_keystore_without_ca_file /tmp/kafka/custom-tls-9093.keystore.p12 \"$CERTS_STORE_PASSWORD\" \"${CUSTOM_CERT_DIR}/tls.crt\" \"${CUSTOM_CERT_DIR}/tls.key\" custom-key\n-    echo \"Preparing custom keystore for tls listener is complete\"\n-fi\n+regex=\"^\\/opt\\/kafka\\/certificates\\/custom-([a-z0-9]{1,11})-([0-9]+)-certs$\"\n+for CUSTOM_CERT_DIR in /opt/kafka/certificates/custom-*; do\n+    echo \"dir=$CUSTOM_CERT_DIR\"\n+    if [[ $CUSTOM_CERT_DIR =~ $regex ]];\n+    then\n+      echo \"listener=${BASH_REMATCH[1]}:${BASH_REMATCH[2]}\"\n+      echo \"Preparing custom keystore for ${BASH_REMATCH[1]} listener\"\n+      create_keystore_without_ca_file /tmp/kafka/custom-${BASH_REMATCH[1]}-${BASH_REMATCH[2]}.keystore.p12 \"$CERTS_STORE_PASSWORD\" \"${CUSTOM_CERT_DIR}/tls.crt\" \"${CUSTOM_CERT_DIR}/tls.key\" custom-key\n+      echo \"Preparing custom keystore for ${BASH_REMATCH[1]} listener is complete\"  \n+    fi\n+done\n \n-CUSTOM_CERT_DIR=\"/opt/kafka/certificates/custom-external-9094-certs\"\n-if [ -d \"$CUSTOM_CERT_DIR\" ]; then\n-    echo \"Preparing custom keystore for external listener\"\n-    create_keystore_without_ca_file /tmp/kafka/custom-external-9094.keystore.p12 \"$CERTS_STORE_PASSWORD\" \"${CUSTOM_CERT_DIR}/tls.crt\" \"${CUSTOM_CERT_DIR}/tls.key\" custom-key\n-    echo \"Preparing custom keystore for external listener is complete\"\n-fi\n+#CUSTOM_CERT_DIR=\"/opt/kafka/certificates/custom-tls-9093-certs\"\n+#if [ -d \"$CUSTOM_CERT_DIR\" ]; then\n+#    echo \"Preparing custom keystore for tls listener\"\n+#    create_keystore_without_ca_file /tmp/kafka/custom-tls-9093.keystore.p12 \"$CERTS_STORE_PASSWORD\" \"${CUSTOM_CERT_DIR}/tls.crt\" \"${CUSTOM_CERT_DIR}/tls.key\" custom-key\n+#    echo \"Preparing custom keystore for tls listener is complete\"\n+#fi\n+\n+#CUSTOM_CERT_DIR=\"/opt/kafka/certificates/custom-external-9094-certs\"\n+#if [ -d \"$CUSTOM_CERT_DIR\" ]; then\n+#    echo \"Preparing custom keystore for external listener\"\n+#    create_keystore_without_ca_file /tmp/kafka/custom-external-9094.keystore.p12 \"$CERTS_STORE_PASSWORD\" \"${CUSTOM_CERT_DIR}/tls.crt\" \"${CUSTOM_CERT_DIR}/tls.key\" custom-key\n+#    echo \"Preparing custom keystore for external listener is complete\"\n+#fi", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b36223ca447f2f827d4ed82be44dcc1d855b2bc"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c1e6f98f3c55c3ffdf263048ef93c422bb1d268", "author": {"user": {"login": "ppatierno", "name": "Paolo Patierno"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/4c1e6f98f3c55c3ffdf263048ef93c422bb1d268", "committedDate": "2020-10-15T16:38:19Z", "message": "Fixed P12 keystore generation for oauth\n\nSigned-off-by: Paolo Patierno <ppatierno@live.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a06fcb0ba026a747c2fd83095320b491a64e673c", "author": {"user": {"login": "ppatierno", "name": "Paolo Patierno"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/a06fcb0ba026a747c2fd83095320b491a64e673c", "committedDate": "2020-10-15T16:49:47Z", "message": "Removed commented old lines\n\nSigned-off-by: Paolo Patierno <ppatierno@live.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c9468424df37910c3551cbbd431e13f8e703ed9", "author": {"user": {"login": "ppatierno", "name": "Paolo Patierno"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/3c9468424df37910c3551cbbd431e13f8e703ed9", "committedDate": "2020-10-15T17:20:24Z", "message": "Fixed shellcheck error\n\nSigned-off-by: Paolo Patierno <ppatierno@live.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5NjgzNzU1", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3825#pullrequestreview-509683755", "createdAt": "2020-10-15T19:03:34Z", "commit": {"oid": "3c9468424df37910c3551cbbd431e13f8e703ed9"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxOTowMzozNFrOHiWBmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxOTowNzowNFrOHiWIqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc3NDQ4OA==", "bodyText": "Should this be elif? I think it would make the code more readable as one would need to stop and think whether both can be true or not.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3825#discussion_r505774488", "createdAt": "2020-10-15T19:03:34Z", "author": {"login": "scholzj"}, "path": "docker-images/kafka/scripts/kafka_tls_prepare_certificates.sh", "diffHunk": "@@ -72,19 +72,28 @@ create_keystore /tmp/kafka/cluster.keystore.p12 \"$CERTS_STORE_PASSWORD\" \\\n     \"$HOSTNAME\"\n echo \"Preparing keystore for replication and clienttls listener is complete\"\n \n-CUSTOM_CERT_DIR=\"/opt/kafka/certificates/custom-tls-9093-certs\"\n-if [ -d \"$CUSTOM_CERT_DIR\" ]; then\n-    echo \"Preparing custom keystore for tls listener\"\n-    create_keystore_without_ca_file /tmp/kafka/custom-tls-9093.keystore.p12 \"$CERTS_STORE_PASSWORD\" \"${CUSTOM_CERT_DIR}/tls.crt\" \"${CUSTOM_CERT_DIR}/tls.key\" custom-key\n-    echo \"Preparing custom keystore for tls listener is complete\"\n-fi\n-\n-CUSTOM_CERT_DIR=\"/opt/kafka/certificates/custom-external-9094-certs\"\n-if [ -d \"$CUSTOM_CERT_DIR\" ]; then\n-    echo \"Preparing custom keystore for external listener\"\n-    create_keystore_without_ca_file /tmp/kafka/custom-external-9094.keystore.p12 \"$CERTS_STORE_PASSWORD\" \"${CUSTOM_CERT_DIR}/tls.crt\" \"${CUSTOM_CERT_DIR}/tls.key\" custom-key\n-    echo \"Preparing custom keystore for external listener is complete\"\n-fi\n+regex=\"^\\/opt\\/kafka\\/certificates\\/(custom|oauth)-([a-z0-9]{1,11})-([0-9]+)-certs$\"\n+for CERT_DIR in /opt/kafka/certificates/*; do\n+  if [[ $CERT_DIR =~ $regex ]]; then\n+    echo \"Preparing store for ${BASH_REMATCH[1]} ${BASH_REMATCH[2]} listener\"\n+    if [[ ${BASH_REMATCH[1]} == \"custom\"  ]]; then\n+      echo /tmp/kafka/\"${BASH_REMATCH[1]}\"-\"${BASH_REMATCH[2]}\"-\"${BASH_REMATCH[3]}\".keystore.p12\n+      create_keystore_without_ca_file /tmp/kafka/\"${BASH_REMATCH[1]}\"-\"${BASH_REMATCH[2]}\"-\"${BASH_REMATCH[3]}\".keystore.p12 \"$CERTS_STORE_PASSWORD\" \"${CERT_DIR}/tls.crt\" \"${CERT_DIR}/tls.key\" custom-key\n+    fi\n+    if [[ ${BASH_REMATCH[1]} == \"oauth\"  ]]; then", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c9468424df37910c3551cbbd431e13f8e703ed9"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc3NDgyNA==", "bodyText": "I know the listener name is unique, but should we list also ${BASH_REMATCH[3]} for clarity?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3825#discussion_r505774824", "createdAt": "2020-10-15T19:04:14Z", "author": {"login": "scholzj"}, "path": "docker-images/kafka/scripts/kafka_tls_prepare_certificates.sh", "diffHunk": "@@ -72,19 +72,28 @@ create_keystore /tmp/kafka/cluster.keystore.p12 \"$CERTS_STORE_PASSWORD\" \\\n     \"$HOSTNAME\"\n echo \"Preparing keystore for replication and clienttls listener is complete\"\n \n-CUSTOM_CERT_DIR=\"/opt/kafka/certificates/custom-tls-9093-certs\"\n-if [ -d \"$CUSTOM_CERT_DIR\" ]; then\n-    echo \"Preparing custom keystore for tls listener\"\n-    create_keystore_without_ca_file /tmp/kafka/custom-tls-9093.keystore.p12 \"$CERTS_STORE_PASSWORD\" \"${CUSTOM_CERT_DIR}/tls.crt\" \"${CUSTOM_CERT_DIR}/tls.key\" custom-key\n-    echo \"Preparing custom keystore for tls listener is complete\"\n-fi\n-\n-CUSTOM_CERT_DIR=\"/opt/kafka/certificates/custom-external-9094-certs\"\n-if [ -d \"$CUSTOM_CERT_DIR\" ]; then\n-    echo \"Preparing custom keystore for external listener\"\n-    create_keystore_without_ca_file /tmp/kafka/custom-external-9094.keystore.p12 \"$CERTS_STORE_PASSWORD\" \"${CUSTOM_CERT_DIR}/tls.crt\" \"${CUSTOM_CERT_DIR}/tls.key\" custom-key\n-    echo \"Preparing custom keystore for external listener is complete\"\n-fi\n+regex=\"^\\/opt\\/kafka\\/certificates\\/(custom|oauth)-([a-z0-9]{1,11})-([0-9]+)-certs$\"\n+for CERT_DIR in /opt/kafka/certificates/*; do\n+  if [[ $CERT_DIR =~ $regex ]]; then\n+    echo \"Preparing store for ${BASH_REMATCH[1]} ${BASH_REMATCH[2]} listener\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c9468424df37910c3551cbbd431e13f8e703ed9"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc3NTg4OQ==", "bodyText": "I know this was here before. But could you fix the message? I think it is supposed to say Preparing truststore for client authentication or something like that.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3825#discussion_r505775889", "createdAt": "2020-10-15T19:06:08Z", "author": {"login": "scholzj"}, "path": "docker-images/kafka/scripts/kafka_tls_prepare_certificates.sh", "diffHunk": "@@ -72,19 +72,28 @@ create_keystore /tmp/kafka/cluster.keystore.p12 \"$CERTS_STORE_PASSWORD\" \\\n     \"$HOSTNAME\"\n echo \"Preparing keystore for replication and clienttls listener is complete\"\n \n-CUSTOM_CERT_DIR=\"/opt/kafka/certificates/custom-tls-9093-certs\"\n-if [ -d \"$CUSTOM_CERT_DIR\" ]; then\n-    echo \"Preparing custom keystore for tls listener\"\n-    create_keystore_without_ca_file /tmp/kafka/custom-tls-9093.keystore.p12 \"$CERTS_STORE_PASSWORD\" \"${CUSTOM_CERT_DIR}/tls.crt\" \"${CUSTOM_CERT_DIR}/tls.key\" custom-key\n-    echo \"Preparing custom keystore for tls listener is complete\"\n-fi\n-\n-CUSTOM_CERT_DIR=\"/opt/kafka/certificates/custom-external-9094-certs\"\n-if [ -d \"$CUSTOM_CERT_DIR\" ]; then\n-    echo \"Preparing custom keystore for external listener\"\n-    create_keystore_without_ca_file /tmp/kafka/custom-external-9094.keystore.p12 \"$CERTS_STORE_PASSWORD\" \"${CUSTOM_CERT_DIR}/tls.crt\" \"${CUSTOM_CERT_DIR}/tls.key\" custom-key\n-    echo \"Preparing custom keystore for external listener is complete\"\n-fi\n+regex=\"^\\/opt\\/kafka\\/certificates\\/(custom|oauth)-([a-z0-9]{1,11})-([0-9]+)-certs$\"\n+for CERT_DIR in /opt/kafka/certificates/*; do\n+  if [[ $CERT_DIR =~ $regex ]]; then\n+    echo \"Preparing store for ${BASH_REMATCH[1]} ${BASH_REMATCH[2]} listener\"\n+    if [[ ${BASH_REMATCH[1]} == \"custom\"  ]]; then\n+      echo /tmp/kafka/\"${BASH_REMATCH[1]}\"-\"${BASH_REMATCH[2]}\"-\"${BASH_REMATCH[3]}\".keystore.p12\n+      create_keystore_without_ca_file /tmp/kafka/\"${BASH_REMATCH[1]}\"-\"${BASH_REMATCH[2]}\"-\"${BASH_REMATCH[3]}\".keystore.p12 \"$CERTS_STORE_PASSWORD\" \"${CERT_DIR}/tls.crt\" \"${CERT_DIR}/tls.key\" custom-key\n+    fi\n+    if [[ ${BASH_REMATCH[1]} == \"oauth\"  ]]; then\n+      OAUTH_STORE=\"/tmp/kafka/${BASH_REMATCH[1]}-${BASH_REMATCH[2]}-${BASH_REMATCH[3]}.truststore.p12\"\n+      # Add each certificate to the trust store\n+      declare -i INDEX=0\n+      for CRT in \"$CERT_DIR\"/**/*; do\n+        ALIAS=\"oauth-${INDEX}\"\n+        echo \"Adding $CRT to truststore $OAUTH_STORE with alias $ALIAS\"\n+        create_truststore \"$OAUTH_STORE\" \"$CERTS_STORE_PASSWORD\" \"$CRT\" \"$ALIAS\"\n+        INDEX+=1\n+      done\n+    fi\n+    echo \"Preparing store for ${BASH_REMATCH[1]} ${BASH_REMATCH[2]} listener is complete\"  \n+  fi\n+done\n \n echo \"Preparing truststore for clienttls listener\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c9468424df37910c3551cbbd431e13f8e703ed9"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc3NTk0Mw==", "bodyText": "Same as above.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3825#discussion_r505775943", "createdAt": "2020-10-15T19:06:16Z", "author": {"login": "scholzj"}, "path": "docker-images/kafka/scripts/kafka_tls_prepare_certificates.sh", "diffHunk": "@@ -96,54 +105,6 @@ for CRT in /opt/kafka/client-ca-certs/*.crt; do\n done\n echo \"Preparing truststore for clienttls listener is complete\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c9468424df37910c3551cbbd431e13f8e703ed9"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc3NjI5OQ==", "bodyText": "Should we improve this message instead of just printing the path? Or is that a debug left overs.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3825#discussion_r505776299", "createdAt": "2020-10-15T19:07:04Z", "author": {"login": "scholzj"}, "path": "docker-images/kafka/scripts/kafka_tls_prepare_certificates.sh", "diffHunk": "@@ -72,19 +72,28 @@ create_keystore /tmp/kafka/cluster.keystore.p12 \"$CERTS_STORE_PASSWORD\" \\\n     \"$HOSTNAME\"\n echo \"Preparing keystore for replication and clienttls listener is complete\"\n \n-CUSTOM_CERT_DIR=\"/opt/kafka/certificates/custom-tls-9093-certs\"\n-if [ -d \"$CUSTOM_CERT_DIR\" ]; then\n-    echo \"Preparing custom keystore for tls listener\"\n-    create_keystore_without_ca_file /tmp/kafka/custom-tls-9093.keystore.p12 \"$CERTS_STORE_PASSWORD\" \"${CUSTOM_CERT_DIR}/tls.crt\" \"${CUSTOM_CERT_DIR}/tls.key\" custom-key\n-    echo \"Preparing custom keystore for tls listener is complete\"\n-fi\n-\n-CUSTOM_CERT_DIR=\"/opt/kafka/certificates/custom-external-9094-certs\"\n-if [ -d \"$CUSTOM_CERT_DIR\" ]; then\n-    echo \"Preparing custom keystore for external listener\"\n-    create_keystore_without_ca_file /tmp/kafka/custom-external-9094.keystore.p12 \"$CERTS_STORE_PASSWORD\" \"${CUSTOM_CERT_DIR}/tls.crt\" \"${CUSTOM_CERT_DIR}/tls.key\" custom-key\n-    echo \"Preparing custom keystore for external listener is complete\"\n-fi\n+regex=\"^\\/opt\\/kafka\\/certificates\\/(custom|oauth)-([a-z0-9]{1,11})-([0-9]+)-certs$\"\n+for CERT_DIR in /opt/kafka/certificates/*; do\n+  if [[ $CERT_DIR =~ $regex ]]; then\n+    echo \"Preparing store for ${BASH_REMATCH[1]} ${BASH_REMATCH[2]} listener\"\n+    if [[ ${BASH_REMATCH[1]} == \"custom\"  ]]; then\n+      echo /tmp/kafka/\"${BASH_REMATCH[1]}\"-\"${BASH_REMATCH[2]}\"-\"${BASH_REMATCH[3]}\".keystore.p12", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c9468424df37910c3551cbbd431e13f8e703ed9"}, "originalPosition": 22}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74b07d041c5f9201516911766c291ad54fcfa401", "author": {"user": {"login": "ppatierno", "name": "Paolo Patierno"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/74b07d041c5f9201516911766c291ad54fcfa401", "committedDate": "2020-10-15T19:22:23Z", "message": "Fixed comments\n\nSigned-off-by: Paolo Patierno <ppatierno@live.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac00a225e820de22e711306f5b2e50e21e7d8f5d", "author": {"user": {"login": "ppatierno", "name": "Paolo Patierno"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/ac00a225e820de22e711306f5b2e50e21e7d8f5d", "committedDate": "2020-10-16T08:09:11Z", "message": "Fixed comments\n\nSigned-off-by: Paolo Patierno <ppatierno@live.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwMjkyODYy", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3825#pullrequestreview-510292862", "createdAt": "2020-10-16T09:13:38Z", "commit": {"oid": "ac00a225e820de22e711306f5b2e50e21e7d8f5d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwNjM1MTg4", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3825#pullrequestreview-510635188", "createdAt": "2020-10-16T16:42:42Z", "commit": {"oid": "ac00a225e820de22e711306f5b2e50e21e7d8f5d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 817, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}