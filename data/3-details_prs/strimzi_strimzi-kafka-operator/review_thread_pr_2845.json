{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0NTQxMzA4", "number": 2845, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNzoxMTo0NlrODymNww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNzoxMzo0OFrODymQgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MzgxNTA3OnYy", "diffSide": "RIGHT", "path": "systemtest/src/test/java/io/strimzi/systemtest/KafkaST.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNzoxMTo0NlrOGGvKZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNzoxMTo0NlrOGGvKZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTcxNzM0OA==", "bodyText": "I think we can remove this cast", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2845#discussion_r409717348", "createdAt": "2020-04-16T17:11:46Z", "author": {"login": "Frawless"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/KafkaST.java", "diffHunk": "@@ -124,10 +124,11 @@\n     @OpenShiftOnly\n     void testDeployKafkaClusterViaTemplate() {\n         cluster.createCustomResources(\"../examples/templates/cluster-operator\");\n-        String appName = \"strimzi-ephemeral\";\n+        String templateName = \"strimzi-ephemeral\";\n         Oc oc = (Oc) cmdKubeClient();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7777940a8c63d9a3e55e0f26c25e4364f4f7b555"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MzgyMjA5OnYy", "diffSide": "RIGHT", "path": "test/src/main/java/io/strimzi/test/k8s/cmdClient/BaseCmdKubeClient.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNzoxMzo0OFrOGGvO6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxODowMjo1NlrOGGxFwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTcxODUwNQ==", "bodyText": "why we cannot apply (instead of create) the created yaml content?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2845#discussion_r409718505", "createdAt": "2020-04-16T17:13:48Z", "author": {"login": "Frawless"}, "path": "test/src/main/java/io/strimzi/test/k8s/cmdClient/BaseCmdKubeClient.java", "diffHunk": "@@ -342,6 +351,18 @@ public String getResourceAsYaml(String resourceType, String resourceName) {\n         return Exec.exec(namespacedCommand(\"get\", resourceType, resourceName, \"-o\", \"yaml\")).out();\n     }\n \n+    @Override\n+    public void createResourceAndApply(String template, Map<String, String> params) {\n+        List<String> cmd = namespacedCommand(\"process\", template, \"-l\", \"app=\" + template, \"-o\", \"yaml\");\n+        for (Map.Entry<String, String> entry : params.entrySet()) {\n+            cmd.add(\"-p\");\n+            cmd.add(entry.getKey() + \"=\" + entry.getValue());\n+        }\n+\n+        String yaml = Exec.exec(cmd).out();\n+        createContent(yaml);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7777940a8c63d9a3e55e0f26c25e4364f4f7b555"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc0MzA3Ng==", "bodyText": "when I tried that with applyContent (because if you use only apply it needs file) I got really strange annotation that includes CR in JSON. I will try that again and I'll see.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2845#discussion_r409743076", "createdAt": "2020-04-16T17:53:30Z", "author": {"login": "im-konge"}, "path": "test/src/main/java/io/strimzi/test/k8s/cmdClient/BaseCmdKubeClient.java", "diffHunk": "@@ -342,6 +351,18 @@ public String getResourceAsYaml(String resourceType, String resourceName) {\n         return Exec.exec(namespacedCommand(\"get\", resourceType, resourceName, \"-o\", \"yaml\")).out();\n     }\n \n+    @Override\n+    public void createResourceAndApply(String template, Map<String, String> params) {\n+        List<String> cmd = namespacedCommand(\"process\", template, \"-l\", \"app=\" + template, \"-o\", \"yaml\");\n+        for (Map.Entry<String, String> entry : params.entrySet()) {\n+            cmd.add(\"-p\");\n+            cmd.add(entry.getKey() + \"=\" + entry.getValue());\n+        }\n+\n+        String yaml = Exec.exec(cmd).out();\n+        createContent(yaml);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTcxODUwNQ=="}, "originalCommit": {"oid": "7777940a8c63d9a3e55e0f26c25e4364f4f7b555"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc0ODkyOA==", "bodyText": "I tried that right now and it seems to work, so thank you for nit :)", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2845#discussion_r409748928", "createdAt": "2020-04-16T18:02:56Z", "author": {"login": "im-konge"}, "path": "test/src/main/java/io/strimzi/test/k8s/cmdClient/BaseCmdKubeClient.java", "diffHunk": "@@ -342,6 +351,18 @@ public String getResourceAsYaml(String resourceType, String resourceName) {\n         return Exec.exec(namespacedCommand(\"get\", resourceType, resourceName, \"-o\", \"yaml\")).out();\n     }\n \n+    @Override\n+    public void createResourceAndApply(String template, Map<String, String> params) {\n+        List<String> cmd = namespacedCommand(\"process\", template, \"-l\", \"app=\" + template, \"-o\", \"yaml\");\n+        for (Map.Entry<String, String> entry : params.entrySet()) {\n+            cmd.add(\"-p\");\n+            cmd.add(entry.getKey() + \"=\" + entry.getValue());\n+        }\n+\n+        String yaml = Exec.exec(cmd).out();\n+        createContent(yaml);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTcxODUwNQ=="}, "originalCommit": {"oid": "7777940a8c63d9a3e55e0f26c25e4364f4f7b555"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 173, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}