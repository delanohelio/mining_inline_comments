{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzODY4MzM2", "number": 3106, "title": "[MO] - [system test] - cruise control kafka rebalance resource", "bodyText": "Type of change\nSelect the type of your PR\n\nEnhancement / new feature\n\nDescription\nThis PR adding a test case for the KafkaRebalance resource. Moreover, new KafkaRebalanceResource and also KafkaRebalanceUtils.\nChecklist\n\n Write tests\n Make sure all tests pass", "createdAt": "2020-05-27T13:53:28Z", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3106", "merged": true, "mergeCommit": {"oid": "bdadb82d22e8c54e9cd96b21720b2783a98d1c90"}, "closed": true, "closedAt": "2020-06-10T18:45:30Z", "author": {"login": "see-quick"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnvzosABqjM0MDQwMDU2NzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcpzmEZgFqTQyNzc0MjIyMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b95a65d5d6d82662e4b685c079d61fa698f72e23", "author": {"user": {"login": "see-quick", "name": "Ors\u00e1k Maro\u0161"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/b95a65d5d6d82662e4b685c079d61fa698f72e23", "committedDate": "2020-05-27T13:51:23Z", "message": "[MO] - [system test] -> cruise control rebalance resource\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>"}, "afterCommit": {"oid": "4459d855eaf906cbd798d836bd59cb7c7a1b3425", "author": {"user": {"login": "see-quick", "name": "Ors\u00e1k Maro\u0161"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/4459d855eaf906cbd798d836bd59cb7c7a1b3425", "committedDate": "2020-06-03T20:50:24Z", "message": "[MO] - [system test] -> cruise control rebalance resource\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4459d855eaf906cbd798d836bd59cb7c7a1b3425", "author": {"user": {"login": "see-quick", "name": "Ors\u00e1k Maro\u0161"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/4459d855eaf906cbd798d836bd59cb7c7a1b3425", "committedDate": "2020-06-03T20:50:24Z", "message": "[MO] - [system test] -> cruise control rebalance resource\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>"}, "afterCommit": {"oid": "76f71951ec5787cdf3a438c16e96431f4e006c66", "author": {"user": {"login": "see-quick", "name": "Ors\u00e1k Maro\u0161"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/76f71951ec5787cdf3a438c16e96431f4e006c66", "committedDate": "2020-06-03T21:03:50Z", "message": "[MO] - [system test] -> cruise control rebalance resource\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "19cb1f8c34b54190d10d615b3199d8b7de0e9ae0", "author": {"user": {"login": "see-quick", "name": "Ors\u00e1k Maro\u0161"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/19cb1f8c34b54190d10d615b3199d8b7de0e9ae0", "committedDate": "2020-06-08T15:32:10Z", "message": "[MO] - [system test] -> cruise control rebalance resource\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40a1c2897481a3c38408b906bebfa0b3dff80ad0", "author": {"user": {"login": "see-quick", "name": "Ors\u00e1k Maro\u0161"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/40a1c2897481a3c38408b906bebfa0b3dff80ad0", "committedDate": "2020-06-08T15:32:10Z", "message": "[MO] - update\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94fc4984bc4393b2ea154ad80d6c3fdd4184b251", "author": {"user": {"login": "see-quick", "name": "Ors\u00e1k Maro\u0161"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/94fc4984bc4393b2ea154ad80d6c3fdd4184b251", "committedDate": "2020-06-08T15:32:10Z", "message": "update\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5af1952d8674c522b0be2f5cbd594dfeb269dff3", "author": {"user": {"login": "see-quick", "name": "Ors\u00e1k Maro\u0161"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/5af1952d8674c522b0be2f5cbd594dfeb269dff3", "committedDate": "2020-06-08T13:38:54Z", "message": "update\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>"}, "afterCommit": {"oid": "94fc4984bc4393b2ea154ad80d6c3fdd4184b251", "author": {"user": {"login": "see-quick", "name": "Ors\u00e1k Maro\u0161"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/94fc4984bc4393b2ea154ad80d6c3fdd4184b251", "committedDate": "2020-06-08T15:32:10Z", "message": "update\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d3b83063bb559b069557a79709086b33efecb71", "author": {"user": {"login": "see-quick", "name": "Ors\u00e1k Maro\u0161"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/4d3b83063bb559b069557a79709086b33efecb71", "committedDate": "2020-06-08T19:12:55Z", "message": "fix\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b15d9eaf3e3c82a51b1f1ea0949a7d1307fe74b", "author": {"user": {"login": "see-quick", "name": "Ors\u00e1k Maro\u0161"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/5b15d9eaf3e3c82a51b1f1ea0949a7d1307fe74b", "committedDate": "2020-06-09T07:10:32Z", "message": "fix\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2ODQ5OTM2", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3106#pullrequestreview-426849936", "createdAt": "2020-06-09T07:15:22Z", "commit": {"oid": "5b15d9eaf3e3c82a51b1f1ea0949a7d1307fe74b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwNzoxNToyMlrOGg7vGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwNzoxNToyMlrOGg7vGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE4NjMyOQ==", "bodyText": "you are missing Stopped", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3106#discussion_r437186329", "createdAt": "2020-06-09T07:15:22Z", "author": {"login": "ppatierno"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/kafkaUtils/KafkaRebalanceUtils.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright Strimzi authors.\n+ * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n+ */\n+package io.strimzi.systemtest.utils.kafkaUtils;\n+\n+import io.strimzi.systemtest.Constants;\n+import io.strimzi.systemtest.resources.crd.KafkaRebalanceResource;\n+import io.strimzi.test.TestUtils;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import static io.strimzi.test.k8s.KubeClusterResource.kubeClient;\n+\n+public class KafkaRebalanceUtils {\n+\n+    private static final Logger LOGGER = LogManager.getLogger(KafkaRebalanceUtils.class);\n+\n+    private KafkaRebalanceUtils() {}\n+\n+    public enum KafkaRebalanceState {\n+        PendingProposal,\n+        ProposalReady,\n+        Rebalancing,\n+        Ready,\n+        NotReady", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b15d9eaf3e3c82a51b1f1ea0949a7d1307fe74b"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77d094990b514b3c1aa5a196a8bcf4a49e17517e", "author": {"user": {"login": "see-quick", "name": "Ors\u00e1k Maro\u0161"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/77d094990b514b3c1aa5a196a8bcf4a49e17517e", "committedDate": "2020-06-09T08:32:30Z", "message": "update\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2OTY3MDk4", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3106#pullrequestreview-426967098", "createdAt": "2020-06-09T09:38:26Z", "commit": {"oid": "77d094990b514b3c1aa5a196a8bcf4a49e17517e"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwOTozODoyNlrOGhBVow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwOTo0MjoyN1rOGhBfBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI3ODExNQ==", "bodyText": "I saw a lot of line with this kinda useless log, do we really need it?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3106#discussion_r437278115", "createdAt": "2020-06-09T09:38:26Z", "author": {"login": "Frawless"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/kafkaUtils/KafkaRebalanceUtils.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright Strimzi authors.\n+ * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n+ */\n+package io.strimzi.systemtest.utils.kafkaUtils;\n+\n+import io.strimzi.systemtest.Constants;\n+import io.strimzi.systemtest.resources.crd.KafkaRebalanceResource;\n+import io.strimzi.test.TestUtils;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import static io.strimzi.test.k8s.KubeClusterResource.kubeClient;\n+\n+public class KafkaRebalanceUtils {\n+\n+    private static final Logger LOGGER = LogManager.getLogger(KafkaRebalanceUtils.class);\n+\n+    private KafkaRebalanceUtils() {}\n+\n+    public enum KafkaRebalanceState {\n+        PendingProposal,\n+        ProposalReady,\n+        Rebalancing,\n+        Ready,\n+        NotReady,\n+        Stopped\n+    }\n+\n+    public static void waitForKafkaRebalanceCustomResourceState(String resourceName, KafkaRebalanceState state) {\n+        LOGGER.info(\"Waiting for KafkaRebalance will be in the {}\", state);\n+\n+        TestUtils.waitFor(\"Waiting for KafkaRebalance will be in the \" + state.name(), Constants.POLL_INTERVAL_FOR_RESOURCE_READINESS, Constants.TIMEOUT_FOR_RESOURCE_READINESS,\n+            () -> {\n+                LOGGER.info(\"Comparing: \" + KafkaRebalanceResource.kafkaRebalanceClient().inNamespace(kubeClient().getNamespace())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77d094990b514b3c1aa5a196a8bcf4a49e17517e"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI3ODc3Mw==", "bodyText": "waiting string is already in waitFor", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3106#discussion_r437278773", "createdAt": "2020-06-09T09:39:33Z", "author": {"login": "Frawless"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/kafkaUtils/KafkaRebalanceUtils.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright Strimzi authors.\n+ * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n+ */\n+package io.strimzi.systemtest.utils.kafkaUtils;\n+\n+import io.strimzi.systemtest.Constants;\n+import io.strimzi.systemtest.resources.crd.KafkaRebalanceResource;\n+import io.strimzi.test.TestUtils;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import static io.strimzi.test.k8s.KubeClusterResource.kubeClient;\n+\n+public class KafkaRebalanceUtils {\n+\n+    private static final Logger LOGGER = LogManager.getLogger(KafkaRebalanceUtils.class);\n+\n+    private KafkaRebalanceUtils() {}\n+\n+    public enum KafkaRebalanceState {\n+        PendingProposal,\n+        ProposalReady,\n+        Rebalancing,\n+        Ready,\n+        NotReady,\n+        Stopped\n+    }\n+\n+    public static void waitForKafkaRebalanceCustomResourceState(String resourceName, KafkaRebalanceState state) {\n+        LOGGER.info(\"Waiting for KafkaRebalance will be in the {}\", state);\n+\n+        TestUtils.waitFor(\"Waiting for KafkaRebalance will be in the \" + state.name(), Constants.POLL_INTERVAL_FOR_RESOURCE_READINESS, Constants.TIMEOUT_FOR_RESOURCE_READINESS,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77d094990b514b3c1aa5a196a8bcf4a49e17517e"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI4MDExNQ==", "bodyText": "Why you didn't use ResourceManager.waitForResourceStatus() ?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3106#discussion_r437280115", "createdAt": "2020-06-09T09:41:46Z", "author": {"login": "Frawless"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/kafkaUtils/KafkaRebalanceUtils.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright Strimzi authors.\n+ * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n+ */\n+package io.strimzi.systemtest.utils.kafkaUtils;\n+\n+import io.strimzi.systemtest.Constants;\n+import io.strimzi.systemtest.resources.crd.KafkaRebalanceResource;\n+import io.strimzi.test.TestUtils;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import static io.strimzi.test.k8s.KubeClusterResource.kubeClient;\n+\n+public class KafkaRebalanceUtils {\n+\n+    private static final Logger LOGGER = LogManager.getLogger(KafkaRebalanceUtils.class);\n+\n+    private KafkaRebalanceUtils() {}\n+\n+    public enum KafkaRebalanceState {\n+        PendingProposal,\n+        ProposalReady,\n+        Rebalancing,\n+        Ready,\n+        NotReady,\n+        Stopped\n+    }\n+\n+    public static void waitForKafkaRebalanceCustomResourceState(String resourceName, KafkaRebalanceState state) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77d094990b514b3c1aa5a196a8bcf4a49e17517e"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI4MDUxNw==", "bodyText": "ResourceManager.logCurrentResourceStatus() is not suitable here?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3106#discussion_r437280517", "createdAt": "2020-06-09T09:42:27Z", "author": {"login": "Frawless"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/kafkaUtils/KafkaRebalanceUtils.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright Strimzi authors.\n+ * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n+ */\n+package io.strimzi.systemtest.utils.kafkaUtils;\n+\n+import io.strimzi.systemtest.Constants;\n+import io.strimzi.systemtest.resources.crd.KafkaRebalanceResource;\n+import io.strimzi.test.TestUtils;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import static io.strimzi.test.k8s.KubeClusterResource.kubeClient;\n+\n+public class KafkaRebalanceUtils {\n+\n+    private static final Logger LOGGER = LogManager.getLogger(KafkaRebalanceUtils.class);\n+\n+    private KafkaRebalanceUtils() {}\n+\n+    public enum KafkaRebalanceState {\n+        PendingProposal,\n+        ProposalReady,\n+        Rebalancing,\n+        Ready,\n+        NotReady,\n+        Stopped\n+    }\n+\n+    public static void waitForKafkaRebalanceCustomResourceState(String resourceName, KafkaRebalanceState state) {\n+        LOGGER.info(\"Waiting for KafkaRebalance will be in the {}\", state);\n+\n+        TestUtils.waitFor(\"Waiting for KafkaRebalance will be in the \" + state.name(), Constants.POLL_INTERVAL_FOR_RESOURCE_READINESS, Constants.TIMEOUT_FOR_RESOURCE_READINESS,\n+            () -> {\n+                LOGGER.info(\"Comparing: \" + KafkaRebalanceResource.kafkaRebalanceClient().inNamespace(kubeClient().getNamespace())\n+                    .withName(resourceName).get().getStatus().getConditions().get(0).getStatus() + \" - \" + state.name());\n+                return KafkaRebalanceResource.kafkaRebalanceClient().inNamespace(kubeClient().getNamespace())\n+                    .withName(resourceName).get().getStatus().getConditions().get(0).getStatus().equals(state.name());\n+            },\n+            () -> LOGGER.info(KafkaRebalanceResource.kafkaRebalanceClient().inNamespace(kubeClient().getNamespace()).withName(resourceName).get())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77d094990b514b3c1aa5a196a8bcf4a49e17517e"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5489f821a8fbf11dc73d9b0e487593ad87020c2b", "author": {"user": {"login": "see-quick", "name": "Ors\u00e1k Maro\u0161"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/5489f821a8fbf11dc73d9b0e487593ad87020c2b", "committedDate": "2020-06-09T09:54:49Z", "message": "[MO] - commends\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6356e72da6f28c8e717edc793fdcfe52a4f37d7", "author": {"user": {"login": "see-quick", "name": "Ors\u00e1k Maro\u0161"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/d6356e72da6f28c8e717edc793fdcfe52a4f37d7", "committedDate": "2020-06-09T10:01:55Z", "message": "updarte\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3MTk2NTUz", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3106#pullrequestreview-427196553", "createdAt": "2020-06-09T14:15:37Z", "commit": {"oid": "d6356e72da6f28c8e717edc793fdcfe52a4f37d7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3MjEyNTA5", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3106#pullrequestreview-427212509", "createdAt": "2020-06-09T14:30:48Z", "commit": {"oid": "d6356e72da6f28c8e717edc793fdcfe52a4f37d7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3NzQyMjIx", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3106#pullrequestreview-427742221", "createdAt": "2020-06-10T06:23:43Z", "commit": {"oid": "d6356e72da6f28c8e717edc793fdcfe52a4f37d7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1438, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}