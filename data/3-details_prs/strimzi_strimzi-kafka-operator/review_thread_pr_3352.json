{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0NTk1NzY0", "number": 3352, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwODowMjoxMFrOEQ73LQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwODo1OToxN1rOEQ9NDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MTkzNDUzOnYy", "diffSide": "RIGHT", "path": "systemtest/src/main/java/io/strimzi/systemtest/Constants.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwODowMjoxMFrOG1XReg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwODozODo0MFrOG1YlvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYwOTAxOA==", "bodyText": "Why these all variables are not final Strings/long/..?\nAre they ever going to change?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3352#discussion_r458609018", "createdAt": "2020-07-22T08:02:10Z", "author": {"login": "michalxo"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/Constants.java", "diffHunk": "@@ -106,6 +104,7 @@\n     String KAFKA_EXPORTER_DEPLOYMENT = \"KafkaWithExporter\";\n     String KAFKA_CRUISE_CONTROL_DEPLOYMENT = \"KafkaWithCruiseControl\";\n     String STATEFUL_SET = \"StatefulSet\";\n+    String POD = \"Pod\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "639ba5e8f707d0d05d71560ae5549d84dce36904"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYxMDAzOQ==", "bodyText": "This is in public interface class and if you add final it's just redundant.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3352#discussion_r458610039", "createdAt": "2020-07-22T08:04:03Z", "author": {"login": "im-konge"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/Constants.java", "diffHunk": "@@ -106,6 +104,7 @@\n     String KAFKA_EXPORTER_DEPLOYMENT = \"KafkaWithExporter\";\n     String KAFKA_CRUISE_CONTROL_DEPLOYMENT = \"KafkaWithCruiseControl\";\n     String STATEFUL_SET = \"StatefulSet\";\n+    String POD = \"Pod\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYwOTAxOA=="}, "originalCommit": {"oid": "639ba5e8f707d0d05d71560ae5549d84dce36904"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYxMTI4Mg==", "bodyText": "You cannot modify them, that's what interface do. You don't need to write final ... everywhere when you want a constants class -> so you do it this way. Is this right @Frawless?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3352#discussion_r458611282", "createdAt": "2020-07-22T08:06:16Z", "author": {"login": "im-konge"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/Constants.java", "diffHunk": "@@ -106,6 +104,7 @@\n     String KAFKA_EXPORTER_DEPLOYMENT = \"KafkaWithExporter\";\n     String KAFKA_CRUISE_CONTROL_DEPLOYMENT = \"KafkaWithCruiseControl\";\n     String STATEFUL_SET = \"StatefulSet\";\n+    String POD = \"Pod\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYwOTAxOA=="}, "originalCommit": {"oid": "639ba5e8f707d0d05d71560ae5549d84dce36904"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYxMTI4OQ==", "bodyText": "Cool, I did not know that. Just googled it. Thanks! It's static and final by default.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3352#discussion_r458611289", "createdAt": "2020-07-22T08:06:17Z", "author": {"login": "michalxo"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/Constants.java", "diffHunk": "@@ -106,6 +104,7 @@\n     String KAFKA_EXPORTER_DEPLOYMENT = \"KafkaWithExporter\";\n     String KAFKA_CRUISE_CONTROL_DEPLOYMENT = \"KafkaWithCruiseControl\";\n     String STATEFUL_SET = \"StatefulSet\";\n+    String POD = \"Pod\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYwOTAxOA=="}, "originalCommit": {"oid": "639ba5e8f707d0d05d71560ae5549d84dce36904"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYxNDI4NQ==", "bodyText": "It is because Java Interfaces are static classes and OFC cannot be instantiated. Static because at the runtime the value of the variable must be assigned in a context where instance does not exist. Final, because the value assigned to the interface variable is a constant that cannot be re-assigned by program code.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3352#discussion_r458614285", "createdAt": "2020-07-22T08:11:33Z", "author": {"login": "see-quick"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/Constants.java", "diffHunk": "@@ -106,6 +104,7 @@\n     String KAFKA_EXPORTER_DEPLOYMENT = \"KafkaWithExporter\";\n     String KAFKA_CRUISE_CONTROL_DEPLOYMENT = \"KafkaWithCruiseControl\";\n     String STATEFUL_SET = \"StatefulSet\";\n+    String POD = \"Pod\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYwOTAxOA=="}, "originalCommit": {"oid": "639ba5e8f707d0d05d71560ae5549d84dce36904"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYzMDU4OA==", "bodyText": "Thanks @see-quick, as always you described it better.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3352#discussion_r458630588", "createdAt": "2020-07-22T08:38:40Z", "author": {"login": "im-konge"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/Constants.java", "diffHunk": "@@ -106,6 +104,7 @@\n     String KAFKA_EXPORTER_DEPLOYMENT = \"KafkaWithExporter\";\n     String KAFKA_CRUISE_CONTROL_DEPLOYMENT = \"KafkaWithCruiseControl\";\n     String STATEFUL_SET = \"StatefulSet\";\n+    String POD = \"Pod\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYwOTAxOA=="}, "originalCommit": {"oid": "639ba5e8f707d0d05d71560ae5549d84dce36904"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MjE1NDM4OnYy", "diffSide": "RIGHT", "path": "systemtest/src/main/java/io/strimzi/systemtest/resources/ResourceOperation.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwODo1OToxN1rOG1ZXgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwOTowMTo0OVrOG1Zdlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY0MzMyOA==", "bodyText": "This was changed to a not get before as this is more of a compute than a get.", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3352#discussion_r458643328", "createdAt": "2020-07-22T08:59:17Z", "author": {"login": "samuel-hawker"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/resources/ResourceOperation.java", "diffHunk": "@@ -64,10 +64,35 @@ public static long getTimeoutForKafkaRebalanceState(KafkaRebalanceState state) {\n     }\n \n     /**\n-     * timeoutForPodsOperation returns a reasonable timeout in milliseconds for a number of pods in a quorum to roll on update,\n+     * getTimeoutForPodsOperation returns a reasonable timeout in milliseconds for a number of pods in a quorum to roll on update,\n      *  scale up or create\n      */\n-    public static long timeoutForPodsOperation(int numberOfPods) {\n+    public static long getTimeoutForPodsOperation(int numberOfPods) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "639ba5e8f707d0d05d71560ae5549d84dce36904"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY0NDg4Ng==", "bodyText": "Yeah, sorry, I forgot this :D", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3352#discussion_r458644886", "createdAt": "2020-07-22T09:01:49Z", "author": {"login": "im-konge"}, "path": "systemtest/src/main/java/io/strimzi/systemtest/resources/ResourceOperation.java", "diffHunk": "@@ -64,10 +64,35 @@ public static long getTimeoutForKafkaRebalanceState(KafkaRebalanceState state) {\n     }\n \n     /**\n-     * timeoutForPodsOperation returns a reasonable timeout in milliseconds for a number of pods in a quorum to roll on update,\n+     * getTimeoutForPodsOperation returns a reasonable timeout in milliseconds for a number of pods in a quorum to roll on update,\n      *  scale up or create\n      */\n-    public static long timeoutForPodsOperation(int numberOfPods) {\n+    public static long getTimeoutForPodsOperation(int numberOfPods) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY0MzMyOA=="}, "originalCommit": {"oid": "639ba5e8f707d0d05d71560ae5549d84dce36904"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1492, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}