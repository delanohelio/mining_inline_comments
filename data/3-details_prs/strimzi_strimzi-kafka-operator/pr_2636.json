{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzMDI1MDY1", "number": 2636, "title": "ST: Improve mirror-maker-2 tests", "bodyText": "Type of change\n\nEnhancement / new feature\n\nDescription\nThis PR covers some additional use cases of mm2:\n\nCheck if topics are replicated with all configuration\nCheck if mm2 can change target topic config when source topic change\nCheck if whitelist/blacklist for topic names are working properly\nMM2 status tests\n\nChecklist\n\n Make sure all tests pass", "createdAt": "2020-03-03T15:43:00Z", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2636", "merged": true, "mergeCommit": {"oid": "6170f9867273d3425b07b3cd0c3d92fd7917991d"}, "closed": true, "closedAt": "2020-03-04T15:23:48Z", "author": {"login": "Frawless"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcKBWMIAH2gAyMzgzMDI1MDY1OmU5ZmJjNDZjYWUxMjYzODg1Y2JhYzExY2UzYTE0ZjZkZTliYzFkM2Q=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcKXibogFqTM2ODgwNzI3Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e9fbc46cae1263885cbac11ce3a14f6de9bc1d3d", "author": {"user": {"login": "Frawless", "name": "Jakub Stejskal"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/e9fbc46cae1263885cbac11ce3a14f6de9bc1d3d", "committedDate": "2020-03-03T12:19:28Z", "message": "Improve mm2 tests\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b74c05cc60713f019a5f5ab0138957846e4c48a9", "author": {"user": {"login": "Frawless", "name": "Jakub Stejskal"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/b74c05cc60713f019a5f5ab0138957846e4c48a9", "committedDate": "2020-03-03T12:47:39Z", "message": "User method from mm2 utils\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f37a09a1372ba8cbf29f442f43ed0645f01175a", "author": {"user": {"login": "Frawless", "name": "Jakub Stejskal"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/8f37a09a1372ba8cbf29f442f43ed0645f01175a", "committedDate": "2020-03-03T15:40:13Z", "message": "Add some status tests\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "899fbf42f897a04b1b22663c45997fb2f6c83376", "author": {"user": {"login": "Frawless", "name": "Jakub Stejskal"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/899fbf42f897a04b1b22663c45997fb2f6c83376", "committedDate": "2020-03-03T17:39:38Z", "message": "fixup! Add some status tests\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4645a3d58b01cc2a7f90506bdbe305ca3b58e8ec", "author": {"user": {"login": "Frawless", "name": "Jakub Stejskal"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/4645a3d58b01cc2a7f90506bdbe305ca3b58e8ec", "committedDate": "2020-03-03T18:21:11Z", "message": "fixup! fixup! Add some status tests\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4MjczNDgy", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2636#pullrequestreview-368273482", "createdAt": "2020-03-03T19:47:12Z", "commit": {"oid": "4645a3d58b01cc2a7f90506bdbe305ca3b58e8ec"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxOTo0NzoxM1rOFxUElw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxOTo0NzoxM1rOFxUElw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI1MzM5OQ==", "bodyText": "You are not exactly generous. Are you sure this will be stable?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2636#discussion_r387253399", "createdAt": "2020-03-03T19:47:13Z", "author": {"login": "scholzj"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/CustomResourceStatusST.java", "diffHunk": "@@ -303,6 +311,39 @@ void testKafkaStatusCertificate() {\n         assertThat(secretCerts, is(certs));\n     }\n \n+    @Test\n+    void testKafkaMirrorMaker2Status() {\n+        String mm2Url = KafkaMirrorMaker2Resources.url(CLUSTER_NAME, NAMESPACE, 8083);\n+        String targetClusterName = \"target-cluster\";\n+        KafkaResource.kafkaEphemeral(targetClusterName, 1, 1).done();\n+        KafkaMirrorMaker2Resource.kafkaMirrorMaker2(CLUSTER_NAME, CLUSTER_NAME, targetClusterName, 1, false).done();\n+        KafkaMirrorMaker2Utils.waitUntilKafkaMirrorMaker2Status(CLUSTER_NAME, \"Ready\");\n+        assertKafkaMirrorMaker2Status(1, mm2Url);\n+\n+        // Corrupt Mirror Maker pods\n+        KafkaMirrorMaker2Resource.replaceKafkaMirrorMaker2Resource(CLUSTER_NAME, mm2 -> mm2.getSpec().setResources(new ResourceRequirementsBuilder()\n+                .addToRequests(\"cpu\", new Quantity(\"100000000m\"))\n+                .build()));\n+        KafkaMirrorMaker2Utils.waitUntilKafkaMirrorMaker2Status(CLUSTER_NAME, \"NotReady\");\n+        // Restore Mirror Maker pod\n+        KafkaMirrorMaker2Resource.replaceKafkaMirrorMaker2Resource(CLUSTER_NAME, mm2 -> mm2.getSpec().setResources(new ResourceRequirementsBuilder()\n+                .addToRequests(\"cpu\", new Quantity(\"10m\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4645a3d58b01cc2a7f90506bdbe305ca3b58e8ec"}, "originalPosition": 88}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4MzE0Mzgy", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2636#pullrequestreview-368314382", "createdAt": "2020-03-03T20:51:16Z", "commit": {"oid": "4645a3d58b01cc2a7f90506bdbe305ca3b58e8ec"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMDo1MToxN1rOFxWDCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMDo1MTozOFrOFxWDyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI4NTc3MA==", "bodyText": "shouldn't it be \"-target-\"?", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2636#discussion_r387285770", "createdAt": "2020-03-03T20:51:17Z", "author": {"login": "ppatierno"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/MirrorMaker2ST.java", "diffHunk": "@@ -56,7 +59,10 @@\n     private String kafkaClusterTargetName = CLUSTER_NAME + \"-target\";\n \n     @Test\n-    void testMirrorMaker2() throws Exception {\n+    void testMirrorMaker2() {\n+        String availabilityTopicSourceName = \"availability-topic-source-\" + rng.nextInt(Integer.MAX_VALUE);\n+        String availabilityTopicTargetName = \"availability-topic-source-\" + rng.nextInt(Integer.MAX_VALUE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4645a3d58b01cc2a7f90506bdbe305ca3b58e8ec"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI4NTg1Mg==", "bodyText": "ditto as above", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2636#discussion_r387285852", "createdAt": "2020-03-03T20:51:28Z", "author": {"login": "ppatierno"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/MirrorMaker2ST.java", "diffHunk": "@@ -123,14 +130,31 @@ void testMirrorMaker2() throws Exception {\n             sent,\n             internalKafkaClient.receiveMessages(topicTargetName, NAMESPACE, kafkaClusterTargetName, messagesCount, CONSUMER_GROUP_NAME)\n         );\n+\n+        // Check that mm2 mirror automatically created topic\n+        internalKafkaClient.checkProducedAndConsumedMessages(\n+            messagesCount,\n+            internalKafkaClient.receiveMessages(topicSourceNameMirrored, NAMESPACE, kafkaClusterTargetName, messagesCount, CONSUMER_GROUP_NAME)\n+        );\n+\n+        KafkaTopic mirroredTopic = KafkaTopicResource.kafkaTopicClient().inNamespace(NAMESPACE).withName(topicTargetName).get();\n+        assertThat(mirroredTopic.getSpec().getPartitions(), is(3));\n+        assertThat(mirroredTopic.getMetadata().getLabels().get(Labels.STRIMZI_CLUSTER_LABEL), is(kafkaClusterTargetName));\n+\n+        // Replace source topic resource with new data and check that mm2 update target topi\n+        KafkaTopicResource.replaceTopicResource(topicSourceName, kt -> kt.getSpec().setPartitions(8));\n+        KafkaTopicUtils.waitForKafkaTopicPartitionChange(topicTargetName, 8);\n     }\n \n     /**\n      * Test mirroring messages by MirrorMaker 2.0 over tls transport using mutual tls auth\n      */\n     @Test\n     @Tag(ACCEPTANCE)\n-    void testMirrorMaker2TlsAndTlsClientAuth() throws Exception {\n+    void testMirrorMaker2TlsAndTlsClientAuth() {\n+        String availabilityTopicSourceName = \"availability-topic-source-\" + rng.nextInt(Integer.MAX_VALUE);\n+        String availabilityTopicTargetName = \"availability-topic-source-\" + rng.nextInt(Integer.MAX_VALUE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4645a3d58b01cc2a7f90506bdbe305ca3b58e8ec"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI4NTk2MA==", "bodyText": "ditto as above", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2636#discussion_r387285960", "createdAt": "2020-03-03T20:51:38Z", "author": {"login": "ppatierno"}, "path": "systemtest/src/test/java/io/strimzi/systemtest/MirrorMaker2ST.java", "diffHunk": "@@ -251,29 +278,23 @@ void testMirrorMaker2TlsAndTlsClientAuth() throws Exception {\n             sent,\n                 internalKafkaClient.receiveMessagesTls(topicTargetName, NAMESPACE, kafkaClusterTargetName, userTarget.getMetadata().getName(), messagesCount, \"TLS\", CONSUMER_GROUP_NAME)\n         );\n-    }\n \n-    private void testDockerImagesForKafkaMirrorMaker2() {\n-        LOGGER.info(\"Verifying docker image names\");\n-        Map<String, String> imgFromDeplConf = getImagesFromConfig();\n-        //Verifying docker image for kafka mirrormaker2\n-        String mirrormaker2ImageName = PodUtils.getFirstContainerImageNameFromPod(kubeClient().listPods(Labels.STRIMZI_KIND_LABEL, \"KafkaMirrorMaker2\").\n-                get(0).getMetadata().getName());\n+        KafkaTopic mirroredTopic = KafkaTopicResource.kafkaTopicClient().inNamespace(NAMESPACE).withName(topicTargetName).get();\n+        assertThat(mirroredTopic.getSpec().getPartitions(), is(3));\n+        assertThat(mirroredTopic.getMetadata().getLabels().get(Labels.STRIMZI_CLUSTER_LABEL), is(kafkaClusterTargetName));\n \n-        String mirrormaker2Version = Crds.kafkaMirrorMaker2Operation(kubeClient().getClient()).inNamespace(NAMESPACE).withName(CLUSTER_NAME).get().getSpec().getVersion();\n-        if (mirrormaker2Version == null) {\n-            mirrormaker2Version = Environment.ST_KAFKA_VERSION;\n-        }\n-\n-        assertThat(TestUtils.parseImageMap(imgFromDeplConf.get(KAFKA_MIRROR_MAKER_2_IMAGE_MAP)).get(mirrormaker2Version), is(mirrormaker2ImageName));\n-        LOGGER.info(\"Docker images verified\");\n+        mirroredTopic = KafkaTopicResource.kafkaTopicClient().inNamespace(NAMESPACE).withName(topicSourceNameMirrored).get();\n+        assertThat(mirroredTopic, nullValue());\n     }\n \n     /**\n      * Test mirroring messages by MirrorMaker 2.0 over tls transport using scram-sha-512 auth\n      */\n     @Test\n-    void testMirrorMaker2TlsAndScramSha512Auth() throws Exception {\n+    void testMirrorMaker2TlsAndScramSha512Auth() {\n+        String availabilityTopicSourceName = \"availability-topic-source-\" + rng.nextInt(Integer.MAX_VALUE);\n+        String availabilityTopicTargetName = \"availability-topic-source-\" + rng.nextInt(Integer.MAX_VALUE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4645a3d58b01cc2a7f90506bdbe305ca3b58e8ec"}, "originalPosition": 174}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7855c606b0490b186c90763e7d589022a6dc73e5", "author": {"user": {"login": "Frawless", "name": "Jakub Stejskal"}}, "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/7855c606b0490b186c90763e7d589022a6dc73e5", "committedDate": "2020-03-04T12:07:56Z", "message": "Fixes after comments\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4ODA3Mjcz", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2636#pullrequestreview-368807273", "createdAt": "2020-03-04T14:10:45Z", "commit": {"oid": "7855c606b0490b186c90763e7d589022a6dc73e5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1746, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}