{"pr_number": 1196, "pr_title": "sourceColumn", "pr_createdAt": "2020-02-19T23:50:52Z", "pr_url": "https://github.com/yahoo/elide/pull/1196", "timeline": [{"oid": "9b469996a49fc73a9bb213bac09193b8a4f6cdd4", "url": "https://github.com/yahoo/elide/commit/9b469996a49fc73a9bb213bac09193b8a4f6cdd4", "message": "sourceColumn", "committedDate": "2020-02-19T23:48:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1NDk2NQ==", "url": "https://github.com/yahoo/elide/pull/1196#discussion_r382054965", "bodyText": "I wonder if this could be implemented as a mixin so we don't have to duplicate this code.", "author": "aklish", "createdAt": "2020-02-20T15:01:54Z", "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/queryengines/sql/metadata/SQLTimeDimension.java", "diffHunk": "@@ -40,5 +44,17 @@ public SQLTimeDimension(Table table, String fieldName, EntityDictionary dictiona\n             this.reference = generateColumnReference(path, dictionary);\n             this.joinPath = path;\n         }\n+\n+        this.metadataDictionary = dictionary;\n+    }\n+\n+    @Override\n+    public Pair<String, String> getSourceTableAndColumn() {", "originalCommit": "9b469996a49fc73a9bb213bac09193b8a4f6cdd4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjEwNDg3Mw==", "url": "https://github.com/yahoo/elide/pull/1196#discussion_r382104873", "bodyText": "I'm not a huge fan of Pair as a function result.  Another option - not sure which one I like better yet.  We could override getSourceColumn.\nRather than a two pass building phase, getSourceColumn can lazy initialize:\n    Column getSourceColumn() {\n        if (joinColumn == null || sourceColumn != null) {\n            return sourceColumn;\n        }\n\n        sourceColumn = getJoinPath()....  //Do lookup logic here\n        return sourceColumn;\n    }", "author": "aklish", "createdAt": "2020-02-20T16:16:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1NDk2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI2OTM5OA==", "url": "https://github.com/yahoo/elide/pull/1196#discussion_r382269398", "bodyText": "Currently the JoinTo concept is only in SQLQueryEngine, so that joinColumn doesn't exist in the common aggregation data store. I think we don't have to avoid two pass building phase now.", "author": "hellohanchen", "createdAt": "2020-02-20T21:32:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1NDk2NQ=="}], "type": "inlineReview"}, {"oid": "a0f481646a50edd5f342d2de8f1a9ab58538aedb", "url": "https://github.com/yahoo/elide/commit/a0f481646a50edd5f342d2de8f1a9ab58538aedb", "message": "address comment", "committedDate": "2020-02-20T21:33:37Z", "type": "commit"}, {"oid": "94e4d9d0eb78082a47d88bd66a3df2f782f1d389", "url": "https://github.com/yahoo/elide/commit/94e4d9d0eb78082a47d88bd66a3df2f782f1d389", "message": "change to sourcePath", "committedDate": "2020-02-20T22:48:41Z", "type": "commit"}]}