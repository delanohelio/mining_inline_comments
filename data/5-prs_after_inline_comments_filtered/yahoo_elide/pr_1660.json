{"pr_number": 1660, "pr_title": "Switched command line schema validator to use system.exit instead of \u2026", "pr_createdAt": "2020-11-12T20:26:55Z", "pr_url": "https://github.com/yahoo/elide/pull/1660", "timeline": [{"oid": "059a6cad1e8778b73968563d7b8f206ea351e28a", "url": "https://github.com/yahoo/elide/commit/059a6cad1e8778b73968563d7b8f206ea351e28a", "message": "Switched command line schema validator to use system.exit instead of throwing exceptions", "committedDate": "2020-11-12T20:26:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQwNjgyNg==", "url": "https://github.com/yahoo/elide/pull/1660#discussion_r522406826", "bodyText": "log.info", "author": "moizarafat", "createdAt": "2020-11-12T20:29:36Z", "path": "elide-model-config/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/validator/DynamicConfigValidator.java", "diffHunk": "@@ -99,25 +97,31 @@ public DynamicConfigValidator(String configDir) {\n         }\n     }\n \n-    public static void main(String[] args) throws IOException, ParseException {\n-\n+    public static void main(String[] args) {\n         Options options = prepareOptions();\n-        CommandLine cli = new DefaultParser().parse(options, args);\n \n-        if (cli.hasOption(\"help\")) {\n-            printHelp(options);\n-            return;\n-        }\n-        if (!cli.hasOption(\"configDir\")) {\n-            printHelp(options);\n-            throw new MissingOptionException(\"Missing required option\");\n-        }\n-        String configDir = cli.getOptionValue(\"configDir\");\n+        try {\n+            CommandLine cli = new DefaultParser().parse(options, args);\n \n-        DynamicConfigValidator dynamicConfigValidator = new DynamicConfigValidator(configDir);\n-        dynamicConfigValidator.readAndValidateConfigs();\n+            if (cli.hasOption(\"help\")) {\n+                printHelp(options);\n+                return;\n+            }\n+            if (!cli.hasOption(\"configDir\")) {\n+                printHelp(options);\n+                System.err.println(\"Missing required option\");\n+                System.exit(1);\n+            }\n+            String configDir = cli.getOptionValue(\"configDir\");\n+\n+            DynamicConfigValidator dynamicConfigValidator = new DynamicConfigValidator(configDir);\n+            dynamicConfigValidator.readAndValidateConfigs();\n+        } catch (Exception e) {\n+            System.err.println(e.getMessage());\n+            System.exit(2);\n+        }\n \n-        log.info(\"Configs Validation Passed!\");\n+        System.out.println(\"Configs Validation Passed!\");", "originalCommit": "059a6cad1e8778b73968563d7b8f206ea351e28a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}