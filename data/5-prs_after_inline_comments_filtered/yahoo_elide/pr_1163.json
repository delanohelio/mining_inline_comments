{"pr_number": 1163, "pr_title": "JsonApiDocument hashCode and equals were inconsistent", "pr_createdAt": "2020-01-26T03:26:26Z", "pr_url": "https://github.com/yahoo/elide/pull/1163", "timeline": [{"oid": "1e3d1a997004cfef0ad920186f1ed5a69cccb8ca", "url": "https://github.com/yahoo/elide/commit/1e3d1a997004cfef0ad920186f1ed5a69cccb8ca", "message": "Fix JsonApiDocument hashcode and equals", "committedDate": "2020-01-26T03:17:15Z", "type": "commit"}, {"oid": "1cca0077dd668d8b3c4f5dcdbd8efb516d8933f1", "url": "https://github.com/yahoo/elide/commit/1cca0077dd668d8b3c4f5dcdbd8efb516d8933f1", "message": "Handle empty ConstraintViolations", "committedDate": "2020-01-26T03:18:50Z", "type": "commit"}, {"oid": "3ab1f6734066acc63ebfa7b0bb56c6e0f266bd41", "url": "https://github.com/yahoo/elide/commit/3ab1f6734066acc63ebfa7b0bb56c6e0f266bd41", "message": "Remove unnecessary initializations", "committedDate": "2020-01-26T03:19:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTAyNzQxMw==", "url": "https://github.com/yahoo/elide/pull/1163#discussion_r371027413", "bodyText": "Why do we do this?", "author": "aklish", "createdAt": "2020-01-26T20:33:22Z", "path": "elide-core/src/test/java/com/yahoo/elide/jsonapi/JsonApiTest.java", "diffHunk": "@@ -326,5 +339,21 @@ public void readListWithMeta() throws IOException {\n         assertEquals(attributes.get(\"firstName\"), \"bob\");\n         assertEquals(data.getRelationships().get(\"children\").getData().getSingleValue().getId(), \"2\");\n         assertNull(included);\n+        checkEquality(jsonApiDocument);\n+    }\n+\n+    private void checkEquality(JsonApiDocument doc1) {\n+        JsonApiDocument doc2;\n+        try {\n+            String json = mapper.writeJsonApiDocument(doc1);\n+            doc2 = mapper.readJsonApiDocument(json);\n+        } catch (IOException e) {\n+            throw new UncheckedIOException(e);\n+        }\n+        if (doc2.getData() == null) {", "originalCommit": "3ab1f6734066acc63ebfa7b0bb56c6e0f266bd41", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA0NTYwNg==", "url": "https://github.com/yahoo/elide/pull/1163#discussion_r371045606", "bodyText": "Good question.  Seems the null is not handled well.\nI found the problem. Somehow serializing changes the value of doc.data!", "author": "wcekan", "createdAt": "2020-01-27T01:44:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTAyNzQxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA0NjM3Nw==", "url": "https://github.com/yahoo/elide/pull/1163#discussion_r371046377", "bodyText": "I removed this hack and added a verification that data is unchanged after serialization, which fails \ud83d\ude1e", "author": "wcekan", "createdAt": "2020-01-27T01:52:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTAyNzQxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA1MDIyNg==", "url": "https://github.com/yahoo/elide/pull/1163#discussion_r371050226", "bodyText": "It seems \"Empty\" object and Null object are written the same, but read differently.", "author": "wcekan", "createdAt": "2020-01-27T02:32:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTAyNzQxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA1MDU2OQ==", "url": "https://github.com/yahoo/elide/pull/1163#discussion_r371050569", "bodyText": "expected:\n<JsonApiDocument(data=Data(values=[], relationshipType=MANY_TO_ONE), meta=null, links=null, includedRecs=[], included=null)>\nbut was:\n<JsonApiDocument(data=null, meta=null, links=null, includedRecs=[], included=null)>", "author": "wcekan", "createdAt": "2020-01-27T02:36:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTAyNzQxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA2ODA2NQ==", "url": "https://github.com/yahoo/elide/pull/1163#discussion_r371068065", "bodyText": "Will now treat \"Empty\" object and Null data object as equal.", "author": "wcekan", "createdAt": "2020-01-27T05:26:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTAyNzQxMw=="}], "type": "inlineReview"}, {"oid": "05ec0b641b7f7c5af4206e8e96f32f846d2a705b", "url": "https://github.com/yahoo/elide/commit/05ec0b641b7f7c5af4206e8e96f32f846d2a705b", "message": "Verify serialization does not change data.", "committedDate": "2020-01-27T01:47:31Z", "type": "commit"}, {"oid": "b045164272b4832025461b4bf8b466303bc5527f", "url": "https://github.com/yahoo/elide/commit/b045164272b4832025461b4bf8b466303bc5527f", "message": "write null object test", "committedDate": "2020-01-27T03:03:05Z", "type": "commit"}, {"oid": "38d292f9fbc2a75dc8071f038bc3b3405b2afe41", "url": "https://github.com/yahoo/elide/commit/38d292f9fbc2a75dc8071f038bc3b3405b2afe41", "message": "Treat data=null as empty collection", "committedDate": "2020-01-27T05:23:03Z", "type": "commit"}, {"oid": "38d292f9fbc2a75dc8071f038bc3b3405b2afe41", "url": "https://github.com/yahoo/elide/commit/38d292f9fbc2a75dc8071f038bc3b3405b2afe41", "message": "Treat data=null as empty collection", "committedDate": "2020-01-27T05:23:03Z", "type": "forcePushed"}, {"oid": "21c4fc668f20e6fa1c1669eb963cd832cf561d08", "url": "https://github.com/yahoo/elide/commit/21c4fc668f20e6fa1c1669eb963cd832cf561d08", "message": "Use Optional.map.else to handle resource data", "committedDate": "2020-01-27T05:58:23Z", "type": "commit"}, {"oid": "f0e7f20262f1bf395592a7356e786df211cfd8aa", "url": "https://github.com/yahoo/elide/commit/f0e7f20262f1bf395592a7356e786df211cfd8aa", "message": "Fix line length", "committedDate": "2020-01-27T17:13:22Z", "type": "commit"}]}