{"pr_number": 1205, "pr_title": "Elide 5.x elide-async integration in elide-standalone", "pr_createdAt": "2020-02-26T22:41:56Z", "pr_url": "https://github.com/yahoo/elide/pull/1205", "timeline": [{"oid": "4fda2e9c224ece2d9912af7706a5d0215027c250", "url": "https://github.com/yahoo/elide/commit/4fda2e9c224ece2d9912af7706a5d0215027c250", "message": "Integrating elide-async.\n\nCo-authored-by: Abhino <abhino@gmail.com>", "committedDate": "2020-02-26T22:22:54Z", "type": "commit"}, {"oid": "3468a01d366b891e8b568894ae697ecb9f669225", "url": "https://github.com/yahoo/elide/commit/3468a01d366b891e8b568894ae697ecb9f669225", "message": "Default enableAsync to False.\n\nCo-authored-by: Abhino <abhino@gmail.com>", "committedDate": "2020-02-27T15:51:46Z", "type": "commit"}, {"oid": "5a15ded7ff2f761b8d916065d9b689edfa5fc88a", "url": "https://github.com/yahoo/elide/commit/5a15ded7ff2f761b8d916065d9b689edfa5fc88a", "message": "Default enableAsync to False.\n\nCo-authored-by: Abhino <abhino@gmail.com>", "committedDate": "2020-02-27T15:52:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2MzM5OQ==", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r385263399", "bodyText": "I don't think we need this.", "author": "aklish", "createdAt": "2020-02-27T17:34:45Z", "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideStandaloneSettings.java", "diffHunk": "@@ -179,6 +195,42 @@ default boolean enableJSONAPI() {\n     default boolean enableGraphQL() {\n         return true;\n     }\n+    \n+    /**\n+     * Enable the support for Async querying feature. If false, the async feature will be disabled.\n+     *\n+     * @return Default: False\n+     */\n+    default boolean enableAsync() {\n+        return false;\n+    }\n+\n+    /**\n+     * Thread Size for Async queries to run in parallel.\n+     *\n+     * @return Default: 5\n+     */\n+    default Integer getAsyncThreadSize() {\n+        return 5;\n+    }\n+\n+    /**\n+     * Maximum Query Run time for Async Queries to mark as TIMEDOUT.\n+     *\n+     * @return Default: 60\n+     */\n+    default Integer getMaxRunTime() {\n+        return 60;\n+    }\n+\n+    /**\n+     * Number of hosts running Elide Service.\n+     *\n+     * @return Default: 1\n+     */\n+    default Integer getNumberOfHosts() {", "originalCommit": "5a15ded7ff2f761b8d916065d9b689edfa5fc88a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM0NjA2NQ==", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r385346065", "bodyText": "We are using this param to randomize the start-up time for the cleanup executor. If we have more than 1 host running and then if all of them have the cleanup service executing at the same time they could possibly try to update/delete the record at the same time and have lock error etc.  so this is how we are using it here. \n  \n    \n      elide/elide-async/src/main/java/com/yahoo/elide/async/service/AsyncExecutorService.java\n    \n    \n        Lines 59 to 63\n      in\n      c88d08a\n    \n    \n    \n    \n\n        \n          \n           Random random = new Random(); \n        \n\n        \n          \n           int initialDelay = random.ints(0, numberOfNodes * 2).limit(1).findFirst().getAsInt(); \n        \n\n        \n          \n            \n        \n\n        \n          \n           //Having a delay of at least DEFAULT_CLEANUP_DELAY between two cleanup attempts. \n        \n\n        \n          \n           cleaner.scheduleWithFixedDelay(cleanUpTask, initialDelay, Math.max(DEFAULT_CLEANUP_DELAY, maxRunTime * 2), TimeUnit.MINUTES);", "author": "moizarafat", "createdAt": "2020-02-27T20:11:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2MzM5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjE0NTEzNw==", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r386145137", "bodyText": "done", "author": "moizarafat", "createdAt": "2020-03-01T22:06:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2MzM5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2MzY5OA==", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r385263698", "bodyText": "See comments I Had on Spring in general.  Settings that involve time should have units in their name.  We need two time settings (timeout and delete).", "author": "aklish", "createdAt": "2020-02-27T17:35:22Z", "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideStandaloneSettings.java", "diffHunk": "@@ -179,6 +195,42 @@ default boolean enableJSONAPI() {\n     default boolean enableGraphQL() {\n         return true;\n     }\n+    \n+    /**\n+     * Enable the support for Async querying feature. If false, the async feature will be disabled.\n+     *\n+     * @return Default: False\n+     */\n+    default boolean enableAsync() {\n+        return false;\n+    }\n+\n+    /**\n+     * Thread Size for Async queries to run in parallel.\n+     *\n+     * @return Default: 5\n+     */\n+    default Integer getAsyncThreadSize() {\n+        return 5;\n+    }\n+\n+    /**\n+     * Maximum Query Run time for Async Queries to mark as TIMEDOUT.\n+     *\n+     * @return Default: 60\n+     */\n+    default Integer getMaxRunTime() {", "originalCommit": "5a15ded7ff2f761b8d916065d9b689edfa5fc88a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM3MDgzNg==", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r385370836", "bodyText": "Done", "author": "moizarafat", "createdAt": "2020-02-27T21:05:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2MzY5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2MzkyNg==", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r385263926", "bodyText": "We don't need a setting for this.  The package name is fixed (by us).", "author": "aklish", "createdAt": "2020-02-27T17:35:49Z", "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideStandaloneSettings.java", "diffHunk": "@@ -131,6 +132,21 @@ default int getPort() {\n     default String getModelPackageName() {\n         return \"com.yourcompany.elide.models\";\n     }\n+    \n+    /**\n+     * Package name containing the Async models to support the Async query feature. This package will be \n+     * recursively scanned for @Entity's and registered with Elide.\n+     *\n+     * NOTE: This will scan for all entities in that package and bind this data to a set named \"elideAllModels\".\n+     *       If providing a custom ElideSettings object, you can inject this data into your class by using:\n+     *\n+     *       <strong>@Inject @Named(\"elideAllModels\") Set&lt;Class&gt; entities;</strong>\n+     *\n+     * @return\n+     */\n+    default String getAsyncModelPackageName() {", "originalCommit": "5a15ded7ff2f761b8d916065d9b689edfa5fc88a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM3MDIzMQ==", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r385370231", "bodyText": "Done", "author": "moizarafat", "createdAt": "2020-02-27T21:04:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2MzkyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2NTMxMQ==", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r385265311", "bodyText": "Instead of passing the package name for async here (which Elide already knows), you could just pass a flag about whether or not to include async models.", "author": "aklish", "createdAt": "2020-02-27T17:38:24Z", "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/Util.java", "diffHunk": "@@ -23,7 +23,8 @@\n  */\n public class Util {\n \n-    public static EntityManagerFactory getEntityManagerFactory(String modelPackageName, Properties options) {\n+    public static EntityManagerFactory getEntityManagerFactory(String modelPackageName, String asyncModelPackageName, ", "originalCommit": "5a15ded7ff2f761b8d916065d9b689edfa5fc88a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM3MDE5Mg==", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r385370192", "bodyText": "Done", "author": "moizarafat", "createdAt": "2020-02-27T21:04:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2NTMxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2NjMzOQ==", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r385266339", "bodyText": "asyncModelPackageName can just be AsyncQuery.class.getPackage().getName()", "author": "aklish", "createdAt": "2020-02-27T17:40:20Z", "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/Util.java", "diffHunk": "@@ -52,13 +53,31 @@ public static EntityManagerFactory getEntityManagerFactory(String modelPackageNa\n         }\n \n         PersistenceUnitInfo persistenceUnitInfo = new PersistenceUnitInfoImpl(\"elide-stand-alone\",\n-                getAllEntities(modelPackageName), options);\n+                combineModelEntities(modelPackageName, asyncModelPackageName), options);\n \n         return new EntityManagerFactoryBuilderImpl(\n                 new PersistenceUnitInfoDescriptor(persistenceUnitInfo), new HashMap<>())\n                 .build();\n     }\n \n+    /**\n+     * Combine the model entities with Async model.\n+     *\n+     * @param modelPackageName Package name\n+     * @param asyncModelPackageName Async model package Name\n+     * @return All entities combined from both package.\n+     */\n+    public static List<String> combineModelEntities(String modelPackageName, String asyncModelPackageName) {\n+\n+        List<String> modelEntities = getAllEntities(modelPackageName);\n+\n+        if (asyncModelPackageName != null) {\n+            modelEntities.addAll(getAllEntities(asyncModelPackageName));", "originalCommit": "5a15ded7ff2f761b8d916065d9b689edfa5fc88a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM3MDE0Mw==", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r385370143", "bodyText": "Done", "author": "moizarafat", "createdAt": "2020-02-27T21:04:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2NjMzOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2NzY5NQ==", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r385267695", "bodyText": "See my earlier comment here.", "author": "aklish", "createdAt": "2020-02-27T17:42:51Z", "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideResourceConfig.java", "diffHunk": "@@ -58,7 +63,8 @@ public ElideResourceConfig(ServiceLocator injector, @Context ServletContext serv\n         register(new AbstractBinder() {\n             @Override\n             protected void configure() {\n-                bind(Util.getAllEntities(settings.getModelPackageName())).to(Set.class).named(\"elideAllModels\");\n+                bind(Util.combineModelEntities(settings.getModelPackageName(), settings.getAsyncModelPackageName())).to(Set.class)", "originalCommit": "5a15ded7ff2f761b8d916065d9b689edfa5fc88a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM3MDExNw==", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r385370117", "bodyText": "Done", "author": "moizarafat", "createdAt": "2020-02-27T21:03:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2NzY5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2NzgzOA==", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r385267838", "bodyText": "See my earlier comment here.", "author": "aklish", "createdAt": "2020-02-27T17:43:07Z", "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideStandaloneSettings.java", "diffHunk": "@@ -64,7 +65,7 @@\n      */\n     default ElideSettings getElideSettings(ServiceLocator injector) {\n         EntityManagerFactory entityManagerFactory = Util.getEntityManagerFactory(getModelPackageName(),\n-                getDatabaseProperties());\n+                getAsyncModelPackageName(), getDatabaseProperties());", "originalCommit": "5a15ded7ff2f761b8d916065d9b689edfa5fc88a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM3MDA3OA==", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r385370078", "bodyText": "Done", "author": "moizarafat", "createdAt": "2020-02-27T21:03:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2NzgzOA=="}], "type": "inlineReview"}, {"oid": "75b03e6fd7908a910dd2ffadc0c3be3988ad2065", "url": "https://github.com/yahoo/elide/commit/75b03e6fd7908a910dd2ffadc0c3be3988ad2065", "message": "Integrating elide-async.\n\nCo-authored-by: Abhino <abhino@gmail.com>", "committedDate": "2020-02-27T20:48:57Z", "type": "commit"}, {"oid": "2a9954ea2d89c51887844187ef3291ba3d81f7ca", "url": "https://github.com/yahoo/elide/commit/2a9954ea2d89c51887844187ef3291ba3d81f7ca", "message": "Default enableAsync to False.\n\nCo-authored-by: Abhino <abhino@gmail.com>", "committedDate": "2020-02-27T20:48:57Z", "type": "commit"}, {"oid": "d57c68deb6e294992f5c9e0e631e36ab2c2121ef", "url": "https://github.com/yahoo/elide/commit/d57c68deb6e294992f5c9e0e631e36ab2c2121ef", "message": "Default enableAsync to False.\n\nCo-authored-by: Abhino <abhino@gmail.com>", "committedDate": "2020-02-27T20:48:57Z", "type": "commit"}, {"oid": "8a117d0bea40cc84232fb4524a28b40271e77680", "url": "https://github.com/yahoo/elide/commit/8a117d0bea40cc84232fb4524a28b40271e77680", "message": "Resolving review comments.\n\nCo-authored-by: Abhino <abhino@gmail.com>", "committedDate": "2020-02-27T20:57:23Z", "type": "commit"}, {"oid": "48fa5f268d8d5c6e075f04418deff0951d972361", "url": "https://github.com/yahoo/elide/commit/48fa5f268d8d5c6e075f04418deff0951d972361", "message": "Resolving review comments.\n\nCo-authored-by: Abhino <abhino@gmail.com>", "committedDate": "2020-02-27T21:01:08Z", "type": "commit"}, {"oid": "a65e7bd4f1620e55be7a2df95a99e8aa9d3e8810", "url": "https://github.com/yahoo/elide/commit/a65e7bd4f1620e55be7a2df95a99e8aa9d3e8810", "message": "Resolving review comments.\n\nCo-authored-by: Abhino <abhino@gmail.com>", "committedDate": "2020-02-27T21:05:24Z", "type": "commit"}, {"oid": "19a247fa3d8ca46f6e9b850c3eca0a54f1ebed6a", "url": "https://github.com/yahoo/elide/commit/19a247fa3d8ca46f6e9b850c3eca0a54f1ebed6a", "message": "Removing unwanted params.\n\nCo-authored-by: Abhino <abhino@gmail.com>", "committedDate": "2020-03-01T22:00:23Z", "type": "commit"}, {"oid": "4f6e8b5989ca6304bb2142a3ad7a7dc6cfeb3a5e", "url": "https://github.com/yahoo/elide/commit/4f6e8b5989ca6304bb2142a3ad7a7dc6cfeb3a5e", "message": "Binding Cleaner service.\n\nCo-authored-by: Abhino <abhino@gmail.com>\n\nBinding Cleaner service.\n\nCo-authored-by: Abhino <abhino@gmail.com>", "committedDate": "2020-03-02T19:06:51Z", "type": "commit"}, {"oid": "4f6e8b5989ca6304bb2142a3ad7a7dc6cfeb3a5e", "url": "https://github.com/yahoo/elide/commit/4f6e8b5989ca6304bb2142a3ad7a7dc6cfeb3a5e", "message": "Binding Cleaner service.\n\nCo-authored-by: Abhino <abhino@gmail.com>\n\nBinding Cleaner service.\n\nCo-authored-by: Abhino <abhino@gmail.com>", "committedDate": "2020-03-02T19:06:51Z", "type": "forcePushed"}, {"oid": "23b22fb689d48eca5fc5dfcc088a0024d94c9d4e", "url": "https://github.com/yahoo/elide/commit/23b22fb689d48eca5fc5dfcc088a0024d94c9d4e", "message": "Adding query result retention.\n\nCo-authored-by: Abhino <abhino@gmail.com>", "committedDate": "2020-03-03T01:30:43Z", "type": "commit"}, {"oid": "379f545d61fbca5842e756dca2cd08c22ffce0dd", "url": "https://github.com/yahoo/elide/commit/379f545d61fbca5842e756dca2cd08c22ffce0dd", "message": "Integrating elide-async.\n\nCo-authored-by: Abhino <abhino@gmail.com>", "committedDate": "2020-03-05T23:09:41Z", "type": "commit"}, {"oid": "c8c8f618c7de30db9f2c6abe011f2d5ae668e8d0", "url": "https://github.com/yahoo/elide/commit/c8c8f618c7de30db9f2c6abe011f2d5ae668e8d0", "message": "Default enableAsync to False.\n\nCo-authored-by: Abhino <abhino@gmail.com>", "committedDate": "2020-03-05T23:09:41Z", "type": "commit"}, {"oid": "e10b88a36b9714a556cf97ed69fb1cfeba18d078", "url": "https://github.com/yahoo/elide/commit/e10b88a36b9714a556cf97ed69fb1cfeba18d078", "message": "Default enableAsync to False.\n\nCo-authored-by: Abhino <abhino@gmail.com>", "committedDate": "2020-03-05T23:09:41Z", "type": "commit"}, {"oid": "b10af1fc3b4635d0d02aeb7a3b581ca0bdac06a1", "url": "https://github.com/yahoo/elide/commit/b10af1fc3b4635d0d02aeb7a3b581ca0bdac06a1", "message": "Integrating elide-async.\n\nCo-authored-by: Abhino <abhino@gmail.com>", "committedDate": "2020-03-05T23:10:59Z", "type": "commit"}, {"oid": "e05e4575749d34d4ce8ff13e3d9418d4947ac0a6", "url": "https://github.com/yahoo/elide/commit/e05e4575749d34d4ce8ff13e3d9418d4947ac0a6", "message": "Resolving review comments.\n\nCo-authored-by: Abhino <abhino@gmail.com>", "committedDate": "2020-03-05T23:10:59Z", "type": "commit"}, {"oid": "0f6021bbfc1ca64929fb82bd31cc17468f8902e5", "url": "https://github.com/yahoo/elide/commit/0f6021bbfc1ca64929fb82bd31cc17468f8902e5", "message": "Resolving review comments.\n\nCo-authored-by: Abhino <abhino@gmail.com>", "committedDate": "2020-03-05T23:10:59Z", "type": "commit"}, {"oid": "2d52b47ad1191fe492874e5ca3dd9c6a0bb96f90", "url": "https://github.com/yahoo/elide/commit/2d52b47ad1191fe492874e5ca3dd9c6a0bb96f90", "message": "Removing unwanted params.\n\nCo-authored-by: Abhino <abhino@gmail.com>", "committedDate": "2020-03-05T23:10:59Z", "type": "commit"}, {"oid": "9ca38c190efeaaec946099bf60cb3b9396dd3348", "url": "https://github.com/yahoo/elide/commit/9ca38c190efeaaec946099bf60cb3b9396dd3348", "message": "Binding Cleaner service.\n\nCo-authored-by: Abhino <abhino@gmail.com>\n\nBinding Cleaner service.\n\nCo-authored-by: Abhino <abhino@gmail.com>", "committedDate": "2020-03-05T23:10:59Z", "type": "commit"}, {"oid": "b6d0928e0e114ada10b339134740d43e9afa9f54", "url": "https://github.com/yahoo/elide/commit/b6d0928e0e114ada10b339134740d43e9afa9f54", "message": "Adding query result retention.\n\nCo-authored-by: Abhino <abhino@gmail.com>", "committedDate": "2020-03-05T23:11:00Z", "type": "commit"}, {"oid": "7167d750655d2231788b2a9a1944a273b99bc5aa", "url": "https://github.com/yahoo/elide/commit/7167d750655d2231788b2a9a1944a273b99bc5aa", "message": "Rebase Conflicts\n\nCo-authored-by: Abhino <abhino@gmail.com>", "committedDate": "2020-03-05T23:36:35Z", "type": "commit"}, {"oid": "2e1b1824dcb350c6503e252b06fd9ac399b8656e", "url": "https://github.com/yahoo/elide/commit/2e1b1824dcb350c6503e252b06fd9ac399b8656e", "message": "Making AsyncQueryDAO configurable\n\nCo-authored-by: Abhino <abhino@gmail.com>", "committedDate": "2020-03-11T09:55:38Z", "type": "commit"}, {"oid": "2678b3fb6d869e159b4d038fa825457e15e3ebd3", "url": "https://github.com/yahoo/elide/commit/2678b3fb6d869e159b4d038fa825457e15e3ebd3", "message": "Making AsyncQueryDAO configurable\n\nCo-authored-by: Abhino <abhino@gmail.com>", "committedDate": "2020-03-11T10:02:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIwMTY2NA==", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r391201664", "bodyText": "This should be qualified with Async", "author": "aklish", "createdAt": "2020-03-11T19:11:11Z", "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideStandaloneSettings.java", "diffHunk": "@@ -167,6 +169,60 @@ default boolean enableJSONAPI() {\n     default boolean enableGraphQL() {\n         return true;\n     }\n+    \n+    /**\n+     * Enable the support for Async querying feature. If false, the async feature will be disabled.\n+     *\n+     * @return Default: False\n+     */\n+    default boolean enableAsync() {\n+        return false;\n+    }\n+\n+    /**\n+     * Enable the support for cleaning up Async query history. If false, the async cleanup feature will be disabled.\n+     *\n+     * @return Default: False\n+     */\n+    default boolean enableAsyncCleanup() {\n+        return false;\n+    }\n+\n+    /**\n+     * Thread Size for Async queries to run in parallel.\n+     *\n+     * @return Default: 5\n+     */\n+    default Integer getAsyncThreadSize() {\n+        return 5;\n+    }\n+\n+    /**\n+     * Maximum Query Run time for Async Queries to mark as TIMEDOUT.\n+     *\n+     * @return Default: 60\n+     */\n+    default Integer getMaxRunTimeMinutes() {", "originalCommit": "2678b3fb6d869e159b4d038fa825457e15e3ebd3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIwMTcyOQ==", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r391201729", "bodyText": "Same comment.", "author": "aklish", "createdAt": "2020-03-11T19:11:20Z", "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideStandaloneSettings.java", "diffHunk": "@@ -167,6 +169,60 @@ default boolean enableJSONAPI() {\n     default boolean enableGraphQL() {\n         return true;\n     }\n+    \n+    /**\n+     * Enable the support for Async querying feature. If false, the async feature will be disabled.\n+     *\n+     * @return Default: False\n+     */\n+    default boolean enableAsync() {\n+        return false;\n+    }\n+\n+    /**\n+     * Enable the support for cleaning up Async query history. If false, the async cleanup feature will be disabled.\n+     *\n+     * @return Default: False\n+     */\n+    default boolean enableAsyncCleanup() {\n+        return false;\n+    }\n+\n+    /**\n+     * Thread Size for Async queries to run in parallel.\n+     *\n+     * @return Default: 5\n+     */\n+    default Integer getAsyncThreadSize() {\n+        return 5;\n+    }\n+\n+    /**\n+     * Maximum Query Run time for Async Queries to mark as TIMEDOUT.\n+     *\n+     * @return Default: 60\n+     */\n+    default Integer getMaxRunTimeMinutes() {\n+        return 60;\n+    }\n+\n+    /**\n+     * Number of days history to retain for async query executions and results.\n+     *\n+     * @return Default: 7\n+     */\n+    default Integer getQueryCleanupDays() {", "originalCommit": "2678b3fb6d869e159b4d038fa825457e15e3ebd3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIwMjE4OA==", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r391202188", "bodyText": "Instead of resolving this as a setting - this can be injected into the async code (either via lifecycle hook or bean).", "author": "aklish", "createdAt": "2020-03-11T19:12:18Z", "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideStandaloneSettings.java", "diffHunk": "@@ -167,6 +169,60 @@ default boolean enableJSONAPI() {\n     default boolean enableGraphQL() {\n         return true;\n     }\n+    \n+    /**\n+     * Enable the support for Async querying feature. If false, the async feature will be disabled.\n+     *\n+     * @return Default: False\n+     */\n+    default boolean enableAsync() {\n+        return false;\n+    }\n+\n+    /**\n+     * Enable the support for cleaning up Async query history. If false, the async cleanup feature will be disabled.\n+     *\n+     * @return Default: False\n+     */\n+    default boolean enableAsyncCleanup() {\n+        return false;\n+    }\n+\n+    /**\n+     * Thread Size for Async queries to run in parallel.\n+     *\n+     * @return Default: 5\n+     */\n+    default Integer getAsyncThreadSize() {\n+        return 5;\n+    }\n+\n+    /**\n+     * Maximum Query Run time for Async Queries to mark as TIMEDOUT.\n+     *\n+     * @return Default: 60\n+     */\n+    default Integer getMaxRunTimeMinutes() {\n+        return 60;\n+    }\n+\n+    /**\n+     * Number of days history to retain for async query executions and results.\n+     *\n+     * @return Default: 7\n+     */\n+    default Integer getQueryCleanupDays() {\n+        return 7;\n+    }\n+\n+    /**\n+     * Implementation of AsyncQueryDAO to use.\n+     *\n+     * @return AsyncQueryDAO type object.\n+     */\n+    default AsyncQueryDAO getAsyncQueryDAO() {", "originalCommit": "2678b3fb6d869e159b4d038fa825457e15e3ebd3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc1Njk2OA==", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r391756968", "bodyText": "As discussed will leave it as is.", "author": "moizarafat", "createdAt": "2020-03-12T16:52:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIwMjE4OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIwMjcyMw==", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r391202723", "bodyText": "Most of the other APIs have a config setting for the base path.", "author": "aklish", "createdAt": "2020-03-11T19:13:22Z", "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideResourceConfig.java", "diffHunk": "@@ -85,6 +112,21 @@ protected void configure() {\n             protected void configure() {\n                 Map<String, Swagger> swaggerDocs = settings.enableSwagger();\n                 if (!swaggerDocs.isEmpty()) {\n+                    // Include the async models in swagger docs\n+                    if(settings.enableAsync()) {\n+                        EntityDictionary dictionary = new EntityDictionary(new HashMap());\n+                        dictionary.bindEntity(AsyncQuery.class);\n+                        dictionary.bindEntity(AsyncQueryResult.class);\n+                         \n+                        Info info = new Info().title(\"Async Service\").version(\"1.0\");\n+\n+                        SwaggerBuilder builder = new SwaggerBuilder(dictionary, info);\n+\n+                        Swagger swagger = builder.build().basePath(\"/api/v1\");", "originalCommit": "2678b3fb6d869e159b4d038fa825457e15e3ebd3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI1OTk0OQ==", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r391259949", "bodyText": "As discussed no config setting exists will add a new one.", "author": "moizarafat", "createdAt": "2020-03-11T20:50:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIwMjcyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIwMzM5Mw==", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r391203393", "bodyText": "Just create the DAO here.  We don't need a setting.  Users can override this function if they want something different.", "author": "aklish", "createdAt": "2020-03-11T19:14:40Z", "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideResourceConfig.java", "diffHunk": "@@ -76,6 +84,25 @@ protected void configure() {\n                 bind(elideSettings).to(ElideSettings.class);\n                 bind(elideSettings.getDictionary()).to(EntityDictionary.class);\n                 bind(elideSettings.getDataStore()).to(DataStore.class).named(\"elideDataStore\");\n+\n+                // Binding async service\n+                if(settings.enableAsync()) {\n+                    AsyncQueryDAO asyncQueryDao = settings.getAsyncQueryDAO();", "originalCommit": "2678b3fb6d869e159b4d038fa825457e15e3ebd3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc1OTA5Mg==", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r391759092", "bodyText": "As discussed will leave this as is.", "author": "moizarafat", "createdAt": "2020-03-12T16:56:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIwMzM5Mw=="}], "type": "inlineReview"}, {"oid": "c3826d246d1889353407b70ee8f4014ae17feced", "url": "https://github.com/yahoo/elide/commit/c3826d246d1889353407b70ee8f4014ae17feced", "message": "Review comments\n\nCo-authored-by: Abhino <abhino@gmail.com>", "committedDate": "2020-03-12T16:58:40Z", "type": "commit"}, {"oid": "a6e047db50214412a2199bfa5f43e486782a3874", "url": "https://github.com/yahoo/elide/commit/a6e047db50214412a2199bfa5f43e486782a3874", "message": "Review comments\n\nCo-authored-by: abhino <abhino@gmail.com>", "committedDate": "2020-03-13T14:37:29Z", "type": "commit"}, {"oid": "9a34233254173fc009f4c3e7661a4e313e7277ef", "url": "https://github.com/yahoo/elide/commit/9a34233254173fc009f4c3e7661a4e313e7277ef", "message": "Changing call to DefaultAsyncQueryDAO", "committedDate": "2020-03-15T22:14:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ3MDk3Ng==", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r397470976", "bodyText": "Instead of making this the async swagger path - how about a config setting for swagger in general (including non-asyc models)?", "author": "aklish", "createdAt": "2020-03-24T21:26:06Z", "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideStandaloneSettings.java", "diffHunk": "@@ -211,17 +211,26 @@ default Integer getMaxRunTimeMinutes() {\n      *\n      * @return Default: 7\n      */\n-    default Integer getQueryCleanupDays() {\n+    default Integer getAsyncQueryCleanupDays() {\n         return 7;\n     }\n \n+    /**\n+     *  Root path specification for the Async Models Swagger endpoint.\n+     *\n+     * @return Default: /api/v1\n+     */\n+    default String getAsyncSwaggerPath() {", "originalCommit": "9a34233254173fc009f4c3e7661a4e313e7277ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ5NTY4MA==", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r397495680", "bodyText": "This should just come from getJsonApiPathSpec()", "author": "aklish", "createdAt": "2020-03-24T22:18:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ3MDk3Ng=="}], "type": "inlineReview"}, {"oid": "5cda3ad7c9081650fd5d64fb85fd15df5a84f703", "url": "https://github.com/yahoo/elide/commit/5cda3ad7c9081650fd5d64fb85fd15df5a84f703", "message": "Review comments\n\nCo-authored-by: Abhino <Abhino@gmail.com>", "committedDate": "2020-03-25T22:20:37Z", "type": "commit"}]}