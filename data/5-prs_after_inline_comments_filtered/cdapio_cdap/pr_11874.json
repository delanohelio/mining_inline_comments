{"pr_number": 11874, "pr_title": "(CDAP-16308) Limit concurrent runs in preview", "pr_createdAt": "2020-02-19T08:46:02Z", "pr_url": "https://github.com/cdapio/cdap/pull/11874", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTM5NDgwOQ==", "url": "https://github.com/cdapio/cdap/pull/11874#discussion_r381394809", "bodyText": "should we add a debug log here?", "author": "CuriousVini", "createdAt": "2020-02-19T16:36:18Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/preview/DefaultPreviewManager.java", "diffHunk": "@@ -110,72 +106,54 @@\n   private final CConfiguration cConf;\n   private final Configuration hConf;\n   private final SConfiguration sConf;\n+  private final int maxPreviews;\n   private final DiscoveryService discoveryService;\n   private final DatasetFramework datasetFramework;\n-  private final PreferencesService preferencesService;\n   private final SecureStore secureStore;\n   private final TransactionSystemClient transactionSystemClient;\n-  private final ArtifactRepository artifactRepository;\n-  private final ArtifactStore artifactStore;\n-  private final AuthorizerInstantiator authorizerInstantiator;\n-  private final PrivilegesManager privilegesManager;\n-  private final AuthorizationEnforcer authorizationEnforcer;\n-  private final Cache<ApplicationId, Injector> appInjectors;\n+  private final Map<ApplicationId, Injector> appInjectors;\n   private final Path previewDataDir;\n-  private final ProgramRuntimeProviderLoader programRuntimeProviderLoader;\n+  private final PreviewRunnerModuleFactory previewRunnerModuleFactory;\n \n   @Inject\n   DefaultPreviewManager(CConfiguration cConf, Configuration hConf,\n                         SConfiguration sConf, DiscoveryService discoveryService,\n                         @Named(DataSetsModules.BASE_DATASET_FRAMEWORK) DatasetFramework datasetFramework,\n-                        PreferencesService preferencesService, SecureStore secureStore,\n-                        TransactionSystemClient transactionSystemClient, ArtifactRepository artifactRepository,\n-                        ArtifactStore artifactStore, AuthorizerInstantiator authorizerInstantiator,\n-                        PrivilegesManager privilegesManager, AuthorizationEnforcer authorizationEnforcer,\n-                        ProgramRuntimeProviderLoader programRuntimeProviderLoader) {\n+                        SecureStore secureStore, TransactionSystemClient transactionSystemClient,\n+                        PreviewRunnerModuleFactory previewRunnerModuleFactory) {\n     this.cConf = cConf;\n     this.hConf = hConf;\n     this.sConf = sConf;\n     this.datasetFramework = datasetFramework;\n     this.discoveryService = discoveryService;\n-    this.preferencesService = preferencesService;\n     this.secureStore = secureStore;\n     this.transactionSystemClient = transactionSystemClient;\n-    this.artifactRepository = artifactRepository;\n-    this.artifactStore = artifactStore;\n-    this.authorizerInstantiator = authorizerInstantiator;\n-    this.privilegesManager = privilegesManager;\n-    this.authorizationEnforcer = authorizationEnforcer;\n     this.previewDataDir = Paths.get(cConf.get(Constants.CFG_LOCAL_DATA_DIR), \"preview\").toAbsolutePath();\n-    this.programRuntimeProviderLoader = programRuntimeProviderLoader;\n-\n-    this.appInjectors = CacheBuilder.newBuilder()\n-      .maximumSize(cConf.getInt(Constants.Preview.PREVIEW_CACHE_SIZE, 10))\n-      .removalListener(new RemovalListener<ApplicationId, Injector>() {\n-        @Override\n-        @ParametersAreNonnullByDefault\n-        public void onRemoval(RemovalNotification<ApplicationId, Injector> notification) {\n-          Injector injector = notification.getValue();\n-          if (injector != null) {\n-            LOG.debug(\"Removing preview run for {}\", notification.getKey());\n-            PreviewRunner runner = injector.getInstance(PreviewRunner.class);\n-            if (runner instanceof Service) {\n-              stopQuietly((Service) runner);\n-            }\n-            removePreviewDir(injector.getInstance(Key.get(ProgramId.class,\n-                                                          Names.named(PreviewRunnerModule.PREVIEW_PROGRAM_ID))));\n-          }\n-        }\n-      })\n-      .build();\n+    this.appInjectors = new ConcurrentHashMap<>();\n+    this.maxPreviews = cConf.getInt(Constants.Preview.PREVIEW_CACHE_SIZE, 10);\n+    this.previewRunnerModuleFactory = previewRunnerModuleFactory;\n   }\n \n   @Override\n   protected void startUp() throws Exception {\n     File previewDir = previewDataDir.toFile();\n \n-    // there should be at most 10 directories so the process should not take very long\n-    for (File file : DirUtils.listFiles(previewDir, File::isDirectory)) {\n+    // Only load the latest maxPreviews and delete the rest\n+    List<File> previewRunDirs = DirUtils.listFiles(previewDir, File::isDirectory).stream()\n+      .sorted((f1, f2) -> Long.compare(f2.lastModified(), f1.lastModified()))\n+      .collect(Collectors.toList());\n+\n+    if (previewRunDirs.size() > maxPreviews) {\n+      for (File dir : previewRunDirs.subList(maxPreviews, previewRunDirs.size())) {\n+        try {\n+          DirUtils.deleteDirectoryContents(dir);", "originalCommit": "752bcaadfd43ba56892ee4a6153cecc4ddc1837a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQ0MjI0OQ==", "url": "https://github.com/cdapio/cdap/pull/11874#discussion_r381442249", "bodyText": "Added log.", "author": "chtyim", "createdAt": "2020-02-19T17:52:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTM5NDgwOQ=="}], "type": "inlineReview"}, {"oid": "196e74daf79399587c59c69ee5b4ee727f37fdb7", "url": "https://github.com/cdapio/cdap/commit/196e74daf79399587c59c69ee5b4ee727f37fdb7", "message": "Correctly closing LevelDB on stopping of TMS", "committedDate": "2020-02-20T09:55:11Z", "type": "commit"}, {"oid": "6146b192cba32d5cf831940cc823f9c1fd73e6d9", "url": "https://github.com/cdapio/cdap/commit/6146b192cba32d5cf831940cc823f9c1fd73e6d9", "message": "(CDAP-16308) Limit preview runs", "committedDate": "2020-02-20T09:55:12Z", "type": "commit"}, {"oid": "6146b192cba32d5cf831940cc823f9c1fd73e6d9", "url": "https://github.com/cdapio/cdap/commit/6146b192cba32d5cf831940cc823f9c1fd73e6d9", "message": "(CDAP-16308) Limit preview runs", "committedDate": "2020-02-20T09:55:12Z", "type": "forcePushed"}]}