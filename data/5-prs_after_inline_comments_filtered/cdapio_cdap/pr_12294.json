{"pr_number": 12294, "pr_title": "(CDAP-16918) Added a REST endpoint to export all application details", "pr_createdAt": "2020-06-10T22:17:19Z", "pr_url": "https://github.com/cdapio/cdap/pull/12294", "timeline": [{"oid": "3d09d418ddcada040bdbc0751089558e17f9568d", "url": "https://github.com/cdapio/cdap/commit/3d09d418ddcada040bdbc0751089558e17f9568d", "message": "(CDAP-16918) Added REST endpoint to export all applications\n\n- A new instance level endpoint /v3/export/apps is added\n- It exports a ZIP archive that contains all application details in all namespaces", "committedDate": "2020-06-10T22:19:52Z", "type": "forcePushed"}, {"oid": "4a8d1159764b90b0529512621f0acfdce87b7039", "url": "https://github.com/cdapio/cdap/commit/4a8d1159764b90b0529512621f0acfdce87b7039", "message": "(CDAP-16918) Added REST endpoint to export all applications\n\n- A new instance level endpoint /v3/export/apps is added\n- It exports a ZIP archive that contains all application details in all namespaces", "committedDate": "2020-06-10T22:32:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ0MzU2MQ==", "url": "https://github.com/cdapio/cdap/pull/12294#discussion_r438443561", "bodyText": "if there is a race between 2 RPC calls for export and the tempDir, this would fail right? May be we need to add a random suffix with directory name?", "author": "pandyajay10", "createdAt": "2020-06-10T22:32:19Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/gateway/handlers/InstanceOperationHttpHandler.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package io.cdap.cdap.gateway.handlers;\n+\n+import com.google.inject.Inject;\n+import io.cdap.cdap.common.conf.CConfiguration;\n+import io.cdap.cdap.common.conf.Constants;\n+import io.cdap.cdap.common.utils.DirUtils;\n+import io.cdap.cdap.internal.app.services.ApplicationLifecycleService;\n+import io.cdap.http.AbstractHttpHandler;\n+import io.cdap.http.HttpResponder;\n+import io.netty.handler.codec.http.DefaultHttpHeaders;\n+import io.netty.handler.codec.http.HttpHeaderNames;\n+import io.netty.handler.codec.http.HttpRequest;\n+\n+import java.io.File;\n+import java.nio.file.Files;\n+import java.nio.file.StandardOpenOption;\n+import java.security.DigestOutputStream;\n+import java.security.MessageDigest;\n+import java.util.Base64;\n+import java.util.zip.ZipOutputStream;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+\n+/**\n+ * HTTP handler for instance level operations.\n+ */\n+@Path(Constants.Gateway.API_VERSION_3)\n+public class InstanceOperationHttpHandler extends AbstractHttpHandler {\n+\n+  private final CConfiguration cConf;\n+  private final ApplicationLifecycleService lifecycleService;\n+\n+  @Inject\n+  InstanceOperationHttpHandler(CConfiguration cConf, ApplicationLifecycleService lifecycleService) {\n+    this.cConf = cConf;\n+    this.lifecycleService = lifecycleService;\n+  }\n+\n+  /**\n+   * Exports all application details as a ZIP archive file.\n+   */\n+  @GET\n+  @Path(\"/export/apps\")\n+  public void appsExport(HttpRequest request, HttpResponder responder) throws Exception {\n+    File tempDir = new File(cConf.get(Constants.CFG_LOCAL_DATA_DIR),\n+                            cConf.get(Constants.AppFabric.TEMP_DIR)).getAbsoluteFile();\n+    DirUtils.mkdirs(tempDir);", "originalCommit": "3d09d418ddcada040bdbc0751089558e17f9568d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ1MzMyMg==", "url": "https://github.com/cdapio/cdap/pull/12294#discussion_r438453322", "bodyText": "No it won't. The DirUtils.mkdirs handle concurrent calls. We just need one tmp directory and have temp file (random name) created under it.", "author": "chtyim", "createdAt": "2020-06-10T23:02:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ0MzU2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ3MTIxNw==", "url": "https://github.com/cdapio/cdap/pull/12294#discussion_r438471217", "bodyText": "Got it.", "author": "pandyajay10", "createdAt": "2020-06-11T00:02:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ0MzU2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ0NDE1Ng==", "url": "https://github.com/cdapio/cdap/pull/12294#discussion_r438444156", "bodyText": "should the file name also have random string included just in case? although if we have unique directory than that should solve it.", "author": "pandyajay10", "createdAt": "2020-06-10T22:34:03Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/gateway/handlers/InstanceOperationHttpHandler.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package io.cdap.cdap.gateway.handlers;\n+\n+import com.google.inject.Inject;\n+import io.cdap.cdap.common.conf.CConfiguration;\n+import io.cdap.cdap.common.conf.Constants;\n+import io.cdap.cdap.common.utils.DirUtils;\n+import io.cdap.cdap.internal.app.services.ApplicationLifecycleService;\n+import io.cdap.http.AbstractHttpHandler;\n+import io.cdap.http.HttpResponder;\n+import io.netty.handler.codec.http.DefaultHttpHeaders;\n+import io.netty.handler.codec.http.HttpHeaderNames;\n+import io.netty.handler.codec.http.HttpRequest;\n+\n+import java.io.File;\n+import java.nio.file.Files;\n+import java.nio.file.StandardOpenOption;\n+import java.security.DigestOutputStream;\n+import java.security.MessageDigest;\n+import java.util.Base64;\n+import java.util.zip.ZipOutputStream;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+\n+/**\n+ * HTTP handler for instance level operations.\n+ */\n+@Path(Constants.Gateway.API_VERSION_3)\n+public class InstanceOperationHttpHandler extends AbstractHttpHandler {\n+\n+  private final CConfiguration cConf;\n+  private final ApplicationLifecycleService lifecycleService;\n+\n+  @Inject\n+  InstanceOperationHttpHandler(CConfiguration cConf, ApplicationLifecycleService lifecycleService) {\n+    this.cConf = cConf;\n+    this.lifecycleService = lifecycleService;\n+  }\n+\n+  /**\n+   * Exports all application details as a ZIP archive file.\n+   */\n+  @GET\n+  @Path(\"/export/apps\")\n+  public void appsExport(HttpRequest request, HttpResponder responder) throws Exception {\n+    File tempDir = new File(cConf.get(Constants.CFG_LOCAL_DATA_DIR),\n+                            cConf.get(Constants.AppFabric.TEMP_DIR)).getAbsoluteFile();\n+    DirUtils.mkdirs(tempDir);\n+    java.nio.file.Path tmpPath = Files.createTempFile(tempDir.toPath(), \"export\", \".zip\");\n+    try {\n+      MessageDigest digest = MessageDigest.getInstance(\"SHA-256\");\n+      try (ZipOutputStream zipOut = new ZipOutputStream(new DigestOutputStream(\n+        Files.newOutputStream(tmpPath, StandardOpenOption.TRUNCATE_EXISTING), digest))) {\n+\n+        lifecycleService.createAppDetailsArchive(zipOut);\n+      }\n+\n+      responder.sendFile(\n+        tmpPath.toFile(),\n+        new DefaultHttpHeaders()\n+          .add(\"digest\", String.format(\"%s=%s\", digest.getAlgorithm().toLowerCase(),\n+                                       Base64.getEncoder().encodeToString(digest.digest())))\n+          .add(HttpHeaderNames.CONTENT_TYPE, \"application/zip\")\n+          .add(HttpHeaderNames.CONTENT_DISPOSITION, \"attachment; filename=\\\"export.zip\\\"\")", "originalCommit": "4a8d1159764b90b0529512621f0acfdce87b7039", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ1MzUxNw==", "url": "https://github.com/cdapio/cdap/pull/12294#discussion_r438453517", "bodyText": "this is the file name as we provided for the browser (if someone hit the API through browser). It doesn't affect command line.", "author": "chtyim", "createdAt": "2020-06-10T23:02:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ0NDE1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ1MzU4NQ==", "url": "https://github.com/cdapio/cdap/pull/12294#discussion_r438453585", "bodyText": "We could, however, add a timestamp to it.", "author": "chtyim", "createdAt": "2020-06-10T23:03:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ0NDE1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ3MTQ0NA==", "url": "https://github.com/cdapio/cdap/pull/12294#discussion_r438471444", "bodyText": "Got it.", "author": "pandyajay10", "createdAt": "2020-06-11T00:03:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ0NDE1Ng=="}], "type": "inlineReview"}, {"oid": "a63f2b30af2498f13990e0df2cd0bc312ec7d933", "url": "https://github.com/cdapio/cdap/commit/a63f2b30af2498f13990e0df2cd0bc312ec7d933", "message": "(CDAP-16918) Added REST endpoint to export all applications\n\n- A new scanApplications method is added to AppMetadataStore for scanning applications progressively.\n- A new scanApplications method is added to Store for scanning all applications with multiple small transactions\n- A new createAppDetailsArchive method is added to ApplicationLifecycleService for writing out ZIP archive that contains all application detail json files\n- A new class InstanceOperationHttpHandler is added, with a new REST API /v3/export/apps for downloading the ZIP archive through REST. It also contains a SHA-256 digest for content validation.", "committedDate": "2020-06-11T01:43:59Z", "type": "commit"}, {"oid": "a63f2b30af2498f13990e0df2cd0bc312ec7d933", "url": "https://github.com/cdapio/cdap/commit/a63f2b30af2498f13990e0df2cd0bc312ec7d933", "message": "(CDAP-16918) Added REST endpoint to export all applications\n\n- A new scanApplications method is added to AppMetadataStore for scanning applications progressively.\n- A new scanApplications method is added to Store for scanning all applications with multiple small transactions\n- A new createAppDetailsArchive method is added to ApplicationLifecycleService for writing out ZIP archive that contains all application detail json files\n- A new class InstanceOperationHttpHandler is added, with a new REST API /v3/export/apps for downloading the ZIP archive through REST. It also contains a SHA-256 digest for content validation.", "committedDate": "2020-06-11T01:43:59Z", "type": "forcePushed"}]}