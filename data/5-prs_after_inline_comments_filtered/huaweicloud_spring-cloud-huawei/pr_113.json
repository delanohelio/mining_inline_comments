{"pr_number": 113, "pr_title": "Optimize some codes", "pr_createdAt": "2020-01-08T01:41:40Z", "pr_url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/113", "timeline": [{"oid": "71a18f32f4d7f99d772e4e23aff45992342f3877", "url": "https://github.com/huaweicloud/spring-cloud-huawei/commit/71a18f32f4d7f99d772e4e23aff45992342f3877", "message": "Optimize some codes", "committedDate": "2020-01-08T01:43:41Z", "type": "forcePushed"}, {"oid": "8bb5a40696836f8770bd959d68ef5719e36a61d4", "url": "https://github.com/huaweicloud/spring-cloud-huawei/commit/8bb5a40696836f8770bd959d68ef5719e36a61d4", "message": "Optimize some codes", "committedDate": "2020-01-08T01:48:52Z", "type": "commit"}, {"oid": "8bb5a40696836f8770bd959d68ef5719e36a61d4", "url": "https://github.com/huaweicloud/spring-cloud-huawei/commit/8bb5a40696836f8770bd959d68ef5719e36a61d4", "message": "Optimize some codes", "committedDate": "2020-01-08T01:48:52Z", "type": "forcePushed"}, {"oid": "082a09060b385778ffacec0e84cd84012d747bf3", "url": "https://github.com/huaweicloud/spring-cloud-huawei/commit/082a09060b385778ffacec0e84cd84012d747bf3", "message": "Fix UT failures", "committedDate": "2020-01-08T02:16:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDAzODg1Mg==", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/113#discussion_r364038852", "bodyText": "Is it better ?\nreturn serviceList ;", "author": "GuoYL123", "createdAt": "2020-01-08T02:17:56Z", "path": "spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/discovery/ServiceCombDiscoveryClient.java", "diffHunk": "@@ -73,6 +74,6 @@ public String description() {\n     } catch (ServiceCombException e) {\n       LOGGER.error(\"getServices failed\", e);\n     }\n-    return null;\n+    return Collections.emptyList();\n   }", "originalCommit": "8bb5a40696836f8770bd959d68ef5719e36a61d4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA0ODQxOQ==", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/113#discussion_r364048419", "bodyText": "done", "author": "AngLi2", "createdAt": "2020-01-08T03:13:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDAzODg1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA0Mjk5OA==", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/113#discussion_r364042998", "bodyText": "you can delete it and ut, the code never reach", "author": "GuoYL123", "createdAt": "2020-01-08T02:41:01Z", "path": "spring-cloud-huawei-common/src/main/java/com/huaweicloud/common/util/URLUtil.java", "diffHunk": "@@ -45,7 +46,7 @@\n    */\n   public static String[] splitIpPort(String url) {\n     if (url == null) {\n-      return null;\n+      return new String[0];\n     }", "originalCommit": "8bb5a40696836f8770bd959d68ef5719e36a61d4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA0ODM3Ng==", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/113#discussion_r364048376", "bodyText": "done", "author": "AngLi2", "createdAt": "2020-01-08T03:13:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA0Mjk5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA0NDYzNA==", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/113#discussion_r364044634", "bodyText": "the method name getStrings  is meaningless, we can rename it to getEnvURL or something else.", "author": "GuoYL123", "createdAt": "2020-01-08T02:50:15Z", "path": "spring-cloud-huawei-common/src/main/java/com/huaweicloud/common/util/URLUtil.java", "diffHunk": "@@ -125,45 +126,38 @@ private static String removeSlash(String url) {\n     return url;\n   }\n \n-  public static List<String> dealMutiUrl(String urls) {\n+  public static List<String> dealMultiUrl(String urls) {\n     List<String> urlList = new ArrayList<>();\n     if (StringUtils.isEmpty(urls)) {\n       return urlList;\n     }\n     if (urls != null && urls.indexOf(\",\") > 0) {\n-      for (String url : urls.split(\",\")) {\n-        if (url != null && !url.isEmpty()) {\n-          urlList.add(url);\n-        }\n-      }\n+      Arrays.stream(urls.split(\",\"))\n+          .filter(url -> !StringUtils.isEmpty(url))\n+          .forEach(urlList::add);\n     } else {\n       urlList.add(urls);\n     }\n     return urlList;\n   }\n \n   public static List<String> getEnvConfigUrl() {\n-    SystemConfiguration sysConfig = new SystemConfiguration();\n-    EnvironmentConfiguration envConfig = new EnvironmentConfiguration();\n-    String sysURL = sysConfig.getString(SYSTEM_KEY_CONFIG_CENTER);\n-    String envURL = envConfig.getString(SYSTEM_KEY_CONFIG_CENTER);\n-    if (StringUtils.isEmpty(sysURL) && StringUtils.isEmpty(envURL)) {\n-      sysURL = sysConfig.getString(SYSTEM_KEY_BOTH);\n-      envURL = envConfig.getString(SYSTEM_KEY_BOTH);\n-    }\n-    return StringUtils.isEmpty(sysURL) ? dealMutiUrl(envURL) : dealMutiUrl(sysURL);\n+    return getStrings(SYSTEM_KEY_CONFIG_CENTER);\n   }\n \n   public static List<String> getEnvServerURL() {\n+    return getStrings(SYSTEM_KEY_SERVICE_CENTER);\n+  }\n+\n+  private static List<String> getStrings(String systemServer) {", "originalCommit": "8bb5a40696836f8770bd959d68ef5719e36a61d4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA0ODM5MA==", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/113#discussion_r364048390", "bodyText": "done", "author": "AngLi2", "createdAt": "2020-01-08T03:13:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA0NDYzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDUyMzkzNA==", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/113#discussion_r364523934", "bodyText": "It seems not change. Is it necessary to delete {} ?", "author": "GuoYL123", "createdAt": "2020-01-09T01:31:40Z", "path": "spring-cloud-huawei-swagger/src/main/java/com/huaweicloud/swagger/ServiceCombSwaggerHandlerImpl.java", "diffHunk": "@@ -113,19 +114,18 @@ public void init(String appName, String serviceName) {\n           }\n         });\n         if (withJavaChassis) {\n-          filteSwagger(temSwagger, fullClassName);\n+          filterSwagger(temSwagger, fullClassName);\n           if (CollectionUtils.isEmpty(temSwagger.getPaths())) {\n             continue;\n           }\n           //add text/plain for string\n           List contentTypeList = Arrays.asList(\"text/plain\", \"application/json\");\n-          temSwagger.getPaths().forEach((path, operation) -> {\n-            operation.getOperations().forEach(api -> {\n-              api.setConsumes(contentTypeList);\n-              api.setProduces(contentTypeList);\n-              api.setTags(Arrays.asList(className));\n-            });\n-          });\n+          temSwagger.getPaths().forEach((path, operation) ->\n+              operation.getOperations().forEach(api -> {\n+                api.setConsumes(contentTypeList);\n+                api.setProduces(contentTypeList);\n+                api.setTags(Arrays.asList(className));\n+              }));", "originalCommit": "dad99a9eed443152fd876b40e349c2640f1d31b4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDUyODk3Mg==", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/113#discussion_r364528972", "bodyText": "Idea suggests to delete { } for single statement in anonymous functions to simplify code block. The { } from lambda is not as meaningful as those in condition or loop statements. However, I think either is fine in this situation.\nAny suggestions for keeping or removing { }?", "author": "AngLi2", "createdAt": "2020-01-09T01:57:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDUyMzkzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDUzOTU3MA==", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/113#discussion_r364539570", "bodyText": "remove {} and don't put multiple loops on one line, seems easier to read", "author": "GuoYL123", "createdAt": "2020-01-09T02:54:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDUyMzkzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTA1Mjk0NQ==", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/113#discussion_r365052945", "bodyText": "done, PTAL", "author": "AngLi2", "createdAt": "2020-01-10T02:49:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDUyMzkzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDUyMzk2OA==", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/113#discussion_r364523968", "bodyText": "the same as above", "author": "GuoYL123", "createdAt": "2020-01-09T01:31:52Z", "path": "spring-cloud-huawei-swagger/src/main/java/com/huaweicloud/swagger/ServiceCombSwaggerHandlerImpl.java", "diffHunk": "@@ -161,21 +161,19 @@ public void registerSwagger(String microserviceId, List<String> schemaIds) {\n    * @param temSwagger\n    * @param className\n    */\n-  private void filteSwagger(Swagger temSwagger, String className) {\n+  private void filterSwagger(Swagger temSwagger, String className) {\n     Set<String> abandonedList = new HashSet<>();\n     Set<String> methodFilter = new HashSet<>();\n-    temSwagger.getPaths().forEach((k, v) -> {\n-      v.getOperations().forEach(method -> {\n-        String processOptId = method.getOperationId();\n-        processOptId = processOptId.substring(0, processOptId.indexOf(\"Using\"));\n-        if (methodFilter.contains(processOptId)) {\n-          abandonedList.add(k);\n-          return;\n-        }\n-        methodFilter.add(processOptId);\n-        method.setOperationId(processOptId);\n-      });\n-    });\n+    temSwagger.getPaths().forEach((k, v) -> v.getOperations().forEach(method -> {\n+      String processOptId = method.getOperationId();\n+      processOptId = processOptId.substring(0, processOptId.indexOf(\"Using\"));\n+      if (methodFilter.contains(processOptId)) {\n+        abandonedList.add(k);\n+        return;\n+      }\n+      methodFilter.add(processOptId);\n+      method.setOperationId(processOptId);\n+    }));", "originalCommit": "dad99a9eed443152fd876b40e349c2640f1d31b4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTA1MjkxNA==", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/113#discussion_r365052914", "bodyText": "done", "author": "AngLi2", "createdAt": "2020-01-10T02:48:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDUyMzk2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDUyNDExNw==", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/113#discussion_r364524117", "bodyText": "the same as above", "author": "GuoYL123", "createdAt": "2020-01-09T01:32:35Z", "path": "spring-cloud-huawei-swagger/src/main/java/com/huaweicloud/swagger/ServiceCombSwaggerHandlerImpl.java", "diffHunk": "@@ -204,9 +202,7 @@ private void registerSwaggerSync(String microserviceId, List<String> schemaIds)\n   }\n \n   private void registerSwaggerAsync(String microserviceId, List<String> schemaIds) {\n-    Executors.newSingleThreadExecutor().execute(() -> {\n-      registerSwaggerSync(microserviceId, schemaIds);\n-    });\n+    Executors.newSingleThreadExecutor().execute(() -> registerSwaggerSync(microserviceId, schemaIds));", "originalCommit": "dad99a9eed443152fd876b40e349c2640f1d31b4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTA1MzAwMg==", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/113#discussion_r365053002", "bodyText": "done", "author": "AngLi2", "createdAt": "2020-01-10T02:49:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDUyNDExNw=="}], "type": "inlineReview"}, {"oid": "dd6aa5a2e8f9fa8b77057d78c217f131d581942b", "url": "https://github.com/huaweicloud/spring-cloud-huawei/commit/dd6aa5a2e8f9fa8b77057d78c217f131d581942b", "message": "Modify codes according to code review suggestions", "committedDate": "2020-01-09T01:41:48Z", "type": "commit"}, {"oid": "dd6aa5a2e8f9fa8b77057d78c217f131d581942b", "url": "https://github.com/huaweicloud/spring-cloud-huawei/commit/dd6aa5a2e8f9fa8b77057d78c217f131d581942b", "message": "Modify codes according to code review suggestions", "committedDate": "2020-01-09T01:41:48Z", "type": "forcePushed"}, {"oid": "db585fbb6633e7f61af512c557b263737b8f13cc", "url": "https://github.com/huaweicloud/spring-cloud-huawei/commit/db585fbb6633e7f61af512c557b263737b8f13cc", "message": "Fix according to review suggestions: start a new line in loop statements in lambdas", "committedDate": "2020-01-10T02:48:13Z", "type": "commit"}]}