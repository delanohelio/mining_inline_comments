{"pr_number": 231, "pr_title": "avoid heard beat too many time in period of time", "pr_createdAt": "2020-07-16T01:08:51Z", "pr_url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/231", "timeline": [{"oid": "6cb38310971034760d7532bafbc489347e678b0b", "url": "https://github.com/huaweicloud/spring-cloud-huawei/commit/6cb38310971034760d7532bafbc489347e678b0b", "message": "avoid request too many time in period of time", "committedDate": "2020-07-16T01:06:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU0NjMzMw==", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/231#discussion_r455546333", "bodyText": "I found heartbeat is call in an scheduler. And don't understand why this can 'avoid too many heartbeat.\n ScheduledFuture currentTask = this.scheduler\n        .scheduleWithFixedDelay(() -> {", "author": "liubao68", "createdAt": "2020-07-16T06:47:08Z", "path": "spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/client/ServiceCombClient.java", "diffHunk": "@@ -411,12 +411,13 @@ public HeardBeatStatus heartbeat(HeartbeatRequest heartbeatRequest) throws Servi\n       if (response.getStatusCode() == HttpStatus.SC_OK) {\n         LOGGER.debug(\"heartbeat success.\");\n         return HeardBeatStatus.SUCCESS;\n-      } else {\n+      } else if (response.getStatusCode() == HttpStatus.SC_BAD_REQUEST) {", "originalCommit": "6cb38310971034760d7532bafbc489347e678b0b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTczMDY4MQ==", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/231#discussion_r455730681", "bodyText": "in some case it trigger flow limiting:\nif heard beat failed , will retry -> retry success, heard beat -> heard beat failed , will retry .\nit's a loop.\nso I add a condition : retry only if the service does not exist", "author": "GuoYL123", "createdAt": "2020-07-16T11:55:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU0NjMzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU0Njc0Ng==", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/231#discussion_r455546746", "bodyText": "This exception is caught in the method, throw RemoteOperationException is more direct.", "author": "liubao68", "createdAt": "2020-07-16T06:48:05Z", "path": "spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/client/ServiceCombClient.java", "diffHunk": "@@ -411,12 +411,13 @@ public HeardBeatStatus heartbeat(HeartbeatRequest heartbeatRequest) throws Servi\n       if (response.getStatusCode() == HttpStatus.SC_OK) {\n         LOGGER.debug(\"heartbeat success.\");\n         return HeardBeatStatus.SUCCESS;\n-      } else {\n+      } else if (response.getStatusCode() == HttpStatus.SC_BAD_REQUEST) {\n         LOGGER.error(\n             \"heartbeat to service center failed. status:\" + response.getStatusCode() + \"; message:\"\n                 + response.getStatusMessage() + \"; content:\" + response.getContent());\n         return HeardBeatStatus.FAILED;\n       }\n+      throw new IOException();", "originalCommit": "6cb38310971034760d7532bafbc489347e678b0b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTcyODMxOQ==", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/231#discussion_r455728319", "bodyText": "The purpose of throwing an exception here is to trigger toggle() to back off.", "author": "GuoYL123", "createdAt": "2020-07-16T11:50:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU0Njc0Ng=="}], "type": "inlineReview"}, {"oid": "d1c81756705cb3fa19627feb8f9fa97601fdaa26", "url": "https://github.com/huaweicloud/spring-cloud-huawei/commit/d1c81756705cb3fa19627feb8f9fa97601fdaa26", "message": "avoid print log when micro-service not exist", "committedDate": "2020-07-16T11:48:09Z", "type": "commit"}]}