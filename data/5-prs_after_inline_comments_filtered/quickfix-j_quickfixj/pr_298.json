{"pr_number": 298, "pr_title": "Support ContinueInitializationOnError for Acceptors", "pr_createdAt": "2020-06-08T10:49:25Z", "pr_url": "https://github.com/quickfix-j/quickfixj/pull/298", "timeline": [{"oid": "95d2a55083a32d6528aa3175f81bea0b3a7ed193", "url": "https://github.com/quickfix-j/quickfixj/commit/95d2a55083a32d6528aa3175f81bea0b3a7ed193", "message": "Introduced method SessionConnector.isContinueInitOnError()\n to be used by AbstractSocketInitiator and AbstractSocketAcceptor.", "committedDate": "2020-06-08T10:26:08Z", "type": "commit"}, {"oid": "cbb8fbe7cb5d5c68016535241d9d94e9599d3155", "url": "https://github.com/quickfix-j/quickfixj/commit/cbb8fbe7cb5d5c68016535241d9d94e9599d3155", "message": "Changed AbstractSocketAcceptor.createSessions() to check if\n `continueInitOnError` is active.\n\n(Not a big fan of catching general `Throwable` but made code as similar\nas possible to AbstractSocketInitiator. Could be changed later.)", "committedDate": "2020-06-08T10:31:25Z", "type": "commit"}, {"oid": "9123fd9f791680ae14c155a9cc52c8e8d5fc4565", "url": "https://github.com/quickfix-j/quickfixj/commit/9123fd9f791680ae14c155a9cc52c8e8d5fc4565", "message": "Added test to MultiAcceptorTest and converted test to JUnit4 style.", "committedDate": "2020-06-08T10:36:30Z", "type": "commit"}, {"oid": "25aac9327de343aa336fa2ea73a55433372d4a7a", "url": "https://github.com/quickfix-j/quickfixj/commit/25aac9327de343aa336fa2ea73a55433372d4a7a", "message": "Added short note to configuration.html.", "committedDate": "2020-06-08T10:46:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYwOTk2Ng==", "url": "https://github.com/quickfix-j/quickfixj/pull/298#discussion_r436609966", "bodyText": "Not a big fan of catching general Throwable but made code as similar as possible to AbstractSocketInitiator. Could be changed later.", "author": "chrjohn", "createdAt": "2020-06-08T10:50:17Z", "path": "quickfixj-core/src/main/java/quickfix/mina/acceptor/AbstractSocketAcceptor.java", "diffHunk": "@@ -227,11 +229,20 @@ private void createSessions(SessionSettings settings) throws ConfigError, FieldC\n             }\n \n             if (connectionType.equals(SessionFactory.ACCEPTOR_CONNECTION_TYPE)) {\n-                AcceptorSocketDescriptor descriptor = getAcceptorSocketDescriptor(settings, sessionID);\n-                if (!isTemplate) {\n-                    Session session = sessionFactory.create(sessionID, settings);\n-                    descriptor.acceptSession(session);\n-                    allSessions.put(sessionID, session);\n+                try {\n+                    AcceptorSocketDescriptor descriptor = getAcceptorSocketDescriptor(settings, sessionID);\n+                    if (!isTemplate) {\n+                        Session session = sessionFactory.create(sessionID, settings);\n+                        descriptor.acceptSession(session);\n+                        allSessions.put(sessionID, session);\n+                    }\n+                } catch (Throwable t) {", "originalCommit": "25aac9327de343aa336fa2ea73a55433372d4a7a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc0Mzg5Nw==", "url": "https://github.com/quickfix-j/quickfixj/pull/298#discussion_r436743897", "bodyText": "assertFalse(acceptorSessions.contains(session2)); would be good.", "author": "the-thing", "createdAt": "2020-06-08T14:16:32Z", "path": "quickfixj-core/src/test/java/quickfix/MultiAcceptorTest.java", "diffHunk": "@@ -111,6 +129,26 @@ public void testMessageSentOnWrongAcceptor() throws Exception {\n         }\n     }\n \n+    @Test\n+    public void testContinueInitializationOnError() throws Exception {\n+        testAcceptorApplication = new TestAcceptorApplication(3);\n+        int freePort1 = AvailablePortFinder.getNextAvailable();\n+        int freePort2 = AvailablePortFinder.getNextAvailable();\n+        int freePort3 = AvailablePortFinder.getNextAvailable();\n+\n+        Acceptor acceptor = createAcceptor(freePort1, freePort2, freePort3, true);\n+        acceptor.start();\n+\n+        List<SessionID> acceptorSessions = acceptor.getSessions();\n+        assertEquals(2, acceptorSessions.size());\n+        SessionID session1 = new SessionID(FixVersions.BEGINSTRING_FIX42, \"ACCEPTOR-\" + 1, \"INITIATOR\");\n+        SessionID session3 = new SessionID(FixVersions.BEGINSTRING_FIX42, \"ACCEPTOR-\" + 3, \"INITIATOR\");\n+        assertTrue(acceptorSessions.contains(session1));", "originalCommit": "25aac9327de343aa336fa2ea73a55433372d4a7a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgyMTY1OA==", "url": "https://github.com/quickfix-j/quickfixj/pull/298#discussion_r436821658", "bodyText": "Thanks, done.", "author": "chrjohn", "createdAt": "2020-06-08T16:05:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc0Mzg5Nw=="}], "type": "inlineReview"}, {"oid": "e71ff79a30f01fa4bb3a71a4a796157c69ba2a7f", "url": "https://github.com/quickfix-j/quickfixj/commit/e71ff79a30f01fa4bb3a71a4a796157c69ba2a7f", "message": "Small addition to unit test.", "committedDate": "2020-06-08T16:04:38Z", "type": "commit"}]}