{"pr_number": 11334, "pr_title": "xp-tracker: Add Time-To-Level to Canvas And XP Tracker", "pr_createdAt": "2020-04-21T01:01:43Z", "pr_url": "https://github.com/runelite/runelite/pull/11334", "timeline": [{"oid": "50d13a39b7941b1d163ef4c252d898c6f2262130", "url": "https://github.com/runelite/runelite/commit/50d13a39b7941b1d163ef4c252d898c6f2262130", "message": "xp-tracker: fix xp/hr config label & progress bar label names", "committedDate": "2020-04-21T20:22:31Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE2OTk1Ng==", "url": "https://github.com/runelite/runelite/pull/11334#discussion_r415169956", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            \t;\n          \n          \n            \n            \t;", "author": "Nightfirecat", "createdAt": "2020-04-25T23:46:43Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/xptracker/XpProgressBarLabel.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright (c) 2020, Anthony <https://github.com/while-loop>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.xptracker;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+\n+import java.util.function.Function;\n+\n+import static net.runelite.client.plugins.xptracker.XpInfoBox.TWO_DECIMAL_FORMAT;\n+\n+@Getter\n+@AllArgsConstructor\n+public enum XpProgressBarLabel\n+{\n+\tPERCENTAGE((snap) -> TWO_DECIMAL_FORMAT.format(snap.getSkillProgressToGoal()) + \"%\"),\n+\tTIME_TO_LEVEL(XpSnapshotSingle::getTimeTillGoal),\n+\n+\t;", "originalCommit": "8310f17d4e2f2f65b0aa3c25e06cc5d05d4226c2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "347bb9f958b814cd3ffe14527801e703f584c873", "url": "https://github.com/runelite/runelite/commit/347bb9f958b814cd3ffe14527801e703f584c873", "message": "xp-tracker: add option to show ttl or percentage til goal #8373", "committedDate": "2020-04-28T21:15:53Z", "type": "forcePushed"}, {"oid": "7987f26fce0fc30751f3cbe29b8ffe23fa6d750f", "url": "https://github.com/runelite/runelite/commit/7987f26fce0fc30751f3cbe29b8ffe23fa6d750f", "message": "xp-tracker: add option to show ttl or percentage til goal #8373", "committedDate": "2020-04-29T00:16:54Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAxNTIyOQ==", "url": "https://github.com/runelite/runelite/pull/11334#discussion_r417015229", "bodyText": "Can't you simply use getTimeToLevel? It already contains formatted string", "author": "deathbeam", "createdAt": "2020-04-29T01:10:17Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/xptracker/XpInfoBox.java", "diffHunk": "@@ -304,13 +301,39 @@ else if (paused && !skillPaused)\n \t\t\tpauseSkill.setText(\"Pause\");\n \t\t}\n \n+\t\t// Update information labels\n \t\t// Update exp per hour separately, every time (not only when there's an update)\n-\t\texpHour.setText(htmlLabel(\"XP/Hour: \", xpSnapshotSingle.getXpPerHour()));\n+\t\ttopLeftStat.setText(htmlLabel(xpTrackerConfig.xpPanelLabel1(), xpSnapshotSingle));\n+\t\ttopRightStat.setText(htmlLabel(xpTrackerConfig.xpPanelLabel2(), xpSnapshotSingle));\n+\t\tbottomLeftStat.setText(htmlLabel(xpTrackerConfig.xpPanelLabel3(), xpSnapshotSingle));\n+\t\tbottomRightStat.setText(htmlLabel(xpTrackerConfig.xpPanelLabel4(), xpSnapshotSingle));\n+\t}\n+\n+\tstatic String htmlLabel(XpPanelLabel panelLabel, XpSnapshotSingle xpSnapshotSingle)\n+\t{\n+\t\tString key = panelLabel.getActionKey(xpSnapshotSingle) + \": \";\n+\t\tif (panelLabel == XpPanelLabel.TIME_TO_LEVEL)\n+\t\t{\n+\t\t\tlong remainingSeconds = xpSnapshotSingle.getSecondsTillGoal();\n+\t\t\tlong durationHours = remainingSeconds / (60 * 60);\n+\t\t\tlong durationMinutes = (remainingSeconds % (60 * 60)) / 60;\n+\t\t\tlong durationSeconds = remainingSeconds % 60;\n+\n+\t\t\tString ttl = String.format(\"%02d:%02d:%02d\", durationHours, durationMinutes, durationSeconds);", "originalCommit": "1b399bcf8ba6b8b7c71116759c2fdc2e700b6088", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAyMDMyNw==", "url": "https://github.com/runelite/runelite/pull/11334#discussion_r417020327", "bodyText": "That was original take, but that contains the string \"X days hh:mm:ss\" and that string would be too long and continue on the next line.\nI chose to keep it hh:mm:ss for a fixed len string.", "author": "while-loop", "createdAt": "2020-04-29T01:31:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAxNTIyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAyMTI1Mw==", "url": "https://github.com/runelite/runelite/pull/11334#discussion_r417021253", "bodyText": "Then maybe just move this to XpStateSingle and just reuse existing logic there (e.g maybe instead of adding secondsTillGoal simply add timeTillGoalShort)", "author": "deathbeam", "createdAt": "2020-04-29T01:36:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAxNTIyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAxNTUwMQ==", "url": "https://github.com/runelite/runelite/pull/11334#discussion_r417015501", "bodyText": "I don't think we need to do this. Imo #8373 can be closed with previous commits (as there will be possibility to display TTL, i don't think it needs to be on progress bar as long as its somewhere)", "author": "deathbeam", "createdAt": "2020-04-29T01:11:20Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/xptracker/XpProgressBarLabel.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright (c) 2020, Anthony <https://github.com/while-loop>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.xptracker;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+\n+import java.util.function.Function;\n+\n+import static net.runelite.client.plugins.xptracker.XpInfoBox.TWO_DECIMAL_FORMAT;\n+\n+@Getter\n+@AllArgsConstructor\n+public enum XpProgressBarLabel", "originalCommit": "7987f26fce0fc30751f3cbe29b8ffe23fa6d750f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAxNzQwNA==", "url": "https://github.com/runelite/runelite/pull/11334#discussion_r417017404", "bodyText": "Disagree. I like the Progress Bar option.", "author": "larkable", "createdAt": "2020-04-29T01:19:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAxNTUwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAyNzE3OQ==", "url": "https://github.com/runelite/runelite/pull/11334#discussion_r417027179", "bodyText": "I also like the progress bar option. That gives me an extra location where I can place the TTL metric and use the XpInfoBox labels for other stats.", "author": "while-loop", "createdAt": "2020-04-29T02:01:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAxNTUwMQ=="}], "type": "inlineReview"}, {"oid": "14cffa13fc3c6a99768174bbd5b5e15823c4e0f7", "url": "https://github.com/runelite/runelite/commit/14cffa13fc3c6a99768174bbd5b5e15823c4e0f7", "message": "xp-tracker: add option to show ttl or percentage til goal #8373", "committedDate": "2020-04-29T02:04:14Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEzMTIzNQ==", "url": "https://github.com/runelite/runelite/pull/11334#discussion_r417131235", "bodyText": "Why is this not using the value func like rest?", "author": "deathbeam", "createdAt": "2020-04-29T07:55:43Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/xptracker/XpInfoBox.java", "diffHunk": "@@ -304,13 +301,33 @@ else if (paused && !skillPaused)\n \t\t\tpauseSkill.setText(\"Pause\");\n \t\t}\n \n+\t\t// Update information labels\n \t\t// Update exp per hour separately, every time (not only when there's an update)\n-\t\texpHour.setText(htmlLabel(\"XP/Hour: \", xpSnapshotSingle.getXpPerHour()));\n+\t\ttopLeftStat.setText(htmlLabel(xpTrackerConfig.xpPanelLabel1(), xpSnapshotSingle));\n+\t\ttopRightStat.setText(htmlLabel(xpTrackerConfig.xpPanelLabel2(), xpSnapshotSingle));\n+\t\tbottomLeftStat.setText(htmlLabel(xpTrackerConfig.xpPanelLabel3(), xpSnapshotSingle));\n+\t\tbottomRightStat.setText(htmlLabel(xpTrackerConfig.xpPanelLabel4(), xpSnapshotSingle));\n+\t}\n+\n+\tstatic String htmlLabel(XpPanelLabel panelLabel, XpSnapshotSingle xpSnapshotSingle)\n+\t{\n+\t\tString key = panelLabel.getActionKey(xpSnapshotSingle) + \": \";\n+\t\tif (panelLabel == XpPanelLabel.TIME_TO_LEVEL)", "originalCommit": "3d93c59dc7b9bc7d000a8c7488f3e36a4accfdc5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU2NDI0Nw==", "url": "https://github.com/runelite/runelite/pull/11334#discussion_r417564247", "bodyText": "10-4. TTL was the edge case that used a String and valueFunc expects an int.\nI'll change XpPanelLabels' valueFunc to return an already formatted String to keep things consistent.", "author": "while-loop", "createdAt": "2020-04-29T19:39:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEzMTIzNQ=="}], "type": "inlineReview"}, {"oid": "5011c894f8fabf1e2e0122e4977783b206bd02c9", "url": "https://github.com/runelite/runelite/commit/5011c894f8fabf1e2e0122e4977783b206bd02c9", "message": "xp-tracker: add option to show ttl or percentage til goal #8373", "committedDate": "2020-04-29T22:25:07Z", "type": "forcePushed"}, {"oid": "41db457f51314697dcc51aa4451db5ac01c42c71", "url": "https://github.com/runelite/runelite/commit/41db457f51314697dcc51aa4451db5ac01c42c71", "message": "xp-tracker: add option to show ttl or percentage til goal #8373", "committedDate": "2020-04-29T22:28:32Z", "type": "forcePushed"}, {"oid": "1bfae89390316bc40436c5defb548cff5e184242", "url": "https://github.com/runelite/runelite/commit/1bfae89390316bc40436c5defb548cff5e184242", "message": "xp-tracker: add option to show ttl or percentage til goal #8373", "committedDate": "2020-04-29T22:39:33Z", "type": "forcePushed"}, {"oid": "d5d43b97306f067d828775fc19239cb6995674b0", "url": "https://github.com/runelite/runelite/commit/d5d43b97306f067d828775fc19239cb6995674b0", "message": "xp-tracker: add option to show ttl or percentage til goal #8373", "committedDate": "2020-04-30T15:56:28Z", "type": "forcePushed"}, {"oid": "3cb2f68725c1e33b1f130f067032b9dc56137a41", "url": "https://github.com/runelite/runelite/commit/3cb2f68725c1e33b1f130f067032b9dc56137a41", "message": "xp-tracker: add configurable labels to XpInfoBox\n\nThis commit allows users to change the XpInfoBox to which ever xp stat is available in the config menu. This also adds TTL in the form of hh:mm:ss to the info box", "committedDate": "2020-05-02T17:00:34Z", "type": "commit"}, {"oid": "240b14453f018ddc7bf85ebd0ad68bd03391f899", "url": "https://github.com/runelite/runelite/commit/240b14453f018ddc7bf85ebd0ad68bd03391f899", "message": "xp-tracker: add more configurable labels to canvas overlay", "committedDate": "2020-05-02T17:00:35Z", "type": "commit"}, {"oid": "cb4542469b3b43985df1f6346e1fbf3962172741", "url": "https://github.com/runelite/runelite/commit/cb4542469b3b43985df1f6346e1fbf3962172741", "message": "xp-tracker: add option to show ttl or percentage til goal", "committedDate": "2020-05-02T17:01:22Z", "type": "commit"}, {"oid": "cb4542469b3b43985df1f6346e1fbf3962172741", "url": "https://github.com/runelite/runelite/commit/cb4542469b3b43985df1f6346e1fbf3962172741", "message": "xp-tracker: add option to show ttl or percentage til goal", "committedDate": "2020-05-02T17:01:22Z", "type": "forcePushed"}]}