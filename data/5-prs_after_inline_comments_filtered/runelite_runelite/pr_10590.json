{"pr_number": 10590, "pr_title": " loot tracker: store aggregated drops", "pr_createdAt": "2020-01-12T02:29:20Z", "pr_url": "https://github.com/runelite/runelite/pull/10590", "timeline": [{"oid": "d839b910a9446eec405aa26071261f535a43c7c7", "url": "https://github.com/runelite/runelite/commit/d839b910a9446eec405aa26071261f535a43c7c7", "message": "loot controller: publish loot to redis", "committedDate": "2020-01-12T02:30:29Z", "type": "forcePushed"}, {"oid": "2c50c759446f44093b87917966c24b8b7d7208cd", "url": "https://github.com/runelite/runelite/commit/2c50c759446f44093b87917966c24b8b7d7208cd", "message": "loot controller: publish loot to redis", "committedDate": "2020-01-12T03:09:36Z", "type": "forcePushed"}, {"oid": "6f76bce5cce98f054dae0fef17e55e28eb5b6e3f", "url": "https://github.com/runelite/runelite/commit/6f76bce5cce98f054dae0fef17e55e28eb5b6e3f", "message": "loot controller: publish loot to redis", "committedDate": "2020-01-12T03:14:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjExNjM1NA==", "url": "https://github.com/runelite/runelite/pull/10590#discussion_r366116354", "bodyText": "maybe we should call this Kills or LootAggregate?", "author": "abextm", "createdAt": "2020-01-14T01:39:33Z", "path": "http-api/src/main/java/net/runelite/http/api/loottracker/Kill.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright (c) 2020, Adam <Adam@sigterm.info>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.http.api.loottracker;\n+\n+import java.time.Instant;\n+import java.util.Collection;\n+import lombok.AllArgsConstructor;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+\n+@Data\n+@AllArgsConstructor\n+@NoArgsConstructor\n+public class Kill", "originalCommit": "6f76bce5cce98f054dae0fef17e55e28eb5b6e3f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjExNjczMQ==", "url": "https://github.com/runelite/runelite/pull/10590#discussion_r366116731", "bodyText": "this should probably reflect the type its returning", "author": "abextm", "createdAt": "2020-01-14T01:41:24Z", "path": "http-service/src/main/java/net/runelite/http/service/loottracker/LootTrackerController.java", "diffHunk": "@@ -64,10 +74,15 @@ public void storeLootRecord(HttpServletRequest request, HttpServletResponse resp\n \n \t\tservice.store(records, e.getUser());\n \t\tresponse.setStatus(HttpStatusCodes.STATUS_CODE_OK);\n+\n+\t\ttry (Jedis jedis = redisPool.getResource())\n+\t\t{\n+\t\t\tjedis.publish(\"drops\", GSON.toJson(records));\n+\t\t}\n \t}\n \n \t@GetMapping\n-\tpublic Collection<LootRecord> getLootRecords(HttpServletRequest request, HttpServletResponse response, @RequestParam(value = \"count\", defaultValue = \"1024\") int count, @RequestParam(value = \"start\", defaultValue = \"0\") int start) throws IOException\n+\tpublic Collection<Kill> getLootRecords(HttpServletRequest request, HttpServletResponse response, @RequestParam(value = \"count\", defaultValue = \"1024\") int count, @RequestParam(value = \"start\", defaultValue = \"0\") int start) throws IOException", "originalCommit": "6f76bce5cce98f054dae0fef17e55e28eb5b6e3f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjEyMTg2MQ==", "url": "https://github.com/runelite/runelite/pull/10590#discussion_r366121861", "bodyText": "this class is dead", "author": "abextm", "createdAt": "2020-01-14T02:05:27Z", "path": "http-service/src/main/java/net/runelite/http/service/loottracker/LootTrackerRecord.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright (c) 2020, Adam <Adam@sigterm.info>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.http.service.loottracker;\n+\n+import lombok.Data;\n+import net.runelite.http.api.loottracker.LootRecordType;\n+\n+@Data\n+class LootTrackerRecord", "originalCommit": "6f76bce5cce98f054dae0fef17e55e28eb5b6e3f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "16580ae8541367e44ef087e4eba4be25740b2728", "url": "https://github.com/runelite/runelite/commit/16580ae8541367e44ef087e4eba4be25740b2728", "message": "loot controller: publish loot to redis", "committedDate": "2020-01-19T02:14:41Z", "type": "forcePushed"}, {"oid": "723ecc8499915d0c47630dbad6a4ce3b45159da3", "url": "https://github.com/runelite/runelite/commit/723ecc8499915d0c47630dbad6a4ce3b45159da3", "message": "loot tracker: store aggregated drops\n\nThis modifies both the service and the client plugin to no longer store\nloot per-kill, with the exception of the current sessions kill log. The\namount of loot data returned now from the service defaults to the last\n1024 unique events", "committedDate": "2020-01-19T02:28:40Z", "type": "commit"}, {"oid": "304f4d6b2a88620654025c610b3e5ad1d2545bf6", "url": "https://github.com/runelite/runelite/commit/304f4d6b2a88620654025c610b3e5ad1d2545bf6", "message": "loot controller: publish loot to redis", "committedDate": "2020-01-19T02:28:41Z", "type": "commit"}, {"oid": "304f4d6b2a88620654025c610b3e5ad1d2545bf6", "url": "https://github.com/runelite/runelite/commit/304f4d6b2a88620654025c610b3e5ad1d2545bf6", "message": "loot controller: publish loot to redis", "committedDate": "2020-01-19T02:28:41Z", "type": "forcePushed"}]}