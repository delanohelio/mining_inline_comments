{"pr_number": 11188, "pr_title": "Add support for resizable overlays", "pr_createdAt": "2020-04-03T23:29:45Z", "pr_url": "https://github.com/runelite/runelite/pull/11188", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM4NzE4Ng==", "url": "https://github.com/runelite/runelite/pull/11188#discussion_r403387186", "bodyText": "I think this can just be deleted", "author": "Adam-", "createdAt": "2020-04-03T23:48:51Z", "path": "runelite-client/src/main/java/net/runelite/client/ui/overlay/OverlayPanel.java", "diffHunk": "@@ -0,0 +1,105 @@\n+/*\n+ * Copyright (c) 2018, Tomas Slusny <slusnucky@gmail.com>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.ui.overlay;\n+\n+import java.awt.Dimension;\n+import java.awt.Graphics2D;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import lombok.Getter;\n+import lombok.Setter;\n+import net.runelite.client.plugins.Plugin;\n+import net.runelite.client.ui.FontManager;\n+import net.runelite.client.ui.overlay.components.ComponentConstants;\n+import net.runelite.client.ui.overlay.components.PanelComponent;\n+\n+@Getter\n+@Setter\n+public abstract class OverlayPanel extends Overlay\n+{\n+\tprivate final PanelComponent panel = new PanelComponent();\n+\tprivate Point preferredLocation;\n+\tprivate Dimension preferredSize;\n+\tprivate OverlayPosition preferredPosition;\n+\tprivate Rectangle bounds = new Rectangle();\n+\tprivate OverlayPosition position = OverlayPosition.TOP_LEFT;\n+\tprivate OverlayPriority priority = OverlayPriority.NONE;\n+\tprivate OverlayLayer layer = OverlayLayer.UNDER_WIDGETS;\n+\tprivate boolean clearChildren = true;\n+\tprivate boolean dynamicFont = false;\n+\n+\tprotected OverlayPanel()\n+\t{\n+\t\tsuper();\n+\t}\n+\n+\tprotected OverlayPanel(Plugin plugin)\n+\t{\n+\t\tsuper(plugin);\n+\t}\n+\n+\t/**\n+\t * Overlay name, used for saving the overlay, needs to be unique\n+\t * @return overlay name\n+\t */\n+\tpublic String getName()", "originalCommit": "a5d917e1296b60bfe356c5dc0d737235241baec1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "59bb2727dad836c9daaaea76847a6f489c793632", "url": "https://github.com/runelite/runelite/commit/59bb2727dad836c9daaaea76847a6f489c793632", "message": "Make overlays use OverlayPanel instead of Overlay\n\nMake overlays that were previously using PanelComponent use\nOverlayPanel.\n\nSigned-off-by: Tomas Slusny <slusnucky@gmail.com>", "committedDate": "2020-04-03T23:50:39Z", "type": "forcePushed"}, {"oid": "29f2ca8a9cfde4c2bedfa246239e86955feaf34a", "url": "https://github.com/runelite/runelite/commit/29f2ca8a9cfde4c2bedfa246239e86955feaf34a", "message": "Make overlays use OverlayPanel instead of Overlay\n\nMake overlays that were previously using PanelComponent use\nOverlayPanel.\n\nSigned-off-by: Tomas Slusny <slusnucky@gmail.com>", "committedDate": "2020-04-04T00:03:30Z", "type": "forcePushed"}, {"oid": "f940ed0d022a459b320129ed673bcdbf8c2df6c9", "url": "https://github.com/runelite/runelite/commit/f940ed0d022a459b320129ed673bcdbf8c2df6c9", "message": "Make overlays use OverlayPanel instead of Overlay\n\nMake overlays that were previously using PanelComponent use\nOverlayPanel.\n\nSigned-off-by: Tomas Slusny <slusnucky@gmail.com>", "committedDate": "2020-04-04T00:04:05Z", "type": "forcePushed"}, {"oid": "086005a25331da50de5b6677175f6e21414241ea", "url": "https://github.com/runelite/runelite/commit/086005a25331da50de5b6677175f6e21414241ea", "message": "Make overlays use OverlayPanel instead of Overlay\n\nMake overlays that were previously using PanelComponent use\nOverlayPanel.\n\nSigned-off-by: Tomas Slusny <slusnucky@gmail.com>", "committedDate": "2020-04-04T00:32:36Z", "type": "forcePushed"}, {"oid": "afebc42eeff068a1d941c0e053d4c014e02b28e5", "url": "https://github.com/runelite/runelite/commit/afebc42eeff068a1d941c0e053d4c014e02b28e5", "message": "Make overlays use OverlayPanel instead of Overlay\n\nMake overlays that were previously using PanelComponent use\nOverlayPanel.\n\nSigned-off-by: Tomas Slusny <slusnucky@gmail.com>", "committedDate": "2020-04-04T00:36:51Z", "type": "forcePushed"}, {"oid": "a582dc84b13c666fefe819976183c98fa6a1adff", "url": "https://github.com/runelite/runelite/commit/a582dc84b13c666fefe819976183c98fa6a1adff", "message": "Make overlays use OverlayPanel instead of Overlay\n\nMake overlays that were previously using PanelComponent use\nOverlayPanel.\n\nSigned-off-by: Tomas Slusny <slusnucky@gmail.com>", "committedDate": "2020-04-04T15:41:05Z", "type": "forcePushed"}, {"oid": "a72756abf0c0ee0f66981aa93123c0006c8be688", "url": "https://github.com/runelite/runelite/commit/a72756abf0c0ee0f66981aa93123c0006c8be688", "message": "Make overlays use OverlayPanel instead of Overlay\n\nMake overlays that were previously using PanelComponent use\nOverlayPanel.\n\nSigned-off-by: Tomas Slusny <slusnucky@gmail.com>", "committedDate": "2020-04-04T15:41:24Z", "type": "forcePushed"}, {"oid": "9fff41dab37d7cc7f96365198dc4b3f2c797a8ca", "url": "https://github.com/runelite/runelite/commit/9fff41dab37d7cc7f96365198dc4b3f2c797a8ca", "message": "Make overlays use OverlayPanel instead of Overlay\n\nMake overlays that were previously using PanelComponent use\nOverlayPanel.\n\nSigned-off-by: Tomas Slusny <slusnucky@gmail.com>", "committedDate": "2020-04-04T15:45:26Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzU3MTc1OA==", "url": "https://github.com/runelite/runelite/pull/11188#discussion_r403571758", "bodyText": "this should probably be a reference comparison, or better yet, a flag for the resizing mode rather than reusing the cursor", "author": "abextm", "createdAt": "2020-04-04T23:29:43Z", "path": "runelite-client/src/main/java/net/runelite/client/ui/overlay/OverlayRenderer.java", "diffHunk": "@@ -277,9 +287,21 @@ public void render(Graphics2D graphics, final OverlayLayer layer)\n \t\t\t\t\tif (inOverlayDraggingMode)\n \t\t\t\t\t{\n \t\t\t\t\t\tfinal Color previous = graphics.getColor();\n-\t\t\t\t\t\tgraphics.setColor(movedOverlay == overlay ? MOVING_OVERLAY_ACTIVE_COLOR : MOVING_OVERLAY_COLOR);\n+\t\t\t\t\t\tfinal Stroke previousStroke = graphics.getStroke();\n+\n+\t\t\t\t\t\tif (hoveredOverlay == overlay && !clientUI.getCurrentCursor().equals(clientUI.getDefaultCursor()))", "originalCommit": "bf0346fc4b083bfb4e6c3894e439e15bca676f25", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzU3OTI1NQ==", "url": "https://github.com/runelite/runelite/pull/11188#discussion_r403579255", "bodyText": "it may be worth adding some javadoc to these", "author": "abextm", "createdAt": "2020-04-04T23:47:04Z", "path": "runelite-client/src/main/java/net/runelite/client/ui/overlay/OverlayPanel.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright (c) 2018, Tomas Slusny <slusnucky@gmail.com>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.ui.overlay;\n+\n+import java.awt.Dimension;\n+import java.awt.Graphics2D;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import lombok.Getter;\n+import lombok.Setter;\n+import net.runelite.client.plugins.Plugin;\n+import net.runelite.client.ui.FontManager;\n+import net.runelite.client.ui.overlay.components.ComponentConstants;\n+import net.runelite.client.ui.overlay.components.PanelComponent;\n+\n+@Getter\n+@Setter\n+public abstract class OverlayPanel extends Overlay\n+{\n+\tprotected final PanelComponent panelComponent = new PanelComponent();\n+\tprivate Point preferredLocation;\n+\tprivate Dimension preferredSize;\n+\tprivate OverlayPosition preferredPosition;\n+\tprivate Rectangle bounds = new Rectangle();\n+\tprivate OverlayPosition position = OverlayPosition.TOP_LEFT;\n+\tprivate OverlayPriority priority = OverlayPriority.NONE;\n+\tprivate OverlayLayer layer = OverlayLayer.UNDER_WIDGETS;\n+\tprivate boolean clearChildren = true;", "originalCommit": "0602cab7f2feafff1f229663213fd73030a2ed8c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzU3OTM2MA==", "url": "https://github.com/runelite/runelite/pull/11188#discussion_r403579360", "bodyText": "why are you shadowing a bunch of stuff from Overlay?", "author": "abextm", "createdAt": "2020-04-04T23:47:21Z", "path": "runelite-client/src/main/java/net/runelite/client/ui/overlay/OverlayPanel.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright (c) 2018, Tomas Slusny <slusnucky@gmail.com>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.ui.overlay;\n+\n+import java.awt.Dimension;\n+import java.awt.Graphics2D;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import lombok.Getter;\n+import lombok.Setter;\n+import net.runelite.client.plugins.Plugin;\n+import net.runelite.client.ui.FontManager;\n+import net.runelite.client.ui.overlay.components.ComponentConstants;\n+import net.runelite.client.ui.overlay.components.PanelComponent;\n+\n+@Getter\n+@Setter\n+public abstract class OverlayPanel extends Overlay\n+{\n+\tprotected final PanelComponent panelComponent = new PanelComponent();\n+\tprivate Point preferredLocation;", "originalCommit": "0602cab7f2feafff1f229663213fd73030a2ed8c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5fd9b78902a9485457a2c7b909caf8bf1e5379d7", "url": "https://github.com/runelite/runelite/commit/5fd9b78902a9485457a2c7b909caf8bf1e5379d7", "message": "Make overlays use OverlayPanel instead of Overlay\n\nMake overlays that were previously using PanelComponent use\nOverlayPanel.\n\nSigned-off-by: Tomas Slusny <slusnucky@gmail.com>", "committedDate": "2020-04-05T00:29:59Z", "type": "forcePushed"}, {"oid": "97d091f5fa9ceeb6d38954e6233e3f909ffd9983", "url": "https://github.com/runelite/runelite/commit/97d091f5fa9ceeb6d38954e6233e3f909ffd9983", "message": "Make overlays use OverlayPanel instead of Overlay\n\nMake overlays that were previously using PanelComponent use\nOverlayPanel.\n\nSigned-off-by: Tomas Slusny <slusnucky@gmail.com>", "committedDate": "2020-04-05T00:32:31Z", "type": "forcePushed"}, {"oid": "4202ee4016a87bf27b34377b2b67a5732dea6acf", "url": "https://github.com/runelite/runelite/commit/4202ee4016a87bf27b34377b2b67a5732dea6acf", "message": "Make overlays use OverlayPanel instead of Overlay\n\nMake overlays that were previously using PanelComponent use\nOverlayPanel.\n\nSigned-off-by: Tomas Slusny <slusnucky@gmail.com>", "committedDate": "2020-04-05T01:13:05Z", "type": "forcePushed"}, {"oid": "678deb32ff7d4cc5487e068c666616771aa6b686", "url": "https://github.com/runelite/runelite/commit/678deb32ff7d4cc5487e068c666616771aa6b686", "message": "Make overlays use OverlayPanel instead of Overlay\n\nMake overlays that were previously using PanelComponent use\nOverlayPanel.\n\nSigned-off-by: Tomas Slusny <slusnucky@gmail.com>", "committedDate": "2020-04-05T01:35:11Z", "type": "forcePushed"}, {"oid": "b773514a01ccaa0254de28ffcac658cc84301e5e", "url": "https://github.com/runelite/runelite/commit/b773514a01ccaa0254de28ffcac658cc84301e5e", "message": "Make overlays use OverlayPanel instead of Overlay\n\nMake overlays that were previously using PanelComponent use\nOverlayPanel.\n\nSigned-off-by: Tomas Slusny <slusnucky@gmail.com>", "committedDate": "2020-04-05T02:59:06Z", "type": "forcePushed"}, {"oid": "6142213250ce47ac4987cdb3161bea417289d6d1", "url": "https://github.com/runelite/runelite/commit/6142213250ce47ac4987cdb3161bea417289d6d1", "message": "Make overlays use OverlayPanel instead of Overlay\n\nMake overlays that were previously using PanelComponent use\nOverlayPanel.\n\nSigned-off-by: Tomas Slusny <slusnucky@gmail.com>", "committedDate": "2020-04-05T04:29:29Z", "type": "forcePushed"}, {"oid": "33ab6158eb7275f7d16d6da21669416ec1e0adef", "url": "https://github.com/runelite/runelite/commit/33ab6158eb7275f7d16d6da21669416ec1e0adef", "message": "Skip processing of input listeners with consumed events\n\nSigned-off-by: Tomas Slusny <slusnucky@gmail.com>", "committedDate": "2020-04-05T04:57:09Z", "type": "forcePushed"}, {"oid": "308cd76551a7777bf03a81629cb398f473b770ee", "url": "https://github.com/runelite/runelite/commit/308cd76551a7777bf03a81629cb398f473b770ee", "message": "Skip processing of input listeners with consumed events\n\nSigned-off-by: Tomas Slusny <slusnucky@gmail.com>", "committedDate": "2020-04-05T05:01:08Z", "type": "forcePushed"}, {"oid": "527e92b24c2fc8de30d9cceadabea2118323f4ec", "url": "https://github.com/runelite/runelite/commit/527e92b24c2fc8de30d9cceadabea2118323f4ec", "message": "Skip processing of input listeners with consumed events\n\nSigned-off-by: Tomas Slusny <slusnucky@gmail.com>", "committedDate": "2020-04-05T05:04:10Z", "type": "forcePushed"}, {"oid": "8d29ae19bf18ed46d67415e773a53f65aad8af8b", "url": "https://github.com/runelite/runelite/commit/8d29ae19bf18ed46d67415e773a53f65aad8af8b", "message": "Skip processing of input listeners with consumed events\n\nSigned-off-by: Tomas Slusny <slusnucky@gmail.com>", "committedDate": "2020-04-05T05:28:50Z", "type": "forcePushed"}, {"oid": "a2a8625ad0251c8337bccdc29ed7f176e096bb4f", "url": "https://github.com/runelite/runelite/commit/a2a8625ad0251c8337bccdc29ed7f176e096bb4f", "message": "Skip processing of input listeners with consumed events\n\nSigned-off-by: Tomas Slusny <slusnucky@gmail.com>", "committedDate": "2020-04-05T05:41:54Z", "type": "forcePushed"}, {"oid": "2377c2ca520b09b01b70b66bb2dea837adc1186f", "url": "https://github.com/runelite/runelite/commit/2377c2ca520b09b01b70b66bb2dea837adc1186f", "message": "Skip processing of input listeners with consumed events\n\nSigned-off-by: Tomas Slusny <slusnucky@gmail.com>", "committedDate": "2020-04-05T05:51:46Z", "type": "forcePushed"}, {"oid": "65cae525191d707b4f1f574059173bfe6144d09b", "url": "https://github.com/runelite/runelite/commit/65cae525191d707b4f1f574059173bfe6144d09b", "message": "Skip processing of input listeners with consumed events\n\nSigned-off-by: Tomas Slusny <slusnucky@gmail.com>", "committedDate": "2020-04-05T06:04:41Z", "type": "forcePushed"}, {"oid": "48a3b3cf18c6b954389b579417e209dd569bf688", "url": "https://github.com/runelite/runelite/commit/48a3b3cf18c6b954389b579417e209dd569bf688", "message": "Skip processing of input listeners with consumed events\n\nSigned-off-by: Tomas Slusny <slusnucky@gmail.com>", "committedDate": "2020-04-05T06:08:13Z", "type": "forcePushed"}, {"oid": "d115ee0cea2c021388df5378d3529d21a4ebcdab", "url": "https://github.com/runelite/runelite/commit/d115ee0cea2c021388df5378d3529d21a4ebcdab", "message": "Skip processing of input listeners with consumed events\n\nSigned-off-by: Tomas Slusny <slusnucky@gmail.com>", "committedDate": "2020-04-05T12:26:47Z", "type": "forcePushed"}, {"oid": "71cc1704044158046e1a2df033ae489451f4bc67", "url": "https://github.com/runelite/runelite/commit/71cc1704044158046e1a2df033ae489451f4bc67", "message": "Skip processing of input listeners with consumed events\n\nSigned-off-by: Tomas Slusny <slusnucky@gmail.com>", "committedDate": "2020-04-06T11:53:59Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDA0MDE1MA==", "url": "https://github.com/runelite/runelite/pull/11188#discussion_r404040150", "bodyText": "use bitwise or for oring bitfields", "author": "abextm", "createdAt": "2020-04-06T12:08:31Z", "path": "runelite-client/src/main/java/net/runelite/client/ui/overlay/OverlayRenderer.java", "diffHunk": "@@ -294,125 +314,262 @@ public void render(Graphics2D graphics, final OverlayLayer layer)\n \t\t\t\t}\n \t\t\t}\n \t\t}\n+\n \t}\n \n \t@Override\n \tpublic MouseEvent mousePressed(MouseEvent mouseEvent)\n \t{\n-\t\tif (!inOverlayDraggingMode)\n+\t\tif (!inOverlayManagingMode)\n \t\t{\n \t\t\treturn mouseEvent;\n \t\t}\n \n \t\tfinal Point mousePoint = mouseEvent.getPoint();\n \t\tmousePosition.setLocation(mousePoint);\n \n-\t\tsynchronized (overlayManager)\n+\t\tif (currentManagedOverlay == null)\n \t\t{\n-\t\t\tfor (Overlay overlay : overlayManager.getOverlays())\n-\t\t\t{\n-\t\t\t\tfinal OverlayPosition overlayPosition = getCorrectedOverlayPosition(overlay);\n+\t\t\treturn mouseEvent;\n+\t\t}\n \n-\t\t\t\tif (overlayPosition == OverlayPosition.DYNAMIC || overlayPosition == OverlayPosition.TOOLTIP)\n-\t\t\t\t{\n-\t\t\t\t\tcontinue;\n-\t\t\t\t}\n+\t\tif (SwingUtilities.isRightMouseButton(mouseEvent))\n+\t\t{\n+\t\t\toverlayManager.resetOverlay(currentManagedOverlay);\n+\t\t}\n+\t\telse if (SwingUtilities.isLeftMouseButton(mouseEvent))\n+\t\t{\n+\t\t\tfinal Point offset = new Point(mousePoint.x, mousePoint.y);\n+\t\t\toffset.translate(-currentManagedOverlay.getBounds().x, -currentManagedOverlay.getBounds().y);\n+\t\t\toverlayOffset.setLocation(offset);\n+\n+\t\t\tinOverlayResizingMode = currentManagedOverlay != null && currentManagedOverlay.isResizable() && clientUI.getCurrentCursor() != clientUI.getDefaultCursor();\n+\t\t\tinOverlayDraggingMode = !inOverlayResizingMode;\n+\t\t\tstartedMovingOverlay = true;\n+\t\t\tcurrentManagedBounds = new Rectangle(currentManagedOverlay.getBounds());\n+\t\t}\n+\t\telse\n+\t\t{\n+\t\t\treturn mouseEvent;\n+\t\t}\n+\n+\t\tmouseEvent.consume();\n+\t\treturn mouseEvent;\n+\t}\n+\n+\t@Override\n+\tpublic MouseEvent mouseMoved(MouseEvent mouseEvent)\n+\t{\n+\t\tif (!inOverlayManagingMode)\n+\t\t{\n+\t\t\treturn mouseEvent;\n+\t\t}\n+\n+\t\tfinal Point mousePoint = mouseEvent.getPoint();\n+\t\tmousePosition.setLocation(mousePoint);\n+\n+\t\tif (!inOverlayResizingMode && !inOverlayDraggingMode)\n+\t\t{\n+\t\t\tcurrentManagedOverlay = null;\n \n-\t\t\t\tif (overlay.getBounds().contains(mousePoint))\n+\t\t\tsynchronized (overlayManager)\n+\t\t\t{\n+\t\t\t\tfor (Overlay overlay : overlayManager.getOverlays())\n \t\t\t\t{\n-\t\t\t\t\tif (SwingUtilities.isRightMouseButton(mouseEvent))\n-\t\t\t\t\t{\n-\t\t\t\t\t\toverlayManager.resetOverlay(overlay);\n-\t\t\t\t\t}\n-\t\t\t\t\telse\n+\t\t\t\t\tfinal Rectangle bounds = overlay.getBounds();\n+\t\t\t\t\tif (bounds.contains(mousePoint))\n \t\t\t\t\t{\n-\t\t\t\t\t\tfinal Point offset = new Point(mousePoint.x, mousePoint.y);\n-\t\t\t\t\t\toffset.translate(-overlay.getBounds().x, -overlay.getBounds().y);\n-\t\t\t\t\t\toverlayOffset.setLocation(offset);\n-\n-\t\t\t\t\t\tmousePoint.translate(-offset.x, -offset.y);\n-\t\t\t\t\t\tmovedOverlay = overlay;\n-\t\t\t\t\t\tmovedOverlay.setPreferredPosition(null);\n-\t\t\t\t\t\tmovedOverlay.setPreferredLocation(mousePoint);\n-\t\t\t\t\t\toverlayManager.saveOverlay(movedOverlay);\n+\t\t\t\t\t\tcurrentManagedOverlay = overlay;\n+\t\t\t\t\t\tbreak;\n \t\t\t\t\t}\n-\n-\t\t\t\t\tmouseEvent.consume();\n-\t\t\t\t\tbreak;\n \t\t\t\t}\n \t\t\t}\n \t\t}\n \n+\t\tif (currentManagedOverlay == null || !currentManagedOverlay.isResizable())\n+\t\t{\n+\t\t\tclientUI.setCursor(clientUI.getDefaultCursor());\n+\t\t\treturn mouseEvent;\n+\t\t}\n+\n+\t\tfinal Rectangle toleranceRect = new Rectangle(currentManagedOverlay.getBounds());\n+\t\ttoleranceRect.grow(-OVERLAY_RESIZE_TOLERANCE, -OVERLAY_RESIZE_TOLERANCE);\n+\t\tfinal int outcode = toleranceRect.outcode(mouseEvent.getPoint());\n+\n+\t\tswitch (outcode)\n+\t\t{\n+\t\t\tcase Rectangle.OUT_TOP:\n+\t\t\t\tclientUI.setCursor(Cursor.getPredefinedCursor(Cursor.N_RESIZE_CURSOR));\n+\t\t\t\tbreak;\n+\t\t\tcase Rectangle.OUT_TOP + Rectangle.OUT_LEFT:", "originalCommit": "3ac946284812a71fb0bbe51ab7cc5368801d3007", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDA0MzUzMg==", "url": "https://github.com/runelite/runelite/pull/11188#discussion_r404043532", "bodyText": "It might be good to drop this a few px, its easy to get the resize zone on small overlays when you want to move it.", "author": "abextm", "createdAt": "2020-04-06T12:14:15Z", "path": "runelite-client/src/main/java/net/runelite/client/ui/overlay/OverlayRenderer.java", "diffHunk": "@@ -68,21 +70,29 @@\n \tprivate static final int BORDER = 5;\n \tprivate static final int BORDER_TOP = BORDER + 15;\n \tprivate static final int PADDING = 2;\n+\tprivate static final int MIN_OVERLAY_SIZE = 32;\n+\tprivate static final int OVERLAY_RESIZE_TOLERANCE = 10;", "originalCommit": "3ac946284812a71fb0bbe51ab7cc5368801d3007", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d0d632cd5a3de0d373ff3cefb34a76c0f56ec74c", "url": "https://github.com/runelite/runelite/commit/d0d632cd5a3de0d373ff3cefb34a76c0f56ec74c", "message": "Skip processing of input listeners with consumed events\n\nSigned-off-by: Tomas Slusny <slusnucky@gmail.com>", "committedDate": "2020-04-06T13:03:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkxMTM0Mg==", "url": "https://github.com/runelite/runelite/pull/11188#discussion_r406911342", "bodyText": "This also includes the padding/gap, does that matter?", "author": "Adam-", "createdAt": "2020-04-10T19:39:06Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/inventoryviewer/InventoryViewerOverlay.java", "diffHunk": "@@ -57,8 +57,9 @@\n \tprivate InventoryViewerOverlay(Client client, ItemManager itemManager)\n \t{\n \t\tsetPosition(OverlayPosition.BOTTOM_RIGHT);\n-\t\tpanelComponent.setWrapping(4);\n+\t\tpanelComponent.setWrap(true);\n \t\tpanelComponent.setGap(new Point(6, 4));\n+\t\tpanelComponent.setPreferredSize(new Dimension(4 * Constants.ITEM_SPRITE_WIDTH, 0));", "originalCommit": "7512eaa6b2ffd7738a0ca61eed94c9893978f877", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkxMTcyMw==", "url": "https://github.com/runelite/runelite/pull/11188#discussion_r406911723", "bodyText": "This appears to be causing the infoboxes to wrap at 2 (although it reads like it would make it wrap after 1..?). Regardless it should stay consistent with the current behavior and wrap at 4 by default.", "author": "Adam-", "createdAt": "2020-04-10T19:40:16Z", "path": "runelite-client/src/main/java/net/runelite/client/ui/overlay/infobox/InfoBoxOverlay.java", "diffHunk": "@@ -83,11 +84,10 @@ public Dimension render(Graphics2D graphics)\n \t\t}\n \n \t\tpanelComponent.getChildren().clear();\n-\t\tpanelComponent.setWrapping(config.infoBoxWrap());\n+\t\tpanelComponent.setPreferredSize(new Dimension(config.infoBoxSize(), config.infoBoxSize()));", "originalCommit": "7512eaa6b2ffd7738a0ca61eed94c9893978f877", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkxOTcxOA==", "url": "https://github.com/runelite/runelite/pull/11188#discussion_r406919718", "bodyText": "Couldn't you have instead just setClearChildren(false)?", "author": "Adam-", "createdAt": "2020-04-10T20:02:54Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/npcunaggroarea/NpcAggroAreaNotWorkingOverlay.java", "diffHunk": "@@ -27,30 +27,22 @@\n import com.google.inject.Inject;\n import java.awt.Dimension;\n import java.awt.Graphics2D;\n-import net.runelite.client.ui.overlay.Overlay;\n+import net.runelite.client.ui.overlay.OverlayPanel;\n import net.runelite.client.ui.overlay.OverlayPosition;\n import net.runelite.client.ui.overlay.OverlayPriority;\n import net.runelite.client.ui.overlay.components.LineComponent;\n-import net.runelite.client.ui.overlay.components.PanelComponent;\n \n-class NpcAggroAreaNotWorkingOverlay extends Overlay\n+class NpcAggroAreaNotWorkingOverlay extends OverlayPanel\n {\n \tprivate final NpcAggroAreaPlugin plugin;\n \tprivate final NpcAggroAreaConfig config;\n-\tprivate final PanelComponent panelComponent;\n \n \t@Inject\n \tprivate NpcAggroAreaNotWorkingOverlay(NpcAggroAreaPlugin plugin, NpcAggroAreaConfig config)\n \t{\n \t\tthis.plugin = plugin;\n \t\tthis.config = config;\n \n-\t\tpanelComponent = new PanelComponent();\n-\t\tpanelComponent.setPreferredSize(new Dimension(150, 0));\n-\t\tpanelComponent.getChildren().add(LineComponent.builder()", "originalCommit": "27466f3e1f0cad28f57680ff390051f0064bb8a8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a6b2e9878af83af479423a41a5c1c393a4d78a53", "url": "https://github.com/runelite/runelite/commit/a6b2e9878af83af479423a41a5c1c393a4d78a53", "message": "devtools: add infobox generator", "committedDate": "2020-04-10T21:28:13Z", "type": "forcePushed"}, {"oid": "a1581639e1b1849e08bbd8341a65a7f15ee21447", "url": "https://github.com/runelite/runelite/commit/a1581639e1b1849e08bbd8341a65a7f15ee21447", "message": "devtools: add infobox generator", "committedDate": "2020-04-10T21:40:16Z", "type": "forcePushed"}, {"oid": "13c174a5fc5b942e39e05f628a4995385dee5457", "url": "https://github.com/runelite/runelite/commit/13c174a5fc5b942e39e05f628a4995385dee5457", "message": "devtools: add infobox generator", "committedDate": "2020-04-12T22:26:57Z", "type": "forcePushed"}, {"oid": "11bd8a677e1fc8aa927927e001d97178162aecca", "url": "https://github.com/runelite/runelite/commit/11bd8a677e1fc8aa927927e001d97178162aecca", "message": "devtools: add infobox generator", "committedDate": "2020-04-12T22:42:15Z", "type": "forcePushed"}, {"oid": "91d379961ec2be492fc6a2033d8f6305635c3b0e", "url": "https://github.com/runelite/runelite/commit/91d379961ec2be492fc6a2033d8f6305635c3b0e", "message": "devtools: add infobox generator", "committedDate": "2020-04-12T22:50:13Z", "type": "forcePushed"}, {"oid": "43ceb25f24e437282f5b9f3b942cb2d7046490ba", "url": "https://github.com/runelite/runelite/commit/43ceb25f24e437282f5b9f3b942cb2d7046490ba", "message": "devtools: add infobox generator", "committedDate": "2020-04-12T23:06:11Z", "type": "forcePushed"}, {"oid": "1f5bd553284250467d7ca4e19a51d3a548103913", "url": "https://github.com/runelite/runelite/commit/1f5bd553284250467d7ca4e19a51d3a548103913", "message": "devtools: add infobox generator", "committedDate": "2020-04-12T23:20:26Z", "type": "forcePushed"}, {"oid": "7e897ba0c4c28288fb1a3f5dc2ee62447703bd3a", "url": "https://github.com/runelite/runelite/commit/7e897ba0c4c28288fb1a3f5dc2ee62447703bd3a", "message": "Add support for resizable overlays\n\nAdd mostly complete support for resizable overlays. Currently only\nscreen markers are supported.\n\nSigned-off-by: Tomas Slusny <slusnucky@gmail.com>", "committedDate": "2020-04-12T23:57:55Z", "type": "commit"}, {"oid": "58b86f3cdf0b28b58a1ac9ac9c6dad99518ed6f3", "url": "https://github.com/runelite/runelite/commit/58b86f3cdf0b28b58a1ac9ac9c6dad99518ed6f3", "message": "Make overlay resizing configure wrapping\n\nInstead of resizing every overlay component inside wrapped panel\ncomponent simply adjust wrap based on preferred size. Also remove the\nconfigurable wrap after.\n\nSigned-off-by: Tomas Slusny <slusnucky@gmail.com>", "committedDate": "2020-04-12T23:57:55Z", "type": "commit"}, {"oid": "08c88e7e9a44ee1bdb7a9c9d6748eb2a19accfcc", "url": "https://github.com/runelite/runelite/commit/08c88e7e9a44ee1bdb7a9c9d6748eb2a19accfcc", "message": "Add OverlayPanel that contains PanelComponent\n\nAdd generic OverlayPanel class that uses PanelComponent as its backing\ncomponent.\n\nSigned-off-by: Tomas Slusny <slusnucky@gmail.com>", "committedDate": "2020-04-12T23:57:56Z", "type": "commit"}, {"oid": "61458ff5ccf5e729134a9191aee396480c708a3e", "url": "https://github.com/runelite/runelite/commit/61458ff5ccf5e729134a9191aee396480c708a3e", "message": "Make overlays use OverlayPanel instead of Overlay\n\nMake overlays that were previously using PanelComponent use\nOverlayPanel.\n\nSigned-off-by: Tomas Slusny <slusnucky@gmail.com>", "committedDate": "2020-04-12T23:57:57Z", "type": "commit"}, {"oid": "e8263de17363f33f9fd99d94ccc03bcee0566468", "url": "https://github.com/runelite/runelite/commit/e8263de17363f33f9fd99d94ccc03bcee0566468", "message": "Skip processing of input listeners with consumed events\n\nThis prevents from consumed input events to propage to rest of the\nplugins. For example when overlay is being moved, this prevents ground\nitems from registering the click (what would otherwise cause for ground\nitem to be highlighted).\n\nSigned-off-by: Tomas Slusny <slusnucky@gmail.com>", "committedDate": "2020-04-12T23:57:58Z", "type": "commit"}, {"oid": "a0c8ab05c2c787c3a251c9935885073d3008cd98", "url": "https://github.com/runelite/runelite/commit/a0c8ab05c2c787c3a251c9935885073d3008cd98", "message": "devtools: add infobox generator", "committedDate": "2020-04-12T23:57:58Z", "type": "commit"}, {"oid": "a0c8ab05c2c787c3a251c9935885073d3008cd98", "url": "https://github.com/runelite/runelite/commit/a0c8ab05c2c787c3a251c9935885073d3008cd98", "message": "devtools: add infobox generator", "committedDate": "2020-04-12T23:57:58Z", "type": "forcePushed"}]}