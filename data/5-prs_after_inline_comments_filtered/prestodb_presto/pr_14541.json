{"pr_number": 14541, "pr_title": "Add support for SHOW FUNCTIONS LIKE pattern", "pr_createdAt": "2020-05-15T19:04:37Z", "pr_url": "https://github.com/prestodb/presto/pull/14541", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjg4OTM4MQ==", "url": "https://github.com/prestodb/presto/pull/14541#discussion_r426889381", "bodyText": "Would predicate = node.getLikePattern.map(pattern -> new LikePredicate(...)) work?", "author": "rongrong", "createdAt": "2020-05-18T20:57:47Z", "path": "presto-main/src/main/java/com/facebook/presto/sql/rewrite/ShowQueriesRewrite.java", "diffHunk": "@@ -629,20 +629,30 @@ protected Node visitShowFunctions(ShowFunctions node, Void context)\n                     .put(\"language\", \"Language\")\n                     .build();\n \n+            Optional<Expression> predicate = Optional.empty();\n+            Optional<String> likePattern = node.getLikePattern();", "originalCommit": "0ec9b3788ce62c5d49b19a5953b2bdcaf796394a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjg5MTgzMw==", "url": "https://github.com/prestodb/presto/pull/14541#discussion_r426891833", "bodyText": "nit: () is unnecessary around value", "author": "caithagoras", "createdAt": "2020-05-18T21:03:18Z", "path": "presto-parser/src/main/java/com/facebook/presto/sql/SqlFormatter.java", "diffHunk": "@@ -761,6 +761,14 @@ protected Void visitShowFunctions(ShowFunctions node, Integer context)\n         {\n             builder.append(\"SHOW FUNCTIONS\");\n \n+            node.getLikePattern().ifPresent((value) ->", "originalCommit": "0ec9b3788ce62c5d49b19a5953b2bdcaf796394a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjg5MTg1MQ==", "url": "https://github.com/prestodb/presto/pull/14541#discussion_r426891851", "bodyText": "nit: () is unnecessary around value", "author": "caithagoras", "createdAt": "2020-05-18T21:03:21Z", "path": "presto-parser/src/main/java/com/facebook/presto/sql/SqlFormatter.java", "diffHunk": "@@ -761,6 +761,14 @@ protected Void visitShowFunctions(ShowFunctions node, Integer context)\n         {\n             builder.append(\"SHOW FUNCTIONS\");\n \n+            node.getLikePattern().ifPresent((value) ->\n+                    builder.append(\" LIKE \")\n+                            .append(formatStringLiteral(value)));\n+\n+            node.getEscape().ifPresent((value) ->", "originalCommit": "0ec9b3788ce62c5d49b19a5953b2bdcaf796394a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA3MDE3Nw==", "url": "https://github.com/prestodb/presto/pull/14541#discussion_r432070177", "bodyText": "I would break this into multiple lines for readability.\nnode.getLikePattern().map(pattern -> new LikePredicate(\n    identifier(\"function_name\"),\n    new StringLiteral(pattern),\n    node.getEscape().map(StringLiteral::new))),", "author": "caithagoras", "createdAt": "2020-05-28T19:30:04Z", "path": "presto-main/src/main/java/com/facebook/presto/sql/rewrite/ShowQueriesRewrite.java", "diffHunk": "@@ -629,21 +629,12 @@ protected Node visitShowFunctions(ShowFunctions node, Void context)\n                     .put(\"language\", \"Language\")\n                     .build();\n \n-            Optional<Expression> predicate = Optional.empty();\n-            Optional<String> likePattern = node.getLikePattern();\n-            if (likePattern.isPresent()) {\n-                predicate = Optional.of(new LikePredicate(\n-                        identifier(\"function_name\"),\n-                        new StringLiteral(likePattern.get()),\n-                        node.getEscape().map(StringLiteral::new)));\n-            }\n-\n             return simpleQuery(\n                     selectAll(columns.entrySet().stream()\n                             .map(entry -> aliasedName(entry.getKey(), entry.getValue()))\n                             .collect(toImmutableList())),\n                     aliased(new Values(rows.build()), \"functions\", ImmutableList.copyOf(columns.keySet())),\n-                    predicate,\n+                    node.getLikePattern().map(pattern -> new LikePredicate(identifier(\"function_name\"), new StringLiteral(pattern), node.getEscape().map(StringLiteral::new))),", "originalCommit": "7b2600df7b92851d979563a10ad1336d455eebe5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5d21121a4502f0f22528e76179bec66b75e7bab3", "url": "https://github.com/prestodb/presto/commit/5d21121a4502f0f22528e76179bec66b75e7bab3", "message": "Add support for SHOW FUNCTIONS LIKE pattern", "committedDate": "2020-06-03T18:39:24Z", "type": "commit"}, {"oid": "5d21121a4502f0f22528e76179bec66b75e7bab3", "url": "https://github.com/prestodb/presto/commit/5d21121a4502f0f22528e76179bec66b75e7bab3", "message": "Add support for SHOW FUNCTIONS LIKE pattern", "committedDate": "2020-06-03T18:39:24Z", "type": "forcePushed"}]}