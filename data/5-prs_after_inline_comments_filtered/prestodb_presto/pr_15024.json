{"pr_number": 15024, "pr_title": "Implement PrestoS3FileSystem#listFiles for direct recursive listings", "pr_createdAt": "2020-08-13T19:21:29Z", "pr_url": "https://github.com/prestodb/presto/pull/15024", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQwOTQ2OA==", "url": "https://github.com/prestodb/presto/pull/15024#discussion_r472409468", "bodyText": "else is not needed", "author": "zhenxiao", "createdAt": "2020-08-18T18:50:31Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/s3/PrestoS3FileSystem.java", "diffHunk": "@@ -501,23 +518,37 @@ protected ObjectListing computeNext(ObjectListing previous)\n                 if (!previous.isTruncated()) {\n                     return null;\n                 }\n+                // Clear any max keys set for the initial request before submitting subsequent requests. Values < 0\n+                // are not sent in the request and the default limit is used\n+                previous.setMaxKeys(-1);\n                 return s3.listNextBatchOfObjects(previous);\n             }\n         };\n \n-        return Iterators.concat(Iterators.transform(listings, this::statusFromListing));\n+        Iterator<LocatedFileStatus> result = Iterators.concat(Iterators.transform(listings, this::statusFromListing));\n+        if (filterDirectories) {\n+            //  Even recursive listing can still list empty directories, must filter them out\n+            result = Iterators.filter(result, LocatedFileStatus::isFile);\n+        }\n+        return result;\n     }\n \n     private Iterator<LocatedFileStatus> statusFromListing(ObjectListing listing)\n     {\n-        return Iterators.concat(\n-                statusFromPrefixes(listing.getCommonPrefixes()),\n-                statusFromObjects(listing.getObjectSummaries()));\n+        List<String> prefixes = listing.getCommonPrefixes();\n+        if (prefixes.isEmpty()) {\n+            return statusFromObjects(listing.getObjectSummaries());\n+        }\n+        else {", "originalCommit": "a8edbb29b80dabe85d841b4bd027fc9f69adf07b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQwOTg1MQ==", "url": "https://github.com/prestodb/presto/pull/15024#discussion_r472409851", "bodyText": "for filterDirectories, shall we use returnFilesOnly? for easy understanding", "author": "zhenxiao", "createdAt": "2020-08-18T18:51:10Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/s3/PrestoS3FileSystem.java", "diffHunk": "@@ -480,7 +496,7 @@ public boolean mkdirs(Path f, FsPermission permission)\n         return true;\n     }\n \n-    private Iterator<LocatedFileStatus> listPrefix(Path path)\n+    private Iterator<LocatedFileStatus> listPrefix(Path path, OptionalInt initialMaxKeys, boolean recursive, boolean filterDirectories)", "originalCommit": "a8edbb29b80dabe85d841b4bd027fc9f69adf07b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzg4MTEwOQ==", "url": "https://github.com/prestodb/presto/pull/15024#discussion_r473881109", "bodyText": "I've converted this to an enum in the latest revision because the two boolean mode flags could represent a potentially invalid request to list recursively including directories, which isn't a native S3 operation.", "author": "pettyjamesm", "createdAt": "2020-08-20T10:55:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQwOTg1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQxMDEzMA==", "url": "https://github.com/prestodb/presto/pull/15024#discussion_r472410130", "bodyText": "could we add testcases for different behaviors of recursive and filterDirectories?", "author": "zhenxiao", "createdAt": "2020-08-18T18:51:37Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/s3/PrestoS3FileSystem.java", "diffHunk": "@@ -490,7 +506,8 @@ public boolean mkdirs(Path f, FsPermission permission)\n         ListObjectsRequest request = new ListObjectsRequest()\n                 .withBucketName(getBucketName(uri))\n                 .withPrefix(key)\n-                .withDelimiter(PATH_SEPARATOR);\n+                .withDelimiter(recursive && filterDirectories ? null : PATH_SEPARATOR)", "originalCommit": "a8edbb29b80dabe85d841b4bd027fc9f69adf07b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzg4MTIxNQ==", "url": "https://github.com/prestodb/presto/pull/15024#discussion_r473881215", "bodyText": "Test case added", "author": "pettyjamesm", "createdAt": "2020-08-20T10:55:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQxMDEzMA=="}], "type": "inlineReview"}, {"oid": "30eef379b49b05aa055954c71962a17f63bd6101", "url": "https://github.com/prestodb/presto/commit/30eef379b49b05aa055954c71962a17f63bd6101", "message": "Implement PrestoS3FileSystem#listFiles for direct recursive listings\n\nImplements FileSystem#listFiles(Path, boolean recursive) for\nPrestoS3FileSystem which in theory adds support for directly listing\nS3 files underneath a prefix without recursive calls through each\n\"directory\". This direct traversal requires much fewer requests\nwhen dealing with nested directories but may violate some PathFilter\nimplementation's expectation of being called at each directory level,\nand may perform worse when a large number objects are contained within\nhidden paths (since filtering would be performed after the fact). I'm\nopen to suggestions about how to balance this trade-off and integrate\nthis with the DirectoryLister.\n\nIncidentally, a straightforward improvement to getFileStatus fell out\nof the implementation allowing the isDir check for a path prefix (with\nno object present) to be done by limiting the listing result size to 1\ninstead of listing the full default 1000.", "committedDate": "2020-08-19T13:40:50Z", "type": "forcePushed"}, {"oid": "cb4be32ed3e044bb72dcffd49fb648e97c7f61ae", "url": "https://github.com/prestodb/presto/commit/cb4be32ed3e044bb72dcffd49fb648e97c7f61ae", "message": "Implement PrestoS3FileSystem#listFiles for direct recursive listings\n\nImplements FileSystem#listFiles(Path, boolean recursive) for\nPrestoS3FileSystem which in theory adds support for directly listing\nS3 files underneath a prefix without recursive calls through each\n\"directory\". This direct traversal requires much fewer requests\nwhen dealing with nested directories but may violate some PathFilter\nimplementation's expectation of being called at each directory level,\nand may perform worse when a large number objects are contained within\nhidden paths (since filtering would be performed after the fact). I'm\nopen to suggestions about how to balance this trade-off and integrate\nthis with the DirectoryLister.\n\nIncidentally, a straightforward improvement to getFileStatus fell out\nof the implementation allowing the isDir check for a path prefix (with\nno object present) to be done by limiting the listing result size to 1\ninstead of listing the full default 1000.", "committedDate": "2020-08-20T10:53:12Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQzODYxMA==", "url": "https://github.com/prestodb/presto/pull/15024#discussion_r474438610", "bodyText": "SHALLOW_ALL include both files and directories, right? shall we call is ALL?", "author": "zhenxiao", "createdAt": "2020-08-21T06:41:01Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/s3/PrestoS3FileSystem.java", "diffHunk": "@@ -480,7 +496,22 @@ public boolean mkdirs(Path f, FsPermission permission)\n         return true;\n     }\n \n-    private Iterator<LocatedFileStatus> listPrefix(Path path)\n+    /**\n+     * Enum representing the valid listing modes. This could be two booleans (recursive, filesOnly) except\n+     * that (recursive=true, filesOnly=false) can't be translated directly to a natively supported behavior\n+     */\n+    private enum ListingMode {\n+        SHALLOW_ALL,", "originalCommit": "cb4be32ed3e044bb72dcffd49fb648e97c7f61ae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDY3NjA4OQ==", "url": "https://github.com/prestodb/presto/pull/15024#discussion_r474676089", "bodyText": "I think the important distinction here is \"shallow\" vs \"recursive\" where ALL might seem to imply RECURSIVE_ALL which is not a supported mode.", "author": "pettyjamesm", "createdAt": "2020-08-21T12:50:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQzODYxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDg0Mjk2MQ==", "url": "https://github.com/prestodb/presto/pull/15024#discussion_r474842961", "bodyText": "get it", "author": "zhenxiao", "createdAt": "2020-08-21T17:52:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQzODYxMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQzOTM5Mg==", "url": "https://github.com/prestodb/presto/pull/15024#discussion_r474439392", "bodyText": "I feel filesOnly in the comment a little confusing. what do you think? Maybe just keep:\nEnum representing the valid listing modes\nas comment, or we do not need the comment at all?", "author": "zhenxiao", "createdAt": "2020-08-21T06:43:12Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/s3/PrestoS3FileSystem.java", "diffHunk": "@@ -480,7 +496,22 @@ public boolean mkdirs(Path f, FsPermission permission)\n         return true;\n     }\n \n-    private Iterator<LocatedFileStatus> listPrefix(Path path)\n+    /**\n+     * Enum representing the valid listing modes. This could be two booleans (recursive, filesOnly) except", "originalCommit": "cb4be32ed3e044bb72dcffd49fb648e97c7f61ae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDY3ODE1OA==", "url": "https://github.com/prestodb/presto/pull/15024#discussion_r474678158", "bodyText": "I'm fine stripping the comment if you think it's more confusing than helpful. I left it there to try to explain that the 2x2 matrix only has 3 valid positions:\n(shallow, all)\n(shallow, filesOnly)\n(recursive, filesOnly)\nbecause: (recursive, all) is not a mode that is directly supported and requires externally recursing through \"subdirectories\" via (shallow, all) calls.\nUp to you if you think it's better to omit entirely or if you have a better phrasing in mind to make that more clear.", "author": "pettyjamesm", "createdAt": "2020-08-21T12:54:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQzOTM5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDg0NDY4OQ==", "url": "https://github.com/prestodb/presto/pull/15024#discussion_r474844689", "bodyText": "get it. how about we omit this comment and add line comment in each of the element of enum ListingMode:\nSHALLOW_ALL, // shallow, both files and directories\nSHALLOW_FILES_ONLY, // shallow files only\nRECURSIVE_FILES_ONLY // recursive, files only", "author": "zhenxiao", "createdAt": "2020-08-21T17:55:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQzOTM5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDk1ODI2Mw==", "url": "https://github.com/prestodb/presto/pull/15024#discussion_r474958263", "bodyText": "I stripped the comment and added an inline comment for SHALLOW_ALL since that's the only one that is any different from the enum name itself.", "author": "pettyjamesm", "createdAt": "2020-08-21T20:49:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQzOTM5Mg=="}], "type": "inlineReview"}, {"oid": "c108a13e7b407f194b57934b82366b4c20e10b2c", "url": "https://github.com/prestodb/presto/commit/c108a13e7b407f194b57934b82366b4c20e10b2c", "message": "Implement PrestoS3FileSystem#listFiles for direct recursive listings\n\nImplements FileSystem#listFiles(Path, boolean recursive) for\nPrestoS3FileSystem which in theory adds support for directly listing\nS3 files underneath a prefix without recursive calls through each\n\"directory\". This direct traversal requires much fewer requests\nwhen dealing with nested directories but may violate some PathFilter\nimplementation's expectation of being called at each directory level,\nand may perform worse when a large number objects are contained within\nhidden paths (since filtering would be performed after the fact). I'm\nopen to suggestions about how to balance this trade-off and integrate\nthis with the DirectoryLister.\n\nIncidentally, a straightforward improvement to getFileStatus fell out\nof the implementation allowing the isDir check for a path prefix (with\nno object present) to be done by limiting the listing result size to 1\ninstead of listing the full default 1000.", "committedDate": "2020-08-21T20:48:11Z", "type": "commit"}, {"oid": "c108a13e7b407f194b57934b82366b4c20e10b2c", "url": "https://github.com/prestodb/presto/commit/c108a13e7b407f194b57934b82366b4c20e10b2c", "message": "Implement PrestoS3FileSystem#listFiles for direct recursive listings\n\nImplements FileSystem#listFiles(Path, boolean recursive) for\nPrestoS3FileSystem which in theory adds support for directly listing\nS3 files underneath a prefix without recursive calls through each\n\"directory\". This direct traversal requires much fewer requests\nwhen dealing with nested directories but may violate some PathFilter\nimplementation's expectation of being called at each directory level,\nand may perform worse when a large number objects are contained within\nhidden paths (since filtering would be performed after the fact). I'm\nopen to suggestions about how to balance this trade-off and integrate\nthis with the DirectoryLister.\n\nIncidentally, a straightforward improvement to getFileStatus fell out\nof the implementation allowing the isDir check for a path prefix (with\nno object present) to be done by limiting the listing result size to 1\ninstead of listing the full default 1000.", "committedDate": "2020-08-21T20:48:11Z", "type": "forcePushed"}]}