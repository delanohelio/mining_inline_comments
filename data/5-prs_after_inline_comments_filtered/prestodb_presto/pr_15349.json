{"pr_number": 15349, "pr_title": "Changes to pass through sqlparser options", "pr_createdAt": "2020-10-23T18:36:10Z", "pr_url": "https://github.com/prestodb/presto/pull/15349", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjAwMDg5MA==", "url": "https://github.com/prestodb/presto/pull/15349#discussion_r512000890", "bodyText": "nit: we only use the \"this\" prefix in the constructor.  Otherwise just do sqlParserOptions", "author": "rschlussel", "createdAt": "2020-10-26T14:26:33Z", "path": "presto-main/src/main/java/com/facebook/presto/server/protocol/QueuedStatementResource.java", "diffHunk": "@@ -166,7 +171,7 @@ public Response postStatement(\n             throw badRequest(BAD_REQUEST, \"SQL statement is empty\");\n         }\n \n-        SessionContext sessionContext = new HttpRequestSessionContext(servletRequest);\n+        SessionContext sessionContext = new HttpRequestSessionContext(servletRequest, this.sqlParserOptions);", "originalCommit": "b63dcba7dc28b28ea768f58637d7b3e0cb52b1c5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjAwMzU0OA==", "url": "https://github.com/prestodb/presto/pull/15349#discussion_r512003548", "bodyText": "use requireNonNull, similar to how dispatchManager is set above.  (Not sure why there's a second requireNonNull for dispatch manager below.  that could be removed if you'd like.)", "author": "rschlussel", "createdAt": "2020-10-26T14:29:53Z", "path": "presto-main/src/main/java/com/facebook/presto/server/protocol/QueuedStatementResource.java", "diffHunk": "@@ -110,14 +111,18 @@\n     private final ConcurrentMap<QueryId, Query> queries = new ConcurrentHashMap<>();\n     private final ScheduledExecutorService queryPurger = newSingleThreadScheduledExecutor(threadsNamed(\"dispatch-query-purger\"));\n \n+    private final SqlParserOptions sqlParserOptions;\n+\n     @Inject\n     public QueuedStatementResource(\n             DispatchManager dispatchManager,\n             DispatchExecutor executor,\n-            LocalQueryProvider queryResultsProvider)\n+            LocalQueryProvider queryResultsProvider,\n+            SqlParserOptions sqlParserOptions)\n     {\n         this.dispatchManager = requireNonNull(dispatchManager, \"dispatchManager is null\");\n         this.queryResultsProvider = queryResultsProvider;\n+        this.sqlParserOptions = sqlParserOptions;", "originalCommit": "b63dcba7dc28b28ea768f58637d7b3e0cb52b1c5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjAwNjI2MA==", "url": "https://github.com/prestodb/presto/pull/15349#discussion_r512006260", "bodyText": "can you  also add a test that uses some special parser options and that allows the prepared statement to parse successfully?", "author": "rschlussel", "createdAt": "2020-10-26T14:33:14Z", "path": "presto-main/src/test/java/com/facebook/presto/server/TestHttpRequestSessionContext.java", "diffHunk": "@@ -99,7 +100,7 @@ public void testPreparedStatementsHeaderDoesNotParse()\n                         .put(PRESTO_PREPARED_STATEMENT, \"query1=abcdefg\")\n                         .build(),\n                 \"testRemote\");\n-        new HttpRequestSessionContext(request);\n+        new HttpRequestSessionContext(request, new SqlParserOptions());", "originalCommit": "b63dcba7dc28b28ea768f58637d7b3e0cb52b1c5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b27b097745398422ee87a664851b18b9df6fa7dc", "url": "https://github.com/prestodb/presto/commit/b27b097745398422ee87a664851b18b9df6fa7dc", "message": "Pass in SqlParserOptions to HttpRequestSessionContext for Prepared Statements\n\nParsing for prepared statements has differences from the regular statement handler in that configured parsing options are not performed consistently. This change passes the SqlParsingOptions through to the prepared statement handling code to make that logic consistent.\n\nTest Plan - Unit tests\n\n== RELEASE NOTES ==\n\nGeneral Changes\n* Pass SqlParserOptions to prepared statement handler so that parsing logic is consistent with regular requests", "committedDate": "2020-11-07T08:46:31Z", "type": "forcePushed"}, {"oid": "187609a8ed0a607cd22c0385e06d14338fa65412", "url": "https://github.com/prestodb/presto/commit/187609a8ed0a607cd22c0385e06d14338fa65412", "message": "Pass in SqlParserOptions to HttpRequestSessionContext for Prepared Statements\n\nParsing for prepared statements has differences from the regular statement handler in that configured parsing options are not performed consistently. This change passes the SqlParsingOptions through to the prepared statement handling code to make that logic consistent.\n\nTest Plan - Unit tests\n\n== RELEASE NOTES ==\n\nGeneral Changes\n* Pass SqlParserOptions to prepared statement handler so that parsing logic is consistent with regular requests", "committedDate": "2020-11-07T08:54:51Z", "type": "forcePushed"}, {"oid": "ffa4a1b1542797588b1854a9429e71a7f9f01caf", "url": "https://github.com/prestodb/presto/commit/ffa4a1b1542797588b1854a9429e71a7f9f01caf", "message": "Pass in SqlParserOptions to HttpRequestSessionContext for Prepared Statements.\n\n    Parsing for prepared statements has differences from the regular statement handler in that configured parsing options are not performed consistently. This change passes the SqlParsingOptions through to the prepared statement handling code to make that logic consistent.", "committedDate": "2020-11-09T18:38:44Z", "type": "forcePushed"}, {"oid": "6285bde3e5d104831162140b55088adae8298cb0", "url": "https://github.com/prestodb/presto/commit/6285bde3e5d104831162140b55088adae8298cb0", "message": "Pass in SqlParserOptions to HttpRequestSessionContext for Prepared Statements.\n\n    Parsing for prepared statements has differences from the regular statement handler in that configured parsing options are not performed consistently. This change passes the SqlParsingOptions through to the prepared statement handling code to make that logic consistent.", "committedDate": "2020-11-10T05:25:29Z", "type": "forcePushed"}, {"oid": "dac427e36bfce9b9628058a159f50dcb64fa338a", "url": "https://github.com/prestodb/presto/commit/dac427e36bfce9b9628058a159f50dcb64fa338a", "message": "Pass in SqlParserOptions to HttpRequestSessionContext for Prepared Statements.\n\n    Parsing for prepared statements has differences from the regular statement handler in that configured parsing options are not performed consistently. This change passes the SqlParsingOptions through to the prepared statement handling code to make that logic consistent.", "committedDate": "2020-11-10T19:47:38Z", "type": "forcePushed"}, {"oid": "34bd7ba69aff3952820e2343b57adef024da8dc2", "url": "https://github.com/prestodb/presto/commit/34bd7ba69aff3952820e2343b57adef024da8dc2", "message": "Pass in SqlParserOptions to HttpRequestSessionContext for Prepared Statements.\n\n    Parsing for prepared statements has differences from the regular statement handler in that configured parsing options are not performed consistently. This change passes the SqlParsingOptions through to the prepared statement handling code to make that logic consistent.", "committedDate": "2020-11-13T07:19:19Z", "type": "commit"}, {"oid": "34bd7ba69aff3952820e2343b57adef024da8dc2", "url": "https://github.com/prestodb/presto/commit/34bd7ba69aff3952820e2343b57adef024da8dc2", "message": "Pass in SqlParserOptions to HttpRequestSessionContext for Prepared Statements.\n\n    Parsing for prepared statements has differences from the regular statement handler in that configured parsing options are not performed consistently. This change passes the SqlParsingOptions through to the prepared statement handling code to make that logic consistent.", "committedDate": "2020-11-13T07:19:19Z", "type": "forcePushed"}]}