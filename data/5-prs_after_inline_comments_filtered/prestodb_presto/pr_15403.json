{"pr_number": 15403, "pr_title": "Fix int overflow error when spilling large page", "pr_createdAt": "2020-11-05T22:17:12Z", "pr_url": "https://github.com/prestodb/presto/pull/15403", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQxODI0NQ==", "url": "https://github.com/prestodb/presto/pull/15403#discussion_r518418245", "bodyText": "I think we can split with much moderate size? -- e.g. something like 8M?", "author": "wenleix", "createdAt": "2020-11-05T22:51:20Z", "path": "presto-main/src/main/java/com/facebook/presto/spiller/FileSingleStreamSpiller.java", "diffHunk": "@@ -144,11 +144,15 @@ private void writePages(Iterator<Page> pageIterator)\n             while (pageIterator.hasNext()) {\n                 Page page = pageIterator.next();\n                 spilledPagesInMemorySize += page.getSizeInBytes();\n-                SerializedPage serializedPage = serde.serialize(page);\n-                long pageSize = serializedPage.getSizeInBytes();\n-                localSpillContext.updateBytes(pageSize);\n-                spillerStats.addToTotalSpilledBytes(pageSize);\n-                writeSerializedPage(output, serializedPage);\n+                // page serialization requires  page.getSizeInBytes() + Integer.BYTES to fit in an integer\n+                splitPage(page, Integer.MAX_VALUE - Integer.BYTES).stream()", "originalCommit": "3ae5faa58c78267e87bd1f9f413cf3470a835e94", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e69e066cbfa9fa190bd42f7f2c00953eb80b8d50", "url": "https://github.com/prestodb/presto/commit/e69e066cbfa9fa190bd42f7f2c00953eb80b8d50", "message": "Fix int overflow error when spilling large page\n\nPage serialization requires page size to fin in an integer, so larger\npages could hit an int overflow error.", "committedDate": "2020-11-05T23:25:06Z", "type": "commit"}, {"oid": "e69e066cbfa9fa190bd42f7f2c00953eb80b8d50", "url": "https://github.com/prestodb/presto/commit/e69e066cbfa9fa190bd42f7f2c00953eb80b8d50", "message": "Fix int overflow error when spilling large page\n\nPage serialization requires page size to fin in an integer, so larger\npages could hit an int overflow error.", "committedDate": "2020-11-05T23:25:06Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODg1NTUzMQ==", "url": "https://github.com/prestodb/presto/pull/15403#discussion_r518855531", "bodyText": "We should probably add a similar fix to the storage based spiller\nCC: @wenleix", "author": "arhimondr", "createdAt": "2020-11-06T16:16:27Z", "path": "presto-main/src/main/java/com/facebook/presto/spiller/FileSingleStreamSpiller.java", "diffHunk": "@@ -144,11 +145,15 @@ private void writePages(Iterator<Page> pageIterator)\n             while (pageIterator.hasNext()) {\n                 Page page = pageIterator.next();\n                 spilledPagesInMemorySize += page.getSizeInBytes();\n-                SerializedPage serializedPage = serde.serialize(page);\n-                long pageSize = serializedPage.getSizeInBytes();\n-                localSpillContext.updateBytes(pageSize);\n-                spillerStats.addToTotalSpilledBytes(pageSize);\n-                writeSerializedPage(output, serializedPage);\n+                // page serialization requires  page.getSizeInBytes() + Integer.BYTES to fit in an integer\n+                splitPage(page, DEFAULT_MAX_PAGE_SIZE_IN_BYTES).stream()", "originalCommit": "e69e066cbfa9fa190bd42f7f2c00953eb80b8d50", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}