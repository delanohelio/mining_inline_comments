{"pr_number": 14468, "pr_title": "Fix integer overflow when creating a BigIntValues Filter", "pr_createdAt": "2020-05-02T08:14:43Z", "pr_url": "https://github.com/prestodb/presto/pull/14468", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM4OTQyNg==", "url": "https://github.com/prestodb/presto/pull/14468#discussion_r419389426", "bodyText": "Since max >= min, range must be > 0. Hence, range < Integer.MIN_VALUE check is not needed. Let's remove.", "author": "mbasmanova", "createdAt": "2020-05-04T12:10:38Z", "path": "presto-orc/src/main/java/com/facebook/presto/orc/TupleDomainFilterUtils.java", "diffHunk": "@@ -347,7 +347,8 @@ public static TupleDomainFilter toBigintValues(long[] values, boolean nullAllowe\n         // slots in a hash table), e.g. up to 192 bits per value.\n         // Filter based on a bitmap uses (max - min) / num-values bits per value.\n         // Choose the filter that uses less bits per value.\n-        if ((max - min + 1) > Integer.MAX_VALUE || ((max - min + 1) / values.length) > 192) {\n+        long range = max - min + 1;\n+        if (range > Integer.MAX_VALUE || range < Integer.MIN_VALUE || (range / values.length) > 192) {", "originalCommit": "dcfcfa10ed4c1849c9de6f984b87e8e9d7f24019", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYxNDM5OQ==", "url": "https://github.com/prestodb/presto/pull/14468#discussion_r419614399", "bodyText": "-Long.MIN_VALUE is Long.MIN value, that is why we need the check for < Integer.MIN_VALUE, thats the fix\nconsider max 10,  min -Long.MIN_VALUE\n10 - Long.MIN_VALUE - 1 = -9223372036854775799", "author": "bhhari", "createdAt": "2020-05-04T17:47:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM4OTQyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk0NzY2Mw==", "url": "https://github.com/prestodb/presto/pull/14468#discussion_r419947663", "bodyText": "There are other corner cases like Long.MAX - Long.MIN + 1 = 0\nFor such kind of corner cases using a BigInteger gives us accurate results", "author": "bhhari", "createdAt": "2020-05-05T08:35:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM4OTQyNg=="}], "type": "inlineReview"}, {"oid": "e14e13d2cb5a9eace4b38f6e01166b39b4daf0d9", "url": "https://github.com/prestodb/presto/commit/e14e13d2cb5a9eace4b38f6e01166b39b4daf0d9", "message": "Fix integer overflow when creating a BigIntValues Filter", "committedDate": "2020-05-05T08:31:35Z", "type": "forcePushed"}, {"oid": "bf5b8cb6a1b297e966e8610ff1ef955b4b24c245", "url": "https://github.com/prestodb/presto/commit/bf5b8cb6a1b297e966e8610ff1ef955b4b24c245", "message": "Fix integer overflow when creating a BigIntValues Filter", "committedDate": "2020-05-05T08:32:37Z", "type": "forcePushed"}, {"oid": "e1141dcfb14c7b65a7b48c7c2e77de25f280ad0c", "url": "https://github.com/prestodb/presto/commit/e1141dcfb14c7b65a7b48c7c2e77de25f280ad0c", "message": "Fix integer overflow when creating a BigIntValues Filter", "committedDate": "2020-05-05T08:33:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDEyNTAyMA==", "url": "https://github.com/prestodb/presto/pull/14468#discussion_r420125020", "bodyText": "@bhhari nit: perhaps, put each statement on a separate line for readability and consider using intValueExact instead of longValue\n        BigInteger range = BigInteger.valueOf(max)\n                .subtract(BigInteger.valueOf(min))\n                .add(BigInteger.valueOf(1));\n       if (range.compareTo(BigInteger.valueOf(Integer.MAX_VALUE)) == 1 || (range.intValueExact() / values.length) > 192) {\n            return BigintValuesUsingHashTable.of(min, max, values, nullAllowed);\n        }", "author": "mbasmanova", "createdAt": "2020-05-05T13:51:21Z", "path": "presto-orc/src/main/java/com/facebook/presto/orc/TupleDomainFilterUtils.java", "diffHunk": "@@ -347,7 +348,8 @@ public static TupleDomainFilter toBigintValues(long[] values, boolean nullAllowe\n         // slots in a hash table), e.g. up to 192 bits per value.\n         // Filter based on a bitmap uses (max - min) / num-values bits per value.\n         // Choose the filter that uses less bits per value.\n-        if ((max - min + 1) > Integer.MAX_VALUE || ((max - min + 1) / values.length) > 192) {\n+        BigInteger range = BigInteger.valueOf(max).subtract(BigInteger.valueOf(min)).add(BigInteger.valueOf(1));", "originalCommit": "e1141dcfb14c7b65a7b48c7c2e77de25f280ad0c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "564f45ec1ffc647c511de40718b08e614a0fde9f", "url": "https://github.com/prestodb/presto/commit/564f45ec1ffc647c511de40718b08e614a0fde9f", "message": "Fix integer overflow when creating a BigIntValues Filter", "committedDate": "2020-05-05T17:25:26Z", "type": "commit"}, {"oid": "564f45ec1ffc647c511de40718b08e614a0fde9f", "url": "https://github.com/prestodb/presto/commit/564f45ec1ffc647c511de40718b08e614a0fde9f", "message": "Fix integer overflow when creating a BigIntValues Filter", "committedDate": "2020-05-05T17:25:26Z", "type": "forcePushed"}]}