{"pr_number": 14390, "pr_title": "Refactor flattenCollection to GeometryUtils", "pr_createdAt": "2020-04-14T20:30:05Z", "pr_url": "https://github.com/prestodb/presto/pull/14390", "timeline": [{"oid": "01c06de1a5cf7c10787b4798f77bc24a682229d2", "url": "https://github.com/prestodb/presto/commit/01c06de1a5cf7c10787b4798f77bc24a682229d2", "message": "Refactor flattenCollection to GeometryUtils\n\nWe have need for this function in several places, and it is purely geometric.", "committedDate": "2020-04-14T20:31:13Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE2ODY4OA==", "url": "https://github.com/prestodb/presto/pull/14390#discussion_r413168688", "bodyText": "put OGCGeometry.fromText(\"GEOMETRYCOLLECTION (GEOMETRYCOLLECTION (POINT (0 1), POINT (1 2)))\"), to its own line", "author": "highker", "createdAt": "2020-04-22T17:18:14Z", "path": "presto-geospatial-toolkit/src/test/java/com/facebook/presto/geospatial/TestGeometryUtils.java", "diffHunk": "@@ -69,4 +75,48 @@ private void assertGetExtent(String wkt, Rectangle expected)\n     {\n         assertEquals(getExtent(OGCGeometry.fromText(wkt)), expected);\n     }\n+\n+    @Test\n+    public void testFlattenCollection()\n+    {\n+        assertFlattenLeavesUnchanged(OGCGeometry.fromText(\"POINT EMPTY\"));\n+        assertFlattenLeavesUnchanged(OGCGeometry.fromText(\"POINT (1 2)\"));\n+        assertFlattenLeavesUnchanged(OGCGeometry.fromText(\"MULTIPOINT EMPTY\"));\n+        assertFlattenLeavesUnchanged(OGCGeometry.fromText(\"MULTIPOINT (1 2)\"));\n+        assertFlattenLeavesUnchanged(OGCGeometry.fromText(\"MULTIPOINT (1 2, 3 4)\"));\n+        assertFlattenLeavesUnchanged(OGCGeometry.fromText(\"LINESTRING EMPTY\"));\n+        assertFlattenLeavesUnchanged(OGCGeometry.fromText(\"LINESTRING (1 2, 3 4)\"));\n+        assertFlattenLeavesUnchanged(OGCGeometry.fromText(\"MULTILINESTRING EMPTY\"));\n+        assertFlattenLeavesUnchanged(OGCGeometry.fromText(\"MULTILINESTRING ((1 2, 3 4))\"));\n+        assertFlattenLeavesUnchanged(OGCGeometry.fromText(\"MULTILINESTRING ((1 2, 3 4), (5 6, 7 8))\"));\n+        assertFlattenLeavesUnchanged(OGCGeometry.fromText(\"POLYGON EMPTY\"));\n+        assertFlattenLeavesUnchanged(OGCGeometry.fromText(\"POLYGON ((0 0, 0 1, 1 1, 0 0))\"));\n+        assertFlattenLeavesUnchanged(OGCGeometry.fromText(\"MULTIPOLYGON EMPTY\"));\n+        assertFlattenLeavesUnchanged(OGCGeometry.fromText(\"MULTIPOLYGON (((0 0, 0 1, 1 1, 0 0)))\"));\n+        assertFlattenLeavesUnchanged(OGCGeometry.fromText(\"MULTIPOLYGON (((0 0, 0 1, 1 1, 0 0)), ((10 10, 10 11, 11 11, 10 10)))\"));\n+\n+        assertFlattens(OGCGeometry.fromText(\"GEOMETRYCOLLECTION EMPTY\"), ImmutableList.of());\n+        assertFlattens(OGCGeometry.fromText(\"GEOMETRYCOLLECTION (POINT EMPTY)\"), OGCGeometry.fromText(\"POINT EMPTY\"));\n+        assertFlattens(OGCGeometry.fromText(\"GEOMETRYCOLLECTION (POINT (0 1))\"), OGCGeometry.fromText(\"POINT (0 1)\"));\n+        assertFlattens(OGCGeometry.fromText(\"GEOMETRYCOLLECTION (GEOMETRYCOLLECTION EMPTY)\"), ImmutableList.of());\n+        assertFlattens(OGCGeometry.fromText(\"GEOMETRYCOLLECTION (GEOMETRYCOLLECTION (POINT (0 1), POINT (1 2)))\"),", "originalCommit": "01c06de1a5cf7c10787b4798f77bc24a682229d2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0b4e281294969f602c1f451ca2f8b95a891ea84c", "url": "https://github.com/prestodb/presto/commit/0b4e281294969f602c1f451ca2f8b95a891ea84c", "message": "Refactor flattenCollection to GeometryUtils\n\nWe have need for this function in several places, and it is purely geometric.", "committedDate": "2020-04-22T17:57:41Z", "type": "commit"}, {"oid": "0b4e281294969f602c1f451ca2f8b95a891ea84c", "url": "https://github.com/prestodb/presto/commit/0b4e281294969f602c1f451ca2f8b95a891ea84c", "message": "Refactor flattenCollection to GeometryUtils\n\nWe have need for this function in several places, and it is purely geometric.", "committedDate": "2020-04-22T17:57:41Z", "type": "forcePushed"}]}