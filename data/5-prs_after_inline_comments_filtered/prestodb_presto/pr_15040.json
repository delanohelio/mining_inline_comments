{"pr_number": 15040, "pr_title": "Separate operator and stage statistics from query statistics", "pr_createdAt": "2020-08-17T13:24:39Z", "pr_url": "https://github.com/prestodb/presto/pull/15040", "timeline": [{"oid": "76c8adf241022f838c018a8f157f40af697d9f6b", "url": "https://github.com/prestodb/presto/commit/76c8adf241022f838c018a8f157f40af697d9f6b", "message": "Separate operator and stage statistics from query statistics\n\nAdd new classes `StageStatistics` and `OperatorStatistics` which helps add\nstage and operator level stats when the query completes. In addition to this,\nremoved all operator and stage related stats from QueryCompletedEvent\n\nThis change is necessary because of 2 reasons:\n\n1. By moving from JSON to structured objects, it helps us to better understand\n   what is being logged and the users of this data, can log this structured data\n   more efficiently\n2. It should make adding new stats a lot easier since we have the 3 layers of\n   abstraction clearly there now - query, stage, operator", "committedDate": "2020-08-17T13:25:15Z", "type": "forcePushed"}, {"oid": "13fb36ad6d40a4ce4b3b39eae73ad580272dec32", "url": "https://github.com/prestodb/presto/commit/13fb36ad6d40a4ce4b3b39eae73ad580272dec32", "message": "Separate operator and stage statistics from query statistics\n\nAdd new classes `StageStatistics` and `OperatorStatistics` which helps add\nstage and operator level stats when the query completes. In addition to this,\nremoved all operator and stage related stats from QueryCompletedEvent\n\nThis change is necessary because of 2 reasons:\n\n1. By moving from JSON to structured objects, it helps us to better understand\n   what is being logged and the users of this data, can log this structured data\n   more efficiently\n2. It should make adding new stats a lot easier since we have the 3 layers of\n   abstraction clearly there now - query, stage, operator", "committedDate": "2020-08-17T17:28:13Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzMwOTU1OA==", "url": "https://github.com/prestodb/presto/pull/15040#discussion_r473309558", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    this.info = info;\n          \n          \n            \n                    this.info = requireNonNull(info, \"info is null\");", "author": "tdcmeehan", "createdAt": "2020-08-19T20:48:30Z", "path": "presto-spi/src/main/java/com/facebook/presto/spi/eventlistener/OperatorStatistics.java", "diffHunk": "@@ -0,0 +1,348 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.spi.eventlistener;\n+\n+import com.facebook.presto.spi.plan.PlanNodeId;\n+import io.airlift.units.DataSize;\n+import io.airlift.units.Duration;\n+\n+import javax.annotation.concurrent.Immutable;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+@Immutable\n+public class OperatorStatistics\n+{\n+    private final int stageId;\n+    private final int stageExecutionId;\n+    private final int pipelineId;\n+    private final int operatorId;\n+    private final PlanNodeId planNodeId;\n+    private final String operatorType;\n+\n+    private final long totalDrivers;\n+\n+    private final long addInputCalls;\n+    private final Duration addInputWall;\n+    private final Duration addInputCpu;\n+    private final DataSize addInputAllocation;\n+    private final DataSize rawInputDataSize;\n+    private final long rawInputPositions;\n+    private final DataSize inputDataSize;\n+    private final long inputPositions;\n+    private final double sumSquaredInputPositions;\n+\n+    private final long getOutputCalls;\n+    private final Duration getOutputWall;\n+    private final Duration getOutputCpu;\n+    private final DataSize getOutputAllocation;\n+    private final DataSize outputDataSize;\n+    private final long outputPositions;\n+\n+    private final DataSize physicalWrittenDataSize;\n+\n+    private final Duration blockedWall;\n+\n+    private final long finishCalls;\n+    private final Duration finishWall;\n+    private final Duration finishCpu;\n+    private final DataSize finishAllocation;\n+\n+    private final DataSize userMemoryReservation;\n+    private final DataSize revocableMemoryReservation;\n+    private final DataSize systemMemoryReservation;\n+    private final DataSize peakUserMemoryReservation;\n+    private final DataSize peakSystemMemoryReservation;\n+    private final DataSize peakTotalMemoryReservation;\n+\n+    private final DataSize spilledDataSize;\n+\n+    private final String info;\n+\n+    public OperatorStatistics(\n+            int stageId,\n+            int stageExecutionId,\n+            int pipelineId,\n+            int operatorId,\n+            PlanNodeId planNodeId,\n+            String operatorType,\n+\n+            long totalDrivers,\n+\n+            long addInputCalls,\n+            Duration addInputWall,\n+            Duration addInputCpu,\n+            DataSize addInputAllocation,\n+            DataSize rawInputDataSize,\n+            long rawInputPositions,\n+            DataSize inputDataSize,\n+            long inputPositions,\n+            double sumSquaredInputPositions,\n+\n+            long getOutputCalls,\n+            Duration getOutputWall,\n+            Duration getOutputCpu,\n+            DataSize getOutputAllocation,\n+            DataSize outputDataSize,\n+            long outputPositions,\n+\n+            DataSize physicalWrittenDataSize,\n+\n+            Duration blockedWall,\n+\n+            long finishCalls,\n+            Duration finishWall,\n+            Duration finishCpu,\n+            DataSize finishAllocation,\n+\n+            DataSize userMemoryReservation,\n+            DataSize revocableMemoryReservation,\n+            DataSize systemMemoryReservation,\n+            DataSize peakUserMemoryReservation,\n+            DataSize peakSystemMemoryReservation,\n+            DataSize peakTotalMemoryReservation,\n+\n+            DataSize spilledDataSize,\n+\n+            String info)\n+    {\n+        this.stageId = stageId;\n+        this.stageExecutionId = stageExecutionId;\n+        this.pipelineId = pipelineId;\n+\n+        this.operatorId = operatorId;\n+        this.planNodeId = requireNonNull(planNodeId, \"planNodeId is null\");\n+        this.operatorType = requireNonNull(operatorType, \"operatorType is null\");\n+\n+        this.totalDrivers = totalDrivers;\n+\n+        this.addInputCalls = addInputCalls;\n+        this.addInputWall = requireNonNull(addInputWall, \"addInputWall is null\");\n+        this.addInputCpu = requireNonNull(addInputCpu, \"addInputCpu is null\");\n+        this.addInputAllocation = requireNonNull(addInputAllocation, \"addInputAllocation is null\");\n+        this.rawInputDataSize = requireNonNull(rawInputDataSize, \"rawInputDataSize is null\");\n+        this.rawInputPositions = requireNonNull(rawInputPositions, \"rawInputPositions is null\");\n+        this.inputDataSize = requireNonNull(inputDataSize, \"inputDataSize is null\");\n+        this.inputPositions = inputPositions;\n+        this.sumSquaredInputPositions = sumSquaredInputPositions;\n+\n+        this.getOutputCalls = getOutputCalls;\n+        this.getOutputWall = requireNonNull(getOutputWall, \"getOutputWall is null\");\n+        this.getOutputCpu = requireNonNull(getOutputCpu, \"getOutputCpu is null\");\n+        this.getOutputAllocation = requireNonNull(getOutputAllocation, \"getOutputAllocation is null\");\n+        this.outputDataSize = requireNonNull(outputDataSize, \"outputDataSize is null\");\n+        this.outputPositions = outputPositions;\n+\n+        this.physicalWrittenDataSize = requireNonNull(physicalWrittenDataSize, \"writtenDataSize is null\");\n+\n+        this.blockedWall = requireNonNull(blockedWall, \"blockedWall is null\");\n+\n+        this.finishCalls = finishCalls;\n+        this.finishWall = requireNonNull(finishWall, \"finishWall is null\");\n+        this.finishCpu = requireNonNull(finishCpu, \"finishCpu is null\");\n+        this.finishAllocation = requireNonNull(finishAllocation, \"finishAllocation is null\");\n+\n+        this.userMemoryReservation = requireNonNull(userMemoryReservation, \"userMemoryReservation is null\");\n+        this.revocableMemoryReservation = requireNonNull(revocableMemoryReservation, \"revocableMemoryReservation is null\");\n+        this.systemMemoryReservation = requireNonNull(systemMemoryReservation, \"systemMemoryReservation is null\");\n+\n+        this.peakUserMemoryReservation = requireNonNull(peakUserMemoryReservation, \"peakUserMemoryReservation is null\");\n+        this.peakSystemMemoryReservation = requireNonNull(peakSystemMemoryReservation, \"peakSystemMemoryReservation is null\");\n+        this.peakTotalMemoryReservation = requireNonNull(peakTotalMemoryReservation, \"peakTotalMemoryReservation is null\");\n+\n+        this.spilledDataSize = requireNonNull(spilledDataSize, \"spilledDataSize is null\");\n+\n+        this.info = info;", "originalCommit": "13fb36ad6d40a4ce4b3b39eae73ad580272dec32", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzM5MTc5Nw==", "url": "https://github.com/prestodb/presto/pull/15040#discussion_r473391797", "bodyText": "This can be null. Converted this to an Optional and added the requireNonNull check", "author": "mayankgarg1990", "createdAt": "2020-08-19T22:33:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzMwOTU1OA=="}], "type": "inlineReview"}, {"oid": "740fed7e49109d1404716c43aa822e315aad7560", "url": "https://github.com/prestodb/presto/commit/740fed7e49109d1404716c43aa822e315aad7560", "message": "Separate operator and stage statistics from query statistics\n\nAdd new classes `StageStatistics` and `OperatorStatistics` which helps add\nstage and operator level stats when the query completes. In addition to this,\nremoved all operator and stage related stats from QueryCompletedEvent\n\nThis change is necessary because of 2 reasons:\n\n1. By moving from JSON to structured objects, it helps us to better understand\n   what is being logged and the users of this data, can log this structured data\n   more efficiently\n2. It should make adding new stats a lot easier since we have the 3 layers of\n   abstraction clearly there now - query, stage, operator", "committedDate": "2020-08-19T22:30:13Z", "type": "forcePushed"}, {"oid": "f93b82bc573600dae93ab0dbfa958a8ae4c12c5d", "url": "https://github.com/prestodb/presto/commit/f93b82bc573600dae93ab0dbfa958a8ae4c12c5d", "message": "Separate operator and stage statistics from query statistics\n\nAdd new classes `StageStatistics` and `OperatorStatistics` which helps add\nstage and operator level stats when the query completes. In addition to this,\nremoved all operator and stage related stats from QueryCompletedEvent\n\nThis change is necessary because of 2 reasons:\n\n1. By moving from JSON to structured objects, it helps us to better understand\n   what is being logged and the users of this data, can log this structured data\n   more efficiently\n2. It should make adding new stats a lot easier since we have the 3 layers of\n   abstraction clearly there now - query, stage, operator", "committedDate": "2020-08-19T22:33:49Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ2ODIwOA==", "url": "https://github.com/prestodb/presto/pull/15040#discussion_r473468208", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    this.info = requireNonNull(info, \"info us null\");\n          \n          \n            \n                    this.info = requireNonNull(info, \"info is null\");", "author": "tdcmeehan", "createdAt": "2020-08-20T00:22:03Z", "path": "presto-spi/src/main/java/com/facebook/presto/spi/eventlistener/OperatorStatistics.java", "diffHunk": "@@ -0,0 +1,350 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.spi.eventlistener;\n+\n+import com.facebook.presto.spi.plan.PlanNodeId;\n+import io.airlift.units.DataSize;\n+import io.airlift.units.Duration;\n+\n+import javax.annotation.concurrent.Immutable;\n+\n+import java.util.Optional;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+@Immutable\n+public class OperatorStatistics\n+{\n+    private final int stageId;\n+    private final int stageExecutionId;\n+    private final int pipelineId;\n+    private final int operatorId;\n+    private final PlanNodeId planNodeId;\n+    private final String operatorType;\n+\n+    private final long totalDrivers;\n+\n+    private final long addInputCalls;\n+    private final Duration addInputWall;\n+    private final Duration addInputCpu;\n+    private final DataSize addInputAllocation;\n+    private final DataSize rawInputDataSize;\n+    private final long rawInputPositions;\n+    private final DataSize inputDataSize;\n+    private final long inputPositions;\n+    private final double sumSquaredInputPositions;\n+\n+    private final long getOutputCalls;\n+    private final Duration getOutputWall;\n+    private final Duration getOutputCpu;\n+    private final DataSize getOutputAllocation;\n+    private final DataSize outputDataSize;\n+    private final long outputPositions;\n+\n+    private final DataSize physicalWrittenDataSize;\n+\n+    private final Duration blockedWall;\n+\n+    private final long finishCalls;\n+    private final Duration finishWall;\n+    private final Duration finishCpu;\n+    private final DataSize finishAllocation;\n+\n+    private final DataSize userMemoryReservation;\n+    private final DataSize revocableMemoryReservation;\n+    private final DataSize systemMemoryReservation;\n+    private final DataSize peakUserMemoryReservation;\n+    private final DataSize peakSystemMemoryReservation;\n+    private final DataSize peakTotalMemoryReservation;\n+\n+    private final DataSize spilledDataSize;\n+\n+    private final Optional<String> info;\n+\n+    public OperatorStatistics(\n+            int stageId,\n+            int stageExecutionId,\n+            int pipelineId,\n+            int operatorId,\n+            PlanNodeId planNodeId,\n+            String operatorType,\n+\n+            long totalDrivers,\n+\n+            long addInputCalls,\n+            Duration addInputWall,\n+            Duration addInputCpu,\n+            DataSize addInputAllocation,\n+            DataSize rawInputDataSize,\n+            long rawInputPositions,\n+            DataSize inputDataSize,\n+            long inputPositions,\n+            double sumSquaredInputPositions,\n+\n+            long getOutputCalls,\n+            Duration getOutputWall,\n+            Duration getOutputCpu,\n+            DataSize getOutputAllocation,\n+            DataSize outputDataSize,\n+            long outputPositions,\n+\n+            DataSize physicalWrittenDataSize,\n+\n+            Duration blockedWall,\n+\n+            long finishCalls,\n+            Duration finishWall,\n+            Duration finishCpu,\n+            DataSize finishAllocation,\n+\n+            DataSize userMemoryReservation,\n+            DataSize revocableMemoryReservation,\n+            DataSize systemMemoryReservation,\n+            DataSize peakUserMemoryReservation,\n+            DataSize peakSystemMemoryReservation,\n+            DataSize peakTotalMemoryReservation,\n+\n+            DataSize spilledDataSize,\n+\n+            Optional<String> info)\n+    {\n+        this.stageId = stageId;\n+        this.stageExecutionId = stageExecutionId;\n+        this.pipelineId = pipelineId;\n+\n+        this.operatorId = operatorId;\n+        this.planNodeId = requireNonNull(planNodeId, \"planNodeId is null\");\n+        this.operatorType = requireNonNull(operatorType, \"operatorType is null\");\n+\n+        this.totalDrivers = totalDrivers;\n+\n+        this.addInputCalls = addInputCalls;\n+        this.addInputWall = requireNonNull(addInputWall, \"addInputWall is null\");\n+        this.addInputCpu = requireNonNull(addInputCpu, \"addInputCpu is null\");\n+        this.addInputAllocation = requireNonNull(addInputAllocation, \"addInputAllocation is null\");\n+        this.rawInputDataSize = requireNonNull(rawInputDataSize, \"rawInputDataSize is null\");\n+        this.rawInputPositions = requireNonNull(rawInputPositions, \"rawInputPositions is null\");\n+        this.inputDataSize = requireNonNull(inputDataSize, \"inputDataSize is null\");\n+        this.inputPositions = inputPositions;\n+        this.sumSquaredInputPositions = sumSquaredInputPositions;\n+\n+        this.getOutputCalls = getOutputCalls;\n+        this.getOutputWall = requireNonNull(getOutputWall, \"getOutputWall is null\");\n+        this.getOutputCpu = requireNonNull(getOutputCpu, \"getOutputCpu is null\");\n+        this.getOutputAllocation = requireNonNull(getOutputAllocation, \"getOutputAllocation is null\");\n+        this.outputDataSize = requireNonNull(outputDataSize, \"outputDataSize is null\");\n+        this.outputPositions = outputPositions;\n+\n+        this.physicalWrittenDataSize = requireNonNull(physicalWrittenDataSize, \"writtenDataSize is null\");\n+\n+        this.blockedWall = requireNonNull(blockedWall, \"blockedWall is null\");\n+\n+        this.finishCalls = finishCalls;\n+        this.finishWall = requireNonNull(finishWall, \"finishWall is null\");\n+        this.finishCpu = requireNonNull(finishCpu, \"finishCpu is null\");\n+        this.finishAllocation = requireNonNull(finishAllocation, \"finishAllocation is null\");\n+\n+        this.userMemoryReservation = requireNonNull(userMemoryReservation, \"userMemoryReservation is null\");\n+        this.revocableMemoryReservation = requireNonNull(revocableMemoryReservation, \"revocableMemoryReservation is null\");\n+        this.systemMemoryReservation = requireNonNull(systemMemoryReservation, \"systemMemoryReservation is null\");\n+\n+        this.peakUserMemoryReservation = requireNonNull(peakUserMemoryReservation, \"peakUserMemoryReservation is null\");\n+        this.peakSystemMemoryReservation = requireNonNull(peakSystemMemoryReservation, \"peakSystemMemoryReservation is null\");\n+        this.peakTotalMemoryReservation = requireNonNull(peakTotalMemoryReservation, \"peakTotalMemoryReservation is null\");\n+\n+        this.spilledDataSize = requireNonNull(spilledDataSize, \"spilledDataSize is null\");\n+\n+        this.info = requireNonNull(info, \"info us null\");", "originalCommit": "f93b82bc573600dae93ab0dbfa958a8ae4c12c5d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ3MTYwNg==", "url": "https://github.com/prestodb/presto/pull/15040#discussion_r473471606", "bodyText": "My bad :)", "author": "mayankgarg1990", "createdAt": "2020-08-20T00:27:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ2ODIwOA=="}], "type": "inlineReview"}, {"oid": "ab76c82741b6727f2d1933fb4ec921d6b2e8e8d5", "url": "https://github.com/prestodb/presto/commit/ab76c82741b6727f2d1933fb4ec921d6b2e8e8d5", "message": "Separate operator and stage statistics from query statistics\n\nAdd new classes `StageStatistics` and `OperatorStatistics` which helps add\nstage and operator level stats when the query completes. In addition to this,\nremoved all operator and stage related stats from QueryCompletedEvent\n\nThis change is necessary because of 2 reasons:\n\n1. By moving from JSON to structured objects, it helps us to better understand\n   what is being logged and the users of this data, can log this structured data\n   more efficiently\n2. It should make adding new stats a lot easier since we have the 3 layers of\n   abstraction clearly there now - query, stage, operator", "committedDate": "2020-08-20T00:28:03Z", "type": "commit"}, {"oid": "ab76c82741b6727f2d1933fb4ec921d6b2e8e8d5", "url": "https://github.com/prestodb/presto/commit/ab76c82741b6727f2d1933fb4ec921d6b2e8e8d5", "message": "Separate operator and stage statistics from query statistics\n\nAdd new classes `StageStatistics` and `OperatorStatistics` which helps add\nstage and operator level stats when the query completes. In addition to this,\nremoved all operator and stage related stats from QueryCompletedEvent\n\nThis change is necessary because of 2 reasons:\n\n1. By moving from JSON to structured objects, it helps us to better understand\n   what is being logged and the users of this data, can log this structured data\n   more efficiently\n2. It should make adding new stats a lot easier since we have the 3 layers of\n   abstraction clearly there now - query, stage, operator", "committedDate": "2020-08-20T00:28:03Z", "type": "forcePushed"}]}