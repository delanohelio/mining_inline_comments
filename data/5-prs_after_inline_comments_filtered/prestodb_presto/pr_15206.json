{"pr_number": 15206, "pr_title": "Reserve memory before projecting rows", "pr_createdAt": "2020-09-22T10:03:43Z", "pr_url": "https://github.com/prestodb/presto/pull/15206", "timeline": [{"oid": "2d6e19d6231c97c0c4eee14812975248c49a96aa", "url": "https://github.com/prestodb/presto/commit/2d6e19d6231c97c0c4eee14812975248c49a96aa", "message": "Reserve memory before projecting rows\n\nBenchmarkPageProcessor shows 26% improvement in throughput\n(higher is better) and 4x reduction in gc.alloc.rate.norm\n(lower is better) in GC benchmarks.\n\nBefore:\n\nBenchmark                                                          Mode  Cnt       Score        Error   Units\nBenchmarkPageProcessor.compiled                                   thrpt   10    9471.888 \u00b1   1714.062   ops/s\nBenchmarkPageProcessor.compiled:\u00b7gc.alloc.rate                    thrpt   10    1641.155 \u00b1    297.797  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.alloc.rate.norm               thrpt   10  363544.352 \u00b1      1.232    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Eden_Space           thrpt   10    1710.582 \u00b1   1806.778  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Eden_Space.norm      thrpt   10  401568.694 \u00b1 431208.815    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Survivor_Space       thrpt   10       0.021 \u00b1      0.055  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Survivor_Space.norm  thrpt   10       4.644 \u00b1     12.007    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.count                         thrpt   10       7.000               counts\nBenchmarkPageProcessor.compiled:\u00b7gc.time                          thrpt   10      31.000                   ms\n\nAfter:\n\nBenchmark                                                          Mode  Cnt      Score        Error   Units\nBenchmarkPageProcessor.compiled                                   thrpt   10  11899.362 \u00b1   1106.385   ops/s\nBenchmarkPageProcessor.compiled:\u00b7gc.alloc.rate                    thrpt   10    527.478 \u00b1     49.303  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.alloc.rate.norm               thrpt   10  92928.304 \u00b1      1.088    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Eden_Space           thrpt   10    492.209 \u00b1    644.064  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Eden_Space.norm      thrpt   10  89467.680 \u00b1 118215.870    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Survivor_Space       thrpt   10      0.200 \u00b1      0.906  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Survivor_Space.norm  thrpt   10     34.771 \u00b1    157.465    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.count                         thrpt   10      6.000               counts\nBenchmarkPageProcessor.compiled:\u00b7gc.time                          thrpt   10     25.000                   ms", "committedDate": "2020-09-25T01:24:40Z", "type": "forcePushed"}, {"oid": "11519738e4dd5f5a598eb83648346d07c7ce193b", "url": "https://github.com/prestodb/presto/commit/11519738e4dd5f5a598eb83648346d07c7ce193b", "message": "Reserve memory before projecting rows\n\nBenchmarkPageProcessor shows 26% improvement in throughput\n(higher is better) and 4x reduction in gc.alloc.rate.norm\n(lower is better) in GC benchmarks.\n\nBefore:\n\nBenchmark                                                          Mode  Cnt       Score        Error   Units\nBenchmarkPageProcessor.compiled                                   thrpt   10    9471.888 \u00b1   1714.062   ops/s\nBenchmarkPageProcessor.compiled:\u00b7gc.alloc.rate                    thrpt   10    1641.155 \u00b1    297.797  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.alloc.rate.norm               thrpt   10  363544.352 \u00b1      1.232    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Eden_Space           thrpt   10    1710.582 \u00b1   1806.778  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Eden_Space.norm      thrpt   10  401568.694 \u00b1 431208.815    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Survivor_Space       thrpt   10       0.021 \u00b1      0.055  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Survivor_Space.norm  thrpt   10       4.644 \u00b1     12.007    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.count                         thrpt   10       7.000               counts\nBenchmarkPageProcessor.compiled:\u00b7gc.time                          thrpt   10      31.000                   ms\n\nAfter:\n\nBenchmark                                                          Mode  Cnt      Score        Error   Units\nBenchmarkPageProcessor.compiled                                   thrpt   10  11899.362 \u00b1   1106.385   ops/s\nBenchmarkPageProcessor.compiled:\u00b7gc.alloc.rate                    thrpt   10    527.478 \u00b1     49.303  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.alloc.rate.norm               thrpt   10  92928.304 \u00b1      1.088    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Eden_Space           thrpt   10    492.209 \u00b1    644.064  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Eden_Space.norm      thrpt   10  89467.680 \u00b1 118215.870    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Survivor_Space       thrpt   10      0.200 \u00b1      0.906  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Survivor_Space.norm  thrpt   10     34.771 \u00b1    157.465    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.count                         thrpt   10      6.000               counts\nBenchmarkPageProcessor.compiled:\u00b7gc.time                          thrpt   10     25.000                   ms", "committedDate": "2020-09-25T07:21:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTI4NDQ1OQ==", "url": "https://github.com/prestodb/presto/pull/15206#discussion_r495284459", "bodyText": "curious why we don't updateDataSize here? It is coz the primitive types take care of it for complex types?", "author": "sujay-jain", "createdAt": "2020-09-25T22:30:59Z", "path": "presto-common/src/main/java/com/facebook/presto/common/block/MapBlockBuilder.java", "diffHunk": "@@ -470,6 +471,15 @@ public BlockBuilder newBlockBuilderLike(BlockBuilderStatus blockBuilderStatus)\n                 newNegativeOneFilledArray(newSize * HASH_MULTIPLIER));\n     }\n \n+    @Override\n+    public void reserve(int positionCount)\n+    {\n+        assert positionCount > 0;\n+\n+        mapIsNull = ensureCapacity(mapIsNull, positionCount);\n+        offsets = ensureCapacity(offsets, positionCount + 1);\n+    }", "originalCommit": "11519738e4dd5f5a598eb83648346d07c7ce193b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjU2NzI0Nw==", "url": "https://github.com/prestodb/presto/pull/15206#discussion_r496567247", "bodyText": "@sujay-jain There is no updateDataSize in the MapBlockBuilder and RowBlockBuilder. I guess there were some historic reasons why they were treated differently. My understanding is the introduction of updateDataSize was to relieve the costly calculation in getRetainedSizeInBytes() but I don't have first hand data showing the benefit. So I'm just following the existing ways for now.", "author": "yingsu00", "createdAt": "2020-09-29T09:19:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTI4NDQ1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjUyNzk5OA==", "url": "https://github.com/prestodb/presto/pull/15206#discussion_r496527998", "bodyText": "This method needs a comment.", "author": "mbasmanova", "createdAt": "2020-09-29T08:29:38Z", "path": "presto-common/src/main/java/com/facebook/presto/common/block/BlockBuilder.java", "diffHunk": "@@ -118,4 +118,6 @@ default BlockBuilder appendStructureInternal(Block block, int position)\n      * Creates a new block builder of the same type based on the current usage statistics of this block builder.\n      */\n     BlockBuilder newBlockBuilderLike(BlockBuilderStatus blockBuilderStatus);\n+\n+    void reserve(int positionCount);", "originalCommit": "3d07458192512d65b0fd0c4d6c6534246356ecec", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjUyODk2MA==", "url": "https://github.com/prestodb/presto/pull/15206#discussion_r496528960", "bodyText": "typo: byte -> boolean", "author": "mbasmanova", "createdAt": "2020-09-29T08:30:31Z", "path": "presto-common/src/main/java/com/facebook/presto/common/block/BlockUtil.java", "diffHunk": "@@ -266,6 +266,22 @@ else if (buffer.length < capacity) {\n         return buffer;\n     }\n \n+    /**\n+     * Returns a byte array of size capacity if the input buffer is null or smaller than the capacity.", "originalCommit": "3d07458192512d65b0fd0c4d6c6534246356ecec", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "407ac5d33e348b125e306a005b825b9dd771c653", "url": "https://github.com/prestodb/presto/commit/407ac5d33e348b125e306a005b825b9dd771c653", "message": "Reserve memory before projecting rows\n\nBenchmarkPageProcessor shows 33% improvement in throughput\n(higher is better) and 4x reduction in gc.alloc.rate.norm\n(lower is better) in GC benchmarks.\n\nBefore\nBenchmark                                                         (projectionDataType)   Mode  Cnt       Score        Error   Units\nBenchmarkPageProcessor.compiled                                                 BIGINT  thrpt   10    8374.449 \u00b1   1023.859   ops/s\nBenchmarkPageProcessor.compiled:\u00b7gc.alloc.rate                                  BIGINT  thrpt   10    1451.783 \u00b1    179.079  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.alloc.rate.norm                             BIGINT  thrpt   10  363640.395 \u00b1      1.385    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Eden_Space                         BIGINT  thrpt   10    1448.711 \u00b1   1904.852  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Eden_Space.norm                    BIGINT  thrpt   10  368448.852 \u00b1 487748.838    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Survivor_Space                     BIGINT  thrpt   10       0.019 \u00b1      0.054  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Survivor_Space.norm                BIGINT  thrpt   10       4.904 \u00b1     13.838    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.count                                       BIGINT  thrpt   10       6.000               counts\nBenchmarkPageProcessor.compiled:\u00b7gc.time                                        BIGINT  thrpt   10      27.000                   ms\nBenchmarkPageProcessor.compiled                                                 DOUBLE  thrpt   10    8805.494 \u00b1    916.612   ops/s\nBenchmarkPageProcessor.compiled:\u00b7gc.alloc.rate                                  DOUBLE  thrpt   10    1527.888 \u00b1    159.617  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.alloc.rate.norm                             DOUBLE  thrpt   10  363640.100 \u00b1      0.011    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Eden_Space                         DOUBLE  thrpt   10    1716.294 \u00b1   1812.190  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Eden_Space.norm                    DOUBLE  thrpt   10  414368.217 \u00b1 436717.530    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Survivor_Space                     DOUBLE  thrpt   10       0.008 \u00b1      0.023  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Survivor_Space.norm                DOUBLE  thrpt   10       1.942 \u00b1      5.771    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.count                                       DOUBLE  thrpt   10       7.000               counts\nBenchmarkPageProcessor.compiled:\u00b7gc.time                                        DOUBLE  thrpt   10      30.000                   ms\n\nAfter\n\nBenchmark                                                         (projectionDataType)   Mode  Cnt       Score        Error   Units\nBenchmarkPageProcessor.compiled                                                 BIGINT  thrpt   10   11140.511 \u00b1   1245.100   ops/s\nBenchmarkPageProcessor.compiled:\u00b7gc.alloc.rate                                  BIGINT  thrpt   10     494.381 \u00b1     55.174  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.alloc.rate.norm                             BIGINT  thrpt   10   93152.321 \u00b1      1.149    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Eden_Space                         BIGINT  thrpt   10     534.785 \u00b1    705.834  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Eden_Space.norm                    BIGINT  thrpt   10  105433.423 \u00b1 139043.448    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Survivor_Space                     BIGINT  thrpt   10       0.012 \u00b1      0.045  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Survivor_Space.norm                BIGINT  thrpt   10       2.275 \u00b1      8.238    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.count                                       BIGINT  thrpt   10       6.000               counts\nBenchmarkPageProcessor.compiled:\u00b7gc.time                                        BIGINT  thrpt   10      27.000                   ms\nBenchmarkPageProcessor.compiled                                                 DOUBLE  thrpt   10   11050.149 \u00b1   1224.166   ops/s\nBenchmarkPageProcessor.compiled:\u00b7gc.alloc.rate                                  DOUBLE  thrpt   10     491.177 \u00b1     54.807  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.alloc.rate.norm                             DOUBLE  thrpt   10   93152.079 \u00b1      0.009    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Eden_Space                         DOUBLE  thrpt   10     365.061 \u00b1    889.401  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Eden_Space.norm                    DOUBLE  thrpt   10   68525.405 \u00b1 167416.354    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Survivor_Space                     DOUBLE  thrpt   10       0.006 \u00b1      0.020  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Survivor_Space.norm                DOUBLE  thrpt   10       1.133 \u00b1      3.612    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.count                                       DOUBLE  thrpt   10       3.000               counts\nBenchmarkPageProcessor.compiled:\u00b7gc.time                                        DOUBLE  thrpt   10      13.000                   ms", "committedDate": "2020-09-30T06:38:32Z", "type": "forcePushed"}, {"oid": "bf4bf6a6101f0526201192f89b8ae57b6c7fd8bf", "url": "https://github.com/prestodb/presto/commit/bf4bf6a6101f0526201192f89b8ae57b6c7fd8bf", "message": "Reserve memory before projecting rows\n\nBenchmarkPageProcessor shows 33% improvement in throughput\n(higher is better) and 4x reduction in gc.alloc.rate.norm\n(lower is better) in GC benchmarks.\n\nBefore\nBenchmark                                                         (projectionDataType)   Mode  Cnt       Score        Error   Units\nBenchmarkPageProcessor.compiled                                                 BIGINT  thrpt   10    8374.449 \u00b1   1023.859   ops/s\nBenchmarkPageProcessor.compiled:\u00b7gc.alloc.rate                                  BIGINT  thrpt   10    1451.783 \u00b1    179.079  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.alloc.rate.norm                             BIGINT  thrpt   10  363640.395 \u00b1      1.385    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Eden_Space                         BIGINT  thrpt   10    1448.711 \u00b1   1904.852  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Eden_Space.norm                    BIGINT  thrpt   10  368448.852 \u00b1 487748.838    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Survivor_Space                     BIGINT  thrpt   10       0.019 \u00b1      0.054  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Survivor_Space.norm                BIGINT  thrpt   10       4.904 \u00b1     13.838    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.count                                       BIGINT  thrpt   10       6.000               counts\nBenchmarkPageProcessor.compiled:\u00b7gc.time                                        BIGINT  thrpt   10      27.000                   ms\nBenchmarkPageProcessor.compiled                                                 DOUBLE  thrpt   10    8805.494 \u00b1    916.612   ops/s\nBenchmarkPageProcessor.compiled:\u00b7gc.alloc.rate                                  DOUBLE  thrpt   10    1527.888 \u00b1    159.617  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.alloc.rate.norm                             DOUBLE  thrpt   10  363640.100 \u00b1      0.011    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Eden_Space                         DOUBLE  thrpt   10    1716.294 \u00b1   1812.190  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Eden_Space.norm                    DOUBLE  thrpt   10  414368.217 \u00b1 436717.530    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Survivor_Space                     DOUBLE  thrpt   10       0.008 \u00b1      0.023  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Survivor_Space.norm                DOUBLE  thrpt   10       1.942 \u00b1      5.771    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.count                                       DOUBLE  thrpt   10       7.000               counts\nBenchmarkPageProcessor.compiled:\u00b7gc.time                                        DOUBLE  thrpt   10      30.000                   ms\n\nBenchmark                                                         (projectionDataType)   Mode  Cnt       Score        Error   Units\nBenchmarkPageProcessor.compiled                                                 BIGINT  thrpt   10   11584.658 \u00b1   1122.544   ops/s\nBenchmarkPageProcessor.compiled:\u00b7gc.alloc.rate                                  BIGINT  thrpt   10     514.595 \u00b1     49.501  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.alloc.rate.norm                             BIGINT  thrpt   10   93152.294 \u00b1      1.029    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Eden_Space                         BIGINT  thrpt   10     557.664 \u00b1    901.262  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Eden_Space.norm                    BIGINT  thrpt   10  101729.476 \u00b1 165414.127    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Survivor_Space                     BIGINT  thrpt   10       0.016 \u00b1      0.051  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Survivor_Space.norm                BIGINT  thrpt   10       2.907 \u00b1      9.407    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.count                                       BIGINT  thrpt   10       5.000               counts\nBenchmarkPageProcessor.compiled:\u00b7gc.time                                        BIGINT  thrpt   10      19.000                   ms\nBenchmarkPageProcessor.compiled                                                 DOUBLE  thrpt   10   11823.376 \u00b1    625.466   ops/s\nBenchmarkPageProcessor.compiled:\u00b7gc.alloc.rate                                  DOUBLE  thrpt   10     525.309 \u00b1     27.507  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.alloc.rate.norm                             DOUBLE  thrpt   10   93152.074 \u00b1      0.007    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Eden_Space                         DOUBLE  thrpt   10     489.386 \u00b1    957.448  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Eden_Space.norm                    DOUBLE  thrpt   10   88371.107 \u00b1 172982.262    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Survivor_Space                     DOUBLE  thrpt   10       0.009 \u00b1      0.032  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Survivor_Space.norm                DOUBLE  thrpt   10       1.684 \u00b1      5.744    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.count                                       DOUBLE  thrpt   10       4.000               counts\nBenchmarkPageProcessor.compiled:\u00b7gc.time                                        DOUBLE  thrpt   10      18.000                   ms", "committedDate": "2020-09-30T22:06:39Z", "type": "commit"}, {"oid": "bf4bf6a6101f0526201192f89b8ae57b6c7fd8bf", "url": "https://github.com/prestodb/presto/commit/bf4bf6a6101f0526201192f89b8ae57b6c7fd8bf", "message": "Reserve memory before projecting rows\n\nBenchmarkPageProcessor shows 33% improvement in throughput\n(higher is better) and 4x reduction in gc.alloc.rate.norm\n(lower is better) in GC benchmarks.\n\nBefore\nBenchmark                                                         (projectionDataType)   Mode  Cnt       Score        Error   Units\nBenchmarkPageProcessor.compiled                                                 BIGINT  thrpt   10    8374.449 \u00b1   1023.859   ops/s\nBenchmarkPageProcessor.compiled:\u00b7gc.alloc.rate                                  BIGINT  thrpt   10    1451.783 \u00b1    179.079  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.alloc.rate.norm                             BIGINT  thrpt   10  363640.395 \u00b1      1.385    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Eden_Space                         BIGINT  thrpt   10    1448.711 \u00b1   1904.852  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Eden_Space.norm                    BIGINT  thrpt   10  368448.852 \u00b1 487748.838    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Survivor_Space                     BIGINT  thrpt   10       0.019 \u00b1      0.054  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Survivor_Space.norm                BIGINT  thrpt   10       4.904 \u00b1     13.838    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.count                                       BIGINT  thrpt   10       6.000               counts\nBenchmarkPageProcessor.compiled:\u00b7gc.time                                        BIGINT  thrpt   10      27.000                   ms\nBenchmarkPageProcessor.compiled                                                 DOUBLE  thrpt   10    8805.494 \u00b1    916.612   ops/s\nBenchmarkPageProcessor.compiled:\u00b7gc.alloc.rate                                  DOUBLE  thrpt   10    1527.888 \u00b1    159.617  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.alloc.rate.norm                             DOUBLE  thrpt   10  363640.100 \u00b1      0.011    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Eden_Space                         DOUBLE  thrpt   10    1716.294 \u00b1   1812.190  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Eden_Space.norm                    DOUBLE  thrpt   10  414368.217 \u00b1 436717.530    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Survivor_Space                     DOUBLE  thrpt   10       0.008 \u00b1      0.023  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Survivor_Space.norm                DOUBLE  thrpt   10       1.942 \u00b1      5.771    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.count                                       DOUBLE  thrpt   10       7.000               counts\nBenchmarkPageProcessor.compiled:\u00b7gc.time                                        DOUBLE  thrpt   10      30.000                   ms\n\nBenchmark                                                         (projectionDataType)   Mode  Cnt       Score        Error   Units\nBenchmarkPageProcessor.compiled                                                 BIGINT  thrpt   10   11584.658 \u00b1   1122.544   ops/s\nBenchmarkPageProcessor.compiled:\u00b7gc.alloc.rate                                  BIGINT  thrpt   10     514.595 \u00b1     49.501  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.alloc.rate.norm                             BIGINT  thrpt   10   93152.294 \u00b1      1.029    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Eden_Space                         BIGINT  thrpt   10     557.664 \u00b1    901.262  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Eden_Space.norm                    BIGINT  thrpt   10  101729.476 \u00b1 165414.127    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Survivor_Space                     BIGINT  thrpt   10       0.016 \u00b1      0.051  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Survivor_Space.norm                BIGINT  thrpt   10       2.907 \u00b1      9.407    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.count                                       BIGINT  thrpt   10       5.000               counts\nBenchmarkPageProcessor.compiled:\u00b7gc.time                                        BIGINT  thrpt   10      19.000                   ms\nBenchmarkPageProcessor.compiled                                                 DOUBLE  thrpt   10   11823.376 \u00b1    625.466   ops/s\nBenchmarkPageProcessor.compiled:\u00b7gc.alloc.rate                                  DOUBLE  thrpt   10     525.309 \u00b1     27.507  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.alloc.rate.norm                             DOUBLE  thrpt   10   93152.074 \u00b1      0.007    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Eden_Space                         DOUBLE  thrpt   10     489.386 \u00b1    957.448  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Eden_Space.norm                    DOUBLE  thrpt   10   88371.107 \u00b1 172982.262    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Survivor_Space                     DOUBLE  thrpt   10       0.009 \u00b1      0.032  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Survivor_Space.norm                DOUBLE  thrpt   10       1.684 \u00b1      5.744    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.count                                       DOUBLE  thrpt   10       4.000               counts\nBenchmarkPageProcessor.compiled:\u00b7gc.time                                        DOUBLE  thrpt   10      18.000                   ms", "committedDate": "2020-09-30T22:06:39Z", "type": "forcePushed"}]}