{"pr_number": 14923, "pr_title": "Add geometry_nearest_points function", "pr_createdAt": "2020-07-29T22:52:00Z", "pr_url": "https://github.com/prestodb/presto/pull/14923", "timeline": [{"oid": "cd4cbdbc7e4b218b0977c9fb0e88cf8ca8e802dd", "url": "https://github.com/prestodb/presto/commit/cd4cbdbc7e4b218b0977c9fb0e88cf8ca8e802dd", "message": "Add geometry_nearest_points function\n\nThis function is similar to PostGIS ST_ClosestPoints.  Given two\ngeometries, find a pair of points on them that have the minimum\ndistance.  If either geometry is empty, return null.", "committedDate": "2020-07-29T22:48:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDcxNzYyNA==", "url": "https://github.com/prestodb/presto/pull/14923#discussion_r474717624", "bodyText": "Is it possible to add a test that triggers this exception and confirm that try allows to suppress it?", "author": "mbasmanova", "createdAt": "2020-08-21T14:02:23Z", "path": "presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/GeoFunctions.java", "diffHunk": "@@ -942,6 +943,29 @@ public static Double stDistance(@SqlType(GEOMETRY_TYPE_NAME) Slice left, @SqlTyp\n         return leftGeometry.isEmpty() || rightGeometry.isEmpty() ? null : leftGeometry.distance(rightGeometry);\n     }\n \n+    @SqlNullable\n+    @Description(\"Return the closest points on the two geometries\")\n+    @ScalarFunction(\"geometry_nearest_points\")\n+    @SqlType(\"array(\" + GEOMETRY_TYPE_NAME + \")\")\n+    public static Block geometryNearestPoints(@SqlType(GEOMETRY_TYPE_NAME) Slice left, @SqlType(GEOMETRY_TYPE_NAME) Slice right)\n+    {\n+        Geometry leftGeometry = deserialize(left);\n+        Geometry rightGeometry = deserialize(right);\n+        if (leftGeometry.isEmpty() || rightGeometry.isEmpty()) {\n+            return null;\n+        }\n+        try {\n+            Coordinate[] nearestCoordinates = DistanceOp.nearestPoints(leftGeometry, rightGeometry);\n+            BlockBuilder blockBuilder = GEOMETRY.createBlockBuilder(null, 2);\n+            GEOMETRY.writeSlice(blockBuilder, serialize(createJtsPoint(nearestCoordinates[0])));\n+            GEOMETRY.writeSlice(blockBuilder, serialize(createJtsPoint(nearestCoordinates[1])));\n+            return blockBuilder.build();\n+        }\n+        catch (TopologyException e) {\n+            throw new PrestoException(INVALID_FUNCTION_ARGUMENT, e.getMessage(), e);", "originalCommit": "cd4cbdbc7e4b218b0977c9fb0e88cf8ca8e802dd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}