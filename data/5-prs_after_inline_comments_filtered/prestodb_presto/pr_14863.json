{"pr_number": 14863, "pr_title": "Pushdown DistinctLimitNode in Pinot Connector", "pr_createdAt": "2020-07-21T02:47:40Z", "pr_url": "https://github.com/prestodb/presto/pull/14863", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzgwODM1MA==", "url": "https://github.com/prestodb/presto/pull/14863#discussion_r457808350", "bodyText": "I didn't follow why distinct limit generates the same PQL as a regular limit ?", "author": "agrawaldevesh", "createdAt": "2020-07-21T03:05:22Z", "path": "presto-pinot-toolkit/src/test/java/com/facebook/presto/pinot/query/TestPinotPlanOptimizerSql.java", "diffHunk": "@@ -30,4 +39,28 @@ public void assertUsingSqlSyntax()\n     {\n         Assert.assertEquals(defaultSessionHolder.getConnectorSession().getProperty(\"use_pinot_sql_for_broker_queries\", Boolean.class).booleanValue(), true);\n     }\n+\n+    @Test\n+    public void testDistinctLimitPushdown()\n+    {\n+        PlanBuilder planBuilder = createPlanBuilder(defaultSessionHolder);\n+        PlanNode originalPlan = distinctLimit(", "originalCommit": "381af86befc65279b3298eea36006f4a3f1fb422", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzgwOTAzMw==", "url": "https://github.com/prestodb/presto/pull/14863#discussion_r457809033", "bodyText": "It's adding group by", "author": "xiangfu0", "createdAt": "2020-07-21T03:08:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzgwODM1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzgzMjI3Nw==", "url": "https://github.com/prestodb/presto/pull/14863#discussion_r457832277", "bodyText": "basically convert SELECT DISTINCT col FROM myTable LIMIT 10 to SELECT col FROM myTable GROUP BY col LIMIT 10", "author": "xiangfu0", "createdAt": "2020-07-21T04:42:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzgwODM1MA=="}], "type": "inlineReview"}, {"oid": "95768433ec320141f07c53eabfd3b90a04a9484b", "url": "https://github.com/prestodb/presto/commit/95768433ec320141f07c53eabfd3b90a04a9484b", "message": "Adding DistinctLimit pushdown support in Pinot Connector", "committedDate": "2020-07-21T06:02:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg2MzQwOQ==", "url": "https://github.com/prestodb/presto/pull/14863#discussion_r457863409", "bodyText": "I think I have forgotten your old Pinot-SQL PR :-) -- but didn't we have a special derived class for the SQL generation ? Instead of using  if useSqlSyntax", "author": "agrawaldevesh", "createdAt": "2020-07-21T06:23:24Z", "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/query/PinotQueryGenerator.java", "diffHunk": "@@ -516,5 +518,27 @@ public PinotQueryGeneratorContext visitTopN(TopNNode node, PinotQueryGeneratorCo\n             checkSupported(node.getStep().equals(TopNNode.Step.SINGLE), \"Can only push single logical topn in\");\n             return context.withTopN(getOrderingScheme(node), node.getCount()).withOutputColumns(node.getOutputVariables());\n         }\n+\n+        @Override\n+        public PinotQueryGeneratorContext visitDistinctLimit(DistinctLimitNode node, PinotQueryGeneratorContext context)\n+        {\n+            context = node.getSource().accept(this, context);\n+            requireNonNull(context, \"context is null\");\n+            checkSupported(!forbidBrokerQueries, \"Cannot push distinctLimit in segment mode\");\n+            LinkedHashSet<VariableReferenceExpression> groupByColumns = new LinkedHashSet<>(node.getDistinctVariables());\n+            if (!useSqlSyntax) {\n+                // Handling PQL by adding hidden expression: count(*)\n+                // E.g. `SELECT DISTINCT A, B FROM myTable LIMIT 10`\n+                // In Pql mode, the generated pql is `SELECT count(*) FROM myTable GROUP BY A, B LIMIT 10`;", "originalCommit": "95768433ec320141f07c53eabfd3b90a04a9484b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzkwNzkwNg==", "url": "https://github.com/prestodb/presto/pull/14863#discussion_r457907906", "bodyText": "This is for pushing down a new PlanNode: DistinctLimitPlanNode.\nQuery SELECT DISTINCT colA will be parsed to an AggregationPlanNode,\nQuery SELECT DISTINCT colA LIMIT X will be parsed to a DistinctLimitPlanNode.\nFor PQL side, since we still need to use the hidden column count(*), so I use withAggregation(...) for setting.\nFor SQL side, use withDistinctLimit to set groupbycolumns and limit.", "author": "xiangfu0", "createdAt": "2020-07-21T07:56:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg2MzQwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMxNzkwOA==", "url": "https://github.com/prestodb/presto/pull/14863#discussion_r458317908", "bodyText": "PinotQueryGeneratorContext.withAggregation has some special handling for the case when distinctCount is already pushed down. (Search for PINOT_DISTINCT_COUNT_FUNCTION_NAME). Can you make sure that this doesn't conflict with that. Thanks", "author": "agrawaldevesh", "createdAt": "2020-07-21T18:53:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg2MzQwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg2MzUwOA==", "url": "https://github.com/prestodb/presto/pull/14863#discussion_r457863508", "bodyText": "What about the old group by columns already in the context ? If you don't expect them please assert accordingly", "author": "agrawaldevesh", "createdAt": "2020-07-21T06:23:40Z", "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/query/PinotQueryGenerator.java", "diffHunk": "@@ -516,5 +518,27 @@ public PinotQueryGeneratorContext visitTopN(TopNNode node, PinotQueryGeneratorCo\n             checkSupported(node.getStep().equals(TopNNode.Step.SINGLE), \"Can only push single logical topn in\");\n             return context.withTopN(getOrderingScheme(node), node.getCount()).withOutputColumns(node.getOutputVariables());\n         }\n+\n+        @Override\n+        public PinotQueryGeneratorContext visitDistinctLimit(DistinctLimitNode node, PinotQueryGeneratorContext context)\n+        {\n+            context = node.getSource().accept(this, context);\n+            requireNonNull(context, \"context is null\");\n+            checkSupported(!forbidBrokerQueries, \"Cannot push distinctLimit in segment mode\");\n+            LinkedHashSet<VariableReferenceExpression> groupByColumns = new LinkedHashSet<>(node.getDistinctVariables());", "originalCommit": "95768433ec320141f07c53eabfd3b90a04a9484b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg4MDkyNA==", "url": "https://github.com/prestodb/presto/pull/14863#discussion_r457880924", "bodyText": "Will add assertion, distinct column shouldn't come with groupbys.", "author": "xiangfu0", "createdAt": "2020-07-21T07:05:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg2MzUwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg2NDEwOQ==", "url": "https://github.com/prestodb/presto/pull/14863#discussion_r457864109", "bodyText": "Again pardon my ignorance on the Pinot-SQL PR: But wasn't there a special derived test class to test the PQL one alone. This looks to be testing the PQL flow -- should it go in its own class ?", "author": "agrawaldevesh", "createdAt": "2020-07-21T06:25:20Z", "path": "presto-pinot-toolkit/src/test/java/com/facebook/presto/pinot/query/TestPinotQueryGenerator.java", "diffHunk": "@@ -374,4 +377,26 @@ public void testAggregationWithOrderByPushDownInTopN()\n         TopNNode topN = new TopNNode(planBuilder.getIdAllocator().getNextId(), agg, 50L, new OrderingScheme(ImmutableList.of(new Ordering(variable(\"city\"), SortOrder.DESC_NULLS_FIRST))), TopNNode.Step.FINAL);\n         testPinotQuery(pinotConfig, topN, \"\", defaultSessionHolder, ImmutableMap.of());\n     }\n+\n+    @Test", "originalCommit": "95768433ec320141f07c53eabfd3b90a04a9484b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzkxNTQ3OA==", "url": "https://github.com/prestodb/presto/pull/14863#discussion_r457915478", "bodyText": "you are right, will merge the tests.", "author": "xiangfu0", "createdAt": "2020-07-21T08:10:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg2NDEwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzkxOTYyNA==", "url": "https://github.com/prestodb/presto/pull/14863#discussion_r457919624", "bodyText": "done", "author": "xiangfu0", "createdAt": "2020-07-21T08:17:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg2NDEwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg2NDY3Nw==", "url": "https://github.com/prestodb/presto/pull/14863#discussion_r457864677", "bodyText": "How about testing something with a distinct limit on top of an existing group by ? What about on top of an existing global aggregation ?", "author": "agrawaldevesh", "createdAt": "2020-07-21T06:26:40Z", "path": "presto-pinot-toolkit/src/test/java/com/facebook/presto/pinot/query/TestPinotQueryGeneratorSql.java", "diffHunk": "@@ -211,4 +216,27 @@ public void testDistinctSelection()\n                 defaultSessionHolder,\n                 ImmutableMap.of());\n     }\n+\n+    @Override\n+    @Test\n+    public void testDistinctLimitPushdown()", "originalCommit": "95768433ec320141f07c53eabfd3b90a04a9484b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzkxODEzNw==", "url": "https://github.com/prestodb/presto/pull/14863#discussion_r457918137", "bodyText": "adding assertions on existing aggregations/groupbys.", "author": "xiangfu0", "createdAt": "2020-07-21T08:14:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg2NDY3Nw=="}], "type": "inlineReview"}, {"oid": "553c1b08b4a7f7260810c811c4439127be80d5f9", "url": "https://github.com/prestodb/presto/commit/553c1b08b4a7f7260810c811c4439127be80d5f9", "message": "Adding DistinctLimit pushdown support in Pinot Connector", "committedDate": "2020-07-21T08:17:05Z", "type": "forcePushed"}, {"oid": "2f904ba44d3c3f012301bb3555eafaa63b35c97a", "url": "https://github.com/prestodb/presto/commit/2f904ba44d3c3f012301bb3555eafaa63b35c97a", "message": "Adding DistinctLimit pushdown support in Pinot Connector", "committedDate": "2020-07-21T10:24:58Z", "type": "forcePushed"}, {"oid": "f26ce010b760e016a470567b1b72adb829bbaa25", "url": "https://github.com/prestodb/presto/commit/f26ce010b760e016a470567b1b72adb829bbaa25", "message": "Adding DistinctLimit pushdown support in Pinot Connector", "committedDate": "2020-07-21T17:56:27Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMxODc2Mg==", "url": "https://github.com/prestodb/presto/pull/14863#discussion_r458318762", "bodyText": "nit: I somehow prefer having a clean else block here to denote that the SQL and PQL handling is different. I somehow missed that in my first read.", "author": "agrawaldevesh", "createdAt": "2020-07-21T18:55:20Z", "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/query/PinotQueryGenerator.java", "diffHunk": "@@ -516,5 +518,27 @@ public PinotQueryGeneratorContext visitTopN(TopNNode node, PinotQueryGeneratorCo\n             checkSupported(node.getStep().equals(TopNNode.Step.SINGLE), \"Can only push single logical topn in\");\n             return context.withTopN(getOrderingScheme(node), node.getCount()).withOutputColumns(node.getOutputVariables());\n         }\n+\n+        @Override\n+        public PinotQueryGeneratorContext visitDistinctLimit(DistinctLimitNode node, PinotQueryGeneratorContext context)\n+        {\n+            context = node.getSource().accept(this, context);\n+            requireNonNull(context, \"context is null\");\n+            checkSupported(!forbidBrokerQueries, \"Cannot push distinctLimit in segment mode\");\n+            LinkedHashSet<VariableReferenceExpression> groupByColumns = new LinkedHashSet<>(node.getDistinctVariables());\n+            if (!useSqlSyntax) {\n+                // Handling PQL by adding hidden expression: count(*)\n+                // E.g. `SELECT DISTINCT A, B FROM myTable LIMIT 10`\n+                // In Pql mode, the generated pql is `SELECT count(*) FROM myTable GROUP BY A, B LIMIT 10`;\n+                // In Sql mode, the generated sql is still `SELECT A, B FROM myTable GROUP BY A, B LIMIT 10`.\n+                VariableReferenceExpression hidden = new VariableReferenceExpression(UUID.randomUUID().toString(), BigintType.BIGINT);\n+                Map<VariableReferenceExpression, Selection> newSelections = new HashMap<>(context.getSelections());\n+                newSelections.put(hidden, new Selection(\"count(*)\", DERIVED));\n+                LinkedHashSet<VariableReferenceExpression> newOutputs = new LinkedHashSet<>(groupByColumns);\n+                newOutputs.add(hidden);\n+                return context.withAggregation(newSelections, newOutputs, groupByColumns, 1, ImmutableSet.of(hidden)).withLimit(node.getLimit());\n+            }", "originalCommit": "f26ce010b760e016a470567b1b72adb829bbaa25", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM3OTgwNg==", "url": "https://github.com/prestodb/presto/pull/14863#discussion_r458379806", "bodyText": "done.", "author": "xiangfu0", "createdAt": "2020-07-21T20:51:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMxODc2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMxODc5OA==", "url": "https://github.com/prestodb/presto/pull/14863#discussion_r458318798", "bodyText": "nit: Should we omit adding a helper method when it is used only once ? I think this can be inlined ?", "author": "agrawaldevesh", "createdAt": "2020-07-21T18:55:23Z", "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/query/PinotQueryGeneratorContext.java", "diffHunk": "@@ -553,6 +558,26 @@ public PinotQueryGeneratorContext withVariablesInAggregation(Set<VariableReferen\n                 useSqlSyntax);\n     }\n \n+    public PinotQueryGeneratorContext withDistinctLimit(LinkedHashSet<VariableReferenceExpression> newGroupByColumns, long limit)\n+    {\n+        int intLimit = checkForValidLimit(limit);\n+        checkSupported(!hasLimit(), \"Limit already exists. Pinot doesn't support limit on top of another limit\");\n+        checkSupported(!hasGroupBy(), \"GroupBy already exists. Pinot doesn't support Distinct on top of another Group By\");", "originalCommit": "f26ce010b760e016a470567b1b72adb829bbaa25", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM4MDAxMA==", "url": "https://github.com/prestodb/presto/pull/14863#discussion_r458380010", "bodyText": "there are many other places uses this, I replaces all of them using hasGroupBy().", "author": "xiangfu0", "createdAt": "2020-07-21T20:51:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMxODc5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMxOTEzNw==", "url": "https://github.com/prestodb/presto/pull/14863#discussion_r458319137", "bodyText": "Is it worth asserting that we are in sql mode here ?", "author": "agrawaldevesh", "createdAt": "2020-07-21T18:56:00Z", "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/query/PinotQueryGeneratorContext.java", "diffHunk": "@@ -553,6 +558,26 @@ public PinotQueryGeneratorContext withVariablesInAggregation(Set<VariableReferen\n                 useSqlSyntax);\n     }\n \n+    public PinotQueryGeneratorContext withDistinctLimit(LinkedHashSet<VariableReferenceExpression> newGroupByColumns, long limit)\n+    {\n+        int intLimit = checkForValidLimit(limit);", "originalCommit": "f26ce010b760e016a470567b1b72adb829bbaa25", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM4MDA0Ng==", "url": "https://github.com/prestodb/presto/pull/14863#discussion_r458380046", "bodyText": "done.", "author": "xiangfu0", "createdAt": "2020-07-21T20:51:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMxOTEzNw=="}], "type": "inlineReview"}, {"oid": "81e5af0b8332c342617bdbfc7f16420fa265d437", "url": "https://github.com/prestodb/presto/commit/81e5af0b8332c342617bdbfc7f16420fa265d437", "message": "Adding DistinctLimit pushdown support in Pinot Connector", "committedDate": "2020-07-21T20:50:51Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQwMTExNQ==", "url": "https://github.com/prestodb/presto/pull/14863#discussion_r458401115", "bodyText": "Correct me if I am wrong: But is this block of code duplicated ? If so, can we DRY it ?", "author": "agrawaldevesh", "createdAt": "2020-07-21T21:32:59Z", "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/query/PinotQueryGenerator.java", "diffHunk": "@@ -516,5 +518,33 @@ public PinotQueryGeneratorContext visitTopN(TopNNode node, PinotQueryGeneratorCo\n             checkSupported(node.getStep().equals(TopNNode.Step.SINGLE), \"Can only push single logical topn in\");\n             return context.withTopN(getOrderingScheme(node), node.getCount()).withOutputColumns(node.getOutputVariables());\n         }\n+\n+        @Override\n+        public PinotQueryGeneratorContext visitDistinctLimit(DistinctLimitNode node, PinotQueryGeneratorContext context)\n+        {\n+            context = node.getSource().accept(this, context);\n+            requireNonNull(context, \"context is null\");\n+            checkSupported(!forbidBrokerQueries, \"Cannot push distinctLimit in segment mode\");\n+            LinkedHashSet<VariableReferenceExpression> groupByColumns = new LinkedHashSet<>(node.getDistinctVariables());\n+            if (!useSqlSyntax) {\n+                // Handling PQL by adding hidden expression: count(*)\n+                // E.g. `SELECT DISTINCT A, B FROM myTable LIMIT 10`\n+                // In Pql mode, the generated pql is `SELECT count(*) FROM myTable GROUP BY A, B LIMIT 10`.\n+                checkSupported(!context.hasAggregation(), \"Aggregation already exists. Pinot doesn't support DistinctLimit with existing Aggregation\");\n+                checkSupported(!context.hasGroupBy(), \"GroupBy already exists. Pinot doesn't support DistinctLimit with existing GroupBy\");\n+                VariableReferenceExpression hidden = new VariableReferenceExpression(UUID.randomUUID().toString(), BigintType.BIGINT);\n+                Map<VariableReferenceExpression, Selection> newSelections = new HashMap<>(context.getSelections());\n+                newSelections.put(hidden, new Selection(\"count(*)\", DERIVED));\n+                LinkedHashSet<VariableReferenceExpression> newOutputs = new LinkedHashSet<>(groupByColumns);\n+                newOutputs.add(hidden);", "originalCommit": "81e5af0b8332c342617bdbfc7f16420fa265d437", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ0OTU5Nw==", "url": "https://github.com/prestodb/presto/pull/14863#discussion_r458449597", "bodyText": "extract to a method to set hiden column", "author": "xiangfu0", "createdAt": "2020-07-21T23:38:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQwMTExNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQwMTU0MQ==", "url": "https://github.com/prestodb/presto/pull/14863#discussion_r458401541", "bodyText": "nit: split this into multiple lines if possible please.", "author": "agrawaldevesh", "createdAt": "2020-07-21T21:33:51Z", "path": "presto-pinot-toolkit/src/test/java/com/facebook/presto/pinot/query/TestPinotPlanOptimizerSql.java", "diffHunk": "@@ -30,4 +39,28 @@ public void assertUsingSqlSyntax()\n     {\n         Assert.assertEquals(defaultSessionHolder.getConnectorSession().getProperty(\"use_pinot_sql_for_broker_queries\", Boolean.class).booleanValue(), true);\n     }\n+\n+    @Test\n+    public void testDistinctLimitPushdown()\n+    {\n+        PlanBuilder planBuilder = createPlanBuilder(defaultSessionHolder);\n+        PlanNode originalPlan = distinctLimit(\n+                planBuilder,\n+                ImmutableList.of(new VariableReferenceExpression(\"regionid\", BIGINT)),\n+                50L,\n+                tableScan(planBuilder, pinotTable, regionId));\n+        PlanNode optimized = getOptimizedPlan(planBuilder, originalPlan);\n+        assertPlanMatch(optimized, PinotTableScanMatcher.match(pinotTable, Optional.of(\"SELECT regionId FROM hybrid GROUP BY regionId LIMIT 50\"), Optional.of(false), originalPlan.getOutputVariables(), useSqlSyntax()), typeProvider);", "originalCommit": "81e5af0b8332c342617bdbfc7f16420fa265d437", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ0OTYyOA==", "url": "https://github.com/prestodb/presto/pull/14863#discussion_r458449628", "bodyText": "done", "author": "xiangfu0", "createdAt": "2020-07-21T23:38:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQwMTU0MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQwMTU4NQ==", "url": "https://github.com/prestodb/presto/pull/14863#discussion_r458401585", "bodyText": "ditto", "author": "agrawaldevesh", "createdAt": "2020-07-21T21:33:57Z", "path": "presto-pinot-toolkit/src/test/java/com/facebook/presto/pinot/query/TestPinotPlanOptimizerSql.java", "diffHunk": "@@ -30,4 +39,28 @@ public void assertUsingSqlSyntax()\n     {\n         Assert.assertEquals(defaultSessionHolder.getConnectorSession().getProperty(\"use_pinot_sql_for_broker_queries\", Boolean.class).booleanValue(), true);\n     }\n+\n+    @Test\n+    public void testDistinctLimitPushdown()\n+    {\n+        PlanBuilder planBuilder = createPlanBuilder(defaultSessionHolder);\n+        PlanNode originalPlan = distinctLimit(\n+                planBuilder,\n+                ImmutableList.of(new VariableReferenceExpression(\"regionid\", BIGINT)),\n+                50L,\n+                tableScan(planBuilder, pinotTable, regionId));\n+        PlanNode optimized = getOptimizedPlan(planBuilder, originalPlan);\n+        assertPlanMatch(optimized, PinotTableScanMatcher.match(pinotTable, Optional.of(\"SELECT regionId FROM hybrid GROUP BY regionId LIMIT 50\"), Optional.of(false), originalPlan.getOutputVariables(), useSqlSyntax()), typeProvider);\n+\n+        planBuilder = createPlanBuilder(defaultSessionHolder);\n+        originalPlan = distinctLimit(\n+                planBuilder,\n+                ImmutableList.of(\n+                        new VariableReferenceExpression(\"regionid\", BIGINT),\n+                        new VariableReferenceExpression(\"city\", VARCHAR)),\n+                50L,\n+                tableScan(planBuilder, pinotTable, regionId, city));\n+        optimized = getOptimizedPlan(planBuilder, originalPlan);\n+        assertPlanMatch(optimized, PinotTableScanMatcher.match(pinotTable, Optional.of(\"SELECT regionId, city FROM hybrid GROUP BY regionId, city LIMIT 50\"), Optional.of(false), originalPlan.getOutputVariables(), useSqlSyntax()), typeProvider);", "originalCommit": "81e5af0b8332c342617bdbfc7f16420fa265d437", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQwMjI1Mg==", "url": "https://github.com/prestodb/presto/pull/14863#discussion_r458402252", "bodyText": "I think getExpectedDistinctOutput should only take the group by keys, because the aggregation is always unconditionally \"count()\". ie, this method should just return \"count()\".", "author": "agrawaldevesh", "createdAt": "2020-07-21T21:35:18Z", "path": "presto-pinot-toolkit/src/test/java/com/facebook/presto/pinot/query/TestPinotQueryGenerator.java", "diffHunk": "@@ -374,4 +377,41 @@ public void testAggregationWithOrderByPushDownInTopN()\n         TopNNode topN = new TopNNode(planBuilder.getIdAllocator().getNextId(), agg, 50L, new OrderingScheme(ImmutableList.of(new Ordering(variable(\"city\"), SortOrder.DESC_NULLS_FIRST))), TopNNode.Step.FINAL);\n         testPinotQuery(pinotConfig, topN, \"\", defaultSessionHolder, ImmutableMap.of());\n     }\n+\n+    @Test\n+    public void testDistinctLimitPushdown()\n+    {\n+        PlanBuilder planBuilder = createPlanBuilder(defaultSessionHolder);\n+        DistinctLimitNode distinctLimitNode = distinctLimit(\n+                planBuilder,\n+                ImmutableList.of(new VariableReferenceExpression(\"regionid\", BIGINT)),\n+                50L,\n+                tableScan(planBuilder, pinotTable, regionId));\n+        testPinotQuery(\n+                pinotConfig,\n+                distinctLimitNode,\n+                String.format(\"SELECT %s FROM realtimeOnly GROUP BY regionId %s 50\", getExpectedDistinctOutput(\"count(*)\", \"regionId\"), getGroupByLimitKey()),\n+                defaultSessionHolder,\n+                ImmutableMap.of());\n+\n+        planBuilder = createPlanBuilder(defaultSessionHolder);\n+        distinctLimitNode = distinctLimit(\n+                planBuilder,\n+                ImmutableList.of(\n+                        new VariableReferenceExpression(\"regionid\", BIGINT),\n+                        new VariableReferenceExpression(\"city\", VARCHAR)),\n+                50L,\n+                tableScan(planBuilder, pinotTable, regionId, city));\n+        testPinotQuery(\n+                pinotConfig,\n+                distinctLimitNode,\n+                String.format(\"SELECT %s FROM realtimeOnly GROUP BY regionId, city %s 50\", getExpectedDistinctOutput(\"count(*)\", \"regionId, city\"), getGroupByLimitKey()),\n+                defaultSessionHolder,\n+                ImmutableMap.of());\n+    }\n+\n+    protected String getExpectedDistinctOutput(String aggregation, String groupKeys)\n+    {\n+        return aggregation;", "originalCommit": "81e5af0b8332c342617bdbfc7f16420fa265d437", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ0OTcyMw==", "url": "https://github.com/prestodb/presto/pull/14863#discussion_r458449723", "bodyText": "make sense. Changed.", "author": "xiangfu0", "createdAt": "2020-07-21T23:39:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQwMjI1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQwMjYzOQ==", "url": "https://github.com/prestodb/presto/pull/14863#discussion_r458402639", "bodyText": "nit: !hasAggregations()", "author": "agrawaldevesh", "createdAt": "2020-07-21T21:36:05Z", "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/query/PinotQueryGeneratorContext.java", "diffHunk": "@@ -553,6 +558,27 @@ public PinotQueryGeneratorContext withVariablesInAggregation(Set<VariableReferen\n                 useSqlSyntax);\n     }\n \n+    public PinotQueryGeneratorContext withDistinctLimit(LinkedHashSet<VariableReferenceExpression> newGroupByColumns, long limit)\n+    {\n+        int intLimit = checkForValidLimit(limit);\n+        checkSupported(useSqlSyntax, \"DistinctLimit is only supported in SQL mode\");\n+        checkSupported(!hasLimit(), \"Limit already exists. Pinot doesn't support limit on top of another limit\");\n+        checkSupported(!hasGroupBy(), \"GroupBy already exists. Pinot doesn't support Distinct on top of another Group By\");\n+        checkSupported(aggregations == 0, \"Aggregation already exists. Pinot doesn't support Distinct Limit on top of Aggregation\");", "originalCommit": "81e5af0b8332c342617bdbfc7f16420fa265d437", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ0OTY3Nw==", "url": "https://github.com/prestodb/presto/pull/14863#discussion_r458449677", "bodyText": "done.", "author": "xiangfu0", "createdAt": "2020-07-21T23:38:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQwMjYzOQ=="}], "type": "inlineReview"}, {"oid": "02431aa1779a5a2a8a636d81b1dc347adcb3fbee", "url": "https://github.com/prestodb/presto/commit/02431aa1779a5a2a8a636d81b1dc347adcb3fbee", "message": "Adding DistinctLimit pushdown support in Pinot Connector", "committedDate": "2020-07-21T23:38:15Z", "type": "forcePushed"}, {"oid": "bc25ce127f36de908ed162afb4f4f8f4a004d0de", "url": "https://github.com/prestodb/presto/commit/bc25ce127f36de908ed162afb4f4f8f4a004d0de", "message": "Adding DistinctLimit pushdown support in Pinot Connector", "committedDate": "2020-07-22T04:55:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIxMjY0Ng==", "url": "https://github.com/prestodb/presto/pull/14863#discussion_r459212646", "bodyText": "Remove this else {. Just directly return", "author": "highker", "createdAt": "2020-07-23T04:48:49Z", "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/query/PinotQueryGenerator.java", "diffHunk": "@@ -516,5 +514,42 @@ public PinotQueryGeneratorContext visitTopN(TopNNode node, PinotQueryGeneratorCo\n             checkSupported(node.getStep().equals(TopNNode.Step.SINGLE), \"Can only push single logical topn in\");\n             return context.withTopN(getOrderingScheme(node), node.getCount()).withOutputColumns(node.getOutputVariables());\n         }\n+\n+        @Override\n+        public PinotQueryGeneratorContext visitDistinctLimit(DistinctLimitNode node, PinotQueryGeneratorContext context)\n+        {\n+            context = node.getSource().accept(this, context);\n+            requireNonNull(context, \"context is null\");\n+            checkSupported(!forbidBrokerQueries, \"Cannot push distinctLimit in segment mode\");\n+            LinkedHashSet<VariableReferenceExpression> groupByColumns = new LinkedHashSet<>(node.getDistinctVariables());\n+            if (!useSqlSyntax) {\n+                // Handling PQL by adding hidden expression: count(*)\n+                // E.g. `SELECT DISTINCT A, B FROM myTable LIMIT 10`\n+                // In Pql mode, the generated pql is `SELECT count(*) FROM myTable GROUP BY A, B LIMIT 10`.\n+                checkSupported(!context.hasAggregation(), \"Aggregation already exists. Pinot doesn't support DistinctLimit with existing Aggregation\");\n+                checkSupported(!context.hasGroupBy(), \"GroupBy already exists. Pinot doesn't support DistinctLimit with existing GroupBy\");\n+                Map<VariableReferenceExpression, Selection> newSelections = new HashMap<>(context.getSelections());\n+                LinkedHashSet<VariableReferenceExpression> newOutputs = new LinkedHashSet<>(groupByColumns);\n+                Set<VariableReferenceExpression> hiddenColumnSet = new HashSet<>();\n+                setHiddenField(newSelections, newOutputs, hiddenColumnSet);\n+                return context.withAggregation(newSelections, newOutputs, groupByColumns, 1, hiddenColumnSet).withLimit(node.getLimit());\n+            }\n+            else {", "originalCommit": "bc25ce127f36de908ed162afb4f4f8f4a004d0de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIyODM3NA==", "url": "https://github.com/prestodb/presto/pull/14863#discussion_r459228374", "bodyText": "Sorry @fx19880617 -- I made you add this else. But then @highker knows how \"well\" I have learnt Presto's style guide :-)\n\u00af\\_(\u30c4)_/\u00af", "author": "agrawaldevesh", "createdAt": "2020-07-23T05:56:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIxMjY0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI5OTg3Mg==", "url": "https://github.com/prestodb/presto/pull/14863#discussion_r459299872", "bodyText": "Updated :)", "author": "xiangfu0", "createdAt": "2020-07-23T08:44:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIxMjY0Ng=="}], "type": "inlineReview"}, {"oid": "0191ca143470689b203baa2560a59d4c819e7151", "url": "https://github.com/prestodb/presto/commit/0191ca143470689b203baa2560a59d4c819e7151", "message": "Adding DistinctLimit pushdown support in Pinot Connector", "committedDate": "2020-07-23T08:40:33Z", "type": "forcePushed"}, {"oid": "29047dba0da13d97e146e36b671b819837442a9e", "url": "https://github.com/prestodb/presto/commit/29047dba0da13d97e146e36b671b819837442a9e", "message": "Adding DistinctLimit pushdown support in Pinot Connector", "committedDate": "2020-07-23T18:10:03Z", "type": "forcePushed"}, {"oid": "cd30cbc959fb7b5848d94fc0f115c123ac4e5aad", "url": "https://github.com/prestodb/presto/commit/cd30cbc959fb7b5848d94fc0f115c123ac4e5aad", "message": "Adding DistinctLimit pushdown support in Pinot Connector", "committedDate": "2020-07-23T20:48:42Z", "type": "forcePushed"}, {"oid": "4d05ea764fa77281974955be23da7d567c60c00c", "url": "https://github.com/prestodb/presto/commit/4d05ea764fa77281974955be23da7d567c60c00c", "message": "Adding DistinctLimit pushdown support in Pinot Connector", "committedDate": "2020-07-24T00:14:09Z", "type": "commit"}, {"oid": "4d05ea764fa77281974955be23da7d567c60c00c", "url": "https://github.com/prestodb/presto/commit/4d05ea764fa77281974955be23da7d567c60c00c", "message": "Adding DistinctLimit pushdown support in Pinot Connector", "committedDate": "2020-07-24T00:14:09Z", "type": "forcePushed"}]}