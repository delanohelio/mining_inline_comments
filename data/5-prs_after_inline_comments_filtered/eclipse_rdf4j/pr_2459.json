{"pr_number": 2459, "pr_title": "GH-2458 sh:hasValue and dash:hasValueIn support as node shapes", "pr_createdAt": "2020-08-22T19:58:06Z", "pr_url": "https://github.com/eclipse/rdf4j/pull/2459", "timeline": [{"oid": "b28264cde8380a1b2a7064ea148ed90a7f471442", "url": "https://github.com/eclipse/rdf4j/commit/b28264cde8380a1b2a7064ea148ed90a7f471442", "message": "https://github.com/eclipse/rdf4j/issues/2458 initial test cases\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-08-22T12:46:02Z", "type": "commit"}, {"oid": "410b03551fe9bf887f0198e2b58e00bbb5af5c68", "url": "https://github.com/eclipse/rdf4j/commit/410b03551fe9bf887f0198e2b58e00bbb5af5c68", "message": "more test cases\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-08-22T13:07:35Z", "type": "commit"}, {"oid": "d2d5acf8de6333b2a07205e13b2d62d0c92dc716", "url": "https://github.com/eclipse/rdf4j/commit/d2d5acf8de6333b2a07205e13b2d62d0c92dc716", "message": "GH-2458 initial fix\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-08-22T19:07:12Z", "type": "commit"}, {"oid": "7995ba0943e251ecb2a92773b2d0bff17dde61b5", "url": "https://github.com/eclipse/rdf4j/commit/7995ba0943e251ecb2a92773b2d0bff17dde61b5", "message": "GH-2458 better fix\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-08-22T19:55:14Z", "type": "commit"}, {"oid": "bdb330f6042a7626a49d6de9918df6c9aa3d3e1f", "url": "https://github.com/eclipse/rdf4j/commit/bdb330f6042a7626a49d6de9918df6c9aa3d3e1f", "message": "more passing tests\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-08-29T12:17:05Z", "type": "commit"}, {"oid": "cf1b2372a41cc3d886c4c2adb5a07af53d80927b", "url": "https://github.com/eclipse/rdf4j/commit/cf1b2372a41cc3d886c4c2adb5a07af53d80927b", "message": "GH-2458 all tests pass\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-08-29T13:51:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTgzMzgwNQ==", "url": "https://github.com/eclipse/rdf4j/pull/2459#discussion_r479833805", "bodyText": "Please remove this class.", "author": "jeenbroekstra", "createdAt": "2020-08-31T00:07:21Z", "path": "core/sail/shacl/src/test/java/org/eclipse/rdf4j/sail/shacl/TempTest.java", "diffHunk": "@@ -500,4 +500,50 @@ private void add(SailRepositoryConnection connection, String data) throws IOExce\n \t\tconnection.commit();\n \t}\n \n+\t@Test()\n+\tpublic void temp() throws Throwable {\n+", "originalCommit": "cf1b2372a41cc3d886c4c2adb5a07af53d80927b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTgzNTUxMw==", "url": "https://github.com/eclipse/rdf4j/pull/2459#discussion_r479835513", "bodyText": "what is VALUES_INJECTION_POINT?", "author": "jeenbroekstra", "createdAt": "2020-08-31T00:21:30Z", "path": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/AST/AndPropertyShape.java", "diffHunk": "@@ -227,15 +227,45 @@ public PlanNode getAllTargetsPlan(ConnectionsGroup connectionsGroup, boolean neg\n \n \t@Override\n \tpublic String buildSparqlValidNodes(String targetVar) {\n-\t\treturn and.stream()\n-\t\t\t\t.map(propertyShapes -> propertyShapes\n-\t\t\t\t\t\t.stream()\n-\t\t\t\t\t\t.map(propertyShape -> propertyShape.buildSparqlValidNodes(targetVar))\n-\t\t\t\t\t\t.reduce((a, b) -> a + \"\\n\" + b))\n-\t\t\t\t.filter(Optional::isPresent)\n-\t\t\t\t.map(Optional::get)\n-\t\t\t\t.reduce((a, b) -> a + \"\\n\" + b)\n-\t\t\t\t.orElse(\"\");\n+\n+\t\tif (hasOwnPath()) {\n+\t\t\t// within property shape\n+\t\t\tString objectVariable = \"?b\";\n+\t\t\tString pathQuery1 = getPath().getQuery(targetVar, objectVariable, null);\n+\n+\t\t\tString collect = and.stream()\n+\t\t\t\t\t.map(l -> l.stream()\n+\t\t\t\t\t\t\t.map(p -> p.buildSparqlValidNodes(objectVariable))\n+\t\t\t\t\t\t\t.reduce((a, b) -> a + \" && \" + b))\n+\t\t\t\t\t.filter(Optional::isPresent)\n+\t\t\t\t\t.map(Optional::get)\n+\t\t\t\t\t.collect(Collectors.joining(\" ) && ( \", \"( \",\n+\t\t\t\t\t\t\t\" )\"));\n+\n+\t\t\tString query = pathQuery1 + \"\\n FILTER (! EXISTS {\\n\" + pathQuery1.replaceAll(\"(?m)^\", \"\\t\")\n+\t\t\t\t\t+ \"\\n\\tFILTER(!(\" + collect + \"))\\n})\";\n+\n+\t\t\tString pathQuery2 = getPath().getQuery(targetVar, randomVariable(), null);\n+\n+\t\t\tquery = \"{\\n#VALUES_INJECTION_POINT#\\n \" + query.replaceAll(\"(?m)^\", \"\\t\")", "originalCommit": "cf1b2372a41cc3d886c4c2adb5a07af53d80927b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTg5OTE4OQ==", "url": "https://github.com/eclipse/rdf4j/pull/2459#discussion_r479899189", "bodyText": "It's where we inject SPARQL values. Since we have unions we end up introducing a new scope, which leads to poor performance. So we add points where we can inject sparql values, for the cases where we need to run the query against a subset of nodes.", "author": "hmottestad", "createdAt": "2020-08-31T05:43:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTgzNTUxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTkwNDU2Mg==", "url": "https://github.com/eclipse/rdf4j/pull/2459#discussion_r479904562", "bodyText": "Ah I see. ObNitpick: it might be good to declare a constant for this substitution pattern.", "author": "jeenbroekstra", "createdAt": "2020-08-31T05:50:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTgzNTUxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTkwMjY3Nw==", "url": "https://github.com/eclipse/rdf4j/pull/2459#discussion_r481902677", "bodyText": "Do we have an edge case when this may run multiple times, overriding the ?b object variable?", "author": "rdstn", "createdAt": "2020-09-02T08:49:55Z", "path": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/AST/AndPropertyShape.java", "diffHunk": "@@ -227,15 +227,45 @@ public PlanNode getAllTargetsPlan(ConnectionsGroup connectionsGroup, boolean neg\n \n \t@Override\n \tpublic String buildSparqlValidNodes(String targetVar) {\n-\t\treturn and.stream()\n-\t\t\t\t.map(propertyShapes -> propertyShapes\n-\t\t\t\t\t\t.stream()\n-\t\t\t\t\t\t.map(propertyShape -> propertyShape.buildSparqlValidNodes(targetVar))\n-\t\t\t\t\t\t.reduce((a, b) -> a + \"\\n\" + b))\n-\t\t\t\t.filter(Optional::isPresent)\n-\t\t\t\t.map(Optional::get)\n-\t\t\t\t.reduce((a, b) -> a + \"\\n\" + b)\n-\t\t\t\t.orElse(\"\");\n+\n+\t\tif (hasOwnPath()) {\n+\t\t\t// within property shape\n+\t\t\tString objectVariable = \"?b\";", "originalCommit": "cf1b2372a41cc3d886c4c2adb5a07af53d80927b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjAyNzE0Mw==", "url": "https://github.com/eclipse/rdf4j/pull/2459#discussion_r482027143", "bodyText": "I'll take a look and check.", "author": "hmottestad", "createdAt": "2020-09-02T12:25:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTkwMjY3Nw=="}], "type": "inlineReview"}, {"oid": "9485374d1e12dcd5ec355c08c2bb3d6a97fc1e44", "url": "https://github.com/eclipse/rdf4j/commit/9485374d1e12dcd5ec355c08c2bb3d6a97fc1e44", "message": "Merge branch 'master' into GH-2458-sh_or-sh_hasValue-scoping", "committedDate": "2020-09-12T11:44:13Z", "type": "commit"}, {"oid": "216becfc1fd316a4d50c28c09a4b85a17935aaff", "url": "https://github.com/eclipse/rdf4j/commit/216becfc1fd316a4d50c28c09a4b85a17935aaff", "message": "fixed based on review\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-09-12T11:51:13Z", "type": "commit"}, {"oid": "d754f205629fb3ee073856bda9ed899f2047d178", "url": "https://github.com/eclipse/rdf4j/commit/d754f205629fb3ee073856bda9ed899f2047d178", "message": "GH-2458 added some more test cases and fixed them\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-09-12T16:49:40Z", "type": "commit"}]}