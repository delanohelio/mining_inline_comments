{"pr_number": 2659, "pr_title": "GH-2658 Literal/ValueFactory java.time support", "pr_createdAt": "2020-11-14T11:56:49Z", "pr_url": "https://github.com/eclipse/rdf4j/pull/2659", "timeline": [{"oid": "dbb88f26fe13fe5f2bf49dd591c7698d6b35c932", "url": "https://github.com/eclipse/rdf4j/commit/dbb88f26fe13fe5f2bf49dd591c7698d6b35c932", "message": "GH-2658 Implement AbstractValueFactory.createLiteral(TemporalAccessor) method\n\nSigned-off-by: Alessandro Bollini <22@metreeca.com>", "committedDate": "2020-11-14T16:19:03Z", "type": "forcePushed"}, {"oid": "8297c5ad4935777671510e88f26b0249c603fcab", "url": "https://github.com/eclipse/rdf4j/commit/8297c5ad4935777671510e88f26b0249c603fcab", "message": "GH-2658 Inherit SimpleValueFactory.createLiteral(TemporalAccessor) method\n\nSigned-off-by: Alessandro Bollini <22@metreeca.com>", "committedDate": "2020-11-14T16:42:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzgyMDkzNw==", "url": "https://github.com/eclipse/rdf4j/pull/2659#discussion_r523820937", "bodyText": "It looks solid, but AbstractLiteral is getting a bit large with all of this temporal processing code on top of everything else. Should we separate this out into a new file with a package-private class for TemporalLiteral? Or do we consider this still managable?", "author": "jeenbroekstra", "createdAt": "2020-11-15T22:08:42Z", "path": "core/model-api/src/main/java/org/eclipse/rdf4j/model/base/AbstractLiteral.java", "diffHunk": "@@ -72,6 +87,149 @@\n \tprivate static final String NEGATIVE_INFINITY = \"-INF\";\n \tprivate static final String NAN = \"NaN\";\n \n+\tprivate static final DateTimeFormatter LOCAL_TIME_FORMATTER = new DateTimeFormatterBuilder()\n+\n+\t\t\t.appendValue(HOUR_OF_DAY, 2)\n+\t\t\t.appendLiteral(':')\n+\t\t\t.appendValue(MINUTE_OF_HOUR, 2)\n+\t\t\t.appendLiteral(':')\n+\t\t\t.appendValue(SECOND_OF_MINUTE, 2)\n+\n+\t\t\t.optionalStart()\n+\t\t\t.appendFraction(NANO_OF_SECOND, 0, 9, true)\n+\n+\t\t\t.toFormatter();\n+", "originalCommit": "8297c5ad4935777671510e88f26b0249c603fcab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDAwMzE5MA==", "url": "https://github.com/eclipse/rdf4j/pull/2659#discussion_r524003190", "bodyText": "I refactor to migrated all support fields and parsing code to the relevant specialised nested classes: now we are in the position to easily promote them to top level, if we opt to do so.\nFor the time being, however, I'd leave them inside AbstractLiteral, in order not to relax encapsulation and symmetry with other generic implementations in other Abstract* value classes.", "author": "knoan", "createdAt": "2020-11-16T09:12:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzgyMDkzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzgyNzQxNA==", "url": "https://github.com/eclipse/rdf4j/pull/2659#discussion_r523827414", "bodyText": "Can we not use nested/chained ternaries? YMMV, but I find them hard to read. Might be improved with linebreaks in different places, but I think an if-else is easier on the eye (if a little more verbose):\nTemporalAccessor value;\nif (label.startsWith(\"--\")) {\n    value = DASH_FORMATTER.parse(label);\n} else if (label.length() >= 8 && label.charAt(2) == ':' ) {\n   value = OFFSET_TIME_FORMATTER.parse(label);\n} else {\n  value = DATETIME_FORMATTER.parse(label);\n}\nor perhaps more clean:\nfinal TemporalAccessor value = getFormatter(label).parse();\n\n... \n\nprivate static DateFormatter getFormatter(String label) {\n    if(label.startsWith(\"--\")) {\n       return DASH_FORMATTER;\n   } \n   if (label.length() >= 8 && label.charAt(2) == \":\") {\n       return OFFSET_TIME_FORMATTER;     \n   }\n   return DATETIME_FORMATTER;\n}", "author": "jeenbroekstra", "createdAt": "2020-11-15T23:00:59Z", "path": "core/model-api/src/main/java/org/eclipse/rdf4j/model/base/AbstractLiteral.java", "diffHunk": "@@ -175,6 +333,25 @@ public BigDecimal decimalValue() {\n \t\treturn value(BigDecimal::new);\n \t}\n \n+\t@Override\n+\tpublic TemporalAccessor temporalValue() throws DateTimeException {\n+\t\treturn value(label -> {\n+\n+\t\t\tfinal TemporalAccessor value = label.startsWith(\"--\") ? DASH_FORMATTER.parse(label)\n+\t\t\t\t\t: label.length() >= 8 && label.charAt(2) == ':' ? OFFSET_TIME_FORMATTER.parse(label)\n+\t\t\t\t\t\t\t: DATETIME_FORMATTER.parse(label);", "originalCommit": "8297c5ad4935777671510e88f26b0249c603fcab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDAwMzY0Ng==", "url": "https://github.com/eclipse/rdf4j/pull/2659#discussion_r524003646", "bodyText": "Done.", "author": "knoan", "createdAt": "2020-11-16T09:12:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzgyNzQxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU3NTc1MQ==", "url": "https://github.com/eclipse/rdf4j/pull/2659#discussion_r525575751", "bodyText": "Great, thanks!", "author": "jeenbroekstra", "createdAt": "2020-11-17T22:46:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzgyNzQxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzgyNzg0OA==", "url": "https://github.com/eclipse/rdf4j/pull/2659#discussion_r523827848", "bodyText": "I actually need to look at this, see #2655. I will likely refactor SimpleValueFactory to directly inherit from the new AbstractValueFactory, copying all the old AbstractValueFactory code over and leaving it orphaned.", "author": "jeenbroekstra", "createdAt": "2020-11-15T23:04:37Z", "path": "core/model/src/main/java/org/eclipse/rdf4j/model/impl/AbstractValueFactory.java", "diffHunk": "@@ -39,7 +39,7 @@\n  *             {@link org.eclipse.rdf4j.model.base.AbstractValueFactory}.\n  */\n @Deprecated\n-public abstract class AbstractValueFactory implements ValueFactory {\n+public abstract class AbstractValueFactory extends org.eclipse.rdf4j.model.base.AbstractValueFactory {", "originalCommit": "8297c5ad4935777671510e88f26b0249c603fcab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzk1MTgyMg==", "url": "https://github.com/eclipse/rdf4j/pull/2659#discussion_r523951822", "bodyText": "I actually need to look at this, see #2655. I will likely refactor SimpleValueFactory to directly inherit from the new AbstractValueFactory, copying all the old AbstractValueFactory code over and leaving it orphaned.\n\nAs long as SimpleValueFactory inherits from the new AbstractValueFactor tests won't break.", "author": "knoan", "createdAt": "2020-11-16T07:57:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzgyNzg0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk0Njk0Mg==", "url": "https://github.com/eclipse/rdf4j/pull/2659#discussion_r524946942", "bodyText": "I've merged my update for #2655. It shouldn't break anything for you but might be worth rebasing, just to make sure.", "author": "jeenbroekstra", "createdAt": "2020-11-17T07:58:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzgyNzg0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTIxNzU2Mw==", "url": "https://github.com/eclipse/rdf4j/pull/2659#discussion_r525217563", "bodyText": "Rebased", "author": "knoan", "createdAt": "2020-11-17T14:55:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzgyNzg0OA=="}], "type": "inlineReview"}, {"oid": "04bb1381e9218013db15bb4d6ac70cf7b7c4d783", "url": "https://github.com/eclipse/rdf4j/commit/04bb1381e9218013db15bb4d6ac70cf7b7c4d783", "message": "GH-2658 Inherit SimpleValueFactory.createLiteral(TemporalAccessor) method\n\nSigned-off-by: Alessandro Bollini <22@metreeca.com>", "committedDate": "2020-11-16T09:02:50Z", "type": "forcePushed"}, {"oid": "a441e35b6533d707d79048d894be3d90eb848c12", "url": "https://github.com/eclipse/rdf4j/commit/a441e35b6533d707d79048d894be3d90eb848c12", "message": "GH-2658 Inherit SimpleValueFactory.createLiteral(TemporalAccessor) method\n\nSigned-off-by: Alessandro Bollini <22@metreeca.com>", "committedDate": "2020-11-16T15:57:58Z", "type": "forcePushed"}, {"oid": "82be6557ab746e64e7480ec8e22f7ea88b65617a", "url": "https://github.com/eclipse/rdf4j/commit/82be6557ab746e64e7480ec8e22f7ea88b65617a", "message": "GH-2658 Inherit SimpleValueFactory.createLiteral(TemporalAccessor) method\n\nSigned-off-by: Alessandro Bollini <22@metreeca.com>", "committedDate": "2020-11-16T17:44:01Z", "type": "forcePushed"}, {"oid": "fea5344c564b21034ec99ca482ece2fd03e96ac1", "url": "https://github.com/eclipse/rdf4j/commit/fea5344c564b21034ec99ca482ece2fd03e96ac1", "message": "GH-2658 Hide AbstractLiteral.value(Function<String, V> mapper) method\n\nSigned-off-by: Alessandro Bollini <22@metreeca.com>", "committedDate": "2020-11-17T08:34:02Z", "type": "forcePushed"}, {"oid": "b332a40d8aa2f21f4e948be6ecc1d216ceb8d1a5", "url": "https://github.com/eclipse/rdf4j/commit/b332a40d8aa2f21f4e948be6ecc1d216ceb8d1a5", "message": "GH-2658 Define Literal/ValueFactory temporal methods\n\nSigned-off-by: Alessandro Bollini <22@metreeca.com>", "committedDate": "2020-11-26T10:27:19Z", "type": "commit"}, {"oid": "eb3351877162563319e88ee93fc27d9bd48ce417", "url": "https://github.com/eclipse/rdf4j/commit/eb3351877162563319e88ee93fc27d9bd48ce417", "message": "GH-2658 Implement AbstractLiteral/AbstractValueFactory temporal methods\n\nSigned-off-by: Alessandro Bollini <22@metreeca.com>", "committedDate": "2020-11-26T10:27:19Z", "type": "commit"}, {"oid": "accbaf6994ba2ea3f00cf4119c1246a0274b94b2", "url": "https://github.com/eclipse/rdf4j/commit/accbaf6994ba2ea3f00cf4119c1246a0274b94b2", "message": "GH-2658 Implement temporal methods in delegating ValueFactories\n\nSigned-off-by: Alessandro Bollini <22@metreeca.com>", "committedDate": "2020-11-26T10:27:19Z", "type": "commit"}, {"oid": "1090dca65bb6e9f123f6d76dab54aff3bf986633", "url": "https://github.com/eclipse/rdf4j/commit/1090dca65bb6e9f123f6d76dab54aff3bf986633", "message": "GH-2658 Inherit SimpleValueFactory.createLiteral(TemporalAccessor) method\n\nSigned-off-by: Alessandro Bollini <22@metreeca.com>", "committedDate": "2020-11-26T10:27:19Z", "type": "commit"}, {"oid": "e6799fabb2c7b8da7614d092dc61166606ee292d", "url": "https://github.com/eclipse/rdf4j/commit/e6799fabb2c7b8da7614d092dc61166606ee292d", "message": "GH-2658 Hide AbstractLiteral.value(Function<String, V> mapper) method\n\nSigned-off-by: Alessandro Bollini <22@metreeca.com>", "committedDate": "2020-11-26T10:27:19Z", "type": "commit"}, {"oid": "e6799fabb2c7b8da7614d092dc61166606ee292d", "url": "https://github.com/eclipse/rdf4j/commit/e6799fabb2c7b8da7614d092dc61166606ee292d", "message": "GH-2658 Hide AbstractLiteral.value(Function<String, V> mapper) method\n\nSigned-off-by: Alessandro Bollini <22@metreeca.com>", "committedDate": "2020-11-26T10:27:19Z", "type": "forcePushed"}]}