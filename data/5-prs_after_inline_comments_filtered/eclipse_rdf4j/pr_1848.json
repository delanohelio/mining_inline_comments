{"pr_number": 1848, "pr_title": "#1108 transaction status now uses single byte for higher TPS", "pr_createdAt": "2020-01-19T11:05:09Z", "pr_url": "https://github.com/eclipse/rdf4j/pull/1848", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI4NTM2NA==", "url": "https://github.com/eclipse/rdf4j/pull/1848#discussion_r368285364", "bodyText": "I should add a try catch or maybe a default case that uses the old strings based approach.", "author": "hmottestad", "createdAt": "2020-01-19T11:06:55Z", "path": "core/sail/nativerdf/src/main/java/org/eclipse/rdf4j/sail/nativerdf/TxnStatusFile.java", "diffHunk": "@@ -77,37 +82,48 @@ public void close() throws IOException {\n \n \t/**\n \t * Writes the specified transaction status to file.\n-\t * \n+\t *\n \t * @param txnStatus The transaction status to write.\n \t * @throws IOException If the transaction status could not be written to file.\n \t */\n \tpublic void setTxnStatus(TxnStatus txnStatus) throws IOException {\n-\t\tbyte[] bytes = txnStatus.name().getBytes(US_ASCII);\n+\t\tbyte[] bytes = txnStatus.onDisk;\n \t\tnioFile.truncate(bytes.length);\n \t\tnioFile.writeBytes(bytes, 0);\n \t}\n \n \t/**\n \t * Reads the transaction status from file.\n-\t * \n+\t *\n \t * @return The read transaction status, or {@link TxnStatus#UNKNOWN} when the file contains an unrecognized status\n \t *         string.\n \t * @throws IOException If the transaction status file could not be read.\n \t */\n \tpublic TxnStatus getTxnStatus() throws IOException {\n \t\tbyte[] bytes = nioFile.readBytes(0, (int) nioFile.size());\n-\t\tString s = new String(bytes, US_ASCII);\n-\t\ttry {\n-\t\t\treturn TxnStatus.valueOf(s);\n-\t\t} catch (IllegalArgumentException e) {\n-\t\t\t// use platform encoding for backwards compatibility with versions\n-\t\t\t// older than 2.6.6:\n-\t\t\ts = new String(bytes);\n-\t\t\ttry {\n-\t\t\t\treturn TxnStatus.valueOf(s);\n-\t\t\t} catch (IllegalArgumentException e2) {\n-\t\t\t\treturn TxnStatus.UNKNOWN;\n+\t\tTxnStatus status = TxnStatus.UNKNOWN;\n+\n+\t\tif (bytes.length == 1) {\n+\t\t\tswitch (bytes[0]) {\n+\t\t\tcase 1:\n+\t\t\t\tstatus = TxnStatus.NONE;\n+\t\t\t\tbreak;\n+\t\t\tcase 2:\n+\t\t\t\tstatus = TxnStatus.ACTIVE;\n+\t\t\t\tbreak;\n+\t\t\tcase 3:\n+\t\t\t\tstatus = TxnStatus.COMMITTING;\n+\t\t\t\tbreak;\n+\t\t\tcase 4:\n+\t\t\t\tstatus = TxnStatus.ROLLING_BACK;\n+\t\t\t\tbreak;\n+\t\t\tcase 5:\n+\t\t\t\tstatus = TxnStatus.UNKNOWN;\n+\t\t\t\tbreak;\n \t\t\t}\n \t\t}\n+\n+\t\treturn status;\n+", "originalCommit": "11133144f1b0b28638727fb8c016b7b4cb3e4f0a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8488af33f6d2072a624c59164b10ac9d2790a4b0", "url": "https://github.com/eclipse/rdf4j/commit/8488af33f6d2072a624c59164b10ac9d2790a4b0", "message": "#1108 test if we are compatible with the old txn-status files\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-01-19T14:57:44Z", "type": "forcePushed"}, {"oid": "b06ca61e38a0594dc0df3c30c3efe2a709c7c56d", "url": "https://github.com/eclipse/rdf4j/commit/b06ca61e38a0594dc0df3c30c3efe2a709c7c56d", "message": "#1108 test if we are compatible with the old txn-status files\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-01-19T15:05:31Z", "type": "forcePushed"}, {"oid": "6627562bd981714a920b93ec0fc3f88a7a26b99b", "url": "https://github.com/eclipse/rdf4j/commit/6627562bd981714a920b93ec0fc3f88a7a26b99b", "message": "#1108 test if we are compatible with the old txn-status files\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-01-19T16:08:18Z", "type": "forcePushed"}, {"oid": "e30ed2cf85047c8e5e46614c63a2ed3572594d80", "url": "https://github.com/eclipse/rdf4j/commit/e30ed2cf85047c8e5e46614c63a2ed3572594d80", "message": "#1108 test if we are compatible with the old txn-status files\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-01-19T17:07:32Z", "type": "forcePushed"}, {"oid": "721b328904dc2ecd87cf4b0a222cb5898335e744", "url": "https://github.com/eclipse/rdf4j/commit/721b328904dc2ecd87cf4b0a222cb5898335e744", "message": "#1108 reduced benchmark\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-01-19T19:37:45Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM0MjU3MQ==", "url": "https://github.com/eclipse/rdf4j/pull/1848#discussion_r368342571", "bodyText": "I don't quite understand what you're checking here. It looks as if it's testing that the new byte representations have no overlaps with \"legacy\" txn statuses. Why do we need to run that test as part of this code? Surely you can make sure of that once (the status enums are constants, after all)?", "author": "jeenbroekstra", "createdAt": "2020-01-20T01:31:39Z", "path": "core/sail/nativerdf/src/main/java/org/eclipse/rdf4j/sail/nativerdf/TxnStatusFile.java", "diffHunk": "@@ -13,41 +13,70 @@\n \n import org.eclipse.rdf4j.common.io.NioFile;\n \n+import static java.nio.charset.StandardCharsets.US_ASCII;\n+\n /**\n  * Writes transaction statuses to a file.\n  */\n class TxnStatusFile {\n+\tpublic static final byte NONE_BYTE = (byte) 0b00000001;\n+\tpublic static final byte ACTIVE_BYTE = (byte) 0b00000010;\n+\tpublic static final byte COMMITTING_BYTE = (byte) 0b00000100;\n+\tpublic static final byte ROLLING_BACK_BYTE = (byte) 0b00001000;\n+\tpublic static final byte UNKNOWN_BYTE = (byte) 0b00010000;\n \n \tpublic static enum TxnStatus {\n \n \t\t/**\n \t\t * No active transaction. This occurs if no transaction has been started yet, or if all transactions have been\n \t\t * committed or rolled back.\n \t\t */\n-\t\tNONE,\n+\t\tNONE(NONE_BYTE),\n \n \t\t/**\n \t\t * A transaction has been started, but was not yet committed or rolled back.\n \t\t */\n-\t\tACTIVE,\n+\t\tACTIVE(ACTIVE_BYTE),\n \n \t\t/**\n \t\t * A transaction is being committed.\n \t\t */\n-\t\tCOMMITTING,\n+\t\tCOMMITTING(COMMITTING_BYTE),\n \n \t\t/**\n \t\t * A transaction is being rolled back.\n \t\t */\n-\t\tROLLING_BACK,\n+\t\tROLLING_BACK(ROLLING_BACK_BYTE),\n \n \t\t/**\n \t\t * The transaction status is unknown.\n \t\t */\n-\t\tUNKNOWN;\n+\t\tUNKNOWN(UNKNOWN_BYTE);\n+\n+\t\tbyte[] onDisk;\n+\n+\t\tTxnStatus(byte onDisk) {\n+\t\t\tthis.onDisk = new byte[1];\n+\t\t\tthis.onDisk[0] = onDisk;\n+\t\t}\n+\n \t}\n \n-\tprivate static final Charset US_ASCII = Charset.forName(\"US-ASCII\");\n+\t// THIS CODE BLOCK CAN BE REMOVED IN RDF4J release 4.0!!!\n+\t// check that none of the new TxnStatus conflict with the old ones, ie. if the first byte for the old values are the\n+\t// same as the first byte for the new values\n+\t{\n+\t\tboolean assertsEnabled = TxnStatus.class.desiredAssertionStatus();\n+\t\tif (assertsEnabled) {\n+\t\t\tfor (TxnStatus value1 : TxnStatus.values()) {\n+\t\t\t\tfor (TxnStatus value2 : TxnStatus.values()) {\n+\t\t\t\t\tbyte firstByteInOldValue = value1.name().getBytes(US_ASCII)[0];\n+\t\t\t\t\tbyte firstByteInNewValue = value2.onDisk[0];\n+\t\t\t\t\tassert firstByteInOldValue != firstByteInNewValue;", "originalCommit": "721b328904dc2ecd87cf4b0a222cb5898335e744", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ3NzU0MQ==", "url": "https://github.com/eclipse/rdf4j/pull/1848#discussion_r368477541", "bodyText": "I moved it into a test instead. It checks that the first byte in the old statuses isn't the same as the first byte in the new ones.", "author": "hmottestad", "createdAt": "2020-01-20T10:37:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM0MjU3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM0MjY5OQ==", "url": "https://github.com/eclipse/rdf4j/pull/1848#discussion_r368342699", "bodyText": "Can these be moved into the enum? And can they be made private?", "author": "jeenbroekstra", "createdAt": "2020-01-20T01:33:04Z", "path": "core/sail/nativerdf/src/main/java/org/eclipse/rdf4j/sail/nativerdf/TxnStatusFile.java", "diffHunk": "@@ -13,41 +13,70 @@\n \n import org.eclipse.rdf4j.common.io.NioFile;\n \n+import static java.nio.charset.StandardCharsets.US_ASCII;\n+\n /**\n  * Writes transaction statuses to a file.\n  */\n class TxnStatusFile {\n+\tpublic static final byte NONE_BYTE = (byte) 0b00000001;\n+\tpublic static final byte ACTIVE_BYTE = (byte) 0b00000010;\n+\tpublic static final byte COMMITTING_BYTE = (byte) 0b00000100;\n+\tpublic static final byte ROLLING_BACK_BYTE = (byte) 0b00001000;\n+\tpublic static final byte UNKNOWN_BYTE = (byte) 0b00010000;", "originalCommit": "721b328904dc2ecd87cf4b0a222cb5898335e744", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ3NzY2Mg==", "url": "https://github.com/eclipse/rdf4j/pull/1848#discussion_r368477662", "bodyText": "Done.", "author": "hmottestad", "createdAt": "2020-01-20T10:37:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM0MjY5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM0Mjc0NQ==", "url": "https://github.com/eclipse/rdf4j/pull/1848#discussion_r368342745", "bodyText": "Can we make this a private (final) field with a separate accessor method?", "author": "jeenbroekstra", "createdAt": "2020-01-20T01:33:30Z", "path": "core/sail/nativerdf/src/main/java/org/eclipse/rdf4j/sail/nativerdf/TxnStatusFile.java", "diffHunk": "@@ -13,41 +13,70 @@\n \n import org.eclipse.rdf4j.common.io.NioFile;\n \n+import static java.nio.charset.StandardCharsets.US_ASCII;\n+\n /**\n  * Writes transaction statuses to a file.\n  */\n class TxnStatusFile {\n+\tpublic static final byte NONE_BYTE = (byte) 0b00000001;\n+\tpublic static final byte ACTIVE_BYTE = (byte) 0b00000010;\n+\tpublic static final byte COMMITTING_BYTE = (byte) 0b00000100;\n+\tpublic static final byte ROLLING_BACK_BYTE = (byte) 0b00001000;\n+\tpublic static final byte UNKNOWN_BYTE = (byte) 0b00010000;\n \n \tpublic static enum TxnStatus {\n \n \t\t/**\n \t\t * No active transaction. This occurs if no transaction has been started yet, or if all transactions have been\n \t\t * committed or rolled back.\n \t\t */\n-\t\tNONE,\n+\t\tNONE(NONE_BYTE),\n \n \t\t/**\n \t\t * A transaction has been started, but was not yet committed or rolled back.\n \t\t */\n-\t\tACTIVE,\n+\t\tACTIVE(ACTIVE_BYTE),\n \n \t\t/**\n \t\t * A transaction is being committed.\n \t\t */\n-\t\tCOMMITTING,\n+\t\tCOMMITTING(COMMITTING_BYTE),\n \n \t\t/**\n \t\t * A transaction is being rolled back.\n \t\t */\n-\t\tROLLING_BACK,\n+\t\tROLLING_BACK(ROLLING_BACK_BYTE),\n \n \t\t/**\n \t\t * The transaction status is unknown.\n \t\t */\n-\t\tUNKNOWN;\n+\t\tUNKNOWN(UNKNOWN_BYTE);\n+\n+\t\tbyte[] onDisk;", "originalCommit": "721b328904dc2ecd87cf4b0a222cb5898335e744", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ3NzczOA==", "url": "https://github.com/eclipse/rdf4j/pull/1848#discussion_r368477738", "bodyText": "Done.", "author": "hmottestad", "createdAt": "2020-01-20T10:37:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM0Mjc0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM0MzUwNQ==", "url": "https://github.com/eclipse/rdf4j/pull/1848#discussion_r368343505", "bodyText": "Do you want to put a further assertion here that after replaying the txn and getting everything in shape, the transaction file now uses the new format?", "author": "jeenbroekstra", "createdAt": "2020-01-20T01:40:46Z", "path": "core/sail/nativerdf/src/test/java/org/eclipse/rdf4j/sail/nativerdf/NativeStoreTxnTest.java", "diffHunk": "@@ -104,4 +109,35 @@ protected void removeStmt(Statement stmt) {\n \t\t\tconn.commit();\n \t\t}\n \t}\n+\n+\t@Test\n+\tpublic void testOldTxnStatusFile() throws Exception {\n+\n+\t\ttry (RepositoryConnection con = repo.getConnection()) {\n+\t\t\tcon.begin();\n+\t\t\tassertFalse(con.hasStatement(RDF.TYPE, RDF.TYPE, RDFS.RESOURCE, false));\n+\t\t\tcon.add(RDF.TYPE, RDF.TYPE, RDFS.RESOURCE);\n+\t\t\tcon.commit();\n+\t\t}\n+\t\trepo.shutDown();\n+\n+\t\tFile txnStatusFile = new File(repo.getDataDir().getAbsolutePath() + \"/txn-status\");\n+\n+\t\t// write old format of txn-status\n+\t\tNioFile nioFile = new NioFile(txnStatusFile);\n+\t\tbyte[] bytes = \"COMMITTING\".getBytes(US_ASCII);\n+\t\tnioFile.truncate(bytes.length);\n+\t\tnioFile.writeBytes(bytes, 0);\n+\n+\t\trepo.init();\n+\n+\t\ttry (RepositoryConnection con = repo.getConnection()) {\n+\n+\t\t\tcon.begin();\n+\t\t\tassertTrue(con.hasStatement(RDF.TYPE, RDF.TYPE, RDFS.RESOURCE, false));\n+\t\t\tcon.commit();", "originalCommit": "721b328904dc2ecd87cf4b0a222cb5898335e744", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ3ODI5OQ==", "url": "https://github.com/eclipse/rdf4j/pull/1848#discussion_r368478299", "bodyText": "I found the TripleStoreRecoveryTest and based my test on that one, with the exception that I hardcoded the old \"COMMITTING\" string.", "author": "hmottestad", "createdAt": "2020-01-20T10:39:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM0MzUwNQ=="}], "type": "inlineReview"}, {"oid": "f8a2df63ab5e349380873c36856cf555f8f5c19c", "url": "https://github.com/eclipse/rdf4j/commit/f8a2df63ab5e349380873c36856cf555f8f5c19c", "message": "#1108 benchmarks\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-01-20T10:24:25Z", "type": "commit"}, {"oid": "ef0a261855755639a2ac10a55b266e6f937a5eda", "url": "https://github.com/eclipse/rdf4j/commit/ef0a261855755639a2ac10a55b266e6f937a5eda", "message": "#1108 transaction status now uses single byte for higher TPS\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-01-20T10:24:25Z", "type": "commit"}, {"oid": "05a9aa84ce3e185508472b3ae35362fb547a527d", "url": "https://github.com/eclipse/rdf4j/commit/05a9aa84ce3e185508472b3ae35362fb547a527d", "message": "#1108 backwards compatible\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-01-20T10:24:25Z", "type": "commit"}, {"oid": "442c2ca33e21d17dd3b7a335c521f721afca9090", "url": "https://github.com/eclipse/rdf4j/commit/442c2ca33e21d17dd3b7a335c521f721afca9090", "message": "#1108 test if we are compatible with the old txn-status files\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-01-20T10:24:25Z", "type": "commit"}, {"oid": "f259c23bd883c76ef4f30c0d4e2cb41a73b879f0", "url": "https://github.com/eclipse/rdf4j/commit/f259c23bd883c76ef4f30c0d4e2cb41a73b879f0", "message": "#1108 reduced benchmark\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-01-20T10:24:25Z", "type": "commit"}, {"oid": "f259c23bd883c76ef4f30c0d4e2cb41a73b879f0", "url": "https://github.com/eclipse/rdf4j/commit/f259c23bd883c76ef4f30c0d4e2cb41a73b879f0", "message": "#1108 reduced benchmark\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-01-20T10:24:25Z", "type": "forcePushed"}, {"oid": "52fe76c97a62d1e61f61701cf680094f4f0357b3", "url": "https://github.com/eclipse/rdf4j/commit/52fe76c97a62d1e61f61701cf680094f4f0357b3", "message": "#1108 updates based on comments\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-01-20T10:36:24Z", "type": "commit"}, {"oid": "137b7e773eccad88dd73e6fc384e36581c4b4b5e", "url": "https://github.com/eclipse/rdf4j/commit/137b7e773eccad88dd73e6fc384e36581c4b4b5e", "message": "#1108 assert that current status has been updated correctly\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-01-20T10:44:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc1NjQ4Nw==", "url": "https://github.com/eclipse/rdf4j/pull/1848#discussion_r368756487", "bodyText": "Does that work now that you've made it private? I would have expected you need to use getOnDisk() here instead.", "author": "jeenbroekstra", "createdAt": "2020-01-20T23:25:47Z", "path": "core/sail/nativerdf/src/main/java/org/eclipse/rdf4j/sail/nativerdf/TxnStatusFile.java", "diffHunk": "@@ -77,25 +94,55 @@ public void close() throws IOException {\n \n \t/**\n \t * Writes the specified transaction status to file.\n-\t * \n+\t *\n \t * @param txnStatus The transaction status to write.\n \t * @throws IOException If the transaction status could not be written to file.\n \t */\n \tpublic void setTxnStatus(TxnStatus txnStatus) throws IOException {\n-\t\tbyte[] bytes = txnStatus.name().getBytes(US_ASCII);\n+\t\tbyte[] bytes = txnStatus.onDisk;", "originalCommit": "137b7e773eccad88dd73e6fc384e36581c4b4b5e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODgzMTgwNg==", "url": "https://github.com/eclipse/rdf4j/pull/1848#discussion_r368831806", "bodyText": "Was surprised too. Seems that this is legal. No compile issues.", "author": "hmottestad", "createdAt": "2020-01-21T06:39:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc1NjQ4Nw=="}], "type": "inlineReview"}]}