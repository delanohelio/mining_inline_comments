{"pr_number": 2057, "pr_title": "GH-2056 more use of getStatement instead of filter", "pr_createdAt": "2020-04-01T20:05:15Z", "pr_url": "https://github.com/eclipse/rdf4j/pull/2057", "timeline": [{"oid": "210498fd2b54903e8a8fa274e0346ccac748ddf0", "url": "https://github.com/eclipse/rdf4j/commit/210498fd2b54903e8a8fa274e0346ccac748ddf0", "message": "GH-2056 migrate to hashmap to be able to return the actual statement instead of a new statement in the SingletonIterator\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-04-01T20:39:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk0NDA0OQ==", "url": "https://github.com/eclipse/rdf4j/pull/2057#discussion_r401944049", "bodyText": "Ah. Using a HashMap to be able to match and retrieve the original statement, instead of the newly created copy. Clever.", "author": "jeenbroekstra", "createdAt": "2020-04-01T22:20:49Z", "path": "core/model/src/main/java/org/eclipse/rdf4j/model/impl/DynamicModel.java", "diffHunk": "@@ -281,12 +296,32 @@ public void clear() {\n \t\t}\n \t}\n \n+\t@Override\n+\tpublic Iterator<Statement> getStatements(Resource subject, IRI predicate, Value object, Resource... contexts) {\n+\t\tif (model == null && subject != null && predicate != null && object != null && contexts != null\n+\t\t\t\t&& contexts.length == 1) {\n+\t\t\tStatement statement = SimpleValueFactory.getInstance()\n+\t\t\t\t\t.createStatement(subject, predicate, object, contexts[0]);\n+\t\t\tStatement foundStatement = statements.get(statement);", "originalCommit": "210498fd2b54903e8a8fa274e0346ccac748ddf0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk0NDkzMQ==", "url": "https://github.com/eclipse/rdf4j/pull/2057#discussion_r401944931", "bodyText": "Can we keep the old constructor signature as a (deprecated) overload? Just to keep things backward compatible.", "author": "jeenbroekstra", "createdAt": "2020-04-01T22:22:57Z", "path": "core/sail/base/src/main/java/org/eclipse/rdf4j/sail/base/DistinctModelReducingUnionIteration.java", "diffHunk": "@@ -34,15 +34,15 @@\n public class DistinctModelReducingUnionIteration extends LookAheadIteration<Statement, SailException> {\n \n \tDistinctModelReducingUnionIteration(CloseableIteration<? extends Statement, SailException> iterator, Model model,\n-\t\t\tFunction<Model, Model> filterable) {\n+\t\t\tFunction<Model, Iterator<Statement>> filterable) {", "originalCommit": "210498fd2b54903e8a8fa274e0346ccac748ddf0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjAzMzIyNA==", "url": "https://github.com/eclipse/rdf4j/pull/2057#discussion_r402033224", "bodyText": "Actually never mind, I overlooked that this constructor is package-private anyway.", "author": "jeenbroekstra", "createdAt": "2020-04-02T03:34:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk0NDkzMQ=="}], "type": "inlineReview"}, {"oid": "64b970b72934870125a02b48958d95a961df47d2", "url": "https://github.com/eclipse/rdf4j/commit/64b970b72934870125a02b48958d95a961df47d2", "message": "GH-2056 added benchmarks\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-04-02T16:38:43Z", "type": "commit"}, {"oid": "85c83a82d8e576c41aa195b042216e2aad97aef5", "url": "https://github.com/eclipse/rdf4j/commit/85c83a82d8e576c41aa195b042216e2aad97aef5", "message": "GH-2056 more use of getStatement instead of filter\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-04-02T16:38:43Z", "type": "commit"}, {"oid": "4391f9e88e610efb22e396d970c4abe258e4fea5", "url": "https://github.com/eclipse/rdf4j/commit/4391f9e88e610efb22e396d970c4abe258e4fea5", "message": "GH-2056 removed unnecessary filter\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-04-02T16:38:43Z", "type": "commit"}, {"oid": "858889e02bcfce05862cab13cc3d6e5e69c7bea4", "url": "https://github.com/eclipse/rdf4j/commit/858889e02bcfce05862cab13cc3d6e5e69c7bea4", "message": "GH-2056 implemented getStatements in DynamicModel to handle single statements if possible\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-04-02T16:38:43Z", "type": "commit"}, {"oid": "20212298d8ab6b0c469d234885f92285872dbaf2", "url": "https://github.com/eclipse/rdf4j/commit/20212298d8ab6b0c469d234885f92285872dbaf2", "message": "GH-2056 migrate to hashmap to be able to return the actual statement instead of a new statement in the SingletonIterator\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-04-02T16:38:43Z", "type": "commit"}, {"oid": "20212298d8ab6b0c469d234885f92285872dbaf2", "url": "https://github.com/eclipse/rdf4j/commit/20212298d8ab6b0c469d234885f92285872dbaf2", "message": "GH-2056 migrate to hashmap to be able to return the actual statement instead of a new statement in the SingletonIterator\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-04-02T16:38:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUyMzY1Nw==", "url": "https://github.com/eclipse/rdf4j/pull/2057#discussion_r402523657", "bodyText": "I don't think this change makes a difference for the results. The set of statements that are in iter but not in deprecated is the same unless the pattern used to filter deprecated is different from the pattern used by iter.\nThe difference is for performance. Now later on in the FilterIteration we can work directly with the hashmap without having to upgrade to a full LinkedHashModel because of a complicated filter operation.", "author": "hmottestad", "createdAt": "2020-04-02T18:27:12Z", "path": "core/sail/base/src/main/java/org/eclipse/rdf4j/sail/base/SailDatasetImpl.java", "diffHunk": "@@ -267,15 +267,16 @@ public void handleClose() throws SailException {\n \t\t}\n \t\tModel deprecated = changes.getDeprecated();\n \t\tif (deprecated != null && iter != null) {\n-\t\t\titer = difference(iter, deprecated.filter(subj, pred, obj, contexts));\n+\t\t\titer = difference(iter, deprecated);", "originalCommit": "20212298d8ab6b0c469d234885f92285872dbaf2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc0NTYyMQ==", "url": "https://github.com/eclipse/rdf4j/pull/2057#discussion_r402745621", "bodyText": "The test suite appears to agree with you!", "author": "jeenbroekstra", "createdAt": "2020-04-03T05:33:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUyMzY1Nw=="}], "type": "inlineReview"}, {"oid": "860f72b2c529e8ffd3f85bbf9e577535270f17c9", "url": "https://github.com/eclipse/rdf4j/commit/860f72b2c529e8ffd3f85bbf9e577535270f17c9", "message": "GH-2056 migrate from iterator to iterable in order to support for-each loops\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-04-03T07:16:01Z", "type": "commit"}, {"oid": "221d8b9448b6d721cdd4c51421860e3b4e59b805", "url": "https://github.com/eclipse/rdf4j/commit/221d8b9448b6d721cdd4c51421860e3b4e59b805", "message": "GH-2056 migrate more code to use getStatements instead of filter\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-04-03T07:16:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc4MTQwMg==", "url": "https://github.com/eclipse/rdf4j/pull/2057#discussion_r402781402", "bodyText": "@jeenbroekstra I'm proposing we move from iterator to iterable because iterable supports for-each loops and is also simpler to convert into a stream.", "author": "hmottestad", "createdAt": "2020-04-03T07:18:13Z", "path": "core/model/src/main/java/org/eclipse/rdf4j/model/Model.java", "diffHunk": "@@ -191,14 +191,14 @@ public default boolean remove(Resource subj, URI pred, Value obj, Resource... co\n \t *                  matching any one of these will match. To match statements without an associated context, specify\n \t *                  the value {@code null} and explicitly cast it to type {@code Resource}.\n \t * @return an {@link Iterator} over the statements in this Model that match the specified pattern.\n-\t * \n+\t *\n \t * @since 3.2.0\n-\t * \n+\t *\n \t * @see #filter(Resource, IRI, Value, Resource...)\n \t */\n-\tpublic default Iterator<Statement> getStatements(Resource subject, IRI predicate, Value object,\n+\tpublic default Iterable<Statement> getStatements(Resource subject, IRI predicate, Value object,\n \t\t\tResource... contexts) {\n-\t\treturn filter(subject, predicate, object, contexts).iterator();\n+\t\treturn () -> filter(subject, predicate, object, contexts).iterator();", "originalCommit": "221d8b9448b6d721cdd4c51421860e3b4e59b805", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc5NTI4Ng==", "url": "https://github.com/eclipse/rdf4j/pull/2057#discussion_r402795286", "bodyText": "It's a pity that Java didn't introduce a combo interface with both iterable and stream. We can always create our own interface in the future though which extends both and still remain backwards compatible.", "author": "hmottestad", "createdAt": "2020-04-03T07:46:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc4MTQwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgwNzc2Nw==", "url": "https://github.com/eclipse/rdf4j/pull/2057#discussion_r402807767", "bodyText": "@jeenbroekstra I'm proposing we move from iterator to iterable because iterable supports for-each loops and is also simpler to convert into a stream.\n\nI'm fine with that, but can you make sure you update the original issue's (#2030) description, and also the javadoc in Model?", "author": "jeenbroekstra", "createdAt": "2020-04-03T08:02:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc4MTQwMg=="}], "type": "inlineReview"}, {"oid": "878c8377a5445b6358d8c6d73c25a22e168475cb", "url": "https://github.com/eclipse/rdf4j/commit/878c8377a5445b6358d8c6d73c25a22e168475cb", "message": "GH-2056 updated java docs\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-04-03T09:13:54Z", "type": "commit"}]}