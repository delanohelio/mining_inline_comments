{"pr_number": 2633, "pr_title": "GH-2632 rsx:targetShape bug when using sh:or or sh:and", "pr_createdAt": "2020-11-04T20:11:39Z", "pr_url": "https://github.com/eclipse/rdf4j/pull/2633", "timeline": [{"oid": "7d6fafb14b19aede2a948c6235a2eed60631ff56", "url": "https://github.com/eclipse/rdf4j/commit/7d6fafb14b19aede2a948c6235a2eed60631ff56", "message": "GH-2632 test cases and fixes\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-11-04T20:08:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY0NzIzNA==", "url": "https://github.com/eclipse/rdf4j/pull/2633#discussion_r517647234", "bodyText": "Typically variable names do not actually start with a question mark - in SPARQL they do of course but our query parsers all treat it like a marker prefix, not as part of the actual variable name.", "author": "jeenbroekstra", "createdAt": "2020-11-04T21:41:02Z", "path": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/AST/AndPropertyShape.java", "diffHunk": "@@ -288,9 +290,22 @@ public String buildSparqlValidNodes(String targetVar) {\n \n \t@Override\n \tpublic Stream<StatementPattern> getStatementPatterns() {\n-\t\treturn and\n-\t\t\t\t.stream()\n+\t\tStatementPattern subject = new StatementPattern(\n+\t\t\t\tnew Var(\"?this\"),", "originalCommit": "7d6fafb14b19aede2a948c6235a2eed60631ff56", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzgwNTM2Mw==", "url": "https://github.com/eclipse/rdf4j/pull/2633#discussion_r517805363", "bodyText": "This PR is mostly to fix a bug in the old AST so that I can handel it properly in the new AST. This is essentially just copy-paste from other parts of the code that are built like this, so I don't want to start fixing it up now. I will take a look in the new AST and see if I prefix my vars with ? or not. And also check the random UUID thing you commented.", "author": "hmottestad", "createdAt": "2020-11-05T05:46:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY0NzIzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY0ODYwMg==", "url": "https://github.com/eclipse/rdf4j/pull/2633#discussion_r517648602", "bodyText": "Are these randomly generated variable names ever serialized, for example as part of a SPARQL query? If so we'll need a more robust name assignement, because this will produce a variable name that won't be legal in SPARQL.\nI'm pretty sure we have ready-made code somewhere (in the query parser utils perhaps) for this kind of thing. There should be a single place where we generate these kind of anonymous vars, so that if we need to change the name-generation logic for any reason, we don't have to change it all over the place.", "author": "jeenbroekstra", "createdAt": "2020-11-04T21:44:06Z", "path": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/AST/AndPropertyShape.java", "diffHunk": "@@ -288,9 +290,22 @@ public String buildSparqlValidNodes(String targetVar) {\n \n \t@Override\n \tpublic Stream<StatementPattern> getStatementPatterns() {\n-\t\treturn and\n-\t\t\t\t.stream()\n+\t\tStatementPattern subject = new StatementPattern(\n+\t\t\t\tnew Var(\"?this\"),\n+\t\t\t\tnew Var(UUID.randomUUID().toString()),\n+\t\t\t\tnew Var(UUID.randomUUID().toString())\n+\t\t);\n+\n+\t\tStatementPattern object = new StatementPattern(\n+\t\t\t\tnew Var(UUID.randomUUID().toString()),", "originalCommit": "7d6fafb14b19aede2a948c6235a2eed60631ff56", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}