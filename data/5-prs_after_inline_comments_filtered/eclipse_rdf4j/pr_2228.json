{"pr_number": 2228, "pr_title": "GH-2211 add more latches and loop to reduce chance of flaky failure", "pr_createdAt": "2020-05-16T07:17:22Z", "pr_url": "https://github.com/eclipse/rdf4j/pull/2228", "timeline": [{"oid": "5b9e8b268f76d0079bef9e5bda0cdc29e0e5e31e", "url": "https://github.com/eclipse/rdf4j/commit/5b9e8b268f76d0079bef9e5bda0cdc29e0e5e31e", "message": "GH-2211 add more latches and loop to reduce chance of flaky failure\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-05-16T07:16:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEyNzc4OQ==", "url": "https://github.com/eclipse/rdf4j/pull/2228#discussion_r426127789", "bodyText": "This latching here should help reduce the chance of this one thread getting executed first.", "author": "hmottestad", "createdAt": "2020-05-16T07:18:01Z", "path": "core/model/src/test/java/org/eclipse/rdf4j/model/DynamicModelConcurrentModificationAndUpgradeTest.java", "diffHunk": "@@ -75,20 +91,23 @@ public boolean contains(Object o) {\n \t\t\t\t\t\t\t@Override\n \t\t\t\t\t\t\tpublic boolean hasNext() {\n \t\t\t\t\t\t\t\ttry {\n-\t\t\t\t\t\t\t\t\tcountDownLatch.await();\n+\t\t\t\t\t\t\t\t\tcountDownLatch1.countDown();\n+\t\t\t\t\t\t\t\t\tcountDownLatch2.await();", "originalCommit": "5b9e8b268f76d0079bef9e5bda0cdc29e0e5e31e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEyNzgxMA==", "url": "https://github.com/eclipse/rdf4j/pull/2228#discussion_r426127810", "bodyText": "and here is the count down for that latch", "author": "hmottestad", "createdAt": "2020-05-16T07:18:15Z", "path": "core/model/src/test/java/org/eclipse/rdf4j/model/DynamicModelConcurrentModificationAndUpgradeTest.java", "diffHunk": "@@ -145,8 +164,13 @@ public void clear() {\n \t\t};\n \n \t\tRunnable upgrade = () -> {\n+\t\t\ttry {\n+\t\t\t\tcountDownLatch1.await();\n+\t\t\t} catch (InterruptedException e) {\n+\t\t\t\te.printStackTrace();\n+\t\t\t}\n \t\t\tmodel.filter(null, RDF.TYPE, null);\n-\t\t\tcountDownLatch.countDown();\n+\t\t\tcountDownLatch2.countDown();", "originalCommit": "5b9e8b268f76d0079bef9e5bda0cdc29e0e5e31e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}