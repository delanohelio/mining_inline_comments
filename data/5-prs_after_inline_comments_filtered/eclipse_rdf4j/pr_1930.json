{"pr_number": 1930, "pr_title": "#1929 introduce a SimpleUpgradeableModel", "pr_createdAt": "2020-02-16T11:30:00Z", "pr_url": "https://github.com/eclipse/rdf4j/pull/1930", "timeline": [{"oid": "cb96448620de7f5e535979ccf282ed03fb83aca8", "url": "https://github.com/eclipse/rdf4j/commit/cb96448620de7f5e535979ccf282ed03fb83aca8", "message": "#1929 introduce a SimpleUpgradeableModel that uses a Set unless more functionality is needed\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-02-16T11:27:03Z", "type": "commit"}, {"oid": "54ac938da526b5f6d9adc830094cbdd4a0536325", "url": "https://github.com/eclipse/rdf4j/commit/54ac938da526b5f6d9adc830094cbdd4a0536325", "message": "formatting\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-02-16T16:47:41Z", "type": "commit"}, {"oid": "97a1906e2665bc4bec0019fe5af89e0a3977b6c3", "url": "https://github.com/eclipse/rdf4j/commit/97a1906e2665bc4bec0019fe5af89e0a3977b6c3", "message": "#1929 fixed a bug in the code\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-02-16T19:47:33Z", "type": "commit"}, {"oid": "aa56f9401879a1524e0f573c577235236bdc5f4e", "url": "https://github.com/eclipse/rdf4j/commit/aa56f9401879a1524e0f573c577235236bdc5f4e", "message": "#1929 more efficient clear and correct handling of remove if any params are null\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-02-16T19:55:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkyODc0Mg==", "url": "https://github.com/eclipse/rdf4j/pull/1930#discussion_r379928742", "bodyText": "This fixes a bug I believe I've introduced previously. Not a problem until now though.", "author": "hmottestad", "createdAt": "2020-02-16T19:56:27Z", "path": "core/sail/memory/src/main/java/org/eclipse/rdf4j/sail/memory/MemorySailStore.java", "diffHunk": "@@ -511,7 +511,10 @@ public synchronized void deprecate(Statement statement) throws SailException {\n \t\t\tacquireExclusiveTransactionLock();\n \t\t\trequireCleanup = true;\n \t\t\tif (statement instanceof MemStatement) {\n-\t\t\t\t((MemStatement) statement).setTillSnapshot(nextSnapshot);\n+\t\t\t\tMemStatement toDeprecate = (MemStatement) statement;\n+\t\t\t\tif (toDeprecate.getTillSnapshot() > nextSnapshot && toDeprecate.isExplicit() == explicit) {\n+\t\t\t\t\ttoDeprecate.setTillSnapshot(nextSnapshot);\n+\t\t\t\t}", "originalCommit": "aa56f9401879a1524e0f573c577235236bdc5f4e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTA3MDAzNg==", "url": "https://github.com/eclipse/rdf4j/pull/1930#discussion_r381070036", "bodyText": "How is this fix related to the new SimpleUpgradeableModel class?", "author": "jeenbroekstra", "createdAt": "2020-02-19T04:21:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkyODc0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTE4ODI1OQ==", "url": "https://github.com/eclipse/rdf4j/pull/1930#discussion_r381188259", "bodyText": "I've made some more changes here.\nThe concept of directly manipulating the statement was introduced with the ElasticsearchStore. Gives a decent performance improvement since it allows us to skip retrieving a statement we already have. Unfortunately it's common that we try to deprecate a statement that can't be deprecated (not in our snapshot or explicit/inferred). That's usually handled when retrieving the statement again, however since we are working on it directly we need to apply the same checks.", "author": "hmottestad", "createdAt": "2020-02-19T09:59:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkyODc0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTE4OTA5OQ==", "url": "https://github.com/eclipse/rdf4j/pull/1930#discussion_r381189099", "bodyText": "I've now copied this line from here: \n  \n    \n      rdf4j/core/sail/memory/src/main/java/org/eclipse/rdf4j/sail/memory/model/MemStatementIterator.java\n    \n    \n         Line 142\n      in\n      d2a301d\n    \n    \n    \n    \n\n        \n          \n           return snapshot < 0 || st.isInSnapshot(snapshot);", "author": "hmottestad", "createdAt": "2020-02-19T10:01:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkyODc0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTIwMDAwNQ==", "url": "https://github.com/eclipse/rdf4j/pull/1930#discussion_r381200005", "bodyText": "Btw. The reason this wasn't caught earlier was because the statements was never instanceof MemStatement directly until now. The LinkedHashModel wraps it's statement in a LinkedHashModelStatement (or something like that)", "author": "hmottestad", "createdAt": "2020-02-19T10:20:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkyODc0Mg=="}], "type": "inlineReview"}, {"oid": "402751590863ace12ed512191848a04a67931edc", "url": "https://github.com/eclipse/rdf4j/commit/402751590863ace12ed512191848a04a67931edc", "message": "#1929 null pointer expection fix\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-02-16T20:26:47Z", "type": "commit"}, {"oid": "10a38fb5433edde87d802cae863f6ba70c99174d", "url": "https://github.com/eclipse/rdf4j/commit/10a38fb5433edde87d802cae863f6ba70c99174d", "message": "#1929 implemented some tests and fixed some tests that assumed ordering without specifying ordering\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-02-17T08:42:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDA3NDkxNg==", "url": "https://github.com/eclipse/rdf4j/pull/1930#discussion_r380074916", "bodyText": "There were tests that assumed an order but didn't specify one. The new ConcurrentHashSet based model has reverse order from the LinkedHashSet based one. I think this is fine, unless there is some internal ordering requirement that I don't know about???", "author": "hmottestad", "createdAt": "2020-02-17T09:42:17Z", "path": "compliance/repository/src/test/java/org/eclipse/rdf4j/repository/sparql/federation/RepositoryFederatedServiceIntegrationTest.java", "diffHunk": "@@ -129,7 +129,7 @@ public void test4() throws Exception {\n \t\t\t\tvf.createStatement(iri(\"s2\"), RDFS.LABEL, l(\"val2\")),\n \t\t\t\tvf.createStatement(iri(\"s3\"), RDFS.LABEL, l(\"val3\"))));\n \n-\t\tString query = \"SELECT ?var WHERE { SERVICE <urn:dummy> { ?s ?p ?var } . SERVICE <urn:dummy> {  ?s ?p ?var  } }\";\n+\t\tString query = \"SELECT ?var WHERE { SERVICE <urn:dummy> { ?s ?p ?var } . SERVICE <urn:dummy> {  ?s ?p ?var  } } order by ?var\";", "originalCommit": "10a38fb5433edde87d802cae863f6ba70c99174d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTA3MTc0MA==", "url": "https://github.com/eclipse/rdf4j/pull/1930#discussion_r381071740", "bodyText": "A Model is supposed to have predictable iteration order but that doesn't translate to a fixed order on a SPARQL query result, so good find.", "author": "jeenbroekstra", "createdAt": "2020-02-19T04:30:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDA3NDkxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkzNTU0Ng==", "url": "https://github.com/eclipse/rdf4j/pull/1930#discussion_r379935546", "bodyText": "Can we put a bit of javadoc in that describes the purpose and design rationale of this class?", "author": "jeenbroekstra", "createdAt": "2020-02-16T21:39:28Z", "path": "core/sail/base/src/main/java/org/eclipse/rdf4j/sail/base/SimpleUpgradeableModel.java", "diffHunk": "@@ -0,0 +1,256 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eclipse RDF4J contributors.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Distribution License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/org/documents/edl-v10.php.\n+ *******************************************************************************/\n+package org.eclipse.rdf4j.sail.base;\n+\n+import org.eclipse.rdf4j.model.IRI;\n+import org.eclipse.rdf4j.model.Model;\n+import org.eclipse.rdf4j.model.ModelFactory;\n+import org.eclipse.rdf4j.model.Namespace;\n+import org.eclipse.rdf4j.model.Resource;\n+import org.eclipse.rdf4j.model.Statement;\n+import org.eclipse.rdf4j.model.Value;\n+import org.eclipse.rdf4j.model.impl.SimpleValueFactory;\n+\n+import java.util.Collection;\n+import java.util.Iterator;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+public class SimpleUpgradeableModel implements Model {", "originalCommit": "402751590863ace12ed512191848a04a67931edc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d23c463b50a2980b30835c86d9a20e02edf8c424", "url": "https://github.com/eclipse/rdf4j/commit/d23c463b50a2980b30835c86d9a20e02edf8c424", "message": "#1929 moved to same location as other classes and integrated into tests\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-02-19T09:29:17Z", "type": "commit"}, {"oid": "8f7f460c82c17de240114131683a833148aecdd9", "url": "https://github.com/eclipse/rdf4j/commit/8f7f460c82c17de240114131683a833148aecdd9", "message": "#1929 use the same way to distinguish if the statement is in the snapshot as the rest of the code\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-02-19T09:41:26Z", "type": "commit"}]}