{"pr_number": 1319, "pr_title": "TimescaleDB : Add Flyway v2 migrations in support of new schema", "pr_createdAt": "2020-12-04T17:58:40Z", "pr_url": "https://github.com/hashgraph/hedera-mirror-node/pull/1319", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjY2NTYzMw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1319#discussion_r536665633", "bodyText": "Probably don't need to ingest FileData entries as the db environment is new and file_data should be empty.", "author": "Nana-EC", "createdAt": "2020-12-05T10:37:32Z", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/migration/V2_0_3__Address_Book.java", "diffHunk": "@@ -0,0 +1,150 @@\n+package com.hedera.mirror.importer.migration;\n+\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+\n+import com.google.common.base.Stopwatch;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+import java.util.List;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicLong;\n+import javax.inject.Named;\n+import javax.sql.DataSource;\n+import lombok.extern.log4j.Log4j2;\n+import org.apache.commons.io.IOUtils;\n+import org.flywaydb.core.api.migration.BaseJavaMigration;\n+import org.flywaydb.core.api.migration.Context;\n+import org.springframework.context.annotation.Lazy;\n+import org.springframework.core.io.ClassPathResource;\n+import org.springframework.core.io.Resource;\n+import org.springframework.jdbc.core.JdbcTemplate;\n+import org.springframework.jdbc.core.RowMapper;\n+import org.springframework.util.CollectionUtils;\n+\n+import com.hedera.mirror.importer.MirrorProperties;\n+import com.hedera.mirror.importer.addressbook.AddressBookService;\n+import com.hedera.mirror.importer.addressbook.AddressBookServiceImpl;\n+import com.hedera.mirror.importer.domain.EntityTypeEnum;\n+import com.hedera.mirror.importer.domain.FileData;\n+import com.hedera.mirror.importer.domain.TransactionTypeEnum;\n+import com.hedera.mirror.importer.util.EntityIdEndec;\n+import com.hedera.mirror.importer.util.Utility;\n+\n+@Log4j2\n+@Named\n+public class V2_0_3__Address_Book extends BaseJavaMigration {\n+    private final AddressBookService addressBookService;\n+    private final MirrorProperties mirrorProperties;\n+    private final DataSource dataSource;\n+    private static final String FILE_DATA_SQL = \"select * from file_data where consensus_timestamp > ? and entity_id \" +\n+            \"in (101, 102) order by consensus_timestamp asc limit ?\";\n+    private JdbcTemplate jdbcTemplate;\n+\n+    public V2_0_3__Address_Book(MirrorProperties mirrorProperties, @Lazy AddressBookService addressBookService,\n+                                DataSource dataSource) {\n+        this.addressBookService = addressBookService;\n+        this.mirrorProperties = mirrorProperties;\n+        this.dataSource = dataSource;\n+    }\n+\n+    @Override\n+    public void migrate(Context context) throws Exception {\n+        if (Utility.skipMigrationVersion(getVersion(), context.getConfiguration())) {\n+            return;\n+        }\n+\n+        jdbcTemplate = new JdbcTemplate(dataSource);\n+        Stopwatch stopwatch = Stopwatch.createStarted();\n+        AtomicLong currentConsensusTimestamp = new AtomicLong(0);\n+        AtomicLong fileDataEntries = new AtomicLong(0);\n+        byte[] addressBookBytes;\n+\n+        // if address book table is not empty skip migration\n+        try {\n+            // addressBookService throws when No valid address book found in DB\n+            addressBookService.getCurrent();\n+            log.warn(\"Address books exist in address_book table. Skipping migration\");\n+            return;\n+        } catch (IllegalStateException ex) {\n+            log.debug(\"No address book found in db. Searching for address book on file system\");\n+        }\n+\n+        // retrieve bootstrap address book from filesystem or classpath\n+        try {\n+            Path initialAddressBook = mirrorProperties.getInitialAddressBook();\n+            if (initialAddressBook != null) {\n+                addressBookBytes = Files.readAllBytes(initialAddressBook);\n+                log.info(\"Loading bootstrap address book of {} B from {}\", addressBookBytes.length,\n+                        initialAddressBook);\n+            } else {\n+                MirrorProperties.HederaNetwork hederaNetwork = mirrorProperties.getNetwork();\n+                String resourcePath = String.format(\"/addressbook/%s\", hederaNetwork.name().toLowerCase());\n+                Resource resource = new ClassPathResource(resourcePath, getClass());\n+                addressBookBytes = IOUtils.toByteArray(resource.getInputStream());\n+                log.info(\"Loading bootstrap address book of {} B from {}\", addressBookBytes.length, resource);\n+            }\n+        } catch (Exception e) {\n+            throw new IllegalStateException(\"Unable to load bootstrap address book\", e);\n+        }\n+\n+        FileData bootStrapFileData = new FileData(0L, addressBookBytes,", "originalCommit": "50cdfa2e6be1acc11091ba38b74c4aa6e424a23e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg2NDY3Mg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1319#discussion_r537864672", "bodyText": "Would prefer this logic in an abstract base class that extends BaseJavaMigration. Utility methods should be avoided if at all possible as an anti-pattern.", "author": "steven-sheehy", "createdAt": "2020-12-07T21:59:50Z", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/util/Utility.java", "diffHunk": "@@ -505,4 +507,21 @@ public static boolean verifyHashChain(\n         }\n         return false;\n     }\n+\n+    /**\n+     * Determine whether a java migration should be skipped based on version and isIgnoreMissingMigrations setting\n+     *\n+     * @param current                The current java migration version\n+     * @param migrationConfiguration flyway Configuration\n+     * @return\n+     */\n+    public static boolean skipMigrationVersion(MigrationVersion current, Configuration migrationConfiguration) {", "originalCommit": "50cdfa2e6be1acc11091ba38b74c4aa6e424a23e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODU5NTEwNA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1319#discussion_r538595104", "bodyText": "Yeah I did consider the Abstract class, forgot why I switched to this option. Will revert and go the agreed way", "author": "Nana-EC", "createdAt": "2020-12-08T16:53:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg2NDY3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQwNTc1NQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1319#discussion_r539405755", "bodyText": "Addressing this in PR #1340 where I added the MirrorBaseJavaMigration class that contains this logic", "author": "Nana-EC", "createdAt": "2020-12-09T15:31:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg2NDY3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg2NTQ4MQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1319#discussion_r537865481", "bodyText": "A ton of code duplication. The two address book migrations should extend the same base class and share 99% of their code.", "author": "steven-sheehy", "createdAt": "2020-12-07T22:01:12Z", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/migration/V2_0_3__Address_Book.java", "diffHunk": "@@ -0,0 +1,150 @@\n+package com.hedera.mirror.importer.migration;\n+\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+\n+import com.google.common.base.Stopwatch;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+import java.util.List;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicLong;\n+import javax.inject.Named;\n+import javax.sql.DataSource;\n+import lombok.extern.log4j.Log4j2;\n+import org.apache.commons.io.IOUtils;\n+import org.flywaydb.core.api.migration.BaseJavaMigration;\n+import org.flywaydb.core.api.migration.Context;\n+import org.springframework.context.annotation.Lazy;\n+import org.springframework.core.io.ClassPathResource;\n+import org.springframework.core.io.Resource;\n+import org.springframework.jdbc.core.JdbcTemplate;\n+import org.springframework.jdbc.core.RowMapper;\n+import org.springframework.util.CollectionUtils;\n+\n+import com.hedera.mirror.importer.MirrorProperties;\n+import com.hedera.mirror.importer.addressbook.AddressBookService;\n+import com.hedera.mirror.importer.addressbook.AddressBookServiceImpl;\n+import com.hedera.mirror.importer.domain.EntityTypeEnum;\n+import com.hedera.mirror.importer.domain.FileData;\n+import com.hedera.mirror.importer.domain.TransactionTypeEnum;\n+import com.hedera.mirror.importer.util.EntityIdEndec;\n+import com.hedera.mirror.importer.util.Utility;\n+\n+@Log4j2\n+@Named\n+public class V2_0_3__Address_Book extends BaseJavaMigration {", "originalCommit": "50cdfa2e6be1acc11091ba38b74c4aa6e424a23e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODU5NjIwNQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1319#discussion_r538596205", "bodyText": "Yep, already left a comment regarding this. Will move it to AddressBookServiceImpl", "author": "Nana-EC", "createdAt": "2020-12-08T16:54:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg2NTQ4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQwMzIyOA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1319#discussion_r539403228", "bodyText": "Addressing this in PR #1340 once that's merged I'll rebase and this will go away", "author": "Nana-EC", "createdAt": "2020-12-09T15:28:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg2NTQ4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg2NjEzNA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1319#discussion_r537866134", "bodyText": "There's no test for this class so there's ton of missed coverage warnings here. Should add a test and similarly have a common base test class to reduce duplication.", "author": "steven-sheehy", "createdAt": "2020-12-07T22:02:17Z", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/migration/V2_0_3__Address_Book.java", "diffHunk": "@@ -0,0 +1,150 @@\n+package com.hedera.mirror.importer.migration;\n+\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+\n+import com.google.common.base.Stopwatch;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+import java.util.List;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicLong;\n+import javax.inject.Named;\n+import javax.sql.DataSource;\n+import lombok.extern.log4j.Log4j2;\n+import org.apache.commons.io.IOUtils;\n+import org.flywaydb.core.api.migration.BaseJavaMigration;\n+import org.flywaydb.core.api.migration.Context;\n+import org.springframework.context.annotation.Lazy;\n+import org.springframework.core.io.ClassPathResource;\n+import org.springframework.core.io.Resource;\n+import org.springframework.jdbc.core.JdbcTemplate;\n+import org.springframework.jdbc.core.RowMapper;\n+import org.springframework.util.CollectionUtils;\n+\n+import com.hedera.mirror.importer.MirrorProperties;\n+import com.hedera.mirror.importer.addressbook.AddressBookService;\n+import com.hedera.mirror.importer.addressbook.AddressBookServiceImpl;\n+import com.hedera.mirror.importer.domain.EntityTypeEnum;\n+import com.hedera.mirror.importer.domain.FileData;\n+import com.hedera.mirror.importer.domain.TransactionTypeEnum;\n+import com.hedera.mirror.importer.util.EntityIdEndec;\n+import com.hedera.mirror.importer.util.Utility;\n+\n+@Log4j2\n+@Named\n+public class V2_0_3__Address_Book extends BaseJavaMigration {\n+    private final AddressBookService addressBookService;\n+    private final MirrorProperties mirrorProperties;\n+    private final DataSource dataSource;\n+    private static final String FILE_DATA_SQL = \"select * from file_data where consensus_timestamp > ? and entity_id \" +\n+            \"in (101, 102) order by consensus_timestamp asc limit ?\";\n+    private JdbcTemplate jdbcTemplate;\n+\n+    public V2_0_3__Address_Book(MirrorProperties mirrorProperties, @Lazy AddressBookService addressBookService,\n+                                DataSource dataSource) {\n+        this.addressBookService = addressBookService;\n+        this.mirrorProperties = mirrorProperties;\n+        this.dataSource = dataSource;\n+    }\n+\n+    @Override\n+    public void migrate(Context context) throws Exception {", "originalCommit": "50cdfa2e6be1acc11091ba38b74c4aa6e424a23e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQwMzQ2MA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1319#discussion_r539403460", "bodyText": "Addressing this in PR #1340 once that's merged I'll rebase and this will go away", "author": "Nana-EC", "createdAt": "2020-12-09T15:29:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg2NjEzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg3ODI1NA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1319#discussion_r537878254", "bodyText": "Now that we have to run this migration again, should we consider moving this logic into AddressBookService and running every startup if address_book is empty? Or even better, can run lazy on first call to getCurrent().", "author": "steven-sheehy", "createdAt": "2020-12-07T22:23:02Z", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/migration/V2_0_3__Address_Book.java", "diffHunk": "@@ -0,0 +1,150 @@\n+package com.hedera.mirror.importer.migration;\n+\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+\n+import com.google.common.base.Stopwatch;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+import java.util.List;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicLong;\n+import javax.inject.Named;\n+import javax.sql.DataSource;\n+import lombok.extern.log4j.Log4j2;\n+import org.apache.commons.io.IOUtils;\n+import org.flywaydb.core.api.migration.BaseJavaMigration;\n+import org.flywaydb.core.api.migration.Context;\n+import org.springframework.context.annotation.Lazy;\n+import org.springframework.core.io.ClassPathResource;\n+import org.springframework.core.io.Resource;\n+import org.springframework.jdbc.core.JdbcTemplate;\n+import org.springframework.jdbc.core.RowMapper;\n+import org.springframework.util.CollectionUtils;\n+\n+import com.hedera.mirror.importer.MirrorProperties;\n+import com.hedera.mirror.importer.addressbook.AddressBookService;\n+import com.hedera.mirror.importer.addressbook.AddressBookServiceImpl;\n+import com.hedera.mirror.importer.domain.EntityTypeEnum;\n+import com.hedera.mirror.importer.domain.FileData;\n+import com.hedera.mirror.importer.domain.TransactionTypeEnum;\n+import com.hedera.mirror.importer.util.EntityIdEndec;\n+import com.hedera.mirror.importer.util.Utility;\n+\n+@Log4j2\n+@Named\n+public class V2_0_3__Address_Book extends BaseJavaMigration {\n+    private final AddressBookService addressBookService;\n+    private final MirrorProperties mirrorProperties;\n+    private final DataSource dataSource;\n+    private static final String FILE_DATA_SQL = \"select * from file_data where consensus_timestamp > ? and entity_id \" +\n+            \"in (101, 102) order by consensus_timestamp asc limit ?\";\n+    private JdbcTemplate jdbcTemplate;\n+\n+    public V2_0_3__Address_Book(MirrorProperties mirrorProperties, @Lazy AddressBookService addressBookService,\n+                                DataSource dataSource) {\n+        this.addressBookService = addressBookService;\n+        this.mirrorProperties = mirrorProperties;\n+        this.dataSource = dataSource;\n+    }\n+\n+    @Override\n+    public void migrate(Context context) throws Exception {\n+        if (Utility.skipMigrationVersion(getVersion(), context.getConfiguration())) {\n+            return;\n+        }\n+\n+        jdbcTemplate = new JdbcTemplate(dataSource);\n+        Stopwatch stopwatch = Stopwatch.createStarted();\n+        AtomicLong currentConsensusTimestamp = new AtomicLong(0);\n+        AtomicLong fileDataEntries = new AtomicLong(0);\n+        byte[] addressBookBytes;\n+\n+        // if address book table is not empty skip migration\n+        try {\n+            // addressBookService throws when No valid address book found in DB\n+            addressBookService.getCurrent();", "originalCommit": "50cdfa2e6be1acc11091ba38b74c4aa6e424a23e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODU5ODY4NQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1319#discussion_r538598685", "bodyText": "Yep, agreed with lazy approach", "author": "Nana-EC", "createdAt": "2020-12-08T16:56:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg3ODI1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQwNTAzMg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1319#discussion_r539405032", "bodyText": "Addressing this in PR #1340 where most of this logic is moved to the service to ensure the mirror can populate the table if need be on AddressBookServiceImpl.getCurrent() or AddressBookServiceImpl.update() when table is empty", "author": "Nana-EC", "createdAt": "2020-12-09T15:30:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg3ODI1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDUzNTEyNw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1319#discussion_r540535127", "bodyText": "Delete file on merge", "author": "Nana-EC", "createdAt": "2020-12-10T22:12:36Z", "path": "hedera-mirror-importer/src/test/java/com/hedera/mirror/importer/migration/V1_28_1__Address_BookTest.java", "diffHunk": "@@ -32,6 +32,7 @@\n import java.util.List;\n import javax.annotation.Resource;\n import javax.sql.DataSource;\n+import org.flywaydb.core.api.configuration.ClassicConfiguration;", "originalCommit": "285ae00394fbba4f2de08f7af4cb1deed6882db3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d94bf4abc5451063215536f9a1ee84731c5fd64c", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/d94bf4abc5451063215536f9a1ee84731c5fd64c", "message": "Add v2 migrations flyway migrations for timescaledb\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-11T05:05:22Z", "type": "commit"}, {"oid": "871014584e95ee50aa7c8ab32ebc386199548378", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/871014584e95ee50aa7c8ab32ebc386199548378", "message": "Added test support to flip between v1 and v2 dbs\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-11T05:05:22Z", "type": "commit"}, {"oid": "5853ecfa5ec50607ab4f69293202bbb906b79cd0", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/5853ecfa5ec50607ab4f69293202bbb906b79cd0", "message": "Added config documentation and moved topicRunningHashV2AddedTimestamp config into FlywayConfiguration\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-11T05:05:22Z", "type": "commit"}, {"oid": "38714578d536f7d9682e7316d58d10396b3ed443", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/38714578d536f7d9682e7316d58d10396b3ed443", "message": "Utilize flyway migrations locations and fix grpc and rest tests to support timescaledb\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-11T05:07:33Z", "type": "commit"}, {"oid": "e4cf44e85f0069ae08d009ffa9ebb456830e09da", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/e4cf44e85f0069ae08d009ffa9ebb456830e09da", "message": "Add v2 directory of migrations and revert AbstractDownloaderTest change\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-11T05:07:33Z", "type": "commit"}, {"oid": "dadb7c064a4d1550acdb871c0fa8c600e39bf749", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/dadb7c064a4d1550acdb871c0fa8c600e39bf749", "message": "Updated config docs and removed FlywayProperties and updated locations\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-11T05:07:57Z", "type": "commit"}, {"oid": "9381142bea4c4b4c4ac648cd4b8c5225a466d116", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/9381142bea4c4b4c4ac648cd4b8c5225a466d116", "message": "Revert config additions for simplicity\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-11T05:07:57Z", "type": "commit"}, {"oid": "ac465e9ae2a6f8e0997287d67abd992b77cfa172", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/ac465e9ae2a6f8e0997287d67abd992b77cfa172", "message": "Reverted db usernam config removal and updated circle config w flyway props\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-11T05:08:24Z", "type": "commit"}, {"oid": "d96222d56705b2c6fadf151e8f2b05289858973d", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/d96222d56705b2c6fadf151e8f2b05289858973d", "message": "Update v1 script location for grpc test in circle ci\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-11T05:08:24Z", "type": "commit"}, {"oid": "aa40a59c73fa383e6d8f2b927641bb9b62cf0521", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/aa40a59c73fa383e6d8f2b927641bb9b62cf0521", "message": "Addressed minor feedback\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-11T05:08:24Z", "type": "commit"}, {"oid": "e215d362a3c4aa84c83e66a9b94148226eb84a4c", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/e215d362a3c4aa84c83e66a9b94148226eb84a4c", "message": "Address feedback on timesacle db init migrations regarding domains, placeholders and distributed hyper tables\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-11T05:08:24Z", "type": "commit"}, {"oid": "aaaf5cbe2c27845aa24f47688548c4b18f269f31", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/aaaf5cbe2c27845aa24f47688548c4b18f269f31", "message": "Fix up constraints and add compression policy\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-11T05:08:24Z", "type": "commit"}, {"oid": "d72c99f050e85111f7076ab67ce435bad2abe541", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/d72c99f050e85111f7076ab67ce435bad2abe541", "message": "Fix rest tests\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-11T05:08:24Z", "type": "commit"}, {"oid": "26607543f4125b0d18fceb2f17629b6d00154fc8", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/26607543f4125b0d18fceb2f17629b6d00154fc8", "message": "Added compression for most tables\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-11T05:08:24Z", "type": "commit"}, {"oid": "2225a2f8f96a34d364a594747d24f7d60b7ba439", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/2225a2f8f96a34d364a594747d24f7d60b7ba439", "message": "CLeaned up configuration\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-11T05:08:36Z", "type": "commit"}, {"oid": "8b04a1d43bde67f53eab5c3c70f7fdbab901fde1", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/8b04a1d43bde67f53eab5c3c70f7fdbab901fde1", "message": "Add filesystem path to imported flyway locations\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-11T05:08:36Z", "type": "commit"}, {"oid": "749e0f6b9fd0cc5b1d4fab8d84bb46e2e8076e18", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/749e0f6b9fd0cc5b1d4fab8d84bb46e2e8076e18", "message": "Restore circle ci flyway locations config\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-11T05:08:36Z", "type": "commit"}, {"oid": "adbbe1eac8ecf6b1b5ae54c5f22876db31a85a5f", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/adbbe1eac8ecf6b1b5ae54c5f22876db31a85a5f", "message": "Removed V2_0_4__Address_Book and utility function\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-11T05:13:52Z", "type": "commit"}, {"oid": "adbbe1eac8ecf6b1b5ae54c5f22876db31a85a5f", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/adbbe1eac8ecf6b1b5ae54c5f22876db31a85a5f", "message": "Removed V2_0_4__Address_Book and utility function\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-11T05:13:52Z", "type": "forcePushed"}, {"oid": "a2f03f549e23723a4d4e5cdbf3447c6081cb2be3", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/a2f03f549e23723a4d4e5cdbf3447c6081cb2be3", "message": "Try moving flyway locations to test bootstrap\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-11T22:01:40Z", "type": "commit"}, {"oid": "63ef736d83daf3cf9d7bac76dac4af65e4df2997", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/63ef736d83daf3cf9d7bac76dac4af65e4df2997", "message": "Try main bootstrap over test bootstrap\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-11T22:08:14Z", "type": "commit"}, {"oid": "2c42ef3f56f531fcfed3f2f7f4e397ba3d29bb8e", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/2c42ef3f56f531fcfed3f2f7f4e397ba3d29bb8e", "message": "Fix compression\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-11T22:43:39Z", "type": "commit"}, {"oid": "f92acbaaf880aaf9beb534e3b779c66ac36db057", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/f92acbaaf880aaf9beb534e3b779c66ac36db057", "message": "Fix rest specs not honoring unique index on tokens\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-12T00:58:52Z", "type": "commit"}, {"oid": "869d165da5916720174908625036b387c38ae4b9", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/869d165da5916720174908625036b387c38ae4b9", "message": "Addressed feedback on compression and missing hyper tables\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-12T02:28:15Z", "type": "commit"}, {"oid": "4575053a5120273de6ff9822759d5ee2a7d81ca6", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/4575053a5120273de6ff9822759d5ee2a7d81ca6", "message": "Added env config support to run rest integration tests w v2 schema\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-12T02:55:23Z", "type": "commit"}, {"oid": "e6fb3361e3268b793dc3aebb1334678a39969f34", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/e6fb3361e3268b793dc3aebb1334678a39969f34", "message": "Removed config repetition for flyway migrations\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-14T15:47:47Z", "type": "commit"}, {"oid": "ab353cf334448880612bdee48def0d509dec21bc", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/ab353cf334448880612bdee48def0d509dec21bc", "message": "Made address_book a hyper table and added compression\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-14T17:46:45Z", "type": "commit"}, {"oid": "187dfb473f2af5ffee8203d2c3168ba7c7134ff2", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/187dfb473f2af5ffee8203d2c3168ba7c7134ff2", "message": "Updated hyper table comments\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-14T18:26:23Z", "type": "commit"}]}