{"pr_number": 576, "pr_title": "Postgres Writer #2", "pr_createdAt": "2020-03-01T02:47:29Z", "pr_url": "https://github.com/hashgraph/hedera-mirror-node/pull/576", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjUwNjcyMA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/576#discussion_r386506720", "bodyText": "beyond the if statement it looks like insertFileCreate() and insertFileAppend() have some common code that could be shared.\nConsider consolidating it if it makes sense", "author": "Nana-EC", "createdAt": "2020-03-02T16:35:55Z", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/RecordFileLogger.java", "diffHunk": "@@ -748,39 +729,33 @@ private static EntityId storeConsensusSubmitMessage(TransactionBody body,\n     }\n \n     private static void insertConsensusTopicMessage(ConsensusSubmitMessageTransactionBody transactionBody,\n-                                                    TransactionRecord transactionRecord) throws SQLException {\n+                                                    TransactionRecord transactionRecord) {\n         var receipt = transactionRecord.getReceipt();\n-        var ts = transactionRecord.getConsensusTimestamp();\n         var topicId = transactionBody.getTopicID();\n-        sqlInsertTopicMessage.setLong(1, Utility.timeStampInNanos(ts));\n-        sqlInsertTopicMessage.setShort(2, (short) topicId.getRealmNum());\n-        sqlInsertTopicMessage.setInt(3, (int) topicId.getTopicNum());\n-        sqlInsertTopicMessage.setBytes(4, transactionBody.getMessage().toByteArray());\n-        sqlInsertTopicMessage.setBytes(5, receipt.getTopicRunningHash().toByteArray());\n-        sqlInsertTopicMessage.setLong(6, receipt.getTopicSequenceNumber());\n-        sqlInsertTopicMessage.addBatch();\n+        TopicMessage topicMessage = new TopicMessage(\n+                Utility.timeStampInNanos(transactionRecord.getConsensusTimestamp()),\n+                transactionBody.getMessage().toByteArray(), (int) topicId.getRealmNum(),\n+                receipt.getTopicRunningHash().toByteArray(), receipt.getTopicSequenceNumber(),\n+                (int) topicId.getTopicNum());\n+        postgresWriter.onTopicMessage(topicMessage);\n     }\n \n     private static void insertFileCreate(long consensusTimestamp, FileCreateTransactionBody transactionBody,", "originalCommit": "ddb953ab499776bcd1a0bd2c446e2060cbc49350", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU1NzUzNA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/576#discussion_r386557534", "bodyText": "sure thing. will do in PW3.", "author": "apeksharma", "createdAt": "2020-03-02T18:05:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjUwNjcyMA=="}], "type": "inlineReview"}, {"oid": "d72129deddc1f34dd1b92f79c42c74e82124614e", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/d72129deddc1f34dd1b92f79c42c74e82124614e", "message": "Postgres Writer #2\n\n- Move topic messages, contract result, file data, and live hashes from\n  RecordFileLogger to PostgresWritingRecordParsedItemHandler\n- Logic for Transaction and batching will be moved together in followup\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>", "committedDate": "2020-03-02T18:00:07Z", "type": "commit"}, {"oid": "d72129deddc1f34dd1b92f79c42c74e82124614e", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/d72129deddc1f34dd1b92f79c42c74e82124614e", "message": "Postgres Writer #2\n\n- Move topic messages, contract result, file data, and live hashes from\n  RecordFileLogger to PostgresWritingRecordParsedItemHandler\n- Logic for Transaction and batching will be moved together in followup\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>", "committedDate": "2020-03-02T18:00:07Z", "type": "forcePushed"}]}