{"pr_number": 1605, "pr_title": "Solve the problem of prefix and suffix matching #1109", "pr_createdAt": "2020-07-15T07:46:05Z", "pr_url": "https://github.com/alibaba/Sentinel/pull/1605", "timeline": [{"oid": "2a046ccbf915bcf6e3708e03b160a136596d85a4", "url": "https://github.com/alibaba/Sentinel/commit/2a046ccbf915bcf6e3708e03b160a136596d85a4", "message": "Solve the problem of prefix and suffix matching", "committedDate": "2020-07-15T07:43:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk2MDAxMg==", "url": "https://github.com/alibaba/Sentinel/pull/1605#discussion_r456960012", "bodyText": "Could there be a case like pathInfo is not trimmed or pathInfo is full of spaces? Isn't apache common StringUtils isBlank better?", "author": "lfzCarlosC", "createdAt": "2020-07-19T21:53:27Z", "path": "sentinel-adapter/sentinel-zuul-adapter/src/main/java/com/alibaba/csp/sentinel/adapter/gateway/zuul/api/route/RegexRoutePathMatcher.java", "diffHunk": "@@ -39,7 +40,13 @@ public RegexRoutePathMatcher(String pattern) {\n \n     @Override\n     public boolean test(RequestContext context) {\n-        String path = context.getRequest().getServletPath();\n+        //Solve the problem of prefix and suffix matching\n+        HttpServletRequest request = context.getRequest();\n+        String path = request.getServletPath();\n+        String pathInfo = request.getPathInfo();\n+        if (StringUtils.length(pathInfo) > 0) {\n+            path = path + pathInfo;", "originalCommit": "2a046ccbf915bcf6e3708e03b160a136596d85a4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk5NDIyMg==", "url": "https://github.com/alibaba/Sentinel/pull/1605#discussion_r456994222", "bodyText": "Ok, this piece is really my incomplete consideration, thank you for correcting, and it has been fixed", "author": "JiangZian", "createdAt": "2020-07-20T02:18:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk2MDAxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE3OTMyNw==", "url": "https://github.com/alibaba/Sentinel/pull/1605#discussion_r459179327", "bodyText": "Maybe using the embedded com.alibaba.csp.sentinel.util.StringUtil is enough.", "author": "sczyh30", "createdAt": "2020-07-23T02:05:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk2MDAxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg5MjA4NA==", "url": "https://github.com/alibaba/Sentinel/pull/1605#discussion_r459892084", "bodyText": "Ok, this piece is really my incomplete consideration, thank you for correcting, and it has been fixed", "author": "JiangZian", "createdAt": "2020-07-24T07:26:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk2MDAxMg=="}], "type": "inlineReview"}, {"oid": "89671f0f1fa1c8735fccdc1bbed580d93e2a7b36", "url": "https://github.com/alibaba/Sentinel/commit/89671f0f1fa1c8735fccdc1bbed580d93e2a7b36", "message": "Use Apache Common StringUtils isBlank to improve the robustness of judgment", "committedDate": "2020-07-20T02:10:16Z", "type": "commit"}, {"oid": "7b438232ff622db42c1b52de08a0c82bed5f5094", "url": "https://github.com/alibaba/Sentinel/commit/7b438232ff622db42c1b52de08a0c82bed5f5094", "message": "using the embedded com.alibaba.csp.sentinel.util.StringUtil\uff0cAdd test cases", "committedDate": "2020-07-24T07:27:41Z", "type": "commit"}, {"oid": "12d4240bd6619296b99750a8b01b9ecdcfbc24c2", "url": "https://github.com/alibaba/Sentinel/commit/12d4240bd6619296b99750a8b01b9ecdcfbc24c2", "message": "reformat code", "committedDate": "2020-07-24T09:29:30Z", "type": "commit"}, {"oid": "9594562398aca6adaa063fb7badf04c58ee54be2", "url": "https://github.com/alibaba/Sentinel/commit/9594562398aca6adaa063fb7badf04c58ee54be2", "message": "Change the mock method to MockHttpServletRequest, and change the URL fetching method", "committedDate": "2020-08-31T10:14:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDU5MDMzOQ==", "url": "https://github.com/alibaba/Sentinel/pull/1605#discussion_r480590339", "bodyText": "The  pattern /service[^\\s]+.jsp seems lack of considered.\n\\.jsp should be better than .jsp.\nAnd [^\\s] which indicates non-space subsequence i don't quite understand here because no space is allowed in URI as we know.\nTalk to unit test it's better to have both positive and negative cases. So if you familiar with this could you improve it? Otherwise we can improve it later.", "author": "jasonjoo2010", "createdAt": "2020-09-01T02:03:40Z", "path": "sentinel-adapter/sentinel-zuul-adapter/src/test/java/com/alibaba/csp/sentinel/adapter/gateway/zuul/route/SentinelZuulRouteTest.java", "diffHunk": "@@ -0,0 +1,52 @@\n+package com.alibaba.csp.sentinel.adapter.gateway.zuul.route;\n+\n+import com.alibaba.csp.sentinel.adapter.gateway.zuul.api.route.PrefixRoutePathMatcher;\n+import com.alibaba.csp.sentinel.adapter.gateway.zuul.api.route.RegexRoutePathMatcher;\n+import com.netflix.zuul.context.RequestContext;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.springframework.mock.web.MockHttpServletRequest;\n+\n+import static com.alibaba.csp.sentinel.adapter.gateway.zuul.constants.ZuulConstant.SERVICE_ID_KEY;\n+\n+/**\n+ * @author: jiangzian\n+ **/\n+public class SentinelZuulRouteTest {\n+\n+    private final String SERVICE_ID = \"servicea\";\n+\n+    private final String SERVER_NAME = \"www.example.com\";\n+    private final String REQUEST_URI = \"/servicea/test.jsp\";\n+    private final String QUERY_STRING = \"param1=value1&param\";\n+\n+    private RequestContext requestContext = new RequestContext();\n+\n+\n+    @Before\n+    public void setUp() {\n+        MockHttpServletRequest request = new MockHttpServletRequest();\n+        request.setServerName(SERVER_NAME);\n+        request.setRequestURI(REQUEST_URI);\n+        request.setQueryString(QUERY_STRING);\n+        requestContext.set(SERVICE_ID_KEY, SERVICE_ID);\n+        requestContext.setRequest(request);\n+        RequestContext.testSetCurrentContext(requestContext);\n+    }\n+\n+    @Test\n+    public void testPrefixRoutePathMatche() {\n+        PrefixRoutePathMatcher prefixRoutePathMatcher = new PrefixRoutePathMatcher(\"/servicea/????.jsp\");\n+        Assert.assertTrue(prefixRoutePathMatcher.test(requestContext));\n+    }\n+\n+    @Test\n+    public void testRegexRoutePathMatcher() {\n+        RegexRoutePathMatcher regexRoutePathMatcher = new RegexRoutePathMatcher(\"/servicea[^\\\\s]+.jsp\");", "originalCommit": "9594562398aca6adaa063fb7badf04c58ee54be2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDcxMzY4MA==", "url": "https://github.com/alibaba/Sentinel/pull/1605#discussion_r480713680", "bodyText": "Thank you very much for your Suggestions, but these are my lack of consideration. Now I have resubmitted them", "author": "JiangZian", "createdAt": "2020-09-01T03:38:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDU5MDMzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc1NzY4MA==", "url": "https://github.com/alibaba/Sentinel/pull/1605#discussion_r486757680", "bodyText": "@jasonjoo2010 Do you have time to check my logic", "author": "JiangZian", "createdAt": "2020-09-11T03:51:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDU5MDMzOQ=="}], "type": "inlineReview"}, {"oid": "e96a35f599ac37d9e2faeb2d7f2c5e0c66b87ceb", "url": "https://github.com/alibaba/Sentinel/commit/e96a35f599ac37d9e2faeb2d7f2c5e0c66b87ceb", "message": "Modify the regex matching rule to add an unexpected value test", "committedDate": "2020-09-01T03:25:37Z", "type": "commit"}]}