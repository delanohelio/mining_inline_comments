{"pr_number": 1680, "pr_title": "Fix bugs and improve default fallback logic of Apache Dubbo adapter", "pr_createdAt": "2020-08-19T14:15:39Z", "pr_url": "https://github.com/alibaba/Sentinel/pull/1680", "timeline": [{"oid": "b2dd10f288eec79fe6f6edb91045d024a268e94a", "url": "https://github.com/alibaba/Sentinel/commit/b2dd10f288eec79fe6f6edb91045d024a268e94a", "message": "Add RuntimeException converting method in BlockException and polish logic for validation\n\nSigned-off-by: Eric Zhao <sczyh16@gmail.com>", "committedDate": "2020-08-19T13:56:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzIwNDAzMQ==", "url": "https://github.com/alibaba/Sentinel/pull/1680#discussion_r473204031", "bodyText": "Maybe the priority list is throwable -> r.exception indicating throwable is more fatal. How do you think about it?", "author": "jasonjoo2010", "createdAt": "2020-08-19T17:28:45Z", "path": "sentinel-adapter/sentinel-apache-dubbo-adapter/src/main/java/com/alibaba/csp/sentinel/adapter/dubbo/SentinelDubboConsumerFilter.java", "diffHunk": "@@ -98,24 +101,26 @@ private Result syncInvoke(Invoker<?> invoker, Invocation invocation) {\n         }\n     }\n \n-\n     private Result asyncInvoke(Invoker<?> invoker, Invocation invocation) {\n         LinkedList<EntryHolder> queue = new LinkedList<>();\n         String prefix = DubboAdapterGlobalConfig.getDubboConsumerResNamePrefixKey();\n         String interfaceResourceName = getInterfaceName(invoker, prefix);\n         String methodResourceName = getMethodName(invoker, invocation, prefix);\n         try {\n-            queue.push(new EntryHolder(SphU.asyncEntry(interfaceResourceName, ResourceTypeConstants.COMMON_RPC, EntryType.OUT), null));\n-            queue.push(new EntryHolder(SphU.asyncEntry(methodResourceName, ResourceTypeConstants.COMMON_RPC, EntryType.OUT, 1, invocation.getArguments()), invocation.getArguments()));\n+            queue.push(new EntryHolder(\n+                SphU.asyncEntry(interfaceResourceName, ResourceTypeConstants.COMMON_RPC, EntryType.OUT), null));\n+            queue.push(new EntryHolder(\n+                SphU.asyncEntry(methodResourceName, ResourceTypeConstants.COMMON_RPC,\n+                    EntryType.OUT, 1, invocation.getArguments()), invocation.getArguments()));\n             Result result = invoker.invoke(invocation);\n-            result.whenCompleteWithContext(new BiConsumer<Result, Throwable>() {\n-                @Override\n-                public void accept(Result result, Throwable throwable) {\n-                    while (!queue.isEmpty()) {\n-                        EntryHolder holder = queue.pop();\n-                        Tracer.traceEntry(result.getException(), holder.entry);\n-                        exitEntry(holder);\n-                    }\n+            result.whenCompleteWithContext((r, throwable) -> {\n+                while (!queue.isEmpty()) {\n+                    EntryHolder holder = queue.pop();\n+                    Throwable error = Optional.ofNullable(r)\n+                        .map(Result::getException)\n+                        .orElse(throwable);", "originalCommit": "20229fc2c9a47c38a0ec07c6609a72b17cdedc0b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzUyMzc0Nw==", "url": "https://github.com/alibaba/Sentinel/pull/1680#discussion_r473523747", "bodyText": "Updated, please check.", "author": "sczyh30", "createdAt": "2020-08-20T01:48:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzIwNDAzMQ=="}], "type": "inlineReview"}, {"oid": "e0280b9b3dbe893dbd30f55de1e4cc5e6fabf83f", "url": "https://github.com/alibaba/Sentinel/commit/e0280b9b3dbe893dbd30f55de1e4cc5e6fabf83f", "message": "Fix NPE bug and improve default fallback in Dubbo 2.7.x adapter\n\n- Fix NPE bug in consumer filter (when non-biz error occurred)\n- Improve default fallback in Dubbo 2.7.x adapter: convert the BlockException to a simple RuntimeException (with necessary message)\n- Polish code and comments\n\nSigned-off-by: Eric Zhao <sczyh16@gmail.com>", "committedDate": "2020-08-20T01:48:10Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzUzMTAwOQ==", "url": "https://github.com/alibaba/Sentinel/pull/1680#discussion_r473531009", "bodyText": "It's better to set error outside the loop because there are always more than one elements in stack.", "author": "jasonjoo2010", "createdAt": "2020-08-20T01:59:27Z", "path": "sentinel-adapter/sentinel-apache-dubbo-adapter/src/main/java/com/alibaba/csp/sentinel/adapter/dubbo/SentinelDubboConsumerFilter.java", "diffHunk": "@@ -98,24 +101,27 @@ private Result syncInvoke(Invoker<?> invoker, Invocation invocation) {\n         }\n     }\n \n-\n     private Result asyncInvoke(Invoker<?> invoker, Invocation invocation) {\n         LinkedList<EntryHolder> queue = new LinkedList<>();\n         String prefix = DubboAdapterGlobalConfig.getDubboConsumerResNamePrefixKey();\n         String interfaceResourceName = getInterfaceName(invoker, prefix);\n         String methodResourceName = getMethodName(invoker, invocation, prefix);\n         try {\n-            queue.push(new EntryHolder(SphU.asyncEntry(interfaceResourceName, ResourceTypeConstants.COMMON_RPC, EntryType.OUT), null));\n-            queue.push(new EntryHolder(SphU.asyncEntry(methodResourceName, ResourceTypeConstants.COMMON_RPC, EntryType.OUT, 1, invocation.getArguments()), invocation.getArguments()));\n+            queue.push(new EntryHolder(\n+                SphU.asyncEntry(interfaceResourceName, ResourceTypeConstants.COMMON_RPC, EntryType.OUT), null));\n+            queue.push(new EntryHolder(\n+                SphU.asyncEntry(methodResourceName, ResourceTypeConstants.COMMON_RPC,\n+                    EntryType.OUT, 1, invocation.getArguments()), invocation.getArguments()));\n             Result result = invoker.invoke(invocation);\n-            result.whenCompleteWithContext(new BiConsumer<Result, Throwable>() {\n-                @Override\n-                public void accept(Result result, Throwable throwable) {\n-                    while (!queue.isEmpty()) {\n-                        EntryHolder holder = queue.pop();\n-                        Tracer.traceEntry(result.getException(), holder.entry);\n-                        exitEntry(holder);\n+            result.whenCompleteWithContext((r, throwable) -> {\n+                while (!queue.isEmpty()) {\n+                    EntryHolder holder = queue.pop();\n+                    Throwable error = throwable;", "originalCommit": "e0280b9b3dbe893dbd30f55de1e4cc5e6fabf83f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzUzMzQxNQ==", "url": "https://github.com/alibaba/Sentinel/pull/1680#discussion_r473533415", "bodyText": "Updated", "author": "sczyh30", "createdAt": "2020-08-20T02:03:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzUzMTAwOQ=="}], "type": "inlineReview"}, {"oid": "02e23d19f681a52571a630419da82cc38a4e6944", "url": "https://github.com/alibaba/Sentinel/commit/02e23d19f681a52571a630419da82cc38a4e6944", "message": "Fix NPE bug and improve default fallback in Dubbo 2.7.x adapter\n\n- Fix NPE bug in consumer filter (when non-biz error occurred)\n- Improve default fallback in Dubbo 2.7.x adapter: convert the BlockException to a simple RuntimeException (with necessary message)\n- Polish code and comments\n\nSigned-off-by: Eric Zhao <sczyh16@gmail.com>", "committedDate": "2020-08-20T02:02:01Z", "type": "commit"}, {"oid": "02e23d19f681a52571a630419da82cc38a4e6944", "url": "https://github.com/alibaba/Sentinel/commit/02e23d19f681a52571a630419da82cc38a4e6944", "message": "Fix NPE bug and improve default fallback in Dubbo 2.7.x adapter\n\n- Fix NPE bug in consumer filter (when non-biz error occurred)\n- Improve default fallback in Dubbo 2.7.x adapter: convert the BlockException to a simple RuntimeException (with necessary message)\n- Polish code and comments\n\nSigned-off-by: Eric Zhao <sczyh16@gmail.com>", "committedDate": "2020-08-20T02:02:01Z", "type": "forcePushed"}]}