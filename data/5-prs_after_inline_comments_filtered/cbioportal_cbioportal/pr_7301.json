{"pr_number": 7301, "pr_title": "Fix error while fetching multiple molecular profile samples", "pr_createdAt": "2020-03-16T16:58:16Z", "pr_url": "https://github.com/cBioPortal/cbioportal/pull/7301", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIxMzcwMw==", "url": "https://github.com/cBioPortal/cbioportal/pull/7301#discussion_r393213703", "bodyText": "here is where we were relying on order yes?", "author": "alisman", "createdAt": "2020-03-16T18:02:11Z", "path": "service/src/main/java/org/cbioportal/service/impl/GenericAssayServiceImpl.java", "diffHunk": "@@ -90,20 +91,26 @@\n \n         List<String> distinctMolecularProfileIds = molecularProfileIds.stream().distinct().sorted().collect(Collectors.toList());\n \n-        List<String> commaSeparatedSampleIdsOfMolecularProfiles = molecularDataRepository\n-            .getCommaSeparatedSampleIdsOfMolecularProfiles(distinctMolecularProfileIds);\n-    \n+        List<MolecularProfileSamples> commaSeparatedSampleIdsOfMolecularProfiles = molecularDataRepository\n+                .getCommaSeparatedSampleIdsOfMolecularProfiles(distinctMolecularProfileIds);\n+\n+        Map<String, MolecularProfileSamples> commaSeparatedSampleIdsOfMolecularProfilesMap = commaSeparatedSampleIdsOfMolecularProfiles\n+                .stream()\n+                .collect(Collectors.toMap(MolecularProfileSamples::getMolecularProfileId, Function.identity()));\n+\n         Map<String, Map<Integer, Integer>> internalSampleIdsMap = new HashMap<>();\n         List<Integer> allInternalSampleIds = new ArrayList<>();\n-        \n+\n         for (int i = 0; i < distinctMolecularProfileIds.size(); i++) {\n-            List<Integer> internalSampleIds = Arrays.stream(commaSeparatedSampleIdsOfMolecularProfiles.get(i).split(\",\"))\n-                .mapToInt(Integer::parseInt).boxed().collect(Collectors.toList());\n+            String molecularProfileId = distinctMolecularProfileIds.get(i);\n+            List<Integer> internalSampleIds = Arrays\n+                    .stream(commaSeparatedSampleIdsOfMolecularProfilesMap.get(molecularProfileId).getSplitSampleIds())\n+                    .mapToInt(Integer::parseInt).boxed().collect(Collectors.toList());\n             HashMap<Integer, Integer> molecularProfileSampleMap = new HashMap<Integer, Integer>();\n             for (int lc = 0; lc < internalSampleIds.size(); lc++) {\n                 molecularProfileSampleMap.put(internalSampleIds.get(lc), lc);\n             }\n-            internalSampleIdsMap.put(distinctMolecularProfileIds.get(i), molecularProfileSampleMap);\n+            internalSampleIdsMap.put(molecularProfileId, molecularProfileSampleMap);", "originalCommit": "720f7386ff9673b2acdf7907b019f634986c28eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI0OTYzNA==", "url": "https://github.com/cBioPortal/cbioportal/pull/7301#discussion_r393249634", "bodyText": "no. its at line 107", "author": "kalletlak", "createdAt": "2020-03-16T19:01:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIxMzcwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM1ODIzNA==", "url": "https://github.com/cBioPortal/cbioportal/pull/7301#discussion_r393358234", "bodyText": "Maybe check for commaSeparatedSampleIds == null here to.", "author": "n1zea144", "createdAt": "2020-03-16T23:04:09Z", "path": "model/src/main/java/org/cbioportal/model/MolecularProfileSamples.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package org.cbioportal.model;\n+\n+import java.io.Serializable;\n+\n+public class MolecularProfileSamples implements Serializable {\n+\n+    private String molecularProfileId;\n+    private String commaSeparatedSampleIds;\n+    private String[] splitSampleIds = null;\n+\n+    public String getMolecularProfileId() {\n+        return molecularProfileId;\n+    }\n+\n+    public void setMolecularProfileId(String molecularProfileId) {\n+        this.molecularProfileId = molecularProfileId;\n+    }\n+\n+    public String getCommaSeparatedSampleIds() {\n+        return commaSeparatedSampleIds;\n+    }\n+\n+    /**\n+     * Set the values for all samples.\n+     * \n+     * @param values: string with list of values, comma (,) separated\n+     */\n+    public void setCommaSeparatedSampleIds(String commaSeparatedSampleIds) {\n+        this.commaSeparatedSampleIds = commaSeparatedSampleIds;\n+    }\n+\n+    /**\n+     * Returns the values attribute split on (,).\n+     * \n+     * Remembers last .split to avoid repeating this costly operation.\n+     * \n+     * @return list of values for all samples\n+     */\n+    public String[] getSplitSampleIds() {\n+        if (splitSampleIds == null) {", "originalCommit": "720f7386ff9673b2acdf7907b019f634986c28eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM3MzcxMA==", "url": "https://github.com/cBioPortal/cbioportal/pull/7301#discussion_r393373710", "bodyText": "commaSeparatedSampleIds won't be null as this is a record from database query.", "author": "kalletlak", "createdAt": "2020-03-16T23:54:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM1ODIzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM2NjE3MA==", "url": "https://github.com/cBioPortal/cbioportal/pull/7301#discussion_r393366170", "bodyText": "I've noticed many(maybe all?) places in the code where you convert List<MolecularProfileSamples> to Map<String, MolecularProfileSamples>.  Maybe the signature should be updated to support the return of a Map?", "author": "n1zea144", "createdAt": "2020-03-16T23:27:27Z", "path": "persistence/persistence-api/src/main/java/org/cbioportal/persistence/MolecularDataRepository.java", "diffHunk": "@@ -6,14 +6,15 @@\n import org.cbioportal.model.GenericAssayMolecularAlteration;\n import org.cbioportal.model.GenesetMolecularAlteration;\n import org.springframework.cache.annotation.Cacheable;\n+import org.cbioportal.model.MolecularProfileSamples;\n \n public interface MolecularDataRepository {\n \n     @Cacheable(cacheNames = \"GeneralRepositoryCache\", condition = \"@cacheEnabledConfig.getEnabled()\")\n-    String getCommaSeparatedSampleIdsOfMolecularProfile(String molecularProfileId);\n+    MolecularProfileSamples getCommaSeparatedSampleIdsOfMolecularProfile(String molecularProfileId);\n \n     @Cacheable(cacheNames = \"GeneralRepositoryCache\", condition = \"@cacheEnabledConfig.getEnabled()\")\n-    List<String> getCommaSeparatedSampleIdsOfMolecularProfiles(List<String> molecularProfileIds);\n+    List<MolecularProfileSamples> getCommaSeparatedSampleIdsOfMolecularProfiles(List<String> molecularProfileIds);", "originalCommit": "720f7386ff9673b2acdf7907b019f634986c28eb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "114c4708b91c27038498f027439c473270a7e08f", "url": "https://github.com/cBioPortal/cbioportal/commit/114c4708b91c27038498f027439c473270a7e08f", "message": "Fix error while fetching multiple molecular profile samples", "committedDate": "2020-03-17T00:03:02Z", "type": "commit"}, {"oid": "114c4708b91c27038498f027439c473270a7e08f", "url": "https://github.com/cBioPortal/cbioportal/commit/114c4708b91c27038498f027439c473270a7e08f", "message": "Fix error while fetching multiple molecular profile samples", "committedDate": "2020-03-17T00:03:02Z", "type": "forcePushed"}]}