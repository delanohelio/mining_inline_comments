{"pr_number": 3017, "pr_title": "router-config file is ignored by server, it uses router-config found in loaded graph", "pr_createdAt": "2020-03-24T18:44:13Z", "pr_url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3017", "timeline": [{"oid": "bdbe64e9a8358024dcc07c4c4c0669fcc0f887ff", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/bdbe64e9a8358024dcc07c4c4c0669fcc0f887ff", "message": "Bugfix - The router-config in the serialized graph should not override the config loaded from the filesystem. This commit fixes this.\n  - The `rout-config.json` override any config loaded from the serialized graph.\n  - The routing-config and build-config was part of the graph to be able to serialize it, this made it tempting\n    to also get it from the graph instead of the application context/configuration. This is fixed by removing the\n    config from the graph and serialize it as part of the temporary `SerializedGraphObject` instead. All config\n    users are now updated to use the config from the application context instead.\n  - All serialization logic is removed from the graph. This is now the responsibility of the `GraphRepository`\n    and the `SerializedGraphObject`.\n  - The `EmbedConfig` graph-builder is deleted, and replaced by a more direct(simpler) way to save the\n    build-/routing- config in the serialized graph.\n  - The saving of the Norwegian(Entur) graph takes 30 seconds, so I have added a progress tracker for the graph\n    saving process.", "committedDate": "2020-03-24T18:37:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEwMDUxMg==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3017#discussion_r399100512", "bodyText": "We should find a more descriptive name and add Javadoc", "author": "abyrd", "createdAt": "2020-03-27T08:24:16Z", "path": "src/main/java/org/opentripplanner/routing/graph/GraphRepository.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package org.opentripplanner.routing.graph;\n+\n+import org.opentripplanner.datastore.DataSource;\n+import org.opentripplanner.standalone.config.BuildConfig;\n+import org.opentripplanner.standalone.config.RouterConfig;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class GraphRepository {", "originalCommit": "bdbe64e9a8358024dcc07c4c4c0669fcc0f887ff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTE0MTIyMg==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3017#discussion_r399141222", "bodyText": "We discussed this - repository does seem to be the right abstraction but some readers might not make the connection. So Javadoc will give a very short statement of what it does, and maybe a link to an explanation. As a repository it should also contain the logic for loading (not just saving) Graphs from DataSources.", "author": "abyrd", "createdAt": "2020-03-27T09:39:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEwMDUxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIzNDMxMQ==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3017#discussion_r399234311", "bodyText": "About the GraphRepository and the SerializedGraphObject: I think the best solution is to merge the Repository into the SerializedGraph. I think that is better, since we do not have the concept of a Repository elsewhere in OTP. We have DataSources as a \u201cthing\u201d, and introducing Repositories will slightly overlap.", "author": "t2gran", "createdAt": "2020-03-27T12:38:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEwMDUxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEwMDg5MQ==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3017#discussion_r399100891", "bodyText": "We should discuss whether we want to allow embedding configuration at all.", "author": "abyrd", "createdAt": "2020-03-27T08:25:03Z", "path": "src/main/java/org/opentripplanner/routing/graph/SerializedGraphObject.java", "diffHunk": "@@ -50,9 +56,60 @@\n \n     private final Collection<Edge> edges;\n \n-    public SerializedGraphObject(Graph graph) {\n+    /** The config JSON used to build this graph. Allows checking whether the configuration has changed. */\n+    public final BuildConfig buildConfig;\n+\n+    /** Embed a router configuration inside the graph, for starting up with a single file. */\n+    public final RouterConfig routerConfig;", "originalCommit": "bdbe64e9a8358024dcc07c4c4c0669fcc0f887ff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEyODYyOQ==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3017#discussion_r399128629", "bodyText": "We discussed and decided embedding configuration is useful, but realized some router-config entries are probably used during graph build. This is probably unavoidable, so the distinction between the two configuration files is lost. We should probably merge them.", "author": "abyrd", "createdAt": "2020-03-27T09:18:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEwMDg5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI2MjUzOQ==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3017#discussion_r399262539", "bodyText": "I added a new issue for this: #3020", "author": "t2gran", "createdAt": "2020-03-27T13:27:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEwMDg5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEwMTI2Mw==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3017#discussion_r399101263", "bodyText": "Class name is not needed when calling method on same class.", "author": "abyrd", "createdAt": "2020-03-27T08:25:48Z", "path": "src/main/java/org/opentripplanner/routing/graph/SerializedGraphObject.java", "diffHunk": "@@ -50,9 +56,60 @@\n \n     private final Collection<Edge> edges;\n \n-    public SerializedGraphObject(Graph graph) {\n+    /** The config JSON used to build this graph. Allows checking whether the configuration has changed. */\n+    public final BuildConfig buildConfig;\n+\n+    /** Embed a router configuration inside the graph, for starting up with a single file. */\n+    public final RouterConfig routerConfig;\n+\n+    public SerializedGraphObject(Graph graph, BuildConfig buildConfig, RouterConfig routerConfig) {\n         this.graph = graph;\n         this.edges = graph.getEdges();\n+        this.buildConfig = buildConfig;\n+        this.routerConfig = routerConfig;\n+    }\n+\n+    public static void save(Graph graph, BuildConfig buildConfig, RouterConfig routerConfig, DataSource graphSource) {\n+        new SerializedGraphObject(graph,buildConfig, routerConfig).save(graphSource);\n+    }\n+\n+    public static SerializedGraphObject load(DataSource source) {\n+        return load(source.asInputStream(), source.path());\n+    }\n+\n+    public static Graph load(File file) {\n+        try {\n+            SerializedGraphObject serObj = SerializedGraphObject.load(\n+                    new FileInputStream(file),\n+                    file.getAbsolutePath()\n+            );\n+            return serObj == null ? null : serObj.graph;\n+        } catch (FileNotFoundException e) {\n+            LOG.error(\"Graph file not found: \" + file, e);\n+            throw new OtpAppException(e.getMessage());\n+        }\n+    }\n+\n+    public static SerializedGraphObject load(InputStream inputStream, String sourceDescription) {\n+        // TODO store version information, halt load if versions mismatch\n+        try(inputStream) {\n+            LOG.info(\"Reading graph from '{}'\", sourceDescription);\n+            Input input = new Input(inputStream);\n+            Kryo kryo = SerializedGraphObject.makeKryo();", "originalCommit": "bdbe64e9a8358024dcc07c4c4c0669fcc0f887ff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "12285b53e4281e518ef5d975d23b2dfa9c262ca5", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/12285b53e4281e518ef5d975d23b2dfa9c262ca5", "message": "Code review - The GraphRepository is merged into the SerializedGraphObject, and some minor refactorings and code cleanup i done.", "committedDate": "2020-03-27T12:46:10Z", "type": "commit"}, {"oid": "66d6a83db57588276eaf0eaa06dd0cd0a0a7a1d4", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/66d6a83db57588276eaf0eaa06dd0cd0a0a7a1d4", "message": "Merge remote-tracking branch 'otp/dev-2.x' into otp2_bugfix_routing_config_overloaded", "committedDate": "2020-03-27T13:35:36Z", "type": "commit"}, {"oid": "66d6a83db57588276eaf0eaa06dd0cd0a0a7a1d4", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/66d6a83db57588276eaf0eaa06dd0cd0a0a7a1d4", "message": "Merge remote-tracking branch 'otp/dev-2.x' into otp2_bugfix_routing_config_overloaded", "committedDate": "2020-03-27T13:35:36Z", "type": "forcePushed"}]}