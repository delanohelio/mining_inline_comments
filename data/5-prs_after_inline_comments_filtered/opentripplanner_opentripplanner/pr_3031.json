{"pr_number": 3031, "pr_title": "Otp2 api types", "pr_createdAt": "2020-04-09T08:41:18Z", "pr_url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3031", "timeline": [{"oid": "2188d0ad8d1d170bbc036ff260d89fb778354aba", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/2188d0ad8d1d170bbc036ff260d89fb778354aba", "message": "Clean Code - The API POJOs should follow the same pattern with writable public fields.", "committedDate": "2020-04-06T13:06:08Z", "type": "commit"}, {"oid": "ba3c369453efcf377900a4b085d22772cf6fd038", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/ba3c369453efcf377900a4b085d22772cf6fd038", "message": "Clean Code - Rename 'AgencyAndIdType' to 'ApiFeedScopedId'.", "committedDate": "2020-04-06T13:08:05Z", "type": "commit"}, {"oid": "53539fa7720007b052715b14398e9e3cf8d37f3b", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/53539fa7720007b052715b14398e9e3cf8d37f3b", "message": "Clean Code - Delete unused adapters.", "committedDate": "2020-04-06T13:53:29Z", "type": "commit"}, {"oid": "cf95b4209cd0cc2e382f03607769f89a1f2d5b5f", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/cf95b4209cd0cc2e382f03607769f89a1f2d5b5f", "message": "Clean Code - Move ApiFeedScopedId from adapters to model.", "committedDate": "2020-04-06T13:54:37Z", "type": "commit"}, {"oid": "0345390a5c0d79ce39f6b6eb414160e432d410ad", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/0345390a5c0d79ce39f6b6eb414160e432d410ad", "message": "Clean Code - Convert FeedScopedIdAdapter to FeedScopedIdMapper.", "committedDate": "2020-04-06T14:50:22Z", "type": "commit"}, {"oid": "358859c83a5bd11a1422445807bd66804982e618", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/358859c83a5bd11a1422445807bd66804982e618", "message": "Clean Code\n - Move JSON (de)serializers out of 'api.model' into 'api.json'.\n - Simplify all API ids from ApiFeedScopedId to String, this will enable us to have different strategies for ids later.\n - Do not use the GtfsLibrary to map ids, instead use the FeedScopedIdMapper. This enable us to use different mapping for reading input files, and having anothe strategy for our APIS.\n - Move api Transfer from innerclass of ApiIndex to model.", "committedDate": "2020-04-06T16:06:52Z", "type": "commit"}, {"oid": "5e00532a06835777fd5d9c6730b23ddacffa5434", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/5e00532a06835777fd5d9c6730b23ddacffa5434", "message": "Clean Code - Move 'GeometryAdapter' from api.model to api.mapping.", "committedDate": "2020-04-08T08:16:45Z", "type": "commit"}, {"oid": "2e04682ef817af2ea4bd140d938f673678e0ed70", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/2e04682ef817af2ea4bd140d938f673678e0ed70", "message": "Clean Code - Move StopTimesInPattern and TripTimeShort from api.model to model.", "committedDate": "2020-04-08T08:21:13Z", "type": "commit"}, {"oid": "505ff3c533bfc14bdfa2215f681e088839b9e725", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/505ff3c533bfc14bdfa2215f681e088839b9e725", "message": "Clean Code - Rename all api.model classes to follow the convention with \"Api\" as a prefix.\n - ApiPatternShort, ApiRealTimeState, ApiRouterList, ApiStopTimesInPattern and ApiTripTimeShort.", "committedDate": "2020-04-08T08:28:45Z", "type": "commit"}, {"oid": "9d3957af82ea95648d8185983326967aef162bd3", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/9d3957af82ea95648d8185983326967aef162bd3", "message": "Clean Code - Replace internal Stop with new ApiStop in IndexApi.", "committedDate": "2020-04-08T08:38:32Z", "type": "commit"}, {"oid": "a09e883412955d96d6924b416ca9e912c392b159", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/a09e883412955d96d6924b416ca9e912c392b159", "message": "Clean Code - Rename all index.model classes to follow the convention with \"Api\" as a prefix.\n - ApiRouteShort, ApiPatternDetail, ApiStopShort and ApiTripShort.", "committedDate": "2020-04-08T12:10:43Z", "type": "commit"}, {"oid": "fbd0f44275bb1f4763a6c9b6f9b096c17dd6472c", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/fbd0f44275bb1f4763a6c9b6f9b096c17dd6472c", "message": "Clean Code - Replace use of internal model Agency with ApiAgency in IndexAPI.", "committedDate": "2020-04-08T12:11:42Z", "type": "commit"}, {"oid": "f7497d41b6252a90d8c305417ab0568a8fe4a4f3", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/f7497d41b6252a90d8c305417ab0568a8fe4a4f3", "message": "Clean Code - Replace use of internal model Route with ApiRoute in IndexAPI.", "committedDate": "2020-04-08T12:11:42Z", "type": "commit"}, {"oid": "0acadddfc075941f29758df3fabee351d4ee9968", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/0acadddfc075941f29758df3fabee351d4ee9968", "message": "Clean Code\n   - Return BAD_REQUEST on IndexAPI for invalid FeedScopedId.\n   - Add graceful exception handling of WebApplicationExceptions.", "committedDate": "2020-04-08T12:11:43Z", "type": "commit"}, {"oid": "a7864b8b7e7f278bc4af04332c32fb175c084064", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/a7864b8b7e7f278bc4af04332c32fb175c084064", "message": "Clean Code\n   - Update OTP2 MigrationGuide on error handling for REST API and Index API.\n   - Add graceful exception handling all Resources, except IndexAPI(cleanup in separate commit later).", "committedDate": "2020-04-08T12:11:52Z", "type": "commit"}, {"oid": "278bf712f4238b6832205750f1d83b6c5e9aac02", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/278bf712f4238b6832205750f1d83b6c5e9aac02", "message": "Clean Code - Various Index API cleanup.\n - Replace internal FeedInfo with new ApiFeedInfo in IndexApi.\n - Add ServiceDateMapper mapper, uses ISO-8601 for service dates.\n - Extract mapping code from API types into Mapper classes for StopTimesInPattern, TripPattern, and TripTime.\n - Fix ApiPatternDetail witch was extending domain class PatternShort, not the ApiPatternShort.\n - Fix internal StopTimesInPattern ref to TripPattern (wa using the API type).", "committedDate": "2020-04-08T13:23:39Z", "type": "commit"}, {"oid": "326f6dbfc78eb2cd3cda8e46bf56461710cd6b57", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/326f6dbfc78eb2cd3cda8e46bf56461710cd6b57", "message": "Clean Code - Allow ServiceDate parse to accept ISO 8601 and improve test coverage.", "committedDate": "2020-04-08T17:11:09Z", "type": "commit"}, {"oid": "dd845dc070e2d2908ef7badd1fda6fda7067f5ab", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/dd845dc070e2d2908ef7badd1fda6fda7067f5ab", "message": "Clean Code - Update OTP2 Migration Guide for changes to Route entity in Index API.", "committedDate": "2020-04-08T17:16:45Z", "type": "commit"}, {"oid": "1c0267effdb62251a58b4988f17202949f3d916f", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/1c0267effdb62251a58b4988f17202949f3d916f", "message": "Clean Code - Cleanup TripPattern in API\n- Use TripPattern 'id' not 'code' as index in 'Graph.tripPatternForId'.\n- Update OTP2 Migration Guide for changes to Route entity in Index API.\n- Delete duplicate TripPatternShort.\n- Remove unused reindex in GTFS import, no longer needed.\n- Make FeedScopedId immutable.\n- Remove code from TripPattern.", "committedDate": "2020-04-09T00:02:43Z", "type": "commit"}, {"oid": "e63d602e6782f6aa1a6bd7870de6dccd6a1bbe1b", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/e63d602e6782f6aa1a6bd7870de6dccd6a1bbe1b", "message": "Clean Code - Make 'ApiRouteShort.id' in a String and not FeedScopedId(internal model type).", "committedDate": "2020-04-09T00:04:47Z", "type": "commit"}, {"oid": "0f5c8fa83801287c59c24b8d043a9a9fc7fc6b34", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/0f5c8fa83801287c59c24b8d043a9a9fc7fc6b34", "message": "Clean Code - Cleanup Trip in API\n- A new ApiTrip is added and replace the old exposure of the internal Trip type.\n- Update OTP2 Migration Guide for changes to the Trip entity in Index API.\n- Delete unused TripType.", "committedDate": "2020-04-09T00:23:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjA4MzE4Ng==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3031#discussion_r406083186", "bodyText": "Use the SEPARATOR constant here.", "author": "abyrd", "createdAt": "2020-04-09T09:41:11Z", "path": "src/main/java/org/opentripplanner/api/mapping/FeedScopedIdMapper.java", "diffHunk": "@@ -1,22 +1,22 @@\n package org.opentripplanner.api.mapping;\n \n-import org.opentripplanner.api.model.ApiFeedScopedId;\n import org.opentripplanner.model.FeedScopedId;\n \n public class FeedScopedIdMapper {\n \n-    public static FeedScopedId mapToDomain(ApiFeedScopedId arg) {\n-        if (arg == null) {\n-            return null;\n-        }\n-        return new FeedScopedId(arg.agency, arg.id);\n+\n+    private static final String SEPARATOR = \":\";\n+\n+    public static FeedScopedId mapToDomain(String api) {\n+        if (api == null) { return null; }\n+        String[] parts = api.split(SEPARATOR, 2);\n+        return new FeedScopedId(parts[0], parts[1]);\n     }\n \n-    public static ApiFeedScopedId mapToApi(FeedScopedId arg) {\n+    public static String mapToApi(FeedScopedId arg) {\n         if (arg == null) {\n             return null;\n         }\n-        return new ApiFeedScopedId(arg.getFeedId(), arg.getId());\n+        return arg.getFeedId() + \":\" + arg.getId();", "originalCommit": "358859c83a5bd11a1422445807bd66804982e618", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTAxNDMwOQ==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3031#discussion_r409014309", "bodyText": "This is fixed.", "author": "t2gran", "createdAt": "2020-04-15T17:31:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjA4MzE4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjA4NTc0OQ==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3031#discussion_r406085749", "bodyText": "Eliminate use of adapter here", "author": "abyrd", "createdAt": "2020-04-09T09:45:43Z", "path": "src/main/java/org/opentripplanner/api/model/ApiRouterInfo.java", "diffHunk": "@@ -31,7 +32,7 @@\n     \n     @JsonSerialize(using= GeometrySerializer.class)\n     @JsonDeserialize(using= GeometryDeserializer.class)\n-    @XmlJavaTypeAdapter(value=GeometryAdapter.class,type=Geometry.class)\n+    @XmlJavaTypeAdapter(value= GeometryAdapter.class,type=Geometry.class)", "originalCommit": "5e00532a06835777fd5d9c6730b23ddacffa5434", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTAxNTU4OQ==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3031#discussion_r409015589", "bodyText": "After looking closer at this it is a bit of work to remove the Adapters for the external types, so I left them as is. The XML adapters are removed, with the removal of XML support.", "author": "t2gran", "createdAt": "2020-04-15T17:33:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjA4NTc0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjExMTU4NQ==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3031#discussion_r406111585", "bodyText": "delete rather then comment", "author": "abyrd", "createdAt": "2020-04-09T10:32:05Z", "path": "src/test/java/org/opentripplanner/updater/stoptime/TimetableSnapshotSourceTest.java", "diffHunk": "@@ -53,9 +53,14 @@\n \n     @BeforeClass\n     public static void setUpClass() throws Exception {\n+        // The \".turnOnSetAgencyToFeedIdForAllElements()\" is commented out so it can be\n+        // removed from the code, it in no longer in use. It is not deleted here to better\n+        // allow the reader of the test understand how the test once worked. There should\n+        // be new test to replace this one.\n+\n         context = contextBuilder(ConstantsForTests.FAKE_GTFS)\n                 .withIssueStoreAndDeduplicator(graph)\n-                .turnOnSetAgencyToFeedIdForAllElements()\n+                //.turnOnSetAgencyToFeedIdForAllElements()", "originalCommit": "1c0267effdb62251a58b4988f17202949f3d916f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e41fad5005649c1c44a117dc383f86072b48dd2e", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/e41fad5005649c1c44a117dc383f86072b48dd2e", "message": "Code review\n  - Remove unused Adapters.\n  - Update OTP2-MigrationGuide.\n  - Use the SEPARATOR constant everywhere, and this the string \":\".\n  - Add API mapping methods for all \"Short\" types.", "committedDate": "2020-04-14T14:58:54Z", "type": "commit"}, {"oid": "af3f64d4c4192ed69677e95a6cdd93dccc362473", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/af3f64d4c4192ed69677e95a6cdd93dccc362473", "message": "Merge remote-tracking branch 'otp/dev-2.x' into otp2_api_types", "committedDate": "2020-04-14T14:59:44Z", "type": "commit"}, {"oid": "6909461b3ea6c5a98a5ef763c1da57153feacd97", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/6909461b3ea6c5a98a5ef763c1da57153feacd97", "message": "XML as a in-/out-put serialization mechanism is removed from almost all APIs - except some of the RT-updaters and AlertPatcher resource. The JSON support is the appropriate serialization to use when integrating with OTP. The existing XML API was not consistent using attributes for some fields and elements for other fields, also some of the mapping code was custom to the XML, using something else than the JSON. So to simplify maintenance and readability the XML support is removed.", "committedDate": "2020-04-15T17:28:31Z", "type": "commit"}, {"oid": "9955f5ded36d308ab372adc2afe0113bb6c03b54", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/9955f5ded36d308ab372adc2afe0113bb6c03b54", "message": "Clean Code - Move the `index.model` API POJOs into the `api.model`. The Index API POJOs is not logically organized(some in `api` and some in `index`). This commit moves everything into one package, but we might extract ALL Index API POJOs into a separate package later.", "committedDate": "2020-04-15T17:28:42Z", "type": "commit"}, {"oid": "6147aa4ffcf6105115d53718a835db35167b8b7b", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/6147aa4ffcf6105115d53718a835db35167b8b7b", "message": "Clean Code - Remove routerId from call to OTPServer.getRouter().", "committedDate": "2020-04-15T17:28:42Z", "type": "commit"}, {"oid": "c77cdfe455a03f118296011f9c42d1dd72e1877c", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/c77cdfe455a03f118296011f9c42d1dd72e1877c", "message": "Clean Code - Add transfer mapper.", "committedDate": "2020-04-15T17:28:42Z", "type": "commit"}, {"oid": "a711fe0eccd7c063f02637e2c2da61ef068dae71", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/a711fe0eccd7c063f02637e2c2da61ef068dae71", "message": "Clean Code - Encapsulate the internal index for agencies, stops, routes and Transfers.", "committedDate": "2020-04-15T17:28:42Z", "type": "commit"}, {"oid": "869fc2b80405d89be68dec97894f92831ffa5180", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/869fc2b80405d89be68dec97894f92831ffa5180", "message": "Clean Code - Add a 'createRoutingRequestService' factory method to OTPServer to start hiding the graph.", "committedDate": "2020-04-15T17:28:42Z", "type": "commit"}, {"oid": "7f9f0660277b2cb88f8c70d90b29e46fae662eac", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/7f9f0660277b2cb88f8c70d90b29e46fae662eac", "message": "Clean Code - Cleanup modes in Route and TripPattern and add it to ApiRoute.\n  - Eliminate the old GtfsLibrary.getTraverseMode() and replace it with mapping done once.\n  - Cleanup in IndexAPI\n  - Fix OTP Client routId parsing error.", "committedDate": "2020-04-15T17:28:42Z", "type": "commit"}, {"oid": "242796dbf825fff1c6125cb0e38d2c2d802a2fa7", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/242796dbf825fff1c6125cb0e38d2c2d802a2fa7", "message": "Make IndexAPI type-safe, improve validation and error handling and push business logic into RoutingService.", "committedDate": "2020-04-15T17:28:42Z", "type": "commit"}, {"oid": "242796dbf825fff1c6125cb0e38d2c2d802a2fa7", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/242796dbf825fff1c6125cb0e38d2c2d802a2fa7", "message": "Make IndexAPI type-safe, improve validation and error handling and push business logic into RoutingService.", "committedDate": "2020-04-15T17:28:42Z", "type": "forcePushed"}, {"oid": "37f030286114434da609c27df421e976980473c0", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/37f030286114434da609c27df421e976980473c0", "message": "Merge branch 'dev-2.x' into otp2_api_types", "committedDate": "2020-04-15T17:34:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQwNDM0Mg==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3031#discussion_r409404342", "bodyText": "Doc on this method, this is not threadsafe and is used by updaters.", "author": "abyrd", "createdAt": "2020-04-16T09:13:27Z", "path": "src/main/java/org/opentripplanner/routing/graph/GraphIndex.java", "diffHunk": "@@ -111,30 +105,68 @@ public GraphIndex (Graph graph) {\n         LOG.info(\"GraphIndex init complete.\");\n     }\n \n-  public Map<String, Map<String, Agency>> getAgenciesForFeedId() {\n-    return agenciesForFeedId;\n+  public Collection<Agency> getAgenciesForFeedId(String feedId) {\n+    return agenciesForFeedId.get(feedId);\n+  }\n+\n+  public Agency getAgency(String feedId, String agencyId) {\n+    for (Agency agency : agenciesForFeedId.get(feedId)) {\n+      if(agency.getId().equals(agencyId)) {\n+        return agency;\n+      }\n+    }\n+    return null;\n+  }\n+\n+  /**\n+   * Construct a set of all Agencies in this graph, spanning across all feed IDs. I am creating this\n+   * method only to allow merging pull request #2032 which adds GraphQL. This should probably be\n+   * done some other way, see javadoc on getAgencyWithoutFeedId.\n+   */\n+  public Collection<Agency> getAllAgencies() {\n+    return agenciesForFeedId.values();\n   }\n \n   public Map<FeedScopedId, Operator> getOperatorForId() {\n     return operatorForId;\n   }\n \n+  /**\n+   * Get a list of all operators spanning across all feeds.\n+   */\n+  public Collection<Operator> getAllOperators() {\n+    return getOperatorForId().values();\n+  }\n+\n   public Map<String, FeedInfo> getFeedInfoForId() {\n     return feedInfoForId;\n   }\n \n-  public Map<FeedScopedId, Stop> getStopForId() {\n-    return stopForId;\n+  public Stop getStopForId(FeedScopedId id) {\n+    return stopForId.get(id);\n+  }\n+\n+  public Collection<Stop> getAllStops() {\n+    return stopForId.values();\n   }\n \n   public Map<FeedScopedId, Trip> getTripForId() {\n     return tripForId;\n   }\n \n-  public Map<FeedScopedId, Route> getRouteForId() {\n-    return routeForId;\n+  public Route getRouteForId(FeedScopedId id) {\n+    return routeForId.get(id);\n+  }\n+\n+  public Collection<Route> getAllRoutes() {\n+    return routeForId.values();\n   }\n \n+  public void addRoutes(Route route) {\n+    routeForId.put(route.getId(), route);\n+  }", "originalCommit": "a711fe0eccd7c063f02637e2c2da61ef068dae71", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "befda4c63e100d3c31e329028bd16766e77361ff", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/befda4c63e100d3c31e329028bd16766e77361ff", "message": "Merge branch 'dev-2.x' into otp2_api_types", "committedDate": "2020-04-16T09:33:09Z", "type": "commit"}, {"oid": "bd0b645ed69b8f41d84f521725ea59de462e047f", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/bd0b645ed69b8f41d84f521725ea59de462e047f", "message": "Code review - add comment to GraphIndex.addRoutes(...).", "committedDate": "2020-04-16T09:41:14Z", "type": "commit"}]}