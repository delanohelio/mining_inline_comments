{"pr_number": 3156, "pr_title": "KOGITO-879 KOGITO-880 KOGITO-881: State Control API (undo/redo)", "pr_createdAt": "2020-02-12T15:34:16Z", "pr_url": "https://github.com/kiegroup/kie-wb-common/pull/3156", "timeline": [{"oid": "7004856f059f375f6d8539525e18a2e00fe58a1c", "url": "https://github.com/kiegroup/kie-wb-common/commit/7004856f059f375f6d8539525e18a2e00fe58a1c", "message": "- Enforcer dependency fix.", "committedDate": "2020-02-12T18:50:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM4OTAxOA==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r379389018", "bodyText": "What is the purpose of this event?! I see it fired by the command registry when commands are executed/undone (by setting the Registry's Change Listener) however I could not find any observers of the event (in kie-wb-common or appformer) so wonder what is its reason to exist!", "author": "manstis", "createdAt": "2020-02-14T11:45:08Z", "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/session/DMNEditorSession.java", "diffHunk": "@@ -68,11 +70,13 @@\n     public DMNEditorSession(final ManagedSession session,\n                             final CanvasCommandManager<AbstractCanvasHandler> canvasCommandManager,\n                             final SessionCommandManager<AbstractCanvasHandler> sessionCommandManager,\n-                            final ClientCommandRegistry<org.kie.workbench.common.stunner.core.command.Command<AbstractCanvasHandler, CanvasViolation>> clientCommandRegistry) {\n+                            final CommandRegistry<org.kie.workbench.common.stunner.core.command.Command<AbstractCanvasHandler, CanvasViolation>> commandRegistry,\n+                            final Event<RegisterChangedEvent> registerChangedEvent) {", "originalCommit": "7004856f059f375f6d8539525e18a2e00fe58a1c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ3NTk2NA==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r379475964", "bodyText": "@manstis good question. The old ClientCommandRegistry was firing this event when changes on the registry were happening. Honestly I don't know why it's used, I just wrapped the event trigger on the RCL.", "author": "pefernan", "createdAt": "2020-02-14T14:59:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM4OTAxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM5NTU0OQ==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r379395549", "bodyText": "I struggle with this...\nI'd much prefer RedoSessionCommand to be written for Business Central (i.e. binds to session.getKeyboardControl().. control, L#74). Then have another (CDI) @Specializes implementation here that works with KogitoStateControlInitializer).\nI'd also like to have seen more re-use of EditorContextProvider.getChannel() as opposed to KogitoStateControlInitializer.isKogitoEnabled() to determine the environment in which the editor is running.", "author": "manstis", "createdAt": "2020-02-14T12:02:13Z", "path": "kie-wb-common-stunner/kie-wb-common-stunner-core/kie-wb-common-stunner-commons/kie-wb-common-stunner-client-common/src/main/java/org/kie/workbench/common/stunner/core/client/session/command/impl/RedoSessionCommand.java", "diffHunk": "@@ -44,26 +45,34 @@\n public class RedoSessionCommand extends AbstractClientSessionCommand<EditorSession> {\n \n     private final SessionCommandManager<AbstractCanvasHandler> sessionCommandManager;\n-    private final ClientRedoCommandHandler<Command<AbstractCanvasHandler, CanvasViolation>> redoCommandHandler;\n+    private final RedoCommandHandler<Command<AbstractCanvasHandler, CanvasViolation>> redoCommandHandler;\n+    private final KogitoStateControlInitializer stateControlInitializer;\n \n     protected RedoSessionCommand() {\n-        this(null,\n-             null);\n+        this(null, null, null);\n     }\n \n     @Inject\n     public RedoSessionCommand(final SessionCommandManager<AbstractCanvasHandler> sessionCommandManager,\n-                              final ClientRedoCommandHandler<Command<AbstractCanvasHandler, CanvasViolation>> redoCommandHandler) {\n+                              final RedoCommandHandler<Command<AbstractCanvasHandler, CanvasViolation>> redoCommandHandler,\n+                              final KogitoStateControlInitializer stateControlInitializer) {\n         super(false);\n         this.redoCommandHandler = redoCommandHandler;\n         this.sessionCommandManager = sessionCommandManager;\n+        this.stateControlInitializer = stateControlInitializer;\n     }\n \n     @Override\n     public void bind(final EditorSession session) {\n         super.bind(session);\n-        session.getKeyboardControl().addKeyShortcutCallback(this::onKeyDownEvent);\n         redoCommandHandler.setSession(getSession());\n+\n+        //If running in Kogito we should initialize the Kogito StateControl undo/redo commands. Otherwise we should keep the key binding.", "originalCommit": "7004856f059f375f6d8539525e18a2e00fe58a1c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQwNzE3MA==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r379407170", "bodyText": "@romartin FYI... my suggestion would mean BPMN-kogito would need to extend the referenced module (IIUC that is yet to be done.. but this could be a good catalyst to ensure it's completed sooner than later!)", "author": "manstis", "createdAt": "2020-02-14T12:33:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM5NTU0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ3NzI4NA==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r379477284", "bodyText": "@manstis I think you're right on the @specializes, Monday I'll work on that. The change that introduced the channel wasn't there when I started, I'll reuse that too.", "author": "pefernan", "createdAt": "2020-02-14T15:02:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM5NTU0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDExNTMwOQ==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r380115309", "bodyText": "formatting", "author": "jomarko", "createdAt": "2020-02-17T10:59:02Z", "path": "kie-wb-common-stunner/kie-wb-common-stunner-core/kie-wb-common-stunner-commons/kie-wb-common-stunner-client-common/src/main/java/org/kie/workbench/common/stunner/core/client/session/command/impl/UndoSessionCommand.java", "diffHunk": "@@ -42,17 +43,26 @@\n public class UndoSessionCommand extends AbstractClientSessionCommand<EditorSession> {\n \n     private final SessionCommandManager<AbstractCanvasHandler> sessionCommandManager;\n+    private final KogitoStateControlInitializer stateControlInitializer;\n \n     @Inject\n-    public UndoSessionCommand(final SessionCommandManager<AbstractCanvasHandler> sessionCommandManager) {\n+    public UndoSessionCommand(final SessionCommandManager<AbstractCanvasHandler> sessionCommandManager,\n+                              final KogitoStateControlInitializer stateControlInitializer) {\n         super(false);\n         this.sessionCommandManager = sessionCommandManager;\n+        this.stateControlInitializer = stateControlInitializer;\n     }\n \n     @Override\n     public void bind(final EditorSession session) {\n         super.bind(session);\n-        session.getKeyboardControl().addKeyShortcutCallback(this::onKeyDownEvent);\n+\n+        //If running in Kogito we should initialize the Kogito StateControl undo/redo commands. Otherwise we should keep the key binding.\n+        if(stateControlInitializer.isKogitoEnabled()) {", "originalCommit": "7004856f059f375f6d8539525e18a2e00fe58a1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c652aa290f21025e5af17a4852b69ad482e58564", "url": "https://github.com/kiegroup/kie-wb-common/commit/c652aa290f21025e5af17a4852b69ad482e58564", "message": "- Code improvements.", "committedDate": "2020-02-18T17:11:19Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMwMTEwOA==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r381301108", "bodyText": "Did you want to remove this block?", "author": "manstis", "createdAt": "2020-02-19T13:50:28Z", "path": "kie-wb-common-stunner/kie-wb-common-stunner-core/kie-wb-common-stunner-commons/kie-wb-common-stunner-client-common/src/test/java/org/kie/workbench/common/stunner/core/client/session/command/impl/UndoSessionCommandTest.java", "diffHunk": "@@ -167,4 +167,28 @@ public void testOnCommandExecutedCheckWrongSession() {\n         verify(commandRegistry,\n                never()).clear();\n     }\n+/*", "originalCommit": "c652aa290f21025e5af17a4852b69ad482e58564", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM1MTQwOA==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r383351408", "bodyText": "@pefernan what about these commented tests?", "author": "jomarko", "createdAt": "2020-02-24T15:57:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMwMTEwOA=="}], "type": "inlineReview"}, {"oid": "6a6421363144a681d09ea3127e895794e48ea716", "url": "https://github.com/kiegroup/kie-wb-common/commit/6a6421363144a681d09ea3127e895794e48ea716", "message": "- Code improvements.", "committedDate": "2020-02-21T17:33:50Z", "type": "forcePushed"}, {"oid": "9af476b85e01ade4d9f8d71c6ce0016b1de3184c", "url": "https://github.com/kiegroup/kie-wb-common/commit/9af476b85e01ade4d9f8d71c6ce0016b1de3184c", "message": "- Code improvements.", "committedDate": "2020-02-24T09:34:23Z", "type": "forcePushed"}, {"oid": "9064ebe3c09937f89f17743d9b2475a18c86d360", "url": "https://github.com/kiegroup/kie-wb-common/commit/9064ebe3c09937f89f17743d9b2475a18c86d360", "message": "- Code improvements.", "committedDate": "2020-02-24T12:35:46Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM0NzU3Mg==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r383347572", "bodyText": "Please could you explain why kie-wb-common-dmn-client doesn't need a dependency for the module where the CommandRegistry was introduced?", "author": "jomarko", "createdAt": "2020-02-24T15:51:30Z", "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/test/java/org/kie/workbench/common/dmn/client/session/DMNEditorSessionTest.java", "diffHunk": "@@ -20,6 +20,7 @@\n import java.util.Map;\n \n import com.google.gwtmockito.GwtMockitoTestRunner;\n+import org.appformer.kogito.api.stateControl.registry.CommandRegistry;", "originalCommit": "9064ebe3c09937f89f17743d9b2475a18c86d360", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM3MzUxMw==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r383373513", "bodyText": "It has a dep to kie-wb-common-stunner-client-common that already has a dep to appformer-kogito-api.", "author": "pefernan", "createdAt": "2020-02-24T16:31:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM0NzU3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM1NzUxNA==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r383357514", "bodyText": "I think should be added to AbstractClientSessionCommand (or higher) interface level with javadoc what is purpose of this method", "author": "jomarko", "createdAt": "2020-02-24T16:06:48Z", "path": "kie-wb-common-stunner/kie-wb-common-stunner-core/kie-wb-common-stunner-commons/kie-wb-common-stunner-client-common/src/main/java/org/kie/workbench/common/stunner/core/client/session/command/impl/RedoSessionCommand.java", "diffHunk": "@@ -62,8 +61,13 @@ public RedoSessionCommand(final SessionCommandManager<AbstractCanvasHandler> ses\n     @Override\n     public void bind(final EditorSession session) {\n         super.bind(session);\n-        session.getKeyboardControl().addKeyShortcutCallback(this::onKeyDownEvent);\n         redoCommandHandler.setSession(getSession());\n+\n+        bindCommand();", "originalCommit": "9064ebe3c09937f89f17743d9b2475a18c86d360", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM4NjcyMw==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r383386723", "bodyText": "The problem here is that those methods are only required for undo/redo sessioncommand, moving it up on the inheritance tree could cause a big refactor.", "author": "pefernan", "createdAt": "2020-02-24T16:53:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM1NzUxNA=="}], "type": "inlineReview"}, {"oid": "f1cf3ed127111fe17378df58d5c957dc9454de6d", "url": "https://github.com/kiegroup/kie-wb-common/commit/f1cf3ed127111fe17378df58d5c957dc9454de6d", "message": "- Code suggestions", "committedDate": "2020-02-24T17:41:01Z", "type": "forcePushed"}, {"oid": "400275abbe96222d9265404b024c62dd4f0b0d51", "url": "https://github.com/kiegroup/kie-wb-common/commit/400275abbe96222d9265404b024c62dd4f0b0d51", "message": "KOGITO-879: Define State Control API\nKOGITO-880: Create JSInterop layer for StateControl API\nKOGITO-881: Integrate State Control API in Stunner to handle Undo & Redo", "committedDate": "2020-02-27T16:05:49Z", "type": "commit"}, {"oid": "1c3d08240d8d587e7eea5fda063c38f36783133d", "url": "https://github.com/kiegroup/kie-wb-common/commit/1c3d08240d8d587e7eea5fda063c38f36783133d", "message": "- Enforcer dependency fix.", "committedDate": "2020-02-27T16:05:49Z", "type": "commit"}, {"oid": "ade958e85ecbc6bd1022c7ec6958ff489eca30f7", "url": "https://github.com/kiegroup/kie-wb-common/commit/ade958e85ecbc6bd1022c7ec6958ff489eca30f7", "message": "- Code improvements.", "committedDate": "2020-02-27T16:05:49Z", "type": "commit"}, {"oid": "8742f5fd87e394633372877c6273025c67a2a8d1", "url": "https://github.com/kiegroup/kie-wb-common/commit/8742f5fd87e394633372877c6273025c67a2a8d1", "message": "- Code improvements.", "committedDate": "2020-02-27T16:05:49Z", "type": "commit"}, {"oid": "668351dc7888158065c61893f3e4a14b55082b55", "url": "https://github.com/kiegroup/kie-wb-common/commit/668351dc7888158065c61893f3e4a14b55082b55", "message": "- Code suggestions", "committedDate": "2020-02-27T16:05:49Z", "type": "commit"}, {"oid": "b53bf5860a19624f45e4b6e386071ea8e7ef6ef3", "url": "https://github.com/kiegroup/kie-wb-common/commit/b53bf5860a19624f45e4b6e386071ea8e7ef6ef3", "message": "- Module renaming", "committedDate": "2020-02-27T16:05:49Z", "type": "commit"}, {"oid": "90b8355af725c2554a625b93e37cb107fba8a07c", "url": "https://github.com/kiegroup/kie-wb-common/commit/90b8355af725c2554a625b93e37cb107fba8a07c", "message": "- Class renames", "committedDate": "2020-02-27T16:05:49Z", "type": "commit"}, {"oid": "90b8355af725c2554a625b93e37cb107fba8a07c", "url": "https://github.com/kiegroup/kie-wb-common/commit/90b8355af725c2554a625b93e37cb107fba8a07c", "message": "- Class renames", "committedDate": "2020-02-27T16:05:49Z", "type": "forcePushed"}]}