{"pr_number": 3365, "pr_title": "AF-2582 : Package list dropdown should load faster", "pr_createdAt": "2020-07-24T10:21:27Z", "pr_url": "https://github.com/kiegroup/kie-wb-common/pull/3365", "timeline": [{"oid": "4d09a4c8cf47383f317dc805b1f1dfd95f4a95c2", "url": "https://github.com/kiegroup/kie-wb-common/commit/4d09a4c8cf47383f317dc805b1f1dfd95f4a95c2", "message": "temp", "committedDate": "2020-07-29T09:17:58Z", "type": "forcePushed"}, {"oid": "a0ed173fe8d233bd5cd1fded3b0aacad96819c93", "url": "https://github.com/kiegroup/kie-wb-common/commit/a0ed173fe8d233bd5cd1fded3b0aacad96819c93", "message": "AF-2582 : Package list dropdown should load faster", "committedDate": "2020-07-30T10:41:49Z", "type": "forcePushed"}, {"oid": "9c968e9321676a56d1c7488c7921937fd530694d", "url": "https://github.com/kiegroup/kie-wb-common/commit/9c968e9321676a56d1c7488c7921937fd530694d", "message": "AF-2582 : Package list dropdown should load faster", "committedDate": "2020-08-03T08:01:14Z", "type": "forcePushed"}, {"oid": "da6b92a2565882dc2dc711f9c26ed53739e40268", "url": "https://github.com/kiegroup/kie-wb-common/commit/da6b92a2565882dc2dc711f9c26ed53739e40268", "message": "AF-2582 : Package list dropdown should load faster", "committedDate": "2020-08-04T10:26:15Z", "type": "forcePushed"}, {"oid": "450a7a593bd0bc58f0b7638bf30a0a0cd51da035", "url": "https://github.com/kiegroup/kie-wb-common/commit/450a7a593bd0bc58f0b7638bf30a0a0cd51da035", "message": "AF-2582 : Package list dropdown should load faster", "committedDate": "2020-08-04T14:06:32Z", "type": "forcePushed"}, {"oid": "da1ab7eaceb3d0b6934e3f9c09121422ccaaf663", "url": "https://github.com/kiegroup/kie-wb-common/commit/da1ab7eaceb3d0b6934e3f9c09121422ccaaf663", "message": "AF-2582 : Package list dropdown should load faster", "committedDate": "2020-08-04T15:41:44Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjIwODY2Mg==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3365#discussion_r466208662", "bodyText": "Reading sonar report, shouldn't we implement as :\n    public Set<String> find(final Path path) {\n        final Set<String> result = new HashSet<>();\n\n        final WorkspaceProject workspaceProject = projectService.resolveProject(path);\n\n        final List<RefactoringPageRow> rows = refactoringQueryService.query(FindPackageNamesQuery.NAME,\n                                                                            getValueIndexTerms(workspaceProject));\n\n        for (RefactoringPageRow row : rows) {\n            result.add(row.getValue().toString());\n        }\n        \n        return result;\n    }\n?", "author": "jomarko", "createdAt": "2020-08-06T07:44:03Z", "path": "kie-wb-common-services/kie-wb-common-refactoring/kie-wb-common-refactoring-backend/src/main/java/org/kie/workbench/common/services/refactoring/backend/server/query/PackageServiceLoaderImpl.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.kie.workbench.common.services.refactoring.backend.server.query;\n+\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Inject;\n+\n+import org.guvnor.common.services.project.model.WorkspaceProject;\n+import org.guvnor.common.services.project.service.WorkspaceProjectService;\n+import org.jboss.errai.bus.server.annotations.Service;\n+import org.kie.workbench.common.services.refactoring.backend.server.query.standard.FindPackageNamesQuery;\n+import org.kie.workbench.common.services.refactoring.model.index.terms.valueterms.ValueIndexTerm;\n+import org.kie.workbench.common.services.refactoring.model.index.terms.valueterms.ValueModuleRootPathIndexTerm;\n+import org.kie.workbench.common.services.refactoring.model.index.terms.valueterms.ValuePackageNameIndexTerm;\n+import org.kie.workbench.common.services.refactoring.model.query.RefactoringPageRow;\n+import org.kie.workbench.common.services.refactoring.service.PackageServiceLoader;\n+import org.kie.workbench.common.services.refactoring.service.RefactoringQueryService;\n+import org.uberfire.backend.vfs.Path;\n+\n+@Service\n+@ApplicationScoped\n+public class PackageServiceLoaderImpl\n+        implements PackageServiceLoader {\n+\n+    @Inject\n+    private RefactoringQueryService refactoringQueryService;\n+\n+    @Inject\n+    private WorkspaceProjectService projectService;\n+\n+    public Set<String> find(final Path path) {\n+        final Set<String> result = new HashSet<>();\n+        try {\n+\n+            final WorkspaceProject workspaceProject = projectService.resolveProject(path);\n+\n+            final List<RefactoringPageRow> rows = refactoringQueryService.query(FindPackageNamesQuery.NAME,\n+                                                                                getValueIndexTerms(workspaceProject));\n+\n+            for (RefactoringPageRow row : rows) {\n+                result.add(row.getValue().toString());\n+            }\n+        } finally {\n+            return result;\n+        }\n+    }", "originalCommit": "da1ab7eaceb3d0b6934e3f9c09121422ccaaf663", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI2NzA2OQ==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3365#discussion_r466267069", "bodyText": "Here I also copied an existing practice. The problem without this is then any errors are not captured. I did try this and the errors do happen. So maybe to fix sonar the error needs to be captured and in the capture block I do return result;.", "author": "Rikkola", "createdAt": "2020-08-06T09:19:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjIwODY2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjIyMjIxNA==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3365#discussion_r466222214", "bodyText": "Shouldn't be here also term instanceof ValuePackageNameIndexTerm. Asking just because of the toQuery method content.", "author": "jomarko", "createdAt": "2020-08-06T08:06:37Z", "path": "kie-wb-common-services/kie-wb-common-refactoring/kie-wb-common-refactoring-backend/src/main/java/org/kie/workbench/common/services/refactoring/backend/server/query/standard/FindPackageNamesQuery.java", "diffHunk": "@@ -0,0 +1,134 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.services.refactoring.backend.server.query.standard;\n+\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Set;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+\n+import org.apache.lucene.search.Query;\n+import org.kie.workbench.common.services.refactoring.backend.server.query.NamedQuery;\n+import org.kie.workbench.common.services.refactoring.backend.server.query.builder.SearchEmptyQueryBuilder;\n+import org.kie.workbench.common.services.refactoring.backend.server.query.response.ResponseBuilder;\n+import org.kie.workbench.common.services.refactoring.model.index.terms.valueterms.ValueIndexTerm;\n+import org.kie.workbench.common.services.refactoring.model.index.terms.valueterms.ValueModuleRootPathIndexTerm;\n+import org.kie.workbench.common.services.refactoring.model.index.terms.valueterms.ValuePackageNameIndexTerm;\n+import org.kie.workbench.common.services.refactoring.model.query.RefactoringPageRow;\n+import org.kie.workbench.common.services.refactoring.model.query.RefactoringStringPageRow;\n+import org.uberfire.ext.metadata.model.KObject;\n+import org.uberfire.ext.metadata.model.KProperty;\n+import org.uberfire.paging.PageResponse;\n+\n+@ApplicationScoped\n+public class FindPackageNamesQuery extends AbstractFindQuery implements NamedQuery {\n+\n+    public static final String NAME = FindPackageNamesQuery.class.getSimpleName();\n+    private static final ValuePackageNameIndexTerm packageNameIndexTerm = new ValuePackageNameIndexTerm();\n+    private PackageResponseBuilder responseBuilder = new PackageResponseBuilder();\n+\n+    @Override\n+    public String getName() {\n+        return NAME;\n+    }\n+\n+    @Override\n+    public ResponseBuilder getResponseBuilder() {\n+        return responseBuilder;\n+    }\n+\n+    @Override\n+    public Query toQuery(Set<ValueIndexTerm> terms) {\n+        final SearchEmptyQueryBuilder queryBuilder = new SearchEmptyQueryBuilder();\n+\n+        for (ValueIndexTerm term : terms) {\n+            if (term instanceof ValueModuleRootPathIndexTerm\n+                    || term instanceof ValuePackageNameIndexTerm) {\n+                queryBuilder.addTerm(term);\n+            }\n+        }\n+\n+        return queryBuilder.build();\n+    }\n+\n+    @Override\n+    public void validateTerms(Set<ValueIndexTerm> queryTerms) {\n+        checkNotNullAndNotEmpty(queryTerms);\n+\n+        checkInvalidAndRequiredTerms(queryTerms,\n+                                     NAME,\n+                                     new String[]{\n+                                             null,   // not required\n+                                             packageNameIndexTerm.getTerm()\n+                                     },\n+                                     (t) -> (t instanceof ValueModuleRootPathIndexTerm),\n+                                     (t) -> (Objects.equals(t.getTerm(), packageNameIndexTerm.getTerm())));", "originalCommit": "da1ab7eaceb3d0b6934e3f9c09121422ccaaf663", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI2NzcyMw==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3365#discussion_r466267723", "bodyText": "Yeah, might be safer that way.", "author": "Rikkola", "createdAt": "2020-08-06T09:19:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjIyMjIxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU4MjI2Nw==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3365#discussion_r466582267", "bodyText": "Looks like this equals check is enough.", "author": "Rikkola", "createdAt": "2020-08-06T17:45:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjIyMjIxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjIyMzU5Mw==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3365#discussion_r466223593", "bodyText": "Why this is not just starRow + pageSize >= hits?", "author": "jomarko", "createdAt": "2020-08-06T08:08:53Z", "path": "kie-wb-common-services/kie-wb-common-refactoring/kie-wb-common-refactoring-backend/src/main/java/org/kie/workbench/common/services/refactoring/backend/server/query/standard/FindPackageNamesQuery.java", "diffHunk": "@@ -0,0 +1,134 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.services.refactoring.backend.server.query.standard;\n+\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Set;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+\n+import org.apache.lucene.search.Query;\n+import org.kie.workbench.common.services.refactoring.backend.server.query.NamedQuery;\n+import org.kie.workbench.common.services.refactoring.backend.server.query.builder.SearchEmptyQueryBuilder;\n+import org.kie.workbench.common.services.refactoring.backend.server.query.response.ResponseBuilder;\n+import org.kie.workbench.common.services.refactoring.model.index.terms.valueterms.ValueIndexTerm;\n+import org.kie.workbench.common.services.refactoring.model.index.terms.valueterms.ValueModuleRootPathIndexTerm;\n+import org.kie.workbench.common.services.refactoring.model.index.terms.valueterms.ValuePackageNameIndexTerm;\n+import org.kie.workbench.common.services.refactoring.model.query.RefactoringPageRow;\n+import org.kie.workbench.common.services.refactoring.model.query.RefactoringStringPageRow;\n+import org.uberfire.ext.metadata.model.KObject;\n+import org.uberfire.ext.metadata.model.KProperty;\n+import org.uberfire.paging.PageResponse;\n+\n+@ApplicationScoped\n+public class FindPackageNamesQuery extends AbstractFindQuery implements NamedQuery {\n+\n+    public static final String NAME = FindPackageNamesQuery.class.getSimpleName();\n+    private static final ValuePackageNameIndexTerm packageNameIndexTerm = new ValuePackageNameIndexTerm();\n+    private PackageResponseBuilder responseBuilder = new PackageResponseBuilder();\n+\n+    @Override\n+    public String getName() {\n+        return NAME;\n+    }\n+\n+    @Override\n+    public ResponseBuilder getResponseBuilder() {\n+        return responseBuilder;\n+    }\n+\n+    @Override\n+    public Query toQuery(Set<ValueIndexTerm> terms) {\n+        final SearchEmptyQueryBuilder queryBuilder = new SearchEmptyQueryBuilder();\n+\n+        for (ValueIndexTerm term : terms) {\n+            if (term instanceof ValueModuleRootPathIndexTerm\n+                    || term instanceof ValuePackageNameIndexTerm) {\n+                queryBuilder.addTerm(term);\n+            }\n+        }\n+\n+        return queryBuilder.build();\n+    }\n+\n+    @Override\n+    public void validateTerms(Set<ValueIndexTerm> queryTerms) {\n+        checkNotNullAndNotEmpty(queryTerms);\n+\n+        checkInvalidAndRequiredTerms(queryTerms,\n+                                     NAME,\n+                                     new String[]{\n+                                             null,   // not required\n+                                             packageNameIndexTerm.getTerm()\n+                                     },\n+                                     (t) -> (t instanceof ValueModuleRootPathIndexTerm),\n+                                     (t) -> (Objects.equals(t.getTerm(), packageNameIndexTerm.getTerm())));\n+    }\n+\n+    private static class PackageResponseBuilder implements ResponseBuilder {\n+\n+        @Override\n+        public PageResponse<RefactoringPageRow> buildResponse(final int pageSize,\n+                                                              final int startRow,\n+                                                              final List<KObject> kObjects) {\n+            final int hits = kObjects.size();\n+            final PageResponse<RefactoringPageRow> response = new PageResponse();\n+            final List<RefactoringPageRow> result = buildResponse(kObjects);\n+            response.setTotalRowSize(hits);\n+            response.setPageRowList(result);\n+            response.setTotalRowSizeExact(true);\n+            response.setStartRowIndex(startRow);\n+            response.setLastPage((pageSize * startRow + 2) >= hits);", "originalCommit": "da1ab7eaceb3d0b6934e3f9c09121422ccaaf663", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI2ODY3NA==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3365#discussion_r466268674", "bodyText": "I really wish I had used a name for the magic 2 here.", "author": "Rikkola", "createdAt": "2020-08-06T09:20:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjIyMzU5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjIyNzYyMw==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3365#discussion_r466227623", "bodyText": "Could we please add javadoc? What is the contract if packageName was not found?", "author": "jomarko", "createdAt": "2020-08-06T08:16:03Z", "path": "kie-wb-common-services/kie-wb-common-services-api/src/main/java/org/kie/workbench/common/services/shared/project/KieModuleService.java", "diffHunk": "@@ -25,5 +26,9 @@\n @Remote\n public interface KieModuleService\n         extends ModuleService<KieModule> {\n-    KieModulePackages resolveModulePackages(Module activeModule);\n+\n+    KieModulePackages resolveModulePackages(final Module activeModule);\n+\n+    Package resolvePackage(final Module activeModule,\n+                           final String packageName);", "originalCommit": "da1ab7eaceb3d0b6934e3f9c09121422ccaaf663", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI2ODk5Ng==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3365#discussion_r466268996", "bodyText": "We can.", "author": "Rikkola", "createdAt": "2020-08-06T09:20:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjIyNzYyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njk2OTc2OA==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3365#discussion_r466969768", "bodyText": "I guess the javadoc is still missing.", "author": "Rikkola", "createdAt": "2020-08-07T10:58:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjIyNzYyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njk3NTMzNA==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3365#discussion_r466975334", "bodyText": "Done", "author": "Rikkola", "createdAt": "2020-08-07T11:11:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjIyNzYyMw=="}], "type": "inlineReview"}, {"oid": "5ffbf756765c5afae7180544b9258395ca3a0921", "url": "https://github.com/kiegroup/kie-wb-common/commit/5ffbf756765c5afae7180544b9258395ca3a0921", "message": "AF-2582 : Package list dropdown should load faster", "committedDate": "2020-08-06T16:20:15Z", "type": "forcePushed"}, {"oid": "449f9bb62969b0ff32cd9ac922c14611e0a215e1", "url": "https://github.com/kiegroup/kie-wb-common/commit/449f9bb62969b0ff32cd9ac922c14611e0a215e1", "message": "AF-2582 : Package list dropdown should load faster", "committedDate": "2020-08-06T17:40:14Z", "type": "forcePushed"}, {"oid": "1022aac5ad1cfbbf772703ba5badd940383f5d28", "url": "https://github.com/kiegroup/kie-wb-common/commit/1022aac5ad1cfbbf772703ba5badd940383f5d28", "message": "AF-2582 : Package list dropdown should load faster", "committedDate": "2020-08-06T18:31:30Z", "type": "forcePushed"}, {"oid": "e434a2911e225ff06ee47f4ef241600707caf4b2", "url": "https://github.com/kiegroup/kie-wb-common/commit/e434a2911e225ff06ee47f4ef241600707caf4b2", "message": "AF-2582 : Package list dropdown should load faster", "committedDate": "2020-08-06T18:40:32Z", "type": "forcePushed"}, {"oid": "e79ea1ace33104d47deff3cf546cbb40669db823", "url": "https://github.com/kiegroup/kie-wb-common/commit/e79ea1ace33104d47deff3cf546cbb40669db823", "message": "AF-2582 : Package list dropdown should load faster", "committedDate": "2020-08-07T08:02:18Z", "type": "forcePushed"}, {"oid": "222decbbb63a2cfef59362821e6489478f29c4c5", "url": "https://github.com/kiegroup/kie-wb-common/commit/222decbbb63a2cfef59362821e6489478f29c4c5", "message": "AF-2582 : Package list dropdown should load faster", "committedDate": "2020-08-07T10:30:06Z", "type": "forcePushed"}, {"oid": "9168b15e63f9ac508d7b55e18907c5fed3fccecc", "url": "https://github.com/kiegroup/kie-wb-common/commit/9168b15e63f9ac508d7b55e18907c5fed3fccecc", "message": "AF-2582 : Package list dropdown should load faster", "committedDate": "2020-08-07T11:09:32Z", "type": "forcePushed"}, {"oid": "ea03ef34b1f1934f9bc8f4ff8eb090ab02938905", "url": "https://github.com/kiegroup/kie-wb-common/commit/ea03ef34b1f1934f9bc8f4ff8eb090ab02938905", "message": "fixes", "committedDate": "2020-09-03T09:13:37Z", "type": "forcePushed"}, {"oid": "e2ec11766ed592d727270921d61959cad188ae88", "url": "https://github.com/kiegroup/kie-wb-common/commit/e2ec11766ed592d727270921d61959cad188ae88", "message": "AF-2582 : Package list dropdown should load faster", "committedDate": "2020-09-03T10:10:21Z", "type": "forcePushed"}, {"oid": "e0b3de38f38d5f34cf2d7dbcb463373482938750", "url": "https://github.com/kiegroup/kie-wb-common/commit/e0b3de38f38d5f34cf2d7dbcb463373482938750", "message": "AF-2582 : Package list dropdown should load faster", "committedDate": "2020-09-07T10:09:40Z", "type": "forcePushed"}, {"oid": "2e182711473e57d8fc2074331c82924104cbd293", "url": "https://github.com/kiegroup/kie-wb-common/commit/2e182711473e57d8fc2074331c82924104cbd293", "message": "AF-2582 : Package list dropdown should load faster", "committedDate": "2020-09-09T07:43:25Z", "type": "forcePushed"}, {"oid": "9eabd711f82319c569453ceb74256971f295dc91", "url": "https://github.com/kiegroup/kie-wb-common/commit/9eabd711f82319c569453ceb74256971f295dc91", "message": "AF-2582 : Package list dropdown should load faster", "committedDate": "2020-09-15T18:39:19Z", "type": "forcePushed"}, {"oid": "f1542aef59e39c114cf3f386851221949f37a1b0", "url": "https://github.com/kiegroup/kie-wb-common/commit/f1542aef59e39c114cf3f386851221949f37a1b0", "message": "AF-2582 : Package list dropdown should load faster", "committedDate": "2020-09-21T14:27:42Z", "type": "commit"}, {"oid": "f1542aef59e39c114cf3f386851221949f37a1b0", "url": "https://github.com/kiegroup/kie-wb-common/commit/f1542aef59e39c114cf3f386851221949f37a1b0", "message": "AF-2582 : Package list dropdown should load faster", "committedDate": "2020-09-21T14:27:42Z", "type": "forcePushed"}]}