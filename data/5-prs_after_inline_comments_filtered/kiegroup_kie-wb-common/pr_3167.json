{"pr_number": 3167, "pr_title": "DROOLS-5060: [DMN Designer] Editor allows node with prefix/trailing space", "pr_createdAt": "2020-02-18T16:54:34Z", "pr_url": "https://github.com/kiegroup/kie-wb-common/pull/3167", "timeline": [{"oid": "d848b7b7fc29ef11356d4b1083ed3ca20bc7db59", "url": "https://github.com/kiegroup/kie-wb-common/commit/d848b7b7fc29ef11356d4b1083ed3ca20bc7db59", "message": "Updates following Sonarcloud analysis", "committedDate": "2020-02-19T10:07:36Z", "type": "forcePushed"}, {"oid": "13584dceeeccf39e11485f866ca211f910d0f636", "url": "https://github.com/kiegroup/kie-wb-common/commit/13584dceeeccf39e11485f866ca211f910d0f636", "message": "Updates following peer review.", "committedDate": "2020-02-25T21:23:46Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMwMzIyNQ==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3167#discussion_r384303225", "bodyText": "Can't we use Objects.equals(value, name.value)?", "author": "jomarko", "createdAt": "2020-02-26T06:56:48Z", "path": "kie-wb-common-dmn/kie-wb-common-dmn-api/src/main/java/org/kie/workbench/common/dmn/api/property/dmn/NameHolder.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.kie.workbench.common.dmn.api.property.dmn;\n+\n+import org.jboss.errai.common.client.api.annotations.Portable;\n+import org.jboss.errai.databinding.client.api.Bindable;\n+import org.kie.workbench.common.dmn.api.property.DMNProperty;\n+import org.kie.workbench.common.forms.adf.definitions.annotations.metaModel.FieldDefinition;\n+import org.kie.workbench.common.forms.adf.definitions.annotations.metaModel.FieldValue;\n+import org.kie.workbench.common.forms.adf.definitions.annotations.metaModel.I18nMode;\n+import org.kie.workbench.common.stunner.core.definition.annotation.Property;\n+import org.kie.workbench.common.stunner.core.definition.annotation.property.Type;\n+import org.kie.workbench.common.stunner.core.definition.annotation.property.Value;\n+import org.kie.workbench.common.stunner.core.definition.property.PropertyMetaTypes;\n+import org.kie.workbench.common.stunner.core.definition.property.PropertyType;\n+import org.kie.workbench.common.stunner.core.util.HashUtil;\n+\n+@Portable\n+@Bindable\n+@Property(meta = PropertyMetaTypes.NAME)\n+@FieldDefinition(i18nMode = I18nMode.OVERRIDE_I18N_KEY)\n+public class NameHolder implements DMNProperty {\n+\n+    public static final String DEFAULT_NAME = \"\";\n+\n+    @Type\n+    public static final PropertyType type = new NamePropertyType();\n+\n+    @Value\n+    @FieldValue\n+    private Name value;\n+\n+    public NameHolder() {\n+        this(new Name(DEFAULT_NAME));\n+    }\n+\n+    public NameHolder(final Name value) {\n+        this.value = value;\n+    }\n+\n+    public Name getValue() {\n+        return value;\n+    }\n+\n+    public void setValue(final Name value) {\n+        this.value = value;\n+    }\n+\n+    @Override\n+    public boolean equals(final Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (!(o instanceof NameHolder)) {\n+            return false;\n+        }\n+\n+        final NameHolder name = (NameHolder) o;\n+\n+        return value != null ? value.equals(name.value) : name.value == null;", "originalCommit": "13584dceeeccf39e11485f866ca211f910d0f636", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM2NjAwMw==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3167#discussion_r384366003", "bodyText": "Fixed in new commit.", "author": "manstis", "createdAt": "2020-02-26T09:23:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMwMzIyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMwNzgyNQ==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3167#discussion_r384307825", "bodyText": "I think we can remove this /**/", "author": "jomarko", "createdAt": "2020-02-26T07:13:05Z", "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/editors/included/grid/BaseCardComponent.java", "diffHunk": "@@ -91,9 +92,9 @@ public HTMLElement getContent() {\n \n             final String oldName = getIncludedModel().getName();\n \n-            getIncludedModel().setName(newName);\n+            getIncludedModel().setName(NameUtils.normaliseName(newName));\n \n-            if (getIncludedModel().isValid()) {\n+            if (getIncludedModel().isValid()) {/**/", "originalCommit": "13584dceeeccf39e11485f866ca211f910d0f636", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM2NjIzOQ==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3167#discussion_r384366239", "bodyText": "Fixed in new commit.", "author": "manstis", "createdAt": "2020-02-26T09:24:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMwNzgyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMwODUzNw==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3167#discussion_r384308537", "bodyText": "Isn't the jira just about DRG elements? Are data types DRGElements?", "author": "jomarko", "createdAt": "2020-02-26T07:15:23Z", "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/editors/types/listview/DataTypeListItem.java", "diffHunk": "@@ -430,7 +431,7 @@ private boolean isAReferenceToDestroyedDataType(final DataType dataType) {\n     DataType updateProperties(final DataType dataType) {\n         return dataTypeManager\n                 .from(dataType)\n-                .withName(getName())\n+                .withName(NameUtils.normaliseName(getName()))", "originalCommit": "13584dceeeccf39e11485f866ca211f910d0f636", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM2OTg5Nw==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3167#discussion_r384369897", "bodyText": "@jomarko The final criteria was DRGElement names, ItemDefinition names and @danielzhe spotted Import aliases too.", "author": "manstis", "createdAt": "2020-02-26T09:30:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMwODUzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMwODkxNQ==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3167#discussion_r384308915", "bodyText": "magic number you are saying? ... and who is the magician that do magic with this magic number?", "author": "jomarko", "createdAt": "2020-02-26T07:16:28Z", "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/property/dmn/NameFieldProvider.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.dmn.client.property.dmn;\n+\n+import javax.enterprise.context.Dependent;\n+\n+import org.kie.workbench.common.dmn.api.property.dmn.Name;\n+import org.kie.workbench.common.dmn.api.property.dmn.NameFieldType;\n+import org.kie.workbench.common.forms.fields.shared.fieldTypes.basic.BasicTypeFieldProvider;\n+import org.kie.workbench.common.forms.model.TypeInfo;\n+\n+@Dependent\n+public class NameFieldProvider extends BasicTypeFieldProvider<NameFieldDefinition> {\n+\n+    //Arbitrary 'magic' number", "originalCommit": "13584dceeeccf39e11485f866ca211f910d0f636", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM3MzI0MA==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3167#discussion_r384373240", "bodyText": "LOL.. Too much copy and paste from elsewhere.\nThe priority is used to the Properties Panel code to find a provider for a field definition. Since we only have one provider for NameFieldDefinition the value can be anything we like. I've removed the comment and set to 0.", "author": "manstis", "createdAt": "2020-02-26T09:36:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMwODkxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMwOTkxMA==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3167#discussion_r384309910", "bodyText": "please remove comment", "author": "jomarko", "createdAt": "2020-02-26T07:19:40Z", "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/test/java/org/kie/workbench/common/dmn/client/editors/included/grid/BaseCardComponentTest.java", "diffHunk": "@@ -144,18 +144,27 @@ public void testGetContent() {\n \n     @Test\n     public void testOnTitleChangedWhenIncludedModelIsValid() {\n+        doTestOnTitleChangedWhenIncludedModelIsValid(\"newName\", \"newName\");\n+    }\n+\n+    @Test\n+    public void testOnTitleChangedWhenIncludedModelIsValidWithWhitespace() {\n+        doTestOnTitleChangedWhenIncludedModelIsValid(\"   newName   \", \"newName\");\n+    }\n+\n+    private void doTestOnTitleChangedWhenIncludedModelIsValid(final String newName,\n+                                                              final String expectedNewName) {\n         final DMNCardsGridComponent grid = mock(DMNCardsGridComponent.class);\n         final DMNIncludedModelActiveRecord includedModel = spy(new DMNIncludedModelActiveRecord(null));\n-        final String newName = \"newName\";\n \n         doReturn(true).when(includedModel).isValid();\n-        doReturn(emptyList()).when(includedModel).update();\n+        doReturn(emptyList()).when(includedModel).update();/**/", "originalCommit": "13584dceeeccf39e11485f866ca211f910d0f636", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM2NjU2MQ==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3167#discussion_r384366561", "bodyText": "Fixed in new commit.", "author": "manstis", "createdAt": "2020-02-26T09:24:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMwOTkxMA=="}], "type": "inlineReview"}, {"oid": "6e8b74198d94f3c15f83a12918002009d42dc28f", "url": "https://github.com/kiegroup/kie-wb-common/commit/6e8b74198d94f3c15f83a12918002009d42dc28f", "message": "DROOLS-5060: [DMN Designer] Editor allows node with prefix/trailing space", "committedDate": "2020-02-26T09:10:32Z", "type": "commit"}, {"oid": "987cd9272d13b4315fd57a118b94ef65adebd476", "url": "https://github.com/kiegroup/kie-wb-common/commit/987cd9272d13b4315fd57a118b94ef65adebd476", "message": "Updates following Sonarcloud analysis", "committedDate": "2020-02-26T09:10:32Z", "type": "commit"}, {"oid": "aa81beb90b7f4ae363dccd251b28cb295005193d", "url": "https://github.com/kiegroup/kie-wb-common/commit/aa81beb90b7f4ae363dccd251b28cb295005193d", "message": "Add some more tests to keep Sonarcloud happy...", "committedDate": "2020-02-26T09:10:32Z", "type": "commit"}, {"oid": "149507e272847cae0b64874e442b8b5dbef00f07", "url": "https://github.com/kiegroup/kie-wb-common/commit/149507e272847cae0b64874e442b8b5dbef00f07", "message": "Updates following peer review.", "committedDate": "2020-02-26T09:10:32Z", "type": "commit"}, {"oid": "fd5fa508876a4a76c8fba5025b609c8d95ef2a6d", "url": "https://github.com/kiegroup/kie-wb-common/commit/fd5fa508876a4a76c8fba5025b609c8d95ef2a6d", "message": "Updates following peer review.", "committedDate": "2020-02-26T09:59:31Z", "type": "commit"}, {"oid": "fd5fa508876a4a76c8fba5025b609c8d95ef2a6d", "url": "https://github.com/kiegroup/kie-wb-common/commit/fd5fa508876a4a76c8fba5025b609c8d95ef2a6d", "message": "Updates following peer review.", "committedDate": "2020-02-26T09:59:31Z", "type": "forcePushed"}]}