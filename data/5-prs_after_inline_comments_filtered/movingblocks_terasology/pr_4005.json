{"pr_number": 4005, "pr_title": "chore: more descriptive error message on spawn failure", "pr_createdAt": "2020-05-30T04:07:55Z", "pr_url": "https://github.com/MovingBlocks/Terasology/pull/4005", "timeline": [{"oid": "9e93d6cac38c0e39d3513cbfb8a38284c78ae639", "url": "https://github.com/MovingBlocks/Terasology/commit/9e93d6cac38c0e39d3513cbfb8a38284c78ae639", "message": "chore: more descriptive error message on spawn failure", "committedDate": "2020-05-30T04:03:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzIxNTgwOA==", "url": "https://github.com/MovingBlocks/Terasology/pull/4005#discussion_r433215808", "bodyText": "I think the \"right\" fix for this is to change the method signature to return an Optional<Vector3f>. Imho there is nothing exceptional about a find... method not finding something.\nAn alternative which leaves the signature as is would be to return null instead (another way of encoding the no spawn position was found).\nI like the Optional better as it forces the calling site to react on the possibility of failure.\nI don't think that a plain RuntimeException is the right thing to use here, as it is way too generic, and not really necessary. If we'd go for \"exception-based programming\" we'd introduce a NoSpawnPositionFoundException to catch further up the chain...", "author": "skaldarnar", "createdAt": "2020-06-01T12:53:11Z", "path": "engine/src/main/java/org/terasology/logic/players/PlayerFactory.java", "diffHunk": "@@ -93,7 +93,9 @@ public Vector3f findSpawnPositionFromLocationComponent(LocationComponent locatio\n         EntityBuilder builder = entityManager.newBuilder(\"engine:player\");\n         float extraSpace = 0.5f;  // spawn a little bit above the ground\n         float entityHeight = getHeightOf(builder) + extraSpace;\n-        return findSpawnPos(JomlUtil.from(locationComponent.getWorldPosition()), entityHeight).get(); // TODO: Handle Optional being empty\n+        return findSpawnPos(JomlUtil.from(locationComponent.getWorldPosition()), entityHeight)", "originalCommit": "9e93d6cac38c0e39d3513cbfb8a38284c78ae639", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI4NTQ5MA==", "url": "https://github.com/MovingBlocks/Terasology/pull/4005#discussion_r433285490", "bodyText": "Oh, this is by no means a fix.\nthis is a patch to a known-broken method to produce a more recognizable failure message when it breaks.", "author": "keturn", "createdAt": "2020-06-01T14:58:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzIxNTgwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzMxMDAxOA==", "url": "https://github.com/MovingBlocks/Terasology/pull/4005#discussion_r433310018", "bodyText": "Right, the TODO is still there \ud83d\ude05 Baby step improvements ^^", "author": "skaldarnar", "createdAt": "2020-06-01T15:34:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzIxNTgwOA=="}], "type": "inlineReview"}]}