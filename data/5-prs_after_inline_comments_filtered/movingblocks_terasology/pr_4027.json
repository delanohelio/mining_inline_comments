{"pr_number": 4027, "pr_title": "feat(JOML): Migrate ViewFrustum", "pr_createdAt": "2020-06-03T06:23:45Z", "pr_url": "https://github.com/MovingBlocks/Terasology/pull/4027", "timeline": [{"oid": "563ebf7ecd0cb3202c12bb24c7c031b989519c55", "url": "https://github.com/MovingBlocks/Terasology/commit/563ebf7ecd0cb3202c12bb24c7c031b989519c55", "message": "feat(JOML): Migrate ViewFrustum", "committedDate": "2020-06-03T06:22:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTgwMTcyNQ==", "url": "https://github.com/MovingBlocks/Terasology/pull/4027#discussion_r435801725", "bodyText": "I think as long as AABB is being used, we should provide a converter method in JomlUtil.\nThat way we don't have to duplicate the logic like this.", "author": "kBlaszczyk", "createdAt": "2020-06-05T09:27:44Z", "path": "engine/src/main/java/org/terasology/rendering/cameras/ViewFrustum.java", "diffHunk": "@@ -147,35 +156,80 @@ public boolean intersects(AABB aabb) {\n \n         for (int i = 0; i < 6; i++) {\n             if (planes[i].getA() * (aabbVertices[0].x - cp.x) + planes[i].getB() * (aabbVertices[0].y - cp.y)\n-                    + planes[i].getC() * (aabbVertices[0].z - cp.z) + planes[i].getD() > 0) {\n+                + planes[i].getC() * (aabbVertices[0].z - cp.z) + planes[i].getD() > 0) {\n                 continue;\n             }\n             if (planes[i].getA() * (aabbVertices[1].x - cp.x) + planes[i].getB() * (aabbVertices[1].y - cp.y)\n-                    + planes[i].getC() * (aabbVertices[1].z - cp.z) + planes[i].getD() > 0) {\n+                + planes[i].getC() * (aabbVertices[1].z - cp.z) + planes[i].getD() > 0) {\n                 continue;\n             }\n             if (planes[i].getA() * (aabbVertices[2].x - cp.x) + planes[i].getB() * (aabbVertices[2].y - cp.y)\n-                    + planes[i].getC() * (aabbVertices[2].z - cp.z) + planes[i].getD() > 0) {\n+                + planes[i].getC() * (aabbVertices[2].z - cp.z) + planes[i].getD() > 0) {\n                 continue;\n             }\n             if (planes[i].getA() * (aabbVertices[3].x - cp.x) + planes[i].getB() * (aabbVertices[3].y - cp.y)\n-                    + planes[i].getC() * (aabbVertices[3].z - cp.z) + planes[i].getD() > 0) {\n+                + planes[i].getC() * (aabbVertices[3].z - cp.z) + planes[i].getD() > 0) {\n                 continue;\n             }\n             if (planes[i].getA() * (aabbVertices[4].x - cp.x) + planes[i].getB() * (aabbVertices[4].y - cp.y)\n-                    + planes[i].getC() * (aabbVertices[4].z - cp.z) + planes[i].getD() > 0) {\n+                + planes[i].getC() * (aabbVertices[4].z - cp.z) + planes[i].getD() > 0) {\n                 continue;\n             }\n             if (planes[i].getA() * (aabbVertices[5].x - cp.x) + planes[i].getB() * (aabbVertices[5].y - cp.y)\n-                    + planes[i].getC() * (aabbVertices[5].z - cp.z) + planes[i].getD() > 0) {\n+                + planes[i].getC() * (aabbVertices[5].z - cp.z) + planes[i].getD() > 0) {\n                 continue;\n             }\n             if (planes[i].getA() * (aabbVertices[6].x - cp.x) + planes[i].getB() * (aabbVertices[6].y - cp.y)\n-                    + planes[i].getC() * (aabbVertices[6].z - cp.z) + planes[i].getD() > 0) {\n+                + planes[i].getC() * (aabbVertices[6].z - cp.z) + planes[i].getD() > 0) {\n                 continue;\n             }\n             if (planes[i].getA() * (aabbVertices[7].x - cp.x) + planes[i].getB() * (aabbVertices[7].y - cp.y)\n-                    + planes[i].getC() * (aabbVertices[7].z - cp.z) + planes[i].getD() > 0) {\n+                + planes[i].getC() * (aabbVertices[7].z - cp.z) + planes[i].getD() > 0) {\n+                continue;\n+            }\n+            return false;\n+        }\n+\n+        return true;\n+    }\n+\n+    /**\n+     * Returns true if this view frustum intersects the given AABB.\n+     */\n+    public boolean intersects(AABBf aabb) {", "originalCommit": "563ebf7ecd0cb3202c12bb24c7c031b989519c55", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTgwNDY0Mw==", "url": "https://github.com/MovingBlocks/Terasology/pull/4027#discussion_r435804643", "bodyText": "The deprecated method should redirect to the new one to get rid of duplication:\nreturn intersects(JomlUtil.from(position), radius);", "author": "kBlaszczyk", "createdAt": "2020-06-05T09:33:02Z", "path": "engine/src/main/java/org/terasology/rendering/cameras/ViewFrustum.java", "diffHunk": "@@ -186,6 +240,9 @@ public boolean intersects(AABB aabb) {\n \n     /**\n      * Returns true if the given sphere intersects the given AABB.\n+     *\n+     * @deprecated This is scheduled for removal in an upcoming version method will be replaced with JOML implementation\n+     *     {@link #intersects(Vector3fc, float)}.\n      */\n     public boolean intersects(Vector3f position, float radius) {\n         for (int i = 0; i < 6; i++) {", "originalCommit": "563ebf7ecd0cb3202c12bb24c7c031b989519c55", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4264269fd2271363a0417f6dd359b478d86e72a3", "url": "https://github.com/MovingBlocks/Terasology/commit/4264269fd2271363a0417f6dd359b478d86e72a3", "message": "add jomlutil for abb and tweak ViewFrustum", "committedDate": "2020-06-05T18:45:15Z", "type": "commit"}, {"oid": "51ce855d15acdd47658a9e14477b9541239f1033", "url": "https://github.com/MovingBlocks/Terasology/commit/51ce855d15acdd47658a9e14477b9541239f1033", "message": "redirect intersects", "committedDate": "2020-06-05T18:49:44Z", "type": "commit"}]}