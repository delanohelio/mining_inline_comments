{"pr_number": 2158, "pr_title": "Fix stack overflow error in assertIterableEquals", "pr_createdAt": "2020-01-20T12:17:46Z", "pr_url": "https://github.com/junit-team/junit5/pull/2158", "timeline": [{"oid": "990d84fd62d0579e64f76b8b6cb54256ea81c4e0", "url": "https://github.com/junit-team/junit5/commit/990d84fd62d0579e64f76b8b6cb54256ea81c4e0", "message": "Fix stack overflow error in assertIterableEquals\n\nPrior to this commit an iterable of iterables (here instances\nof java.nio.file.Path) passed to method `assertIterableEquals`\nin class `Assertions` of the JUnit Jupiter API yielded a\n`StackOverflowError`.\n\nThis commit prevent the eternal while-loop by leveraging the\n`equals()`-implementation of the non-null expected element.\n\nFixes #2157", "committedDate": "2020-01-20T12:16:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY4MzQ2Nw==", "url": "https://github.com/junit-team/junit5/pull/2158#discussion_r368683467", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tif (expectedElement != null && expectedElement.equals(actualElement)) {\n          \n          \n            \n            \t\t\tif (Objects.equals(expectedElement, actualElement)) {\n          \n      \n    \n    \n  \n\nYou can then also merge the two ifs into one because Objects.equals() already checks for ==.", "author": "marcphilipp", "createdAt": "2020-01-20T18:38:14Z", "path": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/AssertIterableEquals.java", "diffHunk": "@@ -67,6 +67,11 @@ private static void assertIterableEquals(Iterable<?> expected, Iterable<?> actua\n \t\t\tif (expectedElement == actualElement) {\n \t\t\t\tcontinue;\n \t\t\t}\n+\t\t\t// Prevent stack overflow error.\n+\t\t\t// See https://github.com/junit-team/junit5/issues/2157 for details.\n+\t\t\tif (expectedElement != null && expectedElement.equals(actualElement)) {", "originalCommit": "990d84fd62d0579e64f76b8b6cb54256ea81c4e0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY4NDk3MQ==", "url": "https://github.com/junit-team/junit5/pull/2158#discussion_r368684971", "bodyText": "Neat improvement.", "author": "sormuras", "createdAt": "2020-01-20T18:43:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY4MzQ2Nw=="}], "type": "inlineReview"}, {"oid": "cb715e95d3c9c1d37e75a617af939f0f68208182", "url": "https://github.com/junit-team/junit5/commit/cb715e95d3c9c1d37e75a617af939f0f68208182", "message": "Use Objects.equals()\n\nCo-Authored-By: Marc Philipp <mail@marcphilipp.de>", "committedDate": "2020-01-20T18:42:30Z", "type": "commit"}, {"oid": "052637b1ef33cac18a737a57fa5c31c862a0613d", "url": "https://github.com/junit-team/junit5/commit/052637b1ef33cac18a737a57fa5c31c862a0613d", "message": "Add test for interlocked recursive structures", "committedDate": "2020-01-20T18:57:01Z", "type": "commit"}, {"oid": "9cd5a40587dd5a27a8cd1c2f87e6575194f3892d", "url": "https://github.com/junit-team/junit5/commit/9cd5a40587dd5a27a8cd1c2f87e6575194f3892d", "message": "Simplify code", "committedDate": "2020-01-20T18:58:06Z", "type": "commit"}]}