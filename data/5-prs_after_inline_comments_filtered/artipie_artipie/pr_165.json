{"pr_number": 165, "pr_title": "Implemented AuthFromYaml for #146", "pr_createdAt": "2020-05-21T17:12:38Z", "pr_url": "https://github.com/artipie/artipie/pull/165", "timeline": [{"oid": "c3a679eef3b2a444b3a775dfa89a96817eede729", "url": "https://github.com/artipie/artipie/commit/c3a679eef3b2a444b3a775dfa89a96817eede729", "message": "Implemented AuthFromYaml for #146", "committedDate": "2020-05-21T17:11:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA5NDM4Nw==", "url": "https://github.com/artipie/artipie/pull/165#discussion_r429094387", "bodyText": "@olenagerasimova most probably we will need to parse data from Publisher to read authentication config, if so, we have to return CompletionStage<List<>> here instead of List<>", "author": "g4s8", "createdAt": "2020-05-22T07:46:47Z", "path": "src/main/java/com/artipie/Settings.java", "diffHunk": "@@ -39,4 +41,12 @@\n      * @throws IOException In case of problems with reading settings.\n      */\n     Storage storage() throws IOException;\n+\n+    /**\n+     * Provides authorization.\n+     *\n+     * @return Authentication instance\n+     * @throws IOException In case of problems with reading settings.\n+     */\n+    List<Authentication> auth() throws IOException;", "originalCommit": "c3a679eef3b2a444b3a775dfa89a96817eede729", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA5NTQyOA==", "url": "https://github.com/artipie/artipie/pull/165#discussion_r429095428", "bodyText": "@olenagerasimova I'd also make credentials.type to be required and either be env or file, so AuthFromEnv will be enabled only when type == env", "author": "g4s8", "createdAt": "2020-05-22T07:48:53Z", "path": "src/main/java/com/artipie/YamlSettings.java", "diffHunk": "@@ -65,4 +68,20 @@ public Storage storage() throws IOException {\n                 this.vertx\n         ).storage();\n     }\n+\n+    @Override\n+    public List<Authentication> auth() throws IOException {\n+        //@checkstyle MethodBodyCommentsCheck (11 lines)\n+        // @todo #146:30min Implement this method to obtain authentications: for now\n+        //  we have AuthFromEnv, which is always available and should be active by default, and", "originalCommit": "c3a679eef3b2a444b3a775dfa89a96817eede729", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE0MzY0Mw==", "url": "https://github.com/artipie/artipie/pull/165#discussion_r429143643", "bodyText": "@g4s8 ok, then we do not need a list (for now at least)", "author": "olenagerasimova", "createdAt": "2020-05-22T09:32:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA5NTQyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTExODcxMQ==", "url": "https://github.com/artipie/artipie/pull/165#discussion_r429118711", "bodyText": "@olenagerasimova I think this name doesn't describe this method correctly according to javadocs", "author": "g4s8", "createdAt": "2020-05-22T08:39:41Z", "path": "src/main/java/com/artipie/auth/AuthFromYaml.java", "diffHunk": "@@ -52,12 +56,38 @@\n      * Ctor.\n      * @param cred Credentials settings\n      */\n-    public YamlAuth(final YamlMapping cred) {\n+    public AuthFromYaml(final YamlMapping cred) {\n         this.cred = cred;\n     }\n \n     @Override\n     public Optional<String> user(final String user, final String pass) {\n-        throw new NotImplementedException(\"Not yet implemented\");\n+        final YamlMapping users = this.cred.yamlMapping(\"credentials\");\n+        Optional<String> res = Optional.empty();\n+        if (users != null && users.yamlMapping(user) != null) {\n+            final String stored = users.yamlMapping(user).string(\"pass\");\n+            if (stored != null && check(stored, pass)) {\n+                res = Optional.of(user);\n+            }\n+        }\n+        return res;\n+    }\n+\n+    /**\n+     * Obtains password from settings by username.\n+     * @param stored Password from settings\n+     * @param given Password to check\n+     * @return Password if present and properly formatted\n+     */\n+    private static boolean check(final String stored, final String given) {", "originalCommit": "c3a679eef3b2a444b3a775dfa89a96817eede729", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTExOTEwNQ==", "url": "https://github.com/artipie/artipie/pull/165#discussion_r429119105", "bodyText": "@olenagerasimova why find instead of match? match checks the whole string, but find only first match", "author": "g4s8", "createdAt": "2020-05-22T08:40:29Z", "path": "src/main/java/com/artipie/auth/AuthFromYaml.java", "diffHunk": "@@ -52,12 +56,38 @@\n      * Ctor.\n      * @param cred Credentials settings\n      */\n-    public YamlAuth(final YamlMapping cred) {\n+    public AuthFromYaml(final YamlMapping cred) {\n         this.cred = cred;\n     }\n \n     @Override\n     public Optional<String> user(final String user, final String pass) {\n-        throw new NotImplementedException(\"Not yet implemented\");\n+        final YamlMapping users = this.cred.yamlMapping(\"credentials\");\n+        Optional<String> res = Optional.empty();\n+        if (users != null && users.yamlMapping(user) != null) {\n+            final String stored = users.yamlMapping(user).string(\"pass\");\n+            if (stored != null && check(stored, pass)) {\n+                res = Optional.of(user);\n+            }\n+        }\n+        return res;\n+    }\n+\n+    /**\n+     * Obtains password from settings by username.\n+     * @param stored Password from settings\n+     * @param given Password to check\n+     * @return Password if present and properly formatted\n+     */\n+    private static boolean check(final String stored, final String given) {\n+        boolean res = false;\n+        final Matcher matcher = AuthFromYaml.PSWD.matcher(stored);\n+        if (matcher.find()) {", "originalCommit": "c3a679eef3b2a444b3a775dfa89a96817eede729", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "22c1f2a2af011f92b9cf655a34dbed88e198bdf2", "url": "https://github.com/artipie/artipie/commit/22c1f2a2af011f92b9cf655a34dbed88e198bdf2", "message": "CR #146", "committedDate": "2020-05-22T09:38:26Z", "type": "commit"}, {"oid": "a9fdb4562656eb506df68db51cf4098098188804", "url": "https://github.com/artipie/artipie/commit/a9fdb4562656eb506df68db51cf4098098188804", "message": "Merge branch 'master' of https://github.com/artipie/artipie into 146-auth-from-yaml-impl", "committedDate": "2020-05-22T09:40:39Z", "type": "commit"}, {"oid": "fdc0391e7485ce1654e6535e64f85edc765e5ca7", "url": "https://github.com/artipie/artipie/commit/fdc0391e7485ce1654e6535e64f85edc765e5ca7", "message": "Merge branch 'master' of https://github.com/artipie/artipie into 146-auth-from-yaml-impl", "committedDate": "2020-05-22T12:45:20Z", "type": "commit"}, {"oid": "001ae2940d7d2e373659b4062df5ff5c025d40e8", "url": "https://github.com/artipie/artipie/commit/001ae2940d7d2e373659b4062df5ff5c025d40e8", "message": "puzzle formatting corrected #146", "committedDate": "2020-05-22T12:45:45Z", "type": "commit"}]}