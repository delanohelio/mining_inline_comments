{"pr_number": 187, "pr_title": "Support hierarchical paths for repos", "pr_createdAt": "2020-06-02T12:30:07Z", "pr_url": "https://github.com/artipie/artipie/pull/187", "timeline": [{"oid": "a4ba76dc5c54b374c5ec14a56db7c8a89a594ea4", "url": "https://github.com/artipie/artipie/commit/a4ba76dc5c54b374c5ec14a56db7c8a89a594ea4", "message": "#178 - hierarchical paths for repos", "committedDate": "2020-06-02T12:26:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg5NTA2MQ==", "url": "https://github.com/artipie/artipie/pull/187#discussion_r433895061", "bodyText": "The Javadoc has been copied from FlatLayout", "author": "Sammers21", "createdAt": "2020-06-02T13:56:34Z", "path": "src/main/java/com/artipie/repo/OrgLayout.java", "diffHunk": "@@ -0,0 +1,130 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.repo;\n+\n+import com.artipie.RepoConfig;\n+import com.artipie.Settings;\n+import com.artipie.SliceFromConfig;\n+import com.artipie.asto.Key;\n+import com.artipie.http.Slice;\n+import com.artipie.http.async.AsyncSlice;\n+import com.artipie.http.rs.RsStatus;\n+import com.artipie.http.rs.RsWithBody;\n+import com.artipie.http.rs.RsWithStatus;\n+import com.artipie.http.slice.SliceSimple;\n+import com.jcabi.log.Logger;\n+import io.vertx.reactivex.core.Vertx;\n+import java.nio.charset.StandardCharsets;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.regex.Pattern;\n+import org.cactoos.scalar.Unchecked;\n+\n+/**\n+ * Flat repositories layout.", "originalCommit": "a4ba76dc5c54b374c5ec14a56db7c8a89a594ea4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg5NTYxMg==", "url": "https://github.com/artipie/artipie/pull/187#discussion_r433895612", "bodyText": "How those changes are related to the Pull Request?", "author": "Sammers21", "createdAt": "2020-06-02T13:57:21Z", "path": "src/main/java/com/artipie/Settings.java", "diffHunk": "@@ -80,13 +92,18 @@ public Fake(final Storage storage) {\n         }\n \n         @Override\n-        public Storage storage() throws IOException {", "originalCommit": "a4ba76dc5c54b374c5ec14a56db7c8a89a594ea4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkyNjMzMw==", "url": "https://github.com/artipie/artipie/pull/187#discussion_r433926333", "bodyText": "@Sammers21 it's just a minor cosmetic change in related class", "author": "g4s8", "createdAt": "2020-06-02T14:36:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg5NTYxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkzODk1NQ==", "url": "https://github.com/artipie/artipie/pull/187#discussion_r433938955", "bodyText": "@g4s8, move this change to a separated Pull Request with minor changes since this change has no intersections with this Pull Request goals.", "author": "Sammers21", "createdAt": "2020-06-02T14:53:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg5NTYxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkwNDIxMQ==", "url": "https://github.com/artipie/artipie/pull/187#discussion_r433904211", "bodyText": "Org layout and User based are different terms. I'd suggest sticking with only one, so the Javadoc would be consistent with the actual code", "author": "Sammers21", "createdAt": "2020-06-02T14:06:34Z", "path": "src/main/java/com/artipie/repo/RepoLayout.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.repo;\n+\n+import com.artipie.http.Slice;\n+\n+/**\n+ * Repositories layout.\n+ * <p>\n+ * This object resolves repository HTTP endpoints for specified URL.\n+ * Artipie supports two primary layout configurations:\n+ * <ul>\n+ *     <li>Flat layout - Artipie doesn't use any structural layout, all repositories\n+ *     are located at the root of base path, e.g. URI {@code https://central.artipie.com/maven}\n+ *     accesses {@code maven} repository.</li>\n+ *     <li>User based - Artipie installation has multiple namespaces/organizations/users,", "originalCommit": "a4ba76dc5c54b374c5ec14a56db7c8a89a594ea4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkwNTg1Mw==", "url": "https://github.com/artipie/artipie/pull/187#discussion_r433905853", "bodyText": "Is this change somehow related to the Pull Request?", "author": "Sammers21", "createdAt": "2020-06-02T14:08:18Z", "path": "src/main/java/com/artipie/Settings.java", "diffHunk": "@@ -35,6 +38,7 @@\n  * @since 0.1\n  */\n public interface Settings {\n+", "originalCommit": "a4ba76dc5c54b374c5ec14a56db7c8a89a594ea4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkwODc4Mw==", "url": "https://github.com/artipie/artipie/pull/187#discussion_r433908783", "bodyText": "Except for one field REPO_PREF, how OrgLayout is different from FlatLayout? I could not find any differences.", "author": "Sammers21", "createdAt": "2020-06-02T14:12:10Z", "path": "src/main/java/com/artipie/repo/OrgLayout.java", "diffHunk": "@@ -0,0 +1,130 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.repo;\n+\n+import com.artipie.RepoConfig;\n+import com.artipie.Settings;\n+import com.artipie.SliceFromConfig;\n+import com.artipie.asto.Key;\n+import com.artipie.http.Slice;\n+import com.artipie.http.async.AsyncSlice;\n+import com.artipie.http.rs.RsStatus;\n+import com.artipie.http.rs.RsWithBody;\n+import com.artipie.http.rs.RsWithStatus;\n+import com.artipie.http.slice.SliceSimple;\n+import com.jcabi.log.Logger;\n+import io.vertx.reactivex.core.Vertx;\n+import java.nio.charset.StandardCharsets;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.regex.Pattern;\n+import org.cactoos.scalar.Unchecked;\n+\n+/**\n+ * Flat repositories layout.\n+ * @see RepoLayout\n+ * @since 0.4\n+ * @checkstyle ReturnCountCheck (500 lines)\n+ * @checkstyle ClassDataAbstractionCouplingCheck (500 lines)\n+ */\n+public final class OrgLayout implements RepoLayout {", "originalCommit": "a4ba76dc5c54b374c5ec14a56db7c8a89a594ea4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkxNTY5NQ==", "url": "https://github.com/artipie/artipie/pull/187#discussion_r433915695", "bodyText": "I think it is a code duplication which should be fixed.", "author": "Sammers21", "createdAt": "2020-06-02T14:21:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkwODc4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkyNzI5OA==", "url": "https://github.com/artipie/artipie/pull/187#discussion_r433927298", "bodyText": "@Sammers21 OrgLayout reads two first part of URI to find repository config and to specify storage prefix, FlatLayout uses only first. But it can be refactored later.", "author": "g4s8", "createdAt": "2020-06-02T14:37:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkwODc4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkzOTQ4NQ==", "url": "https://github.com/artipie/artipie/pull/187#discussion_r433939485", "bodyText": "@g4s8, where is the puzzle for that?", "author": "Sammers21", "createdAt": "2020-06-02T14:54:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkwODc4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkwOTM1NQ==", "url": "https://github.com/artipie/artipie/pull/187#discussion_r433909355", "bodyText": "@g4s8 I think, this pattern is too restricted: how about dashes ('-'), underscores ('_') and some other symbols? Valid path symbols can be looked here", "author": "brastak", "createdAt": "2020-06-02T14:12:56Z", "path": "src/main/java/com/artipie/repo/OrgLayout.java", "diffHunk": "@@ -0,0 +1,130 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.repo;\n+\n+import com.artipie.RepoConfig;\n+import com.artipie.Settings;\n+import com.artipie.SliceFromConfig;\n+import com.artipie.asto.Key;\n+import com.artipie.http.Slice;\n+import com.artipie.http.async.AsyncSlice;\n+import com.artipie.http.rs.RsStatus;\n+import com.artipie.http.rs.RsWithBody;\n+import com.artipie.http.rs.RsWithStatus;\n+import com.artipie.http.slice.SliceSimple;\n+import com.jcabi.log.Logger;\n+import io.vertx.reactivex.core.Vertx;\n+import java.nio.charset.StandardCharsets;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.regex.Pattern;\n+import org.cactoos.scalar.Unchecked;\n+\n+/**\n+ * Flat repositories layout.\n+ * @see RepoLayout\n+ * @since 0.4\n+ * @checkstyle ReturnCountCheck (500 lines)\n+ * @checkstyle ClassDataAbstractionCouplingCheck (500 lines)\n+ */\n+public final class OrgLayout implements RepoLayout {\n+\n+    /**\n+     * Repository path prefix.\n+     */\n+    private static final Pattern REPO_PREF =\n+        Pattern.compile(\"/(?:[a-zA-Z0-9]+)/(?:[a-zA-Z0-9]+)(/.*)\");", "originalCommit": "a4ba76dc5c54b374c5ec14a56db7c8a89a594ea4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkzMDA4Nw==", "url": "https://github.com/artipie/artipie/pull/187#discussion_r433930087", "bodyText": "@brastak we have some restrictions for repository names, see https://github.com/artipie/artipie\n\nMake sure that the name of your config file is the name of repository you are going to host, and its name matches [a-z0-9_]{3,32}\n\nSo, I've changed it to [a-zA-Z0-9_]", "author": "g4s8", "createdAt": "2020-06-02T14:41:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkwOTM1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEyNTk4NA==", "url": "https://github.com/artipie/artipie/pull/187#discussion_r434125984", "bodyText": "@g4s8 We need to validate this when instantiate adapters from config or to make restriction weaker. Examples in our README.md violate this constraint (npm-proxy, my-php)", "author": "brastak", "createdAt": "2020-06-02T19:28:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkwOTM1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM4MTY1OA==", "url": "https://github.com/artipie/artipie/pull/187#discussion_r434381658", "bodyText": "@brastak done, fixed", "author": "g4s8", "createdAt": "2020-06-03T08:02:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkwOTM1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkxMDcxNg==", "url": "https://github.com/artipie/artipie/pull/187#discussion_r433910716", "bodyText": "@g4s8 We need test for new param and documentation (please, add todos)", "author": "brastak", "createdAt": "2020-06-02T14:14:53Z", "path": "src/main/java/com/artipie/YamlSettings.java", "diffHunk": "@@ -112,6 +116,23 @@ public Storage storage() throws IOException {\n         return res;\n     }\n \n+    @Override\n+    public RepoLayout layout(final Vertx vertx) throws IOException {\n+        final String layout = Yaml.createYamlInput(this.content)\n+            .readYamlMapping()\n+            .yamlMapping(YamlSettings.META)\n+            .string(\"layout\");", "originalCommit": "a4ba76dc5c54b374c5ec14a56db7c8a89a594ea4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkxOTM0NQ==", "url": "https://github.com/artipie/artipie/pull/187#discussion_r433919345", "bodyText": "The only difference between this pattern and the one at FlatLayout.REPO_PREF is the minimum amount of / symbols and parts in between them, 2 in case of FlatLayout and 3 in this case. This also could be decomposed. An example:\nPattern REPO_PREF = new PathLevel(3)", "author": "Sammers21", "createdAt": "2020-06-02T14:26:28Z", "path": "src/main/java/com/artipie/repo/OrgLayout.java", "diffHunk": "@@ -0,0 +1,130 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.repo;\n+\n+import com.artipie.RepoConfig;\n+import com.artipie.Settings;\n+import com.artipie.SliceFromConfig;\n+import com.artipie.asto.Key;\n+import com.artipie.http.Slice;\n+import com.artipie.http.async.AsyncSlice;\n+import com.artipie.http.rs.RsStatus;\n+import com.artipie.http.rs.RsWithBody;\n+import com.artipie.http.rs.RsWithStatus;\n+import com.artipie.http.slice.SliceSimple;\n+import com.jcabi.log.Logger;\n+import io.vertx.reactivex.core.Vertx;\n+import java.nio.charset.StandardCharsets;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.regex.Pattern;\n+import org.cactoos.scalar.Unchecked;\n+\n+/**\n+ * Flat repositories layout.\n+ * @see RepoLayout\n+ * @since 0.4\n+ * @checkstyle ReturnCountCheck (500 lines)\n+ * @checkstyle ClassDataAbstractionCouplingCheck (500 lines)\n+ */\n+public final class OrgLayout implements RepoLayout {\n+\n+    /**\n+     * Repository path prefix.\n+     */\n+    private static final Pattern REPO_PREF =\n+        Pattern.compile(\"/(?:[a-zA-Z0-9]+)/(?:[a-zA-Z0-9]+)(/.*)\");", "originalCommit": "a4ba76dc5c54b374c5ec14a56db7c8a89a594ea4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkzNDE1Mg==", "url": "https://github.com/artipie/artipie/pull/187#discussion_r433934152", "bodyText": "@Sammers21 Pattern is a final class and can't be extended. Also, we may consider changing the format of first or second part here, so it'll require more changes than using pattern string. I'd keep it as is while the format is not established as a requirement.", "author": "g4s8", "createdAt": "2020-06-02T14:46:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkxOTM0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkzNjM2MA==", "url": "https://github.com/artipie/artipie/pull/187#discussion_r433936360", "bodyText": "@g4s8, how about this?:\nPattern REPO_PREF = Pattern.compile(new PathLevel(3))", "author": "Sammers21", "createdAt": "2020-06-02T14:49:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkxOTM0NQ=="}], "type": "inlineReview"}, {"oid": "448782ad2de072decf0cade1550a2ca91b051fd5", "url": "https://github.com/artipie/artipie/commit/448782ad2de072decf0cade1550a2ca91b051fd5", "message": "#178 - review fixes", "committedDate": "2020-06-02T14:49:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk0NzM0Mg==", "url": "https://github.com/artipie/artipie/pull/187#discussion_r433947342", "bodyText": "(?:[a-zA-Z0-9_]+) repeated 3 times, decompose it somehow so you would not do the same changes 3 times like you did it in 448782a", "author": "Sammers21", "createdAt": "2020-06-02T15:04:36Z", "path": "src/main/java/com/artipie/repo/FlatLayout.java", "diffHunk": "@@ -0,0 +1,133 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.repo;\n+\n+import com.artipie.RepoConfig;\n+import com.artipie.Settings;\n+import com.artipie.SliceFromConfig;\n+import com.artipie.asto.Key;\n+import com.artipie.http.Slice;\n+import com.artipie.http.async.AsyncSlice;\n+import com.artipie.http.rs.RsStatus;\n+import com.artipie.http.rs.RsWithBody;\n+import com.artipie.http.rs.RsWithStatus;\n+import com.artipie.http.slice.SliceSimple;\n+import com.jcabi.log.Logger;\n+import io.vertx.reactivex.core.Vertx;\n+import java.nio.charset.StandardCharsets;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.regex.Pattern;\n+import org.cactoos.scalar.Unchecked;\n+\n+/**\n+ * Flat repositories layout.\n+ * <p>\n+ * Artipie doesn't use any structural layout, all repositories\n+ * are located at the root of base path, e.g. URI {@code https://central.artipie.com/maven}\n+ * accesses {@code maven} repository.\n+ * </p>\n+ * @see RepoLayout\n+ * @since 0.4\n+ * @checkstyle ReturnCountCheck (500 lines)\n+ * @checkstyle ClassDataAbstractionCouplingCheck (500 lines)\n+ */\n+public final class FlatLayout implements RepoLayout {\n+\n+    /**\n+     * Repository path prefix.\n+     */\n+    private static final Pattern REPO_PREF = Pattern.compile(\"/(?:[a-zA-Z0-9_]+)(/.*)\");", "originalCommit": "448782ad2de072decf0cade1550a2ca91b051fd5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk0ODg1NQ==", "url": "https://github.com/artipie/artipie/pull/187#discussion_r433948855", "bodyText": "@Sammers21 see #187 (comment) we can do it later when the format of these parts will be stable", "author": "g4s8", "createdAt": "2020-06-02T15:06:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk0NzM0Mg=="}], "type": "inlineReview"}, {"oid": "6ec609fc8f7f697eba40d94134b00abdde843957", "url": "https://github.com/artipie/artipie/commit/6ec609fc8f7f697eba40d94134b00abdde843957", "message": "#178 - review fixes", "committedDate": "2020-06-03T08:01:46Z", "type": "commit"}]}