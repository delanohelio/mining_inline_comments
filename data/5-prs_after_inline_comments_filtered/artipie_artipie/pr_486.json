{"pr_number": 486, "pr_title": "#479 - AddUpdateUserSlice", "pr_createdAt": "2020-08-21T18:34:49Z", "pr_url": "https://github.com/artipie/artipie/pull/486", "timeline": [{"oid": "80440207329bb4f948c41fda727010a37b8ce880", "url": "https://github.com/artipie/artipie/commit/80440207329bb4f948c41fda727010a37b8ce880", "message": "#479 - AddUpdateUserSlice", "committedDate": "2020-08-21T18:32:57Z", "type": "commit"}, {"oid": "37fd51223834d33c5713497105d1d6ba78f07142", "url": "https://github.com/artipie/artipie/commit/37fd51223834d33c5713497105d1d6ba78f07142", "message": "#479 - Remove todo", "committedDate": "2020-08-21T18:37:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM3NzgyNQ==", "url": "https://github.com/artipie/artipie/pull/486#discussion_r475377825", "bodyText": "@genryxy please, could you correct inconsistency here to avoid misunderstanding in the future? According to artifactory docs PUSH is for update and PUT for creating new users, so \"adds/updates\" should be \"updates/adds\"", "author": "olenagerasimova", "createdAt": "2020-08-24T06:53:18Z", "path": "src/main/java/com/artipie/api/artifactory/AddUpdateUserSlice.java", "diffHunk": "@@ -23,30 +23,79 @@\n  */\n package com.artipie.api.artifactory;\n \n+import com.artipie.Settings;\n+import com.artipie.asto.ext.PublisherAs;\n import com.artipie.http.Response;\n import com.artipie.http.Slice;\n+import com.artipie.http.async.AsyncResponse;\n+import com.artipie.http.rq.RequestLineFrom;\n+import com.artipie.http.rs.RsStatus;\n+import com.artipie.http.rs.RsWithStatus;\n+import java.io.ByteArrayInputStream;\n import java.nio.ByteBuffer;\n import java.util.Map;\n-import org.apache.commons.lang3.NotImplementedException;\n+import java.util.regex.Matcher;\n+import javax.json.Json;\n+import javax.json.JsonObject;\n+import javax.json.JsonReader;\n import org.reactivestreams.Publisher;\n \n /**\n  * Artifactory `PUSH/PUT /api/security/users/{userName}` endpoint,\n  * adds/updates user record in credentials.", "originalCommit": "37fd51223834d33c5713497105d1d6ba78f07142", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM4MTA4NA==", "url": "https://github.com/artipie/artipie/pull/486#discussion_r475381084", "bodyText": "@genryxy please, use thenCompose instead of calling join()\nthis.settings.credentials().thenCompose(\n    cred -> cred.add(username, pswd).thenApply(ok -> new RsWithStatus(RsStatus.OK))\n)", "author": "olenagerasimova", "createdAt": "2020-08-24T07:01:02Z", "path": "src/main/java/com/artipie/api/artifactory/AddUpdateUserSlice.java", "diffHunk": "@@ -23,30 +23,79 @@\n  */\n package com.artipie.api.artifactory;\n \n+import com.artipie.Settings;\n+import com.artipie.asto.ext.PublisherAs;\n import com.artipie.http.Response;\n import com.artipie.http.Slice;\n+import com.artipie.http.async.AsyncResponse;\n+import com.artipie.http.rq.RequestLineFrom;\n+import com.artipie.http.rs.RsStatus;\n+import com.artipie.http.rs.RsWithStatus;\n+import java.io.ByteArrayInputStream;\n import java.nio.ByteBuffer;\n import java.util.Map;\n-import org.apache.commons.lang3.NotImplementedException;\n+import java.util.regex.Matcher;\n+import javax.json.Json;\n+import javax.json.JsonObject;\n+import javax.json.JsonReader;\n import org.reactivestreams.Publisher;\n \n /**\n  * Artifactory `PUSH/PUT /api/security/users/{userName}` endpoint,\n  * adds/updates user record in credentials.\n  * @since 0.10\n- * @todo #444:30min Implement this slice to add/update user from credentials by user name\n- *  obtained from request line, path format is `/api/security/users/{userName}`. Password should\n- *  be obtain from `password` field from json request body.\n- *  Use Credentials#add(java.lang.String, java.lang.String) method to perform the operation and\n- *  return 200 OK status. Do not forget to test this class and add it to ArtipieApi,\n- *  check GetUserSlice as an example.\n  */\n public final class AddUpdateUserSlice implements Slice {\n \n+    /**\n+     * Artipie settings.\n+     */\n+    private final Settings settings;\n+\n+    /**\n+     * Ctor.\n+     * @param settings Artipie setting\n+     */\n+    public AddUpdateUserSlice(final Settings settings) {\n+        this.settings = settings;\n+    }\n+\n     @Override\n     public Response response(final String line, final Iterable<Map.Entry<String, String>> headers,\n         final Publisher<ByteBuffer> body) {\n-        throw new NotImplementedException(\"Not implemented yet\");\n+        final Response res;\n+        final Matcher matcher = GetUserSlice.PTRN.matcher(\n+            new RequestLineFrom(line).uri().toString()\n+        );\n+        if (matcher.matches()) {\n+            final String pswd = AddUpdateUserSlice.password(body);\n+            final String username = matcher.group(\"username\");\n+            res = new AsyncResponse(\n+                this.settings.credentials().thenApply(", "originalCommit": "37fd51223834d33c5713497105d1d6ba78f07142", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM4NTA4Mw==", "url": "https://github.com/artipie/artipie/pull/486#discussion_r475385083", "bodyText": "@genryxy it would be better to change this method signature to return CompletionStage<String> and rewrite it correspondingly", "author": "olenagerasimova", "createdAt": "2020-08-24T07:10:28Z", "path": "src/main/java/com/artipie/api/artifactory/AddUpdateUserSlice.java", "diffHunk": "@@ -23,30 +23,79 @@\n  */\n package com.artipie.api.artifactory;\n \n+import com.artipie.Settings;\n+import com.artipie.asto.ext.PublisherAs;\n import com.artipie.http.Response;\n import com.artipie.http.Slice;\n+import com.artipie.http.async.AsyncResponse;\n+import com.artipie.http.rq.RequestLineFrom;\n+import com.artipie.http.rs.RsStatus;\n+import com.artipie.http.rs.RsWithStatus;\n+import java.io.ByteArrayInputStream;\n import java.nio.ByteBuffer;\n import java.util.Map;\n-import org.apache.commons.lang3.NotImplementedException;\n+import java.util.regex.Matcher;\n+import javax.json.Json;\n+import javax.json.JsonObject;\n+import javax.json.JsonReader;\n import org.reactivestreams.Publisher;\n \n /**\n  * Artifactory `PUSH/PUT /api/security/users/{userName}` endpoint,\n  * adds/updates user record in credentials.\n  * @since 0.10\n- * @todo #444:30min Implement this slice to add/update user from credentials by user name\n- *  obtained from request line, path format is `/api/security/users/{userName}`. Password should\n- *  be obtain from `password` field from json request body.\n- *  Use Credentials#add(java.lang.String, java.lang.String) method to perform the operation and\n- *  return 200 OK status. Do not forget to test this class and add it to ArtipieApi,\n- *  check GetUserSlice as an example.\n  */\n public final class AddUpdateUserSlice implements Slice {\n \n+    /**\n+     * Artipie settings.\n+     */\n+    private final Settings settings;\n+\n+    /**\n+     * Ctor.\n+     * @param settings Artipie setting\n+     */\n+    public AddUpdateUserSlice(final Settings settings) {\n+        this.settings = settings;\n+    }\n+\n     @Override\n     public Response response(final String line, final Iterable<Map.Entry<String, String>> headers,\n         final Publisher<ByteBuffer> body) {\n-        throw new NotImplementedException(\"Not implemented yet\");\n+        final Response res;\n+        final Matcher matcher = GetUserSlice.PTRN.matcher(\n+            new RequestLineFrom(line).uri().toString()\n+        );\n+        if (matcher.matches()) {\n+            final String pswd = AddUpdateUserSlice.password(body);\n+            final String username = matcher.group(\"username\");\n+            res = new AsyncResponse(\n+                this.settings.credentials().thenApply(\n+                    cred -> cred.add(username, pswd)\n+                        .thenApply(ok -> new RsWithStatus(RsStatus.OK))\n+                        .toCompletableFuture()\n+                        .join()\n+                    )\n+                );\n+        } else {\n+            res = new RsWithStatus(RsStatus.BAD_REQUEST);\n+        }\n+        return res;\n     }\n \n+    /**\n+     * Extracts password string from the response body.\n+     * @param body Response body\n+     * @return Password string.\n+     */\n+    private static String password(final Publisher<ByteBuffer> body) {", "originalCommit": "37fd51223834d33c5713497105d1d6ba78f07142", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM4NjUxMQ==", "url": "https://github.com/artipie/artipie/pull/486#discussion_r475386511", "bodyText": "@genryxy AddUpdateUserSlice instead of DeleteUserSlice", "author": "olenagerasimova", "createdAt": "2020-08-24T07:13:33Z", "path": "src/test/java/com/artipie/api/artifactory/AddUpdateUserSliceTest.java", "diffHunk": "@@ -0,0 +1,172 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.api.artifactory;\n+\n+import com.amihaiemil.eoyaml.Yaml;\n+import com.artipie.Credentials;\n+import com.artipie.Settings;\n+import com.artipie.asto.Content;\n+import com.artipie.asto.Key;\n+import com.artipie.asto.Storage;\n+import com.artipie.asto.ext.PublisherAs;\n+import com.artipie.asto.memory.InMemoryStorage;\n+import com.artipie.http.Headers;\n+import com.artipie.http.hm.RsHasStatus;\n+import com.artipie.http.hm.SliceHasResponse;\n+import com.artipie.http.rq.RequestLine;\n+import com.artipie.http.rq.RqMethod;\n+import com.artipie.http.rs.RsStatus;\n+import io.reactivex.Flowable;\n+import java.io.IOException;\n+import java.nio.ByteBuffer;\n+import java.nio.charset.StandardCharsets;\n+import javax.json.Json;\n+import org.hamcrest.MatcherAssert;\n+import org.hamcrest.core.IsEqual;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.EnumSource;\n+\n+/**\n+ * Test for {@link AddUpdateUserSlice}.\n+ *\n+ * @since 0.10\n+ * @checkstyle ClassDataAbstractionCouplingCheck (500 lines)\n+ */\n+@SuppressWarnings(\"PMD.AvoidDuplicateLiterals\")\n+final class AddUpdateUserSliceTest {\n+    @ParameterizedTest\n+    @EnumSource(value = RqMethod.class, names = {\"PUT\", \"POST\"})\n+    void returnsBadRequestOnInvalidRequest(final RqMethod rqmeth) {\n+        MatcherAssert.assertThat(\n+            new DeleteUserSlice(new Settings.Fake()),", "originalCommit": "37fd51223834d33c5713497105d1d6ba78f07142", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ad25765f6f1c4c8f704c487846519abc9c87f8d1", "url": "https://github.com/artipie/artipie/commit/ad25765f6f1c4c8f704c487846519abc9c87f8d1", "message": "#479 - Review fixes", "committedDate": "2020-08-24T11:37:46Z", "type": "commit"}, {"oid": "7e424cf2848208542a3a1ce1eb0ca50e7d015d5e", "url": "https://github.com/artipie/artipie/commit/7e424cf2848208542a3a1ce1eb0ca50e7d015d5e", "message": "Merge remote-tracking branch 'upstream/master' into 479-AddUpdateUserSlice", "committedDate": "2020-08-24T11:38:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTYwMDAyOA==", "url": "https://github.com/artipie/artipie/pull/486#discussion_r475600028", "bodyText": "@genryxy there is no need in using try with resources here as JsonReader closes underlying input source on close() and ByteArrayInputStream does nothing on close().", "author": "olenagerasimova", "createdAt": "2020-08-24T13:29:54Z", "path": "src/main/java/com/artipie/api/artifactory/AddUpdateUserSlice.java", "diffHunk": "@@ -23,30 +23,97 @@\n  */\n package com.artipie.api.artifactory;\n \n+import com.artipie.Settings;\n+import com.artipie.asto.ext.PublisherAs;\n import com.artipie.http.Response;\n import com.artipie.http.Slice;\n+import com.artipie.http.async.AsyncResponse;\n+import com.artipie.http.rq.RequestLineFrom;\n+import com.artipie.http.rs.RsStatus;\n+import com.artipie.http.rs.RsWithStatus;\n+import java.io.ByteArrayInputStream;\n import java.nio.ByteBuffer;\n import java.util.Map;\n-import org.apache.commons.lang3.NotImplementedException;\n+import java.util.Optional;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.CompletionStage;\n+import java.util.regex.Matcher;\n+import javax.json.Json;\n+import javax.json.JsonObject;\n+import javax.json.JsonReader;\n import org.reactivestreams.Publisher;\n \n /**\n  * Artifactory `PUSH/PUT /api/security/users/{userName}` endpoint,\n- * adds/updates user record in credentials.\n+ * updates/adds user record in credentials.\n+ *\n  * @since 0.10\n- * @todo #444:30min Implement this slice to add/update user from credentials by user name\n- *  obtained from request line, path format is `/api/security/users/{userName}`. Password should\n- *  be obtain from `password` field from json request body.\n- *  Use Credentials#add(java.lang.String, java.lang.String) method to perform the operation and\n- *  return 200 OK status. Do not forget to test this class and add it to ArtipieApi,\n- *  check GetUserSlice as an example.\n  */\n public final class AddUpdateUserSlice implements Slice {\n \n+    /**\n+     * Artipie settings.\n+     */\n+    private final Settings settings;\n+\n+    /**\n+     * Ctor.\n+     *\n+     * @param settings Artipie setting\n+     */\n+    public AddUpdateUserSlice(final Settings settings) {\n+        this.settings = settings;\n+    }\n+\n     @Override\n     public Response response(final String line, final Iterable<Map.Entry<String, String>> headers,\n         final Publisher<ByteBuffer> body) {\n-        throw new NotImplementedException(\"Not implemented yet\");\n+        final Response res;\n+        final Matcher matcher = GetUserSlice.PTRN.matcher(\n+            new RequestLineFrom(line).uri().toString()\n+        );\n+        if (matcher.matches()) {\n+            final CompletionStage<Optional<String>> pswd = AddUpdateUserSlice.password(body);\n+            final String username = matcher.group(\"username\");\n+            res = new AsyncResponse(\n+                pswd.thenCompose(\n+                    passw -> passw.map(\n+                        haspassw -> this.settings.credentials()\n+                            .thenCompose(\n+                                cred -> cred.add(username, haspassw)\n+                                    .thenApply(ok -> new RsWithStatus(RsStatus.OK)))\n+                ).orElse(CompletableFuture.completedFuture(new RsWithStatus(RsStatus.NOT_FOUND))))\n+            );\n+        } else {\n+            res = new RsWithStatus(RsStatus.BAD_REQUEST);\n+        }\n+        return res;\n     }\n \n+    /**\n+     * Extracts password string from the response body.\n+     *\n+     * @param body Response body\n+     * @return Password string as completion.\n+     */\n+    private static CompletionStage<Optional<String>> password(final Publisher<ByteBuffer> body) {\n+        return new PublisherAs(body)\n+            .bytes().thenApply(\n+                bytes -> {\n+                    final Optional<String> pswd;\n+                    if (bytes.length == 0) {\n+                        pswd = Optional.empty();\n+                    } else {\n+                        final JsonObject root;\n+                        try (JsonReader reader =\n+                            Json.createReader(new ByteArrayInputStream(bytes))", "originalCommit": "7e424cf2848208542a3a1ce1eb0ca50e7d015d5e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d334f37927057cd230e2cbf0a65c3899d7a9dfb4", "url": "https://github.com/artipie/artipie/commit/d334f37927057cd230e2cbf0a65c3899d7a9dfb4", "message": "#479 - Remove try with resources", "committedDate": "2020-08-24T13:40:37Z", "type": "commit"}]}