{"pr_number": 7821, "pr_title": "Migrating InputStatusService", "pr_createdAt": "2020-04-02T16:53:15Z", "pr_url": "https://github.com/Graylog2/graylog2-server/pull/7821", "timeline": [{"oid": "985841150be202ff29ce46033fe9c960e279ccf4", "url": "https://github.com/Graylog2/graylog2-server/commit/985841150be202ff29ce46033fe9c960e279ccf4", "message": "Migrating the InputStatusService from the enterprise plugins repo to the main repo.\n\nThe InputStatusService was created to support Inputs that need to persist state for the duration of their lifecycle.  It was created to allow the Okta input to checkpoint on seen messages in order to avoid duplicate message processing when the input is restarted.\n\nOriginal PR: https://github.com/Graylog2/graylog-plugin-enterprise-integrations/issues/136", "committedDate": "2020-04-02T16:42:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg0MzY1MQ==", "url": "https://github.com/Graylog2/graylog2-server/pull/7821#discussion_r402843651", "bodyText": "I think we should bind this service in a singleton scope (bind(InputStatusService.class).asEagerSingleton() and add @Singleton annotation to this class for documentation purposes) in the guice bindings to avoid multiple instances of this class. The problem is that every instance would register with the EventBus and since we don't have lifecycle support for this object where we could call unregister on shutdown, we would basically leak references into the event bus. We have that issue in other services as well and mostly solve it by binding the service as a singleton.", "author": "bernd", "createdAt": "2020-04-03T08:43:53Z", "path": "graylog2-server/src/main/java/org/graylog2/inputs/persistence/InputStatusService.java", "diffHunk": "@@ -0,0 +1,93 @@\n+package org.graylog2.inputs.persistence;\n+\n+import com.google.common.eventbus.EventBus;\n+import com.mongodb.DB;\n+import com.mongodb.DBCollection;\n+import org.apache.shiro.event.Subscribe;\n+import org.bson.types.ObjectId;\n+import org.graylog2.bindings.providers.MongoJackObjectMapperProvider;\n+import org.graylog2.database.MongoConnection;\n+import org.graylog2.rest.models.system.inputs.responses.InputDeleted;\n+import org.mongojack.JacksonDBCollection;\n+import org.mongojack.WriteResult;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.inject.Inject;\n+import java.util.Optional;\n+\n+/**\n+ * This is a simple wrapper around MongoDB to allow storage of state data for stateful Inputs.\n+ *\n+ * Inputs using this service are responsible for defining their own model for InputStatusRecord.inputStateData\n+ */\n+public class InputStatusService {\n+    private static final Logger LOG = LoggerFactory.getLogger(InputStatusService.class);\n+\n+    private static final String INPUT_STATUS_COLLECTION = \"input_status\";\n+\n+    private final JacksonDBCollection<InputStatusRecord, ObjectId> statusCollection;\n+\n+    @Inject\n+    public InputStatusService(MongoConnection mongoConnection,\n+                              MongoJackObjectMapperProvider objectMapperProvider,\n+                              EventBus eventBus) {\n+        DB mongoDatabase = mongoConnection.getDatabase();\n+        DBCollection collection = mongoDatabase.getCollection(INPUT_STATUS_COLLECTION);\n+\n+        eventBus.register(this);", "originalCommit": "985841150be202ff29ce46033fe9c960e279ccf4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjk5ODk4MA==", "url": "https://github.com/Graylog2/graylog2-server/pull/7821#discussion_r402998980", "bodyText": "Will do", "author": "waab76", "createdAt": "2020-04-03T13:19:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg0MzY1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg0NzQzOA==", "url": "https://github.com/Graylog2/graylog2-server/pull/7821#discussion_r402847438", "bodyText": "Great idea using any-getter/setter! \ud83d\udc4d", "author": "bernd", "createdAt": "2020-04-03T08:48:11Z", "path": "graylog2-server/src/main/java/org/graylog2/inputs/persistence/InputStateData.java", "diffHunk": "@@ -0,0 +1,71 @@\n+package org.graylog2.inputs.persistence;\n+\n+import com.fasterxml.jackson.annotation.JsonAnyGetter;\n+import com.fasterxml.jackson.annotation.JsonAnySetter;\n+import com.fasterxml.jackson.annotation.JsonAutoDetect;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.annotation.JsonTypeInfo;\n+import com.google.common.collect.Maps;\n+\n+import java.util.Map;\n+import java.util.Objects;\n+\n+@JsonTypeInfo(\n+        use = JsonTypeInfo.Id.NAME,\n+        include = JsonTypeInfo.As.EXISTING_PROPERTY,\n+        property = InputStateData.TYPE_FIELD,\n+        visible = true,\n+        defaultImpl = InputStateData.Fallback.class\n+)\n+public interface InputStateData {\n+    String TYPE_FIELD = \"type\";\n+\n+    @JsonProperty\n+    String type();\n+\n+    public interface Builder<SELF> {\n+        @JsonProperty(TYPE_FIELD)\n+        SELF type(String type);\n+    }\n+\n+    @JsonAutoDetect\n+    class Fallback implements InputStateData {\n+        @JsonProperty\n+        private String type;\n+\n+        private Map<String, Object> props = Maps.newHashMap();\n+\n+        @Override\n+        public String type() {\n+            return type;\n+        }\n+\n+        @JsonAnySetter", "originalCommit": "985841150be202ff29ce46033fe9c960e279ccf4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f049f956ae638eb3d979b47c35c90dca1dc8debc", "url": "https://github.com/Graylog2/graylog2-server/commit/f049f956ae638eb3d979b47c35c90dca1dc8debc", "message": "Add singleton binding and JUnit test", "committedDate": "2020-04-03T17:48:09Z", "type": "commit"}, {"oid": "2d58d4e7f8ffcf0603f45010c18caee5e6faf0a1", "url": "https://github.com/Graylog2/graylog2-server/commit/2d58d4e7f8ffcf0603f45010c18caee5e6faf0a1", "message": "Fix visibility on collection name", "committedDate": "2020-04-03T22:07:25Z", "type": "commit"}, {"oid": "b7aeada5b20570879b89f618f5266504c28e0aa3", "url": "https://github.com/Graylog2/graylog2-server/commit/b7aeada5b20570879b89f618f5266504c28e0aa3", "message": "Add licenses to new files", "committedDate": "2020-04-06T13:16:37Z", "type": "commit"}]}