{"pr_number": 7867, "pr_title": "Removing n+1's in `StreamService#loadAll` by consolidating external loads", "pr_createdAt": "2020-04-13T11:52:46Z", "pr_url": "https://github.com/Graylog2/graylog2-server/pull/7867", "timeline": [{"oid": "a41888a1c43c8254ef538d142eeb1b248ac2ec11", "url": "https://github.com/Graylog2/graylog2-server/commit/a41888a1c43c8254ef538d142eeb1b248ac2ec11", "message": "Removing n+1's in `StreamService#loadAll` by consolidating external loads\n\nBefore this change, calling `StreamService#loadAll` triggered loading of\nassociated outputs and index sets, _both_ resulting in n+1 each.\n\nThis change is now placing fetching of outputs and index sets outside\nthe loop iterating over each stream, leaving only simple lookups to be\ndone inside the loop, effectively turning this into a call with a\n_constant_ number of mongodb queries.\n\nSimple tests on my setup showed an improvement of ~270ms -> ~110ms.\nWhile this is already impressive, I expect a much bigger improvement for\nsetups with a high number of outputs.", "committedDate": "2020-04-13T11:50:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA3MjA2OA==", "url": "https://github.com/Graylog2/graylog2-server/pull/7867#discussion_r408072068", "bodyText": "Maybe we shouldn't call this streamsQuery?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private Map<String, IndexSet> indexSetsForStreams(List<DBObject> streamsQuery) {\n          \n          \n            \n                    final Set<String> indexSetIds = streamsQuery.stream()\n          \n          \n            \n                            .map(stream -> (String)stream.get(StreamImpl.FIELD_INDEX_SET_ID))\n          \n          \n            \n                            .filter(s -> !isNullOrEmpty(s))\n          \n          \n            \n                            .collect(Collectors.toSet());\n          \n          \n            \n                private Map<String, IndexSet> indexSetsForStreams(List<DBObject> streams) {\n          \n          \n            \n                    final Set<String> indexSetIds = streams.stream()\n          \n          \n            \n                            .map(stream -> (String)stream.get(StreamImpl.FIELD_INDEX_SET_ID))\n          \n          \n            \n                            .filter(s -> !isNullOrEmpty(s))\n          \n          \n            \n                            .collect(Collectors.toSet());", "author": "mpfz0r", "createdAt": "2020-04-14T11:44:28Z", "path": "graylog2-server/src/main/java/org/graylog2/streams/StreamServiceImpl.java", "diffHunk": "@@ -194,23 +195,57 @@ public Stream load(String id) throws NotFoundException {\n         final Map<String, List<StreamRule>> allStreamRules = streamRuleService.loadForStreamIds(streamIds);\n \n         final ImmutableList.Builder<Stream> streams = ImmutableList.builder();\n+\n+        final Map<String, IndexSet> indexSets = indexSetsForStreams(results);\n+\n+        final Set<String> outputIds = results.stream()\n+                .map(this::outputIdsForRawStream)\n+                .flatMap(outputs -> outputs.stream().map(ObjectId::toHexString))\n+                .collect(Collectors.toSet());\n+\n+        final Map<String, Output> outputsById = outputService.loadByIds(outputIds)\n+                .stream()\n+                .collect(Collectors.toMap(Output::getId, Function.identity()));\n+\n+\n         for (DBObject o : results) {\n             final ObjectId objectId = (ObjectId) o.get(\"_id\");\n             final String id = objectId.toHexString();\n             final List<StreamRule> streamRules = allStreamRules.getOrDefault(id, Collections.emptyList());\n             LOG.debug(\"Found {} rules for stream <{}>\", streamRules.size(), id);\n \n-            final Set<Output> outputs = loadOutputsForRawStream(o);\n+            final Set<Output> outputs = outputIdsForRawStream(o)\n+                    .stream()\n+                    .map(ObjectId::toHexString)\n+                    .map(outputsById::get)\n+                    .collect(Collectors.toSet());\n \n             @SuppressWarnings(\"unchecked\")\n             final Map<String, Object> fields = o.toMap();\n \n-            streams.add(new StreamImpl(objectId, fields, streamRules, outputs, getIndexSet(o)));\n+            final String indexSetId = (String)fields.get(StreamImpl.FIELD_INDEX_SET_ID);\n+\n+            streams.add(new StreamImpl(objectId, fields, streamRules, outputs, indexSets.get(indexSetId)));\n         }\n \n         return streams.build();\n     }\n \n+    private List<ObjectId> outputIdsForRawStream(DBObject o) {\n+        final List<ObjectId> objectIds = (List<ObjectId>) o.get(StreamImpl.FIELD_OUTPUTS);\n+        return objectIds == null ? Collections.emptyList() : objectIds;\n+    }\n+\n+    private Map<String, IndexSet> indexSetsForStreams(List<DBObject> streamsQuery) {\n+        final Set<String> indexSetIds = streamsQuery.stream()\n+                .map(stream -> (String)stream.get(StreamImpl.FIELD_INDEX_SET_ID))\n+                .filter(s -> !isNullOrEmpty(s))\n+                .collect(Collectors.toSet());", "originalCommit": "a41888a1c43c8254ef538d142eeb1b248ac2ec11", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA5MTE1OA==", "url": "https://github.com/Graylog2/graylog2-server/pull/7867#discussion_r408091158", "bodyText": "Absolutely! \u2705", "author": "dennisoelkers", "createdAt": "2020-04-14T12:20:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA3MjA2OA=="}], "type": "inlineReview"}, {"oid": "84c25e6af48578d577d40558641eab6dfc51267e", "url": "https://github.com/Graylog2/graylog2-server/commit/84c25e6af48578d577d40558641eab6dfc51267e", "message": "Using better naming for parameter.", "committedDate": "2020-04-14T12:19:58Z", "type": "commit"}]}