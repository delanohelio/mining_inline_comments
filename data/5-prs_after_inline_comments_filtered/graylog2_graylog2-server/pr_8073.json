{"pr_number": 8073, "pr_title": "Sanitize Hyperlink String Decorator links", "pr_createdAt": "2020-05-08T15:51:54Z", "pr_url": "https://github.com/Graylog2/graylog2-server/pull/8073", "timeline": [{"oid": "a6ab374ec161ff992834cd8ccb6fa4d231c5e210", "url": "https://github.com/Graylog2/graylog2-server/commit/a6ab374ec161ff992834cd8ccb6fa4d231c5e210", "message": "Sanitize decorator links\n\nWhen the decorator link includes any text that does not begin with `http` or `https` and a valid link that follows, the UI will only render the text and not the link.", "committedDate": "2020-05-08T15:43:04Z", "type": "commit"}, {"oid": "ca10d69a407237b705d4982c37ce82ce3814b757", "url": "https://github.com/Graylog2/graylog2-server/commit/ca10d69a407237b705d4982c37ce82ce3814b757", "message": "Cleanup", "committedDate": "2020-05-08T15:57:30Z", "type": "commit"}, {"oid": "ad569c52f993f6971257bbbfb91cf779462063da", "url": "https://github.com/Graylog2/graylog2-server/commit/ad569c52f993f6971257bbbfb91cf779462063da", "message": "Add license header", "committedDate": "2020-05-11T08:10:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjk4MTkzMw==", "url": "https://github.com/Graylog2/graylog2-server/pull/8073#discussion_r422981933", "bodyText": "I think we should also allow URLs with more than one slash:\nE.g.  https://graylog.org//releases would be invalid now\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    UrlValidator urlValidator = new UrlValidator(schemes, UrlValidator.ALLOW_LOCAL_URLS);\n          \n          \n            \n                    UrlValidator urlValidator = new UrlValidator(schemes, UrlValidator.ALLOW_LOCAL_URLS + UrlValidator.ALLOW_2_SLASHES);", "author": "mpfz0r", "createdAt": "2020-05-11T11:46:05Z", "path": "graylog2-server/src/main/java/org/graylog2/decorators/LinkFieldDecorator.java", "diffHunk": "@@ -92,14 +89,36 @@ public SearchResponse apply(SearchResponse searchResponse) {\n                     }\n                     final Message message = new Message(ImmutableMap.copyOf(summary.message()));\n                     final String href = (String) summary.message().get(linkField);\n-                    final Map<String, String> decoratedField = new HashMap<>();\n-                    decoratedField.put(\"type\", \"a\");\n-                    decoratedField.put(\"href\", href);\n-                    message.addField(linkField, decoratedField);\n+                    if (isValidUrl(href)) {\n+                        final Map<String, String> decoratedField = new HashMap<>();\n+                        decoratedField.put(\"type\", \"a\");\n+                        decoratedField.put(\"href\", href);\n+                        message.addField(linkField, decoratedField);\n+                    } else {\n+                        message.addField(linkField, href);\n+                    }\n                     return summary.toBuilder().message(message.getFields()).build();\n                 })\n                 .collect(Collectors.toList());\n \n         return searchResponse.toBuilder().messages(summaries).build();\n     }\n+\n+    /**\n+     * @param url a String URL.\n+     * @return true if the URL is valid and false if the URL is invalid.\n+     *\n+     * All URLS that do not start with the protocol \"http\" or \"https\" protocol scheme are considered invalid.\n+     * All other non-URL text strings will be considered invalid. This includes inline javascript expressions such as:\n+     *  - javascript:...\n+     *  - alert()\n+     *  - or any other javascript expressions.\n+     */\n+    private boolean isValidUrl(String url) {\n+        String[] schemes = {\"http\", \"https\"};\n+        // UrlValidator.ALLOW_LOCAL_URLS allows local links to be permitted such as http://my-local-server\n+        // Some users may reference such local URLs, and there should be no issue with doing so.\n+        UrlValidator urlValidator = new UrlValidator(schemes, UrlValidator.ALLOW_LOCAL_URLS);", "originalCommit": "ad569c52f993f6971257bbbfb91cf779462063da", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2c1f46d9c61b3546a91743be782dd7a9c518ee08", "url": "https://github.com/Graylog2/graylog2-server/commit/2c1f46d9c61b3546a91743be782dd7a9c518ee08", "message": "Allow // in URLs", "committedDate": "2020-05-11T13:39:18Z", "type": "commit"}]}