{"pr_number": 8498, "pr_title": "Bootstrap integration tests for ES7, implement `CountsAdapter`.", "pr_createdAt": "2020-07-07T08:26:54Z", "pr_url": "https://github.com/Graylog2/graylog2-server/pull/8498", "timeline": [{"oid": "201626b743562072133bf56b01433066ed81f5d7", "url": "https://github.com/Graylog2/graylog2-server/commit/201626b743562072133bf56b01433066ed81f5d7", "message": "Validating Elasticsearch version setting.", "committedDate": "2020-07-07T08:32:27Z", "type": "commit"}, {"oid": "d5a9a2b7b99ab71e934816fe48b97c72a92ad531", "url": "https://github.com/Graylog2/graylog2-server/commit/d5a9a2b7b99ab71e934816fe48b97c72a92ad531", "message": "Adding/fixing validators.", "committedDate": "2020-07-07T08:32:27Z", "type": "commit"}, {"oid": "60230e38631de1279384f93c030f8a19825845dc", "url": "https://github.com/Graylog2/graylog2-server/commit/60230e38631de1279384f93c030f8a19825845dc", "message": "Adding boilerplate to start ES7 tests.", "committedDate": "2020-07-07T08:32:27Z", "type": "commit"}, {"oid": "f9bb32472c9ee8c4f17723252761389a97bb5e35", "url": "https://github.com/Graylog2/graylog2-server/commit/f9bb32472c9ee8c4f17723252761389a97bb5e35", "message": "Partial implementation of ES7 test client.", "committedDate": "2020-07-07T08:32:27Z", "type": "commit"}, {"oid": "4be5219164c19ddd9869335f7e3e21c28cca9fa6", "url": "https://github.com/Graylog2/graylog2-server/commit/4be5219164c19ddd9869335f7e3e21c28cca9fa6", "message": "Adding Index Mapping for ES7.", "committedDate": "2020-07-07T08:32:27Z", "type": "commit"}, {"oid": "0743cca06b5c266b6c2489fc9a666b7b6f73b283", "url": "https://github.com/Graylog2/graylog2-server/commit/0743cca06b5c266b6c2489fc9a666b7b6f73b283", "message": "Adding ES7 client code for tests.", "committedDate": "2020-07-07T08:32:27Z", "type": "commit"}, {"oid": "44a39cf3aac71b51cbc717de16f647689d1ea47d", "url": "https://github.com/Graylog2/graylog2-server/commit/44a39cf3aac71b51cbc717de16f647689d1ea47d", "message": "Adding required code for `CountsAdapterES7`.", "committedDate": "2020-07-07T08:32:27Z", "type": "commit"}, {"oid": "2aa412e1eb4444e876e50d97d8cfedb1f9356bad", "url": "https://github.com/Graylog2/graylog2-server/commit/2aa412e1eb4444e876e50d97d8cfedb1f9356bad", "message": "Adding creator method to `IndexNotFoundException`.", "committedDate": "2020-07-07T08:32:27Z", "type": "commit"}, {"oid": "2326d0c52f410a9f322022c4dfbbfd1e4853aa88", "url": "https://github.com/Graylog2/graylog2-server/commit/2326d0c52f410a9f322022c4dfbbfd1e4853aa88", "message": "Using multi search for count to avoid 4k limit, handling errors.", "committedDate": "2020-07-07T08:32:27Z", "type": "commit"}, {"oid": "45c00057b13cd41ed19fc8c72bcadd30f22a679f", "url": "https://github.com/Graylog2/graylog2-server/commit/45c00057b13cd41ed19fc8c72bcadd30f22a679f", "message": "Adding module to bind `CountsAdapterES7`.", "committedDate": "2020-07-07T08:32:28Z", "type": "commit"}, {"oid": "7963ea38430fe4df5e316b29c13be7fc60554dba", "url": "https://github.com/Graylog2/graylog2-server/commit/7963ea38430fe4df5e316b29c13be7fc60554dba", "message": "Removing superfluous space.", "committedDate": "2020-07-07T08:32:28Z", "type": "commit"}, {"oid": "c298a53b07ab39b5f4fab0a4158e2b3f138895ba", "url": "https://github.com/Graylog2/graylog2-server/commit/c298a53b07ab39b5f4fab0a4158e2b3f138895ba", "message": "Removing superfluous space.", "committedDate": "2020-07-07T08:32:28Z", "type": "commit"}, {"oid": "c298a53b07ab39b5f4fab0a4158e2b3f138895ba", "url": "https://github.com/Graylog2/graylog2-server/commit/c298a53b07ab39b5f4fab0a4158e2b3f138895ba", "message": "Removing superfluous space.", "committedDate": "2020-07-07T08:32:28Z", "type": "forcePushed"}, {"oid": "7288b44c22de91c46ca8bad7bf9349adfda427c3", "url": "https://github.com/Graylog2/graylog2-server/commit/7288b44c22de91c46ca8bad7bf9349adfda427c3", "message": "Adjusting test for index mapping factory.", "committedDate": "2020-07-07T11:30:50Z", "type": "commit"}, {"oid": "0ce8f2bcfc20a9bd162fc01737c3e351366d0944", "url": "https://github.com/Graylog2/graylog2-server/commit/0ce8f2bcfc20a9bd162fc01737c3e351366d0944", "message": "Making test name more precise.", "committedDate": "2020-07-07T11:31:11Z", "type": "commit"}, {"oid": "161a9662a985555be71ef9ae05878df179166051", "url": "https://github.com/Graylog2/graylog2-server/commit/161a9662a985555be71ef9ae05878df179166051", "message": "Consolidating and cleaning up index mapping class for ES7.", "committedDate": "2020-07-07T11:38:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg5NzYwMA==", "url": "https://github.com/Graylog2/graylog2-server/pull/8498#discussion_r450897600", "bodyText": "I would suggest to extract RestClientBuilder to a variable. That would make it easier to see that all the configuration happens on the low level client builder.", "author": "alex-konn", "createdAt": "2020-07-07T14:15:06Z", "path": "graylog-storage-elasticsearch7/src/main/java/org/graylog/storage/elasticsearch7/ElasticsearchClient.java", "diffHunk": "@@ -0,0 +1,100 @@\n+package org.graylog.storage.elasticsearch7;\n+\n+import com.github.joschi.jadconfig.util.Duration;\n+import org.graylog.shaded.elasticsearch7.org.apache.http.HttpHost;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.ElasticsearchException;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.action.search.MultiSearchRequest;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.action.search.MultiSearchResponse;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.action.search.SearchRequest;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.action.search.SearchResponse;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.client.RequestOptions;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.client.RestClient;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.client.RestHighLevelClient;\n+import org.graylog2.indexer.IndexNotFoundException;\n+\n+import javax.annotation.Nullable;\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.util.List;\n+\n+import static com.google.common.base.Preconditions.checkArgument;\n+\n+public class ElasticsearchClient {\n+    private final RestHighLevelClient client;\n+\n+    @Inject\n+    public ElasticsearchClient(@Named(\"elasticsearch_hosts\") List<URI> elasticsearchHosts,\n+                               @Named(\"elasticsearch_connect_timeout\") Duration elasticsearchConnectTimeout,\n+                               @Named(\"elasticsearch_socket_timeout\") Duration elasticsearchSocketTimeout,\n+                               @Named(\"elasticsearch_idle_timeout\") Duration elasticsearchIdleTimeout,\n+                               @Named(\"elasticsearch_max_total_connections\") int elasticsearchMaxTotalConnections,\n+                               @Named(\"elasticsearch_max_total_connections_per_route\") int elasticsearchMaxTotalConnectionsPerRoute,\n+                               @Named(\"elasticsearch_max_retries\") int elasticsearchMaxRetries,\n+                               @Named(\"elasticsearch_discovery_enabled\") boolean discoveryEnabled,\n+                               @Named(\"elasticsearch_discovery_filter\") @Nullable String discoveryFilter,\n+                               @Named(\"elasticsearch_discovery_frequency\") Duration discoveryFrequency,\n+                               @Named(\"elasticsearch_discovery_default_scheme\") String defaultSchemeForDiscoveredNodes,\n+                               @Named(\"elasticsearch_compression_enabled\") boolean compressionEnabled) {\n+        this.client = new RestHighLevelClient(RestClient.builder(", "originalCommit": "161a9662a985555be71ef9ae05878df179166051", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQwODkwNA==", "url": "https://github.com/Graylog2/graylog2-server/pull/8498#discussion_r451408904", "bodyText": "\u2714\ufe0f", "author": "dennisoelkers", "createdAt": "2020-07-08T09:28:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg5NzYwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDkxODc3NQ==", "url": "https://github.com/Graylog2/graylog2-server/pull/8498#discussion_r450918775", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (result.getResponses()[0].getResponse() == null) {\n          \n          \n            \n                        throw exceptionFrom(result.getResponses()[0].getFailure(), errorMessage);\n          \n          \n            \n                    }\n          \n          \n            \n            \n          \n          \n            \n                    return result.getResponses()[0].getResponse();\n          \n          \n            \n                   final MultiSearchResponse.Item firstResponseItem = result.getResponses()[0];\n          \n          \n            \n                    \n          \n          \n            \n                    if (firstResponseItem.getResponse() == null) {\n          \n          \n            \n                        throw exceptionFrom(firstResponseItem.getFailure(), errorMessage);\n          \n          \n            \n                    }\n          \n          \n            \n            \n          \n          \n            \n                    return firstResponseItem.getResponse();", "author": "alex-konn", "createdAt": "2020-07-07T14:42:47Z", "path": "graylog-storage-elasticsearch7/src/main/java/org/graylog/storage/elasticsearch7/ElasticsearchClient.java", "diffHunk": "@@ -0,0 +1,100 @@\n+package org.graylog.storage.elasticsearch7;\n+\n+import com.github.joschi.jadconfig.util.Duration;\n+import org.graylog.shaded.elasticsearch7.org.apache.http.HttpHost;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.ElasticsearchException;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.action.search.MultiSearchRequest;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.action.search.MultiSearchResponse;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.action.search.SearchRequest;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.action.search.SearchResponse;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.client.RequestOptions;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.client.RestClient;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.client.RestHighLevelClient;\n+import org.graylog2.indexer.IndexNotFoundException;\n+\n+import javax.annotation.Nullable;\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.util.List;\n+\n+import static com.google.common.base.Preconditions.checkArgument;\n+\n+public class ElasticsearchClient {\n+    private final RestHighLevelClient client;\n+\n+    @Inject\n+    public ElasticsearchClient(@Named(\"elasticsearch_hosts\") List<URI> elasticsearchHosts,\n+                               @Named(\"elasticsearch_connect_timeout\") Duration elasticsearchConnectTimeout,\n+                               @Named(\"elasticsearch_socket_timeout\") Duration elasticsearchSocketTimeout,\n+                               @Named(\"elasticsearch_idle_timeout\") Duration elasticsearchIdleTimeout,\n+                               @Named(\"elasticsearch_max_total_connections\") int elasticsearchMaxTotalConnections,\n+                               @Named(\"elasticsearch_max_total_connections_per_route\") int elasticsearchMaxTotalConnectionsPerRoute,\n+                               @Named(\"elasticsearch_max_retries\") int elasticsearchMaxRetries,\n+                               @Named(\"elasticsearch_discovery_enabled\") boolean discoveryEnabled,\n+                               @Named(\"elasticsearch_discovery_filter\") @Nullable String discoveryFilter,\n+                               @Named(\"elasticsearch_discovery_frequency\") Duration discoveryFrequency,\n+                               @Named(\"elasticsearch_discovery_default_scheme\") String defaultSchemeForDiscoveredNodes,\n+                               @Named(\"elasticsearch_compression_enabled\") boolean compressionEnabled) {\n+        this.client = new RestHighLevelClient(RestClient.builder(\n+                elasticsearchHosts.stream().map(uri -> new HttpHost(uri.getHost(), uri.getPort(), uri.getScheme())).toArray(HttpHost[]::new)\n+        ).setRequestConfigCallback(requestConfig -> requestConfig\n+                .setConnectTimeout(Math.toIntExact(elasticsearchConnectTimeout.toMilliseconds()))\n+                .setSocketTimeout(Math.toIntExact(elasticsearchSocketTimeout.toMilliseconds()))\n+        ).setHttpClientConfigCallback(httpClientConfig -> httpClientConfig\n+                .setMaxConnTotal(elasticsearchMaxTotalConnections)\n+                .setMaxConnPerRoute(elasticsearchMaxTotalConnectionsPerRoute)\n+        ));\n+    }\n+\n+    public SearchResponse search(SearchRequest searchRequest, String errorMessage) {\n+        final MultiSearchRequest multiSearchRequest = new MultiSearchRequest()\n+                .add(searchRequest);\n+\n+        final MultiSearchResponse result = this.execute((c, requestOptions) -> c.msearch(multiSearchRequest, requestOptions), errorMessage);\n+\n+        return firstResponseFrom(result, errorMessage);\n+    }\n+\n+    private SearchResponse firstResponseFrom(MultiSearchResponse result, String errorMessage) {\n+        checkArgument(result != null);\n+        checkArgument(result.getResponses().length == 1);\n+\n+        if (result.getResponses()[0].getResponse() == null) {\n+            throw exceptionFrom(result.getResponses()[0].getFailure(), errorMessage);\n+        }\n+\n+        return result.getResponses()[0].getResponse();", "originalCommit": "161a9662a985555be71ef9ae05878df179166051", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQwOTU3Ng==", "url": "https://github.com/Graylog2/graylog2-server/pull/8498#discussion_r451409576", "bodyText": "\u2714\ufe0f", "author": "dennisoelkers", "createdAt": "2020-07-08T09:29:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDkxODc3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDkyNTczNQ==", "url": "https://github.com/Graylog2/graylog2-server/pull/8498#discussion_r450925735", "bodyText": "I would prefer using our own runtime exception here instead of org.elasticsearch.ElasticsearchException. The old JestUtils used org.graylog2.indexer.ElasticsearchException. Maybe a new one with a more generic name? StorageException?", "author": "alex-konn", "createdAt": "2020-07-07T14:51:46Z", "path": "graylog-storage-elasticsearch7/src/main/java/org/graylog/storage/elasticsearch7/ElasticsearchClient.java", "diffHunk": "@@ -0,0 +1,100 @@\n+package org.graylog.storage.elasticsearch7;\n+\n+import com.github.joschi.jadconfig.util.Duration;\n+import org.graylog.shaded.elasticsearch7.org.apache.http.HttpHost;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.ElasticsearchException;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.action.search.MultiSearchRequest;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.action.search.MultiSearchResponse;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.action.search.SearchRequest;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.action.search.SearchResponse;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.client.RequestOptions;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.client.RestClient;\n+import org.graylog.shaded.elasticsearch7.org.elasticsearch.client.RestHighLevelClient;\n+import org.graylog2.indexer.IndexNotFoundException;\n+\n+import javax.annotation.Nullable;\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.util.List;\n+\n+import static com.google.common.base.Preconditions.checkArgument;\n+\n+public class ElasticsearchClient {\n+    private final RestHighLevelClient client;\n+\n+    @Inject\n+    public ElasticsearchClient(@Named(\"elasticsearch_hosts\") List<URI> elasticsearchHosts,\n+                               @Named(\"elasticsearch_connect_timeout\") Duration elasticsearchConnectTimeout,\n+                               @Named(\"elasticsearch_socket_timeout\") Duration elasticsearchSocketTimeout,\n+                               @Named(\"elasticsearch_idle_timeout\") Duration elasticsearchIdleTimeout,\n+                               @Named(\"elasticsearch_max_total_connections\") int elasticsearchMaxTotalConnections,\n+                               @Named(\"elasticsearch_max_total_connections_per_route\") int elasticsearchMaxTotalConnectionsPerRoute,\n+                               @Named(\"elasticsearch_max_retries\") int elasticsearchMaxRetries,\n+                               @Named(\"elasticsearch_discovery_enabled\") boolean discoveryEnabled,\n+                               @Named(\"elasticsearch_discovery_filter\") @Nullable String discoveryFilter,\n+                               @Named(\"elasticsearch_discovery_frequency\") Duration discoveryFrequency,\n+                               @Named(\"elasticsearch_discovery_default_scheme\") String defaultSchemeForDiscoveredNodes,\n+                               @Named(\"elasticsearch_compression_enabled\") boolean compressionEnabled) {\n+        this.client = new RestHighLevelClient(RestClient.builder(\n+                elasticsearchHosts.stream().map(uri -> new HttpHost(uri.getHost(), uri.getPort(), uri.getScheme())).toArray(HttpHost[]::new)\n+        ).setRequestConfigCallback(requestConfig -> requestConfig\n+                .setConnectTimeout(Math.toIntExact(elasticsearchConnectTimeout.toMilliseconds()))\n+                .setSocketTimeout(Math.toIntExact(elasticsearchSocketTimeout.toMilliseconds()))\n+        ).setHttpClientConfigCallback(httpClientConfig -> httpClientConfig\n+                .setMaxConnTotal(elasticsearchMaxTotalConnections)\n+                .setMaxConnPerRoute(elasticsearchMaxTotalConnectionsPerRoute)\n+        ));\n+    }\n+\n+    public SearchResponse search(SearchRequest searchRequest, String errorMessage) {\n+        final MultiSearchRequest multiSearchRequest = new MultiSearchRequest()\n+                .add(searchRequest);\n+\n+        final MultiSearchResponse result = this.execute((c, requestOptions) -> c.msearch(multiSearchRequest, requestOptions), errorMessage);\n+\n+        return firstResponseFrom(result, errorMessage);\n+    }\n+\n+    private SearchResponse firstResponseFrom(MultiSearchResponse result, String errorMessage) {\n+        checkArgument(result != null);\n+        checkArgument(result.getResponses().length == 1);\n+\n+        if (result.getResponses()[0].getResponse() == null) {\n+            throw exceptionFrom(result.getResponses()[0].getFailure(), errorMessage);\n+        }\n+\n+        return result.getResponses()[0].getResponse();\n+    }\n+\n+    public <R> R execute(ThrowingBiFunction<RestHighLevelClient, RequestOptions, R, IOException> fn) {\n+        return execute(fn, \"An error occurred: \");\n+    }\n+\n+    public <R> R execute(ThrowingBiFunction<RestHighLevelClient, RequestOptions, R, IOException> fn, String errorMessage) {\n+        try {\n+            return fn.apply(client, requestOptions());\n+        } catch (Exception e) {\n+            throw exceptionFrom(e, errorMessage);\n+        }\n+    }\n+\n+    private RequestOptions requestOptions() {\n+        return RequestOptions.DEFAULT;\n+    }\n+\n+    private ElasticsearchException exceptionFrom(Exception e, String errorMessage) {", "originalCommit": "161a9662a985555be71ef9ae05878df179166051", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQxMDExMw==", "url": "https://github.com/Graylog2/graylog2-server/pull/8498#discussion_r451410113", "bodyText": "\u2714\ufe0f", "author": "dennisoelkers", "createdAt": "2020-07-08T09:30:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDkyNTczNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM4MjM4MQ==", "url": "https://github.com/Graylog2/graylog2-server/pull/8498#discussion_r451382381", "bodyText": "Wouldn't it be enough to only use elasticsearchMajorVersion and drop elasticsearchVersion?", "author": "alex-konn", "createdAt": "2020-07-08T08:44:43Z", "path": "graylog2-server/src/main/java/org/graylog2/storage/VersionAwareProvider.java", "diffHunk": "@@ -25,11 +25,13 @@\n \n public class VersionAwareProvider<T> implements Provider<T> {\n     private final Version elasticsearchVersion;\n+    private final String elasticsearchMajorVersion;\n     private final Map<Version, Provider<T>> pluginBindings;\n \n     @Inject\n     public VersionAwareProvider(@Named(\"elasticsearch_version\") String elasticsearchMajorVersion, Map<Version, Provider<T>> pluginBindings) {\n         this.elasticsearchVersion = constructElasticsearchVersion(elasticsearchMajorVersion);\n+        this.elasticsearchMajorVersion = elasticsearchMajorVersion;", "originalCommit": "161a9662a985555be71ef9ae05878df179166051", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQxMTgwMA==", "url": "https://github.com/Graylog2/graylog2-server/pull/8498#discussion_r451411800", "bodyText": "\u2714\ufe0f", "author": "dennisoelkers", "createdAt": "2020-07-08T09:33:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM4MjM4MQ=="}], "type": "inlineReview"}, {"oid": "41216cd31b4d204aee2a267f1c3cbde44c197071", "url": "https://github.com/Graylog2/graylog2-server/commit/41216cd31b4d204aee2a267f1c3cbde44c197071", "message": "Cleaning up rest client creation.", "committedDate": "2020-07-08T09:28:21Z", "type": "commit"}, {"oid": "795d736fbfa34579d5534e679b6c0bf842a4b282", "url": "https://github.com/Graylog2/graylog2-server/commit/795d736fbfa34579d5534e679b6c0bf842a4b282", "message": "Extracting first response to variable.", "committedDate": "2020-07-08T09:29:34Z", "type": "commit"}, {"oid": "ffecb94e6e30a5b7bf3315d55d8d196098527686", "url": "https://github.com/Graylog2/graylog2-server/commit/ffecb94e6e30a5b7bf3315d55d8d196098527686", "message": "Using correct exception class.", "committedDate": "2020-07-08T09:30:26Z", "type": "commit"}, {"oid": "04b6949f4e66f58660b7714023a90dee068ecf26", "url": "https://github.com/Graylog2/graylog2-server/commit/04b6949f4e66f58660b7714023a90dee068ecf26", "message": "Removing duplicate version instance variable.", "committedDate": "2020-07-08T09:33:11Z", "type": "commit"}, {"oid": "285f612add3bd49690f72409cacb69fa09a26007", "url": "https://github.com/Graylog2/graylog2-server/commit/285f612add3bd49690f72409cacb69fa09a26007", "message": "Lowering default ES version.", "committedDate": "2020-07-08T10:33:15Z", "type": "commit"}]}