{"pr_number": 109, "pr_title": "Add ExtensionPoint to prevent one-sided mods from crashing", "pr_createdAt": "2020-07-05T17:14:04Z", "pr_url": "https://github.com/PatchworkMC/patchwork-api/pull/109", "timeline": [{"oid": "7d0fcfa2b79bf1986509edcd1f809689a6bd5286", "url": "https://github.com/PatchworkMC/patchwork-api/commit/7d0fcfa2b79bf1986509edcd1f809689a6bd5286", "message": "Add ExtensionPoint to prevent one-sided mods from crashing", "committedDate": "2020-07-05T17:08:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkxNzMxMg==", "url": "https://github.com/PatchworkMC/patchwork-api/pull/109#discussion_r449917312", "bodyText": "getOrDefault(x () -> null)\n\nIsn't that the same thing is get()? Maybe this is some quirk of IdentityHashMap but I don't think so.", "author": "TheGlitch76", "createdAt": "2020-07-05T20:49:39Z", "path": "patchwork-fml/src/main/java/net/minecraftforge/fml/ModContainer.java", "diffHunk": "@@ -46,6 +54,21 @@ public final String getNamespace() {\n \t\treturn namespace;\n \t}\n \n+\t@SuppressWarnings(\"unchecked\")\n+\tpublic <T> Optional<T> getCustomExtension(ExtensionPoint<T> point) {\n+\t\treturn Optional.ofNullable((T) extensionPoints.getOrDefault(point, () -> null).get());", "originalCommit": "7d0fcfa2b79bf1986509edcd1f809689a6bd5286", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE5MjI1Mg==", "url": "https://github.com/PatchworkMC/patchwork-api/pull/109#discussion_r450192252", "bodyText": "Maybe Forge was trying to provide some fallback so they leave () -> null here.\nActually I'm not too sure either, perhaps we can leave it there to keep the behavior consistent with Forge.", "author": "rikka0w0", "createdAt": "2020-07-06T12:40:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkxNzMxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA5MjMzOA==", "url": "https://github.com/PatchworkMC/patchwork-api/pull/109#discussion_r453092338", "bodyText": "Hang on, i see what's going on. It's returning some supplier, and this is more concise because it avoids having to check before unboxing.", "author": "TheGlitch76", "createdAt": "2020-07-10T21:49:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkxNzMxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkxNzUwMQ==", "url": "https://github.com/PatchworkMC/patchwork-api/pull/109#discussion_r449917501", "bodyText": "There's no way yet--we will eventually have to layer our own networking ontop of what Fabric has, but that's waiting on some work to be done by liach and co.", "author": "TheGlitch76", "createdAt": "2020-07-05T20:51:27Z", "path": "patchwork-fml/src/main/java/net/minecraftforge/fml/ExtensionPoint.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.minecraftforge.fml;\n+\n+import java.util.function.BiFunction;\n+import java.util.function.BiPredicate;\n+import java.util.function.Supplier;\n+\n+import org.apache.commons.lang3.tuple.Pair;\n+\n+import net.minecraft.client.MinecraftClient;\n+import net.minecraft.client.gui.screen.Screen;\n+\n+public class ExtensionPoint<T> {\n+\tpublic static final ExtensionPoint<BiFunction<MinecraftClient, Screen, Screen>> CONFIGGUIFACTORY = new ExtensionPoint<>();\n+\t// TODO: Not used by any Forge code, ModFileResourcePack is not implemented in Patchwork API\n+\t// public static final ExtensionPoint<BiFunction<MinecraftClient, ModFileResourcePack, ResourcePack>> RESOURCEPACK = new ExtensionPoint<>();\n+\t/**\n+\t * Compatibility display test for the mod. Used for displaying compatibility\n+\t * with remote servers with the same mod, and on disk saves.\n+\t *\n+\t * <p>The supplier provides my \"local\" version for sending across the network or\n+\t * writing to disk The predicate tests the version from a remote instance or\n+\t * save for acceptability (Boolean is true for network, false for local save)\n+\t *\n+\t * <p>TODO: Fabric servers do not check for client's mod list,\n+\t * there is no way to implement the DISPLAYTEST function in Patchwork.", "originalCommit": "7d0fcfa2b79bf1986509edcd1f809689a6bd5286", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE5Mjg3NQ==", "url": "https://github.com/PatchworkMC/patchwork-api/pull/109#discussion_r450192875", "bodyText": "I agree, so for now we just keep these dummy extension points to avoid ClassNotFoundException.", "author": "rikka0w0", "createdAt": "2020-07-06T12:41:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkxNzUwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkxNzYxOA==", "url": "https://github.com/PatchworkMC/patchwork-api/pull/109#discussion_r449917618", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * <p>The supplier provides my \"local\" version for sending across the network or\n          \n          \n            \n            \t * writing to disk The predicate tests the version from a remote instance or\n          \n          \n            \n            \t * <p>The supplier provides the \"local\" version for sending across the network or\n          \n          \n            \n            \t * writing to disk. The predicate tests the version from a remote instance or", "author": "TheGlitch76", "createdAt": "2020-07-05T20:52:36Z", "path": "patchwork-fml/src/main/java/net/minecraftforge/fml/ExtensionPoint.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.minecraftforge.fml;\n+\n+import java.util.function.BiFunction;\n+import java.util.function.BiPredicate;\n+import java.util.function.Supplier;\n+\n+import org.apache.commons.lang3.tuple.Pair;\n+\n+import net.minecraft.client.MinecraftClient;\n+import net.minecraft.client.gui.screen.Screen;\n+\n+public class ExtensionPoint<T> {\n+\tpublic static final ExtensionPoint<BiFunction<MinecraftClient, Screen, Screen>> CONFIGGUIFACTORY = new ExtensionPoint<>();\n+\t// TODO: Not used by any Forge code, ModFileResourcePack is not implemented in Patchwork API\n+\t// public static final ExtensionPoint<BiFunction<MinecraftClient, ModFileResourcePack, ResourcePack>> RESOURCEPACK = new ExtensionPoint<>();\n+\t/**\n+\t * Compatibility display test for the mod. Used for displaying compatibility\n+\t * with remote servers with the same mod, and on disk saves.\n+\t *\n+\t * <p>The supplier provides my \"local\" version for sending across the network or\n+\t * writing to disk The predicate tests the version from a remote instance or", "originalCommit": "7d0fcfa2b79bf1986509edcd1f809689a6bd5286", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b7f0bd62cc5467f6c75fc0023a4e89b614538583", "url": "https://github.com/PatchworkMC/patchwork-api/commit/b7f0bd62cc5467f6c75fc0023a4e89b614538583", "message": "Update patchwork-fml/src/main/java/net/minecraftforge/fml/ExtensionPoint.java\n\nCo-authored-by: Glitch <glitchieproductionsofficial@gmail.com>", "committedDate": "2020-07-06T12:39:01Z", "type": "commit"}]}