{"pr_number": 4858, "pr_title": "Add tx fee rate api methods:  gettxfeerate, settxfeerate, unsettxfeerate", "pr_createdAt": "2020-11-26T21:39:56Z", "pr_url": "https://github.com/bisq-network/bisq/pull/4858", "timeline": [{"oid": "fc8af8c072af444caafe5b91abce0fa06cd4e78f", "url": "https://github.com/bisq-network/bisq/commit/fc8af8c072af444caafe5b91abce0fa06cd4e78f", "message": "Define new grpc bsq/btc balances protos\n\nThis change adds proto serivces and messages to support new api\nimplementations for serving bsq, btc or all wallet balances.\n\n- RPC GetBsqBalances will return complete BSQ balance info.\n- Message BsqBalanceInfo is proto returned by rpc GetBsqBalances.\n\n- RPC GetBtcBalances wil return complete BTC balance info.\n- Message BtcBalanceInfo is proto returned by rpc GetBtcBalances.\n\n- RPC GetBalances returns complete BTC and BSQ balance info.\n- Message BalancesInfo is proto returned by rpc GetBalances.\n\nRPC GetBalance remains unchnaged, still returns only the available\nBTC balance.  It may be deprecated and removed in a future PR.", "committedDate": "2020-11-13T14:01:02Z", "type": "commit"}, {"oid": "faf45ec301974b5a45af84b1e2246a6d2c1d02f4", "url": "https://github.com/bisq-network/bisq/commit/faf45ec301974b5a45af84b1e2246a6d2c1d02f4", "message": "Add proto wrappers for serving bsq, btc or all balances\n\nThis change adds proto wrappers for sending bsq, btc, or all balances\nto the CLI.  They will be used in future api method implementations:\ngetbsqbalance, getbtcbalance and getbalances.", "committedDate": "2020-11-13T14:24:08Z", "type": "commit"}, {"oid": "4c03b463fefb472cf518f055ab17201bec57d352", "url": "https://github.com/bisq-network/bisq/commit/4c03b463fefb472cf518f055ab17201bec57d352", "message": "Define proto for api method 'getunusedbsqaddress'\n\nThis change adds a proto to support a future api implementation for\ngetting an unused, bsq funding address.", "committedDate": "2020-11-13T14:35:06Z", "type": "commit"}, {"oid": "3e98910cc6e620ee2a56d001de9b53d984d25498", "url": "https://github.com/bisq-network/bisq/commit/3e98910cc6e620ee2a56d001de9b53d984d25498", "message": "Define proto fapi method 'sendbsq'\n\nThis change adds the proto to support a future api implementation for\ntransfering bsq.", "committedDate": "2020-11-13T14:44:42Z", "type": "commit"}, {"oid": "9f033ee572aa3afb41cf58e7aa6f64e7a7da9223", "url": "https://github.com/bisq-network/bisq/commit/9f033ee572aa3afb41cf58e7aa6f64e7a7da9223", "message": "Add proto fields to support trade fee currency choice\n\nThis change adds proto support for paying maker fees in bsq or btc.\nThe implementation will come in a future PR.\n\n- Added makerFeeCurrencyCode field to CreateOfferRequest proto.\n\n- Added isCurrencyForMakerFeeBtc field to OfferInfo proto wrapper.\n\n- Add takerFeeCurrencyCode field to TakeOfferRequest proto.", "committedDate": "2020-11-13T15:03:15Z", "type": "commit"}, {"oid": "c1c099c8320c5f19bed6e7b4ac1c1f6594be0d78", "url": "https://github.com/bisq-network/bisq/commit/c1c099c8320c5f19bed6e7b4ac1c1f6594be0d78", "message": "Implement and test api method 'getunusedbsqaddress'\n\n- Added new method to CLI, split some long msg strings into two lines,\n  and added a white space after a braceless else statement.\n\n- Added the gRPC server boilerplate.\n\n- Added the core implementation.\n\n- Added a test, and moved method wallet tests into their own package.", "committedDate": "2020-11-13T15:40:16Z", "type": "commit"}, {"oid": "7c2068e3c1d3a53ce45124c8a728a4aeec96d28a", "url": "https://github.com/bisq-network/bisq/commit/7c2068e3c1d3a53ce45124c8a728a4aeec96d28a", "message": "Add teardown to test case", "committedDate": "2020-11-13T15:45:40Z", "type": "commit"}, {"oid": "8dc1a74c8b5e11312a5b3e9db5581981dc70c68b", "url": "https://github.com/bisq-network/bisq/commit/8dc1a74c8b5e11312a5b3e9db5581981dc70c68b", "message": "Remove trailing spaces in blank line", "committedDate": "2020-11-13T15:55:48Z", "type": "commit"}, {"oid": "208a37b339378d28cf06de2c2b7232b37527b14f", "url": "https://github.com/bisq-network/bisq/commit/208a37b339378d28cf06de2c2b7232b37527b14f", "message": "Implement and test new getbalance(s) api methods\n\n- Added three new methods to CLI:\n\n      getbalances   ...\treturns complete bsq and btc balance info\n      getbsqbalance ...\treturns complete bsq balance info\n      getbtcbalance ...\treturns complete btc balance info\n\n      The old getbalance method is deprecated and will be removed\n      if there is agreement to do that.\n\n- Made the needed changes in the CLI's output formatting classes.\n\n- Added new tests to existing BsqWalletTest, added new BtcWalletTest\n  and WalletBalancesTest.\n\n- Added disabled tests for funding a bsq wallet (todo in next PR).", "committedDate": "2020-11-13T17:21:26Z", "type": "commit"}, {"oid": "7f0f949a2de9fee0cf91c0b8cd9bd5c0904343e7", "url": "https://github.com/bisq-network/bisq/commit/7f0f949a2de9fee0cf91c0b8cd9bd5c0904343e7", "message": "Resolve unnecessary use of fully qualified name for codacy", "committedDate": "2020-11-13T17:35:26Z", "type": "commit"}, {"oid": "0d3b3a6ead351d62fcdb23be5b8918280cd071a5", "url": "https://github.com/bisq-network/bisq/commit/0d3b3a6ead351d62fcdb23be5b8918280cd071a5", "message": "Stub out api method 'sendbsq' in core\n\nAll the boilerplate for this method is included in this change, but\nthe implementation in CoreWalletsService#sendBsq is commented out\nuntil the needed logic to send bsq is refactored out of desktop's\nBsqSendView class -- to be included in the next PR.\n\n- Added new method to CLI.\n\n- Added the gRPC server boilerplate.\n\n- Added the core implementation, commented out.\n\n- Enabled tests.", "committedDate": "2020-11-13T17:57:28Z", "type": "commit"}, {"oid": "dc3274ff5f56ba4dd8d40fef536a74c53ebbf65d", "url": "https://github.com/bisq-network/bisq/commit/dc3274ff5f56ba4dd8d40fef536a74c53ebbf65d", "message": "Re comment sendbsq tests so travis ci does not fail", "committedDate": "2020-11-13T17:59:31Z", "type": "commit"}, {"oid": "446bd328d8366b31a9614d958f7d14094b5982f8", "url": "https://github.com/bisq-network/bisq/commit/446bd328d8366b31a9614d958f7d14094b5982f8", "message": "Refactor desktop's BsqSendView, share with api\n\nMoved just enough code out of BsqSendView to avoid desktop/api\n'sendbsq' duplication, at the cost of adding 1 new method to\nBsqSendView.\n\n- Created new BsqTransferModel to hold tx details shared by desktop and api.\n\n- Created new BsqTransferService to send bsq using a BsqTransferModel shared\n  by desktop and api.\n\n- Uncommented CoreWalletsService#sendBsq implementation.\n\n- Uncommented sendbsq tests.", "committedDate": "2020-11-13T18:34:18Z", "type": "commit"}, {"oid": "4a90b4008aaab8ebe81014f45be7ac15d0171237", "url": "https://github.com/bisq-network/bisq/commit/4a90b4008aaab8ebe81014f45be7ac15d0171237", "message": "Resolve 'Avoid creating BigDecimal with a decimal' issue for codacy", "committedDate": "2020-11-13T18:52:30Z", "type": "commit"}, {"oid": "722460e7e5a89406c2704246f4018fb003a800ec", "url": "https://github.com/bisq-network/bisq/commit/722460e7e5a89406c2704246f4018fb003a800ec", "message": "Support paying trade fees in bsq or btc (api)\n\n- Add optional makerFeeCurrencyCode argument to CLI's 'createoffer'.\n\n- Add optional takerFeeCurrencyCode argument to CLI's 'takeoffer'.\n\n- Add isCurrencyForMakerFeeBtc field to OfferInfo proto wrapper.\n\n- Pass fee currency argument down to CoreOffersService and CoreTradesService's\n  create and take offer methods.\n\n- Add maybeSetFeePaymentCurrencyPreference method to OfferUtil to\n  conditionally set the 'payFeeInBtc' preference before creating\n  or taking an offer.\n\n- Adjust affected tests.", "committedDate": "2020-11-13T19:36:06Z", "type": "commit"}, {"oid": "8157f8fc4ee238de6213803fdf9d7bca22f411e7", "url": "https://github.com/bisq-network/bisq/commit/8157f8fc4ee238de6213803fdf9d7bca22f411e7", "message": "Delete deprecated api test, adjust api build/run doc", "committedDate": "2020-11-13T19:57:18Z", "type": "commit"}, {"oid": "7e9ab22d65c713daae79af5a3f4f9a3c72ee58ad", "url": "https://github.com/bisq-network/bisq/commit/7e9ab22d65c713daae79af5a3f4f9a3c72ee58ad", "message": "Refactor api getbalance methods.\n\nThis change fixes the recently bloated wallet balances api.  Now there\nis one CLI getbalance [bsq|btc] method that calls a getbalances(currency-code)\non the server.  The server returns full wallet balance information for\nBSQ, BTC, or both if the CLI's currency argument is absent.\n\n- grpc.proto:  Reduced number of getbalance(s) proto services from\n  four to one.\n\n- GrpcWalletsService:  Reduced number of getbalance(s) gRPC service\n  boilerplate methods from four to one.\n\n- CoreApi, CoreWalletsService:  Reduced number of getbalance(s) gRPC\n  service implementation methods from four to one.\n\n- CliMain:  Reduced number of getbalance(s) commands from four to one.\n\n- BalancesInfo: Changed BsqBalanceInfo & BtcBalanceInfo field names\n  to bsq and btc, respectively, to make calling their accessors\n  more readable, less verbose.\n\n- BtcBalanceInfo, BsqBalanceInfo: Defined static final EMPTY instances\n  as place holders in a BalancesInfo returned by the gRPC server, when\n  one or the other balance types is not requested.  Would be nice\n  to serve Optional.empty() instead, but protobuf does not support\n  it or null.\n\n- Adjusted affected api tests and build doc.", "committedDate": "2020-11-14T16:08:10Z", "type": "commit"}, {"oid": "187a85f95bdc7a62f7faebbef4564fb7a7d69255", "url": "https://github.com/bisq-network/bisq/commit/187a85f95bdc7a62f7faebbef4564fb7a7d69255", "message": "Fix typo", "committedDate": "2020-11-14T16:19:24Z", "type": "commit"}, {"oid": "34efc049f80e564345adbff0329c3cc2dbd2d0f2", "url": "https://github.com/bisq-network/bisq/commit/34efc049f80e564345adbff0329c3cc2dbd2d0f2", "message": "Remove unnecessary fully qualified name", "committedDate": "2020-11-14T16:34:22Z", "type": "commit"}, {"oid": "530a9f95a4e302e4a9fb01c346a7739988866d33", "url": "https://github.com/bisq-network/bisq/commit/530a9f95a4e302e4a9fb01c346a7739988866d33", "message": "Remove unused imports", "committedDate": "2020-11-14T16:34:59Z", "type": "commit"}, {"oid": "ec381522ffeec3b7600e6cd752899660373d2505", "url": "https://github.com/bisq-network/bisq/commit/ec381522ffeec3b7600e6cd752899660373d2505", "message": "Add api method 'getpaymentmethods'\n\nReturns a list of supported payment method IDs.  This gives CLI users\nthe correct payment method id for creating a new payment account.\n\n- Added gRPC service GetPaymentMethods to grpc.proto.\n\n- Added gRPC boilerplate method to GrpcPaymentAccountsService.\n\n- Added implimentation to CoreApi -> CorePaymentAccountsService.\n\n- Refactored PaymentAccountTest hierarchy.\n\n- Add api method to CLI.", "committedDate": "2020-11-18T15:03:22Z", "type": "commit"}, {"oid": "a46526198dc4667621d0d3bc6f5b86d7a4f2d6a3", "url": "https://github.com/bisq-network/bisq/commit/a46526198dc4667621d0d3bc6f5b86d7a4f2d6a3", "message": "Avoid codacy issue over use of fully qualified name\n\nHad to change the getPaymentMethods() names to getPaymentMethodIds() to\navoid this codacy issue:\n\n\"Unnecessary use of fully qualified name 'PaymentMethod.getPaymentMethods'\ndue to existing static import 'bisq.core.payment.payload.PaymentMethod.*'\"\n\nIf 'PaymentMethod.getPaymentMethods' was changed to 'getPaymentMethods',\na recursive loop would result, ending in an out of stack heap crash.\n\nThis renaming of the method on the server is correct, but the CLI's\n'getpaymentmethods' name was not changed.", "committedDate": "2020-11-18T15:29:59Z", "type": "commit"}, {"oid": "0046b08f9d748f2bca0595cc1f245633977b2aac", "url": "https://github.com/bisq-network/bisq/commit/0046b08f9d748f2bca0595cc1f245633977b2aac", "message": "Revert \"Avoid codacy issue over use of fully qualified name\"\n\nThis reverts commit a46526198dc4667621d0d3bc6f5b86d7a4f2d6a3.\n\nThe service side method name change is not correct.", "committedDate": "2020-11-18T15:47:12Z", "type": "commit"}, {"oid": "7a7d5ba0a77e0227711acd01e80cf8fc44c08726", "url": "https://github.com/bisq-network/bisq/commit/7a7d5ba0a77e0227711acd01e80cf8fc44c08726", "message": "Print the payment method id (only)", "committedDate": "2020-11-18T15:53:36Z", "type": "commit"}, {"oid": "0e0af2090078f60a068bde3574c4fae01ea5ed0b", "url": "https://github.com/bisq-network/bisq/commit/0e0af2090078f60a068bde3574c4fae01ea5ed0b", "message": "Avoid codacy issue over use of fully qualified name\n\nChanged the core getPaymentMethods() -> getFiatPaymentMethods() to avoid\n\n\"Unnecessary use of fully qualified name 'PaymentMethod.getPaymentMethods'\ndue to existing static import 'bisq.core.payment.payload.PaymentMethod.*'\"", "committedDate": "2020-11-18T15:58:58Z", "type": "commit"}, {"oid": "7d0648afd09dd6a77a17c11571cede86027ae9be", "url": "https://github.com/bisq-network/bisq/commit/7d0648afd09dd6a77a17c11571cede86027ae9be", "message": "Make codacy happy again", "committedDate": "2020-11-18T16:10:39Z", "type": "commit"}, {"oid": "32ed7ac4060cb050f782cf745054bb4fd54ced25", "url": "https://github.com/bisq-network/bisq/commit/32ed7ac4060cb050f782cf745054bb4fd54ced25", "message": "Add ReflectionUtils to common.util pkg\n\nThis class will aid the api's (create) PaymentAccount json form\nserialization/de-serialization.", "committedDate": "2020-11-18T19:11:10Z", "type": "commit"}, {"oid": "c25debaf99f11d6037c075b48d39efb43f4e8843", "url": "https://github.com/bisq-network/bisq/commit/c25debaf99f11d6037c075b48d39efb43f4e8843", "message": "Add new (gson) PaymentAccountTypeAdapter to core.api.model\n\nThis class does most of the work of the api's (create) PaymentAccount\njson form serialization/de-serialization.", "committedDate": "2020-11-18T19:12:42Z", "type": "commit"}, {"oid": "1f84ad0fd119a84391d347d2586f2ac01cc3857f", "url": "https://github.com/bisq-network/bisq/commit/1f84ad0fd119a84391d347d2586f2ac01cc3857f", "message": "Add isCountryBasedPaymentAccount to abstract PaymentAccount", "committedDate": "2020-11-18T19:15:13Z", "type": "commit"}, {"oid": "32dd727a8917d989c282783ca82d0639a7aee25b", "url": "https://github.com/bisq-network/bisq/commit/32dd727a8917d989c282783ca82d0639a7aee25b", "message": "Add new PaymentAccountForm to core.api.model\n\nThis class uses the gson PaymentAccountTypeAdapter to generate editable\njson forms for PaymentAccount sub-types, and instantiate PaymentAccount\ninstances from edited json forms.", "committedDate": "2020-11-18T19:16:04Z", "type": "commit"}, {"oid": "8996fa17483cdfae3537abcda117ceee975e6b6b", "url": "https://github.com/bisq-network/bisq/commit/8996fa17483cdfae3537abcda117ceee975e6b6b", "message": "Add boilerplate for new 'getpaymentacctform' api method", "committedDate": "2020-11-18T19:17:24Z", "type": "commit"}, {"oid": "dc227ec8cc25405188581043a33eb4b3a8664b11", "url": "https://github.com/bisq-network/bisq/commit/dc227ec8cc25405188581043a33eb4b3a8664b11", "message": "Add new api method 'getpaymentacctform' to CLI", "committedDate": "2020-11-18T19:18:15Z", "type": "commit"}, {"oid": "fdb89a26d0c9cae35c27d9c6f2c565f08aa3db23", "url": "https://github.com/bisq-network/bisq/commit/fdb89a26d0c9cae35c27d9c6f2c565f08aa3db23", "message": "Test new api method 'getpaymentacctform'", "committedDate": "2020-11-18T19:18:57Z", "type": "commit"}, {"oid": "35c1c4e9443b2931ac1e43e60ddd6f1022a048d9", "url": "https://github.com/bisq-network/bisq/commit/35c1c4e9443b2931ac1e43e60ddd6f1022a048d9", "message": "Ensure EXPECTED_FORM.clear() is never skipped", "committedDate": "2020-11-18T19:42:17Z", "type": "commit"}, {"oid": "08228d07bc92de1feaf722afa0dd4bd068aba671", "url": "https://github.com/bisq-network/bisq/commit/08228d07bc92de1feaf722afa0dd4bd068aba671", "message": "Replace existing api method 'createpaymentacct' impl\n\nIn the CLI, this method now takes a single argument, the path to a json\nfile (a payment account form).  The json text is read from the file\nand sent to the server, where it is serialized to a new PaymentAccount\ninstance, saved, and sent back to the CLI as a protobuf.PaymentAccount.\n\n- Modified existing gRPC boilerplate in grpc.proto and GrpcPaymentAccountsService.\n\n- Modified existing method signatures in CoreApi and CorePaymentAccountsService.\n\n- Replaced existing method impl in CorePaymentAccountsService and\n  removed dead code.\n\n- Replaced the CLI's existing 'createpaymentacct' method impl.\n\n- Modified existing tests.", "committedDate": "2020-11-18T22:23:21Z", "type": "commit"}, {"oid": "138822edadea4e2a04ad0292f5016e5bdccf06ac", "url": "https://github.com/bisq-network/bisq/commit/138822edadea4e2a04ad0292f5016e5bdccf06ac", "message": "Avoid 'unnecessary use of fully qualified name' codacy issue", "committedDate": "2020-11-18T23:05:15Z", "type": "commit"}, {"oid": "cb9a68bae197459e7b2dc7a8de1f9e4fa6944394", "url": "https://github.com/bisq-network/bisq/commit/cb9a68bae197459e7b2dc7a8de1f9e4fa6944394", "message": "Tidy up payment accts api related msgs on CLI", "committedDate": "2020-11-19T15:01:41Z", "type": "commit"}, {"oid": "ff887eb3392f62b4502fa3fdc595aa600b15d7cc", "url": "https://github.com/bisq-network/bisq/commit/ff887eb3392f62b4502fa3fdc595aa600b15d7cc", "message": "Fix createpaymentacct validation problems\n\n- Add missing boilerplate error handling to GrpcPaymentAccountsService.\n\n- Edit some PaymentAccountForm & PaymentAccountTypeAdapter exception\n  messages that would be passed to CLI;  they should be in the same\n  style as existing CLI err msgs.", "committedDate": "2020-11-19T16:38:34Z", "type": "commit"}, {"oid": "58f1af6f45530c17827f2694ab237ba07b1719fd", "url": "https://github.com/bisq-network/bisq/commit/58f1af6f45530c17827f2694ab237ba07b1719fd", "message": "Log server stack traces, pass concise err msgs to CLI\n\nFor exceptions caught in the server, we want to log a reason and a\nfull stack trace, then send less verbose exception msgs up to the CLI.", "committedDate": "2020-11-20T15:00:22Z", "type": "commit"}, {"oid": "459b2a9c4983f9326301b2dcdff87109ce76d4aa", "url": "https://github.com/bisq-network/bisq/commit/459b2a9c4983f9326301b2dcdff87109ce76d4aa", "message": "Add create payment account (api) tests", "committedDate": "2020-11-20T19:46:36Z", "type": "commit"}, {"oid": "bb6762a23e410fdc2504b6320c48aeb98275be9f", "url": "https://github.com/bisq-network/bisq/commit/bb6762a23e410fdc2504b6320c48aeb98275be9f", "message": "Reverse argument order for assert(expected, actual) convention", "committedDate": "2020-11-20T19:53:59Z", "type": "commit"}, {"oid": "636fac9170e0ea90b4ba2b94a3705d8a0e6bd649", "url": "https://github.com/bisq-network/bisq/commit/636fac9170e0ea90b4ba2b94a3705d8a0e6bd649", "message": "Add isMoneyGramAccount to abstract PaymentAccount", "committedDate": "2020-11-21T18:21:10Z", "type": "commit"}, {"oid": "23bfa2e7fc7948114e19dccbe41b307ee70a50d0", "url": "https://github.com/bisq-network/bisq/commit/23bfa2e7fc7948114e19dccbe41b307ee70a50d0", "message": "Refactor didReadCountryField to set country on MoneyGram acct\n\nMoneyGram is not a CountryBasedPaymentAccount, but it does\nhave a country field.", "committedDate": "2020-11-21T18:22:15Z", "type": "commit"}, {"oid": "76097fc9dc1ec8f8bb7234db92d21d4abc40f762", "url": "https://github.com/bisq-network/bisq/commit/76097fc9dc1ec8f8bb7234db92d21d4abc40f762", "message": "Enable CreateMoneyGramAccount test", "committedDate": "2020-11-21T18:24:33Z", "type": "commit"}, {"oid": "424f9480ade352f6e79378fe79f84580c357a555", "url": "https://github.com/bisq-network/bisq/commit/424f9480ade352f6e79378fe79f84580c357a555", "message": "Fix broken tests\n\n- Change the getbalance tests to just check a sucessful '0' status code.\n\n  The api's getbalance method returns full balance info now, not just a\n  formatted long.  We still assert the cmd did not fail, but don't check\n  the value string.\n\n- Remove obsolete createpaymentacct tests.\n\n  This is well tested in apitest, and testing this cmd is unnecesarily\n  complex to do in a bats script.", "committedDate": "2020-11-22T19:12:34Z", "type": "commit"}, {"oid": "daeb34b3d28c6118a904d53a917a37acbfe91938", "url": "https://github.com/bisq-network/bisq/commit/daeb34b3d28c6118a904d53a917a37acbfe91938", "message": "Add two new api method tests\n\nKeeping the bats test simple.  More complex use cases are tested in\napitest, and we don't want to be trading on mainnet with a bats test.\n\n- Add new getunusedbsqaddress test, assert success return status.\n- Add new getpaymentmethods test, assert success return status.", "committedDate": "2020-11-22T19:25:21Z", "type": "commit"}, {"oid": "08d56733a864332e0f66cb4d01721214a8b1c4e3", "url": "https://github.com/bisq-network/bisq/commit/08d56733a864332e0f66cb4d01721214a8b1c4e3", "message": "Fix getbalance out bug in CLI\n\nRunning the bats test exposed a bug that shows BSQ and BTC balance\ninfo no matter what currency code argument is passed to the server.", "committedDate": "2020-11-22T19:54:24Z", "type": "commit"}, {"oid": "ab5780e0e105d3b00b0dcd91394e33f1c6368c04", "url": "https://github.com/bisq-network/bisq/commit/ab5780e0e105d3b00b0dcd91394e33f1c6368c04", "message": "Print 'no offers found' msg in CLI if list is empty", "committedDate": "2020-11-22T21:58:43Z", "type": "commit"}, {"oid": "c88543848d7d553df18afc4d2ccd10ff009075af", "url": "https://github.com/bisq-network/bisq/commit/c88543848d7d553df18afc4d2ccd10ff009075af", "message": "Fix minor error & help msg bugs", "committedDate": "2020-11-23T15:06:57Z", "type": "commit"}, {"oid": "f50634ee4a4fe22c9209727f4c78fe4c0a29a1df", "url": "https://github.com/bisq-network/bisq/commit/f50634ee4a4fe22c9209727f4c78fe4c0a29a1df", "message": "Resolve BsqSendView file conflict\n\nRestore BsqSendView to version @ commit 48a515be01dd674d241be04cddb18c0e823e91b4.\nAuthor: jmacxx\nDate:   Tue Nov 10 19:35:31 2020 -0600\n\n    Add encrypted wallet password prompt when sending funds from BSQ wallet\n\n    Correct wording of transaction confirmation popup to use 'mining fee'\n    instead of 'transaction fee' to make it consistent with wording of\n    the BTC confirmation popup.", "committedDate": "2020-11-26T16:34:05Z", "type": "commit"}, {"oid": "9d863e5a40f10e7c45187a5e4980de1fa9ccebe3", "url": "https://github.com/bisq-network/bisq/commit/9d863e5a40f10e7c45187a5e4980de1fa9ccebe3", "message": "Remove deprecated method long getAvailableBalance", "committedDate": "2020-11-26T17:25:24Z", "type": "commit"}, {"oid": "baf300afaef3c1fb1fc16fbb0a2116a214f294cb", "url": "https://github.com/bisq-network/bisq/commit/baf300afaef3c1fb1fc16fbb0a2116a214f294cb", "message": "Add missing newlines to console output statements\n\nAnd remove some unecessary single quotes.", "committedDate": "2020-11-26T18:02:30Z", "type": "commit"}, {"oid": "15592887dddfb2b90c34dfee918e200033178f4d", "url": "https://github.com/bisq-network/bisq/commit/15592887dddfb2b90c34dfee918e200033178f4d", "message": "Implement fromProto\n\nThis is marked unused, but it will be in future tests.", "committedDate": "2020-11-26T18:06:14Z", "type": "commit"}, {"oid": "8f13b85e19c099180495036037848dd4f99675c4", "url": "https://github.com/bisq-network/bisq/commit/8f13b85e19c099180495036037848dd4f99675c4", "message": "Merge branch 'master' into 20-pr-change-requests-A", "committedDate": "2020-11-26T20:19:00Z", "type": "commit"}, {"oid": "5a06e4ea3e01d61e6a90236934b64b58818d9b49", "url": "https://github.com/bisq-network/bisq/commit/5a06e4ea3e01d61e6a90236934b64b58818d9b49", "message": "Adjust to changed CoinUtil", "committedDate": "2020-11-26T20:19:47Z", "type": "commit"}, {"oid": "8fd578614d96a565660289d32b2ba2dd3f258efa", "url": "https://github.com/bisq-network/bisq/commit/8fd578614d96a565660289d32b2ba2dd3f258efa", "message": "Adjust test for a new payment method", "committedDate": "2020-11-26T20:20:29Z", "type": "commit"}, {"oid": "44646763ef9492e33d1029ffa0118654d01aefc1", "url": "https://github.com/bisq-network/bisq/commit/44646763ef9492e33d1029ffa0118654d01aefc1", "message": "Add protobuf defs for gettxfeerate, settxfeerate, unsettxfeerate", "committedDate": "2020-11-26T21:02:32Z", "type": "commit"}, {"oid": "9662f26b23889debf9e3b402b3a999e816a4fbfe", "url": "https://github.com/bisq-network/bisq/commit/9662f26b23889debf9e3b402b3a999e816a4fbfe", "message": "Add protbuf TxFeeRateInfo", "committedDate": "2020-11-26T21:03:42Z", "type": "commit"}, {"oid": "abe716060869ced8a253d5f63b4fe2e5e39cefb3", "url": "https://github.com/bisq-network/bisq/commit/abe716060869ced8a253d5f63b4fe2e5e39cefb3", "message": "Add TxFeeRateInfo proto wrapper", "committedDate": "2020-11-26T21:35:24Z", "type": "commit"}, {"oid": "0b0f9f112056c6956b5112e31fd7dcf12a8701da", "url": "https://github.com/bisq-network/bisq/commit/0b0f9f112056c6956b5112e31fd7dcf12a8701da", "message": "Add gettxfeerate, settxfeerate, unsettxfeerate implementations", "committedDate": "2020-11-26T21:36:15Z", "type": "commit"}, {"oid": "06eb3786c0ceda419ba3a594907ac71758bc5b6c", "url": "https://github.com/bisq-network/bisq/commit/06eb3786c0ceda419ba3a594907ac71758bc5b6c", "message": "Test new tx fee rate api methods", "committedDate": "2020-11-26T21:36:58Z", "type": "commit"}, {"oid": "965b003f617dcf38f79bc11e8268555fbb98a3bb", "url": "https://github.com/bisq-network/bisq/commit/965b003f617dcf38f79bc11e8268555fbb98a3bb", "message": "Remove unnecessary use of fully qualified name for codacy", "committedDate": "2020-11-27T09:45:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU2MDkwMw==", "url": "https://github.com/bisq-network/bisq/pull/4858#discussion_r533560903", "bodyText": "I don't understand what's going on here.", "author": "sqrrm", "createdAt": "2020-12-01T16:44:38Z", "path": "cli/src/main/java/bisq/cli/CurrencyFormat.java", "diffHunk": "@@ -50,6 +53,23 @@ public static String formatBsq(long sats) {\n         return BSQ_FORMAT.format(BigDecimal.valueOf(sats).divide(BSQ_SATOSHI_DIVISOR));\n     }\n \n+    public static String formatTxFeeRate(TxFeeRateInfo txFeeRateInfo) {\n+        String stdTxFeeRate = formatTxFeeRate(txFeeRateInfo.getStdTxFeeRate());\n+        String customTxFeeRate = txFeeRateInfo.getCustomTxFeeRate() < 0\n+                ? formatTxFeeRate(txFeeRateInfo.getCustomTxFeeRate())\n+                : null;", "originalCommit": "0b0f9f112056c6956b5112e31fd7dcf12a8701da", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU3NjQ4MQ==", "url": "https://github.com/bisq-network/bisq/pull/4858#discussion_r533576481", "bodyText": "To clear this up, I should probably add a boolean useCustomWithdrawalTxFee field to TxFeeRateInfo.  This would be set from the Preference#useCustomWithdrawalTxFee value.     (Remember that Preferences is not visible to the CLI, and these *Info proto wrappers are for passing the minimum data needed from server to CLI.)\nThis confusion is caused by not having that field.  When txFeeRateInfo.getCustomTxFeeRate() == -1, the custom tx fee rate preference is ignored in the CLI.  In core, it means the preference.useCustomWithdrawalTxFee == false.\nIn pseudo English, it means\nString customTxFeeRate = (if are we using the fee service's tx fee rate)\n                ? (format the custom tx fee rate)\n                : null;\n\n\nAdding a boolean useCustomWithdrawalTxFee field to TxFeeRateInfo would fix this.", "author": "ghubstan", "createdAt": "2020-12-01T17:05:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU2MDkwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY5NDE5OA==", "url": "https://github.com/bisq-network/bisq/pull/4858#discussion_r533694198", "bodyText": "Fixed in commit faf030f.", "author": "ghubstan", "createdAt": "2020-12-01T20:16:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU2MDkwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU2MzQzMA==", "url": "https://github.com/bisq-network/bisq/pull/4858#discussion_r533563430", "bodyText": "Is it really a good idea to block here? As discussed before, could we use a callback to avoid blocking?", "author": "sqrrm", "createdAt": "2020-12-01T16:47:58Z", "path": "core/src/main/java/bisq/core/api/CoreWalletsService.java", "diffHunk": "@@ -185,6 +196,37 @@ void sendBsq(String address,\n         }\n     }\n \n+    TxFeeRateInfo getTxFeeRate() {\n+        try {\n+            CompletableFuture<Void> feeRequestFuture = CompletableFuture.runAsync(feeService::requestFees);\n+            feeRequestFuture.get();  // Block until async fee request is complete.", "originalCommit": "0b0f9f112056c6956b5112e31fd7dcf12a8701da", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU5NDE2MA==", "url": "https://github.com/bisq-network/bisq/pull/4858#discussion_r533594160", "bodyText": "I'm not sure what the difference would be between future.get() and using a callback.   The wait for a response has to happen somewhere before GrpcWalletsService returns the gRPC reply.\nDo you think FeeService#requestFees should be refactored to take a callback parameter?  Were you and chimp wanting to  refactor FeeService#requestFees?  Or should that be left alone, and make adjustments only in the api?\nAnother way would be to deal with the result handling is do it in the GrpcWalletsService.  I try to keep those boilerplate Grpc*Service classes as small as possible, but sometimes dealing with async calls in that layer is unavoidable.\nIf we are concerned about blocking forever, we could block with a timeout:\nfeeRequestFuture.get(5, SECONDS);  // Block until async fee request is complete.", "author": "ghubstan", "createdAt": "2020-12-01T17:31:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU2MzQzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzcyMzcyOQ==", "url": "https://github.com/bisq-network/bisq/pull/4858#discussion_r533723729", "bodyText": "I was thinking something like, in CoreWalletService\n    TxFeeRateInfo getTxFeeRate(ResultHandler resultHandler, ErrorMessageHandler errorMessageHandler) {\n            CompletableFuture<Void> feeRequestFuture = CompletableFuture.runAsync(feeService::requestFees);\n            Futures.addCallback(feeRequestFuture, new FutureCallback<>() {\n\n                @Override\n                public void onSuccess(@Nullable Object result) {\n                    resultHandler.handleResult();\n                }\n\n                @Override\n                public void onFailure(Throwable t) {\n                    errorMessageHandler.handleErrorMessage(t.getMessage());\n                }\n            }, MoreExecutors.directExecutor());\n    }\n\nwhere the resultHandler is doing the gRPC reply, something like\n    @Override\n    public void getTxFeeRate(GetTxFeeRateRequest req,\n                             StreamObserver<GetTxFeeRateReply> responseObserver) {\n        ResultHandler resultHandler = () -> {\n            var reply = GetTxFeeRateReply.newBuilder()\n                    .setTxFeeRateInfo(txFeeRateInfo.toProtoMessage())\n                    .build();\n            responseObserver.onNext(reply);\n            responseObserver.onCompleted();\n        };\n        coreApi.getTxFeeRate(resultHandler, errorHandler);\n    }\n\nBad code, just to illustrate the idea.", "author": "sqrrm", "createdAt": "2020-12-01T21:11:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU2MzQzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzcyNTkzNg==", "url": "https://github.com/bisq-network/bisq/pull/4858#discussion_r533725936", "bodyText": "This is exactly [erhmmm... similar] what I'm doing, will test soon...", "author": "ghubstan", "createdAt": "2020-12-01T21:15:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU2MzQzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgwOTMwMQ==", "url": "https://github.com/bisq-network/bisq/pull/4858#discussion_r533809301", "bodyText": "Commit 987d893 is a solution to the blocking problem.  I don't pass an error handler to keep it simple, and not do that before I understand how it would help here.", "author": "ghubstan", "createdAt": "2020-12-02T00:17:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU2MzQzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU2NDk4Mw==", "url": "https://github.com/bisq-network/bisq/pull/4858#discussion_r533564983", "bodyText": "We also don't want to create txs with fees < 1 sat/b, but perhaps that doesn't have to be checked here.", "author": "sqrrm", "createdAt": "2020-12-01T16:50:05Z", "path": "core/src/main/java/bisq/core/api/CoreWalletsService.java", "diffHunk": "@@ -185,6 +196,37 @@ void sendBsq(String address,\n         }\n     }\n \n+    TxFeeRateInfo getTxFeeRate() {\n+        try {\n+            CompletableFuture<Void> feeRequestFuture = CompletableFuture.runAsync(feeService::requestFees);\n+            feeRequestFuture.get();  // Block until async fee request is complete.\n+        } catch (InterruptedException | ExecutionException e) {\n+            throw new IllegalStateException(\"could not request fees from fee service.\", e);\n+        }\n+\n+        Coin stdTxFeeRate = feeService.getTxFeePerVbyte();\n+        Coin customTxFeeRate = preferences.isUseCustomWithdrawalTxFee()\n+                ? Coin.valueOf(preferences.getWithdrawalTxFeeInVbytes())\n+                : Coin.NEGATIVE_SATOSHI;\n+\n+        return new TxFeeRateInfo(stdTxFeeRate.value, customTxFeeRate.value);\n+    }\n+\n+    TxFeeRateInfo setTxFeeRatePreference(long txFeeRate) {\n+        if (txFeeRate <= 0)", "originalCommit": "0b0f9f112056c6956b5112e31fd7dcf12a8701da", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU5ODY2NA==", "url": "https://github.com/bisq-network/bisq/pull/4858#discussion_r533598664", "bodyText": "Doing this check here makes the CLI's error msg stylistically consistent with others.\nThis brings up a general issue that is going to need quite a bit of work in the API:  displaying validation error messages coming from the server's core, in the CLI.    But for now, getting all the v1 methods working for correct parameters is the short term priority.", "author": "ghubstan", "createdAt": "2020-12-01T17:38:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU2NDk4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzcyNDIzNA==", "url": "https://github.com/bisq-network/bisq/pull/4858#discussion_r533724234", "bodyText": "Agreed, not an issue for now, good to think of how to handle it though as you say.", "author": "sqrrm", "createdAt": "2020-12-01T21:12:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU2NDk4Mw=="}], "type": "inlineReview"}, {"oid": "45cfb952450ddfa50458aca259bf90447c52dab9", "url": "https://github.com/bisq-network/bisq/commit/45cfb952450ddfa50458aca259bf90447c52dab9", "message": "Remove many log.isDebugEnabled() checks\n\nThese do not buy enough in the way of performance, at the cost of\nso many additional lines.  Buy these checks should be done for\ndebug log statements that have expensive parameters.", "committedDate": "2020-12-01T18:48:11Z", "type": "commit"}, {"oid": "62a2aa85434213493c6d5225de9b694123ad67c4", "url": "https://github.com/bisq-network/bisq/commit/62a2aa85434213493c6d5225de9b694123ad67c4", "message": "Don't be so polite", "committedDate": "2020-12-01T18:55:53Z", "type": "commit"}, {"oid": "2989f1be3f6dd9990d48642ac252bd350d906dc7", "url": "https://github.com/bisq-network/bisq/commit/2989f1be3f6dd9990d48642ac252bd350d906dc7", "message": "Loosen up the PaymentMethod count test assert\n\n, so we don't have to change this test every time a new payment\nmethod is added.", "committedDate": "2020-12-01T19:10:00Z", "type": "commit"}, {"oid": "faf030fbc5810e46a0d6fdab154b154ef39f72db", "url": "https://github.com/bisq-network/bisq/commit/faf030fbc5810e46a0d6fdab154b154ef39f72db", "message": "Add useCustomTxFeeRate field to TxFeeRateInfo proto wrapper\n\nThis is set from the core preferences.isUseCustomWithdrawalTxFee(),\nand simplifies fee changing logic in the API.", "committedDate": "2020-12-01T20:14:08Z", "type": "commit"}, {"oid": "987d89319e8a824033879846ac43003ea219cfd0", "url": "https://github.com/bisq-network/bisq/commit/987d89319e8a824033879846ac43003ea219cfd0", "message": "Use ListenableFuture and callback when requesting tx fee\n\nThis change fixes the blocking problem in the fee rate request api.\nAlso redefined the TxFeeRateInfo.\n\n- Redefined grpc.proto message TxFeeRateInfo, added\n  lastFeeServiceRequestTs field. (CLI user may want to know\n  TS of last fee request.)\n\n- Adjusted TxFeeRateInfo proto wrapper.\n\n- Adjusted CurrencyFormat and BtcTxFeeRateTest to new TxFeeRateInfo.\n\n- Added @Getter annotation to FeeService.  (CLI user may want to know\n  TS of last fee request).\n\n- Pass resultHandler from GrpcWalletsService through CoreApi, to\n  CoreWalletsService's tx fee rate api methods.", "committedDate": "2020-12-02T00:10:47Z", "type": "commit"}, {"oid": "9b4bdfc5ad8ff3e76296cb134b55ceba4397d158", "url": "https://github.com/bisq-network/bisq/commit/9b4bdfc5ad8ff3e76296cb134b55ceba4397d158", "message": "Make salt an editable payment acct json form field\n\nUsers need to be able to preserve their acct age when moving a\npayment account to a new client.\n\nAlso adjusted affected tests, and did some minor refactoring\nof the custom gson type adaptor.", "committedDate": "2020-12-02T16:52:39Z", "type": "commit"}, {"oid": "65df9e1503a9a38518ac29544e8a62cd4ff1045a", "url": "https://github.com/bisq-network/bisq/commit/65df9e1503a9a38518ac29544e8a62cd4ff1045a", "message": "Change sendbsq's amount parameter type to String", "committedDate": "2020-12-02T17:52:05Z", "type": "commit"}, {"oid": "2efd094f68f2b867624a7c27191b42a08bb15f8f", "url": "https://github.com/bisq-network/bisq/commit/2efd094f68f2b867624a7c27191b42a08bb15f8f", "message": "Remove method only used in class' toString", "committedDate": "2020-12-02T18:01:34Z", "type": "commit"}, {"oid": "7f636e45f995db168501b0772ed13d4a1eb231f1", "url": "https://github.com/bisq-network/bisq/commit/7f636e45f995db168501b0772ed13d4a1eb231f1", "message": "Prevent attempt to send amount of BSQ < dust", "committedDate": "2020-12-02T18:21:20Z", "type": "commit"}]}