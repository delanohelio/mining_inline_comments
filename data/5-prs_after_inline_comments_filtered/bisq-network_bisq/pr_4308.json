{"pr_number": 4308, "pr_title": "Add rpc method 'createpaymentacct'", "pr_createdAt": "2020-06-15T17:49:22Z", "pr_url": "https://github.com/bisq-network/bisq/pull/4308", "timeline": [{"oid": "b1146fdd12ad89e94e38a8853e316f964824d67c", "url": "https://github.com/bisq-network/bisq/commit/b1146fdd12ad89e94e38a8853e316f964824d67c", "message": "Rename CoreWalletService -> CoreWalletsService\n\nThis change fixes the ambiguity in the original class name, which\nimplied it was a btc wallet service, not a bsq and btc wallets service.", "committedDate": "2020-06-12T18:24:01Z", "type": "commit"}, {"oid": "ec66b14986bb0a9f3369009aafc541add4e65f03", "url": "https://github.com/bisq-network/bisq/commit/ec66b14986bb0a9f3369009aafc541add4e65f03", "message": "Add rpc wallet(s) protection tests\n\nThis commit includes the following changes:\n\n * New tests for methods `lockwallet`, `unlockwallet`,\n   `removewalletpassword`, and `setwalletpassword`.\n\n * New `getbalance` method error handing tests to verify\n   error message correctness when wallet is locked.\n\n * Update to `getversion` method test -- now expects `1.3.4`.\n\n * Check for new `[params]` column header in help text.", "committedDate": "2020-06-12T18:56:19Z", "type": "commit"}, {"oid": "85c96764fb3adaa25e8366d547be9d05e635f1bc", "url": "https://github.com/bisq-network/bisq/commit/85c96764fb3adaa25e8366d547be9d05e635f1bc", "message": "Add rpc method 'getfundingaddresses'\n\nThis addresses task #1 in issue https://github.com/bisq-network/bisq/issues/4257.\n\nThis new gRPC WalletService method displays the BTC wallet's list of\nreceiving addresses.  The balance and number of confirmations\nfor the most recent transaction is displayed to the right of each\naddress.  Instead of returning a gRPC data structure to the client,\nthe service method returns a formatted String.\n\nIf the BTC wallet has no unused addresses, one will be created and\nincluded in the returned list, and it can be used to fund the wallet.\n\nThe new method required injection of the BtcWalletService into CoreWalletsService,\nand the usual boilerplate changes to grpc.proto, CliMain, and GrpcWalletService.\n\nSome of the next PRs (for #4257) will require some common functionality within\nCoreWalletsService, so these additional changes were included:\n\n  * a private, class level formatSatoshis function\n  * a public getNumConfirmationsForMostRecentTransaction method\n  * a public getAddressBalance method\n  * a private getAddressEntry method\n\nA unit test that verifies a successful return status was added to cli/test.sh.", "committedDate": "2020-06-13T22:59:45Z", "type": "commit"}, {"oid": "2e415de4adaf54a9f9c926fa4557af95e6fdfbe4", "url": "https://github.com/bisq-network/bisq/commit/2e415de4adaf54a9f9c926fa4557af95e6fdfbe4", "message": "Replace duplicate code in getFundingAddresses\n\nCleaned up the method body and improved the returned string's\nformatting.  Also added a line for this method in the CLI help text.", "committedDate": "2020-06-14T16:05:37Z", "type": "commit"}, {"oid": "b1228e5ea72211c9010943db1aa8bf46675417a6", "url": "https://github.com/bisq-network/bisq/commit/b1228e5ea72211c9010943db1aa8bf46675417a6", "message": "Add rpc method 'getaddressbalance'\n\nThis addresses task 2 in issue 4257\n\thttps://github.com/bisq-network/bisq/issues/4257\n\nThis new gRPC Wallet service method displays the balance and number\nof confimirmations of the most recent transaction for the given BTC\nwallet address.\n\nThe new method required the usual boilerplate changes to grpc.proto,\nCliMain, and GrpcWalletService.\n\nTwo unit tests to check error msgs was added to cli/test.sh.", "committedDate": "2020-06-14T17:23:47Z", "type": "commit"}, {"oid": "a7542e98bf62d86bc3486e1d4d925a9a0a64d8c6", "url": "https://github.com/bisq-network/bisq/commit/a7542e98bf62d86bc3486e1d4d925a9a0a64d8c6", "message": "Add rpc method 'createpaymentacct'\n\nThis addresses task 4 in issue 4257.\n    https://github.com/bisq-network/bisq/issues/4257\n\nThis PR should be reviewed/merged after PR 4304.\n    https://github.com/bisq-network/bisq/pull/4304\n\nThis new gRPC PaymentAccounts service method creates a dummy\nPerfectMoney payment account for the given name, number and fiat\ncurrency code, as part of the required \"simplest possible trading\nAPI\" (for demo).   An implementation supporting all payment\nmethods is not in the scope.\n\nChanges specific to the new rpc method implementation follow:\n\n* New createpaymentacct method + help text was added to CliMain.\n  Help text formatting was also changed to make room for larger\n  method names and argument lists.\n\n* The PaymentAccount proto service def was renamed PaymentAccounts\n  to avoid a name collision, and the new rpc CreatePaymentAccount\n  was made part of the newly named PaymentAccounts service def.\n\n* New GrpcPaymentAccountsService (gRPC boilerplate) and\n  CorePaymentAccountsService (method implementations) classes were\n  added.\n\n* The gRPC GetPaymentAccountsService stub was moved from GrpcServer\n  to the new GrpcPaymentAccountsService class, and\n  GrpcPaymentAccountsService is injected into GrpcServer.\n\n* A new createpaymentacct unit test was added to the bats test\n  suite (checks for successful return status code).\n\nMaybe bit out of scope, some small changes were made towards making\nsure the entire API is defined in CoreApi, which is used as a\npass-through object to the new CorePaymentAccountsService.  In the\nnext PR, similar refactoring will be done to make CoreApi the\npass-through object for all of the existing CoreWalletsService\nmethods.  (CoreWalletsService will be injected into CoreApi.)\nIn the future, all Grpc*Service implementations will call core\nservices through CoreApi, for the sake of consistency.", "committedDate": "2020-06-15T17:32:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY1NTIzMw==", "url": "https://github.com/bisq-network/bisq/pull/4308#discussion_r443655233", "bodyText": "These size-based checks don't actually know which argument was ommitted. We might (or might not) go for more interesting interfaces in the future, but in this case we only know that not all arguments were passed.", "author": "dmos62", "createdAt": "2020-06-22T15:45:35Z", "path": "cli/src/main/java/bisq/cli/CliMain.java", "diffHunk": "@@ -152,6 +160,46 @@ public static void run(String[] args) {\n                     out.println(btcBalance);\n                     return;\n                 }\n+                case getaddressbalance: {\n+                    if (nonOptionArgs.size() < 2)\n+                        throw new IllegalArgumentException(\"no address specified\");\n+\n+                    var request = GetAddressBalanceRequest.newBuilder()\n+                            .setAddress(nonOptionArgs.get(1)).build();\n+                    var reply = walletService.getAddressBalance(request);\n+                    out.println(reply.getAddressBalanceInfo());\n+                    return;\n+                }\n+                case getfundingaddresses: {\n+                    var request = GetFundingAddressesRequest.newBuilder().build();\n+                    var reply = walletService.getFundingAddresses(request);\n+                    out.println(reply.getFundingAddressesInfo());\n+                    return;\n+                }\n+                case createpaymentacct: {\n+                    if (nonOptionArgs.size() < 2)\n+                        throw new IllegalArgumentException(\"no account name specified\");\n+\n+                    var accountName = nonOptionArgs.get(1);\n+\n+                    if (nonOptionArgs.size() < 3)\n+                        throw new IllegalArgumentException(\"no account number specified\");\n+\n+                    var accountNumber = nonOptionArgs.get(2);\n+\n+                    if (nonOptionArgs.size() < 4)\n+                        throw new IllegalArgumentException(\"no fiat currency specified\");", "originalCommit": "a7542e98bf62d86bc3486e1d4d925a9a0a64d8c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY3MDQ1OQ==", "url": "https://github.com/bisq-network/bisq/pull/4308#discussion_r443670459", "bodyText": "The original motivation for doing it this way was to keep it as simple as possible because this is/was a reference implementation only, to show others how to build their own gRPC CLI.  This isn't the final word on the issue, so let's leave it open.", "author": "ghubstan", "createdAt": "2020-06-22T16:08:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY1NTIzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDEyMzc5Nw==", "url": "https://github.com/bisq-network/bisq/pull/4308#discussion_r444123797", "bodyText": "I'm not sure I follow. I'll try to rephrase. My concern here is that this behaviour is incorrect in some cases. Suppose you call createpaymentacct with arguments account name, account number (fiat currency omitted). It will output \"no fiat currency specified\", which is correct. But, if you call it with arguments account name, fiat currency (account number omitted), it will output \"no fiat currency specified\", which is incorrect. Or am I mistaken?", "author": "dmos62", "createdAt": "2020-06-23T10:29:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY1NTIzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI1OTU1OQ==", "url": "https://github.com/bisq-network/bisq/pull/4308#discussion_r444259559", "bodyText": "I will replace this code that assumes correct param order, with a simple argument count check.   The change will be made in the latest PR of this long PR chain:  PR 4329.", "author": "ghubstan", "createdAt": "2020-06-23T14:17:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY1NTIzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDMyNjE4OA==", "url": "https://github.com/bisq-network/bisq/pull/4308#discussion_r444326188", "bodyText": "The requested change is in commit 9691f35 , part of PR 4329", "author": "ghubstan", "createdAt": "2020-06-23T15:47:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY1NTIzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY1NzYyOQ==", "url": "https://github.com/bisq-network/bisq/pull/4308#discussion_r443657629", "bodyText": ".toUpperCase() seems misplaced here. It would soon get repetive. Whether the underlying logic differentiates between capitalizations is a low-level implementation detail and would do better at the lowest practical level.", "author": "dmos62", "createdAt": "2020-06-22T15:49:07Z", "path": "cli/src/main/java/bisq/cli/CliMain.java", "diffHunk": "@@ -152,6 +160,46 @@ public static void run(String[] args) {\n                     out.println(btcBalance);\n                     return;\n                 }\n+                case getaddressbalance: {\n+                    if (nonOptionArgs.size() < 2)\n+                        throw new IllegalArgumentException(\"no address specified\");\n+\n+                    var request = GetAddressBalanceRequest.newBuilder()\n+                            .setAddress(nonOptionArgs.get(1)).build();\n+                    var reply = walletService.getAddressBalance(request);\n+                    out.println(reply.getAddressBalanceInfo());\n+                    return;\n+                }\n+                case getfundingaddresses: {\n+                    var request = GetFundingAddressesRequest.newBuilder().build();\n+                    var reply = walletService.getFundingAddresses(request);\n+                    out.println(reply.getFundingAddressesInfo());\n+                    return;\n+                }\n+                case createpaymentacct: {\n+                    if (nonOptionArgs.size() < 2)\n+                        throw new IllegalArgumentException(\"no account name specified\");\n+\n+                    var accountName = nonOptionArgs.get(1);\n+\n+                    if (nonOptionArgs.size() < 3)\n+                        throw new IllegalArgumentException(\"no account number specified\");\n+\n+                    var accountNumber = nonOptionArgs.get(2);\n+\n+                    if (nonOptionArgs.size() < 4)\n+                        throw new IllegalArgumentException(\"no fiat currency specified\");\n+\n+                    var fiatCurrencyCode = nonOptionArgs.get(3).toUpperCase();", "originalCommit": "a7542e98bf62d86bc3486e1d4d925a9a0a64d8c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY3MTA5Nw==", "url": "https://github.com/bisq-network/bisq/pull/4308#discussion_r443671097", "bodyText": "Agreed.  I will fix this.", "author": "ghubstan", "createdAt": "2020-06-22T16:09:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY1NzYyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc0MTIwNQ==", "url": "https://github.com/bisq-network/bisq/pull/4308#discussion_r443741205", "bodyText": "This is fixed in commit 61285a7, part of PR 4329.", "author": "ghubstan", "createdAt": "2020-06-22T18:14:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY1NzYyOQ=="}], "type": "inlineReview"}]}