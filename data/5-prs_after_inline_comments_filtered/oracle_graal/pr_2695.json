{"pr_number": 2695, "pr_title": "Enforce consistent lookup of class and file names", "pr_createdAt": "2020-07-20T20:25:29Z", "pr_url": "https://github.com/oracle/graal/pull/2695", "timeline": [{"oid": "ea4f593e18dec168f6d5f0f0bbcdeb816702243b", "url": "https://github.com/oracle/graal/commit/ea4f593e18dec168f6d5f0f0bbcdeb816702243b", "message": "Enforce consistent lookup of class and file names", "committedDate": "2020-07-22T13:41:14Z", "type": "forcePushed"}, {"oid": "275d58e1815ab9550d1af274ad1e40e2ebbd6f94", "url": "https://github.com/oracle/graal/commit/275d58e1815ab9550d1af274ad1e40e2ebbd6f94", "message": "Enforce consistent lookup of class and file names", "committedDate": "2020-07-22T15:42:38Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTUwMjU5Mg==", "url": "https://github.com/oracle/graal/pull/2695#discussion_r461502592", "bodyText": "Shouldn't this be:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            declaringClass = ((HostedType) declaringClass).getWrapped();\n          \n          \n            \n                            declaringClass = ((HostedType) declaringClass).getWrapped().getWrapped();\n          \n      \n    \n    \n  \n\n?", "author": "zakkak", "createdAt": "2020-07-28T11:13:48Z", "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/image/NativeImageDebugInfoProvider.java", "diffHunk": "@@ -309,8 +314,9 @@ private void computeFullFilePathAndCachePath() {\n                 clazz = ((OriginalClassProvider) declaringClass).getJavaClass();\n             }\n             /*\n-             * HostedType and AnalysisType punt calls to getSourceFilename to the wrapped class so\n-             * for consistency we need to do the path lookup relative to the wrapped class.\n+             * HostedType wraps an AnalysisType and both HostedType and AnalysisType punt calls to\n+             * getSourceFilename to the wrapped class so for consistency we need to do the path\n+             * lookup relative to the doubly unwrapped HostedType.\n              */\n             if (declaringClass instanceof HostedType) {\n                 declaringClass = ((HostedType) declaringClass).getWrapped();", "originalCommit": "275d58e1815ab9550d1af274ad1e40e2ebbd6f94", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYxNjA5NQ==", "url": "https://github.com/oracle/graal/pull/2695#discussion_r461616095", "bodyText": "No, I don't think so. The result of that single getWrapped() call is an AnalysisType. The next if detects that and unwraps a second time. That second if also deals with the case where an AnalysisType comes in direct.", "author": "adinn", "createdAt": "2020-07-28T14:16:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTUwMjU5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYxOTUwNA==", "url": "https://github.com/oracle/graal/pull/2695#discussion_r461619504", "bodyText": "Indeed. So a potential optimization would be to change the following if in an else if since the result of HostedType#getWrapped() returns an AnalysisType as you point out.\nI might be nit-picking here :)", "author": "zakkak", "createdAt": "2020-07-28T14:20:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTUwMjU5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY1NzY0MA==", "url": "https://github.com/oracle/graal/pull/2695#discussion_r461657640", "bodyText": "On a second thought, I think this should be fixed, because as it stands it only works because the if statements are in the correct order, making it easy to break things with a simple reordering without any clear indication that these two  statements should not be reordered.", "author": "zakkak", "createdAt": "2020-07-28T15:08:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTUwMjU5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTczMjAzOQ==", "url": "https://github.com/oracle/graal/pull/2695#discussion_r461732039", "bodyText": "The if cascade is correct and the comment provides the information which explains why. However, I agree it does not spell it out. I will change the comment to make this easier to infer:\n        /*\n         * HostedType wraps an AnalysisType and both HostedType and AnalysisType punt calls to\n         * getSourceFilename to the wrapped class so for consistency we need to do the path\n         * lookup relative to the doubly unwrapped HostedType or singly unwrapped AnalysisType.\n         */\n\nI'm not sure we need to protect any further against programmers who transpose conditional operations that side-effect the elements of their conditions. Instead I recommend we just reject their contributions. ;-)", "author": "adinn", "createdAt": "2020-07-28T16:57:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTUwMjU5Mg=="}], "type": "inlineReview"}, {"oid": "3ff83c334e4df9f722b7012db6cce9686738b725", "url": "https://github.com/oracle/graal/commit/3ff83c334e4df9f722b7012db6cce9686738b725", "message": "Enforce consistent lookup of class and file names", "committedDate": "2020-07-29T09:55:07Z", "type": "commit"}, {"oid": "3ff83c334e4df9f722b7012db6cce9686738b725", "url": "https://github.com/oracle/graal/commit/3ff83c334e4df9f722b7012db6cce9686738b725", "message": "Enforce consistent lookup of class and file names", "committedDate": "2020-07-29T09:55:07Z", "type": "forcePushed"}]}