{"pr_number": 2393, "pr_title": "Provide java.lang.Terminator.setup() via --install-exit-handlers", "pr_createdAt": "2020-04-24T16:12:30Z", "pr_url": "https://github.com/oracle/graal/pull/2393", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcyNjYwMg==", "url": "https://github.com/oracle/graal/pull/2393#discussion_r414726602", "bodyText": "Why does that not work the same way on Windows too?", "author": "christianwimmer", "createdAt": "2020-04-24T17:02:10Z", "path": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/JavaMainWrapper.java", "diffHunk": "@@ -133,6 +135,12 @@ public static int runCore(int paramArgc, CCharPointerPointer paramArgv) {\n         int exitCode;\n         try {\n             if (SubstrateOptions.ParseRuntimeOptions.getValue()) {\n+                if (SubstrateUtil.isPosix()) {", "originalCommit": "0d3abfb616196f32cbe5d93fbd359541a4ea5ee8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTYyMjk0OA==", "url": "https://github.com/oracle/graal/pull/2393#discussion_r415622948", "bodyText": "I will have a look what the JVM does on Windows and make --install-exit-handlers behave the same. Then this is no more posix-only.", "author": "olpaw", "createdAt": "2020-04-27T08:40:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcyNjYwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcyNjc2Ng==", "url": "https://github.com/oracle/graal/pull/2393#discussion_r414726766", "bodyText": "but the check for || (SubstrateUtil.isLinux() && ProcessProperties.getProcessId() == 1) is missing here? Otherwise how do we get out-of-the-box correct handling for the Docker init process?", "author": "christianwimmer", "createdAt": "2020-04-24T17:02:25Z", "path": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/JavaMainWrapper.java", "diffHunk": "@@ -133,6 +135,12 @@ public static int runCore(int paramArgc, CCharPointerPointer paramArgv) {\n         int exitCode;\n         try {\n             if (SubstrateOptions.ParseRuntimeOptions.getValue()) {\n+                if (SubstrateUtil.isPosix()) {\n+                    if (SubstrateOptions.InstallExitHandlers.getValue()) {", "originalCommit": "0d3abfb616196f32cbe5d93fbd359541a4ea5ee8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTYyMTIxNg==", "url": "https://github.com/oracle/graal/pull/2393#discussion_r415621216", "bodyText": "I decided against making the installation of the handlers dependent on  ProcessProperties.getProcessId() == 1.\nI tested what the JVM does when running in docker and without. Regarding signal handling the JVM makes no distinction whatsoever. So to be as close as possible to the behaviour of the JVM I do not predicate on PID1. Also since we require the user to opt-in via --install-exit-handlers there should be no regressions for anyone not interested in having this JVM-like behaviour for SIGHUP/SIGINT/SIGTERM exit handling.", "author": "olpaw", "createdAt": "2020-04-27T08:37:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcyNjc2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk1MTQxNA==", "url": "https://github.com/oracle/graal/pull/2393#discussion_r415951414", "bodyText": "OK. Having a different automatic behavior when running as Docker pid 1 is probably a bad idea.", "author": "christianwimmer", "createdAt": "2020-04-27T16:13:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcyNjc2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcyNjk1Mg==", "url": "https://github.com/oracle/graal/pull/2393#discussion_r414726952", "bodyText": "Having a platform specific API option complicates all sorts of build scripts, so I think we should avoid that in general.", "author": "christianwimmer", "createdAt": "2020-04-24T17:02:43Z", "path": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateOptions.java", "diffHunk": "@@ -425,6 +425,11 @@ public static boolean useLLVMBackend() {\n     @Option(help = \"Show native-toolchain information and image-build settings\", type = User)//\n     public static final HostedOptionKey<Boolean> DumpTargetInfo = new HostedOptionKey<>(false);\n \n+    @Platforms({Platform.LINUX.class, Platform.DARWIN.class})", "originalCommit": "0d3abfb616196f32cbe5d93fbd359541a4ea5ee8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTYyNDAwOQ==", "url": "https://github.com/oracle/graal/pull/2393#discussion_r415624009", "bodyText": "I agree. Also providing proper behaviour for Windows will make this use of @Platforms obsolete. See #2393 (comment)", "author": "olpaw", "createdAt": "2020-04-27T08:41:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcyNjk1Mg=="}], "type": "inlineReview"}, {"oid": "3957f15546164430a8656b0607903e6170d1d40b", "url": "https://github.com/oracle/graal/commit/3957f15546164430a8656b0607903e6170d1d40b", "message": "Provide java.lang.Terminator.setup() as --install-exit-handlers", "committedDate": "2020-04-27T12:42:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTgxNzg1Mg==", "url": "https://github.com/oracle/graal/pull/2393#discussion_r415817852", "bodyText": "For this to work on JDK 11 (handler field changed type) you could declare it as:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static Target_jdk_internal_misc_Signal_Handler handler;\n          \n          \n            \n                private static Object handler;", "author": "pejovica", "createdAt": "2020-04-27T13:35:50Z", "path": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/JavaMainWrapper.java", "diffHunk": "@@ -287,3 +295,16 @@ public static void enter(int paramArgc, CCharPointerPointer paramArgv) {\n         void setArgv(CCharPointerPointer value);\n     }\n }\n+\n+@TargetClass(className = \"java.lang.Terminator\")\n+final class Target_java_lang_Terminator {\n+    @Alias @RecomputeFieldValue(kind = RecomputeFieldValue.Kind.Reset) //\n+    private static Target_jdk_internal_misc_Signal_Handler handler;", "originalCommit": "3957f15546164430a8656b0607903e6170d1d40b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg1OTg3MA==", "url": "https://github.com/oracle/graal/pull/2393#discussion_r415859870", "bodyText": "Nahh, that doesn't work.\nError: Type mismatch:\n    class java.lang.Object private static java.lang.Object com.oracle.svm.core.Target_java_lang_Terminator.handler\n    interface jdk.internal.misc.Signal$Handler private static jdk.internal.misc.Signal$Handler java.lang.Terminator.handler\n\nInstead it's much easier to use: 6bebeb4", "author": "olpaw", "createdAt": "2020-04-27T14:27:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTgxNzg1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTgxODE2NA==", "url": "https://github.com/oracle/graal/pull/2393#discussion_r415818164", "bodyText": "Maybe you should register a startup hook instead.", "author": "pejovica", "createdAt": "2020-04-27T13:36:17Z", "path": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/JavaMainWrapper.java", "diffHunk": "@@ -133,6 +137,10 @@ public static int runCore(int paramArgc, CCharPointerPointer paramArgv) {\n         int exitCode;\n         try {\n             if (SubstrateOptions.ParseRuntimeOptions.getValue()) {\n+                if (SubstrateOptions.InstallExitHandlers.getValue()) {\n+                    Target_java_lang_Terminator.setup();\n+                }", "originalCommit": "3957f15546164430a8656b0607903e6170d1d40b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg3OTUxNw==", "url": "https://github.com/oracle/graal/pull/2393#discussion_r415879517", "bodyText": "I agree: ec15571", "author": "olpaw", "createdAt": "2020-04-27T14:50:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTgxODE2NA=="}], "type": "inlineReview"}, {"oid": "6bebeb45724956f33357ff14caf63fec5757f0ce", "url": "https://github.com/oracle/graal/commit/6bebeb45724956f33357ff14caf63fec5757f0ce", "message": "Use rerunClassInit for java.lang.Terminator instead of @RecomputeFieldValue", "committedDate": "2020-04-27T14:26:17Z", "type": "commit"}, {"oid": "ec15571605e2cf13390133e908dea82b7884654e", "url": "https://github.com/oracle/graal/commit/ec15571605e2cf13390133e908dea82b7884654e", "message": "Use StartupHook for running java.lang.Terminator.setup()", "committedDate": "2020-04-27T14:46:30Z", "type": "commit"}]}