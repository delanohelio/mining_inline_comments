{"pr_number": 2411, "pr_title": "AArch64 Debug Info fixes", "pr_createdAt": "2020-04-28T13:25:01Z", "pr_url": "https://github.com/oracle/graal/pull/2411", "timeline": [{"oid": "d6005ebeeb20f9973979c8e7028acfa2a860dc67", "url": "https://github.com/oracle/graal/commit/d6005ebeeb20f9973979c8e7028acfa2a860dc67", "message": "correct error establishing call frame address on AArch64", "committedDate": "2020-04-23T13:00:05Z", "type": "commit"}, {"oid": "e501ddc4e32d6762c87d1acb723897da2814fa4f", "url": "https://github.com/oracle/graal/commit/e501ddc4e32d6762c87d1acb723897da2814fa4f", "message": "convince gdb to place method break at end of prologue on AArch64", "committedDate": "2020-04-24T12:57:24Z", "type": "commit"}, {"oid": "6357be2fb3132852a545f37c4df521d63621de71", "url": "https://github.com/oracle/graal/commit/6357be2fb3132852a545f37c4df521d63621de71", "message": "update prologue address", "committedDate": "2020-04-28T13:00:45Z", "type": "commit"}, {"oid": "ed580387fd03b9f133a3a393cbd62d89375db658", "url": "https://github.com/oracle/graal/commit/ed580387fd03b9f133a3a393cbd62d89375db658", "message": "generate correct debug frame info on AArch64", "committedDate": "2020-04-28T13:03:16Z", "type": "commit"}, {"oid": "24d6da17cea6ba18592d2e726ca44f48f0fda68c", "url": "https://github.com/oracle/graal/commit/24d6da17cea6ba18592d2e726ca44f48f0fda68c", "message": "style fixes", "committedDate": "2020-04-28T14:46:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM4NzYxOA==", "url": "https://github.com/oracle/graal/pull/2411#discussion_r421387618", "bodyText": "You don't need an accessor if you make elfMachine a public final field.", "author": "olpaw", "createdAt": "2020-05-07T10:01:31Z", "path": "substratevm/src/com.oracle.objectfile/src/com/oracle/objectfile/elf/dwarf/DwarfDebugInfo.java", "diffHunk": "@@ -201,4 +203,8 @@ public DwarfARangesSectionImpl getARangesSectionImpl() {\n     public DwarfLineSectionImpl getLineSectionImpl() {\n         return dwarfLineSection;\n     }\n+\n+    public ELFMachine getELFMachine() {", "originalCommit": "24d6da17cea6ba18592d2e726ca44f48f0fda68c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU2ODgzMg==", "url": "https://github.com/oracle/graal/pull/2411#discussion_r421568832", "bodyText": "Sure, no point making the API surface larger than it needs to be. Fixed", "author": "adinn", "createdAt": "2020-05-07T14:53:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM4NzYxOA=="}], "type": "inlineReview"}, {"oid": "c24f78610741fb043bccce38c60e3cf8249429d8", "url": "https://github.com/oracle/graal/commit/c24f78610741fb043bccce38c60e3cf8249429d8", "message": "avoid need for accessor", "committedDate": "2020-05-07T14:43:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjA4ODA0Mg==", "url": "https://github.com/oracle/graal/pull/2411#discussion_r422088042", "bodyText": "If doing the same also for AMD64 does not have any negative side effects then maybe it's not worth to make this piece architecture specific.", "author": "olpaw", "createdAt": "2020-05-08T11:19:29Z", "path": "substratevm/src/com.oracle.objectfile/src/com/oracle/objectfile/elf/dwarf/DwarfLineSectionImpl.java", "diffHunk": "@@ -478,6 +479,32 @@ private int writeLineNumberTable(DebugContext context, ClassEntry classEntry, by\n             }\n             pos = writeCopyOp(context, buffer, pos);\n \n+            /*\n+             * On AArch64 gdb expects to see a line record at the start of the method and a second\n+             * one at the end of the prologue marking the point where the method code begins for\n+             * real. If we don't provide it then gdb will skip to the second line record when we\n+             * place a breakpoint on the method.\n+             *\n+             * We can identify the end of the prologue for normal methods by noting where the stack\n+             * frame height is first adjusted. This should normally be no more a few instructions in\n+             * total.\n+             */\n+            if (isAArch64() && !primaryEntry.getFrameSizeInfos().isEmpty()) {", "originalCommit": "c24f78610741fb043bccce38c60e3cf8249429d8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}