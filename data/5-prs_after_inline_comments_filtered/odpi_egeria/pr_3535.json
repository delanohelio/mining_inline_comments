{"pr_number": 3535, "pr_title": "#3503 refactor Subject area line ends.", "pr_createdAt": "2020-08-27T08:42:26Z", "pr_url": "https://github.com/odpi/egeria/pull/3535", "timeline": [{"oid": "542ebd1339d4ac9e4ed1550342af2b397339a29e", "url": "https://github.com/odpi/egeria/commit/542ebd1339d4ac9e4ed1550342af2b397339a29e", "message": "#3503 refactor subject Are a Line ends\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>", "committedDate": "2020-08-25T19:47:42Z", "type": "commit"}, {"oid": "523b6e13f67b950aae9d25d04aa4c42623df0fb0", "url": "https://github.com/odpi/egeria/commit/523b6e13f67b950aae9d25d04aa4c42623df0fb0", "message": "Merge branch 'master' of https://github.com/odpi/egeria into git3503", "committedDate": "2020-08-25T20:57:46Z", "type": "commit"}, {"oid": "06c89ae522db6aa004fc3bfb2acfd75a379e75f6", "url": "https://github.com/odpi/egeria/commit/06c89ae522db6aa004fc3bfb2acfd75a379e75f6", "message": "#3503 Refactor Subject area Line ends\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>", "committedDate": "2020-08-27T08:11:55Z", "type": "commit"}, {"oid": "2b0181088d44e67c5f0950e0e1ccda1908bb4af6", "url": "https://github.com/odpi/egeria/commit/2b0181088d44e67c5f0950e0e1ccda1908bb4af6", "message": "#3503 amend comment\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>", "committedDate": "2020-08-27T08:41:46Z", "type": "commit"}, {"oid": "20ae6a47eb8b33922d96a3195cedf6cc6dfe615a", "url": "https://github.com/odpi/egeria/commit/20ae6a47eb8b33922d96a3195cedf6cc6dfe615a", "message": "Merge branch 'master' into git3503", "committedDate": "2020-08-27T08:43:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODI3MTc5MA==", "url": "https://github.com/odpi/egeria/pull/3535#discussion_r478271790", "bodyText": "I would prefer use \"GlossaryTerm\" and remove these conditionals.", "author": "immmus", "createdAt": "2020-08-27T09:10:07Z", "path": "open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/properties/objects/graph/Line.java", "diffHunk": "@@ -75,16 +79,48 @@ public Line(Line template) {\n         this.setGuid(template.getGuid());\n         this.setLineType(template.getLineType());\n         this.setAdditionalProperties(template.getAdditionalProperties());\n+        this.setLineEnds();\n     }\n \n     public Line(String name) {\n-        this.name = name;\n-        this.lineType = LineType.Unknown;\n+        this(name,LineType.Unknown);\n     }\n \n     public Line(String name, LineType lineType) {\n         this.name = name;\n         this.lineType = lineType;\n+        this.setLineEnds();\n+    }\n+    protected void setLineEnds() {\n+        OpenMetadataTypesArchiveAccessor archiveAccessor = OpenMetadataTypesArchiveAccessor.getInstance();\n+\n+        RelationshipDef relationshipDef =archiveAccessor.getRelationshipDefByGuid(this.typeDefGuid);\n+        RelationshipEndDef endDef1 = relationshipDef.getEndDef1();\n+        RelationshipEndDef endDef2 = relationshipDef.getEndDef2();\n+\n+        String end1TypeName = endDef1.getEntityType().getName();\n+        String end2TypeName = endDef2.getEntityType().getName();\n+        // Maybe consider subtypes here? We cannot use the Repositoryhelper isTypeOf because Line is used client side\n+        // which does not have access to the repository helper.\n+        if (end1TypeName.equals(\"GlossaryTerm\")) {\n+            end1TypeName = \"Term\";\n+        }\n+        if (end2TypeName.equals(\"GlossaryTerm\")) {\n+            end2TypeName = \"Term\";", "originalCommit": "20ae6a47eb8b33922d96a3195cedf6cc6dfe615a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODMwMTg1Ng==", "url": "https://github.com/odpi/egeria/pull/3535#discussion_r478301856", "bodyText": "The Subject Area API does not expose a concept called GlossaryTerm, only Term. I know it is easier internally as it matches the types.", "author": "davidradl", "createdAt": "2020-08-27T10:00:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODI3MTc5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODMwODUxMw==", "url": "https://github.com/odpi/egeria/pull/3535#discussion_r478308513", "bodyText": "I think if we leave GlossaryTerm here, it won't hurt anyone) or it is worth considering revising domain names to map to internal types, as is done with Line\nAnd that help to us in future.", "author": "immmus", "createdAt": "2020-08-27T10:12:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODI3MTc5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTA4MDg5Mg==", "url": "https://github.com/odpi/egeria/pull/3535#discussion_r479080892", "bodyText": "this code no longer exists", "author": "davidradl", "createdAt": "2020-08-28T10:18:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODI3MTc5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODI3MzAzNA==", "url": "https://github.com/odpi/egeria/pull/3535#discussion_r478273034", "bodyText": "I am alarmed by the use of this service here...", "author": "immmus", "createdAt": "2020-08-27T09:12:13Z", "path": "open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/properties/objects/graph/Line.java", "diffHunk": "@@ -75,16 +79,48 @@ public Line(Line template) {\n         this.setGuid(template.getGuid());\n         this.setLineType(template.getLineType());\n         this.setAdditionalProperties(template.getAdditionalProperties());\n+        this.setLineEnds();\n     }\n \n     public Line(String name) {\n-        this.name = name;\n-        this.lineType = LineType.Unknown;\n+        this(name,LineType.Unknown);\n     }\n \n     public Line(String name, LineType lineType) {\n         this.name = name;\n         this.lineType = lineType;\n+        this.setLineEnds();\n+    }\n+    protected void setLineEnds() {\n+        OpenMetadataTypesArchiveAccessor archiveAccessor = OpenMetadataTypesArchiveAccessor.getInstance();", "originalCommit": "20ae6a47eb8b33922d96a3195cedf6cc6dfe615a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODMwMjM3Mw==", "url": "https://github.com/odpi/egeria/pull/3535#discussion_r478302373", "bodyText": "I am alarmed by the use of this service here...\n\nyes good spot - I guess this implies that we need access to the archive in the client libraries. That is a shame as it saves a lot of code.  I might try to generate some code from the archive so we do not have this dependancy.", "author": "davidradl", "createdAt": "2020-08-27T10:01:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODI3MzAzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODMwOTEzNg==", "url": "https://github.com/odpi/egeria/pull/3535#discussion_r478309136", "bodyText": "@davidradl I really dont know how better resolve this problem but it is problem...", "author": "immmus", "createdAt": "2020-08-27T10:13:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODI3MzAzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODk0NjgzOQ==", "url": "https://github.com/odpi/egeria/pull/3535#discussion_r478946839", "bodyText": "@immmus I have resolved the problem by hard coding the values in the Line children - similar to the way the code originally was but in the new structure. The code is ready for a new review now.", "author": "davidradl", "createdAt": "2020-08-28T08:36:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODI3MzAzNA=="}], "type": "inlineReview"}, {"oid": "ae464d1e3292beeb0492fa23803b905110f4ae68", "url": "https://github.com/odpi/egeria/commit/ae464d1e3292beeb0492fa23803b905110f4ae68", "message": "Merge branch 'master' of https://github.com/odpi/egeria into git3503", "committedDate": "2020-08-27T10:27:15Z", "type": "commit"}, {"oid": "30e7caf25109b231a385cd7f7b02d21fd2f0fabd", "url": "https://github.com/odpi/egeria/commit/30e7caf25109b231a385cd7f7b02d21fd2f0fabd", "message": "#3503 remove the dependancy on archives\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>", "committedDate": "2020-08-27T12:24:02Z", "type": "commit"}, {"oid": "15ae1df28bbe9885abebe46449c41ee8a5b0faf8", "url": "https://github.com/odpi/egeria/commit/15ae1df28bbe9885abebe46449c41ee8a5b0faf8", "message": "#3503 refactor to hard code Line specific values into the API Line objects\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>", "committedDate": "2020-08-28T08:24:47Z", "type": "commit"}, {"oid": "4b09643162b7315e717cf4715622bbd10c408632", "url": "https://github.com/odpi/egeria/commit/4b09643162b7315e717cf4715622bbd10c408632", "message": "Merge branch 'master' of https://github.com/odpi/egeria into git3503", "committedDate": "2020-08-28T08:25:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODk2OTk3NQ==", "url": "https://github.com/odpi/egeria/pull/3535#discussion_r478969975", "bodyText": "I would like to raise the issue of removing these unused fields from all classes.", "author": "immmus", "createdAt": "2020-08-28T08:57:02Z", "path": "open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/properties/relationships/HasA.java", "diffHunk": "@@ -3,34 +3,37 @@\n // This is a generated file - do not edit - changes should be made to the templates amd/or generator to generate this file with changes.\n \n package org.odpi.openmetadata.accessservices.subjectarea.properties.relationships;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n+\n import com.fasterxml.jackson.annotation.JsonAutoDetect;\n import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n import com.fasterxml.jackson.annotation.JsonInclude;\n-import java.util.*;\n+import org.odpi.openmetadata.accessservices.subjectarea.properties.enums.TermRelationshipStatus;\n+import org.odpi.openmetadata.accessservices.subjectarea.properties.objects.graph.Line;\n+import org.odpi.openmetadata.accessservices.subjectarea.properties.objects.graph.LineEnd;\n+import org.odpi.openmetadata.accessservices.subjectarea.properties.objects.graph.LineType;\n+import org.odpi.openmetadata.repositoryservices.connectors.stores.metadatacollectionstore.properties.instances.*;\n+import org.odpi.openmetadata.repositoryservices.connectors.stores.metadatacollectionstore.properties.typedefs.RelationshipEndCardinality;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.Arrays;\n+import java.util.HashSet;\n \n import static com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.NONE;\n import static com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.PUBLIC_ONLY;\n-import org.odpi.openmetadata.accessservices.subjectarea.properties.enums.*;\n-\n-//omrs\n-import org.odpi.openmetadata.repositoryservices.connectors.stores.metadatacollectionstore.properties.instances.*;\n-//omrs beans\n-import org.odpi.openmetadata.accessservices.subjectarea.properties.objects.graph.Line;\n-import org.odpi.openmetadata.accessservices.subjectarea.properties.objects.graph.LineType;\n \n /**\n  * Defines the relationship between a spine object and a spine attribute.\n  */\n-@JsonAutoDetect(getterVisibility=PUBLIC_ONLY, setterVisibility=PUBLIC_ONLY, fieldVisibility=NONE)\n+@JsonAutoDetect(getterVisibility = PUBLIC_ONLY, setterVisibility = PUBLIC_ONLY, fieldVisibility = NONE)\n @JsonInclude(JsonInclude.Include.NON_NULL)\n-@JsonIgnoreProperties(ignoreUnknown=true)\n+@JsonIgnoreProperties(ignoreUnknown = true)\n public class HasA extends Line {\n     private static final Logger log = LoggerFactory.getLogger(HasA.class);\n     private static final String className = HasA.class.getName();\n \n-    private static final String[] PROPERTY_NAMES_SET_VALUES = new String[] {\n+\n+    private static final String[] PROPERTY_NAMES_SET_VALUES = new String[]{", "originalCommit": "4b09643162b7315e717cf4715622bbd10c408632", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTAxNzU4OQ==", "url": "https://github.com/odpi/egeria/pull/3535#discussion_r479017589", "bodyText": "I think we should do this separately - please raise an issue for that. This code was originally generated so has some left over code from that time, the generation ended up in the FVT for open types. It would be good to clean it up.", "author": "davidradl", "createdAt": "2020-08-28T09:26:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODk2OTk3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTAyMTE4Mw==", "url": "https://github.com/odpi/egeria/pull/3535#discussion_r479021183", "bodyText": "Well. #3541", "author": "immmus", "createdAt": "2020-08-28T09:29:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODk2OTk3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODk3MDg5Mw==", "url": "https://github.com/odpi/egeria/pull/3535#discussion_r478970893", "bodyText": "And it.", "author": "immmus", "createdAt": "2020-08-28T08:57:25Z", "path": "open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/properties/relationships/HasA.java", "diffHunk": "@@ -62,72 +65,69 @@\n     private static final java.util.Set<String> ATTRIBUTE_NAMES_SET = new HashSet<>(Arrays.asList(ATTRIBUTE_NAMES_SET_VALUES));", "originalCommit": "4b09643162b7315e717cf4715622bbd10c408632", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTA4MjA5Mg==", "url": "https://github.com/odpi/egeria/pull/3535#discussion_r479082092", "bodyText": "I assume this refers to unused code o to be removed in another issue", "author": "davidradl", "createdAt": "2020-08-28T10:19:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODk3MDg5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODk3OTUyNA==", "url": "https://github.com/odpi/egeria/pull/3535#discussion_r478979524", "bodyText": "Should we leave this commented-out code?", "author": "immmus", "createdAt": "2020-08-28T09:01:27Z", "path": "open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/properties/objects/graph/Line.java", "diffHunk": "@@ -92,35 +85,44 @@ public Line(String name, LineType lineType) {\n         this.setLineEnds();\n     }\n     protected void setLineEnds() {\n-        OpenMetadataTypesArchiveAccessor archiveAccessor = OpenMetadataTypesArchiveAccessor.getInstance();\n-\n-        RelationshipDef relationshipDef =archiveAccessor.getRelationshipDefByGuid(this.typeDefGuid);\n-        RelationshipEndDef endDef1 = relationshipDef.getEndDef1();\n-        RelationshipEndDef endDef2 = relationshipDef.getEndDef2();\n-\n-        String end1TypeName = endDef1.getEntityType().getName();\n-        String end2TypeName = endDef2.getEntityType().getName();\n+//        OpenMetadataTypesArchiveAccessor archiveAccessor = OpenMetadataTypesArchiveAccessor.getInstance();\n+//\n+//        RelationshipDef relationshipDef =archiveAccessor.getRelationshipDefByGuid(this.typeDefGuid);\n+//        RelationshipEndDef endDef1 = relationshipDef.getEndDef1();\n+//        RelationshipEndDef endDef2 = relationshipDef.getEndDef2();\n+//\n+//        String end1TypeName = endDef1.getEntityType().getName();\n+//        String end2TypeName = endDef2.getEntityType().getName();\n         // Maybe consider subtypes here? We cannot use the Repositoryhelper isTypeOf because Line is used client side\n         // which does not have access to the repository helper.\n-        if (end1TypeName.equals(\"GlossaryTerm\")) {\n-            end1TypeName = \"Term\";\n-        }\n-        if (end2TypeName.equals(\"GlossaryTerm\")) {\n-            end2TypeName = \"Term\";\n-        }\n+//        if (end1TypeName.equals(\"GlossaryTerm\")) {\n+//            end1TypeName = \"Term\";\n+//        }\n+//        if (end2TypeName.equals(\"GlossaryTerm\")) {\n+//            end2TypeName = \"Term\";\n+//        }\n+//        getLineEnd1();\n+//        getLineEnd1();\n+//\n+//        LineEnd lineEnd1 = new LineEnd(getEnd1TypeName(),\n+//                                       getEnd1AttributeName(),\n+//                                       getEnd1AttributeDescription(),\n+//                                       endDef1.getAttributeCardinality()\n+//                                       );\n+//        LineEnd lineEnd2 = new LineEnd(end2TypeName,\n+//                                       endDef2.getAttributeName(),\n+//                                       endDef2.getAttributeDescription(),\n+//                                       endDef2.getAttributeCardinality()\n+//                                       );", "originalCommit": "30e7caf25109b231a385cd7f7b02d21fd2f0fabd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTAxNDc5Mw==", "url": "https://github.com/odpi/egeria/pull/3535#discussion_r479014793", "bodyText": "@immmus good spot :-).", "author": "davidradl", "createdAt": "2020-08-28T09:24:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODk3OTUyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTA1Mzg0Mw==", "url": "https://github.com/odpi/egeria/pull/3535#discussion_r479053843", "bodyText": "@immmus good spot :-).\n\nfixed", "author": "davidradl", "createdAt": "2020-08-28T09:56:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODk3OTUyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODk4ODY1Nw==", "url": "https://github.com/odpi/egeria/pull/3535#discussion_r478988657", "bodyText": "May be make Line as abstract and make these methods abstract?", "author": "immmus", "createdAt": "2020-08-28T09:06:21Z", "path": "open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/properties/objects/graph/Line.java", "diffHunk": "@@ -92,35 +85,44 @@ public Line(String name, LineType lineType) {\n         this.setLineEnds();\n     }\n     protected void setLineEnds() {\n-        OpenMetadataTypesArchiveAccessor archiveAccessor = OpenMetadataTypesArchiveAccessor.getInstance();\n-\n-        RelationshipDef relationshipDef =archiveAccessor.getRelationshipDefByGuid(this.typeDefGuid);\n-        RelationshipEndDef endDef1 = relationshipDef.getEndDef1();\n-        RelationshipEndDef endDef2 = relationshipDef.getEndDef2();\n-\n-        String end1TypeName = endDef1.getEntityType().getName();\n-        String end2TypeName = endDef2.getEntityType().getName();\n+//        OpenMetadataTypesArchiveAccessor archiveAccessor = OpenMetadataTypesArchiveAccessor.getInstance();\n+//\n+//        RelationshipDef relationshipDef =archiveAccessor.getRelationshipDefByGuid(this.typeDefGuid);\n+//        RelationshipEndDef endDef1 = relationshipDef.getEndDef1();\n+//        RelationshipEndDef endDef2 = relationshipDef.getEndDef2();\n+//\n+//        String end1TypeName = endDef1.getEntityType().getName();\n+//        String end2TypeName = endDef2.getEntityType().getName();\n         // Maybe consider subtypes here? We cannot use the Repositoryhelper isTypeOf because Line is used client side\n         // which does not have access to the repository helper.\n-        if (end1TypeName.equals(\"GlossaryTerm\")) {\n-            end1TypeName = \"Term\";\n-        }\n-        if (end2TypeName.equals(\"GlossaryTerm\")) {\n-            end2TypeName = \"Term\";\n-        }\n+//        if (end1TypeName.equals(\"GlossaryTerm\")) {\n+//            end1TypeName = \"Term\";\n+//        }\n+//        if (end2TypeName.equals(\"GlossaryTerm\")) {\n+//            end2TypeName = \"Term\";\n+//        }\n+//        getLineEnd1();\n+//        getLineEnd1();\n+//\n+//        LineEnd lineEnd1 = new LineEnd(getEnd1TypeName(),\n+//                                       getEnd1AttributeName(),\n+//                                       getEnd1AttributeDescription(),\n+//                                       endDef1.getAttributeCardinality()\n+//                                       );\n+//        LineEnd lineEnd2 = new LineEnd(end2TypeName,\n+//                                       endDef2.getAttributeName(),\n+//                                       endDef2.getAttributeDescription(),\n+//                                       endDef2.getAttributeCardinality()\n+//                                       );\n+        setEnd1(getLineEnd1());\n+        setEnd2(getLineEnd2());\n+    }\n \n-        LineEnd lineEnd1 = new LineEnd(end1TypeName,\n-                                       endDef1.getAttributeName(),\n-                                       endDef1.getAttributeDescription(),\n-                                       endDef1.getAttributeCardinality()\n-                                       );\n-        LineEnd lineEnd2 = new LineEnd(end2TypeName,\n-                                       endDef2.getAttributeName(),\n-                                       endDef2.getAttributeDescription(),\n-                                       endDef2.getAttributeCardinality()\n-                                       );\n-        setEnd1(lineEnd1);\n-        setEnd2(lineEnd2);\n+    protected LineEnd getLineEnd1() {\n+       return null;", "originalCommit": "30e7caf25109b231a385cd7f7b02d21fd2f0fabd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTA1MzMxNg==", "url": "https://github.com/odpi/egeria/pull/3535#discussion_r479053316", "bodyText": "May be make Line as abstract and make these methods abstract?\n\nI had a play with this idea, the OmrsLine extends from Line and would need implementations of these methods that does not make sense for it. I have left this as is - as I do not want to change this without thinking it through in more detail what is required for OMRSLine.", "author": "davidradl", "createdAt": "2020-08-28T09:56:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODk4ODY1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTA1ODgyOA==", "url": "https://github.com/odpi/egeria/pull/3535#discussion_r479058828", "bodyText": "May be make Line as abstract and make these methods abstract?\n\nI had a play with this idea, the OmrsLine extends from Line and would need implementations of these methods that does not make sense for it. I have left this as is - as I do not want to change this without thinking it through in more detail what is required for OMRSLine.\n\nWhen do you want to think about it? I'm afraid this will remain so and in the future you can bring us trouble.", "author": "immmus", "createdAt": "2020-08-28T10:00:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODk4ODY1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTE0OTAxNw==", "url": "https://github.com/odpi/egeria/pull/3535#discussion_r479149017", "bodyText": "OMRSLine\n\nIt turned out to be straight forward, this OMRSLine was not used in the code so I have deleted and made the methods abstract. Thanks @immmus", "author": "davidradl", "createdAt": "2020-08-28T11:17:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODk4ODY1Nw=="}], "type": "inlineReview"}, {"oid": "dedf59dfa1b37e5b184d86f9df3cf7a7949c12f3", "url": "https://github.com/odpi/egeria/commit/dedf59dfa1b37e5b184d86f9df3cf7a7949c12f3", "message": "#3503 remove commented out code\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>", "committedDate": "2020-08-28T09:27:53Z", "type": "commit"}, {"oid": "3015c503a32c1e254bbaac2dcba0a3d4abd3d595", "url": "https://github.com/odpi/egeria/commit/3015c503a32c1e254bbaac2dcba0a3d4abd3d595", "message": "#3503 add javadoc\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>", "committedDate": "2020-08-28T09:52:28Z", "type": "commit"}, {"oid": "ef0c1664670377eadcf17bce3d12856efb0c22dd", "url": "https://github.com/odpi/egeria/commit/ef0c1664670377eadcf17bce3d12856efb0c22dd", "message": "#3503 fix javadoc warning\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>", "committedDate": "2020-08-28T09:54:07Z", "type": "commit"}, {"oid": "8c246cbd85f74c949c17c46c4deed36e7a646c28", "url": "https://github.com/odpi/egeria/commit/8c246cbd85f74c949c17c46c4deed36e7a646c28", "message": "#3503 make new Line methods abstract\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>", "committedDate": "2020-08-28T11:16:45Z", "type": "commit"}]}