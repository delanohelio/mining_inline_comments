{"pr_number": 3354, "pr_title": "wip/6.0 Implement filter for HQL/Criteria", "pr_createdAt": "2020-04-18T17:51:16Z", "pr_url": "https://github.com/hibernate/hibernate-orm/pull/3354", "timeline": [{"oid": "355aa7f1ae3b87eaa3236c5ca2717df3265c194d", "url": "https://github.com/hibernate/hibernate-orm/commit/355aa7f1ae3b87eaa3236c5ca2717df3265c194d", "message": "implement @Filter for HQL/Criteria", "committedDate": "2020-04-20T13:03:23Z", "type": "commit"}, {"oid": "355aa7f1ae3b87eaa3236c5ca2717df3265c194d", "url": "https://github.com/hibernate/hibernate-orm/commit/355aa7f1ae3b87eaa3236c5ca2717df3265c194d", "message": "implement @Filter for HQL/Criteria", "committedDate": "2020-04-20T13:03:23Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUyMzU2Nw==", "url": "https://github.com/hibernate/hibernate-orm/pull/3354#discussion_r412523567", "bodyText": "An enhancement here would be to support filtering on non-primary-table columns", "author": "sebersole", "createdAt": "2020-04-21T22:04:45Z", "path": "hibernate-core/src/main/java/org/hibernate/query/sqm/sql/internal/StandardSqmSelectTranslator.java", "diffHunk": "@@ -187,6 +195,24 @@ protected void prepareQuerySpec(QuerySpec sqlQuerySpec) {\n \n \t@Override\n \tprotected void postProcessQuerySpec(QuerySpec sqlQuerySpec) {\n+\t\tfinal List<TableGroup> roots = sqlQuerySpec.getFromClause().getRoots();\n+\t\tif ( roots != null && roots.size() == 1 ) {\n+\t\t\tfinal TableGroup root = roots.get( 0 );\n+\t\t\tfinal ModelPartContainer modelPartContainer = root.getModelPart();\n+\t\t\tfinal EntityPersister entityPersister = modelPartContainer.findContainingEntityMapping().getEntityPersister();\n+\t\t\tassert entityPersister instanceof AbstractEntityPersister;\n+\t\t\tfinal String primaryTableAlias = root.getPrimaryTableReference().getIdentificationVariable();", "originalCommit": "355aa7f1ae3b87eaa3236c5ca2717df3265c194d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYyMjQxMQ==", "url": "https://github.com/hibernate/hibernate-orm/pull/3354#discussion_r412622411", "bodyText": "I will implement this in the PR for https://trello.com/c/lF9R13J3/115-where-and-wherejointable, which will be created pretty soon.", "author": "NathanQingyangXu", "createdAt": "2020-04-22T02:27:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUyMzU2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzc5OTc2Mw==", "url": "https://github.com/hibernate/hibernate-orm/pull/3354#discussion_r413799763", "bodyText": "Initially I thought this was easy to implement but then I found my code needs to invoke the following method from org.hibernate.persister.entity.Joinable.\n\t/**\n\t * Get the where clause filter, given a query alias and considering enabled session filters\n\t */\n\tpublic String filterFragment(String alias, Map<String, Filter> enabledFilters) throws MappingException;\n\nseems only primary table alias is needed here. For that reason, I would be cautious to maintain the status quo and keep the code changes out of the new PR which has been created: #3366 as I originally promised.\nPlan to investigate further and will create separate PR if needed.", "author": "NathanQingyangXu", "createdAt": "2020-04-23T13:07:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUyMzU2Nw=="}], "type": "inlineReview"}]}