{"pr_number": 848, "pr_title": "The close handler should be called when the sql connection is closed from a different context", "pr_createdAt": "2020-12-09T15:57:14Z", "pr_url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/848", "timeline": [{"oid": "d081780616c31bcc923121ece8b2099ea96ab456", "url": "https://github.com/eclipse-vertx/vertx-sql-client/commit/d081780616c31bcc923121ece8b2099ea96ab456", "message": "the close handler should be called when the sql connection is closed\n\nSigned-off-by: Billy Yuan <billy112487983@gmail.com>", "committedDate": "2020-12-09T15:55:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ4MTQ3OA==", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/848#discussion_r539481478", "bodyText": "await is not needed, vertx-unit will wait for you\nyou need to use await when there is an action to take after", "author": "vietj", "createdAt": "2020-12-09T17:00:43Z", "path": "vertx-pg-client/src/test/java/io/vertx/pgclient/PgConnectionTestBase.java", "diffHunk": "@@ -462,4 +463,22 @@ public void testTransactionAbort(TestContext ctx) {\n       });\n     }));\n   }\n+\n+  @Test\n+  public void testCloseConnectionFromDifferentContext(TestContext ctx) {\n+    Async done = ctx.async(1);\n+    connector.accept(ctx.asyncAssertSuccess(conn -> {\n+      conn.query(\"SELECT 1\").execute(ctx.asyncAssertSuccess(res -> {\n+        ctx.assertEquals(1, res.size());\n+        // schedule from another context\n+        VertxInternal vertxInternal = (VertxInternal) vertx;\n+        vertxInternal.createEventLoopContext().runOnContext(v -> {\n+          conn.close(v2 -> {\n+            done.complete();\n+          });\n+        });\n+      }));\n+    }));\n+    done.await(2000);", "originalCommit": "d081780616c31bcc923121ece8b2099ea96ab456", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTc0MTk4Ng==", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/848#discussion_r539741986", "bodyText": "ah I thought it was going to make the test fail-faster rather than being stuck if the callback is never called.", "author": "BillyYccc", "createdAt": "2020-12-10T00:05:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ4MTQ3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ4MjA0Nw==", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/848#discussion_r539482047", "bodyText": "rather use a Java thread it will create another context/event loop\ni.e\nnew Thread(() -> ...) {\n}.start();", "author": "vietj", "createdAt": "2020-12-09T17:01:27Z", "path": "vertx-pg-client/src/test/java/io/vertx/pgclient/PgConnectionTestBase.java", "diffHunk": "@@ -462,4 +463,22 @@ public void testTransactionAbort(TestContext ctx) {\n       });\n     }));\n   }\n+\n+  @Test\n+  public void testCloseConnectionFromDifferentContext(TestContext ctx) {\n+    Async done = ctx.async(1);\n+    connector.accept(ctx.asyncAssertSuccess(conn -> {\n+      conn.query(\"SELECT 1\").execute(ctx.asyncAssertSuccess(res -> {\n+        ctx.assertEquals(1, res.size());\n+        // schedule from another context", "originalCommit": "d081780616c31bcc923121ece8b2099ea96ab456", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTc0MTU5NQ==", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/848#discussion_r539741595", "bodyText": "fixed in ce73aae.", "author": "BillyYccc", "createdAt": "2020-12-10T00:04:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ4MjA0Nw=="}], "type": "inlineReview"}, {"oid": "ce73aae89f5b511e222bceb2c6d7650fa164d448", "url": "https://github.com/eclipse-vertx/vertx-sql-client/commit/ce73aae89f5b511e222bceb2c6d7650fa164d448", "message": "update according to reviews\n\nSigned-off-by: Billy Yuan <billy112487983@gmail.com>", "committedDate": "2020-12-10T00:03:30Z", "type": "commit"}]}