{"pr_number": 606, "pr_title": "feat: add http logging for Java", "pr_createdAt": "2020-11-23T23:41:31Z", "pr_url": "https://github.com/twilio/twilio-java/pull/606", "timeline": [{"oid": "2bc83352ef570dbfac7fca0291cc3c69d1b70464", "url": "https://github.com/twilio/twilio-java/commit/2bc83352ef570dbfac7fca0291cc3c69d1b70464", "message": "feat: add http logging for Java", "committedDate": "2020-11-23T23:36:02Z", "type": "commit"}, {"oid": "773192aa7486a39e00c1ec6fc4eca8d3a185ca9f", "url": "https://github.com/twilio/twilio-java/commit/773192aa7486a39e00c1ec6fc4eca8d3a185ca9f", "message": "Update pom.xml", "committedDate": "2020-11-23T23:40:12Z", "type": "commit"}, {"oid": "f73a300fd46612bc367670a99b9cd304d3083bc7", "url": "https://github.com/twilio/twilio-java/commit/f73a300fd46612bc367670a99b9cd304d3083bc7", "message": "Merge branch 'main' into DI-944", "committedDate": "2020-11-23T23:41:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc5NzQ5Ng==", "url": "https://github.com/twilio/twilio-java/pull/606#discussion_r529797496", "bodyText": "nit: can we make the input variable name a smidge more specific. Maybe filePath?", "author": "eshanholtz", "createdAt": "2020-11-24T18:39:32Z", "path": "src/main/java/com/twilio/Twilio.java", "diffHunk": "@@ -150,6 +154,17 @@ public static synchronized void setEdge(final String edge) {\n         Twilio.edge = edge;\n     }\n \n+    /**\n+     * Set the logger configuration file path.\n+     *\n+     * @param path path to logging configuration file\n+     */\n+    public static synchronized void setLoggerConfiguration(final String path) {", "originalCommit": "f73a300fd46612bc367670a99b9cd304d3083bc7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc5ODgzNw==", "url": "https://github.com/twilio/twilio-java/pull/606#discussion_r529798837", "bodyText": "What happens if there's no logger configured?", "author": "eshanholtz", "createdAt": "2020-11-24T18:41:34Z", "path": "src/main/java/com/twilio/http/TwilioRestClient.java", "diffHunk": "@@ -50,7 +57,16 @@ public Response request(final Request request) {\n         if (edge != null)\n             request.setEdge(edge);\n \n-        return httpClient.reliableRequest(request);\n+        logRequest(request);", "originalCommit": "f73a300fd46612bc367670a99b9cd304d3083bc7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTgyMDk0NQ==", "url": "https://github.com/twilio/twilio-java/pull/606#discussion_r529820945", "bodyText": "If no logger configuration is provided log4j uses a default logging configuration that sets ERROR as the logging level displayed to the console. No logging output will be shown since nothing in the library is using log4j to log anything and DEBUG is a higher intLevel.", "author": "JenniferMah", "createdAt": "2020-11-24T19:19:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc5ODgzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc5OTQwOQ==", "url": "https://github.com/twilio/twilio-java/pull/606#discussion_r529799409", "bodyText": "If behavior is different when no logger is configured (i.e. no output), can we add a test for that scenario?", "author": "eshanholtz", "createdAt": "2020-11-24T18:42:31Z", "path": "src/test/java/com/twilio/http/LoggingTest.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package com.twilio.http;\n+\n+import com.twilio.Twilio;\n+import com.twilio.rest.Domains;\n+import com.twilio.rest.api.v2010.account.Message;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.Assert;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.PrintStream;\n+\n+public class LoggingTest {\n+    @Before\n+    public void setUp() throws Exception {\n+        Twilio.init(\"AC123\", \"AUTH TOKEN\");\n+    }\n+\n+    @Test\n+    public void testDebuggingLogging() {", "originalCommit": "f73a300fd46612bc367670a99b9cd304d3083bc7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ce2fbe6d24d0a1e9bd4d089c56536015a57dda77", "url": "https://github.com/twilio/twilio-java/commit/ce2fbe6d24d0a1e9bd4d089c56536015a57dda77", "message": "add test for no logger configured, fix readme, and path name", "committedDate": "2020-11-24T19:29:40Z", "type": "commit"}, {"oid": "99f5d209d5e71b146247fe0b217807e37621971b", "url": "https://github.com/twilio/twilio-java/commit/99f5d209d5e71b146247fe0b217807e37621971b", "message": "rename test", "committedDate": "2020-11-24T20:06:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg3NTA2Mg==", "url": "https://github.com/twilio/twilio-java/pull/606#discussion_r532875062", "bodyText": "nit: can this be if (!queryParams.isEmpty()) {?", "author": "eshanholtz", "createdAt": "2020-11-30T20:12:54Z", "path": "src/main/java/com/twilio/http/TwilioRestClient.java", "diffHunk": "@@ -126,4 +142,29 @@ public TwilioRestClient build() {\n         }\n     }\n \n+    /**\n+     * Logging debug information about HTTP request.\n+     */\n+    public void logRequest(final Request request) {\n+        logger.debug(\"-- BEGIN Twilio API Request --\");\n+        logger.debug(\"request method: \" + request.getMethod());\n+        logger.debug(\"request URL: \" + request.getUrl());\n+        final Map<String, List<String>> queryParams = request.getQueryParams();\n+        final Map<String, List<String>> headerParams = request.getHeaderParams();\n+\n+        if (queryParams.isEmpty() == false) {", "originalCommit": "99f5d209d5e71b146247fe0b217807e37621971b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg3NTE1Mw==", "url": "https://github.com/twilio/twilio-java/pull/606#discussion_r532875153", "bodyText": "nit: same as above ^", "author": "eshanholtz", "createdAt": "2020-11-30T20:13:03Z", "path": "src/main/java/com/twilio/http/TwilioRestClient.java", "diffHunk": "@@ -126,4 +142,29 @@ public TwilioRestClient build() {\n         }\n     }\n \n+    /**\n+     * Logging debug information about HTTP request.\n+     */\n+    public void logRequest(final Request request) {\n+        logger.debug(\"-- BEGIN Twilio API Request --\");\n+        logger.debug(\"request method: \" + request.getMethod());\n+        logger.debug(\"request URL: \" + request.getUrl());\n+        final Map<String, List<String>> queryParams = request.getQueryParams();\n+        final Map<String, List<String>> headerParams = request.getHeaderParams();\n+\n+        if (queryParams.isEmpty() == false) {\n+            logger.debug(\"query parameters: \" + queryParams);\n+        }\n+\n+        if (headerParams.isEmpty() == false) {", "originalCommit": "99f5d209d5e71b146247fe0b217807e37621971b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "340d780da8298c07ba765c47b042852c6b6c23f5", "url": "https://github.com/twilio/twilio-java/commit/340d780da8298c07ba765c47b042852c6b6c23f5", "message": "fix check for empty headers", "committedDate": "2020-11-30T20:25:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk5MTAwNw==", "url": "https://github.com/twilio/twilio-java/pull/606#discussion_r532991007", "bodyText": "We may want to expose the parameter for getContext with a default set to false in setLoggerConfiguration.", "author": "thinkingserious", "createdAt": "2020-12-01T00:23:14Z", "path": "src/main/java/com/twilio/Twilio.java", "diffHunk": "@@ -150,6 +154,17 @@ public static synchronized void setEdge(final String edge) {\n         Twilio.edge = edge;\n     }\n \n+    /**\n+     * Set the logger configuration file path.\n+     *\n+     * @param filePath path to logging configuration file\n+     */\n+    public static synchronized void setLoggerConfiguration(final String filePath) {\n+        LoggerContext context = (org.apache.logging.log4j.core.LoggerContext) LogManager.getContext(false);", "originalCommit": "340d780da8298c07ba765c47b042852c6b6c23f5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk5MjI4OQ==", "url": "https://github.com/twilio/twilio-java/pull/606#discussion_r532992289", "bodyText": "Can we avoid wildcard imports here?", "author": "thinkingserious", "createdAt": "2020-12-01T00:26:47Z", "path": "src/main/java/com/twilio/http/TwilioRestClient.java", "diffHunk": "@@ -4,6 +4,12 @@\n import com.fasterxml.jackson.datatype.jsr310.JavaTimeModule;\n \n import java.util.function.Predicate;\n+import java.io.*;\n+import java.util.*;", "originalCommit": "340d780da8298c07ba765c47b042852c6b6c23f5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAwNjQ5OQ==", "url": "https://github.com/twilio/twilio-java/pull/606#discussion_r533006499", "bodyText": "Should \"TwilioRestClient\" be configurable?", "author": "thinkingserious", "createdAt": "2020-12-01T01:08:47Z", "path": "src/main/java/com/twilio/http/TwilioRestClient.java", "diffHunk": "@@ -19,6 +25,7 @@\n     private final String region;\n     private final String edge;\n     private final HttpClient httpClient;\n+    private static final Logger logger = LogManager.getLogger(\"TwilioRestClient\");", "originalCommit": "340d780da8298c07ba765c47b042852c6b6c23f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA2NDgyNQ==", "url": "https://github.com/twilio/twilio-java/pull/606#discussion_r533064825", "bodyText": "I don't think it would be necessary for this to be configurable because it should be the class name. I have now changed this to now use the name of the calling class based on the log4j documentation recommendation.", "author": "JenniferMah", "createdAt": "2020-12-01T04:25:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAwNjQ5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAwNjY1MQ==", "url": "https://github.com/twilio/twilio-java/pull/606#discussion_r533006651", "bodyText": "respone/response", "author": "thinkingserious", "createdAt": "2020-12-01T01:09:16Z", "path": "src/main/java/com/twilio/http/TwilioRestClient.java", "diffHunk": "@@ -50,7 +57,16 @@ public Response request(final Request request) {\n         if (edge != null)\n             request.setEdge(edge);\n \n-        return httpClient.reliableRequest(request);\n+        logRequest(request);\n+        Response response = httpClient.reliableRequest(request);\n+        logger.debug(\"status code: \" + response.getStatusCode());\n+        org.apache.http.Header[] responseHeaders = response.getHeaders();\n+        logger.debug(\"respone headers:\");", "originalCommit": "340d780da8298c07ba765c47b042852c6b6c23f5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAwODExOQ==", "url": "https://github.com/twilio/twilio-java/pull/606#discussion_r533008119", "bodyText": "nit: duplicate code in these two tests:\nByteArrayOutputStream output = new ByteArrayOutputStream();\nPrintStream outputStream = new PrintStream(output);\nPrintStream originalStream = System.out;\nSystem.setOut(outputStream);\nTwilioRestClient twilioRestClient = Twilio.getRestClient();\ntwilioRestClient.logRequest(request);\nSystem.out.flush();\nSystem.setOut(originalStream);", "author": "thinkingserious", "createdAt": "2020-12-01T01:13:50Z", "path": "src/test/java/com/twilio/http/LoggingTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.twilio.http;\n+\n+import com.twilio.Twilio;\n+import com.twilio.rest.Domains;\n+import com.twilio.rest.api.v2010.account.Message;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.Assert;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.PrintStream;\n+\n+public class LoggingTest {\n+    @Before\n+    public void setUp() throws Exception {\n+        Twilio.init(\"AC123\", \"AUTH TOKEN\");\n+    }\n+\n+    @Test\n+    public void testDebugLogging() {\n+        ByteArrayOutputStream output = new ByteArrayOutputStream();\n+        PrintStream outputStream = new PrintStream(output);\n+        PrintStream originalStream = System.out;\n+        System.setOut(outputStream);\n+        Twilio.setLoggerConfiguration(\"src/main/java/com/twilio/example/log4j2.xml\");\n+        final Request request = new Request(HttpMethod.GET, Domains.API.toString(),\n+                \"/2010-04-01/Accounts/AC123/Messages/MM123.json\");\n+        request.addHeaderParam(\"Authorization\", \"authorization value\");\n+        request.addHeaderParam(\"Test Header\", \"test value\");\n+        TwilioRestClient twilioRestClient = Twilio.getRestClient();\n+        twilioRestClient.logRequest(request);\n+        System.out.flush();\n+        System.setOut(originalStream);\n+        Assert.assertTrue(output.toString().contains(\"GET\"));\n+        Assert.assertFalse(output.toString().contains(\"Authorization\"));\n+    }\n+\n+    @Test\n+    public void testUsingDefaultConfigurationFileDebugLogging() {\n+        ByteArrayOutputStream output = new ByteArrayOutputStream();\n+        PrintStream outputStream = new PrintStream(output);\n+        PrintStream originalStream = System.out;\n+        System.setOut(outputStream);\n+        final Request request = new Request(HttpMethod.GET, Domains.API.toString(),\n+                \"/2010-04-01/Accounts/AC123/Messages/MM123.json\");\n+        request.addHeaderParam(\"Authorization\", \"authorization value\");\n+        request.addHeaderParam(\"Test Header\", \"test value\");\n+        TwilioRestClient twilioRestClient = Twilio.getRestClient();\n+        twilioRestClient.logRequest(request);\n+        System.out.flush();\n+        System.setOut(originalStream);\n+        Assert.assertTrue(output.toString().isEmpty());\n+    }", "originalCommit": "340d780da8298c07ba765c47b042852c6b6c23f5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0060282f5401b2ca642ebdb870dc10016ce025fb", "url": "https://github.com/twilio/twilio-java/commit/0060282f5401b2ca642ebdb870dc10016ce025fb", "message": "fix imports, setLoggerConfiguration, and logging tests", "committedDate": "2020-12-01T04:46:11Z", "type": "commit"}]}