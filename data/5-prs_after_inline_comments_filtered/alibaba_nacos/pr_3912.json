{"pr_number": 3912, "pr_title": "[ISSUE #3904] feature - operate instance's metadata alonely", "pr_createdAt": "2020-09-25T03:35:10Z", "pr_url": "https://github.com/alibaba/nacos/pull/3912", "timeline": [{"oid": "2b69b853d0d9f163fc30de20b3e27df1ebeee7e2", "url": "https://github.com/alibaba/nacos/commit/2b69b853d0d9f163fc30de20b3e27df1ebeee7e2", "message": "feature. add update and delete operation on instance's metadata 90%", "committedDate": "2020-09-24T17:48:04Z", "type": "commit"}, {"oid": "43c63ff012aa7c3ed77cc2b05880b1f81bc420a2", "url": "https://github.com/alibaba/nacos/commit/43c63ff012aa7c3ed77cc2b05880b1f81bc420a2", "message": "1.add unit test\n2.fix-locateInstance error", "committedDate": "2020-09-25T03:30:55Z", "type": "commit"}, {"oid": "21ae919c8ca9cebc5dddcb29b044a976aaeb3e68", "url": "https://github.com/alibaba/nacos/commit/21ae919c8ca9cebc5dddcb29b044a976aaeb3e68", "message": "format code style", "committedDate": "2020-09-25T04:36:36Z", "type": "commit"}, {"oid": "5224bdecaf795113434c82352e9639a79f7125cd", "url": "https://github.com/alibaba/nacos/commit/5224bdecaf795113434c82352e9639a79f7125cd", "message": "add @link on class", "committedDate": "2020-09-25T05:53:35Z", "type": "commit"}, {"oid": "52c8c91da5864387ac7df2b3e591ecd0195574cc", "url": "https://github.com/alibaba/nacos/commit/52c8c91da5864387ac7df2b3e591ecd0195574cc", "message": "move metadata operate to InstanceController.", "committedDate": "2020-09-26T08:43:32Z", "type": "commit"}, {"oid": "ba7df4ae388b34d4f972a1052447f4186b629010", "url": "https://github.com/alibaba/nacos/commit/ba7df4ae388b34d4f972a1052447f4186b629010", "message": "format code 50%", "committedDate": "2020-09-27T15:39:24Z", "type": "commit"}, {"oid": "c213e82201b33b155a50ae5e55b5a5cf1cca541f", "url": "https://github.com/alibaba/nacos/commit/c213e82201b33b155a50ae5e55b5a5cf1cca541f", "message": "complete bacth operation of metadata", "committedDate": "2020-09-27T17:41:46Z", "type": "commit"}, {"oid": "9fa5a6c36a9a357a4da909cd13d2df6a075859fb", "url": "https://github.com/alibaba/nacos/commit/9fa5a6c36a9a357a4da909cd13d2df6a075859fb", "message": "remove unnecessary test unit", "committedDate": "2020-09-27T17:45:08Z", "type": "commit"}, {"oid": "ccf2366265adc31cd87dbd1e67bb0e7937621fd2", "url": "https://github.com/alibaba/nacos/commit/ccf2366265adc31cd87dbd1e67bb0e7937621fd2", "message": "modify the variable name", "committedDate": "2020-09-28T01:32:47Z", "type": "commit"}, {"oid": "44e993cc8af663f306871b42c20590f7c4f022fc", "url": "https://github.com/alibaba/nacos/commit/44e993cc8af663f306871b42c20590f7c4f022fc", "message": "perfect log info", "committedDate": "2020-09-28T02:31:13Z", "type": "commit"}, {"oid": "e2c3aacd54693c8187370779a06e682345510c74", "url": "https://github.com/alibaba/nacos/commit/e2c3aacd54693c8187370779a06e682345510c74", "message": "modify consumer's dto to match it's description", "committedDate": "2020-09-28T02:40:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY2NjE5NA==", "url": "https://github.com/alibaba/nacos/pull/3912#discussion_r495666194", "bodyText": "Map\u7684\u64cd\u4f5c\u653e\u5230MapUtils\u91cc\u9762", "author": "chuntaojun", "createdAt": "2020-09-28T03:00:18Z", "path": "api/src/main/java/com/alibaba/nacos/api/naming/utils/NamingUtils.java", "diffHunk": "@@ -54,4 +56,57 @@ public static String getGroupName(final String serviceNameWithGroup) {\n         }\n         return serviceNameWithGroup.split(Constants.SERVICE_INFO_SPLITER)[0];\n     }\n+    \n+    /**\n+     * check combineServiceName format. the serviceName can't be blank. some relational logic in {@link\n+     * com.alibaba.nacos.naming.web.DistroFilter#doFilter}, it will handle combineServiceName in some case, you should\n+     * know it.\n+     * <pre>\n+     * serviceName = \"@@\"; the length = 0; illegal\n+     * serviceName = \"group@@\"; the length = 1; illegal\n+     * serviceName = \"@@serviceName\"; the length = 2; legal\n+     * serviceName = \"group@@serviceName\"; the length = 2; legal\n+     * </pre>\n+     *\n+     * @param combineServiceName such as: groupName@@serviceName\n+     */\n+    public static void checkServiceNameFormat(String combineServiceName) {\n+        String[] split = combineServiceName.split(Constants.SERVICE_INFO_SPLITER);\n+        if (split.length <= 1) {\n+            throw new IllegalArgumentException(\n+                    \"Param 'serviceName' is illegal, it should be format as 'groupName@@serviceName'\");\n+        }\n+    }\n+    \n+    /**\n+     * get target value from param, if not found will throw {@link IllegalArgumentException}.\n+     *\n+     * @param param param\n+     * @param key   key\n+     * @return value\n+     */\n+    public static String required(final Map<String, String> param, final String key) {", "originalCommit": "e2c3aacd54693c8187370779a06e682345510c74", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY4ODMzNg==", "url": "https://github.com/alibaba/nacos/pull/3912#discussion_r495688336", "bodyText": "right.", "author": "horizonzy", "createdAt": "2020-09-28T04:54:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY2NjE5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY2Njg0NA==", "url": "https://github.com/alibaba/nacos/pull/3912#discussion_r495666844", "bodyText": "Map\u7684\u64cd\u4f5c\u653e\u5230MapUtils\u91cc\u9762", "author": "chuntaojun", "createdAt": "2020-09-28T03:04:02Z", "path": "api/src/main/java/com/alibaba/nacos/api/naming/utils/NamingUtils.java", "diffHunk": "@@ -54,4 +56,57 @@ public static String getGroupName(final String serviceNameWithGroup) {\n         }\n         return serviceNameWithGroup.split(Constants.SERVICE_INFO_SPLITER)[0];\n     }\n+    \n+    /**\n+     * check combineServiceName format. the serviceName can't be blank. some relational logic in {@link\n+     * com.alibaba.nacos.naming.web.DistroFilter#doFilter}, it will handle combineServiceName in some case, you should\n+     * know it.\n+     * <pre>\n+     * serviceName = \"@@\"; the length = 0; illegal\n+     * serviceName = \"group@@\"; the length = 1; illegal\n+     * serviceName = \"@@serviceName\"; the length = 2; legal\n+     * serviceName = \"group@@serviceName\"; the length = 2; legal\n+     * </pre>\n+     *\n+     * @param combineServiceName such as: groupName@@serviceName\n+     */\n+    public static void checkServiceNameFormat(String combineServiceName) {\n+        String[] split = combineServiceName.split(Constants.SERVICE_INFO_SPLITER);\n+        if (split.length <= 1) {\n+            throw new IllegalArgumentException(\n+                    \"Param 'serviceName' is illegal, it should be format as 'groupName@@serviceName'\");\n+        }\n+    }\n+    \n+    /**\n+     * get target value from param, if not found will throw {@link IllegalArgumentException}.\n+     *\n+     * @param param param\n+     * @param key   key\n+     * @return value\n+     */\n+    public static String required(final Map<String, String> param, final String key) {\n+        String value = param.get(key);\n+        if (StringUtils.isEmpty(value)) {\n+            throw new IllegalArgumentException(\"Param '\" + key + \"' is required.\");\n+        }\n+        return value;\n+    }\n+    \n+    /**\n+     * get target value from param, if not found will return default value.\n+     *\n+     * @param param        param\n+     * @param key          key\n+     * @param defaultValue default value\n+     * @return value\n+     */\n+    public static String optional(final Map<String, String> param, final String key, final String defaultValue) {", "originalCommit": "e2c3aacd54693c8187370779a06e682345510c74", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY2Njk2OA==", "url": "https://github.com/alibaba/nacos/pull/3912#discussion_r495666968", "bodyText": "TypeReference<List>\u8fd9\u4e2a\u53d8\u91cf\u662f\u4e0d\u662f\u53ef\u4ee5\u8003\u8651static\u5316", "author": "chuntaojun", "createdAt": "2020-09-28T03:04:43Z", "path": "naming/src/main/java/com/alibaba/nacos/naming/controllers/InstanceController.java", "diffHunk": "@@ -183,6 +188,140 @@ public String update(HttpServletRequest request) throws Exception {\n         return \"ok\";\n     }\n     \n+    /**\n+     * Batch update instance's metadata. old key exist = update, old key not exist = add.\n+     *\n+     * @param request http request\n+     * @return 'ok' if success\n+     * @throws Exception any error during update\n+     */\n+    @CanDistro\n+    @PutMapping(value = \"/metadata/batch\")\n+    @Secured(parser = NamingResourceParser.class, action = ActionTypes.WRITE)\n+    public String batchUpdateInstanceMatadata(HttpServletRequest request) throws Exception {\n+        final String namespaceId = WebUtils\n+                .optional(request, CommonParams.NAMESPACE_ID, Constants.DEFAULT_NAMESPACE_ID);\n+        \n+        String targetInstances = WebUtils.required(request, \"target\");\n+        \n+        List<Map> services = parseBatchInstances(targetInstances);\n+        \n+        String metadata = WebUtils.required(request, \"metadata\");\n+        Map<String, String> targetMetadata = UtilsAndCommons.parseMetadata(metadata);\n+        \n+        batchOperateMetadata(namespaceId, services, targetMetadata, UPDATE_INSTANCE_METADATA_ACTION_UPDATE);\n+        \n+        return \"ok\";\n+    }\n+    \n+    /**\n+     * parse batch instance str, it should be as '[{\"serviceName\":\"xxxx@@xxxx\",\"instances\":[{\"ip\":\"127.0.0.1\",\"port\":\n+     * 8080,\"ephemeral\":\"true\",\"clusterName\":\"xxx-cluster\"}], \"all\":\"false\"}]'.\n+     *\n+     * @param instances instances str\n+     * @return instances as List\n+     */\n+    private List<Map> parseBatchInstances(String instances) {\n+        try {\n+            return JacksonUtils.toObj(instances, new TypeReference<List<Map>>() {", "originalCommit": "e2c3aacd54693c8187370779a06e682345510c74", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY5MDM0MQ==", "url": "https://github.com/alibaba/nacos/pull/3912#discussion_r495690341", "bodyText": "\u81ea\u6211\u611f\u89c9\u6ca1\u5fc5\u8981\u3002\u8fd9\u4e2a\u751f\u547d\u5468\u671f\u5f88\u77ed\u3002\u5355\u72ec\u653e\u5728\u5916\u9762static\u8fd8\u989d\u5916\u5360\u7a7a\u95f4\uff0c\u8fd8\u4e0d\u597d\u770b", "author": "horizonzy", "createdAt": "2020-09-28T05:03:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY2Njk2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY2NzA1Nw==", "url": "https://github.com/alibaba/nacos/pull/3912#discussion_r495667057", "bodyText": "\u8003\u8651\u4e0b\u6c89\u5230ServiceManager", "author": "chuntaojun", "createdAt": "2020-09-28T03:05:04Z", "path": "naming/src/main/java/com/alibaba/nacos/naming/controllers/InstanceController.java", "diffHunk": "@@ -183,6 +188,140 @@ public String update(HttpServletRequest request) throws Exception {\n         return \"ok\";\n     }\n     \n+    /**\n+     * Batch update instance's metadata. old key exist = update, old key not exist = add.\n+     *\n+     * @param request http request\n+     * @return 'ok' if success\n+     * @throws Exception any error during update\n+     */\n+    @CanDistro\n+    @PutMapping(value = \"/metadata/batch\")\n+    @Secured(parser = NamingResourceParser.class, action = ActionTypes.WRITE)\n+    public String batchUpdateInstanceMatadata(HttpServletRequest request) throws Exception {\n+        final String namespaceId = WebUtils\n+                .optional(request, CommonParams.NAMESPACE_ID, Constants.DEFAULT_NAMESPACE_ID);\n+        \n+        String targetInstances = WebUtils.required(request, \"target\");\n+        \n+        List<Map> services = parseBatchInstances(targetInstances);\n+        \n+        String metadata = WebUtils.required(request, \"metadata\");\n+        Map<String, String> targetMetadata = UtilsAndCommons.parseMetadata(metadata);\n+        \n+        batchOperateMetadata(namespaceId, services, targetMetadata, UPDATE_INSTANCE_METADATA_ACTION_UPDATE);\n+        \n+        return \"ok\";\n+    }\n+    \n+    /**\n+     * parse batch instance str, it should be as '[{\"serviceName\":\"xxxx@@xxxx\",\"instances\":[{\"ip\":\"127.0.0.1\",\"port\":\n+     * 8080,\"ephemeral\":\"true\",\"clusterName\":\"xxx-cluster\"}], \"all\":\"false\"}]'.\n+     *\n+     * @param instances instances str\n+     * @return instances as List\n+     */\n+    private List<Map> parseBatchInstances(String instances) {\n+        try {\n+            return JacksonUtils.toObj(instances, new TypeReference<List<Map>>() {\n+            });\n+        } catch (Exception e) {\n+            Loggers.SRV_LOG.warn(\"UPDATE-METADATA: Param 'target' is illegal, ignore this operation\", e);\n+        }\n+        return new ArrayList<>();\n+    }\n+    \n+    /**\n+     * Batch delete instance's metadata. old key exist = delete, old key not exist = not operate\n+     *\n+     * @param request http request\n+     * @return 'ok' if success\n+     * @throws Exception any error during update\n+     */\n+    @CanDistro\n+    @DeleteMapping(\"/metadata/batch\")\n+    @Secured(parser = NamingResourceParser.class, action = ActionTypes.WRITE)\n+    public String batchDeleteInstanceMatadata(HttpServletRequest request) throws Exception {\n+        final String namespaceId = WebUtils\n+                .optional(request, CommonParams.NAMESPACE_ID, Constants.DEFAULT_NAMESPACE_ID);\n+        \n+        String targetInstances = WebUtils.required(request, \"target\");\n+        \n+        List<Map> services = parseBatchInstances(targetInstances);\n+        \n+        String metadata = WebUtils.required(request, \"metadata\");\n+        Map<String, String> targetMetadata = UtilsAndCommons.parseMetadata(metadata);\n+        \n+        batchOperateMetadata(namespaceId, services, targetMetadata, UPDATE_INSTANCE_METADATA_ACTION_REMOVE);\n+        \n+        return \"ok\";\n+    }\n+    \n+    private void batchOperateMetadata(String namespace, List<Map> services, Map<String, String> metadata,\n+            String action) {\n+        Consumer<OperationContext> consumer = operationContext -> {\n+            try {\n+                serviceManager.updateMetadata(operationContext.getNamespace(), operationContext.getServiceName(),\n+                        operationContext.getEphemeral(), action, operationContext.getAll(), operationContext.getInstances(),\n+                        metadata);\n+            } catch (NacosException e) {\n+                Loggers.SRV_LOG.warn(\"UPDATE-METADATA: updateMetadata failed\", e);\n+            }\n+        };\n+        batchOperate(namespace, services, consumer);\n+    }\n+    \n+    private void batchOperate(String namespace, List<Map> services, Consumer<OperationContext> consumer) {", "originalCommit": "e2c3aacd54693c8187370779a06e682345510c74", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY4ODc5NA==", "url": "https://github.com/alibaba/nacos/pull/3912#discussion_r495688794", "bodyText": "\u8fd9\u4e2a\u8fd8\u662f\u4e0d\u4e0b\u6c89\u5230ServiceManager\uff0cServiceManager\u53ea\u662f\u5bf9\u5185\u90e8instances\u8fdb\u884c\u64cd\u4f5c\u3002\u4f46\u662f\u8fd9\u4e2a\u64cd\u4f5c\u7684\u65b9\u5f0f\u5177\u4f53\u600e\u4e48\u64cd\u4f5c\u5e94\u8be5\u5728\u5916\u90e8\u5b9a\u4e49\u3002serviceManager\u53ea\u63d0\u4f9b\u64cd\u4f5c\u8d44\u6e90\u7684\u65b9\u5f0f\uff0c\u5916\u90e8\u8fdb\u884c\u6574\u5408", "author": "horizonzy", "createdAt": "2020-09-28T04:56:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY2NzA1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY2Nzc5NA==", "url": "https://github.com/alibaba/nacos/pull/3912#discussion_r495667794", "bodyText": "\u5efa\u8bae\u8c03\u6574\u4e3aInstanceOperationContext\uff0c\u4e0d\u7136\u53ef\u80fd\u8fd8\u4f1a\u6709ServiceOperationContext", "author": "chuntaojun", "createdAt": "2020-09-28T03:09:06Z", "path": "naming/src/main/java/com/alibaba/nacos/naming/pojo/OperationContext.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.naming.pojo;\n+\n+import com.alibaba.nacos.naming.core.Instance;\n+\n+import java.util.List;\n+\n+/**\n+ * OperationContext. used in batch operation's consumer.\n+ *\n+ * @author horizonzy\n+ */\n+public class OperationContext {", "originalCommit": "e2c3aacd54693c8187370779a06e682345510c74", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY4ODgxNg==", "url": "https://github.com/alibaba/nacos/pull/3912#discussion_r495688816", "bodyText": "right", "author": "horizonzy", "createdAt": "2020-09-28T04:56:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY2Nzc5NA=="}], "type": "inlineReview"}, {"oid": "d262ed8f242f4188ff6d5cd7e72798ea3e34091f", "url": "https://github.com/alibaba/nacos/commit/d262ed8f242f4188ff6d5cd7e72798ea3e34091f", "message": "1.rename class OperationContext -> InstanceOperationContext\n2.move Map operation from NamingUtils to MapUtils", "committedDate": "2020-09-28T05:13:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTcwNDAyOA==", "url": "https://github.com/alibaba/nacos/pull/3912#discussion_r495704028", "bodyText": "\u8fd9\u91cc\u7684datum\uff0c \u9700\u8981\u6ce8\u610f\u4e00\u4e0b\u4e3anull\u7684\u60c5\u51b5", "author": "Maijh97", "createdAt": "2020-09-28T05:57:11Z", "path": "naming/src/main/java/com/alibaba/nacos/naming/core/ServiceManager.java", "diffHunk": "@@ -524,6 +527,95 @@ public void updateInstance(String namespaceId, String serviceName, Instance inst\n         addInstance(namespaceId, serviceName, instance.isEphemeral(), instance);\n     }\n     \n+    /**\n+     * Update instance's metadata.\n+     *\n+     * @param namespaceId namespace\n+     * @param serviceName service name\n+     * @param action      update or remove\n+     * @param ips         need update instances\n+     * @param metadata    target metadata\n+     * @throws NacosException nacos exception\n+     */\n+    public void updateMetadata(String namespaceId, String serviceName, boolean isEphemeral, String action, boolean all,\n+            List<Instance> ips, Map<String, String> metadata) throws NacosException {\n+        \n+        Service service = getService(namespaceId, serviceName);\n+        \n+        if (service == null) {\n+            throw new NacosException(NacosException.INVALID_PARAM,\n+                    \"service not found, namespace: \" + namespaceId + \", service: \" + serviceName);\n+        }\n+        \n+        List<Instance> locatedInstance = getLocatedInstance(namespaceId, serviceName, isEphemeral, all, ips);\n+        \n+        if (CollectionUtils.isEmpty(locatedInstance)) {\n+            throw new NacosException(NacosException.INVALID_PARAM, \"instances not exist\");\n+        }\n+        \n+        if (UPDATE_INSTANCE_METADATA_ACTION_UPDATE.equals(action)) {\n+            locatedInstance.forEach(ele -> ele.getMetadata().putAll(metadata));\n+        } else if (UPDATE_INSTANCE_METADATA_ACTION_REMOVE.equals(action)) {\n+            Set<String> removeKeys = metadata.keySet();\n+            for (String removeKey : removeKeys) {\n+                locatedInstance.forEach(ele -> ele.getMetadata().remove(removeKey));\n+            }\n+        }\n+        Instance[] instances = new Instance[locatedInstance.size()];\n+        locatedInstance.toArray(instances);\n+        \n+        addInstance(namespaceId, serviceName, isEphemeral, instances);\n+    }\n+    \n+    /**\n+     * locate consistency's datum by all or instances provided.\n+     *\n+     * @param namespaceId        namespace\n+     * @param serviceName        serviceName\n+     * @param isEphemeral        isEphemeral\n+     * @param all                get from consistencyService directly\n+     * @param waitLocateInstance instances provided\n+     * @return located instances\n+     * @throws NacosException nacos exception\n+     */\n+    public List<Instance> getLocatedInstance(String namespaceId, String serviceName, boolean isEphemeral, boolean all,\n+            List<Instance> waitLocateInstance) throws NacosException {\n+        List<Instance> locatedInstance;\n+        \n+        //need the newest data from consistencyService\n+        Datum datum = consistencyService.get(KeyBuilder.buildInstanceListKey(namespaceId, serviceName, isEphemeral));\n+        \n+        if (all) {\n+            locatedInstance = ((Instances) datum.value).getInstanceList();", "originalCommit": "d262ed8f242f4188ff6d5cd7e72798ea3e34091f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTcwNjYwMw==", "url": "https://github.com/alibaba/nacos/pull/3912#discussion_r495706603", "bodyText": "\u5bf9\u7684\u3002\u6709\u53ef\u80fd\uff0cservice\u4e2d\u5b58\u5728\u6301\u4e45\u5316instances\uff0c\u5982\u679c\u64cd\u4f5c\u7684\u662f\u975e\u6301\u4e45\u5316\u7684instance\uff0c\u53ef\u80fd\u4f1a\u7a7a", "author": "horizonzy", "createdAt": "2020-09-28T06:05:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTcwNDAyOA=="}], "type": "inlineReview"}, {"oid": "65629aa3a8d7d599847b50a4b4ed73eae1620a94", "url": "https://github.com/alibaba/nacos/commit/65629aa3a8d7d599847b50a4b4ed73eae1620a94", "message": "check datum is null", "committedDate": "2020-09-28T06:08:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTczMTA1OQ==", "url": "https://github.com/alibaba/nacos/pull/3912#discussion_r495731059", "bodyText": "\u4e0d\u5efa\u8bae\u4f7f\u7528List\u8fd9\u79cdValue\u503c\u4e0d\u660e\u786e\u7684\u60c5\u51b5\uff0c\u5efa\u8bae\u5355\u72ec\u521b\u5efa\u4e00\u4e2aObject\u8fdb\u884c\u63cf\u8ff0\uff0c\u5426\u5219\u53ef\u8bfb\u6027\u662f\u4e00\u4e2a\u95ee\u9898\uff0c\u4e5f\u53ef\u80fd\u5bb9\u6613\u51fa\u73b0CaseException\u95ee\u9898", "author": "chuntaojun", "createdAt": "2020-09-28T07:11:03Z", "path": "naming/src/main/java/com/alibaba/nacos/naming/controllers/InstanceController.java", "diffHunk": "@@ -183,6 +189,141 @@ public String update(HttpServletRequest request) throws Exception {\n         return \"ok\";\n     }\n     \n+    /**\n+     * Batch update instance's metadata. old key exist = update, old key not exist = add.\n+     *\n+     * @param request http request\n+     * @return 'ok' if success\n+     * @throws Exception any error during update\n+     */\n+    @CanDistro\n+    @PutMapping(value = \"/metadata/batch\")\n+    @Secured(parser = NamingResourceParser.class, action = ActionTypes.WRITE)\n+    public String batchUpdateInstanceMatadata(HttpServletRequest request) throws Exception {\n+        final String namespaceId = WebUtils\n+                .optional(request, CommonParams.NAMESPACE_ID, Constants.DEFAULT_NAMESPACE_ID);\n+        \n+        String targetInstances = WebUtils.required(request, \"target\");\n+        \n+        List<Map> services = parseBatchInstances(targetInstances);\n+        \n+        String metadata = WebUtils.required(request, \"metadata\");\n+        Map<String, String> targetMetadata = UtilsAndCommons.parseMetadata(metadata);\n+        \n+        batchOperateMetadata(namespaceId, services, targetMetadata, UPDATE_INSTANCE_METADATA_ACTION_UPDATE);\n+        \n+        return \"ok\";\n+    }\n+    \n+    /**\n+     * parse batch instance str, it should be as '[{\"serviceName\":\"xxxx@@xxxx\",\"instances\":[{\"ip\":\"127.0.0.1\",\"port\":\n+     * 8080,\"ephemeral\":\"true\",\"clusterName\":\"xxx-cluster\"}], \"all\":\"ephemeral\"}]'.\n+     *\n+     * @param instances instances str\n+     * @return instances as List\n+     */\n+    private List<Map> parseBatchInstances(String instances) {\n+        try {\n+            return JacksonUtils.toObj(instances, new TypeReference<List<Map>>() {", "originalCommit": "65629aa3a8d7d599847b50a4b4ed73eae1620a94", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc2MjMwNw==", "url": "https://github.com/alibaba/nacos/pull/3912#discussion_r495762307", "bodyText": "\u8fd9\u4e2a\u6211\u8003\u8651\u8fc7\u3002\u5982\u679c\u540e\u7eed\u64cd\u4f5cpojo\u4e0d\u80fd\u590d\u7528\u7684\u8bdd\uff0cpojo\u5c31\u4f1a\u8d8a\u6765\u8d8a\u591a\u4e86", "author": "horizonzy", "createdAt": "2020-09-28T08:12:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTczMTA1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU2NjIwMQ==", "url": "https://github.com/alibaba/nacos/pull/3912#discussion_r497566201", "bodyText": "@zongtanghu @KomachiSion @KeRan213539 What do you think", "author": "chuntaojun", "createdAt": "2020-09-30T14:42:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTczMTA1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY2MTM1NQ==", "url": "https://github.com/alibaba/nacos/pull/3912#discussion_r498661355", "bodyText": "@chuntaojun \u6211\u89c9\u5f97\u8fd8\u662f\u5b9a\u4e49\u4e2apojo\u597d\u4e00\u4e9b,\u8fd9\u6837\u65e2\u80fd\u660e\u786e\u6709\u4e9b\u4ec0\u4e48\u5c5e\u6027\u4e0d\u81f3\u4e8e\u6df7\u4e71, \u4e5f\u80fd\u5bf9\u63d0\u4ea4\u7684\u6570\u636e\u505a\u4e00\u4e9b\u8fc7\u6ee4\u548c\u6821\u9a8c", "author": "KeRan213539", "createdAt": "2020-10-02T07:40:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTczMTA1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTczMjUyNg==", "url": "https://github.com/alibaba/nacos/pull/3912#discussion_r495732526", "bodyText": "\u540e\u9762Controller\u6211\u5e0c\u671b\u4f18\u5316\u6389\u73b0\u6709\u4ee3\u7801\u7684\u5f62\u5f0f\uff0ccontroller\u8fd9\u91cc\u51fa\u73b0\u4e86\u592a\u591a\u65e0\u5173\u7684\u903b\u8f91\uff0c\u6240\u4ee5\u5efa\u8bae\u8fd9\u4e2apr\u9075\u5faa\u4e00\u4e0b\uff0c\u975econtroller\u5c42\u9762\u7684\u903b\u8f91\uff0c\u5c3d\u91cf\u4e0d\u8981\u51fa\u73b0", "author": "chuntaojun", "createdAt": "2020-09-28T07:14:09Z", "path": "naming/src/main/java/com/alibaba/nacos/naming/controllers/InstanceController.java", "diffHunk": "@@ -183,6 +189,141 @@ public String update(HttpServletRequest request) throws Exception {\n         return \"ok\";\n     }\n     \n+    /**\n+     * Batch update instance's metadata. old key exist = update, old key not exist = add.\n+     *\n+     * @param request http request\n+     * @return 'ok' if success\n+     * @throws Exception any error during update\n+     */\n+    @CanDistro\n+    @PutMapping(value = \"/metadata/batch\")\n+    @Secured(parser = NamingResourceParser.class, action = ActionTypes.WRITE)\n+    public String batchUpdateInstanceMatadata(HttpServletRequest request) throws Exception {\n+        final String namespaceId = WebUtils\n+                .optional(request, CommonParams.NAMESPACE_ID, Constants.DEFAULT_NAMESPACE_ID);\n+        \n+        String targetInstances = WebUtils.required(request, \"target\");\n+        \n+        List<Map> services = parseBatchInstances(targetInstances);\n+        \n+        String metadata = WebUtils.required(request, \"metadata\");\n+        Map<String, String> targetMetadata = UtilsAndCommons.parseMetadata(metadata);\n+        \n+        batchOperateMetadata(namespaceId, services, targetMetadata, UPDATE_INSTANCE_METADATA_ACTION_UPDATE);\n+        \n+        return \"ok\";\n+    }\n+    \n+    /**\n+     * parse batch instance str, it should be as '[{\"serviceName\":\"xxxx@@xxxx\",\"instances\":[{\"ip\":\"127.0.0.1\",\"port\":\n+     * 8080,\"ephemeral\":\"true\",\"clusterName\":\"xxx-cluster\"}], \"all\":\"ephemeral\"}]'.\n+     *\n+     * @param instances instances str\n+     * @return instances as List\n+     */\n+    private List<Map> parseBatchInstances(String instances) {\n+        try {\n+            return JacksonUtils.toObj(instances, new TypeReference<List<Map>>() {\n+            });\n+        } catch (Exception e) {\n+            Loggers.SRV_LOG.warn(\"UPDATE-METADATA: Param 'target' is illegal, ignore this operation\", e);\n+        }\n+        return new ArrayList<>();\n+    }\n+    \n+    /**\n+     * Batch delete instance's metadata. old key exist = delete, old key not exist = not operate\n+     *\n+     * @param request http request\n+     * @return 'ok' if success\n+     * @throws Exception any error during update\n+     */\n+    @CanDistro\n+    @DeleteMapping(\"/metadata/batch\")\n+    @Secured(parser = NamingResourceParser.class, action = ActionTypes.WRITE)\n+    public String batchDeleteInstanceMatadata(HttpServletRequest request) throws Exception {\n+        final String namespaceId = WebUtils\n+                .optional(request, CommonParams.NAMESPACE_ID, Constants.DEFAULT_NAMESPACE_ID);\n+        \n+        String targetInstances = WebUtils.required(request, \"target\");\n+        \n+        List<Map> services = parseBatchInstances(targetInstances);\n+        \n+        String metadata = WebUtils.required(request, \"metadata\");\n+        Map<String, String> targetMetadata = UtilsAndCommons.parseMetadata(metadata);\n+        \n+        batchOperateMetadata(namespaceId, services, targetMetadata, UPDATE_INSTANCE_METADATA_ACTION_REMOVE);\n+        \n+        return \"ok\";\n+    }\n+    \n+    private void batchOperateMetadata(String namespace, List<Map> services, Map<String, String> metadata,\n+            String action) {\n+        Consumer<InstanceOperationContext> consumer = instanceOperationContext -> {\n+            try {\n+                serviceManager.updateMetadata(instanceOperationContext.getNamespace(), instanceOperationContext.getServiceName(),\n+                        instanceOperationContext.getEphemeral(), action, instanceOperationContext.getAll(), instanceOperationContext\n+                                .getInstances(),\n+                        metadata);\n+            } catch (NacosException e) {\n+                Loggers.SRV_LOG.warn(\"UPDATE-METADATA: updateMetadata failed\", e);\n+            }\n+        };\n+        batchOperate(namespace, services, consumer);\n+    }\n+    \n+    private void batchOperate(String namespace, List<Map> services, Consumer<InstanceOperationContext> consumer) {", "originalCommit": "65629aa3a8d7d599847b50a4b4ed73eae1620a94", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc2MTQ0OQ==", "url": "https://github.com/alibaba/nacos/pull/3912#discussion_r495761449", "bodyText": "\u53ef\u4ee5\u628a\u3002\u90a3\u6211\u8fd9\u4e00\u7248\u5c31\u91cd\u6784\u4e00\u4e0b\uff0c\u4e0b\u6c89\u5230manager\u5c42\u3002", "author": "horizonzy", "createdAt": "2020-09-28T08:10:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTczMjUyNg=="}], "type": "inlineReview"}, {"oid": "77059e822ffd4240d50d42160135698fdefea4d6", "url": "https://github.com/alibaba/nacos/commit/77059e822ffd4240d50d42160135698fdefea4d6", "message": "code refactor.", "committedDate": "2020-09-28T12:37:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjMyNTE2Ng==", "url": "https://github.com/alibaba/nacos/pull/3912#discussion_r496325166", "bodyText": "private String all;  \u5efa\u8bae\u91cd\u65b0\u4fee\u6539\u4e00\u4e0b\u8fd9\u4e2a\u5b57\u6bb5\u7684\u547d\u540d\uff0c\u76ee\u524d\u8fd9\u4e2a\u5b57\u6bb5\u7684\u547d\u540d\u5982\u679c\u5355\u7eaf\u901a\u8fc7\u5b57\u6bb5\u540d\u79f0\u5f88\u96be\u7406\u89e3\u5177\u4f53\u4ee3\u8868\u7684\u542b\u4e49\uff0c\u6211\u8ba4\u4e3a\u662f\u4e0d\u662f\u4fee\u6539\u4e3aconsistencyType\u6216\u8005type \u6216\u8005\u6709\u66f4\u597d\u7684\u5176\u5b83\u7684\u540d\u79f0\u3002", "author": "Maijh97", "createdAt": "2020-09-29T01:37:41Z", "path": "naming/src/main/java/com/alibaba/nacos/naming/pojo/InstanceOperationInfo.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.naming.pojo;\n+\n+import com.alibaba.nacos.naming.core.Instance;\n+\n+import java.util.List;\n+\n+/**\n+ * InstanceOperationInfo. operation resources description\n+ *\n+ * @author horizonzy\n+ */\n+public class InstanceOperationInfo {\n+    \n+    /**\n+     * serverName.\n+     */\n+    private String serviceName;\n+    \n+    /**\n+     * instanceList which need operate.\n+     */\n+    private List<Instance> instances;\n+    \n+    /**\n+     * ephemeral/persist/*.\n+     * <p>ephemeral = all ephemeral instances in {@link com.alibaba.nacos.naming.consistency.ephemeral.distro.DistroConsistencyServiceImpl}\n+     * persist = all persist instances in {@link com.alibaba.nacos.naming.consistency.persistent.raft.RaftConsistencyServiceImpl}\n+     * * = persist union ephemeral</p>\n+     */\n+    private String all;", "originalCommit": "77059e822ffd4240d50d42160135698fdefea4d6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQ2MDI3OA==", "url": "https://github.com/alibaba/nacos/pull/3912#discussion_r496460278", "bodyText": "\u55ef\u3002\u7528consistencyType", "author": "horizonzy", "createdAt": "2020-09-29T06:59:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjMyNTE2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYwODcwNQ==", "url": "https://github.com/alibaba/nacos/pull/3912#discussion_r496608705", "bodyText": "\u4e0d\u8fc7\u8fd9\u4e2a\u548c @HaojunRen \u6c9f\u901a\u4e0b\uff0c\u6628\u5929\u7ed9\u7684\u90a3\u4e00\u7248\u53c2\u6570\u7528\u7684\u662fall\uff0c\u4ed6\u90a3\u8fb9\u5e94\u8be5openApi\u7528\u7684\u5e94\u8be5\u662fall\u53c2\u6570\u7528\u6765\u96c6\u6210\u7684\u3002", "author": "horizonzy", "createdAt": "2020-09-29T10:25:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjMyNTE2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjM0NDE2Mg==", "url": "https://github.com/alibaba/nacos/pull/3912#discussion_r496344162", "bodyText": "\u5982\u679c\u8bf4batchOperate\u60f3\u5229\u7528\u51fd\u6570\u505a\u53ef\u81ea\u5b9a\u4e49\u7684\u64cd\u4f5c\uff0c\u90a3\u4e48Consumer\u5e94\u8be5\u6362\u6210BiConsumer\uff0c\u4f20\u5165\u53c2\u6570\u4ee5\u53ca\u5b9e\u9645\u7684\u64cd\u4f5c\u6267\u884c\u8005", "author": "chuntaojun", "createdAt": "2020-09-29T02:38:20Z", "path": "naming/src/main/java/com/alibaba/nacos/naming/controllers/InstanceController.java", "diffHunk": "@@ -183,6 +188,82 @@ public String update(HttpServletRequest request) throws Exception {\n         return \"ok\";\n     }\n     \n+    /**\n+     * Batch update instance's metadata. old key exist = update, old key not exist = add.\n+     *\n+     * @param request http request\n+     * @return 'ok' if success\n+     * @throws Exception any error during update\n+     */\n+    @CanDistro\n+    @PutMapping(value = \"/metadata/batch\")\n+    @Secured(parser = NamingResourceParser.class, action = ActionTypes.WRITE)\n+    public String batchUpdateInstanceMatadata(HttpServletRequest request) throws Exception {\n+        final String namespaceId = WebUtils\n+                .optional(request, CommonParams.NAMESPACE_ID, Constants.DEFAULT_NAMESPACE_ID);\n+        \n+        String targetInstances = WebUtils.required(request, \"target\");\n+        \n+        List<InstanceOperationInfo> operationInfos = parseBatchInstances(targetInstances);\n+        \n+        String metadata = WebUtils.required(request, \"metadata\");\n+        Map<String, String> targetMetadata = UtilsAndCommons.parseMetadata(metadata);\n+        \n+        batchOperateMetadata(namespaceId, operationInfos, targetMetadata, UPDATE_INSTANCE_METADATA_ACTION_UPDATE);\n+        \n+        return \"ok\";\n+    }\n+    \n+    /**\n+     * Batch delete instance's metadata. old key exist = delete, old key not exist = not operate\n+     *\n+     * @param request http request\n+     * @return 'ok' if success\n+     * @throws Exception any error during update\n+     */\n+    @CanDistro\n+    @DeleteMapping(\"/metadata/batch\")\n+    @Secured(parser = NamingResourceParser.class, action = ActionTypes.WRITE)\n+    public String batchDeleteInstanceMatadata(HttpServletRequest request) throws Exception {\n+        final String namespaceId = WebUtils\n+                .optional(request, CommonParams.NAMESPACE_ID, Constants.DEFAULT_NAMESPACE_ID);\n+        \n+        String targetInstances = WebUtils.required(request, \"target\");\n+        \n+        List<InstanceOperationInfo> operationInfos = parseBatchInstances(targetInstances);\n+        \n+        String metadata = WebUtils.required(request, \"metadata\");\n+        Map<String, String> targetMetadata = UtilsAndCommons.parseMetadata(metadata);\n+        \n+        batchOperateMetadata(namespaceId, operationInfos, targetMetadata, UPDATE_INSTANCE_METADATA_ACTION_REMOVE);\n+        \n+        return \"ok\";\n+    }\n+    \n+    private List<InstanceOperationInfo> parseBatchInstances(String instances) {\n+        try {\n+            return JacksonUtils.toObj(instances, new TypeReference<List<InstanceOperationInfo>>() {\n+            });\n+        } catch (Exception e) {\n+            Loggers.SRV_LOG.warn(\"UPDATE-METADATA: Param 'target' is illegal, ignore this operation\", e);\n+        }\n+        return new ArrayList<>();\n+    }\n+    \n+    private void batchOperateMetadata(String namespace, List<InstanceOperationInfo> operationInfos,\n+            Map<String, String> metadata, String action) {\n+        Consumer<InstanceOperationContext> operateConsumer = instanceOperationContext -> {", "originalCommit": "77059e822ffd4240d50d42160135698fdefea4d6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQxMDk4MA==", "url": "https://github.com/alibaba/nacos/pull/3912#discussion_r496410980", "bodyText": "BiConsumer<param, Consumer>\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u5c31\u662f\u4e1a\u52a1Consumer\u8fd9\u79cd\uff1f", "author": "horizonzy", "createdAt": "2020-09-29T05:12:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjM0NDE2Mg=="}], "type": "inlineReview"}, {"oid": "1b053d857703628c17d815acdb46983fa038b608", "url": "https://github.com/alibaba/nacos/commit/1b053d857703628c17d815acdb46983fa038b608", "message": "1. code refactor\n2. modify the batch operate http param. just support (1 services : n instance)", "committedDate": "2020-09-29T17:43:44Z", "type": "commit"}, {"oid": "6d81919e6c8437fb22b6fdc40cfd2a06713b5266", "url": "https://github.com/alibaba/nacos/commit/6d81919e6c8437fb22b6fdc40cfd2a06713b5266", "message": "1.set default clusterName if instance not set\n2.fix client params not set instances bug", "committedDate": "2020-09-29T18:17:28Z", "type": "commit"}, {"oid": "8fc887e1d8199130bc995e3704efac5fd56fa022", "url": "https://github.com/alibaba/nacos/commit/8fc887e1d8199130bc995e3704efac5fd56fa022", "message": "npe fix", "committedDate": "2020-09-29T18:33:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIzNDI3Mg==", "url": "https://github.com/alibaba/nacos/pull/3912#discussion_r497234272", "bodyText": "\u4e13\u95e8\u4e00\u4e2a\u8fd4\u56de\u4f53\u5904\u7406\u5427\uff0c\u540e\u9762\u5c06\u8981\u7edf\u4e00\u5904\u7406\u6389\u8fd9\u79cd\u4e0d\u7edf\u4e00\u7684\u8fd4\u56de\u683c\u5f0f", "author": "chuntaojun", "createdAt": "2020-09-30T04:19:53Z", "path": "naming/src/main/java/com/alibaba/nacos/naming/controllers/InstanceController.java", "diffHunk": "@@ -183,6 +191,123 @@ public String update(HttpServletRequest request) throws Exception {\n         return \"ok\";\n     }\n     \n+    /**\n+     * Batch update instance's metadata. old key exist = update, old key not exist = add.\n+     *\n+     * @param request http request\n+     * @return 'ok' if success\n+     * @throws Exception any error during update\n+     */\n+    @CanDistro\n+    @PutMapping(value = \"/metadata/batch\")\n+    @Secured(parser = NamingResourceParser.class, action = ActionTypes.WRITE)\n+    public ObjectNode batchUpdateInstanceMatadata(HttpServletRequest request) throws Exception {", "originalCommit": "8fc887e1d8199130bc995e3704efac5fd56fa022", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQ4NTU1OQ==", "url": "https://github.com/alibaba/nacos/pull/3912#discussion_r497485559", "bodyText": "\u4e0b\u4e00\u6b21\u5355\u72ec\u65b0\u5f00\u4e00\u4e2apr\uff0c\u7edf\u4e00\u5904\u7406controller\u7684\u8fd4\u56de\u6570\u636e\u7ed3\u6784", "author": "horizonzy", "createdAt": "2020-09-30T12:54:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIzNDI3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIzNDgwNg==", "url": "https://github.com/alibaba/nacos/pull/3912#discussion_r497234806", "bodyText": "\u8fd9\u4e2a\u65b9\u6cd5\u56db\u4e2acase\u90fd\u6709\uff0c\u53ef\u4ee5\u62ff\u51fa\u6765", "author": "chuntaojun", "createdAt": "2020-09-30T04:22:10Z", "path": "naming/src/main/java/com/alibaba/nacos/naming/core/ServiceManager.java", "diffHunk": "@@ -604,6 +707,67 @@ public Instance getInstance(String namespaceId, String serviceName, String clust\n         return null;\n     }\n     \n+    /**\n+     * batch operate kinds of resources.\n+     *\n+     * @param namespace       namespace.\n+     * @param operationInfo   operation resources description.\n+     * @param operateFunction some operation defined by kinds of situation.\n+     */\n+    public List<Instance> batchOperate(String namespace, InstanceOperationInfo operationInfo,\n+            Function<InstanceOperationContext, List<Instance>> operateFunction) {\n+        List<Instance> operatedInstances = new ArrayList<>();\n+        try {\n+            String serviceName = operationInfo.getServiceName();\n+            NamingUtils.checkServiceNameFormat(serviceName);\n+            // type: */ephemeral/persist\n+            String type = operationInfo.getConsistencyType();\n+            InstanceOperationContext operationContext = new InstanceOperationContext();\n+            operationContext.setNamespace(namespace);\n+            operationContext.setServiceName(serviceName);\n+            if (!StringUtils.isEmpty(type)) {\n+                switch (type) {\n+                    case UtilsAndCommons.UNION:\n+                        operationContext.allEphemeralOperate();\n+                        operatedInstances.addAll(operateFunction.apply(operationContext));", "originalCommit": "8fc887e1d8199130bc995e3704efac5fd56fa022", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIzOTk3Mw==", "url": "https://github.com/alibaba/nacos/pull/3912#discussion_r497239973", "bodyText": "\u5982\u679c\u8fd9\u4e2a\u65b9\u6cd5\u6539\u7684\u7684\u53c2\u6570\u53ea\u80fd\u6539\u52a8\u4e00\u6b21\uff0c\u5219\u6700\u597d\u653e\u5728\u6784\u9020\u51fd\u6570\u91cc\u9762\u53bb\u505a\uff0c\u5426\u5219\u8fd9\u4e2a\u65b9\u6cd5\u66b4\u9732\u51fa\u53bb\u592a\u5371\u9669\uff0c", "author": "chuntaojun", "createdAt": "2020-09-30T04:44:31Z", "path": "naming/src/main/java/com/alibaba/nacos/naming/pojo/InstanceOperationContext.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.naming.pojo;\n+\n+import com.alibaba.nacos.naming.core.Instance;\n+\n+import java.util.List;\n+\n+/**\n+ * InstanceOperationContext. used in instance batch operation's consumer.\n+ *\n+ * @author horizonzy\n+ */\n+public class InstanceOperationContext {\n+    \n+    private String namespace;\n+    \n+    private String serviceName;\n+    \n+    private Boolean ephemeral;\n+    \n+    private Boolean all;\n+    \n+    private List<Instance> instances;\n+    \n+    public String getNamespace() {\n+        return namespace;\n+    }\n+    \n+    public void setNamespace(String namespace) {\n+        this.namespace = namespace;\n+    }\n+    \n+    public String getServiceName() {\n+        return serviceName;\n+    }\n+    \n+    public void setServiceName(String serviceName) {\n+        this.serviceName = serviceName;\n+    }\n+    \n+    public Boolean getEphemeral() {\n+        return ephemeral;\n+    }\n+    \n+    public void setEphemeral(Boolean ephemeral) {\n+        this.ephemeral = ephemeral;\n+    }\n+    \n+    public Boolean getAll() {\n+        return all;\n+    }\n+    \n+    public void setAll(Boolean all) {\n+        this.all = all;\n+    }\n+    \n+    public List<Instance> getInstances() {\n+        return instances;\n+    }\n+    \n+    public void setInstances(List<Instance> instances) {\n+        this.instances = instances;\n+    }\n+    \n+    /**\n+     * to operate all ephemeral instances from consitencyService.\n+     */\n+    public void allEphemeralOperate() {", "originalCommit": "8fc887e1d8199130bc995e3704efac5fd56fa022", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI0MDIxMg==", "url": "https://github.com/alibaba/nacos/pull/3912#discussion_r497240212", "bodyText": "\u540c\u7406\uff0c\u8fd9\u91cc\u9762\u7684\u53c2\u6570\u662f\u5426\u6709\u6d89\u53ca\u662f\u9700\u8981final\u7684\uff0c\u5982\u679c\u662f\u90a3\u4e48\u5c31\u4e0d\u8981\u66b4\u9732set\u65b9\u6cd5\u4e86", "author": "chuntaojun", "createdAt": "2020-09-30T04:45:30Z", "path": "naming/src/main/java/com/alibaba/nacos/naming/pojo/InstanceOperationInfo.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.naming.pojo;\n+\n+import com.alibaba.nacos.naming.core.Instance;\n+\n+import java.util.List;\n+\n+/**\n+ * InstanceOperationInfo. operation resources description\n+ *\n+ * @author horizonzy\n+ */\n+public class InstanceOperationInfo {", "originalCommit": "8fc887e1d8199130bc995e3704efac5fd56fa022", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a53eca41c1dbedbd9e34f30103cc32632a2848a0", "url": "https://github.com/alibaba/nacos/commit/a53eca41c1dbedbd9e34f30103cc32632a2848a0", "message": "1.remove consistencyType *, just support ephemeral or persist.\n2.remove moditfy property method in InstanceOperationContext and InstanceOperationInfo, it just defined by constructor.", "committedDate": "2020-09-30T13:36:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODYzMzk2OQ==", "url": "https://github.com/alibaba/nacos/pull/3912#discussion_r498633969", "bodyText": "Controller\u91cc\u9762\u7684\u903b\u8f91\u662f\u5426\u5e94\u8be5\u4e0b\u6c89\u4e00\u4e0b\u66f4\u597d\uff1f\u867d\u7136\u6211\u4eec\u4e4b\u524d\u7684Controller\u786e\u5b9e\u8fd8\u6709\u8fd9\u4e2a\u95ee\u9898", "author": "paderlol", "createdAt": "2020-10-02T06:19:50Z", "path": "naming/src/main/java/com/alibaba/nacos/naming/controllers/InstanceController.java", "diffHunk": "@@ -183,6 +191,123 @@ public String update(HttpServletRequest request) throws Exception {\n         return \"ok\";\n     }\n     \n+    /**\n+     * Batch update instance's metadata. old key exist = update, old key not exist = add.\n+     *\n+     * @param request http request\n+     * @return 'ok' if success\n+     * @throws Exception any error during update\n+     */\n+    @CanDistro\n+    @PutMapping(value = \"/metadata/batch\")\n+    @Secured(parser = NamingResourceParser.class, action = ActionTypes.WRITE)\n+    public ObjectNode batchUpdateInstanceMatadata(HttpServletRequest request) throws Exception {\n+        final String namespaceId = WebUtils\n+                .optional(request, CommonParams.NAMESPACE_ID, Constants.DEFAULT_NAMESPACE_ID);", "originalCommit": "a53eca41c1dbedbd9e34f30103cc32632a2848a0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkyNTYzOQ==", "url": "https://github.com/alibaba/nacos/pull/3912#discussion_r498925639", "bodyText": "\u5355\u72ec\u63d0\u4e00\u4e2apr\u6765\u505a\u8fd9\u4e2a\u4e8b\u60c5\u5427\u3002", "author": "horizonzy", "createdAt": "2020-10-02T16:29:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODYzMzk2OQ=="}], "type": "inlineReview"}, {"oid": "0f83c62e64a334202e6e710983d4a0bf8728b7f2", "url": "https://github.com/alibaba/nacos/commit/0f83c62e64a334202e6e710983d4a0bf8728b7f2", "message": "add instance controller test", "committedDate": "2020-10-07T07:08:55Z", "type": "commit"}, {"oid": "344e3d24a87164659ad6af7eaadb1702ecfcb9e3", "url": "https://github.com/alibaba/nacos/commit/344e3d24a87164659ad6af7eaadb1702ecfcb9e3", "message": "fix code too length", "committedDate": "2020-10-07T14:18:28Z", "type": "commit"}, {"oid": "a2503dd205b48268e8fdf02058480977e5bb5f78", "url": "https://github.com/alibaba/nacos/commit/a2503dd205b48268e8fdf02058480977e5bb5f78", "message": "update the param name", "committedDate": "2020-10-12T16:53:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTExMDM1OQ==", "url": "https://github.com/alibaba/nacos/pull/3912#discussion_r505110359", "bodyText": "Please add @since 1.4.0", "author": "KomachiSion", "createdAt": "2020-10-15T01:24:45Z", "path": "naming/src/main/java/com/alibaba/nacos/naming/controllers/InstanceController.java", "diffHunk": "@@ -183,6 +191,123 @@ public String update(HttpServletRequest request) throws Exception {\n         return \"ok\";\n     }\n     \n+    /**\n+     * Batch update instance's metadata. old key exist = update, old key not exist = add.\n+     *\n+     * @param request http request\n+     * @return 'ok' if success\n+     * @throws Exception any error during update", "originalCommit": "a2503dd205b48268e8fdf02058480977e5bb5f78", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTExMDQzNA==", "url": "https://github.com/alibaba/nacos/pull/3912#discussion_r505110434", "bodyText": "Please add @since 1.4.0", "author": "KomachiSion", "createdAt": "2020-10-15T01:25:00Z", "path": "naming/src/main/java/com/alibaba/nacos/naming/controllers/InstanceController.java", "diffHunk": "@@ -183,6 +191,123 @@ public String update(HttpServletRequest request) throws Exception {\n         return \"ok\";\n     }\n     \n+    /**\n+     * Batch update instance's metadata. old key exist = update, old key not exist = add.\n+     *\n+     * @param request http request\n+     * @return 'ok' if success\n+     * @throws Exception any error during update\n+     */\n+    @CanDistro\n+    @PutMapping(value = \"/metadata/batch\")\n+    @Secured(parser = NamingResourceParser.class, action = ActionTypes.WRITE)\n+    public ObjectNode batchUpdateInstanceMatadata(HttpServletRequest request) throws Exception {\n+        final String namespaceId = WebUtils\n+                .optional(request, CommonParams.NAMESPACE_ID, Constants.DEFAULT_NAMESPACE_ID);\n+        \n+        String serviceName = WebUtils.required(request, CommonParams.SERVICE_NAME);\n+        \n+        String consistencyType = WebUtils.optional(request, \"consistencyType\", StringUtils.EMPTY);\n+        \n+        String instances = WebUtils.optional(request, \"instances\", StringUtils.EMPTY);\n+        \n+        List<Instance> targetInstances = parseBatchInstances(instances);\n+        \n+        String metadata = WebUtils.required(request, \"metadata\");\n+        Map<String, String> targetMetadata = UtilsAndCommons.parseMetadata(metadata);\n+        \n+        List<Instance> operatedInstances = batchOperateMetadata(namespaceId,\n+                buildOperationInfo(serviceName, consistencyType, targetInstances), targetMetadata,\n+                UPDATE_INSTANCE_METADATA_ACTION_UPDATE);\n+        \n+        ObjectNode result = JacksonUtils.createEmptyJsonNode();\n+        ArrayNode ipArray = JacksonUtils.createEmptyArrayNode();\n+        \n+        for (Instance ip : operatedInstances) {\n+            ipArray.add(ip.getDatumKey() + \":\" + (ip.isEphemeral() ? EPHEMERAL : PERSIST));\n+        }\n+        \n+        result.replace(\"updated\", ipArray);\n+        return result;\n+    }\n+    \n+    /**\n+     * Batch delete instance's metadata. old key exist = delete, old key not exist = not operate\n+     *\n+     * @param request http request\n+     * @return 'ok' if success\n+     * @throws Exception any error during update", "originalCommit": "a2503dd205b48268e8fdf02058480977e5bb5f78", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTExMzIyOQ==", "url": "https://github.com/alibaba/nacos/pull/3912#discussion_r505113229", "bodyText": "solve it", "author": "horizonzy", "createdAt": "2020-10-15T01:35:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTExMDQzNA=="}], "type": "inlineReview"}, {"oid": "88e18a3b128ee730f3fb6816b67641840d34e3b3", "url": "https://github.com/alibaba/nacos/commit/88e18a3b128ee730f3fb6816b67641840d34e3b3", "message": "add feature's version of start", "committedDate": "2020-10-15T01:35:05Z", "type": "commit"}]}