{"pr_number": 4137, "pr_title": "[ISSUE-#4115] Refactor client naming event handle logic", "pr_createdAt": "2020-11-04T14:46:16Z", "pr_url": "https://github.com/alibaba/nacos/pull/4137", "timeline": [{"oid": "5c1e51828ede00417bd4bef53205ffcbd87c20ea", "url": "https://github.com/alibaba/nacos/commit/5c1e51828ede00417bd4bef53205ffcbd87c20ea", "message": "refactor and supply api to async handle instances change event", "committedDate": "2020-11-04T08:46:09Z", "type": "commit"}, {"oid": "d216bcca2b78b20d3f51814e8c1e27a57c92fbaa", "url": "https://github.com/alibaba/nacos/commit/d216bcca2b78b20d3f51814e8c1e27a57c92fbaa", "message": "add async handle way to callback event listener", "committedDate": "2020-11-04T14:44:04Z", "type": "commit"}, {"oid": "8b73b06400bf63fd35086e0e6555c0af285d4792", "url": "https://github.com/alibaba/nacos/commit/8b73b06400bf63fd35086e0e6555c0af285d4792", "message": "refactor EventListener, supply getExecutor to handle event async and compatible old version.", "committedDate": "2020-11-05T05:14:30Z", "type": "commit"}, {"oid": "d9e9e9c0659a67049a00539ff5e187d376c4d62a", "url": "https://github.com/alibaba/nacos/commit/d9e9e9c0659a67049a00539ff5e187d376c4d62a", "message": "remove unnecessary code", "committedDate": "2020-11-05T05:20:29Z", "type": "commit"}, {"oid": "c3a1550bf18868abffadf9cd1f087aa8180ede0d", "url": "https://github.com/alibaba/nacos/commit/c3a1550bf18868abffadf9cd1f087aa8180ede0d", "message": "ignore abstract class name check", "committedDate": "2020-11-05T05:43:32Z", "type": "commit"}, {"oid": "94379790c539e6c87684a4072388fa6a3201e650", "url": "https://github.com/alibaba/nacos/commit/94379790c539e6c87684a4072388fa6a3201e650", "message": "fix EmptyLineSeparator", "committedDate": "2020-11-05T06:57:03Z", "type": "commit"}, {"oid": "c730ebf81a271b97ab06c0636ef2df4d42ef5452", "url": "https://github.com/alibaba/nacos/commit/c730ebf81a271b97ab06c0636ef2df4d42ef5452", "message": "remove unuseful import", "committedDate": "2020-11-05T07:09:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzgzMTkwMw==", "url": "https://github.com/alibaba/nacos/pull/4137#discussion_r517831903", "bodyText": "\u8fd9\u91cc\u5efa\u8bae\u4f7f\u7528\u62bd\u8c61\u5b9e\u73b0\u6269\u5c55\u65b9\u5f0f\u6765\u589e\u52a0getExecutor\u65b9\u6cd5\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u628aEventListener \u4fee\u6539\u4e3a\u62bd\u8c61\u7c7b\uff0c\u8fd9\u6837\u4f1a\u5bfc\u81f4\u4e4b\u524d\u7684\u7248\u672c\u51fa\u73b0\u517c\u5bb9\u6027\u95ee\u9898\u3002", "author": "Maijh97", "createdAt": "2020-11-05T07:09:08Z", "path": "api/src/main/java/com/alibaba/nacos/api/naming/listener/EventListener.java", "diffHunk": "@@ -16,17 +16,29 @@\n \n package com.alibaba.nacos.api.naming.listener;\n \n+import java.util.concurrent.Executor;\n+\n /**\n  * Event Listener.\n  *\n  * @author Nacos\n  */\n-public interface EventListener {\n+@SuppressWarnings(\"PMD.AbstractClassShouldStartWithAbstractNamingRule\")\n+public abstract class EventListener {", "originalCommit": "94379790c539e6c87684a4072388fa6a3201e650", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzgzMzIzMQ==", "url": "https://github.com/alibaba/nacos/pull/4137#discussion_r517833231", "bodyText": "\u4e0d\u4f1a,\u8fd9\u6837\u5199\u5c31\u662f\u4e3a\u4e86\u517c\u5bb9\u8001\u7248\u672c\uff0c\u81ea\u5df1\u53bb\u5b9e\u73b0return null\u7684getExecutor\u65b9\u6cd5\u3002sdk\u4f7f\u7528\u65f6\u4e0d\u4f1acare\u662finterface\u8fd8\u662f\u62bd\u8c61\u7c7b\u3002", "author": "horizonzy", "createdAt": "2020-11-05T07:12:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzgzMTkwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzgzNDEzNQ==", "url": "https://github.com/alibaba/nacos/pull/4137#discussion_r517834135", "bodyText": "\u65e7\u7684\u7248\u672c\u662f\u4f7f\u7528\u5b9e\u73b0\u63a5\u53e3\u65b9\u5f0f\u7684\uff0c\u8fd9\u91cc\u5982\u679c\u4fee\u6539\u4e3a\u62bd\u8c61\u7c7b\u4e4b\u540e\uff0c\u7528\u6237\u5347\u7ea7\u7248\u672c\u540e\u4e0d\u9700\u8981\u4fee\u6539\u539f\u6765\u7684\u5b9e\u73b0\u4ee3\u7801\uff1f", "author": "Maijh97", "createdAt": "2020-11-05T07:14:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzgzMTkwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzgzNTcwNg==", "url": "https://github.com/alibaba/nacos/pull/4137#discussion_r517835706", "bodyText": "\u55ef\u3002\u4e0d\u4f1a\u6539\u4ee3\u7801\uff0c\u53ea\u8981\u5305\u540d\u548c\u7c7b\u540d\u6ca1\u6709\u53d8\u5316\u5c31\u884c\u4e86\u3002\u7528\u6237\u8fd8\u662f\u9700\u8981\u81ea\u5df1\u53bb\u5b9e\u73b0onEvent\u65b9\u6cd5\u3002getExecutor\u4e0d\u5b9e\u73b0\u7684\u8bdd\u5c31\u9ed8\u8ba4\u7528\u5355\u7ebf\u7a0b\u5904\u7406\uff0c\u81ea\u5df1\u5b9e\u73b0getExecutor\u7684\u8bdd\uff0c\u5c31\u7528\u81ea\u5df1\u5b9a\u4e49\u7684\u7ebf\u7a0b\u6c60\u53bb\u5904\u7406\u4e8b\u4ef6\u901a\u77e5", "author": "horizonzy", "createdAt": "2020-11-05T07:18:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzgzMTkwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzgzNjI3Ng==", "url": "https://github.com/alibaba/nacos/pull/4137#discussion_r517836276", "bodyText": "\u539f\u672c\u662fimplements\uff0c\u73b0\u5728\u662f\u62bd\u8c61\u7c7b\u7684\u8bdd\uff1f\u4e0d\u9700\u8981\u4fee\u6539\u4ee3\u7801\uff1f", "author": "Maijh97", "createdAt": "2020-11-05T07:20:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzgzMTkwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzgzNzMyMQ==", "url": "https://github.com/alibaba/nacos/pull/4137#discussion_r517837321", "bodyText": "\u55ef\uff0c\u4e86\u89e3\u4e86\u3002\u6211\u53ea\u8003\u8651\u5230\u4e86\u533f\u540d\u7c7b\uff0c\u6ca1\u6709\u8003\u8651\u5230\u7528\u6237\u81ea\u5df1\u53bb\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u5b9e\u73b0\u63a5\u53e3\uff0c\u8fd9\u6837\u786e\u5b9e\u6709\u95ee\u9898\u3002", "author": "horizonzy", "createdAt": "2020-11-05T07:22:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzgzMTkwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzgzOTI2Nw==", "url": "https://github.com/alibaba/nacos/pull/4137#discussion_r517839267", "bodyText": "\u5982\u679c\u4fdd\u6301\u63a5\u53e3\u7684\u8bdd\uff0c\u60f3\u589e\u52a0\u4e00\u4e2a\u65b9\u6cd5\uff0c\u7528\u6237\u4ee3\u7801\u4e5f\u9700\u8981\u6539\u3002\u9664\u975e\u6211\u4eec\u75281.8\u7684\u7279\u6027\uff0c\u81ea\u5df1\u5b9e\u73b0\u63a5\u53e3\u91cc\u9762\u7684\u65b9\u6cd5\uff0c\u4e0d\u8fc7\u8fd9\u8981\u6c42nacos-client\u7684jre\u7248\u672c\u8981\u6c421.8\u4ee5\u4e0a\u4e86", "author": "horizonzy", "createdAt": "2020-11-05T07:27:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzgzMTkwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg0MTQ2NA==", "url": "https://github.com/alibaba/nacos/pull/4137#discussion_r517841464", "bodyText": "\u8fd9\u91cc\u611f\u89c9\u53ef\u4ee5\u50cfconfig-client\u90a3\u8fb9\u5b9e\u73b0\u4e00\u6837\uff0c \u6bd4\u5982\u521b\u5efa\u4e00\u4e2aAbstractEventListener \u53bb\u5b9e\u73b0\u539f\u672cEventListener \uff0c\u5728AbstractEventListener \u8865\u5145getExecutor\u65b9\u6cd5\uff0c\u7248\u672c\u5347\u7ea7\u4e4b\u540e\uff0c\u8865\u5145\u4e00\u4e0b\u6587\u6863\uff0c\u540e\u9762\u7531\u7528\u6237\u81ea\u884c\u51b3\u5b9a\u662f\u5426\u9700\u8981\u4f7f\u7528\u65b0\u7684\u5b9e\u73b0\u65b9\u5f0f", "author": "Maijh97", "createdAt": "2020-11-05T07:32:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzgzMTkwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg0Mzg1OA==", "url": "https://github.com/alibaba/nacos/pull/4137#discussion_r517843858", "bodyText": "agree", "author": "horizonzy", "createdAt": "2020-11-05T07:38:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzgzMTkwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg0NjQ3OQ==", "url": "https://github.com/alibaba/nacos/pull/4137#discussion_r517846479", "bodyText": "\u5148\u8fd9\u6837\u5427\uff0c\u5173\u4e8e\u5f02\u6b65\u5904\u7406event\u4e8b\u4ef6\u4e0b\u4e00\u4e2apr\u6765\u3002\u8fd9\u4e2apr\u6682\u65f6\u53ea\u662f\u91cd\u6784\uff0c\u7edf\u4e00\u4ee3\u7801", "author": "horizonzy", "createdAt": "2020-11-05T07:44:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzgzMTkwMw=="}], "type": "inlineReview"}, {"oid": "5cbbfcc25f9fb18d40825e57f3fd7da48a58b681", "url": "https://github.com/alibaba/nacos/commit/5cbbfcc25f9fb18d40825e57f3fd7da48a58b681", "message": "compatible old client sdk, add abstractEventListener to support async handle naming event.", "committedDate": "2020-11-05T08:23:10Z", "type": "commit"}, {"oid": "4bc66da924ed69e2963aed1d54de1caa1c3b4b99", "url": "https://github.com/alibaba/nacos/commit/4bc66da924ed69e2963aed1d54de1caa1c3b4b99", "message": "remove unuseful import", "committedDate": "2020-11-05T08:39:46Z", "type": "commit"}, {"oid": "ca30c11322e187a775aa6418a775c066db2b5d0c", "url": "https://github.com/alibaba/nacos/commit/ca30c11322e187a775aa6418a775c066db2b5d0c", "message": "refactor InstanceChangeListener. decouple AbstractEventListener's executor and InstanceChangeListener's executor", "committedDate": "2020-11-06T06:09:01Z", "type": "commit"}, {"oid": "86485e4337de146b9e8efa44e29e7ff1f9a73c25", "url": "https://github.com/alibaba/nacos/commit/86485e4337de146b9e8efa44e29e7ff1f9a73c25", "message": "1.remove key if listeners is empty.\n2.fix getSubscribeServices", "committedDate": "2020-11-06T10:52:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU4NzUyNA==", "url": "https://github.com/alibaba/nacos/pull/4137#discussion_r518587524", "bodyText": "public Executor getExecutor() {\n    return null;\n}", "author": "chuntaojun", "createdAt": "2020-11-06T08:17:21Z", "path": "api/src/main/java/com/alibaba/nacos/api/naming/listener/AbstractEventListener.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.api.naming.listener;\n+\n+import java.util.concurrent.Executor;\n+\n+/**\n+ * Abstract event listener, to support handle event by user custom executor.\n+ *\n+ * @author horizonzy\n+ * @since 1.4.0\n+ */\n+public abstract class AbstractEventListener implements EventListener {\n+    \n+    /**\n+     * Get executor for execute this receive.\n+     *\n+     * @return Executor\n+     */\n+    public abstract Executor getExecutor();", "originalCommit": "ca30c11322e187a775aa6418a775c066db2b5d0c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE3NTA1NQ==", "url": "https://github.com/alibaba/nacos/pull/4137#discussion_r519175055", "bodyText": "why you add this @SuppressWarnings", "author": "chuntaojun", "createdAt": "2020-11-07T12:57:34Z", "path": "client/src/main/java/com/alibaba/nacos/client/naming/core/HostReactor.java", "diffHunk": "@@ -404,6 +441,7 @@ private void resetFailCount() {\n             failCount = 0;\n         }\n         \n+        @SuppressWarnings(\"checkstyle:EmptyLineSeparator\")", "originalCommit": "86485e4337de146b9e8efa44e29e7ff1f9a73c25", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE3NTA3OQ==", "url": "https://github.com/alibaba/nacos/pull/4137#discussion_r519175079", "bodyText": "Properties within an event should be immutable", "author": "chuntaojun", "createdAt": "2020-11-07T12:58:09Z", "path": "client/src/main/java/com/alibaba/nacos/client/naming/event/InstancesChangeEvent.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.client.naming.event;\n+\n+import com.alibaba.nacos.api.naming.pojo.Instance;\n+import com.alibaba.nacos.common.notify.Event;\n+\n+import java.util.List;\n+\n+/**\n+ * Instances change event.\n+ *\n+ * @author horizonzy\n+ * @since 1.4.0\n+ */\n+public class InstancesChangeEvent extends Event {", "originalCommit": "86485e4337de146b9e8efa44e29e7ff1f9a73c25", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE3NTI0Mg==", "url": "https://github.com/alibaba/nacos/pull/4137#discussion_r519175242", "bodyText": "Boolean => boolean", "author": "chuntaojun", "createdAt": "2020-11-07T12:59:47Z", "path": "client/src/main/java/com/alibaba/nacos/client/naming/event/InstancesChangeNotifier.java", "diffHunk": "@@ -0,0 +1,148 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.client.naming.event;\n+\n+import com.alibaba.nacos.api.common.Constants;\n+import com.alibaba.nacos.api.naming.listener.AbstractEventListener;\n+import com.alibaba.nacos.api.naming.listener.EventListener;\n+import com.alibaba.nacos.api.naming.listener.NamingEvent;\n+import com.alibaba.nacos.api.naming.pojo.ServiceInfo;\n+import com.alibaba.nacos.common.notify.Event;\n+import com.alibaba.nacos.common.notify.listener.Subscriber;\n+import com.alibaba.nacos.common.utils.CollectionUtils;\n+import com.alibaba.nacos.common.utils.ConcurrentHashSet;\n+import com.alibaba.nacos.common.utils.StringUtils;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+/**\n+ * A subscriber to notify eventListener callback.\n+ *\n+ * @author horizonzy\n+ * @since 1.4.0\n+ */\n+public class InstancesChangeNotifier extends Subscriber<InstancesChangeEvent> {\n+    \n+    private final Map<String, ConcurrentHashSet<EventListener>> listenerMap = new ConcurrentHashMap<String, ConcurrentHashSet<EventListener>>();\n+    \n+    private final Object lock = new Object();\n+    \n+    /**\n+     * register listener.\n+     *\n+     * @param serviceName combineServiceName, such as 'xxx@@xxx'\n+     * @param clusters    clusters, concat by ','. such as 'xxx,yyy'\n+     * @param listener    custom listener\n+     */\n+    public void registerListener(String serviceName, String clusters, EventListener listener) {\n+        String key = combineListenKey(serviceName, clusters);\n+        ConcurrentHashSet<EventListener> eventListeners = listenerMap.get(key);\n+        if (eventListeners == null) {\n+            synchronized (lock) {\n+                eventListeners = listenerMap.get(key);\n+                if (eventListeners == null) {\n+                    eventListeners = new ConcurrentHashSet<EventListener>();\n+                    listenerMap.put(key, eventListeners);\n+                }\n+            }\n+        }\n+        eventListeners.add(listener);\n+    }\n+    \n+    /**\n+     * deregister listener.\n+     *\n+     * @param serviceName combineServiceName, such as 'xxx@@xxx'\n+     * @param clusters    clusters, concat by ','. such as 'xxx,yyy'\n+     * @param listener    custom listener\n+     */\n+    public void deregisterListener(String serviceName, String clusters, EventListener listener) {\n+        String key = combineListenKey(serviceName, clusters);\n+        ConcurrentHashSet<EventListener> eventListeners = listenerMap.get(key);\n+        if (eventListeners == null) {\n+            return;\n+        }\n+        eventListeners.remove(listener);\n+        if (CollectionUtils.isEmpty(eventListeners)) {\n+            listenerMap.remove(key);\n+        }\n+    }\n+    \n+    /**\n+     * check serviceName,clusters is subscribed.\n+     *\n+     * @param serviceName combineServiceName, such as 'xxx@@xxx'\n+     * @param clusters    clusters, concat by ','. such as 'xxx,yyy'\n+     * @return is serviceName,clusters subscribed\n+     */\n+    public Boolean isSubscribed(String serviceName, String clusters) {", "originalCommit": "86485e4337de146b9e8efa44e29e7ff1f9a73c25", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "77082af0a4c80da20c5b1e7ccdfb3b6b77b6eaff", "url": "https://github.com/alibaba/nacos/commit/77082af0a4c80da20c5b1e7ccdfb3b6b77b6eaff", "message": "revert notify center code", "committedDate": "2020-11-07T13:15:48Z", "type": "commit"}, {"oid": "b7325f696d602530bfd89f7099e42c2ac1ab64b9", "url": "https://github.com/alibaba/nacos/commit/b7325f696d602530bfd89f7099e42c2ac1ab64b9", "message": "code quality enhance", "committedDate": "2020-11-07T13:32:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTUyNzAxNQ==", "url": "https://github.com/alibaba/nacos/pull/4137#discussion_r519527015", "bodyText": "Should we abstract this method to EvenListener?", "author": "KomachiSion", "createdAt": "2020-11-09T02:54:10Z", "path": "api/src/main/java/com/alibaba/nacos/api/naming/listener/AbstractEventListener.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.api.naming.listener;\n+\n+import java.util.concurrent.Executor;\n+\n+/**\n+ * Abstract event listener, to support handle event by user custom executor.\n+ *\n+ * @author horizonzy\n+ * @since 1.4.0\n+ */\n+public abstract class AbstractEventListener implements EventListener {\n+    \n+    /**\n+     * Get executor for execute this receive.\n+     *\n+     * @return Executor\n+     */\n+    public Executor getExecutor() {", "originalCommit": "b7325f696d602530bfd89f7099e42c2ac1ab64b9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTUyODI0OQ==", "url": "https://github.com/alibaba/nacos/pull/4137#discussion_r519528249", "bodyText": "Afraid not. If we do this, when user upgrade nacos-client, they need modify code.", "author": "horizonzy", "createdAt": "2020-11-09T02:59:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTUyNzAxNQ=="}], "type": "inlineReview"}, {"oid": "15ee1f8730bea671819761568e8f94303e18de75", "url": "https://github.com/alibaba/nacos/commit/15ee1f8730bea671819761568e8f94303e18de75", "message": "upgrade @since 1.4.0 -> 1.4.1", "committedDate": "2020-11-10T08:24:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDU4MzI1OQ==", "url": "https://github.com/alibaba/nacos/pull/4137#discussion_r520583259", "bodyText": "Why abstract this method?\nI understand the design of publisher should shutdown the subscriber.\n@zongtanghu @chuntaojun What do you think about at that time?", "author": "KomachiSion", "createdAt": "2020-11-10T14:00:59Z", "path": "common/src/main/java/com/alibaba/nacos/common/notify/EventPublisher.java", "diffHunk": "@@ -71,4 +73,12 @@\n      * @param event      {@link Event}\n      */\n     void notifySubscriber(Subscriber subscriber, Event event);\n-}\n\\ No newline at end of file\n+    \n+    /**\n+     * Get current Subscribers.\n+     *\n+     * @return subscribers\n+     */\n+    Set<Subscriber> getSubscribers();", "originalCommit": "15ee1f8730bea671819761568e8f94303e18de75", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTA4NTczNQ==", "url": "https://github.com/alibaba/nacos/pull/4137#discussion_r521085735", "bodyText": "\u8fd9\u4e2a\u65b9\u6cd5\u4e0d\u5e94\u8be5\u5bf9\u5916\u66b4\u9732", "author": "chuntaojun", "createdAt": "2020-11-11T03:33:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDU4MzI1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDk5NjIyNw==", "url": "https://github.com/alibaba/nacos/pull/4137#discussion_r520996227", "bodyText": "\u8fd9\u91cc\u53ef\u4ee5\u4f7f\u7528ServiceInfo#getKey()\u65b9\u6cd5\u66ff\u6362\u3002", "author": "Maijh97", "createdAt": "2020-11-11T01:30:50Z", "path": "client/src/main/java/com/alibaba/nacos/client/naming/event/InstancesChangeNotifier.java", "diffHunk": "@@ -0,0 +1,148 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.client.naming.event;\n+\n+import com.alibaba.nacos.api.common.Constants;\n+import com.alibaba.nacos.api.naming.listener.AbstractEventListener;\n+import com.alibaba.nacos.api.naming.listener.EventListener;\n+import com.alibaba.nacos.api.naming.listener.NamingEvent;\n+import com.alibaba.nacos.api.naming.pojo.ServiceInfo;\n+import com.alibaba.nacos.common.notify.Event;\n+import com.alibaba.nacos.common.notify.listener.Subscriber;\n+import com.alibaba.nacos.common.utils.CollectionUtils;\n+import com.alibaba.nacos.common.utils.ConcurrentHashSet;\n+import com.alibaba.nacos.common.utils.StringUtils;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+/**\n+ * A subscriber to notify eventListener callback.\n+ *\n+ * @author horizonzy\n+ * @since 1.4.1\n+ */\n+public class InstancesChangeNotifier extends Subscriber<InstancesChangeEvent> {\n+    \n+    private final Map<String, ConcurrentHashSet<EventListener>> listenerMap = new ConcurrentHashMap<String, ConcurrentHashSet<EventListener>>();\n+    \n+    private final Object lock = new Object();\n+    \n+    /**\n+     * register listener.\n+     *\n+     * @param serviceName combineServiceName, such as 'xxx@@xxx'\n+     * @param clusters    clusters, concat by ','. such as 'xxx,yyy'\n+     * @param listener    custom listener\n+     */\n+    public void registerListener(String serviceName, String clusters, EventListener listener) {\n+        String key = combineListenKey(serviceName, clusters);\n+        ConcurrentHashSet<EventListener> eventListeners = listenerMap.get(key);\n+        if (eventListeners == null) {\n+            synchronized (lock) {\n+                eventListeners = listenerMap.get(key);\n+                if (eventListeners == null) {\n+                    eventListeners = new ConcurrentHashSet<EventListener>();\n+                    listenerMap.put(key, eventListeners);\n+                }\n+            }\n+        }\n+        eventListeners.add(listener);\n+    }\n+    \n+    /**\n+     * deregister listener.\n+     *\n+     * @param serviceName combineServiceName, such as 'xxx@@xxx'\n+     * @param clusters    clusters, concat by ','. such as 'xxx,yyy'\n+     * @param listener    custom listener\n+     */\n+    public void deregisterListener(String serviceName, String clusters, EventListener listener) {\n+        String key = combineListenKey(serviceName, clusters);\n+        ConcurrentHashSet<EventListener> eventListeners = listenerMap.get(key);\n+        if (eventListeners == null) {\n+            return;\n+        }\n+        eventListeners.remove(listener);\n+        if (CollectionUtils.isEmpty(eventListeners)) {\n+            listenerMap.remove(key);\n+        }\n+    }\n+    \n+    /**\n+     * check serviceName,clusters is subscribed.\n+     *\n+     * @param serviceName combineServiceName, such as 'xxx@@xxx'\n+     * @param clusters    clusters, concat by ','. such as 'xxx,yyy'\n+     * @return is serviceName,clusters subscribed\n+     */\n+    public boolean isSubscribed(String serviceName, String clusters) {\n+        String key = combineListenKey(serviceName, clusters);\n+        ConcurrentHashSet<EventListener> eventListeners = listenerMap.get(key);\n+        return CollectionUtils.isNotEmpty(eventListeners);\n+    }\n+    \n+    public List<ServiceInfo> getSubscribeServices() {\n+        List<ServiceInfo> serviceInfos = new ArrayList<ServiceInfo>();\n+        for (String key : listenerMap.keySet()) {\n+            serviceInfos.add(ServiceInfo.fromKey(key));\n+        }\n+        return serviceInfos;\n+    }\n+    \n+    @Override\n+    public void onEvent(InstancesChangeEvent event) {\n+        String key = combineListenKey(event.getServiceName(), event.getClusters());\n+        ConcurrentHashSet<EventListener> eventListeners = listenerMap.get(key);\n+        if (CollectionUtils.isEmpty(eventListeners)) {\n+            return;\n+        }\n+        for (final EventListener listener : eventListeners) {\n+            final com.alibaba.nacos.api.naming.listener.Event namingEvent = transferToNamingEvent(event);\n+            if (listener instanceof AbstractEventListener && ((AbstractEventListener) listener).getExecutor() != null) {\n+                ((AbstractEventListener) listener).getExecutor().execute(new Runnable() {\n+                    @Override\n+                    public void run() {\n+                        listener.onEvent(namingEvent);\n+                    }\n+                });\n+                continue;\n+            }\n+            listener.onEvent(namingEvent);\n+        }\n+    }\n+    \n+    private com.alibaba.nacos.api.naming.listener.Event transferToNamingEvent(\n+            InstancesChangeEvent instancesChangeEvent) {\n+        return new NamingEvent(instancesChangeEvent.getServiceName(), instancesChangeEvent.getGroupName(),\n+                instancesChangeEvent.getClusters(), instancesChangeEvent.getHosts());\n+    }\n+    \n+    @Override\n+    public Class<? extends Event> subscribeType() {\n+        return InstancesChangeEvent.class;\n+    }\n+    \n+    private String combineListenKey(String serviceName, String clusters) {\n+        if (!StringUtils.isEmpty(clusters)) {\n+            return serviceName + Constants.SERVICE_INFO_SPLITER + clusters;\n+        }\n+        return serviceName;\n+    }", "originalCommit": "15ee1f8730bea671819761568e8f94303e18de75", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTAwMjYyNw==", "url": "https://github.com/alibaba/nacos/pull/4137#discussion_r521002627", "bodyText": "\u867d\u7136\u903b\u8f91\u662f\u4e00\u6837\uff0c\u6211\u89c9\u5f97\u8fd9\u91cc\u7528getKey\u53cd\u800c\u6ca1\u6709\u81ea\u5df1\u5199\u7684\u597d\uff0c\u8fd9\u91cc\u7684key\u662f\u81ea\u5df1\u5b9a\u4e49\u7684\uff0c\u4e0d\u4e00\u5b9a\u8981\u4f9d\u8d56ServiceInfo\u91cc\u9762\u7684\u3002", "author": "horizonzy", "createdAt": "2020-11-11T01:40:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDk5NjIyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTAwNTc2OA==", "url": "https://github.com/alibaba/nacos/pull/4137#discussion_r521005768", "bodyText": "\u66f4\u6b63\u4e00\u4e0b\uff0c\u9700\u8981\u66ff\u6362\uff0c\u540e\u7eed\u63d0\u4f9b\u4e86getSubscribeServices()\u65b9\u6cd5\uff0c\u91cc\u9762\u7528\u5230\u4e86ServiceInfo.fromKey();\u8fd9\u91cc\u9700\u8981\u66ff\u6362\u3002", "author": "horizonzy", "createdAt": "2020-11-11T01:44:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDk5NjIyNw=="}], "type": "inlineReview"}, {"oid": "dfc544dcb591b3f2dc625eba51d28091aa403c3a", "url": "https://github.com/alibaba/nacos/commit/dfc544dcb591b3f2dc625eba51d28091aa403c3a", "message": "change combineListenKey to ServiceInfo.getKey", "committedDate": "2020-11-11T01:46:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQyNzI2OQ==", "url": "https://github.com/alibaba/nacos/pull/4137#discussion_r520427269", "bodyText": "This is not at the instance level, so do not close shutdown at the instance level", "author": "chuntaojun", "createdAt": "2020-11-10T09:49:04Z", "path": "client/src/main/java/com/alibaba/nacos/client/naming/core/HostReactor.java", "diffHunk": "@@ -371,6 +407,7 @@ public void shutdown() throws NacosException {\n         ThreadUtils.shutdownThreadPool(executor, NAMING_LOGGER);\n         pushReceiver.shutdown();\n         failoverReactor.shutdown();\n+        NotifyCenter.shutdown();", "originalCommit": "15ee1f8730bea671819761568e8f94303e18de75", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "dbbe51c2b61524613f4e0d143a313c6e8b886404", "url": "https://github.com/alibaba/nacos/commit/dbbe51c2b61524613f4e0d143a313c6e8b886404", "message": "just deregisterSubscriber when hostReactor shutdown", "committedDate": "2020-11-11T03:35:47Z", "type": "commit"}, {"oid": "479dbd9e9e2e8758b3032e7d1c8095353f0fe86c", "url": "https://github.com/alibaba/nacos/commit/479dbd9e9e2e8758b3032e7d1c8095353f0fe86c", "message": "not export getSubscribers()", "committedDate": "2020-11-11T03:37:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjExNzI0MA==", "url": "https://github.com/alibaba/nacos/pull/4137#discussion_r522117240", "bodyText": "notifier = new InstancesChangeNotifier(); => this.notifier = new InstancesChangeNotifier();", "author": "chuntaojun", "createdAt": "2020-11-12T13:48:08Z", "path": "client/src/main/java/com/alibaba/nacos/client/naming/core/HostReactor.java", "diffHunk": "@@ -108,6 +111,10 @@ public Thread newThread(Runnable r) {\n         this.updatingMap = new ConcurrentHashMap<String, Object>();\n         this.failoverReactor = new FailoverReactor(this, cacheDir);\n         this.pushReceiver = new PushReceiver(this);\n+        \n+        NotifyCenter.registerToPublisher(InstancesChangeEvent.class, 16384);\n+        notifier = new InstancesChangeNotifier();", "originalCommit": "479dbd9e9e2e8758b3032e7d1c8095353f0fe86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjEzMDAzNg==", "url": "https://github.com/alibaba/nacos/pull/4137#discussion_r522130036", "bodyText": "really careful", "author": "horizonzy", "createdAt": "2020-11-12T14:06:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjExNzI0MA=="}], "type": "inlineReview"}, {"oid": "3334c5bb8be29ec324f74c2cc7c3ef225901135b", "url": "https://github.com/alibaba/nacos/commit/3334c5bb8be29ec324f74c2cc7c3ef225901135b", "message": "add this key word, and move code place.", "committedDate": "2020-11-12T14:05:03Z", "type": "commit"}]}