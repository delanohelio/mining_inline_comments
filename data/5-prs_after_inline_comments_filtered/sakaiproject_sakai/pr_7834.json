{"pr_number": 7834, "pr_title": "SAK-43113 Clean up ItemGradingData in Samigo", "pr_createdAt": "2020-01-31T12:51:56Z", "pr_url": "https://github.com/sakaiproject/sakai/pull/7834", "timeline": [{"oid": "e9fdd0b95100c543654910f9c0133b9ddb950af1", "url": "https://github.com/sakaiproject/sakai/commit/e9fdd0b95100c543654910f9c0133b9ddb950af1", "message": "SAK-43113 Clean up ItemGradingData in Samigo\n\nhttps://jira.sakaiproject.org/browse/SAK-43113", "committedDate": "2020-01-31T12:53:07Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyODUyMQ==", "url": "https://github.com/sakaiproject/sakai/pull/7834#discussion_r373628521", "bodyText": "I think the equals and hashcode are incorrect and need to better identify equality.", "author": "ern", "createdAt": "2020-01-31T18:46:03Z", "path": "samigo/samigo-api/src/java/org/sakaiproject/tool/assessment/data/dao/grading/ItemGradingData.java", "diffHunk": "@@ -21,299 +21,53 @@\n \n package org.sakaiproject.tool.assessment.data.dao.grading;\n \n-import java.util.ArrayList;\n import java.util.Date;\n import java.util.HashSet;\n-import java.util.Iterator;\n import java.util.List;\n import java.util.Set;\n \n-import org.apache.commons.lang3.builder.EqualsBuilder;\n-import org.apache.commons.lang3.builder.HashCodeBuilder;\n-import lombok.extern.slf4j.Slf4j;\n+import lombok.EqualsAndHashCode;\n+import lombok.Getter;\n+import lombok.Setter;\n \n /**\n  * A response to a specific question and its associated data\n- * \n- * \n  */\n-@Slf4j\n+@Getter\n+@Setter\n+@EqualsAndHashCode", "originalCommit": "e9fdd0b95100c543654910f9c0133b9ddb950af1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYzNDI1Ng==", "url": "https://github.com/sakaiproject/sakai/pull/7834#discussion_r373634256", "bodyText": "Why? No point doing the call to super - it's just Object, unless you're saying there's a proxy we need to account for? Calling super on an AOP generated proxy.", "author": "adrianfish", "createdAt": "2020-01-31T18:59:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyODUyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYzNDQ2NA==", "url": "https://github.com/sakaiproject/sakai/pull/7834#discussion_r373634464", "bodyText": "Do you mean the original code was bad, too?", "author": "adrianfish", "createdAt": "2020-01-31T18:59:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyODUyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU1NTQ2Mw==", "url": "https://github.com/sakaiproject/sakai/pull/7834#discussion_r375555463", "bodyText": "When you add lombok annotation it will use every non transient, non static fields in the equals and hashcode implementation. The version you replaced didn't use every field in the equals and hashcode implementation which is why I mention this.\nYou likely need to look at using:\n@EqualsAndHashCode.Include or @EqualsAndHashCode.Exclude", "author": "ern", "createdAt": "2020-02-05T22:57:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyODUyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU3ODMwNQ==", "url": "https://github.com/sakaiproject/sakai/pull/7834#discussion_r377578305", "bodyText": "Fixed it. Took the list out.", "author": "adrianfish", "createdAt": "2020-02-11T11:28:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyODUyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA4MDg4MA==", "url": "https://github.com/sakaiproject/sakai/pull/7834#discussion_r382080880", "bodyText": "Missing a Generic on mediaArray", "author": "ern", "createdAt": "2020-02-20T15:39:46Z", "path": "samigo/samigo-api/src/java/org/sakaiproject/tool/assessment/data/dao/grading/ItemGradingData.java", "diffHunk": "@@ -21,299 +21,53 @@\n \n package org.sakaiproject.tool.assessment.data.dao.grading;\n \n-import java.util.ArrayList;\n import java.util.Date;\n import java.util.HashSet;\n-import java.util.Iterator;\n import java.util.List;\n import java.util.Set;\n \n-import org.apache.commons.lang3.builder.EqualsBuilder;\n-import org.apache.commons.lang3.builder.HashCodeBuilder;\n-import lombok.extern.slf4j.Slf4j;\n+import lombok.EqualsAndHashCode;\n+import lombok.Getter;\n+import lombok.Setter;\n \n /**\n  * A response to a specific question and its associated data\n- * \n- * \n  */\n-@Slf4j\n+@Getter\n+@Setter\n+@EqualsAndHashCode\n public class ItemGradingData implements java.io.Serializable {\n \n-\tprivate static final long serialVersionUID = 7526471155622776147L;\n-\tprivate Long itemGradingId;\n-\tprivate Long assessmentGradingId;\n-\tprivate Long publishedItemId;\n-\tprivate Long publishedItemTextId;\n-\tprivate String agentId;\n-\tprivate Long publishedAnswerId;\n-\tprivate String rationale;\n-\tprivate String answerText;\n-\tprivate Date submittedDate;\n-\tprivate Double autoScore;\n-\tprivate Double overrideScore;\n-\tprivate String comments;\n-\tprivate String gradedBy;\n-\tprivate Date gradedDate;\n-\tprivate Boolean review;\n-\t// these two properties are used by audio question in Samigo 2.2\n-\tprivate Integer attemptsRemaining;\n-\tprivate String lastDuration;\n-\tprivate Boolean isCorrect;\n-\tprivate List mediaArray;\n-\tprivate Set<ItemGradingAttachment> itemGradingAttachmentSet = new HashSet<>();\n-\n-\tpublic ItemGradingData() {\n-\t}\n-\n-\tpublic ItemGradingData(Long itemGradingId, Long assessmentGradingId) {\n-\t\tthis.itemGradingId = itemGradingId;\n-\t\tthis.assessmentGradingId = assessmentGradingId;\n-\t}\n-\n-\tpublic Long getItemGradingId() {\n-\t\treturn itemGradingId;\n-\t}\n-\n-\tpublic void setItemGradingId(Long itemGradingId) {\n-\t\tthis.itemGradingId = itemGradingId;\n-\t}\n-\n-\tpublic Long getPublishedItemId() {\n-\t\treturn publishedItemId;\n-\t}\n-\n-\tpublic void setPublishedItemId(Long publishedItemId) {\n-\t\tthis.publishedItemId = publishedItemId;\n-\t}\n-\n-\tpublic Long getPublishedItemTextId() {\n-\t\treturn publishedItemTextId;\n-\t}\n-\n-\tpublic void setPublishedItemTextId(Long publishedItemTextId) {\n-\t\tthis.publishedItemTextId = publishedItemTextId;\n-\t}\n-\n-\tpublic Long getAssessmentGradingId() {\n-\t\treturn assessmentGradingId;\n-\t}\n-\n-\tpublic void setAssessmentGradingId(Long assessmentGradingId) {\n-\t\tthis.assessmentGradingId = assessmentGradingId;\n-\t}\n-\n-\tpublic String getAgentId() {\n-\t\treturn agentId;\n-\t}\n-\n-\tpublic void setAgentId(String agentId) {\n-\t\tthis.agentId = agentId;\n-\t}\n-\n-\tpublic Long getPublishedAnswerId() {\n-\t\treturn publishedAnswerId;\n-\t}\n-\n-\tpublic void setPublishedAnswerId(Long publishedAnswerId) {\n-\t\tthis.publishedAnswerId = publishedAnswerId;\n-\t}\n-\n-\tpublic String getRationale() {\n-\t\treturn rationale;\n-\t}\n-\n-\tpublic void setRationale(String rationale) {\n-\t\tthis.rationale = rationale;\n-\t}\n-\n-\tpublic String getAnswerText() {\n-\t\treturn answerText;\n-\t}\n-\n-\tpublic void setAnswerText(String answerText) {\n-\t\tthis.answerText = answerText;\n-\t}\n-\n-\tpublic Date getSubmittedDate() {\n-\t\treturn submittedDate;\n-\t}\n-\n-\tpublic void setSubmittedDate(Date submittedDate) {\n-\t\tthis.submittedDate = submittedDate;\n-\t}\n-\n-\tpublic Double getAutoScore() {\n-\t\treturn autoScore;\n-\t}\n-\n-\tpublic void setAutoScore(Double autoScore) {\n-\t\tthis.autoScore = autoScore;\n-\t}\n-\n-\tpublic Double getOverrideScore() {\n-\t\treturn overrideScore;\n-\t}\n-\n-\tpublic void setOverrideScore(Double overrideScore) {\n-\t\tthis.overrideScore = overrideScore;\n-\t}\n-\n-\tpublic String getComments() {\n-\t\treturn comments;\n-\t}\n-\n-\tpublic void setComments(String comments) {\n-\t\tthis.comments = comments;\n-\t}\n-\n-\tpublic String getGradedBy() {\n-\t\treturn gradedBy;\n-\t}\n-\n-\tpublic void setGradedBy(String gradedBy) {\n-\t\tthis.gradedBy = gradedBy;\n-\t}\n-\n-\tpublic Date getGradedDate() {\n-\t\treturn gradedDate;\n-\t}\n-\n-\tpublic void setGradedDate(Date gradedDate) {\n-\t\tthis.gradedDate = gradedDate;\n-\t}\n-\n-\tpublic Boolean getReview() {\n-\t\treturn review;\n-\t}\n-\n-\tpublic void setReview(Boolean newReview) {\n-\t\treview = newReview;\n-\t}\n-\n-\tpublic Integer getAttemptsRemaining() {\n-\t\treturn attemptsRemaining;\n-\t}\n-\n-\tpublic void setAttemptsRemaining(Integer attemptsRemaining) {\n-\t\tthis.attemptsRemaining = attemptsRemaining;\n-\t}\n-\n-\tpublic String getLastDuration() {\n-\t\treturn lastDuration;\n-\t}\n-\n-\tpublic void setLastDuration(String lastDuration) {\n-\t\tthis.lastDuration = lastDuration;\n-\t}\n-\t\n-\tpublic Boolean getIsCorrect() {\n-\t\treturn isCorrect;\n-\t}\n-\n-\tpublic void setIsCorrect(Boolean isCorrect) {\n-\t\tthis.isCorrect = isCorrect;\n-\t}\n-\n-\tpublic List getMediaArray() {\n-\t\treturn mediaArray;\n-\t}\n-\n-\tpublic void setMediaArray(List mediaArray) {\n-\t\tthis.mediaArray = mediaArray;\n-\t}\n-\n-\tpublic int getMediaSize() {\n-\t\treturn mediaArray.size();\n-\t}\n-\n-\tpublic Set<ItemGradingAttachment> getItemGradingAttachmentSet() {\n-\t\treturn itemGradingAttachmentSet;\n-\t}\n-\n-\tpublic void setItemGradingAttachmentSet(\n-\t\t\tSet<ItemGradingAttachment> itemGradingAttachmentSet) {\n-\t\tthis.itemGradingAttachmentSet = itemGradingAttachmentSet;\n-\t}\n-\n-\tpublic List<ItemGradingAttachment> getItemGradingAttachmentList() {\n-\t\tList<ItemGradingAttachment> list = new ArrayList<ItemGradingAttachment>();\n-\t\tif (itemGradingAttachmentSet != null) {\n-\t\t\tIterator<ItemGradingAttachment> iter = itemGradingAttachmentSet\n-\t\t\t\t\t.iterator();\n-\t\t\twhile (iter.hasNext()) {\n-\t\t\t\tItemGradingAttachment a = (ItemGradingAttachment) iter.next();\n-\t\t\t\tlist.add(a);\n-\t\t\t}\n-\t\t}\n-\t\treturn list;\n-\t}\n-\n-\tpublic void setItemGradingAttachmentList(\n-\t\t\tList<ItemGradingAttachment> itemGradingAttachmentList) {\n-\t\tSet<ItemGradingAttachment> itemGradingAttachmentSet = new HashSet<ItemGradingAttachment>(itemGradingAttachmentList);\n-\t\tthis.itemGradingAttachmentSet = itemGradingAttachmentSet;\n-\t}\n-\n-\t@Override\n-\tpublic int hashCode() {\n-\t    HashCodeBuilder builder = new HashCodeBuilder(1,31);\n-\t    builder.append(agentId);\n-\t    builder.append(answerText);\n-\t    builder.append(assessmentGradingId);\n-\t    builder.append(attemptsRemaining);\n-\t    builder.append(autoScore);\n-\t    builder.append(comments);\n-\t    builder.append(gradedBy);\n-\t    builder.append(gradedDate);\n-\t    builder.append(itemGradingId);\n-\t    builder.append(isCorrect);\n-\t    builder.append(lastDuration);\n-\t    builder.append(mediaArray);\n-\t    builder.append(overrideScore);\n-\t    builder.append(publishedAnswerId);\n-\t    builder.append(publishedItemId);\n-\t    builder.append(publishedItemTextId);\n-\t    builder.append(rationale);\n-\t    builder.append(review);\n-\t    builder.append(submittedDate);\n-\t    if (log.isDebugEnabled()) {\n-\t        log.debug(\"Hashcode for Published Answer \" + publishedAnswerId + \" is \" + builder.toHashCode());\n-\t    }\n-\t\treturn builder.toHashCode();\n-\t}\n-\n-\t@Override\n-\tpublic boolean equals(Object obj) {\n-\t\tif (this == obj)\n-\t\t\treturn true;\n-\t\tif (obj == null)\n-\t\t\treturn false;\n-\t\tif (getClass() != obj.getClass())\n-\t\t\treturn false;\n-\n-\t\tItemGradingData other = (ItemGradingData) obj;\n-\t\tEqualsBuilder builder = new EqualsBuilder();\n-\t\tbuilder.appendSuper(super.equals(obj));\n-\t\tbuilder.append(agentId,other.agentId);\n-\t\tbuilder.append(answerText,other.answerText);\n-\t\tbuilder.append(assessmentGradingId,other.assessmentGradingId);\n-\t\tbuilder.append(attemptsRemaining,other.attemptsRemaining);\n-\t\tbuilder.append(autoScore,other.autoScore);\n-\t\tbuilder.append(comments,other.comments);\n-\t\tbuilder.append(gradedBy,other.gradedBy);\n-\t\tbuilder.append(gradedDate,other.gradedDate);\n-\t\tbuilder.append(itemGradingId,other.itemGradingId);\n-\t\tbuilder.append(isCorrect,other.isCorrect);\n-\t\tbuilder.append(lastDuration, other.lastDuration);\n-\t\tbuilder.append(mediaArray,other.mediaArray);\n-\t\tbuilder.append(overrideScore,other.overrideScore);\n-\t\tbuilder.append(publishedAnswerId,other.publishedAnswerId);\n-\t\tbuilder.append(publishedItemId,other.publishedItemId);\n-\t\tbuilder.append(publishedItemTextId,other.publishedItemTextId);\n-\t\tbuilder.append(rationale,other.rationale);\n-\t\tbuilder.append(review,other.review);\n-\t\tbuilder.append(submittedDate,other.submittedDate);\n-\t    return builder.isEquals();\n-\t}\n+  private static final long serialVersionUID = 7526471155622776147L;\n+\n+  private Long itemGradingId;\n+  private Long assessmentGradingId;\n+  private Long publishedItemId;\n+  private Long publishedItemTextId;\n+  private String agentId;\n+  private Long publishedAnswerId;\n+  private String rationale;\n+  private String answerText;\n+  private Date submittedDate;\n+  private Double autoScore;\n+  private Double overrideScore;\n+  private String comments;\n+  private String gradedBy;\n+  private Date gradedDate;\n+  private Boolean review;\n+  private Integer attemptsRemaining;\n+  private String lastDuration;\n+  private Boolean isCorrect;\n+  private List mediaArray;", "originalCommit": "e9fdd0b95100c543654910f9c0133b9ddb950af1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA4MTM2Mg==", "url": "https://github.com/sakaiproject/sakai/pull/7834#discussion_r382081362", "bodyText": "Lets sort these alphabetically since were refactoring it!!!!!", "author": "ern", "createdAt": "2020-02-20T15:40:27Z", "path": "samigo/samigo-api/src/java/org/sakaiproject/tool/assessment/data/dao/grading/ItemGradingData.java", "diffHunk": "@@ -21,299 +21,53 @@\n \n package org.sakaiproject.tool.assessment.data.dao.grading;\n \n-import java.util.ArrayList;\n import java.util.Date;\n import java.util.HashSet;\n-import java.util.Iterator;\n import java.util.List;\n import java.util.Set;\n \n-import org.apache.commons.lang3.builder.EqualsBuilder;\n-import org.apache.commons.lang3.builder.HashCodeBuilder;\n-import lombok.extern.slf4j.Slf4j;\n+import lombok.EqualsAndHashCode;\n+import lombok.Getter;\n+import lombok.Setter;\n \n /**\n  * A response to a specific question and its associated data\n- * \n- * \n  */\n-@Slf4j\n+@Getter\n+@Setter\n+@EqualsAndHashCode\n public class ItemGradingData implements java.io.Serializable {\n \n-\tprivate static final long serialVersionUID = 7526471155622776147L;\n-\tprivate Long itemGradingId;\n-\tprivate Long assessmentGradingId;\n-\tprivate Long publishedItemId;\n-\tprivate Long publishedItemTextId;\n-\tprivate String agentId;\n-\tprivate Long publishedAnswerId;\n-\tprivate String rationale;\n-\tprivate String answerText;\n-\tprivate Date submittedDate;\n-\tprivate Double autoScore;\n-\tprivate Double overrideScore;\n-\tprivate String comments;\n-\tprivate String gradedBy;\n-\tprivate Date gradedDate;\n-\tprivate Boolean review;\n-\t// these two properties are used by audio question in Samigo 2.2\n-\tprivate Integer attemptsRemaining;\n-\tprivate String lastDuration;\n-\tprivate Boolean isCorrect;\n-\tprivate List mediaArray;\n-\tprivate Set<ItemGradingAttachment> itemGradingAttachmentSet = new HashSet<>();\n-\n-\tpublic ItemGradingData() {\n-\t}\n-\n-\tpublic ItemGradingData(Long itemGradingId, Long assessmentGradingId) {\n-\t\tthis.itemGradingId = itemGradingId;\n-\t\tthis.assessmentGradingId = assessmentGradingId;\n-\t}\n-\n-\tpublic Long getItemGradingId() {\n-\t\treturn itemGradingId;\n-\t}\n-\n-\tpublic void setItemGradingId(Long itemGradingId) {\n-\t\tthis.itemGradingId = itemGradingId;\n-\t}\n-\n-\tpublic Long getPublishedItemId() {\n-\t\treturn publishedItemId;\n-\t}\n-\n-\tpublic void setPublishedItemId(Long publishedItemId) {\n-\t\tthis.publishedItemId = publishedItemId;\n-\t}\n-\n-\tpublic Long getPublishedItemTextId() {\n-\t\treturn publishedItemTextId;\n-\t}\n-\n-\tpublic void setPublishedItemTextId(Long publishedItemTextId) {\n-\t\tthis.publishedItemTextId = publishedItemTextId;\n-\t}\n-\n-\tpublic Long getAssessmentGradingId() {\n-\t\treturn assessmentGradingId;\n-\t}\n-\n-\tpublic void setAssessmentGradingId(Long assessmentGradingId) {\n-\t\tthis.assessmentGradingId = assessmentGradingId;\n-\t}\n-\n-\tpublic String getAgentId() {\n-\t\treturn agentId;\n-\t}\n-\n-\tpublic void setAgentId(String agentId) {\n-\t\tthis.agentId = agentId;\n-\t}\n-\n-\tpublic Long getPublishedAnswerId() {\n-\t\treturn publishedAnswerId;\n-\t}\n-\n-\tpublic void setPublishedAnswerId(Long publishedAnswerId) {\n-\t\tthis.publishedAnswerId = publishedAnswerId;\n-\t}\n-\n-\tpublic String getRationale() {\n-\t\treturn rationale;\n-\t}\n-\n-\tpublic void setRationale(String rationale) {\n-\t\tthis.rationale = rationale;\n-\t}\n-\n-\tpublic String getAnswerText() {\n-\t\treturn answerText;\n-\t}\n-\n-\tpublic void setAnswerText(String answerText) {\n-\t\tthis.answerText = answerText;\n-\t}\n-\n-\tpublic Date getSubmittedDate() {\n-\t\treturn submittedDate;\n-\t}\n-\n-\tpublic void setSubmittedDate(Date submittedDate) {\n-\t\tthis.submittedDate = submittedDate;\n-\t}\n-\n-\tpublic Double getAutoScore() {\n-\t\treturn autoScore;\n-\t}\n-\n-\tpublic void setAutoScore(Double autoScore) {\n-\t\tthis.autoScore = autoScore;\n-\t}\n-\n-\tpublic Double getOverrideScore() {\n-\t\treturn overrideScore;\n-\t}\n-\n-\tpublic void setOverrideScore(Double overrideScore) {\n-\t\tthis.overrideScore = overrideScore;\n-\t}\n-\n-\tpublic String getComments() {\n-\t\treturn comments;\n-\t}\n-\n-\tpublic void setComments(String comments) {\n-\t\tthis.comments = comments;\n-\t}\n-\n-\tpublic String getGradedBy() {\n-\t\treturn gradedBy;\n-\t}\n-\n-\tpublic void setGradedBy(String gradedBy) {\n-\t\tthis.gradedBy = gradedBy;\n-\t}\n-\n-\tpublic Date getGradedDate() {\n-\t\treturn gradedDate;\n-\t}\n-\n-\tpublic void setGradedDate(Date gradedDate) {\n-\t\tthis.gradedDate = gradedDate;\n-\t}\n-\n-\tpublic Boolean getReview() {\n-\t\treturn review;\n-\t}\n-\n-\tpublic void setReview(Boolean newReview) {\n-\t\treview = newReview;\n-\t}\n-\n-\tpublic Integer getAttemptsRemaining() {\n-\t\treturn attemptsRemaining;\n-\t}\n-\n-\tpublic void setAttemptsRemaining(Integer attemptsRemaining) {\n-\t\tthis.attemptsRemaining = attemptsRemaining;\n-\t}\n-\n-\tpublic String getLastDuration() {\n-\t\treturn lastDuration;\n-\t}\n-\n-\tpublic void setLastDuration(String lastDuration) {\n-\t\tthis.lastDuration = lastDuration;\n-\t}\n-\t\n-\tpublic Boolean getIsCorrect() {\n-\t\treturn isCorrect;\n-\t}\n-\n-\tpublic void setIsCorrect(Boolean isCorrect) {\n-\t\tthis.isCorrect = isCorrect;\n-\t}\n-\n-\tpublic List getMediaArray() {\n-\t\treturn mediaArray;\n-\t}\n-\n-\tpublic void setMediaArray(List mediaArray) {\n-\t\tthis.mediaArray = mediaArray;\n-\t}\n-\n-\tpublic int getMediaSize() {\n-\t\treturn mediaArray.size();\n-\t}\n-\n-\tpublic Set<ItemGradingAttachment> getItemGradingAttachmentSet() {\n-\t\treturn itemGradingAttachmentSet;\n-\t}\n-\n-\tpublic void setItemGradingAttachmentSet(\n-\t\t\tSet<ItemGradingAttachment> itemGradingAttachmentSet) {\n-\t\tthis.itemGradingAttachmentSet = itemGradingAttachmentSet;\n-\t}\n-\n-\tpublic List<ItemGradingAttachment> getItemGradingAttachmentList() {\n-\t\tList<ItemGradingAttachment> list = new ArrayList<ItemGradingAttachment>();\n-\t\tif (itemGradingAttachmentSet != null) {\n-\t\t\tIterator<ItemGradingAttachment> iter = itemGradingAttachmentSet\n-\t\t\t\t\t.iterator();\n-\t\t\twhile (iter.hasNext()) {\n-\t\t\t\tItemGradingAttachment a = (ItemGradingAttachment) iter.next();\n-\t\t\t\tlist.add(a);\n-\t\t\t}\n-\t\t}\n-\t\treturn list;\n-\t}\n-\n-\tpublic void setItemGradingAttachmentList(\n-\t\t\tList<ItemGradingAttachment> itemGradingAttachmentList) {\n-\t\tSet<ItemGradingAttachment> itemGradingAttachmentSet = new HashSet<ItemGradingAttachment>(itemGradingAttachmentList);\n-\t\tthis.itemGradingAttachmentSet = itemGradingAttachmentSet;\n-\t}\n-\n-\t@Override\n-\tpublic int hashCode() {\n-\t    HashCodeBuilder builder = new HashCodeBuilder(1,31);\n-\t    builder.append(agentId);\n-\t    builder.append(answerText);\n-\t    builder.append(assessmentGradingId);\n-\t    builder.append(attemptsRemaining);\n-\t    builder.append(autoScore);\n-\t    builder.append(comments);\n-\t    builder.append(gradedBy);\n-\t    builder.append(gradedDate);\n-\t    builder.append(itemGradingId);\n-\t    builder.append(isCorrect);\n-\t    builder.append(lastDuration);\n-\t    builder.append(mediaArray);\n-\t    builder.append(overrideScore);\n-\t    builder.append(publishedAnswerId);\n-\t    builder.append(publishedItemId);\n-\t    builder.append(publishedItemTextId);\n-\t    builder.append(rationale);\n-\t    builder.append(review);\n-\t    builder.append(submittedDate);\n-\t    if (log.isDebugEnabled()) {\n-\t        log.debug(\"Hashcode for Published Answer \" + publishedAnswerId + \" is \" + builder.toHashCode());\n-\t    }\n-\t\treturn builder.toHashCode();\n-\t}\n-\n-\t@Override\n-\tpublic boolean equals(Object obj) {\n-\t\tif (this == obj)\n-\t\t\treturn true;\n-\t\tif (obj == null)\n-\t\t\treturn false;\n-\t\tif (getClass() != obj.getClass())\n-\t\t\treturn false;\n-\n-\t\tItemGradingData other = (ItemGradingData) obj;\n-\t\tEqualsBuilder builder = new EqualsBuilder();\n-\t\tbuilder.appendSuper(super.equals(obj));\n-\t\tbuilder.append(agentId,other.agentId);\n-\t\tbuilder.append(answerText,other.answerText);\n-\t\tbuilder.append(assessmentGradingId,other.assessmentGradingId);\n-\t\tbuilder.append(attemptsRemaining,other.attemptsRemaining);\n-\t\tbuilder.append(autoScore,other.autoScore);\n-\t\tbuilder.append(comments,other.comments);\n-\t\tbuilder.append(gradedBy,other.gradedBy);\n-\t\tbuilder.append(gradedDate,other.gradedDate);\n-\t\tbuilder.append(itemGradingId,other.itemGradingId);\n-\t\tbuilder.append(isCorrect,other.isCorrect);\n-\t\tbuilder.append(lastDuration, other.lastDuration);\n-\t\tbuilder.append(mediaArray,other.mediaArray);\n-\t\tbuilder.append(overrideScore,other.overrideScore);\n-\t\tbuilder.append(publishedAnswerId,other.publishedAnswerId);\n-\t\tbuilder.append(publishedItemId,other.publishedItemId);\n-\t\tbuilder.append(publishedItemTextId,other.publishedItemTextId);\n-\t\tbuilder.append(rationale,other.rationale);\n-\t\tbuilder.append(review,other.review);\n-\t\tbuilder.append(submittedDate,other.submittedDate);\n-\t    return builder.isEquals();\n-\t}\n+  private static final long serialVersionUID = 7526471155622776147L;\n+\n+  private Long itemGradingId;\n+  private Long assessmentGradingId;\n+  private Long publishedItemId;\n+  private Long publishedItemTextId;\n+  private String agentId;\n+  private Long publishedAnswerId;\n+  private String rationale;\n+  private String answerText;\n+  private Date submittedDate;\n+  private Double autoScore;\n+  private Double overrideScore;\n+  private String comments;\n+  private String gradedBy;\n+  private Date gradedDate;\n+  private Boolean review;\n+  private Integer attemptsRemaining;\n+  private String lastDuration;\n+  private Boolean isCorrect;\n+  private List mediaArray;", "originalCommit": "e9fdd0b95100c543654910f9c0133b9ddb950af1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "50fa912440a27b4fb98dd32fb8aefef327615fde", "url": "https://github.com/sakaiproject/sakai/commit/50fa912440a27b4fb98dd32fb8aefef327615fde", "message": "SAK-43113 Clean up ItemGradingData in Samigo\n\nhttps://jira.sakaiproject.org/browse/SAK-43113", "committedDate": "2020-02-20T15:58:14Z", "type": "commit"}, {"oid": "50fa912440a27b4fb98dd32fb8aefef327615fde", "url": "https://github.com/sakaiproject/sakai/commit/50fa912440a27b4fb98dd32fb8aefef327615fde", "message": "SAK-43113 Clean up ItemGradingData in Samigo\n\nhttps://jira.sakaiproject.org/browse/SAK-43113", "committedDate": "2020-02-20T15:58:14Z", "type": "forcePushed"}]}