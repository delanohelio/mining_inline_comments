{"pr_number": 8550, "pr_title": "SAK-44265 Moved bullhorns to use Server Sent Events", "pr_createdAt": "2020-09-10T17:45:52Z", "pr_url": "https://github.com/sakaiproject/sakai/pull/8550", "timeline": [{"oid": "b262be15600fefe197b6f6343ec4a790aabbcbd3", "url": "https://github.com/sakaiproject/sakai/commit/b262be15600fefe197b6f6343ec4a790aabbcbd3", "message": "SAK-44265 Moved bullhorns to use Server Sent Events\n\nhttps://jira.sakaiproject.org/browse/SAK-44265", "committedDate": "2020-10-14T13:48:17Z", "type": "forcePushed"}, {"oid": "1325afcbf33d60dddc1403ae20dace77e96a3b5f", "url": "https://github.com/sakaiproject/sakai/commit/1325afcbf33d60dddc1403ae20dace77e96a3b5f", "message": "SAK-44265 Moved bullhorns to use Server Sent Events\n\nhttps://jira.sakaiproject.org/browse/SAK-44265", "committedDate": "2020-11-10T13:12:06Z", "type": "forcePushed"}, {"oid": "d0c69c85b96c790efc6fe539bff2c7c70d57be37", "url": "https://github.com/sakaiproject/sakai/commit/d0c69c85b96c790efc6fe539bff2c7c70d57be37", "message": "SAK-44265 Moved bullhorns to use Server Sent Events\n\nhttps://jira.sakaiproject.org/browse/SAK-44265", "committedDate": "2020-11-10T13:17:44Z", "type": "forcePushed"}, {"oid": "7b62837eb2ed1a3ddc8b1ec9bdadf5df2522ebab", "url": "https://github.com/sakaiproject/sakai/commit/7b62837eb2ed1a3ddc8b1ec9bdadf5df2522ebab", "message": "SAK-44265 Moved bullhorns to use Server Sent Events\n\nhttps://jira.sakaiproject.org/browse/SAK-44265", "committedDate": "2020-11-12T12:36:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMDAyMzQwOQ==", "url": "https://github.com/sakaiproject/sakai/pull/8550#discussion_r600023409", "bodyText": "what's the logic around removing this cache?", "author": "ottenhoff", "createdAt": "2021-03-23T23:11:23Z", "path": "assignment/api/src/java/org/sakaiproject/assignment/api/AddAssignmentBullhornHandler.java", "diffHunk": "@@ -150,8 +146,6 @@ protected void doInTransactionWithoutResult(TransactionStatus status) {\n             }\n         });\n \n-        users.forEach(u -> countCache.remove(u));", "originalCommit": "7b62837eb2ed1a3ddc8b1ec9bdadf5df2522ebab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMDM0OTU3Mw==", "url": "https://github.com/sakaiproject/sakai/pull/8550#discussion_r600349573", "bodyText": "We don't maintain counts server side any longer. The clientside stuff just counts them as they come in.", "author": "adrianfish", "createdAt": "2021-03-24T10:25:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMDAyMzQwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMDM1MTExNA==", "url": "https://github.com/sakaiproject/sakai/pull/8550#discussion_r600351114", "bodyText": "In the entityprovider, there used to be a call just to get the counts - that was what got short polled every 5 seconds. That call is no longer happening, so no cache needed.", "author": "adrianfish", "createdAt": "2021-03-24T10:27:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMDAyMzQwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMDAyNjA5Mw==", "url": "https://github.com/sakaiproject/sakai/pull/8550#discussion_r600026093", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if (comments.size() > 1) {\n          \n          \n            \n                            if (comments != null && comments.size() > 1) {", "author": "ottenhoff", "createdAt": "2021-03-23T23:18:21Z", "path": "lessonbuilder/api/src/java/org/sakaiproject/lessonbuildertool/api/AddLessonsCommentBullhornHandler.java", "diffHunk": "@@ -0,0 +1,106 @@\n+/**\n+ * Copyright (c) 2003-2017 The Apereo Foundation\n+ *\n+ * Licensed under the Educational Community License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *             http://opensource.org/licenses/ecl2\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.sakaiproject.lessonbuildertool.api;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Optional;\n+\n+import javax.annotation.Resource;\n+\n+import org.sakaiproject.event.api.Event;\n+import org.sakaiproject.lessonbuildertool.SimplePage;\n+import org.sakaiproject.lessonbuildertool.SimplePageComment;\n+import org.sakaiproject.lessonbuildertool.model.SimplePageToolDao;\n+import org.sakaiproject.messaging.api.BullhornData;\n+import org.sakaiproject.messaging.api.bullhornhandlers.AbstractBullhornHandler;\n+import org.sakaiproject.user.api.User;\n+\n+import org.springframework.stereotype.Component;\n+\n+import lombok.extern.slf4j.Slf4j;\n+\n+@Slf4j\n+@Component\n+public class AddLessonsCommentBullhornHandler extends AbstractBullhornHandler {\n+\n+    @Resource(name = \"org.sakaiproject.lessonbuildertool.model.SimplePageToolDao\")\n+    private SimplePageToolDao simplePageToolDao;\n+\n+    @Override\n+    public List<String> getHandledEvents() {\n+        return Arrays.asList(LessonBuilderEvents.COMMENT_CREATE);\n+    }\n+\n+    @Override\n+    public Optional<List<BullhornData>> handleEvent(Event e) {\n+\n+        List<BullhornData> bhEvents = new ArrayList<>();\n+\n+        String ref = e.getResource();\n+        String context = e.getContext();\n+        String[] pathParts = ref.split(\"/\");\n+        String from = e.getUserId();\n+\n+        try {\n+            long commentId = Long.parseLong(pathParts[pathParts.length - 1]);\n+            SimplePageComment comment = simplePageToolDao.findCommentById(commentId);\n+\n+            String url = simplePageToolDao.getPageUrl(comment.getPageId());\n+\n+            if (url != null) {\n+                List<String> done = new ArrayList<>();\n+                // Alert tutor types.\n+                List<User> receivers = securityService.unlockUsers(\n+                    SimplePage.PERMISSION_LESSONBUILDER_UPDATE, \"/site/\" + context);\n+                for (User receiver : receivers) {\n+                    String to = receiver.getId();\n+                    if (!to.equals(from)) {\n+                        //doInsert(from, to, event, ref, \"title\", context, e.getEventTime(), url);\n+                        bhEvents.add(new BullhornData(from, to, context, \"title\", url));\n+                        done.add(to);\n+                    }\n+                }\n+\n+                // Get all the comments in the same item\n+                List<SimplePageComment> comments\n+                    = simplePageToolDao.findCommentsOnItems(\n+                        Arrays.asList(new Long[] {comment.getItemId()}));\n+\n+                if (comments.size() > 1) {", "originalCommit": "7b62837eb2ed1a3ddc8b1ec9bdadf5df2522ebab", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "582d561c528773cc87da6e1c7250d73b76a433a7", "url": "https://github.com/sakaiproject/sakai/commit/582d561c528773cc87da6e1c7250d73b76a433a7", "message": "SAK-44265 Moved bullhorns to use Server Sent Events\n\nhttps://jira.sakaiproject.org/browse/SAK-44265", "committedDate": "2021-03-25T20:06:09Z", "type": "commit"}, {"oid": "582d561c528773cc87da6e1c7250d73b76a433a7", "url": "https://github.com/sakaiproject/sakai/commit/582d561c528773cc87da6e1c7250d73b76a433a7", "message": "SAK-44265 Moved bullhorns to use Server Sent Events\n\nhttps://jira.sakaiproject.org/browse/SAK-44265", "committedDate": "2021-03-25T20:06:09Z", "type": "forcePushed"}]}