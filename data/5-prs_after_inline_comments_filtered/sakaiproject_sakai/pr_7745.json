{"pr_number": 7745, "pr_title": "SAK-42953: Problem Import/Export on GradeBook", "pr_createdAt": "2020-01-07T14:03:29Z", "pr_url": "https://github.com/sakaiproject/sakai/pull/7745", "timeline": [{"oid": "2ed96b6f8837dba352e4435fe8391f25e537d5f9", "url": "https://github.com/sakaiproject/sakai/commit/2ed96b6f8837dba352e4435fe8391f25e537d5f9", "message": "SAK-42953: Problem Import/Export on GradeBook", "committedDate": "2020-01-07T13:46:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzgzOTYxNw==", "url": "https://github.com/sakaiproject/sakai/pull/7745#discussion_r363839617", "bodyText": "What happens when the file is UTF-8 (multibyte)? UTF-8 is backwards compatible with ASCII, so using UTF-8 should optimal.", "author": "ern", "createdAt": "2020-01-07T16:40:45Z", "path": "gradebookng/tool/src/java/org/sakaiproject/gradebookng/business/util/ImportGradesHelper.java", "diffHunk": "@@ -158,14 +161,14 @@ private static ImportedSpreadsheetWrapper parseCsv(final InputStream is, final G\n \t\t// manually parse method so we can support arbitrary columns\n \t\tCSVReader reader;\n \t\tif(StringUtils.isEmpty(userDecimalSeparator)){\n-\t\t\treader = new CSVReader(new InputStreamReader(is));\n+\t\t\treader = new CSVReader(new InputStreamReader(is, \"ISO-8859-1\"));", "originalCommit": "2ed96b6f8837dba352e4435fe8391f25e537d5f9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg0NTIwOQ==", "url": "https://github.com/sakaiproject/sakai/pull/7745#discussion_r363845209", "bodyText": "See https://openjdk.java.net/jeps/8187041 UTF-8 will be the default.", "author": "ern", "createdAt": "2020-01-07T16:52:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzgzOTYxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg0NjkyMQ==", "url": "https://github.com/sakaiproject/sakai/pull/7745#discussion_r363846921", "bodyText": "For those thinking well UTF-8 is a single character, but UTF-8 is part of a variable length and so it works well with other encodings where single byte encodings would fail.", "author": "ern", "createdAt": "2020-01-07T16:55:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzgzOTYxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDEwNDk4NA==", "url": "https://github.com/sakaiproject/sakai/pull/7745#discussion_r364104984", "bodyText": "As mentioned in the task associated with the branch:\n\"When a user exports a ratings CSV file, modifies it afterwards and imports the file back again with the changes, if any text contains tilde or special characters, Gradebook duplicates the columns containing those special characters, just replacing the special characters with strangely parsed characters. This is so because, when saving any local changes on the exported CSV file, Microsoft Excel (the most widely used spreadsheet software) changes the document's coding from UTF-8 with BOM, it's original coding, to ANSI. Because of that, when processing the file, it is processed by default in UTF-8, thus, transcoding incorrectly those special characters.\"\nTo reproduce this problem:\n1\u00ba Export a CSV with the gradebooks (Check that the coding is UTF8-BOM).\n2\u00ba Change a gradebook of the downloaded CSV with the MSEXCEL application and give it to close so that it gives us the option to save. We save again the file in CSV (We see that the codification has changed to ANSI).\n3\u00ba When we try to import the file, it duplicates the subjects that contain punctuation symbols with the strange symbols.", "author": "victorGomollon", "createdAt": "2020-01-08T08:10:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzgzOTYxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE0ODQ1Mg==", "url": "https://github.com/sakaiproject/sakai/pull/7745#discussion_r364148452", "bodyText": "We know UTF-8 is optimal for this problem but we can't make Microsoft understand that so, sadly, we need to use ISO-8859-1.", "author": "SedueRey", "createdAt": "2020-01-08T09:58:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzgzOTYxNw=="}], "type": "inlineReview"}]}