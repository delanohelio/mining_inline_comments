{"pr_number": 7749, "pr_title": "SAK-42944 Recover rubrics with softly deleted assessments", "pr_createdAt": "2020-01-09T08:21:23Z", "pr_url": "https://github.com/sakaiproject/sakai/pull/7749", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDY4NjgxNg==", "url": "https://github.com/sakaiproject/sakai/pull/7749#discussion_r364686816", "bodyText": "Indentation", "author": "adrianfish", "createdAt": "2020-01-09T11:21:58Z", "path": "rubrics/impl/src/main/java/org/sakaiproject/rubrics/logic/RubricsServiceImpl.java", "diffHunk": "@@ -813,6 +813,87 @@ public void deleteRubricAssociationsByItemIdPrefix(String itemId, String toolId)\n         }\n     }\n \n+\tpublic void softDeleteRubricAssociationsByItemIdPrefix(String itemId, String toolId) {\n+\t\ttry{\n+\t\t\tTypeReferences.ResourcesType<Resource<ToolItemRubricAssociation>> resourceParameterizedTypeReference =\n+\t\t\t\t\tnew TypeReferences.ResourcesType<Resource<ToolItemRubricAssociation>>() {};\n+\n+\t\t\tURI apiBaseUrl = new URI(serverConfigurationService.getServerUrl() + RBCS_SERVICE_URL_PREFIX);\n+\t\t\tTraverson traverson = new Traverson(apiBaseUrl, MediaTypes.HAL_JSON);\n+\n+\t\t\tTraverson.TraversalBuilder builder = traverson.follow(\"rubric-associations\", \"search\", \"by-item-id-prefix\");\n+\n+\t\t\tHttpHeaders headers = new HttpHeaders();\n+\t\t\theaders.add(\"Authorization\", String.format(\"Bearer %s\", generateJsonWebToken(toolId)));\n+\t\t\tbuilder.withHeaders(headers);\n+\n+\t\t\tMap<String, Object> parameters = new HashMap<>();\n+\t\t\tparameters.put(\"toolId\", toolId);\n+\t\t\tparameters.put(\"itemId\", itemId);\n+\n+\t\t\tResources<Resource<ToolItemRubricAssociation>> associationResources = builder.withTemplateParameters(parameters).toObject(resourceParameterizedTypeReference);\n+\n+\t\t\tfor (Resource<ToolItemRubricAssociation> associationResource : associationResources) {\n+                String associationHref = associationResource.getLink(Link.REL_SELF).getHref();", "originalCommit": "c8930cdef495467ba1974110df1ed731e94d4506", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDY4NzY2Mg==", "url": "https://github.com/sakaiproject/sakai/pull/7749#discussion_r364687662", "bodyText": "If this is a soft delete, should we be deleting the evaluations? If we then recover the associated item, won't we want to get the evaluations back, too?", "author": "adrianfish", "createdAt": "2020-01-09T11:24:22Z", "path": "rubrics/impl/src/main/java/org/sakaiproject/rubrics/logic/RubricsServiceImpl.java", "diffHunk": "@@ -813,6 +813,87 @@ public void deleteRubricAssociationsByItemIdPrefix(String itemId, String toolId)\n         }\n     }\n \n+\tpublic void softDeleteRubricAssociationsByItemIdPrefix(String itemId, String toolId) {\n+\t\ttry{\n+\t\t\tTypeReferences.ResourcesType<Resource<ToolItemRubricAssociation>> resourceParameterizedTypeReference =\n+\t\t\t\t\tnew TypeReferences.ResourcesType<Resource<ToolItemRubricAssociation>>() {};\n+\n+\t\t\tURI apiBaseUrl = new URI(serverConfigurationService.getServerUrl() + RBCS_SERVICE_URL_PREFIX);\n+\t\t\tTraverson traverson = new Traverson(apiBaseUrl, MediaTypes.HAL_JSON);\n+\n+\t\t\tTraverson.TraversalBuilder builder = traverson.follow(\"rubric-associations\", \"search\", \"by-item-id-prefix\");\n+\n+\t\t\tHttpHeaders headers = new HttpHeaders();\n+\t\t\theaders.add(\"Authorization\", String.format(\"Bearer %s\", generateJsonWebToken(toolId)));\n+\t\t\tbuilder.withHeaders(headers);\n+\n+\t\t\tMap<String, Object> parameters = new HashMap<>();\n+\t\t\tparameters.put(\"toolId\", toolId);\n+\t\t\tparameters.put(\"itemId\", itemId);\n+\n+\t\t\tResources<Resource<ToolItemRubricAssociation>> associationResources = builder.withTemplateParameters(parameters).toObject(resourceParameterizedTypeReference);\n+\n+\t\t\tfor (Resource<ToolItemRubricAssociation> associationResource : associationResources) {\n+                String associationHref = associationResource.getLink(Link.REL_SELF).getHref();\n+                deleteRubricEvaluationsForAssociation(associationHref, toolId);", "originalCommit": "c8930cdef495467ba1974110df1ed731e94d4506", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDY4ODQzNg==", "url": "https://github.com/sakaiproject/sakai/pull/7749#discussion_r364688436", "bodyText": "Some more indentation", "author": "adrianfish", "createdAt": "2020-01-09T11:26:21Z", "path": "rubrics/impl/src/main/java/org/sakaiproject/rubrics/logic/RubricsServiceImpl.java", "diffHunk": "@@ -813,6 +813,87 @@ public void deleteRubricAssociationsByItemIdPrefix(String itemId, String toolId)\n         }\n     }\n \n+\tpublic void softDeleteRubricAssociationsByItemIdPrefix(String itemId, String toolId) {\n+\t\ttry{\n+\t\t\tTypeReferences.ResourcesType<Resource<ToolItemRubricAssociation>> resourceParameterizedTypeReference =\n+\t\t\t\t\tnew TypeReferences.ResourcesType<Resource<ToolItemRubricAssociation>>() {};\n+\n+\t\t\tURI apiBaseUrl = new URI(serverConfigurationService.getServerUrl() + RBCS_SERVICE_URL_PREFIX);\n+\t\t\tTraverson traverson = new Traverson(apiBaseUrl, MediaTypes.HAL_JSON);\n+\n+\t\t\tTraverson.TraversalBuilder builder = traverson.follow(\"rubric-associations\", \"search\", \"by-item-id-prefix\");\n+\n+\t\t\tHttpHeaders headers = new HttpHeaders();\n+\t\t\theaders.add(\"Authorization\", String.format(\"Bearer %s\", generateJsonWebToken(toolId)));\n+\t\t\tbuilder.withHeaders(headers);\n+\n+\t\t\tMap<String, Object> parameters = new HashMap<>();\n+\t\t\tparameters.put(\"toolId\", toolId);\n+\t\t\tparameters.put(\"itemId\", itemId);\n+\n+\t\t\tResources<Resource<ToolItemRubricAssociation>> associationResources = builder.withTemplateParameters(parameters).toObject(resourceParameterizedTypeReference);\n+\n+\t\t\tfor (Resource<ToolItemRubricAssociation> associationResource : associationResources) {\n+                String associationHref = associationResource.getLink(Link.REL_SELF).getHref();\n+                deleteRubricEvaluationsForAssociation(associationHref, toolId);\n+\t\t\t\t\n+                ToolItemRubricAssociation association = associationResource.getContent();\n+                String created = association.getMetadata().getCreated().toString();\n+                String owner = association.getMetadata().getOwnerId();\n+                String ownerType = association.getMetadata().getOwnerType();\n+                String creatorId = association.getMetadata().getCreatorId();\n+                Map <String,Boolean> oldParams = association.getParameters();\n+                oldParams.put(RubricsConstants.RBCS_SOFT_DELETED, true);\n+                String input = \"{\\\"toolId\\\" : \\\"\"+toolId+\"\\\",\\\"itemId\\\" : \\\"\" + association.getItemId() + \"\\\",\\\"rubricId\\\" : \" + association.getRubricId() + \",\\\"metadata\\\" : {\\\"created\\\" : \\\"\" + created + \"\\\",\\\"ownerId\\\" : \\\"\" + owner +\n+                \"\\\",\\\"ownerType\\\" : \\\"\" + ownerType + \"\\\",\\\"creatorId\\\" : \\\"\" + creatorId + \"\\\"},\\\"parameters\\\" : {\" + setConfigurationParametersForDuplication(oldParams) + \"}}\";\n+                log.debug(\"Soft delete association {}\", input);\n+                String resultPut = putRubricResource(associationHref, input, toolId, null);\n+                log.debug(\"resultPUT: {}\",  resultPut);\n+\t\t\t}\n+        } catch (Exception e) {\n+            log.warn(\"Error soft deleting rubric association for id {} : {}\", itemId, e.getMessage());\n+        }\n+    }\n+\n+\tpublic void restoreRubricAssociationsByItemIdPrefix(String itemId, String toolId) {\n+\t\ttry{\n+\t\t\tTypeReferences.ResourcesType<Resource<ToolItemRubricAssociation>> resourceParameterizedTypeReference =\n+\t\t\t\t\tnew TypeReferences.ResourcesType<Resource<ToolItemRubricAssociation>>() {};\n+\n+\t\t\tURI apiBaseUrl = new URI(serverConfigurationService.getServerUrl() + RBCS_SERVICE_URL_PREFIX);\n+\t\t\tTraverson traverson = new Traverson(apiBaseUrl, MediaTypes.HAL_JSON);\n+\n+\t\t\tTraverson.TraversalBuilder builder = traverson.follow(\"rubric-associations\", \"search\", \"by-item-id-prefix\");\n+\n+\t\t\tHttpHeaders headers = new HttpHeaders();\n+\t\t\theaders.add(\"Authorization\", String.format(\"Bearer %s\", generateJsonWebToken(toolId)));\n+\t\t\tbuilder.withHeaders(headers);\n+\n+\t\t\tMap<String, Object> parameters = new HashMap<>();\n+\t\t\tparameters.put(\"toolId\", toolId);\n+\t\t\tparameters.put(\"itemId\", itemId);\n+\n+\t\t\tResources<Resource<ToolItemRubricAssociation>> associationResources = builder.withTemplateParameters(parameters).toObject(resourceParameterizedTypeReference);\n+\t\t\tfor (Resource<ToolItemRubricAssociation> associationResource : associationResources) {\n+                String associationHref = associationResource.getLink(Link.REL_SELF).getHref();", "originalCommit": "c8930cdef495467ba1974110df1ed731e94d4506", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3e7f2d8167d228b09b26a85a8a32d1ddf2ea0672", "url": "https://github.com/sakaiproject/sakai/commit/3e7f2d8167d228b09b26a85a8a32d1ddf2ea0672", "message": "SAK-42944 Recover rubrics with softly deleted assessments\n\nSome comments:\n\n- As commented on the jira, this will unlock the Rubric on soft deletion\n(if there aren't more associations). Then all the associations will be\nremoved when removing the Rubric.\n- Could the associations be retrieved on deletion time avoiding the ajax\ncall?\n- Can't really tell if both ResourceProcessor files are necessary\nanymore, they come from the original integration but I don't see how\nthey'd be needed nowadays. If someone believes they're still necessary,\nthen I'll have to update them.", "committedDate": "2020-01-09T12:09:30Z", "type": "commit"}, {"oid": "3e7f2d8167d228b09b26a85a8a32d1ddf2ea0672", "url": "https://github.com/sakaiproject/sakai/commit/3e7f2d8167d228b09b26a85a8a32d1ddf2ea0672", "message": "SAK-42944 Recover rubrics with softly deleted assessments\n\nSome comments:\n\n- As commented on the jira, this will unlock the Rubric on soft deletion\n(if there aren't more associations). Then all the associations will be\nremoved when removing the Rubric.\n- Could the associations be retrieved on deletion time avoiding the ajax\ncall?\n- Can't really tell if both ResourceProcessor files are necessary\nanymore, they come from the original integration but I don't see how\nthey'd be needed nowadays. If someone believes they're still necessary,\nthen I'll have to update them.", "committedDate": "2020-01-09T12:09:30Z", "type": "forcePushed"}]}