{"pr_number": 6845, "pr_title": "FIx unit tests in master", "pr_createdAt": "2020-09-02T12:40:37Z", "pr_url": "https://github.com/JabRef/jabref/pull/6845", "timeline": [{"oid": "d0a6bc624c10fa554d44403854051c825073a496", "url": "https://github.com/JabRef/jabref/commit/d0a6bc624c10fa554d44403854051c825073a496", "message": "fix markdownlint", "committedDate": "2020-09-02T12:29:06Z", "type": "commit"}, {"oid": "98415d3dca18eebd1fe9ae952009cf245e1e56d6", "url": "https://github.com/JabRef/jabref/commit/98415d3dca18eebd1fe9ae952009cf245e1e56d6", "message": "add misisng l10n", "committedDate": "2020-09-02T12:37:39Z", "type": "commit"}, {"oid": "dfa6d963edd99b2f90983e628a84cc1ea5546dcf", "url": "https://github.com/JabRef/jabref/commit/dfa6d963edd99b2f90983e628a84cc1ea5546dcf", "message": "Fix test for abbreviatons, remove obsolete test", "committedDate": "2020-09-02T13:06:54Z", "type": "commit"}, {"oid": "a0df32b6675f203b5e957047ce09dba6e7453c40", "url": "https://github.com/JabRef/jabref/commit/a0df32b6675f203b5e957047ce09dba6e7453c40", "message": "Fix journal abbrev loading", "committedDate": "2020-09-02T14:46:01Z", "type": "commit"}, {"oid": "cd4fd6ff3d51e52cd3da87a00c66c8a028e0ea8d", "url": "https://github.com/JabRef/jabref/commit/cd4fd6ff3d51e52cd3da87a00c66c8a028e0ea8d", "message": "Fix autolink files test", "committedDate": "2020-09-02T15:02:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE5OTM4OQ==", "url": "https://github.com/JabRef/jabref/pull/6845#discussion_r482199389", "bodyText": "I think this is a wrong semantics here. The built-in refers to the built-in journal list, but fullToAbbreviation is read from the file passed as the constructor argument.", "author": "tobiasdiez", "createdAt": "2020-09-02T16:21:57Z", "path": "src/main/java/org/jabref/logic/journals/JournalAbbreviationRepository.java", "diffHunk": "@@ -125,4 +126,9 @@ public void addCustomAbbreviations(Collection<Abbreviation> abbreviationsToAdd)\n     public Set<String> getFullNames() {\n         return fullToAbbreviation.keySet();\n     }\n+\n+    public List<Abbreviation> getBuiltin() {", "originalCommit": "cd4fd6ff3d51e52cd3da87a00c66c8a028e0ea8d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE5OTgxMw==", "url": "https://github.com/JabRef/jabref/pull/6845#discussion_r482199813", "bodyText": "With this method removed, how are custom journal abbreviation lists (csv files) loaded?", "author": "tobiasdiez", "createdAt": "2020-09-02T16:22:38Z", "path": "src/main/java/org/jabref/logic/journals/JournalAbbreviationLoader.java", "diffHunk": "@@ -35,13 +28,6 @@\n         return parser.getAbbreviations();\n     }\n \n-    private static List<Abbreviation> readJournalListFromFile(Path file, Charset encoding) throws IOException {", "originalCommit": "cd4fd6ff3d51e52cd3da87a00c66c8a028e0ea8d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjIxNjQ1MQ==", "url": "https://github.com/JabRef/jabref/pull/6845#discussion_r482216451", "bodyText": "This specific overload was never used locally. See the lines before, the funcitonality is still there,\nThe encoding later one is set to UTF8 as default.", "author": "Siedlerchr", "createdAt": "2020-09-02T16:49:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE5OTgxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjIwMTMyMg==", "url": "https://github.com/JabRef/jabref/pull/6845#discussion_r482201322", "bodyText": "maybe rename to builtinRepo?", "author": "tobiasdiez", "createdAt": "2020-09-02T16:25:01Z", "path": "src/test/java/org/jabref/gui/journals/ManageJournalAbbreviationsViewModelMixedAbbreviationsTest.java", "diffHunk": "@@ -45,6 +46,7 @@\n     private Path testFile4Entries;\n     private Path testFile5EntriesWithDuplicate;\n     private JournalAbbreviationPreferences abbreviationPreferences;\n+    private final JournalAbbreviationRepository repo = JournalAbbreviationLoader.loadBuiltInRepository();", "originalCommit": "cd4fd6ff3d51e52cd3da87a00c66c8a028e0ea8d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjIwMTU5NA==", "url": "https://github.com/JabRef/jabref/pull/6845#discussion_r482201594", "bodyText": "rename here as well", "author": "tobiasdiez", "createdAt": "2020-09-02T16:25:23Z", "path": "src/test/java/org/jabref/gui/journals/ManageJournalAbbreviationsViewModelNoShortestUniqueAbbreviationsTest.java", "diffHunk": "@@ -46,6 +47,7 @@\n     private Path testFile5EntriesWithDuplicate;\n     private JournalAbbreviationPreferences abbreviationPreferences;\n     private DialogService dialogService;\n+    private final JournalAbbreviationRepository repo = JournalAbbreviationLoader.loadBuiltInRepository();", "originalCommit": "cd4fd6ff3d51e52cd3da87a00c66c8a028e0ea8d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjIwMTc5Ng==", "url": "https://github.com/JabRef/jabref/pull/6845#discussion_r482201796", "bodyText": "dito", "author": "tobiasdiez", "createdAt": "2020-09-02T16:25:42Z", "path": "src/test/java/org/jabref/gui/journals/ManageJournalAbbreviationsViewModelWithShortestUniqueAbbreviationsTest.java", "diffHunk": "@@ -46,6 +47,7 @@\n     private Path testFile5EntriesWithDuplicate;\n     private JournalAbbreviationPreferences abbreviationPreferences;\n     private DialogService dialogService;\n+    private final JournalAbbreviationRepository repo = JournalAbbreviationLoader.loadBuiltInRepository();", "originalCommit": "cd4fd6ff3d51e52cd3da87a00c66c8a028e0ea8d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE0MzkxMA==", "url": "https://github.com/JabRef/jabref/pull/6845#discussion_r482143910", "bodyText": "Reformat really necessary?", "author": "koppor", "createdAt": "2020-09-02T15:05:15Z", "path": "src/main/java/org/jabref/gui/journals/ManageJournalAbbreviationsViewModel.java", "diffHunk": "@@ -159,7 +159,7 @@ private void openFile(Path filePath) {\n         AbbreviationsFileViewModel abbreviationsFile = new AbbreviationsFileViewModel(filePath);\n         if (journalFiles.contains(abbreviationsFile)) {\n             dialogService.showErrorDialogAndWait(Localization.lang(\"Duplicated Journal File\"),\n-                    Localization.lang(\"Journal file %s already added\", filePath.toString()));\n+                                                 Localization.lang(\"Journal file %s already added\", filePath.toString()));", "originalCommit": "cd4fd6ff3d51e52cd3da87a00c66c8a028e0ea8d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE0Mzk5Nw==", "url": "https://github.com/JabRef/jabref/pull/6845#discussion_r482143997", "bodyText": "Reformat really necessary?", "author": "koppor", "createdAt": "2020-09-02T15:05:21Z", "path": "src/main/java/org/jabref/gui/journals/ManageJournalAbbreviationsViewModel.java", "diffHunk": "@@ -208,7 +208,7 @@ public void addAbbreviation(String name, String abbreviation, String shortestUni\n         AbbreviationViewModel abbreviationViewModel = new AbbreviationViewModel(abbreviationObject);\n         if (abbreviations.contains(abbreviationViewModel)) {\n             dialogService.showErrorDialogAndWait(Localization.lang(\"Duplicated Journal Abbreviation\"),\n-                    Localization.lang(\"Abbreviation '%0' for journal '%1' already defined.\", abbreviation, name));\n+                                                 Localization.lang(\"Abbreviation '%0' for journal '%1' already defined.\", abbreviation, name));", "originalCommit": "cd4fd6ff3d51e52cd3da87a00c66c8a028e0ea8d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE0NDA1OQ==", "url": "https://github.com/JabRef/jabref/pull/6845#discussion_r482144059", "bodyText": "Reformat really necessary?", "author": "koppor", "createdAt": "2020-09-02T15:05:25Z", "path": "src/main/java/org/jabref/gui/journals/ManageJournalAbbreviationsViewModel.java", "diffHunk": "@@ -236,7 +236,7 @@ public void editAbbreviation(String name, String abbreviation, String shortestUn\n                     setCurrentAbbreviationNameAndAbbreviationIfValid(name, abbreviation, shortestUniqueAbbreviation);\n                 } else {\n                     dialogService.showErrorDialogAndWait(Localization.lang(\"Duplicated Journal Abbreviation\"),\n-                            Localization.lang(\"Abbreviation '%0' for journal '%1' already defined.\", abbreviation, name));\n+                                                         Localization.lang(\"Abbreviation '%0' for journal '%1' already defined.\", abbreviation, name));", "originalCommit": "cd4fd6ff3d51e52cd3da87a00c66c8a028e0ea8d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE0NDEwMA==", "url": "https://github.com/JabRef/jabref/pull/6845#discussion_r482144100", "bodyText": "Reformat really necessary?", "author": "koppor", "createdAt": "2020-09-02T15:05:28Z", "path": "src/main/java/org/jabref/gui/journals/ManageJournalAbbreviationsViewModel.java", "diffHunk": "@@ -385,7 +385,7 @@ public SimpleBooleanProperty isFileRemovableProperty() {\n \n     public void addAbbreviation() {\n         addAbbreviation(Localization.lang(\"Name\"), Localization.lang(\"Abbreviation\"),\n-                Localization.lang(\"Shortest unique abbreviation\"));\n+                        Localization.lang(\"Shortest unique abbreviation\"));", "originalCommit": "cd4fd6ff3d51e52cd3da87a00c66c8a028e0ea8d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjIxMDczNQ==", "url": "https://github.com/JabRef/jabref/pull/6845#discussion_r482210735", "bodyText": "Reformat really necessary?", "author": "koppor", "createdAt": "2020-09-02T16:40:04Z", "path": "src/main/java/org/jabref/logic/journals/JournalAbbreviationRepository.java", "diffHunk": "@@ -29,15 +30,15 @@ public JournalAbbreviationRepository(Path journalList) {\n \n     private static boolean isMatched(String name, Abbreviation abbreviation) {\n         return name.equalsIgnoreCase(abbreviation.getName())\n-                || name.equalsIgnoreCase(abbreviation.getAbbreviation())\n-                || name.equalsIgnoreCase(abbreviation.getMedlineAbbreviation())\n-                || name.equalsIgnoreCase(abbreviation.getShortestUniqueAbbreviation());\n+               || name.equalsIgnoreCase(abbreviation.getAbbreviation())", "originalCommit": "cd4fd6ff3d51e52cd3da87a00c66c8a028e0ea8d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjIxMDc3OQ==", "url": "https://github.com/JabRef/jabref/pull/6845#discussion_r482210779", "bodyText": "Reformat really necessary?", "author": "koppor", "createdAt": "2020-09-02T16:40:08Z", "path": "src/main/java/org/jabref/logic/journals/JournalAbbreviationRepository.java", "diffHunk": "@@ -29,15 +30,15 @@ public JournalAbbreviationRepository(Path journalList) {\n \n     private static boolean isMatched(String name, Abbreviation abbreviation) {\n         return name.equalsIgnoreCase(abbreviation.getName())\n-                || name.equalsIgnoreCase(abbreviation.getAbbreviation())\n-                || name.equalsIgnoreCase(abbreviation.getMedlineAbbreviation())\n-                || name.equalsIgnoreCase(abbreviation.getShortestUniqueAbbreviation());\n+               || name.equalsIgnoreCase(abbreviation.getAbbreviation())\n+               || name.equalsIgnoreCase(abbreviation.getMedlineAbbreviation())\n+               || name.equalsIgnoreCase(abbreviation.getShortestUniqueAbbreviation());\n     }\n \n     private static boolean isMatchedAbbreviated(String name, Abbreviation abbreviation) {\n         boolean isAbbreviated = name.equalsIgnoreCase(abbreviation.getAbbreviation())\n-                || name.equalsIgnoreCase(abbreviation.getMedlineAbbreviation())\n-                || name.equalsIgnoreCase(abbreviation.getShortestUniqueAbbreviation());\n+                                || name.equalsIgnoreCase(abbreviation.getMedlineAbbreviation())", "originalCommit": "cd4fd6ff3d51e52cd3da87a00c66c8a028e0ea8d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjIxMDgxOQ==", "url": "https://github.com/JabRef/jabref/pull/6845#discussion_r482210819", "bodyText": "Reformat really necessary?", "author": "koppor", "createdAt": "2020-09-02T16:40:13Z", "path": "src/main/java/org/jabref/logic/journals/JournalAbbreviationRepository.java", "diffHunk": "@@ -65,8 +66,8 @@ public boolean isAbbreviatedName(String journalName) {\n         String journal = journalName.trim();\n \n         return customAbbreviations.stream().anyMatch(abbreviation -> isMatchedAbbreviated(journal, abbreviation))\n-                ||\n-                abbreviationToFull.containsKey(journal);\n+               ||", "originalCommit": "cd4fd6ff3d51e52cd3da87a00c66c8a028e0ea8d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjIxMTA0Mg==", "url": "https://github.com/JabRef/jabref/pull/6845#discussion_r482211042", "bodyText": "Reformat really necessary?", "author": "koppor", "createdAt": "2020-09-02T16:40:36Z", "path": "src/test/java/org/jabref/gui/journals/ManageJournalAbbreviationsViewModelMixedAbbreviationsTest.java", "diffHunk": "@@ -197,11 +199,10 @@ void testBuiltInListsIncludeAllBuiltInAbbreviations() {\n         viewModel.addBuiltInList();\n         assertEquals(1, viewModel.journalFilesProperty().getSize());\n         viewModel.currentFileProperty().set(viewModel.journalFilesProperty().get(0));\n-        ObservableList<Abbreviation> expected = FXCollections\n-                .observableArrayList(JournalAbbreviationLoader.getBuiltInAbbreviations());\n+        ObservableList<Abbreviation> expected = FXCollections.observableArrayList(repo.getBuiltin());\n         ObservableList<Abbreviation> actualAbbreviations = FXCollections\n-                .observableArrayList(viewModel.abbreviationsProperty().stream()\n-                                              .map(AbbreviationViewModel::getAbbreviationObject).collect(Collectors.toList()));\n+                                                                        .observableArrayList(viewModel.abbreviationsProperty().stream()", "originalCommit": "cd4fd6ff3d51e52cd3da87a00c66c8a028e0ea8d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjIxMTEwMQ==", "url": "https://github.com/JabRef/jabref/pull/6845#discussion_r482211101", "bodyText": "Reformat really necessary?", "author": "koppor", "createdAt": "2020-09-02T16:40:41Z", "path": "src/test/java/org/jabref/gui/journals/ManageJournalAbbreviationsViewModelMixedAbbreviationsTest.java", "diffHunk": "@@ -398,19 +399,19 @@ void testSaveAbbreviationsToFilesCreatesNewFilesWithWrittenAbbreviations() throw\n \n         viewModel.saveJournalAbbreviationFiles();\n         List<String> expected = Arrays.asList(\n-                \"Abbreviations;Abb;Abb\",\n-                \"Test Entry;TE;T\",\n-                \"MoreEntries;ME;M\",\n-                \"JabRefTestEntry;JTE;JTE\");\n+                                              \"Abbreviations;Abb;Abb\",", "originalCommit": "cd4fd6ff3d51e52cd3da87a00c66c8a028e0ea8d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjIxMTEzNg==", "url": "https://github.com/JabRef/jabref/pull/6845#discussion_r482211136", "bodyText": "Reformat really necessary?", "author": "koppor", "createdAt": "2020-09-02T16:40:45Z", "path": "src/test/java/org/jabref/gui/journals/ManageJournalAbbreviationsViewModelMixedAbbreviationsTest.java", "diffHunk": "@@ -398,19 +399,19 @@ void testSaveAbbreviationsToFilesCreatesNewFilesWithWrittenAbbreviations() throw\n \n         viewModel.saveJournalAbbreviationFiles();\n         List<String> expected = Arrays.asList(\n-                \"Abbreviations;Abb;Abb\",\n-                \"Test Entry;TE;T\",\n-                \"MoreEntries;ME;M\",\n-                \"JabRefTestEntry;JTE;JTE\");\n+                                              \"Abbreviations;Abb;Abb\",\n+                                              \"Test Entry;TE;T\",\n+                                              \"MoreEntries;ME;M\",\n+                                              \"JabRefTestEntry;JTE;JTE\");\n         List<String> actual = Files.readAllLines(testFile4Entries, StandardCharsets.UTF_8);\n \n         assertEquals(expected, actual);\n \n         expected = Arrays.asList(\n-                \"EntryEntry;EE;EE\",\n-                \"Abbreviations;Abb;Abb\",\n-                \"Test Entry;TE;T\",\n-                \"SomeOtherEntry;SOE;SOE\");\n+                                 \"EntryEntry;EE;EE\",", "originalCommit": "cd4fd6ff3d51e52cd3da87a00c66c8a028e0ea8d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjIxMTM0MA==", "url": "https://github.com/JabRef/jabref/pull/6845#discussion_r482211340", "bodyText": "Please rename to \"repository\"", "author": "koppor", "createdAt": "2020-09-02T16:41:05Z", "path": "src/test/java/org/jabref/gui/journals/ManageJournalAbbreviationsViewModelNoShortestUniqueAbbreviationsTest.java", "diffHunk": "@@ -46,6 +47,7 @@\n     private Path testFile5EntriesWithDuplicate;\n     private JournalAbbreviationPreferences abbreviationPreferences;\n     private DialogService dialogService;\n+    private final JournalAbbreviationRepository repo = JournalAbbreviationLoader.loadBuiltInRepository();", "originalCommit": "cd4fd6ff3d51e52cd3da87a00c66c8a028e0ea8d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjIxMTQ2Nw==", "url": "https://github.com/JabRef/jabref/pull/6845#discussion_r482211467", "bodyText": "Reformat really necessary?", "author": "koppor", "createdAt": "2020-09-02T16:41:18Z", "path": "src/test/java/org/jabref/logic/journals/AbbreviationsTest.java", "diffHunk": "@@ -17,12 +17,12 @@ void setUp() {\n     @Test\n     void getNextAbbreviationAbbreviatesJournalTitle() {\n         assertEquals(\"2D Mater.\",\n-                repository.getNextAbbreviation(\"2D Materials\").get());\n+                     repository.getNextAbbreviation(\"2D Materials\").get());", "originalCommit": "cd4fd6ff3d51e52cd3da87a00c66c8a028e0ea8d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjIxMTUzNQ==", "url": "https://github.com/JabRef/jabref/pull/6845#discussion_r482211535", "bodyText": "Reformat really necessary?", "author": "koppor", "createdAt": "2020-09-02T16:41:23Z", "path": "src/test/java/org/jabref/logic/journals/AbbreviationsTest.java", "diffHunk": "@@ -17,12 +17,12 @@ void setUp() {\n     @Test\n     void getNextAbbreviationAbbreviatesJournalTitle() {\n         assertEquals(\"2D Mater.\",\n-                repository.getNextAbbreviation(\"2D Materials\").get());\n+                     repository.getNextAbbreviation(\"2D Materials\").get());\n     }\n \n     @Test\n     void getNextAbbreviationConvertsAbbreviationToDotLessAbbreviation() {\n         assertEquals(\"2D Mater\",\n-                repository.getNextAbbreviation(\"2D Mater.\").get());\n+                     repository.getNextAbbreviation(\"2D Mater.\").get());", "originalCommit": "cd4fd6ff3d51e52cd3da87a00c66c8a028e0ea8d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c18b51b27660a2e614a855e27d318afe8eefe498", "url": "https://github.com/JabRef/jabref/commit/c18b51b27660a2e614a855e27d318afe8eefe498", "message": "Fixed whitespaces and removed some unused methods", "committedDate": "2020-09-02T16:52:20Z", "type": "commit"}, {"oid": "b1bab8568d3279bd3e60f8cd5090f0d3114bdcf0", "url": "https://github.com/JabRef/jabref/commit/b1bab8568d3279bd3e60f8cd5090f0d3114bdcf0", "message": "renamings", "committedDate": "2020-09-02T17:44:00Z", "type": "commit"}, {"oid": "bf41b49061c95f664305ab455819fffa46127b1a", "url": "https://github.com/JabRef/jabref/commit/bf41b49061c95f664305ab455819fffa46127b1a", "message": "change codefences", "committedDate": "2020-09-02T17:49:04Z", "type": "commit"}]}