{"pr_number": 6149, "pr_title": "Edition should not start capitalize letter", "pr_createdAt": "2020-03-20T19:52:37Z", "pr_url": "https://github.com/JabRef/jabref/pull/6149", "timeline": [{"oid": "9d41e8e22a2cf2e200ce96d6e96a42c3cd6a31a7", "url": "https://github.com/JabRef/jabref/commit/9d41e8e22a2cf2e200ce96d6e96a42c3cd6a31a7", "message": "Reslve issue #6144 Edition field shouldn't have to start with a capitalized letter (field hint)", "committedDate": "2020-03-20T16:51:24Z", "type": "commit"}, {"oid": "0c64ff2c005d15ea4bf29a6e854414e05884a3d3", "url": "https://github.com/JabRef/jabref/commit/0c64ff2c005d15ea4bf29a6e854414e05884a3d3", "message": "Reslve issue #6144 Edition field shouldn't have to start with a capitalized letter (field hint)\nTest", "committedDate": "2020-03-20T18:55:20Z", "type": "commit"}, {"oid": "860c0597f9383906e206090b38a910ecc486ff7b", "url": "https://github.com/JabRef/jabref/commit/860c0597f9383906e206090b38a910ecc486ff7b", "message": "Resolve issue #6144 Edition field shouldn't have to start with a capitalized letter (field hint)\n\nupdate changelog", "committedDate": "2020-03-20T19:04:45Z", "type": "commit"}, {"oid": "763287185a66791c10b76092fe24e840edb26b15", "url": "https://github.com/JabRef/jabref/commit/763287185a66791c10b76092fe24e840edb26b15", "message": "Merge branch 'master' of https://github.com/JabRef/jabref into edition-should-not-start-capitalize-letter", "committedDate": "2020-03-20T19:40:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzMTcyOQ==", "url": "https://github.com/JabRef/jabref/pull/6149#discussion_r396031729", "bodyText": "Please follow our code style: Space after if, always use braces.\nIn case I understood the code correctly, this statement is a fail-fast one. In this case, I would change the code to\nif (isFirstCharDigit(value) {\n  return Optional.empty();\n}", "author": "koppor", "createdAt": "2020-03-21T21:43:22Z", "path": "src/main/java/org/jabref/logic/integrity/EditionChecker.java", "diffHunk": "@@ -53,6 +53,7 @@ public EditionChecker(BibDatabaseContext bibDatabaseContext, boolean allowIntege\n \n         //BibTeX\n         if (!bibDatabaseContextEdition.isBiblatexMode()) {\n+           if(!isFirstCharDigit(value))", "originalCommit": "763287185a66791c10b76092fe24e840edb26b15", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM3MzU0Nw==", "url": "https://github.com/JabRef/jabref/pull/6149#discussion_r396373547", "bodyText": "I tried your solution, but it does skip the method execution", "author": "fabgio", "createdAt": "2020-03-23T11:12:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzMTcyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzMTc3NA==", "url": "https://github.com/JabRef/jabref/pull/6149#discussion_r396031774", "bodyText": "Please no global variable in tests - the variables should be as local as possible.", "author": "koppor", "createdAt": "2020-03-21T21:43:59Z", "path": "src/test/java/org/jabref/logic/integrity/EditionCheckerTest.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package org.jabref.logic.integrity;\n+\n+import org.jabref.model.database.BibDatabaseContext;\n+import org.junit.jupiter.api.Test;\n+\n+\n+\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+\n+public class EditionCheckerTest {\n+     boolean allowIntegerEdition;", "originalCommit": "763287185a66791c10b76092fe24e840edb26b15", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjEyNzg2OA==", "url": "https://github.com/JabRef/jabref/pull/6149#discussion_r396127868", "bodyText": "Reduced the scope  to local", "author": "fabgio", "createdAt": "2020-03-22T18:51:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzMTc3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzMTc4Ng==", "url": "https://github.com/JabRef/jabref/pull/6149#discussion_r396031786", "bodyText": "Please add a test for , false.", "author": "koppor", "createdAt": "2020-03-21T21:44:14Z", "path": "src/test/java/org/jabref/logic/integrity/EditionCheckerTest.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package org.jabref.logic.integrity;\n+\n+import org.jabref.model.database.BibDatabaseContext;\n+import org.junit.jupiter.api.Test;\n+\n+\n+\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+\n+public class EditionCheckerTest {\n+     boolean allowIntegerEdition;\n+\n+    @Test\n+    void isFirstCharacterANumber(){\n+        var bibDatabaseContextEdition=new BibDatabaseContext();\n+        var editionChecker=new EditionChecker(bibDatabaseContextEdition,allowIntegerEdition);", "originalCommit": "763287185a66791c10b76092fe24e840edb26b15", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU0MDYyOQ==", "url": "https://github.com/JabRef/jabref/pull/6149#discussion_r396540629", "bodyText": "Added a test for false", "author": "fabgio", "createdAt": "2020-03-23T15:32:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzMTc4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzMTg0Mg==", "url": "https://github.com/JabRef/jabref/pull/6149#discussion_r396031842", "bodyText": "Combine this and the next line to:\nassertTrue(editionChecker.isFirstCharDigit(stringWithNumber));`\nNo need for text outputs in the assert statements.", "author": "koppor", "createdAt": "2020-03-21T21:45:11Z", "path": "src/test/java/org/jabref/logic/integrity/EditionCheckerTest.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package org.jabref.logic.integrity;\n+\n+import org.jabref.model.database.BibDatabaseContext;\n+import org.junit.jupiter.api.Test;\n+\n+\n+\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+\n+public class EditionCheckerTest {\n+     boolean allowIntegerEdition;\n+\n+    @Test\n+    void isFirstCharacterANumber(){\n+        var bibDatabaseContextEdition=new BibDatabaseContext();\n+        var editionChecker=new EditionChecker(bibDatabaseContextEdition,allowIntegerEdition);\n+        var stringWithNumber=\"0HelloWorld\";\n+        boolean flag=editionChecker.isFirstCharDigit(stringWithNumber);", "originalCommit": "763287185a66791c10b76092fe24e840edb26b15", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU0MDkxMg==", "url": "https://github.com/JabRef/jabref/pull/6149#discussion_r396540912", "bodyText": "Done", "author": "fabgio", "createdAt": "2020-03-23T15:32:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzMTg0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzMTg1Nw==", "url": "https://github.com/JabRef/jabref/pull/6149#discussion_r396031857", "bodyText": "Please follow our code style -- no multiple empty lines.", "author": "koppor", "createdAt": "2020-03-21T21:45:27Z", "path": "src/test/java/org/jabref/logic/integrity/EditionCheckerTest.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package org.jabref.logic.integrity;\n+\n+import org.jabref.model.database.BibDatabaseContext;\n+import org.junit.jupiter.api.Test;\n+\n+", "originalCommit": "763287185a66791c10b76092fe24e840edb26b15", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ5Mjc1MQ==", "url": "https://github.com/JabRef/jabref/pull/6149#discussion_r396492751", "bodyText": "Fixed it", "author": "fabgio", "createdAt": "2020-03-23T14:29:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzMTg1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzMTg5MA==", "url": "https://github.com/JabRef/jabref/pull/6149#discussion_r396031890", "bodyText": "Please no empty line before the method ends.", "author": "koppor", "createdAt": "2020-03-21T21:45:40Z", "path": "src/test/java/org/jabref/logic/integrity/EditionCheckerTest.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package org.jabref.logic.integrity;\n+\n+import org.jabref.model.database.BibDatabaseContext;\n+import org.junit.jupiter.api.Test;\n+\n+\n+\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+\n+public class EditionCheckerTest {\n+     boolean allowIntegerEdition;\n+\n+    @Test\n+    void isFirstCharacterANumber(){\n+        var bibDatabaseContextEdition=new BibDatabaseContext();\n+        var editionChecker=new EditionChecker(bibDatabaseContextEdition,allowIntegerEdition);\n+        var stringWithNumber=\"0HelloWorld\";\n+        boolean flag=editionChecker.isFirstCharDigit(stringWithNumber);\n+        assertTrue(flag,\"check for true\");\n+", "originalCommit": "763287185a66791c10b76092fe24e840edb26b15", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ5MzMyNA==", "url": "https://github.com/JabRef/jabref/pull/6149#discussion_r396493324", "bodyText": "Fixed it", "author": "fabgio", "createdAt": "2020-03-23T14:30:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzMTg5MA=="}], "type": "inlineReview"}, {"oid": "85df8056025cc2e23aece0ab32e2e9309fdaad5c", "url": "https://github.com/JabRef/jabref/commit/85df8056025cc2e23aece0ab32e2e9309fdaad5c", "message": "Add issue number\nRemove space", "committedDate": "2020-03-22T16:16:54Z", "type": "commit"}, {"oid": "5d1e01d4ad7025b8812b8b024f6b53616f79269c", "url": "https://github.com/JabRef/jabref/commit/5d1e01d4ad7025b8812b8b024f6b53616f79269c", "message": "Add issue number\nRemove space", "committedDate": "2020-03-22T16:38:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE0ODk1NQ==", "url": "https://github.com/JabRef/jabref/pull/6149#discussion_r396148955", "bodyText": "Please empty line before.", "author": "koppor", "createdAt": "2020-03-22T22:32:01Z", "path": "src/main/java/org/jabref/logic/integrity/EditionChecker.java", "diffHunk": "@@ -66,4 +67,9 @@ public EditionChecker(BibDatabaseContext bibDatabaseContext, boolean allowIntege\n \n         return Optional.empty();\n     }\n+    boolean isFirstCharDigit (String input){", "originalCommit": "5d1e01d4ad7025b8812b8b024f6b53616f79269c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ5NjU0OA==", "url": "https://github.com/JabRef/jabref/pull/6149#discussion_r396496548", "bodyText": "Done", "author": "fabgio", "createdAt": "2020-03-23T14:34:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE0ODk1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE0ODk4OQ==", "url": "https://github.com/JabRef/jabref/pull/6149#discussion_r396148989", "bodyText": "There must be a different way. Can't the first letter of a string be accessed? Doesn't Google Guava offer a method for that?", "author": "koppor", "createdAt": "2020-03-22T22:32:24Z", "path": "src/main/java/org/jabref/logic/integrity/EditionChecker.java", "diffHunk": "@@ -66,4 +67,9 @@ public EditionChecker(BibDatabaseContext bibDatabaseContext, boolean allowIntege\n \n         return Optional.empty();\n     }\n+    boolean isFirstCharDigit (String input){\n+        char[] array = input.toCharArray();\n+        return Character.isDigit(array[0]);", "originalCommit": "5d1e01d4ad7025b8812b8b024f6b53616f79269c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUwNDI2Nw==", "url": "https://github.com/JabRef/jabref/pull/6149#discussion_r396504267", "bodyText": "There is indeed a simpler way: string,charAt(0)\nhttps://beginnersbook.com/2013/12/java-string-charat-method-example/", "author": "Siedlerchr", "createdAt": "2020-03-23T14:45:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE0ODk4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUyNjA1OA==", "url": "https://github.com/JabRef/jabref/pull/6149#discussion_r396526058", "bodyText": "Yes in Guava the the most similar metod is CharMetcher.digit()\nhttps://guava.dev/releases/snapshot/api/docs/com/google/common/base/CharMatcher.html#digit--\nwhich is deprecated", "author": "fabgio", "createdAt": "2020-03-23T15:13:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE0ODk4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUyNzg0MA==", "url": "https://github.com/JabRef/jabref/pull/6149#discussion_r396527840", "bodyText": "Simple use  Character.isDigit(input.chartAt(0)) that is the easiest solution", "author": "Siedlerchr", "createdAt": "2020-03-23T15:15:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE0ODk4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg3MDY1NA==", "url": "https://github.com/JabRef/jabref/pull/6149#discussion_r399870654", "bodyText": "This is not done. I will do it manually after the merge.", "author": "koppor", "createdAt": "2020-03-29T23:34:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE0ODk4OQ=="}], "type": "inlineReview"}, {"oid": "c19968d35725095b0cf08a728117719aa22b8681", "url": "https://github.com/JabRef/jabref/commit/c19968d35725095b0cf08a728117719aa22b8681", "message": "[WIP] Do some fixes on code style", "committedDate": "2020-03-23T15:53:59Z", "type": "commit"}, {"oid": "3c546362f8d2a28084405701aefba23743436fdd", "url": "https://github.com/JabRef/jabref/commit/3c546362f8d2a28084405701aefba23743436fdd", "message": "Merge branch 'master' of https://github.com/JabRef/jabref into edition-should-not-start-capitalize-letter", "committedDate": "2020-03-24T09:43:04Z", "type": "commit"}, {"oid": "b72975fe61837124f052af7024f6fc975111bd24", "url": "https://github.com/JabRef/jabref/commit/b72975fe61837124f052af7024f6fc975111bd24", "message": "Restore", "committedDate": "2020-03-24T15:07:17Z", "type": "commit"}, {"oid": "e912bacd78ad24049474ebd759fb09baeb4617eb", "url": "https://github.com/JabRef/jabref/commit/e912bacd78ad24049474ebd759fb09baeb4617eb", "message": "Merge branch 'master' of https://github.com/JabRef/jabref into edition-should-not-start-capitalize-letter", "committedDate": "2020-03-24T15:21:55Z", "type": "commit"}, {"oid": "d59bc41fb2caae72fbfda19e3f5a822e107450f2", "url": "https://github.com/JabRef/jabref/commit/d59bc41fb2caae72fbfda19e3f5a822e107450f2", "message": "[WIP]Adjust code style", "committedDate": "2020-03-24T17:24:25Z", "type": "commit"}, {"oid": "649f327a718f067da8e68c70fec98a15f4f6a600", "url": "https://github.com/JabRef/jabref/commit/649f327a718f067da8e68c70fec98a15f4f6a600", "message": "[[WIP]Semplify if statement]", "committedDate": "2020-03-27T17:32:48Z", "type": "commit"}, {"oid": "c1a0b1ace296e31e4f7f4356d655a590166b339c", "url": "https://github.com/JabRef/jabref/commit/c1a0b1ace296e31e4f7f4356d655a590166b339c", "message": "[[WIP]Adjust code style", "committedDate": "2020-03-28T21:18:55Z", "type": "commit"}]}