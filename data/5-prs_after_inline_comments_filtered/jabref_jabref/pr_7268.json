{"pr_number": 7268, "pr_title": "Added eye candy in entry editor context menus", "pr_createdAt": "2020-12-28T22:46:22Z", "pr_url": "https://github.com/JabRef/jabref/pull/7268", "timeline": [{"oid": "2a88aa60c4e9e416e632405b6b2b70ac9cb83e4f", "url": "https://github.com/JabRef/jabref/commit/2a88aa60c4e9e416e632405b6b2b70ac9cb83e4f", "message": "Added eye candy in entry editor context menus", "committedDate": "2020-12-28T22:42:20Z", "type": "commit"}, {"oid": "fcd356c37a2d574ccafb653d883ae04964818277", "url": "https://github.com/JabRef/jabref/commit/fcd356c37a2d574ccafb653d883ae04964818277", "message": "Refactor ProtectedTermsMenu", "committedDate": "2020-12-31T20:47:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDY4OTI0MQ==", "url": "https://github.com/JabRef/jabref/pull/7268#discussion_r550689241", "bodyText": "The SELECT_ALL case was originally disabled, if SHOW_HANDLES was false. Why?", "author": "calixtus", "createdAt": "2020-12-31T20:53:09Z", "path": "src/main/java/org/jabref/gui/fieldeditors/contextmenu/EditorContextAction.java", "diffHunk": "@@ -0,0 +1,95 @@\n+package org.jabref.gui.fieldeditors.contextmenu;\n+\n+import java.util.List;\n+\n+import javafx.beans.binding.Bindings;\n+import javafx.beans.binding.BooleanBinding;\n+import javafx.beans.property.BooleanProperty;\n+import javafx.scene.control.MenuItem;\n+import javafx.scene.control.PasswordField;\n+import javafx.scene.control.TextInputControl;\n+import javafx.scene.input.Clipboard;\n+\n+import org.jabref.gui.actions.ActionFactory;\n+import org.jabref.gui.actions.SimpleCommand;\n+import org.jabref.gui.actions.StandardActions;\n+import org.jabref.gui.keyboard.KeyBindingRepository;\n+import org.jabref.gui.util.BindingsHelper;\n+import org.jabref.logic.util.OS;\n+\n+import com.sun.javafx.scene.control.Properties;\n+\n+public class EditorContextAction extends SimpleCommand {\n+\n+    private static final boolean SHOW_HANDLES = Properties.IS_TOUCH_SUPPORTED && !OS.OS_X;\n+\n+    private final StandardActions command;\n+    private final TextInputControl textInputControl;\n+\n+    public EditorContextAction(StandardActions command, TextInputControl textInputControl) {\n+        this.command = command;\n+        this.textInputControl = textInputControl;\n+\n+        BooleanProperty editableBinding = textInputControl.editableProperty();\n+        BooleanBinding hasTextBinding = Bindings.createBooleanBinding(() -> textInputControl.getLength() > 0, textInputControl.textProperty());\n+        BooleanBinding hasStringInClipboardBinding = (BooleanBinding) BindingsHelper.constantOf(Clipboard.getSystemClipboard().hasString());\n+        BooleanBinding hasSelectionBinding = Bindings.createBooleanBinding(() -> textInputControl.getSelection().getLength() > 0, textInputControl.selectionProperty());\n+        BooleanBinding allSelectedBinding = Bindings.createBooleanBinding(() -> textInputControl.getSelection().getLength() == textInputControl.getLength());\n+        BooleanBinding maskTextBinding = (BooleanBinding) BindingsHelper.constantOf(textInputControl instanceof PasswordField); // (maskText(\"A\") != \"A\");\n+\n+        if (SHOW_HANDLES) {\n+            this.executable.bind(\n+                    switch (command) {\n+                        case COPY -> editableBinding.and(maskTextBinding.not()).and(hasSelectionBinding);\n+                        case CUT -> maskTextBinding.not().and(hasSelectionBinding);\n+                        case PASTE -> editableBinding.and(hasStringInClipboardBinding);\n+                        case DELETE -> editableBinding.and(hasSelectionBinding);\n+                        case SELECT_ALL -> hasTextBinding.and(allSelectedBinding.not());\n+                        default -> BindingsHelper.constantOf(true);\n+                    });\n+        } else {\n+            this.executable.bind(\n+                    switch (command) {\n+                        case COPY -> editableBinding.and(maskTextBinding.not()).and(hasSelectionBinding);\n+                        case CUT -> maskTextBinding.not().and(hasSelectionBinding);\n+                        case PASTE -> editableBinding.and(hasStringInClipboardBinding);\n+                        case DELETE -> editableBinding.and(hasSelectionBinding);\n+                        case SELECT_ALL -> hasTextBinding.and(allSelectedBinding.not()); // why was this disabled before?\n+                        default -> BindingsHelper.constantOf(true);\n+                    });\n+        }", "originalCommit": "fcd356c37a2d574ccafb653d883ae04964818277", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDc3NjI4MQ==", "url": "https://github.com/JabRef/jabref/pull/7268#discussion_r550776281", "bodyText": "No idea why...", "author": "tobiasdiez", "createdAt": "2021-01-01T15:01:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDY4OTI0MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDY4OTQ5Mw==", "url": "https://github.com/JabRef/jabref/pull/7268#discussion_r550689493", "bodyText": "What does that property mean? Is this somehow related to the select all option above?", "author": "calixtus", "createdAt": "2020-12-31T20:54:21Z", "path": "src/main/java/org/jabref/gui/fieldeditors/contextmenu/EditorContextAction.java", "diffHunk": "@@ -0,0 +1,95 @@\n+package org.jabref.gui.fieldeditors.contextmenu;\n+\n+import java.util.List;\n+\n+import javafx.beans.binding.Bindings;\n+import javafx.beans.binding.BooleanBinding;\n+import javafx.beans.property.BooleanProperty;\n+import javafx.scene.control.MenuItem;\n+import javafx.scene.control.PasswordField;\n+import javafx.scene.control.TextInputControl;\n+import javafx.scene.input.Clipboard;\n+\n+import org.jabref.gui.actions.ActionFactory;\n+import org.jabref.gui.actions.SimpleCommand;\n+import org.jabref.gui.actions.StandardActions;\n+import org.jabref.gui.keyboard.KeyBindingRepository;\n+import org.jabref.gui.util.BindingsHelper;\n+import org.jabref.logic.util.OS;\n+\n+import com.sun.javafx.scene.control.Properties;\n+\n+public class EditorContextAction extends SimpleCommand {\n+\n+    private static final boolean SHOW_HANDLES = Properties.IS_TOUCH_SUPPORTED && !OS.OS_X;\n+\n+    private final StandardActions command;\n+    private final TextInputControl textInputControl;\n+\n+    public EditorContextAction(StandardActions command, TextInputControl textInputControl) {\n+        this.command = command;\n+        this.textInputControl = textInputControl;\n+\n+        BooleanProperty editableBinding = textInputControl.editableProperty();\n+        BooleanBinding hasTextBinding = Bindings.createBooleanBinding(() -> textInputControl.getLength() > 0, textInputControl.textProperty());\n+        BooleanBinding hasStringInClipboardBinding = (BooleanBinding) BindingsHelper.constantOf(Clipboard.getSystemClipboard().hasString());\n+        BooleanBinding hasSelectionBinding = Bindings.createBooleanBinding(() -> textInputControl.getSelection().getLength() > 0, textInputControl.selectionProperty());\n+        BooleanBinding allSelectedBinding = Bindings.createBooleanBinding(() -> textInputControl.getSelection().getLength() == textInputControl.getLength());\n+        BooleanBinding maskTextBinding = (BooleanBinding) BindingsHelper.constantOf(textInputControl instanceof PasswordField); // (maskText(\"A\") != \"A\");\n+\n+        if (SHOW_HANDLES) {\n+            this.executable.bind(\n+                    switch (command) {\n+                        case COPY -> editableBinding.and(maskTextBinding.not()).and(hasSelectionBinding);\n+                        case CUT -> maskTextBinding.not().and(hasSelectionBinding);\n+                        case PASTE -> editableBinding.and(hasStringInClipboardBinding);\n+                        case DELETE -> editableBinding.and(hasSelectionBinding);\n+                        case SELECT_ALL -> hasTextBinding.and(allSelectedBinding.not());\n+                        default -> BindingsHelper.constantOf(true);\n+                    });\n+        } else {\n+            this.executable.bind(\n+                    switch (command) {\n+                        case COPY -> editableBinding.and(maskTextBinding.not()).and(hasSelectionBinding);\n+                        case CUT -> maskTextBinding.not().and(hasSelectionBinding);\n+                        case PASTE -> editableBinding.and(hasStringInClipboardBinding);\n+                        case DELETE -> editableBinding.and(hasSelectionBinding);\n+                        case SELECT_ALL -> hasTextBinding.and(allSelectedBinding.not()); // why was this disabled before?\n+                        default -> BindingsHelper.constantOf(true);\n+                    });\n+        }\n+    }\n+\n+    @Override\n+    public void execute() {\n+        switch (command) {\n+            case COPY -> textInputControl.copy();\n+            case CUT -> textInputControl.cut();\n+            case PASTE -> textInputControl.paste();\n+            case DELETE -> textInputControl.deleteText(textInputControl.getSelection());\n+            case SELECT_ALL -> textInputControl.selectAll();\n+        }\n+        textInputControl.requestFocus();\n+    }\n+\n+    /**\n+     * Returns the default context menu items (except undo/redo)\n+     */\n+    public static List<MenuItem> getDefaultContextMenuItems(TextInputControl textInputControl,\n+                                                            KeyBindingRepository keyBindingRepository) {\n+        ActionFactory factory = new ActionFactory(keyBindingRepository);\n+\n+        MenuItem selectAllMenuItem = factory.createMenuItem(StandardActions.SELECT_ALL,\n+                new EditorContextAction(StandardActions.SELECT_ALL, textInputControl));\n+        if (SHOW_HANDLES) {\n+            selectAllMenuItem.getProperties().put(\"refreshMenu\", Boolean.TRUE); // what does that mean?", "originalCommit": "fcd356c37a2d574ccafb653d883ae04964818277", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDc3NjM5MQ==", "url": "https://github.com/JabRef/jabref/pull/7268#discussion_r550776391", "bodyText": "Also no idea here. I think, I copied these things from the original JavaFX sources.", "author": "tobiasdiez", "createdAt": "2021-01-01T15:03:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDY4OTQ5Mw=="}], "type": "inlineReview"}, {"oid": "4905d4370f5956fd9177aaa76d260a4b040422df", "url": "https://github.com/JabRef/jabref/commit/4905d4370f5956fd9177aaa76d260a4b040422df", "message": "Rafactored small cleanups", "committedDate": "2021-01-03T16:29:47Z", "type": "commit"}, {"oid": "6eb8941a689f52ad6f7a6b91cc4bd82f2ab215a0", "url": "https://github.com/JabRef/jabref/commit/6eb8941a689f52ad6f7a6b91cc4bd82f2ab215a0", "message": "Merge remote-tracking branch 'upstream/master' into entry-editor-eye-candy", "committedDate": "2021-01-03T16:33:15Z", "type": "commit"}, {"oid": "178b71b3122c22fb4f420f9c0736a57994b2694d", "url": "https://github.com/JabRef/jabref/commit/178b71b3122c22fb4f420f9c0736a57994b2694d", "message": "CHANGELOG.md and l10n", "committedDate": "2021-01-03T16:39:11Z", "type": "commit"}]}