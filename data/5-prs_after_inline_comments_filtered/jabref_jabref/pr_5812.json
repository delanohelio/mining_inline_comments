{"pr_number": 5812, "pr_title": "Batch DBMSProcessor fields insertion", "pr_createdAt": "2020-01-02T17:00:22Z", "pr_url": "https://github.com/JabRef/jabref/pull/5812", "timeline": [{"oid": "1348c2f48d95b72ff6caefcac48116fb8bab5829", "url": "https://github.com/JabRef/jabref/commit/1348c2f48d95b72ff6caefcac48116fb8bab5829", "message": "Initial changes to DBMSProcessor for insert entry functionality", "committedDate": "2020-01-02T13:34:16Z", "type": "commit"}, {"oid": "7e4e76f99bc7327e4a8955f0eab7a76a69e1ed86", "url": "https://github.com/JabRef/jabref/commit/7e4e76f99bc7327e4a8955f0eab7a76a69e1ed86", "message": "Added unit test for inserting multiple entries, with multiple of BibEntry", "committedDate": "2020-01-02T16:50:24Z", "type": "commit"}, {"oid": "8cf40b474eb30ced745cf588e4c68ec43e2856b6", "url": "https://github.com/JabRef/jabref/commit/8cf40b474eb30ced745cf588e4c68ec43e2856b6", "message": "Remove StandardOut", "committedDate": "2020-01-02T16:58:47Z", "type": "commit"}, {"oid": "931ccad7ab27f0340b7ee06073dca9b76ecbf63b", "url": "https://github.com/JabRef/jabref/commit/931ccad7ab27f0340b7ee06073dca9b76ecbf63b", "message": "Merge branch 'master' into batch_DBMSProcessor_fields", "committedDate": "2020-01-02T17:12:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzk4MTcyNQ==", "url": "https://github.com/JabRef/jabref/pull/5812#discussion_r363981725", "bodyText": "I think, this should be \"Convert\" instead of \"Coerce\"?", "author": "koppor", "createdAt": "2020-01-07T22:25:16Z", "path": "src/main/java/org/jabref/logic/shared/DBMSProcessor.java", "diffHunk": "@@ -213,25 +213,30 @@ private boolean checkForBibEntryExistence(BibEntry bibEntry) {\n     private void insertIntoFieldTable(BibEntry bibEntry) {\n         try {\n             // Inserting into FIELD table\n-            for (Field field : bibEntry.getFields()) {\n-                StringBuilder insertFieldQuery = new StringBuilder()\n-                        .append(\"INSERT INTO \")\n-                        .append(escape(\"FIELD\"))\n-                        .append(\"(\")\n-                        .append(escape(\"ENTRY_SHARED_ID\"))\n-                        .append(\", \")\n-                        .append(escape(\"NAME\"))\n-                        .append(\", \")\n-                        .append(escape(\"VALUE\"))\n-                        .append(\") VALUES(?, ?, ?)\");\n-\n-                try (PreparedStatement preparedFieldStatement = connection.prepareStatement(insertFieldQuery.toString())) {\n+            // Coerce to ArrayList in order to use List.get()", "originalCommit": "931ccad7ab27f0340b7ee06073dca9b76ecbf63b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzk4MTgyNQ==", "url": "https://github.com/JabRef/jabref/pull/5812#discussion_r363981825", "bodyText": "Can't we use the repeat() thing there, too?", "author": "koppor", "createdAt": "2020-01-07T22:25:32Z", "path": "src/main/java/org/jabref/logic/shared/DBMSProcessor.java", "diffHunk": "@@ -213,25 +213,30 @@ private boolean checkForBibEntryExistence(BibEntry bibEntry) {\n     private void insertIntoFieldTable(BibEntry bibEntry) {\n         try {\n             // Inserting into FIELD table\n-            for (Field field : bibEntry.getFields()) {\n-                StringBuilder insertFieldQuery = new StringBuilder()\n-                        .append(\"INSERT INTO \")\n-                        .append(escape(\"FIELD\"))\n-                        .append(\"(\")\n-                        .append(escape(\"ENTRY_SHARED_ID\"))\n-                        .append(\", \")\n-                        .append(escape(\"NAME\"))\n-                        .append(\", \")\n-                        .append(escape(\"VALUE\"))\n-                        .append(\") VALUES(?, ?, ?)\");\n-\n-                try (PreparedStatement preparedFieldStatement = connection.prepareStatement(insertFieldQuery.toString())) {\n+            // Coerce to ArrayList in order to use List.get()\n+            List<Field> fields = new ArrayList<>(bibEntry.getFields());\n+            StringBuilder insertFieldQuery = new StringBuilder()\n+                    .append(\"INSERT INTO \")\n+                    .append(escape(\"FIELD\"))\n+                    .append(\"(\")\n+                    .append(escape(\"ENTRY_SHARED_ID\"))\n+                    .append(\", \")\n+                    .append(escape(\"NAME\"))\n+                    .append(\", \")\n+                    .append(escape(\"VALUE\"))\n+                    .append(\") VALUES(?, ?, ?)\");\n+            // Number of commas is fields.size() - 1", "originalCommit": "931ccad7ab27f0340b7ee06073dca9b76ecbf63b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzk4MjA0Mw==", "url": "https://github.com/JabRef/jabref/pull/5812#discussion_r363982043", "bodyText": "\"eventually\" is a false friend. Please translate it to \"possibly\" or \"maybe\"", "author": "koppor", "createdAt": "2020-01-07T22:26:02Z", "path": "src/test/java/org/jabref/logic/shared/DBMSProcessorTest.java", "diffHunk": "@@ -95,6 +95,59 @@ void testInsertEntry() throws SQLException {\n         assertEquals(expectedFieldMap, actualFieldMap);\n     }\n \n+    @Test\n+    void testInsertMultipleEntries() throws SQLException {\n+        BibEntry firstEntry = getBibEntryExample();\n+        String firstId = firstEntry.getId();\n+        BibEntry secondEntry = getBibEntryExample2();\n+        String secondId = secondEntry.getId();\n+        BibEntry thirdEntry = getBibEntryExample3();\n+        String thirdId = thirdEntry.getId();\n+\n+        // This must eventually be changed to insertEntries() once that method is implemented", "originalCommit": "931ccad7ab27f0340b7ee06073dca9b76ecbf63b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzk4MjIxMw==", "url": "https://github.com/JabRef/jabref/pull/5812#discussion_r363982213", "bodyText": "Please give the method a more meaningful name. For instance getShelahBibEntry.", "author": "koppor", "createdAt": "2020-01-07T22:26:31Z", "path": "src/test/java/org/jabref/logic/shared/DBMSProcessorTest.java", "diffHunk": "@@ -311,6 +364,24 @@ private static BibEntry getBibEntryExample() {\n                 .withCiteKey(\"nanoproc1994\");\n     }\n \n+    private static BibEntry getBibEntryExample2() {", "originalCommit": "931ccad7ab27f0340b7ee06073dca9b76ecbf63b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}