{"pr_number": 739, "pr_title": "PHOENIX-5788 Handling deletes on non-existing rows", "pr_createdAt": "2020-03-21T21:38:52Z", "pr_url": "https://github.com/apache/phoenix/pull/739", "timeline": [{"oid": "f0363b3ca4ffe653f44306d817d337553e33efe1", "url": "https://github.com/apache/phoenix/commit/f0363b3ca4ffe653f44306d817d337553e33efe1", "message": "PHOENIX-5788 Handling deletes on non-existing rows", "committedDate": "2020-03-21T02:08:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIyMjI5NQ==", "url": "https://github.com/apache/phoenix/pull/739#discussion_r396222295", "bodyText": "@kadirozde Are the immutable table/indexes inherently doing these delete mutations on both data and index since they don't check for presence anyways?", "author": "priyankporwal", "createdAt": "2020-03-23T05:38:51Z", "path": "phoenix-core/src/main/java/org/apache/phoenix/hbase/index/IndexRegionObserver.java", "diffHunk": "@@ -517,6 +517,11 @@ private void applyPendingDeleteMutations(MiniBatchOperationInProgress<Mutation>\n             }\n             Put nextDataRowState = dataRowState.getSecond();\n             if (nextDataRowState == null) {\n+                if (dataRowState.getFirst() == null) {", "originalCommit": "f0363b3ca4ffe653f44306d817d337553e33efe1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIyOTY0Mw==", "url": "https://github.com/apache/phoenix/pull/739#discussion_r396229643", "bodyText": "Initially, I thought deleting a non-existing row would lead to false invalid row detection and filed this JIRA. Later I found that actually deleting a non-existing row does not confuse the IndexTool verification. This PR is just not to confuse humans when they inspect the raw mutations for mutable data and index tables as they would see a delete mutation on the data table and but no corresponding mutation on the index table. The check for non-existing row is done on the server side and thus it is not for immutable tables as you observed. The potential confusion for immutable table will be still there. I thought we should at least remove this possible confusion for mutable tables.", "author": "kadirozde", "createdAt": "2020-03-23T06:11:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIyMjI5NQ=="}], "type": "inlineReview"}]}