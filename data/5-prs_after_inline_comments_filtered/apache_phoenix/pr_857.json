{"pr_number": 857, "pr_title": "PHOENIX-5881 - Port PHOENIX-5645 (MaxLookbackAge) to 5.x", "pr_createdAt": "2020-08-14T17:26:26Z", "pr_url": "https://github.com/apache/phoenix/pull/857", "timeline": [{"oid": "69e0550c30a87df82d350961b7512004077c8a88", "url": "https://github.com/apache/phoenix/commit/69e0550c30a87df82d350961b7512004077c8a88", "message": "PHOENIX-5881 - Port PHOENIX-5645 (MaxLookbackAge) to 5.x", "committedDate": "2020-08-17T20:17:58Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTkyNjcyOQ==", "url": "https://github.com/apache/phoenix/pull/857#discussion_r471926729", "bodyText": "This doesn't seem to be referenced anywhere.", "author": "stoty", "createdAt": "2020-08-18T05:41:27Z", "path": "phoenix-core/src/main/java/org/apache/hadoop/hbase/regionserver/ScanInfoUtil.java", "diffHunk": "@@ -0,0 +1,24 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase.regionserver;\n+\n+import org.apache.hadoop.conf.Configuration;\n+\n+public class ScanInfoUtil {", "originalCommit": "69e0550c30a87df82d350961b7512004077c8a88", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTkyODEzNg==", "url": "https://github.com/apache/phoenix/pull/857#discussion_r471928136", "bodyText": "This doesn't seem to do anything since the subclassing.", "author": "stoty", "createdAt": "2020-08-18T05:45:54Z", "path": "phoenix-core/src/main/java/org/apache/phoenix/coprocessor/BaseScannerRegionObserver.java", "diffHunk": "@@ -367,4 +374,16 @@ RegionScanner getWrappedScanner(final ObserverContext<RegionCoprocessorEnvironme\n                 dataRegion, indexMaintainer, null, viewConstants, null, null, projector, ptr, useQualiferAsListIndex);\n     }\n \n+    @Override\n+    public void preStoreScannerOpen(ObserverContext<RegionCoprocessorEnvironment> ctx, Store store,", "originalCommit": "69e0550c30a87df82d350961b7512004077c8a88", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTkyODI4NQ==", "url": "https://github.com/apache/phoenix/pull/857#discussion_r471928285", "bodyText": "Nit: indent like above in both files?", "author": "stoty", "createdAt": "2020-08-18T05:46:23Z", "path": "phoenix-hbase-compat-2.2.1/src/main/java/org/apache/phoenix/compat/hbase/HbaseCompatCapabilities.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.phoenix.compat.hbase;\n+\n+import org.apache.hadoop.conf.Configuration;\n+\n+public class HbaseCompatCapabilities {\n+\n+    public static boolean isMaxLookbackTimeSupported() {\n+        return false;\n+    }\n+\n+    //In HBase 2.1 and 2.2, a lookback query won't return any results if covered by a future delete\n+    public static boolean isLookbackBeyondDeletesSupported() { return false; }", "originalCommit": "69e0550c30a87df82d350961b7512004077c8a88", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzMxMDA4NQ==", "url": "https://github.com/apache/phoenix/pull/857#discussion_r473310085", "bodyText": "nit: would be good in understanding if s -> ms conversion happens outside of if condition.", "author": "swaroopak", "createdAt": "2020-08-19T20:49:32Z", "path": "phoenix-core/src/main/java/org/apache/phoenix/compile/QueryCompiler.java", "diffHunk": "@@ -172,6 +178,28 @@ public QueryPlan compile() throws SQLException{\n         return plan;\n     }\n \n+    private void verifySCN() throws SQLException {\n+        if (!HbaseCompatCapabilities.isMaxLookbackTimeSupported()) {\n+            return;\n+        }\n+        PhoenixConnection conn = statement.getConnection();\n+        Long scn = conn.getSCN();\n+        if (scn == null) {\n+            return;\n+        }\n+        ColumnResolver resolver =\n+            FromCompiler.getResolverForQuery(select, conn);\n+        int maxLookBackAge = conn.getQueryServices().\n+            getConfiguration().getInt(CompatBaseScannerRegionObserver.PHOENIX_MAX_LOOKBACK_AGE_CONF_KEY,\n+            CompatBaseScannerRegionObserver.DEFAULT_PHOENIX_MAX_LOOKBACK_AGE);\n+        long now = EnvironmentEdgeManager.currentTimeMillis();\n+        if (maxLookBackAge > 0 && now - maxLookBackAge * 1000L > scn){", "originalCommit": "09694033b829e80597d01cea695a784c4d66ba85", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzM0ODk3Ng==", "url": "https://github.com/apache/phoenix/pull/857#discussion_r473348976", "bodyText": "Not sure I follow? The configuration property is in seconds (to correspond with HBase TTL, which is also in seconds), but we convert to ms in the if-block to compare with the current timestamp.", "author": "gjacoby126", "createdAt": "2020-08-19T21:39:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzMxMDA4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzM1MTk5Ng==", "url": "https://github.com/apache/phoenix/pull/857#discussion_r473351996", "bodyText": "maxLookBackAge*1000 can be stored into a variable like done for ttl in other function.", "author": "swaroopak", "createdAt": "2020-08-19T21:43:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzMxMDA4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQwMjU5NA==", "url": "https://github.com/apache/phoenix/pull/857#discussion_r473402594", "bodyText": "@swaroopak Switched to using an existing helper function to get the millisecond version of the max lookback config.", "author": "gjacoby126", "createdAt": "2020-08-19T22:48:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzMxMDA4NQ=="}], "type": "inlineReview"}, {"oid": "1aa7d60cf861af8dda2f4bcb19ef4624fcc4e9f2", "url": "https://github.com/apache/phoenix/commit/1aa7d60cf861af8dda2f4bcb19ef4624fcc4e9f2", "message": "PHOENIX-5881 - Port PHOENIX-5645 (MaxLookbackAge) to 5.x", "committedDate": "2020-08-19T22:51:39Z", "type": "commit"}, {"oid": "1aa7d60cf861af8dda2f4bcb19ef4624fcc4e9f2", "url": "https://github.com/apache/phoenix/commit/1aa7d60cf861af8dda2f4bcb19ef4624fcc4e9f2", "message": "PHOENIX-5881 - Port PHOENIX-5645 (MaxLookbackAge) to 5.x", "committedDate": "2020-08-19T22:51:39Z", "type": "forcePushed"}]}