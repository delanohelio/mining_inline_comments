{"pr_number": 247, "pr_title": "[MOB-1776] add way to specify mobile auth token", "pr_createdAt": "2020-07-10T14:42:59Z", "pr_url": "https://github.com/Iterable/iterable-android-sdk/pull/247", "timeline": [{"oid": "0dfd9d9f62922d4622b5f4e7879c96ad38680480", "url": "https://github.com/Iterable/iterable-android-sdk/commit/0dfd9d9f62922d4622b5f4e7879c96ad38680480", "message": "initial pass of adding mobile auth tokens to the android sdk", "committedDate": "2020-07-10T14:21:59Z", "type": "commit"}, {"oid": "709c17bc9a7b8b44bea1287cae65e7fa08fa5a06", "url": "https://github.com/Iterable/iterable-android-sdk/commit/709c17bc9a7b8b44bea1287cae65e7fa08fa5a06", "message": "updates authToken format", "committedDate": "2020-07-10T14:36:27Z", "type": "commit"}, {"oid": "1cf615e501a9d0b8fcf1dbe83ceacbb6841315b7", "url": "https://github.com/Iterable/iterable-android-sdk/commit/1cf615e501a9d0b8fcf1dbe83ceacbb6841315b7", "message": "updates the auth token when the email is changes.", "committedDate": "2020-07-10T14:36:51Z", "type": "commit"}, {"oid": "9a09829320913d83603ab74ef23a1d99137d4b7f", "url": "https://github.com/Iterable/iterable-android-sdk/commit/9a09829320913d83603ab74ef23a1d99137d4b7f", "message": "Adds additional function w/ params for authToken and no callbacks.", "committedDate": "2020-07-10T14:39:23Z", "type": "commit"}, {"oid": "7935107e18976c2534bb51d003cec2bb49cc7fc6", "url": "https://github.com/Iterable/iterable-android-sdk/commit/7935107e18976c2534bb51d003cec2bb49cc7fc6", "message": "set token directly", "committedDate": "2020-07-10T18:45:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEyOTQ0NQ==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/247#discussion_r453129445", "bodyText": "For now we just made the test pass by adding null. Actual test for authToken is missing.\nIf not in this ticket, we can have a seperate ticket for adding tests to this method.", "author": "Ayyanchira", "createdAt": "2020-07-11T00:19:11Z", "path": "iterableapi/src/androidTest/java/com/iterable/iterableapi/IterableApiResponseTest.java", "diffHunk": "@@ -220,7 +220,7 @@ public void testConnectionError() throws Exception {\n         MockResponse response = new MockResponse().setSocketPolicy(SocketPolicy.DISCONNECT_DURING_REQUEST_BODY);\n         server.enqueue(response);\n \n-        IterableApiRequest request = new IterableApiRequest(\"fake_key\", \"\", new JSONObject(), IterableApiRequest.POST, null, new IterableHelper.FailureHandler() {\n+        IterableApiRequest request = new IterableApiRequest(\"fake_key\", \"\", new JSONObject(), IterableApiRequest.POST, null, null, new IterableHelper.FailureHandler() {", "originalCommit": "7935107e18976c2534bb51d003cec2bb49cc7fc6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk0NTE0NA==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/247#discussion_r453945144", "bodyText": "Ticket created", "author": "roninopf", "createdAt": "2020-07-13T21:30:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEyOTQ0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEyOTQ2OA==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/247#discussion_r453129468", "bodyText": "authToken instead of token", "author": "Ayyanchira", "createdAt": "2020-07-11T00:19:22Z", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "diffHunk": "@@ -275,6 +276,18 @@ public static void initialize(@NonNull Context context, @NonNull String apiKey,\n      * @param email User email\n      */\n     public void setEmail(@Nullable String email) {\n+        setEmail(email, null);\n+    }\n+\n+    /**\n+     * Set user email used for API calls\n+     * Calling this or `setUserId:` is required before making any API calls.\n+     *\n+     * Note: This clears userId and persists the user email so you only need to call this once when the user logs in.\n+     * @param email User email\n+     * @param authToken Authorization token\n+     */\n+    public void setEmail(@Nullable String email, @Nullable String token) {", "originalCommit": "7935107e18976c2534bb51d003cec2bb49cc7fc6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEyOTQ3OQ==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/247#discussion_r453129479", "bodyText": "authToken instead of token", "author": "Ayyanchira", "createdAt": "2020-07-11T00:19:26Z", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "diffHunk": "@@ -298,6 +312,18 @@ public void setEmail(@Nullable String email) {\n      * @param userId User ID\n      */\n     public void setUserId(@Nullable String userId) {\n+        setUserId(userId, null);\n+    }\n+\n+    /**\n+     * Set user ID used for API calls\n+     * Calling this or `setEmail:` is required before making any API calls.\n+     *\n+     * Note: This clears user email and persists the user ID so you only need to call this once when the user logs in.\n+     * @param userId User ID\n+     * @param authToken Authorization token\n+     */\n+    public void setUserId(@Nullable String userId, @Nullable String token) {", "originalCommit": "7935107e18976c2534bb51d003cec2bb49cc7fc6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEyOTQ5Mg==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/247#discussion_r453129492", "bodyText": "Never saw space in constant before. If its intentional, we just need to be aware of this.", "author": "Ayyanchira", "createdAt": "2020-07-11T00:19:33Z", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableConstants.java", "diffHunk": "@@ -18,6 +18,8 @@\n     public static final String HEADER_API_KEY           = \"Api-Key\";\n     public static final String HEADER_SDK_PLATFORM      = \"SDK-Platform\";\n     public static final String HEADER_SDK_VERSION       = \"SDK-Version\";\n+    public static final String HEADER_SDK_AUTHORIZATION = \"Authorization\";\n+    public static final String HEADER_SDK_AUTH_FORMAT   = \"Bearer \";", "originalCommit": "7935107e18976c2534bb51d003cec2bb49cc7fc6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk0Mjk4OQ==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/247#discussion_r453942989", "bodyText": "Yep, it's intentional", "author": "roninopf", "createdAt": "2020-07-13T21:26:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEyOTQ5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEyOTUwMg==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/247#discussion_r453129502", "bodyText": "authToken instead of token in method Signature", "author": "Ayyanchira", "createdAt": "2020-07-11T00:19:36Z", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableRequest.java", "diffHunk": "@@ -287,37 +291,41 @@ protected void setRetryCount(int count) {\n     final String resourcePath;\n     final JSONObject json;\n     final String requestType;\n+    final String authToken;\n \n     IterableHelper.IterableActionHandler legacyCallback;\n     IterableHelper.SuccessHandler successCallback;\n     IterableHelper.FailureHandler failureCallback;\n \n-    IterableApiRequest(String apiKey, String baseUrl, String resourcePath, JSONObject json, String requestType, IterableHelper.SuccessHandler onSuccess, IterableHelper.FailureHandler onFailure) {\n+    IterableApiRequest(String apiKey, String baseUrl, String resourcePath, JSONObject json, String requestType, String token, IterableHelper.SuccessHandler onSuccess, IterableHelper.FailureHandler onFailure) {", "originalCommit": "7935107e18976c2534bb51d003cec2bb49cc7fc6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEyOTUwNQ==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/247#discussion_r453129505", "bodyText": "authToken instead of token in the method signature.", "author": "Ayyanchira", "createdAt": "2020-07-11T00:19:37Z", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableRequest.java", "diffHunk": "@@ -287,37 +291,41 @@ protected void setRetryCount(int count) {\n     final String resourcePath;\n     final JSONObject json;\n     final String requestType;\n+    final String authToken;\n \n     IterableHelper.IterableActionHandler legacyCallback;\n     IterableHelper.SuccessHandler successCallback;\n     IterableHelper.FailureHandler failureCallback;\n \n-    IterableApiRequest(String apiKey, String baseUrl, String resourcePath, JSONObject json, String requestType, IterableHelper.SuccessHandler onSuccess, IterableHelper.FailureHandler onFailure) {\n+    IterableApiRequest(String apiKey, String baseUrl, String resourcePath, JSONObject json, String requestType, String token, IterableHelper.SuccessHandler onSuccess, IterableHelper.FailureHandler onFailure) {\n         this.apiKey = apiKey;\n         this.baseUrl = baseUrl;\n         this.resourcePath = resourcePath;\n         this.json = json;\n         this.requestType = requestType;\n+        this.authToken = token;\n         this.successCallback = onSuccess;\n         this.failureCallback = onFailure;\n     }\n \n-    IterableApiRequest(String apiKey, String resourcePath, JSONObject json, String requestType, IterableHelper.SuccessHandler onSuccess, IterableHelper.FailureHandler onFailure) {\n+    IterableApiRequest(String apiKey, String resourcePath, JSONObject json, String requestType, String token, IterableHelper.SuccessHandler onSuccess, IterableHelper.FailureHandler onFailure) {", "originalCommit": "7935107e18976c2534bb51d003cec2bb49cc7fc6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEyOTUwOA==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/247#discussion_r453129508", "bodyText": "At several places, method signature have token while others have authToken. authToken everywhere will be great", "author": "Ayyanchira", "createdAt": "2020-07-11T00:19:41Z", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableRequest.java", "diffHunk": "@@ -287,37 +291,41 @@ protected void setRetryCount(int count) {\n     final String resourcePath;\n     final JSONObject json;\n     final String requestType;\n+    final String authToken;\n \n     IterableHelper.IterableActionHandler legacyCallback;\n     IterableHelper.SuccessHandler successCallback;\n     IterableHelper.FailureHandler failureCallback;\n \n-    IterableApiRequest(String apiKey, String baseUrl, String resourcePath, JSONObject json, String requestType, IterableHelper.SuccessHandler onSuccess, IterableHelper.FailureHandler onFailure) {\n+    IterableApiRequest(String apiKey, String baseUrl, String resourcePath, JSONObject json, String requestType, String token, IterableHelper.SuccessHandler onSuccess, IterableHelper.FailureHandler onFailure) {\n         this.apiKey = apiKey;\n         this.baseUrl = baseUrl;\n         this.resourcePath = resourcePath;\n         this.json = json;\n         this.requestType = requestType;\n+        this.authToken = token;\n         this.successCallback = onSuccess;\n         this.failureCallback = onFailure;\n     }\n \n-    IterableApiRequest(String apiKey, String resourcePath, JSONObject json, String requestType, IterableHelper.SuccessHandler onSuccess, IterableHelper.FailureHandler onFailure) {\n+    IterableApiRequest(String apiKey, String resourcePath, JSONObject json, String requestType, String token, IterableHelper.SuccessHandler onSuccess, IterableHelper.FailureHandler onFailure) {\n         this.apiKey = apiKey;\n         this.baseUrl = null;\n         this.resourcePath = resourcePath;\n         this.json = json;\n         this.requestType = requestType;\n+        this.authToken = token;\n         this.successCallback = onSuccess;\n         this.failureCallback = onFailure;\n     }\n \n-    IterableApiRequest(String apiKey, String resourcePath, JSONObject json, String requestType, final IterableHelper.IterableActionHandler callback) {\n+    IterableApiRequest(String apiKey, String resourcePath, JSONObject json, String requestType, String token, final IterableHelper.IterableActionHandler callback) {", "originalCommit": "7935107e18976c2534bb51d003cec2bb49cc7fc6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "80f6681d90bbfb69fa7fd61f2a263e253ded3651", "url": "https://github.com/Iterable/iterable-android-sdk/commit/80f6681d90bbfb69fa7fd61f2a263e253ded3651", "message": "make parameter names clearer", "committedDate": "2020-07-13T21:28:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk4Nzk4Mw==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/247#discussion_r453987983", "bodyText": "\ud83d\udc4d", "author": "Ayyanchira", "createdAt": "2020-07-13T22:40:44Z", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "diffHunk": "@@ -376,15 +403,15 @@ public boolean isIterableIntent(@Nullable Intent intent) {\n      * Make sure {@link IterableConfig#pushIntegrationName} is set before calling this.\n      * @param token Push token obtained from GCM or FCM\n      */\n-    public void registerDeviceToken(@NonNull String token) {\n-        registerDeviceToken(_email, _userId, getPushIntegrationName(), token, deviceAttributes);\n+    public void registerDeviceToken(@NonNull String deviceToken) {\n+        registerDeviceToken(_email, _userId, getPushIntegrationName(), deviceToken, deviceAttributes);", "originalCommit": "80f6681d90bbfb69fa7fd61f2a263e253ded3651", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU0NDM0MA==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/247#discussion_r454544340", "bodyText": "@roninopf Can you verify this with a test api call?", "author": "davidtruong", "createdAt": "2020-07-14T18:03:49Z", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableRequest.java", "diffHunk": "@@ -83,6 +83,8 @@ protected String doInBackground(IterableApiRequest... params) {\n                     urlConnection.setRequestProperty(IterableConstants.HEADER_API_KEY, iterableApiRequest.apiKey);\n                     urlConnection.setRequestProperty(IterableConstants.HEADER_SDK_PLATFORM, \"Android\");\n                     urlConnection.setRequestProperty(IterableConstants.HEADER_SDK_VERSION, IterableConstants.ITBL_KEY_SDK_VERSION_NUMBER);\n+                    //TODO: check if this is okay to pass in a null value to the authToken", "originalCommit": "80f6681d90bbfb69fa7fd61f2a263e253ded3651", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4f4ae81abffbffbd7da2eee168789a821a67ba0e", "url": "https://github.com/Iterable/iterable-android-sdk/commit/4f4ae81abffbffbd7da2eee168789a821a67ba0e", "message": "pass authToken along for GET requests too", "committedDate": "2020-07-17T22:36:07Z", "type": "commit"}, {"oid": "019a4939bdabee4c08bbd8fe098a81098b95ea38", "url": "https://github.com/Iterable/iterable-android-sdk/commit/019a4939bdabee4c08bbd8fe098a81098b95ea38", "message": "check if authToken is null before including it", "committedDate": "2020-07-17T22:36:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU2MzEzMQ==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/247#discussion_r457563131", "bodyText": "setUserId: is an iOS syntax.", "author": "vbabenkoru", "createdAt": "2020-07-20T17:08:02Z", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "diffHunk": "@@ -275,6 +276,18 @@ public static void initialize(@NonNull Context context, @NonNull String apiKey,\n      * @param email User email\n      */\n     public void setEmail(@Nullable String email) {\n+        setEmail(email, null);\n+    }\n+\n+    /**\n+     * Set user email used for API calls\n+     * Calling this or `setUserId:` is required before making any API calls.", "originalCommit": "019a4939bdabee4c08bbd8fe098a81098b95ea38", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU2MzcxMQ==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/247#discussion_r457563711", "bodyText": "Same as above", "author": "vbabenkoru", "createdAt": "2020-07-20T17:09:08Z", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "diffHunk": "@@ -298,6 +312,18 @@ public void setEmail(@Nullable String email) {\n      * @param userId User ID\n      */\n     public void setUserId(@Nullable String userId) {\n+        setUserId(userId, null);\n+    }\n+\n+    /**\n+     * Set user ID used for API calls\n+     * Calling this or `setEmail:` is required before making any API calls.", "originalCommit": "019a4939bdabee4c08bbd8fe098a81098b95ea38", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU2NDkyNA==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/247#discussion_r457564924", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    urlConnection.setRequestProperty(IterableConstants.HEADER_SDK_AUTHORIZATION, IterableConstants.HEADER_SDK_AUTH_FORMAT+iterableApiRequest.authToken);\n          \n          \n            \n                                    urlConnection.setRequestProperty(IterableConstants.HEADER_SDK_AUTHORIZATION, IterableConstants.HEADER_SDK_AUTH_FORMAT + iterableApiRequest.authToken);", "author": "vbabenkoru", "createdAt": "2020-07-20T17:11:18Z", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableRequest.java", "diffHunk": "@@ -84,6 +84,10 @@ protected String doInBackground(IterableApiRequest... params) {\n                     urlConnection.setRequestProperty(IterableConstants.HEADER_SDK_PLATFORM, \"Android\");\n                     urlConnection.setRequestProperty(IterableConstants.HEADER_SDK_VERSION, IterableConstants.ITBL_KEY_SDK_VERSION_NUMBER);\n \n+                    if (iterableApiRequest.authToken != null) {\n+                        urlConnection.setRequestProperty(IterableConstants.HEADER_SDK_AUTHORIZATION, IterableConstants.HEADER_SDK_AUTH_FORMAT+iterableApiRequest.authToken);", "originalCommit": "019a4939bdabee4c08bbd8fe098a81098b95ea38", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU2NTA5NQ==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/247#discussion_r457565095", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                urlConnection.setRequestProperty(IterableConstants.HEADER_SDK_AUTHORIZATION, IterableConstants.HEADER_SDK_AUTH_FORMAT+iterableApiRequest.authToken);\n          \n          \n            \n                                urlConnection.setRequestProperty(IterableConstants.HEADER_SDK_AUTHORIZATION, IterableConstants.HEADER_SDK_AUTH_FORMAT + iterableApiRequest.authToken);", "author": "vbabenkoru", "createdAt": "2020-07-20T17:11:33Z", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableRequest.java", "diffHunk": "@@ -100,6 +104,8 @@ protected String doInBackground(IterableApiRequest... params) {\n                     urlConnection.setRequestProperty(IterableConstants.HEADER_API_KEY, iterableApiRequest.apiKey);\n                     urlConnection.setRequestProperty(IterableConstants.HEADER_SDK_PLATFORM, \"Android\");\n                     urlConnection.setRequestProperty(IterableConstants.HEADER_SDK_VERSION, IterableConstants.ITBL_KEY_SDK_VERSION_NUMBER);\n+                    //TODO: check if this is okay to pass in a null value to the authToken\n+                    urlConnection.setRequestProperty(IterableConstants.HEADER_SDK_AUTHORIZATION, IterableConstants.HEADER_SDK_AUTH_FORMAT+iterableApiRequest.authToken);", "originalCommit": "019a4939bdabee4c08bbd8fe098a81098b95ea38", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU2NTUyMg==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/247#discussion_r457565522", "bodyText": "I think it is better to insert it conditionally, like above for GET, otherwise it looks like the request is trying to authenticate and passes an empty token.", "author": "vbabenkoru", "createdAt": "2020-07-20T17:12:19Z", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableRequest.java", "diffHunk": "@@ -100,6 +104,8 @@ protected String doInBackground(IterableApiRequest... params) {\n                     urlConnection.setRequestProperty(IterableConstants.HEADER_API_KEY, iterableApiRequest.apiKey);\n                     urlConnection.setRequestProperty(IterableConstants.HEADER_SDK_PLATFORM, \"Android\");\n                     urlConnection.setRequestProperty(IterableConstants.HEADER_SDK_VERSION, IterableConstants.ITBL_KEY_SDK_VERSION_NUMBER);\n+                    //TODO: check if this is okay to pass in a null value to the authToken", "originalCommit": "019a4939bdabee4c08bbd8fe098a81098b95ea38", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU5NjA4Nw==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/247#discussion_r457596087", "bodyText": "Whoops! I forgot this. Will add.", "author": "roninopf", "createdAt": "2020-07-20T18:05:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU2NTUyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU2NjM0Mw==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/247#discussion_r457566343", "bodyText": "What do you think about SHARED_PREFS_AUTH_TOKEN_KEY? AUTHTOKEN seems a bit hard to read to me.", "author": "vbabenkoru", "createdAt": "2020-07-20T17:13:49Z", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableConstants.java", "diffHunk": "@@ -95,6 +97,7 @@\n     public static final String SHARED_PREFS_EMAIL_KEY = \"itbl_email\";\n     public static final String SHARED_PREFS_USERID_KEY = \"itbl_userid\";\n     public static final String SHARED_PREFS_DEVICEID_KEY = \"itbl_deviceid\";\n+    public static final String SHARED_PREFS_AUTHTOKEN_KEY = \"itbl_authtoken\";", "originalCommit": "019a4939bdabee4c08bbd8fe098a81098b95ea38", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a1d8fc647f2eeb604c110973a30a64162ef229c9", "url": "https://github.com/Iterable/iterable-android-sdk/commit/a1d8fc647f2eeb604c110973a30a64162ef229c9", "message": "add token check around POST requests", "committedDate": "2020-07-20T18:20:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYyNzAwOA==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/247#discussion_r457627008", "bodyText": "lol", "author": "vbabenkoru", "createdAt": "2020-07-20T19:01:13Z", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "diffHunk": "@@ -309,15 +335,16 @@ public void setUserId(@Nullable String userId) {\n         onLogOut();\n         _email = null;\n         _userId = userId;\n-        storeEmailAndUserId();\n+        _authToken = authToken;\n+        storeAuthData();\n         onLogIn();\n     }\n \n     /**\n      * Tracks a click on the uri if it is an iterable link.\n      * @param uri the\n      * @param onCallback Calls the callback handler with the destination location\n-     *                   or the original url if it is not a interable link.\n+     *                   or the original url if it is not a Iterable link.", "originalCommit": "a1d8fc647f2eeb604c110973a30a64162ef229c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY1NzgwOA==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/247#discussion_r457657808", "bodyText": "I realized I missed an \"an\" in there too ;)", "author": "roninopf", "createdAt": "2020-07-20T19:59:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYyNzAwOA=="}], "type": "inlineReview"}, {"oid": "70daeeb860779876ed1fc861b517689d77ea920c", "url": "https://github.com/Iterable/iterable-android-sdk/commit/70daeeb860779876ed1fc861b517689d77ea920c", "message": "comment typo", "committedDate": "2020-07-20T19:59:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY1NjAyOA==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/247#discussion_r459656028", "bodyText": "@davidtruong @Ayyanchira @roninopf Looks like this breaks the public API. We should fix this before shipping a release.", "author": "vbabenkoru", "createdAt": "2020-07-23T18:46:17Z", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "diffHunk": "@@ -499,17 +526,28 @@ public void trackPurchase(double total, @NonNull List<CommerceItem> items, @Null\n      * @param newEmail New email\n      */\n     public void updateEmail(final @NonNull String newEmail) {\n-        updateEmail(newEmail, null, null);\n+        updateEmail(newEmail, null, null, null);\n     }\n \n     /**\n      * Updates the current user's email.\n-     * Also updates the current email in this IterableAPI instance if the API call was successful.\n+     * Also updates the current email and authToken in this IterableAPI instance if the API call was successful.\n+     * @param newEmail New email\n+     * @param authToken Authorization token\n+     */\n+    public void updateEmail(final @NonNull String newEmail, final @Nullable String authToken) {\n+        updateEmail(newEmail, authToken, null, null);\n+    }\n+\n+    /**\n+     * Updates the current user's email.\n+     * Also updates the current email and authToken in this IterableAPI instance if the API call was successful.\n      * @param newEmail New email\n+     * @param authToken\n      * @param successHandler Success handler. Called when the server returns a success code.\n      * @param failureHandler Failure handler. Called when the server call failed.\n      */\n-    public void updateEmail(final @NonNull String newEmail, final @Nullable IterableHelper.SuccessHandler successHandler, @Nullable IterableHelper.FailureHandler failureHandler) {\n+    public void updateEmail(final @NonNull String newEmail, final @Nullable String authToken, final @Nullable IterableHelper.SuccessHandler successHandler, @Nullable IterableHelper.FailureHandler failureHandler) {", "originalCommit": "70daeeb860779876ed1fc861b517689d77ea920c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY1ODM3OA==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/247#discussion_r459658378", "bodyText": "We'll need to include another updateEmail overload with (new email, on success, on failure) for backwards compatability.", "author": "davidtruong", "createdAt": "2020-07-23T18:50:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY1NjAyOA=="}], "type": "inlineReview"}]}