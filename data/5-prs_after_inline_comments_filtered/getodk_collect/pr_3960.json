{"pr_number": 3960, "pr_title": "Automatically sync with server when Match Exactly enabled", "pr_createdAt": "2020-07-07T16:04:50Z", "pr_url": "https://github.com/getodk/collect/pull/3960", "timeline": [{"oid": "5503f0378e425908e0696146515d3bb116ac958b", "url": "https://github.com/getodk/collect/commit/5503f0378e425908e0696146515d3bb116ac958b", "message": "Only run background jobs when there is network", "committedDate": "2020-07-08T13:07:16Z", "type": "forcePushed"}, {"oid": "7d7d19036e63d953fe76abbe8f41608d2972f381", "url": "https://github.com/getodk/collect/commit/7d7d19036e63d953fe76abbe8f41608d2972f381", "message": "Fix WorkManager initialization in Robolectric", "committedDate": "2020-07-08T16:21:03Z", "type": "forcePushed"}, {"oid": "0f7fb83efea21181eae47691aacd74d358ad3734", "url": "https://github.com/getodk/collect/commit/0f7fb83efea21181eae47691aacd74d358ad3734", "message": "Add comment explaining empty method", "committedDate": "2020-07-09T12:46:18Z", "type": "forcePushed"}, {"oid": "14ec8de341fa689362426ec4c3da9edab7abd006", "url": "https://github.com/getodk/collect/commit/14ec8de341fa689362426ec4c3da9edab7abd006", "message": "Make sure manual sync can't start while background one is running", "committedDate": "2020-07-10T09:35:49Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc2NDM0Nw==", "url": "https://github.com/getodk/collect/pull/3960#discussion_r452764347", "bodyText": "I ran into a problem with the audio stuff due to it instantiating a Scheduler so had to do a slight rework. I like the idea of using Supplier instead of an explicit ...Factory or ...Provider type now the new desugaring gives us access to it. We might still need a concrete class for Dagger but everything else should be able to use Supplier.", "author": "seadowg", "createdAt": "2020-07-10T10:35:07Z", "path": "collect_app/src/main/java/org/odk/collect/android/audio/AudioPlayerViewModel.java", "diffHunk": "@@ -19,10 +19,11 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Queue;\n+import java.util.function.Supplier;\n \n class AudioPlayerViewModel extends ViewModel implements MediaPlayer.OnCompletionListener {\n \n-    private final MediaPlayerFactory mediaPlayerFactory;\n+    private final Supplier<MediaPlayer> mediaPlayerFactory;", "originalCommit": "14ec8de341fa689362426ec4c3da9edab7abd006", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA5MTgxOQ==", "url": "https://github.com/getodk/collect/pull/3960#discussion_r454091819", "bodyText": "Sounds good. Add a note in the \"state of the union\"?", "author": "lognaturel", "createdAt": "2020-07-14T04:26:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc2NDM0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc2NDkxMw==", "url": "https://github.com/getodk/collect/pull/3960#discussion_r452764913", "bodyText": "I ran into problems with this blocking clicks in tests locally", "author": "seadowg", "createdAt": "2020-07-10T10:36:17Z", "path": "collect_app/src/main/java/org/odk/collect/android/utilities/MultiClickGuard.java", "diffHunk": "@@ -13,6 +14,10 @@ private MultiClickGuard() {\n \n     // Debounce multiple clicks within the same screen\n     public static boolean allowClick(String className) {\n+        if (test) {", "originalCommit": "14ec8de341fa689362426ec4c3da9edab7abd006", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3fe41dcbd9a11a0d55f1701f0294562cfe880e5c", "url": "https://github.com/getodk/collect/commit/3fe41dcbd9a11a0d55f1701f0294562cfe880e5c", "message": "Add spike implementation", "committedDate": "2020-07-13T15:08:16Z", "type": "commit"}, {"oid": "985914e7f6fc78d2ea01abc95a2b52c8148d1cf9", "url": "https://github.com/getodk/collect/commit/985914e7f6fc78d2ea01abc95a2b52c8148d1cf9", "message": "Move WorkManager running lookup to Scheduler\n\nAnd make MatchExactly test work with spike WorkManager implementation", "committedDate": "2020-07-13T15:08:16Z", "type": "commit"}, {"oid": "4a2f79a2d37badc123e01386a0a68702df5e4966", "url": "https://github.com/getodk/collect/commit/4a2f79a2d37badc123e01386a0a68702df5e4966", "message": "Combine Match Exactly tests", "committedDate": "2020-07-13T15:08:16Z", "type": "commit"}, {"oid": "4d8fbceca6ca007891935e36745e39c597c35eb0", "url": "https://github.com/getodk/collect/commit/4d8fbceca6ca007891935e36745e39c597c35eb0", "message": "Move WorkManager implementation to Scheduler", "committedDate": "2020-07-13T15:08:16Z", "type": "commit"}, {"oid": "2d20b0a90a6bcbff68329ca4aef55ceeb5223ba7", "url": "https://github.com/getodk/collect/commit/2d20b0a90a6bcbff68329ca4aef55ceeb5223ba7", "message": "Clean up way task is handed to WorkManager", "committedDate": "2020-07-13T15:08:16Z", "type": "commit"}, {"oid": "c95984924154af0471149a0398a2e131d6794996", "url": "https://github.com/getodk/collect/commit/c95984924154af0471149a0398a2e131d6794996", "message": "Update docs for Scheduler", "committedDate": "2020-07-13T15:08:17Z", "type": "commit"}, {"oid": "b731e8faba4595a3b9f643b1c1b62c47979a768b", "url": "https://github.com/getodk/collect/commit/b731e8faba4595a3b9f643b1c1b62c47979a768b", "message": "Make sure disk syncs as part of match exactly sync", "committedDate": "2020-07-13T15:08:17Z", "type": "commit"}, {"oid": "d1c285b54182af6208d2ca90c8563b88a4ea2c77", "url": "https://github.com/getodk/collect/commit/d1c285b54182af6208d2ca90c8563b88a4ea2c77", "message": "Revise scheduler method names again", "committedDate": "2020-07-13T15:08:17Z", "type": "commit"}, {"oid": "a1fa6fbf80c07e3ae060713b05332aa3579181b8", "url": "https://github.com/getodk/collect/commit/a1fa6fbf80c07e3ae060713b05332aa3579181b8", "message": "Only run background jobs when there is network", "committedDate": "2020-07-13T15:08:17Z", "type": "commit"}, {"oid": "86ef2235499978f4be4a8e2085af4fd9cec8bffe", "url": "https://github.com/getodk/collect/commit/86ef2235499978f4be4a8e2085af4fd9cec8bffe", "message": "Move match exactly sync setup to BackgroundWorkManager", "committedDate": "2020-07-13T15:08:17Z", "type": "commit"}, {"oid": "f95ab398f7abdf9e5bba24ba7b94a69a2c548566", "url": "https://github.com/getodk/collect/commit/f95ab398f7abdf9e5bba24ba7b94a69a2c548566", "message": "Make sure sync is cancelled when Match Exactly is disabled", "committedDate": "2020-07-13T15:08:17Z", "type": "commit"}, {"oid": "a4d4fd1a073b101cadceb742d514e20f483c7f06", "url": "https://github.com/getodk/collect/commit/a4d4fd1a073b101cadceb742d514e20f483c7f06", "message": "Isolate disk sync logic behind an interface", "committedDate": "2020-07-13T15:08:17Z", "type": "commit"}, {"oid": "bf78793ef1b5604f1286480671bc953ceeafe152", "url": "https://github.com/getodk/collect/commit/bf78793ef1b5604f1286480671bc953ceeafe152", "message": "Move testing of of ServerFormDetailsFetcher", "committedDate": "2020-07-13T15:08:18Z", "type": "commit"}, {"oid": "83c79b8d3e49dae89ceac3b99c8892d96a2ac1d9", "url": "https://github.com/getodk/collect/commit/83c79b8d3e49dae89ceac3b99c8892d96a2ac1d9", "message": "Fix WorkManager initialization in Robolectric", "committedDate": "2020-07-13T15:08:18Z", "type": "commit"}, {"oid": "5a5496d866a7f8ce6077c66e325d85f5262b6ac5", "url": "https://github.com/getodk/collect/commit/5a5496d866a7f8ce6077c66e325d85f5262b6ac5", "message": "Remove unneeded flag\n\nThis was being used to check media files when a form has hadn't changed.\nAs the form download will always go ahead and download the manifest and any\nnew/changed files there was no reason to do this.", "committedDate": "2020-07-13T15:08:18Z", "type": "commit"}, {"oid": "9560206a7aded97cfd5b14e6a5944a560fceb289", "url": "https://github.com/getodk/collect/commit/9560206a7aded97cfd5b14e6a5944a560fceb289", "message": "Disable MultiClickGuard in test", "committedDate": "2020-07-13T15:08:18Z", "type": "commit"}, {"oid": "497efa7cdeca900c61375eee9ce0b4fbded048e8", "url": "https://github.com/getodk/collect/commit/497efa7cdeca900c61375eee9ce0b4fbded048e8", "message": "Fix PMD", "committedDate": "2020-07-13T15:08:18Z", "type": "commit"}, {"oid": "7955726199cfdc5e16461e33b8ca25dc60354fb6", "url": "https://github.com/getodk/collect/commit/7955726199cfdc5e16461e33b8ca25dc60354fb6", "message": "Use singleton repo to store sync state", "committedDate": "2020-07-13T15:08:18Z", "type": "commit"}, {"oid": "ae677c84729793aded41aedc7b9905bc00e30ad6", "url": "https://github.com/getodk/collect/commit/ae677c84729793aded41aedc7b9905bc00e30ad6", "message": "Show syncing in progress on Fill Blank Form if it's happening the background", "committedDate": "2020-07-13T15:08:18Z", "type": "commit"}, {"oid": "6f9dfbc0c4e56ab7d164c6ca3ad097f9f808f0b8", "url": "https://github.com/getodk/collect/commit/6f9dfbc0c4e56ab7d164c6ca3ad097f9f808f0b8", "message": "Add comment explaining empty method", "committedDate": "2020-07-13T15:08:19Z", "type": "commit"}, {"oid": "37c4cdb80a8dba3dbf9088318e27ff707e703cb5", "url": "https://github.com/getodk/collect/commit/37c4cdb80a8dba3dbf9088318e27ff707e703cb5", "message": "Make sure sync task can't start in the background during manual run", "committedDate": "2020-07-13T15:08:19Z", "type": "commit"}, {"oid": "20b3a1107d212e6eedc70b35788f0175bb543c96", "url": "https://github.com/getodk/collect/commit/20b3a1107d212e6eedc70b35788f0175bb543c96", "message": "Make sure manual sync can't start while background one is running", "committedDate": "2020-07-13T15:08:19Z", "type": "commit"}, {"oid": "20b3a1107d212e6eedc70b35788f0175bb543c96", "url": "https://github.com/getodk/collect/commit/20b3a1107d212e6eedc70b35788f0175bb543c96", "message": "Make sure manual sync can't start while background one is running", "committedDate": "2020-07-13T15:08:19Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA5MTA3OA==", "url": "https://github.com/getodk/collect/pull/3960#discussion_r454091078", "bodyText": "isNotOnDevice?", "author": "lognaturel", "createdAt": "2020-07-14T04:23:12Z", "path": "collect_app/src/main/java/org/odk/collect/android/formmanagement/ServerFormDetails.java", "diffHunk": "@@ -28,25 +28,25 @@\n     private String formVersion;\n     private String hash;\n     private String manifestFileHash;\n-    private boolean isNewerFormVersionAvailable;\n-    private boolean areNewerMediaFilesAvailable;\n+    private boolean isNew;", "originalCommit": "20b3a1107d212e6eedc70b35788f0175bb543c96", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA5NjYwOA==", "url": "https://github.com/getodk/collect/pull/3960#discussion_r454096608", "bodyText": "stars -> starts?", "author": "lognaturel", "createdAt": "2020-07-14T04:43:45Z", "path": "collect_app/src/test/java/org/odk/collect/android/formmanagement/BlankFormsListViewModelTest.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package org.odk.collect.android.formmanagement;\n+\n+import androidx.arch.core.executor.testing.InstantTaskExecutorRule;\n+import androidx.lifecycle.LiveData;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.odk.collect.android.preferences.PreferencesProvider;\n+import org.odk.collect.android.support.FakeScheduler;\n+import org.odk.collect.async.Scheduler;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.never;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+public class BlankFormsListViewModelTest {\n+\n+    @Rule\n+    public InstantTaskExecutorRule instantTaskExecutorRule = new InstantTaskExecutorRule();\n+\n+    @Test\n+    public void isSyncing_whenRepositoryStartSync_isTrue() {\n+        SyncStatusRepository syncRepository = new SyncStatusRepository();\n+\n+        BlankFormsListViewModel viewModel = new BlankFormsListViewModel(mock(Scheduler.class), syncRepository, mock(ServerFormsSynchronizer.class), mock(PreferencesProvider.class));\n+        LiveData<Boolean> syncing = viewModel.isSyncing();\n+\n+        syncRepository.startSync();\n+        assertThat(syncing.getValue(), is(true));\n+    }\n+\n+    @Test\n+    public void syncWithServer_starsSyncOnRepository() {", "originalCommit": "20b3a1107d212e6eedc70b35788f0175bb543c96", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ1NjMzNg==", "url": "https://github.com/getodk/collect/pull/3960#discussion_r454456336", "bodyText": "Feels weird that this doesn't also schedule and cancel form upload and download but I assume it'll come.", "author": "lognaturel", "createdAt": "2020-07-14T15:46:23Z", "path": "collect_app/src/main/java/org/odk/collect/android/backgroundwork/BackgroundWorkManager.java", "diffHunk": "@@ -0,0 +1,12 @@\n+package org.odk.collect.android.backgroundwork;\n+\n+public interface BackgroundWorkManager {\n+\n+    boolean isFormUploaderRunning();", "originalCommit": "20b3a1107d212e6eedc70b35788f0175bb543c96", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ3NzUxNw==", "url": "https://github.com/getodk/collect/pull/3960#discussion_r454477517", "bodyText": "Yeah it's on the way!", "author": "seadowg", "createdAt": "2020-07-14T16:18:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ1NjMzNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ2MjcwNg==", "url": "https://github.com/getodk/collect/pull/3960#discussion_r454462706", "bodyText": "Why not cover a little more ground and have a form-1 with some form version in the repository before the synchronization and then assert that the repository contains the form with the new version? That would better match the level of the delete test below, too.", "author": "lognaturel", "createdAt": "2020-07-14T15:55:41Z", "path": "collect_app/src/test/java/org/odk/collect/android/formmanagement/ServerFormsSynchronizerTest.java", "diffHunk": "@@ -0,0 +1,128 @@\n+package org.odk.collect.android.formmanagement;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.odk.collect.android.forms.Form;\n+import org.odk.collect.android.forms.FormRepository;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import javax.annotation.Nullable;\n+\n+import static java.util.Arrays.asList;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.containsInAnyOrder;\n+import static org.hamcrest.Matchers.empty;\n+import static org.hamcrest.Matchers.is;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+@SuppressWarnings(\"PMD.DoubleBraceInitialization\")\n+public class ServerFormsSynchronizerTest {\n+\n+    private ServerFormsSynchronizer synchronizer;\n+    private RecordingFormDownloader formDownloader;\n+    private FormRepository formRepository;\n+    private ServerFormsDetailsFetcher serverFormDetailsFetcher;\n+\n+    @Before\n+    public void setup() {\n+        formRepository = new InMemFormRepository();\n+        formDownloader = new RecordingFormDownloader();\n+        serverFormDetailsFetcher = mock(ServerFormsDetailsFetcher.class);\n+\n+        synchronizer = new ServerFormsSynchronizer(serverFormDetailsFetcher, formRepository, formDownloader);\n+    }\n+\n+    @Test\n+    public void downloadsNewForms() throws Exception {\n+        when(serverFormDetailsFetcher.fetchFormDetails()).thenReturn(asList(\n+                new ServerFormDetails(\"form-1\", \"http://example.com/form-1\", null, \"form-1\", \"server\", \"md5:form-1-hash\", null, true, false)\n+        ));\n+\n+        synchronizer.synchronize();\n+        assertThat(formDownloader.getDownloadedForms(), containsInAnyOrder(\"form-1\"));\n+    }\n+\n+    @Test\n+    public void downloadsUpdatedForms() throws Exception {\n+        when(serverFormDetailsFetcher.fetchFormDetails()).thenReturn(asList(\n+                new ServerFormDetails(\"form-1\", \"http://example.com/form-1\", null, \"form-1\", \"server\", \"md5:form-1-hash\", null, false, true)\n+        ));\n+\n+        synchronizer.synchronize();\n+        assertThat(formDownloader.getDownloadedForms(), containsInAnyOrder(\"form-1\"));", "originalCommit": "20b3a1107d212e6eedc70b35788f0175bb543c96", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ3ODYwMQ==", "url": "https://github.com/getodk/collect/pull/3960#discussion_r454478601", "bodyText": "Totally agree the test boundaries are inconsistent here. Need to do some refactoring of MultiFormDownloader to fix that though. That's something I'd like to fix up in the next PR as I'm going to have to touch the auto download code.", "author": "seadowg", "createdAt": "2020-07-14T16:19:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ2MjcwNg=="}], "type": "inlineReview"}, {"oid": "584c895307bd752c797e25b9b3c8a03716ba7112", "url": "https://github.com/getodk/collect/commit/584c895307bd752c797e25b9b3c8a03716ba7112", "message": "Fix comment formatting", "committedDate": "2020-07-14T16:13:34Z", "type": "commit"}, {"oid": "79c7cfb0f5031026db057666fdc32ce60fabef77", "url": "https://github.com/getodk/collect/commit/79c7cfb0f5031026db057666fdc32ce60fabef77", "message": "Rename field", "committedDate": "2020-07-14T16:15:52Z", "type": "commit"}, {"oid": "9e3a91c4cb9f7d9d508af85c58fd3b88f6dc1beb", "url": "https://github.com/getodk/collect/commit/9e3a91c4cb9f7d9d508af85c58fd3b88f6dc1beb", "message": "Correct typo in test", "committedDate": "2020-07-14T16:17:37Z", "type": "commit"}, {"oid": "4d2900d74ab85cb75b76a1dcfc2e4899f679c8a7", "url": "https://github.com/getodk/collect/commit/4d2900d74ab85cb75b76a1dcfc2e4899f679c8a7", "message": "Add note to STATE.md about Supplier", "committedDate": "2020-07-14T16:20:44Z", "type": "commit"}, {"oid": "e41ded9bb65ebd1be771e4808a3ce7695cf8989d", "url": "https://github.com/getodk/collect/commit/e41ded9bb65ebd1be771e4808a3ce7695cf8989d", "message": "Fix comment formatting", "committedDate": "2020-07-14T17:14:36Z", "type": "commit"}]}