{"pr_number": 4168, "pr_title": "Rework `AudioWidget` view/flow and extract module for playing audio", "pr_createdAt": "2020-10-13T13:25:08Z", "pr_url": "https://github.com/getodk/collect/pull/4168", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk2MzIzNQ==", "url": "https://github.com/getodk/collect/pull/4168#discussion_r503963235", "bodyText": "Just did a straight replacement of Butterknife with view binding here.", "author": "seadowg", "createdAt": "2020-10-13T13:43:54Z", "path": "collect_app/src/main/java/org/odk/collect/android/audio/AudioControllerView.java", "diffHunk": "@@ -24,64 +26,65 @@\n import org.joda.time.DateTime;\n import org.joda.time.DateTimeZone;\n import org.odk.collect.android.R;\n-\n-import butterknife.BindView;\n-import butterknife.ButterKnife;\n-import butterknife.OnClick;\n-import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n+import org.odk.collect.android.databinding.AudioControllerLayoutBinding;\n \n import static java.lang.Math.max;\n import static java.lang.Math.min;\n \n public class AudioControllerView extends FrameLayout {\n \n-    @BindView(R.id.currentDuration)", "originalCommit": "c95133fcc205e5f50e83f83f8e0e2cd2b806d117", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk2NTMxOQ==", "url": "https://github.com/getodk/collect/pull/4168#discussion_r503965319", "bodyText": "I wanted to avoid using LiveData inside View components as it means we need to pass them some kind of lifecycle to use for observations. This approach lets us use a more standard listener hook in the View but lets us use LiveData as the implementation so we have lifecycle awareness.", "author": "seadowg", "createdAt": "2020-10-13T13:46:36Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/AudioPlayer.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package org.odk.collect.android.widgets.utilities;\n+\n+import org.odk.collect.audioclips.Clip;\n+\n+import java.util.function.Consumer;\n+\n+public interface AudioPlayer {\n+\n+    void play(Clip clip);\n+\n+    void pause();\n+\n+    void setPosition(String clipId, Integer position);\n+\n+    void onPlayingChanged(String clipID, Consumer<Boolean> playingConsumer);", "originalCommit": "c95133fcc205e5f50e83f83f8e0e2cd2b806d117", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk2NjM0Ng==", "url": "https://github.com/getodk/collect/pull/4168#discussion_r503966346", "bodyText": "We should be able to swap this implementation with another one for internal recording", "author": "seadowg", "createdAt": "2020-10-13T13:47:50Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/ExternalAppAudioDataRequester.java", "diffHunk": "@@ -0,0 +1,68 @@\n+package org.odk.collect.android.widgets.utilities;\n+\n+import android.app.Activity;\n+import android.content.Intent;\n+import android.provider.MediaStore;\n+import android.widget.Toast;\n+\n+import org.javarosa.form.api.FormEntryPrompt;\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.listeners.PermissionListener;\n+import org.odk.collect.android.utilities.ActivityAvailability;\n+import org.odk.collect.android.utilities.ApplicationConstants;\n+import org.odk.collect.android.utilities.PermissionUtils;\n+\n+public class ExternalAppAudioDataRequester implements AudioDataRequester {", "originalCommit": "c95133fcc205e5f50e83f83f8e0e2cd2b806d117", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk3MjcyNg==", "url": "https://github.com/getodk/collect/pull/4168#discussion_r503972726", "bodyText": "I definitely could have removed this everywhere but it felt like it would be pretty time intensive and actually pretty isolated from what I was working on. We can come back for this next time we touch anything in the neighbourhood.", "author": "seadowg", "createdAt": "2020-10-13T13:55:43Z", "path": "collect_app/src/main/java/org/odk/collect/android/audio/AudioHelper.java", "diffHunk": "@@ -31,21 +33,26 @@\n  * construct multiple instances (within a {@link android.view.View} or\n  * {@link androidx.fragment.app.Fragment} for instance) if needed within one\n  * {@link android.app.Activity}.\n+ *\n+ * @deprecated wrapping the ViewModel like this doesn't really fit with other ways we've integrated\n+ * widgets with \"external\" services. Instead of this widgets should talk to {@link AudioPlayer}\n+ * and the Activity/Fragment components should talk to the ViewModel itself.\n  */\n \n+@Deprecated", "originalCommit": "622e0a6a85fc428f94e0b7c325743c20c13a8c7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk3MzYzNQ==", "url": "https://github.com/getodk/collect/pull/4168#discussion_r503973635", "bodyText": "This now uses a predictable ID for the clip. I think before I wasn't as clued up on the structure of the form. Not quite sure why we went with random IDs", "author": "seadowg", "createdAt": "2020-10-13T13:56:50Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/AudioWidget.java", "diffHunk": "@@ -157,83 +112,116 @@ public IAnswerData getAnswer() {\n     }\n \n     /**\n-     * Set this widget with the actual file returned by OnActivityResult.\n-     * Both of Uri and File are supported.\n-     * If the file is local, a Uri is enough for the copy task below.\n-     * If the chose file is from cloud(such as Google Drive),\n-     * The retrieve and copy task is already executed in the previous step,\n-     * so a File object would be presented.\n-     *\n-     * @param object Uri or File of the chosen file.\n-     * @see org.odk.collect.android.activities.FormEntryActivity#onActivityResult(int, int, Intent)\n+     * @param object file name of media file that will be available in the {@link QuestionMediaManager}\n+     * @see org.odk.collect.android.activities.FormEntryActivity\n      */\n     @Override\n     public void setBinaryData(Object object) {\n-        File newAudio;\n-        // get the file path and create a copy in the instance folder\n-        if (object instanceof Uri) {\n-            String sourcePath = getSourcePathFromUri((Uri) object);\n-            String destinationPath = FileWidgetUtils.getDestinationPathFromSourcePath(sourcePath, getInstanceFolder(), fileUtil);\n-            File source = fileUtil.getFileAtPath(sourcePath);\n-            newAudio = fileUtil.getFileAtPath(destinationPath);\n-            fileUtil.copyFile(source, newAudio);\n-        } else if (object instanceof File) {\n-            // Getting a file indicates we've done the copy in the before step\n-            newAudio = (File) object;\n-        } else {\n-            Timber.w(\"AudioWidget's setBinaryData must receive a File or Uri object.\");\n-            return;\n+        // Support being handed a File as well\n+        if (object instanceof File) {\n+            object = (String) ((File) object).getName();\n         }\n \n-        if (newAudio.exists()) {\n-            // Add the copy to the content provider\n-            ContentValues values = new ContentValues(6);\n-            values.put(Audio.Media.TITLE, newAudio.getName());\n-            values.put(Audio.Media.DISPLAY_NAME, newAudio.getName());\n-            values.put(Audio.Media.DATE_ADDED, System.currentTimeMillis());\n-            values.put(Audio.Media.DATA, newAudio.getAbsolutePath());\n-\n-            questionMediaManager.replaceRecentFileForQuestion(getFormEntryPrompt().getIndex().toString(), newAudio.getAbsolutePath());\n-\n-            Uri audioURI = getContext().getContentResolver().insert(Audio.Media.EXTERNAL_CONTENT_URI, values);\n-\n-            if (audioURI != null) {\n-                Timber.i(\"Inserting AUDIO returned uri = %s\", audioURI.toString());\n-            }\n-\n-            // when replacing an answer. remove the current media.\n-            if (binaryName != null && !binaryName.equals(newAudio.getName())) {\n-                deleteFile();\n+        if (object instanceof String) {\n+            String fileName = (String) object;\n+            File newAudio = questionMediaManager.getAnswerFile(fileName);\n+\n+            if (newAudio != null && newAudio.exists()) {\n+                // Add the copy to the content provider\n+                ContentValues values = new ContentValues(6);\n+                values.put(Audio.Media.TITLE, newAudio.getName());\n+                values.put(Audio.Media.DISPLAY_NAME, newAudio.getName());\n+                values.put(Audio.Media.DATE_ADDED, System.currentTimeMillis());\n+                values.put(Audio.Media.DATA, newAudio.getAbsolutePath());\n+\n+                questionMediaManager.replaceAnswerFile(getFormEntryPrompt().getIndex().toString(), newAudio.getAbsolutePath());\n+                Uri audioURI = getContext().getContentResolver().insert(Audio.Media.EXTERNAL_CONTENT_URI, values);\n+\n+                if (audioURI != null) {\n+                    Timber.i(\"Inserting AUDIO returned uri = %s\", audioURI.toString());\n+                }\n+\n+                // when replacing an answer. remove the current media.\n+                if (binaryName != null && !binaryName.equals(newAudio.getName())) {\n+                    deleteFile();\n+                }\n+\n+                binaryName = newAudio.getName();\n+                Timber.i(\"Setting current answer to %s\", newAudio.getName());\n+\n+                hideButtonsIfNeeded();\n+                updatePlayerMedia();\n+                widgetValueChanged();\n+            } else {\n+                Timber.e(\"Inserting Audio file FAILED\");\n             }\n-\n-            binaryName = newAudio.getName();\n-            Timber.i(\"Setting current answer to %s\", newAudio.getName());\n-\n-            widgetValueChanged();\n-            updatePlayerMedia();\n         } else {\n-            Timber.e(\"Inserting Audio file FAILED\");\n+            Timber.w(\"AudioWidget's setBinaryData must receive a File object.\");\n+            return;\n         }\n     }\n \n     private void hideButtonsIfNeeded() {\n-        if (getFormEntryPrompt().getAppearanceHint() != null\n-                && getFormEntryPrompt().getAppearanceHint().toLowerCase(Locale.ENGLISH).contains(WidgetAppearanceUtils.NEW)) {\n+        if (getAnswer() == null) {\n+            binding.captureButton.setVisibility(View.VISIBLE);\n+            binding.chooseButton.setVisibility(View.VISIBLE);\n+            binding.audioController.setVisibility(View.GONE);\n+        } else {\n+            binding.captureButton.setVisibility(View.GONE);\n+            binding.chooseButton.setVisibility(View.GONE);\n+            binding.audioController.setVisibility(View.VISIBLE);\n+        }\n+\n+        if (getFormEntryPrompt().isReadOnly()) {\n+            binding.captureButton.setVisibility(View.GONE);\n+            binding.chooseButton.setVisibility(View.GONE);\n+        }\n+\n+        if (getFormEntryPrompt().getAppearanceHint() != null && getFormEntryPrompt().getAppearanceHint().toLowerCase(Locale.ENGLISH).contains(WidgetAppearanceUtils.NEW)) {\n             binding.chooseButton.setVisibility(View.GONE);\n         }\n     }\n \n     private void updatePlayerMedia() {\n         if (binaryName != null) {\n-            audioHelper.setAudio(audioController, new Clip(String.valueOf(ViewCompat.generateViewId()), getAudioFile().getAbsolutePath()));\n-            audioController.showPlayer();\n+            Clip clip = new Clip(\"audio:\" + getFormEntryPrompt().getIndex().toString(), getAudioFile().getAbsolutePath());", "originalCommit": "622e0a6a85fc428f94e0b7c325743c20c13a8c7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjYzNzYwMg==", "url": "https://github.com/getodk/collect/pull/4168#discussion_r506637602", "bodyText": "Feels like this should be separate? But I suppose that can be discovered later once there are multiple implementations for recording.", "author": "lognaturel", "createdAt": "2020-10-16T17:58:01Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/AudioDataRequester.java", "diffHunk": "@@ -4,4 +4,6 @@\n \n public interface AudioDataRequester {\n     void requestRecording(FormEntryPrompt prompt);\n+\n+    void requestFile(FormEntryPrompt prompt);", "originalCommit": "3ca185546c3f5cb7a39187070563cb5fe8aad325", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU2NzMwNA==", "url": "https://github.com/getodk/collect/pull/4168#discussion_r507567304", "bodyText": "Yeah this ends up changing in the next PR so your feeling is correct haha", "author": "seadowg", "createdAt": "2020-10-19T08:33:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjYzNzYwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjcyMDczOQ==", "url": "https://github.com/getodk/collect/pull/4168#discussion_r506720739", "bodyText": "These tests about deleting/replacing media files are good to have. This behavior is hard to reason about and I don't see any context for what it's for anywhere. Maybe you could put these tests in a region and just say something like \"we want to be able to go back to the exact state we were in at the last save if a user exits an instance without saving. This means keeping track of any media files that were previously attached so they can be restored.\" Alternately something like that could go above the two maps in FormSaveViewModel used for that purpose.\nAlso this save and discard changes behavior would be good for QA to check once the audio rework is complete. Want to keep a list like you did for the match exactly feature?", "author": "lognaturel", "createdAt": "2020-10-16T21:04:44Z", "path": "collect_app/src/test/java/org/odk/collect/android/formentry/audit/FormSaveViewModelTest.java", "diffHunk": "@@ -390,25 +394,50 @@ public void resumeFormEntry_clearsSaveResult() {\n     }\n \n     @Test\n-    public void markOriginalFileOrDelete_whenQuestionIndexHasAnswer_onRecreatingViewModel_deletesFile() {\n-        viewModel.markOriginalFileOrDelete(\"index\", \"blah\");\n+    public void deleteAnswerFile_whenFileHasAlreadyBeenDeleted_actuallyDeletesNewFile() {", "originalCommit": "622e0a6a85fc428f94e0b7c325743c20c13a8c7e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY4MDE1MA==", "url": "https://github.com/getodk/collect/pull/4168#discussion_r507680150", "bodyText": "I'll add regions/comments to try and make this clearer. Yeah I think it's a good idea to have a list of things to check!", "author": "seadowg", "createdAt": "2020-10-19T11:43:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjcyMDczOQ=="}], "type": "inlineReview"}, {"oid": "955e0947c2457170c71696d8863e5cdc5b6b1972", "url": "https://github.com/getodk/collect/commit/955e0947c2457170c71696d8863e5cdc5b6b1972", "message": "Add Kotlin style checks and fix failing checks\n\nThis adds ktlint which appears to be the most popular checker.", "committedDate": "2020-10-19T10:30:05Z", "type": "forcePushed"}, {"oid": "03a5de012a2252b26d5e741310e70a66f423e098", "url": "https://github.com/getodk/collect/commit/03a5de012a2252b26d5e741310e70a66f423e098", "message": "Use variables for dependency version", "committedDate": "2020-10-19T11:30:11Z", "type": "forcePushed"}, {"oid": "ad9990ce167216da8cfaab9d4c2756d3d3291848", "url": "https://github.com/getodk/collect/commit/ad9990ce167216da8cfaab9d4c2756d3d3291848", "message": "Wrap AudioPlayerViewModel in interface", "committedDate": "2020-10-19T14:02:14Z", "type": "commit"}, {"oid": "89bfca6a368f4d3c95627474488bfa87de208ca0", "url": "https://github.com/getodk/collect/commit/89bfca6a368f4d3c95627474488bfa87de208ca0", "message": "Remove LiveData from AudioPlayer so views don't need access to lifecycle", "committedDate": "2020-10-19T14:02:14Z", "type": "commit"}, {"oid": "0fcaa4c988be47da0618900c4e27572d3dba6a72", "url": "https://github.com/getodk/collect/commit/0fcaa4c988be47da0618900c4e27572d3dba6a72", "message": "Rename viewmodel", "committedDate": "2020-10-19T14:02:15Z", "type": "commit"}, {"oid": "b4838f5c885d4e866b702a696790a2cd43faff84", "url": "https://github.com/getodk/collect/commit/b4838f5c885d4e866b702a696790a2cd43faff84", "message": "Pull audio view model into its own module", "committedDate": "2020-10-19T14:02:15Z", "type": "commit"}, {"oid": "f7cdf460699867c2331060f3f191acf1ec6e636a", "url": "https://github.com/getodk/collect/commit/f7cdf460699867c2331060f3f191acf1ec6e636a", "message": "Convert audioclips code to Kotlin", "committedDate": "2020-10-19T14:02:15Z", "type": "commit"}, {"oid": "a75bcaad5c660b685c4bd542cb0bc4679d2b08c6", "url": "https://github.com/getodk/collect/commit/a75bcaad5c660b685c4bd542cb0bc4679d2b08c6", "message": "Clean up weirdness introduced in Kotlin conversion", "committedDate": "2020-10-19T14:02:15Z", "type": "commit"}, {"oid": "fd662191b53f484731c52c8aa370868e6e054546", "url": "https://github.com/getodk/collect/commit/fd662191b53f484731c52c8aa370868e6e054546", "message": "Create test-shared to handle shared test code", "committedDate": "2020-10-19T14:02:15Z", "type": "commit"}, {"oid": "baafad517ef4e35e16ddec7521bfac82b923b645", "url": "https://github.com/getodk/collect/commit/baafad517ef4e35e16ddec7521bfac82b923b645", "message": "Convert tests to Kotlin and remove Robolectric", "committedDate": "2020-10-19T14:02:16Z", "type": "commit"}, {"oid": "4a37b6b2adc99dbdb35e54029d0ee7e32d828564", "url": "https://github.com/getodk/collect/commit/4a37b6b2adc99dbdb35e54029d0ee7e32d828564", "message": "Fix test-shared imports", "committedDate": "2020-10-19T14:02:16Z", "type": "commit"}, {"oid": "5e5fba7bf5969cc686e0130509911672ec8903c3", "url": "https://github.com/getodk/collect/commit/5e5fba7bf5969cc686e0130509911672ec8903c3", "message": "Remove ButterKnife from AudioControllerView", "committedDate": "2020-10-19T14:02:16Z", "type": "commit"}, {"oid": "020fb3076e3ada9e12c226191f4f269a71994dc3", "url": "https://github.com/getodk/collect/commit/020fb3076e3ada9e12c226191f4f269a71994dc3", "message": "Move testing of Audio Controller playback\n\nInstead of the integration test (which was very useful during development of the\nfeature) we now test the functionality between AudioWidgetTest, AudioControllerViewTest\nand AudioClipViewModel. This makes it clearer where responsiblities lie and means we don't\nneed the AudioHelper object for this feature.", "committedDate": "2020-10-19T14:02:16Z", "type": "commit"}, {"oid": "84da323bcc732a57918def19dd8a4c832843c53c", "url": "https://github.com/getodk/collect/commit/84da323bcc732a57918def19dd8a4c832843c53c", "message": "Deprecate AudioHelper", "committedDate": "2020-10-19T14:02:16Z", "type": "commit"}, {"oid": "8a9b356d2800764f554a0f09bea6374b949b8215", "url": "https://github.com/getodk/collect/commit/8a9b356d2800764f554a0f09bea6374b949b8215", "message": "Extract logic that starts audio recording Activity", "committedDate": "2020-10-19T14:02:17Z", "type": "commit"}, {"oid": "6b261bb447fbc1c1ac1f29f3eb73a5cdc246cbfb", "url": "https://github.com/getodk/collect/commit/6b261bb447fbc1c1ac1f29f3eb73a5cdc246cbfb", "message": "Move opening recording Activity behind interface", "committedDate": "2020-10-19T14:02:17Z", "type": "commit"}, {"oid": "f94776d0840ef4c2f6d79ec13e45538a6b58e58e", "url": "https://github.com/getodk/collect/commit/f94776d0840ef4c2f6d79ec13e45538a6b58e58e", "message": "Pull audio choosing logic behind interface", "committedDate": "2020-10-19T14:02:17Z", "type": "commit"}, {"oid": "98ca69ce6d8c5a4bbf1c694eeaf1ddb797db1532", "url": "https://github.com/getodk/collect/commit/98ca69ce6d8c5a4bbf1c694eeaf1ddb797db1532", "message": "Remove mocked file usage in test", "committedDate": "2020-10-19T14:02:17Z", "type": "commit"}, {"oid": "808c86b35406daa06d6d3e3d8a18b1c5287d8f6d", "url": "https://github.com/getodk/collect/commit/808c86b35406daa06d6d3e3d8a18b1c5287d8f6d", "message": "Attempt to make it clearer what QuestionMediaManager is up to", "committedDate": "2020-10-19T14:02:17Z", "type": "commit"}, {"oid": "ce54f2eb884e8466def0dc194d29c589a142222a", "url": "https://github.com/getodk/collect/commit/ce54f2eb884e8466def0dc194d29c589a142222a", "message": "Use QuestionMediaManager to access instance media files in AudioWidget", "committedDate": "2020-10-19T14:02:18Z", "type": "commit"}, {"oid": "7b8f965fc188a952f5de6aea53c56da365765e71", "url": "https://github.com/getodk/collect/commit/7b8f965fc188a952f5de6aea53c56da365765e71", "message": "Use string instead of file for AudioWidget data", "committedDate": "2020-10-19T14:02:18Z", "type": "commit"}, {"oid": "0f2af07788f6dd3b269ba8de1932f7d05acf7542", "url": "https://github.com/getodk/collect/commit/0f2af07788f6dd3b269ba8de1932f7d05acf7542", "message": "Only show capture/choose button when AudioWidget does not have answer", "committedDate": "2020-10-19T14:02:18Z", "type": "commit"}, {"oid": "0e13df381c00fa71b932c32e44490aae03beec30", "url": "https://github.com/getodk/collect/commit/0e13df381c00fa71b932c32e44490aae03beec30", "message": "Fix choose sound flow", "committedDate": "2020-10-19T14:02:18Z", "type": "commit"}, {"oid": "e89504f071818eea260fa092adc1a8720b1adfed", "url": "https://github.com/getodk/collect/commit/e89504f071818eea260fa092adc1a8720b1adfed", "message": "Hide button when audio is recorded/chosen", "committedDate": "2020-10-19T14:02:18Z", "type": "commit"}, {"oid": "a9c6addab766a1991aa7e84cc4c894cf165faaef", "url": "https://github.com/getodk/collect/commit/a9c6addab766a1991aa7e84cc4c894cf165faaef", "message": "Make sure elevation shows for audio controller", "committedDate": "2020-10-19T14:02:19Z", "type": "commit"}, {"oid": "044205087e2343295bc3feb2f4403ecf9e1c99fd", "url": "https://github.com/getodk/collect/commit/044205087e2343295bc3feb2f4403ecf9e1c99fd", "message": "Smooth out audio controller seek bar", "committedDate": "2020-10-19T14:02:19Z", "type": "commit"}, {"oid": "207910b44b42ffc9802be1031c79fb0904082454", "url": "https://github.com/getodk/collect/commit/207910b44b42ffc9802be1031c79fb0904082454", "message": "Always use the same frame rate for updating seekbar", "committedDate": "2020-10-19T14:02:19Z", "type": "commit"}, {"oid": "8cec0ad2e30236c85dc15f1b97e7e8b1952fb4c7", "url": "https://github.com/getodk/collect/commit/8cec0ad2e30236c85dc15f1b97e7e8b1952fb4c7", "message": "Optimize imports", "committedDate": "2020-10-19T14:02:19Z", "type": "commit"}, {"oid": "253cb4bcb801b9140c0d0aa4f736e4ddb597c2ac", "url": "https://github.com/getodk/collect/commit/253cb4bcb801b9140c0d0aa4f736e4ddb597c2ac", "message": "Convert test-shared to kotlin", "committedDate": "2020-10-19T14:02:19Z", "type": "commit"}, {"oid": "2dd3f41d1f953a51bcaab7b74e70ef9654068f41", "url": "https://github.com/getodk/collect/commit/2dd3f41d1f953a51bcaab7b74e70ef9654068f41", "message": "Add quality checks to modules", "committedDate": "2020-10-19T14:02:20Z", "type": "commit"}, {"oid": "1ff5f6b69a70cb971b4707c660606ef69033af5a", "url": "https://github.com/getodk/collect/commit/1ff5f6b69a70cb971b4707c660606ef69033af5a", "message": "Add Kotlin style checks and fix failing checks\n\nThis adds ktlint which appears to be the most popular checker.", "committedDate": "2020-10-19T14:02:20Z", "type": "commit"}, {"oid": "768b009fd3a2214e98212ef6008e637d444e5c35", "url": "https://github.com/getodk/collect/commit/768b009fd3a2214e98212ef6008e637d444e5c35", "message": "Add audioclips to CI tests", "committedDate": "2020-10-19T14:02:20Z", "type": "commit"}, {"oid": "3811f7f97ff2ce7bb66aea5c8b78ff3e516e5249", "url": "https://github.com/getodk/collect/commit/3811f7f97ff2ce7bb66aea5c8b78ff3e516e5249", "message": "Correct module name for CI label", "committedDate": "2020-10-19T14:02:20Z", "type": "commit"}, {"oid": "52655d6d8a3108dae58114f9178cbc3f613e1545", "url": "https://github.com/getodk/collect/commit/52655d6d8a3108dae58114f9178cbc3f613e1545", "message": "Use variables for dependency version", "committedDate": "2020-10-19T14:02:20Z", "type": "commit"}, {"oid": "bd968f54eb60ff831e924957f16e1d7f6f7af810", "url": "https://github.com/getodk/collect/commit/bd968f54eb60ff831e924957f16e1d7f6f7af810", "message": "Add more detail around QuestionMediaManager implementation and move ViewModelAudioPlayer", "committedDate": "2020-10-19T14:02:20Z", "type": "commit"}, {"oid": "5f9054796ce74750cdb6f27bba45c23b290b4ddc", "url": "https://github.com/getodk/collect/commit/5f9054796ce74750cdb6f27bba45c23b290b4ddc", "message": "Add optimize imports", "committedDate": "2020-10-19T14:02:21Z", "type": "commit"}, {"oid": "5f9054796ce74750cdb6f27bba45c23b290b4ddc", "url": "https://github.com/getodk/collect/commit/5f9054796ce74750cdb6f27bba45c23b290b4ddc", "message": "Add optimize imports", "committedDate": "2020-10-19T14:02:21Z", "type": "forcePushed"}, {"oid": "4327c6bdea4c4f7c59218d2f4baeaff2fce945af", "url": "https://github.com/getodk/collect/commit/4327c6bdea4c4f7c59218d2f4baeaff2fce945af", "message": "Make module names consistent", "committedDate": "2020-10-19T17:01:48Z", "type": "commit"}]}