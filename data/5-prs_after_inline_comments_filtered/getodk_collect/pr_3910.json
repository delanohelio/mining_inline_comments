{"pr_number": 3910, "pr_title": "Implemented viewmodel for RankingWidgetDialog to solve the problem with serialization", "pr_createdAt": "2020-06-05T17:51:03Z", "pr_url": "https://github.com/getodk/collect/pull/3910", "timeline": [{"oid": "358de10cd61a2f8e0d5a23915d9ffcdd784b6b8d", "url": "https://github.com/getodk/collect/commit/358de10cd61a2f8e0d5a23915d9ffcdd784b6b8d", "message": "Implemented viewmodel for RankingWidgetDialog to solve the problem with serialization", "committedDate": "2020-06-05T17:47:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIwODk1MQ==", "url": "https://github.com/getodk/collect/pull/3910#discussion_r436208951", "bodyText": "Since this is deprecated, I think that in new code it makes sense to use the ViewModelProvider constructor - new ViewModelProvider(this, new RankingViewModel.Factory(items, formIndex)).get(RankingViewModel.class)", "author": "lognaturel", "createdAt": "2020-06-05T23:47:33Z", "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/RankingWidgetDialog.java", "diffHunk": "@@ -35,57 +36,46 @@\n \n import org.javarosa.core.model.FormIndex;\n import org.javarosa.core.model.SelectChoice;\n+import org.jetbrains.annotations.NotNull;\n import org.odk.collect.android.R;\n import org.odk.collect.android.R.string;\n import org.odk.collect.android.adapters.RankingListAdapter;\n+import org.odk.collect.android.fragments.viewmodels.RankingViewModel;\n import org.odk.collect.android.utilities.QuestionFontSizeUtils;\n import org.odk.collect.android.utilities.RankingItemTouchHelperCallback;\n \n-import java.io.Serializable;\n+import java.util.ArrayList;\n import java.util.List;\n \n public class RankingWidgetDialog extends DialogFragment {\n-\n-    private static final String ITEMS = \"items\";\n-    private static final String FORM_INDEX = \"form_index\";\n-\n     private RankingListener listener;\n-\n     private RankingListAdapter rankingListAdapter;\n     private List<SelectChoice> items;\n     private FormIndex formIndex;\n+    private RankingViewModel viewModel;\n \n     public interface RankingListener {\n         void onRankingChanged(List<SelectChoice> items);\n     }\n \n-    public static RankingWidgetDialog newInstance(List<SelectChoice> items, FormIndex formIndex) {\n-        RankingWidgetDialog dialog = new RankingWidgetDialog();\n-        Bundle bundle = new Bundle();\n-        bundle.putSerializable(ITEMS, (Serializable) items);\n-        bundle.putSerializable(FORM_INDEX, formIndex);\n-        dialog.setArguments(bundle);\n+    public RankingWidgetDialog() {\n+    }\n \n-        return dialog;\n+    public RankingWidgetDialog(List<SelectChoice> items, FormIndex formIndex) {\n+        this.items = new ArrayList<>(items);\n+        this.formIndex = formIndex;\n     }\n \n     @Override\n-    public void onAttach(Context context) {\n+    public void onAttach(@NotNull Context context) {\n         super.onAttach(context);\n         if (context instanceof RankingListener) {\n             listener = (RankingListener) context;\n         }\n-    }\n-\n-    @Override\n-    public void onCreate(Bundle savedInstanceState) {\n-        super.onCreate(savedInstanceState);\n-        items = (List<SelectChoice>) (savedInstanceState == null\n-                ? getArguments().getSerializable(ITEMS)\n-                : savedInstanceState.getSerializable(ITEMS));\n-        formIndex = (FormIndex) (savedInstanceState == null\n-                ? getArguments().getSerializable(FORM_INDEX)\n-                : savedInstanceState.getSerializable(FORM_INDEX));\n+        viewModel = ViewModelProviders.of(this, new RankingViewModel.Factory(items, formIndex)).get(RankingViewModel.class);", "originalCommit": "358de10cd61a2f8e0d5a23915d9ffcdd784b6b8d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI2NTg5NA==", "url": "https://github.com/getodk/collect/pull/3910#discussion_r437265894", "bodyText": "Fixed.", "author": "grzesiek2010", "createdAt": "2020-06-09T09:21:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIwODk1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIxNTMwMg==", "url": "https://github.com/getodk/collect/pull/3910#discussion_r436215302", "bodyText": "I don't love that these fields still end up existing since the point of the view model is to host them. What I was imagining originally is the activity creating the view model and the dialog fragment accessing it. I wasn't thinking about how the activity in this case is FormEntryActivity but currently it's the widget's responsibility to know about the items.\nGiven the existing infrastructure, I find this ok for now. It's something @SaumiaSinghal and @seadowg could give another look at when they get to this widget.", "author": "lognaturel", "createdAt": "2020-06-06T00:29:17Z", "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/RankingWidgetDialog.java", "diffHunk": "@@ -35,57 +36,46 @@\n \n import org.javarosa.core.model.FormIndex;\n import org.javarosa.core.model.SelectChoice;\n+import org.jetbrains.annotations.NotNull;\n import org.odk.collect.android.R;\n import org.odk.collect.android.R.string;\n import org.odk.collect.android.adapters.RankingListAdapter;\n+import org.odk.collect.android.fragments.viewmodels.RankingViewModel;\n import org.odk.collect.android.utilities.QuestionFontSizeUtils;\n import org.odk.collect.android.utilities.RankingItemTouchHelperCallback;\n \n-import java.io.Serializable;\n+import java.util.ArrayList;\n import java.util.List;\n \n public class RankingWidgetDialog extends DialogFragment {\n-\n-    private static final String ITEMS = \"items\";\n-    private static final String FORM_INDEX = \"form_index\";\n-\n     private RankingListener listener;\n-\n     private RankingListAdapter rankingListAdapter;\n     private List<SelectChoice> items;\n     private FormIndex formIndex;\n+    private RankingViewModel viewModel;\n \n     public interface RankingListener {\n         void onRankingChanged(List<SelectChoice> items);\n     }\n \n-    public static RankingWidgetDialog newInstance(List<SelectChoice> items, FormIndex formIndex) {\n-        RankingWidgetDialog dialog = new RankingWidgetDialog();\n-        Bundle bundle = new Bundle();\n-        bundle.putSerializable(ITEMS, (Serializable) items);\n-        bundle.putSerializable(FORM_INDEX, formIndex);\n-        dialog.setArguments(bundle);\n+    public RankingWidgetDialog() {\n+    }\n \n-        return dialog;\n+    public RankingWidgetDialog(List<SelectChoice> items, FormIndex formIndex) {\n+        this.items = new ArrayList<>(items);\n+        this.formIndex = formIndex;", "originalCommit": "358de10cd61a2f8e0d5a23915d9ffcdd784b6b8d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI2NDExOA==", "url": "https://github.com/getodk/collect/pull/3910#discussion_r437264118", "bodyText": "What I was imagining originally is the activity creating the view model and the dialog fragment accessing it\n\nwe can't create viewmodels using activity because then if we have multiple rank widgets they will share the same viewmodel with the same data. We need to create viewmodels using fragment scope.\nI didn't think about it much so maybe I'm wrong but generally it would be great if every single widget were a fragment then we could have a viewmodel for every widget easily.", "author": "grzesiek2010", "createdAt": "2020-06-09T09:19:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIxNTMwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIxODc1OQ==", "url": "https://github.com/getodk/collect/pull/3910#discussion_r436218759", "bodyText": "This is not really related to this PR but it just came to mind that I don't really know when DialotUtils.showIfNotShowing makes a difference. Should it be used here?", "author": "lognaturel", "createdAt": "2020-06-06T00:42:23Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/RankingWidget.java", "diffHunk": "@@ -98,7 +98,7 @@ public void onButtonClick(int buttonId) {\n         if (formController != null) {\n             formController.setIndexWaitingForData(getFormEntryPrompt().getIndex());\n         }\n-        RankingWidgetDialog rankingWidgetDialog = RankingWidgetDialog.newInstance(savedItems == null ? items : savedItems, getFormEntryPrompt().getIndex());\n+        RankingWidgetDialog rankingWidgetDialog = new RankingWidgetDialog(savedItems == null ? items : savedItems, getFormEntryPrompt().getIndex());\n         rankingWidgetDialog.show(((FormEntryActivity) getContext()).getSupportFragmentManager(), \"RankingDialog\");", "originalCommit": "358de10cd61a2f8e0d5a23915d9ffcdd784b6b8d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI3MTMwMg==", "url": "https://github.com/getodk/collect/pull/3910#discussion_r437271302", "bodyText": "Can't be sure whether it's needed here I doubt but... generally it's good to use that method it's a defensive approach which could prevent some strange and rare crashes but that method uses bundle to pass data so that's what I need to avoid in this case.", "author": "grzesiek2010", "createdAt": "2020-06-09T09:27:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIxODc1OQ=="}], "type": "inlineReview"}, {"oid": "78157174a7f24a8b0ecc0208ab39c37f5f24a5c5", "url": "https://github.com/getodk/collect/commit/78157174a7f24a8b0ecc0208ab39c37f5f24a5c5", "message": "Code improvements", "committedDate": "2020-06-09T09:20:10Z", "type": "commit"}]}