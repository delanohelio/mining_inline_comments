{"pr_number": 4215, "pr_title": "Stop user leaving recording", "pr_createdAt": "2020-11-10T15:20:44Z", "pr_url": "https://github.com/getodk/collect/pull/4215", "timeline": [{"oid": "b8a54803ced6543a590f353fee340f186a8a714c", "url": "https://github.com/getodk/collect/commit/b8a54803ced6543a590f353fee340f186a8a714c", "message": "Make sure swipe handler is called correctly", "committedDate": "2020-11-10T15:40:54Z", "type": "forcePushed"}, {"oid": "b045b99d7790ac67207e230b59ef6147b82f04db", "url": "https://github.com/getodk/collect/commit/b045b99d7790ac67207e230b59ef6147b82f04db", "message": "Make sure swipe handler is called correctly", "committedDate": "2020-11-11T13:49:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM4MDI0NA==", "url": "https://github.com/getodk/collect/pull/4215#discussion_r521380244", "bodyText": "Changing from a switch to an if is now suggested by Android Studio.", "author": "seadowg", "createdAt": "2020-11-11T14:05:22Z", "path": "collect_app/src/main/java/org/odk/collect/android/formentry/FormEntryMenuDelegate.java", "diffHunk": "@@ -82,40 +94,43 @@ public void onPrepareOptionsMenu(Menu menu) {\n             backgroundLocation.setChecked(GeneralSharedPreferences.getInstance().getBoolean(KEY_BACKGROUND_LOCATION, true));\n         }\n \n-        menu.findItem(R.id.menu_add_repeat).setVisible(getFormEntryViewModel().canAddRepeat());\n+        menu.findItem(R.id.menu_add_repeat).setVisible(formEntryViewModel.canAddRepeat());\n     }\n \n     @Override\n     public boolean onOptionsItemSelected(MenuItem item) {\n-        switch (item.getItemId()) {\n-            case R.id.menu_add_repeat:\n-                getFormSaveViewModel().saveAnswersForScreen(answersProvider.getAnswers());\n-                getFormEntryViewModel().promptForNewRepeat();\n-                formIndexAnimationHandler.handle(getFormEntryViewModel().getCurrentIndex());\n-                return true;\n-\n-            case R.id.menu_preferences:\n+        if (item.getItemId() == R.id.menu_add_repeat) {", "originalCommit": "5a97d4fe2e53baf8633701ec8cf23949b2f0b081", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI2ODM3NQ==", "url": "https://github.com/getodk/collect/pull/4215#discussion_r523268375", "bodyText": "Looks like it's used to keep track of which questions' guidance hints are expanded and the search text for selects with the search appearance. Would be great to move all that to a view model, I think.", "author": "lognaturel", "createdAt": "2020-11-13T22:35:14Z", "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "diffHunk": "@@ -1476,99 +1467,77 @@ public boolean dispatchTouchEvent(MotionEvent mv) {\n         return handled; // this is always true\n     }\n \n-    /**\n-     * Determines what should be displayed on the screen. Possible options are:\n-     * a question, an ask repeat dialog, or the submit screen. Also saves\n-     * answers to the data model after checking constraints.\n-     */\n-    public void showNextView() {\n-        state = null;\n-        try {\n-            FormController formController = getFormController();\n-            if (saveBeforeNextView(formController)) {\n-                return;\n-            }\n-\n-            int originalEvent = formController.getEvent();\n-            int event = formController.stepToNextScreenEvent();\n-\n-            // Helps prevent transition animation at the end of the form (if user swipes left\n-            // she will stay on the same screen)\n-            if (originalEvent == event && originalEvent == FormEntryController.EVENT_END_OF_FORM) {\n-                swipeHandler.setBeenSwiped(false);\n-                return;\n-            }\n+    @Override\n+    public void onSwipeForward() {\n+        moveScreen(FORWARDS);\n+    }\n \n-            formIndexAnimationHandler.handle(getFormController().getFormIndex());\n-        } catch (JavaRosaException e) {\n-            Timber.d(e);\n-            createErrorDialog(e.getCause().getMessage(), DO_NOT_EXIT);\n-        }\n+    @Override\n+    public void onSwipeBackward() {\n+        moveScreen(BACKWARDS);\n     }\n \n-    /**\n-     * If moving backwards is allowed, displays the view for the previous question or field list.\n-     * Steps the global {@link FormController} to the previous question and saves answers to the\n-     * data model without checking constraints.\n-     */\n-    public void showPreviousView() {\n-        if (allowMovingBackwards) {\n-            state = null;\n-            FormController formController = getFormController();\n-            if (formController != null) {\n-                // The answer is saved on a back swipe, but question constraints are ignored.\n-                if (formController.currentPromptIsQuestion()) {\n-                    saveAnswersForCurrentScreen(DO_NOT_EVALUATE_CONSTRAINTS);\n-                }\n+    private void moveScreen(Direction direction) {\n+        FormController formController = getFormController();\n+        if (formController == null) {\n+            Timber.w(\"FormController has a null value\");\n+            swipeHandler.setBeenSwiped(false);\n+            return;\n+        }\n \n-                try {\n-                    if (formController.getEvent() != FormEntryController.EVENT_BEGINNING_OF_FORM) {\n-                        int event = formController.stepToPreviousScreenEvent();\n+        if (audioRecorderViewModel.isRecording().getValue()) {\n+            // We want the user to stop recording before changing screens\n+            DialogUtils.showIfNotShowing(RecordingWarningDialogFragment.class, getSupportFragmentManager());\n+            swipeHandler.setBeenSwiped(false);\n+            return;\n+        }\n \n-                        // If we are the beginning of the form, there is no previous view to show\n-                        if (event == FormEntryController.EVENT_BEGINNING_OF_FORM) {\n-                            event = formController.stepToNextScreenEvent();\n-                            swipeHandler.setBeenSwiped(false);\n+        if (direction == FORWARDS && formController.getEvent() == FormEntryController.EVENT_END_OF_FORM) {\n+            // We're tryin to move forwards at the end of the form so just cancel\n+            swipeHandler.setBeenSwiped(false);\n+            return;\n+        } else if (direction == BACKWARDS && !allowMovingBackwards) {\n+            // We're not allowed to move backwards but trying to so just cancel\n+            swipeHandler.setBeenSwiped(false);\n+            return;\n+        }\n \n-                            if (event != EVENT_PROMPT_NEW_REPEAT) {\n-                                // Returning here prevents the same view sliding when user is on the first screen\n-                                return;\n-                            }\n-                        }\n+        state = null; // This is needed for something but is definitely suspect", "originalCommit": "4838e6bb6d4f6765e716294bd2c1c446c1893643", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI2OTg5Mw==", "url": "https://github.com/getodk/collect/pull/4215#discussion_r523269893", "bodyText": "Why pull this direction-specific stuff out? Seems it should either be in the switch below or in the direction specific methods. Or if it's pulled out and their bodies are the same maybe it should be a single conditional.\nIf pulling it out, why not also pull the analogous beginning of form test out here? (Not that I think it's actually possible to be at the beginning of form event)", "author": "lognaturel", "createdAt": "2020-11-13T22:40:11Z", "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "diffHunk": "@@ -1476,99 +1467,77 @@ public boolean dispatchTouchEvent(MotionEvent mv) {\n         return handled; // this is always true\n     }\n \n-    /**\n-     * Determines what should be displayed on the screen. Possible options are:\n-     * a question, an ask repeat dialog, or the submit screen. Also saves\n-     * answers to the data model after checking constraints.\n-     */\n-    public void showNextView() {\n-        state = null;\n-        try {\n-            FormController formController = getFormController();\n-            if (saveBeforeNextView(formController)) {\n-                return;\n-            }\n-\n-            int originalEvent = formController.getEvent();\n-            int event = formController.stepToNextScreenEvent();\n-\n-            // Helps prevent transition animation at the end of the form (if user swipes left\n-            // she will stay on the same screen)\n-            if (originalEvent == event && originalEvent == FormEntryController.EVENT_END_OF_FORM) {\n-                swipeHandler.setBeenSwiped(false);\n-                return;\n-            }\n+    @Override\n+    public void onSwipeForward() {\n+        moveScreen(FORWARDS);\n+    }\n \n-            formIndexAnimationHandler.handle(getFormController().getFormIndex());\n-        } catch (JavaRosaException e) {\n-            Timber.d(e);\n-            createErrorDialog(e.getCause().getMessage(), DO_NOT_EXIT);\n-        }\n+    @Override\n+    public void onSwipeBackward() {\n+        moveScreen(BACKWARDS);\n     }\n \n-    /**\n-     * If moving backwards is allowed, displays the view for the previous question or field list.\n-     * Steps the global {@link FormController} to the previous question and saves answers to the\n-     * data model without checking constraints.\n-     */\n-    public void showPreviousView() {\n-        if (allowMovingBackwards) {\n-            state = null;\n-            FormController formController = getFormController();\n-            if (formController != null) {\n-                // The answer is saved on a back swipe, but question constraints are ignored.\n-                if (formController.currentPromptIsQuestion()) {\n-                    saveAnswersForCurrentScreen(DO_NOT_EVALUATE_CONSTRAINTS);\n-                }\n+    private void moveScreen(Direction direction) {\n+        FormController formController = getFormController();\n+        if (formController == null) {\n+            Timber.w(\"FormController has a null value\");\n+            swipeHandler.setBeenSwiped(false);\n+            return;\n+        }\n \n-                try {\n-                    if (formController.getEvent() != FormEntryController.EVENT_BEGINNING_OF_FORM) {\n-                        int event = formController.stepToPreviousScreenEvent();\n+        if (audioRecorderViewModel.isRecording().getValue()) {\n+            // We want the user to stop recording before changing screens\n+            DialogUtils.showIfNotShowing(RecordingWarningDialogFragment.class, getSupportFragmentManager());\n+            swipeHandler.setBeenSwiped(false);\n+            return;\n+        }\n \n-                        // If we are the beginning of the form, there is no previous view to show\n-                        if (event == FormEntryController.EVENT_BEGINNING_OF_FORM) {\n-                            event = formController.stepToNextScreenEvent();\n-                            swipeHandler.setBeenSwiped(false);\n+        if (direction == FORWARDS && formController.getEvent() == FormEntryController.EVENT_END_OF_FORM) {", "originalCommit": "4838e6bb6d4f6765e716294bd2c1c446c1893643", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDEwNTQyOQ==", "url": "https://github.com/getodk/collect/pull/4215#discussion_r524105429", "bodyText": "I initially pulled all these out so the method had more of a \"guard clauses followed by the happy logic\" structure as it was really cluttered. That helped me work out what I could move out to the view models. I'll try putting them back into the switch now and see how it feels though.", "author": "seadowg", "createdAt": "2020-11-16T10:43:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI2OTg5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDEwODkyNw==", "url": "https://github.com/getodk/collect/pull/4215#discussion_r524108927", "bodyText": "Ah it's good to keep them where they are so state = null happens in the same place. Initially that had to be in both parts of the switch. It would be cool to pair on this now you've got some context in your head. I'll ping you on Slack.", "author": "seadowg", "createdAt": "2020-11-16T10:47:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI2OTg5Mw=="}], "type": "inlineReview"}, {"oid": "ab7e8a01dd10102601e5f74b239bb5951b10e85f", "url": "https://github.com/getodk/collect/commit/ab7e8a01dd10102601e5f74b239bb5951b10e85f", "message": "Attempt to simplify form moving forwards/backwards logic", "committedDate": "2020-11-17T15:07:20Z", "type": "commit"}, {"oid": "4c968f63f08f47acde4024c55bda18c5d0db7b1e", "url": "https://github.com/getodk/collect/commit/4c968f63f08f47acde4024c55bda18c5d0db7b1e", "message": "Show warning when trying to swipe between screens while recording", "committedDate": "2020-11-17T15:09:30Z", "type": "commit"}, {"oid": "01dd878155c4d0181b6308f4faacda5dc054e184", "url": "https://github.com/getodk/collect/commit/01dd878155c4d0181b6308f4faacda5dc054e184", "message": "Show warning when trying to open hierarchy while recording", "committedDate": "2020-11-17T15:10:31Z", "type": "commit"}, {"oid": "57ac40229f9715299c32fb6cd7c84dbe2d6177cd", "url": "https://github.com/getodk/collect/commit/57ac40229f9715299c32fb6cd7c84dbe2d6177cd", "message": "Use DialogFragment for warning dialog", "committedDate": "2020-11-17T15:10:33Z", "type": "commit"}, {"oid": "7dbb6103ea2e236815fa66a64b04b5836a79d2c2", "url": "https://github.com/getodk/collect/commit/7dbb6103ea2e236815fa66a64b04b5836a79d2c2", "message": "Show warning when user tries to quite form while recording", "committedDate": "2020-11-17T15:12:36Z", "type": "commit"}, {"oid": "f54ac2d57e2d5b5b8da1bb9f229991bffa7c4709", "url": "https://github.com/getodk/collect/commit/f54ac2d57e2d5b5b8da1bb9f229991bffa7c4709", "message": "Rework audio test", "committedDate": "2020-11-17T15:12:37Z", "type": "commit"}, {"oid": "6922f1b53ec2fbffda7f436be5d8bb20ba803d4b", "url": "https://github.com/getodk/collect/commit/6922f1b53ec2fbffda7f436be5d8bb20ba803d4b", "message": "Show warning when trying to open settings while recording", "committedDate": "2020-11-17T15:12:37Z", "type": "commit"}, {"oid": "1aefbb6d8a6440cb349a6a57c92da16605850382", "url": "https://github.com/getodk/collect/commit/1aefbb6d8a6440cb349a6a57c92da16605850382", "message": "Pass ViewModels in at constructor", "committedDate": "2020-11-17T15:12:38Z", "type": "commit"}, {"oid": "5dc9f8bef7248a9541e2d139f0fbaba80a7d4c85", "url": "https://github.com/getodk/collect/commit/5dc9f8bef7248a9541e2d139f0fbaba80a7d4c85", "message": "Add openHiearchy action to viewmodel", "committedDate": "2020-11-17T15:12:38Z", "type": "commit"}, {"oid": "68312a464dc8312a1b496e5e44af29e66f06ef7d", "url": "https://github.com/getodk/collect/commit/68312a464dc8312a1b496e5e44af29e66f06ef7d", "message": "Introduce one method for grabbing answers in FormEntryActivity", "committedDate": "2020-11-17T15:12:38Z", "type": "commit"}, {"oid": "584c1f9b04d03e992181ecde40fcd79d325f98a8", "url": "https://github.com/getodk/collect/commit/584c1f9b04d03e992181ecde40fcd79d325f98a8", "message": "Move hierarchy logic to delegate", "committedDate": "2020-11-17T15:15:42Z", "type": "commit"}, {"oid": "684b4d25cca74f1210fd5de8c2449c4638318a64", "url": "https://github.com/getodk/collect/commit/684b4d25cca74f1210fd5de8c2449c4638318a64", "message": "Make sure swipe handler is called correctly", "committedDate": "2020-11-17T15:15:45Z", "type": "commit"}, {"oid": "0ea3797472bf2dbc031de757f3af684c0c042e71", "url": "https://github.com/getodk/collect/commit/0ea3797472bf2dbc031de757f3af684c0c042e71", "message": "Add description comments to strings", "committedDate": "2020-11-17T15:15:45Z", "type": "commit"}, {"oid": "5c42e1a23abf0d00d248c1c8a723eca4f40cd6ad", "url": "https://github.com/getodk/collect/commit/5c42e1a23abf0d00d248c1c8a723eca4f40cd6ad", "message": "Make sure audiorecorder tests run on ci", "committedDate": "2020-11-17T15:15:45Z", "type": "commit"}, {"oid": "e443b05e20b2f0f22a9c79101c449b4d5151f9b7", "url": "https://github.com/getodk/collect/commit/e443b05e20b2f0f22a9c79101c449b4d5151f9b7", "message": "Get rid of unneeded cleanUp call", "committedDate": "2020-11-17T15:15:46Z", "type": "commit"}, {"oid": "83f5daf691015b6df36a84ca261fdb244999cb6f", "url": "https://github.com/getodk/collect/commit/83f5daf691015b6df36a84ca261fdb244999cb6f", "message": "Use explicit rather than implicit Robolectric application replacement", "committedDate": "2020-11-17T15:15:46Z", "type": "commit"}, {"oid": "415f4ba8f656d5b3e8eb7f730ff670838f7cd328", "url": "https://github.com/getodk/collect/commit/415f4ba8f656d5b3e8eb7f730ff670838f7cd328", "message": "Move string to correct place", "committedDate": "2020-11-17T15:15:46Z", "type": "commit"}, {"oid": "94f4a4a3cb934c707c4d36cb7b75d8ced8f7c2ca", "url": "https://github.com/getodk/collect/commit/94f4a4a3cb934c707c4d36cb7b75d8ced8f7c2ca", "message": "Tweak strings", "committedDate": "2020-11-17T15:15:46Z", "type": "commit"}, {"oid": "e74d586b58a8172a417a1b147d0123ca82b2fc4b", "url": "https://github.com/getodk/collect/commit/e74d586b58a8172a417a1b147d0123ca82b2fc4b", "message": "Remove using activity state to keep guidance hint expanded on rotation", "committedDate": "2020-11-17T15:15:46Z", "type": "commit"}, {"oid": "3edbc6ffb85f21fce9d66bd6ad9510bb71adb78c", "url": "https://github.com/getodk/collect/commit/3edbc6ffb85f21fce9d66bd6ad9510bb71adb78c", "message": "Remove using activity state to save select search term", "committedDate": "2020-11-17T15:15:47Z", "type": "commit"}, {"oid": "e5eb994cc4bb2b20a900e6bae7a150d8fd5c3276", "url": "https://github.com/getodk/collect/commit/e5eb994cc4bb2b20a900e6bae7a150d8fd5c3276", "message": "Disable auto saving of search views on select to prevent weirdness when there are multiple on screen", "committedDate": "2020-11-17T15:15:47Z", "type": "commit"}, {"oid": "a52b00584827c9ec0270f67f9b4448e488079c84", "url": "https://github.com/getodk/collect/commit/a52b00584827c9ec0270f67f9b4448e488079c84", "message": "Spike out using view model to cache search query", "committedDate": "2020-11-17T15:15:47Z", "type": "commit"}, {"oid": "6096f02f03d6d11421a2e8a011141f906a89bcb6", "url": "https://github.com/getodk/collect/commit/6096f02f03d6d11421a2e8a011141f906a89bcb6", "message": "Remove state saving from widgets", "committedDate": "2020-11-17T15:15:47Z", "type": "commit"}, {"oid": "49e73790d089af08b4a7e613768b430d76e4fd1b", "url": "https://github.com/getodk/collect/commit/49e73790d089af08b4a7e613768b430d76e4fd1b", "message": "Remove references to swipe handle from moveScreen", "committedDate": "2020-11-17T15:15:48Z", "type": "commit"}, {"oid": "a13496203417ceba50c1927cc44c8483f8ad1fee", "url": "https://github.com/getodk/collect/commit/a13496203417ceba50c1927cc44c8483f8ad1fee", "message": "Move checks into switch", "committedDate": "2020-11-17T15:15:48Z", "type": "commit"}, {"oid": "a13496203417ceba50c1927cc44c8483f8ad1fee", "url": "https://github.com/getodk/collect/commit/a13496203417ceba50c1927cc44c8483f8ad1fee", "message": "Move checks into switch", "committedDate": "2020-11-17T15:15:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQ0ODYwMw==", "url": "https://github.com/getodk/collect/pull/4215#discussion_r525448603", "bodyText": "Maybe a reason to go with if/else?", "author": "lognaturel", "createdAt": "2020-11-17T19:46:28Z", "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "diffHunk": "@@ -1506,7 +1508,11 @@ private void moveScreen(Direction direction) {\n \n                 formEntryViewModel.moveBackward();\n                 formIndexAnimationHandler.handle(formController.getFormIndex());\n-                break;\n+                return true;\n+\n+            default:\n+                // Java switch statements aren't smart enough to know there are only two possibilities", "originalCommit": "49e73790d089af08b4a7e613768b430d76e4fd1b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTk0NjY1OA==", "url": "https://github.com/getodk/collect/pull/4215#discussion_r525946658", "bodyText": "Yeah, you're right. I just miss when so much. It feels like all recent signs (Android tools changes, me making mistakes) are pointing to avoid switch altogether. I'll change this.", "author": "seadowg", "createdAt": "2020-11-18T09:44:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQ0ODYwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQ1MTQ4Mg==", "url": "https://github.com/getodk/collect/pull/4215#discussion_r525451482", "bodyText": "Why doesn't this also move to moveScreen?", "author": "lognaturel", "createdAt": "2020-11-17T19:48:53Z", "path": "collect_app/src/main/java/org/odk/collect/android/formentry/FormEntryViewModel.java", "diffHunk": "@@ -128,6 +134,44 @@ public boolean canAddRepeat() {\n         }\n     }\n \n+    public void moveForward() {\n+        try {\n+            formController.stepToNextScreenEvent();\n+        } catch (JavaRosaException e) {\n+            error.setValue(e.getCause().getMessage());\n+            return;\n+        }\n+\n+        formController.getAuditEventLogger().flush(); // Close events waiting for an end time\n+    }\n+\n+    public void moveBackward() {\n+        if (formController.getEvent() != FormEntryController.EVENT_BEGINNING_OF_FORM) {", "originalCommit": "a13496203417ceba50c1927cc44c8483f8ad1fee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTk0NzQwNQ==", "url": "https://github.com/getodk/collect/pull/4215#discussion_r525947405", "bodyText": "Ah yeah I got distracted by the search/rotate problem and didn't clean this up. Will move it around today.", "author": "seadowg", "createdAt": "2020-11-18T09:45:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQ1MTQ4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTk4NzA4Nw==", "url": "https://github.com/getodk/collect/pull/4215#discussion_r525987087", "bodyText": "Realized we don't actually need this check at all so avoiding have it anywhere.", "author": "seadowg", "createdAt": "2020-11-18T10:44:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQ1MTQ4Mg=="}], "type": "inlineReview"}, {"oid": "dbe6e4fda287758924d83eda43b3951f0f8422bd", "url": "https://github.com/getodk/collect/commit/dbe6e4fda287758924d83eda43b3951f0f8422bd", "message": "Convert switch to if", "committedDate": "2020-11-18T10:07:31Z", "type": "commit"}, {"oid": "56d4e394c1574c02bf31a6536d5defad3e743b2d", "url": "https://github.com/getodk/collect/commit/56d4e394c1574c02bf31a6536d5defad3e743b2d", "message": "Remove check for BEGINNING_OF_FORM as we will never be on that event", "committedDate": "2020-11-18T10:32:14Z", "type": "commit"}, {"oid": "fa183f3fe2d1d491e31db2b7f8daff16cc2364f6", "url": "https://github.com/getodk/collect/commit/fa183f3fe2d1d491e31db2b7f8daff16cc2364f6", "message": "Remove check for repeat that wasn't doing anything", "committedDate": "2020-11-18T10:43:59Z", "type": "commit"}, {"oid": "350646d7a37a7638187272044c21b781bf995422", "url": "https://github.com/getodk/collect/commit/350646d7a37a7638187272044c21b781bf995422", "message": "Make d pad calls consistent", "committedDate": "2020-11-18T10:48:25Z", "type": "commit"}, {"oid": "dbd048338a76f4488bc4e8fe7a943652a4d5b312", "url": "https://github.com/getodk/collect/commit/dbd048338a76f4488bc4e8fe7a943652a4d5b312", "message": "Don't let user add repeat when recoridng", "committedDate": "2020-11-19T12:22:36Z", "type": "commit"}, {"oid": "fd0e95ae81006f92cec2cfdde295e7e7664c8a3e", "url": "https://github.com/getodk/collect/commit/fd0e95ae81006f92cec2cfdde295e7e7664c8a3e", "message": "Fix swipe handler not being called", "committedDate": "2020-11-20T09:44:26Z", "type": "commit"}, {"oid": "e5d0f1c6ade457736dbfaea7dc069aa83ce9a50e", "url": "https://github.com/getodk/collect/commit/e5d0f1c6ade457736dbfaea7dc069aa83ce9a50e", "message": "Don't allow swiping back on first screen in form", "committedDate": "2020-11-20T09:55:59Z", "type": "commit"}]}