{"pr_number": 1285, "pr_title": "Provide an option to configure trusted Azure Key Vault endpoints", "pr_createdAt": "2020-03-18T01:01:13Z", "pr_url": "https://github.com/microsoft/mssql-jdbc/pull/1285", "timeline": [{"oid": "89f9efd54327c9e05706810af48699a2f689a1c0", "url": "https://github.com/microsoft/mssql-jdbc/commit/89f9efd54327c9e05706810af48699a2f689a1c0", "message": "Provide an option to configure trusted AKV endpoints", "committedDate": "2020-03-18T00:55:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA2MjkyMw==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1285#discussion_r394062923", "bodyText": "remove this", "author": "peterbae", "createdAt": "2020-03-18T01:45:53Z", "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerColumnEncryptionAzureKeyVaultProvider.java", "diffHunk": "@@ -628,4 +633,58 @@ public boolean verifyColumnMasterKeyMetadata(String masterKeyPath, boolean allow\n             throw new SQLServerException(SQLServerException.getErrString(\"R_NoSHA256Algorithm\"), e);\n         }\n     }\n+\n+    private static List<String> getTrustedEndpoints() {\n+        Properties mssqlJdbcProperties = getMssqlJdbcProperties();\n+        List<String> trustedEndpoints = new ArrayList<String>();\n+        boolean append = true;\n+        if (null != mssqlJdbcProperties) {\n+            String endpoints = mssqlJdbcProperties.getProperty(AKV_TRUSTED_ENDPOINTS_KEYWORD);\n+            if (null != endpoints && !endpoints.isBlank()) {\n+                endpoints = endpoints.trim();\n+                // Append if the list starts with a semicolon.\n+                if (';' != endpoints.charAt(0)) {\n+                    append = false;\n+                } else {\n+                    endpoints = endpoints.substring(1);\n+                }\n+                String[] entries = endpoints.split(\";\");\n+                for (String entry : entries) {\n+                    if (null != entry && !entry.isBlank()) {\n+                        trustedEndpoints.add(entry.trim());\n+                    }\n+                }\n+            }\n+        }\n+        /*\n+         * List of Azure trusted endpoints\n+         * https://docs.microsoft.com/en-us/azure/key-vault/key-vault-secure-your-key-vault\n+         */\n+        if (append) {\n+            trustedEndpoints.add(\"vault.azure.net\");\n+            trustedEndpoints.add(\"vault.azure.cn\");\n+            trustedEndpoints.add(\"vault.usgovcloudapi.net\");\n+            trustedEndpoints.add(\"vault.microsoftazure.de\");\n+        }\n+        System.out.println(trustedEndpoints);", "originalCommit": "89f9efd54327c9e05706810af48699a2f689a1c0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA2MzU4NA==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1285#discussion_r394063584", "bodyText": "other than this line, the PR looks good to me.", "author": "peterbae", "createdAt": "2020-03-18T01:48:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA2MjkyMw=="}], "type": "inlineReview"}, {"oid": "563ee0168f8fe011adec4fef0878ca9220fe06d3", "url": "https://github.com/microsoft/mssql-jdbc/commit/563ee0168f8fe011adec4fef0878ca9220fe06d3", "message": "Fix | Remove debug line", "committedDate": "2020-03-18T02:17:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ1MDU3NQ==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1285#discussion_r394450575", "bodyText": "What path are we loading the file from here? Is this a potential attack vector?", "author": "David-Engel", "createdAt": "2020-03-18T15:49:21Z", "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerColumnEncryptionAzureKeyVaultProvider.java", "diffHunk": "@@ -628,4 +633,57 @@ public boolean verifyColumnMasterKeyMetadata(String masterKeyPath, boolean allow\n             throw new SQLServerException(SQLServerException.getErrString(\"R_NoSHA256Algorithm\"), e);\n         }\n     }\n+\n+    private static List<String> getTrustedEndpoints() {\n+        Properties mssqlJdbcProperties = getMssqlJdbcProperties();\n+        List<String> trustedEndpoints = new ArrayList<String>();\n+        boolean append = true;\n+        if (null != mssqlJdbcProperties) {\n+            String endpoints = mssqlJdbcProperties.getProperty(AKV_TRUSTED_ENDPOINTS_KEYWORD);\n+            if (null != endpoints && !endpoints.isBlank()) {\n+                endpoints = endpoints.trim();\n+                // Append if the list starts with a semicolon.\n+                if (';' != endpoints.charAt(0)) {\n+                    append = false;\n+                } else {\n+                    endpoints = endpoints.substring(1);\n+                }\n+                String[] entries = endpoints.split(\";\");\n+                for (String entry : entries) {\n+                    if (null != entry && !entry.isBlank()) {\n+                        trustedEndpoints.add(entry.trim());\n+                    }\n+                }\n+            }\n+        }\n+        /*\n+         * List of Azure trusted endpoints\n+         * https://docs.microsoft.com/en-us/azure/key-vault/key-vault-secure-your-key-vault\n+         */\n+        if (append) {\n+            trustedEndpoints.add(\"vault.azure.net\");\n+            trustedEndpoints.add(\"vault.azure.cn\");\n+            trustedEndpoints.add(\"vault.usgovcloudapi.net\");\n+            trustedEndpoints.add(\"vault.microsoftazure.de\");\n+        }\n+        return trustedEndpoints;\n+    }\n+\n+    /**\n+     * Attempt to read MSSQL_JDBC_PROPERTIES.\n+     *\n+     * @return corresponding Properties object or null if failed to read the file.\n+     */\n+    private static Properties getMssqlJdbcProperties() {\n+        Properties props = null;\n+        try (FileInputStream in = new FileInputStream(MSSQL_JDBC_PROPERTIES)) {", "originalCommit": "563ee0168f8fe011adec4fef0878ca9220fe06d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU4NzM4MQ==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1285#discussion_r394587381", "bodyText": "File needs to be in application working directory, where JVM is started from.", "author": "ulvii", "createdAt": "2020-03-18T19:25:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ1MDU3NQ=="}], "type": "inlineReview"}, {"oid": "372ea3f962584fb6d9a0f2f4ed50968b75142747", "url": "https://github.com/microsoft/mssql-jdbc/commit/372ea3f962584fb6d9a0f2f4ed50968b75142747", "message": "Testing scenario when appending endpoint from properties file", "committedDate": "2020-03-18T23:22:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY5NjM5MQ==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1285#discussion_r394696391", "bodyText": "Why did we define MSSQL_JDBC_PROPERTIES and AKV_TRUSTED_ENDPOINTS_KEYWORD as constants and not use them?", "author": "peterbae", "createdAt": "2020-03-18T23:28:00Z", "path": "src/test/java/com/microsoft/sqlserver/testframework/AbstractTest.java", "diffHunk": "@@ -145,8 +148,22 @@ public static void setup() throws Exception {\n         }\n \n         if (null == akvProvider) {\n-            akvProvider = new SQLServerColumnEncryptionAzureKeyVaultProvider(applicationClientID, applicationKey);\n-            map.put(Constants.AZURE_KEY_VAULT_NAME, akvProvider);\n+            File file = null;\n+            try {\n+                file = new File(\"mssql-jdbc.properties\");", "originalCommit": "372ea3f962584fb6d9a0f2f4ed50968b75142747", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY5NzIwNA==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1285#discussion_r394697204", "bodyText": "weird.", "author": "ulvii", "createdAt": "2020-03-18T23:30:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY5NjM5MQ=="}], "type": "inlineReview"}, {"oid": "9808a13c0429bd34efb9a1f88ac50c0802768701", "url": "https://github.com/microsoft/mssql-jdbc/commit/9808a13c0429bd34efb9a1f88ac50c0802768701", "message": "User constants", "committedDate": "2020-03-18T23:30:56Z", "type": "commit"}]}