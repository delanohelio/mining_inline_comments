{"pr_number": 1336, "pr_title": "Add delayLoadingLobs", "pr_createdAt": "2020-05-14T22:32:27Z", "pr_url": "https://github.com/microsoft/mssql-jdbc/pull/1336", "timeline": [{"oid": "13fc69ab9510e21efd8b665aa081f180d8937c6c", "url": "https://github.com/microsoft/mssql-jdbc/commit/13fc69ab9510e21efd8b665aa081f180d8937c6c", "message": "Add property", "committedDate": "2020-05-11T15:58:04Z", "type": "commit"}, {"oid": "e994670507d926480681311d3521cb0b3b6cf3ae", "url": "https://github.com/microsoft/mssql-jdbc/commit/e994670507d926480681311d3521cb0b3b6cf3ae", "message": "Add resource", "committedDate": "2020-05-11T16:43:16Z", "type": "commit"}, {"oid": "4c1e3ef067f058de02c97d52e4f5b14acd4f050b", "url": "https://github.com/microsoft/mssql-jdbc/commit/4c1e3ef067f058de02c97d52e4f5b14acd4f050b", "message": "Fix nullptr", "committedDate": "2020-05-12T16:29:15Z", "type": "commit"}, {"oid": "8708f10d1f3ec607ff9bafdbd77f718e7276cc24", "url": "https://github.com/microsoft/mssql-jdbc/commit/8708f10d1f3ec607ff9bafdbd77f718e7276cc24", "message": "change loadLargeObjects to delayLoadingLobs", "committedDate": "2020-05-21T21:30:58Z", "type": "commit"}, {"oid": "8aaeff91bb311ea217237cbcfa64fc3489647b91", "url": "https://github.com/microsoft/mssql-jdbc/commit/8aaeff91bb311ea217237cbcfa64fc3489647b91", "message": "add tests", "committedDate": "2020-05-21T22:43:58Z", "type": "commit"}, {"oid": "7d26080f12acd1452f451ef5a2173f05585c4bcd", "url": "https://github.com/microsoft/mssql-jdbc/commit/7d26080f12acd1452f451ef5a2173f05585c4bcd", "message": "quick fix", "committedDate": "2020-05-22T16:14:40Z", "type": "commit"}, {"oid": "2493e8134480785ec3ba52c02fd37532023ee674", "url": "https://github.com/microsoft/mssql-jdbc/commit/2493e8134480785ec3ba52c02fd37532023ee674", "message": "Merge branch 'dev' of https://github.com/Microsoft/mssql-jdbc into blob\n\n# Conflicts:\n#\tsrc/main/java/com/microsoft/sqlserver/jdbc/ISQLServerDataSource.java\n#\tsrc/main/java/com/microsoft/sqlserver/jdbc/SQLServerConnection.java\n#\tsrc/main/java/com/microsoft/sqlserver/jdbc/SQLServerDriver.java", "committedDate": "2020-05-22T17:24:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQwNjAwNA==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1336#discussion_r429406004", "bodyText": "instead of streaming them.", "author": "peterbae", "createdAt": "2020-05-22T18:55:17Z", "path": "src/main/java/com/microsoft/sqlserver/jdbc/ISQLServerDataSource.java", "diffHunk": "@@ -992,6 +992,21 @@\n     void setClientKeyPassword(String password);\n \n     /**\n+     * Specifies the flag to load LOBs instead of stream them.", "originalCommit": "2493e8134480785ec3ba52c02fd37532023ee674", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQzNDEwMQ==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1336#discussion_r429434101", "bodyText": "Can you refactor this loadLob variable name to delayLoadingLobs to maintain consistency? It will make it easier to search for its usage in the future if we were to come back to this feature", "author": "peterbae", "createdAt": "2020-05-22T20:09:23Z", "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerBlob.java", "diffHunk": "@@ -53,6 +53,12 @@\n \n     private final String traceID;\n \n+    private boolean loadLob = false;\n+\n+    void setStreaming(boolean b) {\n+        loadLob = b;", "originalCommit": "2493e8134480785ec3ba52c02fd37532023ee674", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ3NzMxNA==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1336#discussion_r429477314", "bodyText": "never mind, I realized that this variable is actually the opposite of delayLoadingLobs. I'd prefer if we had one type of boolean to represent the connection property (instead of having two booleans opposite of each other's values that are meant for the same purpose), but if others are fine with this, I am too.", "author": "peterbae", "createdAt": "2020-05-22T22:21:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQzNDEwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ4MjA4Ng==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1336#discussion_r429482086", "bodyText": "Overall I think this setStreaming naming is confusing. The connection property delayLoadingLobs is true by default, which means we want to stream by default. Setting delayLoadingLobs to false ends up calling this method setStreaming to true, which makes the driver not stream (by calling getStringFromStream method). Unless I'm mistaken about the functionalities, we should rename the methods / variables to add more clarity to what the driver is doing.", "author": "peterbae", "createdAt": "2020-05-22T22:48:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQzNDEwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQzNjA5NA==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1336#discussion_r429436094", "bodyText": "We usually put descriptions along with other descriptions, so to not mix errors and descriptions together. Can you move this description to where the other descriptions are?", "author": "peterbae", "createdAt": "2020-05-22T20:15:34Z", "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerResource.java", "diffHunk": "@@ -643,5 +643,7 @@ static String getResource(String key) {\n             {\"R_pvkParseError\", \"Could not read Private Key from PVK, check the password provided.\"},\n             {\"R_pvkHeaderError\", \"Cannot parse the PVK, PVK file does not contain the correct header.\"},\n             {\"R_clientCertError\", \"Reading client certificate failed. Please verify the location of the certificate.\"},\n-            {\"R_unassignableError\", \"The class specified by the {0} property must be assignable to {1}.\"}};\n+            {\"R_unassignableError\", \"The class specified by the {0} property must be assignable to {1}.\"},\n+            {\"R_delayLoadingLobsPropertyDescription\",\n+            \"Boolean flag which indicates whether the driver will load LOB datatypes into memeory.\"}};", "originalCommit": "2493e8134480785ec3ba52c02fd37532023ee674", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ0MDk1Mw==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1336#discussion_r429440953", "bodyText": "Add DataSource getter/setter test cases.", "author": "peterbae", "createdAt": "2020-05-22T20:34:06Z", "path": "src/test/java/com/microsoft/sqlserver/jdbc/unit/lobs/LobsTest.java", "diffHunk": "@@ -9,12 +9,16 @@\n import static org.junit.jupiter.api.Assertions.assertTrue;", "originalCommit": "2493e8134480785ec3ba52c02fd37532023ee674", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ2MjM0MA==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1336#discussion_r429462340", "bodyText": "addOrOverrideProperty actually only appends the connection property at the end, so loadedString ends up having both delayLoadingLobs=true and delayedLoadingLobs=false in it. I tested to make sure that the test is working as intended (as in, loadedString should honor delayLoadingLobs=false), but you should be aware of this fyi.", "author": "peterbae", "createdAt": "2020-05-22T21:37:47Z", "path": "src/test/java/com/microsoft/sqlserver/jdbc/unit/lobs/LobsTest.java", "diffHunk": "@@ -579,6 +583,221 @@ public void readMultipleBlobStreamsThenCloseRS() throws Exception {\n         }\n     }\n \n+    @Test\n+    @DisplayName(\"testBlobNotStreaming\")\n+    public void testBlobNotStreaming() throws SQLException, IOException {\n+        String types[] = {\"varbinary(max)\"};\n+        table = createTable(table, types, false);\n+\n+        int bufferSize = 10000;\n+        byte[] data = new byte[bufferSize];\n+        try (Connection conn = getConnection(); PreparedStatement pstmt = conn\n+                .prepareStatement(\"INSERT INTO \" + table.getEscapedTableName() + \"  VALUES(?,?)\")) {\n+            Blob b = conn.createBlob();\n+            Constants.RANDOM.nextBytes(data);\n+            b.setBytes(1, data);\n+            pstmt.setInt(1, 1);\n+            pstmt.setBlob(2, b);\n+            pstmt.executeUpdate();\n+        }\n+\n+        String streamString = TestUtils.addOrOverrideProperty(connectionString, \"delayLoadingLobs\", \"true\");\n+        String loadedString = TestUtils.addOrOverrideProperty(streamString, \"delayLoadingLobs\", \"false\");", "originalCommit": "2493e8134480785ec3ba52c02fd37532023ee674", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTUwMTgwNA==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1336#discussion_r429501804", "bodyText": "Yeah the function doesn't erase the contents but the driver respects the last declared connection property for duplicates. I originally just appended the property but figured since we have this in the Utils, might as well use it.", "author": "rene-ye", "createdAt": "2020-05-23T01:25:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ2MjM0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ2MjUwNw==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1336#discussion_r429462507", "bodyText": "This is a public method so it needs javadoc.", "author": "peterbae", "createdAt": "2020-05-22T21:38:25Z", "path": "src/test/java/com/microsoft/sqlserver/jdbc/unit/lobs/LobsTest.java", "diffHunk": "@@ -579,6 +583,221 @@ public void readMultipleBlobStreamsThenCloseRS() throws Exception {\n         }\n     }\n \n+    @Test", "originalCommit": "2493e8134480785ec3ba52c02fd37532023ee674", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ4MDg2Mg==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1336#discussion_r429480862", "bodyText": "I think you should add a case where you create a stream out of a ResultSet, close the resultset, then try to read from the stream. The tests below test that existing functionality is still supported, but doesn't verify the case that was intended to be fixed in this PR.", "author": "peterbae", "createdAt": "2020-05-22T22:40:01Z", "path": "src/test/java/com/microsoft/sqlserver/jdbc/unit/lobs/LobsTest.java", "diffHunk": "@@ -9,12 +9,16 @@\n import static org.junit.jupiter.api.Assertions.assertTrue;\n \n import java.io.BufferedInputStream;\n+import java.io.BufferedReader;", "originalCommit": "2493e8134480785ec3ba52c02fd37532023ee674", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTUwMTk4NA==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1336#discussion_r429501984", "bodyText": "testContinuousReading() tests the case that was intended to be fixed. The scenario with the closed resultset already exists in the junit tests.", "author": "rene-ye", "createdAt": "2020-05-23T01:27:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ4MDg2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ4MjY5Mg==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1336#discussion_r429482692", "bodyText": "I think a minor improvement here would be consolidate the two if statements that are on line 153 and 157 into one, then have a nested if statement that only checks for loadLob since the other two conditions are checked twice.", "author": "peterbae", "createdAt": "2020-05-22T22:52:21Z", "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerBlob.java", "diffHunk": "@@ -143,6 +149,11 @@ private void checkClosed() throws SQLServerException {\n     @Override\n     public InputStream getBinaryStream() throws SQLException {\n         checkClosed();\n+        // If the LOB is currently streaming and the stream hasn't been read, read it.\n+        if (null == value && !activeStreams.isEmpty() && loadLob) {", "originalCommit": "2493e8134480785ec3ba52c02fd37532023ee674", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ4Mjc2OA==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1336#discussion_r429482768", "bodyText": "Also applies to the SQLServerClob file.", "author": "peterbae", "createdAt": "2020-05-22T22:52:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ4MjY5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDAxNDc3MA==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1336#discussion_r430014770", "bodyText": "Can't be done, the point is to do this before the lobs create the streams, if we nest the if's, it'll result in the lobs loading the stream into a string and then attempting to return a streaming inputstream.", "author": "rene-ye", "createdAt": "2020-05-25T16:42:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ4MjY5Mg=="}], "type": "inlineReview"}, {"oid": "b64fa12df91b3f0a36f90e8bf0656025e2c1b4d4", "url": "https://github.com/microsoft/mssql-jdbc/commit/b64fa12df91b3f0a36f90e8bf0656025e2c1b4d4", "message": "address comments", "committedDate": "2020-05-25T16:48:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA1MDkzOA==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1336#discussion_r430050938", "bodyText": "Shouldn't this setter take in a boolean value, so that the user can go back and forth between setting this to true or false?  The comment also seems to suggest this setter should be able to provide that functionality.", "author": "peterbae", "createdAt": "2020-05-25T19:10:49Z", "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerLob.java", "diffHunk": "@@ -21,4 +21,13 @@\n      * @throws SQLException\n      */\n     abstract void fillFromStream() throws SQLException;\n+\n+    protected boolean delayLoadingLob = true;\n+    /**\n+     * Provides functionality for the result set to set whether to load the LOB objects fully. Setting this property to\n+     * TRUE will cause LOBs to be loaded into memory. The default behavior is FALSE.\n+     */\n+    void setDelayLoadingLob() {", "originalCommit": "b64fa12df91b3f0a36f90e8bf0656025e2c1b4d4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA1MTE4MA==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1336#discussion_r430051180", "bodyText": "Also since other setDelayLoadingLobss have an s at the end, add an s to this method's name as well.", "author": "peterbae", "createdAt": "2020-05-25T19:11:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA1MDkzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA1ODM2Mw==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1336#discussion_r430058363", "bodyText": "Not necessary, this controls the option for the single LOB. The ResultSet will read the property from the Connection object and determine whether to call this API or not. The user is able to toggle it on and off with the current logic.", "author": "rene-ye", "createdAt": "2020-05-25T19:46:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA1MDkzOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA1MTI3MQ==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1336#discussion_r430051271", "bodyText": "Remove this comma at the end", "author": "peterbae", "createdAt": "2020-05-25T19:12:16Z", "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerResource.java", "diffHunk": "@@ -643,5 +645,5 @@ static String getResource(String key) {\n             {\"R_pvkParseError\", \"Could not read Private Key from PVK, check the password provided.\"},\n             {\"R_pvkHeaderError\", \"Cannot parse the PVK, PVK file does not contain the correct header.\"},\n             {\"R_clientCertError\", \"Reading client certificate failed. Please verify the location of the certificate.\"},\n-            {\"R_unassignableError\", \"The class specified by the {0} property must be assignable to {1}.\"}};\n+            {\"R_unassignableError\", \"The class specified by the {0} property must be assignable to {1}.\"},};", "originalCommit": "b64fa12df91b3f0a36f90e8bf0656025e2c1b4d4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA1ODY3Nw==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1336#discussion_r430058677", "bodyText": "I prefer to leave the commas for these lists in so when we add lines it's obvious where to add them, and it's more convenient to just copy+paste the last line.", "author": "rene-ye", "createdAt": "2020-05-25T19:47:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA1MTI3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA2MzU2OQ==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1336#discussion_r430063569", "bodyText": "I don't think this file is formatted, can you format it?", "author": "peterbae", "createdAt": "2020-05-25T20:11:05Z", "path": "src/test/java/com/microsoft/sqlserver/jdbc/unit/lobs/LobsTest.java", "diffHunk": "@@ -9,12 +9,16 @@\n import static org.junit.jupiter.api.Assertions.assertTrue;\n \n import java.io.BufferedInputStream;\n+import java.io.BufferedReader;", "originalCommit": "b64fa12df91b3f0a36f90e8bf0656025e2c1b4d4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5f1b0f7344a04e4670a408f1cfa1d79fe9c4194f", "url": "https://github.com/microsoft/mssql-jdbc/commit/5f1b0f7344a04e4670a408f1cfa1d79fe9c4194f", "message": "format", "committedDate": "2020-05-25T21:18:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDExNTAyNA==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1336#discussion_r430115024", "bodyText": "null check for activeStream, multiple places", "author": "lilgreenbird", "createdAt": "2020-05-26T01:32:06Z", "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerBlob.java", "diffHunk": "@@ -143,6 +143,11 @@ private void checkClosed() throws SQLServerException {\n     @Override\n     public InputStream getBinaryStream() throws SQLException {\n         checkClosed();\n+        // If the LOB is currently streaming and the stream hasn't been read, read it.\n+        if (!delayLoadingLob && null == value && !activeStreams.isEmpty()) {", "originalCommit": "5f1b0f7344a04e4670a408f1cfa1d79fe9c4194f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDE1MTU4Mw==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1336#discussion_r430151583", "bodyText": "I think this is fine, it's impossible for that variable to be null, and many other parts of this class doesn't null check that variable.", "author": "peterbae", "createdAt": "2020-05-26T04:38:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDExNTAyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIwMDc3Nw==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1336#discussion_r430200777", "bodyText": "it would be null if free is called before. That would be an error, but should not cause driver to crash on null exception", "author": "lilgreenbird", "createdAt": "2020-05-26T07:12:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDExNTAyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDU1Mjc1NQ==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1336#discussion_r430552755", "bodyText": "Well...after free() the blob object is invalid, so the user shouldn't be using the blob after free() is called. Also, you'll see that on line 151 that this method wasn't doing a null check before anyways, but I'll leave it up to @rene-ye to make the call.", "author": "peterbae", "createdAt": "2020-05-26T16:38:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDExNTAyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDU1NTE0Mw==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1336#discussion_r430555143", "bodyText": "After the lob is freed it won't get past checkClosed().", "author": "rene-ye", "createdAt": "2020-05-26T16:41:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDExNTAyNA=="}], "type": "inlineReview"}, {"oid": "89a6a48d319dcbdb20955562474fc39aef2a8c68", "url": "https://github.com/microsoft/mssql-jdbc/commit/89a6a48d319dcbdb20955562474fc39aef2a8c68", "message": "small test fix", "committedDate": "2020-05-26T16:45:05Z", "type": "commit"}, {"oid": "f79f76d67069b1cd2fd2742661992c4a6e44603b", "url": "https://github.com/microsoft/mssql-jdbc/commit/f79f76d67069b1cd2fd2742661992c4a6e44603b", "message": "Merge branch 'blob' of https://github.com/rene-ye/mssql-jdbc into blob", "committedDate": "2020-05-26T16:45:44Z", "type": "commit"}, {"oid": "4f856a2a0e73ba0128fe8138197f52e0d557cba9", "url": "https://github.com/microsoft/mssql-jdbc/commit/4f856a2a0e73ba0128fe8138197f52e0d557cba9", "message": "Merge branch 'dev' of https://github.com/Microsoft/mssql-jdbc into blob\n\n# Conflicts:\n#\tsrc/main/java/com/microsoft/sqlserver/jdbc/SQLServerResource.java", "committedDate": "2020-05-26T17:56:51Z", "type": "commit"}]}