{"pr_number": 1356, "pr_title": "Fixed an issue with getColumns() not returning correct type for IS_AUTOINCREMENT and IS_GENERATEDCOLUMN against Azure Data Warehouse", "pr_createdAt": "2020-06-09T00:14:11Z", "pr_url": "https://github.com/microsoft/mssql-jdbc/pull/1356", "timeline": [{"oid": "a81dceaf4f28dd57f80431341216a0e5e5f24856", "url": "https://github.com/microsoft/mssql-jdbc/commit/a81dceaf4f28dd57f80431341216a0e5e5f24856", "message": "Added a test for getColumns", "committedDate": "2020-06-05T01:24:10Z", "type": "commit"}, {"oid": "e46fae72a2e3cb59e53ac7ae32dd2ed745e62d11", "url": "https://github.com/microsoft/mssql-jdbc/commit/e46fae72a2e3cb59e53ac7ae32dd2ed745e62d11", "message": "Fix | Fixed the issue with IS_AUTOINCREMENT and IS_GENERATEDCOLUMN", "committedDate": "2020-06-09T00:01:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY0MTc4Mw==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1356#discussion_r439641783", "bodyText": "The fix is good (as confirmed by the user), but this test isn't accurately testing the changes made by this PR. This new test will pass with or without the changes made in this PR, because when it's time to test the values of the IS_AUTOINCREMENT entry, the filter will change the firstRow.get(columnName).toString() from 0 to NO. To ensure that we've addressed the issue (so that we don't change these values in the future, for example), I think we should additionally check to make sure that rsmd.getColumnType() method on the two columns should return 12 (varchar) instead of 4 (int). Other than that, the changes look good to me.", "author": "peterbae", "createdAt": "2020-06-12T21:04:35Z", "path": "src/test/java/com/microsoft/sqlserver/jdbc/databasemetadata/DatabaseMetaDataTest.java", "diffHunk": "@@ -651,12 +653,64 @@ public void testGetColumn() throws SQLException {\n             getColumnsDWColumns.put(27, \"SS_XML_SCHEMACOLLECTION_SCHEMA_NAME\");\n             getColumnsDWColumns.put(28, \"SS_XML_SCHEMACOLLECTION_NAME\");\n \n+            Map<String, Object> firstRow = new HashMap<String, Object>();\n+            String dbName = ds.getDatabaseName();\n+            if (null == dbName) {\n+                firstRow.put(\"TABLE_CAT\", \"master\");\n+            } else {\n+                firstRow.put(\"TABLE_CAT\", ds.getDatabaseName());\n+            }\n+            firstRow.put(\"TABLE_SCHEM\", \"dbo\");\n+            firstRow.put(\"TABLE_NAME\", tableName);\n+            firstRow.put(\"COLUMN_NAME\", \"col_1\");\n+            firstRow.put(\"DATA_TYPE\", 4);\n+            firstRow.put(\"TYPE_NAME\", \"int\");\n+            firstRow.put(\"COLUMN_SIZE\", 10);\n+            firstRow.put(\"BUFFER_LENGTH\", 4);\n+            firstRow.put(\"DECIMAL_DIGITS\", 0);\n+            firstRow.put(\"NUM_PREC_RADIX\", 10);\n+            firstRow.put(\"NULLABLE\", 0);\n+            firstRow.put(\"REMARKS\", null);\n+            firstRow.put(\"COLUMN_DEF\", null);\n+            firstRow.put(\"SQL_DATA_TYPE\", 4);\n+            firstRow.put(\"SQL_DATETIME_SUB\", null);\n+            firstRow.put(\"CHAR_OCTET_LENGTH\", null);\n+            firstRow.put(\"ORDINAL_POSITION\", 1);\n+            firstRow.put(\"IS_NULLABLE\", \"NO\");\n+            firstRow.put(\"SCOPE_CATALOG\", null);\n+            firstRow.put(\"SCOPE_SCHEMA\", null);\n+            firstRow.put(\"SCOPE_TABLE\", null);\n+            firstRow.put(\"SOURCE_DATA_TYPE\", 56);\n+            firstRow.put(\"IS_AUTOINCREMENT\", \"NO\");\n+            firstRow.put(\"IS_GENERATEDCOLUMN\", \"NO\");\n+            firstRow.put(\"SS_IS_SPARSE\", 0);\n+            firstRow.put(\"SS_IS_COLUMN_SET\", 0);\n+            firstRow.put(\"SS_UDT_CATALOG_NAME\", null);\n+            firstRow.put(\"SS_UDT_SCHEMA_NAME\", null);\n+            firstRow.put(\"SS_UDT_ASSEMBLY_TYPE_NAME\", null);\n+            firstRow.put(\"SS_XML_SCHEMACOLLECTION_CATALOG_NAME\", null);\n+            firstRow.put(\"SS_XML_SCHEMACOLLECTION_SCHEMA_NAME\", null);\n+            firstRow.put(\"SS_XML_SCHEMACOLLECTION_NAME\", null);\n+\n             try (ResultSet resultSet = databaseMetaData.getColumns(null, null, tableName, \"%\");) {\n                 ResultSetMetaData rsmd = resultSet.getMetaData();\n                 int rowCount = 0;\n                 while (resultSet.next()) {\n                     for (int i = 1; i < rsmd.getColumnCount(); i++) {\n-                        assertEquals(rsmd.getColumnName(i), getColumnsDWColumns.values().toArray()[i - 1]);\n+                        String columnName = rsmd.getColumnName(i);\n+                        Object value = resultSet.getObject(columnName);\n+                        if (0 == rowCount) {\n+                            Object expectedValue = firstRow.get(columnName);\n+                            if (expectedValue instanceof String) {\n+                                assertEquals(firstRow.get(columnName).toString().toLowerCase(),", "originalCommit": "e46fae72a2e3cb59e53ac7ae32dd2ed745e62d11", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY3NTQzNQ==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1356#discussion_r439675435", "bodyText": "You are right, updated the test.", "author": "ulvii", "createdAt": "2020-06-12T23:09:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY0MTc4Mw=="}], "type": "inlineReview"}, {"oid": "0b584f03173b234c8f3dd6ed1e5e23d318491464", "url": "https://github.com/microsoft/mssql-jdbc/commit/0b584f03173b234c8f3dd6ed1e5e23d318491464", "message": "Modify getColumns test to test getColumnType", "committedDate": "2020-06-12T23:08:45Z", "type": "commit"}]}