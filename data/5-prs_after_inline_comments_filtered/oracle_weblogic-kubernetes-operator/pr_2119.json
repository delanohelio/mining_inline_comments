{"pr_number": 2119, "pr_title": "Owls86455 add event when operator start/stop watching a namespace", "pr_createdAt": "2020-12-24T14:38:29Z", "pr_url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2119", "timeline": [{"oid": "9f917f15f93180e003cce219a2dc6fb1885d339a", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/9f917f15f93180e003cce219a2dc6fb1885d339a", "message": "add namespace events and initial unit test", "committedDate": "2020-12-21T20:07:57Z", "type": "commit"}, {"oid": "2051a75f86774554267d833ff13a6e25ee341e37", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/2051a75f86774554267d833ff13a6e25ee341e37", "message": "initial doc changes", "committedDate": "2020-12-22T14:27:32Z", "type": "commit"}, {"oid": "05524e3a482ac73d6d8a26a2187bc095728af631", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/05524e3a482ac73d6d8a26a2187bc095728af631", "message": "Merge remote-tracking branch 'origin/develop' into owls86455-ns-event", "committedDate": "2020-12-22T15:24:52Z", "type": "commit"}, {"oid": "09a562a21cc1e9fbdc7325f811a0b669ce52bea4", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/09a562a21cc1e9fbdc7325f811a0b669ce52bea4", "message": "fix involved Object namespace plus more unit tests", "committedDate": "2020-12-23T01:37:44Z", "type": "commit"}, {"oid": "fc8695c156665a3399960956fe501a39789009a6", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/fc8695c156665a3399960956fe501a39789009a6", "message": "more code changes and unit tests", "committedDate": "2020-12-23T03:49:20Z", "type": "commit"}, {"oid": "f0482ef1a029d867a69c5b50b205ab4ca48a19f9", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/f0482ef1a029d867a69c5b50b205ab4ca48a19f9", "message": "refactoring and more unit tests and doc", "committedDate": "2020-12-23T17:57:44Z", "type": "commit"}, {"oid": "c81a771d508a84552b90992480cb92ca4cfdc158", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/c81a771d508a84552b90992480cb92ca4cfdc158", "message": "more doc", "committedDate": "2020-12-23T19:01:51Z", "type": "commit"}, {"oid": "dd5fcb43ab482b6d03c4e040bcb2bee22deddce6", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/dd5fcb43ab482b6d03c4e040bcb2bee22deddce6", "message": "minor adjustment", "committedDate": "2020-12-23T21:08:13Z", "type": "commit"}, {"oid": "7e4e0517e44f5aba9079d7d7050faad33a993b91", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/7e4e0517e44f5aba9079d7d7050faad33a993b91", "message": "minor changes to unit tests", "committedDate": "2020-12-24T03:51:46Z", "type": "commit"}, {"oid": "d3b223659feb7a7c326a3a3a199580335bc1eca6", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/d3b223659feb7a7c326a3a3a199580335bc1eca6", "message": "change event reason text", "committedDate": "2020-12-24T05:07:03Z", "type": "commit"}, {"oid": "914d4faaaf8294a2343a858d821093eef4f436c5", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/914d4faaaf8294a2343a858d821093eef4f436c5", "message": "minor unit test change", "committedDate": "2020-12-24T06:15:16Z", "type": "commit"}, {"oid": "363aa36b239088b6d95fa0b281f31dae0aa5206b", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/363aa36b239088b6d95fa0b281f31dae0aa5206b", "message": "Merge remote-tracking branch 'origin/develop' into owls86455-ns-event", "committedDate": "2020-12-24T14:03:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODU1MDgxNw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2119#discussion_r548550817", "bodyText": "This is needlessly long and hard to follow. I would suggest extracting both the condition and the body of the if, and then turning it into an else if clause, and then putting back the else for the last alternative.", "author": "russgold", "createdAt": "2020-12-24T14:52:45Z", "path": "operator/src/main/java/oracle/kubernetes/operator/DomainRecheck.java", "diffHunk": "@@ -207,11 +210,19 @@ Step startNamespaceSteps(String ns) {\n     @Override\n     public NextAction apply(Packet packet) {\n       NamespaceStatus nss = domainNamespaces.getNamespaceStatus(ns);\n-      if (fullRecheck || !nss.isNamespaceStarting().getAndSet(true)) {\n+      if (fullRecheck) {\n         return doNext(packet);\n-      } else {\n-        return doEnd(packet);\n       }\n+\n+      if (!nss.isNamespaceStarting().getAndSet(true)) {", "originalCommit": "363aa36b239088b6d95fa0b281f31dae0aa5206b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODY0MTM3Ng==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2119#discussion_r548641376", "bodyText": "done", "author": "doxiao", "createdAt": "2020-12-24T17:29:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODU1MDgxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODU1MTE4OQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2119#discussion_r548551189", "bodyText": "Please extract the logic for creating these steps into its own method.", "author": "russgold", "createdAt": "2020-12-24T14:54:08Z", "path": "operator/src/main/java/oracle/kubernetes/operator/Namespaces.java", "diffHunk": "@@ -231,8 +230,42 @@ public NamespaceListAfterStep(DomainNamespaces domainNamespaces) {\n     public NextAction apply(Packet packet) {\n       NamespaceValidationContext validationContext = new NamespaceValidationContext(packet);\n       getNonNullConfiguredDomainNamespaces().forEach(validationContext::validateConfiguredNamespace);\n+      List<StepAndPacket> nsStopEventSteps =", "originalCommit": "363aa36b239088b6d95fa0b281f31dae0aa5206b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODY0MTI5Mg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2119#discussion_r548641292", "bodyText": "done", "author": "doxiao", "createdAt": "2020-12-24T17:29:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODU1MTE4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODU1MTkxNA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2119#discussion_r548551914", "bodyText": "Please extract the expression against which you're comparing the namespace into its own method.", "author": "russgold", "createdAt": "2020-12-24T14:56:53Z", "path": "operator/src/test/java/oracle/kubernetes/operator/EventTestUtils.java", "diffHunk": "@@ -0,0 +1,171 @@\n+// Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+package oracle.kubernetes.operator;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+import javax.validation.constraints.NotNull;\n+\n+import io.kubernetes.client.openapi.models.V1Event;\n+import io.kubernetes.client.openapi.models.V1ObjectMeta;\n+import io.kubernetes.client.openapi.models.V1ObjectReference;\n+import oracle.kubernetes.operator.helpers.KubernetesTestSupport;\n+\n+import static oracle.kubernetes.operator.EventConstants.WEBLOGIC_OPERATOR_COMPONENT;\n+\n+public class EventTestUtils {\n+  private static List<V1Event> getEventsMatchesReason(@NotNull List<V1Event> events, String reason) {\n+    return events.stream().filter(event -> reasonMatches(event, reason)).collect(Collectors.toList());\n+  }\n+\n+  /**\n+   * Whether an there is an event matches the given reason and namespace.\n+   *\n+   * @param events a list of events\n+   * @param reason the reason to match\n+   * @param namespace the namespace to match\n+   * @return true if there is a matching event\n+   */\n+  public static boolean containsEventWithNamespace(@NotNull List<V1Event> events, String reason, String namespace) {\n+    return namespace.equals(getEventsMatchesReason(events, reason).stream()", "originalCommit": "363aa36b239088b6d95fa0b281f31dae0aa5206b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODY0MTIwNA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2119#discussion_r548641204", "bodyText": "modified", "author": "doxiao", "createdAt": "2020-12-24T17:28:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODU1MTkxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODU1MjQxMA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2119#discussion_r548552410", "bodyText": "Please rename the method getEventsMatchesReason as getEventsWithReason", "author": "russgold", "createdAt": "2020-12-24T14:59:04Z", "path": "operator/src/test/java/oracle/kubernetes/operator/EventTestUtils.java", "diffHunk": "@@ -0,0 +1,171 @@\n+// Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+package oracle.kubernetes.operator;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+import javax.validation.constraints.NotNull;\n+\n+import io.kubernetes.client.openapi.models.V1Event;\n+import io.kubernetes.client.openapi.models.V1ObjectMeta;\n+import io.kubernetes.client.openapi.models.V1ObjectReference;\n+import oracle.kubernetes.operator.helpers.KubernetesTestSupport;\n+\n+import static oracle.kubernetes.operator.EventConstants.WEBLOGIC_OPERATOR_COMPONENT;\n+\n+public class EventTestUtils {\n+  private static List<V1Event> getEventsMatchesReason(@NotNull List<V1Event> events, String reason) {", "originalCommit": "363aa36b239088b6d95fa0b281f31dae0aa5206b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODY0MDgwOQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2119#discussion_r548640809", "bodyText": "renamed", "author": "doxiao", "createdAt": "2020-12-24T17:28:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODU1MjQxMA=="}], "type": "inlineReview"}, {"oid": "eab0d51edbef63e3bd6a652acf2dae2384034133", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/eab0d51edbef63e3bd6a652acf2dae2384034133", "message": "address review comments", "committedDate": "2020-12-24T16:43:04Z", "type": "commit"}, {"oid": "16d6ee4a9af02ef1f498da2e8aa6faee759083ee", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/16d6ee4a9af02ef1f498da2e8aa6faee759083ee", "message": "minor change", "committedDate": "2020-12-24T16:47:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODYzMjM3NA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2119#discussion_r548632374", "bodyText": "extra \"an\" in \"Whether an there\"? Same in other methods in this new class.", "author": "alai8", "createdAt": "2020-12-24T17:15:52Z", "path": "operator/src/test/java/oracle/kubernetes/operator/EventTestUtils.java", "diffHunk": "@@ -0,0 +1,151 @@\n+// Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+package oracle.kubernetes.operator;\n+\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+import javax.validation.constraints.NotNull;\n+\n+import io.kubernetes.client.openapi.models.V1Event;\n+import io.kubernetes.client.openapi.models.V1ObjectMeta;\n+import io.kubernetes.client.openapi.models.V1ObjectReference;\n+import oracle.kubernetes.operator.helpers.KubernetesTestSupport;\n+\n+import static oracle.kubernetes.operator.EventConstants.WEBLOGIC_OPERATOR_COMPONENT;\n+\n+public class EventTestUtils {\n+  private static List<V1Event> getEventsWithReason(@NotNull List<V1Event> events, String reason) {\n+    return events.stream().filter(event -> reasonMatches(event, reason)).collect(Collectors.toList());\n+  }\n+\n+  /**\n+   * Whether an there is an event matches the given reason and namespace.", "originalCommit": "16d6ee4a9af02ef1f498da2e8aa6faee759083ee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODY0MDY3OA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2119#discussion_r548640678", "bodyText": "fixed.", "author": "doxiao", "createdAt": "2020-12-24T17:28:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODYzMjM3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODY0MjQzOQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2119#discussion_r548642439", "bodyText": "there are a few other methods with the same typo", "author": "alai8", "createdAt": "2020-12-24T17:30:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODYzMjM3NA=="}], "type": "inlineReview"}, {"oid": "2b2993592b27dd8c3112b20e43d127bc3b49e8d8", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/2b2993592b27dd8c3112b20e43d127bc3b49e8d8", "message": "remove kube-system events from example", "committedDate": "2020-12-24T17:24:05Z", "type": "commit"}, {"oid": "10577939a1483ef55a6d15b5d56b3967785d0727", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/10577939a1483ef55a6d15b5d56b3967785d0727", "message": "javadoc", "committedDate": "2020-12-24T17:26:21Z", "type": "commit"}, {"oid": "f0f15ff1bfa2236c2f494e0c97fc695e4a8614bb", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/f0f15ff1bfa2236c2f494e0c97fc695e4a8614bb", "message": "javadoc", "committedDate": "2020-12-24T17:27:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODcyMzM0NA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2119#discussion_r548723344", "bodyText": "Should this method be called isNamespaceNotStarting() since it checks for negative condition?", "author": "ankedia", "createdAt": "2020-12-24T19:30:29Z", "path": "operator/src/main/java/oracle/kubernetes/operator/DomainRecheck.java", "diffHunk": "@@ -207,12 +210,24 @@ Step startNamespaceSteps(String ns) {\n     @Override\n     public NextAction apply(Packet packet) {\n       NamespaceStatus nss = domainNamespaces.getNamespaceStatus(ns);\n-      if (fullRecheck || !nss.isNamespaceStarting().getAndSet(true)) {\n+      if (fullRecheck) {\n         return doNext(packet);\n+      } else if (isNamespaceStarting(nss)) {\n+        return doNext(addEventStep(), packet);\n       } else {\n         return doEnd(packet);\n       }\n     }\n+\n+    private Step addEventStep() {\n+      return Step.chain(\n+          EventHelper.createEventStep(new EventData(NAMESPACE_WATCHING_STARTED).namespace(ns).resourceName(ns)),\n+          getNext());\n+    }\n+\n+    private boolean isNamespaceStarting(NamespaceStatus nss) {", "originalCommit": "f0f15ff1bfa2236c2f494e0c97fc695e4a8614bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODc0MDg0Ng==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2119#discussion_r548740846", "bodyText": "it detects if the namespace's isStarting boolean has just been changed from false to true, indicating it is starting right now.", "author": "doxiao", "createdAt": "2020-12-24T19:57:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODcyMzM0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODc0MjU2Mg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2119#discussion_r548742562", "bodyText": "changed it to isNamespaceStartingChangedToTrue to avoid confusion.", "author": "doxiao", "createdAt": "2020-12-24T20:11:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODcyMzM0NA=="}], "type": "inlineReview"}, {"oid": "044b23f162c3aa56ef0a2dcc3708df8df0030c92", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/044b23f162c3aa56ef0a2dcc3708df8df0030c92", "message": "change method names", "committedDate": "2020-12-24T20:08:21Z", "type": "commit"}, {"oid": "221312bf078346ee85684b7f8fb30ba06d9f84a5", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/221312bf078346ee85684b7f8fb30ba06d9f84a5", "message": "address review comments in doc", "committedDate": "2021-01-04T14:19:51Z", "type": "commit"}, {"oid": "5563d4dd82270180620476dc5a73492be96ee214", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/5563d4dd82270180620476dc5a73492be96ee214", "message": "fine tuning of test util", "committedDate": "2021-01-04T14:48:06Z", "type": "commit"}, {"oid": "9e4d30bdf5aeadbc1e22a3c54629b7b462d9a03d", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/9e4d30bdf5aeadbc1e22a3c54629b7b462d9a03d", "message": "more minor changes to test util", "committedDate": "2021-01-04T15:09:14Z", "type": "commit"}, {"oid": "f1bfe733939b14e37dd2b38a189819cdd04ef041", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/f1bfe733939b14e37dd2b38a189819cdd04ef041", "message": "doc changes", "committedDate": "2021-01-04T15:19:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTU0MjcyOA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2119#discussion_r551542728", "bodyText": "The name of this method is problematic, as it explains how it is implemented, rather than what behavior it provides. I presume that the intent is that the namespace should be started? And that it only happens once?\nIf so, maybe something like, shouldStartNamespace would be better. Better still would be to put that method on DomainNamespaces in order to start hiding the implementation of the flag.", "author": "russgold", "createdAt": "2021-01-04T20:12:54Z", "path": "operator/src/main/java/oracle/kubernetes/operator/DomainRecheck.java", "diffHunk": "@@ -207,12 +210,24 @@ Step startNamespaceSteps(String ns) {\n     @Override\n     public NextAction apply(Packet packet) {\n       NamespaceStatus nss = domainNamespaces.getNamespaceStatus(ns);\n-      if (fullRecheck || !nss.isNamespaceStarting().getAndSet(true)) {\n+      if (fullRecheck) {\n         return doNext(packet);\n+      } else if (isNamespaceStartingChangedToTrue(nss)) {\n+        return doNext(addNSWatchingStartingEventStep(), packet);\n       } else {\n         return doEnd(packet);\n       }\n     }\n+\n+    private Step addNSWatchingStartingEventStep() {\n+      return Step.chain(\n+          EventHelper.createEventStep(new EventData(NAMESPACE_WATCHING_STARTED).namespace(ns).resourceName(ns)),\n+          getNext());\n+    }\n+\n+    private boolean isNamespaceStartingChangedToTrue(NamespaceStatus nss) {", "originalCommit": "f1bfe733939b14e37dd2b38a189819cdd04ef041", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTU1Mjk3NA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2119#discussion_r551552974", "bodyText": "Did you mean to move the method (after rename it) to DomainStatus (instead of DomainnNamespaces) class?", "author": "doxiao", "createdAt": "2021-01-04T20:33:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTU0MjcyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTU2MjQ1OA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2119#discussion_r551562458", "bodyText": "I think I understand what you meant now. thanks.", "author": "doxiao", "createdAt": "2021-01-04T20:53:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTU0MjcyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTU0ODgxMA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2119#discussion_r551548810", "bodyText": "It's not clear to me what is happening here. What are you asserting? Why are you doing it in a loop?\nFor complex assertions, there are a number of strategies, including creating a custom matcher.", "author": "russgold", "createdAt": "2021-01-04T20:24:09Z", "path": "operator/src/test/java/oracle/kubernetes/operator/MainTest.java", "diffHunk": "@@ -570,6 +576,141 @@ public void afterNamespaceAdded_scriptConfigMapIsDefined() {\n     assertThat(getScriptMap(ns), notNullValue());\n   }\n \n+  @Test\n+  public void withNamespaceList_onCreateStartNamespacesStep_nsWatchStartedEventCreatedWithExpectedMessage() {\n+    defineSelectionStrategy(SelectionStrategy.List);\n+    HelmAccessStub.defineVariable(HelmAccess.OPERATOR_DOMAIN_NAMESPACES,\n+        String.join(\",\", NS_WEBLOGIC1, NS_WEBLOGIC2, NS_WEBLOGIC3));\n+    testSupport.defineResources(NAMESPACE_WEBLOGIC1, NAMESPACE_WEBLOGIC2, NAMESPACE_WEBLOGIC3,\n+        NAMESPACE_WEBLOGIC4, NAMESPACE_WEBLOGIC5);\n+\n+    List<String> namespaces = Arrays.asList(NS_WEBLOGIC1, NS_WEBLOGIC2, NS_WEBLOGIC3);\n+    testSupport.runSteps(\n+        createDomainRecheck().createStartNamespacesStep(namespaces));\n+\n+    for (String ns: namespaces) {\n+      MatcherAssert.assertThat(\"Event NAMESPACE_WATCHING_STARTED message\",\n+          EventTestUtils.containsEventWithMessage(getEvents(testSupport),", "originalCommit": "f1bfe733939b14e37dd2b38a189819cdd04ef041", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTU2MTUwOA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2119#discussion_r551561508", "bodyText": "it is to verify that the operator generates an event for each of the namespaces that are supposed to be started.", "author": "doxiao", "createdAt": "2021-01-04T20:51:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTU0ODgxMA=="}], "type": "inlineReview"}, {"oid": "103408533f8377022abaa495869b85299ab6fb18", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/103408533f8377022abaa495869b85299ab6fb18", "message": "refactoring to address new comments", "committedDate": "2021-01-04T21:52:47Z", "type": "commit"}, {"oid": "8c75565e6da44d7a1a3720b151fea4de3a7d012b", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/8c75565e6da44d7a1a3720b151fea4de3a7d012b", "message": "copyright", "committedDate": "2021-01-04T22:19:28Z", "type": "commit"}, {"oid": "6ee7e8d3d9c3cbf563e0d4021856261e4868927d", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/6ee7e8d3d9c3cbf563e0d4021856261e4868927d", "message": "correct test assert text", "committedDate": "2021-01-04T22:57:23Z", "type": "commit"}]}