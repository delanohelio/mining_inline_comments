{"pr_number": 1639, "pr_title": "Retry  DB startup and RCU creation as well as support custom namespace for RCU/DB  ", "pr_createdAt": "2020-05-11T14:03:47Z", "pr_url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1639", "timeline": [{"oid": "1c4522c445d8dc1e996131bfdc0d3c1c1d93869e", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/1c4522c445d8dc1e996131bfdc0d3c1c1d93869e", "message": "first cut of retry-rcu", "committedDate": "2020-05-07T06:16:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzgxMzMzMQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1639#discussion_r423813331", "bodyText": "Delete commented out code.", "author": "rjeberhard", "createdAt": "2020-05-12T15:11:05Z", "path": "integration-tests/src/test/java/oracle/kubernetes/operator/utils/DbUtils.java", "diffHunk": "@@ -230,16 +217,84 @@ public static void deleteNamespace(String namespace) throws Exception {\n   }\n \n   /**\n-   * create a namespace.\n-   *\n-   * @param namespace - namespace to create\n-   * @throws Exception - if any error occurs\n+   * Create a namespace.\n+   * \n+   * @param namespace namespace to create\n+   * @throws Exception if any error occurs\n    */\n   public static void createNamespace(String namespace) throws Exception {\n     if (!namespace.equalsIgnoreCase(\"default\")) {\n-      String command = \"kubectl create ns \" + namespace;\n-      logger.info(\"Running \" + command);\n-      TestUtils.execOrAbortProcess(command);\n+      String cmd1 = \"kubectl delete ns \" + namespace + \" --ignore-not-found\";\n+      logger.info(\"Running \" + cmd1);\n+      TestUtils.execOrAbortProcess(cmd1, true);\n+      String cmd2 = \"kubectl create ns \" + namespace;\n+      logger.info(\"Running \" + cmd2);\n+      TestUtils.execOrAbortProcess(cmd2, true);\n+    }\n+  }\n+  \n+  /**\n+   * Start DB instance, create Oracle rcu pod and load database schema in the specified namespace.\n+   * \n+   * @param scriptsDir directory of scripts\n+   * @param dbPort NodePort of DB\n+   * @param dbUrl URL of DB\n+   * @param rcuSchemaPrefix rcu SchemaPrefixe\n+   * @param namespace namespace where DB and RCU schema are going to start\n+   * @throws Exception if any error occurs when setting up RCU database\n+   */\n+  public static void setupRcuDatabase(String scriptsDir, int dbPort, String dbUrl, \n+      String rcuSchemaPrefix, String namespace) throws Exception {  \n+    \n+    createNamespace(namespace);\n+    createDockerRegistrySecret(namespace);\n+    /*", "originalCommit": "1c4522c445d8dc1e996131bfdc0d3c1c1d93869e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjIxOTA1MQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1639#discussion_r426219051", "bodyText": "Done.\n(Sorry, I just saw this review comment.  Since I don't know if we are going to need this kind of change in the old integration test  I just created a draft PR without code cleanup.)", "author": "maggiehe00", "createdAt": "2020-05-17T05:28:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzgxMzMzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzgxMzY2OQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1639#discussion_r423813669", "bodyText": "Describe what must still be done if you are leaving a TODO.", "author": "rjeberhard", "createdAt": "2020-05-12T15:11:34Z", "path": "integration-tests/src/test/java/oracle/kubernetes/operator/utils/DbUtils.java", "diffHunk": "@@ -230,16 +217,84 @@ public static void deleteNamespace(String namespace) throws Exception {\n   }\n \n   /**\n-   * create a namespace.\n-   *\n-   * @param namespace - namespace to create\n-   * @throws Exception - if any error occurs\n+   * Create a namespace.\n+   * \n+   * @param namespace namespace to create\n+   * @throws Exception if any error occurs\n    */\n   public static void createNamespace(String namespace) throws Exception {\n     if (!namespace.equalsIgnoreCase(\"default\")) {\n-      String command = \"kubectl create ns \" + namespace;\n-      logger.info(\"Running \" + command);\n-      TestUtils.execOrAbortProcess(command);\n+      String cmd1 = \"kubectl delete ns \" + namespace + \" --ignore-not-found\";\n+      logger.info(\"Running \" + cmd1);\n+      TestUtils.execOrAbortProcess(cmd1, true);\n+      String cmd2 = \"kubectl create ns \" + namespace;\n+      logger.info(\"Running \" + cmd2);\n+      TestUtils.execOrAbortProcess(cmd2, true);\n+    }\n+  }\n+  \n+  /**\n+   * Start DB instance, create Oracle rcu pod and load database schema in the specified namespace.\n+   * \n+   * @param scriptsDir directory of scripts\n+   * @param dbPort NodePort of DB\n+   * @param dbUrl URL of DB\n+   * @param rcuSchemaPrefix rcu SchemaPrefixe\n+   * @param namespace namespace where DB and RCU schema are going to start\n+   * @throws Exception if any error occurs when setting up RCU database\n+   */\n+  public static void setupRcuDatabase(String scriptsDir, int dbPort, String dbUrl, \n+      String rcuSchemaPrefix, String namespace) throws Exception {  \n+    \n+    createNamespace(namespace);\n+    createDockerRegistrySecret(namespace);\n+    /*\n+    //delete leftover pods caused by test being aborted\n+    deleteRcuPod(scriptsDir);\n+    deleteDbPod(scriptsDir);\n+    \n+    startOracleDB(scriptsDir, String.valueOf(dbPort), namespace);\n+    createRcuSchema(scriptsDir,rcuSchemaPrefix, dbUrl, namespace);\n+    */\n+    String cmd1 = \"mkdir -p \" + scriptsDir\n+        + \"/scripts/create-rcu-schema/rcuoutput\";\n+    TestUtils.execOrAbortProcess(cmd1);\n+    String cmd2 = \"cp \" \n+        + scriptsDir\n+        + \"/scripts/create-rcu-schema/common/rcu.yaml \"\n+        + scriptsDir\n+        + \"/scripts/create-rcu-schema/rcuoutput/\";\n+    TestUtils.execOrAbortProcess(cmd2);\n+    createDBandRCUschema(scriptsDir, dbPort, dbUrl, rcuSchemaPrefix, namespace);\n+    LoggerHelper.getLocal().log(Level.INFO,\"RCU schema is going to create for:\" \n+        + \" namespace: \" + namespace \n+        + \" dbUrl:\" + dbUrl \n+        + \" dbPort: \" + dbPort\n+        + \" rcuSchemaPrefix: \" + rcuSchemaPrefix); \n+    \n+  }\n+  \n+  private static void createDBandRCUschema(String scriptsDir, int dbPort, String dbUrl, \n+      String rcuSchemaPrefix, String namespace) throws Exception {\n+    count++;\n+    if (count < 2) {\n+      deleteRcuPod(scriptsDir);\n+      deleteDbPod(scriptsDir);\n+      try {\n+        startOracleDB(scriptsDir, String.valueOf(dbPort), namespace);\n+        createRcuSchema(scriptsDir,rcuSchemaPrefix, dbUrl, namespace);\n+        LoggerHelper.getLocal().log(Level.INFO,\"RCU schema is created for:\" \n+            + \" namespace: \" + namespace \n+            + \" dbUrl:\" + dbUrl \n+            + \" dbPort: \" + dbPort\n+            + \" rcuSchemaPrefix: \" + rcuSchemaPrefix);\n+        //TODO", "originalCommit": "1c4522c445d8dc1e996131bfdc0d3c1c1d93869e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjIxOTA2Mg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1639#discussion_r426219062", "bodyText": "Done", "author": "maggiehe00", "createdAt": "2020-05-17T05:28:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzgxMzY2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjIwOTE3Ng==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1639#discussion_r426209176", "bodyText": "Oracle DB - be consistent, and Oracle has to have a capital O", "author": "markxnelson", "createdAt": "2020-05-17T02:17:24Z", "path": "integration-tests/src/test/java/oracle/kubernetes/operator/utils/DbUtils.java", "diffHunk": "@@ -17,14 +17,17 @@\n   public static final String DEFAULT_RCU_SYS_USERNAME = \"sys\";\n   public static final String DEFAULT_RCU_SYS_PASSWORD = \"Oradoc_db1\";\n   public static final String DEFAULT_RCU_NAMESPACE = \"rcu\";\n+  public static final String DEFAULT_ImagePullSecret = \"docker-store\";\n+  public static final String DEFAULT_ImagePullPolicy = \"Always\";\n+  private static int count = 0;\n   private static final Logger logger = Logger.getLogger(\"OperatorIT\", \"OperatorIT\");\n \n   /**\n-   * create oracle db pod in the k8s cluster.\n+   * Create oracle db pod in the k8s cluster.", "originalCommit": "1c4522c445d8dc1e996131bfdc0d3c1c1d93869e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjIxOTA3MQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1639#discussion_r426219071", "bodyText": "Done", "author": "maggiehe00", "createdAt": "2020-05-17T05:28:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjIwOTE3Ng=="}], "type": "inlineReview"}, {"oid": "1a0678f2d0aed7713f5a06bd40aad7bb906eef14", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/1a0678f2d0aed7713f5a06bd40aad7bb906eef14", "message": "address the review comment", "committedDate": "2020-05-17T05:19:26Z", "type": "commit"}, {"oid": "16bcfc151cbea0a1f1db8bfebf25dbb6411090ad", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/16bcfc151cbea0a1f1db8bfebf25dbb6411090ad", "message": "Merge remote-tracking branch 'origin/develop' into retry-rcu", "committedDate": "2020-05-17T05:22:07Z", "type": "commit"}]}