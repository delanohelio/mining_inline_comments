{"pr_number": 1534, "pr_title": "Add more contents into MII image plus cleanup", "pr_createdAt": "2020-04-03T18:05:48Z", "pr_url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534", "timeline": [{"oid": "bef99d639dcb820d23634d3033166575e5cb3551", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/bef99d639dcb820d23634d3033166575e5cb3551", "message": "Add model to wit test\n\nSigned-off-by: doxiao <dongbo.xiao@oracle.com>", "committedDate": "2020-04-02T20:57:28Z", "type": "commit"}, {"oid": "54a20730f1694a0db8844e4081a63f97b89147d3", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/54a20730f1694a0db8844e4081a63f97b89147d3", "message": "More impl\n\nSigned-off-by: doxiao <dongbo.xiao@oracle.com>", "committedDate": "2020-04-02T22:25:38Z", "type": "commit"}, {"oid": "1b99fc4650895fb57914155a4c7a3d68d6ed63ed", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/1b99fc4650895fb57914155a4c7a3d68d6ed63ed", "message": "Merge remote-tracking branch 'origin/mii-new-integration-tests' into wit-action-test\n\nSigned-off-by: doxiao <dongbo.xiao@oracle.com>\n\nConflicts:\n\tnew-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/InstallWITCommon.java\n\tnew-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/WebLogicImageTool.java", "committedDate": "2020-04-02T23:44:44Z", "type": "commit"}, {"oid": "c97c3056a6ff3cd83fa4dfc48a70809d07efaa03", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/c97c3056a6ff3cd83fa4dfc48a70809d07efaa03", "message": "Restruct the code and move constants into ActionConstants\n\nSigned-off-by: doxiao <dongbo.xiao@oracle.com>", "committedDate": "2020-04-03T16:55:44Z", "type": "commit"}, {"oid": "9300291fd5a34b48e17c9a4451e51f98d0efd50c", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/9300291fd5a34b48e17c9a4451e51f98d0efd50c", "message": "Revert an unintended change\n\nSigned-off-by: doxiao <dongbo.xiao@oracle.com>", "committedDate": "2020-04-03T17:01:36Z", "type": "commit"}, {"oid": "04301515cb86b18975f062fc4fbced6f5621f3c7", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/04301515cb86b18975f062fc4fbced6f5621f3c7", "message": "Minor cleanup\n\nSigned-off-by: doxiao <dongbo.xiao@oracle.com>", "committedDate": "2020-04-03T17:53:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNjAyNQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403406025", "bodyText": "@ddsharpe is this a WDT thing, that it needs to be a forward slash, or should this be File.separator ?", "author": "markxnelson", "createdAt": "2020-04-04T01:36:03Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItWITValidation.java", "diffHunk": "@@ -3,24 +3,45 @@\n \n package oracle.weblogic.kubernetes;\n \n+import java.util.Arrays;\n+import java.util.List;\n+\n import oracle.weblogic.kubernetes.actions.TestActions;\n+import oracle.weblogic.kubernetes.assertions.TestAssertions;\n import oracle.weblogic.kubernetes.extensions.LoggedTest;\n import org.junit.jupiter.api.DisplayName;\n import org.junit.jupiter.api.Test;\n \n+import static oracle.weblogic.kubernetes.actions.ActionConstants.MODEL_DIR;\n import static oracle.weblogic.kubernetes.actions.TestActions.withWITParams;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n \n @DisplayName(\"Simple validation of basic WIT functions\")\n class ItWITValidation implements LoggedTest {\n+  private static final String WDT_MODEL_FILE = \"model1-wls.yaml\";\n+  private static final String IMAGE_NAME = \"test-mii-image-2\";\n+  private static final String IMAGE_TAG = \"v1\";\n+  \n   @Test\n   @DisplayName(\"Create a MII image\")\n   public void testCreatingMIIImage() {\n \n-    // create the MII image\n-    // TODO add model files and other contents to the image once we have those resources\n-    boolean success = TestActions.createMIIImage(withWITParams());\n+    logger.info(\"WDT model directory is \" + MODEL_DIR);\n+\n+    // build the model file list\n+    List<String> modelList = Arrays.asList(MODEL_DIR + \"/\" + WDT_MODEL_FILE);", "originalCommit": "04301515cb86b18975f062fc4fbced6f5621f3c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ4MTI1NA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403481254", "bodyText": "this should be File.separator.", "author": "doxiao", "createdAt": "2020-04-04T15:17:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNjAyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI0ODIzMw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r404248233", "bodyText": "Line 32 doesn't seem correct.  string concatenation (so one string), wrapped with Arrays.asList(), why?  If its just one model and not a list, wouldn't you prefer to use Collections.singletonList()?  And yes, this slash should be File.separator.", "author": "ddsharpe", "createdAt": "2020-04-06T17:02:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNjAyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI2OTY4OA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r404269688", "bodyText": "yes, right now, the test only has one model. but the code tries to show how to have one or more models in one image.", "author": "doxiao", "createdAt": "2020-04-06T17:36:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNjAyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM3MDE5Ng==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r404370196", "bodyText": "changed to singletonList.", "author": "doxiao", "createdAt": "2020-04-06T20:33:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNjAyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNjEwMQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403406101", "bodyText": "please static import TestActions so you can just say createMIIImage() instead of TestActions.createMIIImage()", "author": "markxnelson", "createdAt": "2020-04-04T01:36:42Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItWITValidation.java", "diffHunk": "@@ -3,24 +3,45 @@\n \n package oracle.weblogic.kubernetes;\n \n+import java.util.Arrays;\n+import java.util.List;\n+\n import oracle.weblogic.kubernetes.actions.TestActions;\n+import oracle.weblogic.kubernetes.assertions.TestAssertions;\n import oracle.weblogic.kubernetes.extensions.LoggedTest;\n import org.junit.jupiter.api.DisplayName;\n import org.junit.jupiter.api.Test;\n \n+import static oracle.weblogic.kubernetes.actions.ActionConstants.MODEL_DIR;\n import static oracle.weblogic.kubernetes.actions.TestActions.withWITParams;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n \n @DisplayName(\"Simple validation of basic WIT functions\")\n class ItWITValidation implements LoggedTest {\n+  private static final String WDT_MODEL_FILE = \"model1-wls.yaml\";\n+  private static final String IMAGE_NAME = \"test-mii-image-2\";\n+  private static final String IMAGE_TAG = \"v1\";\n+  \n   @Test\n   @DisplayName(\"Create a MII image\")\n   public void testCreatingMIIImage() {\n \n-    // create the MII image\n-    // TODO add model files and other contents to the image once we have those resources\n-    boolean success = TestActions.createMIIImage(withWITParams());\n+    logger.info(\"WDT model directory is \" + MODEL_DIR);\n+\n+    // build the model file list\n+    List<String> modelList = Arrays.asList(MODEL_DIR + \"/\" + WDT_MODEL_FILE);\n \n+    // build an image using WebLogic Image Tool\n+    boolean success = TestActions.createMIIImage(", "originalCommit": "04301515cb86b18975f062fc4fbced6f5621f3c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc4MjI3NA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403782274", "bodyText": "Done.", "author": "doxiao", "createdAt": "2020-04-06T00:43:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNjEwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNjIwMQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403406201", "bodyText": "pleas static import so you don't need TestAssertions. here", "author": "markxnelson", "createdAt": "2020-04-04T01:37:18Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItWITValidation.java", "diffHunk": "@@ -3,24 +3,45 @@\n \n package oracle.weblogic.kubernetes;\n \n+import java.util.Arrays;\n+import java.util.List;\n+\n import oracle.weblogic.kubernetes.actions.TestActions;\n+import oracle.weblogic.kubernetes.assertions.TestAssertions;\n import oracle.weblogic.kubernetes.extensions.LoggedTest;\n import org.junit.jupiter.api.DisplayName;\n import org.junit.jupiter.api.Test;\n \n+import static oracle.weblogic.kubernetes.actions.ActionConstants.MODEL_DIR;\n import static oracle.weblogic.kubernetes.actions.TestActions.withWITParams;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n \n @DisplayName(\"Simple validation of basic WIT functions\")\n class ItWITValidation implements LoggedTest {\n+  private static final String WDT_MODEL_FILE = \"model1-wls.yaml\";\n+  private static final String IMAGE_NAME = \"test-mii-image-2\";\n+  private static final String IMAGE_TAG = \"v1\";\n+  \n   @Test\n   @DisplayName(\"Create a MII image\")\n   public void testCreatingMIIImage() {\n \n-    // create the MII image\n-    // TODO add model files and other contents to the image once we have those resources\n-    boolean success = TestActions.createMIIImage(withWITParams());\n+    logger.info(\"WDT model directory is \" + MODEL_DIR);\n+\n+    // build the model file list\n+    List<String> modelList = Arrays.asList(MODEL_DIR + \"/\" + WDT_MODEL_FILE);\n \n+    // build an image using WebLogic Image Tool\n+    boolean success = TestActions.createMIIImage(\n+        withWITParams()\n+            .modelImageName(IMAGE_NAME)\n+            .modelImageTag(IMAGE_TAG)\n+            .modelFiles(modelList)\n+            .wdtVersion(\"latest\")\n+            .redirect(false));\n+ \n     assertEquals(true, success, \"Failed to create the image using WebLogic Deploy Tool\");\n+    TestAssertions.imageExists(IMAGE_NAME, IMAGE_TAG);", "originalCommit": "04301515cb86b18975f062fc4fbced6f5621f3c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNjMwMQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403406301", "bodyText": "imageExists() could probably use a better name too - maybe assertImageExists", "author": "markxnelson", "createdAt": "2020-04-04T01:37:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNjIwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc4MjM5MA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403782390", "bodyText": "Made the change to use static import and rename the method.", "author": "doxiao", "createdAt": "2020-04-06T00:44:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNjIwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNjMyNw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403406327", "bodyText": "needs a null check", "author": "markxnelson", "createdAt": "2020-04-04T01:38:15Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/ActionConstants.java", "diffHunk": "@@ -0,0 +1,49 @@\n+// Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+package oracle.weblogic.kubernetes.actions;\n+\n+public interface ActionConstants {\n+\n+  // Work directory for the integration test suite\n+  public static final String WORK_DIR \n+      = System.getProperty(\"java.io.tmpdir\") + \"/it-results\";", "originalCommit": "04301515cb86b18975f062fc4fbced6f5621f3c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxMzQyOA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403713428", "bodyText": "I assumed this system property would never be null. I don't know what to do if it actually returns null.\nI am using this as a temporary solution for a to-be-added script that runs upfront to setup necessary environment for the integration test suite. That script would set the WORK_DIR to an appropriate directory according to the platform where the integration test runs. Once we have that script in place, we don't need this anymore.", "author": "doxiao", "createdAt": "2020-04-05T14:59:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNjMyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI0OTg3OQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r404249879", "bodyText": "I am okay without having a null check here.  If this fails, the build should fail.  Because this is in the test code, the NPE stacktrace is sufficient to debug it, in my opinion.  Shouldn't this \"/\" be File.separator also?", "author": "ddsharpe", "createdAt": "2020-04-06T17:04:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNjMyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI3MDQ3MQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r404270471", "bodyText": "java.io.tmpdir is guaranteed to have a value by the System.getProperty javadoc.", "author": "rjeberhard", "createdAt": "2020-04-06T17:37:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNjMyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI3NzA5Mw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r404277093", "bodyText": "ok - ignore me :)", "author": "markxnelson", "createdAt": "2020-04-06T17:48:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNjMyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNjQwNg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403406406", "bodyText": "typo - two slashes", "author": "markxnelson", "createdAt": "2020-04-04T01:38:56Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/ActionConstants.java", "diffHunk": "@@ -0,0 +1,49 @@\n+// Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+package oracle.weblogic.kubernetes.actions;\n+\n+public interface ActionConstants {\n+\n+  // Work directory for the integration test suite\n+  public static final String WORK_DIR \n+      = System.getProperty(\"java.io.tmpdir\") + \"/it-results\";\n+  // Directory for resources\n+  public static final String RESOURCE_DIR \n+      = System.getProperty(\"user.dir\") + \"/src/test/resources\"; \n+  // Directory for all WDT models\n+  public static final String MODEL_DIR = RESOURCE_DIR + \"/wdt-models\"; \n+  // Directory for download items\n+  public static final String DOWNLOAD_DIR = WORK_DIR + \"/download\";\n+  \n+  // ------------ WebLogicImageTool action constants -------------\n+  public static final String WLS = \"WLS\";\n+  public static final String JRF = \"JRF\";\n+  public static final String RJRF = \"RestrictedJRF\";\n+  public static final String WLS_BASE_IMAGE_NAME \n+      = \"container-registry.oracle.com/middleware/weblogic\";\n+  public static final String JRF_BASE_IMAGE_NAME \n+      = \"container-registry.oracle.com/middleware/fmw-infrastructure\";\n+  public static final String WLS_BASE_IMAGE_TAG = \"12.2.1.4\";\n+\n+  public static final String DEFAULT_MODEL_IMAGE_NAME = \"test-mii-image\";\n+  public static final String DEFAULT_MODEL_IMAGE_TAG  = \"v1\";\n+  \n+  // ------------ WebLogic Image Tool constants----------------------------\n+  public static final String WIT = \"WIT\";\n+  public static final String WDT = \"WDT\";\n+\n+  public static final String WIT_DOWNLOAD_URL \n+      = \"https://github.com//oracle/weblogic-image-tool\";", "originalCommit": "04301515cb86b18975f062fc4fbced6f5621f3c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc4MjQzMw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403782433", "bodyText": "fixed", "author": "doxiao", "createdAt": "2020-04-06T00:44:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNjQwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNjQzMQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403406431", "bodyText": "typo", "author": "markxnelson", "createdAt": "2020-04-04T01:39:06Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/ActionConstants.java", "diffHunk": "@@ -0,0 +1,49 @@\n+// Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+package oracle.weblogic.kubernetes.actions;\n+\n+public interface ActionConstants {\n+\n+  // Work directory for the integration test suite\n+  public static final String WORK_DIR \n+      = System.getProperty(\"java.io.tmpdir\") + \"/it-results\";\n+  // Directory for resources\n+  public static final String RESOURCE_DIR \n+      = System.getProperty(\"user.dir\") + \"/src/test/resources\"; \n+  // Directory for all WDT models\n+  public static final String MODEL_DIR = RESOURCE_DIR + \"/wdt-models\"; \n+  // Directory for download items\n+  public static final String DOWNLOAD_DIR = WORK_DIR + \"/download\";\n+  \n+  // ------------ WebLogicImageTool action constants -------------\n+  public static final String WLS = \"WLS\";\n+  public static final String JRF = \"JRF\";\n+  public static final String RJRF = \"RestrictedJRF\";\n+  public static final String WLS_BASE_IMAGE_NAME \n+      = \"container-registry.oracle.com/middleware/weblogic\";\n+  public static final String JRF_BASE_IMAGE_NAME \n+      = \"container-registry.oracle.com/middleware/fmw-infrastructure\";\n+  public static final String WLS_BASE_IMAGE_TAG = \"12.2.1.4\";\n+\n+  public static final String DEFAULT_MODEL_IMAGE_NAME = \"test-mii-image\";\n+  public static final String DEFAULT_MODEL_IMAGE_TAG  = \"v1\";\n+  \n+  // ------------ WebLogic Image Tool constants----------------------------\n+  public static final String WIT = \"WIT\";\n+  public static final String WDT = \"WDT\";\n+\n+  public static final String WIT_DOWNLOAD_URL \n+      = \"https://github.com//oracle/weblogic-image-tool\";\n+  public static final String WIT_VERSION    = \"release-1.8.3\";\n+  public static final String WIT_FILE_NAME  = \"imagetool.zip\";\n+\n+  public static final String WDT_DOWNLOAD_URL \n+      = \"https://github.com//oracle/weblogic-deploy-tooling\";", "originalCommit": "04301515cb86b18975f062fc4fbced6f5621f3c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc4MjY3NQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403782675", "bodyText": "fixed", "author": "doxiao", "createdAt": "2020-04-06T00:47:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNjQzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNjY0OA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403406648", "bodyText": "this is ok, but i had to stop and think to work out what you meant here.\ni know this is uglier:\nif (type == WIT) {\n  return WIT_VERSION;\n} else if (type == WDT) {\n  return WDT_VERSION;\n} else {\n // do something!!!\n}\n\nbut it is much easier to read and immediately understand what you meant, plus it is more explicit about what do to if type is not WIT or WDT ..", "author": "markxnelson", "createdAt": "2020-04-04T01:41:29Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/InstallParams.java", "diffHunk": "@@ -53,7 +51,7 @@ public InstallParams version(String version) {\n \n   public String version() {\n     if (version == null) {\n-      return WIT_TYPE.equals(type) ? DEFAULT_WIT_VERSION : DEFAULT_WDT_VERSION;\n+      return WIT.equals(type) ? WIT_VERSION : WDT_VERSION;", "originalCommit": "04301515cb86b18975f062fc4fbced6f5621f3c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc3NzYyMg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403777622", "bodyText": "Changed to\nreturn WIT.equals(type) ? WIT_FILE_NAME : WDT_FILE_NAME;", "author": "doxiao", "createdAt": "2020-04-06T00:09:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNjY0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI1NDY5Nw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r404254697", "bodyText": "Where there are this many \"if\" checks on type, it makes me think this should be two separate classes (that could extend the same base/interface).  It would also make it easier to read :)", "author": "ddsharpe", "createdAt": "2020-04-06T17:12:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNjY0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNjgzMA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403406830", "bodyText": "the code does not appear to create any directories?", "author": "markxnelson", "createdAt": "2020-04-04T01:42:57Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/InstallWITCommon.java", "diffHunk": "@@ -42,17 +36,17 @@ protected void checkDirectory(String dir) {\n   }\n \n   /**\n-   * Check if the required directoies exist.\n-   * Currently the directies will be created if missing. We may remove this function\n-   * once we have all required working directies pre-created.\n+   * Check if the required directories exist.\n+   * Currently the directories will be created if missing. We may remove this function", "originalCommit": "04301515cb86b18975f062fc4fbced6f5621f3c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc4MjY5MQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403782691", "bodyText": "fixed the javadoc", "author": "doxiao", "createdAt": "2020-04-06T00:47:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNjgzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNjg2OQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403406869", "bodyText": "do we need to check that it is a file, not a directory or something else?", "author": "markxnelson", "createdAt": "2020-04-04T01:43:20Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/InstallWITCommon.java", "diffHunk": "@@ -42,17 +36,17 @@ protected void checkDirectory(String dir) {\n   }\n \n   /**\n-   * Check if the required directoies exist.\n-   * Currently the directies will be created if missing. We may remove this function\n-   * once we have all required working directies pre-created.\n+   * Check if the required directories exist.\n+   * Currently the directories will be created if missing. We may remove this function\n+   * once we have all required working directories pre-created.\n    *\n    * @param dir the directory that needs to be checked\n    */\n   protected void checkFile(String fileName) throws FileNotFoundException {\n     File file = new File(fileName);\n     if (!file.exists()) {", "originalCommit": "04301515cb86b18975f062fc4fbced6f5621f3c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxMzUyMA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403713520", "bodyText": "good point. I need to check if it is indeed a file.", "author": "doxiao", "createdAt": "2020-04-05T15:00:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNjg2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNjkwMw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403406903", "bodyText": "\"was not found\"", "author": "markxnelson", "createdAt": "2020-04-04T01:43:32Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/InstallWITCommon.java", "diffHunk": "@@ -42,17 +36,17 @@ protected void checkDirectory(String dir) {\n   }\n \n   /**\n-   * Check if the required directoies exist.\n-   * Currently the directies will be created if missing. We may remove this function\n-   * once we have all required working directies pre-created.\n+   * Check if the required directories exist.\n+   * Currently the directories will be created if missing. We may remove this function\n+   * once we have all required working directories pre-created.\n    *\n    * @param dir the directory that needs to be checked\n    */\n   protected void checkFile(String fileName) throws FileNotFoundException {\n     File file = new File(fileName);\n     if (!file.exists()) {\n-      logger.warning(\"The expected file \\\" + fileName + \\\" not found.\");\n-      throw new FileNotFoundException(\"The expected file \\\" + fileName + \\\" not found.\");\n+      logger.warning(\"The expected file \" + fileName + \" not found.\");", "originalCommit": "04301515cb86b18975f062fc4fbced6f5621f3c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc4MjcyNA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403782724", "bodyText": "fixed", "author": "doxiao", "createdAt": "2020-04-06T00:47:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNjkwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNzAzOA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403407038", "bodyText": "i think we should try to avoid inheritance as much as possible", "author": "markxnelson", "createdAt": "2020-04-04T01:44:08Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/Installer.java", "diffHunk": "@@ -5,17 +5,19 @@\n \n import java.io.File;\n \n+import static oracle.weblogic.kubernetes.actions.ActionConstants.DOWNLOAD_DIR;\n+import static oracle.weblogic.kubernetes.actions.ActionConstants.IMAGE_TOOL;\n import static oracle.weblogic.kubernetes.extensions.LoggedTest.logger;\n \n+\n /**\n  *  Implementation of actions that download/install tools for the uses to use.\n  *  NOTE: This class is a temporary solution, and may go away once we eventually\n  *  install everything before the Java test starts to run.\n  */\n \n public class Installer extends InstallWITCommon {", "originalCommit": "04301515cb86b18975f062fc4fbced6f5621f3c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc4MzEyOA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403783128", "bodyText": "Got rid of the inheritance - InstallWITCommon class is removed, and the common methods are moved into FileUtils and a new action: Command and CommandParams. I am not very happy about the class name. Any suggestions?\nWe can also get rid of ActionImplCommon once Vanaj's code in PR#1535 is updated; it uses ActionImplCommon right now.", "author": "doxiao", "createdAt": "2020-04-06T00:50:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNzAzOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNzIxMg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403407212", "bodyText": "i am not sure what this is meant to do.\nare you trying to say - if the file DOES exist, then unzip it?\nor if it DOES NOT exist, and you asked me to unzip, then unzip it?\nseems we could write this with code that is longer, but much clearer", "author": "markxnelson", "createdAt": "2020-04-04T01:46:03Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/Installer.java", "diffHunk": "@@ -35,25 +37,25 @@ public boolean download() {\n     boolean downloadResult = true;\n     boolean unzipResult = true;\n     if (params.verify()\n-        && new File(downloadDir, params.fileName()).exists()) {\n+        && new File(DOWNLOAD_DIR, params.fileName()).exists()) {\n       logger.info(\"File \" + params.fileName() + \" already exists.\");\n     } else {\n       checkDirectory(WORK_DIR);\n       downloadResult = executeAndVerify(buildDownloadCommand(), params.direct());\n     }\n-    if (!(new File(downloadDir + \"../imagetool/imagetool.sh\").exists()) \n+    if (!(new File(IMAGE_TOOL).exists()) ", "originalCommit": "04301515cb86b18975f062fc4fbced6f5621f3c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxMzU4NA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403713584", "bodyText": "This is try not to unzip it more than once.  I'll make it clearer.", "author": "doxiao", "createdAt": "2020-04-05T15:00:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNzIxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc4MzE2MQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403783161", "bodyText": "Improved the code.", "author": "doxiao", "createdAt": "2020-04-06T00:50:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNzIxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNzI4Mg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403407282", "bodyText": "I think String.format() would make this easier to read", "author": "markxnelson", "createdAt": "2020-04-04T01:46:42Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/Installer.java", "diffHunk": "@@ -35,25 +37,25 @@ public boolean download() {\n     boolean downloadResult = true;\n     boolean unzipResult = true;\n     if (params.verify()\n-        && new File(downloadDir, params.fileName()).exists()) {\n+        && new File(DOWNLOAD_DIR, params.fileName()).exists()) {\n       logger.info(\"File \" + params.fileName() + \" already exists.\");\n     } else {\n       checkDirectory(WORK_DIR);\n       downloadResult = executeAndVerify(buildDownloadCommand(), params.direct());\n     }\n-    if (!(new File(downloadDir + \"../imagetool/imagetool.sh\").exists()) \n+    if (!(new File(IMAGE_TOOL).exists()) \n         && params.unzip()) {\n-      unzipResult = unzip(downloadDir, params.fileName(), downloadDir + \"/..\");\n+      unzipResult = unzip();\n     }\n     return downloadResult && unzipResult;\n   }\n \n-  private boolean unzip(String path, String fileName, String targetDir) {\n+  private boolean unzip() {\n     String command = ", "originalCommit": "04301515cb86b18975f062fc4fbced6f5621f3c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc4MjEzNw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403782137", "bodyText": "yes. Changed the code to use String.format().", "author": "doxiao", "createdAt": "2020-04-06T00:42:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNzI4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNzQyOQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403407429", "bodyText": "i think this whole method could be better written as\nString command = String.format(\"...\", a, b, c, d);\nreturn command;", "author": "markxnelson", "createdAt": "2020-04-04T01:48:15Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/Installer.java", "diffHunk": "@@ -67,6 +69,6 @@ private String buildDownloadCommand() {\n     \n     return \"curl -fL \" ", "originalCommit": "04301515cb86b18975f062fc4fbced6f5621f3c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxMzcyNA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403713724", "bodyText": "String.format does make it easier to read and less error-prone.", "author": "doxiao", "createdAt": "2020-04-05T15:02:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNzQyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc4MzE3OA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403783178", "bodyText": "done", "author": "doxiao", "createdAt": "2020-04-06T00:50:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNzQyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNzYwMw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403407603", "bodyText": "didn't you literally just download it and check it was there a few lines ago?\ndo we need another check?", "author": "markxnelson", "createdAt": "2020-04-04T01:49:29Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/WebLogicImageTool.java", "diffHunk": "@@ -55,7 +59,21 @@ public boolean updateImage() {\n     } \n \n     try {\n+      // check if the WIT binary exists, throws FileNotFoundException if the file does not exist", "originalCommit": "04301515cb86b18975f062fc4fbced6f5621f3c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxMzczOQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403713739", "bodyText": "Although we have java code doing the download and unzip for now, the plan is to use a script to download all installers upfront before the Java test starts. We'll probably need this check then.  I could remove this check now,  and add it back when/if we get rid of the java Installer code.", "author": "doxiao", "createdAt": "2020-04-05T15:02:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNzYwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc4MjQ2Mg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403782462", "bodyText": "removed the check", "author": "doxiao", "createdAt": "2020-04-06T00:45:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNzYwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNzczMg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403407732", "bodyText": "much better to build the string first, then return it - easier to debug", "author": "markxnelson", "createdAt": "2020-04-04T01:50:31Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/WebLogicImageTool.java", "diffHunk": "@@ -124,4 +142,35 @@ private String buildList(List<String> list) {\n     }\n     return strList;\n   }\n+  \n+  /**\n+   * Add WDT installer to the WebLogic Image Tool cache\n+   * @return true if the command succeeds \n+   */\n+  public boolean addInstaller() throws FileNotFoundException {\n+    try {\n+      checkFile(WDT_ZIP_PATH);\n+    } catch (FileNotFoundException fnfe) {\n+      logger.warning(\"Failed to create an image due to Exception: \" + fnfe.getMessage());\n+      throw fnfe;\n+    }\n+    return executeAndVerify(", "originalCommit": "04301515cb86b18975f062fc4fbced6f5621f3c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc4MjUzNw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403782537", "bodyText": "Done", "author": "doxiao", "createdAt": "2020-04-06T00:45:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNzczMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNzc3Ng==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403407776", "bodyText": "same", "author": "markxnelson", "createdAt": "2020-04-04T01:50:58Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/WebLogicImageTool.java", "diffHunk": "@@ -124,4 +142,35 @@ private String buildList(List<String> list) {\n     }\n     return strList;\n   }\n+  \n+  /**\n+   * Add WDT installer to the WebLogic Image Tool cache\n+   * @return true if the command succeeds \n+   */\n+  public boolean addInstaller() throws FileNotFoundException {\n+    try {\n+      checkFile(WDT_ZIP_PATH);\n+    } catch (FileNotFoundException fnfe) {\n+      logger.warning(\"Failed to create an image due to Exception: \" + fnfe.getMessage());\n+      throw fnfe;\n+    }\n+    return executeAndVerify(\n+        IMAGE_TOOL \n+        + \" cache addInstaller \"\n+        + \" --type wdt\"\n+        + \" --version \" + params.wdtVersion()\n+        + \" --path \" + WDT_ZIP_PATH);\n+  }\n+  \n+  /**\n+   * Delete the WDT installer cache entry from the WebLogic Image Tool\n+   * @return true if the command succeeds\n+   */\n+  public boolean deleteEntry() {\n+    return executeAndVerify(", "originalCommit": "04301515cb86b18975f062fc4fbced6f5621f3c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc4MjU0OQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403782549", "bodyText": "done", "author": "doxiao", "createdAt": "2020-04-06T00:45:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNzc3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNzgyMA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403407820", "bodyText": "maybe call this doesDockerImageExist so it is clearer what it does", "author": "markxnelson", "createdAt": "2020-04-04T01:51:28Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/assertions/TestAssertions.java", "diffHunk": "@@ -112,5 +113,15 @@ public static boolean adminT3ChannelAccessible(String domainUID, String namespac\n   public static boolean adminNodePortAccessible(String domainUID, String namespace) {\n     return Domain.adminNodePortAccessible(domainUID, namespace);\n   }\n+  \n+  /**\n+   * Check if a Docker image exists.\n+   * @param imageName - the name of the image to be checked\n+   * @param imageTag  - the tag of the image to be checked\n+   * @return true if the image does exist, false otherwise\n+   */\n+  public static boolean imageExists(String imageName, String imageTag) {", "originalCommit": "04301515cb86b18975f062fc4fbced6f5621f3c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc4MjU2OA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403782568", "bodyText": "changed the method name.", "author": "doxiao", "createdAt": "2020-04-06T00:46:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNzgyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNzkxOA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403407918", "bodyText": "imageTag is a variable right? not a string literal?", "author": "markxnelson", "createdAt": "2020-04-04T01:52:22Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/assertions/impl/WITAssertion.java", "diffHunk": "@@ -0,0 +1,47 @@\n+// Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+package oracle.weblogic.kubernetes.assertions.impl;\n+\n+import oracle.weblogic.kubernetes.utils.ExecCommand;\n+import oracle.weblogic.kubernetes.utils.ExecResult;\n+\n+import static oracle.weblogic.kubernetes.extensions.LoggedTest.logger;\n+\n+/**\n+ * Assertions for the results of WebLogic Image Tool operations\n+ */\n+\n+public class WITAssertion {\n+\n+  /**\n+   * Check if a Docker image exists.\n+   * @param imageName - the name of the image to be checked\n+   * @param imageTag  - the tag of the image to be checked\n+   * @return true if the image does exist, false otherwise\n+   */\n+  public static boolean imageExists(String imageName, String imageTag) {\n+    logger.info(\"Checking if image \" + imageName + \":\" + imageTag + \" exists.\");\n+    // verify the docker image is created\n+    try {\n+      ExecResult result = ExecCommand.exec(\n+          \"docker images | grep \" \n+          + imageName\n+          + \" | grep imageTag \"", "originalCommit": "04301515cb86b18975f062fc4fbced6f5621f3c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwODAwNg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403408006", "bodyText": "why not grep for imageName + \":\" + imageTag", "author": "markxnelson", "createdAt": "2020-04-04T01:52:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNzkxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwODE5MQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403408191", "bodyText": "or even better:\ndocker images -q imageName:imageTag which will return a single line with the image hash tag if it exists - no nothing if the image does not exist", "author": "markxnelson", "createdAt": "2020-04-04T01:54:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNzkxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc4MjU5OA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403782598", "bodyText": "changed the code to use docker images -q imageName:imageTag.", "author": "doxiao", "createdAt": "2020-04-06T00:46:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNzkxOA=="}], "type": "inlineReview"}, {"oid": "b01ad868593aeee9e4fbb79e190657d5dd392fc7", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/b01ad868593aeee9e4fbb79e190657d5dd392fc7", "message": "Address review comments\n\nSigned-off-by: doxiao <dongbo.xiao@oracle.com>", "committedDate": "2020-04-05T14:51:58Z", "type": "commit"}, {"oid": "fc13629589ff22e47b22e45cb2a15a5f5de8d146", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/fc13629589ff22e47b22e45cb2a15a5f5de8d146", "message": "Get rid of inheritance - move command methods to Command action/params and FileUtils\n\nSigned-off-by: doxiao <dongbo.xiao@oracle.com>", "committedDate": "2020-04-06T00:19:57Z", "type": "commit"}, {"oid": "5592e63fbd6732ee578d6a1e6d852d48e35fa1e7", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/5592e63fbd6732ee578d6a1e6d852d48e35fa1e7", "message": "Minor java doc change\n\nSigned-off-by: doxiao <dongbo.xiao@oracle.com>", "committedDate": "2020-04-06T00:29:41Z", "type": "commit"}, {"oid": "8988531dc5a40cf58c8199d99f465dc1bfb2a1d8", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/8988531dc5a40cf58c8199d99f465dc1bfb2a1d8", "message": "Merge remote-tracking branch 'origin/mii-new-integration-tests' into wit-action-test", "committedDate": "2020-04-06T00:31:29Z", "type": "commit"}, {"oid": "5e716caa8e06a35ecde2d28b8c52a55da409c6e3", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/5e716caa8e06a35ecde2d28b8c52a55da409c6e3", "message": "Remove unused code\n\nSigned-off-by: doxiao <dongbo.xiao@oracle.com>", "committedDate": "2020-04-06T00:35:41Z", "type": "commit"}, {"oid": "6935b796b05337912ec05e3500bbe5a81320ee06", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/6935b796b05337912ec05e3500bbe5a81320ee06", "message": "Minor style changes\n\nSigned-off-by: doxiao <dongbo.xiao@oracle.com>", "committedDate": "2020-04-06T15:27:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI1MTY2Ng==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r404251666", "bodyText": "I am okay to leave this here for now, but I think it would be easier to manage these versions from a property in the maven pom.xml.  Like  release-1.8.3  in the pom.xml for this test module.", "author": "ddsharpe", "createdAt": "2020-04-06T17:07:39Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/ActionConstants.java", "diffHunk": "@@ -0,0 +1,49 @@\n+// Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+package oracle.weblogic.kubernetes.actions;\n+\n+public interface ActionConstants {\n+\n+  // Work directory for the integration test suite\n+  public static final String WORK_DIR \n+      = System.getProperty(\"java.io.tmpdir\") + \"/it-results\";\n+  // Directory for resources\n+  public static final String RESOURCE_DIR \n+      = System.getProperty(\"user.dir\") + \"/src/test/resources\"; \n+  // Directory for all WDT models\n+  public static final String MODEL_DIR = RESOURCE_DIR + \"/wdt-models\"; \n+  // Directory for download items\n+  public static final String DOWNLOAD_DIR = WORK_DIR + \"/download\";\n+  \n+  // ------------ WebLogicImageTool action constants -------------\n+  public static final String WLS = \"WLS\";\n+  public static final String JRF = \"JRF\";\n+  public static final String RJRF = \"RestrictedJRF\";\n+  public static final String WLS_BASE_IMAGE_NAME \n+      = \"container-registry.oracle.com/middleware/weblogic\";\n+  public static final String JRF_BASE_IMAGE_NAME \n+      = \"container-registry.oracle.com/middleware/fmw-infrastructure\";\n+  public static final String WLS_BASE_IMAGE_TAG = \"12.2.1.4\";\n+\n+  public static final String DEFAULT_MODEL_IMAGE_NAME = \"test-mii-image\";\n+  public static final String DEFAULT_MODEL_IMAGE_TAG  = \"v1\";\n+  \n+  // ------------ WebLogic Image Tool constants----------------------------\n+  public static final String WIT = \"WIT\";\n+  public static final String WDT = \"WDT\";\n+\n+  public static final String WIT_DOWNLOAD_URL \n+      = \"https://github.com/oracle/weblogic-image-tool\";\n+  public static final String WIT_VERSION    = \"release-1.8.3\";", "originalCommit": "6935b796b05337912ec05e3500bbe5a81320ee06", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ0MzcxMA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r404443710", "bodyText": "changed the code to get the version from pom.xml.", "author": "doxiao", "createdAt": "2020-04-06T23:14:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI1MTY2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI1MTg2Mw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r404251863", "bodyText": "same comment as wit version (above)", "author": "ddsharpe", "createdAt": "2020-04-06T17:07:56Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/ActionConstants.java", "diffHunk": "@@ -0,0 +1,49 @@\n+// Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+package oracle.weblogic.kubernetes.actions;\n+\n+public interface ActionConstants {\n+\n+  // Work directory for the integration test suite\n+  public static final String WORK_DIR \n+      = System.getProperty(\"java.io.tmpdir\") + \"/it-results\";\n+  // Directory for resources\n+  public static final String RESOURCE_DIR \n+      = System.getProperty(\"user.dir\") + \"/src/test/resources\"; \n+  // Directory for all WDT models\n+  public static final String MODEL_DIR = RESOURCE_DIR + \"/wdt-models\"; \n+  // Directory for download items\n+  public static final String DOWNLOAD_DIR = WORK_DIR + \"/download\";\n+  \n+  // ------------ WebLogicImageTool action constants -------------\n+  public static final String WLS = \"WLS\";\n+  public static final String JRF = \"JRF\";\n+  public static final String RJRF = \"RestrictedJRF\";\n+  public static final String WLS_BASE_IMAGE_NAME \n+      = \"container-registry.oracle.com/middleware/weblogic\";\n+  public static final String JRF_BASE_IMAGE_NAME \n+      = \"container-registry.oracle.com/middleware/fmw-infrastructure\";\n+  public static final String WLS_BASE_IMAGE_TAG = \"12.2.1.4\";\n+\n+  public static final String DEFAULT_MODEL_IMAGE_NAME = \"test-mii-image\";\n+  public static final String DEFAULT_MODEL_IMAGE_TAG  = \"v1\";\n+  \n+  // ------------ WebLogic Image Tool constants----------------------------\n+  public static final String WIT = \"WIT\";\n+  public static final String WDT = \"WDT\";\n+\n+  public static final String WIT_DOWNLOAD_URL \n+      = \"https://github.com/oracle/weblogic-image-tool\";\n+  public static final String WIT_VERSION    = \"release-1.8.3\";\n+  public static final String WIT_FILE_NAME  = \"imagetool.zip\";\n+\n+  public static final String WDT_DOWNLOAD_URL \n+      = \"https://github.com/oracle/weblogic-deploy-tooling\";\n+  public static final String WDT_VERSION    = \"weblogic-deploy-tooling-1.7.2\";", "originalCommit": "6935b796b05337912ec05e3500bbe5a81320ee06", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ0Mzc1OQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r404443759", "bodyText": "done", "author": "doxiao", "createdAt": "2020-04-06T23:14:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI1MTg2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI3MTQzOA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r404271438", "bodyText": "Can you please remove commented out imports?", "author": "rjeberhard", "createdAt": "2020-04-06T17:39:22Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/ActionImplCommon.java", "diffHunk": "@@ -4,9 +4,8 @@\n package oracle.weblogic.kubernetes.actions.impl;\n \n // import java.io.BufferedReader;\n-\n-import java.io.IOException;\n // import java.io.InputStreamReader;", "originalCommit": "6935b796b05337912ec05e3500bbe5a81320ee06", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI4NDA4NQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r404284085", "bodyText": "The commented out imports are supposed to go with the commented out ProcessBuilder code below. I'll remove them together.", "author": "doxiao", "createdAt": "2020-04-06T18:00:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI3MTQzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI4NjQzOA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r404286438", "bodyText": "Note that this whole class will be removed once other parts of the code sync up with this PR.  The methods here have been moved into Command action.", "author": "doxiao", "createdAt": "2020-04-06T18:04:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI3MTQzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMzMzMwMg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r404333302", "bodyText": "done", "author": "doxiao", "createdAt": "2020-04-06T19:25:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI3MTQzOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI3MjYyMA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r404272620", "bodyText": "Fluent style would have this method just be named params", "author": "rjeberhard", "createdAt": "2020-04-06T17:41:24Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/Installer.java", "diffHunk": "@@ -5,24 +5,42 @@\n \n import java.io.File;\n \n+import static oracle.weblogic.kubernetes.actions.ActionConstants.DOWNLOAD_DIR;\n+import static oracle.weblogic.kubernetes.actions.ActionConstants.IMAGE_TOOL;\n+import static oracle.weblogic.kubernetes.actions.ActionConstants.WORK_DIR;\n+import static oracle.weblogic.kubernetes.actions.impl.primitive.Command.defaultCommandParams;\n import static oracle.weblogic.kubernetes.extensions.LoggedTest.logger;\n+import static oracle.weblogic.kubernetes.utils.FileUtils.checkDirectory;\n+import static oracle.weblogic.kubernetes.utils.FileUtils.doesFileExist;\n+\n \n /**\n  *  Implementation of actions that download/install tools for the uses to use.\n  *  NOTE: This class is a temporary solution, and may go away once we eventually\n  *  install everything before the Java test starts to run.\n  */\n \n-public class Installer extends InstallWITCommon {\n-  // temporary dir, will fix this once we decide on the\n-  private static final String downloadDir = WORK_DIR + \"/download\";\n+public class Installer {\n+\n   private InstallParams params;\n+  \n+  /**\n+   * Set up the installer with default values\n+   * @return the installer instance \n+   */\n+  public static InstallParams defaultInstallParams() {\n+    return new InstallParams().defaults();\n+  }\n \n   /**\n    * Set up the installer with given parameters\n    * @return the installer instance \n    */\n-  public Installer with(InstallParams params) {\n+  public static Installer withParams(InstallParams params) {\n+    return new Installer().with(params);\n+  }\n+  \n+  private Installer with(InstallParams params) {", "originalCommit": "6935b796b05337912ec05e3500bbe5a81320ee06", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI5MjczOQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r404292739", "bodyText": "I named it with() to indicate that this returns an Installer instance with some parameters. Name params() might give readers an impression that this returns a params instance. But I am new to fluent style and my understanding might be wrong.", "author": "doxiao", "createdAt": "2020-04-06T18:14:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI3MjYyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM3NDMwOQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r404374309", "bodyText": "I think you are right. Changed to params()", "author": "doxiao", "createdAt": "2020-04-06T20:40:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI3MjYyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI3MzI2MA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r404273260", "bodyText": "Why warnings?  These should either be asserts that fail the test or they aren't important.", "author": "rjeberhard", "createdAt": "2020-04-06T17:42:30Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/WebLogicImageTool.java", "diffHunk": "@@ -55,30 +65,45 @@ public boolean updateImage() {\n     } \n \n     try {\n-      checkFile(IMAGE_TOOL);\n+      // delete the old cache entry for the WDT installer\n+      if (!deleteEntry()) {\n+        logger.warning(\"Failed to delete cache entry in WebLogic Image Tool\");", "originalCommit": "6935b796b05337912ec05e3500bbe5a81320ee06", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI5ODg4Ng==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r404298886", "bodyText": "This is part of test infra, not a test. The pattern we have been following is for the infra part to return success or not. The test code, such as ItWITValication, will then fail the test with assertions. But my understanding might be wrong here.", "author": "doxiao", "createdAt": "2020-04-06T18:25:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI3MzI2MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI3Mzc5Mg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r404273792", "bodyText": "Same.  If the file isn't found then this should fail the test.  I don't want to have to search the test logs for warnings to figure out why something later failed.", "author": "rjeberhard", "createdAt": "2020-04-06T17:43:21Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/WebLogicImageTool.java", "diffHunk": "@@ -124,4 +149,46 @@ private String buildList(List<String> list) {\n     }\n     return strList;\n   }\n+  \n+  /**\n+   * Add WDT installer to the WebLogic Image Tool cache\n+   * @return true if the command succeeds \n+   */\n+  public boolean addInstaller() throws FileNotFoundException {\n+    try {\n+      checkFile(WDT_ZIP_PATH);\n+    } catch (FileNotFoundException fnfe) {\n+      logger.warning(\"Failed to create an image due to Exception: \" + fnfe.getMessage());", "originalCommit": "6935b796b05337912ec05e3500bbe5a81320ee06", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI3NDA2NA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r404274064", "bodyText": "Don't need dashes in javadoc.", "author": "rjeberhard", "createdAt": "2020-04-06T17:43:46Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/assertions/TestAssertions.java", "diffHunk": "@@ -152,5 +153,15 @@ public static boolean adminT3ChannelAccessible(String domainUID, String namespac\n   public static boolean adminNodePortAccessible(String domainUID, String namespace) {\n     return Domain.adminNodePortAccessible(domainUID, namespace);\n   }\n+  \n+  /**\n+   * Check if a Docker image exists.\n+   * @param imageName - the name of the image to be checked", "originalCommit": "6935b796b05337912ec05e3500bbe5a81320ee06", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMwMTM4Nw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r404301387", "bodyText": "fixed", "author": "doxiao", "createdAt": "2020-04-06T18:29:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI3NDA2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI3NDY4NA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r404274684", "bodyText": "Don't need \"assert\" in name.  This can just be doesDockerImageExist()", "author": "rjeberhard", "createdAt": "2020-04-06T17:44:41Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/assertions/TestAssertions.java", "diffHunk": "@@ -152,5 +153,15 @@ public static boolean adminT3ChannelAccessible(String domainUID, String namespac\n   public static boolean adminNodePortAccessible(String domainUID, String namespace) {\n     return Domain.adminNodePortAccessible(domainUID, namespace);\n   }\n+  \n+  /**\n+   * Check if a Docker image exists.\n+   * @param imageName - the name of the image to be checked\n+   * @param imageTag  - the tag of the image to be checked\n+   * @return true if the image does exist, false otherwise\n+   */\n+  public static boolean assertDockerImageExists(String imageName, String imageTag) {", "originalCommit": "6935b796b05337912ec05e3500bbe5a81320ee06", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMwMTQ0NQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r404301445", "bodyText": "fixed", "author": "doxiao", "createdAt": "2020-04-06T18:29:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI3NDY4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI3NTU0Nw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r404275547", "bodyText": "This loses the stack trace. @ddsharpe, do we have a pattern for this?  That should at least include using the variant of warning() that takes the exception and not just the message.", "author": "rjeberhard", "createdAt": "2020-04-06T17:46:05Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/assertions/impl/WITAssertion.java", "diffHunk": "@@ -0,0 +1,48 @@\n+// Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+package oracle.weblogic.kubernetes.assertions.impl;\n+\n+import oracle.weblogic.kubernetes.utils.ExecCommand;\n+import oracle.weblogic.kubernetes.utils.ExecResult;\n+\n+import static oracle.weblogic.kubernetes.extensions.LoggedTest.logger;\n+\n+/**\n+ * Assertions for the results of WebLogic Image Tool operations\n+ */\n+\n+public class WITAssertion {\n+\n+  /**\n+   * Check if a Docker image exists.\n+   * @param imageName - the name of the image to be checked\n+   * @param imageTag  - the tag of the image to be checked\n+   * @return true if the image does exist, false otherwise\n+   */\n+  public static boolean doesImageExist(String imageName, String imageTag) {\n+    logger.info(\"Checking if image \" + imageName + \":\" + imageTag + \" exists.\");\n+    // verify the docker image is created\n+    try {\n+      ExecResult result = ExecCommand.exec(\n+          \"docker images -q \" \n+          + imageName\n+          + \":\"\n+          + imageTag\n+          + \"| wc -l\");\n+          \n+      if (Integer.parseInt(result.stdout().trim()) != 1) {\n+        return false;\n+      }\n+    } catch (Exception e) {\n+      logger.warning(\"Failed to check if Docker image \" \n+          + imageName \n+          + \":\" \n+          + imageTag\n+          + \"exists due to Exception: \" \n+          + e.getMessage());", "originalCommit": "6935b796b05337912ec05e3500bbe5a81320ee06", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQwNzY5NQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r404407695", "bodyText": "converted to an assertion.", "author": "doxiao", "createdAt": "2020-04-06T21:45:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI3NTU0Nw=="}], "type": "inlineReview"}, {"oid": "1c2f98dd3e347d327c152e090dec920992715491", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/1c2f98dd3e347d327c152e090dec920992715491", "message": "Remove imports and code that have been commented out\n\nSigned-off-by: doxiao <dongbo.xiao@oracle.com>", "committedDate": "2020-04-06T18:09:01Z", "type": "commit"}, {"oid": "51e39d99542da4cdbd52433ded619f659899abd9", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/51e39d99542da4cdbd52433ded619f659899abd9", "message": "Rename assertion method name and fix javadoc\n\nSigned-off-by: doxiao <dongbo.xiao@oracle.com>", "committedDate": "2020-04-06T18:27:50Z", "type": "commit"}, {"oid": "f58a3c93a7e779796cd82888a033763fb5293939", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/f58a3c93a7e779796cd82888a033763fb5293939", "message": "Address review comment\n\nSigned-off-by: doxiao <dongbo.xiao@oracle.com>", "committedDate": "2020-04-06T20:30:00Z", "type": "commit"}, {"oid": "ddcb723eda98fb9124a41ecb18cfa2ae83f07385", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/ddcb723eda98fb9124a41ecb18cfa2ae83f07385", "message": "Change with() to params()\n\nSigned-off-by: doxiao <dongbo.xiao@oracle.com>", "committedDate": "2020-04-06T20:39:44Z", "type": "commit"}, {"oid": "2e384c04b635ed7ac56347d4dabf33e9a06986c1", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/2e384c04b635ed7ac56347d4dabf33e9a06986c1", "message": "Add assertions\n\nSigned-off-by: doxiao <dongbo.xiao@oracle.com>", "committedDate": "2020-04-06T21:34:25Z", "type": "commit"}, {"oid": "6bbc7d9510a89378f94da464367aeedc8fd560ab", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/6bbc7d9510a89378f94da464367aeedc8fd560ab", "message": "Merge remote-tracking branch 'origin/mii-new-integration-tests' into wit-action-test\n\nSigned-off-by: doxiao <dongbo.xiao@oracle.com>\n\nConflicts:\n\tnew-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/TestActions.java", "committedDate": "2020-04-06T21:42:04Z", "type": "commit"}, {"oid": "32b7b810a806f02a05b3a49247d618396e5c648a", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/32b7b810a806f02a05b3a49247d618396e5c648a", "message": "Avoid type checks\n\nSigned-off-by: doxiao <dongbo.xiao@oracle.com>", "committedDate": "2020-04-06T23:05:03Z", "type": "commit"}, {"oid": "51fc7c807b7c2999490d107d854525e35e705a7b", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/51fc7c807b7c2999490d107d854525e35e705a7b", "message": "move WIT/WDT versions to pom.xml\n\nSigned-off-by: doxiao <dongbo.xiao@oracle.com>", "committedDate": "2020-04-06T23:12:43Z", "type": "commit"}, {"oid": "5c730b5a4e452c6ac2543937636c49453329a72a", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/5c730b5a4e452c6ac2543937636c49453329a72a", "message": "Remove a class that is no longer needed\n\nSigned-off-by: doxiao <dongbo.xiao@oracle.com>", "committedDate": "2020-04-07T13:24:10Z", "type": "commit"}, {"oid": "671327934f2efd6a4263c08313db734bbdb3eadb", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/671327934f2efd6a4263c08313db734bbdb3eadb", "message": "Minor cleanup\n\nSigned-off-by: doxiao <dongbo.xiao@oracle.com>", "committedDate": "2020-04-07T13:38:20Z", "type": "commit"}]}