{"pr_number": 1877, "pr_title": "Created infra for WLS Logging Exporter and converted related tests to use JUnit5", "pr_createdAt": "2020-08-17T22:00:24Z", "pr_url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877", "timeline": [{"oid": "87870cfc401111700945c29b4846f45dc6e99aa6", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/87870cfc401111700945c29b4846f45dc6e99aa6", "message": "Created infra for WLS Logging Exporter and converted related tests to use JUnit5 jenkins-ignore", "committedDate": "2020-08-17T17:30:16Z", "type": "commit"}, {"oid": "2dfb3bbc5b4ea31d31efa6929f2140ed5f60d583", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/2dfb3bbc5b4ea31d31efa6929f2140ed5f60d583", "message": "upgraded ELK Stack back to v7 and fixed a filter issue in RESTful API to query Elasticsearch repos jenkins-ignore", "committedDate": "2020-08-19T00:10:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgwODU3Ng==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#discussion_r474808576", "bodyText": "Period is missing in all sentences.", "author": "anpanigr", "createdAt": "2020-08-21T16:41:12Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItElasticLogging.java", "diffHunk": "@@ -74,24 +81,34 @@\n  * 2. Install and start Operator with ELK Stack enabled\n  * 3. Verify that ELK Stack is ready to use by checking the index status of\n  *    Kibana and Logstash created in the Operator pod successfully\n- * 4. Create and start the WebLogic domain\n- * 5. Verify that Elasticsearch collects data from WebLogic logs and\n- *    stores them in its repository correctly.\n+ * 4. Install WebLogic logging exporter in all WebLogic server pods", "originalCommit": "2dfb3bbc5b4ea31d31efa6929f2140ed5f60d583", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgwOTUxOQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#discussion_r474809519", "bodyText": "Step 4 says install Logging Exporters in all server pod, but we start the domain in Step 5. Without starting domain how we get the  server pod ?", "author": "anpanigr", "createdAt": "2020-08-21T16:43:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgwODU3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE0NjYxNA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#discussion_r475146614", "bodyText": "Installation is built into the image, that's why we install the logging exporter first and then create domain. Let me add more details", "author": "hzhao-github", "createdAt": "2020-08-22T22:57:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgwODU3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE0Njg1OQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#discussion_r475146859", "bodyText": "changed it to\n\n\n\nInstall WebLogic logging exporter in all WebLogic server pods by\n\n\nadding it to MII via --additionalBuildCommands and --additionalBuildFiles.", "author": "hzhao-github", "createdAt": "2020-08-22T23:01:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgwODU3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDkwNjc5NA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#discussion_r474906794", "bodyText": "remove space between param and return", "author": "marinakog", "createdAt": "2020-08-21T19:46:21Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/utils/CommonTestUtils.java", "diffHunk": "@@ -713,11 +713,33 @@ public static LoggingExporterParams installAndVerifyKibana() {\n     return kibanaParams;\n   }\n \n+  /**\n+   * Install WebLogic Logging Exporter.\n+   *\n+   * @param filter the value of weblogicLoggingExporterFilters to be added to WebLogic Logging Exporter YAML file\n+   * @param wlsLoggingExporterYamlFileLoc the directory where WebLogic Logging Exporter YAML file stores\n+   * @param wlsLoggingExporterArchiveLoc the directory where WebLogic Logging Exporter jar files store\n+   *\n+   * @return true if WebLogic Logging Exporter is successfully installed, false otherwise.", "originalCommit": "2dfb3bbc5b4ea31d31efa6929f2140ed5f60d583", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE0NzA1OQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#discussion_r475147059", "bodyText": "removed", "author": "hzhao-github", "createdAt": "2020-08-22T23:04:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDkwNjc5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDkwNzM1MQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#discussion_r474907351", "bodyText": "please remove space between param and return", "author": "marinakog", "createdAt": "2020-08-21T19:47:02Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/LoggingExporter.java", "diffHunk": "@@ -283,6 +299,68 @@ public static boolean uninstallKibana(LoggingExporterParams params) {\n     return testVarMap;\n   }\n \n+  /**\n+   * Install WebLogic Logging Exporter.\n+   *\n+   * @param filter the value of weblogicLoggingExporterFilters to be added to WebLogic Logging Exporter YAML file\n+   * @param wlsLoggingExporterYamlFileLoc the directory where WebLogic Logging Exporter YAML file stores\n+   * @param wlsLoggingExporterArchiveLoc the directory where WebLogic Logging Exporter jar files store\n+   *\n+   * @return true if WebLogic Logging Exporter is successfully installed, false otherwise.", "originalCommit": "2dfb3bbc5b4ea31d31efa6929f2140ed5f60d583", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE0NzA5MA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#discussion_r475147090", "bodyText": "removed", "author": "hzhao-github", "createdAt": "2020-08-22T23:05:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDkwNzM1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDkxMzMzMQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#discussion_r474913331", "bodyText": "change the comment hardcoded version", "author": "marinakog", "createdAt": "2020-08-21T19:54:17Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/LoggingExporter.java", "diffHunk": "@@ -283,6 +299,68 @@ public static boolean uninstallKibana(LoggingExporterParams params) {\n     return testVarMap;\n   }\n \n+  /**\n+   * Install WebLogic Logging Exporter.\n+   *\n+   * @param filter the value of weblogicLoggingExporterFilters to be added to WebLogic Logging Exporter YAML file\n+   * @param wlsLoggingExporterYamlFileLoc the directory where WebLogic Logging Exporter YAML file stores\n+   * @param wlsLoggingExporterArchiveLoc the directory where WebLogic Logging Exporter jar files store\n+   *\n+   * @return true if WebLogic Logging Exporter is successfully installed, false otherwise.\n+   */\n+  public static boolean installWlsLoggingExporter(String filter,\n+                                                  String wlsLoggingExporterYamlFileLoc,\n+                                                  String wlsLoggingExporterArchiveLoc) {\n+\n+    try {\n+      // Create a dir to hold downloaded WebLogic Logging Exporter archive files\n+      FileUtils.cleanupDirectory(wlsLoggingExporterArchiveLoc);\n+      FileUtils.checkDirectory(wlsLoggingExporterArchiveLoc);\n+    } catch (IOException ioe) {\n+      logger.severe(\"Failed to cleanup and re-create the download directory {0}. Error is {1} \",\n+          wlsLoggingExporterArchiveLoc, ioe.getMessage());\n+    }\n+\n+    // Copy WebLogic Logging Exporter files to WORK_DIR\n+    String[] loggingExporterFiles =\n+        {WLS_LOGGING_EXPORTER_YAML_FILE_NAME, COPY_WLS_LOGGING_EXPORTER_FILE_NAME};\n+\n+    for (String loggingFile : loggingExporterFiles) {\n+      Path srcPath = Paths.get(wlsLoggingExporterYamlFileLoc, loggingFile);\n+      Path destPath = Paths.get(WORK_DIR, loggingFile);\n+      assertDoesNotThrow(() -> FileUtils.copy(srcPath, destPath),\n+          String.format(\"Failed to copy %s to %s\", srcPath, destPath));\n+      logger.severe(\"Copied {0} to {1}}\", srcPath, destPath);\n+    }\n+\n+    // Add filter to weblogicLoggingExporterFilters in WebLogic Logging Exporter YAML file\n+    assertDoesNotThrow(() -> addFilterToElkFile(filter),\n+        \"Failed to add WebLogic Logging Exporter filter\");\n+\n+    // Download WebLogic Logging Exporter jar file, weblogic-logging-exporter-1.0.0.jar\n+    ExecResult result = assertDoesNotThrow(", "originalCommit": "2dfb3bbc5b4ea31d31efa6929f2140ed5f60d583", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE0NzUyMw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#discussion_r475147523", "bodyText": "changed", "author": "hzhao-github", "createdAt": "2020-08-22T23:11:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDkxMzMzMQ=="}], "type": "inlineReview"}, {"oid": "32956af3a600946567373a5d08c02c49d8d0e378", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/32956af3a600946567373a5d08c02c49d8d0e378", "message": "Changes based on comments jenkins-ignore", "committedDate": "2020-08-23T01:19:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc4ODMwNQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#discussion_r475788305", "bodyText": "missing period.", "author": "anpanigr", "createdAt": "2020-08-24T17:45:29Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItElasticLogging.java", "diffHunk": "@@ -70,28 +78,39 @@\n \n /**\n  * To test ELK Stack used in Operator env, this Elasticsearch test does\n- * 1. Install Kibana/Elasticsearch \n- * 2. Install and start Operator with ELK Stack enabled\n+ * 1. Install Kibana/Elasticsearch.\n+ * 2. Install and start Operator with ELK Stack enabled.\n  * 3. Verify that ELK Stack is ready to use by checking the index status of\n  *    Kibana and Logstash created in the Operator pod successfully", "originalCommit": "32956af3a600946567373a5d08c02c49d8d0e378", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTgxMjQ1OQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#discussion_r475812459", "bodyText": "added", "author": "hzhao-github", "createdAt": "2020-08-24T18:27:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc4ODMwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc4OTgyOQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#discussion_r475789829", "bodyText": "adding it to MII  --> should it add WebLogic Exporter binary to the image builder process so that it will be available  in all domain image", "author": "anpanigr", "createdAt": "2020-08-24T17:48:17Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItElasticLogging.java", "diffHunk": "@@ -70,28 +78,39 @@\n \n /**\n  * To test ELK Stack used in Operator env, this Elasticsearch test does\n- * 1. Install Kibana/Elasticsearch \n- * 2. Install and start Operator with ELK Stack enabled\n+ * 1. Install Kibana/Elasticsearch.\n+ * 2. Install and start Operator with ELK Stack enabled.\n  * 3. Verify that ELK Stack is ready to use by checking the index status of\n  *    Kibana and Logstash created in the Operator pod successfully\n- * 4. Create and start the WebLogic domain\n- * 5. Verify that Elasticsearch collects data from WebLogic logs and\n- *    stores them in its repository correctly.\n+ * 4. Install WebLogic logging exporter in all WebLogic server pods by\n+ *    adding it to MII via --additionalBuildCommands and --additionalBuildFiles.", "originalCommit": "32956af3a600946567373a5d08c02c49d8d0e378", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTgxMjM2Ng==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#discussion_r475812366", "bodyText": "changed", "author": "hzhao-github", "createdAt": "2020-08-24T18:27:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc4OTgyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc5MDk3MA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#discussion_r475790970", "bodyText": "empty space before period.", "author": "anpanigr", "createdAt": "2020-08-24T17:50:20Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItElasticLogging.java", "diffHunk": "@@ -216,14 +249,84 @@ public void testOperatorLogSearch() {\n     String regex = \".*took\\\":(\\\\d+),.*hits\\\":\\\\{(.+)\\\\}\";\n     String queryCriteria = \"/_search?q=type:weblogic-operator\";\n \n-    verifySearchResults(queryCriteria, regex, LOGSTASH_INDEX_KEY, false);\n+    verifyCountsHitsInSearchResults(queryCriteria, regex, LOGSTASH_INDEX_KEY, false);\n \n     logger.info(\"Query Operator log info succeeded\");\n   }\n \n-  private static void createAndVerifyDomain() {\n-    // get the pre-built image created by IntegrationTestWatcher\n-    String miiImage = MII_BASIC_IMAGE_NAME + \":\" + MII_BASIC_IMAGE_TAG;\n+  /**\n+   * Use Elasticsearch Search APIs to query WebLogic log info.\n+   * Verify that WebLogic server status of \"RUNNING\" is found.\n+   */\n+  @Disabled(\"Disabled the test due to JIRA OWLS-83899\")\n+  @Test\n+  @DisplayName(\"Use Elasticsearch Search APIs to query Operator log info and verify\")\n+  public void testWebLogicLogSearch() {\n+    // Verify that the admin status of \"RUNNING\" is found in query return from Elasticsearch repository\n+    verifyServerRunningInSearchResults(adminServerPodName);\n+\n+    // Verify that the ms status of \"RUNNING\" is found in query return from Elasticsearch repos\n+    verifyServerRunningInSearchResults(managedServerPodPrefix + \"1\");\n+\n+    logger.info(\"Query Operator log for WebLogic server status info succeeded\");\n+  }\n+\n+  /**\n+   * Use Elasticsearch Search APIs to query WebLogic log info pushed to Elasticsearch repository\n+   * by WebLogic logging exporter . Verify that log hits for WebLogic servers are not empty", "originalCommit": "32956af3a600946567373a5d08c02c49d8d0e378", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc5MjAyMw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#discussion_r475792023", "bodyText": "Verify that log hits --> Verify the log occurrence", "author": "anpanigr", "createdAt": "2020-08-24T17:52:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc5MDk3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTgxMzQ5MA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#discussion_r475813490", "bodyText": "changed", "author": "hzhao-github", "createdAt": "2020-08-24T18:29:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc5MDk3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc5ODMxMw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#discussion_r475798313", "bodyText": "Can u re-phrase the description\nInstall Elasticsearch, Kibana and Operator.\nInstall WebLogic logging exporter in all WebLogic server pods to collect WebLogic logs.\n[create a one cluster domain.  does not make sense  ]", "author": "anpanigr", "createdAt": "2020-08-24T18:03:16Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItElasticLogging.java", "diffHunk": "@@ -102,8 +121,14 @@\n   private static LoggingExporterParams kibanaParams = null;\n   private static LoggingFacade logger = null;\n \n+  private static String k8sExecCmdPrefix;\n+  private static Map<String, String> testVarMap;\n+  private static final int maxIterationsPod = 10;\n+\n   /**\n-   * Install Elasticsearch, Kibana and Operator and verify, create a one cluster domain.\n+   * Install Elasticsearch, Kibana and Operator and verify,", "originalCommit": "32956af3a600946567373a5d08c02c49d8d0e378", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d0e3385cbfe41008b3e885cc2a19606a54541d9d", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/d0e3385cbfe41008b3e885cc2a19606a54541d9d", "message": "Changes based on more comments jenkins-ignore", "committedDate": "2020-08-24T19:24:10Z", "type": "commit"}, {"oid": "0a2e152a8c127a97e96999b7cdfa782e6cd7a557", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/0a2e152a8c127a97e96999b7cdfa782e6cd7a557", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into junit5-wlslogging-infra-tests", "committedDate": "2020-08-24T21:22:12Z", "type": "commit"}, {"oid": "5386d7435072daf20837bb329809028da5018639", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/5386d7435072daf20837bb329809028da5018639", "message": "Changes based on m comments jenkins-ignore", "committedDate": "2020-08-24T21:37:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU3MTc3NQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#discussion_r477571775", "bodyText": "variable name maxIterationsPod is not appropriate here, also use awaitility api like we do in other cases ...", "author": "vanajamukkara", "createdAt": "2020-08-26T20:32:36Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/LoggingExporter.java", "diffHunk": "@@ -468,4 +562,69 @@ private static String execLoggingExpStatusCheck(String namespace, String labelSe\n \n     return statusLine.stdout();\n   }\n+\n+  private static ExecResult downloadWlsLoggingExporterJarsAndVerify(String jarReposUrl,\n+                                                                    String jarFileName,\n+                                                                    String wlsLoggingExporterArchiveLoc)\n+        throws IOException, InterruptedException {\n+\n+    ExecResult result = null;\n+    File wlsLoggingExpFile =\n+        new File(wlsLoggingExporterArchiveLoc + \"/\" + jarFileName);\n+    int i = 0;\n+\n+    StringBuffer getJars = new StringBuffer();\n+    getJars\n+        .append(\" wget -P \")\n+        .append(wlsLoggingExporterArchiveLoc)\n+        .append(\" --server-response --waitretry=5 --retry-connrefused \")\n+        .append(jarReposUrl)\n+        .append(\"/\")\n+        .append(jarFileName);\n+    logger.info(\"Executing cmd \" + getJars.toString());\n+\n+    // Make sure downloading completed\n+    while (i < maxIterationsPod) {", "originalCommit": "5386d7435072daf20837bb329809028da5018639", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzY0OTE0NQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#discussion_r477649145", "bodyText": "done", "author": "hzhao-github", "createdAt": "2020-08-26T23:07:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU3MTc3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU3NjMyOQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#discussion_r477576329", "bodyText": "leave a blank line before this line for better code readability", "author": "vanajamukkara", "createdAt": "2020-08-26T20:41:01Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItElasticLogging.java", "diffHunk": "@@ -200,30 +235,100 @@ public void testLogLevelSearch() {\n     String regex = \".*count\\\":(\\\\d+),.*failed\\\":(\\\\d+)\";\n     String queryCriteria = \"/_count?q=level:INFO\";\n \n-    verifySearchResults(queryCriteria, regex, LOGSTASH_INDEX_KEY, true);\n+    verifyCountsHitsInSearchResults(queryCriteria, regex, LOGSTASH_INDEX_KEY, true);\n \n     logger.info(\"Query logs of level=INFO succeeded\");\n   }\n \n   /**\n-   * Use Elasticsearch Search APIs to query Operator log info. Verify that log hits for\n-   * type=weblogic-operator are not empty\n+   * Use Elasticsearch Search APIs to query Operator log info. Verify that log occurrence for\n+   * type=weblogic-operator are not empty.\n    */\n   @Test\n   @DisplayName(\"Use Elasticsearch Search APIs to query Operator log info and verify\")\n   public void testOperatorLogSearch() {\n-    // Verify that log hits for Operator are not empty\n+    // Verify that log occurrence for Operator are not empty\n     String regex = \".*took\\\":(\\\\d+),.*hits\\\":\\\\{(.+)\\\\}\";\n     String queryCriteria = \"/_search?q=type:weblogic-operator\";\n \n-    verifySearchResults(queryCriteria, regex, LOGSTASH_INDEX_KEY, false);\n+    verifyCountsHitsInSearchResults(queryCriteria, regex, LOGSTASH_INDEX_KEY, false);\n \n     logger.info(\"Query Operator log info succeeded\");\n   }\n \n-  private static void createAndVerifyDomain() {\n-    // get the pre-built image created by IntegrationTestWatcher\n-    String miiImage = MII_BASIC_IMAGE_NAME + \":\" + MII_BASIC_IMAGE_TAG;\n+  /**\n+   * Use Elasticsearch Search APIs to query WebLogic log info.\n+   * Verify that WebLogic server status of \"RUNNING\" is found.\n+   */\n+  @Disabled(\"Disabled the test due to JIRA OWLS-83899\")\n+  @Test\n+  @DisplayName(\"Use Elasticsearch Search APIs to query Operator log info and verify\")\n+  public void testWebLogicLogSearch() {\n+    // Verify that the admin status of \"RUNNING\" is found in query return from Elasticsearch repository\n+    verifyServerRunningInSearchResults(adminServerPodName);\n+\n+    // Verify that the ms status of \"RUNNING\" is found in query return from Elasticsearch repos\n+    verifyServerRunningInSearchResults(managedServerPodPrefix + \"1\");\n+\n+    logger.info(\"Query Operator log for WebLogic server status info succeeded\");\n+  }\n+\n+  /**\n+   * Use Elasticsearch Search APIs to query WebLogic log info pushed to Elasticsearch repository\n+   * by WebLogic Logging Exporter. Verify that log occurrence for WebLogic servers are not empty.\n+   */\n+  @Test\n+  @DisplayName(\"Use Elasticsearch Search APIs to query WebLogic log info in WLS server pod and verify\")\n+  public void testWlsLoggingExporter() throws Exception {\n+    Map<String, String> wlsMap = verifyLoggingExporterReady(opNamespace, null, WEBLOGIC_INDEX_KEY);\n+    // merge testVarMap and wlsMap\n+    testVarMap.putAll(wlsMap);\n+\n+    // Verify that occurrence of log level = Notice are not empty\n+    String regex = \".*took\\\":(\\\\d+),.*hits\\\":\\\\{(.+)\\\\}\";\n+    String queryCriteria = \"/_search?q=level:Notice\";\n+    verifyCountsHitsInSearchResults(queryCriteria, regex, WEBLOGIC_INDEX_KEY, false);\n+    // Verify that occurrence of loggerName = WebLogicServer are not empty", "originalCommit": "5386d7435072daf20837bb329809028da5018639", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzY0ODc3Ng==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#discussion_r477648776", "bodyText": "done", "author": "hzhao-github", "createdAt": "2020-08-26T23:07:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU3NjMyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU3NjY4OQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#discussion_r477576689", "bodyText": "same as above", "author": "vanajamukkara", "createdAt": "2020-08-26T20:41:40Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItElasticLogging.java", "diffHunk": "@@ -200,30 +235,100 @@ public void testLogLevelSearch() {\n     String regex = \".*count\\\":(\\\\d+),.*failed\\\":(\\\\d+)\";\n     String queryCriteria = \"/_count?q=level:INFO\";\n \n-    verifySearchResults(queryCriteria, regex, LOGSTASH_INDEX_KEY, true);\n+    verifyCountsHitsInSearchResults(queryCriteria, regex, LOGSTASH_INDEX_KEY, true);\n \n     logger.info(\"Query logs of level=INFO succeeded\");\n   }\n \n   /**\n-   * Use Elasticsearch Search APIs to query Operator log info. Verify that log hits for\n-   * type=weblogic-operator are not empty\n+   * Use Elasticsearch Search APIs to query Operator log info. Verify that log occurrence for\n+   * type=weblogic-operator are not empty.\n    */\n   @Test\n   @DisplayName(\"Use Elasticsearch Search APIs to query Operator log info and verify\")\n   public void testOperatorLogSearch() {\n-    // Verify that log hits for Operator are not empty\n+    // Verify that log occurrence for Operator are not empty\n     String regex = \".*took\\\":(\\\\d+),.*hits\\\":\\\\{(.+)\\\\}\";\n     String queryCriteria = \"/_search?q=type:weblogic-operator\";\n \n-    verifySearchResults(queryCriteria, regex, LOGSTASH_INDEX_KEY, false);\n+    verifyCountsHitsInSearchResults(queryCriteria, regex, LOGSTASH_INDEX_KEY, false);\n \n     logger.info(\"Query Operator log info succeeded\");\n   }\n \n-  private static void createAndVerifyDomain() {\n-    // get the pre-built image created by IntegrationTestWatcher\n-    String miiImage = MII_BASIC_IMAGE_NAME + \":\" + MII_BASIC_IMAGE_TAG;\n+  /**\n+   * Use Elasticsearch Search APIs to query WebLogic log info.\n+   * Verify that WebLogic server status of \"RUNNING\" is found.\n+   */\n+  @Disabled(\"Disabled the test due to JIRA OWLS-83899\")\n+  @Test\n+  @DisplayName(\"Use Elasticsearch Search APIs to query Operator log info and verify\")\n+  public void testWebLogicLogSearch() {\n+    // Verify that the admin status of \"RUNNING\" is found in query return from Elasticsearch repository\n+    verifyServerRunningInSearchResults(adminServerPodName);\n+\n+    // Verify that the ms status of \"RUNNING\" is found in query return from Elasticsearch repos\n+    verifyServerRunningInSearchResults(managedServerPodPrefix + \"1\");\n+\n+    logger.info(\"Query Operator log for WebLogic server status info succeeded\");\n+  }\n+\n+  /**\n+   * Use Elasticsearch Search APIs to query WebLogic log info pushed to Elasticsearch repository\n+   * by WebLogic Logging Exporter. Verify that log occurrence for WebLogic servers are not empty.\n+   */\n+  @Test\n+  @DisplayName(\"Use Elasticsearch Search APIs to query WebLogic log info in WLS server pod and verify\")\n+  public void testWlsLoggingExporter() throws Exception {\n+    Map<String, String> wlsMap = verifyLoggingExporterReady(opNamespace, null, WEBLOGIC_INDEX_KEY);\n+    // merge testVarMap and wlsMap\n+    testVarMap.putAll(wlsMap);\n+\n+    // Verify that occurrence of log level = Notice are not empty\n+    String regex = \".*took\\\":(\\\\d+),.*hits\\\":\\\\{(.+)\\\\}\";\n+    String queryCriteria = \"/_search?q=level:Notice\";\n+    verifyCountsHitsInSearchResults(queryCriteria, regex, WEBLOGIC_INDEX_KEY, false);\n+    // Verify that occurrence of loggerName = WebLogicServer are not empty\n+    queryCriteria = \"/_search?q=loggerName:WebLogicServer\";\n+    verifyCountsHitsInSearchResults(queryCriteria, regex, WEBLOGIC_INDEX_KEY, false);\n+    // Verify that occurrence of _type:doc are not empty", "originalCommit": "5386d7435072daf20837bb329809028da5018639", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzY0ODg5OQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#discussion_r477648899", "bodyText": "done", "author": "hzhao-github", "createdAt": "2020-08-26T23:07:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU3NjY4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU3NjkxNw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#discussion_r477576917", "bodyText": "same as above", "author": "vanajamukkara", "createdAt": "2020-08-26T20:42:03Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItElasticLogging.java", "diffHunk": "@@ -200,30 +235,100 @@ public void testLogLevelSearch() {\n     String regex = \".*count\\\":(\\\\d+),.*failed\\\":(\\\\d+)\";\n     String queryCriteria = \"/_count?q=level:INFO\";\n \n-    verifySearchResults(queryCriteria, regex, LOGSTASH_INDEX_KEY, true);\n+    verifyCountsHitsInSearchResults(queryCriteria, regex, LOGSTASH_INDEX_KEY, true);\n \n     logger.info(\"Query logs of level=INFO succeeded\");\n   }\n \n   /**\n-   * Use Elasticsearch Search APIs to query Operator log info. Verify that log hits for\n-   * type=weblogic-operator are not empty\n+   * Use Elasticsearch Search APIs to query Operator log info. Verify that log occurrence for\n+   * type=weblogic-operator are not empty.\n    */\n   @Test\n   @DisplayName(\"Use Elasticsearch Search APIs to query Operator log info and verify\")\n   public void testOperatorLogSearch() {\n-    // Verify that log hits for Operator are not empty\n+    // Verify that log occurrence for Operator are not empty\n     String regex = \".*took\\\":(\\\\d+),.*hits\\\":\\\\{(.+)\\\\}\";\n     String queryCriteria = \"/_search?q=type:weblogic-operator\";\n \n-    verifySearchResults(queryCriteria, regex, LOGSTASH_INDEX_KEY, false);\n+    verifyCountsHitsInSearchResults(queryCriteria, regex, LOGSTASH_INDEX_KEY, false);\n \n     logger.info(\"Query Operator log info succeeded\");\n   }\n \n-  private static void createAndVerifyDomain() {\n-    // get the pre-built image created by IntegrationTestWatcher\n-    String miiImage = MII_BASIC_IMAGE_NAME + \":\" + MII_BASIC_IMAGE_TAG;\n+  /**\n+   * Use Elasticsearch Search APIs to query WebLogic log info.\n+   * Verify that WebLogic server status of \"RUNNING\" is found.\n+   */\n+  @Disabled(\"Disabled the test due to JIRA OWLS-83899\")\n+  @Test\n+  @DisplayName(\"Use Elasticsearch Search APIs to query Operator log info and verify\")\n+  public void testWebLogicLogSearch() {\n+    // Verify that the admin status of \"RUNNING\" is found in query return from Elasticsearch repository\n+    verifyServerRunningInSearchResults(adminServerPodName);\n+\n+    // Verify that the ms status of \"RUNNING\" is found in query return from Elasticsearch repos\n+    verifyServerRunningInSearchResults(managedServerPodPrefix + \"1\");\n+\n+    logger.info(\"Query Operator log for WebLogic server status info succeeded\");\n+  }\n+\n+  /**\n+   * Use Elasticsearch Search APIs to query WebLogic log info pushed to Elasticsearch repository\n+   * by WebLogic Logging Exporter. Verify that log occurrence for WebLogic servers are not empty.\n+   */\n+  @Test\n+  @DisplayName(\"Use Elasticsearch Search APIs to query WebLogic log info in WLS server pod and verify\")\n+  public void testWlsLoggingExporter() throws Exception {\n+    Map<String, String> wlsMap = verifyLoggingExporterReady(opNamespace, null, WEBLOGIC_INDEX_KEY);\n+    // merge testVarMap and wlsMap\n+    testVarMap.putAll(wlsMap);\n+\n+    // Verify that occurrence of log level = Notice are not empty\n+    String regex = \".*took\\\":(\\\\d+),.*hits\\\":\\\\{(.+)\\\\}\";\n+    String queryCriteria = \"/_search?q=level:Notice\";\n+    verifyCountsHitsInSearchResults(queryCriteria, regex, WEBLOGIC_INDEX_KEY, false);\n+    // Verify that occurrence of loggerName = WebLogicServer are not empty\n+    queryCriteria = \"/_search?q=loggerName:WebLogicServer\";\n+    verifyCountsHitsInSearchResults(queryCriteria, regex, WEBLOGIC_INDEX_KEY, false);\n+    // Verify that occurrence of _type:doc are not empty\n+    queryCriteria = \"/_search?q=_type:doc\";\n+    verifyCountsHitsInSearchResults(queryCriteria, regex, WEBLOGIC_INDEX_KEY, false);\n+    // Verify that serverName:managed-server1 is filtered out", "originalCommit": "5386d7435072daf20837bb329809028da5018639", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzY0OTAwOQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#discussion_r477649009", "bodyText": "done", "author": "hzhao-github", "createdAt": "2020-08-26T23:07:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU3NjkxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU3ODEzOQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#discussion_r477578139", "bodyText": "variable name maxIterationsPod is not appropriate here, also use awaitility api like we do in other cases ...", "author": "vanajamukkara", "createdAt": "2020-08-26T20:44:27Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItElasticLogging.java", "diffHunk": "@@ -329,7 +438,33 @@ private static void createDomainCrAndVerify(String adminSecretName,\n     createDomainAndVerify(domain, domainNamespace);\n   }\n \n-  private void verifySearchResults(String queryCriteria, String regex,\n+  private void verifyServerRunningInSearchResults(String serverName) {\n+    int i = 0;\n+    String queryResult = null;\n+    String queryCriteria = \"/_search?q=log:\" + serverName;\n+    while (i < maxIterationsPod) {", "originalCommit": "5386d7435072daf20837bb329809028da5018639", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzY0OTM1OQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#discussion_r477649359", "bodyText": "changed", "author": "hzhao-github", "createdAt": "2020-08-26T23:07:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU3ODEzOQ=="}], "type": "inlineReview"}, {"oid": "f2dccd63ea1e20eeefab98bd85001f094ef72925", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/f2dccd63ea1e20eeefab98bd85001f094ef72925", "message": "Change based on comments jenkins-ignore", "committedDate": "2020-08-27T02:08:03Z", "type": "commit"}]}