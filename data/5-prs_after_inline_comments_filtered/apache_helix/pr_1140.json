{"pr_number": 1140, "pr_title": "Shutdown the TaskStateModelFactory threads created in the tests.", "pr_createdAt": "2020-07-04T22:58:25Z", "pr_url": "https://github.com/apache/helix/pull/1140", "timeline": [{"oid": "cdcbc50776aed38c50af049f0b5fd9b01f947cdf", "url": "https://github.com/apache/helix/commit/cdcbc50776aed38c50af049f0b5fd9b01f947cdf", "message": "Shutdown the TaskStateModelFactory threads created in the tests.\n\nThe TaskStateModelFactory initialization creates threadpool. The expectation is that the application code closes the threadpool and the threads when the participant instance is shuting down. In most cases, this means the JVM is going to be shutdown. So this operation is not a must. However, in the test cases, these threadpools leak thousands of the threads.\nThis PR adds cleanup logic to shutdown threadpools that are created for the partcipant instances. Note that there are still threads leakage when the participants are created separately instead of using the general methods.", "committedDate": "2020-07-04T22:40:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkyMTY4Ng==", "url": "https://github.com/apache/helix/pull/1140#discussion_r449921686", "bodyText": "Nit: use the constant in TaskConstants instead of hard-coded string", "author": "narendly", "createdAt": "2020-07-05T21:41:20Z", "path": "helix-core/src/test/java/org/apache/helix/task/TaskSynchronizedTestBase.java", "diffHunk": "@@ -181,12 +186,22 @@ protected void stopParticipants() {\n \n   protected void stopParticipant(int i) {\n     if (_participants.length <= i) {\n-      throw new HelixException(\n-          String.format(\"Can't stop participant %s, only %s participants\" + \"were set up.\", i,\n+      throw new HelixException(String\n+          .format(\"Can't stop participant %s, only %s participants\" + \"were set up.\", i,\n               _participants.length));\n     }\n-    if (_participants[i] != null && _participants[i].isConnected()) {\n-      _participants[i].syncStop();\n+    if (_participants[i] != null) {\n+      if (_participants[i].isConnected()) {\n+        _participants[i].syncStop();\n+      }\n+      // Shutdown the state model factories to close all threads.\n+      StateMachineEngine stateMachine = _participants[i].getStateMachineEngine();\n+      if (stateMachine != null) {\n+        StateModelFactory stateModelFactory = stateMachine.getStateModelFactory(\"Task\");", "originalCommit": "cdcbc50776aed38c50af049f0b5fd9b01f947cdf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAzODkwNg==", "url": "https://github.com/apache/helix/pull/1140#discussion_r451038906", "bodyText": "good point. Fixed", "author": "jiajunwang", "createdAt": "2020-07-07T17:46:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkyMTY4Ng=="}], "type": "inlineReview"}, {"oid": "f79d6ca1e0369a1c45e00ae55be85fdd6b52412a", "url": "https://github.com/apache/helix/commit/f79d6ca1e0369a1c45e00ae55be85fdd6b52412a", "message": "Address comment.", "committedDate": "2020-07-07T17:46:18Z", "type": "commit"}]}