{"pr_number": 1302, "pr_title": "Fix test TestCustomizedViewAggregation", "pr_createdAt": "2020-08-21T22:03:37Z", "pr_url": "https://github.com/apache/helix/pull/1302", "timeline": [{"oid": "2ff0c0300a462108f1be30df980c75573bad4728", "url": "https://github.com/apache/helix/commit/2ff0c0300a462108f1be30df980c75573bad4728", "message": "Fix test TestCustomizedViewAggregation", "committedDate": "2020-08-21T21:25:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc5NTE4NQ==", "url": "https://github.com/apache/helix/pull/1302#discussion_r475795185", "bodyText": "If the case that reduce customized state config won't be tested at all, I suggest to comment out the whole case.", "author": "zhangmeng916", "createdAt": "2020-08-24T17:57:46Z", "path": "helix-core/src/test/java/org/apache/helix/integration/TestCustomizedViewAggregation.java", "diffHunk": "@@ -410,7 +410,9 @@ public void testCustomizedViewAggregation() throws Exception {\n     // Aggregating: Type A\n     // Routing table: Type A, Type B, Type C\n     setAggregationEnabledTypes(Arrays.asList(CustomizedStateType.TYPE_A));", "originalCommit": "2ff0c0300a462108f1be30df980c75573bad4728", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTg2MTk2MQ==", "url": "https://github.com/apache/helix/pull/1302#discussion_r475861961", "bodyText": "The reduced config is tested, it is just not validated alone, it's validated together with the next several changes.", "author": "mgao0", "createdAt": "2020-08-24T20:03:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc5NTE4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTg3OTQ3Nw==", "url": "https://github.com/apache/helix/pull/1302#discussion_r475879477", "bodyText": "ok, in that case just document a little more about how this test is performed.", "author": "zhangmeng916", "createdAt": "2020-08-24T20:37:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc5NTE4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTg4Nzk3Mg==", "url": "https://github.com/apache/helix/pull/1302#discussion_r475887972", "bodyText": "Sure. Just updated, please take a look :)", "author": "mgao0", "createdAt": "2020-08-24T20:54:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc5NTE4NQ=="}], "type": "inlineReview"}, {"oid": "2a60cf44c706ea67163fc7da4c41816dee2c88b3", "url": "https://github.com/apache/helix/commit/2a60cf44c706ea67163fc7da4c41816dee2c88b3", "message": "Add more explanation for the test work-around", "committedDate": "2020-08-24T20:53:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTkyNjIyOA==", "url": "https://github.com/apache/helix/pull/1302#discussion_r475926228", "bodyText": "@mgao0 , help me to understand a little bit more here:\nThe removal of customized view would cause empty snapshot. In the test case, where is the removal of customizeView type happening?", "author": "kaisun2000", "createdAt": "2020-08-24T22:19:42Z", "path": "helix-core/src/test/java/org/apache/helix/integration/TestCustomizedViewAggregation.java", "diffHunk": "@@ -410,7 +410,11 @@ public void testCustomizedViewAggregation() throws Exception {\n     // Aggregating: Type A\n     // Routing table: Type A, Type B, Type C\n     setAggregationEnabledTypes(Arrays.asList(CustomizedStateType.TYPE_A));\n-    validateAggregationSnapshot();\n+    // This is commented out as a work around to pass the test\n+    // The validation of config change will be done combined with the next several customized state changes\n+    // The next validation should only show TYPE_A states aggregated in customized view\n+    // Until we fix the issue in routing table provider https://github.com/apache/helix/issues/1296\n+//    validateAggregationSnapshot();", "originalCommit": "2a60cf44c706ea67163fc7da4c41816dee2c88b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTkyNzcyOQ==", "url": "https://github.com/apache/helix/pull/1302#discussion_r475927729", "bodyText": "@kaisun2000 See the line 148 when we initiate this test, we set the types to be A,B,C. Then in line 412, I set type to be A. So Type B and C are deleted from the config, and controller will get notified of the changes in the config, and not aggregate Type B and C customized states to be included in the customized views any more.", "author": "mgao0", "createdAt": "2020-08-24T22:23:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTkyNjIyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTkzMjE5MQ==", "url": "https://github.com/apache/helix/pull/1302#discussion_r475932191", "bodyText": "Still a little bit confused. line 412 is only config change. How does it cause callbackbackhandler parent path removal?\nDo we have one callbackhandler, which type A, B, C are children. Or do we have 3 callbackhandler for A, B, C each?", "author": "kaisun2000", "createdAt": "2020-08-24T22:36:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTkyNjIyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTkzNDc2Mg==", "url": "https://github.com/apache/helix/pull/1302#discussion_r475934762", "bodyText": "@kaisun2000\nHelix controller reads the config and produces customized views. When the controller found from the config that type C has been dropped, it deletes the type C customized views from zk too (everything under /cluster_name/CUSTOMIZEDVIEW/TYPE_C).\nWe have one callback handler each for type A, B and C customized view (/cluster_name/CUSTOMIZEDVIEW/TYPE_C) as parent path. We also have one callback handler for each of their children nodes, which is like the example I gave earlier /cluster_name/CUSTOMIZEDVIEW/TYPE_C/resource_name", "author": "mgao0", "createdAt": "2020-08-24T22:43:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTkyNjIyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTk1MjUyMQ==", "url": "https://github.com/apache/helix/pull/1302#discussion_r475952521", "bodyText": "I see, customized view is similar to external view, that a stage in pipeline update it. My question is that for routingProvider, external view based/currentstate based, we should see this kind of removing a parent path of Callbackhandler all the time. Thus reset().  Isn't it a problem before? Is there anything special here?", "author": "kaisun2000", "createdAt": "2020-08-24T23:20:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTkyNjIyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTk3MDkwMQ==", "url": "https://github.com/apache/helix/pull/1302#discussion_r475970901", "bodyText": "No we don\u2019t have the same problem for current states. For example if you drop a resource in current states it enters this condition in handleChildChange, because it's not a parent path.\nelse { if (!isReady()) { // avoid leaking CallbackHandler logger.info(\"Callbackhandler {} with path {} is in reset state. Stop subscription to ZK client to avoid leaking\", this, parentPath); return; } NotificationContext changeContext = new NotificationContext(_manager); changeContext.setType(NotificationContext.Type.CALLBACK); changeContext.setPathChanged(parentPath); changeContext.setChangeType(_changeType); subscribeForChanges(changeContext.getType(), _path, _watchChild); enqueueTask(changeContext); } } \nSo it sends a CALLBACK instead of FINALIZE", "author": "mgao0", "createdAt": "2020-08-24T23:46:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTkyNjIyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTk3NTM4MQ==", "url": "https://github.com/apache/helix/pull/1302#discussion_r475975381", "bodyText": "Sync-ed offline.\nIt seems that currentState based RP has one callbackhandler with all currentstate as child znode. Thus reset would refresh all currentstate only once. This is fine.\nCustomizedView for each type has one callbackHandler. Thus, one removal of callbackhandler parent path would cause other types of customizedView be reset() too.\nIn sum, current design of routingProvider accomodate only one callbackhandler. (External view, currentstate). However customized view RP has callbackhandler per type. This does not fit into the current design of RP.", "author": "kaisun2000", "createdAt": "2020-08-24T23:53:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTkyNjIyOA=="}], "type": "inlineReview"}]}