{"pr_number": 915, "pr_title": "Make multiZkEnabled configurable in HelixRestNamespace", "pr_createdAt": "2020-03-26T22:38:15Z", "pr_url": "https://github.com/apache/helix/pull/915", "timeline": [{"oid": "741fa71d6c2afa032d0e6967b309f86d0d1224b6", "url": "https://github.com/apache/helix/commit/741fa71d6c2afa032d0e6967b309f86d0d1224b6", "message": "Make multiZkEnabled configurable in HelixRestNamespace\n\nIt was observed that we need more fine-grained control over this multiZkEnabled config because there could exists namespaces with differing modes. Because multiple namespaces may be co-deployed, we cannot simply make it a system config.", "committedDate": "2020-03-26T22:33:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODkzNjg1Mw==", "url": "https://github.com/apache/helix/pull/915#discussion_r398936853", "bodyText": "Why we dont just rely on the system property but a new field?", "author": "junkaixue", "createdAt": "2020-03-26T22:45:31Z", "path": "helix-rest/src/main/java/org/apache/helix/rest/common/HelixRestNamespace.java", "diffHunk": "@@ -35,6 +35,7 @@\n     METADATA_STORE_TYPE,\n     METADATA_STORE_ADDRESS,\n     IS_DEFAULT,\n+    MULTI_ZK_ENABLED,", "originalCommit": "741fa71d6c2afa032d0e6967b309f86d0d1224b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODkzNzE5NA==", "url": "https://github.com/apache/helix/pull/915#discussion_r398937194", "bodyText": "This is what the description says - please refer to the description carefully and let me know if it answers your question.", "author": "narendly", "createdAt": "2020-03-26T22:46:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODkzNjg1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk0MDU1Mg==", "url": "https://github.com/apache/helix/pull/915#discussion_r398940552", "bodyText": "Aren't we moving away from system properties?\nIf we allow both it could be confusing, unless we specifically document for it.", "author": "NealSun96", "createdAt": "2020-03-26T22:56:02Z", "path": "helix-rest/src/main/java/org/apache/helix/rest/server/ServerContext.java", "diffHunk": "@@ -111,20 +114,9 @@ public RealmAwareZkClient getRealmAwareZkClient() {\n       synchronized (this) {\n         if (_zkClient == null) {\n           // If the multi ZK config is enabled, use FederatedZkClient on multi-realm mode\n-          if (Boolean.parseBoolean(System.getProperty(SystemPropertyKeys.MULTI_ZK_ENABLED))) {\n-            LOG.info(\"ServerContext: initializing FederatedZkClient with routing ZK at {}!\",\n-                _zkAddr);\n+          if (_isMultiZkEnabled || Boolean\n+              .parseBoolean(System.getProperty(SystemPropertyKeys.MULTI_ZK_ENABLED))) {", "originalCommit": "741fa71d6c2afa032d0e6967b309f86d0d1224b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk0MjA3Mw==", "url": "https://github.com/apache/helix/pull/915#discussion_r398942073", "bodyText": "Aren't we moving away from system properties?\nWhy?\n\n\nIf we allow both it could be confusing, unless we specifically document for it.\nThis is for convenience. Users that have many namespaces can simply set the system property. Otherwise for more fine-grained control, they can set it at the namespace granularity.", "author": "narendly", "createdAt": "2020-03-26T23:00:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk0MDU1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk0NjA4MA==", "url": "https://github.com/apache/helix/pull/915#discussion_r398946080", "bodyText": "Then the system config should have a default value = \"false\". When user wants to enable fine-grained control, they shouldn't be manually setting MULTI_ZK_ENABLED = 'false' and then setting the per-namespace values; that will only be confusing.", "author": "NealSun96", "createdAt": "2020-03-26T23:12:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk0MDU1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk0NjU0Nw==", "url": "https://github.com/apache/helix/pull/915#discussion_r398946547", "bodyText": "It is false if it's not set by default.", "author": "narendly", "createdAt": "2020-03-26T23:14:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk0MDU1Mg=="}], "type": "inlineReview"}, {"oid": "61849b6d9417d446c258db88f89da0a7fd9917af", "url": "https://github.com/apache/helix/commit/61849b6d9417d446c258db88f89da0a7fd9917af", "message": "Add error log", "committedDate": "2020-03-26T22:57:03Z", "type": "commit"}, {"oid": "76e779a179e75b4504916086bf751ff129996b4e", "url": "https://github.com/apache/helix/commit/76e779a179e75b4504916086bf751ff129996b4e", "message": "sadf", "committedDate": "2020-03-26T23:12:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk0ODIxMg==", "url": "https://github.com/apache/helix/pull/915#discussion_r398948212", "bodyText": "Why we change the place? Could _zkClientForListener be null? It should be constructed when the ServerContext built.", "author": "junkaixue", "createdAt": "2020-03-26T23:18:50Z", "path": "helix-rest/src/main/java/org/apache/helix/rest/server/ServerContext.java", "diffHunk": "@@ -136,7 +128,20 @@ public RealmAwareZkClient getRealmAwareZkClient() {\n               // Refresh data subscription\n               _zkClientForListener.unsubscribeAll();\n               _zkClientForListener.subscribeRoutingDataChanges(this, this);\n+              LOG.info(\"ServerContext: subscribed to routing data in routing ZK at {}!\", _zkAddr);", "originalCommit": "76e779a179e75b4504916086bf751ff129996b4e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk2NjY5MA==", "url": "https://github.com/apache/helix/pull/915#discussion_r398966690", "bodyText": "I just changed the order so that control flow is not broken if FederatedZkClient creation throws an exception.\nYou can imagine a scenario in which, in the previous order, if FederatedZkClient creation failed and threw an exception, this whole resubscription logic would be skipped altogether, which is not what we want.\nAlso this listener zkclient should be lazily instantiated, not when ServerContext is built. The reason for it is that ServerContext may be constructed before ZK has started up.", "author": "narendly", "createdAt": "2020-03-27T00:16:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk0ODIxMg=="}], "type": "inlineReview"}]}