{"pr_number": 1534, "pr_title": "Fix several tests with resource leakage", "pr_createdAt": "2020-11-17T01:46:20Z", "pr_url": "https://github.com/apache/helix/pull/1534", "timeline": [{"oid": "7eb3c2833cda29a780afe44c06ba76d0df3843ff", "url": "https://github.com/apache/helix/commit/7eb3c2833cda29a780afe44c06ba76d0df3843ff", "message": "fix resource leaks in several tests.", "committedDate": "2020-11-17T00:26:30Z", "type": "commit"}, {"oid": "40aeab0c8fe9ce6060bf217a306d5b47cf6c0645", "url": "https://github.com/apache/helix/commit/40aeab0c8fe9ce6060bf217a306d5b47cf6c0645", "message": "fix several tests with leaking resources", "committedDate": "2020-11-17T01:43:27Z", "type": "commit"}, {"oid": "3545f025a3224c7fcc7c902332a7951455625894", "url": "https://github.com/apache/helix/commit/3545f025a3224c7fcc7c902332a7951455625894", "message": "two more thread leaking fix.", "committedDate": "2020-11-17T02:29:36Z", "type": "commit"}, {"oid": "fecc175a79d0a753bda63bd624572c6c420b06a5", "url": "https://github.com/apache/helix/commit/fecc175a79d0a753bda63bd624572c6c420b06a5", "message": "add resource leak fix in TestDistControllerElection", "committedDate": "2020-11-17T03:39:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM5NDYwNA==", "url": "https://github.com/apache/helix/pull/1534#discussion_r525394604", "bodyText": "nit, shutdown the controller first would be safer.", "author": "jiajunwang", "createdAt": "2020-11-17T18:34:30Z", "path": "helix-core/src/test/java/org/apache/helix/participant/TestDistControllerElection.java", "diffHunk": "@@ -72,36 +73,45 @@ public void testController() throws Exception {\n     DistributedLeaderElection election =\n         new DistributedLeaderElection(manager, controller0, timerTasks);\n     NotificationContext context = new NotificationContext(manager);\n-    context.setType(NotificationContext.Type.INIT);\n-    election.onControllerChange(context);\n-\n-    // path = PropertyPathConfig.getPath(PropertyType.LEADER, clusterName);\n-    // ZNRecord leaderRecord = _gZkClient.<ZNRecord> readData(path);\n-    LiveInstance liveInstance = accessor.getProperty(keyBuilder.controllerLeader());\n-    AssertJUnit.assertEquals(controllerName, liveInstance.getInstanceName());\n-    // AssertJUnit.assertNotNull(election.getController());\n-    // AssertJUnit.assertNull(election.getLeader());\n+    try {\n+      context.setType(NotificationContext.Type.INIT);\n+      election.onControllerChange(context);\n+\n+      // path = PropertyPathConfig.getPath(PropertyType.LEADER, clusterName);\n+      // ZNRecord leaderRecord = _gZkClient.<ZNRecord> readData(path);\n+      LiveInstance liveInstance = accessor.getProperty(keyBuilder.controllerLeader());\n+      AssertJUnit.assertEquals(controllerName, liveInstance.getInstanceName());\n+      // AssertJUnit.assertNotNull(election.getController());\n+      // AssertJUnit.assertNull(election.getLeader());\n+    } finally {\n+      manager.disconnect();\n+      controller0.shutdown();", "originalCommit": "fecc175a79d0a753bda63bd624572c6c420b06a5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQ4Njk3MQ==", "url": "https://github.com/apache/helix/pull/1534#discussion_r525486971", "bodyText": "changed.", "author": "kaisun2000", "createdAt": "2020-11-17T20:18:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM5NDYwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM5NTEzNg==", "url": "https://github.com/apache/helix/pull/1534#discussion_r525395136", "bodyText": "Same here.", "author": "jiajunwang", "createdAt": "2020-11-17T18:35:19Z", "path": "helix-core/src/test/java/org/apache/helix/participant/TestDistControllerElection.java", "diffHunk": "@@ -72,36 +73,45 @@ public void testController() throws Exception {\n     DistributedLeaderElection election =\n         new DistributedLeaderElection(manager, controller0, timerTasks);\n     NotificationContext context = new NotificationContext(manager);\n-    context.setType(NotificationContext.Type.INIT);\n-    election.onControllerChange(context);\n-\n-    // path = PropertyPathConfig.getPath(PropertyType.LEADER, clusterName);\n-    // ZNRecord leaderRecord = _gZkClient.<ZNRecord> readData(path);\n-    LiveInstance liveInstance = accessor.getProperty(keyBuilder.controllerLeader());\n-    AssertJUnit.assertEquals(controllerName, liveInstance.getInstanceName());\n-    // AssertJUnit.assertNotNull(election.getController());\n-    // AssertJUnit.assertNull(election.getLeader());\n+    try {\n+      context.setType(NotificationContext.Type.INIT);\n+      election.onControllerChange(context);\n+\n+      // path = PropertyPathConfig.getPath(PropertyType.LEADER, clusterName);\n+      // ZNRecord leaderRecord = _gZkClient.<ZNRecord> readData(path);\n+      LiveInstance liveInstance = accessor.getProperty(keyBuilder.controllerLeader());\n+      AssertJUnit.assertEquals(controllerName, liveInstance.getInstanceName());\n+      // AssertJUnit.assertNotNull(election.getController());\n+      // AssertJUnit.assertNull(election.getLeader());\n+    } finally {\n+      manager.disconnect();\n+      controller0.shutdown();\n+    }\n \n     manager =\n         new MockZKHelixManager(clusterName, \"controller_1\", InstanceType.CONTROLLER, _gZkClient);\n     GenericHelixController controller1 = new GenericHelixController();\n     election = new DistributedLeaderElection(manager, controller1, timerTasks);\n     context = new NotificationContext(manager);\n     context.setType(NotificationContext.Type.INIT);\n-    election.onControllerChange(context);\n-    // leaderRecord = _gZkClient.<ZNRecord> readData(path);\n-    liveInstance = accessor.getProperty(keyBuilder.controllerLeader());\n-    AssertJUnit.assertEquals(controllerName, liveInstance.getInstanceName());\n-    // AssertJUnit.assertNull(election.getController());\n-    // AssertJUnit.assertNull(election.getLeader());\n-\n-    accessor.removeProperty(keyBuilder.controllerLeader());\n-    TestHelper.dropCluster(clusterName, _gZkClient);\n+    try {\n+      election.onControllerChange(context);\n+      // leaderRecord = _gZkClient.<ZNRecord> readData(path);\n+      LiveInstance liveInstance = accessor.getProperty(keyBuilder.controllerLeader());\n+      AssertJUnit.assertEquals(controllerName, liveInstance.getInstanceName());\n+      // AssertJUnit.assertNull(election.getController());\n+      // AssertJUnit.assertNull(election.getLeader());\n+    } finally {\n+      manager.disconnect();\n+      controller1.shutdown();", "originalCommit": "fecc175a79d0a753bda63bd624572c6c420b06a5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQ4NzEzMQ==", "url": "https://github.com/apache/helix/pull/1534#discussion_r525487131", "bodyText": "changed.", "author": "kaisun2000", "createdAt": "2020-11-17T20:18:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM5NTEzNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM5NTkwNg==", "url": "https://github.com/apache/helix/pull/1534#discussion_r525395906", "bodyText": "How about the managers? Please disconnect them too.", "author": "jiajunwang", "createdAt": "2020-11-17T18:36:31Z", "path": "helix-core/src/test/java/org/apache/helix/participant/TestDistControllerElection.java", "diffHunk": "@@ -197,35 +218,42 @@ public void testCompeteLeadership() throws Exception {\n \n     // Create controller leaders\n     final Map<String, ZKHelixManager> managerList = new HashMap<>();\n+    final List<GenericHelixController> controllers = new ArrayList<>();\n     for (int i = 0; i < managerCount; i++) {\n       String controllerName = \"controller_\" + i;\n       ZKHelixManager manager =\n           new ZKHelixManager(clusterName, controllerName, InstanceType.CONTROLLER, ZK_ADDR);\n       GenericHelixController controller0 = new GenericHelixController();\n       DistributedLeaderElection election =\n           new DistributedLeaderElection(manager, controller0, Collections.EMPTY_LIST);\n+      controllers.add(controller0);\n       manager.connect();\n       managerList.put(manager.getInstanceName(), manager);\n     }\n \n-    // Remove leader manager one by one, and verify if the leader node exists\n-    while(!managerList.isEmpty()) {\n-      // Ensure a controller successfully acquired leadership.\n-      Assert.assertTrue(TestHelper.verify(new TestHelper.Verifier() {\n-        @Override\n-        public boolean verify() {\n-          LiveInstance liveInstance = accessor.getProperty(keyBuilder.controllerLeader());\n-          if (liveInstance != null) {\n-            // disconnect the current leader manager\n-            managerList.remove(liveInstance.getInstanceName()).disconnect();\n-            return true;\n-          } else {\n-            return false;\n+    try {\n+      // Remove leader manager one by one, and verify if the leader node exists\n+      while (!managerList.isEmpty()) {\n+        // Ensure a controller successfully acquired leadership.\n+        Assert.assertTrue(TestHelper.verify(new TestHelper.Verifier() {\n+          @Override\n+          public boolean verify() {\n+            LiveInstance liveInstance = accessor.getProperty(keyBuilder.controllerLeader());\n+            if (liveInstance != null) {\n+              // disconnect the current leader manager\n+              managerList.remove(liveInstance.getInstanceName()).disconnect();\n+              return true;\n+            } else {\n+              return false;\n+            }\n           }\n-        }\n-      }, 1000));\n+        }, 1000));\n+      }\n+    } finally {\n+      for (GenericHelixController controller : controllers) {\n+        controller.shutdown();", "originalCommit": "fecc175a79d0a753bda63bd624572c6c420b06a5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQ4NjgxMw==", "url": "https://github.com/apache/helix/pull/1534#discussion_r525486813", "bodyText": "good point. added.", "author": "kaisun2000", "createdAt": "2020-11-17T20:17:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM5NTkwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM5Njc4MA==", "url": "https://github.com/apache/helix/pull/1534#discussion_r525396780", "bodyText": "nit, you probably want to extract a private method for this section to reduce duplication.", "author": "jiajunwang", "createdAt": "2020-11-17T18:37:49Z", "path": "helix-core/src/test/java/org/apache/helix/tools/TestClusterSetup.java", "diffHunk": "@@ -73,44 +73,63 @@\n   public void beforeClass() throws Exception {\n     System.out\n         .println(\"START TestClusterSetup.beforeClass() \" + new Date(System.currentTimeMillis()));\n+    _clusterSetup = new ClusterSetup(ZK_ADDR);\n   }\n \n   @AfterClass()\n   public void afterClass() {\n     deleteCluster(CLUSTER_NAME);\n+    _clusterSetup.close();\n     System.out.println(\"END TestClusterSetup.afterClass() \" + new Date(System.currentTimeMillis()));\n   }\n \n   @BeforeMethod()\n   public void setup() {\n-\n-    _gZkClient.deleteRecursively(\"/\" + CLUSTER_NAME);\n-    _clusterSetup = new ClusterSetup(ZK_ADDR);\n-    _clusterSetup.addCluster(CLUSTER_NAME, true);\n+    try {\n+      _gZkClient.deleteRecursively(\"/\" + CLUSTER_NAME);\n+      _clusterSetup.addCluster(CLUSTER_NAME, true);\n+    } catch (Exception e) {\n+      System.out.println(\"@BeforeMethod TestClusterSetup exception:\" + e);\n+    }\n   }\n \n-  @Test\n+  // Note, with mvn 3.6.1, we have a nasty bug that running \"mvn test\" under helix-core,\n+  // all the bellow test will be invoked after other test including @AfterClass cleanup of this\n+  // This bug does not happen of running command as \"mvn test -Dtest=TestClusterSetup\". Nor does it\n+  // happen in intellij. The workaround found is to add dependsOnMethods attribute to all the rest.\n+  @Test(dependsOnMethods = \"testAddClusterWithValidCloudConfig\")\n   public void testZkAdminTimeout() {\n     boolean exceptionThrown = false;\n+    ZKHelixAdmin admin = null;", "originalCommit": "fecc175a79d0a753bda63bd624572c6c420b06a5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQ5Nzk5Nw==", "url": "https://github.com/apache/helix/pull/1534#discussion_r525497997", "bodyText": "added an test helper to reduce duplicated code.", "author": "kaisun2000", "createdAt": "2020-11-17T20:27:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM5Njc4MA=="}], "type": "inlineReview"}, {"oid": "407ed4fe2966e317b123518fe58975d8f0c5fa87", "url": "https://github.com/apache/helix/commit/407ed4fe2966e317b123518fe58975d8f0c5fa87", "message": "some updates based on feedback.", "committedDate": "2020-11-17T20:28:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTYwNzIwMg==", "url": "https://github.com/apache/helix/pull/1534#discussion_r525607202", "bodyText": "nit: Can we do\nAssert.assertTrue(_clusterVerifier.verify()); ?", "author": "xyuanlu", "createdAt": "2020-11-18T00:05:47Z", "path": "helix-core/src/test/java/org/apache/helix/controller/changedetector/TestResourceChangeDetector.java", "diffHunk": "@@ -431,8 +431,12 @@ public void testResetSnapshots() {\n             .setResources(new HashSet<>(_dataAccessor.getChildNames(_keyBuilder.idealStates())))\n             .setWaitTillVerify(TestHelper.DEFAULT_REBALANCE_PROCESSING_WAIT_TIME)\n             .build();\n-    Assert.assertTrue(_clusterVerifier.verify());\n-\n+    try {\n+      boolean result = _clusterVerifier.verify();", "originalCommit": "407ed4fe2966e317b123518fe58975d8f0c5fa87", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTYyMjI3Ng==", "url": "https://github.com/apache/helix/pull/1534#discussion_r525622276", "bodyText": "Changed.", "author": "kaisun2000", "createdAt": "2020-11-18T00:49:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTYwNzIwMg=="}], "type": "inlineReview"}, {"oid": "232afc981fc7eadb0978b397074b6132b2df15bc", "url": "https://github.com/apache/helix/commit/232afc981fc7eadb0978b397074b6132b2df15bc", "message": "address a nit.", "committedDate": "2020-11-18T00:49:52Z", "type": "commit"}]}