{"pr_number": 1355, "pr_title": "Enhance logging for CallbackHandler and Zkclient", "pr_createdAt": "2020-09-09T01:11:23Z", "pr_url": "https://github.com/apache/helix/pull/1355", "timeline": [{"oid": "ffc89ce95532d52e7be19b339dd3c2e2cf6072e5", "url": "https://github.com/apache/helix/commit/ffc89ce95532d52e7be19b339dd3c2e2cf6072e5", "message": "resolve #1352\n\nCallbackHandlder and ZkClient methods are invoked over multiple threads.\nIt can be hard to correlate one object's execution threads over multiple\njava threads. This poses a serious issue in production log examination.\n\nWe propose to add unique id to each methods' logging to help the\ncorrelation and also track the object's life cycle.", "committedDate": "2020-09-09T00:29:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTMyNTEwOA==", "url": "https://github.com/apache/helix/pull/1355#discussion_r485325108", "bodyText": "I think a toString() would give a comprehensive meaning/description for an object. Here, a uid doesn't achieve the purpose. If you just want to log uid, then put uid in log is enough.\nIf I override a toString(), I would add more descriptions/fields for this object, eg: \"CallbackHandler[uid=xxx, path=xxx, ...]\".", "author": "huizhilu", "createdAt": "2020-09-09T04:08:18Z", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -660,24 +666,31 @@ private void subscribeForChanges(NotificationContext.Type callbackType, String p\n           //TODO: avoid calling getChildren for path that does not exist\n           if (_changeType == CUSTOMIZED_STATE_ROOT) {\n             logger.warn(\n-                \"Failed to subscribe child/data change on path: {}, listener: {}. Instance \"\n-                    + \"does not support Customized State!\", path, _listener);\n+                \"CallbackHandler {}, Failed to subscribe child/data change on path: {}, listener: {}. Instance \"\n+                    + \"does not support Customized State!\", this.toString(), path, _listener);\n           } else {\n-            logger.warn(\"Failed to subscribe child/data change. path: {}, listener: {}\", path,\n-                _listener, e);\n+            logger.warn(\"CallbackHandler {}, Failed to subscribe child/data change. path: {}, listener: {}\",\n+                this.toString(), path, _listener, e);\n           }\n         }\n       }\n     }\n \n     long end = System.currentTimeMillis();\n-    logger.info(\"Subscribing to path: {} took: {}\", path, (end - start));\n+    logger.info(\"CallbackHandler{}, Subscribing to path: {} took: {}\", this.toString(), path, (end - start));\n   }\n \n   public EventType[] getEventTypes() {\n     return (EventType[]) _eventTypes.toArray();\n   }\n \n+  @Override\n+  public String toString() {\n+    StringBuilder stringBuilder = new StringBuilder();\n+    stringBuilder.append(_uid);\n+    return stringBuilder.toString();", "originalCommit": "ffc89ce95532d52e7be19b339dd3c2e2cf6072e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUxODgwMQ==", "url": "https://github.com/apache/helix/pull/1355#discussion_r486518801", "bodyText": "I think Lei mentioned in the review meeting not to hard code the UID. How about let me use a function called getUID()?", "author": "kaisun2000", "createdAt": "2020-09-10T17:37:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTMyNTEwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMyMjAxMQ==", "url": "https://github.com/apache/helix/pull/1355#discussion_r488322011", "bodyText": "I agree to what Huizhi mentioned, please include the basic information. If only uid is needed, then just refer to the _uid field in the code. No need to override toString().", "author": "jiajunwang", "createdAt": "2020-09-15T01:07:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTMyNTEwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ2NzI3OQ==", "url": "https://github.com/apache/helix/pull/1355#discussion_r492467279", "bodyText": "changed .", "author": "kaisun2000", "createdAt": "2020-09-22T04:25:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTMyNTEwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMyMjEyNw==", "url": "https://github.com/apache/helix/pull/1355#discussion_r488322127", "bodyText": "Same thing here, it seems that directly refer to _uid is enough.", "author": "jiajunwang", "createdAt": "2020-09-15T01:08:09Z", "path": "zookeeper-api/src/main/java/org/apache/helix/zookeeper/zkclient/ZkClient.java", "diffHunk": "@@ -204,6 +204,13 @@ public void recordPathStat(Stat stat, OptionalLong notificationTime) {\n     }\n   }\n \n+  @Override\n+  public String toString() {", "originalCommit": "ffc89ce95532d52e7be19b339dd3c2e2cf6072e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ2NzIyMQ==", "url": "https://github.com/apache/helix/pull/1355#discussion_r492467221", "bodyText": "changed.", "author": "kaisun2000", "createdAt": "2020-09-22T04:24:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMyMjEyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMyMjM0Nw==", "url": "https://github.com/apache/helix/pull/1355#discussion_r488322347", "bodyText": "nit \"_uid\" => \"uid\"", "author": "jiajunwang", "createdAt": "2020-09-15T01:08:58Z", "path": "zookeeper-api/src/main/java/org/apache/helix/zookeeper/zkclient/ZkClient.java", "diffHunk": "@@ -220,7 +227,7 @@ protected ZkClient(IZkConnection zkConnection, int connectionTimeout, long opera\n \n     _asyncCallRetryThread = new ZkAsyncRetryThread(zkConnection.getServers());\n     _asyncCallRetryThread.start();\n-    LOG.debug(\"ZkClient created with _uid {}, _asyncCallRetryThread id {}\", _uid, _asyncCallRetryThread.getId());\n+    LOG.debug(\"ZkClient created with _uid {}, _asyncCallRetryThread id {}\", this.toString(), _asyncCallRetryThread.getId());", "originalCommit": "ffc89ce95532d52e7be19b339dd3c2e2cf6072e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ2NzEwNQ==", "url": "https://github.com/apache/helix/pull/1355#discussion_r492467105", "bodyText": "changed,", "author": "kaisun2000", "createdAt": "2020-09-22T04:24:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMyMjM0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMyMjcwMg==", "url": "https://github.com/apache/helix/pull/1355#discussion_r488322702", "bodyText": "I just notice that _uid here was not made final field, could you please fix it? It should be a final field.", "author": "jiajunwang", "createdAt": "2020-09-15T01:10:18Z", "path": "zookeeper-api/src/main/java/org/apache/helix/zookeeper/zkclient/ZkClient.java", "diffHunk": "@@ -204,6 +204,13 @@ public void recordPathStat(Stat stat, OptionalLong notificationTime) {\n     }\n   }\n \n+  @Override\n+  public String toString() {\n+    StringBuilder stringBuilder = new StringBuilder();\n+    stringBuilder.append(_uid);", "originalCommit": "ffc89ce95532d52e7be19b339dd3c2e2cf6072e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ2NzE2Nw==", "url": "https://github.com/apache/helix/pull/1355#discussion_r492467167", "bodyText": "changed to final", "author": "kaisun2000", "createdAt": "2020-09-22T04:24:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMyMjcwMg=="}], "type": "inlineReview"}, {"oid": "3af895545b294257c596db3be9de31cbcdb3701b", "url": "https://github.com/apache/helix/commit/3af895545b294257c596db3be9de31cbcdb3701b", "message": "change to _uid based on feedback.", "committedDate": "2020-09-22T04:22:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzIyMTE0OQ==", "url": "https://github.com/apache/helix/pull/1355#discussion_r493221149", "bodyText": "It'd be great to make these similar messages easier to read, like Closing zkclient. uid={}, zk={}?", "author": "huizhilu", "createdAt": "2020-09-23T06:13:57Z", "path": "zookeeper-api/src/main/java/org/apache/helix/zookeeper/zkclient/ZkClient.java", "diffHunk": "@@ -2228,7 +2233,7 @@ public void close() throws ZkInterruptedException {\n       _eventThread.interrupt();\n       _eventThread.join(2000);\n       if (isManagingZkConnection()) {\n-        LOG.info(\"Closing zkclient: \" + ((ZkConnection) connection).getZookeeper());\n+        LOG.info(\"zkclient{}, Closing zkclient zk: {} \", this._uid, ((ZkConnection) connection).getZookeeper());", "originalCommit": "3af895545b294257c596db3be9de31cbcdb3701b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzIyMjk3NQ==", "url": "https://github.com/apache/helix/pull/1355#discussion_r493222975", "bodyText": "static final?\nAnd also give it a more comprehensive name, like CALLBACK_HANDLER_UID or NEXT_ID?", "author": "huizhilu", "createdAt": "2020-09-23T06:18:44Z", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -105,7 +106,9 @@\n @PreFetchChangedData(enabled = false)\n public class CallbackHandler implements IZkChildListener, IZkDataListener {\n   private static Logger logger = LoggerFactory.getLogger(CallbackHandler.class);\n+  private static AtomicLong CB_UID = new AtomicLong();", "originalCommit": "3af895545b294257c596db3be9de31cbcdb3701b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc4MTI1OQ==", "url": "https://github.com/apache/helix/pull/1355#discussion_r493781259", "bodyText": "changed.", "author": "kaisun2000", "createdAt": "2020-09-23T17:54:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzIyMjk3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzIzMzk4Mw==", "url": "https://github.com/apache/helix/pull/1355#discussion_r493233983", "bodyText": "This is not used. Remove it?", "author": "huizhilu", "createdAt": "2020-09-23T06:44:28Z", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -28,6 +28,7 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n+import java.util.concurrent.atomic.AtomicInteger;", "originalCommit": "3af895545b294257c596db3be9de31cbcdb3701b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "591254ab11c7317e51866c5a7c6722aa7eaa08e7", "url": "https://github.com/apache/helix/commit/591254ab11c7317e51866c5a7c6722aa7eaa08e7", "message": "some small fix based on feedback", "committedDate": "2020-09-23T17:56:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc4ODI5MQ==", "url": "https://github.com/apache/helix/pull/1355#discussion_r493788291", "bodyText": "@kaisun2000 This one? CALLBACK_HANDLER_UI -> CALLBACK_HANDLER_UID", "author": "huizhilu", "createdAt": "2020-09-23T18:05:32Z", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -105,7 +105,9 @@\n @PreFetchChangedData(enabled = false)\n public class CallbackHandler implements IZkChildListener, IZkDataListener {\n   private static Logger logger = LoggerFactory.getLogger(CallbackHandler.class);\n+  private static final AtomicLong CALLBACK_HANDLER_UI = new AtomicLong();", "originalCommit": "591254ab11c7317e51866c5a7c6722aa7eaa08e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg2NjU2OQ==", "url": "https://github.com/apache/helix/pull/1355#discussion_r493866569", "bodyText": "good catch. fixed.", "author": "kaisun2000", "createdAt": "2020-09-23T20:11:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc4ODI5MQ=="}], "type": "inlineReview"}, {"oid": "f8b43c005f88d39ec498954d01b7ccd48ac02a7f", "url": "https://github.com/apache/helix/commit/f8b43c005f88d39ec498954d01b7ccd48ac02a7f", "message": "fix a typo", "committedDate": "2020-09-23T20:11:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkwMTgxNQ==", "url": "https://github.com/apache/helix/pull/1355#discussion_r493901815", "bodyText": "nit, \"this.\" in \"this._uid\" is not necessary, right?\nSame as the following places.", "author": "jiajunwang", "createdAt": "2020-09-23T21:19:35Z", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -354,10 +359,10 @@ public void enqueueTask(NotificationContext changeContext) throws Exception {\n     // async mode only applicable to CALLBACK from ZK, During INIT and FINALIZE invoke the\n     // callback's immediately.\n     if (_batchModeEnabled && changeContext.getType() == NotificationContext.Type.CALLBACK) {\n-      logger.debug(\"Enqueuing callback\");\n+      logger.debug(\"Callbackhandler {}, Enqueuing callback\", this._uid );\n       if (!isReady()) {\n-        logger.info(\"CallbackHandler is not ready, ignore change callback from path: {}, for \"\n-            + \"listener: {}\", _path, _listener);\n+        logger.info(\"CallbackHandler {} is not ready, ignore change callback from path: {}, for \"\n+            + \"listener: {}\", this._uid, _path, _listener);", "originalCommit": "f8b43c005f88d39ec498954d01b7ccd48ac02a7f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkwOTc4NQ==", "url": "https://github.com/apache/helix/pull/1355#discussion_r493909785", "bodyText": "removed all this.", "author": "kaisun2000", "createdAt": "2020-09-23T21:37:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkwMTgxNQ=="}], "type": "inlineReview"}, {"oid": "a4e0e86270f5f85892aed75ae7c80252c7df1bef", "url": "https://github.com/apache/helix/commit/a4e0e86270f5f85892aed75ae7c80252c7df1bef", "message": "remove this", "committedDate": "2020-09-23T21:35:17Z", "type": "commit"}]}