{"pr_number": 1213, "pr_title": "Identify and eliminate TaskModel Thread ", "pr_createdAt": "2020-08-04T04:25:25Z", "pr_url": "https://github.com/apache/helix/pull/1213", "timeline": [{"oid": "70d4495020e4e613f3490a61e6d62d9f93d7d2c2", "url": "https://github.com/apache/helix/commit/70d4495020e4e613f3490a61e6d62d9f93d7d2c2", "message": "Identify and eliminate TaskModel Thread #1201\n\nHelixTaskExcutor thread pool has not unqiue name. Assign unique\nname. Also, for TaskModelFactory related test, there are leaks\nin a test. Eliminate the leak.", "committedDate": "2020-08-04T04:17:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIwOTMzMA==", "url": "https://github.com/apache/helix/pull/1213#discussion_r467209330", "bodyText": "Not related to your change. I'm wondering if we should make this daemon thread? @jiajunwang", "author": "mgao0", "createdAt": "2020-08-07T18:43:08Z", "path": "helix-core/src/main/java/org/apache/helix/messaging/handling/HelixTaskExecutor.java", "diffHunk": "@@ -209,7 +211,7 @@ public void registerMessageHandlerFactory(String type, MessageHandlerFactory fac\n     if (prevItem == null) {\n       ExecutorService newPool = Executors.newFixedThreadPool(threadpoolSize, new ThreadFactory() {\n         @Override public Thread newThread(Runnable r) {\n-          return new Thread(r, \"HelixTaskExecutor-message_handle_thread\");\n+          return new Thread(r, \"HelixTaskExecutor-message_handle_thread_\" + thread_uid.getAndIncrement());", "originalCommit": "70d4495020e4e613f3490a61e6d62d9f93d7d2c2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIzNDE3OQ==", "url": "https://github.com/apache/helix/pull/1213#discussion_r467234179", "bodyText": "Daemon thread is just to make sure that JVM can shutdown automatically when main thread ( and all other non daemon thread) exit. It is similar to you Unix machine restart, daemon process won't block it from restarting, but your forground process, say intellij can block the restart of Unix machine.", "author": "kaisun2000", "createdAt": "2020-08-07T19:39:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIwOTMzMA=="}], "type": "inlineReview"}]}