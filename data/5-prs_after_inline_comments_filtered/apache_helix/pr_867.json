{"pr_number": 867, "pr_title": "Make ZkHelixClusterVerifier and its child classes realm-aware", "pr_createdAt": "2020-03-05T07:21:01Z", "pr_url": "https://github.com/apache/helix/pull/867", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODcyNDk2OA==", "url": "https://github.com/apache/helix/pull/867#discussion_r388724968", "bodyText": "Shall we copy the list in case the builder would be used to create more objects?\nSame for the super class. But it is not shown here so I haven't reviewed it.", "author": "jiajunwang", "createdAt": "2020-03-06T05:55:25Z", "path": "helix-core/src/main/java/org/apache/helix/tools/ClusterVerifiers/BestPossibleExternalViewVerifier.java", "diffHunk": "@@ -94,29 +93,43 @@ public BestPossibleExternalViewVerifier(HelixZkClient zkClient, String clusterNa\n     _dataProvider = new ResourceControllerDataProvider();\n   }\n \n-  public static class Builder {\n-    private String _clusterName;\n+  private BestPossibleExternalViewVerifier(BestPossibleExternalViewVerifier.Builder builder) {\n+    super(builder);\n+    _errStates = builder._errStates;\n+    _resources = builder._resources;\n+    _expectLiveInstances = builder._expectLiveInstances;", "originalCommit": "c4d99561c16f4abaf1a7900888c577e0e51252cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg0MjQ5MQ==", "url": "https://github.com/apache/helix/pull/867#discussion_r389842491", "bodyText": "Good point. I'll address this.", "author": "narendly", "createdAt": "2020-03-09T17:24:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODcyNDk2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODcyNTQwMQ==", "url": "https://github.com/apache/helix/pull/867#discussion_r388725401", "bodyText": "Since we have the builder, shall we deprecated all the other constructors?", "author": "jiajunwang", "createdAt": "2020-03-06T05:57:30Z", "path": "helix-core/src/main/java/org/apache/helix/tools/ClusterVerifiers/BestPossibleExternalViewVerifier.java", "diffHunk": "@@ -84,7 +83,7 @@ public BestPossibleExternalViewVerifier(String zkAddr, String clusterName, Set<S\n     _dataProvider = new ResourceControllerDataProvider();\n   }\n \n-  public BestPossibleExternalViewVerifier(HelixZkClient zkClient, String clusterName,\n+  public BestPossibleExternalViewVerifier(RealmAwareZkClient zkClient, String clusterName,", "originalCommit": "c4d99561c16f4abaf1a7900888c577e0e51252cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg0MjEzMQ==", "url": "https://github.com/apache/helix/pull/867#discussion_r389842131", "bodyText": "Yes. We should.", "author": "narendly", "createdAt": "2020-03-09T17:23:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODcyNTQwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODcyNTU5OQ==", "url": "https://github.com/apache/helix/pull/867#discussion_r388725599", "bodyText": "Is it possible that we merge this constructor logic into BestPossibleExternalViewVerifier(Builder); So we don't need to maintain both logics.", "author": "jiajunwang", "createdAt": "2020-03-06T05:58:29Z", "path": "helix-core/src/main/java/org/apache/helix/tools/ClusterVerifiers/BestPossibleExternalViewVerifier.java", "diffHunk": "@@ -94,29 +93,43 @@ public BestPossibleExternalViewVerifier(HelixZkClient zkClient, String clusterNa\n     _dataProvider = new ResourceControllerDataProvider();\n   }\n \n-  public static class Builder {\n-    private String _clusterName;\n+  private BestPossibleExternalViewVerifier(BestPossibleExternalViewVerifier.Builder builder) {\n+    super(builder);\n+    _errStates = builder._errStates;\n+    _resources = builder._resources;\n+    _expectLiveInstances = builder._expectLiveInstances;\n+    _dataProvider = new ResourceControllerDataProvider();\n+  }\n+\n+  public static class Builder extends ZkHelixClusterVerifier.Builder {\n+    private final String _clusterName;\n     private Map<String, Map<String, String>> _errStates;\n     private Set<String> _resources;\n     private Set<String> _expectLiveInstances;\n-    private String _zkAddr;\n-    private HelixZkClient _zkClient;\n+    private RealmAwareZkClient _zkClient;\n \n     public Builder(String clusterName) {\n       _clusterName = clusterName;\n     }\n \n     public BestPossibleExternalViewVerifier build() {\n-      if (_clusterName == null || (_zkAddr == null && _zkClient == null)) {\n+      if (_clusterName == null || (_zkAddress == null && _zkClient == null)) {\n         throw new IllegalArgumentException(\"Cluster name or zookeeper info is missing!\");\n       }\n \n       if (_zkClient != null) {\n         return new BestPossibleExternalViewVerifier(_zkClient, _clusterName, _resources, _errStates,", "originalCommit": "c4d99561c16f4abaf1a7900888c577e0e51252cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg0MzQwNQ==", "url": "https://github.com/apache/helix/pull/867#discussion_r389843405", "bodyText": "This should actually all go in validate(). Let me see if I could move it.", "author": "narendly", "createdAt": "2020-03-09T17:25:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODcyNTU5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM3NzE5OA==", "url": "https://github.com/apache/helix/pull/867#discussion_r391377198", "bodyText": "I tried to move it to validate(), but this is left here to keep this backward-compatible with the existing builder logic. So we need it here..", "author": "narendly", "createdAt": "2020-03-12T02:59:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODcyNTU5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODcyNjA0Mg==", "url": "https://github.com/apache/helix/pull/867#discussion_r388726042", "bodyText": "Same here, shall we replace the existing constructor with the builder constructor?", "author": "jiajunwang", "createdAt": "2020-03-06T06:00:38Z", "path": "helix-core/src/main/java/org/apache/helix/tools/ClusterVerifiers/ClusterLiveNodesVerifier.java", "diffHunk": "@@ -24,18 +24,24 @@\n import java.util.List;\n import java.util.Set;\n \n-import org.apache.helix.zookeeper.api.client.HelixZkClient;\n+import org.apache.helix.zookeeper.api.client.RealmAwareZkClient;\n+\n \n public class ClusterLiveNodesVerifier extends ZkHelixClusterVerifier {\n \n   final Set<String> _expectLiveNodes;\n \n-  public ClusterLiveNodesVerifier(HelixZkClient zkclient, String clusterName,\n+  public ClusterLiveNodesVerifier(RealmAwareZkClient zkclient, String clusterName,", "originalCommit": "c4d99561c16f4abaf1a7900888c577e0e51252cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg0MzY3MQ==", "url": "https://github.com/apache/helix/pull/867#discussion_r389843671", "bodyText": "Will deprecate.", "author": "narendly", "createdAt": "2020-03-09T17:25:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODcyNjA0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODcyNjc4NQ==", "url": "https://github.com/apache/helix/pull/867#discussion_r388726785", "bodyText": "Question, In which case we need to handle this fallback logic? It is expected in some condition or just for safe?", "author": "jiajunwang", "createdAt": "2020-03-06T06:04:37Z", "path": "helix-core/src/main/java/org/apache/helix/tools/ClusterVerifiers/ZkHelixClusterVerifier.java", "diffHunk": "@@ -104,15 +112,49 @@ public ZkHelixClusterVerifier(String zkAddr, String clusterName) {\n     if (zkAddr == null || clusterName == null) {\n       throw new IllegalArgumentException(\"requires zkAddr|clusterName\");\n     }\n-    _zkClient = DedicatedZkClientFactory.getInstance()\n-        .buildZkClient(new HelixZkClient.ZkConnectionConfig(zkAddr));\n+\n+    RealmAwareZkClient zkClient;\n+    try {\n+      // First, try to create a RealmAwareZkClient that's a DedicatedZkClient\n+      RealmAwareZkClient.RealmAwareZkConnectionConfig.Builder connectionConfigBuilder =\n+          new RealmAwareZkClient.RealmAwareZkConnectionConfig.Builder();\n+      connectionConfigBuilder.setZkRealmShardingKey(\"/\" + clusterName);\n+      connectionConfigBuilder.setRealmMode(RealmAwareZkClient.RealmMode.SINGLE_REALM);\n+      zkClient = DedicatedZkClientFactory.getInstance()\n+          .buildZkClient(connectionConfigBuilder.build(),\n+              new RealmAwareZkClient.RealmAwareZkClientConfig());\n+    } catch (IOException | InvalidRoutingDataException | IllegalStateException e) {\n+      // Fallback option is to create a HelixZkClient that's a DedicatedZkClient", "originalCommit": "c4d99561c16f4abaf1a7900888c577e0e51252cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg0NDk2NQ==", "url": "https://github.com/apache/helix/pull/867#discussion_r389844965", "bodyText": "Cases where there is no proper MSDS or routing data available. Then we fall back to the previously-existing behavior.", "author": "narendly", "createdAt": "2020-03-09T17:27:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODcyNjc4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA1MzM2Ng==", "url": "https://github.com/apache/helix/pull/867#discussion_r389053366", "bodyText": "Is this necessary to change the deprecated method?", "author": "junkaixue", "createdAt": "2020-03-06T17:54:21Z", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZkBaseDataAccessor.java", "diffHunk": "@@ -102,14 +103,14 @@ public AccessResult() {\n \n   private static Logger LOG = LoggerFactory.getLogger(ZkBaseDataAccessor.class);\n \n-  private final HelixZkClient _zkClient;\n-  // true if ZkBaseDataAccessor was instantiated with a HelixZkClient, false otherwise\n+  private final RealmAwareZkClient _zkClient;\n+  // true if ZkBaseDataAccessor was instantiated with a RealmAwareZkClient, false otherwise\n   // This is used for close() to determine how ZkBaseDataAccessor should close the underlying\n   // ZkClient\n   private final boolean _usesExternalZkClient;\n \n   @Deprecated", "originalCommit": "c4d99561c16f4abaf1a7900888c577e0e51252cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg0MTcxMQ==", "url": "https://github.com/apache/helix/pull/867#discussion_r389841711", "bodyText": "To minimize the code change in our code, yes.", "author": "narendly", "createdAt": "2020-03-09T17:22:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA1MzM2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI0MDMxOQ==", "url": "https://github.com/apache/helix/pull/867#discussion_r391240319", "bodyText": "Nit: Maybe can we add javadoc for why it is deprecated and what is recommended to use?", "author": "huizhilu", "createdAt": "2020-03-11T20:12:22Z", "path": "helix-core/src/main/java/org/apache/helix/tools/ClusterVerifiers/BestPossibleExternalViewVerifier.java", "diffHunk": "@@ -84,7 +84,8 @@ public BestPossibleExternalViewVerifier(String zkAddr, String clusterName, Set<S\n     _dataProvider = new ResourceControllerDataProvider();\n   }\n \n-  public BestPossibleExternalViewVerifier(HelixZkClient zkClient, String clusterName,\n+  @Deprecated", "originalCommit": "93b474c1dfceff26ebc2c42f82b99ad28375781a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM3NjEyMQ==", "url": "https://github.com/apache/helix/pull/867#discussion_r391376121", "bodyText": "Added more javadoc.", "author": "narendly", "createdAt": "2020-03-12T02:54:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI0MDMxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI0MTkyNw==", "url": "https://github.com/apache/helix/pull/867#discussion_r391241927", "bodyText": "It seems the original constructors don't do deep copy. Is there a reason we do deep copy here? Maybe to prevent it from any concurrent modification exception as seen in prod or tests?", "author": "huizhilu", "createdAt": "2020-03-11T20:14:23Z", "path": "helix-core/src/main/java/org/apache/helix/tools/ClusterVerifiers/BestPossibleExternalViewVerifier.java", "diffHunk": "@@ -94,29 +95,47 @@ public BestPossibleExternalViewVerifier(HelixZkClient zkClient, String clusterNa\n     _dataProvider = new ResourceControllerDataProvider();\n   }\n \n-  public static class Builder {\n-    private String _clusterName;\n+  private BestPossibleExternalViewVerifier(Builder builder) {\n+    super(builder);\n+    // Deep copy data from Builder", "originalCommit": "93b474c1dfceff26ebc2c42f82b99ad28375781a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM3NjE4OA==", "url": "https://github.com/apache/helix/pull/867#discussion_r391376188", "bodyText": "This is because users can re-use a builder object to create multiple instances.", "author": "narendly", "createdAt": "2020-03-12T02:55:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI0MTkyNw=="}], "type": "inlineReview"}, {"oid": "4027d589c407f3697276eefe7a11e626e70a1072", "url": "https://github.com/apache/helix/commit/4027d589c407f3697276eefe7a11e626e70a1072", "message": "Make ZkHelixClusterVerifier and its child classes realm-aware\n\nChangelist:\n1. Make sure constructors accept RealmAwareZkClient\n2. Add Builders in each child class of ZkHelixClusterVerifier so that ZkClient configs are configurable and uses realm-aware ZkClient APIs", "committedDate": "2020-03-12T02:48:48Z", "type": "commit"}, {"oid": "b231111a2877ad65156320e4253ef19702462c08", "url": "https://github.com/apache/helix/commit/b231111a2877ad65156320e4253ef19702462c08", "message": "sadf'\ngit", "committedDate": "2020-03-12T02:48:48Z", "type": "commit"}, {"oid": "125509b5b2f9507a3517ba03337a3b69a4d25639", "url": "https://github.com/apache/helix/commit/125509b5b2f9507a3517ba03337a3b69a4d25639", "message": "update", "committedDate": "2020-03-12T02:48:48Z", "type": "commit"}, {"oid": "c0630b06ee69c2a0bbab121847adeeb185ef1244", "url": "https://github.com/apache/helix/commit/c0630b06ee69c2a0bbab121847adeeb185ef1244", "message": "address", "committedDate": "2020-03-12T02:48:48Z", "type": "commit"}, {"oid": "922b7062a56bc5a5d26ec6ddd6c26694bbfb27ac", "url": "https://github.com/apache/helix/commit/922b7062a56bc5a5d26ec6ddd6c26694bbfb27ac", "message": "sadf", "committedDate": "2020-03-12T03:05:36Z", "type": "commit"}, {"oid": "922b7062a56bc5a5d26ec6ddd6c26694bbfb27ac", "url": "https://github.com/apache/helix/commit/922b7062a56bc5a5d26ec6ddd6c26694bbfb27ac", "message": "sadf", "committedDate": "2020-03-12T03:05:36Z", "type": "forcePushed"}]}