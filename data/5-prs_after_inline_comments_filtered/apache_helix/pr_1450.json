{"pr_number": 1450, "pr_title": "HelixClusterVerifier verify() with default waitTillVerify time -- part two", "pr_createdAt": "2020-10-07T05:33:03Z", "pr_url": "https://github.com/apache/helix/pull/1450", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI1MDcwMA==", "url": "https://github.com/apache/helix/pull/1450#discussion_r501250700", "bodyText": "This stack trace would be printed in one line, right? It'd be difficult to read. How about using\nnew Throwable().printStackTrace();", "author": "huizhilu", "createdAt": "2020-10-07T19:15:06Z", "path": "helix-core/src/test/java/org/apache/helix/TestHelper.java", "diffHunk": "@@ -799,7 +799,12 @@ public static boolean verify(Verifier verifier, long timeout) throws Exception {\n     long start = System.currentTimeMillis();\n     do {\n       boolean result = verifier.verify();\n-      if (result || (System.currentTimeMillis() - start) > timeout) {\n+      boolean isTimedout = (System.currentTimeMillis() - start) > timeout;\n+      if (result || isTimedout) {\n+        if (isTimedout && !result) {\n+          LOG.error(\"verifier time out, consider try longer timeout, stack trace{}\",\n+              Arrays.asList(Thread.currentThread().getStackTrace()));", "originalCommit": "67f00ffb08bc4dc1c5f947a2e767f2fec820fa90", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMxMTY2MQ==", "url": "https://github.com/apache/helix/pull/1450#discussion_r501311661", "bodyText": "This belongs to https://github.com/apache/helix/pull/1447/files.\nThe using one line is intentional as we don't want to mix this one with an exception thrown which has multiple lines.", "author": "kaisun2000", "createdAt": "2020-10-07T21:09:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI1MDcwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI1MjgwMQ==", "url": "https://github.com/apache/helix/pull/1450#discussion_r501252801", "bodyText": "Assert result", "author": "huizhilu", "createdAt": "2020-10-07T19:19:09Z", "path": "helix-core/src/test/java/org/apache/helix/TestListenerCallback.java", "diffHunk": "@@ -195,19 +205,27 @@ public void testScopedConfigChangeListener() throws Exception {\n \n     listener.reset();\n     _manager.addConfigChangeListener(listener, ConfigScopeProperty.CLUSTER);\n-    Assert.assertTrue(listener._configChanged, \"Should get initial clusterConfig callback invoked\");\n+    boolean result = TestHelper.verify(()-> {\n+      return listener._configChanged;\n+    }, TestHelper.WAIT_DURATION);\n+    Assert.assertTrue(result,\"Should get initial clusterConfig callback invoked\");\n     Assert.assertEquals(listener._configSize, 1, \"Cluster Config size should be 1\");\n \n     listener.reset();\n     _manager.addConfigChangeListener(listener, ConfigScopeProperty.RESOURCE);\n+    result = TestHelper.verify(()-> {", "originalCommit": "67f00ffb08bc4dc1c5f947a2e767f2fec820fa90", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMxMDcxOA==", "url": "https://github.com/apache/helix/pull/1450#discussion_r501310718", "bodyText": "Good catch. This is actually addressed in https://github.com/apache/helix/pull/1447/files. This file change also belongs there.", "author": "kaisun2000", "createdAt": "2020-10-07T21:07:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI1MjgwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI1MzgxNg==", "url": "https://github.com/apache/helix/pull/1450#discussion_r501253816", "bodyText": "Assert it", "author": "huizhilu", "createdAt": "2020-10-07T19:20:56Z", "path": "helix-core/src/test/java/org/apache/helix/integration/rebalancer/TestClusterInMaintenanceModeWhenReachingMaxPartition.java", "diffHunk": "@@ -114,10 +115,10 @@ public void testDisableCluster() throws Exception {\n       _participants.get(i).syncStop();\n     }\n \n-    Thread.sleep(1000L);\n-    maintenanceSignal = _dataAccessor.getProperty(_dataAccessor.keyBuilder().maintenance());\n-    Assert.assertNotNull(maintenanceSignal);\n-    Assert.assertNotNull(maintenanceSignal.getReason());\n+    boolean result = TestHelper.verify(() -> {", "originalCommit": "67f00ffb08bc4dc1c5f947a2e767f2fec820fa90", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMxMTg4Mg==", "url": "https://github.com/apache/helix/pull/1450#discussion_r501311882", "bodyText": "Good catch. This is actually addressed in https://github.com/apache/helix/pull/1447/files. This file change also belongs there", "author": "kaisun2000", "createdAt": "2020-10-07T21:10:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI1MzgxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI1NDQ1NA==", "url": "https://github.com/apache/helix/pull/1450#discussion_r501254454", "bodyText": "Assert it", "author": "huizhilu", "createdAt": "2020-10-07T19:22:06Z", "path": "helix-core/src/test/java/org/apache/helix/integration/rebalancer/TestClusterInMaintenanceModeWhenReachingOfflineInstancesLimit.java", "diffHunk": "@@ -130,18 +130,24 @@ public void testWithDisabledInstancesLimit() throws Exception {\n       admin.enableInstance(CLUSTER_NAME, instance, false);\n     }\n \n-    Thread.sleep(500);\n-\n-    maintenanceSignal = _dataAccessor.getProperty(_dataAccessor.keyBuilder().maintenance());\n-    Assert.assertNull(maintenanceSignal);\n+    boolean result = TestHelper.verify(() -> {\n+      MaintenanceSignal ms = _dataAccessor.getProperty(_dataAccessor.keyBuilder().maintenance());\n+      return ms == null;\n+    }, TestHelper.WAIT_DURATION);\n+    Assert.assertTrue(result);\n \n     String instance = _participants.get(i).getInstanceName();\n     admin.enableInstance(CLUSTER_NAME, instance, false);\n \n-    Thread.sleep(500);\n-    maintenanceSignal = _dataAccessor.getProperty(_dataAccessor.keyBuilder().maintenance());\n-    Assert.assertNotNull(maintenanceSignal);\n-    Assert.assertNotNull(maintenanceSignal.getReason());\n+    ZkHelixClusterVerifier clusterVerifier =\n+        new BestPossibleExternalViewVerifier.Builder(CLUSTER_NAME).setZkClient(_gZkClient)\n+            .build();\n+    Assert.assertTrue(clusterVerifier.verifyByPolling());\n+\n+    result = TestHelper.verify(() -> {", "originalCommit": "67f00ffb08bc4dc1c5f947a2e767f2fec820fa90", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMxMDgwMQ==", "url": "https://github.com/apache/helix/pull/1450#discussion_r501310801", "bodyText": "Good catch. This is actually addressed in https://github.com/apache/helix/pull/1447/files. This file change also belongs there.", "author": "kaisun2000", "createdAt": "2020-10-07T21:08:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI1NDQ1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI1NDcxMw==", "url": "https://github.com/apache/helix/pull/1450#discussion_r501254713", "bodyText": "Assert", "author": "huizhilu", "createdAt": "2020-10-07T19:22:35Z", "path": "helix-core/src/test/java/org/apache/helix/integration/rebalancer/TestClusterInMaintenanceModeWhenReachingOfflineInstancesLimit.java", "diffHunk": "@@ -165,17 +171,18 @@ public void testWithOfflineInstancesLimit() throws Exception {\n       _participants.get(i).syncStop();\n     }\n \n-    Thread.sleep(500);\n-\n-    maintenanceSignal = _dataAccessor.getProperty(_dataAccessor.keyBuilder().maintenance());\n-    Assert.assertNull(maintenanceSignal);\n+    boolean result = TestHelper.verify(() -> {\n+      MaintenanceSignal ms = _dataAccessor.getProperty(_dataAccessor.keyBuilder().maintenance());\n+      return ms == null;\n+    }, TestHelper.WAIT_DURATION);\n+    Assert.assertTrue(result);\n \n     _participants.get(i).syncStop();\n \n-    Thread.sleep(500);\n-    maintenanceSignal = _dataAccessor.getProperty(_dataAccessor.keyBuilder().maintenance());\n-    Assert.assertNotNull(maintenanceSignal);\n-    Assert.assertNotNull(maintenanceSignal.getReason());\n+    result = TestHelper.verify(() -> {", "originalCommit": "67f00ffb08bc4dc1c5f947a2e767f2fec820fa90", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMxMDg5Nw==", "url": "https://github.com/apache/helix/pull/1450#discussion_r501310897", "bodyText": "Good catch. This is actually addressed in https://github.com/apache/helix/pull/1447/files. This file change also belongs there.", "author": "kaisun2000", "createdAt": "2020-10-07T21:08:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI1NDcxMw=="}], "type": "inlineReview"}, {"oid": "76beaa9d359fad97197df68703842d290f50f09e", "url": "https://github.com/apache/helix/commit/76beaa9d359fad97197df68703842d290f50f09e", "message": "    fix #1448 part 2\n\n    HelixClusterVerifier verify() and related method may return\n    pre-maturely. The reason is that the verify the converging stable\n    condition too early before controller has a chance to make\n    change. Basically the previous stable state is mistaken as the\n    expected next stable state.\n\n    We fix this issue by adding waitTillVerify() timeout in\n    construction time of verifier.", "committedDate": "2020-10-07T20:41:19Z", "type": "forcePushed"}, {"oid": "182565fc5e717cd1c71f3231b07f8aef6caba468", "url": "https://github.com/apache/helix/commit/182565fc5e717cd1c71f3231b07f8aef6caba468", "message": "    fix #1448 part 2\n\n    HelixClusterVerifier verify() and related method may return\n    pre-maturely. The reason is that the verify the converging stable\n    condition too early before controller has a chance to make\n    change. Basically the previous stable state is mistaken as the\n    expected next stable state.\n\n    We fix this issue by adding waitTillVerify() timeout in\n    construction time of verifier.", "committedDate": "2020-10-08T00:24:23Z", "type": "commit"}, {"oid": "182565fc5e717cd1c71f3231b07f8aef6caba468", "url": "https://github.com/apache/helix/commit/182565fc5e717cd1c71f3231b07f8aef6caba468", "message": "    fix #1448 part 2\n\n    HelixClusterVerifier verify() and related method may return\n    pre-maturely. The reason is that the verify the converging stable\n    condition too early before controller has a chance to make\n    change. Basically the previous stable state is mistaken as the\n    expected next stable state.\n\n    We fix this issue by adding waitTillVerify() timeout in\n    construction time of verifier.", "committedDate": "2020-10-08T00:24:23Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQ1NTM1NQ==", "url": "https://github.com/apache/helix/pull/1450#discussion_r501455355", "bodyText": "This won't be necessary anymore.", "author": "jiajunwang", "createdAt": "2020-10-08T05:24:29Z", "path": "helix-core/src/test/java/org/apache/helix/integration/rebalancer/WagedRebalancer/TestWagedRebalanceFaultZone.java", "diffHunk": "@@ -349,7 +352,9 @@ public void afterMethod() throws Exception {\n     // waiting for all DB be dropped.\n     Thread.sleep(100);", "originalCommit": "182565fc5e717cd1c71f3231b07f8aef6caba468", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQ2NTUyNA==", "url": "https://github.com/apache/helix/pull/1450#discussion_r501465524", "bodyText": "removed.", "author": "kaisun2000", "createdAt": "2020-10-08T05:58:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQ1NTM1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQ1NTQ0Mw==", "url": "https://github.com/apache/helix/pull/1450#discussion_r501455443", "bodyText": "This is not necessary anymore.", "author": "jiajunwang", "createdAt": "2020-10-08T05:24:48Z", "path": "helix-core/src/test/java/org/apache/helix/integration/rebalancer/WagedRebalancer/TestWagedRebalance.java", "diffHunk": "@@ -748,7 +753,9 @@ public void afterMethod() throws Exception {\n     Thread.sleep(100);", "originalCommit": "182565fc5e717cd1c71f3231b07f8aef6caba468", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQ2NTU3Ng==", "url": "https://github.com/apache/helix/pull/1450#discussion_r501465576", "bodyText": "removed.", "author": "kaisun2000", "createdAt": "2020-10-08T05:58:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQ1NTQ0Mw=="}], "type": "inlineReview"}, {"oid": "9cb218b52a6ff0e0fa04f3101d3f40cb8c5acb65", "url": "https://github.com/apache/helix/commit/9cb218b52a6ff0e0fa04f3101d3f40cb8c5acb65", "message": "fix 2 places based on JJ's feedback.", "committedDate": "2020-10-08T05:57:07Z", "type": "commit"}]}