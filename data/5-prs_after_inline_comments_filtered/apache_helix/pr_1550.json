{"pr_number": 1550, "pr_title": "Controller-side Task Current State Migration", "pr_createdAt": "2020-11-24T19:00:00Z", "pr_url": "https://github.com/apache/helix/pull/1550", "timeline": [{"oid": "849fa276608ddca1df05be714db7c56fd11c4899", "url": "https://github.com/apache/helix/commit/849fa276608ddca1df05be714db7c56fd11c4899", "message": "Current State Moving", "committedDate": "2020-11-24T17:15:57Z", "type": "commit"}, {"oid": "c5d6286bbdd6334f162f3b813fc932f007349dc2", "url": "https://github.com/apache/helix/commit/c5d6286bbdd6334f162f3b813fc932f007349dc2", "message": "test fixes", "committedDate": "2020-11-24T17:15:57Z", "type": "commit"}, {"oid": "b4032b287aa567111e36858f8f797d3ab97b2f70", "url": "https://github.com/apache/helix/commit/b4032b287aa567111e36858f8f797d3ab97b2f70", "message": "Property Key incorrect", "committedDate": "2020-11-24T17:15:57Z", "type": "commit"}, {"oid": "6156220b00b2de6198f41a74a90100de1ada54d2", "url": "https://github.com/apache/helix/commit/6156220b00b2de6198f41a74a90100de1ada54d2", "message": "Fix things", "committedDate": "2020-11-24T17:15:57Z", "type": "commit"}, {"oid": "9edc6adb9a46a8e38cfbd2c0c5c33aa79697a155", "url": "https://github.com/apache/helix/commit/9edc6adb9a46a8e38cfbd2c0c5c33aa79697a155", "message": "remove participant side change", "committedDate": "2020-11-24T17:15:57Z", "type": "commit"}, {"oid": "171aef9918c6c2f4611a6c1392e62813ca079a00", "url": "https://github.com/apache/helix/commit/171aef9918c6c2f4611a6c1392e62813ca079a00", "message": "bug fixes", "committedDate": "2020-11-24T17:15:57Z", "type": "commit"}, {"oid": "f644e540210f988ae2f4d5b54dc681eac84915d0", "url": "https://github.com/apache/helix/commit/f644e540210f988ae2f4d5b54dc681eac84915d0", "message": "Fix watcher test", "committedDate": "2020-11-24T17:19:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTgxMzYwMg==", "url": "https://github.com/apache/helix/pull/1550#discussion_r529813602", "bodyText": "Unused import?", "author": "alirezazamani", "createdAt": "2020-11-24T19:06:37Z", "path": "helix-core/src/main/java/org/apache/helix/controller/dataproviders/BaseControllerDataProvider.java", "diffHunk": "@@ -44,6 +44,7 @@\n import org.apache.helix.common.caches.CurrentStateCache;\n import org.apache.helix.common.caches.InstanceMessagesCache;\n import org.apache.helix.common.caches.PropertyCache;\n+import org.apache.helix.common.caches.TaskCurrentStateCache;", "originalCommit": "f644e540210f988ae2f4d5b54dc681eac84915d0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTgzMjcyNg==", "url": "https://github.com/apache/helix/pull/1550#discussion_r529832726", "bodyText": "Removed.", "author": "NealSun96", "createdAt": "2020-11-24T19:40:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTgxMzYwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTgxNzEwOA==", "url": "https://github.com/apache/helix/pull/1550#discussion_r529817108", "bodyText": "Why do we need to refreh here? Can TaskCurrentState get refreshed like regular current states?", "author": "alirezazamani", "createdAt": "2020-11-24T19:13:02Z", "path": "helix-core/src/main/java/org/apache/helix/controller/dataproviders/WorkflowControllerDataProvider.java", "diffHunk": "@@ -78,14 +82,17 @@ private void refreshClusterStateChangeFlags(Set<HelixConstants.ChangeType> prope\n         // This check (and set) is necessary for now since the current state flag in\n         // _propertyDataChangedMap is not used by the BaseControllerDataProvider for now.\n         _propertyDataChangedMap.get(HelixConstants.ChangeType.CURRENT_STATE).getAndSet(false)\n-            || _propertyDataChangedMap.get(HelixConstants.ChangeType.MESSAGE).getAndSet(false)\n-            || propertyRefreshed.contains(HelixConstants.ChangeType.CURRENT_STATE)\n+            || _propertyDataChangedMap.get(HelixConstants.ChangeType.TASK_CURRENT_STATE)\n+            .getAndSet(false) || _propertyDataChangedMap.get(HelixConstants.ChangeType.MESSAGE)\n+            .getAndSet(false) || propertyRefreshed.contains(HelixConstants.ChangeType.CURRENT_STATE)\n+            || propertyRefreshed.contains(HelixConstants.ChangeType.TASK_CURRENT_STATE)\n             || propertyRefreshed.contains(HelixConstants.ChangeType.LIVE_INSTANCE);\n   }\n \n   public synchronized void refresh(HelixDataAccessor accessor) {\n     long startTime = System.currentTimeMillis();\n     Set<HelixConstants.ChangeType> propertyRefreshed = super.doRefresh(accessor);\n+    _taskCurrentStateCache.refresh(accessor, getLiveInstanceCache().getPropertyMap());", "originalCommit": "f644e540210f988ae2f4d5b54dc681eac84915d0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTgzMzM1MA==", "url": "https://github.com/apache/helix/pull/1550#discussion_r529833350", "bodyText": "It's to save performance on the regular pipeline. Other caches refresh in super.doRefresh(accessor), and TF specific caches can refresh here.", "author": "NealSun96", "createdAt": "2020-11-24T19:41:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTgxNzEwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTgxNzk4Nw==", "url": "https://github.com/apache/helix/pull/1550#discussion_r529817987", "bodyText": "Assuming we only refresh the task current state for the task pipeline then I got my answer to the above question? \ud83d\udc4d", "author": "alirezazamani", "createdAt": "2020-11-24T19:14:41Z", "path": "helix-core/src/main/java/org/apache/helix/controller/stages/CurrentStateComputationStage.java", "diffHunk": "@@ -89,6 +90,13 @@ public void process(ClusterEvent event) throws Exception {\n       String instanceSessionId = instance.getEphemeralOwner();\n \n       // update current states.\n+      // Like ResourceComputationStage, we give priority to regular resources, so update task ones\n+      // first and allow regular ones to overwrite if there's any name conflicts.\n+      if (_isTaskFrameworkPipeline) {", "originalCommit": "f644e540210f988ae2f4d5b54dc681eac84915d0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTgzMzU0OQ==", "url": "https://github.com/apache/helix/pull/1550#discussion_r529833549", "bodyText": "See above. I believe we're referring to the same thing.", "author": "NealSun96", "createdAt": "2020-11-24T19:42:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTgxNzk4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTgxODk1MA==", "url": "https://github.com/apache/helix/pull/1550#discussion_r529818950", "bodyText": "Good comment", "author": "alirezazamani", "createdAt": "2020-11-24T19:16:21Z", "path": "helix-core/src/main/java/org/apache/helix/controller/stages/ResourceComputationStage.java", "diffHunk": "@@ -79,7 +79,25 @@ public void process(ClusterEvent event) throws Exception {\n \n     // It's important to get partitions from CurrentState as well since the\n     // idealState might be removed.\n-    processCurrentStates(cache, resourceMap, resourceToRebalance, idealStates, isTaskCache);\n+    Map<String, LiveInstance> availableInstances = cache.getLiveInstances();\n+    for (LiveInstance instance : availableInstances.values()) {\n+      String instanceName = instance.getInstanceName();\n+      String clientSessionId = instance.getEphemeralOwner();\n+\n+      Map<String, CurrentState> currentStateMap =\n+          cache.getCurrentState(instanceName, clientSessionId);\n+      processCurrentStates(currentStateMap, resourceMap, resourceToRebalance, idealStates,\n+          isTaskCache);\n+      // Duplicate resource names between regular and task resources may happen, but most likely\n+      // won't. If it does, let regular resources overwrite task resources. To avoid duplicate\n+      // resource overwriting, it's better to split regular and task pipelines entirely.", "originalCommit": "f644e540210f988ae2f4d5b54dc681eac84915d0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "31d63853bead4e6fb4c85fe163879fe5b2346f32", "url": "https://github.com/apache/helix/commit/31d63853bead4e6fb4c85fe163879fe5b2346f32", "message": "address comments", "committedDate": "2020-11-24T19:39:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc1NDQyNw==", "url": "https://github.com/apache/helix/pull/1550#discussion_r532754427", "bodyText": "Both current state and task current state are using the same CurrentState. Logically it's fine, but it is really confusing. Is this the ultimate solution? Do we have plan to rename?", "author": "zhangmeng916", "createdAt": "2020-11-30T17:04:15Z", "path": "helix-core/src/main/java/org/apache/helix/PropertyKey.java", "diffHunk": "@@ -485,6 +486,52 @@ public PropertyKey currentState(String instanceName, String sessionId, String re\n       }\n     }\n \n+    /**\n+     * Get a property key associated with {@link CurrentState} of an instance and session. This key", "originalCommit": "31d63853bead4e6fb4c85fe163879fe5b2346f32", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc3MDI2NA==", "url": "https://github.com/apache/helix/pull/1550#discussion_r532770264", "bodyText": "Down the line, task CurrentStates will have a different model. It's not within the scope of this change, though.", "author": "NealSun96", "createdAt": "2020-11-30T17:26:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc1NDQyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc1NzU5Ng==", "url": "https://github.com/apache/helix/pull/1550#discussion_r532757596", "bodyText": "I have a high level question about this PR. It separates current states to different paths and update them separately. How do you ensure the backward compatibility? e.g., routing table provider listens to current state path change, but now task related current state changes are removed from that path, routing table provider does have a different behavior than before, right? This may be what you want? But still this is not backward compatible.", "author": "zhangmeng916", "createdAt": "2020-11-30T17:08:39Z", "path": "helix-core/src/main/java/org/apache/helix/controller/stages/CurrentStateComputationStage.java", "diffHunk": "@@ -89,6 +89,13 @@ public void process(ClusterEvent event) throws Exception {\n       String instanceSessionId = instance.getEphemeralOwner();\n \n       // update current states.\n+      // Like ResourceComputationStage, we give priority to regular resources, so update task ones", "originalCommit": "31d63853bead4e6fb4c85fe163879fe5b2346f32", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc3MzAwNw==", "url": "https://github.com/apache/helix/pull/1550#discussion_r532773007", "bodyText": "That is what we want: routing table provider should not be triggered by task current states; you could see the issue description for more details.\nThe backward compatibility needs to be ensured on the controller side, since this change should not impact the controller.", "author": "NealSun96", "createdAt": "2020-11-30T17:30:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc1NzU5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc4NTI5MQ==", "url": "https://github.com/apache/helix/pull/1550#discussion_r532785291", "bodyText": "So a related question is that when we roll out this controller version, are we sure no client will notice the difference. I mean are we sure no client relies on current state change for any task related notification?", "author": "zhangmeng916", "createdAt": "2020-11-30T17:49:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc1NzU5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc4ODY0OQ==", "url": "https://github.com/apache/helix/pull/1550#discussion_r532788649", "bodyText": "The assumption I'm under is that no routing table provider should rely on task current states; preventing it from listening to task current states is the main goal of this change. This assumption is proposed before starting this project, so I'm inclined to believe that it's true. Conceptually, it also doesn't make sense for routing table provider to rely on task current states.", "author": "NealSun96", "createdAt": "2020-11-30T17:54:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc1NzU5Ng=="}], "type": "inlineReview"}, {"oid": "2f45672f996a68b36634f88b02619af26f7a42b4", "url": "https://github.com/apache/helix/commit/2f45672f996a68b36634f88b02619af26f7a42b4", "message": "remove non essential changes", "committedDate": "2020-12-01T00:04:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk4ODU2Ng==", "url": "https://github.com/apache/helix/pull/1550#discussion_r532988566", "bodyText": "This change is just a refactor: same code before and after.", "author": "NealSun96", "createdAt": "2020-12-01T00:16:43Z", "path": "helix-core/src/main/java/org/apache/helix/controller/stages/ResourceComputationStage.java", "diffHunk": "@@ -179,66 +197,53 @@ private void processJobConfigs(WorkflowControllerDataProvider taskDataCache, Map\n   /*\n    * Construct Resources based on CurrentStates and add them to resource maps\n    */\n-  private void processCurrentStates(BaseControllerDataProvider cache,", "originalCommit": "2f45672f996a68b36634f88b02619af26f7a42b4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk5OTMxNQ==", "url": "https://github.com/apache/helix/pull/1550#discussion_r532999315", "bodyText": "Please remember to handle the instances are created but not have this path.", "author": "junkaixue", "createdAt": "2020-12-01T00:47:32Z", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -193,6 +193,8 @@ public void addInstance(String clusterName, InstanceConfig instanceConfig) {\n \n     _zkClient.createPersistent(PropertyPathBuilder.instanceMessage(clusterName, nodeId), true);\n     _zkClient.createPersistent(PropertyPathBuilder.instanceCurrentState(clusterName, nodeId), true);\n+    _zkClient", "originalCommit": "2f45672f996a68b36634f88b02619af26f7a42b4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAwMTE5MA==", "url": "https://github.com/apache/helix/pull/1550#discussion_r533001190", "bodyText": "This \"else\" keyword is not necessary. You can have it as:\nif (xxx) {\nreturn xxx\n}\nreturn xxxx;", "author": "junkaixue", "createdAt": "2020-12-01T00:53:04Z", "path": "helix-core/src/main/java/org/apache/helix/PropertyKey.java", "diffHunk": "@@ -485,6 +486,52 @@ public PropertyKey currentState(String instanceName, String sessionId, String re\n       }\n     }\n \n+    /**\n+     * Get a property key associated with {@link CurrentState} of an instance and session. This key\n+     * is for TaskCurrentState specifically.\n+     * @param instanceName\n+     * @param sessionId\n+     * @return {@link PropertyKey}\n+     */\n+    public PropertyKey taskCurrentStates(String instanceName, String sessionId) {\n+      return new PropertyKey(TASKCURRENTSTATES, CurrentState.class, _clusterName, instanceName,\n+          sessionId);\n+    }\n+\n+    /**\n+     * Get a property key associated with {@link CurrentState} of an instance, session, and\n+     * resource. This key is for TaskCurrentState specifically.\n+     * @param instanceName\n+     * @param sessionId\n+     * @param resourceName\n+     * @return {@link PropertyKey}\n+     */\n+    public PropertyKey taskCurrentState(String instanceName, String sessionId, String resourceName) {\n+      return new PropertyKey(TASKCURRENTSTATES, CurrentState.class, _clusterName, instanceName,\n+          sessionId, resourceName);\n+    }\n+\n+    /**\n+     * Get a property key associated with {@link CurrentState} of an instance, session, resource,\n+     * and bucket name. This key is for TaskCurrentState specifically.\n+     * @param instanceName\n+     * @param sessionId\n+     * @param resourceName\n+     * @param bucketName\n+     * @return {@link PropertyKey}\n+     */\n+    public PropertyKey taskCurrentState(String instanceName, String sessionId, String resourceName,\n+        String bucketName) {\n+      if (bucketName == null) {\n+        return new PropertyKey(TASKCURRENTSTATES, CurrentState.class, _clusterName, instanceName,\n+            sessionId, resourceName);\n+\n+      } else {", "originalCommit": "2f45672f996a68b36634f88b02619af26f7a42b4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA2ODM5MA==", "url": "https://github.com/apache/helix/pull/1550#discussion_r533068390", "bodyText": "Yep.", "author": "NealSun96", "createdAt": "2020-12-01T04:39:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAwMTE5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAwMjEzMQ==", "url": "https://github.com/apache/helix/pull/1550#discussion_r533002131", "bodyText": "This is same logic as regular current state, right? We can create two different object for CurrentStateCache instead of creating a new class", "author": "junkaixue", "createdAt": "2020-12-01T00:55:44Z", "path": "helix-core/src/main/java/org/apache/helix/common/caches/TaskCurrentStateCache.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package org.apache.helix.common.caches;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+\n+import org.apache.helix.HelixDataAccessor;\n+import org.apache.helix.PropertyKey;\n+import org.apache.helix.common.controllers.ControlContextProvider;\n+import org.apache.helix.model.CurrentState;\n+import org.apache.helix.model.LiveInstance;\n+\n+\n+/**\n+ * Cache to hold all task CurrentStates of a cluster.\n+ */\n+public class TaskCurrentStateCache extends ParticipantStateCache<CurrentState> {", "originalCommit": "2f45672f996a68b36634f88b02619af26f7a42b4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA2ODU5OA==", "url": "https://github.com/apache/helix/pull/1550#discussion_r533068598", "bodyText": "No, the PopulateParticipantKeys function is different: it adds taskCurrentState keys.", "author": "NealSun96", "createdAt": "2020-12-01T04:39:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAwMjEzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAwNjQ0Nw==", "url": "https://github.com/apache/helix/pull/1550#discussion_r533006447", "bodyText": "I would suggest we add a default implementation for this newly added API for backwards compatibility. I've noticed that a helix user ambry implements this interface. So if we don't add a default implementation, it'll break ambry build if they upgrades helix.\nAnd another benefit of default implementation is, we don't need to add an empty implementation in those classes like MockClusterManager in tests. Thus less changed files.", "author": "huizhilu", "createdAt": "2020-12-01T01:08:41Z", "path": "helix-core/src/main/java/org/apache/helix/HelixManager.java", "diffHunk": "@@ -229,6 +229,15 @@ void addCurrentStateChangeListener(CurrentStateChangeListener listener, String i\n   void addCurrentStateChangeListener(org.apache.helix.CurrentStateChangeListener listener, String instanceName,\n       String sessionId) throws Exception;\n \n+  /**\n+   * Uses CurrentStateChangeListener since TaskCurrentState shares the same CurrentState model\n+   * @see CurrentStateChangeListener#onStateChange(String, List, NotificationContext)\n+   * @param listener\n+   * @param instanceName\n+   */\n+  void addTaskCurrentStateChangeListener(CurrentStateChangeListener listener, String instanceName,", "originalCommit": "2f45672f996a68b36634f88b02619af26f7a42b4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA2NjQ2NA==", "url": "https://github.com/apache/helix/pull/1550#discussion_r533066464", "bodyText": "Thank you! Great tip!", "author": "NealSun96", "createdAt": "2020-12-01T04:32:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAwNjQ0Nw=="}], "type": "inlineReview"}, {"oid": "a16720a5f03a543754c65238d690f36bb788c0b7", "url": "https://github.com/apache/helix/commit/a16720a5f03a543754c65238d690f36bb788c0b7", "message": "Address comments", "committedDate": "2020-12-01T06:49:54Z", "type": "commit"}, {"oid": "9f3abb9cca12266241593d849ce6b31b6b76ae89", "url": "https://github.com/apache/helix/commit/9f3abb9cca12266241593d849ce6b31b6b76ae89", "message": "Fix no node exceptions", "committedDate": "2020-12-01T18:36:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY0NTEyMg==", "url": "https://github.com/apache/helix/pull/1550#discussion_r533645122", "bodyText": "So we already split them. Is this necessary to combine them into current state output? Can we just change the later logic get current state from cache?", "author": "junkaixue", "createdAt": "2020-12-01T18:52:16Z", "path": "helix-core/src/main/java/org/apache/helix/controller/stages/CurrentStateComputationStage.java", "diffHunk": "@@ -89,6 +89,13 @@ public void process(ClusterEvent event) throws Exception {\n       String instanceSessionId = instance.getEphemeralOwner();\n \n       // update current states.\n+      // Like ResourceComputationStage, we give priority to regular resources, so update task ones\n+      // first and allow regular ones to overwrite if there's any name conflicts.\n+      if (_isTaskFrameworkPipeline) {\n+        Map<String, CurrentState> taskCurrentStateMap = ((WorkflowControllerDataProvider) cache)", "originalCommit": "9f3abb9cca12266241593d849ce6b31b6b76ae89", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc0MzIzOQ==", "url": "https://github.com/apache/helix/pull/1550#discussion_r533743239", "bodyText": "It may be possible to keep them split for the 2 pipelines. Experimenting.", "author": "NealSun96", "createdAt": "2020-12-01T21:48:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY0NTEyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg5MjQ4Mw==", "url": "https://github.com/apache/helix/pull/1550#discussion_r533892483", "bodyText": "Looks like the pipelines are stuck, I'm checking again.\nI believe theoretically, it's possible to split the \"CurrentStateOutput\" for 2 pipelines. However, for this PR I would like to have minimal behavior changes. Combining the \"CurrentStateOutput\" is to maintain the task-side behavior; the task pipeline processes both regular and task framework resources, so there may be a caveat somewhere that's preventing this from working. If this isn't a big issue, I think it's wise for us to keep this behavior for now until a pipeline splitting project. What do you think? @dasahcc", "author": "NealSun96", "createdAt": "2020-12-02T04:41:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY0NTEyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkxNDc1Nw==", "url": "https://github.com/apache/helix/pull/1550#discussion_r533914757", "bodyText": "Strictly speaking, the pipelines are already split. So there won't be a separate project to split the pipeline further. Note that we have 2 pipelines already. The project we planned to do is split the code. So if you can do it in this PR, we will save some later work. Otherwise, any new code you added here using a branch might need to be re-write soon : )", "author": "jiajunwang", "createdAt": "2020-12-02T05:56:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY0NTEyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQxMzA3MA==", "url": "https://github.com/apache/helix/pull/1550#discussion_r534413070", "bodyText": "When the project was first started, the agreement was that we keep all current behavior, which means merging task and non-task current states; due to possible naming conflicts, we allow regular current states to overwrite task ones. In terms of safety, this is the safest option since it doesn't modify behavior.\nI think we definitely need to split it. For the future project, I am talking about code splitting: the current way is that the 2 pipelines are using one stage, which isn't truly split. I can do it here, but I have concerns over the timeline. This PR is only the first PR, and there are the \"non-essential changes\" and \"participant-side changes\" all requiring reviews.\nI'm still looking into how this can be split, but if the intention here is \"it's a good to have\", then I'm against doing it for this PR due to time concerns and this is not a low hanging fruit apparently. It wasn't how we planned it either.", "author": "NealSun96", "createdAt": "2020-12-02T19:06:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY0NTEyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU4NjkzMg==", "url": "https://github.com/apache/helix/pull/1550#discussion_r534586932", "bodyText": "@dasahcc @jiajunwang I was very distracted by the argument itself that I lost sight to a very simple fact, my apology: splitting doesn't work here due to backward compatibility issues. If we completely split now, all task current states will fail to read for any participants with older helix versions. In another way, the splitting is already done in the sense that regular pipelines are not reading task current states anymore, which is an improvement done by this PR. :)\nThis PR itself doesn't introduce participant-side changes, so all task current states are still in the old path. Therefore complete split causes test problems. What I observed as \"pipelines stuck\" are overflowing logs caused by message handling, preventing me from seeing test outputs. In short, initialization messages are continuously generated due to missing current states from CurrentStateOutput, and that causes a log flood. If you're interested to find out more details, feel free to let me know.", "author": "NealSun96", "createdAt": "2020-12-03T00:59:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY0NTEyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY0ODk1NQ==", "url": "https://github.com/apache/helix/pull/1550#discussion_r533648955", "bodyText": "This changes the behavior, right? Can you elaborate what kind of scenario you will see this?", "author": "junkaixue", "createdAt": "2020-12-01T18:58:22Z", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -527,8 +540,11 @@ public void invoke(NotificationContext changeContext) throws Exception {\n       _zkClient.unsubscribeChildChanges(path, this);\n     }\n \n-    // List of children could be empty, but won't be null.\n-    return _zkClient.getChildren(path);\n+    try {\n+      return _zkClient.getChildren(path);\n+    } catch (ZkNoNodeException e) {\n+      return null;\n+    }", "originalCommit": "9f3abb9cca12266241593d849ce6b31b6b76ae89", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzczOTE2Mg==", "url": "https://github.com/apache/helix/pull/1550#discussion_r533739162", "bodyText": "This change was because you reminded me about the instances without the task path. :)\nFor instance without TASKCURRENTSTATES path, the callback handler is still created, however, during reset(), subscribeChildChange() will be invoked and they will reach the above path. Since the path doesn't exist, this line causes a NoNodeException that's only caught on the outside by reset(). This causes some log pollution.\nI synced with @pkuwm and we determined that this is unexpected and should be fixed.", "author": "NealSun96", "createdAt": "2020-12-01T21:40:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY0ODk1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQxNTAzNQ==", "url": "https://github.com/apache/helix/pull/1550#discussion_r534415035", "bodyText": "My concern is if original behavior of other types will be changed as well. The exception we will see can be changed from NoNodeException to NullPointerException if you just return null for it.", "author": "junkaixue", "createdAt": "2020-12-02T19:09:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY0ODk1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ0MDAxMQ==", "url": "https://github.com/apache/helix/pull/1550#discussion_r534440011", "bodyText": "All callers of this function (2 occasions) handle null cases. I believe this is the best solution when path doesn't exist, unless there's a better idea.", "author": "NealSun96", "createdAt": "2020-12-02T19:52:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY0ODk1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwODkxMQ==", "url": "https://github.com/apache/helix/pull/1550#discussion_r533908911", "bodyText": "nit, but might be important, can we just call it TASK_STATE for simplicity?", "author": "jiajunwang", "createdAt": "2020-12-02T05:39:02Z", "path": "helix-core/src/main/java/org/apache/helix/HelixConstants.java", "diffHunk": "@@ -34,6 +34,7 @@\n     CLUSTER_CONFIG (PropertyType.CONFIGS),\n     LIVE_INSTANCE (PropertyType.LIVEINSTANCES),\n     CURRENT_STATE (PropertyType.CURRENTSTATES),\n+    TASK_CURRENT_STATE (PropertyType.TASKCURRENTSTATES),", "originalCommit": "9f3abb9cca12266241593d849ce6b31b6b76ae89", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQwMzM5Ng==", "url": "https://github.com/apache/helix/pull/1550#discussion_r534403396", "bodyText": "It's still CurrentState for now, so I prefer calling it TASK_CURRENT_STATE. It corresponds to the underlying model.", "author": "NealSun96", "createdAt": "2020-12-02T18:50:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwODkxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQzMjgyOQ==", "url": "https://github.com/apache/helix/pull/1550#discussion_r534432829", "bodyText": "I think it is just a name so it won't impact any logic.\nBut task current state sounds redundent. Task state is good enough.", "author": "jiajunwang", "createdAt": "2020-12-02T19:39:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwODkxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ3MTg5NQ==", "url": "https://github.com/apache/helix/pull/1550#discussion_r534471895", "bodyText": "The name should reflect what it represents, and it represents a current state.\nAre you also suggesting that the zk path needs to be named as TASKSTATES? Personally, this name \"TaskCurrentState\" has been used everywhere from design doc to all variables in this PR. I don't see a big problem with it, so I don't think it's worth the effort to change all of them. The effort is not large but the return is even smaller.", "author": "NealSun96", "createdAt": "2020-12-02T20:49:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwODkxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTUwMTI1Nw==", "url": "https://github.com/apache/helix/pull/1550#discussion_r535501257", "bodyText": "Reduce the length of code is big deal to me. If this is not a big effort, I suggest we do it.\nBut this is my own opinion. I guess more ideas here will help. @dasahcc which name do you prefer?", "author": "jiajunwang", "createdAt": "2020-12-03T19:00:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwODkxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTY1MzY0Mg==", "url": "https://github.com/apache/helix/pull/1550#discussion_r535653642", "bodyText": "TASK_CURRENT_STATE is a completely fine name in all regard, in my opinion. It has to be at least a wrong name to warranty changes on all variables that expand for 3 PRs, that's my take. I'll also defer to @dasahcc .", "author": "NealSun96", "createdAt": "2020-12-03T21:41:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwODkxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjMxMzc5Mg==", "url": "https://github.com/apache/helix/pull/1550#discussion_r536313792", "bodyText": "Personally, TASK_CURRENT_STATE sounds better in this case. That equivalents CURRENT_STATE we have right now. Also if we use TASK_STATE, that could be confused with the TaskState enum class. Actually that is pointing to the concept of Job level state. Although I know this is something not correct, unless we change everything, we need to keep our naming concept consistent.", "author": "junkaixue", "createdAt": "2020-12-04T19:01:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwODkxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwOTU3Mw==", "url": "https://github.com/apache/helix/pull/1550#discussion_r533909573", "bodyText": "Shall we call it jobName instead of resourceName?", "author": "jiajunwang", "createdAt": "2020-12-02T05:41:02Z", "path": "helix-core/src/main/java/org/apache/helix/PropertyKey.java", "diffHunk": "@@ -485,6 +486,50 @@ public PropertyKey currentState(String instanceName, String sessionId, String re\n       }\n     }\n \n+    /**\n+     * Get a property key associated with {@link CurrentState} of an instance and session. This key\n+     * is for TaskCurrentState specifically.\n+     * @param instanceName\n+     * @param sessionId\n+     * @return {@link PropertyKey}\n+     */\n+    public PropertyKey taskCurrentStates(String instanceName, String sessionId) {\n+      return new PropertyKey(TASKCURRENTSTATES, CurrentState.class, _clusterName, instanceName,\n+          sessionId);\n+    }\n+\n+    /**\n+     * Get a property key associated with {@link CurrentState} of an instance, session, and\n+     * resource. This key is for TaskCurrentState specifically.\n+     * @param instanceName\n+     * @param sessionId\n+     * @param resourceName\n+     * @return {@link PropertyKey}\n+     */\n+    public PropertyKey taskCurrentState(String instanceName, String sessionId, String resourceName) {", "originalCommit": "9f3abb9cca12266241593d849ce6b31b6b76ae89", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQwNDI2Ng==", "url": "https://github.com/apache/helix/pull/1550#discussion_r534404266", "bodyText": "Sure", "author": "NealSun96", "createdAt": "2020-12-02T18:52:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwOTU3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkxMzE2Ng==", "url": "https://github.com/apache/helix/pull/1550#discussion_r533913166", "bodyText": "Seems you did not update the propertyRefreshed flag for _taskCurrentStateCache, so the refreshClusterStateChangeFlags() won't work as expected.", "author": "jiajunwang", "createdAt": "2020-12-02T05:51:16Z", "path": "helix-core/src/main/java/org/apache/helix/controller/dataproviders/WorkflowControllerDataProvider.java", "diffHunk": "@@ -78,14 +82,17 @@ private void refreshClusterStateChangeFlags(Set<HelixConstants.ChangeType> prope\n         // This check (and set) is necessary for now since the current state flag in\n         // _propertyDataChangedMap is not used by the BaseControllerDataProvider for now.\n         _propertyDataChangedMap.get(HelixConstants.ChangeType.CURRENT_STATE).getAndSet(false)\n-            || _propertyDataChangedMap.get(HelixConstants.ChangeType.MESSAGE).getAndSet(false)\n-            || propertyRefreshed.contains(HelixConstants.ChangeType.CURRENT_STATE)\n+            || _propertyDataChangedMap.get(HelixConstants.ChangeType.TASK_CURRENT_STATE)\n+            .getAndSet(false) || _propertyDataChangedMap.get(HelixConstants.ChangeType.MESSAGE)\n+            .getAndSet(false) || propertyRefreshed.contains(HelixConstants.ChangeType.CURRENT_STATE)\n+            || propertyRefreshed.contains(HelixConstants.ChangeType.TASK_CURRENT_STATE)\n             || propertyRefreshed.contains(HelixConstants.ChangeType.LIVE_INSTANCE);\n   }\n \n   public synchronized void refresh(HelixDataAccessor accessor) {\n     long startTime = System.currentTimeMillis();\n     Set<HelixConstants.ChangeType> propertyRefreshed = super.doRefresh(accessor);", "originalCommit": "9f3abb9cca12266241593d849ce6b31b6b76ae89", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ5OTYxNQ==", "url": "https://github.com/apache/helix/pull/1550#discussion_r534499615", "bodyText": "Resolved offline.", "author": "NealSun96", "createdAt": "2020-12-02T21:40:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkxMzE2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkxNTI1OA==", "url": "https://github.com/apache/helix/pull/1550#discussion_r533915258", "bodyText": "Since processCurrentStates already takes isTaskCache, can we put these complex into the processCurrentStates() method?", "author": "jiajunwang", "createdAt": "2020-12-02T05:58:12Z", "path": "helix-core/src/main/java/org/apache/helix/controller/stages/ResourceComputationStage.java", "diffHunk": "@@ -79,7 +79,25 @@ public void process(ClusterEvent event) throws Exception {\n \n     // It's important to get partitions from CurrentState as well since the\n     // idealState might be removed.\n-    processCurrentStates(cache, resourceMap, resourceToRebalance, idealStates, isTaskCache);\n+    Map<String, LiveInstance> availableInstances = cache.getLiveInstances();\n+    for (LiveInstance instance : availableInstances.values()) {\n+      String instanceName = instance.getInstanceName();\n+      String clientSessionId = instance.getEphemeralOwner();\n+\n+      Map<String, CurrentState> currentStateMap =\n+          cache.getCurrentState(instanceName, clientSessionId);\n+      processCurrentStates(currentStateMap, resourceMap, resourceToRebalance, idealStates,", "originalCommit": "9f3abb9cca12266241593d849ce6b31b6b76ae89", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQyNDQyNg==", "url": "https://github.com/apache/helix/pull/1550#discussion_r534424426", "bodyText": "Since processing task current states and processing regular current states share the same logic, at one point along the code, the same logic will be factored out. It either happens in process() (processCurrentStates() is the \"same logic\"), or it happens in processCurrentStates() (requires another new function). I think it can happen in process().", "author": "NealSun96", "createdAt": "2020-12-02T19:25:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkxNTI1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQzNjQ0Mw==", "url": "https://github.com/apache/helix/pull/1550#discussion_r534436443", "bodyText": "In this case, I will suggest extracting another private method to make process() code cleaner.", "author": "jiajunwang", "createdAt": "2020-12-02T19:46:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkxNTI1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDUxNTY1Mw==", "url": "https://github.com/apache/helix/pull/1550#discussion_r534515653", "bodyText": "Done.", "author": "NealSun96", "createdAt": "2020-12-02T22:10:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkxNTI1OA=="}], "type": "inlineReview"}, {"oid": "065d91b727ea0ab5ecddcc9b63632033a54f7411", "url": "https://github.com/apache/helix/commit/065d91b727ea0ab5ecddcc9b63632033a54f7411", "message": "rename", "committedDate": "2020-12-02T20:37:11Z", "type": "commit"}, {"oid": "67098bb2974371d57983837f8d53a4256c1d9c04", "url": "https://github.com/apache/helix/commit/67098bb2974371d57983837f8d53a4256c1d9c04", "message": "resource computation refactor", "committedDate": "2020-12-02T22:07:23Z", "type": "commit"}, {"oid": "9b7c428dcd07113968fea59c9ec30e0f1f109778", "url": "https://github.com/apache/helix/commit/9b7c428dcd07113968fea59c9ec30e0f1f109778", "message": "wrong flag", "committedDate": "2020-12-02T22:09:51Z", "type": "commit"}, {"oid": "7fe95e3f3547de492dcf5d4b0b9bb78eb1dab961", "url": "https://github.com/apache/helix/commit/7fe95e3f3547de492dcf5d4b0b9bb78eb1dab961", "message": "remove propertyRefreshed line because it doesn't work", "committedDate": "2020-12-03T01:24:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQ5MDQ2OQ==", "url": "https://github.com/apache/helix/pull/1550#discussion_r535490469", "bodyText": "Let's make the consistent format", "author": "junkaixue", "createdAt": "2020-12-03T18:45:09Z", "path": "helix-core/src/main/java/org/apache/helix/controller/dataproviders/WorkflowControllerDataProvider.java", "diffHunk": "@@ -78,14 +82,16 @@ private void refreshClusterStateChangeFlags(Set<HelixConstants.ChangeType> prope\n         // This check (and set) is necessary for now since the current state flag in\n         // _propertyDataChangedMap is not used by the BaseControllerDataProvider for now.\n         _propertyDataChangedMap.get(HelixConstants.ChangeType.CURRENT_STATE).getAndSet(false)\n-            || _propertyDataChangedMap.get(HelixConstants.ChangeType.MESSAGE).getAndSet(false)\n-            || propertyRefreshed.contains(HelixConstants.ChangeType.CURRENT_STATE)\n-            || propertyRefreshed.contains(HelixConstants.ChangeType.LIVE_INSTANCE);\n+            || _propertyDataChangedMap.get(HelixConstants.ChangeType.TASK_CURRENT_STATE)\n+            .getAndSet(false) || _propertyDataChangedMap.get(HelixConstants.ChangeType.MESSAGE)\n+            .getAndSet(false) || propertyRefreshed\n+            .contains(HelixConstants.ChangeType.LIVE_INSTANCE);", "originalCommit": "7fe95e3f3547de492dcf5d4b0b9bb78eb1dab961", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTUwNzI2NA==", "url": "https://github.com/apache/helix/pull/1550#discussion_r535507264", "bodyText": "This is for backward compatibility, right?\nCan we create another private method to get the full task current state smartly? So you don't need 2 processCurrentStateMap calls here.", "author": "jiajunwang", "createdAt": "2020-12-03T19:10:22Z", "path": "helix-core/src/main/java/org/apache/helix/controller/stages/ResourceComputationStage.java", "diffHunk": "@@ -189,56 +189,69 @@ private void processCurrentStates(BaseControllerDataProvider cache,\n         String instanceName = instance.getInstanceName();\n         String clientSessionId = instance.getEphemeralOwner();\n \n-        Map<String, CurrentState> currentStateMap =\n-            cache.getCurrentState(instanceName, clientSessionId);\n-        if (currentStateMap == null || currentStateMap.size() == 0) {\n-          continue;\n+        processCurrentStateMap(cache.getCurrentState(instanceName, clientSessionId), resourceMap,", "originalCommit": "7fe95e3f3547de492dcf5d4b0b9bb78eb1dab961", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTU2NTk0OA==", "url": "https://github.com/apache/helix/pull/1550#discussion_r535565948", "bodyText": "We always need to process current states from both paths. In the resource pipeline, we need the regular current states; in the task pipeline, we need task current states + regular for backward compatibility.\nCould you elaborate on the \"getting smartly\" part? Do you mean: combine the current state maps so there's only one call? That would incur additional memory and computation cost.", "author": "NealSun96", "createdAt": "2020-12-03T20:23:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTUwNzI2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTc2ODk0Mg==", "url": "https://github.com/apache/helix/pull/1550#discussion_r535768942", "bodyText": "This logic should be in the cache, actually.\ngetCurrentState(boolean isTaskPipeline) {\ncurrentstates = cache.getCurrentState(...)\nif (isTaskPipeline) {\nfilter currentStates for the tasks only\ncurrentstates.addAll(cache.getTaskCurrentState(...))\n} else {\nfilter currentStates for the resources only\n}\nreturn currentStates\n}", "author": "jiajunwang", "createdAt": "2020-12-04T01:29:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTUwNzI2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTgzOTI1Mg==", "url": "https://github.com/apache/helix/pull/1550#discussion_r535839252", "bodyText": "Right now, it can't be a part of BaseControllerDataProvider if that's what you're referring to. TaskCurrentStateCache exists in WorkflowControllerDataProvider only, and it's for a performance reason since it only needs to be refreshed there, not in the regular pipeline. Without first determining isTaskPipeline, we can't parse the base data provider to the workflow data provider.\nOf course, we can change how that works. I'll experiment.", "author": "NealSun96", "createdAt": "2020-12-04T05:07:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTUwNzI2NA=="}], "type": "inlineReview"}, {"oid": "4e1c8a4af2fde057550045f83f1ac7c299500ade", "url": "https://github.com/apache/helix/commit/4e1c8a4af2fde057550045f83f1ac7c299500ade", "message": "split", "committedDate": "2020-12-04T05:48:26Z", "type": "commit"}, {"oid": "a7921c8045339ec6be08b6625e36551b430a10da", "url": "https://github.com/apache/helix/commit/a7921c8045339ec6be08b6625e36551b430a10da", "message": "bugfix", "committedDate": "2020-12-04T18:54:37Z", "type": "commit"}, {"oid": "5c367b32560895764b2731f34720814ba73d9925", "url": "https://github.com/apache/helix/commit/5c367b32560895764b2731f34720814ba73d9925", "message": "bugfix", "committedDate": "2020-12-04T19:25:21Z", "type": "commit"}, {"oid": "62f86bb60dd354f3617dc8f3ba2eb5637a4cb044", "url": "https://github.com/apache/helix/commit/62f86bb60dd354f3617dc8f3ba2eb5637a4cb044", "message": "fix test", "committedDate": "2020-12-04T23:30:27Z", "type": "commit"}, {"oid": "7c06688b62b58e097b830c87f6dc140e503237c9", "url": "https://github.com/apache/helix/commit/7c06688b62b58e097b830c87f6dc140e503237c9", "message": "wrong fix", "committedDate": "2020-12-05T01:01:40Z", "type": "commit"}, {"oid": "e9806091d41b12641cbfd467d36c2a3471f07a7c", "url": "https://github.com/apache/helix/commit/e9806091d41b12641cbfd467d36c2a3471f07a7c", "message": "comments and stuff", "committedDate": "2020-12-05T02:43:33Z", "type": "commit"}, {"oid": "d01094c85614b3f8c2a7f5c00593bea109a1df56", "url": "https://github.com/apache/helix/commit/d01094c85614b3f8c2a7f5c00593bea109a1df56", "message": "formatting", "committedDate": "2020-12-07T17:14:09Z", "type": "commit"}]}