{"pr_number": 3565, "pr_title": "Fixed issue for last level query in case entities have more relations\u2026", "pr_createdAt": "2020-10-09T11:13:14Z", "pr_url": "https://github.com/thingsboard/thingsboard/pull/3565", "timeline": [{"oid": "9442cdb7805b88ae7f307b1e4a32670b6d57d06f", "url": "https://github.com/thingsboard/thingsboard/commit/9442cdb7805b88ae7f307b1e4a32670b6d57d06f", "message": "Fixed issue for last level query in case entities have more relations in the hierarchy below requested level", "committedDate": "2020-10-09T11:12:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQxNjMzMQ==", "url": "https://github.com/thingsboard/thingsboard/pull/3565#discussion_r502416331", "bodyText": "Duplicated\nnotExistsPart.append(whereFilter.toString());", "author": "ashvayka", "createdAt": "2020-10-09T13:11:09Z", "path": "dao/src/main/java/org/thingsboard/server/dao/sql/query/DefaultEntityQueryRepository.java", "diffHunk": "@@ -556,7 +559,9 @@ private String relationQuery(QueryContext ctx, RelationsQueryFilter entityFilter\n                     .append(\" and \")\n                     .append(\"nr.\").append(fromOrTo).append(\"_id\").append(\" = re.\").append(toOrFrom).append(\"_id\")\n                     .append(\" and \")\n-                    .append(\"nr.\").append(fromOrTo).append(\"_type\").append(\" = re.\").append(toOrFrom).append(\"_type\");\n+                    .append(\"nr.\").append(fromOrTo).append(\"_type\").append(\" = re.\").append(toOrFrom).append(\"_type\")\n+                    .append(\" and \")\n+                    .append(whereFilter.toString().replaceAll(\"re\\\\.\", \"nr\\\\.\"));", "originalCommit": "9442cdb7805b88ae7f307b1e4a32670b6d57d06f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQxNzA4OQ==", "url": "https://github.com/thingsboard/thingsboard/pull/3565#discussion_r502417089", "bodyText": "This should be removed ?\n            if (!StringUtils.isEmpty(entityFilter.getRelationType())) {\n                notExistsPart.append(\" and nr.relation_type = :where_relation_type\");\n            }", "author": "ashvayka", "createdAt": "2020-10-09T13:12:27Z", "path": "dao/src/main/java/org/thingsboard/server/dao/sql/query/DefaultEntityQueryRepository.java", "diffHunk": "@@ -472,10 +472,13 @@ private String entitySearchQuery(QueryContext ctx, EntitySearchQueryFilter entit\n         if (entityFilter.isFetchLastLevelOnly()) {\n             String fromOrTo = (entityFilter.getDirection().equals(EntitySearchDirection.FROM) ? \"from\" : \"to\");\n             StringBuilder notExistsPart = new StringBuilder();\n-            notExistsPart.append(\" NOT EXISTS (SELECT 1 from relation nr where \")\n+            notExistsPart.append(\" NOT EXISTS (SELECT 1 from relation nr \")\n+                    .append(whereFilter.replaceAll(\"re\\\\.\", \"nr\\\\.\"))\n+                    .append(\" and \")\n                     .append(\"nr.\").append(fromOrTo).append(\"_id\").append(\" = re.\").append(toOrFrom).append(\"_id\")\n                     .append(\" and \")\n                     .append(\"nr.\").append(fromOrTo).append(\"_type\").append(\" = re.\").append(toOrFrom).append(\"_type\");\n+", "originalCommit": "9442cdb7805b88ae7f307b1e4a32670b6d57d06f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "35eb3ed471625ad23966355b7e619ec7a87438a0", "url": "https://github.com/thingsboard/thingsboard/commit/35eb3ed471625ad23966355b7e619ec7a87438a0", "message": "Code review fixes", "committedDate": "2020-10-09T15:03:09Z", "type": "commit"}]}