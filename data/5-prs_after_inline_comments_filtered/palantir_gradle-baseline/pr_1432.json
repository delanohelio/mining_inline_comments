{"pr_number": 1432, "pr_title": "fix #1431: Avoid rewriting lambdas into ambiguous references", "pr_createdAt": "2020-06-25T17:00:16Z", "pr_url": "https://github.com/palantir/gradle-baseline/pull/1432", "timeline": [{"oid": "45182fbdd08e2994e477061efe29961e996f7b75", "url": "https://github.com/palantir/gradle-baseline/commit/45182fbdd08e2994e477061efe29961e996f7b75", "message": "fix #1431: Avoid rewriting lambdas into ambiguous references\n\nNote that this uses the expensive `SuggestedFixes.compilesWithFix`\ncheck which can result in poor performance, particularly on large\nprojects.\nFortunately this case isn't very common (no occurrences in a\nvery large internal project).", "committedDate": "2020-06-25T16:59:15Z", "type": "commit"}, {"oid": "f6c2a483ba13d1fdf16f68e5f54bd017efe79c6c", "url": "https://github.com/palantir/gradle-baseline/commit/f6c2a483ba13d1fdf16f68e5f54bd017efe79c6c", "message": "Add generated changelog entries", "committedDate": "2020-06-25T16:54:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTcwNjY2MQ==", "url": "https://github.com/palantir/gradle-baseline/pull/1432#discussion_r445706661", "bodyText": "This is a quick and dirty fix, we can write something more precise in the future if we find performance suffers.", "author": "carterkozak", "createdAt": "2020-06-25T17:02:15Z", "path": "baseline-error-prone/src/main/java/com/palantir/baseline/errorprone/LambdaMethodReference.java", "diffHunk": "@@ -170,8 +168,8 @@ private Description convertMethodInvocations(\n         }\n \n         return buildFix(methodSymbol, methodInvocation, root, state, isLocal(methodInvocation))\n-                .map(fix ->\n-                        buildDescription(root).setMessage(MESSAGE).addFix(fix).build())\n+                .filter(fix -> SuggestedFixes.compilesWithFix(fix, state))", "originalCommit": "f6c2a483ba13d1fdf16f68e5f54bd017efe79c6c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTcyMzUyNw==", "url": "https://github.com/palantir/gradle-baseline/pull/1432#discussion_r445723527", "bodyText": "Ahh, I didn't see a good way to do the ambiguous check on the lambda/method reference receiver, but this would catch it. Should we put this filter in the buildFix method itself to catch any other potential invalid transforms?", "author": "schlosna", "createdAt": "2020-06-25T17:32:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTcwNjY2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTcyNjQyMA==", "url": "https://github.com/palantir/gradle-baseline/pull/1432#discussion_r445726420", "bodyText": "I'm not aware of other paths that result in ambiguous behavior, I'd prefer to catch specific causes so we can add test cases for them, and hopefully write more precise fixes that don't involve recompilation.", "author": "carterkozak", "createdAt": "2020-06-25T17:37:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTcwNjY2MQ=="}], "type": "inlineReview"}, {"oid": "4d0cdd3b70a003974da7526fb3c0fd904a5b2de4", "url": "https://github.com/palantir/gradle-baseline/commit/4d0cdd3b70a003974da7526fb3c0fd904a5b2de4", "message": "fmt", "committedDate": "2020-06-25T17:03:02Z", "type": "commit"}]}