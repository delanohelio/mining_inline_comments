{"pr_number": 1554, "pr_title": "Add `PreventUsingIncubatingMethods` error-prone check (conjure)", "pr_createdAt": "2020-11-19T20:59:04Z", "pr_url": "https://github.com/palantir/gradle-baseline/pull/1554", "timeline": [{"oid": "a373c08f957be0e49000340ade89ae2ba8135301", "url": "https://github.com/palantir/gradle-baseline/commit/a373c08f957be0e49000340ade89ae2ba8135301", "message": "Add `PreventUsingIncubatingMethods` error-prone check\n\nAn explicit check which warns against using incubating APIs; you can\ndisable it on a per-project basis, or on a per-usage basis using\n@SuppressWarnings.", "committedDate": "2020-11-19T20:47:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzIyNTE4Nw==", "url": "https://github.com/palantir/gradle-baseline/pull/1554#discussion_r527225187", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            + \" @SuppressWarnings(\\\"PreventUsingIncubatingMethods\\\"), or disable it globally for new projects.\")\n          \n          \n            \n                            + \" @SuppressWarnings(\\\"PreventUsingIncubatingMethods\\\").\")\n          \n      \n    \n    \n  \n\nLet's leave the global piece implied, we don't want to give folks too many ideas!", "author": "carterkozak", "createdAt": "2020-11-19T21:49:53Z", "path": "baseline-error-prone/src/main/java/com/palantir/baseline/errorprone/PreventUsingIncubatingMethods.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.baseline.errorprone;\n+\n+import com.google.auto.service.AutoService;\n+import com.google.errorprone.BugPattern;\n+import com.google.errorprone.VisitorState;\n+import com.google.errorprone.bugpatterns.BugChecker;\n+import com.google.errorprone.matchers.Description;\n+import com.google.errorprone.util.ASTHelpers;\n+import com.sun.source.tree.MemberReferenceTree;\n+import com.sun.source.tree.MethodInvocationTree;\n+import com.sun.source.tree.Tree;\n+import com.sun.tools.javac.code.Symbol;\n+\n+@AutoService(BugChecker.class)\n+@BugPattern(\n+        name = \"PreventUsingIncubatingMethods\",\n+        providesFix = BugPattern.ProvidesFix.REQUIRES_HUMAN_ATTENTION,\n+        severity = BugPattern.SeverityLevel.ERROR,\n+        summary = \"You should avoid using incubating methods where possible, since they have very weak stability\"\n+                + \" guarantees. You can explicitly disable this check on a case-by-case basis using\"\n+                + \" @SuppressWarnings(\\\"PreventUsingIncubatingMethods\\\"), or disable it globally for new projects.\")", "originalCommit": "a373c08f957be0e49000340ade89ae2ba8135301", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzIyNzIyMg==", "url": "https://github.com/palantir/gradle-baseline/pull/1554#discussion_r527227222", "bodyText": "Alright.", "author": "blacksmithgu", "createdAt": "2020-11-19T21:53:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzIyNTE4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzIyNTY1OA==", "url": "https://github.com/palantir/gradle-baseline/pull/1554#discussion_r527225658", "bodyText": "No need to set a message, the summary from the annotation above is sufficient\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return buildDescription(tree)\n          \n          \n            \n                    return describeMatch(tree);", "author": "carterkozak", "createdAt": "2020-11-19T21:50:39Z", "path": "baseline-error-prone/src/main/java/com/palantir/baseline/errorprone/PreventUsingIncubatingMethods.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.baseline.errorprone;\n+\n+import com.google.auto.service.AutoService;\n+import com.google.errorprone.BugPattern;\n+import com.google.errorprone.VisitorState;\n+import com.google.errorprone.bugpatterns.BugChecker;\n+import com.google.errorprone.matchers.Description;\n+import com.google.errorprone.util.ASTHelpers;\n+import com.sun.source.tree.MemberReferenceTree;\n+import com.sun.source.tree.MethodInvocationTree;\n+import com.sun.source.tree.Tree;\n+import com.sun.tools.javac.code.Symbol;\n+\n+@AutoService(BugChecker.class)\n+@BugPattern(\n+        name = \"PreventUsingIncubatingMethods\",\n+        providesFix = BugPattern.ProvidesFix.REQUIRES_HUMAN_ATTENTION,\n+        severity = BugPattern.SeverityLevel.ERROR,\n+        summary = \"You should avoid using incubating methods where possible, since they have very weak stability\"\n+                + \" guarantees. You can explicitly disable this check on a case-by-case basis using\"\n+                + \" @SuppressWarnings(\\\"PreventUsingIncubatingMethods\\\"), or disable it globally for new projects.\")\n+public final class PreventUsingIncubatingMethods extends BugChecker\n+        implements BugChecker.MethodInvocationTreeMatcher, BugChecker.MemberReferenceTreeMatcher {\n+\n+    /** The full path for the Incubating annotation. */\n+    private static final String INCUBATING = \"com.palantir.conjure.java.lib.internal.Incubating\";\n+\n+    @Override\n+    public Description matchMethodInvocation(MethodInvocationTree tree, VisitorState state) {\n+        return checkTree(tree, ASTHelpers.getSymbol(tree), state);\n+    }\n+\n+    @Override\n+    public Description matchMemberReference(MemberReferenceTree tree, VisitorState state) {\n+        return checkTree(tree, ASTHelpers.getSymbol(tree), state);\n+    }\n+\n+    private Description checkTree(Tree tree, Symbol.MethodSymbol method, VisitorState state) {\n+        if (!ASTHelpers.hasAnnotation(method, INCUBATING, state)) {\n+            return Description.NO_MATCH;\n+        }\n+\n+        return buildDescription(tree)", "originalCommit": "a373c08f957be0e49000340ade89ae2ba8135301", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzIyODYzNg==", "url": "https://github.com/palantir/gradle-baseline/pull/1554#discussion_r527228636", "bodyText": "Ack, didn't know that method existed.", "author": "blacksmithgu", "createdAt": "2020-11-19T21:56:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzIyNTY1OA=="}], "type": "inlineReview"}, {"oid": "96c83843841a6c5726b9becd1a7e3be76ca952fc", "url": "https://github.com/palantir/gradle-baseline/commit/96c83843841a6c5726b9becd1a7e3be76ca952fc", "message": "Rename check to 'IncubatingMethod'\n\nTo be more in line with other checks.", "committedDate": "2020-11-19T21:57:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzIyOTkzNw==", "url": "https://github.com/palantir/gradle-baseline/pull/1554#discussion_r527229937", "bodyText": "this check can be extracted to a static reusable matcher:\nMatchers.hasAnnotation(\"com.palantir.conjure.java.lib.internal.Incubating\");\nWe should probably not fail builds when folks test their endpoints, so we can avoid reporting a match if TestCheckUtils.isTestCode(state) is true (note that this method is relatively expensive, so we should only check it after we've found an incubating match).", "author": "carterkozak", "createdAt": "2020-11-19T21:58:55Z", "path": "baseline-error-prone/src/main/java/com/palantir/baseline/errorprone/PreventUsingIncubatingMethods.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.baseline.errorprone;\n+\n+import com.google.auto.service.AutoService;\n+import com.google.errorprone.BugPattern;\n+import com.google.errorprone.VisitorState;\n+import com.google.errorprone.bugpatterns.BugChecker;\n+import com.google.errorprone.matchers.Description;\n+import com.google.errorprone.util.ASTHelpers;\n+import com.sun.source.tree.MemberReferenceTree;\n+import com.sun.source.tree.MethodInvocationTree;\n+import com.sun.source.tree.Tree;\n+import com.sun.tools.javac.code.Symbol;\n+\n+@AutoService(BugChecker.class)\n+@BugPattern(\n+        name = \"PreventUsingIncubatingMethods\",\n+        providesFix = BugPattern.ProvidesFix.REQUIRES_HUMAN_ATTENTION,\n+        severity = BugPattern.SeverityLevel.ERROR,\n+        summary = \"You should avoid using incubating methods where possible, since they have very weak stability\"\n+                + \" guarantees. You can explicitly disable this check on a case-by-case basis using\"\n+                + \" @SuppressWarnings(\\\"PreventUsingIncubatingMethods\\\"), or disable it globally for new projects.\")\n+public final class PreventUsingIncubatingMethods extends BugChecker\n+        implements BugChecker.MethodInvocationTreeMatcher, BugChecker.MemberReferenceTreeMatcher {\n+\n+    /** The full path for the Incubating annotation. */\n+    private static final String INCUBATING = \"com.palantir.conjure.java.lib.internal.Incubating\";\n+\n+    @Override\n+    public Description matchMethodInvocation(MethodInvocationTree tree, VisitorState state) {\n+        return checkTree(tree, ASTHelpers.getSymbol(tree), state);\n+    }\n+\n+    @Override\n+    public Description matchMemberReference(MemberReferenceTree tree, VisitorState state) {\n+        return checkTree(tree, ASTHelpers.getSymbol(tree), state);\n+    }\n+\n+    private Description checkTree(Tree tree, Symbol.MethodSymbol method, VisitorState state) {\n+        if (!ASTHelpers.hasAnnotation(method, INCUBATING, state)) {", "originalCommit": "a373c08f957be0e49000340ade89ae2ba8135301", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzI0ODU0MQ==", "url": "https://github.com/palantir/gradle-baseline/pull/1554#discussion_r527248541", "bodyText": "That is a good idea.", "author": "blacksmithgu", "createdAt": "2020-11-19T22:32:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzIyOTkzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzIzMTU2Ng==", "url": "https://github.com/palantir/gradle-baseline/pull/1554#discussion_r527231566", "bodyText": "Might be simpler to add a testCompile dependency on conjure-lib so we don't have to define this in tests, and we know we're using the right fqcn", "author": "carterkozak", "createdAt": "2020-11-19T22:02:03Z", "path": "baseline-error-prone/src/test/java/com/palantir/baseline/errorprone/IncubatingMethodTest.java", "diffHunk": "@@ -0,0 +1,112 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.baseline.errorprone;\n+\n+import com.google.errorprone.CompilationTestHelper;\n+import org.junit.Test;\n+\n+public class IncubatingMethodTest {\n+\n+    // We define our own simple conjure incubating annotation at the right path:\n+    private static final String[] ANNOTATION_DEFINITION =\n+            new String[] {\"package com.palantir.conjure.java.lib.internal;\", \"public @interface Incubating {}\"};", "originalCommit": "96c83843841a6c5726b9becd1a7e3be76ca952fc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzI0OTQxNA==", "url": "https://github.com/palantir/gradle-baseline/pull/1554#discussion_r527249414", "bodyText": "Sure, that makes sense. Had to remember how to use version.props correctly...", "author": "blacksmithgu", "createdAt": "2020-11-19T22:34:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzIzMTU2Ng=="}], "type": "inlineReview"}, {"oid": "196f92273cb7b3a6ef1105bc1c76e66fde09cc9a", "url": "https://github.com/palantir/gradle-baseline/commit/196f92273cb7b3a6ef1105bc1c76e66fde09cc9a", "message": "Add conjure-lib test dependency, reusable matcher\n\nTo ensure we get a compile break if @Incubating ever moves.", "committedDate": "2020-11-19T22:35:11Z", "type": "commit"}, {"oid": "9c0d79af10cc9b6249816757ba137f6a11ea9093", "url": "https://github.com/palantir/gradle-baseline/commit/9c0d79af10cc9b6249816757ba137f6a11ea9093", "message": "Fix entry in README, add changelog", "committedDate": "2020-11-19T22:44:12Z", "type": "commit"}, {"oid": "c1a8af5da038338f6bfc7027753b5458fc479dd2", "url": "https://github.com/palantir/gradle-baseline/commit/c1a8af5da038338f6bfc7027753b5458fc479dd2", "message": "Fix version lock & formatting", "committedDate": "2020-11-19T22:56:43Z", "type": "commit"}]}