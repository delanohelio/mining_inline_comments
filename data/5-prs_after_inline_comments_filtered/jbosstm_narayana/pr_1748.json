{"pr_number": 1748, "pr_title": "JBTM-3213 Allow request timeouts to be configurable. Enable throttlin\u2026", "pr_createdAt": "2020-12-16T09:32:58Z", "pr_url": "https://github.com/jbosstm/narayana/pull/1748", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDM0Mzk2MA==", "url": "https://github.com/jbosstm/narayana/pull/1748#discussion_r544343960", "bodyText": "Would not be good to have one system property to define all client timeout values at once and on top of that to provide ability to granularly change the particular value?", "author": "ochaloup", "createdAt": "2020-12-16T14:31:26Z", "path": "rts/lra/client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java", "diffHunk": "@@ -124,7 +124,11 @@\n      * WARNING: NarayanaLRAClient is an internal utility class and is subject to change\n      * (but it will be made available with improved guarantees in a subsequent release).\n      */\n-    private static final long CLIENT_TIMEOUT = Long.getLong(\"lra.internal.client.timeout\", 10);", "originalCommit": "098d46097f3a0e8957d4507717a80564eccca055", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDkxOTIzNQ==", "url": "https://github.com/jbosstm/narayana/pull/1748#discussion_r544919235", "bodyText": "Well that would be more code than I wanted to provide at this stage and we'd have document clearly which properties take precedence over others. I will rename the properties so that we can do what you request in a future revision, something like:\n    private static final long CLIENT_TIMEOUT = Long.getLong(\"lra.internal.client.timeout\", 10);\n    private static final long START_TIMEOUT = Long.getLong(\"lra.internal.client.timeout.start\", 10);\n    private static final long JOIN_TIMEOUT = Long.getLong(\"lra.internal.client.timeout.join\", 10);\netc", "author": "mmusgrov", "createdAt": "2020-12-17T09:00:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDM0Mzk2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDk0MzIxNw==", "url": "https://github.com/jbosstm/narayana/pull/1748#discussion_r544943217", "bodyText": "ok", "author": "ochaloup", "createdAt": "2020-12-17T09:36:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDM0Mzk2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTA3NDEyNw==", "url": "https://github.com/jbosstm/narayana/pull/1748#discussion_r545074127", "bodyText": "Actually the change was rather trivial so I incorporated it into the PR.", "author": "mmusgrov", "createdAt": "2020-12-17T13:04:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDM0Mzk2MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDM1MTU2NQ==", "url": "https://github.com/jbosstm/narayana/pull/1748#discussion_r544351565", "bodyText": "I'm interested what is the reason for taking the faultolerance @Bulkhead on start method.\nHaving the fault tolerance capability is probably fine but why not other options (e.g. @Retry)? Why we want to work with only 10 parallel requests - what is the reason? Are we fine in adding one more dependency to the mix for the LRA processing?", "author": "ochaloup", "createdAt": "2020-12-16T14:41:16Z", "path": "rts/lra/coordinator/src/main/java/io/narayana/lra/coordinator/api/Coordinator.java", "diffHunk": "@@ -189,6 +191,7 @@ public LRAData getLRAInfo(\n     @POST\n     @Path(\"start\")\n     @Produces(MediaType.TEXT_PLAIN)\n+    @Bulkhead", "originalCommit": "098d46097f3a0e8957d4507717a80564eccca055", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDkyNTM2Mg==", "url": "https://github.com/jbosstm/narayana/pull/1748#discussion_r544925362", "bodyText": "Because we want to protect the coordinator against overload. This PR is to address a particular issue I found during my stress testing of the coordinator (the issue really needs to be a blocker). Throttling start requests will reduce the number of active LRAs that the coordinator manages. So applying a bulkhead to start will reduce the total number of parallel LRAs to a manageable number and the other coordinator requests will all apply to this reduced number of LRAs.\nI chose the default because, well it is the default. The user may then configure a value that is appropriate to his installation (using the usual MP FT config mechanism).\nI didn't need any of the other FT annotations because the intent of the PR is to protect the coordinator. In the PR description I did explain why we don't use most of the FT features:\n\nThere is a lot we can do in this area [fault resilience] and we have a few JIRAs for tackling the various requirements. But this PR is a basic minimum to reduce the number of errors caused by overloading the system in which LRA operates.", "author": "mmusgrov", "createdAt": "2020-12-17T09:09:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDM1MTU2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDkzNzkxOQ==", "url": "https://github.com/jbosstm/narayana/pull/1748#discussion_r544937919", "bodyText": "Generally, this PR looks good. But I just want to point out that @Bulkhead is only reducing concurrent executions of the method thus at max 10 threads can run start at the same time but that doesn't correspond to the reduction of the number of active LRAs that the coordinator manages. The erroneous state can still be reached but it would take a few retries on the /start calls.", "author": "xstefank", "createdAt": "2020-12-17T09:28:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDM1MTU2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDk0NDY1Mg==", "url": "https://github.com/jbosstm/narayana/pull/1748#discussion_r544944652", "bodyText": "@mmusgrov sure, I was not aware about the problem from the stress testing. Then this makes sense. Thanks.", "author": "ochaloup", "createdAt": "2020-12-17T09:38:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDM1MTU2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTA3NDcxOQ==", "url": "https://github.com/jbosstm/narayana/pull/1748#discussion_r545074719", "bodyText": "I ran a local test to ensure that the Bulkhead was being respected.", "author": "mmusgrov", "createdAt": "2020-12-17T13:05:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDM1MTU2NQ=="}], "type": "inlineReview"}, {"oid": "0fe9ee8db312deb0b96e3928f48c1bba15dc2f43", "url": "https://github.com/jbosstm/narayana/commit/0fe9ee8db312deb0b96e3928f48c1bba15dc2f43", "message": "JBTM-3213 Allow request timeouts to be configurable. Enable throttling of requests to start new LRAs.", "committedDate": "2020-12-17T12:48:51Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTEwOTYwOQ==", "url": "https://github.com/jbosstm/narayana/pull/1748#discussion_r545109609", "bodyText": "I like this change ;-)", "author": "ochaloup", "createdAt": "2020-12-17T13:58:23Z", "path": "rts/lra/jaxrs/src/main/java/io/narayana/lra/filter/ServerLRAFilter.java", "diffHunk": "@@ -87,8 +87,7 @@\n \n     private static final Pattern START_END_QUOTES_PATTERN = Pattern.compile(\"^\\\"|\\\"$\");\n     private static final long DEFAULT_TIMEOUT_MILLIS = 0L;\n-    // i18nMessageCode corresponding to lraI18NLogger#warn_LRAStatusInDoubt\n-    private static final int i18nMessageCode = 25145;", "originalCommit": "0fe9ee8db312deb0b96e3928f48c1bba15dc2f43", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "90f1b20fcb5b35c07fcfa1dc54f00b5fa19967bc", "url": "https://github.com/jbosstm/narayana/commit/90f1b20fcb5b35c07fcfa1dc54f00b5fa19967bc", "message": "JBTM-3213 Allow request timeouts to be configurable. Enable throttling of requests to start new LRAs.", "committedDate": "2020-12-17T14:34:34Z", "type": "commit"}, {"oid": "90f1b20fcb5b35c07fcfa1dc54f00b5fa19967bc", "url": "https://github.com/jbosstm/narayana/commit/90f1b20fcb5b35c07fcfa1dc54f00b5fa19967bc", "message": "JBTM-3213 Allow request timeouts to be configurable. Enable throttling of requests to start new LRAs.", "committedDate": "2020-12-17T14:34:34Z", "type": "forcePushed"}]}