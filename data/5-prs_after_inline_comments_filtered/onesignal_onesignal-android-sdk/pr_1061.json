{"pr_number": 1061, "pr_title": "Only attempt to get Google ad_id if using FCM", "pr_createdAt": "2020-06-11T10:26:19Z", "pr_url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1061", "timeline": [{"oid": "ba29807fb50daa2a969eada72622e62c0be0d2b6", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/ba29807fb50daa2a969eada72622e62c0be0d2b6", "message": "Only attempt to get Google ad_id if using FCM\n\n* This cleans up the \"Error getting Google Ad id\"  on HMS only devices", "committedDate": "2020-06-11T11:40:36Z", "type": "commit"}, {"oid": "ba29807fb50daa2a969eada72622e62c0be0d2b6", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/ba29807fb50daa2a969eada72622e62c0be0d2b6", "message": "Only attempt to get Google ad_id if using FCM\n\n* This cleans up the \"Error getting Google Ad id\"  on HMS only devices", "committedDate": "2020-06-11T11:40:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg3ODgyMg==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1061#discussion_r438878822", "bodyText": "maybe put on the same if?", "author": "Jeasmine", "createdAt": "2020-06-11T15:36:32Z", "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignal.java", "diffHunk": "@@ -452,7 +452,15 @@ public void onSessionEnding(@NonNull List<OSInfluence> lastInfluences) {\n    @Nullable private static OSOutcomeEventsController outcomeEventsController;\n    @Nullable private static OSOutcomeEventsFactory outcomeEventsFactory;\n \n-   private static AdvertisingIdentifierProvider mainAdIdProvider = new AdvertisingIdProviderGPS();\n+   @Nullable private static AdvertisingIdentifierProvider adIdProvider;\n+   private static synchronized @Nullable AdvertisingIdentifierProvider getAdIdProvider() {\n+      if (adIdProvider == null) {\n+         if (OSUtils.isAndroidDeviceType())", "originalCommit": "ba29807fb50daa2a969eada72622e62c0be0d2b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTExMDQyNA==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1061#discussion_r439110424", "bodyText": "I set it up nested like this as we may want to add an else if (OSUtils.isHuaweiDeviceType() ect if we can support other ad providers in the future.", "author": "jkasten2", "createdAt": "2020-06-11T22:42:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg3ODgyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTExMDc0NQ==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1061#discussion_r439110745", "bodyText": "sounds good!", "author": "Jeasmine", "createdAt": "2020-06-11T22:43:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg3ODgyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM0ODMxOA==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1061#discussion_r439348318", "bodyText": "4. should be 5.", "author": "mikechoch", "createdAt": "2020-06-12T10:52:02Z", "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/MainOneSignalClassRunner.java", "diffHunk": "@@ -322,6 +323,59 @@ public void testDeviceTypeIsAmazon_forPlayerCreate() throws Exception {\n       assertAmazonPlayerCreateAtIndex(1);\n    }\n \n+   @Test\n+   public void testAmazonDoesNotGetAdId() throws Exception {\n+      // 1. Mock Amazon device type for this test\n+      ShadowOSUtils.supportsADM = true;\n+\n+      // 2. Init OneSignal so the app id is cached\n+      OneSignalInit();\n+      threadAndTaskWait();\n+\n+      // 3. Make sure device_type is Amazon (2) in player create\n+      assertAmazonPlayerCreateAtIndex(1);\n+\n+      // 4. Assert Player Create does NOT have an ad_id\n+      ShadowOneSignalRestClient.Request request = ShadowOneSignalRestClient.requests.get(1);\n+      JsonAsserts.doesNotContainKeys(request.payload, new ArrayList<String>() {{ add(\"ad_id\"); }});\n+\n+      // 4. Assert we did NOT try to get a Google Ad id\n+      assertFalse(ShadowAdvertisingIdProviderGPS.calledGetIdentifier);\n+   }\n+\n+   @Test\n+   public void testDeviceTypeIsHuawei_forPlayerCreate() throws Exception {\n+      // 1. Mock Amazon device type for this test\n+      ShadowOSUtils.supportsHMS(true);\n+\n+      // 2. Init OneSignal so the app id is cached\n+      OneSignalInit();\n+      threadAndTaskWait();\n+\n+      // 3. Make sure device_type is Huawei (13) in player create\n+      assertHuaweiPlayerCreateAtIndex(1);\n+   }\n+\n+   @Test\n+   public void testHuaweiDoesNotGetAdId() throws Exception {\n+      // 1. Mock Huawei device type for this test\n+      ShadowOSUtils.supportsHMS(true);\n+\n+      // 2. Init OneSignal so the app id is cached\n+      OneSignalInit();\n+      threadAndTaskWait();\n+\n+      // 3. Make sure device_type is Huawei (13) in player create\n+      assertHuaweiPlayerCreateAtIndex(1);\n+\n+      // 4. Assert Player Create does NOT have an ad_id\n+      ShadowOneSignalRestClient.Request request = ShadowOneSignalRestClient.requests.get(1);\n+      JsonAsserts.doesNotContainKeys(request.payload, new ArrayList<String>() {{ add(\"ad_id\"); }});\n+\n+      // 4. Assert we did NOT try to get a Google Ad id", "originalCommit": "c0d23c3605f7e02f34a810e88a9860f13f04c2e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM1NDgzNQ==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1061#discussion_r439354835", "bodyText": "Done", "author": "jkasten2", "createdAt": "2020-06-12T11:05:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM0ODMxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM0ODQ1OA==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1061#discussion_r439348458", "bodyText": "4. should be 5.", "author": "mikechoch", "createdAt": "2020-06-12T10:52:18Z", "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/MainOneSignalClassRunner.java", "diffHunk": "@@ -322,6 +323,59 @@ public void testDeviceTypeIsAmazon_forPlayerCreate() throws Exception {\n       assertAmazonPlayerCreateAtIndex(1);\n    }\n \n+   @Test\n+   public void testAmazonDoesNotGetAdId() throws Exception {\n+      // 1. Mock Amazon device type for this test\n+      ShadowOSUtils.supportsADM = true;\n+\n+      // 2. Init OneSignal so the app id is cached\n+      OneSignalInit();\n+      threadAndTaskWait();\n+\n+      // 3. Make sure device_type is Amazon (2) in player create\n+      assertAmazonPlayerCreateAtIndex(1);\n+\n+      // 4. Assert Player Create does NOT have an ad_id\n+      ShadowOneSignalRestClient.Request request = ShadowOneSignalRestClient.requests.get(1);\n+      JsonAsserts.doesNotContainKeys(request.payload, new ArrayList<String>() {{ add(\"ad_id\"); }});\n+\n+      // 4. Assert we did NOT try to get a Google Ad id", "originalCommit": "c0d23c3605f7e02f34a810e88a9860f13f04c2e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM1NDg3MA==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1061#discussion_r439354870", "bodyText": "Done", "author": "jkasten2", "createdAt": "2020-06-12T11:05:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM0ODQ1OA=="}], "type": "inlineReview"}, {"oid": "dfb9729dfb1aca67f3331ef24e21a0583aa7a377", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/dfb9729dfb1aca67f3331ef24e21a0583aa7a377", "message": "Added ad_id tests for Huawei and Amazon devices\n\n* Make sure we don't try to send an ad_id for these devices as\nwe don't have a provider for them.\n* Make sure we don't attempt to get a google provided one either", "committedDate": "2020-06-12T11:05:31Z", "type": "commit"}, {"oid": "dfb9729dfb1aca67f3331ef24e21a0583aa7a377", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/dfb9729dfb1aca67f3331ef24e21a0583aa7a377", "message": "Added ad_id tests for Huawei and Amazon devices\n\n* Make sure we don't try to send an ad_id for these devices as\nwe don't have a provider for them.\n* Make sure we don't attempt to get a google provided one either", "committedDate": "2020-06-12T11:05:31Z", "type": "forcePushed"}]}