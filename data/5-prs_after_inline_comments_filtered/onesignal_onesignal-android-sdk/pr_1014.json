{"pr_number": 1014, "pr_title": "Implementing new NotificationWillShowInForegroundHandlers", "pr_createdAt": "2020-05-13T19:50:03Z", "pr_url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1014", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDczNTAxOA==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1014#discussion_r424735018", "bodyText": "reformat code in here, space between if and (", "author": "Jeasmine", "createdAt": "2020-05-13T21:14:34Z", "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignal.java", "diffHunk": "@@ -2001,18 +2084,53 @@ public void run() {\n       });\n    }\n \n-   // Called when receiving FCM/ADM message after it has been displayed.\n-   // Or right when it is received if it is a silent one\n-   //   If a NotificationExtenderService is present in the developers app this will not fire for silent notifications.\n-   static void handleNotificationReceived(JSONArray data, boolean displayed) {\n-      OSNotificationOpenResult openResult = generateOsNotificationOpenResult(data, displayed);\n-      if(trackFirebaseAnalytics != null && getFirebaseAnalyticsEnabled())\n-         trackFirebaseAnalytics.trackReceivedEvent(openResult);\n+   /**\n+    * Called when receiving FCM/ADM message after it has been displayed.\n+    * Or right when it is received if it is a silent one\n+    *   If a NotificationExtenderService is present in the developers app this will not fire for silent notifications.\n+    */\n+   static void handleNotificationReceived(OSNotificationGenerationJob notifJob, boolean displayed) {\n+      int androidNotificationId = notifJob.getAndroidId();\n+\n+      try {\n+         JSONObject jsonObject = new JSONObject(notifJob.jsonPayload.toString());\n+         jsonObject.put(\"notificationId\", androidNotificationId);\n+\n+         OSNotificationOpenResult openResult = generateOsNotificationOpenResult(newJsonArray(jsonObject), displayed);\n+         if(trackFirebaseAnalytics != null && getFirebaseAnalyticsEnabled())", "originalCommit": "b96b76cabea3f4854b03c5cf19e459ef19adafef", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDczNzQ5OA==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1014#discussion_r424737498", "bodyText": "something I already should know, but whyt is the generating job need a context?", "author": "Jeasmine", "createdAt": "2020-05-13T21:19:33Z", "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OSNotificationGenerationJob.java", "diffHunk": "@@ -0,0 +1,258 @@\n+/**\n+ * Modified MIT License\n+ *\n+ * Copyright 2017 OneSignal\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * 1. The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * 2. All copies of substantial portions of the Software may only be used in connection\n+ * with services provided by OneSignal.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+\n+package com.onesignal;\n+\n+\n+import android.content.Context;\n+import android.net.Uri;\n+import android.os.Handler;\n+\n+import com.onesignal.OneSignal.OSNotificationDisplay;\n+\n+import org.json.JSONObject;\n+\n+import java.security.SecureRandom;\n+\n+public class OSNotificationGenerationJob {\n+\n+   Context context;", "originalCommit": "b96b76cabea3f4854b03c5cf19e459ef19adafef", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDczODEwOA==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1014#discussion_r424738108", "bodyText": "maybe we can start having this strings as constants?", "author": "Jeasmine", "createdAt": "2020-05-13T21:20:48Z", "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OSNotificationGenerationJob.java", "diffHunk": "@@ -0,0 +1,258 @@\n+/**\n+ * Modified MIT License\n+ *\n+ * Copyright 2017 OneSignal\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * 1. The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * 2. All copies of substantial portions of the Software may only be used in connection\n+ * with services provided by OneSignal.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+\n+package com.onesignal;\n+\n+\n+import android.content.Context;\n+import android.net.Uri;\n+import android.os.Handler;\n+\n+import com.onesignal.OneSignal.OSNotificationDisplay;\n+\n+import org.json.JSONObject;\n+\n+import java.security.SecureRandom;\n+\n+public class OSNotificationGenerationJob {\n+\n+   Context context;\n+   JSONObject jsonPayload;\n+   boolean isRestoring;\n+   boolean isIamPreview;\n+   OSNotificationDisplay displayOption = OSNotificationDisplay.NOTIFICATION;\n+\n+   Long shownTimeStamp;\n+\n+   CharSequence overriddenBodyFromExtender;\n+   CharSequence overriddenTitleFromExtender;\n+   Uri overriddenSound;\n+   Integer overriddenFlags;\n+   Integer orgFlags;\n+   Uri orgSound;\n+\n+   NotificationExtenderService.OverrideSettings overrideSettings;\n+\n+   OSNotificationGenerationJob(Context context) {\n+      this.context = context;\n+   }\n+\n+   CharSequence getTitle() {\n+      if (overriddenTitleFromExtender != null)\n+         return overriddenTitleFromExtender;\n+      return jsonPayload.optString(\"title\", null);", "originalCommit": "b96b76cabea3f4854b03c5cf19e459ef19adafef", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDczODg1Ng==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1014#discussion_r424738856", "bodyText": "make sense to change it to 2020?", "author": "Jeasmine", "createdAt": "2020-05-13T21:22:24Z", "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OSNotificationGenerationJob.java", "diffHunk": "@@ -0,0 +1,258 @@\n+/**\n+ * Modified MIT License\n+ *\n+ * Copyright 2017 OneSignal", "originalCommit": "b96b76cabea3f4854b03c5cf19e459ef19adafef", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDczOTUxNA==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1014#discussion_r424739514", "bodyText": "Without no camelcase", "author": "Jeasmine", "createdAt": "2020-05-13T21:23:48Z", "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OSNotificationGenerationJob.java", "diffHunk": "@@ -0,0 +1,258 @@\n+/**\n+ * Modified MIT License\n+ *\n+ * Copyright 2017 OneSignal\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * 1. The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * 2. All copies of substantial portions of the Software may only be used in connection\n+ * with services provided by OneSignal.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+\n+package com.onesignal;\n+\n+\n+import android.content.Context;\n+import android.net.Uri;\n+import android.os.Handler;\n+\n+import com.onesignal.OneSignal.OSNotificationDisplay;\n+\n+import org.json.JSONObject;\n+\n+import java.security.SecureRandom;\n+\n+public class OSNotificationGenerationJob {\n+\n+   Context context;\n+   JSONObject jsonPayload;\n+   boolean isRestoring;\n+   boolean isIamPreview;\n+   OSNotificationDisplay displayOption = OSNotificationDisplay.NOTIFICATION;\n+\n+   Long shownTimeStamp;\n+\n+   CharSequence overriddenBodyFromExtender;\n+   CharSequence overriddenTitleFromExtender;\n+   Uri overriddenSound;\n+   Integer overriddenFlags;\n+   Integer orgFlags;\n+   Uri orgSound;\n+\n+   NotificationExtenderService.OverrideSettings overrideSettings;\n+\n+   OSNotificationGenerationJob(Context context) {\n+      this.context = context;\n+   }\n+\n+   CharSequence getTitle() {\n+      if (overriddenTitleFromExtender != null)\n+         return overriddenTitleFromExtender;\n+      return jsonPayload.optString(\"title\", null);\n+   }\n+   \n+   CharSequence getBody() {\n+      if (overriddenBodyFromExtender != null)\n+         return overriddenBodyFromExtender;\n+      return jsonPayload.optString(\"alert\", null);\n+   }\n+   \n+   Integer getAndroidId() {\n+      if (overrideSettings == null)\n+         overrideSettings = new NotificationExtenderService.OverrideSettings();\n+      if (overrideSettings.androidNotificationId == null)\n+         overrideSettings.androidNotificationId = new SecureRandom().nextInt();\n+      \n+      return overrideSettings.androidNotificationId;\n+   }\n+\n+   int getAndroidIdWithoutCreate() {\n+      if (overrideSettings == null || overrideSettings.androidNotificationId == null)\n+         return -1;\n+\n+      return overrideSettings.androidNotificationId;\n+   }\n+\n+   /**\n+    * If notificationId is -1 then the notification is a silent one\n+    */\n+   boolean isNotificationToDisplay() {\n+      return getAndroidIdWithoutCreate() != -1;\n+   }\n+\n+   String getApiNotificationId() {\n+      return OneSignal.getNotificationIdFromFCMJson(jsonPayload);\n+   }\n+\n+   void setAndroidIdWithOutOverriding(Integer id) {", "originalCommit": "b96b76cabea3f4854b03c5cf19e459ef19adafef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0MDQ1Mg==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1014#discussion_r424740452", "bodyText": "maybe setAndroidIdOnOverrideSettings?", "author": "Jeasmine", "createdAt": "2020-05-13T21:25:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDczOTUxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg1Njk2MQ==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1014#discussion_r424856961", "bodyText": "This is called setAndroidIdWithoutOverriding because it only lets you set an Android id in the case where no overrides settings have been set yet and no Android id has been set yet", "author": "mikechoch", "createdAt": "2020-05-14T03:57:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDczOTUxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc4ODQ2MQ==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1014#discussion_r426788461", "bodyText": "Fixed the camel case issue", "author": "mikechoch", "createdAt": "2020-05-18T17:34:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDczOTUxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0MTE1OA==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1014#discussion_r424741158", "bodyText": "can this method be called more than once? and have overridden the handler?", "author": "Jeasmine", "createdAt": "2020-05-13T21:27:09Z", "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OSNotificationGenerationJob.java", "diffHunk": "@@ -0,0 +1,258 @@\n+/**\n+ * Modified MIT License\n+ *\n+ * Copyright 2017 OneSignal\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * 1. The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * 2. All copies of substantial portions of the Software may only be used in connection\n+ * with services provided by OneSignal.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+\n+package com.onesignal;\n+\n+\n+import android.content.Context;\n+import android.net.Uri;\n+import android.os.Handler;\n+\n+import com.onesignal.OneSignal.OSNotificationDisplay;\n+\n+import org.json.JSONObject;\n+\n+import java.security.SecureRandom;\n+\n+public class OSNotificationGenerationJob {\n+\n+   Context context;\n+   JSONObject jsonPayload;\n+   boolean isRestoring;\n+   boolean isIamPreview;\n+   OSNotificationDisplay displayOption = OSNotificationDisplay.NOTIFICATION;\n+\n+   Long shownTimeStamp;\n+\n+   CharSequence overriddenBodyFromExtender;\n+   CharSequence overriddenTitleFromExtender;\n+   Uri overriddenSound;\n+   Integer overriddenFlags;\n+   Integer orgFlags;\n+   Uri orgSound;\n+\n+   NotificationExtenderService.OverrideSettings overrideSettings;\n+\n+   OSNotificationGenerationJob(Context context) {\n+      this.context = context;\n+   }\n+\n+   CharSequence getTitle() {\n+      if (overriddenTitleFromExtender != null)\n+         return overriddenTitleFromExtender;\n+      return jsonPayload.optString(\"title\", null);\n+   }\n+   \n+   CharSequence getBody() {\n+      if (overriddenBodyFromExtender != null)\n+         return overriddenBodyFromExtender;\n+      return jsonPayload.optString(\"alert\", null);\n+   }\n+   \n+   Integer getAndroidId() {\n+      if (overrideSettings == null)\n+         overrideSettings = new NotificationExtenderService.OverrideSettings();\n+      if (overrideSettings.androidNotificationId == null)\n+         overrideSettings.androidNotificationId = new SecureRandom().nextInt();\n+      \n+      return overrideSettings.androidNotificationId;\n+   }\n+\n+   int getAndroidIdWithoutCreate() {\n+      if (overrideSettings == null || overrideSettings.androidNotificationId == null)\n+         return -1;\n+\n+      return overrideSettings.androidNotificationId;\n+   }\n+\n+   /**\n+    * If notificationId is -1 then the notification is a silent one\n+    */\n+   boolean isNotificationToDisplay() {\n+      return getAndroidIdWithoutCreate() != -1;\n+   }\n+\n+   String getApiNotificationId() {\n+      return OneSignal.getNotificationIdFromFCMJson(jsonPayload);\n+   }\n+\n+   void setAndroidIdWithOutOverriding(Integer id) {\n+      if (id == null)\n+         return;\n+\n+      if (overrideSettings != null && overrideSettings.androidNotificationId != null)\n+         return;\n+\n+      if (overrideSettings == null)\n+         overrideSettings = new NotificationExtenderService.OverrideSettings();\n+      overrideSettings.androidNotificationId = id;\n+   }\n+\n+   boolean hasExtender() {\n+      return overrideSettings != null && overrideSettings.extender != null;\n+   }\n+\n+   private void setNotificationDisplayOption(OSNotificationDisplay displayOption) {\n+      this.displayOption = displayOption;\n+   }\n+\n+   ExtNotificationGenerationJob toExtNotificationGenerationJob() {\n+      return new ExtNotificationGenerationJob(this);\n+   }\n+\n+   AppNotificationGenerationJob toAppNotificationGenerationJob() {\n+      return new AppNotificationGenerationJob(this);\n+   }\n+\n+   /**\n+    * A wrapper for the {@link OSNotificationGenerationJob}\n+    * Contains two other classes which implement this one {@link NotificationGenerationJob}:\n+    *    1. {@link ExtNotificationGenerationJob}\n+    *    2. {@link AppNotificationGenerationJob}\n+    */\n+   private static class NotificationGenerationJob {\n+\n+      // Timeout in seconds before applying defaults\n+      private static final long SHOW_NOTIFICATION_TIMEOUT = 30 * 1_000L;\n+\n+      // The actual notifJob with notification payload data\n+      private OSNotificationGenerationJob notifJob;\n+\n+      // Handler used to timeout the handler if bubble or complete is not called\n+      private Handler timeoutHandler;\n+\n+      NotificationGenerationJob(OSNotificationGenerationJob notifJob) {\n+         this.notifJob = notifJob;\n+      }\n+\n+      void startShowNotificationTimeout(final Runnable timeoutRunnable) {", "originalCommit": "b96b76cabea3f4854b03c5cf19e459ef19adafef", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0MjM3Mg==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1014#discussion_r424742372", "bodyText": "does it make sense to start having this string as constant?", "author": "Jeasmine", "createdAt": "2020-05-13T21:29:53Z", "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignal.java", "diffHunk": "@@ -2001,18 +2084,53 @@ public void run() {\n       });\n    }\n \n-   // Called when receiving FCM/ADM message after it has been displayed.\n-   // Or right when it is received if it is a silent one\n-   //   If a NotificationExtenderService is present in the developers app this will not fire for silent notifications.\n-   static void handleNotificationReceived(JSONArray data, boolean displayed) {\n-      OSNotificationOpenResult openResult = generateOsNotificationOpenResult(data, displayed);\n-      if(trackFirebaseAnalytics != null && getFirebaseAnalyticsEnabled())\n-         trackFirebaseAnalytics.trackReceivedEvent(openResult);\n+   /**\n+    * Called when receiving FCM/ADM message after it has been displayed.\n+    * Or right when it is received if it is a silent one\n+    *   If a NotificationExtenderService is present in the developers app this will not fire for silent notifications.\n+    */\n+   static void handleNotificationReceived(OSNotificationGenerationJob notifJob, boolean displayed) {\n+      int androidNotificationId = notifJob.getAndroidId();\n+\n+      try {\n+         JSONObject jsonObject = new JSONObject(notifJob.jsonPayload.toString());\n+         jsonObject.put(\"notificationId\", androidNotificationId);", "originalCommit": "b96b76cabea3f4854b03c5cf19e459ef19adafef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg1NjI4Nw==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1014#discussion_r424856287", "bodyText": "We shouldnt have any string constants in OneSignal.java\nI will eventually clean this up, but for now we will leave it like this", "author": "mikechoch", "createdAt": "2020-05-14T03:54:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0MjM3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc4ODI3MA==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1014#discussion_r426788270", "bodyText": "I take back the previous comment, Josh made a constant for this and we are suing it now", "author": "mikechoch", "createdAt": "2020-05-18T17:34:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0MjM3Mg=="}], "type": "inlineReview"}, {"oid": "93c0f392864022716ef5284eeb74baf79842d383", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/93c0f392864022716ef5284eeb74baf79842d383", "message": "Refactor prep for `InFocusDisplayOption` in `NotifForegroundHandler`\n* `NotificationWillShowInForegroundHandler` will be responsible for setting the notifications display type if a dev decides so\n  * Alternative is a global setter that also controls the default for `OSNotificationDisplay` if no `NotificationWillShowInForegroundHandler` is set\n  * Renamed `None` to `SILENT` and `Notification` to `NOTIFICATION` to follow a caps snake-case enum convention\n* Removed `InAppAlert` from `InFocusDisplayOption`\n  * Refactored `InFocusDisplayOption` to `OSNotificationDisplay`\n  * Cleaned out `InAppAlert` related `UnitTests`", "committedDate": "2020-05-15T00:02:25Z", "type": "commit"}, {"oid": "dd08bbc2870db30c410205161c45a2c1969a3af5", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/dd08bbc2870db30c410205161c45a2c1969a3af5", "message": "Implementing new NotificationWillShowInForegroundHandlers\n  * 1 can be implemented through the notification extension service and be known as the `ExtNotificationWillShowInForegroundHandler`\n    * This involves a new metadata tag in apps using OneSignal,\n    * On init of OneSignal, searches for an extension service file and save the implementations as global handlers to be used throughout OneSignal codebase\n  * Second one will be implemented through a public OneSignal setter called `setNotificationWillShowInForegroundHandler` and is known as the `AppNotificationWillShowInForegroundHandler`\n    * From these handlers a set of new functionality exists now:\n      * This includes bubbling from ext to app handler to mimic iOS handler before showing notification\n      * Also without bubbling a 30 second timeout will begin counting down before showing notification by default\n  * Renamed `NotificationGenerationJob` to `OSNotificationGenerationJob`\n  * To help keep things private within the handlers, a `NotificationGenerationJob` class was made to be extended by a `ExtNotificationGenerationJob` and `AppNotificationGenerationJob`\n* Removed what is believed to be final Alert based flow for showing a notification\n\n* Unit Tests need to be fixed and new ones added still after validating functionality here\n* Next the Work manager should be implemented to process these one at a time as they come in", "committedDate": "2020-05-15T00:11:35Z", "type": "commit"}, {"oid": "ecaa78d7b8228838cd61d9743aca62dd6c94d09e", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/ecaa78d7b8228838cd61d9743aca62dd6c94d09e", "message": "Fixing review comments\n* Refactored `bubble(boolean bubble)` method to `complete(boolean bubble)`\n* Added additional data getter for `OSNotificationGenerationJob`\n* Added constant keys for params in notification payload\n* Removed `OneSignal.setNotificationDisplayOption` and other related fields", "committedDate": "2020-05-15T00:11:35Z", "type": "commit"}, {"oid": "9e29c87b415ec015ea30b1eeeb3c9357e5d30fd3", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/9e29c87b415ec015ea30b1eeeb3c9357e5d30fd3", "message": "Cleaned up previous commit(s) for this PR\n* UnitTests failing, needed to rework notification display flow a little\n* Removed more Alert based notification code `showNotificationAsAlert`\n* Refactored `ProcessJobForDisplay` to perfection in terms of mimic'ing current master implementation but removing Alert based handling and including new `NotificationWillShowInForegroundHandler`\n* Replaced method `NotificationExtenderService.showNotification` with `GenerateNotification.fromJsonPayload`\n* Removed `OSNotificationGenerationJob` from PackagePrivate helper file because it is public already\n\nDone with fixing unit tests and getting functionality matching previous NotificationReceivedHandler SDK functionality\n* WIP - Need to write new unit tests to test new functionality, this will go in a new PR branched off this PR branch", "committedDate": "2020-05-18T17:31:51Z", "type": "commit"}, {"oid": "9e29c87b415ec015ea30b1eeeb3c9357e5d30fd3", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/9e29c87b415ec015ea30b1eeeb3c9357e5d30fd3", "message": "Cleaned up previous commit(s) for this PR\n* UnitTests failing, needed to rework notification display flow a little\n* Removed more Alert based notification code `showNotificationAsAlert`\n* Refactored `ProcessJobForDisplay` to perfection in terms of mimic'ing current master implementation but removing Alert based handling and including new `NotificationWillShowInForegroundHandler`\n* Replaced method `NotificationExtenderService.showNotification` with `GenerateNotification.fromJsonPayload`\n* Removed `OSNotificationGenerationJob` from PackagePrivate helper file because it is public already\n\nDone with fixing unit tests and getting functionality matching previous NotificationReceivedHandler SDK functionality\n* WIP - Need to write new unit tests to test new functionality, this will go in a new PR branched off this PR branch", "committedDate": "2020-05-18T17:31:51Z", "type": "forcePushed"}, {"oid": "ac6dfbe8d4e3e1ad0dc9ad4ad0af86524fe7cffd", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/ac6dfbe8d4e3e1ad0dc9ad4ad0af86524fe7cffd", "message": "Removed Thread for `ProcessJobForDisplay` to fix UnitTests", "committedDate": "2020-05-18T17:47:34Z", "type": "commit"}]}