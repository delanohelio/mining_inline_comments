{"pr_number": 1110, "pr_title": "Added runtime check before showing a notification", "pr_createdAt": "2020-08-10T14:28:56Z", "pr_url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1110", "timeline": [{"oid": "5cf725f24061e0c36d6824fc06439b50d121e48d", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/5cf725f24061e0c36d6824fc06439b50d121e48d", "message": "Added runtime check before showing a notification\n* Notification should never be processed for display from the Main Thread\n  * This can cause an `ANR` if work is taking too long before showing the notification\n* Created a `OSThrowable` class with a `OSMainThreadException`\n* Fixed `UnitTests` thinking they were on the Main Thread\n  * Added a shadow in `ShadowOSUtils` for `isRunningOnMainThread` method", "committedDate": "2020-08-10T14:28:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODAxMjk5NA==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1110#discussion_r468012994", "bodyText": "any reason for having this \"container\" class?", "author": "Jeasmine", "createdAt": "2020-08-10T16:01:14Z", "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OSThrowable.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/**\n+ * Modified MIT License\n+ *\n+ * Copyright 2020 OneSignal\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * 1. The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * 2. All copies of substantial portions of the Software may only be used in connection\n+ * with services provided by OneSignal.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+\n+package com.onesignal;\n+\n+class OSThrowable {", "originalCommit": "5cf725f24061e0c36d6824fc06439b50d121e48d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODAyMjgxMQ==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1110#discussion_r468022811", "bodyText": "I assume we may want custom OS Exceptions in the future, so now we have a class to keep things separate an organized and easy to access. Do you have a better idea though? Def willing to change this", "author": "mikechoch", "createdAt": "2020-08-10T16:17:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODAxMjk5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODAzNjc4MA==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1110#discussion_r468036780", "bodyText": "Got it, yeah seems right, we can continue with this structure", "author": "Jeasmine", "createdAt": "2020-08-10T16:40:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODAxMjk5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODAxNTYyNA==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1110#discussion_r468015624", "bodyText": "do we need this to be shadowed? shoudn't the test fail if it is running on the main thread? in that way we can fix it", "author": "Jeasmine", "createdAt": "2020-08-10T16:05:37Z", "path": "OneSignalSDK/unittest/src/test/java/com/onesignal/ShadowOSUtils.java", "diffHunk": "@@ -7,9 +7,15 @@\n @Implements(OSUtils.class)\n public class ShadowOSUtils {\n \n+   public static boolean isRunningOnMainThread;\n+\n    public static String carrierName;\n    public static int subscribableStatus;\n \n+   public static boolean isRunningOnMainThread() {", "originalCommit": "5cf725f24061e0c36d6824fc06439b50d121e48d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODAyMzMyMQ==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1110#discussion_r468023321", "bodyText": "UnitTests always think we are on Main Thread and will fail due to the RuntimeException, so now we have a shadow so we can easily test when we want to assume Main Thread or not", "author": "mikechoch", "createdAt": "2020-08-10T16:18:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODAxNTYyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODAzMjExOA==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1110#discussion_r468032118", "bodyText": "yeah, but this shadow is being used in many places, so we are hiding tests that we actually want to check if it is not running on the main thread, josh pointed this on the ANR fix #1099 (comment)\nso if there are tests that are failing due to this runtime exception then we should make those tests don't run on the main thread", "author": "Jeasmine", "createdAt": "2020-08-10T16:32:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODAxNTYyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODExNDI0NQ==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1110#discussion_r468114245", "bodyText": "We would like to have new isRunningOnMainThread check fail in tests when it should, so we know if something broke when travisCI runs.\nAlso this line is dangerous as it will hide other future checks we add to other things.", "author": "jkasten2", "createdAt": "2020-08-10T19:01:02Z", "path": "OneSignalSDK/unittest/src/test/java/com/onesignal/ShadowOSUtils.java", "diffHunk": "@@ -72,14 +78,14 @@ public static void resetStatics() {\n       carrierName = \"test1\";\n       subscribableStatus = 1;\n \n+      isRunningOnMainThread = false;", "originalCommit": "5cf725f24061e0c36d6824fc06439b50d121e48d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODEyMjMwMg==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1110#discussion_r468122302", "bodyText": "Which tests fail if we don't have this line?", "author": "jkasten2", "createdAt": "2020-08-10T19:16:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODExNDI0NQ=="}], "type": "inlineReview"}, {"oid": "f46823553233e9bc70354bcc17910f30d95e827a", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/f46823553233e9bc70354bcc17910f30d95e827a", "message": "Adding the main thread check surfaced a bug\n* Broken logic when processing a duplicate notification\n* This is fixed now and also fixes UnitTests failing from this modified logic\n  * This was change in this PR #1010\n  * Added back the correct logic now and UnitTests pass", "committedDate": "2020-08-11T17:06:18Z", "type": "commit"}, {"oid": "4296b03516f6229da6821d4108d7f7fb9d0d44d3", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/4296b03516f6229da6821d4108d7f7fb9d0d44d3", "message": "Replaced `processJobForDisplay` call with Worker kickoff now\n* Found another spot where we may not be trying to kick off the Worker and hence would lead to showing the notification from the MainThread\n* Also removed the `isRunningOnMainThread` method inside of the `ShadowOSUtils` class", "committedDate": "2020-08-11T19:54:00Z", "type": "commit"}, {"oid": "36d9dfac1682701bc1c0943231ff06b27a2fb570", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/36d9dfac1682701bc1c0943231ff06b27a2fb570", "message": "Fix Test due to Roboelectric custom Main Thread Looper shadowing\n\n  * Added `Looper.prepare`, `Looper.loop`, and `Looper.quit` calls for handling the postDelayed runnables\n  * Add GenerateNotification.java MainThread check shadow\n  * Add to String methods for better log\n  * Make OSTimeoutHandler.java a composition reference instead of inheritance", "committedDate": "2020-08-20T16:51:49Z", "type": "forcePushed"}, {"oid": "d97cdd2b632bd6b50ba95c3d238712635e3f7b59", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/d97cdd2b632bd6b50ba95c3d238712635e3f7b59", "message": "Fix Test due to Roboelectric custom Main Thread Looper shadowing\n\n  * Added `Looper.prepare`, `Looper.loop`, and `Looper.quit` calls for handling the postDelayed runnables\n  * Add GenerateNotification.java MainThread check shadow\n  * Add to String methods for better log\n  * Make OSTimeoutHandler.java a composition reference instead of inheritance", "committedDate": "2020-08-20T17:08:31Z", "type": "forcePushed"}, {"oid": "9db70b8079952fae307a944e037e04a9cb33d6f0", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/9db70b8079952fae307a944e037e04a9cb33d6f0", "message": "Fix Test due to Roboelectric custom Main Thread Looper shadowing\n\n  * Added `Looper.prepare`, `Looper.loop`, and `Looper.quit` calls for handling the postDelayed runnables\n  * Add GenerateNotification.java MainThread check shadow\n  * Add to String methods for better log\n  * Make OSTimeoutHandler.java a composition reference instead of inheritance", "committedDate": "2020-08-20T17:10:06Z", "type": "commit"}, {"oid": "9db70b8079952fae307a944e037e04a9cb33d6f0", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/9db70b8079952fae307a944e037e04a9cb33d6f0", "message": "Fix Test due to Roboelectric custom Main Thread Looper shadowing\n\n  * Added `Looper.prepare`, `Looper.loop`, and `Looper.quit` calls for handling the postDelayed runnables\n  * Add GenerateNotification.java MainThread check shadow\n  * Add to String methods for better log\n  * Make OSTimeoutHandler.java a composition reference instead of inheritance", "committedDate": "2020-08-20T17:10:06Z", "type": "forcePushed"}]}