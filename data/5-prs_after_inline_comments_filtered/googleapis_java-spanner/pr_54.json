{"pr_number": 54, "pr_title": "feat: instrument Spanner client with OpenCensus metrics", "pr_createdAt": "2020-01-31T19:22:05Z", "pr_url": "https://github.com/googleapis/java-spanner/pull/54", "timeline": [{"oid": "e04d07360c9d60ba4fd66947914f3505b3982c5a", "url": "https://github.com/googleapis/java-spanner/commit/e04d07360c9d60ba4fd66947914f3505b3982c5a", "message": "minor patch", "committedDate": "2020-01-31T22:05:52Z", "type": "forcePushed"}, {"oid": "0f1ba031337fb82f80c6bc3ad670efee02b930dc", "url": "https://github.com/googleapis/java-spanner/commit/0f1ba031337fb82f80c6bc3ad670efee02b930dc", "message": "minor patch\n\nminor patch\n\nminor patch\n\nminor patch", "committedDate": "2020-01-31T22:06:38Z", "type": "forcePushed"}, {"oid": "93cbef07872e43e17756e9c37d7b135043812afd", "url": "https://github.com/googleapis/java-spanner/commit/93cbef07872e43e17756e9c37d7b135043812afd", "message": "Add session metrics\n\nminor patch\n\nminor patch\n\nminor patch\n\nminor patch\n\nminor patch\n\nminor patch", "committedDate": "2020-01-31T22:08:11Z", "type": "forcePushed"}, {"oid": "18897d8b2dfc8b96dbeb762dcae2fe80af71744e", "url": "https://github.com/googleapis/java-spanner/commit/18897d8b2dfc8b96dbeb762dcae2fe80af71744e", "message": "feat: add session metrics\nAdd active_sessions (The number of active sessions in use) and max_sessions (The number of max sessions configured the user) metrics", "committedDate": "2020-01-31T22:09:23Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzczNjgzMw==", "url": "https://github.com/googleapis/java-spanner/pull/54#discussion_r373736833", "bodyText": "I am not 100% sure on numSessionsInUse, may be we should use maxSessionsInUse to indicate active sessions in use. Please confirm.", "author": "mayurkale22", "createdAt": "2020-02-01T00:09:50Z", "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/SessionPool.java", "diffHunk": "@@ -1763,4 +1807,52 @@ public void onSessionCreateFailure(Throwable t, int createFailureForSessionCount\n       }\n     }\n   }\n+\n+  /**\n+   * Initializes and Creates Spanner session relevant metrics. When coupled with an exporter, it\n+   * allows users to monitor client behavior.\n+   */\n+  private void initMetricsCollection(MetricRegistry metricRegistry, List<LabelValue> labelValues) {\n+    DerivedLongGauge activeSessionsGauge =\n+        metricRegistry.addDerivedLongGauge(\n+            ACTIVE_SESSIONS,\n+            MetricOptions.builder()\n+                .setDescription(ACTIVE_SESSIONS_DESCRIPTION)\n+                .setUnit(COUNT)\n+                .setLabelKeys(SPANNER_LABEL_KEYS)\n+                .build());\n+\n+    DerivedLongGauge maxSessionsGauge =\n+        metricRegistry.addDerivedLongGauge(\n+            MAX_SESSIONS,\n+            MetricOptions.builder()\n+                .setDescription(MAX_SESSIONS_DESCRIPTION)\n+                .setUnit(COUNT)\n+                .setLabelKeys(SPANNER_LABEL_KEYS)\n+                .build());\n+\n+    // The value of a numSessionsInUse is observed from a callback function. This function is\n+    // invoked whenever metrics are collected.\n+    activeSessionsGauge.createTimeSeries(\n+        labelValues,\n+        this,\n+        new ToLongFunction<SessionPool>() {\n+          @Override\n+          public long applyAsLong(SessionPool sessionPool) {\n+            return sessionPool.numSessionsInUse;", "originalCommit": "18897d8b2dfc8b96dbeb762dcae2fe80af71744e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ0MzMyOQ==", "url": "https://github.com/googleapis/java-spanner/pull/54#discussion_r374443329", "bodyText": "Agree, maxSessionInUse will be more useful. It resets every 10 minutes while the reporting interval is 1 minute. Even if it was reset every 1 minute it would not be aligned. So it needs to reset on read.", "author": "rghetia", "createdAt": "2020-02-04T02:17:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzczNjgzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ0NDAzOQ==", "url": "https://github.com/googleapis/java-spanner/pull/54#discussion_r374444039", "bodyText": "may be \"The number of max session configured\"", "author": "rghetia", "createdAt": "2020-02-04T02:20:18Z", "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/v1/stub/metrics/MetricRegistryConstants.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.google.cloud.spanner.v1.stub.metrics;\n+\n+import com.google.common.collect.ImmutableList;\n+import io.opencensus.metrics.LabelKey;\n+import io.opencensus.metrics.LabelValue;\n+\n+/** A helper class that holds OpenCensus's related constants. */\n+public class MetricRegistryConstants {\n+\n+  // The label keys are used to uniquely identify timeseries.\n+  private static final LabelKey DATABASE = LabelKey.create(\"database\", \"Target database\");\n+  private static final LabelKey INSTANCE_ID =\n+      LabelKey.create(\"instance_id\", \"Name of the instance\");\n+  private static final LabelKey LIBRARY_VERSION =\n+      LabelKey.create(\"library_version\", \"Library version\");\n+\n+  /** The label value is used to represent missing value. */\n+  private static final LabelValue UNSET_LABEL = LabelValue.create(null);\n+\n+  public static final ImmutableList<LabelKey> SPANNER_LABEL_KEYS =\n+      ImmutableList.of(DATABASE, INSTANCE_ID, LIBRARY_VERSION);\n+\n+  public static final ImmutableList<LabelValue> SPANNER_DEFAULT_LABEL_VALUES =\n+      ImmutableList.of(UNSET_LABEL, UNSET_LABEL, UNSET_LABEL);\n+\n+  /** Unit to represent counts. */\n+  public static final String COUNT = \"1\";\n+\n+  // The Metric name and description\n+  public static final String ACTIVE_SESSIONS = \"cloud.google.com/java/spanner/active_sessions\";\n+  public static final String MAX_SESSIONS = \"cloud.google.com/java/spanner/max_sessions\";\n+  public static final String ACTIVE_SESSIONS_DESCRIPTION = \"The number of active sessions\";\n+  public static final String MAX_SESSIONS_DESCRIPTION = \"The number of max sessions\";", "originalCommit": "18897d8b2dfc8b96dbeb762dcae2fe80af71744e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "129ceb1509c019afd66a6666cc4c48a26c7af9e6", "url": "https://github.com/googleapis/java-spanner/commit/129ceb1509c019afd66a6666cc4c48a26c7af9e6", "message": "fix: code reviews\n\nUse maxSessionsInUse instead of numSessionsInUse.\n\nfix: code reviews", "committedDate": "2020-02-04T04:03:49Z", "type": "forcePushed"}, {"oid": "01c202d50ff125c901988e862f4de5587dbc08cd", "url": "https://github.com/googleapis/java-spanner/commit/01c202d50ff125c901988e862f4de5587dbc08cd", "message": "fix: code reviews\n\nUse maxSessionsInUse instead of numSessionsInUse.\n\nfix: code reviews", "committedDate": "2020-02-04T04:12:54Z", "type": "forcePushed"}, {"oid": "88a54262eb662d6be1d7ad734959fcbebcd3445f", "url": "https://github.com/googleapis/java-spanner/commit/88a54262eb662d6be1d7ad734959fcbebcd3445f", "message": "fix: code reviews\n\nUse maxSessionsInUse instead of numSessionsInUse.", "committedDate": "2020-02-04T04:14:25Z", "type": "forcePushed"}, {"oid": "e0aebb612347aad1e5a5cd38dd3a76027ac5f505", "url": "https://github.com/googleapis/java-spanner/commit/e0aebb612347aad1e5a5cd38dd3a76027ac5f505", "message": "fix: code reviews\n\nUse maxSessionsInUse instead of numSessionsInUse and update the description.", "committedDate": "2020-02-04T04:17:53Z", "type": "forcePushed"}, {"oid": "8375592baefa5bcd8fa1370ae265a3b0f31da903", "url": "https://github.com/googleapis/java-spanner/commit/8375592baefa5bcd8fa1370ae265a3b0f31da903", "message": "Fix code reviews\n\nUse maxSessionsInUse instead of numSessionsInUse and update the description.", "committedDate": "2020-02-04T04:20:55Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgxNDIyNQ==", "url": "https://github.com/googleapis/java-spanner/pull/54#discussion_r374814225", "bodyText": "I think the description of this metric should be different, considering it is reading maxSessionsInUse. This value will only increase during a 10 minute interval, and then be reset to zero (and then start increasing again). Suggestion, something like:\n'Max number of sessions in use during the last 10 minutes'.\nI noticed the other discussion about whether to measure numSessionsInUse or maxSessionsInUse. I think both could be valuable for the user, and numSessionsInUse should have a description like 'The number of sessions currently in use'.", "author": "olavloite", "createdAt": "2020-02-04T17:27:28Z", "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/v1/stub/metrics/MetricRegistryConstants.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.google.cloud.spanner.v1.stub.metrics;\n+\n+import com.google.common.collect.ImmutableList;\n+import io.opencensus.metrics.LabelKey;\n+import io.opencensus.metrics.LabelValue;\n+\n+/** A helper class that holds OpenCensus's related constants. */\n+public class MetricRegistryConstants {\n+\n+  // The label keys are used to uniquely identify timeseries.\n+  private static final LabelKey DATABASE = LabelKey.create(\"database\", \"Target database\");\n+  private static final LabelKey INSTANCE_ID =\n+      LabelKey.create(\"instance_id\", \"Name of the instance\");\n+  private static final LabelKey LIBRARY_VERSION =\n+      LabelKey.create(\"library_version\", \"Library version\");\n+\n+  /** The label value is used to represent missing value. */\n+  private static final LabelValue UNSET_LABEL = LabelValue.create(null);\n+\n+  public static final ImmutableList<LabelKey> SPANNER_LABEL_KEYS =\n+      ImmutableList.of(DATABASE, INSTANCE_ID, LIBRARY_VERSION);\n+\n+  public static final ImmutableList<LabelValue> SPANNER_DEFAULT_LABEL_VALUES =\n+      ImmutableList.of(UNSET_LABEL, UNSET_LABEL, UNSET_LABEL);\n+\n+  /** Unit to represent counts. */\n+  public static final String COUNT = \"1\";\n+\n+  // The Metric name and description\n+  public static final String ACTIVE_SESSIONS = \"cloud.google.com/java/spanner/active_sessions\";\n+  public static final String MAX_SESSIONS = \"cloud.google.com/java/spanner/max_sessions\";\n+  public static final String ACTIVE_SESSIONS_DESCRIPTION = \"The number of active sessions\";", "originalCommit": "8375592baefa5bcd8fa1370ae265a3b0f31da903", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgyNTcxNw==", "url": "https://github.com/googleapis/java-spanner/pull/54#discussion_r374825717", "bodyText": "Sure, will change the description for maxSessionsInUse. Could you please elaborate more on numSessionsInUse metric. How is it different from  maxSessionsInUse and how do you think it is useful for users in conjunction with maxSessionsInUse?\nJust so you know, we don't want to add too many metrics due to costs associated with exporting to backend (like stackdriver). Having said that, I am more than happy to include metrics which are meaningful (and useful) for the users to resolve/understand the production issues at some extend.", "author": "mayurkale22", "createdAt": "2020-02-04T17:50:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgxNDIyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgzOTA2OQ==", "url": "https://github.com/googleapis/java-spanner/pull/54#discussion_r374839069", "bodyText": "numSessionsInUse reflects the number of sessions checked out from the pool at this very moment. Depending on probe intervals and average transaction duration, this number might often be measured to be zero for a system under low load. E.g. if the system executes 1 transaction per second, the average transaction duration is 300ms and the value is probed once every 10 seconds, the chances are big that you will often measure the value between two transactions and get a zero. On a system with higher load, measuring this value will give the user a better idea about how the distribution of the transactions are over time. If this value is relatively constant most of the time, but suddenly shows a spike that cannot be correlated with a similar sudden spike in user requests, it might be an indication of a concurrency problem somewhere (locks in the database, concurrency issues in the application itself etc.).\nmaxSessionsInUse reflects the maximum number of numSessionsInUse during the current maintenance window. A maintenance window is a hard-coded 10 minute interval. After a complete maintenance window has passed, the value is reset to 0. The value is updated every time a session is checked out of the pool by the simple calculation maxSessionsInUse = Math.max(numSessionsInUse, maxSessionsInUse).\n\nAs you can conclude from the above (and which I also just now realized ;-)), the maxSessionsInUse has a slight flaw: If no new session is checked out during a maintenance window, the value will remain zero during the entire window, even if there are sessions that are kept checked out during the entire window (i.e. the sessions were checked out during a previous maintenance window).", "author": "olavloite", "createdAt": "2020-02-04T18:16:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgxNDIyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg1NjIyOQ==", "url": "https://github.com/googleapis/java-spanner/pull/54#discussion_r374856229", "bodyText": "Thanks for the explanation. I have added numSessionsInUse metric PTAL.", "author": "mayurkale22", "createdAt": "2020-02-04T18:49:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgxNDIyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg1NjU0NQ==", "url": "https://github.com/googleapis/java-spanner/pull/54#discussion_r374856545", "bodyText": "I would like to get this PR merged before adding other metrics.", "author": "mayurkale22", "createdAt": "2020-02-04T18:50:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgxNDIyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg2MzQ3OQ==", "url": "https://github.com/googleapis/java-spanner/pull/54#discussion_r374863479", "bodyText": "Sorry, I didn't notice this before now: Is there a specific reason that this file is placed in this package? The com.google.cloud.spanner.v1 package and sub-packages only contain generated source files and shouldn't contain any other files. (I'm not 100% sure, but there is a good chance that re-generating the gapic client will also automatically delete all files in the package, which would mean that this file would also be deleted.)", "author": "olavloite", "createdAt": "2020-02-04T19:03:25Z", "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/v1/stub/metrics/MetricRegistryConstants.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.google.cloud.spanner.v1.stub.metrics;", "originalCommit": "4754cf586851d1aeb63ed15fe996f13a48f20cf3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg4NjkxNQ==", "url": "https://github.com/googleapis/java-spanner/pull/54#discussion_r374886915", "bodyText": "done in 8548f8a", "author": "mayurkale22", "createdAt": "2020-02-04T19:50:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg2MzQ3OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg2MzU3OQ==", "url": "https://github.com/googleapis/java-spanner/pull/54#discussion_r374863579", "bodyText": "Same as above regarding the package.", "author": "olavloite", "createdAt": "2020-02-04T19:03:40Z", "path": "google-cloud-spanner/src/test/java/com/google/cloud/spanner/v1/MetricRegistryTestUtils.java", "diffHunk": "@@ -0,0 +1,130 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.google.cloud.spanner.v1;", "originalCommit": "4754cf586851d1aeb63ed15fe996f13a48f20cf3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg4Njk5Mw==", "url": "https://github.com/googleapis/java-spanner/pull/54#discussion_r374886993", "bodyText": "done in 8548f8a", "author": "mayurkale22", "createdAt": "2020-02-04T19:50:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg2MzU3OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ5NDcxMg==", "url": "https://github.com/googleapis/java-spanner/pull/54#discussion_r375494712", "bodyText": "names are confusing. I would suggest\n\n\n\nold\nnew\nDescription\n\n\n\n\nactive_sessions\nmax_in_use_session\nThe max number of sessions concurrently in use during the current 10 minutes interval\n\n\nmax sessions\nmax_allowed_sessions\nThe Maximum number of sessions allowed. Configurable by the user.\n\n\nsessions_in_use\nin_use_sessions\nThe number of sessions currently in use\n\n\n\nAlternatively, in_use can be replaced with 'active' in name and description.\nchecked out has different meaning than active/in_use. If that is appropriate, then it should be used in the name and the description.", "author": "rghetia", "createdAt": "2020-02-05T20:37:55Z", "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/MetricRegistryConstants.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.google.cloud.spanner;\n+\n+import com.google.common.collect.ImmutableList;\n+import io.opencensus.metrics.LabelKey;\n+import io.opencensus.metrics.LabelValue;\n+\n+/** A helper class that holds OpenCensus's related constants. */\n+public class MetricRegistryConstants {\n+\n+  // The label keys are used to uniquely identify timeseries.\n+  private static final LabelKey DATABASE = LabelKey.create(\"database\", \"Target database\");\n+  private static final LabelKey INSTANCE_ID =\n+      LabelKey.create(\"instance_id\", \"Name of the instance\");\n+  private static final LabelKey LIBRARY_VERSION =\n+      LabelKey.create(\"library_version\", \"Library version\");\n+\n+  /** The label value is used to represent missing value. */\n+  private static final LabelValue UNSET_LABEL = LabelValue.create(null);\n+\n+  public static final ImmutableList<LabelKey> SPANNER_LABEL_KEYS =\n+      ImmutableList.of(DATABASE, INSTANCE_ID, LIBRARY_VERSION);\n+\n+  public static final ImmutableList<LabelValue> SPANNER_DEFAULT_LABEL_VALUES =\n+      ImmutableList.of(UNSET_LABEL, UNSET_LABEL, UNSET_LABEL);\n+\n+  /** Unit to represent counts. */\n+  public static final String COUNT = \"1\";\n+\n+  // The Metric name and description\n+  public static final String ACTIVE_SESSIONS = \"cloud.google.com/java/spanner/active_sessions\";\n+  public static final String MAX_SESSIONS = \"cloud.google.com/java/spanner/max_sessions\";\n+  public static final String SESSIONS_IN_USE = \"cloud.google.com/java/spanner/sessions_in_use\";\n+  public static final String ACTIVE_SESSIONS_DESCRIPTION =\n+      \"Max number of sessions in use during the last 10 minutes\";\n+  public static final String MAX_SESSIONS_DESCRIPTION = \"The number of max sessions configured\";\n+  public static final String SESSIONS_IN_USE_DESCRIPTION =\n+      \"The number of sessions checked out from the pool\";", "originalCommit": "8548f8a3cff8fba7778805bdc6161454bbfdc305", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTUzNTM3MA==", "url": "https://github.com/googleapis/java-spanner/pull/54#discussion_r375535370", "bodyText": "Done in e6938bc, decided to use in_use. PTAL", "author": "mayurkale22", "createdAt": "2020-02-05T22:07:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ5NDcxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTY0MDc2OA==", "url": "https://github.com/googleapis/java-spanner/pull/54#discussion_r375640768", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  \"The Maximum number of sessions allowed. Configurable by the user.\";\n          \n          \n            \n                  \"The maximum number of sessions allowed. Configurable by the user.\";", "author": "skuruppu", "createdAt": "2020-02-06T04:58:19Z", "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/MetricRegistryConstants.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.google.cloud.spanner;\n+\n+import com.google.common.collect.ImmutableList;\n+import io.opencensus.metrics.LabelKey;\n+import io.opencensus.metrics.LabelValue;\n+\n+/** A helper class that holds OpenCensus's related constants. */\n+class MetricRegistryConstants {\n+\n+  // The label keys are used to uniquely identify timeseries.\n+  private static final LabelKey DATABASE = LabelKey.create(\"database\", \"Target database\");\n+  private static final LabelKey INSTANCE_ID =\n+      LabelKey.create(\"instance_id\", \"Name of the instance\");\n+  private static final LabelKey LIBRARY_VERSION =\n+      LabelKey.create(\"library_version\", \"Library version\");\n+\n+  /** The label value is used to represent missing value. */\n+  private static final LabelValue UNSET_LABEL = LabelValue.create(null);\n+\n+  static final ImmutableList<LabelKey> SPANNER_LABEL_KEYS =\n+      ImmutableList.of(DATABASE, INSTANCE_ID, LIBRARY_VERSION);\n+\n+  static final ImmutableList<LabelValue> SPANNER_DEFAULT_LABEL_VALUES =\n+      ImmutableList.of(UNSET_LABEL, UNSET_LABEL, UNSET_LABEL);\n+\n+  /** Unit to represent counts. */\n+  static final String COUNT = \"1\";\n+\n+  // The Metric name and description\n+  static final String MAX_IN_USE_SESSIONS = \"cloud.google.com/java/spanner/max_in_use_session\";\n+  static final String MAX_ALLOWED_SESSIONS = \"cloud.google.com/java/spanner/max_allowed_sessions\";\n+  static final String IN_USE_SESSIONS = \"cloud.google.com/java/spanner/in_use_sessions\";\n+  static final String MAX_IN_USE_SESSIONS_DESCRIPTION =\n+      \"The max number of sessions in use during the last 10 minutes interval\";\n+  static final String MAX_ALLOWED_SESSIONS_DESCRIPTION =\n+      \"The Maximum number of sessions allowed. Configurable by the user.\";", "originalCommit": "e6938bc2f8507df551ef3ffea0e7651ca1330f2d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTY0MDc4OA==", "url": "https://github.com/googleapis/java-spanner/pull/54#discussion_r375640788", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  \"The max number of sessions in use during the last 10 minutes interval\";\n          \n          \n            \n                  \"The maximum number of sessions in use during the last 10 minute interval.\";", "author": "skuruppu", "createdAt": "2020-02-06T04:58:27Z", "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/MetricRegistryConstants.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.google.cloud.spanner;\n+\n+import com.google.common.collect.ImmutableList;\n+import io.opencensus.metrics.LabelKey;\n+import io.opencensus.metrics.LabelValue;\n+\n+/** A helper class that holds OpenCensus's related constants. */\n+class MetricRegistryConstants {\n+\n+  // The label keys are used to uniquely identify timeseries.\n+  private static final LabelKey DATABASE = LabelKey.create(\"database\", \"Target database\");\n+  private static final LabelKey INSTANCE_ID =\n+      LabelKey.create(\"instance_id\", \"Name of the instance\");\n+  private static final LabelKey LIBRARY_VERSION =\n+      LabelKey.create(\"library_version\", \"Library version\");\n+\n+  /** The label value is used to represent missing value. */\n+  private static final LabelValue UNSET_LABEL = LabelValue.create(null);\n+\n+  static final ImmutableList<LabelKey> SPANNER_LABEL_KEYS =\n+      ImmutableList.of(DATABASE, INSTANCE_ID, LIBRARY_VERSION);\n+\n+  static final ImmutableList<LabelValue> SPANNER_DEFAULT_LABEL_VALUES =\n+      ImmutableList.of(UNSET_LABEL, UNSET_LABEL, UNSET_LABEL);\n+\n+  /** Unit to represent counts. */\n+  static final String COUNT = \"1\";\n+\n+  // The Metric name and description\n+  static final String MAX_IN_USE_SESSIONS = \"cloud.google.com/java/spanner/max_in_use_session\";\n+  static final String MAX_ALLOWED_SESSIONS = \"cloud.google.com/java/spanner/max_allowed_sessions\";\n+  static final String IN_USE_SESSIONS = \"cloud.google.com/java/spanner/in_use_sessions\";\n+  static final String MAX_IN_USE_SESSIONS_DESCRIPTION =\n+      \"The max number of sessions in use during the last 10 minutes interval\";", "originalCommit": "e6938bc2f8507df551ef3ffea0e7651ca1330f2d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTY0MDk1MQ==", "url": "https://github.com/googleapis/java-spanner/pull/54#discussion_r375640951", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              static final String IN_USE_SESSIONS_DESCRIPTION = \"The number of sessions currently in use\";\n          \n          \n            \n              static final String IN_USE_SESSIONS_DESCRIPTION = \"The number of sessions currently in use.\";", "author": "skuruppu", "createdAt": "2020-02-06T04:59:10Z", "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/MetricRegistryConstants.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.google.cloud.spanner;\n+\n+import com.google.common.collect.ImmutableList;\n+import io.opencensus.metrics.LabelKey;\n+import io.opencensus.metrics.LabelValue;\n+\n+/** A helper class that holds OpenCensus's related constants. */\n+class MetricRegistryConstants {\n+\n+  // The label keys are used to uniquely identify timeseries.\n+  private static final LabelKey DATABASE = LabelKey.create(\"database\", \"Target database\");\n+  private static final LabelKey INSTANCE_ID =\n+      LabelKey.create(\"instance_id\", \"Name of the instance\");\n+  private static final LabelKey LIBRARY_VERSION =\n+      LabelKey.create(\"library_version\", \"Library version\");\n+\n+  /** The label value is used to represent missing value. */\n+  private static final LabelValue UNSET_LABEL = LabelValue.create(null);\n+\n+  static final ImmutableList<LabelKey> SPANNER_LABEL_KEYS =\n+      ImmutableList.of(DATABASE, INSTANCE_ID, LIBRARY_VERSION);\n+\n+  static final ImmutableList<LabelValue> SPANNER_DEFAULT_LABEL_VALUES =\n+      ImmutableList.of(UNSET_LABEL, UNSET_LABEL, UNSET_LABEL);\n+\n+  /** Unit to represent counts. */\n+  static final String COUNT = \"1\";\n+\n+  // The Metric name and description\n+  static final String MAX_IN_USE_SESSIONS = \"cloud.google.com/java/spanner/max_in_use_session\";\n+  static final String MAX_ALLOWED_SESSIONS = \"cloud.google.com/java/spanner/max_allowed_sessions\";\n+  static final String IN_USE_SESSIONS = \"cloud.google.com/java/spanner/in_use_sessions\";\n+  static final String MAX_IN_USE_SESSIONS_DESCRIPTION =\n+      \"The max number of sessions in use during the last 10 minutes interval\";\n+  static final String MAX_ALLOWED_SESSIONS_DESCRIPTION =\n+      \"The Maximum number of sessions allowed. Configurable by the user.\";\n+  static final String IN_USE_SESSIONS_DESCRIPTION = \"The number of sessions currently in use\";", "originalCommit": "e6938bc2f8507df551ef3ffea0e7651ca1330f2d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTY0MTI2OQ==", "url": "https://github.com/googleapis/java-spanner/pull/54#discussion_r375641269", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Initializes and Creates Spanner session relevant metrics. When coupled with an exporter, it\n          \n          \n            \n               * Initializes and creates Spanner session relevant metrics. When coupled with an exporter, it", "author": "skuruppu", "createdAt": "2020-02-06T05:00:55Z", "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/SessionPool.java", "diffHunk": "@@ -1763,4 +1809,73 @@ public void onSessionCreateFailure(Throwable t, int createFailureForSessionCount\n       }\n     }\n   }\n+\n+  /**\n+   * Initializes and Creates Spanner session relevant metrics. When coupled with an exporter, it", "originalCommit": "e6938bc2f8507df551ef3ffea0e7651ca1330f2d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTY0MjYxNw==", "url": "https://github.com/googleapis/java-spanner/pull/54#discussion_r375642617", "bodyText": "I'm not sure what's normal for OpenCensus metrics tests but I was wondering if it makes sense to do something with a session so that the above two metrics have non-zero values.", "author": "skuruppu", "createdAt": "2020-02-06T05:08:33Z", "path": "google-cloud-spanner/src/test/java/com/google/cloud/spanner/SessionPoolTest.java", "diffHunk": "@@ -1545,6 +1561,35 @@ public void run() {\n     assertThat(impl.executePartitionedUpdate(statement)).isEqualTo(1L);\n   }\n \n+  @Test\n+  public void testSessionMetrics() {\n+    options =\n+        SessionPoolOptions.newBuilder()\n+            .setMinSessions(1)\n+            .setMaxSessions(3)\n+            .setMaxIdleSessions(0)\n+            .build();\n+    FakeClock clock = new FakeClock();\n+    clock.currentTimeMillis = System.currentTimeMillis();\n+    FakeMetricRegistry metricRegistry = new FakeMetricRegistry();\n+    List<LabelValue> labelValues =\n+        Arrays.asList(\n+            LabelValue.create(\"database1\"),\n+            LabelValue.create(\"instance1\"),\n+            LabelValue.create(\"1.0.0\"));\n+\n+    pool = createPool(clock, metricRegistry, labelValues);\n+    runMaintainanceLoop(clock, pool, pool.poolMaintainer.numClosureCycles);\n+\n+    MetricsRecord record = metricRegistry.pollRecord();\n+    assertThat(record.metrics).containsEntry(MetricRegistryConstants.MAX_IN_USE_SESSIONS, 0L);\n+    assertThat(record.metrics).containsEntry(MetricRegistryConstants.IN_USE_SESSIONS, 0L);", "originalCommit": "e6938bc2f8507df551ef3ffea0e7651ca1330f2d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTY3Mjk4Ng==", "url": "https://github.com/googleapis/java-spanner/pull/54#discussion_r375672986", "bodyText": "Good point, I used setupMockSessionCreation and get/close session to get some metrics values. Done in 1525a7d PTAL", "author": "mayurkale22", "createdAt": "2020-02-06T07:22:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTY0MjYxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcwODEyMg==", "url": "https://github.com/googleapis/java-spanner/pull/54#discussion_r375708122", "bodyText": "LGTM thanks for updating the test.", "author": "skuruppu", "createdAt": "2020-02-06T08:57:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTY0MjYxNw=="}], "type": "inlineReview"}, {"oid": "5bf757ebdb78fb4c72e5278cbc7fb92cb7f85644", "url": "https://github.com/googleapis/java-spanner/commit/5bf757ebdb78fb4c72e5278cbc7fb92cb7f85644", "message": "feat: add session metrics\nAdd active_sessions (The number of active sessions in use) and max_sessions (The number of max sessions configured the user) metrics", "committedDate": "2020-02-06T05:09:18Z", "type": "commit"}, {"oid": "8bc6fc7ee2656340b4cad4bb99dfef34bceb96be", "url": "https://github.com/googleapis/java-spanner/commit/8bc6fc7ee2656340b4cad4bb99dfef34bceb96be", "message": "Fix code reviews\n\nUse maxSessionsInUse instead of numSessionsInUse and update the description.", "committedDate": "2020-02-06T05:09:18Z", "type": "commit"}, {"oid": "b3c56b50ce5d131d7a74305dcd7e1df493a24e18", "url": "https://github.com/googleapis/java-spanner/commit/b3c56b50ce5d131d7a74305dcd7e1df493a24e18", "message": "Change active sessions description", "committedDate": "2020-02-06T05:09:18Z", "type": "commit"}, {"oid": "893b446e822464fa94f446d920416e127d3c5a84", "url": "https://github.com/googleapis/java-spanner/commit/893b446e822464fa94f446d920416e127d3c5a84", "message": "add numSessionsInUse metric", "committedDate": "2020-02-06T05:09:18Z", "type": "commit"}, {"oid": "f2ebcdf742cb5d99e150e58039e6b147815bae99", "url": "https://github.com/googleapis/java-spanner/commit/f2ebcdf742cb5d99e150e58039e6b147815bae99", "message": "Fix package structure", "committedDate": "2020-02-06T05:09:18Z", "type": "commit"}, {"oid": "6ce5aa60d43e28ca05109122c7565ca0a380b86a", "url": "https://github.com/googleapis/java-spanner/commit/6ce5aa60d43e28ca05109122c7565ca0a380b86a", "message": "rename metric name and description", "committedDate": "2020-02-06T05:09:19Z", "type": "commit"}, {"oid": "6ce5aa60d43e28ca05109122c7565ca0a380b86a", "url": "https://github.com/googleapis/java-spanner/commit/6ce5aa60d43e28ca05109122c7565ca0a380b86a", "message": "rename metric name and description", "committedDate": "2020-02-06T05:09:19Z", "type": "forcePushed"}, {"oid": "67c9690550a68ffe2b704b253710237d08b309ea", "url": "https://github.com/googleapis/java-spanner/commit/67c9690550a68ffe2b704b253710237d08b309ea", "message": "fix nits", "committedDate": "2020-02-06T05:19:51Z", "type": "commit"}, {"oid": "1525a7d9a1eff5b6d2c7a5573c0c597c7a201c2b", "url": "https://github.com/googleapis/java-spanner/commit/1525a7d9a1eff5b6d2c7a5573c0c597c7a201c2b", "message": "createMockSession for metrics validations", "committedDate": "2020-02-06T07:19:04Z", "type": "commit"}]}