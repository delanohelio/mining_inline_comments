{"pr_number": 706, "pr_title": "test: fix ITTransactionManagerAsyncTest", "pr_createdAt": "2020-12-10T11:22:57Z", "pr_url": "https://github.com/googleapis/java-spanner/pull/706", "timeline": [{"oid": "1abfcd932c57fe6efafedffa005c6d6119310539", "url": "https://github.com/googleapis/java-spanner/commit/1abfcd932c57fe6efafedffa005c6d6119310539", "message": "test: fix test that would not run on both emulator and real Spanner", "committedDate": "2020-12-10T11:18:19Z", "type": "commit"}, {"oid": "e18ebd8e4355938bf755aaf9964b91d85320232f", "url": "https://github.com/googleapis/java-spanner/commit/e18ebd8e4355938bf755aaf9964b91d85320232f", "message": "fix: add category to test to ensure it's executed", "committedDate": "2020-12-10T11:19:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDA5MDQwOQ==", "url": "https://github.com/googleapis/java-spanner/pull/706#discussion_r540090409", "bodyText": "This seems to be a slight behavioral change in Cloud Spanner: Starting a new read/write transaction on a session that already has a read/write transaction will invalidate the first transaction. As far as I can tell, that would previously return an ABORTED error. That seems to have been changed to a CANCELLED error, which does make sense as it is an indication of an application error rather than a transient server error.", "author": "olavloite", "createdAt": "2020-12-10T11:24:51Z", "path": "google-cloud-spanner/src/test/java/com/google/cloud/spanner/it/ITTransactionManagerAsyncTest.java", "diffHunk": "@@ -224,6 +222,8 @@ public void testRollback() throws InterruptedException {\n     }\n   }\n \n+  @Ignore(\n+      \"Cloud Spanner now seems to return CANCELLED instead of ABORTED when a transaction is invalidated by a later transaction in the same session\")", "originalCommit": "e18ebd8e4355938bf755aaf9964b91d85320232f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}