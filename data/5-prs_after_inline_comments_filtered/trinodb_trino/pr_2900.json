{"pr_number": 2900, "pr_title": "Minor refactor of ParquetReader II", "pr_createdAt": "2020-02-21T18:10:44Z", "pr_url": "https://github.com/trinodb/trino/pull/2900", "timeline": [{"oid": "b8b271504580948b3ed096c8d21998c76a9225e1", "url": "https://github.com/trinodb/trino/commit/b8b271504580948b3ed096c8d21998c76a9225e1", "message": "Add support for VARBINARY in H2 query runner", "committedDate": "2020-03-02T15:39:23Z", "type": "commit"}, {"oid": "e320687ae821668a5ee869a99993e3d6d0d833e8", "url": "https://github.com/trinodb/trino/commit/e320687ae821668a5ee869a99993e3d6d0d833e8", "message": "Remove external location constraint from file metastore\n\nHive metastore allows external location pointing at another managed\ntable's location, so allow the same in file metastore.", "committedDate": "2020-03-02T15:39:23Z", "type": "commit"}, {"oid": "329de8f5210b9c99c55a1b436589c6445ced4001", "url": "https://github.com/trinodb/trino/commit/329de8f5210b9c99c55a1b436589c6445ced4001", "message": "Add column pruning test", "committedDate": "2020-03-02T15:39:23Z", "type": "commit"}, {"oid": "b5e773e6041cbf8bd7b1b7835f9ec697589c7ed1", "url": "https://github.com/trinodb/trino/commit/b5e773e6041cbf8bd7b1b7835f9ec697589c7ed1", "message": "Declare field as a List", "committedDate": "2020-03-02T15:39:23Z", "type": "commit"}, {"oid": "14d44613817cbf6dd2d1f3352a3f2bf94b1afab8", "url": "https://github.com/trinodb/trino/commit/14d44613817cbf6dd2d1f3352a3f2bf94b1afab8", "message": "Simplify code", "committedDate": "2020-03-02T15:39:23Z", "type": "commit"}, {"oid": "d3497b6027bc69260aa0e723dce822f9d972154c", "url": "https://github.com/trinodb/trino/commit/d3497b6027bc69260aa0e723dce822f9d972154c", "message": "Verify GroupField integrity", "committedDate": "2020-03-02T15:39:23Z", "type": "commit"}, {"oid": "1782bd0ce98472a5268c20b3402f2bb0beea5e4e", "url": "https://github.com/trinodb/trino/commit/1782bd0ce98472a5268c20b3402f2bb0beea5e4e", "message": "Implement Field#toString", "committedDate": "2020-03-02T15:39:23Z", "type": "commit"}, {"oid": "1782bd0ce98472a5268c20b3402f2bb0beea5e4e", "url": "https://github.com/trinodb/trino/commit/1782bd0ce98472a5268c20b3402f2bb0beea5e4e", "message": "Implement Field#toString", "committedDate": "2020-03-02T15:39:23Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg1MDk3OQ==", "url": "https://github.com/trinodb/trino/pull/2900#discussion_r388850979", "bodyText": "Hive metastore allows external location pointing at another managed\ntable's location, so allow the same in file metastore.\n\nBut there is no file metastore in Hive and so there is no system metadata directory there.\nIs it only about creating external tables with \"same\" location as internal table would have? The error message is a bit misleading to me.", "author": "kokosing", "createdAt": "2020-03-06T11:24:38Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/file/FileHiveMetastore.java", "diffHunk": "@@ -266,9 +266,6 @@ else if (table.getTableType().equals(EXTERNAL_TABLE.name())) {\n                 if (!externalFileSystem.isDirectory(externalLocation)) {", "originalCommit": "e320687ae821668a5ee869a99993e3d6d0d833e8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODk0OTAyMA==", "url": "https://github.com/trinodb/trino/pull/2900#discussion_r388949020", "bodyText": "Is it only about creating external tables with \"same\" location as internal table would have?\n\nYes\n\nThe error message is a bit misleading to me.\n\nfortunately it's going away", "author": "findepi", "createdAt": "2020-03-06T14:55:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg1MDk3OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg1MTU3OQ==", "url": "https://github.com/trinodb/trino/pull/2900#discussion_r388851579", "bodyText": "testNestedColumnPrunning?", "author": "kokosing", "createdAt": "2020-03-06T11:26:11Z", "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/TestHiveIntegrationSmokeTest.java", "diffHunk": "@@ -5607,6 +5608,84 @@ private void testSelectWithNoColumns(Session session, HiveStorageFormat storageF\n         assertUpdate(\"DROP TABLE \" + tableName);\n     }\n \n+    @Test\n+    public void testColumnPruning()", "originalCommit": "329de8f5210b9c99c55a1b436589c6445ced4001", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODk0OTc3Mg==", "url": "https://github.com/trinodb/trino/pull/2900#discussion_r388949772", "bodyText": "it's not only about nested columns (rows/structs). eg top-level a column is pruned too", "author": "findepi", "createdAt": "2020-03-06T14:56:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg1MTU3OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg1MjA2Nw==", "url": "https://github.com/trinodb/trino/pull/2900#discussion_r388852067", "bodyText": "\"Type %s has %s parameters, but %s children has: %s\",?", "author": "kokosing", "createdAt": "2020-03-06T11:27:23Z", "path": "presto-parquet/src/main/java/io/prestosql/parquet/GroupField.java", "diffHunk": "@@ -29,6 +30,13 @@\n     public GroupField(Type type, int repetitionLevel, int definitionLevel, boolean required, List<Optional<Field>> children)\n     {\n         super(type, repetitionLevel, definitionLevel, required);\n+        checkArgument(\n+                type.getTypeParameters().size() == children.size(),\n+                \"Type %s has %s parameters, but %s children: %s\",", "originalCommit": "d3497b6027bc69260aa0e723dce822f9d972154c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODk1MDUxNg==", "url": "https://github.com/trinodb/trino/pull/2900#discussion_r388950516", "bodyText": "I don't think so. Please reconsider.", "author": "findepi", "createdAt": "2020-03-06T14:57:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg1MjA2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODk3MzEzMw==", "url": "https://github.com/trinodb/trino/pull/2900#discussion_r388973133", "bodyText": "discussed offline", "author": "findepi", "createdAt": "2020-03-06T15:35:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg1MjA2Nw=="}], "type": "inlineReview"}]}