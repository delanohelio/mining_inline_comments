{"pr_number": 3933, "pr_title": "Reuse dynamic filters", "pr_createdAt": "2020-06-05T13:10:55Z", "pr_url": "https://github.com/trinodb/trino/pull/3933", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjEwNDMxNw==", "url": "https://github.com/trinodb/trino/pull/3933#discussion_r436104317", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                if (buildSymbolToDynamicFilter.containsKey(buildSymbol)) {\n          \n          \n            \n                                    id = buildSymbolToDynamicFilter.get(buildSymbol);\n          \n          \n            \n                                }\n          \n          \n            \n                                else {\n          \n          \n            \n                                    id = \"df_\" + idAllocator.getNextId().toString();\n          \n          \n            \n                                    buildSymbolToDynamicFilter.put(buildSymbol, id);\n          \n          \n            \n                                }\n          \n          \n            \n                                id = buildSymbolToDynamicFilter.computeIfAbsent(buildSymbol, key -> \"df_\" + idAllocator.getNextId().toString());\n          \n      \n    \n    \n  \n\nHowever, it's not a good idea to modify the map returned by .collect(toMap(...)). There's no guarantee that the map is mutable or that it's safe to change. From the javadocs:\n\nThere are no guarantees on the type, mutability, serializability, or thread-safety of the Map returned.", "author": "martint", "createdAt": "2020-06-05T18:49:23Z", "path": "presto-main/src/main/java/io/prestosql/sql/planner/optimizations/PredicatePushDown.java", "diffHunk": "@@ -578,10 +578,19 @@ private DynamicFiltersResult createDynamicFilters(JoinNode node, List<JoinNode.E\n                 // Even if equiJoinClauses.equals(node.getCriteria), current dynamic filters may not match equiJoinClauses\n                 ImmutableMap.Builder<String, Symbol> dynamicFiltersBuilder = ImmutableMap.builder();\n                 ImmutableList.Builder<Expression> predicatesBuilder = ImmutableList.builder();\n+                Map<Symbol, String> buildSymbolToDynamicFilter = node.getDynamicFilters().entrySet().stream()\n+                        .collect(toMap(Map.Entry::getValue, Map.Entry::getKey));\n                 for (JoinNode.EquiJoinClause clause : equiJoinClauses) {\n                     Symbol probeSymbol = clause.getLeft();\n                     Symbol buildSymbol = clause.getRight();\n-                    String id = \"df_\" + idAllocator.getNextId().toString();\n+                    String id;\n+                    if (buildSymbolToDynamicFilter.containsKey(buildSymbol)) {\n+                        id = buildSymbolToDynamicFilter.get(buildSymbol);\n+                    }\n+                    else {\n+                        id = \"df_\" + idAllocator.getNextId().toString();\n+                        buildSymbolToDynamicFilter.put(buildSymbol, id);\n+                    }", "originalCommit": "cd972f6802ecda2e2c14c6baa7cd68b84c5a1286", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c66103bf18e5be95e0696fd135762d873db6dab4", "url": "https://github.com/trinodb/trino/commit/c66103bf18e5be95e0696fd135762d873db6dab4", "message": "Use ImmutableMap collector in Predicte Push Down", "committedDate": "2020-06-08T12:08:02Z", "type": "commit"}, {"oid": "be3f62a60c4127fe8d709a2d8431dbcdc8d75448", "url": "https://github.com/trinodb/trino/commit/be3f62a60c4127fe8d709a2d8431dbcdc8d75448", "message": "Reuse dynamic filters", "committedDate": "2020-06-08T12:09:24Z", "type": "commit"}, {"oid": "be3f62a60c4127fe8d709a2d8431dbcdc8d75448", "url": "https://github.com/trinodb/trino/commit/be3f62a60c4127fe8d709a2d8431dbcdc8d75448", "message": "Reuse dynamic filters", "committedDate": "2020-06-08T12:09:24Z", "type": "forcePushed"}]}