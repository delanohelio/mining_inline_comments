{"pr_number": 6343, "pr_title": "Reconstruct NOT IN when pushing down to JDBC source", "pr_createdAt": "2020-12-15T09:51:43Z", "pr_url": "https://github.com/trinodb/trino/pull/6343", "timeline": [{"oid": "528f574978fcaa5676627b747b913099ffab71ad", "url": "https://github.com/trinodb/trino/commit/528f574978fcaa5676627b747b913099ffab71ad", "message": "Assert actual queries in TestJdbcQueryBuilder", "committedDate": "2020-12-15T09:15:55Z", "type": "commit"}, {"oid": "830e28ac11b5e5b5896841ac4f4f5bb5fabfb4d3", "url": "https://github.com/trinodb/trino/commit/830e28ac11b5e5b5896841ac4f4f5bb5fabfb4d3", "message": "Avoid emitting unnecessary braces in generated query", "committedDate": "2020-12-15T09:19:38Z", "type": "commit"}, {"oid": "0d8469da9c155da156cba26aabebd817240a8896", "url": "https://github.com/trinodb/trino/commit/0d8469da9c155da156cba26aabebd817240a8896", "message": "Separate Domain and ValueSet handling in QueryBuilder", "committedDate": "2020-12-15T09:42:48Z", "type": "commit"}, {"oid": "4c8c45d3019837d89f061971a244b4623978a8c8", "url": "https://github.com/trinodb/trino/commit/4c8c45d3019837d89f061971a244b4623978a8c8", "message": "Add query building test case for NOT IN's domain", "committedDate": "2020-12-15T09:43:04Z", "type": "commit"}, {"oid": "ecd3ed6ae45a52d23ac0235b56c4ea28ff666c25", "url": "https://github.com/trinodb/trino/commit/ecd3ed6ae45a52d23ac0235b56c4ea28ff666c25", "message": "Improve type mismatch reporting in nativeValueToBlock", "committedDate": "2020-12-15T09:43:04Z", "type": "commit"}, {"oid": "baf22ef4125f33ba0a07cb100e6628f88cafc2c2", "url": "https://github.com/trinodb/trino/commit/baf22ef4125f33ba0a07cb100e6628f88cafc2c2", "message": "Reconstruct NOT IN when pushing down to JDBC source", "committedDate": "2020-12-15T09:48:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI5NTUyNg==", "url": "https://github.com/trinodb/trino/pull/6343#discussion_r543295526", "bodyText": "I don't like this assertion it is very detailed and so it it will be fragile to changes", "author": "kokosing", "createdAt": "2020-12-15T12:19:51Z", "path": "presto-base-jdbc/src/test/java/io/prestosql/plugin/jdbc/TestJdbcQueryBuilder.java", "diffHunk": "@@ -237,11 +236,22 @@ public void testNormalBuildSql()\n                 .build());\n \n         Connection connection = database.getConnection();\n-        try (PreparedStatement preparedStatement = new QueryBuilder(jdbcClient).buildSql(SESSION, connection, TEST_TABLE, Optional.empty(), columns, tupleDomain, Optional.empty(), identity());\n-                ResultSet resultSet = preparedStatement.executeQuery()) {\n+        try (PreparedStatement preparedStatement = new QueryBuilder(jdbcClient).buildSql(SESSION, connection, TEST_TABLE, Optional.empty(), columns, tupleDomain, Optional.empty(), identity())) {\n+            assertThat(lastQuery).isEqualTo(\"\" +\n+                    \"SELECT \\\"col_0\\\" AS \\\"col_0\\\", \\\"col_1\\\" AS \\\"col_1\\\", \\\"col_2\\\" AS \\\"col_2\\\", \\\"col_3\\\" AS \\\"col_3\\\", \\\"col_4\\\" AS \\\"col_4\\\", \\\"col_5\\\" AS \\\"col_5\\\", \" +\n+                    \"\\\"col_6\\\" AS \\\"col_6\\\", \\\"col_7\\\" AS \\\"col_7\\\", \\\"col_8\\\" AS \\\"col_8\\\", \\\"col_9\\\" AS \\\"col_9\\\", \\\"col_10\\\" AS \\\"col_10\\\", \\\"col_11\\\" AS \\\"col_11\\\" \" +\n+                    \"FROM \\\"test_table\\\" \" +\n+                    \"WHERE ((\\\"col_0\\\" < ?) OR (\\\"col_0\\\" >= ? AND \\\"col_0\\\" <= ?) OR (\\\"col_0\\\" > ?) OR \\\"col_0\\\" IN (?,?)) \" +\n+                    \"AND ((\\\"col_1\\\" >= ? AND \\\"col_1\\\" <= ?) OR (\\\"col_1\\\" >= ? AND \\\"col_1\\\" <= ?) OR \\\"col_1\\\" IN (?,?,?,?)) \" +\n+                    \"AND ((\\\"col_7\\\" >= ? AND \\\"col_7\\\" < ?) OR (\\\"col_7\\\" >= ? AND \\\"col_7\\\" < ?)) \" +\n+                    \"AND ((\\\"col_8\\\" >= ? AND \\\"col_8\\\" < ?) OR (\\\"col_8\\\" >= ? AND \\\"col_8\\\" <= ?)) \" +\n+                    \"AND ((\\\"col_9\\\" < ?) OR \\\"col_9\\\" IN (?,?)) \" +\n+                    \"AND (\\\"col_2\\\" = ?)\");", "originalCommit": "528f574978fcaa5676627b747b913099ffab71ad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzMwMjI2OQ==", "url": "https://github.com/trinodb/trino/pull/6343#discussion_r543302269", "bodyText": "It is required to visualize the changes and this is the only place where we test queries output to remote system.\nAlso, the structure of output queries changes very very rarely, so expected maint cost is low.", "author": "findepi", "createdAt": "2020-12-15T12:31:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI5NTUyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI5NzA4OA==", "url": "https://github.com/trinodb/trino/pull/6343#discussion_r543297088", "bodyText": "Optional (separate commit)?", "author": "kokosing", "createdAt": "2020-12-15T12:22:22Z", "path": "presto-spi/src/main/java/io/prestosql/spi/predicate/Utils.java", "diffHunk": "@@ -31,10 +33,13 @@ private Utils() {}\n     // just for this use case.\n     static final TypeOperators TUPLE_DOMAIN_TYPE_OPERATORS = new TypeOperators();\n \n-    public static Block nativeValueToBlock(Type type, Object object)\n+    public static Block nativeValueToBlock(Type type, @Nullable Object object)", "originalCommit": "ecd3ed6ae45a52d23ac0235b56c4ea28ff666c25", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI5NzkzMQ==", "url": "https://github.com/trinodb/trino/pull/6343#discussion_r543297931", "bodyText": "Do we have query in ATDQ to trigger this pushdown?", "author": "kokosing", "createdAt": "2020-12-15T12:23:48Z", "path": "presto-base-jdbc/src/test/java/io/prestosql/plugin/jdbc/TestJdbcQueryBuilder.java", "diffHunk": "@@ -290,8 +290,8 @@ public void testBuildSqlWithDomainComplement()\n             assertThat(lastQuery).isEqualTo(\"\" +", "originalCommit": "baf22ef4125f33ba0a07cb100e6628f88cafc2c2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzMwMjc5Ng==", "url": "https://github.com/trinodb/trino/pull/6343#discussion_r543302796", "bodyText": "yes, for example here\nhttps://github.com/prestosql/presto/blob/8573d76f676b4535de6aaa29d3d739f114f3348b/presto-testing/src/main/java/io/prestosql/testing/AbstractTestQueries.java#L1647", "author": "findepi", "createdAt": "2020-12-15T12:31:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI5NzkzMQ=="}], "type": "inlineReview"}]}