{"pr_number": 1026, "pr_title": "filters: wire Android return path", "pr_createdAt": "2020-08-12T12:43:42Z", "pr_url": "https://github.com/envoyproxy/envoy-mobile/pull/1026", "timeline": [{"oid": "32eaa018ea1d8fcc86351e66665927a5e4ce74b4", "url": "https://github.com/envoyproxy/envoy-mobile/commit/32eaa018ea1d8fcc86351e66665927a5e4ce74b4", "message": "filters: wire Android return path\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>", "committedDate": "2020-08-17T12:23:47Z", "type": "forcePushed"}, {"oid": "6f205524094d2d480ae312e5364231188f2f7417", "url": "https://github.com/envoyproxy/envoy-mobile/commit/6f205524094d2d480ae312e5364231188f2f7417", "message": "filters: wire Android return path\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>", "committedDate": "2020-08-17T12:26:35Z", "type": "commit"}, {"oid": "6f205524094d2d480ae312e5364231188f2f7417", "url": "https://github.com/envoyproxy/envoy-mobile/commit/6f205524094d2d480ae312e5364231188f2f7417", "message": "filters: wire Android return path\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>", "committedDate": "2020-08-17T12:26:35Z", "type": "forcePushed"}, {"oid": "780279db5263dc099d523c1825ebf5723ad1fff5", "url": "https://github.com/envoyproxy/envoy-mobile/commit/780279db5263dc099d523c1825ebf5723ad1fff5", "message": "format\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>", "committedDate": "2020-08-17T12:37:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQ2NTYxMA==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1026#discussion_r471465610", "bodyText": "Moved to utility class, which can be tested and reused.", "author": "goaway", "createdAt": "2020-08-17T13:07:30Z", "path": "library/java/src/io/envoyproxy/envoymobile/engine/EnvoyHTTPStream.java", "diffHunk": "@@ -76,17 +76,4 @@ public void sendTrailers(Map<String, List<String>> trailers) {\n    * @return int, success unless the stream has already been canceled.\n    */\n   public int cancel() { return JniLibrary.resetStream(streamHandle); }\n-\n-  private static byte[][] toJniLibraryHeaders(Map<String, List<String>> headers) {\n-    // Create array with some room for potential headers that have more than one\n-    // value.\n-    final List<byte[]> convertedHeaders = new ArrayList<byte[]>(2 * headers.size());\n-    for (Map.Entry<String, List<String>> entry : headers.entrySet()) {\n-      for (String value : entry.getValue()) {\n-        convertedHeaders.add(entry.getKey().getBytes(StandardCharsets.UTF_8));\n-        convertedHeaders.add(value.getBytes(StandardCharsets.UTF_8));\n-      }\n-    }\n-    return convertedHeaders.toArray(new byte[0][0]);\n-  }", "originalCommit": "780279db5263dc099d523c1825ebf5723ad1fff5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU5NjAyMQ==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1026#discussion_r471596021", "bodyText": "Could we add a quick test here?", "author": "buildbreaker", "createdAt": "2020-08-17T16:27:50Z", "path": "library/java/src/io/envoyproxy/envoymobile/engine/JniBridgeUtility.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package io.envoyproxy.envoymobile.engine;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * Class to assist with passing types from the JVM to native code. Currently supports\n+ * HTTP headers.\n+ */\n+final class JniBridgeUtility {\n+\n+  private JniBridgeUtility() {}\n+\n+  public static byte[][] toJniHeaders(Map<String, List<String>> headers) {", "originalCommit": "780279db5263dc099d523c1825ebf5723ad1fff5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTY5ODAzOA==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1026#discussion_r471698038", "bodyText": "Sure (that was part of why I split it out to begin with). As it's existing logic that's been moved, I'll admit a slight preference for doing that as a follow-up though. wdyt?", "author": "goaway", "createdAt": "2020-08-17T18:38:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU5NjAyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTcxNDA4OA==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1026#discussion_r471714088", "bodyText": "Sounds good. Let's do it as a follow up", "author": "buildbreaker", "createdAt": "2020-08-17T19:00:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU5NjAyMQ=="}], "type": "inlineReview"}, {"oid": "f1faf9091604ebdd247389dc70df918f792cb8f8", "url": "https://github.com/envoyproxy/envoy-mobile/commit/f1faf9091604ebdd247389dc70df918f792cb8f8", "message": "update example app to exercise working return path\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>", "committedDate": "2020-08-17T18:43:13Z", "type": "commit"}, {"oid": "946693777bc15767fc8e31c46482fed73e08b3a5", "url": "https://github.com/envoyproxy/envoy-mobile/commit/946693777bc15767fc8e31c46482fed73e08b3a5", "message": "remove stray semicolon\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>", "committedDate": "2020-08-17T19:09:29Z", "type": "commit"}]}