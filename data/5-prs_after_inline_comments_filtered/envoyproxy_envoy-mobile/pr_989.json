{"pr_number": 989, "pr_title": "filters: instantiate on Android on a per-stream basis", "pr_createdAt": "2020-07-30T11:07:05Z", "pr_url": "https://github.com/envoyproxy/envoy-mobile/pull/989", "timeline": [{"oid": "7c518992ee2a64e2ec1ac678ed0a6c8caa9cbae5", "url": "https://github.com/envoyproxy/envoy-mobile/commit/7c518992ee2a64e2ec1ac678ed0a6c8caa9cbae5", "message": "wip\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>", "committedDate": "2020-07-30T11:21:25Z", "type": "forcePushed"}, {"oid": "c944ebe2da51583cb241737eedb10bac6645e87c", "url": "https://github.com/envoyproxy/envoy-mobile/commit/c944ebe2da51583cb241737eedb10bac6645e87c", "message": "wip\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>", "committedDate": "2020-07-30T22:11:14Z", "type": "forcePushed"}, {"oid": "89809f2a3dbd83d57fa85f90c7029c737fd2d496", "url": "https://github.com/envoyproxy/envoy-mobile/commit/89809f2a3dbd83d57fa85f90c7029c737fd2d496", "message": "wip\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>", "committedDate": "2020-07-30T22:20:10Z", "type": "forcePushed"}, {"oid": "7bb82eb809a61278879ee5a90ab8d906f0dc8f4a", "url": "https://github.com/envoyproxy/envoy-mobile/commit/7bb82eb809a61278879ee5a90ab8d906f0dc8f4a", "message": "filters: instantiate on Android on a per-stream basis\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>", "committedDate": "2020-07-31T18:16:36Z", "type": "commit"}, {"oid": "7bb82eb809a61278879ee5a90ab8d906f0dc8f4a", "url": "https://github.com/envoyproxy/envoy-mobile/commit/7bb82eb809a61278879ee5a90ab8d906f0dc8f4a", "message": "filters: instantiate on Android on a per-stream basis\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>", "committedDate": "2020-07-31T18:16:36Z", "type": "forcePushed"}, {"oid": "cda53d4ef5b369d49b75d8f7be864fb343760a5a", "url": "https://github.com/envoyproxy/envoy-mobile/commit/cda53d4ef5b369d49b75d8f7be864fb343760a5a", "message": "format\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>", "committedDate": "2020-07-31T18:22:30Z", "type": "commit"}, {"oid": "befac9b60d376060a48534b97b3f9639cdcc19a5", "url": "https://github.com/envoyproxy/envoy-mobile/commit/befac9b60d376060a48534b97b3f9639cdcc19a5", "message": "fix whitespace\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>", "committedDate": "2020-07-31T20:54:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgzNDMwOA==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/989#discussion_r463834308", "bodyText": "These should be discussing request headers, right?", "author": "rebello95", "createdAt": "2020-07-31T20:56:02Z", "path": "library/java/src/io/envoyproxy/envoymobile/engine/types/EnvoyHTTPFilter.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package io.envoyproxy.envoymobile.engine.types;\n+\n+import java.nio.ByteBuffer;\n+import java.util.concurrent.Executor;\n+import java.util.List;\n+import java.util.Map;\n+\n+public interface EnvoyHTTPFilter {\n+  /**\n+   * Called when all headers get received on the async HTTP stream.\n+   *\n+   * @param headers,   the headers received.\n+   * @param endStream, whether the response is headers-only.\n+   */", "originalCommit": "befac9b60d376060a48534b97b3f9639cdcc19a5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDI3NTc1Ng==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/989#discussion_r464275756", "bodyText": "Thanks, updated.", "author": "goaway", "createdAt": "2020-08-03T08:45:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgzNDMwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgzNDQyNQ==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/989#discussion_r463834425", "bodyText": "Same here", "author": "rebello95", "createdAt": "2020-07-31T20:56:10Z", "path": "library/java/src/io/envoyproxy/envoymobile/engine/types/EnvoyHTTPFilter.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package io.envoyproxy.envoymobile.engine.types;\n+\n+import java.nio.ByteBuffer;\n+import java.util.concurrent.Executor;\n+import java.util.List;\n+import java.util.Map;\n+\n+public interface EnvoyHTTPFilter {\n+  /**\n+   * Called when all headers get received on the async HTTP stream.\n+   *\n+   * @param headers,   the headers received.\n+   * @param endStream, whether the response is headers-only.\n+   */\n+  Object[] onRequestHeaders(Map<String, List<String>> headers, boolean endStream);\n+\n+  /**\n+   * Called when a data frame gets received on the async HTTP stream. This\n+   * callback can be invoked multiple times if the data gets streamed.\n+   *\n+   * @param data,      the buffer of the data received.\n+   * @param endStream, whether the data is the last data frame.\n+   */", "originalCommit": "befac9b60d376060a48534b97b3f9639cdcc19a5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgzNDUwOA==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/989#discussion_r463834508", "bodyText": "Uncomment? \ud83d\ude43", "author": "rebello95", "createdAt": "2020-07-31T20:56:17Z", "path": "library/java/src/io/envoyproxy/envoymobile/engine/types/EnvoyHTTPFilter.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package io.envoyproxy.envoymobile.engine.types;\n+\n+import java.nio.ByteBuffer;\n+import java.util.concurrent.Executor;\n+import java.util.List;\n+import java.util.Map;\n+\n+public interface EnvoyHTTPFilter {\n+  /**\n+   * Called when all headers get received on the async HTTP stream.\n+   *\n+   * @param headers,   the headers received.\n+   * @param endStream, whether the response is headers-only.\n+   */\n+  Object[] onRequestHeaders(Map<String, List<String>> headers, boolean endStream);\n+\n+  /**\n+   * Called when a data frame gets received on the async HTTP stream. This\n+   * callback can be invoked multiple times if the data gets streamed.\n+   *\n+   * @param data,      the buffer of the data received.\n+   * @param endStream, whether the data is the last data frame.\n+   */\n+  // public abstract List onRequestData(ByteBuffer data, boolean endStream);", "originalCommit": "befac9b60d376060a48534b97b3f9639cdcc19a5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg5OTM5NA==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/989#discussion_r463899394", "bodyText": "Okay, sure. I can put in stubs for this PR.", "author": "goaway", "createdAt": "2020-08-01T00:54:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgzNDUwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgzNDU5MA==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/989#discussion_r463834590", "bodyText": "Same as above", "author": "rebello95", "createdAt": "2020-07-31T20:56:24Z", "path": "library/java/src/io/envoyproxy/envoymobile/engine/types/EnvoyHTTPFilter.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package io.envoyproxy.envoymobile.engine.types;\n+\n+import java.nio.ByteBuffer;\n+import java.util.concurrent.Executor;\n+import java.util.List;\n+import java.util.Map;\n+\n+public interface EnvoyHTTPFilter {\n+  /**\n+   * Called when all headers get received on the async HTTP stream.\n+   *\n+   * @param headers,   the headers received.\n+   * @param endStream, whether the response is headers-only.\n+   */\n+  Object[] onRequestHeaders(Map<String, List<String>> headers, boolean endStream);\n+\n+  /**\n+   * Called when a data frame gets received on the async HTTP stream. This\n+   * callback can be invoked multiple times if the data gets streamed.\n+   *\n+   * @param data,      the buffer of the data received.\n+   * @param endStream, whether the data is the last data frame.\n+   */\n+  // public abstract List onRequestData(ByteBuffer data, boolean endStream);\n+\n+  /**\n+   * Called when all trailers get received on the async HTTP stream. Note that end\n+   * stream is implied when on_trailers is called.\n+   *\n+   * @param trailers, the trailers received.\n+   */\n+  // public abstract void onRequestTrailers(Map<String, List<String>> trailers);", "originalCommit": "befac9b60d376060a48534b97b3f9639cdcc19a5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgzNDc4Nw==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/989#discussion_r463834787", "bodyText": "Same for this and onResponseTrailers below", "author": "rebello95", "createdAt": "2020-07-31T20:56:40Z", "path": "library/java/src/io/envoyproxy/envoymobile/engine/types/EnvoyHTTPFilter.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package io.envoyproxy.envoymobile.engine.types;\n+\n+import java.nio.ByteBuffer;\n+import java.util.concurrent.Executor;\n+import java.util.List;\n+import java.util.Map;\n+\n+public interface EnvoyHTTPFilter {\n+  /**\n+   * Called when all headers get received on the async HTTP stream.\n+   *\n+   * @param headers,   the headers received.\n+   * @param endStream, whether the response is headers-only.\n+   */\n+  Object[] onRequestHeaders(Map<String, List<String>> headers, boolean endStream);\n+\n+  /**\n+   * Called when a data frame gets received on the async HTTP stream. This\n+   * callback can be invoked multiple times if the data gets streamed.\n+   *\n+   * @param data,      the buffer of the data received.\n+   * @param endStream, whether the data is the last data frame.\n+   */\n+  // public abstract List onRequestData(ByteBuffer data, boolean endStream);\n+\n+  /**\n+   * Called when all trailers get received on the async HTTP stream. Note that end\n+   * stream is implied when on_trailers is called.\n+   *\n+   * @param trailers, the trailers received.\n+   */\n+  // public abstract void onRequestTrailers(Map<String, List<String>> trailers);\n+\n+  /**\n+   * Called when all headers get received on the async HTTP stream.\n+   *\n+   * @param headers,   the headers received.\n+   * @param endStream, whether the response is headers-only.\n+   */\n+  Object[] onResponseHeaders(Map<String, List<String>> headers, boolean endStream);\n+\n+  /**\n+   * Called when a data frame gets received on the async HTTP stream. This\n+   * callback can be invoked multiple times if the data gets streamed.\n+   *\n+   * @param data,      the buffer of the data received.\n+   * @param endStream, whether the data is the last data frame.\n+   */\n+  // public abstract void onResponseData(ByteBuffer data, boolean endStream);", "originalCommit": "befac9b60d376060a48534b97b3f9639cdcc19a5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "793a944e0f76fc8d875c42658527f7ececde6a27", "url": "https://github.com/envoyproxy/envoy-mobile/commit/793a944e0f76fc8d875c42658527f7ececde6a27", "message": "updates for comments\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>", "committedDate": "2020-08-03T09:31:50Z", "type": "commit"}, {"oid": "9d3ad5d7b54408ba9253dcb406acb9f429d15250", "url": "https://github.com/envoyproxy/envoy-mobile/commit/9d3ad5d7b54408ba9253dcb406acb9f429d15250", "message": "format\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>", "committedDate": "2020-08-03T09:43:43Z", "type": "commit"}, {"oid": "89cd0f4e91c0696e2aef3eb03f3f03228694e13c", "url": "https://github.com/envoyproxy/envoy-mobile/commit/89cd0f4e91c0696e2aef3eb03f3f03228694e13c", "message": "update for comments\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>", "committedDate": "2020-08-03T20:07:27Z", "type": "commit"}]}