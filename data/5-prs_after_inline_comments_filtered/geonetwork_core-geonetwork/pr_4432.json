{"pr_number": 4432, "pr_title": "Address glitch with duplicate or missing logfiles", "pr_createdAt": "2020-02-08T11:44:22Z", "pr_url": "https://github.com/geonetwork/core-geonetwork/pull/4432", "timeline": [{"oid": "7a2ff48d29a7cb7afb2ece580b85dc03b1db4505", "url": "https://github.com/geonetwork/core-geonetwork/commit/7a2ff48d29a7cb7afb2ece580b85dc03b1db4505", "message": "in some scenario service returns array of log files, take first", "committedDate": "2020-02-07T11:33:41Z", "type": "commit"}, {"oid": "fe81c44777d1166eb8f944c9a832fc0f1230250e", "url": "https://github.com/geonetwork/core-geonetwork/commit/fe81c44777d1166eb8f944c9a832fc0f1230250e", "message": "check before creating conflicting logfile history\n\nSigned-off-by: Jody Garnett <jody.garnett@gmail.com>", "committedDate": "2020-02-08T11:42:32Z", "type": "commit"}, {"oid": "ae8d4de56b57c0e93987897f9e689927962a9e03", "url": "https://github.com/geonetwork/core-geonetwork/commit/ae8d4de56b57c0e93987897f9e689927962a9e03", "message": "verify logfile is available before reporting to user interface\n\nSigned-off-by: Jody Garnett <jody.garnett@gmail.com>", "committedDate": "2020-02-08T11:42:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk4NjM1Nw==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4432#discussion_r376986357", "bodyText": "Follow project coding conventions", "author": "juanluisrp", "createdAt": "2020-02-10T10:44:04Z", "path": "domain/src/main/java/org/fao/geonet/domain/HarvestHistory.java", "diffHunk": "@@ -271,7 +274,53 @@ public Element getInfoAsXml() throws IOException, JDOMException {\n         if (info == null) {\n             return null;\n         }\n-        return Xml.loadString(info, false);\n+        Element infoAsXml = Xml.loadString(info, false);\n+        infoAsXml = checkInfoXml( infoAsXml );", "originalCommit": "ae8d4de56b57c0e93987897f9e689927962a9e03", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk4NjQ1OA==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4432#discussion_r376986458", "bodyText": "Follow project coding conventions", "author": "juanluisrp", "createdAt": "2020-02-10T10:44:19Z", "path": "domain/src/main/java/org/fao/geonet/domain/HarvestHistory.java", "diffHunk": "@@ -271,7 +274,53 @@ public Element getInfoAsXml() throws IOException, JDOMException {\n         if (info == null) {\n             return null;\n         }\n-        return Xml.loadString(info, false);\n+        Element infoAsXml = Xml.loadString(info, false);\n+        infoAsXml = checkInfoXml( infoAsXml );\n+        return infoAsXml;\n+    }\n+\n+    /**\n+     * Check infoAsXml definition content.\n+     * <p>\n+     * Content checks:\n+     * <ul>\n+     *     <li>Check if multiple logfile definitions are present</li>\n+     *     <li>Check if logfile path file exists /li>\n+     * </ul>\n+     *\n+     * </p>\n+     * @param infoAsXml Harvest info xml definition\n+     * @return Harvest info xml definition, with any content checks applied\n+     */\n+    private Element checkInfoXml(Element infoAsXml) {\n+        List<Element> logfileElements = infoAsXml.getChildren(\"logfile\");\n+        // check logfiles present to ensure path exists\n+        if( logfileElements.size() > 0 ) {", "originalCommit": "ae8d4de56b57c0e93987897f9e689927962a9e03", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk4NjU0Mw==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4432#discussion_r376986543", "bodyText": "Follow project coding conventions", "author": "juanluisrp", "createdAt": "2020-02-10T10:44:30Z", "path": "domain/src/main/java/org/fao/geonet/domain/HarvestHistory.java", "diffHunk": "@@ -271,7 +274,53 @@ public Element getInfoAsXml() throws IOException, JDOMException {\n         if (info == null) {\n             return null;\n         }\n-        return Xml.loadString(info, false);\n+        Element infoAsXml = Xml.loadString(info, false);\n+        infoAsXml = checkInfoXml( infoAsXml );\n+        return infoAsXml;\n+    }\n+\n+    /**\n+     * Check infoAsXml definition content.\n+     * <p>\n+     * Content checks:\n+     * <ul>\n+     *     <li>Check if multiple logfile definitions are present</li>\n+     *     <li>Check if logfile path file exists /li>\n+     * </ul>\n+     *\n+     * </p>\n+     * @param infoAsXml Harvest info xml definition\n+     * @return Harvest info xml definition, with any content checks applied\n+     */\n+    private Element checkInfoXml(Element infoAsXml) {\n+        List<Element> logfileElements = infoAsXml.getChildren(\"logfile\");\n+        // check logfiles present to ensure path exists\n+        if( logfileElements.size() > 0 ) {\n+            if( logfileElements.size() != 1 ){", "originalCommit": "ae8d4de56b57c0e93987897f9e689927962a9e03", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk4NjY4MQ==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4432#discussion_r376986681", "bodyText": "Follow project coding conventions", "author": "juanluisrp", "createdAt": "2020-02-10T10:44:48Z", "path": "domain/src/main/java/org/fao/geonet/domain/HarvestHistory.java", "diffHunk": "@@ -271,7 +274,53 @@ public Element getInfoAsXml() throws IOException, JDOMException {\n         if (info == null) {\n             return null;\n         }\n-        return Xml.loadString(info, false);\n+        Element infoAsXml = Xml.loadString(info, false);\n+        infoAsXml = checkInfoXml( infoAsXml );\n+        return infoAsXml;\n+    }\n+\n+    /**\n+     * Check infoAsXml definition content.\n+     * <p>\n+     * Content checks:\n+     * <ul>\n+     *     <li>Check if multiple logfile definitions are present</li>\n+     *     <li>Check if logfile path file exists /li>\n+     * </ul>\n+     *\n+     * </p>\n+     * @param infoAsXml Harvest info xml definition\n+     * @return Harvest info xml definition, with any content checks applied\n+     */\n+    private Element checkInfoXml(Element infoAsXml) {\n+        List<Element> logfileElements = infoAsXml.getChildren(\"logfile\");\n+        // check logfiles present to ensure path exists\n+        if( logfileElements.size() > 0 ) {\n+            if( logfileElements.size() != 1 ){\n+                 Log.warning(Constants.DOMAIN_LOG_MODULE, \"Harvest history unexpectedly lists multiple logfiles: \" + logfileElements.size() );\n+            }\n+            boolean isLogFileFound = false;\n+            for(Iterator iter = logfileElements.iterator(); iter.hasNext(); ){", "originalCommit": "ae8d4de56b57c0e93987897f9e689927962a9e03", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk4Njk2Ng==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4432#discussion_r376986966", "bodyText": "Follow project coding conventions", "author": "juanluisrp", "createdAt": "2020-02-10T10:45:24Z", "path": "domain/src/main/java/org/fao/geonet/domain/HarvestHistory.java", "diffHunk": "@@ -271,7 +274,53 @@ public Element getInfoAsXml() throws IOException, JDOMException {\n         if (info == null) {\n             return null;\n         }\n-        return Xml.loadString(info, false);\n+        Element infoAsXml = Xml.loadString(info, false);\n+        infoAsXml = checkInfoXml( infoAsXml );\n+        return infoAsXml;\n+    }\n+\n+    /**\n+     * Check infoAsXml definition content.\n+     * <p>\n+     * Content checks:\n+     * <ul>\n+     *     <li>Check if multiple logfile definitions are present</li>\n+     *     <li>Check if logfile path file exists /li>\n+     * </ul>\n+     *\n+     * </p>\n+     * @param infoAsXml Harvest info xml definition\n+     * @return Harvest info xml definition, with any content checks applied\n+     */\n+    private Element checkInfoXml(Element infoAsXml) {\n+        List<Element> logfileElements = infoAsXml.getChildren(\"logfile\");\n+        // check logfiles present to ensure path exists\n+        if( logfileElements.size() > 0 ) {\n+            if( logfileElements.size() != 1 ){\n+                 Log.warning(Constants.DOMAIN_LOG_MODULE, \"Harvest history unexpectedly lists multiple logfiles: \" + logfileElements.size() );\n+            }\n+            boolean isLogFileFound = false;\n+            for(Iterator iter = logfileElements.iterator(); iter.hasNext(); ){\n+                Element logfile = (Element) iter.next();\n+                String path = logfile.getText();\n+                File file = new File( path );", "originalCommit": "ae8d4de56b57c0e93987897f9e689927962a9e03", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk4NzA2OQ==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4432#discussion_r376987069", "bodyText": "Follow project coding conventions", "author": "juanluisrp", "createdAt": "2020-02-10T10:45:35Z", "path": "domain/src/main/java/org/fao/geonet/domain/HarvestHistory.java", "diffHunk": "@@ -271,7 +274,53 @@ public Element getInfoAsXml() throws IOException, JDOMException {\n         if (info == null) {\n             return null;\n         }\n-        return Xml.loadString(info, false);\n+        Element infoAsXml = Xml.loadString(info, false);\n+        infoAsXml = checkInfoXml( infoAsXml );\n+        return infoAsXml;\n+    }\n+\n+    /**\n+     * Check infoAsXml definition content.\n+     * <p>\n+     * Content checks:\n+     * <ul>\n+     *     <li>Check if multiple logfile definitions are present</li>\n+     *     <li>Check if logfile path file exists /li>\n+     * </ul>\n+     *\n+     * </p>\n+     * @param infoAsXml Harvest info xml definition\n+     * @return Harvest info xml definition, with any content checks applied\n+     */\n+    private Element checkInfoXml(Element infoAsXml) {\n+        List<Element> logfileElements = infoAsXml.getChildren(\"logfile\");\n+        // check logfiles present to ensure path exists\n+        if( logfileElements.size() > 0 ) {\n+            if( logfileElements.size() != 1 ){\n+                 Log.warning(Constants.DOMAIN_LOG_MODULE, \"Harvest history unexpectedly lists multiple logfiles: \" + logfileElements.size() );\n+            }\n+            boolean isLogFileFound = false;\n+            for(Iterator iter = logfileElements.iterator(); iter.hasNext(); ){\n+                Element logfile = (Element) iter.next();\n+                String path = logfile.getText();\n+                File file = new File( path );\n+                if (file.exists() && file.canRead() ){", "originalCommit": "ae8d4de56b57c0e93987897f9e689927962a9e03", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk4NzEzMg==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4432#discussion_r376987132", "bodyText": "Follow project coding conventions", "author": "juanluisrp", "createdAt": "2020-02-10T10:45:42Z", "path": "domain/src/main/java/org/fao/geonet/domain/HarvestHistory.java", "diffHunk": "@@ -271,7 +274,53 @@ public Element getInfoAsXml() throws IOException, JDOMException {\n         if (info == null) {\n             return null;\n         }\n-        return Xml.loadString(info, false);\n+        Element infoAsXml = Xml.loadString(info, false);\n+        infoAsXml = checkInfoXml( infoAsXml );\n+        return infoAsXml;\n+    }\n+\n+    /**\n+     * Check infoAsXml definition content.\n+     * <p>\n+     * Content checks:\n+     * <ul>\n+     *     <li>Check if multiple logfile definitions are present</li>\n+     *     <li>Check if logfile path file exists /li>\n+     * </ul>\n+     *\n+     * </p>\n+     * @param infoAsXml Harvest info xml definition\n+     * @return Harvest info xml definition, with any content checks applied\n+     */\n+    private Element checkInfoXml(Element infoAsXml) {\n+        List<Element> logfileElements = infoAsXml.getChildren(\"logfile\");\n+        // check logfiles present to ensure path exists\n+        if( logfileElements.size() > 0 ) {\n+            if( logfileElements.size() != 1 ){\n+                 Log.warning(Constants.DOMAIN_LOG_MODULE, \"Harvest history unexpectedly lists multiple logfiles: \" + logfileElements.size() );\n+            }\n+            boolean isLogFileFound = false;\n+            for(Iterator iter = logfileElements.iterator(); iter.hasNext(); ){\n+                Element logfile = (Element) iter.next();\n+                String path = logfile.getText();\n+                File file = new File( path );\n+                if (file.exists() && file.canRead() ){\n+                    if(isLogFileFound){", "originalCommit": "ae8d4de56b57c0e93987897f9e689927962a9e03", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk4NzIwNw==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4432#discussion_r376987207", "bodyText": "Follow project coding conventions", "author": "juanluisrp", "createdAt": "2020-02-10T10:45:51Z", "path": "domain/src/main/java/org/fao/geonet/domain/HarvestHistory.java", "diffHunk": "@@ -271,7 +274,53 @@ public Element getInfoAsXml() throws IOException, JDOMException {\n         if (info == null) {\n             return null;\n         }\n-        return Xml.loadString(info, false);\n+        Element infoAsXml = Xml.loadString(info, false);\n+        infoAsXml = checkInfoXml( infoAsXml );\n+        return infoAsXml;\n+    }\n+\n+    /**\n+     * Check infoAsXml definition content.\n+     * <p>\n+     * Content checks:\n+     * <ul>\n+     *     <li>Check if multiple logfile definitions are present</li>\n+     *     <li>Check if logfile path file exists /li>\n+     * </ul>\n+     *\n+     * </p>\n+     * @param infoAsXml Harvest info xml definition\n+     * @return Harvest info xml definition, with any content checks applied\n+     */\n+    private Element checkInfoXml(Element infoAsXml) {\n+        List<Element> logfileElements = infoAsXml.getChildren(\"logfile\");\n+        // check logfiles present to ensure path exists\n+        if( logfileElements.size() > 0 ) {\n+            if( logfileElements.size() != 1 ){\n+                 Log.warning(Constants.DOMAIN_LOG_MODULE, \"Harvest history unexpectedly lists multiple logfiles: \" + logfileElements.size() );\n+            }\n+            boolean isLogFileFound = false;\n+            for(Iterator iter = logfileElements.iterator(); iter.hasNext(); ){\n+                Element logfile = (Element) iter.next();\n+                String path = logfile.getText();\n+                File file = new File( path );\n+                if (file.exists() && file.canRead() ){\n+                    if(isLogFileFound){\n+                        // we already have one logfile\n+                        Log.warning(Constants.DOMAIN_LOG_MODULE, \"Ignoring add unexpected logfile: `\" + path +\"`\");", "originalCommit": "ae8d4de56b57c0e93987897f9e689927962a9e03", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk4NzI5MA==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4432#discussion_r376987290", "bodyText": "Follow project coding conventions", "author": "juanluisrp", "createdAt": "2020-02-10T10:45:59Z", "path": "domain/src/main/java/org/fao/geonet/domain/HarvestHistory.java", "diffHunk": "@@ -271,7 +274,53 @@ public Element getInfoAsXml() throws IOException, JDOMException {\n         if (info == null) {\n             return null;\n         }\n-        return Xml.loadString(info, false);\n+        Element infoAsXml = Xml.loadString(info, false);\n+        infoAsXml = checkInfoXml( infoAsXml );\n+        return infoAsXml;\n+    }\n+\n+    /**\n+     * Check infoAsXml definition content.\n+     * <p>\n+     * Content checks:\n+     * <ul>\n+     *     <li>Check if multiple logfile definitions are present</li>\n+     *     <li>Check if logfile path file exists /li>\n+     * </ul>\n+     *\n+     * </p>\n+     * @param infoAsXml Harvest info xml definition\n+     * @return Harvest info xml definition, with any content checks applied\n+     */\n+    private Element checkInfoXml(Element infoAsXml) {\n+        List<Element> logfileElements = infoAsXml.getChildren(\"logfile\");\n+        // check logfiles present to ensure path exists\n+        if( logfileElements.size() > 0 ) {\n+            if( logfileElements.size() != 1 ){\n+                 Log.warning(Constants.DOMAIN_LOG_MODULE, \"Harvest history unexpectedly lists multiple logfiles: \" + logfileElements.size() );\n+            }\n+            boolean isLogFileFound = false;\n+            for(Iterator iter = logfileElements.iterator(); iter.hasNext(); ){\n+                Element logfile = (Element) iter.next();\n+                String path = logfile.getText();\n+                File file = new File( path );\n+                if (file.exists() && file.canRead() ){\n+                    if(isLogFileFound){\n+                        // we already have one logfile\n+                        Log.warning(Constants.DOMAIN_LOG_MODULE, \"Ignoring add unexpected logfile: `\" + path +\"`\");\n+                        iter.remove();\n+                    }", "originalCommit": "ae8d4de56b57c0e93987897f9e689927962a9e03", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk4NzM4MA==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4432#discussion_r376987380", "bodyText": "Follow project coding conventions", "author": "juanluisrp", "createdAt": "2020-02-10T10:46:09Z", "path": "domain/src/main/java/org/fao/geonet/domain/HarvestHistory.java", "diffHunk": "@@ -271,7 +274,53 @@ public Element getInfoAsXml() throws IOException, JDOMException {\n         if (info == null) {\n             return null;\n         }\n-        return Xml.loadString(info, false);\n+        Element infoAsXml = Xml.loadString(info, false);\n+        infoAsXml = checkInfoXml( infoAsXml );\n+        return infoAsXml;\n+    }\n+\n+    /**\n+     * Check infoAsXml definition content.\n+     * <p>\n+     * Content checks:\n+     * <ul>\n+     *     <li>Check if multiple logfile definitions are present</li>\n+     *     <li>Check if logfile path file exists /li>\n+     * </ul>\n+     *\n+     * </p>\n+     * @param infoAsXml Harvest info xml definition\n+     * @return Harvest info xml definition, with any content checks applied\n+     */\n+    private Element checkInfoXml(Element infoAsXml) {\n+        List<Element> logfileElements = infoAsXml.getChildren(\"logfile\");\n+        // check logfiles present to ensure path exists\n+        if( logfileElements.size() > 0 ) {\n+            if( logfileElements.size() != 1 ){\n+                 Log.warning(Constants.DOMAIN_LOG_MODULE, \"Harvest history unexpectedly lists multiple logfiles: \" + logfileElements.size() );\n+            }\n+            boolean isLogFileFound = false;\n+            for(Iterator iter = logfileElements.iterator(); iter.hasNext(); ){\n+                Element logfile = (Element) iter.next();\n+                String path = logfile.getText();\n+                File file = new File( path );\n+                if (file.exists() && file.canRead() ){\n+                    if(isLogFileFound){\n+                        // we already have one logfile\n+                        Log.warning(Constants.DOMAIN_LOG_MODULE, \"Ignoring add unexpected logfile: `\" + path +\"`\");\n+                        iter.remove();\n+                    }\n+                    else {\n+                        isLogFileFound = true;\n+                    }\n+                }\n+                else {\n+                    Log.warning(Constants.DOMAIN_LOG_MODULE, \"Harvest history logfile `\"+path+\"` ignored, no longer available\" );", "originalCommit": "ae8d4de56b57c0e93987897f9e689927962a9e03", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk4NzQ0Nw==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4432#discussion_r376987447", "bodyText": "Follow project coding conventions", "author": "juanluisrp", "createdAt": "2020-02-10T10:46:17Z", "path": "harvesters/src/main/java/org/fao/geonet/kernel/harvest/harvester/AbstractHarvester.java", "diffHunk": "@@ -712,8 +712,15 @@ private void logHarvest(String logfile, Logger logger, String nodeName, String l\n             if (error != null) {\n                 result = JeevesException.toElement(error);\n             }\n+            Element priorLogfile_ = result.getChild(\"logfile\");\n+            if( priorLogfile_ != null ){", "originalCommit": "ae8d4de56b57c0e93987897f9e689927962a9e03", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk4NzUwMg==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4432#discussion_r376987502", "bodyText": "Follow project coding conventions", "author": "juanluisrp", "createdAt": "2020-02-10T10:46:24Z", "path": "harvesters/src/main/java/org/fao/geonet/kernel/harvest/harvester/AbstractHarvester.java", "diffHunk": "@@ -712,8 +712,15 @@ private void logHarvest(String logfile, Logger logger, String nodeName, String l\n             if (error != null) {\n                 result = JeevesException.toElement(error);\n             }\n+            Element priorLogfile_ = result.getChild(\"logfile\");\n+            if( priorLogfile_ != null ){\n+                // removing prior logfile\n+                logger.warning(\"Detected duplicate logfile: \"+priorLogfile_.getText());", "originalCommit": "ae8d4de56b57c0e93987897f9e689927962a9e03", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk4NzYwMQ==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4432#discussion_r376987601", "bodyText": "Follow project coding conventions", "author": "juanluisrp", "createdAt": "2020-02-10T10:46:34Z", "path": "harvesters/src/main/java/org/fao/geonet/kernel/harvest/harvester/AbstractHarvester.java", "diffHunk": "@@ -712,8 +712,15 @@ private void logHarvest(String logfile, Logger logger, String nodeName, String l\n             if (error != null) {\n                 result = JeevesException.toElement(error);\n             }\n+            Element priorLogfile_ = result.getChild(\"logfile\");\n+            if( priorLogfile_ != null ){\n+                // removing prior logfile\n+                logger.warning(\"Detected duplicate logfile: \"+priorLogfile_.getText());\n+                result.getChildren().remove( priorLogfile_ );", "originalCommit": "ae8d4de56b57c0e93987897f9e689927962a9e03", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a62acae2b500f6049f386f41be24dfc0d880868d", "url": "https://github.com/geonetwork/core-geonetwork/commit/a62acae2b500f6049f386f41be24dfc0d880868d", "message": "revise based on feedback, update formatting\n\nSigned-off-by: Jody Garnett <jody.garnett@gmail.com>", "committedDate": "2020-02-10T14:34:02Z", "type": "commit"}, {"oid": "9cbd2b4edab45a407f646b051389fcef740ea965", "url": "https://github.com/geonetwork/core-geonetwork/commit/9cbd2b4edab45a407f646b051389fcef740ea965", "message": "Format code", "committedDate": "2020-02-10T15:01:59Z", "type": "commit"}, {"oid": "4e9c558356abcfae0e7133b151e0eb1ccff16561", "url": "https://github.com/geonetwork/core-geonetwork/commit/4e9c558356abcfae0e7133b151e0eb1ccff16561", "message": "ignore eclipse .project file\n\nSigned-off-by: Jody Garnett <jody.garnett@gmail.com>", "committedDate": "2020-02-10T15:33:10Z", "type": "commit"}, {"oid": "bc62851e401defaed6685d9a7a5f67f318adb75c", "url": "https://github.com/geonetwork/core-geonetwork/commit/bc62851e401defaed6685d9a7a5f67f318adb75c", "message": "Make window.encodeURIComponent available as filter\n\nFix an empty string in log file name parameter caused by not finding\n`encodeURI` function in the scope. Created a filter that can be used\nto call `encodeURIComponent` that seems a more suitable function to be\ncalled here.", "committedDate": "2020-02-11T12:24:50Z", "type": "commit"}]}