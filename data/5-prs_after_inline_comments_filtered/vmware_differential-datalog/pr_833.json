{"pr_number": 833, "pr_title": "Expose 'Modify' command in Rust/C/Java API ", "pr_createdAt": "2020-12-01T19:35:07Z", "pr_url": "https://github.com/vmware/differential-datalog/pull/833", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc1ODkwNg==", "url": "https://github.com/vmware/differential-datalog/pull/833#discussion_r533758906", "bodyText": "Better to call this getStructFieldUnchecked.", "author": "lalithsuresh", "createdAt": "2020-12-01T22:18:32Z", "path": "java/ddlogapi/DDlogRecord.java", "diffHunk": "@@ -380,12 +397,20 @@ public String getStructName() {\n         return DDlogAPI.ddlog_get_constructor(this.handle);\n     }\n \n-    public DDlogRecord getStructField(int index) {\n+    public DDlogRecord getStructField(int index) throws DDlogException {\n         if (!this.isStruct())\n             throw new RuntimeException(\"Value is not a struct\");\n         return fromSharedHandle(DDlogAPI.ddlog_get_struct_field(this.handle, index));\n     }\n \n+    public DDlogRecord getStructFieldNoEx(int index) {", "originalCommit": "e7690c409fe48f867218bd0dbde76751df6a5da6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc3MDAwMw==", "url": "https://github.com/vmware/differential-datalog/pull/833#discussion_r533770003", "bodyText": "It's checked, but not a checked exception.", "author": "mbudiu-vmw", "createdAt": "2020-12-01T22:40:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc1ODkwNg=="}], "type": "inlineReview"}, {"oid": "53e31f80d101bf61b44030ec1fdf8401ccfb5847", "url": "https://github.com/vmware/differential-datalog/commit/53e31f80d101bf61b44030ec1fdf8401ccfb5847", "message": "ddvalue.rs: Comment out safety checks.\n\nI haven't done thorough evaluation, but the safety checks `partial_cmp`,\n`eq`, and `cmp` appear to add small but non-trivial overhead, e.g., on\nthe redist_opt benchmarks.  Disabling these checks, as they should\nanyway be redundant: assuming the compiler is correct and the\ningest-time type checking is working properly, types are guaranteed to\nmatch.\n\nExpose 'Modify' command in Rust/C/Java API\nSupport for mutators for positional records", "committedDate": "2020-12-03T02:35:43Z", "type": "forcePushed"}, {"oid": "472c8208a30b17e28eab5d9e8fcd5dd88169af25", "url": "https://github.com/vmware/differential-datalog/commit/472c8208a30b17e28eab5d9e8fcd5dd88169af25", "message": "Added support for 'Modify' API command in C and Java.  This required some support in Rust too.", "committedDate": "2020-12-04T00:15:53Z", "type": "commit"}, {"oid": "472c8208a30b17e28eab5d9e8fcd5dd88169af25", "url": "https://github.com/vmware/differential-datalog/commit/472c8208a30b17e28eab5d9e8fcd5dd88169af25", "message": "Added support for 'Modify' API command in C and Java.  This required some support in Rust too.", "committedDate": "2020-12-04T00:15:53Z", "type": "forcePushed"}]}