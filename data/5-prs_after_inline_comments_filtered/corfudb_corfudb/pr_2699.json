{"pr_number": 2699, "pr_title": "Remove Java Generics From CorfuQueue's API", "pr_createdAt": "2020-08-11T22:15:53Z", "pr_url": "https://github.com/CorfuDB/CorfuDB/pull/2699", "timeline": [{"oid": "4e76cb5b55ad0d8efbfa24e2463c53e8d16008f9", "url": "https://github.com/CorfuDB/CorfuDB/commit/4e76cb5b55ad0d8efbfa24e2463c53e8d16008f9", "message": "Remove Java Generics From CorfuQueue's API\n\nSince this queue is designed to be used with protobufs, this patch\nremoves Java generics from the API and uses ProtoBuf's ByteString\ninstead. Fixing the queue type will allow us to serialize the queues\nSMREntries much more efficiently.\n\nThe benchmarks below show how different serializers perform\nwith different payload sizes.\n\n4MB Payload\nBenchmark                           Mode  Cnt    Score    Error  Units\nJsonBenchmark.GoogleGson           thrpt    5    0.818 \u00b1  0.157  ops/s\nJsonBenchmark.ObjectOutputStream   thrpt    5  336.744 \u00b1 54.049  ops/s\nJsonBenchmark.QueueSerializer      thrpt    5  358.410 \u00b1  9.058  ops/s\n\n8MB Payload\nBenchmark                           Mode  Cnt    Score    Error  Units\nJsonBenchmark.kryoSerializer       thrpt    5  116.545 \u00b1 72.152  ops/s\nJsonBenchmark.ObjectOutputStream   thrpt    5  135.228 \u00b1 78.692  ops/s\nJsonBenchmark.QueueSerializer      thrpt    5  163.246 \u00b1 27.071  ops/s\n\n16MB Payload\nBenchmark                           Mode  Cnt    Score    Error  Units\nJsonBenchmark.googleGson           thrpt    5   0.211 \u00b1  0.013  ops/s\nJsonBenchmark.kryoSerializer       thrpt    5   38.168 \u00b1  8.253  ops/s\nJsonBenchmark.ObjectOutputStream   thrpt    5   51.139 \u00b1 60.820  ops/s\nJsonBenchmark.QueueSerializer      thrpt    5  108.701 \u00b1 11.039  ops/s", "committedDate": "2020-08-11T23:08:45Z", "type": "forcePushed"}, {"oid": "d52b9e734a7eef97485c0a9f7a174ce2c60f9eee", "url": "https://github.com/CorfuDB/CorfuDB/commit/d52b9e734a7eef97485c0a9f7a174ce2c60f9eee", "message": "Remove Java Generics From CorfuQueue's API\n\nSince this queue is designed to be used with protobufs, this patch\nremoves Java generics from the API and uses ProtoBuf's ByteString\ninstead. Fixing the queue type will allow us to serialize the queues\nSMREntries much more efficiently.\n\nThe benchmarks below show how different serializers perform\nwith different payload sizes.\n\n4MB Payload\nBenchmark                           Mode  Cnt    Score    Error  Units\nJsonBenchmark.GoogleGson           thrpt    5    0.818 \u00b1  0.157  ops/s\nJsonBenchmark.ObjectOutputStream   thrpt    5  336.744 \u00b1 54.049  ops/s\nJsonBenchmark.QueueSerializer      thrpt    5  358.410 \u00b1  9.058  ops/s\n\n8MB Payload\nBenchmark                           Mode  Cnt    Score    Error  Units\nJsonBenchmark.kryoSerializer       thrpt    5  116.545 \u00b1 72.152  ops/s\nJsonBenchmark.ObjectOutputStream   thrpt    5  135.228 \u00b1 78.692  ops/s\nJsonBenchmark.QueueSerializer      thrpt    5  163.246 \u00b1 27.071  ops/s\n\n16MB Payload\nBenchmark                           Mode  Cnt    Score    Error  Units\nJsonBenchmark.googleGson           thrpt    5   0.211 \u00b1  0.013  ops/s\nJsonBenchmark.kryoSerializer       thrpt    5   38.168 \u00b1  8.253  ops/s\nJsonBenchmark.ObjectOutputStream   thrpt    5   51.139 \u00b1 60.820  ops/s\nJsonBenchmark.QueueSerializer      thrpt    5  108.701 \u00b1 11.039  ops/s", "committedDate": "2020-08-11T23:15:10Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODkxNjc4MQ==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2699#discussion_r468916781", "bodyText": "Make private and remove Secondary indexes.", "author": "Maithem", "createdAt": "2020-08-11T23:17:48Z", "path": "runtime/src/main/java/org/corfudb/runtime/collections/CorfuQueue.java", "diffHunk": "@@ -36,31 +37,30 @@\n  *\n  * Created by hisundar on 5/8/19.\n  *\n- * @param <E>   Type of the entry to be enqueued into the persisted queue\n  */\n @Slf4j\n-public class CorfuQueue<E> {\n+public class CorfuQueue {\n     /**\n      * The main CorfuTable which contains the primary key-value mappings.\n      */\n-    private final CorfuTable<CorfuRecordId, E> corfuTable;\n+    private final CorfuTable<CorfuRecordId, ByteString> corfuTable;\n     private final CorfuGuidGenerator guidGenerator;\n \n-    public CorfuQueue(CorfuRuntime runtime, String streamName, ISerializer serializer,\n-                      Index.Registry<CorfuRecordId, E> indices) {\n-        final Supplier<StreamingMap<CorfuRecordId, E>> mapSupplier =\n-                () -> new StreamingMapDecorator<>(new LinkedHashMap<CorfuRecordId, E>());\n+    public CorfuQueue(CorfuRuntime runtime, String streamName,\n+                      Index.Registry<CorfuRecordId, ByteString> indices) {\n+        final Supplier<StreamingMap<CorfuRecordId, ByteString>> mapSupplier =", "originalCommit": "d52b9e734a7eef97485c0a9f7a174ce2c60f9eee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODkyMjc3Mw==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2699#discussion_r468922773", "bodyText": "Done.", "author": "Maithem", "createdAt": "2020-08-11T23:36:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODkxNjc4MQ=="}], "type": "inlineReview"}, {"oid": "3da671c01577f98a60e8ba869f37891f72fc237b", "url": "https://github.com/CorfuDB/CorfuDB/commit/3da671c01577f98a60e8ba869f37891f72fc237b", "message": "Remove Java Generics From CorfuQueue's API\n\nSince this queue is designed to be used with protobufs, this patch\nremoves Java generics from the API and uses ProtoBuf's ByteString\ninstead. Fixing the queue type will allow us to serialize the queues\nSMREntries much more efficiently.\n\nThe benchmarks below show how different serializers perform\nwith different payload sizes.\n\n4MB Payload\nBenchmark                           Mode  Cnt    Score    Error  Units\nJsonBenchmark.GoogleGson           thrpt    5    0.818 \u00b1  0.157  ops/s\nJsonBenchmark.ObjectOutputStream   thrpt    5  336.744 \u00b1 54.049  ops/s\nJsonBenchmark.QueueSerializer      thrpt    5  358.410 \u00b1  9.058  ops/s\n\n8MB Payload\nBenchmark                           Mode  Cnt    Score    Error  Units\nJsonBenchmark.kryoSerializer       thrpt    5  116.545 \u00b1 72.152  ops/s\nJsonBenchmark.ObjectOutputStream   thrpt    5  135.228 \u00b1 78.692  ops/s\nJsonBenchmark.QueueSerializer      thrpt    5  163.246 \u00b1 27.071  ops/s\n\n16MB Payload\nBenchmark                           Mode  Cnt    Score    Error  Units\nJsonBenchmark.googleGson           thrpt    5   0.211 \u00b1  0.013  ops/s\nJsonBenchmark.kryoSerializer       thrpt    5   38.168 \u00b1  8.253  ops/s\nJsonBenchmark.ObjectOutputStream   thrpt    5   51.139 \u00b1 60.820  ops/s\nJsonBenchmark.QueueSerializer      thrpt    5  108.701 \u00b1 11.039  ops/s", "committedDate": "2020-08-11T23:19:52Z", "type": "forcePushed"}, {"oid": "1a684f83cc3b2acb93b5923a460e3b8d2629adb8", "url": "https://github.com/CorfuDB/CorfuDB/commit/1a684f83cc3b2acb93b5923a460e3b8d2629adb8", "message": "Remove Java Generics From CorfuQueue's API\n\nSince this queue is designed to be used with protobufs, this patch\nremoves Java generics from the API and uses ProtoBuf's ByteString\ninstead. Fixing the queue type will allow us to serialize the queues\nSMREntries much more efficiently.\n\nThe benchmarks below show how different serializers perform\nwith different payload sizes.\n\n4MB Payload\nBenchmark                           Mode  Cnt    Score    Error  Units\nJsonBenchmark.GoogleGson           thrpt    5    0.818 \u00b1  0.157  ops/s\nJsonBenchmark.ObjectOutputStream   thrpt    5  336.744 \u00b1 54.049  ops/s\nJsonBenchmark.QueueSerializer      thrpt    5  358.410 \u00b1  9.058  ops/s\n\n8MB Payload\nBenchmark                           Mode  Cnt    Score    Error  Units\nJsonBenchmark.kryoSerializer       thrpt    5  116.545 \u00b1 72.152  ops/s\nJsonBenchmark.ObjectOutputStream   thrpt    5  135.228 \u00b1 78.692  ops/s\nJsonBenchmark.QueueSerializer      thrpt    5  163.246 \u00b1 27.071  ops/s\n\n16MB Payload\nBenchmark                           Mode  Cnt    Score    Error  Units\nJsonBenchmark.googleGson           thrpt    5   0.211 \u00b1  0.013  ops/s\nJsonBenchmark.kryoSerializer       thrpt    5   38.168 \u00b1  8.253  ops/s\nJsonBenchmark.ObjectOutputStream   thrpt    5   51.139 \u00b1 60.820  ops/s\nJsonBenchmark.QueueSerializer      thrpt    5  108.701 \u00b1 11.039  ops/s", "committedDate": "2020-08-11T23:36:58Z", "type": "forcePushed"}, {"oid": "c4a915309aa9ec790960ebd3b4982d0abf017079", "url": "https://github.com/CorfuDB/CorfuDB/commit/c4a915309aa9ec790960ebd3b4982d0abf017079", "message": "Remove Java Generics From CorfuQueue's API\n\nSince this queue is designed to be used with protobufs, this patch\nremoves Java generics from the API and uses ProtoBuf's ByteString\ninstead. Fixing the queue type will allow us to serialize the queues\nSMREntries much more efficiently.\n\nThe benchmarks below show how different serializers perform\nwith different payload sizes.\n\n4MB Payload\nBenchmark                           Mode  Cnt    Score    Error  Units\nJsonBenchmark.GoogleGson           thrpt    5    0.818 \u00b1  0.157  ops/s\nJsonBenchmark.ObjectOutputStream   thrpt    5  336.744 \u00b1 54.049  ops/s\nJsonBenchmark.QueueSerializer      thrpt    5  358.410 \u00b1  9.058  ops/s\n\n8MB Payload\nBenchmark                           Mode  Cnt    Score    Error  Units\nJsonBenchmark.kryoSerializer       thrpt    5  116.545 \u00b1 72.152  ops/s\nJsonBenchmark.ObjectOutputStream   thrpt    5  135.228 \u00b1 78.692  ops/s\nJsonBenchmark.QueueSerializer      thrpt    5  163.246 \u00b1 27.071  ops/s\n\n16MB Payload\nBenchmark                           Mode  Cnt    Score    Error  Units\nJsonBenchmark.googleGson           thrpt    5   0.211 \u00b1  0.013  ops/s\nJsonBenchmark.kryoSerializer       thrpt    5   38.168 \u00b1  8.253  ops/s\nJsonBenchmark.ObjectOutputStream   thrpt    5   51.139 \u00b1 60.820  ops/s\nJsonBenchmark.QueueSerializer      thrpt    5  108.701 \u00b1 11.039  ops/s", "committedDate": "2020-08-12T01:49:08Z", "type": "forcePushed"}, {"oid": "8a1fd2b715245403b412bee1063dd232307a770c", "url": "https://github.com/CorfuDB/CorfuDB/commit/8a1fd2b715245403b412bee1063dd232307a770c", "message": "Remove Java Generics From CorfuQueue's API + New Queue Serializer\n\nSince this queue is designed to be used with protobufs, this patch\nremoves Java generics from the API and uses ProtoBuf's ByteString\ninstead. Fixing the queue type will allow us to serialize the queues\nSMREntries much more efficiently.\n\nThis patch adds a new queue serializer that is backwards compatible\nwith Serializers.JSON, it should just work without migration.\n\nThe benchmarks below show how different serializers perform\nwith different payload sizes.\n\n4MB Payload\nBenchmark                           Mode  Cnt    Score    Error  Units\nJsonBenchmark.GoogleGson           thrpt    5    0.818 \u00b1  0.157  ops/s\nJsonBenchmark.ObjectOutputStream   thrpt    5  336.744 \u00b1 54.049  ops/s\nJsonBenchmark.QueueSerializer      thrpt    5  358.410 \u00b1  9.058  ops/s\n\n8MB Payload\nBenchmark                           Mode  Cnt    Score    Error  Units\nJsonBenchmark.kryoSerializer       thrpt    5  116.545 \u00b1 72.152  ops/s\nJsonBenchmark.ObjectOutputStream   thrpt    5  135.228 \u00b1 78.692  ops/s\nJsonBenchmark.QueueSerializer      thrpt    5  163.246 \u00b1 27.071  ops/s\n\n16MB Payload\nBenchmark                           Mode  Cnt    Score    Error  Units\nJsonBenchmark.googleGson           thrpt    5   0.211 \u00b1  0.013  ops/s\nJsonBenchmark.kryoSerializer       thrpt    5   38.168 \u00b1  8.253  ops/s\nJsonBenchmark.ObjectOutputStream   thrpt    5   51.139 \u00b1 60.820  ops/s\nJsonBenchmark.QueueSerializer      thrpt    5  108.701 \u00b1 11.039  ops/s", "committedDate": "2020-08-12T02:00:54Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA1MzcwOQ==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2699#discussion_r469053709", "bodyText": "Add support to add CorfuQueue to the MultiCheckpointWriter", "author": "Maithem", "createdAt": "2020-08-12T07:16:26Z", "path": "runtime/src/main/java/org/corfudb/runtime/collections/CorfuQueue.java", "diffHunk": "@@ -36,32 +39,30 @@\n  *\n  * Created by hisundar on 5/8/19.\n  *\n- * @param <E>   Type of the entry to be enqueued into the persisted queue\n  */\n @Slf4j\n-public class CorfuQueue<E> {\n+public class CorfuQueue {\n     /**\n      * The main CorfuTable which contains the primary key-value mappings.\n      */\n-    private final CorfuTable<CorfuRecordId, E> corfuTable;\n+    private final CorfuTable<CorfuRecordId, ByteString> corfuTable;\n     private final CorfuGuidGenerator guidGenerator;\n \n-    public CorfuQueue(CorfuRuntime runtime, String streamName, ISerializer serializer,\n-                      Index.Registry<CorfuRecordId, E> indices) {\n-        final Supplier<StreamingMap<CorfuRecordId, E>> mapSupplier =\n-                () -> new StreamingMapDecorator<>(new LinkedHashMap<CorfuRecordId, E>());\n+    @VisibleForTesting\n+    CorfuQueue(CorfuRuntime runtime, String streamName, ISerializer serializer) {\n+        final Supplier<StreamingMap<CorfuRecordId, ByteString>> mapSupplier =\n+                () -> new StreamingMapDecorator<>(new LinkedHashMap<CorfuRecordId, ByteString>());\n         corfuTable = runtime.getObjectsView().build()\n-                .setTypeToken(new TypeToken<CorfuTable<CorfuRecordId, E>>() {})\n+                .setTypeToken(new TypeToken<CorfuTable<CorfuRecordId, ByteString>>() {})\n                 .setStreamName(streamName)\n-                .setArguments(indices, mapSupplier)\n+                .setArguments(Index.Registry.empty(), mapSupplier)\n                 .setSerializer(serializer)\n                 .open();", "originalCommit": "8a1fd2b715245403b412bee1063dd232307a770c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTUxODU4NA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2699#discussion_r469518584", "bodyText": "Done.", "author": "Maithem", "createdAt": "2020-08-12T20:24:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA1MzcwOQ=="}], "type": "inlineReview"}, {"oid": "ab6b87417fab18c5cdcf3b3fdcd5da5ca68b445f", "url": "https://github.com/CorfuDB/CorfuDB/commit/ab6b87417fab18c5cdcf3b3fdcd5da5ca68b445f", "message": "Remove Java Generics From CorfuQueue's API + New Queue Serializer\n\nSince this queue is designed to be used with protobufs, this patch\nremoves Java generics from the API and uses ProtoBuf's ByteString\ninstead. Fixing the queue type will allow us to serialize the queues\nSMREntries much more efficiently.\n\nThis patch adds a new queue serializer that is backwards compatible\nwith Serializers.JSON, it should just work without migration.\n\nThe benchmarks below show how different serializers perform\nwith different payload sizes.\n\n4MB Payload\nBenchmark                           Mode  Cnt    Score    Error  Units\nJsonBenchmark.GoogleGson           thrpt    5    0.818 \u00b1  0.157  ops/s\nJsonBenchmark.ObjectOutputStream   thrpt    5  336.744 \u00b1 54.049  ops/s\nJsonBenchmark.QueueSerializer      thrpt    5  358.410 \u00b1  9.058  ops/s\n\n8MB Payload\nBenchmark                           Mode  Cnt    Score    Error  Units\nJsonBenchmark.kryoSerializer       thrpt    5  116.545 \u00b1 72.152  ops/s\nJsonBenchmark.ObjectOutputStream   thrpt    5  135.228 \u00b1 78.692  ops/s\nJsonBenchmark.QueueSerializer      thrpt    5  163.246 \u00b1 27.071  ops/s\n\n16MB Payload\nBenchmark                           Mode  Cnt    Score    Error  Units\nJsonBenchmark.googleGson           thrpt    5   0.211 \u00b1  0.013  ops/s\nJsonBenchmark.kryoSerializer       thrpt    5   38.168 \u00b1  8.253  ops/s\nJsonBenchmark.ObjectOutputStream   thrpt    5   51.139 \u00b1 60.820  ops/s\nJsonBenchmark.QueueSerializer      thrpt    5  108.701 \u00b1 11.039  ops/s", "committedDate": "2020-08-12T20:19:59Z", "type": "forcePushed"}, {"oid": "b8962d75d58b3cafbf4bb26d28969ce23a289bb0", "url": "https://github.com/CorfuDB/CorfuDB/commit/b8962d75d58b3cafbf4bb26d28969ce23a289bb0", "message": "Remove Java Generics From CorfuQueue's API + New Queue Serializer\n\nSince this queue is designed to be used with protobufs, this patch\nremoves Java generics from the API and uses ProtoBuf's ByteString\ninstead. Fixing the queue type will allow us to serialize the queues\nSMREntries much more efficiently.\n\nThis patch adds a new queue serializer that is backwards compatible\nwith Serializers.JSON, it should just work without migration.\n\nThe benchmarks below show how different serializers perform\nwith different payload sizes.\n\n4MB Payload\nBenchmark                           Mode  Cnt    Score    Error  Units\nJsonBenchmark.GoogleGson           thrpt    5    0.818 \u00b1  0.157  ops/s\nJsonBenchmark.ObjectOutputStream   thrpt    5  336.744 \u00b1 54.049  ops/s\nJsonBenchmark.QueueSerializer      thrpt    5  358.410 \u00b1  9.058  ops/s\n\n8MB Payload\nBenchmark                           Mode  Cnt    Score    Error  Units\nJsonBenchmark.kryoSerializer       thrpt    5  116.545 \u00b1 72.152  ops/s\nJsonBenchmark.ObjectOutputStream   thrpt    5  135.228 \u00b1 78.692  ops/s\nJsonBenchmark.QueueSerializer      thrpt    5  163.246 \u00b1 27.071  ops/s\n\n16MB Payload\nBenchmark                           Mode  Cnt    Score    Error  Units\nJsonBenchmark.googleGson           thrpt    5   0.211 \u00b1  0.013  ops/s\nJsonBenchmark.kryoSerializer       thrpt    5   38.168 \u00b1  8.253  ops/s\nJsonBenchmark.ObjectOutputStream   thrpt    5   51.139 \u00b1 60.820  ops/s\nJsonBenchmark.QueueSerializer      thrpt    5  108.701 \u00b1 11.039  ops/s", "committedDate": "2020-08-12T20:23:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU2MTEwNA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2699#discussion_r469561104", "bodyText": "just wondering for code coverage of the sequence and id part can this test case wrap the enqueue in a transaction?", "author": "hisundar", "createdAt": "2020-08-12T21:36:51Z", "path": "test/src/test/java/org/corfudb/runtime/collections/CorfuQueueTest.java", "diffHunk": "@@ -105,9 +117,133 @@ public String toString() {\n         bmap.put(new ByteArray(\"fg\".getBytes()), \"fg\");\n         bmap.put(new ByteArray(\"abcd\".getBytes()), \"abcd\");\n         for (Map.Entry<ByteArray, String> b : bmap.entrySet()) {\n-            System.out.println(b);\n+            log.debug(\"Entry {}\", b);\n         }\n+    }\n+\n+    @Test\n+    public void queueBackwardsCompatibility() {\n+        CorfuQueue oldQueueInstance1 = new CorfuQueue(getDefaultRuntime(), \"test\",\n+                Serializers.JSON);\n+\n+        CorfuRuntime rt2 = getNewRuntime(getDefaultNode()).connect();\n+        CorfuQueue oldQueueInstance2 = new CorfuQueue(rt2, \"test\",\n+                Serializers.QUEUE_SERIALIZER);\n+\n+        // produce items to the queue with two different serializers from two different clients\n+        final int numItemsToProduce = 10;\n+        IntStream.range(0, numItemsToProduce).forEach(itemIdx -> {\n+            if (itemIdx % 2 == 0) {\n+                oldQueueInstance1.enqueue(getByteString(String.valueOf(itemIdx)));", "originalCommit": "b8962d75d58b3cafbf4bb26d28969ce23a289bb0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA0MTIyMA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2699#discussion_r470041220", "bodyText": "I think there's a bug. When I wrap oldQueueInstance1 with a transaction, but not oldQueueInstance2, then the read order is flipped. If there is no transaction, then how is addPreCommitListener called?", "author": "Maithem", "createdAt": "2020-08-13T15:33:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU2MTEwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE0NTkwOA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2699#discussion_r470145908", "bodyText": "it won't be called - we can't support a mixed case like that anyway", "author": "hisundar", "createdAt": "2020-08-13T18:01:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU2MTEwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE0ODAzMA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2699#discussion_r470148030", "bodyText": "Why not?\nIf it's not allowed then the operation should be failed.", "author": "Maithem", "createdAt": "2020-08-13T18:05:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU2MTEwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE0ODcyMw==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2699#discussion_r470148723", "bodyText": "Also, most of the tests don't use transactions to produce to the queue, so I'm not sure why this isnt allowed.", "author": "Maithem", "createdAt": "2020-08-13T18:06:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU2MTEwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE1NzI5NA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2699#discussion_r470157294", "bodyText": "Even if we don't mix transactional and non-transaction. Just having non-transactional enqueues will produce an incorrect order.", "author": "Maithem", "createdAt": "2020-08-13T18:22:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU2MTEwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE5ODIwNQ==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2699#discussion_r470198205", "bodyText": "so you suggest we just throw error if queue is used outside a transaction?", "author": "hisundar", "createdAt": "2020-08-13T19:31:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU2MTEwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI1OTU2Ng==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2699#discussion_r470259566", "bodyText": "Yea, it won't make sense to allow it if its incorrect. #2712", "author": "Maithem", "createdAt": "2020-08-13T21:28:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU2MTEwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU2MjQ4NQ==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2699#discussion_r469562485", "bodyText": "No you are right - the sequence should not be included here. perhaps you can remove the TODO?", "author": "hisundar", "createdAt": "2020-08-12T21:40:03Z", "path": "runtime/src/main/java/org/corfudb/runtime/collections/CorfuQueue.java", "diffHunk": "@@ -135,6 +147,24 @@ public boolean equals(Object o) {\n             return getEntryId() == that.getEntryId();\n         }\n \n+        @Override\n+        public byte[] generateCorfuHash() {\n+            // Note that this hash is used for transaction conflict resolution and shouldn't\n+            // generate collisions for different entries\n+            // TODO(Maithem) this probably needs the sequence number to", "originalCommit": "b8962d75d58b3cafbf4bb26d28969ce23a289bb0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0f877e73c4a729244af74a669950bd532735973c", "url": "https://github.com/CorfuDB/CorfuDB/commit/0f877e73c4a729244af74a669950bd532735973c", "message": "Remove Java Generics From CorfuQueue's API + New Queue Serializer\n\nSince this queue is designed to be used with protobufs, this patch\nremoves Java generics from the API and uses ProtoBuf's ByteString\ninstead. Fixing the queue type will allow us to serialize the queues\nSMREntries much more efficiently.\n\nThis patch adds a new queue serializer that is backwards compatible\nwith Serializers.JSON, it should just work without migration.\n\nThe benchmarks below show how different serializers perform\nwith different payload sizes.\n\n4MB Payload\nBenchmark                           Mode  Cnt    Score    Error  Units\nJsonBenchmark.GoogleGson           thrpt    5    0.818 \u00b1  0.157  ops/s\nJsonBenchmark.ObjectOutputStream   thrpt    5  336.744 \u00b1 54.049  ops/s\nJsonBenchmark.QueueSerializer      thrpt    5  358.410 \u00b1  9.058  ops/s\n\n8MB Payload\nBenchmark                           Mode  Cnt    Score    Error  Units\nJsonBenchmark.kryoSerializer       thrpt    5  116.545 \u00b1 72.152  ops/s\nJsonBenchmark.ObjectOutputStream   thrpt    5  135.228 \u00b1 78.692  ops/s\nJsonBenchmark.QueueSerializer      thrpt    5  163.246 \u00b1 27.071  ops/s\n\n16MB Payload\nBenchmark                           Mode  Cnt    Score    Error  Units\nJsonBenchmark.googleGson           thrpt    5   0.211 \u00b1  0.013  ops/s\nJsonBenchmark.kryoSerializer       thrpt    5   38.168 \u00b1  8.253  ops/s\nJsonBenchmark.ObjectOutputStream   thrpt    5   51.139 \u00b1 60.820  ops/s\nJsonBenchmark.QueueSerializer      thrpt    5  108.701 \u00b1 11.039  ops/s", "committedDate": "2020-08-13T00:13:47Z", "type": "forcePushed"}, {"oid": "8d956b59037e7a13efb45e66a27a0ae870d5e13b", "url": "https://github.com/CorfuDB/CorfuDB/commit/8d956b59037e7a13efb45e66a27a0ae870d5e13b", "message": "Remove Java Generics From CorfuQueue's API + New Queue Serializer\n\nSince this queue is designed to be used with protobufs, this patch\nremoves Java generics from the API and uses ProtoBuf's ByteString\ninstead. Fixing the queue type will allow us to serialize the queues\nSMREntries much more efficiently.\n\nThis patch adds a new queue serializer that is backwards compatible\nwith Serializers.JSON, it should just work without migration.\n\nThe benchmarks below show how different serializers perform\nwith different payload sizes.\n\n4MB Payload\nBenchmark                           Mode  Cnt    Score    Error  Units\nJsonBenchmark.GoogleGson           thrpt    5    0.818 \u00b1  0.157  ops/s\nJsonBenchmark.ObjectOutputStream   thrpt    5  336.744 \u00b1 54.049  ops/s\nJsonBenchmark.QueueSerializer      thrpt    5  358.410 \u00b1  9.058  ops/s\n\n8MB Payload\nBenchmark                           Mode  Cnt    Score    Error  Units\nJsonBenchmark.kryoSerializer       thrpt    5  116.545 \u00b1 72.152  ops/s\nJsonBenchmark.ObjectOutputStream   thrpt    5  135.228 \u00b1 78.692  ops/s\nJsonBenchmark.QueueSerializer      thrpt    5  163.246 \u00b1 27.071  ops/s\n\n16MB Payload\nBenchmark                           Mode  Cnt    Score    Error  Units\nJsonBenchmark.googleGson           thrpt    5   0.211 \u00b1  0.013  ops/s\nJsonBenchmark.kryoSerializer       thrpt    5   38.168 \u00b1  8.253  ops/s\nJsonBenchmark.ObjectOutputStream   thrpt    5   51.139 \u00b1 60.820  ops/s\nJsonBenchmark.QueueSerializer      thrpt    5  108.701 \u00b1 11.039  ops/s", "committedDate": "2020-08-13T21:14:42Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI3NTUwMw==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2699#discussion_r470275503", "bodyText": "maybe rename to tag? It has the same name as the serializer type.", "author": "zhangn49", "createdAt": "2020-08-13T22:07:00Z", "path": "runtime/src/main/java/org/corfudb/util/serializer/CorfuQueueSerializer.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package org.corfudb.util.serializer;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+\n+import com.google.protobuf.ByteString;\n+import io.netty.buffer.ByteBuf;\n+import org.corfudb.runtime.CorfuRuntime;\n+import org.corfudb.runtime.collections.CorfuQueue;\n+\n+public class CorfuQueueSerializer implements ISerializer {\n+\n+    // Serialization tag for a queue's metadata entry\n+    private final byte entryRecordIdMarker = 1;\n+\n+    // Serialization tag for the queue's payload\n+    private final byte entryPayloadMarker = 2;\n+\n+    private final byte type;\n+\n+    public CorfuQueueSerializer(byte type) {\n+        this.type = type;\n+    }\n+\n+    /**\n+     * {@inheritDoc}\n+     */\n+    @Override\n+    public byte getType() {\n+        return type;\n+    }\n+\n+    /**\n+     * {@inheritDoc}\n+     */\n+    @Override\n+    public Object deserialize(ByteBuf b, CorfuRuntime rt) {\n+        byte type = b.readByte();", "originalCommit": "8d956b59037e7a13efb45e66a27a0ae870d5e13b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI3NzkwMg==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2699#discussion_r470277902", "bodyText": "Will this test fail after #2712 ?", "author": "zhangn49", "createdAt": "2020-08-13T22:13:11Z", "path": "test/src/test/java/org/corfudb/runtime/collections/CorfuQueueTest.java", "diffHunk": "@@ -105,9 +117,136 @@ public String toString() {\n         bmap.put(new ByteArray(\"fg\".getBytes()), \"fg\");\n         bmap.put(new ByteArray(\"abcd\".getBytes()), \"abcd\");\n         for (Map.Entry<ByteArray, String> b : bmap.entrySet()) {\n-            System.out.println(b);\n+            log.debug(\"Entry {}\", b);\n         }\n+    }\n+\n+    @Test\n+    public void queueBackwardsCompatibility() {\n+        CorfuQueue oldQueueInstance1 = new CorfuQueue(getDefaultRuntime(), \"test\",\n+                Serializers.JSON);\n+\n+        CorfuRuntime rt2 = getNewRuntime(getDefaultNode()).connect();\n+        CorfuQueue oldQueueInstance2 = new CorfuQueue(rt2, \"test\",\n+                Serializers.QUEUE_SERIALIZER);\n+\n+        // produce items to the queue with two different serializers from two different clients\n+        final int numItemsToProduce = 10;\n+        IntStream.range(0, numItemsToProduce).forEach(itemIdx -> {\n+            if (itemIdx % 2 == 0) {\n+                getDefaultRuntime().getObjectsView().TXBegin();\n+                oldQueueInstance1.enqueue(getByteString(String.valueOf(itemIdx)));\n+                getDefaultRuntime().getObjectsView().TXEnd();\n+            } else {\n+                oldQueueInstance2.enqueue(getByteString(String.valueOf(itemIdx)));\n+            }\n+        });\n \n+        // Verify that a new client is able to see all items produced from the different\n+        // clients\n+        CorfuRuntime rt3 = getNewRuntime(getDefaultNode()).connect();\n+        CorfuQueue newQueueInstance= new CorfuQueue(rt3, \"test\");\n \n+        assertThat(newQueueInstance.size()).isEqualTo(numItemsToProduce);\n+\n+        IntStream.range(0, numItemsToProduce).forEach(itemIdx -> {\n+            System.out.println(newQueueInstance.entryList().get(itemIdx).getEntry().toStringUtf8());\n+            //assertThat(newQueueInstance.entryList().get(itemIdx).getEntry().toStringUtf8())\n+              ///      .isEqualTo(String.valueOf(itemIdx));\n+        });\n+    }\n+\n+    @Test\n+    public void queueMapCompatibility() {\n+\n+        // Produce some items to the corfu queue\n+        CorfuQueue queue = new CorfuQueue(getDefaultRuntime(), \"test\");\n+        final int numItemsToProduce = 10;\n+        IntStream.range(0, numItemsToProduce).forEach(itemIdx -> {\n+            queue.enqueue(getByteString(String.valueOf(itemIdx)));\n+        });\n+\n+        // Verify that the queue can be opened as a map object\n+        CorfuRuntime rt2 = getNewRuntime(getDefaultNode()).connect();\n+        CorfuTable<CorfuQueue.CorfuRecordId, ByteString> map = rt2.getObjectsView()\n+                .build()\n+                .setStreamName(\"test\")\n+                .setTypeToken(new TypeToken<CorfuTable<CorfuQueue.CorfuRecordId, ByteString>>() {})\n+                .setSerializer(Serializers.QUEUE_SERIALIZER)\n+                .open();\n+\n+        assertThat(map.size()).isEqualTo(numItemsToProduce);\n+\n+        Set<String> entryPayloads = map.entryStream()\n+                .map(Map.Entry::getValue)\n+                .map(ByteString::toStringUtf8)\n+                .collect(Collectors.toSet());\n+\n+        assertThat(entryPayloads.size()).isEqualTo(numItemsToProduce);\n+        IntStream.range(0, numItemsToProduce).forEach(itemIdx -> {\n+            assertThat(entryPayloads).contains(String.valueOf(itemIdx));\n+        });\n+    }\n+\n+    @Test\n+    public void queueCheckpointTest() {\n+\n+        // Produce to two different queues using the old and new serializer\n+        CorfuQueue queueInstance1 = new CorfuQueue(getDefaultRuntime(), \"stream1\",\n+                Serializers.JSON);\n+\n+        CorfuQueue queueInstance2 = new CorfuQueue(getDefaultRuntime(), \"stream2\");\n+\n+        final int numItemsToProduce = 10;\n+        IntStream.range(0, numItemsToProduce).forEach(itemIdx -> {\n+            queueInstance1.enqueue(getByteString(String.valueOf(itemIdx)));", "originalCommit": "8d956b59037e7a13efb45e66a27a0ae870d5e13b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "54a7cbbbdc104d4ec6bb67badbae767498680b88", "url": "https://github.com/CorfuDB/CorfuDB/commit/54a7cbbbdc104d4ec6bb67badbae767498680b88", "message": "Remove Java Generics From CorfuQueue's API + New Queue Serializer\n\nSince this queue is designed to be used with protobufs, this patch\nremoves Java generics from the API and uses ProtoBuf's ByteString\ninstead. Fixing the queue type will allow us to serialize the queues\nSMREntries much more efficiently.\n\nThis patch adds a new queue serializer that is backwards compatible\nwith Serializers.JSON, it should just work without migration.\n\nThe benchmarks below show how different serializers perform\nwith different payload sizes.\n\n4MB Payload\nBenchmark                           Mode  Cnt    Score    Error  Units\nJsonBenchmark.GoogleGson           thrpt    5    0.818 \u00b1  0.157  ops/s\nJsonBenchmark.ObjectOutputStream   thrpt    5  336.744 \u00b1 54.049  ops/s\nJsonBenchmark.QueueSerializer      thrpt    5  358.410 \u00b1  9.058  ops/s\n\n8MB Payload\nBenchmark                           Mode  Cnt    Score    Error  Units\nJsonBenchmark.kryoSerializer       thrpt    5  116.545 \u00b1 72.152  ops/s\nJsonBenchmark.ObjectOutputStream   thrpt    5  135.228 \u00b1 78.692  ops/s\nJsonBenchmark.QueueSerializer      thrpt    5  163.246 \u00b1 27.071  ops/s\n\n16MB Payload\nBenchmark                           Mode  Cnt    Score    Error  Units\nJsonBenchmark.googleGson           thrpt    5   0.211 \u00b1  0.013  ops/s\nJsonBenchmark.kryoSerializer       thrpt    5   38.168 \u00b1  8.253  ops/s\nJsonBenchmark.ObjectOutputStream   thrpt    5   51.139 \u00b1 60.820  ops/s\nJsonBenchmark.QueueSerializer      thrpt    5  108.701 \u00b1 11.039  ops/s", "committedDate": "2020-08-13T23:33:02Z", "type": "forcePushed"}, {"oid": "187830522ae72784b9ccf52be3058b96fd121850", "url": "https://github.com/CorfuDB/CorfuDB/commit/187830522ae72784b9ccf52be3058b96fd121850", "message": "Remove Java Generics From CorfuQueue's API + New Queue Serializer\n\nSince this queue is designed to be used with protobufs, this patch\nremoves Java generics from the API and uses ProtoBuf's ByteString\ninstead. Fixing the queue type will allow us to serialize the queues\nSMREntries much more efficiently.\n\nThis patch adds a new queue serializer that is backwards compatible\nwith Serializers.JSON, it should just work without migration.\n\nThe benchmarks below show how different serializers perform\nwith different payload sizes.\n\n4MB Payload\nBenchmark                           Mode  Cnt    Score    Error  Units\nJsonBenchmark.GoogleGson           thrpt    5    0.818 \u00b1  0.157  ops/s\nJsonBenchmark.ObjectOutputStream   thrpt    5  336.744 \u00b1 54.049  ops/s\nJsonBenchmark.QueueSerializer      thrpt    5  358.410 \u00b1  9.058  ops/s\n\n8MB Payload\nBenchmark                           Mode  Cnt    Score    Error  Units\nJsonBenchmark.kryoSerializer       thrpt    5  116.545 \u00b1 72.152  ops/s\nJsonBenchmark.ObjectOutputStream   thrpt    5  135.228 \u00b1 78.692  ops/s\nJsonBenchmark.QueueSerializer      thrpt    5  163.246 \u00b1 27.071  ops/s\n\n16MB Payload\nBenchmark                           Mode  Cnt    Score    Error  Units\nJsonBenchmark.googleGson           thrpt    5   0.211 \u00b1  0.013  ops/s\nJsonBenchmark.kryoSerializer       thrpt    5   38.168 \u00b1  8.253  ops/s\nJsonBenchmark.ObjectOutputStream   thrpt    5   51.139 \u00b1 60.820  ops/s\nJsonBenchmark.QueueSerializer      thrpt    5  108.701 \u00b1 11.039  ops/s", "committedDate": "2020-08-14T08:13:37Z", "type": "forcePushed"}, {"oid": "650d2e403a6bf5d234a8712146f365ce1925ef56", "url": "https://github.com/CorfuDB/CorfuDB/commit/650d2e403a6bf5d234a8712146f365ce1925ef56", "message": "Remove Java Generics From CorfuQueue's API + New Queue Serializer\n\nSince this queue is designed to be used with protobufs, this patch\nremoves Java generics from the API and uses ProtoBuf's ByteString\ninstead. Fixing the queue type will allow us to serialize the queues\nSMREntries much more efficiently.\n\nThis patch adds a new queue serializer that is backwards compatible\nwith Serializers.JSON, it should just work without migration.\n\nThe benchmarks below show how different serializers perform\nwith different payload sizes.\n\n4MB Payload\nBenchmark                           Mode  Cnt    Score    Error  Units\nJsonBenchmark.GoogleGson           thrpt    5    0.818 \u00b1  0.157  ops/s\nJsonBenchmark.ObjectOutputStream   thrpt    5  336.744 \u00b1 54.049  ops/s\nJsonBenchmark.QueueSerializer      thrpt    5  358.410 \u00b1  9.058  ops/s\n\n8MB Payload\nBenchmark                           Mode  Cnt    Score    Error  Units\nJsonBenchmark.kryoSerializer       thrpt    5  116.545 \u00b1 72.152  ops/s\nJsonBenchmark.ObjectOutputStream   thrpt    5  135.228 \u00b1 78.692  ops/s\nJsonBenchmark.QueueSerializer      thrpt    5  163.246 \u00b1 27.071  ops/s\n\n16MB Payload\nBenchmark                           Mode  Cnt    Score    Error  Units\nJsonBenchmark.googleGson           thrpt    5   0.211 \u00b1  0.013  ops/s\nJsonBenchmark.kryoSerializer       thrpt    5   38.168 \u00b1  8.253  ops/s\nJsonBenchmark.ObjectOutputStream   thrpt    5   51.139 \u00b1 60.820  ops/s\nJsonBenchmark.QueueSerializer      thrpt    5  108.701 \u00b1 11.039  ops/s", "committedDate": "2020-08-14T19:48:45Z", "type": "commit"}, {"oid": "650d2e403a6bf5d234a8712146f365ce1925ef56", "url": "https://github.com/CorfuDB/CorfuDB/commit/650d2e403a6bf5d234a8712146f365ce1925ef56", "message": "Remove Java Generics From CorfuQueue's API + New Queue Serializer\n\nSince this queue is designed to be used with protobufs, this patch\nremoves Java generics from the API and uses ProtoBuf's ByteString\ninstead. Fixing the queue type will allow us to serialize the queues\nSMREntries much more efficiently.\n\nThis patch adds a new queue serializer that is backwards compatible\nwith Serializers.JSON, it should just work without migration.\n\nThe benchmarks below show how different serializers perform\nwith different payload sizes.\n\n4MB Payload\nBenchmark                           Mode  Cnt    Score    Error  Units\nJsonBenchmark.GoogleGson           thrpt    5    0.818 \u00b1  0.157  ops/s\nJsonBenchmark.ObjectOutputStream   thrpt    5  336.744 \u00b1 54.049  ops/s\nJsonBenchmark.QueueSerializer      thrpt    5  358.410 \u00b1  9.058  ops/s\n\n8MB Payload\nBenchmark                           Mode  Cnt    Score    Error  Units\nJsonBenchmark.kryoSerializer       thrpt    5  116.545 \u00b1 72.152  ops/s\nJsonBenchmark.ObjectOutputStream   thrpt    5  135.228 \u00b1 78.692  ops/s\nJsonBenchmark.QueueSerializer      thrpt    5  163.246 \u00b1 27.071  ops/s\n\n16MB Payload\nBenchmark                           Mode  Cnt    Score    Error  Units\nJsonBenchmark.googleGson           thrpt    5   0.211 \u00b1  0.013  ops/s\nJsonBenchmark.kryoSerializer       thrpt    5   38.168 \u00b1  8.253  ops/s\nJsonBenchmark.ObjectOutputStream   thrpt    5   51.139 \u00b1 60.820  ops/s\nJsonBenchmark.QueueSerializer      thrpt    5  108.701 \u00b1 11.039  ops/s", "committedDate": "2020-08-14T19:48:45Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDgzNzM0OQ==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2699#discussion_r470837349", "bodyText": "Codacy found an issue: JUnit tests should include assert() or fail()", "author": "corfudb-bot", "createdAt": "2020-08-14T19:55:03Z", "path": "test/src/test/java/org/corfudb/runtime/collections/CorfuQueueTest.java", "diffHunk": "@@ -124,7 +131,138 @@ public String toString() {\n         bmap.put(new ByteArray(\"fg\".getBytes()), \"fg\");\n         bmap.put(new ByteArray(\"abcd\".getBytes()), \"abcd\");\n         for (Map.Entry<ByteArray, String> b : bmap.entrySet()) {\n-            log.debug(\"{}\", b);\n+            log.debug(\"Entry {}\", b);\n         }\n     }\n+\n+    @Test\n+    public void queueBackwardsCompatibility() {\n+        CorfuQueue oldQueueInstance1 = new CorfuQueue(getDefaultRuntime(), \"test\",\n+                Serializers.JSON);\n+\n+        CorfuRuntime rt2 = getNewRuntime(getDefaultNode()).connect();\n+        CorfuQueue oldQueueInstance2 = new CorfuQueue(rt2, \"test\",\n+                Serializers.QUEUE_SERIALIZER);\n+\n+        // produce items to the queue with two different serializers from two different clients\n+        final int numItemsToProduce = 10;\n+        IntStream.range(0, numItemsToProduce).forEach(itemIdx -> {\n+            if (itemIdx % 2 == 0) {\n+                executeTxn(getDefaultRuntime(),\n+                        () -> oldQueueInstance1.enqueue(getByteString(String.valueOf(itemIdx))));\n+            } else {\n+                executeTxn(rt2,\n+                        () -> oldQueueInstance2.enqueue(getByteString(String.valueOf(itemIdx))));\n+            }\n+        });\n+\n+        // Verify that a new client is able to see all items produced from the different\n+        // clients\n+        CorfuRuntime rt3 = getNewRuntime(getDefaultNode()).connect();\n+        CorfuQueue newQueueInstance= new CorfuQueue(rt3, \"test\");\n+\n+        assertThat(newQueueInstance.size()).isEqualTo(numItemsToProduce);\n+\n+        IntStream.range(0, numItemsToProduce).forEach(itemIdx -> {\n+            assertThat(newQueueInstance.entryList().get(itemIdx).getEntry().toStringUtf8())\n+                    .isEqualTo(String.valueOf(itemIdx));\n+        });\n+    }\n+\n+    @Test\n+    public void queueMapCompatibility() {\n+\n+        // Produce some items to the corfu queue\n+        CorfuQueue queue = new CorfuQueue(getDefaultRuntime(), \"test\");\n+        final int numItemsToProduce = 10;\n+        IntStream.range(0, numItemsToProduce).forEach(itemIdx -> {\n+            executeTxn(getDefaultRuntime(),\n+                    () -> queue.enqueue(getByteString(String.valueOf(itemIdx))));\n+        });\n+\n+        // Verify that the queue can be opened as a map object\n+        CorfuRuntime rt2 = getNewRuntime(getDefaultNode()).connect();\n+        CorfuTable<CorfuQueue.CorfuRecordId, ByteString> map = rt2.getObjectsView()\n+                .build()\n+                .setStreamName(\"test\")\n+                .setTypeToken(new TypeToken<CorfuTable<CorfuQueue.CorfuRecordId, ByteString>>() {})\n+                .setSerializer(Serializers.QUEUE_SERIALIZER)\n+                .open();\n+\n+        assertThat(map.size()).isEqualTo(numItemsToProduce);\n+\n+        Set<String> entryPayloads = map.entryStream()\n+                .map(Map.Entry::getValue)\n+                .map(ByteString::toStringUtf8)\n+                .collect(Collectors.toSet());\n+\n+        assertThat(entryPayloads.size()).isEqualTo(numItemsToProduce);\n+        IntStream.range(0, numItemsToProduce).forEach(itemIdx -> {\n+            assertThat(entryPayloads).contains(String.valueOf(itemIdx));\n+        });\n+    }\n+\n+    @Test\n+    public void queueCheckpointTest() {", "originalCommit": "650d2e403a6bf5d234a8712146f365ce1925ef56", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}