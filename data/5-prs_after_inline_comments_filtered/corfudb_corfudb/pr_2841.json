{"pr_number": 2841, "pr_title": "Remove deps on logback", "pr_createdAt": "2020-12-07T23:37:13Z", "pr_url": "https://github.com/CorfuDB/CorfuDB/pull/2841", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk2ODIwNQ==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2841#discussion_r537968205", "bodyText": "You can probably check if a logger was defined or not with Logger::isInfoEnabled", "author": "Maithem", "createdAt": "2020-12-08T01:45:16Z", "path": "runtime/src/main/java/org/corfudb/runtime/CorfuRuntime.java", "diffHunk": "@@ -847,13 +848,9 @@ private CorfuRuntime(@Nonnull CorfuRuntimeParameters parameters) {\n                 this.parameters.getMicroMeterRuntimeConfig();\n \n         if (microMeterRuntimeConfig.metricsEnabled) {\n-            LoggerContext context =  (LoggerContext) LoggerFactory.getILoggerFactory();\n-            registry = Optional.ofNullable(context.exists(microMeterRuntimeConfig.configuredLoggerName))\n-                    .map(logger -> MeterRegistryProvider.MeterRegistryInitializer.newInstance(logger,\n+            Logger logger = LoggerFactory.getLogger(microMeterRuntimeConfig.configuredLoggerName);\n+            registry = Optional.of(MeterRegistryInitializer.newInstance(logger,\n                             microMeterRuntimeConfig.loggingInterval, parameters.clientId));\n-            if (!registry.isPresent()) {\n-                log.warn(\"Logger was not found to enable metrics.\");\n-            }", "originalCommit": "c0b98e4a1585842049a444fdb181f9bcd34dc02d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODcxMjI1MQ==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2841#discussion_r538712251", "bodyText": "done", "author": "PavelZaytsev", "createdAt": "2020-12-08T18:43:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk2ODIwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk3NjU3OA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2841#discussion_r537976578", "bodyText": "What if two different suppliers are passed?\nI don't think its a good idea to just silently print a warning message.", "author": "Maithem", "createdAt": "2020-12-08T02:05:27Z", "path": "common/src/main/java/org/corfudb/common/metrics/micrometer/MeterRegistryProvider.java", "diffHunk": "@@ -70,7 +72,8 @@ public static synchronized void init(Logger logger, Duration loggingInterval, St\n \n         private static void init(Supplier<Optional<MeterRegistry>> meterRegistrySupplier) {\n             if (meterRegistry.isPresent()) {\n-                throw new IllegalStateException(\"Registry has already been initialized.\");\n+                log.warn(\"Registry has already been initialized.\");\n+                return;", "originalCommit": "c0b98e4a1585842049a444fdb181f9bcd34dc02d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODcxMjE2OQ==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2841#discussion_r538712169", "bodyText": "I threw exception here and caught it at the places where we initialize a registry. We do need to ignore it for Corfu and Replication servers because otherwise, it would fail on restarts.", "author": "PavelZaytsev", "createdAt": "2020-12-08T18:42:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk3NjU3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk4OTA0NA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2841#discussion_r537989044", "bodyText": "Should these updates also be made to the RequestHandlerMethods class? This class is only responsible for CorfuMsg types and does not take into account the server handler methods that handle Protobuf messages.", "author": "zfrenette", "createdAt": "2020-12-08T02:40:06Z", "path": "infrastructure/src/main/java/org/corfudb/infrastructure/HandlerMethods.java", "diffHunk": "@@ -207,10 +207,14 @@ private void registerMethod(@Nonnull final MethodHandles.Lookup caller,\n     // Create a timer using cached timer name for the corresponding type\n     private Optional<Timer> getTimer(@Nonnull CorfuMsgType type) {\n         timerNameCache.computeIfAbsent(type,\n-                                       aType -> (CorfuComponent.INFRA_MSG_HANDLER +\n-                                                 aType.name().toLowerCase()));\n+                aType -> (CorfuComponent.INFRA_MSG_HANDLER +\n+                        aType.name().toLowerCase()));\n+        double[] percentiles = new double[]{0.50, 0.95, 0.99};\n \n         return MeterRegistryProvider.getInstance()\n-                .map(registry -> Timer.builder(timerNameCache.get(type)).register(registry));\n+                .map(registry -> Timer.builder(timerNameCache.get(type))\n+                        .publishPercentiles(percentiles)\n+                        .publishPercentileHistogram(true)\n+                        .register(registry));", "originalCommit": "fd270fe8a09f61cf8378c7878004bf21038a9639", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODcxMDYyMA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2841#discussion_r538710620", "bodyText": "Did not know about RequestHandlerMethods. I'll address in a separate PR, because this one is mostly to remove dependencies on logback.", "author": "PavelZaytsev", "createdAt": "2020-12-08T18:41:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk4OTA0NA=="}], "type": "inlineReview"}, {"oid": "07a09b1ad85759cb2b2caab064e1e5a7dea105de", "url": "https://github.com/CorfuDB/CorfuDB/commit/07a09b1ad85759cb2b2caab064e1e5a7dea105de", "message": "Remove dep on logback for runtime metrics", "committedDate": "2020-12-08T02:41:24Z", "type": "commit"}, {"oid": "07a09b1ad85759cb2b2caab064e1e5a7dea105de", "url": "https://github.com/CorfuDB/CorfuDB/commit/07a09b1ad85759cb2b2caab064e1e5a7dea105de", "message": "Remove dep on logback for runtime metrics", "committedDate": "2020-12-08T02:41:24Z", "type": "forcePushed"}]}