{"pr_number": 2769, "pr_title": "Local datastore read/write performance improvement.", "pr_createdAt": "2020-09-12T09:09:40Z", "pr_url": "https://github.com/CorfuDB/CorfuDB/pull/2769", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQ2MTc1OQ==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2769#discussion_r487461759", "bodyText": "You can use putBytes(ByteBuffer bytes) directly", "author": "Maithem", "createdAt": "2020-09-13T00:05:13Z", "path": "infrastructure/src/main/java/org/corfudb/infrastructure/datastore/DataStore.java", "diffHunk": "@@ -93,18 +97,15 @@ public DataStore(@Nonnull Map<String, Object> opts,\n         return Caffeine.newBuilder().build(k -> null);\n     }\n \n-\n-    public static int getChecksum(byte[] bytes) {\n+    private static int getChecksum(byte[] bytes) {", "originalCommit": "6dbe9a92e1f55bcd66dd0bcfbc14fe2e72a4a666", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQ5NDA0Mg==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2769#discussion_r487494042", "bodyText": "See below comments.", "author": "WenbinZhu", "createdAt": "2020-09-13T07:31:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQ2MTc1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQ2MTkwMg==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2769#discussion_r487461902", "bodyText": "String.getBytes will create a new buffer, you can eliminate it by using the String instead.", "author": "Maithem", "createdAt": "2020-09-13T00:07:13Z", "path": "infrastructure/src/main/java/org/corfudb/infrastructure/datastore/DataStore.java", "diffHunk": "@@ -129,12 +133,19 @@ public synchronized void write(@Nonnull String key, @Nonnull Object value) {\n                             String jsonPayload = JsonUtils.parser.toJson(value, value.getClass());\n                             byte[] bytes = jsonPayload.getBytes();", "originalCommit": "6dbe9a92e1f55bcd66dd0bcfbc14fe2e72a4a666", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQ5MzkzMw==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2769#discussion_r487493933", "bodyText": "See below comments.", "author": "WenbinZhu", "createdAt": "2020-09-13T07:29:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQ2MTkwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQ2MTk5MQ==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2769#discussion_r487461991", "bodyText": "To eliminate the other buffer copy you can just use buffer.writeCharSequence(jsonPayload, Charset.defaultCharset()); , or maybe explicitly set it to UTF-8", "author": "Maithem", "createdAt": "2020-09-13T00:08:40Z", "path": "infrastructure/src/main/java/org/corfudb/infrastructure/datastore/DataStore.java", "diffHunk": "@@ -129,12 +133,19 @@ public synchronized void write(@Nonnull String key, @Nonnull Object value) {\n                             String jsonPayload = JsonUtils.parser.toJson(value, value.getClass());\n                             byte[] bytes = jsonPayload.getBytes();\n \n-                            ByteBuffer buffer = ByteBuffer.allocate(bytes.length\n-                                    + Integer.BYTES);\n-                            buffer.putInt(getChecksum(bytes));\n-                            buffer.put(bytes);\n-                            Files.write(tmpPath, buffer.array(), StandardOpenOption.CREATE,\n+                            buffer = Unpooled.directBuffer(bytes.length + Integer.BYTES);\n+                            buffer.writeInt(getChecksum(bytes));\n+                            buffer.writeBytes(bytes);", "originalCommit": "6dbe9a92e1f55bcd66dd0bcfbc14fe2e72a4a666", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQ5Mzc1MQ==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2769#discussion_r487493751", "bodyText": "There are some implementation problems if we do buffer.writeCharSequence. 1) depending on the charset, the final capacity of byte buffer is usually not equal to string.length(), so there might be overheads to scale the the initial capacity. 2) the  checksum needs to be serialized before the payload, so we need to rewind the index and rewrite checksum, and the hasher.putBytes(ByteBuffer bytes) takes a nio buffer instead of a netty bytebuf, which requires more index manipulation, seems a bit unclean and error prone...", "author": "WenbinZhu", "createdAt": "2020-09-13T07:28:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQ2MTk5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU5ODI3Nw==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2769#discussion_r487598277", "bodyText": "Its actually not variable for Layout.java, it can be fixed to UTF-8. You're already using a direct buffer.", "author": "Maithem", "createdAt": "2020-09-14T00:25:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQ2MTk5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQ2MjM0NA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2769#discussion_r487462344", "bodyText": "This is failing the build.", "author": "Maithem", "createdAt": "2020-09-13T00:13:36Z", "path": "infrastructure/src/main/java/org/corfudb/infrastructure/datastore/DataStore.java", "diffHunk": "@@ -143,27 +154,28 @@ public synchronized void write(@Nonnull String key, @Nonnull Object value) {\n                             cleanupTask.accept(dsFileName);\n                         } catch (IOException e) {\n                             throw new RuntimeException(e);\n+                        } finally {\n+                            if (buffer != null) {\n+                                buffer.release();\n+                            }\n+                            IOUtils.closeQuietly(writeChannel);\n                         }\n                     }\n \n                     @Override\n-                    public synchronized void delete(@Nonnull String key,\n-                                                    @Nullable Object value,\n-                                                    @Nonnull RemovalCause cause) {\n-                        try {\n-                            Path path = Paths.get(logDirPath, key);\n-                            Files.deleteIfExists(path);\n-                        } catch (IOException e) {\n-                            throw new RuntimeException(e);\n-                        }\n+                    public void delete(@Nonnull String key,\n+                                       @Nullable Object value,\n+                                       @Nonnull RemovalCause cause) {\n+                        // Delete should not remove the underlying file.\n+                        // Removal of underlying file is done by cleanupTask.\n                     }\n                 })\n-                .maximumSize(dsCacheSize)\n                 .build();\n     }\n \n     private <T> T load(Class<T> tClass, String key) {\n         try {\n+            System.out.println(1111);", "originalCommit": "6dbe9a92e1f55bcd66dd0bcfbc14fe2e72a4a666", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQ5Mzc4NA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2769#discussion_r487493784", "bodyText": "good catch! removed.", "author": "WenbinZhu", "createdAt": "2020-09-13T07:28:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQ2MjM0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQ2MzA5NA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2769#discussion_r487463094", "bodyText": "Calling delete and not doing anything is a little weird. I would rather just delete the method from the interface. It's not used anyways.", "author": "Maithem", "createdAt": "2020-09-13T00:24:26Z", "path": "infrastructure/src/main/java/org/corfudb/infrastructure/datastore/DataStore.java", "diffHunk": "@@ -223,7 +233,7 @@ public synchronized void delete(@Nonnull String key,\n     }\n \n     @Override\n-    public synchronized <T> void delete(KvRecord<T> key) {\n+    public <T> void delete(KvRecord<T> key) {\n         cache.invalidate(key.getFullKeyName());\n     }", "originalCommit": "6dbe9a92e1f55bcd66dd0bcfbc14fe2e72a4a666", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQ5Mzg3NQ==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2769#discussion_r487493875", "bodyText": "Delete will remove the in-memory cache entry, but not remove the underlying file. This is being used in tests.", "author": "WenbinZhu", "createdAt": "2020-09-13T07:29:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQ2MzA5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU5ODAxNQ==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2769#discussion_r487598015", "bodyText": "It's only used in the test. I think CacheWriter is not needed here, you can probably use a loading cache.\nIf you really want to keep it then maybe call it invalidate.\n/**\n   * Deletes the value corresponding to the {@code key} from the external resource. The cache will\n   * communicate a delete when the entry is explicitly removed or evicted.\n   *\n   * @param key the non-null key whose value was removed\n   * @param value the value associated with {@code key}, or {@code null} if collected\n   * @param cause the reason for which the entry was removed\n   * @throws RuntimeException or Error, in which case the mapping is unchanged\n   */\n  void delete(@Nonnull K key, @Nullable V value, @Nonnull RemovalCause cause);", "author": "Maithem", "createdAt": "2020-09-14T00:23:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQ2MzA5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzY2MTc1Mw==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2769#discussion_r487661753", "bodyText": "@Maithem I think the reason that we need a CacheWriter is because the write to cache and disk needs to be atomic. And since the interface is a generic kv datastore instead of a cache, maybe it's better to still call it delete?", "author": "WenbinZhu", "createdAt": "2020-09-14T05:37:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQ2MzA5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzcwNTAyMQ==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2769#discussion_r487705021", "bodyText": "I see. You can just use the cache as a concurrent hash map if you need per-key atomicity. My only point is why keep it if you dont need it.", "author": "Maithem", "createdAt": "2020-09-14T07:29:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQ2MzA5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODIxNTMwNA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2769#discussion_r488215304", "bodyText": "Yea, right now we need this interface for tests, and since it's a generic kv store interface, maybe later there will be another impl that actually does delete for purposes other than tests.", "author": "WenbinZhu", "createdAt": "2020-09-14T20:57:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQ2MzA5NA=="}], "type": "inlineReview"}, {"oid": "c65aa9e029ed52c885b60ff60b570a76ac63a577", "url": "https://github.com/CorfuDB/CorfuDB/commit/c65aa9e029ed52c885b60ff60b570a76ac63a577", "message": "Local datastore read/write performance improvement.\n\n- Removed all synchronized keywords.\n- Current cache writer has to do two buffer copies before the actual\nwrite syscall happens, first time copy to a heap buffer to include\nchecksum, then java FileChannle will copy it again to a direct buffer\nbefore performing writes. This patch instead uses a direct buffer for\nthe first copy to eliminate the second copy.", "committedDate": "2020-09-13T07:32:42Z", "type": "forcePushed"}, {"oid": "40e92757292d78cc26405b40145ef5c8794424cb", "url": "https://github.com/CorfuDB/CorfuDB/commit/40e92757292d78cc26405b40145ef5c8794424cb", "message": "Local datastore read/write performance improvement.\n\n- Removed all synchronized keywords.\n- Current cache writer has to do two buffer copies before the actual\nwrite syscall happens, first time copy to a heap buffer to include\nchecksum, then java FileChannle will copy it again to a direct buffer\nbefore performing writes. This patch instead uses a direct buffer for\nthe first copy to eliminate the second copy.", "committedDate": "2020-09-13T07:36:15Z", "type": "forcePushed"}, {"oid": "59d6db6ba515f12980bae69667361a2183d70f1b", "url": "https://github.com/CorfuDB/CorfuDB/commit/59d6db6ba515f12980bae69667361a2183d70f1b", "message": "Local datastore read/write performance improvement.\n\n- Removed all synchronized keywords.\n- Current cache writer has to do two buffer copies before the actual\nwrite syscall happens, first time copy to a heap buffer to include\nchecksum, then java FileChannle will copy it again to a direct buffer\nbefore performing writes. This patch instead uses a direct buffer for\nthe first copy to eliminate the second copy.", "committedDate": "2020-09-15T19:07:43Z", "type": "commit"}, {"oid": "59d6db6ba515f12980bae69667361a2183d70f1b", "url": "https://github.com/CorfuDB/CorfuDB/commit/59d6db6ba515f12980bae69667361a2183d70f1b", "message": "Local datastore read/write performance improvement.\n\n- Removed all synchronized keywords.\n- Current cache writer has to do two buffer copies before the actual\nwrite syscall happens, first time copy to a heap buffer to include\nchecksum, then java FileChannle will copy it again to a direct buffer\nbefore performing writes. This patch instead uses a direct buffer for\nthe first copy to eliminate the second copy.", "committedDate": "2020-09-15T19:07:43Z", "type": "forcePushed"}, {"oid": "523314eecc62b6d9e901e172f2f7ff3ffad6e39b", "url": "https://github.com/CorfuDB/CorfuDB/commit/523314eecc62b6d9e901e172f2f7ff3ffad6e39b", "message": "Merge branch 'master' into faster_datastore", "committedDate": "2020-09-16T08:59:25Z", "type": "commit"}, {"oid": "60e823115d229ecf3582448300237d2b848352da", "url": "https://github.com/CorfuDB/CorfuDB/commit/60e823115d229ecf3582448300237d2b848352da", "message": "Merge branch 'master' into faster_datastore", "committedDate": "2020-09-22T07:11:38Z", "type": "commit"}, {"oid": "bc13b0e3d991d28e48c2ef38972d3572ee62fb33", "url": "https://github.com/CorfuDB/CorfuDB/commit/bc13b0e3d991d28e48c2ef38972d3572ee62fb33", "message": "Merge branch 'master' into faster_datastore", "committedDate": "2020-12-10T22:33:01Z", "type": "commit"}, {"oid": "b9d519272e015e0ff6b7209dd2a280e091f6a11a", "url": "https://github.com/CorfuDB/CorfuDB/commit/b9d519272e015e0ff6b7209dd2a280e091f6a11a", "message": "Merge branch 'master' into faster_datastore", "committedDate": "2021-02-18T09:41:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODc2MjkzNg==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2769#discussion_r578762936", "bodyText": "Replace 4 with Integer.BYTES?", "author": "Lujie1996", "createdAt": "2021-02-18T21:38:50Z", "path": "infrastructure/src/main/java/org/corfudb/infrastructure/datastore/DataStore.java", "diffHunk": "@@ -171,14 +185,12 @@ public synchronized void delete(@Nonnull String key,\n             byte[] bytes = Files.readAllBytes(path);\n             ByteBuffer buf = ByteBuffer.wrap(bytes);\n             int checksum = buf.getInt();\n-            byte[] strBytes = Arrays.copyOfRange(bytes, 4, bytes.length);\n-            if (checksum != getChecksum(strBytes)) {\n+            if (checksum != getChecksum(bytes, 4, bytes.length - 4)) {", "originalCommit": "b9d519272e015e0ff6b7209dd2a280e091f6a11a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5e65569da51dd393c5db5528893d36ff3a27ae6c", "url": "https://github.com/CorfuDB/CorfuDB/commit/5e65569da51dd393c5db5528893d36ff3a27ae6c", "message": "Merge branch 'master' into faster_datastore", "committedDate": "2021-02-22T23:03:36Z", "type": "commit"}, {"oid": "cee7aaa54edb15fc5539032e653fe47bbf7411cf", "url": "https://github.com/CorfuDB/CorfuDB/commit/cee7aaa54edb15fc5539032e653fe47bbf7411cf", "message": "Merge branch 'master' into faster_datastore", "committedDate": "2021-02-22T23:37:14Z", "type": "commit"}, {"oid": "afd1b81fa03d80e4764956e61af00e60f5049ad5", "url": "https://github.com/CorfuDB/CorfuDB/commit/afd1b81fa03d80e4764956e61af00e60f5049ad5", "message": "Merge branch 'master' into faster_datastore", "committedDate": "2021-02-23T06:54:54Z", "type": "commit"}]}