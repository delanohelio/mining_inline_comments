{"pr_number": 2680, "pr_title": "Allowing retries when RuntimeException gets raised during AddNode workflow", "pr_createdAt": "2020-08-03T20:25:20Z", "pr_url": "https://github.com/CorfuDB/CorfuDB/pull/2680", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcwMTA5NQ==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2680#discussion_r464701095", "bodyText": "This catch will mask the next catch block, because NetworkException and IllegalStateException are also RuntimeException, you need to put it after the next catch block. Please also check with @PavelZaytsev if initially he intentionally wanted to not retry on other runtime exceptions, as there might be some edge cases.", "author": "WenbinZhu", "createdAt": "2020-08-03T22:46:54Z", "path": "runtime/src/main/java/org/corfudb/runtime/view/workflows/WorkflowRequest.java", "diffHunk": "@@ -141,6 +141,9 @@ public void invoke() {\n                     throw new IllegalStateException(\"Orchestrator can not be selected\");\n                 }\n \n+            } catch(RuntimeException e) {", "originalCommit": "02a9c2c24cd18cb727ec3225e9771732fea88989", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM0Mjc3MA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2680#discussion_r465342770", "bodyText": "Moved the catch block. It was gonna mask other exceptions.", "author": "achinmishra", "createdAt": "2020-08-04T21:33:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcwMTA5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcwNDg3Mg==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2680#discussion_r464704872", "bodyText": "Style -- missing space.", "author": "vjeko", "createdAt": "2020-08-03T22:59:07Z", "path": "runtime/src/main/java/org/corfudb/runtime/view/workflows/WorkflowRequest.java", "diffHunk": "@@ -141,6 +141,9 @@ public void invoke() {\n                     throw new IllegalStateException(\"Orchestrator can not be selected\");\n                 }\n \n+            } catch(RuntimeException e) {", "originalCommit": "02a9c2c24cd18cb727ec3225e9771732fea88989", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcwNjMzNA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2680#discussion_r464706334", "bodyText": "You need to check for the root cause. If the root cause is not an instance of TImeoutException, you will want to re-throw.", "author": "vjeko", "createdAt": "2020-08-03T23:03:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcwNDg3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcxMTk5MA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2680#discussion_r464711990", "bodyText": "Also, since Corfu's exception handling is pretty screwed up, it might make sense to make exception checking more generic:\n            } catch (TimeoutException e) {\n                log.warn(\"WorkflowRequest: Error while running {} on attempt {}, cause:\", this, x, e);\n            } catch (RuntimeException runtimeException) {\n                handleException(runtimeException);\n            }\n\n    private void handleException(RuntimeException runtimeException) {\n        final Throwable cause = ExceptionUtils.getRootCause(runtimeException);\n        if (cause instanceof TimeoutException ||\n                cause instanceof IllegalStateException ||\n                cause instanceof NetworkException) {\n            log.warn(\"WorkflowRequest: Error while running {} with cause:\", this, runtimeException);\n        } else {\n            throw runtimeException;\n        }\n    }", "author": "vjeko", "createdAt": "2020-08-03T23:21:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcwNDg3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM0MzcyNw==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2680#discussion_r465343727", "bodyText": "The root cause was an instance of TimeoutException, coming from bootstrapManagementServer().\nI think its a good idea to add a method listed as above to handle the exceptions gracefully. I will make those changes.", "author": "achinmishra", "createdAt": "2020-08-04T21:35:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcwNDg3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI0NjM5OA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2680#discussion_r465246398", "bodyText": "Minor thing. Since you touched this piece of code, would be great if you rename x to retryIteration", "author": "xnull", "createdAt": "2020-08-04T18:27:44Z", "path": "runtime/src/main/java/org/corfudb/runtime/view/workflows/WorkflowRequest.java", "diffHunk": "@@ -141,6 +141,9 @@ public void invoke() {\n                     throw new IllegalStateException(\"Orchestrator can not be selected\");\n                 }\n \n+            } catch(RuntimeException e) {\n+                log.warn(\"WorkflowRequest: Additional handling of the exception wrapped herein.\" +\n+                        \" Running {} on attempt {},  cause:\", this, x, e);", "originalCommit": "02a9c2c24cd18cb727ec3225e9771732fea88989", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM0MzkwNA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2680#discussion_r465343904", "bodyText": "Right! Better code readability. Pushing the change.", "author": "achinmishra", "createdAt": "2020-08-04T21:35:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI0NjM5OA=="}], "type": "inlineReview"}, {"oid": "f481ad5500c803abeb46f78ced0c434fce37d459", "url": "https://github.com/CorfuDB/CorfuDB/commit/f481ad5500c803abeb46f78ced0c434fce37d459", "message": "Allowing retries when RuntimeException gets raised during AddNode workflow", "committedDate": "2020-08-04T20:47:14Z", "type": "forcePushed"}, {"oid": "e8342e670bf5f7b266313d93e3a5fedf79fa2758", "url": "https://github.com/CorfuDB/CorfuDB/commit/e8342e670bf5f7b266313d93e3a5fedf79fa2758", "message": "Allowing retries when RuntimeException gets raised during AddNode workflow", "committedDate": "2020-08-05T18:51:58Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk2NTQ4Ng==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2680#discussion_r465965486", "bodyText": "TimeoutException can't appear here, because it already handled in invoke method", "author": "xnull", "createdAt": "2020-08-05T19:51:54Z", "path": "runtime/src/main/java/org/corfudb/runtime/view/workflows/WorkflowRequest.java", "diffHunk": "@@ -119,6 +120,20 @@ private void waitForWorkflow(@NonNull UUID workflow, @NonNull ManagementClient c\n         throw new TimeoutException();\n     }\n \n+    /*\n+     * private method to handle exceptions while sendRequest()\n+     */\n+    private void handleException(RuntimeException runtimeException) {\n+        final Throwable cause = ExceptionUtils.getRootCause(runtimeException);\n+        if (cause instanceof TimeoutException ||", "originalCommit": "e8342e670bf5f7b266313d93e3a5fedf79fa2758", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYwNDgyMA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2680#discussion_r466604820", "bodyText": "another curly bracket needed for runtimeException", "author": "pankti-m", "createdAt": "2020-08-06T18:26:18Z", "path": "runtime/src/main/java/org/corfudb/runtime/view/workflows/WorkflowRequest.java", "diffHunk": "@@ -119,6 +120,20 @@ private void waitForWorkflow(@NonNull UUID workflow, @NonNull ManagementClient c\n         throw new TimeoutException();\n     }\n \n+    /*\n+     * private method to handle exceptions while sendRequest()\n+     */\n+    private void handleException(RuntimeException runtimeException) {\n+        final Throwable cause = ExceptionUtils.getRootCause(runtimeException);\n+        if (cause instanceof TimeoutException ||\n+                cause instanceof IllegalStateException ||\n+                cause instanceof NetworkException) {\n+            log.warn(\"WorkflowRequest: Error while running {} with cause:\", this, runtimeException);", "originalCommit": "e8342e670bf5f7b266313d93e3a5fedf79fa2758", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYyNjcyNg==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2680#discussion_r466626726", "bodyText": "Unfortunately, you are not correct, another bracket is not needed", "author": "xnull", "createdAt": "2020-08-06T19:07:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYwNDgyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYwNTQ3OA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2680#discussion_r466605478", "bodyText": "another curly bracket required for exception", "author": "pankti-m", "createdAt": "2020-08-06T18:27:35Z", "path": "runtime/src/main/java/org/corfudb/runtime/view/workflows/WorkflowRequest.java", "diffHunk": "@@ -141,8 +156,10 @@ public void invoke() {\n                     throw new IllegalStateException(\"Orchestrator can not be selected\");\n                 }\n \n-            } catch (NetworkException | TimeoutException | IllegalStateException e) {\n-                log.warn(\"WorkflowRequest: Error while running {} on attempt {}, cause:\", this, x, e);\n+            } catch (TimeoutException e) {\n+                log.warn(\"WorkflowRequest: Error while running {} on attempt {}, cause:\", this, retryIteration, e);", "originalCommit": "e8342e670bf5f7b266313d93e3a5fedf79fa2758", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYyNjgxNA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2680#discussion_r466626814", "bodyText": "Unfortunately, you are not correct, another bracket is not needed", "author": "xnull", "createdAt": "2020-08-06T19:07:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYwNTQ3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY1MDEwMA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2680#discussion_r466650100", "bodyText": "@pankti-m the log.warn is overloaded with void warn(String var1, Object var2, Object var3);  , so it doesn't need a string specific (i.e. '{}') to log the exception. You can just do log.warn(\"msg\", new ExceptionType()); and it will log the exception properly.", "author": "Maithem", "createdAt": "2020-08-06T19:52:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYwNTQ3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY2MTE3NQ==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2680#discussion_r466661175", "bodyText": "Good to know.  Thanks @Maithem", "author": "pankti-m", "createdAt": "2020-08-06T20:15:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYwNTQ3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE5ODM1MQ==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2680#discussion_r467198351", "bodyText": "For your consideration - I personally vote for getting rid of handleException method, it reduces the complexity of the code if you make it flat", "author": "xnull", "createdAt": "2020-08-07T18:18:46Z", "path": "runtime/src/main/java/org/corfudb/runtime/view/workflows/WorkflowRequest.java", "diffHunk": "@@ -141,8 +156,10 @@ public void invoke() {\n                     throw new IllegalStateException(\"Orchestrator can not be selected\");\n                 }\n \n-            } catch (NetworkException | TimeoutException | IllegalStateException e) {\n-                log.warn(\"WorkflowRequest: Error while running {} on attempt {}, cause:\", this, x, e);\n+            } catch (TimeoutException e) {\n+                log.warn(\"WorkflowRequest: Error while running {} on attempt {}, cause:\", this, retryIteration, e);\n+            } catch (RuntimeException e) {\n+                handleException(e);", "originalCommit": "e8342e670bf5f7b266313d93e3a5fedf79fa2758", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA3NzI2OA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2680#discussion_r468077268", "bodyText": "Let me make a note of your suggestion @xnull", "author": "achinmishra", "createdAt": "2020-08-10T17:52:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE5ODM1MQ=="}], "type": "inlineReview"}, {"oid": "bdb87e3441c356ff0a00f98bd23d13948d1b20c8", "url": "https://github.com/CorfuDB/CorfuDB/commit/bdb87e3441c356ff0a00f98bd23d13948d1b20c8", "message": "Allowing retries when RuntimeException gets raised during AddNode workflow", "committedDate": "2020-08-11T21:27:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODk3MzQ1OQ==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2680#discussion_r468973459", "bodyText": "This logic here is kind of weird, why not just catch RuntimeException and check \"instance of\" and cause in side the catch? IllegalStateException is a RuntimeException, and TimeoutException should not be thrown without being wrapped in RuntimeException, because it's a checked exception.", "author": "WenbinZhu", "createdAt": "2020-08-12T02:46:49Z", "path": "runtime/src/main/java/org/corfudb/runtime/view/workflows/WorkflowRequest.java", "diffHunk": "@@ -140,9 +155,10 @@ public void invoke() {\n                 else{\n                     throw new IllegalStateException(\"Orchestrator can not be selected\");\n                 }\n-\n-            } catch (NetworkException | TimeoutException | IllegalStateException e) {\n-                log.warn(\"WorkflowRequest: Error while running {} on attempt {}, cause:\", this, x, e);\n+            } catch (IllegalStateException | TimeoutException e) {\n+                log.warn(\"WorkflowRequest: Error while running {} on attempt {}, cause:\", this, retryIteration, e);\n+            } catch (RuntimeException e) {\n+                handleException(e);", "originalCommit": "bdb87e3441c356ff0a00f98bd23d13948d1b20c8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODk3NDUxOQ==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2680#discussion_r468974519", "bodyText": "This seems incorrect. IllegalStateException and NetworkException are RuntimeException, so the cause returned by ExceptionUtils.getRootCause() is null, so \"instance of\" will fail, and exception will be thrown without being retried.\nHere is a quick example for reference:\n@Test\n    public void xxx() {\n        try {\n            throw new NetworkException(\"s\", \"t\");\n        } catch (RuntimeException e) {\n            final Throwable cause = ExceptionUtils.getRootCause(e);\n            if (cause instanceof NetworkException) {\n                System.out.println(1111);\n            } else {\n                System.out.println(2222);\n            }\n        }\n    }\nThe code prints 222 because cause is actually null.", "author": "WenbinZhu", "createdAt": "2020-08-12T02:51:02Z", "path": "runtime/src/main/java/org/corfudb/runtime/view/workflows/WorkflowRequest.java", "diffHunk": "@@ -119,6 +120,20 @@ private void waitForWorkflow(@NonNull UUID workflow, @NonNull ManagementClient c\n         throw new TimeoutException();\n     }\n \n+    /*\n+     * private method to handle exceptions while sendRequest()\n+     */\n+    private void handleException(RuntimeException runtimeException) {\n+        final Throwable cause = ExceptionUtils.getRootCause(runtimeException);\n+        if (cause instanceof TimeoutException ||\n+                cause instanceof IllegalStateException ||\n+                cause instanceof NetworkException) {", "originalCommit": "bdb87e3441c356ff0a00f98bd23d13948d1b20c8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "02d9ccc49ef519848b6b81afa6c939bfac582b0c", "url": "https://github.com/CorfuDB/CorfuDB/commit/02d9ccc49ef519848b6b81afa6c939bfac582b0c", "message": "Allowing retries when RuntimeException gets raised during AddNode workflow", "committedDate": "2020-08-12T23:41:52Z", "type": "commit"}, {"oid": "02d9ccc49ef519848b6b81afa6c939bfac582b0c", "url": "https://github.com/CorfuDB/CorfuDB/commit/02d9ccc49ef519848b6b81afa6c939bfac582b0c", "message": "Allowing retries when RuntimeException gets raised during AddNode workflow", "committedDate": "2020-08-12T23:41:52Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTY4NjQwOQ==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2680#discussion_r469686409", "bodyText": "You may need to add the number of attemp in the log, same as what it does when we catch the exception.", "author": "WenbinZhu", "createdAt": "2020-08-13T04:15:09Z", "path": "runtime/src/main/java/org/corfudb/runtime/view/workflows/WorkflowRequest.java", "diffHunk": "@@ -130,19 +142,20 @@ private void waitForWorkflow(@NonNull UUID workflow, @NonNull ManagementClient c\n      * verified.\n      */\n     public void invoke() {\n-        for (int x = 0; x < retry; x++) {\n+        for (int retryIteration = 0; retryIteration < retry; retryIteration++) {\n             try {\n                 Optional<ManagementClient> orchestrator = getOrchestrator();\n                 if(orchestrator.isPresent()){\n                     UUID workflowId = sendRequest(orchestrator.get());\n                     waitForWorkflow(workflowId, orchestrator.get(), timeout, pollPeriod);\n                 }\n-                else{\n-                    throw new IllegalStateException(\"Orchestrator can not be selected\");\n+                else {\n+                    log.warn(\"Orchestrator can not be selected\");", "originalCommit": "02d9ccc49ef519848b6b81afa6c939bfac582b0c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIxODg0OQ==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2680#discussion_r470218849", "bodyText": "Noted. Thanks", "author": "achinmishra", "createdAt": "2020-08-13T20:09:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTY4NjQwOQ=="}], "type": "inlineReview"}, {"oid": "1a3dbe8f1f2ea0a6c449160e0d529516e49ac813", "url": "https://github.com/CorfuDB/CorfuDB/commit/1a3dbe8f1f2ea0a6c449160e0d529516e49ac813", "message": "Merge branch 'master' into bugRuntimeExceptionWorkflowRequest", "committedDate": "2020-08-13T20:11:46Z", "type": "commit"}, {"oid": "6f8f54afea0497805a5385bfeee2222668235428", "url": "https://github.com/CorfuDB/CorfuDB/commit/6f8f54afea0497805a5385bfeee2222668235428", "message": "Merge branch 'master' into bugRuntimeExceptionWorkflowRequest", "committedDate": "2020-08-14T07:46:54Z", "type": "commit"}, {"oid": "ccc01201fc47a850e2e0ce6f7e7e12f8e0394be8", "url": "https://github.com/CorfuDB/CorfuDB/commit/ccc01201fc47a850e2e0ce6f7e7e12f8e0394be8", "message": "Merge branch 'master' into bugRuntimeExceptionWorkflowRequest", "committedDate": "2020-08-14T23:43:56Z", "type": "commit"}]}