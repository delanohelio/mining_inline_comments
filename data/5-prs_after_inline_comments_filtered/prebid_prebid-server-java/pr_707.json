{"pr_number": 707, "pr_title": "Resolve bidder aliases using aliases defined in request and bidder catalog when logging metrics", "pr_createdAt": "2020-05-05T11:16:35Z", "pr_url": "https://github.com/prebid/prebid-server-java/pull/707", "timeline": [{"oid": "ca60a874a2529a2fafca91f9222e83848c9c4b28", "url": "https://github.com/prebid/prebid-server-java/commit/ca60a874a2529a2fafca91f9222e83848c9c4b28", "message": "Resolve bidder aliases using aliases defined in request and bidder catalog when logging metrics", "committedDate": "2020-05-05T10:51:59Z", "type": "commit"}, {"oid": "cb0066aa522efb80c62a1b4d0410dcd6d75e2d14", "url": "https://github.com/prebid/prebid-server-java/commit/cb0066aa522efb80c62a1b4d0410dcd6d75e2d14", "message": "Move vendor id resolving logic to BidderAliases", "committedDate": "2020-05-05T10:51:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDExMDc2OA==", "url": "https://github.com/prebid/prebid-server-java/pull/707#discussion_r420110768", "bodyText": "Minor. Consider moving aliases as class field with default initialization in setUp().", "author": "rpanchyk", "createdAt": "2020-05-05T13:31:51Z", "path": "src/test/java/org/prebid/server/auction/BidderAliasesTest.java", "diffHunk": "@@ -0,0 +1,189 @@\n+package org.prebid.server.auction;\n+\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnit;\n+import org.mockito.junit.MockitoRule;\n+import org.prebid.server.bidder.BidderCatalog;\n+\n+import static java.util.Collections.singletonMap;\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.anyString;\n+import static org.mockito.ArgumentMatchers.eq;\n+import static org.mockito.BDDMockito.given;\n+import static org.mockito.Mockito.verifyZeroInteractions;\n+\n+public class BidderAliasesTest {\n+\n+    @Rule\n+    public final MockitoRule mockitoRule = MockitoJUnit.rule();\n+\n+    @Mock\n+    private BidderCatalog bidderCatalog;\n+\n+    @Before\n+    public void setUp() {\n+        given(bidderCatalog.isActive(anyString())).willReturn(true);\n+    }\n+\n+    @Test\n+    public void isAliasDefinedShouldQueryCatalogWhenNoAliasesInRequest() {\n+        // given\n+        given(bidderCatalog.isAlias(anyString())).willReturn(true);\n+\n+        final BidderAliases aliases = BidderAliases.of(bidderCatalog);", "originalCommit": "cb0066aa522efb80c62a1b4d0410dcd6d75e2d14", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDExOTc0Mg==", "url": "https://github.com/prebid/prebid-server-java/pull/707#discussion_r420119742", "bodyText": "Just to think. Do we really resolving alias here?\nm/b it is better to name like resolveBidderViaCatalog(...).\ni can speak crazy, but just consider.", "author": "rpanchyk", "createdAt": "2020-05-05T13:44:06Z", "path": "src/main/java/org/prebid/server/auction/BidderAliases.java", "diffHunk": "@@ -1,37 +1,64 @@\n package org.prebid.server.auction;\n \n import org.apache.commons.lang3.ObjectUtils;\n+import org.prebid.server.bidder.BidderCatalog;\n \n import java.util.Collections;\n import java.util.Map;\n+import java.util.Objects;\n \n /**\n  * Represents aliases configured for bidders - configuration might come in OpenRTB request but not limited to it.\n  */\n public class BidderAliases {\n \n-    private Map<String, String> aliasToBidder;\n+    private final Map<String, String> aliasToBidder;\n \n-    private Map<String, Integer> aliasToVendorId;\n+    private final Map<String, Integer> aliasToVendorId;\n+\n+    private final BidderCatalog bidderCatalog;\n+\n+    private BidderAliases(\n+            Map<String, String> aliasToBidder, Map<String, Integer> aliasToVendorId, BidderCatalog bidderCatalog) {\n \n-    private BidderAliases(Map<String, String> aliasToBidder, Map<String, Integer> aliasToVendorId) {\n         this.aliasToBidder = ObjectUtils.firstNonNull(aliasToBidder, Collections.emptyMap());\n         this.aliasToVendorId = ObjectUtils.firstNonNull(aliasToVendorId, Collections.emptyMap());\n+        this.bidderCatalog = Objects.requireNonNull(bidderCatalog);\n+    }\n+\n+    public static BidderAliases of(\n+            Map<String, String> aliasToBidder, Map<String, Integer> aliasToVendorId, BidderCatalog bidderCatalog) {\n+\n+        return new BidderAliases(aliasToBidder, aliasToVendorId, bidderCatalog);\n     }\n \n-    public static BidderAliases of(Map<String, String> aliasToBidder, Map<String, Integer> aliasToVendorId) {\n-        return new BidderAliases(aliasToBidder, aliasToVendorId);\n+    public static BidderAliases of(BidderCatalog bidderCatalog) {\n+        return new BidderAliases(null, null, bidderCatalog);\n     }\n \n     public boolean isAliasDefined(String alias) {\n-        return aliasToBidder.containsKey(alias);\n+        return aliasToBidder.containsKey(alias) || bidderCatalog.isAlias(alias);\n     }\n \n     public String resolveBidder(String aliasOrBidder) {\n-        return aliasToBidder.getOrDefault(aliasOrBidder, aliasOrBidder);\n+        return aliasToBidder.containsKey(aliasOrBidder)\n+                ? aliasToBidder.get(aliasOrBidder)\n+                : ObjectUtils.firstNonNull(resolveAliasViaCatalog(aliasOrBidder), aliasOrBidder);\n     }\n \n     public Integer resolveAliasVendorId(String alias) {\n-        return aliasToVendorId.get(alias);\n+        return aliasToVendorId.containsKey(alias)\n+                ? aliasToVendorId.get(alias)\n+                : resolveAliasVendorIdViaCatalog(alias);\n+    }\n+\n+    private String resolveAliasViaCatalog(String aliasOrBidder) {", "originalCommit": "cb0066aa522efb80c62a1b4d0410dcd6d75e2d14", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b35bad88ad2f961114a9166902646c2708f75a9f", "url": "https://github.com/prebid/prebid-server-java/commit/b35bad88ad2f961114a9166902646c2708f75a9f", "message": "Rename method", "committedDate": "2020-05-05T13:49:12Z", "type": "commit"}, {"oid": "00651d0251d9e5beeede79e3448d38d48311c68e", "url": "https://github.com/prebid/prebid-server-java/commit/00651d0251d9e5beeede79e3448d38d48311c68e", "message": "Merge branch 'master' into metrics-for-aliases-fix\n\n# Conflicts:\n#\tsrc/main/java/org/prebid/server/auction/PrivacyEnforcementService.java", "committedDate": "2020-06-25T13:35:42Z", "type": "commit"}, {"oid": "6d9298d0ba067fd91ae2eea788244ebb6f5eed28", "url": "https://github.com/prebid/prebid-server-java/commit/6d9298d0ba067fd91ae2eea788244ebb6f5eed28", "message": "Merge branch 'master' into metrics-for-aliases-fix\n\n# Conflicts:\n#\tsrc/main/java/org/prebid/server/auction/ExchangeService.java\n#\tsrc/test/java/org/prebid/server/auction/PrivacyEnforcementServiceTest.java", "committedDate": "2020-08-03T12:12:26Z", "type": "commit"}]}