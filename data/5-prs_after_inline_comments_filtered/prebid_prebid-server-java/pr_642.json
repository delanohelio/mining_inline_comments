{"pr_number": 642, "pr_title": "Fixing IP error", "pr_createdAt": "2020-03-20T23:10:15Z", "pr_url": "https://github.com/prebid/prebid-server-java/pull/642", "timeline": [{"oid": "84546e98458f3233a331b6f1e481cd119f1a9021", "url": "https://github.com/prebid/prebid-server-java/commit/84546e98458f3233a331b6f1e481cd119f1a9021", "message": "Fixing ip error PrivacyEnforcementService during maskIp", "committedDate": "2020-03-20T23:01:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQxMzU2Mw==", "url": "https://github.com/prebid/prebid-server-java/pull/642#discussion_r396413563", "bodyText": "Please configure your code style according to a project", "author": "DGarbar", "createdAt": "2020-03-23T12:27:57Z", "path": "src/main/java/org/prebid/server/auction/AuctionRequestFactory.java", "diffHunk": "@@ -1,5 +1,8 @@\n package org.prebid.server.auction;\n \n+import org.apache.commons.collections4.CollectionUtils;", "originalCommit": "84546e98458f3233a331b6f1e481cd119f1a9021", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQyOTgxMQ==", "url": "https://github.com/prebid/prebid-server-java/pull/642#discussion_r396429811", "bodyText": "I would like to see smth like this to avoid code duplication\n final InetAddress inetAddress = inetAddressByIp(ipFromRequest);\n                if (isIpv4(inetAddress)) {\n                    builder.ip(ipFromRequest);\n                } else if (isIpv6(inetAddress)) {\n                    builder.ipv6(ipFromRequest);\n                }\n\n......\n\n    private InetAddress inetAddressByIp(String ip) {\n        try {\n            return InetAddress.getByName(ip);\n        } catch (UnknownHostException ex) {\n            logger.debug(\"Error occurred while checking IP\", ex);\n            return null;\n        }\n    }\n\n    private boolean isIpv4(InetAddress inetAddress) {\n        if (inetAddress instanceof Inet4Address) {\n            return ((Inet4Address) inetAddress).getHostAddress().equals(ip);\n        }\n        return false;\n    }\n\n    private boolean isIpv6(InetAddress inetAddress) {\n        return inetAddress instanceof Inet6Address;\n    }", "author": "DGarbar", "createdAt": "2020-03-23T12:57:01Z", "path": "src/main/java/org/prebid/server/auction/AuctionRequestFactory.java", "diffHunk": "@@ -277,16 +281,42 @@ private Device populateDevice(Device device, HttpServerRequest request) {\n \n         if (StringUtils.isBlank(ip) || StringUtils.isBlank(ua)) {\n             final Device.DeviceBuilder builder = device == null ? Device.builder() : device.toBuilder();\n-            builder.ip(StringUtils.isNotBlank(ip) ? ip : paramsExtractor.ipFrom(request));\n             builder.ua(StringUtils.isNotBlank(ua) ? ua : paramsExtractor.uaFrom(request));\n-\n+            final String ipFromRequest = paramsExtractor.ipFrom(request);\n+            if (StringUtils.isNotBlank(ipFromRequest)) {\n+                if (isIpv4(ipFromRequest)) {\n+                    builder.ip(ipFromRequest);\n+                } else if (isIpv6(ipFromRequest)) {\n+                    builder.ipv6(ipFromRequest);\n+                }\n+            }\n             result = builder.build();\n         } else {\n             result = null;\n         }\n         return result;\n     }\n \n+    private boolean isIpv4(String ip) {", "originalCommit": "84546e98458f3233a331b6f1e481cd119f1a9021", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQzMzY3MA==", "url": "https://github.com/prebid/prebid-server-java/pull/642#discussion_r396433670", "bodyText": "remove line", "author": "DGarbar", "createdAt": "2020-03-23T13:03:25Z", "path": "src/test/java/org/prebid/server/auction/AuctionRequestFactoryTest.java", "diffHunk": "@@ -297,6 +298,27 @@ public void shouldSetFieldsFromHeadersIfBodyFieldsEmpty() {\n                 .isEqualTo(Device.builder().ip(\"192.168.244.1\").ua(\"UnitTest\").build());\n     }\n \n+    @Test\n+    public void shouldSetFieldsFromHeadersIfBodyFieldsEmptyForIpv6() {\n+        // given\n+        givenValidBidRequest();\n+\n+        givenImplicitParams(\"http://example.com\", \"example.com\", \"2001:0db8:85a3:0000:0000:8a2e:0370:7334\", \"UnitTest\");\n+\n+        // when\n+        final BidRequest request = factory.fromRequest(routingContext, 0L).result().getBidRequest();\n+\n+", "originalCommit": "84546e98458f3233a331b6f1e481cd119f1a9021", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0a8c171e0f7730aee06dae7e0465b28ae2534137", "url": "https://github.com/prebid/prebid-server-java/commit/0a8c171e0f7730aee06dae7e0465b28ae2534137", "message": "Refactoring code and tests", "committedDate": "2020-03-23T16:47:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzAwMzAzMw==", "url": "https://github.com/prebid/prebid-server-java/pull/642#discussion_r397003033", "bodyText": "When you adding something in tests, you need to clearly understand why you did that.\nYou forgot about\nif StringUtils.isBlank(ip)", "author": "DGarbar", "createdAt": "2020-03-24T09:16:48Z", "path": "src/main/java/org/prebid/server/auction/AuctionRequestFactory.java", "diffHunk": "@@ -277,16 +281,41 @@ private Device populateDevice(Device device, HttpServerRequest request) {\n \n         if (StringUtils.isBlank(ip) || StringUtils.isBlank(ua)) {\n             final Device.DeviceBuilder builder = device == null ? Device.builder() : device.toBuilder();\n-            builder.ip(StringUtils.isNotBlank(ip) ? ip : paramsExtractor.ipFrom(request));\n             builder.ua(StringUtils.isNotBlank(ua) ? ua : paramsExtractor.uaFrom(request));\n-\n+            final String ipFromRequest = paramsExtractor.ipFrom(request);\n+            final InetAddress inetAddress = inetAddressByIp(ipFromRequest);\n+            if (isIpv4(inetAddress, ipFromRequest)) {\n+                builder.ip(ipFromRequest);\n+            } else if (isIpv6(inetAddress)) {\n+                builder.ipv6(ipFromRequest);\n+            }", "originalCommit": "0a8c171e0f7730aee06dae7e0465b28ae2534137", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "32033aa2c7eda55662f978d7b1a85e883208dd08", "url": "https://github.com/prebid/prebid-server-java/commit/32033aa2c7eda55662f978d7b1a85e883208dd08", "message": "Add additional condition", "committedDate": "2020-03-24T10:55:20Z", "type": "commit"}, {"oid": "44e001fca5ee0baf538665964b88f6b2066363e8", "url": "https://github.com/prebid/prebid-server-java/commit/44e001fca5ee0baf538665964b88f6b2066363e8", "message": "Merge branch 'master' into fix-ip-error\n\n# Conflicts:\n#\tsrc/main/java/org/prebid/server/auction/AuctionRequestFactory.java", "committedDate": "2020-05-20T14:47:24Z", "type": "commit"}, {"oid": "49b0270af369cf3300d1c88e5a487c0e1b231a6c", "url": "https://github.com/prebid/prebid-server-java/commit/49b0270af369cf3300d1c88e5a487c0e1b231a6c", "message": "Merging to master branch", "committedDate": "2020-05-20T15:01:34Z", "type": "commit"}, {"oid": "b986fed1bbd482ad0f41d2fc04e34e660f195feb", "url": "https://github.com/prebid/prebid-server-java/commit/b986fed1bbd482ad0f41d2fc04e34e660f195feb", "message": "Merge branch 'master' into fix-ip-error", "committedDate": "2020-06-04T11:48:52Z", "type": "commit"}, {"oid": "ea52d8a1440ed10ea5723d289d7e55afdd6b10cd", "url": "https://github.com/prebid/prebid-server-java/commit/ea52d8a1440ed10ea5723d289d7e55afdd6b10cd", "message": "Fixes after review", "committedDate": "2020-06-04T12:00:42Z", "type": "commit"}, {"oid": "602f90f9b0026b7f0d26d75a3bd3bf01a53fc98a", "url": "https://github.com/prebid/prebid-server-java/commit/602f90f9b0026b7f0d26d75a3bd3bf01a53fc98a", "message": "Merge branch 'master' into fix-ip-error", "committedDate": "2020-06-04T12:19:30Z", "type": "commit"}]}