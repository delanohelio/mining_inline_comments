{"pr_number": 1000, "pr_title": "Adkernel review", "pr_createdAt": "2020-11-09T13:05:59Z", "pr_url": "https://github.com/prebid/prebid-server-java/pull/1000", "timeline": [{"oid": "2a4bb6ea48dcedab0f9300704d3a352c5683912f", "url": "https://github.com/prebid/prebid-server-java/commit/2a4bb6ea48dcedab0f9300704d3a352c5683912f", "message": "Adkernel review", "committedDate": "2020-11-09T13:04:41Z", "type": "commit"}, {"oid": "bf308835f6e5137c1df83d52b598e73c8d1b8385", "url": "https://github.com/prebid/prebid-server-java/commit/bf308835f6e5137c1df83d52b598e73c8d1b8385", "message": "Redactor tests", "committedDate": "2020-11-09T13:57:14Z", "type": "commit"}, {"oid": "bf308835f6e5137c1df83d52b598e73c8d1b8385", "url": "https://github.com/prebid/prebid-server-java/commit/bf308835f6e5137c1df83d52b598e73c8d1b8385", "message": "Redactor tests", "committedDate": "2020-11-09T13:57:14Z", "type": "forcePushed"}, {"oid": "4e1513aba3660aad3ae197560272fb1a70fd31ea", "url": "https://github.com/prebid/prebid-server-java/commit/4e1513aba3660aad3ae197560272fb1a70fd31ea", "message": "Extract process logic", "committedDate": "2020-11-09T14:02:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjk2MDk2OA==", "url": "https://github.com/prebid/prebid-server-java/pull/1000#discussion_r522960968", "bodyText": "return pubToImps.values().stream().allMatch(CollectionUtils::isEmpty);", "author": "DGarbar", "createdAt": "2020-11-13T13:49:41Z", "path": "src/main/java/org/prebid/server/bidder/adkernel/AdkernelBidder.java", "diffHunk": "@@ -104,25 +108,22 @@ private ExtImpAdkernel parseAndValidateImpExt(Imp imp) {\n         return extImpAdkernel;\n     }\n \n-    //Group impressions by AdKernel-specific parameters `zoneId` & `host`\n     private static void dispatchImpression(Imp imp, ExtImpAdkernel extImpAdkernel,\n                                            Map<ExtImpAdkernel, List<Imp>> pubToImp) {\n         pubToImp.putIfAbsent(extImpAdkernel, new ArrayList<>());\n         pubToImp.get(extImpAdkernel).add(compatImpression(imp));\n     }\n \n-    //Alter impression info to comply with adkernel platform requirements\n     private static Imp compatImpression(Imp imp) {\n-        final Imp.ImpBuilder impBuilder = imp.toBuilder().ext(null) //do not forward ext to adkernel platform\n+        final Imp.ImpBuilder impBuilder = imp.toBuilder().ext(null)\n                 .audio(null)\n                 .xNative(null);\n         return imp.getBanner() != null ? impBuilder.video(null).build() : impBuilder.build();\n     }\n \n     private static boolean hasNoImpressions(Map<ExtImpAdkernel, List<Imp>> pubToImps) {\n         return pubToImps.values().stream()\n-                .mapToLong(Collection::size)\n-                .sum() == 0;\n+                .noneMatch(imp -> imp.size() > 0);", "originalCommit": "4e1513aba3660aad3ae197560272fb1a70fd31ea", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjk2MTQ0Nw==", "url": "https://github.com/prebid/prebid-server-java/pull/1000#discussion_r522961447", "bodyText": "private static BidRequest createBidRequest(List<Imp> imps,\n                                               BidRequest.BidRequestBuilder requestBuilder,\n                                               Site site,\n                                               App app)", "author": "DGarbar", "createdAt": "2020-11-13T13:50:28Z", "path": "src/main/java/org/prebid/server/bidder/adkernel/AdkernelBidder.java", "diffHunk": "@@ -145,8 +146,8 @@ private static boolean hasNoImpressions(Map<ExtImpAdkernel, List<Imp>> pubToImps\n                 .build();\n     }\n \n-    private static BidRequest createBidRequest(\n-            List<Imp> imps, BidRequest.BidRequestBuilder requestBuilder, Site site, App app) {\n+    private static BidRequest createBidRequest(List<Imp> imps, BidRequest.BidRequestBuilder requestBuilder,", "originalCommit": "4e1513aba3660aad3ae197560272fb1a70fd31ea", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjk2MjgwOQ==", "url": "https://github.com/prebid/prebid-server-java/pull/1000#discussion_r522962809", "bodyText": "I don't see why it is better (in all cases)", "author": "DGarbar", "createdAt": "2020-11-13T13:52:52Z", "path": "src/test/java/org/prebid/server/bidder/adkernel/AdkernelBidderTest.java", "diffHunk": "@@ -70,8 +70,9 @@ public void makeHttpRequestsShouldReturnErrorWhenImpHasNoBannerOrVideo() {\n \n         // then\n         assertThat(result.getValue()).isNull();\n-        assertThat(result.getErrors()).hasSize(1)\n-                .containsOnly(BidderError.badInput(\"Invalid imp id=123. Expected imp.banner or imp.video\"));\n+        assertThat(result.getErrors())\n+                .allMatch(error -> error.getType() == BidderError.Type.bad_input\n+                        && error.getMessage().startsWith(\"Invalid imp id=123. Expected imp.banner or imp.vide\"));", "originalCommit": "4e1513aba3660aad3ae197560272fb1a70fd31ea", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "cdb8171a2b96112188461181dca0e568bcdbafb9", "url": "https://github.com/prebid/prebid-server-java/commit/cdb8171a2b96112188461181dca0e568bcdbafb9", "message": "Fixes after review", "committedDate": "2020-11-16T02:25:39Z", "type": "commit"}, {"oid": "cdb8171a2b96112188461181dca0e568bcdbafb9", "url": "https://github.com/prebid/prebid-server-java/commit/cdb8171a2b96112188461181dca0e568bcdbafb9", "message": "Fixes after review", "committedDate": "2020-11-16T02:25:39Z", "type": "forcePushed"}, {"oid": "9fb50b4cb6f341ba4cc8ce3414116b2565bf482d", "url": "https://github.com/prebid/prebid-server-java/commit/9fb50b4cb6f341ba4cc8ce3414116b2565bf482d", "message": "Merge branch 'master' into adkernel/review\n\n# Conflicts:\n#\tsrc/test/java/org/prebid/server/bidder/adkernel/AdkernelBidderTest.java", "committedDate": "2020-11-17T14:55:19Z", "type": "commit"}]}