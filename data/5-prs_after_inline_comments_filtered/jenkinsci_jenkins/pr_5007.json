{"pr_number": 5007, "pr_title": "Improve tests for Labels", "pr_createdAt": "2020-10-16T13:40:38Z", "pr_url": "https://github.com/jenkinsci/jenkins/pull/5007", "timeline": [{"oid": "8c5ee796a4a9f99ab5cace83ff32ab70259e9bd9", "url": "https://github.com/jenkinsci/jenkins/commit/8c5ee796a4a9f99ab5cace83ff32ab70259e9bd9", "message": "Improve tests for Labels", "committedDate": "2020-10-16T13:39:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQ3MTk4Nw==", "url": "https://github.com/jenkinsci/jenkins/pull/5007#discussion_r506471987", "bodyText": "Failures may be clearer with\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(l3.getNodes().isEmpty(), is(true));\n          \n          \n            \n                    assertThat(l3.getNodes(), is(empty()));", "author": "MarkEWaite", "createdAt": "2020-10-16T14:13:50Z", "path": "test/src/test/java/hudson/model/labels/LabelAtomTest.java", "diffHunk": "@@ -20,5 +26,57 @@ public void selfLabel() throws Exception {\n         assertThat(self.isSelfLabel(), is(true));\n         Label label = new LabelAtom(\"label\");\n         assertThat(label.isSelfLabel(), is(false));\n+        Label selfJenkins = j.jenkins.getLabel(\"node\");\n+        assertThat(selfJenkins.isSelfLabel(), is(true));\n+    }\n+\n+    @Test\n+    public void getNodes() throws Exception {\n+        Node n1 = j.createSlave(\"n1\", \"label\", null);\n+        Node n2 = j.createSlave(\"n2\", \"label label2\", null);\n+        Node n3 = j.createSlave(\"n3\", \"label2\", null);\n+        Label l = j.jenkins.getLabel(\"label\");\n+        Label l2 = j.jenkins.getLabel(\"label2\");\n+        Label l3 = j.jenkins.getLabel(\"label3\");\n+        assertThat(l.getNodes().size(), is(2));\n+        assertThat(l.getNodes(), containsInAnyOrder(n1,n2));\n+        assertThat(l2.getNodes().size(), is(2));\n+        assertThat(l2.getNodes(), containsInAnyOrder(n3,n2));\n+        assertThat(l3.getNodes().isEmpty(), is(true));", "originalCommit": "8c5ee796a4a9f99ab5cace83ff32ab70259e9bd9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQ3MjM5MA==", "url": "https://github.com/jenkinsci/jenkins/pull/5007#discussion_r506472390", "bodyText": "Failures may be clearer to the reader with\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(l2.getClouds().isEmpty(), is(true));\n          \n          \n            \n                    assertThat(l2.getClouds(), is(empty()));", "author": "MarkEWaite", "createdAt": "2020-10-16T14:14:19Z", "path": "test/src/test/java/hudson/model/labels/LabelAtomTest.java", "diffHunk": "@@ -20,5 +26,57 @@ public void selfLabel() throws Exception {\n         assertThat(self.isSelfLabel(), is(true));\n         Label label = new LabelAtom(\"label\");\n         assertThat(label.isSelfLabel(), is(false));\n+        Label selfJenkins = j.jenkins.getLabel(\"node\");\n+        assertThat(selfJenkins.isSelfLabel(), is(true));\n+    }\n+\n+    @Test\n+    public void getNodes() throws Exception {\n+        Node n1 = j.createSlave(\"n1\", \"label\", null);\n+        Node n2 = j.createSlave(\"n2\", \"label label2\", null);\n+        Node n3 = j.createSlave(\"n3\", \"label2\", null);\n+        Label l = j.jenkins.getLabel(\"label\");\n+        Label l2 = j.jenkins.getLabel(\"label2\");\n+        Label l3 = j.jenkins.getLabel(\"label3\");\n+        assertThat(l.getNodes().size(), is(2));\n+        assertThat(l.getNodes(), containsInAnyOrder(n1,n2));\n+        assertThat(l2.getNodes().size(), is(2));\n+        assertThat(l2.getNodes(), containsInAnyOrder(n3,n2));\n+        assertThat(l3.getNodes().isEmpty(), is(true));\n+    }\n+\n+    @Test\n+    public void getClouds() {\n+        Cloud test = new TestCloud(\"test\", \"label\");\n+        j.jenkins.clouds.add(test);\n+        Label l = new LabelAtom(\"label\");\n+        Label l2 = new LabelAtom(\"label2\");\n+        assertThat(l.getClouds().size(), is(1));\n+        assertThat(l.getClouds(), containsInAnyOrder(test));\n+        assertThat(l2.getClouds().isEmpty(), is(true));", "originalCommit": "8c5ee796a4a9f99ab5cace83ff32ab70259e9bd9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjUwMzQ1NA==", "url": "https://github.com/jenkinsci/jenkins/pull/5007#discussion_r506503454", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import static org.hamcrest.Matchers.is;\n          \n          \n            \n            import static org.hamcrest.Matchers.is;\n          \n          \n            \n            import static org.hamcrest.Matchers.empty;", "author": "res0nance", "createdAt": "2020-10-16T14:47:35Z", "path": "test/src/test/java/hudson/model/labels/LabelAtomTest.java", "diffHunk": "@@ -1,11 +1,17 @@\n package hudson.model.labels;\n \n import hudson.model.Label;\n+import hudson.model.Node;\n+import hudson.slaves.Cloud;\n import org.junit.Rule;\n import org.junit.Test;\n import org.jvnet.hudson.test.JenkinsRule;\n \n+import java.util.ArrayList;\n+import java.util.List;\n+\n import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.containsInAnyOrder;\n import static org.hamcrest.Matchers.is;", "originalCommit": "8c5ee796a4a9f99ab5cace83ff32ab70259e9bd9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "80dc2f4ab41d7592ffdf1483dcaa3e03bbaef2b8", "url": "https://github.com/jenkinsci/jenkins/commit/80dc2f4ab41d7592ffdf1483dcaa3e03bbaef2b8", "message": "Apply suggestions from code review\n\nCo-authored-by: Mark Waite <mark.earl.waite@gmail.com>", "committedDate": "2020-10-16T14:48:01Z", "type": "commit"}]}