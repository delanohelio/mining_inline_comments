{"pr_number": 4944, "pr_title": "[JEP-228] Unforking XStream", "pr_createdAt": "2020-09-21T18:58:11Z", "pr_url": "https://github.com/jenkinsci/jenkins/pull/4944", "timeline": [{"oid": "d27a5010aa1aceecf2f5fda6f795ff573f44c482", "url": "https://github.com/jenkinsci/jenkins/commit/d27a5010aa1aceecf2f5fda6f795ff573f44c482", "message": "Unforking XStream", "committedDate": "2020-09-21T18:56:51Z", "type": "commit"}, {"oid": "f5edc8ffd690e95335f6a750a3f76493d78d1020", "url": "https://github.com/jenkinsci/jenkins/commit/f5edc8ffd690e95335f6a750a3f76493d78d1020", "message": "Some overrides missing from MapperDelegate", "committedDate": "2020-09-21T19:35:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjMwNzM1NQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4944#discussion_r492307355", "bodyText": "This is a problem. DescribableList is not Serializable so removing transient will prevent this class from being serialized over Remoting. Yet keeping transient will prevent tool installations from saving their properties in XML. I have not found any way to get the effect of XStreamSerializable without patching PureJavaReflectionProvider.", "author": "jglick", "createdAt": "2020-09-21T19:50:23Z", "path": "core/src/main/java/hudson/tools/ToolInstallation.java", "diffHunk": "@@ -82,8 +81,7 @@\n     /**\n      * {@link ToolProperty}s that are associated with this tool.\n      */\n-    @XStreamSerializable\n-    private transient /*almost final*/ DescribableList<ToolProperty<?>,ToolPropertyDescriptor> properties\n+    private /*almost final*/ DescribableList<ToolProperty<?>,ToolPropertyDescriptor> properties", "originalCommit": "f5edc8ffd690e95335f6a750a3f76493d78d1020", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjMyMjE2MA==", "url": "https://github.com/jenkinsci/jenkins/pull/4944#discussion_r492322160", "bodyText": "(I am not sure why ToolInstallation was ever made Serializable to begin with. The normal usage is to have it define some PATH entry on the controller side, which does not require the ToolInstallation itself to ever be sent to the agent.)", "author": "jglick", "createdAt": "2020-09-21T20:19:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjMwNzM1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjMzNjY4OA==", "url": "https://github.com/jenkinsci/jenkins/pull/4944#discussion_r492336688", "bodyText": "Also the current annotation was explicitly rejected upstream: x-stream/xstream#70 (comment)", "author": "jglick", "createdAt": "2020-09-21T20:47:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjMwNzM1NQ=="}], "type": "inlineReview"}, {"oid": "0e5aeec4ccc67207c0912ffe471fe5cf2815cf04", "url": "https://github.com/jenkinsci/jenkins/commit/0e5aeec4ccc67207c0912ffe471fe5cf2815cf04", "message": "[XSTR-762] writeReplace & readResolve must be accessible to be used from subclasses", "committedDate": "2020-09-23T20:25:54Z", "type": "commit"}, {"oid": "e7609dbe728bcb293b80eb9862b95d5023c6f95e", "url": "https://github.com/jenkinsci/jenkins/commit/e7609dbe728bcb293b80eb9862b95d5023c6f95e", "message": "Merge branch 'master' of github.com:jenkinsci/jenkins into xstream", "committedDate": "2020-09-23T20:52:48Z", "type": "commit"}, {"oid": "69eaa764709006c05099ae9f2fb7573f53572c88", "url": "https://github.com/jenkinsci/jenkins/commit/69eaa764709006c05099ae9f2fb7573f53572c88", "message": "DomElement.click overloads changed incompatibly", "committedDate": "2020-09-23T21:01:10Z", "type": "commit"}, {"oid": "4af60991e3cc2be81974e4ccd44a137812617fbb", "url": "https://github.com/jenkinsci/jenkins/commit/4af60991e3cc2be81974e4ccd44a137812617fbb", "message": "Giving up on ToolInstallation being Serializable.\nFixing MavenInstallation accordingly.\nAntInstallation was already fixed: https://github.com/jenkinsci/ant-plugin/commit/c957dca4cd7789e3918e90ae020687aeaeea998e", "committedDate": "2020-09-23T21:23:15Z", "type": "commit"}, {"oid": "08771f796e77016927955aa7c6ab31081467a1d1", "url": "https://github.com/jenkinsci/jenkins/commit/08771f796e77016927955aa7c6ab31081467a1d1", "message": "Relaxing message assertion in RobustReflectionConverter.randomExceptionsReported", "committedDate": "2020-09-24T18:52:43Z", "type": "commit"}, {"oid": "232a012f4dcbe3f6f0df81678e3fad3a3eb8800e", "url": "https://github.com/jenkinsci/jenkins/commit/232a012f4dcbe3f6f0df81678e3fad3a3eb8800e", "message": "Picking up https://github.com/jenkinsci/matrix-auth-plugin/pull/89 caught via JobTest", "committedDate": "2020-09-24T18:59:41Z", "type": "commit"}, {"oid": "861ca26e8ce02960c9589102d113d195d1bd70ce", "url": "https://github.com/jenkinsci/jenkins/commit/861ca26e8ce02960c9589102d113d195d1bd70ce", "message": "https://github.com/jenkinsci/jenkins-test-harness/pull/243 released", "committedDate": "2020-09-24T19:46:29Z", "type": "commit"}, {"oid": "b89f6d1b32101225eb41ca96747d2dbeba753fe6", "url": "https://github.com/jenkinsci/jenkins/commit/b89f6d1b32101225eb41ca96747d2dbeba753fe6", "message": "Another case forgotten in 0e5aeec4ccc67207c0912ffe471fe5cf2815cf04", "committedDate": "2020-09-24T19:48:03Z", "type": "commit"}, {"oid": "1cec1e17943f6732e8187005af540267aeed733f", "url": "https://github.com/jenkinsci/jenkins/commit/1cec1e17943f6732e8187005af540267aeed733f", "message": "XStream has SecurityMapper, but we have our own system already, so suppress warning", "committedDate": "2020-09-25T17:48:12Z", "type": "commit"}, {"oid": "0ba7df4cf3a2ddbe63323248a4162c394cf2a57b", "url": "https://github.com/jenkinsci/jenkins/commit/0ba7df4cf3a2ddbe63323248a4162c394cf2a57b", "message": "GetMavenVersion was also serializing its outer class", "committedDate": "2020-09-25T20:11:05Z", "type": "commit"}, {"oid": "cdc14144da8027d265676c94d34abda767f4d7cb", "url": "https://github.com/jenkinsci/jenkins/commit/cdc14144da8027d265676c94d34abda767f4d7cb", "message": "Trying to make ToolInstallation serializable compatible", "committedDate": "2020-09-25T21:24:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE3Mjk3Mw==", "url": "https://github.com/jenkinsci/jenkins/pull/4944#discussion_r496172973", "bodyText": "Nice!", "author": "daniel-beck", "createdAt": "2020-09-28T19:10:00Z", "path": "core/src/main/java/hudson/tools/ToolInstallation.java", "diffHunk": "@@ -210,13 +221,32 @@ protected String translateFor(Node node, TaskListener log) throws IOException, I\n      * Invoked by XStream when this object is read into memory.\n      */\n     protected Object readResolve() {\n-        if(properties==null)\n-            properties = new DescribableList<>(Saveable.NOOP);\n-        for (ToolProperty<?> p : properties)\n-            _setTool(p, this);\n+        if (properties != null) {\n+            for (ToolProperty<?> p : properties) {\n+                _setTool(p, this);\n+            }\n+        }\n         return this;\n     }\n \n+    protected Object writeReplace() throws Exception {\n+        if (Channel.current() == null) { // XStream", "originalCommit": "cdc14144da8027d265676c94d34abda767f4d7cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE4MDk0MA==", "url": "https://github.com/jenkinsci/jenkins/pull/4944#discussion_r496180940", "bodyText": "Well, not nice, but seems to work well enough. I am trying to fix popular plugins to not need this hack.", "author": "jglick", "createdAt": "2020-09-28T19:25:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE3Mjk3Mw=="}], "type": "inlineReview"}, {"oid": "80ab2fede7e8a5d46bd1d1c0cd773afec61aa9ca", "url": "https://github.com/jenkinsci/jenkins/commit/80ab2fede7e8a5d46bd1d1c0cd773afec61aa9ca", "message": "Merge branch 'master' of github.com:jenkinsci/jenkins into xstream", "committedDate": "2020-09-28T20:14:31Z", "type": "commit"}, {"oid": "b45ffbceb4f5cfa1dd91e1ff7ba7f57e8639b4da", "url": "https://github.com/jenkinsci/jenkins/commit/b45ffbceb4f5cfa1dd91e1ff7ba7f57e8639b4da", "message": "Avoid throwing IOException from PersistedList.inModified for common cases covered by https://github.com/jenkinsci/jenkins-test-harness/pull/243", "committedDate": "2020-09-28T20:35:20Z", "type": "commit"}, {"oid": "ef894943cca5ad3dd1229edefe053b44ffc4704c", "url": "https://github.com/jenkinsci/jenkins/commit/ef894943cca5ad3dd1229edefe053b44ffc4704c", "message": "Found a way to avoid looking up XStream.converterRegistry by reflection", "committedDate": "2020-09-28T20:44:19Z", "type": "commit"}, {"oid": "82dd8f819717e749070b2be80e7a92d8e00c1bb5", "url": "https://github.com/jenkinsci/jenkins/commit/82dd8f819717e749070b2be80e7a92d8e00c1bb5", "message": "XStream2Test.crashXstream now throwing ConversionException, not ForbiddenClassException", "committedDate": "2020-09-28T23:26:51Z", "type": "commit"}, {"oid": "2046d3658f92cb8994ab4c3696eb4021b4a8ece9", "url": "https://github.com/jenkinsci/jenkins/commit/2046d3658f92cb8994ab4c3696eb4021b4a8ece9", "message": "Noting which version of the parent POM has https://github.com/jenkinsci/jenkins-test-harness/pull/243", "committedDate": "2020-09-29T02:02:56Z", "type": "commit"}, {"oid": "bfe4d2a2b2b0c535d75f08eea296e9f36721866b", "url": "https://github.com/jenkinsci/jenkins/commit/bfe4d2a2b2b0c535d75f08eea296e9f36721866b", "message": "Merge branch 'master' of github.com:jenkinsci/jenkins into xstream", "committedDate": "2020-09-29T13:08:01Z", "type": "commit"}, {"oid": "09d7dac3df77ba9409fc2f1b843aa06d511818db", "url": "https://github.com/jenkinsci/jenkins/commit/09d7dac3df77ba9409fc2f1b843aa06d511818db", "message": "Refreshed Javadoc for XStream2", "committedDate": "2020-09-29T18:02:20Z", "type": "commit"}, {"oid": "82037c3f9dd2fa984c0d134c3c342d491a76ba19", "url": "https://github.com/jenkinsci/jenkins/commit/82037c3f9dd2fa984c0d134c3c342d491a76ba19", "message": "The simplest solution to JENKINS-19561 seems to be to stop using autodetectAnnotations", "committedDate": "2020-09-29T18:16:51Z", "type": "commit"}, {"oid": "5b2b5f06a18a1cc0fabcf2a8802219614ba94302", "url": "https://github.com/jenkinsci/jenkins/commit/5b2b5f06a18a1cc0fabcf2a8802219614ba94302", "message": "Fixing some deprecations in Robust*Converter", "committedDate": "2020-09-29T20:46:30Z", "type": "commit"}, {"oid": "5f7c40f93fcd1025a21405f2ef9edc6e20a9a816", "url": "https://github.com/jenkinsci/jenkins/commit/5f7c40f93fcd1025a21405f2ef9edc6e20a9a816", "message": "Display OldDataMonitor errors from RobustReflectionConverter during functional tests", "committedDate": "2020-09-30T21:12:56Z", "type": "commit"}, {"oid": "53f997814e1c6840ce02c51381bd92de2b36f483", "url": "https://github.com/jenkinsci/jenkins/commit/53f997814e1c6840ce02c51381bd92de2b36f483", "message": "Merge branch 'master' of github.com:jenkinsci/jenkins into xstream", "committedDate": "2020-10-01T18:50:53Z", "type": "commit"}, {"oid": "97146a76bba5a2945756274aa25afb55c0519ad0", "url": "https://github.com/jenkinsci/jenkins/commit/97146a76bba5a2945756274aa25afb55c0519ad0", "message": "Merge branch 'master' of github.com:jenkinsci/jenkins into xstream", "committedDate": "2020-10-08T16:46:22Z", "type": "commit"}, {"oid": "f1fc2f6d5c901c8c58102d63a136c839101b06c9", "url": "https://github.com/jenkinsci/jenkins/commit/f1fc2f6d5c901c8c58102d63a136c839101b06c9", "message": "Stray digit in test name", "committedDate": "2020-10-08T18:36:47Z", "type": "commit"}, {"oid": "7b0270106a946a32cca56d26b30f46fd69d24808", "url": "https://github.com/jenkinsci/jenkins/commit/7b0270106a946a32cca56d26b30f46fd69d24808", "message": "Added XStream2AnnotationTest to clearly document incompatibility", "committedDate": "2020-10-08T19:07:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODUxMjE0Mg==", "url": "https://github.com/jenkinsci/jenkins/pull/4944#discussion_r508512142", "bodyText": "May need to be adjusted for XStream 1.5.x: x-stream/xstream#207", "author": "jglick", "createdAt": "2020-10-20T13:40:07Z", "path": "core/src/main/java/hudson/util/XStream2.java", "diffHunk": "@@ -257,8 +258,9 @@ private void init() {\n         registerConverter(new AssociatedConverterImpl(this), -10);\n \n         registerConverter(new BlacklistedTypesConverter(), PRIORITY_VERY_HIGH); // SECURITY-247 defense\n+        addPermission(AnyTypePermission.ANY); // covered by JEP-200, avoid securityWarningGiven", "originalCommit": "7b0270106a946a32cca56d26b30f46fd69d24808", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODcwMDA0MQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4944#discussion_r508700041", "bodyText": "No. This is the same for XStream 1.4.x and 1.5.x. With this line you overwrite any default initialization and you are initializing the XStream Security Framework with a blacklist without any entries i.e. you allow anything. Your BlacklistedTypesConverter is now responsibly to cover any of the CVEs.", "author": "joehni", "createdAt": "2020-10-20T17:12:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODUxMjE0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODcwMjQzMw==", "url": "https://github.com/jenkinsci/jenkins/pull/4944#discussion_r508702433", "bodyText": "In our case that is fine since we are actually using a whitelist, despite the name, so this line merely ensures that the current behavior is maintained and that XStream does not print a warning to stderr. https://jenkins.io/jep/200 FTR", "author": "jglick", "createdAt": "2020-10-20T17:16:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODUxMjE0Mg=="}], "type": "inlineReview"}, {"oid": "e2a10f190f6ce6f9ece9a2c80dc0f8c94977d265", "url": "https://github.com/jenkinsci/jenkins/commit/e2a10f190f6ce6f9ece9a2c80dc0f8c94977d265", "message": "Merge branch 'master' of https://github.com/jenkinsci/jenkins into xstream", "committedDate": "2020-10-21T15:07:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ3MDQzOQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4944#discussion_r510470439", "bodyText": "Very handy for diagnosing test failures related to XStream!", "author": "jglick", "createdAt": "2020-10-22T21:32:28Z", "path": "core/src/main/java/hudson/diagnosis/OldDataMonitor.java", "diffHunk": "@@ -207,6 +208,9 @@ public static void report(Saveable obj, Collection<Throwable> errors) {\n             if (e instanceof ReportException) {\n                 report(obj, ((ReportException)e).version);\n             } else {\n+                if (Main.isUnitTest) {\n+                    LOGGER.log(Level.INFO, \"Trouble loading \" + obj, e);", "originalCommit": "e2a10f190f6ce6f9ece9a2c80dc0f8c94977d265", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ3MTMzMQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4944#discussion_r510471331", "bodyText": "Useful for PCT, until we can get most plugins moved onto new POMs.", "author": "jglick", "createdAt": "2020-10-22T21:34:13Z", "path": "core/src/main/java/hudson/util/PersistedList.java", "diffHunk": "@@ -170,7 +178,30 @@ public void clear() {\n      * Called when a list is mutated.\n      */\n     protected void onModified() throws IOException {\n-        owner.save();\n+        try {\n+            owner.save();\n+        } catch (IOException x) {\n+            Optional<T> ignored = stream().filter(PersistedList::ignoreSerializationErrors).findAny();\n+            if (ignored.isPresent()) {\n+                LOGGER.log(Level.WARNING, \"Ignoring serialization errors in \" + ignored.get() + \"; update your parent POM to 4.8 or newer\", x);", "originalCommit": "e2a10f190f6ce6f9ece9a2c80dc0f8c94977d265", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ3MjQ2MQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4944#discussion_r510472461", "bodyText": "Just demonstrating what would happen with plugins that used annotations without a processAnnotations call.", "author": "jglick", "createdAt": "2020-10-22T21:36:30Z", "path": "core/src/test/java/hudson/util/XStream2Test.java", "diffHunk": "@@ -530,9 +533,42 @@ public void setListDefaultNull(List<String> listDefaultNull) {\n     public void crashXstream() throws Exception {\n         try {\n             new XStream2().fromXML(\"<void/>\");\n-            fail(\"expected to throw ForbiddenClassException, but why are we still alive?\");\n-        } catch (ForbiddenClassException ex) {\n+            fail(\"expected to throw ConversionException, but why are we still alive?\");\n+        } catch (XStreamException ex) {\n             // pass\n         }\n     }\n+\n+    @Test\n+    public void annotations() throws Exception {\n+        assertEquals(\"not registered, so sorry\", \"<hudson.util.XStream2Test_-C1/>\", Jenkins.XSTREAM2.toXML(new C1()));", "originalCommit": "e2a10f190f6ce6f9ece9a2c80dc0f8c94977d265", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ3MzM0NQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4944#discussion_r510473345", "bodyText": "Needed for JTH upgrade, unrelated to XStream.", "author": "jglick", "createdAt": "2020-10-22T21:38:33Z", "path": "test/src/test/java/hudson/model/ProjectTest.java", "diffHunk": "@@ -256,7 +256,7 @@ public void testGetScmCheckoutRetryCount() throws Exception{\n         HtmlForm form = j.createWebClient().goTo(p.getUrl() + \"/configure\").getFormByName(\"config\");\n         ((HtmlElement)form.getByXPath(\"//div[@class='advancedLink']//button\").get(0)).click();\n         // required due to the new default behavior of click\n-        form.getInputByName(\"hasCustomScmCheckoutRetryCount\").click(new Event(), true);\n+        form.getInputByName(\"hasCustomScmCheckoutRetryCount\").click(new Event(), false, false, false, true);", "originalCommit": "e2a10f190f6ce6f9ece9a2c80dc0f8c94977d265", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ3MzY0Nw==", "url": "https://github.com/jenkinsci/jenkins/pull/4944#discussion_r510473647", "bodyText": "More realistic demonstration of compatibility impact for plugins of turning off autodetection.", "author": "jglick", "createdAt": "2020-10-22T21:39:15Z", "path": "test/src/test/java/hudson/util/XStream2AnnotationTest.java", "diffHunk": "@@ -0,0 +1,122 @@\n+/*\n+ * The MIT License\n+ *\n+ * Copyright 2020 CloudBees, Inc.\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+\n+package hudson.util;\n+\n+import com.thoughtworks.xstream.annotations.XStreamAlias;\n+import hudson.ExtensionList;\n+import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n+import jenkins.model.GlobalConfiguration;\n+import org.apache.commons.io.FileUtils;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import org.junit.Test;\n+import org.junit.Rule;\n+import org.jvnet.hudson.test.JenkinsSessionRule;\n+import org.jvnet.hudson.test.TestExtension;\n+\n+public class XStream2AnnotationTest {\n+\n+    @Rule\n+    public JenkinsSessionRule rr = new JenkinsSessionRule();\n+\n+    @Test\n+    public void xStreamAlias() throws Throwable {\n+        rr.then(r -> {\n+            AnnotatedProcessed annotatedProcessed = AnnotatedProcessed.get();\n+            annotatedProcessed.x = 1;\n+            annotatedProcessed.save();\n+            assertThat(annotatedProcessed.xml(), is(\"<myconf-annotated-processed><x>1</x></myconf-annotated-processed>\"));\n+            AnnotatedUnprocessed annotatedUnprocessed = AnnotatedUnprocessed.get();\n+            annotatedUnprocessed.x = 2;\n+            annotatedUnprocessed.save();\n+            assertThat(annotatedUnprocessed.xml(), is(\"<hudson.util.XStream2AnnotationTest_-AnnotatedUnprocessed><x>2</x></hudson.util.XStream2AnnotationTest_-AnnotatedUnprocessed>\"));\n+            Programmatic programmatic = Programmatic.get();\n+            programmatic.x = 3;\n+            programmatic.save();\n+            assertThat(programmatic.xml(), is(\"<myconf-programmatic><x>3</x></myconf-programmatic>\"));\n+        });\n+        rr.then(r -> {\n+            assertThat(AnnotatedProcessed.get().x, is(1));\n+            assertThat(AnnotatedUnprocessed.get().x, is(2));\n+            assertThat(Programmatic.get().x, is(3));\n+            // Typical content saved by Jenkins session when annotation autodetection was still enabled:", "originalCommit": "e2a10f190f6ce6f9ece9a2c80dc0f8c94977d265", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "af44d41866631e25ccaebb69e8afc9b1cb47c679", "url": "https://github.com/jenkinsci/jenkins/commit/af44d41866631e25ccaebb69e8afc9b1cb47c679", "message": "Merge branch 'master' of https://github.com/jenkinsci/jenkins into xstream", "committedDate": "2020-10-26T12:41:20Z", "type": "commit"}, {"oid": "91e0fa6f5eb52431b9541315429e5b7a345ad84c", "url": "https://github.com/jenkinsci/jenkins/commit/91e0fa6f5eb52431b9541315429e5b7a345ad84c", "message": "Picking up release of https://github.com/jenkinsci/matrix-auth-plugin/pull/89\n\nCo-authored-by: Basil Crow <me@basilcrow.com>", "committedDate": "2020-11-03T23:07:53Z", "type": "commit"}, {"oid": "7e748d9607170eb8bac7721c7a361256206a15ba", "url": "https://github.com/jenkinsci/jenkins/commit/7e748d9607170eb8bac7721c7a361256206a15ba", "message": "Merge branch 'master' of https://github.com/jenkinsci/jenkins into xstream", "committedDate": "2020-11-03T23:08:17Z", "type": "commit"}, {"oid": "44a9b59b645b7c051ea35e80db530fa31ffb1638", "url": "https://github.com/jenkinsci/jenkins/commit/44a9b59b645b7c051ea35e80db530fa31ffb1638", "message": "Merge branch 'master' of https://github.com/jenkinsci/jenkins into xstream", "committedDate": "2020-11-06T18:35:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDMyOTczMA==", "url": "https://github.com/jenkinsci/jenkins/pull/4944#discussion_r564329730", "bodyText": "Does this imply that all plugins must make the same change?", "author": "rsandell", "createdAt": "2021-01-26T08:33:26Z", "path": "core/src/main/java/hudson/model/ListView.java", "diffHunk": "@@ -132,7 +132,7 @@ public void setJobFilters(List<ViewJobFilter> jobFilters) throws IOException {\n         this.jobFilters.replaceBy(jobFilters);\n     }\n \n-    private Object readResolve() {\n+    protected Object readResolve() {", "originalCommit": "44a9b59b645b7c051ea35e80db530fa31ffb1638", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDM0NDA4Nw==", "url": "https://github.com/jenkinsci/jenkins/pull/4944#discussion_r564344087", "bodyText": "If the class is extended and the parent read resolve needs to be called", "author": "timja", "createdAt": "2021-01-26T08:56:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDMyOTczMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDM2MzQ3MQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4944#discussion_r564363471", "bodyText": "https://github.com/jenkinsci/jep/tree/master/jep/228#inherited-private-serialization-methods explains this", "author": "daniel-beck", "createdAt": "2021-01-26T09:26:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDMyOTczMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDU2MTQ5MA==", "url": "https://github.com/jenkinsci/jenkins/pull/4944#discussion_r564561490", "bodyText": "I attempted to search for extant plugins using an incorrect private override, but I might have missed some of course.", "author": "jglick", "createdAt": "2021-01-26T14:40:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDMyOTczMA=="}], "type": "inlineReview"}]}