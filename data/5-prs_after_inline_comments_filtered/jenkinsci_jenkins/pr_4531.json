{"pr_number": 4531, "pr_title": "JENKINS-61206 - Support System Read / Extended read permissions for agent configurations", "pr_createdAt": "2020-02-29T12:08:20Z", "pr_url": "https://github.com/jenkinsci/jenkins/pull/4531", "timeline": [{"oid": "cf86609fa5256033a2ff352fc6379e8bfc1bd3d8", "url": "https://github.com/jenkinsci/jenkins/commit/cf86609fa5256033a2ff352fc6379e8bfc1bd3d8", "message": "JENKINS-61206 System read / Extended read for agents", "committedDate": "2020-02-29T11:59:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAyNjc0MQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4531#discussion_r386026741", "bodyText": "Just throw in that case? The assumption that object is an ancestor isn't necessarily true. For example, in upstream cause related UI, you would show information about another job / build.", "author": "daniel-beck", "createdAt": "2020-02-29T12:58:11Z", "path": "core/src/main/java/hudson/Functions.java", "diffHunk": "@@ -1128,6 +1128,43 @@ public static String getFooterURL() {\n                 Jenkins.get().hasPermission(d.getRequiredGlobalConfigPagePermission()) || Jenkins.get().hasPermission(Jenkins.SYSTEM_READ)));\n     }\n \n+    /**\n+     * Checks if the current security principal has one of the supplied permissions.\n+     *\n+     * @since TODO\n+     */\n+    public static boolean hasAnyPermission(AccessControlled ac, Permission[] permissions) {\n+        if (permissions == null || permissions.length == 0) {\n+            return true;\n+        }\n+\n+        return ac.hasAnyPermission(permissions);\n+    }\n+\n+    /**\n+     * This version is so that the 'hasAnyPermission'\n+     * degrades gracefully if \"it\" is not an {@link AccessControlled} object.\n+     * Otherwise it will perform no check and that problem is hard to notice.", "originalCommit": "cf86609fa5256033a2ff352fc6379e8bfc1bd3d8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAyNjg1MA==", "url": "https://github.com/jenkinsci/jenkins/pull/4531#discussion_r386026850", "bodyText": "It\u2019s consistent with hasPermission and wasn\u2019t working without this for the l:task it was just silently doing nothing", "author": "timja", "createdAt": "2020-02-29T13:00:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAyNjc0MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA4OTQ0Ng==", "url": "https://github.com/jenkinsci/jenkins/pull/4531#discussion_r386089446", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Otherwise it will perform no check and that problem is hard to notice.\n          \n          \n            \n                 * Otherwise it will perform no check and that problem is hard to notice.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @since TODO", "author": "timja", "createdAt": "2020-03-01T08:54:31Z", "path": "core/src/main/java/hudson/Functions.java", "diffHunk": "@@ -1128,6 +1128,43 @@ public static String getFooterURL() {\n                 Jenkins.get().hasPermission(d.getRequiredGlobalConfigPagePermission()) || Jenkins.get().hasPermission(Jenkins.SYSTEM_READ)));\n     }\n \n+    /**\n+     * Checks if the current security principal has one of the supplied permissions.\n+     *\n+     * @since TODO\n+     */\n+    public static boolean hasAnyPermission(AccessControlled ac, Permission[] permissions) {\n+        if (permissions == null || permissions.length == 0) {\n+            return true;\n+        }\n+\n+        return ac.hasAnyPermission(permissions);\n+    }\n+\n+    /**\n+     * This version is so that the 'hasAnyPermission'\n+     * degrades gracefully if \"it\" is not an {@link AccessControlled} object.\n+     * Otherwise it will perform no check and that problem is hard to notice.", "originalCommit": "cf86609fa5256033a2ff352fc6379e8bfc1bd3d8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "35dba6f231dc0c38419a166b8ba3f8423d49bbb9", "url": "https://github.com/jenkinsci/jenkins/commit/35dba6f231dc0c38419a166b8ba3f8423d49bbb9", "message": "Update core/src/main/java/hudson/Functions.java", "committedDate": "2020-03-01T08:54:39Z", "type": "commit"}, {"oid": "e00fa4f0060fd07253472b15aae8904fc8c83974", "url": "https://github.com/jenkinsci/jenkins/commit/e00fa4f0060fd07253472b15aae8904fc8c83974", "message": "Set permission to false explicitly", "committedDate": "2020-03-06T21:04:28Z", "type": "commit"}, {"oid": "b0a574dee81e30cfe625aadfae4333a6514aac11", "url": "https://github.com/jenkinsci/jenkins/commit/b0a574dee81e30cfe625aadfae4333a6514aac11", "message": "Merge branch 'master' into systemRead-agents", "committedDate": "2020-03-06T21:05:12Z", "type": "commit"}, {"oid": "0ffa5fc259c391b5575cc8d165b0b3e3021d5e8d", "url": "https://github.com/jenkinsci/jenkins/commit/0ffa5fc259c391b5575cc8d165b0b3e3021d5e8d", "message": "Add message when no configured clouds\n\nOtherwise there was a white page and it looked weird", "committedDate": "2020-03-06T21:16:25Z", "type": "commit"}, {"oid": "7e8bb9be7fd5c9c12009f67d94bcf9ac54b703d7", "url": "https://github.com/jenkinsci/jenkins/commit/7e8bb9be7fd5c9c12009f67d94bcf9ac54b703d7", "message": "Merge branch 'master' into systemRead-agents", "committedDate": "2020-04-25T07:29:03Z", "type": "commit"}, {"oid": "b7dd14234c67b51020178afb32606d7ef4dbf9e1", "url": "https://github.com/jenkinsci/jenkins/commit/b7dd14234c67b51020178afb32606d7ef4dbf9e1", "message": "Hide password for Computer.EXTENDED_READ", "committedDate": "2020-04-25T08:46:30Z", "type": "commit"}, {"oid": "6e1eeaf69dc120b8ec1afe01f0a3a1f22d6e232c", "url": "https://github.com/jenkinsci/jenkins/commit/6e1eeaf69dc120b8ec1afe01f0a3a1f22d6e232c", "message": "Merge branch 'master' into systemRead-agents", "committedDate": "2020-04-28T18:50:18Z", "type": "commit"}, {"oid": "393ad7f6cb8050c70f4793ba194e909fb07d2888", "url": "https://github.com/jenkinsci/jenkins/commit/393ad7f6cb8050c70f4793ba194e909fb07d2888", "message": "Add test", "committedDate": "2020-04-28T20:41:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk5MTY3Mg==", "url": "https://github.com/jenkinsci/jenkins/pull/4531#discussion_r416991672", "bodyText": "Weird, that looks like an oversight in your initial PR; CLI and Nodes links can be shown to anyone as they're not permission gated anyway.", "author": "daniel-beck", "createdAt": "2020-04-28T23:50:17Z", "path": "core/src/main/java/jenkins/management/NodesLink.java", "diffHunk": "@@ -55,7 +55,7 @@ public String getDescription() {\n     @NonNull\n     @Override\n     public Permission getRequiredPermission() {\n-        return Jenkins.MANAGE;\n+        return Jenkins.READ;", "originalCommit": "393ad7f6cb8050c70f4793ba194e909fb07d2888", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEzMjg3NQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4531#discussion_r417132875", "bodyText": "initial PR? this is the management link from /manage, I haven't touched nodes / agents for system read before this PR", "author": "timja", "createdAt": "2020-04-29T07:58:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk5MTY3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE3NjgyMw==", "url": "https://github.com/jenkinsci/jenkins/pull/4531#discussion_r417176823", "bodyText": "I mean the PR that introduce the SYSTEM_READ permission.\nCLI and Nodes pages are available to any user, so no need to hide them on Manage from any user who can access that page.", "author": "daniel-beck", "createdAt": "2020-04-29T09:17:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk5MTY3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA5NDAyNA==", "url": "https://github.com/jenkinsci/jenkins/pull/4531#discussion_r419094024", "bodyText": "IOW, you should change \n  \n    \n      jenkins/core/src/main/java/jenkins/management/CliLink.java\n    \n    \n         Line 58\n      in\n      6fb8b93\n    \n    \n    \n    \n\n        \n          \n           return Jenkins.MANAGE; \n        \n    \n  \n\n \ud83d\ude03", "author": "daniel-beck", "createdAt": "2020-05-03T12:05:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk5MTY3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk5MjU1Nw==", "url": "https://github.com/jenkinsci/jenkins/pull/4531#discussion_r416992557", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        List<Ancestor> ancs = Stapler.getCurrentRequest().getAncestors();\n          \n          \n            \n                        AccessControlled ac = Stapler.getCurrentRequest().findAncestorObject(AccessControlled.class);\n          \n      \n    \n    \n  \n\netc.", "author": "daniel-beck", "createdAt": "2020-04-28T23:52:57Z", "path": "core/src/main/java/hudson/Functions.java", "diffHunk": "@@ -1156,6 +1157,45 @@ public static String getFooterURL() {\n                 Jenkins.get().hasPermission(d.getRequiredGlobalConfigPagePermission()) || Jenkins.get().hasPermission(Jenkins.SYSTEM_READ)));\n     }\n \n+    /**\n+     * Checks if the current security principal has one of the supplied permissions.\n+     *\n+     * @since TODO\n+     */\n+    public static boolean hasAnyPermission(AccessControlled ac, Permission[] permissions) {\n+        if (permissions == null || permissions.length == 0) {\n+            return true;\n+        }\n+\n+        return ac.hasAnyPermission(permissions);\n+    }\n+\n+    /**\n+     * This version is so that the 'hasAnyPermission'\n+     * degrades gracefully if \"it\" is not an {@link AccessControlled} object.\n+     * Otherwise it will perform no check and that problem is hard to notice.\n+     *\n+     * @since TODO\n+     */\n+    public static boolean hasAnyPermission(Object object, Permission[] permissions) throws IOException, ServletException {\n+        if (permissions == null || permissions.length == 0) {\n+            return true;\n+        }\n+\n+        if (object instanceof AccessControlled)\n+            return hasAnyPermission((AccessControlled) object, permissions);\n+        else {\n+            List<Ancestor> ancs = Stapler.getCurrentRequest().getAncestors();", "originalCommit": "393ad7f6cb8050c70f4793ba194e909fb07d2888", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEzOTQ5OA==", "url": "https://github.com/jenkinsci/jenkins/pull/4531#discussion_r417139498", "bodyText": "bb85534", "author": "timja", "createdAt": "2020-04-29T08:11:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk5MjU1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk5Mjg5Ng==", "url": "https://github.com/jenkinsci/jenkins/pull/4531#discussion_r416992896", "bodyText": "\u2764\ufe0f", "author": "daniel-beck", "createdAt": "2020-04-28T23:53:53Z", "path": "core/src/main/java/hudson/Functions.java", "diffHunk": "@@ -2021,6 +2061,10 @@ public String getPasswordValue(Object o) {\n                 if (item != null && !item.hasPermission(Item.CONFIGURE)) {\n                     return \"********\";\n                 }\n+                Computer computer = req.findAncestorObject(Computer.class);\n+                if (computer != null && !computer.hasPermission(Computer.CONFIGURE)) {\n+                    return \"********\";", "originalCommit": "393ad7f6cb8050c70f4793ba194e909fb07d2888", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ0MzM4OA==", "url": "https://github.com/jenkinsci/jenkins/pull/4531#discussion_r418443388", "bodyText": "I do not know a plugin which would be wrongly affected by that.\nI can imagine a Computer action which has a form with credentials, but it is much more likely for Jobs which has been added 4 years ago", "author": "oleg-nenashev", "createdAt": "2020-05-01T07:14:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk5Mjg5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk5MzMyMA==", "url": "https://github.com/jenkinsci/jenkins/pull/4531#discussion_r416993320", "bodyText": "Extended Read is implied by Configure, so all of this is unnecessary.", "author": "daniel-beck", "createdAt": "2020-04-28T23:55:13Z", "path": "core/src/main/java/hudson/model/Computer.java", "diffHunk": "@@ -1804,6 +1804,14 @@ public long getWhen() {\n     public static final Permission CONNECT = new Permission(PERMISSIONS,\"Connect\", Messages._Computer_ConnectPermission_Description(), DISCONNECT, PermissionScope.COMPUTER);\n     public static final Permission BUILD = new Permission(PERMISSIONS, \"Build\", Messages._Computer_BuildPermission_Description(),  Permission.WRITE, PermissionScope.COMPUTER);\n \n+    @Restricted(NoExternalUse.class) // called by jelly\n+    public static final Permission[] EXTENDED_READ_AND_CONFIGURE =\n+            new Permission[] { EXTENDED_READ, CONFIGURE };", "originalCommit": "393ad7f6cb8050c70f4793ba194e909fb07d2888", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk5MzM2MA==", "url": "https://github.com/jenkinsci/jenkins/pull/4531#discussion_r416993360", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        new Permission[] { EXTENDED_READ, CONFIGURE };\n          \n          \n            \n                        new Permission[] { EXTENDED_READ, CONNECT };", "author": "daniel-beck", "createdAt": "2020-04-28T23:55:21Z", "path": "core/src/main/java/hudson/model/Computer.java", "diffHunk": "@@ -1804,6 +1804,14 @@ public long getWhen() {\n     public static final Permission CONNECT = new Permission(PERMISSIONS,\"Connect\", Messages._Computer_ConnectPermission_Description(), DISCONNECT, PermissionScope.COMPUTER);\n     public static final Permission BUILD = new Permission(PERMISSIONS, \"Build\", Messages._Computer_BuildPermission_Description(),  Permission.WRITE, PermissionScope.COMPUTER);\n \n+    @Restricted(NoExternalUse.class) // called by jelly\n+    public static final Permission[] EXTENDED_READ_AND_CONFIGURE =\n+            new Permission[] { EXTENDED_READ, CONFIGURE };\n+\n+    @Restricted(NoExternalUse.class) // called by jelly\n+    public static final Permission[] EXTENDED_READ_AND_CONNECT =\n+            new Permission[] { EXTENDED_READ, CONFIGURE };", "originalCommit": "393ad7f6cb8050c70f4793ba194e909fb07d2888", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "bb85534ac19eb176dbd03f4814f7ad1fc8ca1372", "url": "https://github.com/jenkinsci/jenkins/commit/bb85534ac19eb176dbd03f4814f7ad1fc8ca1372", "message": "Access controlled simplification", "committedDate": "2020-04-29T07:49:10Z", "type": "commit"}, {"oid": "c074b104f8ee45d7a3c7a6d0e9fe3d066fbcc387", "url": "https://github.com/jenkinsci/jenkins/commit/c074b104f8ee45d7a3c7a6d0e9fe3d066fbcc387", "message": "Fix typoes  / simplify code", "committedDate": "2020-04-29T08:09:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA5Mzg5NA==", "url": "https://github.com/jenkinsci/jenkins/pull/4531#discussion_r419093894", "bodyText": "This behavior is shitty and broken, but if we're going to address it in #hasPermission, we can also fix up this.", "author": "daniel-beck", "createdAt": "2020-05-03T12:04:40Z", "path": "core/src/main/java/hudson/Functions.java", "diffHunk": "@@ -1156,6 +1157,43 @@ public static String getFooterURL() {\n                 Jenkins.get().hasPermission(d.getRequiredGlobalConfigPagePermission()) || Jenkins.get().hasPermission(Jenkins.SYSTEM_READ)));\n     }\n \n+    /**\n+     * Checks if the current security principal has one of the supplied permissions.\n+     *\n+     * @since TODO\n+     */\n+    public static boolean hasAnyPermission(AccessControlled ac, Permission[] permissions) {\n+        if (permissions == null || permissions.length == 0) {\n+            return true;", "originalCommit": "c074b104f8ee45d7a3c7a6d0e9fe3d066fbcc387", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e22c9ce0083d7e7dd01510d3e3736f456213af5a", "url": "https://github.com/jenkinsci/jenkins/commit/e22c9ce0083d7e7dd01510d3e3736f456213af5a", "message": "Simplify task.jelly", "committedDate": "2020-05-03T14:18:20Z", "type": "commit"}, {"oid": "f1962ae6c320ca462227d69b6990ed53e8e1b2ae", "url": "https://github.com/jenkinsci/jenkins/commit/f1962ae6c320ca462227d69b6990ed53e8e1b2ae", "message": "Allow filtering system info extensions", "committedDate": "2020-05-03T14:22:01Z", "type": "commit"}, {"oid": "6a17aec26ae26daa547b66543e119ea33405bee0", "url": "https://github.com/jenkinsci/jenkins/commit/6a17aec26ae26daa547b66543e119ea33405bee0", "message": "Show link that should be present", "committedDate": "2020-05-03T14:31:56Z", "type": "commit"}, {"oid": "244e4674b19f6dee895a4019a78f09ef8a604a91", "url": "https://github.com/jenkinsci/jenkins/commit/244e4674b19f6dee895a4019a78f09ef8a604a91", "message": "Adjust MasterComputer access", "committedDate": "2020-05-03T14:42:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTExNTkzNw==", "url": "https://github.com/jenkinsci/jenkins/pull/4531#discussion_r419115937", "bodyText": "This approach looks reasonable. \ud83d\udc4d", "author": "daniel-beck", "createdAt": "2020-05-03T15:03:37Z", "path": "core/src/main/java/jenkins/slaves/systemInfo/SlaveSystemInfo.java", "diffHunk": "@@ -24,4 +27,14 @@\n     public static ExtensionList<SlaveSystemInfo> all() {\n         return ExtensionList.lookup(SlaveSystemInfo.class);\n     }\n+\n+    /**\n+     * Returns the permission required for user to see this system info extension on the \"System Information\" page for the Agent\n+     *\n+     *\n+     * @return the permission required for the extension to be shown on \"System Information\".\n+     */\n+    public Permission getRequiredPermission() {\n+        return Computer.CONNECT;", "originalCommit": "f1962ae6c320ca462227d69b6990ed53e8e1b2ae", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTExNjE0Nw==", "url": "https://github.com/jenkinsci/jenkins/pull/4531#discussion_r419116147", "bodyText": "I would like to see more than the bare minimum of Javadoc here, see e.g. \n  \n    \n      jenkins/core/src/main/java/hudson/model/AdministrativeMonitor.java\n    \n    \n        Lines 170 to 185\n      in\n      7b654b2\n    \n    \n    \n    \n\n        \n          \n               /** \n        \n\n        \n          \n                * Required permission to view this admin monitor. \n        \n\n        \n          \n                * By default {@link Jenkins#ADMINISTER}, but {@link Jenkins#SYSTEM_READ} is also supported. \n        \n\n        \n          \n                * <p> \n        \n\n        \n          \n                *     Changing this permission check to return {@link Jenkins#SYSTEM_READ} will make the active \n        \n\n        \n          \n                *     administrative monitor appear on {@code manage.jelly} and on the globally visible \n        \n\n        \n          \n                *     {@link jenkins.management.AdministrativeMonitorsDecorator} to users without Administer permission. \n        \n\n        \n          \n                *     {@link #doDisable(StaplerRequest, StaplerResponse)} will still always require Administer permission. \n        \n\n        \n          \n                * </p> \n        \n\n        \n          \n                * <p> \n        \n\n        \n          \n                *     Implementers need to ensure that {@code doAct} and other web methods perform necessary permission checks: \n        \n\n        \n          \n                *     Users with System Read permissions are expected to be limited to read-only access. \n        \n\n        \n          \n                *     Form UI elements that change system state, e.g. toggling a feature on or off, need to be hidden from users \n        \n\n        \n          \n                *     lacking Administer permission. \n        \n\n        \n          \n                * </p> \n        \n\n        \n          \n                */ \n        \n    \n  \n\n for comparison. Of course, this is a far simpler extension point, but at least supported (useful) values would make sense, and what the default is.", "author": "daniel-beck", "createdAt": "2020-05-03T15:05:09Z", "path": "core/src/main/java/jenkins/slaves/systemInfo/SlaveSystemInfo.java", "diffHunk": "@@ -24,4 +27,14 @@\n     public static ExtensionList<SlaveSystemInfo> all() {\n         return ExtensionList.lookup(SlaveSystemInfo.class);\n     }\n+\n+    /**\n+     * Returns the permission required for user to see this system info extension on the \"System Information\" page for the Agent", "originalCommit": "f1962ae6c320ca462227d69b6990ed53e8e1b2ae", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "df660ffe250b5e6d5bc29f92c34bbd3c76817aee", "url": "https://github.com/jenkinsci/jenkins/commit/df660ffe250b5e6d5bc29f92c34bbd3c76817aee", "message": "Adjust javadoc", "committedDate": "2020-05-03T15:23:18Z", "type": "commit"}, {"oid": "37fc83bbd9b38204759ee032f5d47279f8925dbb", "url": "https://github.com/jenkinsci/jenkins/commit/37fc83bbd9b38204759ee032f5d47279f8925dbb", "message": "Adjust MasterComputer#configure", "committedDate": "2020-05-03T15:37:55Z", "type": "commit"}, {"oid": "221ed0f30c0d8a956a4c09d03091a1d2c97da340", "url": "https://github.com/jenkinsci/jenkins/commit/221ed0f30c0d8a956a4c09d03091a1d2c97da340", "message": "Merge branch 'master' into systemRead-agents", "committedDate": "2020-05-08T08:02:30Z", "type": "commit"}, {"oid": "7146b7ac40c9ba1974f41e8029215419e496ac81", "url": "https://github.com/jenkinsci/jenkins/commit/7146b7ac40c9ba1974f41e8029215419e496ac81", "message": "Change links when read only access", "committedDate": "2020-05-08T10:04:23Z", "type": "commit"}, {"oid": "86de15b24ec3cee9af607108ed4f7a65ba8692e5", "url": "https://github.com/jenkinsci/jenkins/commit/86de15b24ec3cee9af607108ed4f7a65ba8692e5", "message": "Use it instead of app", "committedDate": "2020-05-08T10:23:38Z", "type": "commit"}, {"oid": "06d8455d3311030f7bc94dc2829be37e112ab3c9", "url": "https://github.com/jenkinsci/jenkins/commit/06d8455d3311030f7bc94dc2829be37e112ab3c9", "message": "Update core/src/main/resources/hudson/model/Computer/configure.jelly\n\nCo-authored-by: Daniel Beck <1831569+daniel-beck@users.noreply.github.com>", "committedDate": "2020-05-08T16:30:43Z", "type": "commit"}, {"oid": "c0783af2c52420bb40440ac263b493f0248e81ef", "url": "https://github.com/jenkinsci/jenkins/commit/c0783af2c52420bb40440ac263b493f0248e81ef", "message": "Merge branch 'master' into systemRead-agents", "committedDate": "2020-05-11T20:09:50Z", "type": "commit"}, {"oid": "47e31f514cab14e314f6ab7f404de8ef9dd659c8", "url": "https://github.com/jenkinsci/jenkins/commit/47e31f514cab14e314f6ab7f404de8ef9dd659c8", "message": "Merge branch 'systemRead-agents' of github.com:timja/jenkins into systemRead-agents", "committedDate": "2020-05-11T20:10:06Z", "type": "commit"}, {"oid": "31c35d6ba6999e9ea316fff3222b405c96e5ac47", "url": "https://github.com/jenkinsci/jenkins/commit/31c35d6ba6999e9ea316fff3222b405c96e5ac47", "message": "Code simplification", "committedDate": "2020-05-11T20:31:55Z", "type": "commit"}, {"oid": "bbe611c893aaef0a05ae2bb869a92a61f372e59e", "url": "https://github.com/jenkinsci/jenkins/commit/bbe611c893aaef0a05ae2bb869a92a61f372e59e", "message": "Inline jelly text customisation", "committedDate": "2020-05-19T15:07:06Z", "type": "commit"}, {"oid": "37c712bb218162e9955a70ca86a3a6318a4af194", "url": "https://github.com/jenkinsci/jenkins/commit/37c712bb218162e9955a70ca86a3a6318a4af194", "message": "Allow system read to see cloud move blurb", "committedDate": "2020-05-19T15:30:33Z", "type": "commit"}, {"oid": "1beda157bb46ea0f877d7436fe5d403594dfceb8", "url": "https://github.com/jenkinsci/jenkins/commit/1beda157bb46ea0f877d7436fe5d403594dfceb8", "message": "Tooltip based on permission", "committedDate": "2020-05-19T15:50:27Z", "type": "commit"}]}