{"pr_number": 5094, "pr_title": "Issue #5088 Review ContextHandler locking", "pr_createdAt": "2020-07-29T07:52:14Z", "pr_url": "https://github.com/eclipse/jetty.project/pull/5094", "timeline": [{"oid": "36b2a4bbc9e628185747d32c4044067bb2b15419", "url": "https://github.com/eclipse/jetty.project/commit/36b2a4bbc9e628185747d32c4044067bb2b15419", "message": "Issue #5088 Review ContextHandler locking\n\nThe locking was primarily as a memory guard for the availability status, which was already volatile.\nHave instead using an AtomicReference with a simple state machine layered on top of start/stop lifecycle.\nThere was also protection for AttributesMap, which is no longer needed as AttributesMap is now concurrent.", "committedDate": "2020-07-29T07:47:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjEwODQxOQ==", "url": "https://github.com/eclipse/jetty.project/pull/5094#discussion_r462108419", "bodyText": "oops this is an unrelated change that accidentally slipped in.\nThe uri.getDecodedPath() method  does exactly URIUtil.decodePath(encoded), but caches the results so they can be reused if needed again.", "author": "gregw", "createdAt": "2020-07-29T07:54:04Z", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/Request.java", "diffHunk": "@@ -1805,7 +1805,7 @@ public void setMetaData(org.eclipse.jetty.http.MetaData.Request request)\n         }\n         else if (encoded.startsWith(\"/\"))\n         {\n-            path = (encoded.length() == 1) ? \"/\" : URIUtil.canonicalPath(URIUtil.decodePath(encoded));\n+            path = (encoded.length() == 1) ? \"/\" : URIUtil.canonicalPath(uri.getDecodedPath());", "originalCommit": "36b2a4bbc9e628185747d32c4044067bb2b15419", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjEwODIzOA==", "url": "https://github.com/eclipse/jetty.project/pull/5094#discussion_r462108238", "bodyText": "strictly speaking this has nothing to do with contexthandler locking.", "author": "janbartel", "createdAt": "2020-07-29T07:53:48Z", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/Request.java", "diffHunk": "@@ -1805,7 +1805,7 @@ public void setMetaData(org.eclipse.jetty.http.MetaData.Request request)\n         }\n         else if (encoded.startsWith(\"/\"))\n         {\n-            path = (encoded.length() == 1) ? \"/\" : URIUtil.canonicalPath(URIUtil.decodePath(encoded));", "originalCommit": "36b2a4bbc9e628185747d32c4044067bb2b15419", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjEyNzUwNQ==", "url": "https://github.com/eclipse/jetty.project/pull/5094#discussion_r462127505", "bodyText": "sorry, but it is little :)", "author": "gregw", "createdAt": "2020-07-29T08:26:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjEwODIzOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjExMDQ2Mg==", "url": "https://github.com/eclipse/jetty.project/pull/5094#discussion_r462110462", "bodyText": "If UNAVAILABLE, should the state go to SHUTDOWN?", "author": "janbartel", "createdAt": "2020-07-29T07:57:32Z", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/handler/ContextHandler.java", "diffHunk": "@@ -777,7 +778,23 @@ public boolean isShutdown()\n     @Override\n     public Future<Void> shutdown()\n     {\n-        _availability = isRunning() ? Availability.SHUTDOWN : Availability.UNAVAILABLE;\n+        while (true)\n+        {\n+            Availability availability = _availability.get();\n+            switch (availability)\n+            {\n+                case STOPPED:\n+                    return new FutureCallback(new IllegalStateException(getState()));\n+                case STARTING:\n+                case AVAILABLE:\n+                    if (!_availability.compareAndSet(availability, Availability.SHUTDOWN))\n+                        continue;", "originalCommit": "36b2a4bbc9e628185747d32c4044067bb2b15419", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjExMTY2OA==", "url": "https://github.com/eclipse/jetty.project/pull/5094#discussion_r462111668", "bodyText": "Maybe should throw an ISE if you try to set availability whilst shutdown or stopped?", "author": "janbartel", "createdAt": "2020-07-29T07:59:38Z", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/handler/ContextHandler.java", "diffHunk": "@@ -796,12 +813,29 @@ public boolean isAvailable()\n      */\n     public void setAvailable(boolean available)\n     {\n-        synchronized (this)\n+        // Only supported state transitions are:\n+        //   UNAVAILABLE --true---> AVAILABLE\n+        //   STARTING -----false--> UNAVAILABLE\n+        //   AVAILABLE ----false--> UNAVAILABLE\n+        if (available)\n+            _availability.compareAndSet(Availability.UNAVAILABLE, Availability.AVAILABLE);\n+        else\n         {\n-            if (available && isRunning())\n-                _availability = Availability.AVAILABLE;\n-            else if (!available || !isRunning())\n-                _availability = Availability.UNAVAILABLE;\n+            while (true)\n+            {\n+                Availability availability = _availability.get();\n+                switch (availability)\n+                {\n+                    case STARTING:\n+                    case AVAILABLE:\n+                        if (!_availability.compareAndSet(availability, Availability.UNAVAILABLE))\n+                            continue;\n+                        break;\n+                    default:", "originalCommit": "36b2a4bbc9e628185747d32c4044067bb2b15419", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjEzMDMzOQ==", "url": "https://github.com/eclipse/jetty.project/pull/5094#discussion_r462130339", "bodyText": "I think perhaps only if trying to set available==true, as all other states are equivalent to available==false", "author": "gregw", "createdAt": "2020-07-29T08:30:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjExMTY2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjExNDI2Mg==", "url": "https://github.com/eclipse/jetty.project/pull/5094#discussion_r462114262", "bodyText": "Can we have a comment about the meanings of the different states, particularly UNAVAILABLE vs STOPPED, which is a new state.", "author": "janbartel", "createdAt": "2020-07-29T08:04:14Z", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/handler/ContextHandler.java", "diffHunk": "@@ -230,10 +231,10 @@ public static void setServerInfo(String serverInfo)\n \n     public enum Availability\n     {\n-        UNAVAILABLE, STARTING, AVAILABLE, SHUTDOWN,\n+        STOPPED, STARTING, AVAILABLE, UNAVAILABLE, SHUTDOWN,", "originalCommit": "36b2a4bbc9e628185747d32c4044067bb2b15419", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjExNjE3Mg==", "url": "https://github.com/eclipse/jetty.project/pull/5094#discussion_r462116172", "bodyText": "Need an explanation of this change as on the face of it, it is the exact opposite of the original intent.", "author": "janbartel", "createdAt": "2020-07-29T08:07:40Z", "path": "jetty-webapp/src/main/java/org/eclipse/jetty/webapp/WebAppContext.java", "diffHunk": "@@ -1434,7 +1434,7 @@ protected void stopContext() throws Exception\n                 setClassLoader(null);\n             }\n \n-            setAvailable(true);", "originalCommit": "36b2a4bbc9e628185747d32c4044067bb2b15419", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjE1MDYyNA==", "url": "https://github.com/eclipse/jetty.project/pull/5094#discussion_r462150624", "bodyText": "I can't really explain.  It looks to me that it was just plain wrong, but didn't matter because we were stopping already.\nI think it actually dates from when availability was just in the webapp and it had to clear unavailable status   This is no longer required, so I will try without anything here.", "author": "gregw", "createdAt": "2020-07-29T09:04:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjExNjE3Mg=="}], "type": "inlineReview"}, {"oid": "1d8a35cdc8fc7ab6287d269b66873ba99a3d090b", "url": "https://github.com/eclipse/jetty.project/commit/1d8a35cdc8fc7ab6287d269b66873ba99a3d090b", "message": "Issue #5088\n\nupdates from review", "committedDate": "2020-07-29T09:05:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjIxMjY3NA==", "url": "https://github.com/eclipse/jetty.project/pull/5094#discussion_r462212674", "bodyText": "This is an unrelated change.", "author": "joakime", "createdAt": "2020-07-29T10:55:01Z", "path": "jetty-util/src/test/java/org/eclipse/jetty/util/URIUtilCanonicalPathTest.java", "diffHunk": "@@ -114,6 +114,13 @@\n                 // paths with encoded segments should remain encoded\n                 // canonicalPath() is not responsible for decoding characters\n                 {\"%2e%2e/\", \"%2e%2e/\"},\n+                {\"/%2e%2e/\", \"/%2e%2e/\"},\n+\n+                // paths with parameters are not elided\n+                // canonicalPath() is not responsible for decoding characters\n+                {\"/foo/.;/bar\", \"/foo/.;/bar\"},\n+                {\"/foo/..;/bar\", \"/foo/..;/bar\"},\n+                {\"/foo/..;/..;/bar\", \"/foo/..;/..;/bar\"},", "originalCommit": "1d8a35cdc8fc7ab6287d269b66873ba99a3d090b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjIzODAyMg==", "url": "https://github.com/eclipse/jetty.project/pull/5094#discussion_r462238022", "bodyText": "Yes, see note explaining it above.", "author": "gregw", "createdAt": "2020-07-29T11:47:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjIxMjY3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjIzODk3MQ==", "url": "https://github.com/eclipse/jetty.project/pull/5094#discussion_r462238971", "bodyText": "Oh no it's another unrelated change!   Double ooops", "author": "gregw", "createdAt": "2020-07-29T11:49:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjIxMjY3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI5NTYxOQ==", "url": "https://github.com/eclipse/jetty.project/pull/5094#discussion_r462295619", "bodyText": "These are useful and good changes.\nJust would have liked to see them in a different commit explaining why they were made.\nRight now they seem to be related to the change for commit 36b2a4b (Issue #5088 Review ContextHandler Locking), which will be super confusing in the future.", "author": "joakime", "createdAt": "2020-07-29T13:25:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjIxMjY3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ1MTU4Mg==", "url": "https://github.com/eclipse/jetty.project/pull/5094#discussion_r464451582", "bodyText": "yep - my bad!", "author": "gregw", "createdAt": "2020-08-03T14:31:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjIxMjY3NA=="}], "type": "inlineReview"}, {"oid": "02b8e710a5e54d259e335933d101a23810f0f003", "url": "https://github.com/eclipse/jetty.project/commit/02b8e710a5e54d259e335933d101a23810f0f003", "message": "Issue #5088\n\nupdates from review (better this time)", "committedDate": "2020-07-30T14:57:58Z", "type": "commit"}]}