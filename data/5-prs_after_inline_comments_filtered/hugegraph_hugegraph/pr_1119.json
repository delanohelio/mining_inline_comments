{"pr_number": 1119, "pr_title": "Update cache from raft StateMachine", "pr_createdAt": "2020-07-28T12:51:03Z", "pr_url": "https://github.com/hugegraph/hugegraph/pull/1119", "timeline": [{"oid": "2312d93677e8982cf625129df139c7373e822ef8", "url": "https://github.com/hugegraph/hugegraph/commit/2312d93677e8982cf625129df139c7373e822ef8", "message": "Update cache from raft StateMachine\n\nChange-Id: I7b57ed687a9f12c00a6561f0c1590c27247d47c1", "committedDate": "2020-07-28T14:02:47Z", "type": "commit"}, {"oid": "2312d93677e8982cf625129df139c7373e822ef8", "url": "https://github.com/hugegraph/hugegraph/commit/2312d93677e8982cf625129df139c7373e822ef8", "message": "Update cache from raft StateMachine\n\nChange-Id: I7b57ed687a9f12c00a6561f0c1590c27247d47c1", "committedDate": "2020-07-28T14:02:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU1OTY5Ng==", "url": "https://github.com/hugegraph/hugegraph/pull/1119#discussion_r461559696", "bodyText": "improve", "author": "javeme", "createdAt": "2020-07-28T13:00:09Z", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/StandardHugeGraph.java", "diffHunk": "@@ -366,7 +367,15 @@ private GraphTransaction graphTransaction() {\n     }\n \n     private BackendStoreProvider loadStoreProvider() {\n-        return BackendProviderFactory.open(this.configuration);\n+        BackendStoreProvider provider;\n+        provider = BackendProviderFactory.open(this.configuration);\n+        if (provider instanceof RaftBackendStoreProvider) {\n+            RaftBackendStoreProvider raftProvider =\n+                    (RaftBackendStoreProvider) provider;\n+            raftProvider.injectEventHub(this.params.schemaEventHub(),\n+                                        this.params.graphEventHub());\n+        }", "originalCommit": "1dbaffe86b5b8d975d0dd47870116cce74190aea", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYwOTk5Mg==", "url": "https://github.com/hugegraph/hugegraph/pull/1119#discussion_r461609992", "bodyText": "set protected", "author": "javeme", "createdAt": "2020-07-28T14:09:59Z", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftNode.java", "diffHunk": "@@ -199,7 +138,7 @@ public Object submitAndWait(StoreCommand command, StoreClosure closure) {\n         }\n     }\n \n-    private void waitLeaderElected() {\n+    public void waitLeaderElected() {", "originalCommit": "2312d93677e8982cf625129df139c7373e822ef8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYxMTU5MA==", "url": "https://github.com/hugegraph/hugegraph/pull/1119#discussion_r461611590", "bodyText": "rename", "author": "javeme", "createdAt": "2020-07-28T14:12:06Z", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftSharedContext.java", "diffHunk": "@@ -95,6 +105,82 @@ public void addNode(String group, BackendStore store) {\n         }\n     }\n \n+    public NodeOptions nodeOptions(String storePath) throws IOException {\n+        HugeConfig config = this.config();\n+        PeerId selfId = new PeerId();\n+        selfId.parse(config.get(CoreOptions.RAFT_ENDPOINT));\n+\n+        NodeOptions nodeOptions = new NodeOptions();\n+        int electionTimeout = config.get(CoreOptions.RAFT_ELECTION_TIMEOUT);\n+        nodeOptions.setElectionTimeoutMs(electionTimeout);\n+        nodeOptions.setDisableCli(false);\n+\n+        int snapshotInterval = config.get(CoreOptions.RAFT_SNAPSHOT_INTERVAL);\n+        nodeOptions.setSnapshotIntervalSecs(snapshotInterval);\n+\n+        Configuration initConf = new Configuration();\n+        String initConfStr = config.get(CoreOptions.RAFT_GROUP_PEERS);", "originalCommit": "2312d93677e8982cf625129df139c7373e822ef8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYxMjM4NQ==", "url": "https://github.com/hugegraph/hugegraph/pull/1119#discussion_r461612385", "bodyText": "!type.isSchema()", "author": "javeme", "createdAt": "2020-07-28T14:12:48Z", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/StoreStateMachine.java", "diffHunk": "@@ -92,6 +97,24 @@ private void registerCommands() {\n         });\n     }\n \n+    private void updateCacheIfNeeded(BackendMutation mutation) {\n+        // Only follower need to update cache from store to tx\n+        if (this.isLeader()) {\n+            return;\n+        }\n+        for (HugeType type : mutation.types()) {\n+            if (!type.isGraph() && type.isSchema()) {", "originalCommit": "2312d93677e8982cf625129df139c7373e822ef8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYxNTc2NQ==", "url": "https://github.com/hugegraph/hugegraph/pull/1119#discussion_r461615765", "bodyText": "remove the define", "author": "javeme", "createdAt": "2020-07-28T14:16:00Z", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/StoreStateMachine.java", "diffHunk": "@@ -92,6 +97,24 @@ private void registerCommands() {\n         });\n     }\n \n+    private void updateCacheIfNeeded(BackendMutation mutation) {\n+        // Only follower need to update cache from store to tx\n+        if (this.isLeader()) {\n+            return;\n+        }\n+        for (HugeType type : mutation.types()) {\n+            if (!type.isGraph() && type.isSchema()) {\n+                continue;\n+            }\n+            for (java.util.Iterator<BackendAction> it = mutation.mutation(type);\n+                 it.hasNext();) {\n+                BackendAction item = it.next();\n+                BackendEntry entry = item.entry();", "originalCommit": "2312d93677e8982cf625129df139c7373e822ef8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c21ee0913350c6a781077fb06d93af6604a10423", "url": "https://github.com/hugegraph/hugegraph/commit/c21ee0913350c6a781077fb06d93af6604a10423", "message": "tiny improve\n\nChange-Id: I5233ccef4b15c23ffc3ed386a569127c86609365", "committedDate": "2020-07-28T14:29:41Z", "type": "commit"}, {"oid": "ec54cfac0e510b453d4359a7d68b912e9691bda0", "url": "https://github.com/hugegraph/hugegraph/commit/ec54cfac0e510b453d4359a7d68b912e9691bda0", "message": "bump up pom version\n\nChange-Id: Idb069013fd117e8857dc5b1924e0922f6f31d68f", "committedDate": "2020-07-28T14:32:11Z", "type": "commit"}, {"oid": "5e6cc424da564e690eed335eceeffd13234db7a5", "url": "https://github.com/hugegraph/hugegraph/commit/5e6cc424da564e690eed335eceeffd13234db7a5", "message": "imrove schema and edge cache handle logic\n\nChange-Id: I1e4140fb695e65ca2eb4285c6c02705ac518b2c0", "committedDate": "2020-07-29T03:46:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjAzMjIyMQ==", "url": "https://github.com/hugegraph/hugegraph/pull/1119#discussion_r462032221", "bodyText": "clear edgesCache first", "author": "javeme", "createdAt": "2020-07-29T04:34:22Z", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/cache/CachedGraphTransaction.java", "diffHunk": "@@ -135,14 +135,16 @@ private void listenChanges() {\n         this.cacheEventListener = event -> {\n             LOG.debug(\"Graph {} received graph cache event: {}\",\n                       this.graph(), event);\n-            event.checkArgs(String.class, Id.class);\n+            event.checkArgs(String.class, HugeType.class, Id.class);\n             Object[] args = event.args();\n             if (\"invalid\".equals(args[0])) {\n-                Id id = (Id) args[1];\n-                if (this.verticesCache.get(id) != null) {\n+                HugeType type = (HugeType) args[1];\n+                Id id = (Id) args[2];", "originalCommit": "5e6cc424da564e690eed335eceeffd13234db7a5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjAzMjcxOQ==", "url": "https://github.com/hugegraph/hugegraph/pull/1119#discussion_r462032719", "bodyText": "QueryId is just for query, id of edge-update don't need to wrap QueryId", "author": "javeme", "createdAt": "2020-07-29T04:36:17Z", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/cache/CachedGraphTransaction.java", "diffHunk": "@@ -135,14 +135,16 @@ private void listenChanges() {\n         this.cacheEventListener = event -> {\n             LOG.debug(\"Graph {} received graph cache event: {}\",\n                       this.graph(), event);\n-            event.checkArgs(String.class, Id.class);\n+            event.checkArgs(String.class, HugeType.class, Id.class);\n             Object[] args = event.args();\n             if (\"invalid\".equals(args[0])) {\n-                Id id = (Id) args[1];\n-                if (this.verticesCache.get(id) != null) {\n+                HugeType type = (HugeType) args[1];\n+                Id id = (Id) args[2];\n+                if (type.isVertex()) {\n                     // Invalidate vertex cache\n                     this.verticesCache.invalidate(id);\n-                } else if (this.edgesCache.get(id) != null) {\n+                } else if (type.isEdge()) {\n+                    id = new QueryId(new IdQuery(type, id));", "originalCommit": "5e6cc424da564e690eed335eceeffd13234db7a5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8643ac2170d171c15d220b2b5806e3fc129e7d73", "url": "https://github.com/hugegraph/hugegraph/commit/8643ac2170d171c15d220b2b5806e3fc129e7d73", "message": "clear edge cache\n\nChange-Id: I5dc13b3b612accfa9af6c18f23ffcd34d4544745", "committedDate": "2020-07-29T04:46:15Z", "type": "commit"}, {"oid": "4b9ad8917e385127768e489fa735d2b6e864f112", "url": "https://github.com/hugegraph/hugegraph/commit/4b9ad8917e385127768e489fa735d2b6e864f112", "message": "tiny improve on test\n\nChange-Id: I743de35eb35409ebf4ff2507564cfe2c82c79fe9", "committedDate": "2020-07-29T09:11:12Z", "type": "forcePushed"}, {"oid": "85c71665c9a60cfd2ed00c556055d0952f4a4631", "url": "https://github.com/hugegraph/hugegraph/commit/85c71665c9a60cfd2ed00c556055d0952f4a4631", "message": "tiny improve on test\n\nChange-Id: I743de35eb35409ebf4ff2507564cfe2c82c79fe9", "committedDate": "2020-07-29T09:28:18Z", "type": "commit"}, {"oid": "85c71665c9a60cfd2ed00c556055d0952f4a4631", "url": "https://github.com/hugegraph/hugegraph/commit/85c71665c9a60cfd2ed00c556055d0952f4a4631", "message": "tiny improve on test\n\nChange-Id: I743de35eb35409ebf4ff2507564cfe2c82c79fe9", "committedDate": "2020-07-29T09:28:18Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjE4NTE5MQ==", "url": "https://github.com/hugegraph/hugegraph/pull/1119#discussion_r462185191", "bodyText": "add get", "author": "javeme", "createdAt": "2020-07-29T10:02:39Z", "path": "hugegraph-test/src/main/java/com/baidu/hugegraph/core/EdgeLabelCoreTest.java", "diffHunk": "@@ -1215,7 +1215,7 @@ public void testListEdgeLabels() {\n         Assert.assertTrue(edgeLabels.contains(write));\n \n         // clear cache\n-        params().schemaEventHub().call(Events.CACHE, \"clear\", null);\n+        params().schemaEventHub().call(Events.CACHE, \"clear\", null, null);", "originalCommit": "85c71665c9a60cfd2ed00c556055d0952f4a4631", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjE4NTI4NQ==", "url": "https://github.com/hugegraph/hugegraph/pull/1119#discussion_r462185285", "bodyText": "ditto", "author": "javeme", "createdAt": "2020-07-29T10:02:47Z", "path": "hugegraph-test/src/main/java/com/baidu/hugegraph/core/VertexLabelCoreTest.java", "diffHunk": "@@ -1097,7 +1097,7 @@ public void testListVertexLabels() {\n         Assert.assertTrue(vertexLabels.contains(book));\n \n         // clear cache\n-        params().schemaEventHub().call(Events.CACHE, \"clear\", null);\n+        params().schemaEventHub().call(Events.CACHE, \"clear\", null, null);", "originalCommit": "85c71665c9a60cfd2ed00c556055d0952f4a4631", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjE4NjQ2OA==", "url": "https://github.com/hugegraph/hugegraph/pull/1119#discussion_r462186468", "bodyText": "use call instead of notify", "author": "Linary", "createdAt": "2020-07-29T10:04:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjE4NTI4NQ=="}], "type": "inlineReview"}]}