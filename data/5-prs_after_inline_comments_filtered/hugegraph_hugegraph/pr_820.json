{"pr_number": 820, "pr_title": "Fix override vertex/edge on some backends", "pr_createdAt": "2020-01-08T13:05:29Z", "pr_url": "https://github.com/hugegraph/hugegraph/pull/820", "timeline": [{"oid": "891d974d44631c5ebb13804fb2907e7648823431", "url": "https://github.com/hugegraph/hugegraph/commit/891d974d44631c5ebb13804fb2907e7648823431", "message": "Fix override vertex/edge on some backends\n\nFix #792\n\nChange-Id: Iad461c6742773bd001a1768f83479e1ab429e272", "committedDate": "2020-01-09T09:45:30Z", "type": "forcePushed"}, {"oid": "4a8f9486c6b2a3e0942c9beb833671a8c313e9ae", "url": "https://github.com/hugegraph/hugegraph/commit/4a8f9486c6b2a3e0942c9beb833671a8c313e9ae", "message": "Fix override vertex/edge on some backends\n\nFix #792\n\nChange-Id: Iad461c6742773bd001a1768f83479e1ab429e272", "committedDate": "2020-01-09T11:29:10Z", "type": "forcePushed"}, {"oid": "ed99f47568e637a8d487e5377306dbb9e1ebbeb8", "url": "https://github.com/hugegraph/hugegraph/commit/ed99f47568e637a8d487e5377306dbb9e1ebbeb8", "message": "Fix override vertex/edge on some backends\n\nFix #792\n\nChange-Id: Iad461c6742773bd001a1768f83479e1ab429e272", "committedDate": "2020-01-09T11:50:38Z", "type": "forcePushed"}, {"oid": "e180cd17e6e4168a187de3a7465835c0fb52d73e", "url": "https://github.com/hugegraph/hugegraph/commit/e180cd17e6e4168a187de3a7465835c0fb52d73e", "message": "Fix override vertex/edge on some backends\n\nFix #792\n\nChange-Id: Iad461c6742773bd001a1768f83479e1ab429e272", "committedDate": "2020-01-09T13:22:40Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTIwNTM3OA==", "url": "https://github.com/hugegraph/hugegraph/pull/820#discussion_r365205378", "bodyText": "don't append VALUE_SPLITOR for the first property", "author": "javeme", "createdAt": "2020-01-10T12:09:50Z", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/serializer/TextSerializer.java", "diffHunk": "@@ -116,6 +116,22 @@ private String formatPropertyValue(HugeProperty<?> prop) {\n         return JsonUtil.toJson(prop.value());\n     }\n \n+    private String formatPropertyName() {\n+        return HugeType.PROPERTY.string();\n+    }\n+\n+    private String formatPropertyValues(HugeVertex vertex) {\n+        StringBuilder sb = new StringBuilder(256 * vertex.getProperties().size());\n+        // Vertex properties\n+        for (HugeProperty<?> property : vertex.getProperties().values()) {\n+            sb.append(VALUE_SPLITOR);", "originalCommit": "e180cd17e6e4168a187de3a7465835c0fb52d73e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTIwNTQ4OA==", "url": "https://github.com/hugegraph/hugegraph/pull/820#discussion_r365205488", "bodyText": "i + 1 may be out of bound", "author": "javeme", "createdAt": "2020-01-10T12:10:13Z", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/serializer/TextSerializer.java", "diffHunk": "@@ -142,6 +158,14 @@ private void parseProperty(String colName, String colValue,\n         }\n     }\n \n+    private void parseProperties(String colValue, HugeVertex vertex) {\n+        String[] valParts = colValue.split(VALUE_SPLITOR);\n+        // Edge properties\n+        for (int i = 1; i < valParts.length; i += 2) {\n+            this.parseProperty(valParts[i], valParts[i + 1], vertex);", "originalCommit": "e180cd17e6e4168a187de3a7465835c0fb52d73e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTIwNTYxNg==", "url": "https://github.com/hugegraph/hugegraph/pull/820#discussion_r365205616", "bodyText": "remove it", "author": "javeme", "createdAt": "2020-01-10T12:10:35Z", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/serializer/TextSerializer.java", "diffHunk": "@@ -244,29 +268,27 @@ public BackendEntry writeVertex(HugeVertex vertex) {\n         }\n \n         // Add all properties of a Vertex\n-        for (HugeProperty<?> prop : vertex.getProperties().values()) {\n-            entry.column(this.formatPropertyName(prop),\n-                         this.formatPropertyValue(prop));\n-        }\n-\n+        entry.column(this.formatPropertyName(),\n+                     this.formatPropertyValues(vertex));\n         return entry;\n     }\n \n     @Override\n     public BackendEntry writeVertexProperty(HugeVertexProperty<?> prop) {\n-        HugeVertex vertex = prop.element();\n-        TextBackendEntry entry = newBackendEntry(vertex);\n-        entry.subId(IdGenerator.of(prop.key()));\n-\n-        // Write label (NOTE: maybe just with edges if label is null)\n-        if (vertex.schemaLabel() != null) {\n-            entry.column(this.formatSyspropName(HugeKeys.LABEL),\n-                         writeId(vertex.schemaLabel().id()));\n-        }\n-\n-        entry.column(this.formatPropertyName(prop),\n-                     this.formatPropertyValue(prop));\n-        return entry;\n+        throw new NotImplementedException(\"Unsupported writeVertexProperty()\");\n+//        HugeVertex vertex = prop.element();\n+//        TextBackendEntry entry = newBackendEntry(vertex);\n+//        entry.subId(IdGenerator.of(prop.key()));\n+//\n+//        // Write label (NOTE: maybe just with edges if label is null)\n+//        if (vertex.schemaLabel() != null) {\n+//            entry.column(this.formatSyspropName(HugeKeys.LABEL),\n+//                         writeId(vertex.schemaLabel().id()));\n+//        }\n+//\n+//        entry.column(this.formatPropertyName(prop),\n+//                     this.formatPropertyValue(prop));\n+//        return entry;", "originalCommit": "e180cd17e6e4168a187de3a7465835c0fb52d73e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTIwNjUzOQ==", "url": "https://github.com/hugegraph/hugegraph/pull/820#discussion_r365206539", "bodyText": "also add BinaryScatterSerializerTest", "author": "javeme", "createdAt": "2020-01-10T12:13:33Z", "path": "hugegraph-test/src/main/java/com/baidu/hugegraph/unit/serializer/BinarySerializerTest.java", "diffHunk": "@@ -30,11 +30,11 @@\n import com.baidu.hugegraph.unit.BaseUnitTest;\n import com.baidu.hugegraph.unit.FakeObjects;\n \n-public class BinaryInlineSerializerTest extends BaseUnitTest {\n+public class BinarySerializerTest extends BaseUnitTest {", "originalCommit": "e180cd17e6e4168a187de3a7465835c0fb52d73e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1ea3ffaeec1b3e81f57050c61cfd03321e5a6eb7", "url": "https://github.com/hugegraph/hugegraph/commit/1ea3ffaeec1b3e81f57050c61cfd03321e5a6eb7", "message": "some improve\n\nChange-Id: I7458be4ad22bcbd178ed25ecd6805b6b4c2c0ada", "committedDate": "2020-01-13T12:29:23Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjEzMzc1Mw==", "url": "https://github.com/hugegraph/hugegraph/pull/820#discussion_r366133753", "bodyText": "update vertex.get()", "author": "javeme", "createdAt": "2020-01-14T03:04:25Z", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/serializer/BinarySerializer.java", "diffHunk": "@@ -367,23 +367,34 @@ public BackendEntry writeVertex(HugeVertex vertex) {\n             return entry;\n         }\n \n+        int propsCount = vertex.getProperties().size();\n+        BytesBuffer buffer = BytesBuffer.allocate(8 + 16 * propsCount);\n+\n         // Write vertex label\n-        entry.column(this.formatLabel(vertex));\n+        buffer.writeId(vertex.schemaLabel().id());\n \n-        // Write all properties of a Vertex\n-        for (HugeProperty<?> prop : vertex.getProperties().values()) {\n-            entry.column(this.formatProperty(prop));\n-        }\n+        // Write all properties of the vertex\n+        this.formatProperties(vertex.getProperties().values(), buffer);", "originalCommit": "1ea3ffaeec1b3e81f57050c61cfd03321e5a6eb7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE5NTY0MQ==", "url": "https://github.com/hugegraph/hugegraph/pull/820#discussion_r370195641", "bodyText": "prefer to add a protected method getById() to super class, and just call super.getById() here, also call it from EdgeTable.queryById().", "author": "javeme", "createdAt": "2020-01-23T15:43:24Z", "path": "hugegraph-rocksdb/src/main/java/com/baidu/hugegraph/backend/store/rocksdb/RocksDBTables.java", "diffHunk": "@@ -120,6 +120,16 @@ public IndexLabel(String database) {\n         public Vertex(String database) {\n             super(database, TABLE);\n         }\n+\n+        @Override\n+        protected BackendColumnIterator queryById(Session session, Id id) {\n+            byte[] value = session.get(this.table(), id.asBytes());\n+            if (value == null) {\n+                return BackendColumnIterator.empty();\n+            }\n+            BackendColumn col = BackendColumn.of(id.asBytes(), value);\n+            return new BackendColumnIteratorWrapper(col);\n+        }", "originalCommit": "79d079a61e939842e05196c16697e88a22a3fb83", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ5MDUzOQ==", "url": "https://github.com/hugegraph/hugegraph/pull/820#discussion_r374490539", "bodyText": "prefer to add a protected method getById() to super class, and just call super.getById() here, also call it from EdgeTable.queryById().", "author": "javeme", "createdAt": "2020-02-04T06:15:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE5NTY0MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzAyMjczNQ==", "url": "https://github.com/hugegraph/hugegraph/pull/820#discussion_r373022735", "bodyText": "diff --git a/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/serializer/BinaryInlineSerializer.java b/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/serializer/BinaryInlineSerializer.java\nindex b94d0608..b2481aa6 100644\n--- a/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/serializer/BinaryInlineSerializer.java\n+++ b/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/serializer/BinaryInlineSerializer.java\n@@ -72,11 +72,13 @@ public class BinaryInlineSerializer extends BinarySerializer {\n \n         // Parse all properties and edges of a Vertex\n         for (BackendColumn col : entry.columns()) {\n-            if (id.edge()) {\n+            // NOTE: the entry id type is vertex even if entry type is edge\n+            if (entry.type().isEdge()) {\n                 // Parse vertex edges\n                 this.parseColumn(col, vertex);\n             } else {\n                 // Parse vertex properties\n+                assert entry.type().isVertex();\n                 assert entry.columnsSize() == 1 : entry.columnsSize();\n                 this.parseVertex(col.value, vertex);\n             }", "author": "javeme", "createdAt": "2020-01-30T15:37:18Z", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/serializer/BinarySerializer.java", "diffHunk": "@@ -393,21 +404,22 @@ public HugeVertex readVertex(HugeGraph graph, BackendEntry bytesEntry) {\n         }\n         BinaryBackendEntry entry = this.convertEntry(bytesEntry);\n \n-        // Parse label\n-        final byte[] VL = this.formatSyspropName(entry.id(), HugeKeys.LABEL);\n-        BackendColumn vl = entry.column(VL);\n-        VertexLabel label = VertexLabel.NONE;\n-        if (vl != null) {\n-            label = graph.vertexLabel(BytesBuffer.wrap(vl.value).readId());\n-        }\n-\n         // Parse id\n         Id id = entry.id().origin();\n-        HugeVertex vertex = new HugeVertex(graph, id, label);\n+        Id vid = id.edge() ? ((EdgeId) id).ownerVertexId() : id;\n+        HugeVertex vertex = new HugeVertex(graph, vid, VertexLabel.NONE);\n \n         // Parse all properties and edges of a Vertex\n         for (BackendColumn col : entry.columns()) {\n-            this.parseColumn(col, vertex);\n+            if (entry.type().isEdge()) {\n+                // NOTE: the id is vertex type even if query edge\n+                // Parse vertex edges\n+                this.parseColumn(col, vertex);\n+            } else {\n+                // Parse vertex properties\n+                assert entry.columnsSize() == 1 : entry.columnsSize();\n+                this.parseVertex(col.value, vertex);\n+            }", "originalCommit": "79d079a61e939842e05196c16697e88a22a3fb83", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA0MDEwMw==", "url": "https://github.com/hugegraph/hugegraph/pull/820#discussion_r373040103", "bodyText": "This bug was introduced from https://github.com/hugegraph/hugegraph/pull/680/files#diff-e46dfe3b041d128cc0a4657fe901a3b7R75", "author": "javeme", "createdAt": "2020-01-30T16:04:53Z", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/serializer/BinarySerializer.java", "diffHunk": "@@ -393,21 +404,22 @@ public HugeVertex readVertex(HugeGraph graph, BackendEntry bytesEntry) {\n         }\n         BinaryBackendEntry entry = this.convertEntry(bytesEntry);\n \n-        // Parse label\n-        final byte[] VL = this.formatSyspropName(entry.id(), HugeKeys.LABEL);\n-        BackendColumn vl = entry.column(VL);\n-        VertexLabel label = VertexLabel.NONE;\n-        if (vl != null) {\n-            label = graph.vertexLabel(BytesBuffer.wrap(vl.value).readId());\n-        }\n-\n         // Parse id\n         Id id = entry.id().origin();\n-        HugeVertex vertex = new HugeVertex(graph, id, label);\n+        Id vid = id.edge() ? ((EdgeId) id).ownerVertexId() : id;\n+        HugeVertex vertex = new HugeVertex(graph, vid, VertexLabel.NONE);\n \n         // Parse all properties and edges of a Vertex\n         for (BackendColumn col : entry.columns()) {\n-            this.parseColumn(col, vertex);\n+            if (entry.type().isEdge()) {\n+                // NOTE: the id is vertex type even if query edge", "originalCommit": "79d079a61e939842e05196c16697e88a22a3fb83", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ4OTI0Ng==", "url": "https://github.com/hugegraph/hugegraph/pull/820#discussion_r374489246", "bodyText": "// NOTE: the entry id type is vertex even if entry type is edge", "author": "javeme", "createdAt": "2020-02-04T06:09:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA0MDEwMw=="}], "type": "inlineReview"}, {"oid": "0c08d929a4c945f9b9dd4321bf0b8d986b78cb0d", "url": "https://github.com/hugegraph/hugegraph/commit/0c08d929a4c945f9b9dd4321bf0b8d986b78cb0d", "message": "Update vertex get and backend version\n\nChange-Id: I16dfd36d8eddedd6ca6abf9199cf32723ad7e268", "committedDate": "2020-02-04T03:57:55Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ4OTEyMA==", "url": "https://github.com/hugegraph/hugegraph/pull/820#discussion_r374489120", "bodyText": "assert entry.type().isVertex();", "author": "javeme", "createdAt": "2020-02-04T06:08:34Z", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/serializer/BinarySerializer.java", "diffHunk": "@@ -393,21 +404,22 @@ public HugeVertex readVertex(HugeGraph graph, BackendEntry bytesEntry) {\n         }\n         BinaryBackendEntry entry = this.convertEntry(bytesEntry);\n \n-        // Parse label\n-        final byte[] VL = this.formatSyspropName(entry.id(), HugeKeys.LABEL);\n-        BackendColumn vl = entry.column(VL);\n-        VertexLabel label = VertexLabel.NONE;\n-        if (vl != null) {\n-            label = graph.vertexLabel(BytesBuffer.wrap(vl.value).readId());\n-        }\n-\n         // Parse id\n         Id id = entry.id().origin();\n-        HugeVertex vertex = new HugeVertex(graph, id, label);\n+        Id vid = id.edge() ? ((EdgeId) id).ownerVertexId() : id;\n+        HugeVertex vertex = new HugeVertex(graph, vid, VertexLabel.NONE);\n \n         // Parse all properties and edges of a Vertex\n         for (BackendColumn col : entry.columns()) {\n-            this.parseColumn(col, vertex);\n+            if (entry.type().isEdge()) {\n+                // NOTE: the id is vertex type even if query edge\n+                // Parse vertex edges\n+                this.parseColumn(col, vertex);\n+            } else {\n+                // Parse vertex properties", "originalCommit": "0c08d929a4c945f9b9dd4321bf0b8d986b78cb0d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ5Mjc3Mg==", "url": "https://github.com/hugegraph/hugegraph/pull/820#discussion_r374492772", "bodyText": "remove the catch after check valParts.length % 2 == 0", "author": "javeme", "createdAt": "2020-02-04T06:25:46Z", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/serializer/TextSerializer.java", "diffHunk": "@@ -142,6 +162,21 @@ private void parseProperty(String colName, String colValue,\n         }\n     }\n \n+    private void parseProperties(String colValue, HugeVertex vertex) {\n+        if (colValue == null || colValue.isEmpty()) {\n+            return;\n+        }\n+        String[] valParts = colValue.split(VALUE_SPLITOR);\n+        // Edge properties\n+        for (int i = 0; i < valParts.length; i += 2) {\n+            try {\n+                this.parseProperty(valParts[i], valParts[i + 1], vertex);\n+            } catch (ArrayIndexOutOfBoundsException e) {", "originalCommit": "0c08d929a4c945f9b9dd4321bf0b8d986b78cb0d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ5MzM1MA==", "url": "https://github.com/hugegraph/hugegraph/pull/820#discussion_r374493350", "bodyText": "E.checkState(valParts.length % 2 == 0)", "author": "javeme", "createdAt": "2020-02-04T06:28:02Z", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/serializer/TextSerializer.java", "diffHunk": "@@ -142,6 +162,21 @@ private void parseProperty(String colName, String colValue,\n         }\n     }\n \n+    private void parseProperties(String colValue, HugeVertex vertex) {\n+        if (colValue == null || colValue.isEmpty()) {\n+            return;\n+        }\n+        String[] valParts = colValue.split(VALUE_SPLITOR);", "originalCommit": "0c08d929a4c945f9b9dd4321bf0b8d986b78cb0d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ5NTAxMw==", "url": "https://github.com/hugegraph/hugegraph/pull/820#discussion_r374495013", "bodyText": "assert i + 1 < valParts.length", "author": "javeme", "createdAt": "2020-02-04T06:35:01Z", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/serializer/TextSerializer.java", "diffHunk": "@@ -142,6 +162,21 @@ private void parseProperty(String colName, String colValue,\n         }\n     }\n \n+    private void parseProperties(String colValue, HugeVertex vertex) {\n+        if (colValue == null || colValue.isEmpty()) {\n+            return;\n+        }\n+        String[] valParts = colValue.split(VALUE_SPLITOR);\n+        // Edge properties\n+        for (int i = 0; i < valParts.length; i += 2) {\n+            try {", "originalCommit": "0c08d929a4c945f9b9dd4321bf0b8d986b78cb0d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ5NTMxNg==", "url": "https://github.com/hugegraph/hugegraph/pull/820#discussion_r374495316", "bodyText": "64 * size is ok", "author": "javeme", "createdAt": "2020-02-04T06:36:09Z", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/serializer/TextSerializer.java", "diffHunk": "@@ -116,6 +116,26 @@ private String formatPropertyValue(HugeProperty<?> prop) {\n         return JsonUtil.toJson(prop.value());\n     }\n \n+    private String formatPropertyName() {\n+        return HugeType.PROPERTY.string();\n+    }\n+\n+    private String formatPropertyValues(HugeVertex vertex) {\n+        int size = vertex.getProperties().size();\n+        StringBuilder sb = new StringBuilder(256 * size);", "originalCommit": "0c08d929a4c945f9b9dd4321bf0b8d986b78cb0d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "40e146c3578a5caa32e546e5b45bb01862ab56d9", "url": "https://github.com/hugegraph/hugegraph/commit/40e146c3578a5caa32e546e5b45bb01862ab56d9", "message": "Fix override vertex/edge on some backends\n\nFix #792\n\nChange-Id: Iad461c6742773bd001a1768f83479e1ab429e272", "committedDate": "2020-02-06T02:40:56Z", "type": "commit"}, {"oid": "5d0f6c774caead6802802f7f165edb4a137cf44c", "url": "https://github.com/hugegraph/hugegraph/commit/5d0f6c774caead6802802f7f165edb4a137cf44c", "message": "some improve\n\nChange-Id: I7458be4ad22bcbd178ed25ecd6805b6b4c2c0ada", "committedDate": "2020-02-06T02:40:56Z", "type": "commit"}, {"oid": "4c7bfbdbe0589e2132e84c317af6a3c6823b5eeb", "url": "https://github.com/hugegraph/hugegraph/commit/4c7bfbdbe0589e2132e84c317af6a3c6823b5eeb", "message": "Update vertex get and backend version\n\nChange-Id: I16dfd36d8eddedd6ca6abf9199cf32723ad7e268", "committedDate": "2020-02-06T02:40:56Z", "type": "commit"}, {"oid": "8b5615e14a7baa845188341ea19636e43aef5f14", "url": "https://github.com/hugegraph/hugegraph/commit/8b5615e14a7baa845188341ea19636e43aef5f14", "message": "some improve\n\nChange-Id: I4c374d557947187f3469d802f8f0d363541fa70a", "committedDate": "2020-02-06T03:28:59Z", "type": "commit"}, {"oid": "8b5615e14a7baa845188341ea19636e43aef5f14", "url": "https://github.com/hugegraph/hugegraph/commit/8b5615e14a7baa845188341ea19636e43aef5f14", "message": "some improve\n\nChange-Id: I4c374d557947187f3469d802f8f0d363541fa70a", "committedDate": "2020-02-06T03:28:59Z", "type": "forcePushed"}]}