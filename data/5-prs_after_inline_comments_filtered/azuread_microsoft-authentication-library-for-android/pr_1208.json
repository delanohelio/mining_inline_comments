{"pr_number": 1208, "pr_title": "Implement support for client_claims in ATs, SHRs", "pr_createdAt": "2020-11-04T02:21:17Z", "pr_url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1208", "timeline": [{"oid": "7d9a45fdb40914637f3bf4194e1ddb5d24300a1a", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/7d9a45fdb40914637f3bf4194e1ddb5d24300a1a", "message": "Stubbing out API", "committedDate": "2020-11-03T21:27:10Z", "type": "commit"}, {"oid": "078173193f966ce1a99903f677de3e14239ed3b2", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/078173193f966ce1a99903f677de3e14239ed3b2", "message": "Stubbing out new UI for accepting client_claims in testapp", "committedDate": "2020-11-03T21:58:35Z", "type": "commit"}, {"oid": "dde92592a65458c4b145182cb72dc816a327bd09", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/dde92592a65458c4b145182cb72dc816a327bd09", "message": "Adding testapp btn to control generateShr", "committedDate": "2020-11-03T22:31:40Z", "type": "commit"}, {"oid": "64f3123bd5e6875515bd07ced1057c8d4021c61a", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/64f3123bd5e6875515bd07ced1057c8d4021c61a", "message": "WIP implementing client_claims", "committedDate": "2020-11-04T00:38:42Z", "type": "commit"}, {"oid": "4b0c169b4507712f7f25799aa2e97b7f00ce84b1", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/4b0c169b4507712f7f25799aa2e97b7f00ce84b1", "message": "Update submodule, wire up testapp controls", "committedDate": "2020-11-04T02:19:43Z", "type": "commit"}, {"oid": "7d31228990002152369b87adead2cf73a1285d02", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/7d31228990002152369b87adead2cf73a1285d02", "message": "Fix POSIX warning", "committedDate": "2020-11-04T02:24:26Z", "type": "commit"}, {"oid": "f418e513d098c6caf5e4c907a15be4d22ae6240b", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/f418e513d098c6caf5e4c907a15be4d22ae6240b", "message": "Adds javadoc", "committedDate": "2020-11-04T02:26:32Z", "type": "commit"}, {"oid": "a5d1c15bbe8caead7c96e3a525bfd6f632b27a0b", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/a5d1c15bbe8caead7c96e3a525bfd6f632b27a0b", "message": "Update submodule to latest", "committedDate": "2020-11-04T02:42:33Z", "type": "commit"}, {"oid": "9d2d431eea3bfdc3927c7dfc5b66566fe061a62e", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/9d2d431eea3bfdc3927c7dfc5b66566fe061a62e", "message": "Stubbing out more impl", "committedDate": "2020-11-05T00:23:52Z", "type": "commit"}, {"oid": "529c3688f47002d9da82cedeeab2d7a079c113af", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/529c3688f47002d9da82cedeeab2d7a079c113af", "message": "Update submodule to latest", "committedDate": "2020-11-05T01:15:15Z", "type": "commit"}, {"oid": "8d81dd2c19d86fd486b852f06a993a9db16941b8", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/8d81dd2c19d86fd486b852f06a993a9db16941b8", "message": "Update submodule to latest", "committedDate": "2020-11-05T01:46:33Z", "type": "commit"}, {"oid": "439acce047a81f655cd67367a2e7de3024ebbfc2", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/439acce047a81f655cd67367a2e7de3024ebbfc2", "message": "Correcting error message", "committedDate": "2020-11-05T02:21:53Z", "type": "commit"}, {"oid": "2b47b75e643cf9f41880b53ad515a8129927de04", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/2b47b75e643cf9f41880b53ad515a8129927de04", "message": "Update submodule to latest", "committedDate": "2020-11-05T23:11:18Z", "type": "commit"}, {"oid": "abd27b93a5caba2a668bdf55c79a1c5ca3b82372", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/abd27b93a5caba2a668bdf55c79a1c5ca3b82372", "message": "Update submodule to latest", "committedDate": "2020-11-06T00:09:35Z", "type": "commit"}, {"oid": "a784e5a0c91a60b51b90c9d1b5f3189e0605f353", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/a784e5a0c91a60b51b90c9d1b5f3189e0605f353", "message": "Bugfixing", "committedDate": "2020-11-06T01:39:29Z", "type": "commit"}, {"oid": "3c4e69e3f09c7c4c440d7a47e7c5f221b098cdbb", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/3c4e69e3f09c7c4c440d7a47e7c5f221b098cdbb", "message": "Update submodule to latest", "committedDate": "2020-11-06T01:41:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODUwMTY3OQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1208#discussion_r518501679", "bodyText": "?", "author": "iambmelt", "createdAt": "2020-11-06T03:23:00Z", "path": "msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java", "diffHunk": "@@ -1263,6 +1266,123 @@ public boolean isSharedDevice() {\n         return mPublicClientConfiguration.getIsSharedDevice();\n     }\n \n+    @Override\n+    public String generateSignedHttpRequest(@NonNull final IAccount account,\n+                                            @NonNull final PoPAuthenticationScheme popParameters) throws MsalException {\n+        final ResultFuture<AsyncResult<GenerateShrResult>> future = new ResultFuture<>();\n+\n+        final GenerateShrCommandParameters cmdParams =\n+                CommandParametersAdapter.createGenerateShrCommandParameters(\n+                        mPublicClientConfiguration,\n+                        mPublicClientConfiguration.getOAuth2TokenCache(),\n+                        ((Account) account).getHomeAccountId(), // TODO Cleanup?\n+                        popParameters\n+                );\n+        final GenerateShrCommand generateShrCommand = new GenerateShrCommand(\n+                cmdParams,\n+                MSALControllerFactory.getAllControllers(\n+                        mPublicClientConfiguration.getAppContext(),\n+                        mPublicClientConfiguration.getDefaultAuthority(),\n+                        mPublicClientConfiguration\n+                ),\n+                new CommandCallback<GenerateShrResult, BaseException>() {\n+                    @Override\n+                    public void onCancel() {\n+                        // Not cancellable\n+                    }\n+\n+                    @Override\n+                    public void onError(BaseException error) {\n+                        future.setResult(\n+                                new AsyncResult<GenerateShrResult>(\n+                                        null,\n+                                        baseExceptionToMsalException(error)\n+                                )\n+                        );\n+                    }\n+\n+                    @Override\n+                    public void onTaskCompleted(GenerateShrResult generateShrResult) {\n+                        future.setResult(new AsyncResult<>(generateShrResult, null));\n+                    }\n+                },\n+                \"\"", "originalCommit": "3c4e69e3f09c7c4c440d7a47e7c5f221b098cdbb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA2MTU4NQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1208#discussion_r519061585", "bodyText": "27e1d49", "author": "iambmelt", "createdAt": "2020-11-06T23:59:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODUwMTY3OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODUwMTgyNw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1208#discussion_r518501827", "bodyText": "remove todo, this is fine", "author": "iambmelt", "createdAt": "2020-11-06T03:23:39Z", "path": "msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java", "diffHunk": "@@ -1263,6 +1266,123 @@ public boolean isSharedDevice() {\n         return mPublicClientConfiguration.getIsSharedDevice();\n     }\n \n+    @Override\n+    public String generateSignedHttpRequest(@NonNull final IAccount account,\n+                                            @NonNull final PoPAuthenticationScheme popParameters) throws MsalException {\n+        final ResultFuture<AsyncResult<GenerateShrResult>> future = new ResultFuture<>();\n+\n+        final GenerateShrCommandParameters cmdParams =\n+                CommandParametersAdapter.createGenerateShrCommandParameters(\n+                        mPublicClientConfiguration,\n+                        mPublicClientConfiguration.getOAuth2TokenCache(),\n+                        ((Account) account).getHomeAccountId(), // TODO Cleanup?\n+                        popParameters\n+                );\n+        final GenerateShrCommand generateShrCommand = new GenerateShrCommand(\n+                cmdParams,\n+                MSALControllerFactory.getAllControllers(\n+                        mPublicClientConfiguration.getAppContext(),\n+                        mPublicClientConfiguration.getDefaultAuthority(),\n+                        mPublicClientConfiguration\n+                ),\n+                new CommandCallback<GenerateShrResult, BaseException>() {\n+                    @Override\n+                    public void onCancel() {\n+                        // Not cancellable\n+                    }\n+\n+                    @Override\n+                    public void onError(BaseException error) {\n+                        future.setResult(\n+                                new AsyncResult<GenerateShrResult>(\n+                                        null,\n+                                        baseExceptionToMsalException(error)\n+                                )\n+                        );\n+                    }\n+\n+                    @Override\n+                    public void onTaskCompleted(GenerateShrResult generateShrResult) {\n+                        future.setResult(new AsyncResult<>(generateShrResult, null));\n+                    }\n+                },\n+                \"\"\n+        );\n+\n+        // Execute this command silently...\n+        CommandDispatcher.submitSilent(generateShrCommand);\n+\n+        try {\n+            final AsyncResult<GenerateShrResult> asyncResult = future.get();\n+\n+            if (asyncResult.getSuccess()) {\n+                return asyncResult.getResult().getShr();\n+            } else {\n+                throw asyncResult.getException();\n+            }\n+        } catch (ExecutionException | InterruptedException e) {\n+            throw new MsalClientException(\n+                    UNKNOWN_ERROR,\n+                    \"Unexpected error while generating SHR.\",\n+                    e\n+            );\n+        }\n+    }\n+\n+    @Override\n+    public void generateSignedHttpRequest(@NonNull final IAccount account,\n+                                          @NonNull final PoPAuthenticationScheme popParameters,\n+                                          @NonNull final SignedHttpRequestRequestCallback callback) {\n+        final GenerateShrCommandParameters cmdParams =\n+                CommandParametersAdapter.createGenerateShrCommandParameters(\n+                        mPublicClientConfiguration,\n+                        mPublicClientConfiguration.getOAuth2TokenCache(),\n+                        ((Account) account).getHomeAccountId(), // TODO Cleanup?", "originalCommit": "3c4e69e3f09c7c4c440d7a47e7c5f221b098cdbb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA2MTgxNQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1208#discussion_r519061815", "bodyText": "7941303", "author": "iambmelt", "createdAt": "2020-11-07T00:01:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODUwMTgyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODUwMTg3NQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1208#discussion_r518501875", "bodyText": "final", "author": "iambmelt", "createdAt": "2020-11-06T03:23:49Z", "path": "msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java", "diffHunk": "@@ -1263,6 +1266,123 @@ public boolean isSharedDevice() {\n         return mPublicClientConfiguration.getIsSharedDevice();\n     }\n \n+    @Override\n+    public String generateSignedHttpRequest(@NonNull final IAccount account,\n+                                            @NonNull final PoPAuthenticationScheme popParameters) throws MsalException {\n+        final ResultFuture<AsyncResult<GenerateShrResult>> future = new ResultFuture<>();\n+\n+        final GenerateShrCommandParameters cmdParams =\n+                CommandParametersAdapter.createGenerateShrCommandParameters(\n+                        mPublicClientConfiguration,\n+                        mPublicClientConfiguration.getOAuth2TokenCache(),\n+                        ((Account) account).getHomeAccountId(), // TODO Cleanup?\n+                        popParameters\n+                );\n+        final GenerateShrCommand generateShrCommand = new GenerateShrCommand(\n+                cmdParams,\n+                MSALControllerFactory.getAllControllers(\n+                        mPublicClientConfiguration.getAppContext(),\n+                        mPublicClientConfiguration.getDefaultAuthority(),\n+                        mPublicClientConfiguration\n+                ),\n+                new CommandCallback<GenerateShrResult, BaseException>() {\n+                    @Override\n+                    public void onCancel() {\n+                        // Not cancellable\n+                    }\n+\n+                    @Override\n+                    public void onError(BaseException error) {\n+                        future.setResult(\n+                                new AsyncResult<GenerateShrResult>(\n+                                        null,\n+                                        baseExceptionToMsalException(error)\n+                                )\n+                        );\n+                    }\n+\n+                    @Override\n+                    public void onTaskCompleted(GenerateShrResult generateShrResult) {\n+                        future.setResult(new AsyncResult<>(generateShrResult, null));\n+                    }\n+                },\n+                \"\"\n+        );\n+\n+        // Execute this command silently...\n+        CommandDispatcher.submitSilent(generateShrCommand);\n+\n+        try {\n+            final AsyncResult<GenerateShrResult> asyncResult = future.get();\n+\n+            if (asyncResult.getSuccess()) {\n+                return asyncResult.getResult().getShr();\n+            } else {\n+                throw asyncResult.getException();\n+            }\n+        } catch (ExecutionException | InterruptedException e) {\n+            throw new MsalClientException(\n+                    UNKNOWN_ERROR,\n+                    \"Unexpected error while generating SHR.\",\n+                    e\n+            );\n+        }\n+    }\n+\n+    @Override\n+    public void generateSignedHttpRequest(@NonNull final IAccount account,\n+                                          @NonNull final PoPAuthenticationScheme popParameters,\n+                                          @NonNull final SignedHttpRequestRequestCallback callback) {\n+        final GenerateShrCommandParameters cmdParams =\n+                CommandParametersAdapter.createGenerateShrCommandParameters(\n+                        mPublicClientConfiguration,\n+                        mPublicClientConfiguration.getOAuth2TokenCache(),\n+                        ((Account) account).getHomeAccountId(), // TODO Cleanup?\n+                        popParameters\n+                );\n+        try {\n+            final GenerateShrCommand generateShrCommand = new GenerateShrCommand(\n+                    cmdParams,\n+                    MSALControllerFactory.getAllControllers(\n+                            mPublicClientConfiguration.getAppContext(),\n+                            mPublicClientConfiguration.getDefaultAuthority(),\n+                            mPublicClientConfiguration\n+                    ),\n+                    new CommandCallback<GenerateShrResult, BaseException>() {\n+                        @Override\n+                        public void onCancel() {\n+                            // Not cancellable\n+                        }\n+\n+                        @Override\n+                        public void onError(BaseException error) {", "originalCommit": "3c4e69e3f09c7c4c440d7a47e7c5f221b098cdbb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA2NDk4Nw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1208#discussion_r519064987", "bodyText": "08cb11b", "author": "iambmelt", "createdAt": "2020-11-07T00:16:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODUwMTg3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODUwMTg5NA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1208#discussion_r518501894", "bodyText": "final", "author": "iambmelt", "createdAt": "2020-11-06T03:23:54Z", "path": "msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java", "diffHunk": "@@ -1263,6 +1266,123 @@ public boolean isSharedDevice() {\n         return mPublicClientConfiguration.getIsSharedDevice();\n     }\n \n+    @Override\n+    public String generateSignedHttpRequest(@NonNull final IAccount account,\n+                                            @NonNull final PoPAuthenticationScheme popParameters) throws MsalException {\n+        final ResultFuture<AsyncResult<GenerateShrResult>> future = new ResultFuture<>();\n+\n+        final GenerateShrCommandParameters cmdParams =\n+                CommandParametersAdapter.createGenerateShrCommandParameters(\n+                        mPublicClientConfiguration,\n+                        mPublicClientConfiguration.getOAuth2TokenCache(),\n+                        ((Account) account).getHomeAccountId(), // TODO Cleanup?\n+                        popParameters\n+                );\n+        final GenerateShrCommand generateShrCommand = new GenerateShrCommand(\n+                cmdParams,\n+                MSALControllerFactory.getAllControllers(\n+                        mPublicClientConfiguration.getAppContext(),\n+                        mPublicClientConfiguration.getDefaultAuthority(),\n+                        mPublicClientConfiguration\n+                ),\n+                new CommandCallback<GenerateShrResult, BaseException>() {\n+                    @Override\n+                    public void onCancel() {\n+                        // Not cancellable\n+                    }\n+\n+                    @Override\n+                    public void onError(BaseException error) {\n+                        future.setResult(\n+                                new AsyncResult<GenerateShrResult>(\n+                                        null,\n+                                        baseExceptionToMsalException(error)\n+                                )\n+                        );\n+                    }\n+\n+                    @Override\n+                    public void onTaskCompleted(GenerateShrResult generateShrResult) {\n+                        future.setResult(new AsyncResult<>(generateShrResult, null));\n+                    }\n+                },\n+                \"\"\n+        );\n+\n+        // Execute this command silently...\n+        CommandDispatcher.submitSilent(generateShrCommand);\n+\n+        try {\n+            final AsyncResult<GenerateShrResult> asyncResult = future.get();\n+\n+            if (asyncResult.getSuccess()) {\n+                return asyncResult.getResult().getShr();\n+            } else {\n+                throw asyncResult.getException();\n+            }\n+        } catch (ExecutionException | InterruptedException e) {\n+            throw new MsalClientException(\n+                    UNKNOWN_ERROR,\n+                    \"Unexpected error while generating SHR.\",\n+                    e\n+            );\n+        }\n+    }\n+\n+    @Override\n+    public void generateSignedHttpRequest(@NonNull final IAccount account,\n+                                          @NonNull final PoPAuthenticationScheme popParameters,\n+                                          @NonNull final SignedHttpRequestRequestCallback callback) {\n+        final GenerateShrCommandParameters cmdParams =\n+                CommandParametersAdapter.createGenerateShrCommandParameters(\n+                        mPublicClientConfiguration,\n+                        mPublicClientConfiguration.getOAuth2TokenCache(),\n+                        ((Account) account).getHomeAccountId(), // TODO Cleanup?\n+                        popParameters\n+                );\n+        try {\n+            final GenerateShrCommand generateShrCommand = new GenerateShrCommand(\n+                    cmdParams,\n+                    MSALControllerFactory.getAllControllers(\n+                            mPublicClientConfiguration.getAppContext(),\n+                            mPublicClientConfiguration.getDefaultAuthority(),\n+                            mPublicClientConfiguration\n+                    ),\n+                    new CommandCallback<GenerateShrResult, BaseException>() {\n+                        @Override\n+                        public void onCancel() {\n+                            // Not cancellable\n+                        }\n+\n+                        @Override\n+                        public void onError(BaseException error) {\n+                            callback.onError(baseExceptionToMsalException(error));\n+                        }\n+\n+                        @Override\n+                        public void onTaskCompleted(GenerateShrResult generateShrResult) {", "originalCommit": "3c4e69e3f09c7c4c440d7a47e7c5f221b098cdbb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA2NTAwMA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1208#discussion_r519065000", "bodyText": "08cb11b", "author": "iambmelt", "createdAt": "2020-11-07T00:16:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODUwMTg5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODUwMTk1Ng==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1208#discussion_r518501956", "bodyText": "javadoc", "author": "iambmelt", "createdAt": "2020-11-06T03:24:12Z", "path": "msal/src/main/java/com/microsoft/identity/client/internal/CommandParametersAdapter.java", "diffHunk": "@@ -405,4 +406,27 @@ private static OpenIdConnectPromptParameter getPromptParameter(@NonNull final Ac\n             return parameters.getPrompt().toOpenIdConnectPromptParameter();\n         }\n     }\n+\n+    public static GenerateShrCommandParameters createGenerateShrCommandParameters(", "originalCommit": "3c4e69e3f09c7c4c440d7a47e7c5f221b098cdbb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA2NzA0Mw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1208#discussion_r519067043", "bodyText": "e1f276e", "author": "iambmelt", "createdAt": "2020-11-07T00:26:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODUwMTk1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODUwMjIxNQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1208#discussion_r518502215", "bodyText": "Wire this up", "author": "iambmelt", "createdAt": "2020-11-06T03:25:18Z", "path": "testapps/testapp/src/main/java/com/microsoft/identity/client/testapp/SingleAccountModeWrapper.java", "diffHunk": "@@ -129,4 +130,12 @@ void acquireTokenWithDeviceCodeFlowInternal(@NonNull String[] scopes,\n                                                 @NonNull final IPublicClientApplication.DeviceCodeFlowCallback callback) {\n         mApp.acquireTokenWithDeviceCode(scopes, callback);\n     }\n+\n+    @Override\n+    public void generateSignedHttpRequestInternal(@NonNull final IAccount account,\n+                                                  @NonNull final PoPAuthenticationScheme params,\n+                                                  @NonNull final INotifyOperationResultCallback<String> generateShrCallback) {\n+        // TODO Make async!\n+        generateShrCallback.onSuccess(\"Result!\");", "originalCommit": "3c4e69e3f09c7c4c440d7a47e7c5f221b098cdbb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA2ODA2Ng==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1208#discussion_r519068066", "bodyText": "5cab112", "author": "iambmelt", "createdAt": "2020-11-07T00:31:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODUwMjIxNQ=="}], "type": "inlineReview"}, {"oid": "587b167a8c98231a0f535793c5283f3ed714ba8c", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/587b167a8c98231a0f535793c5283f3ed714ba8c", "message": "Update submodule to latest", "committedDate": "2020-11-06T20:11:51Z", "type": "commit"}, {"oid": "c251c11546a9434077f21e8fe7032162ac658628", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/c251c11546a9434077f21e8fe7032162ac658628", "message": "Update submodule to latest", "committedDate": "2020-11-06T20:25:19Z", "type": "commit"}, {"oid": "a754e8f62366d7375a974f789ab3ce20835e45bc", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/a754e8f62366d7375a974f789ab3ce20835e45bc", "message": "Update submodule", "committedDate": "2020-11-06T23:12:26Z", "type": "commit"}, {"oid": "d9fa617b8933ee5f9e3b06d72bde1fccf967177d", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/d9fa617b8933ee5f9e3b06d72bde1fccf967177d", "message": "Code cleanup", "committedDate": "2020-11-06T23:55:13Z", "type": "commit"}, {"oid": "27e1d491d9927f6251f7b9d505b3fd8b8752cfd7", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/27e1d491d9927f6251f7b9d505b3fd8b8752cfd7", "message": "Adding comment for (as yet) unused var", "committedDate": "2020-11-06T23:58:58Z", "type": "commit"}, {"oid": "79413034067fcae64f6f97b0c16dcd0a9f34ccdc", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/79413034067fcae64f6f97b0c16dcd0a9f34ccdc", "message": "Removing TODO", "committedDate": "2020-11-07T00:00:30Z", "type": "commit"}, {"oid": "08cb11b2ffa63b8797a05eed1e8efae62850f121", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/08cb11b2ffa63b8797a05eed1e8efae62850f121", "message": "Annotating callback params", "committedDate": "2020-11-07T00:15:22Z", "type": "commit"}, {"oid": "e1f276e65efe45748059dc88dab613da30b83562", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/e1f276e65efe45748059dc88dab613da30b83562", "message": "Adds javadoc", "committedDate": "2020-11-07T00:23:01Z", "type": "commit"}, {"oid": "5cab112794c7be8cf4f850eaa5f7395345169df2", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/5cab112794c7be8cf4f850eaa5f7395345169df2", "message": "Wire up Singleaccountmode", "committedDate": "2020-11-07T00:30:22Z", "type": "commit"}, {"oid": "23bd092689093cc3402748ca91b680801350caf7", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/23bd092689093cc3402748ca91b680801350caf7", "message": "Update submodule to latest", "committedDate": "2020-11-07T01:08:40Z", "type": "commit"}, {"oid": "2a57d8364e0cdc0d23df4b4a3687804c52f375ce", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/2a57d8364e0cdc0d23df4b4a3687804c52f375ce", "message": "Update submodule to latest", "committedDate": "2020-11-07T01:33:50Z", "type": "commit"}, {"oid": "c30c347cda62d33ef29a61e18e5a75504e45ce65", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/c30c347cda62d33ef29a61e18e5a75504e45ce65", "message": "Update javadoc to capture required broker API version code + update the\nsubmodule", "committedDate": "2020-11-07T01:55:46Z", "type": "commit"}, {"oid": "2deaf8fdf18d55e64b716647184e6df66782a4f3", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/2deaf8fdf18d55e64b716647184e6df66782a4f3", "message": "Update submodule", "committedDate": "2020-11-07T02:00:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA0NDk5MQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1208#discussion_r520044991", "bodyText": "Use value 1100", "author": "iambmelt", "createdAt": "2020-11-09T18:59:25Z", "path": "msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java", "diffHunk": "@@ -1263,6 +1267,130 @@ public boolean isSharedDevice() {\n         return mPublicClientConfiguration.getIsSharedDevice();\n     }\n \n+    @Override\n+    public String generateSignedHttpRequest(@NonNull final IAccount account,\n+                                            @NonNull final PoPAuthenticationScheme popParameters) throws MsalException {\n+        final ResultFuture<AsyncResult<GenerateShrResult>> future = new ResultFuture<>();\n+\n+        final GenerateShrCommandParameters cmdParams =\n+                CommandParametersAdapter.createGenerateShrCommandParameters(\n+                        mPublicClientConfiguration,\n+                        mPublicClientConfiguration.getOAuth2TokenCache(),\n+                        ((Account) account).getHomeAccountId(),\n+                        popParameters\n+                );\n+        final GenerateShrCommand generateShrCommand = new GenerateShrCommand(\n+                cmdParams,\n+                MSALControllerFactory.getAllControllers(\n+                        mPublicClientConfiguration.getAppContext(),\n+                        mPublicClientConfiguration.getDefaultAuthority(),\n+                        mPublicClientConfiguration\n+                ),\n+                new CommandCallback<GenerateShrResult, BaseException>() {\n+                    @Override\n+                    public void onCancel() {\n+                        // Not cancellable\n+                    }\n+\n+                    @Override\n+                    public void onError(@NonNull final BaseException error) {\n+                        future.setResult(\n+                                new AsyncResult<GenerateShrResult>(\n+                                        null,\n+                                        baseExceptionToMsalException(error)\n+                                )\n+                        );\n+                    }\n+\n+                    @Override\n+                    public void onTaskCompleted(@NonNull final GenerateShrResult generateShrResult) {\n+                        future.setResult(new AsyncResult<>(generateShrResult, null));\n+                    }\n+                },\n+                \"\" // Public API ID", "originalCommit": "2deaf8fdf18d55e64b716647184e6df66782a4f3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIzMjY4OQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1208#discussion_r520232689", "bodyText": "9451ca5", "author": "iambmelt", "createdAt": "2020-11-10T01:44:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA0NDk5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA0NTE1OA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1208#discussion_r520045158", "bodyText": "Use value: 1101", "author": "iambmelt", "createdAt": "2020-11-09T18:59:41Z", "path": "msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java", "diffHunk": "@@ -1263,6 +1267,130 @@ public boolean isSharedDevice() {\n         return mPublicClientConfiguration.getIsSharedDevice();\n     }\n \n+    @Override\n+    public String generateSignedHttpRequest(@NonNull final IAccount account,\n+                                            @NonNull final PoPAuthenticationScheme popParameters) throws MsalException {\n+        final ResultFuture<AsyncResult<GenerateShrResult>> future = new ResultFuture<>();\n+\n+        final GenerateShrCommandParameters cmdParams =\n+                CommandParametersAdapter.createGenerateShrCommandParameters(\n+                        mPublicClientConfiguration,\n+                        mPublicClientConfiguration.getOAuth2TokenCache(),\n+                        ((Account) account).getHomeAccountId(),\n+                        popParameters\n+                );\n+        final GenerateShrCommand generateShrCommand = new GenerateShrCommand(\n+                cmdParams,\n+                MSALControllerFactory.getAllControllers(\n+                        mPublicClientConfiguration.getAppContext(),\n+                        mPublicClientConfiguration.getDefaultAuthority(),\n+                        mPublicClientConfiguration\n+                ),\n+                new CommandCallback<GenerateShrResult, BaseException>() {\n+                    @Override\n+                    public void onCancel() {\n+                        // Not cancellable\n+                    }\n+\n+                    @Override\n+                    public void onError(@NonNull final BaseException error) {\n+                        future.setResult(\n+                                new AsyncResult<GenerateShrResult>(\n+                                        null,\n+                                        baseExceptionToMsalException(error)\n+                                )\n+                        );\n+                    }\n+\n+                    @Override\n+                    public void onTaskCompleted(@NonNull final GenerateShrResult generateShrResult) {\n+                        future.setResult(new AsyncResult<>(generateShrResult, null));\n+                    }\n+                },\n+                \"\" // Public API ID\n+        );\n+\n+        // Execute this command silently...\n+        CommandDispatcher.submitSilent(generateShrCommand);\n+\n+        try {\n+            final AsyncResult<GenerateShrResult> asyncResult = future.get();\n+\n+            if (asyncResult.getSuccess()) {\n+                return asyncResult.getResult().getShr();\n+            } else {\n+                throw asyncResult.getException();\n+            }\n+        } catch (ExecutionException | InterruptedException e) {\n+            throw new MsalClientException(\n+                    UNKNOWN_ERROR,\n+                    \"Unexpected error while generating SHR.\",\n+                    e\n+            );\n+        }\n+    }\n+\n+    @Override\n+    public void generateSignedHttpRequest(@NonNull final IAccount account,\n+                                          @NonNull final PoPAuthenticationScheme popParameters,\n+                                          @NonNull final SignedHttpRequestRequestCallback callback) {\n+        final GenerateShrCommandParameters cmdParams =\n+                CommandParametersAdapter.createGenerateShrCommandParameters(\n+                        mPublicClientConfiguration,\n+                        mPublicClientConfiguration.getOAuth2TokenCache(),\n+                        ((Account) account).getHomeAccountId(),\n+                        popParameters\n+                );\n+        try {\n+            final GenerateShrCommand generateShrCommand = new GenerateShrCommand(\n+                    cmdParams,\n+                    MSALControllerFactory.getAllControllers(\n+                            mPublicClientConfiguration.getAppContext(),\n+                            mPublicClientConfiguration.getDefaultAuthority(),\n+                            mPublicClientConfiguration\n+                    ),\n+                    new CommandCallback<GenerateShrResult, BaseException>() {\n+                        @Override\n+                        public void onCancel() {\n+                            // Not cancellable\n+                        }\n+\n+                        @Override\n+                        public void onError(@NonNull final BaseException error) {\n+                            callback.onError(baseExceptionToMsalException(error));\n+                        }\n+\n+                        @Override\n+                        public void onTaskCompleted(@NonNull final GenerateShrResult generateShrResult) {\n+                            callback.onTaskCompleted(generateShrResult.getShr());\n+                        }\n+                    },\n+                    \"\" // Public API ID", "originalCommit": "2deaf8fdf18d55e64b716647184e6df66782a4f3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIzMjcwMw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1208#discussion_r520232703", "bodyText": "9451ca5", "author": "iambmelt", "createdAt": "2020-11-10T01:44:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA0NTE1OA=="}], "type": "inlineReview"}, {"oid": "a6936f5103e0b6cd4deb394b4e1be72aa6b6b924", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/a6936f5103e0b6cd4deb394b4e1be72aa6b6b924", "message": "Update submodule to latest", "committedDate": "2020-11-10T01:33:19Z", "type": "commit"}, {"oid": "4ecee80b9ba5fdd9d32683f24ac2b892dcc42df5", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/4ecee80b9ba5fdd9d32683f24ac2b892dcc42df5", "message": "Update submodule to latest", "committedDate": "2020-11-10T01:43:22Z", "type": "commit"}, {"oid": "9451ca5c15e2edd0ec2ead6b0743560211a4f88a", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/9451ca5c15e2edd0ec2ead6b0743560211a4f88a", "message": "Add public API ID", "committedDate": "2020-11-10T01:43:32Z", "type": "commit"}, {"oid": "0cb6046344038792c704d45878cec3ccaf850191", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/0cb6046344038792c704d45878cec3ccaf850191", "message": "Update submodule to latest", "committedDate": "2020-11-10T01:48:43Z", "type": "commit"}, {"oid": "334c303d984c6b8951bd7ee573d20add75f80bf0", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/334c303d984c6b8951bd7ee573d20add75f80bf0", "message": "Update submodule to latest", "committedDate": "2020-11-10T02:28:33Z", "type": "commit"}, {"oid": "a2b8e46e4e7c2824cbf6124975e1d90b3b91892b", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/a2b8e46e4e7c2824cbf6124975e1d90b3b91892b", "message": "Merge branch 'dev' into iambmelt/1207", "committedDate": "2020-11-10T02:30:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTEwMjM4MA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1208#discussion_r521102380", "bodyText": "return type", "author": "shahzaibj", "createdAt": "2020-11-11T04:18:23Z", "path": "msal/src/main/java/com/microsoft/identity/client/PoPAuthenticationScheme.java", "diffHunk": "@@ -98,14 +107,28 @@ public Builder withNonce(@Nullable final String nonce) {\n             return this;\n         }\n \n+        /**\n+         * Sets the client_claims to be embedded in the resulting SHR.\n+         * <p>\n+         * Important: Use of this API requires setting the minimum_required_broker_protocol_version to\n+         * \"6.0\" or higher.\n+         *\n+         * @param clientClaims\n+         * @return", "originalCommit": "a2b8e46e4e7c2824cbf6124975e1d90b3b91892b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTcwNjc5MA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1208#discussion_r521706790", "bodyText": "448954f", "author": "iambmelt", "createdAt": "2020-11-11T23:40:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTEwMjM4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTEwMzc1Ng==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1208#discussion_r521103756", "bodyText": "so basically the user needs to get a token? even though they don't want it", "author": "shahzaibj", "createdAt": "2020-11-11T04:23:49Z", "path": "msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java", "diffHunk": "@@ -1263,6 +1267,130 @@ public boolean isSharedDevice() {\n         return mPublicClientConfiguration.getIsSharedDevice();\n     }\n \n+    @Override\n+    public String generateSignedHttpRequest(@NonNull final IAccount account,\n+                                            @NonNull final PoPAuthenticationScheme popParameters) throws MsalException {\n+        final ResultFuture<AsyncResult<GenerateShrResult>> future = new ResultFuture<>();\n+\n+        final GenerateShrCommandParameters cmdParams =\n+                CommandParametersAdapter.createGenerateShrCommandParameters(\n+                        mPublicClientConfiguration,\n+                        mPublicClientConfiguration.getOAuth2TokenCache(),\n+                        ((Account) account).getHomeAccountId(),\n+                        popParameters\n+                );\n+        final GenerateShrCommand generateShrCommand = new GenerateShrCommand(\n+                cmdParams,\n+                MSALControllerFactory.getAllControllers(\n+                        mPublicClientConfiguration.getAppContext(),\n+                        mPublicClientConfiguration.getDefaultAuthority(),\n+                        mPublicClientConfiguration\n+                ),\n+                new CommandCallback<GenerateShrResult, BaseException>() {\n+                    @Override\n+                    public void onCancel() {\n+                        // Not cancellable\n+                    }\n+\n+                    @Override\n+                    public void onError(@NonNull final BaseException error) {\n+                        future.setResult(\n+                                new AsyncResult<GenerateShrResult>(\n+                                        null,\n+                                        baseExceptionToMsalException(error)\n+                                )\n+                        );\n+                    }\n+\n+                    @Override\n+                    public void onTaskCompleted(@NonNull final GenerateShrResult generateShrResult) {\n+                        future.setResult(new AsyncResult<>(generateShrResult, null));\n+                    }\n+                },\n+                \"1100\" // Public API ID\n+        );\n+\n+        // Execute this command silently...\n+        CommandDispatcher.submitSilent(generateShrCommand);\n+\n+        try {\n+            final AsyncResult<GenerateShrResult> asyncResult = future.get();\n+\n+            if (asyncResult.getSuccess()) {\n+                return asyncResult.getResult().getShr();\n+            } else {\n+                throw asyncResult.getException();\n+            }\n+        } catch (ExecutionException | InterruptedException e) {\n+            throw new MsalClientException(\n+                    UNKNOWN_ERROR,\n+                    \"Unexpected error while generating SHR.\",\n+                    e\n+            );\n+        }\n+    }\n+\n+    @Override\n+    public void generateSignedHttpRequest(@NonNull final IAccount account,\n+                                          @NonNull final PoPAuthenticationScheme popParameters,\n+                                          @NonNull final SignedHttpRequestRequestCallback callback) {\n+        final GenerateShrCommandParameters cmdParams =\n+                CommandParametersAdapter.createGenerateShrCommandParameters(\n+                        mPublicClientConfiguration,\n+                        mPublicClientConfiguration.getOAuth2TokenCache(),\n+                        ((Account) account).getHomeAccountId(),\n+                        popParameters\n+                );\n+        try {\n+            final GenerateShrCommand generateShrCommand = new GenerateShrCommand(\n+                    cmdParams,\n+                    MSALControllerFactory.getAllControllers(\n+                            mPublicClientConfiguration.getAppContext(),\n+                            mPublicClientConfiguration.getDefaultAuthority(),\n+                            mPublicClientConfiguration\n+                    ),\n+                    new CommandCallback<GenerateShrResult, BaseException>() {\n+                        @Override\n+                        public void onCancel() {\n+                            // Not cancellable\n+                        }\n+\n+                        @Override\n+                        public void onError(@NonNull final BaseException error) {\n+                            callback.onError(baseExceptionToMsalException(error));\n+                        }\n+\n+                        @Override\n+                        public void onTaskCompleted(@NonNull final GenerateShrResult generateShrResult) {\n+                            callback.onTaskCompleted(generateShrResult.getShr());\n+                        }\n+                    },\n+                    \"1101\" // Public API ID\n+            );\n+\n+            // Execute this command silently...\n+            CommandDispatcher.submitSilent(generateShrCommand);\n+        } catch (final MsalClientException e) {\n+            final MsalClientException clientException = new MsalClientException(\n+                    UNKNOWN_ERROR,\n+                    \"Unexpected error while generating SHR.\",\n+                    e\n+            );\n+            callback.onError(clientException);\n+        }\n+    }\n+\n+    private MsalException baseExceptionToMsalException(@NonNull final BaseException exception) {\n+        if (GenerateShrResult.Errors.NO_ACCOUNT_FOUND.equalsIgnoreCase(exception.getErrorCode())) {\n+            return new MsalUiRequiredException(", "originalCommit": "a2b8e46e4e7c2824cbf6124975e1d90b3b91892b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY4MTU3OQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1208#discussion_r521681579", "bodyText": "Yep. This is by design. The only way to get an SPO cookie to sign is by redeeming a PoP-AT for it -- the generateShr proposal is predicated on using the same signing keys for a user as would have been used to sign an AT, even though the AT is not included in the resulting payload.", "author": "iambmelt", "createdAt": "2020-11-11T22:40:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTEwMzc1Ng=="}], "type": "inlineReview"}, {"oid": "3924ba8fd6a0af6c3612503f52e9a8d6a1f29115", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/3924ba8fd6a0af6c3612503f52e9a8d6a1f29115", "message": "Update submodule to latest", "committedDate": "2020-11-11T22:31:30Z", "type": "commit"}, {"oid": "053671396f45f872257bf9f6c9bcac3ee5dba6cd", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/053671396f45f872257bf9f6c9bcac3ee5dba6cd", "message": "Merge branch 'dev' into iambmelt/1207", "committedDate": "2020-11-11T22:43:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY5MjU3MQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1208#discussion_r521692571", "bodyText": "This should never return null?", "author": "shahzaibj", "createdAt": "2020-11-11T23:10:36Z", "path": "msal/src/main/java/com/microsoft/identity/client/IPublicClientApplication.java", "diffHunk": "@@ -109,6 +110,58 @@ void acquireToken(@NonNull final Activity activity,\n      */\n     boolean isSharedDevice();\n \n+    /**\n+     * Signs the provided {@link PoPAuthenticationScheme} parameters into a JWT on behalf of the\n+     * provided {@link IAccount}.\n+     * <p>\n+     * Important: Use of this API requires setting the minimum_required_broker_protocol_version to\n+     * \"6.0\" or higher.\n+     *\n+     * @param account       The account for whom signing shall occur.\n+     * @param popParameters The input parameters.\n+     * @return The resulting SHR.\n+     */\n+    String generateSignedHttpRequest(@NonNull final IAccount account,", "originalCommit": "053671396f45f872257bf9f6c9bcac3ee5dba6cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY5MjYyMg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1208#discussion_r521692622", "bodyText": "what about empty strings?", "author": "shahzaibj", "createdAt": "2020-11-11T23:10:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY5MjU3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTcwNzY5NA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1208#discussion_r521707694", "bodyText": "Neither are allowed -- either the SHR or an Exception, if there was a problem\n1fc28b4", "author": "iambmelt", "createdAt": "2020-11-11T23:42:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY5MjU3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY5MzQ4OA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1208#discussion_r521693488", "bodyText": "Instead of writing all this, could potentially just call the overload below by passing a custom callback that sets the result on the future....so we can avoid this mostly identical code.", "author": "shahzaibj", "createdAt": "2020-11-11T23:13:27Z", "path": "msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java", "diffHunk": "@@ -1263,6 +1267,130 @@ public boolean isSharedDevice() {\n         return mPublicClientConfiguration.getIsSharedDevice();\n     }\n \n+    @Override\n+    public String generateSignedHttpRequest(@NonNull final IAccount account,\n+                                            @NonNull final PoPAuthenticationScheme popParameters) throws MsalException {\n+        final ResultFuture<AsyncResult<GenerateShrResult>> future = new ResultFuture<>();\n+\n+        final GenerateShrCommandParameters cmdParams =\n+                CommandParametersAdapter.createGenerateShrCommandParameters(\n+                        mPublicClientConfiguration,\n+                        mPublicClientConfiguration.getOAuth2TokenCache(),\n+                        ((Account) account).getHomeAccountId(),\n+                        popParameters\n+                );\n+        final GenerateShrCommand generateShrCommand = new GenerateShrCommand(\n+                cmdParams,\n+                MSALControllerFactory.getAllControllers(\n+                        mPublicClientConfiguration.getAppContext(),\n+                        mPublicClientConfiguration.getDefaultAuthority(),\n+                        mPublicClientConfiguration\n+                ),\n+                new CommandCallback<GenerateShrResult, BaseException>() {\n+                    @Override\n+                    public void onCancel() {\n+                        // Not cancellable\n+                    }\n+\n+                    @Override\n+                    public void onError(@NonNull final BaseException error) {\n+                        future.setResult(\n+                                new AsyncResult<GenerateShrResult>(\n+                                        null,\n+                                        baseExceptionToMsalException(error)\n+                                )\n+                        );\n+                    }\n+\n+                    @Override\n+                    public void onTaskCompleted(@NonNull final GenerateShrResult generateShrResult) {\n+                        future.setResult(new AsyncResult<>(generateShrResult, null));\n+                    }\n+                },\n+                \"1100\" // Public API ID\n+        );\n+\n+        // Execute this command silently...\n+        CommandDispatcher.submitSilent(generateShrCommand);\n+\n+        try {\n+            final AsyncResult<GenerateShrResult> asyncResult = future.get();\n+\n+            if (asyncResult.getSuccess()) {\n+                return asyncResult.getResult().getShr();\n+            } else {\n+                throw asyncResult.getException();\n+            }\n+        } catch (ExecutionException | InterruptedException e) {\n+            throw new MsalClientException(\n+                    UNKNOWN_ERROR,\n+                    \"Unexpected error while generating SHR.\",\n+                    e\n+            );\n+        }\n+    }", "originalCommit": "053671396f45f872257bf9f6c9bcac3ee5dba6cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTcxNzgwNg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1208#discussion_r521717806", "bodyText": "2d3ded5", "author": "iambmelt", "createdAt": "2020-11-12T00:04:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY5MzQ4OA=="}], "type": "inlineReview"}, {"oid": "de843f4983d161e476a11b4c8bd162b9716f5037", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/de843f4983d161e476a11b4c8bd162b9716f5037", "message": "Update submodule to latest", "committedDate": "2020-11-11T23:34:54Z", "type": "commit"}, {"oid": "77b2bcb3db2b456396ca0dc80f177d1db47cbebf", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/77b2bcb3db2b456396ca0dc80f177d1db47cbebf", "message": "Merge branch 'iambmelt/1207' of https://github.com/AzureAD/microsoft-authentication-library-for-android into iambmelt/1207", "committedDate": "2020-11-11T23:35:48Z", "type": "commit"}, {"oid": "448954f0a9b9ca28efa4e37c5639f29589b9de78", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/448954f0a9b9ca28efa4e37c5639f29589b9de78", "message": "Fix up javadoc", "committedDate": "2020-11-11T23:39:51Z", "type": "commit"}, {"oid": "1fc28b4a9972e91c3722b5b512ff7d98e3a3dca7", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/1fc28b4a9972e91c3722b5b512ff7d98e3a3dca7", "message": "Adding @NonNull annot to capture API behavior", "committedDate": "2020-11-11T23:41:28Z", "type": "commit"}, {"oid": "2d3ded5873f0e1164a390059887b1de952e5d055", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/2d3ded5873f0e1164a390059887b1de952e5d055", "message": "Minor refactor for code sharing", "committedDate": "2020-11-12T00:03:57Z", "type": "commit"}, {"oid": "4abf4834b0551a6195b8af322d6eb4fffdd0dd7c", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/4abf4834b0551a6195b8af322d6eb4fffdd0dd7c", "message": "Merge branch 'dev' into iambmelt/1207", "committedDate": "2020-11-12T00:22:02Z", "type": "commit"}, {"oid": "3c972a288487ee9ff3cee369d502593dac38fc6e", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/3c972a288487ee9ff3cee369d502593dac38fc6e", "message": "Merge branch 'dev' into iambmelt/1207", "committedDate": "2020-11-12T21:02:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjUyMDQ5NA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1208#discussion_r522520494", "bodyText": "move this to PublicApiId.java", "author": "shahzaibj", "createdAt": "2020-11-13T00:10:34Z", "path": "msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java", "diffHunk": "@@ -1263,6 +1268,131 @@ public boolean isSharedDevice() {\n         return mPublicClientConfiguration.getIsSharedDevice();\n     }\n \n+    @Override\n+    public String generateSignedHttpRequest(@NonNull final IAccount account,\n+                                            @NonNull final PoPAuthenticationScheme popParameters) throws MsalException {\n+        final ResultFuture<AsyncResult<GenerateShrResult>> future = new ResultFuture<>();\n+\n+        final GenerateShrCommand generateShrCommand = createGenerateShrCommand(\n+                account,\n+                popParameters,\n+                new CommandCallback<GenerateShrResult, BaseException>() {\n+                    @Override\n+                    public void onCancel() {\n+                        // Not cancellable\n+                    }\n+\n+                    @Override\n+                    public void onError(@NonNull final BaseException error) {\n+                        future.setResult(\n+                                new AsyncResult<GenerateShrResult>(\n+                                        null,\n+                                        baseExceptionToMsalException(error)\n+                                )\n+                        );\n+                    }\n+\n+                    @Override\n+                    public void onTaskCompleted(@NonNull final GenerateShrResult generateShrResult) {\n+                        future.setResult(new AsyncResult<>(generateShrResult, null));\n+                    }\n+                },\n+                \"1100\" // Public API ID", "originalCommit": "3c972a288487ee9ff3cee369d502593dac38fc6e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjU3Njc3Mg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1208#discussion_r522576772", "bodyText": "cc33739", "author": "iambmelt", "createdAt": "2020-11-13T02:46:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjUyMDQ5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjUyMDcyNA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1208#discussion_r522520724", "bodyText": "move this constant to PublicApiId.java", "author": "shahzaibj", "createdAt": "2020-11-13T00:11:15Z", "path": "msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java", "diffHunk": "@@ -1263,6 +1268,131 @@ public boolean isSharedDevice() {\n         return mPublicClientConfiguration.getIsSharedDevice();\n     }\n \n+    @Override\n+    public String generateSignedHttpRequest(@NonNull final IAccount account,\n+                                            @NonNull final PoPAuthenticationScheme popParameters) throws MsalException {\n+        final ResultFuture<AsyncResult<GenerateShrResult>> future = new ResultFuture<>();\n+\n+        final GenerateShrCommand generateShrCommand = createGenerateShrCommand(\n+                account,\n+                popParameters,\n+                new CommandCallback<GenerateShrResult, BaseException>() {\n+                    @Override\n+                    public void onCancel() {\n+                        // Not cancellable\n+                    }\n+\n+                    @Override\n+                    public void onError(@NonNull final BaseException error) {\n+                        future.setResult(\n+                                new AsyncResult<GenerateShrResult>(\n+                                        null,\n+                                        baseExceptionToMsalException(error)\n+                                )\n+                        );\n+                    }\n+\n+                    @Override\n+                    public void onTaskCompleted(@NonNull final GenerateShrResult generateShrResult) {\n+                        future.setResult(new AsyncResult<>(generateShrResult, null));\n+                    }\n+                },\n+                \"1100\" // Public API ID\n+        );\n+\n+        // Execute this command silently...\n+        CommandDispatcher.submitSilent(generateShrCommand);\n+\n+        try {\n+            final AsyncResult<GenerateShrResult> asyncResult = future.get();\n+\n+            if (asyncResult.getSuccess()) {\n+                return asyncResult.getResult().getShr();\n+            } else {\n+                throw asyncResult.getException();\n+            }\n+        } catch (ExecutionException | InterruptedException e) {\n+            throw new MsalClientException(\n+                    UNKNOWN_ERROR,\n+                    \"Unexpected error while generating SHR.\",\n+                    e\n+            );\n+        }\n+    }\n+\n+    @Override\n+    public void generateSignedHttpRequest(@NonNull final IAccount account,\n+                                          @NonNull final PoPAuthenticationScheme popParameters,\n+                                          @NonNull final SignedHttpRequestRequestCallback callback) {\n+        try {\n+            final GenerateShrCommand generateShrCommand = createGenerateShrCommand(\n+                    account,\n+                    popParameters,\n+                    new CommandCallback<GenerateShrResult, BaseException>() {\n+                        @Override\n+                        public void onCancel() {\n+                            // Not cancellable\n+                        }\n+\n+                        @Override\n+                        public void onError(@NonNull final BaseException error) {\n+                            callback.onError(baseExceptionToMsalException(error));\n+                        }\n+\n+                        @Override\n+                        public void onTaskCompleted(@NonNull final GenerateShrResult generateShrResult) {\n+                            callback.onTaskCompleted(generateShrResult.getShr());\n+                        }\n+                    },\n+                    \"1101\" // Public API ID", "originalCommit": "3c972a288487ee9ff3cee369d502593dac38fc6e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjU3NjczNw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1208#discussion_r522576737", "bodyText": "cc33739", "author": "iambmelt", "createdAt": "2020-11-13T02:45:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjUyMDcyNA=="}], "type": "inlineReview"}, {"oid": "6a9eed5aa1a9920e9fa2d14a320314ef52719eda", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/6a9eed5aa1a9920e9fa2d14a320314ef52719eda", "message": "Merge branch 'dev' into iambmelt/1207", "committedDate": "2020-11-13T02:28:28Z", "type": "commit"}, {"oid": "f522df9eb1255f6a991ded8c52db47bdb4919a5f", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/f522df9eb1255f6a991ded8c52db47bdb4919a5f", "message": "Update submodule", "committedDate": "2020-11-13T02:34:37Z", "type": "commit"}, {"oid": "cc33739f1c87ea2ae37c86ab5a15ef440c3a5b6e", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/cc33739f1c87ea2ae37c86ab5a15ef440c3a5b6e", "message": "Relocate public api id for generateShr", "committedDate": "2020-11-13T02:44:49Z", "type": "commit"}, {"oid": "53e199f856aa5ae281dc98b1285304314b7fef85", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/53e199f856aa5ae281dc98b1285304314b7fef85", "message": "Update submodule", "committedDate": "2020-11-13T03:33:58Z", "type": "commit"}, {"oid": "755db2d9b033da9a8163d5498855a36174b63798", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/755db2d9b033da9a8163d5498855a36174b63798", "message": "Update submodule (again)", "committedDate": "2020-11-13T03:35:10Z", "type": "commit"}]}