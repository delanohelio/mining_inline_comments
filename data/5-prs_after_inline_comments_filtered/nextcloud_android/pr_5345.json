{"pr_number": 5345, "pr_title": "Allows deep linking to open files", "pr_createdAt": "2020-01-28T16:09:26Z", "pr_url": "https://github.com/nextcloud/android/pull/5345", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjEwNDkwMw==", "url": "https://github.com/nextcloud/android/pull/5345#discussion_r372104903", "bodyText": "I'm not exactly sure how this extra is set, but rewriting it before handling does not feel right. Also, I do not understand why we use last path segment as file id - is it the same thing?", "author": "ezaquarii", "createdAt": "2020-01-28T22:54:59Z", "path": "src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java", "diffHunk": "@@ -512,6 +512,9 @@ protected void onNewIntent(Intent intent) {\n             setFile(intent.getParcelableExtra(EXTRA_FILE));\n             showDetails(file);\n         } else if (Intent.ACTION_VIEW.equals(intent.getAction())) {\n+            if (!intent.hasExtra(KEY_FILE_ID)) {\n+                intent.putExtra(KEY_FILE_ID, intent.getData().getLastPathSegment());", "originalCommit": "d42bcbd88d6ca770405c534d0868e50dffe5880c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjExMTA4NQ==", "url": "https://github.com/nextcloud/android/pull/5345#discussion_r372111085", "bodyText": "It's set from the Talk app at the moment when clicking on a shared file. The author of this PR seems to take advantage of this by rewriting it to the last segment of \"nc://directlink/f/{fileID}\" which would pretty much be the file id. Now, the issue is that the currently proposed nc:// syntax doesn't allow switching accounts if needed, so that should be fixed.", "author": "mario", "createdAt": "2020-01-28T23:12:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjEwNDkwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE1ODY4Ng==", "url": "https://github.com/nextcloud/android/pull/5345#discussion_r372158686", "bodyText": "@ezaquarii > but rewriting it before handling does not feel right\nThank you for your review. After viewing the code, I realize that this part of the code can be moved to:\n// FileDisplayActivity.java\nprivate void handleOpenFileViaIntent(Intent intent)\n\n@mario I think we can pass the username in the URI, and then when we can do\nAccount newAccount = getUserAccountManager().getAccountByName({username})\nI believe we need to establish the required URI format. Any ideas?\nI'm thinking of \"nc://directlink/f/{fileID}?username={username}\", making username optional, which defaults to current user, by calling BaseActivity.getAccount(), but this potentially leads to problems as other users who gets the link might get totally different file when the fileID clashes\nAn alternative would be to make the username mandatory in forms like \"nc://directlink/u/{username}/f/{fileID}\", or maybe even \"nc://directlink/{username}/f/{fileID}\"", "author": "EvansJahja", "createdAt": "2020-01-29T02:15:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjEwNDkwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE5NTI4Nw==", "url": "https://github.com/nextcloud/android/pull/5345#discussion_r372195287", "bodyText": "There are 2 problems here:\n\nKEY_FILE_ID is re-used with 2 types of values, which complicates handling\nit doesn't handle user\n\nI believe that the ideal solution woild be to change the contract/interface and don't re-use extra keys with different arugment formats. Since both apps are already on-line this might not be the most practical appraoch, but since the URI needs a change, maybe there is a window of opportunity for this and we could introduce dedicated extra key for passing URIs, such as KEY_FILE_URI or similar?\n\n@mario I think we can pass the username in the URI, and then when we can do\nAccount newAccount = getUserAccountManager().getAccountByName({username})\n\n\nPlease be aware that we are (slowly) departing from platfrm account managment API in favour of our own User abstraction, therefore it would be best if we could use UserAccountManager.getUser (or similar) API instead.", "author": "ezaquarii", "createdAt": "2020-01-29T05:27:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjEwNDkwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE5NzYzOQ==", "url": "https://github.com/nextcloud/android/pull/5345#discussion_r372197639", "bodyText": "An alternative would be to make the username mandatory in forms like\n\"nc://directlink/u/{username}/f/{fileID}\", or maybe even \"nc://directlink/{username}/f/{fileID}\"\n\nI believe URI specification has support for users, so: nc://user@authority/path should be ok. This is one thing.\nAnother one is directlink -  generally it is expected (by code reader) that the authority part tells which app is handling it. So a link looking more or less like  nc://user@${authority}/file/${file_id} would match the expected convention better.\nFor all practical purposes, the authority part of the URI is same thing as in content provider and usually denotes application package name.\nWe could - at some point in time - want to implement direct links in other Nextcloud apps, such as Talk (send file from files app to talk) or in News. In such case, you'll need to come up with \"creative\" URI schemes to distinguish between apps.\n@mario is this URI still in development phase? If so, could we consider making some alterations before it's stable, relleased and untouchable?", "author": "ezaquarii", "createdAt": "2020-01-29T05:39:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjEwNDkwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjIwMDY2MQ==", "url": "https://github.com/nextcloud/android/pull/5345#discussion_r372200661", "bodyText": "com.nextcloud.client is a generalized (no flavour suffix) form of app package for the files app, btw. We might be willing to have deep links into com.nextcloud.talk or com.nextcloud.news in the future as well.", "author": "ezaquarii", "createdAt": "2020-01-29T05:53:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjEwNDkwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjIyNTI4OA==", "url": "https://github.com/nextcloud/android/pull/5345#discussion_r372225288", "bodyText": "handleOpenFileViaIntent already handles the case where account is not set, but we should definitely have it in the URI. I'm not sure authority is needed as the prefix actually decides which app(s) can open an URI, but feel free to convince me otherwise @ezaquarii. Keep in mind that user should be in form of \"userId@server\" so with your suggestion it would be:\n\"nc://userId@server/file/${file_id}\"\nAs for Talk @ezaquariil, since both Files and Talk are Android app I take advantage of an Intent with the required parameters", "author": "mario", "createdAt": "2020-01-29T07:30:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjEwNDkwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDM4Mzg0MA==", "url": "https://github.com/nextcloud/android/pull/5345#discussion_r374383840", "bodyText": "Not sure what is going on here. If you want to check if extra value is null, check usgin == operator. Using string formatting to compare string representation of objects is not how we do this in Java, which is strongly typed and don't need this kind of hacks, contrary to JavaScript.", "author": "ezaquarii", "createdAt": "2020-02-03T22:43:07Z", "path": "src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java", "diffHunk": "@@ -2628,8 +2628,27 @@ private void handleOpenFileViaIntent(Intent intent) {\n         showLoadingDialog(getString(R.string.retrieving_file));\n \n         String accountName = intent.getStringExtra(\"KEY_ACCOUNT\");\n+        String fileId = String.valueOf(intent.getStringExtra(KEY_FILE_ID));\n+\n+        if (accountName == null && \"null\".equals(fileId) && intent.getData() != null) {", "originalCommit": "3108955594d231ea90a8a9d06c050161d5e0b7c5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDYxMTg4Ng==", "url": "https://github.com/nextcloud/android/pull/5345#discussion_r374611886", "bodyText": "@ezaquarii Okay, I will do that. The String fileId = String.valueOf(intent.getStringExtra(KEY_FILE_ID)); part confuses me to, as I did not write it. I only move the expression upwards.", "author": "EvansJahja", "createdAt": "2020-02-04T11:16:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDM4Mzg0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDYxMzA3Ng==", "url": "https://github.com/nextcloud/android/pull/5345#discussion_r374613076", "bodyText": "@tobiasKaminsky can you comment on this?", "author": "AndyScherzinger", "createdAt": "2020-02-04T11:19:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDM4Mzg0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk4NTAxMw==", "url": "https://github.com/nextcloud/android/pull/5345#discussion_r374985013", "bodyText": "@Charon77 Thanks. We try to do cleanups whenever possible.", "author": "ezaquarii", "createdAt": "2020-02-04T23:36:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDM4Mzg0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDM4NDA0Nw==", "url": "https://github.com/nextcloud/android/pull/5345#discussion_r374384047", "bodyText": "This string should be translated.", "author": "ezaquarii", "createdAt": "2020-02-03T22:43:37Z", "path": "src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java", "diffHunk": "@@ -2628,8 +2628,27 @@ private void handleOpenFileViaIntent(Intent intent) {\n         showLoadingDialog(getString(R.string.retrieving_file));\n \n         String accountName = intent.getStringExtra(\"KEY_ACCOUNT\");\n+        String fileId = String.valueOf(intent.getStringExtra(KEY_FILE_ID));\n+\n+        if (accountName == null && \"null\".equals(fileId) && intent.getData() != null) {\n+            // Handle intent coming from URI\n+            List<String> pathSegments = intent.getData().getPathSegments();\n+\n+            try {\n+                // Matches /{accountName}/f/{fileId}\n+                accountName = pathSegments.get(0);\n+                if (\"f\".equals(pathSegments.get(1))) {\n+                    fileId = pathSegments.get(2);\n+                }\n+            } catch (IndexOutOfBoundsException e) {\n+                dismissLoadingDialog();\n+                DisplayUtils.showSnackMessage(this, \"Invalid URL\");", "originalCommit": "3108955594d231ea90a8a9d06c050161d5e0b7c5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDM4NDUyNg==", "url": "https://github.com/nextcloud/android/pull/5345#discussion_r374384526", "bodyText": "Please properly validate list size before using it. Exceptions are not meant to be used as a flow control mechanism.", "author": "ezaquarii", "createdAt": "2020-02-03T22:44:54Z", "path": "src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java", "diffHunk": "@@ -2628,8 +2628,27 @@ private void handleOpenFileViaIntent(Intent intent) {\n         showLoadingDialog(getString(R.string.retrieving_file));\n \n         String accountName = intent.getStringExtra(\"KEY_ACCOUNT\");\n+        String fileId = String.valueOf(intent.getStringExtra(KEY_FILE_ID));\n+\n+        if (accountName == null && \"null\".equals(fileId) && intent.getData() != null) {\n+            // Handle intent coming from URI\n+            List<String> pathSegments = intent.getData().getPathSegments();\n+\n+            try {\n+                // Matches /{accountName}/f/{fileId}\n+                accountName = pathSegments.get(0);\n+                if (\"f\".equals(pathSegments.get(1))) {\n+                    fileId = pathSegments.get(2);\n+                }\n+            } catch (IndexOutOfBoundsException e) {", "originalCommit": "3108955594d231ea90a8a9d06c050161d5e0b7c5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM4MjUwNg==", "url": "https://github.com/nextcloud/android/pull/5345#discussion_r377382506", "bodyText": "We have discussed the format of account name extensively when trying to formalize account ID:\n#5006\nAFAIR, the conclusion was that we cannot rely on this format, but maybe we should take a step back and look at it again.\n@tobiasKaminsky @mario @AndyScherzinger", "author": "ezaquarii", "createdAt": "2020-02-10T23:41:08Z", "path": "src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java", "diffHunk": "@@ -2664,5 +2689,59 @@ private void handleOpenFileViaIntent(Intent intent) {\n                                                                           storageManager,\n                                                                           this);\n         fetchRemoteFileTask.execute();\n+\n+    }\n+\n+    private void findAccountAndOpenFile(String hostName, int port, String fileId) {\n+        String strPort = Integer.toString(port);\n+\n+        ArrayList<String> validAccounts = new ArrayList<>();\n+\n+        for (Account account : accountManager.getAccounts()) {\n+            String accountHostPort = account.name.split(\"@\")[1];", "originalCommit": "e2ea710f5d0c4ecdaaf0f07843c726bc77e46dad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU3MDEyOA==", "url": "https://github.com/nextcloud/android/pull/5345#discussion_r377570128", "bodyText": "I thought we can rely on the format as in @, no?", "author": "AndyScherzinger", "createdAt": "2020-02-11T11:10:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM4MjUwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk1MjQwMQ==", "url": "https://github.com/nextcloud/android/pull/5345#discussion_r377952401", "bodyText": "Actually I am also not quite sure. This is from the docs:\n\nBut for now I would say it is good enough?", "author": "szaimen", "createdAt": "2020-02-11T23:04:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM4MjUwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODUwMDEyOA==", "url": "https://github.com/nextcloud/android/pull/5345#discussion_r378500128", "bodyText": "Well, with this info we would have to look for the last @ character to split the string I guess.", "author": "AndyScherzinger", "createdAt": "2020-02-12T20:40:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM4MjUwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODY0NzIxMA==", "url": "https://github.com/nextcloud/android/pull/5345#discussion_r378647210", "bodyText": "Solved in bcd277f", "author": "EvansJahja", "createdAt": "2020-02-13T04:37:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM4MjUwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODgwOTA0MA==", "url": "https://github.com/nextcloud/android/pull/5345#discussion_r378809040", "bodyText": "Sorry for seeing this too late, but we have:\nhttps://github.com/nextcloud/android-library/blob/master/src/main/java/com/owncloud/android/lib/common/accounts/AccountUtils.java#L101\nThis should be enough and we stay consistent with our other account handling.", "author": "tobiasKaminsky", "createdAt": "2020-02-13T11:40:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM4MjUwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODgxOTIyMw==", "url": "https://github.com/nextcloud/android/pull/5345#discussion_r378819223", "bodyText": "Better is to use: UserAccountManager, as this is our own implementation and we try to get rid of AccountManager.\nFrom userAccountManager you can get User, which then has Server and this has Uri, which is also the baseUrl.", "author": "tobiasKaminsky", "createdAt": "2020-02-13T12:03:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM4MjUwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODg3ODYwMg==", "url": "https://github.com/nextcloud/android/pull/5345#discussion_r378878602", "bodyText": "891916e", "author": "EvansJahja", "createdAt": "2020-02-13T14:03:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM4MjUwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk4NjMwMA==", "url": "https://github.com/nextcloud/android/pull/5345#discussion_r378986300", "bodyText": "Please do not use platform API. We try to get rid of it. We have our own abstraction of account: UserAccountManager and User.", "author": "ezaquarii", "createdAt": "2020-02-13T16:50:10Z", "path": "src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java", "diffHunk": "@@ -2664,5 +2691,48 @@ private void handleOpenFileViaIntent(Intent intent) {\n                                                                           storageManager,\n                                                                           this);\n         fetchRemoteFileTask.execute();\n+\n+    }\n+\n+    private void findAccountAndOpenFile(String scheme, String authority, String fileId) {\n+\n+        ArrayList<String> validAccounts = new ArrayList<>();\n+        String queryBaseUrl = scheme + \"://\" + authority;\n+\n+        for (Account account : accountManager.getAccounts()) {", "originalCommit": "891916e73a15edaa995ca579dd090e447b03bdaf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM2NjY3Nw==", "url": "https://github.com/nextcloud/android/pull/5345#discussion_r379366677", "bodyText": "6d4ec4e", "author": "EvansJahja", "createdAt": "2020-02-14T10:49:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk4NjMwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk4OTEwMA==", "url": "https://github.com/nextcloud/android/pull/5345#discussion_r378989100", "bodyText": "I'm not sure what we do here.\nIs there any reason why we try to build the URL ourselves and then use getBaseUrlForAccount only to see if we built it correctly?", "author": "ezaquarii", "createdAt": "2020-02-13T16:54:47Z", "path": "src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java", "diffHunk": "@@ -2664,5 +2691,48 @@ private void handleOpenFileViaIntent(Intent intent) {\n                                                                           storageManager,\n                                                                           this);\n         fetchRemoteFileTask.execute();\n+\n+    }\n+\n+    private void findAccountAndOpenFile(String scheme, String authority, String fileId) {\n+\n+        ArrayList<String> validAccounts = new ArrayList<>();\n+        String queryBaseUrl = scheme + \"://\" + authority;\n+\n+        for (Account account : accountManager.getAccounts()) {\n+            try {\n+                if (AccountUtils.getBaseUrlForAccount(this, account).equals(queryBaseUrl)) {", "originalCommit": "891916e73a15edaa995ca579dd090e447b03bdaf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTMyNzY0Mw==", "url": "https://github.com/nextcloud/android/pull/5345#discussion_r379327643", "bodyText": "given direct link from the intent in forms of\nhttp://example.com:567/index.php/f/123\nI'd like to extract the\nhttp://example.com:567\npart.\nqueryBaseUrl is from intent. getBaseUrlforAccount is from the account in getAccounts()", "author": "EvansJahja", "createdAt": "2020-02-14T09:28:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk4OTEwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk5MDY5Mw==", "url": "https://github.com/nextcloud/android/pull/5345#discussion_r378990693", "bodyText": "Please use User instead of Account.", "author": "ezaquarii", "createdAt": "2020-02-13T16:57:20Z", "path": "src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java", "diffHunk": "@@ -2664,5 +2691,48 @@ private void handleOpenFileViaIntent(Intent intent) {\n                                                                           storageManager,\n                                                                           this);\n         fetchRemoteFileTask.execute();\n+\n+    }\n+\n+    private void findAccountAndOpenFile(String scheme, String authority, String fileId) {\n+\n+        ArrayList<String> validAccounts = new ArrayList<>();\n+        String queryBaseUrl = scheme + \"://\" + authority;\n+\n+        for (Account account : accountManager.getAccounts()) {\n+            try {\n+                if (AccountUtils.getBaseUrlForAccount(this, account).equals(queryBaseUrl)) {\n+                    validAccounts.add(account.name);\n+                }\n+            } catch (AccountUtils.AccountNotFoundException ignored) {\n+            }\n+        }\n+\n+        if (validAccounts.size() == 0) {\n+            openFile(getAccount().name, fileId);", "originalCommit": "891916e73a15edaa995ca579dd090e447b03bdaf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTMzNzY5OA==", "url": "https://github.com/nextcloud/android/pull/5345#discussion_r379337698", "bodyText": "Not so sure why, but alright\n04fc793", "author": "EvansJahja", "createdAt": "2020-02-14T09:49:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk5MDY5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY5MTAxNQ==", "url": "https://github.com/nextcloud/android/pull/5345#discussion_r379691015", "bodyText": "Because we do this: https://github.com/nextcloud/android/blob/master/CONTRIBUTING.md#custom-platform-apis", "author": "ezaquarii", "createdAt": "2020-02-14T23:39:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk5MDY5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTcwNDE0MQ==", "url": "https://github.com/nextcloud/android/pull/5345#discussion_r379704141", "bodyText": "Ah, my bad. Thanks for pointing out", "author": "EvansJahja", "createdAt": "2020-02-15T01:00:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk5MDY5Mw=="}], "type": "inlineReview"}, {"oid": "dee27b08dca211120d93033f9b013e50343e68e3", "url": "https://github.com/nextcloud/android/commit/dee27b08dca211120d93033f9b013e50343e68e3", "message": "Removes unnecessary imports\n\nSigned-off-by: Evans Jahja <evansjahja13@gmail.com>", "committedDate": "2020-02-14T09:55:02Z", "type": "forcePushed"}, {"oid": "aff6be0eb4680582b6dc45393bfdcff99bcdbe1f", "url": "https://github.com/nextcloud/android/commit/aff6be0eb4680582b6dc45393bfdcff99bcdbe1f", "message": "Limits account to have to match subdirectory, fails if account not found\n\nSigned-off-by: Evans Jahja <evansjahja13@gmail.com>", "committedDate": "2020-02-21T03:32:25Z", "type": "forcePushed"}, {"oid": "6ee7d25c54ccd6a58e2d3f951c83773243bcc6df", "url": "https://github.com/nextcloud/android/commit/6ee7d25c54ccd6a58e2d3f951c83773243bcc6df", "message": "Allows deep linking to open files\n\nSigned-off-by: Evans Jahja <evansjahja13@gmail.com>", "committedDate": "2020-02-26T14:22:13Z", "type": "forcePushed"}, {"oid": "0467cc37ca768f1e2d51779c1fcca739f131b14b", "url": "https://github.com/nextcloud/android/commit/0467cc37ca768f1e2d51779c1fcca739f131b14b", "message": "Allows deep linking to open files\n\nSigned-off-by: Evans Jahja <evansjahja13@gmail.com>", "committedDate": "2020-02-26T14:26:48Z", "type": "commit"}, {"oid": "0467cc37ca768f1e2d51779c1fcca739f131b14b", "url": "https://github.com/nextcloud/android/commit/0467cc37ca768f1e2d51779c1fcca739f131b14b", "message": "Allows deep linking to open files\n\nSigned-off-by: Evans Jahja <evansjahja13@gmail.com>", "committedDate": "2020-02-26T14:26:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDUyODQxMA==", "url": "https://github.com/nextcloud/android/pull/5345#discussion_r384528410", "bodyText": "Issue found: Avoid using Literals in Conditional Statements", "author": "nextcloud-android-bot", "createdAt": "2020-02-26T14:32:07Z", "path": "src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java", "diffHunk": "@@ -2649,13 +2677,56 @@ private void handleOpenFileViaIntent(Intent intent) {\n         FileDataStorageManager storageManager = getStorageManager();\n \n         if (storageManager == null) {\n-            storageManager = new FileDataStorageManager(newAccount, getContentResolver());\n+            storageManager = new FileDataStorageManager(user.toPlatformAccount(), getContentResolver());\n         }\n \n-        FetchRemoteFileTask fetchRemoteFileTask = new FetchRemoteFileTask(newAccount,\n+        FetchRemoteFileTask fetchRemoteFileTask = new FetchRemoteFileTask(user.toPlatformAccount(),\n                                                                           fileId,\n                                                                           storageManager,\n                                                                           this);\n         fetchRemoteFileTask.execute();\n+\n+    }\n+\n+    private void findAccountAndOpenFile(String uri, String fileId) {\n+\n+        ArrayList<User> validUsers = new ArrayList<>();\n+\n+        for (User user : getUserAccountManager().getAllUsers()) {\n+            if (user.getServer().getUri().toString().equals(uri)) {\n+                validUsers.add(user);\n+            }\n+        }\n+\n+        if (validUsers.size() == 0) {\n+            dismissLoadingDialog();\n+            DisplayUtils.showSnackMessage(this, getString(R.string.associated_account_not_found));\n+            return;\n+        }\n+\n+        if (validUsers.size() == 1) {", "originalCommit": "0467cc37ca768f1e2d51779c1fcca739f131b14b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDUyODQyNA==", "url": "https://github.com/nextcloud/android/pull/5345#discussion_r384528424", "bodyText": "Issue found: This call to Collection.toArray() may be optimizable", "author": "nextcloud-android-bot", "createdAt": "2020-02-26T14:32:08Z", "path": "src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java", "diffHunk": "@@ -2649,13 +2677,56 @@ private void handleOpenFileViaIntent(Intent intent) {\n         FileDataStorageManager storageManager = getStorageManager();\n \n         if (storageManager == null) {\n-            storageManager = new FileDataStorageManager(newAccount, getContentResolver());\n+            storageManager = new FileDataStorageManager(user.toPlatformAccount(), getContentResolver());\n         }\n \n-        FetchRemoteFileTask fetchRemoteFileTask = new FetchRemoteFileTask(newAccount,\n+        FetchRemoteFileTask fetchRemoteFileTask = new FetchRemoteFileTask(user.toPlatformAccount(),\n                                                                           fileId,\n                                                                           storageManager,\n                                                                           this);\n         fetchRemoteFileTask.execute();\n+\n+    }\n+\n+    private void findAccountAndOpenFile(String uri, String fileId) {\n+\n+        ArrayList<User> validUsers = new ArrayList<>();\n+\n+        for (User user : getUserAccountManager().getAllUsers()) {\n+            if (user.getServer().getUri().toString().equals(uri)) {\n+                validUsers.add(user);\n+            }\n+        }\n+\n+        if (validUsers.size() == 0) {\n+            dismissLoadingDialog();\n+            DisplayUtils.showSnackMessage(this, getString(R.string.associated_account_not_found));\n+            return;\n+        }\n+\n+        if (validUsers.size() == 1) {\n+            openFile(validUsers.get(0).getAccountName(), fileId);\n+            return;\n+        }\n+\n+        ArrayList<String> validUserNames = new ArrayList<>();\n+\n+        for (User user : validUsers) {\n+            validUserNames.add(user.getAccountName());\n+        }\n+\n+        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());\n+        builder\n+            .setTitle(R.string.common_choose_account)\n+            .setItems(validUserNames.toArray(new CharSequence[validUserNames.size()]),", "originalCommit": "0467cc37ca768f1e2d51779c1fcca739f131b14b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}