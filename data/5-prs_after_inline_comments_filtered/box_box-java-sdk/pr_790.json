{"pr_number": 790, "pr_title": "Add path parameter sanitization", "pr_createdAt": "2020-04-08T22:31:41Z", "pr_url": "https://github.com/box/box-java-sdk/pull/790", "timeline": [{"oid": "a05305917e932c43f96da7816a2453e0b939bc42", "url": "https://github.com/box/box-java-sdk/commit/a05305917e932c43f96da7816a2453e0b939bc42", "message": "added sanitization and some tests", "committedDate": "2020-04-08T22:28:11Z", "type": "commit"}, {"oid": "9059b52e2c1d742be87c5ccb8db6f92b281feda6", "url": "https://github.com/box/box-java-sdk/commit/9059b52e2c1d742be87c5ccb8db6f92b281feda6", "message": "Update CHANGELOG.md", "committedDate": "2020-04-08T22:32:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk1OTY0Mw==", "url": "https://github.com/box/box-java-sdk/pull/790#discussion_r405959643", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        assert false : \"An invalid URL template indicates a bug in the SDK.\";\n          \n          \n            \n                        assert false : \"A valid URL could not be constructed from the provided parameters.\";", "author": "PJSimon", "createdAt": "2020-04-09T05:11:09Z", "path": "src/main/java/com/box/sdk/URLTemplate.java", "diffHunk": "@@ -18,12 +21,45 @@ public URLTemplate(String template) {\n     }\n \n     /**\n-     * Build a URL with URL Parameters.\n+     * Build a URL with numeric URL Parameters.\n      * @param base base URL\n      * @param values URL parameters\n      * @return URL\n      */\n     public URL build(String base, Object... values) {\n+        for (Object value: values) {\n+            String valueString = String.valueOf(value);\n+            Boolean test = NUMERIC.matcher(valueString).matches();\n+            if (!NUMERIC.matcher(valueString).matches()) {\n+                assert false : \"An invalid path parameter passed in. It must be numeric.\";\n+            }\n+        }\n+        String urlString = String.format(base + this.template, values);\n+\n+        URL url = null;\n+        try {\n+            url = new URL(urlString);\n+        } catch (MalformedURLException e) {\n+            assert false : \"An invalid URL template indicates a bug in the SDK.\";", "originalCommit": "9059b52e2c1d742be87c5ccb8db6f92b281feda6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk2MDE4NA==", "url": "https://github.com/box/box-java-sdk/pull/790#discussion_r405960184", "bodyText": "I don't think this is true, now that we have the new sanitization logic.  If there's a malformed URL, it's due to the parameters' values, right?", "author": "PJSimon", "createdAt": "2020-04-09T05:13:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk1OTY0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk2MDMyMg==", "url": "https://github.com/box/box-java-sdk/pull/790#discussion_r405960322", "bodyText": "Also fix the other three instances of this verbiage in this class.", "author": "PJSimon", "createdAt": "2020-04-09T05:13:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk1OTY0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk1OTY5MQ==", "url": "https://github.com/box/box-java-sdk/pull/790#discussion_r405959691", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        assert false : \"An invalid URL template indicates a bug in the SDK.\";\n          \n          \n            \n                        assert false : \"A valid URL could not be constructed from the provided parameters.\";", "author": "PJSimon", "createdAt": "2020-04-09T05:11:23Z", "path": "src/main/java/com/box/sdk/URLTemplate.java", "diffHunk": "@@ -37,13 +73,44 @@ public URL build(String base, Object... values) {\n     }\n \n     /**\n-     * Build a URL with Query String and URL Parameters.\n+     * Build a URL with Query String and numeric URL Parameters.\n      * @param base base URL\n      * @param queryString query string\n      * @param values URL Parameters\n      * @return URL\n      */\n     public URL buildWithQuery(String base, String queryString, Object... values) {\n+        for (Object value: values) {\n+            String valueString = String.valueOf(value);\n+            if (!NUMERIC.matcher(valueString).matches()) {\n+                assert false : \"An invalid path param passed in. It must be numeric.\";\n+            }\n+        }\n+        String urlString = String.format(base + this.template, values) + queryString;\n+        URL url = null;\n+        try {\n+            url = new URL(urlString);\n+        } catch (MalformedURLException e) {\n+            assert false : \"An invalid URL template indicates a bug in the SDK.\";", "originalCommit": "9059b52e2c1d742be87c5ccb8db6f92b281feda6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk2MjQ3MQ==", "url": "https://github.com/box/box-java-sdk/pull/790#discussion_r405962471", "bodyText": "If this.getID() returns, say, \"12345abc\", then this call would NOT return \"An invalid path parameter passed in. It must be numeric.\" error message, even though that would be an invalid ID.\nI can't think of any alternatives, but just calling out to start the discussion.\nThe API would handle the error in that case, so it's probably a minor concern, right?", "author": "PJSimon", "createdAt": "2020-04-09T05:22:30Z", "path": "src/main/java/com/box/sdk/BoxFile.java", "diffHunk": "@@ -1051,7 +1051,7 @@ public Metadata createMetadata(String typeName, Metadata metadata) {\n      * @return the metadata returned from the server.\n      */\n     public Metadata createMetadata(String typeName, String scope, Metadata metadata) {\n-        URL url = METADATA_URL_TEMPLATE.build(this.getAPI().getBaseURL(), this.getID(), scope, typeName);\n+        URL url = METADATA_URL_TEMPLATE.buildAlpha(this.getAPI().getBaseURL(), this.getID(), scope, typeName);", "originalCommit": "9059b52e2c1d742be87c5ccb8db6f92b281feda6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjI1NTI0NA==", "url": "https://github.com/box/box-java-sdk/pull/790#discussion_r406255244", "bodyText": "Ya, you are correct. There are ways around it like passing in what each parameter should be with each parameter in an Array for something like that. However, I think it's a minor concern and isn't worth making the SDK more complicated.", "author": "sujaygarlanka", "createdAt": "2020-04-09T14:42:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk2MjQ3MQ=="}], "type": "inlineReview"}, {"oid": "1765a6acba96b0c1dd50598786cb5933892bc6d3", "url": "https://github.com/box/box-java-sdk/commit/1765a6acba96b0c1dd50598786cb5933892bc6d3", "message": "Update src/main/java/com/box/sdk/URLTemplate.java\n\nCo-Authored-By: Patrick Simon <patrick@box.com>", "committedDate": "2020-04-09T14:36:21Z", "type": "commit"}, {"oid": "eabcd5d81a76c86f6b00213f63e769e997eced84", "url": "https://github.com/box/box-java-sdk/commit/eabcd5d81a76c86f6b00213f63e769e997eced84", "message": "Update src/main/java/com/box/sdk/URLTemplate.java\n\nCo-Authored-By: Patrick Simon <patrick@box.com>", "committedDate": "2020-04-09T14:42:13Z", "type": "commit"}, {"oid": "db481a1b47740116f5cfdbfbb82c24e183c047fd", "url": "https://github.com/box/box-java-sdk/commit/db481a1b47740116f5cfdbfbb82c24e183c047fd", "message": "Update URLTemplate.java", "committedDate": "2020-04-09T14:46:47Z", "type": "commit"}]}