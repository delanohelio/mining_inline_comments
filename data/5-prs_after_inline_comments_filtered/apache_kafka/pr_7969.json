{"pr_number": 7969, "pr_title": "KAFKA-7317: Use collections subscription for main consumer to reduce metadata", "pr_createdAt": "2020-01-16T03:45:28Z", "pr_url": "https://github.com/apache/kafka/pull/7969", "timeline": [{"oid": "c75d3027fca883b4ec4e482656655d080282202a", "url": "https://github.com/apache/kafka/commit/c75d3027fca883b4ec4e482656655d080282202a", "message": "add consumer config and change subscription type", "committedDate": "2020-01-23T22:13:16Z", "type": "commit"}, {"oid": "4bbab82fa3fc19d86e7ba46731007d0fbe857eda", "url": "https://github.com/apache/kafka/commit/4bbab82fa3fc19d86e7ba46731007d0fbe857eda", "message": "side cleanup", "committedDate": "2020-01-23T22:13:16Z", "type": "commit"}, {"oid": "ad55ffc923b0f87f51277519cfebe9ff602a1927", "url": "https://github.com/apache/kafka/commit/ad55ffc923b0f87f51277519cfebe9ff602a1927", "message": "replace null check in other classes with added method", "committedDate": "2020-01-23T22:13:16Z", "type": "commit"}, {"oid": "a9567353de535ee72e9eb82f91e5a47acb0e95a7", "url": "https://github.com/apache/kafka/commit/a9567353de535ee72e9eb82f91e5a47acb0e95a7", "message": "fix up tests, add unit test", "committedDate": "2020-01-23T22:13:16Z", "type": "commit"}, {"oid": "3b52129691c1ced9c1e44656e8df8f7934039890", "url": "https://github.com/apache/kafka/commit/3b52129691c1ced9c1e44656e8df8f7934039890", "message": "fix checkstyle", "committedDate": "2020-01-23T22:13:16Z", "type": "commit"}, {"oid": "9ba3ee4e5849cae6c81d5b229846e0507630647f", "url": "https://github.com/apache/kafka/commit/9ba3ee4e5849cae6c81d5b229846e0507630647f", "message": "github comment", "committedDate": "2020-01-23T22:13:16Z", "type": "commit"}, {"oid": "9ba3ee4e5849cae6c81d5b229846e0507630647f", "url": "https://github.com/apache/kafka/commit/9ba3ee4e5849cae6c81d5b229846e0507630647f", "message": "github comment", "committedDate": "2020-01-23T22:13:16Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg3ODY2Ng==", "url": "https://github.com/apache/kafka/pull/7969#discussion_r370878666", "bodyText": "nit: missing space between logPrefix and 'found'", "author": "tedyu", "createdAt": "2020-01-24T22:59:16Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilder.java", "diffHunk": "@@ -1865,42 +1861,25 @@ private static String nodeNames(final Set<TopologyDescription.Node> nodes) {\n         return sb.toString();\n     }\n \n-    /**\n-     * Used to capture subscribed topic via Patterns discovered during the\n-     * partition assignment process.\n-     */\n-    public static class SubscriptionUpdates {\n-\n-        private final Set<String> updatedTopicSubscriptions = new HashSet<>();\n-\n-        private void updateTopics(final Collection<String> topicNames) {\n-            updatedTopicSubscriptions.clear();\n-            updatedTopicSubscriptions.addAll(topicNames);\n-        }\n-\n-        public Collection<String> getUpdates() {\n-            return Collections.unmodifiableSet(updatedTopicSubscriptions);\n-        }\n-\n-        boolean hasUpdates() {\n-            return !updatedTopicSubscriptions.isEmpty();\n-        }\n-\n-        @Override\n-        public String toString() {\n-            return String.format(\"SubscriptionUpdates{updatedTopicSubscriptions=%s}\", updatedTopicSubscriptions);\n-        }\n+    Set<String> subscriptionUpdates() {\n+        return Collections.unmodifiableSet(subscriptionUpdates);\n     }\n \n-    void updateSubscribedTopics(final Set<String> topics,\n-                                final String logPrefix) {\n-        final SubscriptionUpdates subscriptionUpdates = new SubscriptionUpdates();\n-        log.debug(\"{}found {} topics possibly matching regex\", logPrefix, topics);\n-        // update the topic groups with the returned subscription set for regex pattern subscriptions\n-        subscriptionUpdates.updateTopics(topics);\n-        updateSubscriptions(subscriptionUpdates, logPrefix);\n+    boolean hasSubscriptionUpdates() {\n+        return !subscriptionUpdates.isEmpty();\n     }\n \n+    synchronized void updateSubscribedTopics(final Set<String> topics,\n+                                             final String logPrefix) {\n+        log.debug(\"{}found {} topics possibly matching subscription\", logPrefix, topics);", "originalCommit": "9ba3ee4e5849cae6c81d5b229846e0507630647f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg4MDI5OQ==", "url": "https://github.com/apache/kafka/pull/7969#discussion_r370880299", "bodyText": "topics is a Set.\nWhat's your intention for the second parameter ?\nIf you want the number of topics logged, you should use topics.size().", "author": "tedyu", "createdAt": "2020-01-24T23:06:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg3ODY2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg4NDk3OQ==", "url": "https://github.com/apache/kafka/pull/7969#discussion_r370884979", "bodyText": "The spacing kept bothering me too but it's actually correct (logPrefix has a space at the end) -- we should actually clean up this class at some point to use log = new LogContext(logPrefix).logger(getClass()); rather than explicitly insert the prefix everywhere.\nI didn't write this log message, just moved things around, but I think the intention was to list the actual topics not just the size. I probably could've improved the wording of it though", "author": "ableegoldman", "createdAt": "2020-01-24T23:26:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg3ODY2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg4ODcwNw==", "url": "https://github.com/apache/kafka/pull/7969#discussion_r370888707", "bodyText": "Since topics Set can be quite large, I doubt the intention was to show the contents.\n'{} topics' reads like the count of entries should be shown.", "author": "tedyu", "createdAt": "2020-01-24T23:45:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg3ODY2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkwMjMyNw==", "url": "https://github.com/apache/kafka/pull/7969#discussion_r370902327", "bodyText": "Well the topics set should only include the matching topics that the Streams app is actually subscribed to, but I agree the wording suggests it should be the size/count. Since this PR is already merged do you want to submit a quick follow-up PR?", "author": "ableegoldman", "createdAt": "2020-01-25T01:15:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg3ODY2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkwNTc0MQ==", "url": "https://github.com/apache/kafka/pull/7969#discussion_r370905741", "bodyText": "Created #8005", "author": "tedyu", "createdAt": "2020-01-25T01:51:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg3ODY2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg4MDM1MA==", "url": "https://github.com/apache/kafka/pull/7969#discussion_r370880350", "bodyText": "Similar comment as above two.", "author": "tedyu", "createdAt": "2020-01-24T23:06:19Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilder.java", "diffHunk": "@@ -1865,42 +1861,25 @@ private static String nodeNames(final Set<TopologyDescription.Node> nodes) {\n         return sb.toString();\n     }\n \n-    /**\n-     * Used to capture subscribed topic via Patterns discovered during the\n-     * partition assignment process.\n-     */\n-    public static class SubscriptionUpdates {\n-\n-        private final Set<String> updatedTopicSubscriptions = new HashSet<>();\n-\n-        private void updateTopics(final Collection<String> topicNames) {\n-            updatedTopicSubscriptions.clear();\n-            updatedTopicSubscriptions.addAll(topicNames);\n-        }\n-\n-        public Collection<String> getUpdates() {\n-            return Collections.unmodifiableSet(updatedTopicSubscriptions);\n-        }\n-\n-        boolean hasUpdates() {\n-            return !updatedTopicSubscriptions.isEmpty();\n-        }\n-\n-        @Override\n-        public String toString() {\n-            return String.format(\"SubscriptionUpdates{updatedTopicSubscriptions=%s}\", updatedTopicSubscriptions);\n-        }\n+    Set<String> subscriptionUpdates() {\n+        return Collections.unmodifiableSet(subscriptionUpdates);\n     }\n \n-    void updateSubscribedTopics(final Set<String> topics,\n-                                final String logPrefix) {\n-        final SubscriptionUpdates subscriptionUpdates = new SubscriptionUpdates();\n-        log.debug(\"{}found {} topics possibly matching regex\", logPrefix, topics);\n-        // update the topic groups with the returned subscription set for regex pattern subscriptions\n-        subscriptionUpdates.updateTopics(topics);\n-        updateSubscriptions(subscriptionUpdates, logPrefix);\n+    boolean hasSubscriptionUpdates() {\n+        return !subscriptionUpdates.isEmpty();\n     }\n \n+    synchronized void updateSubscribedTopics(final Set<String> topics,\n+                                             final String logPrefix) {\n+        log.debug(\"{}found {} topics possibly matching subscription\", logPrefix, topics);\n+        subscriptionUpdates.clear();\n+        subscriptionUpdates.addAll(topics);\n+\n+        log.debug(\"{}updating builder with {} topic(s) with possible matching regex subscription(s)\",", "originalCommit": "9ba3ee4e5849cae6c81d5b229846e0507630647f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}