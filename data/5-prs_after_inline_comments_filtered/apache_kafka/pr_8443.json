{"pr_number": 8443, "pr_title": "KAFKA-9832: Extend Streams system tests for EOS-beta", "pr_createdAt": "2020-04-08T01:05:59Z", "pr_url": "https://github.com/apache/kafka/pull/8443", "timeline": [{"oid": "4794317f239011ac225ec4cd45e2b0961194308a", "url": "https://github.com/apache/kafka/commit/4794317f239011ac225ec4cd45e2b0961194308a", "message": "KAFKA-9832: Extend Streams system tests for EOS-beta", "committedDate": "2020-04-07T23:06:31Z", "type": "commit"}, {"oid": "d5ccabaff269b5c5de80714e967554f1e7e45773", "url": "https://github.com/apache/kafka/commit/d5ccabaff269b5c5de80714e967554f1e7e45773", "message": "Extend RelationalSmokeTest", "committedDate": "2020-04-07T23:31:15Z", "type": "commit"}, {"oid": "6d05897d258cc0af8f7515e57f4814eb7d76a155", "url": "https://github.com/apache/kafka/commit/6d05897d258cc0af8f7515e57f4814eb7d76a155", "message": "fix", "committedDate": "2020-04-07T23:49:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIwNTg1MA==", "url": "https://github.com/apache/kafka/pull/8443#discussion_r405205850", "bodyText": "nit: we could add all 3 modes in this test too", "author": "abbccdda", "createdAt": "2020-04-08T01:25:42Z", "path": "streams/src/test/java/org/apache/kafka/streams/tests/RelationalSmokeTestTest.java", "diffHunk": "@@ -39,6 +41,7 @@ public void verifySmokeTestLogic() {\n                                             \"nothing:0\",\n                                             \"test\",\n                                             \"test\",\n+                                            StreamsConfig.AT_LEAST_ONCE,", "originalCommit": "6d05897d258cc0af8f7515e57f4814eb7d76a155", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI3MDM4OQ==", "url": "https://github.com/apache/kafka/pull/8443#discussion_r405270389", "bodyText": "This is just a \"sanity\" check using TopologyTestDriver -- running it with all 3 modes does not buy us anything as the TTD does not work any different for the 3 modes.", "author": "mjsax", "createdAt": "2020-04-08T05:43:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIwNTg1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIyMzA0MA==", "url": "https://github.com/apache/kafka/pull/8443#discussion_r405223040", "bodyText": "Reading from the comment, the RelationalSmokeTest has nothing to do with EOS, why do we need to expand this test? cc @vvcephei", "author": "abbccdda", "createdAt": "2020-04-08T02:30:21Z", "path": "streams/src/test/java/org/apache/kafka/streams/tests/RelationalSmokeTest.java", "diffHunk": "@@ -637,13 +637,14 @@ public static Topology getTopology() {\n         public static Properties getConfig(final String broker,\n                                            final String application,\n                                            final String id,\n+                                           final String processingGuarantee,", "originalCommit": "6d05897d258cc0af8f7515e57f4814eb7d76a155", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI3MDAyNw==", "url": "https://github.com/apache/kafka/pull/8443#discussion_r405270027", "bodyText": "The test had EOS enabled. So I extended it to now run with both EOS versions.", "author": "mjsax", "createdAt": "2020-04-08T05:42:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIyMzA0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcxODQ3OA==", "url": "https://github.com/apache/kafka/pull/8443#discussion_r405718478", "bodyText": "I think it worth adding both eos mode for this test --- if we only have this test with eos-beta there may be some regressions not captured.\nIn the future, when we deprecate eos-alpha in some release version that requires broker > 2.5 we can remove eos-alpha parameters in all these.", "author": "guozhangwang", "createdAt": "2020-04-08T18:12:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIyMzA0MA=="}], "type": "inlineReview"}, {"oid": "6f7ee56278adb524ab04ec1cde667ec8e06e69ed", "url": "https://github.com/apache/kafka/commit/6f7ee56278adb524ab04ec1cde667ec8e06e69ed", "message": "Set transaction.id correctly", "committedDate": "2020-04-09T01:44:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTkxMDIwOQ==", "url": "https://github.com/apache/kafka/pull/8443#discussion_r405910209", "bodyText": "@guozhangwang @abbccdda this was the correct way to set the transaction.id -- during the refactoring this code was not moved into StreamsProducer as it should have", "author": "mjsax", "createdAt": "2020-04-09T01:46:32Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/ActiveTaskCreator.java", "diffHunk": "@@ -87,8 +86,6 @@\n         this.log = log;\n \n         createTaskSensor = ThreadMetrics.createTaskSensor(threadId, streamsMetrics);\n-        final String applicationId = config.getString(StreamsConfig.APPLICATION_ID_CONFIG);\n-        transactionalId = applicationId + \"-\" + processId + \"-StreamThread-\" + threadId.split(\"-StreamThread-\")[1];", "originalCommit": "6f7ee56278adb524ab04ec1cde667ec8e06e69ed", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTkxMDYzNg==", "url": "https://github.com/apache/kafka/pull/8443#discussion_r405910636", "bodyText": "Include the thread-index in the transactional.id to generate unique IDs for different threads within the same process.\n(I stripped out the \"-StreamThread-\" string in contrast to the old code for shorten the ID)", "author": "mjsax", "createdAt": "2020-04-09T01:48:10Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsProducer.java", "diffHunk": "@@ -113,7 +113,9 @@ public StreamsProducer(final StreamsConfig config,\n                 final String applicationId = config.getString(StreamsConfig.APPLICATION_ID_CONFIG);\n                 producerConfigs.put(\n                     ProducerConfig.TRANSACTIONAL_ID_CONFIG,\n-                    applicationId + \"-\" + Objects.requireNonNull(processId, \"processId cannot be null for exactly-once beta\"));\n+                    applicationId + \"-\" +\n+                        Objects.requireNonNull(processId, \"processId cannot be null for exactly-once beta\") +\n+                        \"-\" + threadId.split(\"-StreamThread-\")[1]);", "originalCommit": "6f7ee56278adb524ab04ec1cde667ec8e06e69ed", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}