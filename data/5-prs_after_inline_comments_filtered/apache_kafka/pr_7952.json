{"pr_number": 7952, "pr_title": "KAFKA-9418: Add new sendOffsetsToTransaction API to KafkaProducer", "pr_createdAt": "2020-01-13T23:32:18Z", "pr_url": "https://github.com/apache/kafka/pull/7952", "timeline": [{"oid": "4e2486ce7d1650613e88aca761a556635084a8e1", "url": "https://github.com/apache/kafka/commit/4e2486ce7d1650613e88aca761a556635084a8e1", "message": "Revert \"revert client side changes\"\n\nThis reverts commit 437f8456983ba6234644c62a5cbfee5e77814cfb.", "committedDate": "2020-01-21T23:23:19Z", "type": "commit"}, {"oid": "ce8856cd302b9f4cfd05f5601e7552c4b6f933b4", "url": "https://github.com/apache/kafka/commit/ce8856cd302b9f4cfd05f5601e7552c4b6f933b4", "message": "add producer send offsets", "committedDate": "2020-01-21T23:23:19Z", "type": "commit"}, {"oid": "6770680646eb1309223d7293ee20e3327c3a1894", "url": "https://github.com/apache/kafka/commit/6770680646eb1309223d7293ee20e3327c3a1894", "message": "style fix", "committedDate": "2020-01-21T23:23:19Z", "type": "commit"}, {"oid": "eac6fe6f70d35ed320cbef5793ff0448e81e5619", "url": "https://github.com/apache/kafka/commit/eac6fe6f70d35ed320cbef5793ff0448e81e5619", "message": "address Matthias comments from previous PR", "committedDate": "2020-01-21T23:23:19Z", "type": "commit"}, {"oid": "49b163fc8b2443ad1c0ed9eafc2f1c83a0f60a96", "url": "https://github.com/apache/kafka/commit/49b163fc8b2443ad1c0ed9eafc2f1c83a0f60a96", "message": "illegal state tests for group related exception", "committedDate": "2020-01-21T23:23:19Z", "type": "commit"}, {"oid": "850e6602c1eb3457ae5098aaf45cb8e8d8ddcc79", "url": "https://github.com/apache/kafka/commit/850e6602c1eb3457ae5098aaf45cb8e8d8ddcc79", "message": "hide details about txn commit data creation", "committedDate": "2020-01-21T23:23:19Z", "type": "commit"}, {"oid": "2dd1a1dc742f38eb4cfa86fe91ba1fe088a13c40", "url": "https://github.com/apache/kafka/commit/2dd1a1dc742f38eb4cfa86fe91ba1fe088a13c40", "message": "premilinary producer txn API tests", "committedDate": "2020-01-21T23:23:19Z", "type": "commit"}, {"oid": "271014808657ca81816d49f1292bd7fd14dc388c", "url": "https://github.com/apache/kafka/commit/271014808657ca81816d49f1292bd7fd14dc388c", "message": "txn commit test fix", "committedDate": "2020-01-21T23:23:19Z", "type": "commit"}, {"oid": "d45fa60572ee931a940f67063d812912e15102e6", "url": "https://github.com/apache/kafka/commit/d45fa60572ee931a940f67063d812912e15102e6", "message": "address comments", "committedDate": "2020-01-21T23:23:19Z", "type": "commit"}, {"oid": "966c309d4e367300434557bd7b156878d1ffb3af", "url": "https://github.com/apache/kafka/commit/966c309d4e367300434557bd7b156878d1ffb3af", "message": "address Jason's comments", "committedDate": "2020-01-21T23:23:19Z", "type": "commit"}, {"oid": "88050c172b89ec1f6c4969988ce2cbb1adcf7089", "url": "https://github.com/apache/kafka/commit/88050c172b89ec1f6c4969988ce2cbb1adcf7089", "message": "Guozhang's comment for cleanup Producer.java", "committedDate": "2020-01-21T23:23:19Z", "type": "commit"}, {"oid": "aabe1a5c0f3c5be2d4946aa1b09af66fb2ad5656", "url": "https://github.com/apache/kafka/commit/aabe1a5c0f3c5be2d4946aa1b09af66fb2ad5656", "message": "address Jason's comments", "committedDate": "2020-01-21T23:23:19Z", "type": "commit"}, {"oid": "a08d25ecc111385e24d4bcff452a04b81587c525", "url": "https://github.com/apache/kafka/commit/a08d25ecc111385e24d4bcff452a04b81587c525", "message": "add checks to group metadata", "committedDate": "2020-01-21T23:23:40Z", "type": "commit"}, {"oid": "a08d25ecc111385e24d4bcff452a04b81587c525", "url": "https://github.com/apache/kafka/commit/a08d25ecc111385e24d4bcff452a04b81587c525", "message": "add checks to group metadata", "committedDate": "2020-01-21T23:23:40Z", "type": "forcePushed"}, {"oid": "2706908e3524f76c2ef749d3907815de4360fd8f", "url": "https://github.com/apache/kafka/commit/2706908e3524f76c2ef749d3907815de4360fd8f", "message": "expose FencedInstanceId exception", "committedDate": "2020-01-22T04:31:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY2OTUwMw==", "url": "https://github.com/apache/kafka/pull/7952#discussion_r369669503", "bodyText": "nit: usually we write this like this:\nthis.groupInstanceId = requireNonNull(groupInstanceId, \"group.instance.id can't be null\");", "author": "hachikuji", "createdAt": "2020-01-22T16:35:27Z", "path": "clients/src/main/java/org/apache/kafka/clients/consumer/ConsumerGroupMetadata.java", "diffHunk": "@@ -26,15 +29,29 @@\n     final private String groupId;\n     final private int generationId;\n     final private String memberId;\n-    final Optional<String> groupInstanceId;\n+    final private Optional<String> groupInstanceId;\n \n-    public ConsumerGroupMetadata(String groupId, int generationId, String memberId, Optional<String> groupInstanceId) {\n+    public ConsumerGroupMetadata(String groupId,\n+                                 int generationId,\n+                                 String memberId,\n+                                 Optional<String> groupInstanceId) {\n         this.groupId = groupId;\n         this.generationId = generationId;\n+\n+        Objects.requireNonNull(memberId, \"member.id can't be null\");\n         this.memberId = memberId;\n+\n+        Objects.requireNonNull(groupInstanceId, \"group.instance.id can't be null\");", "originalCommit": "2706908e3524f76c2ef749d3907815de4360fd8f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY3MTUzNg==", "url": "https://github.com/apache/kafka/pull/7952#discussion_r369671536", "bodyText": "nit: I don't think there's any reason to mention this. Unexpected errors fall under KafkaException, which is listed below.", "author": "hachikuji", "createdAt": "2020-01-22T16:38:55Z", "path": "clients/src/main/java/org/apache/kafka/clients/producer/KafkaProducer.java", "diffHunk": "@@ -619,22 +622,61 @@ public void beginTransaction() throws ProducerFencedException {\n      * and should also not commit offsets manually (via {@link KafkaConsumer#commitSync(Map) sync} or\n      * {@link KafkaConsumer#commitAsync(Map, OffsetCommitCallback) async} commits).\n      *\n-     * @throws IllegalStateException if no transactional.id has been configured or no transaction has been started\n+     * @throws IllegalStateException if no transactional.id has been configured, no transaction has been started,\n+     *                               or encounters unexpected group fencing exception which should only be returned from", "originalCommit": "2706908e3524f76c2ef749d3907815de4360fd8f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY3MjQ1Ng==", "url": "https://github.com/apache/kafka/pull/7952#discussion_r369672456", "bodyText": "nit: we may as well move this check into ConsumerGroupMetadata since we have some other null checks there.", "author": "hachikuji", "createdAt": "2020-01-22T16:40:26Z", "path": "clients/src/main/java/org/apache/kafka/clients/producer/KafkaProducer.java", "diffHunk": "@@ -1228,6 +1270,17 @@ private int partition(ProducerRecord<K, V> record, byte[] serializedKey, byte[]\n                         record.topic(), record.key(), serializedKey, record.value(), serializedValue, cluster);\n     }\n \n+    private void throwIfInvalidGroupMetadata(ConsumerGroupMetadata groupMetadata) {\n+        if (groupMetadata == null) {\n+            throw new IllegalStateException(\"Consumer group metadata could not be null\");\n+        } else if (groupMetadata.groupId() == null) {", "originalCommit": "2706908e3524f76c2ef749d3907815de4360fd8f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTcwMTQ3Nw==", "url": "https://github.com/apache/kafka/pull/7952#discussion_r369701477", "bodyText": "The check is a little bit over-specific for ConsumerGroupMetadata itself, which is why I put advanced check in here so that people could construct group metadata in error format as they want.", "author": "abbccdda", "createdAt": "2020-01-22T17:33:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY3MjQ1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTcyMTIyOA==", "url": "https://github.com/apache/kafka/pull/7952#discussion_r369721228", "bodyText": "Can you elaborate why this is different from e.g. the memberId?", "author": "hachikuji", "createdAt": "2020-01-22T18:13:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY3MjQ1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY3Mjc3MQ==", "url": "https://github.com/apache/kafka/pull/7952#discussion_r369672771", "bodyText": "I think these should all be IllegalArgumentException. The producer is not in an illegal state.", "author": "hachikuji", "createdAt": "2020-01-22T16:40:57Z", "path": "clients/src/main/java/org/apache/kafka/clients/producer/KafkaProducer.java", "diffHunk": "@@ -1228,6 +1270,17 @@ private int partition(ProducerRecord<K, V> record, byte[] serializedKey, byte[]\n                         record.topic(), record.key(), serializedKey, record.value(), serializedValue, cluster);\n     }\n \n+    private void throwIfInvalidGroupMetadata(ConsumerGroupMetadata groupMetadata) {\n+        if (groupMetadata == null) {\n+            throw new IllegalStateException(\"Consumer group metadata could not be null\");", "originalCommit": "2706908e3524f76c2ef749d3907815de4360fd8f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9cf4a2a546625f337c4e2e28da3e6b3a956fa309", "url": "https://github.com/apache/kafka/commit/9cf4a2a546625f337c4e2e28da3e6b3a956fa309", "message": "final comment", "committedDate": "2020-01-22T17:48:18Z", "type": "commit"}, {"oid": "9cf4a2a546625f337c4e2e28da3e6b3a956fa309", "url": "https://github.com/apache/kafka/commit/9cf4a2a546625f337c4e2e28da3e6b3a956fa309", "message": "final comment", "committedDate": "2020-01-22T17:48:18Z", "type": "forcePushed"}, {"oid": "e81e0daaec396ec5be7cc3d3cc2adae42f242e95", "url": "https://github.com/apache/kafka/commit/e81e0daaec396ec5be7cc3d3cc2adae42f242e95", "message": "move group.id null check", "committedDate": "2020-01-22T18:43:20Z", "type": "commit"}]}