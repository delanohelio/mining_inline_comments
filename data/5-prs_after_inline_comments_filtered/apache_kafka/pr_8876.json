{"pr_number": 8876, "pr_title": "KAFKA-10167: use the admin client to read end-offset", "pr_createdAt": "2020-06-16T00:44:55Z", "pr_url": "https://github.com/apache/kafka/pull/8876", "timeline": [{"oid": "b9a27a8f8c57336cac9a1ad551f3c142049c07a2", "url": "https://github.com/apache/kafka/commit/b9a27a8f8c57336cac9a1ad551f3c142049c07a2", "message": "check", "committedDate": "2020-06-16T00:43:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUzNTgzNg==", "url": "https://github.com/apache/kafka/pull/8876#discussion_r440535836", "bodyText": "nit: empty line.", "author": "mjsax", "createdAt": "2020-06-16T01:33:13Z", "path": "clients/src/test/java/org/apache/kafka/clients/admin/MockAdminClient.java", "diffHunk": "@@ -834,6 +855,13 @@ public AlterClientQuotasResult alterClientQuotas(Collection<ClientQuotaAlteratio\n     @Override\n     synchronized public void close(Duration timeout) {}\n \n+    public synchronized void updateBeginningOffsets(Map<TopicPartition, Long> newOffsets) {\n+        beginningOffsets.putAll(newOffsets);\n+    }\n+    public synchronized void updateEndOffsets(final Map<TopicPartition, Long> newOffsets) {", "originalCommit": "b9a27a8f8c57336cac9a1ad551f3c142049c07a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUzNjE0Mg==", "url": "https://github.com/apache/kafka/pull/8876#discussion_r440536142", "bodyText": "Why do we need this distinction? Seems we set adminClient in any case and it should never be null?", "author": "mjsax", "createdAt": "2020-06-16T01:34:33Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StoreChangelogReader.java", "diffHunk": "@@ -564,8 +576,15 @@ private void restoreChangelog(final ChangelogMetadata changelogMetadata) {\n             return Collections.emptyMap();\n \n         try {\n-            return restoreConsumer.endOffsets(partitions);\n-        } catch (final TimeoutException e) {\n+            if (adminClient != null) {", "originalCommit": "b9a27a8f8c57336cac9a1ad551f3c142049c07a2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgwMjMyMw==", "url": "https://github.com/apache/kafka/pull/8876#discussion_r440802323", "bodyText": "I also do not understand the distinction. When would we want to call restoreConsumer.endOffsets(partitions)?", "author": "cadonna", "createdAt": "2020-06-16T12:13:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUzNjE0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgwOTMzMQ==", "url": "https://github.com/apache/kafka/pull/8876#discussion_r440809331", "bodyText": "req: Could you add a test (or adapt an existing one) and verify whether during restore() a call to adminClient.listOffsets() with isolation level READ_UNCOMMITTED is done?", "author": "cadonna", "createdAt": "2020-06-16T12:26:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUzNjE0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAzODQ2NQ==", "url": "https://github.com/apache/kafka/pull/8876#discussion_r441038465", "bodyText": "This is just a hack-around: I will always use admin-client by passing it via the constructor.\nI will add a unit test.", "author": "guozhangwang", "createdAt": "2020-06-16T17:57:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUzNjE0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTIzNzE5OQ==", "url": "https://github.com/apache/kafka/pull/8876#discussion_r441237199", "bodyText": "Should we remove this check then?", "author": "abbccdda", "createdAt": "2020-06-17T01:59:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUzNjE0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI0OTUxMQ==", "url": "https://github.com/apache/kafka/pull/8876#discussion_r441249511", "bodyText": "I think we can remove this null check? If you really want to add one, add it to the constructor?\nthis.adminClient = Objects.notNull(adminClient);", "author": "mjsax", "createdAt": "2020-06-17T02:46:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUzNjE0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI1MjAwOQ==", "url": "https://github.com/apache/kafka/pull/8876#discussion_r441252009", "bodyText": "I just saw that we kinda need to pass null as AdminClient in TDD -- however, StoreChangelogReader#restore() is never called by TTD, and thus I still think we should remove the null check and fail hard with a NPE as it would indicate a bug if adminClient is null in a regular deployment.", "author": "mjsax", "createdAt": "2020-06-17T02:56:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUzNjE0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUzNjkxNQ==", "url": "https://github.com/apache/kafka/pull/8876#discussion_r440536915", "bodyText": "Why is adminClient not final any longer? We still pass it into the StreamThread constructor.", "author": "mjsax", "createdAt": "2020-06-16T01:37:21Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "diffHunk": "@@ -273,13 +273,13 @@ public boolean isRunning() {\n     private volatile ThreadMetadata threadMetadata;\n     private StreamThread.StateListener stateListener;\n \n-    private final Admin adminClient;\n     private final ChangelogReader changelogReader;\n \n     // package-private for testing\n     final ConsumerRebalanceListener rebalanceListener;\n     final Consumer<byte[], byte[]> mainConsumer;\n     final Consumer<byte[], byte[]> restoreConsumer;\n+    final Admin adminClient;", "originalCommit": "b9a27a8f8c57336cac9a1ad551f3c142049c07a2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc5OTUxOA==", "url": "https://github.com/apache/kafka/pull/8876#discussion_r440799518", "bodyText": "You mean private, right? It is not private anymore.\nInstead of making the adminClient field package private for testing, I would either add a setter setAdmin() to MockClientSupplier or instantiate the admin in a private field of the MockClientSupplier and use the existing getter to set up the admin, or instantiate the admin in a public field of the MockClientSupplier and accessing it directly to set it up (similarly to the producer and consumer).", "author": "cadonna", "createdAt": "2020-06-16T12:07:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUzNjkxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTIyOTQzNw==", "url": "https://github.com/apache/kafka/pull/8876#discussion_r441229437", "bodyText": "Yeah I agree, will move all these variables to private and add getters.", "author": "guozhangwang", "createdAt": "2020-06-17T01:28:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUzNjkxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgwMTAyNg==", "url": "https://github.com/apache/kafka/pull/8876#discussion_r440801026", "bodyText": "Q: Why do you not pass the admin client in the constructor?", "author": "cadonna", "createdAt": "2020-06-16T12:10:43Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "diffHunk": "@@ -369,6 +369,7 @@ public static StreamThread create(final InternalTopologyBuilder builder,\n \n         final Consumer<byte[], byte[]> mainConsumer = clientSupplier.getConsumer(consumerConfigs);\n         changelogReader.setMainConsumer(mainConsumer);\n+        changelogReader.setAdminClient(adminClient);", "originalCommit": "b9a27a8f8c57336cac9a1ad551f3c142049c07a2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk0MTcxNQ==", "url": "https://github.com/apache/kafka/pull/8876#discussion_r440941715", "bodyText": "Yeah that's the plan, I was just hacking it around so that I do not need to change 30+ unit tests. Once it is confirmed to fix the issue I will refactor this PR.", "author": "guozhangwang", "createdAt": "2020-06-16T15:27:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgwMTAyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgwOTY5Ng==", "url": "https://github.com/apache/kafka/pull/8876#discussion_r440809696", "bodyText": "See my comment in StreamThread.", "author": "cadonna", "createdAt": "2020-06-16T12:27:06Z", "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamThreadTest.java", "diffHunk": "@@ -1634,6 +1634,7 @@ public void shouldRecoverFromInvalidOffsetExceptionOnRestoreAndFinishRestore() t\n         final StreamThread thread = createStreamThread(\"clientId\", config, false);\n         final MockConsumer<byte[], byte[]> mockConsumer = (MockConsumer<byte[], byte[]>) thread.mainConsumer;\n         final MockConsumer<byte[], byte[]> mockRestoreConsumer = (MockConsumer<byte[], byte[]>) thread.restoreConsumer;\n+        final MockAdminClient mockAdminClient = (MockAdminClient) thread.adminClient;", "originalCommit": "b9a27a8f8c57336cac9a1ad551f3c142049c07a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0NTM0Mw==", "url": "https://github.com/apache/kafka/pull/8876#discussion_r440545343", "bodyText": "This is not used.", "author": "abbccdda", "createdAt": "2020-06-16T02:08:48Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StoreChangelogReader.java", "diffHunk": "@@ -199,12 +204,19 @@ int bufferedLimitIndex() {\n     // to update offset limit for standby tasks;\n     private Consumer<byte[], byte[]> mainConsumer;\n \n+    // the changelog reader needs the admin client to list end offsets\n+    private Admin adminClient;\n+\n     private long lastUpdateOffsetTime;\n \n     void setMainConsumer(final Consumer<byte[], byte[]> consumer) {\n         this.mainConsumer = consumer;\n     }\n \n+    void setAdminClient(final Admin adminClient) {", "originalCommit": "b9a27a8f8c57336cac9a1ad551f3c142049c07a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a322765f82e53622835969546d8398de2a13ed2f", "url": "https://github.com/apache/kafka/commit/a322765f82e53622835969546d8398de2a13ed2f", "message": "Merge branch 'trunk' of https://github.com/apache/kafka into KXXX-end-offsets-uncommitted", "committedDate": "2020-06-16T17:55:59Z", "type": "commit"}, {"oid": "b4589e6502121bc76fc3ac9633974c1763b2da60", "url": "https://github.com/apache/kafka/commit/b4589e6502121bc76fc3ac9633974c1763b2da60", "message": "continue revamping", "committedDate": "2020-06-16T23:31:11Z", "type": "commit"}, {"oid": "a1a4bb63145e972509e6e71a81c36cf256f11335", "url": "https://github.com/apache/kafka/commit/a1a4bb63145e972509e6e71a81c36cf256f11335", "message": "Merge branch 'trunk' of https://github.com/apache/kafka into KXXX-end-offsets-uncommitted", "committedDate": "2020-06-17T00:47:16Z", "type": "commit"}, {"oid": "7f816995d3a2c4e4eddae6c9db87a80f645389a8", "url": "https://github.com/apache/kafka/commit/7f816995d3a2c4e4eddae6c9db87a80f645389a8", "message": "github comments", "committedDate": "2020-06-17T01:28:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI0OTg1NQ==", "url": "https://github.com/apache/kafka/pull/8876#discussion_r441249855", "bodyText": "Can this case ever apply? TTD should never restore any task from my understanding.", "author": "mjsax", "createdAt": "2020-06-17T02:47:56Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StoreChangelogReader.java", "diffHunk": "@@ -564,8 +574,16 @@ private void restoreChangelog(final ChangelogMetadata changelogMetadata) {\n             return Collections.emptyMap();\n \n         try {\n-            return restoreConsumer.endOffsets(partitions);\n-        } catch (final TimeoutException e) {\n+            if (adminClient != null) {\n+                final ListOffsetsResult result = adminClient.listOffsets(partitions.stream().collect(\n+                        Collectors.toMap(Function.identity(), tp -> OffsetSpec.latest())));\n+                return result.all().get().entrySet().stream().collect(\n+                        Collectors.toMap(Map.Entry::getKey, entry -> entry.getValue().offset()));\n+            } else {\n+                // we only fall back to use restore consumer if admin client is not set in TTD", "originalCommit": "7f816995d3a2c4e4eddae6c9db87a80f645389a8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTgzMTAwNw==", "url": "https://github.com/apache/kafka/pull/8876#discussion_r441831007", "bodyText": "TTD would still call this function though... after some thinking I've decided to add a mock-admin to streams:test-utils (the existing mock is in clients:test and hence cannot be relied on).", "author": "guozhangwang", "createdAt": "2020-06-17T20:59:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI0OTg1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI1Mjg5NA==", "url": "https://github.com/apache/kafka/pull/8876#discussion_r441252894", "bodyText": "Should we set isolation.level explicitly? -- In case the default if ever changed, we would have a safe guard?", "author": "mjsax", "createdAt": "2020-06-17T02:59:51Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StoreChangelogReader.java", "diffHunk": "@@ -564,8 +574,16 @@ private void restoreChangelog(final ChangelogMetadata changelogMetadata) {\n             return Collections.emptyMap();\n \n         try {\n-            return restoreConsumer.endOffsets(partitions);\n-        } catch (final TimeoutException e) {\n+            if (adminClient != null) {\n+                final ListOffsetsResult result = adminClient.listOffsets(partitions.stream().collect(\n+                        Collectors.toMap(Function.identity(), tp -> OffsetSpec.latest())));", "originalCommit": "7f816995d3a2c4e4eddae6c9db87a80f645389a8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTgzMTA1NQ==", "url": "https://github.com/apache/kafka/pull/8876#discussion_r441831055", "bodyText": "Good point, will do.", "author": "guozhangwang", "createdAt": "2020-06-17T20:59:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI1Mjg5NA=="}], "type": "inlineReview"}, {"oid": "2fd0ea54d729aa3904c4f96f29653f03601f64e4", "url": "https://github.com/apache/kafka/commit/2fd0ea54d729aa3904c4f96f29653f03601f64e4", "message": "add the mock-admin client to ttd", "committedDate": "2020-06-17T18:01:27Z", "type": "commit"}, {"oid": "67bf6935761e48590527d0bfaf5488c7e6c43ce9", "url": "https://github.com/apache/kafka/commit/67bf6935761e48590527d0bfaf5488c7e6c43ce9", "message": "copy past the mock admin client", "committedDate": "2020-06-17T20:33:07Z", "type": "commit"}, {"oid": "6934cd6209d2db22d9ebc4a1fe8e0d296aac0072", "url": "https://github.com/apache/kafka/commit/6934cd6209d2db22d9ebc4a1fe8e0d296aac0072", "message": "github comments", "committedDate": "2020-06-17T21:02:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg4Nzg3Nw==", "url": "https://github.com/apache/kafka/pull/8876#discussion_r441887877", "bodyText": "Did you check out the new methods in ClientUtils?", "author": "ableegoldman", "createdAt": "2020-06-17T23:30:23Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StoreChangelogReader.java", "diffHunk": "@@ -564,8 +576,13 @@ private void restoreChangelog(final ChangelogMetadata changelogMetadata) {\n             return Collections.emptyMap();\n \n         try {\n-            return restoreConsumer.endOffsets(partitions);\n-        } catch (final TimeoutException e) {\n+            final ListOffsetsResult result = adminClient.listOffsets(", "originalCommit": "6934cd6209d2db22d9ebc4a1fe8e0d296aac0072", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ebe86f98c385eacf6112290880b71a8b725f9c96", "url": "https://github.com/apache/kafka/commit/ebe86f98c385eacf6112290880b71a8b725f9c96", "message": "not use changelog at all", "committedDate": "2020-06-18T01:11:49Z", "type": "commit"}, {"oid": "097dbcadfc4bffc50c6ff140120454d6c93d268b", "url": "https://github.com/apache/kafka/commit/097dbcadfc4bffc50c6ff140120454d6c93d268b", "message": "Merge branch 'trunk' of https://github.com/apache/kafka into KXXX-end-offsets-uncommitted", "committedDate": "2020-06-18T01:16:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkyMDUwNA==", "url": "https://github.com/apache/kafka/pull/8876#discussion_r441920504", "bodyText": "This is the only thing I am wondering about. Why not just pass null?", "author": "mjsax", "createdAt": "2020-06-18T01:38:01Z", "path": "streams/test-utils/src/main/java/org/apache/kafka/streams/TopologyTestDriver.java", "diffHunk": "@@ -478,6 +479,7 @@ private void setupTask(final StreamsConfig streamsConfig,\n                     mockWallClockTime,\n                     streamsConfig,\n                     logContext,\n+                    createAdminClient(processorTopology.storeToChangelogTopic()),", "originalCommit": "6934cd6209d2db22d9ebc4a1fe8e0d296aac0072", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkzMzM2Ng==", "url": "https://github.com/apache/kafka/pull/8876#discussion_r441933366", "bodyText": "After thinking a bit more I agree with you now: I removed the mock admin client and instead just pass a mock register (since the register function may still be called)", "author": "guozhangwang", "createdAt": "2020-06-18T02:29:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkyMDUwNA=="}], "type": "inlineReview"}, {"oid": "8d80cce0917522e766c0cec0ae93acb4ca90ffdf", "url": "https://github.com/apache/kafka/commit/8d80cce0917522e766c0cec0ae93acb4ca90ffdf", "message": "github comments", "committedDate": "2020-06-18T02:27:19Z", "type": "commit"}]}