{"pr_number": 8441, "pr_title": "KAFKA-9748: Extend Streams integration tests for EOS beta", "pr_createdAt": "2020-04-07T22:33:25Z", "pr_url": "https://github.com/apache/kafka/pull/8441", "timeline": [{"oid": "6f0160a32f48f58462b9701025cde38983085b92", "url": "https://github.com/apache/kafka/commit/6f0160a32f48f58462b9701025cde38983085b92", "message": "KAFKA-9748: Extend Streams integration tests for EOS beta", "committedDate": "2020-04-07T22:30:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE1MjYyMQ==", "url": "https://github.com/apache/kafka/pull/8441#discussion_r405152621", "bodyText": "We always set it to true -- removing unnecessary code.", "author": "mjsax", "createdAt": "2020-04-07T22:33:58Z", "path": "streams/src/test/java/org/apache/kafka/streams/integration/GlobalKTableEOSIntegrationTest.java", "diffHunk": "@@ -319,15 +334,9 @@ private void produceAbortedMessages() throws Exception {\n     }\n \n     private void produceInitialGlobalTableValues() throws Exception {\n-        produceInitialGlobalTableValues(true);\n-    }\n-\n-    private void produceInitialGlobalTableValues(final boolean enableTransactions) throws Exception {", "originalCommit": "6f0160a32f48f58462b9701025cde38983085b92", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE1Mjc4OQ==", "url": "https://github.com/apache/kafka/pull/8441#discussion_r405152789", "bodyText": "Side cleanup", "author": "mjsax", "createdAt": "2020-04-07T22:34:24Z", "path": "streams/src/test/java/org/apache/kafka/streams/state/internals/StreamThreadStateStoreProviderTest.java", "diffHunk": "@@ -361,7 +360,7 @@ private StreamTask createStreamsTask(final StreamsConfig streamsConfig,\n         final ProcessorStateManager stateManager = new ProcessorStateManager(\n             taskId,\n             Task.TaskType.ACTIVE,\n-            EXACTLY_ONCE.equals(streamsConfig.getString(StreamsConfig.PROCESSING_GUARANTEE_CONFIG)),\n+            StreamThread.eosEnabled(streamsConfig),", "originalCommit": "6f0160a32f48f58462b9701025cde38983085b92", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE1MzQwMw==", "url": "https://github.com/apache/kafka/pull/8441#discussion_r405153403", "bodyText": "General question: we record the same metric for all three processing modes. Why do you need to parametrize this test? \\cc @cadonna", "author": "mjsax", "createdAt": "2020-04-07T22:36:00Z", "path": "streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java", "diffHunk": "@@ -101,8 +101,9 @@\n     @Parameters(name = \"{0}\")\n     public static Collection<Object[]> data() {\n         return Arrays.asList(new Object[][] {\n+            {StreamsConfig.AT_LEAST_ONCE},\n             {StreamsConfig.EXACTLY_ONCE},\n-            {StreamsConfig.AT_LEAST_ONCE}\n+            {StreamsConfig.EXACTLY_ONCE_BETA}\n         });", "originalCommit": "6f0160a32f48f58462b9701025cde38983085b92", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4MjY2OA==", "url": "https://github.com/apache/kafka/pull/8441#discussion_r405182668", "bodyText": "Could we extract the test portion as a common function?", "author": "abbccdda", "createdAt": "2020-04-08T00:01:38Z", "path": "streams/src/test/java/org/apache/kafka/streams/integration/KTableSourceTopicRestartIntegrationTest.java", "diffHunk": "@@ -130,7 +130,7 @@ public void shouldRestoreAndProgressWhenTopicWrittenToDuringRestorationWithEosDi\n     }\n \n     @Test\n-    public void shouldRestoreAndProgressWhenTopicWrittenToDuringRestorationWithEosEnabled() throws Exception {\n+    public void shouldRestoreAndProgressWhenTopicWrittenToDuringRestorationWithEosAlphaEnabled() throws Exception {", "originalCommit": "6f0160a32f48f58462b9701025cde38983085b92", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5e17ffe63df338169dc7ce83f2b4719d59605a67", "url": "https://github.com/apache/kafka/commit/5e17ffe63df338169dc7ce83f2b4719d59605a67", "message": "Github comments", "committedDate": "2020-04-08T05:54:41Z", "type": "commit"}]}