{"pr_number": 8057, "pr_title": "KAFKA-9507 AdminClient should check for missing committed offsets", "pr_createdAt": "2020-02-06T23:48:02Z", "pr_url": "https://github.com/apache/kafka/pull/8057", "timeline": [{"oid": "0a7e2a6e820fae2632a98705494cd1a374d46f9f", "url": "https://github.com/apache/kafka/commit/0a7e2a6e820fae2632a98705494cd1a374d46f9f", "message": "KAFKA-9507 AdminClient should check for missing committed offsets", "committedDate": "2020-02-06T23:43:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE0NzMwNQ==", "url": "https://github.com/apache/kafka/pull/8057#discussion_r376147305", "bodyText": "maybe add a comment here that negative offset indicates there is no committed offset for the topic partition? Would be easier for other people to understand the code.", "author": "apovzner", "createdAt": "2020-02-06T23:52:35Z", "path": "clients/src/main/java/org/apache/kafka/clients/admin/KafkaAdminClient.java", "diffHunk": "@@ -3100,7 +3100,11 @@ void handleResponse(AbstractResponse abstractResponse) {\n                         final Long offset = partitionData.offset;\n                         final String metadata = partitionData.metadata;\n                         final Optional<Integer> leaderEpoch = partitionData.leaderEpoch;\n-                        groupOffsetsListing.put(topicPartition, new OffsetAndMetadata(offset, leaderEpoch, metadata));\n+                        if (offset < 0) {", "originalCommit": "0a7e2a6e820fae2632a98705494cd1a374d46f9f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE0NzExNw==", "url": "https://github.com/apache/kafka/pull/8057#discussion_r376147117", "bodyText": "Let's use OffsetFetchResponse.INVALID_OFFSET", "author": "hachikuji", "createdAt": "2020-02-06T23:51:48Z", "path": "clients/src/test/java/org/apache/kafka/clients/admin/KafkaAdminClientTest.java", "diffHunk": "@@ -1502,15 +1503,18 @@ public void testDescribeConsumerGroupOffsets() throws Exception {\n                     Optional.empty(), \"\", Errors.NONE));\n             responseData.put(myTopicPartition2, new OffsetFetchResponse.PartitionData(20,\n                     Optional.empty(), \"\", Errors.NONE));\n+            responseData.put(myTopicPartition3, new OffsetFetchResponse.PartitionData(-1,", "originalCommit": "0a7e2a6e820fae2632a98705494cd1a374d46f9f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE0NzEzMA==", "url": "https://github.com/apache/kafka/pull/8057#discussion_r376147130", "bodyText": "Could we assert that the map contains the key myTopicPartition3?", "author": "hachikuji", "createdAt": "2020-02-06T23:51:52Z", "path": "clients/src/test/java/org/apache/kafka/clients/admin/KafkaAdminClientTest.java", "diffHunk": "@@ -1502,15 +1503,18 @@ public void testDescribeConsumerGroupOffsets() throws Exception {\n                     Optional.empty(), \"\", Errors.NONE));\n             responseData.put(myTopicPartition2, new OffsetFetchResponse.PartitionData(20,\n                     Optional.empty(), \"\", Errors.NONE));\n+            responseData.put(myTopicPartition3, new OffsetFetchResponse.PartitionData(-1,\n+                    Optional.empty(), \"\", Errors.NONE));\n             env.kafkaClient().prepareResponse(new OffsetFetchResponse(Errors.NONE, responseData));\n \n             final ListConsumerGroupOffsetsResult result = env.adminClient().listConsumerGroupOffsets(\"group-0\");\n             final Map<TopicPartition, OffsetAndMetadata> partitionToOffsetAndMetadata = result.partitionsToOffsetAndMetadata().get();\n \n-            assertEquals(3, partitionToOffsetAndMetadata.size());\n+            assertEquals(4, partitionToOffsetAndMetadata.size());\n             assertEquals(10, partitionToOffsetAndMetadata.get(myTopicPartition0).offset());\n             assertEquals(0, partitionToOffsetAndMetadata.get(myTopicPartition1).offset());\n             assertEquals(20, partitionToOffsetAndMetadata.get(myTopicPartition2).offset());\n+            assertNull(partitionToOffsetAndMetadata.get(myTopicPartition3));", "originalCommit": "0a7e2a6e820fae2632a98705494cd1a374d46f9f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE0ODI4MQ==", "url": "https://github.com/apache/kafka/pull/8057#discussion_r376148281", "bodyText": "I'd suggest rephrasing this:\n\nIf the group does not have a committed offset for this partition, the corresponding value in the returned map will be null.", "author": "hachikuji", "createdAt": "2020-02-06T23:56:15Z", "path": "clients/src/main/java/org/apache/kafka/clients/admin/ListConsumerGroupOffsetsResult.java", "diffHunk": "@@ -40,6 +40,7 @@\n \n     /**\n      * Return a future which yields a map of topic partitions to OffsetAndMetadata objects.\n+     * If the partition does not have a committed offset, the corresponding value will be null", "originalCommit": "0a7e2a6e820fae2632a98705494cd1a374d46f9f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9847c4aec837a89172fc9a09f7fefc7de6af9e51", "url": "https://github.com/apache/kafka/commit/9847c4aec837a89172fc9a09f7fefc7de6af9e51", "message": "addresses PR comments", "committedDate": "2020-02-07T00:11:02Z", "type": "commit"}]}