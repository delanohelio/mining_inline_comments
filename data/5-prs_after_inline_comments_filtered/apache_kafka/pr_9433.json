{"pr_number": 9433, "pr_title": "KAFKA-10607: Consistent behaviour for response errorCounts()", "pr_createdAt": "2020-10-14T11:25:55Z", "pr_url": "https://github.com/apache/kafka/pull/9433", "timeline": [{"oid": "8db3e89ce98745b372e7290e2849821737546b78", "url": "https://github.com/apache/kafka/commit/8db3e89ce98745b372e7290e2849821737546b78", "message": "KAFKA-10607: Consistent behaviour for response errorCounts()", "committedDate": "2020-11-19T17:00:57Z", "type": "commit"}, {"oid": "cb9dd395ea57ac3e6fc3f3f891c65433955b0bba", "url": "https://github.com/apache/kafka/commit/cb9dd395ea57ac3e6fc3f3f891c65433955b0bba", "message": "typo", "committedDate": "2020-11-19T17:00:57Z", "type": "commit"}, {"oid": "468d16f26c0f2ec32fb10f1e1bb003bcc62612d4", "url": "https://github.com/apache/kafka/commit/468d16f26c0f2ec32fb10f1e1bb003bcc62612d4", "message": "Add a test for all RPCs that Errors.NONE is included in the count", "committedDate": "2020-11-19T17:00:57Z", "type": "commit"}, {"oid": "468d16f26c0f2ec32fb10f1e1bb003bcc62612d4", "url": "https://github.com/apache/kafka/commit/468d16f26c0f2ec32fb10f1e1bb003bcc62612d4", "message": "Add a test for all RPCs that Errors.NONE is included in the count", "committedDate": "2020-11-19T17:00:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NjA1MzIxOA==", "url": "https://github.com/apache/kafka/pull/9433#discussion_r676053218", "bodyText": "Why did we change this?", "author": "ijuma", "createdAt": "2021-07-24T22:43:17Z", "path": "clients/src/main/java/org/apache/kafka/common/requests/MetadataResponse.java", "diffHunk": "@@ -109,8 +109,10 @@ public int throttleTimeMs() {\n     @Override\n     public Map<Errors, Integer> errorCounts() {\n         Map<Errors, Integer> errorCounts = new HashMap<>();\n-        data.topics().forEach(metadata ->\n-            updateErrorCounts(errorCounts, Errors.forCode(metadata.errorCode())));\n+        data.topics().forEach(metadata -> {\n+            metadata.partitions().forEach(p -> updateErrorCounts(errorCounts, Errors.forCode(p.errorCode())));", "originalCommit": "468d16f26c0f2ec32fb10f1e1bb003bcc62612d4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NjA3Nzc0Mg==", "url": "https://github.com/apache/kafka/pull/9433#discussion_r676077742", "bodyText": "It includes the partition-level error. It seems to me it follows the docs.\nThe number of each type of error in the response, including {@link Errors#NONE} and top-level errors as well as more specifically scoped errors (such as topic or partition-level errors).", "author": "chia7712", "createdAt": "2021-07-25T03:43:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NjA1MzIxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NjA4MzIyNA==", "url": "https://github.com/apache/kafka/pull/9433#discussion_r676083224", "bodyText": "A metadata request has topics as the \"scoped error\" (one cannot request a metadata request for a given partition). So, it looks to me that we introduced a regression here. We should check if there are similar cases for other requests.", "author": "ijuma", "createdAt": "2021-07-25T04:52:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NjA1MzIxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NjIxMjIyOQ==", "url": "https://github.com/apache/kafka/pull/9433#discussion_r676212229", "bodyText": "A metadata request has topics as the \"scoped error\" (one cannot request a metadata request for a given partition).\n\nI check the server-side code. You are right. This change should be reverted. I will file a PR to fix it ASAP. This behavior can be broken inadvertently (server-side/client-side add/remove specifically scoped error). not sure whether we can prevent it effectively (maybe add more tests)", "author": "chia7712", "createdAt": "2021-07-25T22:42:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NjA1MzIxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NjIxNzU5NA==", "url": "https://github.com/apache/kafka/pull/9433#discussion_r676217594", "bodyText": "#11127", "author": "chia7712", "createdAt": "2021-07-25T23:29:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NjA1MzIxOA=="}], "type": "inlineReview"}]}