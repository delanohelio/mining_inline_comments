{"pr_number": 8118, "pr_title": "KAFKA-9472: Remove deleted Connect tasks from status store", "pr_createdAt": "2020-02-14T20:58:16Z", "pr_url": "https://github.com/apache/kafka/pull/8118", "timeline": [{"oid": "f3aa1df3c32cb6a10e0dfeaeea5061625660926d", "url": "https://github.com/apache/kafka/commit/f3aa1df3c32cb6a10e0dfeaeea5061625660926d", "message": "KAFKA-9472: Add failing integration test", "committedDate": "2020-02-14T21:08:41Z", "type": "commit"}, {"oid": "930561a05ef26ec3fcf090df7f64f0ed59b13746", "url": "https://github.com/apache/kafka/commit/930561a05ef26ec3fcf090df7f64f0ed59b13746", "message": "KAFKA-9472: Delete statuses of no-longer-needed tasks in distributed mode", "committedDate": "2020-02-14T21:08:41Z", "type": "commit"}, {"oid": "02d97ec9e6126a2a8230b2e287143e762ea02c16", "url": "https://github.com/apache/kafka/commit/02d97ec9e6126a2a8230b2e287143e762ea02c16", "message": "KAFKA-9472: Delete statuses of no-longer-needed tasks in standalone mode", "committedDate": "2020-02-14T21:08:41Z", "type": "commit"}, {"oid": "02d97ec9e6126a2a8230b2e287143e762ea02c16", "url": "https://github.com/apache/kafka/commit/02d97ec9e6126a2a8230b2e287143e762ea02c16", "message": "KAFKA-9472: Delete statuses of no-longer-needed tasks in standalone mode", "committedDate": "2020-02-14T21:08:41Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjcwNDA2Nw==", "url": "https://github.com/apache/kafka/pull/8118#discussion_r386704067", "bodyText": "Will the DESTROYED tasks show up in REST so that we can add an assertion to make sure they are not UNASSIGNED?", "author": "ncliang", "createdAt": "2020-03-02T23:02:13Z", "path": "connect/runtime/src/test/java/org/apache/kafka/connect/integration/ConnectWorkerIntegrationTest.java", "diffHunk": "@@ -236,4 +236,39 @@ public void testBrokerCoordinator() throws Exception {\n                 \"Connector tasks did not start in time.\");\n     }\n \n+    /**\n+     * Verify that the number of tasks listed in the REST API is updated correctly after changes to\n+     * the \"tasks.max\" connector configuration.\n+     */\n+    @Test\n+    public void testTaskStatuses() throws Exception {\n+        connect = connectBuilder.build();\n+        // start the clusters\n+        connect.start();\n+\n+        connect.assertions().assertAtLeastNumWorkersAreUp(NUM_WORKERS,\n+            \"Initial group of workers did not start in time.\");\n+\n+        // base connector props\n+        Map<String, String> connectorProps = new HashMap<>();\n+        connectorProps.put(CONNECTOR_CLASS_CONFIG, MonitorableSourceConnector.class.getSimpleName());\n+\n+        // start the connector with only one task\n+        final int initialNumTasks = 1;\n+        connectorProps.put(TASKS_MAX_CONFIG, String.valueOf(initialNumTasks));\n+        connect.configureConnector(CONNECTOR_NAME, connectorProps);\n+        connect.assertions().assertConnectorAndExactlyNumTasksAreRunning(CONNECTOR_NAME, initialNumTasks, \"Connector tasks did not start in time\");\n+\n+        // then reconfigure it to use more tasks\n+        final int increasedNumTasks = 5;\n+        connectorProps.put(TASKS_MAX_CONFIG, String.valueOf(increasedNumTasks));\n+        connect.configureConnector(CONNECTOR_NAME, connectorProps);\n+        connect.assertions().assertConnectorAndExactlyNumTasksAreRunning(CONNECTOR_NAME, increasedNumTasks, \"Connector task statuses did not update in time.\");\n+\n+        // then reconfigure it to use fewer tasks\n+        final int decreasedNumTasks = 3;\n+        connectorProps.put(TASKS_MAX_CONFIG, String.valueOf(decreasedNumTasks));\n+        connect.configureConnector(CONNECTOR_NAME, connectorProps);\n+        connect.assertions().assertConnectorAndExactlyNumTasksAreRunning(CONNECTOR_NAME, decreasedNumTasks, \"Connector task statuses did not update in time.\");", "originalCommit": "02d97ec9e6126a2a8230b2e287143e762ea02c16", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjcwODEzNg==", "url": "https://github.com/apache/kafka/pull/8118#discussion_r386708136", "bodyText": "The framework doesn't actually explicitly write the DESTROYED state to the status backing store, it just writes a null-valued record: \n  \n    \n      kafka/connect/runtime/src/main/java/org/apache/kafka/connect/storage/KafkaStatusBackingStore.java\n    \n    \n         Line 285\n      in\n      d3f9cb5\n    \n    \n    \n    \n\n        \n          \n           final byte[] value = status.state() == ConnectorStatus.State.DESTROYED ? null : serialize(status); \n        \n    \n  \n\n\nThat information is surfaced via the REST API by the lack of the presence of that task in the status info for the connector. So verifying exactly the number of tasks should also verify that the expected number of deleted tasks were removed from the status backing store.", "author": "C0urante", "createdAt": "2020-03-02T23:13:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjcwNDA2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjcyMzgxNw==", "url": "https://github.com/apache/kafka/pull/8118#discussion_r386723817", "bodyText": "Makes sense. And I kind of figured that is likely the reason for lack of explicit assertion there.", "author": "ncliang", "createdAt": "2020-03-03T00:00:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjcwNDA2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ1NTAzOQ==", "url": "https://github.com/apache/kafka/pull/8118#discussion_r428455039", "bodyText": "Invoked when the task is deleted because the connector tasks where reduced or the connector itself was deleted.", "author": "kkonstantine", "createdAt": "2020-05-21T05:39:30Z", "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/TaskStatus.java", "diffHunk": "@@ -61,5 +61,16 @@ public TaskStatus(ConnectorTaskId id, State state, String workerUrl, int generat\n          */\n         void onShutdown(ConnectorTaskId id);\n \n+        /**\n+         * Invoked after the task is no longer needed. This differs from\n+         * {@link #onShutdown(ConnectorTaskId)} in that a shut down task may be expected to restart\n+         * soon (as in the case of a rebalance), whereas a destroyed task will not be restarted\n+         * until and unless a reconfiguration of its connector occurs.\n+         * \n+         * This may occur after the number of tasks for a connector is reduced.", "originalCommit": "02d97ec9e6126a2a8230b2e287143e762ea02c16", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg5NzM2Mw==", "url": "https://github.com/apache/kafka/pull/8118#discussion_r428897363", "bodyText": "Ack, addressed", "author": "C0urante", "createdAt": "2020-05-21T20:31:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ1NTAzOQ=="}], "type": "inlineReview"}, {"oid": "4bd4bc32249c50608039b95ffe8ab338a9c2126b", "url": "https://github.com/apache/kafka/commit/4bd4bc32249c50608039b95ffe8ab338a9c2126b", "message": "KAFKA-9472: Make javadoc for added method conform to style of other methods", "committedDate": "2020-05-21T20:30:54Z", "type": "commit"}]}