{"pr_number": 9418, "pr_title": "KAFKA-10601; Add support for append linger to Raft implementation", "pr_createdAt": "2020-10-12T23:06:10Z", "pr_url": "https://github.com/apache/kafka/pull/9418", "timeline": [{"oid": "e194616b3ad241d0375feecd51a11dac89926444", "url": "https://github.com/apache/kafka/commit/e194616b3ad241d0375feecd51a11dac89926444", "message": "KAFKA-10601; Add support for append linger to Raft implementation", "committedDate": "2020-10-23T23:45:36Z", "type": "commit"}, {"oid": "b2446f4defac4b640e2fc5b7424a67f43dd79e54", "url": "https://github.com/apache/kafka/commit/b2446f4defac4b640e2fc5b7424a67f43dd79e54", "message": "Remove unused class", "committedDate": "2020-10-23T23:45:36Z", "type": "commit"}, {"oid": "b7fb4b0e7f88f2149bf42a9af37b947c3dea07a9", "url": "https://github.com/apache/kafka/commit/b7fb4b0e7f88f2149bf42a9af37b947c3dea07a9", "message": "Remove unused `MetadataRecordSerde`", "committedDate": "2020-10-23T23:45:37Z", "type": "commit"}, {"oid": "d9993b602edde63f44d4bb986ecc2d33767287d1", "url": "https://github.com/apache/kafka/commit/d9993b602edde63f44d4bb986ecc2d33767287d1", "message": "Remove unused `DataOutputWritable`", "committedDate": "2020-10-23T23:45:37Z", "type": "commit"}, {"oid": "00fac83174380afeb68b5a9fe979a5fd0774c23c", "url": "https://github.com/apache/kafka/commit/00fac83174380afeb68b5a9fe979a5fd0774c23c", "message": "Clarify handling when the epoch in `scheduleAppend` does not match", "committedDate": "2020-10-23T23:45:37Z", "type": "commit"}, {"oid": "c5a769c5a1b3d10a410e0fdc3c8f2fccaf7782b0", "url": "https://github.com/apache/kafka/commit/c5a769c5a1b3d10a410e0fdc3c8f2fccaf7782b0", "message": "Rename linger time to `append.linger.ms`", "committedDate": "2020-10-23T23:45:37Z", "type": "commit"}, {"oid": "cf381c0fff222263dacb1edc97e38a6b1fd723b8", "url": "https://github.com/apache/kafka/commit/cf381c0fff222263dacb1edc97e38a6b1fd723b8", "message": "Throw an error if `handleCommit` includes unexpected append", "committedDate": "2020-10-23T23:45:37Z", "type": "commit"}, {"oid": "3dabc1178f9dcb665c677362f8a3bb487fa4fc35", "url": "https://github.com/apache/kafka/commit/3dabc1178f9dcb665c677362f8a3bb487fa4fc35", "message": "`ReplicatedCounter` should check return of `scheduleAppend`", "committedDate": "2020-10-23T23:45:37Z", "type": "commit"}, {"oid": "ae3c2dc21230619220d74133f9e76195f957e6da", "url": "https://github.com/apache/kafka/commit/ae3c2dc21230619220d74133f9e76195f957e6da", "message": "Fix jdk8 compilation error", "committedDate": "2020-10-23T23:45:37Z", "type": "commit"}, {"oid": "ae3c2dc21230619220d74133f9e76195f957e6da", "url": "https://github.com/apache/kafka/commit/ae3c2dc21230619220d74133f9e76195f957e6da", "message": "Fix jdk8 compilation error", "committedDate": "2020-10-23T23:45:37Z", "type": "forcePushed"}, {"oid": "0490965ad582fbae717edbec413abd29a170691a", "url": "https://github.com/apache/kafka/commit/0490965ad582fbae717edbec413abd29a170691a", "message": "Address various comments", "committedDate": "2020-10-26T20:12:55Z", "type": "commit"}, {"oid": "fac5c0a9507f9f40f99dac017242d12500a97d5d", "url": "https://github.com/apache/kafka/commit/fac5c0a9507f9f40f99dac017242d12500a97d5d", "message": "Do not block IO thread in order to drain accumulator", "committedDate": "2020-10-27T03:03:07Z", "type": "commit"}, {"oid": "fac5c0a9507f9f40f99dac017242d12500a97d5d", "url": "https://github.com/apache/kafka/commit/fac5c0a9507f9f40f99dac017242d12500a97d5d", "message": "Do not block IO thread in order to drain accumulator", "committedDate": "2020-10-27T03:03:07Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTU2NjE1OA==", "url": "https://github.com/apache/kafka/pull/9418#discussion_r515566158", "bodyText": "@hachikuji Should we move this state to LeaderState? We can delegate maybeCloseAccumulator to the transitionTo... functions.\nI have a similar requirements for snapshot. I am currently adding a SnapshotWriter to FollowerState to track this state. I haven't implemented it yet but I am thinking of making FollowerState Closeable which will handle the cleanup. The transitionTo... functions have the additional responsibility of calling close if necessary.\nWhat do you think?", "author": "jsancio", "createdAt": "2020-11-01T02:32:40Z", "path": "raft/src/main/java/org/apache/kafka/raft/KafkaRaftClient.java", "diffHunk": "@@ -276,6 +299,17 @@ private void onBecomeLeader(long currentTimeMs) {\n         resetConnections();\n \n         kafkaRaftMetrics.maybeUpdateElectionLatency(currentTimeMs);\n+\n+        accumulator = new BatchAccumulator<>(", "originalCommit": "fac5c0a9507f9f40f99dac017242d12500a97d5d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}