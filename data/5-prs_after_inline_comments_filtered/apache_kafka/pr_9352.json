{"pr_number": 9352, "pr_title": "KAFKA-10533; KafkaRaftClient should flush log after appends", "pr_createdAt": "2020-09-29T18:40:19Z", "pr_url": "https://github.com/apache/kafka/pull/9352", "timeline": [{"oid": "6b9eec4850bc57386444867c6e49025c2aba38d5", "url": "https://github.com/apache/kafka/commit/6b9eec4850bc57386444867c6e49025c2aba38d5", "message": "KAFKA-10533; RaftClient should flush log after appends", "committedDate": "2020-10-06T17:14:09Z", "type": "commit"}, {"oid": "a129ac7de29fcb57d4b94fc3f362b59c2c46bc3a", "url": "https://github.com/apache/kafka/commit/a129ac7de29fcb57d4b94fc3f362b59c2c46bc3a", "message": "Fix metric update for disabled APIs in test raft server", "committedDate": "2020-10-06T17:14:10Z", "type": "commit"}, {"oid": "33183d3285af9555ec98e96e6c1a372f8f3376dc", "url": "https://github.com/apache/kafka/commit/33183d3285af9555ec98e96e6c1a372f8f3376dc", "message": "Expose `lastFlushedOffset` from `ReplicatedLog` (plus some small cleanups)", "committedDate": "2020-10-06T17:14:10Z", "type": "commit"}, {"oid": "944673b8f7d8b8deb07c2632c789647cfa5c4548", "url": "https://github.com/apache/kafka/commit/944673b8f7d8b8deb07c2632c789647cfa5c4548", "message": "Only call flush after all writes have been appended", "committedDate": "2020-10-06T17:14:10Z", "type": "commit"}, {"oid": "944673b8f7d8b8deb07c2632c789647cfa5c4548", "url": "https://github.com/apache/kafka/commit/944673b8f7d8b8deb07c2632c789647cfa5c4548", "message": "Only call flush after all writes have been appended", "committedDate": "2020-10-06T17:14:10Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU2NzU5Mw==", "url": "https://github.com/apache/kafka/pull/9352#discussion_r503567593", "bodyText": "Just to clarify this is not a correctness bugfix, but just to optimize away unnecessary purgatory access right?", "author": "guozhangwang", "createdAt": "2020-10-12T22:35:57Z", "path": "raft/src/main/java/org/apache/kafka/raft/KafkaRaftClient.java", "diffHunk": "@@ -193,8 +193,9 @@ private void updateFollowerHighWatermark(\n     ) {\n         highWatermarkOpt.ifPresent(highWatermark -> {\n             long newHighWatermark = Math.min(endOffset().offset, highWatermark);\n-            state.updateHighWatermark(OptionalLong.of(newHighWatermark));\n-            updateHighWatermark(state, currentTimeMs);\n+            if (state.updateHighWatermark(OptionalLong.of(newHighWatermark))) {", "originalCommit": "944673b8f7d8b8deb07c2632c789647cfa5c4548", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU3ODExNA==", "url": "https://github.com/apache/kafka/pull/9352#discussion_r503578114", "bodyText": "Yeah, right. Also to avoid the log spam when the high watermark doesn't actually increment.", "author": "hachikuji", "createdAt": "2020-10-12T23:08:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU2NzU5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU3MDA0NA==", "url": "https://github.com/apache/kafka/pull/9352#discussion_r503570044", "bodyText": "Good catch.", "author": "guozhangwang", "createdAt": "2020-10-12T22:43:47Z", "path": "raft/src/main/java/org/apache/kafka/raft/LeaderState.java", "diffHunk": "@@ -114,14 +113,6 @@ private boolean updateHighWatermark() {\n         return false;\n     }\n \n-    private OptionalLong quorumMajorityFetchTimestamp() {", "originalCommit": "944673b8f7d8b8deb07c2632c789647cfa5c4548", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU3MDI2NA==", "url": "https://github.com/apache/kafka/pull/9352#discussion_r503570264", "bodyText": "Is this function going to be used for non-testing code in the future?", "author": "guozhangwang", "createdAt": "2020-10-12T22:44:29Z", "path": "raft/src/main/java/org/apache/kafka/raft/ReplicatedLog.java", "diffHunk": "@@ -103,6 +103,16 @@\n      */\n     void updateHighWatermark(LogOffsetMetadata offsetMetadata);\n \n+    /**\n+     * Flush the current log to disk.\n+     */\n+    void flush();\n+\n+    /**\n+     * Get the last offset which has been flushed to disk.\n+     */\n+    long lastFlushedOffset();", "originalCommit": "944673b8f7d8b8deb07c2632c789647cfa5c4548", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU3ODcxMA==", "url": "https://github.com/apache/kafka/pull/9352#discussion_r503578710", "bodyText": "I think we will need it to implement the leader deferred fsync or any other optimization which allows the followers to read unflushed data from the leader. I decided to add it to the interface since we have a trivial implementation for it in KafkaMetadataLog already. We can save it for later if you prefer.", "author": "hachikuji", "createdAt": "2020-10-12T23:10:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU3MDI2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU4NTIyOA==", "url": "https://github.com/apache/kafka/pull/9352#discussion_r503585228", "bodyText": "nah, I'm just curious to see what's in your future plan. Let's just keep it.", "author": "guozhangwang", "createdAt": "2020-10-12T23:34:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU3MDI2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU3MjM5Ng==", "url": "https://github.com/apache/kafka/pull/9352#discussion_r503572396", "bodyText": "nit: maybe we can wrap the flushing and hwm updating logic in a flushFollowerLog as well.", "author": "guozhangwang", "createdAt": "2020-10-12T22:50:43Z", "path": "raft/src/main/java/org/apache/kafka/raft/KafkaRaftClient.java", "diffHunk": "@@ -985,6 +986,8 @@ private boolean handleFetchResponse(\n                 Records records = (Records) partitionResponse.recordSet();\n                 if (records.sizeInBytes() > 0) {\n                     LogAppendInfo info = log.appendAsFollower(records);\n+                    log.flush();", "originalCommit": "944673b8f7d8b8deb07c2632c789647cfa5c4548", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU3ODgxNg==", "url": "https://github.com/apache/kafka/pull/9352#discussion_r503578816", "bodyText": "Makes sense.", "author": "hachikuji", "createdAt": "2020-10-12T23:10:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU3MjM5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwNTA4Nw==", "url": "https://github.com/apache/kafka/pull/9352#discussion_r503605087", "bodyText": "I considered this, but it's a little more awkward since the high watermark is coming from the request. However, I pushed an update which factors out an appendAsFollower call which is nearly symmetric with the existing appendAsLeader.", "author": "hachikuji", "createdAt": "2020-10-13T00:39:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU3MjM5Ng=="}], "type": "inlineReview"}, {"oid": "bceb07ff9233d969d13108c3d15fefbe665ed873", "url": "https://github.com/apache/kafka/commit/bceb07ff9233d969d13108c3d15fefbe665ed873", "message": "Add `appendAsFollower` to go along with `appendAsLeader`", "committedDate": "2020-10-13T00:38:44Z", "type": "commit"}]}