{"pr_number": 8356, "pr_title": "KAFKA-9441: Cleanup Streams metrics for removed task commit latency metrics", "pr_createdAt": "2020-03-25T23:59:29Z", "pr_url": "https://github.com/apache/kafka/pull/8356", "timeline": [{"oid": "b69f3abe847fd179e7bb203a7dd019f7e25effb6", "url": "https://github.com/apache/kafka/commit/b69f3abe847fd179e7bb203a7dd019f7e25effb6", "message": "KAFKA-9441: Cleanup Streams metrics for removed task commit latency metrics", "committedDate": "2020-03-27T20:37:06Z", "type": "commit"}, {"oid": "b69f3abe847fd179e7bb203a7dd019f7e25effb6", "url": "https://github.com/apache/kafka/commit/b69f3abe847fd179e7bb203a7dd019f7e25effb6", "message": "KAFKA-9441: Cleanup Streams metrics for removed task commit latency metrics", "committedDate": "2020-03-27T20:37:06Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE1MTg4Ng==", "url": "https://github.com/apache/kafka/pull/8356#discussion_r401151886", "bodyText": "req: Please keep this test and do only remove the following part (and of course the parts that become obsolete):\nStreamsMetricsImpl.addAvgAndMaxToSensor(\n            expectedSensor,\n            TASK_LEVEL_GROUP,\n            tagMap,\n            operationLatency,\n            avgLatencyDescription,\n            maxLatencyDescription\n        );", "author": "cadonna", "createdAt": "2020-03-31T19:13:08Z", "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/metrics/ThreadMetricsTest.java", "diffHunk": "@@ -298,41 +297,4 @@ public void shouldGetSkipRecordSensor() {\n         assertThat(sensor, is(expectedSensor));\n     }\n \n-    @Test\n-    public void shouldGetCommitOverTasksSensor() {\n-        final String operation = \"commit\";\n-        final String operationLatency = operation + StreamsMetricsImpl.LATENCY_SUFFIX;\n-        final String totalDescription =\n-            \"The total number of calls to commit over all tasks assigned to one stream thread\";\n-        final String rateDescription =\n-            \"The average per-second number of calls to commit over all tasks assigned to one stream thread\";\n-        final String avgLatencyDescription =\n-            \"The average commit latency over all tasks assigned to one stream thread\";\n-        final String maxLatencyDescription =\n-            \"The maximum commit latency over all tasks assigned to one stream thread\";\n-        expect(streamsMetrics.threadLevelSensor(THREAD_ID, operation, RecordingLevel.DEBUG)).andReturn(expectedSensor);\n-        expect(streamsMetrics.taskLevelTagMap(THREAD_ID, ROLLUP_VALUE)).andReturn(tagMap);\n-        StreamsMetricsImpl.addInvocationRateAndCountToSensor(\n-            expectedSensor,\n-            TASK_LEVEL_GROUP,\n-            tagMap,\n-            operation,\n-            rateDescription,\n-            totalDescription\n-        );\n-        StreamsMetricsImpl.addAvgAndMaxToSensor(\n-            expectedSensor,\n-            TASK_LEVEL_GROUP,\n-            tagMap,\n-            operationLatency,\n-            avgLatencyDescription,\n-            maxLatencyDescription\n-        );\n-        replay(StreamsMetricsImpl.class, streamsMetrics);\n-\n-        final Sensor sensor = ThreadMetrics.commitOverTasksSensor(THREAD_ID, streamsMetrics);\n-\n-        verify(StreamsMetricsImpl.class, streamsMetrics);\n-        assertThat(sensor, is(expectedSensor));\n-    }", "originalCommit": "b69f3abe847fd179e7bb203a7dd019f7e25effb6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI2NzE2MA==", "url": "https://github.com/apache/kafka/pull/8356#discussion_r401267160", "bodyText": "Ack. Good call.", "author": "mjsax", "createdAt": "2020-03-31T23:10:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE1MTg4Ng=="}], "type": "inlineReview"}, {"oid": "f372fc182800749dff01fa3a09cb766de7f85a82", "url": "https://github.com/apache/kafka/commit/f372fc182800749dff01fa3a09cb766de7f85a82", "message": "Github comments", "committedDate": "2020-03-31T23:10:03Z", "type": "commit"}]}