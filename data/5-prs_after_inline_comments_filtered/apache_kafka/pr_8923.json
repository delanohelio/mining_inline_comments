{"pr_number": 8923, "pr_title": "KAFKA-6435: KIP-623 Add internal topics option to streamResetter", "pr_createdAt": "2020-06-24T20:04:27Z", "pr_url": "https://github.com/apache/kafka/pull/8923", "timeline": [{"oid": "265838480db8e0fdc1f6c25c5829dc2bfe12414e", "url": "https://github.com/apache/kafka/commit/265838480db8e0fdc1f6c25c5829dc2bfe12414e", "message": "KAFKA-6435: Add internal topics option to streamResetter", "committedDate": "2020-08-16T08:22:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDE2NjgwMg==", "url": "https://github.com/apache/kafka/pull/8923#discussion_r614166802", "bodyText": "unnecessary whitespace change", "author": "wcarlson5", "createdAt": "2021-04-15T15:22:26Z", "path": "core/src/main/scala/kafka/tools/StreamsResetter.java", "diffHunk": "@@ -248,7 +257,7 @@ private void parseArguments(final String[] args) {\n             .ofType(String.class)\n             .describedAs(\"file name\");\n         forceOption = optionParser.accepts(\"force\", \"Force the removal of members of the consumer group (intended to remove stopped members if a long session timeout was used). \" +\n-                \"Make sure to shut down all stream applications when this option is specified to avoid unexpected rebalances.\");", "originalCommit": "265838480db8e0fdc1f6c25c5829dc2bfe12414e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDE2NzA0MA==", "url": "https://github.com/apache/kafka/pull/8923#discussion_r614167040", "bodyText": "line is too long", "author": "wcarlson5", "createdAt": "2021-04-15T15:22:45Z", "path": "core/src/main/scala/kafka/tools/StreamsResetter.java", "diffHunk": "@@ -225,6 +229,11 @@ private void parseArguments(final String[] args) {\n             .ofType(String.class)\n             .withValuesSeparatedBy(',')\n             .describedAs(\"list\");\n+        internalTopicsOption = optionParser.accepts(\"internal-topics\", \"Comma-separated list of internal topics to delete. Must be a subset of the internal topics marked for deletion by the default behaviour (do a dry-run without this option to view these topics).\")", "originalCommit": "265838480db8e0fdc1f6c25c5829dc2bfe12414e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDE3NDg3Ng==", "url": "https://github.com/apache/kafka/pull/8923#discussion_r614174876", "bodyText": "something like inferredInternalTopics.containsAll(specifiedInternalTopics) might be easier to understand here", "author": "wcarlson5", "createdAt": "2021-04-15T15:32:05Z", "path": "core/src/main/scala/kafka/tools/StreamsResetter.java", "diffHunk": "@@ -642,22 +651,38 @@ private boolean isIntermediateTopic(final String topic) {\n         return options.valuesOf(intermediateTopicsOption).contains(topic);\n     }\n \n-    private void maybeDeleteInternalTopics(final Admin adminClient, final boolean dryRun) {\n-        System.out.println(\"Deleting all internal/auto-created topics for application \" + options.valueOf(applicationIdOption));\n-        final List<String> topicsToDelete = new ArrayList<>();\n-        for (final String listing : allTopics) {\n-            if (isInternalTopic(listing)) {\n-                if (!dryRun) {\n-                    topicsToDelete.add(listing);\n-                } else {\n-                    System.out.println(\"Topic: \" + listing);\n-                }\n+    private int maybeDeleteInternalTopics(final Admin adminClient, final boolean dryRun) {\n+        final List<String> inferredInternalTopics = allTopics.stream()\n+                .filter(this::isInferredInternalTopic)\n+                .collect(Collectors.toList());\n+        final List<String> specifiedInternalTopics = options.valuesOf(internalTopicsOption);\n+        final List<String> topicsToDelete;\n+\n+        if (!specifiedInternalTopics.isEmpty()) {\n+            final List<String> notFoundInternalTopics = specifiedInternalTopics.stream()\n+                    .filter(topic -> !inferredInternalTopics.contains(topic))\n+                    .collect(Collectors.toList());\n+            if (!notFoundInternalTopics.isEmpty()) {", "originalCommit": "265838480db8e0fdc1f6c25c5829dc2bfe12414e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f0ec0b82f87b9546eb5b28588d6820cfb7eab3a6", "url": "https://github.com/apache/kafka/commit/f0ec0b82f87b9546eb5b28588d6820cfb7eab3a6", "message": "KAFKA-6435: Add internal topics option to streamResetter", "committedDate": "2021-04-22T10:44:53Z", "type": "forcePushed"}, {"oid": "a673068e75e78c714bf6effd0ea2f8d87b8a59f6", "url": "https://github.com/apache/kafka/commit/a673068e75e78c714bf6effd0ea2f8d87b8a59f6", "message": "KAFKA-6435: Add internal topics option to streamResetter", "committedDate": "2021-04-22T11:06:26Z", "type": "commit"}, {"oid": "a673068e75e78c714bf6effd0ea2f8d87b8a59f6", "url": "https://github.com/apache/kafka/commit/a673068e75e78c714bf6effd0ea2f8d87b8a59f6", "message": "KAFKA-6435: Add internal topics option to streamResetter", "committedDate": "2021-04-22T11:06:26Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMDYzOTQ4Nw==", "url": "https://github.com/apache/kafka/pull/8923#discussion_r620639487", "bodyText": "nit: we should also filter for internal topics specifically, like what's done in StreamsResetter#matchesInternalTopicFormat. Actually you can probably just invoke that method directly for the filter here (it can be made static if necessary)", "author": "ableegoldman", "createdAt": "2021-04-26T20:50:51Z", "path": "streams/src/test/java/org/apache/kafka/streams/integration/AbstractResetIntegrationTest.java", "diffHunk": "@@ -205,6 +206,34 @@ private void add10InputElements() {\n         }\n     }\n \n+    @Test\n+    public void testResetWhenInternalTopicsAreSpecified() throws Exception {\n+        final String appID = IntegrationTestUtils.safeUniqueTestName(getClass(), testName);\n+        streamsConfig.put(StreamsConfig.APPLICATION_ID_CONFIG, appID);\n+\n+        // RUN\n+        streams = new KafkaStreams(setupTopologyWithIntermediateTopic(true, OUTPUT_TOPIC_2), streamsConfig);\n+        streams.start();\n+        IntegrationTestUtils.waitUntilMinKeyValueRecordsReceived(resultConsumerConfig, OUTPUT_TOPIC, 10);\n+\n+        streams.close();\n+        waitForEmptyConsumerGroup(adminClient, appID, TIMEOUT_MULTIPLIER * STREAMS_CONSUMER_TIMEOUT);\n+\n+        // RESET\n+        streams.cleanUp();\n+\n+        final List<String> internalTopics = cluster.getAllTopicsInCluster().stream()\n+                .filter(topic -> topic.startsWith(appID + \"-\"))", "originalCommit": "a673068e75e78c714bf6effd0ea2f8d87b8a59f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMTUzODUyOA==", "url": "https://github.com/apache/kafka/pull/8923#discussion_r621538528", "bodyText": "done now :)", "author": "JoelWee", "createdAt": "2021-04-27T19:35:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMDYzOTQ4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMDY0NTg2NQ==", "url": "https://github.com/apache/kafka/pull/8923#discussion_r620645865", "bodyText": "Just wondering, why put this test here instead of in AbstractResetIntegrationTest?", "author": "ableegoldman", "createdAt": "2021-04-26T21:00:34Z", "path": "streams/src/test/java/org/apache/kafka/streams/integration/ResetIntegrationTest.java", "diffHunk": "@@ -151,6 +151,22 @@ public void shouldNotAllowToResetWhenIntermediateTopicAbsent() {\n         Assert.assertEquals(1, exitCode);\n     }\n \n+    @Test\n+    public void shouldNotAllowToResetWhenSpecifiedInternalTopicAbsent() {", "originalCommit": "a673068e75e78c714bf6effd0ea2f8d87b8a59f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMDY0ODUwNw==", "url": "https://github.com/apache/kafka/pull/8923#discussion_r620648507", "bodyText": "Also, can we add a test like this but for the case where the topic does exist but just isn't a subset of inferred internal topics?", "author": "ableegoldman", "createdAt": "2021-04-26T21:04:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMDY0NTg2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMTU0MjM5Mw==", "url": "https://github.com/apache/kafka/pull/8923#discussion_r621542393", "bodyText": "It seems more natural to group it together with the other shouldNotAllowToResetWhen... tests. E.g. shouldNotAllowToResetWhenIntermediateTopicAbsent, shouldNotAllowToResetWhenInputTopicAbsent, etc.\nHappy to shift it over to AbstractResetIntegrationTest.java", "author": "JoelWee", "createdAt": "2021-04-27T19:38:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMDY0NTg2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMTY2NTYzOQ==", "url": "https://github.com/apache/kafka/pull/8923#discussion_r621665639", "bodyText": "Hah, maybe I should have asked why are all of those tests not also in AbstractResetIntegrationTest. Seems like almost everything that applies here would also be good to test in the SSL version of the test (which AFAICT is the only other one to extend the AbstractResetIntegrationTest).\nBut I'm ok with leaving it as is, and maybe we can just look into this as followup work unless there is a good reason for them to be where they are (which I can't think of but my imagination is not endless)", "author": "ableegoldman", "createdAt": "2021-04-27T22:41:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMDY0NTg2NQ=="}], "type": "inlineReview"}, {"oid": "7479f201610e7e5d41a5e246a80a94aa9cbf7737", "url": "https://github.com/apache/kafka/commit/7479f201610e7e5d41a5e246a80a94aa9cbf7737", "message": "KAFKA-6435: Clean up code and improve tests", "committedDate": "2021-04-27T19:27:58Z", "type": "commit"}]}