{"pr_number": 8030, "pr_title": "KAFKA-9492; Ignore record errors in ProduceResponse for older versions", "pr_createdAt": "2020-02-01T16:57:21Z", "pr_url": "https://github.com/apache/kafka/pull/8030", "timeline": [{"oid": "4e7132184b0e242d772193bc02522ca188c12f43", "url": "https://github.com/apache/kafka/commit/4e7132184b0e242d772193bc02522ca188c12f43", "message": "KAFKA-9492; Ignore record errors in ProduceResponse for older versions", "committedDate": "2020-02-01T16:55:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg2Mjc3OA==", "url": "https://github.com/apache/kafka/pull/8030#discussion_r373862778", "bodyText": "Maybe this should be in ProduceResponseTest? We started writing this type of test in dedicated classes as this class was getting too large.", "author": "ijuma", "createdAt": "2020-02-02T17:41:46Z", "path": "clients/src/test/java/org/apache/kafka/common/requests/RequestResponseTest.java", "diffHunk": "@@ -653,6 +654,33 @@ public void produceResponseVersionTest() {\n         assertEquals(\"Response data does not match\", responseData, v2Response.responses());\n     }\n \n+    @Test\n+    public void produceResponseRecordErrorsTest() {", "originalCommit": "4e7132184b0e242d772193bc02522ca188c12f43", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDYyNjIyNA==", "url": "https://github.com/apache/kafka/pull/8030#discussion_r374626224", "bodyText": "@ijuma Thanks for the review. I have moved this test and the other two produce response tests to ProduceResponseTest.", "author": "rajinisivaram", "createdAt": "2020-02-04T11:52:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg2Mjc3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE5MTEzMg==", "url": "https://github.com/apache/kafka/pull/8030#discussion_r374191132", "bodyText": "Should we convert the type of LOG_APPEND_TIME_KEY_NAME from long to Field.Int64? the benefit of using Field.Int64 is shown below.\n\nremove the duplicate code of converting LOG_APPEND_TIME_KEY_NAME  to Field.Int64\nuse more readable method - getOrElse", "author": "chia7712", "createdAt": "2020-02-03T16:07:17Z", "path": "clients/src/main/java/org/apache/kafka/common/requests/ProduceResponse.java", "diffHunk": "@@ -222,7 +222,8 @@ public ProduceResponse(Struct struct) {\n                 int partition = partRespStruct.get(PARTITION_ID);\n                 Errors error = Errors.forCode(partRespStruct.get(ERROR_CODE));\n                 long offset = partRespStruct.getLong(BASE_OFFSET_KEY_NAME);\n-                long logAppendTime = partRespStruct.getLong(LOG_APPEND_TIME_KEY_NAME);\n+                long logAppendTime = partRespStruct.hasField(LOG_APPEND_TIME_KEY_NAME) ?", "originalCommit": "4e7132184b0e242d772193bc02522ca188c12f43", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDYyNzQzNQ==", "url": "https://github.com/apache/kafka/pull/8030#discussion_r374627435", "bodyText": "@chia7712 Thanks for the review. As @hachikuji mentioned, we can convert to use the generated classes, so will leave that for a separate PR.", "author": "rajinisivaram", "createdAt": "2020-02-04T11:55:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE5MTEzMg=="}], "type": "inlineReview"}, {"oid": "2585cc329ad15ec0b3a1e760018a6a4bf08917bd", "url": "https://github.com/apache/kafka/commit/2585cc329ad15ec0b3a1e760018a6a4bf08917bd", "message": "Address review comment", "committedDate": "2020-02-04T11:48:14Z", "type": "commit"}]}