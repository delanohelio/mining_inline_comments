{"pr_number": 9144, "pr_title": "KAFKA-9705: (part-1) add redirection fields in the request header", "pr_createdAt": "2020-08-07T22:43:31Z", "pr_url": "https://github.com/apache/kafka/pull/9144", "timeline": [{"oid": "9462dd647ea2d81da3370e2159226c5e2300399c", "url": "https://github.com/apache/kafka/commit/9462dd647ea2d81da3370e2159226c5e2300399c", "message": "add redirection fields in the request header", "committedDate": "2020-08-07T23:27:32Z", "type": "commit"}, {"oid": "9462dd647ea2d81da3370e2159226c5e2300399c", "url": "https://github.com/apache/kafka/commit/9462dd647ea2d81da3370e2159226c5e2300399c", "message": "add redirection fields in the request header", "committedDate": "2020-08-07T23:27:32Z", "type": "forcePushed"}, {"oid": "f40b11ba5478f6605cc9a2281be492d4e93ee4ad", "url": "https://github.com/apache/kafka/commit/f40b11ba5478f6605cc9a2281be492d4e93ee4ad", "message": "test socket server", "committedDate": "2020-08-07T23:46:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzMzMDUyOQ==", "url": "https://github.com/apache/kafka/pull/9144#discussion_r467330529", "bodyText": "I think it would be good to have a constructor that didn't have the two forwarding fields, to avoid changing a large number of tests.", "author": "cmccabe", "createdAt": "2020-08-07T23:49:37Z", "path": "clients/src/main/java/org/apache/kafka/common/requests/RequestHeader.java", "diffHunk": "@@ -37,11 +37,22 @@ public RequestHeader(Struct struct, short headerVersion) {\n     }\n \n     public RequestHeader(ApiKeys requestApiKey, short requestVersion, String clientId, int correlationId) {\n-        this(new RequestHeaderData().\n-                setRequestApiKey(requestApiKey.id).\n-                setRequestApiVersion(requestVersion).\n-                setClientId(clientId).\n-                setCorrelationId(correlationId),\n+        this(requestApiKey, requestVersion, clientId, correlationId, null, null);\n+    }\n+\n+    public RequestHeader(ApiKeys requestApiKey,", "originalCommit": "f40b11ba5478f6605cc9a2281be492d4e93ee4ad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk3NTc1Nw==", "url": "https://github.com/apache/kafka/pull/9144#discussion_r467975757", "bodyText": "We do have a constructor which doesn't contain the two fields above.", "author": "abbccdda", "createdAt": "2020-08-10T15:14:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzMzMDUyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzMzMDcwNQ==", "url": "https://github.com/apache/kafka/pull/9144#discussion_r467330705", "bodyText": "Does this need to be here?  I'm concerned that having it here will eventually lead to us using it for authorization, which it shouldn't be.", "author": "cmccabe", "createdAt": "2020-08-07T23:50:33Z", "path": "clients/src/main/java/org/apache/kafka/server/authorizer/AuthorizableRequestContext.java", "diffHunk": "@@ -69,4 +69,11 @@\n      * Returns the correlation id from the request header.\n      */\n     int correlationId();\n+\n+    /**\n+     * Returns the initial principal name for a forwarded request.\n+     */\n+    default String initialPrincipalName() {", "originalCommit": "f40b11ba5478f6605cc9a2281be492d4e93ee4ad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk3NTM5NA==", "url": "https://github.com/apache/kafka/pull/9144#discussion_r467975394", "bodyText": "Yea, we need to have it here for audit logging. We could of course have the meta comment suggest \"do not use for authorization\"", "author": "abbccdda", "createdAt": "2020-08-10T15:14:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzMzMDcwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg0MTgyNQ==", "url": "https://github.com/apache/kafka/pull/9144#discussion_r468841825", "bodyText": "Yes, can you add a comment here saying this should be used for logging, but not for authorization?", "author": "cmccabe", "createdAt": "2020-08-11T20:22:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzMzMDcwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA5MDM2MA==", "url": "https://github.com/apache/kafka/pull/9144#discussion_r468090360", "bodyText": "nit: Could we use camel case like the others?", "author": "dajac", "createdAt": "2020-08-10T18:16:19Z", "path": "clients/src/main/java/org/apache/kafka/common/requests/RequestContext.java", "diffHunk": "@@ -74,7 +77,9 @@ public RequestAndSize parseRequest(ByteBuffer buffer) {\n                         \", apiVersion: \" + header.apiVersion() +\n                         \", connectionId: \" + connectionId +\n                         \", listenerName: \" + listenerName +\n-                        \", principal: \" + principal, ex);\n+                        \", principal: \" + principal +\n+                        \", initial principal: \" + initialPrincipalName() +\n+                        \", initial client id: \" + header.initialClientId(), ex);", "originalCommit": "f40b11ba5478f6605cc9a2281be492d4e93ee4ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "bc137fa4011d10e8bc59cc4e0a6803d0bd090315", "url": "https://github.com/apache/kafka/commit/bc137fa4011d10e8bc59cc4e0a6803d0bd090315", "message": "replace with inter broker listener check", "committedDate": "2020-08-11T01:38:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg0MDIzMQ==", "url": "https://github.com/apache/kafka/pull/9144#discussion_r468840231", "bodyText": "How about privilegedListener?  Then we could add a comment explaining what that means:\n\nif there is a control plane listener, only it is privileged\notherwise, if there is an inter broker listener, only it is privileged\notherwise, all listeners are privileged", "author": "cmccabe", "createdAt": "2020-08-11T20:19:04Z", "path": "clients/src/main/java/org/apache/kafka/common/network/KafkaChannel.java", "diffHunk": "@@ -147,6 +153,7 @@ public KafkaChannel(String id, TransportLayer transportLayer, Supplier<Authentic\n         this.disconnected = false;\n         this.muteState = ChannelMuteState.NOT_MUTED;\n         this.state = ChannelState.NOT_CONNECTED;\n+        this.isInterBrokerListener = isInterBrokerListener;", "originalCommit": "bc137fa4011d10e8bc59cc4e0a6803d0bd090315", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg0MDcxMg==", "url": "https://github.com/apache/kafka/pull/9144#discussion_r468840712", "bodyText": "\"or null if this was not redirected\"", "author": "cmccabe", "createdAt": "2020-08-11T20:20:01Z", "path": "clients/src/main/java/org/apache/kafka/clients/ClientRequest.java", "diffHunk": "@@ -42,6 +44,8 @@\n      * @param clientId The client ID to use for the header\n      * @param createdTimeMs The unix timestamp in milliseconds for the time at which this request was created.\n      * @param expectResponse Should we expect a response message or is this request complete once it is sent?\n+     * @param initialPrincipalName The initial principal name if this is a redirect request", "originalCommit": "bc137fa4011d10e8bc59cc4e0a6803d0bd090315", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg0MDc1NA==", "url": "https://github.com/apache/kafka/pull/9144#discussion_r468840754", "bodyText": "\"or null if this was not redirected\"", "author": "cmccabe", "createdAt": "2020-08-11T20:20:06Z", "path": "clients/src/main/java/org/apache/kafka/clients/ClientRequest.java", "diffHunk": "@@ -42,6 +44,8 @@\n      * @param clientId The client ID to use for the header\n      * @param createdTimeMs The unix timestamp in milliseconds for the time at which this request was created.\n      * @param expectResponse Should we expect a response message or is this request complete once it is sent?\n+     * @param initialPrincipalName The initial principal name if this is a redirect request\n+     * @param initialClientId The initial client id if this is a redirect request", "originalCommit": "bc137fa4011d10e8bc59cc4e0a6803d0bd090315", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg0MTIyMw==", "url": "https://github.com/apache/kafka/pull/9144#discussion_r468841223", "bodyText": "can we have an overload for this that doesn't have these two fields, and defaults them to null?  It would really help avoid having so much churn in junit tests.", "author": "cmccabe", "createdAt": "2020-08-11T20:20:55Z", "path": "clients/src/main/java/org/apache/kafka/clients/KafkaClient.java", "diffHunk": "@@ -189,16 +189,18 @@ ClientRequest newClientRequest(String nodeId, AbstractRequest.Builder<?> request\n      *                         cancelling the request. The request may get cancelled sooner if the socket disconnects\n      *                         for any reason including if another pending request to the same node timed out first.\n      * @param callback the callback to invoke when we get a response\n+     * @param initialPrincipalName the initial client principal name, when building a forward request\n+     * @param initialClientId the initial client id, when building a forward request\n      */\n     ClientRequest newClientRequest(String nodeId,\n                                    AbstractRequest.Builder<?> requestBuilder,\n                                    long createdTimeMs,\n                                    boolean expectResponse,\n                                    int requestTimeoutMs,\n+                                   String initialPrincipalName,", "originalCommit": "bc137fa4011d10e8bc59cc4e0a6803d0bd090315", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODkzOTEwOQ==", "url": "https://github.com/apache/kafka/pull/9144#discussion_r468939109", "bodyText": "I'm not sure it's meaningful to add an overload function just for the sake of minimizing code changes. Plus, we should not underestimate the more code changes potentially being added when we have 2 almost identical request builder function.", "author": "abbccdda", "createdAt": "2020-08-12T00:34:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg0MTIyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQ3Nzk5OA==", "url": "https://github.com/apache/kafka/pull/9144#discussion_r472477998", "bodyText": "Fair enough", "author": "cmccabe", "createdAt": "2020-08-18T20:36:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg0MTIyMw=="}], "type": "inlineReview"}, {"oid": "ef5503d0c236a28c4341f3c8ee3883f20f9c0996", "url": "https://github.com/apache/kafka/commit/ef5503d0c236a28c4341f3c8ee3883f20f9c0996", "message": "privileged listener", "committedDate": "2020-08-12T19:41:55Z", "type": "commit"}, {"oid": "c0ef74ea37a1f0e176b69d24d954b27057ebe1a3", "url": "https://github.com/apache/kafka/commit/c0ef74ea37a1f0e176b69d24d954b27057ebe1a3", "message": "address minor comments", "committedDate": "2020-08-12T19:52:57Z", "type": "commit"}]}