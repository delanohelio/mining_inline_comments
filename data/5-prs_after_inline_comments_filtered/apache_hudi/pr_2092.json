{"pr_number": 2092, "pr_title": "[HUDI-1285] Fix merge on read DAG to make docker demo pass", "pr_createdAt": "2020-09-16T04:14:43Z", "pr_url": "https://github.com/apache/hudi/pull/2092", "timeline": [{"oid": "cc0a2638eef64adf07675293aede907a6c58862d", "url": "https://github.com/apache/hudi/commit/cc0a2638eef64adf07675293aede907a6c58862d", "message": "Fix merge on read DAG to make docker demo pass", "committedDate": "2020-10-12T21:27:48Z", "type": "forcePushed"}, {"oid": "44a5a80fd0917446ae500767db7844c37b56e5e7", "url": "https://github.com/apache/hudi/commit/44a5a80fd0917446ae500767db7844c37b56e5e7", "message": "Fix merge on read DAG to make docker demo pass", "committedDate": "2020-10-12T21:34:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAxOTc5OQ==", "url": "https://github.com/apache/hudi/pull/2092#discussion_r504019799", "bodyText": "am I missing something here. once the node is set to complete, how can we execute in next cycle if repeatCount > 1 ? shouldn't we set it outside of while loop", "author": "nsivabalan", "createdAt": "2020-10-13T14:54:31Z", "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/dag/scheduler/DagScheduler.java", "diffHunk": "@@ -109,12 +109,16 @@ private void executeNode(DagNode node) {\n       throw new RuntimeException(\"DagNode already completed! Cannot re-execute\");\n     }\n     try {\n-      log.warn(\"executing node: \" + node.getName() + \" of type: \" + node.getClass());\n-      node.execute(executionContext);\n-      node.setCompleted(true);\n-      log.info(\"Finished executing {}\", node.getName());\n+      int repeatCount = node.getConfig().getRepeatCount();\n+      while (repeatCount > 0) {\n+        log.warn(\"executing node: \" + node.getName() + \" of type: \" + node.getClass());\n+        node.execute(executionContext);\n+        node.setCompleted(true);", "originalCommit": "44a5a80fd0917446ae500767db7844c37b56e5e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAzOTE3Mw==", "url": "https://github.com/apache/hudi/pull/2092#discussion_r504039173", "bodyText": "in general repeatCount is confusing. for eg:\nfirst_insert:\n  config:\n    record_size: 70000\n    num_insert_partitions: 1\n    repeat_count: 5\n    num_records_insert: 1000\n  type: InsertNode\n  deps: none\n\nIn this dag yaml, I expect 5*1000 records to be inserted since repeat count is 5. If 5000 records are to be expected, don't we need to fix all yaml dags(complex-dag-mow.yaml etc) for hive query results. I don't see any fixes in this patch for expected record counts though.", "author": "nsivabalan", "createdAt": "2020-10-13T15:19:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAxOTc5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDgyMzA5NA==", "url": "https://github.com/apache/hudi/pull/2092#discussion_r504823094", "bodyText": "You're right, I fixed the repeat count and tested it on the unit tests but didn't confirm the DAG under the demo's. I've changed the repeat count to be 1 in the docker DAG so it doesn't cause confusion and have added repeat_count only to the unit_test dags to confirm repeat count works.", "author": "n3nash", "createdAt": "2020-10-14T16:43:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAxOTc5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyODYxNw==", "url": "https://github.com/apache/hudi/pull/2092#discussion_r504028617", "bodyText": "minor. Can we first rollback from hudi and then delete from input data. Just incase rollback from hudi fails, we will have the input data intact for any debugging.", "author": "nsivabalan", "createdAt": "2020-10-13T15:05:28Z", "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/dag/nodes/RollbackNode.java", "diffHunk": "@@ -49,6 +54,11 @@ public void execute(ExecutionContext executionContext) throws Exception {\n     Option<HoodieInstant> lastInstant = metaClient.getActiveTimeline().getCommitsTimeline().lastInstant();\n     if (lastInstant.isPresent()) {\n       log.info(\"Rolling back last instant {}\", lastInstant.get());\n+      log.info(\"Cleaning up generated data for the instant being rolled back {}\", lastInstant.get());\n+      ValidationUtils.checkArgument(executionContext.getWriterContext().getProps().getOrDefault(DFSPathSelector.Config.SOURCE_INPUT_SELECTOR,\n+          DFSPathSelector.class.getName()).toString().equalsIgnoreCase(DFSTestSuitePathSelector.class.getName()), \"Test Suite only supports DFSTestSuitePathSelector\");\n+      metaClient.getFs().delete(new Path(executionContext.getWriterContext().getCfg().inputBasePath,", "originalCommit": "44a5a80fd0917446ae500767db7844c37b56e5e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDgxOTY2NQ==", "url": "https://github.com/apache/hudi/pull/2092#discussion_r504819665", "bodyText": "Done", "author": "n3nash", "createdAt": "2020-10-14T16:37:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyODYxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAzMzc0Mw==", "url": "https://github.com/apache/hudi/pull/2092#discussion_r504033743", "bodyText": "sorry, are we not looking for max value here. why min ?\nfor eg, input/1, input/2, input/5. in this, we are interested in \"5\" right?", "author": "nsivabalan", "createdAt": "2020-10-13T15:12:07Z", "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/helpers/DFSTestSuitePathSelector.java", "diffHunk": "@@ -62,19 +67,26 @@ public DFSTestSuitePathSelector(TypedProperties props, Configuration hadoopConf)\n         lastBatchId = 0;\n         nextBatchId = 1;\n       }\n-\n-      log.info(\"Using DFSTestSuitePathSelector, checkpoint: \" + lastCheckpointStr + \" sourceLimit: \" + sourceLimit\n-          + \" lastBatchId: \" + lastBatchId + \" nextBatchId: \" + nextBatchId);\n       // obtain all eligible files for the batch\n       List<FileStatus> eligibleFiles = new ArrayList<>();\n       FileStatus[] fileStatuses = fs.globStatus(\n           new Path(props.getString(Config.ROOT_INPUT_PATH_PROP), \"*\"));\n+      // Say input data is as follow input/1, input/2, input/5 since 3,4 was rolled back and 5 is new generated data\n+      // checkpoint from the latest commit metadata will be 2 since 3,4 has been rolled back. We need to set the\n+      // next batch id correctly as 5 instead of 3\n+      Optional<String> correctBatchIdDueToRollback = Arrays.stream(fileStatuses)\n+          .map(f -> f.getPath().toString().split(\"/\")[f.getPath().toString().split(\"/\").length - 1])\n+          .min((bid1, bid2) -> Integer.min(Integer.parseInt(bid1), Integer.parseInt(bid2)));", "originalCommit": "44a5a80fd0917446ae500767db7844c37b56e5e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDgxOTU5OQ==", "url": "https://github.com/apache/hudi/pull/2092#discussion_r504819599", "bodyText": "Had some uncomitted changes, pushed it now", "author": "n3nash", "createdAt": "2020-10-14T16:37:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAzMzc0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAzNjk2NA==", "url": "https://github.com/apache/hudi/pull/2092#discussion_r504036964", "bodyText": "looks like our rollback only supports rolling back the last commit. I assume we need to fix this in some later patch.", "author": "nsivabalan", "createdAt": "2020-10-13T15:16:16Z", "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/dag/nodes/RollbackNode.java", "diffHunk": "@@ -49,6 +54,11 @@ public void execute(ExecutionContext executionContext) throws Exception {\n     Option<HoodieInstant> lastInstant = metaClient.getActiveTimeline().getCommitsTimeline().lastInstant();\n     if (lastInstant.isPresent()) {", "originalCommit": "44a5a80fd0917446ae500767db7844c37b56e5e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE1Mjk1Mg==", "url": "https://github.com/apache/hudi/pull/2092#discussion_r504152952", "bodyText": "So, you can add multiple rollbackNode's to simulate multiple commit rollbacks, it will always start from the last node. We still have to implement a RestoreNode that will do this in one shot..", "author": "n3nash", "createdAt": "2020-10-13T18:01:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAzNjk2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEwMjMxMQ==", "url": "https://github.com/apache/hudi/pull/2092#discussion_r505102311", "bodyText": "my bad. I missed that we can rollback only the latest commit.", "author": "nsivabalan", "createdAt": "2020-10-15T00:52:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAzNjk2NA=="}], "type": "inlineReview"}, {"oid": "8a9cf42e685cbb2b43ed86873c351f28c19d5d5e", "url": "https://github.com/apache/hudi/commit/8a9cf42e685cbb2b43ed86873c351f28c19d5d5e", "message": "1. Fix merge on read DAG to make docker demo pass\n2. Fix repeat_count, rollback node", "committedDate": "2020-10-14T16:43:20Z", "type": "forcePushed"}, {"oid": "615958a197747dd8ffc04e73cb0d0c841a9900e3", "url": "https://github.com/apache/hudi/commit/615958a197747dd8ffc04e73cb0d0c841a9900e3", "message": "1. Fix merge on read DAG to make docker demo pass\n2. Fix repeat_count, rollback node", "committedDate": "2020-10-14T17:03:04Z", "type": "forcePushed"}, {"oid": "7116c44cefdac1e96c0e43be0e0ec1297d02f140", "url": "https://github.com/apache/hudi/commit/7116c44cefdac1e96c0e43be0e0ec1297d02f140", "message": "1. Fix merge on read DAG to make docker demo pass\n2. Fix repeat_count, rollback node", "committedDate": "2020-10-19T18:50:40Z", "type": "forcePushed"}, {"oid": "fed4bea9cf15fc43fabe72f4b77668a9c8ec780b", "url": "https://github.com/apache/hudi/commit/fed4bea9cf15fc43fabe72f4b77668a9c8ec780b", "message": "1. Fix merge on read DAG to make docker demo pass\n2. Fix repeat_count, rollback node", "committedDate": "2020-10-26T03:35:52Z", "type": "forcePushed"}, {"oid": "821024467361cdff4d48d4b29ea1ea64d1d93fe9", "url": "https://github.com/apache/hudi/commit/821024467361cdff4d48d4b29ea1ea64d1d93fe9", "message": "1. Fix merge on read DAG to make docker demo pass\n2. Fix repeat_count, rollback node", "committedDate": "2020-10-28T15:54:38Z", "type": "commit"}, {"oid": "821024467361cdff4d48d4b29ea1ea64d1d93fe9", "url": "https://github.com/apache/hudi/commit/821024467361cdff4d48d4b29ea1ea64d1d93fe9", "message": "1. Fix merge on read DAG to make docker demo pass\n2. Fix repeat_count, rollback node", "committedDate": "2020-10-28T15:54:38Z", "type": "forcePushed"}]}