{"pr_number": 1920, "pr_title": "[HUDI-1150] Fix unable to parse input partition field :1 exception when using TimestampBasedKeyGenerator", "pr_createdAt": "2020-08-05T11:26:08Z", "pr_url": "https://github.com/apache/hudi/pull/1920", "timeline": [{"oid": "4a5ed78923d660801ecf23cb71acdfcd1cb30969", "url": "https://github.com/apache/hudi/commit/4a5ed78923d660801ecf23cb71acdfcd1cb30969", "message": "[HUDI-1150]Fix unable to parse input partition field :1 exception when using TimestampBasedKeyGenerator", "committedDate": "2020-08-05T11:38:06Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc2MjY1Mg==", "url": "https://github.com/apache/hudi/pull/1920#discussion_r465762652", "bodyText": "can we make this package-private?", "author": "pratyakshsharma", "createdAt": "2020-08-05T14:20:34Z", "path": "hudi-spark/src/main/java/org/apache/hudi/keygen/parser/HoodieDateTimeParserImpl.java", "diffHunk": "@@ -58,7 +58,7 @@ public HoodieDateTimeParserImpl(TypedProperties config) {\n     }\n   }\n \n-  private String getConfigInputDateFormatDelimiter() {\n+  public String getConfigInputDateFormatDelimiter() {", "originalCommit": "4a5ed78923d660801ecf23cb71acdfcd1cb30969", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgyNjI2OQ==", "url": "https://github.com/apache/hudi/pull/1920#discussion_r465826269", "bodyText": "can we make this package-private?\n\n@pratyakshsharma thanks for your review.\nI tried protected, it's not enough.", "author": "wangxianghu", "createdAt": "2020-08-05T15:49:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc2MjY1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc2NDQ5OA==", "url": "https://github.com/apache/hudi/pull/1920#discussion_r465764498", "bodyText": "Let us add a test case for the scenario when timestampType is SCALAR or EPOCH_MILLISECONDS and the value of the field is null?", "author": "pratyakshsharma", "createdAt": "2020-08-05T14:22:57Z", "path": "hudi-spark/src/test/java/org/apache/hudi/keygen/TestTimestampBasedKeyGenerator.java", "diffHunk": "@@ -107,6 +107,13 @@ public void testTimestampBasedKeyGenerator() throws IOException {\n     properties = getBaseKeyConfig(\"DATE_STRING\", \"yyyy-MM-dd hh\", \"GMT\", null);\n     HoodieKey hk4 = new TimestampBasedKeyGenerator(properties).getKey(baseRecord);\n     assertEquals(\"2020-01-06 12\", hk4.getPartitionPath());\n+\n+    // timestamp is DATE_STRING, timezone is GMT+8:00, createTime is null\n+    baseRecord.put(\"createTime\", null);\n+    properties = getBaseKeyConfig(\"DATE_STRING\", \"yyyy-MM-dd hh:mm:ss\", \"GMT+8:00\", null);", "originalCommit": "4a5ed78923d660801ecf23cb71acdfcd1cb30969", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgyNjQxNA==", "url": "https://github.com/apache/hudi/pull/1920#discussion_r465826414", "bodyText": "Let us add a test case for the scenario when timestampType is SCALAR or EPOCH_MILLISECONDS and the value of the field is null?\n\ndone", "author": "wangxianghu", "createdAt": "2020-08-05T15:49:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc2NDQ5OA=="}], "type": "inlineReview"}, {"oid": "6150d3e78f6a8878c6970e14a75f1c5af9f7b798", "url": "https://github.com/apache/hudi/commit/6150d3e78f6a8878c6970e14a75f1c5af9f7b798", "message": "[HUDI-1150]Fix unable to parse input partition field :1 exception when using TimestampBasedKeyGenerator", "committedDate": "2020-08-05T15:46:47Z", "type": "forcePushed"}, {"oid": "9f28102aa99268340ec4ab94acaa2dd77fa5f89b", "url": "https://github.com/apache/hudi/commit/9f28102aa99268340ec4ab94acaa2dd77fa5f89b", "message": "[HUDI-1150]Fix unable to parse input partition field :1 exception when using TimestampBasedKeyGenerator", "committedDate": "2020-08-05T15:59:04Z", "type": "forcePushed"}, {"oid": "009ab1330b9b7b9b5bbaa7df5d69436028813aac", "url": "https://github.com/apache/hudi/commit/009ab1330b9b7b9b5bbaa7df5d69436028813aac", "message": "[HUDI-1150]Fix unable to parse input partition field :1 exception when using TimestampBasedKeyGenerator", "committedDate": "2020-08-05T16:00:11Z", "type": "forcePushed"}, {"oid": "5ba27d18c67bc8149b23532e51056f3a64b59d74", "url": "https://github.com/apache/hudi/commit/5ba27d18c67bc8149b23532e51056f3a64b59d74", "message": "[HUDI-1150]Fix unable to parse input partition field :1 exception when\nusing TimestampBasedKeyGenerator", "committedDate": "2020-08-06T10:11:39Z", "type": "forcePushed"}, {"oid": "1fa5349d49edfb7fc8cf023534847b3aca4357ac", "url": "https://github.com/apache/hudi/commit/1fa5349d49edfb7fc8cf023534847b3aca4357ac", "message": "[HUDI-1150]Fix unable to parse input partition field :1 exception when\nusing TimestampBasedKeyGenerator", "committedDate": "2020-08-06T13:53:00Z", "type": "forcePushed"}, {"oid": "db2b6c2882f537adf24405bc5788aa4a064e119c", "url": "https://github.com/apache/hudi/commit/db2b6c2882f537adf24405bc5788aa4a064e119c", "message": "fix timeZone issue", "committedDate": "2020-08-08T03:12:25Z", "type": "forcePushed"}, {"oid": "21fddc9ec7adaecbb749b655cb9a12c45dcb0b95", "url": "https://github.com/apache/hudi/commit/21fddc9ec7adaecbb749b655cb9a12c45dcb0b95", "message": "[HUDI-1150]Fix unable to parse input partition field :1 exception", "committedDate": "2020-08-08T05:48:00Z", "type": "forcePushed"}, {"oid": "73068de0cac83434fbdbcbda8d787c7faadb4e2a", "url": "https://github.com/apache/hudi/commit/73068de0cac83434fbdbcbda8d787c7faadb4e2a", "message": "[HUDI-1150]Fix unable to parse input partition field :1 exception", "committedDate": "2020-08-08T05:51:25Z", "type": "forcePushed"}, {"oid": "64f7543d272ca0c3596f1d7b692ff1e92cae3246", "url": "https://github.com/apache/hudi/commit/64f7543d272ca0c3596f1d7b692ff1e92cae3246", "message": "[HUDI-1150] Fix unable to parse input partition field :1 exception", "committedDate": "2020-08-08T09:25:04Z", "type": "forcePushed"}, {"oid": "669987672501e30d1c06b1a3c27713859dc937df", "url": "https://github.com/apache/hudi/commit/669987672501e30d1c06b1a3c27713859dc937df", "message": "[HUDI-1150] Fix unable to parse input partition field :1 exception", "committedDate": "2020-08-09T04:22:32Z", "type": "forcePushed"}, {"oid": "53b44eea0b919250f65e8c5380a996381ec1d3cb", "url": "https://github.com/apache/hudi/commit/53b44eea0b919250f65e8c5380a996381ec1d3cb", "message": "[HUDI-1150] Fix unable to parse input partition field :1 exception", "committedDate": "2020-08-09T05:22:34Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTI2NzI5Mw==", "url": "https://github.com/apache/hudi/pull/1920#discussion_r471267293", "bodyText": "If you define a variable named result, then stop using return statement in the middle of the method body. Please set the value of the variable and return it at the end of the method.", "author": "yanghua", "createdAt": "2020-08-17T06:58:26Z", "path": "hudi-spark/src/main/java/org/apache/hudi/keygen/TimestampBasedKeyGenerator.java", "diffHunk": "@@ -170,6 +173,32 @@ public String getPartitionPath(GenericRecord record) {\n     }\n   }\n \n+  /**\n+   * Set default value to partitionVal if the input value of partitionPathField is null.\n+   */\n+  private Object getDefaultPartitionVal() {\n+    Object result = 1L;", "originalCommit": "53b44eea0b919250f65e8c5380a996381ec1d3cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTM1NjAyMw==", "url": "https://github.com/apache/hudi/pull/1920#discussion_r471356023", "bodyText": "If you define a variable named result, then stop using return statement in the middle of the method body. Please set the value of the variable and return it at the end of the method.\n\ndone", "author": "wangxianghu", "createdAt": "2020-08-17T09:30:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTI2NzI5Mw=="}], "type": "inlineReview"}, {"oid": "3446466136e1b0bde4286a0aaed2c5d52e9daa12", "url": "https://github.com/apache/hudi/commit/3446466136e1b0bde4286a0aaed2c5d52e9daa12", "message": "[HUDI-1150] Fix unable to parse input partition field :1 exception", "committedDate": "2020-08-17T08:38:50Z", "type": "forcePushed"}, {"oid": "4145bf0769d47122ed5a0f26b1effea804c2700b", "url": "https://github.com/apache/hudi/commit/4145bf0769d47122ed5a0f26b1effea804c2700b", "message": "[HUDI-1150]Fix unable to parse input partition field :1 exception", "committedDate": "2020-08-17T09:27:21Z", "type": "forcePushed"}, {"oid": "72637d9456e00f3fd9976aea57b18ac41f0f531f", "url": "https://github.com/apache/hudi/commit/72637d9456e00f3fd9976aea57b18ac41f0f531f", "message": "[HUDI-1150]Fix unable to parse input partition field :1 exception", "committedDate": "2020-08-17T10:17:38Z", "type": "forcePushed"}, {"oid": "d1bfe1549f925946ae79923655087b5ce82354fd", "url": "https://github.com/apache/hudi/commit/d1bfe1549f925946ae79923655087b5ce82354fd", "message": "[HUDI-1150]Fix unable to parse input partition field :1 exception", "committedDate": "2020-08-20T01:27:16Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDY0MjQ4Mw==", "url": "https://github.com/apache/hudi/pull/1920#discussion_r474642483", "bodyText": "For safety, you should judge if the parser is the instance of HoodieDateTimeParserImpl . Although, there is only one implementation currently.", "author": "yanghua", "createdAt": "2020-08-21T11:37:21Z", "path": "hudi-spark/src/main/java/org/apache/hudi/keygen/TimestampBasedKeyGenerator.java", "diffHunk": "@@ -199,6 +202,32 @@ private String getPartitionPath(Object partitionVal) {\n     return hiveStylePartitioning ? getPartitionPathFields().get(0) + \"=\" + partitionPath : partitionPath;\n   }\n \n+  /**\n+   * Set default value to partitionVal if the input value of partitionPathField is null.\n+   */\n+  private Object getDefaultPartitionVal() {\n+    Object result = 1L;\n+    if (timestampType == TimestampType.DATE_STRING || timestampType == TimestampType.MIXED) {\n+      // since partitionVal is null, we can set a default value of any format as TIMESTAMP_INPUT_DATE_FORMAT_PROP\n+      // configured, here we take the first.\n+      String delimiter = ((HoodieDateTimeParserImpl) parser).getConfigInputDateFormatDelimiter();", "originalCommit": "d1bfe1549f925946ae79923655087b5ce82354fd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDczOTk0NA==", "url": "https://github.com/apache/hudi/pull/1920#discussion_r474739944", "bodyText": "For safety, you should judge if the parser is the instance of HoodieDateTimeParserImpl . Although, there is only one implementation currently.\n\ndone, I have refactored HoodieDateTimeParser to expose some tool methods.", "author": "wangxianghu", "createdAt": "2020-08-21T14:37:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDY0MjQ4Mw=="}], "type": "inlineReview"}, {"oid": "babc5c4cad2d14b1aa712a0f6e4b047bc3bd6e76", "url": "https://github.com/apache/hudi/commit/babc5c4cad2d14b1aa712a0f6e4b047bc3bd6e76", "message": "refactor HoodieDateTimeParser to an abstract class to hold reusable code", "committedDate": "2020-08-21T14:30:48Z", "type": "forcePushed"}, {"oid": "dd75266cc53703b20494bb8d1f903d7d798e44c4", "url": "https://github.com/apache/hudi/commit/dd75266cc53703b20494bb8d1f903d7d798e44c4", "message": "refactor HoodieDateTimeParser to an abstract class to hold reusable code", "committedDate": "2020-08-21T14:33:28Z", "type": "forcePushed"}, {"oid": "4f3946c610aa7eea782f69edcc56c1e24985800b", "url": "https://github.com/apache/hudi/commit/4f3946c610aa7eea782f69edcc56c1e24985800b", "message": "[HUDI-1150] Fix unable to parse input partition field :1 exception", "committedDate": "2020-08-21T14:46:09Z", "type": "forcePushed"}, {"oid": "ccef7314a5eae0e2070dfc620bedc04ec45c05a9", "url": "https://github.com/apache/hudi/commit/ccef7314a5eae0e2070dfc620bedc04ec45c05a9", "message": "[HUDI-1150] Fix unable to parse input partition field :1 exception", "committedDate": "2020-08-21T15:21:51Z", "type": "forcePushed"}, {"oid": "afee34ce2f33b03f378acebae8ddb06cd5beda25", "url": "https://github.com/apache/hudi/commit/afee34ce2f33b03f378acebae8ddb06cd5beda25", "message": "[HUDI-1150] Fix unable to parse input partition field :1 exception", "committedDate": "2020-08-22T02:44:38Z", "type": "forcePushed"}, {"oid": "ccef7314a5eae0e2070dfc620bedc04ec45c05a9", "url": "https://github.com/apache/hudi/commit/ccef7314a5eae0e2070dfc620bedc04ec45c05a9", "message": "[HUDI-1150] Fix unable to parse input partition field :1 exception", "committedDate": "2020-08-21T15:21:51Z", "type": "forcePushed"}, {"oid": "bc2f382de5d044260a6030b6ff9ee4d98cf7098f", "url": "https://github.com/apache/hudi/commit/bc2f382de5d044260a6030b6ff9ee4d98cf7098f", "message": "[HUDI-1150] Fix unable to parse input partition field :1 exception", "committedDate": "2020-08-22T02:55:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA5NDM0MQ==", "url": "https://github.com/apache/hudi/pull/1920#discussion_r475094341", "bodyText": "I am not sure if it's a good design. You make a detailed implementation pull-up into an abstraction. Why? getInputDateTimeZone and getOutputDateTimeZone  should be abstract method and be pushed down to a sub-class like before. Moreover, you can see it contains if/else block, it is full of changes.\nThe main benefit of abstract classes is to provide templates for the implementation of some subclasses. Instead of thinking that the default implementation is a template and marking it as an abstract class.\nSo I think the original design is good. WDYT?", "author": "yanghua", "createdAt": "2020-08-22T14:04:50Z", "path": "hudi-spark/src/main/java/org/apache/hudi/keygen/parser/AbstractHoodieDateTimeParser.java", "diffHunk": "@@ -0,0 +1,90 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.keygen.parser;\n+\n+import org.apache.hudi.common.config.TypedProperties;\n+import org.apache.hudi.common.util.Option;\n+import org.apache.hudi.keygen.TimestampBasedKeyGenerator;\n+import org.joda.time.DateTimeZone;\n+import org.joda.time.format.DateTimeFormatter;\n+\n+import java.io.Serializable;\n+import java.util.TimeZone;\n+\n+public abstract class AbstractHoodieDateTimeParser implements Serializable {", "originalCommit": "bc2f382de5d044260a6030b6ff9ee4d98cf7098f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEwMDM3Mw==", "url": "https://github.com/apache/hudi/pull/1920#discussion_r475100373", "bodyText": "I am not sure if it's a good design. You make a detailed implementation pull-up into an abstraction. Why? getInputDateTimeZone and getOutputDateTimeZone  should be abstract method and be pushed down to a sub-class like before. Moreover, you can see it contains if/else block, it is full of changes.\nThe main benefit of abstract classes is to provide templates for the implementation of some subclasses. Instead of thinking that the default implementation is a template and marking it as an abstract class.\nSo I think the original design is good. WDYT?\n\n@yanghua thanks for your review. Make it an abstract class can allow us to reuse some tool methods, such as getConfigInputDateFormatDelimiter().\nThe getInputDateTimeZone and getOutputDateTimeZone has been pushed down to the sub-class now, it is better to be extendable.\nplease take another look when free, thanks.", "author": "wangxianghu", "createdAt": "2020-08-22T15:15:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA5NDM0MQ=="}], "type": "inlineReview"}, {"oid": "54331e2098d5682a8aba4a6f0e59f1b5578cb4f1", "url": "https://github.com/apache/hudi/commit/54331e2098d5682a8aba4a6f0e59f1b5578cb4f1", "message": "[HUDI-1150] Fix unable to parse input partition field :1 exception", "committedDate": "2020-08-22T15:02:22Z", "type": "forcePushed"}, {"oid": "59c62cd6624cb5716713f7ffd4f345799cc186d2", "url": "https://github.com/apache/hudi/commit/59c62cd6624cb5716713f7ffd4f345799cc186d2", "message": "[HUDI-1150] Fix unable to parse input partition field :1 exception", "committedDate": "2020-08-22T15:05:21Z", "type": "commit"}, {"oid": "59c62cd6624cb5716713f7ffd4f345799cc186d2", "url": "https://github.com/apache/hudi/commit/59c62cd6624cb5716713f7ffd4f345799cc186d2", "message": "[HUDI-1150] Fix unable to parse input partition field :1 exception", "committedDate": "2020-08-22T15:05:21Z", "type": "forcePushed"}]}