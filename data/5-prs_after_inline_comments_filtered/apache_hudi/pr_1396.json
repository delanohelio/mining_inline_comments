{"pr_number": 1396, "pr_title": "[HUDI-687] Stop incremental reader on RO table before a pending compaction", "pr_createdAt": "2020-03-11T03:08:50Z", "pr_url": "https://github.com/apache/hudi/pull/1396", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA0MjY3MQ==", "url": "https://github.com/apache/hudi/pull/1396#discussion_r392042671", "bodyText": "rename: instantTime", "author": "vinothchandar", "createdAt": "2020-03-13T05:56:20Z", "path": "hudi-common/src/main/java/org/apache/hudi/common/table/HoodieTimeline.java", "diffHunk": "@@ -144,6 +162,11 @@\n    */\n   HoodieTimeline findInstantsAfter(String commitTime, int numCommits);\n \n+  /**\n+   * Create a new Timeline with all instants before specified time.\n+   */\n+  HoodieTimeline findInstantsBefore(String time);", "originalCommit": "a023c310341f954ef3a9ee91e12853ca9376fe19", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQzNjQ2MQ==", "url": "https://github.com/apache/hudi/pull/1396#discussion_r392436461", "bodyText": "done", "author": "satishkotha", "createdAt": "2020-03-13T19:50:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA0MjY3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA0MzA1NA==", "url": "https://github.com/apache/hudi/pull/1396#discussion_r392043054", "bodyText": "Should this belong in the HoodieTimeline class itself? It seems like you can easily build this using other methods, outside of HoodieTimeline?\nGiven this is an interim fix, I would like this to be as isolated as possible from the core classes..", "author": "vinothchandar", "createdAt": "2020-03-13T05:57:58Z", "path": "hudi-common/src/main/java/org/apache/hudi/common/table/HoodieTimeline.java", "diffHunk": "@@ -127,6 +127,24 @@\n    */\n   HoodieTimeline getCommitsAndCompactionTimeline();\n \n+\n+  /**\n+   * Get all instants (commits, delta commits) that produce new data, in the active timeline.\n+   */\n+  HoodieTimeline getCommitsTimeline();\n+\n+  /**\n+   * Timeline to include all instants before the first 'requested compaction'.\n+   *\n+   * For example, say timeline: commit at t0, deltacommit at t1, compaction requested at t2, deltacommit at t3,\n+   * this method would return t0, t1\n+   *\n+   * If there is no pending compaction this is equivalent to getting all instants in the timeline.\n+   *\n+   * @return\n+   */\n+  HoodieTimeline filterInstantsBeforePendingCompaction();", "originalCommit": "a023c310341f954ef3a9ee91e12853ca9376fe19", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA0MzE1MA==", "url": "https://github.com/apache/hudi/pull/1396#discussion_r392043150", "bodyText": "In any case, rename to filterInstantsBeforeFirstPendingCompaction?", "author": "vinothchandar", "createdAt": "2020-03-13T05:58:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA0MzA1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQzNjYzMA==", "url": "https://github.com/apache/hudi/pull/1396#discussion_r392436630", "bodyText": "Moved it to HoodieParquetInputFormat as suggested", "author": "satishkotha", "createdAt": "2020-03-13T19:50:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA0MzA1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA0MzI0MA==", "url": "https://github.com/apache/hudi/pull/1396#discussion_r392043240", "bodyText": "getCommitsAndCompactionTimeline wont do?", "author": "vinothchandar", "createdAt": "2020-03-13T05:58:51Z", "path": "hudi-common/src/main/java/org/apache/hudi/common/table/HoodieTimeline.java", "diffHunk": "@@ -127,6 +127,24 @@\n    */\n   HoodieTimeline getCommitsAndCompactionTimeline();\n \n+\n+  /**\n+   * Get all instants (commits, delta commits) that produce new data, in the active timeline.\n+   */\n+  HoodieTimeline getCommitsTimeline();", "originalCommit": "a023c310341f954ef3a9ee91e12853ca9376fe19", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQzNjg1NQ==", "url": "https://github.com/apache/hudi/pull/1396#discussion_r392436855", "bodyText": "I removed it", "author": "satishkotha", "createdAt": "2020-03-13T19:51:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA0MzI0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA0MzQwNA==", "url": "https://github.com/apache/hudi/pull/1396#discussion_r392043404", "bodyText": "lets move the code from HoodieDefaultTimeline here?", "author": "vinothchandar", "createdAt": "2020-03-13T05:59:42Z", "path": "hudi-hadoop-mr/src/main/java/org/apache/hudi/hadoop/HoodieParquetInputFormat.java", "diffHunk": "@@ -116,6 +117,24 @@\n     return returns.toArray(new FileStatus[returns.size()]);\n   }\n \n+  /**\n+   * Filter any specific instants that we do not want to process.\n+   * example timeline:\n+   *\n+   * t0 -> create bucket1.parquet\n+   * t1 -> create and append updates bucket1.log\n+   * t2 -> request compaction\n+   * t3 -> create bucket2.parquet\n+   *\n+   * if compaction at t2 takes a long time, incremental readers on RO tables can move to t3 and would skip updates in t1\n+   *\n+   * To workaround this problem, we want to stop returning data belonging to commits > t2.\n+   * After compaction is complete, incremental reader would see updates in t2, t3, so on.\n+   */\n+  protected HoodieTimeline filterInstantsTimeline(HoodieTimeline timeline) {", "originalCommit": "a023c310341f954ef3a9ee91e12853ca9376fe19", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQzNjkwOA==", "url": "https://github.com/apache/hudi/pull/1396#discussion_r392436908", "bodyText": "done", "author": "satishkotha", "createdAt": "2020-03-13T19:51:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA0MzQwNA=="}], "type": "inlineReview"}, {"oid": "692604937ad658192c2518e0be1e6a1cd4bae993", "url": "https://github.com/apache/hudi/commit/692604937ad658192c2518e0be1e6a1cd4bae993", "message": "[HUDI-687] Stop incremental reader on RO table when there is a pending compaction", "committedDate": "2020-04-09T21:54:15Z", "type": "commit"}, {"oid": "692604937ad658192c2518e0be1e6a1cd4bae993", "url": "https://github.com/apache/hudi/commit/692604937ad658192c2518e0be1e6a1cd4bae993", "message": "[HUDI-687] Stop incremental reader on RO table when there is a pending compaction", "committedDate": "2020-04-09T21:54:15Z", "type": "forcePushed"}]}