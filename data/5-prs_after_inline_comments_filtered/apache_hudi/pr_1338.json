{"pr_number": 1338, "pr_title": "[HUDI-615]: Add Test cases for StringUtils.", "pr_createdAt": "2020-02-16T03:13:50Z", "pr_url": "https://github.com/apache/hudi/pull/1338", "timeline": [{"oid": "de8e23bb09608654010e5f865449171effa8a0fe", "url": "https://github.com/apache/hudi/commit/de8e23bb09608654010e5f865449171effa8a0fe", "message": "[HUDI-615]: Add Test cases for StringUtils.", "committedDate": "2020-02-16T15:44:50Z", "type": "commit"}, {"oid": "de8e23bb09608654010e5f865449171effa8a0fe", "url": "https://github.com/apache/hudi/commit/de8e23bb09608654010e5f865449171effa8a0fe", "message": "[HUDI-615]: Add Test cases for StringUtils.", "committedDate": "2020-02-16T15:44:50Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTk4MDMxNQ==", "url": "https://github.com/apache/hudi/pull/1338#discussion_r379980315", "bodyText": "This line is repeated and would be removed, you would merge it @smarthi after the change.", "author": "leesf", "createdAt": "2020-02-17T04:22:07Z", "path": "hudi-common/src/test/java/org/apache/hudi/common/util/TestStringUtils.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.common.util;\n+\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotEquals;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n+public class TestStringUtils {\n+\n+  private static final String[] STRINGS = {\"This\", \"is\", \"a\", \"test\"};\n+\n+  @Test\n+  public void testStringJoinWithDelim() {\n+    String joinedString = StringUtils.joinUsingDelim(\"-\", STRINGS);\n+    assertEquals(STRINGS.length, joinedString.split(\"-\").length);\n+  }\n+\n+  @Test\n+  public void testStringJoin() {\n+    assertNotEquals(null, StringUtils.join(\"\"));\n+    assertNotEquals(null, StringUtils.join(STRINGS));\n+  }\n+\n+  @Test\n+  public void testStringNullToEmpty() {\n+    String str = \"This is a test\";\n+    assertEquals(str, StringUtils.nullToEmpty(str));\n+    assertEquals(\"\", StringUtils.nullToEmpty(null));\n+  }\n+\n+  @Test\n+  public void testStringEmptyToNull() {\n+    assertNull(StringUtils.emptyToNull(\"\"));\n+    assertEquals(\"Test String\", StringUtils.emptyToNull(\"Test String\"));\n+  }\n+\n+  @Test\n+  public void testStringNullOrEmpty() {\n+    assertTrue(StringUtils.isNullOrEmpty(null));\n+    assertTrue(StringUtils.isNullOrEmpty(\"\"));\n+    assertNotEquals(null, StringUtils.isNullOrEmpty(\"this is not empty\"));\n+    assertTrue(StringUtils.isNullOrEmpty(\"\"));", "originalCommit": "de8e23bb09608654010e5f865449171effa8a0fe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}