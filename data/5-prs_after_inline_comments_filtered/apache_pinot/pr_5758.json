{"pr_number": 5758, "pr_title": "Pradeep/sr ssl fix", "pr_createdAt": "2020-07-26T18:34:13Z", "pr_url": "https://github.com/apache/pinot/pull/5758", "timeline": [{"oid": "74c90943fe849c1e85e3b98d3f8ff90661ed2995", "url": "https://github.com/apache/pinot/commit/74c90943fe849c1e85e3b98d3f8ff90661ed2995", "message": "Stashing avro bug fixe", "committedDate": "2020-07-26T01:38:36Z", "type": "commit"}, {"oid": "39a78f3df43ac613663975844e598f07b18bf623", "url": "https://github.com/apache/pinot/commit/39a78f3df43ac613663975844e598f07b18bf623", "message": "Only add known ssl configs", "committedDate": "2020-07-26T17:58:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTczMTMzNA==", "url": "https://github.com/apache/pinot/pull/5758#discussion_r461731334", "bodyText": "Why not rename to sslConfigs?", "author": "elonazoulay", "createdAt": "2020-07-28T16:56:36Z", "path": "pinot-plugins/pinot-input-format/pinot-confluent-avro/src/main/java/org/apache/pinot/plugin/inputformat/avro/confluent/KafkaConfluentSchemaRegistryAvroMessageDecoder.java", "diffHunk": "@@ -46,12 +54,50 @@\n   private RecordExtractor<Record> _avroRecordExtractor;\n   private String _topicName;\n \n+  public RestService createRestService(String schemaRegistryUrl, Map<String, String> configs) {\n+    RestService restService = new RestService(schemaRegistryUrl);\n+    Map<String, Object> asslConfigs = configs.entrySet().stream()", "originalCommit": "74c90943fe849c1e85e3b98d3f8ff90661ed2995", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTkwNDI4NA==", "url": "https://github.com/apache/pinot/pull/5758#discussion_r461904284", "bodyText": "@elonazoulay This is an outdated copy of the code. Can you look at this\nhttps://github.com/apache/incubator-pinot/pull/5758/files", "author": "pradeepgv42", "createdAt": "2020-07-28T21:50:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTczMTMzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTczMjA2OQ==", "url": "https://github.com/apache/pinot/pull/5758#discussion_r461732069", "bodyText": "Can you use a logger to output these?\nIf this just for debugging you can just do log.debug()", "author": "elonazoulay", "createdAt": "2020-07-28T16:57:46Z", "path": "pinot-plugins/pinot-input-format/pinot-confluent-avro/src/main/java/org/apache/pinot/plugin/inputformat/avro/confluent/KafkaConfluentSchemaRegistryAvroMessageDecoder.java", "diffHunk": "@@ -46,12 +54,50 @@\n   private RecordExtractor<Record> _avroRecordExtractor;\n   private String _topicName;\n \n+  public RestService createRestService(String schemaRegistryUrl, Map<String, String> configs) {\n+    RestService restService = new RestService(schemaRegistryUrl);\n+    Map<String, Object> asslConfigs = configs.entrySet().stream()\n+            .filter(e -> !e.equals(SCHEMA_REGISTRY_REST_URL))\n+            .filter(e -> e.getKey().startsWith(\"schema.registry.\"))\n+            .collect(Collectors.toMap(\n+                    e -> e.getKey().substring(\"schema.registry.\".length()),\n+                    Map.Entry::getValue));\n+\n+    Map<String, Object> sslConfigs = new HashMap<>();\n+    for (String key : configs.keySet()) {\n+      if (!key.equals(SCHEMA_REGISTRY_REST_URL) && key.startsWith(\"schema.registry.\")) {\n+        String value = configs.get(key);\n+        key = key.substring(\"schema.registry.\".length());\n+        if (key.contains(\"password\")) {\n+          sslConfigs.put(key, new Password(value));\n+        } else {\n+          sslConfigs.put(key, value);\n+        }\n+      }\n+    }\n+\n+    System.out.println(configs.toString());", "originalCommit": "74c90943fe849c1e85e3b98d3f8ff90661ed2995", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTkwNTc5OA==", "url": "https://github.com/apache/pinot/pull/5758#discussion_r461905798", "bodyText": "@elonazoulay This is an outdated copy of the code. Can you look at this\nhttps://github.com/apache/incubator-pinot/pull/5758/files", "author": "pradeepgv42", "createdAt": "2020-07-28T21:52:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTczMjA2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg0MTkzMw==", "url": "https://github.com/apache/pinot/pull/5758#discussion_r461841933", "bodyText": "Can you use the Configuration library, instead of manually extracting the substring?", "author": "elonazoulay", "createdAt": "2020-07-28T20:00:33Z", "path": "pinot-plugins/pinot-input-format/pinot-confluent-avro/src/main/java/org/apache/pinot/plugin/inputformat/avro/confluent/KafkaConfluentSchemaRegistryAvroMessageDecoder.java", "diffHunk": "@@ -46,12 +54,50 @@\n   private RecordExtractor<Record> _avroRecordExtractor;\n   private String _topicName;\n \n+  public RestService createRestService(String schemaRegistryUrl, Map<String, String> configs) {\n+    RestService restService = new RestService(schemaRegistryUrl);\n+    Map<String, Object> asslConfigs = configs.entrySet().stream()\n+            .filter(e -> !e.equals(SCHEMA_REGISTRY_REST_URL))\n+            .filter(e -> e.getKey().startsWith(\"schema.registry.\"))\n+            .collect(Collectors.toMap(\n+                    e -> e.getKey().substring(\"schema.registry.\".length()),\n+                    Map.Entry::getValue));\n+\n+    Map<String, Object> sslConfigs = new HashMap<>();\n+    for (String key : configs.keySet()) {\n+      if (!key.equals(SCHEMA_REGISTRY_REST_URL) && key.startsWith(\"schema.registry.\")) {", "originalCommit": "74c90943fe849c1e85e3b98d3f8ff90661ed2995", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTkxMDAzMw==", "url": "https://github.com/apache/pinot/pull/5758#discussion_r461910033", "bodyText": "Sorry not very familiar with this, do you have an example or give a bit more info?", "author": "pradeepgv42", "createdAt": "2020-07-28T21:57:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg0MTkzMw=="}], "type": "inlineReview"}, {"oid": "5f7ab0c713af877ae3d62ef32468f145a9d5f5bb", "url": "https://github.com/apache/pinot/commit/5f7ab0c713af877ae3d62ef32468f145a9d5f5bb", "message": "Add documentation for the new configs", "committedDate": "2020-08-05T19:05:11Z", "type": "commit"}]}