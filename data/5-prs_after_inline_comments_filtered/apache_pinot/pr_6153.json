{"pr_number": 6153, "pr_title": "add more validation for upsert config", "pr_createdAt": "2020-10-18T03:12:13Z", "pr_url": "https://github.com/apache/pinot/pull/6153", "timeline": [{"oid": "facaf36d99f78ff273dde0f91be0182610d99d06", "url": "https://github.com/apache/pinot/commit/facaf36d99f78ff273dde0f91be0182610d99d06", "message": "add more validation for upsert config", "committedDate": "2020-10-17T06:55:39Z", "type": "commit"}, {"oid": "ddb30bf5fa80a71074c3661c71707311a85e579c", "url": "https://github.com/apache/pinot/commit/ddb30bf5fa80a71074c3661c71707311a85e579c", "message": "fix", "committedDate": "2020-10-18T03:52:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkzMzY0MA==", "url": "https://github.com/apache/pinot/pull/6153#discussion_r507933640", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    tableConfig.getIndexingConfig().getStarTreeIndexConfigs() == null || tableConfig.getIndexingConfig()\n          \n          \n            \n                        .getStarTreeIndexConfigs().isEmpty(), \"The upsert table cannot have star-tree index.\");\n          \n          \n            \n                    Collections.isEmpty(tableConfig.getIndexingConfig().getStarTreeIndexConfigs()) && !tableConfig.getIndexingConfig().isEnableDefaultStarTree(), \"The upsert table cannot have star-tree index.\");", "author": "Jackie-Jiang", "createdAt": "2020-10-19T17:37:58Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java", "diffHunk": "@@ -265,6 +265,10 @@ protected static void validateUpsertConfig(TableConfig tableConfig, Schema schem\n         tableConfig.getRoutingConfig() != null && RoutingConfig.REPLICA_GROUP_INSTANCE_SELECTOR_TYPE\n             .equalsIgnoreCase(tableConfig.getRoutingConfig().getInstanceSelectorType()),\n         \"Upsert table must use replica-group (i.e. replicaGroup) based routing\");\n+    // no startree index\n+    Preconditions.checkState(\n+        tableConfig.getIndexingConfig().getStarTreeIndexConfigs() == null || tableConfig.getIndexingConfig()\n+            .getStarTreeIndexConfigs().isEmpty(), \"The upsert table cannot have star-tree index.\");", "originalCommit": "ddb30bf5fa80a71074c3661c71707311a85e579c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk0Mjg1MA==", "url": "https://github.com/apache/pinot/pull/6153#discussion_r507942850", "bodyText": "Still fail??", "author": "Jackie-Jiang", "createdAt": "2020-10-19T17:47:54Z", "path": "pinot-core/src/test/java/org/apache/pinot/core/util/SchemaUtilsTest.java", "diffHunk": "@@ -221,6 +221,30 @@ public void testValidateTimeFieldSpec() {\n     SchemaUtils.validate(pinotSchema);\n   }\n \n+  @Test\n+  public void testValidatePrimaryKeyColumns() {\n+    Schema pinotSchema;\n+    // non-existing column used as primary key\n+    pinotSchema = new Schema.SchemaBuilder()\n+        .addTime(new TimeGranularitySpec(DataType.LONG, TimeUnit.MILLISECONDS, \"time\"),\n+            new TimeGranularitySpec(DataType.INT, TimeUnit.DAYS, \"time\")).addSingleValueDimension(\"col\", DataType.INT)\n+        .setPrimaryKeyColumns(Lists.newArrayList(\"test\")).build();\n+    checkValidationFails(pinotSchema);\n+    // time column used as primary key\n+    pinotSchema = new Schema.SchemaBuilder()\n+        .addTime(new TimeGranularitySpec(DataType.LONG, TimeUnit.MILLISECONDS, \"time\"),\n+            new TimeGranularitySpec(DataType.INT, TimeUnit.DAYS, \"time\")).addSingleValueDimension(\"col\", DataType.INT)\n+        .setPrimaryKeyColumns(Lists.newArrayList(\"time\")).build();\n+    checkValidationFails(pinotSchema);\n+\n+    // valid primary key\n+    pinotSchema = new Schema.SchemaBuilder()\n+        .addTime(new TimeGranularitySpec(DataType.LONG, TimeUnit.MILLISECONDS, \"time\"),\n+            new TimeGranularitySpec(DataType.INT, TimeUnit.DAYS, \"time\")).addSingleValueDimension(\"col\", DataType.INT)\n+        .setPrimaryKeyColumns(Lists.newArrayList(\"col\")).build();\n+    checkValidationFails(pinotSchema);", "originalCommit": "ddb30bf5fa80a71074c3661c71707311a85e579c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk1MTA2NQ==", "url": "https://github.com/apache/pinot/pull/6153#discussion_r507951065", "bodyText": "Why putting this in the else? Also, this filter can never match because a field cannot be both TIME and DATE_TIME", "author": "Jackie-Jiang", "createdAt": "2020-10-19T17:55:51Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/util/SchemaUtils.java", "diffHunk": "@@ -92,6 +93,9 @@ public static void validate(Schema schema) {\n                 \"Exception in getting arguments for transform function '\" + transformFunction + \"' for column '\"\n                     + column + \"'\", e);\n           }\n+        } else if (fieldSpec.getFieldType().equals(FieldSpec.FieldType.TIME) && fieldSpec.getFieldType()", "originalCommit": "ddb30bf5fa80a71074c3661c71707311a85e579c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODAwMTA5NQ==", "url": "https://github.com/apache/pinot/pull/6153#discussion_r508001095", "bodyText": "typo. missed negation", "author": "yupeng9", "createdAt": "2020-10-19T19:14:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk1MTA2NQ=="}], "type": "inlineReview"}, {"oid": "d8e0cf26fd20cfba43c2fa912eadad259e5a0a9e", "url": "https://github.com/apache/pinot/commit/d8e0cf26fd20cfba43c2fa912eadad259e5a0a9e", "message": "comments", "committedDate": "2020-10-19T19:24:45Z", "type": "commit"}, {"oid": "79e5dd391d7ed7bcf247d7f0e3f5c9de0f646076", "url": "https://github.com/apache/pinot/commit/79e5dd391d7ed7bcf247d7f0e3f5c9de0f646076", "message": "fix test", "committedDate": "2020-10-19T20:19:28Z", "type": "commit"}, {"oid": "1de567840ca3e109d179f21ba53c6ddea6cadf28", "url": "https://github.com/apache/pinot/commit/1de567840ca3e109d179f21ba53c6ddea6cadf28", "message": "address comment", "committedDate": "2020-10-19T23:17:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODE0MjE0MA==", "url": "https://github.com/apache/pinot/pull/6153#discussion_r508142140", "bodyText": "Any specific reason why transformed column cannot be primary key column?", "author": "Jackie-Jiang", "createdAt": "2020-10-20T00:43:59Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/util/SchemaUtils.java", "diffHunk": "@@ -92,6 +93,8 @@ public static void validate(Schema schema) {\n                 \"Exception in getting arguments for transform function '\" + transformFunction + \"' for column '\"\n                     + column + \"'\", e);\n           }\n+        } else {\n+          primaryKeyColumnCandidates.add(column);", "originalCommit": "1de567840ca3e109d179f21ba53c6ddea6cadf28", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODE4ODUwOA==", "url": "https://github.com/apache/pinot/pull/6153#discussion_r508188508", "bodyText": "we can remove this constraint, though I feel it shall be very rare for the transformed column to be the primary key", "author": "yupeng9", "createdAt": "2020-10-20T03:32:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODE0MjE0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODE0MjQ0Nw==", "url": "https://github.com/apache/pinot/pull/6153#discussion_r508142447", "bodyText": "This part is incorrect. You should wrap everything into the preconditions", "author": "Jackie-Jiang", "createdAt": "2020-10-20T00:45:01Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java", "diffHunk": "@@ -265,6 +265,12 @@ protected static void validateUpsertConfig(TableConfig tableConfig, Schema schem\n         tableConfig.getRoutingConfig() != null && RoutingConfig.REPLICA_GROUP_INSTANCE_SELECTOR_TYPE\n             .equalsIgnoreCase(tableConfig.getRoutingConfig().getInstanceSelectorType()),\n         \"Upsert table must use replica-group (i.e. replicaGroup) based routing\");\n+    // no startree index\n+    if (tableConfig.getIndexingConfig() != null && tableConfig.getIndexingConfig().getStarTreeIndexConfigs() != null) {", "originalCommit": "1de567840ca3e109d179f21ba53c6ddea6cadf28", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODE4ODI5NA==", "url": "https://github.com/apache/pinot/pull/6153#discussion_r508188294", "bodyText": "why? when both are null, this check is noop?", "author": "yupeng9", "createdAt": "2020-10-20T03:31:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODE0MjQ0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODcxMDY3NQ==", "url": "https://github.com/apache/pinot/pull/6153#discussion_r508710675", "bodyText": "If tableConfig.getIndexingConfig().getStarTreeIndexConfigs() is null, but tableConfig.getIndexingConfig().isEnableDefaultStarTree() is true, you will miss the check.\nAlso, tableConfig.getIndexingConfig() can never be null here because it has been checked", "author": "Jackie-Jiang", "createdAt": "2020-10-20T17:28:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODE0MjQ0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODc3OTk0MA==", "url": "https://github.com/apache/pinot/pull/6153#discussion_r508779940", "bodyText": "I see what you meant. Makes sense.", "author": "yupeng9", "createdAt": "2020-10-20T19:20:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODE0MjQ0Nw=="}], "type": "inlineReview"}, {"oid": "1f400bfcf93f2ffb519ff7491fb75384c7251a85", "url": "https://github.com/apache/pinot/commit/1f400bfcf93f2ffb519ff7491fb75384c7251a85", "message": "comments", "committedDate": "2020-10-20T03:35:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODcxMjExNQ==", "url": "https://github.com/apache/pinot/pull/6153#discussion_r508712115", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (tableConfig.getIndexingConfig() != null && tableConfig.getIndexingConfig().getStarTreeIndexConfigs() != null) {\n          \n          \n            \n                  Preconditions.checkState(\n          \n          \n            \n                      tableConfig.getIndexingConfig().getStarTreeIndexConfigs().isEmpty() && !tableConfig.getIndexingConfig()\n          \n          \n            \n                          .isEnableDefaultStarTree(), \"The upsert table cannot have star-tree index.\");\n          \n          \n            \n                }\n          \n          \n            \n                Preconditions.checkState(\n          \n          \n            \n                    CollectionUtils.isEmpty(tableConfig.getIndexingConfig().getStarTreeIndexConfigs()) && !tableConfig\n          \n          \n            \n                        .getIndexingConfig().isEnableDefaultStarTree(), \"The upsert table cannot have star-tree index.\");", "author": "Jackie-Jiang", "createdAt": "2020-10-20T17:31:19Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java", "diffHunk": "@@ -265,6 +265,12 @@ protected static void validateUpsertConfig(TableConfig tableConfig, Schema schem\n         tableConfig.getRoutingConfig() != null && RoutingConfig.REPLICA_GROUP_INSTANCE_SELECTOR_TYPE\n             .equalsIgnoreCase(tableConfig.getRoutingConfig().getInstanceSelectorType()),\n         \"Upsert table must use replica-group (i.e. replicaGroup) based routing\");\n+    // no startree index\n+    if (tableConfig.getIndexingConfig() != null && tableConfig.getIndexingConfig().getStarTreeIndexConfigs() != null) {\n+      Preconditions.checkState(\n+          tableConfig.getIndexingConfig().getStarTreeIndexConfigs().isEmpty() && !tableConfig.getIndexingConfig()\n+              .isEnableDefaultStarTree(), \"The upsert table cannot have star-tree index.\");\n+    }", "originalCommit": "1f400bfcf93f2ffb519ff7491fb75384c7251a85", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "12b653723580eb97315a4e6790b84c7ed37aa361", "url": "https://github.com/apache/pinot/commit/12b653723580eb97315a4e6790b84c7ed37aa361", "message": "comments", "committedDate": "2020-10-20T19:24:57Z", "type": "commit"}]}