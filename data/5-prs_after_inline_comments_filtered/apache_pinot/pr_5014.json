{"pr_number": 5014, "pr_title": "fixing converting PinotQuery to BrokerRequest for group by clause with selections", "pr_createdAt": "2020-01-24T08:32:15Z", "pr_url": "https://github.com/apache/pinot/pull/5014", "timeline": [{"oid": "f964ac467fadd31d5eac6a67e0f4d6f76627bb5f", "url": "https://github.com/apache/pinot/commit/f964ac467fadd31d5eac6a67e0f4d6f76627bb5f", "message": "fixing converting PinotQuery to BrokerRequest for group by clause with selections", "committedDate": "2020-01-24T08:35:29Z", "type": "forcePushed"}, {"oid": "766f01b8a707f06e7a0fe7b4e32becc570470cbe", "url": "https://github.com/apache/pinot/commit/766f01b8a707f06e7a0fe7b4e32becc570470cbe", "message": "fixing converting PinotQuery to BrokerRequest for group by clause with selections", "committedDate": "2020-01-24T08:36:25Z", "type": "commit"}, {"oid": "766f01b8a707f06e7a0fe7b4e32becc570470cbe", "url": "https://github.com/apache/pinot/commit/766f01b8a707f06e7a0fe7b4e32becc570470cbe", "message": "fixing converting PinotQuery to BrokerRequest for group by clause with selections", "committedDate": "2020-01-24T08:36:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc2NzU4MA==", "url": "https://github.com/apache/pinot/pull/5014#discussion_r370767580", "bodyText": "Add one more test to cover cases like \"select A, count(*) from table group by A,B\"?", "author": "chenboat", "createdAt": "2020-01-24T18:05:17Z", "path": "pinot-common/src/test/java/org/apache/pinot/sql/parsers/CalciteSqlCompilerTest.java", "diffHunk": "@@ -832,4 +849,17 @@ public void testSqlDistinctQueryCompilation() {\n     Assert.assertEquals(aggregationInfo.getAggregationParams().get(FunctionCallAstNode.COLUMN_KEY_IN_AGGREGATION_INFO),\n         \"add(div(col1,col2),mul(col3,col4)):sub(col3,col4):col5:col6\");\n   }\n+\n+  @Test\n+  public void testQueryValidationFailure() {", "originalCommit": "766f01b8a707f06e7a0fe7b4e32becc570470cbe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgxODQ5OA==", "url": "https://github.com/apache/pinot/pull/5014#discussion_r370818498", "bodyText": "I thought this is a valid query ?", "author": "xiangfu0", "createdAt": "2020-01-24T20:02:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc2NzU4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgyMzQwOQ==", "url": "https://github.com/apache/pinot/pull/5014#discussion_r370823409", "bodyText": "added this to the test", "author": "xiangfu0", "createdAt": "2020-01-24T20:15:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc2NzU4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc2ODA4Mg==", "url": "https://github.com/apache/pinot/pull/5014#discussion_r370768082", "bodyText": "NIT: use if(pinotQuery.getGroupByList() == null) return; to reduce the nest levels.", "author": "chenboat", "createdAt": "2020-01-24T18:06:30Z", "path": "pinot-common/src/main/java/org/apache/pinot/sql/parsers/CalciteSqlParser.java", "diffHunk": "@@ -92,6 +94,34 @@ public static PinotQuery compileToPinotQuery(String sql)\n     return pinotQuery;\n   }\n \n+  static void validate(PinotQuery pinotQuery)\n+      throws SqlCompilationException {\n+    // Sanity check group by query: All identifiers in selection list should be also included in group by list.\n+    if (pinotQuery.getGroupByList() != null) {", "originalCommit": "766f01b8a707f06e7a0fe7b4e32becc570470cbe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgyMzQ0OQ==", "url": "https://github.com/apache/pinot/pull/5014#discussion_r370823449", "bodyText": "done", "author": "xiangfu0", "createdAt": "2020-01-24T20:15:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc2ODA4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc2ODc2OQ==", "url": "https://github.com/apache/pinot/pull/5014#discussion_r370768769", "bodyText": "Should we check identifiers or expressions?", "author": "Jackie-Jiang", "createdAt": "2020-01-24T18:08:04Z", "path": "pinot-common/src/main/java/org/apache/pinot/sql/parsers/CalciteSqlParser.java", "diffHunk": "@@ -92,6 +94,34 @@ public static PinotQuery compileToPinotQuery(String sql)\n     return pinotQuery;\n   }\n \n+  static void validate(PinotQuery pinotQuery)\n+      throws SqlCompilationException {\n+    // Sanity check group by query: All identifiers in selection list should be also included in group by list.", "originalCommit": "766f01b8a707f06e7a0fe7b4e32becc570470cbe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc3MDY4OQ==", "url": "https://github.com/apache/pinot/pull/5014#discussion_r370770689", "bodyText": "I don't think we should support function expressions part of GROUP BY clause. See example here #5014 (comment)", "author": "siddharthteotia", "createdAt": "2020-01-24T18:12:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc2ODc2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgxOTg0OQ==", "url": "https://github.com/apache/pinot/pull/5014#discussion_r370819849", "bodyText": "GroupBy clause could be non-aggregate expressions, like dateConverter(), ADD(...), SUB(...)", "author": "xiangfu0", "createdAt": "2020-01-24T20:05:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc2ODc2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc2OTgxMQ==", "url": "https://github.com/apache/pinot/pull/5014#discussion_r370769811", "bodyText": "I agree that we should be checking for identifiers. However, I think a query like this:\nSELECT State, Count() from Customers GROUP BY State, Count() should not be supported.\nIn other words, we should not have the aggregations as one of the GROUP BY columns.", "author": "siddharthteotia", "createdAt": "2020-01-24T18:10:44Z", "path": "pinot-common/src/test/java/org/apache/pinot/sql/parsers/CalciteSqlCompilerTest.java", "diffHunk": "@@ -832,4 +849,17 @@ public void testSqlDistinctQueryCompilation() {\n     Assert.assertEquals(aggregationInfo.getAggregationParams().get(FunctionCallAstNode.COLUMN_KEY_IN_AGGREGATION_INFO),\n         \"add(div(col1,col2),mul(col3,col4)):sub(col3,col4):col5:col6\");\n   }\n+\n+  @Test\n+  public void testQueryValidationFailure() {\n+    String sql;\n+    try {\n+      sql = \"select group_city,group_country, sum(rsvp_count), count(*) from meetupRsvp group by group_country, sum(rsvp_count), count(*) limit 50\";", "originalCommit": "766f01b8a707f06e7a0fe7b4e32becc570470cbe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc3MDE5MA==", "url": "https://github.com/apache/pinot/pull/5014#discussion_r370770190", "bodyText": "Try the following queries here https://www.w3schools.com/sql/trysql.asp?filename=trysql_select_no_distinct\n(1) SELECT City, SUM(PostalCode) FROM Customers GROUP BY City, SUM(PostalCode)\n(2) SELECT City, SUM(PostalCode) FROM Customers GROUP BY City\n(2) is valid whereas (1) fails", "author": "siddharthteotia", "createdAt": "2020-01-24T18:11:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc2OTgxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc3MDg4Mg==", "url": "https://github.com/apache/pinot/pull/5014#discussion_r370770882", "bodyText": "So we should add tests for this case too", "author": "siddharthteotia", "createdAt": "2020-01-24T18:13:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc2OTgxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc3MjAzOQ==", "url": "https://github.com/apache/pinot/pull/5014#discussion_r370772039", "bodyText": "The error seen on executing the above examples as per the w3schools website is:\nError 1: could not prepare statement (1 aggregate functions are not allowed in the GROUP BY clause).", "author": "siddharthteotia", "createdAt": "2020-01-24T18:16:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc2OTgxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgxOTU0NA==", "url": "https://github.com/apache/pinot/pull/5014#discussion_r370819544", "bodyText": "GROUP BY clause shouldn't contain aggregate expression like sum(PostalCode), however, you can still do dateConverter(secondsSinceEpoch) etc, which is non-aggregate Transform function. Or expressions like ADD(a,b).\nMy validate assumes that group by clause is always non-aggregate expression, so that we could extract all the identifier from them.", "author": "xiangfu0", "createdAt": "2020-01-24T20:05:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc2OTgxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgzMzQzMw==", "url": "https://github.com/apache/pinot/pull/5014#discussion_r370833433", "bodyText": "Also added a validation to prevent aggregate expression in group by clause.", "author": "xiangfu0", "createdAt": "2020-01-24T20:42:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc2OTgxMQ=="}], "type": "inlineReview"}, {"oid": "f9c45b7f12066c444ba7ae38563e8d8733adef04", "url": "https://github.com/apache/pinot/commit/f9c45b7f12066c444ba7ae38563e8d8733adef04", "message": "Address comments", "committedDate": "2020-01-24T20:39:47Z", "type": "forcePushed"}, {"oid": "dd0884766b5fb777015476d13fb2b78f39feea30", "url": "https://github.com/apache/pinot/commit/dd0884766b5fb777015476d13fb2b78f39feea30", "message": "Address comments", "committedDate": "2020-01-24T20:46:37Z", "type": "commit"}, {"oid": "dd0884766b5fb777015476d13fb2b78f39feea30", "url": "https://github.com/apache/pinot/commit/dd0884766b5fb777015476d13fb2b78f39feea30", "message": "Address comments", "committedDate": "2020-01-24T20:46:37Z", "type": "forcePushed"}]}