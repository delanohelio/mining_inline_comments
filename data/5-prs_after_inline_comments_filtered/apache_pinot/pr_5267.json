{"pr_number": 5267, "pr_title": "Re-implement ORCRecordReader", "pr_createdAt": "2020-04-17T07:28:02Z", "pr_url": "https://github.com/apache/pinot/pull/5267", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDM1NzI3Mw==", "url": "https://github.com/apache/pinot/pull/5267#discussion_r410357273", "bodyText": "Hive's ORC reader has a zero copy option to boost performance when reading from HDFS -- https://issues.apache.org/jira/browse/HIVE-6347\nSecondly, I wonder if we can do something about making this vectorized. Probably not because we anyway have to create a GenericRow and return it for every next() call. However, in general it is possible to read a single column vector at a time from VectorizedRowBatch and avoid the repeated dynamic dispatch in the loop\nSay if we do vectorized reads from each column vector from a single VectorizedRowBatch and then pick values from each cell to create a batch of GenericRow, would performance be any different? In that case, the next() API semantics can be changed to bulk based.", "author": "siddharthteotia", "createdAt": "2020-04-17T17:10:19Z", "path": "pinot-plugins/pinot-input-format/pinot-orc/src/main/java/org/apache/pinot/plugin/inputformat/orc/ORCRecordReader.java", "diffHunk": "@@ -95,25 +171,151 @@ public GenericRow next()\n   @Override\n   public GenericRow next(GenericRow reuse)\n       throws IOException {\n-    _recordReader.nextBatch(_reusableVectorizedRowBatch);\n-    return _recordExtractor.extract(_reusableVectorizedRowBatch, reuse);\n+    int numFields = _orcFields.size();", "originalCommit": "774d9091827a99757ca3b96cb957fe87ed296806", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDM1Nzk1OA==", "url": "https://github.com/apache/pinot/pull/5267#discussion_r410357958", "bodyText": "The fact that we have to materialize the data read immediately into row loses any benefit we could have got from vectorization. May be if we do this in bulk manner, it could change things.", "author": "siddharthteotia", "createdAt": "2020-04-17T17:11:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDM1NzI3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDM3MTQ0NA==", "url": "https://github.com/apache/pinot/pull/5267#discussion_r410371444", "bodyText": "This is not something worth optimizing - unless we can save hours. This code is not used in the query path.", "author": "kishoreg", "createdAt": "2020-04-17T17:36:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDM1NzI3Mw=="}], "type": "inlineReview"}, {"oid": "5a80fad5469afa43bffabc5724f21aedfc496405", "url": "https://github.com/apache/pinot/commit/5a80fad5469afa43bffabc5724f21aedfc496405", "message": "Re-implement ORCRecordReader\n\n- Support batch read\n- Support most value types\n- Support read only required fields\n- Enhance tests to cover most value types", "committedDate": "2020-04-17T18:49:57Z", "type": "commit"}, {"oid": "5a80fad5469afa43bffabc5724f21aedfc496405", "url": "https://github.com/apache/pinot/commit/5a80fad5469afa43bffabc5724f21aedfc496405", "message": "Re-implement ORCRecordReader\n\n- Support batch read\n- Support most value types\n- Support read only required fields\n- Enhance tests to cover most value types", "committedDate": "2020-04-17T18:49:57Z", "type": "forcePushed"}]}