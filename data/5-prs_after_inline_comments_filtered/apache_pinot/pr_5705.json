{"pr_number": 5705, "pr_title": "Add error message to broker response in case of broker send error", "pr_createdAt": "2020-07-15T00:21:30Z", "pr_url": "https://github.com/apache/pinot/pull/5705", "timeline": [{"oid": "054d65245cbcc2d304e062d145a7ca844218d114", "url": "https://github.com/apache/pinot/commit/054d65245cbcc2d304e062d145a7ca844218d114", "message": "Add error message to broker response in case of broker send error", "committedDate": "2020-07-14T23:32:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTIzNzI2NQ==", "url": "https://github.com/apache/pinot/pull/5705#discussion_r455237265", "bodyText": "Avoid static import.", "author": "mayankshriv", "createdAt": "2020-07-15T17:57:25Z", "path": "pinot-broker/src/main/java/org/apache/pinot/broker/requesthandler/SingleConnectionBrokerRequestHandler.java", "diffHunk": "@@ -47,6 +49,8 @@\n import org.apache.pinot.spi.env.PinotConfiguration;\n import org.apache.pinot.spi.utils.builder.TableNameBuilder;\n \n+import static org.apache.pinot.common.exception.QueryException.BROKER_REQUEST_SEND_ERROR_CODE;", "originalCommit": "054d65245cbcc2d304e062d145a7ca844218d114", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQwOTYzMw==", "url": "https://github.com/apache/pinot/pull/5705#discussion_r455409633", "bodyText": "(nit) Package private?", "author": "Jackie-Jiang", "createdAt": "2020-07-15T22:51:12Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/transport/AsyncQueryResponse.java", "diffHunk": "@@ -105,4 +107,12 @@ void markServerDown(ServerRoutingInstance serverRoutingInstance) {\n       markQueryFailed();\n     }\n   }\n+\n+  public Exception getBrokerRequestSendException() {\n+    return _brokerRequestSendException;\n+  }\n+\n+  public void setBrokerRequestSendException(Exception brokerRequestSendException) {", "originalCommit": "054d65245cbcc2d304e062d145a7ca844218d114", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQxMDAzOQ==", "url": "https://github.com/apache/pinot/pull/5705#discussion_r455410039", "bodyText": "Make it volatile? (Although it is always set and read by the same thread)", "author": "Jackie-Jiang", "createdAt": "2020-07-15T22:52:16Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/transport/AsyncQueryResponse.java", "diffHunk": "@@ -39,6 +39,8 @@\n   private final CountDownLatch _countDownLatch;\n   private final long _maxEndTimeMs;\n \n+  private Exception _brokerRequestSendException;", "originalCommit": "054d65245cbcc2d304e062d145a7ca844218d114", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA1NzQxNA==", "url": "https://github.com/apache/pinot/pull/5705#discussion_r456057414", "bodyText": "Good suggestion. Being on same thread might change in future due to some refactoring and it's good to have it as volatile.", "author": "sajjad-moradi", "createdAt": "2020-07-16T20:27:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQxMDAzOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQxMDcyNA==", "url": "https://github.com/apache/pinot/pull/5705#discussion_r455410724", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (asyncQueryResponse.getBrokerRequestSendException() != null) {\n          \n          \n            \n                  String errorMsg = QueryException.getTruncatedStackTrace(asyncQueryResponse.getBrokerRequestSendException());\n          \n          \n            \n                  brokerResponse.addToExceptions(new QueryProcessingException(BROKER_REQUEST_SEND_ERROR_CODE, errorMsg));\n          \n          \n            \n                }\n          \n          \n            \n                Exception brokerRequestSendException = asyncQueryResponse.getBrokerRequestSendException();\n          \n          \n            \n                if (brokerRequestSendException != null) {\n          \n          \n            \n                  brokerResponse.addToExceptions(new QueryProcessingException(BROKER_REQUEST_SEND_ERROR_CODE, brokerRequestSendException));\n          \n          \n            \n                }", "author": "Jackie-Jiang", "createdAt": "2020-07-15T22:54:26Z", "path": "pinot-broker/src/main/java/org/apache/pinot/broker/requesthandler/SingleConnectionBrokerRequestHandler.java", "diffHunk": "@@ -114,6 +118,10 @@ protected BrokerResponse processBrokerRequest(long requestId, BrokerRequest orig\n     brokerResponse.setNumServersQueried(numServersQueried);\n     brokerResponse.setNumServersResponded(numServersResponded);\n \n+    if (asyncQueryResponse.getBrokerRequestSendException() != null) {\n+      String errorMsg = QueryException.getTruncatedStackTrace(asyncQueryResponse.getBrokerRequestSendException());\n+      brokerResponse.addToExceptions(new QueryProcessingException(BROKER_REQUEST_SEND_ERROR_CODE, errorMsg));\n+    }", "originalCommit": "054d65245cbcc2d304e062d145a7ca844218d114", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQxMTA3Nw==", "url": "https://github.com/apache/pinot/pull/5705#discussion_r455411077", "bodyText": "Not sure if we should expose this method", "author": "Jackie-Jiang", "createdAt": "2020-07-15T22:55:27Z", "path": "pinot-common/src/main/java/org/apache/pinot/common/exception/QueryException.java", "diffHunk": "@@ -125,8 +126,17 @@ public static void setMaxLinesOfStackTrace(int maxLinesOfStackTrace) {\n   }\n \n   public static ProcessingException getException(ProcessingException processingException, Exception exception) {\n+    return getException(processingException, getTruncatedStackTrace(exception));\n+  }\n+\n+  public static ProcessingException getException(ProcessingException processingException, String errorMessage) {\n     String errorType = processingException.getMessage();\n     ProcessingException copiedProcessingException = processingException.deepCopy();\n+    copiedProcessingException.setMessage(errorType + \":\\n\" + errorMessage);\n+    return copiedProcessingException;\n+  }\n+\n+  public static String getTruncatedStackTrace(Exception exception) {", "originalCommit": "054d65245cbcc2d304e062d145a7ca844218d114", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA1OTA2MQ==", "url": "https://github.com/apache/pinot/pull/5705#discussion_r456059061", "bodyText": "Why not? One example of its usefulness is in this PR as we need to truncate the stack trace and return it in broker response.", "author": "sajjad-moradi", "createdAt": "2020-07-16T20:30:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQxMTA3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjEzNjY3MA==", "url": "https://github.com/apache/pinot/pull/5705#discussion_r456136670", "bodyText": "To send stack trace, we should use getException(ProcessingException processingException, Exception exception) instead of calling this method to construct the error message and use getException(ProcessingException processingException, String errorMessage)", "author": "Jackie-Jiang", "createdAt": "2020-07-16T23:38:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQxMTA3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE1MzgzOQ==", "url": "https://github.com/apache/pinot/pull/5705#discussion_r456153839", "bodyText": "getException method takes ProcessingException as its argument while we need to construct a QueryProcesssingException to pass it in broker response. That's why i did that refactoring.", "author": "sajjad-moradi", "createdAt": "2020-07-17T00:37:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQxMTA3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI0MTI0Ng==", "url": "https://github.com/apache/pinot/pull/5705#discussion_r456241246", "bodyText": "Sorry didn't realize they are different classes.\n(Optional) You might also want to keep the errorType information in the error message? If so, you can construct a ProcessingException first, then use it to construct the QueryProcessingException: new QueryProcessingException(exception.getErrorCode(), exception.getMessage())", "author": "Jackie-Jiang", "createdAt": "2020-07-17T06:20:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQxMTA3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU2NDM3MA==", "url": "https://github.com/apache/pinot/pull/5705#discussion_r457564370", "bodyText": "errorType, which is basically exception.getMessage(), is always available in the first line of the stack trace. Since we keep the stack trace, we don't need to separately keep it.", "author": "sajjad-moradi", "createdAt": "2020-07-20T17:10:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQxMTA3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc2MTcyOA==", "url": "https://github.com/apache/pinot/pull/5705#discussion_r457761728", "bodyText": "The errorType I referred to here is BrokerResponseSendError which you put in the QueryException.class so that users don't need to look up the int error code (425) to understand the type of the error. The error message of the Exception will be:\n  BrokerResponseSendError:\n  {stacktrace}\n\nI already approved the change. These comments are just suggestions. You can merge it", "author": "Jackie-Jiang", "createdAt": "2020-07-21T00:15:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQxMTA3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc2MjQ0Mw==", "url": "https://github.com/apache/pinot/pull/5705#discussion_r457762443", "bodyText": "I don't have the write access to merge this PR. How can I get the write access?", "author": "sajjad-moradi", "createdAt": "2020-07-21T00:17:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQxMTA3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg0NzYwOQ==", "url": "https://github.com/apache/pinot/pull/5705#discussion_r457847609", "bodyText": "@sajjad-moradi Merged the PR. I think you need to be a committer in order to merge PR. @mayankshriv @mcvsubbu Do we need to start a vote in order to make Sajjad a committer?", "author": "Jackie-Jiang", "createdAt": "2020-07-21T05:36:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQxMTA3Nw=="}], "type": "inlineReview"}, {"oid": "7558ebd285c345b3f5ba8c39ae3ac169ce0c2f87", "url": "https://github.com/apache/pinot/commit/7558ebd285c345b3f5ba8c39ae3ac169ce0c2f87", "message": "Apply PR's suggestions", "committedDate": "2020-07-16T20:24:35Z", "type": "commit"}]}