{"pr_number": 5430, "pr_title": "One to many records from record reader/decoder", "pr_createdAt": "2020-05-22T05:24:15Z", "pr_url": "https://github.com/apache/pinot/pull/5430", "timeline": [{"oid": "e61a40248200e89c5f39ba0f2cda04743287a0dc", "url": "https://github.com/apache/pinot/commit/e61a40248200e89c5f39ba0f2cda04743287a0dc", "message": "Multiple records from record reader", "committedDate": "2020-06-08T00:26:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg4NzM5MA==", "url": "https://github.com/apache/pinot/pull/5430#discussion_r436887390", "bodyText": "is there a way to avoid creating this list. 99% will not have list.", "author": "kishoreg", "createdAt": "2020-06-08T17:51:02Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/data/manager/realtime/LLRealtimeSegmentDataManager.java", "diffHunk": "@@ -466,19 +469,28 @@ private void processStreamEvents(MessageBatch messagesAndOffsets, long idlePipeS\n               messagesAndOffsets.getMessageLengthAtIndex(index), reuse);\n       if (decodedRow != null) {\n         try {\n-          GenericRow transformedRow = _recordTransformer.transform(decodedRow);\n-\n-          if (transformedRow != null) {\n-            realtimeRowsConsumedMeter = _serverMetrics\n-                .addMeteredTableValue(_metricKeyName, ServerMeter.REALTIME_ROWS_CONSUMED, 1, realtimeRowsConsumedMeter);\n-            indexedMessageCount++;\n+          List<GenericRow> transformedRows;\n+          if (decodedRow.getValue(CommonConstants.Segment.MULTIPLE_RECORDS_KEY) != null) {\n+            transformedRows = new ArrayList<>();\n+            for (Object singleRow : (Collection) decodedRow.getValue(CommonConstants.Segment.MULTIPLE_RECORDS_KEY)) {\n+              transformedRows.add(_recordTransformer.transform((GenericRow) singleRow));\n+            }\n           } else {\n-            realtimeRowsDroppedMeter = _serverMetrics\n-                .addMeteredTableValue(_metricKeyName, ServerMeter.INVALID_REALTIME_ROWS_DROPPED, 1,\n-                    realtimeRowsDroppedMeter);\n+            transformedRows = Collections.singletonList(_recordTransformer.transform(decodedRow));", "originalCommit": "e61a40248200e89c5f39ba0f2cda04743287a0dc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA5NzQ5NA==", "url": "https://github.com/apache/pinot/pull/5430#discussion_r437097494", "bodyText": "avoided (at the cost of some code duplication in the if-else)", "author": "npawar", "createdAt": "2020-06-09T02:08:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg4NzM5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg4ODIyOQ==", "url": "https://github.com/apache/pinot/pull/5430#discussion_r436888229", "bodyText": "maybe extract this method into collectRow similar to offline indexing and invoke it directly to avoid the penalty of creating a list", "author": "kishoreg", "createdAt": "2020-06-08T17:52:26Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/data/manager/realtime/LLRealtimeSegmentDataManager.java", "diffHunk": "@@ -466,19 +469,28 @@ private void processStreamEvents(MessageBatch messagesAndOffsets, long idlePipeS\n               messagesAndOffsets.getMessageLengthAtIndex(index), reuse);\n       if (decodedRow != null) {\n         try {\n-          GenericRow transformedRow = _recordTransformer.transform(decodedRow);\n-\n-          if (transformedRow != null) {\n-            realtimeRowsConsumedMeter = _serverMetrics\n-                .addMeteredTableValue(_metricKeyName, ServerMeter.REALTIME_ROWS_CONSUMED, 1, realtimeRowsConsumedMeter);\n-            indexedMessageCount++;\n+          List<GenericRow> transformedRows;\n+          if (decodedRow.getValue(CommonConstants.Segment.MULTIPLE_RECORDS_KEY) != null) {\n+            transformedRows = new ArrayList<>();\n+            for (Object singleRow : (Collection) decodedRow.getValue(CommonConstants.Segment.MULTIPLE_RECORDS_KEY)) {\n+              transformedRows.add(_recordTransformer.transform((GenericRow) singleRow));\n+            }\n           } else {\n-            realtimeRowsDroppedMeter = _serverMetrics\n-                .addMeteredTableValue(_metricKeyName, ServerMeter.INVALID_REALTIME_ROWS_DROPPED, 1,\n-                    realtimeRowsDroppedMeter);\n+            transformedRows = Collections.singletonList(_recordTransformer.transform(decodedRow));\n           }\n \n-          canTakeMore = _realtimeSegment.index(transformedRow, msgMetadata);\n+          for (GenericRow transformedRow : transformedRows) {\n+            if (transformedRow != null) {", "originalCommit": "e61a40248200e89c5f39ba0f2cda04743287a0dc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA5NTcxOQ==", "url": "https://github.com/apache/pinot/pull/5430#discussion_r437095719", "bodyText": "that method would need to return indexedMessageCount, canTakeMore and 2 meters. Removed the list by immediately calling index and updating the counters, in both cases. Created some code duplication, but i dont see a better and simple way", "author": "npawar", "createdAt": "2020-06-09T02:02:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg4ODIyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk4NTgyNg==", "url": "https://github.com/apache/pinot/pull/5430#discussion_r436985826", "bodyText": "put this in GenericRow?\nmultiple.records.key -> $MULTIPLE_RECORDS_KEY$ avoid '.'", "author": "kishoreg", "createdAt": "2020-06-08T20:37:07Z", "path": "pinot-common/src/main/java/org/apache/pinot/common/utils/CommonConstants.java", "diffHunk": "@@ -363,5 +363,7 @@\n \n     @Deprecated\n     public static final String TABLE_NAME = \"segment.table.name\";\n+\n+    public static final String MULTIPLE_RECORDS_KEY = \"multiple.records.key\";", "originalCommit": "e61a40248200e89c5f39ba0f2cda04743287a0dc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1f7e59ce829aeca5ddecb80248841e6954e9da39", "url": "https://github.com/apache/pinot/commit/1f7e59ce829aeca5ddecb80248841e6954e9da39", "message": "Dont create arraylist", "committedDate": "2020-06-09T02:06:38Z", "type": "forcePushed"}, {"oid": "e1af6960a5f533303bd34e60e34373ca3fbf0c2f", "url": "https://github.com/apache/pinot/commit/e1af6960a5f533303bd34e60e34373ca3fbf0c2f", "message": "Multiple records from record reader", "committedDate": "2020-06-09T17:13:45Z", "type": "commit"}, {"oid": "32f8c23c738ae1d1500e691038edefc50b0492e1", "url": "https://github.com/apache/pinot/commit/32f8c23c738ae1d1500e691038edefc50b0492e1", "message": "Dont create arraylist", "committedDate": "2020-06-09T17:13:45Z", "type": "commit"}, {"oid": "32f8c23c738ae1d1500e691038edefc50b0492e1", "url": "https://github.com/apache/pinot/commit/32f8c23c738ae1d1500e691038edefc50b0492e1", "message": "Dont create arraylist", "committedDate": "2020-06-09T17:13:45Z", "type": "forcePushed"}]}