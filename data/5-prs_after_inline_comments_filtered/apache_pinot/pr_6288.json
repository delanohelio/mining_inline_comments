{"pr_number": 6288, "pr_title": "Use sorted index based filtering only for dictionary encoded column", "pr_createdAt": "2020-11-25T07:45:09Z", "pr_url": "https://github.com/apache/pinot/pull/6288", "timeline": [{"oid": "a6535ca2d3a774efae5c509be4773a317869dee3", "url": "https://github.com/apache/pinot/commit/a6535ca2d3a774efae5c509be4773a317869dee3", "message": "Use sorted index based filtering\nonly for sorted column with dictionary", "committedDate": "2020-11-25T07:38:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU5MDUxMw==", "url": "https://github.com/apache/pinot/pull/6288#discussion_r530590513", "bodyText": "(nit)\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  if (dataSource.getDataSourceMetadata().isSorted() && (dataSource.getDictionary() != null)) {\n          \n          \n            \n                  if (dataSource.getDataSourceMetadata().isSorted() && dataSource.getDictionary() != null) {", "author": "Jackie-Jiang", "createdAt": "2020-11-25T19:09:35Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/operator/filter/FilterOperatorUtils.java", "diffHunk": "@@ -47,9 +47,15 @@ public static BaseFilterOperator getLeafFilterOperator(PredicateEvaluator predic\n       return new MatchAllFilterOperator(numDocs);\n     }\n \n+    // Currently sorted index based filtering is supported only for\n+    // dictionary encoded columns. The on-disk segment metadata\n+    // will indicate if the column is sorted or not regardless of\n+    // whether it is raw or dictionary encoded. Here when creating\n+    // the filter operator, we need to make sure that sort filter\n+    // operator is used only if the column is sorted and has dictionary.\n     Predicate.Type predicateType = predicateEvaluator.getPredicateType();\n     if (predicateType == Predicate.Type.RANGE) {\n-      if (dataSource.getDataSourceMetadata().isSorted()) {\n+      if (dataSource.getDataSourceMetadata().isSorted() && (dataSource.getDictionary() != null)) {", "originalCommit": "a6535ca2d3a774efae5c509be4773a317869dee3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg0OTU0Mg==", "url": "https://github.com/apache/pinot/pull/6288#discussion_r532849542", "bodyText": "done", "author": "siddharthteotia", "createdAt": "2020-11-30T19:36:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU5MDUxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU5MDcwMw==", "url": "https://github.com/apache/pinot/pull/6288#discussion_r530590703", "bodyText": "(nit)\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  if (dataSource.getDataSourceMetadata().isSorted() && (dataSource.getDictionary() != null)) {\n          \n          \n            \n                  if (dataSource.getDataSourceMetadata().isSorted() && dataSource.getDictionary() != null) {", "author": "Jackie-Jiang", "createdAt": "2020-11-25T19:09:59Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/operator/filter/FilterOperatorUtils.java", "diffHunk": "@@ -59,7 +65,7 @@ public static BaseFilterOperator getLeafFilterOperator(PredicateEvaluator predic\n     } else if (predicateType == Predicate.Type.REGEXP_LIKE) {\n       return new ScanBasedFilterOperator(predicateEvaluator, dataSource, numDocs);\n     } else {\n-      if (dataSource.getDataSourceMetadata().isSorted()) {\n+      if (dataSource.getDataSourceMetadata().isSorted() && (dataSource.getDictionary() != null)) {", "originalCommit": "a6535ca2d3a774efae5c509be4773a317869dee3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg0OTU5Mg==", "url": "https://github.com/apache/pinot/pull/6288#discussion_r532849592", "bodyText": "done", "author": "siddharthteotia", "createdAt": "2020-11-30T19:36:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU5MDcwMw=="}], "type": "inlineReview"}, {"oid": "e0cd8ac8f3e23c31693736f5f9b40ace402ab1e2", "url": "https://github.com/apache/pinot/commit/e0cd8ac8f3e23c31693736f5f9b40ace402ab1e2", "message": "Address review comments", "committedDate": "2020-11-30T19:35:22Z", "type": "commit"}]}