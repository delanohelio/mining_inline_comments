{"pr_number": 5212, "pr_title": "[TE] endpoint - harleyjj/metricBreakdownPipeline - add flag for ignor\u2026", "pr_createdAt": "2020-04-06T22:30:24Z", "pr_url": "https://github.com/apache/pinot/pull/5212", "timeline": [{"oid": "fd672147e216e06f5b60848836e978ad641e96df", "url": "https://github.com/apache/pinot/commit/fd672147e216e06f5b60848836e978ad641e96df", "message": "[TE] endpoint - harleyjj/metricBreakdownPipeline - add flag for ignoring score when adding dimensions to response", "committedDate": "2020-04-06T22:29:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTgzMzE0Ng==", "url": "https://github.com/apache/pinot/pull/5212#discussion_r405833146", "bodyText": "Who is calling this or rather how is this being triggered? I do not see any updates to the caller in this PR.", "author": "akshayrai", "createdAt": "2020-04-08T21:44:18Z", "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/rootcause/impl/MetricBreakdownPipeline.java", "diffHunk": "@@ -107,9 +112,11 @@\n    * @param includeDimensions dimensions to break down on (all if empty)\n    * @param excludeDimensions dimensions not to break down on\n    * @param k number of top-ranking elements to emit\n+   * @param ignoreScore flag to include all breakdowns, even if score is zero (only set if ignoring wanted)\n    */\n   public MetricBreakdownPipeline(String outputName, Set<String> inputNames, MetricConfigManager metricDAO,\n-      DatasetConfigManager datasetDAO, QueryCache cache, ExecutorService executor, Set<String> includeDimensions, Set<String> excludeDimensions, int k) {\n+      DatasetConfigManager datasetDAO, QueryCache cache, ExecutorService executor, Set<String> includeDimensions,\n+      Set<String> excludeDimensions, int k, boolean ignoreScore) {", "originalCommit": "fd672147e216e06f5b60848836e978ad641e96df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg0MDQ2OQ==", "url": "https://github.com/apache/pinot/pull/5212#discussion_r405840469", "bodyText": "The rca.yml configuration file is where we trigger and configure the framework.  From the RCA Dev guide:\n\"Every pipeline configuration consists of four fields: \"outputName\" respresents the name of the pipeline. \"inputNames\" is a list of pipeline names that deliver their outputs as input to the current pipeline. \"className\" specifies the fully qualified class name of the business logic implementing this pipeline. And finally \"properties\" holds a map of String-Object tuples that are passed to the pipeline constructor as configuration parameters (see \"coding conventions\" below). The properties map is deserialized using and ObjectMapper and can contain nested lists and maps in addition to primitive values.\"", "author": "harleyjj", "createdAt": "2020-04-08T22:00:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTgzMzE0Ng=="}], "type": "inlineReview"}]}