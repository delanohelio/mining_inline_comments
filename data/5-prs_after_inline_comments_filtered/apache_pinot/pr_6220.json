{"pr_number": 6220, "pr_title": "Adding BootstrapTable command to allow bootstrapping a table from an example directory", "pr_createdAt": "2020-11-02T08:41:34Z", "pr_url": "https://github.com/apache/pinot/pull/6220", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAyODYzOQ==", "url": "https://github.com/apache/pinot/pull/6220#discussion_r516028639", "bodyText": "add a - after githubEvents", "author": "kishoreg", "createdAt": "2020-11-02T14:57:13Z", "path": "pinot-tools/src/main/java/org/apache/pinot/tools/GitHubEventsQuickstart.java", "diffHunk": "@@ -62,7 +62,7 @@ private void startKafka() {\n \n   public void execute(String personalAccessToken)\n       throws Exception {\n-    final File quickStartDataDir = new File(\"githubEvents\" + System.currentTimeMillis());\n+    final File quickStartDataDir = new File(new File(\"githubEvents\" + System.currentTimeMillis()), \"pullRequestMergedEvents\");", "originalCommit": "21d34dc499a187273e001744c28dd5096e49cef9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAyOTczMw==", "url": "https://github.com/apache/pinot/pull/6220#discussion_r516029733", "bodyText": "java docs, you can put the same content in the PR description", "author": "kishoreg", "createdAt": "2020-11-02T14:58:47Z", "path": "pinot-tools/src/main/java/org/apache/pinot/tools/BootstrapTableTool.java", "diffHunk": "@@ -0,0 +1,130 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.tools;\n+\n+import java.io.BufferedReader;\n+import java.io.File;\n+import java.io.FileReader;\n+import java.io.Reader;\n+import java.net.URL;\n+import org.apache.commons.io.FileUtils;\n+import org.apache.pinot.spi.ingestion.batch.IngestionJobLauncher;\n+import org.apache.pinot.spi.ingestion.batch.spec.SegmentGenerationJobSpec;\n+import org.apache.pinot.tools.admin.command.AddTableCommand;\n+import org.apache.pinot.tools.admin.command.QuickstartRunner;\n+import org.apache.pinot.tools.utils.JarUtils;\n+import org.yaml.snakeyaml.Yaml;\n+\n+\n+public class BootstrapTableTool {", "originalCommit": "21d34dc499a187273e001744c28dd5096e49cef9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE4OTQ4NA==", "url": "https://github.com/apache/pinot/pull/6220#discussion_r516189484", "bodyText": "+1", "author": "mayankshriv", "createdAt": "2020-11-02T18:57:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAyOTczMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAzMDI3NA==", "url": "https://github.com/apache/pinot/pull/6220#discussion_r516030274", "bodyText": "better to use logger here so that it can be used in other places?", "author": "kishoreg", "createdAt": "2020-11-02T14:59:30Z", "path": "pinot-tools/src/main/java/org/apache/pinot/tools/BootstrapTableTool.java", "diffHunk": "@@ -0,0 +1,130 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.tools;\n+\n+import java.io.BufferedReader;\n+import java.io.File;\n+import java.io.FileReader;\n+import java.io.Reader;\n+import java.net.URL;\n+import org.apache.commons.io.FileUtils;\n+import org.apache.pinot.spi.ingestion.batch.IngestionJobLauncher;\n+import org.apache.pinot.spi.ingestion.batch.spec.SegmentGenerationJobSpec;\n+import org.apache.pinot.tools.admin.command.AddTableCommand;\n+import org.apache.pinot.tools.admin.command.QuickstartRunner;\n+import org.apache.pinot.tools.utils.JarUtils;\n+import org.yaml.snakeyaml.Yaml;\n+\n+\n+public class BootstrapTableTool {\n+  private final String _controllerHost;\n+  private final int _controllerPort;\n+  private final String _tableDir;\n+\n+  public BootstrapTableTool(String controllerHost, int controllerPort, String tableDir) {\n+    _controllerHost = controllerHost;\n+    _controllerPort = controllerPort;\n+    _tableDir = tableDir;\n+  }\n+\n+  public boolean execute()\n+      throws Exception {\n+    File setupTableTmpDir = new File(FileUtils.getTempDirectory(), String.valueOf(System.currentTimeMillis()));\n+\n+    File tableDir = new File(_tableDir);\n+    String tableName = tableDir.getName();\n+    File schemaFile = new File(tableDir, String.format(\"%s_schema.json\", tableName));\n+    if (!schemaFile.exists()) {\n+      throw new RuntimeException(\n+          \"Unable to find schema file for table - \" + tableName + \", at \" + schemaFile.getAbsolutePath());\n+    }\n+    boolean tableCreationResult = false;\n+    File offlineTableConfigFile = new File(tableDir, String.format(\"%s_offline_table_config.json\", tableName));\n+    if (offlineTableConfigFile.exists()) {\n+      File ingestionJobSpecFile = new File(tableDir, \"ingestionJobSpec.yaml\");\n+      tableCreationResult =\n+          bootstrapOfflineTable(setupTableTmpDir, tableName, schemaFile, offlineTableConfigFile, ingestionJobSpecFile);\n+    }\n+    File realtimeTableConfigFile = new File(tableDir, String.format(\"%s_realtime_table_config.json\", tableName));\n+    if (realtimeTableConfigFile.exists()) {\n+      tableCreationResult = bootstrapRealtimeTable(tableName, schemaFile, realtimeTableConfigFile);\n+    }\n+    if (!tableCreationResult) {\n+      throw new RuntimeException(String\n+          .format(\"Unable to find config files for table - %s, at location [%s] or [%s].\", tableName,\n+              offlineTableConfigFile.getAbsolutePath(), realtimeTableConfigFile.getAbsolutePath()));\n+    }\n+    return true;\n+  }\n+\n+  private boolean bootstrapRealtimeTable(String tableName, File schemaFile, File realtimeTableConfigFile)\n+      throws Exception {\n+    Quickstart.printStatus(Quickstart.Color.CYAN, String.format(\"***** Adding %s realtime table *****\", tableName));", "originalCommit": "21d34dc499a187273e001744c28dd5096e49cef9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjMzOTc0NQ==", "url": "https://github.com/apache/pinot/pull/6220#discussion_r516339745", "bodyText": "done", "author": "xiangfu0", "createdAt": "2020-11-02T23:47:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAzMDI3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE3NDIxNg==", "url": "https://github.com/apache/pinot/pull/6220#discussion_r516174216", "bodyText": "this change is not right?", "author": "yupeng9", "createdAt": "2020-11-02T18:28:28Z", "path": "pinot-tools/src/main/java/org/apache/pinot/tools/UpsertQuickStart.java", "diffHunk": "@@ -48,13 +48,12 @@ public static void main(String[] args)\n   public void execute()\n       throws Exception {\n     File quickstartTmpDir = new File(FileUtils.getTempDirectory(), String.valueOf(System.currentTimeMillis()));\n-    File configDir = new File(quickstartTmpDir, \"configs\");\n-    File dataDir = new File(quickstartTmpDir, \"data\");\n-    Preconditions.checkState(configDir.mkdirs());\n+    File bootstrapTableDir = new File(quickstartTmpDir, \"meetupRsvp\");\n+    File dataDir = new File(bootstrapTableDir, \"data\");\n     Preconditions.checkState(dataDir.mkdirs());\n \n-    File schemaFile = new File(configDir, \"upsert_meetupRsvp_schema.json\");\n-    File tableConfigFile = new File(configDir, \"upsert_meetupRsvp_realtime_table_config.json\");\n+    File schemaFile = new File(bootstrapTableDir, \"meetupRsvp_schema.json\");", "originalCommit": "21d34dc499a187273e001744c28dd5096e49cef9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjMyNjA3Ng==", "url": "https://github.com/apache/pinot/pull/6220#discussion_r516326076", "bodyText": "this the schema name that we copied from the resource package.", "author": "xiangfu0", "createdAt": "2020-11-02T23:21:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE3NDIxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjMyODA4NA==", "url": "https://github.com/apache/pinot/pull/6220#discussion_r516328084", "bodyText": "Right. But any reason to rename it?", "author": "yupeng9", "createdAt": "2020-11-02T23:25:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE3NDIxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM1OTcwNg==", "url": "https://github.com/apache/pinot/pull/6220#discussion_r516359706", "bodyText": "to match the directory convention to load the table:\nthe schema and table config file names are in the format below.\n<table_name>/<table_name>_schema.json\n<table_name>/<table_name>_offline_table_config.json\n\nor we need to change the table name to upsert_meetupRsvp to match this convention", "author": "xiangfu0", "createdAt": "2020-11-03T00:28:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE3NDIxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE5MTA1MA==", "url": "https://github.com/apache/pinot/pull/6220#discussion_r516191050", "bodyText": "Users may not have all data/configs within a directory structure. They can definitely create soft links. However, does it make sense to also provide other flags (mutually exclusive with this flag) such as -dataDir, -tableConfig, etc?", "author": "mayankshriv", "createdAt": "2020-11-02T19:00:07Z", "path": "pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/BootstrapTableCommand.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.tools.admin.command;\n+\n+import org.apache.pinot.spi.plugin.PluginManager;\n+import org.apache.pinot.tools.Command;\n+import org.apache.pinot.tools.BootstrapTableTool;\n+import org.kohsuke.args4j.Option;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+\n+public class BootstrapTableCommand extends AbstractBaseAdminCommand implements Command {\n+  private static final Logger LOGGER = LoggerFactory.getLogger(BootstrapTableCommand.class.getName());\n+\n+  @Option(name = \"-controllerHost\", required = false, metaVar = \"<String>\", usage = \"host name for controller.\")\n+  private String _controllerHost;\n+\n+  @Option(name = \"-controllerPort\", required = false, metaVar = \"<int>\", usage = \"http port for broker.\")\n+  private final String _controllerPort = DEFAULT_CONTROLLER_PORT;\n+\n+  @Option(name = \"-dir\", required = false, aliases = {\"-d\", \"-directory\"}, metaVar = \"<String>\", usage = \"The directory contains all the configs and data to bootstrap a table\")", "originalCommit": "21d34dc499a187273e001744c28dd5096e49cef9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI1NTE2MA==", "url": "https://github.com/apache/pinot/pull/6220#discussion_r516255160", "bodyText": "I prefer this mode vs providing too much flexibility. This will allow us to create a lot of simple examples", "author": "kishoreg", "createdAt": "2020-11-02T21:09:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE5MTA1MA=="}], "type": "inlineReview"}, {"oid": "c59f79d76460058760c944bfaf70b2843b5db00a", "url": "https://github.com/apache/pinot/commit/c59f79d76460058760c944bfaf70b2843b5db00a", "message": "Adding bootstrap table command and move quickstart to use it", "committedDate": "2020-11-02T23:47:20Z", "type": "commit"}, {"oid": "c59f79d76460058760c944bfaf70b2843b5db00a", "url": "https://github.com/apache/pinot/commit/c59f79d76460058760c944bfaf70b2843b5db00a", "message": "Adding bootstrap table command and move quickstart to use it", "committedDate": "2020-11-02T23:47:20Z", "type": "forcePushed"}]}