{"pr_number": 5071, "pr_title": "Support no global-dictionary columns in data anonymizer", "pr_createdAt": "2020-02-15T00:34:50Z", "pr_url": "https://github.com/apache/pinot/pull/5071", "timeline": [{"oid": "6dd8cce8cf3fe9206d854f3323a875b24b248a86", "url": "https://github.com/apache/pinot/commit/6dd8cce8cf3fe9206d854f3323a875b24b248a86", "message": "Support no global-dictionary colums in data anonymizer", "committedDate": "2020-02-14T23:35:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTcwNTY3Mw==", "url": "https://github.com/apache/pinot/pull/5071#discussion_r379705673", "bodyText": "It'd be good not just print the schemas for this particular edge case but for all the cases.", "author": "jackjlli", "createdAt": "2020-02-15T01:13:51Z", "path": "pinot-tools/src/main/java/org/apache/pinot/tools/anonymizer/PinotDataAndQueryAnonymizer.java", "diffHunk": "@@ -287,6 +290,20 @@ public void buildGlobalDictionaries() throws Exception {\n     LOGGER.info(\"Finished building global dictionaries. Time taken: {}secs\", _timeToBuildDictionaries.elapsed(TimeUnit.SECONDS));\n   }\n \n+  private void getSchemaFromFirstSegment(String segmentDirectory) throws Exception {\n+    LOGGER.info(\"Reading metadata from segment: \" + segmentDirectory);\n+    File segmentIndexDir = new File(segmentDirectory);\n+    SegmentMetadataImpl segmentMetadata = new SegmentMetadataImpl(segmentIndexDir);\n+    if (_pinotSchema == null) {\n+      // only do this for first segment\n+      _pinotSchema = segmentMetadata.getSchema();\n+      anonymizeColumnNames(_pinotSchema);\n+      _avroSchema = getAvroSchemaFromPinotSchema(_pinotSchema);\n+      LOGGER.info(\"Pinot schema: \" + _pinotSchema.toPrettyJsonString());", "originalCommit": "6dd8cce8cf3fe9206d854f3323a875b24b248a86", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTcwNjI0OQ==", "url": "https://github.com/apache/pinot/pull/5071#discussion_r379706249", "bodyText": "Done", "author": "siddharthteotia", "createdAt": "2020-02-15T01:20:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTcwNTY3Mw=="}], "type": "inlineReview"}, {"oid": "08ff44da13786d6d8f52b0aef1a8ff9df446542f", "url": "https://github.com/apache/pinot/commit/08ff44da13786d6d8f52b0aef1a8ff9df446542f", "message": "address review comments", "committedDate": "2020-02-15T01:19:41Z", "type": "commit"}]}