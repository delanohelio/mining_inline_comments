{"pr_number": 5873, "pr_title": "Add Hadoop counters for detecting schema mismatch", "pr_createdAt": "2020-08-16T19:50:27Z", "pr_url": "https://github.com/apache/pinot/pull/5873", "timeline": [{"oid": "8b0b77810fe701387457afd9bf91f283d94b5b7e", "url": "https://github.com/apache/pinot/commit/8b0b77810fe701387457afd9bf91f283d94b5b7e", "message": "Add Hadoop counter for detecting schema mismatch", "committedDate": "2020-08-16T20:28:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE4MDMyNw==", "url": "https://github.com/apache/pinot/pull/5873#discussion_r471180327", "bodyText": "Seems like we are breaking interface here, what' the reasoning for that? Either the api should be justified to be part of the interface, or the design is broken somehow.", "author": "mayankshriv", "createdAt": "2020-08-17T00:28:34Z", "path": "pinot-plugins/pinot-batch-ingestion/v0_deprecated/pinot-hadoop/src/main/java/org/apache/pinot/hadoop/job/mappers/SegmentCreationMapper.java", "diffHunk": "@@ -243,14 +257,15 @@ protected void map(LongWritable key, Text value, Context context)\n     addAdditionalSegmentGeneratorConfigs(segmentGeneratorConfig, hdfsInputFile, sequenceId);\n \n     _logger.info(\"Start creating segment with sequence id: {}\", sequenceId);\n-    SegmentIndexCreationDriver driver = new SegmentIndexCreationDriverImpl();\n+    SegmentIndexCreationDriverImpl driver = new SegmentIndexCreationDriverImpl();", "originalCommit": "8b0b77810fe701387457afd9bf91f283d94b5b7e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE4ODMwOA==", "url": "https://github.com/apache/pinot/pull/5873#discussion_r471188308", "bodyText": "+1\nIt has been on my radar to add a columnar segment creation driver (for realtime), and this will break completely", "author": "mcvsubbu", "createdAt": "2020-08-17T01:21:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE4MDMyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU4MTA4MA==", "url": "https://github.com/apache/pinot/pull/5873#discussion_r473581080", "bodyText": "Added a class called SchemaValidator to validate Pinot schema and the input data schema", "author": "jackjlli", "createdAt": "2020-08-20T04:27:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE4MDMyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE4MTk5OQ==", "url": "https://github.com/apache/pinot/pull/5873#discussion_r471181999", "bodyText": "Seems like we will have to either write pairwise validators (pinot-avro, pinot-orc, pinot-json, etc). Or can write pair-wise schema converters (avro->pinot, orc->pinot, json->pinot), and then the schema validator will only compare two pinot schemas (one provided as input, other derived from format). At this point, I see pros/cons in both, but leaning towards former as it provides dedicated validation between formats.\nHowever, in either of the approaches, I'd recommend creating interfaces/impls. For example, an interface for validator (with pair-wise impls), or an interaface for converter (with pair-wise converters, and validator just works over interface).", "author": "mayankshriv", "createdAt": "2020-08-17T00:40:43Z", "path": "pinot-plugins/pinot-batch-ingestion/v0_deprecated/pinot-hadoop/src/main/java/org/apache/pinot/hadoop/job/mappers/SegmentCreationMapper.java", "diffHunk": "@@ -353,8 +368,71 @@ protected void addAdditionalSegmentGeneratorConfigs(SegmentGeneratorConfig segme\n       int sequenceId) {\n   }\n \n+  public void validateSchema(SegmentGeneratorConfig segmentGeneratorConfig, RecordReader recordReader) {\n+    if (recordReader instanceof AvroRecordReader) {", "originalCommit": "8b0b77810fe701387457afd9bf91f283d94b5b7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d63809666b144682a92fb809c1ec88387f88f75a", "url": "https://github.com/apache/pinot/commit/d63809666b144682a92fb809c1ec88387f88f75a", "message": "Add SchemaValidator", "committedDate": "2020-08-20T04:26:28Z", "type": "forcePushed"}, {"oid": "1cf73d1bb061e4fa75ffddea186cda3754be3caa", "url": "https://github.com/apache/pinot/commit/1cf73d1bb061e4fa75ffddea186cda3754be3caa", "message": "Add SchemaValidator", "committedDate": "2020-08-20T04:38:22Z", "type": "forcePushed"}, {"oid": "0fb58c099e8152276348add92cfec72b866f65e0", "url": "https://github.com/apache/pinot/commit/0fb58c099e8152276348add92cfec72b866f65e0", "message": "Add SchemaValidator", "committedDate": "2020-08-20T05:29:13Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ4NTc5MQ==", "url": "https://github.com/apache/pinot/pull/5873#discussion_r481485791", "bodyText": "Suggest to rename this as IngestionSchemaValidator ? Or, InputSchemaValidator (still confusing I think).  Otherwise it reads as if we are validating pinot schema.\nIf we add a validator in PinotSchemaRestlet when the rest api call updates the schema, what would we call it?", "author": "mcvsubbu", "createdAt": "2020-09-01T23:24:17Z", "path": "pinot-spi/src/main/java/org/apache/pinot/spi/data/SchemaValidator.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.spi.data;\n+\n+\n+/**\n+ * Validator to validate the schema between Pinot schema and input raw data schema\n+ */\n+public interface SchemaValidator {", "originalCommit": "0fb58c099e8152276348add92cfec72b866f65e0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjQ1MTY5Mw==", "url": "https://github.com/apache/pinot/pull/5873#discussion_r482451693", "bodyText": "Do u agree to this? Or, do you want to leave it as SchemaValidator?", "author": "mcvsubbu", "createdAt": "2020-09-02T20:52:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ4NTc5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjQ4Nzg5Mw==", "url": "https://github.com/apache/pinot/pull/5873#discussion_r482487893", "bodyText": "Renamed it to IngestionSchemaValidator in the latest push", "author": "jackjlli", "createdAt": "2020-09-02T21:25:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ4NTc5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ4NzI3OA==", "url": "https://github.com/apache/pinot/pull/5873#discussion_r481487278", "bodyText": "If we return the field names that have this type of mismatch, and also an error message (e.g. \"input type 'List' does not match with pinot data type 'int' for field 'X') that will be awesome.\nWe can then log this as an error message during segment creation", "author": "mcvsubbu", "createdAt": "2020-09-01T23:29:03Z", "path": "pinot-spi/src/main/java/org/apache/pinot/spi/data/SchemaValidator.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.spi.data;\n+\n+\n+/**\n+ * Validator to validate the schema between Pinot schema and input raw data schema\n+ */\n+public interface SchemaValidator {\n+\n+  void init(Schema pinotSchema, String inputFilePath);\n+\n+  boolean isDataTypeMismatch();", "originalCommit": "0fb58c099e8152276348add92cfec72b866f65e0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI1ODkwNw==", "url": "https://github.com/apache/pinot/pull/5873#discussion_r482258907", "bodyText": "Added a class called SchemaValidatorResult to provide detailed information. I've added the sample detailed info in the description of this PR.", "author": "jackjlli", "createdAt": "2020-09-02T17:54:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ4NzI3OA=="}], "type": "inlineReview"}, {"oid": "27bd346c36ab59152611bad9aab04156a4d33239", "url": "https://github.com/apache/pinot/commit/27bd346c36ab59152611bad9aab04156a4d33239", "message": "Add Hadoop counter for detecting schema mismatch", "committedDate": "2020-09-02T16:47:39Z", "type": "commit"}, {"oid": "c316e543b24c22da806210ba6ce13497bbe4e28e", "url": "https://github.com/apache/pinot/commit/c316e543b24c22da806210ba6ce13497bbe4e28e", "message": "Add SchemaValidator", "committedDate": "2020-09-02T16:47:40Z", "type": "commit"}, {"oid": "200b4bfaf1a3bef9517fc139be991765aae1c5f7", "url": "https://github.com/apache/pinot/commit/200b4bfaf1a3bef9517fc139be991765aae1c5f7", "message": "Introduce SchemaValidatorResult to provide detailed information for schema mismatch", "committedDate": "2020-09-02T17:51:30Z", "type": "forcePushed"}, {"oid": "33094dff55a4e655b0413ae6f3b6d97cfeca86a9", "url": "https://github.com/apache/pinot/commit/33094dff55a4e655b0413ae6f3b6d97cfeca86a9", "message": "Introduce SchemaValidatorResult to provide detailed information for schema mismatch", "committedDate": "2020-09-02T17:58:03Z", "type": "commit"}, {"oid": "33094dff55a4e655b0413ae6f3b6d97cfeca86a9", "url": "https://github.com/apache/pinot/commit/33094dff55a4e655b0413ae6f3b6d97cfeca86a9", "message": "Introduce SchemaValidatorResult to provide detailed information for schema mismatch", "committedDate": "2020-09-02T17:58:03Z", "type": "forcePushed"}, {"oid": "266f6b15ceca6b2fb32fde0063be86c41a332b2f", "url": "https://github.com/apache/pinot/commit/266f6b15ceca6b2fb32fde0063be86c41a332b2f", "message": "Add an option to fail the job if schemas mismatch", "committedDate": "2020-09-02T20:35:13Z", "type": "commit"}, {"oid": "266f6b15ceca6b2fb32fde0063be86c41a332b2f", "url": "https://github.com/apache/pinot/commit/266f6b15ceca6b2fb32fde0063be86c41a332b2f", "message": "Add an option to fail the job if schemas mismatch", "committedDate": "2020-09-02T20:35:13Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjQ1MjY4Ng==", "url": "https://github.com/apache/pinot/pull/5873#discussion_r482452686", "bodyText": "Suggestion:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public void incrementMismatchCountWithMismatchReason(String reason) {\n          \n          \n            \n              public void addMismatchReason(String reason) {", "author": "mcvsubbu", "createdAt": "2020-09-02T20:53:17Z", "path": "pinot-spi/src/main/java/org/apache/pinot/spi/data/SchemaValidatorResult.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.spi.data;\n+\n+/**\n+ * The result class to provide the detailed mismatch information.\n+ */\n+public class SchemaValidatorResult {\n+  private long _mismatchCount;\n+  private StringBuilder _mismatchReason;\n+\n+  public SchemaValidatorResult() {\n+    _mismatchCount = 0;\n+    _mismatchReason = new StringBuilder();\n+  }\n+\n+  public boolean isMismatchDetected() {\n+    return _mismatchCount != 0;\n+  }\n+\n+  private void incrementMismatchCount() {\n+    _mismatchCount++;\n+  }\n+\n+  public String getMismatchReason() {\n+    return _mismatchReason.toString();\n+  }\n+\n+  private void addMismatchReason(String reason) {\n+    if (_mismatchReason.length() > 0) {\n+      _mismatchReason.append(\" \");\n+    }\n+    _mismatchReason.append(reason);\n+  }\n+\n+  public void incrementMismatchCountWithMismatchReason(String reason) {", "originalCommit": "266f6b15ceca6b2fb32fde0063be86c41a332b2f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjQ1MzEyMg==", "url": "https://github.com/apache/pinot/pull/5873#discussion_r482453122", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private void addMismatchReason(String reason) {\n          \n          \n            \n              private void addMismatchReasonInternal(String reason) {", "author": "mcvsubbu", "createdAt": "2020-09-02T20:53:34Z", "path": "pinot-spi/src/main/java/org/apache/pinot/spi/data/SchemaValidatorResult.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.spi.data;\n+\n+/**\n+ * The result class to provide the detailed mismatch information.\n+ */\n+public class SchemaValidatorResult {\n+  private long _mismatchCount;\n+  private StringBuilder _mismatchReason;\n+\n+  public SchemaValidatorResult() {\n+    _mismatchCount = 0;\n+    _mismatchReason = new StringBuilder();\n+  }\n+\n+  public boolean isMismatchDetected() {\n+    return _mismatchCount != 0;\n+  }\n+\n+  private void incrementMismatchCount() {\n+    _mismatchCount++;\n+  }\n+\n+  public String getMismatchReason() {\n+    return _mismatchReason.toString();\n+  }\n+\n+  private void addMismatchReason(String reason) {", "originalCommit": "266f6b15ceca6b2fb32fde0063be86c41a332b2f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "cdad5aabc5d88e392b6e3f0b51600319f38cad9c", "url": "https://github.com/apache/pinot/commit/cdad5aabc5d88e392b6e3f0b51600319f38cad9c", "message": "Rename SchemaValidator to IngestionSchemaValidator", "committedDate": "2020-09-02T21:51:43Z", "type": "forcePushed"}, {"oid": "4380465aab4ed118718dad8c8468c3164579e3db", "url": "https://github.com/apache/pinot/commit/4380465aab4ed118718dad8c8468c3164579e3db", "message": "Rename SchemaValidator to IngestionSchemaValidator", "committedDate": "2020-09-02T22:31:45Z", "type": "commit"}, {"oid": "4380465aab4ed118718dad8c8468c3164579e3db", "url": "https://github.com/apache/pinot/commit/4380465aab4ed118718dad8c8468c3164579e3db", "message": "Rename SchemaValidator to IngestionSchemaValidator", "committedDate": "2020-09-02T22:31:45Z", "type": "forcePushed"}]}