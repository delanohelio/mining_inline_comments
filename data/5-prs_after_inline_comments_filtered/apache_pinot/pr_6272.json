{"pr_number": 6272, "pr_title": "Set S3 Bucket ACL policy from config", "pr_createdAt": "2020-11-17T13:47:09Z", "pr_url": "https://github.com/apache/pinot/pull/6272", "timeline": [{"oid": "23f96f252a678408e7672484fb3dc43d47cc1c7c", "url": "https://github.com/apache/pinot/commit/23f96f252a678408e7672484fb3dc43d47cc1c7c", "message": "[pinot-s3] Set acl based on config", "committedDate": "2020-11-17T12:15:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU3ODU2OQ==", "url": "https://github.com/apache/pinot/pull/6272#discussion_r525578569", "bodyText": "if (!disableAcl) {\n    copyReqBuilder.acl(ObjectCannedACL.BUCKET_OWNER_FULL_CONTROL);\n} \nCopyObjectRequest copyReq = copyReqBuilder.build();", "author": "xiangfu0", "createdAt": "2020-11-17T22:52:01Z", "path": "pinot-plugins/pinot-file-system/pinot-s3/src/main/java/org/apache/pinot/plugin/filesystem/S3PinotFS.java", "diffHunk": "@@ -225,9 +225,15 @@ private boolean copyFile(URI srcUri, URI dstUri)\n       }\n \n       String dstPath = sanitizePath(dstUri.getPath());\n-      CopyObjectRequest copyReq =\n-          CopyObjectRequest.builder().copySource(encodedUrl).destinationBucket(dstUri.getHost()).destinationKey(dstPath)\n-              .build();\n+      CopyObjectRequest.Builder copyReqBuilder = CopyObjectRequest.builder().copySource(encodedUrl)\n+          .destinationBucket(dstUri.getHost()).destinationKey(dstPath);\n+      CopyObjectRequest copyReq;\n+\n+      if (!disableAcl) {", "originalCommit": "23f96f252a678408e7672484fb3dc43d47cc1c7c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTYzODk1OQ==", "url": "https://github.com/apache/pinot/pull/6272#discussion_r525638959", "bodyText": "Done.", "author": "Aka-shi", "createdAt": "2020-11-18T01:39:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU3ODU2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU3ODc5Mw==", "url": "https://github.com/apache/pinot/pull/6272#discussion_r525578793", "bodyText": "same above", "author": "xiangfu0", "createdAt": "2020-11-17T22:52:30Z", "path": "pinot-plugins/pinot-file-system/pinot-s3/src/main/java/org/apache/pinot/plugin/filesystem/S3PinotFS.java", "diffHunk": "@@ -248,7 +254,14 @@ public boolean mkdir(URI uri)\n         return true;\n       }\n \n-      PutObjectRequest putObjectRequest = PutObjectRequest.builder().bucket(uri.getHost()).key(path).build();\n+      PutObjectRequest.Builder putReqBuilder = PutObjectRequest.builder().bucket(uri.getHost()).key(path);\n+      PutObjectRequest putObjectRequest;", "originalCommit": "23f96f252a678408e7672484fb3dc43d47cc1c7c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU4Mjc2MA==", "url": "https://github.com/apache/pinot/pull/6272#discussion_r525582760", "bodyText": "just set builder here and build the request later.", "author": "xiangfu0", "createdAt": "2020-11-17T23:01:05Z", "path": "pinot-plugins/pinot-file-system/pinot-s3/src/main/java/org/apache/pinot/plugin/filesystem/S3PinotFS.java", "diffHunk": "@@ -491,17 +511,32 @@ public boolean touch(URI uri)\n       String path = sanitizePath(uri.getPath());\n       Map<String, String> mp = new HashMap<>();\n       mp.put(\"lastModified\", String.valueOf(System.currentTimeMillis()));\n-      CopyObjectRequest request =\n-          CopyObjectRequest.builder().copySource(encodedUrl).destinationBucket(uri.getHost()).destinationKey(path)\n-              .metadata(mp).metadataDirective(MetadataDirective.REPLACE).build();\n+      CopyObjectRequest.Builder copyReqBuilder = CopyObjectRequest.builder().copySource(encodedUrl)\n+          .destinationBucket(uri.getHost()).destinationKey(path)\n+          .metadata(mp).metadataDirective(MetadataDirective.REPLACE);\n+      CopyObjectRequest request;\n+\n+      if (!disableAcl) {\n+        request = copyReqBuilder.acl(ObjectCannedACL.BUCKET_OWNER_FULL_CONTROL).build();\n+      } else {\n+        request = copyReqBuilder.build();\n+      }\n \n       _s3Client.copyObject(request);\n       long newUpdateTime = getS3ObjectMetadata(uri).lastModified().toEpochMilli();\n       return newUpdateTime > s3ObjectMetadata.lastModified().toEpochMilli();\n     } catch (NoSuchKeyException e) {\n       String path = sanitizePath(uri.getPath());\n-      _s3Client.putObject(PutObjectRequest.builder().bucket(uri.getHost()).key(path).build(),\n-          RequestBody.fromBytes(new byte[0]));\n+      PutObjectRequest.Builder putReqBuilder = PutObjectRequest.builder().bucket(uri.getHost()).key(path);\n+      PutObjectRequest putObjectRequest;\n+\n+      if (!disableAcl) {\n+        putObjectRequest = putReqBuilder.acl(ObjectCannedACL.BUCKET_OWNER_FULL_CONTROL).build();", "originalCommit": "23f96f252a678408e7672484fb3dc43d47cc1c7c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU4MjgwOA==", "url": "https://github.com/apache/pinot/pull/6272#discussion_r525582808", "bodyText": "set builder here and build the request later.", "author": "xiangfu0", "createdAt": "2020-11-17T23:01:14Z", "path": "pinot-plugins/pinot-file-system/pinot-s3/src/main/java/org/apache/pinot/plugin/filesystem/S3PinotFS.java", "diffHunk": "@@ -491,17 +511,32 @@ public boolean touch(URI uri)\n       String path = sanitizePath(uri.getPath());\n       Map<String, String> mp = new HashMap<>();\n       mp.put(\"lastModified\", String.valueOf(System.currentTimeMillis()));\n-      CopyObjectRequest request =\n-          CopyObjectRequest.builder().copySource(encodedUrl).destinationBucket(uri.getHost()).destinationKey(path)\n-              .metadata(mp).metadataDirective(MetadataDirective.REPLACE).build();\n+      CopyObjectRequest.Builder copyReqBuilder = CopyObjectRequest.builder().copySource(encodedUrl)\n+          .destinationBucket(uri.getHost()).destinationKey(path)\n+          .metadata(mp).metadataDirective(MetadataDirective.REPLACE);\n+      CopyObjectRequest request;\n+\n+      if (!disableAcl) {\n+        request = copyReqBuilder.acl(ObjectCannedACL.BUCKET_OWNER_FULL_CONTROL).build();", "originalCommit": "23f96f252a678408e7672484fb3dc43d47cc1c7c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU4MjgzOA==", "url": "https://github.com/apache/pinot/pull/6272#discussion_r525582838", "bodyText": "set builder here and build the request later.", "author": "xiangfu0", "createdAt": "2020-11-17T23:01:18Z", "path": "pinot-plugins/pinot-file-system/pinot-s3/src/main/java/org/apache/pinot/plugin/filesystem/S3PinotFS.java", "diffHunk": "@@ -445,7 +458,14 @@ public void copyFromLocalFile(File srcFile, URI dstUri)\n     LOGGER.info(\"Copy {} from local to {}\", srcFile.getAbsolutePath(), dstUri);\n     URI base = getBase(dstUri);\n     String prefix = sanitizePath(base.relativize(dstUri).getPath());\n-    PutObjectRequest putObjectRequest = PutObjectRequest.builder().bucket(dstUri.getHost()).key(prefix).build();\n+    PutObjectRequest.Builder putReqBuilder = PutObjectRequest.builder().bucket(dstUri.getHost()).key(prefix);\n+    PutObjectRequest putObjectRequest;\n+\n+    if (!disableAcl) {\n+      putObjectRequest = putReqBuilder.acl(ObjectCannedACL.BUCKET_OWNER_FULL_CONTROL).build();", "originalCommit": "23f96f252a678408e7672484fb3dc43d47cc1c7c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTY0MTc1Mw==", "url": "https://github.com/apache/pinot/pull/6272#discussion_r525641753", "bodyText": "do we need to set the default value ?\nalso use boolean not Boolean", "author": "xiangfu0", "createdAt": "2020-11-18T01:48:12Z", "path": "pinot-plugins/pinot-file-system/pinot-s3/src/main/java/org/apache/pinot/plugin/filesystem/S3PinotFS.java", "diffHunk": "@@ -72,17 +70,19 @@\n   public static final String SECRET_KEY = \"secretKey\";\n   public static final String REGION = \"region\";\n   public static final String ENDPOINT = \"endpoint\";\n+  public static final String DISABLE_ACL = \"disableAcl\";\n \n   private static final Logger LOGGER = LoggerFactory.getLogger(S3PinotFS.class);\n   private static final String DELIMITER = \"/\";\n   public static final String S3_SCHEME = \"s3://\";\n   private S3Client _s3Client;\n+  private Boolean disableAcl = true;", "originalCommit": "aca31361ac8819ce1cdb978c58f40ae10ef24985", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTY5NzE4Ng==", "url": "https://github.com/apache/pinot/pull/6272#discussion_r525697186", "bodyText": "If I don't set the default here, the test case fail because the init method used to set this config and the method used in the test cases is different. In the recent commit, I am also reusing this to set the default value in getProperty method.", "author": "Aka-shi", "createdAt": "2020-11-18T03:03:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTY0MTc1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTY0MjY0Ng==", "url": "https://github.com/apache/pinot/pull/6272#discussion_r525642646", "bodyText": "Create constant  DEFAULT_DISABLE_ACL=true and use it here.", "author": "xiangfu0", "createdAt": "2020-11-18T01:50:59Z", "path": "pinot-plugins/pinot-file-system/pinot-s3/src/main/java/org/apache/pinot/plugin/filesystem/S3PinotFS.java", "diffHunk": "@@ -72,17 +70,19 @@\n   public static final String SECRET_KEY = \"secretKey\";\n   public static final String REGION = \"region\";\n   public static final String ENDPOINT = \"endpoint\";\n+  public static final String DISABLE_ACL = \"disableAcl\";\n \n   private static final Logger LOGGER = LoggerFactory.getLogger(S3PinotFS.class);\n   private static final String DELIMITER = \"/\";\n   public static final String S3_SCHEME = \"s3://\";\n   private S3Client _s3Client;\n+  private Boolean disableAcl = true;\n \n   @Override\n   public void init(PinotConfiguration config) {\n     Preconditions.checkArgument(!isNullOrEmpty(config.getProperty(REGION)));\n     String region = config.getProperty(REGION);\n-\n+    disableAcl = config.getProperty(DISABLE_ACL, true);", "originalCommit": "aca31361ac8819ce1cdb978c58f40ae10ef24985", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTczMTcyOQ==", "url": "https://github.com/apache/pinot/pull/6272#discussion_r525731729", "bodyText": "Done.", "author": "Aka-shi", "createdAt": "2020-11-18T03:27:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTY0MjY0Ng=="}], "type": "inlineReview"}, {"oid": "79fc19a301ded04e1b16c906099c8a6239779616", "url": "https://github.com/apache/pinot/commit/79fc19a301ded04e1b16c906099c8a6239779616", "message": "review changes", "committedDate": "2020-11-18T03:00:52Z", "type": "forcePushed"}, {"oid": "c738c91d3717f10ba0ab47e477bc9cfb193ce92d", "url": "https://github.com/apache/pinot/commit/c738c91d3717f10ba0ab47e477bc9cfb193ce92d", "message": "review changes", "committedDate": "2020-11-18T03:25:50Z", "type": "commit"}, {"oid": "c738c91d3717f10ba0ab47e477bc9cfb193ce92d", "url": "https://github.com/apache/pinot/commit/c738c91d3717f10ba0ab47e477bc9cfb193ce92d", "message": "review changes", "committedDate": "2020-11-18T03:25:50Z", "type": "forcePushed"}]}