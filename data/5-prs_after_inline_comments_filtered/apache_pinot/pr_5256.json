{"pr_number": 5256, "pr_title": "Derive num docs per chunk from max column value length for varbyte raw index creator", "pr_createdAt": "2020-04-16T01:10:36Z", "pr_url": "https://github.com/apache/pinot/pull/5256", "timeline": [{"oid": "39af59a15b07fef07218b44c9d71719f4f29b4ec", "url": "https://github.com/apache/pinot/commit/39af59a15b07fef07218b44c9d71719f4f29b4ec", "message": "Derive numDocsPerChunk from max column value length\nfor var byte raw forward index creator", "committedDate": "2020-04-16T08:15:44Z", "type": "commit"}, {"oid": "39af59a15b07fef07218b44c9d71719f4f29b4ec", "url": "https://github.com/apache/pinot/commit/39af59a15b07fef07218b44c9d71719f4f29b4ec", "message": "Derive numDocsPerChunk from max column value length\nfor var byte raw forward index creator", "committedDate": "2020-04-16T08:15:44Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc4MTU5Mw==", "url": "https://github.com/apache/pinot/pull/5256#discussion_r409781593", "bodyText": "+1", "author": "Jackie-Jiang", "createdAt": "2020-04-16T18:59:22Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/index/loader/invertedindex/TextIndexHandler.java", "diffHunk": "@@ -162,8 +163,9 @@ private void createTextIndexForColumn(ColumnMetadata columnMetadata)\n     try (LuceneTextIndexCreator textIndexCreator = new LuceneTextIndexCreator(column, segmentDirectory, true)) {\n       try (DataFileReader forwardIndexReader = getForwardIndexReader(columnMetadata)) {\n         VarByteChunkSingleValueReader forwardIndex = (VarByteChunkSingleValueReader) forwardIndexReader;\n+        ChunkReaderContext readerContext = forwardIndex.createContext();", "originalCommit": "39af59a15b07fef07218b44c9d71719f4f29b4ec", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc4MjA3NA==", "url": "https://github.com/apache/pinot/pull/5256#discussion_r409782074", "bodyText": "Good catch\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                int lengthOfLongestEntry = stringDefaultValue.getBytes(Charset.forName(\"UTF-8\")).length;\n          \n          \n            \n                int lengthOfLongestEntry = StringUtil.encodeUtf8(stringDefaultValue).length;", "author": "Jackie-Jiang", "createdAt": "2020-04-16T19:00:15Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/index/loader/defaultcolumn/BaseDefaultColumnHandler.java", "diffHunk": "@@ -338,7 +339,7 @@ void createV1ForwardIndexForTextIndex(String column, IndexLoadingConfig indexLoa\n     int totalDocs = _segmentMetadata.getTotalDocs();\n     Object defaultValue = fieldSpec.getDefaultNullValue();\n     String stringDefaultValue = (String) defaultValue;\n-    int lengthOfLongestEntry = stringDefaultValue.length();\n+    int lengthOfLongestEntry = stringDefaultValue.getBytes(Charset.forName(\"UTF-8\")).length;", "originalCommit": "39af59a15b07fef07218b44c9d71719f4f29b4ec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTk5OTMyMA==", "url": "https://github.com/apache/pinot/pull/5256#discussion_r409999320", "bodyText": "done", "author": "siddharthteotia", "createdAt": "2020-04-17T05:25:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc4MjA3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc4NTUxOQ==", "url": "https://github.com/apache/pinot/pull/5256#discussion_r409785519", "bodyText": "This logic can be pushed down to the VarByteChunkSingleValueWriter?", "author": "Jackie-Jiang", "createdAt": "2020-04-16T19:06:43Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/creator/impl/fwd/SingleValueVarByteRawIndexCreator.java", "diffHunk": "@@ -27,15 +28,21 @@\n \n \n public class SingleValueVarByteRawIndexCreator extends BaseSingleValueRawIndexCreator {\n-  private static final int NUM_DOCS_PER_CHUNK = 1000; // TODO: Auto-derive this based on metadata.\n+  private static final int TARGET_MAX_CHUNK_SIZE = 1024*1024;\n \n   private final VarByteChunkSingleValueWriter _indexWriter;\n \n   public SingleValueVarByteRawIndexCreator(File baseIndexDir, ChunkCompressorFactory.CompressionType compressionType,\n       String column, int totalDocs, int maxLength)\n       throws IOException {\n     File file = new File(baseIndexDir, column + V1Constants.Indexes.RAW_SV_FORWARD_INDEX_FILE_EXTENSION);\n-    _indexWriter = new VarByteChunkSingleValueWriter(file, compressionType, totalDocs, NUM_DOCS_PER_CHUNK, maxLength);\n+    _indexWriter = new VarByteChunkSingleValueWriter(file, compressionType, totalDocs, getNumDocsPerChunk(maxLength), maxLength);\n+  }\n+\n+  @VisibleForTesting\n+  public static int getNumDocsPerChunk(int lengthOfLongestEntry) {", "originalCommit": "39af59a15b07fef07218b44c9d71719f4f29b4ec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTk5OTk1MQ==", "url": "https://github.com/apache/pinot/pull/5256#discussion_r409999951", "bodyText": "It can be. The call to super() in the constructor of VarByteChunkSingleValueWriter makes things slightly since you have to call this function two times (as part of the call to super). I think the constructor of VarByteChunkSingleValueWriter and its base class can be refactored a little bit to make this logic private to the writer.\nI have a follow-up coming up for the TODO mentioned in the PR description. Will do as part of that", "author": "siddharthteotia", "createdAt": "2020-04-17T05:28:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc4NTUxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc4NzUwMA==", "url": "https://github.com/apache/pinot/pull/5256#discussion_r409787500", "bodyText": "?", "author": "Jackie-Jiang", "createdAt": "2020-04-16T19:10:21Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/io/writer/impl/v1/VarByteChunkSingleValueWriter.java", "diffHunk": "@@ -61,7 +62,6 @@\n    * @param file File to write to.\n    * @param compressionType Type of compression to use.\n    * @param totalDocs Total number of docs to write.\n-   * @param numDocsPerChunk Number of documents per chunk.", "originalCommit": "39af59a15b07fef07218b44c9d71719f4f29b4ec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTk5OTMwNg==", "url": "https://github.com/apache/pinot/pull/5256#discussion_r409999306", "bodyText": "sorry, forgot to undo", "author": "siddharthteotia", "createdAt": "2020-04-17T05:25:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc4NzUwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc4NzY1NQ==", "url": "https://github.com/apache/pinot/pull/5256#discussion_r409787655", "bodyText": "(nit) reformat", "author": "Jackie-Jiang", "createdAt": "2020-04-16T19:10:39Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/creator/impl/fwd/SingleValueVarByteRawIndexCreator.java", "diffHunk": "@@ -27,15 +28,21 @@\n \n \n public class SingleValueVarByteRawIndexCreator extends BaseSingleValueRawIndexCreator {\n-  private static final int NUM_DOCS_PER_CHUNK = 1000; // TODO: Auto-derive this based on metadata.\n+  private static final int TARGET_MAX_CHUNK_SIZE = 1024*1024;", "originalCommit": "39af59a15b07fef07218b44c9d71719f4f29b4ec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTk5OTI5Mw==", "url": "https://github.com/apache/pinot/pull/5256#discussion_r409999293", "bodyText": "done", "author": "siddharthteotia", "createdAt": "2020-04-17T05:25:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc4NzY1NQ=="}], "type": "inlineReview"}, {"oid": "2378bbfd0d6754ec401f3a7846aaa5bc61ec9a10", "url": "https://github.com/apache/pinot/commit/2378bbfd0d6754ec401f3a7846aaa5bc61ec9a10", "message": "review comments", "committedDate": "2020-04-17T05:24:59Z", "type": "commit"}]}