{"pr_number": 5586, "pr_title": "Fix the wrong unbounded values in RangePredicateEvaluatorFactory", "pr_createdAt": "2020-06-17T22:58:02Z", "pr_url": "https://github.com/apache/pinot/pull/5586", "timeline": [{"oid": "b1ddb7bc182533aeb8123c4e8824c145529f4749", "url": "https://github.com/apache/pinot/commit/b1ddb7bc182533aeb8123c4e8824c145529f4749", "message": "Fix the wrong unbounded values in RangePredicateEvaluatorFactory\n\nThe unbounded values for LONG, FLOAT, DOUBLE type are not set based on the type, but always as Integer.MIN_VALUE and Integer.MAX_VALUE\nThis can cause wrong result if the passed in value is smaller than Integer.MIN_VALUE or larger than Integer.MAX_VALUE\n\nMinor improvements:\n- Replace \"*\" with constant `RangePredicate.UNBOUNDED` for readability\n- For string type, use null to represent unbounded to save the per-value string comparison", "committedDate": "2020-06-17T22:52:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkwMjE4MQ==", "url": "https://github.com/apache/pinot/pull/5586#discussion_r441902181", "bodyText": "Do we throw exceptions other than NumberFormatException?", "author": "snleee", "createdAt": "2020-06-18T00:22:36Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/operator/filter/predicate/PredicateEvaluatorProvider.java", "diffHunk": "@@ -77,8 +77,8 @@ public static PredicateEvaluator getPredicateEvaluator(Predicate predicate, Dict\n             throw new UnsupportedOperationException(\"Unsupported predicate type: \" + predicate.getType());\n         }\n       }\n-    } catch (NumberFormatException e) {\n-      // This NumberFormatException is caused by passing in a non-numeric string as numeric number in query\n+    } catch (Exception e) {", "originalCommit": "b1ddb7bc182533aeb8123c4e8824c145529f4749", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTk0NDg4Nw==", "url": "https://github.com/apache/pinot/pull/5586#discussion_r441944887", "bodyText": "Yes, BytesUtils.toBytes() can throw IllegalArgumentException", "author": "Jackie-Jiang", "createdAt": "2020-06-18T03:16:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkwMjE4MQ=="}], "type": "inlineReview"}]}