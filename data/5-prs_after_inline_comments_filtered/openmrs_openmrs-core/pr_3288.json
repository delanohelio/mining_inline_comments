{"pr_number": 3288, "pr_title": "TRUNK-5826: Fix error when creating user on Postgres", "pr_createdAt": "2020-07-02T08:52:59Z", "pr_url": "https://github.com/openmrs/openmrs-core/pull/3288", "timeline": [{"oid": "122053d154a376cd028b46340289736ebb72dee5", "url": "https://github.com/openmrs/openmrs-core/commit/122053d154a376cd028b46340289736ebb72dee5", "message": "TRUNK-5826, Error adding user from User Management section with PostgreSQL", "committedDate": "2020-07-02T08:48:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQzNTEyNQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3288#discussion_r449435125", "bodyText": "@Am-Coder   Did you try running these changes under a running openmrs instance with a  PostgreSQL Db?", "author": "HerbertYiga", "createdAt": "2020-07-03T07:56:29Z", "path": "api/src/main/java/org/openmrs/api/db/hibernate/HibernateUserDAO.java", "diffHunk": "@@ -77,6 +77,9 @@ public User saveUser(User user, String password) {\n \t\tsessionFactory.getCurrentSession().saveOrUpdate(user);\n \t\t\n \t\tif (isNewUser && password != null) {\n+\t\t\t// In case of PostgreSQL hibernate session.saveOrUpdate does not issues insert statements at the same time\n+\t\t\tsessionFactory.getCurrentSession().flush();", "originalCommit": "122053d154a376cd028b46340289736ebb72dee5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQzOTA4OA==", "url": "https://github.com/openmrs/openmrs-core/pull/3288#discussion_r449439088", "bodyText": "Yes, I have verified the changes on PostgreSQL.", "author": "Am-Coder", "createdAt": "2020-07-03T08:04:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQzNTEyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE2ODQyMA==", "url": "https://github.com/openmrs/openmrs-core/pull/3288#discussion_r451168420", "bodyText": "@Am-Coder did you investigate why PostgreSQL behaves differently from MySQL in this scenario?", "author": "dkayiwa", "createdAt": "2020-07-07T22:00:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQzNTEyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM0NzM4MQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3288#discussion_r451347381", "bodyText": "Let me look into it and see if I can find something.", "author": "Am-Coder", "createdAt": "2020-07-08T07:45:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQzNTEyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQ0NzIzOA==", "url": "https://github.com/openmrs/openmrs-core/pull/3288#discussion_r452447238", "bodyText": "@dkayiwa , I went through docs and a lot of articles but there is no specific piece of documentation that could point to this. I found this article very useful. Based on this article, to me it appears that:\nIn OpenMRS, we are using generation strategy as native which will convert to IDENTITY for MySQL and SEQUENCE for PostgreSQL. When using IDENTITY strategy, hibernate directly issues insert statements( cannot make use of batching ) where as with SEQUENCE strategy hibernate only increments sequences and issues insert on session flush ( batching is possible) . PostgreSQL behaves differently than MySQL because it makes use of SEQUENCE strategy.\nHere is the link to the SQL queries I logged that get executed with MySQL and PostgreSQL( with session flush and without session flush ) - https://pastebin.com/yTsKUgYP . This is in accordance with the article I mentioned above.", "author": "Am-Coder", "createdAt": "2020-07-09T19:39:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQzNTEyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjcyOTQzNg==", "url": "https://github.com/openmrs/openmrs-core/pull/3288#discussion_r452729436", "bodyText": "Can you add this explanation to the code?", "author": "dkayiwa", "createdAt": "2020-07-10T09:23:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQzNTEyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgxNDgwMQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3288#discussion_r452814801", "bodyText": "Do we need this call to flush() to prevent an error of some kind? I'm not sure that flushing the session just so we get insert statements generated at the same time should be a requirement (and there can be some modest benefits to allowing Hibernate to defer issuing a query until the session is closed).", "author": "ibacher", "createdAt": "2020-07-10T12:34:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQzNTEyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgyNDMzMQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3288#discussion_r452824331", "bodyText": "@ibacher , The current logical implementation is according to MySQL which makes use of IDENTITY strategy where there is no defering. Let me see if I can do something without making use of flush. As of now I think it might require a different hibernate session for each saveOrUpdate and get calls. The problem here is that in the same session we persisting as well as then calling the peristed entity.", "author": "Am-Coder", "createdAt": "2020-07-10T12:54:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQzNTEyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgyNDQ4OQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3288#discussion_r452824489", "bodyText": "Can you add this explanation to the code?\n\nAdded the explanation", "author": "Am-Coder", "createdAt": "2020-07-10T12:54:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQzNTEyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAwNzMwMg==", "url": "https://github.com/openmrs/openmrs-core/pull/3288#discussion_r453007302", "bodyText": "@Am-Coder So, to be clear, I don't think we should be calling flush() if the only reason we're doing so is to generate an INSERT statement at the same point that Hibernate would generate an INSERT statement when being run on MySQL. We're using a different identifier generation strategy and that has different behaviour. We'd only want to call flush() here if not calling flush() results in some kind of error.", "author": "ibacher", "createdAt": "2020-07-10T18:32:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQzNTEyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAwOTg3Mg==", "url": "https://github.com/openmrs/openmrs-core/pull/3288#discussion_r453009872", "bodyText": "@ibacher , if you do not call flush here then an error is raised . Link to logs https://pastebin.com/FmP9ekBp . Also I have attached the screenshot in the ticket description https://issues.openmrs.org/browse/TRUNK-5826 . So, I think calling flush here will be correct.", "author": "Am-Coder", "createdAt": "2020-07-10T18:38:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQzNTEyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM2ODI3NA==", "url": "https://github.com/openmrs/openmrs-core/pull/3288#discussion_r456368274", "bodyText": "@dkayiwa @ibacher , are the changes fine or something more needs to be done ?", "author": "Am-Coder", "createdAt": "2020-07-17T10:48:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQzNTEyNQ=="}], "type": "inlineReview"}, {"oid": "97188bf5d61beb1c2bcd94ebc4b123016136b0cd", "url": "https://github.com/openmrs/openmrs-core/commit/97188bf5d61beb1c2bcd94ebc4b123016136b0cd", "message": "TRUNK-5826, Error adding user from User Management section with PostgreSQL", "committedDate": "2020-07-10T12:38:55Z", "type": "commit"}]}