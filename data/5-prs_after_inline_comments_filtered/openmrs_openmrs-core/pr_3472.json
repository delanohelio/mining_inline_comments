{"pr_number": 3472, "pr_title": "TRUNK-5744 Automate manual corrections of Liquibase snapshot files", "pr_createdAt": "2020-08-07T21:36:30Z", "pr_url": "https://github.com/openmrs/openmrs-core/pull/3472", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzM2Njc4NA==", "url": "https://github.com/openmrs/openmrs-core/pull/3472#discussion_r467366784", "bodyText": "this will need to be replaced with JUnit 5 https://junit.org/junit5/docs/5.4.0/api/org/junit/jupiter/api/io/TempDir.html", "author": "teleivo", "createdAt": "2020-08-08T05:51:19Z", "path": "liquibase/src/test/java/org/openmrs/liquibase/AbstractSnapshotTunerTest.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/**\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.liquibase;\n+\n+import java.io.File;\n+import java.io.FileNotFoundException;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+\n+import static java.nio.file.StandardCopyOption.REPLACE_EXISTING;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.equalToCompressingWhiteSpace;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+public class AbstractSnapshotTunerTest {\n+\t\n+\tprivate static final String FILE_WITH_LICENSE_HEADER_MD = \"file-with-license-header.md\";\n+\t\n+\tprivate static final String FILE_WITHOUT_LICENSE_HEADER_MD = \"file-without-license-header.md\";\n+\t\n+\tprivate static final String HTTP_OPENMRS_ORG_LICENSE = \"http://openmrs.org/license\";\n+\t\n+\tprivate static String PATH_TO_TEST_RESOURCES = \"src\" + File.separator + \"test\" + File.separator + \"resources\"\n+\t        + File.separator;\n+\t\n+\t/*\n+\t * An instance of org.openmrs.liquibase.SchemaOnlyTuner is used to test behaviour implemented in the \n+\t * org.openmrs.liquibase.AbstractSnapshotTuner class.\n+\t */\n+\tprivate SchemaOnlyTuner schemaOnlyTuner;\n+\t\n+\t@Rule\n+\tpublic TemporaryFolder tempFolder = new TemporaryFolder();", "originalCommit": "70bf5f4617a097bc66e409afdc9826953756a8a1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQ2MzgyMg==", "url": "https://github.com/openmrs/openmrs-core/pull/3472#discussion_r467463822", "bodyText": "Done.", "author": "WolfSchlegel", "createdAt": "2020-08-08T13:12:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzM2Njc4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzM2NjkxNw==", "url": "https://github.com/openmrs/openmrs-core/pull/3472#discussion_r467366917", "bodyText": "thesting exceptions is done only with assertThrows in JUnit 5", "author": "teleivo", "createdAt": "2020-08-08T05:53:03Z", "path": "liquibase/src/test/java/org/openmrs/liquibase/SchemaOnlyTunerTest.java", "diffHunk": "@@ -0,0 +1,177 @@\n+/**\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.liquibase;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import org.dom4j.Document;\n+import org.dom4j.DocumentException;\n+import org.dom4j.DocumentHelper;\n+import org.dom4j.Node;\n+import org.dom4j.XPath;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+import org.mockito.Mockito;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.equalToCompressingWhiteSpace;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.ArgumentMatchers.any;\n+\n+public class SchemaOnlyTunerTest {\n+\t\n+\tprivate static final String LIQUIBASE_SCHEMA_ONLY_SNAPSHOT_XML = \"org\" + File.separator + \"openmrs\" + File.separator\n+\t        + \"liquibase\" + File.separator + \"snapshots\" + File.separator + \"schema-only\" + File.separator\n+\t        + \"liquibase-schema-only-SNAPSHOT.xml\";\n+\t\n+\tprivate static final String LIQUIBASE_SCHEMA_ONLY_UPDATED_SNAPSHOT_XML = \"org\" + File.separator + \"openmrs\"\n+\t        + File.separator + \"liquibase\" + File.separator + \"snapshots\" + File.separator + \"schema-only\" + File.separator\n+\t        + \"liquibase-schema-only-UPDATED-SNAPSHOT.xml\";\n+\t\n+\tprivate static String PATH_TO_TEST_RESOURCES = \"src\" + File.separator + \"test\" + File.separator + \"resources\"\n+\t        + File.separator;\n+\t\n+\tprivate Document document;\n+\t\n+\tprivate Map<String, String> namespaceUris;\n+\t\n+\tprivate SchemaOnlyTuner schemaOnlyTuner;\n+\t\n+\t@Rule\n+\tpublic TemporaryFolder tempFolder = new TemporaryFolder();\n+\t\n+\t@Before\n+\tpublic void setup() throws DocumentException {\n+\t\tschemaOnlyTuner = new SchemaOnlyTuner();\n+\t\tdocument = schemaOnlyTuner.readChangeLogResource(LIQUIBASE_SCHEMA_ONLY_SNAPSHOT_XML);\n+\t\tnamespaceUris = schemaOnlyTuner.getNamespaceUris();\n+\t}\n+\t\n+\t@Test\n+\tpublic void shouldCreateUpdatedChangeLogFile() throws DocumentException, IOException {\n+\t\t// given\n+\t\tString sourcePath = PATH_TO_TEST_RESOURCES + LIQUIBASE_SCHEMA_ONLY_SNAPSHOT_XML;\n+\t\tString targetPath = tempFolder.newFile(\"liquibase-schema-only-UPDATED-SNAPSHOT.xml\").getPath();\n+\t\t\n+\t\t// when\n+\t\tschemaOnlyTuner.createUpdatedChangeLogFile(sourcePath, targetPath);\n+\t\t\n+\t\t// then\n+\t\tDocument expected = schemaOnlyTuner.readChangeLogResource(LIQUIBASE_SCHEMA_ONLY_UPDATED_SNAPSHOT_XML);\n+\t\tDocument actual = schemaOnlyTuner.readChangeLogFile(targetPath);\n+\t\t\n+\t\tassertThat(expected.asXML(), equalToCompressingWhiteSpace(actual.asXML()));\n+\t}\n+\t\n+\t@Test\n+\tpublic void shouldDetachChangeSetsForLiquibaseTables() {\n+\t\t// given\n+\t\tXPath xpathOne = DocumentHelper.createXPath(\"//dbchangelog:createTable[@tableName=\\\"liquibasechangelog\\\"]\\\"\");\n+\t\txpathOne.setNamespaceURIs(namespaceUris);\n+\t\t\n+\t\tXPath xpathTwo = DocumentHelper.createXPath(\"//dbchangelog:createTable[@tableName=\\\"liquibasechangeloglock\\\"]\\\"\");\n+\t\txpathTwo.setNamespaceURIs(namespaceUris);\n+\t\t\n+\t\tassertEquals(1, xpathOne.selectNodes(document).size());\n+\t\tassertEquals(1, xpathTwo.selectNodes(document).size());\n+\t\t\n+\t\t// when\n+\t\tDocument actual = schemaOnlyTuner.detachLiquibaseTables(document);\n+\t\t\n+\t\t// then\n+\t\tassertEquals(0, xpathOne.selectNodes(actual).size());\n+\t\tassertEquals(0, xpathTwo.selectNodes(actual).size());\n+\t}\n+\t\n+\t@Test\n+\tpublic void shouldReplaceBitTypeWithBooleanType() {\n+\t\t// given\n+\t\tXPath xpath = DocumentHelper.createXPath(\"//dbchangelog:column[@type=\\\"BIT(1)\\\"]/attribute::type\");\n+\t\txpath.setNamespaceURIs(namespaceUris);\n+\t\t\n+\t\tList<Node> nodes = xpath.selectNodes(document);\n+\t\tassertEquals(94, nodes.size());\n+\t\t\n+\t\t// when\n+\t\tDocument actual = schemaOnlyTuner.replaceBitWithBoolean(document);\n+\t\t\n+\t\t// then\n+\t\tfor (Node node : nodes) {\n+\t\t\tassertEquals(\"BOOLEAN\", node.getParent().attributeValue(\"type\"));\n+\t\t}\n+\t}\n+\t\n+\t@Test\n+\tpublic void shouldReplaceLongtextTypeWithClobType() {\n+\t\t// given\n+\t\tXPath xPath = DocumentHelper.createXPath(\"//dbchangelog:column[@type=\\\"LONGTEXT\\\"]/attribute::type\");\n+\t\txPath.setNamespaceURIs(namespaceUris);\n+\t\t\n+\t\tList<Node> nodes = xPath.selectNodes(document);\n+\t\tassertEquals(1, nodes.size());\n+\t\t\n+\t\t// when\n+\t\tSchemaOnlyTuner schemaOnlyTunerSpy = Mockito.spy(schemaOnlyTuner);\n+\t\tDocument actual = schemaOnlyTunerSpy.replaceLongtextWithClob(document);\n+\t\t\n+\t\t// then\n+\t\tfor (Node node : nodes) {\n+\t\t\tassertEquals(\"CLOB\", node.getParent().attributeValue(\"type\"));\n+\t\t}\n+\t\t\n+\t\tMockito.verify(schemaOnlyTunerSpy).assertLongtextNodes(any());\n+\t}\n+\t\n+\t@Test\n+\tpublic void shouldAssertLongtextNode() {\n+\t\t// given\n+\t\tXPath xPath = DocumentHelper.createXPath(\"//dbchangelog:column[@type=\\\"LONGTEXT\\\"]/attribute::type\");\n+\t\txPath.setNamespaceURIs(namespaceUris);\n+\t\t\n+\t\tList<Node> nodes = xPath.selectNodes(document);\n+\t\tassertEquals(1, nodes.size());\n+\t\t\n+\t\t// when and then\n+\t\tassertTrue(schemaOnlyTuner.assertLongtextNodes(nodes));\n+\t}\n+\t\n+\t@Test(expected = AssertionError.class)", "originalCommit": "70bf5f4617a097bc66e409afdc9826953756a8a1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQ1MjA2Mw==", "url": "https://github.com/openmrs/openmrs-core/pull/3472#discussion_r467452063", "bodyText": "Done.", "author": "WolfSchlegel", "createdAt": "2020-08-08T10:40:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzM2NjkxNw=="}], "type": "inlineReview"}, {"oid": "a043c234ad00b3028fff5f89c7153391c7ad3a26", "url": "https://github.com/openmrs/openmrs-core/commit/a043c234ad00b3028fff5f89c7153391c7ad3a26", "message": "TRUNK-5744 automate correction of Liquibase snapshot files", "committedDate": "2020-08-08T13:08:40Z", "type": "forcePushed"}, {"oid": "ba27eb216bff6e0c4e892f679007efb5bc8a7d4e", "url": "https://github.com/openmrs/openmrs-core/commit/ba27eb216bff6e0c4e892f679007efb5bc8a7d4e", "message": "TRUNK-5744 automate correction of Liquibase snapshot files", "committedDate": "2020-08-08T13:18:27Z", "type": "forcePushed"}, {"oid": "adb8d3796ca179e5e34db270a8db2106bf167d83", "url": "https://github.com/openmrs/openmrs-core/commit/adb8d3796ca179e5e34db270a8db2106bf167d83", "message": "TRUNK-5744 automate correction of Liquibase snapshot files", "committedDate": "2020-08-08T13:49:04Z", "type": "forcePushed"}, {"oid": "1b8c4bd352e66679d57ebf6ab3990b8c55fd65ba", "url": "https://github.com/openmrs/openmrs-core/commit/1b8c4bd352e66679d57ebf6ab3990b8c55fd65ba", "message": "TRUNK-5744 automate correction of Liquibase snapshot files", "committedDate": "2020-08-08T15:24:13Z", "type": "commit"}, {"oid": "1b8c4bd352e66679d57ebf6ab3990b8c55fd65ba", "url": "https://github.com/openmrs/openmrs-core/commit/1b8c4bd352e66679d57ebf6ab3990b8c55fd65ba", "message": "TRUNK-5744 automate correction of Liquibase snapshot files", "committedDate": "2020-08-08T15:24:13Z", "type": "forcePushed"}]}