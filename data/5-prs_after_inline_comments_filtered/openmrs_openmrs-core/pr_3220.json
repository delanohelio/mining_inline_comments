{"pr_number": 3220, "pr_title": "TRUNK-5751, Set Up InitializationFilter.java for PostgreSQL", "pr_createdAt": "2020-06-01T18:51:18Z", "pr_url": "https://github.com/openmrs/openmrs-core/pull/3220", "timeline": [{"oid": "462faa979eef89ca14dc0d72180893a11266a556", "url": "https://github.com/openmrs/openmrs-core/commit/462faa979eef89ca14dc0d72180893a11266a556", "message": "TRUNK-5751, Set Up InitializationFilter.java for PostgreSQL", "committedDate": "2020-06-01T18:46:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ2ODc5Mw==", "url": "https://github.com/openmrs/openmrs-core/pull/3220#discussion_r433468793", "bodyText": "Could you remind me as to why we are using PostgreSQL82Dialect instead of PostgreSQL92Dialect or PostgreSQL102Dialect, etc?", "author": "dkayiwa", "createdAt": "2020-06-01T20:23:25Z", "path": "web/src/main/java/org/openmrs/web/filter/initialization/InitializationFilter.java", "diffHunk": "@@ -1492,7 +1516,7 @@ public void run() {\n \t\t\t\t\t\t\truntimeProperties.put(\"connection.driver_class\", wizardModel.databaseDriver);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (finalDatabaseConnectionString.contains(\"postgres\")) {\n-\t\t\t\t\t\t\truntimeProperties.put(\"hibernate.dialect\", \"org.hibernate.dialect.PostgreSQLDialect\");", "originalCommit": "462faa979eef89ca14dc0d72180893a11266a556", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYyNjU4OA==", "url": "https://github.com/openmrs/openmrs-core/pull/3220#discussion_r433626588", "bodyText": "PostgreSQL82Dialect supports PostgreSQL 8.2 and later ( see here : https://docs.jboss.org/hibernate/orm/5.1/javadocs/org/hibernate/dialect/PostgreSQL82Dialect.html ) where as others like PostgreSQL10 Dialect provide support for PostgreSQL10 and later ( see here: https://docs.jboss.org/hibernate/stable/orm/javadocs/org/hibernate/dialect/PostgreSQL10Dialect.html ). I used PostgreSQL82Dialect so that if some implementation is still relying on older versions of PostgreSQL then there won't be a problem.", "author": "Am-Coder", "createdAt": "2020-06-02T05:23:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ2ODc5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkyNjYxMw==", "url": "https://github.com/openmrs/openmrs-core/pull/3220#discussion_r433926613", "bodyText": "Does this therefore mean that we do not support the latest release of PostgreSQL?", "author": "dkayiwa", "createdAt": "2020-06-02T14:36:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ2ODc5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk0MjY1Ng==", "url": "https://github.com/openmrs/openmrs-core/pull/3220#discussion_r433942656", "bodyText": "I would actually questions whether we need to select a Hibernate dialect at all, but that might be bigger than this ticket (Hibernate should automatically do the right thing).", "author": "ibacher", "createdAt": "2020-06-02T14:58:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ2ODc5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDA3MzkzNg==", "url": "https://github.com/openmrs/openmrs-core/pull/3220#discussion_r434073936", "bodyText": "Does this therefore mean that we do not support the latest release of PostgreSQL?\n\nHere as mentioned in the docs, support is for PostgreSQL 8.2 and later.\nhttps://docs.jboss.org/hibernate/orm/5.1/javadocs/org/hibernate/dialect/PostgreSQL82Dialect.html", "author": "Am-Coder", "createdAt": "2020-06-02T18:06:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ2ODc5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDA5MTE1MA==", "url": "https://github.com/openmrs/openmrs-core/pull/3220#discussion_r434091150", "bodyText": "What do you think about @ibacher's point?", "author": "dkayiwa", "createdAt": "2020-06-02T18:25:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ2ODc5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDA5NzQ3Nw==", "url": "https://github.com/openmrs/openmrs-core/pull/3220#discussion_r434097477", "bodyText": "I would actually questions whether we need to select a Hibernate dialect at all, but that might be bigger than this ticket (Hibernate should automatically do the right thing).\n\n@ibacher your take on this appears to me, right. I'll try on mysql and postgresql without specifying the dialect and see what happens. Though, I fear if there is a problem then it might require a separate ticket in itself and also a lot of look into how hibernate uses database metadata( like using drivers ) to select dialect  and won't be of immediate concern.", "author": "Am-Coder", "createdAt": "2020-06-02T18:37:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ2ODc5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDA5OTk0OA==", "url": "https://github.com/openmrs/openmrs-core/pull/3220#discussion_r434099948", "bodyText": "Can you try it out and tell us what happens?", "author": "dkayiwa", "createdAt": "2020-06-02T18:42:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ2ODc5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDExMzU4Mg==", "url": "https://github.com/openmrs/openmrs-core/pull/3220#discussion_r434113582", "bodyText": "Sure @dkayiwa , I am working on it.", "author": "Am-Coder", "createdAt": "2020-06-02T19:06:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ2ODc5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEyNjk2Nw==", "url": "https://github.com/openmrs/openmrs-core/pull/3220#discussion_r434126967", "bodyText": "@ibacher  @dkayiwa  , I initialized OpenMRS-core on PostgreSQL. I added legacyUI module and Now when I am trying to create a Patient,\n\n\nWithout using any PostgreSQL dialect : This is the error log https://pastebin.com/JaCZdja6\n\n\nUsing PostgreSQL dialect: Everything works fine and I am redirected to page where I need to fill patient details.", "author": "Am-Coder", "createdAt": "2020-06-02T19:30:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ2ODc5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEzODQ0MQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3220#discussion_r434138441", "bodyText": "Did you test to confirm that PostgreSQL82Dialect works for the latest release of PostgreSQL?", "author": "dkayiwa", "createdAt": "2020-06-02T19:52:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ2ODc5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE0NjQ3MA==", "url": "https://github.com/openmrs/openmrs-core/pull/3220#discussion_r434146470", "bodyText": "@ibacher @dkayiwa , I initialized OpenMRS-core on PostgreSQL. I added legacyUI module and Now when I am trying to create a Patient,\n1. Without using any PostgreSQL dialect : This is the error log [pastebin.com/JaCZdja6](https://pastebin.com/JaCZdja6)\n\n2. Using PostgreSQL dialect: Everything works fine and I am redirected to page where I need to fill patient details.\n\n\n@Am-Coder I think there may be a small trick to this. There's a file in src/main/resources called hibernate.default.properties which has the line:\nhibernate.dialect=org.hibernate.dialect.MySQLDialect\n\nCould you edit that file to comment out that line and try again?", "author": "ibacher", "createdAt": "2020-06-02T20:08:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ2ODc5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM0NzMwOQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3220#discussion_r434347309", "bodyText": "@ibacher @dkayiwa , I initialized OpenMRS-core on PostgreSQL. I added legacyUI module and Now when I am trying to create a Patient,\n1. Without using any PostgreSQL dialect : This is the error log [pastebin.com/JaCZdja6](https://pastebin.com/JaCZdja6)\n\n2. Using PostgreSQL dialect: Everything works fine and I am redirected to page where I need to fill patient details.\n\n\n@Am-Coder I think there may be a small trick to this. There's a file in src/main/resources called hibernate.default.properties which has the line:\nhibernate.dialect=org.hibernate.dialect.MySQLDialect\n\nCould you edit that file to comment out that line and try again?\n\nSorry, I missed the default dialect. So, I tried and the results are:\n\nIn both mysql and postgresql we are able enter Patient details page successfully. In mysql we are able to add patient successfully as well.\nIn mysql, I entered patient management section and tried to use delete the patient forever option. The error log I got is : https://pastebin.com/cj0tb7ue . I think this might be related to this that https://talk.openmrs.org/t/patient-management-in-postgresql/28228/5 .", "author": "Am-Coder", "createdAt": "2020-06-03T06:57:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ2ODc5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM0NzgxMA==", "url": "https://github.com/openmrs/openmrs-core/pull/3220#discussion_r434347810", "bodyText": "Did you test to confirm that PostgreSQL82Dialect works for the latest release of PostgreSQL?\n\nI'll try with postgresql 12 and report the results.", "author": "Am-Coder", "createdAt": "2020-06-03T06:58:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ2ODc5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDUyMzg5Ng==", "url": "https://github.com/openmrs/openmrs-core/pull/3220#discussion_r434523896", "bodyText": "@Am-Coder Does 1 imply that you weren't able to add a patient successfully on PostgreSQL? 2 is a very good point; I forgot we were being \"saved\" by using the \"wrong\" dialect. I'm actually in favour of just adding in the appropriate ondelete = cascade properties to the affected tables.", "author": "ibacher", "createdAt": "2020-06-03T12:19:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ2ODc5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDY4NjY1Mw==", "url": "https://github.com/openmrs/openmrs-core/pull/3220#discussion_r434686653", "bodyText": "@ibacher\nFor 1 there is another problem that is not related to dialect but related to sequence and holds a different solution.\nFor 2, I will be adding the necessary ondelete = cascade in another ticket as this is necessary for PostgreSQL.", "author": "Am-Coder", "createdAt": "2020-06-03T16:09:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ2ODc5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDY4NzgxOQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3220#discussion_r434687819", "bodyText": "@Am-Coder didn't i solve the sequence problem in my previous commits?", "author": "dkayiwa", "createdAt": "2020-06-03T16:11:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ2ODc5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcwNjAwMQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3220#discussion_r434706001", "bodyText": "Did you test to confirm that PostgreSQL82Dialect works for the latest release of PostgreSQL?\n\n@dkayiwa\nPostgreSQL 12 gives the following error with both PostgreSQL82 and PostgreSQL10 dialect:  https://pastebin.com/Q62dG05P\nSo I thought of upgrading PostgreSQL dependency to :\n<dependency>\n    <groupId>org.postgresql</groupId>\n    <artifactId>postgresql</artifactId>\n    <version>42.2.5</version>\n</dependency>\n\nAnd now the problem is resolved with PostgreSQL 12 and PostgreSQL82 as dialect. Upgrading this dependency is linked to the ticket - https://issues.openmrs.org/browse/TRUNK-5553 . So I think this now depends on this ticket.", "author": "Am-Coder", "createdAt": "2020-06-03T16:39:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ2ODc5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc0NTA0Ng==", "url": "https://github.com/openmrs/openmrs-core/pull/3220#discussion_r434745046", "bodyText": "@Am-Coder didn't i solve the sequence problem in my previous commits?\n\nStill the problem exists, the error log : https://pastebin.com/VJrSf98T", "author": "Am-Coder", "createdAt": "2020-06-03T17:44:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ2ODc5Mw=="}], "type": "inlineReview"}, {"oid": "0cc23fe9f41a221f4084484f45de0dd431f31540", "url": "https://github.com/openmrs/openmrs-core/commit/0cc23fe9f41a221f4084484f45de0dd431f31540", "message": "TRUNK-5751, Set Up InitializationFilter.java for PostgreSQL", "committedDate": "2020-06-05T10:51:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk0NTg2OQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3220#discussion_r435945869", "bodyText": "Is the replacedSql.replaceAll needed for postgresql?", "author": "dkayiwa", "createdAt": "2020-06-05T14:06:22Z", "path": "web/src/main/java/org/openmrs/web/filter/initialization/InitializationFilter.java", "diffHunk": "@@ -1152,6 +1152,9 @@ private int executeStatement(boolean silent, String user, String pw, String sql,\n \t\t\t// TODO how to get the driver for the other dbs...\n \t\t\tif (wizardModel.databaseConnection.contains(\"mysql\")) {\n \t\t\t\tClass.forName(\"com.mysql.cj.jdbc.Driver\").newInstance();\n+\t\t\t} else if (wizardModel.databaseConnection.contains(\"postgres\")) {\n+\t\t\t\tClass.forName(\"org.postgresql.Driver\").newInstance();\n+\t\t\t\treplacedSql = replacedSql.replaceAll(\"`\", \"\\\"\");", "originalCommit": "0cc23fe9f41a221f4084484f45de0dd431f31540", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA4OTY5Mg==", "url": "https://github.com/openmrs/openmrs-core/pull/3220#discussion_r436089692", "bodyText": "Currently, if you remove this you'll get the error :", "author": "Am-Coder", "createdAt": "2020-06-05T18:18:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk0NTg2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk0NjU5NA==", "url": "https://github.com/openmrs/openmrs-core/pull/3220#discussion_r435946594", "bodyText": "Shouldn't we be using a constant for mysql or posgresql?", "author": "dkayiwa", "createdAt": "2020-06-05T14:07:38Z", "path": "web/src/main/java/org/openmrs/web/filter/initialization/InitializationFilter.java", "diffHunk": "@@ -1434,10 +1437,23 @@ public void run() {\n \t\t\t\t\t\t\t        || wizardModel.databaseConnection.contains(\"127.0.0.1\")) {\n \t\t\t\t\t\t\t\thost = \"'localhost'\";\n \t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\tString sql = \"drop user '?'@\" + host;\n+\t\t\t\t\t\t\t\n+\t\t\t\t\t\t\tString sql = \"\";\n+\t\t\t\t\t\t\tif (wizardModel.databaseConnection.contains(\"mysql\")) {", "originalCommit": "0cc23fe9f41a221f4084484f45de0dd431f31540", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk0NzI4OA==", "url": "https://github.com/openmrs/openmrs-core/pull/3220#discussion_r435947288", "bodyText": "Or even better, wrap wizardModel.databaseConnection.contains in a method?", "author": "dkayiwa", "createdAt": "2020-06-05T14:08:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk0NjU5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjEwMjYyMg==", "url": "https://github.com/openmrs/openmrs-core/pull/3220#discussion_r436102622", "bodyText": "I'll make use of constants for db's within this same class as private members and wrap wizardModel in a method like :\n\tprivate boolean checkDatabase(String database) {\n\t\tif (wizardModel.databaseConnection.contains(database))\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\nAlso should I add constants for other db like 'sqlserver' as well ?", "author": "Am-Coder", "createdAt": "2020-06-05T18:45:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk0NjU5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI1ODIzNg==", "url": "https://github.com/openmrs/openmrs-core/pull/3220#discussion_r436258236", "bodyText": "@dkayiwa , I have made some changes according to your suggestion. Also I have checked the runtime properties file and tried login with these changes in place and there was no problem.\nMySQL:\n\nPostgresql:", "author": "Am-Coder", "createdAt": "2020-06-06T10:40:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk0NjU5NA=="}], "type": "inlineReview"}, {"oid": "506635506a623a275e6506701dbbb986642bfe74", "url": "https://github.com/openmrs/openmrs-core/commit/506635506a623a275e6506701dbbb986642bfe74", "message": "TRUNK-5751, Set Up InitializationFilter.java for PostgreSQL", "committedDate": "2020-06-06T10:18:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgwMjUyNA==", "url": "https://github.com/openmrs/openmrs-core/pull/3220#discussion_r436802524", "bodyText": "What is the value added by this comment?", "author": "dkayiwa", "createdAt": "2020-06-08T15:38:13Z", "path": "web/src/main/java/org/openmrs/web/filter/initialization/InitializationFilter.java", "diffHunk": "@@ -86,6 +86,26 @@\n \t\n \tprivate static final org.slf4j.Logger log = LoggerFactory.getLogger(InitializationFilter.class);\n \t\n+\t/**\n+\t * Supported Database", "originalCommit": "506635506a623a275e6506701dbbb986642bfe74", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgzMTk5NQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3220#discussion_r436831995", "bodyText": "My motive behind adding this string was to tell the one who see's the code to show the database that openmrs supports currently. I think I'll remove this string over H2 and sqlserver. What do you think should I add this string or remove it from everywhere ?", "author": "Am-Coder", "createdAt": "2020-06-08T16:20:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgwMjUyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgzNjA3MQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3220#discussion_r436836071", "bodyText": "If it is the same comment used for four different things, then i do not see the value added.", "author": "dkayiwa", "createdAt": "2020-06-08T16:26:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgwMjUyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgwMzg1NA==", "url": "https://github.com/openmrs/openmrs-core/pull/3220#discussion_r436803854", "bodyText": "What does checkDatabase mean?", "author": "dkayiwa", "createdAt": "2020-06-08T15:40:20Z", "path": "web/src/main/java/org/openmrs/web/filter/initialization/InitializationFilter.java", "diffHunk": "@@ -1133,6 +1153,12 @@ private void importTestDataSet(InputStream in, String connectionUrl, String conn\n \t\t}\n \t}\n \t\n+\tprivate boolean checkDatabase(String database) {", "originalCommit": "506635506a623a275e6506701dbbb986642bfe74", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgzNDE5Mw==", "url": "https://github.com/openmrs/openmrs-core/pull/3220#discussion_r436834193", "bodyText": "Given a string as input , checkDatabase checks whteher the database is required or supported by OpenMRS platform.", "author": "Am-Coder", "createdAt": "2020-06-08T16:24:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgwMzg1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgzNjg5Nw==", "url": "https://github.com/openmrs/openmrs-core/pull/3220#discussion_r436836897", "bodyText": "Shouldn't the method name contain that information such that one does not need this comment to understand what the method does?", "author": "dkayiwa", "createdAt": "2020-06-08T16:28:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgwMzg1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgwNDQ4Nw==", "url": "https://github.com/openmrs/openmrs-core/pull/3220#discussion_r436804487", "bodyText": "https://wiki.openmrs.org/display/docs/Java+Conventions#JavaConventions-CodeStyle", "author": "dkayiwa", "createdAt": "2020-06-08T15:41:17Z", "path": "web/src/main/java/org/openmrs/web/filter/initialization/InitializationFilter.java", "diffHunk": "@@ -1133,6 +1153,12 @@ private void importTestDataSet(InputStream in, String connectionUrl, String conn\n \t\t}\n \t}\n \t\n+\tprivate boolean checkDatabase(String database) {\n+\t\tif (wizardModel.databaseConnection.contains(database))", "originalCommit": "506635506a623a275e6506701dbbb986642bfe74", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgzNDU4OA==", "url": "https://github.com/openmrs/openmrs-core/pull/3220#discussion_r436834588", "bodyText": "This is a mistake on my part. I'll correct it.", "author": "Am-Coder", "createdAt": "2020-06-08T16:24:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgwNDQ4Nw=="}], "type": "inlineReview"}, {"oid": "f509e7235d2fae0c8d9f737cc380f161516b3de5", "url": "https://github.com/openmrs/openmrs-core/commit/f509e7235d2fae0c8d9f737cc380f161516b3de5", "message": "TRUNK-5751, Set Up InitializationFilter.java for PostgreSQL", "committedDate": "2020-06-09T11:17:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzcwODI5Mw==", "url": "https://github.com/openmrs/openmrs-core/pull/3220#discussion_r437708293", "bodyText": "This method name creates an impression that we support only one database. But from the code base, we support four databases. Do you get my point?", "author": "dkayiwa", "createdAt": "2020-06-09T20:46:33Z", "path": "web/src/main/java/org/openmrs/web/filter/initialization/InitializationFilter.java", "diffHunk": "@@ -1133,6 +1141,13 @@ private void importTestDataSet(InputStream in, String connectionUrl, String conn\n \t\t}\n \t}\n \t\n+\tprivate boolean checkIfDatabaseIsSupported(String database) {", "originalCommit": "f509e7235d2fae0c8d9f737cc380f161516b3de5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODAzMjY4Mg==", "url": "https://github.com/openmrs/openmrs-core/pull/3220#discussion_r438032682", "bodyText": "Does checkInSupportedDatabases looks right ?", "author": "Am-Coder", "createdAt": "2020-06-10T10:48:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzcwODI5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA1MzYyOQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3220#discussion_r438053629", "bodyText": "What do you think of isCurrentDatabase?", "author": "dkayiwa", "createdAt": "2020-06-10T11:31:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzcwODI5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA2MDMyNw==", "url": "https://github.com/openmrs/openmrs-core/pull/3220#discussion_r438060327", "bodyText": "Seems fine to me. I'll make the changes.", "author": "Am-Coder", "createdAt": "2020-06-10T11:45:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzcwODI5Mw=="}], "type": "inlineReview"}, {"oid": "c8771d54e83d810ec2ea4f84dbbe7abafb500a6e", "url": "https://github.com/openmrs/openmrs-core/commit/c8771d54e83d810ec2ea4f84dbbe7abafb500a6e", "message": "TRUNK-5751, Set Up InitializationFilter.java for PostgreSQL", "committedDate": "2020-06-10T16:09:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI2NDA3Nw==", "url": "https://github.com/openmrs/openmrs-core/pull/3220#discussion_r438264077", "bodyText": "Why run executeStatement twice?", "author": "dkayiwa", "createdAt": "2020-06-10T16:40:59Z", "path": "web/src/main/java/org/openmrs/web/filter/initialization/InitializationFilter.java", "diffHunk": "@@ -1448,9 +1479,17 @@ public void run() {\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t\t\n \t\t\t\t\t\t\t// grant the roles\n-\t\t\t\t\t\t\tsql = \"GRANT ALL ON `?`.* TO '?'@\" + host;\n-\t\t\t\t\t\t\tint result = executeStatement(false, wizardModel.createUserUsername,\n-\t\t\t\t\t\t\t    wizardModel.createUserPassword, sql, wizardModel.databaseName, connectionUsername);\n+\t\t\t\t\t\t\tint result = 1;\n+\t\t\t\t\t\t\tif (isCurrentDatabase(DATABASE_MYSQL)) {\n+\t\t\t\t\t\t\t\tsql = \"GRANT ALL ON `?`.* TO '?'@\" + host;\n+\t\t\t\t\t\t\t\tresult = executeStatement(false, wizardModel.createUserUsername,", "originalCommit": "c8771d54e83d810ec2ea4f84dbbe7abafb500a6e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI4OTgyNw==", "url": "https://github.com/openmrs/openmrs-core/pull/3220#discussion_r438289827", "bodyText": "The number of parameters in sql query for mysql and postgresql are different, so need to have a separate statement.", "author": "Am-Coder", "createdAt": "2020-06-10T17:24:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI2NDA3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI5MDUxNQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3220#discussion_r438290515", "bodyText": "You can still do that but run executeStatement once.", "author": "dkayiwa", "createdAt": "2020-06-10T17:25:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI2NDA3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMyMzAwOA==", "url": "https://github.com/openmrs/openmrs-core/pull/3220#discussion_r438323008", "bodyText": "Let me try if there is a way. But if you are suggesting that I make use of a similar GRANT statement for PostgreSQL. Then there is a problem since that way user does not get permission to create extension fuzzystrmatch required for soundex.", "author": "Am-Coder", "createdAt": "2020-06-10T18:21:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI2NDA3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMzMjM4Ng==", "url": "https://github.com/openmrs/openmrs-core/pull/3220#discussion_r438332386", "bodyText": "What i simply mean is that assign the sql in the if statements and then execute the result once. Does this make sense?", "author": "dkayiwa", "createdAt": "2020-06-10T18:38:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI2NDA3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM0MDg3Mg==", "url": "https://github.com/openmrs/openmrs-core/pull/3220#discussion_r438340872", "bodyText": "For MySQL the execute statement is :\nresult = executeStatement(false, wizardModel.createUserUsername,\nwizardModel.createUserPassword, sql, wizardModel.databaseName, connectionUsername);\n\nFor PostgreSQL, the execute statement is :\nresult = executeStatement(false, wizardModel.createUserUsername,\nwizardModel.createUserPassword, sql, connectionUsername);\n\nSo, if I make use of MySQL's execute statement in\nsql = \"ALTER USER ? WITH SUPERUSER\"; for postgreSQL then it will replace '?' with wizardModel.databaseName which will be wrong. Am I missing something ?", "author": "Am-Coder", "createdAt": "2020-06-10T18:53:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI2NDA3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM0NTUzMA==", "url": "https://github.com/openmrs/openmrs-core/pull/3220#discussion_r438345530", "bodyText": "Oh i see! If the parameters are different, then you can leave it. \ud83d\ude0a", "author": "dkayiwa", "createdAt": "2020-06-10T19:02:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI2NDA3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI2OTkyOQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3220#discussion_r438269929", "bodyText": "Why do we have the exact same replacedSql.replaceAll in more than one place?", "author": "dkayiwa", "createdAt": "2020-06-10T16:50:44Z", "path": "web/src/main/java/org/openmrs/web/filter/initialization/InitializationFilter.java", "diffHunk": "@@ -1150,8 +1165,11 @@ private int executeStatement(boolean silent, String user, String pw, String sql,\n \t\t\tString replacedSql = sql;\n \t\t\t\n \t\t\t// TODO how to get the driver for the other dbs...\n-\t\t\tif (wizardModel.databaseConnection.contains(\"mysql\")) {\n+\t\t\tif (isCurrentDatabase(DATABASE_MYSQL)) {\n \t\t\t\tClass.forName(\"com.mysql.cj.jdbc.Driver\").newInstance();\n+\t\t\t} else if (isCurrentDatabase(DATABASE_POSTGRESQL)) {\n+\t\t\t\tClass.forName(\"org.postgresql.Driver\").newInstance();\n+\t\t\t\treplacedSql = replacedSql.replaceAll(\"`\", \"\\\"\");", "originalCommit": "c8771d54e83d810ec2ea4f84dbbe7abafb500a6e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI5NTkxMA==", "url": "https://github.com/openmrs/openmrs-core/pull/3220#discussion_r438295910", "bodyText": "So, in the existing implementation for other db's other then MySQL we had\n \t\t\t\treplacedSql = replacedSql.replaceAll(\"\", \"\"\"); `\nin else condition. Now for PostgreSQL we also require this. What can be done to add a single statement is we set drivers separately in if conditions and do :\nif ( !isCurrentDatabase(DATABASE_MYSQL)){\n         replacedSql = replacedSql.replaceAll(\"`\", \"\\\"\");\n}", "author": "Am-Coder", "createdAt": "2020-06-10T17:34:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI2OTkyOQ=="}], "type": "inlineReview"}]}