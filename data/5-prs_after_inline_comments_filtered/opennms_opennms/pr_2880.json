{"pr_number": 2880, "pr_title": "NMS-12279: Cleanup interfaces tagged for flows", "pr_createdAt": "2020-02-05T12:11:10Z", "pr_url": "https://github.com/OpenNMS/opennms/pull/2880", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTI1MzE2MQ==", "url": "https://github.com/OpenNMS/opennms/pull/2880#discussion_r375253161", "bodyText": "Can we do both ingress egress in a single transaction?", "author": "j-white", "createdAt": "2020-02-05T13:27:55Z", "path": "features/flows/elastic/src/main/java/org/opennms/netmgt/flows/elastic/ElasticFlowRepository.java", "diffHunk": "@@ -193,11 +196,28 @@ public ElasticFlowRepository(MetricRegistry metricRegistry, JestClient jestClien\n         logMarkingTimer = metricRegistry.timer(\"logMarking\");\n         flowsPerLog = metricRegistry.histogram(\"flowsPerLog\");\n \n-        // Pre-populate marker cache with values from DB\n+        this.markerCache.put(Direction.INGRESS, CacheBuilder.newBuilder()\n+                .expireAfterWrite(1, TimeUnit.HOURS)\n+                .build());\n+\n+        this.sessionUtils.withTransaction(() -> {", "originalCommit": "e2fb5aede8436e3806f7a2f38dc73438c9d16fb2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTI4MzA4Ng==", "url": "https://github.com/OpenNMS/opennms/pull/2880#discussion_r375283086", "bodyText": "Done", "author": "christianpape", "createdAt": "2020-02-05T14:22:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTI1MzE2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTI5NjQwMQ==", "url": "https://github.com/OpenNMS/opennms/pull/2880#discussion_r375296401", "bodyText": "(Beside the missing final ...) a TreeMap used for two variables seems to be overkill. There are cases of conditional handling below anyways.\nA Map#get() and Map#put() compared to reading and writing two variable seems to be wrong.\nIf we decide to keep the Map, there is EnumMap...", "author": "fooker", "createdAt": "2020-02-05T14:43:44Z", "path": "features/flows/elastic/src/main/java/org/opennms/netmgt/flows/elastic/ElasticFlowRepository.java", "diffHunk": "@@ -167,7 +170,7 @@\n      *\n      * This maps a node ID to a set if snmpInterface IDs.\n      */\n-    private final ConcurrentMap<Integer, Set<Integer>> markerCache = Maps.newConcurrentMap();\n+    private Map<Direction, Cache<Integer, Set<Integer>>> markerCache = new TreeMap<>();", "originalCommit": "b8caabff7eea3472fb3f1c13c21994a758f9394b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTMwMTc1MA==", "url": "https://github.com/OpenNMS/opennms/pull/2880#discussion_r375301750", "bodyText": "new Date().getTime() can be replaced by System.currentTimeMillis()", "author": "fooker", "createdAt": "2020-02-05T14:52:12Z", "path": "opennms-model/src/main/java/org/opennms/netmgt/model/OnmsNode.java", "diffHunk": "@@ -448,14 +449,51 @@ public void setSysName(String nodesysname) {\n         m_sysName = nodesysname;\n     }\n \n-    @Column(name=\"hasFlows\", nullable=false)\n-    @XmlAttribute(name=\"hasFlows\")\n+    @Transient\n     public boolean getHasFlows() {\n-        return m_hasFlows;\n+        if (OnmsSnmpInterface.INGRESS_AND_EGRESS_REQUIRED) {\n+            return getHasIngressFlows() && getHasEgressFlows();\n+        } else {\n+            return getHasIngressFlows() || getHasEgressFlows();\n+        }\n+    }\n+\n+    @Transient\n+    public boolean getHasIngressFlows() {\n+        if (m_lastIngressFlow == null) {\n+            return false;\n+        }\n+        return (new Date().getTime() - m_lastIngressFlow.getTime()) / 1000 < OnmsSnmpInterface.MAX_FLOW_AGE;", "originalCommit": "b8caabff7eea3472fb3f1c13c21994a758f9394b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTMwNzcwNw==", "url": "https://github.com/OpenNMS/opennms/pull/2880#discussion_r375307707", "bodyText": "done", "author": "christianpape", "createdAt": "2020-02-05T15:01:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTMwMTc1MA=="}], "type": "inlineReview"}, {"oid": "ef1790d631893a2961e76f6f9541d307469cc422", "url": "https://github.com/OpenNMS/opennms/commit/ef1790d631893a2961e76f6f9541d307469cc422", "message": "NMS-12279: Cleanup interfaces tagged for flows", "committedDate": "2020-02-05T15:10:15Z", "type": "forcePushed"}, {"oid": "6f7353275fa11c250398c842da9ab0b10ad04056", "url": "https://github.com/OpenNMS/opennms/commit/6f7353275fa11c250398c842da9ab0b10ad04056", "message": "NMS-12279: Cleanup interfaces tagged for flows", "committedDate": "2020-02-05T15:26:27Z", "type": "commit"}, {"oid": "6f7353275fa11c250398c842da9ab0b10ad04056", "url": "https://github.com/OpenNMS/opennms/commit/6f7353275fa11c250398c842da9ab0b10ad04056", "message": "NMS-12279: Cleanup interfaces tagged for flows", "committedDate": "2020-02-05T15:26:27Z", "type": "forcePushed"}, {"oid": "ab8bc6bea4e23eb17e149f424a04c7cf2e3dae68", "url": "https://github.com/OpenNMS/opennms/commit/ab8bc6bea4e23eb17e149f424a04c7cf2e3dae68", "message": "NMS-12279: Fixed smoke test", "committedDate": "2020-02-06T07:35:34Z", "type": "commit"}]}