{"pr_number": 3180, "pr_title": "NMS-12948: SSLCertMonitor should include more details about the expir(ing|ed) certificate in reason codes", "pr_createdAt": "2020-10-08T02:22:01Z", "pr_url": "https://github.com/OpenNMS/opennms/pull/3180", "timeline": [{"oid": "3054efa1c21936fc2f54bdc058f3ca7246035946", "url": "https://github.com/OpenNMS/opennms/commit/3054efa1c21936fc2f54bdc058f3ca7246035946", "message": "NMS-12948", "committedDate": "2020-10-08T02:18:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU4MTY1Ng==", "url": "https://github.com/OpenNMS/opennms/pull/3180#discussion_r506581656", "bodyText": "Can replace with LOG", "author": "cgorantla", "createdAt": "2020-10-16T16:18:27Z", "path": "features/poller/monitors/core/src/main/java/org/opennms/netmgt/poller/monitors/SSLCertMonitor.java", "diffHunk": "@@ -265,6 +288,12 @@ public PollStatus poll(final MonitoredService svc, final Map<String, Object> par\n                 String reason = \"IOException while polling address: \" + ipAddr;\n                 LOG.debug(reason, e);\n                 serviceStatus = PollStatus.unavailable(reason);\n+            } catch (CertificateEncodingException e) {\n+                e.printStackTrace();", "originalCommit": "3054efa1c21936fc2f54bdc058f3ca7246035946", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU4MTg1NQ==", "url": "https://github.com/OpenNMS/opennms/pull/3180#discussion_r506581855", "bodyText": "can omit e.printStackTrace()", "author": "cgorantla", "createdAt": "2020-10-16T16:18:50Z", "path": "features/poller/monitors/core/src/main/java/org/opennms/netmgt/poller/monitors/SSLCertMonitor.java", "diffHunk": "@@ -265,6 +288,12 @@ public PollStatus poll(final MonitoredService svc, final Map<String, Object> par\n                 String reason = \"IOException while polling address: \" + ipAddr;\n                 LOG.debug(reason, e);\n                 serviceStatus = PollStatus.unavailable(reason);\n+            } catch (CertificateEncodingException e) {\n+                e.printStackTrace();\n+            } catch (NoSuchAlgorithmException e) {\n+                String reason = \"NoSuchAlgorithException (SHA-1) while polling address: \" + ipAddr;\n+                LOG.debug(reason, e);\n+                e.printStackTrace();", "originalCommit": "3054efa1c21936fc2f54bdc058f3ca7246035946", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU4NDM1NA==", "url": "https://github.com/OpenNMS/opennms/pull/3180#discussion_r506584354", "bodyText": "Are all of these guaranteed to be not null ?", "author": "cgorantla", "createdAt": "2020-10-16T16:23:01Z", "path": "features/poller/monitors/core/src/main/java/org/opennms/netmgt/poller/monitors/SSLCertMonitor.java", "diffHunk": "@@ -222,27 +226,46 @@ public PollStatus poll(final MonitoredService svc, final Map<String, Object> par\n                 for (int i = 0; i < certs.length && !serviceStatus.isAvailable(); i++) {\n                     if (certs[i] instanceof X509Certificate) {\n                         X509Certificate certx = (X509Certificate) certs[i];\n+                        String subject = certx.getSubjectDN().getName();", "originalCommit": "3054efa1c21936fc2f54bdc058f3ca7246035946", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjYwMzM0MA==", "url": "https://github.com/OpenNMS/opennms/pull/3180#discussion_r506603340", "bodyText": "The javadocs do not explicitly say whether or not they can be null, so I might as well add a check.", "author": "dschlenk", "createdAt": "2020-10-16T16:58:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU4NDM1NA=="}], "type": "inlineReview"}, {"oid": "01e4fd88cab6fbb0c3ba4660cd42b8ad9c68fd2f", "url": "https://github.com/OpenNMS/opennms/commit/01e4fd88cab6fbb0c3ba4660cd42b8ad9c68fd2f", "message": "fixes from review", "committedDate": "2020-10-16T18:03:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTcyNDU5Nw==", "url": "https://github.com/OpenNMS/opennms/pull/3180#discussion_r509724597", "bodyText": "not assigned to subject", "author": "cgorantla", "createdAt": "2020-10-21T21:42:38Z", "path": "features/poller/monitors/core/src/main/java/org/opennms/netmgt/poller/monitors/SSLCertMonitor.java", "diffHunk": "@@ -222,27 +226,52 @@ public PollStatus poll(final MonitoredService svc, final Map<String, Object> par\n                 for (int i = 0; i < certs.length && !serviceStatus.isAvailable(); i++) {\n                     if (certs[i] instanceof X509Certificate) {\n                         X509Certificate certx = (X509Certificate) certs[i];\n+                        String subject = \"\";\n+                        if (certx.getSubjectDN() != null && certx.getSubjectDN().getName() != null) {\n+                            certx.getSubjectDN().getName();", "originalCommit": "01e4fd88cab6fbb0c3ba4660cd42b8ad9c68fd2f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE4Njg5NQ==", "url": "https://github.com/OpenNMS/opennms/pull/3180#discussion_r512186895", "bodyText": "yikes!", "author": "dschlenk", "createdAt": "2020-10-26T18:40:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTcyNDU5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTcyNDgwNA==", "url": "https://github.com/OpenNMS/opennms/pull/3180#discussion_r509724804", "bodyText": "same here.", "author": "cgorantla", "createdAt": "2020-10-21T21:42:54Z", "path": "features/poller/monitors/core/src/main/java/org/opennms/netmgt/poller/monitors/SSLCertMonitor.java", "diffHunk": "@@ -222,27 +226,52 @@ public PollStatus poll(final MonitoredService svc, final Map<String, Object> par\n                 for (int i = 0; i < certs.length && !serviceStatus.isAvailable(); i++) {\n                     if (certs[i] instanceof X509Certificate) {\n                         X509Certificate certx = (X509Certificate) certs[i];\n+                        String subject = \"\";\n+                        if (certx.getSubjectDN() != null && certx.getSubjectDN().getName() != null) {\n+                            certx.getSubjectDN().getName();\n+                        }\n+                        String issuer = \"\";\n+                        if (certx.getIssuerDN() != null && certx.getIssuerDN().getName() != null) {\n+                            certx.getIssuerDN().getName();", "originalCommit": "01e4fd88cab6fbb0c3ba4660cd42b8ad9c68fd2f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE3NjgwMw==", "url": "https://github.com/OpenNMS/opennms/pull/3180#discussion_r512176803", "bodyText": "Guess we should also check these elements to be non-null, certx.getNotBefore().toString() ,  certx.getNotAfter()", "author": "cgorantla", "createdAt": "2020-10-26T18:23:49Z", "path": "features/poller/monitors/core/src/main/java/org/opennms/netmgt/poller/monitors/SSLCertMonitor.java", "diffHunk": "@@ -222,27 +226,52 @@ public PollStatus poll(final MonitoredService svc, final Map<String, Object> par\n                 for (int i = 0; i < certs.length && !serviceStatus.isAvailable(); i++) {\n                     if (certs[i] instanceof X509Certificate) {\n                         X509Certificate certx = (X509Certificate) certs[i];\n+                        String subject = \"\";\n+                        if (certx.getSubjectDN() != null && certx.getSubjectDN().getName() != null) {\n+                            certx.getSubjectDN().getName();\n+                        }\n+                        String issuer = \"\";\n+                        if (certx.getIssuerDN() != null && certx.getIssuerDN().getName() != null) {\n+                            certx.getIssuerDN().getName();\n+                        }\n+                        String fprint = DatatypeConverter.printHexBinary(MessageDigest.getInstance(\"SHA-1\").digest(certx.getEncoded())).toLowerCase();\n+                        StringBuilder reasonBuilder = new StringBuilder();\n                         LOG.debug(\"Checking validity against dates: [current: {}, valid: {}], NotBefore: {}, NotAfter: {}\", calCurrent.getTime(), calValid.getTime(), certx.getNotBefore(), certx.getNotAfter());\n                         calBefore.setTime(certx.getNotBefore());\n                         calAfter.setTime(certx.getNotAfter());\n                         if (calCurrent.before(calBefore)) {\n-                            LOG.debug(\"Certificate is invalid, current time is before start time\");\n-                            serviceStatus = PollStatus.unavailable(\"Certificate is invalid, current time is before start time\");\n+                            reasonBuilder.append(\"Certificate with fingerprint '\").append(fprint).append(\"' issued to \")\n+                                    .append(subject).append(\" by \").append(issuer)\n+                                    .append(\" is not yet valid. Current time is before start time. It is valid from \")\n+                                    .append(certx.getNotBefore().toString()).append(\" until \").append(certx.getNotAfter()).append(\".\");", "originalCommit": "01e4fd88cab6fbb0c3ba4660cd42b8ad9c68fd2f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE4NzQwNw==", "url": "https://github.com/OpenNMS/opennms/pull/3180#discussion_r512187407", "bodyText": "OK, I'm now just marking the service unavailable if either of them are null prior to attempting to use them. I assume that's sensible?", "author": "dschlenk", "createdAt": "2020-10-26T18:40:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE3NjgwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE5MDIyMQ==", "url": "https://github.com/OpenNMS/opennms/pull/3180#discussion_r512190221", "bodyText": "yeah, that seems fine to me.", "author": "cgorantla", "createdAt": "2020-10-26T18:45:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE3NjgwMw=="}], "type": "inlineReview"}, {"oid": "2d9c0b456414b6d8c21ae1fdaf913d9ba02762c5", "url": "https://github.com/OpenNMS/opennms/commit/2d9c0b456414b6d8c21ae1fdaf913d9ba02762c5", "message": "actually populate issuer / subject; make unavailable if notBefore and/or\nnotAfter are null", "committedDate": "2020-10-26T18:38:57Z", "type": "commit"}]}