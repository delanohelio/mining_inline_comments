{"pr_number": 3006, "pr_title": "NMS-12679: Update database and send events only on changes", "pr_createdAt": "2020-05-12T18:32:26Z", "pr_url": "https://github.com/OpenNMS/opennms/pull/3006", "timeline": [{"oid": "1331c67c6afb1b5154c9f14deb7078573749fd17", "url": "https://github.com/OpenNMS/opennms/commit/1331c67c6afb1b5154c9f14deb7078573749fd17", "message": "NMS-12679: Update database and send events only on changes", "committedDate": "2020-05-12T18:29:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgzNzM0OA==", "url": "https://github.com/OpenNMS/opennms/pull/3006#discussion_r426837348", "bodyText": "Should we update if the reason changes?", "author": "fooker", "createdAt": "2020-05-18T19:08:40Z", "path": "features/remotepollerng/daemon/src/main/java/org/opennms/netmgt/remotepollerng/RemotePollerd.java", "diffHunk": "@@ -261,12 +261,22 @@ public LocationAwarePollerClient getLocationAwarePollerClient() {\n     protected void reportResult(final String locationName, final RemotePolledService polledService, final PollStatus pollResult) {\n         final OnmsMonitoringLocation location = this.monitoringLocationDao.get(locationName);\n \n-        final OnmsLocationSpecificStatus status = new OnmsLocationSpecificStatus();\n-        status.setLocation(location);\n-        status.setMonitoredService(polledService.getMonSvc());\n-        status.setPollResult(pollResult);\n+        final OnmsLocationSpecificStatus oldLocationSpecificStatus = this.locationSpecificStatusDao.getMostRecentStatusChange(location, polledService.getMonSvc());\n \n-        this.locationSpecificStatusDao.saveStatusChange(status);\n+        if (oldLocationSpecificStatus == null || oldLocationSpecificStatus.getPollResult().getStatusCode() != pollResult.getStatusCode()) {", "originalCommit": "1331c67c6afb1b5154c9f14deb7078573749fd17", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA1OTI2NQ==", "url": "https://github.com/OpenNMS/opennms/pull/3006#discussion_r427059265", "bodyText": "done.", "author": "christianpape", "createdAt": "2020-05-19T06:30:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgzNzM0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgzODA1MQ==", "url": "https://github.com/OpenNMS/opennms/pull/3006#discussion_r426838051", "bodyText": "The whole select/update cycle should run in a single transaction", "author": "fooker", "createdAt": "2020-05-18T19:10:05Z", "path": "features/remotepollerng/daemon/src/main/java/org/opennms/netmgt/remotepollerng/RemotePollerd.java", "diffHunk": "@@ -261,12 +261,22 @@ public LocationAwarePollerClient getLocationAwarePollerClient() {\n     protected void reportResult(final String locationName, final RemotePolledService polledService, final PollStatus pollResult) {\n         final OnmsMonitoringLocation location = this.monitoringLocationDao.get(locationName);\n \n-        final OnmsLocationSpecificStatus status = new OnmsLocationSpecificStatus();\n-        status.setLocation(location);\n-        status.setMonitoredService(polledService.getMonSvc());\n-        status.setPollResult(pollResult);\n+        final OnmsLocationSpecificStatus oldLocationSpecificStatus = this.locationSpecificStatusDao.getMostRecentStatusChange(location, polledService.getMonSvc());", "originalCommit": "1331c67c6afb1b5154c9f14deb7078573749fd17", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA1OTM0Mw==", "url": "https://github.com/OpenNMS/opennms/pull/3006#discussion_r427059343", "bodyText": "done.", "author": "christianpape", "createdAt": "2020-05-19T06:30:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgzODA1MQ=="}], "type": "inlineReview"}, {"oid": "ef4097aa60a8455ae1698c8a66198aa005a43f7f", "url": "https://github.com/OpenNMS/opennms/commit/ef4097aa60a8455ae1698c8a66198aa005a43f7f", "message": "NMS-12679: Review changes", "committedDate": "2020-05-19T06:30:32Z", "type": "commit"}]}