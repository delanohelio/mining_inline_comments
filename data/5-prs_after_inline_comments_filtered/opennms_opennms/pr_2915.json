{"pr_number": 2915, "pr_title": "NMS-12580: Improve NodeInfoCache handling", "pr_createdAt": "2020-03-11T21:19:15Z", "pr_url": "https://github.com/OpenNMS/opennms/pull/2915", "timeline": [{"oid": "f37b239d843abcd6bcc0106a30f5fb39b3bee846", "url": "https://github.com/OpenNMS/opennms/commit/f37b239d843abcd6bcc0106a30f5fb39b3bee846", "message": "NMS-12580: Modify the NodeInfoCache to be keyed by nodeId\n\nAlso try to check the presence of exporter/src/dest addresses\nfrom the InterfacetoNodeCache before querying NodeInfoCache.", "committedDate": "2020-03-11T20:29:30Z", "type": "commit"}, {"oid": "76400c54cc3fa9005bb3dbfc13417f76dcb543b6", "url": "https://github.com/OpenNMS/opennms/commit/76400c54cc3fa9005bb3dbfc13417f76dcb543b6", "message": "NMS-12580: Modify nodeCache settings", "committedDate": "2020-03-11T20:50:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM0NzY0MA==", "url": "https://github.com/OpenNMS/opennms/pull/2915#discussion_r391347640", "bodyText": "We need to keep this logic. We can perform the check before the interfaceToNodeCache lookup, and store the results in a separate cache (keyed by contextKey).", "author": "j-white", "createdAt": "2020-03-12T00:46:38Z", "path": "features/flows/elastic/src/main/java/org/opennms/netmgt/flows/elastic/DocumentEnricher.java", "diffHunk": "@@ -150,40 +148,24 @@ private static boolean isPrivateAddress(String ipAddress) {\n         return inetAddress.isLoopbackAddress() || inetAddress.isLinkLocalAddress() || inetAddress.isSiteLocalAddress();\n     }\n \n-    private Optional<NodeDocument> getNodeInfoFromCache(final String location, final String ipAddress, final ContextKey contextKey, final String value) {\n-        final NodeInfoKey key = new NodeInfoKey(location, ipAddress, contextKey, value);\n-        try {\n-            return nodeInfoCache.get(key);\n-        } catch (ExecutionException e) {\n-            LOG.error(\"Error while retrieving NodeDocument from NodeInfoCache: {}.\", e.getMessage(), e);\n-            throw new RuntimeException(e);\n+    private Optional<NodeDocument> getNodeInfoFromCache(final String location, final String ipAddress) {\n+        final Optional<Integer> nodeId = interfaceToNodeCache.getFirstNodeId(location, InetAddressUtils.addr(ipAddress));\n+        if(nodeId.isPresent()) {\n+            try {\n+                return nodeInfoCache.get(nodeId.get());\n+            } catch (ExecutionException e) {\n+                LOG.error(\"Error while retrieving NodeDocument from NodeInfoCache: {}.\", e.getMessage(), e);\n+                throw new RuntimeException(e);\n+            }\n         }\n+        return Optional.empty();\n     }\n \n-    private Optional<NodeDocument> getNodeInfo(final String location, final String ipAddress, final ContextKey contextKey, final String value) {\n-        return getNodeInfo(location, InetAddressUtils.addr(ipAddress), contextKey, value);\n-    }\n \n-    private Optional<NodeDocument> getNodeInfo(final String location, final InetAddress ipAddress, final ContextKey contextKey, final String value) {\n+    private Optional<NodeDocument> getNodeInfo(Integer nodeId) {\n         OnmsNode onmsNode = null;\n-\n-        if (contextKey != null && !Strings.isNullOrEmpty(value)) {", "originalCommit": "d1948cd49cd22742a1d4182be36822cb95395b13", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "620df1354a0ce717a5623bbdfc94e412b237d864", "url": "https://github.com/OpenNMS/opennms/commit/620df1354a0ce717a5623bbdfc94e412b237d864", "message": "NMS-12580: Add cache for metadata context", "committedDate": "2020-03-12T22:10:57Z", "type": "commit"}, {"oid": "620df1354a0ce717a5623bbdfc94e412b237d864", "url": "https://github.com/OpenNMS/opennms/commit/620df1354a0ce717a5623bbdfc94e412b237d864", "message": "NMS-12580: Add cache for metadata context", "committedDate": "2020-03-12T22:10:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk4ODg2OA==", "url": "https://github.com/OpenNMS/opennms/pull/2915#discussion_r391988868", "bodyText": "Let's only perform this if contextKey != null && !Strings.isNullOrEmpty(value) and remove that check from the cache loader (i.e. getNodeInfoFromMetadataContext)", "author": "j-white", "createdAt": "2020-03-13T01:44:49Z", "path": "features/flows/elastic/src/main/java/org/opennms/netmgt/flows/elastic/DocumentEnricher.java", "diffHunk": "@@ -151,68 +163,40 @@ private static boolean isPrivateAddress(String ipAddress) {\n     }\n \n     private Optional<NodeDocument> getNodeInfoFromCache(final String location, final String ipAddress, final ContextKey contextKey, final String value) {\n-        final NodeInfoKey key = new NodeInfoKey(location, ipAddress, contextKey, value);\n+\n+        Optional<NodeDocument> nodeDocument;\n+        final NodeMetadataKey metadataKey = new NodeMetadataKey(contextKey, value);", "originalCommit": "620df1354a0ce717a5623bbdfc94e412b237d864", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk4OTA0Ng==", "url": "https://github.com/OpenNMS/opennms/pull/2915#discussion_r391989046", "bodyText": "Would be nice to time this with the nodeLoadTimer too.", "author": "j-white", "createdAt": "2020-03-13T01:45:39Z", "path": "features/flows/elastic/src/main/java/org/opennms/netmgt/flows/elastic/DocumentEnricher.java", "diffHunk": "@@ -221,19 +205,58 @@ private NodeInfoKey(final String location, final String ipAddress, final Context\n         public boolean equals(Object o) {\n             if (this == o) return true;\n             if (o == null || getClass() != o.getClass()) return false;\n-            final NodeInfoKey that = (NodeInfoKey) o;\n-            return Objects.equals(location, that.location) &&\n-                    Objects.equals(ipAddress, that.ipAddress) &&\n-                    Objects.equals(contextKey, that.contextKey) &&\n+            final NodeMetadataKey that = (NodeMetadataKey) o;\n+            return Objects.equals(contextKey, that.contextKey) &&\n                     Objects.equals(value, that.value);\n         }\n \n         @Override\n         public int hashCode() {\n-            return Objects.hash(location, ipAddress, contextKey, value);\n+            return Objects.hash(contextKey, value);\n         }\n     }\n \n+    private Optional<NodeDocument> getNodeInfoFromMetadataContext(ContextKey contextKey, String value) {\n+        OnmsNode onmsNode = null;\n+        if (contextKey != null && !Strings.isNullOrEmpty(value)) {\n+            final List<OnmsNode> nodes = nodeDao.findNodeWithMetaData(contextKey.getContext(), contextKey.getKey(), value);", "originalCommit": "620df1354a0ce717a5623bbdfc94e412b237d864", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk4OTM4MQ==", "url": "https://github.com/OpenNMS/opennms/pull/2915#discussion_r391989381", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            onmsNode = nodes.get(0);\n          \n          \n            \n                            return mapOnmsNodeToNodeDocument(nodes.get(0));\n          \n      \n    \n    \n  \n\nthen can remove onmsNode local variable and other if statement bellow.", "author": "j-white", "createdAt": "2020-03-13T01:47:00Z", "path": "features/flows/elastic/src/main/java/org/opennms/netmgt/flows/elastic/DocumentEnricher.java", "diffHunk": "@@ -221,19 +205,58 @@ private NodeInfoKey(final String location, final String ipAddress, final Context\n         public boolean equals(Object o) {\n             if (this == o) return true;\n             if (o == null || getClass() != o.getClass()) return false;\n-            final NodeInfoKey that = (NodeInfoKey) o;\n-            return Objects.equals(location, that.location) &&\n-                    Objects.equals(ipAddress, that.ipAddress) &&\n-                    Objects.equals(contextKey, that.contextKey) &&\n+            final NodeMetadataKey that = (NodeMetadataKey) o;\n+            return Objects.equals(contextKey, that.contextKey) &&\n                     Objects.equals(value, that.value);\n         }\n \n         @Override\n         public int hashCode() {\n-            return Objects.hash(location, ipAddress, contextKey, value);\n+            return Objects.hash(contextKey, value);\n         }\n     }\n \n+    private Optional<NodeDocument> getNodeInfoFromMetadataContext(ContextKey contextKey, String value) {\n+        OnmsNode onmsNode = null;\n+        if (contextKey != null && !Strings.isNullOrEmpty(value)) {\n+            final List<OnmsNode> nodes = nodeDao.findNodeWithMetaData(contextKey.getContext(), contextKey.getKey(), value);\n+\n+            if (!nodes.isEmpty()) {\n+                onmsNode = nodes.get(0);", "originalCommit": "620df1354a0ce717a5623bbdfc94e412b237d864", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "fc1c44863c9d6641140a92e5ba32ca9f2cdd1379", "url": "https://github.com/OpenNMS/opennms/commit/fc1c44863c9d6641140a92e5ba32ca9f2cdd1379", "message": "NMS-12580: Update NodeMetadaCache", "committedDate": "2020-03-13T17:59:47Z", "type": "commit"}]}