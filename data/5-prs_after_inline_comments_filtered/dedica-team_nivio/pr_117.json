{"pr_number": 117, "pr_title": "WiP: Refactoring/frontend typescript", "pr_createdAt": "2020-03-31T08:46:58Z", "pr_url": "https://github.com/dedica-team/nivio/pull/117", "timeline": [{"oid": "e240c8480bc349d93bb0b0ada5fba0502efe2741", "url": "https://github.com/dedica-team/nivio/commit/e240c8480bc349d93bb0b0ada5fba0502efe2741", "message": "forgot to commit the whole time damn...\nTODO's left: working manual, working landscape with svg panel, implement good styling (right now almost everything is styled in one css, some styling is inline), tests, remove all jquery code", "committedDate": "2020-03-20T21:26:08Z", "type": "commit"}, {"oid": "0f57b2f6bc005067c030e371e2942d2835e5367d", "url": "https://github.com/dedica-team/nivio/commit/0f57b2f6bc005067c030e371e2942d2835e5367d", "message": "remove modal context, its not needed, tried to implement it in app like command but that isn't useful and because re-renders wont work like they should and not every component needs a modal", "committedDate": "2020-03-20T22:21:15Z", "type": "commit"}, {"oid": "8dad1e388de11823a2a973470ac28167a2381590", "url": "https://github.com/dedica-team/nivio/commit/8dad1e388de11823a2a973470ac28167a2381590", "message": "fix shouldCloseOnEsc / shouldCloseOnOverlay in generic modal", "committedDate": "2020-03-31T05:42:46Z", "type": "commit"}, {"oid": "0d93bf96b482371e4e20e96705fdacfbd8bc2ece", "url": "https://github.com/dedica-team/nivio/commit/0d93bf96b482371e4e20e96705fdacfbd8bc2ece", "message": "implement fully functional manual, modal is now scrollable (still need to rework all css but it will do for now)", "committedDate": "2020-03-31T08:46:05Z", "type": "commit"}, {"oid": "73fcbbb7ec24049b3209f8042d67506f21756c36", "url": "https://github.com/dedica-team/nivio/commit/73fcbbb7ec24049b3209f8042d67506f21756c36", "message": "fix manual styling, <pre> tag in manual doesn't work right now", "committedDate": "2020-03-31T09:50:15Z", "type": "commit"}, {"oid": "8d748a3113ef41f868e1cf416f770500e40c8408", "url": "https://github.com/dedica-team/nivio/commit/8d748a3113ef41f868e1cf416f770500e40c8408", "message": "implement landscape, rename ItemModalContent to LandscapeItem", "committedDate": "2020-03-31T11:48:12Z", "type": "commit"}, {"oid": "5910b470bede6729e2c9b32e11ed5ec81c2bdb69", "url": "https://github.com/dedica-team/nivio/commit/5910b470bede6729e2c9b32e11ed5ec81c2bdb69", "message": "fix import", "committedDate": "2020-03-31T11:52:33Z", "type": "commit"}, {"oid": "511b24404dfdc58fa319cd5823e27d9d03f6280c", "url": "https://github.com/dedica-team/nivio/commit/511b24404dfdc58fa319cd5823e27d9d03f6280c", "message": "format EVERYTHIIIIING", "committedDate": "2020-03-31T12:46:50Z", "type": "commit"}, {"oid": "1c6405683da2d3c818b782773415856243ded823", "url": "https://github.com/dedica-team/nivio/commit/1c6405683da2d3c818b782773415856243ded823", "message": "complete styling rework, removed all css files and build scss files, component based styling, all colors and fonts in variables for easy style rework/maybe light/dark theme later", "committedDate": "2020-04-02T13:01:52Z", "type": "commit"}, {"oid": "5e8be10187f2887e245cee126f97b4ef4e72df1e", "url": "https://github.com/dedica-team/nivio/commit/5e8be10187f2887e245cee126f97b4ef4e72df1e", "message": "add more color/font variables", "committedDate": "2020-04-02T13:07:54Z", "type": "commit"}, {"oid": "b0c2f7a5055cfa5bb7cdd19dc9fcf2ef4fe0d5ee", "url": "https://github.com/dedica-team/nivio/commit/b0c2f7a5055cfa5bb7cdd19dc9fcf2ef4fe0d5ee", "message": "landscape.jsx to .tsx, minor changes for landscapeItem", "committedDate": "2020-04-02T13:50:34Z", "type": "commit"}, {"oid": "e7e13e90caf679ca340b11a930a71acc633bbd33", "url": "https://github.com/dedica-team/nivio/commit/e7e13e90caf679ca340b11a930a71acc633bbd33", "message": "add a bit margin to command message", "committedDate": "2020-04-02T13:53:18Z", "type": "commit"}, {"oid": "9ce32b43ef8775369050ffce13028f2b47fbb146", "url": "https://github.com/dedica-team/nivio/commit/9ce32b43ef8775369050ffce13028f2b47fbb146", "message": "add icons", "committedDate": "2020-04-02T14:05:37Z", "type": "commit"}, {"oid": "1442acea873a577702e8d539a26ea1f8ca48de66", "url": "https://github.com/dedica-team/nivio/commit/1442acea873a577702e8d539a26ea1f8ca48de66", "message": "remove old react logo, remove images from manifest.json that arent available, margin in home content to fit content for our command console", "committedDate": "2020-04-02T14:13:46Z", "type": "commit"}, {"oid": "157c8c55bf26cbe4fe7e9572e149bf0b84f962e0", "url": "https://github.com/dedica-team/nivio/commit/157c8c55bf26cbe4fe7e9572e149bf0b84f962e0", "message": "change how command messages are handled, change landscape svg styling a bit, landscapes can now be reloaded, sim command implemented", "committedDate": "2020-04-02T16:03:59Z", "type": "commit"}, {"oid": "3df2214ef47b5212d4243365cce731ca0e3122c2", "url": "https://github.com/dedica-team/nivio/commit/3df2214ef47b5212d4243365cce731ca0e3122c2", "message": "remove unused console statement", "committedDate": "2020-04-02T16:28:45Z", "type": "commit"}, {"oid": "1103f3061c995ad8654d6772c48b3f7df11b9ea7", "url": "https://github.com/dedica-team/nivio/commit/1103f3061c995ad8654d6772c48b3f7df11b9ea7", "message": "make colors and font .scss to partial files so they wont get compiled to css", "committedDate": "2020-04-02T17:00:57Z", "type": "commit"}, {"oid": "ca20aedc57b2af4ddde6bf1d8c27c8ca27f94fca", "url": "https://github.com/dedica-team/nivio/commit/ca20aedc57b2af4ddde6bf1d8c27c8ca27f94fca", "message": "version bump", "committedDate": "2020-04-02T20:26:48Z", "type": "commit"}, {"oid": "8f6c96277e930695ac91b135240ee6d312b614bf", "url": "https://github.com/dedica-team/nivio/commit/8f6c96277e930695ac91b135240ee6d312b614bf", "message": "remove useEffect warning", "committedDate": "2020-04-02T21:19:40Z", "type": "commit"}, {"oid": "b70d28bf98d424346fef6b18f03b38cbcf649325", "url": "https://github.com/dedica-team/nivio/commit/b70d28bf98d424346fef6b18f03b38cbcf649325", "message": "cache to speed on png rendering", "committedDate": "2020-04-05T07:33:24Z", "type": "commit"}, {"oid": "4f26ae67f4307e55a321bc176bcb8cce687c2c26", "url": "https://github.com/dedica-team/nivio/commit/4f26ae67f4307e55a321bc176bcb8cce687c2c26", "message": "showing landscape preview on home screen", "committedDate": "2020-04-05T08:57:15Z", "type": "commit"}, {"oid": "ae8aa0d03315ead81ca679ddd2405b2a4ae9f8c2", "url": "https://github.com/dedica-team/nivio/commit/ae8aa0d03315ead81ca679ddd2405b2a4ae9f8c2", "message": "Merge remote-tracking branch 'origin/refactoring/frontend-typescript' into refactoring/frontend-typescript", "committedDate": "2020-04-05T08:57:30Z", "type": "commit"}, {"oid": "0a1e34ae10e3f4df5cf9c2227f53d404d1385864", "url": "https://github.com/dedica-team/nivio/commit/0a1e34ae10e3f4df5cf9c2227f53d404d1385864", "message": "material ui home dashboard poc", "committedDate": "2020-04-07T11:46:11Z", "type": "commit"}, {"oid": "1f7ea8edc71983be075201183fa32ce66f1c489f", "url": "https://github.com/dedica-team/nivio/commit/1f7ea8edc71983be075201183fa32ce66f1c489f", "message": "Merge pull request #120 from dedica-team/refactoring_material-ui\n\nmaterial ui home dashboard poc", "committedDate": "2020-04-08T15:52:54Z", "type": "commit"}, {"oid": "cc949759aeaa6dd4387d73a1aa17b180b00619d6", "url": "https://github.com/dedica-team/nivio/commit/cc949759aeaa6dd4387d73a1aa17b180b00619d6", "message": "[#119] lcars inspired gui", "committedDate": "2020-04-14T10:24:44Z", "type": "commit"}, {"oid": "a0fbf40a62d0f1d57546d88a5206158dd34d6c64", "url": "https://github.com/dedica-team/nivio/commit/a0fbf40a62d0f1d57546d88a5206158dd34d6c64", "message": "fix for item rendering ajax call (items without groups)", "committedDate": "2020-04-14T12:36:13Z", "type": "commit"}, {"oid": "4c308786512b419b7c9439b73ff68b237d57ecd6", "url": "https://github.com/dedica-team/nivio/commit/4c308786512b419b7c9439b73ff68b237d57ecd6", "message": "added comment", "committedDate": "2020-04-14T17:24:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM0NDcyNw==", "url": "https://github.com/dedica-team/nivio/pull/117#discussion_r408344727", "bodyText": "Nice!", "author": "Matthimatiker", "createdAt": "2020-04-14T18:23:58Z", "path": "src/main/java/de/bonndan/nivio/ProcessingFinishedEvent.java", "diffHunk": "@@ -0,0 +1,25 @@\n+package de.bonndan.nivio;\n+\n+import de.bonndan.nivio.model.Landscape;\n+import org.springframework.context.ApplicationEvent;\n+\n+/**\n+ * Event is fired after successful indexing of a landscape.\n+ *\n+ *\n+ *\n+ */\n+public class ProcessingFinishedEvent extends ApplicationEvent {\n+\n+\n+    private final Landscape landscape;\n+\n+    public ProcessingFinishedEvent(Object source, Landscape landscape) {\n+        super(source);\n+        this.landscape = landscape;\n+    }\n+\n+    public Landscape getLandscape() {\n+        return landscape;\n+    }\n+}", "originalCommit": "4c308786512b419b7c9439b73ff68b237d57ecd6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM0NTExMA==", "url": "https://github.com/dedica-team/nivio/pull/117#discussion_r408345110", "bodyText": "\ud83d\udc4d", "author": "Matthimatiker", "createdAt": "2020-04-14T18:24:36Z", "path": "src/main/java/de/bonndan/nivio/input/MagicLabelRelations.java", "diffHunk": "@@ -37,7 +40,7 @@ public void process(LandscapeDescription input, LandscapeImpl landscape) {\n \n         input.getItemDescriptions().all().forEach(item -> itemMatches.put(item, getMatches(item, landscape, blacklistSpecs)));\n \n-        //search for targets in the landscape\n+        //search for targets in the landscape, i.e. where name or identifier of an item matches the \"possible targets\"", "originalCommit": "4c308786512b419b7c9439b73ff68b237d57ecd6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM0NzA5NA==", "url": "https://github.com/dedica-team/nivio/pull/117#discussion_r408347094", "bodyText": "I would advise you not to use Date, if you have a choice.\nThe new, immutable date types like ZonedDateTime  or LocalDateTime are much better.", "author": "Matthimatiker", "createdAt": "2020-04-14T18:27:57Z", "path": "src/main/java/de/bonndan/nivio/input/ProcessLog.java", "diffHunk": "@@ -91,6 +91,15 @@ public String getError() {\n         return exception.getMessage();\n     }\n \n+    @JsonIgnore\n+    public Date getLastUpdate() {", "originalCommit": "4c308786512b419b7c9439b73ff68b237d57ecd6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM4MDIxMQ==", "url": "https://github.com/dedica-team/nivio/pull/117#discussion_r408380211", "bodyText": "Fixed in 348b9bf", "author": "bonndan", "createdAt": "2020-04-14T19:24:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM0NzA5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM0NzM2OQ==", "url": "https://github.com/dedica-team/nivio/pull/117#discussion_r408347369", "bodyText": "\ud83d\udc4d", "author": "Matthimatiker", "createdAt": "2020-04-14T18:28:23Z", "path": "src/main/java/de/bonndan/nivio/output/docs/DocsController.java", "diffHunk": "@@ -55,7 +55,9 @@ public DocsController(LandscapeRepository landscapeRepository, LocalServer local\n     /**\n      * Renders only a single item as html.\n      *\n+     *\n      */\n+    @Deprecated //item renderings should be generated within the GUI", "originalCommit": "4c308786512b419b7c9439b73ff68b237d57ecd6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM1MDgwNQ==", "url": "https://github.com/dedica-team/nivio/pull/117#discussion_r408350805", "bodyText": "Do you close the outputStream if an Exception occurrs during the flush? Better use try-with-resources for the AutoCloseable OutputStream :) (https://stackoverflow.com/questions/56112598/proper-way-to-close-an-autocloseable)", "author": "mfbieber", "createdAt": "2020-04-14T18:34:08Z", "path": "src/main/java/de/bonndan/nivio/output/map/PNGRenderCache.java", "diffHunk": "@@ -0,0 +1,110 @@\n+package de.bonndan.nivio.output.map;\n+\n+import com.mxgraph.model.mxCell;\n+import com.mxgraph.view.mxGraph;\n+import de.bonndan.nivio.ProcessingFinishedEvent;\n+import de.bonndan.nivio.model.Landscape;\n+import de.bonndan.nivio.model.LandscapeImpl;\n+import de.bonndan.nivio.output.RenderedArtifact;\n+import de.bonndan.nivio.output.jgraphx.JGraphXRenderer;\n+import de.bonndan.nivio.output.map.svg.MapStyleSheetFactory;\n+import de.bonndan.nivio.output.map.svg.SvgFactory;\n+import org.apache.batik.transcoder.Transcoder;\n+import org.apache.batik.transcoder.TranscoderException;\n+import org.apache.batik.transcoder.TranscoderInput;\n+import org.apache.batik.transcoder.TranscoderOutput;\n+import org.apache.batik.transcoder.image.PNGTranscoder;\n+import org.apache.commons.lang3.tuple.ImmutablePair;\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.context.ApplicationListener;\n+import org.springframework.stereotype.Service;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ * A service that caches expensive batik svg to png rendering.\n+ *\n+ */\n+@Service\n+public class PNGRenderCache implements ApplicationListener<ProcessingFinishedEvent> {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(PNGRenderCache.class);\n+\n+    private final Map<String, Pair<LandscapeImpl, byte[]>> renderings = new HashMap<>();\n+\n+    private final MapFactory<mxGraph, mxCell> mapFactory;\n+    private final MapStyleSheetFactory mapStyleSheetFactory;\n+\n+    public PNGRenderCache(MapFactory<mxGraph, mxCell> mapFactory, MapStyleSheetFactory mapStyleSheetFactory) {\n+        this.mapFactory = mapFactory;\n+        this.mapStyleSheetFactory = mapStyleSheetFactory;\n+    }\n+\n+    /**\n+     * Returns a png.\n+     *\n+     * @param landscape the landscape to render\n+     * @return the png as byte array, cached if available\n+     */\n+    public byte[] getPNG(LandscapeImpl landscape) {\n+\n+        Pair<LandscapeImpl, byte[]> landscapePair = renderings.get(landscape.getIdentifier());\n+        if (landscapePair == null || landscapePair.getLeft().getLog().getLastUpdate() != landscape.getLog().getLastUpdate()) {\n+            byte[] rendered = asByteArray(landscape);\n+            renderings.put(landscape.getIdentifier(), new ImmutablePair<>(landscape, rendered));\n+            return rendered;\n+        }\n+\n+        return landscapePair.getRight();\n+    }\n+\n+    /**\n+     * Returns an svg.\n+     *\n+     * @param landscape the landscape to render\n+     * @return the svg as string, uncached\n+     */\n+    public String getSVG(LandscapeImpl landscape) {\n+        JGraphXRenderer jGraphXRenderer = new JGraphXRenderer();\n+        RenderedArtifact<mxGraph, mxCell> render = jGraphXRenderer.render(landscape);\n+        mapFactory.applyArtifactValues(landscape, render);\n+\n+        SvgFactory svgFactory = new SvgFactory(landscape, mapStyleSheetFactory);\n+        return svgFactory.getXML();\n+    }\n+\n+    @Override\n+    public void onApplicationEvent(ProcessingFinishedEvent processingFinishedEvent) {\n+        Landscape landscape = processingFinishedEvent.getLandscape();\n+        if (landscape instanceof LandscapeImpl) {\n+            LOGGER.info(\"Generating PNG rendering of landscape {}\", landscape.getIdentifier());\n+            getPNG((LandscapeImpl) landscape);\n+        }\n+    }\n+\n+    private byte[] asByteArray(LandscapeImpl landscape) {\n+        TranscoderInput input_svg_image = new TranscoderInput(new ByteArrayInputStream(getSVG(landscape).getBytes()));\n+        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n+        TranscoderOutput transcoderOutput = new TranscoderOutput(outputStream);\n+        Transcoder transcoder = new PNGTranscoder();\n+        try {\n+            transcoder.transcode(input_svg_image, transcoderOutput);\n+        } catch (TranscoderException e) {\n+            throw new RuntimeException(\"Failed to create PNG\", e);\n+        }\n+        try {", "originalCommit": "4c308786512b419b7c9439b73ff68b237d57ecd6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM1NDkyNw==", "url": "https://github.com/dedica-team/nivio/pull/117#discussion_r408354927", "bodyText": "But, for ByteArrayOutputStream, close() and flush() do nothing (check out the implementation). This try-catch-block is not necessary. I wonder now, what the exception message was intended for?", "author": "mfbieber", "createdAt": "2020-04-14T18:41:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM1MDgwNQ=="}], "type": "inlineReview"}, {"oid": "348b9bf2ae3ec6c0acb374c8ccb3b31d188dc129", "url": "https://github.com/dedica-team/nivio/commit/348b9bf2ae3ec6c0acb374c8ccb3b31d188dc129", "message": "[#117] replaced Date, ProcessLog entries transmitted as objects", "committedDate": "2020-04-14T19:21:52Z", "type": "commit"}, {"oid": "0a12a64a1435d6762d1b3fdef0f45c846587ecfd", "url": "https://github.com/dedica-team/nivio/commit/0a12a64a1435d6762d1b3fdef0f45c846587ecfd", "message": "readme rework, prettierignore, clean up package.json, set node version to 12.16.2 (LTS Version)", "committedDate": "2020-04-15T12:46:19Z", "type": "commit"}, {"oid": "d52df796402462dfbd27c6d27d6966edb48f604b", "url": "https://github.com/dedica-team/nivio/commit/d52df796402462dfbd27c6d27d6966edb48f604b", "message": "npm run format", "committedDate": "2020-04-15T12:48:03Z", "type": "commit"}, {"oid": "789682e11a3fb199f42dff1e72de42c175524ccd", "url": "https://github.com/dedica-team/nivio/commit/789682e11a3fb199f42dff1e72de42c175524ccd", "message": "implement most recommendations", "committedDate": "2020-04-18T02:30:14Z", "type": "commit"}, {"oid": "86d0f4f166b5cfcfa49e3e4025bef484c517f685", "url": "https://github.com/dedica-team/nivio/commit/86d0f4f166b5cfcfa49e3e4025bef484c517f685", "message": "add basic render tests and some small button click tests", "committedDate": "2020-04-18T02:30:57Z", "type": "commit"}, {"oid": "ed79d873082fae26b4dac3fd040e88ff2360b73f", "url": "https://github.com/dedica-team/nivio/commit/ed79d873082fae26b4dac3fd040e88ff2360b73f", "message": "provide some descriptions to components", "committedDate": "2020-04-18T02:50:50Z", "type": "commit"}, {"oid": "a55dbd00fe2b1d02a7c2b78eb35c1a4c9d68206a", "url": "https://github.com/dedica-team/nivio/commit/a55dbd00fe2b1d02a7c2b78eb35c1a4c9d68206a", "message": "fix seed url contains authority component", "committedDate": "2020-04-18T03:56:38Z", "type": "commit"}, {"oid": "a66948ef2d19b98d93a801eb29096e73caf19bb2", "url": "https://github.com/dedica-team/nivio/commit/a66948ef2d19b98d93a801eb29096e73caf19bb2", "message": "[#89] global event log with rest api, experimental websocket", "committedDate": "2020-04-18T08:41:04Z", "type": "commit"}, {"oid": "25baa28830f542494433948c592e529298c7ccc7", "url": "https://github.com/dedica-team/nivio/commit/25baa28830f542494433948c592e529298c7ccc7", "message": "[#89] experimental ui for events", "committedDate": "2020-04-18T09:03:46Z", "type": "commit"}, {"oid": "d4d95fb3c5f2bebd26b2913e4af7a5e95544b87a", "url": "https://github.com/dedica-team/nivio/commit/d4d95fb3c5f2bebd26b2913e4af7a5e95544b87a", "message": "small gui fix", "committedDate": "2020-04-18T10:04:08Z", "type": "commit"}, {"oid": "09ea506d456ef116a1081e9f510112892afaeb1d", "url": "https://github.com/dedica-team/nivio/commit/09ea506d456ef116a1081e9f510112892afaeb1d", "message": "remove debugger, npm run format", "committedDate": "2020-04-18T13:39:04Z", "type": "commit"}]}