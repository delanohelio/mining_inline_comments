{"pr_number": 77, "pr_title": "76 diet", "pr_createdAt": "2020-01-08T19:58:25Z", "pr_url": "https://github.com/dedica-team/nivio/pull/77", "timeline": [{"oid": "06ddc85b6f477d572cdafd9e82e06f1e573d04fa", "url": "https://github.com/dedica-team/nivio/commit/06ddc85b6f477d572cdafd9e82e06f1e573d04fa", "message": "[#76] removed graphstream, jgrapht, sqlite from cqengine", "committedDate": "2020-01-08T17:42:18Z", "type": "commit"}, {"oid": "16aea1a3e241eb6b75463fea7acf2ca89d58f7e0", "url": "https://github.com/dedica-team/nivio/commit/16aea1a3e241eb6b75463fea7acf2ca89d58f7e0", "message": "bumping nivio version", "committedDate": "2020-01-08T17:43:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQzMjA1NA==", "url": "https://github.com/dedica-team/nivio/pull/77#discussion_r364432054", "bodyText": "Maybe you could choose a different name for your Color class... I don't know about best practice here, but I personally don't like using fully qualified names (java.awt.Color), if it can be avoided.", "author": "jpgoelz", "createdAt": "2020-01-08T20:37:57Z", "path": "src/main/java/de/bonndan/nivio/output/Color.java", "diffHunk": "@@ -38,10 +37,10 @@ public static String nameToRGB(String name, String defaultColor) {\n \n     public static String lighten(String color) {\n         try {\n-            java.awt.Color col = WebColors.getRGBColor(\"#\" + color).brighter();\n-            return Integer.toHexString(col.getRGB());\n+            java.awt.Color col = java.awt.Color.decode(color.startsWith(\"#\") ? color : \"#\" + color);", "originalCommit": "16aea1a3e241eb6b75463fea7acf2ca89d58f7e0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ0MTA0Nw==", "url": "https://github.com/dedica-team/nivio/pull/77#discussion_r364441047", "bodyText": "Afaik there is no way around fully qualified names when the class has the same name.", "author": "bonndan", "createdAt": "2020-01-08T21:01:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQzMjA1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ1NDY2OQ==", "url": "https://github.com/dedica-team/nivio/pull/77#discussion_r364454669", "bodyText": "That is correct. That's why I was asking if you'd change the name. I guess this could be a matter of taste.", "author": "jpgoelz", "createdAt": "2020-01-08T21:35:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQzMjA1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQzMzQzOA==", "url": "https://github.com/dedica-team/nivio/pull/77#discussion_r364433438", "bodyText": "You can also remove the imports of Map and HashMap.", "author": "jpgoelz", "createdAt": "2020-01-08T20:41:26Z", "path": "src/main/java/de/bonndan/nivio/output/docs/DocsController.java", "diffHunk": "@@ -35,35 +30,6 @@ public DocsController(LandscapeRepository landscapeRepository, IconService iconS\n         this.iconService = iconService;\n     }\n \n-    @RequestMapping(method = RequestMethod.GET, path = \"/{landscape}\")\n-    public ResponseEntity<String> docResource(@PathVariable(name = \"landscape\") final String landscapeIdentifier) {\n-\n-        LandscapeImpl landscape = landscapeRepository.findDistinctByIdentifier(landscapeIdentifier).orElseThrow(\n-                () -> new NotFoundException(\"Landscape \" + landscapeIdentifier + \" not found\")\n-        );\n-\n-        Map<String, Object> attributes = new HashMap<String, Object>();", "originalCommit": "16aea1a3e241eb6b75463fea7acf2ca89d58f7e0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "841155280c8927dc2005055f3219a47e98574e47", "url": "https://github.com/dedica-team/nivio/commit/841155280c8927dc2005055f3219a47e98574e47", "message": "cleanup", "committedDate": "2020-01-08T21:01:30Z", "type": "commit"}]}