{"pr_number": 2078, "pr_title": "Native image update", "pr_createdAt": "2020-06-22T16:14:12Z", "pr_url": "https://github.com/oracle/helidon/pull/2078", "timeline": [{"oid": "a68efb64ece2a244e9f07e03bdd0d0d5377d28aa", "url": "https://github.com/oracle/helidon/commit/a68efb64ece2a244e9f07e03bdd0d0d5377d28aa", "message": "Native image update\n* Remove use of AutomaticFeature (unsupported API)\n* Remove use of context impl (unsupported API)\n* Using a third-party classpath scanning tool\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>", "committedDate": "2020-06-22T16:01:56Z", "type": "commit"}, {"oid": "060ae39aaed4936af2adb1cdcea917aacdc53c7e", "url": "https://github.com/oracle/helidon/commit/060ae39aaed4936af2adb1cdcea917aacdc53c7e", "message": "Copyright fix.\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>", "committedDate": "2020-06-22T16:29:52Z", "type": "commit"}, {"oid": "4e0f9d897d506288e9418e66fa1d73f8a35a3531", "url": "https://github.com/oracle/helidon/commit/4e0f9d897d506288e9418e66fa1d73f8a35a3531", "message": "Spotbugs fix\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>", "committedDate": "2020-06-22T19:00:36Z", "type": "commit"}, {"oid": "3453b367d48e34563fcaa56207f48f854e5cd7f1", "url": "https://github.com/oracle/helidon/commit/3453b367d48e34563fcaa56207f48f854e5cd7f1", "message": "Using classgraph snapshot.\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>", "committedDate": "2020-06-23T09:48:45Z", "type": "commit"}, {"oid": "8c41efd6af921edde83a1a4aef5256de592938ee", "url": "https://github.com/oracle/helidon/commit/8c41efd6af921edde83a1a4aef5256de592938ee", "message": "Using classgraph features to load classes and methods.\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>", "committedDate": "2020-06-24T10:52:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ0MjUyMg==", "url": "https://github.com/oracle/helidon/pull/2078#discussion_r445442522", "bodyText": "if (TRACE_PARSING) is already inside of  traceParsing", "author": "danielkec", "createdAt": "2020-06-25T09:52:59Z", "path": "integrations/graal/native-image-extension/src/main/java/io/helidon/integrations/graal/nativeimage/extension/HelidonReflectionFeature.java", "diffHunk": "@@ -120,83 +128,135 @@ public void beforeCompilation(BeforeCompilationAccess access) {\n         MpConfigProviderResolver.buildTimeEnd();\n     }\n \n-    @SuppressWarnings(\"unchecked\")\n-    private void addAnnotatedWithReflected(BeforeAnalysisContext context) {\n-        FeatureImpl.BeforeAnalysisAccessImpl access = context.access();\n+    private List<Class<?>> findSubclasses(BeforeAnalysisContext context, String className) {\n+        ScanResult scan = context.scan();\n+        ClassInfo superclass = scan.getClassInfo(className);\n+\n+        if (null == superclass) {\n+            traceParsing(() -> \"Class \" + className + \" is not on classpath, cannot find subclasses.\");\n+            return List.of();\n+        }\n+\n+        List<Class<?>> subclasses = scan\n+                .getSubclasses(className)\n+                .stream()\n+                .map(classInfo -> context.access().findClassByName(classInfo.getName()))\n+                .filter(Objects::nonNull)\n+                .collect(Collectors.toList());\n \n+        if (superclass.isInterface()) {\n+            List<Class<?>> implementations = scan\n+                    .getClassesImplementing(className)\n+                    .stream()\n+                    .map(classInfo -> context.access().findClassByName(classInfo.getName()))\n+                    .filter(Objects::nonNull)\n+                    .collect(Collectors.toList());\n+\n+            List<Class<?>> result = new ArrayList<>(subclasses);\n+            result.addAll(implementations);\n+            return result;\n+        } else {\n+            return subclasses;\n+        }\n+\n+    }\n+\n+    private List<Class<?>> findAnnotated(BeforeAnalysisContext context, String annotation) {\n+        return context.scan()\n+                .getClassesWithAnnotation(annotation)\n+                .stream()\n+                .map(classInfo -> {\n+                    Class<?> clazz = null;\n+                    try {\n+                        clazz = classInfo.loadClass();\n+                    } catch (Exception e) {\n+                        traceParsing(() -> \"Class \" + classInfo.getName() + \" annotated by \" + annotation + \" cannot be loaded\");\n+                        if (TRACE_PARSING) {\n+                            traceParsing(() -> \"\\tException class: \" + e.getClass().getName() + \", message: \" + e.getMessage());\n+                        }", "originalCommit": "8c41efd6af921edde83a1a4aef5256de592938ee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTY3OTg4Nw==", "url": "https://github.com/oracle/helidon/pull/2078#discussion_r445679887", "bodyText": "changed from Exception.printStackTrace, forgot to clear up. Will do.", "author": "tomas-langer", "createdAt": "2020-06-25T16:19:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ0MjUyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjY2ODI1MA==", "url": "https://github.com/oracle/helidon/pull/2078#discussion_r446668250", "bodyText": "Fixed", "author": "tomas-langer", "createdAt": "2020-06-28T16:05:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ0MjUyMg=="}], "type": "inlineReview"}, {"oid": "2e65370ce30a1b4318b19686db248eee2b7cdc0b", "url": "https://github.com/oracle/helidon/commit/2e65370ce30a1b4318b19686db248eee2b7cdc0b", "message": "Small checkstyle fix\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>", "committedDate": "2020-06-25T16:23:07Z", "type": "commit"}]}