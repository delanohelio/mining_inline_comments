{"pr_number": 1287, "pr_title": "MP Reactive Messaging impl", "pr_createdAt": "2020-01-10T13:54:13Z", "pr_url": "https://github.com/oracle/helidon/pull/1287", "timeline": [{"oid": "0b6539117028eeb267de1386560c688b4780e4de", "url": "https://github.com/oracle/helidon/commit/0b6539117028eeb267de1386560c688b4780e4de", "message": "MP Reactive Messaging impl\n\nSigned-off-by: Daniel Kec <daniel.kec@oracle.com>\n\nClean-up ifs\n\nSigned-off-by: Daniel Kec <daniel.kec@oracle.com>", "committedDate": "2020-01-14T09:17:48Z", "type": "forcePushed"}, {"oid": "ec9f59cbd4f68ed2e8d098a0b1536666b4f5de21", "url": "https://github.com/oracle/helidon/commit/ec9f59cbd4f68ed2e8d098a0b1536666b4f5de21", "message": "MP Reactive Messaging impl\n\nSigned-off-by: Daniel Kec <daniel.kec@oracle.com>", "committedDate": "2020-01-14T15:59:44Z", "type": "forcePushed"}, {"oid": "840cbc59620e8c652e111bf0469eee9dbd9a459e", "url": "https://github.com/oracle/helidon/commit/840cbc59620e8c652e111bf0469eee9dbd9a459e", "message": "Arquillian manually managed deploy fix after native compatibility cdi changes\n\nSigned-off-by: Daniel Kec <daniel.kec@oracle.com>", "committedDate": "2020-01-16T14:30:43Z", "type": "forcePushed"}, {"oid": "77d8e98e777b927e1ad801c10aec4e2c7bfff6e9", "url": "https://github.com/oracle/helidon/commit/77d8e98e777b927e1ad801c10aec4e2c7bfff6e9", "message": "Arquillian manually managed deploy fix after native compatibility cdi changes\n\nSigned-off-by: Daniel Kec <daniel.kec@oracle.com>", "committedDate": "2020-01-16T21:54:55Z", "type": "forcePushed"}, {"oid": "1046968fd5866d9ceb88f34027ab6953bef83da2", "url": "https://github.com/oracle/helidon/commit/1046968fd5866d9ceb88f34027ab6953bef83da2", "message": "Clean up\n\nSigned-off-by: Daniel Kec <daniel.kec@oracle.com>", "committedDate": "2020-01-21T09:52:58Z", "type": "forcePushed"}, {"oid": "3a4c10354e54688869b241f0dbd675489c8f20d7", "url": "https://github.com/oracle/helidon/commit/3a4c10354e54688869b241f0dbd675489c8f20d7", "message": "Generic vararg warning cleanup\n\nSigned-off-by: Daniel Kec <daniel.kec@oracle.com>", "committedDate": "2020-02-25T11:06:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTExODE1Ng==", "url": "https://github.com/oracle/helidon/pull/1287#discussion_r385118156", "bodyText": "@tomas-langer Error collection for signature resolving and validation", "author": "danielkec", "createdAt": "2020-02-27T13:16:00Z", "path": "microprofile/messaging/src/main/java/io/helidon/microprofile/messaging/MessagingCdiExtension.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.helidon.microprofile.messaging;\n+\n+import java.util.logging.Logger;\n+\n+import javax.annotation.Priority;\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.context.Initialized;\n+import javax.enterprise.event.Observes;\n+import javax.enterprise.inject.spi.AfterDeploymentValidation;\n+import javax.enterprise.inject.spi.BeanManager;\n+import javax.enterprise.inject.spi.DeploymentException;\n+import javax.enterprise.inject.spi.Extension;\n+import javax.enterprise.inject.spi.ProcessAnnotatedType;\n+import javax.enterprise.inject.spi.ProcessManagedBean;\n+import javax.enterprise.inject.spi.WithAnnotations;\n+\n+import io.helidon.common.Errors;\n+import io.helidon.microprofile.messaging.channel.ChannelRouter;\n+\n+import org.eclipse.microprofile.reactive.messaging.Incoming;\n+import org.eclipse.microprofile.reactive.messaging.Outgoing;\n+import org.eclipse.microprofile.reactive.messaging.spi.Connector;\n+\n+import static javax.interceptor.Interceptor.Priority.PLATFORM_AFTER;\n+\n+/**\n+ * MicroProfile Reactive Messaging CDI Extension.\n+ */\n+public class MessagingCdiExtension implements Extension {\n+    private static final Logger LOGGER = Logger.getLogger(MessagingCdiExtension.class.getName());\n+\n+    private ChannelRouter channelRouter = new ChannelRouter();\n+\n+    private void registerChannelMethods(\n+            @Observes\n+            @WithAnnotations({Incoming.class, Outgoing.class}) ProcessAnnotatedType<?> pat) {\n+        // Lookup channel methods\n+        pat.getAnnotatedType().getMethods().forEach(m -> channelRouter.registerMethod(m));\n+    }\n+\n+    private void onProcessBean(@Observes ProcessManagedBean<?> event) {\n+        // Lookup connectors\n+        if (null != event.getAnnotatedBeanClass().getAnnotation(Connector.class)) {\n+            channelRouter.registerConnectorFactory(event.getBean());\n+        }\n+        // Gather bean references\n+        channelRouter.registerBeanReference(event.getBean());\n+    }\n+\n+    private void deploymentValidation(@Observes AfterDeploymentValidation event) {\n+        Errors.Collector errors = channelRouter.getErrors();\n+        boolean hasFatal = errors.hasFatal();\n+        Errors errorMessages = errors.collect();\n+        if (hasFatal) {\n+            throw new DeploymentException(errorMessages.toString());\n+        } else {\n+            errorMessages.log(LOGGER);\n+        }", "originalCommit": "106c17385b9887161d23570377027c38a91fbb30", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEyMTMyNg==", "url": "https://github.com/oracle/helidon/pull/1287#discussion_r385121326", "bodyText": "@tomas-langer Tear down is double checked to avoid cross test pollution related to #1446", "author": "danielkec", "createdAt": "2020-02-27T13:22:09Z", "path": "microprofile/messaging/src/test/java/io/helidon/microprofile/messaging/AbstractCDITest.java", "diffHunk": "@@ -0,0 +1,195 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.helidon.microprofile.messaging;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.lang.annotation.Annotation;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.concurrent.TimeUnit;\n+import java.util.function.Consumer;\n+import java.util.logging.LogManager;\n+import java.util.stream.Collectors;\n+\n+import javax.enterprise.inject.se.SeContainer;\n+import javax.enterprise.inject.se.SeContainerInitializer;\n+import javax.enterprise.inject.spi.CDI;\n+\n+import io.helidon.config.Config;\n+import io.helidon.config.ConfigSources;\n+import io.helidon.microprofile.server.Server;\n+import io.helidon.microprofile.server.ServerCdiExtension;\n+\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.junit.jupiter.api.Assertions.fail;\n+\n+import org.eclipse.microprofile.config.spi.ConfigProviderResolver;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+\n+public abstract class AbstractCDITest {\n+\n+    static Server singleServerReference;\n+\n+    static {\n+        try (InputStream is = AbstractCDITest.class.getResourceAsStream(\"/logging.properties\")) {\n+            LogManager.getLogManager().readConfiguration(is);\n+        } catch (IOException e) {\n+            fail(e);\n+        }\n+    }\n+\n+    protected SeContainer cdiContainer;\n+\n+    protected Map<String, String> cdiConfig() {\n+        return Collections.emptyMap();\n+    }\n+\n+    protected void cdiBeanClasses(Set<Class<?>> classes) {\n+        //noop\n+    }\n+\n+    @BeforeEach\n+    public void setUp() {\n+        Set<Class<?>> classes = new HashSet<>();\n+        cdiBeanClasses(classes);\n+        Map<String, String> p = new HashMap<>(cdiConfig());\n+        cdiContainer = startCdiContainer(p, classes);\n+    }\n+\n+    @AfterEach\n+    public void tearDown() {\n+        try {\n+            singleServerReference.stop();\n+            cdiContainer.close();\n+        } catch (Throwable t) {\n+            //emergency cleanup see #1446\n+            stopCdiContainer();\n+        }\n+    }", "originalCommit": "106c17385b9887161d23570377027c38a91fbb30", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "abdb9c81aef9ab43027263edd08ec1dbbaff5491", "url": "https://github.com/oracle/helidon/commit/abdb9c81aef9ab43027263edd08ec1dbbaff5491", "message": "MP Reactive Messaging impl\n\nSigned-off-by: Daniel Kec <daniel.kec@oracle.com>", "committedDate": "2020-03-03T20:11:37Z", "type": "commit"}, {"oid": "253efc1299c33949855a00e44caf5eea79fc46d1", "url": "https://github.com/oracle/helidon/commit/253efc1299c33949855a00e44caf5eea79fc46d1", "message": "Arquillian manually managed deploy fix after native compatibility cdi changes\n\nSigned-off-by: Daniel Kec <daniel.kec@oracle.com>", "committedDate": "2020-03-03T20:11:37Z", "type": "commit"}, {"oid": "5186a41aea30739f2050c39fbb3e383d8bd84aa5", "url": "https://github.com/oracle/helidon/commit/5186a41aea30739f2050c39fbb3e383d8bd84aa5", "message": "Routing assembly at proper time\n\nSigned-off-by: Daniel Kec <daniel.kec@oracle.com>", "committedDate": "2020-03-03T20:11:37Z", "type": "commit"}, {"oid": "5a2e6485c0cf0409d9a5a9112b88c4531e4e9dc8", "url": "https://github.com/oracle/helidon/commit/5a2e6485c0cf0409d9a5a9112b88c4531e4e9dc8", "message": "Generic vararg warning cleanup\n\nSigned-off-by: Daniel Kec <daniel.kec@oracle.com>", "committedDate": "2020-03-03T20:11:37Z", "type": "commit"}, {"oid": "4e441decd854a4131c20ec1472769f911521e456", "url": "https://github.com/oracle/helidon/commit/4e441decd854a4131c20ec1472769f911521e456", "message": "Fix test container tear-down\n\nSigned-off-by: Daniel Kec <daniel.kec@oracle.com>", "committedDate": "2020-03-03T20:11:37Z", "type": "commit"}, {"oid": "a62998cfd5a6f5afb8e41611ab81c4b9cd089aa4", "url": "https://github.com/oracle/helidon/commit/a62998cfd5a6f5afb8e41611ab81c4b9cd089aa4", "message": "Error collecting\n\nSigned-off-by: Daniel Kec <daniel.kec@oracle.com>", "committedDate": "2020-03-03T20:12:04Z", "type": "commit"}, {"oid": "405ed38468078a561b10e0bf980fdcb026d87b3f", "url": "https://github.com/oracle/helidon/commit/405ed38468078a561b10e0bf980fdcb026d87b3f", "message": "Flatten packages\n\nSigned-off-by: Daniel Kec <daniel.kec@oracle.com>", "committedDate": "2020-03-03T21:08:32Z", "type": "commit"}, {"oid": "a72990b979f5cf41eb7d7fe7b10626e8f19b7a6d", "url": "https://github.com/oracle/helidon/commit/a72990b979f5cf41eb7d7fe7b10626e8f19b7a6d", "message": "Fix Arquillian tests pollution\n\nSigned-off-by: Daniel Kec <daniel.kec@oracle.com>", "committedDate": "2020-03-03T21:16:50Z", "type": "forcePushed"}, {"oid": "aa2e74e5f84abf11ac148a88bf98c379f8a1d232", "url": "https://github.com/oracle/helidon/commit/aa2e74e5f84abf11ac148a88bf98c379f8a1d232", "message": "Fix Arquillian tests pollution\n\nSigned-off-by: Daniel Kec <daniel.kec@oracle.com>", "committedDate": "2020-03-03T21:22:15Z", "type": "forcePushed"}, {"oid": "aa2e74e5f84abf11ac148a88bf98c379f8a1d232", "url": "https://github.com/oracle/helidon/commit/aa2e74e5f84abf11ac148a88bf98c379f8a1d232", "message": "Fix Arquillian tests pollution\n\nSigned-off-by: Daniel Kec <daniel.kec@oracle.com>", "committedDate": "2020-03-03T21:22:15Z", "type": "commit"}, {"oid": "dccd26b45401087b85a69529d6d7d6136f16b3ed", "url": "https://github.com/oracle/helidon/commit/dccd26b45401087b85a69529d6d7d6136f16b3ed", "message": "Register feature\n\nSigned-off-by: Daniel Kec <daniel.kec@oracle.com>", "committedDate": "2020-03-03T21:29:58Z", "type": "commit"}, {"oid": "ecd1e07e34f340cf942872f56b00e42a9fcbf2a9", "url": "https://github.com/oracle/helidon/commit/ecd1e07e34f340cf942872f56b00e42a9fcbf2a9", "message": "Rename AbstractMethod\n\nSigned-off-by: Daniel Kec <daniel.kec@oracle.com>", "committedDate": "2020-03-03T21:36:12Z", "type": "commit"}, {"oid": "852c38cfbd18158d3fc1c51cccb0f216972b5752", "url": "https://github.com/oracle/helidon/commit/852c38cfbd18158d3fc1c51cccb0f216972b5752", "message": "Clean up raw generics\n\nSigned-off-by: Daniel Kec <daniel.kec@oracle.com>", "committedDate": "2020-03-03T22:19:12Z", "type": "commit"}, {"oid": "c6c4c774075796664a28e3ffe5338164be6a7146", "url": "https://github.com/oracle/helidon/commit/c6c4c774075796664a28e3ffe5338164be6a7146", "message": "Config merging cleanup\n\nSigned-off-by: Daniel Kec <daniel.kec@oracle.com>", "committedDate": "2020-03-04T08:06:10Z", "type": "commit"}, {"oid": "ceb722f3c6a10d457e198f296fbe67f66d2dcda3", "url": "https://github.com/oracle/helidon/commit/ceb722f3c6a10d457e198f296fbe67f66d2dcda3", "message": "Final fields cleanup\n\nSigned-off-by: Daniel Kec <daniel.kec@oracle.com>", "committedDate": "2020-03-04T08:24:06Z", "type": "commit"}, {"oid": "00d8a4e29610a8246c3053d8a9277f8d491aa2d4", "url": "https://github.com/oracle/helidon/commit/00d8a4e29610a8246c3053d8a9277f8d491aa2d4", "message": "Proper acknowledgement\n\nSigned-off-by: Daniel Kec <daniel.kec@oracle.com>", "committedDate": "2020-03-04T08:43:08Z", "type": "commit"}, {"oid": "188336060977f551aa9e435400461b19809f0fc6", "url": "https://github.com/oracle/helidon/commit/188336060977f551aa9e435400461b19809f0fc6", "message": "Param assigment\n\nSigned-off-by: Daniel Kec <daniel.kec@oracle.com>", "committedDate": "2020-03-04T08:49:47Z", "type": "commit"}, {"oid": "3e8aefe9988d8e1f39ae1158dce2f494652ca357", "url": "https://github.com/oracle/helidon/commit/3e8aefe9988d8e1f39ae1158dce2f494652ca357", "message": "Add module-info\n\nSigned-off-by: Daniel Kec <daniel.kec@oracle.com>", "committedDate": "2020-03-04T09:06:21Z", "type": "commit"}, {"oid": "2dbfb84912b7ba594cc0d92fcd7a4bcb783c04c5", "url": "https://github.com/oracle/helidon/commit/2dbfb84912b7ba594cc0d92fcd7a4bcb783c04c5", "message": "Get rid of intermediate blocking by queuing completables and keeping order of callbacks.\n\nSigned-off-by: Daniel Kec <daniel.kec@oracle.com>", "committedDate": "2020-03-04T21:27:22Z", "type": "commit"}, {"oid": "db5ef086f015732f3b97f35219388e20c7518388", "url": "https://github.com/oracle/helidon/commit/db5ef086f015732f3b97f35219388e20c7518388", "message": "Fix racing tests\n\nSigned-off-by: Daniel Kec <daniel.kec@oracle.com>", "committedDate": "2020-03-05T08:16:39Z", "type": "commit"}, {"oid": "be870335bdc5a1c56b3f05f7775ef5af066e7939", "url": "https://github.com/oracle/helidon/commit/be870335bdc5a1c56b3f05f7775ef5af066e7939", "message": "CompletableQueue has maximum size\n\nSigned-off-by: Daniel Kec <daniel.kec@oracle.com>", "committedDate": "2020-03-05T10:51:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI2NzU2Mw==", "url": "https://github.com/oracle/helidon/pull/1287#discussion_r388267563", "bodyText": "Definitely not MP Metrics ;)", "author": "tomas-langer", "createdAt": "2020-03-05T12:39:40Z", "path": "microprofile/messaging/src/main/java/module-info.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright (c) 2018, 2020 Oracle and/or its affiliates. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/**\n+ * Microprofile metrics implementation.", "originalCommit": "be870335bdc5a1c56b3f05f7775ef5af066e7939", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI2ODA0OQ==", "url": "https://github.com/oracle/helidon/pull/1287#discussion_r388268049", "bodyText": "All APIs that should be visible for the user should be transitive - that will make them imported to the using module as well.", "author": "tomas-langer", "createdAt": "2020-03-05T12:40:42Z", "path": "microprofile/messaging/src/main/java/module-info.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright (c) 2018, 2020 Oracle and/or its affiliates. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/**\n+ * Microprofile metrics implementation.\n+ */\n+module io.helidon.microprofile.messaging {\n+    requires java.logging;\n+\n+    requires static cdi.api;\n+    requires static javax.inject;\n+    requires static java.activation;\n+    requires javax.interceptor.api;\n+    requires io.helidon.config;\n+    requires org.reactivestreams;\n+    requires microprofile.reactive.messaging.api;", "originalCommit": "be870335bdc5a1c56b3f05f7775ef5af066e7939", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI2ODYxMg==", "url": "https://github.com/oracle/helidon/pull/1287#discussion_r388268612", "bodyText": "Methods should not be declared public in a package private class unless implementing methods from iface.", "author": "tomas-langer", "createdAt": "2020-03-05T12:41:51Z", "path": "microprofile/messaging/src/main/java/io/helidon/microprofile/messaging/AbstractMessagingMethod.java", "diffHunk": "@@ -0,0 +1,126 @@\n+/*\n+ * Copyright (c)  2020 Oracle and/or its affiliates. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package io.helidon.microprofile.messaging;\n+\n+import java.lang.reflect.Method;\n+import java.util.Optional;\n+\n+import javax.enterprise.inject.spi.Bean;\n+import javax.enterprise.inject.spi.BeanManager;\n+\n+import io.helidon.common.Errors;\n+import io.helidon.config.Config;\n+\n+import org.eclipse.microprofile.reactive.messaging.Acknowledgment;\n+\n+abstract class AbstractMessagingMethod {\n+\n+    private String incomingChannelName;\n+    private String outgoingChannelName;\n+\n+    private Bean<?> bean;\n+    private Object beanInstance;\n+    private MethodSignatureType type;\n+    private final Method method;\n+    private final Errors.Collector errors;\n+    private Acknowledgment.Strategy ackStrategy;\n+\n+\n+    AbstractMessagingMethod(Method method, Errors.Collector errors) {\n+        this.method = method;\n+        this.errors = errors;\n+        Optional<MethodSignatureType> signatureType = MethodSignatureResolver\n+                .create(method)\n+                .resolve();\n+        if (signatureType.isPresent()) {\n+            this.type = signatureType.get();\n+            resolveAckStrategy();\n+        } else {\n+            errors.fatal(\"Unsupported method signature \" + method);\n+        }\n+    }\n+\n+    void validate() {\n+        Optional.ofNullable(method.getAnnotation(Acknowledgment.class))\n+                .map(Acknowledgment::value)\n+                .filter(s -> !type.getSupportedAckStrategies().contains(s))\n+                .ifPresent(strategy -> {\n+                    errors.fatal(String.format(\"Acknowledgment strategy %s is not supported for method signature: %s\",\n+                            strategy, type));\n+                });\n+    }\n+\n+    public void init(BeanManager beanManager, Config config) {", "originalCommit": "be870335bdc5a1c56b3f05f7775ef5af066e7939", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM0MzYxOA==", "url": "https://github.com/oracle/helidon/pull/1287#discussion_r388343618", "bodyText": "fixed", "author": "danielkec", "createdAt": "2020-03-05T14:53:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI2ODYxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI3MDQ1NQ==", "url": "https://github.com/oracle/helidon/pull/1287#discussion_r388270455", "bodyText": "Do we really need so many types of exceptions?\nI think we do not expect anybody to catch these exceptions specifically, so we should be fine with a MessagingException and if needed a MessagingDeploymentException and describe the problem in message, rather then creating a typed exception for each case.", "author": "tomas-langer", "createdAt": "2020-03-05T12:45:55Z", "path": "microprofile/messaging/src/main/java/io/helidon/microprofile/messaging/CompletableQueueOverflowException.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright (c)  2020 Oracle and/or its affiliates. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package io.helidon.microprofile.messaging;\n+\n+/**\n+ * Raised when {@link io.helidon.microprofile.messaging.CompletableQueue} max size is reached.\n+ */\n+public class CompletableQueueOverflowException extends RuntimeException {", "originalCommit": "be870335bdc5a1c56b3f05f7775ef5af066e7939", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc2MDUxMQ==", "url": "https://github.com/oracle/helidon/pull/1287#discussion_r388760511", "bodyText": "fixed", "author": "danielkec", "createdAt": "2020-03-06T08:05:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI3MDQ1NQ=="}], "type": "inlineReview"}, {"oid": "9c183f8c0c209a52a422d7a6b8d7c7848c54b4a0", "url": "https://github.com/oracle/helidon/commit/9c183f8c0c209a52a422d7a6b8d7c7848c54b4a0", "message": "Move MP api dependency to dependencies/pom.xml\n\n  * Hide unnecessary public methods\n\nSigned-off-by: Daniel Kec <daniel.kec@oracle.com>", "committedDate": "2020-03-05T14:34:30Z", "type": "commit"}, {"oid": "f6a60ea2127128f5b260b0f9d9a89e9d2f4662e1", "url": "https://github.com/oracle/helidon/commit/f6a60ea2127128f5b260b0f9d9a89e9d2f4662e1", "message": "Wait for whole stream in async tests\n\nSigned-off-by: Daniel Kec <daniel.kec@oracle.com>", "committedDate": "2020-03-05T14:52:40Z", "type": "forcePushed"}, {"oid": "f6a60ea2127128f5b260b0f9d9a89e9d2f4662e1", "url": "https://github.com/oracle/helidon/commit/f6a60ea2127128f5b260b0f9d9a89e9d2f4662e1", "message": "Wait for whole stream in async tests\n\nSigned-off-by: Daniel Kec <daniel.kec@oracle.com>", "committedDate": "2020-03-05T14:52:40Z", "type": "commit"}, {"oid": "011fe3946bba3a236ce0f6e497c0fca5091999a1", "url": "https://github.com/oracle/helidon/commit/011fe3946bba3a236ce0f6e497c0fca5091999a1", "message": "Reactive Streams module-info\n\nSigned-off-by: Daniel Kec <daniel.kec@oracle.com>", "committedDate": "2020-03-05T18:32:09Z", "type": "commit"}, {"oid": "46992ab11f822d72bf293988d9d030d33a3f3c27", "url": "https://github.com/oracle/helidon/commit/46992ab11f822d72bf293988d9d030d33a3f3c27", "message": "Clean up tck poms\n\n  * Fix INCOMING_SUBSCRIBER_MSG_2_VOID signature handling\n\nSigned-off-by: Daniel Kec <daniel.kec@oracle.com>", "committedDate": "2020-03-05T21:01:14Z", "type": "commit"}, {"oid": "e1c9111c774d0310d7a82b5e3abc5a68d051e23d", "url": "https://github.com/oracle/helidon/commit/e1c9111c774d0310d7a82b5e3abc5a68d051e23d", "message": "Werker build fix\n\nSigned-off-by: Daniel Kec <daniel.kec@oracle.com>", "committedDate": "2020-03-05T21:27:04Z", "type": "commit"}, {"oid": "26830e441518532ab2ab56a925f393ac1d6b2deb", "url": "https://github.com/oracle/helidon/commit/26830e441518532ab2ab56a925f393ac1d6b2deb", "message": "Copyright fix\n\nSigned-off-by: Daniel Kec <daniel.kec@oracle.com>", "committedDate": "2020-03-05T21:35:12Z", "type": "commit"}, {"oid": "8e388305f09a7df4994875fa2f897040e41ff293", "url": "https://github.com/oracle/helidon/commit/8e388305f09a7df4994875fa2f897040e41ff293", "message": "Unify exceptions\n\nSigned-off-by: Daniel Kec <daniel.kec@oracle.com>", "committedDate": "2020-03-06T08:05:21Z", "type": "commit"}]}