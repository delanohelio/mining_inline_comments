{"pr_number": 1613, "pr_title": "Restart support for CDI regardless of mode used.", "pr_createdAt": "2020-04-03T09:33:22Z", "pr_url": "https://github.com/oracle/helidon/pull/1613", "timeline": [{"oid": "257d11de7c429c39e4370d6068e59a0b2b6b96b3", "url": "https://github.com/oracle/helidon/commit/257d11de7c429c39e4370d6068e59a0b2b6b96b3", "message": "Restart support for CDI regardless of mode used.\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>", "committedDate": "2020-04-03T09:02:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAxOTAwMw==", "url": "https://github.com/oracle/helidon/pull/1613#discussion_r403019003", "bodyText": "Is synchronized needed here?", "author": "danielkec", "createdAt": "2020-04-03T13:50:16Z", "path": "microprofile/cdi/src/main/java/io/helidon/microprofile/cdi/ContainerInstanceHolder.java", "diffHunk": "@@ -38,7 +39,12 @@ static void set(HelidonContainer container) {\n         CONTAINER.set(container);\n     }\n \n-    static HelidonContainer get() {\n+    // return true if the container was reset, indicating somebody started CDI by hand and then shut it down\n+    static synchronized boolean isReset() {\n+        return isReset;\n+    }", "originalCommit": "257d11de7c429c39e4370d6068e59a0b2b6b96b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzk3ODY1Ng==", "url": "https://github.com/oracle/helidon/pull/1613#discussion_r403978656", "bodyText": "Yes, as the field is not atomic. Either you must use synchronized from all places that use the field, have it declared volatile or use AtomicBoolean. As I already used synchronized in the other methods and this class is used once during startup and once during shutdown, the overhead is negligible", "author": "tomas-langer", "createdAt": "2020-04-06T10:13:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAxOTAwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAyMTA3Nw==", "url": "https://github.com/oracle/helidon/pull/1613#discussion_r403021077", "bodyText": "I don't see the whole picture, but can someone call reset() on container holder between the isReset() check and start()?", "author": "danielkec", "createdAt": "2020-04-03T13:53:21Z", "path": "microprofile/cdi/src/main/java/io/helidon/microprofile/cdi/Main.java", "diffHunk": "@@ -58,13 +60,21 @@ private Main() {\n      * @param args command line arguments, currently ignored\n      */\n     public static void main(String[] args) {\n-        CONTAINER.start();\n+        if (ContainerInstanceHolder.isReset()) {\n+            // in case somebody restarted the container, we need to get a new one\n+            inUse = ContainerInstanceHolder.get();\n+        } else {\n+            // use the statically initialized one\n+            inUse = CONTAINER;\n+        }\n+\n+        inUse.start();", "originalCommit": "257d11de7c429c39e4370d6068e59a0b2b6b96b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzk3Nzg5OQ==", "url": "https://github.com/oracle/helidon/pull/1613#discussion_r403977899", "bodyText": "No. You cannot run two containers in parallel. You can run them sequentially. And this is to make sure that if you run a container, shut it down and then run the Main class, everything works fine (the CONTAINER field is there for native-image static initialization)", "author": "tomas-langer", "createdAt": "2020-04-06T10:12:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAyMTA3Nw=="}], "type": "inlineReview"}]}