{"pr_number": 1403, "pr_title": "Adds Config into MediaSupport#builder() method", "pr_createdAt": "2020-02-18T23:48:38Z", "pr_url": "https://github.com/oracle/helidon/pull/1403", "timeline": [{"oid": "171029b20e0f7a2964c1721ed2d2da9593df0408", "url": "https://github.com/oracle/helidon/commit/171029b20e0f7a2964c1721ed2d2da9593df0408", "message": "Adds Config into MediaSupport.Builder#registerDefaults() method\n\nSigned-off-by: Laird Nelson <laird.nelson@oracle.com>", "committedDate": "2020-02-18T23:47:26Z", "type": "commit"}, {"oid": "63281de655c2da59dc8096d1eabd98c8cb506da5", "url": "https://github.com/oracle/helidon/commit/63281de655c2da59dc8096d1eabd98c8cb506da5", "message": "Interim squashable commit; incorporating feedback\n\nSigned-off-by: Laird Nelson <laird.nelson@oracle.com>", "committedDate": "2020-02-19T00:04:03Z", "type": "commit"}, {"oid": "cd7574cbc20e49a8709827ccccef711077152e74", "url": "https://github.com/oracle/helidon/commit/cd7574cbc20e49a8709827ccccef711077152e74", "message": "Interim squashable commit; reverting accidental refactoring change\n\nSigned-off-by: Laird Nelson <laird.nelson@oracle.com>", "committedDate": "2020-02-19T00:12:57Z", "type": "commit"}, {"oid": "aa5c6e5191ad6c9946b85827d1c50311875edbeb", "url": "https://github.com/oracle/helidon/commit/aa5c6e5191ad6c9946b85827d1c50311875edbeb", "message": "Interim squashable commit; reverting accidental refactoring change\n\nSigned-off-by: Laird Nelson <laird.nelson@oracle.com>", "committedDate": "2020-02-19T00:14:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTE5NTYyNw==", "url": "https://github.com/oracle/helidon/pull/1403#discussion_r381195627", "bodyText": "In other places where we use config, we usually create the following:\n\nstatic factory method builder() - already in this class\nmethod Builder.config(Config) - already in builder\nstatic factory method create(Config)\n\nthis method is not that useful\n\nif you want to create MediaSupport from config only (if that is even feasible), add the create(Config) method\nif you want to update the builder from config and then do more with the builder, just use builder().config(Config)\n\nThis shortcut does not seem useful.", "author": "tomas-langer", "createdAt": "2020-02-19T10:12:37Z", "path": "media/common/src/main/java/io/helidon/media/common/MediaSupport.java", "diffHunk": "@@ -61,27 +90,62 @@ public static MediaSupport createWithDefaults() {\n         return builder().registerDefaults().build();\n     }\n \n+    /**\n+     * Create a new instance with the default readers and writers registered on\n+     * the contexts.\n+     * @param config a {@link Config} that will be passed to {@link\n+     * Builder#registerDefaults(Config)}\n+     * @return MediaSupport\n+     */\n+    public static MediaSupport createWithDefaults(Config config) {\n+        return builder(config).registerDefaults().build();\n+    }\n+\n     /**\n      * Create a new {@link Builder} instance.\n-     * @return Builder\n+     * @return a new {@link Builder}\n      */\n     public static Builder builder() {\n         return new Builder();\n     }\n \n+    /**\n+     * Create a new {@link Builder} instance.\n+     * @param config a {@link Config}\n+     * @return a new {@link Builder}\n+     */\n+    public static Builder builder(Config config) {", "originalCommit": "aa5c6e5191ad6c9946b85827d1c50311875edbeb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTE5NjE2Mg==", "url": "https://github.com/oracle/helidon/pull/1403#discussion_r381196162", "bodyText": "config can never be null\nOur APIs never accept null as a valid parameter - this should throw a NPE", "author": "tomas-langer", "createdAt": "2020-02-19T10:13:32Z", "path": "media/common/src/main/java/io/helidon/media/common/MediaSupport.java", "diffHunk": "@@ -61,27 +90,62 @@ public static MediaSupport createWithDefaults() {\n         return builder().registerDefaults().build();\n     }\n \n+    /**\n+     * Create a new instance with the default readers and writers registered on\n+     * the contexts.\n+     * @param config a {@link Config} that will be passed to {@link\n+     * Builder#registerDefaults(Config)}\n+     * @return MediaSupport\n+     */\n+    public static MediaSupport createWithDefaults(Config config) {\n+        return builder(config).registerDefaults().build();\n+    }\n+\n     /**\n      * Create a new {@link Builder} instance.\n-     * @return Builder\n+     * @return a new {@link Builder}\n      */\n     public static Builder builder() {\n         return new Builder();\n     }\n \n+    /**\n+     * Create a new {@link Builder} instance.\n+     * @param config a {@link Config}\n+     * @return a new {@link Builder}\n+     */\n+    public static Builder builder(Config config) {\n+        return builder().config(config);\n+    }\n+\n     /**\n      * MediaSupport builder.\n      */\n     public static final class Builder implements io.helidon.common.Builder<MediaSupport> {\n \n         private final MessageBodyReaderContext readerContext;\n         private final MessageBodyWriterContext writerContext;\n+        private boolean serverErrorsIncludeStackTraces;\n \n         Builder() {\n             readerContext = MessageBodyReaderContext.create();\n             writerContext = MessageBodyWriterContext.create();\n         }\n \n+        /**\n+         * Configures this {@link Builder} from the supplied {@link Config}.\n+         * @param config a {@link Config}\n+         * @return this {@link Builder}\n+         */\n+        public Builder config(Config config) {\n+            if (config == null) {", "originalCommit": "aa5c6e5191ad6c9946b85827d1c50311875edbeb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTE5OTEwNw==", "url": "https://github.com/oracle/helidon/pull/1403#discussion_r381199107", "bodyText": "Please use\nconfig(\"server-errors-include-stack-traces\").asBoolean().ifPresent(this::serverErrorsIncludeStackTraces)\nThe problem with your approach:\n\nif the serverErrorsIncludeStackTraces is configured by \"hand\" and then you update it with config, you override the value even though config does not include that configuration key\nthe configuration keys should be dash separated, not camel case\nthere are shortcuts for primitives and string on config (e.g. use asBoolean() rather than as(Boolean.class) or as(Boolean.TYPE))\nI do not see a setter for the serverErrorsIncludeStackTraces field in builder, add public Builder serverErrorsIncludeStackTraces(boolean) method - everything configurable through config should be configurable through a builder.", "author": "tomas-langer", "createdAt": "2020-02-19T10:18:57Z", "path": "media/common/src/main/java/io/helidon/media/common/MediaSupport.java", "diffHunk": "@@ -61,27 +90,62 @@ public static MediaSupport createWithDefaults() {\n         return builder().registerDefaults().build();\n     }\n \n+    /**\n+     * Create a new instance with the default readers and writers registered on\n+     * the contexts.\n+     * @param config a {@link Config} that will be passed to {@link\n+     * Builder#registerDefaults(Config)}\n+     * @return MediaSupport\n+     */\n+    public static MediaSupport createWithDefaults(Config config) {\n+        return builder(config).registerDefaults().build();\n+    }\n+\n     /**\n      * Create a new {@link Builder} instance.\n-     * @return Builder\n+     * @return a new {@link Builder}\n      */\n     public static Builder builder() {\n         return new Builder();\n     }\n \n+    /**\n+     * Create a new {@link Builder} instance.\n+     * @param config a {@link Config}\n+     * @return a new {@link Builder}\n+     */\n+    public static Builder builder(Config config) {\n+        return builder().config(config);\n+    }\n+\n     /**\n      * MediaSupport builder.\n      */\n     public static final class Builder implements io.helidon.common.Builder<MediaSupport> {\n \n         private final MessageBodyReaderContext readerContext;\n         private final MessageBodyWriterContext writerContext;\n+        private boolean serverErrorsIncludeStackTraces;\n \n         Builder() {\n             readerContext = MessageBodyReaderContext.create();\n             writerContext = MessageBodyWriterContext.create();\n         }\n \n+        /**\n+         * Configures this {@link Builder} from the supplied {@link Config}.\n+         * @param config a {@link Config}\n+         * @return this {@link Builder}\n+         */\n+        public Builder config(Config config) {\n+            if (config == null) {\n+                serverErrorsIncludeStackTraces = false;\n+            } else {\n+                serverErrorsIncludeStackTraces = config.get(\"serverErrorsIncludeStackTraces\").as(Boolean.TYPE).orElse(false);", "originalCommit": "aa5c6e5191ad6c9946b85827d1c50311875edbeb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "987675e72c304ebf9608c5f13f0ffebac9f3b60c", "url": "https://github.com/oracle/helidon/commit/987675e72c304ebf9608c5f13f0ffebac9f3b60c", "message": "Interim squashable commit; making requested changes per instruction\n\nSigned-off-by: Laird Nelson <laird.nelson@oracle.com>", "committedDate": "2020-02-19T15:54:29Z", "type": "commit"}, {"oid": "61dc6e92a2c53cba4a24378011ef02e83ad302b0", "url": "https://github.com/oracle/helidon/commit/61dc6e92a2c53cba4a24378011ef02e83ad302b0", "message": "Interim squashable commit; making requested changes per instruction\n\nSigned-off-by: Laird Nelson <laird.nelson@oracle.com>", "committedDate": "2020-02-19T15:58:46Z", "type": "commit"}, {"oid": "55d43e49170fd331f3586873a9be5bc777c27a3b", "url": "https://github.com/oracle/helidon/commit/55d43e49170fd331f3586873a9be5bc777c27a3b", "message": "Interim squashable commit; making requested changes per instruction\n\nSigned-off-by: Laird Nelson <laird.nelson@oracle.com>", "committedDate": "2020-02-19T20:09:08Z", "type": "commit"}, {"oid": "f09e50babd46c7824e4f3a3e0883596cb3223689", "url": "https://github.com/oracle/helidon/commit/f09e50babd46c7824e4f3a3e0883596cb3223689", "message": "Interim squashable commit; making requested changes per instruction\n\nSigned-off-by: Laird Nelson <laird.nelson@oracle.com>", "committedDate": "2020-02-19T20:18:49Z", "type": "commit"}]}