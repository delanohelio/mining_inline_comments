{"pr_number": 894, "pr_title": "Google Code Style plugin and conformance OKAPI-809", "pr_createdAt": "2020-03-20T16:34:12Z", "pr_url": "https://github.com/folio-org/okapi/pull/894", "timeline": [{"oid": "10b906963dd0d1d511092dd12adc971632c43a62", "url": "https://github.com/folio-org/okapi/commit/10b906963dd0d1d511092dd12adc971632c43a62", "message": "Everything except okapi-core", "committedDate": "2020-03-20T13:15:02Z", "type": "commit"}, {"oid": "ea29c2b5fb162a96c025ff6f75ae17c10998630e", "url": "https://github.com/folio-org/okapi/commit/ea29c2b5fb162a96c025ff6f75ae17c10998630e", "message": "Google Java style OKAPI-809\n\nThere are two classes where things are suppressed a bit.\n\nLaunchDescriptor.java does not follow naming conventions, but since\nit's encoded to JSON we can not change those names now without\nbreaking compatibility.\n\nProcessModuleHandle.java where checkstyle insists on 8 blanks\nfor 2nd lamba and Idea editor formats to 6 blanks (I believe Idea\neditor is right, so leaving those at 6)", "committedDate": "2020-03-20T16:29:55Z", "type": "commit"}, {"oid": "48f91674f1076bd8f083c41cf7452903edeff22b", "url": "https://github.com/folio-org/okapi/commit/48f91674f1076bd8f083c41cf7452903edeff22b", "message": "Merge branch 'master' into okapi-809-use-check-style-google", "committedDate": "2020-03-20T16:36:24Z", "type": "commit"}, {"oid": "80322ebb11b1a62db65523dada9ac01c939b4125", "url": "https://github.com/folio-org/okapi/commit/80322ebb11b1a62db65523dada9ac01c939b4125", "message": "Fix introduced code smells", "committedDate": "2020-03-20T16:45:03Z", "type": "commit"}, {"oid": "3a901be916d7b65ab298d1b587e9d9d4440e11fa", "url": "https://github.com/folio-org/okapi/commit/3a901be916d7b65ab298d1b587e9d9d4440e11fa", "message": "Rename dockerCMD to dockerCmd internally\n\nNo need to suppress checks for LaunchDescriptor anymore.", "committedDate": "2020-03-23T14:54:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU5MDUxNQ==", "url": "https://github.com/folio-org/okapi/pull/894#discussion_r396590515", "bodyText": "This circumvents the intention of the rule to avoid the single letter abbreviation m in the first chunk of the two chunk name mSet or mset. It violates the rule that each word within the variable is camel cased. mset is not a word. Either rename to set or modifierSet or m or s or use mods.forEach(sn::addSortIndex).", "author": "julianladisch", "createdAt": "2020-03-23T16:36:52Z", "path": "okapi-common/src/main/java/org/folio/okapi/common/CqlUtil.java", "diffHunk": "@@ -65,8 +67,8 @@ public static CQLNode reducer(CQLNode vn1, CQLTermNode tn, Comparator<CQLTermNod\n       } else {\n         CQLSortNode sn = new CQLSortNode(n2);\n         List<ModifierSet> mods = n1.getSortIndexes();\n-        for (ModifierSet mSet : mods) {\n-          sn.addSortIndex(mSet);\n+        for (ModifierSet mset : mods) {\n+          sn.addSortIndex(mset);", "originalCommit": "3a901be916d7b65ab298d1b587e9d9d4440e11fa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY4Nzg3MQ==", "url": "https://github.com/folio-org/okapi/pull/894#discussion_r396687871", "bodyText": "Pedantic. I'm not gonna do it, buf if you make a PR, I'll probably approve", "author": "adamdickmeiss", "createdAt": "2020-03-23T19:01:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU5MDUxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU5MTkwOQ==", "url": "https://github.com/folio-org/okapi/pull/894#discussion_r396591909", "bodyText": "Set is a word and must start with a capital letter, see above.", "author": "julianladisch", "createdAt": "2020-03-23T16:38:52Z", "path": "okapi-common/src/main/java/org/folio/okapi/common/CqlUtil.java", "diffHunk": "@@ -80,19 +82,22 @@ public static CQLNode reducer(CQLNode vn1, CQLTermNode tn, Comparator<CQLTermNod\n         return new CQLPrefixNode(prefix.getName(), prefix.getIdentifier(), n2);\n       }\n     } else {\n-      throw new IllegalArgumentException(\"unknown type for CQLNode: \" + vn1.toString());\n+      throw new IllegalArgumentException(\"unknown type for CQLNode: \"\n+        + vn1.toString());\n     }\n   }\n \n-  private static CQLNode reduceBoolean(CQLBooleanNode n1, CQLTermNode tn, Comparator<CQLTermNode> cmp) {\n+  private static CQLNode reduceBoolean(CQLBooleanNode n1, CQLTermNode tn,\n+                                       Comparator<CQLTermNode> cmp) {\n+\n     CQLNode n2 = null;\n     CQLNode left = reducer(n1.getLeftOperand(), tn, cmp);\n     CQLNode right = reducer(n1.getRightOperand(), tn, cmp);\n \n-    ModifierSet mSet = new ModifierSet(n1.getOperator().toString().toLowerCase());\n+    ModifierSet mset = new ModifierSet(n1.getOperator().toString().toLowerCase());", "originalCommit": "3a901be916d7b65ab298d1b587e9d9d4440e11fa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY4Nzk1NQ==", "url": "https://github.com/folio-org/okapi/pull/894#discussion_r396687955", "bodyText": "Sanme here. Pedantic", "author": "adamdickmeiss", "createdAt": "2020-03-23T19:01:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU5MTkwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYyMjc2OQ==", "url": "https://github.com/folio-org/okapi/pull/894#discussion_r396622769", "bodyText": "This unnecessary default clause prevents detection of missing enum values if we add more in future.\nhttps://google.github.io/styleguide/javaguide.html#s4.8.4.3-switch-default\nSonar checks for enum completeness: https://sonarcloud.io/organizations/folio-org/rules?open=java%3AS131&rule_key=java%3AS131", "author": "julianladisch", "createdAt": "2020-03-23T17:22:11Z", "path": "okapi-common/src/main/java/org/folio/okapi/common/ErrorType.java", "diffHunk": "@@ -4,39 +4,36 @@\n  * Types of errors.\n  */\n public enum ErrorType {\n-  /** Not really an error, but a success code */\n+  /** Not really an error, but a success code. */\n   OK,\n-  /** Internal errors of any kind */\n+  /** Internal errors of any kind. */\n   INTERNAL,\n   /** Bad requests, etc. */\n   USER,\n-  /** Stuff that is not there */\n+  /** Stuff that is not there. */\n   NOT_FOUND,\n-  /** Any kind of auth or permission problem */\n+  /** Any kind of auth or permission problem. */\n   FORBIDDEN,\n-  /** Error type for anything else */\n+  /** Error type for anything else. */\n   ANY;\n \n+  /**\n+   * Maps error type to HTTP status code.\n+   * @param t error type\n+   * @return HTTP status\n+   */\n   public static int httpCode(ErrorType t) {\n-    int code = 500;\n     switch (t) {\n       case OK:\n-        code = 200;\n-        break;\n+        return 200;\n       case USER:\n-        code = 400;\n-        break;\n+        return 400;\n       case NOT_FOUND:\n-        code = 404;\n-        break;\n+        return 404;\n       case FORBIDDEN:\n-        code = 403;\n-        break;\n-      case INTERNAL:\n-      case ANY:\n-        code = 500;\n-        break;\n+        return 403;\n+      default:\n+        return 500;", "originalCommit": "3a901be916d7b65ab298d1b587e9d9d4440e11fa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY4OTAyMw==", "url": "https://github.com/folio-org/okapi/pull/894#discussion_r396689023", "bodyText": "I got a warning, because no default was added. Pedantic", "author": "adamdickmeiss", "createdAt": "2020-03-23T19:03:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYyMjc2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzAxNjk5Ng==", "url": "https://github.com/folio-org/okapi/pull/894#discussion_r397016996", "bodyText": "You may avoid the switch by using an httpCode variable like in the Planet example\nhttps://docs.oracle.com/javase/tutorial/java/javaOO/enum.html", "author": "julianladisch", "createdAt": "2020-03-24T09:38:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYyMjc2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYyOTg1Ng==", "url": "https://github.com/folio-org/okapi/pull/894#discussion_r396629856", "bodyText": "Remove @return line: https://google.github.io/styleguide/javaguide.html#s7.2-summary-fragment\nRemove space before full stop.", "author": "julianladisch", "createdAt": "2020-03-23T17:32:14Z", "path": "okapi-common/src/main/java/org/folio/okapi/common/Messages.java", "diffHunk": "@@ -48,12 +49,13 @@\n   // safe\n   private static class SingletonHelper {\n     private static final Messages INSTANCE = new Messages();\n+\n     private SingletonHelper() {\n       // prevent instantiation\n     }\n   }\n \n-  /**\n+  /** Returns Messages instance (singleton) .\n    * @return the singleton instance of Message", "originalCommit": "3a901be916d7b65ab298d1b587e9d9d4440e11fa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYzNTU1NA==", "url": "https://github.com/folio-org/okapi/pull/894#discussion_r396635554", "bodyText": "\"static\" is in the method signature and should not been repeated in the javadoc summary fragment.\nIt does not compare modules, it compares modul ids.\nCan you rename the parameters from i1 to moduleId1 and i2 to moduleId2?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Static module comparison.\n          \n          \n            \n               * Module id comparison.", "author": "julianladisch", "createdAt": "2020-03-23T17:40:57Z", "path": "okapi-common/src/main/java/org/folio/okapi/common/ModuleId.java", "diffHunk": "@@ -140,11 +141,11 @@ public String toString() {\n   }\n \n   /**\n-   * static comparsion\n+   * Static module comparison.", "originalCommit": "3a901be916d7b65ab298d1b587e9d9d4440e11fa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY1MTMyMg==", "url": "https://github.com/folio-org/okapi/pull/894#discussion_r396651322", "bodyText": "\"tres\" has not the correct camel case. You may use res instead.", "author": "julianladisch", "createdAt": "2020-03-23T18:04:26Z", "path": "okapi-core/src/main/java/org/folio/okapi/managers/TenantManager.java", "diffHunk": "@@ -580,21 +574,25 @@ private void stopTimer(String tenantId, String moduleId, int seq, Lock lockP) {\n     }\n   }\n \n+  private void handleTimer(String tenantId) {\n+    handleTimer(tenantId, null, 0, null);\n+  }\n+\n   private void handleTimer(String tenantId, String moduleId, int seq1, Lock lockP) {\n     logger.info(\"handleTimer tenant {} module {} seq1 {}\", tenantId, moduleId, seq1);\n-    tenants.get(tenantId, tRes -> {\n-      if (tRes.failed()) {\n+    tenants.get(tenantId, tres -> {\n+      if (tres.failed()) {", "originalCommit": "3a901be916d7b65ab298d1b587e9d9d4440e11fa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY1MjYyNA==", "url": "https://github.com/folio-org/okapi/pull/894#discussion_r396652624", "bodyText": "\"mres\" is not a correct word, wrong camel case. You may use \"modRes\" instead.", "author": "julianladisch", "createdAt": "2020-03-23T18:06:17Z", "path": "okapi-core/src/main/java/org/folio/okapi/managers/TenantManager.java", "diffHunk": "@@ -580,21 +574,25 @@ private void stopTimer(String tenantId, String moduleId, int seq, Lock lockP) {\n     }\n   }\n \n+  private void handleTimer(String tenantId) {\n+    handleTimer(tenantId, null, 0, null);\n+  }\n+\n   private void handleTimer(String tenantId, String moduleId, int seq1, Lock lockP) {\n     logger.info(\"handleTimer tenant {} module {} seq1 {}\", tenantId, moduleId, seq1);\n-    tenants.get(tenantId, tRes -> {\n-      if (tRes.failed()) {\n+    tenants.get(tenantId, tres -> {\n+      if (tres.failed()) {\n         // tenant no longer exist\n         stopTimer(tenantId, moduleId, seq1, lockP);\n         return;\n       }\n-      Tenant tenant = tRes.result();\n-      moduleManager.getEnabledModules(tenant, mRes -> {\n-        if (mRes.failed()) {\n+      Tenant tenant = tres.result();\n+      moduleManager.getEnabledModules(tenant, mres -> {", "originalCommit": "3a901be916d7b65ab298d1b587e9d9d4440e11fa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY1MzM3MQ==", "url": "https://github.com/folio-org/okapi/pull/894#discussion_r396653371", "bodyText": "\"cres\" is not a correct word, or incorrectly camelCases. You may use \"res\" instead.", "author": "julianladisch", "createdAt": "2020-03-23T18:07:30Z", "path": "okapi-core/src/main/java/org/folio/okapi/managers/TenantManager.java", "diffHunk": "@@ -673,14 +674,14 @@ private void fireTimer(Tenant tenant, ModuleDescriptor md, RoutingEntry re, Stri\n     ModuleInstance inst = new ModuleInstance(md, re, path, httpMethod, true);\n     MultiMap headers = MultiMap.caseInsensitiveMultiMap();\n     logger.info(\"timer call start module {} for tenant {}\", md.getId(), tenantId);\n-    proxyService.callSystemInterface(\"supertenant\", headers, tenant, inst, \"\", cRes -> {\n+    proxyService.callSystemInterface(\"supertenant\", headers, tenant, inst, \"\", cres -> {", "originalCommit": "3a901be916d7b65ab298d1b587e9d9d4440e11fa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6db60204ec0f8e1dff857a67a5ede8294c2a9b77", "url": "https://github.com/folio-org/okapi/commit/6db60204ec0f8e1dff857a67a5ede8294c2a9b77", "message": "Closer to Google code style\n\nKeep the original and our modified \"FOLIO\" version in checkstyle\ndirectory. Changes from Google style: line wrap indentation of 2\nrather than 4 and enable suppress warnings filter.", "committedDate": "2020-03-24T15:04:39Z", "type": "commit"}, {"oid": "295ec3c4b479890e0b287c8119b9ad19dd8577fb", "url": "https://github.com/folio-org/okapi/commit/295ec3c4b479890e0b287c8119b9ad19dd8577fb", "message": "Useless constructor", "committedDate": "2020-03-24T16:04:46Z", "type": "commit"}, {"oid": "ea736a2934387691e8b587678a7b7a9a156e918b", "url": "https://github.com/folio-org/okapi/commit/ea736a2934387691e8b587678a7b7a9a156e918b", "message": "Planets", "committedDate": "2020-03-24T17:44:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg5ODkzOA==", "url": "https://github.com/folio-org/okapi/pull/894#discussion_r397898938", "bodyText": "Remove empty @return", "author": "julianladisch", "createdAt": "2020-03-25T14:30:05Z", "path": "okapi-core/src/main/java/org/folio/okapi/bean/RoutingEntry.java", "diffHunk": "@@ -177,7 +203,10 @@ public void setMethods(String[] methods) {\n     this.methods = methods;\n   }\n \n-\n+  /**\n+   * Get path pattern/path - whichever exist.\n+   * @return", "originalCommit": "ea736a2934387691e8b587678a7b7a9a156e918b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkxNzc4MQ==", "url": "https://github.com/folio-org/okapi/pull/894#discussion_r397917781", "bodyText": "OK", "author": "adamdickmeiss", "createdAt": "2020-03-25T14:53:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg5ODkzOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkwMDA5MA==", "url": "https://github.com/folio-org/okapi/pull/894#discussion_r397900090", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Throws DecodeException if pattern is invalid.\n          \n          \n            \n               * @throws DecodeException if pattern is invalid.", "author": "julianladisch", "createdAt": "2020-03-25T14:31:28Z", "path": "okapi-core/src/main/java/org/folio/okapi/bean/RoutingEntry.java", "diffHunk": "@@ -223,6 +252,12 @@ private int skipNamedPattern(String pathPattern, int i, char c) {\n     return i;\n   }\n \n+  /**\n+   * set path pattern.\n+   * Special constructs like {name} and * are supported.\n+   * Throws DecodeException if pattern is invalid.", "originalCommit": "ea736a2934387691e8b587678a7b7a9a156e918b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkxNzcxOA==", "url": "https://github.com/folio-org/okapi/pull/894#discussion_r397917718", "bodyText": "Sure", "author": "adamdickmeiss", "createdAt": "2020-03-25T14:53:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkwMDA5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkwNjU0Mg==", "url": "https://github.com/folio-org/okapi/pull/894#discussion_r397906542", "bodyText": "This is contrary to the method name init and I don't see it in the code, can you be more verbose?", "author": "julianladisch", "createdAt": "2020-03-25T14:39:21Z", "path": "okapi-core/src/main/java/org/folio/okapi/managers/DeploymentManager.java", "diffHunk": "@@ -62,11 +73,17 @@ public DeploymentManager(Vertx vertx, DiscoveryManager dm, EnvManager em,\n     this.nodeName = nodeName;\n     this.eventBus = vertx.eventBus();\n     this.config = config;\n-    int portStart = Integer.parseInt(Config.getSysConf(\"port_start\", Integer.toString(listenPort + 1), config));\n-    int portEnd = Integer.parseInt(Config.getSysConf(\"port_end\", Integer.toString(portStart + 10), config));\n+    int portStart = Integer.parseInt(Config.getSysConf(\n+      \"port_start\", Integer.toString(listenPort + 1), config));\n+    int portEnd = Integer.parseInt(Config.getSysConf(\n+      \"port_end\", Integer.toString(portStart + 10), config));\n     this.ports = new Ports(portStart, portEnd);\n   }\n \n+  /**\n+   * Unitialize deployment manager.", "originalCommit": "ea736a2934387691e8b587678a7b7a9a156e918b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkxODI2MA==", "url": "https://github.com/folio-org/okapi/pull/894#discussion_r397918260", "bodyText": "A typo. Good catch!", "author": "adamdickmeiss", "createdAt": "2020-03-25T14:53:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkwNjU0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkxMTI5MA==", "url": "https://github.com/folio-org/okapi/pull/894#discussion_r397911290", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * @param okapiVersion Okapi version; null and \"0.0.0\" will be assumed\n          \n          \n            \n               * @param okapiVersion Okapi version; null is converted to \"0.0.0\"", "author": "julianladisch", "createdAt": "2020-03-25T14:45:19Z", "path": "okapi-core/src/main/java/org/folio/okapi/managers/InternalModule.java", "diffHunk": "@@ -77,6 +83,11 @@ public InternalModule(ModuleManager modules, TenantManager tenantManager,\n     logger.info(\"InternalModule starting okapiversion={}\", okapiVersion);\n   }\n \n+  /**\n+   * Return module descriptor for okapi itself.\n+   * @param okapiVersion Okapi version; null and \"0.0.0\" will be assumed", "originalCommit": "ea736a2934387691e8b587678a7b7a9a156e918b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkxOTA1MA==", "url": "https://github.com/folio-org/okapi/pull/894#discussion_r397919050", "bodyText": "null is not converted.", "author": "adamdickmeiss", "createdAt": "2020-03-25T14:54:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkxMTI5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE0NzMxMw==", "url": "https://github.com/folio-org/okapi/pull/894#discussion_r398147313", "bodyText": "This code\npublic static ModuleDescriptor moduleDescriptor(String okapiVersion) {\n    String v = okapiVersion;\n    if (v == null) {  // happens at compile time,\n      v = \"0.0.0\";   // unit tests can just check for this\n\nconverts null to \"0.0.0\".", "author": "julianladisch", "createdAt": "2020-03-25T20:27:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkxMTI5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE2NDk1Ng==", "url": "https://github.com/folio-org/okapi/pull/894#discussion_r398164956", "bodyText": "null is not converted. The version is converted.", "author": "adamdickmeiss", "createdAt": "2020-03-25T20:58:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkxMTI5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODIwNDk1Ng==", "url": "https://github.com/folio-org/okapi/pull/894#discussion_r398204956", "bodyText": "null is replaced by \"0.0.0\"?", "author": "julianladisch", "createdAt": "2020-03-25T22:19:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkxMTI5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkxMjk0NA==", "url": "https://github.com/folio-org/okapi/pull/894#discussion_r397912944", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * @param npmSnapshot whehter to allow npm snapshot\n          \n          \n            \n               * @param npmSnapshot whether to allow npm snapshot", "author": "julianladisch", "createdAt": "2020-03-25T14:47:22Z", "path": "okapi-core/src/main/java/org/folio/okapi/managers/ModuleManager.java", "diffHunk": "@@ -160,8 +165,11 @@ public void enableAndDisableCheck(Tenant tenant,\n   /**\n    * Create a module.\n    *\n-   * @param md\n-   * @param fut\n+   * @param md module descriptor\n+   * @param check whether to check dependencies\n+   * @param preRelease whether to allow pre-release\n+   * @param npmSnapshot whehter to allow npm snapshot", "originalCommit": "ea736a2934387691e8b587678a7b7a9a156e918b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkxNDU1Mg==", "url": "https://github.com/folio-org/okapi/pull/894#discussion_r397914552", "bodyText": "This line should be deleted because it does not give any additional information.", "author": "julianladisch", "createdAt": "2020-03-25T14:49:15Z", "path": "okapi-core/src/main/java/org/folio/okapi/managers/ModuleManager.java", "diffHunk": "@@ -90,7 +95,7 @@ private void invalidateCacheEntry(String id) {\n   /**\n    * Load the modules from the database, if not already loaded.\n    *\n-   * @param fut\n+   * @param fut future", "originalCommit": "ea736a2934387691e8b587678a7b7a9a156e918b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkyNTE5Mw==", "url": "https://github.com/folio-org/okapi/pull/894#discussion_r397925193", "bodyText": "In addition id should be renamed to tenantId to also have this information in the method signature. Some IDEs like Eclipse insert the method signature when doing auto-complete.", "author": "julianladisch", "createdAt": "2020-03-25T15:02:14Z", "path": "okapi-core/src/main/java/org/folio/okapi/service/impl/ModuleHandleFactory.java", "diffHunk": "@@ -12,6 +12,17 @@ private ModuleHandleFactory() {\n     throw new IllegalAccessError(\"ModuleHandleFactory\");\n   }\n \n+  /**\n+   * Create module handle.\n+   * @param vertx Vert.x handle\n+   * @param desc launch descriptor\n+   * @param id module ID\n+   * @param ports ports to be available\n+   * @param moduleHost module host override (for Docker)\n+   * @param port port to be in use for module\n+   * @param config configuration\n+   * @return module handle\n+   */\n   public static ModuleHandle create(Vertx vertx, LaunchDescriptor desc, String id,", "originalCommit": "ea736a2934387691e8b587678a7b7a9a156e918b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE2NjM4Ng==", "url": "https://github.com/folio-org/okapi/pull/894#discussion_r398166386", "bodyText": "Since the id is a module-Id using tenantId here would be very misleading. Did you mean moduleId? I agree that since id is used in many classes to mean either tenant-Id or module-Id or even interface-Id it would be good to rename. But let's leave that to another PR, shall we?", "author": "adamdickmeiss", "createdAt": "2020-03-25T21:00:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkyNTE5Mw=="}], "type": "inlineReview"}, {"oid": "190b02475d1c0a9535c880e09423f35d44e8bd3d", "url": "https://github.com/folio-org/okapi/commit/190b02475d1c0a9535c880e09423f35d44e8bd3d", "message": "Many minor javadoc fixes, typos\n\nSome spotted by Julian and some reported by IJ IDEA.", "committedDate": "2020-03-25T15:52:30Z", "type": "commit"}, {"oid": "2e1e3da4f08cad2e911d46852885a9739acdeae3", "url": "https://github.com/folio-org/okapi/commit/2e1e3da4f08cad2e911d46852885a9739acdeae3", "message": "lineWrappingIndentation=4 and sh*load of formatting changes", "committedDate": "2020-03-25T16:53:42Z", "type": "commit"}, {"oid": "809685719a76ec85d8cd1b0e402af75e84676be9", "url": "https://github.com/folio-org/okapi/commit/809685719a76ec85d8cd1b0e402af75e84676be9", "message": "Merge branch 'master' into okapi-809-use-check-style-google", "committedDate": "2020-03-25T19:11:57Z", "type": "commit"}, {"oid": "5c2d34dbb66c84c32368644e11c268384acc2848", "url": "https://github.com/folio-org/okapi/commit/5c2d34dbb66c84c32368644e11c268384acc2848", "message": "Two private static finals", "committedDate": "2020-03-25T21:13:17Z", "type": "commit"}, {"oid": "bb2b3958416447532442e0035da7c330f6632618", "url": "https://github.com/folio-org/okapi/commit/bb2b3958416447532442e0035da7c330f6632618", "message": "linkXRef false", "committedDate": "2020-03-26T07:22:50Z", "type": "commit"}, {"oid": "e33d9c47cf7ed91c707a3ceab1c2dd9bc6a478c8", "url": "https://github.com/folio-org/okapi/commit/e33d9c47cf7ed91c707a3ceab1c2dd9bc6a478c8", "message": "Remove redundant checkstyle execution", "committedDate": "2020-03-26T07:23:00Z", "type": "commit"}]}