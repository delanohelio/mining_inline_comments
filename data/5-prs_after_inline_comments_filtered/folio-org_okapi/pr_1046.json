{"pr_number": 1046, "pr_title": "Forward Content-Encoding header OKAPI-936", "pr_createdAt": "2020-11-16T10:11:58Z", "pr_url": "https://github.com/folio-org/okapi/pull/1046", "timeline": [{"oid": "6cd346cc2bd2e8d2e52c06003416cb805660dde6", "url": "https://github.com/folio-org/okapi/commit/6cd346cc2bd2e8d2e52c06003416cb805660dde6", "message": "Forward Content-Encoding header OKAPI-936", "committedDate": "2020-11-16T10:11:35Z", "type": "commit"}, {"oid": "c82c4de259f4e7aa1ff2556c85805674bc9436d2", "url": "https://github.com/folio-org/okapi/commit/c82c4de259f4e7aa1ff2556c85805674bc9436d2", "message": "Break a leg", "committedDate": "2020-11-16T10:14:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTA0NTIyOQ==", "url": "https://github.com/folio-org/okapi/pull/1046#discussion_r525045229", "bodyText": "Seems you can combine those to one line request.headers().set(header, res.getHeader(header));", "author": "hjiebsco", "createdAt": "2020-11-17T10:26:57Z", "path": "okapi-core/src/main/java/org/folio/okapi/managers/ProxyService.java", "diffHunk": "@@ -844,21 +850,24 @@ private void proxyRequestResponse(Iterator<ModuleInstance> it,\n       clientRequest.onFailure(res -> proxyClientFailure(pc, mi, res));\n       clientRequest.onSuccess(res -> {\n         MetricsHelper.recordHttpClientResponse(sample, pc.getTenant(), res.statusCode(),\n-            ctx.request().method().name(), mi);\n-        fixupXOkapiToken(mi.getModuleDescriptor(), ctx.request().headers(), res.headers());\n+            request.method().name(), mi);\n+        fixupXOkapiToken(mi.getModuleDescriptor(), request.headers(), res.headers());\n         Iterator<ModuleInstance> newIt = getNewIterator(it, mi, res.statusCode());\n         if (res.getHeader(XOkapiHeaders.STOP) == null && newIt.hasNext()) {\n           makeTraceHeader(mi, res.statusCode(), pc);\n           relayToRequest(res, pc, mi);\n-          final String ct = res.getHeader(\"Content-Type\");\n-          if (ct != null) {\n-            ctx.request().headers().set(\"Content-Type\", ct);\n+          for (String header : FORWARD_HEADERS) {\n+            String value = res.getHeader(header);\n+            request.headers().remove(header);\n+            if (value != null) {\n+              request.headers().set(header, value);\n+            }", "originalCommit": "c82c4de259f4e7aa1ff2556c85805674bc9436d2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTA1OTExNA==", "url": "https://github.com/folio-org/okapi/pull/1046#discussion_r525059114", "bodyText": "Can I? Setting null is the same as not setting it at all?", "author": "adamdickmeiss", "createdAt": "2020-11-17T10:48:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTA0NTIyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTA2MjY0Mg==", "url": "https://github.com/folio-org/okapi/pull/1046#discussion_r525062642", "bodyText": "The doc says If there is an existing header with the same name, it is removed. Setting a null value removes the entry. So I think it is yes. Please verify though.", "author": "hjiebsco", "createdAt": "2020-11-17T10:54:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTA0NTIyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTA2NDU4NA==", "url": "https://github.com/folio-org/okapi/pull/1046#discussion_r525064584", "bodyText": "Right you are.. Thx", "author": "adamdickmeiss", "createdAt": "2020-11-17T10:57:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTA0NTIyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTA0NTM5NQ==", "url": "https://github.com/folio-org/okapi/pull/1046#discussion_r525045395", "bodyText": "Consider to add a line to check non-existing gzip header .header(\"Content-Encoding\", nullValue())", "author": "hjiebsco", "createdAt": "2020-11-17T10:27:13Z", "path": "okapi-core/src/test/java/org/folio/okapi/ProxyTest.java", "diffHunk": "@@ -4344,4 +4354,170 @@ public void testManyModules(TestContext context) throws IOException {\n     long endTime = System.nanoTime();\n     logger.info(\"Elapsed {} ms\", (endTime - startTime) / 1000000);\n   }\n+\n+\n+  @Test\n+  public void testRequestResponse(TestContext context) {\n+    final String okapiTenant = \"roskilde\";\n+    RestAssuredClient c;\n+    Response r;\n+\n+    // add tenant\n+    c = api.createRestAssured3();\n+    r = c.given()\n+        .header(\"Content-Type\", \"application/json\")\n+        .body(new JsonObject().put(\"id\", okapiTenant).encode()).post(\"/_/proxy/tenants\")\n+        .then().statusCode(201)\n+        .extract().response();\n+    Assert.assertTrue(\n+        \"raml: \" + c.getLastReport().toString(),\n+        c.getLastReport().isEmpty());\n+    final String locationTenantRoskilde = r.getHeader(\"Location\");\n+\n+    final String docRequestPre = \"{\" + LS\n+        + \"  \\\"id\\\" : \\\"module-pre-1.0.0\\\",\" + LS\n+        + \"  \\\"filters\\\" : [ {\" + LS\n+        + \"    \\\"methods\\\" : [ \\\"GET\\\", \\\"POST\\\" ],\" + LS\n+        + \"    \\\"path\\\" : \\\"/\\\",\" + LS\n+        + \"    \\\"phase\\\" : \\\"pre\\\",\" + LS\n+        + \"    \\\"type\\\" : \\\"request-response\\\",\" + LS\n+        + \"    \\\"permissionsRequired\\\" : [ ]\" + LS\n+        + \"  } ]\" + LS\n+        + \"}\";\n+    c = api.createRestAssured3();\n+    c.given()\n+        .header(\"Content-Type\", \"application/json\")\n+        .body(docRequestPre).post(\"/_/proxy/modules\").then().statusCode(201)\n+        .extract().response();\n+    Assert.assertTrue(\"raml: \" + c.getLastReport().toString(),\n+        c.getLastReport().isEmpty());\n+\n+    String nodeDoc1 = \"{\" + LS\n+        + \"  \\\"instId\\\" : \\\"localhost-1\\\",\" + LS\n+        + \"  \\\"srvcId\\\" : \\\"module-pre-1.0.0\\\",\" + LS\n+        + \"  \\\"url\\\" : \\\"http://localhost:\" + Integer.toString(portPre) + \"\\\"\" + LS\n+        + \"}\";\n+    given().header(\"Content-Type\", \"application/json\")\n+        .body(nodeDoc1).post(\"/_/discovery/modules\")\n+        .then().statusCode(201);\n+\n+    final String docRequestPost = \"{\" + LS\n+        + \"  \\\"id\\\" : \\\"module-post-1.0.0\\\",\" + LS\n+        + \"  \\\"filters\\\" : [ {\" + LS\n+        + \"    \\\"methods\\\" : [ \\\"GET\\\", \\\"POST\\\" ],\" + LS\n+        + \"    \\\"path\\\" : \\\"/\\\",\" + LS\n+        + \"    \\\"phase\\\" : \\\"post\\\",\" + LS\n+        + \"    \\\"type\\\" : \\\"request-response\\\",\" + LS\n+        + \"    \\\"permissionsRequired\\\" : [ ]\" + LS\n+        + \"  } ]\" + LS\n+        + \"}\";\n+    c = api.createRestAssured3();\n+    c.given()\n+        .header(\"Content-Type\", \"application/json\")\n+        .body(docRequestPost).post(\"/_/proxy/modules\").then().statusCode(201)\n+        .extract().response();\n+    Assert.assertTrue(\"raml: \" + c.getLastReport().toString(),\n+        c.getLastReport().isEmpty());\n+\n+    nodeDoc1 = \"{\" + LS\n+        + \"  \\\"instId\\\" : \\\"localhost-2\\\",\" + LS\n+        + \"  \\\"srvcId\\\" : \\\"module-post-1.0.0\\\",\" + LS\n+        + \"  \\\"url\\\" : \\\"http://localhost:\" + Integer.toString(portPost) + \"\\\"\" + LS\n+        + \"}\";\n+    given().header(\"Content-Type\", \"application/json\")\n+        .body(nodeDoc1).post(\"/_/discovery/modules\")\n+        .then().statusCode(201);\n+\n+    final String docTimer_1_0_0 = \"{\" + LS\n+        + \"  \\\"id\\\" : \\\"timer-module-1.0.0\\\",\" + LS\n+        + \"  \\\"name\\\" : \\\"timer module\\\",\" + LS\n+        + \"  \\\"provides\\\" : [ {\" + LS\n+        + \"    \\\"id\\\" : \\\"echo\\\",\" + LS\n+        + \"    \\\"version\\\" : \\\"1.0\\\",\" + LS\n+        + \"    \\\"handlers\\\" : [ {\" + LS\n+        + \"      \\\"methods\\\" : [ \\\"POST\\\" ],\" + LS\n+        + \"      \\\"pathPattern\\\" : \\\"/echo\\\",\" + LS\n+        + \"      \\\"permissionsRequired\\\" : [ ]\" + LS\n+        + \"    } ]\" + LS\n+        + \"  } ],\" + LS\n+        + \"  \\\"requires\\\" : [ ]\" + LS\n+        + \"}\";\n+    given()\n+        .header(\"Content-Type\", \"application/json\")\n+        .body(docTimer_1_0_0).post(\"/_/proxy/modules\").then().statusCode(201)\n+        .extract().response();\n+\n+    nodeDoc1 = \"{\" + LS\n+        + \"  \\\"instId\\\" : \\\"localhost-3\\\",\" + LS\n+        + \"  \\\"srvcId\\\" : \\\"timer-module-1.0.0\\\",\" + LS\n+        + \"  \\\"url\\\" : \\\"http://localhost:\" + Integer.toString(portTimer) + \"\\\"\" + LS\n+        + \"}\";\n+    given().header(\"Content-Type\", \"application/json\")\n+        .body(nodeDoc1).post(\"/_/discovery/modules\")\n+        .then().statusCode(201);\n+\n+    JsonArray installReq = new JsonArray().add(new JsonObject().put(\"id\",  \"timer-module-1.0.0\").put(\"action\", \"enable\"));\n+    c = api.createRestAssured3();\n+    c.given()\n+        .header(\"Content-Type\", \"application/json\")\n+        .body(installReq.encode())\n+        .post(\"/_/proxy/tenants/\" + okapiTenant + \"/install?deploy=true\")\n+        .then().statusCode(200).log().ifValidationFails()\n+        .body(equalTo(installReq.encodePrettily()));\n+    Assert.assertTrue(\n+        \"raml: \" + c.getLastReport().toString(),\n+        c.getLastReport().isEmpty());\n+\n+    given().header(\"X-Okapi-Tenant\", okapiTenant)\n+        .header(\"Content-Type\", \"text/plain\")\n+        .body(\"Okapi\").post(\"/echo\")\n+        .then().statusCode(200)\n+        .header(\"Content-Type\", \"text/plain; charset=ISO-8859-1\")\n+        .body(equalTo(\"Okapi\"));", "originalCommit": "c82c4de259f4e7aa1ff2556c85805674bc9436d2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTA1OTI4MQ==", "url": "https://github.com/folio-org/okapi/pull/1046#discussion_r525059281", "bodyText": "ok", "author": "adamdickmeiss", "createdAt": "2020-11-17T10:48:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTA0NTM5NQ=="}], "type": "inlineReview"}, {"oid": "06bb6f5988cef06bbdbf5d550103b1aabcee39be", "url": "https://github.com/folio-org/okapi/commit/06bb6f5988cef06bbdbf5d550103b1aabcee39be", "message": "Add test for absent Content-Encoding", "committedDate": "2020-11-17T10:51:25Z", "type": "commit"}, {"oid": "3d2ea3392206053fb65a592ebf95e489f0f3f1cc", "url": "https://github.com/folio-org/okapi/commit/3d2ea3392206053fb65a592ebf95e489f0f3f1cc", "message": "Merge remote-tracking branch 'origin/master' into OKAPI-936-forward-content-encoding-header", "committedDate": "2020-11-17T10:51:37Z", "type": "commit"}, {"oid": "45976803596eb34883af938051e4a694b6907f5c", "url": "https://github.com/folio-org/okapi/commit/45976803596eb34883af938051e4a694b6907f5c", "message": "Simplify WRT header update", "committedDate": "2020-11-17T10:57:27Z", "type": "commit"}]}