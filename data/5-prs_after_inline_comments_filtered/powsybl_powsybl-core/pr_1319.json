{"pr_number": 1319, "pr_title": "Addition of an alias system on Identifiables in IIDM", "pr_createdAt": "2020-05-22T04:36:47Z", "pr_url": "https://github.com/powsybl/powsybl-core/pull/1319", "timeline": [{"oid": "10407b9a8bb1a451d5612ca1ef96946695037980", "url": "https://github.com/powsybl/powsybl-core/commit/10407b9a8bb1a451d5612ca1ef96946695037980", "message": "First version of IIDM aliases addition\n\nSigned-off-by: S\u00e9bastien Murgey <sebastien.murgey@gmail.com>", "committedDate": "2020-05-22T04:43:52Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkyNjg5MQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1319#discussion_r430926891", "bodyText": "@MioRtia do you confirm that we decided recently (2 or 3 weeks ago) to change the strategy for the default implementation of new methods to throw less exceptions?\nIf it's the case I propose:\n\ngetAliases -> return an empty set\naddAlias -> silently ignore\nremoveAlias -> silently ignore\nhasAliases -> return false", "author": "mathbagu", "createdAt": "2020-05-27T07:57:15Z", "path": "iidm/iidm-api/src/main/java/com/powsybl/iidm/network/Identifiable.java", "diffHunk": "@@ -41,6 +38,35 @@ default String getName() {\n         return getNameOrId();\n     }\n \n+    /**\n+     * Get the aliases of the object.\n+     */\n+    default Set<String> getAliases() {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    /**\n+     * Add an alias to the object. Aliases must be unique in associated Network, and different\n+     * from any identifiable ID.\n+     */\n+    default void addAlias(String alias) {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    /**\n+     * Remove an alias of the object.\n+     */\n+    default void removeAlias(String alias) {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    /**\n+     * Return true if identifiable has aliases.\n+     */\n+    default boolean hasAliases() {\n+        throw new UnsupportedOperationException();\n+    }\n+", "originalCommit": "2b49777ba791b911e76d984078a3094c523f9134", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkyODU0Ng==", "url": "https://github.com/powsybl/powsybl-core/pull/1319#discussion_r430928546", "bodyText": "Do we really need this method: what is the risk to change the behavior of the getIdentifiable(String id) if we consider aliases like unique IDs. At the end, all the user code would use this new method, don't they?", "author": "mathbagu", "createdAt": "2020-05-27T08:00:02Z", "path": "iidm/iidm-api/src/main/java/com/powsybl/iidm/network/Network.java", "diffHunk": "@@ -661,12 +661,22 @@ default HvdcLine getHvdcLine(HvdcConverterStation converterStation) {\n     HvdcLineAdder newHvdcLine();\n \n     /**\n-     * Get a equipment.\n+     * Get an equipment by its ID.\n      *\n      * @param id the id of the equipment\n      */\n     Identifiable<?> getIdentifiable(String id);\n \n+    /**\n+     * Get an equipment by its ID or eventually an alias.\n+     *\n+     * @param idOrAlias the id or an alias of the equipment\n+     * @param searchInAlias if true then searches in the alias and the IDs. If false, searches only by ID.\n+     */\n+    default Identifiable<?> getIdentifiable(String idOrAlias, boolean searchInAlias) {\n+        throw new UnsupportedOperationException();\n+    }\n+", "originalCommit": "2b49777ba791b911e76d984078a3094c523f9134", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk0OTEyMA==", "url": "https://github.com/powsybl/powsybl-core/pull/1319#discussion_r430949120", "bodyText": "I do not know if it may be interesting to search objects by ID uniquely.", "author": "murgeyseb", "createdAt": "2020-05-27T08:35:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkyODU0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk3MDQ3Ng==", "url": "https://github.com/powsybl/powsybl-core/pull/1319#discussion_r430970476", "bodyText": "As searching also with alias could impact performance, it might be interesting to keep the possibility to only seach with primary id", "author": "geofjamg", "createdAt": "2020-05-27T09:09:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkyODU0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkyOTg3MA==", "url": "https://github.com/powsybl/powsybl-core/pull/1319#discussion_r430929870", "bodyText": "From my point of view, we should automatically add the ids of the half line when a TieLine is created, not only in the merge function. Is there a risk to do it automatically in the add() method of the TieLineAdder?", "author": "mathbagu", "createdAt": "2020-05-27T08:02:28Z", "path": "iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/NetworkImpl.java", "diffHunk": "@@ -1101,13 +1111,15 @@ private void replaceDanglingLineByLine(List<MergedLine> lines, Multimap<Boundary\n             l.getTerminal1().setP(mergedLine.p1).setQ(mergedLine.q1);\n             l.getTerminal2().setP(mergedLine.p2).setQ(mergedLine.q2);\n             mergedLine.properties.forEach((key, val) -> l.setProperty(key.toString(), val.toString()));\n+            mergedLine.aliases.forEach(l::addAlias);", "originalCommit": "2b49777ba791b911e76d984078a3094c523f9134", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTAzMzIwMg==", "url": "https://github.com/powsybl/powsybl-core/pull/1319#discussion_r431033202", "bodyText": "Actually, the TieLineAdder does not have access to the aliases of the half lines, only the IDs. So a dedicated line for merging aliases is still needed.", "author": "murgeyseb", "createdAt": "2020-05-27T11:00:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkyOTg3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkzMjU3MA==", "url": "https://github.com/powsybl/powsybl-core/pull/1319#discussion_r430932570", "bodyText": "You should test if the object that already exists in the map is not the same than the obj argument, and silently ignore it. You could be possible to write something like this:\naddAlias(obj, \"alias\"); // works because \"alias\" is not used\naddAlias(obj, \"alias\"); // works because \"alias\" is already an alias of obj\naddAlias(obj2, \"alias\"); // fails because \"alias\" is already an alias of obj, and obj != obj2", "author": "mathbagu", "createdAt": "2020-05-27T08:07:21Z", "path": "iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/NetworkIndex.java", "diffHunk": "@@ -50,14 +53,53 @@ void checkAndAdd(Identifiable<?> obj) {\n         all.add(obj);\n     }\n \n+    void addAlias(Identifiable<?> obj, String alias) {\n+        if (objectsById.containsKey(alias)) {\n+            Identifiable<?> aliasConflict = objectsById.get(alias);\n+            String message = String.format(\"Object (%s) with alias '%s' cannot be created because alias already refers to object (%s) with ID '%s'\",\n+                    obj.getClass(),\n+                    alias,\n+                    aliasConflict.getClass(),\n+                    aliasConflict.getId());\n+            throw new PowsyblException(message);\n+        } else if (idByAlias.containsKey(alias)) {\n+            Identifiable<?> aliasConflict = objectsById.get(idByAlias.get(alias));\n+            String message = String.format(\"Object (%s) with alias '%s' cannot be created because alias already refers to object (%s) with ID '%s'\",\n+                    obj.getClass(),\n+                    alias,\n+                    aliasConflict.getClass(),\n+                    aliasConflict.getId());\n+            throw new PowsyblException(message);\n+        }\n+        idByAlias.put(alias, obj.getId());", "originalCommit": "2b49777ba791b911e76d984078a3094c523f9134", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkzMzgxMA==", "url": "https://github.com/powsybl/powsybl-core/pull/1319#discussion_r430933810", "bodyText": "Remove this test: a for loop on an empty list is OK", "author": "mathbagu", "createdAt": "2020-05-27T08:09:29Z", "path": "iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/AliasesXml.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.xml;\n+\n+import com.powsybl.iidm.network.Identifiable;\n+\n+import javax.xml.stream.XMLStreamException;\n+\n+/**\n+ * @author Sebastien Murgey <sebastien.murgey at rte-france.com>\n+ */\n+public final class AliasesXml {\n+\n+    static final String ALIAS = \"alias\";\n+\n+    public static void write(Identifiable<?> identifiable, NetworkXmlWriterContext context) throws XMLStreamException {\n+        if (identifiable.hasAliases()) {", "originalCommit": "2b49777ba791b911e76d984078a3094c523f9134", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkzNDc2NQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1319#discussion_r430934765", "bodyText": "Impostor! \ud83e\udd23", "author": "mathbagu", "createdAt": "2020-05-27T08:11:09Z", "path": "iidm/iidm-xml-converter/src/test/java/com/powsybl/iidm/xml/TieLineWithAliasesXmlTest.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/**\n+ * Copyright (c) 2019, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+\n+package com.powsybl.iidm.xml;\n+\n+import org.junit.Test;\n+\n+import java.io.IOException;\n+\n+/**\n+ * @author Mathieu Bague <mathieu.bague@rte-france.com>\n+ */", "originalCommit": "2b49777ba791b911e76d984078a3094c523f9134", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkzNTk4OQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1319#discussion_r430935989", "bodyText": "Is really what you want? Maybe the elementName should be an alias, maybe \"VL1 VL2 order\" should be another one.\nMaybe it could be nice to create a function for that", "author": "mathbagu", "createdAt": "2020-05-27T08:13:20Z", "path": "ucte/ucte-converter/src/main/java/com/powsybl/ucte/converter/UcteImporter.java", "diffHunk": "@@ -258,6 +258,9 @@ private static void createDanglingLine(UcteLine ucteLine, boolean connected,\n                 .setQ0(q0)\n                 .setUcteXnodeCode(xnode.getCode().toString())\n                 .add();\n+        if (ucteLine.getElementName() != null && !ucteLine.getElementName().isEmpty()) {\n+            dl.addAlias(String.format(\"%s %s %s\", ucteLine.getId().getNodeCode1().toString(), ucteLine.getId().getNodeCode2().toString(), ucteLine.getElementName()));", "originalCommit": "2b49777ba791b911e76d984078a3094c523f9134", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA1MTA1MQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1319#discussion_r431051051", "bodyText": "As \"node1/node1/order\" is already the id, no need of it as an alias.\nThe element name cannot be an alias itself, cause TSOs usually use it as a kind of order code (you can have same element name for different lines)", "author": "murgeyseb", "createdAt": "2020-05-27T11:37:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkzNTk4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY0NDcwMw==", "url": "https://github.com/powsybl/powsybl-core/pull/1319#discussion_r431644703", "bodyText": "I know, it is the reason why I suggest \"VL1 VL2 co\" to complement the \"node1 node2 co\". If I remember, that was a way to reference equipments in UCTE process. Maybe it's not the case anymore.", "author": "mathbagu", "createdAt": "2020-05-28T07:47:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkzNTk4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY1MjMyNg==", "url": "https://github.com/powsybl/powsybl-core/pull/1319#discussion_r431652326", "bodyText": "Good remark, it's true that sometimes the node code is replaced by * in the input.", "author": "murgeyseb", "createdAt": "2020-05-28T08:01:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkzNTk4OQ=="}], "type": "inlineReview"}, {"oid": "10de9299bad16a575d3546c7723058962386d0f7", "url": "https://github.com/powsybl/powsybl-core/commit/10de9299bad16a575d3546c7723058962386d0f7", "message": "Some fixes after rebase\n\nSigned-off-by: Sebastien Murgey <sebastien.murgey@rte-france.com>", "committedDate": "2020-06-30T15:08:34Z", "type": "forcePushed"}, {"oid": "1645bcd979eeff82197e98eeba786547e9f3e439", "url": "https://github.com/powsybl/powsybl-core/commit/1645bcd979eeff82197e98eeba786547e9f3e439", "message": "Prepare XIIDM files for IIDM v1.3 (#1312)\n\n* Prepare XIIDM files for IIDM v1.3\r\n\r\nSigned-off-by: Mathieu BAGUE <mathieu.bague@rte-france.com>\r\n\r\n* Fix sonar issue\r\n\r\nSigned-off-by: Mathieu BAGUE <mathieu.bague@rte-france.com>\nSigned-off-by: Sebastien Murgey <sebastien.murgey@rte-france.com>", "committedDate": "2020-06-30T15:18:09Z", "type": "commit"}, {"oid": "0b51ad139b5ace53d8669e9db1f3f6d6ddbc4fbf", "url": "https://github.com/powsybl/powsybl-core/commit/0b51ad139b5ace53d8669e9db1f3f6d6ddbc4fbf", "message": "Adapt tests of voltagePerReactivePowerControl, matpower converter and psse converter to XIIDM 1.3 (#1353)\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>\nSigned-off-by: Sebastien Murgey <sebastien.murgey@rte-france.com>", "committedDate": "2020-06-30T15:18:09Z", "type": "commit"}, {"oid": "2f08dd0278eb8c3a81851aef347e0f4068b344bc", "url": "https://github.com/powsybl/powsybl-core/commit/2f08dd0278eb8c3a81851aef347e0f4068b344bc", "message": "cgmes model returns all terminals for a given conducting equipment (#1347)\n\nSigned-off-by: Luma <zamarrenolm@aia.es>\nSigned-off-by: Sebastien Murgey <sebastien.murgey@rte-france.com>", "committedDate": "2020-06-30T15:18:09Z", "type": "commit"}, {"oid": "c2ea6093e702c79de6b5b1e0cc606e85e8d3d20c", "url": "https://github.com/powsybl/powsybl-core/commit/c2ea6093e702c79de6b5b1e0cc606e85e8d3d20c", "message": "Redesign IIDM shunt compensator allowing non linear shunts + updated conversions + updated serialization (#1322)\n\n* Change Shunt API/impl\r\n* Correct json parameters files\r\n* Change XML serialisation for shunts\r\n* Change importers\r\n* Correct IEEE converter tests\r\n* Correct groovy binding\r\n* Correct matpower tests\r\n* Correct merging view tests\r\n* Correct psse converter tests\r\n* Change methods name in Shunt API\r\n* Update sectionCount attribute in XIIDM\r\n* Delete methods for shunts using the concept of sectionIndex\r\n* Replace currentSectionCount parameters/fields by sectionCount\r\n* Rename currentSectionCount parameter\r\n* If the g is undefined in non linear shunt model adder, g per section is considered equal to 0 (g = g of last section)\r\n\r\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>\nSigned-off-by: Sebastien Murgey <sebastien.murgey@rte-france.com>", "committedDate": "2020-06-30T15:18:09Z", "type": "commit"}, {"oid": "10ffdc8cceebc72dc3f49d9b31710c5671f07f19", "url": "https://github.com/powsybl/powsybl-core/commit/10ffdc8cceebc72dc3f49d9b31710c5671f07f19", "message": "Add hasTemporaryLimits() to CurrentLimitsAdder + correct CGMES conversion (#1372)\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>\nSigned-off-by: Sebastien Murgey <sebastien.murgey@rte-france.com>", "committedDate": "2020-06-30T15:18:09Z", "type": "commit"}, {"oid": "ab920673f4b65b630ba305a18fa744ebb0816be4", "url": "https://github.com/powsybl/powsybl-core/commit/ab920673f4b65b630ba305a18fa744ebb0816be4", "message": "Fix sonar bugs: \"Don't use fail() inside a try-catch catching an AssertionError.\" (#1370)\n\nSigned-off-by: Mathieu BAGUE <mathieu.bague@rte-france.com>\r\n\r\nCo-authored-by: MioRtia <miora.ralambotiana@rte-france.com>\nSigned-off-by: Sebastien Murgey <sebastien.murgey@rte-france.com>", "committedDate": "2020-06-30T15:18:09Z", "type": "commit"}, {"oid": "21af21418db69dd7f47471a5c49919db118b97fd", "url": "https://github.com/powsybl/powsybl-core/commit/21af21418db69dd7f47471a5c49919db118b97fd", "message": "First version of IIDM aliases addition\n\nSigned-off-by: S\u00e9bastien Murgey <sebastien.murgey@gmail.com>\nSigned-off-by: Sebastien Murgey <sebastien.murgey@rte-france.com>", "committedDate": "2020-06-30T15:18:09Z", "type": "commit"}, {"oid": "6d03e0f667f3ee1e62b2021fe766083a9d9e02dd", "url": "https://github.com/powsybl/powsybl-core/commit/6d03e0f667f3ee1e62b2021fe766083a9d9e02dd", "message": "Fix UCTE impoter TieLine creation that was lacking <DanglingLines ID as alias too\n\nSigned-off-by: S\u00e9bastien Murgey <sebastien.murgey@gmail.com>\nSigned-off-by: Sebastien Murgey <sebastien.murgey@rte-france.com>", "committedDate": "2020-06-30T15:18:09Z", "type": "commit"}, {"oid": "bf669ce1ba598fe0149a51a75488350c00d18bd9", "url": "https://github.com/powsybl/powsybl-core/commit/bf669ce1ba598fe0149a51a75488350c00d18bd9", "message": "Fix IIDM XML export\n\nSigned-off-by: S\u00e9bastien Murgey <sebastien.murgey@gmail.com>\nSigned-off-by: Sebastien Murgey <sebastien.murgey@rte-france.com>", "committedDate": "2020-06-30T15:18:09Z", "type": "commit"}, {"oid": "55a6fce77c2d54ed87c8737951eb92d917a10982", "url": "https://github.com/powsybl/powsybl-core/commit/55a6fce77c2d54ed87c8737951eb92d917a10982", "message": "Add tests\n\nSigned-off-by: S\u00e9bastien Murgey <sebastien.murgey@gmail.com>\nSigned-off-by: Sebastien Murgey <sebastien.murgey@rte-france.com>", "committedDate": "2020-06-30T15:18:09Z", "type": "commit"}, {"oid": "996cd2a21c5eb2bd0b5beecf2796cb76e6347495", "url": "https://github.com/powsybl/powsybl-core/commit/996cd2a21c5eb2bd0b5beecf2796cb76e6347495", "message": "Change default implementation of aliases management methods\n\nSigned-off-by: S\u00e9bastien MURGEY <sebastien.murgey@rte-france.com>\nSigned-off-by: Sebastien Murgey <sebastien.murgey@rte-france.com>", "committedDate": "2020-06-30T15:18:09Z", "type": "commit"}, {"oid": "d67448b3733e6ae66fd954c6099df7afe6e92d28", "url": "https://github.com/powsybl/powsybl-core/commit/d67448b3733e6ae66fd954c6099df7afe6e92d28", "message": "Adapt addAlias behaviour after review\n\nSigned-off-by: S\u00e9bastien MURGEY <sebastien.murgey@rte-france.com>\nSigned-off-by: Sebastien Murgey <sebastien.murgey@rte-france.com>", "committedDate": "2020-06-30T15:18:10Z", "type": "commit"}, {"oid": "eebaad271415f0191a6e41ed72d690d4e784df9a", "url": "https://github.com/powsybl/powsybl-core/commit/eebaad271415f0191a6e41ed72d690d4e784df9a", "message": "Fixes after review\n\nSigned-off-by: S\u00e9bastien MURGEY <sebastien.murgey@rte-france.com>\nSigned-off-by: Sebastien Murgey <sebastien.murgey@rte-france.com>", "committedDate": "2020-06-30T15:18:10Z", "type": "commit"}, {"oid": "a07003e0eb1f1c7a4521afa34ce1baf386231483", "url": "https://github.com/powsybl/powsybl-core/commit/a07003e0eb1f1c7a4521afa34ce1baf386231483", "message": "Refactor UCTE alias creation in UcteImporter\n\nSigned-off-by: S\u00e9bastien MURGEY <sebastien.murgey@rte-france.com>\nSigned-off-by: Sebastien Murgey <sebastien.murgey@rte-france.com>", "committedDate": "2020-06-30T15:18:10Z", "type": "commit"}, {"oid": "b3d5d8b23759366a5b366fca82c1d6dcced095eb", "url": "https://github.com/powsybl/powsybl-core/commit/b3d5d8b23759366a5b366fca82c1d6dcced095eb", "message": "Fix check style\n\nSigned-off-by: S\u00e9bastien MURGEY <sebastien.murgey@rte-france.com>\nSigned-off-by: Sebastien Murgey <sebastien.murgey@rte-france.com>", "committedDate": "2020-06-30T15:18:10Z", "type": "commit"}, {"oid": "90f85c4a84e5a7881ef191a82fe5c0d1b6851444", "url": "https://github.com/powsybl/powsybl-core/commit/90f85c4a84e5a7881ef191a82fe5c0d1b6851444", "message": "Remove aliases creation from UcteImporter and migrate it in a utility package\n\nSigned-off-by: S\u00e9bastien MURGEY <sebastien.murgey@rte-france.com>\nSigned-off-by: Sebastien Murgey <sebastien.murgey@rte-france.com>", "committedDate": "2020-06-30T15:18:10Z", "type": "commit"}, {"oid": "b1f099f8fc3e330331d51434e44281fb1b9156f6", "url": "https://github.com/powsybl/powsybl-core/commit/b1f099f8fc3e330331d51434e44281fb1b9156f6", "message": "Change default behaviour to change in aliases by default\n\nSigned-off-by: S\u00e9bastien MURGEY <sebastien.murgey@rte-france.com>\nSigned-off-by: Sebastien Murgey <sebastien.murgey@rte-france.com>", "committedDate": "2020-06-30T15:18:10Z", "type": "commit"}, {"oid": "6fa473a2370f7d2a188ac064de0e5e4d3e5ed681", "url": "https://github.com/powsybl/powsybl-core/commit/6fa473a2370f7d2a188ac064de0e5e4d3e5ed681", "message": "Remove research only by ID, and fix Ucte alias creation script to avoid duplicated aliases.\n\nSigned-off-by: S\u00e9bastien MURGEY <sebastien.murgey@rte-france.com>\nSigned-off-by: Sebastien Murgey <sebastien.murgey@rte-france.com>", "committedDate": "2020-06-30T15:18:10Z", "type": "commit"}, {"oid": "05e95ee5c2636602fa5385cd6c5e3dc2bbaf6b4f", "url": "https://github.com/powsybl/powsybl-core/commit/05e95ee5c2636602fa5385cd6c5e3dc2bbaf6b4f", "message": "Some fixes after rebase\n\nSigned-off-by: Sebastien Murgey <sebastien.murgey@rte-france.com>", "committedDate": "2020-06-30T15:18:10Z", "type": "commit"}, {"oid": "05e95ee5c2636602fa5385cd6c5e3dc2bbaf6b4f", "url": "https://github.com/powsybl/powsybl-core/commit/05e95ee5c2636602fa5385cd6c5e3dc2bbaf6b4f", "message": "Some fixes after rebase\n\nSigned-off-by: Sebastien Murgey <sebastien.murgey@rte-france.com>", "committedDate": "2020-06-30T15:18:10Z", "type": "forcePushed"}, {"oid": "1ac04dd93098c9b97fcfbc0c9bd2f1f20d62433a", "url": "https://github.com/powsybl/powsybl-core/commit/1ac04dd93098c9b97fcfbc0c9bd2f1f20d62433a", "message": "Merge branch 'master' into aliasesAddition", "committedDate": "2020-06-30T15:19:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE3MzU5NQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1319#discussion_r450173595", "bodyText": "There is a small typo here\n\nor ana alias", "author": "mathbagu", "createdAt": "2020-07-06T12:02:55Z", "path": "iidm/iidm-api/src/main/java/com/powsybl/iidm/network/Network.java", "diffHunk": "@@ -261,7 +261,7 @@ static PrettyNetworkFactory with(String name) {\n     /**\n      * Get a substation voltage level.\n      *\n-     * @param id the id of the substation voltage level\n+     * @param id the id or ana alias of the substation voltage level", "originalCommit": "1ac04dd93098c9b97fcfbc0c9bd2f1f20d62433a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE3NDAyOA==", "url": "https://github.com/powsybl/powsybl-core/pull/1319#discussion_r450174028", "bodyText": "Is there a reason why you choose a TreeSet instead of a HashSet. Does the order important for you? Maybe for the XML round trip?", "author": "mathbagu", "createdAt": "2020-07-06T12:03:52Z", "path": "iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/AbstractIdentifiable.java", "diffHunk": "@@ -24,6 +24,8 @@\n \n     protected boolean fictitious = false;\n \n+    protected Set<String> aliases = new TreeSet<>();", "originalCommit": "1ac04dd93098c9b97fcfbc0c9bd2f1f20d62433a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY2NDg1OA==", "url": "https://github.com/powsybl/powsybl-core/pull/1319#discussion_r450664858", "bodyText": "I do not remember if it was for ensuring that roundtrip test work... Usually, I would sa that order is not important but it may be nice to keep aliases sorted, as you said for consistency in XML I/O. However, it may not impact a lot the performances as there is no reason, in current use case, that an Identifiable would have thousands of aliases...", "author": "murgeyseb", "createdAt": "2020-07-07T07:31:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE3NDAyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE5MzAyMQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1319#discussion_r450193021", "bodyText": "Should we change the mergeability check to consider also aliases?", "author": "mathbagu", "createdAt": "2020-07-06T12:41:41Z", "path": "iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/NetworkImpl.java", "diffHunk": "@@ -966,6 +966,11 @@ private void mergeDanglingLines(List<MergedLine> lines, DanglingLine dl1, Dangli\n         if (dl1 != null) {\n             MergedLine l = new MergedLine();\n             l.id = dl1.getId().compareTo(dl2.getId()) < 0 ? dl1.getId() + \" + \" + dl2.getId() : dl2.getId() + \" + \" + dl1.getId();\n+            l.aliases = new HashSet<>();\n+            l.aliases.add(dl1.getId());\n+            l.aliases.add(dl2.getId());\n+            l.aliases.addAll(dl1.getAliases());\n+            l.aliases.addAll(dl2.getAliases());", "originalCommit": "1ac04dd93098c9b97fcfbc0c9bd2f1f20d62433a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY2NzI4NA==", "url": "https://github.com/powsybl/powsybl-core/pull/1319#discussion_r450667284", "bodyText": "Should we enforce consistency (no duplicate aliases) or remove them in case of conflict during merging ?", "author": "murgeyseb", "createdAt": "2020-07-07T07:36:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE5MzAyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjY5MDkwMw==", "url": "https://github.com/powsybl/powsybl-core/pull/1319#discussion_r452690903", "bodyText": "What is the current behavior if you try to add an existing alias to another identifiable? If I remember well, an exception is thrown. So I think we should consider the network are not mergeable, specially if we consider alias as a kind of identifier.", "author": "mathbagu", "createdAt": "2020-07-10T08:09:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE5MzAyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE5NDUyMQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1319#discussion_r450194521", "bodyText": "It's not efficient: you search for the object 3 times. If the map is huge, it could lead to bad performance issue.", "author": "mathbagu", "createdAt": "2020-07-06T12:44:34Z", "path": "iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/NetworkIndex.java", "diffHunk": "@@ -50,14 +53,54 @@ void checkAndAdd(Identifiable<?> obj) {\n         all.add(obj);\n     }\n \n-    Identifiable get(String id) {\n+    boolean addAlias(Identifiable<?> obj, String alias) {\n+        if (objectsById.containsKey(alias)) {\n+            if (objectsById.get(alias).equals(obj)) {\n+                // Silently ignore affecting the objects id to its own aliases\n+                return false;\n+            }\n+            Identifiable<?> aliasConflict = objectsById.get(alias);", "originalCommit": "1ac04dd93098c9b97fcfbc0c9bd2f1f20d62433a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE5NDcwMA==", "url": "https://github.com/powsybl/powsybl-core/pull/1319#discussion_r450194700", "bodyText": "Same kind of remark there", "author": "mathbagu", "createdAt": "2020-07-06T12:44:55Z", "path": "iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/NetworkIndex.java", "diffHunk": "@@ -50,14 +53,54 @@ void checkAndAdd(Identifiable<?> obj) {\n         all.add(obj);\n     }\n \n-    Identifiable get(String id) {\n+    boolean addAlias(Identifiable<?> obj, String alias) {\n+        if (objectsById.containsKey(alias)) {\n+            if (objectsById.get(alias).equals(obj)) {\n+                // Silently ignore affecting the objects id to its own aliases\n+                return false;\n+            }\n+            Identifiable<?> aliasConflict = objectsById.get(alias);\n+            String message = String.format(\"Object (%s) with alias '%s' cannot be created because alias already refers to object (%s) with ID '%s'\",\n+                    obj.getClass(),\n+                    alias,\n+                    aliasConflict.getClass(),\n+                    aliasConflict.getId());\n+            throw new PowsyblException(message);\n+        } else if (idByAlias.containsKey(alias)) {\n+            if (objectsById.get(idByAlias.get(alias)).equals(obj)) {\n+                // Silently ignore affecting the same alias twice to an object\n+                return false;\n+            }\n+            Identifiable<?> aliasConflict = objectsById.get(idByAlias.get(alias));", "originalCommit": "1ac04dd93098c9b97fcfbc0c9bd2f1f20d62433a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE5NTU4NA==", "url": "https://github.com/powsybl/powsybl-core/pull/1319#discussion_r450195584", "bodyText": "Performance: you are searching for the same object multiple times.", "author": "mathbagu", "createdAt": "2020-07-06T12:46:33Z", "path": "iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/NetworkIndex.java", "diffHunk": "@@ -50,14 +53,54 @@ void checkAndAdd(Identifiable<?> obj) {\n         all.add(obj);\n     }\n \n-    Identifiable get(String id) {\n+    boolean addAlias(Identifiable<?> obj, String alias) {\n+        if (objectsById.containsKey(alias)) {\n+            if (objectsById.get(alias).equals(obj)) {\n+                // Silently ignore affecting the objects id to its own aliases\n+                return false;\n+            }\n+            Identifiable<?> aliasConflict = objectsById.get(alias);\n+            String message = String.format(\"Object (%s) with alias '%s' cannot be created because alias already refers to object (%s) with ID '%s'\",\n+                    obj.getClass(),\n+                    alias,\n+                    aliasConflict.getClass(),\n+                    aliasConflict.getId());\n+            throw new PowsyblException(message);\n+        } else if (idByAlias.containsKey(alias)) {\n+            if (objectsById.get(idByAlias.get(alias)).equals(obj)) {\n+                // Silently ignore affecting the same alias twice to an object\n+                return false;\n+            }\n+            Identifiable<?> aliasConflict = objectsById.get(idByAlias.get(alias));\n+            String message = String.format(\"Object (%s) with alias '%s' cannot be created because alias already refers to object (%s) with ID '%s'\",\n+                    obj.getClass(),\n+                    alias,\n+                    aliasConflict.getClass(),\n+                    aliasConflict.getId());\n+            throw new PowsyblException(message);\n+        }\n+        idByAlias.put(alias, obj.getId());\n+        return true;\n+    }\n+\n+    public <I extends Identifiable<I>> void removeAlias(Identifiable<?> obj, String alias) {\n+        if (!idByAlias.containsKey(alias)) {\n+            throw new PowsyblException(String.format(\"No alias '%s' found in the network\", alias));\n+        } else if (!idByAlias.get(alias).equals(obj.getId())) {", "originalCommit": "1ac04dd93098c9b97fcfbc0c9bd2f1f20d62433a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE5NjU4Nw==", "url": "https://github.com/powsybl/powsybl-core/pull/1319#discussion_r450196587", "bodyText": "That means it's not possible to use the ID of an object as one of its alias. I know it doesn't make any sense, but if it's allowed by the code, does it work properly?", "author": "mathbagu", "createdAt": "2020-07-06T12:48:19Z", "path": "iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/NetworkIndex.java", "diffHunk": "@@ -50,14 +53,54 @@ void checkAndAdd(Identifiable<?> obj) {\n         all.add(obj);\n     }\n \n-    Identifiable get(String id) {\n+    boolean addAlias(Identifiable<?> obj, String alias) {\n+        if (objectsById.containsKey(alias)) {\n+            if (objectsById.get(alias).equals(obj)) {\n+                // Silently ignore affecting the objects id to its own aliases\n+                return false;\n+            }\n+            Identifiable<?> aliasConflict = objectsById.get(alias);\n+            String message = String.format(\"Object (%s) with alias '%s' cannot be created because alias already refers to object (%s) with ID '%s'\",\n+                    obj.getClass(),\n+                    alias,\n+                    aliasConflict.getClass(),\n+                    aliasConflict.getId());\n+            throw new PowsyblException(message);\n+        } else if (idByAlias.containsKey(alias)) {\n+            if (objectsById.get(idByAlias.get(alias)).equals(obj)) {\n+                // Silently ignore affecting the same alias twice to an object\n+                return false;\n+            }\n+            Identifiable<?> aliasConflict = objectsById.get(idByAlias.get(alias));\n+            String message = String.format(\"Object (%s) with alias '%s' cannot be created because alias already refers to object (%s) with ID '%s'\",\n+                    obj.getClass(),\n+                    alias,\n+                    aliasConflict.getClass(),\n+                    aliasConflict.getId());\n+            throw new PowsyblException(message);\n+        }\n+        idByAlias.put(alias, obj.getId());\n+        return true;\n+    }\n+\n+    public <I extends Identifiable<I>> void removeAlias(Identifiable<?> obj, String alias) {\n+        if (!idByAlias.containsKey(alias)) {\n+            throw new PowsyblException(String.format(\"No alias '%s' found in the network\", alias));\n+        } else if (!idByAlias.get(alias).equals(obj.getId())) {\n+            throw new PowsyblException(String.format(\"Alias '%s' do not correspond to object '%s'\", alias, obj.getId()));\n+        } else {\n+            idByAlias.remove(alias);\n+        }\n+    }\n+\n+    Identifiable get(String idOrAlias) {\n+        String id = idByAlias.getOrDefault(idOrAlias, idOrAlias);", "originalCommit": "1ac04dd93098c9b97fcfbc0c9bd2f1f20d62433a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY2OTMwMQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1319#discussion_r450669301", "bodyText": "In current implementation, ID is not in the alias list, but as it is the ID, it works to retrieve the object using the ID", "author": "murgeyseb", "createdAt": "2020-07-07T07:40:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE5NjU4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE5NzI2Mg==", "url": "https://github.com/powsybl/powsybl-core/pull/1319#discussion_r450197262", "bodyText": "Could you please add a test where you try to add as an alias the ID of an identifiable, and ensure you can get the object.", "author": "mathbagu", "createdAt": "2020-07-06T12:49:34Z", "path": "iidm/iidm-impl/src/test/java/com/powsybl/iidm/network/impl/AliasesTest.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.impl;\n+\n+import com.powsybl.commons.PowsyblException;\n+import com.powsybl.iidm.network.Generator;\n+import com.powsybl.iidm.network.Load;\n+import com.powsybl.iidm.network.Network;\n+import com.powsybl.iidm.network.test.NetworkTest1Factory;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.*;\n+\n+/**\n+ * @author Sebastien Murgey <sebastien.murgey at rte-france.com>\n+ */\n+public class AliasesTest {\n+    @Test\n+    public void canAddAliases() {\n+        Network network = NetworkTest1Factory.create();\n+        Load load = network.getLoad(\"load1\");\n+        assertTrue(load.getAliases().isEmpty());\n+        load.addAlias(\"Load alias\");\n+\n+        assertEquals(1, load.getAliases().size());\n+        assertTrue(load.getAliases().contains(\"Load alias\"));\n+        assertNotNull(network.getLoad(\"Load alias\"));\n+        assertEquals(network.getLoad(\"Load alias\"), load);\n+    }\n+\n+    @Test\n+    public void canRemoveAliases() {\n+        Network network = NetworkTest1Factory.create();\n+        Load load = network.getLoad(\"load1\");\n+        assertTrue(load.getAliases().isEmpty());\n+        load.addAlias(\"Load alias\");\n+\n+        assertEquals(1, load.getAliases().size());\n+        assertTrue(load.getAliases().contains(\"Load alias\"));\n+\n+        load.removeAlias(\"Load alias\");\n+        assertTrue(load.getAliases().isEmpty());\n+    }\n+\n+    @Test\n+    public void silentlyIgnoreAffectingObjectsIdAsAlias() {\n+        Network network = NetworkTest1Factory.create();\n+        Load load = network.getLoad(\"load1\");\n+        assertTrue(load.getAliases().isEmpty());\n+        load.addAlias(\"load1\");\n+        assertTrue(load.getAliases().isEmpty());\n+    }\n+\n+    @Test\n+    public void silentlyIgnoreAffectingTwiceSameIdToAnObject() {\n+        Network network = NetworkTest1Factory.create();\n+        Load load = network.getLoad(\"load1\");\n+        assertTrue(load.getAliases().isEmpty());\n+        load.addAlias(\"Load alias\");\n+        load.addAlias(\"Load alias\");\n+\n+        assertEquals(1, load.getAliases().size());\n+        assertTrue(load.getAliases().contains(\"Load alias\"));\n+    }\n+\n+    @Test(expected = PowsyblException.class)\n+    public void failWhenDuplicatedAlias() {\n+        Network network = NetworkTest1Factory.create();\n+        Load load = network.getLoad(\"load1\");\n+        Generator generator = network.getGenerator(\"generator1\");\n+        load.addAlias(\"Alias\");\n+        generator.addAlias(\"Alias\");\n+    }\n+\n+    @Test(expected = PowsyblException.class)\n+    public void failWhenAliasEqualToAnId() {\n+        Network network = NetworkTest1Factory.create();\n+        Generator generator = network.getGenerator(\"generator1\");\n+        generator.addAlias(\"load1\");\n+    }\n+\n+    @Test(expected = PowsyblException.class)\n+    public void failWhenRemovingNonExistingAlias() {\n+        Network network = NetworkTest1Factory.create();\n+        Load load = network.getLoad(\"load1\");\n+        load.removeAlias(\"Load alias\");\n+    }\n+}", "originalCommit": "1ac04dd93098c9b97fcfbc0c9bd2f1f20d62433a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY3MDM2NQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1319#discussion_r450670365", "bodyText": "The ID of the identifiable you are adding an alias to, or of another identifiable ?", "author": "murgeyseb", "createdAt": "2020-07-07T07:42:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE5NzI2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE5ODA0NA==", "url": "https://github.com/powsybl/powsybl-core/pull/1319#discussion_r450198044", "bodyText": "Both are redundant?", "author": "mathbagu", "createdAt": "2020-07-06T12:50:55Z", "path": "iidm/iidm-xml-converter/src/test/java/com/powsybl/iidm/xml/TieLineWithAliasesXmlTest.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+\n+package com.powsybl.iidm.xml;\n+\n+import org.junit.Test;\n+\n+import java.io.IOException;\n+\n+/**\n+ * @author Sebastien Murgey <sebastien.murgey@rte-france.com>\n+ */\n+public class TieLineWithAliasesXmlTest extends AbstractXmlConverterTest {\n+\n+    @Test\n+    public void test() throws IOException {\n+        roundTripVersionedXmlTest(\"tielineWithAliases.xml\", IidmXmlConstants.CURRENT_IIDM_XML_VERSION);\n+\n+        // Tests for backward compatibility\n+        roundTripVersionedXmlFromMinToCurrentVersionTest(\"tielineWithAliases.xml\", IidmXmlVersion.V_1_3);", "originalCommit": "1ac04dd93098c9b97fcfbc0c9bd2f1f20d62433a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY3MDk4Nw==", "url": "https://github.com/powsybl/powsybl-core/pull/1319#discussion_r450670987", "bodyText": "Not in next version of IIDM. If I understand well, second call does not run CURRENT_IIDM_XML_VERSION", "author": "murgeyseb", "createdAt": "2020-07-07T07:43:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE5ODA0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjY5NTc2NQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1319#discussion_r452695765", "bodyText": "You right, the current_version is ignored. I ask to @MioRtia if the expected behavior", "author": "mathbagu", "createdAt": "2020-07-10T08:19:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE5ODA0NA=="}], "type": "inlineReview"}, {"oid": "295260068fdbabdab5d9339954860f1ad51067b0", "url": "https://github.com/powsybl/powsybl-core/commit/295260068fdbabdab5d9339954860f1ad51067b0", "message": "Take into account remarks from review\n\nSigned-off-by: Sebastien Murgey <sebastien.murgey@rte-france.com>", "committedDate": "2020-07-07T08:00:53Z", "type": "commit"}, {"oid": "e321e298553b5bf17e790aa9187844a25b6a166f", "url": "https://github.com/powsybl/powsybl-core/commit/e321e298553b5bf17e790aa9187844a25b6a166f", "message": "Merge branch 'master' into aliasesAddition", "committedDate": "2020-07-10T06:49:22Z", "type": "commit"}, {"oid": "8ed7eb525819fd7e22ea60ab93135e0c250c4126", "url": "https://github.com/powsybl/powsybl-core/commit/8ed7eb525819fd7e22ea60ab93135e0c250c4126", "message": "Merge branch 'master' into aliasesAddition", "committedDate": "2020-07-10T08:03:40Z", "type": "commit"}, {"oid": "c8f7711aa38d718072bc178efc7492b628ca97b5", "url": "https://github.com/powsybl/powsybl-core/commit/c8f7711aa38d718072bc178efc7492b628ca97b5", "message": "Add aliases in check mergeability check\n\nSigned-off-by: Sebastien Murgey <sebastien.murgey@rte-france.com>", "committedDate": "2020-07-10T08:59:16Z", "type": "commit"}, {"oid": "83c1f2d58e407b30b4ff9aeed152179bcc4570cf", "url": "https://github.com/powsybl/powsybl-core/commit/83c1f2d58e407b30b4ff9aeed152179bcc4570cf", "message": "Merge branch 'master' into aliasesAddition", "committedDate": "2020-07-16T07:50:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg4MDgwNw==", "url": "https://github.com/powsybl/powsybl-core/pull/1319#discussion_r455880807", "bodyText": "I think you should return an unmodifable copy", "author": "MioRtia", "createdAt": "2020-07-16T15:37:12Z", "path": "iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/AbstractIdentifiable.java", "diffHunk": "@@ -51,6 +53,29 @@ public String getNameOrId() {\n         return name != null ? name : id;\n     }\n \n+    @Override\n+    public Set<String> getAliases() {\n+        return aliases;", "originalCommit": "83c1f2d58e407b30b4ff9aeed152179bcc4570cf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg5NjMzMg==", "url": "https://github.com/powsybl/powsybl-core/pull/1319#discussion_r455896332", "bodyText": "Same remark", "author": "MioRtia", "createdAt": "2020-07-16T15:59:21Z", "path": "iidm/iidm-impl/src/test/java/com/powsybl/iidm/network/impl/VariantManagerImplTest.java", "diffHunk": "@@ -58,6 +60,11 @@ public String getNameOrId() {\n             return id;\n         }\n \n+        @Override\n+        public Set<String> getAliases() {\n+            return aliases;", "originalCommit": "83c1f2d58e407b30b4ff9aeed152179bcc4570cf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a7a8e478d79c1ce3449e0e1763ec552fdc6b3c4a", "url": "https://github.com/powsybl/powsybl-core/commit/a7a8e478d79c1ce3449e0e1763ec552fdc6b3c4a", "message": "Fix Shunt aliases handling\n\nSigned-off-by: Sebastien Murgey <sebastien.murgey@rte-france.com>", "committedDate": "2020-07-17T07:53:31Z", "type": "commit"}, {"oid": "91a5682b2e597bb6fa6f50e431c250f21e4c569a", "url": "https://github.com/powsybl/powsybl-core/commit/91a5682b2e597bb6fa6f50e431c250f21e4c569a", "message": "Merge remote-tracking branch 'origin/aliasesAddition' into aliasesAddition", "committedDate": "2020-07-17T07:53:50Z", "type": "commit"}, {"oid": "e8b1f4658615db03be66b9cd34d6a955511da9d7", "url": "https://github.com/powsybl/powsybl-core/commit/e8b1f4658615db03be66b9cd34d6a955511da9d7", "message": "Merge branch 'master' into aliasesAddition", "committedDate": "2020-07-17T07:54:58Z", "type": "commit"}, {"oid": "8a287a2e073ad173354a1d0a163371b275bdf1ef", "url": "https://github.com/powsybl/powsybl-core/commit/8a287a2e073ad173354a1d0a163371b275bdf1ef", "message": "Merge branch 'master' into aliasesAddition", "committedDate": "2020-07-17T07:58:47Z", "type": "commit"}, {"oid": "58300149f6565566ccd50ec55d339171b823fd67", "url": "https://github.com/powsybl/powsybl-core/commit/58300149f6565566ccd50ec55d339171b823fd67", "message": "Fixes some code smells\n\nSigned-off-by: Sebastien Murgey <sebastien.murgey@rte-france.com>", "committedDate": "2020-07-17T08:10:54Z", "type": "commit"}, {"oid": "1e4c179d46158408e0eeaee677619df8983f674e", "url": "https://github.com/powsybl/powsybl-core/commit/1e4c179d46158408e0eeaee677619df8983f674e", "message": "Merge remote-tracking branch 'origin/aliasesAddition' into aliasesAddition", "committedDate": "2020-07-17T08:11:03Z", "type": "commit"}, {"oid": "0d731048f19ff0a71a15aa0b06f81484492c21a8", "url": "https://github.com/powsybl/powsybl-core/commit/0d731048f19ff0a71a15aa0b06f81484492c21a8", "message": "Partial revert of code smell fixes\n\nSigned-off-by: Sebastien Murgey <sebastien.murgey@rte-france.com>", "committedDate": "2020-07-17T09:07:48Z", "type": "commit"}, {"oid": "2c13c63514d804f63afa5514a059a3359ab35e68", "url": "https://github.com/powsybl/powsybl-core/commit/2c13c63514d804f63afa5514a059a3359ab35e68", "message": "Merge branch 'master' into aliasesAddition", "committedDate": "2020-07-17T09:11:24Z", "type": "commit"}]}