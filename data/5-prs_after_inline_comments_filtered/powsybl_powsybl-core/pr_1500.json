{"pr_number": 1500, "pr_title": "CGMES conversion performance improvement: avoid duplicated queries", "pr_createdAt": "2020-10-02T17:08:36Z", "pr_url": "https://github.com/powsybl/powsybl-core/pull/1500", "timeline": [{"oid": "eef1a37c50a9c0fbacca2412a11a546f063778b1", "url": "https://github.com/powsybl/powsybl-core/commit/eef1a37c50a9c0fbacca2412a11a546f063778b1", "message": "used cached terminals and nodes instead of re-running the queries against triplestore\n\nSigned-off-by: Luma <zamarrenolm@aia.es>", "committedDate": "2020-10-02T10:04:34Z", "type": "commit"}, {"oid": "bed42459c36dc177f0f30cd31edc3128e2b47c10", "url": "https://github.com/powsybl/powsybl-core/commit/bed42459c36dc177f0f30cd31edc3128e2b47c10", "message": "Merge branch 'master' into cgmes_use_cached_nodes_terminals", "committedDate": "2020-10-08T10:39:19Z", "type": "commit"}, {"oid": "7ead62f96c61ec76436dfed70b45884ca9f516a7", "url": "https://github.com/powsybl/powsybl-core/commit/7ead62f96c61ec76436dfed70b45884ca9f516a7", "message": "fix code smell (protected constructor for abstract class)\n\nSigned-off-by: Luma <zamarrenolm@aia.es>", "committedDate": "2020-10-08T13:45:20Z", "type": "commit"}, {"oid": "bbf83241c2d38b99d4c04a83c8455a60b953333e", "url": "https://github.com/powsybl/powsybl-core/commit/bbf83241c2d38b99d4c04a83c8455a60b953333e", "message": "Merge branch 'master' into cgmes_use_cached_nodes_terminals", "committedDate": "2020-10-08T13:45:34Z", "type": "commit"}, {"oid": "6656a0278ac325cc426370450d6f5fb4e3c2be73", "url": "https://github.com/powsybl/powsybl-core/commit/6656a0278ac325cc426370450d6f5fb4e3c2be73", "message": "Merge branch 'master' into cgmes_use_cached_nodes_terminals", "committedDate": "2020-10-09T06:32:52Z", "type": "commit"}, {"oid": "7b341e1fcc220c30be5ebb7ea78fa539a8a2caec", "url": "https://github.com/powsybl/powsybl-core/commit/7b341e1fcc220c30be5ebb7ea78fa539a8a2caec", "message": "Merge branch 'master' into cgmes_use_cached_nodes_terminals", "committedDate": "2020-10-13T09:54:56Z", "type": "commit"}, {"oid": "09ce15d3989c5546ae7cdfe4f013ad6de27b5af6", "url": "https://github.com/powsybl/powsybl-core/commit/09ce15d3989c5546ae7cdfe4f013ad6de27b5af6", "message": "Merge branch 'master' into cgmes_use_cached_nodes_terminals", "committedDate": "2020-10-15T10:10:22Z", "type": "commit"}, {"oid": "42c738df5c0f64c4949b38ac3ee10117a0bc84b4", "url": "https://github.com/powsybl/powsybl-core/commit/42c738df5c0f64c4949b38ac3ee10117a0bc84b4", "message": "Merge branch 'master' into cgmes_use_cached_nodes_terminals", "committedDate": "2020-10-15T13:22:56Z", "type": "commit"}, {"oid": "3d10e0c3dfdc287cccfa066ba340009d823c0499", "url": "https://github.com/powsybl/powsybl-core/commit/3d10e0c3dfdc287cccfa066ba340009d823c0499", "message": "Merge branch 'master' into cgmes_use_cached_nodes_terminals", "committedDate": "2020-10-15T15:52:16Z", "type": "commit"}, {"oid": "55ca5c75c596817d0c78cfb01facef7f4059a670", "url": "https://github.com/powsybl/powsybl-core/commit/55ca5c75c596817d0c78cfb01facef7f4059a670", "message": "convert zero impedance lines inside a voltage level to fictitious switches\n\nSigned-off-by: Luma <zamarrenolm@aia.es>", "committedDate": "2020-10-16T13:27:32Z", "type": "commit"}, {"oid": "69bf0ba9c2450249bd0f7ea48e85b5533ea55cab", "url": "https://github.com/powsybl/powsybl-core/commit/69bf0ba9c2450249bd0f7ea48e85b5533ea55cab", "message": "Merge branch 'master' into cgmes_use_cached_nodes_terminals", "committedDate": "2020-10-19T07:28:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzczODU2MA==", "url": "https://github.com/powsybl/powsybl-core/pull/1500#discussion_r507738560", "bodyText": "Thanks @zamarrenolm, it works well with a conversion into a switch when wa are inside the same voltage level. But I wonder if we should prefer an internal connexion to a swicth. The next step could be to make our internal connexion identifiable. @mathbagu seems to prefer an internal connection to preserve graph analysis.", "author": "annetill", "createdAt": "2020-10-19T13:19:35Z", "path": "cgmes/cgmes-conversion/src/main/java/com/powsybl/cgmes/conversion/elements/ACLineSegmentConversion.java", "diffHunk": "@@ -71,19 +69,46 @@ private void convertLine() {\n         double x = p.asDouble(\"x\");\n         double bch = p.asDouble(\"bch\");\n         double gch = p.asDouble(\"gch\", 0.0);\n-        final LineAdder adder = context.network().newLine()\n-                .setEnsureIdUnicity(false)\n-                .setR(r)\n-                .setX(x)\n-                .setG1(gch / 2)\n-                .setG2(gch / 2)\n-                .setB1(bch / 2)\n-                .setB2(bch / 2);\n-        identify(adder);\n-        connect(adder);\n-        final Line l = adder.add();\n-        addAliases(l);\n-        convertedTerminals(l.getTerminal1(), l.getTerminal2());\n+        if (isZeroImpedanceInsideVoltageLevel(r, x, bch, gch)) {", "originalCommit": "69bf0ba9c2450249bd0f7ea48e85b5533ea55cab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc3MTk2NQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1500#discussion_r507771965", "bodyText": "You are right, the fictitious breaker allows to  preserve the id of the original equipment (for an internal connection we can not have identifiers or aliases).\nBut there is another reason: an internal connection is always closed, it can not be created and declared opened. The corresponding ACLineSegment from CGMES could be opened (at one end or both), it is easier to map it to IIDM as an opened fictitious switch.", "author": "zamarrenolm", "createdAt": "2020-10-19T14:01:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzczODU2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTAzNjAyOQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1500#discussion_r509036029", "bodyText": "The problem we see is that this interconnector has already 2 switches connected at each side. So, with our solution, we will have 3 switches. With an internal connection, we can open it at each side by opening the switch. It works in a node/breaker topology but what about the bus/breaker topology ?", "author": "annetill", "createdAt": "2020-10-21T07:04:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzczODU2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTEwMzM2OQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1500#discussion_r509103369", "bodyText": "In CGMES, even if the switches are closed, the ACLineSegment could be seen as opened because its terminals could have the connected attribute set to false. If we use an internal connection we lose that possibility.\nHaving three switches sequentially should not be a problem for topology calculations at bus-breaker level, and at bus-view all three will be hidden if they are not declared as retained.", "author": "zamarrenolm", "createdAt": "2020-10-21T08:50:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzczODU2MA=="}], "type": "inlineReview"}, {"oid": "687bd6a99d2cf20221a79c8baa76b43da4bed220", "url": "https://github.com/powsybl/powsybl-core/commit/687bd6a99d2cf20221a79c8baa76b43da4bed220", "message": "add unit test\n\nSigned-off-by: Luma <zamarrenolm@aia.es>", "committedDate": "2020-10-26T17:39:45Z", "type": "commit"}, {"oid": "59a048150fb8b92114118c5cbeea118d83c88f76", "url": "https://github.com/powsybl/powsybl-core/commit/59a048150fb8b92114118c5cbeea118d83c88f76", "message": "Merge branch 'master' into cgmes_use_cached_nodes_terminals", "committedDate": "2020-10-27T06:26:46Z", "type": "commit"}]}