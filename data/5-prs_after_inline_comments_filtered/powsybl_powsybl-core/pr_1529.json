{"pr_number": 1529, "pr_title": "add possibility to run sensitivity analysis whithout contengencies", "pr_createdAt": "2020-10-23T08:14:18Z", "pr_url": "https://github.com/powsybl/powsybl-core/pull/1529", "timeline": [{"oid": "9ea2e7dd36fc57f6553ed5a7edd6fcd3d730384f", "url": "https://github.com/powsybl/powsybl-core/commit/9ea2e7dd36fc57f6553ed5a7edd6fcd3d730384f", "message": "add possibility to run sensitivity analysis whithout contengencies\n\nSigned-off-by: J\u00e9r\u00e9my LABOUS <jlabous@silicom.fr>", "committedDate": "2020-10-23T08:08:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUwNDY3Ng==", "url": "https://github.com/powsybl/powsybl-core/pull/1529#discussion_r512504676", "bodyText": "Please keep the same order for the parameters. You also have to update the runAsync with all the parameters to assert that the contingenciesProvider is not null.\nDon't forget to add the breaking change label.", "author": "mathbagu", "createdAt": "2020-10-27T08:41:49Z", "path": "sensitivity-analysis-api/src/main/java/com/powsybl/sensitivity/SensitivityAnalysis.java", "diffHunk": "@@ -79,6 +79,32 @@ private Runner(SensitivityAnalysisProvider provider) {\n             return runAsync(network, factorsProvider, contingenciesProvider, SensitivityAnalysisParameters.load());\n         }\n \n+        public CompletableFuture<SensitivityAnalysisResult> runAsync(Network network,\n+                                                                     String workingStateId,\n+                                                                     SensitivityAnalysisParameters parameters,\n+                                                                     SensitivityFactorsProvider factorsProvider,", "originalCommit": "9ea2e7dd36fc57f6553ed5a7edd6fcd3d730384f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUwNDk0Ng==", "url": "https://github.com/powsybl/powsybl-core/pull/1529#discussion_r512504946", "bodyText": "Same remark about the parameter order", "author": "mathbagu", "createdAt": "2020-10-27T08:42:17Z", "path": "sensitivity-analysis-api/src/main/java/com/powsybl/sensitivity/SensitivityAnalysis.java", "diffHunk": "@@ -79,6 +79,32 @@ private Runner(SensitivityAnalysisProvider provider) {\n             return runAsync(network, factorsProvider, contingenciesProvider, SensitivityAnalysisParameters.load());\n         }\n \n+        public CompletableFuture<SensitivityAnalysisResult> runAsync(Network network,\n+                                                                     String workingStateId,\n+                                                                     SensitivityAnalysisParameters parameters,\n+                                                                     SensitivityFactorsProvider factorsProvider,\n+                                                                     ComputationManager computationManager) {\n+            return runAsync(network, workingStateId, factorsProvider, new EmptyContingencyListProvider(), parameters, computationManager);\n+        }\n+\n+        public CompletableFuture<SensitivityAnalysisResult> runAsync(Network network,\n+                                                                     String workingStateId,\n+                                                                     SensitivityAnalysisParameters parameters,\n+                                                                     SensitivityFactorsProvider factorsProvider) {", "originalCommit": "9ea2e7dd36fc57f6553ed5a7edd6fcd3d730384f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUwNTU3Ng==", "url": "https://github.com/powsybl/powsybl-core/pull/1529#discussion_r512505576", "bodyText": "I think, if the contingency list is empty we should use the short-time execution computation manager.\n@murgeyseb Do you agree?", "author": "mathbagu", "createdAt": "2020-10-27T08:43:22Z", "path": "sensitivity-analysis-api/src/main/java/com/powsybl/sensitivity/SensitivityAnalysis.java", "diffHunk": "@@ -79,6 +79,32 @@ private Runner(SensitivityAnalysisProvider provider) {\n             return runAsync(network, factorsProvider, contingenciesProvider, SensitivityAnalysisParameters.load());\n         }\n \n+        public CompletableFuture<SensitivityAnalysisResult> runAsync(Network network,\n+                                                                     String workingStateId,\n+                                                                     SensitivityAnalysisParameters parameters,\n+                                                                     SensitivityFactorsProvider factorsProvider,\n+                                                                     ComputationManager computationManager) {\n+            return runAsync(network, workingStateId, factorsProvider, new EmptyContingencyListProvider(), parameters, computationManager);\n+        }\n+\n+        public CompletableFuture<SensitivityAnalysisResult> runAsync(Network network,\n+                                                                     String workingStateId,\n+                                                                     SensitivityAnalysisParameters parameters,\n+                                                                     SensitivityFactorsProvider factorsProvider) {\n+            return runAsync(network, workingStateId, parameters, factorsProvider, DefaultComputationManagerConfig.load().createLongTimeExecutionComputationManager());", "originalCommit": "9ea2e7dd36fc57f6553ed5a7edd6fcd3d730384f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY2OTIyMQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1529#discussion_r512669221", "bodyText": "Yes, why not.", "author": "murgeyseb", "createdAt": "2020-10-27T12:57:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUwNTU3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUwNTcxNA==", "url": "https://github.com/powsybl/powsybl-core/pull/1529#discussion_r512505714", "bodyText": "Same remark about the parameter order", "author": "mathbagu", "createdAt": "2020-10-27T08:43:33Z", "path": "sensitivity-analysis-api/src/main/java/com/powsybl/sensitivity/SensitivityAnalysis.java", "diffHunk": "@@ -79,6 +79,32 @@ private Runner(SensitivityAnalysisProvider provider) {\n             return runAsync(network, factorsProvider, contingenciesProvider, SensitivityAnalysisParameters.load());\n         }\n \n+        public CompletableFuture<SensitivityAnalysisResult> runAsync(Network network,\n+                                                                     String workingStateId,\n+                                                                     SensitivityAnalysisParameters parameters,\n+                                                                     SensitivityFactorsProvider factorsProvider,\n+                                                                     ComputationManager computationManager) {\n+            return runAsync(network, workingStateId, factorsProvider, new EmptyContingencyListProvider(), parameters, computationManager);\n+        }\n+\n+        public CompletableFuture<SensitivityAnalysisResult> runAsync(Network network,\n+                                                                     String workingStateId,\n+                                                                     SensitivityAnalysisParameters parameters,\n+                                                                     SensitivityFactorsProvider factorsProvider) {\n+            return runAsync(network, workingStateId, parameters, factorsProvider, DefaultComputationManagerConfig.load().createLongTimeExecutionComputationManager());\n+        }\n+\n+        public CompletableFuture<SensitivityAnalysisResult> runAsync(Network network,\n+                                                                     SensitivityAnalysisParameters parameters,\n+                                                                     SensitivityFactorsProvider factorsProvider) {", "originalCommit": "9ea2e7dd36fc57f6553ed5a7edd6fcd3d730384f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUwNjI0NA==", "url": "https://github.com/powsybl/powsybl-core/pull/1529#discussion_r512506244", "bodyText": "Same remark about the parameter order", "author": "mathbagu", "createdAt": "2020-10-27T08:44:21Z", "path": "sensitivity-analysis-api/src/main/java/com/powsybl/sensitivity/SensitivityAnalysis.java", "diffHunk": "@@ -109,6 +135,32 @@ public SensitivityAnalysisResult run(Network network,\n             return runAsync(network, factorsProvider, contingenciesProvider).join();\n         }\n \n+        public SensitivityAnalysisResult run(Network network,\n+                                             String workingStateId,\n+                                             SensitivityAnalysisParameters parameters,\n+                                             SensitivityFactorsProvider factorsProvider,\n+                                             ComputationManager computationManager) {\n+            return runAsync(network, workingStateId, factorsProvider, new EmptyContingencyListProvider(), parameters, computationManager).join();\n+        }\n+\n+        public SensitivityAnalysisResult run(Network network,\n+                                             String workingStateId,\n+                                             SensitivityAnalysisParameters parameters,\n+                                             SensitivityFactorsProvider factorsProvider) {\n+            return runAsync(network, workingStateId, factorsProvider, new EmptyContingencyListProvider(), parameters).join();\n+        }\n+\n+        public SensitivityAnalysisResult run(Network network,\n+                                             SensitivityAnalysisParameters parameters,\n+                                             SensitivityFactorsProvider factorsProvider) {\n+            return runAsync(network, factorsProvider, new EmptyContingencyListProvider(), parameters).join();\n+        }", "originalCommit": "9ea2e7dd36fc57f6553ed5a7edd6fcd3d730384f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUwNzkzOA==", "url": "https://github.com/powsybl/powsybl-core/pull/1529#discussion_r512507938", "bodyText": "Same remark about the parameter order. It seems that all the runAsync methods are missing.\n@murgeyseb Do we add them all? Only some of them? I think we should be symmetrical and provide only part of them (the most useful) but in sync/async modes", "author": "mathbagu", "createdAt": "2020-10-27T08:46:54Z", "path": "sensitivity-analysis-api/src/main/java/com/powsybl/sensitivity/SensitivityAnalysis.java", "diffHunk": "@@ -163,4 +215,22 @@ public static SensitivityAnalysisResult run(Network network,\n                                                 ContingenciesProvider contingenciesProvider) {\n         return find().run(network, factorsProvider, contingenciesProvider);\n     }\n+\n+    public static SensitivityAnalysisResult run(Network network,\n+                                                String workingStateId,\n+                                                SensitivityAnalysisParameters parameters,\n+                                                SensitivityFactorsProvider factorsProvider) {\n+        return find().run(network, workingStateId, parameters, factorsProvider);\n+    }\n+\n+    public static SensitivityAnalysisResult run(Network network,\n+                                                SensitivityAnalysisParameters parameters,\n+                                                SensitivityFactorsProvider factorsProvider) {\n+        return find().run(network, parameters, factorsProvider);\n+    }", "originalCommit": "9ea2e7dd36fc57f6553ed5a7edd6fcd3d730384f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY3MDc5MQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1529#discussion_r512670791", "bodyText": "It should definitely be symmetrical between async and sync.", "author": "murgeyseb", "createdAt": "2020-10-27T13:00:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUwNzkzOA=="}], "type": "inlineReview"}, {"oid": "83247bd0259caa6935b28166e2565d159c662853", "url": "https://github.com/powsybl/powsybl-core/commit/83247bd0259caa6935b28166e2565d159c662853", "message": "take remarks in account\n\nSigned-off-by: J\u00e9r\u00e9my LABOUS <jlabous@silicom.fr>", "committedDate": "2020-10-27T16:36:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU3NjYzMQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1529#discussion_r513576631", "bodyText": "These methods should call the corresponding runAsync method without adding new parameters", "author": "mathbagu", "createdAt": "2020-10-28T16:15:12Z", "path": "sensitivity-analysis-api/src/main/java/com/powsybl/sensitivity/SensitivityAnalysis.java", "diffHunk": "@@ -109,6 +135,32 @@ public SensitivityAnalysisResult run(Network network,\n             return runAsync(network, factorsProvider, contingenciesProvider).join();\n         }\n \n+        public SensitivityAnalysisResult run(Network network,\n+                                             String workingStateId,\n+                                             SensitivityFactorsProvider factorsProvider,\n+                                             SensitivityAnalysisParameters parameters,\n+                                             ComputationManager computationManager) {\n+            return runAsync(network, workingStateId, factorsProvider, new EmptyContingencyListProvider(), parameters, computationManager).join();\n+        }\n+\n+        public SensitivityAnalysisResult run(Network network,\n+                                             String workingStateId,\n+                                             SensitivityFactorsProvider factorsProvider,\n+                                             SensitivityAnalysisParameters parameters) {\n+            return runAsync(network, workingStateId, factorsProvider, new EmptyContingencyListProvider(), parameters).join();\n+        }\n+\n+        public SensitivityAnalysisResult run(Network network,\n+                                             SensitivityFactorsProvider factorsProvider,\n+                                             SensitivityAnalysisParameters parameters) {\n+            return runAsync(network, factorsProvider, new EmptyContingencyListProvider(), parameters).join();", "originalCommit": "83247bd0259caa6935b28166e2565d159c662853", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU3NzIyNw==", "url": "https://github.com/powsybl/powsybl-core/pull/1529#discussion_r513577227", "bodyText": "As we ask in the review, can you add all missing runAsync method please?", "author": "mathbagu", "createdAt": "2020-10-28T16:16:00Z", "path": "sensitivity-analysis-api/src/main/java/com/powsybl/sensitivity/SensitivityAnalysis.java", "diffHunk": "@@ -163,4 +224,30 @@ public static SensitivityAnalysisResult run(Network network,\n                                                 ContingenciesProvider contingenciesProvider) {\n         return find().run(network, factorsProvider, contingenciesProvider);\n     }\n+\n+    public static SensitivityAnalysisResult run(Network network,\n+                                                String workingStateId,\n+                                                SensitivityFactorsProvider factorsProvider,\n+                                                SensitivityAnalysisParameters parameters,\n+                                                ComputationManager computationManager) {\n+        return find().run(network, workingStateId, factorsProvider, parameters, computationManager);\n+    }\n+\n+    public static SensitivityAnalysisResult run(Network network,\n+                                                String workingStateId,\n+                                                SensitivityFactorsProvider factorsProvider,\n+                                                SensitivityAnalysisParameters parameters) {\n+        return find().run(network, workingStateId, factorsProvider, parameters);\n+    }\n+\n+    public static SensitivityAnalysisResult run(Network network,\n+                                                SensitivityFactorsProvider factorsProvider,\n+                                                SensitivityAnalysisParameters parameters) {\n+        return find().run(network, factorsProvider, parameters);\n+    }\n+\n+    public static SensitivityAnalysisResult run(Network network,\n+                                                SensitivityFactorsProvider factorsProvider) {\n+        return find().run(network, factorsProvider);\n+    }", "originalCommit": "83247bd0259caa6935b28166e2565d159c662853", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "57362e2da616002450ef1f8029a716794aefcf4d", "url": "https://github.com/powsybl/powsybl-core/commit/57362e2da616002450ef1f8029a716794aefcf4d", "message": "take remarks in account\n\nSigned-off-by: J\u00e9r\u00e9my LABOUS <jlabous@silicom.fr>", "committedDate": "2020-10-28T17:15:08Z", "type": "commit"}, {"oid": "6b42263d968a2e72adeba04e59e8a517b9dc97bb", "url": "https://github.com/powsybl/powsybl-core/commit/6b42263d968a2e72adeba04e59e8a517b9dc97bb", "message": "Merge branch 'master' into issue_1528_sensitivity_analysis_without_contingencies", "committedDate": "2020-11-06T07:59:08Z", "type": "commit"}]}