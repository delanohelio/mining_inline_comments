{"pr_number": 889, "pr_title": "Add instrumentation to the BatchSpansProcessor to count the number of dropped spans", "pr_createdAt": "2020-02-19T23:23:15Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/889", "timeline": [{"oid": "7343a271e5e074cecf1a2f7da9c345871dcc4f19", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/7343a271e5e074cecf1a2f7da9c345871dcc4f19", "message": "Add instrumentation to the BatchSpansProcessor to count the number of dropped spans.", "committedDate": "2020-02-19T23:16:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYwODk0NA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/889#discussion_r381608944", "bodyText": "As a limitation of the current API for metrics the bound needs to be static or you need to unbind it, maybe in shutdown?\nAlso creating the same instrument twice may fail (we have not implement that check yet). So the instrument can easily be static :)", "author": "bogdandrutu", "createdAt": "2020-02-19T23:34:06Z", "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/export/BatchSpansProcessor.java", "diffHunk": "@@ -267,12 +272,25 @@ private Worker(\n       this.maxExportBatchSize = maxExportBatchSize;\n       this.spansList = new ArrayList<>(maxQueueSize);\n       this.exporterTimeoutMillis = exporterTimeoutMillis;\n+\n+      Meter meter = OpenTelemetry.getMeterRegistry().get(\"opentelemetry\");\n+      LongCounter droppedSpansCounter =\n+          meter\n+              .longCounterBuilder(\"droppedSpans\")\n+              .setMonotonic(true)\n+              .setUnit(\"1\")\n+              .setDescription(\n+                  \"The number of spans dropped by the BatchSpansProcessor due to high throughput.\")\n+              .build();\n+      this.droppedSpans =", "originalCommit": "7343a271e5e074cecf1a2f7da9c345871dcc4f19", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYxMDM5MQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/889#discussion_r381610391", "bodyText": "Making it static seems like a good option. I'll do it.", "author": "jkwatson", "createdAt": "2020-02-19T23:38:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYwODk0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYyMTkwNg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/889#discussion_r381621906", "bodyText": "ok, done! Thanks for the quick feedback on this one.", "author": "jkwatson", "createdAt": "2020-02-20T00:16:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYwODk0NA=="}], "type": "inlineReview"}, {"oid": "a8376a6e119976a18a4e46373cdae7e991c556b6", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/a8376a6e119976a18a4e46373cdae7e991c556b6", "message": "Make the bound counter static.", "committedDate": "2020-02-20T00:16:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYyMjQ0OA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/889#discussion_r381622448", "bodyText": "io.opentelemetry.sdk.trace?", "author": "bogdandrutu", "createdAt": "2020-02-20T00:18:38Z", "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/export/BatchSpansProcessor.java", "diffHunk": "@@ -233,6 +237,23 @@ private static Thread newThread(Runnable runnable) {\n   // concurrency.\n   private static final class Worker implements Runnable {\n \n+    static {\n+      Meter meter = OpenTelemetry.getMeterRegistry().get(\"opentelemetry\");", "originalCommit": "a8376a6e119976a18a4e46373cdae7e991c556b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYyMjY4MA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/889#discussion_r381622680", "bodyText": "sure! I like that.", "author": "jkwatson", "createdAt": "2020-02-20T00:19:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYyMjQ0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYyMzIyMQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/889#discussion_r381623221", "bodyText": "updated", "author": "jkwatson", "createdAt": "2020-02-20T00:21:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYyMjQ0OA=="}], "type": "inlineReview"}, {"oid": "a2bf9f5dd6e991bfd73e4c430a89ffa16ee6a493", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/a2bf9f5dd6e991bfd73e4c430a89ffa16ee6a493", "message": "name the meter more specifically for the tracing package", "committedDate": "2020-02-20T00:19:59Z", "type": "commit"}]}