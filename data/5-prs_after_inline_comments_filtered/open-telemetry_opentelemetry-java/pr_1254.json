{"pr_number": 1254, "pr_title": "Configuration for Disruptor and Zipkin", "pr_createdAt": "2020-05-20T08:21:20Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/1254", "timeline": [{"oid": "86fe1418d84de3c4f25b60935a80f0b2fd3441e1", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/86fe1418d84de3c4f25b60935a80f0b2fd3441e1", "message": "add configuration for Disruptor and Zipkin", "committedDate": "2020-05-20T07:59:13Z", "type": "commit"}, {"oid": "0f198257738a6acad0a230826e428a40c601004e", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/0f198257738a6acad0a230826e428a40c601004e", "message": "Fix checkstyle violation", "committedDate": "2020-05-20T08:31:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA5MDczNQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1254#discussion_r428090735", "bodyText": "note: both of these are valid spellings. I'm ok with either.", "author": "jkwatson", "createdAt": "2020-05-20T15:09:34Z", "path": "exporters/zipkin/src/main/java/io/opentelemetry/exporters/zipkin/ZipkinExporterConfiguration.java", "diffHunk": "@@ -68,7 +92,7 @@ public static Builder builder() {\n      * <p>This is a primary label for trace lookup and aggregation, so it should be intuitive and\n      * consistent. Many use a name from service discovery.\n      *\n-     * <p>Note: this value, will be superceded by the value of {@link\n+     * <p>Note: this value, will be superseded by the value of {@link", "originalCommit": "0f198257738a6acad0a230826e428a40c601004e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA5MTUzMA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1254#discussion_r428091530", "bodyText": "do we have a unit test for this new method?", "author": "jkwatson", "createdAt": "2020-05-20T15:10:42Z", "path": "sdk/src/main/java/io/opentelemetry/sdk/common/export/ConfigBuilder.java", "diffHunk": "@@ -139,4 +139,19 @@ protected static Long getLongProperty(String name, Map<String, String> map) {\n       return null;\n     }\n   }\n+\n+  /**\n+   * Get a {@link String} property from the map, {@code null} if it cannot be found.\n+   *\n+   * @param name The property name\n+   * @param map The map where to look for the property\n+   * @return the {@link String} value of the property, {@code null} if the property cannot be found.\n+   */\n+  @Nullable\n+  protected static String getStringProperty(String name, Map<String, String> map) {", "originalCommit": "0f198257738a6acad0a230826e428a40c601004e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE1NTMzOA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1254#discussion_r428155338", "bodyText": "I think we should add tests for this.\nAlso this should just be map.get(). I am confused. https://docs.oracle.com/javase/8/docs/api/java/util/Map.html#get-java.lang.Object-", "author": "bogdandrutu", "createdAt": "2020-05-20T16:39:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA5MTUzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc3MTI1OA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1254#discussion_r429771258", "bodyText": "I'll provide tests for this in a separate PR with further cleanups :)", "author": "thisthat", "createdAt": "2020-05-25T07:21:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA5MTUzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIyMTk4NQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1254#discussion_r428221985", "bodyText": "Can we write unit tests for this?", "author": "jkwatson", "createdAt": "2020-05-20T18:30:45Z", "path": "exporters/zipkin/src/main/java/io/opentelemetry/exporters/zipkin/ZipkinExporterConfiguration.java", "diffHunk": "@@ -122,5 +146,26 @@ public Builder setEndpoint(String endpoint) {\n      * @since 0.4.0\n      */\n     public abstract ZipkinExporterConfiguration build();\n+\n+    /**\n+     * Sets the configuration values from the given configuration map for only the available keys.\n+     *\n+     * @param configMap {@link Map} holding the configuration values.\n+     * @return this.\n+     */\n+    @Override\n+    protected Builder fromConfigMap(", "originalCommit": "0f198257738a6acad0a230826e428a40c601004e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIyMjE1Mw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1254#discussion_r428222153", "bodyText": "Can you write unit tests for this?", "author": "jkwatson", "createdAt": "2020-05-20T18:30:57Z", "path": "sdk_contrib/async_processor/src/main/java/io/opentelemetry/sdk/contrib/trace/export/DisruptorAsyncSpanProcessor.java", "diffHunk": "@@ -149,6 +183,29 @@ public DisruptorAsyncSpanProcessor build() {\n           spanProcessor.isStartRequired(),\n           spanProcessor.isEndRequired());\n     }\n+\n+    @Override\n+    protected Builder fromConfigMap(", "originalCommit": "0f198257738a6acad0a230826e428a40c601004e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "fc868cc590ddd9710928929f2ff97e8013c9ad02", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/fc868cc590ddd9710928929f2ff97e8013c9ad02", "message": "Address feedback", "committedDate": "2020-05-25T07:22:51Z", "type": "commit"}, {"oid": "c81dfe7c5a30119a6c42f34932c635c7063b1dba", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/c81dfe7c5a30119a6c42f34932c635c7063b1dba", "message": "Update Javadoc", "committedDate": "2020-05-25T07:46:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUzMjM5OA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1254#discussion_r430532398", "bodyText": "We need a test like this for the zipkin config, as well.", "author": "jkwatson", "createdAt": "2020-05-26T16:08:07Z", "path": "sdk_contrib/async_processor/src/test/java/io/opentelemetry/sdk/contrib/trace/export/DisruptorAsyncSpanProcessorTest.java", "diffHunk": "@@ -268,4 +272,26 @@ public void multipleForceFlush() {\n     assertThat(incrementSpanProcessor.getCounterOnExportedForceFlushSpans()).isEqualTo(tenK);\n     assertThat(incrementSpanProcessor.getCounterOnShutdown()).isEqualTo(1);\n   }\n+\n+  abstract static class ConfigBuilderTest extends ConfigBuilder<ConfigBuilderTest> {\n+    public static NamingConvention getNaming() {\n+      return NamingConvention.DOT;\n+    }\n+  }\n+\n+  @Test\n+  public void configTest() {", "originalCommit": "c81dfe7c5a30119a6c42f34932c635c7063b1dba", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkwOTU4Nw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1254#discussion_r430909587", "bodyText": "Thank you! I totally miss it! \ud83e\udd26", "author": "thisthat", "createdAt": "2020-05-27T07:25:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUzMjM5OA=="}], "type": "inlineReview"}, {"oid": "690b2f697da529e7d6d8897274b23412a4f58ed3", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/690b2f697da529e7d6d8897274b23412a4f58ed3", "message": "Add missing config test for Zipkin Exporter", "committedDate": "2020-05-27T07:24:37Z", "type": "commit"}]}