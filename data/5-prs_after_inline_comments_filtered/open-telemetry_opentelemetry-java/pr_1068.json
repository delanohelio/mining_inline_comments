{"pr_number": 1068, "pr_title": "Add forceFlush on TracerSdkProvider.", "pr_createdAt": "2020-04-02T12:05:35Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/1068", "timeline": [{"oid": "5e0f8a9251f9651c95d564ddb15df377e0d2fc64", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/5e0f8a9251f9651c95d564ddb15df377e0d2fc64", "message": "Add forceFlush on TracerSdkProvider.\n\nSince there is no method to get the SpanProcessor(s),\nthere is no way to actually use the forceFlush API otherwise.", "committedDate": "2020-04-02T11:54:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM5NDYyNg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1068#discussion_r402394626", "bodyText": "Do we need this on the SDK? Probably yes, but would like to understand the motivation you had.", "author": "bogdandrutu", "createdAt": "2020-04-02T15:15:33Z", "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/TracerSdkProvider.java", "diffHunk": "@@ -119,6 +119,15 @@ public void shutdown() {\n     sharedState.stop();\n   }\n \n+  /**\n+   * Requests the active span processor to process all span events that have not yet been processed.\n+   *\n+   * @see SpanProcessor#forceFlush()\n+   */\n+  public void forceFlush() {\n+    sharedState.getActiveSpanProcessor().forceFlush();\n+  }\n+", "originalCommit": "5e0f8a9251f9651c95d564ddb15df377e0d2fc64", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQyNDY4NQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1068#discussion_r402424685", "bodyText": "See #1068 (comment)", "author": "Oberon00", "createdAt": "2020-04-02T15:56:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM5NDYyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQyOTI5Ng==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1068#discussion_r402429296", "bodyText": "This is also in the Specification ;)", "author": "carlosalberto", "createdAt": "2020-04-02T16:02:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM5NDYyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQzMTQ3OA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1068#discussion_r402431478", "bodyText": "Ah, makes sense!", "author": "Oberon00", "createdAt": "2020-04-02T16:05:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM5NDYyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQzMzMzMg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1068#discussion_r402433332", "bodyText": "@carlosalberto Actually it's not, only shutdown is: https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/sdk-tracing.md#shutdown-1. Also forceFlush is not on the exporter. I'll try creating a PR.", "author": "Oberon00", "createdAt": "2020-04-02T16:08:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM5NDYyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQzNTA4MA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1068#discussion_r402435080", "bodyText": "Reading more carefully, it seems that the spec does not even specify shutdown on the TracerProvider either, only the getTracer method in the API.", "author": "Oberon00", "createdAt": "2020-04-02T16:10:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM5NDYyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQzNTQxMw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1068#discussion_r402435413", "bodyText": "It's only in the spec for a SpanProcessor, not for the SDK Tracer implementation, unless I missed that somewhere.", "author": "jkwatson", "createdAt": "2020-04-02T16:11:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM5NDYyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ1MDgwNQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1068#discussion_r402450805", "bodyText": "Oh, right. I misread that one. In any case, I think it makes sense to have in the Tracer SDK section. I don't imagine keeping the processor object around for this specific task.", "author": "carlosalberto", "createdAt": "2020-04-02T16:34:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM5NDYyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUwNTQwNQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1068#discussion_r402505405", "bodyText": "@bogdandrutu any more clarification needed on this?", "author": "jkwatson", "createdAt": "2020-04-02T17:55:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM5NDYyNg=="}], "type": "inlineReview"}]}