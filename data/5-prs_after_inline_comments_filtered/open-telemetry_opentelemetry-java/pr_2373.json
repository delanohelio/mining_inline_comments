{"pr_number": 2373, "pr_title": "Remove most addspanprocessor mutator invocations.", "pr_createdAt": "2020-12-21T06:04:06Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/2373", "timeline": [{"oid": "1bfab6dff5b99569a1eade9a4b1eafaf6029bc9a", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/1bfab6dff5b99569a1eade9a4b1eafaf6029bc9a", "message": "Remove more addSpanProcessor mutations", "committedDate": "2020-12-21T05:01:29Z", "type": "commit"}, {"oid": "1c4c8f507643288eddbaecb0eab1095e69212543", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/1c4c8f507643288eddbaecb0eab1095e69212543", "message": "Merge branch 'master' of github.com:open-telemetry/opentelemetry-java into remove-more-addspanprocessor", "committedDate": "2020-12-21T05:37:03Z", "type": "commit"}, {"oid": "df1153af95ea9b74747c5192b2acab653295d20a", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/df1153af95ea9b74747c5192b2acab653295d20a", "message": "Merge", "committedDate": "2020-12-21T06:03:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjUyNDQyOA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2373#discussion_r546524428", "bodyText": "span processor leak fixed :)", "author": "anuraaga", "createdAt": "2020-12-21T06:04:59Z", "path": "opencensus-shim/src/test/java/io/opentelemetry/opencensusshim/TraceInteroperabilityTest.java", "diffHunk": "@@ -56,20 +59,32 @@\n \n   private static final String NULL_SPAN_ID = \"0000000000000000\";\n \n-  @Captor private ArgumentCaptor<Collection<SpanData>> spanDataCaptor;\n-\n-  @Spy private SpanExporter spanExporter;\n+  // Initialize OpenTelemetry statically because OpenCensus is.\n+  private static final SpanExporter spanExporter;\n+  private static final OpenTelemetry openTelemetry;\n \n-  @BeforeEach\n-  public void init() {\n+  static {\n+    spanExporter = spy(SpanExporter.class);\n     when(spanExporter.export(anyList())).thenReturn(CompletableResultCode.ofSuccess());\n+\n     SpanProcessor spanProcessor = SimpleSpanProcessor.builder(spanExporter).build();\n-    OpenTelemetrySdk.getGlobalTracerManagement().addSpanProcessor(spanProcessor);", "originalCommit": "df1153af95ea9b74747c5192b2acab653295d20a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc3OTg0NQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2373#discussion_r546779845", "bodyText": "I don't think Simple processor needs this, but it is a good pattern to follow and shutdown the sdk/processor all the time.", "author": "bogdandrutu", "createdAt": "2020-12-21T15:46:59Z", "path": "sdk/testing/src/test/java/io/opentelemetry/sdk/testing/exporter/InMemorySpanExporterTest.java", "diffHunk": "@@ -23,13 +23,17 @@\n \n /** Unit tests for {@link InMemorySpanExporter}. */\n class InMemorySpanExporterTest {\n-  private final SdkTracerProvider sdkTracerProvider = SdkTracerProvider.builder().build();\n-  private final Tracer tracer = sdkTracerProvider.get(\"InMemorySpanExporterTest\");\n   private final InMemorySpanExporter exporter = InMemorySpanExporter.create();\n \n+  private Tracer tracer;\n+\n   @BeforeEach\n   void setup() {\n-    sdkTracerProvider.addSpanProcessor(SimpleSpanProcessor.builder(exporter).build());\n+    tracer =\n+        SdkTracerProvider.builder()", "originalCommit": "df1153af95ea9b74747c5192b2acab653295d20a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjgyNTIxMQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2373#discussion_r546825211", "bodyText": "it's a little odd to use this class name to call a static method on itself, but it's not a deal breaker.", "author": "jkwatson", "createdAt": "2020-12-21T17:10:05Z", "path": "integration-tests/src/main/java/io/opentelemetry/SendTraceToJaeger.java", "diffHunk": "@@ -78,8 +83,8 @@ public static void main(String[] args) {\n \n     // Start the example\n     SendTraceToJaeger example = new SendTraceToJaeger(ip, port);\n-    example.setupJaegerExporter();\n-    example.myWonderfulUseCase();\n+    OpenTelemetry openTelemetry = example.initOpenTelemetry();\n+    SendTraceToJaeger.myWonderfulUseCase(openTelemetry);", "originalCommit": "df1153af95ea9b74747c5192b2acab653295d20a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzAwODc1Mg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2373#discussion_r547008752", "bodyText": "you mean just write this as myWonderfulUseCase(openTelemetry); ?", "author": "bogdandrutu", "createdAt": "2020-12-22T01:01:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjgyNTIxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzAyMzE0NQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2373#discussion_r547023145", "bodyText": "Error prone doesn't like", "author": "anuraaga", "createdAt": "2020-12-22T01:56:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjgyNTIxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzAyNTkyMQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2373#discussion_r547025921", "bodyText": "Can you paste the error? I am curious", "author": "bogdandrutu", "createdAt": "2020-12-22T02:06:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjgyNTIxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzAyODQ1OA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2373#discussion_r547028458", "bodyText": "Sorry my bad - error prone didn't like example.static(), but static() no problem. Error message earlier threw me off\n/Users/aanuraag/git/opentelemetry-java/integration-tests/src/main/java/io/opentelemetry/SendTraceToJaeger.java:87: warning: [static] static method should be qualified by type name, SendTraceToJaeger, instead of by an expression\n    example.myWonderfulUseCase(openTelemetry);\n           ^", "author": "anuraaga", "createdAt": "2020-12-22T02:16:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjgyNTIxMQ=="}], "type": "inlineReview"}, {"oid": "c8207dd4745608ade3fd2a94d1dbce2435e1fae6", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/c8207dd4745608ade3fd2a94d1dbce2435e1fae6", "message": "Cleanup", "committedDate": "2020-12-22T02:18:15Z", "type": "commit"}]}