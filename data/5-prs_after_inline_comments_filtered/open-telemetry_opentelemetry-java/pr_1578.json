{"pr_number": 1578, "pr_title": "Create a static method on Attributes to create an Attributes builder from ReadableAttributes", "pr_createdAt": "2020-08-22T12:15:13Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/1578", "timeline": [{"oid": "ea92aa2d10eb1145009a9e46747de8ceaa0c4dfe", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/ea92aa2d10eb1145009a9e46747de8ceaa0c4dfe", "message": "Create a static method on Attributes to create an Attributes builder from ReadableAttributes", "committedDate": "2020-08-22T12:13:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEwMzMwOA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1578#discussion_r475103308", "bodyText": "I'd rather just copy in the internal data(), rather than use the forEach for this builder. I think it's a bit more direct and clear that way (and avoids the allocation of an extra consumer instance).", "author": "jkwatson", "createdAt": "2020-08-22T15:50:20Z", "path": "api/src/main/java/io/opentelemetry/common/Attributes.java", "diffHunk": "@@ -133,6 +133,19 @@ public static Builder newBuilder() {\n     return new Builder();\n   }\n \n+  /** Returns a new {@link Builder} instance from ReadableAttributes. */\n+  public static Builder newBuilder(ReadableAttributes attributes) {\n+    final Builder builder = new Builder();\n+    attributes.forEach(", "originalCommit": "ea92aa2d10eb1145009a9e46747de8ceaa0c4dfe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTExNDg5OQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1578#discussion_r475114899", "bodyText": "I don't quite understand what you mean. but now we can't get all the AttributeValue  directly in ReadableAttributes  If don't use forEach . was I wrong?", "author": "dengliming", "createdAt": "2020-08-22T17:57:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEwMzMwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEzNjk3MQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1578#discussion_r475136971", "bodyText": "oh you are totally right. We don't know what implementation of ReadableAttributes they might be passing in. You could put in an instanceOf check to see if it's an instance of Attributes then cast to it, so save the extra allocation, but it's probably not worth it at this point. Never mind!", "author": "jkwatson", "createdAt": "2020-08-22T20:47:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEwMzMwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE4MDE2NA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1578#discussion_r475180164", "bodyText": "Can you also add a test to make sure the original attributes isn't mutated?", "author": "anuraaga", "createdAt": "2020-08-23T06:49:24Z", "path": "api/src/test/java/io/opentelemetry/common/AttributesTest.java", "diffHunk": "@@ -138,6 +138,17 @@ void builder() {\n                 \"long\", longAttributeValue(100),\n                 \"double\", doubleAttributeValue(33.44),\n                 \"boolean\", booleanAttributeValue(false)));\n+\n+    Attributes.Builder newAttributes = Attributes.newBuilder(attributes);", "originalCommit": "ea92aa2d10eb1145009a9e46747de8ceaa0c4dfe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE4MjIwOA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1578#discussion_r475182208", "bodyText": "I'm not sure I fully understand what you mean. Do you mean like this? assertThat if isEqualTo again\nAttributes wantAttributes =\n        Attributes.of(\n            \"string\", stringAttributeValue(\"value1\"),\n            \"long\", longAttributeValue(100),\n            \"double\", doubleAttributeValue(33.44),\n            \"boolean\", booleanAttributeValue(false));\n    assertThat(attributes).isEqualTo(wantAttributes);\n\n    Attributes.Builder newAttributes = Attributes.newBuilder(attributes);\n    newAttributes.setAttribute(\"newKey\", \"newValue\");\n    assertThat(newAttributes.build())\n        .isEqualTo(\n            Attributes.of(\n                \"string\", stringAttributeValue(\"value1\"),\n                \"long\", longAttributeValue(100),\n                \"double\", doubleAttributeValue(33.44),\n                \"boolean\", booleanAttributeValue(false),\n                \"newKey\", stringAttributeValue(\"newValue\")));\n    assertThat(attributes).isEqualTo(wantAttributes);", "author": "dengliming", "createdAt": "2020-08-23T07:07:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE4MDE2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE5MDc5Nw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1578#discussion_r475190797", "bodyText": "Yeah - there's a similar test for toBuilder so maybe you can copy the pattern\nhttps://www.github.com/open-telemetry/opentelemetry-java/tree/master/api%2Fsrc%2Ftest%2Fjava%2Fio%2Fopentelemetry%2Fcommon%2FAttributesTest.java", "author": "anuraaga", "createdAt": "2020-08-23T08:36:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE4MDE2NA=="}], "type": "inlineReview"}, {"oid": "7e78a9b8260fc7e72a0eeb78c4329dbed4961106", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/7e78a9b8260fc7e72a0eeb78c4329dbed4961106", "message": "Fix review", "committedDate": "2020-08-23T08:43:19Z", "type": "commit"}]}