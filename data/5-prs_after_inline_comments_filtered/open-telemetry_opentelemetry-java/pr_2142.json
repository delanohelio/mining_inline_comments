{"pr_number": 2142, "pr_title": "Add support for AWS Lambda resource attributes", "pr_createdAt": "2020-11-26T12:13:10Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/2142", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA2OTM0OA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2142#discussion_r533069348", "bodyText": "Can you rebase? I've removed the guava dependency from this module. You can use getOrDefault and just isEmpty instead I believe.", "author": "anuraaga", "createdAt": "2020-12-01T04:42:31Z", "path": "sdk-extensions/aws/src/main/java/io/opentelemetry/sdk/extension/aws/resource/LambdaResource.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package io.opentelemetry.sdk.extension.aws.resource;\n+\n+import static com.google.common.base.Strings.isNullOrEmpty;", "originalCommit": "701621e55240fb1ef767d2e1a82c227a182b68a9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzIzMDExNg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2142#discussion_r533230116", "bodyText": "Done.", "author": "mateuszrzeszutek", "createdAt": "2020-12-01T09:37:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA2OTM0OA=="}], "type": "inlineReview"}, {"oid": "5bf6424233e46344b3511e7b24fa37c942d62701", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/5bf6424233e46344b3511e7b24fa37c942d62701", "message": "Add support for AWS Lambda resource attributes", "committedDate": "2020-12-01T09:33:31Z", "type": "commit"}, {"oid": "47f6362f27defbd821322c27cfdb6678a32562bd", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/47f6362f27defbd821322c27cfdb6678a32562bd", "message": "Fix after rebase", "committedDate": "2020-12-01T09:37:29Z", "type": "commit"}, {"oid": "47f6362f27defbd821322c27cfdb6678a32562bd", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/47f6362f27defbd821322c27cfdb6678a32562bd", "message": "Fix after rebase", "committedDate": "2020-12-01T09:37:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzI1OTU5NQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2142#discussion_r533259595", "bodyText": "Shouldn't we check empty for this too? It's not clear why we check for the others only but not this one.", "author": "anuraaga", "createdAt": "2020-12-01T10:01:13Z", "path": "sdk-extensions/aws/src/main/java/io/opentelemetry/sdk/extension/aws/resource/LambdaResource.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package io.opentelemetry.sdk.extension.aws.resource;\n+\n+import io.opentelemetry.api.common.Attributes;\n+import io.opentelemetry.api.common.AttributesBuilder;\n+import io.opentelemetry.api.trace.attributes.SemanticAttributes;\n+import io.opentelemetry.sdk.resources.ResourceProvider;\n+import java.util.Map;\n+\n+/** A {@link ResourceProvider} which provides information about the AWS Lambda function. */\n+public final class LambdaResource extends ResourceProvider {\n+  private final Map<String, String> environmentVariables;\n+\n+  public LambdaResource() {\n+    this(System.getenv());\n+  }\n+\n+  // Visible for testing\n+  LambdaResource(Map<String, String> environmentVariables) {\n+    this.environmentVariables = environmentVariables;\n+  }\n+\n+  @Override\n+  protected Attributes getAttributes() {\n+    if (!isLambda()) {\n+      return Attributes.empty();\n+    }\n+    String region = environmentVariables.getOrDefault(\"AWS_REGION\", \"\");\n+    String functionName = environmentVariables.get(\"AWS_LAMBDA_FUNCTION_NAME\");\n+    String functionVersion = environmentVariables.getOrDefault(\"AWS_LAMBDA_FUNCTION_VERSION\", \"\");\n+\n+    AttributesBuilder builder =\n+        Attributes.builder()\n+            .put(SemanticAttributes.CLOUD_PROVIDER, SemanticAttributes.CloudProviderValues.AWS)\n+            .put(SemanticAttributes.FAAS_NAME, functionName);", "originalCommit": "47f6362f27defbd821322c27cfdb6678a32562bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzI3Nzc5Ng==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2142#discussion_r533277796", "bodyText": "This one cannot be empty, it's being checked in the isLambda() function.", "author": "mateuszrzeszutek", "createdAt": "2020-12-01T10:16:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzI1OTU5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzI4NTk1OQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2142#discussion_r533285959", "bodyText": "I refactored it a bit so that all env vars are retrieved in exactly the same way.", "author": "mateuszrzeszutek", "createdAt": "2020-12-01T10:23:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzI1OTU5NQ=="}], "type": "inlineReview"}, {"oid": "71b4ce836b1905e8bf6716bad3d604ac21eb480f", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/71b4ce836b1905e8bf6716bad3d604ac21eb480f", "message": "Minor refactor", "committedDate": "2020-12-01T10:21:59Z", "type": "commit"}, {"oid": "12cd4089b35ab8a426c7a5541d4d25169277571a", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/12cd4089b35ab8a426c7a5541d4d25169277571a", "message": "Minor refactor", "committedDate": "2020-12-01T10:23:26Z", "type": "commit"}, {"oid": "b6944578e70493bdc8668243f8c3d6edfddd6163", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/b6944578e70493bdc8668243f8c3d6edfddd6163", "message": "Minor refactor", "committedDate": "2020-12-01T10:24:52Z", "type": "commit"}]}