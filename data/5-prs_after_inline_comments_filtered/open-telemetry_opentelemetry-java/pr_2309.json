{"pr_number": 2309, "pr_title": "Make public src/main classes final where possible.", "pr_createdAt": "2020-12-15T08:36:38Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/2309", "timeline": [{"oid": "9c7044a1dde120590dd8454ae9afc93c472352fe", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/9c7044a1dde120590dd8454ae9afc93c472352fe", "message": "Make public src/main classes final where possible.", "committedDate": "2020-12-15T08:36:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE0NjUzOA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2309#discussion_r543146538", "bodyText": "Don't think I'm too sad to lose this check", "author": "anuraaga", "createdAt": "2020-12-15T08:36:54Z", "path": "exporters/jaeger-thrift/src/test/java/io/opentelemetry/exporter/jaeger/thrift/JaegerThriftSpanExporterTest.java", "diffHunk": "@@ -235,14 +234,12 @@ void testExportMultipleResources() throws SenderException, UnknownHostException\n   void configTest() {\n     Map<String, String> options = new HashMap<>();\n     String serviceName = \"myGreatService\";\n-    String endpoint = \"http://127.0.0.1:9090\";\n     options.put(\"otel.exporter.jaeger.service.name\", serviceName);\n-    options.put(\"otel.exporter.jaeger.endpoint\", endpoint);", "originalCommit": "9c7044a1dde120590dd8454ae9afc93c472352fe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE0NzExNA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2309#discussion_r543147114", "bodyText": "endpoint isn't allowed to start with http:// btw", "author": "anuraaga", "createdAt": "2020-12-15T08:37:48Z", "path": "exporters/otlp/src/test/java/io/opentelemetry/exporter/otlp/OtlpGrpcSpanExporterTest.java", "diffHunk": "@@ -50,23 +91,36 @@\n   @Test\n   void configTest() {\n     Map<String, String> options = new HashMap<>();\n-    options.put(\"otel.exporter.otlp.span.timeout\", \"12\");\n-    options.put(\"otel.exporter.otlp.span.endpoint\", \"http://localhost:6553\");", "originalCommit": "9c7044a1dde120590dd8454ae9afc93c472352fe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU3Mzc3NA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2309#discussion_r543573774", "bodyText": "I would expose a package protected getter for testing, to keep the logic that all members should be private final when possible.", "author": "bogdandrutu", "createdAt": "2020-12-15T18:12:48Z", "path": "exporters/jaeger-thrift/src/main/java/io/opentelemetry/exporter/jaeger/thrift/JaegerThriftSpanExporter.java", "diffHunk": "@@ -41,7 +41,8 @@\n   private static final String IP_KEY = \"ip\";\n   private static final String IP_DEFAULT = \"0.0.0.0\";\n   private final ThriftSender thriftSender;\n-  private final Process process;\n+  // Visible for testing\n+  final Process process;", "originalCommit": "9c7044a1dde120590dd8454ae9afc93c472352fe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU3NDAwMg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2309#discussion_r543574002", "bodyText": "ditto", "author": "bogdandrutu", "createdAt": "2020-12-15T18:13:10Z", "path": "exporters/jaeger/src/main/java/io/opentelemetry/exporter/jaeger/JaegerGrpcSpanExporter.java", "diffHunk": "@@ -49,8 +49,11 @@\n   private static final String IP_KEY = \"ip\";\n   private static final String IP_DEFAULT = \"0.0.0.0\";\n   private final CollectorServiceGrpc.CollectorServiceFutureStub stub;\n-  private final Model.Process.Builder processBuilder;\n-  private final ManagedChannel managedChannel;\n+\n+  // Visible for testing\n+  final Model.Process.Builder processBuilder;\n+  // Visible for testing\n+  final ManagedChannel managedChannel;", "originalCommit": "9c7044a1dde120590dd8454ae9afc93c472352fe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU3NTc5Mg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2309#discussion_r543575792", "bodyText": "This are great test, but why adding them in a PR that says it does make things final?", "author": "bogdandrutu", "createdAt": "2020-12-15T18:15:48Z", "path": "exporters/otlp/src/test/java/io/opentelemetry/exporter/otlp/OtlpGrpcSpanExporterTest.java", "diffHunk": "@@ -34,9 +42,42 @@\n import org.junit.jupiter.api.AfterEach;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n-import org.mockito.Mockito;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n \n class OtlpGrpcSpanExporterTest {\n+\n+  @RegisterExtension\n+  public static ServerExtension server =", "originalCommit": "9c7044a1dde120590dd8454ae9afc93c472352fe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc3MzU0Nw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2309#discussion_r543773547", "bodyText": "Without the spy (can't because of final), we lose a significant test that the key-value splitting logic is correct (a regression test since it was broken for a while).", "author": "anuraaga", "createdAt": "2020-12-15T23:54:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU3NTc5Mg=="}], "type": "inlineReview"}, {"oid": "597e2c2ff761436886b07a3ebfa9664fee79553b", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/597e2c2ff761436886b07a3ebfa9664fee79553b", "message": "methods", "committedDate": "2020-12-16T02:40:10Z", "type": "commit"}, {"oid": "0bd1befbbcdd081518553026cddb112de799c979", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/0bd1befbbcdd081518553026cddb112de799c979", "message": "Merge branch 'master' of github.com:open-telemetry/opentelemetry-java into public-final", "committedDate": "2020-12-16T03:38:08Z", "type": "commit"}, {"oid": "86e5abb42838e59700ef7f68babd8b5e8f4cda6e", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/86e5abb42838e59700ef7f68babd8b5e8f4cda6e", "message": "Spot", "committedDate": "2020-12-16T03:48:21Z", "type": "commit"}]}