{"pr_number": 1088, "pr_title": "Let the carrier be null on the inject methods, to support possible lambda usages", "pr_createdAt": "2020-04-07T21:27:42Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/1088", "timeline": [{"oid": "d13112ca347ff415c0d431d6f67db6404e721aa8", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/d13112ca347ff415c0d431d6f67db6404e721aa8", "message": "Let the carrier be null on the inject methods, to support possible lambda usages.", "committedDate": "2020-04-07T21:26:38Z", "type": "commit"}, {"oid": "17e188bdedb41b95a578601787ec1ef0a7710af9", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/17e188bdedb41b95a578601787ec1ef0a7710af9", "message": "update the javadoc/annotations to make the nullability clear.", "committedDate": "2020-04-09T15:54:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjMxMzYzNA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1088#discussion_r406313634", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Injects the value downstream. For example, as http headers. The carrier may be null to\n          \n          \n            \n               * Injects the value downstream, for example as HTTP headers. The carrier may be null to", "author": "Oberon00", "createdAt": "2020-04-09T16:06:45Z", "path": "context_prop/src/main/java/io/opentelemetry/context/propagation/HttpTextFormat.java", "diffHunk": "@@ -69,15 +69,17 @@\n   List<String> fields();\n \n   /**\n-   * Injects the value downstream. For example, as http headers.\n+   * Injects the value downstream. For example, as http headers. The carrier may be null to", "originalCommit": "17e188bdedb41b95a578601787ec1ef0a7710af9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjMxMzkzOQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1088#discussion_r406313939", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * facilitate calling this method with a java lambda for the {@link Setter}, in which case that\n          \n          \n            \n               * facilitate calling this method with a lambda for the {@link Setter}, in which case that\n          \n      \n    \n    \n  \n\nJava is redundant in a Javadoc, IMHO.", "author": "Oberon00", "createdAt": "2020-04-09T16:07:20Z", "path": "context_prop/src/main/java/io/opentelemetry/context/propagation/HttpTextFormat.java", "diffHunk": "@@ -69,15 +69,17 @@\n   List<String> fields();\n \n   /**\n-   * Injects the value downstream. For example, as http headers.\n+   * Injects the value downstream. For example, as http headers. The carrier may be null to\n+   * facilitate calling this method with a java lambda for the {@link Setter}, in which case that", "originalCommit": "17e188bdedb41b95a578601787ec1ef0a7710af9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjMxNTg2Mg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1088#discussion_r406315862", "bodyText": "fair. :)", "author": "jkwatson", "createdAt": "2020-04-09T16:10:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjMxMzkzOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjMxNDE5Mg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1088#discussion_r406314192", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * null will be passed to your {@link Setter} implementation.\n          \n          \n            \n               * null will be passed to the {@link Setter} implementation.", "author": "Oberon00", "createdAt": "2020-04-09T16:07:45Z", "path": "context_prop/src/main/java/io/opentelemetry/context/propagation/HttpTextFormat.java", "diffHunk": "@@ -69,15 +69,17 @@\n   List<String> fields();\n \n   /**\n-   * Injects the value downstream. For example, as http headers.\n+   * Injects the value downstream. For example, as http headers. The carrier may be null to\n+   * facilitate calling this method with a java lambda for the {@link Setter}, in which case that\n+   * null will be passed to your {@link Setter} implementation.", "originalCommit": "17e188bdedb41b95a578601787ec1ef0a7710af9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjMxNDgyMg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1088#discussion_r406314822", "bodyText": "While at it, you could also add @Nonnull.", "author": "Oberon00", "createdAt": "2020-04-09T16:08:45Z", "path": "context_prop/src/main/java/io/opentelemetry/context/propagation/HttpTextFormat.java", "diffHunk": "@@ -69,15 +69,17 @@\n   List<String> fields();\n \n   /**\n-   * Injects the value downstream. For example, as http headers.\n+   * Injects the value downstream. For example, as http headers. The carrier may be null to\n+   * facilitate calling this method with a java lambda for the {@link Setter}, in which case that\n+   * null will be passed to your {@link Setter} implementation.\n    *\n    * @param context the {@code Context} containing the value to be injected.\n    * @param carrier holds propagation fields. For example, an outgoing message or http request.\n    * @param setter invoked for each propagation key to add or remove.\n    * @param <C> carrier of propagation fields, such as an http request\n    * @since 0.1.0\n    */\n-  <C> void inject(Context context, C carrier, Setter<C> setter);\n+  <C> void inject(Context context, @Nullable C carrier, Setter<C> setter);", "originalCommit": "17e188bdedb41b95a578601787ec1ef0a7710af9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjMxNjc2MQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1088#discussion_r406316761", "bodyText": "is that implied? We haven't done a lot of annotations like that on our parameters. If we want to start annotating all parameters on API methods, let's do that as a separate PR.", "author": "jkwatson", "createdAt": "2020-04-09T16:11:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjMxNDgyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjMyNjMxNg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1088#discussion_r406326316", "bodyText": "Right, let's not expand the scope of this PR too much \ud83d\udc4c", "author": "Oberon00", "createdAt": "2020-04-09T16:27:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjMxNDgyMg=="}], "type": "inlineReview"}, {"oid": "358111ea573d0d9631df4323a513688116ba33c4", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/358111ea573d0d9631df4323a513688116ba33c4", "message": "Update context_prop/src/main/java/io/opentelemetry/context/propagation/HttpTextFormat.java\n\nCo-Authored-By: Christian Neum\u00fcller <christian+github@neumueller.me>", "committedDate": "2020-04-09T16:09:53Z", "type": "commit"}, {"oid": "ed31642c391809c9e0b63da34e7bcb5e205ed3e5", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/ed31642c391809c9e0b63da34e7bcb5e205ed3e5", "message": "Update context_prop/src/main/java/io/opentelemetry/context/propagation/HttpTextFormat.java\n\nCo-Authored-By: Christian Neum\u00fcller <christian+github@neumueller.me>", "committedDate": "2020-04-09T16:10:25Z", "type": "commit"}, {"oid": "655e0822bcef0baf65da26d0d1b62abb81bad583", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/655e0822bcef0baf65da26d0d1b62abb81bad583", "message": "Update context_prop/src/main/java/io/opentelemetry/context/propagation/HttpTextFormat.java\n\nCo-Authored-By: Christian Neum\u00fcller <christian+github@neumueller.me>", "committedDate": "2020-04-09T16:10:36Z", "type": "commit"}, {"oid": "388f5cdd04d0da7f337b2a8c2af58e05e9da4c5b", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/388f5cdd04d0da7f337b2a8c2af58e05e9da4c5b", "message": "update formatting", "committedDate": "2020-04-09T16:16:42Z", "type": "commit"}]}