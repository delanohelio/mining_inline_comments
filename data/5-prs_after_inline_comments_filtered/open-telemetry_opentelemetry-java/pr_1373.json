{"pr_number": 1373, "pr_title": "enhance OTLP Exporter configuration", "pr_createdAt": "2020-06-25T14:27:52Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/1373", "timeline": [{"oid": "f356998d6c6c41bced3ed2173c5b3777bee09bb1", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/f356998d6c6c41bced3ed2173c5b3777bee09bb1", "message": "enhance OTLP Exporter configuration\n\nSigned-off-by: Sergei Malafeev <sergei@malafeev.org>", "committedDate": "2020-06-25T14:19:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTYyNjYzNw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1373#discussion_r445626637", "bodyText": "There is a proposal in the specs to standardize environment variables for this sort of thing. Can you please add a comment to https://github.com/open-telemetry/opentelemetry-specification/pull/666/files with the needs here?", "author": "jkwatson", "createdAt": "2020-06-25T15:02:07Z", "path": "exporters/otlp/src/main/java/io/opentelemetry/exporters/otlp/OtlpGrpcSpanExporter.java", "diffHunk": "@@ -41,13 +49,21 @@\n  * <ul>\n  *   <li>{@code otel.otlp.span.timeout}: to set the max waiting time allowed to send each span\n  *       batch.\n+ *   <li>{@code otel.otlp.endpoint}: to set the endpoint to connect to.\n+ *   <li>{@code otel.otlp.use.tls}: to set use or not TLS.\n+ *   <li>{@code otel.otlp.metadata} to set key-value pairs separated by semicolon to pass as request\n+ *       metadata.\n  * </ul>\n  *\n  * <p>For environment variables, {@link OtlpGrpcSpanExporter} will look for the following names:\n  *\n  * <ul>\n  *   <li>{@code OTEL_OTLP_SPAN_TIMEOUT}: to set the max waiting time allowed to send each span\n  *       batch.\n+ *   <li>{@code OTEL_OTLP_ENDPOINT}: to set the endpoint to connect to.", "originalCommit": "f356998d6c6c41bced3ed2173c5b3777bee09bb1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTYzNzQzMw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1373#discussion_r445637433", "bodyText": "open-telemetry/opentelemetry-specification#666 (comment)", "author": "malafeev", "createdAt": "2020-06-25T15:17:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTYyNjYzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkyOTY0MA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1373#discussion_r445929640", "bodyText": "@Nullable", "author": "anuraaga", "createdAt": "2020-06-26T02:00:58Z", "path": "exporters/otlp/src/main/java/io/opentelemetry/exporters/otlp/OtlpGrpcSpanExporter.java", "diffHunk": "@@ -146,11 +162,18 @@ public void shutdown() {\n   /** Builder utility for this exporter. */\n   public static class Builder extends ConfigBuilder<Builder> {\n     private static final String KEY_SPAN_TIMEOUT = \"otel.otlp.span.timeout\";\n+    private static final String KEY_ENDPOINT = \"otel.otlp.endpoint\";\n+    private static final String KEY_USE_TLS = \"otel.otlp.use.tls\";\n+    private static final String KEY_METADATA = \"otel.otlp.metadata\";\n     private ManagedChannel channel;\n     private long deadlineMs = 1_000; // 1 second\n+    private String endpoint;\n+    private boolean useTls;\n+    private Metadata metadata;", "originalCommit": "f356998d6c6c41bced3ed2173c5b3777bee09bb1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAwMjM1Mg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1373#discussion_r446002352", "bodyText": "added", "author": "malafeev", "createdAt": "2020-06-26T06:57:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkyOTY0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkyOTY3MQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1373#discussion_r445929671", "bodyText": "@Nullable", "author": "anuraaga", "createdAt": "2020-06-26T02:01:07Z", "path": "exporters/otlp/src/main/java/io/opentelemetry/exporters/otlp/OtlpGrpcSpanExporter.java", "diffHunk": "@@ -146,11 +162,18 @@ public void shutdown() {\n   /** Builder utility for this exporter. */\n   public static class Builder extends ConfigBuilder<Builder> {\n     private static final String KEY_SPAN_TIMEOUT = \"otel.otlp.span.timeout\";\n+    private static final String KEY_ENDPOINT = \"otel.otlp.endpoint\";\n+    private static final String KEY_USE_TLS = \"otel.otlp.use.tls\";\n+    private static final String KEY_METADATA = \"otel.otlp.metadata\";\n     private ManagedChannel channel;\n     private long deadlineMs = 1_000; // 1 second\n+    private String endpoint;", "originalCommit": "f356998d6c6c41bced3ed2173c5b3777bee09bb1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAzMTk3MQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1373#discussion_r446031971", "bodyText": "added", "author": "malafeev", "createdAt": "2020-06-26T08:05:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkyOTY3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkyOTkxNw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1373#discussion_r445929917", "bodyText": "Extra semicolon", "author": "anuraaga", "createdAt": "2020-06-26T02:02:18Z", "path": "exporters/otlp/src/main/java/io/opentelemetry/exporters/otlp/OtlpGrpcSpanExporter.java", "diffHunk": "@@ -196,6 +274,27 @@ protected Builder fromConfigMap(\n       if (value != null) {\n         this.setDeadlineMs(value);\n       }\n+      String endpointValue = getStringProperty(KEY_ENDPOINT, configMap);\n+      if (endpointValue != null) {\n+        this.setEndpoint(endpointValue);\n+      }\n+\n+      Boolean useTlsValue = getBooleanProperty(KEY_USE_TLS, configMap);\n+      if (useTlsValue != null) {\n+        this.setUseTls(useTlsValue);\n+      }\n+\n+      String metadataValue = getStringProperty(KEY_METADATA, configMap);\n+      if (metadataValue != null) {\n+        for (String keyValueString : Splitter.on(';').split(metadataValue)) {\n+          final List<String> keyValue = Splitter.on('=').splitToList(keyValueString);\n+          ;", "originalCommit": "f356998d6c6c41bced3ed2173c5b3777bee09bb1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAwMjM4Ng==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1373#discussion_r446002386", "bodyText": "removed", "author": "malafeev", "createdAt": "2020-06-26T06:58:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkyOTkxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMyNTMyOQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1373#discussion_r446325329", "bodyText": "looks like it's still there...", "author": "jkwatson", "createdAt": "2020-06-26T17:47:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkyOTkxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ5MzgyNg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1373#discussion_r446493826", "bodyText": "removed one more time", "author": "malafeev", "createdAt": "2020-06-27T06:50:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkyOTkxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkzMDAyOQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1373#discussion_r445930029", "bodyText": "Believe you can use Splitter.withKeyValueSeparator", "author": "anuraaga", "createdAt": "2020-06-26T02:02:48Z", "path": "exporters/otlp/src/main/java/io/opentelemetry/exporters/otlp/OtlpGrpcSpanExporter.java", "diffHunk": "@@ -196,6 +274,27 @@ protected Builder fromConfigMap(\n       if (value != null) {\n         this.setDeadlineMs(value);\n       }\n+      String endpointValue = getStringProperty(KEY_ENDPOINT, configMap);\n+      if (endpointValue != null) {\n+        this.setEndpoint(endpointValue);\n+      }\n+\n+      Boolean useTlsValue = getBooleanProperty(KEY_USE_TLS, configMap);\n+      if (useTlsValue != null) {\n+        this.setUseTls(useTlsValue);\n+      }\n+\n+      String metadataValue = getStringProperty(KEY_METADATA, configMap);\n+      if (metadataValue != null) {\n+        for (String keyValueString : Splitter.on(';').split(metadataValue)) {\n+          final List<String> keyValue = Splitter.on('=').splitToList(keyValueString);", "originalCommit": "f356998d6c6c41bced3ed2173c5b3777bee09bb1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkzMDI4Nw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1373#discussion_r445930287", "bodyText": "Would be good to create a static final with the splitter\n`private static final Splitter.MapSplitter METADATA_PROPERTY_SPLITTER = Splitter.on(';').trimResults().omitEmptyStrings().withKeyValueSplitter('=');", "author": "anuraaga", "createdAt": "2020-06-26T02:04:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkzMDAyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAwMTQxOQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1373#discussion_r446001419", "bodyText": "withKeyValueSeparator  is annotated by @Beta, should we use it?", "author": "malafeev", "createdAt": "2020-06-26T06:55:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkzMDAyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAxMTIzMw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1373#discussion_r446011233", "bodyText": "Oof - good catch, I always forget that. Yeah let's not use it.", "author": "anuraaga", "createdAt": "2020-06-26T07:20:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkzMDAyOQ=="}], "type": "inlineReview"}, {"oid": "4d8f9b3f245233f8b18af4fa3df776f62074fd17", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/4d8f9b3f245233f8b18af4fa3df776f62074fd17", "message": "add @Nullable to nullable fields\n\nSigned-off-by: Sergei Malafeev <sergei@malafeev.org>", "committedDate": "2020-06-26T06:57:45Z", "type": "commit"}, {"oid": "6b6a7da3e2655f48fe31e26535d1ae5637f97d75", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/6b6a7da3e2655f48fe31e26535d1ae5637f97d75", "message": "add @Nonnull to arguments of addHeader\n\nSigned-off-by: Sergei Malafeev <sergei@malafeev.org>", "committedDate": "2020-06-26T07:16:20Z", "type": "commit"}, {"oid": "42421f95b5f32164361b78738aaf968d3ad49ab9", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/42421f95b5f32164361b78738aaf968d3ad49ab9", "message": "remove semicolon\n\nSigned-off-by: Sergei Malafeev <sergei@malafeev.org>", "committedDate": "2020-06-27T06:49:47Z", "type": "commit"}, {"oid": "59e7c9e5945c3d4572291fcad29f23404aee8d99", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/59e7c9e5945c3d4572291fcad29f23404aee8d99", "message": "remove @Nonnull\n\nSigned-off-by: Sergei Malafeev <sergei@malafeev.org>", "committedDate": "2020-06-27T06:52:22Z", "type": "commit"}]}