{"pr_number": 10760, "pr_title": "Optimize offset read from page store", "pr_createdAt": "2020-01-17T01:10:15Z", "pr_url": "https://github.com/Alluxio/alluxio/pull/10760", "timeline": [{"oid": "d6d453fe1bd5714a5c3c4e5c96333b561b25dc10", "url": "https://github.com/Alluxio/alluxio/commit/d6d453fe1bd5714a5c3c4e5c96333b561b25dc10", "message": "optimize offset read", "committedDate": "2020-01-17T01:06:59Z", "type": "commit"}, {"oid": "315291168928b3f47a0c03033801ab017d7d3f66", "url": "https://github.com/Alluxio/alluxio/commit/315291168928b3f47a0c03033801ab017d7d3f66", "message": "fix checkstyles", "committedDate": "2020-01-17T01:27:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODEwMzQ0OA==", "url": "https://github.com/Alluxio/alluxio/pull/10760#discussion_r368103448", "bodyText": "[ERROR] alluxio.client.file.cache.store.LocalPageStore.get(PageId, int) may fail to clean up java.io.InputStream on checked exception [alluxio.client.file.cache.store.LocalPageStore, alluxio.client.file.cache.store.LocalPageStore] Obligation to clean up resource created at LocalPageStore.java:[line 78] is not dischargedPath continues at LocalPageStore.java:[line 79] OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE", "author": "apc999", "createdAt": "2020-01-17T19:37:51Z", "path": "core/client/fs/src/main/java/alluxio/client/file/cache/store/LocalPageStore.java", "diffHunk": "@@ -69,12 +69,14 @@ public void put(PageId pageId, byte[] page) throws IOException {\n   }\n \n   @Override\n-  public ReadableByteChannel get(PageId pageId) throws IOException, PageNotFoundException {\n+  public ReadableByteChannel get(PageId pageId, int pageOffset)\n+      throws IOException, PageNotFoundException {\n     Path p = getFilePath(pageId);\n     if (!Files.exists(p)) {\n       throw new PageNotFoundException(p.toString());\n     }\n     FileInputStream fis = new FileInputStream(p.toFile());\n+    fis.skip(pageOffset);", "originalCommit": "315291168928b3f47a0c03033801ab017d7d3f66", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE2MzI4OQ==", "url": "https://github.com/Alluxio/alluxio/pull/10760#discussion_r368163289", "bodyText": "Fixed.", "author": "bf8086", "createdAt": "2020-01-17T22:31:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODEwMzQ0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODEwNTIwNw==", "url": "https://github.com/Alluxio/alluxio/pull/10760#discussion_r368105207", "bodyText": "what is expected if pageOffset > page len? Exception or an empty channel?", "author": "apc999", "createdAt": "2020-01-17T19:42:07Z", "path": "core/client/fs/src/main/java/alluxio/client/file/cache/PageStore.java", "diffHunk": "@@ -78,7 +78,21 @@ static PageStore create(AlluxioConfiguration conf) {\n    * @throws IOException\n    * @throws PageNotFoundException when the page isn't found in the store\n    */\n-  ReadableByteChannel get(PageId pageId) throws IOException,\n+  default ReadableByteChannel get(PageId pageId) throws IOException,\n+      PageNotFoundException {\n+    return get(pageId, 0);\n+  }\n+\n+  /**\n+   * Gets part of a page from the store to the destination channel.\n+   *\n+   * @param pageId page identifier\n+   * @param pageOffset offset within page\n+   * @return the number of bytes read\n+   * @throws IOException\n+   * @throws PageNotFoundException when the page isn't found in the store\n+   */\n+  ReadableByteChannel get(PageId pageId, int pageOffset) throws IOException,", "originalCommit": "315291168928b3f47a0c03033801ab017d7d3f66", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE2MzQzMA==", "url": "https://github.com/Alluxio/alluxio/pull/10760#discussion_r368163430", "bodyText": "Will throw an IllegalArgumentException just to be safe.", "author": "bf8086", "createdAt": "2020-01-17T22:31:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODEwNTIwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODEwNTU3MQ==", "url": "https://github.com/Alluxio/alluxio/pull/10760#discussion_r368105571", "bodyText": "3 -> offset", "author": "apc999", "createdAt": "2020-01-17T19:43:07Z", "path": "core/client/fs/src/test/java/alluxio/client/file/cache/store/PageStoreTest.java", "diffHunk": "@@ -61,6 +64,23 @@ public void test() throws Exception {\n     }\n   }\n \n+  @Test\n+  public void getOffset() throws Exception {\n+    mOptions.setRootDir(mTemp.getRoot().getAbsolutePath());\n+    int len = 32;\n+    int offset = 3;\n+    try (PageStore store = PageStore.create(mOptions)) {\n+      PageId id = new PageId(0, 0);\n+      store.put(id, BufferUtils.getIncreasingByteArray(len));\n+      ByteBuffer buf = ByteBuffer.allocate(1024);\n+      try (ReadableByteChannel channel = store.get(id, offset)) {\n+        channel.read(buf);\n+      }\n+      buf.flip();\n+      assertTrue(BufferUtils.equalIncreasingByteBuffer(3, len - offset, buf));", "originalCommit": "315291168928b3f47a0c03033801ab017d7d3f66", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE2MzQ1Nw==", "url": "https://github.com/Alluxio/alluxio/pull/10760#discussion_r368163457", "bodyText": "Updated.", "author": "bf8086", "createdAt": "2020-01-17T22:32:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODEwNTU3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODEwNTg1OA==", "url": "https://github.com/Alluxio/alluxio/pull/10760#discussion_r368105858", "bodyText": "also test the case offset exceeding page len?", "author": "apc999", "createdAt": "2020-01-17T19:43:48Z", "path": "core/client/fs/src/test/java/alluxio/client/file/cache/store/PageStoreTest.java", "diffHunk": "@@ -61,6 +64,23 @@ public void test() throws Exception {\n     }\n   }\n \n+  @Test\n+  public void getOffset() throws Exception {", "originalCommit": "315291168928b3f47a0c03033801ab017d7d3f66", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE2MzUwMA==", "url": "https://github.com/Alluxio/alluxio/pull/10760#discussion_r368163500", "bodyText": "Added.", "author": "bf8086", "createdAt": "2020-01-17T22:32:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODEwNTg1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODEwNjEwMw==", "url": "https://github.com/Alluxio/alluxio/pull/10760#discussion_r368106103", "bodyText": "Precondition to check page Offset is positive?", "author": "apc999", "createdAt": "2020-01-17T19:44:28Z", "path": "core/client/fs/src/main/java/alluxio/client/file/cache/store/LocalPageStore.java", "diffHunk": "@@ -69,12 +69,14 @@ public void put(PageId pageId, byte[] page) throws IOException {\n   }\n \n   @Override\n-  public ReadableByteChannel get(PageId pageId) throws IOException, PageNotFoundException {\n+  public ReadableByteChannel get(PageId pageId, int pageOffset)", "originalCommit": "315291168928b3f47a0c03033801ab017d7d3f66", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE2MzUzNQ==", "url": "https://github.com/Alluxio/alluxio/pull/10760#discussion_r368163535", "bodyText": "Added.", "author": "bf8086", "createdAt": "2020-01-17T22:32:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODEwNjEwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODEwNjE1Nw==", "url": "https://github.com/Alluxio/alluxio/pull/10760#discussion_r368106157", "bodyText": "Precondition to check page Offset is positive?", "author": "apc999", "createdAt": "2020-01-17T19:44:36Z", "path": "core/client/fs/src/main/java/alluxio/client/file/cache/store/RocksPageStore.java", "diffHunk": "@@ -76,14 +76,15 @@ public void put(PageId pageId, byte[] page) throws IOException {\n   }\n \n   @Override\n-  public ReadableByteChannel get(PageId pageId) throws IOException,\n-      PageNotFoundException {\n+  public ReadableByteChannel get(PageId pageId, int pageOffset)", "originalCommit": "315291168928b3f47a0c03033801ab017d7d3f66", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE2MzU3Ng==", "url": "https://github.com/Alluxio/alluxio/pull/10760#discussion_r368163576", "bodyText": "Added.", "author": "bf8086", "createdAt": "2020-01-17T22:32:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODEwNjE1Nw=="}], "type": "inlineReview"}, {"oid": "0ae0e2486c52291262fa40717759a27aa3ce19c7", "url": "https://github.com/Alluxio/alluxio/commit/0ae0e2486c52291262fa40717759a27aa3ce19c7", "message": "address comments", "committedDate": "2020-01-17T22:30:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIwOTE5Mw==", "url": "https://github.com/Alluxio/alluxio/pull/10760#discussion_r368209193", "bodyText": "nit: is Throwable required here to avoid the warning or can we just catch IOException or Exception ?", "author": "apc999", "createdAt": "2020-01-18T06:06:50Z", "path": "core/client/fs/src/main/java/alluxio/client/file/cache/store/LocalPageStore.java", "diffHunk": "@@ -69,13 +69,24 @@ public void put(PageId pageId, byte[] page) throws IOException {\n   }\n \n   @Override\n-  public ReadableByteChannel get(PageId pageId) throws IOException, PageNotFoundException {\n+  public ReadableByteChannel get(PageId pageId, int pageOffset)\n+      throws IOException, PageNotFoundException {\n+    Preconditions.checkArgument(pageOffset >= 0, \"page offset should be non-negative\");\n     Path p = getFilePath(pageId);\n     if (!Files.exists(p)) {\n       throw new PageNotFoundException(p.toString());\n     }\n+    File f = p.toFile();\n+    Preconditions.checkArgument(pageOffset <= f.length(),\n+        \"page offset %s exceeded page size %s\", pageOffset, f.length());\n     FileInputStream fis = new FileInputStream(p.toFile());\n-    return fis.getChannel();\n+    try {\n+      fis.skip(pageOffset);\n+      return fis.getChannel();\n+    } catch (Throwable t) {", "originalCommit": "0ae0e2486c52291262fa40717759a27aa3ce19c7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}