{"pr_number": 11016, "pr_title": "Fix \"In Alluxio\" calculation for DuCommand", "pr_createdAt": "2020-02-25T22:46:21Z", "pr_url": "https://github.com/Alluxio/alluxio/pull/11016", "timeline": [{"oid": "76e34449d47d1fd28bdee52e561764b16c6bac90", "url": "https://github.com/Alluxio/alluxio/commit/76e34449d47d1fd28bdee52e561764b16c6bac90", "message": "Fix \"In Alluxio\" calculation for DuCommand", "committedDate": "2020-02-25T22:45:17Z", "type": "commit"}, {"oid": "4d9a0d889a73d6fb29add36d8e7d1159d898f2f8", "url": "https://github.com/Alluxio/alluxio/commit/4d9a0d889a73d6fb29add36d8e7d1159d898f2f8", "message": "Add tests for different combinations of du output", "committedDate": "2020-02-26T06:50:10Z", "type": "forcePushed"}, {"oid": "17c9a014cef6f9ebc1a5842baef4c9c3412ac3c1", "url": "https://github.com/Alluxio/alluxio/commit/17c9a014cef6f9ebc1a5842baef4c9c3412ac3c1", "message": "Add tests for different combinations of du output", "committedDate": "2020-02-26T18:42:23Z", "type": "commit"}, {"oid": "17c9a014cef6f9ebc1a5842baef4c9c3412ac3c1", "url": "https://github.com/Alluxio/alluxio/commit/17c9a014cef6f9ebc1a5842baef4c9c3412ac3c1", "message": "Add tests for different combinations of du output", "committedDate": "2020-02-26T18:42:23Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY4OTkxNA==", "url": "https://github.com/Alluxio/alluxio/pull/11016#discussion_r384689914", "bodyText": "up to you but we have DuIntegrationTest if you want to consolidate", "author": "apc999", "createdAt": "2020-02-26T18:45:28Z", "path": "shell/src/test/java/alluxio/cli/fs/command/DuCommandTest.java", "diffHunk": "@@ -0,0 +1,121 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.cli.fs.command;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.fail;\n+\n+import alluxio.AlluxioURI;\n+import alluxio.SystemOutRule;\n+import alluxio.client.file.URIStatus;\n+import alluxio.wire.FileInfo;\n+\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import java.util.stream.Collectors;\n+\n+public class DuCommandTest {", "originalCommit": "17c9a014cef6f9ebc1a5842baef4c9c3412ac3c1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY5MTE2NQ==", "url": "https://github.com/Alluxio/alluxio/pull/11016#discussion_r384691165", "bodyText": "I am aware but I specifically made this test because running a full alluxio cluster is unnecessary in order to test this functionality. The time it would require to run this in an integration test is probably 10x higher than using a unit test - and we should work to reduce the execution times of our tests because they have been jumping higher recently.", "author": "ZacBlanco", "createdAt": "2020-02-26T18:47:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY4OTkxNA=="}], "type": "inlineReview"}]}