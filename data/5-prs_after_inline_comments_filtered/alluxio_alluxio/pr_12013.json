{"pr_number": 12013, "pr_title": "Fix local cache locking", "pr_createdAt": "2020-08-19T08:36:37Z", "pr_url": "https://github.com/Alluxio/alluxio/pull/12013", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzIwMDc4OA==", "url": "https://github.com/Alluxio/alluxio/pull/12013#discussion_r473200788", "bodyText": "Spacing", "author": "calvinjia", "createdAt": "2020-08-19T17:22:50Z", "path": "core/client/fs/src/main/java/alluxio/client/file/cache/LocalCacheManager.java", "diffHunk": "@@ -300,25 +297,25 @@ private boolean putInternal(PageId pageId, byte[] page) {\n       }\n     }\n \n-    Pair<ReadWriteLock, ReadWriteLock> pageLockPair = getPageLockPair(pageId, victim);\n+    Pair<ReadWriteLock, ReadWriteLock> pageLockPair =\n+        getPageLockPair(pageId, victimPageInfo.getPageId());\n     try (LockResource r1 = new LockResource(pageLockPair.getFirst().writeLock());\n-        LockResource r2 = new LockResource(pageLockPair.getSecond().writeLock())) {\n+         LockResource r2 = new LockResource(pageLockPair.getSecond().writeLock())) {", "originalCommit": "56166b4ab033552d0c277ce688c3780443e0964c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzIwMTIzMA==", "url": "https://github.com/Alluxio/alluxio/pull/12013#discussion_r473201230", "bodyText": "Should we change the metric below to be more specific?", "author": "calvinjia", "createdAt": "2020-08-19T17:23:41Z", "path": "core/client/fs/src/main/java/alluxio/client/file/cache/LocalCacheManager.java", "diffHunk": "@@ -300,25 +297,25 @@ private boolean putInternal(PageId pageId, byte[] page) {\n       }\n     }\n \n-    Pair<ReadWriteLock, ReadWriteLock> pageLockPair = getPageLockPair(pageId, victim);\n+    Pair<ReadWriteLock, ReadWriteLock> pageLockPair =\n+        getPageLockPair(pageId, victimPageInfo.getPageId());\n     try (LockResource r1 = new LockResource(pageLockPair.getFirst().writeLock());\n-        LockResource r2 = new LockResource(pageLockPair.getSecond().writeLock())) {\n+         LockResource r2 = new LockResource(pageLockPair.getSecond().writeLock())) {\n       try (LockResource r3 = new LockResource(mMetaLock.writeLock())) {\n         if (mMetaStore.hasPage(pageId)) {\n           LOG.debug(\"{} is already inserted by a racing thread\", pageId);\n           // TODO(binfan): we should return more informative result in the future\n           return true;\n         }\n-        if (!mMetaStore.hasPage(victim)) {\n+        if (!mMetaStore.hasPage(victimPageInfo.getPageId())) {", "originalCommit": "56166b4ab033552d0c277ce688c3780443e0964c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI0MzI3NA==", "url": "https://github.com/Alluxio/alluxio/pull/12013#discussion_r473243274", "bodyText": "count it as PUT_RACING_EVICTION_ERRORS", "author": "apc999", "createdAt": "2020-08-19T18:39:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzIwMTIzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzIwMjAwNg==", "url": "https://github.com/Alluxio/alluxio/pull/12013#discussion_r473202006", "bodyText": "If this is null, do we need to do something to update the evictor state?", "author": "calvinjia", "createdAt": "2020-08-19T17:25:02Z", "path": "core/client/fs/src/main/java/alluxio/client/file/cache/DefaultMetaStore.java", "diffHunk": "@@ -74,5 +84,16 @@ public void reset() {\n     mPages.set(0);\n     mBytes.set(0);\n     mPageMap.clear();\n+    mEvictor.reset();\n+  }\n+\n+  @Override\n+  @Nullable\n+  public PageInfo evict() {\n+    PageId victim = mEvictor.evict();\n+    if (victim == null) {\n+      return null;\n+    }\n+    return mPageMap.get(victim);", "originalCommit": "56166b4ab033552d0c277ce688c3780443e0964c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzIxNjA4Mg==", "url": "https://github.com/Alluxio/alluxio/pull/12013#discussion_r473216082", "bodyText": "good catch. In theory, this should never happen if evictor is implemented correctly.\nbut no one can guarantee that. corresponding error log and cleanup added", "author": "apc999", "createdAt": "2020-08-19T17:50:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzIwMjAwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzIwNTcyMw==", "url": "https://github.com/Alluxio/alluxio/pull/12013#discussion_r473205723", "bodyText": "Not sure if this comment is accurate, we already removed the victim from the metastore on line 316, so I think we need to go through with the ondisk delete? ie Regardless of enoughSpace, we need to delete the victim as it has been removed from the metastore?", "author": "calvinjia", "createdAt": "2020-08-19T17:31:33Z", "path": "core/client/fs/src/main/java/alluxio/client/file/cache/LocalCacheManager.java", "diffHunk": "@@ -327,37 +324,43 @@ private boolean putInternal(PageId pageId, byte[] page) {\n           mMetaStore.addPage(pageId, new PageInfo(pageId, page.length));\n         }\n       }\n-      if (deletePage(victim, victimPageInfo)) {\n+      // Regardless enoughSpace, evicting victim to make progress", "originalCommit": "56166b4ab033552d0c277ce688c3780443e0964c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzIwODkwOA==", "url": "https://github.com/Alluxio/alluxio/pull/12013#discussion_r473208908", "bodyText": "Change this comment to failed to evict page, remove new page from metastore as there will not be enough space?", "author": "calvinjia", "createdAt": "2020-08-19T17:37:11Z", "path": "core/client/fs/src/main/java/alluxio/client/file/cache/LocalCacheManager.java", "diffHunk": "@@ -327,37 +324,43 @@ private boolean putInternal(PageId pageId, byte[] page) {\n           mMetaStore.addPage(pageId, new PageInfo(pageId, page.length));\n         }\n       }\n-      if (deletePage(victim, victimPageInfo)) {\n+      // Regardless enoughSpace, evicting victim to make progress\n+      if (deletePage(victimPageInfo.getPageId())) {\n         Metrics.BYTES_EVICTED_CACHE.mark(victimPageInfo.getPageSize());\n         Metrics.PAGES_EVICTED_CACHE.mark();\n       } else {\n-        LOG.debug(\"Failed to evict page: {}\", victim);\n+        LOG.debug(\"Failed to evict page: {}\", victimPageInfo.getPageId());\n         Metrics.PUT_EVICTION_ERRORS.inc();\n+        // something is wrong to add this page, let's remove it from meta store", "originalCommit": "56166b4ab033552d0c277ce688c3780443e0964c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzMxMDgwNw==", "url": "https://github.com/Alluxio/alluxio/pull/12013#discussion_r473310807", "bodyText": "Do we need to return after succeeding?", "author": "calvinjia", "createdAt": "2020-08-19T20:50:56Z", "path": "core/client/fs/src/main/java/alluxio/client/file/cache/LocalCacheManager.java", "diffHunk": "@@ -279,87 +278,86 @@ private boolean putInternal(PageId pageId, byte[] page) {\n         }\n       }\n       if (enoughSpace) {\n-        boolean ok = addPage(pageId, page);\n-        if (ok) {\n+        try {\n+          mPageStore.put(pageId, page);", "originalCommit": "347a0bf1378b0f3ea4659768fe4a24272086c778", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzM1NDA5NQ==", "url": "https://github.com/Alluxio/alluxio/pull/12013#discussion_r473354095", "bodyText": "oops, good catch!", "author": "apc999", "createdAt": "2020-08-19T21:45:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzMxMDgwNw=="}], "type": "inlineReview"}, {"oid": "52df2dbea99a0aada5b31e20f0a9d1c521e7e66a", "url": "https://github.com/Alluxio/alluxio/commit/52df2dbea99a0aada5b31e20f0a9d1c521e7e66a", "message": "Fix local cache locking", "committedDate": "2020-08-19T22:41:45Z", "type": "commit"}, {"oid": "52df2dbea99a0aada5b31e20f0a9d1c521e7e66a", "url": "https://github.com/Alluxio/alluxio/commit/52df2dbea99a0aada5b31e20f0a9d1c521e7e66a", "message": "Fix local cache locking", "committedDate": "2020-08-19T22:41:45Z", "type": "forcePushed"}]}