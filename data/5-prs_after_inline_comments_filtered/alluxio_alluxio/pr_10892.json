{"pr_number": 10892, "pr_title": "Use source instead of hostname and client id in metrics", "pr_createdAt": "2020-02-12T01:34:13Z", "pr_url": "https://github.com/Alluxio/alluxio/pull/10892", "timeline": [{"oid": "9affa74e71350a4ec187a7e0079788590e502054", "url": "https://github.com/Alluxio/alluxio/commit/9affa74e71350a4ec187a7e0079788590e502054", "message": "Use source instead of hostname and client id", "committedDate": "2020-02-12T01:33:03Z", "type": "commit"}, {"oid": "766d1c8d47ee805a81cbd94d171af34dfba16084", "url": "https://github.com/Alluxio/alluxio/commit/766d1c8d47ee805a81cbd94d171af34dfba16084", "message": "Before solving conflicts", "committedDate": "2020-02-12T18:27:20Z", "type": "commit"}, {"oid": "00c47e566d4e3e1833d1b308c2dab1d6f7e6af21", "url": "https://github.com/Alluxio/alluxio/commit/00c47e566d4e3e1833d1b308c2dab1d6f7e6af21", "message": "run mvn -Pgenerate", "committedDate": "2020-02-12T18:30:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ2NDgxNw==", "url": "https://github.com/Alluxio/alluxio/pull/10892#discussion_r378464817", "bodyText": "Why does this need to be a static variable? It seems like we are using it as a local variable?", "author": "calvinjia", "createdAt": "2020-02-12T19:28:05Z", "path": "core/common/src/main/java/alluxio/metrics/MetricsSystem.java", "diffHunk": "@@ -73,6 +76,10 @@\n   // A flag telling whether metrics have been reported yet.\n   // Using this prevents us from initializing {@link #SHOULD_REPORT_METRICS} more than once\n   private static boolean sReported = false;\n+  // The source of the metrics in this metrics system.\n+  // It can be set through property keys based on process types.\n+  // Local hostname will be used if no related property key founds.\n+  private static String sSourceName;", "originalCommit": "00c47e566d4e3e1833d1b308c2dab1d6f7e6af21", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ3MjE2MA==", "url": "https://github.com/Alluxio/alluxio/pull/10892#discussion_r378472160", "bodyText": "All the methods calling it are static methods.", "author": "LuQQiu", "createdAt": "2020-02-12T19:42:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ2NDgxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ3MjUwOA==", "url": "https://github.com/Alluxio/alluxio/pull/10892#discussion_r378472508", "bodyText": "All methods in the MetricsSystem class are static methods, MetricsSystem is initialized per-jvm and does not allow explicit initialization.", "author": "LuQQiu", "createdAt": "2020-02-12T19:42:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ2NDgxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODUzMTA2NA==", "url": "https://github.com/Alluxio/alluxio/pull/10892#discussion_r378531064", "bodyText": "I mean a local variable in the method, not an instance variable", "author": "calvinjia", "createdAt": "2020-02-12T21:46:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ2NDgxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU0MDQ4Mg==", "url": "https://github.com/Alluxio/alluxio/pull/10892#discussion_r378540482", "bodyText": "Oh, I understand, this is used for memory the source value since this method getMetricNameWithUniqueId is called really often.\nI added the null check", "author": "LuQQiu", "createdAt": "2020-02-12T22:06:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ2NDgxNw=="}], "type": "inlineReview"}, {"oid": "fb44a91d40e9e1b9976d5186d61faef0584fb50f", "url": "https://github.com/Alluxio/alluxio/commit/fb44a91d40e9e1b9976d5186d61faef0584fb50f", "message": "Add source null check", "committedDate": "2020-02-12T22:05:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU1NjkzOQ==", "url": "https://github.com/Alluxio/alluxio/pull/10892#discussion_r378556939", "bodyText": "Could you add the appropriate here to ensure sSourceName is only set once? Also do we assume each JVM will only have 1 instance type?", "author": "calvinjia", "createdAt": "2020-02-12T22:45:45Z", "path": "core/common/src/main/java/alluxio/metrics/MetricsSystem.java", "diffHunk": "@@ -341,12 +347,38 @@ public static String getJobWorkerMetricName(String name) {\n    * @return the metric registry name\n    */\n   private static String getMetricNameWithUniqueId(InstanceType instance, String name) {\n+    if (sSourceName == null) {", "originalCommit": "fb44a91d40e9e1b9976d5186d61faef0584fb50f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU3MjkxMg==", "url": "https://github.com/Alluxio/alluxio/pull/10892#discussion_r378572912", "bodyText": "Yeah, that's why assumed, each jvm will only have one instance type depends on the process type", "author": "LuQQiu", "createdAt": "2020-02-12T23:30:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU1NjkzOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU2MjE2Nw==", "url": "https://github.com/Alluxio/alluxio/pull/10892#discussion_r378562167", "bodyText": "Consider making this an instance variable?", "author": "calvinjia", "createdAt": "2020-02-12T22:58:54Z", "path": "core/client/fs/src/main/java/alluxio/client/metrics/ClientMasterSync.java", "diffHunk": "@@ -69,16 +70,16 @@ public synchronized void heartbeat() {\n     // Currently we only support JVM-level metrics. A list is used here because in the near\n     // future we will support sending per filesystem client-level metrics.\n     List<alluxio.grpc.ClientMetrics> fsClientMetrics = new ArrayList<>();\n-    String hostname = NetworkAddressUtils.getClientHostName(mConf);\n+    String source = mConf.isSet(PropertyKey.USER_APP_ID)\n+        ? mConf.get(PropertyKey.USER_APP_ID) : NetworkAddressUtils.getClientHostName(mConf);", "originalCommit": "fb44a91d40e9e1b9976d5186d61faef0584fb50f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8bb0883f049c354e4cfcfa991353c71371ae301d", "url": "https://github.com/Alluxio/alluxio/commit/8bb0883f049c354e4cfcfa991353c71371ae301d", "message": "Put init source to MetricsSystem.init", "committedDate": "2020-02-12T23:08:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU3MDk4Mw==", "url": "https://github.com/Alluxio/alluxio/pull/10892#discussion_r378570983", "bodyText": "Could you make this synchronized and have it be a no-op if sSourceName has already been set? The reason is the client may make multiple calls to init when multiple filesystem objects are created (ie. for different users).\nAlso, where is this called for a client?", "author": "calvinjia", "createdAt": "2020-02-12T23:24:33Z", "path": "core/common/src/main/java/alluxio/metrics/MetricsSystem.java", "diffHunk": "@@ -158,6 +164,37 @@ public static void startSinks(String metricsConfFile) {\n     startSinksFromConfig(config);\n   }\n \n+  /**\n+   * Initialize the {@link MetricsSystem}.\n+   * This should be called after setting the {@link CommonUtils#PROCESS_TYPE}\n+   * and before creating any metric in the current process.\n+   */\n+  public static void init() {", "originalCommit": "8bb0883f049c354e4cfcfa991353c71371ae301d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU4Mzc3MQ==", "url": "https://github.com/Alluxio/alluxio/pull/10892#discussion_r378583771", "bodyText": "Sounds good. I maked it a no-op if already been set and maked it synchronized.\nAdded the call of init() to FileSystemContext.initContext() and a bunch of unit tests.", "author": "LuQQiu", "createdAt": "2020-02-13T00:07:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU3MDk4Mw=="}], "type": "inlineReview"}, {"oid": "ba53ed66fdff0338172774a7a69f96d95b5377c2", "url": "https://github.com/Alluxio/alluxio/commit/ba53ed66fdff0338172774a7a69f96d95b5377c2", "message": "Add the client side MetricsSystem.init", "committedDate": "2020-02-12T23:36:48Z", "type": "commit"}, {"oid": "982c5d0bf6a5a304f6660e7b1d73037844394ecb", "url": "https://github.com/Alluxio/alluxio/commit/982c5d0bf6a5a304f6660e7b1d73037844394ecb", "message": "Use memoize to remember source name", "committedDate": "2020-02-13T19:34:22Z", "type": "commit"}, {"oid": "982c5d0bf6a5a304f6660e7b1d73037844394ecb", "url": "https://github.com/Alluxio/alluxio/commit/982c5d0bf6a5a304f6660e7b1d73037844394ecb", "message": "Use memoize to remember source name", "committedDate": "2020-02-13T19:34:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3NDA2NA==", "url": "https://github.com/Alluxio/alluxio/pull/10892#discussion_r379074064", "bodyText": "hostname isn't really a descriptive variable name for this anymore, right?", "author": "ZacBlanco", "createdAt": "2020-02-13T19:32:34Z", "path": "core/common/src/main/java/alluxio/metrics/Metric.java", "diffHunk": "@@ -321,26 +277,15 @@ public static Metric from(String fullName, double value, MetricType metricType)\n     Preconditions.checkArgument(pieces.length > 1, \"Incorrect metrics name: %s.\", fullName);\n     int len = pieces.length;\n     String hostname = null;\n-    String id = null;\n-    String name = null;\n     int tagEndIndex = len;\n     // Master or cluster metrics don't have hostname included.\n-    if (pieces[0].equals(MetricsSystem.InstanceType.MASTER.toString())\n-        || pieces[0].equals(MetricsSystem.CLUSTER)) {\n-      name = pieces[1];\n-    } else {\n-      if (pieces[len - 1].contains(ID_SEPARATOR)) {\n-        String[] ids = pieces[len - 1].split(ID_SEPARATOR);\n-        hostname = ids[0];\n-        id = ids[1];\n-      } else {\n-        hostname = pieces[len - 1];\n-      }\n-      name = pieces[1];\n+    if (!pieces[0].equals(MetricsSystem.InstanceType.MASTER.toString())\n+        && !pieces[0].equals(MetricsSystem.CLUSTER)) {\n+      hostname = pieces[len - 1];", "originalCommit": "da0afeca70d2fd676d8b36c83e339bc6648ec1c4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3NDQzMQ==", "url": "https://github.com/Alluxio/alluxio/pull/10892#discussion_r379074431", "bodyText": "pieces[1] seems kind of ambiguous compared to the previous name variable. Can we add a comment on what it is, or use the old variable?", "author": "ZacBlanco", "createdAt": "2020-02-13T19:33:20Z", "path": "core/common/src/main/java/alluxio/metrics/Metric.java", "diffHunk": "@@ -321,26 +277,15 @@ public static Metric from(String fullName, double value, MetricType metricType)\n     Preconditions.checkArgument(pieces.length > 1, \"Incorrect metrics name: %s.\", fullName);\n     int len = pieces.length;\n     String hostname = null;\n-    String id = null;\n-    String name = null;\n     int tagEndIndex = len;\n     // Master or cluster metrics don't have hostname included.\n-    if (pieces[0].equals(MetricsSystem.InstanceType.MASTER.toString())\n-        || pieces[0].equals(MetricsSystem.CLUSTER)) {\n-      name = pieces[1];\n-    } else {\n-      if (pieces[len - 1].contains(ID_SEPARATOR)) {\n-        String[] ids = pieces[len - 1].split(ID_SEPARATOR);\n-        hostname = ids[0];\n-        id = ids[1];\n-      } else {\n-        hostname = pieces[len - 1];\n-      }\n-      name = pieces[1];\n+    if (!pieces[0].equals(MetricsSystem.InstanceType.MASTER.toString())\n+        && !pieces[0].equals(MetricsSystem.CLUSTER)) {\n+      hostname = pieces[len - 1];\n       tagEndIndex = len - 1;\n     }\n     MetricsSystem.InstanceType instance = MetricsSystem.InstanceType.fromString(pieces[0]);\n-    Metric metric = new Metric(instance, hostname, id, metricType, name, value);\n+    Metric metric = new Metric(instance, hostname, metricType, pieces[1], value);", "originalCommit": "da0afeca70d2fd676d8b36c83e339bc6648ec1c4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9868c1909555c47e25a846d76dbe2a476f2b520f", "url": "https://github.com/Alluxio/alluxio/commit/9868c1909555c47e25a846d76dbe2a476f2b520f", "message": "small fix", "committedDate": "2020-02-13T19:46:15Z", "type": "commit"}, {"oid": "f6b411098f32741c5278964b77c7f7e5816c7379", "url": "https://github.com/Alluxio/alluxio/commit/f6b411098f32741c5278964b77c7f7e5816c7379", "message": "Fix the naming in Metric", "committedDate": "2020-02-13T20:07:19Z", "type": "commit"}]}