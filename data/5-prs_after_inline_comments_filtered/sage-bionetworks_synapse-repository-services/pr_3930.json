{"pr_number": 3930, "pr_title": "PLFM-6006 STS Upload Restrictions (CR responses)", "pr_createdAt": "2020-02-06T00:35:19Z", "pr_url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3930", "timeline": [{"oid": "d0db67b94e56fc82ff33f03950085af8e698b0c7", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/d0db67b94e56fc82ff33f03950085af8e698b0c7", "message": "PLFM-6006 STS Upload Restrictions (CR responses)", "committedDate": "2020-02-05T23:54:29Z", "type": "commit"}, {"oid": "accd235638d1a75b00444bf1a7d0650719eef75b", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/accd235638d1a75b00444bf1a7d0650719eef75b", "message": "Merge branch 'develop' of https://github.com/Sage-Bionetworks/Synapse-Repository-Services into plfm-6005\n\nConflicts:\n\tservices/repository-managers/src/main/java/org/sagebionetworks/repo/manager/ProjectSettingsManagerImpl.java\n\tservices/repository-managers/src/test/java/org/sagebionetworks/repo/manager/ProjectSettingsImplAutowiredTest.java", "committedDate": "2020-02-06T00:10:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM5MDM4Ng==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3930#discussion_r377390386", "bodyText": "believe need to check message separately.", "author": "john-hill", "createdAt": "2020-02-11T00:07:47Z", "path": "services/repository-managers/src/test/java/org/sagebionetworks/repo/manager/ProjectSettingsImplAutowiredTest.java", "diffHunk": "@@ -258,45 +269,32 @@ public void testValidExternalObjectStorageSettingWithSlashes() throws IOExceptio\n \t}\n \n \t@Test\n-\tpublic void testExternalObjectStorageSettingInvalidBucket() throws IOException {\n+\tpublic void testExternalObjectStorageSettingInvalidBucket() {\n \t\tExternalObjectStorageLocationSetting externalObjectStorageSetting = new ExternalObjectStorageLocationSetting();\n \t\texternalObjectStorageSetting.setBucket(\" \");\n \t\texternalObjectStorageSetting.setEndpointUrl(\"https://www.someurl.com\");\n-\t\t\n-\t\tIllegalArgumentException ex = assertThrows(IllegalArgumentException.class, () -> {\n-\t\t\t//call under test\n-\t\t\tprojectSettingsManager.createStorageLocationSetting(userInfo, externalObjectStorageSetting);\n-\t\t});\n-\t\t\n-\t\tassertEquals(\"Invalid bucket name.\", ex.getMessage());\n+\t\t//call under test\n+\t\tassertThrows(IllegalArgumentException.class, () -> projectSettingsManager.createStorageLocationSetting(\n+\t\t\t\tuserInfo, externalObjectStorageSetting), \"Invalid Bucket Name\");\n \t}\n \n \t@Test\n-\tpublic void testExternalObjectStorageSettingInvalidBucketWithSlashes() throws IOException {\n+\tpublic void testExternalObjectStorageSettingInvalidBucketWithSlashes() {\n \t\tExternalObjectStorageLocationSetting externalObjectStorageSetting = new ExternalObjectStorageLocationSetting();\n \t\texternalObjectStorageSetting.setBucket(\" / / / / / \");\n \t\texternalObjectStorageSetting.setEndpointUrl(\"https://www.someurl.com\");\n-\t\t\n-\t\tIllegalArgumentException ex = assertThrows(IllegalArgumentException.class, () -> {\n-\t\t\t//call under test\n-\t\t\tprojectSettingsManager.createStorageLocationSetting(userInfo, externalObjectStorageSetting);\n-\t\t});\n-\t\t\n-\t\tassertEquals(\"Invalid bucket name.\", ex.getMessage());\n+\t\t//call under test\n+\t\tassertThrows(IllegalArgumentException.class, () -> projectSettingsManager.createStorageLocationSetting(\n+\t\t\t\tuserInfo, externalObjectStorageSetting), \"Invalid Bucket Name\");\n \t}\n \n \t@Test\n-\tpublic void testExternalObjectStorageSettingInvalidURL() throws IOException {\n+\tpublic void testExternalObjectStorageSettingInvalidURL() {\n \t\tExternalObjectStorageLocationSetting externalObjectStorageSetting = new ExternalObjectStorageLocationSetting();\n \t\texternalObjectStorageSetting.setBucket(\"someBucket\");\n \t\texternalObjectStorageSetting.setEndpointUrl(\"not a url\");\n-\t\t\n-\t\tIllegalArgumentException ex = assertThrows(IllegalArgumentException.class, () -> {\n-\t\t\t//call under test\n-\t\t\tprojectSettingsManager.createStorageLocationSetting(userInfo, externalObjectStorageSetting);\n-\t\t});\n-\t\t\n-\t\tassertEquals(\"The External URL is not a valid url: not a url\", ex.getMessage());\n+\t\t//call under test\n+\t\tassertThrows(IllegalArgumentException.class, () -> projectSettingsManager.createStorageLocationSetting(\n+\t\t\t\tuserInfo, externalObjectStorageSetting), \"The External URL is not a valid url: not a url\");", "originalCommit": "accd235638d1a75b00444bf1a7d0650719eef75b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}