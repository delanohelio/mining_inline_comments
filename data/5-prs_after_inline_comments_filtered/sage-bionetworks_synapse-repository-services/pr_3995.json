{"pr_number": 3995, "pr_title": "PLFM-6192: fix NPE", "pr_createdAt": "2020-04-09T04:16:10Z", "pr_url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3995", "timeline": [{"oid": "65126c73b9394a57b7399b19bc4e5b6b2a17a3b0", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/65126c73b9394a57b7399b19bc4e5b6b2a17a3b0", "message": "Check for null token", "committedDate": "2020-04-08T21:59:40Z", "type": "commit"}, {"oid": "40c3c99f64061e05e81bd1869d29fec5f8e5bc64", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/40c3c99f64061e05e81bd1869d29fec5f8e5bc64", "message": "JUnit5", "committedDate": "2020-04-09T02:51:52Z", "type": "commit"}, {"oid": "7ccf83141ce01bb6455efd962ceab5824c782eaf", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/7ccf83141ce01bb6455efd962ceab5824c782eaf", "message": "Removed unused", "committedDate": "2020-04-09T04:14:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg1OTY1MQ==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3995#discussion_r406859651", "bodyText": "You probably don't need the eq()", "author": "marcomarasca", "createdAt": "2020-04-10T17:28:21Z", "path": "services/repository-managers/src/test/java/org/sagebionetworks/repo/manager/authentication/AuthenticationManagerImplUnitTest.java", "diffHunk": "@@ -215,8 +212,11 @@ public void testLogin(){\n \t///////////////////////////////////////////////////////////\n \t@Test\n \tpublic void testGetLoginResponseAfterSuccessfulAuthentication_validReciept(){\n+\t\tsetupMockUserGroupDAO();\n \t\tString newReceipt = \"uwu\";\n \t\twhen(mockAuthReceiptDAO.replaceReceipt(userId, receipt)).thenReturn(newReceipt);\n+\t\t//when(mockAuthReceiptDAO.createNewReceipt(userId)).thenReturn(receipt);\n+\t\twhen(mockAuthDAO.changeSessionToken(eq(userId), eq((String) null))).thenReturn(synapseSessionToken);", "originalCommit": "7ccf83141ce01bb6455efd962ceab5824c782eaf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg2MDYzOA==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3995#discussion_r406860638", "bodyText": "You could check the retuned IllegalArgumentException and validate the message", "author": "marcomarasca", "createdAt": "2020-04-10T17:30:37Z", "path": "services/repository-managers/src/test/java/org/sagebionetworks/repo/manager/authentication/AuthenticationManagerImplUnitTest.java", "diffHunk": "@@ -398,24 +408,30 @@ public void testFindUserForAuthentication_userNotFound(){\n \t/////////////////////////////////////////////////////////////\n \t// validateChangePassword(ChangePasswordWithCurrentPassword)\n \t/////////////////////////////////////////////////////////////\n-\t@Test(expected = IllegalArgumentException.class)\n+\t@Test\n \tpublic void testValidateChangePassword_withCurrentPassword_nullUsername(){\n \t\tchangePasswordWithCurrentPassword.setUsername(null);\n \n-\t\t//method under test\n-\t\tauthManager.validateChangePassword(changePasswordWithCurrentPassword);\n+\t\tAssertions.assertThrows(IllegalArgumentException.class, () -> {", "originalCommit": "7ccf83141ce01bb6455efd962ceab5824c782eaf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg2MTAwMw==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3995#discussion_r406861003", "bodyText": "Can be @mock", "author": "marcomarasca", "createdAt": "2020-04-10T17:31:38Z", "path": "services/repository-managers/src/test/java/org/sagebionetworks/repo/manager/authentication/AuthenticationManagerImplUnitTest.java", "diffHunk": "@@ -449,56 +469,77 @@ public void testValidateChangePassword_withToken_valid(){\n \t\tverify(mockPasswordResetTokenGenerator).isValidToken(passwordResetSignedToken);\n \t}\n \n+\t@Test\n+\tpublic void testValidateChangePassword_withToken_missingToken() {\n+\t\tchangePasswordWithToken.setPasswordChangeToken(null);\n+\n+\t\tAssertions.assertThrows(IllegalArgumentException.class, () -> {\n+\t\t\t// call under test\n+\t\t\tauthManager.validateChangePassword(changePasswordWithToken);\n+\t\t});\n+\t}\n+\n \n \t////////////////////\n \t// changePassword()\n \t////////////////////\n \n-\t@Test(expected = IllegalArgumentException.class)\n+\t@Test\n \tpublic void testChangePassword_NullNewPassword(){\n+\t\twhen(mockUserCredentialValidator.checkPasswordWithThrottling(userId, password)).thenReturn(true);\n+\t\tsetupMockPrincipalAliasDAO();\n+\n \t\tchangePasswordWithCurrentPassword.setNewPassword(null);\n-\t\tauthManager.changePassword(changePasswordWithCurrentPassword);\n+\t\tAssertions.assertThrows(IllegalArgumentException.class, () -> {\n+\t\t\t// call under test\n+\t\t\tauthManager.changePassword(changePasswordWithCurrentPassword);\n+\t\t});\n \t}\n \n \n-\t@Test(expected = IllegalArgumentException.class)\n+\t@Test\n \tpublic void testChangePassword_unknownImplementation(){\n-\t\t//use anonymous implementation\n-\t\tauthManager.changePassword(new ChangePasswordInterface() {\n-\t\t\t@Override\n-\t\t\tpublic String getNewPassword() {\n-\t\t\t\treturn \"\";\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic void setNewPassword(String newPassword) {\n-\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic String getConcreteType() {\n-\t\t\t\treturn null;\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic void setConcreteType(String concreteType) {\n-\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic JSONObjectAdapter initializeFromJSONObject(JSONObjectAdapter jsonObjectAdapter) throws JSONObjectAdapterException {\n-\t\t\t\treturn null;\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic JSONObjectAdapter writeToJSONObject(JSONObjectAdapter jsonObjectAdapter) throws JSONObjectAdapterException {\n-\t\t\t\treturn null;\n-\t\t\t}\n+\t\tAssertions.assertThrows(IllegalArgumentException.class, () -> {\n+\t\t\t//use anonymous implementation\n+\t\t\tauthManager.changePassword(new ChangePasswordInterface() {", "originalCommit": "7ccf83141ce01bb6455efd962ceab5824c782eaf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}