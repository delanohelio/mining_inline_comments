{"pr_number": 6372, "pr_title": "Simplify CasualtySelector and Fix EditMode casualty selection behavior", "pr_createdAt": "2020-05-03T02:48:07Z", "pr_url": "https://github.com/triplea-game/triplea/pull/6372", "timeline": [{"oid": "5c68a30d8a4395d0cd540212ec3236219daae57e", "url": "https://github.com/triplea-game/triplea/commit/5c68a30d8a4395d0cd540212ec3236219daae57e", "message": "Simplify CasualtySelector and remove EditMode casualty selection behavior\n\n1. Removes edit mode special case behavior in casualty selection.\n   The edit mode for casualty selection previously always had\n   zero casualties being inflicted despite any dice roll. This has\n   a number of problems:\n    - not intuitive, one would perhaps expect for any number of\n      casualties to be taken during edit mode rather than always\n      zero\n    - not intuitive, the combat UI still states how many hits\n      occurred yet there are zero casualties to select\n    - not comprehensive, the AA casualty selection does not have\n      a special case for edit mode, it handles casualties normally.\n      This is odd as an initial AA fire deals casualties and then\n      there are no more.\n    - possibly introduces a never-ending combat. In this situation,\n      because edit mode cannot be turned off during a battle, the only\n      way to end such a battle during edit mode is via retreat. If\n      there is no retreat option, then there will be no way to end\n      the battle whatsoever.\n\n2. Simplify: use ternaries\n\n3. Simplify/Performance: Remove arg and state checks that verify\n   parameter and output collection contains. The contains checks\n   on lists is potentially O(n^2); furthermore given the amount\n   of production testing we can be pretty confident these checks\n   are not going to raise issues. We can for now remove them to\n   simplify slightly.", "committedDate": "2020-05-03T02:40:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTAzNzgwOA==", "url": "https://github.com/triplea-game/triplea/pull/6372#discussion_r419037808", "bodyText": "This zero is a hard-coding of the number of hits (which creates problems).\nWe could in theory have kept this behavior and simplified to set CasualtyDetails to be empty as the 'editSelection' result is always (and forced to be empty).\nPerhaps the original intent of this code was to prompt zero casualties and allow for selection of any number? Regardless if that was the intent or not,  you are forced to choose zero casualties which creates dead code paths in casualty selection (always returns empty).", "author": "DanVanAtta", "createdAt": "2020-05-03T02:50:03Z", "path": "game-core/src/main/java/games/strategy/triplea/delegate/battle/casualty/CasualtySelector.java", "diffHunk": "@@ -74,62 +73,22 @@ public static CasualtyDetails selectCasualties(\n     if (targetsToPickFrom.isEmpty()) {\n       return new CasualtyDetails();\n     }\n-    if (!friendlyUnits.containsAll(targetsToPickFrom)) {\n-      throw new IllegalStateException(\n-          \"friendlyUnits should but does not contain all units from targetsToPickFrom\"\n-              + \", battlesite: \"\n-              + battlesite\n-              + \", friendlyUnits: \"\n-              + friendlyUnits\n-              + \", targetsToPickFrom: \"\n-              + targetsToPickFrom);\n-    }\n     final GameData data = bridge.getData();\n-    final boolean isEditMode = BaseEditDelegate.getEditMode(data);\n     final Player tripleaPlayer =\n         player.isNull() ? new WeakAi(player.getName()) : bridge.getRemotePlayer(player);\n     final Map<Unit, Collection<Unit>> dependents =\n         headLess ? Map.of() : CasualtyUtil.getDependents(targetsToPickFrom);\n-    if (isEditMode && !headLess) {\n-      final CasualtyDetails editSelection =\n-          tripleaPlayer.selectCasualties(\n-              targetsToPickFrom,\n-              dependents,\n-              0,", "originalCommit": "5c68a30d8a4395d0cd540212ec3236219daae57e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTEzODI5OQ==", "url": "https://github.com/triplea-game/triplea/pull/6372#discussion_r419138299", "bodyText": "So if you want to simplify this code I'm good with that but I think we should keep the edit mode behavior.", "author": "ron-murhammer", "createdAt": "2020-05-03T18:05:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTAzNzgwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE0MzkwOQ==", "url": "https://github.com/triplea-game/triplea/pull/6372#discussion_r419143909", "bodyText": "I really disagree, something that can cause a game-crash without possibility to save is very bad. Furthermore the current behavior just does not make sense - if you are forced to retreat how is that helpful?\nHow do we resolve this disagreement?\nThe updates here are blocking further updates from being done. I'd like to move forward, maintaining a broken feature going forward seems like we are creating more work to maintain a broken feature.", "author": "DanVanAtta", "createdAt": "2020-05-03T18:52:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTAzNzgwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTAzNzgzOA==", "url": "https://github.com/triplea-game/triplea/pull/6372#discussion_r419037838", "bodyText": "This iterator was re-written to be a stream+limit+collect.", "author": "DanVanAtta", "createdAt": "2020-05-03T02:50:33Z", "path": "game-core/src/main/java/games/strategy/triplea/delegate/battle/casualty/CasualtySelector.java", "diffHunk": "@@ -74,62 +73,22 @@ public static CasualtyDetails selectCasualties(\n     if (targetsToPickFrom.isEmpty()) {\n       return new CasualtyDetails();\n     }\n-    if (!friendlyUnits.containsAll(targetsToPickFrom)) {\n-      throw new IllegalStateException(\n-          \"friendlyUnits should but does not contain all units from targetsToPickFrom\"\n-              + \", battlesite: \"\n-              + battlesite\n-              + \", friendlyUnits: \"\n-              + friendlyUnits\n-              + \", targetsToPickFrom: \"\n-              + targetsToPickFrom);\n-    }\n     final GameData data = bridge.getData();\n-    final boolean isEditMode = BaseEditDelegate.getEditMode(data);\n     final Player tripleaPlayer =\n         player.isNull() ? new WeakAi(player.getName()) : bridge.getRemotePlayer(player);\n     final Map<Unit, Collection<Unit>> dependents =\n         headLess ? Map.of() : CasualtyUtil.getDependents(targetsToPickFrom);\n-    if (isEditMode && !headLess) {\n-      final CasualtyDetails editSelection =\n-          tripleaPlayer.selectCasualties(\n-              targetsToPickFrom,\n-              dependents,\n-              0,\n-              text,\n-              dice,\n-              player,\n-              friendlyUnits,\n-              enemyUnits,\n-              amphibious,\n-              amphibiousLandAttackers,\n-              new CasualtyList(),\n-              battleId,\n-              battlesite,\n-              allowMultipleHitsPerUnit);\n-      final List<Unit> killed = editSelection.getKilled();\n-      // if partial retreat is possible, kill amphibious units first\n-      if (Properties.getPartialAmphibiousRetreat(data)) {\n-        killAmphibiousFirst(killed, targetsToPickFrom);\n-      }\n-      return editSelection;\n-    }\n     if (dice.getHits() == 0) {\n       return new CasualtyDetails(List.of(), List.of(), true);\n     }\n-    int hitsRemaining = dice.getHits();\n-    if (Properties.getTransportCasualtiesRestricted(data)) {\n-      hitsRemaining = extraHits;\n-    }\n-    if (!isEditMode && allTargetsOneTypeOneHitPoint(targetsToPickFrom, dependents)) {\n-      final List<Unit> killed = new ArrayList<>();\n-      final Iterator<Unit> iter = targetsToPickFrom.iterator();", "originalCommit": "5c68a30d8a4395d0cd540212ec3236219daae57e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d684a49a11f76500cc4ea726b4270f0f5bbda960", "url": "https://github.com/triplea-game/triplea/commit/d684a49a11f76500cc4ea726b4270f0f5bbda960", "message": "Fix edit mode battles to allow arbitrary battles\n\nChanges most if not all battle sequences done during edit mode\nto allow for 0-n casualties to be selected where n is the number\nof opposing units.\n\nPreviously edit mode battle had a number of problems:\n- was not triggered in a number of code paths. This update should\n  fix that and have edit mode battle logic be triggered for all\n  battle casualties.\n- always required zero casualties. If unable to turn off edit mode\n  (EG: linux OS when battle window is open), and if in a battle\n  where there is no retreat, then the player had no ability to\n  exit the battle.", "committedDate": "2020-05-03T22:55:40Z", "type": "commit"}]}