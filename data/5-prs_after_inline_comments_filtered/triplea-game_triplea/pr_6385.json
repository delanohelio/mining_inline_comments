{"pr_number": 6385, "pr_title": "Fix unit factory toctou", "pr_createdAt": "2020-05-04T21:45:31Z", "pr_url": "https://github.com/triplea-game/triplea/pull/6385", "timeline": [{"oid": "9122685518435cf9ef66c98bba588a69c4a1cf3b", "url": "https://github.com/triplea-game/triplea/commit/9122685518435cf9ef66c98bba588a69c4a1cf3b", "message": "Simplify, avoid assigning to Optional type, instead use 'map' operation", "committedDate": "2020-05-04T21:26:16Z", "type": "commit"}, {"oid": "fff83890bf707c3cfa4c638fc5d46a889d5b7e1b", "url": "https://github.com/triplea-game/triplea/commit/fff83890bf707c3cfa4c638fc5d46a889d5b7e1b", "message": "Fix TOCTOU when getting images from an image cache.\n\nThere exists a 'clear cache' method that can possibly remove\nthe data in 'images'. If a method call interleaving is just right\nthen we have a TOCTOU problem where we can detect an image exists,\nclear it, then try to retrieve it resulting in a NPE.\n\nThis is fixed by getting the image and checking if that is null,\nif not we use the image we retrieved.", "committedDate": "2020-05-04T21:27:25Z", "type": "commit"}, {"oid": "5da21d60eceea0029563baad07adeca6cd5880e1", "url": "https://github.com/triplea-game/triplea/commit/5da21d60eceea0029563baad07adeca6cd5880e1", "message": "Remove the need to clear image cache in UnitImageFactory by using a new instance\n\n- Change 'setResourceLoader' to instead to be a constructor. If we use UnitImageFactory\nbefore we have called 'setResourceLoader', we would get a NPE. This implies that it\nis safe to convert 'setResourceLoader' to be a constructor.\n\n- When changing scale factor, instead return a new UnitImageFactory that has a fresh\ncache.\n\nWith the two changes above we no longer need to clear cache.", "committedDate": "2020-05-04T21:43:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA0ODUwNw==", "url": "https://github.com/triplea-game/triplea/pull/6385#discussion_r420048507", "bodyText": "Can scaleFactor made final now?", "author": "RoiEXLab", "createdAt": "2020-05-05T11:48:08Z", "path": "game-core/src/main/java/games/strategy/triplea/image/UnitImageFactory.java", "diffHunk": "@@ -55,30 +55,22 @@\n   private ResourceLoader resourceLoader;\n   private MapData mapData;\n \n-  public void setResourceLoader(\n-      final ResourceLoader loader,\n-      final double scaleFactor,\n-      final int initialUnitWidth,\n-      final int initialUnitHeight,\n-      final int initialUnitCounterOffsetWidth,\n-      final int initialUnitCounterOffsetHeight,\n-      final MapData mapData) {\n-    unitIconWidth = initialUnitWidth;\n-    unitIconHeight = initialUnitHeight;\n-    unitCounterOffsetWidth = initialUnitCounterOffsetWidth;\n-    unitCounterOffsetHeight = initialUnitCounterOffsetHeight;\n-    this.scaleFactor = scaleFactor;\n-    resourceLoader = loader;\n+  public UnitImageFactory(\n+      final ResourceLoader resourceLoader, final double unitScale, final MapData mapData) {\n+    unitIconWidth = mapData.getDefaultUnitWidth();\n+    unitIconHeight = mapData.getDefaultUnitHeight();\n+    unitCounterOffsetWidth = mapData.getDefaultUnitCounterOffsetWidth();\n+    unitCounterOffsetHeight = mapData.getDefaultUnitCounterOffsetHeight();\n+    this.scaleFactor = unitScale;\n+    this.resourceLoader = resourceLoader;\n     this.mapData = mapData;\n-    clearImageCache();\n   }\n \n   /** Set the unitScaling factor. */\n-  public void setScaleFactor(final double scaleFactor) {\n-    if (this.scaleFactor != scaleFactor) {\n-      this.scaleFactor = scaleFactor;\n-      clearImageCache();\n-    }\n+  public UnitImageFactory withScaleFactor(final double scaleFactor) {\n+    return this.scaleFactor == scaleFactor", "originalCommit": "5da21d60eceea0029563baad07adeca6cd5880e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI4ODQ3Mw==", "url": "https://github.com/triplea-game/triplea/pull/6385#discussion_r420288473", "bodyText": "Turns out yes, but we need to remove the excess constructors first. Also of interest, the class was using static state and re-setting it in constructor, that state can be made local and final as well once the constructors were removed.\ne6b2685", "author": "DanVanAtta", "createdAt": "2020-05-05T17:37:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA0ODUwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA1NTU1OA==", "url": "https://github.com/triplea-game/triplea/pull/6385#discussion_r420055558", "bodyText": "Actually I'd go for Optional.ofNullable(images.computeIfAbsent(fullName, k -> {/* The lambda below*/})).\nHowever this change would no longer attempt to recompute an image if getTransformedImage(baseName, player, type) returned an empty optional, so maybe we need something like this instead:\nOptional.ofNullable(images.compute(fullName, (key, image) -> Optional.ofNullable(image).or(\n/* lambda below*/\n).orElse(null)));", "author": "RoiEXLab", "createdAt": "2020-05-05T12:01:48Z", "path": "game-core/src/main/java/games/strategy/triplea/image/UnitImageFactory.java", "diffHunk": "@@ -120,26 +106,29 @@ public Image getImage(final UnitCategory unit) {\n       final UnitType type, final GamePlayer player, final boolean damaged, final boolean disabled) {\n     final String baseName = getBaseImageName(type, player, damaged, disabled);\n     final String fullName = baseName + player.getName();\n-    if (images.containsKey(fullName)) {\n-      return Optional.of(images.get(fullName));\n-    }\n-    final Optional<Image> image = getTransformedImage(baseName, player, type);\n-    if (image.isEmpty()) {\n-      return Optional.empty();\n-    }\n-    final Image baseImage = image.get();\n \n-    // We want to scale units according to the given scale factor.\n-    // We use smooth scaling since the images are cached to allow to take our time in doing the\n-    // scaling.\n-    // Image observer is null, since the image should have been guaranteed to be loaded.\n-    final int width = (int) (baseImage.getWidth(null) * scaleFactor);\n-    final int height = (int) (baseImage.getHeight(null) * scaleFactor);\n-    final Image scaledImage = baseImage.getScaledInstance(width, height, Image.SCALE_SMOOTH);\n-    // Ensure the scaling is completed.\n-    Util.ensureImageLoaded(scaledImage);\n-    images.put(fullName, scaledImage);\n-    return Optional.of(scaledImage);\n+    return Optional.ofNullable(images.get(fullName))", "originalCommit": "5da21d60eceea0029563baad07adeca6cd5880e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI5NDcxMA==", "url": "https://github.com/triplea-game/triplea/pull/6385#discussion_r420294710", "bodyText": "Extracting the computation function to another method helps (arguably the thing to do to avoid too much inline code), and computeIfAbsent does avoid the optional or.\nUpdated: 1fdf91d", "author": "DanVanAtta", "createdAt": "2020-05-05T17:47:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA1NTU1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI5NjIwMw==", "url": "https://github.com/triplea-game/triplea/pull/6385#discussion_r420296203", "bodyText": "Interestingly landed quickly into concurrent modification errors, reverted the update: cc3e024", "author": "DanVanAtta", "createdAt": "2020-05-05T17:50:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA1NTU1OA=="}], "type": "inlineReview"}, {"oid": "e6b26852b294108a5c5b839b54c70896d7c8e09b", "url": "https://github.com/triplea-game/triplea/commit/e6b26852b294108a5c5b839b54c70896d7c8e09b", "message": "Remove excess constructors from UnitImageFactory and convert static state to final local", "committedDate": "2020-05-05T17:36:06Z", "type": "commit"}, {"oid": "1fdf91d4b345db9f2df2c4ae1a2ee8a94eb3c951", "url": "https://github.com/triplea-game/triplea/commit/1fdf91d4b345db9f2df2c4ae1a2ee8a94eb3c951", "message": "Use computeIfAbsent to reduce optional chaining.", "committedDate": "2020-05-05T17:46:38Z", "type": "commit"}, {"oid": "cc3e02409b1a7e4f1a8078c43e598f1663ff474e", "url": "https://github.com/triplea-game/triplea/commit/cc3e02409b1a7e4f1a8078c43e598f1663ff474e", "message": "Avoid concurrent modification exception - Revert \"Use computeIfAbsent to reduce optional chaining.\"\n\nThis reverts commit 1fdf91d4b345db9f2df2c4ae1a2ee8a94eb3c951.", "committedDate": "2020-05-05T17:49:35Z", "type": "commit"}]}