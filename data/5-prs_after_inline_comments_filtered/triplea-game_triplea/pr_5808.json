{"pr_number": 5808, "pr_title": "Fix freeze with retreat dialog", "pr_createdAt": "2020-01-01T14:41:55Z", "pr_url": "https://github.com/triplea-game/triplea/pull/5808", "timeline": [{"oid": "d323386cff2fc0202fe35aa1f60a886bfb208c09", "url": "https://github.com/triplea-game/triplea/commit/d323386cff2fc0202fe35aa1f60a886bfb208c09", "message": "Fix freeze with retreat dialog", "committedDate": "2020-01-01T14:38:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMyNjkwNw==", "url": "https://github.com/triplea-game/triplea/pull/5808#discussion_r362326907", "bodyText": "Avoid too many return statements within this method.", "author": "codeclimate", "createdAt": "2020-01-01T14:45:27Z", "path": "game-core/src/main/java/games/strategy/triplea/ui/BattleDisplay.java", "diffHunk": "@@ -407,69 +418,83 @@ private Territory getRetreatInternal(final String message, final Collection<Terr\n         SwingAction.of(\n             \"Retreat?\",\n             e -> {\n-              final String yes =\n-                  possible.size() == 1\n-                      ? \"Retreat to \" + possible.iterator().next().getName()\n-                      : \"Retreat\";\n-              final String no = \"Remain\";\n-              final String cancel = \"Ask Me Later\";\n-              final String[] options = {yes, no, cancel};\n-              final int choice =\n-                  JOptionPane.showOptionDialog(\n-                      BattleDisplay.this,\n-                      message,\n-                      \"Retreat?\",\n-                      JOptionPane.YES_NO_CANCEL_OPTION,\n-                      JOptionPane.PLAIN_MESSAGE,\n-                      null,\n-                      options,\n-                      no);\n-              // dialog dismissed\n-              if (choice == -1) {\n-                return;\n-              }\n-              // wait\n-              if (choice == JOptionPane.CANCEL_OPTION) {\n-                return;\n-              }\n-              // remain\n-              if (choice == JOptionPane.NO_OPTION) {\n-                latch.countDown();\n-                return;\n-              }\n-              // if you have eliminated the impossible, whatever remains, no matter how improbable,\n-              // must be the truth\n-              // retreat\n-              if (possible.size() == 1) {\n-                retreatTo.set(possible.iterator().next());\n+              actionButton.setEnabled(false);\n+              if (showRetreatDialog(message, possible, retreatTo)) {\n+                actionButton.setAction(nullAction);\n                 latch.countDown();\n-              } else {\n-                final RetreatComponent comp = new RetreatComponent(possible);\n-                final int option =\n-                    JOptionPane.showConfirmDialog(\n-                        BattleDisplay.this,\n-                        comp,\n-                        message,\n-                        JOptionPane.OK_CANCEL_OPTION,\n-                        JOptionPane.PLAIN_MESSAGE,\n-                        null);\n-                if (option == JOptionPane.OK_OPTION) {\n-                  if (comp.getSelection() != null) {\n-                    retreatTo.set(comp.getSelection());\n-                    latch.countDown();\n-                  }\n-                }\n               }\n+              actionButton.setEnabled(true);\n             });\n-    SwingUtilities.invokeLater(() -> actionButton.setAction(action));\n-    SwingUtilities.invokeLater(() -> action.actionPerformed(null));\n+    SwingUtilities.invokeLater(\n+        () -> {\n+          actionButton.setAction(action);\n+          action.actionPerformed(null);\n+        });\n     mapPanel.getUiContext().addShutdownLatch(latch);\n     Interruptibles.await(latch);\n     mapPanel.getUiContext().removeShutdownLatch(latch);\n-    SwingUtilities.invokeLater(() -> actionButton.setAction(nullAction));\n+\n     return retreatTo.get();\n   }\n \n+  private boolean showRetreatDialog(\n+      final String message,\n+      final Collection<Territory> possible,\n+      final AtomicReference<Territory> retreatTo) {\n+    final String yes =\n+        possible.size() == 1 ? \"Retreat to \" + possible.iterator().next().getName() : \"Retreat\";\n+    final String no = \"Remain\";\n+    final String cancel = \"Ask Me Later\";\n+    final String[] options = {yes, no, cancel};\n+    final int choice =\n+        JOptionPane.showOptionDialog(\n+            BattleDisplay.this,\n+            message,\n+            \"Retreat?\",\n+            JOptionPane.YES_NO_CANCEL_OPTION,\n+            JOptionPane.PLAIN_MESSAGE,\n+            null,\n+            options,\n+            no);\n+    // dialog dismissed\n+    if (choice == -1) {\n+      return false;\n+    }\n+    // wait\n+    if (choice == JOptionPane.CANCEL_OPTION) {\n+      return false;\n+    }\n+    // remain\n+    if (choice == JOptionPane.NO_OPTION) {\n+      return true;\n+    }\n+    // if you have eliminated the impossible, whatever remains, no matter how improbable,\n+    // must be the truth\n+    // retreat\n+    if (possible.size() == 1) {\n+      retreatTo.set(possible.iterator().next());\n+      return true;\n+    }\n+\n+    final RetreatComponent comp = new RetreatComponent(possible);\n+    final int option =\n+        JOptionPane.showConfirmDialog(\n+            BattleDisplay.this,\n+            comp,\n+            message,\n+            JOptionPane.OK_CANCEL_OPTION,\n+            JOptionPane.PLAIN_MESSAGE,\n+            null);\n+    if (option == JOptionPane.OK_OPTION) {\n+      if (comp.getSelection() != null) {\n+        retreatTo.set(comp.getSelection());\n+        return true;\n+      }\n+    }\n+\n+    return false;", "originalCommit": "d323386cff2fc0202fe35aa1f60a886bfb208c09", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMzMDI1OQ==", "url": "https://github.com/triplea-game/triplea/pull/5808#discussion_r362330259", "bodyText": "This is refactored from an existing method that was more complex. Ignoring.", "author": "asvitkine", "createdAt": "2020-01-01T15:52:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMyNjkwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMyNjkwOA==", "url": "https://github.com/triplea-game/triplea/pull/5808#discussion_r362326908", "bodyText": "Avoid too many return statements within this method.", "author": "codeclimate", "createdAt": "2020-01-01T14:45:28Z", "path": "game-core/src/main/java/games/strategy/triplea/ui/BattleDisplay.java", "diffHunk": "@@ -407,69 +418,83 @@ private Territory getRetreatInternal(final String message, final Collection<Terr\n         SwingAction.of(\n             \"Retreat?\",\n             e -> {\n-              final String yes =\n-                  possible.size() == 1\n-                      ? \"Retreat to \" + possible.iterator().next().getName()\n-                      : \"Retreat\";\n-              final String no = \"Remain\";\n-              final String cancel = \"Ask Me Later\";\n-              final String[] options = {yes, no, cancel};\n-              final int choice =\n-                  JOptionPane.showOptionDialog(\n-                      BattleDisplay.this,\n-                      message,\n-                      \"Retreat?\",\n-                      JOptionPane.YES_NO_CANCEL_OPTION,\n-                      JOptionPane.PLAIN_MESSAGE,\n-                      null,\n-                      options,\n-                      no);\n-              // dialog dismissed\n-              if (choice == -1) {\n-                return;\n-              }\n-              // wait\n-              if (choice == JOptionPane.CANCEL_OPTION) {\n-                return;\n-              }\n-              // remain\n-              if (choice == JOptionPane.NO_OPTION) {\n-                latch.countDown();\n-                return;\n-              }\n-              // if you have eliminated the impossible, whatever remains, no matter how improbable,\n-              // must be the truth\n-              // retreat\n-              if (possible.size() == 1) {\n-                retreatTo.set(possible.iterator().next());\n+              actionButton.setEnabled(false);\n+              if (showRetreatDialog(message, possible, retreatTo)) {\n+                actionButton.setAction(nullAction);\n                 latch.countDown();\n-              } else {\n-                final RetreatComponent comp = new RetreatComponent(possible);\n-                final int option =\n-                    JOptionPane.showConfirmDialog(\n-                        BattleDisplay.this,\n-                        comp,\n-                        message,\n-                        JOptionPane.OK_CANCEL_OPTION,\n-                        JOptionPane.PLAIN_MESSAGE,\n-                        null);\n-                if (option == JOptionPane.OK_OPTION) {\n-                  if (comp.getSelection() != null) {\n-                    retreatTo.set(comp.getSelection());\n-                    latch.countDown();\n-                  }\n-                }\n               }\n+              actionButton.setEnabled(true);\n             });\n-    SwingUtilities.invokeLater(() -> actionButton.setAction(action));\n-    SwingUtilities.invokeLater(() -> action.actionPerformed(null));\n+    SwingUtilities.invokeLater(\n+        () -> {\n+          actionButton.setAction(action);\n+          action.actionPerformed(null);\n+        });\n     mapPanel.getUiContext().addShutdownLatch(latch);\n     Interruptibles.await(latch);\n     mapPanel.getUiContext().removeShutdownLatch(latch);\n-    SwingUtilities.invokeLater(() -> actionButton.setAction(nullAction));\n+\n     return retreatTo.get();\n   }\n \n+  private boolean showRetreatDialog(\n+      final String message,\n+      final Collection<Territory> possible,\n+      final AtomicReference<Territory> retreatTo) {\n+    final String yes =\n+        possible.size() == 1 ? \"Retreat to \" + possible.iterator().next().getName() : \"Retreat\";\n+    final String no = \"Remain\";\n+    final String cancel = \"Ask Me Later\";\n+    final String[] options = {yes, no, cancel};\n+    final int choice =\n+        JOptionPane.showOptionDialog(\n+            BattleDisplay.this,\n+            message,\n+            \"Retreat?\",\n+            JOptionPane.YES_NO_CANCEL_OPTION,\n+            JOptionPane.PLAIN_MESSAGE,\n+            null,\n+            options,\n+            no);\n+    // dialog dismissed\n+    if (choice == -1) {\n+      return false;\n+    }\n+    // wait\n+    if (choice == JOptionPane.CANCEL_OPTION) {\n+      return false;\n+    }\n+    // remain\n+    if (choice == JOptionPane.NO_OPTION) {\n+      return true;\n+    }\n+    // if you have eliminated the impossible, whatever remains, no matter how improbable,\n+    // must be the truth\n+    // retreat\n+    if (possible.size() == 1) {\n+      retreatTo.set(possible.iterator().next());\n+      return true;\n+    }\n+\n+    final RetreatComponent comp = new RetreatComponent(possible);\n+    final int option =\n+        JOptionPane.showConfirmDialog(\n+            BattleDisplay.this,\n+            comp,\n+            message,\n+            JOptionPane.OK_CANCEL_OPTION,\n+            JOptionPane.PLAIN_MESSAGE,\n+            null);\n+    if (option == JOptionPane.OK_OPTION) {\n+      if (comp.getSelection() != null) {\n+        retreatTo.set(comp.getSelection());\n+        return true;", "originalCommit": "d323386cff2fc0202fe35aa1f60a886bfb208c09", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMzMDI1OA==", "url": "https://github.com/triplea-game/triplea/pull/5808#discussion_r362330258", "bodyText": "This is refactored from an existing method that was more complex. Ignoring.", "author": "asvitkine", "createdAt": "2020-01-01T15:52:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMyNjkwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMyNjkwOQ==", "url": "https://github.com/triplea-game/triplea/pull/5808#discussion_r362326909", "bodyText": "Method showRetreatDialog has 44 lines of code (exceeds 25 allowed). Consider refactoring.", "author": "codeclimate", "createdAt": "2020-01-01T14:45:28Z", "path": "game-core/src/main/java/games/strategy/triplea/ui/BattleDisplay.java", "diffHunk": "@@ -407,69 +418,83 @@ private Territory getRetreatInternal(final String message, final Collection<Terr\n         SwingAction.of(\n             \"Retreat?\",\n             e -> {\n-              final String yes =\n-                  possible.size() == 1\n-                      ? \"Retreat to \" + possible.iterator().next().getName()\n-                      : \"Retreat\";\n-              final String no = \"Remain\";\n-              final String cancel = \"Ask Me Later\";\n-              final String[] options = {yes, no, cancel};\n-              final int choice =\n-                  JOptionPane.showOptionDialog(\n-                      BattleDisplay.this,\n-                      message,\n-                      \"Retreat?\",\n-                      JOptionPane.YES_NO_CANCEL_OPTION,\n-                      JOptionPane.PLAIN_MESSAGE,\n-                      null,\n-                      options,\n-                      no);\n-              // dialog dismissed\n-              if (choice == -1) {\n-                return;\n-              }\n-              // wait\n-              if (choice == JOptionPane.CANCEL_OPTION) {\n-                return;\n-              }\n-              // remain\n-              if (choice == JOptionPane.NO_OPTION) {\n-                latch.countDown();\n-                return;\n-              }\n-              // if you have eliminated the impossible, whatever remains, no matter how improbable,\n-              // must be the truth\n-              // retreat\n-              if (possible.size() == 1) {\n-                retreatTo.set(possible.iterator().next());\n+              actionButton.setEnabled(false);\n+              if (showRetreatDialog(message, possible, retreatTo)) {\n+                actionButton.setAction(nullAction);\n                 latch.countDown();\n-              } else {\n-                final RetreatComponent comp = new RetreatComponent(possible);\n-                final int option =\n-                    JOptionPane.showConfirmDialog(\n-                        BattleDisplay.this,\n-                        comp,\n-                        message,\n-                        JOptionPane.OK_CANCEL_OPTION,\n-                        JOptionPane.PLAIN_MESSAGE,\n-                        null);\n-                if (option == JOptionPane.OK_OPTION) {\n-                  if (comp.getSelection() != null) {\n-                    retreatTo.set(comp.getSelection());\n-                    latch.countDown();\n-                  }\n-                }\n               }\n+              actionButton.setEnabled(true);\n             });\n-    SwingUtilities.invokeLater(() -> actionButton.setAction(action));\n-    SwingUtilities.invokeLater(() -> action.actionPerformed(null));\n+    SwingUtilities.invokeLater(\n+        () -> {\n+          actionButton.setAction(action);\n+          action.actionPerformed(null);\n+        });\n     mapPanel.getUiContext().addShutdownLatch(latch);\n     Interruptibles.await(latch);\n     mapPanel.getUiContext().removeShutdownLatch(latch);\n-    SwingUtilities.invokeLater(() -> actionButton.setAction(nullAction));\n+\n     return retreatTo.get();\n   }\n \n+  private boolean showRetreatDialog(", "originalCommit": "d323386cff2fc0202fe35aa1f60a886bfb208c09", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMzMDI1Nw==", "url": "https://github.com/triplea-game/triplea/pull/5808#discussion_r362330257", "bodyText": "This is refactored from an existing method that was more complex. Ignoring.", "author": "asvitkine", "createdAt": "2020-01-01T15:52:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMyNjkwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMzMDI4Nw==", "url": "https://github.com/triplea-game/triplea/pull/5808#discussion_r362330287", "bodyText": "This is refactored from an existing method that was more complex. Ignoring.", "author": "asvitkine", "createdAt": "2020-01-01T15:53:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMyNjkwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMyNjkxMQ==", "url": "https://github.com/triplea-game/triplea/pull/5808#discussion_r362326911", "bodyText": "Method showRetreatDialog has a Cognitive Complexity of 8 (exceeds 5 allowed). Consider refactoring.", "author": "codeclimate", "createdAt": "2020-01-01T14:45:28Z", "path": "game-core/src/main/java/games/strategy/triplea/ui/BattleDisplay.java", "diffHunk": "@@ -407,69 +418,83 @@ private Territory getRetreatInternal(final String message, final Collection<Terr\n         SwingAction.of(\n             \"Retreat?\",\n             e -> {\n-              final String yes =\n-                  possible.size() == 1\n-                      ? \"Retreat to \" + possible.iterator().next().getName()\n-                      : \"Retreat\";\n-              final String no = \"Remain\";\n-              final String cancel = \"Ask Me Later\";\n-              final String[] options = {yes, no, cancel};\n-              final int choice =\n-                  JOptionPane.showOptionDialog(\n-                      BattleDisplay.this,\n-                      message,\n-                      \"Retreat?\",\n-                      JOptionPane.YES_NO_CANCEL_OPTION,\n-                      JOptionPane.PLAIN_MESSAGE,\n-                      null,\n-                      options,\n-                      no);\n-              // dialog dismissed\n-              if (choice == -1) {\n-                return;\n-              }\n-              // wait\n-              if (choice == JOptionPane.CANCEL_OPTION) {\n-                return;\n-              }\n-              // remain\n-              if (choice == JOptionPane.NO_OPTION) {\n-                latch.countDown();\n-                return;\n-              }\n-              // if you have eliminated the impossible, whatever remains, no matter how improbable,\n-              // must be the truth\n-              // retreat\n-              if (possible.size() == 1) {\n-                retreatTo.set(possible.iterator().next());\n+              actionButton.setEnabled(false);\n+              if (showRetreatDialog(message, possible, retreatTo)) {\n+                actionButton.setAction(nullAction);\n                 latch.countDown();\n-              } else {\n-                final RetreatComponent comp = new RetreatComponent(possible);\n-                final int option =\n-                    JOptionPane.showConfirmDialog(\n-                        BattleDisplay.this,\n-                        comp,\n-                        message,\n-                        JOptionPane.OK_CANCEL_OPTION,\n-                        JOptionPane.PLAIN_MESSAGE,\n-                        null);\n-                if (option == JOptionPane.OK_OPTION) {\n-                  if (comp.getSelection() != null) {\n-                    retreatTo.set(comp.getSelection());\n-                    latch.countDown();\n-                  }\n-                }\n               }\n+              actionButton.setEnabled(true);\n             });\n-    SwingUtilities.invokeLater(() -> actionButton.setAction(action));\n-    SwingUtilities.invokeLater(() -> action.actionPerformed(null));\n+    SwingUtilities.invokeLater(\n+        () -> {\n+          actionButton.setAction(action);\n+          action.actionPerformed(null);\n+        });\n     mapPanel.getUiContext().addShutdownLatch(latch);\n     Interruptibles.await(latch);\n     mapPanel.getUiContext().removeShutdownLatch(latch);\n-    SwingUtilities.invokeLater(() -> actionButton.setAction(nullAction));\n+\n     return retreatTo.get();\n   }\n \n+  private boolean showRetreatDialog(", "originalCommit": "d323386cff2fc0202fe35aa1f60a886bfb208c09", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMzMDI0OA==", "url": "https://github.com/triplea-game/triplea/pull/5808#discussion_r362330248", "bodyText": "This is refactored from an existing method that was more complex. Ignoring.", "author": "asvitkine", "createdAt": "2020-01-01T15:52:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMyNjkxMQ=="}], "type": "inlineReview"}, {"oid": "a241413f3e03ab75be521089b7501e0a13314ed9", "url": "https://github.com/triplea-game/triplea/commit/a241413f3e03ab75be521089b7501e0a13314ed9", "message": "Disable action button when showing casualties dialog too.", "committedDate": "2020-01-01T15:33:11Z", "type": "commit"}, {"oid": "a4299dcf8eb8112b9c2f959b06dc6bd402a37d9e", "url": "https://github.com/triplea-game/triplea/commit/a4299dcf8eb8112b9c2f959b06dc6bd402a37d9e", "message": "Use constant for checking joptionpane results", "committedDate": "2020-01-01T15:40:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMzMDg3Mg==", "url": "https://github.com/triplea-game/triplea/pull/5808#discussion_r362330872", "bodyText": "This is a great sherlock holmes quote, but this should be remove because I don't get what it's trying to imply? \ud83d\ude05", "author": "RoiEXLab", "createdAt": "2020-01-01T16:06:34Z", "path": "game-core/src/main/java/games/strategy/triplea/ui/BattleDisplay.java", "diffHunk": "@@ -407,69 +418,83 @@ private Territory getRetreatInternal(final String message, final Collection<Terr\n         SwingAction.of(\n             \"Retreat?\",\n             e -> {\n-              final String yes =\n-                  possible.size() == 1\n-                      ? \"Retreat to \" + possible.iterator().next().getName()\n-                      : \"Retreat\";\n-              final String no = \"Remain\";\n-              final String cancel = \"Ask Me Later\";\n-              final String[] options = {yes, no, cancel};\n-              final int choice =\n-                  JOptionPane.showOptionDialog(\n-                      BattleDisplay.this,\n-                      message,\n-                      \"Retreat?\",\n-                      JOptionPane.YES_NO_CANCEL_OPTION,\n-                      JOptionPane.PLAIN_MESSAGE,\n-                      null,\n-                      options,\n-                      no);\n-              // dialog dismissed\n-              if (choice == -1) {\n-                return;\n-              }\n-              // wait\n-              if (choice == JOptionPane.CANCEL_OPTION) {\n-                return;\n-              }\n-              // remain\n-              if (choice == JOptionPane.NO_OPTION) {\n-                latch.countDown();\n-                return;\n-              }\n-              // if you have eliminated the impossible, whatever remains, no matter how improbable,\n-              // must be the truth\n-              // retreat\n-              if (possible.size() == 1) {\n-                retreatTo.set(possible.iterator().next());\n+              actionButton.setEnabled(false);\n+              if (showRetreatDialog(message, possible, retreatTo)) {\n+                actionButton.setAction(nullAction);\n                 latch.countDown();\n-              } else {\n-                final RetreatComponent comp = new RetreatComponent(possible);\n-                final int option =\n-                    JOptionPane.showConfirmDialog(\n-                        BattleDisplay.this,\n-                        comp,\n-                        message,\n-                        JOptionPane.OK_CANCEL_OPTION,\n-                        JOptionPane.PLAIN_MESSAGE,\n-                        null);\n-                if (option == JOptionPane.OK_OPTION) {\n-                  if (comp.getSelection() != null) {\n-                    retreatTo.set(comp.getSelection());\n-                    latch.countDown();\n-                  }\n-                }\n               }\n+              actionButton.setEnabled(true);\n             });\n-    SwingUtilities.invokeLater(() -> actionButton.setAction(action));\n-    SwingUtilities.invokeLater(() -> action.actionPerformed(null));\n+    SwingUtilities.invokeLater(\n+        () -> {\n+          actionButton.setAction(action);\n+          action.actionPerformed(null);\n+        });\n     mapPanel.getUiContext().addShutdownLatch(latch);\n     Interruptibles.await(latch);\n     mapPanel.getUiContext().removeShutdownLatch(latch);\n-    SwingUtilities.invokeLater(() -> actionButton.setAction(nullAction));\n+\n     return retreatTo.get();\n   }\n \n+  private boolean showRetreatDialog(\n+      final String message,\n+      final Collection<Territory> possible,\n+      final AtomicReference<Territory> retreatTo) {\n+    final String yes =\n+        possible.size() == 1 ? \"Retreat to \" + possible.iterator().next().getName() : \"Retreat\";\n+    final String no = \"Remain\";\n+    final String cancel = \"Ask Me Later\";\n+    final String[] options = {yes, no, cancel};\n+    final int choice =\n+        JOptionPane.showOptionDialog(\n+            BattleDisplay.this,\n+            message,\n+            \"Retreat?\",\n+            JOptionPane.YES_NO_CANCEL_OPTION,\n+            JOptionPane.PLAIN_MESSAGE,\n+            null,\n+            options,\n+            no);\n+    // dialog dismissed\n+    if (choice == JOptionPane.CLOSED_OPTION) {\n+      return false;\n+    }\n+    // wait\n+    if (choice == JOptionPane.CANCEL_OPTION) {\n+      return false;\n+    }\n+    // remain\n+    if (choice == JOptionPane.NO_OPTION) {\n+      return true;\n+    }\n+    // if you have eliminated the impossible, whatever remains, no matter how improbable,\n+    // must be the truth", "originalCommit": "a4299dcf8eb8112b9c2f959b06dc6bd402a37d9e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMzMjc4Mw==", "url": "https://github.com/triplea-game/triplea/pull/5808#discussion_r362332783", "bodyText": "Done.", "author": "asvitkine", "createdAt": "2020-01-01T16:51:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMzMDg3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMzMTA4MQ==", "url": "https://github.com/triplea-game/triplea/pull/5808#discussion_r362331081", "bodyText": "Do you know why the button was previously disabled here?\nOr if you don't, why did you have to change it?", "author": "RoiEXLab", "createdAt": "2020-01-01T16:10:50Z", "path": "game-core/src/main/java/games/strategy/triplea/ui/BattleDisplay.java", "diffHunk": "@@ -611,10 +638,10 @@ public void actionPerformed(final ActionEvent e) {\n                     final CasualtyDetails response = new CasualtyDetails(killed, damaged, false);\n                     casualtyDetails.set(response);\n                     dicePanel.removeAll();\n-                    actionButton.setEnabled(false);", "originalCommit": "a4299dcf8eb8112b9c2f959b06dc6bd402a37d9e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMzMjY4NA==", "url": "https://github.com/triplea-game/triplea/pull/5808#discussion_r362332684", "bodyText": "It's not strictly necessary for this PR, but this makes things consistent with the other logic.\nThis code was both disabling the button and setting it to nullAction. In other code, the button was set to nullAction but not disabled. We could do either both or just setting to nullAction, but this case was inconsistent - so the change is to make it consistent.", "author": "asvitkine", "createdAt": "2020-01-01T16:48:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMzMTA4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMzMTIwMQ==", "url": "https://github.com/triplea-game/triplea/pull/5808#discussion_r362331201", "bodyText": "If you want you could merge the 2 if cases together", "author": "RoiEXLab", "createdAt": "2020-01-01T16:13:56Z", "path": "game-core/src/main/java/games/strategy/triplea/ui/BattleDisplay.java", "diffHunk": "@@ -407,69 +418,83 @@ private Territory getRetreatInternal(final String message, final Collection<Terr\n         SwingAction.of(\n             \"Retreat?\",\n             e -> {\n-              final String yes =\n-                  possible.size() == 1\n-                      ? \"Retreat to \" + possible.iterator().next().getName()\n-                      : \"Retreat\";\n-              final String no = \"Remain\";\n-              final String cancel = \"Ask Me Later\";\n-              final String[] options = {yes, no, cancel};\n-              final int choice =\n-                  JOptionPane.showOptionDialog(\n-                      BattleDisplay.this,\n-                      message,\n-                      \"Retreat?\",\n-                      JOptionPane.YES_NO_CANCEL_OPTION,\n-                      JOptionPane.PLAIN_MESSAGE,\n-                      null,\n-                      options,\n-                      no);\n-              // dialog dismissed\n-              if (choice == -1) {\n-                return;\n-              }\n-              // wait\n-              if (choice == JOptionPane.CANCEL_OPTION) {\n-                return;\n-              }\n-              // remain\n-              if (choice == JOptionPane.NO_OPTION) {\n-                latch.countDown();\n-                return;\n-              }\n-              // if you have eliminated the impossible, whatever remains, no matter how improbable,\n-              // must be the truth\n-              // retreat\n-              if (possible.size() == 1) {\n-                retreatTo.set(possible.iterator().next());\n+              actionButton.setEnabled(false);\n+              if (showRetreatDialog(message, possible, retreatTo)) {\n+                actionButton.setAction(nullAction);\n                 latch.countDown();\n-              } else {\n-                final RetreatComponent comp = new RetreatComponent(possible);\n-                final int option =\n-                    JOptionPane.showConfirmDialog(\n-                        BattleDisplay.this,\n-                        comp,\n-                        message,\n-                        JOptionPane.OK_CANCEL_OPTION,\n-                        JOptionPane.PLAIN_MESSAGE,\n-                        null);\n-                if (option == JOptionPane.OK_OPTION) {\n-                  if (comp.getSelection() != null) {\n-                    retreatTo.set(comp.getSelection());\n-                    latch.countDown();\n-                  }\n-                }\n               }\n+              actionButton.setEnabled(true);\n             });\n-    SwingUtilities.invokeLater(() -> actionButton.setAction(action));\n-    SwingUtilities.invokeLater(() -> action.actionPerformed(null));\n+    SwingUtilities.invokeLater(\n+        () -> {\n+          actionButton.setAction(action);\n+          action.actionPerformed(null);\n+        });\n     mapPanel.getUiContext().addShutdownLatch(latch);\n     Interruptibles.await(latch);\n     mapPanel.getUiContext().removeShutdownLatch(latch);\n-    SwingUtilities.invokeLater(() -> actionButton.setAction(nullAction));\n+\n     return retreatTo.get();\n   }\n \n+  private boolean showRetreatDialog(\n+      final String message,\n+      final Collection<Territory> possible,\n+      final AtomicReference<Territory> retreatTo) {\n+    final String yes =\n+        possible.size() == 1 ? \"Retreat to \" + possible.iterator().next().getName() : \"Retreat\";\n+    final String no = \"Remain\";\n+    final String cancel = \"Ask Me Later\";\n+    final String[] options = {yes, no, cancel};\n+    final int choice =\n+        JOptionPane.showOptionDialog(\n+            BattleDisplay.this,\n+            message,\n+            \"Retreat?\",\n+            JOptionPane.YES_NO_CANCEL_OPTION,\n+            JOptionPane.PLAIN_MESSAGE,\n+            null,\n+            options,\n+            no);\n+    // dialog dismissed\n+    if (choice == JOptionPane.CLOSED_OPTION) {\n+      return false;\n+    }\n+    // wait\n+    if (choice == JOptionPane.CANCEL_OPTION) {\n+      return false;\n+    }", "originalCommit": "a4299dcf8eb8112b9c2f959b06dc6bd402a37d9e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMzMjc5Mw==", "url": "https://github.com/triplea-game/triplea/pull/5808#discussion_r362332793", "bodyText": "Done.", "author": "asvitkine", "createdAt": "2020-01-01T16:51:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMzMTIwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMzMTIzMA==", "url": "https://github.com/triplea-game/triplea/pull/5808#discussion_r362331230", "bodyText": "Same here with merged if cases.", "author": "RoiEXLab", "createdAt": "2020-01-01T16:14:43Z", "path": "game-core/src/main/java/games/strategy/triplea/ui/BattleDisplay.java", "diffHunk": "@@ -357,46 +357,57 @@ private Territory getSubmerge(final String message) {\n         SwingAction.of(\n             \"Submerge Subs?\",\n             e -> {\n-              final String ok = \"Submerge\";\n-              final String cancel = \"Remain\";\n-              final String wait = \"Ask Me Later\";\n-              final String[] options = {ok, cancel, wait};\n-              final int choice =\n-                  JOptionPane.showOptionDialog(\n-                      BattleDisplay.this,\n-                      message,\n-                      \"Submerge Subs?\",\n-                      JOptionPane.OK_CANCEL_OPTION,\n-                      JOptionPane.PLAIN_MESSAGE,\n-                      null,\n-                      options,\n-                      cancel);\n-              // dialog dismissed\n-              if (choice == -1) {\n-                return;\n-              }\n-              // wait\n-              if (choice == 2) {\n-                return;\n-              }\n-              // remain\n-              if (choice == 1) {\n+              actionButton.setEnabled(false);\n+              if (showSubmergeDialog(message, retreatTo)) {\n+                actionButton.setAction(nullAction);\n                 latch.countDown();\n-                return;\n               }\n-              // submerge\n-              retreatTo.set(battleLocation);\n-              latch.countDown();\n+              actionButton.setEnabled(true);\n             });\n-    SwingUtilities.invokeLater(() -> actionButton.setAction(action));\n-    SwingUtilities.invokeLater(() -> action.actionPerformed(null));\n+    SwingUtilities.invokeLater(\n+        () -> {\n+          actionButton.setAction(action);\n+          action.actionPerformed(null);\n+        });\n     mapPanel.getUiContext().addShutdownLatch(latch);\n     Interruptibles.await(latch);\n     mapPanel.getUiContext().removeShutdownLatch(latch);\n-    SwingUtilities.invokeLater(() -> actionButton.setAction(nullAction));\n     return retreatTo.get();\n   }\n \n+  private boolean showSubmergeDialog(\n+      final String message, final AtomicReference<Territory> retreatTo) {\n+    final String ok = \"Submerge\";\n+    final String cancel = \"Remain\";\n+    final String wait = \"Ask Me Later\";\n+    final String[] options = {ok, cancel, wait};\n+    final int choice =\n+        JOptionPane.showOptionDialog(\n+            BattleDisplay.this,\n+            message,\n+            \"Submerge Subs?\",\n+            JOptionPane.OK_CANCEL_OPTION,\n+            JOptionPane.PLAIN_MESSAGE,\n+            null,\n+            options,\n+            cancel);\n+    // dialog dismissed\n+    if (choice == JOptionPane.CLOSED_OPTION) {\n+      return false;\n+    }\n+    // wait\n+    if (choice == JOptionPane.CANCEL_OPTION) {", "originalCommit": "a4299dcf8eb8112b9c2f959b06dc6bd402a37d9e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMzMjc3Mg==", "url": "https://github.com/triplea-game/triplea/pull/5808#discussion_r362332772", "bodyText": "Done.", "author": "asvitkine", "createdAt": "2020-01-01T16:51:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMzMTIzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMzMTg4Mg==", "url": "https://github.com/triplea-game/triplea/pull/5808#discussion_r362331882", "bodyText": "Not mandatory, but I think it would make a nicer API if you returned some sort of RetreatResult object here:\n@AllArgsConstructor\n@Getter\nclass RetreatResult {\n  private final boolean confirmed;\n  @Nullable\n  private final Territory targetTerritory;\n}\nInstead of setting an atomic reference. I'm not quite happy with this approach though, even though it would preserve existing logic.\nInstead I'd rather go with this approach:\n  @Nullable\n  Territory getRetreat(\n      final String message, final Collection<Territory> possible, final boolean submerge) {\n    final Territory territory = (!submerge || possible.size() > 1)\n        ? getRetreatInternal(message, possible)\n        : getSubmerge(message);\n    return territory.equals(getBattleLocation()) ? null : territory;\n}\nAnd then both showSubmergeDialog and showRetreatDialog, return an empty optional at places where false is currently returned and an optional with the retreat territory (the current battle territory instead of null for the remain case) else.\nThis is a far more \"logical\" approach and the \"current territory\" could even get passed out to calling classes to avoid null in a larger refactoring in another PR.", "author": "RoiEXLab", "createdAt": "2020-01-01T16:29:59Z", "path": "game-core/src/main/java/games/strategy/triplea/ui/BattleDisplay.java", "diffHunk": "@@ -357,46 +357,57 @@ private Territory getSubmerge(final String message) {\n         SwingAction.of(\n             \"Submerge Subs?\",\n             e -> {\n-              final String ok = \"Submerge\";\n-              final String cancel = \"Remain\";\n-              final String wait = \"Ask Me Later\";\n-              final String[] options = {ok, cancel, wait};\n-              final int choice =\n-                  JOptionPane.showOptionDialog(\n-                      BattleDisplay.this,\n-                      message,\n-                      \"Submerge Subs?\",\n-                      JOptionPane.OK_CANCEL_OPTION,\n-                      JOptionPane.PLAIN_MESSAGE,\n-                      null,\n-                      options,\n-                      cancel);\n-              // dialog dismissed\n-              if (choice == -1) {\n-                return;\n-              }\n-              // wait\n-              if (choice == 2) {\n-                return;\n-              }\n-              // remain\n-              if (choice == 1) {\n+              actionButton.setEnabled(false);\n+              if (showSubmergeDialog(message, retreatTo)) {\n+                actionButton.setAction(nullAction);\n                 latch.countDown();\n-                return;\n               }\n-              // submerge\n-              retreatTo.set(battleLocation);\n-              latch.countDown();\n+              actionButton.setEnabled(true);\n             });\n-    SwingUtilities.invokeLater(() -> actionButton.setAction(action));\n-    SwingUtilities.invokeLater(() -> action.actionPerformed(null));\n+    SwingUtilities.invokeLater(\n+        () -> {\n+          actionButton.setAction(action);\n+          action.actionPerformed(null);\n+        });\n     mapPanel.getUiContext().addShutdownLatch(latch);\n     Interruptibles.await(latch);\n     mapPanel.getUiContext().removeShutdownLatch(latch);\n-    SwingUtilities.invokeLater(() -> actionButton.setAction(nullAction));\n     return retreatTo.get();\n   }\n \n+  private boolean showSubmergeDialog(\n+      final String message, final AtomicReference<Territory> retreatTo) {", "originalCommit": "a4299dcf8eb8112b9c2f959b06dc6bd402a37d9e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMzMjczMA==", "url": "https://github.com/triplea-game/triplea/pull/5808#discussion_r362332730", "bodyText": "I agree that it would be better, but perhaps we can try to minimize such large changes in this PR and do the refactoring without logic changes in a follow-up?", "author": "asvitkine", "createdAt": "2020-01-01T16:50:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMzMTg4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMzMjk0MQ==", "url": "https://github.com/triplea-game/triplea/pull/5808#discussion_r362332941", "bodyText": "No worries. I'll submit a follow-up once this is merged, mostly wrote this for myself so I can understand why it's not that easy. ^^", "author": "RoiEXLab", "createdAt": "2020-01-01T16:55:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMzMTg4Mg=="}], "type": "inlineReview"}, {"oid": "737e2c1e0b0f3519b742fa3c64eb205875cfd2fa", "url": "https://github.com/triplea-game/triplea/commit/737e2c1e0b0f3519b742fa3c64eb205875cfd2fa", "message": "Small clean ups based on review", "committedDate": "2020-01-01T16:52:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMzMjkwNQ==", "url": "https://github.com/triplea-game/triplea/pull/5808#discussion_r362332905", "bodyText": "Method showRetreatDialog has 41 lines of code (exceeds 25 allowed). Consider refactoring.", "author": "codeclimate", "createdAt": "2020-01-01T16:54:26Z", "path": "game-core/src/main/java/games/strategy/triplea/ui/BattleDisplay.java", "diffHunk": "@@ -407,69 +414,78 @@ private Territory getRetreatInternal(final String message, final Collection<Terr\n         SwingAction.of(\n             \"Retreat?\",\n             e -> {\n-              final String yes =\n-                  possible.size() == 1\n-                      ? \"Retreat to \" + possible.iterator().next().getName()\n-                      : \"Retreat\";\n-              final String no = \"Remain\";\n-              final String cancel = \"Ask Me Later\";\n-              final String[] options = {yes, no, cancel};\n-              final int choice =\n-                  JOptionPane.showOptionDialog(\n-                      BattleDisplay.this,\n-                      message,\n-                      \"Retreat?\",\n-                      JOptionPane.YES_NO_CANCEL_OPTION,\n-                      JOptionPane.PLAIN_MESSAGE,\n-                      null,\n-                      options,\n-                      no);\n-              // dialog dismissed\n-              if (choice == -1) {\n-                return;\n-              }\n-              // wait\n-              if (choice == JOptionPane.CANCEL_OPTION) {\n-                return;\n-              }\n-              // remain\n-              if (choice == JOptionPane.NO_OPTION) {\n+              actionButton.setEnabled(false);\n+              if (showRetreatDialog(message, possible, retreatTo)) {\n+                actionButton.setAction(nullAction);\n                 latch.countDown();\n-                return;\n-              }\n-              // if you have eliminated the impossible, whatever remains, no matter how improbable,\n-              // must be the truth\n-              // retreat\n-              if (possible.size() == 1) {\n-                retreatTo.set(possible.iterator().next());\n-                latch.countDown();\n-              } else {\n-                final RetreatComponent comp = new RetreatComponent(possible);\n-                final int option =\n-                    JOptionPane.showConfirmDialog(\n-                        BattleDisplay.this,\n-                        comp,\n-                        message,\n-                        JOptionPane.OK_CANCEL_OPTION,\n-                        JOptionPane.PLAIN_MESSAGE,\n-                        null);\n-                if (option == JOptionPane.OK_OPTION) {\n-                  if (comp.getSelection() != null) {\n-                    retreatTo.set(comp.getSelection());\n-                    latch.countDown();\n-                  }\n-                }\n               }\n+              actionButton.setEnabled(true);\n             });\n-    SwingUtilities.invokeLater(() -> actionButton.setAction(action));\n-    SwingUtilities.invokeLater(() -> action.actionPerformed(null));\n+    SwingUtilities.invokeLater(\n+        () -> {\n+          actionButton.setAction(action);\n+          action.actionPerformed(null);\n+        });\n     mapPanel.getUiContext().addShutdownLatch(latch);\n     Interruptibles.await(latch);\n     mapPanel.getUiContext().removeShutdownLatch(latch);\n-    SwingUtilities.invokeLater(() -> actionButton.setAction(nullAction));\n+\n     return retreatTo.get();\n   }\n \n+  private boolean showRetreatDialog(", "originalCommit": "737e2c1e0b0f3519b742fa3c64eb205875cfd2fa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}