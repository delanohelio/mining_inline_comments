{"pr_number": 7101, "pr_title": "Save game compatibility testing", "pr_createdAt": "2020-07-11T06:00:31Z", "pr_url": "https://github.com/triplea-game/triplea/pull/7101", "timeline": [{"oid": "87fc00d80c725692f1040513f3ef4beaaf9f66ba", "url": "https://github.com/triplea-game/triplea/commit/87fc00d80c725692f1040513f3ef4beaaf9f66ba", "message": "Extract test file listing utility to its own class", "committedDate": "2020-07-11T05:07:14Z", "type": "commit"}, {"oid": "f579419632d8a5b8d119de7f884c873d8a9bbb3e", "url": "https://github.com/triplea-game/triplea/commit/f579419632d8a5b8d119de7f884c873d8a9bbb3e", "message": "Improve file listing test utility robustness, print folder name if not found and improve variable naming", "committedDate": "2020-07-11T05:38:13Z", "type": "commit"}, {"oid": "dfaf707a54ba2ebab3a79f5e8c3df2d00592e210", "url": "https://github.com/triplea-game/triplea/commit/dfaf707a54ba2ebab3a79f5e8c3df2d00592e210", "message": "Add a test that will load save-games from test/resources/save-games and tries to load them.\n\nThis test serves as a compatibility check.", "committedDate": "2020-07-11T05:38:15Z", "type": "commit"}, {"oid": "3b54c08e84d351d80a72fc4609f9dae47aac2a62", "url": "https://github.com/triplea-game/triplea/commit/3b54c08e84d351d80a72fc4609f9dae47aac2a62", "message": "Add task to download save-game files from assets & add list of save-game files to be downloaded", "committedDate": "2020-07-11T05:38:15Z", "type": "commit"}, {"oid": "527d42c2cce9e06b44d95078e3a21c37371eed47", "url": "https://github.com/triplea-game/triplea/commit/527d42c2cce9e06b44d95078e3a21c37371eed47", "message": "Improve compatibility test, assert various gameData properties are not null after load\n\nIf we change the name of an item in GameData, it will not cause a loading exception but we will get an unexpected null value. This update makes the compatibility check more robust (but still not fool-proof)", "committedDate": "2020-07-11T05:57:57Z", "type": "commit"}, {"oid": "234208dfacb473920a6020d42b5d5d2379d09192", "url": "https://github.com/triplea-game/triplea/commit/234208dfacb473920a6020d42b5d5d2379d09192", "message": "Add UnmatchedTest suppression to save-game-compatibility test & @Integration", "committedDate": "2020-07-11T06:01:52Z", "type": "commit"}, {"oid": "247fd5e88aba3378f3bc6d582d5a1020c50efdf8", "url": "https://github.com/triplea-game/triplea/commit/247fd5e88aba3378f3bc6d582d5a1020c50efdf8", "message": "Add @Integration tag to compatibility test", "committedDate": "2020-07-11T06:20:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIyNzEyMQ==", "url": "https://github.com/triplea-game/triplea/pull/7101#discussion_r453227121", "bodyText": "Might be overkill, but you might want to consider creating a custom ArgumentsProvider.\nIf you combine this with a meta annotation like this:\n@Target({ANNOTATION_TYPE,METHOD})\n@Retention(RUNTIME)\n@ArgumentsSource(CustomArgumentProvider.class)\npublic @interface DirectorySource {\n  String folderName;\n}\nThe ArgumentsProvider could then read out this annotation and provide the folders based on the name.\nIn my opinion a nice use of the API JUnit provides, but as mentioned already potentially overkill for just 2 methods.\nWould avoid the repeated @MethodSource code though", "author": "RoiEXLab", "createdAt": "2020-07-11T19:34:40Z", "path": "smoke-testing/src/test/java/games/strategy/engine/data/TestDataFileLister.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package games.strategy.engine.data;\n+\n+import java.io.File;\n+import java.nio.file.Paths;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Comparator;\n+import java.util.stream.Collectors;\n+import lombok.experimental.UtilityClass;\n+import org.triplea.java.Postconditions;\n+\n+@UtilityClass\n+class TestDataFileLister {\n+\n+  /**\n+   * Returns a list of files located in folder like: 'test/resources/{folder-name}'.\n+   *\n+   * @param folderName Name of the folder in 'test/resources'\n+   * @return List of all files located in specified folder.\n+   */\n+  Collection<File> listFilesInTestResourcesDirectory(final String folderName) {\n+    return Arrays.stream(findFilesInFolder(folderName).listFiles())\n+        .sorted(Comparator.comparing(File::getName))\n+        .collect(Collectors.toList());\n+  }", "originalCommit": "247fd5e88aba3378f3bc6d582d5a1020c50efdf8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIzMTk5MA==", "url": "https://github.com/triplea-game/triplea/pull/7101#discussion_r453231990", "bodyText": "Interesting idea. I was not aware of the custom data source.\nIMO we'll probably want around 3 to 5 examples before that would really makes sense.", "author": "DanVanAtta", "createdAt": "2020-07-11T20:30:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIyNzEyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIzMjYxMw==", "url": "https://github.com/triplea-game/triplea/pull/7101#discussion_r453232613", "bodyText": "Yeah, at this point it's probably too much boilerplate to be worth it.\nThe JUnit API is really well designed in my opinion. It's a little bit heavy on reflection use in my opinion, but a lot of the code is designed around annotation inheritance, which makes it very extensible and customizable.\nBut there's definitely a hurdle to get the hang of it by observing how the junit implements csvsource for example", "author": "RoiEXLab", "createdAt": "2020-07-11T20:37:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIyNzEyMQ=="}], "type": "inlineReview"}]}