{"pr_number": 6334, "pr_title": "Upload lobby game chat messages to lobby & store in DB", "pr_createdAt": "2020-04-26T02:11:47Z", "pr_url": "https://github.com/triplea-game/triplea/pull/6334", "timeline": [{"oid": "917bc7ad8544d1b10e4e6b7aa9f45e064e2746ed", "url": "https://github.com/triplea-game/triplea/commit/917bc7ad8544d1b10e4e6b7aa9f45e064e2746ed", "message": "Upload lobby game chat messages to lobby & store in DB\n\n- Adds a table to store lobby game chat messages\n- Adds a DAO to insert those messages\n- Adds an upload module that will verify a given api-key and game-id\n  are valid on each upload request, if so we insert a chat message\n- Adds an endpoint controller to receive upload requests\n- Adds a new http client to upload chat messages to the upload endpoint.\n- Updates ServerModel to chec if we have a game-to-lobby-connection, if\n  so then we add a new chat listener that will use a background thread\n  to upload messages to lobby", "committedDate": "2020-04-26T02:11:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE5MTYwMw==", "url": "https://github.com/triplea-game/triplea/pull/6334#discussion_r415191603", "bodyText": "Similar blocks of code found in 2 locations. Consider refactoring.", "author": "codeclimate", "createdAt": "2020-04-26T02:13:20Z", "path": "http-clients/src/main/java/org/triplea/http/client/lobby/chat/upload/ChatMessageUpload.java", "diffHunk": "@@ -0,0 +1,21 @@\n+package org.triplea.http.client.lobby.chat.upload;", "originalCommit": "917bc7ad8544d1b10e4e6b7aa9f45e064e2746ed", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3150d7cd0b73cdd4aea9187d0374174ee97d45a1", "url": "https://github.com/triplea-game/triplea/commit/3150d7cd0b73cdd4aea9187d0374174ee97d45a1", "message": "Change DB tables to have lobby_game, game_chat_history & game_chat_history with FKs", "committedDate": "2020-04-26T20:19:29Z", "type": "commit"}, {"oid": "3e7cd9d105ed28e831b8a335bc451712084a9dcf", "url": "https://github.com/triplea-game/triplea/commit/3e7cd9d105ed28e831b8a335bc451712084a9dcf", "message": "Rename class: GameChatHistoryDao->LobbyGameDao", "committedDate": "2020-04-26T21:44:29Z", "type": "commit"}, {"oid": "363b24eca250becae3307efe0148b667f729c1fd", "url": "https://github.com/triplea-game/triplea/commit/363b24eca250becae3307efe0148b667f729c1fd", "message": "Update chat upload DAO to lookup FK into lobby_games table.", "committedDate": "2020-04-26T21:55:34Z", "type": "commit"}, {"oid": "f773049a8aa192892a84d487f3a1af8ba67782c0", "url": "https://github.com/triplea-game/triplea/commit/f773049a8aa192892a84d487f3a1af8ba67782c0", "message": "Merge chat upload into lobby watcher and rename packages", "committedDate": "2020-04-26T22:09:34Z", "type": "commit"}, {"oid": "429f6255b44a4f028fb46abd25a18c3f783db8e1", "url": "https://github.com/triplea-game/triplea/commit/429f6255b44a4f028fb46abd25a18c3f783db8e1", "message": "Verify chat insert row count - organize packages splitting game listing and lobby watcher", "committedDate": "2020-04-26T22:36:32Z", "type": "commit"}, {"oid": "7b3a9e7b90e44b87f0c1286089a3a734c5995f25", "url": "https://github.com/triplea-game/triplea/commit/7b3a9e7b90e44b87f0c1286089a3a734c5995f25", "message": "Add insert lobby game DAO code", "committedDate": "2020-04-26T23:56:47Z", "type": "commit"}, {"oid": "ac744c31e3e6ee5d8baa79750c3c517b14a0e7cb", "url": "https://github.com/triplea-game/triplea/commit/ac744c31e3e6ee5d8baa79750c3c517b14a0e7cb", "message": "Merge remote-tracking branch 'origin/master' into game-chat-upload", "committedDate": "2020-04-26T23:59:07Z", "type": "commit"}, {"oid": "d25610f533078c94a3a616796913a70dea275e40", "url": "https://github.com/triplea-game/triplea/commit/d25610f533078c94a3a616796913a70dea275e40", "message": "Insert lobby_game database record when game is posted", "committedDate": "2020-04-27T00:15:55Z", "type": "commit"}, {"oid": "f5c332624ced8fd74ffc0468d22c3dade9192521", "url": "https://github.com/triplea-game/triplea/commit/f5c332624ced8fd74ffc0468d22c3dade9192521", "message": "wip", "committedDate": "2020-04-27T00:20:46Z", "type": "commit"}, {"oid": "d5682ac7239b863a2f957f5c296e037bd100ef50", "url": "https://github.com/triplea-game/triplea/commit/d5682ac7239b863a2f957f5c296e037bd100ef50", "message": "Fix up tests", "committedDate": "2020-04-27T01:00:32Z", "type": "commit"}, {"oid": "9aca655016bba5c6d43e51b72dd71efea0029c33", "url": "https://github.com/triplea-game/triplea/commit/9aca655016bba5c6d43e51b72dd71efea0029c33", "message": "Update new table SQL, add comments and indexes", "committedDate": "2020-04-27T01:05:34Z", "type": "commit"}, {"oid": "8e428cb27bef505146343b2826cefc2579dff66f", "url": "https://github.com/triplea-game/triplea/commit/8e428cb27bef505146343b2826cefc2579dff66f", "message": "Fix sql", "committedDate": "2020-04-27T02:29:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjIyNjEwMA==", "url": "https://github.com/triplea-game/triplea/pull/6334#discussion_r416226100", "bodyText": "Ok this formatting confused me for a second", "author": "RoiEXLab", "createdAt": "2020-04-27T23:49:31Z", "path": "http-server/src/main/java/org/triplea/db/dao/lobby/games/LobbyGameDao.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package org.triplea.db.dao.lobby.games;\n+\n+import com.google.common.base.Ascii;\n+import org.jdbi.v3.sqlobject.customizer.Bind;\n+import org.jdbi.v3.sqlobject.statement.SqlUpdate;\n+import org.triplea.db.dao.api.key.ApiKeyHasher;\n+import org.triplea.domain.data.ApiKey;\n+import org.triplea.http.client.lobby.game.lobby.watcher.ChatMessageUpload;\n+import org.triplea.http.client.lobby.game.lobby.watcher.LobbyGameListing;\n+import org.triplea.java.Postconditions;\n+\n+/**\n+ * Game chat history table stores chat messages that have happened in games. This data is upload by\n+ * game servers to the lobby and is then recorded in database.\n+ */\n+public interface LobbyGameDao {\n+  int MESSAGE_COLUMN_LENGTH = 240;\n+\n+  default void insertLobbyGame(ApiKey apiKey, LobbyGameListing lobbyGameListing) {\n+    final String hashedkey = new ApiKeyHasher().apply(apiKey);\n+    final int insertCount =\n+        insertLobbyGame(\n+            lobbyGameListing.getLobbyGame().getHostName(), //\n+            lobbyGameListing.getGameId(),\n+            hashedkey);\n+    Postconditions.assertState(\n+        insertCount == 1, \"Failed to insert lobby game: \" + lobbyGameListing);\n+  }\n+\n+  @SqlUpdate(\n+      \"insert into lobby_game(host_name, game_id, game_hosting_api_key_id) \"\n+          + \"values (\"\n+          + \"  :hostName,\"\n+          + \"  :gameId,\"\n+          + \"  (select id from game_hosting_api_key where key = :apiKey))\")", "originalCommit": "8e428cb27bef505146343b2826cefc2579dff66f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjIzNzU2Mg==", "url": "https://github.com/triplea-game/triplea/pull/6334#discussion_r416237562", "bodyText": "The string concats do make it kinda difficult. One 'values' arg per line is not too uncommon though.", "author": "DanVanAtta", "createdAt": "2020-04-28T00:20:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjIyNjEwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjIyNjU5NQ==", "url": "https://github.com/triplea-game/triplea/pull/6334#discussion_r416226595", "bodyText": "Is this to check if (select id from game_hosting_api_key where key = :apiKey) did actually return a single entry?\nMight be worth adding a comment to explain this.\nI don't think any other place in the code actually checks the insert count", "author": "RoiEXLab", "createdAt": "2020-04-27T23:50:51Z", "path": "http-server/src/main/java/org/triplea/db/dao/lobby/games/LobbyGameDao.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package org.triplea.db.dao.lobby.games;\n+\n+import com.google.common.base.Ascii;\n+import org.jdbi.v3.sqlobject.customizer.Bind;\n+import org.jdbi.v3.sqlobject.statement.SqlUpdate;\n+import org.triplea.db.dao.api.key.ApiKeyHasher;\n+import org.triplea.domain.data.ApiKey;\n+import org.triplea.http.client.lobby.game.lobby.watcher.ChatMessageUpload;\n+import org.triplea.http.client.lobby.game.lobby.watcher.LobbyGameListing;\n+import org.triplea.java.Postconditions;\n+\n+/**\n+ * Game chat history table stores chat messages that have happened in games. This data is upload by\n+ * game servers to the lobby and is then recorded in database.\n+ */\n+public interface LobbyGameDao {\n+  int MESSAGE_COLUMN_LENGTH = 240;\n+\n+  default void insertLobbyGame(ApiKey apiKey, LobbyGameListing lobbyGameListing) {\n+    final String hashedkey = new ApiKeyHasher().apply(apiKey);\n+    final int insertCount =\n+        insertLobbyGame(\n+            lobbyGameListing.getLobbyGame().getHostName(), //\n+            lobbyGameListing.getGameId(),\n+            hashedkey);\n+    Postconditions.assertState(\n+        insertCount == 1, \"Failed to insert lobby game: \" + lobbyGameListing);", "originalCommit": "8e428cb27bef505146343b2826cefc2579dff66f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjIzODE5NA==", "url": "https://github.com/triplea-game/triplea/pull/6334#discussion_r416238194", "bodyText": "If the subselect returns 0 elements we'll get a non-null constraint violation.\n\nI don't think any other place in the code actually checks the insert count\n\nWe should have at least a few. When adding a good number of inserts before during JDBI migration I actually removed a number of ''postcondition' checks so that 'postconditions' could be PR'd at the same time.. Slightly interesting history; in general we should be checking insert count and not just blindly trusting it succeeded.", "author": "DanVanAtta", "createdAt": "2020-04-28T00:22:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjIyNjU5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjIyOTQ5Mg==", "url": "https://github.com/triplea-game/triplea/pull/6334#discussion_r416229492", "bodyText": "I just noticed that the return value is used to potentially display  a warning message.\nWhy did you decide it's better to do the warning outside?", "author": "RoiEXLab", "createdAt": "2020-04-27T23:58:30Z", "path": "http-server/src/main/java/org/triplea/modules/game/lobby/watcher/ChatUploadModule.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package org.triplea.modules.game.lobby.watcher;\n+\n+import java.util.function.BiPredicate;\n+import lombok.AllArgsConstructor;\n+import org.jdbi.v3.core.Jdbi;\n+import org.triplea.db.dao.lobby.games.LobbyGameDao;\n+import org.triplea.domain.data.ApiKey;\n+import org.triplea.http.client.lobby.game.lobby.watcher.ChatMessageUpload;\n+import org.triplea.modules.game.listing.GameListing;\n+\n+/**\n+ * Responsible for inserting chat messages into database. Validates that a given request has a\n+ * matching game-id and api-key pair, otherwise does a no-op. We need to be sure to validate an\n+ * API-key and game-id match otherwise an attacker with an http client could try to insert incorrect\n+ * data, game-id's are publicly known, but API-keys are not. Only the actual host should know the\n+ * api-key.\n+ *\n+ * <p>If the ID and API-Key pair are not valid, we will just drop the request and return a 200 If we\n+ * return a 400 or some other error, we'll give a potential attacker a way to try and guess\n+ * API-Keys.\n+ */\n+@AllArgsConstructor\n+class ChatUploadModule {\n+  private final LobbyGameDao lobbyGameDao;\n+  private final BiPredicate<ApiKey, String> gameIdValidator;\n+\n+  static ChatUploadModule build(final Jdbi jdbi, final GameListing gameListing) {\n+    return new ChatUploadModule(\n+        jdbi.onDemand(LobbyGameDao.class), gameListing::isValidApiKeyAndGameId);\n+  }\n+\n+  public boolean upload(final ChatMessageUpload chatMessageUpload) {", "originalCommit": "8e428cb27bef505146343b2826cefc2579dff66f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjIzODg5MA==", "url": "https://github.com/triplea-game/triplea/pull/6334#discussion_r416238890", "bodyText": "Separation of responsibility I suppose. This class has trouble knowing if the 'silent fail' is actually an error condition or not.  Beyond that, we don't have all the information we'd want to log, notably the IP of who sent us this request as this condition is perhaps likely to be an attacker.", "author": "DanVanAtta", "createdAt": "2020-04-28T00:24:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjIyOTQ5Mg=="}], "type": "inlineReview"}]}