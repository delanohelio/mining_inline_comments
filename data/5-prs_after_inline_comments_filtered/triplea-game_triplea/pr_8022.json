{"pr_number": 8022, "pr_title": "Pass around CombatValue instead of its pieces", "pr_createdAt": "2020-10-31T16:58:01Z", "pr_url": "https://github.com/triplea-game/triplea/pull/8022", "timeline": [{"oid": "792f21a8b5dd3d485b9ee46ebd80bc8ace7073fd", "url": "https://github.com/triplea-game/triplea/commit/792f21a8b5dd3d485b9ee46ebd80bc8ace7073fd", "message": "Pass around CombatValue instead of its pieces", "committedDate": "2020-10-31T16:57:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUxNjc1Nw==", "url": "https://github.com/triplea-game/triplea/pull/8022#discussion_r515516757", "bodyText": "I added this api method because territoryEffects was being passed around solely to be used in a \"simplified\" combat value calculator (see UnitBattleComparator#getUnitPowerForSorting).  I think I'll be able to replace that completely with the new combat values but I didn't want to include that change in this PR.  So, by adding this getTerritoryEffects api, it allows me to remove the need to pass it around manually and then once I rework UnitBattleComparator#getUnitPowerForSorting, I'll remove this api completely.", "author": "trevan", "createdAt": "2020-10-31T17:01:31Z", "path": "game-core/src/main/java/games/strategy/triplea/delegate/power/calculator/CombatValue.java", "diffHunk": "@@ -15,8 +15,14 @@\n \n   boolean isDefending();\n \n+  Collection<TerritoryEffect> getTerritoryEffects();", "originalCommit": "792f21a8b5dd3d485b9ee46ebd80bc8ace7073fd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUxNzExOA==", "url": "https://github.com/triplea-game/triplea/pull/8022#discussion_r515517118", "bodyText": "getFriendUnits and getEnemyUnits is used solely to send the friend and enemy units across the wire in Player#selectCasualties.  And the only implementation of Player#selectCasualties that uses the enemy and friend units is AbstractProAi#selectCasualties.  I've thought about putting a @ChangeOnNextRelease tag here, but I'm not exactly sure if there is something that could be done to remove the need for these two methods.", "author": "trevan", "createdAt": "2020-10-31T17:04:36Z", "path": "game-core/src/main/java/games/strategy/triplea/delegate/power/calculator/CombatValue.java", "diffHunk": "@@ -15,8 +15,14 @@\n \n   boolean isDefending();\n \n+  Collection<TerritoryEffect> getTerritoryEffects();\n+\n   GameData getGameData();\n \n+  Collection<Unit> getFriendUnits();", "originalCommit": "792f21a8b5dd3d485b9ee46ebd80bc8ace7073fd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "829c0ad3e151ae478dfac8af4b280cc318ef3d50", "url": "https://github.com/triplea-game/triplea/commit/829c0ad3e151ae478dfac8af4b280cc318ef3d50", "message": "Give friendUnits and enemyUnits defaults so tests don't need to include them", "committedDate": "2020-10-31T18:16:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTU2MTIxOA==", "url": "https://github.com/triplea-game/triplea/pull/8022#discussion_r515561218", "bodyText": "this kind of line rally 'screams' for a builder.", "author": "DanVanAtta", "createdAt": "2020-11-01T01:18:04Z", "path": "game-core/src/main/java/games/strategy/triplea/delegate/battle/StrategicBombingRaidBattle.java", "diffHunk": "@@ -587,33 +588,40 @@ private CasualtyDetails calculateCasualties(\n       return CasualtySelector.selectCasualties(\n           attacker,\n           validAttackingUnitsForThisRoll,\n-          attackingUnits,\n-          defendingUnits,\n+          CombatValue.buildMainCombatValue(\n+              defendingUnits,\n+              attackingUnits,\n+              false,\n+              bridge.getData(),\n+              battleSite,\n+              territoryEffects),\n           battleSite,\n-          territoryEffects,\n           bridge,\n-          text, /* dice */\n-          null,\n-          /* defending */ false,\n-          battleId, /* head-less */\n-          false,\n+          text,\n+          null, /* dice */", "originalCommit": "829c0ad3e151ae478dfac8af4b280cc318ef3d50", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}