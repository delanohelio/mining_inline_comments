{"pr_number": 5874, "pr_title": "Refactor and hover listener consolidate", "pr_createdAt": "2020-01-24T08:01:08Z", "pr_url": "https://github.com/triplea-game/triplea/pull/5874", "timeline": [{"oid": "59b144217a4477d0e033c80dee0d757d00f4cc03", "url": "https://github.com/triplea-game/triplea/commit/59b144217a4477d0e033c80dee0d757d00f4cc03", "message": "Move MapPanel and closely related classes to their own package", "committedDate": "2020-01-24T06:54:48Z", "type": "commit"}, {"oid": "c4a1e01365f234fac71c69a2d66df0ca7fd5d4da", "url": "https://github.com/triplea-game/triplea/commit/c4a1e01365f234fac71c69a2d66df0ca7fd5d4da", "message": "Replace MapPanelSmallView with parent class", "committedDate": "2020-01-24T06:54:53Z", "type": "commit"}, {"oid": "6358998f53caec12b1fb86ab43e42b9aa7014203", "url": "https://github.com/triplea-game/triplea/commit/6358998f53caec12b1fb86ab43e42b9aa7014203", "message": "Consolidate storage of current hover units\n\nWas previously stored both in TripleAFrame and MapPanel, this update\nfetches the data from just one place, MapPanel.", "committedDate": "2020-01-24T07:18:44Z", "type": "commit"}, {"oid": "5a88a05a8b9dff41ed94df9703aefb844f95e7a6", "url": "https://github.com/triplea-game/triplea/commit/5a88a05a8b9dff41ed94df9703aefb844f95e7a6", "message": "Move method \"getEditMode\" to MapPanel", "committedDate": "2020-01-24T07:43:25Z", "type": "commit"}, {"oid": "d4c2fa73ec245556d65eef29a5b7abffb3719c3c", "url": "https://github.com/triplea-game/triplea/commit/d4c2fa73ec245556d65eef29a5b7abffb3719c3c", "message": "Replace local getter access with direct variable access", "committedDate": "2020-01-24T07:56:15Z", "type": "commit"}, {"oid": "e7ace87c8b22de340ba6e56797c62560d068c02d", "url": "https://github.com/triplea-game/triplea/commit/e7ace87c8b22de340ba6e56797c62560d068c02d", "message": "Run spotlessApply", "committedDate": "2020-01-24T07:57:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUwOTY0NQ==", "url": "https://github.com/triplea-game/triplea/pull/5874#discussion_r370509645", "bodyText": "Method setMouseShadowUnits has 62 lines of code (exceeds 25 allowed). Consider refactoring.", "author": "codeclimate", "createdAt": "2020-01-24T08:02:23Z", "path": "game-core/src/main/java/games/strategy/triplea/ui/panels/map/MapPanel.java", "diffHunk": "@@ -846,18 +867,18 @@ public void setScale(final double newScale) {\n     repaint();\n   }\n \n-  void initSmallMap() {\n+  public void initSmallMap() {\n     for (final Territory territory : gameData.getMap().getTerritories()) {\n       smallMapImageManager.updateTerritoryOwner(territory, gameData, uiContext.getMapData());\n     }\n     smallMapImageManager.update(uiContext.getMapData());\n   }\n \n-  void changeSmallMapOffscreenMap() {\n+  public void changeSmallMapOffscreenMap() {\n     smallMapImageManager.updateOffscreenImage(uiContext.getMapImage().getSmallMapImage());\n   }\n \n-  void setMouseShadowUnits(final Collection<Unit> units) {\n+  public void setMouseShadowUnits(final Collection<Unit> units) {", "originalCommit": "e7ace87c8b22de340ba6e56797c62560d068c02d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUwOTY0Ng==", "url": "https://github.com/triplea-game/triplea/pull/5874#discussion_r370509646", "bodyText": "File MapPanel.java has 882 lines of code (exceeds 250 allowed). Consider refactoring.", "author": "codeclimate", "createdAt": "2020-01-24T08:02:23Z", "path": "game-core/src/main/java/games/strategy/triplea/ui/panels/map/MapPanel.java", "diffHunk": "@@ -1,4 +1,4 @@\n-package games.strategy.triplea.ui;\n+package games.strategy.triplea.ui.panels.map;", "originalCommit": "e7ace87c8b22de340ba6e56797c62560d068c02d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUwOTY0OQ==", "url": "https://github.com/triplea-game/triplea/pull/5874#discussion_r370509649", "bodyText": "File MapRouteDrawer.java has 311 lines of code (exceeds 250 allowed). Consider refactoring.", "author": "codeclimate", "createdAt": "2020-01-24T08:02:24Z", "path": "game-core/src/main/java/games/strategy/triplea/ui/panels/map/MapRouteDrawer.java", "diffHunk": "@@ -1,4 +1,4 @@\n-package games.strategy.triplea.ui;\n+package games.strategy.triplea.ui.panels.map;", "originalCommit": "e7ace87c8b22de340ba6e56797c62560d068c02d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "bb4a85a36c364b5c84f76e34aad46dde9e5ca628", "url": "https://github.com/triplea-game/triplea/commit/bb4a85a36c364b5c84f76e34aad46dde9e5ca628", "message": "Move tests to mirror new location of corresponding source files", "committedDate": "2020-01-24T08:29:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg2NjY4MQ==", "url": "https://github.com/triplea-game/triplea/pull/5874#discussion_r370866681", "bodyText": "Ok, this change came unexpected \ud83d\ude2e", "author": "RoiEXLab", "createdAt": "2020-01-24T22:16:00Z", "path": "game-core/src/main/java/games/strategy/triplea/ui/panels/map/MapPanelSmallView.java", "diffHunk": "@@ -1,14 +0,0 @@\n-package games.strategy.triplea.ui.panels.map;\n-\n-import games.strategy.triplea.ui.mapdata.MapData;\n-import games.strategy.ui.ImageScrollModel;\n-import games.strategy.ui.ImageScrollerSmallView;\n-import java.awt.Image;\n-\n-public class MapPanelSmallView extends ImageScrollerSmallView {", "originalCommit": "c4a1e01365f234fac71c69a2d66df0ca7fd5d4da", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg2Nzg5OQ==", "url": "https://github.com/triplea-game/triplea/pull/5874#discussion_r370867899", "bodyText": "Why not just pass units to getUnitInfo()?\nThis way there's no need to expose a getter, or am I missing something?", "author": "RoiEXLab", "createdAt": "2020-01-24T22:19:58Z", "path": "game-core/src/main/java/games/strategy/triplea/ui/TripleAFrame.java", "diffHunk": "@@ -481,10 +480,7 @@ public void windowGainedFocus(final WindowEvent e) {\n     tooltipManager = new MapUnitTooltipManager(mapPanel);\n     mapPanel.addMapSelectionListener(mapSelectionListener);\n     mapPanel.addMouseOverUnitListener(\n-        (units, territory) -> {\n-          unitsBeingMousedOver = units;\n-          tooltipManager.updateTooltip(getUnitInfo());\n-        });\n+        (units, territory) -> tooltipManager.updateTooltip(getUnitInfo()));", "originalCommit": "6358998f53caec12b1fb86ab43e42b9aa7014203", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg3NDU2NA==", "url": "https://github.com/triplea-game/triplea/pull/5874#discussion_r370874564", "bodyText": "I did give that a shot, the second usage of getUnitInfo IIRC does not work well with it. If it did work, then perhaps the changes then became just extremely involved and would not have been reviewable. Perhaps after this PR it can be done more cleanly, or the original problem in the second usage would become clear.", "author": "DanVanAtta", "createdAt": "2020-01-24T22:43:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg2Nzg5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg4MDQ5OQ==", "url": "https://github.com/triplea-game/triplea/pull/5874#discussion_r370880499", "bodyText": "Interesting, weird nevertheless.", "author": "RoiEXLab", "createdAt": "2020-01-24T23:07:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg2Nzg5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg2OTQxMA==", "url": "https://github.com/triplea-game/triplea/pull/5874#discussion_r370869410", "bodyText": "I guess this comment does no longer make 100% sense (if it ever did).\nOne thing that I think is weird with this change in general:\nEven if the method itself seems to delegate 50% of it's method to the MapPanel class, the only usages are part of TripleAFrame which seems counter-intuitive to me \ud83e\udd14", "author": "RoiEXLab", "createdAt": "2020-01-24T22:25:05Z", "path": "game-core/src/main/java/games/strategy/triplea/ui/panels/map/MapPanel.java", "diffHunk": "@@ -341,6 +342,18 @@ public GameData getData() {\n     return gameData;\n   }\n \n+  public boolean getEditMode() {\n+    final boolean isEditMode;\n+    // use GameData from mapPanel since it will follow current history node", "originalCommit": "5a88a05a8b9dff41ed94df9703aefb844f95e7a6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg3NTMxOA==", "url": "https://github.com/triplea-game/triplea/pull/5874#discussion_r370875318", "bodyText": "I'm confused. This method delegates basically everything to MapPanel. The getEditMode method being in TripleAFrame seems to be classic feature envy code smell. The fact TripleAFrame is the only consumer, does not mean it should also know/manipulate the internal data state of MapPanel by getting internal data and then managing and interpretting that data state.\nTHe comment still kinda makes sense perhaps. MapPanel, when in history mode, gets a clone of the game data. It's subtle and hard to really grok the data state of MapPanel (not well encapsulated at all, but also MapPanel is so bloated, it's hard to keep track of the data state anyways)", "author": "DanVanAtta", "createdAt": "2020-01-24T22:46:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg2OTQxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg4MDIzMg==", "url": "https://github.com/triplea-game/triplea/pull/5874#discussion_r370880232", "bodyText": "Good point about the encapsulation.\nIf the 50% was what confused you: Just an arbitrary number, didn't want to write 100% because that's not really accurant either", "author": "RoiEXLab", "createdAt": "2020-01-24T23:05:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg2OTQxMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg2OTU4Nw==", "url": "https://github.com/triplea-game/triplea/pull/5874#discussion_r370869587", "bodyText": "Just a small thing I noticed, there's no need to have an extra variable for this, this line can return the result directly.", "author": "RoiEXLab", "createdAt": "2020-01-24T22:25:38Z", "path": "game-core/src/main/java/games/strategy/triplea/ui/panels/map/MapPanel.java", "diffHunk": "@@ -341,6 +342,18 @@ public GameData getData() {\n     return gameData;\n   }\n \n+  public boolean getEditMode() {\n+    final boolean isEditMode;\n+    // use GameData from mapPanel since it will follow current history node\n+    gameData.acquireReadLock();\n+    try {\n+      isEditMode = BaseEditDelegate.getEditMode(gameData);", "originalCommit": "5a88a05a8b9dff41ed94df9703aefb844f95e7a6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg3NTczMQ==", "url": "https://github.com/triplea-game/triplea/pull/5874#discussion_r370875731", "bodyText": "Agree, but for a follow-up. Didn't want to drastically update things too much to keep the review managable and make it clear this is moved code. The amount of cleanup that should be done in MapPanel and TripleAFrame goes really, really deep.", "author": "DanVanAtta", "createdAt": "2020-01-24T22:47:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg2OTU4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg3MDAwMA==", "url": "https://github.com/triplea-game/triplea/pull/5874#discussion_r370870000", "bodyText": "This is actually a thing I wonder which \"style\" to prefer, maybe something we should mention in our code guidelines", "author": "RoiEXLab", "createdAt": "2020-01-24T22:27:08Z", "path": "game-core/src/main/java/games/strategy/triplea/ui/panels/map/MapPanel.java", "diffHunk": "@@ -140,7 +140,7 @@ public void gameDataChanged(final Change change) {\n             tileManager.resetTiles(gameData, uiContext.getMapData());\n             SwingUtilities.invokeLater(\n                 () -> {\n-                  recreateTiles(getData(), uiContext);\n+                  recreateTiles(gameData, uiContext);", "originalCommit": "d4c2fa73ec245556d65eef29a5b7abffb3719c3c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg3NjI4MA==", "url": "https://github.com/triplea-game/triplea/pull/5874#discussion_r370876280", "bodyText": "IIRC, there is a sonar lint violation about it. Using a method to access local data is an anti-pattern IMO. The method can be overriden, which then can cause unexpected breaks in methods that were previously working. Even if there are no breakages, it becomes very non-intuitive looking at code how it would work as the methods can behave differently depending on the instance type. This removes the ability to reason about a class by only looking at its code, you have to understand the usage history and system state to know exactly how the class will behave. Hence, anti-pattern, it makes it hard to reason how this class will work and breaks encapsulation.", "author": "DanVanAtta", "createdAt": "2020-01-24T22:49:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg3MDAwMA=="}], "type": "inlineReview"}]}