{"pr_number": 8321, "pr_title": "Update serverModel to use 'headless' check consistently", "pr_createdAt": "2020-11-30T00:27:55Z", "pr_url": "https://github.com/triplea-game/triplea/pull/8321", "timeline": [{"oid": "0d3f5bd62e6743f3fe97bc393e76f1d03b4933d2", "url": "https://github.com/triplea-game/triplea/commit/0d3f5bd62e6743f3fe97bc393e76f1d03b4933d2", "message": "Update serverModel to use 'headless' check consistently\n\nInstead of using either the headless instance being null,\nor the 'ui' being null to check for headless, this update\nchanges ServerMode to use HeadlessServer.headless() instead.", "committedDate": "2020-11-30T00:27:34Z", "type": "commit"}, {"oid": "b445485675d2ffbc50e40f7993d8bee5423c5338", "url": "https://github.com/triplea-game/triplea/commit/b445485675d2ffbc50e40f7993d8bee5423c5338", "message": "Auto-Formatting", "committedDate": "2020-11-30T00:29:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjE4NjUzOA==", "url": "https://github.com/triplea-game/triplea/pull/8321#discussion_r556186538", "bodyText": "A bit late to the party, but I want to provide some context to this.\nIIRC I introduced the ui != null check consistently as a first step to abstract the UI into an interace eventually, so that disablePlayer for example would just call an interface, which does nothing for headless servers, but does all of the UI stuff for headed servers.", "author": "RoiEXLab", "createdAt": "2021-01-13T00:35:12Z", "path": "game-core/src/main/java/games/strategy/engine/framework/startup/mc/ServerModel.java", "diffHunk": "@@ -137,7 +137,7 @@ public void releasePlayer(final INode who, final String playerName) {\n \n         @Override\n         public void disablePlayer(final String playerName) {\n-          if (ui != null) {\n+          if (!HeadlessGameServer.headless()) {", "originalCommit": "b445485675d2ffbc50e40f7993d8bee5423c5338", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}