{"pr_number": 9585, "pr_title": "MULE-18894: NotSerializableException when persisting ABP decorators.", "pr_createdAt": "2020-10-16T05:09:56Z", "pr_url": "https://github.com/mulesoft/mule/pull/9585", "timeline": [{"oid": "1d6e8ccc4b61248442c17712e1ab40a0f2fa3865", "url": "https://github.com/mulesoft/mule/commit/1d6e8ccc4b61248442c17712e1ab40a0f2fa3865", "message": "MULE-18894: NotSerializableException when persisting ABP decorators.", "committedDate": "2020-10-16T05:38:29Z", "type": "commit"}, {"oid": "1d6e8ccc4b61248442c17712e1ab40a0f2fa3865", "url": "https://github.com/mulesoft/mule/commit/1d6e8ccc4b61248442c17712e1ab40a0f2fa3865", "message": "MULE-18894: NotSerializableException when persisting ABP decorators.", "committedDate": "2020-10-16T05:38:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQzNjY0OQ==", "url": "https://github.com/mulesoft/mule/pull/9585#discussion_r506436649", "bodyText": "remove empty line", "author": "elrodro83", "createdAt": "2020-10-16T13:42:53Z", "path": "core/src/main/java/org/mule/runtime/core/internal/management/stats/PayloadStatisticsCollection.java", "diffHunk": "@@ -44,4 +58,15 @@ public Spliterator spliterator() {\n     populator.accept(size());\n     return super.toArray(object);\n   }\n+\n+  @Override\n+  public void writeExternal(ObjectOutput out) throws IOException {\n+    out.writeObject(getCollection());\n+", "originalCommit": "1d6e8ccc4b61248442c17712e1ab40a0f2fa3865", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQzNzA0OA==", "url": "https://github.com/mulesoft/mule/pull/9585#discussion_r506437048", "bodyText": "we shouldn't be expecting to encounter this actual class serialized.", "author": "elrodro83", "createdAt": "2020-10-16T13:43:20Z", "path": "core/src/main/java/org/mule/runtime/core/internal/management/stats/PayloadStatisticsCollection.java", "diffHunk": "@@ -44,4 +58,15 @@ public Spliterator spliterator() {\n     populator.accept(size());\n     return super.toArray(object);\n   }\n+\n+  @Override\n+  public void writeExternal(ObjectOutput out) throws IOException {\n+    out.writeObject(getCollection());\n+\n+  }\n+\n+  @Override\n+  public void readExternal(ObjectInput in) throws IOException, ClassNotFoundException {\n+    this.collection = (Collection) in.readObject();", "originalCommit": "1d6e8ccc4b61248442c17712e1ab40a0f2fa3865", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjYyNDIwMw==", "url": "https://github.com/mulesoft/mule/pull/9585#discussion_r506624203", "bodyText": "Needed for the case where we are not using kryo.", "author": "fsgonz", "createdAt": "2020-10-16T17:35:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQzNzA0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQzNzIyNw==", "url": "https://github.com/mulesoft/mule/pull/9585#discussion_r506437227", "bodyText": "we shouldn't be expecting to encounter this actual class serialized.", "author": "elrodro83", "createdAt": "2020-10-16T13:43:34Z", "path": "core/src/main/java/org/mule/runtime/core/internal/management/stats/PayloadStatisticsList.java", "diffHunk": "@@ -45,4 +61,14 @@ public Spliterator spliterator() {\n     return super.toArray(object);\n   }\n \n+  @Override\n+  public void writeExternal(ObjectOutput out) throws IOException {\n+    out.writeObject(getList());\n+  }\n+\n+  @Override\n+  public void readExternal(ObjectInput in) throws IOException, ClassNotFoundException {\n+    this.collection = (List) in.readObject();", "originalCommit": "1d6e8ccc4b61248442c17712e1ab40a0f2fa3865", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQzNzU1NQ==", "url": "https://github.com/mulesoft/mule/pull/9585#discussion_r506437555", "bodyText": "would this be needed if there were a kryo serializer for this class?", "author": "elrodro83", "createdAt": "2020-10-16T13:43:56Z", "path": "core/src/main/java/org/mule/runtime/core/internal/management/stats/PayloadStatisticsCollection.java", "diffHunk": "@@ -6,18 +6,32 @@\n  */\n package org.mule.runtime.core.internal.management.stats;\n \n+import java.io.Externalizable;\n+import java.io.IOException;\n+import java.io.ObjectInput;\n+import java.io.ObjectOutput;\n import java.util.Collection;\n+import java.util.HashSet;\n import java.util.Iterator;\n import java.util.Spliterator;\n import java.util.Spliterators;\n import java.util.function.LongConsumer;\n \n import org.apache.commons.collections.collection.AbstractCollectionDecorator;\n \n-class PayloadStatisticsCollection<T> extends AbstractCollectionDecorator {\n+class PayloadStatisticsCollection<T> extends AbstractCollectionDecorator implements Externalizable {\n \n   private final LongConsumer populator;\n \n+  public PayloadStatisticsCollection() {", "originalCommit": "1d6e8ccc4b61248442c17712e1ab40a0f2fa3865", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQ3OTMzMw==", "url": "https://github.com/mulesoft/mule/pull/9585#discussion_r506479333", "bodyText": "the void constructor is needed for non-kryo scenarios. Kryo also needs all parameters to be initialized in the void constructor.", "author": "fsgonz", "createdAt": "2020-10-16T14:22:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQzNzU1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQzNzYwMw==", "url": "https://github.com/mulesoft/mule/pull/9585#discussion_r506437603", "bodyText": "would this be needed if there were a kryo serializer for this class?", "author": "elrodro83", "createdAt": "2020-10-16T13:44:01Z", "path": "core/src/main/java/org/mule/runtime/core/internal/management/stats/PayloadStatisticsList.java", "diffHunk": "@@ -14,10 +19,21 @@\n \n import org.apache.commons.collections.list.AbstractListDecorator;\n \n-final class PayloadStatisticsList<T> extends AbstractListDecorator {\n+final class PayloadStatisticsList<T> extends AbstractListDecorator implements Externalizable {\n+\n+  private static final long serialVersionUID = -5991764233175594789L;\n \n   private final LongConsumer populator;\n \n+  public PayloadStatisticsList() {", "originalCommit": "1d6e8ccc4b61248442c17712e1ab40a0f2fa3865", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQ3OTQwNg==", "url": "https://github.com/mulesoft/mule/pull/9585#discussion_r506479406", "bodyText": "the void constructor is needed for non-kryo scenarios. Kryo also needs all parameters to be initialized in the void constructor.", "author": "fsgonz", "createdAt": "2020-10-16T14:22:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQzNzYwMw=="}], "type": "inlineReview"}, {"oid": "9dacb01e913e75a2a547d1629c1e289be9aadcbc", "url": "https://github.com/mulesoft/mule/commit/9dacb01e913e75a2a547d1629c1e289be9aadcbc", "message": "MULE-18894: Review.", "committedDate": "2020-10-16T17:06:28Z", "type": "commit"}, {"oid": "9958fc7c7f1cefe3ce91b43f8705add9e38f459f", "url": "https://github.com/mulesoft/mule/commit/9958fc7c7f1cefe3ce91b43f8705add9e38f459f", "message": "MULE-18894: Review.", "committedDate": "2020-10-16T19:37:56Z", "type": "commit"}]}