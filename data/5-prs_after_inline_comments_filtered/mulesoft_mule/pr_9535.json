{"pr_number": 9535, "pr_title": "MULE-18883: PipelineMessageNotification PROCESS_COMPLETE lost when propagate errors", "pr_createdAt": "2020-10-13T10:25:21Z", "pr_url": "https://github.com/mulesoft/mule/pull/9535", "timeline": [{"oid": "407b1a10758586f75b3e7554665b12881b51eb35", "url": "https://github.com/mulesoft/mule/commit/407b1a10758586f75b3e7554665b12881b51eb35", "message": "MULE-18883: PipelineMessageNotification PROCESS_COMPLETE lost when propagate errors", "committedDate": "2020-10-13T10:23:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDIwOTQxOQ==", "url": "https://github.com/mulesoft/mule/pull/9535#discussion_r504209419", "bodyText": "use an ArrayDeque instead of Stack", "author": "elrodro83", "createdAt": "2020-10-13T19:39:32Z", "path": "core/src/main/java/org/mule/runtime/core/privileged/processor/MessageProcessors.java", "diffHunk": "@@ -529,7 +530,20 @@ private static void childContextResponseHandler(CoreEvent eventChildCtx,\n             if (currentStackEntry != null) {\n               // For flow-ref to flows, avoid creating a second MessagingException, an instead mutate the thrown on so it has the\n               // proper state when is bubbled.\n-              ((DefaultFlowCallStack) parentContextEvent.getFlowCallStack()).push(currentStackEntry);\n+              DefaultFlowCallStack parentCallStack = (DefaultFlowCallStack) parentContextEvent.getFlowCallStack();\n+              List<FlowStackElement> childFlowStacks = eventChildCtx.getFlowCallStack().getElements();\n+              Stack<FlowStackElement> remaining = new Stack();", "originalCommit": "407b1a10758586f75b3e7554665b12881b51eb35", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDIwOTU5Mg==", "url": "https://github.com/mulesoft/mule/pull/9535#discussion_r504209592", "bodyText": "Add comments explainig what this is doing and why it is doing it", "author": "elrodro83", "createdAt": "2020-10-13T19:39:51Z", "path": "core/src/main/java/org/mule/runtime/core/privileged/processor/MessageProcessors.java", "diffHunk": "@@ -529,7 +530,20 @@ private static void childContextResponseHandler(CoreEvent eventChildCtx,\n             if (currentStackEntry != null) {\n               // For flow-ref to flows, avoid creating a second MessagingException, an instead mutate the thrown on so it has the\n               // proper state when is bubbled.\n-              ((DefaultFlowCallStack) parentContextEvent.getFlowCallStack()).push(currentStackEntry);\n+              DefaultFlowCallStack parentCallStack = (DefaultFlowCallStack) parentContextEvent.getFlowCallStack();\n+              List<FlowStackElement> childFlowStacks = eventChildCtx.getFlowCallStack().getElements();\n+              Stack<FlowStackElement> remaining = new Stack();\n+\n+              for (FlowStackElement e : childFlowStacks) {\n+                if (parentCallStack.peek().equals(e)) {\n+                  break;\n+                }\n+                remaining.push(e);\n+              }\n+\n+              while (!remaining.isEmpty()) {\n+                parentCallStack.push(remaining.pop());\n+              }", "originalCommit": "407b1a10758586f75b3e7554665b12881b51eb35", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a91e78cdedd97c9693e88cf58e4a0691aa91ecd3", "url": "https://github.com/mulesoft/mule/commit/a91e78cdedd97c9693e88cf58e4a0691aa91ecd3", "message": "Changes after PR review", "committedDate": "2020-10-14T21:35:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk4Nzc0Mw==", "url": "https://github.com/mulesoft/mule/pull/9535#discussion_r504987743", "bodyText": "remove", "author": "elrodro83", "createdAt": "2020-10-14T21:39:50Z", "path": "core-tests/src/test/java/org/mule/runtime/core/privileged/processor/MessageProcessorsTestCase.java", "diffHunk": "@@ -321,6 +326,70 @@ public void processWithChildContextErrorInChainMantainsChildContext() throws Exc\n     assertThat(context.getParentContext().get(), is(input.getContext()));\n   }\n \n+  @Test\n+  @Issue(\"MULE-16892\")\n+  public void handleErrorWithChildAndParentStack() throws Exception {\n+\n+    List<FlowStackElement> parentStack = asList(new FlowStackElement(\"flow\", \"processor\"));\n+\n+    List<FlowStackElement> childStack = asList(\n+                                               new FlowStackElement(\"sub-flow-1\", \"processor-1\"),\n+                                               new FlowStackElement(\"sub-flow-2\", \"processor-2\"));\n+\n+    assertHandleErrorWithStack(parentStack, childStack);\n+  }\n+\n+  @Test\n+  @Issue(\"MULE-16892\")\n+  public void handleErrorWithEmptyParentStack() throws Exception {\n+\n+    List<FlowStackElement> childStack = asList(\n+                                               new FlowStackElement(\"sub-flow-1\", \"processor-1\"),\n+                                               new FlowStackElement(\"sub-flow-2\", \"processor-2\"));\n+\n+    assertHandleErrorWithStack(EMPTY_LIST, childStack);\n+  }\n+\n+  @Test\n+  @Issue(\"MULE-16892\")\n+  public void handleErrorWithEmptyStack() throws Exception {\n+    assertHandleErrorWithStack(EMPTY_LIST, EMPTY_LIST);\n+  }\n+\n+  private void assertHandleErrorWithStack(List<FlowStackElement> parentStack, List<FlowStackElement> childStack)\n+      throws InitialisationException {\n+\n+    thrown.expectCause(isA(MessagingException.class));\n+\n+    final DefaultFlowCallStack inputFlowCallStack = (DefaultFlowCallStack) input.getFlowCallStack();\n+    Reference<DefaultFlowCallStack> childFlowCallStack = new Reference<>();\n+\n+    try {\n+      parentStack.stream().forEachOrdered(inputFlowCallStack::push);\n+      // inputFlowCallStack.push(new FlowStackElement(\"flow\", \"processor\"));", "originalCommit": "a91e78cdedd97c9693e88cf58e4a0691aa91ecd3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk4Nzc4Ng==", "url": "https://github.com/mulesoft/mule/pull/9535#discussion_r504987786", "bodyText": "remove", "author": "elrodro83", "createdAt": "2020-10-14T21:39:55Z", "path": "core-tests/src/test/java/org/mule/runtime/core/privileged/processor/MessageProcessorsTestCase.java", "diffHunk": "@@ -321,6 +326,70 @@ public void processWithChildContextErrorInChainMantainsChildContext() throws Exc\n     assertThat(context.getParentContext().get(), is(input.getContext()));\n   }\n \n+  @Test\n+  @Issue(\"MULE-16892\")\n+  public void handleErrorWithChildAndParentStack() throws Exception {\n+\n+    List<FlowStackElement> parentStack = asList(new FlowStackElement(\"flow\", \"processor\"));\n+\n+    List<FlowStackElement> childStack = asList(\n+                                               new FlowStackElement(\"sub-flow-1\", \"processor-1\"),\n+                                               new FlowStackElement(\"sub-flow-2\", \"processor-2\"));\n+\n+    assertHandleErrorWithStack(parentStack, childStack);\n+  }\n+\n+  @Test\n+  @Issue(\"MULE-16892\")\n+  public void handleErrorWithEmptyParentStack() throws Exception {\n+\n+    List<FlowStackElement> childStack = asList(\n+                                               new FlowStackElement(\"sub-flow-1\", \"processor-1\"),\n+                                               new FlowStackElement(\"sub-flow-2\", \"processor-2\"));\n+\n+    assertHandleErrorWithStack(EMPTY_LIST, childStack);\n+  }\n+\n+  @Test\n+  @Issue(\"MULE-16892\")\n+  public void handleErrorWithEmptyStack() throws Exception {\n+    assertHandleErrorWithStack(EMPTY_LIST, EMPTY_LIST);\n+  }\n+\n+  private void assertHandleErrorWithStack(List<FlowStackElement> parentStack, List<FlowStackElement> childStack)\n+      throws InitialisationException {\n+\n+    thrown.expectCause(isA(MessagingException.class));\n+\n+    final DefaultFlowCallStack inputFlowCallStack = (DefaultFlowCallStack) input.getFlowCallStack();\n+    Reference<DefaultFlowCallStack> childFlowCallStack = new Reference<>();\n+\n+    try {\n+      parentStack.stream().forEachOrdered(inputFlowCallStack::push);\n+      // inputFlowCallStack.push(new FlowStackElement(\"flow\", \"processor\"));\n+\n+      ReactiveProcessor childWithStack = p -> from(p).flatMap(e -> {\n+        DefaultFlowCallStack stack = (DefaultFlowCallStack) e.getFlowCallStack();\n+\n+        childStack.stream().forEachOrdered(stack::push);\n+        // stack.push(new FlowStackElement(\"sub-flow-1\", \"processor-1\"));\n+        // stack.push(new FlowStackElement(\"sub-flow-2\", \"processor-2\"));", "originalCommit": "a91e78cdedd97c9693e88cf58e4a0691aa91ecd3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8d4ef5be46d63413cbac8af13ae38f8d68fc449e", "url": "https://github.com/mulesoft/mule/commit/8d4ef5be46d63413cbac8af13ae38f8d68fc449e", "message": "Remove unused code", "committedDate": "2020-10-14T21:41:51Z", "type": "commit"}]}