{"pr_number": 8886, "pr_title": "MULE-18041: Extension error handling improvements", "pr_createdAt": "2020-05-26T19:13:23Z", "pr_url": "https://github.com/mulesoft/mule/pull/8886", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4MDM4Ng==", "url": "https://github.com/mulesoft/mule/pull/8886#discussion_r431080386", "bodyText": "static import", "author": "elrodro83", "createdAt": "2020-05-27T12:32:14Z", "path": "core-tests/src/test/java/org/mule/runtime/core/api/util/MessagingExceptionResolverTestCase.java", "diffHunk": "@@ -53,8 +57,10 @@\n \n import org.junit.Before;\n import org.junit.Test;\n+import org.mule.test.allure.AllureConstants;\n \n @SmallTest\n+@Feature(AllureConstants.ErrorHandlingFeature.ERROR_HANDLING)", "originalCommit": "04acebcefd925e12cb77494c6d175577d24d423f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4NDQ0Mg==", "url": "https://github.com/mulesoft/mule/pull/8886#discussion_r431084442", "bodyText": "static import", "author": "elrodro83", "createdAt": "2020-05-27T12:38:43Z", "path": "core-tests/src/test/java/org/mule/runtime/core/api/util/MessagingExceptionResolverTestCase.java", "diffHunk": "@@ -197,15 +203,50 @@ public void resolveCorrectConnectionException() {\n   }\n \n   @Test\n+  @Issue(\"MULE-18041\")\n   public void resolveSuppressedMuleException() {\n     ErrorType expected = DISPATCH;\n     Throwable exception = new DispatchException(createStaticMessage(\"DISPATCH PROBLEM\"), new ValidateResponse(),\n-                                                new SuppressedMuleException(CONNECTION_EXCEPTION));\n+                                                suppressIfPresent(CONNECTION_EXCEPTION,\n+                                                                  CONNECTION_EXCEPTION.getClass(),\n+                                                                  false));\n     MessagingException me = newMessagingException(exception, event, processor);\n     MessagingExceptionResolver anotherResolver = new MessagingExceptionResolver(new TestProcessor());\n     MessagingException resolved = anotherResolver.resolve(me, locator, emptyList());\n     assertExceptionErrorType(resolved, expected);\n     assertExceptionMessage(resolved.getMessage(), \"DISPATCH PROBLEM\");\n+    assertThat(resolved.getInfo().get(MuleExceptionInfo.INFO_CAUSED_BY_KEY), is(nullValue()));", "originalCommit": "04acebcefd925e12cb77494c6d175577d24d423f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4NDQ5MQ==", "url": "https://github.com/mulesoft/mule/pull/8886#discussion_r431084491", "bodyText": "static import", "author": "elrodro83", "createdAt": "2020-05-27T12:38:49Z", "path": "core-tests/src/test/java/org/mule/runtime/core/api/util/MessagingExceptionResolverTestCase.java", "diffHunk": "@@ -197,15 +203,50 @@ public void resolveCorrectConnectionException() {\n   }\n \n   @Test\n+  @Issue(\"MULE-18041\")\n   public void resolveSuppressedMuleException() {\n     ErrorType expected = DISPATCH;\n     Throwable exception = new DispatchException(createStaticMessage(\"DISPATCH PROBLEM\"), new ValidateResponse(),\n-                                                new SuppressedMuleException(CONNECTION_EXCEPTION));\n+                                                suppressIfPresent(CONNECTION_EXCEPTION,\n+                                                                  CONNECTION_EXCEPTION.getClass(),\n+                                                                  false));\n     MessagingException me = newMessagingException(exception, event, processor);\n     MessagingExceptionResolver anotherResolver = new MessagingExceptionResolver(new TestProcessor());\n     MessagingException resolved = anotherResolver.resolve(me, locator, emptyList());\n     assertExceptionErrorType(resolved, expected);\n     assertExceptionMessage(resolved.getMessage(), \"DISPATCH PROBLEM\");\n+    assertThat(resolved.getInfo().get(MuleExceptionInfo.INFO_CAUSED_BY_KEY), is(nullValue()));\n+  }\n+\n+  @Test\n+  @Issue(\"MULE-18041\")\n+  public void resolveSuppressedMuleExceptionLoggingCause() {\n+    ErrorType expected = DISPATCH;\n+    Throwable exception = new DispatchException(createStaticMessage(\"DISPATCH PROBLEM\"), new ValidateResponse(),\n+                                                suppressIfPresent(CONNECTION_EXCEPTION,\n+                                                                  CONNECTION_EXCEPTION.getClass(), true));\n+    MessagingException me = newMessagingException(exception, event, processor);\n+    MessagingExceptionResolver anotherResolver = new MessagingExceptionResolver(new TestProcessor());\n+    MessagingException resolved = anotherResolver.resolve(me, locator, emptyList());\n+    assertExceptionErrorType(resolved, expected);\n+    assertExceptionMessage(resolved.getMessage(), \"DISPATCH PROBLEM\");\n+    assertExceptionMessage(resolved.getInfo().get(MuleExceptionInfo.INFO_CAUSED_BY_KEY).toString(), \"CONNECTION PROBLEM\");", "originalCommit": "04acebcefd925e12cb77494c6d175577d24d423f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4NDUyNw==", "url": "https://github.com/mulesoft/mule/pull/8886#discussion_r431084527", "bodyText": "static import", "author": "elrodro83", "createdAt": "2020-05-27T12:38:53Z", "path": "core-tests/src/test/java/org/mule/runtime/core/api/util/MessagingExceptionResolverTestCase.java", "diffHunk": "@@ -197,15 +203,50 @@ public void resolveCorrectConnectionException() {\n   }\n \n   @Test\n+  @Issue(\"MULE-18041\")\n   public void resolveSuppressedMuleException() {\n     ErrorType expected = DISPATCH;\n     Throwable exception = new DispatchException(createStaticMessage(\"DISPATCH PROBLEM\"), new ValidateResponse(),\n-                                                new SuppressedMuleException(CONNECTION_EXCEPTION));\n+                                                suppressIfPresent(CONNECTION_EXCEPTION,\n+                                                                  CONNECTION_EXCEPTION.getClass(),\n+                                                                  false));\n     MessagingException me = newMessagingException(exception, event, processor);\n     MessagingExceptionResolver anotherResolver = new MessagingExceptionResolver(new TestProcessor());\n     MessagingException resolved = anotherResolver.resolve(me, locator, emptyList());\n     assertExceptionErrorType(resolved, expected);\n     assertExceptionMessage(resolved.getMessage(), \"DISPATCH PROBLEM\");\n+    assertThat(resolved.getInfo().get(MuleExceptionInfo.INFO_CAUSED_BY_KEY), is(nullValue()));\n+  }\n+\n+  @Test\n+  @Issue(\"MULE-18041\")\n+  public void resolveSuppressedMuleExceptionLoggingCause() {\n+    ErrorType expected = DISPATCH;\n+    Throwable exception = new DispatchException(createStaticMessage(\"DISPATCH PROBLEM\"), new ValidateResponse(),\n+                                                suppressIfPresent(CONNECTION_EXCEPTION,\n+                                                                  CONNECTION_EXCEPTION.getClass(), true));\n+    MessagingException me = newMessagingException(exception, event, processor);\n+    MessagingExceptionResolver anotherResolver = new MessagingExceptionResolver(new TestProcessor());\n+    MessagingException resolved = anotherResolver.resolve(me, locator, emptyList());\n+    assertExceptionErrorType(resolved, expected);\n+    assertExceptionMessage(resolved.getMessage(), \"DISPATCH PROBLEM\");\n+    assertExceptionMessage(resolved.getInfo().get(MuleExceptionInfo.INFO_CAUSED_BY_KEY).toString(), \"CONNECTION PROBLEM\");\n+  }\n+\n+  @Test\n+  @Issue(\"MULE-18041\")\n+  public void resolveSuppressedMessagingExceptionLoggingCause() {\n+    ErrorType expected = DISPATCH;\n+    Throwable exception = new DispatchException(createStaticMessage(\"DISPATCH PROBLEM\"), new ValidateResponse(),\n+                                                suppressIfPresent(new MessagingException(createStaticMessage(\"CONNECTION PROBLEM\"),\n+                                                                                         event),\n+                                                                  MessagingException.class, true));\n+    MessagingException me = newMessagingException(exception, event, processor);\n+    MessagingExceptionResolver anotherResolver = new MessagingExceptionResolver(new TestProcessor());\n+    MessagingException resolved = anotherResolver.resolve(me, locator, emptyList());\n+    assertExceptionErrorType(resolved, expected);\n+    assertExceptionMessage(resolved.getMessage(), \"DISPATCH PROBLEM\");\n+    assertExceptionMessage(resolved.getInfo().get(MuleExceptionInfo.INFO_CAUSED_BY_KEY).toString(), \"CONNECTION PROBLEM\");", "originalCommit": "04acebcefd925e12cb77494c6d175577d24d423f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4NzkzNA==", "url": "https://github.com/mulesoft/mule/pull/8886#discussion_r431087934", "bodyText": "the cause should be logged in this case to help in troubleshooting.", "author": "elrodro83", "createdAt": "2020-05-27T12:44:37Z", "path": "core/src/main/java/org/mule/runtime/core/internal/routing/UntilSuccessfulRouter.java", "diffHunk": "@@ -273,15 +274,19 @@ private CoreEvent eventWithCurrentContextDeleted(CoreEvent event) {\n \n   private Function<Throwable, Throwable> getThrowableFunction(CoreEvent event) {\n     return throwable -> {\n-      Throwable cause = getMessagingExceptionCause(throwable);\n       CoreEvent exceptionEvent = event;\n+      Throwable retryPolicyExhaustionCause = getMessagingExceptionCause(throwable);\n+      // ConnectionException is treated in a way that prioritize it's error type over any other (see ErrorTypeLocator#getErrorTypeFromException)\n+      retryPolicyExhaustionCause =\n+          suppressIfPresent(retryPolicyExhaustionCause, ConnectionException.class, false);", "originalCommit": "04acebcefd925e12cb77494c6d175577d24d423f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg1MzY0NQ==", "url": "https://github.com/mulesoft/mule/pull/8886#discussion_r431853645", "bodyText": "I will refactor this section in order to use the same approach (SuppressedException + Caused By)", "author": "IvanAndresFritzler", "createdAt": "2020-05-28T13:55:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4NzkzNA=="}], "type": "inlineReview"}, {"oid": "88af7e5c4e88cad4890c874fec9432ca66e93e34", "url": "https://github.com/mulesoft/mule/commit/88af7e5c4e88cad4890c874fec9432ca66e93e34", "message": "MULE-18041: Code review improvements", "committedDate": "2020-06-09T12:16:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk1NjM0Ng==", "url": "https://github.com/mulesoft/mule/pull/8886#discussion_r440956346", "bodyText": "very unperformant. You should add an addAll() kind of method", "author": "marianogonzalez", "createdAt": "2020-06-16T15:47:25Z", "path": "core/src/main/java/org/mule/runtime/core/internal/exception/MessagingException.java", "diffHunk": "@@ -97,6 +97,9 @@ public MessagingException(CoreEvent event, Throwable cause, Component failingCom\n     extractMuleMessage(event);\n     this.failingComponent = failingComponent;\n     setMessage(generateMessage(getI18nMessage(), null));\n+    if (cause instanceof MuleException) {\n+      ((MuleException) cause).getInfo().forEach(this::addInfo);", "originalCommit": "88af7e5c4e88cad4890c874fec9432ca66e93e34", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk1NzA1Nw==", "url": "https://github.com/mulesoft/mule/pull/8886#discussion_r440957057", "bodyText": "this doesn't look correct. You're doing this ONLY when the exception is a ModuleException. You're ignoring all subclasses (which is what's more frequently used).", "author": "marianogonzalez", "createdAt": "2020-06-16T15:48:20Z", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/exception/ModuleExceptionHandler.java", "diffHunk": "@@ -117,10 +118,11 @@ private Throwable getExceptionCause(Throwable throwable) {\n     // For subclasses of ModuleException, we use it as it already contains additional information\n     if (throwable.getClass().equals(ModuleException.class)) {\n       return throwable.getCause() != null\n-          ? throwable.getCause()\n+          ? suppressIfPresent(throwable.getCause(), MessagingException.class)", "originalCommit": "88af7e5c4e88cad4890c874fec9432ca66e93e34", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY0MDAyNQ==", "url": "https://github.com/mulesoft/mule/pull/8886#discussion_r448640025", "bodyText": "Added an additional suppression to cover the rest of the cases", "author": "IvanAndresFritzler", "createdAt": "2020-07-01T22:04:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk1NzA1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk2MzQ4NA==", "url": "https://github.com/mulesoft/mule/pull/8886#discussion_r440963484", "bodyText": "remove", "author": "marianogonzalez", "createdAt": "2020-06-16T15:57:08Z", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/exception/ModuleExceptionHandler.java", "diffHunk": "@@ -117,10 +118,11 @@ private Throwable getExceptionCause(Throwable throwable) {\n     // For subclasses of ModuleException, we use it as it already contains additional information\n     if (throwable.getClass().equals(ModuleException.class)) {\n       return throwable.getCause() != null\n-          ? throwable.getCause()\n+          ? suppressIfPresent(throwable.getCause(), MessagingException.class)\n           : new MuleRuntimeException(createStaticMessage(throwable.getMessage()));\n     } else {\n       return throwable;\n     }\n   }\n+", "originalCommit": "88af7e5c4e88cad4890c874fec9432ca66e93e34", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f25cc9410dc86fe8f8ff0e8515c47080f575959e", "url": "https://github.com/mulesoft/mule/commit/f25cc9410dc86fe8f8ff0e8515c47080f575959e", "message": "MULE-18041: Extending SuppressedMuleException in order to suppress a deeper cause", "committedDate": "2020-06-30T03:11:34Z", "type": "commit"}, {"oid": "fa128d2b01f54a8b57cd430c9f7bea3018096b91", "url": "https://github.com/mulesoft/mule/commit/fa128d2b01f54a8b57cd430c9f7bea3018096b91", "message": "MULE-18041: Code format", "committedDate": "2020-06-30T03:11:34Z", "type": "commit"}, {"oid": "685bcc5eb531bc69c596645deb2305c97db11ff8", "url": "https://github.com/mulesoft/mule/commit/685bcc5eb531bc69c596645deb2305c97db11ff8", "message": "MULE-18041: UntilSuccessful changes", "committedDate": "2020-06-30T03:11:34Z", "type": "commit"}, {"oid": "514ef6e972f3f477ec0d37ce9aad8528b31a084f", "url": "https://github.com/mulesoft/mule/commit/514ef6e972f3f477ec0d37ce9aad8528b31a084f", "message": "MULE-18041: Adding Caused By to MuleExceptionInfo", "committedDate": "2020-06-30T03:11:34Z", "type": "commit"}, {"oid": "4d390883a5a9dcfba96502111d42127892c18a1c", "url": "https://github.com/mulesoft/mule/commit/4d390883a5a9dcfba96502111d42127892c18a1c", "message": "MULE-18041: Adding Caused By to MuleExceptionInfo", "committedDate": "2020-06-30T03:11:34Z", "type": "commit"}, {"oid": "2aeb752eecc75ac00cafc74ffb446e6c7eae0665", "url": "https://github.com/mulesoft/mule/commit/2aeb752eecc75ac00cafc74ffb446e6c7eae0665", "message": "MULE-18041: Code format", "committedDate": "2020-06-30T03:11:34Z", "type": "commit"}, {"oid": "4c7924328ee7d2d64d6dbc92989a1687d87554d6", "url": "https://github.com/mulesoft/mule/commit/4c7924328ee7d2d64d6dbc92989a1687d87554d6", "message": "MULE-18041: Static imports", "committedDate": "2020-06-30T03:11:34Z", "type": "commit"}, {"oid": "72997e1aa6d0ec3d5b50f25ac0f2ca0054cf5cbb", "url": "https://github.com/mulesoft/mule/commit/72997e1aa6d0ec3d5b50f25ac0f2ca0054cf5cbb", "message": "MULE-18041: Static imports", "committedDate": "2020-06-30T03:11:34Z", "type": "commit"}, {"oid": "e28a5e2168ba0f01547db4ebfcc9473f5ac1ad96", "url": "https://github.com/mulesoft/mule/commit/e28a5e2168ba0f01547db4ebfcc9473f5ac1ad96", "message": "MULE-18041: Code format", "committedDate": "2020-06-30T03:11:34Z", "type": "commit"}, {"oid": "52c73db81ad9c2ffdd8e7d81a86d6ff6b56e9f3f", "url": "https://github.com/mulesoft/mule/commit/52c73db81ad9c2ffdd8e7d81a86d6ff6b56e9f3f", "message": "MULE-18041 Code review improvements", "committedDate": "2020-06-30T03:11:34Z", "type": "commit"}, {"oid": "dda8abf8d6e69524faaabe576bcd58b2320d91cf", "url": "https://github.com/mulesoft/mule/commit/dda8abf8d6e69524faaabe576bcd58b2320d91cf", "message": "MULE-18041: Code review improvements", "committedDate": "2020-06-30T03:11:34Z", "type": "commit"}, {"oid": "810f6b1e95eba653430d13c029515968b72730d6", "url": "https://github.com/mulesoft/mule/commit/810f6b1e95eba653430d13c029515968b72730d6", "message": "MULE-18041: Code review improvements", "committedDate": "2020-06-30T03:11:34Z", "type": "commit"}, {"oid": "b097cc9af50be0ee1a956e190b30d1bb9c689f49", "url": "https://github.com/mulesoft/mule/commit/b097cc9af50be0ee1a956e190b30d1bb9c689f49", "message": "MULE-18041: Code review improvements", "committedDate": "2020-06-30T03:11:34Z", "type": "commit"}, {"oid": "9e4c3a8a00346efd2b7a322296d0b74cb17e7a45", "url": "https://github.com/mulesoft/mule/commit/9e4c3a8a00346efd2b7a322296d0b74cb17e7a45", "message": "MULE-18041: Code review improvements", "committedDate": "2020-06-30T03:11:34Z", "type": "commit"}, {"oid": "67ba48f37011bda9e0cb0b853b5e063e23d5bcd1", "url": "https://github.com/mulesoft/mule/commit/67ba48f37011bda9e0cb0b853b5e063e23d5bcd1", "message": "MULE-18041: Changes for multiple suppressions", "committedDate": "2020-06-30T03:11:34Z", "type": "commit"}, {"oid": "51b8b73b860da6795b7b18e46883fdda0e59371e", "url": "https://github.com/mulesoft/mule/commit/51b8b73b860da6795b7b18e46883fdda0e59371e", "message": "MULE-18041: Code review improvements", "committedDate": "2020-06-30T03:11:34Z", "type": "commit"}, {"oid": "7b611d777b134ca485800f3ff42c8654c38787fe", "url": "https://github.com/mulesoft/mule/commit/7b611d777b134ca485800f3ff42c8654c38787fe", "message": "MULE-18041: Code review changes", "committedDate": "2020-06-30T03:11:34Z", "type": "commit"}, {"oid": "7b611d777b134ca485800f3ff42c8654c38787fe", "url": "https://github.com/mulesoft/mule/commit/7b611d777b134ca485800f3ff42c8654c38787fe", "message": "MULE-18041: Code review changes", "committedDate": "2020-06-30T03:11:34Z", "type": "forcePushed"}, {"oid": "49869fb7439dc382b009e2974c5c30d0827a86b6", "url": "https://github.com/mulesoft/mule/commit/49869fb7439dc382b009e2974c5c30d0827a86b6", "message": "MULE-18041: Code review changes", "committedDate": "2020-07-03T15:41:27Z", "type": "commit"}]}