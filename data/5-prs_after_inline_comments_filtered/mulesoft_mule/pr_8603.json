{"pr_number": 8603, "pr_title": "MULE-17924: Optimize error handling performance", "pr_createdAt": "2020-01-24T18:52:32Z", "pr_url": "https://github.com/mulesoft/mule/pull/8603", "timeline": [{"oid": "7ff448e2da4d1b5deb5f33e78d96ff8ddf90b6da", "url": "https://github.com/mulesoft/mule/commit/7ff448e2da4d1b5deb5f33e78d96ff8ddf90b6da", "message": "MULE-17924: Optimize error handling performance\nMULE-XXXXX: Optimize service method calls when not augmented", "committedDate": "2020-01-24T10:54:28Z", "type": "commit"}, {"oid": "e33b58bbe1b5eab197387652eadde6e4f7545d19", "url": "https://github.com/mulesoft/mule/commit/e33b58bbe1b5eab197387652eadde6e4f7545d19", "message": "second pass", "committedDate": "2020-01-24T10:54:30Z", "type": "commit"}, {"oid": "c8132e39ddf97607810a8add70841e26d5402fdc", "url": "https://github.com/mulesoft/mule/commit/c8132e39ddf97607810a8add70841e26d5402fdc", "message": "third pass", "committedDate": "2020-01-24T10:54:32Z", "type": "commit"}, {"oid": "d7cab794a1b471f80cbaab627604b75ba2f4ea36", "url": "https://github.com/mulesoft/mule/commit/d7cab794a1b471f80cbaab627604b75ba2f4ea36", "message": "improve exeption info enrichment", "committedDate": "2020-01-24T10:54:34Z", "type": "commit"}, {"oid": "6665429f276a2c8e08650c1abf0c8ed49f966fe0", "url": "https://github.com/mulesoft/mule/commit/6665429f276a2c8e08650c1abf0c8ed49f966fe0", "message": "termination....", "committedDate": "2020-01-24T10:54:36Z", "type": "commit"}, {"oid": "8984cd87dc4b731a08e1912410d007fcf79e68dc", "url": "https://github.com/mulesoft/mule/commit/8984cd87dc4b731a08e1912410d007fcf79e68dc", "message": "termination addendum", "committedDate": "2020-01-24T10:54:38Z", "type": "commit"}, {"oid": "7e8ff963843ec1e85c81e0ba655c250a3e444fb5", "url": "https://github.com/mulesoft/mule/commit/7e8ff963843ec1e85c81e0ba655c250a3e444fb5", "message": "free 4 all", "committedDate": "2020-01-24T10:54:40Z", "type": "commit"}, {"oid": "fbf2c2b97c4c84fc7a84ea7ffea48a5cea957c3b", "url": "https://github.com/mulesoft/mule/commit/fbf2c2b97c4c84fc7a84ea7ffea48a5cea957c3b", "message": "fix tests", "committedDate": "2020-01-24T10:54:41Z", "type": "commit"}, {"oid": "09a7c0b5c98839a8d30be51ab21398df2b35ae5b", "url": "https://github.com/mulesoft/mule/commit/09a7c0b5c98839a8d30be51ab21398df2b35ae5b", "message": "info begin", "committedDate": "2020-01-24T10:54:43Z", "type": "commit"}, {"oid": "654e702b23c93a1d807100419d5dfef2b0126ff8", "url": "https://github.com/mulesoft/mule/commit/654e702b23c93a1d807100419d5dfef2b0126ff8", "message": "info, revapi stuff", "committedDate": "2020-01-24T10:54:44Z", "type": "commit"}, {"oid": "af1a4caec7d5d1b10c107aefe7448caf14e5658f", "url": "https://github.com/mulesoft/mule/commit/af1a4caec7d5d1b10c107aefe7448caf14e5658f", "message": "final info + avoid double error creation", "committedDate": "2020-01-24T13:53:32Z", "type": "commit"}, {"oid": "48d615c98c5ce48dd51311b148bec922c5186ee4", "url": "https://github.com/mulesoft/mule/commit/48d615c98c5ce48dd51311b148bec922c5186ee4", "message": "asdf", "committedDate": "2020-01-24T18:39:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTI0Mjg2Nw==", "url": "https://github.com/mulesoft/mule/pull/8603#discussion_r371242867", "bodyText": "comment", "author": "JuLuzzi", "createdAt": "2020-01-27T13:37:18Z", "path": "core/src/main/java/org/mule/runtime/core/internal/context/notification/DefaultFlowCallStack.java", "diffHunk": "@@ -41,9 +41,8 @@ public DefaultFlowCallStack() {\n   }\n \n   private DefaultFlowCallStack(final Deque<FlowStackElement> innerStack) {\n-    synchronized (innerStack) {\n-      this.innerStack = new ArrayDeque<>(innerStack);\n-    }\n+    // this.innerStack = new ArrayDeque<>(innerStack);", "originalCommit": "48d615c98c5ce48dd51311b148bec922c5186ee4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTI1NzE5Nw==", "url": "https://github.com/mulesoft/mule/pull/8603#discussion_r371257197", "bodyText": "comments", "author": "JuLuzzi", "createdAt": "2020-01-27T14:05:42Z", "path": "core/src/main/java/org/mule/runtime/core/internal/util/MessagingExceptionResolver.java", "diffHunk": "@@ -78,72 +80,104 @@ public MessagingException resolve(final MessagingException me, ErrorTypeLocator\n     }\n \n     Throwable root = rootCause.get().getFirst();\n-    ErrorType rootErrorType = rootCause.get().getSecond();\n     Component failingComponent = getFailingProcessor(me, root).orElse(component);\n \n-    ErrorType errorType = getErrorMappings(component)\n-        .stream()\n-        .filter(m -> m.match(rootErrorType))\n-        .findFirst()\n-        .map(ErrorMapping::getTarget)\n-        .orElse(rootErrorType);\n+    CoreEvent event = resolveEvent(me, root, resolveErrorType(rootCause.get().getSecond()));\n+    MessagingException result = resolveResultException(me, root, failingComponent, event);\n \n-    Error error = ErrorBuilder.builder(getMessagingExceptionCause(root)).errorType(errorType).build();\n-    CoreEvent event = CoreEvent.builder(me.getEvent()).error(error).build();\n+    propagateAlreadyLogged(me, result);\n+    return enrich(result, failingComponent, component, event, exceptionContextProviders);\n+  }\n \n+  private MessagingException resolveResultException(final MessagingException me, Throwable root, Component failingComponent,\n+                                                    CoreEvent event) {\n     MessagingException result;\n     if (root instanceof MessagingException) {\n       ((MessagingException) root).setProcessedEvent(event);\n       result = ((MessagingException) root);\n     } else {\n-      result = me instanceof FlowExecutionException ? new FlowExecutionException(event, root, failingComponent)\n+      result = me instanceof FlowExecutionException\n+          ? new FlowExecutionException(event, root, failingComponent)\n           : new MessagingException(event, root, failingComponent);\n     }\n-    propagateAlreadyLogged(me, result);\n-    return enrich(result, failingComponent, component, event, exceptionContextProviders);\n+    return result;\n   }\n \n-  private void propagateAlreadyLogged(MessagingException origin, MuleException result) {\n-    if (origin.getInfo().containsKey(INFO_ALREADY_LOGGED_KEY)) {\n-      result.addInfo(INFO_ALREADY_LOGGED_KEY, origin.getInfo().get(INFO_ALREADY_LOGGED_KEY));\n+  private CoreEvent resolveEvent(final MessagingException me, Throwable root, ErrorType errorType) {\n+    final Throwable messagingExceptionCause = getMessagingExceptionCause(root);\n+    // if (!me.getEvent()\n+    // .getError()", "originalCommit": "48d615c98c5ce48dd51311b148bec922c5186ee4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTI4MTM0MA==", "url": "https://github.com/mulesoft/mule/pull/8603#discussion_r371281340", "bodyText": "comment", "author": "JuLuzzi", "createdAt": "2020-01-27T14:46:45Z", "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/model/ApplicationModel.java", "diffHunk": "@@ -529,9 +529,11 @@ public String getDescription() {\n                                                                        OptionalInt.of(configLine.getLineNumber()),\n                                                                        OptionalInt.of(configLine.getStartColumn()));\n                   providerComponent.setAnnotations(ImmutableMap.<QName, Object>builder()\n-                      .put(AbstractComponent.LOCATION_KEY,\n+                      .put(LOCATION_KEY,\n                            new DefaultComponentLocation(of(componentIdentifier.getName()),\n                                                         singletonList(locationPart)))\n+\n+                      // beanAnnotations.put(REPRESENTATION_ANNOTATION_KEY, resolveProcessorRepresentation(artifactId, \"\", null));", "originalCommit": "48d615c98c5ce48dd51311b148bec922c5186ee4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2a797558cd7be7a129a27399bf8f22b291f68231", "url": "https://github.com/mulesoft/mule/commit/2a797558cd7be7a129a27399bf8f22b291f68231", "message": "review", "committedDate": "2020-01-27T14:49:42Z", "type": "commit"}]}