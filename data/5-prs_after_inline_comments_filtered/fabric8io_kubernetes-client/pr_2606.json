{"pr_number": 2606, "pr_title": "Provide a customResources alternative that only accepts resourceType as an argument", "pr_createdAt": "2020-11-16T11:20:25Z", "pr_url": "https://github.com/fabric8io/kubernetes-client/pull/2606", "timeline": [{"oid": "a458ec09e90cb7f2da832940a2b2417055d35148", "url": "https://github.com/fabric8io/kubernetes-client/commit/a458ec09e90cb7f2da832940a2b2417055d35148", "message": "feat: Make custom resource list types optional/inferred", "committedDate": "2020-11-16T11:23:04Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDE5NDYyMQ==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2606#discussion_r524194621", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               *   <a href=\"https://github.com/fabric8io/kubernetes-client/blob/master/kubernetes-model-generator/kubernetes-model-core/src/main/java/io/fabric8/kubernetes/api/model/Namespaced.java\">\n          \n          \n            \n               *     io.fabric8.kubernetes.api.model.Namespaced\n          \n          \n            \n               *   </a> if it is a Namespaced scoped resource.\n          \n          \n            \n               *   {@link io.fabric8.kubernetes.api.model.Namespaced} if it is a namespace-scoped resource.", "author": "metacosm", "createdAt": "2020-11-16T12:05:43Z", "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/KubernetesClient.java", "diffHunk": "@@ -99,6 +99,49 @@\n    */\n   NonNamespaceOperation<CertificateSigningRequest, CertificateSigningRequestList, Resource<CertificateSigningRequest>> certificateSigningRequests();\n \n+  /**\n+   * Typed API for managing CustomResources. You would need to provide POJOs for\n+   * CustomResource into this and with it you would be able to instantiate a client\n+   * specific to CustomResource.\n+   *\n+   * <p>\n+   *   Note: your CustomResource POJO (T in this context) must implement\n+   *   <a href=\"https://github.com/fabric8io/kubernetes-client/blob/master/kubernetes-model-generator/kubernetes-model-core/src/main/java/io/fabric8/kubernetes/api/model/Namespaced.java\">\n+   *     io.fabric8.kubernetes.api.model.Namespaced\n+   *   </a> if it is a Namespaced scoped resource.", "originalCommit": "a458ec09e90cb7f2da832940a2b2417055d35148", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDE5NTEwOQ==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2606#discussion_r524195109", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               *           io.fabric8.kubernetes.api.model.Namespaced\n          \n          \n            \n               *           {@link io.fabric8.kubernetes.api.model.Namespaced}", "author": "metacosm", "createdAt": "2020-11-16T12:06:10Z", "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/KubernetesClient.java", "diffHunk": "@@ -99,6 +99,49 @@\n    */\n   NonNamespaceOperation<CertificateSigningRequest, CertificateSigningRequestList, Resource<CertificateSigningRequest>> certificateSigningRequests();\n \n+  /**\n+   * Typed API for managing CustomResources. You would need to provide POJOs for\n+   * CustomResource into this and with it you would be able to instantiate a client\n+   * specific to CustomResource.\n+   *\n+   * <p>\n+   *   Note: your CustomResource POJO (T in this context) must implement\n+   *   <a href=\"https://github.com/fabric8io/kubernetes-client/blob/master/kubernetes-model-generator/kubernetes-model-core/src/main/java/io/fabric8/kubernetes/api/model/Namespaced.java\">\n+   *     io.fabric8.kubernetes.api.model.Namespaced\n+   *   </a> if it is a Namespaced scoped resource.\n+   * </p>\n+   *\n+   * @param resourceType Class for CustomResource\n+   * @param listClass Class for list object for CustomResource\n+   * @param <T> T type represents CustomResource type. If it's Namespaced resource, it must implement\n+   *           io.fabric8.kubernetes.api.model.Namespaced", "originalCommit": "a458ec09e90cb7f2da832940a2b2417055d35148", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDE5NTUyNQ==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2606#discussion_r524195525", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * @param <T> T type represents CustomResource type. If it's Namespaced resource, it must implement\n          \n          \n            \n               * @param <T> T type represents CustomResource type. If it's a namespaced resource, it must implement", "author": "metacosm", "createdAt": "2020-11-16T12:06:35Z", "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/KubernetesClient.java", "diffHunk": "@@ -99,6 +99,49 @@\n    */\n   NonNamespaceOperation<CertificateSigningRequest, CertificateSigningRequestList, Resource<CertificateSigningRequest>> certificateSigningRequests();\n \n+  /**\n+   * Typed API for managing CustomResources. You would need to provide POJOs for\n+   * CustomResource into this and with it you would be able to instantiate a client\n+   * specific to CustomResource.\n+   *\n+   * <p>\n+   *   Note: your CustomResource POJO (T in this context) must implement\n+   *   <a href=\"https://github.com/fabric8io/kubernetes-client/blob/master/kubernetes-model-generator/kubernetes-model-core/src/main/java/io/fabric8/kubernetes/api/model/Namespaced.java\">\n+   *     io.fabric8.kubernetes.api.model.Namespaced\n+   *   </a> if it is a Namespaced scoped resource.\n+   * </p>\n+   *\n+   * @param resourceType Class for CustomResource\n+   * @param listClass Class for list object for CustomResource\n+   * @param <T> T type represents CustomResource type. If it's Namespaced resource, it must implement", "originalCommit": "a458ec09e90cb7f2da832940a2b2417055d35148", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDE5NjM3MQ==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2606#discussion_r524196371", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               *   <a href=\"https://github.com/fabric8io/kubernetes-client/blob/master/kubernetes-model-generator/kubernetes-model-core/src/main/java/io/fabric8/kubernetes/api/model/Namespaced.java\">\n          \n          \n            \n               *     io.fabric8.kubernetes.api.model.Namespaced\n          \n          \n            \n               *   </a> if it is a Namespaced scoped resource.\n          \n          \n            \n               *   {@link io.fabric8.kubernetes.api.model.Namespaced} if it is a namespace-scoped resource.", "author": "metacosm", "createdAt": "2020-11-16T12:07:28Z", "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/KubernetesClient.java", "diffHunk": "@@ -99,6 +99,49 @@\n    */\n   NonNamespaceOperation<CertificateSigningRequest, CertificateSigningRequestList, Resource<CertificateSigningRequest>> certificateSigningRequests();\n \n+  /**\n+   * Typed API for managing CustomResources. You would need to provide POJOs for\n+   * CustomResource into this and with it you would be able to instantiate a client\n+   * specific to CustomResource.\n+   *\n+   * <p>\n+   *   Note: your CustomResource POJO (T in this context) must implement\n+   *   <a href=\"https://github.com/fabric8io/kubernetes-client/blob/master/kubernetes-model-generator/kubernetes-model-core/src/main/java/io/fabric8/kubernetes/api/model/Namespaced.java\">\n+   *     io.fabric8.kubernetes.api.model.Namespaced\n+   *   </a> if it is a Namespaced scoped resource.\n+   * </p>\n+   *\n+   * @param resourceType Class for CustomResource\n+   * @param listClass Class for list object for CustomResource\n+   * @param <T> T type represents CustomResource type. If it's Namespaced resource, it must implement\n+   *           io.fabric8.kubernetes.api.model.Namespaced\n+   * @return returns a MixedOperation object with which you can do basic CustomResource operations\n+   */\n+  <T extends HasMetadata> MixedOperation<T, KubernetesResourceList<T>, Resource<T>> customResources(Class<T> resourceType);\n+\n+\n+  /**\n+   * Typed API for managing CustomResources. You would need to provide POJOs for\n+   * CustomResource into this and with it you would be able to instantiate a client\n+   * specific to CustomResource.\n+   *\n+   * <p>\n+   *   Note: your CustomResource POJO (T in this context) must implement\n+   *   <a href=\"https://github.com/fabric8io/kubernetes-client/blob/master/kubernetes-model-generator/kubernetes-model-core/src/main/java/io/fabric8/kubernetes/api/model/Namespaced.java\">\n+   *     io.fabric8.kubernetes.api.model.Namespaced\n+   *   </a> if it is a Namespaced scoped resource.", "originalCommit": "a458ec09e90cb7f2da832940a2b2417055d35148", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDE5NzYzMw==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2606#discussion_r524197633", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * @param <T> T type represents CustomResource type. If it's Namespaced resource, it must implement\n          \n          \n            \n               * @param <T> T type represents CustomResource type. If it's a namespace-scoped resource, it must implement", "author": "metacosm", "createdAt": "2020-11-16T12:08:43Z", "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/KubernetesClient.java", "diffHunk": "@@ -99,6 +99,49 @@\n    */\n   NonNamespaceOperation<CertificateSigningRequest, CertificateSigningRequestList, Resource<CertificateSigningRequest>> certificateSigningRequests();\n \n+  /**\n+   * Typed API for managing CustomResources. You would need to provide POJOs for\n+   * CustomResource into this and with it you would be able to instantiate a client\n+   * specific to CustomResource.\n+   *\n+   * <p>\n+   *   Note: your CustomResource POJO (T in this context) must implement\n+   *   <a href=\"https://github.com/fabric8io/kubernetes-client/blob/master/kubernetes-model-generator/kubernetes-model-core/src/main/java/io/fabric8/kubernetes/api/model/Namespaced.java\">\n+   *     io.fabric8.kubernetes.api.model.Namespaced\n+   *   </a> if it is a Namespaced scoped resource.\n+   * </p>\n+   *\n+   * @param resourceType Class for CustomResource\n+   * @param listClass Class for list object for CustomResource\n+   * @param <T> T type represents CustomResource type. If it's Namespaced resource, it must implement\n+   *           io.fabric8.kubernetes.api.model.Namespaced\n+   * @return returns a MixedOperation object with which you can do basic CustomResource operations\n+   */\n+  <T extends HasMetadata> MixedOperation<T, KubernetesResourceList<T>, Resource<T>> customResources(Class<T> resourceType);\n+\n+\n+  /**\n+   * Typed API for managing CustomResources. You would need to provide POJOs for\n+   * CustomResource into this and with it you would be able to instantiate a client\n+   * specific to CustomResource.\n+   *\n+   * <p>\n+   *   Note: your CustomResource POJO (T in this context) must implement\n+   *   <a href=\"https://github.com/fabric8io/kubernetes-client/blob/master/kubernetes-model-generator/kubernetes-model-core/src/main/java/io/fabric8/kubernetes/api/model/Namespaced.java\">\n+   *     io.fabric8.kubernetes.api.model.Namespaced\n+   *   </a> if it is a Namespaced scoped resource.\n+   * </p>\n+   *\n+   * @param resourceType Class for CustomResource\n+   * @param listClass Class for list object for CustomResource\n+   * @param <T> T type represents CustomResource type. If it's Namespaced resource, it must implement", "originalCommit": "a458ec09e90cb7f2da832940a2b2417055d35148", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDE5Nzg1OQ==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2606#discussion_r524197859", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               *           io.fabric8.kubernetes.api.model.Namespaced\n          \n          \n            \n               *           {@link io.fabric8.kubernetes.api.model.Namespaced}", "author": "metacosm", "createdAt": "2020-11-16T12:08:56Z", "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/KubernetesClient.java", "diffHunk": "@@ -99,6 +99,49 @@\n    */\n   NonNamespaceOperation<CertificateSigningRequest, CertificateSigningRequestList, Resource<CertificateSigningRequest>> certificateSigningRequests();\n \n+  /**\n+   * Typed API for managing CustomResources. You would need to provide POJOs for\n+   * CustomResource into this and with it you would be able to instantiate a client\n+   * specific to CustomResource.\n+   *\n+   * <p>\n+   *   Note: your CustomResource POJO (T in this context) must implement\n+   *   <a href=\"https://github.com/fabric8io/kubernetes-client/blob/master/kubernetes-model-generator/kubernetes-model-core/src/main/java/io/fabric8/kubernetes/api/model/Namespaced.java\">\n+   *     io.fabric8.kubernetes.api.model.Namespaced\n+   *   </a> if it is a Namespaced scoped resource.\n+   * </p>\n+   *\n+   * @param resourceType Class for CustomResource\n+   * @param listClass Class for list object for CustomResource\n+   * @param <T> T type represents CustomResource type. If it's Namespaced resource, it must implement\n+   *           io.fabric8.kubernetes.api.model.Namespaced\n+   * @return returns a MixedOperation object with which you can do basic CustomResource operations\n+   */\n+  <T extends HasMetadata> MixedOperation<T, KubernetesResourceList<T>, Resource<T>> customResources(Class<T> resourceType);\n+\n+\n+  /**\n+   * Typed API for managing CustomResources. You would need to provide POJOs for\n+   * CustomResource into this and with it you would be able to instantiate a client\n+   * specific to CustomResource.\n+   *\n+   * <p>\n+   *   Note: your CustomResource POJO (T in this context) must implement\n+   *   <a href=\"https://github.com/fabric8io/kubernetes-client/blob/master/kubernetes-model-generator/kubernetes-model-core/src/main/java/io/fabric8/kubernetes/api/model/Namespaced.java\">\n+   *     io.fabric8.kubernetes.api.model.Namespaced\n+   *   </a> if it is a Namespaced scoped resource.\n+   * </p>\n+   *\n+   * @param resourceType Class for CustomResource\n+   * @param listClass Class for list object for CustomResource\n+   * @param <T> T type represents CustomResource type. If it's Namespaced resource, it must implement\n+   *           io.fabric8.kubernetes.api.model.Namespaced", "originalCommit": "a458ec09e90cb7f2da832940a2b2417055d35148", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDE5OTIxNQ==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2606#discussion_r524199215", "bodyText": "Is that a good idea to import this class? I've thought about using it as well but it looks really weird\u2026\u00a0\ud83d\ude04", "author": "metacosm", "createdAt": "2020-11-16T12:10:12Z", "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/base/CustomResourceDefinitionContext.java", "diffHunk": "@@ -15,7 +15,15 @@\n  */\n package io.fabric8.kubernetes.client.dsl.base;\n \n+import io.fabric8.kubernetes.api.model.HasMetadata;\n+import io.fabric8.kubernetes.api.model.KubernetesResource;\n+import io.fabric8.kubernetes.api.model.KubernetesResourceList;\n+import io.fabric8.kubernetes.api.model.Namespaced;\n import io.fabric8.kubernetes.api.model.apiextensions.v1beta1.CustomResourceDefinition;\n+import io.fabric8.kubernetes.client.KubernetesClientException;\n+import io.fabric8.kubernetes.client.utils.ApiVersionUtil;\n+import io.fabric8.kubernetes.client.utils.Pluralize;\n+import io.fabric8.zjsonpatch.internal.guava.Strings;", "originalCommit": "a458ec09e90cb7f2da832940a2b2417055d35148", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI1OTQ4Mw==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2606#discussion_r524259483", "bodyText": "Noi, its not and in fact it was causing issues, with the OSGi tests.", "author": "iocanel", "createdAt": "2020-11-16T13:16:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDE5OTIxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDIwMTA4Mg==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2606#discussion_r524201082", "bodyText": "\ud83d\ude04", "author": "metacosm", "createdAt": "2020-11-16T12:11:55Z", "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/utils/Pluralize.java", "diffHunk": "@@ -0,0 +1,138 @@\n+/**\n+ * Copyright (C) ${project.inceptionYear} ${owner}", "originalCommit": "a458ec09e90cb7f2da832940a2b2417055d35148", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f9187f8daff6df1bb6d1fcc2dd2a0c1c8fac447d", "url": "https://github.com/fabric8io/kubernetes-client/commit/f9187f8daff6df1bb6d1fcc2dd2a0c1c8fac447d", "message": "Update CHANGELOG.md\n\nCo-authored-by: Chris Laprun <metacosm@users.noreply.github.com>", "committedDate": "2020-11-16T13:21:08Z", "type": "forcePushed"}, {"oid": "21d0f2ca956391f6bae5e5cd3c864fed5d90e54b", "url": "https://github.com/fabric8io/kubernetes-client/commit/21d0f2ca956391f6bae5e5cd3c864fed5d90e54b", "message": "Update CHANGELOG.md\n\nCo-authored-by: Chris Laprun <metacosm@users.noreply.github.com>", "committedDate": "2020-11-16T17:05:52Z", "type": "forcePushed"}, {"oid": "258ffb81f1413cdbb3aedcb81f003d09c6453675", "url": "https://github.com/fabric8io/kubernetes-client/commit/258ffb81f1413cdbb3aedcb81f003d09c6453675", "message": "feat: Provide customResources without the CRD context agument", "committedDate": "2020-11-16T17:05:52Z", "type": "commit"}, {"oid": "23c38724ef0688cbcc1d514146da963979d7e91b", "url": "https://github.com/fabric8io/kubernetes-client/commit/23c38724ef0688cbcc1d514146da963979d7e91b", "message": "Update CHANGELOG.md\n\nCo-authored-by: Chris Laprun <metacosm@users.noreply.github.com>", "committedDate": "2020-11-17T15:20:24Z", "type": "forcePushed"}, {"oid": "c7acc9feebe97f46831ed4c7153e479ead0a28ce", "url": "https://github.com/fabric8io/kubernetes-client/commit/c7acc9feebe97f46831ed4c7153e479ead0a28ce", "message": "feat: Make custom resource list types optional/inferred", "committedDate": "2020-11-17T15:20:24Z", "type": "commit"}, {"oid": "c0af8606d0543301f862c78db1ff7b4cb93fa4ae", "url": "https://github.com/fabric8io/kubernetes-client/commit/c0af8606d0543301f862c78db1ff7b4cb93fa4ae", "message": "Update kubernetes-client/src/main/java/io/fabric8/kubernetes/client/KubernetesClient.java\n\nCo-authored-by: Chris Laprun <metacosm@users.noreply.github.com>", "committedDate": "2020-11-17T15:20:24Z", "type": "commit"}, {"oid": "23c38724ef0688cbcc1d514146da963979d7e91b", "url": "https://github.com/fabric8io/kubernetes-client/commit/23c38724ef0688cbcc1d514146da963979d7e91b", "message": "Update CHANGELOG.md\n\nCo-authored-by: Chris Laprun <metacosm@users.noreply.github.com>", "committedDate": "2020-11-17T15:20:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTMxOTkyNw==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2606#discussion_r525319927", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * @param listClass Class for list object for CustomResource", "author": "metacosm", "createdAt": "2020-11-17T16:52:32Z", "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/KubernetesClient.java", "diffHunk": "@@ -99,6 +99,45 @@\n    */\n   NonNamespaceOperation<CertificateSigningRequest, CertificateSigningRequestList, Resource<CertificateSigningRequest>> certificateSigningRequests();\n \n+  /**\n+   * Typed API for managing CustomResources. You would need to provide POJOs for\n+   * CustomResource into this and with it you would be able to instantiate a client\n+   * specific to CustomResource.\n+   *\n+   * <p>\n+   *   Note: your CustomResource POJO (T in this context) must implement\n+   *   {@link io.fabric8.kubernetes.api.model.Namespaced} if it is a namespace-scoped resource.\n+   * </p>\n+   *\n+   * @param resourceType Class for CustomResource\n+   * @param listClass Class for list object for CustomResource", "originalCommit": "23c38724ef0688cbcc1d514146da963979d7e91b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "bc9c7b825044f273be60535e5d0d5437a4c0f0e1", "url": "https://github.com/fabric8io/kubernetes-client/commit/bc9c7b825044f273be60535e5d0d5437a4c0f0e1", "message": "Update kubernetes-client/src/main/java/io/fabric8/kubernetes/client/KubernetesClient.java\n\nCo-authored-by: Chris Laprun <metacosm@users.noreply.github.com>", "committedDate": "2020-11-17T16:53:37Z", "type": "commit"}]}