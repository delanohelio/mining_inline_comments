{"pr_number": 2482, "pr_title": "[Enhancement] Handle manual results on trigger-all", "pr_createdAt": "2020-11-30T17:30:50Z", "pr_url": "https://github.com/ls1intum/Artemis/pull/2482", "timeline": [{"oid": "a3f081f0365d1a7178a9bd8192bb61145dd0452b", "url": "https://github.com/ls1intum/Artemis/commit/a3f081f0365d1a7178a9bd8192bb61145dd0452b", "message": "create new manual result after re-trigger", "committedDate": "2020-11-30T17:28:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA1NjM0NQ==", "url": "https://github.com/ls1intum/Artemis/pull/2482#discussion_r533056345", "bodyText": "There is only one manual result for programming exercises. therefore a sorting for id is not needed.", "author": "fde312", "createdAt": "2020-12-01T03:53:16Z", "path": "src/main/java/de/tum/in/www1/artemis/repository/ProgrammingExerciseStudentParticipationRepository.java", "diffHunk": "@@ -27,7 +27,8 @@\n     Optional<ProgrammingExerciseStudentParticipation> findByIdWithLatestResultAndFeedbacksAndRelatedSubmissions(@Param(\"participationId\") Long participationId,\n             @Param(\"dateTime\") ZonedDateTime dateTime);\n \n-    @Query(\"select p from ProgrammingExerciseStudentParticipation p left join fetch p.results pr left join fetch pr.feedbacks left join fetch pr.submission left join fetch pr.assessor where p.id = :participationId and (pr.assessmentType = 'MANUAL' or pr.assessmentType = 'SEMI_AUTOMATIC')\")\n+    @Query(\"select p from ProgrammingExerciseStudentParticipation p left join fetch p.results pr left join fetch pr.feedbacks left join fetch pr.submission left join fetch pr.assessor\"\n+            + \" where p.id = :participationId and pr.id = (select max(prr.id) from p.results prr where prr.assessmentType = 'MANUAL' or prr.assessmentType = 'SEMI_AUTOMATIC')\")", "originalCommit": "a3f081f0365d1a7178a9bd8192bb61145dd0452b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTA5MDY3OA==", "url": "https://github.com/ls1intum/Artemis/pull/2482#discussion_r535090678", "bodyText": "Well with this PR there can be multiple :)", "author": "schultek", "createdAt": "2020-12-03T10:48:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA1NjM0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA1NjUxMA==", "url": "https://github.com/ls1intum/Artemis/pull/2482#discussion_r533056510", "bodyText": "we should not set the completionDate if the result should still be in draft mode", "author": "fde312", "createdAt": "2020-12-01T03:53:53Z", "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java", "diffHunk": "@@ -106,6 +110,60 @@ public ProgrammingExerciseGradingService(ProgrammingExerciseTestCaseService test\n                 // This method will return without triggering the build if the submission is not of type TEST.\n                 triggerTemplateBuildIfTestCasesChanged(programmingExercise.getId(), result.getId());\n             }\n+\n+            if (!isSolutionParticipation && !isTemplateParticipation) {\n+\n+                Optional<ProgrammingExerciseStudentParticipation> studentParticipation = programmingExerciseParticipationService\n+                        .findStudentParticipationWithLatestManualResultsAndFeedbacksAndRelatedSubmissionsAndAssessor(participation.getId());\n+                if (studentParticipation.isPresent() && studentParticipation.get().getResults().stream().findFirst().isPresent()) {\n+\n+                    Result manualResult = studentParticipation.get().getResults().stream().findFirst().get();\n+\n+                    ProgrammingSubmission newSubmission = programmingSubmissionService.createSubmissionWithLastCommitHashForParticipation(participation, SubmissionType.MANUAL);\n+                    Result newResult = programmingSubmissionService.setNewResult(newSubmission);\n+                    newResult.setAssessor(manualResult.getAssessor());\n+                    newResult.setAssessmentType(AssessmentType.SEMI_AUTOMATIC);\n+                    newResult.setCompletionDate(manualResult.getCompletionDate());", "originalCommit": "a3f081f0365d1a7178a9bd8192bb61145dd0452b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU4NDA4Ng==", "url": "https://github.com/ls1intum/Artemis/pull/2482#discussion_r541584086", "bodyText": "We decided to keep the completion state as is, so that tutors does not need to go through all submissions again.", "author": "schultek", "createdAt": "2020-12-12T14:16:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA1NjUxMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA1ODY2OQ==", "url": "https://github.com/ls1intum/Artemis/pull/2482#discussion_r533058669", "bodyText": "Maybe we can do it like we did it on ProgrammingExerciseGradingService:462", "author": "fde312", "createdAt": "2020-12-01T04:01:50Z", "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java", "diffHunk": "@@ -106,6 +110,60 @@ public ProgrammingExerciseGradingService(ProgrammingExerciseTestCaseService test\n                 // This method will return without triggering the build if the submission is not of type TEST.\n                 triggerTemplateBuildIfTestCasesChanged(programmingExercise.getId(), result.getId());\n             }\n+\n+            if (!isSolutionParticipation && !isTemplateParticipation) {\n+\n+                Optional<ProgrammingExerciseStudentParticipation> studentParticipation = programmingExerciseParticipationService\n+                        .findStudentParticipationWithLatestManualResultsAndFeedbacksAndRelatedSubmissionsAndAssessor(participation.getId());\n+                if (studentParticipation.isPresent() && studentParticipation.get().getResults().stream().findFirst().isPresent()) {\n+\n+                    Result manualResult = studentParticipation.get().getResults().stream().findFirst().get();\n+\n+                    ProgrammingSubmission newSubmission = programmingSubmissionService.createSubmissionWithLastCommitHashForParticipation(participation, SubmissionType.MANUAL);\n+                    Result newResult = programmingSubmissionService.setNewResult(newSubmission);\n+                    newResult.setAssessor(manualResult.getAssessor());\n+                    newResult.setAssessmentType(AssessmentType.SEMI_AUTOMATIC);\n+                    newResult.setCompletionDate(manualResult.getCompletionDate());\n+                    newResult.setHasFeedback(manualResult.getHasFeedback());\n+                    newResult.setRated(manualResult.isRated());\n+\n+                    for (Feedback feedback : result.getFeedbacks()) {", "originalCommit": "a3f081f0365d1a7178a9bd8192bb61145dd0452b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTA5NjMzOA==", "url": "https://github.com/ls1intum/Artemis/pull/2482#discussion_r535096338", "bodyText": "Yes. \ud83d\udc4d", "author": "schultek", "createdAt": "2020-12-03T10:53:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA1ODY2OQ=="}], "type": "inlineReview"}, {"oid": "6859e3c811cfbd736ad3494e9580d65b635b0986", "url": "https://github.com/ls1intum/Artemis/commit/6859e3c811cfbd736ad3494e9580d65b635b0986", "message": "reuse code", "committedDate": "2020-12-03T10:53:42Z", "type": "commit"}, {"oid": "67784d45bac07ca8e2dd3a9003256f6299a60fc1", "url": "https://github.com/ls1intum/Artemis/commit/67784d45bac07ca8e2dd3a9003256f6299a60fc1", "message": "Merge branch 'develop' into enhancement/programming-exercise/trigger-all-manual-assessment", "committedDate": "2020-12-03T10:58:21Z", "type": "commit"}, {"oid": "651c65f27f9f42585b2f34127571bad27bf23842", "url": "https://github.com/ls1intum/Artemis/commit/651c65f27f9f42585b2f34127571bad27bf23842", "message": "Merge branch 'develop' into enhancement/programming-exercise/trigger-all-manual-assessment", "committedDate": "2020-12-03T21:18:03Z", "type": "commit"}, {"oid": "fae4746e6c0bd3b70b1bf6bba135d4047f5ae3dd", "url": "https://github.com/ls1intum/Artemis/commit/fae4746e6c0bd3b70b1bf6bba135d4047f5ae3dd", "message": "Merge branch 'develop' into enhancement/programming-exercise/trigger-all-manual-assessment", "committedDate": "2020-12-10T12:15:15Z", "type": "commit"}, {"oid": "b99955f4c687e8249e1f8abf93debc5e34673e0a", "url": "https://github.com/ls1intum/Artemis/commit/b99955f4c687e8249e1f8abf93debc5e34673e0a", "message": "Merge branch 'develop' into enhancement/programming-exercise/trigger-all-manual-assessment", "committedDate": "2020-12-11T17:55:48Z", "type": "commit"}, {"oid": "d985a321c677e659b0031de4a2b1b9dba7a8e357", "url": "https://github.com/ls1intum/Artemis/commit/d985a321c677e659b0031de4a2b1b9dba7a8e357", "message": "change to new submission mode", "committedDate": "2020-12-11T20:02:59Z", "type": "commit"}, {"oid": "fc6debc4528c968947ef79718997ba54e15bc87a", "url": "https://github.com/ls1intum/Artemis/commit/fc6debc4528c968947ef79718997ba54e15bc87a", "message": "fix latest manual result saving", "committedDate": "2020-12-12T13:53:50Z", "type": "commit"}, {"oid": "5f35234739aac601f8f2b3f66e64bfd4e932e489", "url": "https://github.com/ls1intum/Artemis/commit/5f35234739aac601f8f2b3f66e64bfd4e932e489", "message": "cleaner sorting", "committedDate": "2020-12-12T14:05:04Z", "type": "commit"}, {"oid": "d9bb26e6c378b7123660bc0e66198dd8b111b0e7", "url": "https://github.com/ls1intum/Artemis/commit/d9bb26e6c378b7123660bc0e66198dd8b111b0e7", "message": "renaming", "committedDate": "2020-12-12T14:15:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU4NDAwOA==", "url": "https://github.com/ls1intum/Artemis/pull/2482#discussion_r541584008", "bodyText": "rename the copyProgrammingAutomaticFeedbackForManualResult() -> copyFeedback()", "author": "fde312", "createdAt": "2020-12-12T14:15:32Z", "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java", "diffHunk": "@@ -115,6 +119,47 @@ public ProgrammingExerciseGradingService(ProgrammingExerciseTestCaseService test\n                 // This method will return without triggering the build if the submission is not of type TEST.\n                 triggerTemplateBuildIfTestCasesChanged(programmingExercise.getId(), result.getId());\n             }\n+\n+            if (!isSolutionParticipation && !isTemplateParticipation) {\n+\n+                Optional<ProgrammingExerciseStudentParticipation> studentParticipation = programmingExerciseParticipationService\n+                        .findStudentParticipationWithLatestManualResultsAndFeedbacksAndRelatedSubmissionsAndAssessor(participation.getId());\n+                if (studentParticipation.isPresent() && studentParticipation.get().getResults().stream().findFirst().isPresent()) {\n+\n+                    Result manualResult = studentParticipation.get().getResults().stream().findFirst().get();\n+\n+                    Result newResult = programmingSubmissionService.setNewResult(result.getSubmission());\n+                    newResult.setAssessor(manualResult.getAssessor());\n+                    newResult.setAssessmentType(AssessmentType.SEMI_AUTOMATIC);\n+                    newResult.setCompletionDate(manualResult.getCompletionDate());\n+                    newResult.setHasFeedback(manualResult.getHasFeedback());\n+                    newResult.setRated(manualResult.isRated());\n+\n+                    for (Feedback feedback : result.getFeedbacks()) {\n+                        Feedback newFeedback = feedback.copyProgrammingAutomaticFeedbackForManualResult();\n+                        newResult.addFeedback(newFeedback);\n+                    }\n+\n+                    for (Feedback feedback : manualResult.getFeedbacks()) {\n+                        if (feedback != null && feedback.getType() != FeedbackType.AUTOMATIC) {\n+                            Feedback newFeedback = feedback.copyProgrammingAutomaticFeedbackForManualResult();", "originalCommit": "5f35234739aac601f8f2b3f66e64bfd4e932e489", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU4NDg2Nw==", "url": "https://github.com/ls1intum/Artemis/pull/2482#discussion_r541584867", "bodyText": "Done", "author": "schultek", "createdAt": "2020-12-12T14:21:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU4NDAwOA=="}], "type": "inlineReview"}, {"oid": "9f1e8a23492ae418c4a886a803062bed835be73f", "url": "https://github.com/ls1intum/Artemis/commit/9f1e8a23492ae418c4a886a803062bed835be73f", "message": "Merge branch 'develop' into enhancement/programming-exercise/trigger-all-manual-assessment", "committedDate": "2020-12-12T14:22:56Z", "type": "commit"}, {"oid": "6b02a3e8bd6316b09604a69142d905e938831b85", "url": "https://github.com/ls1intum/Artemis/commit/6b02a3e8bd6316b09604a69142d905e938831b85", "message": "Revert \"change to new submission mode\"\n\nThis reverts commit d985a321c677e659b0031de4a2b1b9dba7a8e357.", "committedDate": "2020-12-14T10:00:30Z", "type": "commit"}, {"oid": "ce359aa161638623328a9062bbb1f45a4268c609", "url": "https://github.com/ls1intum/Artemis/commit/ce359aa161638623328a9062bbb1f45a4268c609", "message": "Merge branch 'develop' into enhancement/programming-exercise/trigger-all-manual-assessment", "committedDate": "2020-12-14T10:01:31Z", "type": "commit"}, {"oid": "1fd2891c57494f2d8d2205a4df1e4a2e7a77a938", "url": "https://github.com/ls1intum/Artemis/commit/1fd2891c57494f2d8d2205a4df1e4a2e7a77a938", "message": "add server tests", "committedDate": "2020-12-14T16:27:02Z", "type": "commit"}, {"oid": "7224f4c301c12d02a4e11d35d19fdb378937a947", "url": "https://github.com/ls1intum/Artemis/commit/7224f4c301c12d02a4e11d35d19fdb378937a947", "message": "fix tests", "committedDate": "2020-12-14T18:53:32Z", "type": "commit"}, {"oid": "68686f8747040169c1dabec8de1de211b2827e44", "url": "https://github.com/ls1intum/Artemis/commit/68686f8747040169c1dabec8de1de211b2827e44", "message": "Merge branch 'develop' into enhancement/programming-exercise/trigger-all-manual-assessment", "committedDate": "2020-12-18T22:24:37Z", "type": "commit"}, {"oid": "4f0b99d0f3b935fa1512745e3ce61dbff3718b77", "url": "https://github.com/ls1intum/Artemis/commit/4f0b99d0f3b935fa1512745e3ce61dbff3718b77", "message": "Revert \"Revert \"change to new submission mode\"\"\n\nThis reverts commit 6b02a3e8bd6316b09604a69142d905e938831b85.", "committedDate": "2020-12-18T22:25:36Z", "type": "commit"}, {"oid": "805e682ef7cf7b01ab485ce044c2b1a783cf82a1", "url": "https://github.com/ls1intum/Artemis/commit/805e682ef7cf7b01ab485ce044c2b1a783cf82a1", "message": "fix renamed method call", "committedDate": "2020-12-18T23:28:20Z", "type": "commit"}, {"oid": "6f190730dcf78556b1daa3b75c2ddc0280ad4633", "url": "https://github.com/ls1intum/Artemis/commit/6f190730dcf78556b1daa3b75c2ddc0280ad4633", "message": "Merge branch 'develop' into enhancement/programming-exercise/trigger-all-manual-assessment", "committedDate": "2020-12-19T10:48:15Z", "type": "commit"}, {"oid": "5fc47a4d6666848120b7cb403e03bdd233d05763", "url": "https://github.com/ls1intum/Artemis/commit/5fc47a4d6666848120b7cb403e03bdd233d05763", "message": "fix issues and add documentation", "committedDate": "2020-12-19T12:22:35Z", "type": "commit"}, {"oid": "dce991bf2962cafcf4d4d12419cec7f34c8828b3", "url": "https://github.com/ls1intum/Artemis/commit/dce991bf2962cafcf4d4d12419cec7f34c8828b3", "message": "Merge branch 'enhancement/programming-exercise/trigger-all-manual-assessment' of github.com:ls1intum/Artemis into enhancement/programming-exercise/trigger-all-manual-assessment", "committedDate": "2020-12-19T12:23:22Z", "type": "commit"}, {"oid": "7c29ec99672c5ed19e1f02afe20889625c331320", "url": "https://github.com/ls1intum/Artemis/commit/7c29ec99672c5ed19e1f02afe20889625c331320", "message": "Merge branch 'develop' into enhancement/programming-exercise/trigger-all-manual-assessment", "committedDate": "2020-12-19T12:33:06Z", "type": "commit"}, {"oid": "e83a39c818bdc4acb59a2b63b0ba26da31c69417", "url": "https://github.com/ls1intum/Artemis/commit/e83a39c818bdc4acb59a2b63b0ba26da31c69417", "message": "Merge branch 'develop' into enhancement/programming-exercise/trigger-all-manual-assessment", "committedDate": "2020-12-20T19:00:13Z", "type": "commit"}, {"oid": "3929b386265b6f8bab77dd3129ff3229d1c75978", "url": "https://github.com/ls1intum/Artemis/commit/3929b386265b6f8bab77dd3129ff3229d1c75978", "message": "Merge branch 'develop' into enhancement/programming-exercise/trigger-all-manual-assessment", "committedDate": "2020-12-21T23:46:10Z", "type": "commit"}, {"oid": "d6ddaf7fe442faf894c5956e84a1514a25763a54", "url": "https://github.com/ls1intum/Artemis/commit/d6ddaf7fe442faf894c5956e84a1514a25763a54", "message": "Merge branch 'develop' into enhancement/programming-exercise/trigger-all-manual-assessment", "committedDate": "2020-12-22T13:42:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzMzNTIwMA==", "url": "https://github.com/ls1intum/Artemis/pull/2482#discussion_r547335200", "bodyText": "Can it actually happen, that feedback == null here?", "author": "kloessst", "createdAt": "2020-12-22T15:17:27Z", "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java", "diffHunk": "@@ -115,6 +119,58 @@ public ProgrammingExerciseGradingService(ProgrammingExerciseTestCaseService test\n                 // This method will return without triggering the build if the submission is not of type TEST.\n                 triggerTemplateBuildIfTestCasesChanged(programmingExercise.getId(), result.getId());\n             }\n+\n+            if (!isSolutionParticipation && !isTemplateParticipation) {\n+\n+                // check if a manual result exists, if so we want to clone and update this with the new updated test-case and sca feedback\n+                Optional<ProgrammingExerciseStudentParticipation> studentParticipation = programmingExerciseParticipationService\n+                        .findStudentParticipationWithLatestManualResultsAndFeedbacksAndRelatedSubmissionsAndAssessor(participation.getId());\n+\n+                if (studentParticipation.isPresent() && studentParticipation.get().getResults().stream().findFirst().isPresent()) {\n+\n+                    Result manualResult = studentParticipation.get().getResults().stream().findFirst().get();\n+\n+                    // create a new manual result for the same submission as the automatic result\n+                    Result newResult = programmingSubmissionService.saveNewEmptyResult(result.getSubmission());\n+\n+                    newResult.setAssessor(manualResult.getAssessor());\n+                    newResult.setAssessmentType(AssessmentType.SEMI_AUTOMATIC);\n+                    // this makes it the most recent result, but optionally keeps the draft state of an unfinished manual result\n+                    newResult.setCompletionDate(manualResult.getCompletionDate() != null ? result.getCompletionDate().plusSeconds(1) : null);\n+                    newResult.setHasFeedback(manualResult.getHasFeedback());\n+                    newResult.setRated(manualResult.isRated());\n+\n+                    // copy all feedback from the automatic result\n+                    for (Feedback feedback : result.getFeedbacks()) {\n+                        Feedback newFeedback = feedback.copyFeedback();\n+                        newResult.addFeedback(newFeedback);\n+                    }\n+\n+                    // copy only the non-automatic feedback from the manual result\n+                    for (Feedback feedback : manualResult.getFeedbacks()) {\n+                        if (feedback != null && feedback.getType() != FeedbackType.AUTOMATIC) {", "originalCommit": "d6ddaf7fe442faf894c5956e84a1514a25763a54", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk0MjUyNg==", "url": "https://github.com/ls1intum/Artemis/pull/2482#discussion_r547942526", "bodyText": "I had that once when testing locally", "author": "schultek", "createdAt": "2020-12-23T12:47:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzMzNTIwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM0NTU1MA==", "url": "https://github.com/ls1intum/Artemis/pull/2482#discussion_r547345550", "bodyText": "We have similar statements in updateResultString(). We could factor this out into a new method to avoid code duplication.", "author": "kloessst", "createdAt": "2020-12-22T15:35:48Z", "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java", "diffHunk": "@@ -115,6 +119,58 @@ public ProgrammingExerciseGradingService(ProgrammingExerciseTestCaseService test\n                 // This method will return without triggering the build if the submission is not of type TEST.\n                 triggerTemplateBuildIfTestCasesChanged(programmingExercise.getId(), result.getId());\n             }\n+\n+            if (!isSolutionParticipation && !isTemplateParticipation) {\n+\n+                // check if a manual result exists, if so we want to clone and update this with the new updated test-case and sca feedback\n+                Optional<ProgrammingExerciseStudentParticipation> studentParticipation = programmingExerciseParticipationService\n+                        .findStudentParticipationWithLatestManualResultsAndFeedbacksAndRelatedSubmissionsAndAssessor(participation.getId());\n+\n+                if (studentParticipation.isPresent() && studentParticipation.get().getResults().stream().findFirst().isPresent()) {\n+\n+                    Result manualResult = studentParticipation.get().getResults().stream().findFirst().get();\n+\n+                    // create a new manual result for the same submission as the automatic result\n+                    Result newResult = programmingSubmissionService.saveNewEmptyResult(result.getSubmission());\n+\n+                    newResult.setAssessor(manualResult.getAssessor());\n+                    newResult.setAssessmentType(AssessmentType.SEMI_AUTOMATIC);\n+                    // this makes it the most recent result, but optionally keeps the draft state of an unfinished manual result\n+                    newResult.setCompletionDate(manualResult.getCompletionDate() != null ? result.getCompletionDate().plusSeconds(1) : null);\n+                    newResult.setHasFeedback(manualResult.getHasFeedback());\n+                    newResult.setRated(manualResult.isRated());\n+\n+                    // copy all feedback from the automatic result\n+                    for (Feedback feedback : result.getFeedbacks()) {\n+                        Feedback newFeedback = feedback.copyFeedback();\n+                        newResult.addFeedback(newFeedback);\n+                    }\n+\n+                    // copy only the non-automatic feedback from the manual result\n+                    for (Feedback feedback : manualResult.getFeedbacks()) {\n+                        if (feedback != null && feedback.getType() != FeedbackType.AUTOMATIC) {\n+                            Feedback newFeedback = feedback.copyFeedback();\n+                            newResult.addFeedback(newFeedback);\n+                        }\n+                    }\n+\n+                    // recalculate the score and set the result string\n+                    double maxScore = getMaxScoreRespectingZeroPointExercises(programmingExercise);\n+                    double points = programmingAssessmentService.calculateTotalScore(newResult);\n+                    newResult.setScore(points, maxScore);\n+\n+                    String resultString = result.getResultString() + \", \" + newResult.createResultString(points, maxScore);\n+                    newResult.setResultString(resultString);", "originalCommit": "d6ddaf7fe442faf894c5956e84a1514a25763a54", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk0MjQ4Ng==", "url": "https://github.com/ls1intum/Artemis/pull/2482#discussion_r547942486", "bodyText": "Done", "author": "schultek", "createdAt": "2020-12-23T12:47:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM0NTU1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM0NjU0Mg==", "url": "https://github.com/ls1intum/Artemis/pull/2482#discussion_r547346542", "bodyText": "We could factor this block out into an own method to keep the top level grading method short and simpler.", "author": "kloessst", "createdAt": "2020-12-22T15:37:29Z", "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java", "diffHunk": "@@ -115,6 +119,58 @@ public ProgrammingExerciseGradingService(ProgrammingExerciseTestCaseService test\n                 // This method will return without triggering the build if the submission is not of type TEST.\n                 triggerTemplateBuildIfTestCasesChanged(programmingExercise.getId(), result.getId());\n             }\n+\n+            if (!isSolutionParticipation && !isTemplateParticipation) {", "originalCommit": "d6ddaf7fe442faf894c5956e84a1514a25763a54", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzkzODE0Mw==", "url": "https://github.com/ls1intum/Artemis/pull/2482#discussion_r547938143", "bodyText": "Done", "author": "schultek", "createdAt": "2020-12-23T12:36:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM0NjU0Mg=="}], "type": "inlineReview"}, {"oid": "d437b18a4e0778952d35778cdc0ca98f67733212", "url": "https://github.com/ls1intum/Artemis/commit/d437b18a4e0778952d35778cdc0ca98f67733212", "message": "Merge branch 'develop' into enhancement/programming-exercise/trigger-all-manual-assessment", "committedDate": "2020-12-22T15:40:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM2OTE1Nw==", "url": "https://github.com/ls1intum/Artemis/pull/2482#discussion_r547369157", "bodyText": "I think we should use the latest result, not the first when iterating through a set. It is not impossible that a participation has two manual results (be it later because of the second correction). Could we use findLatestResult() here?", "author": "MaisiKoleni", "createdAt": "2020-12-22T16:18:12Z", "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java", "diffHunk": "@@ -115,6 +119,58 @@ public ProgrammingExerciseGradingService(ProgrammingExerciseTestCaseService test\n                 // This method will return without triggering the build if the submission is not of type TEST.\n                 triggerTemplateBuildIfTestCasesChanged(programmingExercise.getId(), result.getId());\n             }\n+\n+            if (!isSolutionParticipation && !isTemplateParticipation) {\n+\n+                // check if a manual result exists, if so we want to clone and update this with the new updated test-case and sca feedback\n+                Optional<ProgrammingExerciseStudentParticipation> studentParticipation = programmingExerciseParticipationService\n+                        .findStudentParticipationWithLatestManualResultsAndFeedbacksAndRelatedSubmissionsAndAssessor(participation.getId());\n+\n+                if (studentParticipation.isPresent() && studentParticipation.get().getResults().stream().findFirst().isPresent()) {\n+\n+                    Result manualResult = studentParticipation.get().getResults().stream().findFirst().get();", "originalCommit": "d437b18a4e0778952d35778cdc0ca98f67733212", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM3OTQ1Mg==", "url": "https://github.com/ls1intum/Artemis/pull/2482#discussion_r547379452", "bodyText": "The repository method here is\nfindStudentParticipationWithLatestManualResultsAndFeedbacksAndRelatedSubmissionsAndAssessor\n\nbut the one in the changes above is\nfindByIdWithLatestManualResultAndFeedbacksAndRelatedSubmissionsAndAssessor\n\nIn particular, the first one mentions \"Results\" and the latter only \"Result\". Is this something we need to worry about?", "author": "MaisiKoleni", "createdAt": "2020-12-22T16:37:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM2OTE1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzkzNDEzNg==", "url": "https://github.com/ls1intum/Artemis/pull/2482#discussion_r547934136", "bodyText": "There is only ever one result returned from the repository method.", "author": "schultek", "createdAt": "2020-12-23T12:25:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM2OTE1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzkzNjQ2Mw==", "url": "https://github.com/ls1intum/Artemis/pull/2482#discussion_r547936463", "bodyText": "I will rename this to singular.", "author": "schultek", "createdAt": "2020-12-23T12:31:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM2OTE1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM3MTcxNA==", "url": "https://github.com/ls1intum/Artemis/pull/2482#discussion_r547371714", "bodyText": "Just a thought: I hope it is safe/tested here that the tutors will not see two unfinished results (and only the latest one is used and submitted).", "author": "MaisiKoleni", "createdAt": "2020-12-22T16:23:06Z", "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java", "diffHunk": "@@ -115,6 +119,58 @@ public ProgrammingExerciseGradingService(ProgrammingExerciseTestCaseService test\n                 // This method will return without triggering the build if the submission is not of type TEST.\n                 triggerTemplateBuildIfTestCasesChanged(programmingExercise.getId(), result.getId());\n             }\n+\n+            if (!isSolutionParticipation && !isTemplateParticipation) {\n+\n+                // check if a manual result exists, if so we want to clone and update this with the new updated test-case and sca feedback\n+                Optional<ProgrammingExerciseStudentParticipation> studentParticipation = programmingExerciseParticipationService\n+                        .findStudentParticipationWithLatestManualResultsAndFeedbacksAndRelatedSubmissionsAndAssessor(participation.getId());\n+\n+                if (studentParticipation.isPresent() && studentParticipation.get().getResults().stream().findFirst().isPresent()) {\n+\n+                    Result manualResult = studentParticipation.get().getResults().stream().findFirst().get();\n+\n+                    // create a new manual result for the same submission as the automatic result\n+                    Result newResult = programmingSubmissionService.saveNewEmptyResult(result.getSubmission());\n+\n+                    newResult.setAssessor(manualResult.getAssessor());\n+                    newResult.setAssessmentType(AssessmentType.SEMI_AUTOMATIC);\n+                    // this makes it the most recent result, but optionally keeps the draft state of an unfinished manual result\n+                    newResult.setCompletionDate(manualResult.getCompletionDate() != null ? result.getCompletionDate().plusSeconds(1) : null);", "originalCommit": "d437b18a4e0778952d35778cdc0ca98f67733212", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzkzNjk0OQ==", "url": "https://github.com/ls1intum/Artemis/pull/2482#discussion_r547936949", "bodyText": "Yes only the latest one is then used for further manual assessments.", "author": "schultek", "createdAt": "2020-12-23T12:33:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM3MTcxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM3Njk3MQ==", "url": "https://github.com/ls1intum/Artemis/pull/2482#discussion_r547376971", "bodyText": "Could we use better names instead of pr and prr? At least the last one does express what it is in my eyes, or is this to indicate that we have multiple results at this point? Would prs be better or worse?", "author": "MaisiKoleni", "createdAt": "2020-12-22T16:33:02Z", "path": "src/main/java/de/tum/in/www1/artemis/repository/ProgrammingExerciseStudentParticipationRepository.java", "diffHunk": "@@ -27,7 +27,8 @@\n     Optional<ProgrammingExerciseStudentParticipation> findByIdWithLatestResultAndFeedbacksAndRelatedSubmissions(@Param(\"participationId\") Long participationId,\n             @Param(\"dateTime\") ZonedDateTime dateTime);\n \n-    @Query(\"select p from ProgrammingExerciseStudentParticipation p left join fetch p.results pr left join fetch pr.feedbacks left join fetch pr.submission left join fetch pr.assessor where p.id = :participationId and (pr.assessmentType = 'MANUAL' or pr.assessmentType = 'SEMI_AUTOMATIC')\")\n+    @Query(\"select p from ProgrammingExerciseStudentParticipation p left join fetch p.results pr left join fetch pr.feedbacks left join fetch pr.submission left join fetch pr.assessor\"\n+            + \" where p.id = :participationId and pr.id = (select max(prr.id) from p.results prr where prr.assessmentType = 'MANUAL' or prr.assessmentType = 'SEMI_AUTOMATIC')\")", "originalCommit": "d437b18a4e0778952d35778cdc0ca98f67733212", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzkzODA3Ng==", "url": "https://github.com/ls1intum/Artemis/pull/2482#discussion_r547938076", "bodyText": "This is also used at other places", "author": "schultek", "createdAt": "2020-12-23T12:35:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM3Njk3MQ=="}], "type": "inlineReview"}, {"oid": "f9153d8d327be880ae15d839ddd9bc7b73b4f3a5", "url": "https://github.com/ls1intum/Artemis/commit/f9153d8d327be880ae15d839ddd9bc7b73b4f3a5", "message": "code suggestions and refactoring", "committedDate": "2020-12-23T12:48:28Z", "type": "commit"}, {"oid": "0fd05bb0e3e9643badeba8e6b342dda29a2b7bd1", "url": "https://github.com/ls1intum/Artemis/commit/0fd05bb0e3e9643badeba8e6b342dda29a2b7bd1", "message": "Merge branch 'develop' into enhancement/programming-exercise/trigger-all-manual-assessment", "committedDate": "2020-12-23T16:13:39Z", "type": "commit"}]}