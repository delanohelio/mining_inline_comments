{"pr_number": 2211, "pr_title": "Add Kotlin, VHDL, Assember Programming Language Templates.", "pr_createdAt": "2020-10-15T20:24:09Z", "pr_url": "https://github.com/ls1intum/Artemis/pull/2211", "timeline": [{"oid": "20d2be6f058c6672302f686dfdc954ff9342fb86", "url": "https://github.com/ls1intum/Artemis/commit/20d2be6f058c6672302f686dfdc954ff9342fb86", "message": "Add kotlin template, prepare for Assembler & VHDL.", "committedDate": "2020-10-15T20:22:28Z", "type": "commit"}, {"oid": "0fb2793310e2df20dace066d95ea0d91382a2afd", "url": "https://github.com/ls1intum/Artemis/commit/0fb2793310e2df20dace066d95ea0d91382a2afd", "message": "Add VHDL template.", "committedDate": "2020-10-15T23:07:33Z", "type": "commit"}, {"oid": "ef78567499117c5ddeb16e00aee05998f508d35d", "url": "https://github.com/ls1intum/Artemis/commit/ef78567499117c5ddeb16e00aee05998f508d35d", "message": "Add VHDL assignment checkout repo path.", "committedDate": "2020-10-15T23:10:59Z", "type": "commit"}, {"oid": "6b8219569fb4fee552bc31a7911f4d95b9fa1242", "url": "https://github.com/ls1intum/Artemis/commit/6b8219569fb4fee552bc31a7911f4d95b9fa1242", "message": "Rename VHDL Makefiles and .gitignore files.", "committedDate": "2020-10-15T23:16:33Z", "type": "commit"}, {"oid": "0838f129b2e7a9a4f916c1a3ac1dee3827af574d", "url": "https://github.com/ls1intum/Artemis/commit/0838f129b2e7a9a4f916c1a3ac1dee3827af574d", "message": "Add Assembler template.", "committedDate": "2020-10-15T23:37:13Z", "type": "commit"}, {"oid": "151572724297f1822980cff02d8f227355fe3af9", "url": "https://github.com/ls1intum/Artemis/commit/151572724297f1822980cff02d8f227355fe3af9", "message": "Merge branch 'develop' into feature/additional-programming-languages", "committedDate": "2020-10-16T00:03:04Z", "type": "commit"}, {"oid": "eed668f08294417c73599010e68fbac048c35eb2", "url": "https://github.com/ls1intum/Artemis/commit/eed668f08294417c73599010e68fbac048c35eb2", "message": "Add kotlin template tests.", "committedDate": "2020-10-17T18:32:36Z", "type": "commit"}, {"oid": "dc0e2fb14218da72922b60db4ce3f7efb5224b5a", "url": "https://github.com/ls1intum/Artemis/commit/dc0e2fb14218da72922b60db4ce3f7efb5224b5a", "message": "Fix comment.", "committedDate": "2020-10-17T20:39:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk4MTgxNA==", "url": "https://github.com/ls1intum/Artemis/pull/2211#discussion_r506981814", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        default -> throw new IllegalArgumentException(\"No build stage setup for programming language \" + programmingLanguage);\n          \n      \n    \n    \n  \n\nWe should delete this to let the compiler check the correctness, I think this would be better.", "author": "MaisiKoleni", "createdAt": "2020-10-17T20:40:06Z", "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/bamboo/BambooBuildPlanService.java", "diffHunk": "@@ -183,6 +183,26 @@ private Stage createBuildStage(ProgrammingLanguage programmingLanguage, final bo\n                 tasks.add(0, checkoutTask);\n                 return defaultStage.jobs(defaultJob.tasks(tasks.toArray(new Task[0])).finalTasks(testParserTask));\n             }\n+            case VHDL -> {\n+                // Do not run the builds in extra docker containers if the dev-profile is active\n+                if (!activeProfiles.contains(JHipsterConstants.SPRING_PROFILE_DEVELOPMENT)) {\n+                    defaultJob.dockerConfiguration(new DockerConfiguration().image(\"tizianleonhardt/era-artemis-vhdl:latest\"));\n+                }\n+                final var testParserTask = new TestParserTask(TestParserTaskProperties.TestType.JUNIT).resultDirectories(\"**/result.xml\");\n+                var tasks = readScriptTasksFromTemplate(programmingLanguage, sequentialBuildRuns);\n+                tasks.add(0, checkoutTask);\n+                return defaultStage.jobs(defaultJob.tasks(tasks.toArray(new Task[0])).finalTasks(testParserTask));\n+            }\n+            case ASSEMBLER -> {\n+                // Do not run the builds in extra docker containers if the dev-profile is active\n+                if (!activeProfiles.contains(JHipsterConstants.SPRING_PROFILE_DEVELOPMENT)) {\n+                    defaultJob.dockerConfiguration(new DockerConfiguration().image(\"tizianleonhardt/era-artemis-assembler:latest\"));\n+                }\n+                final var testParserTask = new TestParserTask(TestParserTaskProperties.TestType.JUNIT).resultDirectories(\"**/result.xml\");\n+                var tasks = readScriptTasksFromTemplate(programmingLanguage, sequentialBuildRuns);\n+                tasks.add(0, checkoutTask);\n+                return defaultStage.jobs(defaultJob.tasks(tasks.toArray(new Task[0])).finalTasks(testParserTask));\n+            }\n             default -> throw new IllegalArgumentException(\"No build stage setup for programming language \" + programmingLanguage);", "originalCommit": "eed668f08294417c73599010e68fbac048c35eb2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU3NDY0Ng==", "url": "https://github.com/ls1intum/Artemis/pull/2211#discussion_r507574646", "bodyText": "when we cover all cases before, then yes, we should delete the default statement", "author": "krusche", "createdAt": "2020-10-19T08:44:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk4MTgxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk4MjAwMg==", "url": "https://github.com/ls1intum/Artemis/pull/2211#discussion_r507982002", "bodyText": "I've removed the default branch.", "author": "sleiss", "createdAt": "2020-10-19T18:42:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk4MTgxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODEyNzgxMg==", "url": "https://github.com/ls1intum/Artemis/pull/2211#discussion_r508127812", "bodyText": "@krusche @MaisiKoleni The removal of the default branch caused an error (I believe something with switch expressions vs statements). As I will refactor the code in a follow-up, I've reverted it for now (see #2150).", "author": "sleiss", "createdAt": "2020-10-19T23:53:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk4MTgxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk4MTg2NA==", "url": "https://github.com/ls1intum/Artemis/pull/2211#discussion_r506981864", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                default -> throw new IllegalArgumentException(\"Repository checkout path for assignment repo has not yet been defined for \" + language);", "author": "MaisiKoleni", "createdAt": "2020-10-17T20:40:34Z", "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/ContinuousIntegrationService.java", "diffHunk": "@@ -237,7 +237,7 @@\n             @Override\n             public String forProgrammingLanguage(ProgrammingLanguage language) {\n                 return switch (language) {\n-                    case JAVA, PYTHON, C, HASKELL -> Constants.ASSIGNMENT_CHECKOUT_PATH;\n+                    case JAVA, PYTHON, C, HASKELL, KOTLIN, VHDL, ASSEMBLER -> Constants.ASSIGNMENT_CHECKOUT_PATH;\n                     default -> throw new IllegalArgumentException(\"Repository checkout path for assignment repo has not yet been defined for \" + language);", "originalCommit": "eed668f08294417c73599010e68fbac048c35eb2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk4MTkxNQ==", "url": "https://github.com/ls1intum/Artemis/pull/2211#discussion_r506981915", "bodyText": "@krusche Should we change this?", "author": "sleiss", "createdAt": "2020-10-17T20:41:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk4MTg2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU3NDM3NQ==", "url": "https://github.com/ls1intum/Artemis/pull/2211#discussion_r507574375", "bodyText": "Yes, in case we cover all cases, the compiler should check the completeness and we should delete the default statement.", "author": "krusche", "createdAt": "2020-10-19T08:44:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk4MTg2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk4MTgyMQ==", "url": "https://github.com/ls1intum/Artemis/pull/2211#discussion_r507981821", "bodyText": "I've removed the default branch.", "author": "sleiss", "createdAt": "2020-10-19T18:42:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk4MTg2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk4MTg3Mw==", "url": "https://github.com/ls1intum/Artemis/pull/2211#discussion_r506981873", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                default -> throw new IllegalArgumentException(\"Repository checkout path for test repo has not yet been defined for \" + language);", "author": "MaisiKoleni", "createdAt": "2020-10-17T20:40:41Z", "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/ContinuousIntegrationService.java", "diffHunk": "@@ -247,8 +247,8 @@ public String forProgrammingLanguage(ProgrammingLanguage language) {\n             @Override\n             public String forProgrammingLanguage(ProgrammingLanguage language) {\n                 return switch (language) {\n-                    case JAVA, PYTHON, HASKELL -> \"\";\n-                    case C -> Constants.TESTS_CHECKOUT_PATH;\n+                    case JAVA, PYTHON, HASKELL, KOTLIN -> \"\";\n+                    case C, VHDL, ASSEMBLER -> Constants.TESTS_CHECKOUT_PATH;\n                     default -> throw new IllegalArgumentException(\"Repository checkout path for test repo has not yet been defined for \" + language);", "originalCommit": "eed668f08294417c73599010e68fbac048c35eb2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk4MTk1MA==", "url": "https://github.com/ls1intum/Artemis/pull/2211#discussion_r507981950", "bodyText": "I've removed the default branch.", "author": "sleiss", "createdAt": "2020-10-19T18:42:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk4MTg3Mw=="}], "type": "inlineReview"}, {"oid": "bf0b81e90f7c61472760e948d3527dff5119aadb", "url": "https://github.com/ls1intum/Artemis/commit/bf0b81e90f7c61472760e948d3527dff5119aadb", "message": "Merge branch 'develop' into feature/additional-programming-languages", "committedDate": "2020-10-19T08:45:17Z", "type": "commit"}, {"oid": "352e64d7277eef3f37e3b0b0d6a33d8fb16b989b", "url": "https://github.com/ls1intum/Artemis/commit/352e64d7277eef3f37e3b0b0d6a33d8fb16b989b", "message": "Remove default cases from switch(ProgrammingLanguage).", "committedDate": "2020-10-19T18:42:02Z", "type": "commit"}, {"oid": "b937202fcc2543f575bb03b8185d48fae0fb159f", "url": "https://github.com/ls1intum/Artemis/commit/b937202fcc2543f575bb03b8185d48fae0fb159f", "message": "Merge remote-tracking branch 'origin/feature/additional-programming-languages' into feature/additional-programming-languages", "committedDate": "2020-10-19T18:43:17Z", "type": "commit"}, {"oid": "dcf4ac14a30000118173fad1c97821ed5d0bb6b9", "url": "https://github.com/ls1intum/Artemis/commit/dcf4ac14a30000118173fad1c97821ed5d0bb6b9", "message": "Merge branch 'develop' into feature/additional-programming-languages", "committedDate": "2020-10-19T23:33:52Z", "type": "commit"}, {"oid": "1d7f64c452e75cf4d273299f373ebe30388bd304", "url": "https://github.com/ls1intum/Artemis/commit/1d7f64c452e75cf4d273299f373ebe30388bd304", "message": "Merge branch 'develop' into feature/additional-programming-languages", "committedDate": "2020-10-19T23:39:34Z", "type": "commit"}, {"oid": "4d2e45d3fbc08eb9a3cf10a497ca3b37ad0d493c", "url": "https://github.com/ls1intum/Artemis/commit/4d2e45d3fbc08eb9a3cf10a497ca3b37ad0d493c", "message": "Revert removal of default branch.", "committedDate": "2020-10-19T23:50:47Z", "type": "commit"}, {"oid": "61e5e8d496082b941d7779e59a071105c2cf3ed2", "url": "https://github.com/ls1intum/Artemis/commit/61e5e8d496082b941d7779e59a071105c2cf3ed2", "message": "fix compile issues, warnings and refactor duplicated code", "committedDate": "2020-10-19T23:51:37Z", "type": "commit"}, {"oid": "c9902085ebebce1ef2e12d65c6879491092956e7", "url": "https://github.com/ls1intum/Artemis/commit/c9902085ebebce1ef2e12d65c6879491092956e7", "message": "Merge branch 'feature/additional-programming-languages' of https://github.com/ls1intum/Artemis into feature/additional-programming-languages\n\n# Conflicts:\n#\tsrc/main/java/de/tum/in/www1/artemis/service/connectors/bamboo/BambooBuildPlanService.java", "committedDate": "2020-10-19T23:53:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODEzMTYyNw==", "url": "https://github.com/ls1intum/Artemis/pull/2211#discussion_r508131627", "bodyText": "Just as a small note: I believe Kotlin handles Identifiers differently to Java and is way more permissive. I don't know if this applies to package names, but it is quite likely that different rules apply (different character groups, whitespace, and keywords). However, I don't think that the package names are that different in practice, so we should be fine here for now (we should keep that in mind though).", "author": "MaisiKoleni", "createdAt": "2020-10-20T00:06:35Z", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ProgrammingExerciseResource.java", "diffHunk": "@@ -308,8 +308,8 @@ public ProgrammingExerciseResource(ProgrammingExerciseRepository programmingExer\n         }\n \n         // Check if package name is set\n-        if (programmingExercise.getProgrammingLanguage() == ProgrammingLanguage.JAVA) {\n-            // only Java needs a valid package name at the moment\n+        if (programmingExercise.getProgrammingLanguage() == ProgrammingLanguage.JAVA || programmingExercise.getProgrammingLanguage() == ProgrammingLanguage.KOTLIN) {\n+            // only Java and Kotlin need a valid package name at the moment", "originalCommit": "c9902085ebebce1ef2e12d65c6879491092956e7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODEzNDg4OA==", "url": "https://github.com/ls1intum/Artemis/pull/2211#discussion_r508134888", "bodyText": "Codacy found an issue: The JUnit 5 test method name 'runTemplateTests_kotlin_exercise' doesn't match '[a-z][a-zA-Z0-9]*'", "author": "artemis-bot", "createdAt": "2020-10-20T00:17:56Z", "path": "src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseTemplateIntegrationTest.java", "diffHunk": "@@ -142,6 +143,38 @@ public void runTemplateTests_java_solution() throws Exception {\n         assertThat(testResults).containsExactlyInAnyOrderEntriesOf(Map.of(TestResult.SUCCESSFUL, 13));\n     }\n \n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void runTemplateTests_kotlin_exercise() throws Exception {", "originalCommit": "c9902085ebebce1ef2e12d65c6879491092956e7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODEzNDg5Ng==", "url": "https://github.com/ls1intum/Artemis/pull/2211#discussion_r508134896", "bodyText": "Codacy found an issue: The JUnit 5 test method name 'runTemplateTests_kotlin_solution' doesn't match '[a-z][a-zA-Z0-9]*'", "author": "artemis-bot", "createdAt": "2020-10-20T00:17:57Z", "path": "src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseTemplateIntegrationTest.java", "diffHunk": "@@ -142,6 +143,38 @@ public void runTemplateTests_java_solution() throws Exception {\n         assertThat(testResults).containsExactlyInAnyOrderEntriesOf(Map.of(TestResult.SUCCESSFUL, 13));\n     }\n \n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void runTemplateTests_kotlin_exercise() throws Exception {\n+        exercise.setProgrammingLanguage(ProgrammingLanguage.KOTLIN);\n+\n+        mockConnectorRequestsForSetup(exercise);\n+        request.postWithResponseBody(ROOT + SETUP, exercise, ProgrammingExercise.class, HttpStatus.CREATED);\n+\n+        moveAssignmentSourcesOf(exerciseRepo);\n+        int exitCode = invokeMaven();\n+        assertThat(exitCode).isNotEqualTo(0);\n+\n+        var testResults = readTestReports();\n+        assertThat(testResults).containsExactlyInAnyOrderEntriesOf(Map.of(TestResult.FAILED, 12));\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void runTemplateTests_kotlin_solution() throws Exception {", "originalCommit": "c9902085ebebce1ef2e12d65c6879491092956e7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}