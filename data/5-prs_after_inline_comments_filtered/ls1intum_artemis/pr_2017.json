{"pr_number": 2017, "pr_title": "[Enhancement] Change submit button to also save serverside", "pr_createdAt": "2020-08-12T14:01:55Z", "pr_url": "https://github.com/ls1intum/Artemis/pull/2017", "timeline": [{"oid": "e0456559e3158ab92d3b6504561ee954fe34dbc5", "url": "https://github.com/ls1intum/Artemis/commit/e0456559e3158ab92d3b6504561ee954fe34dbc5", "message": "remove unused property in file-browser", "committedDate": "2020-08-05T14:12:25Z", "type": "commit"}, {"oid": "d343da15bdb30095830b5df28ed2ed2331398e87", "url": "https://github.com/ls1intum/Artemis/commit/d343da15bdb30095830b5df28ed2ed2331398e87", "message": "move exerciseTitle out of code-editor-grid", "committedDate": "2020-08-05T14:14:01Z", "type": "commit"}, {"oid": "0d1cc4d01b773f278e24eb0a1435f8c4103a65b0", "url": "https://github.com/ls1intum/Artemis/commit/0d1cc4d01b773f278e24eb0a1435f8c4103a65b0", "message": "create standalone code-editor-container component", "committedDate": "2020-08-05T14:14:53Z", "type": "commit"}, {"oid": "5814699e8cd87b2c14281d32b53501c5529a0b60", "url": "https://github.com/ls1intum/Artemis/commit/5814699e8cd87b2c14281d32b53501c5529a0b60", "message": "edit code-editor-student-container to use new standalone component", "committedDate": "2020-08-05T14:15:42Z", "type": "commit"}, {"oid": "81decb67ff30f4f5ac9215dad01b999996ffdf14", "url": "https://github.com/ls1intum/Artemis/commit/81decb67ff30f4f5ac9215dad01b999996ffdf14", "message": "fix formatting", "committedDate": "2020-08-05T16:47:43Z", "type": "commit"}, {"oid": "373f5410f15a03c052b2bd1af903cfa1e8f3c0b1", "url": "https://github.com/ls1intum/Artemis/commit/373f5410f15a03c052b2bd1af903cfa1e8f3c0b1", "message": "add to module", "committedDate": "2020-08-05T16:47:53Z", "type": "commit"}, {"oid": "7346462979e8232c8da4d23cddd50a4da9f26c51", "url": "https://github.com/ls1intum/Artemis/commit/7346462979e8232c8da4d23cddd50a4da9f26c51", "message": "try rename navbar", "committedDate": "2020-08-05T17:13:11Z", "type": "commit"}, {"oid": "7fdb5da388e07a9497a1c6ab20c4094718003139", "url": "https://github.com/ls1intum/Artemis/commit/7fdb5da388e07a9497a1c6ab20c4094718003139", "message": "remove ng-template", "committedDate": "2020-08-05T17:59:45Z", "type": "commit"}, {"oid": "443c7dcded23e572af21f9ddd152332d826c14a3", "url": "https://github.com/ls1intum/Artemis/commit/443c7dcded23e572af21f9ddd152332d826c14a3", "message": "refactor code-editor-instructionns", "committedDate": "2020-08-05T18:07:27Z", "type": "commit"}, {"oid": "7f145ea72b2422a820219548569d9644a7d788c4", "url": "https://github.com/ls1intum/Artemis/commit/7f145ea72b2422a820219548569d9644a7d788c4", "message": "make grid-resize event explicit\n(todo: remove resize service)", "committedDate": "2020-08-05T18:18:20Z", "type": "commit"}, {"oid": "97f6ae274690c9b963a9f8091184db7e30f99d75", "url": "https://github.com/ls1intum/Artemis/commit/97f6ae274690c9b963a9f8091184db7e30f99d75", "message": "make ace-editor resize explicit", "committedDate": "2020-08-05T18:25:44Z", "type": "commit"}, {"oid": "616ff3e87f737b4f860fef2c071236b48722fdaa", "url": "https://github.com/ls1intum/Artemis/commit/616ff3e87f737b4f860fef2c071236b48722fdaa", "message": "remove unused resize bits from code-editor-instructions", "committedDate": "2020-08-05T18:26:54Z", "type": "commit"}, {"oid": "4ad4c17c54dbd895b5d2e1a9d8c5df191c51fb1e", "url": "https://github.com/ls1intum/Artemis/commit/4ad4c17c54dbd895b5d2e1a9d8c5df191c51fb1e", "message": "remove unused code-editor-grid-service", "committedDate": "2020-08-05T18:29:54Z", "type": "commit"}, {"oid": "e32802ce222d3ee14e2b33acc56273eabd5a61eb", "url": "https://github.com/ls1intum/Artemis/commit/e32802ce222d3ee14e2b33acc56273eabd5a61eb", "message": "fix code-editor-instructions", "committedDate": "2020-08-05T19:17:28Z", "type": "commit"}, {"oid": "058e65ea553028da3d54992a899fc664c71d0ee7", "url": "https://github.com/ls1intum/Artemis/commit/058e65ea553028da3d54992a899fc664c71d0ee7", "message": "refactor exam-code-editor-student-container to use new code-editor-container component", "committedDate": "2020-08-05T19:50:23Z", "type": "commit"}, {"oid": "d5c19afcfc37ba35dbcbe59fe7e0617803a175ed", "url": "https://github.com/ls1intum/Artemis/commit/d5c19afcfc37ba35dbcbe59fe7e0617803a175ed", "message": "refactor exam-code-editor-instructor-container to use new code-editor-container component", "committedDate": "2020-08-05T20:40:20Z", "type": "commit"}, {"oid": "9ef31a48e65a094f3a0f22be6eac4707085f63fe", "url": "https://github.com/ls1intum/Artemis/commit/9ef31a48e65a094f3a0f22be6eac4707085f63fe", "message": "Merge branch 'develop' into ehancement/code-editor/refactor-code-editor-container", "committedDate": "2020-08-05T20:40:52Z", "type": "commit"}, {"oid": "fb2550c8df7161c6053915d26cabc26b9421a991", "url": "https://github.com/ls1intum/Artemis/commit/fb2550c8df7161c6053915d26cabc26b9421a991", "message": "wiring for onFileChanged in exam-code-editor-student-container", "committedDate": "2020-08-05T20:52:32Z", "type": "commit"}, {"oid": "bf8692a863f1def04f3fa6020c142e32fd00ec78", "url": "https://github.com/ls1intum/Artemis/commit/bf8692a863f1def04f3fa6020c142e32fd00ec78", "message": "remove old unused code-editor-container", "committedDate": "2020-08-05T20:52:52Z", "type": "commit"}, {"oid": "ca778fb443ee847b12e673ef0aadb02910c12e56", "url": "https://github.com/ls1intum/Artemis/commit/ca778fb443ee847b12e673ef0aadb02910c12e56", "message": "fix code-editor reference", "committedDate": "2020-08-05T21:03:43Z", "type": "commit"}, {"oid": "6b52c94f437879084c5956f7f10f8ae5304fa4ff", "url": "https://github.com/ls1intum/Artemis/commit/6b52c94f437879084c5956f7f10f8ae5304fa4ff", "message": "join exam-code-editor-student-container into programming-exam-submission component", "committedDate": "2020-08-05T21:16:56Z", "type": "commit"}, {"oid": "cc001eb9c58559975e36837eddff8d0535d78d4e", "url": "https://github.com/ls1intum/Artemis/commit/cc001eb9c58559975e36837eddff8d0535d78d4e", "message": "fix CodeEditorInstructor jest tests", "committedDate": "2020-08-06T07:30:38Z", "type": "commit"}, {"oid": "39ba51b98b16be240f854bdd0220464aa99e8cbc", "url": "https://github.com/ls1intum/Artemis/commit/39ba51b98b16be240f854bdd0220464aa99e8cbc", "message": "try to fix CodeEditorStudentContainer tests", "committedDate": "2020-08-06T08:24:51Z", "type": "commit"}, {"oid": "8c54c1cb313e393bae80a11e7777063497c33398", "url": "https://github.com/ls1intum/Artemis/commit/8c54c1cb313e393bae80a11e7777063497c33398", "message": "Merge branch 'develop' into ehancement/code-editor/refactor-code-editor-container", "committedDate": "2020-08-06T08:38:04Z", "type": "commit"}, {"oid": "ef40247b545e9932bace0eded3d79470a9ec1c72", "url": "https://github.com/ls1intum/Artemis/commit/ef40247b545e9932bace0eded3d79470a9ec1c72", "message": "fix canDeactivate", "committedDate": "2020-08-06T16:36:37Z", "type": "commit"}, {"oid": "a51d61beaa884b3a25893c36cf0e13e2393db3b4", "url": "https://github.com/ls1intum/Artemis/commit/a51d61beaa884b3a25893c36cf0e13e2393db3b4", "message": "fix editor layout", "committedDate": "2020-08-06T16:36:59Z", "type": "commit"}, {"oid": "ccc61e2456634d9dc0eb0e97cad9c3a59aab84a8", "url": "https://github.com/ls1intum/Artemis/commit/ccc61e2456634d9dc0eb0e97cad9c3a59aab84a8", "message": "fix instructions test", "committedDate": "2020-08-06T16:37:20Z", "type": "commit"}, {"oid": "e03bb620f6885669e7fb33a0843afa041ab3490f", "url": "https://github.com/ls1intum/Artemis/commit/e03bb620f6885669e7fb33a0843afa041ab3490f", "message": "Merge branch 'develop' into ehancement/code-editor/refactor-code-editor-container\n\n# Conflicts:\n#\tsrc/main/webapp/app/exercises/programming/shared/code-editor/instructions/code-editor-instructions.component.ts\n#\tsrc/main/webapp/app/exercises/programming/shared/code-editor/layout/code-editor-grid.component.ts", "committedDate": "2020-08-06T16:47:14Z", "type": "commit"}, {"oid": "f7df6545a2dcb4f54dae197de42003b98d9012b3", "url": "https://github.com/ls1intum/Artemis/commit/f7df6545a2dcb4f54dae197de42003b98d9012b3", "message": "cleanup instructions-component", "committedDate": "2020-08-06T17:22:37Z", "type": "commit"}, {"oid": "327512fd8ac3f95932e1ca6d419b1fff1a987c3e", "url": "https://github.com/ls1intum/Artemis/commit/327512fd8ac3f95932e1ca6d419b1fff1a987c3e", "message": "typescript formatting", "committedDate": "2020-08-06T17:41:35Z", "type": "commit"}, {"oid": "d8cc34151f8c132b410748d00a752a3a4451305e", "url": "https://github.com/ls1intum/Artemis/commit/d8cc34151f8c132b410748d00a752a3a4451305e", "message": "Merge branch 'develop' into ehancement/code-editor/refactor-code-editor-container", "committedDate": "2020-08-06T17:42:20Z", "type": "commit"}, {"oid": "2c9a5cf8427a1bb446750efe55b6cfd9915e6356", "url": "https://github.com/ls1intum/Artemis/commit/2c9a5cf8427a1bb446750efe55b6cfd9915e6356", "message": "add code-editor-container integration test", "committedDate": "2020-08-06T19:49:06Z", "type": "commit"}, {"oid": "875c230b0ad4c7dcafba956187dc463776645469", "url": "https://github.com/ls1intum/Artemis/commit/875c230b0ad4c7dcafba956187dc463776645469", "message": "typescript linting", "committedDate": "2020-08-06T20:07:21Z", "type": "commit"}, {"oid": "646d023762b63ebe804395fc3c47c5ca6e750074", "url": "https://github.com/ls1intum/Artemis/commit/646d023762b63ebe804395fc3c47c5ca6e750074", "message": "Merge branch 'develop' into ehancement/code-editor/refactor-code-editor-container", "committedDate": "2020-08-10T10:14:30Z", "type": "commit"}, {"oid": "5794a7925a7543a6fcaa705f1a25a38642294ded", "url": "https://github.com/ls1intum/Artemis/commit/5794a7925a7543a6fcaa705f1a25a38642294ded", "message": "Merge branch 'develop' into ehancement/code-editor/refactor-code-editor-container", "committedDate": "2020-08-12T11:23:07Z", "type": "commit"}, {"oid": "ac10d9df825f6f1e5d8301522201d2bdfe849f9f", "url": "https://github.com/ls1intum/Artemis/commit/ac10d9df825f6f1e5d8301522201d2bdfe849f9f", "message": "change submit button to save on server", "committedDate": "2020-08-12T13:54:42Z", "type": "commit"}, {"oid": "63a3262e1eefa50f9b55d0470cf9a431086fee15", "url": "https://github.com/ls1intum/Artemis/commit/63a3262e1eefa50f9b55d0470cf9a431086fee15", "message": "fix codacy issue", "committedDate": "2020-08-12T14:12:52Z", "type": "commit"}, {"oid": "02115d64d00775bc1bc976c59cbcfe8c87f89d2c", "url": "https://github.com/ls1intum/Artemis/commit/02115d64d00775bc1bc976c59cbcfe8c87f89d2c", "message": "move file update logic to fix commit error", "committedDate": "2020-08-12T14:32:38Z", "type": "commit"}, {"oid": "7b2aea831c26366602f3d6a76b7c3fc8dd8d0bc3", "url": "https://github.com/ls1intum/Artemis/commit/7b2aea831c26366602f3d6a76b7c3fc8dd8d0bc3", "message": "fix observable race condition", "committedDate": "2020-08-12T14:58:20Z", "type": "commit"}, {"oid": "ee6e99ac0eb4837fc167510ad558f969f36f7d43", "url": "https://github.com/ls1intum/Artemis/commit/ee6e99ac0eb4837fc167510ad558f969f36f7d43", "message": "Merge branch 'develop' into enhancement/code-editor/refactor-submit-button", "committedDate": "2020-08-12T14:59:13Z", "type": "commit"}, {"oid": "e999010ae115f7676c6f18defdbc08b4120ec641", "url": "https://github.com/ls1intum/Artemis/commit/e999010ae115f7676c6f18defdbc08b4120ec641", "message": "fix java docu", "committedDate": "2020-08-13T19:17:39Z", "type": "commit"}, {"oid": "fda944a6235ba010ebdd404e1a1421fc21408767", "url": "https://github.com/ls1intum/Artemis/commit/fda944a6235ba010ebdd404e1a1421fc21408767", "message": "fix issues & failing tests", "committedDate": "2020-08-13T19:21:38Z", "type": "commit"}, {"oid": "cbd933ba08f4c9341e9d7831f07873be31a4f5ca", "url": "https://github.com/ls1intum/Artemis/commit/cbd933ba08f4c9341e9d7831f07873be31a4f5ca", "message": "Merge branch 'develop' into enhancement/code-editor/refactor-submit-button", "committedDate": "2020-08-13T19:21:57Z", "type": "commit"}, {"oid": "08fe9087750e00f00f62183c735c09edf236e650", "url": "https://github.com/ls1intum/Artemis/commit/08fe9087750e00f00f62183c735c09edf236e650", "message": "Merge branch 'develop' into enhancement/code-editor/refactor-submit-button", "committedDate": "2020-08-14T14:46:39Z", "type": "commit"}, {"oid": "5ff29e8ae1d9d99cefffb6a6064f04f5b3cf91c3", "url": "https://github.com/ls1intum/Artemis/commit/5ff29e8ae1d9d99cefffb6a6064f04f5b3cf91c3", "message": "Merge branch 'develop' into enhancement/code-editor/refactor-submit-button\n\n# Conflicts:\n#\tsrc/main/webapp/app/exam/participate/exercises/programming/programming-exam-submission.component.ts\n#\tsrc/main/webapp/app/exercises/programming/participate/code-editor-student-container.component.ts\n#\tsrc/test/javascript/spec/integration/code-editor/code-editor-container.integration.spec.ts", "committedDate": "2020-08-20T11:18:13Z", "type": "commit"}, {"oid": "f9b2108718c2ae8092a6673d8dce5815d543087a", "url": "https://github.com/ls1intum/Artemis/commit/f9b2108718c2ae8092a6673d8dce5815d543087a", "message": "fix codacy issue", "committedDate": "2020-08-20T13:48:40Z", "type": "commit"}, {"oid": "1ec49d09976e2d3eed154f4d48d8c4dc2fd60b19", "url": "https://github.com/ls1intum/Artemis/commit/1ec49d09976e2d3eed154f4d48d8c4dc2fd60b19", "message": "Merge branch 'develop' into enhancement/code-editor/refactor-submit-button", "committedDate": "2020-08-20T14:46:16Z", "type": "commit"}, {"oid": "6e02254a5c45feb238af109ce0df698930726039", "url": "https://github.com/ls1intum/Artemis/commit/6e02254a5c45feb238af109ce0df698930726039", "message": "Remove unused import", "committedDate": "2020-08-20T14:50:48Z", "type": "commit"}, {"oid": "d44a077c0cf5bafe2c419e0c90b61c5806d4a956", "url": "https://github.com/ls1intum/Artemis/commit/d44a077c0cf5bafe2c419e0c90b61c5806d4a956", "message": "add java integration tests", "committedDate": "2020-08-20T18:20:08Z", "type": "commit"}, {"oid": "cc720f941b21ff51c4ecbadc34006a8d6ae736c9", "url": "https://github.com/ls1intum/Artemis/commit/cc720f941b21ff51c4ecbadc34006a8d6ae736c9", "message": "Merge branch 'enhancement/code-editor/refactor-submit-button' of https://github.com/ls1intum/Artemis into enhancement/code-editor/refactor-submit-button", "committedDate": "2020-08-20T18:20:29Z", "type": "commit"}, {"oid": "f4d430395a5d212b94070ec5f974ec68c659ab52", "url": "https://github.com/ls1intum/Artemis/commit/f4d430395a5d212b94070ec5f974ec68c659ab52", "message": "fix tests", "committedDate": "2020-08-20T18:51:04Z", "type": "commit"}, {"oid": "573e37e8b6f6b2860d7eb0ed7468a721396b5a1a", "url": "https://github.com/ls1intum/Artemis/commit/573e37e8b6f6b2860d7eb0ed7468a721396b5a1a", "message": "fix codacy issue", "committedDate": "2020-08-20T18:54:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQ3Mjk5OA==", "url": "https://github.com/ls1intum/Artemis/pull/2017#discussion_r474472998", "bodyText": "Test", "author": "krusche", "createdAt": "2020-08-21T07:33:41Z", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/repository/TestRepositoryResource.java", "diffHunk": "@@ -127,4 +134,52 @@ boolean canAccessRepository(Long exerciseId) {\n     public ResponseEntity<RepositoryStatusDTO> getStatus(@PathVariable Long exerciseId) throws GitAPIException, InterruptedException {\n         return super.getStatus(exerciseId);\n     }\n+\n+    /**\n+     * Update a list of files in a test repository based on the submission's content.\n+     *\n+     * @param exerciseId  of exercise to which the files belong\n+     * @param submissions information about the file updates\n+     * @param commit      whether to commit after updating the files\n+     * @param principal   used to check if the user can update the files\n+     * @return {Map<String, String>} file submissions or the appropriate http error\n+     */\n+    @PutMapping(\"/test-repository/{exerciseId}/files\")\n+    public ResponseEntity<Map<String, String>> updateTestFiles(@PathVariable(\"exerciseId\") Long exerciseId, @RequestBody List<FileSubmission> submissions,\n+            @RequestParam String commit, Principal principal) {\n+        ProgrammingExercise exercise = programmingExerciseService.findWithTemplateParticipationAndSolutionParticipationById(exerciseId);\n+        String testRepoName = exercise.getProjectKey().toLowerCase() + \"-\" + RepositoryType.TESTS.getName();\n+        if (versionControlService.isEmpty()) {\n+            throw new ResponseStatusException(HttpStatus.SERVICE_UNAVAILABLE, \"VCSNotPresent\");\n+        }\n+        VcsRepositoryUrl testsRepoUrl = versionControlService.get().getCloneRepositoryUrl(exercise.getProjectKey(), testRepoName);", "originalCommit": "573e37e8b6f6b2860d7eb0ed7468a721396b5a1a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDUxODY4NA==", "url": "https://github.com/ls1intum/Artemis/pull/2017#discussion_r474518684", "bodyText": "Done", "author": "schultek", "createdAt": "2020-08-21T08:27:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQ3Mjk5OA=="}], "type": "inlineReview"}, {"oid": "4fe2aae1968355bfb53958da34c1817958592923", "url": "https://github.com/ls1intum/Artemis/commit/4fe2aae1968355bfb53958da34c1817958592923", "message": "add integration tests for test repository", "committedDate": "2020-08-21T08:25:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA3NDIyNQ==", "url": "https://github.com/ls1intum/Artemis/pull/2017#discussion_r475074225", "bodyText": "Why do you pass this as a String? I think we should use Boolean instead. Alternatively you could leave it as a string and map it into a Boolean value afterwards", "author": "JonasPetry", "createdAt": "2020-08-22T09:57:48Z", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/repository/RepositoryProgrammingExerciseParticipationResource.java", "diffHunk": "@@ -158,12 +145,13 @@ boolean canAccessRepository(Long participationId) throws IllegalArgumentExceptio\n      *\n      * @param participationId id of participation to which the files belong\n      * @param submissions     information about the file updates\n+     * @param commit          whether to commit after updating the files\n      * @param principal       used to check if the user can update the files\n      * @return {Map<String, String>} file submissions or the appropriate http error\n      */\n     @PutMapping(value = \"/repository/{participationId}/files\")\n     public ResponseEntity<Map<String, String>> updateParticipationFiles(@PathVariable(\"participationId\") Long participationId, @RequestBody List<FileSubmission> submissions,\n-            Principal principal) {\n+            @RequestParam String commit, Principal principal) {", "originalCommit": "4fe2aae1968355bfb53958da34c1817958592923", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTY3NTcyNA==", "url": "https://github.com/ls1intum/Artemis/pull/2017#discussion_r475675724", "bodyText": "Changed it to Boolean", "author": "schultek", "createdAt": "2020-08-24T14:57:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA3NDIyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA3NDI1Mw==", "url": "https://github.com/ls1intum/Artemis/pull/2017#discussion_r475074253", "bodyText": "I would suggest to compare a Boolean here", "author": "JonasPetry", "createdAt": "2020-08-22T09:58:25Z", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/repository/RepositoryProgrammingExerciseParticipationResource.java", "diffHunk": "@@ -208,87 +200,15 @@ boolean canAccessRepository(Long participationId) throws IllegalArgumentExceptio\n             throw new ResponseStatusException(HttpStatus.FORBIDDEN, error.getMessage(), error);\n         }\n         Map<String, String> fileSaveResult = saveFileSubmissions(submissions, repository);\n-        return ResponseEntity.ok(fileSaveResult);\n-    }\n \n-    /**\n-     * Update a list of files in a test repository based on the submission's content.\n-     *\n-     * @param exerciseId  of exercise to which the files belong\n-     * @param submissions information about the file updates\n-     * @param principal   used to check if the user can update the files\n-     * @return {Map<String, String>} file submissions or the appropriate http error\n-     */\n-    @PutMapping(value = \"/test-repository/\" + \"{exerciseId}\" + \"/files\")\n-    public ResponseEntity<Map<String, String>> updateTestFiles(@PathVariable(\"exerciseId\") Long exerciseId, @RequestBody List<FileSubmission> submissions, Principal principal) {\n-        ProgrammingExercise exercise = programmingExerciseService.findWithTemplateParticipationAndSolutionParticipationById(exerciseId);\n-        String testRepoName = exercise.getProjectKey().toLowerCase() + \"-\" + RepositoryType.TESTS.getName();\n-        if (versionControlService.isEmpty()) {\n-            throw new ResponseStatusException(HttpStatus.SERVICE_UNAVAILABLE, \"VCSNotPresent\");\n-        }\n-        VcsRepositoryUrl testsRepoUrl = versionControlService.get().getCloneRepositoryUrl(exercise.getProjectKey(), testRepoName);\n-\n-        Repository repository;\n-        try {\n-            repository = repositoryService.checkoutRepositoryByName(principal, exercise, testsRepoUrl.getURL());\n-        }\n-        catch (IllegalAccessException e) {\n-            FileSubmissionError error = new FileSubmissionError(exerciseId, \"noPermissions\");\n-            throw new ResponseStatusException(HttpStatus.FORBIDDEN, error.getMessage(), error);\n-        }\n-        catch (CheckoutConflictException | WrongRepositoryStateException ex) {\n-            FileSubmissionError error = new FileSubmissionError(exerciseId, \"checkoutConflict\");\n-            throw new ResponseStatusException(HttpStatus.CONFLICT, error.getMessage(), error);\n-        }\n-        catch (GitAPIException | InterruptedException ex) {\n-            FileSubmissionError error = new FileSubmissionError(exerciseId, \"checkoutFailed\");\n-            throw new ResponseStatusException(HttpStatus.SERVICE_UNAVAILABLE, error.getMessage(), error);\n-        }\n-        Map<String, String> fileSaveResult = saveFileSubmissions(submissions, repository);\n-        return ResponseEntity.ok(fileSaveResult);\n-    }\n-\n-    /**\n-     * Iterate through the file submissions and try to save each one. Will continue iterating when an error is encountered on updating a file and store it's error in the resulting\n-     * Map.\n-     *\n-     * @param submissions the file submissions (changes) that should be saved in the repository\n-     * @param repository the git repository in which the file changes should be saved\n-     * @return a map of <filename, error | null>\n-     */\n-    private Map<String, String> saveFileSubmissions(List<FileSubmission> submissions, Repository repository) {\n-        // If updating the file fails due to an IOException, we send an error message for the specific file and try to update the rest\n-        Map<String, String> fileSaveResult = new HashMap<>();\n-        submissions.forEach((submission) -> {\n-            try {\n-                fetchAndUpdateFile(submission, repository);\n-                fileSaveResult.put(submission.getFileName(), null);\n-            }\n-            catch (IOException ex) {\n-                fileSaveResult.put(submission.getFileName(), ex.getMessage());\n+        if (\"true\".equals(commit)) {", "originalCommit": "4fe2aae1968355bfb53958da34c1817958592923", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTY3NTk3NA==", "url": "https://github.com/ls1intum/Artemis/pull/2017#discussion_r475675974", "bodyText": "Done", "author": "schultek", "createdAt": "2020-08-24T14:57:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA3NDI1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA3NDM5NA==", "url": "https://github.com/ls1intum/Artemis/pull/2017#discussion_r475074394", "bodyText": "See above", "author": "JonasPetry", "createdAt": "2020-08-22T10:00:14Z", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/repository/TestRepositoryResource.java", "diffHunk": "@@ -127,4 +132,51 @@ boolean canAccessRepository(Long exerciseId) {\n     public ResponseEntity<RepositoryStatusDTO> getStatus(@PathVariable Long exerciseId) throws GitAPIException, InterruptedException {\n         return super.getStatus(exerciseId);\n     }\n+\n+    /**\n+     * Update a list of files in a test repository based on the submission's content.\n+     *\n+     * @param exerciseId  of exercise to which the files belong\n+     * @param submissions information about the file updates\n+     * @param commit      whether to commit after updating the files\n+     * @param principal   used to check if the user can update the files\n+     * @return {Map<String, String>} file submissions or the appropriate http error\n+     */\n+    @PutMapping(\"/test-repository/{exerciseId}/files\")\n+    public ResponseEntity<Map<String, String>> updateTestFiles(@PathVariable(\"exerciseId\") Long exerciseId, @RequestBody List<FileSubmission> submissions,\n+            @RequestParam String commit, Principal principal) {\n+        ProgrammingExercise exercise = programmingExerciseService.findWithTemplateParticipationAndSolutionParticipationById(exerciseId);\n+\n+        if (versionControlService.isEmpty()) {\n+            throw new ResponseStatusException(HttpStatus.SERVICE_UNAVAILABLE, \"VCSNotPresent\");\n+        }\n+\n+        Repository repository;\n+        try {\n+            repository = repositoryService.checkoutRepositoryByName(principal, exercise, exercise.getTestRepositoryUrlAsUrl());\n+        }\n+        catch (IllegalAccessException e) {\n+            FileSubmissionError error = new FileSubmissionError(exerciseId, \"noPermissions\");\n+            throw new ResponseStatusException(HttpStatus.FORBIDDEN, error.getMessage(), error);\n+        }\n+        catch (CheckoutConflictException | WrongRepositoryStateException ex) {\n+            FileSubmissionError error = new FileSubmissionError(exerciseId, \"checkoutConflict\");\n+            throw new ResponseStatusException(HttpStatus.CONFLICT, error.getMessage(), error);\n+        }\n+        catch (GitAPIException | InterruptedException ex) {\n+            FileSubmissionError error = new FileSubmissionError(exerciseId, \"checkoutFailed\");\n+            throw new ResponseStatusException(HttpStatus.SERVICE_UNAVAILABLE, error.getMessage(), error);\n+        }\n+        Map<String, String> fileSaveResult = saveFileSubmissions(submissions, repository);\n+\n+        if (\"true\".equals(commit)) {", "originalCommit": "4fe2aae1968355bfb53958da34c1817958592923", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTY3NjA0Nw==", "url": "https://github.com/ls1intum/Artemis/pull/2017#discussion_r475676047", "bodyText": "Done", "author": "schultek", "createdAt": "2020-08-24T14:57:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA3NDM5NA=="}], "type": "inlineReview"}, {"oid": "a4ffb17e023d2257586c4efd90a27054fce8d0a5", "url": "https://github.com/ls1intum/Artemis/commit/a4ffb17e023d2257586c4efd90a27054fce8d0a5", "message": "change boolean mapping", "committedDate": "2020-08-24T14:16:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTcxOTM1OQ==", "url": "https://github.com/ls1intum/Artemis/pull/2017#discussion_r475719359", "bodyText": "I would suggest to use\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    InputStream inputStream = new ByteArrayInputStream(submission.getFileContent().getBytes(StandardCharsets.UTF_8));\n          \n          \n            \n                    Files.copy(inputStream, file.get().toPath(), StandardCopyOption.REPLACE_EXISTING);\n          \n          \n            \n                    inputStream.close();\n          \n          \n            \n                    Files.writeString(file.get().toPath(), submission.getFileContent());\n          \n      \n    \n    \n  \n\nunless we have a good reason to use copy here (we should add a comment then).", "author": "MaisiKoleni", "createdAt": "2020-08-24T15:56:52Z", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/repository/RepositoryResource.java", "diffHunk": "@@ -302,4 +315,47 @@ abstract Repository getRepository(Long domainId, RepositoryActionType repository\n         }\n         return responseEntitySuccess;\n     }\n+\n+    /**\n+     * Iterate through the file submissions and try to save each one. Will continue iterating when an error is encountered on updating a file and store it's error in the resulting\n+     * Map.\n+     *\n+     * @param submissions the file submissions (changes) that should be saved in the repository\n+     * @param repository the git repository in which the file changes should be saved\n+     * @return a map of <filename, error | null>\n+     */\n+    protected Map<String, String> saveFileSubmissions(List<FileSubmission> submissions, Repository repository) {\n+        // If updating the file fails due to an IOException, we send an error message for the specific file and try to update the rest\n+        Map<String, String> fileSaveResult = new HashMap<>();\n+        submissions.forEach((submission) -> {\n+            try {\n+                fetchAndUpdateFile(submission, repository);\n+                fileSaveResult.put(submission.getFileName(), null);\n+            }\n+            catch (IOException ex) {\n+                fileSaveResult.put(submission.getFileName(), ex.getMessage());\n+            }\n+        });\n+        return fileSaveResult;\n+    }\n+\n+    /**\n+     * Retrieve the file from repository and update its content with the submission's content. Throws exceptions if the user doesn't have permissions, the file can't be retrieved\n+     * or it can't be updated.\n+     *\n+     * @param submission information about file update\n+     * @param repository repository in which to fetch and update the file\n+     * @throws IOException exception when the file in the file submission parameter is empty\n+     */\n+    private void fetchAndUpdateFile(FileSubmission submission, Repository repository) throws IOException {\n+        Optional<File> file = gitService.getFileByName(repository, submission.getFileName());\n+\n+        if (file.isEmpty()) {\n+            throw new IOException(\"File could not be found.\");\n+        }\n+\n+        InputStream inputStream = new ByteArrayInputStream(submission.getFileContent().getBytes(StandardCharsets.UTF_8));\n+        Files.copy(inputStream, file.get().toPath(), StandardCopyOption.REPLACE_EXISTING);\n+        inputStream.close();", "originalCommit": "a4ffb17e023d2257586c4efd90a27054fce8d0a5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTczOTc1NQ==", "url": "https://github.com/ls1intum/Artemis/pull/2017#discussion_r475739755", "bodyText": "I haven't changed or written this code. Since this is unrelated to this pr, I'm gonna close this.", "author": "schultek", "createdAt": "2020-08-24T16:29:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTcxOTM1OQ=="}], "type": "inlineReview"}, {"oid": "e53d617be14fe56ed11eed4182bf7c76b4e97a00", "url": "https://github.com/ls1intum/Artemis/commit/e53d617be14fe56ed11eed4182bf7c76b4e97a00", "message": "Merge branch 'develop' into enhancement/code-editor/refactor-submit-button", "committedDate": "2020-08-24T21:25:48Z", "type": "commit"}]}