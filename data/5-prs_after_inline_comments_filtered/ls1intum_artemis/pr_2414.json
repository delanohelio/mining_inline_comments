{"pr_number": 2414, "pr_title": "[Feature] Update Template on Import", "pr_createdAt": "2020-11-17T01:49:40Z", "pr_url": "https://github.com/ls1intum/Artemis/pull/2414", "timeline": [{"oid": "1ea7b66538bd061f7be8219379e957214cee839b", "url": "https://github.com/ls1intum/Artemis/commit/1ea7b66538bd061f7be8219379e957214cee839b", "message": "First attempt", "committedDate": "2020-11-10T21:05:31Z", "type": "commit"}, {"oid": "08a9f64415b8873030d1ed472c8a4b3277cffd0e", "url": "https://github.com/ls1intum/Artemis/commit/08a9f64415b8873030d1ed472c8a4b3277cffd0e", "message": "Use comments and placeholders to have a valid test pom for easy reading.", "committedDate": "2020-11-14T02:15:27Z", "type": "commit"}, {"oid": "942433927fabfb5c863235112fc9f3eb671c844d", "url": "https://github.com/ls1intum/Artemis/commit/942433927fabfb5c863235112fc9f3eb671c844d", "message": "Use strategy pattern for import service", "committedDate": "2020-11-14T02:17:33Z", "type": "commit"}, {"oid": "066a3ff23f3d135d246ed4b3a37d4c52598e79b8", "url": "https://github.com/ls1intum/Artemis/commit/066a3ff23f3d135d246ed4b3a37d4c52598e79b8", "message": "Add maven model dep", "committedDate": "2020-11-14T02:20:22Z", "type": "commit"}, {"oid": "dadc7211604cc1f942e750b2f1a03b82ff3e632d", "url": "https://github.com/ls1intum/Artemis/commit/dadc7211604cc1f942e750b2f1a03b82ff3e632d", "message": "Merge remote-tracking branch 'origin/develop' into feature/upgrade-repos", "committedDate": "2020-11-14T02:23:40Z", "type": "commit"}, {"oid": "8ffadac5ad8113e0153649ccd454f94d39a765ce", "url": "https://github.com/ls1intum/Artemis/commit/8ffadac5ad8113e0153649ccd454f94d39a765ce", "message": "Use the update service", "committedDate": "2020-11-14T02:41:07Z", "type": "commit"}, {"oid": "a912f6efd96924ffb8b848a110ad977c9ed3f93d", "url": "https://github.com/ls1intum/Artemis/commit/a912f6efd96924ffb8b848a110ad977c9ed3f93d", "message": "Add checkbox to import dialog", "committedDate": "2020-11-14T03:10:18Z", "type": "commit"}, {"oid": "fa5a03552fface511e3ab08170c0b3878a2e8d82", "url": "https://github.com/ls1intum/Artemis/commit/fa5a03552fface511e3ab08170c0b3878a2e8d82", "message": "Only replace with Ares if it doesn't already exist", "committedDate": "2020-11-15T00:16:03Z", "type": "commit"}, {"oid": "d2a84cbd1504c8745d00c42217bf849d54f27933", "url": "https://github.com/ls1intum/Artemis/commit/d2a84cbd1504c8745d00c42217bf849d54f27933", "message": "Commit template", "committedDate": "2020-11-15T02:33:27Z", "type": "commit"}, {"oid": "8eee2c92bb1f8d9e5ebaee9b3f87232914c61ea6", "url": "https://github.com/ls1intum/Artemis/commit/8eee2c92bb1f8d9e5ebaee9b3f87232914c61ea6", "message": "Fix path", "committedDate": "2020-11-15T15:14:47Z", "type": "commit"}, {"oid": "cc00740166ab5dc8af3f06da38cc4828d1f0b50d", "url": "https://github.com/ls1intum/Artemis/commit/cc00740166ab5dc8af3f06da38cc4828d1f0b50d", "message": "Fix wrong dependency typr", "committedDate": "2020-11-15T15:44:50Z", "type": "commit"}, {"oid": "7d69281136dc32f128f9e7269eb816de107bb496", "url": "https://github.com/ls1intum/Artemis/commit/7d69281136dc32f128f9e7269eb816de107bb496", "message": "Fix wrong dep type", "committedDate": "2020-11-15T16:17:04Z", "type": "commit"}, {"oid": "dc0ca75ba0189d67ca0c6c35e1c0999f0b064a8c", "url": "https://github.com/ls1intum/Artemis/commit/dc0ca75ba0189d67ca0c6c35e1c0999f0b064a8c", "message": "Remove legacy dependencies", "committedDate": "2020-11-15T17:02:20Z", "type": "commit"}, {"oid": "e50110d5ec1ed5e9e597d91466d9b7b470a14e6e", "url": "https://github.com/ls1intum/Artemis/commit/e50110d5ec1ed5e9e597d91466d9b7b470a14e6e", "message": "Merge branch 'develop' into feature/upgrade-repos", "committedDate": "2020-11-20T16:38:10Z", "type": "commit"}, {"oid": "801c4b4df8f06a2163f4a01db69712ce70a420e9", "url": "https://github.com/ls1intum/Artemis/commit/801c4b4df8f06a2163f4a01db69712ce70a420e9", "message": "Rename to template upgrade", "committedDate": "2020-11-20T16:56:49Z", "type": "commit"}, {"oid": "56de967b0e015ae91e0f7099e488f419178fe777", "url": "https://github.com/ls1intum/Artemis/commit/56de967b0e015ae91e0f7099e488f419178fe777", "message": "Add documentation", "committedDate": "2020-11-20T17:02:30Z", "type": "commit"}, {"oid": "89b6ff65c288316864ca7b2c2f6f22a9f49db1a6", "url": "https://github.com/ls1intum/Artemis/commit/89b6ff65c288316864ca7b2c2f6f22a9f49db1a6", "message": "Improve error handling", "committedDate": "2020-11-20T18:37:06Z", "type": "commit"}, {"oid": "096cef02644639095f405eba021f9e6b9dcb68a1", "url": "https://github.com/ls1intum/Artemis/commit/096cef02644639095f405eba021f9e6b9dcb68a1", "message": "Remove Kotlin", "committedDate": "2020-11-20T19:16:25Z", "type": "commit"}, {"oid": "679203480fa88f8374aee105befe287fd156aaa7", "url": "https://github.com/ls1intum/Artemis/commit/679203480fa88f8374aee105befe287fd156aaa7", "message": "Refactor retrieval of repository url for type", "committedDate": "2020-11-20T19:28:03Z", "type": "commit"}, {"oid": "964109593a0d6dcb3d1f01ffcd58d9a6f559ef60", "url": "https://github.com/ls1intum/Artemis/commit/964109593a0d6dcb3d1f01ffcd58d9a6f559ef60", "message": "Use interface instead of class", "committedDate": "2020-11-20T19:31:28Z", "type": "commit"}, {"oid": "9665d8e1fe31bb2f616ec5b0ab28e0c574e74f28", "url": "https://github.com/ls1intum/Artemis/commit/9665d8e1fe31bb2f616ec5b0ab28e0c574e74f28", "message": "Add override for Javadoc", "committedDate": "2020-11-20T19:48:12Z", "type": "commit"}, {"oid": "b1f55a73b0eb46f99a8db0ee9ffd6368eddc018d", "url": "https://github.com/ls1intum/Artemis/commit/b1f55a73b0eb46f99a8db0ee9ffd6368eddc018d", "message": "Merge branch 'develop' into feature/upgrade-repos", "committedDate": "2020-11-20T19:48:58Z", "type": "commit"}, {"oid": "f04209b14d09f24a63ff5331c35752edbb588dc2", "url": "https://github.com/ls1intum/Artemis/commit/f04209b14d09f24a63ff5331c35752edbb588dc2", "message": "Do use InputStream directly", "committedDate": "2020-11-20T20:10:05Z", "type": "commit"}, {"oid": "6af4431f41a10dd82b27457a2abcf91774ec3b09", "url": "https://github.com/ls1intum/Artemis/commit/6af4431f41a10dd82b27457a2abcf91774ec3b09", "message": "Merge branch 'feature/upgrade-repos' of https://github.com/ls1intum/Artemis into feature/upgrade-repos", "committedDate": "2020-11-20T20:11:01Z", "type": "commit"}, {"oid": "8e59dcc1fd56d4412a5068e8729354758c0b4e48", "url": "https://github.com/ls1intum/Artemis/commit/8e59dcc1fd56d4412a5068e8729354758c0b4e48", "message": "Codacy issues", "committedDate": "2020-11-20T20:20:04Z", "type": "commit"}, {"oid": "e14d2981f9d7b2a2edb1349f313bb8edfe177a39", "url": "https://github.com/ls1intum/Artemis/commit/e14d2981f9d7b2a2edb1349f313bb8edfe177a39", "message": "Adjust maven template sections", "committedDate": "2020-11-20T23:18:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI0MDAwNQ==", "url": "https://github.com/ls1intum/Artemis/pull/2414#discussion_r528240005", "bodyText": "This should remove the dependencies also from the TEST repo right?", "author": "fde312", "createdAt": "2020-11-21T20:36:17Z", "path": "src/main/java/de/tum/in/www1/artemis/service/programming/JavaTemplateUpgradeService.java", "diffHunk": "@@ -0,0 +1,217 @@\n+package de.tum.in.www1.artemis.service.programming;\n+\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.function.Predicate;\n+import java.util.stream.Collectors;\n+\n+import org.apache.maven.model.Dependency;\n+import org.apache.maven.model.Model;\n+import org.apache.maven.model.Plugin;\n+import org.apache.maven.model.io.xpp3.MavenXpp3Reader;\n+import org.apache.maven.model.io.xpp3.MavenXpp3Writer;\n+import org.codehaus.plexus.util.xml.pull.XmlPullParserException;\n+import org.eclipse.jgit.api.errors.GitAPIException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.core.io.Resource;\n+import org.springframework.stereotype.Service;\n+\n+import de.tum.in.www1.artemis.ResourceLoaderService;\n+import de.tum.in.www1.artemis.domain.ProgrammingExercise;\n+import de.tum.in.www1.artemis.domain.Repository;\n+import de.tum.in.www1.artemis.domain.enumeration.RepositoryType;\n+import de.tum.in.www1.artemis.service.ProgrammingExerciseService;\n+import de.tum.in.www1.artemis.service.UserService;\n+import de.tum.in.www1.artemis.service.connectors.GitService;\n+\n+/**\n+ * Service for upgrading of Java template files\n+ */\n+@Service\n+public class JavaTemplateUpgradeService implements TemplateUpgradeService {\n+\n+    private final Logger log = LoggerFactory.getLogger(JavaTemplateUpgradeService.class);\n+\n+    private final ProgrammingExerciseService programmingExerciseService;\n+\n+    private final GitService gitService;\n+\n+    private final UserService userService;\n+\n+    private final ResourceLoaderService resourceLoaderService;\n+\n+    public JavaTemplateUpgradeService(ProgrammingExerciseService programmingExerciseService, GitService gitService, ResourceLoaderService resourceLoaderService,\n+            UserService userService) {\n+        this.programmingExerciseService = programmingExerciseService;\n+        this.gitService = gitService;\n+        this.userService = userService;\n+        this.resourceLoaderService = resourceLoaderService;\n+    }\n+\n+    @Override\n+    public void upgradeTemplate(ProgrammingExercise exercise) {\n+        // TODO: Support sequential test runs\n+        if (exercise.hasSequentialTestRuns()) {\n+            return;\n+        }\n+        // Template and solution repository can also contain a project object model for some project types\n+        updateRepository(exercise, RepositoryType.TEMPLATE.getName(), RepositoryType.TEMPLATE);\n+        updateRepository(exercise, RepositoryType.SOLUTION.getName(), RepositoryType.SOLUTION);\n+        updateRepository(exercise, \"test/projectTemplate\", RepositoryType.TESTS);\n+    }\n+\n+    /**\n+     * Upgrades the template files of a specific Java or Kotlin repository. Prefers project type specific templates as the\n+     * reference. The method updates the project object models (pom) in the target repository with the pom of the latest\n+     * Artemis template.\n+     *\n+     * @param exercise The exercise for the the template files should be updated\n+     * @param templateFolder The folder containing the latest reference template\n+     * @param repositoryType The type of repository to be updated\n+     */\n+    private void updateRepository(ProgrammingExercise exercise, String templateFolder, RepositoryType repositoryType) {\n+        try {\n+            // Get general template poms\n+            String programmingLanguageTemplate = programmingExerciseService.getProgrammingLanguageTemplatePath(exercise.getProgrammingLanguage());\n+            String templatePomPath = programmingLanguageTemplate + \"/\" + templateFolder + \"/**/pom.xml\";\n+\n+            Resource[] templatePoms = resourceLoaderService.getResources(templatePomPath);\n+\n+            // Get project type specific template poms\n+            if (exercise.getProjectType() != null) {\n+                String projectTypeTemplate = programmingExerciseService.getProgrammingLanguageProjectTypePath(exercise.getProgrammingLanguage(), exercise.getProjectType());\n+                String projectTypePomPath = projectTypeTemplate + \"/\" + templateFolder + \"/**/pom.xml\";\n+\n+                Resource[] projectTypePoms = resourceLoaderService.getResources(projectTypePomPath);\n+\n+                // Prefer project type specific poms\n+                templatePoms = projectTypePoms.length > 0 ? projectTypePoms : templatePoms;\n+            }\n+\n+            Repository repository = gitService.getOrCheckoutRepository(exercise.getRepositoryURL(repositoryType), true);\n+            List<File> repositoryPoms = gitService.listFiles(repository).stream().filter(file -> \"pom.xml\".equals(file.getName())).collect(Collectors.toList());\n+\n+            // Validate that template and repository have the same number of pom.xml files, otherwise no upgrade will take place\n+            // TODO: Improve matching of repository and template poms, support sequential test runs\n+            if (templatePoms.length == 1 && repositoryPoms.size() == 1) {\n+                Model updatedRepoModel = upgradeProjectObjectModel(templatePoms[0], repositoryPoms.get(0));\n+                writeProjectObjectModel(updatedRepoModel, repositoryPoms.get(0));\n+                programmingExerciseService.commitAndPushRepository(repository, \"Template upgraded by Artemis\", userService.getUser());\n+            }\n+        }\n+        catch (IOException | GitAPIException | InterruptedException | XmlPullParserException exception) {\n+            log.error(\"Updating of template files of repository \" + repositoryType.name() + \" for exercise \" + exercise.getId() + \" failed with error\" + exception.getMessage());\n+            // Rollback local changes in case of errors\n+            gitService.deleteLocalRepository(exercise.getRepositoryURL(repositoryType));\n+        }\n+    }\n+\n+    private void writeProjectObjectModel(Model repositoryModel, File repositoryPom) throws IOException {\n+        try (OutputStream outputStream = new FileOutputStream(repositoryPom)) {\n+            var pomWriter = new MavenXpp3Writer();\n+            pomWriter.write(outputStream, repositoryModel);\n+        }\n+    }\n+\n+    private Model upgradeProjectObjectModel(Resource templatePom, File repositoryPom) throws IOException, XmlPullParserException {\n+        try (InputStream templateInput = templatePom.getInputStream(); InputStream repoInput = new FileInputStream(repositoryPom)) {\n+\n+            var pomReader = new MavenXpp3Reader();\n+            Model templateModel = pomReader.read(templateInput);\n+            Model repoModel = pomReader.read(repoInput);\n+\n+            // Update all dependencies found in the repository pom with version found in the template\n+            updateDependencies(repoModel, templateModel);\n+\n+            // Update Maven Compiler Plugin with JDK version, Maven Surefire Plugin and Maven Failsafe Plugin by replacing them with template plugins\n+            upgradePlugin(repoModel, templateModel, \"org.apache.maven.plugins\", \"maven-compiler-plugin\");\n+            upgradePlugin(repoModel, templateModel, \"org.apache.maven.plugins\", \"maven-surefire-plugin\");\n+            upgradePlugin(repoModel, templateModel, \"org.apache.maven.plugins\", \"maven-failsafe-plugin\");\n+\n+            // Replace JUnit4 with AJTS\n+            removeDependency(repoModel, \"junit\", \"junit\");\n+            addDependency(repoModel, templateModel, \"de.tum.in.ase\", \"artemis-java-test-sandbox\");\n+\n+            // Remove legacy dependencies which are no longer needed or were moved to AJTS\n+            removeDependency(repoModel, \"org.json\", \"json\");", "originalCommit": "e14d2981f9d7b2a2edb1349f313bb8edfe177a39", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI0MDgxMQ==", "url": "https://github.com/ls1intum/Artemis/pull/2414#discussion_r528240811", "bodyText": "org.json:json should be always deleted for all repository types.", "author": "kloessst", "createdAt": "2020-11-21T20:45:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI0MDAwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI0MDQyNA==", "url": "https://github.com/ls1intum/Artemis/pull/2414#discussion_r528240424", "bodyText": "why are we not using here RepositoryType.TEST.getName()? Could you add a comment?", "author": "fde312", "createdAt": "2020-11-21T20:40:27Z", "path": "src/main/java/de/tum/in/www1/artemis/service/programming/JavaTemplateUpgradeService.java", "diffHunk": "@@ -0,0 +1,217 @@\n+package de.tum.in.www1.artemis.service.programming;\n+\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.function.Predicate;\n+import java.util.stream.Collectors;\n+\n+import org.apache.maven.model.Dependency;\n+import org.apache.maven.model.Model;\n+import org.apache.maven.model.Plugin;\n+import org.apache.maven.model.io.xpp3.MavenXpp3Reader;\n+import org.apache.maven.model.io.xpp3.MavenXpp3Writer;\n+import org.codehaus.plexus.util.xml.pull.XmlPullParserException;\n+import org.eclipse.jgit.api.errors.GitAPIException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.core.io.Resource;\n+import org.springframework.stereotype.Service;\n+\n+import de.tum.in.www1.artemis.ResourceLoaderService;\n+import de.tum.in.www1.artemis.domain.ProgrammingExercise;\n+import de.tum.in.www1.artemis.domain.Repository;\n+import de.tum.in.www1.artemis.domain.enumeration.RepositoryType;\n+import de.tum.in.www1.artemis.service.ProgrammingExerciseService;\n+import de.tum.in.www1.artemis.service.UserService;\n+import de.tum.in.www1.artemis.service.connectors.GitService;\n+\n+/**\n+ * Service for upgrading of Java template files\n+ */\n+@Service\n+public class JavaTemplateUpgradeService implements TemplateUpgradeService {\n+\n+    private final Logger log = LoggerFactory.getLogger(JavaTemplateUpgradeService.class);\n+\n+    private final ProgrammingExerciseService programmingExerciseService;\n+\n+    private final GitService gitService;\n+\n+    private final UserService userService;\n+\n+    private final ResourceLoaderService resourceLoaderService;\n+\n+    public JavaTemplateUpgradeService(ProgrammingExerciseService programmingExerciseService, GitService gitService, ResourceLoaderService resourceLoaderService,\n+            UserService userService) {\n+        this.programmingExerciseService = programmingExerciseService;\n+        this.gitService = gitService;\n+        this.userService = userService;\n+        this.resourceLoaderService = resourceLoaderService;\n+    }\n+\n+    @Override\n+    public void upgradeTemplate(ProgrammingExercise exercise) {\n+        // TODO: Support sequential test runs\n+        if (exercise.hasSequentialTestRuns()) {\n+            return;\n+        }\n+        // Template and solution repository can also contain a project object model for some project types\n+        updateRepository(exercise, RepositoryType.TEMPLATE.getName(), RepositoryType.TEMPLATE);\n+        updateRepository(exercise, RepositoryType.SOLUTION.getName(), RepositoryType.SOLUTION);\n+        updateRepository(exercise, \"test/projectTemplate\", RepositoryType.TESTS);", "originalCommit": "e14d2981f9d7b2a2edb1349f313bb8edfe177a39", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI0MTI1NA==", "url": "https://github.com/ls1intum/Artemis/pull/2414#discussion_r528241254", "bodyText": "RepositoryType.Test.getName() -> \"tests\". So it doesn't correspond to the folder structure of the templates. The other reason is that tests/ contains two pom.xml. One is used for sequential tests only. As this isn't supported now I use the more specific path to the right pom. I'm already working on a follow up which restructures the code slightly, so I don't want to add a comment for this.", "author": "kloessst", "createdAt": "2020-11-21T20:49:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI0MDQyNA=="}], "type": "inlineReview"}, {"oid": "48149003978efb83354c224ca88e47b958e75db3", "url": "https://github.com/ls1intum/Artemis/commit/48149003978efb83354c224ca88e47b958e75db3", "message": "Merge branch 'develop' into feature/upgrade-repos", "committedDate": "2020-11-23T12:34:47Z", "type": "commit"}]}