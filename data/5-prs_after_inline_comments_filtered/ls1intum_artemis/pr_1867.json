{"pr_number": 1867, "pr_title": "Submit StudentExam after Exam ended", "pr_createdAt": "2020-07-12T10:45:46Z", "pr_url": "https://github.com/ls1intum/Artemis/pull/1867", "timeline": [{"oid": "a51f4f74ff889c81f1154069dcdaa76f5faa34cb", "url": "https://github.com/ls1intum/Artemis/commit/a51f4f74ff889c81f1154069dcdaa76f5faa34cb", "message": "add grace period to student exams -> time in which the students can submit their exam, even after official working time - this is to distribute the final submissions of exams over a period of time", "committedDate": "2020-07-12T08:49:42Z", "type": "commit"}, {"oid": "7b1f1efd5907aedd41bb9dc6ded6927fe399cfb5", "url": "https://github.com/ls1intum/Artemis/commit/7b1f1efd5907aedd41bb9dc6ded6927fe399cfb5", "message": "include migration\nmove grace_period from StudentExam to Exam", "committedDate": "2020-07-12T09:26:24Z", "type": "commit"}, {"oid": "5b8003a196869eb91942c4e17c55bc0037d870d2", "url": "https://github.com/ls1intum/Artemis/commit/5b8003a196869eb91942c4e17c55bc0037d870d2", "message": "add client logic to submit StudentExam\nshow summary only if studentExam is submitted", "committedDate": "2020-07-12T10:35:21Z", "type": "commit"}, {"oid": "333f2718dc79ea89f3278fe125806e990677496f", "url": "https://github.com/ls1intum/Artemis/commit/333f2718dc79ea89f3278fe125806e990677496f", "message": "extract timer component", "committedDate": "2020-07-12T12:58:45Z", "type": "commit"}, {"oid": "d676170f6557d1fa8526cc666fd81cb3f3b9da3d", "url": "https://github.com/ls1intum/Artemis/commit/d676170f6557d1fa8526cc666fd81cb3f3b9da3d", "message": "show timer for grace period on end page", "committedDate": "2020-07-12T13:30:39Z", "type": "commit"}, {"oid": "afeb167924e2422bf649a16d014cc1ef9f2a5b1b", "url": "https://github.com/ls1intum/Artemis/commit/afeb167924e2422bf649a16d014cc1ef9f2a5b1b", "message": "correct display of timer in exam-participation-cover.component.html", "committedDate": "2020-07-12T13:58:16Z", "type": "commit"}, {"oid": "bc59c65134a95cd7673495beb33b34ee8012d638", "url": "https://github.com/ls1intum/Artemis/commit/bc59c65134a95cd7673495beb33b34ee8012d638", "message": "remove studentExamId from URL -> no longer needed", "committedDate": "2020-07-12T14:18:31Z", "type": "commit"}, {"oid": "eb76467242cee2c16e3cd903f8adada36b37c28d", "url": "https://github.com/ls1intum/Artemis/commit/eb76467242cee2c16e3cd903f8adada36b37c28d", "message": "submit quiz, text and modeling exercises on exam end", "committedDate": "2020-07-12T18:22:10Z", "type": "commit"}, {"oid": "ba6cc0bfad17e50310ccce03ba5175387097e52d", "url": "https://github.com/ls1intum/Artemis/commit/ba6cc0bfad17e50310ccce03ba5175387097e52d", "message": "use individual submission date if set, otherwise use exam endDate", "committedDate": "2020-07-12T18:47:38Z", "type": "commit"}, {"oid": "b7b220d8ece85b1f207aef6b7361dcb7f7a9effa", "url": "https://github.com/ls1intum/Artemis/commit/b7b220d8ece85b1f207aef6b7361dcb7f7a9effa", "message": "remove TODO -> @PreAuthorize should be correct", "committedDate": "2020-07-12T18:54:37Z", "type": "commit"}, {"oid": "a9d4c6214b760345c624c7353b87085c572d5c54", "url": "https://github.com/ls1intum/Artemis/commit/a9d4c6214b760345c624c7353b87085c572d5c54", "message": "timer stops at 0", "committedDate": "2020-07-12T19:01:22Z", "type": "commit"}, {"oid": "7fc6f8e8b520b0aa43014bdb92d024ace4ed3c94", "url": "https://github.com/ls1intum/Artemis/commit/7fc6f8e8b520b0aa43014bdb92d024ace4ed3c94", "message": "remove unnecessary param, add java doc", "committedDate": "2020-07-12T19:07:52Z", "type": "commit"}, {"oid": "8cdc4d0feb74734173848556e9b5b6980f436177", "url": "https://github.com/ls1intum/Artemis/commit/8cdc4d0feb74734173848556e9b5b6980f436177", "message": "add js doc", "committedDate": "2020-07-12T19:11:28Z", "type": "commit"}, {"oid": "8f3acd7e7af15daf1b2e917c538daa4eec85380e", "url": "https://github.com/ls1intum/Artemis/commit/8f3acd7e7af15daf1b2e917c538daa4eec85380e", "message": "reformat html and disable start button while waiting for exam start", "committedDate": "2020-07-12T19:14:56Z", "type": "commit"}, {"oid": "a59e95e87f95c9ed4436fe26576138ca3870e617", "url": "https://github.com/ls1intum/Artemis/commit/a59e95e87f95c9ed4436fe26576138ca3870e617", "message": "Merge branch 'develop' into feature/exam/track-submission-status", "committedDate": "2020-07-12T19:57:19Z", "type": "commit"}, {"oid": "0c63ba84fcd0cd1389a888ee8e8a1f248c0d90d7", "url": "https://github.com/ls1intum/Artemis/commit/0c63ba84fcd0cd1389a888ee8e8a1f248c0d90d7", "message": "add exam title on end view\nfix quiz submissions", "committedDate": "2020-07-12T21:09:40Z", "type": "commit"}, {"oid": "f4278319e3293814c2ce9afcf326eb11a8f15122", "url": "https://github.com/ls1intum/Artemis/commit/f4278319e3293814c2ce9afcf326eb11a8f15122", "message": "Merge remote-tracking branch 'origin/feature/exam/track-submission-status' into feature/exam/track-submission-status", "committedDate": "2020-07-12T21:09:59Z", "type": "commit"}, {"oid": "753b73d96417674c0e11f452b4cb1b67366f0596", "url": "https://github.com/ls1intum/Artemis/commit/753b73d96417674c0e11f452b4cb1b67366f0596", "message": "missed import", "committedDate": "2020-07-12T21:16:47Z", "type": "commit"}, {"oid": "3d8cc72a587df92941ecdd24a30891c4acf45c2b", "url": "https://github.com/ls1intum/Artemis/commit/3d8cc72a587df92941ecdd24a30891c4acf45c2b", "message": "fix layouting on end page", "committedDate": "2020-07-12T21:47:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUwMjU4MA==", "url": "https://github.com/ls1intum/Artemis/pull/1867#discussion_r453502580", "bodyText": "we should use forbidden(...) here", "author": "krusche", "createdAt": "2020-07-13T09:04:16Z", "path": "src/main/java/de/tum/in/www1/artemis/service/StudentExamService.java", "diffHunk": "@@ -67,6 +88,65 @@ public StudentExam findOneWithExercisesByUserIdAndExamId(Long userId, Long examI\n         return studentExamRepository.findWithExercisesByUserIdAndExamId(userId, examId);\n     }\n \n+    /**\n+     * submit StudentExam and uses submissions as final submissions if studentExam is not yet submitted\n+     * and if it was submitted after exam startDate and before individual endDate + gracePeriod\n+     *\n+     * @param studentExam latest studentExam object which will be submitted (final submission)\n+     */\n+    public void submitStudentExam(StudentExam studentExam) {\n+        log.debug(\"Submit student exam with id {}\", studentExam.getId());\n+        // checks if student exam is already marked as submitted\n+        if (studentExam.isSubmitted()) {\n+            throw new IllegalStateException(\"StudentExam is already marked as submitted\");\n+        }\n+\n+        // gets individual exam end or exam.endDate if individual cannot be calculated\n+        ZonedDateTime examEndDate = studentExam.getExam().getStartDate() != null && studentExam.getWorkingTime() != null\n+                ? studentExam.getExam().getStartDate().plusSeconds(studentExam.getWorkingTime())\n+                : studentExam.getExam().getEndDate();\n+\n+        // checks if student exam is live (after start date, before end date + grace period)\n+        if ((studentExam.getExam().getStartDate() != null && !ZonedDateTime.now().isAfter(studentExam.getExam().getStartDate()))\n+                || (examEndDate != null && !(ZonedDateTime.now().isBefore(examEndDate.plusSeconds(studentExam.getExam().getGracePeriod()))))) {\n+            throw new IllegalStateException(\"StudentExam cannot be marked as submitted, because it is not invoked between start and end of exam\");", "originalCommit": "3d8cc72a587df92941ecdd24a30891c4acf45c2b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUwMzMzMA==", "url": "https://github.com/ls1intum/Artemis/pull/1867#discussion_r453503330", "bodyText": "Security: we should double check that the user is owner of the participation so that no wrong data can be injected over REST here", "author": "krusche", "createdAt": "2020-07-13T09:05:28Z", "path": "src/main/java/de/tum/in/www1/artemis/service/StudentExamService.java", "diffHunk": "@@ -67,6 +88,65 @@ public StudentExam findOneWithExercisesByUserIdAndExamId(Long userId, Long examI\n         return studentExamRepository.findWithExercisesByUserIdAndExamId(userId, examId);\n     }\n \n+    /**\n+     * submit StudentExam and uses submissions as final submissions if studentExam is not yet submitted\n+     * and if it was submitted after exam startDate and before individual endDate + gracePeriod\n+     *\n+     * @param studentExam latest studentExam object which will be submitted (final submission)\n+     */\n+    public void submitStudentExam(StudentExam studentExam) {\n+        log.debug(\"Submit student exam with id {}\", studentExam.getId());\n+        // checks if student exam is already marked as submitted\n+        if (studentExam.isSubmitted()) {\n+            throw new IllegalStateException(\"StudentExam is already marked as submitted\");\n+        }\n+\n+        // gets individual exam end or exam.endDate if individual cannot be calculated\n+        ZonedDateTime examEndDate = studentExam.getExam().getStartDate() != null && studentExam.getWorkingTime() != null\n+                ? studentExam.getExam().getStartDate().plusSeconds(studentExam.getWorkingTime())\n+                : studentExam.getExam().getEndDate();\n+\n+        // checks if student exam is live (after start date, before end date + grace period)\n+        if ((studentExam.getExam().getStartDate() != null && !ZonedDateTime.now().isAfter(studentExam.getExam().getStartDate()))\n+                || (examEndDate != null && !(ZonedDateTime.now().isBefore(examEndDate.plusSeconds(studentExam.getExam().getGracePeriod()))))) {\n+            throw new IllegalStateException(\"StudentExam cannot be marked as submitted, because it is not invoked between start and end of exam\");\n+        }\n+\n+        studentExam.getExercises().forEach(exercise -> {\n+            // if exercise is either QuizExercise, TextExercise or ModelingExercise and exactly one participation exists\n+            if (exercise.getStudentParticipations() != null && exercise.getStudentParticipations().size() == 1) {\n+                exercise.getStudentParticipations().forEach(studentParticipation -> {\n+                    // if exactly one submission exists we save the submission\n+                    if (studentParticipation.getSubmissions() != null && studentParticipation.getSubmissions().size() == 1) {\n+                        studentParticipation.setExercise(exercise);\n+                        studentParticipation.getSubmissions().forEach(submission -> {", "originalCommit": "3d8cc72a587df92941ecdd24a30891c4acf45c2b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzcyMTMyMw==", "url": "https://github.com/ls1intum/Artemis/pull/1867#discussion_r453721323", "bodyText": "See 6cc959b", "author": "sascha11110", "createdAt": "2020-07-13T15:10:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUwMzMzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUwNDAwMg==", "url": "https://github.com/ls1intum/Artemis/pull/1867#discussion_r453504002", "bodyText": "Security: we should compare the submission with the existing one, so that no wrong data can be injected here (e.g. a submission with a different ID that overrides another submission of another user)", "author": "krusche", "createdAt": "2020-07-13T09:06:36Z", "path": "src/main/java/de/tum/in/www1/artemis/service/StudentExamService.java", "diffHunk": "@@ -67,6 +88,65 @@ public StudentExam findOneWithExercisesByUserIdAndExamId(Long userId, Long examI\n         return studentExamRepository.findWithExercisesByUserIdAndExamId(userId, examId);\n     }\n \n+    /**\n+     * submit StudentExam and uses submissions as final submissions if studentExam is not yet submitted\n+     * and if it was submitted after exam startDate and before individual endDate + gracePeriod\n+     *\n+     * @param studentExam latest studentExam object which will be submitted (final submission)\n+     */\n+    public void submitStudentExam(StudentExam studentExam) {\n+        log.debug(\"Submit student exam with id {}\", studentExam.getId());\n+        // checks if student exam is already marked as submitted\n+        if (studentExam.isSubmitted()) {\n+            throw new IllegalStateException(\"StudentExam is already marked as submitted\");\n+        }\n+\n+        // gets individual exam end or exam.endDate if individual cannot be calculated\n+        ZonedDateTime examEndDate = studentExam.getExam().getStartDate() != null && studentExam.getWorkingTime() != null\n+                ? studentExam.getExam().getStartDate().plusSeconds(studentExam.getWorkingTime())\n+                : studentExam.getExam().getEndDate();\n+\n+        // checks if student exam is live (after start date, before end date + grace period)\n+        if ((studentExam.getExam().getStartDate() != null && !ZonedDateTime.now().isAfter(studentExam.getExam().getStartDate()))\n+                || (examEndDate != null && !(ZonedDateTime.now().isBefore(examEndDate.plusSeconds(studentExam.getExam().getGracePeriod()))))) {\n+            throw new IllegalStateException(\"StudentExam cannot be marked as submitted, because it is not invoked between start and end of exam\");\n+        }\n+\n+        studentExam.getExercises().forEach(exercise -> {\n+            // if exercise is either QuizExercise, TextExercise or ModelingExercise and exactly one participation exists\n+            if (exercise.getStudentParticipations() != null && exercise.getStudentParticipations().size() == 1) {\n+                exercise.getStudentParticipations().forEach(studentParticipation -> {\n+                    // if exactly one submission exists we save the submission\n+                    if (studentParticipation.getSubmissions() != null && studentParticipation.getSubmissions().size() == 1) {\n+                        studentParticipation.setExercise(exercise);\n+                        studentParticipation.getSubmissions().forEach(submission -> {\n+                            submission.setParticipation(studentParticipation);\n+                            submission.submissionDate(ZonedDateTime.now());", "originalCommit": "3d8cc72a587df92941ecdd24a30891c4acf45c2b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc5MzQxNQ==", "url": "https://github.com/ls1intum/Artemis/pull/1867#discussion_r453793415", "bodyText": "See f73351d", "author": "sascha11110", "createdAt": "2020-07-13T16:57:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUwNDAwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUwNDY2Mw==", "url": "https://github.com/ls1intum/Artemis/pull/1867#discussion_r453504663", "bodyText": "Please be more specific. It is important to note that it includes exercises, participations and submissions, otherwise the call won't work", "author": "krusche", "createdAt": "2020-07-13T09:07:45Z", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/StudentExamResource.java", "diffHunk": "@@ -148,6 +148,34 @@ public StudentExamResource(ExamAccessService examAccessService, StudentExamServi\n         return ResponseEntity.ok(studentExamRepository.save(studentExam));\n     }\n \n+    /**\n+     * POST /courses/{courseId}/exams/{examId}/studentExams/submit : Submits the student exam\n+     * Updates all submissions and marks student exam as submitted according to given student exam\n+     * @param courseId      the course to which the student exams belong to\n+     * @param examId        the exam to which the student exams belong to\n+     * @param studentExam   the student exam parameter (request body)", "originalCommit": "3d8cc72a587df92941ecdd24a30891c4acf45c2b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUwNDg3Mw==", "url": "https://github.com/ls1intum/Artemis/pull/1867#discussion_r453504873", "bodyText": "Please add an error message into the bad request here", "author": "krusche", "createdAt": "2020-07-13T09:08:07Z", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/StudentExamResource.java", "diffHunk": "@@ -148,6 +148,34 @@ public StudentExamResource(ExamAccessService examAccessService, StudentExamServi\n         return ResponseEntity.ok(studentExamRepository.save(studentExam));\n     }\n \n+    /**\n+     * POST /courses/{courseId}/exams/{examId}/studentExams/submit : Submits the student exam\n+     * Updates all submissions and marks student exam as submitted according to given student exam\n+     * @param courseId      the course to which the student exams belong to\n+     * @param examId        the exam to which the student exams belong to\n+     * @param studentExam   the student exam parameter (request body)\n+     * @return              empty response with status code:\n+     *                          200 if successful\n+     *                          400 if student exam was in an illegal state\n+     */\n+    @PostMapping(\"/courses/{courseId}/exams/{examId}/studentExams/submit\")\n+    @PreAuthorize(\"hasAnyRole('USER', 'TA', 'INSTRUCTOR', 'ADMIN')\")\n+    public ResponseEntity<Void> submitStudentExam(@PathVariable Long courseId, @PathVariable Long examId, @RequestBody StudentExam studentExam) {\n+        log.debug(\"REST request to mark the studentExam as submitted : {}\", studentExam.getId());\n+        Optional<ResponseEntity<Void>> accessFailure = this.studentExamAccessService.checkStudentExamAccess(courseId, examId, studentExam.getId());\n+        if (accessFailure.isPresent()) {\n+            return accessFailure.get();\n+        }\n+        try {\n+            studentExamService.submitStudentExam(studentExam);\n+        }\n+        catch (IllegalStateException exception) {\n+            log.debug(\"REST request to mark the studentExam as failed, because of illegal state of StudentExam : {}\", studentExam.getId());\n+            return ResponseEntity.badRequest().build();", "originalCommit": "3d8cc72a587df92941ecdd24a30891c4acf45c2b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9457aa938090f58da05fe2093ce2e72b865e9cc5", "url": "https://github.com/ls1intum/Artemis/commit/9457aa938090f58da05fe2093ce2e72b865e9cc5", "message": "Adjust comment", "committedDate": "2020-07-13T13:29:02Z", "type": "commit"}, {"oid": "7076f2444e38f9c6f76b45eb4531d5be2372d820", "url": "https://github.com/ls1intum/Artemis/commit/7076f2444e38f9c6f76b45eb4531d5be2372d820", "message": "Improve error messages", "committedDate": "2020-07-13T14:26:17Z", "type": "commit"}, {"oid": "47530a904fe7958deba8d773b4fbc905be42ebca", "url": "https://github.com/ls1intum/Artemis/commit/47530a904fe7958deba8d773b4fbc905be42ebca", "message": "Add error messages in client", "committedDate": "2020-07-13T14:39:29Z", "type": "commit"}, {"oid": "3455984840266353a5eff0ff0385c32b228bef02", "url": "https://github.com/ls1intum/Artemis/commit/3455984840266353a5eff0ff0385c32b228bef02", "message": "Refactor checkStudentExamAccess()", "committedDate": "2020-07-13T14:56:24Z", "type": "commit"}, {"oid": "6cc959b3bab3d6e6ca01da8cc5ae41001b57e850", "url": "https://github.com/ls1intum/Artemis/commit/6cc959b3bab3d6e6ca01da8cc5ae41001b57e850", "message": "Security: double check that the user is owner of the participation", "committedDate": "2020-07-13T15:06:23Z", "type": "commit"}, {"oid": "0601fb53c0d5f643e13e91437226bdd7a241eecc", "url": "https://github.com/ls1intum/Artemis/commit/0601fb53c0d5f643e13e91437226bdd7a241eecc", "message": "Merge branch 'develop' into feature/exam/track-submission-status", "committedDate": "2020-07-13T15:08:59Z", "type": "commit"}, {"oid": "f73351dba1cdc0c02a9f7fe25a6bcebae281fff5", "url": "https://github.com/ls1intum/Artemis/commit/f73351dba1cdc0c02a9f7fe25a6bcebae281fff5", "message": "Security: submission checks", "committedDate": "2020-07-13T16:56:50Z", "type": "commit"}, {"oid": "2c31722aa205d9ace9f8c8ca21c1b46a6d9d21e0", "url": "https://github.com/ls1intum/Artemis/commit/2c31722aa205d9ace9f8c8ca21c1b46a6d9d21e0", "message": "Adjust StudentExamAccessServiceTest", "committedDate": "2020-07-13T17:19:11Z", "type": "commit"}, {"oid": "e6f7ea12fcdff7d3772ef4399b3f4f30cf81b778", "url": "https://github.com/ls1intum/Artemis/commit/e6f7ea12fcdff7d3772ef4399b3f4f30cf81b778", "message": "Calculate individual end date via working time also on page reload", "committedDate": "2020-07-13T19:41:48Z", "type": "commit"}, {"oid": "f0a467d652155947f499743fdb273040d62a4f2a", "url": "https://github.com/ls1intum/Artemis/commit/f0a467d652155947f499743fdb273040d62a4f2a", "message": "Check that existing student exam has not already been submitted", "committedDate": "2020-07-13T20:25:07Z", "type": "commit"}, {"oid": "cd4fd6a59f944871abe34cdc272c0db0d7d7389f", "url": "https://github.com/ls1intum/Artemis/commit/cd4fd6a59f944871abe34cdc272c0db0d7d7389f", "message": "Prevent manipulation of studentExam.exam.startDate/endDate/workingTime", "committedDate": "2020-07-13T20:33:39Z", "type": "commit"}, {"oid": "425697a847214929a9028bba30f5029f3057f48e", "url": "https://github.com/ls1intum/Artemis/commit/425697a847214929a9028bba30f5029f3057f48e", "message": "fix issues with date calculation", "committedDate": "2020-07-13T20:37:37Z", "type": "commit"}, {"oid": "721d9043591c3b65aa56adb3fc846465990942d1", "url": "https://github.com/ls1intum/Artemis/commit/721d9043591c3b65aa56adb3fc846465990942d1", "message": "fix test compile errors", "committedDate": "2020-07-13T20:48:34Z", "type": "commit"}, {"oid": "560816c6f86609be436351577dfee9fa0eef1a84", "url": "https://github.com/ls1intum/Artemis/commit/560816c6f86609be436351577dfee9fa0eef1a84", "message": "Basic integration test", "committedDate": "2020-07-13T20:53:24Z", "type": "commit"}, {"oid": "f002d0f13f4f1ba0ffc8b0de87ba3da81be9a007", "url": "https://github.com/ls1intum/Artemis/commit/f002d0f13f4f1ba0ffc8b0de87ba3da81be9a007", "message": "fix tests", "committedDate": "2020-07-13T20:55:50Z", "type": "commit"}, {"oid": "5818d9cdd8e93dd3f317886fee333017a9913be7", "url": "https://github.com/ls1intum/Artemis/commit/5818d9cdd8e93dd3f317886fee333017a9913be7", "message": "Merge remote-tracking branch 'origin/feature/exam/track-submission-status' into feature/exam/track-submission-status", "committedDate": "2020-07-13T20:56:41Z", "type": "commit"}, {"oid": "df01d9317b57e0aa9bd5131bcf06aed748af8f46", "url": "https://github.com/ls1intum/Artemis/commit/df01d9317b57e0aa9bd5131bcf06aed748af8f46", "message": "Merge branch 'feature/exam/track-submission-status' of https://github.com/ls1intum/Artemis into feature/exam/track-submission-status", "committedDate": "2020-07-13T20:59:51Z", "type": "commit"}, {"oid": "2bc7c4eb52535d24b233b52758d80f40c14fb6c7", "url": "https://github.com/ls1intum/Artemis/commit/2bc7c4eb52535d24b233b52758d80f40c14fb6c7", "message": "fix tests", "committedDate": "2020-07-13T21:01:46Z", "type": "commit"}]}