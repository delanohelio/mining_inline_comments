{"pr_number": 2594, "pr_title": "Feature/exam multi correction/exam db and view changes", "pr_createdAt": "2020-12-22T15:52:46Z", "pr_url": "https://github.com/ls1intum/Artemis/pull/2594", "timeline": [{"oid": "2ad69f8961ee0c0e9077b4ae90c9ad01ada74850", "url": "https://github.com/ls1intum/Artemis/commit/2ad69f8961ee0c0e9077b4ae90c9ad01ada74850", "message": "added exam table multi correction column and first changes to direct Exam components", "committedDate": "2020-12-14T16:56:44Z", "type": "commit"}, {"oid": "1e50f0c26e6a523b08eea07d5eca5aa4a62c99c3", "url": "https://github.com/ls1intum/Artemis/commit/1e50f0c26e6a523b08eea07d5eca5aa4a62c99c3", "message": "added exam table multi correction column and first changes to direct Exam components", "committedDate": "2020-12-14T16:56:57Z", "type": "commit"}, {"oid": "86cb43727d60d866cd51f403dfa6e010b0fa1e92", "url": "https://github.com/ls1intum/Artemis/commit/86cb43727d60d866cd51f403dfa6e010b0fa1e92", "message": "First version of changes to enable view of multiple results including renaming of properties", "committedDate": "2020-12-21T10:08:40Z", "type": "commit"}, {"oid": "4339d824ecfd127a786e936db9b55a76bb169014", "url": "https://github.com/ls1intum/Artemis/commit/4339d824ecfd127a786e936db9b55a76bb169014", "message": "merge develop", "committedDate": "2020-12-21T13:19:37Z", "type": "commit"}, {"oid": "8b2040f2f5fb2d17e6bb8a12411335e2273cb8ca", "url": "https://github.com/ls1intum/Artemis/commit/8b2040f2f5fb2d17e6bb8a12411335e2273cb8ca", "message": "Added checks to exam creation to only allow one or two correction rounds", "committedDate": "2020-12-21T14:05:44Z", "type": "commit"}, {"oid": "80c3447374fd69645dc0375258b2097c110568a5", "url": "https://github.com/ls1intum/Artemis/commit/80c3447374fd69645dc0375258b2097c110568a5", "message": "refactored stats calls and renamed method", "committedDate": "2020-12-21T14:10:22Z", "type": "commit"}, {"oid": "7a55f09416768a8f85fbd0faa0e288ccbdeb008c", "url": "https://github.com/ls1intum/Artemis/commit/7a55f09416768a8f85fbd0faa0e288ccbdeb008c", "message": "renamed method, fixed bugs", "committedDate": "2020-12-21T22:25:14Z", "type": "commit"}, {"oid": "f2f2b6b71e7846e6d03e8866e6195de2b906aef5", "url": "https://github.com/ls1intum/Artemis/commit/f2f2b6b71e7846e6d03e8866e6195de2b906aef5", "message": "assessment dashboard merge", "committedDate": "2020-12-22T15:21:45Z", "type": "commit"}, {"oid": "a7a210719c040087e1b7b372f0ff32d6631147b5", "url": "https://github.com/ls1intum/Artemis/commit/a7a210719c040087e1b7b372f0ff32d6631147b5", "message": "refactored calls for dasboards duedatestat arrays", "committedDate": "2020-12-22T15:36:24Z", "type": "commit"}, {"oid": "50f8fda8ddb7d09bb3cecefdff916e90d2670d34", "url": "https://github.com/ls1intum/Artemis/commit/50f8fda8ddb7d09bb3cecefdff916e90d2670d34", "message": "refactoring", "committedDate": "2020-12-22T15:51:47Z", "type": "commit"}, {"oid": "bf419923b870ace6c0abd3120a2e7848b3662c80", "url": "https://github.com/ls1intum/Artemis/commit/bf419923b870ace6c0abd3120a2e7848b3662c80", "message": "refactored count methods", "committedDate": "2020-12-22T15:59:44Z", "type": "commit"}, {"oid": "5dfac1a500dfd453b959e0995ae04777f8fab45f", "url": "https://github.com/ls1intum/Artemis/commit/5dfac1a500dfd453b959e0995ae04777f8fab45f", "message": "bug fix", "committedDate": "2020-12-22T16:19:28Z", "type": "commit"}, {"oid": "d4ecd7c4cafcf0b74ff81e846c17bbbd3574f3ae", "url": "https://github.com/ls1intum/Artemis/commit/d4ecd7c4cafcf0b74ff81e846c17bbbd3574f3ae", "message": "bug fix", "committedDate": "2020-12-22T16:21:47Z", "type": "commit"}, {"oid": "fb25f39553a3b772015b3ec2b2cfd44f920826d5", "url": "https://github.com/ls1intum/Artemis/commit/fb25f39553a3b772015b3ec2b2cfd44f920826d5", "message": "added programmingExercise assessment counting", "committedDate": "2020-12-22T16:30:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM4NzYyMA==", "url": "https://github.com/ls1intum/Artemis/pull/2594#discussion_r547387620", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        AND r.submission.submitted = TRUE\n          \n          \n            \n                        AND s.submitted = TRUE", "author": "krusche", "createdAt": "2020-12-22T16:53:28Z", "path": "src/main/java/de/tum/in/www1/artemis/repository/ProgrammingExerciseRepository.java", "diffHunk": "@@ -175,6 +175,21 @@ AND NOT EXISTS (SELECT prs FROM p.results prs\n             \"\"\")\n     long countAssessmentsByExerciseIdSubmittedIgnoreTestRunSubmissions(@Param(\"exerciseId\") Long exerciseId);\n \n+    @Query(\"\"\"\n+\n+            SELECT COUNT(DISTINCT p) FROM StudentParticipation p left join p.submissions s  left join s.results r\n+            WHERE p.exercise.id = :exerciseId\n+            AND s.id = (select max(id) from p.submissions)\n+            AND r.assessor IS NOT NULL\n+            AND r.rated = TRUE\n+            AND r.submission.submitted = TRUE", "originalCommit": "fb25f39553a3b772015b3ec2b2cfd44f920826d5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM5MDg1Mg==", "url": "https://github.com/ls1intum/Artemis/pull/2594#discussion_r547390852", "bodyText": "not sure if this would work, but I don't see a reason to navigate from submission to result and then back to submission", "author": "krusche", "createdAt": "2020-12-22T16:59:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM4NzYyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQwNjgzMw==", "url": "https://github.com/ls1intum/Artemis/pull/2594#discussion_r547406833", "bodyText": "yeah, that's right, it should work. We'll try it. The r.submission.submitted comes from the query we used as a basis for ours. There wasn't a join to submission, so it was necessary before.", "author": "SimonEntholzer", "createdAt": "2020-12-22T17:32:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM4NzYyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM4Nzc0MA==", "url": "https://github.com/ls1intum/Artemis/pull/2594#discussion_r547387740", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        AND (p.exercise.dueDate IS NULL OR r.submission.submissionDate <= p.exercise.dueDate)\n          \n          \n            \n                        AND (p.exercise.dueDate IS NULL OR s.submissionDate <= p.exercise.dueDate)", "author": "krusche", "createdAt": "2020-12-22T16:53:42Z", "path": "src/main/java/de/tum/in/www1/artemis/repository/ProgrammingExerciseRepository.java", "diffHunk": "@@ -175,6 +175,21 @@ AND NOT EXISTS (SELECT prs FROM p.results prs\n             \"\"\")\n     long countAssessmentsByExerciseIdSubmittedIgnoreTestRunSubmissions(@Param(\"exerciseId\") Long exerciseId);\n \n+    @Query(\"\"\"\n+\n+            SELECT COUNT(DISTINCT p) FROM StudentParticipation p left join p.submissions s  left join s.results r\n+            WHERE p.exercise.id = :exerciseId\n+            AND s.id = (select max(id) from p.submissions)\n+            AND r.assessor IS NOT NULL\n+            AND r.rated = TRUE\n+            AND r.submission.submitted = TRUE\n+            AND r.completionDate IS NOT NULL\n+            AND (p.exercise.dueDate IS NULL OR r.submission.submissionDate <= p.exercise.dueDate)", "originalCommit": "fb25f39553a3b772015b3ec2b2cfd44f920826d5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQwNzE2Nw==", "url": "https://github.com/ls1intum/Artemis/pull/2594#discussion_r547407167", "bodyText": "same as before, this should work", "author": "SimonEntholzer", "createdAt": "2020-12-22T17:33:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM4Nzc0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM5MDA5MA==", "url": "https://github.com/ls1intum/Artemis/pull/2594#discussion_r547390090", "bodyText": "I don't understand this statement. can you add a comment to explain it", "author": "krusche", "createdAt": "2020-12-22T16:58:15Z", "path": "src/main/java/de/tum/in/www1/artemis/repository/ProgrammingExerciseRepository.java", "diffHunk": "@@ -175,6 +175,21 @@ AND NOT EXISTS (SELECT prs FROM p.results prs\n             \"\"\")\n     long countAssessmentsByExerciseIdSubmittedIgnoreTestRunSubmissions(@Param(\"exerciseId\") Long exerciseId);\n \n+    @Query(\"\"\"\n+\n+            SELECT COUNT(DISTINCT p) FROM StudentParticipation p left join p.submissions s  left join s.results r\n+            WHERE p.exercise.id = :exerciseId\n+            AND s.id = (select max(id) from p.submissions)\n+            AND r.assessor IS NOT NULL\n+            AND r.rated = TRUE\n+            AND r.submission.submitted = TRUE\n+            AND r.completionDate IS NOT NULL\n+            AND (p.exercise.dueDate IS NULL OR r.submission.submissionDate <= p.exercise.dueDate)\n+            AND NOT EXISTS (select prs from p.results prs where prs.assessor.id = p.student.id)\n+            AND :correctionRound = 1L", "originalCommit": "fb25f39553a3b772015b3ec2b2cfd44f920826d5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQxMTQyMw==", "url": "https://github.com/ls1intum/Artemis/pull/2594#discussion_r547411423", "bodyText": "At the moment the 1L is only the placeholder for the subquery that gets the number of results for all submissions. We didn't include it here so we can test all other implemented features, without the query throwing an exception.\nWe tried different things like e.g. AND :correctionRound = (select count(s.results) from s) but get an org.hibernate.exception.SQLGrammarException: could not extract ResultSet exception. We are still trying to figure out why it does not work", "author": "SimonEntholzer", "createdAt": "2020-12-22T17:41:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM5MDA5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM5MDYzNQ==", "url": "https://github.com/ls1intum/Artemis/pull/2594#discussion_r547390635", "bodyText": "same suggestions as above.", "author": "krusche", "createdAt": "2020-12-22T16:59:11Z", "path": "src/main/java/de/tum/in/www1/artemis/repository/ResultRepository.java", "diffHunk": "@@ -92,8 +92,24 @@\n     @Query(\"SELECT COUNT(DISTINCT p) FROM StudentParticipation p left join p.results r WHERE p.exercise.id = :exerciseId AND r.assessor IS NOT NULL AND r.rated = TRUE AND r.submission.submitted = TRUE AND r.completionDate IS NOT NULL AND (p.exercise.dueDate IS NULL OR r.submission.submissionDate <= p.exercise.dueDate) AND NOT EXISTS (select prs from p.results prs where prs.assessor.id = p.student.id)\")\n     long countNumberOfFinishedAssessmentsForExerciseIgnoreTestRuns(@Param(\"exerciseId\") Long exerciseId);\n \n-    @Query(\"SELECT COUNT(DISTINCT p) FROM StudentParticipation p left join p.results r WHERE p.exercise.id = :exerciseId AND r.assessor IS NOT NULL AND r.rated = FALSE AND r.completionDate IS NOT NULL AND p.exercise.dueDate IS NOT NULL AND r.submission.submissionDate > p.exercise.dueDate\")\n-    long countNumberOfFinishedLateAssessmentsForExercise(@Param(\"exerciseId\") Long exerciseId);\n+    @Query(\"\"\"\n+\n+            SELECT COUNT(DISTINCT p) FROM StudentParticipation p left join p.submissions s  left join s.results r", "originalCommit": "fb25f39553a3b772015b3ec2b2cfd44f920826d5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e159ce2e527bdaf3c04553a18025eee566946e9b", "url": "https://github.com/ls1intum/Artemis/commit/e159ce2e527bdaf3c04553a18025eee566946e9b", "message": "Apply suggestions from code review\n\nCo-authored-by: Stephan Krusche <krusche@in.tum.de>", "committedDate": "2020-12-22T17:42:42Z", "type": "commit"}, {"oid": "dc32ad9d3d83271724b36d426b86da003ad3d5b3", "url": "https://github.com/ls1intum/Artemis/commit/dc32ad9d3d83271724b36d426b86da003ad3d5b3", "message": "renamed db field", "committedDate": "2020-12-22T17:53:33Z", "type": "commit"}, {"oid": "b9509eb61c181c469a7499e47e7c632a52069693", "url": "https://github.com/ls1intum/Artemis/commit/b9509eb61c181c469a7499e47e7c632a52069693", "message": "renamed db column", "committedDate": "2020-12-22T20:21:00Z", "type": "commit"}, {"oid": "d7157cd22806c8aed34764818717d453ab4ab959", "url": "https://github.com/ls1intum/Artemis/commit/d7157cd22806c8aed34764818717d453ab4ab959", "message": "Fixed bug where the exam progressbar was broken due to faulty query", "committedDate": "2020-12-23T08:55:14Z", "type": "commit"}, {"oid": "b26ddee54ca6e07afa7ac71b97ff79551357c35e", "url": "https://github.com/ls1intum/Artemis/commit/b26ddee54ca6e07afa7ac71b97ff79551357c35e", "message": "fix failing test", "committedDate": "2020-12-23T09:12:14Z", "type": "commit"}, {"oid": "78861ccc7e317a44a2eab1cc810355cc1ea1cb85", "url": "https://github.com/ls1intum/Artemis/commit/78861ccc7e317a44a2eab1cc810355cc1ea1cb85", "message": "fix html index of correctionround", "committedDate": "2020-12-23T09:15:55Z", "type": "commit"}, {"oid": "5d452f1f8be6205556051abd62afe4cf7925d077", "url": "https://github.com/ls1intum/Artemis/commit/5d452f1f8be6205556051abd62afe4cf7925d077", "message": "added query to programmingExerciseRepository", "committedDate": "2020-12-23T09:34:39Z", "type": "commit"}, {"oid": "05f856a7ae4afac55a59bdc8078977cc2ec2de03", "url": "https://github.com/ls1intum/Artemis/commit/05f856a7ae4afac55a59bdc8078977cc2ec2de03", "message": "fixed test failing due to missing attribute", "committedDate": "2020-12-23T09:53:40Z", "type": "commit"}, {"oid": "32355e1a19099e70ac7a057e4498ee0bef335802", "url": "https://github.com/ls1intum/Artemis/commit/32355e1a19099e70ac7a057e4498ee0bef335802", "message": "refactor methods", "committedDate": "2020-12-23T14:14:51Z", "type": "commit"}, {"oid": "a280bb17fc0cb2da81d00deaf52db45680b19830", "url": "https://github.com/ls1intum/Artemis/commit/a280bb17fc0cb2da81d00deaf52db45680b19830", "message": "refactoring, renaming of method with bad naming, fixed test", "committedDate": "2020-12-23T14:34:45Z", "type": "commit"}, {"oid": "a6cfe62e8c787c6b81dfeade6ed269f3bd34db34", "url": "https://github.com/ls1intum/Artemis/commit/a6cfe62e8c787c6b81dfeade6ed269f3bd34db34", "message": "changed exam-update interface", "committedDate": "2020-12-23T16:10:36Z", "type": "commit"}, {"oid": "60b22c9b14fc850ce4bf62e52dda09b24fdca170", "url": "https://github.com/ls1intum/Artemis/commit/60b22c9b14fc850ce4bf62e52dda09b24fdca170", "message": "only allow 1 or 2 as input for correctionRounds", "committedDate": "2020-12-23T16:18:29Z", "type": "commit"}, {"oid": "46c3207eebeb056310d81358a9f2359af655fc69", "url": "https://github.com/ls1intum/Artemis/commit/46c3207eebeb056310d81358a9f2359af655fc69", "message": "removed displaying of correctionRounds in exam information component", "committedDate": "2020-12-23T18:16:43Z", "type": "commit"}, {"oid": "506f9a021002afd3974c8d39945d7e055d685806", "url": "https://github.com/ls1intum/Artemis/commit/506f9a021002afd3974c8d39945d7e055d685806", "message": "Merge branch 'develop' into feature/exam-multi-correction/exam-db-and-view-changes", "committedDate": "2020-12-23T18:40:56Z", "type": "commit"}, {"oid": "90c91fcd5cb155f625d8fff423b26ec0bfcfb9dd", "url": "https://github.com/ls1intum/Artemis/commit/90c91fcd5cb155f625d8fff423b26ec0bfcfb9dd", "message": "fixed naming of variable", "committedDate": "2020-12-26T15:31:01Z", "type": "commit"}, {"oid": "71756e2e5fa4112ca2e95ca6974dc0ad007d05dc", "url": "https://github.com/ls1intum/Artemis/commit/71756e2e5fa4112ca2e95ca6974dc0ad007d05dc", "message": "added tests, added missing calls to setLatestSubmissionResults, fixed count query", "committedDate": "2020-12-27T10:48:03Z", "type": "commit"}, {"oid": "4ef024935133b47c57327ec64cfe4f3f4538ae06", "url": "https://github.com/ls1intum/Artemis/commit/4ef024935133b47c57327ec64cfe4f3f4538ae06", "message": "client log statements for debugging", "committedDate": "2020-12-27T12:56:17Z", "type": "commit"}, {"oid": "77e52821dfa3cee6efe36244c53239998ca9b470", "url": "https://github.com/ls1intum/Artemis/commit/77e52821dfa3cee6efe36244c53239998ca9b470", "message": "client log statements for debugging 2", "committedDate": "2020-12-27T12:59:11Z", "type": "commit"}, {"oid": "fd013c75872335302ba77257bb53e7b9f0541a9b", "url": "https://github.com/ls1intum/Artemis/commit/fd013c75872335302ba77257bb53e7b9f0541a9b", "message": "client log statements for debugging 3", "committedDate": "2020-12-27T13:02:33Z", "type": "commit"}, {"oid": "52a91010fb7bf313e570d1075836a99cad43d84f", "url": "https://github.com/ls1intum/Artemis/commit/52a91010fb7bf313e570d1075836a99cad43d84f", "message": "Fix progressbar Bug, added logs for debugging", "committedDate": "2020-12-27T14:39:05Z", "type": "commit"}, {"oid": "70fce0ccd74a2c424404a87dc73d4af69ac60b74", "url": "https://github.com/ls1intum/Artemis/commit/70fce0ccd74a2c424404a87dc73d4af69ac60b74", "message": "removed log statements", "committedDate": "2020-12-27T15:08:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTM0NjE5MA==", "url": "https://github.com/ls1intum/Artemis/pull/2594#discussion_r549346190", "bodyText": "I this not relevant for the future? Then it could be removed", "author": "FuchsDominik", "createdAt": "2020-12-28T13:22:14Z", "path": "src/main/java/de/tum/in/www1/artemis/repository/ResultRepository.java", "diffHunk": "@@ -92,8 +92,30 @@\n     @Query(\"SELECT COUNT(DISTINCT p) FROM StudentParticipation p left join p.results r WHERE p.exercise.id = :exerciseId AND r.assessor IS NOT NULL AND r.rated = TRUE AND r.submission.submitted = TRUE AND r.completionDate IS NOT NULL AND (p.exercise.dueDate IS NULL OR r.submission.submissionDate <= p.exercise.dueDate) AND NOT EXISTS (select prs from p.results prs where prs.assessor.id = p.student.id)\")\n     long countNumberOfFinishedAssessmentsForExerciseIgnoreTestRuns(@Param(\"exerciseId\") Long exerciseId);\n \n-    @Query(\"SELECT COUNT(DISTINCT p) FROM StudentParticipation p left join p.results r WHERE p.exercise.id = :exerciseId AND r.assessor IS NOT NULL AND r.rated = FALSE AND r.completionDate IS NOT NULL AND p.exercise.dueDate IS NOT NULL AND r.submission.submissionDate > p.exercise.dueDate\")\n-    long countNumberOfFinishedLateAssessmentsForExercise(@Param(\"exerciseId\") Long exerciseId);\n+    /**\n+     * @param exerciseId\n+     * @param correctionRound\n+     * @return the number of completed assessments for the specified correction round of an exam exercise\n+     */\n+    @Query(\"\"\"\n+               SELECT COUNT(DISTINCT p)\n+               FROM StudentParticipation p WHERE p.exercise.id = :exerciseId AND\n+                            (SELECT COUNT(r)\n+                            FROM Result r\n+                            WHERE r.assessor IS NOT NULL\n+                                AND r.rated = TRUE\n+                                AND r.submission = (select max(id) from p.submissions)\n+                                AND r.submission.submitted = TRUE\n+                                AND r.completionDate IS NOT NULL\n+                                AND (p.exercise.dueDate IS NULL OR r.submission.submissionDate <= p.exercise.dueDate)\n+                                AND NOT EXISTS (select prs from p.results prs where prs.assessor.id = p.student.id)\n+                            ) = :correctionRound\n+            \"\"\")\n+    long countNumberOfFinishedAssessmentsByCorrectionRoundsAndExerciseIdIgnoreTestRuns(@Param(\"exerciseId\") Long exerciseId, @Param(\"correctionRound\") Long correctionRound);\n+\n+    // @Query(\"SELECT COUNT(DISTINCT p) FROM StudentParticipation p left join p.results r WHERE p.exercise.id = :exerciseId AND r.assessor IS NOT NULL AND r.rated = FALSE AND", "originalCommit": "70fce0ccd74a2c424404a87dc73d4af69ac60b74", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDIyMTY4OQ==", "url": "https://github.com/ls1intum/Artemis/pull/2594#discussion_r550221689", "bodyText": "\ud83d\udc4d", "author": "nicolasruscher", "createdAt": "2020-12-30T14:54:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTM0NjE5MA=="}], "type": "inlineReview"}, {"oid": "0839573c2087149538e1b5571dd534bce7f3ce60", "url": "https://github.com/ls1intum/Artemis/commit/0839573c2087149538e1b5571dd534bce7f3ce60", "message": "updates based on Code Review", "committedDate": "2020-12-29T09:25:14Z", "type": "commit"}, {"oid": "939162e63c912c7a00dde5702929b5d45c442bc7", "url": "https://github.com/ls1intum/Artemis/commit/939162e63c912c7a00dde5702929b5d45c442bc7", "message": "small fix", "committedDate": "2020-12-29T09:48:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc3MTUyNQ==", "url": "https://github.com/ls1intum/Artemis/pull/2594#discussion_r549771525", "bodyText": "Technically there can never be late assessments for exams, and for course exercises there is only one assessment round. Depending on how we handle this however we can probably remove this", "author": "anditurdiu", "createdAt": "2020-12-29T16:40:52Z", "path": "src/main/java/de/tum/in/www1/artemis/repository/ResultRepository.java", "diffHunk": "@@ -92,8 +92,30 @@\n     @Query(\"SELECT COUNT(DISTINCT p) FROM StudentParticipation p left join p.results r WHERE p.exercise.id = :exerciseId AND r.assessor IS NOT NULL AND r.rated = TRUE AND r.submission.submitted = TRUE AND r.completionDate IS NOT NULL AND (p.exercise.dueDate IS NULL OR r.submission.submissionDate <= p.exercise.dueDate) AND NOT EXISTS (select prs from p.results prs where prs.assessor.id = p.student.id)\")\n     long countNumberOfFinishedAssessmentsForExerciseIgnoreTestRuns(@Param(\"exerciseId\") Long exerciseId);\n \n-    @Query(\"SELECT COUNT(DISTINCT p) FROM StudentParticipation p left join p.results r WHERE p.exercise.id = :exerciseId AND r.assessor IS NOT NULL AND r.rated = FALSE AND r.completionDate IS NOT NULL AND p.exercise.dueDate IS NOT NULL AND r.submission.submissionDate > p.exercise.dueDate\")\n-    long countNumberOfFinishedLateAssessmentsForExercise(@Param(\"exerciseId\") Long exerciseId);\n+    /**\n+     * @param exerciseId\n+     * @param correctionRound\n+     * @return the number of completed assessments for the specified correction round of an exam exercise\n+     */\n+    @Query(\"\"\"\n+               SELECT COUNT(DISTINCT p)\n+               FROM StudentParticipation p WHERE p.exercise.id = :exerciseId AND\n+                            (SELECT COUNT(r)\n+                            FROM Result r\n+                            WHERE r.assessor IS NOT NULL\n+                                AND r.rated = TRUE\n+                                AND r.submission = (select max(id) from p.submissions)\n+                                AND r.submission.submitted = TRUE\n+                                AND r.completionDate IS NOT NULL\n+                                AND (p.exercise.dueDate IS NULL OR r.submission.submissionDate <= p.exercise.dueDate)\n+                                AND NOT EXISTS (select prs from p.results prs where prs.assessor.id = p.student.id)\n+                            ) = :correctionRound\n+            \"\"\")\n+    long countNumberOfFinishedAssessmentsByCorrectionRoundsAndExerciseIdIgnoreTestRuns(@Param(\"exerciseId\") Long exerciseId, @Param(\"correctionRound\") Long correctionRound);\n+\n+    // @Query(\"SELECT COUNT(DISTINCT p) FROM StudentParticipation p left join p.results r WHERE p.exercise.id = :exerciseId AND r.assessor IS NOT NULL AND r.rated = FALSE AND\n+    // r.completionDate IS NOT NULL AND p.exercise.dueDate IS NOT NULL AND r.submission.submissionDate > p.exercise.dueDate\")\n+    // long countNumberOfFinishedLateAssessmentsForExercise(@Param(\"exerciseId\") Long exerciseId);", "originalCommit": "939162e63c912c7a00dde5702929b5d45c442bc7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc3Njk3NQ==", "url": "https://github.com/ls1intum/Artemis/pull/2594#discussion_r549776975", "bodyText": "This query is currently identical to the query in the ResultsRepository:114.\nHere you always check for the latest submission, should this also be the case for programming exercises?", "author": "anditurdiu", "createdAt": "2020-12-29T16:58:10Z", "path": "src/main/java/de/tum/in/www1/artemis/repository/ProgrammingExerciseRepository.java", "diffHunk": "@@ -168,13 +168,29 @@ AND EXISTS (SELECT s FROM ProgrammingSubmission s\n                 WHERE s.participation.id = p.id\n                 AND s.submitted = TRUE\n                 AND EXISTS (SELECT r.assessor FROM s.results r\n-                    WHERE r.assessor IS NOT NULL\n-                    AND r.completionDate IS NOT NULL))\n+                        WHERE r.assessor IS NOT NULL\n+                        AND r.completionDate IS NOT NULL))\n             AND NOT EXISTS (SELECT prs FROM p.results prs\n-                WHERE prs.assessor.id = p.student.id)\n+                            WHERE prs.assessor.id = p.student.id)\n             \"\"\")\n     long countAssessmentsByExerciseIdSubmittedIgnoreTestRunSubmissions(@Param(\"exerciseId\") Long exerciseId);\n \n+    @Query(\"\"\"\n+               SELECT COUNT(DISTINCT p)\n+               FROM ProgrammingExerciseStudentParticipation p WHERE p.exercise.id = :exerciseId AND\n+                            (SELECT COUNT(r)\n+                            FROM Result r\n+                            WHERE r.assessor IS NOT NULL\n+                                AND r.rated = TRUE\n+                                AND r.submission = (select max(id) from p.submissions)\n+                                AND r.submission.submitted = TRUE\n+                                AND r.completionDate IS NOT NULL\n+                                AND (p.exercise.dueDate IS NULL OR r.submission.submissionDate <= p.exercise.dueDate)\n+                                AND NOT EXISTS (select prs from p.results prs where prs.assessor.id = p.student.id)\n+                            ) = :correctionRound\n+            \"\"\")\n+    long countNumberOfFinishedAssessmentsByCorrectionRoundsAndExerciseIdIgnoreTestRuns(@Param(\"exerciseId\") Long exerciseId, @Param(\"correctionRound\") Long correctionRound);", "originalCommit": "939162e63c912c7a00dde5702929b5d45c442bc7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc3NzE1NA==", "url": "https://github.com/ls1intum/Artemis/pull/2594#discussion_r549777154", "bodyText": "Both these queries are functionaly identical", "author": "anditurdiu", "createdAt": "2020-12-29T16:58:47Z", "path": "src/main/java/de/tum/in/www1/artemis/service/ResultService.java", "diffHunk": "@@ -253,8 +257,36 @@ public DueDateStat countNumberOfFinishedAssessmentsForExercise(Long exerciseId,\n         if (examMode) {\n             return new DueDateStat(resultRepository.countNumberOfFinishedAssessmentsForExerciseIgnoreTestRuns(exerciseId), 0L);\n         }\n-        return new DueDateStat(resultRepository.countNumberOfFinishedAssessmentsForExercise(exerciseId),\n-                resultRepository.countNumberOfFinishedLateAssessmentsForExercise(exerciseId));\n+        return new DueDateStat(resultRepository.countNumberOfFinishedAssessmentsForExercise(exerciseId), 0L);\n+    }\n+\n+    /**\n+     * Given an exerciseId and a correctionRound, return the number of assessments for that exerciseId and correctionRound that have been finished\n+     *\n+     * @param exercise  - the exercise we are interested in\n+     * @param correctionRounds - the correction round we want finished assessments for\n+     * @return an array of the number of assessments for the exercise for a given correction round\n+     */\n+    public DueDateStat[] countNumberOfFinishedAssessmentsForExerciseByCorrectionRound(Exercise exercise, Long correctionRounds) {\n+        DueDateStat[] correctionRoundsDataStats = new DueDateStat[correctionRounds.intValue()];\n+\n+        for (int i = 1; i <= correctionRounds.intValue(); i++) {\n+            if (exercise instanceof ProgrammingExercise) {\n+                correctionRoundsDataStats[i - 1] = new DueDateStat(\n+                        programmingExerciseRepository.countNumberOfFinishedAssessmentsByCorrectionRoundsAndExerciseIdIgnoreTestRuns(exercise.getId(), (long) i), 0L);", "originalCommit": "939162e63c912c7a00dde5702929b5d45c442bc7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDE1NjUxMg==", "url": "https://github.com/ls1intum/Artemis/pull/2594#discussion_r550156512", "bodyText": "yes, we removed the one in programmingExerciseRepository", "author": "SimonEntholzer", "createdAt": "2020-12-30T11:16:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc3NzE1NA=="}], "type": "inlineReview"}, {"oid": "02eb9691dcacbe69317474b1b9339726d272a7ac", "url": "https://github.com/ls1intum/Artemis/commit/02eb9691dcacbe69317474b1b9339726d272a7ac", "message": "began working on client tests", "committedDate": "2020-12-29T17:59:33Z", "type": "commit"}, {"oid": "848a58e9d7556615987fea914712301b3cccedfb", "url": "https://github.com/ls1intum/Artemis/commit/848a58e9d7556615987fea914712301b3cccedfb", "message": "added new client tests", "committedDate": "2020-12-30T09:10:35Z", "type": "commit"}, {"oid": "906fb7fb0375314eba05a99e6047bbd3d053d9ee", "url": "https://github.com/ls1intum/Artemis/commit/906fb7fb0375314eba05a99e6047bbd3d053d9ee", "message": "added another client test", "committedDate": "2020-12-30T09:49:46Z", "type": "commit"}, {"oid": "b4003d81cb3b029985df5f2bddf1996d9e52915c", "url": "https://github.com/ls1intum/Artemis/commit/b4003d81cb3b029985df5f2bddf1996d9e52915c", "message": "removed duplicate query", "committedDate": "2020-12-30T10:55:37Z", "type": "commit"}, {"oid": "98c267204f108d24ba6ff34b8e1b052d0682929d", "url": "https://github.com/ls1intum/Artemis/commit/98c267204f108d24ba6ff34b8e1b052d0682929d", "message": "work on client test", "committedDate": "2020-12-30T11:01:27Z", "type": "commit"}, {"oid": "5d7b49a7791a5efa53f7677eefa5c61c1f3fdbf8", "url": "https://github.com/ls1intum/Artemis/commit/5d7b49a7791a5efa53f7677eefa5c61c1f3fdbf8", "message": "Merge branch 'develop' into feature/exam-multi-correction/exam-db-and-view-changes", "committedDate": "2020-12-30T11:14:44Z", "type": "commit"}, {"oid": "e486c371bc37874929cc766b8079f7cf01b73ee1", "url": "https://github.com/ls1intum/Artemis/commit/e486c371bc37874929cc766b8079f7cf01b73ee1", "message": "work on client test", "committedDate": "2020-12-30T12:31:32Z", "type": "commit"}, {"oid": "df165045b6fc8a7ff3d74de1f6a61d0564e289d1", "url": "https://github.com/ls1intum/Artemis/commit/df165045b6fc8a7ff3d74de1f6a61d0564e289d1", "message": "added calculateStatus Test", "committedDate": "2020-12-30T12:39:06Z", "type": "commit"}, {"oid": "c632a25725ca1955cd20a69bfccdd8ca98e3eabf", "url": "https://github.com/ls1intum/Artemis/commit/c632a25725ca1955cd20a69bfccdd8ca98e3eabf", "message": "Merge branch 'feature/exam-multi-correction/exam-db-and-view-changes' of https://github.com/ls1intum/Artemis into feature/exam-multi-correction/exam-db-and-view-changes", "committedDate": "2020-12-30T12:40:15Z", "type": "commit"}, {"oid": "1f167ccc7f97a8c6f817dc6a2b4c43eda9783a17", "url": "https://github.com/ls1intum/Artemis/commit/1f167ccc7f97a8c6f817dc6a2b4c43eda9783a17", "message": "added multiple client tests", "committedDate": "2020-12-30T14:38:57Z", "type": "commit"}, {"oid": "1086d39fdd8d86fdf563403ca648aed9b447fed2", "url": "https://github.com/ls1intum/Artemis/commit/1086d39fdd8d86fdf563403ca648aed9b447fed2", "message": "added tests", "committedDate": "2020-12-30T16:23:23Z", "type": "commit"}, {"oid": "c1fea6d223ace1cb8a0e26de93184e725a6fd822", "url": "https://github.com/ls1intum/Artemis/commit/c1fea6d223ace1cb8a0e26de93184e725a6fd822", "message": "Added even more tests", "committedDate": "2020-12-30T18:14:27Z", "type": "commit"}, {"oid": "89acba85e23021e7c77a60924cb54cad2340c265", "url": "https://github.com/ls1intum/Artemis/commit/89acba85e23021e7c77a60924cb54cad2340c265", "message": "added more tests", "committedDate": "2020-12-30T21:23:10Z", "type": "commit"}, {"oid": "c35788a663257273e5835a1b20d9027dc1b6d301", "url": "https://github.com/ls1intum/Artemis/commit/c35788a663257273e5835a1b20d9027dc1b6d301", "message": "limited max-correctionRounds to 1", "committedDate": "2020-12-30T21:28:10Z", "type": "commit"}, {"oid": "0b812a51c8565e90f57677ecd8086b39669ef491", "url": "https://github.com/ls1intum/Artemis/commit/0b812a51c8565e90f57677ecd8086b39669ef491", "message": "removed failing tests", "committedDate": "2020-12-30T21:55:47Z", "type": "commit"}, {"oid": "defcd1dba1e45aea15bcfbb160d9991f29dd6774", "url": "https://github.com/ls1intum/Artemis/commit/defcd1dba1e45aea15bcfbb160d9991f29dd6774", "message": "Revert \"limited max-correctionRounds to 1\"\n\nThis reverts commit c35788a6", "committedDate": "2020-12-30T21:56:06Z", "type": "commit"}, {"oid": "7f224457a9f1415ef53c0eea445ac8c5b72c8136", "url": "https://github.com/ls1intum/Artemis/commit/7f224457a9f1415ef53c0eea445ac8c5b72c8136", "message": "Merge branch 'develop' into feature/exam-multi-correction/exam-db-and-view-changes", "committedDate": "2020-12-31T00:29:52Z", "type": "commit"}, {"oid": "0eeeb8a445918fa078ef674105d7c7bc7615b659", "url": "https://github.com/ls1intum/Artemis/commit/0eeeb8a445918fa078ef674105d7c7bc7615b659", "message": "fixed code style", "committedDate": "2020-12-31T07:59:14Z", "type": "commit"}, {"oid": "b5004b3c2df279e666dcdeb5e37fb16640224114", "url": "https://github.com/ls1intum/Artemis/commit/b5004b3c2df279e666dcdeb5e37fb16640224114", "message": "removed unused code and duplicate code", "committedDate": "2020-12-31T12:18:20Z", "type": "commit"}, {"oid": "264c7229290c40c35ab38ed63fff25c1fe7dfc70", "url": "https://github.com/ls1intum/Artemis/commit/264c7229290c40c35ab38ed63fff25c1fe7dfc70", "message": "changed javadoc", "committedDate": "2020-12-31T12:29:25Z", "type": "commit"}, {"oid": "ede8c89d5c3864eb312c4aa7064b7dda36018e0b", "url": "https://github.com/ls1intum/Artemis/commit/ede8c89d5c3864eb312c4aa7064b7dda36018e0b", "message": "shortend array initialization", "committedDate": "2020-12-31T12:46:51Z", "type": "commit"}]}