{"pr_number": 1521, "pr_title": "GG-31129 Cache metrics without description", "pr_createdAt": "2020-10-28T07:27:39Z", "pr_url": "https://github.com/gridgain/gridgain/pull/1521", "timeline": [{"oid": "b5c88bd867397762764ddb9668fa4cb6d2042677", "url": "https://github.com/gridgain/gridgain/commit/b5c88bd867397762764ddb9668fa4cb6d2042677", "message": "GG-31129 Cache metrics without description", "committedDate": "2020-10-16T20:48:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0Mjk0MA==", "url": "https://github.com/gridgain/gridgain/pull/1521#discussion_r513242940", "bodyText": "Estimated total number of keys to rabalance.", "author": "vmalin", "createdAt": "2020-10-28T08:00:34Z", "path": "modules/core/src/main/java/org/apache/ignite/mxbean/CacheMetricsMXBean.java", "diffHunk": "@@ -351,4 +351,60 @@\n     @MXBeanDescription(\"Number of keys processed during index rebuilding. To get remaining number of keys for \" +\n         \"rebuilding, subtract current value from cache size.\")\n     @Override public long getIndexRebuildKeysProcessed();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"Number of already rebalanced keys.\")\n+    @Override public long getRebalancedKeys();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"Number estimated to rebalance keys.\")", "originalCommit": "b5c88bd867397762764ddb9668fa4cb6d2042677", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0MzU5Mw==", "url": "https://github.com/gridgain/gridgain/pull/1521#discussion_r513243593", "bodyText": "The number of partitions to be cleared before actual rebalance start_s_.", "author": "vmalin", "createdAt": "2020-10-28T08:01:52Z", "path": "modules/core/src/main/java/org/apache/ignite/mxbean/CacheMetricsMXBean.java", "diffHunk": "@@ -351,4 +351,60 @@\n     @MXBeanDescription(\"Number of keys processed during index rebuilding. To get remaining number of keys for \" +\n         \"rebuilding, subtract current value from cache size.\")\n     @Override public long getIndexRebuildKeysProcessed();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"Number of already rebalanced keys.\")\n+    @Override public long getRebalancedKeys();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"Number estimated to rebalance keys.\")\n+    @Override public long getEstimatedRebalancingKeys();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The number of partitions need to be cleared before actual rebalance start.\")", "originalCommit": "b5c88bd867397762764ddb9668fa4cb6d2042677", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0NDgwNg==", "url": "https://github.com/gridgain/gridgain/pull/1521#discussion_r513244806", "bodyText": "The percentage of invocations on keys which[comma not needed] exist in the cache.", "author": "vmalin", "createdAt": "2020-10-28T08:04:25Z", "path": "modules/core/src/main/java/org/apache/ignite/mxbean/CacheMetricsMXBean.java", "diffHunk": "@@ -351,4 +351,60 @@\n     @MXBeanDescription(\"Number of keys processed during index rebuilding. To get remaining number of keys for \" +\n         \"rebuilding, subtract current value from cache size.\")\n     @Override public long getIndexRebuildKeysProcessed();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"Number of already rebalanced keys.\")\n+    @Override public long getRebalancedKeys();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"Number estimated to rebalance keys.\")\n+    @Override public long getEstimatedRebalancingKeys();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The number of partitions need to be cleared before actual rebalance start.\")\n+    @Override public long getRebalanceClearingPartitionsLeft();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The mean time to execute cache invokes (time in \u00b5s).\")\n+    @Override public float getEntryProcessorAverageInvocationTime();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The percentage of invocations on keys, which exist in cache.\")", "originalCommit": "b5c88bd867397762764ddb9668fa4cb6d2042677", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0NTA4Mw==", "url": "https://github.com/gridgain/gridgain/pull/1521#discussion_r513245083", "bodyText": "The total number of invocations on keys[comma not needed] which exist in the cache.", "author": "vmalin", "createdAt": "2020-10-28T08:04:53Z", "path": "modules/core/src/main/java/org/apache/ignite/mxbean/CacheMetricsMXBean.java", "diffHunk": "@@ -351,4 +351,60 @@\n     @MXBeanDescription(\"Number of keys processed during index rebuilding. To get remaining number of keys for \" +\n         \"rebuilding, subtract current value from cache size.\")\n     @Override public long getIndexRebuildKeysProcessed();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"Number of already rebalanced keys.\")\n+    @Override public long getRebalancedKeys();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"Number estimated to rebalance keys.\")\n+    @Override public long getEstimatedRebalancingKeys();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The number of partitions need to be cleared before actual rebalance start.\")\n+    @Override public long getRebalanceClearingPartitionsLeft();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The mean time to execute cache invokes (time in \u00b5s).\")\n+    @Override public float getEntryProcessorAverageInvocationTime();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The percentage of invocations on keys, which exist in cache.\")\n+    @Override public float getEntryProcessorHitPercentage();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The total number of invocations on keys, which exist in cache.\")", "originalCommit": "b5c88bd867397762764ddb9668fa4cb6d2042677", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0NTg3Ng==", "url": "https://github.com/gridgain/gridgain/pull/1521#discussion_r513245876", "bodyText": "The total number of invocations on keys[comma not needed] which don't exist in the cache.", "author": "vmalin", "createdAt": "2020-10-28T08:06:30Z", "path": "modules/core/src/main/java/org/apache/ignite/mxbean/CacheMetricsMXBean.java", "diffHunk": "@@ -351,4 +351,60 @@\n     @MXBeanDescription(\"Number of keys processed during index rebuilding. To get remaining number of keys for \" +\n         \"rebuilding, subtract current value from cache size.\")\n     @Override public long getIndexRebuildKeysProcessed();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"Number of already rebalanced keys.\")\n+    @Override public long getRebalancedKeys();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"Number estimated to rebalance keys.\")\n+    @Override public long getEstimatedRebalancingKeys();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The number of partitions need to be cleared before actual rebalance start.\")\n+    @Override public long getRebalanceClearingPartitionsLeft();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The mean time to execute cache invokes (time in \u00b5s).\")\n+    @Override public float getEntryProcessorAverageInvocationTime();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The percentage of invocations on keys, which exist in cache.\")\n+    @Override public float getEntryProcessorHitPercentage();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The total number of invocations on keys, which exist in cache.\")\n+    @Override public long getEntryProcessorHits();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The total number of cache invocations.\")\n+    @Override public long getEntryProcessorInvocations();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"So far, the maximum time to execute cache invokes (time in \u00b5s).\")\n+    @Override public float getEntryProcessorMaxInvocationTime();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"So far, the minimum time to execute cache invokes (time in \u00b5s).\")\n+    @Override public float getEntryProcessorMinInvocationTime();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The total number of invocations on keys, which don't exist in cache.\")", "originalCommit": "b5c88bd867397762764ddb9668fa4cb6d2042677", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0NjE4NQ==", "url": "https://github.com/gridgain/gridgain/pull/1521#discussion_r513246185", "bodyText": "The percentage of invocations on keys[comma not needed] which don't exist in the cache.", "author": "vmalin", "createdAt": "2020-10-28T08:07:05Z", "path": "modules/core/src/main/java/org/apache/ignite/mxbean/CacheMetricsMXBean.java", "diffHunk": "@@ -351,4 +351,60 @@\n     @MXBeanDescription(\"Number of keys processed during index rebuilding. To get remaining number of keys for \" +\n         \"rebuilding, subtract current value from cache size.\")\n     @Override public long getIndexRebuildKeysProcessed();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"Number of already rebalanced keys.\")\n+    @Override public long getRebalancedKeys();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"Number estimated to rebalance keys.\")\n+    @Override public long getEstimatedRebalancingKeys();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The number of partitions need to be cleared before actual rebalance start.\")\n+    @Override public long getRebalanceClearingPartitionsLeft();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The mean time to execute cache invokes (time in \u00b5s).\")\n+    @Override public float getEntryProcessorAverageInvocationTime();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The percentage of invocations on keys, which exist in cache.\")\n+    @Override public float getEntryProcessorHitPercentage();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The total number of invocations on keys, which exist in cache.\")\n+    @Override public long getEntryProcessorHits();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The total number of cache invocations.\")\n+    @Override public long getEntryProcessorInvocations();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"So far, the maximum time to execute cache invokes (time in \u00b5s).\")\n+    @Override public float getEntryProcessorMaxInvocationTime();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"So far, the minimum time to execute cache invokes (time in \u00b5s).\")\n+    @Override public float getEntryProcessorMinInvocationTime();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The total number of invocations on keys, which don't exist in cache.\")\n+    @Override public long getEntryProcessorMisses();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The percentage of invocations on keys, which don't exist in cache.\")", "originalCommit": "b5c88bd867397762764ddb9668fa4cb6d2042677", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0NjU0Nw==", "url": "https://github.com/gridgain/gridgain/pull/1521#discussion_r513246547", "bodyText": "The total number of cache invocations which caused an update.", "author": "vmalin", "createdAt": "2020-10-28T08:07:48Z", "path": "modules/core/src/main/java/org/apache/ignite/mxbean/CacheMetricsMXBean.java", "diffHunk": "@@ -351,4 +351,60 @@\n     @MXBeanDescription(\"Number of keys processed during index rebuilding. To get remaining number of keys for \" +\n         \"rebuilding, subtract current value from cache size.\")\n     @Override public long getIndexRebuildKeysProcessed();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"Number of already rebalanced keys.\")\n+    @Override public long getRebalancedKeys();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"Number estimated to rebalance keys.\")\n+    @Override public long getEstimatedRebalancingKeys();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The number of partitions need to be cleared before actual rebalance start.\")\n+    @Override public long getRebalanceClearingPartitionsLeft();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The mean time to execute cache invokes (time in \u00b5s).\")\n+    @Override public float getEntryProcessorAverageInvocationTime();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The percentage of invocations on keys, which exist in cache.\")\n+    @Override public float getEntryProcessorHitPercentage();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The total number of invocations on keys, which exist in cache.\")\n+    @Override public long getEntryProcessorHits();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The total number of cache invocations.\")\n+    @Override public long getEntryProcessorInvocations();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"So far, the maximum time to execute cache invokes (time in \u00b5s).\")\n+    @Override public float getEntryProcessorMaxInvocationTime();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"So far, the minimum time to execute cache invokes (time in \u00b5s).\")\n+    @Override public float getEntryProcessorMinInvocationTime();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The total number of invocations on keys, which don't exist in cache.\")\n+    @Override public long getEntryProcessorMisses();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The percentage of invocations on keys, which don't exist in cache.\")\n+    @Override public float getEntryProcessorMissPercentage();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The total number of cache invocations, caused update.\")", "originalCommit": "b5c88bd867397762764ddb9668fa4cb6d2042677", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0Njc3Mw==", "url": "https://github.com/gridgain/gridgain/pull/1521#discussion_r513246773", "bodyText": "The total number of cache invocations which caused no updates.", "author": "vmalin", "createdAt": "2020-10-28T08:08:17Z", "path": "modules/core/src/main/java/org/apache/ignite/mxbean/CacheMetricsMXBean.java", "diffHunk": "@@ -351,4 +351,60 @@\n     @MXBeanDescription(\"Number of keys processed during index rebuilding. To get remaining number of keys for \" +\n         \"rebuilding, subtract current value from cache size.\")\n     @Override public long getIndexRebuildKeysProcessed();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"Number of already rebalanced keys.\")\n+    @Override public long getRebalancedKeys();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"Number estimated to rebalance keys.\")\n+    @Override public long getEstimatedRebalancingKeys();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The number of partitions need to be cleared before actual rebalance start.\")\n+    @Override public long getRebalanceClearingPartitionsLeft();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The mean time to execute cache invokes (time in \u00b5s).\")\n+    @Override public float getEntryProcessorAverageInvocationTime();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The percentage of invocations on keys, which exist in cache.\")\n+    @Override public float getEntryProcessorHitPercentage();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The total number of invocations on keys, which exist in cache.\")\n+    @Override public long getEntryProcessorHits();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The total number of cache invocations.\")\n+    @Override public long getEntryProcessorInvocations();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"So far, the maximum time to execute cache invokes (time in \u00b5s).\")\n+    @Override public float getEntryProcessorMaxInvocationTime();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"So far, the minimum time to execute cache invokes (time in \u00b5s).\")\n+    @Override public float getEntryProcessorMinInvocationTime();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The total number of invocations on keys, which don't exist in cache.\")\n+    @Override public long getEntryProcessorMisses();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The percentage of invocations on keys, which don't exist in cache.\")\n+    @Override public float getEntryProcessorMissPercentage();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The total number of cache invocations, caused update.\")\n+    @Override public long getEntryProcessorPuts();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The total number of cache invocations, caused no updates.\")", "originalCommit": "b5c88bd867397762764ddb9668fa4cb6d2042677", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0NzE1OQ==", "url": "https://github.com/gridgain/gridgain/pull/1521#discussion_r513247159", "bodyText": "The total number of cache invocations which caused a removal.", "author": "vmalin", "createdAt": "2020-10-28T08:09:04Z", "path": "modules/core/src/main/java/org/apache/ignite/mxbean/CacheMetricsMXBean.java", "diffHunk": "@@ -351,4 +351,60 @@\n     @MXBeanDescription(\"Number of keys processed during index rebuilding. To get remaining number of keys for \" +\n         \"rebuilding, subtract current value from cache size.\")\n     @Override public long getIndexRebuildKeysProcessed();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"Number of already rebalanced keys.\")\n+    @Override public long getRebalancedKeys();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"Number estimated to rebalance keys.\")\n+    @Override public long getEstimatedRebalancingKeys();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The number of partitions need to be cleared before actual rebalance start.\")\n+    @Override public long getRebalanceClearingPartitionsLeft();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The mean time to execute cache invokes (time in \u00b5s).\")\n+    @Override public float getEntryProcessorAverageInvocationTime();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The percentage of invocations on keys, which exist in cache.\")\n+    @Override public float getEntryProcessorHitPercentage();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The total number of invocations on keys, which exist in cache.\")\n+    @Override public long getEntryProcessorHits();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The total number of cache invocations.\")\n+    @Override public long getEntryProcessorInvocations();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"So far, the maximum time to execute cache invokes (time in \u00b5s).\")\n+    @Override public float getEntryProcessorMaxInvocationTime();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"So far, the minimum time to execute cache invokes (time in \u00b5s).\")\n+    @Override public float getEntryProcessorMinInvocationTime();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The total number of invocations on keys, which don't exist in cache.\")\n+    @Override public long getEntryProcessorMisses();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The percentage of invocations on keys, which don't exist in cache.\")\n+    @Override public float getEntryProcessorMissPercentage();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The total number of cache invocations, caused update.\")\n+    @Override public long getEntryProcessorPuts();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The total number of cache invocations, caused no updates.\")\n+    @Override public long getEntryProcessorReadOnlyInvocations();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The total number of cache invocations, caused removal.\")", "originalCommit": "b5c88bd867397762764ddb9668fa4cb6d2042677", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c8c040d7b2a75723a26f719f0eaf0f300bc5542a", "url": "https://github.com/gridgain/gridgain/commit/c8c040d7b2a75723a26f719f0eaf0f300bc5542a", "message": "GG-31129 Cache metrics without description. Corrections after the code review", "committedDate": "2020-10-28T21:32:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc1MzI4Mw==", "url": "https://github.com/gridgain/gridgain/pull/1521#discussion_r519753283", "bodyText": "rabalance -> rebalance", "author": "alievmirza", "createdAt": "2020-11-09T11:55:17Z", "path": "modules/core/src/main/java/org/apache/ignite/mxbean/CacheMetricsMXBean.java", "diffHunk": "@@ -351,4 +351,60 @@\n     @MXBeanDescription(\"Number of keys processed during index rebuilding. To get remaining number of keys for \" +\n         \"rebuilding, subtract current value from cache size.\")\n     @Override public long getIndexRebuildKeysProcessed();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"Number of already rebalanced keys.\")\n+    @Override public long getRebalancedKeys();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"Estimated total number of keys to rabalance.\")", "originalCommit": "c8c040d7b2a75723a26f719f0eaf0f300bc5542a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1d795169ee433640ec474d5cce579d9933f0f1e7", "url": "https://github.com/gridgain/gridgain/commit/1d795169ee433640ec474d5cce579d9933f0f1e7", "message": "GG-31129 Cache metrics without description. Corrections after the code review. Part 2", "committedDate": "2020-11-09T15:19:14Z", "type": "commit"}]}