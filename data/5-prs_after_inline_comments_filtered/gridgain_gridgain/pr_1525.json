{"pr_number": 1525, "pr_title": "GG-31147 TcpDiscoverySpi incomprehensible metric description", "pr_createdAt": "2020-10-28T08:59:41Z", "pr_url": "https://github.com/gridgain/gridgain/pull/1525", "timeline": [{"oid": "965f182633046f359e6a3edccee3c51d054cb813", "url": "https://github.com/gridgain/gridgain/commit/965f182633046f359e6a3edccee3c51d054cb813", "message": "GG-31147 TcpDiscoverySpi incomprehensible metric description", "committedDate": "2020-10-17T00:53:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI3ODYzMA==", "url": "https://github.com/gridgain/gridgain/pull/1525#discussion_r513278630", "bodyText": "The frequency with which coordinator clean_s_ IP finder and keeps it in the correct state, unregistering addresses of the\nnodes that have left the topology.", "author": "vmalin", "createdAt": "2020-10-28T09:02:54Z", "path": "modules/core/src/main/java/org/apache/ignite/spi/discovery/tcp/TcpDiscoverySpi.java", "diffHunk": "@@ -382,7 +386,10 @@\n     /** Default SO_LINGER to use for socket. Set negative to disable, non-negative to enable, default is {@DFLT_SO_LINGER }. */\n     private int soLinger = DFLT_SO_LINGER;\n \n-    /** IP finder clean frequency. */\n+    /**\n+     * Frequency which coordinator clean IP finder and keeps it in the correct state, unregistering addresses of the\n+     * nodes that has left the topology.\n+     */", "originalCommit": "965f182633046f359e6a3edccee3c51d054cb813", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI3OTI4Mw==", "url": "https://github.com/gridgain/gridgain/pull/1525#discussion_r513279283", "bodyText": "Gets frequency with which coordinator clean_s_ IP finder and keeps it in the correct state, unregistering addresses of\nthe nodes that have left the topology.", "author": "vmalin", "createdAt": "2020-10-28T09:04:02Z", "path": "modules/core/src/main/java/org/apache/ignite/spi/discovery/tcp/TcpDiscoverySpi.java", "diffHunk": "@@ -837,7 +844,8 @@ public TcpDiscoverySpi setStatisticsPrintFrequency(long statsPrintFreq) {\n     }\n \n     /**\n-     * Gets IP finder clean frequency.\n+     * Gets frequency which coordinator clean IP finder and keeps it in the correct state, unregistering addresses of\n+     * the nodes that has left the topology.", "originalCommit": "965f182633046f359e6a3edccee3c51d054cb813", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI4MDMwNA==", "url": "https://github.com/gridgain/gridgain/pull/1525#discussion_r513280304", "bodyText": "Gets frequency with which coordinator clean_s_ IP finder and keeps it in the correct state, unregistering addresses of the nodes that have left the topology.", "author": "vmalin", "createdAt": "2020-10-28T09:05:50Z", "path": "modules/core/src/main/java/org/apache/ignite/spi/discovery/tcp/TcpDiscoverySpiMBean.java", "diffHunk": "@@ -94,11 +94,11 @@\n     public int getThreadPriority();\n \n     /**\n-     * Gets IP finder clean frequency.\n+     * Gets frequency which coordinator clean IP finder and keeps it in the correct state, unregistering addresses of the nodes that has left the topology.", "originalCommit": "965f182633046f359e6a3edccee3c51d054cb813", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI4MDkzNw==", "url": "https://github.com/gridgain/gridgain/pull/1525#discussion_r513280937", "bodyText": "The frequency with which coordinator clean_s_ IP finder and keeps it in the correct state, unregistering addresses of the nodes that have left the topology.", "author": "vmalin", "createdAt": "2020-10-28T09:06:49Z", "path": "modules/core/src/main/java/org/apache/ignite/spi/discovery/tcp/TcpDiscoverySpiMBean.java", "diffHunk": "@@ -94,11 +94,11 @@\n     public int getThreadPriority();\n \n     /**\n-     * Gets IP finder clean frequency.\n+     * Gets frequency which coordinator clean IP finder and keeps it in the correct state, unregistering addresses of the nodes that has left the topology.\n      *\n      * @return IP finder clean frequency.\n      */\n-    @MXBeanDescription(\"IP finder clean frequency.\")\n+    @MXBeanDescription(\"Gets frequency which coordinator clean IP finder and keeps it in the correct state, unregistering addresses of the nodes that has left the topology.\")", "originalCommit": "965f182633046f359e6a3edccee3c51d054cb813", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI4MTcxOA==", "url": "https://github.com/gridgain/gridgain/pull/1525#discussion_r513281718", "bodyText": "Get_s_ join timeout, in milliseconds. Time to wait for joining. If node cannot connect to any address from the IP\nfinder, the node continues to try to join during this timeout. If all addresses still do not respond, an\nexception will occur and the node will fail to start. If 0 is specified, it means wait forever.", "author": "vmalin", "createdAt": "2020-10-28T09:08:04Z", "path": "modules/core/src/main/java/org/apache/ignite/spi/discovery/tcp/TcpDiscoverySpiMBean.java", "diffHunk": "@@ -246,11 +246,16 @@\n     public long getSocketTimeout();\n \n     /**\n-     * Gets join timeout.\n+     * Get join timeout, in milliseconds. Time to wait for joining. If node cannot connect to any address from the IP\n+     * finder, the node continues to try to join during this timeout. If all addresses still do not respond, an\n+     * exception will occur and the node will fail to start. If 0 is specified, it means wait forever.", "originalCommit": "965f182633046f359e6a3edccee3c51d054cb813", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI4MjUzNA==", "url": "https://github.com/gridgain/gridgain/pull/1525#discussion_r513282534", "bodyText": "The join timeout, in milliseconds. Time to wait for joining.  If node cannot connect to any address from the IP finder, the node continues to try to join during this timeout. If all addresses still do not respond, an exception will occur and the node will fail to start. If 0 is specified, it means wait forever.", "author": "vmalin", "createdAt": "2020-10-28T09:09:16Z", "path": "modules/core/src/main/java/org/apache/ignite/spi/discovery/tcp/TcpDiscoverySpiMBean.java", "diffHunk": "@@ -246,11 +246,16 @@\n     public long getSocketTimeout();\n \n     /**\n-     * Gets join timeout.\n+     * Get join timeout, in milliseconds. Time to wait for joining. If node cannot connect to any address from the IP\n+     * finder, the node continues to try to join during this timeout. If all addresses still do not respond, an\n+     * exception will occur and the node will fail to start. If 0 is specified, it means wait forever.\n      *\n      * @return Join timeout.\n      */\n-    @MXBeanDescription(\"Join timeout.\")\n+    @MXBeanDescription(\"Get join timeout, in milliseconds. Time to wait for joining. \" +\n+        \"If node cannot connect to any address from the IP finder, the node continues to try to join during this timeout. \" +\n+        \"If all addresses still do not respond, an exception will occur and the node will fail to start. \" +\n+        \"If 0 is specified, it means wait forever.\")", "originalCommit": "965f182633046f359e6a3edccee3c51d054cb813", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5207e1e016cd4ae992b4fd866f428355a8819839", "url": "https://github.com/gridgain/gridgain/commit/5207e1e016cd4ae992b4fd866f428355a8819839", "message": "GG-31147 TcpDiscoverySpi incomprehensible metric description. Corrections after the review", "committedDate": "2020-10-28T20:56:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc0OTU3OA==", "url": "https://github.com/gridgain/gridgain/pull/1525#discussion_r519749578", "bodyText": "unregister_s", "author": "alievmirza", "createdAt": "2020-11-09T11:48:48Z", "path": "modules/core/src/main/java/org/apache/ignite/spi/discovery/tcp/TcpDiscoverySpi.java", "diffHunk": "@@ -382,7 +386,10 @@\n     /** Default SO_LINGER to use for socket. Set negative to disable, non-negative to enable, default is {@DFLT_SO_LINGER }. */\n     private int soLinger = DFLT_SO_LINGER;\n \n-    /** IP finder clean frequency. */\n+    /**\n+     * The frequency with which coordinator cleans IP finder and keeps it in the correct state, unregistering addresses of the", "originalCommit": "5207e1e016cd4ae992b4fd866f428355a8819839", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTg5NzMzOA==", "url": "https://github.com/gridgain/gridgain/pull/1525#discussion_r519897338", "bodyText": "Maybe \"unregistered\"", "author": "a-polyakov", "createdAt": "2020-11-09T15:26:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc0OTU3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDY4MTY2Nw==", "url": "https://github.com/gridgain/gridgain/pull/1525#discussion_r520681667", "bodyText": "Let's rewrite it in an easier way, \"The frequency with which coordinator cleans IP finder and keeps it in the correct state, which means that coordinator unregisters addresses of the nodes that have left the topology and re-registries missing addresses.\"  Also, it might be helpful to write a link to org.apache.ignite.spi.discovery.tcp.ServerImpl.IpFinderCleaner#cleanIpFinder in javadoc.\nAlso it would be good to fix javadoc for org.apache.ignite.spi.discovery.tcp.ServerImpl.IpFinderCleaner", "author": "alievmirza", "createdAt": "2020-11-10T16:07:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc0OTU3OA=="}], "type": "inlineReview"}, {"oid": "e4eb46995f2cc0907337f5fa0a6ff16d3417a14d", "url": "https://github.com/gridgain/gridgain/commit/e4eb46995f2cc0907337f5fa0a6ff16d3417a14d", "message": "GG-31147 TcpDiscoverySpi incomprehensible metric description. Corrections after the review. Part 2", "committedDate": "2020-12-16T03:22:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDMwNzUwNg==", "url": "https://github.com/gridgain/gridgain/pull/1525#discussion_r544307506", "bodyText": "{\"link -> {@link", "author": "alievmirza", "createdAt": "2020-12-16T13:42:56Z", "path": "modules/core/src/main/java/org/apache/ignite/spi/discovery/tcp/ServerImpl.java", "diffHunk": "@@ -2280,10 +2280,12 @@ ClusterNode getNode0(UUID nodeId) {\n \n     /**\n      * Thread that cleans IP finder and keeps it in the correct state, unregistering\n-     * addresses of the nodes that has left the topology.\n+     * addresses of the nodes that has left the topology and re-registries missing addresses.\n      * <p>\n      * This thread should run only on coordinator node and will clean IP finder\n      * if and only if {@link org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder#isShared()} is {@code true}.\n+     * <p>\n+     * Run with frequency {\"link org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi#ipFinderCleanFreq}", "originalCommit": "e4eb46995f2cc0907337f5fa0a6ff16d3417a14d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "dc879c87b26f3d0c84b1cd3be545b884015351dd", "url": "https://github.com/gridgain/gridgain/commit/dc879c87b26f3d0c84b1cd3be545b884015351dd", "message": "GG-31147 TcpDiscoverySpi incomprehensible metric description. Corrections after the review. Part 3", "committedDate": "2020-12-28T03:44:51Z", "type": "commit"}]}