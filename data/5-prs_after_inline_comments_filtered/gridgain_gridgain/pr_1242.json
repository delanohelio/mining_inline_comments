{"pr_number": 1242, "pr_title": "GG-29788 Unclear regression in 2.5.22 and 8.7.20", "pr_createdAt": "2020-06-16T16:50:08Z", "pr_url": "https://github.com/gridgain/gridgain/pull/1242", "timeline": [{"oid": "6a1f34af6f5dac2f38d1a3ce41a73986fdf6a87d", "url": "https://github.com/gridgain/gridgain/commit/6a1f34af6f5dac2f38d1a3ce41a73986fdf6a87d", "message": "GG-29788 Unclear regression in 2.5.22 and 8.7.20", "committedDate": "2020-06-17T15:37:56Z", "type": "commit"}, {"oid": "6a1f34af6f5dac2f38d1a3ce41a73986fdf6a87d", "url": "https://github.com/gridgain/gridgain/commit/6a1f34af6f5dac2f38d1a3ce41a73986fdf6a87d", "message": "GG-29788 Unclear regression in 2.5.22 and 8.7.20", "committedDate": "2020-06-17T15:37:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjEyNjIzOA==", "url": "https://github.com/gridgain/gridgain/pull/1242#discussion_r442126238", "bodyText": "Should \"it.hasNext()\" be changed to \"hasNext()\" here?", "author": "AMashenkov", "createdAt": "2020-06-18T10:25:24Z", "path": "modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/ConcurrentStripedPool.java", "diffHunk": "@@ -123,37 +123,29 @@ public void clear() {\n     /** {@inheritDoc} */\n     @Override public @NotNull Iterator<E> iterator() {\n         return new Iterator<E>() {\n-            int idx = 0;\n-            Iterator<E> it = stripePools[idx].iterator();\n+            private int idx;\n+\n+            private Iterator<E> it = stripePools[idx].iterator();\n \n             @Override public boolean hasNext() {\n-                if (it.hasNext())\n-                    return true;\n+                while (true) {\n+                    if (it.hasNext())\n+                        return true;\n \n-                idx++;\n+                    if (++idx >= stripes)\n+                        break;\n \n-                if (idx < stripes) {\n                     it = stripePools[idx].iterator();\n-\n-                    return it.hasNext();\n                 }\n-                else\n-                    return false;\n+\n+                return false;\n             }\n \n             @Override public E next() {\n                 if (it.hasNext())", "originalCommit": "6a1f34af6f5dac2f38d1a3ce41a73986fdf6a87d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjEzMjg5Mw==", "url": "https://github.com/gridgain/gridgain/pull/1242#discussion_r442132893", "bodyText": "it MUST, thx", "author": "korlov42", "createdAt": "2020-06-18T10:38:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjEyNjIzOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjEyODMwOQ==", "url": "https://github.com/gridgain/gridgain/pull/1242#discussion_r442128309", "bodyText": "Let's convert stmtTimeout to nanos as it is \"final\".", "author": "AMashenkov", "createdAt": "2020-06-18T10:29:23Z", "path": "modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/ConnectionManager.java", "diffHunk": "@@ -224,10 +224,8 @@ public void stop() {\n      * Called periodically to clean up the statement cache.\n      */\n     private void cleanupStatements() {\n-        long now = U.currentTimeMillis();\n-\n         connPool.forEach(c -> {\n-            if (now - c.statementCache().lastUsage() > stmtTimeout)\n+            if (c.statementCache().inactiveFor(stmtTimeout))", "originalCommit": "6a1f34af6f5dac2f38d1a3ce41a73986fdf6a87d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjEzNjY1Nw==", "url": "https://github.com/gridgain/gridgain/pull/1242#discussion_r442136657", "bodyText": "fixed", "author": "korlov42", "createdAt": "2020-06-18T10:45:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjEyODMwOQ=="}], "type": "inlineReview"}, {"oid": "25fa4a9375dbaf0063dfcce8e32d8449752a933c", "url": "https://github.com/gridgain/gridgain/commit/25fa4a9375dbaf0063dfcce8e32d8449752a933c", "message": "minors after review", "committedDate": "2020-06-18T10:41:42Z", "type": "commit"}]}