{"pr_number": 5933, "pr_title": "[feat] Allow configuration of yaml minimize quotes", "pr_createdAt": "2020-04-15T01:57:36Z", "pr_url": "https://github.com/OpenAPITools/openapi-generator/pull/5933", "timeline": [{"oid": "5ed55b96ffdfd67a9d1671ac93b5706aeddadaee", "url": "https://github.com/OpenAPITools/openapi-generator/commit/5ed55b96ffdfd67a9d1671ac93b5706aeddadaee", "message": "[feat] Allow configuration of yaml minimize quotes\n\nThere are cases where minimizing quotes results in invalid YAML. For\nexample, an input YAML with string \"1234_1234\" will be converted to YAML\nvalue 1234_1234 which is an int in YAML 1.1\n(https://yaml.org/type/int.html)\n\nTHe only option in these cases is to either:\n\n* Revert the option completely to always quote values\n* Provide a user-customization to disable quotes minimization\n\nThis applies the latter with the assumption that this is an edge case\nand users who are unaffected will default to the \"prettier\" version.\n\nAn alternative would be to write a custom serializer for strings, and if\nthey are in the format of of any of the valid formats defined in YAML:\n\n[-+]?0b[0-1_]+ # (base 2)\n|[-+]?0[0-7_]+ # (base 8)\n|[-+]?(0|[1-9][0-9_]*) # (base 10)\n|[-+]?0x[0-9a-fA-F_]+ # (base 16)\n|[-+]?[1-9][0-9_]*(:[0-5]?[0-9])+ # (base 60)\n\nThen wrap the result in quotes. That approach was not taken because of\nthe potential for significant performance impact on very large specs,\nwhich our users are often tasked with transforming.", "committedDate": "2020-04-15T01:48:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc0OTY5MA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5933#discussion_r412749690", "bodyText": "@jimschubert will line 598 generateYAMLSpecFile(objs); be removed because we're now generating the spec in JSON? or it's intended to generate the spec in both YAML and JSON?", "author": "wing328", "createdAt": "2020-04-22T07:45:24Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/PythonAbstractConnexionServerCodegen.java", "diffHunk": "@@ -594,6 +594,7 @@ private void addSecurityExtensions(OpenAPI openAPI) {\n             }\n         }\n \n+        generateJSONSpecFile(objs);", "originalCommit": "5ed55b96ffdfd67a9d1671ac93b5706aeddadaee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjU5Njc3NA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5933#discussion_r416596774", "bodyText": "I think they should both be included for consistency across all generators, tbh. We're limiting what people can extend or customize when we don't have a consistent model bound to templates.", "author": "jimschubert", "createdAt": "2020-04-28T13:06:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc0OTY5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY1MTk2MA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5933#discussion_r416651960", "bodyText": "As discussed, this is more like a proactive enhancement that the user didn't ask for. I'm ok with that and let's see if there are users asking for something similar in other generators.", "author": "wing328", "createdAt": "2020-04-28T14:19:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc0OTY5MA=="}], "type": "inlineReview"}]}