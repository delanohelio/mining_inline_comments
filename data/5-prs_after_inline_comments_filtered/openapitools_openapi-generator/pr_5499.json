{"pr_number": 5499, "pr_title": "Issue 5497: Support the use of tags in the delegated Spring Kotlin generator.", "pr_createdAt": "2020-03-02T10:09:00Z", "pr_url": "https://github.com/OpenAPITools/openapi-generator/pull/5499", "timeline": [{"oid": "542ec33fdb3efeb039aa8ce3b36dce8a3c3cde8e", "url": "https://github.com/OpenAPITools/openapi-generator/commit/542ec33fdb3efeb039aa8ce3b36dce8a3c3cde8e", "message": "Issue 5497: Support the use of tags in the delegated Spring Kotlin generator.", "committedDate": "2020-03-02T15:41:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk1NjExOA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5499#discussion_r434956118", "bodyText": "This changes previous behavior for library.equals(SPRING_BOOT) && this.delegatePattern and would be a breaking change. Was this intentional? If so, can you speak toward the intention? To me it looks like this.delegatePattern was accidentally removed.", "author": "jimschubert", "createdAt": "2020-06-04T02:24:57Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/KotlinSpringServerCodegen.java", "diffHunk": "@@ -440,7 +451,7 @@ public void processOpts() {\n \n     @Override\n     public void addOperationToGroup(String tag, String resourcePath, Operation operation, CodegenOperation co, Map<String, List<CodegenOperation>> operations) {\n-        if (library.equals(SPRING_BOOT) && this.delegatePattern) {\n+        if (library.equals(SPRING_BOOT) && !useTags) {", "originalCommit": "542ec33fdb3efeb039aa8ce3b36dce8a3c3cde8e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTkzMjY5Mg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5499#discussion_r435932692", "bodyText": "Thanks for the comment Jim. The replacement of this.delegatePattern with useTags was intentional. I'm currently using the delegate pattern with tags in my Java project and this change was needed to get the Kotlin generator to produce equivalent code to the Java one. In fact if you look at SpringCodegen.java you can see it does something very similar\nif ((library.equals(SPRING_BOOT) || library.equals(SPRING_MVC_LIBRARY)) && !useTags) {\n\nI understand that this is a breaking change but I'm not sure we can support tags properly while keeping backwards compatibility.", "author": "dumitrupetrusca-okta", "createdAt": "2020-06-05T13:48:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk1NjExOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIwNjYzOA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5499#discussion_r436206638", "bodyText": "Fair enough. I'll mark this PR as a breaking change. Thanks for the explanation.", "author": "jimschubert", "createdAt": "2020-06-05T23:34:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk1NjExOA=="}], "type": "inlineReview"}, {"oid": "68ee2cc2d352202bff1c51e420bd5718a0412b51", "url": "https://github.com/OpenAPITools/openapi-generator/commit/68ee2cc2d352202bff1c51e420bd5718a0412b51", "message": "Merge branch 'master' into dumitru-petrusca-issue5497-use-tags-kotlin\n\n* master: (586 commits)\n  Fix typescript generator for parameter collectionFormat for pipes ssv (#6553)\n  [C++][Pistache] Catch HttpError from user-provided handler (#6520)\n  remove scala related profile from the pom (#6554)\n  move ruby tests to travis (#6555)\n  [Java][jersey2] fix cast error for default value in DateTimeOffset object (#6547)\n  [Swift] fix GET request with array parameter (#6549)\n  [kotlin][spring] Fix ApiUtil compilation (#6084)\n  update python samples\n  [Python] Fixed docstrings in api.mustache (#6391)\n  [BUG][python] Support named arrays (#6493)\n  [Go] whitelist AdditionalProperties in the field name (#6543)\n  [kotlin][client] remove tabs usage (#6526)\n  [PS] automatically derive discriminator mapping for oneOf/anyOf  (#6542)\n  [C++][Ue4] various bus fixes (#6539)\n  Fix incorrect npx command (#6537)\n  update pester to 5.x (#6536)\n  comment out openapi3 java jersey2-java8 tests\n  add additional properties support to powershell client generator (#6528)\n  [Go][Experimental] Support additionalProperties (#6525)\n  #5476 [kotlin] [spring] fix swagger and spring annotation for defaultValue (#6101)\n  ...", "committedDate": "2020-06-05T23:37:38Z", "type": "commit"}]}