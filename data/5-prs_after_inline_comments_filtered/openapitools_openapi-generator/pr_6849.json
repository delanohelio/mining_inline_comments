{"pr_number": 6849, "pr_title": "[core] Add x-is-free-form vendor extension", "pr_createdAt": "2020-07-03T02:40:13Z", "pr_url": "https://github.com/OpenAPITools/openapi-generator/pull/6849", "timeline": [{"oid": "d1a8df0ea4f2b9dcde84bda157d3cde5493d8586", "url": "https://github.com/OpenAPITools/openapi-generator/commit/d1a8df0ea4f2b9dcde84bda157d3cde5493d8586", "message": "[core] Add x-is-free-form vendor extension\n\nThis adds an x-is-free-form vendor extension to allow users to skip our\n\"free-form\" logic which would previously prevent object schemas with no\nproperties to be considered \"free-form\". The previous behavior was due\nin part to Swagger Parser not exposing `additionalProperties: false` to\nus (which should be similar behavior to this extension).\n\nA free-form object is considered a dynamic object with any number of\nproperties/types. DefaultGenerator does not allow for generation of\nmodels considered free-form. However, a base type with no properties and\nno additional properties is allowed by OpenAPI Specification and is\nmeaningful in many languages (e.g. \"marker interfaces\" or abstract\nclosed types).", "committedDate": "2020-07-03T02:35:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA4MTAyOA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6849#discussion_r451081028", "bodyText": "Use FREE_FORM_EXPLICIT to match Java style for constants?", "author": "jeff9finger", "createdAt": "2020-07-07T19:04:52Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java", "diffHunk": "@@ -65,6 +65,8 @@\n     // A vendor extension to track the value of the 'disallowAdditionalPropertiesIfNotPresent' CLI\n     private static final String disallowAdditionalPropertiesIfNotPresent = \"x-disallow-additional-properties-if-not-present\";\n \n+    private static final String freeFormExplicit = \"x-is-free-form\";", "originalCommit": "d1a8df0ea4f2b9dcde84bda157d3cde5493d8586", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQ5MTA0MQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6849#discussion_r451491041", "bodyText": "I would like to do this whenever we get more caught up on pull requests, but matched other constant styles in the file to avoid potential merge conflicts elsewhere.\nWe do track Sonar and this is a rule that's evaluated.", "author": "jimschubert", "createdAt": "2020-07-08T12:07:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA4MTAyOA=="}], "type": "inlineReview"}, {"oid": "5e6d94ef7b2f491aa338044d71c264299bed5fa0", "url": "https://github.com/OpenAPITools/openapi-generator/commit/5e6d94ef7b2f491aa338044d71c264299bed5fa0", "message": "Merge branch 'master' into allow-empty-models\n\n* master: (121 commits)\n  [PowerShell] better publishing workflow (#7114)\n  [aspnetcore] Typo issues in docs and generated code (#7094)\n  fix http signaure auth in build.sbt (#7110)\n  fix for the issue facing spec invlolving arrayschema structure with ref (#6310)\n  [csharp-netcore] added cancellation tokens to async calls (#7077)\n  [PS] Allow CI to publish the module (#7091)\n  [Dart] Treat float as double (#6924)\n  [Java][jersey2]Fix gradle HttpSignatureAuth dependencies (#7096)\n  move maven,gradle tests to shipppable ci (#7108)\n  [MARKDOWN] Fix issue 6089 with property and parameter names (#6105)\n  [BUG] Multi-Part content type in response ignores properties of composed schema (allOf/oneOf) (#6073)\n  [online] Fix for version conflicts with springfox/boot (#7102)\n  skip some installations to shorten build time\n  [Go][Exp] better code format (#7088)\n  Fix Shippable CI (#7097)\n  typescript-node: clean up require and import (#6947)\n  commented out perl, bash tests to reduce build time\n  Add a link to conference paper (#7086)\n  Add a link to the blog post at qiita (#7084)\n  migrate typescript.sh to new config format (#7078)\n  ...", "committedDate": "2020-08-03T22:28:27Z", "type": "commit"}]}