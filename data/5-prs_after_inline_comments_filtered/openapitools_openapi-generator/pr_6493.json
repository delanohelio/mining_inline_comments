{"pr_number": 6493, "pr_title": "[BUG][python] Support named arrays", "pr_createdAt": "2020-05-29T16:33:44Z", "pr_url": "https://github.com/OpenAPITools/openapi-generator/pull/6493", "timeline": [{"oid": "c43c1708891aa2e46721de6f31bc230a6716c3b6", "url": "https://github.com/OpenAPITools/openapi-generator/commit/c43c1708891aa2e46721de6f31bc230a6716c3b6", "message": "[python] Support named arrays", "committedDate": "2020-05-29T16:32:48Z", "type": "commit"}, {"oid": "7b109dedf59d2fda93c11b760f76660099fc3314", "url": "https://github.com/OpenAPITools/openapi-generator/commit/7b109dedf59d2fda93c11b760f76660099fc3314", "message": "Merge remote-tracking branch 'upstream/master' into python-experimental/named-arrays", "committedDate": "2020-06-01T17:03:37Z", "type": "commit"}, {"oid": "b8a1a37570afc48c1b172db77e3f1a7955c4fc8e", "url": "https://github.com/OpenAPITools/openapi-generator/commit/b8a1a37570afc48c1b172db77e3f1a7955c4fc8e", "message": "Fix named array type", "committedDate": "2020-06-01T18:04:18Z", "type": "commit"}, {"oid": "31407d4d579e5a67a06f0991c07593ef42f82dd2", "url": "https://github.com/OpenAPITools/openapi-generator/commit/31407d4d579e5a67a06f0991c07593ef42f82dd2", "message": "Use ModelSimple", "committedDate": "2020-06-01T18:18:57Z", "type": "commit"}, {"oid": "45e8dd63dc30fa17342f1e6a4afa3a49792164a3", "url": "https://github.com/OpenAPITools/openapi-generator/commit/45e8dd63dc30fa17342f1e6a4afa3a49792164a3", "message": "Merge remote-tracking branch 'upstream/master' into python-experimental/named-arrays", "committedDate": "2020-06-02T14:04:39Z", "type": "commit"}, {"oid": "ed9f53bd2a7a831c44b63d6dc2437b1d2ee9e389", "url": "https://github.com/OpenAPITools/openapi-generator/commit/ed9f53bd2a7a831c44b63d6dc2437b1d2ee9e389", "message": "Reset samples", "committedDate": "2020-06-02T14:05:05Z", "type": "commit"}, {"oid": "9b393c690b1295a380a9bf283e0407e0e61dbf50", "url": "https://github.com/OpenAPITools/openapi-generator/commit/9b393c690b1295a380a9bf283e0407e0e61dbf50", "message": "Regenerated", "committedDate": "2020-06-02T14:08:48Z", "type": "commit"}, {"oid": "c1ee2a5d9250f23df687126ca76be3877cb6ca44", "url": "https://github.com/OpenAPITools/openapi-generator/commit/c1ee2a5d9250f23df687126ca76be3877cb6ca44", "message": "Animal farm test", "committedDate": "2020-06-02T14:20:04Z", "type": "commit"}, {"oid": "0b00e42da28343979167040abac520a3e8663f9d", "url": "https://github.com/OpenAPITools/openapi-generator/commit/0b00e42da28343979167040abac520a3e8663f9d", "message": "Array of enums", "committedDate": "2020-06-02T14:56:46Z", "type": "commit"}, {"oid": "4a8ad25fe6b6418f6093b5e9409f8af75597cc97", "url": "https://github.com/OpenAPITools/openapi-generator/commit/4a8ad25fe6b6418f6093b5e9409f8af75597cc97", "message": "Clean-up", "committedDate": "2020-06-02T15:12:58Z", "type": "commit"}, {"oid": "a58959900538b103c426eb37dc1604bd9253d61e", "url": "https://github.com/OpenAPITools/openapi-generator/commit/a58959900538b103c426eb37dc1604bd9253d61e", "message": "Clean-up", "committedDate": "2020-06-02T15:15:11Z", "type": "commit"}, {"oid": "e29055e7ae872de75f0a313e2f8ba93ef8602fab", "url": "https://github.com/OpenAPITools/openapi-generator/commit/e29055e7ae872de75f0a313e2f8ba93ef8602fab", "message": "Clean-up", "committedDate": "2020-06-02T15:21:11Z", "type": "commit"}, {"oid": "49eb08f1f9370500c8e924f34de6400cd3ed1839", "url": "https://github.com/OpenAPITools/openapi-generator/commit/49eb08f1f9370500c8e924f34de6400cd3ed1839", "message": "Fix array type generation", "committedDate": "2020-06-02T16:55:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDAzMDEyNw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6493#discussion_r434030127", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            LOGGER.warn(\"\\n\\n{}\\n\\n\", modelSchema);\n          \n          \n            \n                            LOGGER.warn(\"\\n\\n{}\\n\\n\", modelProperty);", "author": "jirikuncar", "createdAt": "2020-06-02T16:56:19Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/PythonClientExperimentalCodegen.java", "diffHunk": "@@ -843,7 +841,20 @@ public CodegenModel fromModel(String name, Schema schema) {\n                         postProcessModelProperty(result, prop);\n                     }\n                 }\n+            } else if (result.isArrayModel) {\n+                LOGGER.warn(\"\\n\\n{}\\n\\n\", modelSchema);\n+                LOGGER.warn(\"\\n\\n{}\\n\\n\", modelProperty);\n ", "originalCommit": "49eb08f1f9370500c8e924f34de6400cd3ed1839", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "fcbd31aa068b37e61509f8bd6cfc980b82806cb0", "url": "https://github.com/OpenAPITools/openapi-generator/commit/fcbd31aa068b37e61509f8bd6cfc980b82806cb0", "message": "simplify", "committedDate": "2020-06-03T11:10:14Z", "type": "commit"}, {"oid": "ebc799660d81e296518fd0d8a9747a3962d8d16a", "url": "https://github.com/OpenAPITools/openapi-generator/commit/ebc799660d81e296518fd0d8a9747a3962d8d16a", "message": "Merge remote-tracking branch 'upstream/master' into python-experimental/named-arrays", "committedDate": "2020-06-03T11:10:24Z", "type": "commit"}, {"oid": "1f890db2af2da9ff2d3d40718ed0fa62ab66e431", "url": "https://github.com/OpenAPITools/openapi-generator/commit/1f890db2af2da9ff2d3d40718ed0fa62ab66e431", "message": "array model is not alias", "committedDate": "2020-06-03T11:13:08Z", "type": "commit"}, {"oid": "7a2366a46879402088d35d14f963ea19abff64ac", "url": "https://github.com/OpenAPITools/openapi-generator/commit/7a2366a46879402088d35d14f963ea19abff64ac", "message": "Array model has one value field", "committedDate": "2020-06-03T11:25:27Z", "type": "commit"}, {"oid": "a5d37004d487bf68b58f0f2583bf67e1c4694fb0", "url": "https://github.com/OpenAPITools/openapi-generator/commit/a5d37004d487bf68b58f0f2583bf67e1c4694fb0", "message": "ensure up-to-date", "committedDate": "2020-06-03T13:39:11Z", "type": "commit"}, {"oid": "65a1c6db19a0435d67d977d7fea30141ff331b93", "url": "https://github.com/OpenAPITools/openapi-generator/commit/65a1c6db19a0435d67d977d7fea30141ff331b93", "message": "Merge branch 'master' into python-experimental/named-arrays", "committedDate": "2020-06-04T07:25:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTA3MTEyMg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6493#discussion_r435071122", "bodyText": "Array models are making a model that aliases the array type, so I think that this should be true.\nLong term my goal is to have the ModelSimple classes inherrit from their base classes like str int etc.\nWhy do we need to set this to False for ArrayModels? Historically generateAliasAsModel applied only to Map and Array models in most generators. In python-experimental we apply it to those AND all primitives that they have validations and enums. Standard processing in the generators was to describe all these primitive models as their simple types like str, list. But if those models had validations and that data was lost in that process. So I added code to preserve that information and make object type models which preserve the validation information which would have been lost. That code hoists the model information into a required value variable.\nAfter I did that the CodegenModel class was updated to include validation information which previously had been missing. So in summary this code here is an older hack to preserve information. If we can use the existing ArrayModels as is that is preferable. It should define its datatype somewhere inside the CodegenModel and that should be used to set the ModelSimple data type in the python class for our made up value parameter.\nWe can do this by doing a check of the model type when we assign the openapi_types in ModelSimple.\nWe can check the data that is available by running the generator with a debugmodels flag.\nIn my comment here I explain how to do that.", "author": "spacether", "createdAt": "2020-06-04T08:11:26Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/PythonClientExperimentalCodegen.java", "diffHunk": "@@ -829,13 +827,13 @@ public CodegenModel fromModel(String name, Schema schema) {\n         result.unescapedDescription = simpleModelName(name);\n \n         // make non-object type models have one property so we can use it to store enums and validations\n-        if (result.isAlias || result.isEnum) {\n+        if (result.isAlias || result.isEnum || result.isArrayModel) {\n             Schema modelSchema = ModelUtils.getSchema(this.openAPI, result.name);\n             CodegenProperty modelProperty = fromProperty(\"value\", modelSchema);\n-            if (modelProperty.isEnum == true || modelProperty.hasValidation == true) {\n+            if (modelProperty.isEnum == true || modelProperty.hasValidation == true || result.isArrayModel) {\n                 // these models are non-object models with enums and/or validations\n                 // add a single property to the model so we can have a way to access validations\n-                result.isAlias = true;", "originalCommit": "65a1c6db19a0435d67d977d7fea30141ff331b93", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTEyMTE2NQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6493#discussion_r435121165", "bodyText": "I am not aware of all the corner cases in the code. I was trying to make it work for my use-case and not break existing tests. Feel free to propose code changes.", "author": "jirikuncar", "createdAt": "2020-06-04T09:34:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTA3MTEyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTEyOTQ1MQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6493#discussion_r435129451", "bodyText": "I hope I have found a sufficient fix in b2ca2f7.", "author": "jirikuncar", "createdAt": "2020-06-04T09:48:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTA3MTEyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTA4NDAyMg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6493#discussion_r435084022", "bodyText": "What is the dataType in this CodegenModel.dataType?\nThis model having vars of length 1 shows that my older hack is being used and that we have hoisted model information into a new value variable.\nHow about we keep the CodegenModel as-is (no hoisting) and use the information from one of these sources?\n\nCodegenModel.dataType\nCodegenModel.arrayModelType\nWe can see all of the properties that are available by looking at that class here\n\nWe can debug the CodegenModels and see the information in them by running the generate command with the -DdebugModels=true as shown here\nHow about in the classvars template here\nhttps://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator/src/main/resources/python/python-experimental/model_templates/classvars.mustache#L115\nDoing a check to see if the model is an arrayModel\nand setting the datatype accordingly?\nIt would look like:\n{{#isArrayModel}}\n            'value': ({{{dataType}}},),  # noqa: E501\n{{/isArrayModel}}\n{{^isArrayModel}}\n{{#requiredVars}}\n            '{{name}}': ({{{dataType}}},),  # noqa: E501\n{{/requiredVars}}\n{{#optionalVars}}\n            '{{name}}': ({{{dataType}}},),  # noqa: E501\n{{/optionalVars}}\n{{/isArrayModel}}\n\nWe would also need to do a similar change in\nmethod_init_shared\nTo:\n\nnot loop over required an optional args if we have an array model, if we are that case, just set value as a required positional arg\nelse use our existing looping over variables\nin the docstring if we are an arraymodel set value as a required positional arg\n\nOur model doc mustache template would need a similar change to grab the data from dataType rather than vars.\n@jirikuncar\nWhat do you think about making these changes?\nIf you don't want to make them, we can keep using the existing code/(my older solution) where we shovel the model data into a value variable.", "author": "spacether", "createdAt": "2020-06-04T08:32:46Z", "path": "modules/openapi-generator/src/test/java/org/openapitools/codegen/python/PythonClientExperimentalTest.java", "diffHunk": "@@ -270,7 +270,7 @@ public void arrayModelTest() {\n         Assert.assertEquals(cm.classname, \"sample.Sample\");\n         Assert.assertEquals(cm.classVarName, \"sample\");\n         Assert.assertEquals(cm.description, \"an array model\");\n-        Assert.assertEquals(cm.vars.size(), 0);\n+        Assert.assertEquals(cm.vars.size(), 1);  // there is one value for Childer definition", "originalCommit": "65a1c6db19a0435d67d977d7fea30141ff331b93", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTExOTYxNw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6493#discussion_r435119617", "bodyText": "I would prefer to keep the current code. It looks like too many changes and {{#isArrayModel}} guards are required for templates.", "author": "jirikuncar", "createdAt": "2020-06-04T09:31:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTA4NDAyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTMxNTI2Mg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6493#discussion_r435315262", "bodyText": "Ah, understood. That's fine.", "author": "spacether", "createdAt": "2020-06-04T14:45:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTA4NDAyMg=="}], "type": "inlineReview"}, {"oid": "a7dbe80e26612007baf574f4ff888b6f1b27bb0a", "url": "https://github.com/OpenAPITools/openapi-generator/commit/a7dbe80e26612007baf574f4ff888b6f1b27bb0a", "message": "./bin/utils/ensure-up-to-date --batch", "committedDate": "2020-06-04T09:36:08Z", "type": "commit"}, {"oid": "b2ca2f78e295ce1d94b42f6ebc55d9d5a64f1918", "url": "https://github.com/OpenAPITools/openapi-generator/commit/b2ca2f78e295ce1d94b42f6ebc55d9d5a64f1918", "message": "Solve issue with missing import for array model", "committedDate": "2020-06-04T09:47:35Z", "type": "commit"}, {"oid": "3132aca2052d497ed9e1f3fbfeb90e46523c5562", "url": "https://github.com/OpenAPITools/openapi-generator/commit/3132aca2052d497ed9e1f3fbfeb90e46523c5562", "message": "regenerate", "committedDate": "2020-06-04T09:59:26Z", "type": "commit"}]}