{"pr_number": 638, "pr_title": "Implementing ComposedPropertyBean", "pr_createdAt": "2020-06-12T10:18:58Z", "pr_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/638", "timeline": [{"oid": "3be349bb385075377f6f9403c89121dbfbab1710", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/3be349bb385075377f6f9403c89121dbfbab1710", "message": "Add BeanPropertyComposed - (Task #633)\n\n---\nTask #633: Add missing BeanPropertyComposed", "committedDate": "2020-06-09T11:03:29Z", "type": "commit"}, {"oid": "86f79ead9a61e90560dc624ea2bab19a9d789534", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/86f79ead9a61e90560dc624ea2bab19a9d789534", "message": "Add BeanPropertyComposed to GenerateCategoryBeans - (Task #633)\n\n---\nTask #633: Add missing BeanPropertyComposed", "committedDate": "2020-06-09T11:52:02Z", "type": "commit"}, {"oid": "e541e404548a10d70bf9191e5244cdf2cf3d32fa", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/e541e404548a10d70bf9191e5244cdf2cf3d32fa", "message": "Update GenerateCategoryBeans and BeanPropertyComposedTest - (Task #633)\n\n---\nTask #633: Add missing BeanPropertyComposed", "committedDate": "2020-06-10T11:40:25Z", "type": "commit"}, {"oid": "f9be1476bf3521419366540678c9f7deea37d813", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/f9be1476bf3521419366540678c9f7deea37d813", "message": "Update GenerateCategoryBeans - (Task #633)\n\nAdd missing saveAccess call\n\n---\nTask #633: Add missing BeanPropertyComposed", "committedDate": "2020-06-10T14:27:00Z", "type": "commit"}, {"oid": "3e1b0d0387d50329f54357cb853629018ded35c8", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/3e1b0d0387d50329f54357cb853629018ded35c8", "message": "Merge remote-tracking branch 'origin/development' into\nfeature/task_633-Add_missing_BeanPrope\n\nConflicts:\n\tde.dlr.sc.virsat.model.concept/src/de/dlr/sc/virsat/model/concept/generator/beans/GenerateCategoryBeans.xtend", "committedDate": "2020-06-10T14:36:39Z", "type": "commit"}, {"oid": "cc131aeb52f462de539b0cbcc9dabdd6bff0f2ac", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/cc131aeb52f462de539b0cbcc9dabdd6bff0f2ac", "message": "Update BeanPropertyComposed - (Task #633)\n\nNow uses UnexecutableCommand\n\n---\nTask #633: Add missing BeanPropertyComposed", "committedDate": "2020-06-12T07:42:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMyNjkxMw==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/638#discussion_r441326913", "bodyText": "Assertion comment looks wrong. Ca should still be set, right?", "author": "SaMuellerDLR", "createdAt": "2020-06-17T07:08:40Z", "path": "de.dlr.sc.virsat.model.extension.tests.test/src/de/dlr/sc/virsat/model/concept/types/property/BeanPropertyComposedTest.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.model.concept.types.property;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+import org.eclipse.emf.common.command.Command;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import de.dlr.sc.virsat.model.dvlm.categories.CategoryAssignment;\n+import de.dlr.sc.virsat.model.dvlm.categories.propertyinstances.ComposedPropertyInstance;\n+import de.dlr.sc.virsat.model.dvlm.categories.util.CategoryAssignmentHelper;\n+import de.dlr.sc.virsat.model.dvlm.concepts.Concept;\n+import de.dlr.sc.virsat.model.extension.tests.model.AConceptTestCase;\n+import de.dlr.sc.virsat.model.extension.tests.model.TestCategoryAllProperty;\n+import de.dlr.sc.virsat.model.extension.tests.model.TestCategoryComposition;\n+\n+public class BeanPropertyComposedTest extends AConceptTestCase {\n+\n+\tprivate TestCategoryAllProperty testCategoryAllProperty;\n+\tprivate TestCategoryComposition testCategoryComposition;\n+\tprivate BeanPropertyComposed<TestCategoryAllProperty> beanPropertyComposed;\n+\tprivate ComposedPropertyInstance cpiToCategory;\n+\n+\t@Before\n+\tpublic void setUp() throws Exception {\n+\t\tprepareEditingDomain();\n+\n+\t\tConcept concept = loadConceptFromPlugin();\n+\n+\t\ttestCategoryComposition = new TestCategoryComposition(concept);\n+\t\t\n+\t\tCategoryAssignment testCategoryCompositionCa = testCategoryComposition.getTypeInstance();\n+\t\tCategoryAssignmentHelper caHelper = new CategoryAssignmentHelper(testCategoryCompositionCa);\n+\n+\t\t// Create a bean for the cpi with a ca\n+\t\tcpiToCategory = (ComposedPropertyInstance) caHelper.getPropertyInstance(TestCategoryComposition.PROPERTY_TESTSUBCATEGORY);\n+\t\tbeanPropertyComposed = new BeanPropertyComposed<>(cpiToCategory);\n+\t\ttestCategoryAllProperty = testCategoryComposition.getTestSubCategory();\n+\t}\n+\n+\t@Test\n+\tpublic void testSetValue() {\n+\t\tassertNotNull(\"Initial a composed ca is set\", testCategoryComposition.getTestSubCategory());\n+\t\t\n+\t\t// This should have no effect\n+\t\tbeanPropertyComposed.setValue(null);\n+\t\t\n+\t\tassertEquals(\"The composed ca didn't change\", testCategoryAllProperty, testCategoryComposition.getTestSubCategory());\n+\t}\n+\n+\t@Test(expected = UnsupportedOperationException .class)\n+\tpublic void testSetValueEditingDomain() {\n+\t\tCommand setCommand = beanPropertyComposed.setValue(editingDomain, null);\n+\t\tassertFalse(\"Can't execute the command\", setCommand.canExecute());\n+\t\t\n+\t\t// Should always throw UnsupportedOperationException\n+\t\tsetCommand.execute();\n+\t}\n+\n+\t@Test\n+\tpublic void testGetValue() {\n+\t\tassertEquals(\"Got the expected value\", testCategoryAllProperty, beanPropertyComposed.getValue());\n+\t}\n+\n+\t@Test\n+\tpublic void testIsSet() {\n+\t\tassertTrue(\"A ca is set\", beanPropertyComposed.isSet());\n+\t\t\n+\t\tcpiToCategory.setTypeInstance(null);\n+\t\t\n+\t\tassertFalse(\"No ca is set\", beanPropertyComposed.isSet());", "originalCommit": "cc131aeb52f462de539b0cbcc9dabdd6bff0f2ac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU4MjMxMg==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/638#discussion_r441582312", "bodyText": "If I would use the bean itself then i can't unset the ca. But i am using the composed property instance there and that way the composed ca can become null or not?\nI am wondering if the check in the isSet() even makes sense or if we should just return true?", "author": "JAmmermann-DLR", "createdAt": "2020-06-17T14:19:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMyNjkxMw=="}], "type": "inlineReview"}]}