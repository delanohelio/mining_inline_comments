{"pr_number": 2732, "pr_title": "ENT-1856: Port ConsumerDTO to openapi spec", "pr_createdAt": "2020-06-25T07:11:20Z", "pr_url": "https://github.com/candlepin/candlepin/pull/2732", "timeline": [{"oid": "720066db86da9c0529832498453d2b8c57286288", "url": "https://github.com/candlepin/candlepin/commit/720066db86da9c0529832498453d2b8c57286288", "message": "ENT-1856: Port ConsumerDTO to openapi spec\n - Udpated specifications for CapabilityDTO, ConsumerDTO,\n   ConsumerInstalledProductDTO, HypervisorIdDTO\n - Added ConsumerDTOArrayElement to exclude the properties\n   mentioned as HateoasArrayExclude\n - Updated the pojo.mustache to generate a map method to\n   get value from the specific key\n - Updated the ConsumerTypeDeserializer to get appropriate\n   consumer type based on incoming object/string", "committedDate": "2020-06-25T07:22:17Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTYzMzUzMQ==", "url": "https://github.com/candlepin/candlepin/pull/2732#discussion_r445633531", "bodyText": "There are a few more API endpoints where ConsumerDTO is being returned in a list/array:\nConsumerResource.getGuests\nOwnerResource.listConsumers\nOwnerResource.getHypervisors\nThey should all be changed to return ConsumerDTOArrayElement instead", "author": "nikosmoum", "createdAt": "2020-06-25T15:11:43Z", "path": "server/src/main/java/org/candlepin/resource/ConsumerResource.java", "diffHunk": "@@ -408,7 +409,7 @@ public void sanitizeConsumerFacts(Consumer consumer) {\n     @Produces(MediaType.APPLICATION_JSON)\n     @Wrapped(element = \"consumers\")\n     @SuppressWarnings(\"checkstyle:indentation\")\n-    public CandlepinQuery<ConsumerDTO> list(@QueryParam(\"username\") String userName,\n+    public CandlepinQuery<ConsumerDTOArrayElement> list(@QueryParam(\"username\") String userName,", "originalCommit": "720066db86da9c0529832498453d2b8c57286288", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQzMjMxNA==", "url": "https://github.com/candlepin/candlepin/pull/2732#discussion_r447432314", "bodyText": "Right, Updated the methods.", "author": "sonalidhome", "createdAt": "2020-06-30T06:10:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTYzMzUzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTYzODc4MQ==", "url": "https://github.com/candlepin/candlepin/pull/2732#discussion_r445638781", "bodyText": "Since this class no longer extends the TimestampedEntityTranslator, we should manually set the created and updated fields here.", "author": "nikosmoum", "createdAt": "2020-06-25T15:19:03Z", "path": "server/src/main/java/org/candlepin/dto/api/v1/ConsumerInstalledProductTranslator.java", "diffHunk": "@@ -58,16 +59,22 @@ public ConsumerInstalledProductDTO populate(ConsumerInstalledProduct source,\n     public ConsumerInstalledProductDTO populate(ModelTranslator translator, ConsumerInstalledProduct source,\n         ConsumerInstalledProductDTO dest) {\n \n-        dest = super.populate(translator, source, dest);\n+        if (source == null) {\n+            throw new IllegalArgumentException(\"source is null\");\n+        }\n \n-        dest.setId(source.getId());\n-        dest.setProductId(source.getProductId());\n-        dest.setProductName(source.getProductName());\n-        dest.setVersion(source.getVersion());\n-        dest.setArch(source.getArch());\n-        dest.setStatus(source.getStatus());\n-        dest.setStartDate(source.getStartDate());\n-        dest.setEndDate(source.getEndDate());\n+        if (dest == null) {\n+            throw new IllegalArgumentException(\"dest is null\");\n+        }\n+\n+        dest.id(source.getId())", "originalCommit": "720066db86da9c0529832498453d2b8c57286288", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQzMjI5OA==", "url": "https://github.com/candlepin/candlepin/pull/2732#discussion_r447432298", "bodyText": "Corrected.", "author": "sonalidhome", "createdAt": "2020-06-30T06:10:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTYzODc4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTYzOTM0NA==", "url": "https://github.com/candlepin/candlepin/pull/2732#discussion_r445639344", "bodyText": "Since this class no longer extends the TimestampedEntityTranslator, we should manually set the created and updated fields here.", "author": "nikosmoum", "createdAt": "2020-06-25T15:19:52Z", "path": "server/src/main/java/org/candlepin/dto/api/v1/HypervisorIdTranslator.java", "diffHunk": "@@ -55,13 +55,17 @@ public HypervisorIdDTO populate(HypervisorId source, HypervisorIdDTO dest) {\n     public HypervisorIdDTO populate(ModelTranslator translator, HypervisorId source,\n         HypervisorIdDTO dest) {\n \n-        dest = super.populate(translator, source, dest);\n+        if (source == null) {\n+            throw new IllegalArgumentException(\"source is null\");\n+        }\n \n-        dest.setId(source.getId() != null ? source.getId().toString() : null);\n-        dest.setHypervisorId(source.getHypervisorId());\n-        dest.setReporterId(source.getReporterId());\n+        if (dest == null) {\n+            throw new IllegalArgumentException(\"dest is null\");\n+        }\n \n-        return dest;\n+        return dest.id(source.getId() != null ? source.getId().toString() : null)", "originalCommit": "720066db86da9c0529832498453d2b8c57286288", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQzMjI3Ng==", "url": "https://github.com/candlepin/candlepin/pull/2732#discussion_r447432276", "bodyText": "Updated.", "author": "sonalidhome", "createdAt": "2020-06-30T06:10:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTYzOTM0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjIzMTc1OA==", "url": "https://github.com/candlepin/candlepin/pull/2732#discussion_r446231758", "bodyText": "Why are we substituting the fieldName variable in all of these strings? It's a static variable with the value 'label' that never gets reassigned as far as I can see, so there's not point. Specifically about the exception messages, we should try to keep them the same (or similar) to before, since 'Unexpected consumer type format:' is much clearer than 'The field label is missing from: '", "author": "nikosmoum", "createdAt": "2020-06-26T14:50:44Z", "path": "server/src/main/java/org/candlepin/jackson/ConsumerTypeDeserializer.java", "diffHunk": "@@ -16,77 +16,69 @@\n \n import org.candlepin.common.exceptions.CandlepinJsonProcessingException;\n import org.candlepin.dto.api.v1.ConsumerTypeDTO;\n-import org.candlepin.model.ConsumerType.ConsumerTypeEnum;\n \n import com.fasterxml.jackson.core.JsonParser;\n-import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.core.TreeNode;\n import com.fasterxml.jackson.databind.DeserializationContext;\n-import com.fasterxml.jackson.databind.ObjectMapper;\n-import com.fasterxml.jackson.databind.deser.std.StdDeserializer;\n+import com.fasterxml.jackson.databind.JsonDeserializer;\n \n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n import java.io.IOException;\n \n-\n-\n /**\n- * The ConsumerTypeDeserializer handles deserialization of consumer types defined as strings or\n- * objects on existing objects.\n+ * Handles the deserialization of the \"label\" field by wrapping it in a {@link ConsumerTypeDTO} object,\n+ * by handling both of the following formats: <pre> {@code \"type\":\"value\" } </pre> and\n+ * <pre> {@code \"type\":{\"label \":\"value\", \"manifest\":\"value\"} } </pre>.\n  */\n-public class ConsumerTypeDeserializer extends StdDeserializer<ConsumerTypeDTO> {\n-    private static Logger log = LoggerFactory.getLogger(ConsumerTypeDeserializer.class);\n+public class ConsumerTypeDeserializer extends JsonDeserializer<ConsumerTypeDTO> {\n \n-    public ConsumerTypeDeserializer() {\n-        this(null);\n-    }\n+    private static Logger log = LoggerFactory.getLogger(ConsumerTypeDeserializer.class);\n \n-    public ConsumerTypeDeserializer(Class<?> valueClass) {\n-        super(valueClass);\n-    }\n+    private static String fieldName = \"label\";\n \n     @Override\n     public ConsumerTypeDTO deserialize(JsonParser parser, DeserializationContext context)\n-        throws IOException, JsonProcessingException {\n+        throws IOException {\n \n-        // We're expecting an object or a string\n-        switch (parser.currentToken()) {\n-            case START_OBJECT:\n-                return this.parseTypeFromObject(parser);\n+        TreeNode node = parser.readValueAsTree();\n \n-            case VALUE_STRING:\n-                return this.parseTypeFromString(parser);\n+        if (node.isValueNode()) {\n+            log.debug(\"Processing {} as a value node.\", fieldName);\n \n-            default:\n-                throw new CandlepinJsonProcessingException(\"Unexpected consumer type format: \" +\n-                    parser.readValueAsTree(), parser.getCurrentLocation());\n+            return parseValueNode(node);\n+        }\n+        else if (node.isObject()) {\n+            log.debug(\"Processing {} as a containing object node.\", fieldName);\n+\n+            TreeNode valueNode = node.path(fieldName);\n+            if (valueNode.isMissingNode()) {\n+                throw new CandlepinJsonProcessingException(\n+                    \"The field \" + fieldName + \" is missing from: \" + node.asToken(),", "originalCommit": "720066db86da9c0529832498453d2b8c57286288", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQzMjIzMQ==", "url": "https://github.com/candlepin/candlepin/pull/2732#discussion_r447432231", "bodyText": "Agreed, Updated the exception messages.", "author": "sonalidhome", "createdAt": "2020-06-30T06:10:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjIzMTc1OA=="}], "type": "inlineReview"}, {"oid": "830c3e90d60fc2b9eecf0fb082f3e11145431463", "url": "https://github.com/candlepin/candlepin/commit/830c3e90d60fc2b9eecf0fb082f3e11145431463", "message": "ENT-1856: Port ConsumerDTO to openapi spec\n - Udpated specifications for CapabilityDTO, ConsumerDTO,\n   ConsumerInstalledProductDTO, HypervisorIdDTO\n - Added ConsumerDTOArrayElement to exclude the properties\n   mentioned as HateoasArrayExclude\n - Updated the pojo.mustache to generate a map method to\n   get value from the specific key\n - Updated the ConsumerTypeDeserializer to get appropriate\n   consumer type based on incoming object/string", "committedDate": "2020-06-29T12:18:07Z", "type": "forcePushed"}, {"oid": "986bfb0f6d8fc7e0ce68d34db8ead8e67cb1c2be", "url": "https://github.com/candlepin/candlepin/commit/986bfb0f6d8fc7e0ce68d34db8ead8e67cb1c2be", "message": "ENT-1856: Port ConsumerDTO to openapi spec\n - Udpated specifications for CapabilityDTO, ConsumerDTO,\n   ConsumerInstalledProductDTO, HypervisorIdDTO\n - Added ConsumerDTOArrayElement to exclude the properties\n   mentioned as HateoasArrayExclude\n - Updated the ConsumerTypeDeserializer to get appropriate\n   consumer type based on incoming object/string", "committedDate": "2020-07-02T08:46:15Z", "type": "forcePushed"}, {"oid": "b72770793a1bc00acf504eae757bae8aec6244d6", "url": "https://github.com/candlepin/candlepin/commit/b72770793a1bc00acf504eae757bae8aec6244d6", "message": "ENT-1856: Port ConsumerDTO to openapi spec\n - Udpated specifications for CapabilityDTO, ConsumerDTO,\n   ConsumerInstalledProductDTO, HypervisorIdDTO\n - Added ConsumerDTOArrayElement to exclude the properties\n   mentioned as HateoasArrayExclude\n - Updated the ConsumerTypeDeserializer to get appropriate\n   consumer type based on incoming object/string", "committedDate": "2020-07-02T11:07:22Z", "type": "commit"}, {"oid": "b72770793a1bc00acf504eae757bae8aec6244d6", "url": "https://github.com/candlepin/candlepin/commit/b72770793a1bc00acf504eae757bae8aec6244d6", "message": "ENT-1856: Port ConsumerDTO to openapi spec\n - Udpated specifications for CapabilityDTO, ConsumerDTO,\n   ConsumerInstalledProductDTO, HypervisorIdDTO\n - Added ConsumerDTOArrayElement to exclude the properties\n   mentioned as HateoasArrayExclude\n - Updated the ConsumerTypeDeserializer to get appropriate\n   consumer type based on incoming object/string", "committedDate": "2020-07-02T11:07:22Z", "type": "forcePushed"}]}