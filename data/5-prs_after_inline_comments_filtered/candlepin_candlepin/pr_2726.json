{"pr_number": 2726, "pr_title": " Ent-1873: Port EntitlementResource to spec-first", "pr_createdAt": "2020-06-15T08:48:38Z", "pr_url": "https://github.com/candlepin/candlepin/pull/2726", "timeline": [{"oid": "ee03cab87c77f69add0cc12da186bbba69279f37", "url": "https://github.com/candlepin/candlepin/commit/ee03cab87c77f69add0cc12da186bbba69279f37", "message": "Ent-1873: Port EntitlementResource to spec-first\n- Add endpoint definitions\n- Add definition for the KeyValueParamDto\n- Add KeyValueParamConverted\n- Add pagination parameters and builder", "committedDate": "2020-06-15T13:00:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE5NjkxNg==", "url": "https://github.com/candlepin/candlepin/pull/2726#discussion_r442196916", "bodyText": "I think all this work (adding all these separate args here, creating a PageRequestDTO, etc.) might not be needed at all. I think you should be able to simply remove pageRequest as an argument completely, and simply add this at the start of the method: PageRequest pageRequest = ResteasyProviderFactory.getContextData(PageRequest.class); and you should be good to go (haven't tested it, but it should work just the way we do it with all other request context data args like Principal etc.).", "author": "nikosmoum", "createdAt": "2020-06-18T12:43:45Z", "path": "server/src/main/java/org/candlepin/resource/EntitlementResource.java", "diffHunk": "@@ -152,18 +125,24 @@ public EntitlementDTO hasEntitlement(@PathParam(\"consumer_uuid\") String consumer\n                 consumerUuid, productId));\n     }\n \n-    @ApiOperation(notes = \"Retrieves list of Entitlements\", value = \"listAllForConsumer\")\n-    @ApiResponses({ @ApiResponse(code = 400, message = \"\") })\n-    @GET\n-    @Produces(MediaType.APPLICATION_JSON)\n+    @Override\n     public List<EntitlementDTO> listAllForConsumer(\n-        @QueryParam(\"consumer\") String consumerUuid,\n-        @QueryParam(\"matches\") String matches,\n-        @QueryParam(\"attribute\") List<KeyValueParameter> attrFilters,\n-        @Context PageRequest pageRequest) {\n+        String consumerUuid,\n+        String matches,\n+        List<KeyValueParamDTO> attrFilters,\n+        Integer page,\n+        Integer perPage,\n+        String order,\n+        String orderBy) {", "originalCommit": "ee03cab87c77f69add0cc12da186bbba69279f37", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc3NjY5OQ==", "url": "https://github.com/candlepin/candlepin/pull/2726#discussion_r442776699", "bodyText": "One problem I see with this option is that paging will be hidden from Swagger documentation. We could document it in the description but I am not sure how effective that will be..", "author": "Januson", "createdAt": "2020-06-19T11:03:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE5NjkxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc5MDQzNQ==", "url": "https://github.com/candlepin/candlepin/pull/2726#discussion_r442790435", "bodyText": "That's a good point. Even with our current state the PageRequest is hidden from swagger documentation, so if it could be included it would be a good thing. @Ceiu do you see anything wrong with this approach?\nIf we are going to do this though, we should probably add some paging spec tests in entitlement_resource_spec.rb to make sure functionality has not changed (it has occurred to me we don't have any paging tests at all, so this would be a good moment to add some)", "author": "nikosmoum", "createdAt": "2020-06-19T11:37:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE5NjkxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg0NDg3NA==", "url": "https://github.com/candlepin/candlepin/pull/2726#discussion_r442844874", "bodyText": "On one hand, I'm hesitant to make more sweeping changes because of limitations in OpenAPI. As it is today, paging \"just works\" so long as the endpoint passes the paging info through (which, admittedly, requires varying degrees of extra complexity). This is very similar to include/exclude, which are also optional parameters available globally that are probably going undocumented by things like Swagger.\nOn the other hand, because the endpoints need to add extra logic to support paging, I see value in having explicit documentation on the endpoints themselves indicating as much, rather than having it as a global \"this exists and it may or may not work, good luck\" note somewhere.\nOverall, I feel that if we're going to address the plate of spaghetti that is paging, then we should do that. But if we're not in a place where we can fully deal with it, then we should probably keep pulling it from the context so our defaults and constraints are consistent with every other endpoint that uses paging today.\nAs far as testing goes, some of the endpoints have unit tests for the paging bits, so those likely aren't as in-need of spec testing as the ones that aren't tested at all.", "author": "Ceiu", "createdAt": "2020-06-19T13:36:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE5NjkxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg5NTQ2OA==", "url": "https://github.com/candlepin/candlepin/pull/2726#discussion_r442895468", "bodyText": "Alright, I would prefer not to do sweeping changes, since this epic is about simply moving our API to openapi. If we want to overhaul the paging mechanism (and in the process make it better-documented by including it in the openapi spec file), we can add it as a future card.\nSo for now I'd say just remove it as an argument and add PageRequest pageRequest = ResteasyProviderFactory.getContextData(PageRequest.class);. For making sure it is documented, what do you think about adding something to the endpoint's description, along the lines of This endpoint supports paging with query parameters. Please see here for details: https://www.candlepinproject.org/docs/candlepin/pagination.html#paginating-results-from-candlepin. And maybe we can do the same thing for all other endpoints that support paging?\n@Januson one more thing: I noticed that PageRequestDTO is not used anywhere anyway (paging arguments are specified separately), so it should have been removed either way.", "author": "nikosmoum", "createdAt": "2020-06-19T15:09:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE5NjkxNg=="}], "type": "inlineReview"}, {"oid": "93a0df84038579e8daf0a3a00f91673dbda58d73", "url": "https://github.com/candlepin/candlepin/commit/93a0df84038579e8daf0a3a00f91673dbda58d73", "message": "Ent-1873: Port EntitlementResource to spec-first\n- Add endpoint definitions\n- Add definition for the KeyValueParamDto\n- Add KeyValueParamConverted\n- Add pagination parameters and builder", "committedDate": "2020-06-19T11:09:12Z", "type": "forcePushed"}, {"oid": "0efcdd0749aede68891db9ae660cbd487419790c", "url": "https://github.com/candlepin/candlepin/commit/0efcdd0749aede68891db9ae660cbd487419790c", "message": "Ent-1873: Port EntitlementResource to spec-first\n- Add endpoint definitions\n- Add definition for the KeyValueParamDto\n- Add KeyValueParamConverted\n- Add pagination parameters and builder", "committedDate": "2020-06-19T13:15:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg1MTkzMQ==", "url": "https://github.com/candlepin/candlepin/pull/2726#discussion_r442851931", "bodyText": "One thing to keep in mind with how paging works today, is that the presence of paging info often results in at least one additional query (to get counts for the headers). So we may not want to default to the always-create behavior we have here.", "author": "Ceiu", "createdAt": "2020-06-19T13:49:51Z", "path": "server/src/main/java/org/candlepin/resource/EntitlementResource.java", "diffHunk": "@@ -152,18 +125,24 @@ public EntitlementDTO hasEntitlement(@PathParam(\"consumer_uuid\") String consumer\n                 consumerUuid, productId));\n     }\n \n-    @ApiOperation(notes = \"Retrieves list of Entitlements\", value = \"listAllForConsumer\")\n-    @ApiResponses({ @ApiResponse(code = 400, message = \"\") })\n-    @GET\n-    @Produces(MediaType.APPLICATION_JSON)\n+    @Override\n     public List<EntitlementDTO> listAllForConsumer(\n-        @QueryParam(\"consumer\") String consumerUuid,\n-        @QueryParam(\"matches\") String matches,\n-        @QueryParam(\"attribute\") List<KeyValueParameter> attrFilters,\n-        @Context PageRequest pageRequest) {\n+        String consumerUuid,\n+        String matches,\n+        List<KeyValueParamDTO> attrFilters,\n+        Integer page,\n+        Integer perPage,\n+        String order,\n+        String orderBy) {\n \n         EntitlementFilterBuilder filters = EntitlementFinderUtil.createFilter(matches, attrFilters);\n         Page<List<Entitlement>> p;\n+        PageRequest pageRequest = PageRequest.create(() -> this.i18n)", "originalCommit": "0efcdd0749aede68891db9ae660cbd487419790c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "cea765758b8b7a9758de293d15b06f512a1421e2", "url": "https://github.com/candlepin/candlepin/commit/cea765758b8b7a9758de293d15b06f512a1421e2", "message": "Ent-1873: Port EntitlementResource to spec-first\n- Add endpoint definitions\n- Add definition for the KeyValueParamDto\n- Add KeyValueParamConverted", "committedDate": "2020-06-22T08:04:11Z", "type": "commit"}, {"oid": "cea765758b8b7a9758de293d15b06f512a1421e2", "url": "https://github.com/candlepin/candlepin/commit/cea765758b8b7a9758de293d15b06f512a1421e2", "message": "Ent-1873: Port EntitlementResource to spec-first\n- Add endpoint definitions\n- Add definition for the KeyValueParamDto\n- Add KeyValueParamConverted", "committedDate": "2020-06-22T08:04:11Z", "type": "forcePushed"}]}