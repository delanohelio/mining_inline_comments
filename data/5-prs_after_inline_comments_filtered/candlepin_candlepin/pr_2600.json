{"pr_number": 2600, "pr_title": "[M] Upgraded Resteasy to 4.4.2 (ENT-1918)", "pr_createdAt": "2020-02-03T21:12:00Z", "pr_url": "https://github.com/candlepin/candlepin/pull/2600", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU1NTMwNA==", "url": "https://github.com/candlepin/candlepin/pull/2600#discussion_r374555304", "bodyText": "locatorMap is no longer used.", "author": "Januson", "createdAt": "2020-02-04T09:23:23Z", "path": "server/src/main/java/org/candlepin/resteasy/filter/VerifyAuthorizationFilter.java", "diffHunk": "@@ -65,6 +65,7 @@\n @Priority(Priorities.AUTHORIZATION)\n public class VerifyAuthorizationFilter extends AbstractAuthorizationFilter {\n     private static final Logger log = LoggerFactory.getLogger(VerifyAuthorizationFilter.class);\n+\n     private StoreFactory storeFactory;\n     private ResourceLocatorMap locatorMap;", "originalCommit": "17ecbe3781241d28f693a8c404a5eb061730225a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDczNjExMw==", "url": "https://github.com/candlepin/candlepin/pull/2600#discussion_r374736113", "bodyText": "Fixed. Removed this line and the entire ResourceLocatorMap file.", "author": "Ceiu", "createdAt": "2020-02-04T15:21:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU1NTMwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU1NTU5Mw==", "url": "https://github.com/candlepin/candlepin/pull/2600#discussion_r374555593", "bodyText": "Forgotten commented code.", "author": "Januson", "createdAt": "2020-02-04T09:23:59Z", "path": "server/src/main/java/org/candlepin/resteasy/filter/CandlepinQueryInterceptor.java", "diffHunk": "@@ -64,45 +65,78 @@ public CandlepinQueryInterceptor(\n      * @return a newly opened session\n      */\n     protected Session openSession() {\n-        final Session currentSession = (Session) this.emProvider.get().getDelegate();\n-        final SessionFactory factory = currentSession.getSessionFactory();\n+        Session currentSession = (Session) this.emProvider.get().getDelegate();\n+        SessionFactory factory = currentSession.getSessionFactory();\n \n         return factory.openSession();\n     }\n \n     @Override\n-    public void postProcess(ServerResponse response) {\n-        final Object entity = response.getEntity();\n+    public void filter(ContainerRequestContext requestContext, ContainerResponseContext responseContext) {\n+        Object entity = responseContext.getEntity();\n \n         if (entity instanceof CandlepinQuery) {\n-            final PageRequest pageRequest = ResteasyProviderFactory.getContextData(PageRequest.class);\n-            final Session session = this.openSession();\n+            PageRequest pageRequest = ResteasyContext.getContextData(PageRequest.class);\n+            Session session = this.openSession();\n+\n             try {\n-                final CandlepinQuery query = (CandlepinQuery) entity;\n+                CandlepinQuery query = (CandlepinQuery) entity;\n \n                 // Use a separate session so we aren't at risk of lazy loading or interceptors closing\n                 // our cursor mid-stream.\n                 query.useSession(session);\n \n                 // Apply any paging config we may have\n-                applyPaging(pageRequest, query);\n+                this.applyPaging(pageRequest, query);\n \n                 // Set the output streamer that will stream our query result\n-                response.setEntity(buildOutputStreamer(session, query));\n+                responseContext.setEntity(this.buildOutputStreamer(session, query));\n             }\n-            catch (final RuntimeException e) {\n+            catch (RuntimeException e) {\n                 if (session != null) {\n                     session.close();\n                 }\n+\n                 throw e;\n             }\n+\n         }\n     }\n \n+    // @Override", "originalCommit": "17ecbe3781241d28f693a8c404a5eb061730225a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDczNjE1Nw==", "url": "https://github.com/candlepin/candlepin/pull/2600#discussion_r374736157", "bodyText": "Removed", "author": "Ceiu", "createdAt": "2020-02-04T15:21:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU1NTU5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU1NzUyMQ==", "url": "https://github.com/candlepin/candlepin/pull/2600#discussion_r374557521", "bodyText": "This could be enhanced for", "author": "Januson", "createdAt": "2020-02-04T09:27:31Z", "path": "server/src/main/java/org/candlepin/resteasy/filter/VerifyAuthorizationFilter.java", "diffHunk": "@@ -111,39 +110,79 @@ public void runFilter(ContainerRequestContext requestContext) {\n         }\n     }\n \n-    protected Map<Verify, Object> getArguments(HttpRequest request, Method method) {\n-        ResteasyProviderFactory resourceFactory = ResteasyProviderFactory.getInstance();\n-        InjectorFactory injectorFactory = resourceFactory.getInjectorFactory();\n+    /**\n+     * Fetches the arguments for parameters flagged with the Verify annotation from the request\n+     * context. If the method does not have any Verify-annotated parameters, this method returns\n+     * an empty map.\n+     *\n+     * @param requestContext\n+     *  the context data for the request\n+     *\n+     * @param method\n+     *  the method handling the request\n+     *\n+     * @return\n+     *  a mapping of verify annotations to their respective arguments\n+     */\n+    protected Map<Verify, Object> getArguments(ContainerRequestContext requestContext, Method method) {\n+\n+        // LinkedHashMap preserves insertion order\n+        Map<Verify, Object> argMap = new LinkedHashMap<>();\n \n-        ResourceLocator locator = locatorMap.get(method);\n+        Annotation[][] annotations = annotationLocator.getParameterAnnotations(method);\n \n-        if (null == locator) {\n-            throw new IseException(\"Method \" + method.getName() + \" not registered as RESTful.\");\n-        }\n+        Map<String, List<String>> pathParams = null;\n+        Map<String, List<String>> queryParams = null;\n+        Map<String, List<String>> headers = null;\n \n-        MethodInjector methodInjector = injectorFactory.createMethodInjector(locator, resourceFactory);\n-        HttpResponse response = ResteasyProviderFactory.popContextData(HttpResponse.class);\n-        Object[] args = methodInjector.injectArguments(request, response);\n+        for (int i = 0; i < annotations.length; ++i) {", "originalCommit": "17ecbe3781241d28f693a8c404a5eb061730225a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc0NzIxNQ==", "url": "https://github.com/candlepin/candlepin/pull/2600#discussion_r374747215", "bodyText": "I suppose, but this was something that was pre-existing that would get (immeasurably) slower by a change, so I opted to just leave it as-is.", "author": "Ceiu", "createdAt": "2020-02-04T15:38:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU1NzUyMQ=="}], "type": "inlineReview"}, {"oid": "13be1fc5eadad0b66b699d6aadd96966bb5a8688", "url": "https://github.com/candlepin/candlepin/commit/13be1fc5eadad0b66b699d6aadd96966bb5a8688", "message": "Upgraded Resteasy to 4.4.2\n\n- Resteasy has been upgraded to version 4.4.2\n- Updated the VerifyAuthorizationFilter to no longer use internal\n  Resteasy interfaces, but instead pull argument details from the\n  standardized request context", "committedDate": "2020-02-04T15:18:50Z", "type": "forcePushed"}, {"oid": "14e7d477a03b2fbba29fd7766f6103ff9bbc1aae", "url": "https://github.com/candlepin/candlepin/commit/14e7d477a03b2fbba29fd7766f6103ff9bbc1aae", "message": "Upgraded Resteasy to 4.4.2\n\n- Resteasy has been upgraded to version 4.4.2\n- Updated the VerifyAuthorizationFilter to no longer use internal\n  Resteasy interfaces, but instead pull argument details from the\n  standardized request context", "committedDate": "2020-02-04T15:47:34Z", "type": "forcePushed"}, {"oid": "3237765c686d27e9f9ebf9200b2b6d49f7019679", "url": "https://github.com/candlepin/candlepin/commit/3237765c686d27e9f9ebf9200b2b6d49f7019679", "message": "Upgraded Resteasy to 4.4.2\n\n- Resteasy has been upgraded to version 4.4.2\n- Updated the VerifyAuthorizationFilter to no longer use internal\n  Resteasy interfaces, but instead pull argument details from the\n  standardized request context", "committedDate": "2020-02-05T16:54:44Z", "type": "forcePushed"}, {"oid": "17d65ec61d8f1760fbdedbfeb5f85b4fc2eb3afa", "url": "https://github.com/candlepin/candlepin/commit/17d65ec61d8f1760fbdedbfeb5f85b4fc2eb3afa", "message": "Upgraded Resteasy to 4.4.2\n\n- Resteasy has been upgraded to version 4.4.2\n- Updated the VerifyAuthorizationFilter to no longer use internal\n  Resteasy interfaces, but instead pull argument details from the\n  standardized request context", "committedDate": "2020-02-11T16:35:55Z", "type": "commit"}, {"oid": "17d65ec61d8f1760fbdedbfeb5f85b4fc2eb3afa", "url": "https://github.com/candlepin/candlepin/commit/17d65ec61d8f1760fbdedbfeb5f85b4fc2eb3afa", "message": "Upgraded Resteasy to 4.4.2\n\n- Resteasy has been upgraded to version 4.4.2\n- Updated the VerifyAuthorizationFilter to no longer use internal\n  Resteasy interfaces, but instead pull argument details from the\n  standardized request context", "committedDate": "2020-02-11T16:35:55Z", "type": "forcePushed"}]}