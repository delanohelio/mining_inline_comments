{"pr_number": 2963, "pr_title": "[cpp] Add option to ignore sequences of literals", "pr_createdAt": "2020-12-10T11:32:24Z", "pr_url": "https://github.com/pmd/pmd/pull/2963", "timeline": [{"oid": "26728348f69ec6ee58ccbbe4443af68e3f0cf80f", "url": "https://github.com/pmd/pmd/commit/26728348f69ec6ee58ccbbe4443af68e3f0cf80f", "message": "Add support for C++14 binary literals", "committedDate": "2020-12-10T11:10:47Z", "type": "commit"}, {"oid": "af31b3a7736fe328e5688247aaf4c05602701158", "url": "https://github.com/pmd/pmd/commit/af31b3a7736fe328e5688247aaf4c05602701158", "message": "Add GenericToken.getKind() to interface", "committedDate": "2020-12-10T11:10:47Z", "type": "commit"}, {"oid": "3d7fe9fb24aff7c84c195348257e584e04274f21", "url": "https://github.com/pmd/pmd/commit/3d7fe9fb24aff7c84c195348257e584e04274f21", "message": "C++ can now ignore sequences of literals\n\nThis enables the --ignore-literal-sequences option for the C++ language. This was previously only implemented for C#.", "committedDate": "2020-12-10T11:10:47Z", "type": "commit"}, {"oid": "55598d844a66bf11135fc72bde3c6d6d4ce7c146", "url": "https://github.com/pmd/pmd/commit/55598d844a66bf11135fc72bde3c6d6d4ce7c146", "message": "Filter out 2D arrays as well", "committedDate": "2020-12-10T11:14:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTY1MjI2NA==", "url": "https://github.com/pmd/pmd/pull/2963#discussion_r561652264", "bodyText": "let's add @see #OPTION_IGNORE_LITERAL_SEQUENCES here as well....", "author": "adangel", "createdAt": "2021-01-21T07:27:14Z", "path": "pmd-cpp/src/main/java/net/sourceforge/pmd/cpd/CPPTokenizer.java", "diffHunk": "@@ -23,12 +27,12 @@\n     private boolean skipBlocks = true;\n     private String skipBlocksStart;\n     private String skipBlocksEnd;\n+    private boolean ignoreLiteralSequences = false;\n \n     /**\n      * Sets the possible options for the C++ tokenizer.\n      *\n-     * @param properties\n-     *            the properties\n+     * @param properties the properties\n      * @see #OPTION_SKIP_BLOCKS\n      * @see #OPTION_SKIP_BLOCKS_PATTERN", "originalCommit": "55598d844a66bf11135fc72bde3c6d6d4ce7c146", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTY1Mzk2Ng==", "url": "https://github.com/pmd/pmd/pull/2963#discussion_r561653966", "bodyText": "I'd rather mark this as @Experimental for now. The reason is, that the different kinds are the constants e.g. from CppParserConstants. Whenever we change the grammar and add a new token, these \"constants\" might change, which will change the public API here. Maybe we need another abstraction here?\nNote: We have actually the same problem for AntlrToken as well....", "author": "adangel", "createdAt": "2021-01-21T07:31:01Z", "path": "pmd-core/src/main/java/net/sourceforge/pmd/lang/ast/GenericToken.java", "diffHunk": "@@ -51,4 +51,11 @@\n      * @return a non-negative integer containing the begin column\n      */\n     int getEndColumn();\n+\n+    /**\n+     * Gets a unique integer representing the kind of token this is.\n+     *\n+     * The semantics of this kind depend on the language.\n+     */\n+    int getKind();", "originalCommit": "55598d844a66bf11135fc72bde3c6d6d4ce7c146", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "76566b75bb0b935932357bc1e5f67f8fe5a4c7e5", "url": "https://github.com/pmd/pmd/commit/76566b75bb0b935932357bc1e5f67f8fe5a4c7e5", "message": "Minor changes resulting from review", "committedDate": "2021-01-21T10:06:29Z", "type": "commit"}]}