{"pr_number": 2210, "pr_title": "#607 Mapping Iterable<?> object to an object instead of collection", "pr_createdAt": "2020-09-26T03:01:42Z", "pr_url": "https://github.com/mapstruct/mapstruct/pull/2210", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQzMjY2MQ==", "url": "https://github.com/mapstruct/mapstruct/pull/2210#discussion_r495432661", "bodyText": "some textual stuff: I would use \"handles\" instead of \"treats\".. (a bit nitpicking, I agree)..", "author": "sjaakd", "createdAt": "2020-09-26T08:37:03Z", "path": "core/src/main/java/org/mapstruct/BeanMapping.java", "diffHunk": "@@ -18,7 +18,9 @@\n /**\n  * Configures the mapping between two bean types.\n  * <p>\n- * Either {@link #resultType()}, {@link #qualifiedBy()} or {@link #nullValueMappingStrategy()} must be specified.\n+ * When source or the target is of type {@code Iterable} or {@code Stream}, it treats the target as a simple pojo and", "originalCommit": "44037e8029ede0b47d4a6baf5c15a5d8165e9cf7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQzMjc3Ng==", "url": "https://github.com/mapstruct/mapstruct/pull/2210#discussion_r495432776", "bodyText": "\"tries\" == attempts", "author": "sjaakd", "createdAt": "2020-09-26T08:38:40Z", "path": "core/src/main/java/org/mapstruct/BeanMapping.java", "diffHunk": "@@ -18,7 +18,9 @@\n /**\n  * Configures the mapping between two bean types.\n  * <p>\n- * Either {@link #resultType()}, {@link #qualifiedBy()} or {@link #nullValueMappingStrategy()} must be specified.\n+ * When source or the target is of type {@code Iterable} or {@code Stream}, it treats the target as a simple pojo and\n+ * tries to map the parameters. Otherwise, either {@link #resultType()}, {@link #qualifiedBy()} or", "originalCommit": "44037e8029ede0b47d4a6baf5c15a5d8165e9cf7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQzMjk5Mg==", "url": "https://github.com/mapstruct/mapstruct/pull/2210#discussion_r495432992", "bodyText": "Forces MapStruct to handle target and source as bean and configures the mapping.", "author": "sjaakd", "createdAt": "2020-09-26T08:40:58Z", "path": "core/src/main/java/org/mapstruct/BeanMapping.java", "diffHunk": "@@ -18,7 +18,9 @@\n /**\n  * Configures the mapping between two bean types.", "originalCommit": "44037e8029ede0b47d4a6baf5c15a5d8165e9cf7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6b488ca5d5e33f3f5c9a960fe74ea8a94f58f7d6", "url": "https://github.com/mapstruct/mapstruct/commit/6b488ca5d5e33f3f5c9a960fe74ea8a94f58f7d6", "message": "#607 Mapping Iterable<?> object to an object instead of collection", "committedDate": "2020-10-04T05:19:10Z", "type": "forcePushed"}, {"oid": "4baf8a8bb17808d02c87e966253ebccb91ce0900", "url": "https://github.com/mapstruct/mapstruct/commit/4baf8a8bb17808d02c87e966253ebccb91ce0900", "message": "#607 Mapping Iterable<?> object to an object instead of collection", "committedDate": "2020-10-14T13:55:17Z", "type": "forcePushed"}, {"oid": "49e446e67c98d3d4171fdf86c6679f7fb2215a7f", "url": "https://github.com/mapstruct/mapstruct/commit/49e446e67c98d3d4171fdf86c6679f7fb2215a7f", "message": "#607 Mapping Iterable<?> object to an object instead of collection", "committedDate": "2020-10-14T13:59:31Z", "type": "forcePushed"}, {"oid": "8e28b18b40149f6b5e262ea10ee9d707f86811cf", "url": "https://github.com/mapstruct/mapstruct/commit/8e28b18b40149f6b5e262ea10ee9d707f86811cf", "message": "#607 Mapping Iterable<?> object to an object instead of collection", "committedDate": "2020-10-14T14:38:00Z", "type": "forcePushed"}, {"oid": "161c5f38597718c2aba8992447df785096dd2221", "url": "https://github.com/mapstruct/mapstruct/commit/161c5f38597718c2aba8992447df785096dd2221", "message": "#607 Mapping Iterable<?> object to an object instead of collection", "committedDate": "2020-10-14T14:41:24Z", "type": "forcePushed"}, {"oid": "82d17d75ad3dabd6409926a0f27fcfcb7525b3b1", "url": "https://github.com/mapstruct/mapstruct/commit/82d17d75ad3dabd6409926a0f27fcfcb7525b3b1", "message": "#607 Mapping Iterable<?> object to an object instead of collection", "committedDate": "2020-10-14T14:51:02Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzAyOTAwOQ==", "url": "https://github.com/mapstruct/mapstruct/pull/2210#discussion_r507029009", "bodyText": "Type already has a method called isJavaLangType we can use it here.", "author": "filiphr", "createdAt": "2020-10-18T07:21:10Z", "path": "processor/src/main/java/org/mapstruct/ap/internal/processor/MethodRetrievalProcessor.java", "diffHunk": "@@ -536,6 +537,11 @@ private boolean checkParameterAndReturnType(ExecutableElement method, List<Param\n         return true;\n     }\n \n+    private boolean isStreamTypeOrIterableFromJavaStdLib(Type type) {\n+        return type.isStreamType() || ( type.isIterableType() && type.getPackageName() != null", "originalCommit": "82d17d75ad3dabd6409926a0f27fcfcb7525b3b1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzAyOTE1Mw==", "url": "https://github.com/mapstruct/mapstruct/pull/2210#discussion_r507029153", "bodyText": "Let's keep the order of the checks same as before, first the parameter and then the result type. It makes it clearer when reading the message as well.", "author": "filiphr", "createdAt": "2020-10-18T07:22:18Z", "path": "processor/src/main/java/org/mapstruct/ap/internal/processor/MethodRetrievalProcessor.java", "diffHunk": "@@ -485,7 +486,7 @@ private boolean checkParameterAndReturnType(ExecutableElement method, List<Param\n \n         Type parameterType = sourceParameters.get( 0 ).getType();\n \n-        if ( parameterType.isIterableOrStreamType() && !resultType.isIterableOrStreamType() ) {\n+        if ( !resultType.isIterableOrStreamType() && isStreamTypeOrIterableFromJavaStdLib( parameterType ) ) {", "originalCommit": "82d17d75ad3dabd6409926a0f27fcfcb7525b3b1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzAyOTIwMw==", "url": "https://github.com/mapstruct/mapstruct/pull/2210#discussion_r507029203", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                RETRIEVAL_ITERABLE_TO_NON_ITERABLE( \"Can't generate mapping method from iterable type to non-iterable type from java stdlib.\" ),\n          \n          \n            \n                RETRIEVAL_ITERABLE_TO_NON_ITERABLE( \"Can't generate mapping method from iterable type from java stdlib to non-iterable type.\" ),", "author": "filiphr", "createdAt": "2020-10-18T07:22:53Z", "path": "processor/src/main/java/org/mapstruct/ap/internal/util/Message.java", "diffHunk": "@@ -143,9 +143,9 @@\n     RETRIEVAL_DUPLICATE_MAPPING_TARGETS( \"Can't generate mapping method with more than one @MappingTarget parameter.\" ),\n     RETRIEVAL_VOID_MAPPING_METHOD( \"Can't generate mapping method with return type void.\" ),\n     RETRIEVAL_NON_ASSIGNABLE_RESULTTYPE( \"The result type is not assignable to the the return type.\" ),\n-    RETRIEVAL_ITERABLE_TO_NON_ITERABLE( \"Can't generate mapping method from iterable type to non-iterable type.\" ),\n+    RETRIEVAL_ITERABLE_TO_NON_ITERABLE( \"Can't generate mapping method from iterable type to non-iterable type from java stdlib.\" ),", "originalCommit": "82d17d75ad3dabd6409926a0f27fcfcb7525b3b1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzAyOTM4MQ==", "url": "https://github.com/mapstruct/mapstruct/pull/2210#discussion_r507029381", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class FruitsMenu implements Iterable<org.mapstruct.ap.test.collection.iterabletononiterable.Fruit> {\n          \n          \n            \n            public class FruitsMenu implements Iterable<Fruit> {", "author": "filiphr", "createdAt": "2020-10-18T07:24:30Z", "path": "processor/src/test/java/org/mapstruct/ap/test/collection/iterabletononiterable/FruitsMenu.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright MapStruct Authors.\n+ *\n+ * Licensed under the Apache License version 2.0, available at http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.mapstruct.ap.test.collection.iterabletononiterable;\n+\n+import java.util.Iterator;\n+import java.util.List;\n+\n+/**\n+ *\n+ * @author Saheb Preet Singh\n+ */\n+public class FruitsMenu implements Iterable<org.mapstruct.ap.test.collection.iterabletononiterable.Fruit> {", "originalCommit": "82d17d75ad3dabd6409926a0f27fcfcb7525b3b1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzAyOTU1OA==", "url": "https://github.com/mapstruct/mapstruct/pull/2210#discussion_r507029558", "bodyText": "You can move this in the class annotated WithClasses. This might speed up the test a bit since it will do only one compilation per class instead of doing multiple in case the methods are ordered differently. Same comment for the other test methods.", "author": "filiphr", "createdAt": "2020-10-18T07:26:03Z", "path": "processor/src/test/java/org/mapstruct/ap/test/collection/iterabletononiterable/IterableToNonIterableMappingTest.java", "diffHunk": "@@ -45,4 +47,34 @@ public void shouldReverseMapStringListToStringUsingCustomMapper() {\n         assertThat( source.getNames() ).isEqualTo( Arrays.asList( \"Alice\", \"Bob\", \"Jim\" ) );\n         assertThat( source.publicNames ).isEqualTo( Arrays.asList( \"Alice\", \"Bob\", \"Jim\" ) );\n     }\n+\n+    @Test\n+    @IssueKey(\"607\")\n+    @WithClasses({\n+            FruitsMapper.class", "originalCommit": "82d17d75ad3dabd6409926a0f27fcfcb7525b3b1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzAyOTczNg==", "url": "https://github.com/mapstruct/mapstruct/pull/2210#discussion_r507029736", "bodyText": "You can do it in one assertion by using assertThat( salad.getFruits() ).extracting( Fruit::getType ).containsExactly( \"mango\", \"apple\", \"banana\" ). Same comment stands for the test method below.", "author": "filiphr", "createdAt": "2020-10-18T07:28:04Z", "path": "processor/src/test/java/org/mapstruct/ap/test/collection/iterabletononiterable/IterableToNonIterableMappingTest.java", "diffHunk": "@@ -45,4 +47,34 @@ public void shouldReverseMapStringListToStringUsingCustomMapper() {\n         assertThat( source.getNames() ).isEqualTo( Arrays.asList( \"Alice\", \"Bob\", \"Jim\" ) );\n         assertThat( source.publicNames ).isEqualTo( Arrays.asList( \"Alice\", \"Bob\", \"Jim\" ) );\n     }\n+\n+    @Test\n+    @IssueKey(\"607\")\n+    @WithClasses({\n+            FruitsMapper.class\n+    })\n+    public void shouldMapIterableToNonIterable() {\n+        List<Fruit> fruits =  Arrays.asList( new Fruit( \"mango\" ), new Fruit( \"apple\" ),\n+                new Fruit( \"banana\" ) );\n+        FruitsMenu menu = new FruitsMenu(fruits);\n+        FruitSalad salad = FruitsMapper.INSTANCE.fruitsMenuToSalad( menu );\n+        assertThat( salad.getFruits().get( 0 ).getType() ).isEqualTo( \"mango\" );\n+        assertThat( salad.getFruits().get( 1 ).getType() ).isEqualTo( \"apple\" );\n+        assertThat( salad.getFruits().get( 2 ).getType() ).isEqualTo( \"banana\" );", "originalCommit": "82d17d75ad3dabd6409926a0f27fcfcb7525b3b1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d8915c666fce7973b485730a2e0fb29cc1850b0a", "url": "https://github.com/mapstruct/mapstruct/commit/d8915c666fce7973b485730a2e0fb29cc1850b0a", "message": " #607 Mapping Iterable<?> object to an object instead of collection", "committedDate": "2020-10-19T01:02:59Z", "type": "forcePushed"}, {"oid": "0e46b86041e83446785e6bdfe5349296b62fc480", "url": "https://github.com/mapstruct/mapstruct/commit/0e46b86041e83446785e6bdfe5349296b62fc480", "message": "#607 Mapping Iterable<?> object to an object instead of collection", "committedDate": "2020-10-19T17:48:59Z", "type": "forcePushed"}, {"oid": "fbf8ced2f299736b5bc7245cd6a907af5a802439", "url": "https://github.com/mapstruct/mapstruct/commit/fbf8ced2f299736b5bc7245cd6a907af5a802439", "message": "#607 Mapping Iterable<?> object to an object instead of collection", "committedDate": "2020-10-20T13:19:21Z", "type": "commit"}, {"oid": "fbf8ced2f299736b5bc7245cd6a907af5a802439", "url": "https://github.com/mapstruct/mapstruct/commit/fbf8ced2f299736b5bc7245cd6a907af5a802439", "message": "#607 Mapping Iterable<?> object to an object instead of collection", "committedDate": "2020-10-20T13:19:21Z", "type": "forcePushed"}]}