{"pr_number": 2191, "pr_title": "#2174 Forged methods should inherit all thrown exceptions from their property mappings", "pr_createdAt": "2020-08-28T14:14:13Z", "pr_url": "https://github.com/mapstruct/mapstruct/pull/2191", "timeline": [{"oid": "01dc8535ea56160d286d12e9b6afb432c45459a7", "url": "https://github.com/mapstruct/mapstruct/commit/01dc8535ea56160d286d12e9b6afb432c45459a7", "message": "#2174 Forged methods should inherit all thrown exceptions from their property mappings", "committedDate": "2020-08-28T14:26:52Z", "type": "commit"}, {"oid": "01dc8535ea56160d286d12e9b6afb432c45459a7", "url": "https://github.com/mapstruct/mapstruct/commit/01dc8535ea56160d286d12e9b6afb432c45459a7", "message": "#2174 Forged methods should inherit all thrown exceptions from their property mappings", "committedDate": "2020-08-28T14:26:52Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ2ODM1MQ==", "url": "https://github.com/mapstruct/mapstruct/pull/2191#discussion_r479468351", "bodyText": "would be interesting to see if 2 forged methods are called from the same method. E.g. a postal code and a PostalCodeNotFounException. Both should be added to the thrown clause", "author": "sjaakd", "createdAt": "2020-08-28T18:26:12Z", "path": "processor/src/test/java/org/mapstruct/ap/test/bugs/_2174/UserMapper.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Copyright MapStruct Authors.\n+ *\n+ * Licensed under the Apache License version 2.0, available at http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.mapstruct.ap.test.bugs._2174;\n+\n+import org.mapstruct.Mapper;\n+import org.mapstruct.Mapping;\n+import org.mapstruct.factory.Mappers;\n+\n+/**\n+ * @author Filip Hrisafov\n+ */\n+@Mapper\n+public interface UserMapper {\n+\n+    UserMapper INSTANCE = Mappers.getMapper( UserMapper.class );\n+\n+    @Mapping(target = \"address.city\", source = \"city\")\n+    User map(UserDto dto) throws CityNotFoundException;\n+\n+    default City mapCity(String city) throws CityNotFoundException {", "originalCommit": "01dc8535ea56160d286d12e9b6afb432c45459a7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYxMzk0MA==", "url": "https://github.com/mapstruct/mapstruct/pull/2191#discussion_r479613940", "bodyText": "I'll add that as well", "author": "filiphr", "createdAt": "2020-08-29T06:12:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ2ODM1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ2ODU0OQ==", "url": "https://github.com/mapstruct/mapstruct/pull/2191#discussion_r479468549", "bodyText": "and what about factory methods?", "author": "sjaakd", "createdAt": "2020-08-28T18:26:39Z", "path": "processor/src/main/java/org/mapstruct/ap/internal/model/BeanMappingMethod.java", "diffHunk": "@@ -296,8 +296,18 @@ else if ( !method.isUpdateMethod() ) {\n                             existingVariableNames\n             );\n \n-            if (factoryMethod != null && method instanceof ForgedMethod ) {\n-                ( (ForgedMethod) method ).addThrownTypes( factoryMethod.getThrownTypes() );\n+            if ( method instanceof ForgedMethod ) {\n+                ForgedMethod forgedMethod = (ForgedMethod) method;\n+                if ( factoryMethod != null ) {", "originalCommit": "01dc8535ea56160d286d12e9b6afb432c45459a7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYxMzkyMQ==", "url": "https://github.com/mapstruct/mapstruct/pull/2191#discussion_r479613921", "bodyText": "What about them? Before the if check was if ( factoryMethod != null && method instanceOf ForgedMethod ). I moved the if ( factoryMethod != null ) inside.", "author": "filiphr", "createdAt": "2020-08-29T06:12:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ2ODU0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYxNjMzMg==", "url": "https://github.com/mapstruct/mapstruct/pull/2191#discussion_r479616332", "bodyText": "I meant: what if a factory method throws an exception while creating an object.. but I guess that's covered elsewhere ...", "author": "sjaakd", "createdAt": "2020-08-29T06:43:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ2ODU0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYxNzQ0Mg==", "url": "https://github.com/mapstruct/mapstruct/pull/2191#discussion_r479617442", "bodyText": "I didn't go down this rabbit hole :). I guess it is covered in some other test case", "author": "filiphr", "createdAt": "2020-08-29T06:58:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ2ODU0OQ=="}], "type": "inlineReview"}, {"oid": "7111ff9d70740c41b0ce388fa9eac0554f31cea1", "url": "https://github.com/mapstruct/mapstruct/commit/7111ff9d70740c41b0ce388fa9eac0554f31cea1", "message": "Add multiple thrown exceptions by different property mappings", "committedDate": "2020-08-29T06:19:48Z", "type": "commit"}]}