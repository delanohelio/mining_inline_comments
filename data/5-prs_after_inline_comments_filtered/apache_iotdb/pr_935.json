{"pr_number": 935, "pr_title": "Integrate data file version recording with time partitioning", "pr_createdAt": "2020-03-23T10:25:19Z", "pr_url": "https://github.com/apache/iotdb/pull/935", "timeline": [{"oid": "67580273f8b9a881aed441f2151b5fc5c6e95013", "url": "https://github.com/apache/iotdb/commit/67580273f8b9a881aed441f2151b5fc5c6e95013", "message": "integrate data partition with file version management", "committedDate": "2020-03-23T09:34:29Z", "type": "commit"}, {"oid": "790d2a7a5330e31594f0e12ae0b7abed8b398568", "url": "https://github.com/apache/iotdb/commit/790d2a7a5330e31594f0e12ae0b7abed8b398568", "message": "code refinements", "committedDate": "2020-03-23T10:20:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg2MzAxOA==", "url": "https://github.com/apache/iotdb/pull/935#discussion_r396863018", "bodyText": "All devices in A are newer than those in B.", "author": "fanhualta", "createdAt": "2020-03-24T02:05:14Z", "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -1638,12 +1646,98 @@ public void loadNewTsFile(TsFileResource newTsFileResource)\n     }\n   }\n \n+  /**\n+   * Find the position of \"newTsFileResource\" in the sequence files if it can be inserted into them.\n+   * @param newTsFileResource\n+   * @return POS_ALREADY_EXIST(-2) if some file has the same name as the one to be inserted\n+   *         POS_OVERLAP(-3) if some file overlaps the new file\n+   *         an insertion position i >= -1 if the new file can be inserted between [i, i+1]\n+   */\n+  private int findInsertionPosition(TsFileResource newTsFileResource) {\n+    File tsfileToBeInserted = newTsFileResource.getFile();\n+    long newFilePartitionId = Long.parseLong(tsfileToBeInserted.getParent());\n+    int insertPos = -1;\n+\n+    List<TsFileResource> sequenceList = new ArrayList<>(sequenceFileTreeSet);\n+    // find the position where the new file should be inserted\n+    for (int i = 0; i < sequenceList.size(); i++) {\n+      TsFileResource localFile = sequenceList.get(i);\n+      if (localFile.getFile().getName().equals(tsfileToBeInserted.getName())) {\n+        return POS_ALREADY_EXIST;\n+      }\n+      long localPartitionId = Long.parseLong(localFile.getFile().getParent());\n+      if (i == sequenceList.size() - 1 && localFile.getEndTimeMap().isEmpty()\n+          || newFilePartitionId != localPartitionId) {\n+        // skip files that are not in the partition as the new file and the last empty file\n+        continue;\n+      }\n+\n+      int fileComparison = compareTsFileDevices(newTsFileResource, localFile);\n+      switch (fileComparison) {\n+        case 0:\n+          // some devices are newer but some devices are older, the two files overlap in general\n+          return POS_OVERLAP;\n+        case -1:\n+          // all devices in the local file are newer than the new file, the new file can be\n+          // inserted before the new file\n+          return i - 1;\n+        default:\n+          // all devices in the local file are older than the new file, proceed to the next file\n+          insertPos = i;\n+      }\n+    }\n+    return insertPos;\n+  }\n+\n+  /**\n+   * Compare each device in the two files to find the time relation of them.\n+   * @param fileA\n+   * @param fileB\n+   * @return -1 if fileA is totally older than fileB (A < B)\n+   *          0 if fileA is partially older than fileB and partially newer than fileB (A X B)\n+   *          1 if fileA is totally newer than fileB (B < A)\n+   */\n+  private int compareTsFileDevices(TsFileResource fileA, TsFileResource fileB) {\n+    boolean hasPre = false, hasSubsequence = false;\n+    for (String device : fileA.getStartTimeMap().keySet()) {\n+      if (!fileB.getStartTimeMap().containsKey(device)) {\n+        continue;\n+      }\n+      long startTimeA = fileA.getStartTimeMap().get(device);\n+      long endTimeA = fileA.getEndTimeMap().get(device);\n+      long startTimeB = fileB.getStartTimeMap().get(device);\n+      long endTimeB = fileB.getEndTimeMap().get(device);\n+      if (startTimeA > endTimeB) {\n+        // A's data of the device is later than to the B's data\n+        hasSubsequence = true;\n+      } else if (startTimeB > endTimeA) {\n+        // A's data of the device is previous to the B's data\n+        hasPre = true;\n+      } else {\n+        // the two files overlap in the device\n+        return 0;\n+      }\n+    }\n+    if (hasPre && hasSubsequence) {\n+      // some devices are newer but some devices are older, the two files overlap in general\n+      return 0;\n+    }\n+    if (!hasPre && hasSubsequence) {\n+      // all devices in B are newer than those in A", "originalCommit": "790d2a7a5330e31594f0e12ae0b7abed8b398568", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg4Nzk5Mw==", "url": "https://github.com/apache/iotdb/pull/935#discussion_r396887993", "bodyText": "I have changed the assignments of hasPre and hasSubsequence, now hasPre means \"B has previous data to A\", so this should remain.", "author": "jt2594838", "createdAt": "2020-03-24T03:49:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg2MzAxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg2MzA3NA==", "url": "https://github.com/apache/iotdb/pull/935#discussion_r396863074", "bodyText": "All devices in A are older than those in B.", "author": "fanhualta", "createdAt": "2020-03-24T02:05:24Z", "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -1638,12 +1646,98 @@ public void loadNewTsFile(TsFileResource newTsFileResource)\n     }\n   }\n \n+  /**\n+   * Find the position of \"newTsFileResource\" in the sequence files if it can be inserted into them.\n+   * @param newTsFileResource\n+   * @return POS_ALREADY_EXIST(-2) if some file has the same name as the one to be inserted\n+   *         POS_OVERLAP(-3) if some file overlaps the new file\n+   *         an insertion position i >= -1 if the new file can be inserted between [i, i+1]\n+   */\n+  private int findInsertionPosition(TsFileResource newTsFileResource) {\n+    File tsfileToBeInserted = newTsFileResource.getFile();\n+    long newFilePartitionId = Long.parseLong(tsfileToBeInserted.getParent());\n+    int insertPos = -1;\n+\n+    List<TsFileResource> sequenceList = new ArrayList<>(sequenceFileTreeSet);\n+    // find the position where the new file should be inserted\n+    for (int i = 0; i < sequenceList.size(); i++) {\n+      TsFileResource localFile = sequenceList.get(i);\n+      if (localFile.getFile().getName().equals(tsfileToBeInserted.getName())) {\n+        return POS_ALREADY_EXIST;\n+      }\n+      long localPartitionId = Long.parseLong(localFile.getFile().getParent());\n+      if (i == sequenceList.size() - 1 && localFile.getEndTimeMap().isEmpty()\n+          || newFilePartitionId != localPartitionId) {\n+        // skip files that are not in the partition as the new file and the last empty file\n+        continue;\n+      }\n+\n+      int fileComparison = compareTsFileDevices(newTsFileResource, localFile);\n+      switch (fileComparison) {\n+        case 0:\n+          // some devices are newer but some devices are older, the two files overlap in general\n+          return POS_OVERLAP;\n+        case -1:\n+          // all devices in the local file are newer than the new file, the new file can be\n+          // inserted before the new file\n+          return i - 1;\n+        default:\n+          // all devices in the local file are older than the new file, proceed to the next file\n+          insertPos = i;\n+      }\n+    }\n+    return insertPos;\n+  }\n+\n+  /**\n+   * Compare each device in the two files to find the time relation of them.\n+   * @param fileA\n+   * @param fileB\n+   * @return -1 if fileA is totally older than fileB (A < B)\n+   *          0 if fileA is partially older than fileB and partially newer than fileB (A X B)\n+   *          1 if fileA is totally newer than fileB (B < A)\n+   */\n+  private int compareTsFileDevices(TsFileResource fileA, TsFileResource fileB) {\n+    boolean hasPre = false, hasSubsequence = false;\n+    for (String device : fileA.getStartTimeMap().keySet()) {\n+      if (!fileB.getStartTimeMap().containsKey(device)) {\n+        continue;\n+      }\n+      long startTimeA = fileA.getStartTimeMap().get(device);\n+      long endTimeA = fileA.getEndTimeMap().get(device);\n+      long startTimeB = fileB.getStartTimeMap().get(device);\n+      long endTimeB = fileB.getEndTimeMap().get(device);\n+      if (startTimeA > endTimeB) {\n+        // A's data of the device is later than to the B's data\n+        hasSubsequence = true;\n+      } else if (startTimeB > endTimeA) {\n+        // A's data of the device is previous to the B's data\n+        hasPre = true;\n+      } else {\n+        // the two files overlap in the device\n+        return 0;\n+      }\n+    }\n+    if (hasPre && hasSubsequence) {\n+      // some devices are newer but some devices are older, the two files overlap in general\n+      return 0;\n+    }\n+    if (!hasPre && hasSubsequence) {\n+      // all devices in B are newer than those in A\n+      return -1;\n+    }\n+    // all devices in B are older than those in A", "originalCommit": "790d2a7a5330e31594f0e12ae0b7abed8b398568", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg4ODAxMg==", "url": "https://github.com/apache/iotdb/pull/935#discussion_r396888012", "bodyText": "See above.", "author": "jt2594838", "createdAt": "2020-03-24T03:49:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg2MzA3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg2NDY5Nw==", "url": "https://github.com/apache/iotdb/pull/935#discussion_r396864697", "bodyText": "case 1:", "author": "fanhualta", "createdAt": "2020-03-24T02:12:18Z", "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -1638,12 +1646,98 @@ public void loadNewTsFile(TsFileResource newTsFileResource)\n     }\n   }\n \n+  /**\n+   * Find the position of \"newTsFileResource\" in the sequence files if it can be inserted into them.\n+   * @param newTsFileResource\n+   * @return POS_ALREADY_EXIST(-2) if some file has the same name as the one to be inserted\n+   *         POS_OVERLAP(-3) if some file overlaps the new file\n+   *         an insertion position i >= -1 if the new file can be inserted between [i, i+1]\n+   */\n+  private int findInsertionPosition(TsFileResource newTsFileResource) {\n+    File tsfileToBeInserted = newTsFileResource.getFile();\n+    long newFilePartitionId = Long.parseLong(tsfileToBeInserted.getParent());\n+    int insertPos = -1;\n+\n+    List<TsFileResource> sequenceList = new ArrayList<>(sequenceFileTreeSet);\n+    // find the position where the new file should be inserted\n+    for (int i = 0; i < sequenceList.size(); i++) {\n+      TsFileResource localFile = sequenceList.get(i);\n+      if (localFile.getFile().getName().equals(tsfileToBeInserted.getName())) {\n+        return POS_ALREADY_EXIST;\n+      }\n+      long localPartitionId = Long.parseLong(localFile.getFile().getParent());\n+      if (i == sequenceList.size() - 1 && localFile.getEndTimeMap().isEmpty()\n+          || newFilePartitionId != localPartitionId) {\n+        // skip files that are not in the partition as the new file and the last empty file\n+        continue;\n+      }\n+\n+      int fileComparison = compareTsFileDevices(newTsFileResource, localFile);\n+      switch (fileComparison) {\n+        case 0:\n+          // some devices are newer but some devices are older, the two files overlap in general\n+          return POS_OVERLAP;\n+        case -1:", "originalCommit": "790d2a7a5330e31594f0e12ae0b7abed8b398568", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg4ODM2Ng==", "url": "https://github.com/apache/iotdb/pull/935#discussion_r396888366", "bodyText": "I believe it should be -1, which means data in the new file has smaller timestamps than the local file, so we can insert the new file before the local file.", "author": "jt2594838", "createdAt": "2020-03-24T03:51:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg2NDY5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg2NzU3MQ==", "url": "https://github.com/apache/iotdb/pull/935#discussion_r396867571", "bodyText": "I think this method needs to be  checked carefully.", "author": "fanhualta", "createdAt": "2020-03-24T02:24:10Z", "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -1638,12 +1646,98 @@ public void loadNewTsFile(TsFileResource newTsFileResource)\n     }\n   }\n \n+  /**\n+   * Find the position of \"newTsFileResource\" in the sequence files if it can be inserted into them.\n+   * @param newTsFileResource\n+   * @return POS_ALREADY_EXIST(-2) if some file has the same name as the one to be inserted\n+   *         POS_OVERLAP(-3) if some file overlaps the new file\n+   *         an insertion position i >= -1 if the new file can be inserted between [i, i+1]\n+   */\n+  private int findInsertionPosition(TsFileResource newTsFileResource) {\n+    File tsfileToBeInserted = newTsFileResource.getFile();\n+    long newFilePartitionId = Long.parseLong(tsfileToBeInserted.getParent());\n+    int insertPos = -1;\n+\n+    List<TsFileResource> sequenceList = new ArrayList<>(sequenceFileTreeSet);\n+    // find the position where the new file should be inserted\n+    for (int i = 0; i < sequenceList.size(); i++) {\n+      TsFileResource localFile = sequenceList.get(i);\n+      if (localFile.getFile().getName().equals(tsfileToBeInserted.getName())) {\n+        return POS_ALREADY_EXIST;\n+      }\n+      long localPartitionId = Long.parseLong(localFile.getFile().getParent());\n+      if (i == sequenceList.size() - 1 && localFile.getEndTimeMap().isEmpty()\n+          || newFilePartitionId != localPartitionId) {\n+        // skip files that are not in the partition as the new file and the last empty file\n+        continue;\n+      }\n+\n+      int fileComparison = compareTsFileDevices(newTsFileResource, localFile);\n+      switch (fileComparison) {\n+        case 0:\n+          // some devices are newer but some devices are older, the two files overlap in general\n+          return POS_OVERLAP;\n+        case -1:\n+          // all devices in the local file are newer than the new file, the new file can be\n+          // inserted before the new file\n+          return i - 1;\n+        default:\n+          // all devices in the local file are older than the new file, proceed to the next file\n+          insertPos = i;\n+      }\n+    }\n+    return insertPos;\n+  }\n+\n+  /**\n+   * Compare each device in the two files to find the time relation of them.\n+   * @param fileA\n+   * @param fileB\n+   * @return -1 if fileA is totally older than fileB (A < B)\n+   *          0 if fileA is partially older than fileB and partially newer than fileB (A X B)\n+   *          1 if fileA is totally newer than fileB (B < A)\n+   */\n+  private int compareTsFileDevices(TsFileResource fileA, TsFileResource fileB) {", "originalCommit": "790d2a7a5330e31594f0e12ae0b7abed8b398568", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg4ODUwNw==", "url": "https://github.com/apache/iotdb/pull/935#discussion_r396888507", "bodyText": "Yes, I mistakenly reversed the condition and now it is fixed.", "author": "jt2594838", "createdAt": "2020-03-24T03:51:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg2NzU3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg2ODI2MQ==", "url": "https://github.com/apache/iotdb/pull/935#discussion_r396868261", "bodyText": "return i;\nIt needs to add in the cur pos and move all newer files backward.", "author": "fanhualta", "createdAt": "2020-03-24T02:27:06Z", "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -1638,12 +1646,98 @@ public void loadNewTsFile(TsFileResource newTsFileResource)\n     }\n   }\n \n+  /**\n+   * Find the position of \"newTsFileResource\" in the sequence files if it can be inserted into them.\n+   * @param newTsFileResource\n+   * @return POS_ALREADY_EXIST(-2) if some file has the same name as the one to be inserted\n+   *         POS_OVERLAP(-3) if some file overlaps the new file\n+   *         an insertion position i >= -1 if the new file can be inserted between [i, i+1]\n+   */\n+  private int findInsertionPosition(TsFileResource newTsFileResource) {\n+    File tsfileToBeInserted = newTsFileResource.getFile();\n+    long newFilePartitionId = Long.parseLong(tsfileToBeInserted.getParent());\n+    int insertPos = -1;\n+\n+    List<TsFileResource> sequenceList = new ArrayList<>(sequenceFileTreeSet);\n+    // find the position where the new file should be inserted\n+    for (int i = 0; i < sequenceList.size(); i++) {\n+      TsFileResource localFile = sequenceList.get(i);\n+      if (localFile.getFile().getName().equals(tsfileToBeInserted.getName())) {\n+        return POS_ALREADY_EXIST;\n+      }\n+      long localPartitionId = Long.parseLong(localFile.getFile().getParent());\n+      if (i == sequenceList.size() - 1 && localFile.getEndTimeMap().isEmpty()\n+          || newFilePartitionId != localPartitionId) {\n+        // skip files that are not in the partition as the new file and the last empty file\n+        continue;\n+      }\n+\n+      int fileComparison = compareTsFileDevices(newTsFileResource, localFile);\n+      switch (fileComparison) {\n+        case 0:\n+          // some devices are newer but some devices are older, the two files overlap in general\n+          return POS_OVERLAP;\n+        case -1:\n+          // all devices in the local file are newer than the new file, the new file can be\n+          // inserted before the new file\n+          return i - 1;", "originalCommit": "790d2a7a5330e31594f0e12ae0b7abed8b398568", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg4ODc5NQ==", "url": "https://github.com/apache/iotdb/pull/935#discussion_r396888795", "bodyText": "As I have explained in the javadoc that the file will be inserted between [i, i +1], I think it does not really matter.", "author": "jt2594838", "createdAt": "2020-03-24T03:53:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg2ODI2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg2ODYwNA==", "url": "https://github.com/apache/iotdb/pull/935#discussion_r396868604", "bodyText": "return i + 1;\nIt needs to be inserted after the older files.", "author": "fanhualta", "createdAt": "2020-03-24T02:28:24Z", "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -1638,12 +1646,98 @@ public void loadNewTsFile(TsFileResource newTsFileResource)\n     }\n   }\n \n+  /**\n+   * Find the position of \"newTsFileResource\" in the sequence files if it can be inserted into them.\n+   * @param newTsFileResource\n+   * @return POS_ALREADY_EXIST(-2) if some file has the same name as the one to be inserted\n+   *         POS_OVERLAP(-3) if some file overlaps the new file\n+   *         an insertion position i >= -1 if the new file can be inserted between [i, i+1]\n+   */\n+  private int findInsertionPosition(TsFileResource newTsFileResource) {\n+    File tsfileToBeInserted = newTsFileResource.getFile();\n+    long newFilePartitionId = Long.parseLong(tsfileToBeInserted.getParent());\n+    int insertPos = -1;\n+\n+    List<TsFileResource> sequenceList = new ArrayList<>(sequenceFileTreeSet);\n+    // find the position where the new file should be inserted\n+    for (int i = 0; i < sequenceList.size(); i++) {\n+      TsFileResource localFile = sequenceList.get(i);\n+      if (localFile.getFile().getName().equals(tsfileToBeInserted.getName())) {\n+        return POS_ALREADY_EXIST;\n+      }\n+      long localPartitionId = Long.parseLong(localFile.getFile().getParent());\n+      if (i == sequenceList.size() - 1 && localFile.getEndTimeMap().isEmpty()\n+          || newFilePartitionId != localPartitionId) {\n+        // skip files that are not in the partition as the new file and the last empty file\n+        continue;\n+      }\n+\n+      int fileComparison = compareTsFileDevices(newTsFileResource, localFile);\n+      switch (fileComparison) {\n+        case 0:\n+          // some devices are newer but some devices are older, the two files overlap in general\n+          return POS_OVERLAP;\n+        case -1:\n+          // all devices in the local file are newer than the new file, the new file can be\n+          // inserted before the new file\n+          return i - 1;\n+        default:\n+          // all devices in the local file are older than the new file, proceed to the next file\n+          insertPos = i;", "originalCommit": "790d2a7a5330e31594f0e12ae0b7abed8b398568", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg4ODg5NA==", "url": "https://github.com/apache/iotdb/pull/935#discussion_r396888894", "bodyText": "See above.", "author": "jt2594838", "createdAt": "2020-03-24T03:53:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg2ODYwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg2OTE0OQ==", "url": "https://github.com/apache/iotdb/pull/935#discussion_r396869149", "bodyText": "You can use if(! sequenceFileTreeSet.isEmpty()).\nThe origin if (subsequentIndex != sequenceFileTreeSet.size() || preIndex != -1) is equals to above.", "author": "fanhualta", "createdAt": "2020-03-24T02:30:24Z", "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -1559,61 +1601,24 @@ public void loadNewTsFileForSync(TsFileResource newTsFileResource)\n   public void loadNewTsFile(TsFileResource newTsFileResource)\n       throws TsFileProcessorException {\n     File tsfileToBeInserted = newTsFileResource.getFile();\n+\n     writeLock();\n     mergeLock.writeLock().lock();\n     try {\n-      boolean isOverlap = false;\n-      int preIndex = -1, subsequentIndex = sequenceFileTreeSet.size();\n-\n-      List<TsFileResource> sequenceList = new ArrayList<>(sequenceFileTreeSet);\n-      // check new tsfile\n-      outer:\n-      for (int i = 0; i < sequenceList.size(); i++) {\n-        if (sequenceList.get(i).getFile().getName().equals(tsfileToBeInserted.getName())) {\n-          return;\n-        }\n-        if (i == sequenceList.size() - 1 && sequenceList.get(i).getEndTimeMap().isEmpty()) {\n-          continue;\n-        }\n-        boolean hasPre = false, hasSubsequence = false;\n-        for (String device : newTsFileResource.getStartTimeMap().keySet()) {\n-          if (sequenceList.get(i).getStartTimeMap().containsKey(device)) {\n-            long startTime1 = sequenceList.get(i).getStartTimeMap().get(device);\n-            long endTime1 = sequenceList.get(i).getEndTimeMap().get(device);\n-            long startTime2 = newTsFileResource.getStartTimeMap().get(device);\n-            long endTime2 = newTsFileResource.getEndTimeMap().get(device);\n-            if (startTime1 > endTime2) {\n-              hasSubsequence = true;\n-            } else if (startTime2 > endTime1) {\n-              hasPre = true;\n-            } else {\n-              isOverlap = true;\n-              break outer;\n-            }\n-          }\n-        }\n-        if (hasPre && hasSubsequence) {\n-          isOverlap = true;\n-          break;\n-        }\n-        if (!hasPre && hasSubsequence) {\n-          subsequentIndex = i;\n-          break;\n-        }\n-        if (hasPre) {\n-          preIndex = i;\n-        }\n+      int insertPos = findInsertionPosition(newTsFileResource);\n+      if (insertPos == POS_ALREADY_EXIST) {\n+        return;\n       }\n \n       // loading tsfile by type\n-      if (isOverlap) {\n+      if (insertPos == POS_OVERLAP) {\n         loadTsFileByType(LoadTsFileType.LOAD_UNSEQUENCE, tsfileToBeInserted, newTsFileResource);\n       } else {\n \n         // check whether the file name needs to be renamed.\n-        if (subsequentIndex != sequenceFileTreeSet.size() || preIndex != -1) {\n-          String newFileName = getFileNameForLoadingFile(tsfileToBeInserted.getName(), preIndex,\n-              subsequentIndex, getTimePartitionFromTsFileResource(newTsFileResource));\n+        if (insertPos != sequenceFileTreeSet.size() - 1 || insertPos != -1) {", "originalCommit": "790d2a7a5330e31594f0e12ae0b7abed8b398568", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg4OTcxNA==", "url": "https://github.com/apache/iotdb/pull/935#discussion_r396889714", "bodyText": "Changed. But I doubt the quality of them, as the file being inserted at the head or the tail does not necessarily indicate the set is empty.", "author": "jt2594838", "createdAt": "2020-03-24T03:56:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg2OTE0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg3MDA0MQ==", "url": "https://github.com/apache/iotdb/pull/935#discussion_r396870041", "bodyText": "insertIndex == sequenceFileTreeSet.size()\nLogic:\nIf it needs to be inserted to be the last in the list.\nJust a note: currently, insertPos  is equals to subsequentIndex .", "author": "fanhualta", "createdAt": "2020-03-24T02:33:59Z", "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -1702,24 +1796,26 @@ private void removeFullyOverlapFiles(TsFileResource resource, Iterator<TsFileRes\n    * version number is the version number in the tsfile with a larger timestamp.\n    *\n    * @param tsfileName origin tsfile name\n+   * @param insertIndex the new file will be inserted between the files [insertIndex, insertIndex\n+   *                   + 1]\n    * @return appropriate filename\n    */\n-  private String getFileNameForLoadingFile(String tsfileName, int preIndex, int subsequentIndex,\n+  private String getFileNameForLoadingFile(String tsfileName, int insertIndex,\n       long timePartitionId) {\n     long currentTsFileTime = Long\n         .parseLong(tsfileName.split(IoTDBConstant.TSFILE_NAME_SEPARATOR)[0]);\n     long preTime;\n     List<TsFileResource> sequenceList = new ArrayList<>(sequenceFileTreeSet);\n-    if (preIndex == -1) {\n+    if (insertIndex == -1) {\n       preTime = 0L;\n     } else {\n-      String preName = sequenceList.get(preIndex).getFile().getName();\n+      String preName = sequenceList.get(insertIndex).getFile().getName();\n       preTime = Long.parseLong(preName.split(IoTDBConstant.TSFILE_NAME_SEPARATOR)[0]);\n     }\n-    if (subsequentIndex == sequenceFileTreeSet.size()) {\n+    if (insertIndex == sequenceFileTreeSet.size() - 1) {", "originalCommit": "790d2a7a5330e31594f0e12ae0b7abed8b398568", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg5MDI5NQ==", "url": "https://github.com/apache/iotdb/pull/935#discussion_r396890295", "bodyText": "You have misunderstood the meaning of insertIndex, please read the Javadoc. For example, if the insertIndex is -1, it means the new file will be inserted between [-1, 0], not that the new file will be inserted at -1.", "author": "jt2594838", "createdAt": "2020-03-24T03:59:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg3MDA0MQ=="}], "type": "inlineReview"}, {"oid": "03045b093114652fbf384cbf79d74365ea3a519b", "url": "https://github.com/apache/iotdb/commit/03045b093114652fbf384cbf79d74365ea3a519b", "message": "fix comparison and tests", "committedDate": "2020-03-24T03:45:31Z", "type": "commit"}, {"oid": "ac2f66ee9ec0d6af3167788eae4806debeece43d", "url": "https://github.com/apache/iotdb/commit/ac2f66ee9ec0d6af3167788eae4806debeece43d", "message": "fix by review comments", "committedDate": "2020-03-24T04:00:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI2NjU3OQ==", "url": "https://github.com/apache/iotdb/pull/935#discussion_r397266579", "bodyText": "The parent file of the file may not be its time range. It's better to get time range from the time.\nSuch as:\nload /data/1584445970309-101-1.tsfile", "author": "fanhualta", "createdAt": "2020-03-24T15:58:07Z", "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -1655,7 +1655,7 @@ public void loadNewTsFile(TsFileResource newTsFileResource)\n    */\n   private int findInsertionPosition(TsFileResource newTsFileResource) {\n     File tsfileToBeInserted = newTsFileResource.getFile();\n-    long newFilePartitionId = Long.parseLong(tsfileToBeInserted.getParent());\n+    long newFilePartitionId = Long.parseLong(tsfileToBeInserted.getParentFile().getName());", "originalCommit": "ac2f66ee9ec0d6af3167788eae4806debeece43d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU2NTY0OQ==", "url": "https://github.com/apache/iotdb/pull/935#discussion_r397565649", "bodyText": "Fixed. But there is still one thing remaining, what if the file belongs to more than one partition? Currently, I will report an error and a delicate solution will be left as a future job.", "author": "jt2594838", "createdAt": "2020-03-25T01:54:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI2NjU3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU2ODM4OQ==", "url": "https://github.com/apache/iotdb/pull/935#discussion_r397568389", "bodyText": "Yes, I agree with you.", "author": "fanhualta", "createdAt": "2020-03-25T02:05:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI2NjU3OQ=="}], "type": "inlineReview"}, {"oid": "b9cd6e24eb02cdabaa9ce60d7680257ae56d9bde", "url": "https://github.com/apache/iotdb/commit/b9cd6e24eb02cdabaa9ce60d7680257ae56d9bde", "message": "fix time partition id getter", "committedDate": "2020-03-25T02:03:34Z", "type": "commit"}, {"oid": "a8a5e6c3766b897d187c7726c4414c8c31be2fb9", "url": "https://github.com/apache/iotdb/commit/a8a5e6c3766b897d187c7726c4414c8c31be2fb9", "message": "Merge branch 'master' into partitioned_file_version_management", "committedDate": "2020-03-25T02:06:23Z", "type": "commit"}, {"oid": "1069cba6bb1ab1ac9542ee594100bebb29a4af15", "url": "https://github.com/apache/iotdb/commit/1069cba6bb1ab1ac9542ee594100bebb29a4af15", "message": "modify skip file condition", "committedDate": "2020-03-25T04:17:04Z", "type": "commit"}, {"oid": "8f593088e888758171b8d5e6377a737fa32960eb", "url": "https://github.com/apache/iotdb/commit/8f593088e888758171b8d5e6377a737fa32960eb", "message": "fix a comment", "committedDate": "2020-03-25T05:26:45Z", "type": "commit"}, {"oid": "96c0481a041c3ca54971c99bf6f104fb7d5818a8", "url": "https://github.com/apache/iotdb/commit/96c0481a041c3ca54971c99bf6f104fb7d5818a8", "message": "avoid copy resource twice when loading new file", "committedDate": "2020-03-25T05:53:35Z", "type": "commit"}, {"oid": "b544b9f403603214f966df8004a3bc54d794985b", "url": "https://github.com/apache/iotdb/commit/b544b9f403603214f966df8004a3bc54d794985b", "message": "fix comment", "committedDate": "2020-03-25T06:09:25Z", "type": "commit"}, {"oid": "d92118723c10afbfbd1b997cb308ce53c6539cc7", "url": "https://github.com/apache/iotdb/commit/d92118723c10afbfbd1b997cb308ce53c6539cc7", "message": "reduce exception depth", "committedDate": "2020-03-25T06:22:30Z", "type": "commit"}, {"oid": "f4d1fa8dc1c24d015c1a7cc1009fb22650d9daf4", "url": "https://github.com/apache/iotdb/commit/f4d1fa8dc1c24d015c1a7cc1009fb22650d9daf4", "message": "fix exception", "committedDate": "2020-03-25T07:58:59Z", "type": "commit"}]}