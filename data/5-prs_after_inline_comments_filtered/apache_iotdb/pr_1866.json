{"pr_number": 1866, "pr_title": "fix some regression bugs", "pr_createdAt": "2020-10-26T11:57:22Z", "pr_url": "https://github.com/apache/iotdb/pull/1866", "timeline": [{"oid": "6d5f8c6a38b1a22962d789c7830440ddf5040ab2", "url": "https://github.com/apache/iotdb/commit/6d5f8c6a38b1a22962d789c7830440ddf5040ab2", "message": "remove detailed error message", "committedDate": "2020-10-26T06:18:58Z", "type": "commit"}, {"oid": "ec5cc5daf6ebb077c3e7dea49a1b738a33d385c0", "url": "https://github.com/apache/iotdb/commit/ec5cc5daf6ebb077c3e7dea49a1b738a33d385c0", "message": "points -> measurements", "committedDate": "2020-10-26T06:25:29Z", "type": "commit"}, {"oid": "d1f91d998dede8b2e8addc5839452e5cdc79b472", "url": "https://github.com/apache/iotdb/commit/d1f91d998dede8b2e8addc5839452e5cdc79b472", "message": "final", "committedDate": "2020-10-26T06:32:00Z", "type": "commit"}, {"oid": "324689ec293fe368e04be0add6533db663d97e03", "url": "https://github.com/apache/iotdb/commit/324689ec293fe368e04be0add6533db663d97e03", "message": "delete", "committedDate": "2020-10-26T11:10:31Z", "type": "commit"}, {"oid": "f0c1a3313ddb02331889aa94b9d088851532c7ef", "url": "https://github.com/apache/iotdb/commit/f0c1a3313ddb02331889aa94b9d088851532c7ef", "message": "delete", "committedDate": "2020-10-26T11:13:23Z", "type": "commit"}, {"oid": "33c0b3f07aff017bdb93e0971407c87d05ff42d6", "url": "https://github.com/apache/iotdb/commit/33c0b3f07aff017bdb93e0971407c87d05ff42d6", "message": "index out of bound", "committedDate": "2020-10-26T11:49:00Z", "type": "commit"}, {"oid": "e8b3876b5ed4ce16bf5f4918321d4d07693e5fe3", "url": "https://github.com/apache/iotdb/commit/e8b3876b5ed4ce16bf5f4918321d4d07693e5fe3", "message": "format", "committedDate": "2020-10-26T11:58:44Z", "type": "commit"}, {"oid": "cfcec2710c5f19b095e19b40ecdd7338fa9bd396", "url": "https://github.com/apache/iotdb/commit/cfcec2710c5f19b095e19b40ecdd7338fa9bd396", "message": "log", "committedDate": "2020-10-26T12:04:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM2NjgxMw==", "url": "https://github.com/apache/iotdb/pull/1866#discussion_r512366813", "bodyText": "Sorry, I'm a little confused about when will this method throw a IndexOutOfBoundsException?", "author": "LebronAl", "createdAt": "2020-10-27T01:44:02Z", "path": "server/src/main/java/org/apache/iotdb/db/qp/executor/PlanExecutor.java", "diffHunk": "@@ -371,7 +374,12 @@ protected QueryDataSet processDataQuery(QueryPlan queryPlan, QueryContext contex\n       } else if (queryPlan instanceof LastQueryPlan) {\n         queryDataSet = queryRouter.lastQuery((LastQueryPlan) queryPlan, context);\n       } else {\n-        queryDataSet = queryRouter.rawDataQuery((RawDataQueryPlan) queryPlan, context);\n+        try {\n+          queryDataSet = queryRouter.rawDataQuery((RawDataQueryPlan) queryPlan, context);\n+        } catch (IndexOutOfBoundsException e) {", "originalCommit": "e8b3876b5ed4ce16bf5f4918321d4d07693e5fe3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM2ODcxOA==", "url": "https://github.com/apache/iotdb/pull/1866#discussion_r512368718", "bodyText": "When we have some nonsense predicates, such as\n\nselect status, temperature from root.ln.wf01.wt01 where time < 2017-11-01T00:05:00.000 and time > 2017-11-01T00:12:00.000", "author": "Ring-k", "createdAt": "2020-10-27T01:50:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM2NjgxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM3MDY1Nw==", "url": "https://github.com/apache/iotdb/pull/1866#discussion_r512370657", "bodyText": "I believe this is a misuse, since it does not involve any index, and I would prefer creating a new Exception like IllegalTimeRangeException of IllegalPredicateException. You may correct it within this PR or just create an issue about it.", "author": "jt2594838", "createdAt": "2020-10-27T01:57:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM2NjgxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ2MTMxNw==", "url": "https://github.com/apache/iotdb/pull/1866#discussion_r512461317", "bodyText": "To make it more clear, I created EmptyIntervalException.", "author": "Ring-k", "createdAt": "2020-10-27T07:19:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM2NjgxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM3MjE2MQ==", "url": "https://github.com/apache/iotdb/pull/1866#discussion_r512372161", "bodyText": "This is not relevant to this PR, but it occurs to me that RunTimeExceptions sometimes does not provide useful messages, and it would difficult to locate the problem.\nSo please add this:\nif (cause instanceof RunTimeException) {\n  logger.error(\"RuntimeException during executing {}\", log , cause);\n}", "author": "jt2594838", "createdAt": "2020-10-27T02:03:16Z", "path": "cluster/src/main/java/org/apache/iotdb/cluster/server/member/RaftMember.java", "diffHunk": "@@ -1334,7 +1338,7 @@ private TSStatus handleLogExecutionException(\n           .getStatus(Arrays.asList(((BatchInsertionException) cause).getFailingStatus()));\n     }\n     TSStatus tsStatus = StatusUtils.getStatus(StatusUtils.EXECUTE_STATEMENT_ERROR,\n-        cause.getClass().getName() + \":\" + cause.getMessage());\n+        cause.getMessage());\n     if (cause instanceof IoTDBException) {", "originalCommit": "e8b3876b5ed4ce16bf5f4918321d4d07693e5fe3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM3NzI4OQ==", "url": "https://github.com/apache/iotdb/pull/1866#discussion_r512377289", "bodyText": "That's a good idea.", "author": "Ring-k", "createdAt": "2020-10-27T02:22:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM3MjE2MQ=="}], "type": "inlineReview"}, {"oid": "7a862a4f5f8d16d6237bc46b16d679bca17232ed", "url": "https://github.com/apache/iotdb/commit/7a862a4f5f8d16d6237bc46b16d679bca17232ed", "message": "EmptyIntervalException", "committedDate": "2020-10-27T07:17:08Z", "type": "commit"}, {"oid": "cd69eff1a630113fb35576f2ee640a73711dcc48", "url": "https://github.com/apache/iotdb/commit/cd69eff1a630113fb35576f2ee640a73711dcc48", "message": "formaty", "committedDate": "2020-10-27T07:21:03Z", "type": "commit"}, {"oid": "53a58ec5702f8ac4ecac2f0630a2f453724e2e2d", "url": "https://github.com/apache/iotdb/commit/53a58ec5702f8ac4ecac2f0630a2f453724e2e2d", "message": "license", "committedDate": "2020-10-27T08:01:00Z", "type": "commit"}]}