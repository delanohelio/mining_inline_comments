{"pr_number": 934, "pr_title": "Delete dataTypeMapping etc fields in QueryPlan", "pr_createdAt": "2020-03-23T09:54:14Z", "pr_url": "https://github.com/apache/iotdb/pull/934", "timeline": [{"oid": "c9cce2c9352f90dca9346f63fe1730ce35bae26f", "url": "https://github.com/apache/iotdb/commit/c9cce2c9352f90dca9346f63fe1730ce35bae26f", "message": "Merge branch 'master' of https://github.com/apache/incubator-iotdb", "committedDate": "2020-02-17T06:59:14Z", "type": "commit"}, {"oid": "27d100885dbcad4c0e11f4eca354c31e8bf5f1d5", "url": "https://github.com/apache/iotdb/commit/27d100885dbcad4c0e11f4eca354c31e8bf5f1d5", "message": "Merge branch 'master' of https://github.com/apache/incubator-iotdb", "committedDate": "2020-03-03T04:15:08Z", "type": "commit"}, {"oid": "87dcd5ccfbdfb632295a8602df2a5d6d059f4f87", "url": "https://github.com/apache/iotdb/commit/87dcd5ccfbdfb632295a8602df2a5d6d059f4f87", "message": "Merge branch 'master' of https://github.com/apache/incubator-iotdb", "committedDate": "2020-03-05T03:28:01Z", "type": "commit"}, {"oid": "c75572625cfb6d41e411b1701c672b2148e526d1", "url": "https://github.com/apache/iotdb/commit/c75572625cfb6d41e411b1701c672b2148e526d1", "message": "Merge branch 'master' of https://github.com/apache/incubator-iotdb", "committedDate": "2020-03-05T08:50:10Z", "type": "commit"}, {"oid": "951624b62ae7d9a447e942939247b860b0912e2c", "url": "https://github.com/apache/iotdb/commit/951624b62ae7d9a447e942939247b860b0912e2c", "message": "Merge branch 'master' of https://github.com/apache/incubator-iotdb", "committedDate": "2020-03-10T06:28:23Z", "type": "commit"}, {"oid": "e4ce841b0af3d5c7da5c5adf30e19cdf7fd4020c", "url": "https://github.com/apache/iotdb/commit/e4ce841b0af3d5c7da5c5adf30e19cdf7fd4020c", "message": "Modify doc", "committedDate": "2020-03-10T10:14:56Z", "type": "commit"}, {"oid": "5966bff1c49845d34cacbc10cce63b0b6028b194", "url": "https://github.com/apache/iotdb/commit/5966bff1c49845d34cacbc10cce63b0b6028b194", "message": "Fix conflict", "committedDate": "2020-03-11T10:12:33Z", "type": "commit"}, {"oid": "e71fb8080350cbf0a88c86fee62013189a4e0c24", "url": "https://github.com/apache/iotdb/commit/e71fb8080350cbf0a88c86fee62013189a4e0c24", "message": "Merge branch 'master' of https://github.com/apache/incubator-iotdb", "committedDate": "2020-03-23T06:51:06Z", "type": "commit"}, {"oid": "d226b9c1d4c63db737625b54933551bb8820e19d", "url": "https://github.com/apache/iotdb/commit/d226b9c1d4c63db737625b54933551bb8820e19d", "message": "Changes to QueryPlan dataTypeMapping", "committedDate": "2020-03-23T09:40:59Z", "type": "commit"}, {"oid": "875794363bc29fa27bdfeb110146fce3a88dd111", "url": "https://github.com/apache/iotdb/commit/875794363bc29fa27bdfeb110146fce3a88dd111", "message": "Fix typo", "committedDate": "2020-03-23T09:57:11Z", "type": "commit"}, {"oid": "a4d4ae474fd81fdcd00d87c54e04509e61aeb5ad", "url": "https://github.com/apache/iotdb/commit/a4d4ae474fd81fdcd00d87c54e04509e61aeb5ad", "message": "Optimize some process", "committedDate": "2020-03-23T13:59:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk2NzcwNA==", "url": "https://github.com/apache/iotdb/pull/934#discussion_r396967704", "bodyText": "Actually I think it's better to use String here so that you won't use getFullPath() when call this method ... What do you think?", "author": "samperson1997", "createdAt": "2020-03-24T08:14:51Z", "path": "server/src/main/java/org/apache/iotdb/db/metadata/MManager.java", "diffHunk": "@@ -548,13 +548,13 @@ public TSDataType getSeriesType(String path) throws MetadataException {\n \n \n   /**\n-   * Get all devices under given prefixPath.\n+   * Get all device nodes under given prefixPath.\n    *\n    * @param prefixPath a prefix of a full path. if the wildcard is not at the tail, then each\n    * wildcard can only match one level, otherwise it can match to the tail.\n-   * @return A HashSet instance which stores devices names with given prefixPath.\n+   * @return A list which stores device nodes with given prefixPath.\n    */\n-  public Set<String> getDevices(String prefixPath) throws MetadataException {\n+  public List<MNode> getDevices(String prefixPath) throws MetadataException {", "originalCommit": "0cf1cfb9efb26cb81288fde31dfc6cf07d5f72d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk4NTM5Ng==", "url": "https://github.com/apache/iotdb/pull/934#discussion_r396985396", "bodyText": "If using String here, we have to find the node again by path string in AlignByDeviceDataSet. So storaging MNode directly here can reduce that process.", "author": "Alima777", "createdAt": "2020-03-24T08:47:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk2NzcwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk4OTk3MQ==", "url": "https://github.com/apache/iotdb/pull/934#discussion_r396989971", "bodyText": "Sure. I didn't figure out a better way either... Maybe we could keep this then : )", "author": "samperson1997", "createdAt": "2020-03-24T08:55:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk2NzcwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzAwNjAzOA==", "url": "https://github.com/apache/iotdb/pull/934#discussion_r397006038", "bodyText": "Actually It doesn't cost that much time finding device node. Like what you said, to keep the consistence with other methods, I deciced to change it to return List.", "author": "Alima777", "createdAt": "2020-03-24T09:21:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk2NzcwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk2OTI5MQ==", "url": "https://github.com/apache/iotdb/pull/934#discussion_r396969291", "bodyText": "Remove some useless imports", "author": "samperson1997", "createdAt": "2020-03-24T08:17:50Z", "path": "server/src/main/java/org/apache/iotdb/db/query/dataset/AlignByDeviceDataSet.java", "diffHunk": "@@ -21,12 +21,16 @@\n import java.io.IOException;\n import java.util.ArrayList;\n import java.util.HashMap;\n+import java.util.HashSet;\n import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n import org.apache.iotdb.db.exception.StorageEngineException;\n+import org.apache.iotdb.db.exception.metadata.MetadataException;\n import org.apache.iotdb.db.exception.query.QueryProcessException;\n+import org.apache.iotdb.db.metadata.MManager;", "originalCommit": "0cf1cfb9efb26cb81288fde31dfc6cf07d5f72d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk4NjU3NQ==", "url": "https://github.com/apache/iotdb/pull/934#discussion_r396986575", "bodyText": "Fixed.", "author": "Alima777", "createdAt": "2020-03-24T08:49:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk2OTI5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk3MTI1MA==", "url": "https://github.com/apache/iotdb/pull/934#discussion_r396971250", "bodyText": "try to extract the same process to avoid duplicated codes:\nString measurement = column;\n        if (dataSetType == DataSetType.GROUPBY || dataSetType == DataSetType.AGGREGATE) {\n          measurement = column.substring(column.indexOf('(') + 1, column.indexOf(')'));\n          if (measurementOfGivenDevice.contains(measurement)) {\n            executeAggregations.add(column.substring(0, column.indexOf('(')));\n          }\n        }\n        if (measurementOfGivenDevice.contains(measurement)) {\n          executeColumns.add(measurement);\n          executePaths.add(new Path(currentDevice.getFullPath(), measurement));\n          tsDataTypes.add(measurementDataTpeMap.get(measurement));\n        }\n\n(please first ensure codes above work : ) )", "author": "samperson1997", "createdAt": "2020-03-24T08:21:32Z", "path": "server/src/main/java/org/apache/iotdb/db/query/dataset/AlignByDeviceDataSet.java", "diffHunk": "@@ -116,25 +119,29 @@ protected boolean hasNextWithoutConstraint() throws IOException {\n \n     while (deviceIterator.hasNext()) {\n       currentDevice = deviceIterator.next();\n-      Set<String> measurementColumnsOfGivenDevice = deviceToMeasurementsMap\n-          .get(currentDevice);\n-      executeColumns = new ArrayList<>(measurementColumnsOfGivenDevice);\n-\n-      // extract paths and aggregations if exist from executeColumns\n+      // get all measurements of current device\n+      Set<String> measurementOfGivenDevice = currentDevice.getChildren().keySet();\n+      // extract paths and aggregations queried from all measurements\n+      // executeColumns is for calculating rowRecord\n+      executeColumns = new ArrayList<>();\n       List<Path> executePaths = new ArrayList<>();\n       List<TSDataType> tsDataTypes = new ArrayList<>();\n       List<String> executeAggregations = new ArrayList<>();\n-      for (String column : executeColumns) {\n+      for (String column : measurementDataTpeMap.keySet()) {\n         if (dataSetType == DataSetType.GROUPBY || dataSetType == DataSetType.AGGREGATE) {\n-          Path path = new Path(currentDevice,\n-              column.substring(column.indexOf('(') + 1, column.indexOf(')')));\n-          tsDataTypes.add(tsDataTypeMap.get(path));\n-          executePaths.add(path);\n-          executeAggregations.add(column.substring(0, column.indexOf('(')));\n+          String measurement = column.substring(column.indexOf('(') + 1, column.indexOf(')'));\n+          if (measurementOfGivenDevice.contains(measurement)){\n+            executeColumns.add(column);\n+            executePaths.add(new Path(currentDevice.getFullPath(), measurement));\n+            tsDataTypes.add(measurementDataTpeMap.get(column));\n+            executeAggregations.add(column.substring(0, column.indexOf('(')));\n+          }\n         } else {\n-          Path path = new Path(currentDevice, column);\n-          tsDataTypes.add(tsDataTypeMap.get(path));\n-          executePaths.add(path);\n+          if (measurementOfGivenDevice.contains(column)) {\n+            executeColumns.add(column);\n+            executePaths.add(new Path(currentDevice.getFullPath(), column));\n+            tsDataTypes.add(measurementDataTpeMap.get(column));\n+          }", "originalCommit": "0cf1cfb9efb26cb81288fde31dfc6cf07d5f72d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk4NzUyMA==", "url": "https://github.com/apache/iotdb/pull/934#discussion_r396987520", "bodyText": "Thank you! It's very helpful for me.", "author": "Alima777", "createdAt": "2020-03-24T08:51:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk3MTI1MA=="}], "type": "inlineReview"}, {"oid": "938e144af8c656466824e0e229a977c5f1ce0d82", "url": "https://github.com/apache/iotdb/commit/938e144af8c656466824e0e229a977c5f1ce0d82", "message": "Change getDevices structure", "committedDate": "2020-03-24T09:22:04Z", "type": "forcePushed"}, {"oid": "2e79efddedb8b889226c6abea79ebd9ad15ddce3", "url": "https://github.com/apache/iotdb/commit/2e79efddedb8b889226c6abea79ebd9ad15ddce3", "message": "Remove unused code", "committedDate": "2020-03-24T09:39:34Z", "type": "commit"}, {"oid": "2e79efddedb8b889226c6abea79ebd9ad15ddce3", "url": "https://github.com/apache/iotdb/commit/2e79efddedb8b889226c6abea79ebd9ad15ddce3", "message": "Remove unused code", "committedDate": "2020-03-24T09:39:34Z", "type": "forcePushed"}]}