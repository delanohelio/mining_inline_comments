{"pr_number": 1692, "pr_title": "fix some importcsv tool bug", "pr_createdAt": "2020-09-05T03:15:10Z", "pr_url": "https://github.com/apache/iotdb/pull/1692", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzkxODMwNA==", "url": "https://github.com/apache/iotdb/pull/1692#discussion_r483918304", "bodyText": "can you add a comment to describe the structure of ResultSet?", "author": "jixuan1989", "createdAt": "2020-09-05T06:34:36Z", "path": "cli/src/main/java/org/apache/iotdb/tool/ImportCsv.java", "diffHunk": "@@ -307,7 +307,7 @@ private static boolean queryDatabaseMeta(String[] strHeadInfo, File file, Buffer\n         ResultSet resultSet = statement.getResultSet();\n         try {\n           if (resultSet.next()) {", "originalCommit": "39c28657d3d8ce5e66613394c51dd80ec6cbba02", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzkzMDQ3MA==", "url": "https://github.com/apache/iotdb/pull/1692#discussion_r483930470", "bodyText": "ok, I will add some description. Thank you for pointing this out.", "author": "mychaow", "createdAt": "2020-09-05T09:07:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzkxODMwNA=="}], "type": "inlineReview"}, {"oid": "eace3a42f2dad44d7cc86f26c0c039e7a248e4d4", "url": "https://github.com/apache/iotdb/commit/eace3a42f2dad44d7cc86f26c0c039e7a248e4d4", "message": "print output", "committedDate": "2020-09-07T09:13:19Z", "type": "forcePushed"}, {"oid": "13e5512d79637291318e2a796ad83d7077f59009", "url": "https://github.com/apache/iotdb/commit/13e5512d79637291318e2a796ad83d7077f59009", "message": "print output", "committedDate": "2020-09-07T09:46:54Z", "type": "forcePushed"}, {"oid": "836ef98256f80121cbac2a98bc6e8864144d77c2", "url": "https://github.com/apache/iotdb/commit/836ef98256f80121cbac2a98bc6e8864144d77c2", "message": "fix some importcsv tool bug", "committedDate": "2020-09-11T02:17:51Z", "type": "commit"}, {"oid": "834b44fc8957f3f5eedbf4729582e684c1f577df", "url": "https://github.com/apache/iotdb/commit/834b44fc8957f3f5eedbf4729582e684c1f577df", "message": "add importCsvIT", "committedDate": "2020-09-11T02:17:51Z", "type": "commit"}, {"oid": "22812962c03b6ddda045c3949549d4b533191d1d", "url": "https://github.com/apache/iotdb/commit/22812962c03b6ddda045c3949549d4b533191d1d", "message": "print output", "committedDate": "2020-09-11T02:17:51Z", "type": "commit"}, {"oid": "598fa8e088bb3f677726a2c76a910dcfde44a21f", "url": "https://github.com/apache/iotdb/commit/598fa8e088bb3f677726a2c76a910dcfde44a21f", "message": "generate csv when test", "committedDate": "2020-09-11T02:21:07Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgwNzA4MQ==", "url": "https://github.com/apache/iotdb/pull/1692#discussion_r486807081", "bodyText": "could you add some comment...  give some example", "author": "qiaojialin", "createdAt": "2020-09-11T06:44:44Z", "path": "cli/src/main/java/org/apache/iotdb/tool/ImportCsv.java", "diffHunk": "@@ -378,7 +388,12 @@ private static String createOneSql(Map.Entry<String, ArrayList<Integer>> entry,\n         continue;\n       }\n       if (timeseriesToType.get(headInfo.get(colIndex.get(j))).equals(STRING_DATA_TYPE)) {\n-        sbd.append(\", \\'\").append(data[colIndex.get(j) + 1]).append(\"\\'\");\n+        if ((data[colIndex.get(j) + 1].startsWith(\"'\") && data[colIndex.get(j) + 1].endsWith(\"'\")) ||", "originalCommit": "598fa8e088bb3f677726a2c76a910dcfde44a21f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgzNTc1NQ==", "url": "https://github.com/apache/iotdb/pull/1692#discussion_r486835755", "bodyText": "ok", "author": "mychaow", "createdAt": "2020-09-11T07:47:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgwNzA4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgwODcxOA==", "url": "https://github.com/apache/iotdb/pull/1692#discussion_r486808718", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                List<String> outputList = new ArrayList<>();\n          \n          \n            \n                List<String> actualOutput = new ArrayList<>();", "author": "qiaojialin", "createdAt": "2020-09-11T06:48:36Z", "path": "cross-tests/src/test/java/org/apache/iotdb/cross/tests/tools/importCsv/AbstractScript.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.iotdb.cross.tests.tools.importCsv;\n+\n+import java.io.*;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Properties;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+public abstract class AbstractScript {\n+\n+  protected void testOutput(ProcessBuilder builder, String[] output) throws IOException {\n+    builder.redirectErrorStream(true);\n+    Process p = builder.start();\n+    BufferedReader r = new BufferedReader(new InputStreamReader(p.getInputStream()));\n+    String line;\n+    List<String> outputList = new ArrayList<>();", "originalCommit": "598fa8e088bb3f677726a2c76a910dcfde44a21f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgwODg3Ng==", "url": "https://github.com/apache/iotdb/pull/1692#discussion_r486808876", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  System.out.println(\"output:\" + output[i]);\n          \n          \n            \n                  System.out.println(\"outputList:\" + outputList.get(i));\n          \n          \n            \n                  System.out.println(\"expect:\" + output[i]);\n          \n          \n            \n                  System.out.println(\"actual:\" + outputList.get(i));\n          \n      \n    \n    \n  \n\nOr remove the print", "author": "qiaojialin", "createdAt": "2020-09-11T06:48:57Z", "path": "cross-tests/src/test/java/org/apache/iotdb/cross/tests/tools/importCsv/AbstractScript.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.iotdb.cross.tests.tools.importCsv;\n+\n+import java.io.*;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Properties;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+public abstract class AbstractScript {\n+\n+  protected void testOutput(ProcessBuilder builder, String[] output) throws IOException {\n+    builder.redirectErrorStream(true);\n+    Process p = builder.start();\n+    BufferedReader r = new BufferedReader(new InputStreamReader(p.getInputStream()));\n+    String line;\n+    List<String> outputList = new ArrayList<>();\n+    while (true) {\n+      line = r.readLine();\n+      if (line == null) {\n+        break;\n+      } else {\n+        outputList.add(line);\n+      }\n+    }\n+    r.close();\n+    p.destroy();\n+\n+    for (int i = 0; i < output.length; i++) {\n+      System.out.println(\"output:\" + output[i]);\n+      System.out.println(\"outputList:\" + outputList.get(i));", "originalCommit": "598fa8e088bb3f677726a2c76a910dcfde44a21f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgzNTczNQ==", "url": "https://github.com/apache/iotdb/pull/1692#discussion_r486835735", "bodyText": "ok", "author": "mychaow", "createdAt": "2020-09-11T07:47:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgwODg3Ng=="}], "type": "inlineReview"}, {"oid": "94bf6ebdceeee858bd1b3fff7af08c56c60e2b33", "url": "https://github.com/apache/iotdb/commit/94bf6ebdceeee858bd1b3fff7af08c56c60e2b33", "message": "generate csv when test", "committedDate": "2020-09-11T08:04:31Z", "type": "commit"}, {"oid": "94bf6ebdceeee858bd1b3fff7af08c56c60e2b33", "url": "https://github.com/apache/iotdb/commit/94bf6ebdceeee858bd1b3fff7af08c56c60e2b33", "message": "generate csv when test", "committedDate": "2020-09-11T08:04:31Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDAzMDk3NQ==", "url": "https://github.com/apache/iotdb/pull/1692#discussion_r500030975", "bodyText": "Hi, the ImportCsvTestIT keeps failing occasionally in windows environment of Travis these days. @Genius-pig could also reproduce this failure in his local PC. Could you please have another check? I created an issue in JIRA : )", "author": "samperson1997", "createdAt": "2020-10-06T06:23:00Z", "path": "cross-tests/src/test/java/org/apache/iotdb/cross/tests/tools/importCsv/AbstractScript.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.iotdb.cross.tests.tools.importCsv;\n+\n+import java.io.*;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Properties;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+public abstract class AbstractScript {\n+\n+  protected void testOutput(ProcessBuilder builder, String[] output) throws IOException {\n+    builder.redirectErrorStream(true);\n+    Process p = builder.start();\n+    BufferedReader r = new BufferedReader(new InputStreamReader(p.getInputStream()));\n+    String line;\n+    List<String> actualOutput = new ArrayList<>();\n+    while (true) {\n+      line = r.readLine();\n+      if (line == null) {\n+        break;\n+      } else {\n+        actualOutput.add(line);\n+      }\n+    }\n+    r.close();\n+    p.destroy();\n+\n+    for (int i = 0; i < output.length; i++) {\n+      assertTrue(actualOutput.get(i).startsWith(output[i]));", "originalCommit": "94bf6ebdceeee858bd1b3fff7af08c56c60e2b33", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}