{"pr_number": 1705, "pr_title": "[IOTDB-873] Add count devices DDL", "pr_createdAt": "2020-09-08T09:09:57Z", "pr_url": "https://github.com/apache/iotdb/pull/1705", "timeline": [{"oid": "c80acb42dd805e3f7db0ed293a1db7277c1f3a76", "url": "https://github.com/apache/iotdb/commit/c80acb42dd805e3f7db0ed293a1db7277c1f3a76", "message": "[IOTDB-873] Add count devices DDL", "committedDate": "2020-09-08T09:02:33Z", "type": "commit"}, {"oid": "db2e468109f9f506c62ef137511c1d171c3632c3", "url": "https://github.com/apache/iotdb/commit/db2e468109f9f506c62ef137511c1d171c3632c3", "message": "[IOTDB-873] Make sure it is a prefix path", "committedDate": "2020-09-08T10:05:41Z", "type": "commit"}, {"oid": "f49ba52f85b76b5f4d904470281de1ce3909f250", "url": "https://github.com/apache/iotdb/commit/f49ba52f85b76b5f4d904470281de1ce3909f250", "message": "[IOTDB-873] fix IoTDBMetadataFetchIT and MTree", "committedDate": "2020-09-08T12:49:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI5NjU1OA==", "url": "https://github.com/apache/iotdb/pull/1705#discussion_r485296558", "bodyText": "code format\n}else{   ->  } else {\nif( !deviceAdded){    ->   if (!deviceAdded) {\nplease use google style format: http://iotdb.apache.org/zh/Development/ContributeGuide.html", "author": "neuyilan", "createdAt": "2020-09-09T02:13:54Z", "path": "server/src/main/java/org/apache/iotdb/db/metadata/MTree.java", "diffHunk": "@@ -695,6 +708,38 @@ private int getCount(MNode node, String[] nodes, int idx) throws MetadataExcepti\n     }\n   }\n \n+  /**\n+   * Traverse the MTree to get the count of devices.\n+   */\n+  private int getDevicesCount(MNode node, String[] nodes, int idx) throws MetadataException {\n+    String nodeReg = MetaUtils.getNodeRegByIdx(idx, nodes);\n+    int cnt = 0;\n+    if (!(PATH_WILDCARD).equals(nodeReg)) {\n+      if (node.hasChild(nodeReg)) {\n+        if (node.getChild(nodeReg) instanceof MeasurementMNode && idx >= nodes.length) {\n+          cnt++;\n+        } else {\n+          cnt += getDevicesCount(node.getChild(nodeReg), nodes, idx + 1);\n+        }\n+      }\n+    } else {\n+      boolean deviceAdded = false;\n+      for (MNode child : node.getChildren().values()) {\n+        if (child instanceof MeasurementMNode ) {\n+          if( !deviceAdded){\n+            cnt++;\n+            deviceAdded = true;\n+          }else{", "originalCommit": "f49ba52f85b76b5f4d904470281de1ce3909f250", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTMwMTExMQ==", "url": "https://github.com/apache/iotdb/pull/1705#discussion_r485301111", "bodyText": "i got this", "author": "yanhongwangg", "createdAt": "2020-09-09T02:31:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI5NjU1OA=="}], "type": "inlineReview"}, {"oid": "7d3fb198c9387fbdaa0c58d836e340b7091671d6", "url": "https://github.com/apache/iotdb/commit/7d3fb198c9387fbdaa0c58d836e340b7091671d6", "message": "[IOTDB-873] code format", "committedDate": "2020-09-09T02:27:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTYwNjkyNQ==", "url": "https://github.com/apache/iotdb/pull/1705#discussion_r485606925", "bodyText": "Hi, we support subdevice like \"root.sg.device1.subdevice1.sensor1\" while subdevice1 is a measurementNode and a device. In your case, the subdevice1 will be ignored.\nYou can refer to the Mtree.findDevice() method.", "author": "Alima777", "createdAt": "2020-09-09T13:23:08Z", "path": "server/src/main/java/org/apache/iotdb/db/metadata/MTree.java", "diffHunk": "@@ -695,6 +708,38 @@ private int getCount(MNode node, String[] nodes, int idx) throws MetadataExcepti\n     }\n   }\n \n+  /**\n+   * Traverse the MTree to get the count of devices.\n+   */\n+  private int getDevicesCount(MNode node, String[] nodes, int idx) throws MetadataException {\n+    String nodeReg = MetaUtils.getNodeRegByIdx(idx, nodes);\n+    int cnt = 0;\n+    if (!(PATH_WILDCARD).equals(nodeReg)) {\n+      if (node.hasChild(nodeReg)) {\n+        if (node.getChild(nodeReg) instanceof MeasurementMNode && idx >= nodes.length) {\n+          cnt++;\n+        } else {\n+          cnt += getDevicesCount(node.getChild(nodeReg), nodes, idx + 1);\n+        }\n+      }\n+    } else {\n+      boolean deviceAdded = false;\n+      for (MNode child : node.getChildren().values()) {\n+        if (child instanceof MeasurementMNode) {\n+          if (!deviceAdded) {\n+            cnt++;\n+            deviceAdded = true;\n+          } else {\n+            break;\n+          }\n+        } else {\n+          cnt += getDevicesCount(child, nodes, idx + 1);\n+        }\n+      }", "originalCommit": "7d3fb198c9387fbdaa0c58d836e340b7091671d6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTYzMDE2MA==", "url": "https://github.com/apache/iotdb/pull/1705#discussion_r485630160", "bodyText": "Ah.. good point. Maybe @yhwang-hbl could add a specific test case for this example ; )", "author": "samperson1997", "createdAt": "2020-09-09T13:53:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTYwNjkyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjAxOTEyOA==", "url": "https://github.com/apache/iotdb/pull/1705#discussion_r486019128", "bodyText": "Hi, we support subdevice like \"root.sg.device1.subdevice1.sensor1\" while subdevice1 is a measurementNode and a device. In your case, the subdevice1 will be ignored.\nYou can refer to the Mtree.findDevice() method.\nhi, I didn't know the concept of sub devices before. I did a self-test on my code, which will filter out the situation you said. I will improve it,thanks for your guidance", "author": "yanhongwangg", "createdAt": "2020-09-10T02:05:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTYwNjkyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjAxOTQxMA==", "url": "https://github.com/apache/iotdb/pull/1705#discussion_r486019410", "bodyText": "Ah.. good point. Maybe @yhwang-hbl could add a specific test case for this example ; )\n\nOK\uff0ci will improve it and add a test for the corresponding situation", "author": "yanhongwangg", "createdAt": "2020-09-10T02:06:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTYwNjkyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTYwOTY5MQ==", "url": "https://github.com/apache/iotdb/pull/1705#discussion_r485609691", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  logger.error(\"insertSQL failed\", e);\n          \n          \n            \n                  logger.error(\"insertSQL() failed\", e);", "author": "Alima777", "createdAt": "2020-09-09T13:26:52Z", "path": "server/src/test/java/org/apache/iotdb/db/integration/IoTDBMetadataFetchIT.java", "diffHunk": "@@ -53,7 +56,7 @@ private static void insertSQL() throws ClassNotFoundException, SQLException {\n         statement.execute(sql);\n       }\n     } catch (Exception e) {\n-      e.printStackTrace();\n+      logger.error(\"insertSQL failed\", e);", "originalCommit": "7d3fb198c9387fbdaa0c58d836e340b7091671d6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTYxMDE1MA==", "url": "https://github.com/apache/iotdb/pull/1705#discussion_r485610150", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      logger.error(\"showTimeseriesTest failed\", e);\n          \n          \n            \n                      logger.error(\"showTimeseriesTest() failed\", e);\n          \n      \n    \n    \n  \n\nOthers same :D", "author": "Alima777", "createdAt": "2020-09-09T13:27:30Z", "path": "server/src/test/java/org/apache/iotdb/db/integration/IoTDBMetadataFetchIT.java", "diffHunk": "@@ -118,7 +121,7 @@ public void showTimeseriesTest() throws ClassNotFoundException, SQLException {\n           }\n           Assert.assertEquals(standard, builder.toString());\n         } catch (SQLException e) {\n-          e.printStackTrace();\n+          logger.error(\"showTimeseriesTest failed\", e);", "originalCommit": "7d3fb198c9387fbdaa0c58d836e340b7091671d6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d7292a2ffc6477c031fdc5f9a1021d4da33022fc", "url": "https://github.com/apache/iotdb/commit/d7292a2ffc6477c031fdc5f9a1021d4da33022fc", "message": "[IOTDB-873] Modify to support subdevice", "committedDate": "2020-09-10T03:13:49Z", "type": "commit"}, {"oid": "4f4d6b988fd5868ffe8dadbd083993dbbb586407", "url": "https://github.com/apache/iotdb/commit/4f4d6b988fd5868ffe8dadbd083993dbbb586407", "message": "[IOTDB-873]", "committedDate": "2020-09-10T03:20:41Z", "type": "commit"}, {"oid": "9fd467214ad90b4ca66f3d640429ee49e5a80de3", "url": "https://github.com/apache/iotdb/commit/9fd467214ad90b4ca66f3d640429ee49e5a80de3", "message": "[IOTDB-873]", "committedDate": "2020-09-10T03:40:54Z", "type": "commit"}]}