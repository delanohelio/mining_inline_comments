{"pr_number": 1063, "pr_title": "Avoid unnecessary close file in timed merge", "pr_createdAt": "2020-04-17T03:32:16Z", "pr_url": "https://github.com/apache/iotdb/pull/1063", "timeline": [{"oid": "cc8d172a351fc11554a54df1deb72d212f1a149b", "url": "https://github.com/apache/iotdb/commit/cc8d172a351fc11554a54df1deb72d212f1a149b", "message": "avoid unnecessary close in timed merge", "committedDate": "2020-04-17T03:31:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTk3MzU3Mw==", "url": "https://github.com/apache/iotdb/pull/1063#discussion_r409973573", "bodyText": "I suppose tsFileResource.getFileSize() induces IO, so better to wrap with if (logger.isInfoEnabled()){}", "author": "jt2594838", "createdAt": "2020-04-17T03:36:04Z", "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileProcessor.java", "diffHunk": "@@ -317,7 +321,17 @@ void asyncClose() {\n       logger.debug(FLUSH_QUERY_WRITE_LOCKED, storageGroupName, tsFileResource.getFile().getName());\n     }\n     try {\n-      logger.info(\"Async close the file: {}\", tsFileResource.getFile().getAbsolutePath());\n+\n+      if (workMemTable != null) {\n+        logger.info(\n+            \"{}: flush a working memtable in async close tsfile {}, memtable size: {}, tsfile size: {}\",\n+            storageGroupName, tsFileResource.getFile().getAbsolutePath(), workMemTable.memSize(),\n+            tsFileResource.getFileSize());\n+      } else {\n+        logger.info(\"{}: flush a NotifyFlushMemTable in async close tsfile {}, tsfile size: {}\",\n+            storageGroupName, tsFileResource.getFile().getAbsolutePath(), tsFileResource.getFileSize());", "originalCommit": "cc8d172a351fc11554a54df1deb72d212f1a149b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4f8e66ac05dabd2dc147b46466637efe06fdd292", "url": "https://github.com/apache/iotdb/commit/4f8e66ac05dabd2dc147b46466637efe06fdd292", "message": "add isInfoEnabled", "committedDate": "2020-04-17T03:38:20Z", "type": "commit"}]}