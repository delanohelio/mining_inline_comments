{"pr_number": 1094, "pr_title": "[IOTDB-613] Add the ability to persist and maintain currentterm for the raft node", "pr_createdAt": "2020-04-24T10:49:54Z", "pr_url": "https://github.com/apache/iotdb/pull/1094", "timeline": [{"oid": "4c00f033b1a91bb70fe50459e5addd6f578af65f", "url": "https://github.com/apache/iotdb/commit/4c00f033b1a91bb70fe50459e5addd6f578af65f", "message": "raftLogManager init", "committedDate": "2020-04-16T04:17:50Z", "type": "commit"}, {"oid": "5b586785111694821ee5a370f4662c46d10870cc", "url": "https://github.com/apache/iotdb/commit/5b586785111694821ee5a370f4662c46d10870cc", "message": "fix Log Module", "committedDate": "2020-04-16T04:17:50Z", "type": "commit"}, {"oid": "e9f80c22a18a554f656407eeffba5feafa71e0b9", "url": "https://github.com/apache/iotdb/commit/e9f80c22a18a554f656407eeffba5feafa71e0b9", "message": "fix bugs & add exception & sublist.clear()", "committedDate": "2020-04-16T04:17:50Z", "type": "commit"}, {"oid": "b949fcfb385b3c02213a8f9830b93d766d5bf553", "url": "https://github.com/apache/iotdb/commit/b949fcfb385b3c02213a8f9830b93d766d5bf553", "message": "add unCommitEntryManager Junit test", "committedDate": "2020-04-16T04:17:50Z", "type": "commit"}, {"oid": "6ed5fc882aaa0964401fdf2acfd409890e9133c6", "url": "https://github.com/apache/iotdb/commit/6ed5fc882aaa0964401fdf2acfd409890e9133c6", "message": "fix review", "committedDate": "2020-04-16T04:17:50Z", "type": "commit"}, {"oid": "0735e6099c071f37bdd3fec86e38376cd3e706d2", "url": "https://github.com/apache/iotdb/commit/0735e6099c071f37bdd3fec86e38376cd3e706d2", "message": "add CommittedEntryManager test and fix", "committedDate": "2020-04-16T04:17:50Z", "type": "commit"}, {"oid": "6f03fa00c1bdabb1851af9b77b27767e5f4f20c5", "url": "https://github.com/apache/iotdb/commit/6f03fa00c1bdabb1851af9b77b27767e5f4f20c5", "message": "add license", "committedDate": "2020-04-16T04:17:50Z", "type": "commit"}, {"oid": "3bcd05fb5bfd540cd0d00214d520139a37d4f69c", "url": "https://github.com/apache/iotdb/commit/3bcd05fb5bfd540cd0d00214d520139a37d4f69c", "message": "add commitEntryManager JavaDoc", "committedDate": "2020-04-16T04:17:50Z", "type": "commit"}, {"oid": "85b2acc41db102a44f45cdd86ef85a1b5850d738", "url": "https://github.com/apache/iotdb/commit/85b2acc41db102a44f45cdd86ef85a1b5850d738", "message": "remove internal unused exceptions & update logger format & fix bugs", "committedDate": "2020-04-16T04:17:50Z", "type": "commit"}, {"oid": "55f6b81fa2f42c13e8bdb336a4195cba3aadfbcd", "url": "https://github.com/apache/iotdb/commit/55f6b81fa2f42c13e8bdb336a4195cba3aadfbcd", "message": "add raftlogmanager junit test & fix bugs", "committedDate": "2020-04-16T04:17:50Z", "type": "commit"}, {"oid": "9af76a5722f452f34e0e71452bf7c88c357d068a", "url": "https://github.com/apache/iotdb/commit/9af76a5722f452f34e0e71452bf7c88c357d068a", "message": "add RaftLoaManager JavaDoc", "committedDate": "2020-04-16T04:17:50Z", "type": "commit"}, {"oid": "5f1b62f88601fac1b69aa66af4cf6688b70cdc96", "url": "https://github.com/apache/iotdb/commit/5f1b62f88601fac1b69aa66af4cf6688b70cdc96", "message": "add applyingSnapshot & adjust logger level & update JavaDoc", "committedDate": "2020-04-16T04:17:50Z", "type": "commit"}, {"oid": "60c647e448a8be3b2743aef62af302fa58e26935", "url": "https://github.com/apache/iotdb/commit/60c647e448a8be3b2743aef62af302fa58e26935", "message": "add maybeCommit for leader", "committedDate": "2020-04-16T04:17:50Z", "type": "commit"}, {"oid": "e1a932ee973db187c5f8ea67f164aa4603265492", "url": "https://github.com/apache/iotdb/commit/e1a932ee973db187c5f8ea67f164aa4603265492", "message": "rename snapshot lastLogId to lastLogIndex", "committedDate": "2020-04-16T04:17:50Z", "type": "commit"}, {"oid": "fb2a4e91783dbee51537e82ee0e5c9e3d519b483", "url": "https://github.com/apache/iotdb/commit/fb2a4e91783dbee51537e82ee0e5c9e3d519b483", "message": "Use native snapshot && update license", "committedDate": "2020-04-16T04:17:50Z", "type": "commit"}, {"oid": "4269925f6e6632f89fdec34fe2b96b694a426465", "url": "https://github.com/apache/iotdb/commit/4269925f6e6632f89fdec34fe2b96b694a426465", "message": "add applier for raftLogManager", "committedDate": "2020-04-16T04:17:50Z", "type": "commit"}, {"oid": "08739025f50308a86421c736dc24a33b1210b854", "url": "https://github.com/apache/iotdb/commit/08739025f50308a86421c736dc24a33b1210b854", "message": "rename some method to old version && add some placeholder method", "committedDate": "2020-04-16T04:17:50Z", "type": "commit"}, {"oid": "7843e579ab05bec77b081e0ca4144bf6ea25c9bf", "url": "https://github.com/apache/iotdb/commit/7843e579ab05bec77b081e0ca4144bf6ea25c9bf", "message": "initial embedded", "committedDate": "2020-04-16T04:24:25Z", "type": "commit"}, {"oid": "a7246eda04adf068e26eca4a3ae2adcfb40d032a", "url": "https://github.com/apache/iotdb/commit/a7246eda04adf068e26eca4a3ae2adcfb40d032a", "message": "add EmptyContentLog && add persistence && fix format && resolve conflict", "committedDate": "2020-04-17T07:18:26Z", "type": "commit"}, {"oid": "48f65255bb3d96fca94da33edc93ebaa5b9da141", "url": "https://github.com/apache/iotdb/commit/48f65255bb3d96fca94da33edc93ebaa5b9da141", "message": "Merge branch 'cluster_new' of https://github.com/apache/incubator-iotdb into cluster_new_log", "committedDate": "2020-04-17T07:24:38Z", "type": "commit"}, {"oid": "7da4f49032b2506a2a7048e2164ea88f8c957b0d", "url": "https://github.com/apache/iotdb/commit/7da4f49032b2506a2a7048e2164ea88f8c957b0d", "message": "minor fix", "committedDate": "2020-04-17T09:09:31Z", "type": "commit"}, {"oid": "e838ca4587541ccc284aac59f87ec2632774233c", "url": "https://github.com/apache/iotdb/commit/e838ca4587541ccc284aac59f87ec2632774233c", "message": "Merge branch 'cluster_new' of https://github.com/apache/incubator-iotdb into cluster_new_log", "committedDate": "2020-04-20T05:30:54Z", "type": "commit"}, {"oid": "22f5676a9430d084a7aa5c8cb98bc8fbab399889", "url": "https://github.com/apache/iotdb/commit/22f5676a9430d084a7aa5c8cb98bc8fbab399889", "message": "fix review", "committedDate": "2020-04-20T14:13:31Z", "type": "commit"}, {"oid": "914d561f51e97596dc181229977d6231b66b9c42", "url": "https://github.com/apache/iotdb/commit/914d561f51e97596dc181229977d6231b66b9c42", "message": "Merge branch 'cluster_new' into cluster_new_log", "committedDate": "2020-04-20T14:16:46Z", "type": "commit"}, {"oid": "8c12af0cefa87ed34b98ebe5c1fa96871c12f251", "url": "https://github.com/apache/iotdb/commit/8c12af0cefa87ed34b98ebe5c1fa96871c12f251", "message": "Merge branch 'cluster_new' of https://github.com/apache/incubator-iotdb into cluster_new_log", "committedDate": "2020-04-21T03:44:34Z", "type": "commit"}, {"oid": "91ef6ec694d0a4d0e7ee4749dffdbce8da10e915", "url": "https://github.com/apache/iotdb/commit/91ef6ec694d0a4d0e7ee4749dffdbce8da10e915", "message": "Merge branch 'cluster_new' into cluster_new_log", "committedDate": "2020-04-21T05:37:29Z", "type": "commit"}, {"oid": "88b85cf56704193734bd1a995441587a27bd8b05", "url": "https://github.com/apache/iotdb/commit/88b85cf56704193734bd1a995441587a27bd8b05", "message": "Merge branch 'cluster_new' into cluster_new_log", "committedDate": "2020-04-22T04:25:47Z", "type": "commit"}, {"oid": "9aaa03f78f636aae7fc352f580ba42c54c4a5148", "url": "https://github.com/apache/iotdb/commit/9aaa03f78f636aae7fc352f580ba42c54c4a5148", "message": "Merge branch 'cluster_new' into cluster_new_log", "committedDate": "2020-04-22T09:30:30Z", "type": "commit"}, {"oid": "7f7bd110d524e15fd05d841f808715b260eebc0e", "url": "https://github.com/apache/iotdb/commit/7f7bd110d524e15fd05d841f808715b260eebc0e", "message": "integrate persistence", "committedDate": "2020-04-22T09:34:06Z", "type": "commit"}, {"oid": "7f673577d70c09d1bb1d1d06ed37de4cb876dd45", "url": "https://github.com/apache/iotdb/commit/7f673577d70c09d1bb1d1d06ed37de4cb876dd45", "message": "add term persistence", "committedDate": "2020-04-22T09:34:06Z", "type": "commit"}, {"oid": "2b6f50759cd1400ddd0e41eaba6b95f79705c285", "url": "https://github.com/apache/iotdb/commit/2b6f50759cd1400ddd0e41eaba6b95f79705c285", "message": "fix truncateCommitted Entries", "committedDate": "2020-04-22T09:34:43Z", "type": "commit"}, {"oid": "05127533bcb9f66b1dde64d292db7f636897a3b9", "url": "https://github.com/apache/iotdb/commit/05127533bcb9f66b1dde64d292db7f636897a3b9", "message": "Merge branch 'cluster_new' into cluster_new_persistence_integration", "committedDate": "2020-04-23T04:02:15Z", "type": "commit"}, {"oid": "0638298eb558c53f03541c9b48550fe5e8b2ab94", "url": "https://github.com/apache/iotdb/commit/0638298eb558c53f03541c9b48550fe5e8b2ab94", "message": "Merge branch 'cluster_new' of github.com:Apache/incubator-iotdb into cluster_new_persistence_integration", "committedDate": "2020-04-23T05:31:54Z", "type": "commit"}, {"oid": "a593e207c30067f73fc94970079c80bb3dcb1eb0", "url": "https://github.com/apache/iotdb/commit/a593e207c30067f73fc94970079c80bb3dcb1eb0", "message": "minor fix", "committedDate": "2020-04-23T05:40:27Z", "type": "commit"}, {"oid": "90cefed8209890c8d5b1f0a944b9efdc218f35bd", "url": "https://github.com/apache/iotdb/commit/90cefed8209890c8d5b1f0a944b9efdc218f35bd", "message": "fix RPC out-of-order bugs", "committedDate": "2020-04-24T08:41:00Z", "type": "commit"}, {"oid": "14192ec1a68086588d88669418e4bd47daccfe19", "url": "https://github.com/apache/iotdb/commit/14192ec1a68086588d88669418e4bd47daccfe19", "message": "Merge branch 'cluster_new' into cluster_new_persistence_integration", "committedDate": "2020-04-24T08:43:12Z", "type": "commit"}, {"oid": "3d41b948ca8c9733d65caafa7a29f0ffd963876c", "url": "https://github.com/apache/iotdb/commit/3d41b948ca8c9733d65caafa7a29f0ffd963876c", "message": "Merge branch 'cluster_new' into cluster_new_persistence_integration", "committedDate": "2020-04-24T10:21:20Z", "type": "commit"}, {"oid": "d872b5e5c8d39d67fdb25ae077edc7bec2c62b1e", "url": "https://github.com/apache/iotdb/commit/d872b5e5c8d39d67fdb25ae077edc7bec2c62b1e", "message": "Merge branch 'cluster_new_persistence_integration' of github.com:Lebronl/incubator-iotdb into cluster_new_persistence_integration", "committedDate": "2020-04-24T10:27:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ2MDIzNQ==", "url": "https://github.com/apache/iotdb/pull/1094#discussion_r415460235", "bodyText": "Please just decide one and do not leave commented code. Both are okay for me.", "author": "jt2594838", "createdAt": "2020-04-27T02:00:13Z", "path": "cluster/src/main/java/org/apache/iotdb/cluster/log/manage/UnCommittedEntryManager.java", "diffHunk": "@@ -126,11 +128,11 @@ public void truncateAndAppend(List<Log> appendingEntries) {\n         long len = after - offset;\n         if (len < 0) {\n             // the logs are being truncated to before our current offset portion, which is committed entries\n-            // unconditional obedience to the leader's request. Maybe throw a exception here is better\n-            offset = after;\n-            entries = appendingEntries;\n+            // Maybe throw a exception here is better\n             logger.error(\"The logs which first index is {} are going to truncate committed logs\",\n                 after);\n+//            throw new TruncateCommittedEntryException(appendingEntries.get(0).getCurrLogIndex(),\n+//                offset);", "originalCommit": "d872b5e5c8d39d67fdb25ae077edc7bec2c62b1e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ2ODA3NQ==", "url": "https://github.com/apache/iotdb/pull/1094#discussion_r415468075", "bodyText": "OK", "author": "LebronAl", "createdAt": "2020-04-27T02:28:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ2MDIzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ2MjE2Mg==", "url": "https://github.com/apache/iotdb/pull/1094#discussion_r415462162", "bodyText": "Please check the indents.", "author": "jt2594838", "createdAt": "2020-04-27T02:07:25Z", "path": "cluster/src/test/java/org/apache/iotdb/cluster/log/manage/RaftLogManagerTest.java", "diffHunk": "@@ -48,12 +52,22 @@ public void apply(Log log) {\n \t\t\tappliedLogs.add(log);\n \t\t}\n \t};\n+\tprivate int testIdentifier = 1;\n \n \t@Before\n \tpublic void setUp() {\n \t\tappliedLogs = new HashSet<>();\n \t}\n \n+\t@After\n+\tpublic void tearDown() {\n+\t\tFile dir = new File(new SyncLogDequeSerializer(testIdentifier).getLogDir());\n+\t\tfor (File file : dir.listFiles()) {\n+\t\t\tfile.delete();\n+\t\t}\n+\t\tdir.delete();\n+\t}", "originalCommit": "d872b5e5c8d39d67fdb25ae077edc7bec2c62b1e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ3NTc1Mw==", "url": "https://github.com/apache/iotdb/pull/1094#discussion_r415475753", "bodyText": "It seems wired.In my local editor,the indents are properly.I will fix this.", "author": "LebronAl", "createdAt": "2020-04-27T02:56:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ2MjE2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ2Mjc1OA==", "url": "https://github.com/apache/iotdb/pull/1094#discussion_r415462758", "bodyText": "Remove these if they are not necessary.", "author": "jt2594838", "createdAt": "2020-04-27T02:09:21Z", "path": "cluster/src/test/java/org/apache/iotdb/cluster/log/manage/serializable/SyncLogDequeSerializerTest.java", "diffHunk": "@@ -354,99 +222,87 @@ public void testRemoveOldFileAtRecovery() {\n     }\n   }\n \n-\n-  @Test\n-  public void testTruncate() {\n-    SyncLogDequeSerializer syncLogDequeSerializer = new SyncLogDequeSerializer(getNode(1));\n-    List<Log> testLogs2;\n-    try {\n-      syncLogDequeSerializer.setMaxRemovedLogSize(10);\n-\n-      MemoryLogManager memoryLogManager = buildMemoryLogManager();\n-      List<Log> testLogs1 = TestUtils.prepareNodeLogs(10);\n-\n-      for (Log log : testLogs1) {\n-        memoryLogManager.appendLog(log);\n-        syncLogDequeSerializer.append(log, memoryLogManager.getMeta());\n-      }\n-\n-      assertEquals(10, syncLogDequeSerializer.getLogSizeDeque().size());\n-\n-      syncLogDequeSerializer.removeFirst(3);\n-\n-      testLogs2 = TestUtils.prepareNodeLogs(10);\n-\n-      for (Log log : testLogs2) {\n-        memoryLogManager.appendLog(log);\n-        syncLogDequeSerializer.append(log, memoryLogManager.getMeta());\n-      }\n-\n-      assertEquals(17, syncLogDequeSerializer.getLogSizeDeque().size());\n-\n-      assertEquals(2, syncLogDequeSerializer.logFileList.size());\n-      // this will remove first file and build a new file\n-      syncLogDequeSerializer.removeFirst(8);\n-\n-      assertEquals(9, syncLogDequeSerializer.getLogSizeDeque().size());\n-      assertEquals(2, syncLogDequeSerializer.logFileList.size());\n-\n-      List<Log> testLogs3 = TestUtils.prepareNodeLogs(10);\n-      for (Log log : testLogs3) {\n-        memoryLogManager.appendLog(log);\n-        syncLogDequeSerializer.append(log, memoryLogManager.getMeta());\n-      }\n-      assertEquals(19, syncLogDequeSerializer.getLogSizeDeque().size());\n-      syncLogDequeSerializer.truncateLog(11, memoryLogManager.getMeta());\n-\n-      // last file has been truncated\n-      assertEquals(1, syncLogDequeSerializer.logFileList.size());\n-    } finally {\n-      syncLogDequeSerializer.close();\n-    }\n-\n-    // recovery\n-    syncLogDequeSerializer = new SyncLogDequeSerializer(getNode(1));\n-    try {\n-      List<Log> logs = syncLogDequeSerializer.recoverLog();\n-      assertEquals(9, logs.size());\n-\n-      for (int i = 0; i < 8; i++) {\n-        assertEquals(testLogs2.get(i + 1), logs.get(i));\n-      }\n-    } finally {\n-      syncLogDequeSerializer.close();\n-    }\n-  }\n+//  @Test\n+//  public void testTruncate() {\n+//    SyncLogDequeSerializer syncLogDequeSerializer = new SyncLogDequeSerializer(testIdentifier);\n+//    List<Log> testLogs2;\n+//    try {\n+//      syncLogDequeSerializer.setMaxRemovedLogSize(10);\n+//\n+//      MemoryLogManager memoryLogManager = buildMemoryLogManager();\n+//      List<Log> testLogs1 = TestUtils.prepareNodeLogs(10);\n+//\n+//      for (Log log : testLogs1) {\n+//        memoryLogManager.appendLog(log);\n+//        syncLogDequeSerializer.append(log, memoryLogManager.getMeta());\n+//      }\n+//\n+//      assertEquals(10, syncLogDequeSerializer.getLogSizeDeque().size());\n+//\n+//      syncLogDequeSerializer.removeFirst(3);\n+//\n+//      testLogs2 = TestUtils.prepareNodeLogs(10);\n+//\n+//      for (Log log : testLogs2) {\n+//        memoryLogManager.appendLog(log);\n+//        syncLogDequeSerializer.append(log, memoryLogManager.getMeta());\n+//      }\n+//\n+//      assertEquals(17, syncLogDequeSerializer.getLogSizeDeque().size());\n+//\n+//      assertEquals(2, syncLogDequeSerializer.logFileList.size());\n+//      // this will remove first file and build a new file\n+//      syncLogDequeSerializer.removeFirst(8);\n+//\n+//      assertEquals(9, syncLogDequeSerializer.getLogSizeDeque().size());\n+//      assertEquals(2, syncLogDequeSerializer.logFileList.size());\n+//\n+//      List<Log> testLogs3 = TestUtils.prepareNodeLogs(10);\n+//      for (Log log : testLogs3) {\n+//        memoryLogManager.appendLog(log);\n+//        syncLogDequeSerializer.append(log, memoryLogManager.getMeta());\n+//      }\n+//      assertEquals(19, syncLogDequeSerializer.getLogSizeDeque().size());\n+//      syncLogDequeSerializer.truncateLog(11, memoryLogManager.getMeta());\n+//\n+//      // last file has been truncated\n+//      assertEquals(1, syncLogDequeSerializer.logFileList.size());\n+//    } finally {\n+//      syncLogDequeSerializer.close();\n+//    }\n+//\n+//    // recovery\n+//    syncLogDequeSerializer = new SyncLogDequeSerializer(testIdentifier);\n+//    try {\n+//      List<Log> logs = syncLogDequeSerializer.recoverLog();\n+//      assertEquals(9, logs.size());\n+//\n+//      for (int i = 0; i < 8; i++) {\n+//        assertEquals(testLogs2.get(i + 1), logs.get(i));\n+//      }\n+//    } finally {\n+//      syncLogDequeSerializer.close();\n+//    }\n+//  }", "originalCommit": "d872b5e5c8d39d67fdb25ae077edc7bec2c62b1e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ3Njk1OA==", "url": "https://github.com/apache/iotdb/pull/1094#discussion_r415476958", "bodyText": "OK", "author": "LebronAl", "createdAt": "2020-04-27T03:00:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ2Mjc1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ2Mjk2Mw==", "url": "https://github.com/apache/iotdb/pull/1094#discussion_r415462963", "bodyText": "Remove these if they are not necessary.", "author": "jt2594838", "createdAt": "2020-04-27T02:10:12Z", "path": "cluster/src/test/java/org/apache/iotdb/cluster/log/manage/serializable/SyncLogDequeSerializerTest.java", "diffHunk": "@@ -458,85 +314,78 @@ public void testRecoveryByAppendList() {\n     }\n   }\n \n-  @Test\n-  public void testTruncateByAppendList() {\n-    SyncLogDequeSerializer syncLogDequeSerializer = new SyncLogDequeSerializer(getNode(1));\n-    List<Log> testLogs2;\n-    try {\n-      syncLogDequeSerializer.setMaxRemovedLogSize(10);\n-\n-      MemoryLogManager memoryLogManager = buildMemoryLogManager();\n-      List<Log> testLogs1 = TestUtils.prepareNodeLogs(10);\n-\n-      for (Log log : testLogs1) {\n-        memoryLogManager.appendLog(log);\n-      }\n-      syncLogDequeSerializer.append(testLogs1, memoryLogManager.getMeta());\n-\n-      assertEquals(10, syncLogDequeSerializer.getLogSizeDeque().size());\n-\n-      syncLogDequeSerializer.removeFirst(3);\n-\n-      testLogs2 = TestUtils.prepareNodeLogs(10);\n-\n-      for (Log log : testLogs2) {\n-        memoryLogManager.appendLog(log);\n-      }\n-      syncLogDequeSerializer.append(testLogs2, memoryLogManager.getMeta());\n-\n-      assertEquals(17, syncLogDequeSerializer.getLogSizeDeque().size());\n-\n-      assertEquals(2, syncLogDequeSerializer.logFileList.size());\n-      // this will remove first file and build a new file\n-      syncLogDequeSerializer.removeFirst(8);\n-\n-      assertEquals(9, syncLogDequeSerializer.getLogSizeDeque().size());\n-      assertEquals(2, syncLogDequeSerializer.logFileList.size());\n-\n-      List<Log> testLogs3 = TestUtils.prepareNodeLogs(10);\n-      for (Log log : testLogs3) {\n-        memoryLogManager.appendLog(log);\n-        syncLogDequeSerializer.append(log, memoryLogManager.getMeta());\n-      }\n-      assertEquals(19, syncLogDequeSerializer.getLogSizeDeque().size());\n-      syncLogDequeSerializer.truncateLog(11, memoryLogManager.getMeta());\n-\n-      // last file has been truncated\n-      assertEquals(1, syncLogDequeSerializer.logFileList.size());\n-    } finally {\n-      syncLogDequeSerializer.close();\n-    }\n-\n-    // recovery\n-    syncLogDequeSerializer = new SyncLogDequeSerializer(getNode(1));\n-    try {\n-      List<Log> logs = syncLogDequeSerializer.recoverLog();\n-      assertEquals(9, logs.size());\n-\n-      for (int i = 0; i < 8; i++) {\n-        assertEquals(testLogs2.get(i + 1), logs.get(i));\n-      }\n-    } finally {\n-      syncLogDequeSerializer.close();\n-    }\n-  }\n+//  @Test\n+//  public void testTruncateByAppendList() {\n+//    SyncLogDequeSerializer syncLogDequeSerializer = new SyncLogDequeSerializer(testIdentifier);\n+//    List<Log> testLogs2;\n+//    try {\n+//      syncLogDequeSerializer.setMaxRemovedLogSize(10);\n+//\n+//      MemoryLogManager memoryLogManager = buildMemoryLogManager();\n+//      List<Log> testLogs1 = TestUtils.prepareNodeLogs(10);\n+//\n+//      for (Log log : testLogs1) {\n+//        memoryLogManager.appendLog(log);\n+//      }\n+//      syncLogDequeSerializer.append(testLogs1, memoryLogManager.getMeta());\n+//\n+//      assertEquals(10, syncLogDequeSerializer.getLogSizeDeque().size());\n+//\n+//      syncLogDequeSerializer.removeFirst(3);\n+//\n+//      testLogs2 = TestUtils.prepareNodeLogs(10);\n+//\n+//      for (Log log : testLogs2) {\n+//        memoryLogManager.appendLog(log);\n+//      }\n+//      syncLogDequeSerializer.append(testLogs2, memoryLogManager.getMeta());\n+//\n+//      assertEquals(17, syncLogDequeSerializer.getLogSizeDeque().size());\n+//\n+//      assertEquals(2, syncLogDequeSerializer.logFileList.size());\n+//      // this will remove first file and build a new file\n+//      syncLogDequeSerializer.removeFirst(8);\n+//\n+//      assertEquals(9, syncLogDequeSerializer.getLogSizeDeque().size());\n+//      assertEquals(2, syncLogDequeSerializer.logFileList.size());\n+//\n+//      List<Log> testLogs3 = TestUtils.prepareNodeLogs(10);\n+//      for (Log log : testLogs3) {\n+//        memoryLogManager.appendLog(log);\n+//        syncLogDequeSerializer.append(log, memoryLogManager.getMeta());\n+//      }\n+//      assertEquals(19, syncLogDequeSerializer.getLogSizeDeque().size());\n+//      syncLogDequeSerializer.truncateLog(11, memoryLogManager.getMeta());\n+//\n+//      // last file has been truncated\n+//      assertEquals(1, syncLogDequeSerializer.logFileList.size());\n+//    } finally {\n+//      syncLogDequeSerializer.close();\n+//    }\n+//\n+//    // recovery\n+//    syncLogDequeSerializer = new SyncLogDequeSerializer(testIdentifier);\n+//    try {\n+//      List<Log> logs = syncLogDequeSerializer.recoverLog();\n+//      assertEquals(9, logs.size());\n+//\n+//      for (int i = 0; i < 8; i++) {\n+//        assertEquals(testLogs2.get(i + 1), logs.get(i));\n+//      }\n+//    } finally {\n+//      syncLogDequeSerializer.close();\n+//    }\n+//  }", "originalCommit": "d872b5e5c8d39d67fdb25ae077edc7bec2c62b1e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ3Njk3Nw==", "url": "https://github.com/apache/iotdb/pull/1094#discussion_r415476977", "bodyText": "OK", "author": "LebronAl", "createdAt": "2020-04-27T03:00:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ2Mjk2Mw=="}], "type": "inlineReview"}, {"oid": "04c138c3447067fde84b7ed93dddb1e95165606b", "url": "https://github.com/apache/iotdb/commit/04c138c3447067fde84b7ed93dddb1e95165606b", "message": "fix review", "committedDate": "2020-04-27T03:02:39Z", "type": "commit"}]}