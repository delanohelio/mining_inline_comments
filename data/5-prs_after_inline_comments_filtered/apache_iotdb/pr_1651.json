{"pr_number": 1651, "pr_title": "[IOTDB-849] Optimize value filter query", "pr_createdAt": "2020-08-24T11:23:36Z", "pr_url": "https://github.com/apache/iotdb/pull/1651", "timeline": [{"oid": "b99cfee84008d0b010c0dcc85febb5c39977368c", "url": "https://github.com/apache/iotdb/commit/b99cfee84008d0b010c0dcc85febb5c39977368c", "message": "optimize the value filter query process", "committedDate": "2020-08-24T10:41:27Z", "type": "commit"}, {"oid": "598af392633a5b17eee7c429f08919912b3ed06a", "url": "https://github.com/apache/iotdb/commit/598af392633a5b17eee7c429f08919912b3ed06a", "message": "optimize the value filter query process", "committedDate": "2020-08-24T10:42:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzI1MDQ3Mg==", "url": "https://github.com/apache/iotdb/pull/1651#discussion_r477250472", "bodyText": "Missing { } here?", "author": "Alima777", "createdAt": "2020-08-26T12:09:52Z", "path": "server/src/main/java/org/apache/iotdb/db/query/timegenerator/ServerTimeGenerator.java", "diffHunk": "@@ -65,19 +67,42 @@ public ServerTimeGenerator(IExpression expression, QueryContext context, RawData\n   @Override\n   protected IBatchReader generateNewBatchReader(SingleSeriesExpression expression)\n       throws IOException {\n-    Filter filter = expression.getFilter();\n+    Filter valueFilter = expression.getFilter();\n     Path path = expression.getSeriesPath();\n     TSDataType dataType;\n     QueryDataSource queryDataSource;\n     try {\n       dataType = IoTDB.metaManager.getSeriesType(path.getFullPath());\n-      queryDataSource = QueryResourceManager.getInstance().getQueryDataSource(path, context, filter);\n-      // update filter by TTL\n-      filter = queryDataSource.updateFilterUsingTTL(filter);\n+      queryDataSource = QueryResourceManager.getInstance().getQueryDataSource(path, context, valueFilter);\n+      // update valueFilter by TTL\n+      valueFilter = queryDataSource.updateFilterUsingTTL(valueFilter);\n     } catch (Exception e) {\n       throw new IOException(e);\n     }\n \n-    return new SeriesRawDataBatchReader(path, queryPlan.getAllMeasurementsInDevice(path.getDevice()), dataType, context, queryDataSource, null, filter, null);\n+    // get the TimeFilter part in SingleSeriesExpression\n+    Filter timeFilter = getTimeFilter(valueFilter);\n+\n+    return new SeriesRawDataBatchReader(path, queryPlan.getAllMeasurementsInDevice(path.getDevice()), dataType, context, queryDataSource, timeFilter, valueFilter, null);\n+  }\n+\n+  /**\n+   * extract time filter from a value filter\n+   */\n+  private Filter getTimeFilter(Filter filter) {\n+    if (filter instanceof UnaryFilter && ((UnaryFilter) filter).getFilterType() == FilterType.TIME_FILTER) {\n+      return filter;\n+    }\n+    if (filter instanceof AndFilter) {\n+      Filter leftTimeFilter = getTimeFilter(((AndFilter) filter).getLeft());\n+      Filter rightTimeFilter = getTimeFilter(((AndFilter) filter).getRight());\n+      if (leftTimeFilter != null && rightTimeFilter != null) {\n+        return filter;\n+      } else if (leftTimeFilter != null) {\n+        return leftTimeFilter;\n+      } else", "originalCommit": "598af392633a5b17eee7c429f08919912b3ed06a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzI2OTE0OA==", "url": "https://github.com/apache/iotdb/pull/1651#discussion_r477269148", "bodyText": "fix", "author": "JackieTien97", "createdAt": "2020-08-26T12:41:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzI1MDQ3Mg=="}], "type": "inlineReview"}, {"oid": "8696c2c6b0f289b8ca4dd7d4dea2e9ec53cb09bb", "url": "https://github.com/apache/iotdb/commit/8696c2c6b0f289b8ca4dd7d4dea2e9ec53cb09bb", "message": "fix format", "committedDate": "2020-08-26T12:41:30Z", "type": "commit"}]}