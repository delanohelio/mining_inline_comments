{"pr_number": 1468, "pr_title": "split vm with flush", "pr_createdAt": "2020-07-06T16:50:42Z", "pr_url": "https://github.com/apache/iotdb/pull/1468", "timeline": [{"oid": "c31ac53d8a6292df75b530460603eaef4877b2c8", "url": "https://github.com/apache/iotdb/commit/c31ac53d8a6292df75b530460603eaef4877b2c8", "message": "split vm with flush", "committedDate": "2020-07-06T16:49:48Z", "type": "commit"}, {"oid": "a5988a49b46b73de7b2cbabcdf15ad71d49bf98a", "url": "https://github.com/apache/iotdb/commit/a5988a49b46b73de7b2cbabcdf15ad71d49bf98a", "message": "update", "committedDate": "2020-07-07T01:41:46Z", "type": "commit"}, {"oid": "e9c5eb8d8a26a72c926850460c4c7f39e75453ca", "url": "https://github.com/apache/iotdb/commit/e9c5eb8d8a26a72c926850460c4c7f39e75453ca", "message": "remove useless code", "committedDate": "2020-07-07T02:03:42Z", "type": "commit"}, {"oid": "5361b993729cea215c12e9f8b2f03aee6ec34415", "url": "https://github.com/apache/iotdb/commit/5361b993729cea215c12e9f8b2f03aee6ec34415", "message": "update merge size", "committedDate": "2020-07-07T08:16:57Z", "type": "commit"}, {"oid": "c4818f0547bc976ac11ea8d79b227075cf609445", "url": "https://github.com/apache/iotdb/commit/c4818f0547bc976ac11ea8d79b227075cf609445", "message": "fix", "committedDate": "2020-07-07T13:18:56Z", "type": "commit"}, {"oid": "3db78e7781c96e1b8cb45ea1a15e52210b12115e", "url": "https://github.com/apache/iotdb/commit/3db78e7781c96e1b8cb45ea1a15e52210b12115e", "message": "update recover", "committedDate": "2020-07-07T13:22:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg1NTA2Mg==", "url": "https://github.com/apache/iotdb/pull/1468#discussion_r450855062", "bodyText": "copy vmWriters and vmTsFileResources to a new collection", "author": "qiaojialin", "createdAt": "2020-07-07T13:15:56Z", "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileProcessor.java", "diffHunk": "@@ -1061,4 +960,104 @@ public void putMemTableBackAndClose() throws TsFileProcessorException {\n   public ReadWriteLock getFlushQueryLock() {\n     return flushQueryLock;\n   }\n+\n+  private File createNewTmpFile() {\n+    File parent = writer.getFile().getParentFile();\n+    return FSFactoryProducer.getFSFactory().getFile(parent,\n+        writer.getFile().getName() + IoTDBConstant.FILE_NAME_SEPARATOR + System\n+            .currentTimeMillis()\n+            + VM_SUFFIX + IoTDBConstant.PATH_SEPARATOR\n+            + PATH_UPGRADE);\n+  }\n+\n+  private void flushAllVmToTsFile(List<RestorableTsFileIOWriter> currMergeVmWriters,\n+      List<TsFileResource> currMergeVmFiles) throws IOException {\n+    VmMergeTask vmMergeTask = new VmMergeTask(writer, currMergeVmWriters,\n+        storageGroupName,\n+        new VmLogger(tsFileResource.getFile().getParent(),\n+            tsFileResource.getFile().getName()),\n+        new HashSet<>(), sequence);\n+    vmMergeTask.fullMerge();\n+    for (TsFileResource vmTsFileResource : currMergeVmFiles) {\n+      deleteVmFile(vmTsFileResource);\n+    }\n+    vmWriters.removeAll(currMergeVmWriters);\n+    vmTsFileResources.removeAll(currMergeVmFiles);\n+    File logFile = FSFactoryProducer.getFSFactory()\n+        .getFile(tsFileResource.getFile().getParent(),\n+            tsFileResource.getFile().getName() + VM_LOG_NAME);\n+    logFile.delete();\n+  }\n+\n+  class VmMergeLoop implements Callable<Void> {\n+\n+    public void merge() {\n+      try {\n+        if (shouldClose && flushingMemTables.isEmpty()) {\n+          // merge vm to tsfile\n+          logger.info(\"[Flush] merge all {} vms to TsFile\", vmTsFileResources.size() + 1);\n+          flushAllVmToTsFile(vmWriters, vmTsFileResources);", "originalCommit": "5361b993729cea215c12e9f8b2f03aee6ec34415", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg1NTg5NQ==", "url": "https://github.com/apache/iotdb/pull/1468#discussion_r450855895", "bodyText": "in this way, you will construct many Path and MeasurementSchema, use computeIfAbsent and Map<String, Map<String, MeasurementSchema>>", "author": "qiaojialin", "createdAt": "2020-07-07T13:17:15Z", "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileProcessor.java", "diffHunk": "@@ -1061,4 +960,104 @@ public void putMemTableBackAndClose() throws TsFileProcessorException {\n   public ReadWriteLock getFlushQueryLock() {\n     return flushQueryLock;\n   }\n+\n+  private File createNewTmpFile() {\n+    File parent = writer.getFile().getParentFile();\n+    return FSFactoryProducer.getFSFactory().getFile(parent,\n+        writer.getFile().getName() + IoTDBConstant.FILE_NAME_SEPARATOR + System\n+            .currentTimeMillis()\n+            + VM_SUFFIX + IoTDBConstant.PATH_SEPARATOR\n+            + PATH_UPGRADE);\n+  }\n+\n+  private void flushAllVmToTsFile(List<RestorableTsFileIOWriter> currMergeVmWriters,\n+      List<TsFileResource> currMergeVmFiles) throws IOException {\n+    VmMergeTask vmMergeTask = new VmMergeTask(writer, currMergeVmWriters,\n+        storageGroupName,\n+        new VmLogger(tsFileResource.getFile().getParent(),\n+            tsFileResource.getFile().getName()),\n+        new HashSet<>(), sequence);\n+    vmMergeTask.fullMerge();\n+    for (TsFileResource vmTsFileResource : currMergeVmFiles) {\n+      deleteVmFile(vmTsFileResource);\n+    }\n+    vmWriters.removeAll(currMergeVmWriters);\n+    vmTsFileResources.removeAll(currMergeVmFiles);\n+    File logFile = FSFactoryProducer.getFSFactory()\n+        .getFile(tsFileResource.getFile().getParent(),\n+            tsFileResource.getFile().getName() + VM_LOG_NAME);\n+    logFile.delete();\n+  }\n+\n+  class VmMergeLoop implements Callable<Void> {\n+\n+    public void merge() {\n+      try {\n+        if (shouldClose && flushingMemTables.isEmpty()) {\n+          // merge vm to tsfile\n+          logger.info(\"[Flush] merge all {} vms to TsFile\", vmTsFileResources.size() + 1);\n+          flushAllVmToTsFile(vmWriters, vmTsFileResources);\n+          return;\n+        }\n+\n+        long vmPointNum = 0;\n+        // all flush to target file\n+        int mergeFileNum = vmWriters.size() - 1;\n+        List<RestorableTsFileIOWriter> flushVmWriters = vmWriters.subList(0, mergeFileNum);\n+        List<TsFileResource> flushVmFiles = vmTsFileResources.subList(0, mergeFileNum);\n+        Map<Path, MeasurementSchema> pathMeasurementSchemaMap = new HashMap<>();\n+        for (RestorableTsFileIOWriter vmWriter : flushVmWriters) {\n+          Map<String, Map<String, List<ChunkMetadata>>> schemaMap = vmWriter\n+              .getMetadatasForQuery();\n+          for (String device : schemaMap.keySet()) {\n+            for (String measurement : schemaMap.get(device).keySet()) {\n+              List<ChunkMetadata> chunkMetadataList = schemaMap.get(device).get(measurement);\n+              for (ChunkMetadata chunkMetadata : chunkMetadataList) {\n+                vmPointNum += chunkMetadata.getNumOfPoints();\n+              }\n+              pathMeasurementSchemaMap.putIfAbsent(new Path(device, measurement),", "originalCommit": "5361b993729cea215c12e9f8b2f03aee6ec34415", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg1ODY4Mg==", "url": "https://github.com/apache/iotdb/pull/1468#discussion_r450858682", "bodyText": "copy the vmWriters and vmResources and set to VmMergeLoop to avoid being changed.", "author": "qiaojialin", "createdAt": "2020-07-07T13:21:28Z", "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileProcessor.java", "diffHunk": "@@ -803,28 +718,12 @@ public void flushOneMemTable() {\n             memTableToFlush.isSignalMemTable(), flushingMemTables.size());\n       }\n     }\n+    Future<Void> vmFuture = VmMergeTaskPoolManager.getInstance().submit(new VmMergeLoop());", "originalCommit": "5361b993729cea215c12e9f8b2f03aee6ec34415", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg1OTA2OA==", "url": "https://github.com/apache/iotdb/pull/1468#discussion_r450859068", "bodyText": "why left the last one?", "author": "qiaojialin", "createdAt": "2020-07-07T13:22:02Z", "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileProcessor.java", "diffHunk": "@@ -1061,4 +960,104 @@ public void putMemTableBackAndClose() throws TsFileProcessorException {\n   public ReadWriteLock getFlushQueryLock() {\n     return flushQueryLock;\n   }\n+\n+  private File createNewTmpFile() {\n+    File parent = writer.getFile().getParentFile();\n+    return FSFactoryProducer.getFSFactory().getFile(parent,\n+        writer.getFile().getName() + IoTDBConstant.FILE_NAME_SEPARATOR + System\n+            .currentTimeMillis()\n+            + VM_SUFFIX + IoTDBConstant.PATH_SEPARATOR\n+            + PATH_UPGRADE);\n+  }\n+\n+  private void flushAllVmToTsFile(List<RestorableTsFileIOWriter> currMergeVmWriters,\n+      List<TsFileResource> currMergeVmFiles) throws IOException {\n+    VmMergeTask vmMergeTask = new VmMergeTask(writer, currMergeVmWriters,\n+        storageGroupName,\n+        new VmLogger(tsFileResource.getFile().getParent(),\n+            tsFileResource.getFile().getName()),\n+        new HashSet<>(), sequence);\n+    vmMergeTask.fullMerge();\n+    for (TsFileResource vmTsFileResource : currMergeVmFiles) {\n+      deleteVmFile(vmTsFileResource);\n+    }\n+    vmWriters.removeAll(currMergeVmWriters);\n+    vmTsFileResources.removeAll(currMergeVmFiles);\n+    File logFile = FSFactoryProducer.getFSFactory()\n+        .getFile(tsFileResource.getFile().getParent(),\n+            tsFileResource.getFile().getName() + VM_LOG_NAME);\n+    logFile.delete();\n+  }\n+\n+  class VmMergeLoop implements Callable<Void> {\n+\n+    public void merge() {\n+      try {\n+        if (shouldClose && flushingMemTables.isEmpty()) {\n+          // merge vm to tsfile\n+          logger.info(\"[Flush] merge all {} vms to TsFile\", vmTsFileResources.size() + 1);\n+          flushAllVmToTsFile(vmWriters, vmTsFileResources);\n+          return;\n+        }\n+\n+        long vmPointNum = 0;\n+        // all flush to target file\n+        int mergeFileNum = vmWriters.size() - 1;", "originalCommit": "5361b993729cea215c12e9f8b2f03aee6ec34415", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f30ace4b0d0e979eb6664f7a10bccb774f1ea013", "url": "https://github.com/apache/iotdb/commit/f30ace4b0d0e979eb6664f7a10bccb774f1ea013", "message": "update list", "committedDate": "2020-07-07T13:41:43Z", "type": "commit"}, {"oid": "02d8aabe7c3a5de73f9ec368e4c253f5da8e1695", "url": "https://github.com/apache/iotdb/commit/02d8aabe7c3a5de73f9ec368e4c253f5da8e1695", "message": "update memtable flush", "committedDate": "2020-07-07T14:36:05Z", "type": "commit"}, {"oid": "78dc963a75c1d3c42bd85b74a1966eeb66324cf0", "url": "https://github.com/apache/iotdb/commit/78dc963a75c1d3c42bd85b74a1966eeb66324cf0", "message": "update list", "committedDate": "2020-07-08T01:12:16Z", "type": "commit"}, {"oid": "b392a6b5099bce9c32c9db059fb6420b8d0b144b", "url": "https://github.com/apache/iotdb/commit/b392a6b5099bce9c32c9db059fb6420b8d0b144b", "message": "update vm merge", "committedDate": "2020-07-08T01:28:31Z", "type": "commit"}, {"oid": "b0adc58e17f200093393e9635fd6e876629eeef3", "url": "https://github.com/apache/iotdb/commit/b0adc58e17f200093393e9635fd6e876629eeef3", "message": "fix ConcurrentModificationException", "committedDate": "2020-07-08T01:52:50Z", "type": "commit"}, {"oid": "46231bcd37f4e218f6478092bad3313d28e9ca62", "url": "https://github.com/apache/iotdb/commit/46231bcd37f4e218f6478092bad3313d28e9ca62", "message": "update vm merge utils and vm merge task", "committedDate": "2020-07-08T01:57:38Z", "type": "commit"}, {"oid": "f1e426161a53e178497a048efd3339184a72ae91", "url": "https://github.com/apache/iotdb/commit/f1e426161a53e178497a048efd3339184a72ae91", "message": "update tsFileSequenceReaderMap", "committedDate": "2020-07-08T02:55:24Z", "type": "commit"}, {"oid": "28b19a658bbaccd8c2d1f17d217241cacf494aa3", "url": "https://github.com/apache/iotdb/commit/28b19a658bbaccd8c2d1f17d217241cacf494aa3", "message": "remove vm mark and reset", "committedDate": "2020-07-08T03:02:29Z", "type": "commit"}, {"oid": "327e7db73e34350e98a5519104befcce3edf28aa", "url": "https://github.com/apache/iotdb/commit/327e7db73e34350e98a5519104befcce3edf28aa", "message": "update should close", "committedDate": "2020-07-08T03:40:06Z", "type": "commit"}, {"oid": "32cb36166134f528c70e1410b49c8e33135c34a8", "url": "https://github.com/apache/iotdb/commit/32cb36166134f528c70e1410b49c8e33135c34a8", "message": "update", "committedDate": "2020-07-08T03:52:43Z", "type": "commit"}, {"oid": "6e9ab5759169a9a335547719c1a7669cf1afc1c9", "url": "https://github.com/apache/iotdb/commit/6e9ab5759169a9a335547719c1a7669cf1afc1c9", "message": "update copy", "committedDate": "2020-07-08T04:44:45Z", "type": "commit"}]}