{"pr_number": 1956, "pr_title": "[Distributed] bug fix, remove the persist logs when follower receives a snapshot", "pr_createdAt": "2020-11-05T12:00:26Z", "pr_url": "https://github.com/apache/iotdb/pull/1956", "timeline": [{"oid": "8a32288e4bc036219553c17fba2d2d840b2080ec", "url": "https://github.com/apache/iotdb/commit/8a32288e4bc036219553c17fba2d2d840b2080ec", "message": "fix bug: remove the logs when follower receives a snapshot", "committedDate": "2020-11-05T11:50:28Z", "type": "commit"}, {"oid": "e5b85e50e3c0f094faf78c98f1b8a2a59dabc06d", "url": "https://github.com/apache/iotdb/commit/e5b85e50e3c0f094faf78c98f1b8a2a59dabc06d", "message": "fix conflict", "committedDate": "2020-11-05T11:58:59Z", "type": "commit"}, {"oid": "3b14cf581783ef816b236c948b5110fda9b2593c", "url": "https://github.com/apache/iotdb/commit/3b14cf581783ef816b236c948b5110fda9b2593c", "message": "merge with clsuter", "committedDate": "2020-11-06T06:35:55Z", "type": "commit"}, {"oid": "2cddd0ef64f0a2a3dcb4ad485c91d28b383bb13c", "url": "https://github.com/apache/iotdb/commit/2cddd0ef64f0a2a3dcb4ad485c91d28b383bb13c", "message": "Merge branch 'apache_cluster_new' into apache_cluster_new_1105_clean_all_logs_after_snapshot", "committedDate": "2020-11-06T07:02:27Z", "type": "commit"}, {"oid": "c92a26cc42cf417c190bfda618e04cebe280fc86", "url": "https://github.com/apache/iotdb/commit/c92a26cc42cf417c190bfda618e04cebe280fc86", "message": "fix read log bug when logs are delete", "committedDate": "2020-11-06T09:32:57Z", "type": "commit"}, {"oid": "d43ba95fc7e66aea700dca1cdd72a64bbb4d4b1b", "url": "https://github.com/apache/iotdb/commit/d43ba95fc7e66aea700dca1cdd72a64bbb4d4b1b", "message": "Merge branch 'apache_cluster_new' into apache_cluster_new_1105_clean_all_logs_after_snapshot", "committedDate": "2020-11-06T09:33:41Z", "type": "commit"}, {"oid": "e7cdf51e1497d6fc37c32e479e13c8766860a80a", "url": "https://github.com/apache/iotdb/commit/e7cdf51e1497d6fc37c32e479e13c8766860a80a", "message": "fix close bug", "committedDate": "2020-11-07T02:49:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTUxNTY2NA==", "url": "https://github.com/apache/iotdb/pull/1956#discussion_r519515664", "bodyText": "Can be simplified with Files.deleteIfExists", "author": "jt2594838", "createdAt": "2020-11-09T01:59:06Z", "path": "cluster/src/main/java/org/apache/iotdb/cluster/log/manage/serializable/SyncLogDequeSerializer.java", "diffHunk": "@@ -835,6 +834,59 @@ public void close() {\n     }\n   }\n \n+  @Override\n+  public void clearAllLogs(long commitIndex) {\n+    lock.writeLock().lock();\n+    try {\n+      // 1. delete\n+      forceFlushLogBuffer();\n+      closeCurrentFile(meta.getCommitLogIndex());\n+      for (int i = 0; i < logDataFileList.size(); i++) {\n+        deleteLogDataAndIndexFile(i);\n+      }\n+      deleteMetaFile();\n+\n+      logDataFileList.clear();\n+      logIndexFileList.clear();\n+\n+      // 2. init\n+      if (!logIndexOffsetList.isEmpty()) {\n+        this.firstLogIndex = Math\n+            .max(commitIndex + 1, firstLogIndex + logIndexOffsetList.size());\n+      } else {\n+        this.firstLogIndex = commitIndex + 1;\n+      }\n+      this.logIndexOffsetList.clear();\n+      recoverMetaFile();\n+      meta = new LogManagerMeta();\n+      createNewLogFile(logDir, firstLogIndex);\n+      logger.info(\"{}, clean all logs success, the new firstLogIndex={}\", this, firstLogIndex);\n+    } catch (IOException e) {\n+      logger.error(\"clear all logs failed,\", e);\n+    } finally {\n+      lock.writeLock().unlock();\n+    }\n+  }\n+\n+  private void deleteMetaFile() {\n+    lock.writeLock().lock();\n+    try {\n+      File tmpMetaFile = SystemFileFactory.INSTANCE.getFile(logDir + \"logMeta.tmp\");\n+      if (tmpMetaFile.exists()) {\n+        Files.delete(tmpMetaFile.toPath());\n+      }", "originalCommit": "e7cdf51e1497d6fc37c32e479e13c8766860a80a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTU0NTIzNg==", "url": "https://github.com/apache/iotdb/pull/1956#discussion_r519545236", "bodyText": "got it, thanks", "author": "neuyilan", "createdAt": "2020-11-09T04:21:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTUxNTY2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTUxNjIyNQ==", "url": "https://github.com/apache/iotdb/pull/1956#discussion_r519516225", "bodyText": "\"will be deleted\"", "author": "jt2594838", "createdAt": "2020-11-09T02:01:55Z", "path": "cluster/src/main/java/org/apache/iotdb/cluster/log/manage/serializable/SyncLogDequeSerializer.java", "diffHunk": "@@ -945,23 +1008,34 @@ private int comparePersistLogFileName(File file1, File file2) {\n     if (endIndex - startIndex > maxNumberOfLogsPerFetchOnDisk) {\n       newEndIndex = startIndex + maxNumberOfLogsPerFetchOnDisk;\n     }\n-    logger.debug(\"intend to get logs between[{}, {}], actually get logs between[{},{}]\", startIndex,\n-        endIndex, startIndex, newEndIndex);\n+    logger\n+        .debug(\"intend to get logs between[{}, {}], actually get logs between[{},{}]\", startIndex,\n+            endIndex, startIndex, newEndIndex);\n \n-    List<Pair<File, Pair<Long, Long>>> logDataFileAndOffsetList = getLogDataFileAndOffset(\n-        startIndex, newEndIndex);\n-    if (logDataFileAndOffsetList.isEmpty()) {\n-      return Collections.emptyList();\n-    }\n+    // maybe the logs will be delete during checkDeletePersistRaftLog or clearAllLogs,", "originalCommit": "e7cdf51e1497d6fc37c32e479e13c8766860a80a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTUxNjM1NA==", "url": "https://github.com/apache/iotdb/pull/1956#discussion_r519516354", "bodyText": "\"being deleted\"", "author": "jt2594838", "createdAt": "2020-11-09T02:02:39Z", "path": "cluster/src/main/java/org/apache/iotdb/cluster/log/manage/serializable/SyncLogDequeSerializer.java", "diffHunk": "@@ -945,23 +1008,34 @@ private int comparePersistLogFileName(File file1, File file2) {\n     if (endIndex - startIndex > maxNumberOfLogsPerFetchOnDisk) {\n       newEndIndex = startIndex + maxNumberOfLogsPerFetchOnDisk;\n     }\n-    logger.debug(\"intend to get logs between[{}, {}], actually get logs between[{},{}]\", startIndex,\n-        endIndex, startIndex, newEndIndex);\n+    logger\n+        .debug(\"intend to get logs between[{}, {}], actually get logs between[{},{}]\", startIndex,\n+            endIndex, startIndex, newEndIndex);\n \n-    List<Pair<File, Pair<Long, Long>>> logDataFileAndOffsetList = getLogDataFileAndOffset(\n-        startIndex, newEndIndex);\n-    if (logDataFileAndOffsetList.isEmpty()) {\n-      return Collections.emptyList();\n-    }\n+    // maybe the logs will be delete during checkDeletePersistRaftLog or clearAllLogs,\n+    // use writeLock for two reasons:\n+    // 1.if the log file to read is the last log file, we need to get write lock to flush logBuffer,\n+    // 2.avoid log files be deleted", "originalCommit": "e7cdf51e1497d6fc37c32e479e13c8766860a80a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTUxNjk4Ng==", "url": "https://github.com/apache/iotdb/pull/1956#discussion_r519516986", "bodyText": "Is there anywhere using read lock of this lock? If not, maybe it is better to consider using a more light-weighted lock.", "author": "jt2594838", "createdAt": "2020-11-09T02:06:14Z", "path": "cluster/src/main/java/org/apache/iotdb/cluster/log/manage/serializable/SyncLogDequeSerializer.java", "diffHunk": "@@ -945,23 +1008,34 @@ private int comparePersistLogFileName(File file1, File file2) {\n     if (endIndex - startIndex > maxNumberOfLogsPerFetchOnDisk) {\n       newEndIndex = startIndex + maxNumberOfLogsPerFetchOnDisk;\n     }\n-    logger.debug(\"intend to get logs between[{}, {}], actually get logs between[{},{}]\", startIndex,\n-        endIndex, startIndex, newEndIndex);\n+    logger\n+        .debug(\"intend to get logs between[{}, {}], actually get logs between[{},{}]\", startIndex,\n+            endIndex, startIndex, newEndIndex);\n \n-    List<Pair<File, Pair<Long, Long>>> logDataFileAndOffsetList = getLogDataFileAndOffset(\n-        startIndex, newEndIndex);\n-    if (logDataFileAndOffsetList.isEmpty()) {\n-      return Collections.emptyList();\n-    }\n+    // maybe the logs will be delete during checkDeletePersistRaftLog or clearAllLogs,\n+    // use writeLock for two reasons:\n+    // 1.if the log file to read is the last log file, we need to get write lock to flush logBuffer,\n+    // 2.avoid log files be deleted\n+    lock.writeLock().lock();", "originalCommit": "e7cdf51e1497d6fc37c32e479e13c8766860a80a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTU0NTY5OQ==", "url": "https://github.com/apache/iotdb/pull/1956#discussion_r519545699", "bodyText": "i intend to use ReentrantLock instead of ReentrantReadWriteLock", "author": "neuyilan", "createdAt": "2020-11-09T04:24:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTUxNjk4Ng=="}], "type": "inlineReview"}, {"oid": "429d82762ee623c4094f6cff9b0d85d90034908c", "url": "https://github.com/apache/iotdb/commit/429d82762ee623c4094f6cff9b0d85d90034908c", "message": "fix review", "committedDate": "2020-11-09T04:19:07Z", "type": "commit"}, {"oid": "253a5708b617417a227d362e245410c41e8f389e", "url": "https://github.com/apache/iotdb/commit/253a5708b617417a227d362e245410c41e8f389e", "message": "Merge branch 'apache_cluster_new' into apache_cluster_new_1105_clean_all_logs_after_snapshot", "committedDate": "2020-11-09T04:20:44Z", "type": "commit"}]}