{"pr_number": 1854, "pr_title": "[IOTDB-884] group createMultiTimeseriesPlan by partitionGroup", "pr_createdAt": "2020-10-24T05:46:28Z", "pr_url": "https://github.com/apache/iotdb/pull/1854", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTMyOTc1OQ==", "url": "https://github.com/apache/iotdb/pull/1854#discussion_r511329759", "bodyText": "Minor Suggesion:\n// CreateMultiTimeSeriesPlan contains many rows, each will correspond to a TSStatus as its\n// execution result, as the plan is splited and the sub-plans may have interleaving ranges,\n// we must assure that each TSStatus is placed to the right position", "author": "LebronAl", "createdAt": "2020-10-24T06:57:11Z", "path": "cluster/src/main/java/org/apache/iotdb/cluster/server/member/MetaGroupMember.java", "diffHunk": "@@ -1478,6 +1479,11 @@ private TSStatus forwardPlan(Map<PhysicalPlan, PartitionGroup> planGroupMap, Phy\n         // belongs to NodeB, when NodeA returns a success while NodeB returns a failure, the\n         // failure and success should be placed into proper positions in TSStatus.subStatus\n         status = forwardInsertTabletPlan(planGroupMap, (InsertTabletPlan) plan);\n+      } else if (plan instanceof CreateMultiTimeSeriesPlan) {\n+        // CreateMultiTimeSeriesPlans contain many rows, each will correspond to a TSStatus as its\n+        // execution result, as the plan is split and the sub-plans may have interleaving ranges,\n+        // we must assure that each TSStatus is placed to the right position", "originalCommit": "07334871d00a1e9881d967177ed3896930f9fab7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTM1MzQ5NQ==", "url": "https://github.com/apache/iotdb/pull/1854#discussion_r511353495", "bodyText": "Thank you!", "author": "mychaow", "createdAt": "2020-10-24T09:08:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTMyOTc1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTMzMDMxNg==", "url": "https://github.com/apache/iotdb/pull/1854#discussion_r511330316", "bodyText": "Why not use StatusUtils.OK? then we can reduce a creation of a TSStatus object with the same meaning.", "author": "LebronAl", "createdAt": "2020-10-24T07:04:34Z", "path": "cluster/src/main/java/org/apache/iotdb/cluster/server/member/MetaGroupMember.java", "diffHunk": "@@ -1505,6 +1511,48 @@ private TSStatus forwardPlan(Map<PhysicalPlan, PartitionGroup> planGroupMap, Phy\n     return status;\n   }\n \n+  /**\n+   * Forward each sub-plan to its belonging data group, and combine responses from the groups.\n+   *\n+   * @param planGroupMap sub-plan -> data group pairs\n+   */\n+  private TSStatus forwardCreateMultiTimeSeriesPlan(Map<PhysicalPlan, PartitionGroup> planGroupMap,\n+                                           CreateMultiTimeSeriesPlan plan) {\n+    List<String> errorCodePartitionGroups = new ArrayList<>();\n+    TSStatus tmpStatus;\n+    CreateMultiTimeSeriesPlan subPlan;\n+    Map<Integer, Exception> results = new HashMap<>();\n+    boolean noFailure = true;\n+    boolean isBatchFailure = false;\n+    // send sub-plans to each belonging data group and collect results\n+    for (Map.Entry<PhysicalPlan, PartitionGroup> entry : planGroupMap.entrySet()) {\n+      tmpStatus = forwardToSingleGroup(entry);\n+      subPlan = (CreateMultiTimeSeriesPlan) entry.getKey();\n+      logger.debug(\"{}: from {},{},{}\", name, entry.getKey(), entry.getValue(), tmpStatus);\n+      noFailure =\n+        (tmpStatus.getCode() == TSStatusCode.SUCCESS_STATUS.getStatusCode()) && noFailure;\n+      isBatchFailure = (tmpStatus.getCode() == TSStatusCode.MULTIPLE_ERROR.getStatusCode())\n+        || isBatchFailure;\n+      if (tmpStatus.getCode() == TSStatusCode.MULTIPLE_ERROR.getStatusCode()) {\n+        results.putAll(subPlan.getResults());\n+      }\n+      if (tmpStatus.getCode() != TSStatusCode.SUCCESS_STATUS.getStatusCode()) {\n+        // execution failed, record the error message\n+        errorCodePartitionGroups.add(String.format(\"[%s@%s:%s:%s]\",\n+          tmpStatus.getCode(), entry.getValue().getHeader(),\n+          tmpStatus.getMessage(), tmpStatus.subStatus));\n+      }\n+    }\n+\n+    plan.setResults(results);\n+    if (noFailure || isBatchFailure) {\n+      return RpcUtils.getStatus(TSStatusCode.SUCCESS_STATUS);", "originalCommit": "07334871d00a1e9881d967177ed3896930f9fab7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTM2MjczNw==", "url": "https://github.com/apache/iotdb/pull/1854#discussion_r511362737", "bodyText": "got it!", "author": "mychaow", "createdAt": "2020-10-24T09:30:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTMzMDMxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTMzMTcxMQ==", "url": "https://github.com/apache/iotdb/pull/1854#discussion_r511331711", "bodyText": "When will forwardToSingleGroup return a TSStatusCode.MULTIPLE_ERROR during creating multi timeseries? It seems that this TSStatus  will only be returned by BatchInsertionException, which is only thrown during 'insertTablet' interface currently~", "author": "LebronAl", "createdAt": "2020-10-24T07:22:11Z", "path": "cluster/src/main/java/org/apache/iotdb/cluster/server/member/MetaGroupMember.java", "diffHunk": "@@ -1505,6 +1511,48 @@ private TSStatus forwardPlan(Map<PhysicalPlan, PartitionGroup> planGroupMap, Phy\n     return status;\n   }\n \n+  /**\n+   * Forward each sub-plan to its belonging data group, and combine responses from the groups.\n+   *\n+   * @param planGroupMap sub-plan -> data group pairs\n+   */\n+  private TSStatus forwardCreateMultiTimeSeriesPlan(Map<PhysicalPlan, PartitionGroup> planGroupMap,\n+                                           CreateMultiTimeSeriesPlan plan) {\n+    List<String> errorCodePartitionGroups = new ArrayList<>();\n+    TSStatus tmpStatus;\n+    CreateMultiTimeSeriesPlan subPlan;\n+    Map<Integer, Exception> results = new HashMap<>();\n+    boolean noFailure = true;\n+    boolean isBatchFailure = false;\n+    // send sub-plans to each belonging data group and collect results\n+    for (Map.Entry<PhysicalPlan, PartitionGroup> entry : planGroupMap.entrySet()) {\n+      tmpStatus = forwardToSingleGroup(entry);\n+      subPlan = (CreateMultiTimeSeriesPlan) entry.getKey();\n+      logger.debug(\"{}: from {},{},{}\", name, entry.getKey(), entry.getValue(), tmpStatus);\n+      noFailure =\n+        (tmpStatus.getCode() == TSStatusCode.SUCCESS_STATUS.getStatusCode()) && noFailure;\n+      isBatchFailure = (tmpStatus.getCode() == TSStatusCode.MULTIPLE_ERROR.getStatusCode())", "originalCommit": "07334871d00a1e9881d967177ed3896930f9fab7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTM2MjgyMQ==", "url": "https://github.com/apache/iotdb/pull/1854#discussion_r511362821", "bodyText": "yes, you are right! I'll fix it!", "author": "mychaow", "createdAt": "2020-10-24T09:31:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTMzMTcxMQ=="}], "type": "inlineReview"}, {"oid": "5e5fa4cd6fbac991fbb60e16e387bbe7789df0b5", "url": "https://github.com/apache/iotdb/commit/5e5fa4cd6fbac991fbb60e16e387bbe7789df0b5", "message": "modify the way of collecting the result", "committedDate": "2020-10-24T13:07:13Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM2NTEwNw==", "url": "https://github.com/apache/iotdb/pull/1854#discussion_r512365107", "bodyText": "Assign groupHoldPlan.get(partitionGroup) to a local variable so that you will not need to call get twice.", "author": "jt2594838", "createdAt": "2020-10-27T01:37:39Z", "path": "cluster/src/main/java/org/apache/iotdb/cluster/query/ClusterPlanRouter.java", "diffHunk": "@@ -292,4 +295,64 @@ private PartitionGroup routePlan(ShowChildPathsPlan plan) {\n     }\n     return result;\n   }\n+\n+  @SuppressWarnings(\"SuspiciousSystemArraycopy\")\n+  private Map<PhysicalPlan, PartitionGroup> splitAndRoutePlan(CreateMultiTimeSeriesPlan plan)\n+    throws MetadataException {\n+    Map<PhysicalPlan, PartitionGroup> result = new HashMap<>();\n+    Map<PartitionGroup, PhysicalPlan> groupHoldPlan = new HashMap<>();\n+\n+    for (int i = 0; i < plan.getPaths().size(); i++) {\n+      PartialPath path = plan.getPaths().get(i);\n+      PartitionGroup partitionGroup =\n+        partitionTable.partitionByPathTime(path, 0);\n+      CreateMultiTimeSeriesPlan subPlan = null;\n+      if (groupHoldPlan.get(partitionGroup) == null) {", "originalCommit": "5e5fa4cd6fbac991fbb60e16e387bbe7789df0b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ0MTg0Ng==", "url": "https://github.com/apache/iotdb/pull/1854#discussion_r512441846", "bodyText": "good", "author": "mychaow", "createdAt": "2020-10-27T06:25:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM2NTEwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM2NTg2MQ==", "url": "https://github.com/apache/iotdb/pull/1854#discussion_r512365861", "bodyText": "Not only InsertTabletPlan now, please update the comment.", "author": "jt2594838", "createdAt": "2020-10-27T01:40:21Z", "path": "cluster/src/main/java/org/apache/iotdb/cluster/server/member/MetaGroupMember.java", "diffHunk": "@@ -1466,18 +1467,18 @@ public TSStatus processPartitionedPlan(PhysicalPlan plan) throws UnsupportedPlan\n    */\n   private TSStatus forwardPlan(Map<PhysicalPlan, PartitionGroup> planGroupMap, PhysicalPlan plan) {\n     // the error codes from the groups that cannot execute the plan\n-    TSStatus status;\n+    TSStatus status = null;\n     if (planGroupMap.size() == 1) {\n       status = forwardToSingleGroup(planGroupMap.entrySet().iterator().next());\n     } else {\n-      if (plan instanceof InsertTabletPlan) {\n-        // InsertTabletPlans contain many rows, each will correspond to a TSStatus as its\n+      if (plan instanceof InsertTabletPlan || plan instanceof CreateMultiTimeSeriesPlan) {\n+        // InsertTabletPlan contains many rows, each will correspond to a TSStatus as its", "originalCommit": "5e5fa4cd6fbac991fbb60e16e387bbe7789df0b5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM2NjI3Mw==", "url": "https://github.com/apache/iotdb/pull/1854#discussion_r512366273", "bodyText": "Maybe we should rename plan to something like completePlan, originalPlan or parentPlan.", "author": "jt2594838", "createdAt": "2020-10-27T01:41:53Z", "path": "cluster/src/main/java/org/apache/iotdb/cluster/server/member/MetaGroupMember.java", "diffHunk": "@@ -1510,46 +1511,66 @@ private TSStatus forwardPlan(Map<PhysicalPlan, PartitionGroup> planGroupMap, Phy\n    *\n    * @param planGroupMap sub-plan -> data group pairs\n    */\n-  private TSStatus forwardInsertTabletPlan(Map<PhysicalPlan, PartitionGroup> planGroupMap,\n-      InsertTabletPlan plan) {\n+  private TSStatus forwardMultiSubPlan(Map<PhysicalPlan, PartitionGroup> planGroupMap,\n+                                           PhysicalPlan plan) {", "originalCommit": "5e5fa4cd6fbac991fbb60e16e387bbe7789df0b5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM2NzM5OQ==", "url": "https://github.com/apache/iotdb/pull/1854#discussion_r512367399", "bodyText": "Actually delete the file using something like Files.deleteIfExists().", "author": "jt2594838", "createdAt": "2020-10-27T01:46:04Z", "path": "cluster/src/test/java/org/apache/iotdb/cluster/log/snapshot/DataSnapshotTest.java", "diffHunk": "@@ -75,6 +75,11 @@ public void readFile(String filePath, long offset, int length,\n               }\n             }).start();\n           }\n+\n+          @Override\n+          public void removeHardLink(String hardLinkPath, AsyncMethodCallback<Void> resultHandler) throws TException {\n+            System.out.println(\"remote hardLinkPath: \" + hardLinkPath);", "originalCommit": "5e5fa4cd6fbac991fbb60e16e387bbe7789df0b5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM2ODE2NQ==", "url": "https://github.com/apache/iotdb/pull/1854#discussion_r512368165", "bodyText": "This may skip the unclosed TsFile that should be replaced by the pulled file, and I think cluster_new now has properly handled this, so please abort the change.", "author": "jt2594838", "createdAt": "2020-10-27T01:48:42Z", "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -1937,6 +1937,7 @@ private void removeFullyOverlapFiles(TsFileResource newTsFile, Iterator<TsFileRe\n     while (iterator.hasNext()) {\n       TsFileResource existingTsFile = iterator.next();\n       if (newTsFile.getHistoricalVersions().containsAll(existingTsFile.getHistoricalVersions())\n+          && !newTsFile.getHistoricalVersions().equals(existingTsFile.getHistoricalVersions())", "originalCommit": "5e5fa4cd6fbac991fbb60e16e387bbe7789df0b5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM2ODc2Nw==", "url": "https://github.com/apache/iotdb/pull/1854#discussion_r512368767", "bodyText": "Use e.getErrorCode() here.", "author": "jt2594838", "createdAt": "2020-10-27T01:50:47Z", "path": "server/src/main/java/org/apache/iotdb/db/qp/executor/PlanExecutor.java", "diffHunk": "@@ -1070,11 +1075,19 @@ private boolean createMultiTimeSeries(CreateMultiTimeSeriesPlan createMultiTimeS\n       try {\n         createTimeSeries(plan);\n       } catch (QueryProcessException e) {\n-        results.put(createMultiTimeSeriesPlan.getIndexes().get(i), e);\n+        if (results == null) {\n+          results = new TSStatus[createMultiTimeSeriesPlan.getIndexes().size()];\n+          Arrays.fill(results, RpcUtils.SUCCESS_STATUS);\n+        }\n+        results[i] = RpcUtils.getStatus(TSStatusCode.INTERNAL_SERVER_ERROR, e.getMessage());", "originalCommit": "5e5fa4cd6fbac991fbb60e16e387bbe7789df0b5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM2OTAzMw==", "url": "https://github.com/apache/iotdb/pull/1854#discussion_r512369033", "bodyText": "I think we should rename this to BatchProcessException now.", "author": "jt2594838", "createdAt": "2020-10-27T01:51:50Z", "path": "server/src/main/java/org/apache/iotdb/db/qp/executor/PlanExecutor.java", "diffHunk": "@@ -1070,11 +1075,19 @@ private boolean createMultiTimeSeries(CreateMultiTimeSeriesPlan createMultiTimeS\n       try {\n         createTimeSeries(plan);\n       } catch (QueryProcessException e) {\n-        results.put(createMultiTimeSeriesPlan.getIndexes().get(i), e);\n+        if (results == null) {\n+          results = new TSStatus[createMultiTimeSeriesPlan.getIndexes().size()];\n+          Arrays.fill(results, RpcUtils.SUCCESS_STATUS);\n+        }\n+        results[i] = RpcUtils.getStatus(TSStatusCode.INTERNAL_SERVER_ERROR, e.getMessage());\n+        hasFailed = true;\n         logger.debug(\"meet error while processing create timeseries. \", e);\n       }\n     }\n-    createMultiTimeSeriesPlan.setResults(results);\n+\n+    if (hasFailed) {\n+      throw new BatchInsertionException(results);", "originalCommit": "5e5fa4cd6fbac991fbb60e16e387bbe7789df0b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ0MTcyNw==", "url": "https://github.com/apache/iotdb/pull/1854#discussion_r512441727", "bodyText": "ok", "author": "mychaow", "createdAt": "2020-10-27T06:24:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM2OTAzMw=="}], "type": "inlineReview"}, {"oid": "43d89ac9bb1806c659adcc44e254dd58c5d86a56", "url": "https://github.com/apache/iotdb/commit/43d89ac9bb1806c659adcc44e254dd58c5d86a56", "message": "IOTDB-884 group createMultiTimeseriesPlan by partitionGroup", "committedDate": "2020-10-27T06:27:12Z", "type": "commit"}, {"oid": "006f5325529698611378b7f7a34d0f17d9318649", "url": "https://github.com/apache/iotdb/commit/006f5325529698611378b7f7a34d0f17d9318649", "message": "modify the way of collecting the result", "committedDate": "2020-10-27T06:32:17Z", "type": "commit"}, {"oid": "34de940a1e0849be0d97a91209cc083bb2232af4", "url": "https://github.com/apache/iotdb/commit/34de940a1e0849be0d97a91209cc083bb2232af4", "message": "fix some conflict", "committedDate": "2020-10-27T07:07:39Z", "type": "commit"}, {"oid": "34de940a1e0849be0d97a91209cc083bb2232af4", "url": "https://github.com/apache/iotdb/commit/34de940a1e0849be0d97a91209cc083bb2232af4", "message": "fix some conflict", "committedDate": "2020-10-27T07:07:39Z", "type": "forcePushed"}]}