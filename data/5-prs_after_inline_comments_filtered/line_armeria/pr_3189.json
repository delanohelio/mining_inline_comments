{"pr_number": 3189, "pr_title": "Support Scala Future for annotated services", "pr_createdAt": "2020-11-23T07:31:51Z", "pr_url": "https://github.com/line/armeria/pull/3189", "timeline": [{"oid": "fb8b65e55aa40d37c6d5cf5f22e0fc4231c4e533", "url": "https://github.com/line/armeria/commit/fb8b65e55aa40d37c6d5cf5f22e0fc4231c4e533", "message": "Support Scala Future for annotated services\n\nMotivation:\n\nScala standard libary provides [Future](https://www.scala-lang.org/api/2.12.3/scala/concurrent/Future.html) that is similar to `CompletableFuture`.\nBy supporting Scala Future, ScalaPB users can return a Scala Future that completes a `GeneratedMesage`\nwithout explicitly convertering it to `CompletableFuture`.\n\nModifications:\n\n- Add `scala-library` as a `optionalImplementation` to core module\n- Add `ScalaUtil` for supporting Scala types\n- Make `ExecutionContext`, which wraps `eventLoop`, a default injectable type for annotated service\n  - Users can easily execute async task on top of Armeria's event loop\n  ```scala\n  @Get(\"/items/{id}\")\n  def items(@Param id: Int)(implicit ec: ExecutionContext): Future[String] =\n    Future {\n      // Perform asynchronous task on top of Armeria's event loop\n      ...\n    }\n  ```\n- Convert returned Scala Future to CompletableFuture in annotated service\n- Move ScalaPbJsonMarshaller and ScalaPbGrpcDocServicePlugin from grpc-scala exmaple\n\nResult:\n\n- You can now return Scala Future in annotated service\n- You can now inject Armeria's `ExecutionContext` as an parameter", "committedDate": "2020-11-23T07:18:25Z", "type": "commit"}, {"oid": "7c0d9f10649617cbb3832ae6cb209760881708ed", "url": "https://github.com/line/armeria/commit/7c0d9f10649617cbb3832ae6cb209760881708ed", "message": "Clean up", "committedDate": "2020-11-23T07:38:06Z", "type": "commit"}, {"oid": "f588db80e5f79376647bb698ce7819bdf2db56a0", "url": "https://github.com/line/armeria/commit/f588db80e5f79376647bb698ce7819bdf2db56a0", "message": "Lazyily load", "committedDate": "2020-11-23T07:58:16Z", "type": "commit"}, {"oid": "8d1d205589a79b0c6af078138470fa5606929516", "url": "https://github.com/line/armeria/commit/8d1d205589a79b0c6af078138470fa5606929516", "message": "Fix broken test", "committedDate": "2020-11-23T10:51:38Z", "type": "commit"}, {"oid": "e6136cc698330cdec01bb53019c2b4aac58cce54", "url": "https://github.com/line/armeria/commit/e6136cc698330cdec01bb53019c2b4aac58cce54", "message": "Down Scala version for optionalImplementation", "committedDate": "2020-11-23T12:19:35Z", "type": "commit"}, {"oid": "7002136e89d24c5f44ec88ffb6c264b4b9d18eac", "url": "https://github.com/line/armeria/commit/7002136e89d24c5f44ec88ffb6c264b4b9d18eac", "message": "jacoco", "committedDate": "2020-11-23T13:58:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTE2MzI4OA==", "url": "https://github.com/line/armeria/pull/3189#discussion_r529163288", "bodyText": "nit: can remove scala.concurrent.", "author": "minwoox", "createdAt": "2020-11-24T02:40:20Z", "path": "core/src/main/java/com/linecorp/armeria/internal/server/annotation/ScalaUtil.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Copyright 2020 LINE Corporation\n+ *\n+ * LINE Corporation licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package com.linecorp.armeria.internal.server.annotation;\n+\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.ExecutorService;\n+\n+import javax.annotation.Nullable;\n+\n+import scala.concurrent.ExecutionContext;\n+import scala.util.Failure;\n+\n+final class ScalaUtil {\n+\n+    @Nullable\n+    private static final Class<?> SCALA_FUTURE;\n+    @Nullable\n+    private static final Class<?> SCALA_EXECUTION_CONTEXT;\n+\n+    static {\n+        Class<?> futureClass;\n+        try {\n+            futureClass = Class.forName(\"scala.concurrent.Future\");\n+        } catch (ClassNotFoundException e) {\n+            futureClass = null;\n+        }\n+        SCALA_FUTURE = futureClass;\n+\n+        Class<?> executionContextClass;\n+        try {\n+            executionContextClass = Class.forName(\"scala.concurrent.ExecutionContext\");\n+        } catch (ClassNotFoundException e) {\n+            executionContextClass = null;\n+        }\n+        SCALA_EXECUTION_CONTEXT = executionContextClass;\n+    }\n+\n+    static boolean isScalaFuture(Class<?> clazz) {\n+        return SCALA_FUTURE != null && SCALA_FUTURE.isAssignableFrom(clazz);\n+    }\n+\n+    static boolean isExecutionContext(Class<?> clazz) {\n+        return SCALA_EXECUTION_CONTEXT != null && SCALA_EXECUTION_CONTEXT.isAssignableFrom(clazz);\n+    }\n+\n+    /**\n+     * A converter that converts {@link scala.concurrent.Future} to {@link CompletableFuture}.\n+     * This nested class is lazily initialized only when scala-library is in the classpath.\n+     */\n+    static final class FutureConverter {\n+\n+        static <T> CompletableFuture<T> toCompletableFuture(scala.concurrent.Future<T> scalaFuture,", "originalCommit": "7002136e89d24c5f44ec88ffb6c264b4b9d18eac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTE2NzgwOQ==", "url": "https://github.com/line/armeria/pull/3189#discussion_r529167809", "bodyText": "I intentionally left it to explicitly distinguish with java.util.concurrent.Future. \ud83d\udc7d", "author": "ikhoon", "createdAt": "2020-11-24T02:54:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTE2MzI4OA=="}], "type": "inlineReview"}, {"oid": "22103dae79b135c0a0fe67b44d24ec9255b0c0ca", "url": "https://github.com/line/armeria/commit/22103dae79b135c0a0fe67b44d24ec9255b0c0ca", "message": "Address comments by @minwoox", "committedDate": "2020-11-24T02:55:59Z", "type": "commit"}, {"oid": "b71177a1536b504c5d247a3e389cd42da1a20d26", "url": "https://github.com/line/armeria/commit/b71177a1536b504c5d247a3e389cd42da1a20d26", "message": "Clean up", "committedDate": "2020-11-24T04:13:51Z", "type": "commit"}]}