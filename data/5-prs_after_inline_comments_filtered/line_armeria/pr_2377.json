{"pr_number": 2377, "pr_title": "Return ClientRequestContext.root() when invoking ServiceRequest\u2026", "pr_createdAt": "2020-01-06T09:20:40Z", "pr_url": "https://github.com/line/armeria/pull/2377", "timeline": [{"oid": "19db059b595f580af5351512a27cd8cca380b3a9", "url": "https://github.com/line/armeria/commit/19db059b595f580af5351512a27cd8cca380b3a9", "message": "Return ClientRequestContext.root() when invoking ServiceRequestContext.current()\nMotivation:\nIt makes sense that returning `ClientRequestContext.root()` if the client call is made by a service  when invoking `ServiceRequestContext.current()` and its family methods.\n\nModification:\n- Return `ClientRequestContext.root()` if it exists when calling `ServiceRequestContext.current()` and `currentOrNull()`.\n  - It still throw an exception if the `ClientRequestContext` does not have the root.\n\nResult:\n- More flexible API.", "committedDate": "2020-01-06T09:15:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzIxNDAwNA==", "url": "https://github.com/line/armeria/pull/2377#discussion_r363214004", "bodyText": "Space after :?", "author": "trustin", "createdAt": "2020-01-06T09:24:43Z", "path": "core/src/main/java/com/linecorp/armeria/server/ServiceRequestContext.java", "diffHunk": "@@ -61,33 +60,54 @@\n \n     /**\n      * Returns the server-side context of the {@link Request} that is being handled in the current thread.\n+     * If the context is a {@link ClientRequestContext}, {@link ClientRequestContext#root()} is returned.\n      *\n      * @throws IllegalStateException if the context is unavailable in the current thread or\n-     *                               the current context is not a {@link ServiceRequestContext}.\n+     *                               the current context is a {@link ClientRequestContext} and\n+     *                               {@link ClientRequestContext#root()} is {@code null}\n      */\n     static ServiceRequestContext current() {\n         final RequestContext ctx = RequestContext.current();\n-        checkState(ctx instanceof ServiceRequestContext,\n-                   \"The current context is not a server-side context: %s\", ctx);\n-        return (ServiceRequestContext) ctx;\n+        if (ctx instanceof ServiceRequestContext) {\n+            return (ServiceRequestContext) ctx;\n+        }\n+\n+        final ServiceRequestContext root = ((ClientRequestContext) ctx).root();\n+        if (root != null) {\n+            return root;\n+        }\n+\n+        throw new IllegalStateException(\n+                \"The current context is not a server-side context and does not have a root \" +\n+                \"which means that the context is not invoked by a server request. ctx:\" + ctx);", "originalCommit": "19db059b595f580af5351512a27cd8cca380b3a9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzIxODEwMw==", "url": "https://github.com/line/armeria/pull/2377#discussion_r363218103", "bodyText": "Oops~ \ud83d\ude05", "author": "minwoox", "createdAt": "2020-01-06T09:36:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzIxNDAwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzIxNDA4NQ==", "url": "https://github.com/line/armeria/pull/2377#discussion_r363214085", "bodyText": "Ditto", "author": "trustin", "createdAt": "2020-01-06T09:24:57Z", "path": "core/src/main/java/com/linecorp/armeria/server/ServiceRequestContext.java", "diffHunk": "@@ -61,33 +60,54 @@\n \n     /**\n      * Returns the server-side context of the {@link Request} that is being handled in the current thread.\n+     * If the context is a {@link ClientRequestContext}, {@link ClientRequestContext#root()} is returned.\n      *\n      * @throws IllegalStateException if the context is unavailable in the current thread or\n-     *                               the current context is not a {@link ServiceRequestContext}.\n+     *                               the current context is a {@link ClientRequestContext} and\n+     *                               {@link ClientRequestContext#root()} is {@code null}\n      */\n     static ServiceRequestContext current() {\n         final RequestContext ctx = RequestContext.current();\n-        checkState(ctx instanceof ServiceRequestContext,\n-                   \"The current context is not a server-side context: %s\", ctx);\n-        return (ServiceRequestContext) ctx;\n+        if (ctx instanceof ServiceRequestContext) {\n+            return (ServiceRequestContext) ctx;\n+        }\n+\n+        final ServiceRequestContext root = ((ClientRequestContext) ctx).root();\n+        if (root != null) {\n+            return root;\n+        }\n+\n+        throw new IllegalStateException(\n+                \"The current context is not a server-side context and does not have a root \" +\n+                \"which means that the context is not invoked by a server request. ctx:\" + ctx);\n     }\n \n     /**\n      * Returns the server-side context of the {@link Request} that is being handled in the current thread.\n+     * If the context is a {@link ClientRequestContext}, {@link ClientRequestContext#root()} is returned.\n      *\n      * @return the {@link ServiceRequestContext} available in the current thread,\n      *         or {@code null} if unavailable.\n-     * @throws IllegalStateException if the current context is not a {@link ServiceRequestContext}.\n      */\n     @Nullable\n     static ServiceRequestContext currentOrNull() {\n         final RequestContext ctx = RequestContext.currentOrNull();\n         if (ctx == null) {\n             return null;\n         }\n-        checkState(ctx instanceof ServiceRequestContext,\n-                   \"The current context is not a server-side context: %s\", ctx);\n-        return (ServiceRequestContext) ctx;\n+\n+        if (ctx instanceof ServiceRequestContext) {\n+            return (ServiceRequestContext) ctx;\n+        }\n+\n+        final ServiceRequestContext root = ((ClientRequestContext) ctx).root();\n+        if (root != null) {\n+            return root;\n+        }\n+\n+        throw new IllegalStateException(\n+                \"The current context is not a server-side context and does not have a root \" +\n+                \"which means that the context is not invoked by a server request. ctx:\" + ctx);", "originalCommit": "19db059b595f580af5351512a27cd8cca380b3a9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "70e7de6b7666c94ebe72391fa7bccad3b6dd274d", "url": "https://github.com/line/armeria/commit/70e7de6b7666c94ebe72391fa7bccad3b6dd274d", "message": "Add space", "committedDate": "2020-01-06T09:35:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzIyNzYzMg==", "url": "https://github.com/line/armeria/pull/2377#discussion_r363227632", "bodyText": "I think we can add readability and some documentation by asserting ClientRequestContext.current and RequestContext.current too.", "author": "anuraaga", "createdAt": "2020-01-06T10:01:31Z", "path": "core/src/test/java/com/linecorp/armeria/server/ServiceRequestContextTest.java", "diffHunk": "@@ -67,6 +72,11 @@ void currentOrNull() {\n         try (SafeCloseable unused = ctx.push()) {\n             assertThat(onEnterExitStack).hasSize(1);\n             assertThat(ServiceRequestContext.currentOrNull()).isSameAs(ctx);\n+            try (SafeCloseable unused1 = clientRequestContext().push()) {\n+                assertThat(onEnterExitStack).hasSize(2);\n+                assertThat(ServiceRequestContext.currentOrNull()).isSameAs(ctx);", "originalCommit": "70e7de6b7666c94ebe72391fa7bccad3b6dd274d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzIzNDMyNw==", "url": "https://github.com/line/armeria/pull/2377#discussion_r363234327", "bodyText": "That's a good suggestion. Let me add it.", "author": "minwoox", "createdAt": "2020-01-06T10:20:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzIyNzYzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzIyODAzMQ==", "url": "https://github.com/line/armeria/pull/2377#discussion_r363228031", "bodyText": "I think these tests are too loose, and especially with the double-stack, the new test code is not testing anything interesting - we only assert that any context is mounted and mapped, but it may not necessarily be the right context. c == ctx ? \"foo\" : \"bar\"? Or add/read attributes? Not sure which is less tedious.", "author": "anuraaga", "createdAt": "2020-01-06T10:02:33Z", "path": "core/src/test/java/com/linecorp/armeria/server/ServiceRequestContextTest.java", "diffHunk": "@@ -87,6 +97,12 @@ void mapCurrent() {\n             assertThat(onEnterExitStack).hasSize(1);\n             assertThat(ServiceRequestContext.mapCurrent(c -> \"foo\", () -> \"bar\")).isEqualTo(\"foo\");", "originalCommit": "70e7de6b7666c94ebe72391fa7bccad3b6dd274d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzIzNDQ5NQ==", "url": "https://github.com/line/armeria/pull/2377#discussion_r363234495", "bodyText": "That's a good point. c == ctx ? \"foo\" : \"bar\" is fine for me. Thanks!", "author": "minwoox", "createdAt": "2020-01-06T10:20:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzIyODAzMQ=="}], "type": "inlineReview"}, {"oid": "cecb5108d202ef4b7ac4231060d73955de1531d5", "url": "https://github.com/line/armeria/commit/cecb5108d202ef4b7ac4231060d73955de1531d5", "message": "Address comments by @anuraaga", "committedDate": "2020-01-06T10:27:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzI0MjU3Ng==", "url": "https://github.com/line/armeria/pull/2377#discussion_r363242576", "bodyText": "nit: The Javadoc said the current context is a {@link ClientRequestContext} and. Don't we need to synchronize this too or revert the Javadoc?", "author": "ikhoon", "createdAt": "2020-01-06T10:43:13Z", "path": "core/src/main/java/com/linecorp/armeria/server/ServiceRequestContext.java", "diffHunk": "@@ -61,33 +60,54 @@\n \n     /**\n      * Returns the server-side context of the {@link Request} that is being handled in the current thread.\n+     * If the context is a {@link ClientRequestContext}, {@link ClientRequestContext#root()} is returned.\n      *\n      * @throws IllegalStateException if the context is unavailable in the current thread or\n-     *                               the current context is not a {@link ServiceRequestContext}.\n+     *                               the current context is a {@link ClientRequestContext} and\n+     *                               {@link ClientRequestContext#root()} is {@code null}\n      */\n     static ServiceRequestContext current() {\n         final RequestContext ctx = RequestContext.current();\n-        checkState(ctx instanceof ServiceRequestContext,\n-                   \"The current context is not a server-side context: %s\", ctx);\n-        return (ServiceRequestContext) ctx;\n+        if (ctx instanceof ServiceRequestContext) {\n+            return (ServiceRequestContext) ctx;\n+        }\n+\n+        final ServiceRequestContext root = ((ClientRequestContext) ctx).root();\n+        if (root != null) {\n+            return root;\n+        }\n+\n+        throw new IllegalStateException(\n+                \"The current context is not a server-side context and does not have a root \" +", "originalCommit": "cecb5108d202ef4b7ac4231060d73955de1531d5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzI1MDg5NQ==", "url": "https://github.com/line/armeria/pull/2377#discussion_r363250895", "bodyText": "I synced it. \ud83d\ude04", "author": "minwoox", "createdAt": "2020-01-06T11:09:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzI0MjU3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzI1MjE1NA==", "url": "https://github.com/line/armeria/pull/2377#discussion_r363252154", "bodyText": "Well let me revert this, because the context is not a client request context as well. It could be a fakeContext in a unit test.", "author": "minwoox", "createdAt": "2020-01-06T11:13:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzI0MjU3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzI1MjI2Mg==", "url": "https://github.com/line/armeria/pull/2377#discussion_r363252262", "bodyText": "In that case, the Javadoc still makes sense I guess.", "author": "minwoox", "createdAt": "2020-01-06T11:13:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzI0MjU3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzI1NDMyMw==", "url": "https://github.com/line/armeria/pull/2377#discussion_r363254323", "bodyText": "Ah, I misunderstood. Let revert this. :-)", "author": "ikhoon", "createdAt": "2020-01-06T11:20:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzI0MjU3Ng=="}], "type": "inlineReview"}, {"oid": "8a54559b9112e091295291e014a3c606f8e8a651", "url": "https://github.com/line/armeria/commit/8a54559b9112e091295291e014a3c606f8e8a651", "message": "Address the comment by @ikhoon", "committedDate": "2020-01-06T11:08:55Z", "type": "commit"}, {"oid": "c27885a3946311cb110c56a69558e371cae4b6ca", "url": "https://github.com/line/armeria/commit/c27885a3946311cb110c56a69558e371cae4b6ca", "message": "Revert \"Address the comment by @ikhoon\"\n\nThis reverts commit 8a54559b9112e091295291e014a3c606f8e8a651.", "committedDate": "2020-01-06T11:14:18Z", "type": "commit"}]}