{"pr_number": 3099, "pr_title": "Fix a bug where reactive-grpc fails to send stream responses", "pr_createdAt": "2020-10-07T09:36:37Z", "pr_url": "https://github.com/line/armeria/pull/3099", "timeline": [{"oid": "5ad8ddaa1ae10a86f470be9cd90c5a92801c3a42", "url": "https://github.com/line/armeria/commit/5ad8ddaa1ae10a86f470be9cd90c5a92801c3a42", "message": "Fix a bug where reactive-grpc fails to send stream responses\n\nMotivation:\n\nReactive gRPC starts to subscribe upstream messages when `onReady` signal is delivered.\nhttps://github.com/salesforce/reactive-grpc/blob/master/common/reactive-grpc-common/src/main/java/com/salesforce/reactivegrpc/common/AbstractSubscriberAndProducer.java#L91-L97\nUpstream gRPC-Java server invokes `onReady` when an HTTP header is recevied.\nHowever, `ArmeriaServerCall` invokes `listener.onReady()` only when a response is written completely.\nhttps://github.com/line/armeria/blob/2bc23e60cea9f6adc1415c8d08a34baf2b90ce80/grpc/src/main/java/com/linecorp/armeria/server/grpc/ArmeriaServerCall.java#L254-L262\n\nThis is a deadlock because:\n- `ArmeriaServerCall` waits a message and calls `onReady()`.\n- Reactive gRPC waits `onReady()` signal and send a message.\n\nModifications:\n\n- Invoke `listener.onReady()` as soon as it is set and `onHalfClose()` is invoked\n\nResult:\n\n- Armeria gRPC server now invokes `ServerCall.Listener.onReady()` properly.\n- You no longer see `UNKNOWN` error code while sending stream messages with Reactive gRPC stub.", "committedDate": "2020-10-07T08:40:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk1MTQwMA==", "url": "https://github.com/line/armeria/pull/3099#discussion_r500951400", "bodyText": "Is there any chance where onReady() is called multiple times? e.g. invokeHalfClosed() is called after setListener().", "author": "trustin", "createdAt": "2020-10-07T11:55:25Z", "path": "grpc/src/main/java/com/linecorp/armeria/server/grpc/ArmeriaServerCall.java", "diffHunk": "@@ -431,6 +431,7 @@ private void invokeHalfClose() {\n         try (SafeCloseable ignored = ctx.push()) {\n             assert listener != null;\n             listener.onHalfClose();\n+            listener.onReady();", "originalCommit": "5ad8ddaa1ae10a86f470be9cd90c5a92801c3a42", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk1ODk3Mw==", "url": "https://github.com/line/armeria/pull/3099#discussion_r500958973", "bodyText": "I missed pushing my last work. (27fc00c)\nI do not fully understand the listener's life cycle. I relied on the upstream gRPC server implementation. Based on the upstream gRPC server, the listener.onReady() is called two times if it is an unary stream listener.\n\nWhen a stream is activated\nonHalfClose() is invoked\n\n\n\nonHalfClose in StreamingServerCallListener does not call onReady.\nhttps://github.com/grpc/grpc-java/blob/9b73e2365da502a466b01544f102cd487e374428/stub/src/main/java/io/grpc/stub/ServerCalls.java#L263-L267\n\n      @Override\n      public void onHalfClose() {\n        halfClosed = true;\n        requestObserver.onCompleted();\n      }\n\nonHalfClose in UnaryServerCallListener calls onReady.\nhttps://github.com/grpc/grpc-java/blob/9b73e2365da502a466b01544f102cd487e374428/stub/src/main/java/io/grpc/stub/ServerCalls.java#L170-L190\n\n      public void onHalfClose() {\n        if (!canInvoke) {\n          return;\n        }\n        if (request == null) {\n          // Safe to close the call, because the application has not yet been invoked\n          call.close(\n              Status.INTERNAL.withDescription(MISSING_REQUEST),\n              new Metadata());\n          return;\n        }\n\n\n        method.invoke(request, responseObserver);\n        request = null;\n        responseObserver.freeze();\n        if (wasReady) {\n          // Since we are calling invoke in halfClose we have missed the onReady\n          // event from the transport so recover it here.\n          onReady();\n        }\n      }", "author": "ikhoon", "createdAt": "2020-10-07T12:09:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk1MTQwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU4Mzc4MA==", "url": "https://github.com/line/armeria/pull/3099#discussion_r501583780", "bodyText": "I see. So it's meant to be invoked multiple times whenever something's ready. Thanks for explanation!", "author": "trustin", "createdAt": "2020-10-08T09:39:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk1MTQwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU4NDYzNw==", "url": "https://github.com/line/armeria/pull/3099#discussion_r501584637", "bodyText": "Yes. :-)", "author": "ikhoon", "createdAt": "2020-10-08T09:40:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk1MTQwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTgxOTExMg==", "url": "https://github.com/line/armeria/pull/3099#discussion_r501819112", "bodyText": "FYI, the Javadoc for Listener.onReady()\n     * This indicates that the call may now be capable of sending additional messages (via\n     * {@link #sendMessage}) without requiring excessive buffering internally. This event is\n     * just a suggestion and the application is free to ignore it, however doing so may\n\nhttps://github.com/grpc/grpc-java/blob/18e7e2ddca1323bcdfec4649d7a1dd91a68f8223/api/src/main/java/io/grpc/ServerCall.java#L86-L88", "author": "ikhoon", "createdAt": "2020-10-08T15:37:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk1MTQwMA=="}], "type": "inlineReview"}, {"oid": "f2b538e353b91bbf3d5ccc76bd08054670a73309", "url": "https://github.com/line/armeria/commit/f2b538e353b91bbf3d5ccc76bd08054670a73309", "message": "Add missed code", "committedDate": "2020-10-07T12:24:59Z", "type": "forcePushed"}, {"oid": "742281d48346ffa654d6cae173e3ec9088413d13", "url": "https://github.com/line/armeria/commit/742281d48346ffa654d6cae173e3ec9088413d13", "message": "Add missed code", "committedDate": "2020-10-07T12:26:52Z", "type": "forcePushed"}, {"oid": "27fc00cea76937a1f2d8e7610f664622ecf8b91c", "url": "https://github.com/line/armeria/commit/27fc00cea76937a1f2d8e7610f664622ecf8b91c", "message": "Add missed code", "committedDate": "2020-10-07T12:29:59Z", "type": "commit"}, {"oid": "27fc00cea76937a1f2d8e7610f664622ecf8b91c", "url": "https://github.com/line/armeria/commit/27fc00cea76937a1f2d8e7610f664622ecf8b91c", "message": "Add missed code", "committedDate": "2020-10-07T12:29:59Z", "type": "forcePushed"}, {"oid": "29be1f39f1c185890466e0fdc9ba4efaad7d4943", "url": "https://github.com/line/armeria/commit/29be1f39f1c185890466e0fdc9ba4efaad7d4943", "message": "Update comment", "committedDate": "2020-10-07T16:02:28Z", "type": "commit"}]}