{"pr_number": 2560, "pr_title": "Copy RequestLog properties to child in RetryingClient", "pr_createdAt": "2020-03-06T11:06:58Z", "pr_url": "https://github.com/line/armeria/pull/2560", "timeline": [{"oid": "023b4a85e66d3d1ff4a2815a6ece10f48432ba65", "url": "https://github.com/line/armeria/commit/023b4a85e66d3d1ff4a2815a6ece10f48432ba65", "message": "Copy RequestLog properties to child in RetryingClient\nMotivation:\nWhen retrying, certain properties of `RequestLog` such as `name()`,  `requestContent()` and `requestContentPreview()` can be copied to the child context, so they are used.\n\nModifications:\n- Copy `name()`, `SerializationFormat`, `requestContent` and `requestContentPreview` manually when creating derived ctx in `RetryingClient`.\n  - This is not happen in `newDerivedContext` because we don't know which properties should be copied when deriving.\n\nResult:\n- Close #2551\n- You can now retry depending on the content of the request.", "committedDate": "2020-03-06T11:05:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg0NDA4NA==", "url": "https://github.com/line/armeria/pull/2560#discussion_r388844084", "bodyText": "I wonder if I have to copy the RESPONSE_CONTENT as well. \ud83e\udd14", "author": "minwoox", "createdAt": "2020-03-06T11:08:00Z", "path": "core/src/main/java/com/linecorp/armeria/client/retry/AbstractRetryingClient.java", "diffHunk": "@@ -270,11 +274,41 @@ protected static ClientRequestContext newDerivedContext(ClientRequestContext ctx\n                                                             boolean initialAttempt) {\n         final RequestId id = ctx.options().requestIdGenerator().get();\n         final EndpointGroup endpointGroup = ctx.endpointGroup();\n+        final ClientRequestContext derived;\n         if (endpointGroup != null && !initialAttempt) {\n-            return ctx.newDerivedContext(id, req, rpcReq, endpointGroup.select(ctx));\n+            derived = ctx.newDerivedContext(id, req, rpcReq, endpointGroup.select(ctx));\n         } else {\n-            return ctx.newDerivedContext(id, req, rpcReq);\n+            derived = ctx.newDerivedContext(id, req, rpcReq);\n         }\n+\n+        final RequestLogAccess parentLog = ctx.log();\n+        final RequestLog partial = parentLog.partial();\n+        final RequestLogBuilder logBuilder = derived.logBuilder();\n+        // serializationFormat is always not null, so this is fine.\n+        logBuilder.serializationFormat(partial.serializationFormat());\n+        if (parentLog.isAvailable(RequestLogProperty.NAME)) {\n+            final String name = partial.name();\n+            if (name != null) {\n+                logBuilder.name(name);\n+            }\n+        }\n+\n+        final RequestLogBuilder parentLogBuilder = ctx.logBuilder();\n+        if (parentLogBuilder.isDeferRequestContentSet()) {\n+            logBuilder.deferRequestContent();\n+        }\n+        parentLog.whenAvailable(RequestLogProperty.REQUEST_CONTENT).thenApply(requestLog -> {", "originalCommit": "023b4a85e66d3d1ff4a2815a6ece10f48432ba65", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU4NTEyNw==", "url": "https://github.com/line/armeria/pull/2560#discussion_r389585127", "bodyText": "I think so. How about copying SESSION and SCHEME as well?", "author": "trustin", "createdAt": "2020-03-09T10:49:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg0NDA4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxMTYzMQ==", "url": "https://github.com/line/armeria/pull/2560#discussion_r389611631", "bodyText": "I think SESSION and SCHEME are not available at this point.\nThey are rather copied from child to parent.", "author": "minwoox", "createdAt": "2020-03-09T11:49:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg0NDA4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU3NjQwNw==", "url": "https://github.com/line/armeria/pull/2560#discussion_r389576407", "bodyText": "How about simplifying like the following?\nNote that this method does not copy the {@link RequestLog} properties to the derived\ncontext.", "author": "trustin", "createdAt": "2020-03-09T10:31:38Z", "path": "core/src/main/java/com/linecorp/armeria/client/ClientRequestContext.java", "diffHunk": "@@ -357,6 +357,8 @@ default ClientRequestContext newDerivedContext(RequestId id,\n      * Creates a new {@link ClientRequestContext} whose properties and {@link Attribute}s are copied from this\n      * {@link ClientRequestContext}, except having different {@link Request}, {@link Endpoint} and its own\n      * {@link RequestLog}.\n+     *\n+     * <p>Note that if you want to copy the properties of the {@link RequestLog}, you should do it by yourself.", "originalCommit": "023b4a85e66d3d1ff4a2815a6ece10f48432ba65", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDEwOTM0NA==", "url": "https://github.com/line/armeria/pull/2560#discussion_r390109344", "bodyText": "Fixed. \ud83d\ude09", "author": "minwoox", "createdAt": "2020-03-10T06:01:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU3NjQwNw=="}], "type": "inlineReview"}, {"oid": "b591e727747233cd62c1bd19d3b353700184ac41", "url": "https://github.com/line/armeria/commit/b591e727747233cd62c1bd19d3b353700184ac41", "message": "Propagate response content", "committedDate": "2020-03-10T05:45:41Z", "type": "commit"}, {"oid": "371a75b8cf6c6ed0197823a2e2ff917d081a4f80", "url": "https://github.com/line/armeria/commit/371a75b8cf6c6ed0197823a2e2ff917d081a4f80", "message": "Address the comment by @trustin", "committedDate": "2020-03-10T06:01:23Z", "type": "commit"}, {"oid": "671f91322550bfb61ad8a7ca4d2c9650598e4e37", "url": "https://github.com/line/armeria/commit/671f91322550bfb61ad8a7ca4d2c9650598e4e37", "message": "Merge branch 'master' into fix_request_log", "committedDate": "2020-03-10T11:53:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM4Mjc3Ng==", "url": "https://github.com/line/armeria/pull/2560#discussion_r390382776", "bodyText": "I wonder that could we move the code of log propopagation to DefaultRequestLog.addChild(RequestLogAccess)?", "author": "ikhoon", "createdAt": "2020-03-10T15:04:28Z", "path": "core/src/main/java/com/linecorp/armeria/client/retry/AbstractRetryingClient.java", "diffHunk": "@@ -270,11 +274,57 @@ protected static ClientRequestContext newDerivedContext(ClientRequestContext ctx\n                                                             boolean initialAttempt) {\n         final RequestId id = ctx.options().requestIdGenerator().get();\n         final EndpointGroup endpointGroup = ctx.endpointGroup();\n+        final ClientRequestContext derived;\n         if (endpointGroup != null && !initialAttempt) {\n-            return ctx.newDerivedContext(id, req, rpcReq, endpointGroup.select(ctx));\n+            derived = ctx.newDerivedContext(id, req, rpcReq, endpointGroup.select(ctx));\n         } else {\n-            return ctx.newDerivedContext(id, req, rpcReq);\n+            derived = ctx.newDerivedContext(id, req, rpcReq);\n         }\n+\n+        final RequestLogAccess parentLog = ctx.log();\n+        final RequestLog partial = parentLog.partial();\n+        final RequestLogBuilder logBuilder = derived.logBuilder();\n+        // serializationFormat is always not null, so this is fine.\n+        logBuilder.serializationFormat(partial.serializationFormat());", "originalCommit": "671f91322550bfb61ad8a7ca4d2c9650598e4e37", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY5NzcyMA==", "url": "https://github.com/line/armeria/pull/2560#discussion_r390697720", "bodyText": "As I said before, addChild can be called not just by RetryingClient, but other places because it's a public API.\nWe do not know which properties we have to copy from the parent to the child.", "author": "minwoox", "createdAt": "2020-03-11T01:18:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM4Mjc3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcwOTkxNQ==", "url": "https://github.com/line/armeria/pull/2560#discussion_r390709915", "bodyText": "I understood, thanks for the explanation! \ud83d\ude00", "author": "ikhoon", "createdAt": "2020-03-11T02:11:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM4Mjc3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcxNDU0NA==", "url": "https://github.com/line/armeria/pull/2560#discussion_r390714544", "bodyText": "nit:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        await().untilAsserted(() -> assertThat(logResult.size()).isEqualTo(successLogIndex));\n          \n          \n            \n                        await().untilAsserted(() -> assertThat(logResult).hasSize(successLogIndex));", "author": "ikhoon", "createdAt": "2020-03-11T02:30:16Z", "path": "core/src/test/java/com/linecorp/armeria/client/retry/RetryingClientWithLoggingTest.java", "diffHunk": "@@ -114,11 +118,38 @@ void retryingThenLogging() {\n                                           .decorator(loggingDecorator())\n                                           .decorator(RetryingClient.builder(retryStrategy)\n                                                                    .newDecorator())\n+                                          .decorator((delegate, ctx, req) -> {\n+                                              final RequestLogBuilder logBuilder = ctx.logBuilder();\n+                                              logBuilder.name(\"foo\");\n+                                              logBuilder.requestContent(\"bar\", null);\n+                                              logBuilder.deferRequestContentPreview();\n+                                              logBuilder.deferResponseContent();\n+                                              return delegate.execute(ctx, req);\n+                                          })\n                                           .build();\n-        assertThat(client.get(\"/hello\").aggregate().join().contentUtf8()).isEqualTo(\"hello\");\n+        try (ClientRequestContextCaptor captor = Clients.newContextCaptor()) {\n+            assertThat(client.get(\"/hello\").aggregate().join().contentUtf8()).isEqualTo(\"hello\");\n+            final RequestLogBuilder logBuilder = captor.get().logBuilder();\n+            logBuilder.requestContentPreview(\"baz\");\n+\n+            await().untilAsserted(() -> assertThat(logResult.size()).isEqualTo(successLogIndex));", "originalCommit": "671f91322550bfb61ad8a7ca4d2c9650598e4e37", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDczMTU4Mg==", "url": "https://github.com/line/armeria/pull/2560#discussion_r390731582", "bodyText": "Thanks, fixed. \ud83d\ude09", "author": "minwoox", "createdAt": "2020-03-11T03:46:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcxNDU0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcxNDY3MQ==", "url": "https://github.com/line/armeria/pull/2560#discussion_r390714671", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        assertThat(logResult.size()).isEqualTo(successLogIndex);\n          \n          \n            \n                        assertThat(logResult).hasSize(successLogIndex);", "author": "ikhoon", "createdAt": "2020-03-11T02:30:49Z", "path": "core/src/test/java/com/linecorp/armeria/client/retry/RetryingClientWithLoggingTest.java", "diffHunk": "@@ -114,11 +118,38 @@ void retryingThenLogging() {\n                                           .decorator(loggingDecorator())\n                                           .decorator(RetryingClient.builder(retryStrategy)\n                                                                    .newDecorator())\n+                                          .decorator((delegate, ctx, req) -> {\n+                                              final RequestLogBuilder logBuilder = ctx.logBuilder();\n+                                              logBuilder.name(\"foo\");\n+                                              logBuilder.requestContent(\"bar\", null);\n+                                              logBuilder.deferRequestContentPreview();\n+                                              logBuilder.deferResponseContent();\n+                                              return delegate.execute(ctx, req);\n+                                          })\n                                           .build();\n-        assertThat(client.get(\"/hello\").aggregate().join().contentUtf8()).isEqualTo(\"hello\");\n+        try (ClientRequestContextCaptor captor = Clients.newContextCaptor()) {\n+            assertThat(client.get(\"/hello\").aggregate().join().contentUtf8()).isEqualTo(\"hello\");\n+            final RequestLogBuilder logBuilder = captor.get().logBuilder();\n+            logBuilder.requestContentPreview(\"baz\");\n+\n+            await().untilAsserted(() -> assertThat(logResult.size()).isEqualTo(successLogIndex));\n+            TimeUnit.SECONDS.sleep(1);\n+            // The last log is not complete because the parent log doesn't set the response content yet.\n+            assertThat(logResult.size()).isEqualTo(successLogIndex);", "originalCommit": "671f91322550bfb61ad8a7ca4d2c9650598e4e37", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8de3b9ec8bb5422f3744f0fa8ae9de22c5061062", "url": "https://github.com/line/armeria/commit/8de3b9ec8bb5422f3744f0fa8ae9de22c5061062", "message": "Address the comment by @ikhoon", "committedDate": "2020-03-11T03:46:35Z", "type": "commit"}]}