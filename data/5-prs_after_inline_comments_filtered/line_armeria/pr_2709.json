{"pr_number": 2709, "pr_title": "Fix a bug where a response cause is not propagated when retrying a fa\u2026", "pr_createdAt": "2020-05-13T15:37:18Z", "pr_url": "https://github.com/line/armeria/pull/2709", "timeline": [{"oid": "76c30886caea6e61fae3f4ad37647a8235f055c6", "url": "https://github.com/line/armeria/commit/76c30886caea6e61fae3f4ad37647a8235f055c6", "message": "Fix a bug where a response cause is not propagated when retrying a failed request with content\n\nMotivation:\n\n`RetryRule` is combined with `RetryRuleWithContent`, sometimes a response cause could not be propagated\nbecause of the following problems:\n\n1) When converting `RetryRuleWithContent` to `RetryRule`, a response cause got from\n   `HttpResponse.whenComplete()` without aggregation.\n   If `HttpResponse.abort()` is not invoked yet, `RetryRule` could not use the response cause.\n\n2) `HttpResponse` was aborted before subscription, then the response could not be duplicated.\n   For example, a request was failed with `UnprocessedRequestException`; then, the response was aborted already.\n\nModifications:\n\n* Pull a response cause from `RequestContext.log()` when RetryRule is\n  combined with `RetryRuleWithContent`.\n* Don't duplicate response content if a response has a cause before evaluating a response.\n\nResult:\n\nA `RetryRule` could be retried with a response cause even though it is combined with `RetryRuleWithContent`.", "committedDate": "2020-05-13T15:38:24Z", "type": "commit"}, {"oid": "76c30886caea6e61fae3f4ad37647a8235f055c6", "url": "https://github.com/line/armeria/commit/76c30886caea6e61fae3f4ad37647a8235f055c6", "message": "Fix a bug where a response cause is not propagated when retrying a failed request with content\n\nMotivation:\n\n`RetryRule` is combined with `RetryRuleWithContent`, sometimes a response cause could not be propagated\nbecause of the following problems:\n\n1) When converting `RetryRuleWithContent` to `RetryRule`, a response cause got from\n   `HttpResponse.whenComplete()` without aggregation.\n   If `HttpResponse.abort()` is not invoked yet, `RetryRule` could not use the response cause.\n\n2) `HttpResponse` was aborted before subscription, then the response could not be duplicated.\n   For example, a request was failed with `UnprocessedRequestException`; then, the response was aborted already.\n\nModifications:\n\n* Pull a response cause from `RequestContext.log()` when RetryRule is\n  combined with `RetryRuleWithContent`.\n* Don't duplicate response content if a response has a cause before evaluating a response.\n\nResult:\n\nA `RetryRule` could be retried with a response cause even though it is combined with `RetryRuleWithContent`.", "committedDate": "2020-05-13T15:38:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgxOTcxMA==", "url": "https://github.com/line/armeria/pull/2709#discussion_r424819710", "bodyText": "fromRetryRuleWithContent?", "author": "trustin", "createdAt": "2020-05-14T01:24:49Z", "path": "core/src/main/java/com/linecorp/armeria/client/retry/RetryRuleUtil.java", "diffHunk": "@@ -60,18 +60,19 @@ static RetryRule fromRetryStrategy(RetryStrategy strategy) {\n         });\n     }\n \n+    static <T extends Response> RetryRule fromRetryWithContent(RetryRuleWithContent<T> retryRule) {", "originalCommit": "76c30886caea6e61fae3f4ad37647a8235f055c6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgyMDM0Ng==", "url": "https://github.com/line/armeria/pull/2709#discussion_r424820346", "bodyText": "Could cache this in the constructor?", "author": "trustin", "createdAt": "2020-05-14T01:27:08Z", "path": "core/src/main/java/com/linecorp/armeria/client/retry/RetryingClient.java", "diffHunk": "@@ -282,14 +284,18 @@ private void doExecute0(ClientRequestContext ctx, HttpRequestDuplicator rootReqD\n                                                                     duplicated, duplicator::abort));\n                     }\n                 } else {\n-                    final Throwable responseCause =\n-                            log.isAvailable(RequestLogProperty.RESPONSE_CAUSE) ? log.responseCause() : null;\n+                    final RetryRule retryRule;\n+                    if (needsContentInStrategy) {\n+                        retryRule = RetryRuleUtil.fromRetryWithContent(retryRuleWithContent());\n+                    } else {\n+                        retryRule = retryRule();\n+                    }", "originalCommit": "76c30886caea6e61fae3f4ad37647a8235f055c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgzODgwMg==", "url": "https://github.com/line/armeria/pull/2709#discussion_r424838802", "bodyText": "SGTM \ud83d\udc4d", "author": "ikhoon", "createdAt": "2020-05-14T02:40:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgyMDM0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgyMjQ4MQ==", "url": "https://github.com/line/armeria/pull/2709#discussion_r424822481", "bodyText": "What if an exception is raised when subscribing to HttpResponse?\nShouldn't we use always use duplicator if needsContentInStrategy is true?", "author": "minwoox", "createdAt": "2020-05-14T01:35:42Z", "path": "core/src/main/java/com/linecorp/armeria/client/retry/RetryingClient.java", "diffHunk": "@@ -269,7 +269,9 @@ private void doExecute0(ClientRequestContext ctx, HttpRequestDuplicator rootReqD\n \n         derivedCtx.log().whenAvailable(RequestLogProperty.RESPONSE_HEADERS).thenAccept(log -> {\n             try {\n-                if (needsContentInStrategy) {\n+                final Throwable responseCause =\n+                        log.isAvailable(RequestLogProperty.RESPONSE_CAUSE) ? log.responseCause() : null;\n+                if (needsContentInStrategy && responseCause == null) {", "originalCommit": "76c30886caea6e61fae3f4ad37647a8235f055c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg1NTY5OA==", "url": "https://github.com/line/armeria/pull/2709#discussion_r424855698", "bodyText": "As mentioned in the PR description, HttpResponse was aborted before subscription, then the response could not be duplicated. So HttpResponse is duplicated if responseCause is not null.", "author": "ikhoon", "createdAt": "2020-05-14T03:51:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgyMjQ4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgyMjU0Mw==", "url": "https://github.com/line/armeria/pull/2709#discussion_r424822543", "bodyText": "needsContentInStrategy -> needsContentInRule", "author": "minwoox", "createdAt": "2020-05-14T01:35:56Z", "path": "core/src/main/java/com/linecorp/armeria/client/retry/RetryingClient.java", "diffHunk": "@@ -269,7 +269,9 @@ private void doExecute0(ClientRequestContext ctx, HttpRequestDuplicator rootReqD\n \n         derivedCtx.log().whenAvailable(RequestLogProperty.RESPONSE_HEADERS).thenAccept(log -> {\n             try {\n-                if (needsContentInStrategy) {\n+                final Throwable responseCause =\n+                        log.isAvailable(RequestLogProperty.RESPONSE_CAUSE) ? log.responseCause() : null;\n+                if (needsContentInStrategy && responseCause == null) {", "originalCommit": "76c30886caea6e61fae3f4ad37647a8235f055c6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "54b52318b64d1113769486e652e481fa7d377151", "url": "https://github.com/line/armeria/commit/54b52318b64d1113769486e652e481fa7d377151", "message": "Fix broken test", "committedDate": "2020-05-14T01:54:11Z", "type": "commit"}, {"oid": "040c494d998bca441ef4081ed2232a745b3c985d", "url": "https://github.com/line/armeria/commit/040c494d998bca441ef4081ed2232a745b3c985d", "message": "Address comments @minwoox / Handle RpcResponse cause", "committedDate": "2020-05-14T02:39:17Z", "type": "commit"}, {"oid": "47562b0cd9c62f6502c6d94c81f41616621280f0", "url": "https://github.com/line/armeria/commit/47562b0cd9c62f6502c6d94c81f41616621280f0", "message": "Addresss comments by @minwoox, @trustin\n\n* Make RetryRuleWithContent take `cause` as a parameter.\n* Set response cause before closing or aborting", "committedDate": "2020-05-14T03:45:41Z", "type": "commit"}, {"oid": "387a899172041f741dc02a4c94bdd1b0f42caed8", "url": "https://github.com/line/armeria/commit/387a899172041f741dc02a4c94bdd1b0f42caed8", "message": "Oops...", "committedDate": "2020-05-14T04:02:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg2MzI0NQ==", "url": "https://github.com/line/armeria/pull/2709#discussion_r424863245", "bodyText": "nit: Could merge into the above line.", "author": "minwoox", "createdAt": "2020-05-14T04:24:39Z", "path": "benchmarks/src/jmh/java/com/linecorp/armeria/core/client/retry/WithDuplicator.java", "diffHunk": "@@ -29,11 +29,11 @@\n \n     @Override\n     protected WebClient newClient() {\n-        final RetryRuleWithContent<HttpResponse> retryStrategy =\n-                (ctx, response) -> response.aggregate().handle((unused1, unused2) -> null);\n+        final RetryRuleWithContent<HttpResponse> rule =\n+                (ctx, response, cause) -> response.aggregate().handle((unused1, unused2) -> null);\n \n         return WebClient.builder(baseUrl())\n-                        .decorator(RetryingClient.builder(retryStrategy)\n+                        .decorator(RetryingClient.builder(rule)\n                                                  .newDecorator())", "originalCommit": "387a899172041f741dc02a4c94bdd1b0f42caed8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "68dc9f0be99915b5ce670653caac74027fd339b5", "url": "https://github.com/line/armeria/commit/68dc9f0be99915b5ce670653caac74027fd339b5", "message": "Address comments @minwoox", "committedDate": "2020-05-14T04:32:42Z", "type": "commit"}, {"oid": "716c1c92f70bcf030372687e3b69dd8d719480b6", "url": "https://github.com/line/armeria/commit/716c1c92f70bcf030372687e3b69dd8d719480b6", "message": "Add newDecorator(RetryRuleWithContent...)", "committedDate": "2020-05-14T05:48:49Z", "type": "commit"}]}