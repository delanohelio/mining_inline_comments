{"pr_number": 2853, "pr_title": "Allow binding an annotated service method without a path", "pr_createdAt": "2020-06-30T02:22:31Z", "pr_url": "https://github.com/line/armeria/pull/2853", "timeline": [{"oid": "33b1e2924b262526a325e2e1b7b4068971b113e8", "url": "https://github.com/line/armeria/commit/33b1e2924b262526a325e2e1b7b4068971b113e8", "message": "Allow binding an annotated service method without a path #2708Allow binding an annotated service method without a path (#2708)", "committedDate": "2020-06-28T08:22:32Z", "type": "commit"}, {"oid": "772f07e6a0e3d895f0b805e60a3affbaf422284b", "url": "https://github.com/line/armeria/commit/772f07e6a0e3d895f0b805e60a3affbaf422284b", "message": "Remove non-failure test cases / Add successful test cases", "committedDate": "2020-06-29T07:55:33Z", "type": "commit"}, {"oid": "22d78a66586f0f6e7ca89134d55ce030a5a66875", "url": "https://github.com/line/armeria/commit/22d78a66586f0f6e7ca89134d55ce030a5a66875", "message": "Clean up", "committedDate": "2020-06-29T10:39:46Z", "type": "commit"}, {"oid": "d284f05b4fe8bce02e805c5c6da944d3054d8110", "url": "https://github.com/line/armeria/commit/d284f05b4fe8bce02e805c5c6da944d3054d8110", "message": "Fix javadoc", "committedDate": "2020-06-29T10:42:19Z", "type": "commit"}, {"oid": "0225e3ef714fd6daf1611be71d06bb067962651a", "url": "https://github.com/line/armeria/commit/0225e3ef714fd6daf1611be71d06bb067962651a", "message": "Remove non-failure test cases", "committedDate": "2020-06-29T10:48:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE2NTMwNw==", "url": "https://github.com/line/armeria/pull/2853#discussion_r448165307", "bodyText": "pathPattern.isEmpty()? pathPattern has no @Nullable.", "author": "trustin", "createdAt": "2020-07-01T07:20:35Z", "path": "core/src/main/java/com/linecorp/armeria/server/RouteBuilder.java", "diffHunk": "@@ -98,6 +99,10 @@ public RouteBuilder path(String pathPattern) {\n      */\n     public RouteBuilder path(String prefix, String pathPattern) {\n         prefix = ensureAbsolutePath(prefix, \"prefix\");\n+        if (Strings.isNullOrEmpty(pathPattern)) {", "originalCommit": "0225e3ef714fd6daf1611be71d06bb067962651a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMzNDEzMg==", "url": "https://github.com/line/armeria/pull/2853#discussion_r449334132", "bodyText": "Fixed 0879163 \ud83d\ude04", "author": "heowc", "createdAt": "2020-07-03T01:31:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE2NTMwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE2NjI0Ng==", "url": "https://github.com/line/armeria/pull/2853#discussion_r448166246", "bodyText": "pathPattern is never null. Use pathPattern.isEmpty().", "author": "trustin", "createdAt": "2020-07-01T07:22:21Z", "path": "core/src/main/java/com/linecorp/armeria/server/RouteBuilder.java", "diffHunk": "@@ -461,7 +466,9 @@ public String toString() {\n \n     private static PathMapping getPathMapping(String pathPattern) {\n         requireNonNull(pathPattern, \"pathPattern\");\n-\n+        if (Strings.isNullOrEmpty(pathPattern)) {", "originalCommit": "0225e3ef714fd6daf1611be71d06bb067962651a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMzNDE2NQ==", "url": "https://github.com/line/armeria/pull/2853#discussion_r449334165", "bodyText": "Fixed 0879163 \ud83d\ude04", "author": "heowc", "createdAt": "2020-07-03T01:31:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE2NjI0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODg4MzEwMg==", "url": "https://github.com/line/armeria/pull/2853#discussion_r448883102", "bodyText": "This is used in only one place. How about embedding it and leave a comment?", "author": "ikhoon", "createdAt": "2020-07-02T09:47:24Z", "path": "core/src/main/java/com/linecorp/armeria/internal/server/annotation/AnnotatedServiceFactory.java", "diffHunk": "@@ -168,6 +168,11 @@\n                     .put(Trace.class, HttpMethod.TRACE)\n                     .build();\n \n+    /**\n+     * A value to specify if HTTP method annotation value is empty or not specified.\n+     */\n+    private static final String EMPTY_PATH = \"\";", "originalCommit": "0225e3ef714fd6daf1611be71d06bb067962651a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMzNDYzOA==", "url": "https://github.com/line/armeria/pull/2853#discussion_r449334638", "bodyText": "I removed that constant. And I assigned the values myself and added a separate comment. 4508c1a", "author": "heowc", "createdAt": "2020-07-03T01:33:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODg4MzEwMg=="}], "type": "inlineReview"}, {"oid": "087916306c93858a4eeb3d0918ce76647ca679a5", "url": "https://github.com/line/armeria/commit/087916306c93858a4eeb3d0918ce76647ca679a5", "message": "Address the comments from @trustin", "committedDate": "2020-07-03T01:30:32Z", "type": "commit"}, {"oid": "4508c1a55834df20ac3b851301a6057084bb1408", "url": "https://github.com/line/armeria/commit/4508c1a55834df20ac3b851301a6057084bb1408", "message": "Address the comments from @ikhoon", "committedDate": "2020-07-03T01:30:46Z", "type": "commit"}, {"oid": "2278f336151df26428c065eec2d093b576a35d38", "url": "https://github.com/line/armeria/commit/2278f336151df26428c065eec2d093b576a35d38", "message": "Checkstyle", "committedDate": "2020-07-03T02:02:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM0NTY3MQ==", "url": "https://github.com/line/armeria/pull/2853#discussion_r449345671", "bodyText": "IIUC, httpMethodPaths seems not to be empty here. Could remove this if condition?", "author": "ikhoon", "createdAt": "2020-07-03T02:26:45Z", "path": "core/src/main/java/com/linecorp/armeria/internal/server/annotation/AnnotatedServiceFactory.java", "diffHunk": "@@ -503,6 +503,9 @@ private static int order(Method method) {\n                             }\n                             if (usePathPatterns) {\n                                 httpMethodPaths.addAll(pathPatterns);\n+                            } else if (httpMethodPaths.isEmpty()) {\n+                                // Add an empty value if HTTP method annotation value is empty or not specified.\n+                                httpMethodPaths.add(\"\");\n                             }\n                             if (httpMethodPaths.isEmpty()) {", "originalCommit": "2278f336151df26428c065eec2d093b576a35d38", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM2NjYwMg==", "url": "https://github.com/line/armeria/pull/2853#discussion_r449366602", "bodyText": "If this is the default, httpMethodPaths may be empty. This is because the default value is not fetched in the process of getting the value.", "author": "heowc", "createdAt": "2020-07-03T04:13:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM0NTY3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYxNzkyNQ==", "url": "https://github.com/line/armeria/pull/2853#discussion_r449617925", "bodyText": "Based on the validations and if-else condition:\n\nif usePatterns is true, httpMethodPaths is always not empty because of the condition of line 505.\nif httpMethodPaths.isEmpty() is true, an empty string is added to it.\n\nTherefore, in line 510, httpMethodPaths has at least one item, in my opinion.", "author": "ikhoon", "createdAt": "2020-07-03T14:45:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM0NTY3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYxOTk1Ng==", "url": "https://github.com/line/armeria/pull/2853#discussion_r449619956", "bodyText": "Ah! I was mistaken for the number of lines. \ud83d\ude05\nI agree to remove lines 510-513.", "author": "heowc", "createdAt": "2020-07-03T14:50:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM0NTY3MQ=="}], "type": "inlineReview"}, {"oid": "42987be54a41863c232c92cf9b47acc5a4611ecd", "url": "https://github.com/line/armeria/commit/42987be54a41863c232c92cf9b47acc5a4611ecd", "message": "Add `AnnotatedServiceNullablePathTest`", "committedDate": "2020-07-03T05:04:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQzNDM4MA==", "url": "https://github.com/line/armeria/pull/2853#discussion_r449434380", "bodyText": "Could you set up a server using ServerExtension and send real HTTP requests to the server? The test cases in this class does not really ensure the requests will go to the desired service methods.\nCould you use a meaningful path instead of /1?", "author": "trustin", "createdAt": "2020-07-03T07:55:01Z", "path": "core/src/test/java/com/linecorp/armeria/internal/server/annotation/AnnotatedServiceNullablePathTest.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Copyright 2020 LINE Corporation\n+ *\n+ * LINE Corporation licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.linecorp.armeria.internal.server.annotation;\n+\n+import static org.assertj.core.api.Assertions.assertThatThrownBy;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import com.linecorp.armeria.common.HttpResponse;\n+import com.linecorp.armeria.common.HttpStatus;\n+import com.linecorp.armeria.server.Server;\n+import com.linecorp.armeria.server.annotation.Get;\n+import com.linecorp.armeria.server.annotation.Path;\n+\n+class AnnotatedServiceNullablePathTest {", "originalCommit": "42987be54a41863c232c92cf9b47acc5a4611ecd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQzNTMzNQ==", "url": "https://github.com/line/armeria/pull/2853#discussion_r449435335", "bodyText": "I will reinforce this comment. \ud83d\ude04", "author": "heowc", "createdAt": "2020-07-03T07:56:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQzNDM4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQ1ODA4Nw==", "url": "https://github.com/line/armeria/pull/2853#discussion_r449458087", "bodyText": "Fixed de7a209", "author": "heowc", "createdAt": "2020-07-03T08:43:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQzNDM4MA=="}], "type": "inlineReview"}, {"oid": "de7a20978594268cb3cbfaa226f2f13de8762d5d", "url": "https://github.com/line/armeria/commit/de7a20978594268cb3cbfaa226f2f13de8762d5d", "message": "Fix `AnnotatedServiceNullablePathTest`", "committedDate": "2020-07-03T08:40:45Z", "type": "commit"}, {"oid": "3db6f08fe526b3536379124a3237279977889600", "url": "https://github.com/line/armeria/commit/3db6f08fe526b3536379124a3237279977889600", "message": "Merge remote-tracking branch 'armeria/master' into binding_httpmethod_without_path", "committedDate": "2020-07-03T08:57:39Z", "type": "commit"}, {"oid": "90b93d9b89c454496f8ab89f8ff8e77954b485af", "url": "https://github.com/line/armeria/commit/90b93d9b89c454496f8ab89f8ff8e77954b485af", "message": "Fix import", "committedDate": "2020-07-03T09:02:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQ5MTMzMQ==", "url": "https://github.com/line/armeria/pull/2853#discussion_r449491331", "bodyText": "Couldn't we just call path(prefix)?", "author": "ikhoon", "createdAt": "2020-07-03T09:48:35Z", "path": "core/src/main/java/com/linecorp/armeria/server/RouteBuilder.java", "diffHunk": "@@ -98,6 +98,10 @@ public RouteBuilder path(String pathPattern) {\n      */\n     public RouteBuilder path(String prefix, String pathPattern) {\n         prefix = ensureAbsolutePath(prefix, \"prefix\");\n+        if (pathPattern.isEmpty()) {\n+            return path(concatPaths(prefix, pathPattern));", "originalCommit": "90b93d9b89c454496f8ab89f8ff8e77954b485af", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYxMjU4NA==", "url": "https://github.com/line/armeria/pull/2853#discussion_r449612584", "bodyText": "Fixed 1d30371", "author": "heowc", "createdAt": "2020-07-03T14:33:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQ5MTMzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTUxMTA4OA==", "url": "https://github.com/line/armeria/pull/2853#discussion_r449511088", "bodyText": "IIUC, ExactPathMapping will throw an  IllegalArgumentException on an empty string.", "author": "ikhoon", "createdAt": "2020-07-03T10:31:23Z", "path": "core/src/main/java/com/linecorp/armeria/server/RouteBuilder.java", "diffHunk": "@@ -461,7 +465,9 @@ public String toString() {\n \n     private static PathMapping getPathMapping(String pathPattern) {\n         requireNonNull(pathPattern, \"pathPattern\");\n-\n+        if (pathPattern.isEmpty()) {\n+            return new ExactPathMapping(pathPattern);\n+        }", "originalCommit": "90b93d9b89c454496f8ab89f8ff8e77954b485af", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYxMjg2Ng==", "url": "https://github.com/line/armeria/pull/2853#discussion_r449612866", "bodyText": "This code was removed in 1d30371 :)", "author": "heowc", "createdAt": "2020-07-03T14:33:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTUxMTA4OA=="}], "type": "inlineReview"}, {"oid": "1d3037191ac5506115645c022a50b592adc4fb64", "url": "https://github.com/line/armeria/commit/1d3037191ac5506115645c022a50b592adc4fb64", "message": "Address the comments from @ikhoon", "committedDate": "2020-07-03T14:32:41Z", "type": "commit"}, {"oid": "3c59e0605c376b12f9364931a187b11b5a613d00", "url": "https://github.com/line/armeria/commit/3c59e0605c376b12f9364931a187b11b5a613d00", "message": "Address the comments from @ikhoon", "committedDate": "2020-07-03T14:51:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc3MTQ5Nw==", "url": "https://github.com/line/armeria/pull/2853#discussion_r450771497", "bodyText": "nit: Add hasMessageContaining(\"...\")?", "author": "ikhoon", "createdAt": "2020-07-07T10:40:50Z", "path": "core/src/test/java/com/linecorp/armeria/internal/server/annotation/AnnotatedServiceNullablePathTest.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Copyright 2020 LINE Corporation\n+ *\n+ * LINE Corporation licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.linecorp.armeria.internal.server.annotation;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.assertThatThrownBy;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.CsvSource;\n+\n+import com.linecorp.armeria.client.WebClient;\n+import com.linecorp.armeria.common.HttpResponse;\n+import com.linecorp.armeria.common.HttpStatus;\n+import com.linecorp.armeria.server.Server;\n+import com.linecorp.armeria.server.ServerBuilder;\n+import com.linecorp.armeria.server.annotation.Get;\n+import com.linecorp.armeria.server.annotation.Path;\n+import com.linecorp.armeria.testing.junit5.server.ServerExtension;\n+\n+class AnnotatedServiceNullablePathTest {\n+\n+    @RegisterExtension\n+    static final ServerExtension server = new ServerExtension() {\n+        @Override\n+        protected void configure(ServerBuilder sb) throws Exception {\n+            sb.annotatedService(\"/default\", new Object() {\n+                @Get\n+                public HttpResponse defaultValue() {\n+                    return HttpResponse.of(HttpStatus.OK);\n+                }\n+            });\n+\n+            sb.annotatedService(\"/empty\", new Object() {\n+                @Get(\"\")\n+                public HttpResponse emptyValue() {\n+                    return HttpResponse.of(HttpStatus.OK);\n+                }\n+            });\n+\n+            sb.annotatedService(\"/multiple\", new Object() {\n+                @Get\n+                @Path(\"/\")\n+                public HttpResponse multipleValue() {\n+                    return HttpResponse.of(HttpStatus.OK);\n+                }\n+            });\n+        }\n+    };\n+\n+    @ParameterizedTest\n+    @CsvSource({ \"/default, 200\", \"/empty, 200\", \"/multiple, 307\", \"/multiple/, 200\" })\n+    void params(String path, int statusCode) {\n+        final WebClient client = WebClient.of(server.httpUri());\n+        assertThat(client.get(path).aggregate().join().status().code()).isEqualTo(statusCode);\n+    }\n+\n+    @Test\n+    void testNullablePathFailureService() {\n+        assertThatThrownBy(() -> {\n+            Server.builder()\n+                  .annotatedService(\"/multiple\", new Object() {\n+                      @Get(\"\")\n+                      @Path(\"/\")\n+                      public HttpResponse multipleValue() {\n+                          return HttpResponse.of(HttpStatus.OK);\n+                      }\n+                  })\n+                  .build();\n+        }).isInstanceOf(IllegalArgumentException.class);", "originalCommit": "3c59e0605c376b12f9364931a187b11b5a613d00", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg4ODI1MQ==", "url": "https://github.com/line/armeria/pull/2853#discussion_r450888251", "bodyText": "Fixed 47ff3d3", "author": "heowc", "createdAt": "2020-07-07T14:02:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc3MTQ5Nw=="}], "type": "inlineReview"}, {"oid": "47ff3d3ac6f2b1cb3947a48707d5f155370f70c2", "url": "https://github.com/line/armeria/commit/47ff3d3ac6f2b1cb3947a48707d5f155370f70c2", "message": "Add `hasMessageContaining(...)`", "committedDate": "2020-07-07T14:01:42Z", "type": "commit"}]}