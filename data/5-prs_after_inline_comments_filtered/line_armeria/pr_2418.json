{"pr_number": 2418, "pr_title": "Fix StackOverFlow when dumpOpenSslInfo is set to true", "pr_createdAt": "2020-01-24T14:12:41Z", "pr_url": "https://github.com/line/armeria/pull/2418", "timeline": [{"oid": "4533da47f0fd9ad3e0d2706273a69286aa849e1e", "url": "https://github.com/line/armeria/commit/4533da47f0fd9ad3e0d2706273a69286aa849e1e", "message": "Fix StackOverFlow when dumpOpenSslInfo is set to true\nMotivation:\nRelated #2417\n\nModification:\n- Fix not to call `Flags.useOpenSsl()` in `Flags.useOpenSsl()`.\n\nResult:\n- Closes #2417\n- You can now set `com.linecorp.armeria.dumpOpenSslInfo=true` property.", "committedDate": "2020-01-24T14:05:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY2MTc3Mw==", "url": "https://github.com/line/armeria/pull/2418#discussion_r370661773", "bodyText": "You don't need to address this review. Just I guess @SetSystemProperty in JUnit Pioneer seems cleaner to set a system property.\n@SetSystemProperty(key = \"some property\", value = \"new value\")\nhttps://junit-pioneer.org/docs/system-properties/", "author": "ikhoon", "createdAt": "2020-01-24T14:29:56Z", "path": "core/src/test/java/com/linecorp/armeria/common/FlagsTest.java", "diffHunk": "@@ -48,12 +48,21 @@ public void epollAvailableOnLinux() {\n      * on Linux, Windows and OS X.\n      */\n     @Test\n-    public void openSslAvailable() {\n+    void openSslAvailable() {\n         assumeTrue(osName.startsWith(\"linux\") || osName.startsWith(\"windows\") ||\n                    osName.startsWith(\"macosx\") || osName.startsWith(\"osx\"));\n         assumeFalse(\"false\".equals(System.getProperty(\"com.linecorp.armeria.useOpenSsl\")));\n \n         assertThat(Flags.useOpenSsl()).isTrue();\n         assertThat(OpenSsl.isAvailable()).isTrue();\n     }\n+\n+    @Test\n+    void dumpOpenSslInfoDoNotThrowStackOverFlowError() {\n+        System.setProperty(\"com.linecorp.armeria.dumpOpenSslInfo\", \"true\");\n+        System.setProperty(\"com.linecorp.armeria.useOpenSsl\", \"true\");", "originalCommit": "4533da47f0fd9ad3e0d2706273a69286aa849e1e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY3MjcwMA==", "url": "https://github.com/line/armeria/pull/2418#discussion_r370672700", "bodyText": "That's a nice suggestion. Let me used that. Thanks!", "author": "minwoox", "createdAt": "2020-01-24T14:51:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY2MTc3Mw=="}], "type": "inlineReview"}, {"oid": "1d2ad4067f5a0f7bfef6dfb3904ac15f7d9a6fe4", "url": "https://github.com/line/armeria/commit/1d2ad4067f5a0f7bfef6dfb3904ac15f7d9a6fe4", "message": "Address the comment by @ikhoon", "committedDate": "2020-01-24T14:50:16Z", "type": "commit"}, {"oid": "9e8a350bfffaf5ba12e03fa4f3f71feda0115eb2", "url": "https://github.com/line/armeria/commit/9e8a350bfffaf5ba12e03fa4f3f71feda0115eb2", "message": "Set dumpOpenSslInfo lazily", "committedDate": "2020-01-24T15:58:23Z", "type": "commit"}, {"oid": "fd432e3177ddddc422ffd5aef9135d7c3649f290", "url": "https://github.com/line/armeria/commit/fd432e3177ddddc422ffd5aef9135d7c3649f290", "message": "Fix", "committedDate": "2020-01-24T16:22:22Z", "type": "commit"}, {"oid": "6b38e2c0311b7aec4f5d264c85b38e2d327205c1", "url": "https://github.com/line/armeria/commit/6b38e2c0311b7aec4f5d264c85b38e2d327205c1", "message": "Use different class loader", "committedDate": "2020-01-28T03:50:45Z", "type": "commit"}, {"oid": "4da5da93ce7a7f1add0eb9cbd87fae303f81e875", "url": "https://github.com/line/armeria/commit/4da5da93ce7a7f1add0eb9cbd87fae303f81e875", "message": "remove_junit-pioneer", "committedDate": "2020-01-28T03:58:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxMzc0OQ==", "url": "https://github.com/line/armeria/pull/2418#discussion_r371613749", "bodyText": "nit: The current workaround is not bad. But how about making useOpenSsl and dumpOpenSslInfo package-private?\nI think We can test Flags.useOpenSsl() after setting useOpenSsl and dumpOpenSslInfo to null.", "author": "ikhoon", "createdAt": "2020-01-28T05:17:24Z", "path": "core/src/test/java/com/linecorp/armeria/common/FlagsTest.java", "diffHunk": "@@ -48,12 +61,69 @@ public void epollAvailableOnLinux() {\n      * on Linux, Windows and OS X.\n      */\n     @Test\n-    public void openSslAvailable() {\n+    void openSslAvailable() {\n         assumeTrue(osName.startsWith(\"linux\") || osName.startsWith(\"windows\") ||\n                    osName.startsWith(\"macosx\") || osName.startsWith(\"osx\"));\n         assumeFalse(\"false\".equals(System.getProperty(\"com.linecorp.armeria.useOpenSsl\")));\n \n         assertThat(Flags.useOpenSsl()).isTrue();\n         assertThat(OpenSsl.isAvailable()).isTrue();\n     }\n+\n+    @Test\n+    void dumpOpenSslInfoDoNotThrowStackOverFlowError() throws Throwable {\n+        assumeTrue(OpenSsl.isAvailable());\n+        System.setProperty(\"com.linecorp.armeria.dumpOpenSslInfo\", \"true\");\n+\n+        // There's a chance that Flags.useOpenSsl() is already called by other test cases, which means that\n+        // we cannot set dumpOpenSslInfo. So we use our own class loader to load the Flags class.", "originalCommit": "4da5da93ce7a7f1add0eb9cbd87fae303f81e875", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxNTI2MQ==", "url": "https://github.com/line/armeria/pull/2418#discussion_r371615261", "bodyText": "I think We can test Flags.useOpenSsl() after setting useOpenSsl and dumpOpenSslInfo to null.\n\nYes, we can do that way as well. But I'm not sure if it's a good way. \ud83e\udd14\n\nThe current workaround is not bad.\n\nSo you think setting null to the field and calling the method again is better?", "author": "minwoox", "createdAt": "2020-01-28T05:26:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxMzc0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxNjgyMQ==", "url": "https://github.com/line/armeria/pull/2418#discussion_r371616821", "bodyText": "I guess the two options have both pros and cons. I'm fine with the class loader version. \ud83d\ude00", "author": "ikhoon", "createdAt": "2020-01-28T05:34:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxMzc0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE5NDAyNw==", "url": "https://github.com/line/armeria/pull/2418#discussion_r372194027", "bodyText": "AssertJ also has assumeThat.", "author": "trustin", "createdAt": "2020-01-29T05:23:56Z", "path": "core/src/test/java/com/linecorp/armeria/common/FlagsTest.java", "diffHunk": "@@ -16,25 +16,38 @@\n package com.linecorp.armeria.common;\n \n import static org.assertj.core.api.Assertions.assertThat;\n-import static org.junit.Assume.assumeFalse;\n-import static org.junit.Assume.assumeTrue;\n+import static org.junit.jupiter.api.Assumptions.assumeFalse;\n+import static org.junit.jupiter.api.Assumptions.assumeTrue;", "originalCommit": "4da5da93ce7a7f1add0eb9cbd87fae303f81e875", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI1NTQ3Mg==", "url": "https://github.com/line/armeria/pull/2418#discussion_r372255472", "bodyText": "Fixed. \ud83d\ude09", "author": "minwoox", "createdAt": "2020-01-29T08:53:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE5NDAyNw=="}], "type": "inlineReview"}, {"oid": "cd6b4993557dbcd026a446a578e433fa4eeb2113", "url": "https://github.com/line/armeria/commit/cd6b4993557dbcd026a446a578e433fa4eeb2113", "message": "Use assumeThat", "committedDate": "2020-01-29T08:53:21Z", "type": "commit"}]}