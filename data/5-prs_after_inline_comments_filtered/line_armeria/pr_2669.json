{"pr_number": 2669, "pr_title": "Support Kotlin-gRPC client CoroutineStub", "pr_createdAt": "2020-04-16T07:37:26Z", "pr_url": "https://github.com/line/armeria/pull/2669", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM1NTIzNQ==", "url": "https://github.com/line/armeria/pull/2669#discussion_r409355235", "bodyText": "Not necessarily related to this PR but how about renaming stubClass to enclosingClass? Stub class is clientType actually.", "author": "trustin", "createdAt": "2020-04-16T07:56:12Z", "path": "grpc/src/main/java/com/linecorp/armeria/internal/client/grpc/GrpcClientFactory.java", "diffHunk": "@@ -91,6 +94,13 @@ public Object newClient(ClientBuilderParams params) {\n \n         final HttpClient httpClient = newHttpClient(params);\n         final Method stubFactoryMethod = findStubFactoryMethod(clientType, stubClass);", "originalCommit": "e4fd5331c8258bbda348fddbcf0fab03e01f3f95", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM1Njg2NA==", "url": "https://github.com/line/armeria/pull/2669#discussion_r409356864", "bodyText": "Yeah, sounds good!", "author": "ikhoon", "createdAt": "2020-04-16T07:58:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM1NTIzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTk0MjM3Mw==", "url": "https://github.com/line/armeria/pull/2669#discussion_r409942373", "bodyText": "Let's move these down.", "author": "minwoox", "createdAt": "2020-04-17T01:34:50Z", "path": "grpc/src/main/java/com/linecorp/armeria/internal/client/grpc/GrpcClientFactory.java", "diffHunk": "@@ -84,18 +87,25 @@ public Object newClient(ClientBuilderParams params) {\n         final ClientOptions options = params.options();\n \n         final SerializationFormat serializationFormat = scheme.serializationFormat();\n-        final Class<?> stubClass = clientType.getEnclosingClass();\n-        if (stubClass == null) {\n+        final Class<?> enclosingClass = clientType.getEnclosingClass();\n+        if (enclosingClass == null) {\n             throw newUnknownClientTypeException(clientType);\n         }\n \n         final HttpClient httpClient = newHttpClient(params);\n-        final Method stubFactoryMethod = findStubFactoryMethod(clientType, stubClass);\n+        final Method stubFactoryMethod = findStubFactoryMethod(clientType, enclosingClass);\n+        Constructor<?> stubConstructor = null;\n+        if (stubFactoryMethod == null) {\n+            stubConstructor = findStubConstructor(clientType);\n+            if (stubConstructor == null) {\n+                throw newUnknownClientTypeException(clientType);\n+            }\n+        }", "originalCommit": "eafaa69721d22606c78c830b967a1fdad9de2650", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTk0MjYzMA==", "url": "https://github.com/line/armeria/pull/2669#discussion_r409942630", "bodyText": "final Method stubFactoryMethod = findStubFactoryMethod(clientType, enclosingClass);\ntry {\n    // Verified stubFactoryMethod.getReturnType() == clientType in findStubFactoryMethod().\n    if (stubFactoryMethod != null) {\n        return stubFactoryMethod.invoke(null, channel);\n    } else {\n        final Constructor<?> stubConstructor = findStubConstructor(clientType);\n        if (stubConstructor == null) {\n            throw newUnknownClientTypeException(clientType);\n        }\n        return stubConstructor.newInstance(channel);\n    }\n} catch (IllegalAccessException | InvocationTargetException | InstantiationException e) {\n    throw new IllegalStateException(\"Could not create a gRPC stub through reflection.\", e);\n}", "author": "minwoox", "createdAt": "2020-04-17T01:35:44Z", "path": "grpc/src/main/java/com/linecorp/armeria/internal/client/grpc/GrpcClientFactory.java", "diffHunk": "@@ -108,15 +118,20 @@ public Object newClient(ClientBuilderParams params) {\n \n         try {\n             // Verified stubFactoryMethod.getReturnType() == clientType in findStubFactoryMethod().\n-            return stubFactoryMethod.invoke(null, channel);\n-        } catch (IllegalAccessException | InvocationTargetException e) {\n+            if (stubFactoryMethod != null) {\n+                return stubFactoryMethod.invoke(null, channel);\n+            } else {\n+                return stubConstructor.newInstance(channel);\n+            }\n+        } catch (IllegalAccessException | InvocationTargetException | InstantiationException e) {\n             throw new IllegalStateException(\"Could not create a gRPC stub through reflection.\", e);\n         }", "originalCommit": "eafaa69721d22606c78c830b967a1fdad9de2650", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTMwNjU2NA==", "url": "https://github.com/line/armeria/pull/2669#discussion_r411306564", "bodyText": "This doesn't seem right, why would HttpResponse.whenComplete have been called if there are still messages with the trailers left?", "author": "anuraaga", "createdAt": "2020-04-20T11:36:17Z", "path": "grpc-protocol/src/main/java/com/linecorp/armeria/common/grpc/protocol/ArmeriaMessageDeframer.java", "diffHunk": "@@ -263,12 +263,24 @@ public boolean isStalled() {\n      * @param endOfStream if {@code true}, indicates that {@code data} is the end of the stream from\n      *        the remote endpoint.  End of stream should not be used in the event of a transport\n      *        error, such as a stream reset.\n-     * @throws IllegalStateException if {@link #close()} has been called previously or if\n+     * @throws IllegalStateException if the specified {@code endOfStream} is {@code false} and\n      *         this method has previously been called with {@code endOfStream=true}.\n      */\n     public void deframe(HttpData data, boolean endOfStream) {\n         requireNonNull(data, \"data\");\n         checkNotClosed();\n+\n+        // 'deframe()' could be called twice with endOfStream due to a race condition like the following:\n+        //\n+        // 1) HttpStreamReader.apply(), which invokes closeDeframer(), is called when\n+        //    HttpResponse.whenComplete().\n+        // 2) While ArmeriaClientCall requests next messages, GrpcStatus.reportStatus() is invoked if the next", "originalCommit": "0311513dccebf8f8bd283c8fc0dc26d2e6549e8a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTgyMzY3MA==", "url": "https://github.com/line/armeria/pull/2669#discussion_r411823670", "bodyText": "Yes, I agreed. Let me investigate this more and try to fix the root cause.", "author": "ikhoon", "createdAt": "2020-04-21T02:32:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTMwNjU2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzkwMDMwNg==", "url": "https://github.com/line/armeria/pull/2669#discussion_r413900306", "bodyText": "I've investigated more and found the exact cause.\n\nHttpStreamReader received all data from publisher and add them to unprocessed of deframer.\ngRPC client does not request next messages yet, so deframer still has unprocessedBytes and is not stalled.\nHttpStreamReader receives onCompleted signal and closes deframer\ngRPC client requests the next message, but it contains trailers so ArmeriaClientCall tries to close deframer.", "author": "ikhoon", "createdAt": "2020-04-23T15:33:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTMwNjU2NA=="}], "type": "inlineReview"}, {"oid": "9c5e797749c620b42a4b1249f227d05e6224770a", "url": "https://github.com/line/armeria/commit/9c5e797749c620b42a4b1249f227d05e6224770a", "message": "Address comments by @anuraaga\n\nLet deframer close when complete when\n- HttpStreamReader received all data from publisher\n- deframer has unprocessedBytes and is not stalled", "committedDate": "2020-04-23T15:24:31Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI2MTgwNQ==", "url": "https://github.com/line/armeria/pull/2669#discussion_r414261805", "bodyText": "Ah I see - instead of this how about adding a isClosing method that checks closeWhenComplete and check it inside closeDeframer instead of doing this check. There shouldn't be any need to call closeWhenComplete twice.", "author": "anuraaga", "createdAt": "2020-04-24T03:17:28Z", "path": "grpc/src/main/java/com/linecorp/armeria/internal/common/grpc/HttpStreamReader.java", "diffHunk": "@@ -181,7 +181,15 @@ public Void apply(@Nullable Void unused, @Nullable Throwable cause) {\n         }\n \n         if (cause == null) {\n-            closeDeframer();\n+            if (!deframer.isStalled()) {", "originalCommit": "9c5e797749c620b42a4b1249f227d05e6224770a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI2MTkwNA==", "url": "https://github.com/line/armeria/pull/2669#discussion_r414261904", "bodyText": "And probably a good idea to move this bug fix to a separate PR.", "author": "anuraaga", "createdAt": "2020-04-24T03:17:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI2MTgwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI3MTY0MQ==", "url": "https://github.com/line/armeria/pull/2669#discussion_r414271641", "bodyText": "And probably a good idea to move this bug fix to a separate PR.\n\nYes, I'm preparing a PR to resolve this issue. But some tests failed, my change seems to cause side effects.\nLet me elaborate on it after more investigating. \ud83e\udd14", "author": "ikhoon", "createdAt": "2020-04-24T03:49:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI2MTgwNQ=="}], "type": "inlineReview"}, {"oid": "a704ef8d8db676c0f6cc22cc73585632f96c25ac", "url": "https://github.com/line/armeria/commit/a704ef8d8db676c0f6cc22cc73585632f96c25ac", "message": "Support Kotlin-gRPC client CoroutineStub\n\nMotivation:\n\ngRPC for Kotlin is actively developed and\n[0.1.1](https://github.com/grpc/grpc-kotlin/releases/tag/v0.1.1) has been released last week.\n\nModifications:\n\n- Allow GrpcClientFactory creating client from CoroutineStub\n- Migrate Kotlin example to gRPC-Kotlin\n\nResult:\n\n- (Partially) Fixes #2662\n- You can now run Armeria gRPC client with `gproto` protocol and gRPC-Kotline CoroutinStub", "committedDate": "2020-04-24T05:43:19Z", "type": "forcePushed"}, {"oid": "2d0a33c0fe5e0f0c7daf3bd4739d04ca7b6ab457", "url": "https://github.com/line/armeria/commit/2d0a33c0fe5e0f0c7daf3bd4739d04ca7b6ab457", "message": "Support Kotlin-gRPC client CoroutineStub\n\nMotivation:\n\ngRPC for Kotlin is actively developed and\n[0.1.1](https://github.com/grpc/grpc-kotlin/releases/tag/v0.1.1) has been released last week.\n\nModifications:\n\n- Allow GrpcClientFactory creating client from CoroutineStub\n- Migrate Kotlin example to gRPC-Kotlin\n\nResult:\n\n- (Partially) Fixes #2662\n- You can now run Armeria gRPC client with `gproto` protocol and gRPC-Kotline CoroutinStub\n\nCo-authored-by: Gary Lo <gary.lo@airtasker.com>", "committedDate": "2020-04-24T05:47:34Z", "type": "commit"}, {"oid": "2d0a33c0fe5e0f0c7daf3bd4739d04ca7b6ab457", "url": "https://github.com/line/armeria/commit/2d0a33c0fe5e0f0c7daf3bd4739d04ca7b6ab457", "message": "Support Kotlin-gRPC client CoroutineStub\n\nMotivation:\n\ngRPC for Kotlin is actively developed and\n[0.1.1](https://github.com/grpc/grpc-kotlin/releases/tag/v0.1.1) has been released last week.\n\nModifications:\n\n- Allow GrpcClientFactory creating client from CoroutineStub\n- Migrate Kotlin example to gRPC-Kotlin\n\nResult:\n\n- (Partially) Fixes #2662\n- You can now run Armeria gRPC client with `gproto` protocol and gRPC-Kotline CoroutinStub\n\nCo-authored-by: Gary Lo <gary.lo@airtasker.com>", "committedDate": "2020-04-24T05:47:34Z", "type": "forcePushed"}, {"oid": "f9ad40ff8d7e2e67860be14a71044c7f8c88d72c", "url": "https://github.com/line/armeria/commit/f9ad40ff8d7e2e67860be14a71044c7f8c88d72c", "message": "Revert gjson to gproto", "committedDate": "2020-04-24T05:50:42Z", "type": "commit"}, {"oid": "4c6927fa3bbea84648522d65cd88f0e50c658eeb", "url": "https://github.com/line/armeria/commit/4c6927fa3bbea84648522d65cd88f0e50c658eeb", "message": "Fix wrong dependencies", "committedDate": "2020-04-24T06:01:59Z", "type": "commit"}, {"oid": "20bc5bfff26a2853de9c82ebd3a2583f96a3adec", "url": "https://github.com/line/armeria/commit/20bc5bfff26a2853de9c82ebd3a2583f96a3adec", "message": "Kotlin lint", "committedDate": "2020-04-24T09:58:08Z", "type": "commit"}, {"oid": "f1a8787c8cb2061a0bf120cdc426bbfa0f8186b3", "url": "https://github.com/line/armeria/commit/f1a8787c8cb2061a0bf120cdc426bbfa0f8186b3", "message": "Check in gRPC-Kotlin stub and exclude it from delete task", "committedDate": "2020-04-27T04:29:35Z", "type": "commit"}, {"oid": "7f3dfdb97a4b995a619f9f5454178f6ebe70f565", "url": "https://github.com/line/armeria/commit/7f3dfdb97a4b995a619f9f5454178f6ebe70f565", "message": "Remove kotlin-grpc flag", "committedDate": "2020-04-27T04:36:05Z", "type": "commit"}, {"oid": "7f3dfdb97a4b995a619f9f5454178f6ebe70f565", "url": "https://github.com/line/armeria/commit/7f3dfdb97a4b995a619f9f5454178f6ebe70f565", "message": "Remove kotlin-grpc flag", "committedDate": "2020-04-27T04:36:05Z", "type": "forcePushed"}, {"oid": "e147c3a2ae951b27da20067b414f11b41f6eb170", "url": "https://github.com/line/armeria/commit/e147c3a2ae951b27da20067b414f11b41f6eb170", "message": "Fix compile error / Add 'kotlinGrpc' path as source set", "committedDate": "2020-04-27T06:12:32Z", "type": "commit"}, {"oid": "47bc5ea18d6783b83a69cb59abce69b46cffa6de", "url": "https://github.com/line/armeria/commit/47bc5ea18d6783b83a69cb59abce69b46cffa6de", "message": "Exclude generated source from ktlint", "committedDate": "2020-04-27T08:35:50Z", "type": "commit"}, {"oid": "2f7633a5845c4836e51f34c0d6c8688ae4adafb1", "url": "https://github.com/line/armeria/commit/2f7633a5845c4836e51f34c0d6c8688ae4adafb1", "message": "Address comments by @anuraaga / decorate rpc method with armeria context", "committedDate": "2020-04-29T11:36:25Z", "type": "commit"}, {"oid": "c0a578cd7815c0c9578809c889f4d41d5fe75d49", "url": "https://github.com/line/armeria/commit/c0a578cd7815c0c9578809c889f4d41d5fe75d49", "message": "Add missed one", "committedDate": "2020-04-29T11:40:46Z", "type": "commit"}]}