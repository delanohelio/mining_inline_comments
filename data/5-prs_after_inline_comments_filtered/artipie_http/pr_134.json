{"pr_number": 134, "pr_title": "#132 Slice with headers", "pr_createdAt": "2020-04-22T06:38:26Z", "pr_url": "https://github.com/artipie/http/pull/134", "timeline": [{"oid": "10d62420958a425eaea769d775e2dd2c353ad252", "url": "https://github.com/artipie/http/commit/10d62420958a425eaea769d775e2dd2c353ad252", "message": "#132 Slice with headers", "committedDate": "2020-04-22T06:36:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjg0MjcxMw==", "url": "https://github.com/artipie/http/pull/134#discussion_r412842713", "bodyText": "@olenagerasimova you can use Header class from #133", "author": "g4s8", "createdAt": "2020-04-22T09:56:45Z", "path": "src/test/java/com/artipie/http/slice/SliceWithHeadersTest.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * MIT License\n+ *\n+ * Copyright (c) 2020 Artipie\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in all\n+ * copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.http.slice;\n+\n+import com.artipie.http.Headers;\n+import com.artipie.http.hm.RsHasHeaders;\n+import com.artipie.http.rs.StandardRs;\n+import io.reactivex.Flowable;\n+import org.cactoos.map.MapEntry;\n+import org.hamcrest.MatcherAssert;\n+import org.junit.jupiter.api.Test;\n+\n+/**\n+ * Test for {@link SliceWithHeaders}.\n+ * @since 0.9\n+ */\n+class SliceWithHeadersTest {\n+\n+    @Test\n+    void addsHeaders() {\n+        final String header = \"Content-type\";\n+        final String value = \"text/plain\";\n+        MatcherAssert.assertThat(\n+            new SliceWithHeaders(\n+                new SliceSimple(StandardRs.EMPTY), new Headers.From(header, value)\n+            ).response(\"GET /some/text HTTP/1.1\", Headers.EMPTY, Flowable.empty()),\n+            new RsHasHeaders(new MapEntry<>(header, value))", "originalCommit": "10d62420958a425eaea769d775e2dd2c353ad252", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjg0Mzc0MQ==", "url": "https://github.com/artipie/http/pull/134#discussion_r412843741", "bodyText": "@olenagerasimova I think we need to test that this slice doesn't override origin response headers", "author": "g4s8", "createdAt": "2020-04-22T09:58:15Z", "path": "src/test/java/com/artipie/http/slice/SliceWithHeadersTest.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * MIT License\n+ *\n+ * Copyright (c) 2020 Artipie\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in all\n+ * copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.http.slice;\n+\n+import com.artipie.http.Headers;\n+import com.artipie.http.hm.RsHasHeaders;\n+import com.artipie.http.rs.StandardRs;\n+import io.reactivex.Flowable;\n+import org.cactoos.map.MapEntry;\n+import org.hamcrest.MatcherAssert;\n+import org.junit.jupiter.api.Test;\n+\n+/**\n+ * Test for {@link SliceWithHeaders}.\n+ * @since 0.9\n+ */\n+class SliceWithHeadersTest {", "originalCommit": "10d62420958a425eaea769d775e2dd2c353ad252", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "44457bafaffa0f04dc2b25279ef05115c3cdf197", "url": "https://github.com/artipie/http/commit/44457bafaffa0f04dc2b25279ef05115c3cdf197", "message": "Merge branch 'master' of https://github.com/artipie/http into 132", "committedDate": "2020-04-22T12:51:35Z", "type": "commit"}, {"oid": "10522fea7158bb74c24114c6ab8e31103a3d9711", "url": "https://github.com/artipie/http/commit/10522fea7158bb74c24114c6ab8e31103a3d9711", "message": "#132 CR", "committedDate": "2020-04-22T12:55:20Z", "type": "commit"}]}