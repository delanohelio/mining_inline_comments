{"pr_number": 168, "pr_title": "#167 - Created wrap for Headers", "pr_createdAt": "2020-06-01T05:40:14Z", "pr_url": "https://github.com/artipie/http/pull/168", "timeline": [{"oid": "71de5dc542c5a4e65a022676dbb8424c24be9df2", "url": "https://github.com/artipie/http/commit/71de5dc542c5a4e65a022676dbb8424c24be9df2", "message": "#167 - Created wrap for Headers", "committedDate": "2020-06-01T05:39:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI5NTQ1Nw==", "url": "https://github.com/artipie/http/pull/168#discussion_r433295457", "bodyText": "@olenagerasimova please change all overridden methods to be final", "author": "olegmoz", "createdAt": "2020-06-01T15:14:47Z", "path": "src/main/java/com/artipie/http/Headers.java", "diffHunk": "@@ -100,4 +100,47 @@ public void forEach(final Consumer<? super Map.Entry<String, String>> action) {\n             return this.origin.spliterator();\n         }\n     }\n+\n+    /**\n+     * Abstract decorator for {@link Headers}.\n+     * @since 0.10\n+     */\n+    abstract class Wrap implements Headers {\n+\n+        /**\n+         * Origin headers.\n+         */\n+        private final Iterable<Map.Entry<String, String>> origin;\n+\n+        /**\n+         * Ctor.\n+         * @param origin Origin headers\n+         */\n+        protected Wrap(final Iterable<Map.Entry<String, String>> origin) {\n+            this.origin = origin;\n+        }\n+\n+        /**\n+         * Ctor.\n+         * @param origin Origin headers\n+         */\n+        protected Wrap(final Header... origin) {\n+            this(Arrays.asList(origin));\n+        }\n+\n+        @Override\n+        public Iterator<Map.Entry<String, String>> iterator() {\n+            return this.origin.iterator();\n+        }\n+\n+        @Override\n+        public void forEach(final Consumer<? super Map.Entry<String, String>> action) {\n+            this.origin.forEach(action);\n+        }\n+\n+        @Override\n+        public Spliterator<Map.Entry<String, String>> spliterator() {\n+            return this.origin.spliterator();\n+        }", "originalCommit": "71de5dc542c5a4e65a022676dbb8424c24be9df2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "65a86cf35bf4d1f9fc63636001db5d70961702b5", "url": "https://github.com/artipie/http/commit/65a86cf35bf4d1f9fc63636001db5d70961702b5", "message": "#167 - CR", "committedDate": "2020-06-01T17:07:43Z", "type": "commit"}, {"oid": "949076d79e306bcc086d786d1357cb2d126e4b19", "url": "https://github.com/artipie/http/commit/949076d79e306bcc086d786d1357cb2d126e4b19", "message": "Merge branch 'master' of https://github.com/artipie/http into 167-headers-wrap", "committedDate": "2020-06-01T17:08:33Z", "type": "commit"}, {"oid": "fe3e92b6ca6b58cfeb7436ffb3286d8335d3bd9b", "url": "https://github.com/artipie/http/commit/fe3e92b6ca6b58cfeb7436ffb3286d8335d3bd9b", "message": "Merge branch 'master' into 167-headers-wrap", "committedDate": "2020-06-03T08:59:49Z", "type": "commit"}, {"oid": "e4df218fd7dda927b0fdd2e2b70cdc7aa1be465d", "url": "https://github.com/artipie/http/commit/e4df218fd7dda927b0fdd2e2b70cdc7aa1be465d", "message": "#167 - metrics corrected", "committedDate": "2020-06-04T05:09:22Z", "type": "commit"}]}