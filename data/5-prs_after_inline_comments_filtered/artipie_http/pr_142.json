{"pr_number": 142, "pr_title": "#141 - Added Header.Wrap", "pr_createdAt": "2020-05-06T10:03:54Z", "pr_url": "https://github.com/artipie/http/pull/142", "timeline": [{"oid": "1a48e443a73ba63097955158307ffcb0f80f4775", "url": "https://github.com/artipie/http/commit/1a48e443a73ba63097955158307ffcb0f80f4775", "message": "#141 - Added Header.Wrap", "committedDate": "2020-05-06T10:04:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDczODU0Ng==", "url": "https://github.com/artipie/http/pull/142#discussion_r420738546", "bodyText": "@olegmoz let's throw exception here to make this class immutable", "author": "Vatavuk", "createdAt": "2020-05-06T12:06:42Z", "path": "src/main/java/com/artipie/http/rs/Header.java", "diffHunk": "@@ -112,4 +112,56 @@ public String toString() {\n     private String lowercaseName() {\n         return this.name.toLowerCase(Locale.US);\n     }\n+\n+    /**\n+     * Abstract decorator for Header.\n+     *\n+     * @since 0.9\n+     */\n+    abstract static class Wrap implements Map.Entry<String, String> {\n+\n+        /**\n+         * Origin header.\n+         */\n+        private final Map.Entry<String, String> header;\n+\n+        /**\n+         * Ctor.\n+         *\n+         * @param header Header.\n+         */\n+        protected Wrap(final Map.Entry<String, String> header) {\n+            this.header = header;\n+        }\n+\n+        @Override\n+        public String getKey() {\n+            return this.header.getKey();\n+        }\n+\n+        @Override\n+        public String getValue() {\n+            return this.header.getValue();\n+        }\n+\n+        @Override\n+        public String setValue(final String value) {\n+            return this.header.setValue(value);", "originalCommit": "1a48e443a73ba63097955158307ffcb0f80f4775", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc3MTUzNw==", "url": "https://github.com/artipie/http/pull/142#discussion_r420771537", "bodyText": "@Vatavuk I think that immutability should depend on header and this wrapper does not have to enforce it", "author": "olegmoz", "createdAt": "2020-05-06T13:01:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDczODU0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc4Nzk5Mg==", "url": "https://github.com/artipie/http/pull/142#discussion_r420787992", "bodyText": "@olegmoz ok", "author": "Vatavuk", "createdAt": "2020-05-06T13:26:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDczODU0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDczODY2MA==", "url": "https://github.com/artipie/http/pull/142#discussion_r420738660", "bodyText": "@olegmoz all methods should be final", "author": "Vatavuk", "createdAt": "2020-05-06T12:06:54Z", "path": "src/main/java/com/artipie/http/rs/Header.java", "diffHunk": "@@ -112,4 +112,56 @@ public String toString() {\n     private String lowercaseName() {\n         return this.name.toLowerCase(Locale.US);\n     }\n+\n+    /**\n+     * Abstract decorator for Header.\n+     *\n+     * @since 0.9\n+     */\n+    abstract static class Wrap implements Map.Entry<String, String> {\n+\n+        /**\n+         * Origin header.\n+         */\n+        private final Map.Entry<String, String> header;\n+\n+        /**\n+         * Ctor.\n+         *\n+         * @param header Header.\n+         */\n+        protected Wrap(final Map.Entry<String, String> header) {\n+            this.header = header;\n+        }\n+\n+        @Override\n+        public String getKey() {", "originalCommit": "1a48e443a73ba63097955158307ffcb0f80f4775", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc3MTYzNQ==", "url": "https://github.com/artipie/http/pull/142#discussion_r420771635", "bodyText": "@Vatavuk fixed, thanks", "author": "olegmoz", "createdAt": "2020-05-06T13:02:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDczODY2MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDczOTg4Mg==", "url": "https://github.com/artipie/http/pull/142#discussion_r420739882", "bodyText": "@olegmoz why have you remove this check? If we compare this class with non-header object we will get class cast exception", "author": "Vatavuk", "createdAt": "2020-05-06T12:09:11Z", "path": "src/main/java/com/artipie/http/rs/Header.java", "diffHunk": "@@ -86,7 +86,7 @@ public boolean equals(final Object that) {\n         if (this == that) {\n             return true;\n         }\n-        if (that == null || getClass() != that.getClass()) {", "originalCommit": "1a48e443a73ba63097955158307ffcb0f80f4775", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc3MjA0OA==", "url": "https://github.com/artipie/http/pull/142#discussion_r420772048", "bodyText": "@Vatavuk thanks for pointing this out, fixed it and made proper equals in Wrap too", "author": "olegmoz", "createdAt": "2020-05-06T13:02:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDczOTg4Mg=="}], "type": "inlineReview"}, {"oid": "0f977e5e92467ddcb4b90faa6705632bd5ca4af7", "url": "https://github.com/artipie/http/commit/0f977e5e92467ddcb4b90faa6705632bd5ca4af7", "message": "#141 - Changes by review", "committedDate": "2020-05-06T13:02:57Z", "type": "commit"}]}