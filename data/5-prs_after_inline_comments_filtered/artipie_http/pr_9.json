{"pr_number": 9, "pr_title": "Request body with test", "pr_createdAt": "2020-02-04T08:43:55Z", "pr_url": "https://github.com/artipie/http/pull/9", "timeline": [{"oid": "1571d7e5b4e61404b4ba40790093e022e693fffa", "url": "https://github.com/artipie/http/commit/1571d7e5b4e61404b4ba40790093e022e693fffa", "message": "#7 - stream publisher", "committedDate": "2020-02-03T16:33:38Z", "type": "commit"}, {"oid": "ada3b10d43ec1e9c854f9e4a0339f3f8b60272c9", "url": "https://github.com/artipie/http/commit/ada3b10d43ec1e9c854f9e4a0339f3f8b60272c9", "message": "#7 - request body", "committedDate": "2020-02-04T08:39:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU1MDc4Nw==", "url": "https://github.com/artipie/http/pull/9#discussion_r374550787", "bodyText": "@g4s8 I guess this is the max buffersize. Should we name it as such?", "author": "amihaiemil", "createdAt": "2020-02-04T09:14:00Z", "path": "src/main/java/com/artipie/http/tk/TkRequest.java", "diffHunk": "@@ -86,6 +86,11 @@ public String line() throws IOException {\n      */\n     private static final class BodySubstription implements Subscription {\n \n+        /**\n+         * Buffer size for stream reading.\n+         */\n+        private static final int BUF_SIZE = 1024 * 8;", "originalCommit": "ada3b10d43ec1e9c854f9e4a0339f3f8b60272c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDYwODUyNw==", "url": "https://github.com/artipie/http/pull/9#discussion_r374608527", "bodyText": "@amihaiemil I don't think so - this is just a buffer size. The buffer is allocated with this size and used to read bytes from stream into this buffer. The buffer's size is always 8K.", "author": "g4s8", "createdAt": "2020-02-04T11:08:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU1MDc4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU1MTE5NA==", "url": "https://github.com/artipie/http/pull/9#discussion_r374551194", "bodyText": "@g4s8 Can we have a test for this method as well? For instance, what happens if cancel() is called twice, or if request(bytes) is called after cancel()?", "author": "amihaiemil", "createdAt": "2020-02-04T09:14:56Z", "path": "src/main/java/com/artipie/http/tk/TkRequest.java", "diffHunk": "@@ -108,16 +113,52 @@ public String line() throws IOException {\n \n         @Override\n         public void request(final long bytes) {\n-            throw new UnsupportedOperationException(\n-                String.format(\"request not implemented: %s/%s\", this.stream, this.receiver)\n-            );\n+            try {\n+                this.read(bytes);\n+            } catch (final IOException | IllegalArgumentException err) {\n+                this.receiver.onError(err);\n+            }\n         }\n \n         @Override\n         public void cancel() {\n-            throw new UnsupportedOperationException(\n-                String.format(\"cancel not implemented: %s/%s\", this.stream, this.receiver)\n-            );\n+            try {\n+                this.stream.close();\n+            } catch (final IOException err) {\n+                this.receiver.onError(err);\n+            }\n+        }", "originalCommit": "ada3b10d43ec1e9c854f9e4a0339f3f8b60272c9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU1MTQ5Mg==", "url": "https://github.com/artipie/http/pull/9#discussion_r374551492", "bodyText": "@g4s8 I would put this if in the request() method, right before calling this method.", "author": "amihaiemil", "createdAt": "2020-02-04T09:15:36Z", "path": "src/main/java/com/artipie/http/tk/TkRequest.java", "diffHunk": "@@ -108,16 +113,52 @@ public String line() throws IOException {\n \n         @Override\n         public void request(final long bytes) {\n-            throw new UnsupportedOperationException(\n-                String.format(\"request not implemented: %s/%s\", this.stream, this.receiver)\n-            );\n+            try {\n+                this.read(bytes);\n+            } catch (final IOException | IllegalArgumentException err) {\n+                this.receiver.onError(err);\n+            }\n         }\n \n         @Override\n         public void cancel() {\n-            throw new UnsupportedOperationException(\n-                String.format(\"cancel not implemented: %s/%s\", this.stream, this.receiver)\n-            );\n+            try {\n+                this.stream.close();\n+            } catch (final IOException err) {\n+                this.receiver.onError(err);\n+            }\n+        }\n+\n+        /**\n+         * Read bytes from stream into receiver.\n+         * @param bytes Amount of bytes to read\n+         * @throws IOException On stream error\n+         */\n+        private void read(final long bytes) throws IOException {\n+            if (bytes <= 0) {\n+                throw new IllegalArgumentException(String.format(\"can't request %d bytes\", bytes));\n+            }", "originalCommit": "ada3b10d43ec1e9c854f9e4a0339f3f8b60272c9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU1MjUzMg==", "url": "https://github.com/artipie/http/pull/9#discussion_r374552532", "bodyText": "@g4s8 Is it possible to write this test by using a String, or some chars? Something more meaningful than actual hardcoded bytes :D", "author": "amihaiemil", "createdAt": "2020-02-04T09:17:51Z", "path": "src/test/java/com/artipie/http/tk/TkRequestTest.java", "diffHunk": "@@ -77,4 +80,30 @@ void readsEmptyHeaders() throws Exception {\n             Matchers.anEmptyMap()\n         );\n     }\n+\n+    @Test\n+    void readsBody() throws Exception {\n+        final byte[] body = new byte[]{0x00, 0x01, 0x02, 0x03};", "originalCommit": "ada3b10d43ec1e9c854f9e4a0339f3f8b60272c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDYxNDQ4NQ==", "url": "https://github.com/artipie/http/pull/9#discussion_r374614485", "bodyText": "@amihaiemil I don't think it's correct to use string for bytes testing", "author": "g4s8", "createdAt": "2020-02-04T11:22:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU1MjUzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDYxNjIwNw==", "url": "https://github.com/artipie/http/pull/9#discussion_r374616207", "bodyText": "@g4s8 I was thinking of String.getBytes() rather than declaring a raw byte array :)", "author": "amihaiemil", "createdAt": "2020-02-04T11:26:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU1MjUzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDYyMjMzMQ==", "url": "https://github.com/artipie/http/pull/9#discussion_r374622331", "bodyText": "@amihaiemil I still don't understand why we should use string here. I think it may confuse the reader, because if we use array of bytes here, it becomes obvious that this class uses bytes for data transferring. Otherwise, the reader may misunderstand that class assumes some string to be encoded into byte array.", "author": "g4s8", "createdAt": "2020-02-04T11:42:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU1MjUzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU1MzE0Ng==", "url": "https://github.com/artipie/http/pull/9#discussion_r374553146", "bodyText": "@g4s8 onNext what? What does this method do actually? :D", "author": "amihaiemil", "createdAt": "2020-02-04T09:19:09Z", "path": "src/main/java/com/artipie/http/tk/TkRequest.java", "diffHunk": "@@ -108,16 +113,52 @@ public String line() throws IOException {\n \n         @Override\n         public void request(final long bytes) {\n-            throw new UnsupportedOperationException(\n-                String.format(\"request not implemented: %s/%s\", this.stream, this.receiver)\n-            );\n+            try {\n+                this.read(bytes);\n+            } catch (final IOException | IllegalArgumentException err) {\n+                this.receiver.onError(err);\n+            }\n         }\n \n         @Override\n         public void cancel() {\n-            throw new UnsupportedOperationException(\n-                String.format(\"cancel not implemented: %s/%s\", this.stream, this.receiver)\n-            );\n+            try {\n+                this.stream.close();\n+            } catch (final IOException err) {\n+                this.receiver.onError(err);\n+            }\n+        }\n+\n+        /**\n+         * Read bytes from stream into receiver.\n+         * @param bytes Amount of bytes to read\n+         * @throws IOException On stream error\n+         */\n+        private void read(final long bytes) throws IOException {\n+            if (bytes <= 0) {\n+                throw new IllegalArgumentException(String.format(\"can't request %d bytes\", bytes));\n+            }\n+            final byte[] buf = new byte[TkRequest.BodySubstription.BUF_SIZE];\n+            long total = 0;\n+            while (total < bytes) {\n+                final int len;\n+                if (total + TkRequest.BodySubstription.BUF_SIZE <= bytes) {\n+                    len = TkRequest.BodySubstription.BUF_SIZE;\n+                } else {\n+                    len = (int) (bytes - total);\n+                }\n+                final int read = this.stream.read(buf, 0, len);\n+                total += read;\n+                if (read == -1) {\n+                    this.stream.close();\n+                    this.receiver.onComplete();\n+                    break;\n+                } else {\n+                    for (int pos = 0; pos < read; ++pos) {\n+                        this.receiver.onNext(buf[pos]);", "originalCommit": "ada3b10d43ec1e9c854f9e4a0339f3f8b60272c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDYxMDg4OQ==", "url": "https://github.com/artipie/http/pull/9#discussion_r374610889", "bodyText": "@amihaiemil onNext is a part of JDK9 Flow API you can check the javadoc here: https://docs.oracle.com/javase/9/docs/api/java/util/concurrent/Flow.Subscriber.html#onNext-T-", "author": "g4s8", "createdAt": "2020-02-04T11:14:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU1MzE0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU1NDE1NA==", "url": "https://github.com/artipie/http/pull/9#discussion_r374554154", "bodyText": "@g4s8 I think this should be >= instead of <=. So if the maximum buf size is exceeded, then len takes buf_size. But I am not sure :D\nUgly algorithm... Isn't it possible to write this algorithm with class IOUtils from Apache Commons or something?", "author": "amihaiemil", "createdAt": "2020-02-04T09:21:11Z", "path": "src/main/java/com/artipie/http/tk/TkRequest.java", "diffHunk": "@@ -108,16 +113,52 @@ public String line() throws IOException {\n \n         @Override\n         public void request(final long bytes) {\n-            throw new UnsupportedOperationException(\n-                String.format(\"request not implemented: %s/%s\", this.stream, this.receiver)\n-            );\n+            try {\n+                this.read(bytes);\n+            } catch (final IOException | IllegalArgumentException err) {\n+                this.receiver.onError(err);\n+            }\n         }\n \n         @Override\n         public void cancel() {\n-            throw new UnsupportedOperationException(\n-                String.format(\"cancel not implemented: %s/%s\", this.stream, this.receiver)\n-            );\n+            try {\n+                this.stream.close();\n+            } catch (final IOException err) {\n+                this.receiver.onError(err);\n+            }\n+        }\n+\n+        /**\n+         * Read bytes from stream into receiver.\n+         * @param bytes Amount of bytes to read\n+         * @throws IOException On stream error\n+         */\n+        private void read(final long bytes) throws IOException {\n+            if (bytes <= 0) {\n+                throw new IllegalArgumentException(String.format(\"can't request %d bytes\", bytes));\n+            }\n+            final byte[] buf = new byte[TkRequest.BodySubstription.BUF_SIZE];\n+            long total = 0;\n+            while (total < bytes) {\n+                final int len;\n+                if (total + TkRequest.BodySubstription.BUF_SIZE <= bytes) {", "originalCommit": "ada3b10d43ec1e9c854f9e4a0339f3f8b60272c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDYxMzMzNg==", "url": "https://github.com/artipie/http/pull/9#discussion_r374613336", "bodyText": "@amihaiemil yes, it looks ugly, maybe I'll extract it into separate library. I didn't find implementations to convert Flow to Streams. The logic is correct here: if requested amount of bytes to read is greater than already read bytes (total) + buffer size, then we read full buffer, else we need to read only missing chunk of bytes (requested amount - already read).", "author": "g4s8", "createdAt": "2020-02-04T11:19:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU1NDE1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDYxNjU5OQ==", "url": "https://github.com/artipie/http/pull/9#discussion_r374616599", "bodyText": "@g4s8 Can you add this algorithm's description (strep by step) in a JavaDoc over the method? So people can figure it out easier :D", "author": "amihaiemil", "createdAt": "2020-02-04T11:27:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU1NDE1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDYyMDg2NQ==", "url": "https://github.com/artipie/http/pull/9#discussion_r374620865", "bodyText": "@amihaiemil added javadoc", "author": "g4s8", "createdAt": "2020-02-04T11:38:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU1NDE1NA=="}], "type": "inlineReview"}, {"oid": "de96b7ec3e7edd1daf99b6323ec2dd258dc8d82b", "url": "https://github.com/artipie/http/commit/de96b7ec3e7edd1daf99b6323ec2dd258dc8d82b", "message": "#7 - (cr) review fixes", "committedDate": "2020-02-04T11:19:46Z", "type": "commit"}]}