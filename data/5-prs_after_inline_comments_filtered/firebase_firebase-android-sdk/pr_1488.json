{"pr_number": 1488, "pr_title": "Fix FIAM ANR Issue 1430", "pr_createdAt": "2020-04-21T17:41:49Z", "pr_url": "https://github.com/firebase/firebase-android-sdk/pull/1488", "timeline": [{"oid": "c153bf56ad956aa60e2b3321447c3de8edc2dcf4", "url": "https://github.com/firebase/firebase-android-sdk/commit/c153bf56ad956aa60e2b3321447c3de8edc2dcf4", "message": "Formatting installations test", "committedDate": "2020-04-15T14:09:11Z", "type": "commit"}, {"oid": "cf9b67a1a263fa5a2db40d908c5c3043a1d65c4b", "url": "https://github.com/firebase/firebase-android-sdk/commit/cf9b67a1a263fa5a2db40d908c5c3043a1d65c4b", "message": "Possible ANR fix", "committedDate": "2020-04-16T19:34:14Z", "type": "commit"}, {"oid": "462d1588ed2c8082d56e10ab38e6ed93ec63cd54", "url": "https://github.com/firebase/firebase-android-sdk/commit/462d1588ed2c8082d56e10ab38e6ed93ec63cd54", "message": "please work", "committedDate": "2020-04-21T17:40:23Z", "type": "commit"}, {"oid": "3f7a5c8cd20173ae9956563135ae872b67b862e5", "url": "https://github.com/firebase/firebase-android-sdk/commit/3f7a5c8cd20173ae9956563135ae872b67b862e5", "message": "change io blocking work to be rxjava based instead of task based", "committedDate": "2020-04-21T19:01:46Z", "type": "commit"}, {"oid": "918b1fb70d0e05383fffa07ccd3f694d22478ef4", "url": "https://github.com/firebase/firebase-android-sdk/commit/918b1fb70d0e05383fffa07ccd3f694d22478ef4", "message": "remove some comments", "committedDate": "2020-04-21T19:07:01Z", "type": "commit"}, {"oid": "cc0403a657cc94d48f962b31d07e44909b319a07", "url": "https://github.com/firebase/firebase-android-sdk/commit/cc0403a657cc94d48f962b31d07e44909b319a07", "message": "fix test module", "committedDate": "2020-04-21T19:11:32Z", "type": "commit"}, {"oid": "ffeb75736a96e50789618c2402b55e9c6ffcfb5e", "url": "https://github.com/firebase/firebase-android-sdk/commit/ffeb75736a96e50789618c2402b55e9c6ffcfb5e", "message": "format", "committedDate": "2020-04-21T19:13:41Z", "type": "commit"}, {"oid": "b059dc82772f7d3aacad32128e6fa55ad77fa665", "url": "https://github.com/firebase/firebase-android-sdk/commit/b059dc82772f7d3aacad32128e6fa55ad77fa665", "message": "always", "committedDate": "2020-04-21T19:14:19Z", "type": "commit"}, {"oid": "61f891a32dac526f279e6354c8732e6179987b58", "url": "https://github.com/firebase/firebase-android-sdk/commit/61f891a32dac526f279e6354c8732e6179987b58", "message": "try to fix ktx", "committedDate": "2020-04-21T20:11:43Z", "type": "commit"}, {"oid": "fb6c5bae9a48ca723213ec80e78154789bdaab1d", "url": "https://github.com/firebase/firebase-android-sdk/commit/fb6c5bae9a48ca723213ec80e78154789bdaab1d", "message": "format", "committedDate": "2020-04-21T20:28:12Z", "type": "commit"}, {"oid": "bd85fa4b0a7f63b093de8dcf770d3c18ecf0d0fc", "url": "https://github.com/firebase/firebase-android-sdk/commit/bd85fa4b0a7f63b093de8dcf770d3c18ecf0d0fc", "message": "cleanup tests", "committedDate": "2020-04-21T21:22:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUxNzM2OQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1488#discussion_r412517369", "bodyText": "Is there anything happening here other than moving things inline?", "author": "ashwinraghav", "createdAt": "2020-04-21T21:52:55Z", "path": "firebase-inappmessaging/src/main/java/com/google/firebase/inappmessaging/internal/ApiClient.java", "diffHunk": "@@ -143,17 +111,11 @@ private ClientSignals getClientSignals() {\n   }\n \n   private ClientAppInfo getClientAppInfo(InstanceIdResult instanceIdResult) {\n-    ClientAppInfo.Builder builder =", "originalCommit": "bd85fa4b0a7f63b093de8dcf770d3c18ecf0d0fc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUyOTk0NQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1488#discussion_r412529945", "bodyText": "no just removing the checks because now we do them outside of this class", "author": "JasonAHeron", "createdAt": "2020-04-21T22:17:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUxNzM2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUxNzU1MA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1488#discussion_r412517550", "bodyText": "LGTM", "author": "ashwinraghav", "createdAt": "2020-04-21T21:53:10Z", "path": "firebase-inappmessaging/src/main/java/com/google/firebase/inappmessaging/internal/GrpcClient.java", "diffHunk": "@@ -35,6 +36,6 @@\n   }\n \n   public FetchEligibleCampaignsResponse fetchEligibleCampaigns(FetchEligibleCampaignsRequest req) {\n-    return stub.fetchEligibleCampaigns(req);\n+    return stub.withDeadlineAfter(30000, TimeUnit.MILLISECONDS).fetchEligibleCampaigns(req);", "originalCommit": "bd85fa4b0a7f63b093de8dcf770d3c18ecf0d0fc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUyMjQwMA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1488#discussion_r412522400", "bodyText": "consider using filter\nMaybe.fromCallable(getIID::blockingGet)\n.filter(validIID())\n.map(apiClient.getFiams(iid, campaignImpressionList))\n.switchIfEmpty(cacheExpiringResponse())", "author": "ashwinraghav", "createdAt": "2020-04-21T22:02:26Z", "path": "firebase-inappmessaging/src/main/java/com/google/firebase/inappmessaging/internal/InAppMessageStreamManager.java", "diffHunk": "@@ -232,22 +243,37 @@ private boolean shouldIgnoreCache(String event) {\n                       .defaultIfEmpty(CampaignImpressionList.getDefaultInstance())\n                       .onErrorResumeNext(Maybe.just(CampaignImpressionList.getDefaultInstance()));\n \n+              Maybe<InstanceIdResult> getIID = taskToMaybe(firebaseInstanceId.getInstanceId());\n+\n               Function<CampaignImpressionList, Maybe<FetchEligibleCampaignsResponse>> serviceFetch =\n-                  impressions ->\n-                      taskToMaybe(apiClient.getFiams(impressions))\n-                          .doOnSuccess(\n-                              resp ->\n-                                  Logging.logi(\n-                                      String.format(\n-                                          Locale.US,\n-                                          \"Successfully fetched %d messages from backend\",\n-                                          resp.getMessagesList().size())))\n-                          .doOnSuccess(\n-                              resp -> impressionStorageClient.clearImpressions(resp).subscribe())\n-                          .doOnSuccess(analyticsEventsManager::updateContextualTriggers)\n-                          .doOnSuccess(testDeviceHelper::processCampaignFetch)\n-                          .doOnError(e -> Logging.logw(\"Service fetch error: \" + e.getMessage()))\n-                          .onErrorResumeNext(Maybe.empty()); // Absorb service failures\n+                  campaignImpressionList -> {\n+                    if (!dataCollectionHelper.isAutomaticDataCollectionEnabled()) {\n+                      Logging.logi(\n+                          \"Automatic data collection is disabled, not attempting campaign fetch from service.\");\n+                      return Maybe.just(cacheExpiringResponse());\n+                    }\n+\n+                    // blocking get occurs on the IO thread because that's what we observeOn above\n+                    return Maybe.fromCallable(getIID::blockingGet)\n+                        .map(\n+                            iid ->\n+                                validIID(iid)", "originalCommit": "bd85fa4b0a7f63b093de8dcf770d3c18ecf0d0fc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUzMDA2MQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1488#discussion_r412530061", "bodyText": "done", "author": "JasonAHeron", "createdAt": "2020-04-21T22:18:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUyMjQwMA=="}], "type": "inlineReview"}, {"oid": "fe23cb0fe470a45594956c05906a209b99116a8c", "url": "https://github.com/firebase/firebase-android-sdk/commit/fe23cb0fe470a45594956c05906a209b99116a8c", "message": "refactor stream", "committedDate": "2020-04-21T22:17:13Z", "type": "commit"}, {"oid": "d538bab6161d9b96bebfd7bd205581697af23a11", "url": "https://github.com/firebase/firebase-android-sdk/commit/d538bab6161d9b96bebfd7bd205581697af23a11", "message": "derp", "committedDate": "2020-04-21T22:17:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUyODA2OQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1488#discussion_r412528069", "bodyText": "You should be able to just return getIID here, which is already a Maybe", "author": "ashwinraghav", "createdAt": "2020-04-21T22:13:58Z", "path": "firebase-inappmessaging/src/main/java/com/google/firebase/inappmessaging/internal/InAppMessageStreamManager.java", "diffHunk": "@@ -232,22 +243,37 @@ private boolean shouldIgnoreCache(String event) {\n                       .defaultIfEmpty(CampaignImpressionList.getDefaultInstance())\n                       .onErrorResumeNext(Maybe.just(CampaignImpressionList.getDefaultInstance()));\n \n+              Maybe<InstanceIdResult> getIID = taskToMaybe(firebaseInstanceId.getInstanceId());\n+\n               Function<CampaignImpressionList, Maybe<FetchEligibleCampaignsResponse>> serviceFetch =\n-                  impressions ->\n-                      taskToMaybe(apiClient.getFiams(impressions))\n-                          .doOnSuccess(\n-                              resp ->\n-                                  Logging.logi(\n-                                      String.format(\n-                                          Locale.US,\n-                                          \"Successfully fetched %d messages from backend\",\n-                                          resp.getMessagesList().size())))\n-                          .doOnSuccess(\n-                              resp -> impressionStorageClient.clearImpressions(resp).subscribe())\n-                          .doOnSuccess(analyticsEventsManager::updateContextualTriggers)\n-                          .doOnSuccess(testDeviceHelper::processCampaignFetch)\n-                          .doOnError(e -> Logging.logw(\"Service fetch error: \" + e.getMessage()))\n-                          .onErrorResumeNext(Maybe.empty()); // Absorb service failures\n+                  campaignImpressionList -> {\n+                    if (!dataCollectionHelper.isAutomaticDataCollectionEnabled()) {\n+                      Logging.logi(\n+                          \"Automatic data collection is disabled, not attempting campaign fetch from service.\");\n+                      return Maybe.just(cacheExpiringResponse());\n+                    }\n+\n+                    // blocking get occurs on the IO thread because that's what we observeOn above\n+                    return Maybe.fromCallable(getIID::blockingGet)", "originalCommit": "bd85fa4b0a7f63b093de8dcf770d3c18ecf0d0fc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUzMTE5OQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1488#discussion_r412531199", "bodyText": "ah but I need to do blocking get which turns it into a not maybe, if I don't do blocking get here the waiting ends up hitting the main thread below", "author": "JasonAHeron", "createdAt": "2020-04-21T22:20:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUyODA2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUyOTk0MA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1488#discussion_r412529940", "bodyText": "Previously: When IID was failing, you were previously returning an expired response from the API Client.\nI presume this would be cached, and the next time you lookup the cache, you would find that it has expired and make a service call.\nNow: You this maybe would resolve to an error, that on line 274 would print the service failure.\nCan you confirm that this logic is accurate by actually testing IID Fetch failure ?", "author": "ashwinraghav", "createdAt": "2020-04-21T22:17:54Z", "path": "firebase-inappmessaging/src/main/java/com/google/firebase/inappmessaging/internal/InAppMessageStreamManager.java", "diffHunk": "@@ -232,22 +243,37 @@ private boolean shouldIgnoreCache(String event) {\n                       .defaultIfEmpty(CampaignImpressionList.getDefaultInstance())\n                       .onErrorResumeNext(Maybe.just(CampaignImpressionList.getDefaultInstance()));\n \n+              Maybe<InstanceIdResult> getIID = taskToMaybe(firebaseInstanceId.getInstanceId());", "originalCommit": "bd85fa4b0a7f63b093de8dcf770d3c18ecf0d0fc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUzODkxMA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1488#discussion_r412538910", "bodyText": "So right now the behavior is essentially FIAM will fetch infinitely if it encounters an error", "author": "JasonAHeron", "createdAt": "2020-04-21T22:37:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUyOTk0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU0ODQxMQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1488#discussion_r412548411", "bodyText": "Thinking out loud: Can this be modelled as an empty as well, similar to IID?", "author": "ashwinraghav", "createdAt": "2020-04-21T22:59:02Z", "path": "firebase-inappmessaging/src/main/java/com/google/firebase/inappmessaging/internal/InAppMessageStreamManager.java", "diffHunk": "@@ -232,22 +243,35 @@ private boolean shouldIgnoreCache(String event) {\n                       .defaultIfEmpty(CampaignImpressionList.getDefaultInstance())\n                       .onErrorResumeNext(Maybe.just(CampaignImpressionList.getDefaultInstance()));\n \n+              Maybe<InstanceIdResult> getIID = taskToMaybe(firebaseInstanceId.getInstanceId());\n+\n               Function<CampaignImpressionList, Maybe<FetchEligibleCampaignsResponse>> serviceFetch =\n-                  impressions ->\n-                      taskToMaybe(apiClient.getFiams(impressions))\n-                          .doOnSuccess(\n-                              resp ->\n-                                  Logging.logi(\n-                                      String.format(\n-                                          Locale.US,\n-                                          \"Successfully fetched %d messages from backend\",\n-                                          resp.getMessagesList().size())))\n-                          .doOnSuccess(\n-                              resp -> impressionStorageClient.clearImpressions(resp).subscribe())\n-                          .doOnSuccess(analyticsEventsManager::updateContextualTriggers)\n-                          .doOnSuccess(testDeviceHelper::processCampaignFetch)\n-                          .doOnError(e -> Logging.logw(\"Service fetch error: \" + e.getMessage()))\n-                          .onErrorResumeNext(Maybe.empty()); // Absorb service failures\n+                  campaignImpressionList -> {\n+                    if (!dataCollectionHelper.isAutomaticDataCollectionEnabled()) {\n+                      Logging.logi(\n+                          \"Automatic data collection is disabled, not attempting campaign fetch from service.\");\n+                      return Maybe.just(cacheExpiringResponse());", "originalCommit": "d538bab6161d9b96bebfd7bd205581697af23a11", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU1NDU2Mw==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1488#discussion_r412554563", "bodyText": "hmm maybe but I think this is pretty clear", "author": "JasonAHeron", "createdAt": "2020-04-21T23:13:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU0ODQxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU1NTA5OA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1488#discussion_r412555098", "bodyText": "like it could map to empty or something like that but I think it's not worth it", "author": "JasonAHeron", "createdAt": "2020-04-21T23:15:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU0ODQxMQ=="}], "type": "inlineReview"}]}