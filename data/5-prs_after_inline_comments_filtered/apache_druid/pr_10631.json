{"pr_number": 10631, "pr_title": "Fixes and tests related to the Indexer process.", "pr_createdAt": "2020-12-04T04:53:39Z", "pr_url": "https://github.com/apache/druid/pull/10631", "timeline": [{"oid": "7ae9e3c5ae125499abb1683d13bfc17b137818fa", "url": "https://github.com/apache/druid/commit/7ae9e3c5ae125499abb1683d13bfc17b137818fa", "message": "Fixes and tests related to the Indexer process.\n\nThree bugs fixed:\n\n1) Indexers would not announce themselves as segment servers if they\n   did not have storage locations defined. This used to work, but was\n   broken in #9971. Fixed this by adding an \"isSegmentServer\" method\n   to ServerType and updating SegmentLoadDropHandler to always announce\n   if this method returns true.\n\n2) Certain batch task types were written in a way that assumed \"isReady\"\n   would be called before \"run\", which is not guaranteed. In particular,\n   they relied on it in order to initialize \"taskLockHelper\". Fixed this\n   by updating AbstractBatchIndexTask to ensure \"isReady\" is called\n   before \"run\" for these tasks.\n\n3) UnifiedIndexerAppenderatorsManager did not properly handle complex\n   datasources. Introduced DataSourceAnalysis in order to fix this.\n\nTest changes:\n\n1) Add a new \"docker-compose.cli-indexer.yml\" config that spins up an\n   Indexer instead of a MiddleManager.\n\n2) Introduce a \"USE_INDEXER\" environment variable that determines if\n   docker-compose will start up an Indexer or a MiddleManager.\n\n3) Duplicate all the jdk8 tests and run them in both MiddleManager and\n   Indexer mode.\n\n4) Various adjustments to encourage fail-fast errors in the Docker\n   build scripts.\n\n5) Various adjustments to speed up integration tests and reduce memory\n   usage.\n\n6) Add another Mac-specific approach to determining a machine's own IP.\n   This was useful on my development machine.\n\n7) Update segment-count check in ITCompactionTaskTest to eliminate a\n   race condition (it was looking for 6 segments, which only exist\n   together briefly, until the older 4 are marked unused).\n\nJavadoc updates:\n\n1) AbstractBatchIndexTask: Added javadocs to determineLockGranularityXXX\n   that make it clear when taskLockHelper will be initialized as a side\n   effect. (Related to the second bug above.)\n\n2) Task: Clarified that \"isReady\" is not guaranteed to be called before\n   \"run\". It was already implied, but now it's explicit.\n\n3) ZkCoordinator: Clarified deprecation message.\n\n4) DataSegmentServerAnnouncer: Clarified deprecation message.", "committedDate": "2020-12-04T05:15:48Z", "type": "commit"}, {"oid": "7ae9e3c5ae125499abb1683d13bfc17b137818fa", "url": "https://github.com/apache/druid/commit/7ae9e3c5ae125499abb1683d13bfc17b137818fa", "message": "Fixes and tests related to the Indexer process.\n\nThree bugs fixed:\n\n1) Indexers would not announce themselves as segment servers if they\n   did not have storage locations defined. This used to work, but was\n   broken in #9971. Fixed this by adding an \"isSegmentServer\" method\n   to ServerType and updating SegmentLoadDropHandler to always announce\n   if this method returns true.\n\n2) Certain batch task types were written in a way that assumed \"isReady\"\n   would be called before \"run\", which is not guaranteed. In particular,\n   they relied on it in order to initialize \"taskLockHelper\". Fixed this\n   by updating AbstractBatchIndexTask to ensure \"isReady\" is called\n   before \"run\" for these tasks.\n\n3) UnifiedIndexerAppenderatorsManager did not properly handle complex\n   datasources. Introduced DataSourceAnalysis in order to fix this.\n\nTest changes:\n\n1) Add a new \"docker-compose.cli-indexer.yml\" config that spins up an\n   Indexer instead of a MiddleManager.\n\n2) Introduce a \"USE_INDEXER\" environment variable that determines if\n   docker-compose will start up an Indexer or a MiddleManager.\n\n3) Duplicate all the jdk8 tests and run them in both MiddleManager and\n   Indexer mode.\n\n4) Various adjustments to encourage fail-fast errors in the Docker\n   build scripts.\n\n5) Various adjustments to speed up integration tests and reduce memory\n   usage.\n\n6) Add another Mac-specific approach to determining a machine's own IP.\n   This was useful on my development machine.\n\n7) Update segment-count check in ITCompactionTaskTest to eliminate a\n   race condition (it was looking for 6 segments, which only exist\n   together briefly, until the older 4 are marked unused).\n\nJavadoc updates:\n\n1) AbstractBatchIndexTask: Added javadocs to determineLockGranularityXXX\n   that make it clear when taskLockHelper will be initialized as a side\n   effect. (Related to the second bug above.)\n\n2) Task: Clarified that \"isReady\" is not guaranteed to be called before\n   \"run\". It was already implied, but now it's explicit.\n\n3) ZkCoordinator: Clarified deprecation message.\n\n4) DataSegmentServerAnnouncer: Clarified deprecation message.", "committedDate": "2020-12-04T05:15:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg0NjU2MA==", "url": "https://github.com/apache/druid/pull/10631#discussion_r535846560", "bodyText": "Hmm, how can this happen? I thought Task.isReady() is always called before Task.run() because a task can be scheduled only when Task.isReady() returns true. Task.run() will be called after the task is scheduled in some indexer or middleManager.", "author": "jihoonson", "createdAt": "2020-12-04T05:30:22Z", "path": "indexing-service/src/main/java/org/apache/druid/indexing/common/task/Task.java", "diffHunk": "@@ -160,8 +160,11 @@ default int getPriority()\n   /**\n    * Execute preflight actions for a task. This can be used to acquire locks, check preconditions, and so on. The\n    * actions must be idempotent, since this method may be executed multiple times. This typically runs on the\n-   * coordinator. If this method throws an exception, the task should be considered a failure.\n-   * <p/>\n+   * Overlord. If this method throws an exception, the task should be considered a failure.\n+   *\n+   * This method will not necessarily be executed before {@link #run(TaskToolbox)}, since this task readiness check\n+   * may be done on a different machine from the one that actually runs the task.", "originalCommit": "7ae9e3c5ae125499abb1683d13bfc17b137818fa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg1NDYxOQ==", "url": "https://github.com/apache/druid/pull/10631#discussion_r535854619", "bodyText": "It won't necessarily be called on that same Task object (it might be called on a different instance that represents the same actual task).", "author": "gianm", "createdAt": "2020-12-04T05:55:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg0NjU2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg2NjE3Mw==", "url": "https://github.com/apache/druid/pull/10631#discussion_r535866173", "bodyText": "Oh, I see. I think it happens only in indexers because peon calls isReady() before it runs its task.", "author": "jihoonson", "createdAt": "2020-12-04T06:28:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg0NjU2MA=="}], "type": "inlineReview"}, {"oid": "fafa6477ad5effc5886859352ae0d33186e42ed7", "url": "https://github.com/apache/druid/commit/fafa6477ad5effc5886859352ae0d33186e42ed7", "message": "Merge branch 'master' into fix-indexer-stuff", "committedDate": "2020-12-04T10:18:49Z", "type": "commit"}, {"oid": "6dd91645540c9557fe4ea7bd44b5a3ddcf31499e", "url": "https://github.com/apache/druid/commit/6dd91645540c9557fe4ea7bd44b5a3ddcf31499e", "message": "Fix stop_cluster script.", "committedDate": "2020-12-04T10:28:20Z", "type": "commit"}, {"oid": "b16ec719dc0db44ba8c0ca2117bef1406f5eb968", "url": "https://github.com/apache/druid/commit/b16ec719dc0db44ba8c0ca2117bef1406f5eb968", "message": "Fix sanity check in script.", "committedDate": "2020-12-04T16:19:46Z", "type": "commit"}, {"oid": "b47693cc5b3002261ce246132f78c245fba9c98a", "url": "https://github.com/apache/druid/commit/b47693cc5b3002261ce246132f78c245fba9c98a", "message": "Fix hashbang lines.", "committedDate": "2020-12-05T22:00:40Z", "type": "commit"}, {"oid": "df43ebb6c23c52e5d8abf6ad101b6c5cd4edb3f5", "url": "https://github.com/apache/druid/commit/df43ebb6c23c52e5d8abf6ad101b6c5cd4edb3f5", "message": "Merge branch 'master' into fix-indexer-stuff", "committedDate": "2020-12-06T01:26:52Z", "type": "commit"}, {"oid": "df57231b53da429beaae16c127ffbf360bc85ebe", "url": "https://github.com/apache/druid/commit/df57231b53da429beaae16c127ffbf360bc85ebe", "message": "Test and doc adjustments.", "committedDate": "2020-12-07T03:27:13Z", "type": "commit"}, {"oid": "c7e85c619acede1596b424444364a7bdf2b611e6", "url": "https://github.com/apache/druid/commit/c7e85c619acede1596b424444364a7bdf2b611e6", "message": "Additional tests, and adjustments for tests.", "committedDate": "2020-12-07T06:39:01Z", "type": "commit"}, {"oid": "bcda0cc5a2ed05f3ffc084edb0594b076bf8dec5", "url": "https://github.com/apache/druid/commit/bcda0cc5a2ed05f3ffc084edb0594b076bf8dec5", "message": "Merge branch 'master' into fix-indexer-stuff", "committedDate": "2020-12-07T06:39:18Z", "type": "commit"}, {"oid": "12bdb4a2274ce9c8665097ca72596190791d6057", "url": "https://github.com/apache/druid/commit/12bdb4a2274ce9c8665097ca72596190791d6057", "message": "Split ITs back out.", "committedDate": "2020-12-07T18:40:53Z", "type": "commit"}, {"oid": "5154b69a467756310f9ad6c2a3d36e86bae49266", "url": "https://github.com/apache/druid/commit/5154b69a467756310f9ad6c2a3d36e86bae49266", "message": "Revert change to druid_coordinator_period_indexingPeriod.", "committedDate": "2020-12-07T18:46:40Z", "type": "commit"}, {"oid": "5804ab831a6b2e4186d8db9a73f0bd4f9c5498ca", "url": "https://github.com/apache/druid/commit/5804ab831a6b2e4186d8db9a73f0bd4f9c5498ca", "message": "Set Indexer capacity to match MM.", "committedDate": "2020-12-07T19:38:52Z", "type": "commit"}, {"oid": "9f64c5c863700f2d4a1604f7c7ece2c7378ec577", "url": "https://github.com/apache/druid/commit/9f64c5c863700f2d4a1604f7c7ece2c7378ec577", "message": "Merge branch 'master' into fix-indexer-stuff", "committedDate": "2020-12-07T19:39:04Z", "type": "commit"}, {"oid": "c8a26c104b5984b27a6e9a44198b7f4515c85ffa", "url": "https://github.com/apache/druid/commit/c8a26c104b5984b27a6e9a44198b7f4515c85ffa", "message": "Bump up Historical memory.", "committedDate": "2020-12-08T00:54:43Z", "type": "commit"}, {"oid": "be5453b2b16bd47cbdddea0a04ed0853d859bf7a", "url": "https://github.com/apache/druid/commit/be5453b2b16bd47cbdddea0a04ed0853d859bf7a", "message": "Bump down coordinator, overlord memory.", "committedDate": "2020-12-08T00:55:42Z", "type": "commit"}, {"oid": "f21e20a46dcf23bfc31be468325338a68ad6a733", "url": "https://github.com/apache/druid/commit/f21e20a46dcf23bfc31be468325338a68ad6a733", "message": "Bump up Broker memory.", "committedDate": "2020-12-08T01:13:57Z", "type": "commit"}, {"oid": "b84ce2b3ebd2319c3b804ab50c45f0a2f3e0c539", "url": "https://github.com/apache/druid/commit/b84ce2b3ebd2319c3b804ab50c45f0a2f3e0c539", "message": "Merge branch 'master' into fix-indexer-stuff", "committedDate": "2020-12-08T16:49:19Z", "type": "commit"}]}