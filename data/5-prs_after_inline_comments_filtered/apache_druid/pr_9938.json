{"pr_number": 9938, "pr_title": "Add https to druid-influxdb-emitter extension", "pr_createdAt": "2020-05-27T15:40:04Z", "pr_url": "https://github.com/apache/druid/pull/9938", "timeline": [{"oid": "c015f76e875516f1f83aa33c903e131ca088b991", "url": "https://github.com/apache/druid/commit/c015f76e875516f1f83aa33c903e131ca088b991", "message": "Add https to druid-influxdb-emitter extension", "committedDate": "2020-05-27T15:30:31Z", "type": "commit"}, {"oid": "81260f3d171389e7272b65d40c17bca1f25a6f9b", "url": "https://github.com/apache/druid/commit/81260f3d171389e7272b65d40c17bca1f25a6f9b", "message": "address CI failures", "committedDate": "2020-06-09T15:51:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg1MDc4Mw==", "url": "https://github.com/apache/druid/pull/9938#discussion_r438850783", "bodyText": "Looks like CI is complaining about a lack of test coverage. You can add an EqualsVerifier test to fix that", "author": "suneet-s", "createdAt": "2020-06-11T15:00:12Z", "path": "extensions-contrib/influxdb-emitter/src/main/java/org/apache/druid/emitter/influxdb/InfluxdbEmitterConfig.java", "diffHunk": "@@ -130,6 +159,10 @@ public int hashCode()\n   {\n     int result = getHostname().hashCode();\n     result = 31 * result + getPort();\n+    result = 31 * result + getProtocol().hashCode();\n+    result = 31 * result + (getTrustStorePath() != null ? getTrustStorePath().hashCode() : 0);\n+    result = 31 * result + (getTrustStoreType() != null ? getTrustStoreType().hashCode() : 0);\n+    result = 31 * result + (getTrustStorePassword() != null ? getTrustStorePassword().hashCode() : 0);", "originalCommit": "81260f3d171389e7272b65d40c17bca1f25a6f9b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM0NDQxMw==", "url": "https://github.com/apache/druid/pull/9938#discussion_r456344413", "bodyText": "How does EqualsVerifier work? The test I added is failing on\n\nNon-nullity: equals throws NullPointerException on field port.\n\nbut if port is null then it gets set to a default value in the config's constructor.", "author": "awelsh93", "createdAt": "2020-07-17T09:57:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg1MDc4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQ2MzkyNQ==", "url": "https://github.com/apache/druid/pull/9938#discussion_r456463925", "bodyText": "EqualsVerifier doesn't know that because that field is not marked as NotNull. There's more information about that exception here - https://jqno.nl/equalsverifier/errormessages/non-nullity-equals-hashcode-tostring-throws-nullpointerexception/\nYou could also tell the test that the field is not null with .withNonnullFields(\"port\") in the EqualsVerifier test", "author": "suneet-s", "createdAt": "2020-07-17T14:05:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg1MDc4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk2ODk1NQ==", "url": "https://github.com/apache/druid/pull/9938#discussion_r445968955", "bodyText": "Is there any reason not to use\n    return Objects.hash(\nreturn Objects.hash(\n        hostname,\n        port,\n...", "author": "clintropolis", "createdAt": "2020-06-26T05:04:21Z", "path": "extensions-contrib/influxdb-emitter/src/main/java/org/apache/druid/emitter/influxdb/InfluxdbEmitterConfig.java", "diffHunk": "@@ -130,6 +159,10 @@ public int hashCode()\n   {\n     int result = getHostname().hashCode();\n     result = 31 * result + getPort();\n+    result = 31 * result + getProtocol().hashCode();", "originalCommit": "81260f3d171389e7272b65d40c17bca1f25a6f9b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "bd00a0027adf09fae6f0cb6f7d012d1111f2a2e4", "url": "https://github.com/apache/druid/commit/bd00a0027adf09fae6f0cb6f7d012d1111f2a2e4", "message": "address comments", "committedDate": "2020-07-01T19:00:10Z", "type": "commit"}, {"oid": "9214edda4ba02db56c4c9e263d68b8566a47b189", "url": "https://github.com/apache/druid/commit/9214edda4ba02db56c4c9e263d68b8566a47b189", "message": "increase test coverage", "committedDate": "2020-07-16T15:12:23Z", "type": "commit"}, {"oid": "43f1554c851d0b3ee38636937ac18d6242710a26", "url": "https://github.com/apache/druid/commit/43f1554c851d0b3ee38636937ac18d6242710a26", "message": "tests for being unable to load trustStore", "committedDate": "2020-07-16T16:34:40Z", "type": "commit"}, {"oid": "b79350cecbe37a5c93a6872ce764d2190730bea0", "url": "https://github.com/apache/druid/commit/b79350cecbe37a5c93a6872ce764d2190730bea0", "message": "fix EqualsVerifier test", "committedDate": "2020-07-17T15:14:54Z", "type": "commit"}, {"oid": "3bc316e6e9b5a37811b46f9a96a1c796711c6fd5", "url": "https://github.com/apache/druid/commit/3bc316e6e9b5a37811b46f9a96a1c796711c6fd5", "message": "fix intellij inspection error", "committedDate": "2020-07-20T08:21:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUwMzUyNQ==", "url": "https://github.com/apache/druid/pull/9938#discussion_r500503525", "bodyText": "It would be better to use try-with-resources. You will not have to handle the IOException thrown in close() by yourself.", "author": "jihoonson", "createdAt": "2020-10-06T18:18:35Z", "path": "extensions-contrib/influxdb-emitter/src/main/java/org/apache/druid/emitter/influxdb/InfluxdbEmitter.java", "diffHunk": "@@ -211,4 +219,46 @@ public void transformAndSendToInfluxdb(LinkedBlockingQueue<ServiceMetricEvent> e\n     postToInflux(payload.toString());\n   }\n \n+  private HttpClient buildInfluxdbClient()\n+  {\n+    if (\"https\".equals(influxdbEmitterConfig.getProtocol())) {\n+      SSLContext sslContext;\n+      if (influxdbEmitterConfig.getTrustStorePath() == null || influxdbEmitterConfig.getTrustStorePassword() == null) {\n+        String msg = \"Can't load TrustStore. Truststore path or password is not set.\";\n+        log.error(msg);\n+        throw new IllegalStateException(msg);\n+      }\n+\n+      FileInputStream in = null;\n+\n+      try {\n+        in = new FileInputStream(new File(influxdbEmitterConfig.getTrustStorePath()));\n+        KeyStore store = KeyStore.getInstance(influxdbEmitterConfig.getTrustStoreType());\n+        store.load(in, influxdbEmitterConfig.getTrustStorePassword().toCharArray());\n+        TrustManagerFactory tmf = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());\n+        tmf.init(store);\n+        sslContext = SSLContext.getInstance(\"TLS\");\n+        sslContext.init(null, tmf.getTrustManagers(), null);\n+      }\n+      catch (Exception ex) {\n+        String msg = \"Unable to load TrustStore\";\n+        log.error(msg);\n+        throw new IllegalStateException(msg);\n+      }\n+      finally {\n+        if (in != null) {", "originalCommit": "3bc316e6e9b5a37811b46f9a96a1c796711c6fd5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjM4MjU4MQ==", "url": "https://github.com/apache/druid/pull/9938#discussion_r506382581", "bodyText": "Thanks for your review - I think I've addressed these comments. Can you take another look please?", "author": "awelsh93", "createdAt": "2020-10-16T12:53:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUwMzUyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUwNjE5Mg==", "url": "https://github.com/apache/druid/pull/9938#discussion_r500506192", "bodyText": "I think this should be thrown.", "author": "jihoonson", "createdAt": "2020-10-06T18:22:38Z", "path": "extensions-contrib/influxdb-emitter/src/main/java/org/apache/druid/emitter/influxdb/InfluxdbEmitter.java", "diffHunk": "@@ -211,4 +219,46 @@ public void transformAndSendToInfluxdb(LinkedBlockingQueue<ServiceMetricEvent> e\n     postToInflux(payload.toString());\n   }\n \n+  private HttpClient buildInfluxdbClient()\n+  {\n+    if (\"https\".equals(influxdbEmitterConfig.getProtocol())) {\n+      SSLContext sslContext;\n+      if (influxdbEmitterConfig.getTrustStorePath() == null || influxdbEmitterConfig.getTrustStorePassword() == null) {\n+        String msg = \"Can't load TrustStore. Truststore path or password is not set.\";\n+        log.error(msg);\n+        throw new IllegalStateException(msg);\n+      }\n+\n+      FileInputStream in = null;\n+\n+      try {\n+        in = new FileInputStream(new File(influxdbEmitterConfig.getTrustStorePath()));\n+        KeyStore store = KeyStore.getInstance(influxdbEmitterConfig.getTrustStoreType());\n+        store.load(in, influxdbEmitterConfig.getTrustStorePassword().toCharArray());\n+        TrustManagerFactory tmf = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());\n+        tmf.init(store);\n+        sslContext = SSLContext.getInstance(\"TLS\");\n+        sslContext.init(null, tmf.getTrustManagers(), null);\n+      }\n+      catch (Exception ex) {\n+        String msg = \"Unable to load TrustStore\";\n+        log.error(msg);\n+        throw new IllegalStateException(msg);\n+      }\n+      finally {\n+        if (in != null) {\n+          try {\n+            in.close();\n+          }\n+          catch (IOException ex) {\n+            log.error(\"Unable to load TrustStore\");", "originalCommit": "3bc316e6e9b5a37811b46f9a96a1c796711c6fd5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "219e59658d2ff17ed6ed1ae994a47286d0249107", "url": "https://github.com/apache/druid/commit/219e59658d2ff17ed6ed1ae994a47286d0249107", "message": "use try-with-resources when loading trustStore", "committedDate": "2020-10-13T10:40:59Z", "type": "commit"}]}