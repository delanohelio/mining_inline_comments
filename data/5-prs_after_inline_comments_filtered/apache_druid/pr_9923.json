{"pr_number": 9923, "pr_title": "Add parameterized Calcite tests for join queries", "pr_createdAt": "2020-05-26T03:11:32Z", "pr_url": "https://github.com/apache/druid/pull/9923", "timeline": [{"oid": "f4c4df41c45c4b0877c473baeb86812a10468f67", "url": "https://github.com/apache/druid/commit/f4c4df41c45c4b0877c473baeb86812a10468f67", "message": "Add parameterized Calcite tests for join queries", "committedDate": "2020-05-26T03:08:09Z", "type": "commit"}, {"oid": "2c55685e2b822eed40f1a32cb2b6f636be7e0b5c", "url": "https://github.com/apache/druid/commit/2c55685e2b822eed40f1a32cb2b6f636be7e0b5c", "message": "new tests", "committedDate": "2020-05-26T06:13:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc0MjkxNw==", "url": "https://github.com/apache/druid/pull/9923#discussion_r430742917", "bodyText": "May be worth explicitly setting JOIN_FILTER_REWRITE_ENABLE_KEY to true here in case the default value changes in the future.", "author": "ccaominh", "createdAt": "2020-05-26T22:30:19Z", "path": "sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java", "diffHunk": "@@ -13917,4 +14073,38 @@ public void testRepeatedIdenticalVirtualExpressionGrouping() throws Exception\n         )\n     );\n   }\n+\n+  /**\n+   * This is a provider of query contexts that should be used by join tests.\n+   * It tests various configs that can be passed to join queries. All the configs provided by this provider should\n+   * have the join query engine return the same results.\n+   */\n+  public static class QueryContextForJoinProvider\n+  {\n+    @UsedByJUnitParamsRunner\n+    public static Object[] provideQueryContexts()\n+    {\n+      return new Object[] {\n+          // default behavior\n+          QUERY_CONTEXT_DEFAULT,\n+          // filter value re-writes enabled\n+          new ImmutableMap.Builder<String, Object>()\n+              .putAll(QUERY_CONTEXT_DEFAULT)\n+              .put(QueryContexts.JOIN_FILTER_REWRITE_VALUE_COLUMN_FILTERS_ENABLE_KEY, true)\n+              .build(),", "originalCommit": "2c55685e2b822eed40f1a32cb2b6f636be7e0b5c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc2OTM0Ng==", "url": "https://github.com/apache/druid/pull/9923#discussion_r430769346", "bodyText": "Done", "author": "suneet-s", "createdAt": "2020-05-26T23:53:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc0MjkxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc0NDg4Nw==", "url": "https://github.com/apache/druid/pull/9923#discussion_r430744887", "bodyText": "Should line 8863 use queryContext instead of QUERY_CONTEXT_DEFAULT?", "author": "ccaominh", "createdAt": "2020-05-26T22:36:01Z", "path": "sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java", "diffHunk": "@@ -8803,6 +8841,7 @@ public void testInnerJoinTwoLookupsToTableUsingNumericColumn() throws Exception\n         + \"FROM foo\\n\"\n         + \"INNER JOIN lookup.lookyloo l1 ON l1.k = foo.m1\\n\"\n         + \"INNER JOIN lookup.lookyloo l2 ON l2.k = l1.k\",\n+        queryContext,", "originalCommit": "2c55685e2b822eed40f1a32cb2b6f636be7e0b5c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc2ODcyNg==", "url": "https://github.com/apache/druid/pull/9923#discussion_r430768726", "bodyText": "I left it as is to see if the test validates the query context that is used.\nIt looks like this is done automatically in BaseCalciteQueryTest#testQuery ~ line 619", "author": "suneet-s", "createdAt": "2020-05-26T23:51:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc0NDg4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc0NjA2Ng==", "url": "https://github.com/apache/druid/pull/9923#discussion_r430746066", "bodyText": "Revert extra indent", "author": "ccaominh", "createdAt": "2020-05-26T22:39:29Z", "path": "sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java", "diffHunk": "@@ -9279,22 +9330,24 @@ public void testInnerJoinCastLeft() throws Exception\n                 )\n                 .intervals(querySegmentSpec(Filtration.eternity()))\n                 .columns(\"j0.k\", \"j0.v\", \"m1\")\n-                .context(QUERY_CONTEXT_DEFAULT)\n+                  .context(queryContext)", "originalCommit": "2c55685e2b822eed40f1a32cb2b6f636be7e0b5c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc2OTI0Mw==", "url": "https://github.com/apache/druid/pull/9923#discussion_r430769243", "bodyText": "Done", "author": "suneet-s", "createdAt": "2020-05-26T23:53:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc0NjA2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc0NjYwNw==", "url": "https://github.com/apache/druid/pull/9923#discussion_r430746607", "bodyText": "Should line 9219 use queryContext instead of QUERY_CONTEXT_DEFAULT?", "author": "ccaominh", "createdAt": "2020-05-26T22:41:07Z", "path": "sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java", "diffHunk": "@@ -9152,6 +9198,7 @@ public void testCommaJoinTableLookupTableMismatchedTypes() throws Exception\n         \"SELECT COUNT(*)\\n\"\n         + \"FROM foo, lookup.lookyloo l, numfoo\\n\"\n         + \"WHERE foo.cnt = l.k AND l.k = numfoo.cnt\\n\",\n+        queryContext,", "originalCommit": "2c55685e2b822eed40f1a32cb2b6f636be7e0b5c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc2OTA4Ng==", "url": "https://github.com/apache/druid/pull/9923#discussion_r430769086", "bodyText": "Same as above - when I made these changes I didn't actually dig in to how this was being verified. It's pretty inconsistent across the tests. Do you think it's ok if we remove references to the query context in another PR?", "author": "suneet-s", "createdAt": "2020-05-26T23:52:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc0NjYwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc2OTYxMw==", "url": "https://github.com/apache/druid/pull/9923#discussion_r430769613", "bodyText": "Yeah, doesn't need to be addressed by this PR", "author": "ccaominh", "createdAt": "2020-05-26T23:54:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc0NjYwNw=="}], "type": "inlineReview"}, {"oid": "f4eaf2234e2d0de2c1c305712cb138e96e86b75c", "url": "https://github.com/apache/druid/commit/f4eaf2234e2d0de2c1c305712cb138e96e86b75c", "message": "review comments", "committedDate": "2020-05-26T23:57:26Z", "type": "commit"}, {"oid": "dc2068824fe4a27f81b81462c2a4784a3aeab922", "url": "https://github.com/apache/druid/commit/dc2068824fe4a27f81b81462c2a4784a3aeab922", "message": "Merge remote-tracking branch 'upstream/master' into sql-tests-2", "committedDate": "2020-05-26T23:57:57Z", "type": "commit"}]}