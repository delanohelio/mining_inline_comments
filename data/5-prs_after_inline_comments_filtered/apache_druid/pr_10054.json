{"pr_number": 10054, "pr_title": "Add safeguard to make sure new Rules added are aware of Rule usage in loadstatus API", "pr_createdAt": "2020-06-19T02:15:43Z", "pr_url": "https://github.com/apache/druid/pull/10054", "timeline": [{"oid": "34c7dbf24f3b23dd9d5051fa840200d5ebf02955", "url": "https://github.com/apache/druid/commit/34c7dbf24f3b23dd9d5051fa840200d5ebf02955", "message": "Add safeguard to make sure new Rules added are aware of Rule usuage in loadstatus API", "committedDate": "2020-06-19T02:13:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjYwMDQ2Ng==", "url": "https://github.com/apache/druid/pull/10054#discussion_r442600466", "bodyText": "It seems leaky to tie this call to an API method, rather, what is being captured here is whether or not a Rule will load data instead of dropping data, because not all rules that load data are of type LoadRule. Should this just be isLoadRule() or something to that effect?", "author": "clintropolis", "createdAt": "2020-06-19T02:38:38Z", "path": "server/src/main/java/org/apache/druid/server/coordinator/rules/Rule.java", "diffHunk": "@@ -51,6 +51,14 @@\n \n   boolean appliesTo(Interval interval, DateTime referenceTimestamp);\n \n+  /**\n+   * Returns whether this Rules should be matched and considered in loadstatus API.\n+   * In general, Rules that load segment onto any Druid node should return true.\n+   * Any Rule that returns true for this method should add a compute logic (as if case condition) for the particular\n+   * Rule class in {@link DruidCoordinator#computeUnderReplicationCountsPerDataSourcePerTierForSegments}\n+   */\n+  boolean matchLoadStatusCount();", "originalCommit": "34c7dbf24f3b23dd9d5051fa840200d5ebf02955", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjYwODY1Ng==", "url": "https://github.com/apache/druid/pull/10054#discussion_r442608656", "bodyText": "I don't like calling it isLoadRule because there is a class/interface LoadRule and not all things that return true for this method are of the class/subclass of that class/interface LoadRule. But I agree let's not tie it to API. How about calling it isRuleLoadSegments or canLoadSegments or isLoadSegments.\nAlthough, I still want to leave the comment Any Rule that returns true for this method should add a compute logic (as if case condition) for the particular Rule class in {@link DruidCoordinator#computeUnderReplicationCountsPerDataSourcePerTierForSegments} there. Since that will help people find the appropriate place to change/add when creating new Rule. What do you think?", "author": "maytasm", "createdAt": "2020-06-19T03:14:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjYwMDQ2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjYyMTI5MQ==", "url": "https://github.com/apache/druid/pull/10054#discussion_r442621291", "bodyText": "I think canLoadSegments works, also doesLoadSegments or willLoadSegments.", "author": "clintropolis", "createdAt": "2020-06-19T04:13:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjYwMDQ2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc0NTc1Mw==", "url": "https://github.com/apache/druid/pull/10054#discussion_r442745753", "bodyText": "Done", "author": "maytasm", "createdAt": "2020-06-19T09:54:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjYwMDQ2Ng=="}], "type": "inlineReview"}, {"oid": "9b6dc750ebd27525d833387968fa50130ed8f492", "url": "https://github.com/apache/druid/commit/9b6dc750ebd27525d833387968fa50130ed8f492", "message": "address comments", "committedDate": "2020-06-19T09:06:17Z", "type": "commit"}, {"oid": "529022449da9762b4f47f0f541843b747bc6bb65", "url": "https://github.com/apache/druid/commit/529022449da9762b4f47f0f541843b747bc6bb65", "message": "address comments", "committedDate": "2020-06-19T09:07:07Z", "type": "commit"}, {"oid": "0714ddbe3d593700416a8e29d39691c74b69e917", "url": "https://github.com/apache/druid/commit/0714ddbe3d593700416a8e29d39691c74b69e917", "message": "add tests", "committedDate": "2020-06-19T09:52:08Z", "type": "commit"}]}