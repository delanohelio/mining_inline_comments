{"pr_number": 9199, "pr_title": "Fix TSV bugs", "pr_createdAt": "2020-01-16T23:31:30Z", "pr_url": "https://github.com/apache/druid/pull/9199", "timeline": [{"oid": "e2304f26f00cd2a2695e735b1245555174396524", "url": "https://github.com/apache/druid/commit/e2304f26f00cd2a2695e735b1245555174396524", "message": "working", "committedDate": "2020-01-15T21:39:57Z", "type": "commit"}, {"oid": "d3f64e5a4aaa9124cb04ea8436bdc44e8d3c380d", "url": "https://github.com/apache/druid/commit/d3f64e5a4aaa9124cb04ea8436bdc44e8d3c380d", "message": "- support multi-char delimiter for tsv\n- respect \"delimiter\" property for tsv", "committedDate": "2020-01-16T22:45:17Z", "type": "commit"}, {"oid": "1b2da156bbd2f175d95035bf8ad6d687e550f2eb", "url": "https://github.com/apache/druid/commit/1b2da156bbd2f175d95035bf8ad6d687e550f2eb", "message": "default value check for findColumnsFromHeader", "committedDate": "2020-01-16T23:29:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzcwNDkxMQ==", "url": "https://github.com/apache/druid/pull/9199#discussion_r367704911", "bodyText": "SEPERATOR -> SEPARATOR", "author": "jon-wei", "createdAt": "2020-01-16T23:38:34Z", "path": "core/src/main/java/org/apache/druid/data/input/impl/CSVParser.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.druid.data.input.impl;\n+\n+import com.opencsv.RFC4180Parser;\n+import com.opencsv.RFC4180ParserBuilder;\n+import com.opencsv.enums.CSVReaderNullFieldIndicator;\n+import org.apache.druid.common.config.NullHandling;\n+import org.apache.druid.data.input.impl.DelimitedValueReader.DelimitedValueParser;\n+\n+import java.io.IOException;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+public class CSVParser implements DelimitedValueParser\n+{\n+  private static final char SEPERATOR = ',';", "originalCommit": "1b2da156bbd2f175d95035bf8ad6d687e550f2eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzcwOTk1OQ==", "url": "https://github.com/apache/druid/pull/9199#discussion_r367709959", "bodyText": "Thanks, fixed.", "author": "jihoonson", "createdAt": "2020-01-16T23:57:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzcwNDkxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzcwNzUyMQ==", "url": "https://github.com/apache/druid/pull/9199#discussion_r367707521", "bodyText": "Does this need to check for listDelimiter in the column names as well?", "author": "jon-wei", "createdAt": "2020-01-16T23:48:27Z", "path": "core/src/main/java/org/apache/druid/data/input/impl/FlatTextInputFormat.java", "diffHunk": "@@ -0,0 +1,140 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.druid.data.input.impl;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.google.common.base.Preconditions;\n+import com.google.common.collect.ImmutableList;\n+import org.apache.druid.data.input.InputFormat;\n+import org.apache.druid.indexer.Checks;\n+import org.apache.druid.indexer.Property;\n+\n+import javax.annotation.Nullable;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Objects;\n+\n+public abstract class FlatTextInputFormat implements InputFormat\n+{\n+  private final List<String> columns;\n+  private final String listDelimiter;\n+  private final String delimiter;\n+  private final boolean findColumnsFromHeader;\n+  private final int skipHeaderRows;\n+\n+  FlatTextInputFormat(\n+      @Nullable List<String> columns,\n+      @Nullable String listDelimiter,\n+      String delimiter,\n+      @Nullable Boolean hasHeaderRow,\n+      @Nullable Boolean findColumnsFromHeader,\n+      int skipHeaderRows\n+  )\n+  {\n+    this.columns = columns == null ? Collections.emptyList() : columns;\n+    this.listDelimiter = listDelimiter;\n+    this.delimiter = Preconditions.checkNotNull(delimiter, \"delimiter\");\n+    //noinspection ConstantConditions\n+    if (columns == null || columns.isEmpty()) {\n+      this.findColumnsFromHeader = Checks.checkOneNotNullOrEmpty(\n+          ImmutableList.of(\n+              new Property<>(\"hasHeaderRow\", hasHeaderRow),\n+              new Property<>(\"findColumnsFromHeader\", findColumnsFromHeader)\n+          )\n+      ).getValue();\n+    } else {\n+      this.findColumnsFromHeader = false;\n+    }\n+    this.skipHeaderRows = skipHeaderRows;\n+    Preconditions.checkArgument(\n+        !delimiter.equals(listDelimiter),\n+        \"Cannot have same delimiter and list delimiter of [%s]\",\n+        delimiter\n+    );\n+    if (!this.columns.isEmpty()) {\n+      for (String column : this.columns) {\n+        Preconditions.checkArgument(", "originalCommit": "1b2da156bbd2f175d95035bf8ad6d687e550f2eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzcxMDE5NQ==", "url": "https://github.com/apache/druid/pull/9199#discussion_r367710195", "bodyText": "Hmm, I'm not sure why we do this check.. I guess it wouldn't harm anything if the column name contains the delimiter. Maybe we can remove this check later.", "author": "jihoonson", "createdAt": "2020-01-16T23:58:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzcwNzUyMQ=="}], "type": "inlineReview"}, {"oid": "a87b0c4acd40d3593bcf2abc5d45f9cef231cdb3", "url": "https://github.com/apache/druid/commit/a87b0c4acd40d3593bcf2abc5d45f9cef231cdb3", "message": "remove CSVParser to have a true and only CSVParser", "committedDate": "2020-01-16T23:55:40Z", "type": "commit"}, {"oid": "d3a6ef82fd8148e827dd05819a33d060c37b38df", "url": "https://github.com/apache/druid/commit/d3a6ef82fd8148e827dd05819a33d060c37b38df", "message": "fix tests", "committedDate": "2020-01-17T02:30:40Z", "type": "commit"}, {"oid": "e0f744a7276bebd0bfe6cf8a27e83963ddc034c2", "url": "https://github.com/apache/druid/commit/e0f744a7276bebd0bfe6cf8a27e83963ddc034c2", "message": "fix another test", "committedDate": "2020-01-17T04:22:01Z", "type": "commit"}]}