{"pr_number": 308, "pr_title": "KOGITO-855 - [Jobs Service] improve persisted jobs loading", "pr_createdAt": "2020-02-07T16:58:55Z", "pr_url": "https://github.com/kiegroup/kogito-runtimes/pull/308", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUwNzc0MA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/308#discussion_r376507740", "bodyText": "Shouldn't we add these properties on the README?", "author": "spolti", "createdAt": "2020-02-07T17:15:30Z", "path": "addons/jobs/jobs-service/src/main/java/org/kie/kogito/jobs/service/scheduler/BaseTimerJobScheduler.java", "diffHunk": "@@ -52,13 +55,19 @@\n     @ConfigProperty(name = \"kogito.jobs-service.maxIntervalLimitToRetryMillis\", defaultValue = \"60000\")\n     long maxIntervalLimitToRetryMillis;\n \n+    @ConfigProperty(name = \"kogito.jobs-service.schedulerChunkInMinutes\", defaultValue = \"10\")", "originalCommit": "fbd875fd8953210ee7010a7e631d53c0e6f94bdf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjkxMzcwOA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/308#discussion_r376913708", "bodyText": "+1 and to update wiki page about jobs service", "author": "mswiderski", "createdAt": "2020-02-10T08:14:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUwNzc0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzAwODIwMw==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/308#discussion_r377008203", "bodyText": "+1, I'll update the wiki and insert some javadoc as well...", "author": "tiagodolphine", "createdAt": "2020-02-10T11:31:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUwNzc0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA4MTI4OA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/308#discussion_r377081288", "bodyText": "done, missing the wiki.", "author": "tiagodolphine", "createdAt": "2020-02-10T14:05:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUwNzc0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUwODU0OQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/308#discussion_r376508549", "bodyText": "just an opinion, wouldn't be better break this step in smaller pieces for a better code maintainability?", "author": "spolti", "createdAt": "2020-02-07T17:17:23Z", "path": "addons/jobs/jobs-service/src/main/java/org/kie/kogito/jobs/service/scheduler/BaseTimerJobScheduler.java", "diffHunk": "@@ -79,30 +89,45 @@ public BaseTimerJobScheduler(JobExecutor jobExecutor,\n                 .fromCompletionStage(jobRepository.exists(job.getId()))\n                 .flatMap(exists -> Boolean.TRUE.equals(exists)\n                         ? handleExistingJob(job)\n-                        : ReactiveStreams.of(Boolean.TRUE))\n-                .filter(Boolean.TRUE::equals)\n-                //2- calculate the delay (when the job should be executed)\n-                .map(checked -> job.getExpirationTime())\n-                .map(this::calculateDelay)\n-                .peek(delay -> Optional\n-                        .of(delay.isNegative())\n-                        .filter(Boolean.FALSE::equals)\n-                        .orElseThrow(() -> new RuntimeException(\"Delay should be positive\")))\n-                //3- schedule the job\n-                .map(delay -> doSchedule(delay, job))\n-                .flatMap(p -> p)\n-                .map(scheduleId -> ScheduledJob\n-                        .builder()\n-                        .job(job)\n-                        .scheduledId(scheduleId)\n-                        .status(JobStatus.SCHEDULED)\n-                        .build())\n-                .map(scheduledJob -> jobRepository.save(scheduledJob))\n-                .flatMapCompletionStage(p -> p)\n+                        : ReactiveStreams.of(job))", "originalCommit": "fbd875fd8953210ee7010a7e631d53c0e6f94bdf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA4MTg1Ng==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/308#discussion_r377081856", "bodyText": "done, I split into one more method to execute the scheduling process.", "author": "tiagodolphine", "createdAt": "2020-02-10T14:06:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUwODU0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjkxMjA0NQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/308#discussion_r376912045", "bodyText": "why to keep these two properties in different time units? one in minutes and the other in millis?", "author": "mswiderski", "createdAt": "2020-02-10T08:09:18Z", "path": "addons/jobs/jobs-service/src/main/java/org/kie/kogito/jobs/service/scheduler/JobSchedulerManager.java", "diffHunk": "@@ -35,22 +40,49 @@\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(JobSchedulerManager.class);\n \n+    @ConfigProperty(name = \"kogito.jobs-service.schedulerChunkInMinutes\", defaultValue = \"10\")\n+    long schedulerChunkInMinutes;\n+\n+    @ConfigProperty(name = \"kogito.jobs-service.loadJobIntervalInMillis\", defaultValue = \"60000\")", "originalCommit": "fbd875fd8953210ee7010a7e631d53c0e6f94bdf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzAwODg1NQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/308#discussion_r377008855", "bodyText": "np, let's unify... I used milliseconds just because vertx scheduler is based on it, but this is an easy conversion, better to keep the same units.", "author": "tiagodolphine", "createdAt": "2020-02-10T11:32:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjkxMjA0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA4NDkyMQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/308#discussion_r377084921", "bodyText": "done", "author": "tiagodolphine", "createdAt": "2020-02-10T14:11:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjkxMjA0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjkxMzUxOQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/308#discussion_r376913519", "bodyText": "so the load of jobs will run every minute by default and the jobs to be loaded are for 10 min from current time. so that means every minute we load next 10 min of jobs. Isn't that we will get lot of duplicates to filter out?\nwouldn't it be better to run less frequently ... close to the chunk size/time and just to load next chunk and thus no need to filter out duplicates? This would make a real difference in case there are lot of jobs in given chunk.\nI don't think we need to worry about scheduled jobs in between (like the chunk that was already loaded) as this is already checked upon scheduling.", "author": "mswiderski", "createdAt": "2020-02-10T08:13:38Z", "path": "addons/jobs/jobs-service/src/main/java/org/kie/kogito/jobs/service/scheduler/JobSchedulerManager.java", "diffHunk": "@@ -35,22 +40,49 @@\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(JobSchedulerManager.class);\n \n+    @ConfigProperty(name = \"kogito.jobs-service.schedulerChunkInMinutes\", defaultValue = \"10\")\n+    long schedulerChunkInMinutes;\n+\n+    @ConfigProperty(name = \"kogito.jobs-service.loadJobIntervalInMillis\", defaultValue = \"60000\")\n+    long loadJobIntervalInMillis;\n+\n     @Inject\n     VertxJobScheduler scheduler;\n \n     @Inject\n     ReactiveJobRepository repository;\n \n-    CompletionStage<Void> loadScheduledJobs(@Observes StartupEvent startupEvent) {\n-        LOGGER.info(\"Loading scheduled jobs\");\n-        return repository.findByStatus(JobStatus.SCHEDULED, JobStatus.RETRY)\n-                //is is necessary to skip error on the publisher to continue processing, otherwise the subscribe\n-                // terminated\n+    @Inject\n+    Vertx vertx;\n+\n+    void onStartup(@Observes StartupEvent startupEvent) {\n+        //first execution\n+        vertx.runOnContext(v -> loadScheduledJobs());\n+        //periodic execution\n+        vertx.setPeriodic(loadJobIntervalInMillis, id -> loadScheduledJobs());", "originalCommit": "fbd875fd8953210ee7010a7e631d53c0e6f94bdf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzAxMTQwNg==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/308#discussion_r377011406", "bodyText": "yeah, this is the point of getting the configuration property, it is easy to change, I think we can keep both intervals equals or very close to the chunk size, this is more efficient, I was testing with this more frequently load to see it the scheduling was running properly and avoiding duplication.\nSo I'll change the default values to be equals, 10min is ok in your point of view?", "author": "tiagodolphine", "createdAt": "2020-02-10T11:39:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjkxMzUxOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzAyMTc1MQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/308#discussion_r377021751", "bodyText": "yes, let's go with defaults to be the same value. in the end it is all configurable so can be adjusted as needed", "author": "mswiderski", "createdAt": "2020-02-10T12:02:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjkxMzUxOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA4NDk5OQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/308#discussion_r377084999", "bodyText": "done", "author": "tiagodolphine", "createdAt": "2020-02-10T14:11:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjkxMzUxOQ=="}], "type": "inlineReview"}, {"oid": "28305ae8fa5bff8ac2068e1a64aa845a60ae1bc3", "url": "https://github.com/kiegroup/kogito-runtimes/commit/28305ae8fa5bff8ac2068e1a64aa845a60ae1bc3", "message": "[Jobs Service] improve persisted jobs loading\n\nHandle pre processing job\n\nInserting the chunk logic and conifguration for the scheduler\n\nInmemory jobs loading and reschedule fixes\n\nset max results on infinispan repository\n\nChanging jobs loading to use vertx scheduling\n\nChanging jobs loading to use vertx scheduling\n\ninserting unit tests\n\nApply pr comments let the jobs load interval in the same size as the chunk", "committedDate": "2020-02-10T13:14:58Z", "type": "forcePushed"}, {"oid": "2860a9ef2e48a44a58368c91688fff2bb20aed73", "url": "https://github.com/kiegroup/kogito-runtimes/commit/2860a9ef2e48a44a58368c91688fff2bb20aed73", "message": "KOGITO-532 Adding job load prioritization", "committedDate": "2020-02-11T17:01:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODEyNTgzMA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/308#discussion_r378125830", "bodyText": "Can you please just quickly explain these 3 config parameters?", "author": "MarianMacik", "createdAt": "2020-02-12T09:21:42Z", "path": "addons/jobs/jobs-service/src/main/java/org/kie/kogito/jobs/service/scheduler/BaseTimerJobScheduler.java", "diffHunk": "@@ -46,19 +49,29 @@\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(BaseTimerJobScheduler.class);\n \n-    @ConfigProperty(name = \"kogito.jobs-service.backoffRetryMillis\", defaultValue = \"1000\")\n+    @ConfigProperty(name = \"kogito.jobs-service.backoffRetryMillis\")\n     long backoffRetryMillis;\n \n-    @ConfigProperty(name = \"kogito.jobs-service.maxIntervalLimitToRetryMillis\", defaultValue = \"60000\")\n+    @ConfigProperty(name = \"kogito.jobs-service.maxIntervalLimitToRetryMillis\")\n     long maxIntervalLimitToRetryMillis;\n \n+    /**\n+     * The current chunk size  in minutes the scheduler handles, it is used to keep a limit number of jobs scheduled\n+     * in the in-memory scheduler.\n+     */\n+    @ConfigProperty(name = \"kogito.jobs-service.schedulerChunkInMinutes\")\n+    long schedulerChunkInMinutes;\n+", "originalCommit": "2860a9ef2e48a44a58368c91688fff2bb20aed73", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM2Mjk0Ng==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/308#discussion_r378362946", "bodyText": "schedulerChunkInMinutes is the chunk size, represented in minutes, the chunk is an interval of time. This config will be on the wiki, the other two parameters are on the wiki already and represent the Retry configurations for backoff and the limit that is supposed to be retried.", "author": "tiagodolphine", "createdAt": "2020-02-12T16:25:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODEyNTgzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM2OTc1OA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/308#discussion_r378369758", "bodyText": "@spolti  could you please open a jira to handle this property on operator side?", "author": "ricardozanini", "createdAt": "2020-02-12T16:35:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODEyNTgzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODEyNzU1NQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/308#discussion_r378127555", "bodyText": "Does this mean that the chunk is constantly moving?", "author": "MarianMacik", "createdAt": "2020-02-12T09:24:52Z", "path": "addons/jobs/jobs-service/src/main/java/org/kie/kogito/jobs/service/scheduler/BaseTimerJobScheduler.java", "diffHunk": "@@ -98,11 +129,18 @@ public BaseTimerJobScheduler(JobExecutor jobExecutor,\n                         .status(JobStatus.SCHEDULED)\n                         .build())\n                 .map(scheduledJob -> jobRepository.save(scheduledJob))\n-                .flatMapCompletionStage(p -> p)\n-                .buildRs();\n+                .flatMapCompletionStage(p -> p);\n+    }\n+\n+    /**\n+     * Check if it should be scheduled (on the current chunk) or saved to be scheduled later.\n+     * @return\n+     */\n+    private boolean isOnCurrentSchedulerChunk(Job job) {\n+        return job.getExpirationTime().isBefore(DateUtil.now().plusMinutes(schedulerChunkInMinutes));", "originalCommit": "2860a9ef2e48a44a58368c91688fff2bb20aed73", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM1ODk1MQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/308#discussion_r378358951", "bodyText": "Yes, the chunk is based on time, so basically the chunk is the interval from now until the defined interval, for instance, 10 minutes. In this way, the scheduler keeps in memory only the next X jobs on the current chunk.", "author": "tiagodolphine", "createdAt": "2020-02-12T16:19:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODEyNzU1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE0MDUyNQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/308#discussion_r378140525", "bodyText": "I guess this will run periodically so maybe changing log level to debug instead of info to not spam logs too much, wdyt?", "author": "mswiderski", "createdAt": "2020-02-12T09:48:01Z", "path": "addons/jobs/jobs-service/src/main/java/org/kie/kogito/jobs/service/scheduler/JobSchedulerManager.java", "diffHunk": "@@ -35,22 +41,65 @@\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(JobSchedulerManager.class);\n \n+    /**\n+     * The current chunk size  in minutes the scheduler handles, it is used to keep a limit number of jobs scheduled\n+     * in the in-memory scheduler.\n+     */\n+    @ConfigProperty(name = \"kogito.jobs-service.schedulerChunkInMinutes\")\n+    long schedulerChunkInMinutes;\n+\n+    /**\n+     * The interval the job loading method runs to fetch the persisted jobs from the repository.\n+     */\n+    @ConfigProperty(name = \"kogito.jobs-service.loadJobIntervalInMinutes\")\n+    long loadJobIntervalInMinutes;\n+\n     @Inject\n     VertxJobScheduler scheduler;\n \n     @Inject\n     ReactiveJobRepository repository;\n \n-    CompletionStage<Void> loadScheduledJobs(@Observes StartupEvent startupEvent) {\n-        LOGGER.info(\"Loading scheduled jobs\");\n-        return repository.findByStatus(JobStatus.SCHEDULED, JobStatus.RETRY)\n-                //is is necessary to skip error on the publisher to continue processing, otherwise the subscribe\n-                // terminated\n+    @Inject\n+    Vertx vertx;\n+\n+    void onStartup(@Observes StartupEvent startupEvent) {\n+        if (loadJobIntervalInMinutes > schedulerChunkInMinutes) {\n+            LOGGER.warn(\"The loadJobIntervalInMinutes ({}) cannot be greater than schedulerChunkInMinutes ({}), \" +\n+                                \"setting value {} for both\",\n+                        loadJobIntervalInMinutes,\n+                        schedulerChunkInMinutes,\n+                        schedulerChunkInMinutes);\n+            loadJobIntervalInMinutes = schedulerChunkInMinutes;\n+        }\n+\n+        //first execution\n+        vertx.runOnContext(v -> loadScheduledJobs());\n+        //periodic execution\n+        vertx.setPeriodic(TimeUnit.MINUTES.toMillis(loadJobIntervalInMinutes), id -> loadScheduledJobs());\n+    }\n+\n+    //Runs periodically loading the jobs from the repository in chunks\n+    void loadScheduledJobs() {\n+        loadJobsInCurrentChunk()", "originalCommit": "2860a9ef2e48a44a58368c91688fff2bb20aed73", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM1NzM0NA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/308#discussion_r378357344", "bodyText": "I'll change to debug the log for each job and keep the completed job load with info, this is important to check it the loading jobs is running properly from time to time.", "author": "tiagodolphine", "createdAt": "2020-02-12T16:17:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE0MDUyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM2NDAxNw==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/308#discussion_r378364017", "bodyText": "done", "author": "tiagodolphine", "createdAt": "2020-02-12T16:27:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE0MDUyNQ=="}], "type": "inlineReview"}, {"oid": "dd301d71d838116b42d560273b6fae0635c3df9d", "url": "https://github.com/kiegroup/kogito-runtimes/commit/dd301d71d838116b42d560273b6fae0635c3df9d", "message": "[Jobs Service] improve persisted jobs loading\n\nHandle pre processing job\n\nInserting the chunk logic and conifguration for the scheduler\n\nInmemory jobs loading and reschedule fixes\n\nset max results on infinispan repository\n\nChanging jobs loading to use vertx scheduling\n\nChanging jobs loading to use vertx scheduling\n\ninserting unit tests\n\nApply pr comments let the jobs load interval in the same size as the chunk\n\nKOGITO-532 Adding job load prioritization\n\nChanging log level to debug on jobs loading\n\nFix missing mock on JobSchedulerManagerTest", "committedDate": "2020-02-13T15:50:17Z", "type": "forcePushed"}, {"oid": "be05639e5e1724f2a8d5a732ea0014afb87b01bf", "url": "https://github.com/kiegroup/kogito-runtimes/commit/be05639e5e1724f2a8d5a732ea0014afb87b01bf", "message": "[Jobs Service] improve persisted jobs loading\n\nHandle pre processing job\n\nInserting the chunk logic and conifguration for the scheduler\n\nInmemory jobs loading and reschedule fixes\n\nset max results on infinispan repository\n\nChanging jobs loading to use vertx scheduling\n\nChanging jobs loading to use vertx scheduling\n\ninserting unit tests\n\nApply pr comments let the jobs load interval in the same size as the chunk\n\nKOGITO-532 Adding job load prioritization\n\nChanging log level to debug on jobs loading\n\nFix missing mock on JobSchedulerManagerTest\n\nFix missing mock on JobSchedulerManagerTest", "committedDate": "2020-02-13T18:00:02Z", "type": "forcePushed"}, {"oid": "f7b84aacd1216a65e93e765c8eab8e1be547a338", "url": "https://github.com/kiegroup/kogito-runtimes/commit/f7b84aacd1216a65e93e765c8eab8e1be547a338", "message": "[Jobs Service] improve persisted jobs loading\n\nHandle pre processing job\n\nInserting the chunk logic and conifguration for the scheduler\n\nInmemory jobs loading and reschedule fixes\n\nset max results on infinispan repository\n\nChanging jobs loading to use vertx scheduling\n\nChanging jobs loading to use vertx scheduling\n\ninserting unit tests\n\nApply pr comments let the jobs load interval in the same size as the chunk\n\nKOGITO-532 Adding job load prioritization\n\nChanging log level to debug on jobs loading\n\nFix missing mock on JobSchedulerManagerTest\n\nFix missing mock on JobSchedulerManagerTest\n\nFix missing mock on JobSchedulerManagerTest", "committedDate": "2020-02-13T20:42:36Z", "type": "forcePushed"}, {"oid": "8bbb68eda18f078409b29b460288891f43bf9be0", "url": "https://github.com/kiegroup/kogito-runtimes/commit/8bbb68eda18f078409b29b460288891f43bf9be0", "message": "[Jobs Service] improve persisted jobs loading\n\nHandle pre processing job\n\nInserting the chunk logic and conifguration for the scheduler\n\nInmemory jobs loading and reschedule fixes\n\nset max results on infinispan repository\n\nChanging jobs loading to use vertx scheduling\n\nChanging jobs loading to use vertx scheduling\n\ninserting unit tests\n\nApply pr comments let the jobs load interval in the same size as the chunk\n\nKOGITO-532 Adding job load prioritization\n\nChanging log level to debug on jobs loading\n\nFix missing mock on JobSchedulerManagerTest\n\nFix missing mock on JobSchedulerManagerTest\n\nFix missing mock on JobSchedulerManagerTest\n\nFix missing mock on JobSchedulerManagerTest", "committedDate": "2020-02-14T11:32:51Z", "type": "forcePushed"}, {"oid": "40e122c2a51ba62a73cf012b8ab3a5659ead4503", "url": "https://github.com/kiegroup/kogito-runtimes/commit/40e122c2a51ba62a73cf012b8ab3a5659ead4503", "message": "[Jobs Service] improve persisted jobs loading\n\nHandle pre processing job\n\nInserting the chunk logic and conifguration for the scheduler\n\nInmemory jobs loading and reschedule fixes\n\nset max results on infinispan repository\n\nChanging jobs loading to use vertx scheduling\n\nChanging jobs loading to use vertx scheduling\n\ninserting unit tests\n\nApply pr comments let the jobs load interval in the same size as the chunk\n\nKOGITO-532 Adding job load prioritization\n\nChanging log level to debug on jobs loading\n\nFix missing mock on JobSchedulerManagerTest\n\nFix missing mock on JobSchedulerManagerTest\n\nFix missing mock on JobSchedulerManagerTest\n\nFix missing mock on JobSchedulerManagerTest\n\nFix missing mock on JobSchedulerManagerTest", "committedDate": "2020-02-14T12:40:21Z", "type": "commit"}, {"oid": "40e122c2a51ba62a73cf012b8ab3a5659ead4503", "url": "https://github.com/kiegroup/kogito-runtimes/commit/40e122c2a51ba62a73cf012b8ab3a5659ead4503", "message": "[Jobs Service] improve persisted jobs loading\n\nHandle pre processing job\n\nInserting the chunk logic and conifguration for the scheduler\n\nInmemory jobs loading and reschedule fixes\n\nset max results on infinispan repository\n\nChanging jobs loading to use vertx scheduling\n\nChanging jobs loading to use vertx scheduling\n\ninserting unit tests\n\nApply pr comments let the jobs load interval in the same size as the chunk\n\nKOGITO-532 Adding job load prioritization\n\nChanging log level to debug on jobs loading\n\nFix missing mock on JobSchedulerManagerTest\n\nFix missing mock on JobSchedulerManagerTest\n\nFix missing mock on JobSchedulerManagerTest\n\nFix missing mock on JobSchedulerManagerTest\n\nFix missing mock on JobSchedulerManagerTest", "committedDate": "2020-02-14T12:40:21Z", "type": "forcePushed"}]}