{"pr_number": 389, "pr_title": "A set of improvements and enhancements for working with bpmn2 processes", "pr_createdAt": "2020-03-25T07:48:56Z", "pr_url": "https://github.com/kiegroup/kogito-runtimes/pull/389", "timeline": [{"oid": "86adc78893d69b68ccafbf8aa93f1ee61ab9918d", "url": "https://github.com/kiegroup/kogito-runtimes/commit/86adc78893d69b68ccafbf8aa93f1ee61ab9918d", "message": "allow to defined data intput and output associations on script task to control variables used", "committedDate": "2020-03-25T10:43:26Z", "type": "commit"}, {"oid": "b4282b00f97904d247aa1ff64a3c60a22638aa1d", "url": "https://github.com/kiegroup/kogito-runtimes/commit/b4282b00f97904d247aa1ff64a3c60a22638aa1d", "message": "expose node instance and process instance via work item so it can be accessed by work item handler", "committedDate": "2020-03-25T10:43:26Z", "type": "commit"}, {"oid": "3976bfb1c06ed3a033efa6f32549122f07823427", "url": "https://github.com/kiegroup/kogito-runtimes/commit/3976bfb1c06ed3a033efa6f32549122f07823427", "message": "allow to rely on errorCode of the error to handle work item exceptions", "committedDate": "2020-03-25T10:43:26Z", "type": "commit"}, {"oid": "a1267bf3bbcf16d74eb2cabf5d4aca07a7ae6c24", "url": "https://github.com/kiegroup/kogito-runtimes/commit/a1267bf3bbcf16d74eb2cabf5d4aca07a7ae6c24", "message": "externalize BpmnProcess compilation to separate class and allow to override to extend it, allow DMN namespace as script format", "committedDate": "2020-03-25T10:43:26Z", "type": "commit"}, {"oid": "7de9b5c38d41d0eaa0e3c7323d484b7597974bb3", "url": "https://github.com/kiegroup/kogito-runtimes/commit/7de9b5c38d41d0eaa0e3c7323d484b7597974bb3", "message": "allow to use custom dialects for assignmnets instead of hardcoded XPath", "committedDate": "2020-03-25T10:43:26Z", "type": "commit"}, {"oid": "144bd5fd3433bbd3f72b11f0b8a57bdf84bc1cc9", "url": "https://github.com/kiegroup/kogito-runtimes/commit/144bd5fd3433bbd3f72b11f0b8a57bdf84bc1cc9", "message": "added support for start timer event including code generation, added also life cycle methods (Activate/deactivate for process to allow control on availability of the process for execution", "committedDate": "2020-03-25T10:43:26Z", "type": "commit"}, {"oid": "144bd5fd3433bbd3f72b11f0b8a57bdf84bc1cc9", "url": "https://github.com/kiegroup/kogito-runtimes/commit/144bd5fd3433bbd3f72b11f0b8a57bdf84bc1cc9", "message": "added support for start timer event including code generation, added also life cycle methods (Activate/deactivate for process to allow control on availability of the process for execution", "committedDate": "2020-03-25T10:43:26Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkzODQ2NQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/389#discussion_r397938465", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testServiceTaskWithAccessoWorkItemInfo() throws Exception {\n          \n          \n            \n                public void testServiceTaskWithAccessToWorkItemInfo() throws Exception {\n          \n      \n    \n    \n  \n\nis that what you mean?", "author": "cristianonicolai", "createdAt": "2020-03-25T15:19:14Z", "path": "jbpm/jbpm-bpmn2/src/test/java/org/jbpm/bpmn2/ActivityTest.java", "diffHunk": "@@ -966,6 +1002,29 @@ public void testServiceTask() throws Exception {\n         assertProcessInstanceFinished(processInstance, ksession);\n         assertEquals(\"Hello john!\", processInstance.getVariable(\"s\"));\n     }\n+    \n+    @Test\n+    public void testServiceTaskWithAccessoWorkItemInfo() throws Exception {", "originalCommit": "144bd5fd3433bbd3f72b11f0b8a57bdf84bc1cc9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk3NTc4Ng==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/389#discussion_r397975786", "bodyText": "yes, indeed that was what I meant, will update", "author": "mswiderski", "createdAt": "2020-03-25T16:05:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkzODQ2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM4NDU2NA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/389#discussion_r398384564", "bodyText": "fixed", "author": "mswiderski", "createdAt": "2020-03-26T08:15:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkzODQ2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk0MjAzNg==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/389#discussion_r397942036", "bodyText": "Do we need this var? doesnt seem to be used.", "author": "cristianonicolai", "createdAt": "2020-03-25T15:23:35Z", "path": "jbpm/jbpm-flow/src/main/java/org/kie/kogito/process/impl/AbstractProcess.java", "diffHunk": "@@ -41,6 +52,10 @@\n     protected final ProcessRuntimeServiceProvider services;\n \n     protected CompletionEventListener completionEventListener = new CompletionEventListener();\n+    \n+    protected boolean started;", "originalCommit": "144bd5fd3433bbd3f72b11f0b8a57bdf84bc1cc9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk3NjM3MA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/389#discussion_r397976370", "bodyText": "I left it here as it might become useful if we want to restrict the access to certain features by the extending classes since this is just abstract so the actual lasses can make use of it.", "author": "mswiderski", "createdAt": "2020-03-25T16:06:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk0MjAzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMyNDQ0MQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/389#discussion_r398324441", "bodyText": "np", "author": "cristianonicolai", "createdAt": "2020-03-26T05:24:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk0MjAzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM4NDUwOA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/389#discussion_r398384508", "bodyText": "renamed it to activated as it is more aligned with the methods (activate/deactivate)", "author": "mswiderski", "createdAt": "2020-03-26T08:15:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk0MjAzNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk0NTc5MA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/389#discussion_r397945790", "bodyText": "for these two tests, could be possible to verify that cancelJob was called x number of times?", "author": "cristianonicolai", "createdAt": "2020-03-25T15:28:15Z", "path": "kogito-codegen/src/test/java/org/kie/kogito/codegen/tests/TimerEventTest.java", "diffHunk": "@@ -208,4 +209,78 @@ public void testBoundaryDurationTimerEventOnSubprocess() throws Exception {\n      \n         assertThat(processInstance.status()).isEqualTo(ProcessInstance.STATE_COMPLETED);\n     }\n+    \n+    @Test\n+    public void testStartTimerEvent() throws Exception {\n+        \n+        Application app = generateCodeProcessesOnly(\"timer/StartTimerDuration.bpmn2\");        \n+        assertThat(app).isNotNull();\n+        \n+        NodeLeftCountDownProcessEventListener listener = new NodeLeftCountDownProcessEventListener(\"timer fired\", 1);\n+        ((DefaultProcessEventListenerConfig)app.config().process().processEventListeners()).register(listener);\n+                \n+        Process<? extends Model> p = app.processes().processById(\"defaultPackage.TimerProcess\");\n+        // activate to schedule timers\n+        p.activate();\n+        \n+        boolean completed = listener.waitTillCompleted(5000);\n+        assertThat(completed).isTrue();\n+        \n+        Collection<?> instances = p.instances().values();\n+        assertThat(instances).hasSize(1);\n+        \n+        ProcessInstance<?> processInstance = (ProcessInstance<?>) instances.iterator().next();\n+        assertThat(processInstance).isNotNull();\n+        \n+        assertThat(processInstance.status()).isEqualTo(ProcessInstance.STATE_ACTIVE);\n+        \n+        processInstance.abort();\n+        assertThat(processInstance.status()).isEqualTo(ProcessInstance.STATE_ABORTED);\n+        \n+        instances = p.instances().values();\n+        assertThat(instances).hasSize(0);\n+        \n+        p.deactivate();", "originalCommit": "144bd5fd3433bbd3f72b11f0b8a57bdf84bc1cc9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk3NzA2OQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/389#discussion_r397977069", "bodyText": "will have a look into that... though not sure we currently support any events on the JobService ... the one used by default.", "author": "mswiderski", "createdAt": "2020-03-25T16:06:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk0NTc5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMyNDQwMg==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/389#discussion_r398324402", "bodyText": "ok, if not maybe using something like spy from Mockito could help?", "author": "cristianonicolai", "createdAt": "2020-03-26T05:24:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk0NTc5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM4NDM0OA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/389#discussion_r398384348", "bodyText": "this was actually not needed here are the test uses timer duration meaning it's one time timer execution. so removed it.", "author": "mswiderski", "createdAt": "2020-03-26T08:15:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk0NTc5MA=="}], "type": "inlineReview"}, {"oid": "87a254f7a8fd3d7a540af314e0b10f92be8657c7", "url": "https://github.com/kiegroup/kogito-runtimes/commit/87a254f7a8fd3d7a540af314e0b10f92be8657c7", "message": "applied sonar and review comments", "committedDate": "2020-03-26T08:14:04Z", "type": "commit"}]}