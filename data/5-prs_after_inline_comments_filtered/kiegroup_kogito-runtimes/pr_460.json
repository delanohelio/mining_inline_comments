{"pr_number": 460, "pr_title": "KOGITO-1924 DMN DMNDecisionModel to expose via Kogito API DMNModel", "pr_createdAt": "2020-04-20T11:22:07Z", "pr_url": "https://github.com/kiegroup/kogito-runtimes/pull/460", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTI5OTE2MA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/460#discussion_r411299160", "bodyText": "my preference would be to @Override this so it is available up in Kogito API's DecisionModel\ndo you concur @mswiderski ? :)", "author": "tarilabs", "createdAt": "2020-04-20T11:23:09Z", "path": "drools/kogito-dmn/src/main/java/org/kie/kogito/dmn/DmnDecisionModel.java", "diffHunk": "@@ -26,19 +26,22 @@ public DMNContext newContext(Map<String, Object> variables) {\n \n     @Override\n     public DMNResult evaluateAll(DMNContext context) {\n-        DMNModel dmnModel = dmnRuntime.getModel(namespace, name);\n-        if (dmnModel == null) {\n-            throw new IllegalArgumentException(\"DMN model '\" + name + \"' not found with namespace '\" + namespace + \"'\");\n-        }\n+        DMNModel dmnModel = getDMNModel();\n         return dmnRuntime.evaluateAll(dmnModel, context);\n     }\n \n     @Override\n     public DMNResult evaluateDecisionService(DMNContext context, String decisionServiceName) {\n+        DMNModel dmnModel = getDMNModel();\n+        return dmnRuntime.evaluateDecisionService(dmnModel, context, decisionServiceName);\n+    }\n+\n+    public DMNModel getDMNModel() {", "originalCommit": "fddfaa0d0be3bd7165f0995298e0dd49876a3e2c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTMwMzc5Mg==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/460#discussion_r411303792", "bodyText": "+1 to expose it on DecisionModel if possible", "author": "mswiderski", "createdAt": "2020-04-20T11:31:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTI5OTE2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTMzMTk3OQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/460#discussion_r411331979", "bodyText": "done with 49dbda4", "author": "tarilabs", "createdAt": "2020-04-20T12:20:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTI5OTE2MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTMzNTk0NA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/460#discussion_r411335944", "bodyText": "I would prefer to do it in the constructor and store it as field. Is there any reason to keep this get lazy?", "author": "danielezonca", "createdAt": "2020-04-20T12:27:21Z", "path": "drools/kogito-dmn/src/main/java/org/kie/kogito/dmn/DmnDecisionModel.java", "diffHunk": "@@ -26,19 +26,23 @@ public DMNContext newContext(Map<String, Object> variables) {\n \n     @Override\n     public DMNResult evaluateAll(DMNContext context) {\n-        DMNModel dmnModel = dmnRuntime.getModel(namespace, name);\n-        if (dmnModel == null) {\n-            throw new IllegalArgumentException(\"DMN model '\" + name + \"' not found with namespace '\" + namespace + \"'\");\n-        }\n+        DMNModel dmnModel = getDMNModel();\n         return dmnRuntime.evaluateAll(dmnModel, context);\n     }\n \n     @Override\n     public DMNResult evaluateDecisionService(DMNContext context, String decisionServiceName) {\n+        DMNModel dmnModel = getDMNModel();\n+        return dmnRuntime.evaluateDecisionService(dmnModel, context, decisionServiceName);\n+    }\n+\n+    @Override\n+    public DMNModel getDMNModel() {\n         DMNModel dmnModel = dmnRuntime.getModel(namespace, name);\n         if (dmnModel == null) {\n-            throw new IllegalArgumentException(\"DMN model '\" + name + \"' not found with namespace '\" + namespace + \"'\");\n+            throw new IllegalStateException(\"DMN model '\" + name + \"' not found with namespace '\" + namespace + \"' in the inherent DMNRuntime.\");\n         }\n-        return dmnRuntime.evaluateDecisionService(dmnModel, context, decisionServiceName);\n+        return dmnModel;", "originalCommit": "49dbda406dc34d687bafc1236aa9e9df7c189716", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f86d8ed6e54b239f71c38fe07c1bba85d25fa477", "url": "https://github.com/kiegroup/kogito-runtimes/commit/f86d8ed6e54b239f71c38fe07c1bba85d25fa477", "message": "KOGITO-1924 DMN DMNDecisionModel to expose via Kogito API DMNModel", "committedDate": "2020-04-21T08:07:14Z", "type": "commit"}, {"oid": "6c5cd242740c2a6b4e335fede0050b30d8c9aeb7", "url": "https://github.com/kiegroup/kogito-runtimes/commit/6c5cd242740c2a6b4e335fede0050b30d8c9aeb7", "message": "Kogito API amend\n\nAs discussed here:\nhttps://github.com/kiegroup/kogito-runtimes/pull/460#discussion_r411303792", "committedDate": "2020-04-21T08:07:15Z", "type": "commit"}, {"oid": "a12d54a678b7f6843f1cd4d40d85fcf53b8a40f5", "url": "https://github.com/kiegroup/kogito-runtimes/commit/a12d54a678b7f6843f1cd4d40d85fcf53b8a40f5", "message": "implement code review feedback", "committedDate": "2020-04-21T08:10:42Z", "type": "commit"}, {"oid": "a12d54a678b7f6843f1cd4d40d85fcf53b8a40f5", "url": "https://github.com/kiegroup/kogito-runtimes/commit/a12d54a678b7f6843f1cd4d40d85fcf53b8a40f5", "message": "implement code review feedback", "committedDate": "2020-04-21T08:10:42Z", "type": "forcePushed"}, {"oid": "bb6c2ee0cce5694bbe5580e0c8e7aac7ba6a9bae", "url": "https://github.com/kiegroup/kogito-runtimes/commit/bb6c2ee0cce5694bbe5580e0c8e7aac7ba6a9bae", "message": ".", "committedDate": "2020-04-21T08:49:27Z", "type": "commit"}]}