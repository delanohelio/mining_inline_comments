{"pr_number": 374, "pr_title": "[KOGITO-1485] add test case for hot reload", "pr_createdAt": "2020-03-18T13:21:38Z", "pr_url": "https://github.com/kiegroup/kogito-runtimes/pull/374", "timeline": [{"oid": "400946d903d3a8c7670dfd699d7b9099970016bf", "url": "https://github.com/kiegroup/kogito-runtimes/commit/400946d903d3a8c7670dfd699d7b9099970016bf", "message": "[KOGITO-1485] add test case for hot reload", "committedDate": "2020-03-18T13:20:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM1MDc5OA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/374#discussion_r394350798", "bodyText": "why a txt and not the drl directly ?", "author": "evacchi", "createdAt": "2020-03-18T13:37:22Z", "path": "kogito-quarkus-extension/integration-test/src/test/java/io/quarkus/it/kogito/drools/HotReloadTest.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/*\n+ * Copyright 2005 JBoss Inc\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.quarkus.it.kogito.drools;\n+\n+import java.util.List;\n+import java.util.function.Supplier;\n+\n+import io.quarkus.test.QuarkusDevModeTest;\n+import io.restassured.http.ContentType;\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+\n+import static io.restassured.RestAssured.given;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+public class HotReloadTest {\n+\n+    private static final String PACKAGE = \"io.quarkus.it.kogito.drools\";\n+    private static final String RESOURCE_FILE = PACKAGE.replace( '.', '/' ) + \"/adult.drl\";\n+\n+    @RegisterExtension\n+    final static QuarkusDevModeTest test = new QuarkusDevModeTest()\n+            .setArchiveProducer(new Supplier<JavaArchive>() {\n+                @Override\n+                public JavaArchive get() {\n+                    return ShrinkWrap.create(JavaArchive.class)\n+                            .addAsResource( \"adult.txt\", RESOURCE_FILE );", "originalCommit": "400946d903d3a8c7670dfd699d7b9099970016bf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM1MjY4MQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/374#discussion_r394352681", "bodyText": "I could make it a drl file, but if I do so it will be also compiled together with other assets even when running unrelated tests, which is not harmful (I think), but imo useless.", "author": "mariofusco", "createdAt": "2020-03-18T13:40:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM1MDc5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM4MjU0MQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/374#discussion_r394382541", "bodyText": "ok I was misunderstanding the code: this is renaming a txt into DRL, triggering compile, then the text replace action triggers hot reload. good", "author": "evacchi", "createdAt": "2020-03-18T14:21:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM1MDc5OA=="}], "type": "inlineReview"}]}