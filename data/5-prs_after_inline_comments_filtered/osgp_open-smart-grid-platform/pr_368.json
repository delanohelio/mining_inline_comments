{"pr_number": 368, "pr_title": "Feature/flex 5402 sorting filtering messages page", "pr_createdAt": "2020-07-08T15:41:59Z", "pr_url": "https://github.com/OSGP/open-smart-grid-platform/pull/368", "timeline": [{"oid": "a2e7f0ca161c684c11140330fbdcbd9b6ca9d367", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/a2e7f0ca161c684c11140330fbdcbd9b6ca9d367", "message": "Extending FindMessageLogsRequest", "committedDate": "2020-07-01T07:25:11Z", "type": "commit"}, {"oid": "406ff577e9e9c109b5aa2e1cf0acf5c4e2230388", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/406ff577e9e9c109b5aa2e1cf0acf5c4e2230388", "message": "Null pointer removal", "committedDate": "2020-07-02T14:04:51Z", "type": "commit"}, {"oid": "6b3aa15d7cb779b47678fad503a89bc053cb42f3", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/6b3aa15d7cb779b47678fad503a89bc053cb42f3", "message": "Adding slices for DeviceLogItems and method to filter the items", "committedDate": "2020-07-03T10:05:59Z", "type": "commit"}, {"oid": "2306c7b438164bc2874e5780accb0f444c073850", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/2306c7b438164bc2874e5780accb0f444c073850", "message": "Merge remote-tracking branch 'origin/development' into feature/FLEX-5402-sorting-filtering-messages-page", "committedDate": "2020-07-03T10:06:15Z", "type": "commit"}, {"oid": "e506b494e213f982eeee8d0da98d2bd16b56a37a", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/e506b494e213f982eeee8d0da98d2bd16b56a37a", "message": "WIP", "committedDate": "2020-07-03T15:42:33Z", "type": "commit"}, {"oid": "8add4c43b69daab9dd9c831aca52e1f106976ade", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/8add4c43b69daab9dd9c831aca52e1f106976ade", "message": "Adding filters on deviceLogItems including test", "committedDate": "2020-07-06T11:09:37Z", "type": "commit"}, {"oid": "5c60c87de7b0603921cbe0a5ca31203d46e4481a", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/5c60c87de7b0603921cbe0a5ca31203d46e4481a", "message": "WIP", "committedDate": "2020-07-06T13:48:18Z", "type": "commit"}, {"oid": "785202e6a87a06a9579e7f7d9d125dbc16516e9c", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/785202e6a87a06a9579e7f7d9d125dbc16516e9c", "message": "Properly working tests for the filter options for the messages page", "committedDate": "2020-07-06T14:11:48Z", "type": "commit"}, {"oid": "0d49b5c1c78568232e20d33cf5007b959da9de9c", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/0d49b5c1c78568232e20d33cf5007b959da9de9c", "message": "Working Specification filtering for DeviceLogItem", "committedDate": "2020-07-07T16:09:49Z", "type": "commit"}, {"oid": "31a2901de47ddd30c8dd0af7a5f5b4f2680e76b0", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/31a2901de47ddd30c8dd0af7a5f5b4f2680e76b0", "message": "Merge branch 'development' of github.com:OSGP/open-smart-grid-platform into feature/FLEX-5402-sorting-filtering-messages-page", "committedDate": "2020-07-07T20:03:23Z", "type": "commit"}, {"oid": "2ee8b4b61b617c1e8a59dc1c1f7dc7df0de1a385", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/2ee8b4b61b617c1e8a59dc1c1f7dc7df0de1a385", "message": "XSD update", "committedDate": "2020-07-08T08:46:07Z", "type": "commit"}, {"oid": "af8e23ba6ce00644dcb48c1581ffa9ae097bb25c", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/af8e23ba6ce00644dcb48c1581ffa9ae097bb25c", "message": "Merge branch 'feature/FLEX-5402-sorting-filtering-messages-page' of github.com:OSGP/open-smart-grid-platform into feature/FLEX-5402-sorting-filtering-messages-page", "committedDate": "2020-07-08T08:47:07Z", "type": "commit"}, {"oid": "943ed264cca8741c3b4492046c5ed4560fe4fb15", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/943ed264cca8741c3b4492046c5ed4560fe4fb15", "message": "FLEX-5402 ~ Replaces creation by modification time", "committedDate": "2020-07-08T08:47:43Z", "type": "commit"}, {"oid": "d34f4d43d9c48e636ecde6f784cfec3de8da212c", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/d34f4d43d9c48e636ecde6f784cfec3de8da212c", "message": "FLEX-5402 ~ Replaces NONE by ALL in specification", "committedDate": "2020-07-08T08:56:24Z", "type": "commit"}, {"oid": "0bee138fed47d63dd5caf645664eedc090ee55ee", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/0bee138fed47d63dd5caf645664eedc090ee55ee", "message": "WildcardUtil move and using the util for device log filtering", "committedDate": "2020-07-08T09:09:53Z", "type": "commit"}, {"oid": "59f6f6333ce9f03a8b10efce064effb26a1be8b5", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/59f6f6333ce9f03a8b10efce064effb26a1be8b5", "message": "Merge remote-tracking branch 'origin/feature/FLEX-5402-sorting-filtering-messages-page' into feature/FLEX-5402-sorting-filtering-messages-page", "committedDate": "2020-07-08T09:10:05Z", "type": "commit"}, {"oid": "4891fe4e702d441f1950d947c49477f37ebb391a", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/4891fe4e702d441f1950d947c49477f37ebb391a", "message": "FLEX-5402 ~ Fixes incorrect test", "committedDate": "2020-07-08T09:19:30Z", "type": "commit"}, {"oid": "ddc609903aadb3433ce26b9d8b1e77243e2e739b", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/ddc609903aadb3433ce26b9d8b1e77243e2e739b", "message": "FLEX-5402 ~ Removes redundant code", "committedDate": "2020-07-08T09:19:49Z", "type": "commit"}, {"oid": "b6c2b59de24e4feb383d8511d2889d59b046e58e", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/b6c2b59de24e4feb383d8511d2889d59b046e58e", "message": "Merge branch 'feature/FLEX-5402-sorting-filtering-messages-page' of github.com:OSGP/open-smart-grid-platform into feature/FLEX-5402-sorting-filtering-messages-page", "committedDate": "2020-07-08T09:20:06Z", "type": "commit"}, {"oid": "a49bcb747ba3808634e49fc6d2f3810995872bea", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/a49bcb747ba3808634e49fc6d2f3810995872bea", "message": "String wildcard contain check", "committedDate": "2020-07-08T10:21:02Z", "type": "commit"}, {"oid": "1c16401c2d78aa1def1534348efab6342b979c24", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/1c16401c2d78aa1def1534348efab6342b979c24", "message": "Working wildcard plus testing properly", "committedDate": "2020-07-08T14:09:37Z", "type": "commit"}, {"oid": "74e6d999ead1fea11af5182c2c689a9a61ee98d1", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/74e6d999ead1fea11af5182c2c689a9a61ee98d1", "message": "Adding sorting to the DeviceLogItemFilter", "committedDate": "2020-07-08T14:47:45Z", "type": "commit"}, {"oid": "63ff97bce0c3d9924e3ca574e37c8f8d82d0a31d", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/63ff97bce0c3d9924e3ca574e37c8f8d82d0a31d", "message": "Working sort test", "committedDate": "2020-07-08T15:38:13Z", "type": "commit"}, {"oid": "c96816f79e764a68167b3046330688ec0a4a7185", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/c96816f79e764a68167b3046330688ec0a4a7185", "message": "Merge remote-tracking branch 'origin/development' into feature/FLEX-5402-sorting-filtering-messages-page", "committedDate": "2020-07-08T15:39:15Z", "type": "commit"}, {"oid": "8d8c1256b3601adea7f2bc2a72c84fe66e0e56bb", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/8d8c1256b3601adea7f2bc2a72c84fe66e0e56bb", "message": "FLEX-5402 ~ Updates DeviceLogItemSteps", "committedDate": "2020-07-08T21:05:58Z", "type": "commit"}, {"oid": "ab475e8e753c6c235930f57bbde09735245a13bb", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/ab475e8e753c6c235930f57bbde09735245a13bb", "message": "FLEX-5402 ~ Resolves Sonar issues", "committedDate": "2020-07-09T12:29:32Z", "type": "commit"}, {"oid": "dbefefd8fce0df47d4b27ce081e5b832aabaa939", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/dbefefd8fce0df47d4b27ce081e5b832aabaa939", "message": "FLEX-5402 ~ Improves scenario readability and step\n\nReadability: use StartTime/EndTime instead of SetPointStartTime/SetPointEndTime.\nStep: corrected the algorithm for the ordering of device identifications in response messages.", "committedDate": "2020-07-09T15:37:08Z", "type": "commit"}, {"oid": "722533abf9190705ae6696ed718304138f38aed4", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/722533abf9190705ae6696ed718304138f38aed4", "message": "FLEX-5402 ~ Marked tests for nightly build only", "committedDate": "2020-07-09T17:18:01Z", "type": "commit"}, {"oid": "56c1a2c5e4d87f81cd6a77f63ab2c85043a4aaf0", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/56c1a2c5e4d87f81cd6a77f63ab2c85043a4aaf0", "message": "FLEX-5402 ~ Processes review comments", "committedDate": "2020-07-10T14:41:00Z", "type": "commit"}, {"oid": "6c0272b3ce0ca768de9340c4d03fa81f1ae700e2", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/6c0272b3ce0ca768de9340c4d03fa81f1ae700e2", "message": "FLEX-5402 ~ Fixes date/time converter\n\nFixes the conversion between XMLGregorianCalendar and ZonedDateTime for timezones other than UTC.", "committedDate": "2020-07-19T15:51:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE4NDExNw==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/368#discussion_r452184117", "bodyText": "Don't use printStackTrace. When something should be logged, use a LOGGER object, created using \"LoggerFactory.getLogger(PutYourClassNameHere.class)\". PrintStackTrace does not log to our normal output files.\nWhen the exception occurs, the test should fail. In this case, it's therefore best to just throw the exception. Suppressing it can cause strange effects.", "author": "rlemmers", "createdAt": "2020-07-09T12:35:38Z", "path": "integration-tests/cucumber-tests-platform-common/src/test/java/org/opensmartgridplatform/cucumber/platform/common/glue/steps/ws/admin/devicemanagement/FilterMessageLogsSteps.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/**\n+ *  Copyright 2020 Smart Society Services B.V.\n+ */\n+package org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.admin.devicemanagement;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.opensmartgridplatform.cucumber.core.ReadSettingsHelper.getString;\n+\n+import java.io.IOException;\n+import java.security.GeneralSecurityException;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.opensmartgridplatform.adapter.ws.schema.admin.devicemanagement.FindMessageLogsRequest;\n+import org.opensmartgridplatform.adapter.ws.schema.admin.devicemanagement.FindMessageLogsResponse;\n+import org.opensmartgridplatform.adapter.ws.schema.admin.devicemanagement.MessageLog;\n+import org.opensmartgridplatform.adapter.ws.schema.admin.devicemanagement.SortDirectionEnum;\n+import org.opensmartgridplatform.cucumber.core.ScenarioContext;\n+import org.opensmartgridplatform.cucumber.platform.common.PlatformCommonDefaults;\n+import org.opensmartgridplatform.cucumber.platform.common.PlatformCommonKeys;\n+import org.opensmartgridplatform.cucumber.platform.common.support.ws.admin.AdminDeviceManagementClient;\n+import org.opensmartgridplatform.cucumber.platform.inputparsers.XmlGregorianCalendarInputParser;\n+import org.opensmartgridplatform.shared.exceptionhandling.WebServiceSecurityException;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+import io.cucumber.java.en.Then;\n+import io.cucumber.java.en.When;\n+\n+public class FilterMessageLogsSteps {\n+\n+    @Autowired\n+    private AdminDeviceManagementClient client;\n+\n+    @When(\"receiving a message log request without a filter\")\n+    public void getMessageLogNoFilter() throws WebServiceSecurityException, GeneralSecurityException, IOException {\n+        final FindMessageLogsRequest request = new FindMessageLogsRequest();\n+        ScenarioContext.current().put(PlatformCommonKeys.RESPONSE, this.client.findMessageLogs(request));\n+    }\n+\n+    @When(\"^receiving a filter message log request$\")\n+    public void getMessageLogFilter(final Map<String, String> requestParameters) throws IllegalArgumentException {\n+        final FindMessageLogsRequest request = new FindMessageLogsRequest();\n+\n+        if (requestParameters.containsKey(PlatformCommonKeys.KEY_DEVICE_IDENTIFICATION)) {\n+            request.setDeviceIdentification(getString(requestParameters, PlatformCommonKeys.KEY_DEVICE_IDENTIFICATION,\n+                    PlatformCommonDefaults.DEFAULT_DEVICE_IDENTIFICATION));\n+        }\n+        if (requestParameters.containsKey(PlatformCommonKeys.KEY_ORGANIZATION_IDENTIFICATION)) {\n+            request.setOrganisationIdentification(\n+                    getString(requestParameters, PlatformCommonKeys.KEY_ORGANIZATION_IDENTIFICATION,\n+                            PlatformCommonDefaults.DEFAULT_ORGANIZATION_IDENTIFICATION));\n+        }\n+        if (requestParameters.containsKey(PlatformCommonKeys.KEY_SETPOINT_START_TIME)) {\n+            request.setStartTime(XmlGregorianCalendarInputParser.parse(getString(requestParameters,\n+                    PlatformCommonKeys.KEY_SETPOINT_START_TIME, PlatformCommonDefaults.DEFAULT_BEGIN_DATE)));\n+        }\n+        if (requestParameters.containsKey(PlatformCommonKeys.KEY_SETPOINT_END_TIME)) {\n+            request.setEndTime(XmlGregorianCalendarInputParser.parse(getString(requestParameters,\n+                    PlatformCommonKeys.KEY_SETPOINT_END_TIME, PlatformCommonDefaults.DEFAULT_END_DATE)));\n+        }\n+        if (requestParameters.containsKey(PlatformCommonKeys.KEY_SORT_DIR)) {\n+\n+            if ((requestParameters.get(PlatformCommonKeys.KEY_SORT_DIR)).equals(\"ASC\")) {\n+                request.setSortDirection(SortDirectionEnum.ASC);\n+            } else if ((requestParameters.get(PlatformCommonKeys.KEY_SORT_DIR)).equals(\"DESC\")) {\n+                request.setSortDirection(SortDirectionEnum.DESC);\n+            } else {\n+                throw new IllegalArgumentException(\"Sort direction not properly set\");\n+            }\n+\n+        }\n+        if (requestParameters.containsKey(PlatformCommonKeys.KEY_SORTED_BY)) {\n+            request.setSortBy(requestParameters.get(PlatformCommonKeys.KEY_SORTED_BY));\n+        }\n+\n+        try {\n+            ScenarioContext.current().put(PlatformCommonKeys.RESPONSE, this.client.findMessageLogs(request));\n+        } catch (final WebServiceSecurityException e) {\n+            e.printStackTrace();", "originalCommit": "8d8c1256b3601adea7f2bc2a72c84fe66e0e56bb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE4Njg0Mg==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/368#discussion_r452186842", "bodyText": "This can be done easier using method ReadSettingsHelper.getEnum(..).", "author": "rlemmers", "createdAt": "2020-07-09T12:40:11Z", "path": "integration-tests/cucumber-tests-platform-common/src/test/java/org/opensmartgridplatform/cucumber/platform/common/glue/steps/ws/admin/devicemanagement/FilterMessageLogsSteps.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/**\n+ *  Copyright 2020 Smart Society Services B.V.\n+ */\n+package org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.admin.devicemanagement;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.opensmartgridplatform.cucumber.core.ReadSettingsHelper.getString;\n+\n+import java.io.IOException;\n+import java.security.GeneralSecurityException;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.opensmartgridplatform.adapter.ws.schema.admin.devicemanagement.FindMessageLogsRequest;\n+import org.opensmartgridplatform.adapter.ws.schema.admin.devicemanagement.FindMessageLogsResponse;\n+import org.opensmartgridplatform.adapter.ws.schema.admin.devicemanagement.MessageLog;\n+import org.opensmartgridplatform.adapter.ws.schema.admin.devicemanagement.SortDirectionEnum;\n+import org.opensmartgridplatform.cucumber.core.ScenarioContext;\n+import org.opensmartgridplatform.cucumber.platform.common.PlatformCommonDefaults;\n+import org.opensmartgridplatform.cucumber.platform.common.PlatformCommonKeys;\n+import org.opensmartgridplatform.cucumber.platform.common.support.ws.admin.AdminDeviceManagementClient;\n+import org.opensmartgridplatform.cucumber.platform.inputparsers.XmlGregorianCalendarInputParser;\n+import org.opensmartgridplatform.shared.exceptionhandling.WebServiceSecurityException;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+import io.cucumber.java.en.Then;\n+import io.cucumber.java.en.When;\n+\n+public class FilterMessageLogsSteps {\n+\n+    @Autowired\n+    private AdminDeviceManagementClient client;\n+\n+    @When(\"receiving a message log request without a filter\")\n+    public void getMessageLogNoFilter() throws WebServiceSecurityException, GeneralSecurityException, IOException {\n+        final FindMessageLogsRequest request = new FindMessageLogsRequest();\n+        ScenarioContext.current().put(PlatformCommonKeys.RESPONSE, this.client.findMessageLogs(request));\n+    }\n+\n+    @When(\"^receiving a filter message log request$\")\n+    public void getMessageLogFilter(final Map<String, String> requestParameters) throws IllegalArgumentException {\n+        final FindMessageLogsRequest request = new FindMessageLogsRequest();\n+\n+        if (requestParameters.containsKey(PlatformCommonKeys.KEY_DEVICE_IDENTIFICATION)) {\n+            request.setDeviceIdentification(getString(requestParameters, PlatformCommonKeys.KEY_DEVICE_IDENTIFICATION,\n+                    PlatformCommonDefaults.DEFAULT_DEVICE_IDENTIFICATION));\n+        }\n+        if (requestParameters.containsKey(PlatformCommonKeys.KEY_ORGANIZATION_IDENTIFICATION)) {\n+            request.setOrganisationIdentification(\n+                    getString(requestParameters, PlatformCommonKeys.KEY_ORGANIZATION_IDENTIFICATION,\n+                            PlatformCommonDefaults.DEFAULT_ORGANIZATION_IDENTIFICATION));\n+        }\n+        if (requestParameters.containsKey(PlatformCommonKeys.KEY_SETPOINT_START_TIME)) {\n+            request.setStartTime(XmlGregorianCalendarInputParser.parse(getString(requestParameters,\n+                    PlatformCommonKeys.KEY_SETPOINT_START_TIME, PlatformCommonDefaults.DEFAULT_BEGIN_DATE)));\n+        }\n+        if (requestParameters.containsKey(PlatformCommonKeys.KEY_SETPOINT_END_TIME)) {\n+            request.setEndTime(XmlGregorianCalendarInputParser.parse(getString(requestParameters,\n+                    PlatformCommonKeys.KEY_SETPOINT_END_TIME, PlatformCommonDefaults.DEFAULT_END_DATE)));\n+        }\n+        if (requestParameters.containsKey(PlatformCommonKeys.KEY_SORT_DIR)) {\n+\n+            if ((requestParameters.get(PlatformCommonKeys.KEY_SORT_DIR)).equals(\"ASC\")) {\n+                request.setSortDirection(SortDirectionEnum.ASC);\n+            } else if ((requestParameters.get(PlatformCommonKeys.KEY_SORT_DIR)).equals(\"DESC\")) {\n+                request.setSortDirection(SortDirectionEnum.DESC);\n+            } else {\n+                throw new IllegalArgumentException(\"Sort direction not properly set\");\n+            }", "originalCommit": "8d8c1256b3601adea7f2bc2a72c84fe66e0e56bb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE5MzIzMw==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/368#discussion_r452193233", "bodyText": "This doesn't guarantee the order of the ID's in messageLogs.\nFor instance: [3, 4, 5, 3, 4, 5] would result in [3, 4, 5]. The end result is ordered, but the initial list isn't.", "author": "rlemmers", "createdAt": "2020-07-09T12:51:09Z", "path": "integration-tests/cucumber-tests-platform-common/src/test/java/org/opensmartgridplatform/cucumber/platform/common/glue/steps/ws/admin/devicemanagement/FilterMessageLogsSteps.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/**\n+ *  Copyright 2020 Smart Society Services B.V.\n+ */\n+package org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.admin.devicemanagement;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.opensmartgridplatform.cucumber.core.ReadSettingsHelper.getString;\n+\n+import java.io.IOException;\n+import java.security.GeneralSecurityException;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.opensmartgridplatform.adapter.ws.schema.admin.devicemanagement.FindMessageLogsRequest;\n+import org.opensmartgridplatform.adapter.ws.schema.admin.devicemanagement.FindMessageLogsResponse;\n+import org.opensmartgridplatform.adapter.ws.schema.admin.devicemanagement.MessageLog;\n+import org.opensmartgridplatform.adapter.ws.schema.admin.devicemanagement.SortDirectionEnum;\n+import org.opensmartgridplatform.cucumber.core.ScenarioContext;\n+import org.opensmartgridplatform.cucumber.platform.common.PlatformCommonDefaults;\n+import org.opensmartgridplatform.cucumber.platform.common.PlatformCommonKeys;\n+import org.opensmartgridplatform.cucumber.platform.common.support.ws.admin.AdminDeviceManagementClient;\n+import org.opensmartgridplatform.cucumber.platform.inputparsers.XmlGregorianCalendarInputParser;\n+import org.opensmartgridplatform.shared.exceptionhandling.WebServiceSecurityException;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+import io.cucumber.java.en.Then;\n+import io.cucumber.java.en.When;\n+\n+public class FilterMessageLogsSteps {\n+\n+    @Autowired\n+    private AdminDeviceManagementClient client;\n+\n+    @When(\"receiving a message log request without a filter\")\n+    public void getMessageLogNoFilter() throws WebServiceSecurityException, GeneralSecurityException, IOException {\n+        final FindMessageLogsRequest request = new FindMessageLogsRequest();\n+        ScenarioContext.current().put(PlatformCommonKeys.RESPONSE, this.client.findMessageLogs(request));\n+    }\n+\n+    @When(\"^receiving a filter message log request$\")\n+    public void getMessageLogFilter(final Map<String, String> requestParameters) throws IllegalArgumentException {\n+        final FindMessageLogsRequest request = new FindMessageLogsRequest();\n+\n+        if (requestParameters.containsKey(PlatformCommonKeys.KEY_DEVICE_IDENTIFICATION)) {\n+            request.setDeviceIdentification(getString(requestParameters, PlatformCommonKeys.KEY_DEVICE_IDENTIFICATION,\n+                    PlatformCommonDefaults.DEFAULT_DEVICE_IDENTIFICATION));\n+        }\n+        if (requestParameters.containsKey(PlatformCommonKeys.KEY_ORGANIZATION_IDENTIFICATION)) {\n+            request.setOrganisationIdentification(\n+                    getString(requestParameters, PlatformCommonKeys.KEY_ORGANIZATION_IDENTIFICATION,\n+                            PlatformCommonDefaults.DEFAULT_ORGANIZATION_IDENTIFICATION));\n+        }\n+        if (requestParameters.containsKey(PlatformCommonKeys.KEY_SETPOINT_START_TIME)) {\n+            request.setStartTime(XmlGregorianCalendarInputParser.parse(getString(requestParameters,\n+                    PlatformCommonKeys.KEY_SETPOINT_START_TIME, PlatformCommonDefaults.DEFAULT_BEGIN_DATE)));\n+        }\n+        if (requestParameters.containsKey(PlatformCommonKeys.KEY_SETPOINT_END_TIME)) {\n+            request.setEndTime(XmlGregorianCalendarInputParser.parse(getString(requestParameters,\n+                    PlatformCommonKeys.KEY_SETPOINT_END_TIME, PlatformCommonDefaults.DEFAULT_END_DATE)));\n+        }\n+        if (requestParameters.containsKey(PlatformCommonKeys.KEY_SORT_DIR)) {\n+\n+            if ((requestParameters.get(PlatformCommonKeys.KEY_SORT_DIR)).equals(\"ASC\")) {\n+                request.setSortDirection(SortDirectionEnum.ASC);\n+            } else if ((requestParameters.get(PlatformCommonKeys.KEY_SORT_DIR)).equals(\"DESC\")) {\n+                request.setSortDirection(SortDirectionEnum.DESC);\n+            } else {\n+                throw new IllegalArgumentException(\"Sort direction not properly set\");\n+            }\n+\n+        }\n+        if (requestParameters.containsKey(PlatformCommonKeys.KEY_SORTED_BY)) {\n+            request.setSortBy(requestParameters.get(PlatformCommonKeys.KEY_SORTED_BY));\n+        }\n+\n+        try {\n+            ScenarioContext.current().put(PlatformCommonKeys.RESPONSE, this.client.findMessageLogs(request));\n+        } catch (final WebServiceSecurityException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+\n+    @Then(\"the messages response contains {int} correct messages\")\n+    public void theGetMessageLogsFilterSuccesful(final int amount, final Map<String, String> requestParameters)\n+            throws Throwable {\n+        final List<MessageLog> messageLogs = this.getMessageLogs();\n+        assertThat(messageLogs.size()).isEqualTo(amount);\n+        for (final MessageLog log : messageLogs) {\n+            if (requestParameters.containsKey(PlatformCommonKeys.KEY_DEVICE_IDENTIFICATION)) {\n+                assertThat(log.getDeviceIdentification())\n+                        .isEqualTo(requestParameters.get(PlatformCommonKeys.KEY_DEVICE_IDENTIFICATION));\n+            }\n+            if (requestParameters.containsKey(PlatformCommonKeys.KEY_ORGANIZATION_IDENTIFICATION)) {\n+                assertThat(log.getOrganisationIdentification())\n+                        .isEqualTo(requestParameters.get(PlatformCommonKeys.KEY_ORGANIZATION_IDENTIFICATION));\n+            }\n+        }\n+    }\n+\n+    @Then(\"the messages response contains {int} correct messages for devices\")\n+    public void theGetMessageLogsDeviceWildcardFeatureSuccesful(final int amount, final List<String> ids) {\n+        final List<MessageLog> messageLogs = this.getMessageLogs();\n+        assertThat(messageLogs.size()).isEqualTo(amount);\n+        for (final MessageLog log : messageLogs) {\n+            assertThat(ids).contains(log.getDeviceIdentification());\n+        }\n+    }\n+\n+    @Then(\"the messages response contains {int} correct messages with date filter or no filter\")\n+    public void theGetMessageLogsDateFilterSuccessFul(final int amount) throws Throwable {\n+        final List<MessageLog> messageLogs = this.getMessageLogs();\n+        assertThat(messageLogs.size()).isEqualTo(amount);\n+    }\n+\n+    @Then(\"the messages response contains {int} correct messages with order\")\n+    public void theGetMessageLogsInOrder(final int amount, final List<String> ids) {\n+        final List<MessageLog> messageLogs = this.getMessageLogs();\n+        assertThat(messageLogs.size()).isEqualTo(amount);\n+        final List<String> actualIds = new ArrayList<>();\n+        for (final MessageLog log : messageLogs) {\n+            if (!actualIds.contains(log.getDeviceIdentification())) {\n+                actualIds.add(log.getDeviceIdentification());\n+            }\n+        }", "originalCommit": "8d8c1256b3601adea7f2bc2a72c84fe66e0e56bb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7a5a0a947107f7a9394aac50104377364440340b", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/7a5a0a947107f7a9394aac50104377364440340b", "message": "FLEX-5402 ~ Adds key DecodedMessage for Cucumber", "committedDate": "2020-07-22T14:18:59Z", "type": "commit"}, {"oid": "ce90bd7d06bdbd59d1567be8c050be0e2eb4bfe4", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/ce90bd7d06bdbd59d1567be8c050be0e2eb4bfe4", "message": "FLEX-5402 ~ Cleanup", "committedDate": "2020-07-23T07:13:55Z", "type": "commit"}, {"oid": "a6601fb31e6e1b85d0150931b5c25138d276eecb", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/a6601fb31e6e1b85d0150931b5c25138d276eecb", "message": "Merge branch 'development' into feature/FLEX-5402-sorting-filtering-messages-page", "committedDate": "2020-07-23T09:51:38Z", "type": "commit"}, {"oid": "83f6b8d1d6ed1dabd9e989e43bbb45c3a7b93f54", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/83f6b8d1d6ed1dabd9e989e43bbb45c3a7b93f54", "message": "FLEX-5402 ~ Corrects NullPointerException problem\n\nPrevious changes caused a NullPointerException, when the description or descriptionStartsWith field was empty while searching events.", "committedDate": "2020-07-23T15:17:44Z", "type": "commit"}, {"oid": "0c480c007fb5165cd1ede2bebd06ec10a15aa3fd", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/0c480c007fb5165cd1ede2bebd06ec10a15aa3fd", "message": "FLEX-5402 ~ Removes uppercase for searching events", "committedDate": "2020-07-23T20:14:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDAzNTY0Mg==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/368#discussion_r460035642", "bodyText": "Normally we use the convention to name the method like the step. That would be receivingAMessageLogRequestWithoutAFilter here. Not clear why another convention was used. Goes for all methods in this class.", "author": "robindenadel", "createdAt": "2020-07-24T12:57:42Z", "path": "integration-tests/cucumber-tests-platform-common/src/test/java/org/opensmartgridplatform/cucumber/platform/common/glue/steps/ws/admin/devicemanagement/FilterMessageLogsSteps.java", "diffHunk": "@@ -0,0 +1,140 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+*/\n+package org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.admin.devicemanagement;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.opensmartgridplatform.cucumber.core.ReadSettingsHelper.getEnum;\n+import static org.opensmartgridplatform.cucumber.core.ReadSettingsHelper.getString;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+import org.opensmartgridplatform.adapter.ws.schema.admin.devicemanagement.FindMessageLogsRequest;\n+import org.opensmartgridplatform.adapter.ws.schema.admin.devicemanagement.FindMessageLogsResponse;\n+import org.opensmartgridplatform.adapter.ws.schema.admin.devicemanagement.MessageLog;\n+import org.opensmartgridplatform.adapter.ws.schema.admin.devicemanagement.MessageLogFilter;\n+import org.opensmartgridplatform.adapter.ws.schema.admin.devicemanagement.SortDirectionEnum;\n+import org.opensmartgridplatform.cucumber.core.ScenarioContext;\n+import org.opensmartgridplatform.cucumber.platform.common.PlatformCommonDefaults;\n+import org.opensmartgridplatform.cucumber.platform.common.PlatformCommonKeys;\n+import org.opensmartgridplatform.cucumber.platform.common.support.ws.admin.AdminDeviceManagementClient;\n+import org.opensmartgridplatform.cucumber.platform.inputparsers.XmlGregorianCalendarInputParser;\n+import org.opensmartgridplatform.shared.exceptionhandling.WebServiceSecurityException;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+import io.cucumber.java.en.Then;\n+import io.cucumber.java.en.When;\n+\n+public class FilterMessageLogsSteps {\n+\n+    @Autowired\n+    private AdminDeviceManagementClient client;\n+\n+    @When(\"receiving a message log request without a filter\")\n+    public void getMessageLogNoFilter() throws WebServiceSecurityException {", "originalCommit": "0c480c007fb5165cd1ede2bebd06ec10a15aa3fd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM4NDMxNA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/368#discussion_r460384314", "bodyText": "Renamed the methods.", "author": "rlemmers", "createdAt": "2020-07-25T09:02:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDAzNTY0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA0NTY3OA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/368#discussion_r460045678", "bodyText": "Why do we need a native query?\nI don't think a native query should be in a steps class.", "author": "robindenadel", "createdAt": "2020-07-24T13:17:25Z", "path": "integration-tests/cucumber-tests-platform/src/test/java/org/opensmartgridplatform/cucumber/platform/glue/steps/database/logging/DeviceLogItemSteps.java", "diffHunk": "@@ -44,11 +55,39 @@ public void iHaveADeviceLogItem(final Map<String, String> settings) {\n         final boolean valid = true;\n \n         final DeviceLogItem deviceLogItem = new DeviceLogItem.Builder().withDeviceIdentification(deviceIdentification)\n-                .withDeviceUid(deviceUid).withDecodedMessage(decodedMessage).withEncodedMessage(encodedMessage)\n-                .withIncoming(incoming).withOrganisationIdentification(organisationIdentification)\n-                .withPayloadMessageSerializedSize(payloadMessageSerializedSize).withValid(valid).build();\n+                .withDeviceUid(deviceUid)\n+                .withDecodedMessage(decodedMessage)\n+                .withEncodedMessage(encodedMessage)\n+                .withIncoming(incoming)\n+                .withOrganisationIdentification(organisationIdentification)\n+                .withPayloadMessageSerializedSize(payloadMessageSerializedSize)\n+                .withValid(valid)\n+                .build();\n+\n+        final DeviceLogItem savedDeviceLogItem = this.deviceLogItemRepository.save(deviceLogItem);\n+\n+        final String modificationTimeString = getString(settings, PlatformKeys.KEY_MODIFICATION_TIME);\n+        if (modificationTimeString != null) {\n+            final ZonedDateTime modificationTime = ZonedDateTime.parse(modificationTimeString);\n+            this.updateModificationTime(savedDeviceLogItem.getId(), modificationTime);\n+        }\n+    }\n+\n+    private void updateModificationTime(final Long deviceLogItemId, final ZonedDateTime modificationTime) {\n+        if (modificationTime != null) {\n+            final EntityManager em = this.txMgrLogging.getEntityManagerFactory().createEntityManager();\n+            final EntityTransaction transaction = em.getTransaction();\n \n-        this.deviceLogItemRepository.save(deviceLogItem);\n+            transaction.begin();\n+            final String sql = \"UPDATE device_log_item SET modification_time = :modification_time WHERE id = :id\";\n+            final Query updateQuery = em.createNativeQuery(sql);\n+            updateQuery.setParameter(\"id\", deviceLogItemId);\n+            updateQuery.setParameter(\"modification_time\", modificationTime);\n+            updateQuery.executeUpdate();\n+            transaction.commit();\n+\n+            em.close();", "originalCommit": "0c480c007fb5165cd1ede2bebd06ec10a15aa3fd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM4MTIwMg==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/368#discussion_r460381202", "bodyText": "How can I set the modificationTime in a cleaner way? It is normally set automatically, when an item is saved. For these test cases, I need a specific modificationTime.", "author": "rlemmers", "createdAt": "2020-07-25T08:24:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA0NTY3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY3OTMwMw==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/368#discussion_r460679303", "bodyText": "Ok, it is clear to me why you do need a native query, It would be cleaner to make it a method in a repository class.", "author": "robindenadel", "createdAt": "2020-07-27T06:48:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA0NTY3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA1NTY0Mg==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/368#discussion_r460055642", "bodyText": "consider a package org.opensmartgridplatform.adapter.ws.admin.application.specifications", "author": "robindenadel", "createdAt": "2020-07-24T13:35:27Z", "path": "osgp/platform/osgp-adapter-ws-admin/src/main/java/org/opensmartgridplatform/adapter/ws/admin/application/services/DeviceLogItemSpecifications.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.adapter.ws.admin.application.services;", "originalCommit": "0c480c007fb5165cd1ede2bebd06ec10a15aa3fd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM4NTkwNQ==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/368#discussion_r460385905", "bodyText": "Done.", "author": "rlemmers", "createdAt": "2020-07-25T09:23:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA1NTY0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA1NjUzNQ==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/368#discussion_r460056535", "bodyText": "org.opensmartgridplatform.domain.core.specifications contains interfaces for specifications. Any reason why this class does not implement such an interface?", "author": "robindenadel", "createdAt": "2020-07-24T13:36:56Z", "path": "osgp/platform/osgp-adapter-ws-admin/src/main/java/org/opensmartgridplatform/adapter/ws/admin/application/services/DeviceLogItemSpecifications.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.adapter.ws.admin.application.services;\n+\n+import static org.opensmartgridplatform.shared.utils.SearchUtil.replaceWildcards;\n+\n+import java.time.ZonedDateTime;\n+import java.util.Date;\n+\n+import javax.persistence.criteria.CriteriaBuilder;\n+import javax.persistence.criteria.CriteriaQuery;\n+import javax.persistence.criteria.Root;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.opensmartgridplatform.logging.domain.entities.DeviceLogItem;\n+import org.springframework.data.jpa.domain.Specification;\n+\n+public final class DeviceLogItemSpecifications {", "originalCommit": "0c480c007fb5165cd1ede2bebd06ec10a15aa3fd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM4NTg3MQ==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/368#discussion_r460385871", "bodyText": "Made it in line with the other specification interfaces/classes. I'm not sure about the package for the implementation. I currently have:\nInterface DeviceLogItemSpecifications: org.opensmartgridplatform.adapter.ws.admin.application.specifications\nClass JpaDeviceLogItemSpecifications: org.opensmartgridplatform.adapter.ws.admin.infra.specifications", "author": "rlemmers", "createdAt": "2020-07-25T09:23:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA1NjUzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY3OTc5MA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/368#discussion_r460679790", "bodyText": "OK", "author": "robindenadel", "createdAt": "2020-07-27T06:49:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA1NjUzNQ=="}], "type": "inlineReview"}, {"oid": "547d6305255204d45418eca896dd382a39266f62", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/547d6305255204d45418eca896dd382a39266f62", "message": "FLEX-5402 ~ Removes NightlyBuildOnly tags", "committedDate": "2020-07-25T08:40:34Z", "type": "commit"}, {"oid": "db7b4ee9e27a9ca4f1e7b8431ecf2bfffaa60bd7", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/db7b4ee9e27a9ca4f1e7b8431ecf2bfffaa60bd7", "message": "FLEX-5402 ~ Improves step name\n\nRenames \"the messages response contains {int} messages with date filter or no date filter\" to \"the messages response contains {int} messages\".", "committedDate": "2020-07-25T08:52:12Z", "type": "commit"}, {"oid": "58d945246d8b19fadc90579a4391a91efd3ffaf1", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/58d945246d8b19fadc90579a4391a91efd3ffaf1", "message": "FLEX-5402 ~ Make test valid until 2040", "committedDate": "2020-07-25T08:57:03Z", "type": "commit"}, {"oid": "34d1748b96412692737d62b1a8e90013ad1d5032", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/34d1748b96412692737d62b1a8e90013ad1d5032", "message": "FLEX-5402 ~ Renames step methods\n\nRenames step methods in FilterMessageLogSteps to conform to convention.", "committedDate": "2020-07-25T09:01:49Z", "type": "commit"}, {"oid": "bb4ed808fb0d644e9b4fe95cf4317fa9a3096123", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/bb4ed808fb0d644e9b4fe95cf4317fa9a3096123", "message": "FLEX-5402 ~ Use interface DeviceLogItemSpecifications\n\nUses interface for DeviceLogItemSpecifications instead of directly calling static methods.", "committedDate": "2020-07-25T09:20:27Z", "type": "commit"}, {"oid": "306760ffbbcd931e1fac55b742c95d132786c54c", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/306760ffbbcd931e1fac55b742c95d132786c54c", "message": "FLEX-5402 ~ Moves update to repository", "committedDate": "2020-07-27T15:41:03Z", "type": "commit"}]}