{"pr_number": 486, "pr_title": "Feature/slim 2443 added power failure event log", "pr_createdAt": "2020-11-02T18:16:02Z", "pr_url": "https://github.com/OSGP/open-smart-grid-platform/pull/486", "timeline": [{"oid": "e3dfebd69f54bd4fe91ba2c3bf03a6e255c2f0d5", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/e3dfebd69f54bd4fe91ba2c3bf03a6e255c2f0d5", "message": "Added power failure event handling", "committedDate": "2020-11-02T17:57:26Z", "type": "commit"}, {"oid": "8af281c45f05aaf615057c6d0a2ee08166fb1bfa", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/8af281c45f05aaf615057c6d0a2ee08166fb1bfa", "message": "Merge branch 'development' into feature/SLIM-2443_Added_power-failure-event-log", "committedDate": "2020-11-02T18:00:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ2MzE4Ng==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/486#discussion_r516463186", "bodyText": "Bij beide formats zijn er 6 argumenten en in het format staan er 4", "author": "kroesctrl", "createdAt": "2020-11-03T07:20:22Z", "path": "osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/valueobjects/smartmetering/Event.java", "diffHunk": "@@ -10,32 +10,53 @@\n \n import java.io.Serializable;\n \n+import lombok.Getter;\n import org.joda.time.DateTime;\n \n+@Getter\n public class Event implements Serializable {\n \n-    /**\n-     * Serial Version UID.\n-     */\n     private static final long serialVersionUID = 4482313912422705642L;\n     private final DateTime timestamp;\n     private final Integer eventCode;\n-    private final Integer eventCounter;\n     private final EventLogCategory eventLogCategory;\n+    private final Integer eventCounter;\n+    private final DateTime startTime;\n+    private final Long duration;\n \n     public Event(final DateTime timestamp, final Integer eventCode, final Integer eventCounter,\n             final EventLogCategory eventLogCategory) {\n         this.timestamp = timestamp;\n         this.eventCode = eventCode;\n         this.eventCounter = eventCounter;\n         this.eventLogCategory = eventLogCategory;\n+        this.startTime = null;\n+        this.duration = null;\n+    }\n+\n+    public Event(final DateTime endTime, final Integer eventCode, final EventLogCategory eventLogCategory,\n+            final DateTime startTime, final Long duration) {\n+        this.timestamp = endTime;\n+        this.eventCode = eventCode;\n+        this.eventCounter = null;\n+        this.eventLogCategory = eventLogCategory;\n+        this.startTime = startTime;\n+        this.duration = duration;\n     }\n \n     @Override\n     public String toString() {\n-        return String.format(\"Event[time=%s, code=%s, category=%s, type=%s%s]\", this.timestamp, this.eventCode,\n-                this.eventLogCategory.name(), this.eventCode == null ? null : EventType.getByEventCode(this.eventCode),\n-                this.eventCounter == null ? \"\" : \", counter=\" + this.eventCounter);\n+        if (eventLogCategory == EventLogCategory.POWER_FAILURE_EVENT_LOG) {\n+            return String.format(\"Event[startTime, endTime=%s, duration=%s, category=%s, type=%s%s]\", this.startTime,\n+                    this.timestamp, this.duration, this.eventLogCategory.name(),\n+                    this.eventCode == null ? null : EventType.getByEventCode(this.eventCode),\n+                    this.eventCounter == null ? \"\" : \", counter=\" + this.eventCounter);\n+        } else {\n+            return String.format(\"Event[time=%s, code=%s, category=%s, type=%s%s]\", this.timestamp, this.eventCode,\n+                    this.eventLogCategory.name(),\n+                    this.eventCode == null ? null : EventType.getByEventCode(this.eventCode),\n+                    this.eventCounter == null ? \"\" : \", counter=\" + this.eventCounter);", "originalCommit": "8af281c45f05aaf615057c6d0a2ee08166fb1bfa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ3ODcxMw==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/486#discussion_r516478713", "bodyText": "Het zijn er beide 5 volgens mij", "author": "jboon", "createdAt": "2020-11-03T08:00:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ2MzE4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ3NDE4Ng==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/486#discussion_r516474186", "bodyText": "why not make one constructor and let the startTime and Duration be null? In that case you can skip the IF statement", "author": "coendamen", "createdAt": "2020-11-03T07:50:29Z", "path": "osgp/platform/osgp-adapter-domain-smartmetering/src/main/java/org/opensmartgridplatform/adapter/domain/smartmetering/application/mapping/customconverters/EventsConverter.java", "diffHunk": "@@ -34,7 +39,12 @@ public EventDto convertFrom(final Event source, final Type<EventDto> destination\n             return null;\n         }\n \n-        return new EventDto(source.getTimestamp(), source.getEventCode(), source.getEventCounter(),\n-                source.getEventLogCategory().name());\n+        if (source.getEventLogCategory() == EventLogCategory.POWER_FAILURE_EVENT_LOG) {\n+            return new EventDto(source.getTimestamp(), source.getEventCode(), source.getEventLogCategory().name(),", "originalCommit": "8af281c45f05aaf615057c6d0a2ee08166fb1bfa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ3OTE0NA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/486#discussion_r516479144", "bodyText": "Dat is niet zo netjes", "author": "jboon", "createdAt": "2020-11-03T08:01:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ3NDE4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjYxMzQyMw==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/486#discussion_r516613423", "bodyText": "done it", "author": "jboon", "createdAt": "2020-11-03T11:57:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ3NDE4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ3NTAxMg==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/486#discussion_r516475012", "bodyText": "if the source would already be an XmlGregorianCalender field you would not need this conversion", "author": "coendamen", "createdAt": "2020-11-03T07:52:21Z", "path": "osgp/platform/osgp-adapter-ws-smartmetering/src/main/java/org/opensmartgridplatform/adapter/ws/smartmetering/application/mapping/EventConverter.java", "diffHunk": "@@ -47,6 +47,11 @@\n             event.setTimestamp(timestamp);\n             event.setEventCounter(source.getEventCounter());\n             event.setEventLogCategory(EventLogCategory.fromValue(source.getEventLogCategory().name()));\n+            event.setEventDuration(source.getDuration());\n+            if (source.getStartTime() != null) {\n+                event.setStartTime(DatatypeFactory.newInstance().newXMLGregorianCalendar(", "originalCommit": "8af281c45f05aaf615057c6d0a2ee08166fb1bfa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ4MDE1Nw==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/486#discussion_r516480157", "bodyText": "The conversion is necessary, also see the existing timestamp.", "author": "jboon", "createdAt": "2020-11-03T08:03:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ3NTAxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ3NTE5Nw==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/486#discussion_r516475197", "bodyText": "use one constructor with possible null values.", "author": "coendamen", "createdAt": "2020-11-03T07:52:53Z", "path": "osgp/platform/osgp-adapter-ws-smartmetering/src/main/java/org/opensmartgridplatform/adapter/ws/smartmetering/application/mapping/EventConverter.java", "diffHunk": "@@ -68,6 +73,13 @@ public Event convertFrom(final org.opensmartgridplatform.adapter.ws.schema.smart\n         final org.opensmartgridplatform.domain.core.valueobjects.smartmetering.EventLogCategory eventLogCategory =\n                 org.opensmartgridplatform.domain.core.valueobjects.smartmetering.EventLogCategory.fromValue(\n                 source.getEventLogCategory().value());\n-        return new Event(timestamp, eventCode, source.getEventCounter(), eventLogCategory);\n+\n+        if (eventLogCategory", "originalCommit": "8af281c45f05aaf615057c6d0a2ee08166fb1bfa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ3NTg3NA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/486#discussion_r516475874", "bodyText": "this is very ugly. as stated earlier you can just make the power_failure items optional,", "author": "coendamen", "createdAt": "2020-11-03T07:54:21Z", "path": "osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/valueobjects/smartmetering/Event.java", "diffHunk": "@@ -10,32 +10,53 @@\n \n import java.io.Serializable;\n \n+import lombok.Getter;\n import org.joda.time.DateTime;\n \n+@Getter\n public class Event implements Serializable {\n \n-    /**\n-     * Serial Version UID.\n-     */\n     private static final long serialVersionUID = 4482313912422705642L;\n     private final DateTime timestamp;\n     private final Integer eventCode;\n-    private final Integer eventCounter;\n     private final EventLogCategory eventLogCategory;\n+    private final Integer eventCounter;\n+    private final DateTime startTime;\n+    private final Long duration;\n \n     public Event(final DateTime timestamp, final Integer eventCode, final Integer eventCounter,\n             final EventLogCategory eventLogCategory) {\n         this.timestamp = timestamp;\n         this.eventCode = eventCode;\n         this.eventCounter = eventCounter;\n         this.eventLogCategory = eventLogCategory;\n+        this.startTime = null;\n+        this.duration = null;\n+    }\n+\n+    public Event(final DateTime endTime, final Integer eventCode, final EventLogCategory eventLogCategory,\n+            final DateTime startTime, final Long duration) {\n+        this.timestamp = endTime;\n+        this.eventCode = eventCode;\n+        this.eventCounter = null;\n+        this.eventLogCategory = eventLogCategory;\n+        this.startTime = startTime;\n+        this.duration = duration;\n     }\n \n     @Override\n     public String toString() {\n-        return String.format(\"Event[time=%s, code=%s, category=%s, type=%s%s]\", this.timestamp, this.eventCode,\n-                this.eventLogCategory.name(), this.eventCode == null ? null : EventType.getByEventCode(this.eventCode),\n-                this.eventCounter == null ? \"\" : \", counter=\" + this.eventCounter);\n+        if (eventLogCategory == EventLogCategory.POWER_FAILURE_EVENT_LOG) {", "originalCommit": "8af281c45f05aaf615057c6d0a2ee08166fb1bfa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ4MTE4Mg==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/486#discussion_r516481182", "bodyText": "I totally agree, but passing null values to a constructor isn't that nice either.", "author": "jboon", "createdAt": "2020-11-03T08:05:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ3NTg3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ3NjA2MA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/486#discussion_r516476060", "bodyText": "startTime=%s     ?", "author": "harrymiddelburgetall", "createdAt": "2020-11-03T07:54:41Z", "path": "osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/valueobjects/smartmetering/Event.java", "diffHunk": "@@ -10,32 +10,53 @@\n \n import java.io.Serializable;\n \n+import lombok.Getter;\n import org.joda.time.DateTime;\n \n+@Getter\n public class Event implements Serializable {\n \n-    /**\n-     * Serial Version UID.\n-     */\n     private static final long serialVersionUID = 4482313912422705642L;\n     private final DateTime timestamp;\n     private final Integer eventCode;\n-    private final Integer eventCounter;\n     private final EventLogCategory eventLogCategory;\n+    private final Integer eventCounter;\n+    private final DateTime startTime;\n+    private final Long duration;\n \n     public Event(final DateTime timestamp, final Integer eventCode, final Integer eventCounter,\n             final EventLogCategory eventLogCategory) {\n         this.timestamp = timestamp;\n         this.eventCode = eventCode;\n         this.eventCounter = eventCounter;\n         this.eventLogCategory = eventLogCategory;\n+        this.startTime = null;\n+        this.duration = null;\n+    }\n+\n+    public Event(final DateTime endTime, final Integer eventCode, final EventLogCategory eventLogCategory,\n+            final DateTime startTime, final Long duration) {\n+        this.timestamp = endTime;\n+        this.eventCode = eventCode;\n+        this.eventCounter = null;\n+        this.eventLogCategory = eventLogCategory;\n+        this.startTime = startTime;\n+        this.duration = duration;\n     }\n \n     @Override\n     public String toString() {\n-        return String.format(\"Event[time=%s, code=%s, category=%s, type=%s%s]\", this.timestamp, this.eventCode,\n-                this.eventLogCategory.name(), this.eventCode == null ? null : EventType.getByEventCode(this.eventCode),\n-                this.eventCounter == null ? \"\" : \", counter=\" + this.eventCounter);\n+        if (eventLogCategory == EventLogCategory.POWER_FAILURE_EVENT_LOG) {\n+            return String.format(\"Event[startTime, endTime=%s, duration=%s, category=%s, type=%s%s]\", this.startTime,", "originalCommit": "8af281c45f05aaf615057c6d0a2ee08166fb1bfa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjYxNDI5OA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/486#discussion_r516614298", "bodyText": "good one", "author": "jboon", "createdAt": "2020-11-03T11:58:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ3NjA2MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ3Njk2NQ==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/486#discussion_r516476965", "bodyText": "Moet er echt 'type=null' in de string worden opgenomen als er geen eventCode is?", "author": "harrymiddelburgetall", "createdAt": "2020-11-03T07:56:42Z", "path": "osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/valueobjects/smartmetering/Event.java", "diffHunk": "@@ -10,32 +10,53 @@\n \n import java.io.Serializable;\n \n+import lombok.Getter;\n import org.joda.time.DateTime;\n \n+@Getter\n public class Event implements Serializable {\n \n-    /**\n-     * Serial Version UID.\n-     */\n     private static final long serialVersionUID = 4482313912422705642L;\n     private final DateTime timestamp;\n     private final Integer eventCode;\n-    private final Integer eventCounter;\n     private final EventLogCategory eventLogCategory;\n+    private final Integer eventCounter;\n+    private final DateTime startTime;\n+    private final Long duration;\n \n     public Event(final DateTime timestamp, final Integer eventCode, final Integer eventCounter,\n             final EventLogCategory eventLogCategory) {\n         this.timestamp = timestamp;\n         this.eventCode = eventCode;\n         this.eventCounter = eventCounter;\n         this.eventLogCategory = eventLogCategory;\n+        this.startTime = null;\n+        this.duration = null;\n+    }\n+\n+    public Event(final DateTime endTime, final Integer eventCode, final EventLogCategory eventLogCategory,\n+            final DateTime startTime, final Long duration) {\n+        this.timestamp = endTime;\n+        this.eventCode = eventCode;\n+        this.eventCounter = null;\n+        this.eventLogCategory = eventLogCategory;\n+        this.startTime = startTime;\n+        this.duration = duration;\n     }\n \n     @Override\n     public String toString() {\n-        return String.format(\"Event[time=%s, code=%s, category=%s, type=%s%s]\", this.timestamp, this.eventCode,\n-                this.eventLogCategory.name(), this.eventCode == null ? null : EventType.getByEventCode(this.eventCode),\n-                this.eventCounter == null ? \"\" : \", counter=\" + this.eventCounter);\n+        if (eventLogCategory == EventLogCategory.POWER_FAILURE_EVENT_LOG) {\n+            return String.format(\"Event[startTime, endTime=%s, duration=%s, category=%s, type=%s%s]\", this.startTime,\n+                    this.timestamp, this.duration, this.eventLogCategory.name(),\n+                    this.eventCode == null ? null : EventType.getByEventCode(this.eventCode),", "originalCommit": "8af281c45f05aaf615057c6d0a2ee08166fb1bfa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjYxNjc0MQ==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/486#discussion_r516616741", "bodyText": "It should not be null, but will cause an IllegalArgumentException if it is. I think you want to prevent this, but it is debatable.", "author": "jboon", "createdAt": "2020-11-03T12:03:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ3Njk2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ2ODIyMA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/486#discussion_r516468220", "bodyText": "Lombok FTW", "author": "jandik", "createdAt": "2020-11-03T07:35:10Z", "path": "osgp/shared/osgp-dto/src/main/java/org/opensmartgridplatform/dto/valueobjects/smartmetering/EventDto.java", "diffHunk": "@@ -10,40 +10,39 @@\n \n import java.io.Serializable;\n \n+import lombok.Getter;\n import org.joda.time.DateTime;\n \n+@Getter", "originalCommit": "8af281c45f05aaf615057c6d0a2ee08166fb1bfa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjUzOTU0MA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/486#discussion_r516539540", "bodyText": "Replace this code with this(...)", "author": "jandik", "createdAt": "2020-11-03T09:49:44Z", "path": "osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/valueobjects/smartmetering/Event.java", "diffHunk": "@@ -10,32 +10,53 @@\n \n import java.io.Serializable;\n \n+import lombok.Getter;\n import org.joda.time.DateTime;\n \n+@Getter\n public class Event implements Serializable {\n \n-    /**\n-     * Serial Version UID.\n-     */\n     private static final long serialVersionUID = 4482313912422705642L;\n     private final DateTime timestamp;\n     private final Integer eventCode;\n-    private final Integer eventCounter;\n     private final EventLogCategory eventLogCategory;\n+    private final Integer eventCounter;\n+    private final DateTime startTime;\n+    private final Long duration;\n \n     public Event(final DateTime timestamp, final Integer eventCode, final Integer eventCounter,\n             final EventLogCategory eventLogCategory) {\n         this.timestamp = timestamp;\n         this.eventCode = eventCode;\n         this.eventCounter = eventCounter;\n         this.eventLogCategory = eventLogCategory;\n+        this.startTime = null;\n+        this.duration = null;", "originalCommit": "8af281c45f05aaf615057c6d0a2ee08166fb1bfa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjYxNzE3Nw==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/486#discussion_r516617177", "bodyText": "I removed the extra constructor and have agreed to calling the constructor with null-values.", "author": "jboon", "createdAt": "2020-11-03T12:04:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjUzOTU0MA=="}], "type": "inlineReview"}, {"oid": "b0c90b30ec0737c32b07d1fd764ce1c41e6d7881", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/b0c90b30ec0737c32b07d1fd764ce1c41e6d7881", "message": "review comments and simplification mapping/converting", "committedDate": "2020-11-03T11:54:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjYyODQ1OQ==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/486#discussion_r516628459", "bodyText": "you could move this to a separate method and do the call in the constructor call to make the code more compact.", "author": "coendamen", "createdAt": "2020-11-03T12:25:25Z", "path": "osgp/platform/osgp-adapter-ws-smartmetering/src/main/java/org/opensmartgridplatform/adapter/ws/smartmetering/application/mapping/EventConverter.java", "diffHunk": "@@ -68,6 +73,12 @@ public Event convertFrom(final org.opensmartgridplatform.adapter.ws.schema.smart\n         final org.opensmartgridplatform.domain.core.valueobjects.smartmetering.EventLogCategory eventLogCategory =\n                 org.opensmartgridplatform.domain.core.valueobjects.smartmetering.EventLogCategory.fromValue(\n                 source.getEventLogCategory().value());\n-        return new Event(timestamp, eventCode, source.getEventCounter(), eventLogCategory);\n+        DateTime startTime = null;", "originalCommit": "b0c90b30ec0737c32b07d1fd764ce1c41e6d7881", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjYyODk2NA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/486#discussion_r516628964", "bodyText": "for my info, why not just show null in the toString if it is null ?", "author": "coendamen", "createdAt": "2020-11-03T12:26:17Z", "path": "osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/valueobjects/smartmetering/Event.java", "diffHunk": "@@ -10,32 +10,37 @@\n \n import java.io.Serializable;\n \n+import lombok.Getter;\n import org.joda.time.DateTime;\n \n+@Getter\n public class Event implements Serializable {\n \n-    /**\n-     * Serial Version UID.\n-     */\n     private static final long serialVersionUID = 4482313912422705642L;\n     private final DateTime timestamp;\n     private final Integer eventCode;\n-    private final Integer eventCounter;\n     private final EventLogCategory eventLogCategory;\n+    private final Integer eventCounter;\n+    private final DateTime startTime;\n+    private final Long duration;\n \n     public Event(final DateTime timestamp, final Integer eventCode, final Integer eventCounter,\n-            final EventLogCategory eventLogCategory) {\n+            final EventLogCategory eventLogCategory, final DateTime startTime, final Long duration) {\n         this.timestamp = timestamp;\n         this.eventCode = eventCode;\n         this.eventCounter = eventCounter;\n         this.eventLogCategory = eventLogCategory;\n+        this.startTime = startTime;\n+        this.duration = duration;\n     }\n \n     @Override\n     public String toString() {\n-        return String.format(\"Event[time=%s, code=%s, category=%s, type=%s%s]\", this.timestamp, this.eventCode,\n+        return String.format(\"Event[time=%s, code=%s, category=%s, type=%s%s%s%s]\", this.timestamp, this.eventCode,\n                 this.eventLogCategory.name(), this.eventCode == null ? null : EventType.getByEventCode(this.eventCode),\n-                this.eventCounter == null ? \"\" : \", counter=\" + this.eventCounter);\n+                this.eventCounter == null ? \"\" : \", counter=\" + this.eventCounter,", "originalCommit": "b0c90b30ec0737c32b07d1fd764ce1c41e6d7881", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjYzMzE5Mw==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/486#discussion_r516633193", "bodyText": "I followed the setup actually, eventCounter was already formatted this way.", "author": "jboon", "createdAt": "2020-11-03T12:34:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjYyODk2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjYyOTYwOA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/486#discussion_r516629608", "bodyText": "could be simplified as an event.toString method", "author": "coendamen", "createdAt": "2020-11-03T12:27:28Z", "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/application/mapping/DataObjectToEventListConverter.java", "diffHunk": "@@ -64,32 +63,68 @@ private EventDto getEvent(final DataObject eventDataObject, final EventLogCatego\n                     \"eventData size should be \" + eventLogCategory.getNumberOfEventElements());\n         }\n \n+        if (eventLogCategory == EventLogCategoryDto.POWER_FAILURE_EVENT_LOG) {\n+            return getPowerFailureEvent(eventData, eventLogCategory);\n+        } else {\n+            return getDefaultEvent(eventData, eventLogCategory);\n+        }\n+    }\n+\n+    private EventDto getDefaultEvent(List<DataObject> eventData, final EventLogCategoryDto eventLogCategory)\n+            throws ProtocolAdapterException {\n         // extract values from List<DataObject> eventData.\n         final DateTime dateTime = this.extractDateTime(eventData);\n         final Short code = this.extractCode(eventData);\n         final Integer eventCounter = this.extractEventCounter(eventLogCategory, eventData);\n         final String eventLogCategoryName = eventLogCategory.name();\n \n-        LOGGER.info(\"Event time is {}, event code is {}, event category is {} and event counter is {}\", dateTime, code,\n+        log.info(\"Event time is {}, event code is {}, event category is {} and event counter is {}\", dateTime, code,\n                 eventLogCategoryName, eventCounter);\n \n         // build a new EventDto with those values.\n-        return new EventDto(dateTime, code.intValue(), eventCounter, eventLogCategoryName);\n+        return new EventDto(dateTime, code.intValue(), eventCounter, eventLogCategoryName, null, null);\n     }\n \n-    private DateTime extractDateTime(final List<DataObject> eventData) throws ProtocolAdapterException {\n+    private EventDto getPowerFailureEvent(List<DataObject> eventData, final EventLogCategoryDto eventLogCategory)\n+            throws ProtocolAdapterException {\n+        final DateTime endTime = this.extractDateTime(eventData);\n+        final Long duration = this.extractEventDuration(eventData);\n+        final String eventLogCategoryName = eventLogCategory.name();\n+        final DateTime startTime = calculatePowerFailureStartTime(endTime, duration);\n+\n+        log.info(\"PowerFailureEvent startTime is {}, endTime is {}, event duration is {} and event category is {}\",", "originalCommit": "b0c90b30ec0737c32b07d1fd764ce1c41e6d7881", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjYzNTgzNA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/486#discussion_r516635834", "bodyText": "There is no event and the DTO doesn't have a toString. Are you suggesting to implement one in the DTO and log the toString before returning the object?", "author": "jboon", "createdAt": "2020-11-03T12:38:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjYyOTYwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjYzMDA0Mw==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/486#discussion_r516630043", "bodyText": "possible NPE ?", "author": "coendamen", "createdAt": "2020-11-03T12:28:21Z", "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/application/mapping/DataObjectToEventListConverter.java", "diffHunk": "@@ -64,32 +63,68 @@ private EventDto getEvent(final DataObject eventDataObject, final EventLogCatego\n                     \"eventData size should be \" + eventLogCategory.getNumberOfEventElements());\n         }\n \n+        if (eventLogCategory == EventLogCategoryDto.POWER_FAILURE_EVENT_LOG) {\n+            return getPowerFailureEvent(eventData, eventLogCategory);\n+        } else {\n+            return getDefaultEvent(eventData, eventLogCategory);\n+        }\n+    }\n+\n+    private EventDto getDefaultEvent(List<DataObject> eventData, final EventLogCategoryDto eventLogCategory)\n+            throws ProtocolAdapterException {\n         // extract values from List<DataObject> eventData.\n         final DateTime dateTime = this.extractDateTime(eventData);\n         final Short code = this.extractCode(eventData);\n         final Integer eventCounter = this.extractEventCounter(eventLogCategory, eventData);\n         final String eventLogCategoryName = eventLogCategory.name();\n \n-        LOGGER.info(\"Event time is {}, event code is {}, event category is {} and event counter is {}\", dateTime, code,\n+        log.info(\"Event time is {}, event code is {}, event category is {} and event counter is {}\", dateTime, code,\n                 eventLogCategoryName, eventCounter);\n \n         // build a new EventDto with those values.\n-        return new EventDto(dateTime, code.intValue(), eventCounter, eventLogCategoryName);\n+        return new EventDto(dateTime, code.intValue(), eventCounter, eventLogCategoryName, null, null);\n     }\n \n-    private DateTime extractDateTime(final List<DataObject> eventData) throws ProtocolAdapterException {\n+    private EventDto getPowerFailureEvent(List<DataObject> eventData, final EventLogCategoryDto eventLogCategory)\n+            throws ProtocolAdapterException {\n+        final DateTime endTime = this.extractDateTime(eventData);\n+        final Long duration = this.extractEventDuration(eventData);\n+        final String eventLogCategoryName = eventLogCategory.name();\n+        final DateTime startTime = calculatePowerFailureStartTime(endTime, duration);\n+\n+        log.info(\"PowerFailureEvent startTime is {}, endTime is {}, event duration is {} and event category is {}\",\n+                startTime,\n+                endTime, duration, eventLogCategoryName);\n \n+        return new EventDto(endTime, 1, null, eventLogCategoryName, startTime, duration);\n+    }\n+\n+    private DateTime extractDateTime(final List<DataObject> eventData) throws ProtocolAdapterException {\n         final DateTime dateTime = this.dlmsHelper.convertDataObjectToDateTime(eventData.get(0)).asDateTime();\n+\n         if (dateTime == null) {\n             throw new ProtocolAdapterException(\"eventData time is null/unspecified\");\n         }\n+\n         return dateTime;\n     }\n \n-    private Short extractCode(final List<DataObject> eventData) throws ProtocolAdapterException {\n+    private Long extractEventDuration(List<DataObject> eventData)\n+            throws ProtocolAdapterException {\n+        if (!eventData.get(1).isNumber()) {", "originalCommit": "b0c90b30ec0737c32b07d1fd764ce1c41e6d7881", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjYzNzMwMg==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/486#discussion_r516637302", "bodyText": "In case of PowerFailureLog there are alway 2 elements. The same is true for al events, minimal of 2.", "author": "jboon", "createdAt": "2020-11-03T12:41:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjYzMDA0Mw=="}], "type": "inlineReview"}, {"oid": "ee77e1f5e142f7ddf892505c5d20e6fe8096028b", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/ee77e1f5e142f7ddf892505c5d20e6fe8096028b", "message": "review comments", "committedDate": "2020-11-03T13:28:12Z", "type": "commit"}]}