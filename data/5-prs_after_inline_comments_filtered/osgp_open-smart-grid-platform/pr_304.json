{"pr_number": 304, "pr_title": "Slim 2257/connection throttling", "pr_createdAt": "2020-04-30T06:08:41Z", "pr_url": "https://github.com/OSGP/open-smart-grid-platform/pull/304", "timeline": [{"oid": "07c36d8efc8aefa9ac2159ee4dd6c75c7a5b442c", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/07c36d8efc8aefa9ac2159ee4dd6c75c7a5b442c", "message": "SLIM-2257 throttling service and test first draft", "committedDate": "2020-04-23T13:38:25Z", "type": "commit"}, {"oid": "276fe1c563d7ed8ddb6f845f4efba74de024a418", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/276fe1c563d7ed8ddb6f845f4efba74de024a418", "message": "SLIM-2257 added first integration test setup", "committedDate": "2020-04-29T08:51:38Z", "type": "commit"}, {"oid": "03e62b1f014a59caacfe0ef5e31333afeddecde7", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/03e62b1f014a59caacfe0ef5e31333afeddecde7", "message": "Merge branch 'development' of https://github.com/OSGP/open-smart-grid-platform into SLIM-2257/connection_throttling", "committedDate": "2020-04-29T16:53:13Z", "type": "commit"}, {"oid": "33b5bd3d12a09cdf822d34b4c81d869f08d8ee86", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/33b5bd3d12a09cdf822d34b4c81d869f08d8ee86", "message": "SLIM-2257 first draft working integration test with one message processor", "committedDate": "2020-04-30T13:05:18Z", "type": "commit"}, {"oid": "7d662f66080a32df6c8b54826304be22aa5fdebe", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/7d662f66080a32df6c8b54826304be22aa5fdebe", "message": "SLIM-2257 fixed unit tests", "committedDate": "2020-05-01T08:39:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ2NzQyMQ==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/304#discussion_r418467421", "bodyText": "Constructor has 7 parameters, which is greater than 6 authorized.", "author": "jenkins-ip-10-4-24-184", "createdAt": "2020-05-01T08:52:47Z", "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/application/services/MonitoringService.java", "diffHunk": "@@ -26,33 +26,37 @@\n import org.opensmartgridplatform.dto.valueobjects.smartmetering.GetPowerQualityProfileRequestDataDto;\n import org.opensmartgridplatform.dto.valueobjects.smartmetering.PeriodicMeterReadsRequestDto;\n import org.opensmartgridplatform.dto.valueobjects.smartmetering.ReadAlarmRegisterRequestDto;\n-import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Service;\n \n @Service(value = \"dlmsDeviceMonitoringService\")\n public class MonitoringService {\n \n-    @Autowired\n     private GetPeriodicMeterReadsCommandExecutor getPeriodicMeterReadsCommandExecutor;\n-\n-    @Autowired\n     private GetPeriodicMeterReadsGasCommandExecutor getPeriodicMeterReadsGasCommandExecutor;\n-\n-    @Autowired\n     private GetActualMeterReadsCommandExecutor actualMeterReadsCommandExecutor;\n-\n-    @Autowired\n     private GetActualMeterReadsGasCommandExecutor actualMeterReadsGasCommandExecutor;\n-\n-    @Autowired\n     private ReadAlarmRegisterCommandExecutor readAlarmRegisterCommandExecutor;\n-\n-    @Autowired\n     private GetPowerQualityProfileCommandExecutor getPowerQualityProfileCommandExecutor;\n-\n-    @Autowired\n     private ClearAlarmRegisterCommandExecutor clearAlarmRegisterCommandExecutor;\n \n+    public MonitoringService(GetPeriodicMeterReadsCommandExecutor getPeriodicMeterReadsCommandExecutor,", "originalCommit": "7d662f66080a32df6c8b54826304be22aa5fdebe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c57a386cc1ed01308d99244a241be7a54a675680", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/c57a386cc1ed01308d99244a241be7a54a675680", "message": "SLIM-2257 cleanup test config. updated throttlingService", "committedDate": "2020-05-04T07:25:06Z", "type": "commit"}, {"oid": "9b91c88632fc60039b199b4fc90dcab7a0f310ef", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/9b91c88632fc60039b199b4fc90dcab7a0f310ef", "message": "SLIM-2257 proper value injection, externalized properties file", "committedDate": "2020-05-04T13:29:58Z", "type": "commit"}, {"oid": "170115329a1e6fb34e05c466b9340ae37a01b24d", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/170115329a1e6fb34e05c466b9340ae37a01b24d", "message": "SLIM-2257 cdma queue", "committedDate": "2020-05-06T14:22:49Z", "type": "commit"}, {"oid": "a35195bf34976351ecdb9055db9257e83bfcb659", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/a35195bf34976351ecdb9055db9257e83bfcb659", "message": "SLIM-2257 update script", "committedDate": "2020-05-07T14:41:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk0MDE1MA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/304#discussion_r421940150", "bodyText": "only added ThrottlingService mock here", "author": "coendamen", "createdAt": "2020-05-08T05:05:53Z", "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/test/java/org/opensmartgridplatform/adapter/protocol/dlms/infra/messaging/responses/from/core/processors/GetFirmwareFileResponseMessageProcessorTest.java", "diffHunk": "@@ -1,9 +1,10 @@\n /**", "originalCommit": "a35195bf34976351ecdb9055db9257e83bfcb659", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk0MDMxNw==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/304#discussion_r421940317", "bodyText": "only added ThrottlingService mock here", "author": "coendamen", "createdAt": "2020-05-08T05:06:33Z", "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/test/java/org/opensmartgridplatform/adapter/protocol/dlms/infra/messaging/processors/UpdateFirmwareRequestMessageProcessorTest.java", "diffHunk": "@@ -30,6 +30,7 @@\n import org.opensmartgridplatform.adapter.protocol.dlms.application.services.ConfigurationService;", "originalCommit": "a35195bf34976351ecdb9055db9257e83bfcb659", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk1Mzc5NQ==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/304#discussion_r421953795", "bodyText": "only formatting", "author": "coendamen", "createdAt": "2020-05-08T05:55:27Z", "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/infra/messaging/DeviceRequestMessageProcessor.java", "diffHunk": "@@ -1,9 +1,10 @@\n /**\n  * Copyright 2015 Smart Society Services B.V.", "originalCommit": "a35195bf34976351ecdb9055db9257e83bfcb659", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk1NzI4Mg==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/304#discussion_r421957282", "bodyText": "formatting and improved dependency injection", "author": "coendamen", "createdAt": "2020-05-08T06:06:46Z", "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/application/services/SecurityKeyService.java", "diffHunk": "@@ -1,9 +1,10 @@\n /**", "originalCommit": "a35195bf34976351ecdb9055db9257e83bfcb659", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk1NzQzOA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/304#discussion_r421957438", "bodyText": "improved dependency injection so class can be tested.", "author": "coendamen", "createdAt": "2020-05-08T06:07:18Z", "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/application/services/MonitoringService.java", "diffHunk": "@@ -26,33 +26,37 @@\n import org.opensmartgridplatform.dto.valueobjects.smartmetering.GetPowerQualityProfileRequestDataDto;", "originalCommit": "a35195bf34976351ecdb9055db9257e83bfcb659", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk1NzY3OQ==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/304#discussion_r421957679", "bodyText": "improved dependency injection for future test (out of scope of this pr)", "author": "coendamen", "createdAt": "2020-05-08T06:07:58Z", "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/application/services/DomainHelperService.java", "diffHunk": "@@ -1,9 +1,10 @@\n /**\n  * Copyright 2015 Smart Society Services B.V.\n  *\n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance", "originalCommit": "a35195bf34976351ecdb9055db9257e83bfcb659", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk1NzgyNw==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/304#discussion_r421957827", "bodyText": "formatting only", "author": "coendamen", "createdAt": "2020-05-08T06:08:31Z", "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/application/services/BundleService.java", "diffHunk": "@@ -1,9 +1,10 @@\n /**", "originalCommit": "a35195bf34976351ecdb9055db9257e83bfcb659", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a2462870a432469b798b0009e0122e5a6b2b7171", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/a2462870a432469b798b0009e0122e5a6b2b7171", "message": "SLIM-2257 code cleanup", "committedDate": "2020-05-08T06:33:26Z", "type": "commit"}, {"oid": "10986f3e7d96c7b85136fc15fc3ba254bbf9fc36", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/10986f3e7d96c7b85136fc15fc3ba254bbf9fc36", "message": "SLIM-2257 changed many stubs to mocks", "committedDate": "2020-05-11T10:09:04Z", "type": "commit"}, {"oid": "696237263d73ecc5d4bf92cee4635aea13a7fa43", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/696237263d73ecc5d4bf92cee4635aea13a7fa43", "message": "SLIM-2257 cleanup more", "committedDate": "2020-05-11T12:04:56Z", "type": "commit"}, {"oid": "0f0b5d587a280de0277277589e27fa472c492f67", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/0f0b5d587a280de0277277589e27fa472c492f67", "message": "Merge branch 'development' of https://github.com/OSGP/open-smart-grid-platform into SLIM-2257/connection_throttling", "committedDate": "2020-05-11T12:05:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjk5MjI1OQ==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/304#discussion_r422992259", "bodyText": "only added lambda here", "author": "coendamen", "createdAt": "2020-05-11T12:07:15Z", "path": "osgp/platform/osgp-core/src/main/java/org/opensmartgridplatform/core/infra/messaging/CoreLogItemRequestMessageSender.java", "diffHunk": "@@ -1,24 +1,20 @@\n /**", "originalCommit": "10986f3e7d96c7b85136fc15fc3ba254bbf9fc36", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "fbfcbc52a3b036936334fa2d1cf403c410a8dd7c", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/fbfcbc52a3b036936334fa2d1cf403c410a8dd7c", "message": "SLIM-2257 add test logback.xml, added Lock on ResetTimer", "committedDate": "2020-05-11T13:26:57Z", "type": "commit"}, {"oid": "6c38987d72309b384fc6c585c5314b14756d99be", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/6c38987d72309b384fc6c585c5314b14756d99be", "message": "SLIM-2257 improvements", "committedDate": "2020-05-11T14:35:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MjIyNA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/304#discussion_r423262224", "bodyText": "Wouldn't @SpringBootTest be better here?", "author": "jandik", "createdAt": "2020-05-11T19:17:03Z", "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/test/java/org/opensmartgridplatform/adapter/protocol/dlms/application/services/ThrottlingServiceTest.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.adapter.protocol.dlms.application.services;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.test.context.ContextConfiguration;\n+import org.springframework.test.context.TestPropertySource;\n+import org.springframework.test.context.junit.jupiter.SpringExtension;\n+\n+@ExtendWith(SpringExtension.class)", "originalCommit": "6c38987d72309b384fc6c585c5314b14756d99be", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ2Njg0OQ==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/304#discussion_r423466849", "bodyText": "Not a Spring boot module.", "author": "coendamen", "createdAt": "2020-05-12T05:15:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MjIyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MjYxMg==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/304#discussion_r423262612", "bodyText": "@SpringBootTest?", "author": "jandik", "createdAt": "2020-05-11T19:17:41Z", "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/test/java/org/opensmartgridplatform/adapter/protocol/dlms/infra/messaging/DeviceRequestMessageListenerIT.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.adapter.protocol.dlms.infra.messaging;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.doNothing;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import java.util.Date;\n+\n+import javax.jms.JMSException;\n+import javax.jms.ObjectMessage;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.opensmartgridplatform.adapter.protocol.dlms.application.services.DomainHelperService;\n+import org.opensmartgridplatform.adapter.protocol.dlms.application.services.ThrottlingService;\n+import org.opensmartgridplatform.adapter.protocol.dlms.domain.entities.DlmsDevice;\n+import org.opensmartgridplatform.dto.valueobjects.smartmetering.GetPowerQualityProfileRequestDataDto;\n+import org.opensmartgridplatform.shared.exceptionhandling.OsgpException;\n+import org.opensmartgridplatform.shared.infra.jms.MessageMetadata;\n+import org.opensmartgridplatform.shared.infra.jms.MessageType;\n+import org.opensmartgridplatform.shared.infra.jms.ObjectMessageBuilder;\n+import org.opensmartgridplatform.shared.infra.jms.ResponseMessage;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.test.context.ContextConfiguration;\n+import org.springframework.test.context.junit.jupiter.SpringExtension;\n+\n+/**\n+ * Tests the incoming JMS messages and processors. Verifies that response messages were sent.\n+ */\n+@ExtendWith(SpringExtension.class)", "originalCommit": "6c38987d72309b384fc6c585c5314b14756d99be", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ2Njg4MA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/304#discussion_r423466880", "bodyText": "Not a Spring boot module.", "author": "coendamen", "createdAt": "2020-05-12T05:16:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MjYxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MzE0OA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/304#discussion_r423263148", "bodyText": "Wouldn't @TestConfiguration be better here?", "author": "jandik", "createdAt": "2020-05-11T19:18:40Z", "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/test/java/org/opensmartgridplatform/adapter/protocol/dlms/infra/messaging/MessagingTestConfiguration.java", "diffHunk": "@@ -0,0 +1,160 @@\n+/**\n+ * Copyright 2019 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.adapter.protocol.dlms.infra.messaging;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import org.mockito.Mockito;\n+import org.opensmartgridplatform.adapter.protocol.dlms.application.config.messaging.OutboundLogItemRequestsMessagingConfig;\n+import org.opensmartgridplatform.adapter.protocol.dlms.application.config.messaging.OutboundOsgpCoreResponsesMessagingConfig;\n+import org.opensmartgridplatform.adapter.protocol.dlms.application.services.DomainHelperService;\n+import org.opensmartgridplatform.adapter.protocol.dlms.application.services.MonitoringService;\n+import org.opensmartgridplatform.adapter.protocol.dlms.application.services.SecurityKeyService;\n+import org.opensmartgridplatform.adapter.protocol.dlms.application.services.ThrottlingService;\n+import org.opensmartgridplatform.adapter.protocol.dlms.domain.commands.utils.DlmsHelper;\n+import org.opensmartgridplatform.adapter.protocol.dlms.domain.factories.DlmsConnectionFactory;\n+import org.opensmartgridplatform.adapter.protocol.dlms.domain.factories.DlmsConnectionHelper;\n+import org.opensmartgridplatform.adapter.protocol.dlms.domain.factories.InvocationCounterManager;\n+import org.opensmartgridplatform.adapter.protocol.dlms.domain.repositories.DlmsDeviceRepository;\n+import org.opensmartgridplatform.adapter.protocol.dlms.exceptions.OsgpExceptionConverter;\n+import org.opensmartgridplatform.adapter.protocol.dlms.infra.messaging.processors.GetPowerQualityProfileRequestMessageProcessor;\n+import org.opensmartgridplatform.shared.application.config.AbstractConfig;\n+import org.opensmartgridplatform.shared.application.config.messaging.DefaultJmsConfiguration;\n+import org.opensmartgridplatform.shared.infra.jms.BaseMessageProcessorMap;\n+import org.opensmartgridplatform.shared.infra.jms.MessageProcessorMap;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.ComponentScan;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.FilterType;\n+import org.springframework.context.annotation.Import;\n+import org.springframework.context.annotation.PropertySource;\n+import org.springframework.core.type.ClassMetadata;\n+import org.springframework.core.type.classreading.MetadataReader;\n+import org.springframework.core.type.classreading.MetadataReaderFactory;\n+import org.springframework.core.type.filter.TypeFilter;\n+import stub.DlmsConnectionFactoryStub;\n+import stub.DlmsPersistenceConfigStub;\n+\n+/**\n+ * Test Configuration for JMS Listener triggered tests.\n+ */\n+@Configuration", "originalCommit": "6c38987d72309b384fc6c585c5314b14756d99be", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ2NjkwNA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/304#discussion_r423466904", "bodyText": "Not a Spring boot module.", "author": "coendamen", "createdAt": "2020-05-12T05:16:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MzE0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2NDEyMA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/304#discussion_r423264120", "bodyText": "Maybe use //@Formatter:off to keep better readable code?", "author": "jandik", "createdAt": "2020-05-11T19:20:32Z", "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/test/java/org/opensmartgridplatform/adapter/protocol/dlms/infra/messaging/responses/from/core/processors/GetFirmwareFileResponseMessageProcessorTest.java", "diffHunk": "@@ -117,25 +122,21 @@ public void handleMessageShouldCallUpdateFirmware() throws OsgpException {\n         final ResponseMessage responseMessage = this.setupResponseMessage(firmwareFileDto);\n \n         // act\n-        this.getFirmwareFileResponseMessageProcessor.handleMessage(this.dlmsConnectionManagerMock, this.dlmsDevice,\n-                responseMessage);\n+        this.getFirmwareFileResponseMessageProcessor\n+                .handleMessage(this.dlmsConnectionManagerMock, this.dlmsDevice, responseMessage);\n \n         // assert\n-        verify(this.firmwareService, times(1)).updateFirmware(this.dlmsConnectionManagerMock, this.dlmsDevice,\n-                firmwareFileDto);\n+        verify(this.firmwareService, times(1))\n+                .updateFirmware(this.dlmsConnectionManagerMock, this.dlmsDevice, firmwareFileDto);\n     }\n \n     private FirmwareFileDto setupFirmwareFileDto() {\n         return new FirmwareFileDto(\"fw\", \"fw\".getBytes());\n     }\n \n     private ResponseMessage setupResponseMessage(final FirmwareFileDto firmwareFileDto) {\n-        return ResponseMessage.newResponseMessageBuilder()\n-                .withCorrelationUid(\"corr-uid-1\")\n-                .withOrganisationIdentification(\"test-org\")\n-                .withDeviceIdentification(\"dvc-01\")\n-                .withResult(ResponseMessageResultType.OK)\n-                .withDataObject(firmwareFileDto)\n-                .build();\n+        return ResponseMessage.newResponseMessageBuilder().withCorrelationUid(\"corr-uid-1\")", "originalCommit": "6c38987d72309b384fc6c585c5314b14756d99be", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2NDQ2MQ==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/304#discussion_r423264461", "bodyText": "Add useful comment here?", "author": "jandik", "createdAt": "2020-05-11T19:21:13Z", "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/test/java/stub/DlmsPersistenceConfigStub.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/**\n+ * Copyright 2015 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package stub;\n+\n+import java.io.PrintWriter;\n+import java.sql.Connection;\n+import java.sql.SQLException;\n+import java.sql.SQLFeatureNotSupportedException;\n+import java.util.logging.Logger;\n+\n+import javax.annotation.PreDestroy;\n+import javax.sql.DataSource;\n+\n+import org.opensmartgridplatform.adapter.protocol.dlms.domain.repositories.DlmsDeviceRepository;\n+import org.opensmartgridplatform.shared.application.config.AbstractPersistenceConfig;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.PropertySource;\n+import org.springframework.data.jpa.repository.config.EnableJpaRepositories;\n+import org.springframework.orm.jpa.JpaTransactionManager;\n+import org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean;\n+import org.springframework.transaction.annotation.EnableTransactionManagement;\n+\n+/**\n+ * An application context Java configuration class.\n+ */\n+@EnableJpaRepositories(entityManagerFactoryRef = \"dlmsEntityManagerFactory\", basePackageClasses = {\n+        DlmsDeviceRepository.class })\n+@Configuration\n+@EnableTransactionManagement()\n+@PropertySource(\"classpath:osgp-adapter-protocol-dlms.properties\")\n+public class DlmsPersistenceConfigStub extends AbstractPersistenceConfig {\n+\n+    public DataSource getDataSourceDlms() {\n+\n+        return new DataSource() {\n+            @Override\n+            public Connection getConnection() throws SQLException {\n+                return null;\n+            }\n+\n+            @Override\n+            public Connection getConnection(String username, String password) throws SQLException {\n+                return null;\n+            }\n+\n+            @Override\n+            public <T> T unwrap(Class<T> iface) throws SQLException {\n+                return null;\n+            }\n+\n+            @Override\n+            public boolean isWrapperFor(Class<?> iface) throws SQLException {\n+                return false;\n+            }\n+\n+            @Override\n+            public PrintWriter getLogWriter() throws SQLException {\n+                return null;\n+            }\n+\n+            @Override\n+            public void setLogWriter(PrintWriter out) throws SQLException {\n+\n+            }\n+\n+            @Override\n+            public void setLoginTimeout(int seconds) throws SQLException {\n+\n+            }\n+\n+            @Override\n+            public int getLoginTimeout() throws SQLException {\n+                return 0;\n+            }\n+\n+            @Override\n+            public Logger getParentLogger() throws SQLFeatureNotSupportedException {\n+                return null;\n+            }\n+        };\n+\n+    }\n+\n+    @Override\n+    @Bean\n+    public JpaTransactionManager transactionManager() {\n+        return super.transactionManager();\n+    }\n+\n+    @Override\n+    @Bean(name = \"dlmsEntityManagerFactory\")\n+    public LocalContainerEntityManagerFactoryBean entityManagerFactory() {\n+        return super.entityManagerFactory(\"OSGP_PROTOCOL_ADAPTER_DLMS_SETTINGS\", this.getDataSourceDlms());\n+    }\n+\n+    @Override\n+    @PreDestroy\n+    public void destroyDataSource() {\n+        //", "originalCommit": "6c38987d72309b384fc6c585c5314b14756d99be", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2NDc2OQ==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/304#discussion_r423264769", "bodyText": "Useful comment?", "author": "jandik", "createdAt": "2020-05-11T19:21:40Z", "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/test/java/stub/Hls5ConnectorStub.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package stub;\n+\n+import org.openmuc.jdlms.DlmsConnection;\n+import org.openmuc.jdlms.TcpConnectionBuilder;\n+import org.opensmartgridplatform.adapter.protocol.dlms.domain.commands.stub.DlmsConnectionStub;\n+import org.opensmartgridplatform.adapter.protocol.dlms.domain.entities.DlmsDevice;\n+import org.opensmartgridplatform.adapter.protocol.dlms.domain.factories.DlmsDeviceAssociation;\n+import org.opensmartgridplatform.adapter.protocol.dlms.domain.factories.Hls5Connector;\n+import org.opensmartgridplatform.adapter.protocol.dlms.infra.messaging.DlmsMessageListener;\n+\n+public class Hls5ConnectorStub extends Hls5Connector {\n+\n+    public Hls5ConnectorStub() {\n+        super(null, 0, 0, DlmsDeviceAssociation.PUBLIC_CLIENT);\n+    }\n+\n+    @Override\n+    protected void setSecurity(final DlmsDevice device, final TcpConnectionBuilder tcpConnectionBuilder) {\n+        //", "originalCommit": "6c38987d72309b384fc6c585c5314b14756d99be", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2NjIwMw==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/304#discussion_r423266203", "bodyText": "Shouldn't this logic be defined in SmartMeteringDevice?", "author": "jandik", "createdAt": "2020-05-11T19:24:31Z", "path": "osgp/platform/osgp-adapter-domain-smartmetering/src/main/java/org/opensmartgridplatform/adapter/domain/smartmetering/application/services/SmartMeterService.java", "diffHunk": "@@ -84,17 +86,27 @@ public SmartMeter getSmartMeter(final String deviceId, final SmartMeteringDevice\n     }\n \n     private ProtocolInfo getProtocolInfo(final SmartMeteringDevice smartMeteringDevice) throws FunctionalException {\n-        final ProtocolInfo protocolInfo = this.protocolInfoRepository.findByProtocolAndProtocolVersion(\n-                smartMeteringDevice.getProtocolName(), smartMeteringDevice.getProtocolVersion());\n+\n+        String protocolName = getProtocolName(smartMeteringDevice);\n+\n+        final ProtocolInfo protocolInfo = this.protocolInfoRepository\n+                .findByProtocolAndProtocolVersion(protocolName, smartMeteringDevice.getProtocolVersion());\n         if (protocolInfo == null) {\n             throw new FunctionalException(FunctionalExceptionType.UNKNOWN_PROTOCOL_NAME_OR_VERSION,\n                     ComponentType.DOMAIN_SMART_METERING);\n         }\n         return protocolInfo;\n     }\n \n-    private DeviceModel\n-            getDeviceModel(final org.opensmartgridplatform.domain.core.valueobjects.DeviceModel deviceModel) {\n+    private String getProtocolName(final SmartMeteringDevice smartMeteringDevice) {\n+        if (CDMA.equals(smartMeteringDevice.getCommunicationMethod())) {", "originalCommit": "6c38987d72309b384fc6c585c5314b14756d99be", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ3MTUxOQ==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/304#discussion_r423471519", "bodyText": "yes, that would be an improvement. Done.", "author": "coendamen", "createdAt": "2020-05-12T05:33:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2NjIwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU1NDYyOA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/304#discussion_r423554628", "bodyText": "Op zich mooi dat er nu 1 externe resource is, maar deze moet wel via een environment variable aangeleverd worden. Nu zit het pad hard in de app. Er moet een environment variabele geset worden in de context.xml op je systeem wanneer je deze gebruikt en die laten verwijzen naar /etc/osp/..", "author": "jboon", "createdAt": "2020-05-12T08:27:58Z", "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/application/config/MessagingConfig.java", "diffHunk": "@@ -24,8 +25,7 @@\n  */\n @Configuration\n @PropertySource(\"classpath:osgp-adapter-protocol-dlms.properties\")\n-@PropertySource(value = \"file:${osgp/Global/config}\", ignoreResourceNotFound = true)\n-@PropertySource(value = \"file:${osgp/AdapterProtocolDlms/config}\", ignoreResourceNotFound = true)\n+@PropertySource(value = \"file:/etc/osp/osgp-adapter-protocol-dlms.properties\", ignoreResourceNotFound = true)", "originalCommit": "6c38987d72309b384fc6c585c5314b14756d99be", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU2MzA5MA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/304#discussion_r423563090", "bodyText": "ik zou deze allemaal final maken", "author": "jboon", "createdAt": "2020-05-12T08:40:46Z", "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/application/services/DomainHelperService.java", "diffHunk": "@@ -32,21 +31,27 @@\n \n     private static final ComponentType COMPONENT_TYPE = ComponentType.PROTOCOL_DLMS;\n \n-    @Autowired\n     private DlmsDeviceRepository dlmsDeviceRepository;", "originalCommit": "6c38987d72309b384fc6c585c5314b14756d99be", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc2MzU3OA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/304#discussion_r423763578", "bodyText": "done", "author": "coendamen", "createdAt": "2020-05-12T14:08:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU2MzA5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU2MzU5Nw==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/304#discussion_r423563597", "bodyText": "final", "author": "jboon", "createdAt": "2020-05-12T08:41:37Z", "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/application/services/MonitoringService.java", "diffHunk": "@@ -26,33 +26,37 @@\n import org.opensmartgridplatform.dto.valueobjects.smartmetering.GetPowerQualityProfileRequestDataDto;\n import org.opensmartgridplatform.dto.valueobjects.smartmetering.PeriodicMeterReadsRequestDto;\n import org.opensmartgridplatform.dto.valueobjects.smartmetering.ReadAlarmRegisterRequestDto;\n-import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Service;\n \n @Service(value = \"dlmsDeviceMonitoringService\")\n public class MonitoringService {\n \n-    @Autowired\n     private GetPeriodicMeterReadsCommandExecutor getPeriodicMeterReadsCommandExecutor;", "originalCommit": "6c38987d72309b384fc6c585c5314b14756d99be", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc2NDI4NQ==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/304#discussion_r423764285", "bodyText": "done", "author": "coendamen", "createdAt": "2020-05-12T14:09:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU2MzU5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU4MjQ3Ng==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/304#discussion_r423582476", "bodyText": "Ik verwacht dat newConnectionRequest vooraf gaat aan openConnection. M.a.w. je mag geen openConnection aanroepen voordat newConnectionRequest goed gegaan is. Is het een idee om de call naar newConnectionRequest te doen in openConnection()? Hiermee zou je voorkomen dat de verantwoordelijkheid om beide aan te roepen niet bij de client ligt en dus foutief geimplementeerd kan worden.", "author": "jboon", "createdAt": "2020-05-12T09:10:02Z", "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/application/services/ThrottlingService.java", "diffHunk": "@@ -0,0 +1,134 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.adapter.protocol.dlms.application.services;\n+\n+import java.util.Timer;\n+import java.util.TimerTask;\n+import java.util.concurrent.Semaphore;\n+import java.util.concurrent.locks.ReentrantLock;\n+\n+import javax.annotation.PostConstruct;\n+import javax.annotation.PreDestroy;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class ThrottlingService {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(ThrottlingService.class);\n+\n+    @Value(\"${throttling.max.open.connections}\")\n+    private int maxOpenConnections;\n+    @Value(\"${throttling.max.new.connection.requests}\")\n+    private int maxNewConnectionRequests;\n+    @Value(\"${throttling.reset.time}\")\n+    private int resetTime;\n+\n+    private Semaphore openConnectionsSemaphore;\n+    private Semaphore newConnectionRequestsSemaphore;\n+    private Timer resetTimer;\n+    private ReentrantLock resetTimerLock;\n+\n+    @PostConstruct\n+    public void postConstruct() {\n+\n+        openConnectionsSemaphore = new Semaphore(maxOpenConnections);\n+        newConnectionRequestsSemaphore = new Semaphore(maxNewConnectionRequests);\n+\n+        resetTimerLock = new ReentrantLock();\n+\n+        resetTimer = new Timer();\n+        resetTimer.scheduleAtFixedRate(new ResetTask(), resetTime, resetTime);\n+\n+        LOGGER.info(\"Initialized ThrottlingService. {}\", this);\n+    }\n+\n+    @PreDestroy\n+    public void preDestroy() {\n+        if (this.resetTimer != null) {\n+            this.resetTimer.cancel();\n+        }\n+    }\n+\n+    public void openConnection() {\n+\n+        LOGGER.debug(\"Requesting openConnection. available = {} \", this.openConnectionsSemaphore.availablePermits());\n+\n+        try {\n+            this.openConnectionsSemaphore.acquire();\n+            LOGGER.debug(\"openConnection granted. available = {} \", this.openConnectionsSemaphore.availablePermits());\n+        } catch (InterruptedException e) {\n+            LOGGER.warn(\"Unable to acquire Open Connection\", e);\n+            Thread.currentThread().interrupt();\n+        }\n+    }\n+\n+    public void closeConnection() {\n+\n+        LOGGER.debug(\"closeConnection(). available = {} \", this.openConnectionsSemaphore.availablePermits());\n+        this.openConnectionsSemaphore.release();\n+    }\n+\n+    public void newConnectionRequest() {", "originalCommit": "6c38987d72309b384fc6c585c5314b14756d99be", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU4NjYwNQ==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/304#discussion_r423586605", "bodyText": "Ah ja, hier de toepassing. Beide call zijn dus inderdaad nodig. Wanneer openConnection() de verantwoordelijkheid neem om newConnectionRequest aan te roepen hou je hier maar 1 call over. De ThrottlingService heeft dan de verantwoordelijkheid een connection op te leveren, de implementatie van hoe die dat doet is encapsulated.", "author": "jboon", "createdAt": "2020-05-12T09:16:39Z", "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/infra/messaging/DlmsConnectionMessageProcessor.java", "diffHunk": "@@ -52,11 +53,19 @@\n     @Autowired\n     protected DlmsDeviceRepository deviceRepository;\n \n-    protected DlmsConnectionManager createConnectionForDevice(final DlmsDevice device,\n+    @Autowired\n+    protected ThrottlingService throttlingService;\n+\n+    public DlmsConnectionManager createConnectionForDevice(final DlmsDevice device,\n             final MessageMetadata messageMetadata) throws OsgpException {\n+\n+        throttlingService.newConnectionRequest();\n+        throttlingService.openConnection();", "originalCommit": "6c38987d72309b384fc6c585c5314b14756d99be", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU5MTMzOA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/304#discussion_r423591338", "bodyText": "ja daar heb ik idd ook aan zitten denken, op deze manier is het echter explicieter wat er gebeurd (eerst request en dan openConnection) door de twee poortjes achter elkaar te zetten in de client", "author": "coendamen", "createdAt": "2020-05-12T09:24:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU4NjYwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc2MDc1MA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/304#discussion_r423760750", "bodyText": "done", "author": "coendamen", "createdAt": "2020-05-12T14:05:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU4NjYwNQ=="}], "type": "inlineReview"}, {"oid": "43b29fdb36bbe29178e3d7861b3cf7b7ed8120c5", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/43b29fdb36bbe29178e3d7861b3cf7b7ed8120c5", "message": "SLIM-2257 process review comments", "committedDate": "2020-05-12T14:02:12Z", "type": "commit"}, {"oid": "bf0a1d146d9460642e3282a5dcf90264a1816183", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/bf0a1d146d9460642e3282a5dcf90264a1816183", "message": "SLIM-2257 fix test and process review comments", "committedDate": "2020-05-12T14:58:21Z", "type": "commit"}]}