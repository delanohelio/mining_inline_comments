{"pr_number": 1435, "pr_title": "HBASE-24112 [RSGroup] Support renaming rsgroup", "pr_createdAt": "2020-04-04T15:49:30Z", "pr_url": "https://github.com/apache/hbase/pull/1435", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxNTQ0Ng==", "url": "https://github.com/apache/hbase/pull/1435#discussion_r403715446", "bodyText": "Would you like to provide any validation for both strings? e.g. non-empty", "author": "virajjasani", "createdAt": "2020-04-05T15:15:01Z", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/RawAsyncHBaseAdmin.java", "diffHunk": "@@ -4146,4 +4148,21 @@ private void getProcedureResult(long procId, CompletableFuture<Void> future, int\n           resp -> resp.hasRSGroupInfo() ? ProtobufUtil.toGroupInfo(resp.getRSGroupInfo()) : null)))\n       .call();\n   }\n+\n+  @Override\n+  public CompletableFuture<Void> renameRSGroup(String oldName, String newName) {", "originalCommit": "9dd5c861442065e2440b6dc3fff918b8581c83b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzgxMjE4Mw==", "url": "https://github.com/apache/hbase/pull/1435#discussion_r403812183", "bodyText": "I think it is ok to leave it as it is, server side will throw ConstraintException if both are empty. Other methods like addRSGroup neither checks non-empty.", "author": "Reidddddd", "createdAt": "2020-04-06T03:31:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxNTQ0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxNTk2Mw==", "url": "https://github.com/apache/hbase/pull/1435#discussion_r403715963", "bodyText": "nit: simplify to newGroupMap.put(newName, newRSG); ?", "author": "virajjasani", "createdAt": "2020-04-05T15:18:58Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/rsgroup/RSGroupInfoManagerImpl.java", "diffHunk": "@@ -1221,4 +1221,33 @@ public String determineRSGroupInfoForTable(TableName tableName) {\n     return script.getRSGroup(tableName.getNamespaceAsString(), tableName.getQualifierAsString());\n   }\n \n+  @Override\n+  public synchronized void renameRSGroup(String oldName, String newName) throws IOException {\n+    if (oldName.equals(RSGroupInfo.DEFAULT_GROUP)) {\n+      throw new ConstraintException(RSGroupInfo.DEFAULT_GROUP + \" can't be rename\");\n+    }\n+    checkGroupName(newName);\n+\n+    RSGroupInfo oldRSG = getRSGroupInfo(oldName);\n+    Map<String, RSGroupInfo> rsGroupMap = holder.groupName2Group;\n+    Map<String, RSGroupInfo> newGroupMap = Maps.newHashMap(rsGroupMap);\n+    newGroupMap.remove(oldRSG.getName());\n+    RSGroupInfo newRSG = new RSGroupInfo(newName, oldRSG.getServers());\n+    newGroupMap.put(newRSG.getName(), newRSG);", "originalCommit": "9dd5c861442065e2440b6dc3fff918b8581c83b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzgxMDkzMQ==", "url": "https://github.com/apache/hbase/pull/1435#discussion_r403810931", "bodyText": "fixed", "author": "Reidddddd", "createdAt": "2020-04-06T03:24:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxNTk2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxNjYzMQ==", "url": "https://github.com/apache/hbase/pull/1435#discussion_r403716631", "bodyText": "Instead of sleep(), we can use HBASE_TESTING_UTILITY.waitFor:\ne.g.\nHBASE_TESTING_UTILITY.waitFor(1000,\n      () -> {\n          oldgroup = ADMIN.getRSGroup(oldgroup.getName());\n          return oldgroup.getServers().size() == 2 && ADMIN.getRSGroup(tb).getName().equals(oldgroup.getName());\n      });\n\nThis way we will ensure, we wait for specific period of time until our predicate returns true.", "author": "virajjasani", "createdAt": "2020-04-05T15:23:44Z", "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/rsgroup/TestRSGroupsAdmin1.java", "diffHunk": "@@ -468,4 +468,31 @@ public boolean evaluate() throws Exception {\n     // Cleanup\n     TEST_UTIL.deleteTable(tn1);\n   }\n+\n+  @Test\n+  public void testRenameRSGroup() throws Exception {\n+    // Add rsgroup, and assign 2 servers and a table to it.\n+    RSGroupInfo oldgroup = addGroup(\"oldgroup\", 2);\n+    TableName tb = TableName.valueOf(\"testRename\");\n+    TEST_UTIL.createTable(tb, \"tr\");\n+    ADMIN.setRSGroup(Sets.newHashSet(tb), oldgroup.getName());\n+    Thread.sleep(500);", "originalCommit": "9dd5c861442065e2440b6dc3fff918b8581c83b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzgxMDk1Ng==", "url": "https://github.com/apache/hbase/pull/1435#discussion_r403810956", "bodyText": "fixed", "author": "Reidddddd", "createdAt": "2020-04-06T03:24:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxNjYzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxNjkzNg==", "url": "https://github.com/apache/hbase/pull/1435#discussion_r403716936", "bodyText": "Is this redundant assert? assertEquals(servers.size(), newgroup.getServers().size()); is already taking care of it?", "author": "virajjasani", "createdAt": "2020-04-05T15:26:19Z", "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/rsgroup/TestRSGroupsAdmin1.java", "diffHunk": "@@ -468,4 +468,31 @@ public boolean evaluate() throws Exception {\n     // Cleanup\n     TEST_UTIL.deleteTable(tn1);\n   }\n+\n+  @Test\n+  public void testRenameRSGroup() throws Exception {\n+    // Add rsgroup, and assign 2 servers and a table to it.\n+    RSGroupInfo oldgroup = addGroup(\"oldgroup\", 2);\n+    TableName tb = TableName.valueOf(\"testRename\");\n+    TEST_UTIL.createTable(tb, \"tr\");\n+    ADMIN.setRSGroup(Sets.newHashSet(tb), oldgroup.getName());\n+    Thread.sleep(500);\n+    oldgroup = ADMIN.getRSGroup(oldgroup.getName());\n+    assertEquals(2, oldgroup.getServers().size());\n+    assertEquals(oldgroup.getName(), ADMIN.getRSGroup(tb).getName());\n+\n+    // Rename rsgroup\n+    ADMIN.renameRSGroup(oldgroup.getName(), \"newgroup\");\n+    Set<Address> servers = oldgroup.getServers();\n+    RSGroupInfo newgroup = ADMIN.getRSGroup(\"newgroup\");\n+    assertEquals(servers.size(), newgroup.getServers().size());\n+    int match = 0;\n+    for (Address addr : newgroup.getServers()) {\n+      if (servers.contains(addr)) {\n+        match++;\n+      }\n+    }\n+    assertEquals(servers.size(), match);", "originalCommit": "9dd5c861442065e2440b6dc3fff918b8581c83b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzgxMTY2MQ==", "url": "https://github.com/apache/hbase/pull/1435#discussion_r403811661", "bodyText": "The for loop above is to check the servers are exactly the same before renaming. And the match is the number of \u300cexactly the same\u300d. Not redundant regarding to its purpose.", "author": "Reidddddd", "createdAt": "2020-04-06T03:28:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxNjkzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4MjUzNw==", "url": "https://github.com/apache/hbase/pull/1435#discussion_r405182537", "bodyText": "Yes I agree this is useful assertion.\nActually I was wondering if we can add more context to this test as well as assertions. For example, we create and assign another table to another rsgroup. So the \"if\" clause checking rsgroup name in RSGroupInfoManagerImpl.java will get tested. Otherwise this test may still pass even when we remove the \"if\". By the \"if\" I mean:\nif (rsgroup.get().equals(oldName)) {\n    updateTables.add(table.getValue().getTableName());\n  }", "author": "liuml07", "createdAt": "2020-04-08T00:01:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxNjkzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI0MTA0OQ==", "url": "https://github.com/apache/hbase/pull/1435#discussion_r405241049", "bodyText": "Get your idea. Fixed in new commit.", "author": "Reidddddd", "createdAt": "2020-04-08T03:43:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxNjkzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI3ODA4MA==", "url": "https://github.com/apache/hbase/pull/1435#discussion_r405278080", "bodyText": "Yes the test now is very comprehensive. Thanks,", "author": "liuml07", "createdAt": "2020-04-08T06:05:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxNjkzNg=="}], "type": "inlineReview"}, {"oid": "9c473f0fe1710165950409b90f7de2ef41bb5768", "url": "https://github.com/apache/hbase/commit/9c473f0fe1710165950409b90f7de2ef41bb5768", "message": "HBASE-24112 [RSGroup] Support renaming rsgroup", "committedDate": "2020-04-06T03:00:24Z", "type": "commit"}, {"oid": "610591418d65edf5fa7bc9d4c00cb82a0dfca606", "url": "https://github.com/apache/hbase/commit/610591418d65edf5fa7bc9d4c00cb82a0dfca606", "message": "Address review comments", "committedDate": "2020-04-06T03:22:26Z", "type": "commit"}, {"oid": "610591418d65edf5fa7bc9d4c00cb82a0dfca606", "url": "https://github.com/apache/hbase/commit/610591418d65edf5fa7bc9d4c00cb82a0dfca606", "message": "Address review comments", "committedDate": "2020-04-06T03:22:26Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzgxNTg0Mg==", "url": "https://github.com/apache/hbase/pull/1435#discussion_r403815842", "bodyText": "Because we do not store the table informations in RSGroupInfo anymore, if you use the new API to get RSGroupInfo, the tables will always be empty.", "author": "Apache9", "createdAt": "2020-04-06T03:48:55Z", "path": "hbase-common/src/main/java/org/apache/hadoop/hbase/rsgroup/RSGroupInfo.java", "diffHunk": "@@ -38,6 +38,9 @@\n   // Keep servers in a sorted set so has an expected ordering when displayed.\n   private final SortedSet<Address> servers;\n   // Keep tables sorted too.\n+\n+  // TODO: Don't understand why all these should be deprecated. we have table -> rsgroup mapping.", "originalCommit": "610591418d65edf5fa7bc9d4c00cb82a0dfca606", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzgxNzUwMw==", "url": "https://github.com/apache/hbase/pull/1435#discussion_r403817503", "bodyText": "When you call setRSGroup here, all the regions will be reopened... No difference to the old implementation...\nI think the approach maybe possible on branch-2 but on master, it is a bit tricky as we need to change the table descriptor without reopening the regions, which may lead to unexpected behavior...", "author": "Apache9", "createdAt": "2020-04-06T03:57:14Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/rsgroup/RSGroupInfoManagerImpl.java", "diffHunk": "@@ -1221,4 +1221,33 @@ public String determineRSGroupInfoForTable(TableName tableName) {\n     return script.getRSGroup(tableName.getNamespaceAsString(), tableName.getQualifierAsString());\n   }\n \n+  @Override\n+  public synchronized void renameRSGroup(String oldName, String newName) throws IOException {\n+    if (oldName.equals(RSGroupInfo.DEFAULT_GROUP)) {\n+      throw new ConstraintException(RSGroupInfo.DEFAULT_GROUP + \" can't be rename\");\n+    }\n+    checkGroupName(newName);\n+\n+    RSGroupInfo oldRSG = getRSGroupInfo(oldName);\n+    Map<String, RSGroupInfo> rsGroupMap = holder.groupName2Group;\n+    Map<String, RSGroupInfo> newGroupMap = Maps.newHashMap(rsGroupMap);\n+    newGroupMap.remove(oldRSG.getName());\n+    RSGroupInfo newRSG = new RSGroupInfo(newName, oldRSG.getServers());\n+    newGroupMap.put(newName, newRSG);\n+    flushConfig(newGroupMap);\n+\n+    TableDescriptors tableDescriptors = masterServices.getTableDescriptors();\n+    Set<TableName> updateTables = new HashSet<>();\n+    for (Map.Entry<String, TableDescriptor> table : tableDescriptors.getAll().entrySet()) {\n+      Optional<String> rsgroup = table.getValue().getRegionServerGroup();\n+      if (!rsgroup.isPresent()) {\n+        continue;\n+      }\n+      if (rsgroup.get().equals(oldName)) {\n+        updateTables.add(table.getValue().getTableName());\n+      }\n+    }\n+    setRSGroup(updateTables, newName);", "originalCommit": "610591418d65edf5fa7bc9d4c00cb82a0dfca606", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzgyNDAxNg==", "url": "https://github.com/apache/hbase/pull/1435#discussion_r403824016", "bodyText": "Just pushed one commit to avoid region transitions (by direct API instead of procedure way), because the rename operations shouldn't require region transitions. And due to its an admin operation, sounds like reasonable to skip coprocessor hooks, based on already having hooks in rename operation.\n\nwhich may lead to unexpected behavior...\n\nLet's see what QA says", "author": "Reidddddd", "createdAt": "2020-04-06T04:30:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzgxNzUwMw=="}], "type": "inlineReview"}, {"oid": "d4163d68ccfa1f84ee05a6ba5b1b2fc44769ce8a", "url": "https://github.com/apache/hbase/commit/d4163d68ccfa1f84ee05a6ba5b1b2fc44769ce8a", "message": "Avoid reopen regions, since there's no location changes", "committedDate": "2020-04-06T04:23:06Z", "type": "commit"}, {"oid": "65a7b19f9b464b67298e7b926c505174c7d8f05c", "url": "https://github.com/apache/hbase/commit/65a7b19f9b464b67298e7b926c505174c7d8f05c", "message": "Rolled back to previous version which is the right approach so far", "committedDate": "2020-04-07T10:29:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE3ODA4Mg==", "url": "https://github.com/apache/hbase/pull/1435#discussion_r405178082", "bodyText": "Set<TableName> updateTables = new HashSet<>();\nTableDescriptors tableDescriptors = masterServices.getTableDescriptors();\nfor (Map.Entry<String, TableDescriptor> table : tableDescriptors.getAll().entrySet()) {\n  Optional<String> rsgroup = table.getValue().getRegionServerGroup();\n  if (!rsgroup.isPresent()) {\n    continue;\n  }\n  if (rsgroup.get().equals(oldName)) {\n    updateTables.add(table.getValue().getTableName());\n  }\n}\n\ncan be replaced with, if stream is preferred, following code (not tested):\nSet<TableName> updateTables = masterServices.getTableDescriptors().getAll().values()\n  .stream()\n  .filter(t -> oldName.equals(t.getRegionServerGroup().orElse(null)))\n  .map(TableDescriptor::getTableName)\n  .collect(Collectors.toSet());", "author": "liuml07", "createdAt": "2020-04-07T23:46:58Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/rsgroup/RSGroupInfoManagerImpl.java", "diffHunk": "@@ -1221,4 +1221,32 @@ public String determineRSGroupInfoForTable(TableName tableName) {\n     return script.getRSGroup(tableName.getNamespaceAsString(), tableName.getQualifierAsString());\n   }\n \n+  @Override\n+  public synchronized void renameRSGroup(String oldName, String newName) throws IOException {\n+    if (oldName.equals(RSGroupInfo.DEFAULT_GROUP)) {\n+      throw new ConstraintException(RSGroupInfo.DEFAULT_GROUP + \" can't be rename\");\n+    }\n+    checkGroupName(newName);\n+\n+    RSGroupInfo oldRSG = getRSGroupInfo(oldName);\n+    Map<String, RSGroupInfo> rsGroupMap = holder.groupName2Group;\n+    Map<String, RSGroupInfo> newGroupMap = Maps.newHashMap(rsGroupMap);\n+    newGroupMap.remove(oldRSG.getName());\n+    RSGroupInfo newRSG = new RSGroupInfo(newName, oldRSG.getServers());\n+    newGroupMap.put(newName, newRSG);\n+    flushConfig(newGroupMap);\n+    Set<TableName> updateTables = new HashSet<>();", "originalCommit": "65a7b19f9b464b67298e7b926c505174c7d8f05c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1f2ade5bd2af1a139bf3b979f6ae0d8b08b27d81", "url": "https://github.com/apache/hbase/commit/1f2ade5bd2af1a139bf3b979f6ae0d8b08b27d81", "message": "Use lambda expression and add more context in TestRSGroupsAdmin1 to ensure it works as expectation", "committedDate": "2020-04-08T03:40:47Z", "type": "commit"}]}