{"pr_number": 2005, "pr_title": "HBASE-24662 Update DumpClusterStatusAction to notice changes in regio\u2026", "pr_createdAt": "2020-07-01T00:02:11Z", "pr_url": "https://github.com/apache/hbase/pull/2005", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk0MDYyOA==", "url": "https://github.com/apache/hbase/pull/2005#discussion_r452940628", "bodyText": "nit: lambda expression address -> stringBuilder.append(\"\\n  \").append(address)", "author": "virajjasani", "createdAt": "2020-07-10T16:14:48Z", "path": "hbase-it/src/test/java/org/apache/hadoop/hbase/chaos/actions/DumpClusterStatusAction.java", "diffHunk": "@@ -28,18 +35,69 @@\n public class DumpClusterStatusAction extends Action {\n   private static final Logger LOG = LoggerFactory.getLogger(DumpClusterStatusAction.class);\n \n-  @Override protected Logger getLogger() {\n+  private Set<Address> initialRegionServers;\n+\n+  @Override\n+  protected Logger getLogger() {\n     return LOG;\n   }\n \n   @Override\n   public void init(ActionContext context) throws IOException {\n     super.init(context);\n+    initialRegionServers = collectKnownRegionServers(initialStatus);\n   }\n \n   @Override\n   public void perform() throws Exception {\n     getLogger().debug(\"Performing action: Dump cluster status\");\n-    getLogger().info(\"Cluster status\\n\" + cluster.getClusterMetrics());\n+    final ClusterMetrics currentMetrics = cluster.getClusterMetrics();\n+    getLogger().info(\"Cluster status\\n{}\", currentMetrics);\n+    reportMissingRegionServers(currentMetrics);\n+    reportNewRegionServers(currentMetrics);\n+  }\n+\n+  /**\n+   * Build a set of all the host:port pairs of region servers known to this cluster.\n+   */\n+  private static Set<Address> collectKnownRegionServers(final ClusterMetrics clusterMetrics) {\n+    final Set<Address> regionServers = clusterMetrics.getLiveServerMetrics()\n+      .keySet()\n+      .stream()\n+      .map(ServerName::getAddress)\n+      .collect(Collectors.toSet());\n+    clusterMetrics.getDeadServerNames()\n+      .stream()\n+      .map(ServerName::getAddress)\n+      .forEach(regionServers::add);\n+    return Collections.unmodifiableSet(regionServers);\n+  }\n+\n+  private void reportMissingRegionServers(final ClusterMetrics clusterMetrics) {\n+    final Set<Address> regionServers = collectKnownRegionServers(clusterMetrics);\n+    final Set<Address> missingRegionServers = new HashSet<>(initialRegionServers);\n+    missingRegionServers.removeAll(regionServers);\n+    if (!missingRegionServers.isEmpty()) {\n+      final StringBuilder stringBuilder = new StringBuilder()\n+        .append(\"region server(s) are missing from this cluster report\");\n+      missingRegionServers.forEach(address -> {\n+        stringBuilder.append(\"\\n  \").append(address);\n+      });", "originalCommit": "200deb7984cf63274801022e7a89673ae5495f1d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk0MTY1Nw==", "url": "https://github.com/apache/hbase/pull/2005#discussion_r452941657", "bodyText": "same here", "author": "virajjasani", "createdAt": "2020-07-10T16:16:43Z", "path": "hbase-it/src/test/java/org/apache/hadoop/hbase/chaos/actions/DumpClusterStatusAction.java", "diffHunk": "@@ -28,18 +35,69 @@\n public class DumpClusterStatusAction extends Action {\n   private static final Logger LOG = LoggerFactory.getLogger(DumpClusterStatusAction.class);\n \n-  @Override protected Logger getLogger() {\n+  private Set<Address> initialRegionServers;\n+\n+  @Override\n+  protected Logger getLogger() {\n     return LOG;\n   }\n \n   @Override\n   public void init(ActionContext context) throws IOException {\n     super.init(context);\n+    initialRegionServers = collectKnownRegionServers(initialStatus);\n   }\n \n   @Override\n   public void perform() throws Exception {\n     getLogger().debug(\"Performing action: Dump cluster status\");\n-    getLogger().info(\"Cluster status\\n\" + cluster.getClusterMetrics());\n+    final ClusterMetrics currentMetrics = cluster.getClusterMetrics();\n+    getLogger().info(\"Cluster status\\n{}\", currentMetrics);\n+    reportMissingRegionServers(currentMetrics);\n+    reportNewRegionServers(currentMetrics);\n+  }\n+\n+  /**\n+   * Build a set of all the host:port pairs of region servers known to this cluster.\n+   */\n+  private static Set<Address> collectKnownRegionServers(final ClusterMetrics clusterMetrics) {\n+    final Set<Address> regionServers = clusterMetrics.getLiveServerMetrics()\n+      .keySet()\n+      .stream()\n+      .map(ServerName::getAddress)\n+      .collect(Collectors.toSet());\n+    clusterMetrics.getDeadServerNames()\n+      .stream()\n+      .map(ServerName::getAddress)\n+      .forEach(regionServers::add);\n+    return Collections.unmodifiableSet(regionServers);\n+  }\n+\n+  private void reportMissingRegionServers(final ClusterMetrics clusterMetrics) {\n+    final Set<Address> regionServers = collectKnownRegionServers(clusterMetrics);\n+    final Set<Address> missingRegionServers = new HashSet<>(initialRegionServers);\n+    missingRegionServers.removeAll(regionServers);\n+    if (!missingRegionServers.isEmpty()) {\n+      final StringBuilder stringBuilder = new StringBuilder()\n+        .append(\"region server(s) are missing from this cluster report\");\n+      missingRegionServers.forEach(address -> {\n+        stringBuilder.append(\"\\n  \").append(address);\n+      });\n+      getLogger().warn(stringBuilder.toString());\n+    }\n+  }\n+\n+  private void reportNewRegionServers(final ClusterMetrics clusterMetrics) {\n+    final Set<Address> regionServers = collectKnownRegionServers(clusterMetrics);\n+    final Set<Address> newRegionServers = new HashSet<>(regionServers);\n+    newRegionServers.removeAll(initialRegionServers);\n+    if (!newRegionServers.isEmpty()) {\n+      final StringBuilder stringBuilder = new StringBuilder()\n+        .append(\"region server(s) are new for this cluster report\");\n+      newRegionServers.forEach(address -> {\n+        stringBuilder.append(\"\\n  \").append(address);", "originalCommit": "200deb7984cf63274801022e7a89673ae5495f1d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2a0d04b23711994dd552a0a8dea2d16c890ad5de", "url": "https://github.com/apache/hbase/commit/2a0d04b23711994dd552a0a8dea2d16c890ad5de", "message": "HBASE-24662 Update DumpClusterStatusAction to notice changes in region server count\n\nSometimes running chaos monkey, I've found that we lose accounting of\nregion servers. I've taken to a manual process of checking the\nreported list against a known reference. It occurs to me that\nChaosMonkey has a known reference, and it can do this accounting for\nme.\n\nSigned-off-by: Viraj Jasani <vjasani@apache.org>", "committedDate": "2020-07-21T20:34:52Z", "type": "commit"}, {"oid": "2a0d04b23711994dd552a0a8dea2d16c890ad5de", "url": "https://github.com/apache/hbase/commit/2a0d04b23711994dd552a0a8dea2d16c890ad5de", "message": "HBASE-24662 Update DumpClusterStatusAction to notice changes in region server count\n\nSometimes running chaos monkey, I've found that we lose accounting of\nregion servers. I've taken to a manual process of checking the\nreported list against a known reference. It occurs to me that\nChaosMonkey has a known reference, and it can do this accounting for\nme.\n\nSigned-off-by: Viraj Jasani <vjasani@apache.org>", "committedDate": "2020-07-21T20:34:52Z", "type": "forcePushed"}]}