{"pr_number": 2440, "pr_title": "HBASE-25082: Per table WAL metrics: appendCount and appendSize", "pr_createdAt": "2020-09-22T18:55:19Z", "pr_url": "https://github.com/apache/hbase/pull/2440", "timeline": [{"oid": "9d5b9e3b9f44e471ee014df419722513300eae36", "url": "https://github.com/apache/hbase/commit/9d5b9e3b9f44e471ee014df419722513300eae36", "message": "HBASE-25082: Per table WAL metrics: appendCount and appendSize", "committedDate": "2020-09-22T18:56:44Z", "type": "commit"}, {"oid": "9d5b9e3b9f44e471ee014df419722513300eae36", "url": "https://github.com/apache/hbase/commit/9d5b9e3b9f44e471ee014df419722513300eae36", "message": "HBASE-25082: Per table WAL metrics: appendCount and appendSize", "committedDate": "2020-09-22T18:56:44Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzAxMjQ3NQ==", "url": "https://github.com/apache/hbase/pull/2440#discussion_r493012475", "bodyText": "Is it legal for an implementation to pass in a null WALKey, or a non-null WALKey with a null TableName? (As was done in the prior version of TestMetricsWAL?) If so, we may need some NPE protection.", "author": "gjacoby126", "createdAt": "2020-09-22T20:26:34Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/MetricsWAL.java", "diffHunk": "@@ -58,9 +59,10 @@ public void postSync(final long timeInNanos, final int handlerSyncs) {\n   @Override\n   public void postAppend(final long size, final long time, final WALKey logkey,\n       final WALEdit logEdit) throws IOException {\n-    source.incrementAppendCount();\n+    TableName tableName = logkey.getTableName();", "originalCommit": "9d5b9e3b9f44e471ee014df419722513300eae36", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA5OTAzNA==", "url": "https://github.com/apache/hbase/pull/2440#discussion_r493099034", "bodyText": "Don't think it's optional (the test I fixed seems like an outlier). At least the protobuf based WAL implementation mandates the table name to be a required field and there are multiple other places in the code (like replication tailing etc) that assume a non-null table name.\nmessage WALKey {\n  required bytes encoded_region_name = 1;\n  required bytes table_name = 2;\n\nWish there is a better way to enforce it but using (non)nullable annotations is not a common practice in HBase code.", "author": "bharathv", "createdAt": "2020-09-23T00:02:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzAxMjQ3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzIzNzIyOA==", "url": "https://github.com/apache/hbase/pull/2440#discussion_r493237228", "bodyText": "Why this is removed? It is not used?", "author": "Apache9", "createdAt": "2020-09-23T06:51:29Z", "path": "hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/wal/MetricsWALSource.java", "diffHunk": "@@ -114,6 +115,4 @@\n   void incrementSizeLogRoll();\n \n   void incrementWrittenBytes(long val);\n-\n-  long getWrittenBytes();", "originalCommit": "9d5b9e3b9f44e471ee014df419722513300eae36", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY4OTM2OQ==", "url": "https://github.com/apache/hbase/pull/2440#discussion_r493689369", "bodyText": "Yep and this is I.A.private, so..", "author": "bharathv", "createdAt": "2020-09-23T15:32:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzIzNzIyOA=="}], "type": "inlineReview"}]}