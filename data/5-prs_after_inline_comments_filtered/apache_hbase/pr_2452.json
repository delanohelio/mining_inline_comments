{"pr_number": 2452, "pr_title": "HBASE-25071 ReplicationServer support start ReplicationSource internal", "pr_createdAt": "2020-09-24T09:46:12Z", "pr_url": "https://github.com/apache/hbase/pull/2452", "timeline": [{"oid": "da592f5c7d909f8ed6b21234e5e9e4578ae550ac", "url": "https://github.com/apache/hbase/commit/da592f5c7d909f8ed6b21234e5e9e4578ae550ac", "message": "HBASE-25071 ReplicationServer support start ReplicationSource internal", "committedDate": "2020-09-24T10:12:56Z", "type": "forcePushed"}, {"oid": "1edb685b2a17ca8a6d5094d7d85b9642b15927c8", "url": "https://github.com/apache/hbase/commit/1edb685b2a17ca8a6d5094d7d85b9642b15927c8", "message": "HBASE-25071 ReplicationServer support start ReplicationSource internal", "committedDate": "2020-09-24T10:15:47Z", "type": "forcePushed"}, {"oid": "8e6639eb646a021de02a383f0bb48615c6cf32c4", "url": "https://github.com/apache/hbase/commit/8e6639eb646a021de02a383f0bb48615c6cf32c4", "message": "HBASE-25071 ReplicationServer support start ReplicationSource internal", "committedDate": "2020-09-24T10:18:17Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ4OTQ3MA==", "url": "https://github.com/apache/hbase/pull/2452#discussion_r494489470", "bodyText": "Yeah, boolean should be named replicationServer and the method to access this data member is named isReplicationServer.", "author": "saintstack", "createdAt": "2020-09-24T17:27:58Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/HBaseReplicationEndpoint.java", "diffHunk": "@@ -118,6 +118,7 @@\n   private boolean fetchServersUseZk = false;\n   private FetchServersChore fetchServersChore;\n   private int shortOperationTimeout;\n+  private boolean isReplicationServer = false;", "originalCommit": "8e6639eb646a021de02a383f0bb48615c6cf32c4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ5MDAwOA==", "url": "https://github.com/apache/hbase/pull/2452#discussion_r494490008", "bodyText": "Do you have to do hasReplicationServer first? And then read it if present? Or maybe this defaults false if not present?", "author": "saintstack", "createdAt": "2020-09-24T17:28:54Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/HBaseReplicationEndpoint.java", "diffHunk": "@@ -295,6 +296,7 @@ private synchronized AsyncClusterConnection getPeerConnection() throws IOExcepti\n           .createBlockingRpcChannel(master, User.getCurrent(), shortOperationTimeout));\n       ListReplicationSinkServersResponse resp = masterStub\n         .listReplicationSinkServers(null, ListReplicationSinkServersRequest.newBuilder().build());\n+      isReplicationServer = resp.getIsReplicationServer();", "originalCommit": "8e6639eb646a021de02a383f0bb48615c6cf32c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDY5NjA4OQ==", "url": "https://github.com/apache/hbase/pull/2452#discussion_r494696089", "bodyText": "This field is required. So not need to check hasReplicationServer first?", "author": "infraio", "createdAt": "2020-09-25T01:27:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ5MDAwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ5MDUxMw==", "url": "https://github.com/apache/hbase/pull/2452#discussion_r494490513", "bodyText": "Looks like ReplicationServer already committed (why have the 'H' prefix?)", "author": "saintstack", "createdAt": "2020-09-24T17:29:47Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/HReplicationServer.java", "diffHunk": "@@ -50,7 +72,7 @@\n  */\n @InterfaceAudience.Private\n @SuppressWarnings({ \"deprecation\"})\n-public class HReplicationServer extends Thread implements Server {\n+public class HReplicationServer extends Thread implements Server, ReplicationSourceController  {", "originalCommit": "8e6639eb646a021de02a383f0bb48615c6cf32c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDY3OTY3Mg==", "url": "https://github.com/apache/hbase/pull/2452#discussion_r494679672", "bodyText": "Only for the feature branch HBASE-24666.", "author": "infraio", "createdAt": "2020-09-25T00:21:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ5MDUxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ5MTM4MA==", "url": "https://github.com/apache/hbase/pull/2452#discussion_r494491380", "bodyText": "We have to do this? Just because we do it for HMaster and HRegionServer, it doesn't make it a good pattern. This is an Interface to pass instead of the impl?", "author": "saintstack", "createdAt": "2020-09-24T17:31:10Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/HReplicationServer.java", "diffHunk": "@@ -78,27 +104,44 @@\n    */\n   private ServerName serverName;\n \n-  protected final Configuration conf;\n+  private final Configuration conf;\n \n-  private ReplicationSinkService replicationSinkService;\n+  // zookeeper connection and watcher\n+  private final ZKWatcher zooKeeper;\n \n-  final int msgInterval;\n-  // A sleeper that sleeps for msgInterval.\n-  protected final Sleeper sleeper;\n+  private final UUID clusterId;\n \n-  // zookeeper connection and watcher\n-  protected final ZKWatcher zooKeeper;\n+  private HFileSystem walFs;\n+  private Path walRootDir;\n+\n+  /**\n+   * ChoreService used to schedule tasks that we want to run periodically\n+   */\n+  private ChoreService choreService;\n \n   /**\n    * The asynchronous cluster connection to be shared by services.\n    */\n-  protected AsyncClusterConnection asyncClusterConnection;\n+  private AsyncClusterConnection asyncClusterConnection;\n \n   private UserProvider userProvider;\n \n-  protected final ReplicationServerRpcServices rpcServices;\n+  private final ReplicationServerRpcServices rpcServices;", "originalCommit": "8e6639eb646a021de02a383f0bb48615c6cf32c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ5MTU1NQ==", "url": "https://github.com/apache/hbase/pull/2452#discussion_r494491555", "bodyText": "Maybe it is to mock?", "author": "saintstack", "createdAt": "2020-09-24T17:31:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ5MTM4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDY4MDExOA==", "url": "https://github.com/apache/hbase/pull/2452#discussion_r494680118", "bodyText": "I am ok with this. Decouple a RpcService can make the code more clearly.", "author": "infraio", "createdAt": "2020-09-25T00:23:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ5MTM4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ5MjQ2MQ==", "url": "https://github.com/apache/hbase/pull/2452#discussion_r494492461", "bodyText": "Is this stuff normally inside a ReplicationSourceManager? Or maybe the Replication instance? Can you not use these instead?", "author": "saintstack", "createdAt": "2020-09-24T17:32:58Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/HReplicationServer.java", "diffHunk": "@@ -78,27 +104,44 @@\n    */\n   private ServerName serverName;\n \n-  protected final Configuration conf;\n+  private final Configuration conf;\n \n-  private ReplicationSinkService replicationSinkService;\n+  // zookeeper connection and watcher\n+  private final ZKWatcher zooKeeper;\n \n-  final int msgInterval;\n-  // A sleeper that sleeps for msgInterval.\n-  protected final Sleeper sleeper;\n+  private final UUID clusterId;\n \n-  // zookeeper connection and watcher\n-  protected final ZKWatcher zooKeeper;\n+  private HFileSystem walFs;\n+  private Path walRootDir;\n+\n+  /**\n+   * ChoreService used to schedule tasks that we want to run periodically\n+   */\n+  private ChoreService choreService;\n \n   /**\n    * The asynchronous cluster connection to be shared by services.\n    */\n-  protected AsyncClusterConnection asyncClusterConnection;\n+  private AsyncClusterConnection asyncClusterConnection;\n \n   private UserProvider userProvider;\n \n-  protected final ReplicationServerRpcServices rpcServices;\n+  private final ReplicationServerRpcServices rpcServices;\n+\n+  // Total buffer size on this RegionServer for holding batched edits to be shipped.\n+  private final long totalBufferLimit;\n+  private AtomicLong totalBufferUsed = new AtomicLong();\n+\n+  private final MetricsReplicationGlobalSourceSource globalMetrics;\n+  private final Map<String, MetricsSource> sourceMetrics = new HashMap<>();\n+  private final ConcurrentMap<String, ReplicationSourceInterface> sources = new ConcurrentHashMap<>();\n+\n+  private final ReplicationQueueStorage queueStorage;\n+  private final ReplicationPeers replicationPeers;", "originalCommit": "8e6639eb646a021de02a383f0bb48615c6cf32c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDY4NDQ3Nw==", "url": "https://github.com/apache/hbase/pull/2452#discussion_r494684477", "bodyText": "The key thing of this feature is here. The new HReplicationServer will be a independent server which manage some ReplicationSource.\nThe assumption here is that: Replication is a producer-consumer module. The \"producer\" RegionServer write WAL to HDFS and write WAL name to a replication queue, which can be identified by <RegionServer ServerName, QueueId>. The \"consumer\" ReplicationSource fetch the WAL name from the replication queue and read the WAL from HDFS and replicate to other HBase Clusters or other Systems.\nWhen replication offload enabled, ReplicationSourceManager will only wirte the WAL name to the replication queue. But not start any ReplicationSource. HMaster get all replication queues and assign them to many ReplicationServers. Same with the region balancer, HMaster called a StartReplicationSource rpc to the ReplicationServer. Then the ReplicationServer will start a ReplicationSource thread to do the replication job.", "author": "infraio", "createdAt": "2020-09-25T00:38:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ5MjQ2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ5MzM5MQ==", "url": "https://github.com/apache/hbase/pull/2452#discussion_r494493391", "bodyText": "Undo this change. Misspelling.", "author": "saintstack", "createdAt": "2020-09-24T17:34:28Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/HReplicationServer.java", "diffHunk": "@@ -226,13 +302,16 @@ protected final synchronized void setupClusterConnection() throws IOException {\n   }\n \n   /**\n-   * Wait on all threads to finish. Presumption is that all closes and stops\n+   * Wait on all threads to fnish. Presumption is that all closes and stops", "originalCommit": "8e6639eb646a021de02a383f0bb48615c6cf32c4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ5NjE1OA==", "url": "https://github.com/apache/hbase/pull/2452#discussion_r494496158", "bodyText": "This is for the RecoveryReplicationSource only?", "author": "saintstack", "createdAt": "2020-09-24T17:39:14Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSourceInterface.java", "diffHunk": "@@ -52,15 +52,17 @@\n    * @param queueStorage the replication queue storage\n    * @param replicationPeer the replication peer\n    * @param server the server which start and run this replication source\n+   * @param producer the name of region server which produce the replication queue", "originalCommit": "8e6639eb646a021de02a383f0bb48615c6cf32c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDY5Njc2NQ==", "url": "https://github.com/apache/hbase/pull/2452#discussion_r494696765", "bodyText": "For all ReplicationSource. The assumption here is that: all replication is a producer-consumer module.", "author": "infraio", "createdAt": "2020-09-25T01:30:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ5NjE1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ5NjgxMw==", "url": "https://github.com/apache/hbase/pull/2452#discussion_r494496813", "bodyText": "There will be a time when the passed in 'server' differs from server.getServerName?", "author": "saintstack", "createdAt": "2020-09-24T17:40:21Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager.java", "diffHunk": "@@ -360,8 +360,8 @@ private ReplicationSourceInterface createSource(String queueId, ReplicationPeer\n     MetricsSource metrics = new MetricsSource(queueId);\n     sourceMetrics.put(queueId, metrics);\n     // init replication source\n-    src.init(conf, fs, logDir, this, queueStorage, replicationPeer, server, queueId, clusterId,\n-      walFileLengthProvider, metrics);\n+    src.init(conf, fs, logDir, this, queueStorage, replicationPeer, server, server.getServerName(),", "originalCommit": "8e6639eb646a021de02a383f0bb48615c6cf32c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ5NzI0NQ==", "url": "https://github.com/apache/hbase/pull/2452#discussion_r494497245", "bodyText": "Perhaps say more about this?", "author": "saintstack", "createdAt": "2020-09-24T17:41:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ5NjgxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDY5MjExMQ==", "url": "https://github.com/apache/hbase/pull/2452#discussion_r494692111", "bodyText": "@param server the server which start and run this replication source\n@param producer the name of region server which produce WAL to the replication queue\n\nIs this comment clearly?", "author": "infraio", "createdAt": "2020-09-25T01:10:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ5NjgxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDY5MjI3NA==", "url": "https://github.com/apache/hbase/pull/2452#discussion_r494692274", "bodyText": "One replication queue can be identified by <Producer ServerName, QueueId>.", "author": "infraio", "createdAt": "2020-09-25T01:10:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ5NjgxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDY5MjQ2NA==", "url": "https://github.com/apache/hbase/pull/2452#discussion_r494692464", "bodyText": "And one ReplicationSource is responsible for one replication queue.", "author": "infraio", "createdAt": "2020-09-25T01:11:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ5NjgxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDY5NzMxNA==", "url": "https://github.com/apache/hbase/pull/2452#discussion_r494697314", "bodyText": "When replication offload disabled, the ReplicationSource will be started in RegionServer inside. So the producer name is same with the Server's name.", "author": "infraio", "createdAt": "2020-09-25T01:32:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ5NjgxMw=="}], "type": "inlineReview"}, {"oid": "b7e51db3fb90a58fc82548be96f87f7bff67077f", "url": "https://github.com/apache/hbase/commit/b7e51db3fb90a58fc82548be96f87f7bff67077f", "message": "HBASE-25071 ReplicationServer support start ReplicationSource internal", "committedDate": "2020-09-25T01:12:11Z", "type": "forcePushed"}, {"oid": "425ffb4ff4d462b9e935a03cc04538f96d86fa52", "url": "https://github.com/apache/hbase/commit/425ffb4ff4d462b9e935a03cc04538f96d86fa52", "message": "HBASE-25071 ReplicationServer support start ReplicationSource internal", "committedDate": "2020-09-25T02:37:56Z", "type": "forcePushed"}, {"oid": "bb46ef90898a7d3bc9967d73eb11b3d170103701", "url": "https://github.com/apache/hbase/commit/bb46ef90898a7d3bc9967d73eb11b3d170103701", "message": "HBASE-25071 ReplicationServer support start ReplicationSource internal", "committedDate": "2020-09-25T08:22:40Z", "type": "forcePushed"}, {"oid": "5a39f53bdba58765c5f0dc9fbbbfc2b646967fc2", "url": "https://github.com/apache/hbase/commit/5a39f53bdba58765c5f0dc9fbbbfc2b646967fc2", "message": "HBASE-25071 ReplicationServer support start ReplicationSource internal", "committedDate": "2020-11-02T06:39:13Z", "type": "forcePushed"}, {"oid": "8a063c37cbd81f96c3480c49a0edbbf53fb44748", "url": "https://github.com/apache/hbase/commit/8a063c37cbd81f96c3480c49a0edbbf53fb44748", "message": "HBASE-25071 ReplicationServer support start ReplicationSource internal", "committedDate": "2020-11-02T10:33:58Z", "type": "forcePushed"}, {"oid": "108dddd3fe824141b681f015e549e7794328e1a1", "url": "https://github.com/apache/hbase/commit/108dddd3fe824141b681f015e549e7794328e1a1", "message": "HBASE-25071 ReplicationServer support start ReplicationSource internal", "committedDate": "2020-11-02T11:11:54Z", "type": "forcePushed"}, {"oid": "97f0c23953dc942d53e4de9d5110c50559c61080", "url": "https://github.com/apache/hbase/commit/97f0c23953dc942d53e4de9d5110c50559c61080", "message": "HBASE-25071 ReplicationServer support start ReplicationSource internal", "committedDate": "2020-11-04T02:23:14Z", "type": "forcePushed"}, {"oid": "7d4b04119169b6f4a2beb619fe27951100850baa", "url": "https://github.com/apache/hbase/commit/7d4b04119169b6f4a2beb619fe27951100850baa", "message": "HBASE-25071 ReplicationServer support start ReplicationSource internal", "committedDate": "2020-11-04T06:16:42Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE2Mzc0MQ==", "url": "https://github.com/apache/hbase/pull/2452#discussion_r517163741", "bodyText": "interrrupt the fetchWALsThread when the ReplicationServer exits or when the peer terminates?", "author": "ddupg", "createdAt": "2020-11-04T08:17:08Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java", "diffHunk": "@@ -224,6 +226,35 @@ public void init(Configuration conf, FileSystem fs, Path walDir,\n     this.abortOnError = this.conf.getBoolean(\"replication.source.regionserver.abort\",\n       true);\n \n+    if (conf.getBoolean(HConstants.REPLICATION_OFFLOAD_ENABLE_KEY,\n+      HConstants.REPLICATION_OFFLOAD_ENABLE_DEFAULT)) {\n+      fetchWALsThread = new Thread(() -> {", "originalCommit": "7d4b04119169b6f4a2beb619fe27951100850baa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a28ec449c181477d11df405d7ec4e30e63c42228", "url": "https://github.com/apache/hbase/commit/a28ec449c181477d11df405d7ec4e30e63c42228", "message": "HBASE-25071 ReplicationServer support start ReplicationSource internal", "committedDate": "2020-11-05T07:16:23Z", "type": "forcePushed"}, {"oid": "c8537ef2b49c8c7e592fff0d1f4e3ec449a9fd89", "url": "https://github.com/apache/hbase/commit/c8537ef2b49c8c7e592fff0d1f4e3ec449a9fd89", "message": "HBASE-25071 ReplicationServer support start ReplicationSource internal", "committedDate": "2020-11-06T07:17:50Z", "type": "commit"}, {"oid": "c8537ef2b49c8c7e592fff0d1f4e3ec449a9fd89", "url": "https://github.com/apache/hbase/commit/c8537ef2b49c8c7e592fff0d1f4e3ec449a9fd89", "message": "HBASE-25071 ReplicationServer support start ReplicationSource internal", "committedDate": "2020-11-06T07:17:50Z", "type": "forcePushed"}]}