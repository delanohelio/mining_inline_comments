{"pr_number": 1803, "pr_title": "HBASE-24468 Add region info when log meessages in HStore.", "pr_createdAt": "2020-05-29T09:15:13Z", "pr_url": "https://github.com/apache/hbase/pull/1803", "timeline": [{"oid": "fdec3a18238cfe084d3e31fdd1a62e67c4200d57", "url": "https://github.com/apache/hbase/commit/fdec3a18238cfe084d3e31fdd1a62e67c4200d57", "message": "[HBASE-24468]Add region info when log meessages in HStore.", "committedDate": "2020-05-29T09:13:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjYzODU1NQ==", "url": "https://github.com/apache/hbase/pull/1803#discussion_r432638555", "bodyText": "In all the places we have this pattern  \"in store {} in region {}\"\nBetter we can change toString().  Include region and store name there.  Then in every log we can just refer to 'this'\n:  some format like this for toString?", "author": "anoopsjohn", "createdAt": "2020-05-29T17:39:11Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStore.java", "diffHunk": "@@ -276,7 +276,8 @@ protected HStore(final HRegion region, final ColumnFamilyDescriptor family,\n     // used by ScanQueryMatcher\n     long timeToPurgeDeletes =\n         Math.max(conf.getLong(\"hbase.hstore.time.to.purge.deletes\", 0), 0);\n-    LOG.trace(\"Time to purge deletes set to {}ms in store {}\", timeToPurgeDeletes, this);\n+    LOG.trace(\"Time to purge deletes set to {}ms in store {} in region {}\", timeToPurgeDeletes,", "originalCommit": "fdec3a18238cfe084d3e31fdd1a62e67c4200d57", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc4NTQzOA==", "url": "https://github.com/apache/hbase/pull/1803#discussion_r432785438", "bodyText": "I like what @anoopsjohn  says. toString could be encodedRegionName/store-name (region name is too much -- could be anything given it includes start key... could be a spew of binary characters....)", "author": "saintstack", "createdAt": "2020-05-29T23:50:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjYzODU1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc4NTU3OA==", "url": "https://github.com/apache/hbase/pull/1803#discussion_r432785578", "bodyText": "Otherwise I'd comment that no need of words 'store' or 'region' in log message; no need of these qualifiers.", "author": "saintstack", "createdAt": "2020-05-29T23:51:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjYzODU1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc5MjA0MA==", "url": "https://github.com/apache/hbase/pull/1803#discussion_r432792040", "bodyText": "Good suggestions, I will do more work on this, thank you for all your reviews", "author": "songxincun", "createdAt": "2020-05-30T00:35:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjYzODU1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc4NTc4MQ==", "url": "https://github.com/apache/hbase/pull/1803#discussion_r432785781", "bodyText": "Why have 'HStore:' in here? Instead of 'Created HStore: Store=', just have 'Created '.", "author": "saintstack", "createdAt": "2020-05-29T23:52:38Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStore.java", "diffHunk": "@@ -331,11 +332,11 @@ protected HStore(final HRegion region, final ColumnFamilyDescriptor family,\n       confPrintThreshold = 10;\n     }\n     this.parallelPutCountPrintThreshold = confPrintThreshold;\n-    LOG.info(\"Store={},  memstore type={}, storagePolicy={}, verifyBulkLoads={}, \"\n-            + \"parallelPutCountPrintThreshold={}, encoding={}, compression={}\",\n+    LOG.info(\"Created HStore: Store={},  memstore type={}, storagePolicy={}, verifyBulkLoads={}, \"", "originalCommit": "fdec3a18238cfe084d3e31fdd1a62e67c4200d57", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc5MjQzNA==", "url": "https://github.com/apache/hbase/pull/1803#discussion_r432792434", "bodyText": "Why have 'HStore:' in here? Instead of 'Created HStore: Store=', just have 'Created '.\n\nGot it", "author": "songxincun", "createdAt": "2020-05-30T00:38:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc4NTc4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc4NTgyMA==", "url": "https://github.com/apache/hbase/pull/1803#discussion_r432785820", "bodyText": "Encoded name, not full name.", "author": "saintstack", "createdAt": "2020-05-29T23:52:52Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStore.java", "diffHunk": "@@ -331,11 +332,11 @@ protected HStore(final HRegion region, final ColumnFamilyDescriptor family,\n       confPrintThreshold = 10;\n     }\n     this.parallelPutCountPrintThreshold = confPrintThreshold;\n-    LOG.info(\"Store={},  memstore type={}, storagePolicy={}, verifyBulkLoads={}, \"\n-            + \"parallelPutCountPrintThreshold={}, encoding={}, compression={}\",\n+    LOG.info(\"Created HStore: Store={},  memstore type={}, storagePolicy={}, verifyBulkLoads={}, \"\n+            + \"parallelPutCountPrintThreshold={}, encoding={}, compression={} in region {}\",\n         getColumnFamilyName(), memstore.getClass().getSimpleName(), policyName, verifyBulkLoads,\n         parallelPutCountPrintThreshold, family.getDataBlockEncoding(),\n-        family.getCompressionType());\n+        family.getCompressionType(), getRegionInfo().getRegionNameAsString());", "originalCommit": "fdec3a18238cfe084d3e31fdd1a62e67c4200d57", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc5MjQ1NQ==", "url": "https://github.com/apache/hbase/pull/1803#discussion_r432792455", "bodyText": "Encoded name, not full name.\n\nOK", "author": "songxincun", "createdAt": "2020-05-30T00:39:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc4NTgyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjgxMjI2NQ==", "url": "https://github.com/apache/hbase/pull/1803#discussion_r432812265", "bodyText": "Oh ya encoded name..  In fact  I wanted to say , better we can use RegionInfo#prettyPrint(encodedRegionName).. Sorry missed adding that.", "author": "anoopsjohn", "createdAt": "2020-05-30T05:26:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc4NTgyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc4NjAyMw==", "url": "https://github.com/apache/hbase/pull/1803#discussion_r432786023", "bodyText": "No need of 'Store' or 'region'... its obvious that we're talking store and region. Having these works in there bulk up logging and make it harder to read/parse.", "author": "saintstack", "createdAt": "2020-05-29T23:54:03Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStore.java", "diffHunk": "@@ -1192,8 +1198,10 @@ public StoreFileWriter createWriterInTmp(long maxKeyCount, Compression.Algorithm\n       if (shouldCacheDataOnWrite) {\n         writerCacheConf.enableCacheOnWrite();\n         if (!cacheOnWriteLogged) {\n-          LOG.info(\"For Store {} , cacheDataOnWrite is true, hence enabled cacheOnWrite for \" +\n-            \"Index blocks and Bloom filter blocks\", getColumnFamilyName());\n+          LOG.info(\"For Store {} in region {}, \" +", "originalCommit": "fdec3a18238cfe084d3e31fdd1a62e67c4200d57", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc5MjQ4Nw==", "url": "https://github.com/apache/hbase/pull/1803#discussion_r432792487", "bodyText": "No need of 'Store' or 'region'... its obvious that we're talking store and region. Having these works in there bulk up logging and make it harder to read/parse.\n\nGot it", "author": "songxincun", "createdAt": "2020-05-30T00:39:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc4NjAyMw=="}], "type": "inlineReview"}, {"oid": "4a83e7becd885f83d827afd0fab95d4fe61a3748", "url": "https://github.com/apache/hbase/commit/4a83e7becd885f83d827afd0fab95d4fe61a3748", "message": "Revert \"[HBASE-24468]Add region info when log meessages in HStore.\"\n\nThis reverts commit fdec3a18238cfe084d3e31fdd1a62e67c4200d57.", "committedDate": "2020-05-31T05:37:22Z", "type": "commit"}, {"oid": "f7a3af26d7da1abc9d62528d0bd08ded585b00b1", "url": "https://github.com/apache/hbase/commit/f7a3af26d7da1abc9d62528d0bd08ded585b00b1", "message": "Fix what saintstack and anoopsjohn suggest", "committedDate": "2020-05-31T07:23:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzA1OTg2NQ==", "url": "https://github.com/apache/hbase/pull/1803#discussion_r433059865", "bodyText": "add a space before is", "author": "binlijin", "createdAt": "2020-06-01T06:17:28Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStore.java", "diffHunk": "@@ -1953,8 +1950,7 @@ public boolean shouldPerformMajorCompaction() throws IOException {\n     }\n \n     if (LOG.isDebugEnabled()) {\n-      LOG.debug(getRegionInfo().getEncodedName() + \" - \" + getColumnFamilyName()\n-          + \": Initiating \" + (request.isMajor() ? \"major\" : \"minor\") + \" compaction\"\n+      LOG.debug(this + \"is initiating \" + (request.isMajor() ? \"major\" : \"minor\") + \" compaction\"", "originalCommit": "f7a3af26d7da1abc9d62528d0bd08ded585b00b1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzA2MTgxOQ==", "url": "https://github.com/apache/hbase/pull/1803#discussion_r433061819", "bodyText": "OK", "author": "songxincun", "createdAt": "2020-06-01T06:24:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzA1OTg2NQ=="}], "type": "inlineReview"}, {"oid": "e477bb015f743e1e1e61781ff83135f3de802940", "url": "https://github.com/apache/hbase/commit/e477bb015f743e1e1e61781ff83135f3de802940", "message": "Add a space as binlijin suggested", "committedDate": "2020-06-01T06:25:15Z", "type": "commit"}]}