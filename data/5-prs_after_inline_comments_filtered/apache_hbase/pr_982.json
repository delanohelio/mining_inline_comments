{"pr_number": 982, "pr_title": "HBASE-23636 Disable table may hang when regionserver stop or abort.", "pr_createdAt": "2020-01-03T11:27:37Z", "pr_url": "https://github.com/apache/hbase/pull/982", "timeline": [{"oid": "180f811c9c7059a61a3dbcd898ec49a078e4a912", "url": "https://github.com/apache/hbase/commit/180f811c9c7059a61a3dbcd898ec49a078e4a912", "message": "HBASE-23636 Disable table may hang when regionserver stop or abort.", "committedDate": "2020-01-03T11:28:46Z", "type": "commit"}, {"oid": "180f811c9c7059a61a3dbcd898ec49a078e4a912", "url": "https://github.com/apache/hbase/commit/180f811c9c7059a61a3dbcd898ec49a078e4a912", "message": "HBASE-23636 Disable table may hang when regionserver stop or abort.", "committedDate": "2020-01-03T11:28:46Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjc5OTIwOQ==", "url": "https://github.com/apache/hbase/pull/982#discussion_r362799209", "bodyText": "Do we still need to set this if the TableState is DISABLED?", "author": "Apache9", "createdAt": "2020-01-03T12:55:29Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/procedure/ServerCrashProcedure.java", "diffHunk": "@@ -484,6 +484,9 @@ private void assignRegions(MasterProcedureEnv env, List<RegionInfo> regions) thr\n         }\n         if (env.getMasterServices().getTableStateManager().isTableState(regionNode.getTable(),\n           TableState.State.DISABLING, TableState.State.DISABLED)) {\n+          env.getAssignmentManager().regionClosedAbnormally(regionNode);", "originalCommit": "180f811c9c7059a61a3dbcd898ec49a078e4a912", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzAwOTY0Ng==", "url": "https://github.com/apache/hbase/pull/982#discussion_r363009646", "bodyText": "Looks like no need, let me fix it.", "author": "binlijin", "createdAt": "2020-01-04T02:03:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjc5OTIwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE1MDQ0OA==", "url": "https://github.com/apache/hbase/pull/982#discussion_r363150448", "bodyText": "Please add some comments to describe the problem here? We need to change the state here otherwise the TRSP scheduled by DTP will try to close the region from a dead server and will never succeed.", "author": "Apache9", "createdAt": "2020-01-06T03:51:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjc5OTIwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE2Njk3NA==", "url": "https://github.com/apache/hbase/pull/982#discussion_r363166974", "bodyText": "done", "author": "binlijin", "createdAt": "2020-01-06T05:57:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjc5OTIwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjgwNDEwOQ==", "url": "https://github.com/apache/hbase/pull/982#discussion_r362804109", "bodyText": "LOG is not being used", "author": "virajjasani", "createdAt": "2020-01-03T13:15:18Z", "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/master/assignment/TestRaceBetweenSCPAndDTP.java", "diffHunk": "@@ -0,0 +1,146 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase.master.assignment;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.hbase.HBaseClassTestRule;\n+import org.apache.hadoop.hbase.HBaseTestingUtility;\n+import org.apache.hadoop.hbase.HConstants;\n+import org.apache.hadoop.hbase.ServerName;\n+import org.apache.hadoop.hbase.TableName;\n+import org.apache.hadoop.hbase.client.RegionInfo;\n+import org.apache.hadoop.hbase.master.HMaster;\n+import org.apache.hadoop.hbase.master.MasterServices;\n+import org.apache.hadoop.hbase.master.RegionPlan;\n+import org.apache.hadoop.hbase.master.procedure.DisableTableProcedure;\n+import org.apache.hadoop.hbase.master.procedure.ServerCrashProcedure;\n+import org.apache.hadoop.hbase.procedure2.ProcedureExecutor;\n+import org.apache.hadoop.hbase.testclassification.LargeTests;\n+import org.apache.hadoop.hbase.testclassification.MasterTests;\n+import org.apache.hadoop.hbase.util.Bytes;\n+import org.apache.zookeeper.KeeperException;\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.ClassRule;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.Future;\n+\n+/**\n+ * Testcase for HBASE-23636.\n+ */\n+@Category({ MasterTests.class, LargeTests.class })\n+public class TestRaceBetweenSCPAndDTP {\n+  private static final Logger LOG = LoggerFactory.getLogger(TestRaceBetweenSCPAndDTP.class);", "originalCommit": "180f811c9c7059a61a3dbcd898ec49a078e4a912", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzAwOTY0NQ==", "url": "https://github.com/apache/hbase/pull/982#discussion_r363009645", "bodyText": "OK", "author": "binlijin", "createdAt": "2020-01-04T02:03:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjgwNDEwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjgwNjEyNg==", "url": "https://github.com/apache/hbase/pull/982#discussion_r362806126", "bodyText": "redundant import", "author": "virajjasani", "createdAt": "2020-01-03T13:22:40Z", "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/master/assignment/TestRaceBetweenSCPAndDTP.java", "diffHunk": "@@ -0,0 +1,146 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase.master.assignment;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.hbase.HBaseClassTestRule;\n+import org.apache.hadoop.hbase.HBaseTestingUtility;\n+import org.apache.hadoop.hbase.HConstants;\n+import org.apache.hadoop.hbase.ServerName;\n+import org.apache.hadoop.hbase.TableName;\n+import org.apache.hadoop.hbase.client.RegionInfo;\n+import org.apache.hadoop.hbase.master.HMaster;\n+import org.apache.hadoop.hbase.master.MasterServices;\n+import org.apache.hadoop.hbase.master.RegionPlan;\n+import org.apache.hadoop.hbase.master.procedure.DisableTableProcedure;\n+import org.apache.hadoop.hbase.master.procedure.ServerCrashProcedure;\n+import org.apache.hadoop.hbase.procedure2.ProcedureExecutor;\n+import org.apache.hadoop.hbase.testclassification.LargeTests;\n+import org.apache.hadoop.hbase.testclassification.MasterTests;\n+import org.apache.hadoop.hbase.util.Bytes;\n+import org.apache.zookeeper.KeeperException;\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.ClassRule;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.Future;", "originalCommit": "180f811c9c7059a61a3dbcd898ec49a078e4a912", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzAwOTY0Mg==", "url": "https://github.com/apache/hbase/pull/982#discussion_r363009642", "bodyText": "OK", "author": "binlijin", "createdAt": "2020-01-04T02:03:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjgwNjEyNg=="}], "type": "inlineReview"}, {"oid": "0b11682429964666fbb522965d75ef2b0af6f35b", "url": "https://github.com/apache/hbase/commit/0b11682429964666fbb522965d75ef2b0af6f35b", "message": "fix comment", "committedDate": "2020-01-04T02:04:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzAxODIwNQ==", "url": "https://github.com/apache/hbase/pull/982#discussion_r363018205", "bodyText": "this would print server, splitWal and meta correct? or it will print pid, ppid, state etc additionally?", "author": "virajjasani", "createdAt": "2020-01-04T05:54:19Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/procedure/ServerCrashProcedure.java", "diffHunk": "@@ -482,13 +482,18 @@ private void assignRegions(MasterProcedureEnv env, List<RegionInfo> regions) thr\n           regionNode.getProcedure().serverCrashed(env, regionNode, getServerName());\n           continue;\n         }\n-        if (env.getMasterServices().getTableStateManager().isTableState(regionNode.getTable(),\n-          TableState.State.DISABLING, TableState.State.DISABLED)) {\n+        if (env.getMasterServices().getTableStateManager()\n+          .isTableState(regionNode.getTable(), TableState.State.DISABLING)) {\n           env.getAssignmentManager().regionClosedAbnormally(regionNode);\n-          LOG.info(\"{} found table disabled for region {}, set it state to ABNORMALLY_CLOSED.\",\n+          LOG.info(\"{} found table disabling for region {}, set it state to ABNORMALLY_CLOSED.\",\n             this, regionNode);\n           continue;\n         }\n+        if (env.getMasterServices().getTableStateManager()\n+          .isTableState(regionNode.getTable(), TableState.State.DISABLED)) {\n+          LOG.warn(\"{} found table disabled for region {}.\", this, regionNode);", "originalCommit": "0b11682429964666fbb522965d75ef2b0af6f35b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzAxODQxNQ==", "url": "https://github.com/apache/hbase/pull/982#discussion_r363018415", "bodyText": "Seems like it will print everything, is it good to log:\nLOG.warn(\"Found table disabled for region {}, procDetails: {}\", regionNode, this);\n\nif you feel this might be more readable", "author": "virajjasani", "createdAt": "2020-01-04T06:01:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzAxODIwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA4NTc2MQ==", "url": "https://github.com/apache/hbase/pull/982#discussion_r363085761", "bodyText": "done, change it.", "author": "binlijin", "createdAt": "2020-01-05T11:14:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzAxODIwNQ=="}], "type": "inlineReview"}, {"oid": "36cca0592be87be04945da8ce0aa8b915b582bc5", "url": "https://github.com/apache/hbase/commit/36cca0592be87be04945da8ce0aa8b915b582bc5", "message": "fix comment", "committedDate": "2020-01-05T11:13:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE1MTAwNA==", "url": "https://github.com/apache/hbase/pull/982#discussion_r363151004", "bodyText": "And also here, described why we do not need to set the state. I think the state here should already be CLOSED? And I wonder whether we could reach here, since the region is sitll in OPEN or OPENING state but the server recorded in AM is  already dead so we can not close it in TRSP...", "author": "Apache9", "createdAt": "2020-01-06T03:56:36Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/procedure/ServerCrashProcedure.java", "diffHunk": "@@ -482,8 +482,16 @@ private void assignRegions(MasterProcedureEnv env, List<RegionInfo> regions) thr\n           regionNode.getProcedure().serverCrashed(env, regionNode, getServerName());\n           continue;\n         }\n-        if (env.getMasterServices().getTableStateManager().isTableState(regionNode.getTable(),\n-          TableState.State.DISABLING, TableState.State.DISABLED)) {\n+        if (env.getMasterServices().getTableStateManager()\n+          .isTableState(regionNode.getTable(), TableState.State.DISABLING)) {\n+          env.getAssignmentManager().regionClosedAbnormally(regionNode);\n+          LOG.info(\"{} found table disabling for region {}, set it state to ABNORMALLY_CLOSED.\",\n+            this, regionNode);\n+          continue;\n+        }\n+        if (env.getMasterServices().getTableStateManager()", "originalCommit": "36cca0592be87be04945da8ce0aa8b915b582bc5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE2NjkwOA==", "url": "https://github.com/apache/hbase/pull/982#discussion_r363166908", "bodyText": "ok", "author": "binlijin", "createdAt": "2020-01-06T05:56:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE1MTAwNA=="}], "type": "inlineReview"}, {"oid": "71ee557e37cd8cb3c3964f77298e1fc64013b7ef", "url": "https://github.com/apache/hbase/commit/71ee557e37cd8cb3c3964f77298e1fc64013b7ef", "message": "add more comment", "committedDate": "2020-01-06T05:52:59Z", "type": "commit"}]}