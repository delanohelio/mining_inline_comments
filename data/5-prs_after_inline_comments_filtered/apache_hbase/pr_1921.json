{"pr_number": 1921, "pr_title": "HBASE-24579: Failed SASL authentication does not result in an exception on client side", "pr_createdAt": "2020-06-17T11:45:42Z", "pr_url": "https://github.com/apache/hbase/pull/1921", "timeline": [{"oid": "0e5de32a89f046b548caade6a398d4978cd99e52", "url": "https://github.com/apache/hbase/commit/0e5de32a89f046b548caade6a398d4978cd99e52", "message": "HBASE-24579: Failed SASL authentication does not result in an exception on client side\n\nread input stream even if the auhentication is comleted\nadd a test", "committedDate": "2020-06-17T11:44:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU2MjM3NQ==", "url": "https://github.com/apache/hbase/pull/1921#discussion_r441562375", "bodyText": "Why not just catch IOException ?", "author": "virajjasani", "createdAt": "2020-06-17T13:52:59Z", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcClient.java", "diffHunk": "@@ -148,6 +148,18 @@ public boolean saslConnect(InputStream inS, OutputStream outS) throws IOExceptio\n           inStream.readFully(saslToken);\n         }\n       }\n+\n+      if(isComplete()){\n+        try {\n+          readStatus(inStream);\n+        }\n+        catch (Exception e){", "originalCommit": "0e5de32a89f046b548caade6a398d4978cd99e52", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYxOTQ1OA==", "url": "https://github.com/apache/hbase/pull/1921#discussion_r441619458", "bodyText": "Thanks for the feedback. You are right, that would make more sense. I'll change it.", "author": "BukrosSzabolcs", "createdAt": "2020-06-17T15:07:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU2MjM3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU2MzY3Ng==", "url": "https://github.com/apache/hbase/pull/1921#discussion_r441563676", "bodyText": "Good to log at error level?", "author": "virajjasani", "createdAt": "2020-06-17T13:54:41Z", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcClient.java", "diffHunk": "@@ -148,6 +148,18 @@ public boolean saslConnect(InputStream inS, OutputStream outS) throws IOExceptio\n           inStream.readFully(saslToken);\n         }\n       }\n+\n+      if(isComplete()){\n+        try {\n+          readStatus(inStream);\n+        }\n+        catch (Exception e){\n+          if(e instanceof RemoteException){\n+            LOG.debug(\"Sasl connection failed: \", e);", "originalCommit": "0e5de32a89f046b548caade6a398d4978cd99e52", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYwMTAwNA==", "url": "https://github.com/apache/hbase/pull/1921#discussion_r441601004", "bodyText": "I would prefer to keep it on debug here and only log it on error level where it is handled. It keeps the log cleaner.", "author": "BukrosSzabolcs", "createdAt": "2020-06-17T14:44:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU2MzY3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYwMzE5MQ==", "url": "https://github.com/apache/hbase/pull/1921#discussion_r441603191", "bodyText": "If it is handled well with error already, we are good here.\nThanks", "author": "virajjasani", "createdAt": "2020-06-17T14:47:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU2MzY3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU2NzAxMw==", "url": "https://github.com/apache/hbase/pull/1921#discussion_r441567013", "bodyText": "This should be out of if condition right? Don't we want to re-throw IOException other than RemoteException?\nWhich brings the question, why to even have if condition? I know RemoteException coming from readStatus is imp to us but we don't want to swallow IOException if inStream.readInt() throws one because inStream.readInt() is pre-requisite to know whether the status is SaslStatus.SUCCESS", "author": "virajjasani", "createdAt": "2020-06-17T13:58:58Z", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcClient.java", "diffHunk": "@@ -148,6 +148,18 @@ public boolean saslConnect(InputStream inS, OutputStream outS) throws IOExceptio\n           inStream.readFully(saslToken);\n         }\n       }\n+\n+      if(isComplete()){\n+        try {\n+          readStatus(inStream);\n+        }\n+        catch (Exception e){\n+          if(e instanceof RemoteException){\n+            LOG.debug(\"Sasl connection failed: \", e);\n+            throw e;", "originalCommit": "0e5de32a89f046b548caade6a398d4978cd99e52", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYxMzkyNA==", "url": "https://github.com/apache/hbase/pull/1921#discussion_r441613924", "bodyText": "You are right, the if condition is not necessary, I'll fix that.\nAs far as I understand SaslStatus.SUCCESS should have been handled at this point and having no new data in the stream is a valid usecase. If we would re-throw IOExceptions we would re-throw the EOFException we would get when trying to read from such a stream.", "author": "BukrosSzabolcs", "createdAt": "2020-06-17T15:00:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU2NzAxMw=="}], "type": "inlineReview"}, {"oid": "0d9f0ab736e9ec110d70050984779c656dfcc344", "url": "https://github.com/apache/hbase/commit/0d9f0ab736e9ec110d70050984779c656dfcc344", "message": "HBASE-24579: Failed SASL authentication does not result in an exception on client side\n\nremove if condition\nonly catch IOExceptions", "committedDate": "2020-06-17T15:43:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc1MjkwMQ==", "url": "https://github.com/apache/hbase/pull/1921#discussion_r441752901", "bodyText": "We still have this condition? I was talking about removing this condition because with this condition, we are swallowing IOException other than RemoteException, which we don't want to do. We want to re-throw all categories of IOException here, not just RemoteException.", "author": "virajjasani", "createdAt": "2020-06-17T18:43:03Z", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcClient.java", "diffHunk": "@@ -148,6 +148,16 @@ public boolean saslConnect(InputStream inS, OutputStream outS) throws IOExceptio\n           inStream.readFully(saslToken);\n         }\n       }\n+\n+      try {\n+        readStatus(inStream);\n+      }\n+      catch (IOException e){\n+        if(e instanceof RemoteException){", "originalCommit": "0d9f0ab736e9ec110d70050984779c656dfcc344", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc1NjU0NQ==", "url": "https://github.com/apache/hbase/pull/1921#discussion_r441756545", "bodyText": "I think you removed the outer condition instead of\nif(e instanceof RemoteException).\nLet me copy my previous comment:\nI know RemoteException coming from readStatus is imp to us but we don't want to swallow IOException if inStream.readInt() throws one because inStream.readInt() is pre-requisite to know whether the status is SaslStatus.SUCCESS\nI am talking about what is happening within readStatus(inStream) call.", "author": "virajjasani", "createdAt": "2020-06-17T18:48:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc1MjkwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjA4OTI3OQ==", "url": "https://github.com/apache/hbase/pull/1921#discussion_r442089279", "bodyText": "I just run a test on a test system. This time authentication was set up correctly and the goal was to see what happens in a normal usecase.\nWhen it reached the new readStatus(inStream); The following exception was thrown:\njava.net.SocketTimeoutException: 20000 millis timeout while waiting for channel to be ready for read. ch : java.nio.channels.SocketChannel[connected local=/xxx remote=yyy ]\n        at org.apache.hadoop.net.SocketIOWithTimeout.doIO(SocketIOWithTimeout.java:164)\n        at org.apache.hadoop.net.SocketInputStream.read(SocketInputStream.java:161)\n        at org.apache.hadoop.net.SocketInputStream.read(SocketInputStream.java:131)\n        at java.io.FilterInputStream.read(FilterInputStream.java:133)\n        at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)\n        at java.io.BufferedInputStream.read(BufferedInputStream.java:265)\n        at java.io.DataInputStream.readInt(DataInputStream.java:387)\n        at org.apache.hadoop.hbase.security.HBaseSaslRpcClient.readStatus(HBaseSaslRpcClient.java:51)\n\nThis is an IOException. This is exactly the kind of exception that we do not want to re-throw, because it is caused by the additional readStatus and would not exist otherwise. The line if(e instanceof RemoteException) is there to filter out exceptions like this.", "author": "BukrosSzabolcs", "createdAt": "2020-06-18T09:20:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc1MjkwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjExMTU4MA==", "url": "https://github.com/apache/hbase/pull/1921#discussion_r442111580", "bodyText": "Thanks @BukrosSzabolcs for the explanation. Got your point.", "author": "virajjasani", "createdAt": "2020-06-18T09:58:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc1MjkwMQ=="}], "type": "inlineReview"}]}