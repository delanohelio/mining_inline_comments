{"pr_number": 2312, "pr_title": "HBASE-23935 : Backport HBASE-22978(with sub-tasks) to branch-1", "pr_createdAt": "2020-08-25T17:38:45Z", "pr_url": "https://github.com/apache/hbase/pull/2312", "timeline": [{"oid": "da2f8a89871f2268862e445f6b064bbf11eb0199", "url": "https://github.com/apache/hbase/commit/da2f8a89871f2268862e445f6b064bbf11eb0199", "message": "checkstyle changes", "committedDate": "2020-09-08T17:57:06Z", "type": "forcePushed"}, {"oid": "da4ca864d027161c660862cf2bc2c3f1217b7e65", "url": "https://github.com/apache/hbase/commit/da4ca864d027161c660862cf2bc2c3f1217b7e65", "message": "checkstyle changes", "committedDate": "2020-09-09T06:09:56Z", "type": "forcePushed"}, {"oid": "f59630387224f661c67c0ab8f4ce80c7eedbd000", "url": "https://github.com/apache/hbase/commit/f59630387224f661c67c0ab8f4ce80c7eedbd000", "message": "HBASE-23935 : Backport HBASE-22978 with subtasks & HBASE-24718 to branch-1", "committedDate": "2020-09-09T18:12:22Z", "type": "forcePushed"}, {"oid": "c2970846ebe5d6e315d5923e1ec988b6461b4bd3", "url": "https://github.com/apache/hbase/commit/c2970846ebe5d6e315d5923e1ec988b6461b4bd3", "message": "HBASE-23935 : Backport HBASE-22978 with subtasks & HBASE-24718 to branch-1", "committedDate": "2020-09-10T09:01:27Z", "type": "commit"}, {"oid": "c2970846ebe5d6e315d5923e1ec988b6461b4bd3", "url": "https://github.com/apache/hbase/commit/c2970846ebe5d6e315d5923e1ec988b6461b4bd3", "message": "HBASE-23935 : Backport HBASE-22978 with subtasks & HBASE-24718 to branch-1", "committedDate": "2020-09-10T09:01:27Z", "type": "forcePushed"}, {"oid": "f9d9969d3495d5d1c15d4118363897fd80d25410", "url": "https://github.com/apache/hbase/commit/f9d9969d3495d5d1c15d4118363897fd80d25410", "message": "backport HBASE-24528 : BalancerDecision queue implementation", "committedDate": "2020-09-18T18:40:45Z", "type": "forcePushed"}, {"oid": "b40d94d46e922564b714a9ef4a77285e17de4657", "url": "https://github.com/apache/hbase/commit/b40d94d46e922564b714a9ef4a77285e17de4657", "message": "backport HBASE-24528 : BalancerDecision queue implementation", "committedDate": "2020-09-18T18:42:23Z", "type": "commit"}, {"oid": "b40d94d46e922564b714a9ef4a77285e17de4657", "url": "https://github.com/apache/hbase/commit/b40d94d46e922564b714a9ef4a77285e17de4657", "message": "backport HBASE-24528 : BalancerDecision queue implementation", "committedDate": "2020-09-18T18:42:23Z", "type": "forcePushed"}, {"oid": "2fe08379b55fe075252d32560c7358461cfab5a0", "url": "https://github.com/apache/hbase/commit/2fe08379b55fe075252d32560c7358461cfab5a0", "message": "checkstyle", "committedDate": "2020-09-19T10:28:16Z", "type": "commit"}, {"oid": "e12e3feb5ed85292e8b573e13c4768fb4e127871", "url": "https://github.com/apache/hbase/commit/e12e3feb5ed85292e8b573e13c4768fb4e127871", "message": "Merge branch 'branch-1' of github.com:apache/hbase into HBASE-23935-branch-1", "committedDate": "2020-09-20T09:48:35Z", "type": "commit"}, {"oid": "e57652c046c2ad4306eacf40211ba3bd460af0e7", "url": "https://github.com/apache/hbase/commit/e57652c046c2ad4306eacf40211ba3bd460af0e7", "message": "missing import", "committedDate": "2020-09-20T09:50:54Z", "type": "commit"}, {"oid": "e76140b4404c7650dc0136f53b78aa42b3880166", "url": "https://github.com/apache/hbase/commit/e76140b4404c7650dc0136f53b78aa42b3880166", "message": "adding IA.Public", "committedDate": "2020-09-20T13:12:40Z", "type": "commit"}, {"oid": "78f1d91f87241721abb9f3b3927b73b2dce84b3f", "url": "https://github.com/apache/hbase/commit/78f1d91f87241721abb9f3b3927b73b2dce84b3f", "message": "resolving some rubocop warnings", "committedDate": "2020-09-24T15:08:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTk2NTc2OQ==", "url": "https://github.com/apache/hbase/pull/2312#discussion_r505965769", "bodyText": "What happened here? Seems like an extraneous change and maybe wrong?", "author": "apurtell", "createdAt": "2020-10-16T01:30:08Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer.java", "diffHunk": "@@ -430,7 +440,7 @@ protected boolean needsBalance(Cluster cluster) {\n     System.arraycopy(tempFunctionCosts, 0, curFunctionCosts, 0, this.curFunctionCosts.length);\n \n     double initCost = currentCost;\n-    double newCost = currentCost;\n+    double newCost;", "originalCommit": "78f1d91f87241721abb9f3b3927b73b2dce84b3f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjA4Mzc3MQ==", "url": "https://github.com/apache/hbase/pull/2312#discussion_r506083771", "bodyText": "Oh this is anyways a redundant assignment, not an issue. It's not being used anywhere other than for loop and inside that loop, it is always assigned with new value. In fact, this was removed from trunk and branch-2 as well. I am confident this is not problematic at all.", "author": "virajjasani", "createdAt": "2020-10-16T06:28:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTk2NTc2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjA1NTM4Mg==", "url": "https://github.com/apache/hbase/pull/2312#discussion_r506055382", "bodyText": "although it is back-port. I want to ask, why there's no table name included. From my experience, use region name to search table is very time-spending.", "author": "Reidddddd", "createdAt": "2020-10-16T05:11:25Z", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/slowlog/SlowLogTableAccessor.java", "diffHunk": "@@ -0,0 +1,154 @@\n+/*\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.hbase.slowlog;\n+\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Random;\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.hbase.HConstants;\n+import org.apache.hadoop.hbase.NamespaceDescriptor;\n+import org.apache.hadoop.hbase.TableName;\n+import org.apache.hadoop.hbase.classification.InterfaceAudience;\n+import org.apache.hadoop.hbase.client.Connection;\n+import org.apache.hadoop.hbase.client.ConnectionFactory;\n+import org.apache.hadoop.hbase.client.Durability;\n+import org.apache.hadoop.hbase.client.Put;\n+import org.apache.hadoop.hbase.client.Table;\n+import org.apache.hadoop.hbase.protobuf.generated.TooSlowLog;\n+import org.apache.hadoop.hbase.util.Bytes;\n+import org.apache.hadoop.hbase.util.EnvironmentEdgeManager;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Slowlog Accessor to record slow/large RPC log identified at each RegionServer RpcServer level.\n+ * This can be done only optionally to record the entire history of slow/large rpc calls\n+ * since RingBuffer can handle only limited latest records.\n+ */\n+@InterfaceAudience.Private\n+public final class SlowLogTableAccessor {\n+\n+  private static final Logger LOG = LoggerFactory.getLogger(SlowLogTableAccessor.class);\n+\n+  private static final Random RANDOM = new Random();\n+\n+  private static Connection connection;\n+\n+  private SlowLogTableAccessor() {\n+  }\n+\n+  /**\n+   * hbase:slowlog table name - can be enabled\n+   * with config - hbase.regionserver.slowlog.systable.enabled\n+   */\n+  public static final TableName SLOW_LOG_TABLE_NAME =\n+    TableName.valueOf(NamespaceDescriptor.SYSTEM_NAMESPACE_NAME_STR, \"slowlog\");\n+\n+  private static void doPut(final Connection connection, final List<Put> puts)\n+    throws IOException {\n+    try (Table table = connection.getTable(SLOW_LOG_TABLE_NAME)) {\n+      table.put(puts);\n+    }\n+  }\n+\n+  /**\n+   * Add slow/large log records to hbase:slowlog table\n+   * @param slowLogPayloads List of SlowLogPayload to process\n+   * @param configuration Configuration to use for connection\n+   */\n+  public static void addSlowLogRecords(final List<TooSlowLog.SlowLogPayload> slowLogPayloads,\n+    final Configuration configuration) {\n+    List<Put> puts = new ArrayList<>(slowLogPayloads.size());\n+    for (TooSlowLog.SlowLogPayload slowLogPayload : slowLogPayloads) {\n+      final byte[] rowKey = getRowKey(slowLogPayload);\n+      final Put put = new Put(rowKey);\n+      put.setDurability(Durability.SKIP_WAL);\n+      put.setPriority(HConstants.NORMAL_QOS);\n+      put.addColumn(HConstants.SLOWLOG_INFO_FAMILY, Bytes.toBytes(\"call_details\"),\n+        Bytes.toBytes(slowLogPayload.getCallDetails()))\n+        .addColumn(HConstants.SLOWLOG_INFO_FAMILY, Bytes.toBytes(\"client_address\"),\n+          Bytes.toBytes(slowLogPayload.getClientAddress()))\n+        .addColumn(HConstants.SLOWLOG_INFO_FAMILY, Bytes.toBytes(\"method_name\"),\n+          Bytes.toBytes(slowLogPayload.getMethodName()))\n+        .addColumn(HConstants.SLOWLOG_INFO_FAMILY, Bytes.toBytes(\"param\"),\n+          Bytes.toBytes(slowLogPayload.getParam()))\n+        .addColumn(HConstants.SLOWLOG_INFO_FAMILY, Bytes.toBytes(\"processing_time\"),\n+          Bytes.toBytes(Integer.toString(slowLogPayload.getProcessingTime())))\n+        .addColumn(HConstants.SLOWLOG_INFO_FAMILY, Bytes.toBytes(\"queue_time\"),\n+          Bytes.toBytes(Integer.toString(slowLogPayload.getQueueTime())))\n+        .addColumn(HConstants.SLOWLOG_INFO_FAMILY, Bytes.toBytes(\"region_name\"),\n+          Bytes.toBytes(slowLogPayload.getRegionName()))\n+        .addColumn(HConstants.SLOWLOG_INFO_FAMILY, Bytes.toBytes(\"response_size\"),\n+          Bytes.toBytes(Long.toString(slowLogPayload.getResponseSize())))\n+        .addColumn(HConstants.SLOWLOG_INFO_FAMILY, Bytes.toBytes(\"server_class\"),\n+          Bytes.toBytes(slowLogPayload.getServerClass()))\n+        .addColumn(HConstants.SLOWLOG_INFO_FAMILY, Bytes.toBytes(\"start_time\"),\n+          Bytes.toBytes(Long.toString(slowLogPayload.getStartTime())))\n+        .addColumn(HConstants.SLOWLOG_INFO_FAMILY, Bytes.toBytes(\"type\"),\n+          Bytes.toBytes(slowLogPayload.getType().name()))\n+        .addColumn(HConstants.SLOWLOG_INFO_FAMILY, Bytes.toBytes(\"username\"),\n+          Bytes.toBytes(slowLogPayload.getUserName()));\n+      puts.add(put);", "originalCommit": "78f1d91f87241721abb9f3b3927b73b2dce84b3f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjA4MTA4Mg==", "url": "https://github.com/apache/hbase/pull/2312#discussion_r506081082", "bodyText": "Here, the intention is to just collect list of puts and then carry it over to doPut() method on L116.", "author": "virajjasani", "createdAt": "2020-10-16T06:23:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjA1NTM4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjA1NjgzMw==", "url": "https://github.com/apache/hbase/pull/2312#discussion_r506056833", "bodyText": "This can be done afterwards.\nSo here I suggest, we should create something like TTL, if the connections hasn't been touched for a time, there then we close it, otherwise we should keep it.", "author": "Reidddddd", "createdAt": "2020-10-16T05:16:56Z", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/slowlog/SlowLogTableAccessor.java", "diffHunk": "@@ -0,0 +1,154 @@\n+/*\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.hbase.slowlog;\n+\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Random;\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.hbase.HConstants;\n+import org.apache.hadoop.hbase.NamespaceDescriptor;\n+import org.apache.hadoop.hbase.TableName;\n+import org.apache.hadoop.hbase.classification.InterfaceAudience;\n+import org.apache.hadoop.hbase.client.Connection;\n+import org.apache.hadoop.hbase.client.ConnectionFactory;\n+import org.apache.hadoop.hbase.client.Durability;\n+import org.apache.hadoop.hbase.client.Put;\n+import org.apache.hadoop.hbase.client.Table;\n+import org.apache.hadoop.hbase.protobuf.generated.TooSlowLog;\n+import org.apache.hadoop.hbase.util.Bytes;\n+import org.apache.hadoop.hbase.util.EnvironmentEdgeManager;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Slowlog Accessor to record slow/large RPC log identified at each RegionServer RpcServer level.\n+ * This can be done only optionally to record the entire history of slow/large rpc calls\n+ * since RingBuffer can handle only limited latest records.\n+ */\n+@InterfaceAudience.Private\n+public final class SlowLogTableAccessor {\n+\n+  private static final Logger LOG = LoggerFactory.getLogger(SlowLogTableAccessor.class);\n+\n+  private static final Random RANDOM = new Random();\n+\n+  private static Connection connection;\n+\n+  private SlowLogTableAccessor() {\n+  }\n+\n+  /**\n+   * hbase:slowlog table name - can be enabled\n+   * with config - hbase.regionserver.slowlog.systable.enabled\n+   */\n+  public static final TableName SLOW_LOG_TABLE_NAME =\n+    TableName.valueOf(NamespaceDescriptor.SYSTEM_NAMESPACE_NAME_STR, \"slowlog\");\n+\n+  private static void doPut(final Connection connection, final List<Put> puts)\n+    throws IOException {\n+    try (Table table = connection.getTable(SLOW_LOG_TABLE_NAME)) {", "originalCommit": "78f1d91f87241721abb9f3b3927b73b2dce84b3f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjA4MTY4Mw==", "url": "https://github.com/apache/hbase/pull/2312#discussion_r506081683", "bodyText": "That's nice idea. Do we already do this as part of some utility? Then I can utilize it here?", "author": "virajjasani", "createdAt": "2020-10-16T06:24:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjA1NjgzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjA4NTA4Mw==", "url": "https://github.com/apache/hbase/pull/2312#discussion_r506085083", "bodyText": "@Reidddddd if you are fine, let me take care of this separately i.e search for similar utility or handle it separately here. Otherwise I hope for backport this might not be a concern.\nBtw we are doing this (creating connection should be executed once):\n    try {\n      if (connection == null) {\n        createConnection(configuration);\n      }\n      doPut(connection, puts);\n    } catch (Exception e) {\n      LOG.warn(\"Failed to add slow/large log records to hbase:slowlog table.\", e);\n    }", "author": "virajjasani", "createdAt": "2020-10-16T06:31:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjA1NjgzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjA1NzIzNw==", "url": "https://github.com/apache/hbase/pull/2312#discussion_r506057237", "bodyText": "why do we still introduce these parameters in HConstants. I thought we have avoided to add parameters in it for quite a long time.", "author": "Reidddddd", "createdAt": "2020-10-16T05:18:26Z", "path": "hbase-common/src/main/java/org/apache/hadoop/hbase/HConstants.java", "diffHunk": "@@ -1401,6 +1401,22 @@\n    */\n   public static final int BATCH_ROWS_THRESHOLD_DEFAULT = 5000;\n \n+  public static final int DEFAULT_SLOW_LOG_RING_BUFFER_SIZE = 256;", "originalCommit": "78f1d91f87241721abb9f3b3927b73b2dce84b3f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjA4Mjc1NQ==", "url": "https://github.com/apache/hbase/pull/2312#discussion_r506082755", "bodyText": "That's right, we don't do this anymore. I think the initial patch had multiple references in various classes and hence, we kept all here.  e.g SLOW_LOG_BUFFER_ENABLED_KEY is being referred to at 4 places and similarly others too, but since this is a group of constant (usually something that should stay together), they are kept here.\nSounds good?", "author": "virajjasani", "createdAt": "2020-10-16T06:26:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjA1NzIzNw=="}], "type": "inlineReview"}]}