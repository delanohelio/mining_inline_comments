{"pr_number": 2018, "pr_title": "HBASE-24659 Calculate FIXED_OVERHEAD automatically", "pr_createdAt": "2020-07-05T11:21:16Z", "pr_url": "https://github.com/apache/hbase/pull/2018", "timeline": [{"oid": "330f7f94dd66a51ec069be3a33362c825ea2cd37", "url": "https://github.com/apache/hbase/commit/330f7f94dd66a51ec069be3a33362c825ea2cd37", "message": "HBASE-24659 Calculate FIXED_OVERHEAD automatically", "committedDate": "2020-07-05T14:50:14Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg5OTA0Mw==", "url": "https://github.com/apache/hbase/pull/2018#discussion_r449899043", "bodyText": "Does ClassSize come up w/ same general numbers as old manual technique. It does deep size rather than shallow?", "author": "saintstack", "createdAt": "2020-07-05T17:14:21Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java", "diffHunk": "@@ -8405,12 +8405,7 @@ private static long getLongValue(final Cell cell) throws DoNotRetryIOException {\n     return cells;\n   }\n \n-  public static final long FIXED_OVERHEAD = ClassSize.align(\n-      ClassSize.OBJECT +\n-      56 * ClassSize.REFERENCE +\n-      3 * Bytes.SIZEOF_INT +\n-      14 * Bytes.SIZEOF_LONG +\n-      3 * Bytes.SIZEOF_BOOLEAN);\n+  public static final long FIXED_OVERHEAD = ClassSize.estimateBase(HRegion.class, false);", "originalCommit": "330f7f94dd66a51ec069be3a33362c825ea2cd37", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYzNDYzNA==", "url": "https://github.com/apache/hbase/pull/2018#discussion_r450634634", "bodyText": "I think ClassSize.estimateBase only calculate shallow size", "author": "nyl3532016", "createdAt": "2020-07-07T06:20:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg5OTA0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcwMDc4MQ==", "url": "https://github.com/apache/hbase/pull/2018#discussion_r466700781", "bodyText": "I  thought it critical it did deep size? Do you get the same numbers roughly?", "author": "saintstack", "createdAt": "2020-08-06T21:39:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg5OTA0Mw=="}], "type": "inlineReview"}, {"oid": "ccbff0b9cc464227ae9cef3a720eb81fd83d4e77", "url": "https://github.com/apache/hbase/commit/ccbff0b9cc464227ae9cef3a720eb81fd83d4e77", "message": "HBASE-24659 Calculate FIXED_OVERHEAD automatically", "committedDate": "2020-07-12T07:29:24Z", "type": "commit"}, {"oid": "ccbff0b9cc464227ae9cef3a720eb81fd83d4e77", "url": "https://github.com/apache/hbase/commit/ccbff0b9cc464227ae9cef3a720eb81fd83d4e77", "message": "HBASE-24659 Calculate FIXED_OVERHEAD automatically", "committedDate": "2020-07-12T07:29:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcwMTIzNg==", "url": "https://github.com/apache/hbase/pull/2018#discussion_r466701236", "bodyText": "Or, sorry, yeah, FIXED_OVERHEAD is 'this' classes size; i.e. the shallow size (I think).", "author": "saintstack", "createdAt": "2020-08-06T21:40:31Z", "path": "hbase-common/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileContext.java", "diffHunk": "@@ -37,13 +37,7 @@\n  */\n @InterfaceAudience.Private\n public class HFileContext implements HeapSize, Cloneable {\n-  public static final int FIXED_OVERHEAD = ClassSize.align(ClassSize.OBJECT +\n-      // Algorithm, checksumType, encoding, Encryption.Context, hfileName reference,\n-      5 * ClassSize.REFERENCE + 2 * Bytes.SIZEOF_INT +\n-      // usesHBaseChecksum, includesMvcc, includesTags and compressTags\n-      4 * Bytes.SIZEOF_BOOLEAN + Bytes.SIZEOF_LONG +\n-      //byte[] headers for column family and table name\n-      2 * ClassSize.ARRAY + 2 * ClassSize.REFERENCE);\n+  public static final long FIXED_OVERHEAD = ClassSize.estimateBase(HFileContext.class, false);", "originalCommit": "ccbff0b9cc464227ae9cef3a720eb81fd83d4e77", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcwMzY2OQ==", "url": "https://github.com/apache/hbase/pull/2018#discussion_r466703669", "bodyText": "I went back through history of ClassSize... its so old.", "author": "saintstack", "createdAt": "2020-08-06T21:46:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcwMTIzNg=="}], "type": "inlineReview"}]}