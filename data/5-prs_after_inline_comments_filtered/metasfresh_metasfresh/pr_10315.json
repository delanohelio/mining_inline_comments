{"pr_number": 10315, "pr_title": "#10279", "pr_createdAt": "2020-11-26T15:43:36Z", "pr_url": "https://github.com/metasfresh/metasfresh/pull/10315", "timeline": [{"oid": "959d7372f7e079a23473e5e12b3c3d59067b7974", "url": "https://github.com/metasfresh/metasfresh/commit/959d7372f7e079a23473e5e12b3c3d59067b7974", "message": "#10279\n - Added filter for name to the marketing channel window\n - Change marketing channel id field name to search key\n - system users can now have 0 marketing channels\n - can not save a newly created user if a marketing channel is not added to it", "committedDate": "2020-11-26T15:42:54Z", "type": "commit"}, {"oid": "5656085dedb2084ddcecd39dd32e228f59866a2e", "url": "https://github.com/metasfresh/metasfresh/commit/5656085dedb2084ddcecd39dd32e228f59866a2e", "message": "#10279\n - Fixed retrieveIsSystemUser method", "committedDate": "2020-11-26T16:02:04Z", "type": "commit"}, {"oid": "f44541147fc390b44b8de3c72f00525222c1d600", "url": "https://github.com/metasfresh/metasfresh/commit/f44541147fc390b44b8de3c72f00525222c1d600", "message": "#10279\n       - Removed the de.metas.marketing.base.I_AD_User class\n       - Added a sys config with level organisation: de.metas.marketing.EnforceUserHasMarketingChannels\n       - In the interceptor methods, if the sys config is set to 'N', marketing channels are not needed.\n       - Replaced ad_user interceptor with tab callout for user window's ad_user tab", "committedDate": "2020-11-27T08:13:42Z", "type": "commit"}, {"oid": "d249c4709ef2954a2ea072934e7353eb6f2f8596", "url": "https://github.com/metasfresh/metasfresh/commit/d249c4709ef2954a2ea072934e7353eb6f2f8596", "message": "#10279\n - Removing usage of now-deprecated class so exception is handled properly.", "committedDate": "2020-11-27T09:25:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQ5Njg2NQ==", "url": "https://github.com/metasfresh/metasfresh/pull/10315#discussion_r531496865", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t.create()\n          \n          \n            \n            \t\t\t\t.listDistinct(I_AD_User.COLUMNNAME_IsSystemUser, Boolean.class)\n          \n          \n            \n            \t\t\t\t.stream()\n          \n          \n            \n            \t\t\t\t.findFirst()\n          \n          \n            \n            \t\t\t\t.orElse(false);\n          \n          \n            \n            \t\t\t\t.addEqualsFilter(I_AD_User.COLUMNNAME_IsSystemUser, true)\n          \n          \n            \n            \t\t\t\t.create()\n          \n          \n            \n            \t\t\t\t.anyMatch()", "author": "metas-ts", "createdAt": "2020-11-27T09:58:35Z", "path": "backend/de.metas.adempiere.adempiere/base/src/main/java/de/metas/user/api/impl/UserDAO.java", "diffHunk": "@@ -260,6 +258,20 @@ private static final String extractEMailAddressOrNull(final String email)\n \t\t\t\t.listIds(UserId::ofRepoId);\n \t}\n \n+\t@Override\n+\tpublic boolean isSystemUser(@NonNull final UserId userId)\n+\t{\n+\t\treturn Services.get(IQueryBL.class)\n+\t\t\t\t.createQueryBuilder(I_AD_User.class)\n+\t\t\t\t.addOnlyActiveRecordsFilter()\n+\t\t\t\t.addEqualsFilter(I_AD_User.COLUMNNAME_AD_User_ID, userId)\n+\t\t\t\t.create()\n+\t\t\t\t.listDistinct(I_AD_User.COLUMNNAME_IsSystemUser, Boolean.class)\n+\t\t\t\t.stream()\n+\t\t\t\t.findFirst()\n+\t\t\t\t.orElse(false);", "originalCommit": "d249c4709ef2954a2ea072934e7353eb6f2f8596", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQ5ODI1NA==", "url": "https://github.com/metasfresh/metasfresh/pull/10315#discussion_r531498254", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tI_AD_User user = calloutRecord.getModel(I_AD_User.class);\n          \n          \n            \n            \t\tfinal I_AD_User user = calloutRecord.getModel(I_AD_User.class);", "author": "metas-ts", "createdAt": "2020-11-27T10:00:52Z", "path": "backend/de.metas.marketing/base/src/main/java/de/metas/marketing/base/callout/AD_User_TabCallout.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * #%L\n+ * marketing-base\n+ * %%\n+ * Copyright (C) 2020 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+package de.metas.marketing.base.callout;\n+\n+import de.metas.i18n.AdMessageKey;\n+import de.metas.marketing.base.api.IMKTGChannelDao;\n+import de.metas.user.UserId;\n+import de.metas.user.api.IUserDAO;\n+import de.metas.util.Services;\n+import org.adempiere.ad.callout.api.ICalloutRecord;\n+import org.adempiere.ad.ui.spi.TabCalloutAdapter;\n+import org.adempiere.exceptions.AdempiereException;\n+import org.adempiere.service.ISysConfigBL;\n+import org.compiere.model.I_AD_User;\n+import org.compiere.util.Env;\n+\n+public class AD_User_TabCallout extends TabCalloutAdapter\n+{\n+\tprivate final IMKTGChannelDao mktgChannelDao = Services.get(IMKTGChannelDao.class);\n+\tprivate final IUserDAO userDAO = Services.get(IUserDAO.class);\n+\tprivate final ISysConfigBL sysConfigBL = Services.get(ISysConfigBL.class);\n+\n+\tprivate static final AdMessageKey MSG_CAN_NOT_REMOVE_CHANNEL = AdMessageKey.of(\"de.metas.marketing.base.userMarketingChannelRemovalError\");\n+\tprivate static final String SYS_CONFIG_MARKETING_CHANNELS_ENFORCED = \"de.metas.marketing.EnforceUserHasMarketingChannels\";\n+\n+\t@Override\n+\tpublic void onSave(final ICalloutRecord calloutRecord)\n+\t{\n+\t\tI_AD_User user = calloutRecord.getModel(I_AD_User.class);", "originalCommit": "d249c4709ef2954a2ea072934e7353eb6f2f8596", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQ5ODgyOQ==", "url": "https://github.com/metasfresh/metasfresh/pull/10315#discussion_r531498829", "bodyText": "please check this with the client-id and org-id of the I_AD_User in question.", "author": "metas-ts", "createdAt": "2020-11-27T10:01:56Z", "path": "backend/de.metas.marketing/base/src/main/java/de/metas/marketing/base/callout/AD_User_TabCallout.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * #%L\n+ * marketing-base\n+ * %%\n+ * Copyright (C) 2020 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+package de.metas.marketing.base.callout;\n+\n+import de.metas.i18n.AdMessageKey;\n+import de.metas.marketing.base.api.IMKTGChannelDao;\n+import de.metas.user.UserId;\n+import de.metas.user.api.IUserDAO;\n+import de.metas.util.Services;\n+import org.adempiere.ad.callout.api.ICalloutRecord;\n+import org.adempiere.ad.ui.spi.TabCalloutAdapter;\n+import org.adempiere.exceptions.AdempiereException;\n+import org.adempiere.service.ISysConfigBL;\n+import org.compiere.model.I_AD_User;\n+import org.compiere.util.Env;\n+\n+public class AD_User_TabCallout extends TabCalloutAdapter\n+{\n+\tprivate final IMKTGChannelDao mktgChannelDao = Services.get(IMKTGChannelDao.class);\n+\tprivate final IUserDAO userDAO = Services.get(IUserDAO.class);\n+\tprivate final ISysConfigBL sysConfigBL = Services.get(ISysConfigBL.class);\n+\n+\tprivate static final AdMessageKey MSG_CAN_NOT_REMOVE_CHANNEL = AdMessageKey.of(\"de.metas.marketing.base.userMarketingChannelRemovalError\");\n+\tprivate static final String SYS_CONFIG_MARKETING_CHANNELS_ENFORCED = \"de.metas.marketing.EnforceUserHasMarketingChannels\";\n+\n+\t@Override\n+\tpublic void onSave(final ICalloutRecord calloutRecord)\n+\t{\n+\t\tI_AD_User user = calloutRecord.getModel(I_AD_User.class);\n+\n+\t\tif (!isMarketingChannelsUseEnforced())\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tif (userDAO.isSystemUser(UserId.ofRepoId(user.getAD_User_ID())))\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tboolean canBeSaved = true;\n+\t\tif (mktgChannelDao.retrieveMarketingChannelsCountForUser(UserId.ofRepoId(user.getAD_User_ID())) <= 0)\n+\t\t{\n+\t\t\tcanBeSaved = false;\n+\t\t}\n+\n+\t\tif (!canBeSaved)\n+\t\t{\n+\t\t\tthrow new AdempiereException(MSG_CAN_NOT_REMOVE_CHANNEL).markAsUserValidationError();\n+\t\t}\n+\t}\n+\n+\tprivate boolean isMarketingChannelsUseEnforced()\n+\t{\n+\t\treturn sysConfigBL.getBooleanValue(SYS_CONFIG_MARKETING_CHANNELS_ENFORCED, false, Env.getAD_Client_ID(Env.getCtx()), Env.getAD_Org_ID(Env.getCtx()));", "originalCommit": "d249c4709ef2954a2ea072934e7353eb6f2f8596", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUwMDc0Ng==", "url": "https://github.com/metasfresh/metasfresh/pull/10315#discussion_r531500746", "bodyText": "please check this with the client-id and org-id of the I_AD_User in question. (same as in the tab-callout)", "author": "metas-ts", "createdAt": "2020-11-27T10:05:26Z", "path": "backend/de.metas.marketing/base/src/main/java/de/metas/marketing/base/interceptor/AD_User_MKTG_Channels.java", "diffHunk": "@@ -26,36 +26,55 @@\n import de.metas.marketing.base.api.IMKTGChannelDao;\n import de.metas.marketing.base.model.I_AD_User_MKTG_Channels;\n import de.metas.user.UserId;\n+import de.metas.user.api.IUserDAO;\n import de.metas.util.Services;\n import lombok.NonNull;\n-import org.adempiere.ad.callout.annotations.Callout;\n import org.adempiere.ad.modelvalidator.annotations.Interceptor;\n import org.adempiere.ad.modelvalidator.annotations.ModelChange;\n import org.adempiere.exceptions.AdempiereException;\n+import org.adempiere.service.ISysConfigBL;\n import org.compiere.model.ModelValidator;\n+import org.compiere.util.Env;\n \n-@Callout(I_AD_User_MKTG_Channels.class)\n @Interceptor(I_AD_User_MKTG_Channels.class)\n public class AD_User_MKTG_Channels\n {\n \tpublic static final AD_User_MKTG_Channels INSTANCE = new AD_User_MKTG_Channels();\n \n \tprivate final IMKTGChannelDao mktgChannelDao = Services.get(IMKTGChannelDao.class);\n+\tprivate final IUserDAO userDAO = Services.get(IUserDAO.class);\n+\tprivate final ISysConfigBL sysConfigBL = Services.get(ISysConfigBL.class);\n \n \tprivate static final AdMessageKey MSG_CAN_NOT_REMOVE_CHANNEL = AdMessageKey.of(\"de.metas.marketing.base.userMarketingChannelRemovalError\");\n+\tprivate static final String SYS_CONFIG_MARKETING_CHANNELS_ENFORCED = \"de.metas.marketing.EnforceUserHasMarketingChannels\";\n \n \tprivate AD_User_MKTG_Channels()\n \t{\n \t}\n \n \t@ModelChange(\n \t\t\ttimings = { ModelValidator.TYPE_BEFORE_DELETE })\n-\tpublic void checkIfCanBeDeleted(@NonNull final I_AD_User_MKTG_Channels userMktgChannel)\n+\tpublic void checkIfCanBeDeleted(@NonNull final I_AD_User_MKTG_Channels userMktgChannels)\n \t{\n-\t\tfinal int count = mktgChannelDao.retrieveMarketingChannelsCountForUser(UserId.ofRepoId(userMktgChannel.getAD_User_ID()));\n+\t\tif (!isMarketingChannelsUseEnforced())\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tif (userDAO.isSystemUser(UserId.ofRepoId(userMktgChannels.getAD_User_ID())))\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tfinal int count = mktgChannelDao.retrieveMarketingChannelsCountForUser(UserId.ofRepoId(userMktgChannels.getAD_User_ID()));\n \t\tif (count == 1)\n \t\t{\n \t\t\tthrow new AdempiereException(MSG_CAN_NOT_REMOVE_CHANNEL).markAsUserValidationError();\n \t\t}\n \t}\n+\n+\tprivate boolean isMarketingChannelsUseEnforced()\n+\t{\n+\t\treturn sysConfigBL.getBooleanValue(SYS_CONFIG_MARKETING_CHANNELS_ENFORCED, false, Env.getAD_Client_ID(Env.getCtx()), Env.getAD_Org_ID(Env.getCtx()));", "originalCommit": "d249c4709ef2954a2ea072934e7353eb6f2f8596", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUwMTQ2Ng==", "url": "https://github.com/metasfresh/metasfresh/pull/10315#discussion_r531501466", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tfor (UserId userId : usersSet)\n          \n          \n            \n            \t\tfor (final UserId userId : usersSet)", "author": "metas-ts", "createdAt": "2020-11-27T10:06:41Z", "path": "backend/de.metas.marketing/base/src/main/java/de/metas/marketing/base/interceptor/MKTG_Channel.java", "diffHunk": "@@ -54,20 +58,30 @@ private MKTG_Channel()\n \t\t\ttimings = { ModelValidator.TYPE_BEFORE_DELETE })\n \tpublic void checkIfCanBeDeleted(@NonNull final I_MKTG_Channel mktgChannel)\n \t{\n+\t\tif (!isMarketingChannelsUseEnforced())\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n \t\tboolean canBeDeleted = true;\n \t\tSet<UserId> usersSet = mktgChannelDao.retrieveUsersHavingChannel(mktgChannel.getMKTG_Channel_ID());\n \t\tfor (UserId userId : usersSet)", "originalCommit": "d249c4709ef2954a2ea072934e7353eb6f2f8596", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUwMzY4NQ==", "url": "https://github.com/metasfresh/metasfresh/pull/10315#discussion_r531503685", "bodyText": "But can we generally delete a marketingchannel just like that? wont there be a DB exception in case the channel is still referenced by AD_User_MKTG_Channel records?\nSo i think you probably don't need to change this method at all..", "author": "metas-ts", "createdAt": "2020-11-27T10:10:43Z", "path": "backend/de.metas.marketing/base/src/main/java/de/metas/marketing/base/interceptor/MKTG_Channel.java", "diffHunk": "@@ -54,20 +58,30 @@ private MKTG_Channel()\n \t\t\ttimings = { ModelValidator.TYPE_BEFORE_DELETE })\n \tpublic void checkIfCanBeDeleted(@NonNull final I_MKTG_Channel mktgChannel)\n \t{\n+\t\tif (!isMarketingChannelsUseEnforced())", "originalCommit": "d249c4709ef2954a2ea072934e7353eb6f2f8596", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTYyMzUwNQ==", "url": "https://github.com/metasfresh/metasfresh/pull/10315#discussion_r531623505", "bodyText": "@metas-ts clarified with @metas-mk It's ok to not be able to delete a marketing channel if a there is still a reference on the mktg_channel_id from the AD_User_MKTG_Channels table. This means we could completely delete this interceptor and the de.metas.marketing.base.api.IMKTGChannelDao#retrieveUsersHavingChannel method. However, AFAIU the possibility to only not be able to remove a channel if a user would remain with 0 will be implemented in another task, so I propose to comment out the line (+a comment with this task and explanation) that registers this interceptor and expand this in the future (A IMktgChannelBL class with a method that does necessary operation on the ad_user_mktg_channels table. WDYT?", "author": "dragospodariu96", "createdAt": "2020-11-27T14:10:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUwMzY4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTYzOTI3Ng==", "url": "https://github.com/metasfresh/metasfresh/pull/10315#discussion_r531639276", "bodyText": "@dragospodariu96\n\nIt's ok to not be able to delete a marketing channel if a there is still a reference on the mktg_channel_id from the AD_User_MKTG_Channels table.\n\nOK\n\nThis means we could completely delete this interceptor\n\nno, because we still want a user-friendly error message when they try to delete a MKTG_Channel that is still linked to users.\nthat's why i proposed to \"revert\" it.\n\nwill be implemented in another task[...](+a comment with this task and explanation)\n\nif you think it will help in future, feel free to add a comment or something, so a future dev doesn't have to start at zero", "author": "metas-ts", "createdAt": "2020-11-27T14:41:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUwMzY4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDI2NzczMQ==", "url": "https://github.com/metasfresh/metasfresh/pull/10315#discussion_r534267731", "bodyText": "@metas-ts\nUpdated the interceptor's method. User friendly error message now shown when trying to delete a marketing channel that is still assigned to at least one user, regardless of the value from the 'enforce marketing channels use' sys config.\nOBS: Because regardless of that config, if we tried to delete a channel still assigned to a user, we would get an error due to the mktg_channel_id foreign key constraint on the ad_user_mktg_channels table", "author": "dragospodariu96", "createdAt": "2020-12-02T15:41:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUwMzY4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUwNDMzNw==", "url": "https://github.com/metasfresh/metasfresh/pull/10315#discussion_r531504337", "bodyText": "what is the background of this change?", "author": "metas-ts", "createdAt": "2020-11-27T10:11:54Z", "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/window/model/Document.java", "diffHunk": "@@ -2164,7 +2164,7 @@ public Document build()\n \n \t\t\tfinal DocumentEntityDescriptor entityDescriptor = getEntityDescriptor();\n \t\t\tfinal ITabCallout documentCallout = entityDescriptor.createAndInitializeDocumentCallout(document.asCalloutRecord());\n-\t\t\tdocument.documentCallout = ExceptionHandledTabCallout.wrapIfNeeded(documentCallout);", "originalCommit": "d249c4709ef2954a2ea072934e7353eb6f2f8596", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUyMjY5Mg==", "url": "https://github.com/metasfresh/metasfresh/pull/10315#discussion_r531522692", "bodyText": "The user was still saved because the exception wasn't handled properly", "author": "dragospodariu96", "createdAt": "2020-11-27T10:42:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUwNDMzNw=="}], "type": "inlineReview"}, {"oid": "ac645e206de0376c6b505d657c364163757bb80b", "url": "https://github.com/metasfresh/metasfresh/commit/ac645e206de0376c6b505d657c364163757bb80b", "message": "#10279\n - Intermediary commit.", "committedDate": "2020-11-27T12:11:08Z", "type": "commit"}, {"oid": "a7c7c1cbcfc6c93162ebd73c565408349ee3a4e5", "url": "https://github.com/metasfresh/metasfresh/commit/a7c7c1cbcfc6c93162ebd73c565408349ee3a4e5", "message": "#10279\n - Put a description to the sys config", "committedDate": "2020-11-27T14:11:08Z", "type": "commit"}, {"oid": "18d59acbdae1709abaa5b6c62568373c97567187", "url": "https://github.com/metasfresh/metasfresh/commit/18d59acbdae1709abaa5b6c62568373c97567187", "message": "#10279\n - Can not delete marketing channel if there is a user who still has that marketing channel, regardless of the 'enfore marketing channel' sys config.", "committedDate": "2020-12-02T15:39:42Z", "type": "commit"}, {"oid": "f45171fe7a3a93199f1a2ba2e06734a1e84fc835", "url": "https://github.com/metasfresh/metasfresh/commit/f45171fe7a3a93199f1a2ba2e06734a1e84fc835", "message": "#10279\n - Removed unnecessary else statement", "committedDate": "2020-12-02T16:20:32Z", "type": "commit"}, {"oid": "fcffb5244a77d78f994e9e895120805291480d69", "url": "https://github.com/metasfresh/metasfresh/commit/fcffb5244a77d78f994e9e895120805291480d69", "message": "#10279\n - Small refractor", "committedDate": "2020-12-02T16:20:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMwMTY1NQ==", "url": "https://github.com/metasfresh/metasfresh/pull/10315#discussion_r534301655", "bodyText": "Even for system-users, you won't be able to delete the channel, simply because of the foreign-key-constraint we talked about.\nRemember, you tried it when we had the screen-session..", "author": "metas-ts", "createdAt": "2020-12-02T16:23:51Z", "path": "backend/de.metas.marketing/base/src/main/java/de/metas/marketing/base/interceptor/MKTG_Channel.java", "diffHunk": "@@ -56,18 +56,18 @@ public void checkIfCanBeDeleted(@NonNull final I_MKTG_Channel mktgChannel)\n \t{\n \t\tboolean canBeDeleted = true;\n \t\tSet<UserId> usersSet = mktgChannelDao.retrieveUsersHavingChannel(mktgChannel.getMKTG_Channel_ID());\n-\t\tfor (UserId userId : usersSet)\n+\t\tfor (final UserId userId : usersSet)\n \t\t{\n-\t\t\tif (mktgChannelDao.retrieveMarketingChannelsCountForUser(userId) == 1)\n+\n+\t\t\tif (mktgChannelDao.retrieveMarketingChannelsCountForUser(userId) > 0 && !userDAO.isSystemUser(userId))", "originalCommit": "fcffb5244a77d78f994e9e895120805291480d69", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMwMzY0NA==", "url": "https://github.com/metasfresh/metasfresh/pull/10315#discussion_r534303644", "bodyText": "Yeah, forgot about that \ud83d\ude13 Removed the condition.", "author": "dragospodariu96", "createdAt": "2020-12-02T16:26:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMwMTY1NQ=="}], "type": "inlineReview"}, {"oid": "ad8686587fe9d4517c927aa08f39ac8f7808e3eb", "url": "https://github.com/metasfresh/metasfresh/commit/ad8686587fe9d4517c927aa08f39ac8f7808e3eb", "message": "#10279\n - Removing system user condition.", "committedDate": "2020-12-02T16:26:04Z", "type": "commit"}]}