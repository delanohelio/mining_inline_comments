{"pr_number": 6539, "pr_title": "automatically import and link parent issue", "pr_createdAt": "2020-04-28T13:03:46Z", "pr_url": "https://github.com/metasfresh/metasfresh/pull/6539", "timeline": [{"oid": "be6cdf7462af28fc789ee9bd4e1e0c08dee60394", "url": "https://github.com/metasfresh/metasfresh/commit/be6cdf7462af28fc789ee9bd4e1e0c08dee60394", "message": "automatically import and linked parent issue\nhttps://github.com/metasfresh/metasfresh/issues/5816", "committedDate": "2020-04-28T13:01:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY1MzE1Mw==", "url": "https://github.com/metasfresh/metasfresh/pull/6539#discussion_r416653153", "bodyText": "what are we doing here?", "author": "metas-ts", "createdAt": "2020-04-28T14:20:45Z", "path": "de.metas.issue.tracking.github/src/main/java/de/metas/issue/tracking/github/api/v3/service/GithubClient.java", "diffHunk": "@@ -86,7 +86,9 @@ public GithubClient(final RestService restService)\n \n \t\tissueList = ImmutableList.copyOf(restService.performGet(getRequest, Issue[].class).getBody());\n \n-\t\treturn issueList;\n+\t\treturn issueList.stream()\n+\t\t\t\t.filter(issue -> issue.getPullRequest() == null)", "originalCommit": "be6cdf7462af28fc789ee9bd4e1e0c08dee60394", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY2OTk5NA==", "url": "https://github.com/metasfresh/metasfresh/pull/6539#discussion_r416669994", "bodyText": "filterring out PRs as GitHub will send those too via the issue endpoints.", "author": "pvpurcarcosmin", "createdAt": "2020-04-28T14:41:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY1MzE1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjgxMjQ2NA==", "url": "https://github.com/metasfresh/metasfresh/pull/6539#discussion_r416812464", "bodyText": "allright, pls make it clearer in the code. E.g. add this as comment to the code, or (better) e.g. add issue.isPullRequest and filter by that", "author": "metas-ts", "createdAt": "2020-04-28T17:57:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY1MzE1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY1NjgxNQ==", "url": "https://github.com/metasfresh/metasfresh/pull/6539#discussion_r416656815", "bodyText": "don't forget to add .addOnlyActiveRecordsFilter(), as a general rule of thumb.", "author": "metas-ts", "createdAt": "2020-04-28T14:25:15Z", "path": "de.metas.serviceprovider/src/main/java/de/metas/serviceprovider/external/project/ExternalProjectRepository.java", "diffHunk": "@@ -39,21 +38,41 @@\n @Repository\n public class ExternalProjectRepository\n {\n-\tprivate final IQueryBL queryBL = Services.get(IQueryBL.class);\n+\tprivate final IQueryBL queryBL;\n+\n+\tpublic ExternalProjectRepository(final IQueryBL queryBL)\n+\t{\n+\t\tthis.queryBL = queryBL;\n+\t}\n \n \t@NonNull\n \tpublic ImmutableList<ExternalProjectReference> getByExternalSystem(@NonNull final ExternalSystem externalSystem)\n \t{\n \t\treturn queryBL.createQueryBuilder(I_S_ExternalProjectReference.class)\n \t\t\t\t.addOnlyActiveRecordsFilter()\n \t\t\t\t.addEqualsFilter(I_S_ExternalProjectReference.COLUMN_ExternalSystem, externalSystem.getValue())\n+\t\t\t\t.orderBy(I_S_ExternalProjectReference.COLUMNNAME_SeqNo)\n \t\t\t\t.create()\n \t\t\t\t.list()\n \t\t\t\t.stream()\n \t\t\t\t.map(this::buildExternalProjectReference)\n \t\t\t\t.collect(ImmutableList.toImmutableList());\n \t}\n \n+\t@NonNull\n+\tpublic Optional<ExternalProjectReference> getByRequestOptional(@NonNull final GetExternalProjectRequest getExternalProjectRequest)\n+\t{\n+\t\treturn queryBL.createQueryBuilder(I_S_ExternalProjectReference.class)\n+\t\t\t\t.addEqualsFilter(I_S_ExternalProjectReference.COLUMN_ExternalSystem, getExternalProjectRequest.getExternalSystem().getValue())", "originalCommit": "be6cdf7462af28fc789ee9bd4e1e0c08dee60394", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "29461c2bfedf1b4810ed2d0be6bbee41c79319cc", "url": "https://github.com/metasfresh/metasfresh/commit/29461c2bfedf1b4810ed2d0be6bbee41c79319cc", "message": "automatically import and linked parent issue\nhttps://github.com/metasfresh/metasfresh/issues/5816", "committedDate": "2020-04-29T10:11:58Z", "type": "commit"}, {"oid": "c6c24847fb10c9fabe8884495c375a96cfef8f23", "url": "https://github.com/metasfresh/metasfresh/commit/c6c24847fb10c9fabe8884495c375a96cfef8f23", "message": "automatically import and linked parent issue\nhttps://github.com/metasfresh/metasfresh/issues/5816", "committedDate": "2020-04-30T08:54:45Z", "type": "commit"}, {"oid": "2411cd2a96dee5eb99e0a7a3a9cbd0d260fbac77", "url": "https://github.com/metasfresh/metasfresh/commit/2411cd2a96dee5eb99e0a7a3a9cbd0d260fbac77", "message": "Merge branch 'master' into gh5816-app-pi\n\n# Conflicts:\n#\tde.metas.adempiere.adempiere/base/src/main/java/org/compiere/model/IQuery.java", "committedDate": "2020-04-30T09:18:36Z", "type": "commit"}]}