{"pr_number": 6126, "pr_title": "#6125 Docaction Permission not taken properly for Bank Statement", "pr_createdAt": "2020-02-04T15:24:01Z", "pr_url": "https://github.com/metasfresh/metasfresh/pull/6126", "timeline": [{"oid": "b70ce4295b1f6ada7b3a555684752ae8574a6d36", "url": "https://github.com/metasfresh/metasfresh/commit/b70ce4295b1f6ada7b3a555684752ae8574a6d36", "message": "#6125 Doc action permissions for a role are now seen without manually reseting the cache.", "committedDate": "2020-02-04T15:18:44Z", "type": "commit"}, {"oid": "025ac3004fe4cd00ff8a14f11d7766887353fe87", "url": "https://github.com/metasfresh/metasfresh/commit/025ac3004fe4cd00ff8a14f11d7766887353fe87", "message": "Merge branch 'master' into 6125", "committedDate": "2020-02-04T15:21:50Z", "type": "commit"}, {"oid": "6b8d0ce083aae0ca5e238713923027b77954a3a6", "url": "https://github.com/metasfresh/metasfresh/commit/6b8d0ce083aae0ca5e238713923027b77954a3a6", "message": "#6125 Formatted code to metasfresh standards.", "committedDate": "2020-02-04T15:29:32Z", "type": "commit"}, {"oid": "96d0cbf92cd3368b803c9103d95daca1f2bbd343", "url": "https://github.com/metasfresh/metasfresh/commit/96d0cbf92cd3368b803c9103d95daca1f2bbd343", "message": "#6125 Changed method name to a more suitable one.", "committedDate": "2020-02-04T16:38:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTE5ODI3NQ==", "url": "https://github.com/metasfresh/metasfresh/pull/6126#discussion_r375198275", "bodyText": "what is the ModelCacheInvalidationTiming about? why NEW?", "author": "metas-ts", "createdAt": "2020-02-05T11:20:13Z", "path": "de.metas.adempiere.adempiere/base/src/main/java/de/metas/security/model/interceptor/AD_Document_Action_Access.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * #%L\n+ * de.metas.adempiere.adempiere.base\n+ * %%\n+ * Copyright (C) 2019 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+package de.metas.security.model.interceptor;\n+\n+import de.metas.cache.model.CacheInvalidateMultiRequest;\n+import de.metas.cache.model.IModelCacheInvalidationService;\n+import de.metas.cache.model.ModelCacheInvalidationTiming;\n+import de.metas.util.Services;\n+import org.adempiere.ad.modelvalidator.annotations.Interceptor;\n+import org.adempiere.ad.modelvalidator.annotations.ModelChange;\n+import org.compiere.model.I_AD_Document_Action_Access;\n+import org.compiere.model.I_AD_Ref_List;\n+import org.compiere.model.ModelValidator;\n+\n+@Interceptor(I_AD_Document_Action_Access.class)\n+public class AD_Document_Action_Access\n+{\n+\tpublic static final transient AD_Document_Action_Access instance = new AD_Document_Action_Access();\n+\n+\t@ModelChange(timings = { ModelValidator.TYPE_AFTER_NEW, ModelValidator.TYPE_AFTER_CHANGE, ModelValidator.TYPE_AFTER_DELETE })\n+\tpublic void afterNewChangedOrDeleted(final I_AD_Document_Action_Access documentActionAccess)\n+\t{\n+\t\tfinal IModelCacheInvalidationService modelCacheInvalidationService = Services.get(IModelCacheInvalidationService.class);\n+\t\tmodelCacheInvalidationService.invalidate(\n+\t\t\t\tCacheInvalidateMultiRequest.allRecordsForTable(I_AD_Ref_List.Table_Name), ModelCacheInvalidationTiming.NEW);", "originalCommit": "96d0cbf92cd3368b803c9103d95daca1f2bbd343", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "63fc1925dd77725ea49d010af384555547cd5708", "url": "https://github.com/metasfresh/metasfresh/commit/63fc1925dd77725ea49d010af384555547cd5708", "message": "#6125 Added explanation!", "committedDate": "2020-02-05T11:53:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTIyOTE0OA==", "url": "https://github.com/metasfresh/metasfresh/pull/6126#discussion_r375229148", "bodyText": "FYI, you can also annotate the  model interceptor with @Component, then spring will do the magic on startup", "author": "metas-ts", "createdAt": "2020-02-05T12:34:05Z", "path": "de.metas.adempiere.adempiere/base/src/main/java/de/metas/security/model/interceptor/SecurityMainInterceptor.java", "diffHunk": "@@ -59,6 +59,7 @@ protected void registerInterceptors(final IModelValidationEngine engine, final I\n \t\t// Role and included roles\n \t\tengine.addModelValidator(de.metas.security.model.interceptor.AD_Role.instance, client);\n \t\tengine.addModelValidator(de.metas.security.model.interceptor.AD_Role_Included.instance, client);\n+\t\tengine.addModelValidator(AD_Document_Action_Access.instance, client);", "originalCommit": "63fc1925dd77725ea49d010af384555547cd5708", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}