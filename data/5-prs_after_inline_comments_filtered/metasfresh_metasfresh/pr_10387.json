{"pr_number": 10387, "pr_title": "#10325 Print manufacturing order label ", "pr_createdAt": "2020-12-08T17:09:22Z", "pr_url": "https://github.com/metasfresh/metasfresh/pull/10387", "timeline": [{"oid": "8cf3af43599be0cdd3d511892be3df2f86ee86ef", "url": "https://github.com/metasfresh/metasfresh/commit/8cf3af43599be0cdd3d511892be3df2f86ee86ef", "message": "#10325 Try to use AD_Pinstance", "committedDate": "2020-12-03T15:38:11Z", "type": "commit"}, {"oid": "0279635b24407807fd50557ff3d10f1cfc8212b9", "url": "https://github.com/metasfresh/metasfresh/commit/0279635b24407807fd50557ff3d10f1cfc8212b9", "message": "Merge branch 'master' into gh10325_1", "committedDate": "2020-12-07T11:31:18Z", "type": "commit"}, {"oid": "500a4ab910cdf993d035ba58578212c2624025f5", "url": "https://github.com/metasfresh/metasfresh/commit/500a4ab910cdf993d035ba58578212c2624025f5", "message": "#10325 Create T_Selection to use", "committedDate": "2020-12-07T18:02:32Z", "type": "commit"}, {"oid": "a1951f011baeac3a66381633379de62d4d2ccbb7", "url": "https://github.com/metasfresh/metasfresh/commit/a1951f011baeac3a66381633379de62d4d2ccbb7", "message": "#10325 Create proper selection", "committedDate": "2020-12-08T16:00:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODYyODIwMA==", "url": "https://github.com/metasfresh/metasfresh/pull/10387#discussion_r538628200", "bodyText": "for sake of readability pls use a classic for.\nabout: PPOrderLineRow::getHuId\n\n\ncheck and consider only those lines which are about HUs, i.e. ppOrderLineRow.getType().isHUOrHUStorage()\n\n\nguard against null for getHuId()\n\n\nadd the huIds directly to a Set, instead of adding them to a list and then converting to a Set.", "author": "teosarca", "createdAt": "2020-12-08T17:22:39Z", "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/pporder/process/WEBUI_PP_Order_PrintLabel.java", "diffHunk": "@@ -73,55 +79,73 @@ protected ProcessPreconditionsResolution checkPreconditionsApplicable()\n \tprotected String doIt()\n \t{\n \n+\t\t// create selection\n+\t\tfinal ImmutableSet<HuId> distinctHuIds = retrieveSelectedHuIds();\n+\t\tDB.createT_Selection(getPinstanceId(), distinctHuIds, ITrx.TRXNAME_None);\n+\n \t\t// print\n-\t\tfinal PPOrderLineRow row = getSingleSelectedRow();\n-\t\tfinal ReportResult label = printLabel(row);\n+\t\tfinal ReportResult label = printLabel();\n \n \t\t// preview\n-\t\tgetResult().setReportData(\n-\t\t\t\tlabel.getReportContent(),\n-\t\t\t\tbuildFilename(row),\n-\t\t\t\tOutputType.PDF.getContentType());\n+\t\tgetResult().setReportData(label.getReportContent(), buildFilename(), OutputType.PDF.getContentType());\n \n \t\treturn MSG_OK;\n \n \t}\n \n-\tprivate ReportResult printLabel(@NonNull final PPOrderLineRow row)\n+\tprivate ImmutableSet<HuId> retrieveSelectedHuIds()\n \t{\n-\t\tfinal PInstanceRequest pinstanceRequest = createPInstanceRequest(row);\n+\t\tfinal DocumentIdsSelection selectedRowIds = getSelectedRowIds();\n+\n+\t\tfinal ImmutableList<PPOrderLineRow> selectedRows = getView().streamByIds(selectedRowIds)\n+\t\t\t\t.collect(ImmutableList.toImmutableList());\n+\n+\t\tfinal List<HuId> huIds = new ArrayList<HuId>();\n+\n+\t\tselectedRows.forEach(row -> {", "originalCommit": "a1951f011baeac3a66381633379de62d4d2ccbb7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a1b9d3d6c852048c96902f228e128483b3911a20", "url": "https://github.com/metasfresh/metasfresh/commit/a1b9d3d6c852048c96902f228e128483b3911a20", "message": "#10325 Minor refacotoring", "committedDate": "2020-12-08T17:33:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA0MzMzNA==", "url": "https://github.com/metasfresh/metasfresh/pull/10387#discussion_r539043334", "bodyText": "pls use HashSet.\nCollections.emptySet() returns an immutable empty set.", "author": "teosarca", "createdAt": "2020-12-09T06:29:56Z", "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/pporder/process/WEBUI_PP_Order_PrintLabel.java", "diffHunk": "@@ -98,24 +98,30 @@ protected String doIt()\n \t\tfinal DocumentIdsSelection selectedRowIds = getSelectedRowIds();\n \n \t\tfinal ImmutableList<PPOrderLineRow> selectedRows = getView().streamByIds(selectedRowIds)\n+\t\t\t\t.filter(ppOrderLineRow -> ppOrderLineRow.getType().isHUOrHUStorage())\n \t\t\t\t.collect(ImmutableList.toImmutableList());\n \n-\t\tfinal List<HuId> huIds = new ArrayList<HuId>();\n+\t\tfinal Set<HuId> huIds = Collections.emptySet();", "originalCommit": "a1b9d3d6c852048c96902f228e128483b3911a20", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA0MzcwMQ==", "url": "https://github.com/metasfresh/metasfresh/pull/10387#discussion_r539043701", "bodyText": "if u are filtering here by HU or HUStorage type.... below you won't get any MainProduct row...", "author": "teosarca", "createdAt": "2020-12-09T06:31:02Z", "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/pporder/process/WEBUI_PP_Order_PrintLabel.java", "diffHunk": "@@ -98,24 +98,30 @@ protected String doIt()\n \t\tfinal DocumentIdsSelection selectedRowIds = getSelectedRowIds();\n \n \t\tfinal ImmutableList<PPOrderLineRow> selectedRows = getView().streamByIds(selectedRowIds)\n+\t\t\t\t.filter(ppOrderLineRow -> ppOrderLineRow.getType().isHUOrHUStorage())", "originalCommit": "a1b9d3d6c852048c96902f228e128483b3911a20", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA0MzkxMA==", "url": "https://github.com/metasfresh/metasfresh/pull/10387#discussion_r539043910", "bodyText": "this won't be matched anymore because above u filtered out this type", "author": "teosarca", "createdAt": "2020-12-09T06:31:35Z", "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/pporder/process/WEBUI_PP_Order_PrintLabel.java", "diffHunk": "@@ -98,24 +98,30 @@ protected String doIt()\n \t\tfinal DocumentIdsSelection selectedRowIds = getSelectedRowIds();\n \n \t\tfinal ImmutableList<PPOrderLineRow> selectedRows = getView().streamByIds(selectedRowIds)\n+\t\t\t\t.filter(ppOrderLineRow -> ppOrderLineRow.getType().isHUOrHUStorage())\n \t\t\t\t.collect(ImmutableList.toImmutableList());\n \n-\t\tfinal List<HuId> huIds = new ArrayList<HuId>();\n+\t\tfinal Set<HuId> huIds = Collections.emptySet();\n \n-\t\tselectedRows.forEach(row -> {\n+\t\tfor (final PPOrderLineRow row : selectedRows)\n+\t\t{\n \t\t\tfinal PPOrderLineType type = row.getType();\n \t\t\tif (type.isMainProduct())", "originalCommit": "a1b9d3d6c852048c96902f228e128483b3911a20", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA0NDAzMw==", "url": "https://github.com/metasfresh/metasfresh/pull/10387#discussion_r539044033", "bodyText": "why?", "author": "teosarca", "createdAt": "2020-12-09T06:31:52Z", "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/pporder/process/WEBUI_PP_Order_PrintLabel.java", "diffHunk": "@@ -98,24 +98,30 @@ protected String doIt()\n \t\tfinal DocumentIdsSelection selectedRowIds = getSelectedRowIds();\n \n \t\tfinal ImmutableList<PPOrderLineRow> selectedRows = getView().streamByIds(selectedRowIds)\n+\t\t\t\t.filter(ppOrderLineRow -> ppOrderLineRow.getType().isHUOrHUStorage())\n \t\t\t\t.collect(ImmutableList.toImmutableList());\n \n-\t\tfinal List<HuId> huIds = new ArrayList<HuId>();\n+\t\tfinal Set<HuId> huIds = Collections.emptySet();\n \n-\t\tselectedRows.forEach(row -> {\n+\t\tfor (final PPOrderLineRow row : selectedRows)\n+\t\t{\n \t\t\tfinal PPOrderLineType type = row.getType();\n \t\t\tif (type.isMainProduct())\n \t\t\t{\n \t\t\t\tfinal ImmutableList<PPOrderLineRow> includedRows = row.getIncludedRows();\n-\t\t\t\tincludedRows.stream().map(PPOrderLineRow::getHuId).collect(Collectors.toCollection(() -> huIds));\n+\t\t\t\tincludedRows.stream()\n+\t\t\t\t\t\t.map(PPOrderLineRow::getHuId)\n+\t\t\t\t\t\t.filter(Objects::nonNull)\n+\t\t\t\t\t\t.collect(Collectors.toCollection(() -> huIds));\n \t\t\t}\n-\t\t\telse\n+\t\t\telse if (row.getHuId() != null)\n \t\t\t{\n \t\t\t\thuIds.add(row.getHuId());\n \t\t\t}\n-\t\t});\n+\t\t}\n \n-\t\tfinal ImmutableSet<HuId> distinctHuIds = huIds.stream().filter(Objects::nonNull).distinct()\n+\t\tfinal ImmutableSet<HuId> distinctHuIds = huIds.stream()", "originalCommit": "a1b9d3d6c852048c96902f228e128483b3911a20", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "01bdbebe1696d97234d6443e0326594529322a2b", "url": "https://github.com/metasfresh/metasfresh/commit/01bdbebe1696d97234d6443e0326594529322a2b", "message": "#10325 Fix selection", "committedDate": "2020-12-09T07:11:40Z", "type": "commit"}, {"oid": "2c0b4e79a362de4e9751d66b15033b816411459b", "url": "https://github.com/metasfresh/metasfresh/commit/2c0b4e79a362de4e9751d66b15033b816411459b", "message": "Merge branch 'master' into gh10325_1", "committedDate": "2020-12-09T08:33:01Z", "type": "commit"}, {"oid": "030e2aae18001be03a7f328cabc733e338bc2a04", "url": "https://github.com/metasfresh/metasfresh/commit/030e2aae18001be03a7f328cabc733e338bc2a04", "message": "#10325  Fix build", "committedDate": "2020-12-09T08:33:41Z", "type": "commit"}]}