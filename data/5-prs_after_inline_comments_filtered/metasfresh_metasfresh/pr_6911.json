{"pr_number": 6911, "pr_title": "#1253 Work In Progress - Clone Lines.", "pr_createdAt": "2020-06-25T14:38:00Z", "pr_url": "https://github.com/metasfresh/metasfresh/pull/6911", "timeline": [{"oid": "be0eb6f6a2649b64260cb11146fe88b9afe0e565", "url": "https://github.com/metasfresh/metasfresh/commit/be0eb6f6a2649b64260cb11146fe88b9afe0e565", "message": "#1253 Work In Progress - First commit.", "committedDate": "2020-06-25T14:36:39Z", "type": "commit"}, {"oid": "4aecca323191599866c67ba4ba8474debd16f9bf", "url": "https://github.com/metasfresh/metasfresh/commit/4aecca323191599866c67ba4ba8474debd16f9bf", "message": "#1253 Work In Progress - now extending Java Process", "committedDate": "2020-06-26T12:59:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg0NDk2Mw==", "url": "https://github.com/metasfresh/metasfresh/pull/6911#discussion_r446844963", "bodyText": "use rejectWithInternalReason(...) as it's clearer", "author": "metas-ts", "createdAt": "2020-06-29T08:06:59Z", "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/process/WEBUI_CloneLine.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * #%L\n+ * metasfresh-webui-api\n+ * %%\n+ * Copyright (C) 2020 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+package de.metas.ui.web.process;\n+\n+import de.metas.process.IProcessPrecondition;\n+import de.metas.process.IProcessPreconditionsContext;\n+import de.metas.process.JavaProcess;\n+import de.metas.process.ProcessPreconditionsResolution;\n+import de.metas.ui.web.window.model.DocumentCollection;\n+import lombok.NonNull;\n+import org.adempiere.model.CopyRecordFactory;\n+import org.adempiere.util.lang.impl.TableRecordReference;\n+import org.compiere.SpringContextHolder;\n+\n+import javax.annotation.Nullable;\n+\n+public class WEBUI_CloneLine extends JavaProcess implements IProcessPrecondition\n+{\n+\tDocumentCollection documentCollectionService = SpringContextHolder.instance.getBean(DocumentCollection.class);\n+\n+\t@Nullable\n+\t@Override\n+\tprotected String doIt() throws Exception\n+\t{\n+\t\t// To be replaced with table id of the selected row's table and row id\n+\t\t// Also, if we are gonna support multiple rows cloning we could put the following 2 lines in a foreach (rowId : rowIds) statement\n+\t\tfinal TableRecordReference tableRecordReference = TableRecordReference.of(getTable_ID(), getRecord_ID());\n+\t\tdocumentCollectionService.duplicateDocumentInTrxGeneric(tableRecordReference, getProcessInfo().getAdWindowId());\n+\t\treturn null;\n+\t}\n+\n+\t@Override\n+\tpublic void flush()\n+\t{\n+\n+\t}\n+\n+\t@Override\n+\tpublic boolean isAllowThreadInherited()\n+\t{\n+\t\treturn false;\n+\t}\n+\n+\t@Override\n+\tpublic ProcessPreconditionsResolution checkPreconditionsApplicable(final @NonNull IProcessPreconditionsContext context)\n+\t{\n+\t\tif (context.getAdTabId() == null)\n+\t\t{\n+\t\t\treturn ProcessPreconditionsResolution.reject();", "originalCommit": "4aecca323191599866c67ba4ba8474debd16f9bf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg0NTQ2NQ==", "url": "https://github.com/metasfresh/metasfresh/pull/6911#discussion_r446845465", "bodyText": "there is a constant we return if all is fine..MSG_OK afair..", "author": "metas-ts", "createdAt": "2020-06-29T08:07:55Z", "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/process/WEBUI_CloneLine.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * #%L\n+ * metasfresh-webui-api\n+ * %%\n+ * Copyright (C) 2020 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+package de.metas.ui.web.process;\n+\n+import de.metas.process.IProcessPrecondition;\n+import de.metas.process.IProcessPreconditionsContext;\n+import de.metas.process.JavaProcess;\n+import de.metas.process.ProcessPreconditionsResolution;\n+import de.metas.ui.web.window.model.DocumentCollection;\n+import lombok.NonNull;\n+import org.adempiere.model.CopyRecordFactory;\n+import org.adempiere.util.lang.impl.TableRecordReference;\n+import org.compiere.SpringContextHolder;\n+\n+import javax.annotation.Nullable;\n+\n+public class WEBUI_CloneLine extends JavaProcess implements IProcessPrecondition\n+{\n+\tDocumentCollection documentCollectionService = SpringContextHolder.instance.getBean(DocumentCollection.class);\n+\n+\t@Nullable\n+\t@Override\n+\tprotected String doIt() throws Exception\n+\t{\n+\t\t// To be replaced with table id of the selected row's table and row id\n+\t\t// Also, if we are gonna support multiple rows cloning we could put the following 2 lines in a foreach (rowId : rowIds) statement\n+\t\tfinal TableRecordReference tableRecordReference = TableRecordReference.of(getTable_ID(), getRecord_ID());\n+\t\tdocumentCollectionService.duplicateDocumentInTrxGeneric(tableRecordReference, getProcessInfo().getAdWindowId());\n+\t\treturn null;", "originalCommit": "4aecca323191599866c67ba4ba8474debd16f9bf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDk1NDA5MQ==", "url": "https://github.com/metasfresh/metasfresh/pull/6911#discussion_r450954091", "bodyText": "Done", "author": "dragospodariu96", "createdAt": "2020-07-07T15:30:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg0NTQ2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg0NjE3OQ==", "url": "https://github.com/metasfresh/metasfresh/pull/6911#discussion_r446846179", "bodyText": "not sure why you picked this class name..why not something more \"speaking\"?", "author": "metas-ts", "createdAt": "2020-06-29T08:09:15Z", "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/process/config/StandardProcessConfig.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * #%L\n+ * metasfresh-webui-api\n+ * %%\n+ * Copyright (C) 2020 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+package de.metas.ui.web.process.config;\n+\n+import de.metas.process.IADProcessDAO;\n+import de.metas.process.RelatedProcessDescriptor;\n+import de.metas.ui.web.process.WEBUI_CloneLine;\n+import de.metas.util.Services;\n+import org.springframework.stereotype.Component;\n+\n+import javax.annotation.PostConstruct;\n+\n+@Component\n+public class StandardProcessConfig", "originalCommit": "4aecca323191599866c67ba4ba8474debd16f9bf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDk1NDA1Nw==", "url": "https://github.com/metasfresh/metasfresh/pull/6911#discussion_r450954057", "bodyText": "Done", "author": "dragospodariu96", "createdAt": "2020-07-07T15:30:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg0NjE3OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg0Njk3Mw==", "url": "https://github.com/metasfresh/metasfresh/pull/6911#discussion_r446846973", "bodyText": "if they can't/shall not be null, then please use lombok's @NonNull annotation", "author": "metas-ts", "createdAt": "2020-06-29T08:10:41Z", "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/window/model/DocumentCollection.java", "diffHunk": "@@ -790,10 +789,17 @@ private DocumentPath duplicateDocumentInTrx(final DocumentPath fromDocumentPath)\n \n \t\tfinal TableRecordReference fromRecordRef = getTableRecordReference(fromDocumentPath);\n \n+\t\treturn duplicateDocumentInTrxGeneric(fromRecordRef, fromDocumentPath.getAdWindowIdOrNull());\n+\n+\t}\n+\n+\tpublic DocumentPath duplicateDocumentInTrxGeneric(final TableRecordReference fromRecordRef, final AdWindowId windowId)", "originalCommit": "4aecca323191599866c67ba4ba8474debd16f9bf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDk1NDE2Mg==", "url": "https://github.com/metasfresh/metasfresh/pull/6911#discussion_r450954162", "bodyText": "Addrssed this", "author": "dragospodariu96", "createdAt": "2020-07-07T15:30:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg0Njk3Mw=="}], "type": "inlineReview"}, {"oid": "25f7de6bb6939f270b914de215977ac0a8664556", "url": "https://github.com/metasfresh/metasfresh/commit/25f7de6bb6939f270b914de215977ac0a8664556", "message": "Revert \"Revert bigbang (#6925)\"\n\nThis reverts commit 387aac17173a5550e7dd7dd9b2bfbff248d31522.", "committedDate": "2020-06-30T10:49:01Z", "type": "commit"}, {"oid": "35b3d60e7e471fe79e031434c567adb69fab14ee", "url": "https://github.com/metasfresh/metasfresh/commit/35b3d60e7e471fe79e031434c567adb69fab14ee", "message": "4307 fix table collapse (#6927)\n\n* Fix collapsible table\r\n\r\n* Remove redundant code\r\n\r\n* Fix table tree\r\n\r\n* Safety check to make sure is action is dispatched\r\n\r\nCo-authored-by: Petrica Nanca <petrica.nanca@metasfresh.com>", "committedDate": "2020-06-30T12:11:05Z", "type": "commit"}, {"oid": "dfbc83f2725e04f6f0853bd0dc54f8fa29ebe0af", "url": "https://github.com/metasfresh/metasfresh/commit/dfbc83f2725e04f6f0853bd0dc54f8fa29ebe0af", "message": "Merge branch 'master' into gh1253_clone_lines", "committedDate": "2020-06-30T18:34:17Z", "type": "commit"}, {"oid": "2639d17ac879851f277cc92439444c883d9f933a", "url": "https://github.com/metasfresh/metasfresh/commit/2639d17ac879851f277cc92439444c883d9f933a", "message": "Cherry-Picked front-end par\nCo-authored-by: Petrica Nanca <petrica.nanca@metasfresh.com>\n(cherry picked from commit 643fdb774e1a0499b6482e2994e7315903cb2ec6)\n\nbackend/drsdf\nzvc\nzxvc\nz\nxcbnfdskj;bn g;dsa,,fda[piqwepity[poeriuyq\n\n `\n asfdasfafsddsaf\n fresh/de.metas.fresh.base/src/main/jasperreports/de/metas/reports/DataAdapter#", "committedDate": "2020-06-30T18:53:25Z", "type": "commit"}, {"oid": "94fff9f63b2969122ca3c182c21b1e8f5ea58d80", "url": "https://github.com/metasfresh/metasfresh/commit/94fff9f63b2969122ca3c182c21b1e8f5ea58d80", "message": "Send selection on process creation (#6916)\n\nCo-authored-by: Petrica Nanca <petrica.nanca@metasfresh.com>\n(cherry picked from commit 643fdb774e1a0499b6482e2994e7315903cb2ec6)", "committedDate": "2020-06-30T18:56:53Z", "type": "commit"}, {"oid": "f1b72ff5a4f5ae61a671f3be51699580a3042862", "url": "https://github.com/metasfresh/metasfresh/commit/f1b72ff5a4f5ae61a671f3be51699580a3042862", "message": "Fix for actions dropdown remaining opened (#6930)\n\nCo-authored-by: Petrica Nanca <petrica.nanca@metasfresh.com>", "committedDate": "2020-07-01T09:02:42Z", "type": "commit"}, {"oid": "8b748baa7ee2bed0c0f7f45d421d294697c72de0", "url": "https://github.com/metasfresh/metasfresh/commit/8b748baa7ee2bed0c0f7f45d421d294697c72de0", "message": "Fix refreshing table with attributes (#6928)\n\n* #6873 change how spinner works for tables with attributes\r\n\r\n* #6873 don't deselect items manually on refresh of data as redux handles that\r\n\r\n* - remove todo comments", "committedDate": "2020-07-01T10:25:16Z", "type": "commit"}, {"oid": "1f03deff0268b477c4e7754906bc0d9079ca058d", "url": "https://github.com/metasfresh/metasfresh/commit/1f03deff0268b477c4e7754906bc0d9079ca058d", "message": "Fix shortcuts (#6936)\n\n* #6873 fix open in new tab shortcut\r\n\r\n* #6873 fix QuickActions shortcut", "committedDate": "2020-07-02T04:13:21Z", "type": "commit"}, {"oid": "0a97fa030f1c4423b3aead058f327d6651d949f8", "url": "https://github.com/metasfresh/metasfresh/commit/0a97fa030f1c4423b3aead058f327d6651d949f8", "message": "Discard unsaved row when closing modal (#6939)\n\n* #6873 merge `discard` new items functions into one\r\n\r\n* #6873 remove unsaved table rows on closing modal", "committedDate": "2020-07-02T04:18:32Z", "type": "commit"}, {"oid": "5c552cc3366b2be2454f083bf8538705adf5afda", "url": "https://github.com/metasfresh/metasfresh/commit/5c552cc3366b2be2454f083bf8538705adf5afda", "message": "Fix filtering data in tables (#6940)\n\n* #6873 add missing action creator to mapDispatchToProps\r\n- log errors to the console\r\n- add tableId prop to make debugging easier\r\n\r\n* #6873 create AC for clearing table data", "committedDate": "2020-07-02T04:31:10Z", "type": "commit"}, {"oid": "31b58ac241dffa62f91c5ca7760e157f5433ac00", "url": "https://github.com/metasfresh/metasfresh/commit/31b58ac241dffa62f91c5ca7760e157f5433ac00", "message": "Revert \"Discard unsaved row when closing modal (#6939)\" (#6941)\n\nThis reverts commit 0a97fa030f1c4423b3aead058f327d6651d949f8.", "committedDate": "2020-07-02T05:31:04Z", "type": "commit"}, {"oid": "332b8017ad3d7aa6ef6b4ee6c1ebc671907ee140", "url": "https://github.com/metasfresh/metasfresh/commit/332b8017ad3d7aa6ef6b4ee6c1ebc671907ee140", "message": "Fix how we handle discarding rows (#6944)\n\n* Revert \"Revert \"Discard unsaved row when closing modal (#6939)\" (#6941)\"\r\n\r\nThis reverts commit 31b58ac241dffa62f91c5ca7760e157f5433ac00.\r\n\r\n* #6873 remove rows in table only when the modal is not saved", "committedDate": "2020-07-02T14:18:36Z", "type": "commit"}, {"oid": "eeefc1883fa60b29414563633bff036038e9e0d4", "url": "https://github.com/metasfresh/metasfresh/commit/eeefc1883fa60b29414563633bff036038e9e0d4", "message": "#6873 don't create tab tables for advanced edit (#6948)", "committedDate": "2020-07-02T14:21:32Z", "type": "commit"}, {"oid": "6ec44dcca727e4be562e9513d00ece7018305e20", "url": "https://github.com/metasfresh/metasfresh/commit/6ec44dcca727e4be562e9513d00ece7018305e20", "message": "Fix date picker (#6947)\n\n* Fix date picker\r\n\r\n* Fix linter errors\r\n\r\nCo-authored-by: Petrica Nanca <petrica.nanca@metasfresh.com>", "committedDate": "2020-07-02T16:20:15Z", "type": "commit"}, {"oid": "05b1026bc0582f2c593a748fb05bff4995d619d4", "url": "https://github.com/metasfresh/metasfresh/commit/05b1026bc0582f2c593a748fb05bff4995d619d4", "message": "#6873 don't filter on WS event, fix quickactions (#6951)", "committedDate": "2020-07-03T05:08:38Z", "type": "commit"}, {"oid": "efa8c3381322d47b12e25f617d04e39c8e39b00f", "url": "https://github.com/metasfresh/metasfresh/commit/efa8c3381322d47b12e25f617d04e39c8e39b00f", "message": "- fixing e2e tests (#6952)", "committedDate": "2020-07-03T05:16:07Z", "type": "commit"}, {"oid": "0718274b5aa4cbf384f672939538df78ce42261f", "url": "https://github.com/metasfresh/metasfresh/commit/0718274b5aa4cbf384f672939538df78ce42261f", "message": "Fix multiselect with ctrl/command key (#6955)\n\nCo-authored-by: Petrica Nanca <petrica.nanca@metasfresh.com>", "committedDate": "2020-07-03T10:01:00Z", "type": "commit"}, {"oid": "078474aabe09a41e5bbd9e5c3ad6ba524916329d", "url": "https://github.com/metasfresh/metasfresh/commit/078474aabe09a41e5bbd9e5c3ad6ba524916329d", "message": "Merge branch 'master' into master-revert-revert", "committedDate": "2020-07-03T12:00:25Z", "type": "commit"}, {"oid": "c77b5e2574322fa597f84a4d107639a8dc6ee9d9", "url": "https://github.com/metasfresh/metasfresh/commit/c77b5e2574322fa597f84a4d107639a8dc6ee9d9", "message": "Merge remote-tracking branch 'origin/master-revert-revert' into gh1253_clone_lines", "committedDate": "2020-07-03T12:27:47Z", "type": "commit"}, {"oid": "4901990629aed511b254c8fec80eb28a9822ff84", "url": "https://github.com/metasfresh/metasfresh/commit/4901990629aed511b254c8fec80eb28a9822ff84", "message": "#1253 Can now clone tab lines.", "committedDate": "2020-07-07T15:27:19Z", "type": "commit"}, {"oid": "0d5dcd9522889537d5fb36a61b394c6b3904296e", "url": "https://github.com/metasfresh/metasfresh/commit/0d5dcd9522889537d5fb36a61b394c6b3904296e", "message": "Merge remote-tracking branch 'origin/master' into gh1253_clone_lines\n\n# Conflicts:\n#\tfrontend/src/actions/TableActions.js", "committedDate": "2020-07-07T15:28:13Z", "type": "commit"}, {"oid": "b64daf5920d86def97d3aa96e7420181ea5888ad", "url": "https://github.com/metasfresh/metasfresh/commit/b64daf5920d86def97d3aa96e7420181ea5888ad", "message": "#1253 Translated process to german.", "committedDate": "2020-07-07T15:45:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA2OTIyMQ==", "url": "https://github.com/metasfresh/metasfresh/pull/6911#discussion_r451069221", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tfinal TableRecordReference tableRecordReference = new ArrayList<TableRecordReference>(TableRecordReference.ofSet(getProcessInfo().getSelectedIncludedRecords())).get(0);\n          \n          \n            \n            \t\tfinal TableRecordReference tableRecordReference = CollectionUtils.singleElementOrNull(getProcessInfo().getSelectedIncludedRecords());\n          \n          \n            \n            \t\tif(tableRecordReference == null)\n          \n          \n            \n            \t\t{\n          \n          \n            \n            \t\t\taddLog(\"The precondition of one selected included record does not hold anymore; -> doing nothing\");\n          \n          \n            \n            \t\t\treturn MSG_OK;\n          \n          \n            \n            \t\t}", "author": "metas-ts", "createdAt": "2020-07-07T18:42:09Z", "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/process/WEBUI_CloneLine.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * #%L\n+ * metasfresh-webui-api\n+ * %%\n+ * Copyright (C) 2020 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+package de.metas.ui.web.process;\n+\n+import de.metas.process.IProcessPrecondition;\n+import de.metas.process.IProcessPreconditionsContext;\n+import de.metas.process.JavaProcess;\n+import de.metas.process.ProcessPreconditionsResolution;\n+import de.metas.ui.web.window.model.DocumentCollection;\n+import lombok.NonNull;\n+import org.adempiere.model.CopyRecordFactory;\n+import org.adempiere.util.lang.impl.TableRecordReference;\n+import org.compiere.SpringContextHolder;\n+\n+import javax.annotation.Nullable;\n+import java.util.ArrayList;\n+\n+public class WEBUI_CloneLine extends JavaProcess implements IProcessPrecondition\n+{\n+\tDocumentCollection documentCollectionService = SpringContextHolder.instance.getBean(DocumentCollection.class);\n+\n+\t@Nullable\n+\t@Override\n+\tprotected String doIt() throws Exception\n+\t{\n+\t\tfinal TableRecordReference tableRecordReference = new ArrayList<TableRecordReference>(TableRecordReference.ofSet(getProcessInfo().getSelectedIncludedRecords())).get(0);", "originalCommit": "b64daf5920d86def97d3aa96e7420181ea5888ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA2OTU0Mg==", "url": "https://github.com/metasfresh/metasfresh/pull/6911#discussion_r451069542", "bodyText": "why override flush with an empty method?", "author": "metas-ts", "createdAt": "2020-07-07T18:42:47Z", "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/process/WEBUI_CloneLine.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * #%L\n+ * metasfresh-webui-api\n+ * %%\n+ * Copyright (C) 2020 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+package de.metas.ui.web.process;\n+\n+import de.metas.process.IProcessPrecondition;\n+import de.metas.process.IProcessPreconditionsContext;\n+import de.metas.process.JavaProcess;\n+import de.metas.process.ProcessPreconditionsResolution;\n+import de.metas.ui.web.window.model.DocumentCollection;\n+import lombok.NonNull;\n+import org.adempiere.model.CopyRecordFactory;\n+import org.adempiere.util.lang.impl.TableRecordReference;\n+import org.compiere.SpringContextHolder;\n+\n+import javax.annotation.Nullable;\n+import java.util.ArrayList;\n+\n+public class WEBUI_CloneLine extends JavaProcess implements IProcessPrecondition\n+{\n+\tDocumentCollection documentCollectionService = SpringContextHolder.instance.getBean(DocumentCollection.class);\n+\n+\t@Nullable\n+\t@Override\n+\tprotected String doIt() throws Exception\n+\t{\n+\t\tfinal TableRecordReference tableRecordReference = new ArrayList<TableRecordReference>(TableRecordReference.ofSet(getProcessInfo().getSelectedIncludedRecords())).get(0);\n+\t\tfinal TableRecordReference parentRef = TableRecordReference.of(getTable_ID(), getRecord_ID());\n+\t\tdocumentCollectionService.duplicateTabRowInTrx(parentRef, tableRecordReference, getProcessInfo().getAdWindowId());\n+\t\treturn MSG_OK;\n+\t}\n+\n+\t@Override\n+\tpublic void flush()", "originalCommit": "b64daf5920d86def97d3aa96e7420181ea5888ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA2OTY4Mg==", "url": "https://github.com/metasfresh/metasfresh/pull/6911#discussion_r451069682", "bodyText": "why override isAllowThreadInherited?", "author": "metas-ts", "createdAt": "2020-07-07T18:43:02Z", "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/process/WEBUI_CloneLine.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * #%L\n+ * metasfresh-webui-api\n+ * %%\n+ * Copyright (C) 2020 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+package de.metas.ui.web.process;\n+\n+import de.metas.process.IProcessPrecondition;\n+import de.metas.process.IProcessPreconditionsContext;\n+import de.metas.process.JavaProcess;\n+import de.metas.process.ProcessPreconditionsResolution;\n+import de.metas.ui.web.window.model.DocumentCollection;\n+import lombok.NonNull;\n+import org.adempiere.model.CopyRecordFactory;\n+import org.adempiere.util.lang.impl.TableRecordReference;\n+import org.compiere.SpringContextHolder;\n+\n+import javax.annotation.Nullable;\n+import java.util.ArrayList;\n+\n+public class WEBUI_CloneLine extends JavaProcess implements IProcessPrecondition\n+{\n+\tDocumentCollection documentCollectionService = SpringContextHolder.instance.getBean(DocumentCollection.class);\n+\n+\t@Nullable\n+\t@Override\n+\tprotected String doIt() throws Exception\n+\t{\n+\t\tfinal TableRecordReference tableRecordReference = new ArrayList<TableRecordReference>(TableRecordReference.ofSet(getProcessInfo().getSelectedIncludedRecords())).get(0);\n+\t\tfinal TableRecordReference parentRef = TableRecordReference.of(getTable_ID(), getRecord_ID());\n+\t\tdocumentCollectionService.duplicateTabRowInTrx(parentRef, tableRecordReference, getProcessInfo().getAdWindowId());\n+\t\treturn MSG_OK;\n+\t}\n+\n+\t@Override\n+\tpublic void flush()\n+\t{\n+\n+\t}\n+\n+\t@Override\n+\tpublic boolean isAllowThreadInherited()\n+\t{", "originalCommit": "b64daf5920d86def97d3aa96e7420181ea5888ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA3MDAxMw==", "url": "https://github.com/metasfresh/metasfresh/pull/6911#discussion_r451070013", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\treturn ProcessPreconditionsResolution.rejectWithInternalReason(\"More than one row selected.\");\n          \n          \n            \n            \t\t\treturn ProcessPreconditionsResolution.rejectWithInternalReason(\"More or less than one row selected.\");", "author": "metas-ts", "createdAt": "2020-07-07T18:43:40Z", "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/process/WEBUI_CloneLine.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * #%L\n+ * metasfresh-webui-api\n+ * %%\n+ * Copyright (C) 2020 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+package de.metas.ui.web.process;\n+\n+import de.metas.process.IProcessPrecondition;\n+import de.metas.process.IProcessPreconditionsContext;\n+import de.metas.process.JavaProcess;\n+import de.metas.process.ProcessPreconditionsResolution;\n+import de.metas.ui.web.window.model.DocumentCollection;\n+import lombok.NonNull;\n+import org.adempiere.model.CopyRecordFactory;\n+import org.adempiere.util.lang.impl.TableRecordReference;\n+import org.compiere.SpringContextHolder;\n+\n+import javax.annotation.Nullable;\n+import java.util.ArrayList;\n+\n+public class WEBUI_CloneLine extends JavaProcess implements IProcessPrecondition\n+{\n+\tDocumentCollection documentCollectionService = SpringContextHolder.instance.getBean(DocumentCollection.class);\n+\n+\t@Nullable\n+\t@Override\n+\tprotected String doIt() throws Exception\n+\t{\n+\t\tfinal TableRecordReference tableRecordReference = new ArrayList<TableRecordReference>(TableRecordReference.ofSet(getProcessInfo().getSelectedIncludedRecords())).get(0);\n+\t\tfinal TableRecordReference parentRef = TableRecordReference.of(getTable_ID(), getRecord_ID());\n+\t\tdocumentCollectionService.duplicateTabRowInTrx(parentRef, tableRecordReference, getProcessInfo().getAdWindowId());\n+\t\treturn MSG_OK;\n+\t}\n+\n+\t@Override\n+\tpublic void flush()\n+\t{\n+\n+\t}\n+\n+\t@Override\n+\tpublic boolean isAllowThreadInherited()\n+\t{\n+\t\treturn false;\n+\t}\n+\n+\t@Override\n+\tpublic ProcessPreconditionsResolution checkPreconditionsApplicable(final @NonNull IProcessPreconditionsContext context)\n+\t{\n+\t\tif (context.getAdTabId() == null)\n+\t\t{\n+\t\t\treturn ProcessPreconditionsResolution.rejectWithInternalReason(\"No row(s) from a tab selected.\");\n+\t\t}\n+\n+\t\t//making sure only one row is selected at a time\n+\t\tif (context.getSelectedIncludedRecords().size() != 1)\n+\t\t{\n+\t\t\treturn ProcessPreconditionsResolution.rejectWithInternalReason(\"More than one row selected.\");", "originalCommit": "b64daf5920d86def97d3aa96e7420181ea5888ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA3MDU4OQ==", "url": "https://github.com/metasfresh/metasfresh/pull/6911#discussion_r451070589", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tTableRecordReference ref = new ArrayList<TableRecordReference>(TableRecordReference.ofSet(context.getSelectedIncludedRecords())).get(0);\n          \n          \n            \n            \t\tfinal TableRecordReference ref = CollectionUtils.singleElement(getProcessInfo().getSelectedIncludedRecords());", "author": "metas-ts", "createdAt": "2020-07-07T18:44:46Z", "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/process/WEBUI_CloneLine.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * #%L\n+ * metasfresh-webui-api\n+ * %%\n+ * Copyright (C) 2020 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+package de.metas.ui.web.process;\n+\n+import de.metas.process.IProcessPrecondition;\n+import de.metas.process.IProcessPreconditionsContext;\n+import de.metas.process.JavaProcess;\n+import de.metas.process.ProcessPreconditionsResolution;\n+import de.metas.ui.web.window.model.DocumentCollection;\n+import lombok.NonNull;\n+import org.adempiere.model.CopyRecordFactory;\n+import org.adempiere.util.lang.impl.TableRecordReference;\n+import org.compiere.SpringContextHolder;\n+\n+import javax.annotation.Nullable;\n+import java.util.ArrayList;\n+\n+public class WEBUI_CloneLine extends JavaProcess implements IProcessPrecondition\n+{\n+\tDocumentCollection documentCollectionService = SpringContextHolder.instance.getBean(DocumentCollection.class);\n+\n+\t@Nullable\n+\t@Override\n+\tprotected String doIt() throws Exception\n+\t{\n+\t\tfinal TableRecordReference tableRecordReference = new ArrayList<TableRecordReference>(TableRecordReference.ofSet(getProcessInfo().getSelectedIncludedRecords())).get(0);\n+\t\tfinal TableRecordReference parentRef = TableRecordReference.of(getTable_ID(), getRecord_ID());\n+\t\tdocumentCollectionService.duplicateTabRowInTrx(parentRef, tableRecordReference, getProcessInfo().getAdWindowId());\n+\t\treturn MSG_OK;\n+\t}\n+\n+\t@Override\n+\tpublic void flush()\n+\t{\n+\n+\t}\n+\n+\t@Override\n+\tpublic boolean isAllowThreadInherited()\n+\t{\n+\t\treturn false;\n+\t}\n+\n+\t@Override\n+\tpublic ProcessPreconditionsResolution checkPreconditionsApplicable(final @NonNull IProcessPreconditionsContext context)\n+\t{\n+\t\tif (context.getAdTabId() == null)\n+\t\t{\n+\t\t\treturn ProcessPreconditionsResolution.rejectWithInternalReason(\"No row(s) from a tab selected.\");\n+\t\t}\n+\n+\t\t//making sure only one row is selected at a time\n+\t\tif (context.getSelectedIncludedRecords().size() != 1)\n+\t\t{\n+\t\t\treturn ProcessPreconditionsResolution.rejectWithInternalReason(\"More than one row selected.\");\n+\t\t}\n+\n+\t\tTableRecordReference ref = new ArrayList<TableRecordReference>(TableRecordReference.ofSet(context.getSelectedIncludedRecords())).get(0);", "originalCommit": "b64daf5920d86def97d3aa96e7420181ea5888ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA3NDUwOA==", "url": "https://github.com/metasfresh/metasfresh/pull/6911#discussion_r451074508", "bodyText": "with respect to\n\nOBS: Enabled copyrecordfactory for salesorderline to be able to test it on at least a tab. (In the future this can be enabled for more).\n\nWhy wait for the future? Suggestion:\n\nfind the usages of CopyRecordFactory.enableForTableName.\nif the factory is enable for a parent (e.g. C_Order or DD_Order) then also add a second line there to enable it also for the line", "author": "metas-ts", "createdAt": "2020-07-07T18:52:23Z", "path": "backend/de.metas.salescandidate.base/src/main/java/de/metas/ordercandidate/modelvalidator/C_OrderLine.java", "diffHunk": "@@ -39,6 +40,13 @@\n @Component\n public class C_OrderLine\n {\n+\n+\t@Init\n+\tpublic void init()\n+\t{\n+\t\tCopyRecordFactory.enableForTableName(I_C_OrderLine.Table_Name);", "originalCommit": "b64daf5920d86def97d3aa96e7420181ea5888ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "84d65b3b0badd6c366742304ed27c3940b5eb496", "url": "https://github.com/metasfresh/metasfresh/commit/84d65b3b0badd6c366742304ed27c3940b5eb496", "message": "#1253 Enabled copyrecordfactory for more tables & small refractorings.", "committedDate": "2020-07-08T08:13:41Z", "type": "commit"}]}