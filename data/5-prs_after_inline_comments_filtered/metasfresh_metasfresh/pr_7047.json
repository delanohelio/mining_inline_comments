{"pr_number": 7047, "pr_title": "Gh7012 receipt schedule adj", "pr_createdAt": "2020-07-22T12:06:59Z", "pr_url": "https://github.com/metasfresh/metasfresh/pull/7047", "timeline": [{"oid": "aa4486ed857a7889cc0e1d490d135414d90c85dc", "url": "https://github.com/metasfresh/metasfresh/commit/aa4486ed857a7889cc0e1d490d135414d90c85dc", "message": "extending the json-pojos; about to add tables and stuff", "committedDate": "2020-07-15T12:45:15Z", "type": "commit"}, {"oid": "8559e4ab4e7b14334baa1a1034dae25500867ac6", "url": "https://github.com/metasfresh/metasfresh/commit/8559e4ab4e7b14334baa1a1034dae25500867ac6", "message": "implement big part of shipment schedule exporting\n\nTODO\n* unit tests for ShipmentCandidateExporter and ShipmentScheduleAuditRepository\n* MIs, ErrorMessages etc to prevent fiddling with exported shipment schedules\n* dev-test;\n* also see & coordinante what's missing\n\n#7012", "committedDate": "2020-07-16T05:27:22Z", "type": "commit"}, {"oid": "c3c1c64de4a653081a076ed48b93e5ebca206de7", "url": "https://github.com/metasfresh/metasfresh/commit/c3c1c64de4a653081a076ed48b93e5ebca206de7", "message": "add \"Export\" fields to shipment schedule window\n\nTODO\n* unit tests for ShipmentCandidateExporter and ShipmentScheduleAuditRepository\n* MIs, ErrorMessages etc to prevent fiddling with exported shipment schedules\n* dev-test;\n* also see & coordinante what's missing\n\n#7012", "committedDate": "2020-07-16T06:33:04Z", "type": "commit"}, {"oid": "dc22d49856d91b413e6377bf96df4158107171cf", "url": "https://github.com/metasfresh/metasfresh/commit/dc22d49856d91b413e6377bf96df4158107171cf", "message": "work on ShipmentCandidateExporterTest\n\nTODO\n* unit tests for ShipmentCandidateExporter\n* MIs, ErrorMessages etc to prevent fiddling with exported shipment schedules\n* dev-test;\n* also see & coordinate what's missing\n\n#7012", "committedDate": "2020-07-16T14:43:40Z", "type": "commit"}, {"oid": "74e5d4c02bff5ece968f3f11630638af955bbb16", "url": "https://github.com/metasfresh/metasfresh/commit/74e5d4c02bff5ece968f3f11630638af955bbb16", "message": "#7012 New Shipment Disposition Window.", "committedDate": "2020-07-16T15:48:25Z", "type": "commit"}, {"oid": "60fb7e2cf009ba38eb503a8f3dbd976ab19c7ab3", "url": "https://github.com/metasfresh/metasfresh/commit/60fb7e2cf009ba38eb503a8f3dbd976ab19c7ab3", "message": "Merge remote-tracking branch 'origin/gh7012_shipmentschedule_rest_api' into gh7012_shipmentschedule_rest_api", "committedDate": "2020-07-16T15:49:27Z", "type": "commit"}, {"oid": "36d74a9696505003e18c56c51b6a7302f5fbc684", "url": "https://github.com/metasfresh/metasfresh/commit/36d74a9696505003e18c56c51b6a7302f5fbc684", "message": "#7012 Removed script belonging to private repo.", "committedDate": "2020-07-16T15:59:25Z", "type": "commit"}, {"oid": "90e47bec1b37965372804d77655f41897d491b17", "url": "https://github.com/metasfresh/metasfresh/commit/90e47bec1b37965372804d77655f41897d491b17", "message": "finish ShipmentCandidateExporterTest and add another export status\n\nTODO\n* MIs, ErrorMessages etc to prevent fiddling with exported shipment schedules\n* dev-test;\n* also see & coordinate what's missing\n\n#7012", "committedDate": "2020-07-16T17:46:50Z", "type": "commit"}, {"oid": "b92e46a89ac043f563b0b68ecfac650be3bc1edf", "url": "https://github.com/metasfresh/metasfresh/commit/b92e46a89ac043f563b0b68ecfac650be3bc1edf", "message": "Merge branch 'master' into gh7012_shipmentschedule_rest_api", "committedDate": "2020-07-16T17:47:36Z", "type": "commit"}, {"oid": "f34de60e0533465b15e1feca4dff82e397b0e190", "url": "https://github.com/metasfresh/metasfresh/commit/f34de60e0533465b15e1feca4dff82e397b0e190", "message": "create filemaker-pojos so we can read&write XML\n\nTODO\n* MIs, ErrorMessages etc to prevent fiddling with exported shipment schedules\n* dev-test;\n* also see & coordinate what's missing\n\n#7012", "committedDate": "2020-07-16T20:03:03Z", "type": "commit"}, {"oid": "d15574ba7ad56a850339d9edde38c23025d4f99f", "url": "https://github.com/metasfresh/metasfresh/commit/d15574ba7ad56a850339d9edde38c23025d4f99f", "message": "minor fixes\n\nTODO\n* MIs, ErrorMessages etc to prevent fiddling with exported shipment schedules\n* dev-test;\n* also see & coordinate what's missing\n\n#7012", "committedDate": "2020-07-16T20:09:07Z", "type": "commit"}, {"oid": "9d11fefe21a1cb3729b3e261d950f409a42163fa", "url": "https://github.com/metasfresh/metasfresh/commit/9d11fefe21a1cb3729b3e261d950f409a42163fa", "message": "minor fixes\n\nTODO\n* MIs, ErrorMessages etc to prevent fiddling with exported shipment schedules\n* dev-test;\n* also see & coordinate what's missing\n\n#7012", "committedDate": "2020-07-16T20:09:27Z", "type": "commit"}, {"oid": "15bd7bb9186396b3184e361aba995333295723e3", "url": "https://github.com/metasfresh/metasfresh/commit/15bd7bb9186396b3184e361aba995333295723e3", "message": "add additional exportstatus \"don't export\"\n\nTODO\n* MIs, ErrorMessages etc to prevent fiddling with exported shipment schedules\n* dev-test;\n* also see & coordinate what's missing\n\n#7012", "committedDate": "2020-07-17T05:20:07Z", "type": "commit"}, {"oid": "3f5689667cb57af7475b563d4ebc10f5a8b7354d", "url": "https://github.com/metasfresh/metasfresh/commit/3f5689667cb57af7475b563d4ebc10f5a8b7354d", "message": "add additional exportstatus \"don't export\"\n\nTODO\n* MIs, ErrorMessages etc to prevent fiddling with exported shipment schedules\n* dev-test;\n* also see & coordinate what's missing\n\n#7012", "committedDate": "2020-07-17T05:22:22Z", "type": "commit"}, {"oid": "8e1e8d5e6d1a8b47745f50d031647da8153d1a9b", "url": "https://github.com/metasfresh/metasfresh/commit/8e1e8d5e6d1a8b47745f50d031647da8153d1a9b", "message": "go at another enforcer dependency convergence error\n\nTODO\n* MIs, ErrorMessages etc to prevent fiddling with exported shipment schedules\n* dev-test;\n* also see & coordinate what's missing\n\n#7012", "committedDate": "2020-07-17T05:35:49Z", "type": "commit"}, {"oid": "ace3d762c49e58c6a691b35438c23cc661a029eb", "url": "https://github.com/metasfresh/metasfresh/commit/ace3d762c49e58c6a691b35438c23cc661a029eb", "message": "`Picking Terminal V2`: Add process for picking and packing in 1 step (#6950)\n\n(cherry picked from commit c03f7d23b7750342c69faa9f1d9db510baebab42)", "committedDate": "2020-07-17T10:53:38Z", "type": "commit"}, {"oid": "d436fcf0e2e98661e27b9f8c647be0db9850f72d", "url": "https://github.com/metasfresh/metasfresh/commit/d436fcf0e2e98661e27b9f8c647be0db9850f72d", "message": "ProductsToPickViewFactory: Inject the constructor via Spring instead of SpringContextHolder (#6970)\n\nhttps://github.com/metasfresh/metasfresh/issues/6949\n(cherry picked from commit 9d6fda62f735653016943d0e910dbf8cc7614729)", "committedDate": "2020-07-17T10:54:33Z", "type": "commit"}, {"oid": "3f686ab57641068ca66011f58c65c23589d29c64", "url": "https://github.com/metasfresh/metasfresh/commit/3f686ab57641068ca66011f58c65c23589d29c64", "message": "Picking Terminal V2: Pick&Pack: Skip rows with qty 0 (#7022)\n\n(cherry picked from commit fd95e030baeb4b52c1ef80403a5b894149da9fcb)", "committedDate": "2020-07-17T10:54:44Z", "type": "commit"}, {"oid": "ea0102a795b7a1ee9abdc19c5890e4aacb44c51a", "url": "https://github.com/metasfresh/metasfresh/commit/ea0102a795b7a1ee9abdc19c5890e4aacb44c51a", "message": "Fixes after cherrypicks\n\nhttps://github.com/metasfresh/metasfresh/issues/7021", "committedDate": "2020-07-17T11:02:19Z", "type": "commit"}, {"oid": "29ff96e5b3ff2b43738840e49a1e864feb39f370", "url": "https://github.com/metasfresh/metasfresh/commit/29ff96e5b3ff2b43738840e49a1e864feb39f370", "message": "work on camel testing\n\nTODO\n* MIs, ErrorMessages etc to prevent fiddling with exported shipment schedules\n* dev-test;\n* also see & coordinate what's missing\n\n#7012", "committedDate": "2020-07-17T11:23:14Z", "type": "commit"}, {"oid": "64a9a3d1a5c821fc620b184f581ea22eac55f943", "url": "https://github.com/metasfresh/metasfresh/commit/64a9a3d1a5c821fc620b184f581ea22eac55f943", "message": "Updated ReleaseNotes.md\n\nadded issues", "committedDate": "2020-07-17T11:36:05Z", "type": "commit"}, {"oid": "fbdfa70cebe0968e8460a18facbf30125c706202", "url": "https://github.com/metasfresh/metasfresh/commit/fbdfa70cebe0968e8460a18facbf30125c706202", "message": "minor fix: don't export scheds with qtyToDeliver<=0\n\nTODO\n* MIs, ErrorMessages etc to prevent fiddling with exported shipment schedules\n* dev-test;\n* also see & coordinate what's missing\n\n#7012", "committedDate": "2020-07-17T11:45:22Z", "type": "commit"}, {"oid": "6170cdb7206f0445be1782c3d7969a1f3e3fdf01", "url": "https://github.com/metasfresh/metasfresh/commit/6170cdb7206f0445be1782c3d7969a1f3e3fdf01", "message": "Merge remote-tracking branch 'origin/happy_flower_hotfix'", "committedDate": "2020-07-17T11:46:31Z", "type": "commit"}, {"oid": "4886a6a39af74b64ac7b6f8e12ffe15050586d7e", "url": "https://github.com/metasfresh/metasfresh/commit/4886a6a39af74b64ac7b6f8e12ffe15050586d7e", "message": "Merge branch 'master' into gh7012_shipmentschedule_rest_api\n\n# Conflicts:\n#\tbackend/de.metas.swat/de.metas.swat.base/src/main/java-gen/de/metas/inoutcandidate/model/X_M_Packageable_V.java", "committedDate": "2020-07-17T11:51:27Z", "type": "commit"}, {"oid": "d68453e0df1dde536c5fca8fd9413aa52a37bb7e", "url": "https://github.com/metasfresh/metasfresh/commit/d68453e0df1dde536c5fca8fd9413aa52a37bb7e", "message": "Update WEBUI_M_HU_ReturnFromCustomer.java (#7028)", "committedDate": "2020-07-17T15:22:01Z", "type": "commit"}, {"oid": "03061dde99a15e1fac0e9cc1500af35d9476208e", "url": "https://github.com/metasfresh/metasfresh/commit/03061dde99a15e1fac0e9cc1500af35d9476208e", "message": "div. improvements\n\n* Use jackson-stuff in our camel route\n* Send feedback to metasfresh\n* Update audit records using feedback\n* convert JSON to XML\n* simplify audit records in metasfresh\n* Also\n  * CacheInvalidateMultiRequest with better support for RepoIdAwares\n\n  #7012", "committedDate": "2020-07-17T20:27:59Z", "type": "commit"}, {"oid": "85933c019eab8190d2d3fde4dad38f583faea45a", "url": "https://github.com/metasfresh/metasfresh/commit/85933c019eab8190d2d3fde4dad38f583faea45a", "message": "fixes\n\n  #7012", "committedDate": "2020-07-17T22:08:57Z", "type": "commit"}, {"oid": "8d47a0458ce24c328adc248876077afba26887b5", "url": "https://github.com/metasfresh/metasfresh/commit/8d47a0458ce24c328adc248876077afba26887b5", "message": "fixes\n\n#7012", "committedDate": "2020-07-17T22:52:22Z", "type": "commit"}, {"oid": "0e307cf4a26b327ef790589f3d74c8d72dc74268", "url": "https://github.com/metasfresh/metasfresh/commit/0e307cf4a26b327ef790589f3d74c8d72dc74268", "message": "attempt to fix criculary error handling + dependency conversion errors\n\n#7012", "committedDate": "2020-07-17T23:05:47Z", "type": "commit"}, {"oid": "576362ed1ac79c801e538c1f6c2d1704b923b32e", "url": "https://github.com/metasfresh/metasfresh/commit/576362ed1ac79c801e538c1f6c2d1704b923b32e", "message": "minor\n\n#7012", "committedDate": "2020-07-17T23:09:07Z", "type": "commit"}, {"oid": "5d219a6bd51e658c494a3ad9de866a5281d7a061", "url": "https://github.com/metasfresh/metasfresh/commit/5d219a6bd51e658c494a3ad9de866a5281d7a061", "message": "minor\n\n#7012", "committedDate": "2020-07-17T23:09:31Z", "type": "commit"}, {"oid": "f9a93d57a6c7a62648c7000c47072ed2960eddbb", "url": "https://github.com/metasfresh/metasfresh/commit/f9a93d57a6c7a62648c7000c47072ed2960eddbb", "message": "work on fixing tests\n\n#7012", "committedDate": "2020-07-17T23:34:26Z", "type": "commit"}, {"oid": "74ce41074d44660919387be6ef2bb8e798a58817", "url": "https://github.com/metasfresh/metasfresh/commit/74ce41074d44660919387be6ef2bb8e798a58817", "message": "attempt to fix dependency conversion errors\n#7012", "committedDate": "2020-07-17T23:42:55Z", "type": "commit"}, {"oid": "d04906d2f3ca24b46a7aedb621dfa1863547d07c", "url": "https://github.com/metasfresh/metasfresh/commit/d04906d2f3ca24b46a7aedb621dfa1863547d07c", "message": "rename/more classes and modules; meekly start with receipt-candidates\n\n#7012", "committedDate": "2020-07-18T00:28:53Z", "type": "commit"}, {"oid": "2587580a2d2e3dc10a6a0329f369113e49aa6e96", "url": "https://github.com/metasfresh/metasfresh/commit/2587580a2d2e3dc10a6a0329f369113e49aa6e96", "message": "attempt to fix dependency conversion errors\n\n#7012", "committedDate": "2020-07-18T00:37:16Z", "type": "commit"}, {"oid": "188c25b01d6fded132099f8d631bbfb819284e54", "url": "https://github.com/metasfresh/metasfresh/commit/188c25b01d6fded132099f8d631bbfb819284e54", "message": "Add ExportStatus and CanBeExportedFrom for M_ReceiptSchedule\n\n#7012", "committedDate": "2020-07-19T19:37:20Z", "type": "commit"}, {"oid": "e2d706f673cffd2bb0e101738b7dfa44ef90cfaf", "url": "https://github.com/metasfresh/metasfresh/commit/e2d706f673cffd2bb0e101738b7dfa44ef90cfaf", "message": "Starting with Receipt Candidate API\n\n* move ShipmentScheduleId class\n* extract common APIExportAudit and APIExportAuditRepository\n* start receipt candidate code (similar to shipment candidate, but e.g. different classes)\n\n#7012", "committedDate": "2020-07-20T04:45:08Z", "type": "commit"}, {"oid": "563b05125a64f0540b05c4fe6eed74a3d5b3a058", "url": "https://github.com/metasfresh/metasfresh/commit/563b05125a64f0540b05c4fe6eed74a3d5b3a058", "message": "fix module name\n\n#7012", "committedDate": "2020-07-20T06:06:26Z", "type": "commit"}, {"oid": "a336d32f03b955765192a2ebc9cf780c81797356", "url": "https://github.com/metasfresh/metasfresh/commit/a336d32f03b955765192a2ebc9cf780c81797356", "message": "Starting with Receipt Candidate API\n\n* pom.xml fix typo in exclusion\n* start implementing the camel part as well\n\n#7012", "committedDate": "2020-07-20T06:29:21Z", "type": "commit"}, {"oid": "04fa43b311b64e03dc7b2c61ee452c5273aefe50", "url": "https://github.com/metasfresh/metasfresh/commit/04fa43b311b64e03dc7b2c61ee452c5273aefe50", "message": "Upgrade lodash due to security advisory (#7031)\n\nCo-authored-by: Petrica Nanca <petrica.nanca@metasfresh.com>", "committedDate": "2020-07-20T06:53:18Z", "type": "commit"}, {"oid": "82a9ea34801586a3732c6bdc05bde7df965840ea", "url": "https://github.com/metasfresh/metasfresh/commit/82a9ea34801586a3732c6bdc05bde7df965840ea", "message": "Add extra checks for clearing the filter (#7032)\n\nCo-authored-by: Petrica Nanca <petrica.nanca@metasfresh.com>", "committedDate": "2020-07-20T07:36:42Z", "type": "commit"}, {"oid": "b0f8498d87302a0216df1a79dc8b1a805e29e842", "url": "https://github.com/metasfresh/metasfresh/commit/b0f8498d87302a0216df1a79dc8b1a805e29e842", "message": "solve another depdendency conversion error\n\n#7012", "committedDate": "2020-07-20T08:35:26Z", "type": "commit"}, {"oid": "e34ec9ad4deb18386161247df292a89d0221cba7", "url": "https://github.com/metasfresh/metasfresh/commit/e34ec9ad4deb18386161247df292a89d0221cba7", "message": "solve after-refactor-error\n\n#7012", "committedDate": "2020-07-20T09:29:44Z", "type": "commit"}, {"oid": "8dea5787a72988cfdd26208bb7239d7ec0c0b1f2", "url": "https://github.com/metasfresh/metasfresh/commit/8dea5787a72988cfdd26208bb7239d7ec0c0b1f2", "message": "attempt to solve dependency convergence error\n\n#7012", "committedDate": "2020-07-20T10:57:14Z", "type": "commit"}, {"oid": "c28a60d5cf51e0226cf810da20e56c845bf17212", "url": "https://github.com/metasfresh/metasfresh/commit/c28a60d5cf51e0226cf810da20e56c845bf17212", "message": "work on json-XML-mapping for receipt schedules\n\n#7012", "committedDate": "2020-07-20T11:46:42Z", "type": "commit"}, {"oid": "931819d95bc6b07362b5f851bf1625b17dc15327", "url": "https://github.com/metasfresh/metasfresh/commit/931819d95bc6b07362b5f851bf1625b17dc15327", "message": "Merge branch 'master' into gh7012_shipmentschedule_rest_api", "committedDate": "2020-07-20T12:36:58Z", "type": "commit"}, {"oid": "048dfb28ef222fdfd188efb686402277d6927635", "url": "https://github.com/metasfresh/metasfresh/commit/048dfb28ef222fdfd188efb686402277d6927635", "message": "fix docker image name in build descr\n\n#7012", "committedDate": "2020-07-20T13:21:59Z", "type": "commit"}, {"oid": "7e5215a0ecf6f3fae439d81334359ecc2d1bdc47", "url": "https://github.com/metasfresh/metasfresh/commit/7e5215a0ecf6f3fae439d81334359ecc2d1bdc47", "message": "bunch of finetuning\n\n#7012", "committedDate": "2020-07-20T16:21:30Z", "type": "commit"}, {"oid": "308821bcb76421fa46362843cf112a846c829e1c", "url": "https://github.com/metasfresh/metasfresh/commit/308821bcb76421fa46362843cf112a846c829e1c", "message": "fix NPE\n\n#7012", "committedDate": "2020-07-20T16:47:08Z", "type": "commit"}, {"oid": "e024040a5ddb2150099e8d2ccb4d1f8636188a09", "url": "https://github.com/metasfresh/metasfresh/commit/e024040a5ddb2150099e8d2ccb4d1f8636188a09", "message": "improve logging, do a bit of deduplication\n\n#7012", "committedDate": "2020-07-20T17:43:20Z", "type": "commit"}, {"oid": "ac80d67581c003f51f20170df3a4bca092b5fa85", "url": "https://github.com/metasfresh/metasfresh/commit/ac80d67581c003f51f20170df3a4bca092b5fa85", "message": "minor fix\n\n#7012", "committedDate": "2020-07-20T18:22:25Z", "type": "commit"}, {"oid": "9f258523a55967695278c6cf0d5b4d8485d4d16c", "url": "https://github.com/metasfresh/metasfresh/commit/9f258523a55967695278c6cf0d5b4d8485d4d16c", "message": "improve route-ids\n\n#7012", "committedDate": "2020-07-20T18:27:11Z", "type": "commit"}, {"oid": "f368730a5ddedab9582e8621bf5940147bef500b", "url": "https://github.com/metasfresh/metasfresh/commit/f368730a5ddedab9582e8621bf5940147bef500b", "message": "minor tweaks\n\n#7012", "committedDate": "2020-07-20T18:35:17Z", "type": "commit"}, {"oid": "82c795bd11decaf8ec9c5fcf71bfde080bcd46a3", "url": "https://github.com/metasfresh/metasfresh/commit/82c795bd11decaf8ec9c5fcf71bfde080bcd46a3", "message": "minor tweaks\n\n#7012", "committedDate": "2020-07-20T19:06:57Z", "type": "commit"}, {"oid": "ba9bb064c5c7109b7415977f6d14eccad4f1db94", "url": "https://github.com/metasfresh/metasfresh/commit/ba9bb064c5c7109b7415977f6d14eccad4f1db94", "message": "fix problem wrt attribute set instance\n\n#7012", "committedDate": "2020-07-20T19:25:00Z", "type": "commit"}, {"oid": "9367d87d51d2be4d848b34dc11fe3a30d7f00a1b", "url": "https://github.com/metasfresh/metasfresh/commit/9367d87d51d2be4d848b34dc11fe3a30d7f00a1b", "message": "fix(SEPA Export): schemaLocation (#7034)", "committedDate": "2020-07-20T20:02:50Z", "type": "commit"}, {"oid": "4cd3c41dc3f3d3547b27356fb65aa8fdb57b9a39", "url": "https://github.com/metasfresh/metasfresh/commit/4cd3c41dc3f3d3547b27356fb65aa8fdb57b9a39", "message": "add unit test\n\n#7012", "committedDate": "2020-07-20T20:06:56Z", "type": "commit"}, {"oid": "a7f8ae30438659dbdc9f7e8c4fde4b0d13d10179", "url": "https://github.com/metasfresh/metasfresh/commit/a7f8ae30438659dbdc9f7e8c4fde4b0d13d10179", "message": "- use included view from `listHandler` if it exists (#7035)", "committedDate": "2020-07-20T23:08:53Z", "type": "commit"}, {"oid": "c65a22181521c8d661c9709df9264efb6b2f411c", "url": "https://github.com/metasfresh/metasfresh/commit/c65a22181521c8d661c9709df9264efb6b2f411c", "message": "do not retry in genereal, but only when uploading the result\n\n#7012", "committedDate": "2020-07-21T05:17:20Z", "type": "commit"}, {"oid": "7da5adf1bc3101abd58d3331f34b72eeee062c3d", "url": "https://github.com/metasfresh/metasfresh/commit/7da5adf1bc3101abd58d3331f34b72eeee062c3d", "message": "fix feedback-routes\n\n#7012", "committedDate": "2020-07-21T05:48:36Z", "type": "commit"}, {"oid": "0be2b946896c8ce1be6017a3d391ffb84ee36e65", "url": "https://github.com/metasfresh/metasfresh/commit/0be2b946896c8ce1be6017a3d391ffb84ee36e65", "message": "hotfix: filter does not work in \"return HUs to customer\" view (#7033)", "committedDate": "2020-07-21T05:58:01Z", "type": "commit"}, {"oid": "3f66f499c04228f43c0911e3b03513536ecf04c6", "url": "https://github.com/metasfresh/metasfresh/commit/3f66f499c04228f43c0911e3b03513536ecf04c6", "message": "fix API-Export list value\n\n#7012", "committedDate": "2020-07-21T06:04:11Z", "type": "commit"}, {"oid": "eefdd36998f090a3fadc26b6c9bc4c28b6ac1987", "url": "https://github.com/metasfresh/metasfresh/commit/eefdd36998f090a3fadc26b6c9bc4c28b6ac1987", "message": "Revert \"hotfix: filter does not work in \"return HUs to customer\" view (#7033)\"\n\nThis reverts commit 0be2b946", "committedDate": "2020-07-21T06:09:42Z", "type": "commit"}, {"oid": "7307ce294fa809c7d6d16cd0d44b5c32f620a5ab", "url": "https://github.com/metasfresh/metasfresh/commit/7307ce294fa809c7d6d16cd0d44b5c32f620a5ab", "message": "Merge remote-tracking branch 'origin/master' into release", "committedDate": "2020-07-21T07:08:47Z", "type": "commit"}, {"oid": "33a3f380d03cda7d023bd8ec43e8af385bd39da9", "url": "https://github.com/metasfresh/metasfresh/commit/33a3f380d03cda7d023bd8ec43e8af385bd39da9", "message": "Merge branch 'release' into gh7012_shipmentschedule_rest_api", "committedDate": "2020-07-21T11:26:29Z", "type": "commit"}, {"oid": "002757cf92d0d8509dc3fd9350c881985e3bbf64", "url": "https://github.com/metasfresh/metasfresh/commit/002757cf92d0d8509dc3fd9350c881985e3bbf64", "message": "smaller fixes during review\n\nhttps://github.com/metasfresh/metasfresh/issues/7012", "committedDate": "2020-07-21T11:27:43Z", "type": "commit"}, {"oid": "052756af305c7f3482ffb9aba3cf068a469f91e3", "url": "https://github.com/metasfresh/metasfresh/commit/052756af305c7f3482ffb9aba3cf068a469f91e3", "message": "finally managing working tests\n\nhttps://github.com/metasfresh/metasfresh/issues/7012", "committedDate": "2020-07-21T19:43:45Z", "type": "commit"}, {"oid": "e2e8a81c4c21156689c9d8291325e9f3c4d40051", "url": "https://github.com/metasfresh/metasfresh/commit/e2e8a81c4c21156689c9d8291325e9f3c4d40051", "message": "#7012 Initial commit.", "committedDate": "2020-07-22T10:11:11Z", "type": "commit"}, {"oid": "c91841a9eb35d6609c0af37619bd23efcd172f22", "url": "https://github.com/metasfresh/metasfresh/commit/c91841a9eb35d6609c0af37619bd23efcd172f22", "message": "Revert \"#7012 Initial commit.\"\n\nThis reverts commit e2e8a81c", "committedDate": "2020-07-22T10:11:40Z", "type": "commit"}, {"oid": "c664dc6da19eda2e3d593163221a9a07d7b99ec5", "url": "https://github.com/metasfresh/metasfresh/commit/c664dc6da19eda2e3d593163221a9a07d7b99ec5", "message": "#7012 Initial commit.", "committedDate": "2020-07-22T10:12:35Z", "type": "commit"}, {"oid": "3918bc9fb54084d2b421669e4882c05b73cbb7a1", "url": "https://github.com/metasfresh/metasfresh/commit/3918bc9fb54084d2b421669e4882c05b73cbb7a1", "message": "#7012 Second commit", "committedDate": "2020-07-22T10:15:30Z", "type": "commit"}, {"oid": "cc13e8989ce94e620802e16398eb7a830605cf9a", "url": "https://github.com/metasfresh/metasfresh/commit/cc13e8989ce94e620802e16398eb7a830605cf9a", "message": "#7012 Receipt Schedule & Purchase Order adjustments.\n   - can no longer reactivate or void purchase order with exported receipt schedules.\n   - new process to change the export status of receipt schedules.", "committedDate": "2020-07-22T11:10:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg3NzQ5NQ==", "url": "https://github.com/metasfresh/metasfresh/pull/7047#discussion_r458877495", "bodyText": "useless comments", "author": "metas-ts", "createdAt": "2020-07-22T15:25:05Z", "path": "backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/inoutcandidate/api/impl/ReceiptSchedulePA.java", "diffHunk": "@@ -0,0 +1,190 @@\n+/*\n+ * #%L\n+ * de.metas.swat.base\n+ * %%\n+ * Copyright (C) 2020 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+package de.metas.inoutcandidate.api.impl;\n+\n+import com.google.common.collect.ImmutableSet;\n+import de.metas.cache.CacheMgt;\n+import de.metas.cache.model.CacheInvalidateMultiRequest;\n+import de.metas.inoutcandidate.ReceiptScheduleId;\n+import de.metas.inoutcandidate.api.IReceiptSchedulePA;\n+import de.metas.inoutcandidate.exportaudit.APIExportStatus;\n+import de.metas.inoutcandidate.model.I_M_ReceiptSchedule;\n+import de.metas.order.OrderId;\n+import de.metas.process.PInstanceId;\n+import de.metas.util.Services;\n+import lombok.NonNull;\n+import org.adempiere.ad.dao.IQueryBL;\n+import org.adempiere.ad.dao.IQueryBuilder;\n+import org.adempiere.ad.dao.IQueryFilter;\n+import org.adempiere.ad.dao.impl.ModelColumnNameValue;\n+import org.adempiere.ad.trx.api.ITrx;\n+\n+import java.util.Properties;\n+\n+public class ReceiptSchedulePA implements IReceiptSchedulePA\n+{\n+\tprivate final IQueryBL queryBL = Services.get(IQueryBL.class);\n+\n+\t/**\n+\t * When mass cache invalidation, above this threshold we will invalidate ALL shipment schedule records instead of particular IDS\n+\t */\n+\tprivate static final int CACHE_INVALIDATE_ALL_THRESHOLD = 200;\n+\n+\t@Override\n+\tpublic IQueryBuilder<I_M_ReceiptSchedule> createQueryForShipmentScheduleSelection(final Properties ctx, final IQueryFilter<I_M_ReceiptSchedule> userSelectionFilter)\n+\t{\n+\t\tfinal IQueryBuilder<I_M_ReceiptSchedule> queryBuilder = queryBL\n+\t\t\t\t.createQueryBuilder(I_M_ReceiptSchedule.class, ctx, ITrx.TRXNAME_None)\n+\t\t\t\t.filter(userSelectionFilter)\n+\t\t\t\t.addEqualsFilter(I_M_ReceiptSchedule.COLUMNNAME_Processed, false)\n+\t\t\t\t.addOnlyActiveRecordsFilter()\n+\t\t\t\t.addOnlyContextClient();\n+\n+\t\treturn queryBuilder;\n+\t}\n+\n+\t@Override\n+\tpublic boolean existsExportedReceiptScheduleForOrder(final @NonNull OrderId orderId)\n+\t{\n+\t\treturn queryBL\n+\t\t\t\t.createQueryBuilder(I_M_ReceiptSchedule.class)\n+\t\t\t\t.addOnlyActiveRecordsFilter()\n+\t\t\t\t.addEqualsFilter(I_M_ReceiptSchedule.COLUMNNAME_C_Order_ID, orderId)\n+\t\t\t\t.addEqualsFilter(I_M_ReceiptSchedule.COLUMNNAME_Processed, false)\n+\t\t\t\t.addInArrayFilter(I_M_ReceiptSchedule.COLUMNNAME_ExportStatus, APIExportStatus.EXPORTED_STATES)\n+\t\t\t\t.create()\n+\t\t\t\t.anyMatch();\n+\t}\n+\n+\t@Override\n+\tpublic void updateExportStatus(final String exportStatus, final PInstanceId pinstanceId)\n+\t{\n+\t\tupdateColumnForSelection(\n+\t\t\t\tI_M_ReceiptSchedule.COLUMNNAME_ExportStatus,\n+\t\t\t\texportStatus,\n+\t\t\t\tfalse /* updateOnlyIfNull */,\n+\t\t\t\tpinstanceId\n+\t\t);\n+\t}\n+\n+\t/**\n+\t * Mass-update a given shipment schedule column.\n+\t * <p>\n+\t * If there were any changes and the invalidate parameter is on true, those shipment schedules will be invalidated.\n+\t *\n+\t * @param inoutCandidateColumnName {@link I_M_ReceiptSchedule}'s column to update\n+\t * @param value                    value to set (you can also use {@link ModelColumnNameValue})\n+\t * @param updateOnlyIfNull         if true then it will update only if column value is null (not set)\n+\t * @param selectionId              ShipmentSchedule selection (AD_PInstance_ID)\n+\t * @param trxName\n+\t */\n+\tprivate final <ValueType> void updateColumnForSelection(\n+\t\t\tfinal String inoutCandidateColumnName,\n+\t\t\tfinal ValueType value,\n+\t\t\tfinal boolean updateOnlyIfNull,\n+\t\t\tfinal PInstanceId selectionId\n+\t)\n+\t{\n+\t\t//\n+\t\t// Create the selection which we will need to update\n+\t\tfinal IQueryBuilder<I_M_ReceiptSchedule> selectionQueryBuilder = queryBL\n+\t\t\t\t.createQueryBuilder(I_M_ReceiptSchedule.class)\n+\t\t\t\t.setOnlySelection(selectionId)\n+\t\t\t\t.addEqualsFilter(I_M_ReceiptSchedule.COLUMNNAME_Processed, false) // do not touch the processed shipment schedules\n+\t\t\t\t;\n+\n+\t\tif (updateOnlyIfNull)\n+\t\t{\n+\t\t\tselectionQueryBuilder.addEqualsFilter(inoutCandidateColumnName, null);\n+\t\t}\n+\t\tfinal PInstanceId selectionToUpdateId = selectionQueryBuilder.create().createSelection();\n+\t\tif (selectionToUpdateId == null)\n+\t\t{\n+\t\t\t// nothing to update\n+\t\t\treturn;\n+\t\t}\n+\n+\t\t//\n+\t\t// Update our new selection\n+\t\tfinal int countUpdated = queryBL.createQueryBuilder(I_M_ReceiptSchedule.class)\n+\t\t\t\t.setOnlySelection(selectionToUpdateId)\n+\t\t\t\t.create()\n+\t\t\t\t.updateDirectly()\n+\t\t\t\t.addSetColumnValue(inoutCandidateColumnName, value)\n+\t\t\t\t.execute();\n+\n+\t\t//\n+\t\t// Cache invalidate\n+\t\t// We have to do this even if invalidate=false", "originalCommit": "cc13e8989ce94e620802e16398eb7a830605cf9a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg3ODAyMg==", "url": "https://github.com/metasfresh/metasfresh/pull/7047#discussion_r458878022", "bodyText": "(as written in the concept review, please go with the existing IReceiptScheduleDAO instead)", "author": "metas-ts", "createdAt": "2020-07-22T15:25:47Z", "path": "backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/inoutcandidate/api/IReceiptSchedulePA.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * #%L\n+ * de.metas.swat.base\n+ * %%\n+ * Copyright (C) 2020 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+package de.metas.inoutcandidate.api;\n+\n+import de.metas.inoutcandidate.model.I_M_ReceiptSchedule;\n+import de.metas.order.OrderId;\n+import de.metas.process.PInstanceId;\n+import de.metas.util.ISingletonService;\n+import lombok.NonNull;\n+import org.adempiere.ad.dao.IQueryBuilder;\n+import org.adempiere.ad.dao.IQueryFilter;\n+\n+import java.util.Properties;\n+\n+/**\n+ * Implementers give database access to {@link I_M_ReceiptSchedule} instances (DAO).\n+ *\n+ * @author dp\n+ */\n+\n+public interface IReceiptSchedulePA extends ISingletonService", "originalCommit": "cc13e8989ce94e620802e16398eb7a830605cf9a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg3OTA2Mg==", "url": "https://github.com/metasfresh/metasfresh/pull/7047#discussion_r458879062", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tfinal ImmutableSet<ReceiptScheduleId> shipmentScheduleIds = queryBL.createQueryBuilder(I_M_ReceiptSchedule.class)\n          \n          \n            \n            \t\t\tfinal ImmutableSet<ReceiptScheduleId> receiptScheduleIds = queryBL.createQueryBuilder(I_M_ReceiptSchedule.class)", "author": "metas-ts", "createdAt": "2020-07-22T15:27:14Z", "path": "backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/inoutcandidate/api/impl/ReceiptSchedulePA.java", "diffHunk": "@@ -0,0 +1,190 @@\n+/*\n+ * #%L\n+ * de.metas.swat.base\n+ * %%\n+ * Copyright (C) 2020 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+package de.metas.inoutcandidate.api.impl;\n+\n+import com.google.common.collect.ImmutableSet;\n+import de.metas.cache.CacheMgt;\n+import de.metas.cache.model.CacheInvalidateMultiRequest;\n+import de.metas.inoutcandidate.ReceiptScheduleId;\n+import de.metas.inoutcandidate.api.IReceiptSchedulePA;\n+import de.metas.inoutcandidate.exportaudit.APIExportStatus;\n+import de.metas.inoutcandidate.model.I_M_ReceiptSchedule;\n+import de.metas.order.OrderId;\n+import de.metas.process.PInstanceId;\n+import de.metas.util.Services;\n+import lombok.NonNull;\n+import org.adempiere.ad.dao.IQueryBL;\n+import org.adempiere.ad.dao.IQueryBuilder;\n+import org.adempiere.ad.dao.IQueryFilter;\n+import org.adempiere.ad.dao.impl.ModelColumnNameValue;\n+import org.adempiere.ad.trx.api.ITrx;\n+\n+import java.util.Properties;\n+\n+public class ReceiptSchedulePA implements IReceiptSchedulePA\n+{\n+\tprivate final IQueryBL queryBL = Services.get(IQueryBL.class);\n+\n+\t/**\n+\t * When mass cache invalidation, above this threshold we will invalidate ALL shipment schedule records instead of particular IDS\n+\t */\n+\tprivate static final int CACHE_INVALIDATE_ALL_THRESHOLD = 200;\n+\n+\t@Override\n+\tpublic IQueryBuilder<I_M_ReceiptSchedule> createQueryForShipmentScheduleSelection(final Properties ctx, final IQueryFilter<I_M_ReceiptSchedule> userSelectionFilter)\n+\t{\n+\t\tfinal IQueryBuilder<I_M_ReceiptSchedule> queryBuilder = queryBL\n+\t\t\t\t.createQueryBuilder(I_M_ReceiptSchedule.class, ctx, ITrx.TRXNAME_None)\n+\t\t\t\t.filter(userSelectionFilter)\n+\t\t\t\t.addEqualsFilter(I_M_ReceiptSchedule.COLUMNNAME_Processed, false)\n+\t\t\t\t.addOnlyActiveRecordsFilter()\n+\t\t\t\t.addOnlyContextClient();\n+\n+\t\treturn queryBuilder;\n+\t}\n+\n+\t@Override\n+\tpublic boolean existsExportedReceiptScheduleForOrder(final @NonNull OrderId orderId)\n+\t{\n+\t\treturn queryBL\n+\t\t\t\t.createQueryBuilder(I_M_ReceiptSchedule.class)\n+\t\t\t\t.addOnlyActiveRecordsFilter()\n+\t\t\t\t.addEqualsFilter(I_M_ReceiptSchedule.COLUMNNAME_C_Order_ID, orderId)\n+\t\t\t\t.addEqualsFilter(I_M_ReceiptSchedule.COLUMNNAME_Processed, false)\n+\t\t\t\t.addInArrayFilter(I_M_ReceiptSchedule.COLUMNNAME_ExportStatus, APIExportStatus.EXPORTED_STATES)\n+\t\t\t\t.create()\n+\t\t\t\t.anyMatch();\n+\t}\n+\n+\t@Override\n+\tpublic void updateExportStatus(final String exportStatus, final PInstanceId pinstanceId)\n+\t{\n+\t\tupdateColumnForSelection(\n+\t\t\t\tI_M_ReceiptSchedule.COLUMNNAME_ExportStatus,\n+\t\t\t\texportStatus,\n+\t\t\t\tfalse /* updateOnlyIfNull */,\n+\t\t\t\tpinstanceId\n+\t\t);\n+\t}\n+\n+\t/**\n+\t * Mass-update a given shipment schedule column.\n+\t * <p>\n+\t * If there were any changes and the invalidate parameter is on true, those shipment schedules will be invalidated.\n+\t *\n+\t * @param inoutCandidateColumnName {@link I_M_ReceiptSchedule}'s column to update\n+\t * @param value                    value to set (you can also use {@link ModelColumnNameValue})\n+\t * @param updateOnlyIfNull         if true then it will update only if column value is null (not set)\n+\t * @param selectionId              ShipmentSchedule selection (AD_PInstance_ID)\n+\t * @param trxName\n+\t */\n+\tprivate final <ValueType> void updateColumnForSelection(\n+\t\t\tfinal String inoutCandidateColumnName,\n+\t\t\tfinal ValueType value,\n+\t\t\tfinal boolean updateOnlyIfNull,\n+\t\t\tfinal PInstanceId selectionId\n+\t)\n+\t{\n+\t\t//\n+\t\t// Create the selection which we will need to update\n+\t\tfinal IQueryBuilder<I_M_ReceiptSchedule> selectionQueryBuilder = queryBL\n+\t\t\t\t.createQueryBuilder(I_M_ReceiptSchedule.class)\n+\t\t\t\t.setOnlySelection(selectionId)\n+\t\t\t\t.addEqualsFilter(I_M_ReceiptSchedule.COLUMNNAME_Processed, false) // do not touch the processed shipment schedules\n+\t\t\t\t;\n+\n+\t\tif (updateOnlyIfNull)\n+\t\t{\n+\t\t\tselectionQueryBuilder.addEqualsFilter(inoutCandidateColumnName, null);\n+\t\t}\n+\t\tfinal PInstanceId selectionToUpdateId = selectionQueryBuilder.create().createSelection();\n+\t\tif (selectionToUpdateId == null)\n+\t\t{\n+\t\t\t// nothing to update\n+\t\t\treturn;\n+\t\t}\n+\n+\t\t//\n+\t\t// Update our new selection\n+\t\tfinal int countUpdated = queryBL.createQueryBuilder(I_M_ReceiptSchedule.class)\n+\t\t\t\t.setOnlySelection(selectionToUpdateId)\n+\t\t\t\t.create()\n+\t\t\t\t.updateDirectly()\n+\t\t\t\t.addSetColumnValue(inoutCandidateColumnName, value)\n+\t\t\t\t.execute();\n+\n+\t\t//\n+\t\t// Cache invalidate\n+\t\t// We have to do this even if invalidate=false\n+\t\tcacheInvalidateBySelectionId(selectionToUpdateId, countUpdated);\n+\t}\n+\n+\tprivate void cacheInvalidateBySelectionId(\n+\t\t\t@NonNull final PInstanceId selectionId,\n+\t\t\tfinal long estimatedSize)\n+\t{\n+\t\tfinal CacheInvalidateMultiRequest request;\n+\t\tif (estimatedSize < 0)\n+\t\t{\n+\t\t\t// unknown estimated size\n+\t\t\trequest = CacheInvalidateMultiRequest.allRecordsForTable(I_M_ReceiptSchedule.Table_Name);\n+\t\t}\n+\t\telse if (estimatedSize == 0)\n+\t\t{\n+\t\t\t// no records\n+\t\t\t// unknown estimated size\n+\t\t\trequest = null;\n+\t\t}\n+\t\telse if (estimatedSize <= CACHE_INVALIDATE_ALL_THRESHOLD)\n+\t\t{\n+\t\t\t// relatively small amount of records\n+\t\t\t// => fetch and reset individually\n+\t\t\tfinal ImmutableSet<ReceiptScheduleId> shipmentScheduleIds = queryBL.createQueryBuilder(I_M_ReceiptSchedule.class)", "originalCommit": "cc13e8989ce94e620802e16398eb7a830605cf9a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3f4cb678f4003ebfc024a33aee53d94d9d85b314", "url": "https://github.com/metasfresh/metasfresh/commit/3f4cb678f4003ebfc024a33aee53d94d9d85b314", "message": "#7012 Deleted ReceiptSchedulePA and moved metods to DAO class.", "committedDate": "2020-07-23T07:37:12Z", "type": "commit"}, {"oid": "dfba3cc2b29f3a1a7c70527ac0533d088aec44d5", "url": "https://github.com/metasfresh/metasfresh/commit/dfba3cc2b29f3a1a7c70527ac0533d088aec44d5", "message": "#7012\n- changed usage of deleted PA class to DAO in C_Order.", "committedDate": "2020-07-23T08:09:42Z", "type": "commit"}, {"oid": "99f7d4f18279b5b3940e661bd608ab725344173d", "url": "https://github.com/metasfresh/metasfresh/commit/99f7d4f18279b5b3940e661bd608ab725344173d", "message": "Customer return not working bc HUs cannot be selected (#7040)\n\nhttps://github.com/metasfresh/metasfresh/issues/6420\n(cherry picked from commit 5be1b54beb63e7f6d3c29fa187bd2c4fb4351c2c)", "committedDate": "2020-07-23T11:37:57Z", "type": "commit"}, {"oid": "773086437a170d1804bafaea497c045e4fd078a7", "url": "https://github.com/metasfresh/metasfresh/commit/773086437a170d1804bafaea497c045e4fd078a7", "message": "Gh7012 shipmentschedule rest api (#7024)\n\nCo-authored-by: Petrica Nanca <petrica.nanca@metasfresh.com>\nCo-authored-by: Tobias Sch\u00f6neberg <tobias.schoeneberg@metasfresh.com>\nCo-authored-by: TheBestPessimist <cristian@tbp.land>\nCo-authored-by: Kay <kay.kostelnik@metasfresh.com>\nCo-authored-by: Teo Sarca <teo.sarca@metasfresh.com>\nCo-authored-by: Petrica Nanca <petrica_nanca@yahoo.com>\nCo-authored-by: Peter Wyss <peter.wyss@kommunikativ.ch>\nCo-authored-by: Kuba Siemi\u0105tkowski <kuba@saskla.cz>\nCo-authored-by: Tobias Sch\u00f6neberg <metas-ts@users.noreply.github.com>", "committedDate": "2020-07-23T11:40:02Z", "type": "commit"}, {"oid": "5ed75f7a5034d483afaf7b2e52f7a4045d414f01", "url": "https://github.com/metasfresh/metasfresh/commit/5ed75f7a5034d483afaf7b2e52f7a4045d414f01", "message": "add some documentation", "committedDate": "2020-07-23T11:40:03Z", "type": "commit"}, {"oid": "6e673cacf0fe4ac64d0d3cc1ac7305c38201310c", "url": "https://github.com/metasfresh/metasfresh/commit/6e673cacf0fe4ac64d0d3cc1ac7305c38201310c", "message": "fix build description for de-metas-camel-shipping", "committedDate": "2020-07-23T11:40:03Z", "type": "commit"}, {"oid": "60bd26447ad2fe31c482c3763b50d73a1fd42037", "url": "https://github.com/metasfresh/metasfresh/commit/60bd26447ad2fe31c482c3763b50d73a1fd42037", "message": "Merge branch 'blonde_monkey_uat' into gh7012_receipt_schedule_adj\n\n# Conflicts:\n#\tbackend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/inoutcandidate/exportaudit/APIExportStatus.java\n#\tbackend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/inoutcandidate/modelvalidator/C_Order.java", "committedDate": "2020-07-23T11:44:03Z", "type": "commit"}, {"oid": "6256abcca46d715121c40eea53aecb2331459eb5", "url": "https://github.com/metasfresh/metasfresh/commit/6256abcca46d715121c40eea53aecb2331459eb5", "message": "Merge branch 'blonde_monkey_uat' into gh7012_receipt_schedule_adj\n\n# Conflicts:\n#\tbackend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/inoutcandidate/modelvalidator/C_Order.java", "committedDate": "2020-07-23T13:25:48Z", "type": "commit"}, {"oid": "4ae7f3edd71cbcc467bdedb28726cdd8f756b7ff", "url": "https://github.com/metasfresh/metasfresh/commit/4ae7f3edd71cbcc467bdedb28726cdd8f756b7ff", "message": "#7012 merged blonde_monkey_uat. Resolved Conflicts.", "committedDate": "2020-07-23T13:27:06Z", "type": "commit"}, {"oid": "8783266f29a2322ddf995ebd7036fc43692f017e", "url": "https://github.com/metasfresh/metasfresh/commit/8783266f29a2322ddf995ebd7036fc43692f017e", "message": "#7012 moved migration scripts to right folder. update wrong script number.", "committedDate": "2020-07-23T14:18:22Z", "type": "commit"}]}