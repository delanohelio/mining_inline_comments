{"pr_number": 6702, "pr_title": "#6701 Added error message when sales order cloning fails.", "pr_createdAt": "2020-05-20T15:16:54Z", "pr_url": "https://github.com/metasfresh/metasfresh/pull/6702", "timeline": [{"oid": "7bb095e9589f1592e99dbf416d58b1415cdea1c6", "url": "https://github.com/metasfresh/metasfresh/commit/7bb095e9589f1592e99dbf416d58b1415cdea1c6", "message": "#6701 Added error message when sales order cloning fails.", "committedDate": "2020-05-20T15:09:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODEyNDY0MA==", "url": "https://github.com/metasfresh/metasfresh/pull/6702#discussion_r428124640", "bodyText": "use AdMessageKey instead of String", "author": "teosarca", "createdAt": "2020-05-20T15:55:27Z", "path": "backend/de.metas.adempiere.adempiere/base/src/main/java/de/metas/bpartner/service/impl/BPartnerDAO.java", "diffHunk": "@@ -119,6 +123,8 @@\n \n \tprivate final GLNLoadingCache glnsLoadingCache = new GLNLoadingCache();\n \n+\tprivate static final String MSG_ADDRESS_INACTIVE = \"webui.salesorder.clone.inactivelocation\";", "originalCommit": "7bb095e9589f1592e99dbf416d58b1415cdea1c6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODEyNTIwMw==", "url": "https://github.com/metasfresh/metasfresh/pull/6702#discussion_r428125203", "bodyText": "declare locationRepos as a class field", "author": "teosarca", "createdAt": "2020-05-20T15:56:15Z", "path": "backend/de.metas.adempiere.adempiere/base/src/main/java/de/metas/bpartner/service/impl/BPartnerDAO.java", "diffHunk": "@@ -492,11 +496,21 @@ else if (bpLocations.size() == 1)\n \t@Override\n \tpublic CountryId retrieveBPartnerLocationCountryId(@NonNull final BPartnerLocationId bpLocationId)\n \t{\n-\t\tfinal I_C_BPartner_Location bpLocation = getBPartnerLocationById(bpLocationId);\n-\t\tfinal LocationId locationId = LocationId.ofRepoId(bpLocation.getC_Location_ID());\n+\t\ttry\n+\t\t{\n+\t\t\tfinal I_C_BPartner_Location bpLocation = getBPartnerLocationById(bpLocationId);\n+\t\t\tfinal LocationId locationId = LocationId.ofRepoId(bpLocation.getC_Location_ID());\n+\n+\t\t\tfinal ILocationDAO locationRepos = Services.get(ILocationDAO.class);", "originalCommit": "7bb095e9589f1592e99dbf416d58b1415cdea1c6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODEyNTM5MA==", "url": "https://github.com/metasfresh/metasfresh/pull/6702#discussion_r428125390", "bodyText": "declare msgBL as a class field", "author": "teosarca", "createdAt": "2020-05-20T15:56:32Z", "path": "backend/de.metas.adempiere.adempiere/base/src/main/java/de/metas/bpartner/service/impl/BPartnerDAO.java", "diffHunk": "@@ -492,11 +496,21 @@ else if (bpLocations.size() == 1)\n \t@Override\n \tpublic CountryId retrieveBPartnerLocationCountryId(@NonNull final BPartnerLocationId bpLocationId)\n \t{\n-\t\tfinal I_C_BPartner_Location bpLocation = getBPartnerLocationById(bpLocationId);\n-\t\tfinal LocationId locationId = LocationId.ofRepoId(bpLocation.getC_Location_ID());\n+\t\ttry\n+\t\t{\n+\t\t\tfinal I_C_BPartner_Location bpLocation = getBPartnerLocationById(bpLocationId);\n+\t\t\tfinal LocationId locationId = LocationId.ofRepoId(bpLocation.getC_Location_ID());\n+\n+\t\t\tfinal ILocationDAO locationRepos = Services.get(ILocationDAO.class);\n+\t\t\treturn locationRepos.getCountryIdByLocationId(locationId);\n+\t\t}\n+\t\tcatch (NullPointerException ex)\n+\t\t{\n+\t\t\tfinal IMsgBL msgBL = Services.get(IMsgBL.class);", "originalCommit": "7bb095e9589f1592e99dbf416d58b1415cdea1c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODEyNzM3MQ==", "url": "https://github.com/metasfresh/metasfresh/pull/6702#discussion_r428127371", "bodyText": "also avoid catching NPE. better check where is thrown", "author": "teosarca", "createdAt": "2020-05-20T15:59:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODEyNTM5MA=="}], "type": "inlineReview"}, {"oid": "282ec218600d7aee1d3f5b32a4b920c6371c2ea1", "url": "https://github.com/metasfresh/metasfresh/commit/282ec218600d7aee1d3f5b32a4b920c6371c2ea1", "message": "#6701 Throwing adempiere exception instead of catching NPE.", "committedDate": "2020-05-21T09:02:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU2MzQ4Mw==", "url": "https://github.com/metasfresh/metasfresh/pull/6702#discussion_r428563483", "bodyText": "u can pass directly the MSG_ADDRESS_INACTIVE.\nNo need to call msgBL", "author": "teosarca", "createdAt": "2020-05-21T10:09:43Z", "path": "backend/de.metas.adempiere.adempiere/base/src/main/java/de/metas/bpartner/service/impl/BPartnerDAO.java", "diffHunk": "@@ -493,6 +499,11 @@ else if (bpLocations.size() == 1)\n \tpublic CountryId retrieveBPartnerLocationCountryId(@NonNull final BPartnerLocationId bpLocationId)\n \t{\n \t\tfinal I_C_BPartner_Location bpLocation = getBPartnerLocationById(bpLocationId);\n+\t\tif (bpLocation == null)\n+\t\t{\n+\t\t\tfinal ITranslatableString message = msgBL.getTranslatableMsgText(MSG_ADDRESS_INACTIVE, Collections.emptyList());\n+\t\t\tthrow new AdempiereException(message).markAsUserValidationError();", "originalCommit": "282ec218600d7aee1d3f5b32a4b920c6371c2ea1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU4MTcxMA==", "url": "https://github.com/metasfresh/metasfresh/pull/6702#discussion_r428581710", "bodyText": "i.e. new AdempiereException(MSG_ADDRESS_INACTIVE).markAsUserValidationError();", "author": "teosarca", "createdAt": "2020-05-21T10:52:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU2MzQ4Mw=="}], "type": "inlineReview"}, {"oid": "900d807b51d88b21b4361d0d70c91338d6375e1c", "url": "https://github.com/metasfresh/metasfresh/commit/900d807b51d88b21b4361d0d70c91338d6375e1c", "message": "#6701 Throwing adempiere exception instead of catching NPE.", "committedDate": "2020-05-21T10:58:06Z", "type": "commit"}]}