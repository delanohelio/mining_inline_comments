{"pr_number": 9900, "pr_title": "Support Payment Allocation with different currencies", "pr_createdAt": "2020-09-04T11:32:44Z", "pr_url": "https://github.com/metasfresh/metasfresh/pull/9900", "timeline": [{"oid": "1816702d71376569a2aa56214c409227698549ea", "url": "https://github.com/metasfresh/metasfresh/commit/1816702d71376569a2aa56214c409227698549ea", "message": "Nullability\n\nhttps://github.com/metasfresh/metasfresh/issues/9897", "committedDate": "2020-09-04T08:55:23Z", "type": "commit"}, {"oid": "b9ef0bcc6174218216b4a4064599a32f1277a5c0", "url": "https://github.com/metasfresh/metasfresh/commit/b9ef0bcc6174218216b4a4064599a32f1277a5c0", "message": "Nullability\n\nhttps://github.com/metasfresh/metasfresh/issues/9897", "committedDate": "2020-09-04T11:17:40Z", "type": "commit"}, {"oid": "f3d8961231852e602961651da58a8be2215fe57a", "url": "https://github.com/metasfresh/metasfresh/commit/f3d8961231852e602961651da58a8be2215fe57a", "message": "Small refactoring\n\nhttps://github.com/metasfresh/metasfresh/issues/9897", "committedDate": "2020-09-04T11:17:52Z", "type": "commit"}, {"oid": "80d4118bb9da32b1bd89a65ae9e2290e3d0a4a36", "url": "https://github.com/metasfresh/metasfresh/commit/80d4118bb9da32b1bd89a65ae9e2290e3d0a4a36", "message": "Refactoring MoneyService\n\nhttps://github.com/metasfresh/metasfresh/issues/9897", "committedDate": "2020-09-04T11:18:21Z", "type": "commit"}, {"oid": "890231ea7cfdc5db6ebefbc418c25e179435dce3", "url": "https://github.com/metasfresh/metasfresh/commit/890231ea7cfdc5db6ebefbc418c25e179435dce3", "message": "Add `ClientId`, `Date`, `CurrencyConversionType` to `IPaymentDocument` and children\n\nhttps://github.com/metasfresh/metasfresh/issues/9897", "committedDate": "2020-09-04T11:20:16Z", "type": "commit"}, {"oid": "96db47c987b6b39b417d6e451227eb3cd657b541", "url": "https://github.com/metasfresh/metasfresh/commit/96db47c987b6b39b417d6e451227eb3cd657b541", "message": "`PaymentAllocationBuilder` supports different-currency Allocations\n\nhttps://github.com/metasfresh/metasfresh/issues/9897", "committedDate": "2020-09-04T11:31:12Z", "type": "commit"}, {"oid": "dc4b87bd82152ac87be9e88627e502046fe2e6d1", "url": "https://github.com/metasfresh/metasfresh/commit/dc4b87bd82152ac87be9e88627e502046fe2e6d1", "message": "`PaymentDocument` returns DateTrx\n\nhttps://github.com/metasfresh/metasfresh/issues/9897", "committedDate": "2020-09-04T12:37:53Z", "type": "commit"}, {"oid": "df28424325310ea2a35da5b97c2bed9cdaecd3ef", "url": "https://github.com/metasfresh/metasfresh/commit/df28424325310ea2a35da5b97c2bed9cdaecd3ef", "message": "Midwork adding CurrencyConversiontypeId\n\nhttps://github.com/metasfresh/metasfresh/issues/9897", "committedDate": "2020-09-04T13:01:16Z", "type": "commit"}, {"oid": "bc57c4268b0bcf6d15d29acd161225a4b28bb4ef", "url": "https://github.com/metasfresh/metasfresh/commit/bc57c4268b0bcf6d15d29acd161225a4b28bb4ef", "message": "Pass ClientAndOrgId, Date, CurrencyConversionTypeId\n\nhttps://github.com/metasfresh/metasfresh/issues/9897", "committedDate": "2020-09-07T10:50:29Z", "type": "commit"}, {"oid": "962f94ea9be169b43ef2efdfebef2187fba85c57", "url": "https://github.com/metasfresh/metasfresh/commit/962f94ea9be169b43ef2efdfebef2187fba85c57", "message": "Fix warnings\n\nhttps://github.com/metasfresh/metasfresh/issues/9897", "committedDate": "2020-09-07T10:51:48Z", "type": "commit"}, {"oid": "b0e3bbef160f5995eeabb92ef2540b03b36ae35e", "url": "https://github.com/metasfresh/metasfresh/commit/b0e3bbef160f5995eeabb92ef2540b03b36ae35e", "message": "Fix test\n\nhttps://github.com/metasfresh/metasfresh/issues/9897", "committedDate": "2020-09-07T10:58:27Z", "type": "commit"}, {"oid": "481d8eba4f3059d009951f2fac73a5cbe988d9ae", "url": "https://github.com/metasfresh/metasfresh/commit/481d8eba4f3059d009951f2fac73a5cbe988d9ae", "message": "Pass ClientAndOrgId, Date, CurrencyConversionTypeId\n\nhttps://github.com/metasfresh/metasfresh/issues/9897", "committedDate": "2020-09-07T10:59:24Z", "type": "commit"}, {"oid": "a4770c8dc1505bc502670589b0e55eb3b89e42db", "url": "https://github.com/metasfresh/metasfresh/commit/a4770c8dc1505bc502670589b0e55eb3b89e42db", "message": "Function GetOpenPayments: add C_ConversionType_ID\n\nhttps://github.com/metasfresh/metasfresh/issues/9897", "committedDate": "2020-09-07T12:04:02Z", "type": "commit"}, {"oid": "aac167ff83afacc6fa410efca8d7136e90008bce", "url": "https://github.com/metasfresh/metasfresh/commit/aac167ff83afacc6fa410efca8d7136e90008bce", "message": "Use Invoice currency when creating the allocation\n\nhttps://github.com/metasfresh/metasfresh/issues/9897", "committedDate": "2020-09-07T12:06:35Z", "type": "commit"}, {"oid": "79eb834670cb2e6d26ad726fbc106f103d7df651", "url": "https://github.com/metasfresh/metasfresh/commit/79eb834670cb2e6d26ad726fbc106f103d7df651", "message": "Function GetOpenInvoices: add C_ConversionType_ID\n\nhttps://github.com/metasfresh/metasfresh/issues/9897", "committedDate": "2020-09-07T12:19:37Z", "type": "commit"}, {"oid": "bed7c003a4319b812a19ed6c7c24d18078e7190a", "url": "https://github.com/metasfresh/metasfresh/commit/bed7c003a4319b812a19ed6c7c24d18078e7190a", "message": "Fix swing\n\nhttps://github.com/metasfresh/metasfresh/issues/9897", "committedDate": "2020-09-07T12:28:01Z", "type": "commit"}, {"oid": "6d47b7e829f28a1dbbb2b701d5e2d8cb6b689444", "url": "https://github.com/metasfresh/metasfresh/commit/6d47b7e829f28a1dbbb2b701d5e2d8cb6b689444", "message": "Still not working correctly\n\nhttps://github.com/metasfresh/metasfresh/issues/9897", "committedDate": "2020-09-07T13:48:33Z", "type": "commit"}, {"oid": "88958e753a467077bc70612d7fe18224ab43b63f", "url": "https://github.com/metasfresh/metasfresh/commit/88958e753a467077bc70612d7fe18224ab43b63f", "message": "Add methods for money handling in `CurrencyRate`\n\nhttps://github.com/metasfresh/metasfresh/issues/9897", "committedDate": "2020-09-08T09:58:38Z", "type": "commit"}, {"oid": "db7ca4409c035b0f943a0a6a0ae21f0322598cbc", "url": "https://github.com/metasfresh/metasfresh/commit/db7ca4409c035b0f943a0a6a0ae21f0322598cbc", "message": "Simpler calculation of amounts\n\nhttps://github.com/metasfresh/metasfresh/issues/9897", "committedDate": "2020-09-08T10:02:45Z", "type": "commit"}, {"oid": "1a5c243b9f49cd5c50073e18066357a3f8998e6b", "url": "https://github.com/metasfresh/metasfresh/commit/1a5c243b9f49cd5c50073e18066357a3f8998e6b", "message": "Add JUnit for different currencies\n\nhttps://github.com/metasfresh/metasfresh/issues/9897", "committedDate": "2020-09-08T10:05:06Z", "type": "commit"}, {"oid": "5fb31a7c81a7e6ba382faa991c061d8d33853723", "url": "https://github.com/metasfresh/metasfresh/commit/5fb31a7c81a7e6ba382faa991c061d8d33853723", "message": "Cleanup\n\nhttps://github.com/metasfresh/metasfresh/issues/9897", "committedDate": "2020-09-08T12:13:41Z", "type": "commit"}, {"oid": "c1a2eb103b13bbaf1e20fe087b716e6db512e9b6", "url": "https://github.com/metasfresh/metasfresh/commit/c1a2eb103b13bbaf1e20fe087b716e6db512e9b6", "message": "Invoice<->CreditMemo Allocation with different currencies works\n\nhttps://github.com/metasfresh/metasfresh/issues/9897", "committedDate": "2020-09-08T14:00:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk5MDkxMQ==", "url": "https://github.com/metasfresh/metasfresh/pull/9900#discussion_r484990911", "bodyText": "pls avoid changing files while are not related to the issue.\nmakes reviewing even more harder.", "author": "teosarca", "createdAt": "2020-09-08T15:01:04Z", "path": "backend/de.metas.adempiere.adempiere/client/src/main/java/org/compiere/apps/search/FindHelper.java", "diffHunk": "@@ -35,16 +34,13 @@\n import de.metas.adempiere.util.Permutation;\n import de.metas.util.Check;\n \n-/**\n- * \n- * @author tsa\n- * \n- */\n+import javax.annotation.Nullable;", "originalCommit": "c1a2eb103b13bbaf1e20fe087b716e6db512e9b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTMzNDkyOQ==", "url": "https://github.com/metasfresh/metasfresh/pull/9900#discussion_r485334929", "bodyText": "what about the boyscout rule?", "author": "TheBestPessimist", "createdAt": "2020-09-09T04:46:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk5MDkxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTMzOTgxNw==", "url": "https://github.com/metasfresh/metasfresh/pull/9900#discussion_r485339817", "bodyText": "plus: reviewing these side-touched files should be relatively easy, because most of the changes are:\n\nnullability annotations\nremoving parameter names from comments if they dont have javadoc\ncleanup of final/static when lombok already adds that\nfixing typos", "author": "TheBestPessimist", "createdAt": "2020-09-09T05:03:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk5MDkxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM5NDc2Mw==", "url": "https://github.com/metasfresh/metasfresh/pull/9900#discussion_r485394763", "bodyText": "boy scout rule says to clear the place near you, not the place in the next forest :)\nhere, to be more precise, I wasn't sure if there were some changes related to this task or just some cleanup.\nthanks for explaining.", "author": "teosarca", "createdAt": "2020-09-09T07:25:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk5MDkxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk5MzgzMg==", "url": "https://github.com/metasfresh/metasfresh/pull/9900#discussion_r484993832", "bodyText": "pls move those near the other services declared in this class... see line 78", "author": "teosarca", "createdAt": "2020-09-08T15:05:08Z", "path": "backend/de.metas.banking/de.metas.banking.base/src/main/java/de/metas/banking/payment/paymentallocation/service/PaymentAllocationBuilder.java", "diffHunk": "@@ -40,6 +67,9 @@\n \t\tDO_NOTHING, WRITE_OFF, DISCOUNT\n \t}\n \n+\tprivate final MoneyService moneyService = SpringContextHolder.instance.getBean(MoneyService.class);\n+\tprivate final ICurrencyBL currencyBL = Services.get(ICurrencyBL.class);", "originalCommit": "c1a2eb103b13bbaf1e20fe087b716e6db512e9b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTMzNTU4MQ==", "url": "https://github.com/metasfresh/metasfresh/pull/9900#discussion_r485335581", "bodyText": "done", "author": "TheBestPessimist", "createdAt": "2020-09-09T04:48:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk5MzgzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk5Njc3MA==", "url": "https://github.com/metasfresh/metasfresh/pull/9900#discussion_r484996770", "bodyText": "avoid avoid hardcoding ClientId", "author": "teosarca", "createdAt": "2020-09-08T15:09:39Z", "path": "backend/de.metas.banking/de.metas.banking.swingui/src/main/java/de/metas/banking/payment/paymentallocation/model/InvoiceRow.java", "diffHunk": "@@ -533,7 +535,7 @@ else if (invoiceRow.getC_Order_ID() > 0)\n \t\tfinal CurrencyId currencyId = currenciesRepo.getByCurrencyCode(invoiceRow.getCurrencyISOCode()).getId();\n \n \t\treturn PayableDocument.builder()\n-\t\t\t\t.orgId(invoiceRow.getOrgId())\n+\t\t\t\t.clientAndOrgId(ClientAndOrgId.ofClientAndOrg(ClientId.METASFRESH, invoiceRow.getOrgId()))", "originalCommit": "c1a2eb103b13bbaf1e20fe087b716e6db512e9b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM0MTk5MA==", "url": "https://github.com/metasfresh/metasfresh/pull/9900#discussion_r485341990", "bodyText": "Problem: i don't have a client id here and i believe org is null as well as it is never set to the builder.\nI guess this never failed because it was never used.\nIs there a point in investing any time in fixing this, since this belongs to swing?\nCan i use Env.getClientId() and Env.getOrgId() to get some generic values?", "author": "TheBestPessimist", "createdAt": "2020-09-09T05:11:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk5Njc3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM5MjgyMA==", "url": "https://github.com/metasfresh/metasfresh/pull/9900#discussion_r485392820", "bodyText": "agree. don't invest time in swing.", "author": "teosarca", "createdAt": "2020-09-09T07:22:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk5Njc3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM5NTcwNA==", "url": "https://github.com/metasfresh/metasfresh/pull/9900#discussion_r485395704", "bodyText": "fixed", "author": "TheBestPessimist", "createdAt": "2020-09-09T07:27:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk5Njc3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk5ODMxOQ==", "url": "https://github.com/metasfresh/metasfresh/pull/9900#discussion_r484998319", "bodyText": "why not using Amount.isZero instead of that weird \"equals\" comparation....", "author": "teosarca", "createdAt": "2020-09-08T15:11:51Z", "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/payment_allocation/process/PaymentsViewAllocateCommand.java", "diffHunk": "@@ -210,9 +209,17 @@ static PayableDocument toPayableDocument(\n \t\t\t\t\t\t.build()\n \t\t\t\t\t\t.negateIf(soTrx.isPurchase()))\n \t\t\t\t.invoiceProcessingFeeCalculation(invoiceProcessingFeeCalculation)\n+\t\t\t\t.date(row.getDateInvoiced())\n+\t\t\t\t.clientAndOrgId(row.getClientAndOrgId())\n+\t\t\t\t.currencyConversionTypeId(row.getCurrencyConversionTypeId())\n \t\t\t\t.build();\n \t}\n \n+\tprivate static boolean hasServiceFeesToPay(final @NonNull InvoiceRow row, final CurrencyCode currencyCode)\n+\t{\n+\t\treturn row.getServiceFeeAmt() != null && !Amount.zero(currencyCode).equals(row.getServiceFeeAmt());", "originalCommit": "c1a2eb103b13bbaf1e20fe087b716e6db512e9b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTMzNjM2Mg==", "url": "https://github.com/metasfresh/metasfresh/pull/9900#discussion_r485336362", "bodyText": "done", "author": "TheBestPessimist", "createdAt": "2020-09-09T04:51:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk5ODMxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk5OTEwOA==", "url": "https://github.com/metasfresh/metasfresh/pull/9900#discussion_r484999108", "bodyText": "avoid avoid hardcoding ClientId.\nClientId.METASFRESH is manly for testing!", "author": "teosarca", "createdAt": "2020-09-08T15:13:02Z", "path": "backend/de.metas.banking/de.metas.banking.swingui/src/main/java/de/metas/banking/payment/paymentallocation/model/PaymentRow.java", "diffHunk": "@@ -242,14 +244,15 @@ public IPaymentDocument copyAsPaymentDocument()\n \t\tfinal CurrencyId currencyId = currenciesRepo.getByCurrencyCode(paymentRow.getCurrencyISOCode()).getId();\n \n \t\treturn PaymentDocument.builder()\n-\t\t\t\t.orgId(paymentRow.getOrgId())\n+\t\t\t\t.clientAndOrgId(ClientAndOrgId.ofClientAndOrg(ClientId.METASFRESH, paymentRow.getOrgId()))", "originalCommit": "c1a2eb103b13bbaf1e20fe087b716e6db512e9b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM0MjQxMg==", "url": "https://github.com/metasfresh/metasfresh/pull/9900#discussion_r485342412", "bodyText": "Problem: i don't have a client id here and i believe org is null as well as it is never set to the builder.\nI guess this never failed because it was never used.\nIs there a point in investing any time in fixing this, since this belongs to swing?\nCan i use Env.getClientId() and Env.getOrgId() to get some generic values?", "author": "TheBestPessimist", "createdAt": "2020-09-09T05:13:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk5OTEwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM5NDg3OA==", "url": "https://github.com/metasfresh/metasfresh/pull/9900#discussion_r485394878", "bodyText": "agree. don't invest time in swing.", "author": "teosarca", "createdAt": "2020-09-09T07:26:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk5OTEwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM5NTYzNA==", "url": "https://github.com/metasfresh/metasfresh/pull/9900#discussion_r485395634", "bodyText": "fixed", "author": "TheBestPessimist", "createdAt": "2020-09-09T07:27:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk5OTEwOA=="}], "type": "inlineReview"}, {"oid": "ad13e4fd41856db1c060c301f10819ae477b1be8", "url": "https://github.com/metasfresh/metasfresh/commit/ad13e4fd41856db1c060c301f10819ae477b1be8", "message": "Small refactoring\n\nhttps://github.com/metasfresh/metasfresh/issues/9897", "committedDate": "2020-09-09T05:01:41Z", "type": "commit"}, {"oid": "f8eb0267ed0daa4318b4933e30b9360982ff30af", "url": "https://github.com/metasfresh/metasfresh/commit/f8eb0267ed0daa4318b4933e30b9360982ff30af", "message": "Use `Env.getClientId()` instead of hardcoded value\n\nhttps://github.com/metasfresh/metasfresh/issues/9897", "committedDate": "2020-09-09T05:21:25Z", "type": "commit"}, {"oid": "f10274294e8879a42088a16db4b05dd0f37a773e", "url": "https://github.com/metasfresh/metasfresh/commit/f10274294e8879a42088a16db4b05dd0f37a773e", "message": "Add nullability annotations\n\nhttps://github.com/metasfresh/metasfresh/issues/9897", "committedDate": "2020-09-09T08:18:18Z", "type": "commit"}, {"oid": "439259612e12110d9e5ae25e49e329c36287043d", "url": "https://github.com/metasfresh/metasfresh/commit/439259612e12110d9e5ae25e49e329c36287043d", "message": "Select only active ConversionRates\n\nhttps://github.com/metasfresh/metasfresh/issues/9897", "committedDate": "2020-09-09T08:18:40Z", "type": "commit"}, {"oid": "81d8f101a1e7bdb1f82e5f947127c2041860b021", "url": "https://github.com/metasfresh/metasfresh/commit/81d8f101a1e7bdb1f82e5f947127c2041860b021", "message": "Update sql function CurrencyRate\n\nhttps://github.com/metasfresh/metasfresh/issues/9897", "committedDate": "2020-09-09T11:57:18Z", "type": "commit"}, {"oid": "d667d5022db185bffea0300c07bdf83577a78042", "url": "https://github.com/metasfresh/metasfresh/commit/d667d5022db185bffea0300c07bdf83577a78042", "message": "Sql functions `GetOpenInvoices` and `GetOpenPayments` are stable\n\nhttps://github.com/metasfresh/metasfresh/issues/9897", "committedDate": "2020-09-10T05:30:09Z", "type": "commit"}]}