{"pr_number": 3883, "pr_title": "feature-NXP-28743-Add-the-ability-to-disable-the-rendition-computations", "pr_createdAt": "2020-04-01T17:53:14Z", "pr_url": "https://github.com/nuxeo/nuxeo/pull/3883", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjExMzQ2NA==", "url": "https://github.com/nuxeo/nuxeo/pull/3883#discussion_r402113464", "bodyText": "Worth adding VideoConstants.* them as static import", "author": "troger", "createdAt": "2020-04-02T07:44:42Z", "path": "modules/platform/nuxeo-platform-video/nuxeo-platform-video-core/src/test/java/org/nuxeo/ecm/platform/video/extension/TestVideoImporterAndListeners.java", "diffHunk": "@@ -115,20 +114,20 @@ protected static Blob getBlobFromPath(String path, String mimeType) throws IOExc\n \n     @Test\n     public void testVideoType() {\n-        DocumentType videoType = session.getDocumentType(VIDEO_TYPE);\n+        DocumentType videoType = session.getDocumentType(VideoConstants.VIDEO_TYPE);", "originalCommit": "99c7a702fe8f416ace82d898b9a30b74c9656805", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjEyNTg5OA==", "url": "https://github.com/nuxeo/nuxeo/pull/3883#discussion_r402125898", "bodyText": "yes it's what i did in the past until the Glacier developments that I did where Florent asked me to avoid the  static import and use them really for the known things (like StringUtils for example). His idea is to simply the class reading. :)\nbut if we all agree i will update it", "author": "RSalem07", "createdAt": "2020-04-02T08:06:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjExMzQ2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjE5OTk1NA==", "url": "https://github.com/nuxeo/nuxeo/pull/3883#discussion_r402199954", "bodyText": "I took your suggestion about the static import, but i keep the conversion open for more feedbacks.", "author": "RSalem07", "createdAt": "2020-04-02T10:08:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjExMzQ2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjkwODM1Ng==", "url": "https://github.com/nuxeo/nuxeo/pull/3883#discussion_r402908356", "bodyText": "same suggestion than here", "author": "RSalem07", "createdAt": "2020-04-03T10:24:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjExMzQ2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzExODg0MQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3883#discussion_r403118841", "bodyText": "When I mentioned avoiding static imports I was talking mostly about methods, not constants.", "author": "efge", "createdAt": "2020-04-03T16:16:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjExMzQ2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjExNTk5Mw==", "url": "https://github.com/nuxeo/nuxeo/pull/3883#discussion_r402115993", "bodyText": "Why do you need to deploy it?", "author": "troger", "createdAt": "2020-04-02T07:49:03Z", "path": "modules/platform/nuxeo-platform-video/nuxeo-platform-video-core/src/test/java/org/nuxeo/ecm/platform/video/extension/TestVideoImporterAndListeners.java", "diffHunk": "@@ -452,9 +449,46 @@ public void testConfiguration() throws Exception {\n         // check storyboard\n         @SuppressWarnings(\"unchecked\")\n         List<Map<String, Serializable>> storyboard = (List<Map<String, Serializable>>) docModel.getPropertyValue(\n-                \"vid:storyboard\");\n+                VideoConstants.STORYBOARD_PROPERTY);\n         assertNotNull(storyboard);\n         assertEquals(2, storyboard.size());\n     }\n \n+    @Test\n+    @Deploy(\"org.nuxeo.ecm.platform.video.core:test-video-conversions-enabled.xml\")\n+    @Deploy(\"org.nuxeo.ecm.platform.video.core:test-video-listeners-contrib.xml\")\n+    @Deploy(\"org.nuxeo.ecm.platform.video.core:video-configuration-override.xml\")", "originalCommit": "99c7a702fe8f416ace82d898b9a30b74c9656805", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjEyOTEyNQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3883#discussion_r402129125", "bodyText": "the last @Deploy(\"org.nuxeo.ecm.platform.video.core:video-configuration-override.xml\") is needed to have the storyboard (because storyboard check on the duration here and I don't want to test with a big video, the contribution:\n<storyboardMinDuration>0</storyboardMinDuration> which suits my need\nfor the the two others please see comment my idea is to ensure that disabling conversion is done by my flag and not because we don't have the required contributions", "author": "RSalem07", "createdAt": "2020-04-02T08:12:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjExNTk5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjExNjQwNg==", "url": "https://github.com/nuxeo/nuxeo/pull/3883#discussion_r402116406", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    doc.getContextData().put(VideoChangedListener.DISABLE_VIDEO_CONVERSIONS_GENERATION_LISTENER, true);\n          \n          \n            \n                    doc.putContextData(VideoChangedListener.DISABLE_VIDEO_CONVERSIONS_GENERATION_LISTENER, true);", "author": "troger", "createdAt": "2020-04-02T07:49:41Z", "path": "modules/platform/nuxeo-platform-video/nuxeo-platform-video-core/src/test/java/org/nuxeo/ecm/platform/video/extension/TestVideoImporterAndListeners.java", "diffHunk": "@@ -452,9 +449,46 @@ public void testConfiguration() throws Exception {\n         // check storyboard\n         @SuppressWarnings(\"unchecked\")\n         List<Map<String, Serializable>> storyboard = (List<Map<String, Serializable>>) docModel.getPropertyValue(\n-                \"vid:storyboard\");\n+                VideoConstants.STORYBOARD_PROPERTY);\n         assertNotNull(storyboard);\n         assertEquals(2, storyboard.size());\n     }\n \n+    @Test\n+    @Deploy(\"org.nuxeo.ecm.platform.video.core:test-video-conversions-enabled.xml\")\n+    @Deploy(\"org.nuxeo.ecm.platform.video.core:test-video-listeners-contrib.xml\")\n+    @Deploy(\"org.nuxeo.ecm.platform.video.core:video-configuration-override.xml\")\n+    @SuppressWarnings(\"unchecked\")\n+    public void testNotConversionWhenDisabled() throws IOException {\n+        DocumentModel doc = session.createDocumentModel(\"/\", \"testVideoDoc\", VideoConstants.VIDEO_TYPE);\n+        Blob blobContent = getBlobFromPath(\"test-data/sample.mpg\", \"video/mpeg\");\n+        doc.setPropertyValue(\"file:content\", (Serializable) blobContent);\n+        doc.getContextData().put(VideoChangedListener.DISABLE_VIDEO_CONVERSIONS_GENERATION_LISTENER, true);", "originalCommit": "99c7a702fe8f416ace82d898b9a30b74c9656805", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjExNzQxMA==", "url": "https://github.com/nuxeo/nuxeo/pull/3883#discussion_r402117410", "bodyText": "Worth adding some comments, such as we check that the conversion done event is not fired as we don't do any conversion.", "author": "troger", "createdAt": "2020-04-02T07:51:18Z", "path": "modules/platform/nuxeo-platform-video/nuxeo-platform-video-core/src/test/java/org/nuxeo/ecm/platform/video/extension/TestVideoImporterAndListeners.java", "diffHunk": "@@ -452,9 +449,46 @@ public void testConfiguration() throws Exception {\n         // check storyboard\n         @SuppressWarnings(\"unchecked\")\n         List<Map<String, Serializable>> storyboard = (List<Map<String, Serializable>>) docModel.getPropertyValue(\n-                \"vid:storyboard\");\n+                VideoConstants.STORYBOARD_PROPERTY);\n         assertNotNull(storyboard);\n         assertEquals(2, storyboard.size());\n     }\n \n+    @Test\n+    @Deploy(\"org.nuxeo.ecm.platform.video.core:test-video-conversions-enabled.xml\")\n+    @Deploy(\"org.nuxeo.ecm.platform.video.core:test-video-listeners-contrib.xml\")\n+    @Deploy(\"org.nuxeo.ecm.platform.video.core:video-configuration-override.xml\")\n+    @SuppressWarnings(\"unchecked\")\n+    public void testNotConversionWhenDisabled() throws IOException {\n+        DocumentModel doc = session.createDocumentModel(\"/\", \"testVideoDoc\", VideoConstants.VIDEO_TYPE);\n+        Blob blobContent = getBlobFromPath(\"test-data/sample.mpg\", \"video/mpeg\");\n+        doc.setPropertyValue(\"file:content\", (Serializable) blobContent);\n+        doc.getContextData().put(VideoChangedListener.DISABLE_VIDEO_CONVERSIONS_GENERATION_LISTENER, true);\n+        doc = session.createDocument(doc);\n+\n+        KeyValueStore kvs = Framework.getService(KeyValueService.class).getKeyValueStore(\"default\");\n+        kvs.put(doc.getId(), 0L);\n+        txFeature.nextTransaction();\n+\n+        assertEquals(Long.valueOf(0), kvs.getLong(doc.getId()));", "originalCommit": "99c7a702fe8f416ace82d898b9a30b74c9656805", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjExOTM4NA==", "url": "https://github.com/nuxeo/nuxeo/pull/3883#discussion_r402119384", "bodyText": "Be consistent :)\nnoStoryboard and noTranscodedVideos or just storyboard and transcodedVideo (my peer).", "author": "troger", "createdAt": "2020-04-02T07:54:34Z", "path": "modules/platform/nuxeo-platform-video/nuxeo-platform-video-core/src/test/java/org/nuxeo/ecm/platform/video/extension/TestVideoImporterAndListeners.java", "diffHunk": "@@ -452,9 +449,46 @@ public void testConfiguration() throws Exception {\n         // check storyboard\n         @SuppressWarnings(\"unchecked\")\n         List<Map<String, Serializable>> storyboard = (List<Map<String, Serializable>>) docModel.getPropertyValue(\n-                \"vid:storyboard\");\n+                VideoConstants.STORYBOARD_PROPERTY);\n         assertNotNull(storyboard);\n         assertEquals(2, storyboard.size());\n     }\n \n+    @Test\n+    @Deploy(\"org.nuxeo.ecm.platform.video.core:test-video-conversions-enabled.xml\")\n+    @Deploy(\"org.nuxeo.ecm.platform.video.core:test-video-listeners-contrib.xml\")\n+    @Deploy(\"org.nuxeo.ecm.platform.video.core:video-configuration-override.xml\")\n+    @SuppressWarnings(\"unchecked\")\n+    public void testNotConversionWhenDisabled() throws IOException {\n+        DocumentModel doc = session.createDocumentModel(\"/\", \"testVideoDoc\", VideoConstants.VIDEO_TYPE);\n+        Blob blobContent = getBlobFromPath(\"test-data/sample.mpg\", \"video/mpeg\");\n+        doc.setPropertyValue(\"file:content\", (Serializable) blobContent);\n+        doc.getContextData().put(VideoChangedListener.DISABLE_VIDEO_CONVERSIONS_GENERATION_LISTENER, true);\n+        doc = session.createDocument(doc);\n+\n+        KeyValueStore kvs = Framework.getService(KeyValueService.class).getKeyValueStore(\"default\");\n+        kvs.put(doc.getId(), 0L);\n+        txFeature.nextTransaction();\n+\n+        assertEquals(Long.valueOf(0), kvs.getLong(doc.getId()));\n+\n+        var transcodedVideos = (List<Map<String, Serializable>>) doc.getPropertyValue(\n+                VideoConstants.TRANSCODED_VIDEOS_PROPERTY);\n+        assertEquals(0, transcodedVideos.size());\n+        var noStoryboard = (List<Map<String, Serializable>>) doc.getPropertyValue(VideoConstants.STORYBOARD_PROPERTY);\n+        assertEquals(0, noStoryboard.size());", "originalCommit": "99c7a702fe8f416ace82d898b9a30b74c9656805", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjExOTgyNA==", "url": "https://github.com/nuxeo/nuxeo/pull/3883#discussion_r402119824", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    doc.getContextData().put(VideoChangedListener.DISABLE_VIDEO_CONVERSIONS_GENERATION_LISTENER, false);\n          \n          \n            \n                    doc.putContextData(VideoChangedListener.DISABLE_VIDEO_CONVERSIONS_GENERATION_LISTENER, false);", "author": "troger", "createdAt": "2020-04-02T07:55:20Z", "path": "modules/platform/nuxeo-platform-video/nuxeo-platform-video-core/src/test/java/org/nuxeo/ecm/platform/video/extension/TestVideoImporterAndListeners.java", "diffHunk": "@@ -452,9 +449,46 @@ public void testConfiguration() throws Exception {\n         // check storyboard\n         @SuppressWarnings(\"unchecked\")\n         List<Map<String, Serializable>> storyboard = (List<Map<String, Serializable>>) docModel.getPropertyValue(\n-                \"vid:storyboard\");\n+                VideoConstants.STORYBOARD_PROPERTY);\n         assertNotNull(storyboard);\n         assertEquals(2, storyboard.size());\n     }\n \n+    @Test\n+    @Deploy(\"org.nuxeo.ecm.platform.video.core:test-video-conversions-enabled.xml\")\n+    @Deploy(\"org.nuxeo.ecm.platform.video.core:test-video-listeners-contrib.xml\")\n+    @Deploy(\"org.nuxeo.ecm.platform.video.core:video-configuration-override.xml\")\n+    @SuppressWarnings(\"unchecked\")\n+    public void testNotConversionWhenDisabled() throws IOException {\n+        DocumentModel doc = session.createDocumentModel(\"/\", \"testVideoDoc\", VideoConstants.VIDEO_TYPE);\n+        Blob blobContent = getBlobFromPath(\"test-data/sample.mpg\", \"video/mpeg\");\n+        doc.setPropertyValue(\"file:content\", (Serializable) blobContent);\n+        doc.getContextData().put(VideoChangedListener.DISABLE_VIDEO_CONVERSIONS_GENERATION_LISTENER, true);\n+        doc = session.createDocument(doc);\n+\n+        KeyValueStore kvs = Framework.getService(KeyValueService.class).getKeyValueStore(\"default\");\n+        kvs.put(doc.getId(), 0L);\n+        txFeature.nextTransaction();\n+\n+        assertEquals(Long.valueOf(0), kvs.getLong(doc.getId()));\n+\n+        var transcodedVideos = (List<Map<String, Serializable>>) doc.getPropertyValue(\n+                VideoConstants.TRANSCODED_VIDEOS_PROPERTY);\n+        assertEquals(0, transcodedVideos.size());\n+        var noStoryboard = (List<Map<String, Serializable>>) doc.getPropertyValue(VideoConstants.STORYBOARD_PROPERTY);\n+        assertEquals(0, noStoryboard.size());\n+\n+        // the conversions should be done if we disable the flag\n+        doc.getContextData().put(VideoChangedListener.DISABLE_VIDEO_CONVERSIONS_GENERATION_LISTENER, false);", "originalCommit": "99c7a702fe8f416ace82d898b9a30b74c9656805", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjEyMDgwMw==", "url": "https://github.com/nuxeo/nuxeo/pull/3883#discussion_r402120803", "bodyText": "Is this really needed? The case with false aka not existing is tested in testVideoConversions.", "author": "troger", "createdAt": "2020-04-02T07:57:00Z", "path": "modules/platform/nuxeo-platform-video/nuxeo-platform-video-core/src/test/java/org/nuxeo/ecm/platform/video/extension/TestVideoImporterAndListeners.java", "diffHunk": "@@ -452,9 +449,46 @@ public void testConfiguration() throws Exception {\n         // check storyboard\n         @SuppressWarnings(\"unchecked\")\n         List<Map<String, Serializable>> storyboard = (List<Map<String, Serializable>>) docModel.getPropertyValue(\n-                \"vid:storyboard\");\n+                VideoConstants.STORYBOARD_PROPERTY);\n         assertNotNull(storyboard);\n         assertEquals(2, storyboard.size());\n     }\n \n+    @Test\n+    @Deploy(\"org.nuxeo.ecm.platform.video.core:test-video-conversions-enabled.xml\")\n+    @Deploy(\"org.nuxeo.ecm.platform.video.core:test-video-listeners-contrib.xml\")\n+    @Deploy(\"org.nuxeo.ecm.platform.video.core:video-configuration-override.xml\")\n+    @SuppressWarnings(\"unchecked\")\n+    public void testNotConversionWhenDisabled() throws IOException {\n+        DocumentModel doc = session.createDocumentModel(\"/\", \"testVideoDoc\", VideoConstants.VIDEO_TYPE);\n+        Blob blobContent = getBlobFromPath(\"test-data/sample.mpg\", \"video/mpeg\");\n+        doc.setPropertyValue(\"file:content\", (Serializable) blobContent);\n+        doc.getContextData().put(VideoChangedListener.DISABLE_VIDEO_CONVERSIONS_GENERATION_LISTENER, true);\n+        doc = session.createDocument(doc);\n+\n+        KeyValueStore kvs = Framework.getService(KeyValueService.class).getKeyValueStore(\"default\");\n+        kvs.put(doc.getId(), 0L);\n+        txFeature.nextTransaction();\n+\n+        assertEquals(Long.valueOf(0), kvs.getLong(doc.getId()));\n+\n+        var transcodedVideos = (List<Map<String, Serializable>>) doc.getPropertyValue(\n+                VideoConstants.TRANSCODED_VIDEOS_PROPERTY);\n+        assertEquals(0, transcodedVideos.size());\n+        var noStoryboard = (List<Map<String, Serializable>>) doc.getPropertyValue(VideoConstants.STORYBOARD_PROPERTY);\n+        assertEquals(0, noStoryboard.size());\n+\n+        // the conversions should be done if we disable the flag\n+        doc.getContextData().put(VideoChangedListener.DISABLE_VIDEO_CONVERSIONS_GENERATION_LISTENER, false);\n+        doc.setPropertyValue(\"file:content\", (Serializable) blobContent);\n+        doc = session.saveDocument(doc);\n+        txFeature.nextTransaction();\n+        assertEquals(Long.valueOf(1), kvs.getLong(doc.getId()));\n+        transcodedVideos = (List<Map<String, Serializable>>) doc.getPropertyValue(\n+                VideoConstants.TRANSCODED_VIDEOS_PROPERTY);\n+        assertEquals(2, transcodedVideos.size());\n+        noStoryboard = (List<Map<String, Serializable>>) doc.getPropertyValue(VideoConstants.STORYBOARD_PROPERTY);\n+        assertEquals(2, noStoryboard.size());", "originalCommit": "99c7a702fe8f416ace82d898b9a30b74c9656805", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjEzMDE4Ng==", "url": "https://github.com/nuxeo/nuxeo/pull/3883#discussion_r402130186", "bodyText": "yes i agree that this part is already covered by the other test, i just added to be test that disabling thing will recompute what it is needed.  and for more context with the second part I am sure that the No conversions is ensured by my new flag, because if for example I remove the     @Deploy(\"org.nuxeo.ecm.platform.video.core:video-configuration-override.xml\") the storyboard will not be computed not because of my flag but because of missing the contribution. it is my second assertion that allows me to see that I need the contribution to avoid any false positive.", "author": "RSalem07", "createdAt": "2020-04-02T08:13:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjEyMDgwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjEyMTE3NQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3883#discussion_r402121175", "bodyText": "Why a log.trace here, but not in VideoChangedListener?", "author": "troger", "createdAt": "2020-04-02T07:57:39Z", "path": "modules/platform/nuxeo-thumbnail/src/main/java/org/nuxeo/ecm/platform/thumbnail/listener/UpdateThumbnailListener.java", "diffHunk": "@@ -123,6 +128,11 @@ public void handleEvent(EventBundle events) {\n             }\n             DocumentEventContext context = (DocumentEventContext) event.getContext();\n             DocumentModel doc = context.getSourceDocument();\n+            if (Boolean.TRUE.equals(context.getProperty(ThumbnailConstants.DISABLE_THUMBNAIL_COMPUTATION))) {\n+                log.trace(\"Thumbnail computation is disabled for document {}\", doc.getId());", "originalCommit": "99c7a702fe8f416ace82d898b9a30b74c9656805", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjEzMTI4Mw==", "url": "https://github.com/nuxeo/nuxeo/pull/3883#discussion_r402131283", "bodyText": "good point, for the video initially I sa what we have on the picture one, this the reason why i avoid the log. for thumbnail i added for debugging purpose and i forgot to re-put the same thing on Video. I think it's better to have the log. wdyt", "author": "RSalem07", "createdAt": "2020-04-02T08:15:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjEyMTE3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjE5ODQyMg==", "url": "https://github.com/nuxeo/nuxeo/pull/3883#discussion_r402198422", "bodyText": "Log added too for video", "author": "RSalem07", "createdAt": "2020-04-02T10:05:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjEyMTE3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjEyMjY0NA==", "url": "https://github.com/nuxeo/nuxeo/pull/3883#discussion_r402122644", "bodyText": "The thumbnail generation is already tested before.", "author": "troger", "createdAt": "2020-04-02T08:00:12Z", "path": "modules/platform/nuxeo-thumbnail/src/test/java/org/nuxeo/ecm/platform/thumbnail/test/TestRecomputeThumbnails.java", "diffHunk": "@@ -133,4 +136,27 @@ public void testThumbnailsForTIFF() throws Exception {\n         assertNotNull(\"the TIFF thumbnail is not generated\", thumbnail);\n     }\n \n+    @Test\n+    public void testNotRecomputeThumbnailsWhenDisabled() throws IOException, OperationException {\n+        Blob blob = Blobs.createBlob(FileUtils.getResourceFileFromContext(\"test-data/big_nuxeo_logo.jpg\"), \"image/jpeg\",\n+                StandardCharsets.UTF_8.name(), \"big_nuxeo_logo.jpg\");\n+\n+        DocumentModel fileWithThumbnail = session.createDocumentModel(\"/\", \"fileWithThumbnail\", \"File\");", "originalCommit": "99c7a702fe8f416ace82d898b9a30b74c9656805", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjEzMjA2NA==", "url": "https://github.com/nuxeo/nuxeo/pull/3883#discussion_r402132064", "bodyText": "yes i agree, as explained above i just keep the same thing (check the same document to avoid any false positive cases):\ndisabling -> no thumbnail, no conversion\nre-enabling-> thumbnail, conversion", "author": "RSalem07", "createdAt": "2020-04-02T08:17:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjEyMjY0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjE5ODI0MQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3883#discussion_r402198241", "bodyText": "Done for this case :)", "author": "RSalem07", "createdAt": "2020-04-02T10:05:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjEyMjY0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjEyMjkxNg==", "url": "https://github.com/nuxeo/nuxeo/pull/3883#discussion_r402122916", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testNotRecomputeThumbnailsWhenDisabled() throws IOException, OperationException {\n          \n          \n            \n                public void testNoThumbnailWhenDisabled() throws IOException, OperationException {", "author": "troger", "createdAt": "2020-04-02T08:00:41Z", "path": "modules/platform/nuxeo-thumbnail/src/test/java/org/nuxeo/ecm/platform/thumbnail/test/TestRecomputeThumbnails.java", "diffHunk": "@@ -133,4 +136,27 @@ public void testThumbnailsForTIFF() throws Exception {\n         assertNotNull(\"the TIFF thumbnail is not generated\", thumbnail);\n     }\n \n+    @Test\n+    public void testNotRecomputeThumbnailsWhenDisabled() throws IOException, OperationException {", "originalCommit": "99c7a702fe8f416ace82d898b9a30b74c9656805", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjEyMzA1MQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3883#discussion_r402123051", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testNotConversionWhenDisabled() throws IOException {\n          \n          \n            \n                public void testNoConversionWhenDisabled() throws IOException {", "author": "troger", "createdAt": "2020-04-02T08:00:56Z", "path": "modules/platform/nuxeo-platform-video/nuxeo-platform-video-core/src/test/java/org/nuxeo/ecm/platform/video/extension/TestVideoImporterAndListeners.java", "diffHunk": "@@ -452,9 +449,46 @@ public void testConfiguration() throws Exception {\n         // check storyboard\n         @SuppressWarnings(\"unchecked\")\n         List<Map<String, Serializable>> storyboard = (List<Map<String, Serializable>>) docModel.getPropertyValue(\n-                \"vid:storyboard\");\n+                VideoConstants.STORYBOARD_PROPERTY);\n         assertNotNull(storyboard);\n         assertEquals(2, storyboard.size());\n     }\n \n+    @Test\n+    @Deploy(\"org.nuxeo.ecm.platform.video.core:test-video-conversions-enabled.xml\")\n+    @Deploy(\"org.nuxeo.ecm.platform.video.core:test-video-listeners-contrib.xml\")\n+    @Deploy(\"org.nuxeo.ecm.platform.video.core:video-configuration-override.xml\")\n+    @SuppressWarnings(\"unchecked\")\n+    public void testNotConversionWhenDisabled() throws IOException {", "originalCommit": "99c7a702fe8f416ace82d898b9a30b74c9656805", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjEzMjM2Ng==", "url": "https://github.com/nuxeo/nuxeo/pull/3883#discussion_r402132366", "bodyText": "already done before I see you review :) thx", "author": "RSalem07", "createdAt": "2020-04-02T08:18:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjEyMzA1MQ=="}], "type": "inlineReview"}, {"oid": "2c45a164279860feb295db0e6482c0bb5b3832c2", "url": "https://github.com/nuxeo/nuxeo/commit/2c45a164279860feb295db0e6482c0bb5b3832c2", "message": "NXP-28743: Add the ability to disable the thumbnail computation", "committedDate": "2020-04-02T08:01:20Z", "type": "forcePushed"}, {"oid": "f38829cd0cc6acc84db3652cd2bcc21442aed7c0", "url": "https://github.com/nuxeo/nuxeo/commit/f38829cd0cc6acc84db3652cd2bcc21442aed7c0", "message": "NXP-28743: Cleanup / Format", "committedDate": "2020-04-02T09:48:03Z", "type": "commit"}, {"oid": "30d67d16b796da9f54295f0c513a47bf49593c35", "url": "https://github.com/nuxeo/nuxeo/commit/30d67d16b796da9f54295f0c513a47bf49593c35", "message": "NXP-28743: Add the ability to disable the video conversions", "committedDate": "2020-04-02T10:01:08Z", "type": "commit"}, {"oid": "9d51911513bd10de17b5fb97b031db3fc0c62c41", "url": "https://github.com/nuxeo/nuxeo/commit/9d51911513bd10de17b5fb97b031db3fc0c62c41", "message": "NXP-28743: Add the ability to disable the thumbnail computation", "committedDate": "2020-04-02T10:04:49Z", "type": "forcePushed"}, {"oid": "9a0c504dd9fe464777f0d048b61b2c4a7bc495f6", "url": "https://github.com/nuxeo/nuxeo/commit/9a0c504dd9fe464777f0d048b61b2c4a7bc495f6", "message": "NXP-28743: Add the ability to disable the thumbnail computation", "committedDate": "2020-04-02T10:07:03Z", "type": "commit"}, {"oid": "9a0c504dd9fe464777f0d048b61b2c4a7bc495f6", "url": "https://github.com/nuxeo/nuxeo/commit/9a0c504dd9fe464777f0d048b61b2c4a7bc495f6", "message": "NXP-28743: Add the ability to disable the thumbnail computation", "committedDate": "2020-04-02T10:07:03Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzExNjgyMg==", "url": "https://github.com/nuxeo/nuxeo/pull/3883#discussion_r403116822", "bodyText": "FYI @since is overkill for protected/private fields/methods", "author": "efge", "createdAt": "2020-04-03T16:14:16Z", "path": "modules/platform/nuxeo-thumbnail/src/main/java/org/nuxeo/ecm/platform/thumbnail/listener/UpdateThumbnailListener.java", "diffHunk": "@@ -55,6 +57,9 @@\n  */\n public class UpdateThumbnailListener implements PostCommitEventListener {\n \n+    /** @since 11.1 **/\n+    private static final Logger log = LogManager.getLogger(UpdateThumbnailListener.class);", "originalCommit": "9a0c504dd9fe464777f0d048b61b2c4a7bc495f6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}