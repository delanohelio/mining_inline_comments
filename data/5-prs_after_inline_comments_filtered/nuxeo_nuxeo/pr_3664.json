{"pr_number": 3664, "pr_title": "improvement-NXP-28255-add-parent-comment-in-notifications", "pr_createdAt": "2020-01-14T11:59:58Z", "pr_url": "https://github.com/nuxeo/nuxeo/pull/3664", "timeline": [{"oid": "3e2515ba8451b945c0e3262aa08aa59e760a30f7", "url": "https://github.com/nuxeo/nuxeo/commit/3e2515ba8451b945c0e3262aa08aa59e760a30f7", "message": "NXP-28255: add parent comment content in notification", "committedDate": "2020-01-16T10:43:54Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQ0MDg4Nw==", "url": "https://github.com/nuxeo/nuxeo/pull/3664#discussion_r367440887", "bodyText": "No risk of NPE on parentComment here?", "author": "ataillefer", "createdAt": "2020-01-16T14:17:47Z", "path": "nuxeo-features/nuxeo-platform-comment/nuxeo-platform-comment/src/test/java/org/nuxeo/ecm/platform/comment/CommentUtils.java", "diffHunk": "@@ -133,13 +135,22 @@ public static String getExpectedMailContent(DocumentModel commentDocModel, Docum\n             Event event, String commentEventType) {\n         URL url = CommentUtils.class.getResource(\"/templates/commentNotificationMail.txt\");\n         try {\n-            String content = Files.readString(Paths.get(url.toURI()));\n             var model = Map.of(\"COMMENT_AUTHOR\", commentDocModel.getPropertyValue(COMMENT_AUTHOR), //\n                     \"COMMENT_ACTION\", COMMENT_ADDED.equals(commentEventType) ? \"added\" : \"updated\", //\n                     \"COMMENTED_DOCUMENT\", commentedDocModel.getName(), //\n                     \"COMMENT_DATE\", EVENT_DATE_FORMAT.format(Date.from(Instant.ofEpochMilli(event.getTime()))), //\n                     \"COMMENT_TEXT\", commentDocModel.getPropertyValue(COMMENT_TEXT), //\n                     \"COMMENT_SUBSCRIPTION_NAME\", COMMENT_ADDED.equals(commentEventType) ? \"New\" : \"Updated\");\n+            DocumentModel parentComment = (DocumentModel) event.getContext().getProperties().get(PARENT_COMMENT);\n+            if (COMMENT_DOC_TYPE.equals(parentComment.getType())) {", "originalCommit": "3e2515ba8451b945c0e3262aa08aa59e760a30f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQ3NjI2Mw==", "url": "https://github.com/nuxeo/nuxeo/pull/3664#discussion_r367476263", "bodyText": "parentComment is not the best name for it. It is the source doc of the event so parentComment can actually be the commented top level document. It is always available: \n  \n    \n      nuxeo/nuxeo-features/nuxeo-platform-comment/nuxeo-platform-comment/src/main/java/org/nuxeo/ecm/platform/comment/impl/AbstractCommentManager.java\n    \n    \n         Line 122\n      in\n      3e2515b\n    \n    \n    \n    \n\n        \n          \n           props.put(CommentConstants.PARENT_COMMENT, commentedDoc); \n        \n    \n  \n\n\nTOP_LEVEL_DOCUMENT is always the top level, when it differs from PARENT_COMMENT then we know the new comment is a reply.", "author": "NourNuxeo", "createdAt": "2020-01-16T15:17:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQ0MDg4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODA0MTg2Nw==", "url": "https://github.com/nuxeo/nuxeo/pull/3664#discussion_r368041867", "bodyText": "Map<String, Serializable> modelWithReplyInfos = new HashMap<>(model); to avoid  modelWithReplyInfos.putAll(model);", "author": "RSalem07", "createdAt": "2020-01-17T17:05:50Z", "path": "nuxeo-features/nuxeo-platform-comment/nuxeo-platform-comment/src/test/java/org/nuxeo/ecm/platform/comment/CommentUtils.java", "diffHunk": "@@ -122,13 +135,22 @@ public static String getExpectedMailContent(DocumentModel commentDocModel, Docum\n             Event event, String commentEventType) {\n         URL url = CommentUtils.class.getResource(\"/templates/commentNotificationMail.txt\");\n         try {\n-            String content = Files.readString(Paths.get(url.toURI()));\n             var model = Map.of(\"COMMENT_AUTHOR\", commentDocModel.getPropertyValue(COMMENT_AUTHOR), //\n                     \"COMMENT_ACTION\", COMMENT_ADDED.equals(commentEventType) ? \"added\" : \"updated\", //\n                     \"COMMENTED_DOCUMENT\", commentedDocModel.getName(), //\n                     \"COMMENT_DATE\", EVENT_DATE_FORMAT.format(Date.from(Instant.ofEpochMilli(event.getTime()))), //\n                     \"COMMENT_TEXT\", commentDocModel.getPropertyValue(COMMENT_TEXT), //\n                     \"COMMENT_SUBSCRIPTION_NAME\", COMMENT_ADDED.equals(commentEventType) ? \"New\" : \"Updated\");\n+            DocumentModel parentComment = (DocumentModel) event.getContext().getProperties().get(PARENT_COMMENT);\n+            if (COMMENT_DOC_TYPE.equals(parentComment.getType())) {\n+                url = CommentUtils.class.getResource(\"/templates/commentReplyNotificationMail.txt\");\n+                Map<String, Serializable> modelWithReplyInfos = new HashMap<>();\n+                modelWithReplyInfos.putAll(model);\n+                modelWithReplyInfos.put(\"PARENT_COMMENT_AUTHOR\", parentComment.getPropertyValue(\"comment:author\"));", "originalCommit": "3e2515ba8451b945c0e3262aa08aa59e760a30f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODA0ODY3NA==", "url": "https://github.com/nuxeo/nuxeo/pull/3664#discussion_r368048674", "bodyText": "wdyt if we rework the method:\n  public static String getExpectedMailContent(DocumentModel commentDocModel, DocumentModel commentedDocModel,\n            Event event, String commentEventType) {\n        try {\n            Map<String, Object> model = new HashMap<>(\n                    getDefaultModel(commentDocModel, commentedDocModel, event, commentEventType));\n\n            String templateUrl = \"/templates/commentNotificationMail.txt\";\n            DocumentModel parentComment = (DocumentModel) event.getContext().getProperties().get(PARENT_COMMENT);\n            if (COMMENT_DOC_TYPE.equals(parentComment.getType())) {\n                templateUrl = \"/templates/commentReplyNotificationMail.txt\";\n                model.put(\"PARENT_COMMENT_AUTHOR\", parentComment.getPropertyValue(CommentsConstants.COMMENT_AUTHOR));\n                model.put(\"PARENT_COMMENT_TEXT\", parentComment.getPropertyValue(CommentsConstants.COMMENT_TEXT));\n            }\n            String content = Files.readString(Paths.get(CommentUtils.class.getResource(templateUrl).toURI()));\n            return StringUtils.expandVars(content, model);\n        } catch (URISyntaxException | IOException e) {\n            throw new NuxeoException(e);\n        }\n    }\n\n    protected static Map<String, Object> getDefaultModel(DocumentModel commentDocModel, DocumentModel commentedDocModel,\n            Event event, String commentEventType) {\n        return Map.of(\"COMMENT_AUTHOR\", commentDocModel.getPropertyValue(COMMENT_AUTHOR), //\n                \"COMMENT_ACTION\", COMMENT_ADDED.equals(commentEventType) ? \"added\" : \"updated\", //\n                \"COMMENTED_DOCUMENT\", commentedDocModel.getName(), //\n                \"COMMENT_DATE\", EVENT_DATE_FORMAT.format(Date.from(Instant.ofEpochMilli(event.getTime()))), //\n                \"COMMENT_TEXT\", commentDocModel.getPropertyValue(COMMENT_TEXT), //\n                \"COMMENT_SUBSCRIPTION_NAME\", COMMENT_ADDED.equals(commentEventType) ? \"New\" : \"Updated\");\n    }", "author": "RSalem07", "createdAt": "2020-01-17T17:22:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODA0MTg2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODA0OTYxOA==", "url": "https://github.com/nuxeo/nuxeo/pull/3664#discussion_r368049618", "bodyText": "for further i am wondering what if we use the same template \"/templates/commentNotificationMail.txt\"; and just fill in an empty value for PARENT_COMMENT_AUTHOR and PARENT_COMMENT_TEXT in the case where there is no reply this will reduce the code te maintains\nwdyt :)", "author": "RSalem07", "createdAt": "2020-01-17T17:24:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODA0MTg2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA2NDY3Ng==", "url": "https://github.com/nuxeo/nuxeo/pull/3664#discussion_r370064676", "bodyText": "what about the proposition of reworking this method as i proposed above: extract the default model, avoid re-affecting the object references ...", "author": "RSalem07", "createdAt": "2020-01-23T11:26:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODA0MTg2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE2MDMyOA==", "url": "https://github.com/nuxeo/nuxeo/pull/3664#discussion_r370160328", "bodyText": "About the template as we discussed F2F there are also additional lines other than the variables so it's easier to have 2 templates.\nAbout the rework I don't think making a single usage method helps here.\nThis implementation always makes an immutable map and rewrites it to a new HashMap via constructor. But in reality on the 192 tests we have, only 1 does need to add infos on the map and thus rewrite it.", "author": "NourNuxeo", "createdAt": "2020-01-23T14:47:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODA0MTg2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE2ODc1MQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3664#discussion_r370168751", "bodyText": "i am talking about the second point avoid modification the map reference object, if you don't add the new method getDefault....the new method,\nyou should avoid \n  \n    \n      nuxeo/nuxeo-features/nuxeo-platform-comment/nuxeo-platform-comment/src/test/java/org/nuxeo/ecm/platform/comment/CommentUtils.java\n    \n    \n         Line 150\n      in\n      ab56a1d\n    \n    \n    \n    \n\n        \n          \n           model = modelWithReplyInfos;", "author": "RSalem07", "createdAt": "2020-01-23T15:00:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODA0MTg2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE4NDMzMw==", "url": "https://github.com/nuxeo/nuxeo/pull/3664#discussion_r370184333", "bodyText": "model is a map I create in the same method, it's not an argument or something external.", "author": "NourNuxeo", "createdAt": "2020-01-23T15:25:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODA0MTg2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE5NDE2OA==", "url": "https://github.com/nuxeo/nuxeo/pull/3664#discussion_r370194168", "bodyText": "but it is a map and you can avoid re-affectation, once map is enough here, why use two ?", "author": "RSalem07", "createdAt": "2020-01-23T15:41:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODA0MTg2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIxNjcyNQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3664#discussion_r370216725", "bodyText": "Here you are already constructing 2 maps:\nMap<String, Object> model = new HashMap<>(\n                    getDefaultModel(commentDocModel, commentedDocModel, event, commentEventType));\n\nOne immutable inside getDefaultModel\nOne HashMap that takes that as an argument to rewrite all entries in a mutable map.\nYou do it for every call to getExpectedMailContent\nActually I only do it when doing a reply. if the cost is to reaffect a local variable then it doesn't seem to be a problem to me.", "author": "NourNuxeo", "createdAt": "2020-01-23T16:18:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODA0MTg2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIyNTMyMQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3664#discussion_r370225321", "bodyText": "there is no performance deal here and we are in a test context it is not matter, what i don't agree is to re-affect variable when we can use onces from start at until the  end of the method", "author": "RSalem07", "createdAt": "2020-01-23T16:32:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODA0MTg2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIzMjIwOA==", "url": "https://github.com/nuxeo/nuxeo/pull/3664#discussion_r370232208", "bodyText": "Then let's make a Hashmap from the start rather than a immutable Map. This means dropping the handy Map.of but I think it's solves it all.", "author": "NourNuxeo", "createdAt": "2020-01-23T16:44:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODA0MTg2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUyMTUxNA==", "url": "https://github.com/nuxeo/nuxeo/pull/3664#discussion_r370521514", "bodyText": "another proposition\n    public static String getExpectedMailContent(DocumentModel commentDocModel, DocumentModel commentedDocModel,\n            Event event, String commentEventType) {\n        try {\n            String template = \"commentNotificationMail.txt\";\n            Serializable parentAuthor = \"\";\n            Serializable parentText = \"\";\n            DocumentModel parentComment = (DocumentModel) event.getContext().getProperties().get(PARENT_COMMENT);\n            if (COMMENT_DOC_TYPE.equals(parentComment.getType())) {\n                template = \"commentReplyNotificationMail.txt\";\n                parentAuthor = parentComment.getPropertyValue(\"comment:author\");\n                parentText = parentComment.getPropertyValue(\"comment:text\");\n            }\n            // data model\n            var model = Map.of(\"COMMENT_AUTHOR\", commentDocModel.getPropertyValue(COMMENT_AUTHOR), //\n                    \"COMMENT_ACTION\", COMMENT_ADDED.equals(commentEventType) ? \"added\" : \"updated\", //\n                    \"COMMENTED_DOCUMENT\", commentedDocModel.getName(), //\n                    \"COMMENT_DATE\", EVENT_DATE_FORMAT.format(Date.from(Instant.ofEpochMilli(event.getTime()))), //\n                    \"COMMENT_TEXT\", commentDocModel.getPropertyValue(COMMENT_TEXT), //\n                    \"COMMENT_SUBSCRIPTION_NAME\", COMMENT_ADDED.equals(commentEventType) ? \"New\" : \"Updated\", //\n                    \"PARENT_COMMENT_AUTHOR\", parentAuthor, //\n                    \"PARENT_COMMENT_TEXT\", parentText); //\n\n            String content = Files.readString(\n                    Paths.get(CommentUtils.class.getResource(String.format(\"/templates/%s\", template)).toURI()));\n\n            return StringUtils.expandVars(content, model);\n        } catch (URISyntaxException | IOException e) {\n            throw new NuxeoException(e);\n        }\n    }", "author": "RSalem07", "createdAt": "2020-01-24T08:41:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODA0MTg2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU1MzIyOQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3664#discussion_r370553229", "bodyText": "Yes works fine for me \ud83d\udc4d", "author": "NourNuxeo", "createdAt": "2020-01-24T10:00:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODA0MTg2Nw=="}], "type": "inlineReview"}, {"oid": "697a86eb23e4674182e32a70c244ad71e281d2c6", "url": "https://github.com/nuxeo/nuxeo/commit/697a86eb23e4674182e32a70c244ad71e281d2c6", "message": "NXP-28255: add parent comment content in notification", "committedDate": "2020-01-17T17:19:46Z", "type": "forcePushed"}, {"oid": "2dbe14df0918f89bc97a5071b44ee135cc4a1525", "url": "https://github.com/nuxeo/nuxeo/commit/2dbe14df0918f89bc97a5071b44ee135cc4a1525", "message": "NXP-28255: add parent comment content in notification", "committedDate": "2020-01-20T07:00:46Z", "type": "forcePushed"}, {"oid": "06ec5ed310a33595613984cfc651d5cee9302a43", "url": "https://github.com/nuxeo/nuxeo/commit/06ec5ed310a33595613984cfc651d5cee9302a43", "message": "NXP-28255: add parent comment content in notification", "committedDate": "2020-01-20T10:13:19Z", "type": "forcePushed"}, {"oid": "ab56a1dcf6d2a8433bc4b2c108cb2fe471fe85a1", "url": "https://github.com/nuxeo/nuxeo/commit/ab56a1dcf6d2a8433bc4b2c108cb2fe471fe85a1", "message": "NXP-28255: add parent comment content in notification", "committedDate": "2020-01-22T16:43:50Z", "type": "forcePushed"}, {"oid": "fc1bf1252f171f23efe4d7c7df0cb7eed065a278", "url": "https://github.com/nuxeo/nuxeo/commit/fc1bf1252f171f23efe4d7c7df0cb7eed065a278", "message": "NXP-28255: add parent comment content in notification", "committedDate": "2020-01-23T15:02:39Z", "type": "forcePushed"}, {"oid": "98502bfddcf3f55c91ec4b9ebd0b752405baf93b", "url": "https://github.com/nuxeo/nuxeo/commit/98502bfddcf3f55c91ec4b9ebd0b752405baf93b", "message": "NXP-28255: add parent comment content in notification", "committedDate": "2020-01-24T10:05:01Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDczNDI3OQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3664#discussion_r370734279", "bodyText": "as discussed on F2F, we should checks the annotation type too here and in the quotedComments.ftl is why i proposed too to remove the whole quotedComments.ftl and integrate the whole controle in the base one and only check if parentAuthor / parentText is not empty and then add the its value. in this last point its mainly a proposal and others feedback are welcome", "author": "RSalem07", "createdAt": "2020-01-24T16:49:25Z", "path": "nuxeo-features/nuxeo-platform-comment/nuxeo-platform-comment/src/test/java/org/nuxeo/ecm/platform/comment/CommentUtils.java", "diffHunk": "@@ -131,15 +131,26 @@ public static void checkReceivedMail(List<MailMessage> mails, DocumentModel comm\n \n     public static String getExpectedMailContent(DocumentModel commentDocModel, DocumentModel commentedDocModel,\n             Event event, String commentEventType) {\n-        URL url = CommentUtils.class.getResource(\"/templates/commentNotificationMail.txt\");\n         try {\n-            String content = Files.readString(Paths.get(url.toURI()));\n+            String template = \"commentNotificationMail.txt\";\n+            Serializable parentAuthor = \"\";\n+            Serializable parentText = \"\";\n+            DocumentModel parentComment = (DocumentModel) event.getContext().getProperties().get(PARENT_COMMENT);\n+            if (COMMENT_DOC_TYPE.equals(parentComment.getType())) {", "originalCommit": "98502bfddcf3f55c91ec4b9ebd0b752405baf93b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDczODY2Mg==", "url": "https://github.com/nuxeo/nuxeo/pull/3664#discussion_r370738662", "bodyText": "The ftl is done and isolates the part of the quoted comments. That's what templating is handy for.\nIn this case I could spot the ftl check quickly thanks to its isolation rather than looking it up in baseComment.ftl.\nThe job is already done (the comment part is already in its own template). So it costs nothing to keep it as is.", "author": "NourNuxeo", "createdAt": "2020-01-24T16:58:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDczNDI3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTg2NzA5Nw==", "url": "https://github.com/nuxeo/nuxeo/pull/3664#discussion_r371867097", "bodyText": "quotedComments.ftl has been dropped", "author": "NourNuxeo", "createdAt": "2020-01-28T15:19:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDczNDI3OQ=="}], "type": "inlineReview"}, {"oid": "d1f9b491e6165bc9dc79c70ea52aaeca2a2ae90d", "url": "https://github.com/nuxeo/nuxeo/commit/d1f9b491e6165bc9dc79c70ea52aaeca2a2ae90d", "message": "NXP-28255: add parent comment content in notification", "committedDate": "2020-01-24T16:55:23Z", "type": "forcePushed"}, {"oid": "e63b94f9dbb6ca0de34b1d0c96419dfdb0956faa", "url": "https://github.com/nuxeo/nuxeo/commit/e63b94f9dbb6ca0de34b1d0c96419dfdb0956faa", "message": "NXP-28255: add parent comment content in notification", "committedDate": "2020-01-28T15:06:07Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTg2OTcxNw==", "url": "https://github.com/nuxeo/nuxeo/pull/3664#discussion_r371869717", "bodyText": "you can use instead it the hasSchema if you want as both annotation and comment contains the comment schema\nfor more further  i was think if we put check only here i mean in this method and just rely on the existence of the value in the ftl to avoid making the same thing twice see https://github.com/nuxeo/nuxeo/pull/3664/files#diff-b4cc6f294fb9a7dcb604d5682fb14bcaR27 why if we rely on the existence of Map#PARENT_COMMENT_AUTHOR and Map#PARENT_COMMENT_TEXT to add the section in the ftl", "author": "RSalem07", "createdAt": "2020-01-28T15:23:39Z", "path": "nuxeo-features/nuxeo-platform-comment/nuxeo-platform-comment/src/test/java/org/nuxeo/ecm/platform/comment/CommentUtils.java", "diffHunk": "@@ -131,15 +133,25 @@ public static void checkReceivedMail(List<MailMessage> mails, DocumentModel comm\n \n     public static String getExpectedMailContent(DocumentModel commentDocModel, DocumentModel commentedDocModel,\n             Event event, String commentEventType) {\n-        URL url = CommentUtils.class.getResource(\"/templates/commentNotificationMail.txt\");\n         try {\n-            String content = Files.readString(Paths.get(url.toURI()));\n-            var model = Map.of(\"COMMENT_AUTHOR\", commentDocModel.getPropertyValue(COMMENT_AUTHOR), //\n-                    \"COMMENT_ACTION\", COMMENT_ADDED.equals(commentEventType) ? \"added\" : \"updated\", //\n-                    \"COMMENTED_DOCUMENT\", commentedDocModel.getName(), //\n-                    \"COMMENT_DATE\", EVENT_DATE_FORMAT.format(Date.from(Instant.ofEpochMilli(event.getTime()))), //\n-                    \"COMMENT_TEXT\", commentDocModel.getPropertyValue(COMMENT_TEXT), //\n-                    \"COMMENT_SUBSCRIPTION_NAME\", COMMENT_ADDED.equals(commentEventType) ? \"New\" : \"Updated\");\n+            var model = new HashMap<String, Serializable>();\n+            model.put(\"COMMENT_AUTHOR\", commentDocModel.getPropertyValue(COMMENT_AUTHOR));\n+            model.put(\"COMMENT_ACTION\", COMMENT_ADDED.equals(commentEventType) ? \"added\" : \"updated\");\n+            model.put(\"COMMENTED_DOCUMENT\", commentedDocModel.getName());\n+            model.put(\"COMMENT_DATE\", EVENT_DATE_FORMAT.format(Date.from(Instant.ofEpochMilli(event.getTime()))));\n+            model.put(\"COMMENT_TEXT\", commentDocModel.getPropertyValue(COMMENT_TEXT));\n+            model.put(\"COMMENT_SUBSCRIPTION_NAME\", COMMENT_ADDED.equals(commentEventType) ? \"New\" : \"Updated\");\n+\n+            String template = \"commentNotificationMail.txt\";\n+            DocumentModel parentComment = (DocumentModel) event.getContext().getProperties().get(PARENT_COMMENT);\n+            if (COMMENT_DOC_TYPE.equals(parentComment.getType()) ||\n+                    ANNOTATION_DOC_TYPE.equals(parentComment.getType())) {", "originalCommit": "e63b94f9dbb6ca0de34b1d0c96419dfdb0956faa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTg4MjEwNA==", "url": "https://github.com/nuxeo/nuxeo/pull/3664#discussion_r371882104", "bodyText": "Map#PARENT_COMMENT_TEXT is not reachable from the ftl\nthe ftl always have the parentComment which might be the top level doc. So I need to check its type there to add the extra text or not", "author": "NourNuxeo", "createdAt": "2020-01-28T15:42:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTg2OTcxNw=="}], "type": "inlineReview"}, {"oid": "ed63044f2106292e19e48cd3d6db51ea81d33ad8", "url": "https://github.com/nuxeo/nuxeo/commit/ed63044f2106292e19e48cd3d6db51ea81d33ad8", "message": "NXP-28255: add parent comment content in notification", "committedDate": "2020-01-28T15:43:08Z", "type": "forcePushed"}, {"oid": "52f0978b519b4cd24a299e778328527ffaaf152c", "url": "https://github.com/nuxeo/nuxeo/commit/52f0978b519b4cd24a299e778328527ffaaf152c", "message": "NXP-28255: add parent comment content in notification", "committedDate": "2020-01-29T15:28:01Z", "type": "forcePushed"}, {"oid": "2604170ee107e12d2bd41b1267348ff6c01a6305", "url": "https://github.com/nuxeo/nuxeo/commit/2604170ee107e12d2bd41b1267348ff6c01a6305", "message": "NXP-28255: add parent comment content in notification", "committedDate": "2020-01-29T15:30:43Z", "type": "forcePushed"}, {"oid": "2e3e200762fe472a1f99a47c870a751d353a7c82", "url": "https://github.com/nuxeo/nuxeo/commit/2e3e200762fe472a1f99a47c870a751d353a7c82", "message": "NXP-28255: add parent comment content in notification", "committedDate": "2020-01-30T10:27:42Z", "type": "forcePushed"}, {"oid": "988b687cb828b0e7206ec0fcf07e7e8ed5034c52", "url": "https://github.com/nuxeo/nuxeo/commit/988b687cb828b0e7206ec0fcf07e7e8ed5034c52", "message": "NXP-28255: add parent comment content in notification", "committedDate": "2020-02-07T10:37:26Z", "type": "commit"}, {"oid": "988b687cb828b0e7206ec0fcf07e7e8ed5034c52", "url": "https://github.com/nuxeo/nuxeo/commit/988b687cb828b0e7206ec0fcf07e7e8ed5034c52", "message": "NXP-28255: add parent comment content in notification", "committedDate": "2020-02-07T10:37:26Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjMyNTM0Nw==", "url": "https://github.com/nuxeo/nuxeo/pull/3664#discussion_r376325347", "bodyText": "This features revealed an error in the test after flattening test methods. The first mail was checked instead of the 2nd in the case of autosubscription (so Tree implementation only). Since content was strictly identical, test was successful.\nIn this ticket that doesn't cut it anymore since replies have different template.\nShouldn't affect the backport as it doesn't have the mail tests and checks.", "author": "NourNuxeo", "createdAt": "2020-02-07T10:40:53Z", "path": "nuxeo-features/nuxeo-platform-comment/nuxeo-platform-comment/src/test/java/org/nuxeo/ecm/platform/comment/AbstractTestCommentNotification.java", "diffHunk": "@@ -192,7 +192,7 @@ public void shouldNotifyWithTheRightCommentedDocument() {\n             assertEquals(2, mails.size());\n             String expectedMailContent = getExpectedMailContent(replyDocumentModel, commentedDocumentModel,\n                     expectedEvent);\n-            assertEquals(expectedMailContent, getMailContent(mails.get(0)));\n+            assertEquals(expectedMailContent, getMailContent(mails.get(1)));", "originalCommit": "988b687cb828b0e7206ec0fcf07e7e8ed5034c52", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}