{"pr_number": 2849, "pr_title": "Implemented Format Scrutinizer tests using Mockito", "pr_createdAt": "2020-06-30T15:26:00Z", "pr_url": "https://github.com/OpenRefine/OpenRefine/pull/2849", "timeline": [{"oid": "770d623a658420621a709c18312fe3f6e0a66f2c", "url": "https://github.com/OpenRefine/OpenRefine/commit/770d623a658420621a709c18312fe3f6e0a66f2c", "message": "Implemented Format Scrutinizer tests using Mockito\n\nUpdated implementation of the scrutinzer & tests", "committedDate": "2020-07-01T08:24:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk2NzAzMQ==", "url": "https://github.com/OpenRefine/OpenRefine/pull/2849#discussion_r448967031", "bodyText": "It would be good to take advantage of the new architecture to use all the format constraints declared on the property, not just the first one.", "author": "wetneb", "createdAt": "2020-07-02T12:32:41Z", "path": "extensions/wikidata/src/org/openrefine/wikidata/qa/scrutinizers/FormatScrutinizer.java", "diffHunk": "@@ -62,7 +81,12 @@ protected Pattern getPattern(PropertyIdValue pid) {\n         if (_patterns.containsKey(pid)) {\n             return _patterns.get(pid);\n         } else {\n-            String regex = _fetcher.getFormatRegex(pid);\n+            String regex = null;\n+            List<Statement> statementList = _fetcher.getConstraintsByType(pid, FORMAT_CONSTRAINT_QID);\n+            if (!statementList.isEmpty()){\n+                FormatConstraint constraint = new FormatConstraint(statementList.get(0));\n+                regex = constraint.regularExpressionFormat;\n+            }", "originalCommit": "2d5612b9b5b0be2c2f0ebce1e1b0ff7441c48042", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a727e81dace7106138da0209a5bdc7a989bfa75c", "url": "https://github.com/OpenRefine/OpenRefine/commit/a727e81dace7106138da0209a5bdc7a989bfa75c", "message": "Testcases updated in FormatScrutinizerTest", "committedDate": "2020-07-02T13:59:50Z", "type": "commit"}]}