{"pr_number": 2629, "pr_title": "Add Multi-value Scrutinizer", "pr_createdAt": "2020-05-20T16:16:09Z", "pr_url": "https://github.com/OpenRefine/OpenRefine/pull/2629", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjgzODMzNw==", "url": "https://github.com/OpenRefine/OpenRefine/pull/2629#discussion_r432838337", "bodyText": "Should we use a lower severity level for warnings on existing items?", "author": "wetneb", "createdAt": "2020-05-30T12:39:14Z", "path": "extensions/wikidata/src/org/openrefine/wikidata/qa/scrutinizers/MultiValueScrutinizer.java", "diffHunk": "@@ -0,0 +1,50 @@\n+package org.openrefine.wikidata.qa.scrutinizers;\n+\n+import org.openrefine.wikidata.qa.QAWarning;\n+import org.openrefine.wikidata.updates.ItemUpdate;\n+import org.wikidata.wdtk.datamodel.interfaces.PropertyIdValue;\n+import org.wikidata.wdtk.datamodel.interfaces.Statement;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+public class MultiValueScrutinizer extends EditScrutinizer {\n+\n+    public static final String new_type = \"multi-valued-property-is-required-for-new-item\";\n+    public static final String existing_type = \"multi-valued-property-is-required-for-existing-item\";\n+\n+    @Override\n+    public void scrutinize(ItemUpdate update) {\n+        Map<PropertyIdValue, Integer> propertyCount = new HashMap<>();\n+\n+        for (Statement statement : update.getAddedStatements()) {\n+            PropertyIdValue pid = statement.getClaim().getMainSnak().getPropertyId();\n+            if (propertyCount.containsKey(pid)) {\n+                propertyCount.put(pid, propertyCount.get(pid) + 1);\n+            } else if (_fetcher.hasMultiValue(pid)) {\n+                propertyCount.put(pid, 1);\n+            }\n+        }\n+\n+        if (update.isNew()) {\n+            for (PropertyIdValue pid : propertyCount.keySet()) {\n+                if (propertyCount.get(pid) == 1) {\n+                    QAWarning issue = new QAWarning(new_type, pid.getId(), QAWarning.Severity.WARNING, 1);\n+                    issue.setProperty(\"property_entity\", pid);\n+                    issue.setProperty(\"example_entity\", update.getItemId());\n+                    addIssue(issue);\n+                }\n+            }\n+        } else {\n+            for (PropertyIdValue pid : propertyCount.keySet()) {\n+                if (propertyCount.get(pid) == 1) {\n+                    QAWarning issue = new QAWarning(existing_type, pid.getId(), QAWarning.Severity.WARNING, 1);", "originalCommit": "1439e41328f731409764e09bcd7f1dedd1bb4bd3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjgzOTQ4Ng==", "url": "https://github.com/OpenRefine/OpenRefine/pull/2629#discussion_r432839486", "bodyText": "Very sorry, I didn't get your point. Can you please explain a bit more?", "author": "darecoder", "createdAt": "2020-05-30T12:54:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjgzODMzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg0Mzc0Mg==", "url": "https://github.com/OpenRefine/OpenRefine/pull/2629#discussion_r432843742", "bodyText": "I just thought that because the warnings we raise on existing items can potentially be false positives, we could set them to a lower severity level than QAWarning.Severity.WARNING, so that they do not look too scary to users. (The severity level determines the icon used in the issues tab). But that is only a suggestion, it is not a big deal if we keep the same level.", "author": "wetneb", "createdAt": "2020-05-30T13:59:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjgzODMzNw=="}], "type": "inlineReview"}, {"oid": "9396996a3f04af4110ce089b09d4abe8704f3e6e", "url": "https://github.com/OpenRefine/OpenRefine/commit/9396996a3f04af4110ce089b09d4abe8704f3e6e", "message": "Added Multi-value Constraint", "committedDate": "2020-05-30T17:47:12Z", "type": "commit"}]}