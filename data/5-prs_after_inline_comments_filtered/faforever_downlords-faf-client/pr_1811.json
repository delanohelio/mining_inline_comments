{"pr_number": 1811, "pr_title": "Feature/#1810 replays checkbox", "pr_createdAt": "2020-07-05T12:24:04Z", "pr_url": "https://github.com/FAForever/downlords-faf-client/pull/1811", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg5OTk0Ng==", "url": "https://github.com/FAForever/downlords-faf-client/pull/1811#discussion_r449899946", "bodyText": "Is there no default formatter for this?", "author": "1-alex98", "createdAt": "2020-07-05T17:24:30Z", "path": "src/main/java/com/faforever/client/vault/search/SearchController.java", "diffHunk": "@@ -223,7 +237,16 @@ private String buildQuery(SpecificationController initialSpecification, List<Log\n       }\n       condition = currentCondition;\n     }\n-    return (String) condition.get().query(new RSQLVisitor());\n+    if (lastYearQuery.isEmpty()) {\n+      return (String) condition.get().query(new RSQLVisitor());\n+    }\n+    return String.format(\"%s;%s\", condition.get().query(new RSQLVisitor()), lastYearQuery);\n+  }\n+\n+  private String generateOnlyLastYearQuery() {\n+    OffsetDateTime time = OffsetDateTime.now();\n+    time = time.minusYears(1L);\n+    return END_TIME_QUERY + time.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd'T'HH:mm:ss'Z'\"));", "originalCommit": "315dcb064b46c62a7db473c68642e6d12941897b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkwMTQyNw==", "url": "https://github.com/FAForever/downlords-faf-client/pull/1811#discussion_r449901427", "bodyText": "not even needed with my suggestion below", "author": "1-alex98", "createdAt": "2020-07-05T17:41:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg5OTk0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkwMTM0NA==", "url": "https://github.com/FAForever/downlords-faf-client/pull/1811#discussion_r449901344", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (lastYearQuery.isEmpty()) {\n          \n          \n            \n                  return (String) condition.get().query(new RSQLVisitor());\n          \n          \n            \n                }\n          \n          \n            \n               if(isLastYearChecked){\n          \n          \n            \n                  InstantProperty endTime = qBuilder.instant(\"endTime\");\n          \n          \n            \n                  Condition conditionForLastYear = endTime.after(Instant.now().minus(1, ChronoUnit.YEARS), false);\n          \n          \n            \n                  qBuilder.and(condition.get(), conditionForLastYear);\n          \n          \n            \n                }", "author": "1-alex98", "createdAt": "2020-07-05T17:40:07Z", "path": "src/main/java/com/faforever/client/vault/search/SearchController.java", "diffHunk": "@@ -223,7 +237,16 @@ private String buildQuery(SpecificationController initialSpecification, List<Log\n       }\n       condition = currentCondition;\n     }\n-    return (String) condition.get().query(new RSQLVisitor());\n+    if (lastYearQuery.isEmpty()) {\n+      return (String) condition.get().query(new RSQLVisitor());\n+    }", "originalCommit": "315dcb064b46c62a7db473c68642e6d12941897b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkwMTM5Ng==", "url": "https://github.com/FAForever/downlords-faf-client/pull/1811#discussion_r449901396", "bodyText": "or true for >=", "author": "1-alex98", "createdAt": "2020-07-05T17:40:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkwMTM0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ3NzYxNg==", "url": "https://github.com/FAForever/downlords-faf-client/pull/1811#discussion_r450477616", "bodyText": "Why delete?", "author": "1-alex98", "createdAt": "2020-07-06T21:00:57Z", "path": "src/main/java/com/faforever/client/vault/search/SearchController.java", "diffHunk": "@@ -42,9 +43,7 @@\n   private final UiService uiService;\n   private final I18n i18n;\n   private final PreferencesService preferencesService;\n-  /**\n-   * The first query element.\n-   */", "originalCommit": "eeca5745678924be39bfb873886e6309e4db1af9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAwODk4Nw==", "url": "https://github.com/FAForever/downlords-faf-client/pull/1811#discussion_r451008987", "bodyText": "This line throws an Exception:\nInvalid use of argument matchers! 0 matchers expected, 1 recorded: -> at com.faforever.client.vault.search.SearchControllerTest.testBuildQueryWithCheckboxAndQuery(SearchControllerTest.java:128)\nWhen using qBuilder.instant(\"endTime\") as this Exception suggests, a NullPointerException is thrown (presumably because of the missing Matcher):\njava.lang.NullPointerException at com.github.rutledgepaulv.qbuilders.utilities.ObjectUtils.lambda$null$1(ObjectUtils.java:42) at java.base/java.util.stream.MatchOps$2MatchSink.accept(MatchOps.java:119) at java.base/java.util.stream.Streams$RangeIntSpliterator.tryAdvance(Streams.java:82) at java.base/java.util.stream.IntPipeline.forEachWithCancel(IntPipeline.java:163) at java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502) at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488) at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) at java.base/java.util.stream.MatchOps$MatchOp.evaluateSequential(MatchOps.java:230) at java.base/java.util.stream.MatchOps$MatchOp.evaluateSequential(MatchOps.java:196) at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) at java.base/java.util.stream.IntPipeline.allMatch(IntPipeline.java:518) at com.github.rutledgepaulv.qbuilders.utilities.ObjectUtils.lambda$init$2(ObjectUtils.java:42) at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:176) at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) at java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958) at java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127) at java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502) at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488) at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) at java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150) at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) at java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543) at com.github.rutledgepaulv.qbuilders.utilities.ObjectUtils.init(ObjectUtils.java:43) at com.github.rutledgepaulv.qbuilders.builders.QBuilder.prop(QBuilder.java:97) at com.github.rutledgepaulv.qbuilders.builders.QBuilder.instant(QBuilder.java:85) at com.faforever.client.vault.search.SearchControllerTest.testBuildQueryWithCheckboxAndQuery(SearchControllerTest.java:128)", "author": "IAmAlife", "createdAt": "2020-07-07T16:55:36Z", "path": "src/test/java/com/faforever/client/vault/search/SearchControllerTest.java", "diffHunk": "@@ -125,7 +125,7 @@ public void testBuildQueryWithCheckboxAndQuery() throws Exception {\n \n     when(specificationController.appendTo(any())).thenReturn(Optional.of(condition));\n     when(condition.and()).thenReturn(qBuilder);\n-    when(qBuilder.instant(eq(\"endTime\"))).thenReturn(eq(instant));\n+    when(qBuilder.instant(eq(\"endTime\"))).thenReturn(instant);", "originalCommit": "f657c92affb46ed070a5afcfa098b7f4f24419a5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f7403e13f98e2db7e0f913e26fa78d2ca323e37a", "url": "https://github.com/FAForever/downlords-faf-client/commit/f7403e13f98e2db7e0f913e26fa78d2ca323e37a", "message": "Added \"only from last year\" checkbox to online replay vault\n\nFixes #1810", "committedDate": "2020-07-14T21:22:01Z", "type": "forcePushed"}, {"oid": "9b84aa201a9ec94407ceccdcecefd5a1681a01f8", "url": "https://github.com/FAForever/downlords-faf-client/commit/9b84aa201a9ec94407ceccdcecefd5a1681a01f8", "message": "Added \"only from last year\" checkbox to online replay vault\n\nFixes #1810\n\nCo-Authored-By: tarmandan <58087411+tarmandan@users.noreply.github.com>\nCo-Authored-By: aclrian <32142988+aclrian@users.noreply.github.com>\nCo-Authored-By: Jia Hong Frenki Zhang <64331094+frezha@users.noreply.github.com>", "committedDate": "2020-07-15T12:49:59Z", "type": "forcePushed"}, {"oid": "8aea72a3cb279d7bfb7793385a358302bba2d8d8", "url": "https://github.com/FAForever/downlords-faf-client/commit/8aea72a3cb279d7bfb7793385a358302bba2d8d8", "message": "Added \"only from last year\" checkbox to online replay vault\n\nFixes #1810\n\nCo-Authored-By: tarmandan <58087411+tarmandan@users.noreply.github.com>\nCo-Authored-By: aclrian <32142988+aclrian@users.noreply.github.com>\nCo-Authored-By: Jia Hong Frenki Zhang <64331094+frezha@users.noreply.github.com>", "committedDate": "2020-07-17T20:11:09Z", "type": "commit"}, {"oid": "8aea72a3cb279d7bfb7793385a358302bba2d8d8", "url": "https://github.com/FAForever/downlords-faf-client/commit/8aea72a3cb279d7bfb7793385a358302bba2d8d8", "message": "Added \"only from last year\" checkbox to online replay vault\n\nFixes #1810\n\nCo-Authored-By: tarmandan <58087411+tarmandan@users.noreply.github.com>\nCo-Authored-By: aclrian <32142988+aclrian@users.noreply.github.com>\nCo-Authored-By: Jia Hong Frenki Zhang <64331094+frezha@users.noreply.github.com>", "committedDate": "2020-07-17T20:11:09Z", "type": "forcePushed"}]}