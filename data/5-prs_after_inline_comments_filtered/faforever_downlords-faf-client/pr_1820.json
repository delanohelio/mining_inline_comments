{"pr_number": 1820, "pr_title": "Feature/#1763 local replays pagination", "pr_createdAt": "2020-07-10T08:27:44Z", "pr_url": "https://github.com/FAForever/downlords-faf-client/pull/1820", "timeline": [{"oid": "9abfc3a100ce2c0928fd2a7e3dab5112bf12b1b9", "url": "https://github.com/FAForever/downlords-faf-client/commit/9abfc3a100ce2c0928fd2a7e3dab5112bf12b1b9", "message": "fixed not showing last page in some cases", "committedDate": "2020-07-10T12:15:46Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk4MzA3Mw==", "url": "https://github.com/FAForever/downlords-faf-client/pull/1820#discussion_r452983073", "bodyText": "Passing an UI Elements to a service should never happen!", "author": "1-alex98", "createdAt": "2020-07-10T17:41:09Z", "path": "src/main/java/com/faforever/client/replay/ReplayService.java", "diffHunk": "@@ -139,19 +142,27 @@\n   private final ExecutorService executorService;\n   private Thread directoryWatcherThread;\n   private WatchService watchService;\n-  protected List<Replay> localReplays = new ArrayList<Replay>();\n+  protected List<Replay> localReplays = new ArrayList<>();\n \n-  public void startLoadingAndWatchingLocalReplays() {\n+  public void startLoadingAndWatchingLocalReplays(Pagination pagination) {", "originalCommit": "6612d1d9906114382b1c41941e6508ff94ab90e2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk4MzU4Ng==", "url": "https://github.com/FAForever/downlords-faf-client/pull/1820#discussion_r452983586", "bodyText": "Publish page count here maybe...", "author": "1-alex98", "createdAt": "2020-07-10T17:42:18Z", "path": "src/main/java/com/faforever/client/replay/ReplayService.java", "diffHunk": "@@ -139,19 +142,27 @@\n   private final ExecutorService executorService;\n   private Thread directoryWatcherThread;\n   private WatchService watchService;\n-  protected List<Replay> localReplays = new ArrayList<Replay>();\n+  protected List<Replay> localReplays = new ArrayList<>();\n \n-  public void startLoadingAndWatchingLocalReplays() {\n+  public void startLoadingAndWatchingLocalReplays(Pagination pagination) {\n     Path replaysDirectory = preferencesService.getReplaysDirectory();\n     if (Files.notExists(replaysDirectory)) {\n       noCatch(() -> createDirectories(replaysDirectory));\n     }\n \n+    String replayFileGlob = clientProperties.getReplay().getReplayFileGlob();\n+    try (DirectoryStream<Path> directoryStream = Files.newDirectoryStream(replaysDirectory, replayFileGlob)) {\n+      final int pageCount = (int) Math.ceil((StreamSupport.stream(directoryStream.spliterator(), false).count() / (double) REPLAYS_PER_PAGE));\n+      Platform.runLater(() -> pagination.setPageCount(pageCount));\n+    } catch (IOException e) {\n+      logger.error(\"Failed loading total amount of replays\", e);\n+    }\n+\n     LoadLocalReplaysTask loadLocalReplaysTask = applicationContext.getBean(LoadLocalReplaysTask.class);\n-    taskService.submitTask(loadLocalReplaysTask).getFuture().thenAccept( replays -> {\n+    taskService.submitTask(loadLocalReplaysTask).getFuture().thenAccept(replays -> {\n       localReplays.clear();\n       localReplays.addAll(replays);\n-      publisher.publishEvent(new LocalReplaysChangedEvent(this, replays, new ArrayList<Replay>()));\n+      publisher.publishEvent(new LocalReplaysChangedEvent(this, replays, new ArrayList<>()));", "originalCommit": "6612d1d9906114382b1c41941e6508ff94ab90e2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk4NzgwNw==", "url": "https://github.com/FAForever/downlords-faf-client/pull/1820#discussion_r452987807", "bodyText": "I am surprised this works with an event publisher. Probably the Controller a singleton and that's why it works. Whatever let's leave it like this.", "author": "1-alex98", "createdAt": "2020-07-10T17:51:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk4MzU4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk4Mzg5NQ==", "url": "https://github.com/FAForever/downlords-faf-client/pull/1820#discussion_r452983895", "bodyText": "This is not an error, rather warning I say", "author": "1-alex98", "createdAt": "2020-07-10T17:42:58Z", "path": "src/main/java/com/faforever/client/replay/ReplayService.java", "diffHunk": "@@ -139,19 +142,27 @@\n   private final ExecutorService executorService;\n   private Thread directoryWatcherThread;\n   private WatchService watchService;\n-  protected List<Replay> localReplays = new ArrayList<Replay>();\n+  protected List<Replay> localReplays = new ArrayList<>();\n \n-  public void startLoadingAndWatchingLocalReplays() {\n+  public void startLoadingAndWatchingLocalReplays(Pagination pagination) {\n     Path replaysDirectory = preferencesService.getReplaysDirectory();\n     if (Files.notExists(replaysDirectory)) {\n       noCatch(() -> createDirectories(replaysDirectory));\n     }\n \n+    String replayFileGlob = clientProperties.getReplay().getReplayFileGlob();\n+    try (DirectoryStream<Path> directoryStream = Files.newDirectoryStream(replaysDirectory, replayFileGlob)) {\n+      final int pageCount = (int) Math.ceil((StreamSupport.stream(directoryStream.spliterator(), false).count() / (double) REPLAYS_PER_PAGE));\n+      Platform.runLater(() -> pagination.setPageCount(pageCount));\n+    } catch (IOException e) {\n+      logger.error(\"Failed loading total amount of replays\", e);", "originalCommit": "6612d1d9906114382b1c41941e6508ff94ab90e2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk4NDk4OA==", "url": "https://github.com/FAForever/downlords-faf-client/pull/1820#discussion_r452984988", "bodyText": "Have u thought about what happens if a user drops a new replay into his replay folder... that is what happens here.", "author": "1-alex98", "createdAt": "2020-07-10T17:45:21Z", "path": "src/main/java/com/faforever/client/replay/ReplayService.java", "diffHunk": "@@ -186,8 +207,8 @@ protected Thread startDirectoryWatcher(Path replaysDirectory) throws IOException\n \n   @VisibleForTesting\n   protected void onLocalReplaysWatchEvent(WatchKey key) {", "originalCommit": "6612d1d9906114382b1c41941e6508ff94ab90e2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk4NTU1MA==", "url": "https://github.com/FAForever/downlords-faf-client/pull/1820#discussion_r452985550", "bodyText": "Maybe u can simplify this method by just going back to the first page \ud83e\udd14", "author": "1-alex98", "createdAt": "2020-07-10T17:46:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk4NDk4OA=="}], "type": "inlineReview"}, {"oid": "16a024304acc0cfd3fb1916b63db6ba69c3dd7a8", "url": "https://github.com/FAForever/downlords-faf-client/commit/16a024304acc0cfd3fb1916b63db6ba69c3dd7a8", "message": "Local Replays Pagination\n\nFixes #1763\n\nCo-Authored-By: tarmandan <58087411+tarmandan@users.noreply.github.com>\nCo-Authored-By: aclrian <32142988+aclrian@users.noreply.github.com>\nCo-Authored-By: Jia Hong Frenki Zhang <64331094+frezha@users.noreply.github.com>", "committedDate": "2020-07-15T15:54:50Z", "type": "forcePushed"}, {"oid": "0d929cf1e30d2d8c89667fc110954e58b76f33db", "url": "https://github.com/FAForever/downlords-faf-client/commit/0d929cf1e30d2d8c89667fc110954e58b76f33db", "message": "Alex refactor", "committedDate": "2020-07-16T17:15:18Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkyNTEwOQ==", "url": "https://github.com/FAForever/downlords-faf-client/pull/1820#discussion_r455925109", "bodyText": "whys that a double", "author": "1-alex98", "createdAt": "2020-07-16T16:43:52Z", "path": "src/main/java/com/faforever/client/replay/ReplayService.java", "diffHunk": "@@ -139,19 +140,29 @@\n   private final ExecutorService executorService;\n   private Thread directoryWatcherThread;\n   private WatchService watchService;\n-  protected List<Replay> localReplays = new ArrayList<Replay>();\n+  protected List<Replay> localReplays = new ArrayList<>();\n+  private double localReplaysItemsSize;", "originalCommit": "16a024304acc0cfd3fb1916b63db6ba69c3dd7a8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQ0ODA4NQ==", "url": "https://github.com/FAForever/downlords-faf-client/pull/1820#discussion_r456448085", "bodyText": "Written to but never read, right? If so remove", "author": "1-alex98", "createdAt": "2020-07-17T13:38:57Z", "path": "src/main/java/com/faforever/client/replay/ReplayService.java", "diffHunk": "@@ -134,36 +134,47 @@\n   private final FafService fafService;\n   private final ModService modService;\n   private final MapService mapService;\n-  private final ApplicationEventPublisher publisher;\n+  private final EventBus eventBus;\n   private final MapGeneratorService mapGeneratorService;\n-  private final ExecutorService executorService;\n   private Thread directoryWatcherThread;\n-  private WatchService watchService;\n-  protected List<Replay> localReplays = new ArrayList<Replay>();\n+  protected List<Replay> localReplays = new ArrayList<>();", "originalCommit": "26cb7a73ab4bb7dc851efd6eedc57bb8c5dc2324", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQ0MzM1OQ==", "url": "https://github.com/FAForever/downlords-faf-client/pull/1820#discussion_r459443359", "bodyText": "Files.list", "author": "1-alex98", "createdAt": "2020-07-23T13:21:04Z", "path": "src/main/java/com/faforever/client/replay/ReplayService.java", "diffHunk": "@@ -134,36 +134,47 @@\n   private final FafService fafService;\n   private final ModService modService;\n   private final MapService mapService;\n-  private final ApplicationEventPublisher publisher;\n+  private final EventBus eventBus;\n   private final MapGeneratorService mapGeneratorService;\n-  private final ExecutorService executorService;\n   private Thread directoryWatcherThread;\n-  private WatchService watchService;\n-  protected List<Replay> localReplays = new ArrayList<Replay>();\n+  protected List<Replay> localReplays = new ArrayList<>();\n+  private double localReplaysItemsSize;\n+  private int pageCountLocalReplays;\n \n   public void startLoadingAndWatchingLocalReplays() {\n     Path replaysDirectory = preferencesService.getReplaysDirectory();\n     if (Files.notExists(replaysDirectory)) {\n       noCatch(() -> createDirectories(replaysDirectory));\n     }\n \n-    LoadLocalReplaysTask loadLocalReplaysTask = applicationContext.getBean(LoadLocalReplaysTask.class);\n-    taskService.submitTask(loadLocalReplaysTask).getFuture().thenAccept( replays -> {\n-      localReplays.clear();\n-      localReplays.addAll(replays);\n-      publisher.publishEvent(new LocalReplaysChangedEvent(this, replays, new ArrayList<Replay>()));\n-    });\n-\n     try {\n       Optional.ofNullable(directoryWatcherThread).ifPresent(Thread::interrupt);\n       directoryWatcherThread = startDirectoryWatcher(replaysDirectory);\n     } catch (IOException e) {\n       logger.warn(\"Failed to start watching the local replays directory\");\n     }\n+\n+    reloadLocalReplays();\n   }\n \n-  public Collection<Replay> getLocalReplays() {\n-    return localReplays;\n+  private void reloadLocalReplays() {\n+    Path replaysDirectory = preferencesService.getReplaysDirectory();\n+    pageCountLocalReplays = 1;\n+    String replayFileGlob = clientProperties.getReplay().getReplayFileGlob();\n+    try (DirectoryStream<Path> directoryStream = Files.newDirectoryStream(replaysDirectory, replayFileGlob)) {", "originalCommit": "26cb7a73ab4bb7dc851efd6eedc57bb8c5dc2324", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b738e1c87f12a46199986c50b657a3625070f63d", "url": "https://github.com/FAForever/downlords-faf-client/commit/b738e1c87f12a46199986c50b657a3625070f63d", "message": "Implement Vault Entity Pagination", "committedDate": "2020-11-07T04:54:37Z", "type": "forcePushed"}, {"oid": "bdfea8e9f94f0c24889bbb5ed92fcb1274ea3346", "url": "https://github.com/FAForever/downlords-faf-client/commit/bdfea8e9f94f0c24889bbb5ed92fcb1274ea3346", "message": "Local Replays Pagination\n\nFixes #1763\n\nCo-Authored-By: tarmandan <58087411+tarmandan@users.noreply.github.com>\nCo-Authored-By: aclrian <32142988+aclrian@users.noreply.github.com>\nCo-Authored-By: Jia Hong Frenki Zhang <64331094+frezha@users.noreply.github.com>", "committedDate": "2020-11-07T04:55:54Z", "type": "commit"}, {"oid": "43b649293fade8a3b4a9d20cdb79f78be7df13cd", "url": "https://github.com/FAForever/downlords-faf-client/commit/43b649293fade8a3b4a9d20cdb79f78be7df13cd", "message": "Implement Vault Entity Pagination", "committedDate": "2020-11-07T04:55:54Z", "type": "commit"}, {"oid": "43b649293fade8a3b4a9d20cdb79f78be7df13cd", "url": "https://github.com/FAForever/downlords-faf-client/commit/43b649293fade8a3b4a9d20cdb79f78be7df13cd", "message": "Implement Vault Entity Pagination", "committedDate": "2020-11-07T04:55:54Z", "type": "forcePushed"}, {"oid": "ba4f6edfdd0ee8b7d990a42bfb2c49f7d177bbb4", "url": "https://github.com/FAForever/downlords-faf-client/commit/ba4f6edfdd0ee8b7d990a42bfb2c49f7d177bbb4", "message": "Remove unused event", "committedDate": "2020-11-07T04:58:04Z", "type": "commit"}, {"oid": "89ffa8bbd8bd496ba33882bd487e538c0529646e", "url": "https://github.com/FAForever/downlords-faf-client/commit/89ffa8bbd8bd496ba33882bd487e538c0529646e", "message": "Remove unnecessary stubbing", "committedDate": "2020-11-07T23:34:01Z", "type": "commit"}]}