{"pr_number": 1542, "pr_title": "Properly handle futures when the local replay directory has changed", "pr_createdAt": "2020-01-01T20:19:32Z", "pr_url": "https://github.com/FAForever/downlords-faf-client/pull/1542", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjM0OTk1Mw==", "url": "https://github.com/FAForever/downlords-faf-client/pull/1542#discussion_r362349953", "bodyText": "thenRun", "author": "1-alex98", "createdAt": "2020-01-01T23:41:57Z", "path": "src/main/java/com/faforever/client/replay/ReplayService.java", "diffHunk": "@@ -201,8 +200,21 @@ private void onLocalReplaysWatchEvent(WatchKey key) {\n       }\n     }\n \n-    localReplays.addAll(newReplays);\n-    publisher.publishEvent(new LocalReplaysChangedEvent(this, newReplays, deletedReplays));\n+    CompletableFuture[] replayFuturesArray = newReplaysFutures.toArray(new CompletableFuture[newReplaysFutures.size()]);\n+    CompletableFuture<List<Replay>> newReplaysFuture = CompletableFuture.allOf(replayFuturesArray)\n+        .thenApply(ignoredVoid ->", "originalCommit": "2fdd64866bdb1c9f2637b02627f884f3b22c1dae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjQ2MjgyOA==", "url": "https://github.com/FAForever/downlords-faf-client/pull/1542#discussion_r362462828", "bodyText": "Why?", "author": "andreasley", "createdAt": "2020-01-02T12:51:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjM0OTk1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjU3OTUxMA==", "url": "https://github.com/FAForever/downlords-faf-client/pull/1542#discussion_r362579510", "bodyText": "Sorry i am wrong... but there is a method that takes a lambda without the parameter ignoredVoid. Use this method instead not totally sure whats it called thenCombine maybe", "author": "1-alex98", "createdAt": "2020-01-02T18:34:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjM0OTk1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjU5NjM5NQ==", "url": "https://github.com/FAForever/downlords-faf-client/pull/1542#discussion_r362596395", "bodyText": "ok whatever ignore me", "author": "1-alex98", "createdAt": "2020-01-02T19:24:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjM0OTk1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjM0OTk3MQ==", "url": "https://github.com/FAForever/downlords-faf-client/pull/1542#discussion_r362349971", "bodyText": "CompletableFuture\n.allOf", "author": "1-alex98", "createdAt": "2020-01-01T23:42:49Z", "path": "src/main/java/com/faforever/client/replay/ReplayService.java", "diffHunk": "@@ -201,8 +200,21 @@ private void onLocalReplaysWatchEvent(WatchKey key) {\n       }\n     }\n \n-    localReplays.addAll(newReplays);\n-    publisher.publishEvent(new LocalReplaysChangedEvent(this, newReplays, deletedReplays));\n+    CompletableFuture[] replayFuturesArray = newReplaysFutures.toArray(new CompletableFuture[newReplaysFutures.size()]);\n+    CompletableFuture<List<Replay>> newReplaysFuture = CompletableFuture.allOf(replayFuturesArray)\n+        .thenApply(ignoredVoid ->\n+            newReplaysFutures.stream()\n+                .map(future -> future.join())", "originalCommit": "2fdd64866bdb1c9f2637b02627f884f3b22c1dae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjQ2MjgzNg==", "url": "https://github.com/FAForever/downlords-faf-client/pull/1542#discussion_r362462836", "bodyText": "What?", "author": "andreasley", "createdAt": "2020-01-02T12:51:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjM0OTk3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjU3ODkwOA==", "url": "https://github.com/FAForever/downlords-faf-client/pull/1542#discussion_r362578908", "bodyText": "To join CompletedFutures use CompletableFuture.allOf()", "author": "1-alex98", "createdAt": "2020-01-02T18:33:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjM0OTk3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjYzMzE2Nw==", "url": "https://github.com/FAForever/downlords-faf-client/pull/1542#discussion_r362633167", "bodyText": "Which is exactly what I'm doing. Hence my confusion. :)", "author": "andreasley", "createdAt": "2020-01-02T21:17:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjM0OTk3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjY1Njg0MA==", "url": "https://github.com/FAForever/downlords-faf-client/pull/1542#discussion_r362656840", "bodyText": "Should read the code closer sorry lemme check again", "author": "1-alex98", "createdAt": "2020-01-02T22:40:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjM0OTk3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA2MDU5NQ==", "url": "https://github.com/FAForever/downlords-faf-client/pull/1542#discussion_r363060595", "bodyText": "use method reference\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .map(future -> future.join())\n          \n          \n            \n                            CompletableFuture::join", "author": "1-alex98", "createdAt": "2020-01-04T23:36:15Z", "path": "src/main/java/com/faforever/client/replay/ReplayService.java", "diffHunk": "@@ -201,8 +201,21 @@ private void onLocalReplaysWatchEvent(WatchKey key) {\n       }\n     }\n \n-    localReplays.addAll(newReplays);\n-    publisher.publishEvent(new LocalReplaysChangedEvent(this, newReplays, deletedReplays));\n+    CompletableFuture[] replayFuturesArray = newReplaysFutures.toArray(new CompletableFuture[newReplaysFutures.size()]);\n+    CompletableFuture<List<Replay>> newReplaysFuture = CompletableFuture.allOf(replayFuturesArray)\n+        .thenApply(ignoredVoid ->\n+            newReplaysFutures.stream()\n+                .map(future -> future.join())", "originalCommit": "9bd706aa5a0d7f2c207ece86b6f8ad02033570ed", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA2MjAzNg==", "url": "https://github.com/FAForever/downlords-faf-client/pull/1542#discussion_r363062036", "bodyText": "Well we wanna avoid having null objects in list because it crashes UI", "author": "1-alex98", "createdAt": "2020-01-05T00:21:26Z", "path": "src/main/java/com/faforever/client/replay/ReplayService.java", "diffHunk": "@@ -205,7 +202,8 @@ protected void onLocalReplaysWatchEvent(WatchKey key) {\n     CompletableFuture<List<Replay>> newReplaysFuture = CompletableFuture.allOf(replayFuturesArray)\n         .thenApply(ignoredVoid ->\n             newReplaysFutures.stream()\n-                .map(future -> future.join())\n+                .map(CompletableFuture::join)\n+                .filter(Objects::nonNull)", "originalCommit": "108e07a5adb577284f37bec08216336270dce26b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA2MjA0Ng==", "url": "https://github.com/FAForever/downlords-faf-client/pull/1542#discussion_r363062046", "bodyText": "Just a quick way of writting it", "author": "1-alex98", "createdAt": "2020-01-05T00:21:42Z", "path": "src/main/java/com/faforever/client/replay/ReplayService.java", "diffHunk": "@@ -275,21 +273,21 @@ static String guessModByFileName(String fileName) {\n       List<CompletableFuture<Replay>> replayFutures = StreamSupport.stream(directoryStream.spliterator(), false)\n           .sorted(Comparator.comparing(path -> noCatch(() -> Files.getLastModifiedTime((Path) path))).reversed())\n           .limit(MAX_REPLAYS)\n-          .map( replayFile -> tryLoadingLocalReplay(replayFile))\n+          .map(this::tryLoadingLocalReplay)", "originalCommit": "108e07a5adb577284f37bec08216336270dce26b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA2MjA0OQ==", "url": "https://github.com/FAForever/downlords-faf-client/pull/1542#discussion_r363062049", "bodyText": "again see top", "author": "1-alex98", "createdAt": "2020-01-05T00:21:51Z", "path": "src/main/java/com/faforever/client/replay/ReplayService.java", "diffHunk": "@@ -275,21 +273,21 @@ static String guessModByFileName(String fileName) {\n       List<CompletableFuture<Replay>> replayFutures = StreamSupport.stream(directoryStream.spliterator(), false)\n           .sorted(Comparator.comparing(path -> noCatch(() -> Files.getLastModifiedTime((Path) path))).reversed())\n           .limit(MAX_REPLAYS)\n-          .map( replayFile -> tryLoadingLocalReplay(replayFile))\n+          .map(this::tryLoadingLocalReplay)\n           .filter(e -> !e.isCompletedExceptionally())\n           .collect(Collectors.toList());\n \n       CompletableFuture[] replayFuturesArray = replayFutures.toArray(new CompletableFuture[replayFutures.size()]);\n       return CompletableFuture.allOf(replayFuturesArray)\n           .thenApply(ignoredVoid ->\n               replayFutures.stream()\n-                  .map(future -> future.join())\n+                  .map(CompletableFuture::join)\n+                  .filter(Objects::nonNull)", "originalCommit": "108e07a5adb577284f37bec08216336270dce26b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA2MjA4Mw==", "url": "https://github.com/FAForever/downlords-faf-client/pull/1542#discussion_r363062083", "bodyText": "We certainly dont wanna throw here if we do then the whole loacl replay vault breaks, also there are legimit cases where a replay has no map. One is coop the maps are part of the game mod and hence are not found locally nor on the server", "author": "1-alex98", "createdAt": "2020-01-05T00:23:00Z", "path": "src/main/java/com/faforever/client/replay/ReplayService.java", "diffHunk": "@@ -300,14 +298,14 @@ static String guessModByFileName(String fileName) {\n       return CompletableFuture.allOf(featuredModFuture, mapBeanFuture).thenApply(ignoredVoid  -> {\n         Optional<MapBean> mapBean = mapBeanFuture.join();\n         if (!mapBean.isPresent()) {\n-          throw new CompletionException(new FileNotFoundException());\n+          logger.warn(\"Could not find map for replay file '{}'\", replayFile);", "originalCommit": "108e07a5adb577284f37bec08216336270dce26b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA2MjA5Nw==", "url": "https://github.com/FAForever/downlords-faf-client/pull/1542#discussion_r363062097", "bodyText": "Let's just say the map is null", "author": "1-alex98", "createdAt": "2020-01-05T00:23:14Z", "path": "src/main/java/com/faforever/client/replay/ReplayService.java", "diffHunk": "@@ -300,14 +298,14 @@ static String guessModByFileName(String fileName) {\n       return CompletableFuture.allOf(featuredModFuture, mapBeanFuture).thenApply(ignoredVoid  -> {\n         Optional<MapBean> mapBean = mapBeanFuture.join();\n         if (!mapBean.isPresent()) {\n-          throw new CompletionException(new FileNotFoundException());\n+          logger.warn(\"Could not find map for replay file '{}'\", replayFile);\n         }\n-        return new Replay(replayInfo, replayFile, featuredModFuture.join(), mapBean.get());\n+        return new Replay(replayInfo, replayFile, featuredModFuture.join(), mapBean.orElse(null));", "originalCommit": "108e07a5adb577284f37bec08216336270dce26b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA2MjExOA==", "url": "https://github.com/FAForever/downlords-faf-client/pull/1542#discussion_r363062118", "bodyText": "Don't throw others wise replay vault stays empty, return null which is gonna be filtered out", "author": "1-alex98", "createdAt": "2020-01-05T00:23:52Z", "path": "src/main/java/com/faforever/client/replay/ReplayService.java", "diffHunk": "@@ -300,14 +298,14 @@ static String guessModByFileName(String fileName) {\n       return CompletableFuture.allOf(featuredModFuture, mapBeanFuture).thenApply(ignoredVoid  -> {\n         Optional<MapBean> mapBean = mapBeanFuture.join();\n         if (!mapBean.isPresent()) {\n-          throw new CompletionException(new FileNotFoundException());\n+          logger.warn(\"Could not find map for replay file '{}'\", replayFile);\n         }\n-        return new Replay(replayInfo, replayFile, featuredModFuture.join(), mapBean.get());\n+        return new Replay(replayInfo, replayFile, featuredModFuture.join(), mapBean.orElse(null));\n       });\n     } catch (Exception e) {\n       logger.warn(\"Could not read replay file '{}'\", replayFile, e);\n       moveCorruptedReplayFile(replayFile);\n-      return CompletableFuture.failedFuture(e);\n+      return CompletableFuture.completedFuture(null);", "originalCommit": "108e07a5adb577284f37bec08216336270dce26b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA2MjEyMw==", "url": "https://github.com/FAForever/downlords-faf-client/pull/1542#discussion_r363062123", "bodyText": "Let's tell te user we don't have this map", "author": "1-alex98", "createdAt": "2020-01-05T00:24:13Z", "path": "src/main/java/com/faforever/client/vault/replay/ReplayVaultController.java", "diffHunk": "@@ -183,9 +177,12 @@ public OffsetDateTime fromString(String string) {\n       protected void updateItem(MapBean map, boolean empty) {\n         super.updateItem(map, empty);\n \n-        if (empty || map == null) {\n+        if (empty) {\n           setText(null);\n           setGraphic(null);\n+        } else if (map == null) {\n+          setGraphic(null);\n+          setText(i18n.get(\"map.unknown\"));", "originalCommit": "108e07a5adb577284f37bec08216336270dce26b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "cae1a594d941600e0d8ca6b18a17a0b722500b5c", "url": "https://github.com/FAForever/downlords-faf-client/commit/cae1a594d941600e0d8ca6b18a17a0b722500b5c", "message": "Improvements and fixes to local replay vault", "committedDate": "2020-01-05T00:28:38Z", "type": "forcePushed"}, {"oid": "ce8c22405567df6b451b87bddbe11893daa42228", "url": "https://github.com/FAForever/downlords-faf-client/commit/ce8c22405567df6b451b87bddbe11893daa42228", "message": "Improvements and fixes to local replay vault", "committedDate": "2020-01-05T00:30:35Z", "type": "forcePushed"}, {"oid": "c9d1f114e47bde1425a6b83e3b78067f66f30c0a", "url": "https://github.com/FAForever/downlords-faf-client/commit/c9d1f114e47bde1425a6b83e3b78067f66f30c0a", "message": "Improvements and fixes to local replay vault", "committedDate": "2020-02-08T23:33:27Z", "type": "forcePushed"}, {"oid": "9a2bb3da7816bc6941c644ad28e77946e642c924", "url": "https://github.com/FAForever/downlords-faf-client/commit/9a2bb3da7816bc6941c644ad28e77946e642c924", "message": "#1541: Properly handle futures when the local replay directory has changed", "committedDate": "2020-02-08T23:38:40Z", "type": "commit"}, {"oid": "9c7cbca33c1f7ef007299823662c24d0995ed6d0", "url": "https://github.com/FAForever/downlords-faf-client/commit/9c7cbca33c1f7ef007299823662c24d0995ed6d0", "message": "Added unit test for `onLocalReplaysWatchEvent`", "committedDate": "2020-02-08T23:38:41Z", "type": "commit"}, {"oid": "2fdcd9b39702674ffdc01eeb3ea438f2361178ff", "url": "https://github.com/FAForever/downlords-faf-client/commit/2fdcd9b39702674ffdc01eeb3ea438f2361178ff", "message": "Improvements and fixes to local replay vault", "committedDate": "2020-02-08T23:38:48Z", "type": "commit"}, {"oid": "2fdcd9b39702674ffdc01eeb3ea438f2361178ff", "url": "https://github.com/FAForever/downlords-faf-client/commit/2fdcd9b39702674ffdc01eeb3ea438f2361178ff", "message": "Improvements and fixes to local replay vault", "committedDate": "2020-02-08T23:38:48Z", "type": "forcePushed"}]}