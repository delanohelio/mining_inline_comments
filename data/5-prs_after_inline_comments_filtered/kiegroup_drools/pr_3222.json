{"pr_number": 3222, "pr_title": "[DROOLS-5799] Second accumulate produces a wrong result", "pr_createdAt": "2020-11-06T03:58:21Z", "pr_url": "https://github.com/kiegroup/drools/pull/3222", "timeline": [{"oid": "7a6c00c4a9bc795a93eb20dc7c7bcf262a8fdaa8", "url": "https://github.com/kiegroup/drools/commit/7a6c00c4a9bc795a93eb20dc7c7bcf262a8fdaa8", "message": "[DROOLS-5799] Second accumulate produces a wrong result", "committedDate": "2020-11-06T03:49:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODUzMzI0Mg==", "url": "https://github.com/kiegroup/drools/pull/3222#discussion_r518533242", "bodyText": "if (leftTuple.getMemory() == ltm) {  may look more accurate but I followed the same approach as other methods in RuleNetworkEvaluator.", "author": "tkobayas", "createdAt": "2020-11-06T05:36:45Z", "path": "drools-core/src/main/java/org/drools/core/phreak/RuleNetworkEvaluator.java", "diffHunk": "@@ -804,7 +804,9 @@ public static void doUpdatesReorderLeftMemory(BetaMemory bm,\n \n         // sides must first be re-ordered, to ensure iteration integrity\n         for (LeftTuple leftTuple = srcLeftTuples.getUpdateFirst(); leftTuple != null; leftTuple = leftTuple.getStagedNext()) {\n-            ltm.remove(leftTuple);\n+            if (leftTuple.getMemory() != null) {", "originalCommit": "7a6c00c4a9bc795a93eb20dc7c7bcf262a8fdaa8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU2OTcyNA==", "url": "https://github.com/kiegroup/drools/pull/3222#discussion_r518569724", "bodyText": "Minor: the method initAccumulateContextOnLeftTuple already sets the contextObject on the leftTuple, I believe you can remove this statement.", "author": "mariofusco", "createdAt": "2020-11-06T07:36:27Z", "path": "drools-core/src/main/java/org/drools/core/phreak/PhreakAccumulateNode.java", "diffHunk": "@@ -255,7 +252,11 @@ public void doLeftUpdates(AccumulateNode accNode,\n \n         for (LeftTuple leftTuple = srcLeftTuples.getUpdateFirst(); leftTuple != null; ) {\n             LeftTuple next = leftTuple.getStagedNext();\n-            final AccumulateContext accctx = (AccumulateContext) leftTuple.getContextObject();\n+            AccumulateContext accctx = (AccumulateContext) leftTuple.getContextObject();\n+            if (accctx == null) {\n+                accctx = initAccumulateContextOnLeftTuple( am, wm, accumulate, leftTuple );\n+                leftTuple.setContextObject(accctx);", "originalCommit": "7a6c00c4a9bc795a93eb20dc7c7bcf262a8fdaa8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU3NTYzOA==", "url": "https://github.com/kiegroup/drools/pull/3222#discussion_r518575638", "bodyText": "Thanks, removed.", "author": "tkobayas", "createdAt": "2020-11-06T07:50:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU2OTcyNA=="}], "type": "inlineReview"}, {"oid": "a689f7d88106d208f0916f1cf03413114ab41a3a", "url": "https://github.com/kiegroup/drools/commit/a689f7d88106d208f0916f1cf03413114ab41a3a", "message": "- Removed redundant set", "committedDate": "2020-11-06T07:47:35Z", "type": "commit"}]}