{"pr_number": 2887, "pr_title": "[DROOLS-5275] Descope Traits", "pr_createdAt": "2020-05-08T17:02:01Z", "pr_url": "https://github.com/kiegroup/drools/pull/2887", "timeline": [{"oid": "37c8ced0bf1f5d11fe4817c0e08be3674d35d598", "url": "https://github.com/kiegroup/drools/commit/37c8ced0bf1f5d11fe4817c0e08be3674d35d598", "message": "Revert \"Removed cache from AbstractTraitFactory.java as it's a potential memory leak\"\n\nThis reverts commit 42bd021a", "committedDate": "2020-05-11T06:41:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY3OTg3Mg==", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r423679872", "bodyText": "This looks like it's transforming one collection into another, so that you can operate on the subset. These types of things have a cost, it is very small. Why not have a lambda that can comprehend the collection and apply the operation within the existing collection?", "author": "mdproctor", "createdAt": "2020-05-12T12:05:51Z", "path": "drools-compiler/src/main/java/org/drools/compiler/rule/builder/PatternBuilder.java", "diffHunk": "@@ -560,13 +562,10 @@ protected void processListenedPropertiesAnnotation(RuleBuildContext context, Pat\n             }\n         }\n \n-        for (Constraint constr : pattern.getConstraints()) {\n-            if (constr instanceof EvaluatorConstraint && ((EvaluatorConstraint) constr).isSelf()) {\n-                EvaluatorConstraint ec = ((EvaluatorConstraint) constr);\n-                if (ec.getEvaluator().getOperator() == IsAEvaluatorDefinition.ISA || ec.getEvaluator().getOperator() == IsAEvaluatorDefinition.NOT_ISA) {\n-                    listenedProperties.add(TraitableBean.TRAITSET_FIELD_NAME);\n-                }\n-            }\n+        // TODO LM review this\n+        KieTraitsCompiler traits = ((KnowledgeBuilderImpl) context.getKnowledgeBuilder()).getTraits();", "originalCommit": "37c8ced0bf1f5d11fe4817c0e08be3674d35d598", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8459f3c8f668dd083f5616bf9aae8340e642a383", "url": "https://github.com/kiegroup/drools/commit/8459f3c8f668dd083f5616bf9aae8340e642a383", "message": "Revert \"Removed cache from AbstractTraitFactory.java as it's a potential memory leak\"\n\nThis reverts commit 42bd021a", "committedDate": "2020-05-13T11:27:45Z", "type": "forcePushed"}, {"oid": "90c872998a36d64b77c90627ea78f43a1ec0b449", "url": "https://github.com/kiegroup/drools/commit/90c872998a36d64b77c90627ea78f43a1ec0b449", "message": "use two different injection points for TraitProxyClassBuilder and TraitClassBuilder", "committedDate": "2020-05-15T08:30:30Z", "type": "forcePushed"}, {"oid": "46211164fa4781117da2fb6f1d0c916d0e785c6d", "url": "https://github.com/kiegroup/drools/commit/46211164fa4781117da2fb6f1d0c916d0e785c6d", "message": "Revert \"Updated copyright in trait API\"\n\nThis reverts commit a2de378f", "committedDate": "2020-05-15T18:30:41Z", "type": "forcePushed"}, {"oid": "a8eb603c6fda1faba311bb061208f81595b167cc", "url": "https://github.com/kiegroup/drools/commit/a8eb603c6fda1faba311bb061208f81595b167cc", "message": "Moved trait persistence test to traits module", "committedDate": "2020-05-20T08:52:29Z", "type": "forcePushed"}, {"oid": "fac2ba65cb2879a69782f75dc2327dd759413f2e", "url": "https://github.com/kiegroup/drools/commit/fac2ba65cb2879a69782f75dc2327dd759413f2e", "message": "Subbclasses TypeDeclarationBuilder", "committedDate": "2020-05-21T10:24:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQzMTcwMA==", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r430431700", "bodyText": "Can you please move classBuilder to a new line? :)", "author": "danielezonca", "createdAt": "2020-05-26T13:56:23Z", "path": "drools-compiler/src/main/java/org/drools/compiler/builder/impl/DeclaredClassBuilder.java", "diffHunk": "@@ -39,46 +39,36 @@ public DeclaredClassBuilder(KnowledgeBuilderImpl kbuilder) {\n     public void generateBeanFromDefinition(AbstractClassTypeDeclarationDescr typeDescr,\n                                            TypeDeclaration type,\n                                            PackageRegistry pkgRegistry,\n-                                           ClassDefinition def) {\n+                                           ClassDefinition def, ClassBuilder classBuilder) {", "originalCommit": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQzOTg3Nw==", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r430439877", "bodyText": "Is there any specific reason why now it is private instead of protected?", "author": "danielezonca", "createdAt": "2020-05-26T14:07:23Z", "path": "drools-compiler/src/main/java/org/drools/compiler/builder/impl/DeclaredClassBuilder.java", "diffHunk": "@@ -39,46 +39,36 @@ public DeclaredClassBuilder(KnowledgeBuilderImpl kbuilder) {\n     public void generateBeanFromDefinition(AbstractClassTypeDeclarationDescr typeDescr,\n                                            TypeDeclaration type,\n                                            PackageRegistry pkgRegistry,\n-                                           ClassDefinition def) {\n+                                           ClassDefinition def, ClassBuilder classBuilder) {\n \n         if (type.isNovel()) {\n             String fullName = typeDescr.getType().getFullName();\n             JavaDialectRuntimeData dialect = (JavaDialectRuntimeData) pkgRegistry.getDialectRuntimeRegistry().getDialectData(\"java\");\n             if (ensureJavaTypeConsistency(typeDescr, def, pkgRegistry.getTypeResolver())) {\n-                switch (type.getKind()) {\n-                    case TRAIT:\n-                        try {\n-                            buildClass(def, fullName, dialect, this.kbuilder.getBuilderConfiguration().getClassBuilderFactory().getTraitBuilder(), pkgRegistry);\n-                        } catch (Exception e) {\n-                            e.printStackTrace();\n-                            this.kbuilder.addBuilderResult(new TypeDeclarationError(typeDescr,\n-                                                                                    \"Unable to compile declared trait \" + fullName +\n-                                                                                            \": \" + e.getMessage() + \";\"));\n-                        }\n-                        break;\n-                    case ENUM:\n-                        try {\n-                            buildClass(def, fullName, dialect, this.kbuilder.getBuilderConfiguration().getClassBuilderFactory().getEnumClassBuilder(), pkgRegistry);\n-                        } catch (Exception e) {\n-                            e.printStackTrace();\n-                            this.kbuilder.addBuilderResult(new TypeDeclarationError(typeDescr,\n-                                                                                    \"Unable to compile declared enum \" + fullName +\n-                                                                                            \": \" + e.getMessage() + \";\"));\n-                        }\n-                        break;\n-                    case CLASS:\n-                    default:\n-                        try {\n-                            buildClass(def, fullName, dialect, this.kbuilder.getBuilderConfiguration().getClassBuilderFactory().getBeanClassBuilder(), pkgRegistry);\n-                        } catch (Exception e) {\n-                            e.printStackTrace();\n-                            this.kbuilder.addBuilderResult(new TypeDeclarationError(typeDescr,\n-                                                                                    \"Unable to create a class for declared type \" + fullName +\n-                                                                                            \": \" + e.getMessage() + \";\"));\n-                        }\n-                        break;\n+                String errorMessage = \"Unable to compile declared \" + type.getKind();\n+                buildClass(typeDescr, pkgRegistry, def, classBuilder, fullName, dialect, errorMessage);\n+            }\n+        }\n+    }\n+\n+    private void buildClass(AbstractClassTypeDeclarationDescr typeDescr, PackageRegistry pkgRegistry, ClassDefinition def, ClassBuilder classBuilder, String fullName, JavaDialectRuntimeData dialect, String errorMessage) {", "originalCommit": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYwMzI1Mw==", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r441603253", "bodyText": "It wasn't used by any of the subclasses", "author": "lucamolteni", "createdAt": "2020-06-17T14:47:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQzOTg3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI0ODUyNQ==", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r431248525", "bodyText": "What is it used for?\nCan you please clarify and/or add a javadoc?", "author": "danielezonca", "createdAt": "2020-05-27T15:49:52Z", "path": "drools-core/src/main/java/org/drools/core/base/TraitDisabledHelper.java", "diffHunk": "@@ -0,0 +1,50 @@\n+package org.drools.core.base;\n+\n+import java.util.Collection;\n+\n+import org.drools.core.common.InternalFactHandle;\n+import org.drools.core.definitions.rule.impl.RuleImpl;\n+import org.drools.core.factmodel.traits.Thing;\n+import org.drools.core.factmodel.traits.TraitableBean;\n+import org.drools.core.reteoo.TerminalNode;\n+import org.drools.core.spi.Activation;\n+import org.drools.core.util.bitmask.BitMask;\n+import org.kie.api.internal.runtime.beliefs.Mode;\n+\n+public class TraitDisabledHelper implements TraitHelper {", "originalCommit": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI1NjU4MA==", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r431256580", "bodyText": "I know you probably tried to do it already but I will ask :)\nIs it possible to remove ~all trait mentions from this class and add it again via subclass?\nI'm asking even because this class is not really \"trait-free\" but more \"trait-mocked\": for example it is possible to invoke populateFactHandleFromExternalForm with a fact handle that contains a trait but then the behavior will be probably wrong.\nIf it is not possible to properly refactor this class, I would prefer at least check if traits are \"active\" or not and raise an exception if not.\nWdyt?", "author": "danielezonca", "createdAt": "2020-05-27T15:59:43Z", "path": "drools-core/src/main/java/org/drools/core/common/DefaultFactHandle.java", "diffHunk": "@@ -17,6 +17,7 @@\n package org.drools.core.common;", "originalCommit": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg0MTA0NA==", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r446841044", "bodyText": "Unfortunately Trait public API is everywhere so we had to \"stub\" it as you said.", "author": "lucamolteni", "createdAt": "2020-06-29T07:59:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI1NjU4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2MDAxMA==", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r431260010", "bodyText": "No more license? :)", "author": "danielezonca", "createdAt": "2020-05-27T16:03:04Z", "path": "drools-core/src/main/java/org/drools/core/factmodel/traits/CoreWrapper.java", "diffHunk": "@@ -1,19 +1,3 @@\n-/*\n- * Copyright 2011 Red Hat, Inc. and/or its affiliates.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *       http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n package org.drools.core.factmodel.traits;", "originalCommit": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2MDU2OQ==", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r431260569", "bodyText": "What's wrong with license? :)", "author": "danielezonca", "createdAt": "2020-05-27T16:03:37Z", "path": "drools-core/src/main/java/org/drools/core/factmodel/traits/TraitFactory.java", "diffHunk": "@@ -1,125 +1,9 @@\n-/*\n- * Copyright 2011 Red Hat, Inc. and/or its affiliates.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *       http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n package org.drools.core.factmodel.traits;", "originalCommit": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2MDgzNQ==", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r431260835", "bodyText": "License", "author": "danielezonca", "createdAt": "2020-05-27T16:03:54Z", "path": "drools-core/src/main/java/org/drools/core/factmodel/traits/TraitField.java", "diffHunk": "@@ -1,424 +1,8 @@\n-/*\n- * Copyright 2015 Red Hat, Inc. and/or its affiliates.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * \n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n-*/\n-\n package org.drools.core.factmodel.traits;", "originalCommit": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2MTUxMw==", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r431261513", "bodyText": "Can you please add a javadoc?", "author": "danielezonca", "createdAt": "2020-05-27T16:04:34Z", "path": "drools-core/src/main/java/org/drools/core/factmodel/traits/TraitFieldTMS.java", "diffHunk": "@@ -22,6 +22,8 @@\n \n public interface TraitFieldTMS extends Externalizable {\n \n+    String TYPE_NAME = \"org/drools/traits/core/factmodel/traits/TraitFieldTMSImpl\";", "originalCommit": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2MTYxNw==", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r431261617", "bodyText": "License", "author": "danielezonca", "createdAt": "2020-05-27T16:04:41Z", "path": "drools-core/src/main/java/org/drools/core/factmodel/traits/TraitProxy.java", "diffHunk": "@@ -1,207 +1,10 @@\n-/*\n- * Copyright 2011 Red Hat, Inc. and/or its affiliates.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *       http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n package org.drools.core.factmodel.traits;", "originalCommit": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2MTc4Mg==", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r431261782", "bodyText": "License", "author": "danielezonca", "createdAt": "2020-05-27T16:04:51Z", "path": "drools-core/src/main/java/org/drools/core/factmodel/traits/TraitRegistry.java", "diffHunk": "@@ -1,338 +1,10 @@\n-/*\n- * Copyright 2011 Red Hat, Inc. and/or its affiliates.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *       http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n package org.drools.core.factmodel.traits;", "originalCommit": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2MTkxMg==", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r431261912", "bodyText": "License", "author": "danielezonca", "createdAt": "2020-05-27T16:04:58Z", "path": "drools-core/src/main/java/org/drools/core/factmodel/traits/TraitTypeMap.java", "diffHunk": "@@ -1,285 +1,19 @@\n-/*\n- * Copyright 2015 Red Hat, Inc. and/or its affiliates.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * \n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n-*/\n-\n package org.drools.core.factmodel.traits;", "originalCommit": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2MjI0Nw==", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r431262247", "bodyText": "License", "author": "danielezonca", "createdAt": "2020-05-27T16:05:18Z", "path": "drools-core/src/main/java/org/drools/core/factmodel/traits/TraitableBean.java", "diffHunk": "@@ -1,19 +1,3 @@\n-/*\n- * Copyright 2011 Red Hat, Inc. and/or its affiliates.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *       http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n package org.drools.core.factmodel.traits;", "originalCommit": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2MzE1NA==", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r431263154", "bodyText": "License", "author": "danielezonca", "createdAt": "2020-05-27T16:06:14Z", "path": "drools-core/src/main/java/org/drools/core/reteoo/KieComponentFactoryFactory.java", "diffHunk": "@@ -0,0 +1,6 @@\n+package org.drools.core.reteoo;", "originalCommit": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2MzI4Ng==", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r431263286", "bodyText": "License", "author": "danielezonca", "createdAt": "2020-05-27T16:06:26Z", "path": "drools-core/src/main/java/org/drools/core/reteoo/ServiceRegistryUtils.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package org.drools.core.reteoo;", "originalCommit": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2NTYzNg==", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r431265636", "bodyText": "Code formatting", "author": "danielezonca", "createdAt": "2020-05-27T16:09:49Z", "path": "drools-traits/src/main/java/org/drools/traits/core/base/evaluators/IsAEvaluatorDefinition.java", "diffHunk": "@@ -56,7 +59,7 @@\n \n     protected static final String   isAOp = \"isA\";\n \n-    public static Operator          ISA;\n+    public static Operator ISA;\n     public static Operator          NOT_ISA;", "originalCommit": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2NTcxMw==", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r431265713", "bodyText": "License", "author": "danielezonca", "createdAt": "2020-05-27T16:09:58Z", "path": "drools-traits/src/main/java/org/drools/traits/core/common/TraitDefaultFactHandle.java", "diffHunk": "@@ -0,0 +1,82 @@\n+package org.drools.traits.core.common;", "originalCommit": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2NTc5MQ==", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r431265791", "bodyText": "License", "author": "danielezonca", "createdAt": "2020-05-27T16:10:04Z", "path": "drools-traits/src/main/java/org/drools/traits/core/common/TraitNamedEntryPoint.java", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.drools.traits.core.common;", "originalCommit": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2NjI5MQ==", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r431266291", "bodyText": "License", "author": "danielezonca", "createdAt": "2020-05-27T16:10:46Z", "path": "drools-traits/src/main/java/org/drools/traits/core/common/TraitNamedEntryPointFactory.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package org.drools.traits.core.common;", "originalCommit": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2NjQ4Nw==", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r431266487", "bodyText": "License", "author": "danielezonca", "createdAt": "2020-05-27T16:10:59Z", "path": "drools-traits/src/main/java/org/drools/traits/core/factmodel/TraitClassBuilderFactory.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package org.drools.traits.core.factmodel;", "originalCommit": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2OTc0NA==", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r431269744", "bodyText": "License", "author": "danielezonca", "createdAt": "2020-05-27T16:15:49Z", "path": "drools-traits/src/main/java/org/drools/traits/core/reteoo/TraitAlphaNode.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package org.drools.traits.core.reteoo;", "originalCommit": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2OTg0NA==", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r431269844", "bodyText": "License", "author": "danielezonca", "createdAt": "2020-05-27T16:15:57Z", "path": "drools-traits/src/main/java/org/drools/traits/core/reteoo/TraitFactHandleFactory.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package org.drools.traits.core.reteoo;", "originalCommit": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2OTk0Mg==", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r431269942", "bodyText": "License", "author": "danielezonca", "createdAt": "2020-05-27T16:16:07Z", "path": "drools-traits/src/main/java/org/drools/traits/core/reteoo/TraitKieComponentFactory.java", "diffHunk": "@@ -0,0 +1,92 @@\n+package org.drools.traits.core.reteoo;", "originalCommit": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI3MDAxMA==", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r431270010", "bodyText": "License", "author": "danielezonca", "createdAt": "2020-05-27T16:16:15Z", "path": "drools-traits/src/main/java/org/drools/traits/core/reteoo/TraitKieComponentFactoryFactory.java", "diffHunk": "@@ -0,0 +1,12 @@\n+package org.drools.traits.core.reteoo;", "originalCommit": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI3MDA5NQ==", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r431270095", "bodyText": "License", "author": "danielezonca", "createdAt": "2020-05-27T16:16:23Z", "path": "drools-traits/src/main/java/org/drools/traits/core/reteoo/TraitPhreakNodeFactory.java", "diffHunk": "@@ -0,0 +1,45 @@\n+package org.drools.traits.core.reteoo;", "originalCommit": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8fb0852cdbc88dce694172b7911c3625822e6754", "url": "https://github.com/kiegroup/drools/commit/8fb0852cdbc88dce694172b7911c3625822e6754", "message": "License + added comments after review", "committedDate": "2020-06-17T09:20:12Z", "type": "forcePushed"}, {"oid": "52287a906dc65375b64fbbfdc9fc44ed2c25233b", "url": "https://github.com/kiegroup/drools/commit/52287a906dc65375b64fbbfdc9fc44ed2c25233b", "message": "Subclassed KnowledgePackageImpl to TraitKnowledgePackageImpl.java, removed TraitCoreService.java\n\nremoved traits from implicit imports", "committedDate": "2020-06-18T12:06:50Z", "type": "forcePushed"}, {"oid": "cc7f8c54ef006c8515dce4030eeee6ef156231ee", "url": "https://github.com/kiegroup/drools/commit/cc7f8c54ef006c8515dce4030eeee6ef156231ee", "message": "DefaultKieComponentFactory.java -> KieComponentFactory", "committedDate": "2020-06-19T13:11:48Z", "type": "forcePushed"}, {"oid": "515c387afc60b547e1dfdada9c380ad5bbefe0f5", "url": "https://github.com/kiegroup/drools/commit/515c387afc60b547e1dfdada9c380ad5bbefe0f5", "message": "DefaultKieComponentFactory.java -> KieComponentFactory", "committedDate": "2020-06-22T09:13:15Z", "type": "forcePushed"}, {"oid": "1da3eb20c1a6d817638c499b7f48df5dc35b2055", "url": "https://github.com/kiegroup/drools/commit/1da3eb20c1a6d817638c499b7f48df5dc35b2055", "message": "DefaultKieComponentFactory.java -> KieComponentFactory", "committedDate": "2020-06-23T08:05:11Z", "type": "forcePushed"}, {"oid": "4e10c5409a49d93fd8d8aa9f4fc361bd763e8f46", "url": "https://github.com/kiegroup/drools/commit/4e10c5409a49d93fd8d8aa9f4fc361bd763e8f46", "message": "Fix specific case for JBPM in which the kbase is not present", "committedDate": "2020-06-24T08:29:53Z", "type": "forcePushed"}, {"oid": "a727d854fe3b8ab3f83ee7f41a49444513f5e554", "url": "https://github.com/kiegroup/drools/commit/a727d854fe3b8ab3f83ee7f41a49444513f5e554", "message": "[DROOLS-5275] Descope Traits\n\nNew module for traits\n\nDependency on core\n\ntrait tests moved from drools core to traits\n\nSplit Trait logic in GenericTypeDefinition\n\nAvoid using static method in DefaultFactHandle\n\nReverted DefaultBeanClassBuilder to master\n\nDefualtBeanClassBuilder does not depend on traits\n\nMoved trait test to LegacyTraitTest.java\n\nRenamed TraitProxy, TraitProxyImpl extends TraitProxy\n\nBaseTraitProxy file in service\n\nMoved traits DRL to traits module\n\nFix Manual injection in MetadataTest\n\nInjection of TraitPropertyWrapperBuilder\n\nMoved TraitableBean to drools core\n\nMoved TraitTypeMap and TraitableBean to core\n\nFix testTraitRedundancy\n\nDescope trait OOP, with KieComponentFactoryInjected\n\nSubclass DefaultFactHandle\n\nRemoved trait support for DisconnectedFactHandle.java (dead code)\n\nTraitNamedEntryPoint\n\nMoved trait persistence test to traits module\n\nIsAEvaluatorDefinition has to be defined explictly\n\nRemoved TRAITSET_FIELD_NAME from listened properties as it wasn't covered by test\n\nCreate KnowledgePackageImpl using KieComponentFactory\n\nSubclassed KnowledgePackageImpl to TraitKnowledgePackageImpl.java, removed TraitCoreService.java\n\nremoved traits from implicit imports\n\nFix specific case for JBPM in which the kbase is not present", "committedDate": "2020-06-24T14:14:04Z", "type": "commit"}, {"oid": "4801aba99eeb4f0d4a6c0b85db744e96602eeac2", "url": "https://github.com/kiegroup/drools/commit/4801aba99eeb4f0d4a6c0b85db744e96602eeac2", "message": "Updated TraitExample.java in drools-example to import trait dependency", "committedDate": "2020-06-24T14:25:52Z", "type": "commit"}, {"oid": "4801aba99eeb4f0d4a6c0b85db744e96602eeac2", "url": "https://github.com/kiegroup/drools/commit/4801aba99eeb4f0d4a6c0b85db744e96602eeac2", "message": "Updated TraitExample.java in drools-example to import trait dependency", "committedDate": "2020-06-24T14:25:52Z", "type": "forcePushed"}, {"oid": "4ba71937cf0c467a4147fb64a8bfc0ba4c41824b", "url": "https://github.com/kiegroup/drools/commit/4ba71937cf0c467a4147fb64a8bfc0ba4c41824b", "message": "Added clarifying comment", "committedDate": "2020-06-24T15:37:21Z", "type": "commit"}, {"oid": "0ba3bee887d836d665efbfd2c706114c7a162df0", "url": "https://github.com/kiegroup/drools/commit/0ba3bee887d836d665efbfd2c706114c7a162df0", "message": "org.drools.traits.core.factmodel.traits\n\nto\n\norg.drools.traits.core.factmodel", "committedDate": "2020-06-25T07:50:47Z", "type": "commit"}, {"oid": "60b62a45d3f7ee7d2393570116b18096a7dd59d6", "url": "https://github.com/kiegroup/drools/commit/60b62a45d3f7ee7d2393570116b18096a7dd59d6", "message": "kie-util-test to test scope and jaxb to provided, retriggering", "committedDate": "2020-06-30T06:44:16Z", "type": "commit"}, {"oid": "60b62a45d3f7ee7d2393570116b18096a7dd59d6", "url": "https://github.com/kiegroup/drools/commit/60b62a45d3f7ee7d2393570116b18096a7dd59d6", "message": "kie-util-test to test scope and jaxb to provided, retriggering", "committedDate": "2020-06-30T06:44:16Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODg4NzE3OQ==", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r448887179", "bodyText": "Missing Copyright header", "author": "hellowdan", "createdAt": "2020-07-02T09:54:38Z", "path": "drools-core/src/main/java/org/drools/core/common/DefaultNamedEntryPointFactory.java", "diffHunk": "@@ -0,0 +1,13 @@\n+package org.drools.core.common;", "originalCommit": "60b62a45d3f7ee7d2393570116b18096a7dd59d6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODg4NzcyNQ==", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r448887725", "bodyText": "Missing Copyright header.", "author": "hellowdan", "createdAt": "2020-07-02T09:55:29Z", "path": "drools-core/src/main/java/org/drools/core/common/NamedEntryPointFactory.java", "diffHunk": "@@ -0,0 +1,11 @@\n+package org.drools.core.common;", "originalCommit": "60b62a45d3f7ee7d2393570116b18096a7dd59d6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODg4ODA5MQ==", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r448888091", "bodyText": "Update to 2020?", "author": "hellowdan", "createdAt": "2020-07-02T09:56:06Z", "path": "drools-core/src/main/java/org/drools/core/factmodel/DefaultClassBuilderFactory.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Copyright 2011 Red Hat, Inc. and/or its affiliates.", "originalCommit": "60b62a45d3f7ee7d2393570116b18096a7dd59d6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ade7910ae95003c1689ac8a0be66a1aa0d8eac23", "url": "https://github.com/kiegroup/drools/commit/ade7910ae95003c1689ac8a0be66a1aa0d8eac23", "message": "Fix license", "committedDate": "2020-07-02T10:24:44Z", "type": "commit"}]}