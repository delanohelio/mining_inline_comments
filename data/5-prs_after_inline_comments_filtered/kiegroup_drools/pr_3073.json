{"pr_number": 3073, "pr_title": "[DROOLS-5561] Add DMN strongly typed tests for collection of collection", "pr_createdAt": "2020-09-02T08:33:42Z", "pr_url": "https://github.com/kiegroup/drools/pull/3073", "timeline": [{"oid": "9e82eb0e8e000c98dd2e3bb3c9fcd377ef0aa4a4", "url": "https://github.com/kiegroup/drools/commit/9e82eb0e8e000c98dd2e3bb3c9fcd377ef0aa4a4", "message": "[DROOLS-5561] Add DMN strongly typed tests for collection of collection", "committedDate": "2020-09-03T05:27:51Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjg2NDExOQ==", "url": "https://github.com/kiegroup/drools/pull/3073#discussion_r482864119", "bodyText": "@tkobayas definitely worth a separate ticket, but noticing now PropertyType is a placeholder not following the $name$ convention. Could you kindly record and separately revise this to become $PropertyType$, please? I believe requires changes only in this template and here: \n  \n    \n      drools/kie-dmn/kie-dmn-core/src/main/java/org/kie/dmn/typesafe/DMNDeclaredField.java\n    \n    \n         Line 195\n      in\n      a91703d\n    \n    \n    \n    \n\n        \n          \n           return n.toString().equals(\"PropertyType\"); \n        \n    \n  \n\n\nplease notice, imho, the \"<PROPERTY_NAME>\" is fine as-is, as that's a different kind of placeholder used by another processing \"stage\".\n@lucamolteni can comment if agree or other ideas here too.", "author": "tarilabs", "createdAt": "2020-09-03T10:07:48Z", "path": "kie-dmn/kie-dmn-core/src/main/resources/org/kie/dmn/core/impl/DMNTypeSafeTypeTemplate.java", "diffHunk": "@@ -57,15 +57,7 @@ void fromMap(Map<String, Object> values) {\n             Object propertyValues = values.get(\"$property$\");\n             if(propertyValues != null) {\n                 $property$ = new java.util.ArrayList<>();\n-                for (Object v : (java.util.Collection<Object>) propertyValues) {\n-                    if (v instanceof PropertyType) {\n-                        $property$.add((PropertyType)v);\n-                    } else {\n-                        PropertyType item = new PropertyType();\n-                        item.fromMap((java.util.Map<String, Object>)v);\n-                        $property$.add(item);\n-                    }\n-                }\n+                processCompositeCollection($property$, (java.util.Collection)propertyValues, PropertyType.class);", "originalCommit": "9e82eb0e8e000c98dd2e3bb3c9fcd377ef0aa4a4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4MTE2Mg==", "url": "https://github.com/kiegroup/drools/pull/3073#discussion_r484281162", "bodyText": "@tarilabs Sure! I have filed https://issues.redhat.com/browse/DROOLS-5623", "author": "tkobayas", "createdAt": "2020-09-07T08:40:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjg2NDExOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjg2NTE5Nw==", "url": "https://github.com/kiegroup/drools/pull/3073#discussion_r482865197", "bodyText": "lgtm, thanks! \ud83d\udc4d", "author": "tarilabs", "createdAt": "2020-09-03T10:09:48Z", "path": "kie-dmn/kie-dmn-core/src/main/resources/org/kie/dmn/core/impl/DMNTypeSafeTypeTemplate.java", "diffHunk": "@@ -81,4 +73,23 @@ void fromMap(Map<String, Object> values) {\n         }\n     }\n \n+    void processCompositeCollection(java.util.Collection destCol, java.util.Collection srcCol, Class<?> baseClass) {\n+        for (Object v : (java.util.Collection<Object>) srcCol) {\n+            if (v instanceof java.util.Collection) {\n+                java.util.Collection innerDestcol = new java.util.ArrayList();\n+                processCompositeCollection(innerDestcol, (java.util.Collection) v, baseClass);\n+                destCol.add(innerDestcol);\n+            } else if (baseClass.isAssignableFrom(v.getClass())) {\n+                destCol.add(v);", "originalCommit": "9e82eb0e8e000c98dd2e3bb3c9fcd377ef0aa4a4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjg2NTU3Mg==", "url": "https://github.com/kiegroup/drools/pull/3073#discussion_r482865572", "bodyText": "this is fine, but it's not clear to me why this cannot be simply as\n                        PropertyType item = new PropertyType();\t\n                        item.fromMap((java.util.Map<String, Object>)v);\t\n                        $property$.add(item);\n\nas it was before, please?", "author": "tarilabs", "createdAt": "2020-09-03T10:10:28Z", "path": "kie-dmn/kie-dmn-core/src/main/resources/org/kie/dmn/core/impl/DMNTypeSafeTypeTemplate.java", "diffHunk": "@@ -81,4 +73,23 @@ void fromMap(Map<String, Object> values) {\n         }\n     }\n \n+    void processCompositeCollection(java.util.Collection destCol, java.util.Collection srcCol, Class<?> baseClass) {\n+        for (Object v : (java.util.Collection<Object>) srcCol) {\n+            if (v instanceof java.util.Collection) {\n+                java.util.Collection innerDestcol = new java.util.ArrayList();\n+                processCompositeCollection(innerDestcol, (java.util.Collection) v, baseClass);\n+                destCol.add(innerDestcol);\n+            } else if (baseClass.isAssignableFrom(v.getClass())) {\n+                destCol.add(v);\n+            } else {\n+                try {\n+                    org.kie.dmn.api.core.FEELPropertyAccessible item = (org.kie.dmn.api.core.FEELPropertyAccessible) baseClass.newInstance();\n+                    item.fromMap((java.util.Map<String, Object>) v);\n+                    destCol.add(item);\n+                } catch (InstantiationException | IllegalAccessException e) {\n+                    throw new org.kie.dmn.typesafe.DMNTypeSafeException(e);\n+                }", "originalCommit": "9e82eb0e8e000c98dd2e3bb3c9fcd377ef0aa4a4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4MzAxNA==", "url": "https://github.com/kiegroup/drools/pull/3073#discussion_r484283014", "bodyText": "@tarilabs processCompositeCollection() is a separate method because we want to invoke it recursively. Then, if we use a placeholder for replacement in the method, we would need to generate processCompositeCollection method per property (just like the statement blocks in fromMap()). By not using a placeholder, we can have only one processCompositeCollection() in a class. :)", "author": "tkobayas", "createdAt": "2020-09-07T08:43:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjg2NTU3Mg=="}], "type": "inlineReview"}, {"oid": "d3e78f229b5fe363777ba3b470d6e12d4e23b077", "url": "https://github.com/kiegroup/drools/commit/d3e78f229b5fe363777ba3b470d6e12d4e23b077", "message": "[DROOLS-5561] Add DMN strongly typed tests for collection of collection", "committedDate": "2020-09-10T09:29:05Z", "type": "commit"}, {"oid": "d3e78f229b5fe363777ba3b470d6e12d4e23b077", "url": "https://github.com/kiegroup/drools/commit/d3e78f229b5fe363777ba3b470d6e12d4e23b077", "message": "[DROOLS-5561] Add DMN strongly typed tests for collection of collection", "committedDate": "2020-09-10T09:29:05Z", "type": "forcePushed"}]}