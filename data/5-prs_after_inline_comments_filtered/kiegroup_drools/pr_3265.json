{"pr_number": 3265, "pr_title": "[DROOLS-5780] make drools-compiler to depend on drools-ecj by default", "pr_createdAt": "2020-11-24T17:47:45Z", "pr_url": "https://github.com/kiegroup/drools/pull/3265", "timeline": [{"oid": "89106ad5dd5c136d53a65ee29c16294bfa552f4d", "url": "https://github.com/kiegroup/drools/commit/89106ad5dd5c136d53a65ee29c16294bfa552f4d", "message": "[DROOLS-5780] make drools-compiler to depend on drools-ecj by default", "committedDate": "2020-11-24T17:46:46Z", "type": "commit"}, {"oid": "e3ccbeffcfa89ce20c0ff1627588d31be076b8cb", "url": "https://github.com/kiegroup/drools/commit/e3ccbeffcfa89ce20c0ff1627588d31be076b8cb", "message": "wip", "committedDate": "2020-11-25T09:35:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc2ODc0Mg==", "url": "https://github.com/kiegroup/drools/pull/3265#discussion_r529768742", "bodyText": "Fix order of imports", "author": "danielezonca", "createdAt": "2020-11-24T17:53:31Z", "path": "drools-compiler/src/main/java/org/drools/compiler/compiler/JavaDialectConfiguration.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/*\n+ * Copyright (c) 2020. Red Hat, Inc. and/or its affiliates.\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.drools.compiler.compiler;\n+\n+import org.drools.compiler.builder.impl.KnowledgeBuilderConfigurationImpl;\n+import org.kie.memorycompiler.JavaCompiler;\n+import org.kie.memorycompiler.JavaCompilerFactory;\n+import org.drools.core.definitions.InternalKnowledgePackage;\n+import org.kie.memorycompiler.JavaConfiguration;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;", "originalCommit": "89106ad5dd5c136d53a65ee29c16294bfa552f4d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg5MTI4OQ==", "url": "https://github.com/kiegroup/drools/pull/3265#discussion_r529891289", "bodyText": "Please fix import order", "author": "danielezonca", "createdAt": "2020-11-24T21:32:27Z", "path": "drools-model/drools-model-compiler/src/main/java/org/drools/modelcompiler/builder/CanonicalModelKieProject.java", "diffHunk": "@@ -25,7 +25,8 @@\n import java.util.stream.Stream;\n \n import org.drools.compiler.builder.impl.KnowledgeBuilderConfigurationImpl;\n-import org.drools.compiler.commons.jci.compilers.CompilationResult;\n+import org.drools.compiler.kie.builder.impl.CompilationProblemAdapter;\n+import org.kie.memorycompiler.CompilationResult;", "originalCommit": "89106ad5dd5c136d53a65ee29c16294bfa552f4d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg5MjQ4OQ==", "url": "https://github.com/kiegroup/drools/pull/3265#discussion_r529892489", "bodyText": "Fix import order", "author": "danielezonca", "createdAt": "2020-11-24T21:35:01Z", "path": "drools-mvel/src/main/java/org/drools/mvel/java/JavaDialect.java", "diffHunk": "@@ -96,6 +93,10 @@\n import org.drools.core.spi.Wireable;\n import org.drools.core.util.IoUtils;\n import org.drools.core.util.StringUtils;\n+import org.kie.memorycompiler.CompilationResult;\n+import org.kie.memorycompiler.JavaCompiler;\n+import org.kie.memorycompiler.JavaCompilerFactory;\n+import org.kie.memorycompiler.resources.MemoryResourceReader;", "originalCommit": "89106ad5dd5c136d53a65ee29c16294bfa552f4d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDI1ODg0MA==", "url": "https://github.com/kiegroup/drools/pull/3265#discussion_r530258840", "bodyText": "static?", "author": "danielezonca", "createdAt": "2020-11-25T10:17:52Z", "path": "drools-compiler/src/main/java/org/drools/compiler/compiler/Dialect.java", "diffHunk": "@@ -132,4 +144,196 @@ void preCompileAddFunction(FunctionDescr functionDescr,\n     default void addSrc(String resourceName, byte[] content) {\n         throw new UnsupportedOperationException();\n     }\n+\n+    class DummyDialect implements Dialect {", "originalCommit": "e3ccbeffcfa89ce20c0ff1627588d31be076b8cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDI5NzI2Nw==", "url": "https://github.com/kiegroup/drools/pull/3265#discussion_r530297267", "bodyText": "The inner class of an interface is implicitly static.", "author": "mariofusco", "createdAt": "2020-11-25T11:18:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDI1ODg0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDI5MDM0MA==", "url": "https://github.com/kiegroup/drools/pull/3265#discussion_r530290340", "bodyText": "Why are you muting this exception?", "author": "danielezonca", "createdAt": "2020-11-25T11:07:18Z", "path": "kie-memory-compiler/src/main/java/org/kie/memorycompiler/jdknative/NativeJavaCompiler.java", "diffHunk": "@@ -398,7 +401,7 @@ private void indexClassesByPackage(Map<String, Set<String>> indexedClasses, Clas\n                     }\n                 }\n             } catch (NoSuchFieldException | IllegalAccessException e) {\n-                throw new RuntimeException( e );\n+                // ignore: this classloader is not indexable", "originalCommit": "e3ccbeffcfa89ce20c0ff1627588d31be076b8cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDI5Mzk1NQ==", "url": "https://github.com/kiegroup/drools/pull/3265#discussion_r530293955", "bodyText": "Because the ClassLoader class as implemented in IBM JDK doesn't haven't that classes field. In that case I cannot do much and simply skipping this indexing.", "author": "mariofusco", "createdAt": "2020-11-25T11:13:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDI5MDM0MA=="}], "type": "inlineReview"}, {"oid": "3c9cfc6044cea101c73cc950bc26d37679b73fee", "url": "https://github.com/kiegroup/drools/commit/3c9cfc6044cea101c73cc950bc26d37679b73fee", "message": "wip", "committedDate": "2020-11-25T11:19:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDMyNTgxMA==", "url": "https://github.com/kiegroup/drools/pull/3265#discussion_r530325810", "bodyText": "Can you please add a javadoc?", "author": "danielezonca", "createdAt": "2020-11-25T12:08:48Z", "path": "kie-memory-compiler/src/main/java/org/kie/memorycompiler/StoreClassLoader.java", "diffHunk": "@@ -0,0 +1,21 @@\n+/*\n+ * Copyright (c) 2020. Red Hat, Inc. and/or its affiliates.\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.memorycompiler;\n+\n+import java.util.Map;\n+\n+public interface StoreClassLoader {", "originalCommit": "3c9cfc6044cea101c73cc950bc26d37679b73fee", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}