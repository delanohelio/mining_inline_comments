{"pr_number": 767, "pr_title": "Handle odd job names that do not match DNS_SUBDOMAIN", "pr_createdAt": "2020-04-21T18:50:34Z", "pr_url": "https://github.com/jenkinsci/kubernetes-plugin/pull/767", "timeline": [{"oid": "169f0e281c35200f298b21fba4f5ca11b1f4fa10", "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/169f0e281c35200f298b21fba4f5ca11b1f4fa10", "message": "Handle odd job names that do not match DNS_SUBDOMAIN", "committedDate": "2020-04-21T18:47:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQwODY4OQ==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/767#discussion_r412408689", "bodyText": "Without fix:\n\u2026 WARNING\to.c.j.p.k.KubernetesLauncher#launch: Error in provisioning; agent=KubernetesSlave name: whatever...-1-hn921-fcjl9-m6w34, template=PodTemplate{, name='whatever..._1-hn921-fcjl9', \u2026}\nio.fabric8.kubernetes.client.KubernetesClientException: Failure executing: POST at: https://\u2026/api/v1/namespaces/kubernetes-plugin-test/pods. Message: Pod \"whatever...-1-hn921-fcjl9-m6w34\" is invalid: metadata.name: Invalid value: \"whatever...-1-hn921-fcjl9-m6w34\": a DNS-1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'). Received status: Status(apiVersion=v1, code=422, details=\u2026, reason=Invalid, status=Failure, additionalProperties={}).\n\tat io.fabric8.kubernetes.client.dsl.base.OperationSupport.requestFailure(OperationSupport.java:568)\n\tat io.fabric8.kubernetes.client.dsl.base.OperationSupport.assertResponseCode(OperationSupport.java:507)\n\tat io.fabric8.kubernetes.client.dsl.base.OperationSupport.handleResponse(OperationSupport.java:471)\n\tat io.fabric8.kubernetes.client.dsl.base.OperationSupport.handleResponse(OperationSupport.java:430)\n\tat io.fabric8.kubernetes.client.dsl.base.OperationSupport.handleCreate(OperationSupport.java:251)\n\tat io.fabric8.kubernetes.client.dsl.base.BaseOperation.handleCreate(BaseOperation.java:802)\n\tat io.fabric8.kubernetes.client.dsl.base.BaseOperation.create(BaseOperation.java:322)\n\tat io.fabric8.kubernetes.client.dsl.base.BaseOperation.create(BaseOperation.java:318)\n\tat org.csanchez.jenkins.plugins.kubernetes.KubernetesLauncher.launch(KubernetesLauncher.java:125)\n\tat hudson.slaves.SlaveComputer.lambda$_connect$0(SlaveComputer.java:292)\n\tat \u2026", "author": "jglick", "createdAt": "2020-04-21T18:52:22Z", "path": "src/test/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodNameTest.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright 2020 CloudBees, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.csanchez.jenkins.plugins.kubernetes.pipeline;\n+\n+import static org.csanchez.jenkins.plugins.kubernetes.KubernetesTestUtil.deletePods;\n+import static org.csanchez.jenkins.plugins.kubernetes.KubernetesTestUtil.getLabels;\n+import org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition;\n+import org.jenkinsci.plugins.workflow.job.WorkflowJob;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class PodNameTest extends AbstractKubernetesPipelineTest {\n+\n+    @Before\n+    public void setUp() throws Exception {\n+        deletePods(cloud.connect(), getLabels(cloud, this, name), false);\n+    }\n+\n+    @Test\n+    public void trailingDots() throws Exception {\n+        WorkflowJob p = r.createProject(WorkflowJob.class, \"whatever...\");\n+        p.setDefinition(new CpsFlowDefinition(\"podTemplate {node(POD_LABEL) {sh 'echo ok'}}\", true));\n+        r.buildAndAssertSuccess(p);", "originalCommit": "169f0e281c35200f298b21fba4f5ca11b1f4fa10", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQwODk0NQ==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/767#discussion_r412408945", "bodyText": "copied directly from error message", "author": "jglick", "createdAt": "2020-04-21T18:52:47Z", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesSlave.java", "diffHunk": "@@ -227,7 +227,11 @@ static String getSlaveName(PodTemplate template) {\n         name = name.replaceAll(\"[ _]\", \"-\").toLowerCase();\n         // keep it under 63 chars (62 is used to account for the '-')\n         name = name.substring(0, Math.min(name.length(), 62 - randString.length()));\n-        return String.format(\"%s-%s\", name, randString);\n+        String slaveName = String.format(\"%s-%s\", name, randString);\n+        if (!slaveName.matches(\"[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\")) {", "originalCommit": "169f0e281c35200f298b21fba4f5ca11b1f4fa10", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}