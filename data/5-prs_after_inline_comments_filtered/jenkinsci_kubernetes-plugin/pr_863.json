{"pr_number": 863, "pr_title": "Make sure `containerCap` defaults to Integer.MAX_VALUE when starting from an empty `KubernetesCloud`", "pr_createdAt": "2020-10-08T11:14:10Z", "pr_url": "https://github.com/jenkinsci/kubernetes-plugin/pull/863", "timeline": [{"oid": "36a6cf8cad00d8f18377ff71c358f2257509e93f", "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/36a6cf8cad00d8f18377ff71c358f2257509e93f", "message": "Make sure containerCap defaults to Integer.MAX_VALUE when starting from an empty KubernetesCloud", "committedDate": "2020-10-08T11:13:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTg3NzU0OQ==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/863#discussion_r501877549", "bodyText": "Was this not setting the default value properly? AFAICT it hasn't defaulted to 0 since 5 years ago.", "author": "schottsfired", "createdAt": "2020-10-08T17:07:12Z", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java", "diffHunk": "@@ -121,7 +121,7 @@\n     private String jenkinsTunnel;\n     @CheckForNull\n     private String credentialsId;\n-    private int containerCap = Integer.MAX_VALUE;", "originalCommit": "36a6cf8cad00d8f18377ff71c358f2257509e93f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTk4MTgwNQ==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/863#discussion_r501981805", "bodyText": "Instance initializers are not run during deserialization, so the field would have been left at its Java primitive default of 0.", "author": "jglick", "createdAt": "2020-10-08T20:05:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTg3NzU0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjA0MTk4MA==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/863#discussion_r502041980", "bodyText": "I understand that the deserialized value won't be (re)set to Integer.MAX_VALUE, but wasn't it serialized as Integer.MAX_VALUE in the first place? At least for the last several years. If it was serialized with a non-zero value then IIUC it should deserialize with the same value.", "author": "schottsfired", "createdAt": "2020-10-08T22:14:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTg3NzU0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjA2ODIxMQ==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/863#discussion_r502068211", "bodyText": "Sure. I have no idea what issue is being addressed by this PR, just reviewing.", "author": "jglick", "createdAt": "2020-10-08T23:13:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTg3NzU0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTk4MjczMQ==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/863#discussion_r501982731", "bodyText": "Prefer\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private Integer containerCap = Integer.MAX_VALUE;\n          \n          \n            \n                private Integer containerCap;\n          \n      \n    \n    \n  \n\nrevert the patch to readResolve and change the getter to return\ncontainerCap != null ? containerCap ? Integer.MAX_VALUE\nto avoid gratuitously serializing an ugly value from an unconfigured field. (You will anyway once someone saves the cloud, unless you also null out the default from the getter.)", "author": "jglick", "createdAt": "2020-10-08T20:07:33Z", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java", "diffHunk": "@@ -121,7 +121,7 @@\n     private String jenkinsTunnel;\n     @CheckForNull\n     private String credentialsId;\n-    private int containerCap = Integer.MAX_VALUE;\n+    private Integer containerCap = Integer.MAX_VALUE;", "originalCommit": "36a6cf8cad00d8f18377ff71c358f2257509e93f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "bd5d865fc82bcabe6984b6af81a42b02ab8434a4", "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/bd5d865fc82bcabe6984b6af81a42b02ab8434a4", "message": "Reviews", "committedDate": "2020-10-09T08:00:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjM5ODM2Mg==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/863#discussion_r502398362", "bodyText": "Is 0 a valid value?", "author": "jglick", "createdAt": "2020-10-09T12:40:00Z", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java", "diffHunk": "@@ -381,33 +381,21 @@ public void setCredentialsId(String credentialsId) {\n     }\n \n     public int getContainerCap() {\n-        return containerCap;\n+        return containerCap != null ? containerCap : Integer.MAX_VALUE;\n     }\n \n     @DataBoundSetter\n     public void setContainerCapStr(String containerCapStr) {\n-        if (containerCapStr.equals(\"\")) {\n-            setContainerCap(Integer.MAX_VALUE);\n-        } else {\n-            setContainerCap(Integer.parseInt(containerCapStr));\n-        }\n+        setContainerCap(containerCapStr.equals(\"\") ? null : Integer.parseInt(containerCapStr));\n     }\n \n-    @DataBoundSetter\n-    public void setContainerCap(int containerCap) {\n-        if (containerCap < 0) {\n-            this.containerCap = Integer.MAX_VALUE;\n-        } else {\n-            this.containerCap = containerCap;\n-        }\n+    public void setContainerCap(Integer containerCap) {\n+        this.containerCap = (containerCap != null && containerCap >= 0) ? containerCap : null;", "originalCommit": "bd5d865fc82bcabe6984b6af81a42b02ab8434a4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjM5OTMzNg==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/863#discussion_r502399336", "bodyText": "Yes, means that the cloud is effectively disabled, cf. \n  \n    \n      kubernetes-plugin/src/main/resources/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud/help-containerCapStr.html\n    \n    \n         Line 3\n      in\n      298512d\n    \n    \n    \n    \n\n        \n          \n           If set to empty it means no limit. Set to 0 means no pod will ever be started.", "author": "Vlatombe", "createdAt": "2020-10-09T12:41:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjM5ODM2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjM5ODg3NA==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/863#discussion_r502398874", "bodyText": "Could revert.", "author": "jglick", "createdAt": "2020-10-09T12:40:43Z", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java", "diffHunk": "@@ -994,7 +983,6 @@ private Object readResolve() {\n         if (podLabels == null && labels != null) {\n             setPodLabels(PodLabel.fromMap(labels));\n         }\n-", "originalCommit": "bd5d865fc82bcabe6984b6af81a42b02ab8434a4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "85455273f54e15e4029a7f8e4b281ef7dbcee236", "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/85455273f54e15e4029a7f8e4b281ef7dbcee236", "message": "Revert some ws", "committedDate": "2020-10-09T12:43:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjYzNjc0NA==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/863#discussion_r502636744", "bodyText": "IIUC we need a readResolve which sets 0 (old \"unlimited\") to null (new \"unlimited\").\nOnce null, the getter will convert null to Integer.MAX_VALUE.\nCorrect?", "author": "schottsfired", "createdAt": "2020-10-09T19:40:20Z", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java", "diffHunk": "@@ -994,10 +983,6 @@ private Object readResolve() {\n         if (podLabels == null && labels != null) {\n             setPodLabels(PodLabel.fromMap(labels));\n         }\n-        // if unset, should default to no limit\n-        if (containerCap == null) {\n-            containerCap = Integer.MAX_VALUE;\n-        }", "originalCommit": "bd5d865fc82bcabe6984b6af81a42b02ab8434a4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY1NDkxMQ==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/863#discussion_r502654911", "bodyText": "#865", "author": "schottsfired", "createdAt": "2020-10-09T20:24:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjYzNjc0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY4MTYxOQ==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/863#discussion_r502681619", "bodyText": "Disregard. #866 is the only way.", "author": "schottsfired", "createdAt": "2020-10-09T21:35:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjYzNjc0NA=="}], "type": "inlineReview"}]}