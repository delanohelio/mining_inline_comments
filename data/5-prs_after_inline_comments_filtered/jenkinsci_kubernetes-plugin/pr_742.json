{"pr_number": 742, "pr_title": "Log events in build log during pod provisioning", "pr_createdAt": "2020-03-16T10:31:17Z", "pr_url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742", "timeline": [{"oid": "e32022b021cb7e9c3f36a704f8831e32c0cc0b09", "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/e32022b021cb7e9c3f36a704f8831e32c0cc0b09", "message": "Log events in build log during pod provisioning", "committedDate": "2020-03-16T10:31:04Z", "type": "commit"}, {"oid": "2007d04566666ef4452c2afeca11c54238209833", "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/2007d04566666ef4452c2afeca11c54238209833", "message": "Grant watch events", "committedDate": "2020-03-16T13:23:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE0NzM0MQ==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742#discussion_r393147341", "bodyText": "I don't see any difference in the cases for this switch.", "author": "kerogers-cloudbees", "createdAt": "2020-03-16T16:21:56Z", "path": "src/main/java/io/jenkins/plugins/kubernetes/TaskListenerEventWatcher.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package io.jenkins.plugins.kubernetes;\n+\n+import hudson.model.TaskListener;\n+import io.fabric8.kubernetes.api.model.Event;\n+import io.fabric8.kubernetes.client.KubernetesClientException;\n+import io.fabric8.kubernetes.client.Watcher;\n+\n+import java.io.PrintStream;\n+import java.util.Date;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+\n+import static java.util.logging.Level.FINE;\n+import static java.util.logging.Level.INFO;\n+import static java.util.logging.Level.WARNING;\n+\n+public class TaskListenerEventWatcher implements Watcher<Event> {\n+\n+    private static final Logger LOGGER = Logger.getLogger(TaskListenerEventWatcher.class.getName());\n+\n+    private final String name;\n+    private final TaskListener listener;\n+\n+    public TaskListenerEventWatcher(String name, TaskListener listener) {\n+        this.name = name;\n+        this.listener = listener;\n+    }\n+\n+    private void listenerLog(Event event) {\n+        PrintStream logger = listener.getLogger();\n+        // Messages can have multiple lines\n+        String[] lines = event.getMessage().split(\"\\n\");\n+        for (String line : lines) {\n+            logger.printf(\"[%s][%s/%s][%s] %s%n\", event.getType(), event.getInvolvedObject().getNamespace(), event.getInvolvedObject().getName(), event.getReason(), line);\n+        }\n+    }\n+\n+    @Override\n+    public void eventReceived(Action action, Event event) {\n+        switch (event.getType()) {", "originalCommit": "2007d04566666ef4452c2afeca11c54238209833", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwMTM0MA==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742#discussion_r393201340", "bodyText": "Right, was something forgotten here?", "author": "jglick", "createdAt": "2020-03-16T17:41:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE0NzM0MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwMDE3Mg==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742#discussion_r393200172", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class TaskListenerEventWatcher implements Watcher<Event> {\n          \n          \n            \n            class TaskListenerEventWatcher implements Watcher<Event> {", "author": "jglick", "createdAt": "2020-03-16T17:39:46Z", "path": "src/main/java/io/jenkins/plugins/kubernetes/TaskListenerEventWatcher.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package io.jenkins.plugins.kubernetes;\n+\n+import hudson.model.TaskListener;\n+import io.fabric8.kubernetes.api.model.Event;\n+import io.fabric8.kubernetes.client.KubernetesClientException;\n+import io.fabric8.kubernetes.client.Watcher;\n+\n+import java.io.PrintStream;\n+import java.util.Date;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+\n+import static java.util.logging.Level.FINE;\n+import static java.util.logging.Level.INFO;\n+import static java.util.logging.Level.WARNING;\n+\n+public class TaskListenerEventWatcher implements Watcher<Event> {", "originalCommit": "2007d04566666ef4452c2afeca11c54238209833", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwMTg1Ng==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742#discussion_r393201856", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        cause.printStackTrace(listener.getLogger());\n          \n          \n            \n                        hudson.Functions.printStackTrace(cause, listener.getLogger());", "author": "jglick", "createdAt": "2020-03-16T17:42:33Z", "path": "src/main/java/io/jenkins/plugins/kubernetes/TaskListenerEventWatcher.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package io.jenkins.plugins.kubernetes;\n+\n+import hudson.model.TaskListener;\n+import io.fabric8.kubernetes.api.model.Event;\n+import io.fabric8.kubernetes.client.KubernetesClientException;\n+import io.fabric8.kubernetes.client.Watcher;\n+\n+import java.io.PrintStream;\n+import java.util.Date;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+\n+import static java.util.logging.Level.FINE;\n+import static java.util.logging.Level.INFO;\n+import static java.util.logging.Level.WARNING;\n+\n+public class TaskListenerEventWatcher implements Watcher<Event> {\n+\n+    private static final Logger LOGGER = Logger.getLogger(TaskListenerEventWatcher.class.getName());\n+\n+    private final String name;\n+    private final TaskListener listener;\n+\n+    public TaskListenerEventWatcher(String name, TaskListener listener) {\n+        this.name = name;\n+        this.listener = listener;\n+    }\n+\n+    private void listenerLog(Event event) {\n+        PrintStream logger = listener.getLogger();\n+        // Messages can have multiple lines\n+        String[] lines = event.getMessage().split(\"\\n\");\n+        for (String line : lines) {\n+            logger.printf(\"[%s][%s/%s][%s] %s%n\", event.getType(), event.getInvolvedObject().getNamespace(), event.getInvolvedObject().getName(), event.getReason(), line);\n+        }\n+    }\n+\n+    @Override\n+    public void eventReceived(Action action, Event event) {\n+        switch (event.getType()) {\n+            case \"Normal\":\n+                listenerLog(event);\n+                break;\n+            case \"Warning\":\n+                listenerLog(event);\n+                break;\n+            default:\n+                listenerLog(event);\n+                break;\n+        }\n+    }\n+\n+    @Override\n+    public void onClose(KubernetesClientException cause) {\n+        String msg = String.format(\"%s onClose: %s\", getClass().getSimpleName(), name);\n+        if (cause != null) {\n+            LOGGER.log(WARNING, msg, cause);\n+            cause.printStackTrace(listener.getLogger());", "originalCommit": "2007d04566666ef4452c2afeca11c54238209833", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwMzkxNA==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742#discussion_r393203914", "bodyText": "Unused?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private WatchList setupWatches(KubernetesClient client, String namespace, String name, TaskListener taskListener) {\n          \n          \n            \n                    List<Watch> watches = new ArrayList<>();\n          \n          \n            \n                    watches.add(client.pods().inNamespace(namespace).withName(name).watch(watcher));\n          \n          \n            \n                    watches.add(client.events().inNamespace(namespace).withField(\"involvedObject.name\", name).watch(new TaskListenerEventWatcher(name, taskListener)));\n          \n          \n            \n                    return new WatchList(watches);\n          \n          \n            \n                }", "author": "jglick", "createdAt": "2020-03-16T17:45:48Z", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesLauncher.java", "diffHunk": "@@ -229,6 +229,13 @@ public void launch(SlaveComputer computer, TaskListener listener) {\n         }\n     }\n \n+    private WatchList setupWatches(KubernetesClient client, String namespace, String name, TaskListener taskListener) {\n+        List<Watch> watches = new ArrayList<>();\n+        watches.add(client.pods().inNamespace(namespace).withName(name).watch(watcher));\n+        watches.add(client.events().inNamespace(namespace).withField(\"involvedObject.name\", name).watch(new TaskListenerEventWatcher(name, taskListener)));\n+        return new WatchList(watches);\n+    }\n+", "originalCommit": "2007d04566666ef4452c2afeca11c54238209833", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzUxNzE4Ng==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742#discussion_r393517186", "bodyText": "indeed, forgot to remove it before submitting the pr", "author": "Vlatombe", "createdAt": "2020-03-17T08:39:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwMzkxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwNDQ3OA==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742#discussion_r393204478", "bodyText": "Unused if setupWatches is?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static class WatchList implements Closeable {\n          \n          \n            \n                    private List<Watch> watches;\n          \n          \n            \n            \n          \n          \n            \n                    public WatchList(List<Watch> watches) {\n          \n          \n            \n                        this.watches = watches;\n          \n          \n            \n                    }\n          \n          \n            \n            \n          \n          \n            \n                    @Override\n          \n          \n            \n                    public void close() throws IOException {\n          \n          \n            \n                        RuntimeException r = null;\n          \n          \n            \n                        for (Watch watch: watches) {\n          \n          \n            \n                            try {\n          \n          \n            \n                                watch.close();\n          \n          \n            \n                            } catch(RuntimeException e) {\n          \n          \n            \n                                if (r == null) {\n          \n          \n            \n                                    r = new RuntimeException();\n          \n          \n            \n                                }\n          \n          \n            \n                                r.addSuppressed(e);\n          \n          \n            \n                            }\n          \n          \n            \n                        }\n          \n          \n            \n                        if (r != null) {\n          \n          \n            \n                            throw r;\n          \n          \n            \n                        }\n          \n          \n            \n                    }\n          \n          \n            \n                }", "author": "jglick", "createdAt": "2020-03-16T17:46:48Z", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesLauncher.java", "diffHunk": "@@ -259,6 +266,32 @@ private void logLastLines(List<ContainerStatus> containers, String podId, String\n         }\n     }\n \n+    private static class WatchList implements Closeable {\n+        private List<Watch> watches;\n+\n+        public WatchList(List<Watch> watches) {\n+            this.watches = watches;\n+        }\n+\n+        @Override\n+        public void close() throws IOException {\n+            RuntimeException r = null;\n+            for (Watch watch: watches) {\n+                try {\n+                    watch.close();\n+                } catch(RuntimeException e) {\n+                    if (r == null) {\n+                        r = new RuntimeException();\n+                    }\n+                    r.addSuppressed(e);\n+                }\n+            }\n+            if (r != null) {\n+                throw r;\n+            }\n+        }\n+    }\n+", "originalCommit": "2007d04566666ef4452c2afeca11c54238209833", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwNDk2OQ==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742#discussion_r393204969", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                if (r == null) {\n          \n          \n            \n                                    r = new RuntimeException();\n          \n          \n            \n                                }\n          \n          \n            \n                                r.addSuppressed(e);\n          \n          \n            \n                                if (r == null) {\n          \n          \n            \n                                    r = e;\n          \n          \n            \n                                } else {\n          \n          \n            \n                                    r.addSuppressed(e);\n          \n          \n            \n                                }", "author": "jglick", "createdAt": "2020-03-16T17:47:44Z", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesLauncher.java", "diffHunk": "@@ -259,6 +266,32 @@ private void logLastLines(List<ContainerStatus> containers, String podId, String\n         }\n     }\n \n+    private static class WatchList implements Closeable {\n+        private List<Watch> watches;\n+\n+        public WatchList(List<Watch> watches) {\n+            this.watches = watches;\n+        }\n+\n+        @Override\n+        public void close() throws IOException {\n+            RuntimeException r = null;\n+            for (Watch watch: watches) {\n+                try {\n+                    watch.close();\n+                } catch(RuntimeException e) {\n+                    if (r == null) {\n+                        r = new RuntimeException();\n+                    }\n+                    r.addSuppressed(e);", "originalCommit": "2007d04566666ef4452c2afeca11c54238209833", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwOTc0Mg==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742#discussion_r393209742", "bodyText": "Is this special case still needed? I am not really sure what it was doing to begin with; looks suspicious.", "author": "jglick", "createdAt": "2020-03-16T17:55:53Z", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesLauncher.java", "diffHunk": "@@ -112,28 +114,26 @@ public void launch(SlaveComputer computer, TaskListener listener) {\n             Pod pod = template.build(slave);\n             slave.assignPod(pod);\n \n-            String podId = pod.getMetadata().getName();\n+            String podName = pod.getMetadata().getName();\n \n             String namespace = Arrays.asList( //\n                     pod.getMetadata().getNamespace(),\n                     template.getNamespace(), client.getNamespace()) //\n                     .stream().filter(s -> StringUtils.isNotBlank(s)).findFirst().orElse(null);\n             slave.setNamespace(namespace);\n \n-            LOGGER.log(Level.FINE, \"Creating Pod: {0}/{1}\", new Object[] { namespace, podId });\n+            LOGGER.log(Level.FINE, \"Creating Pod: {0}/{1}\", new Object[] { namespace, podName });\n             pod = client.pods().inNamespace(namespace).create(pod);\n-            LOGGER.log(INFO, \"Created Pod: {0}/{1}\", new Object[] { namespace, podId });\n-            listener.getLogger().printf(\"Created Pod: %s/%s%n\", namespace, podId);\n+            LOGGER.log(INFO, \"Created Pod: {0}/{1}\", new Object[] { namespace, podName });\n+            listener.getLogger().printf(\"Created Pod: %s/%s%n\", namespace, podName);\n \n             TaskListener runListener = template.getListener();\n-            runListener.getLogger().printf(\"Created Pod: %s in namespace %s%n\", podId, namespace);\n-\n+            runListener.getLogger().printf(\"Created Pod: %s/%s%n\", namespace, podName);\n \n-            String podName = pod.getMetadata().getName();\n-            String namespace1 = pod.getMetadata().getNamespace();\n             template.getWorkspaceVolume().createVolume(client, pod.getMetadata());\n             watcher = new AllContainersRunningPodWatcher(client, pod, runListener);\n-            try (Watch _w = client.pods().inNamespace(namespace1).withName(podName).watch(watcher)) {\n+            try (Watch w1 = client.pods().inNamespace(namespace).withName(podName).watch(watcher);\n+                 Watch w2 = client.events().inNamespace(namespace).withField(\"involvedObject.name\", podName).watch(new TaskListenerEventWatcher(podName, runListener))) {\n                 watcher.await(template.getSlaveConnectTimeout(), TimeUnit.SECONDS);\n             } catch (InvalidDockerImageException e) {", "originalCommit": "2007d04566666ef4452c2afeca11c54238209833", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzUxNzA0Mw==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742#discussion_r393517043", "bodyText": "It fails the build if one of the docker images is invalid (#497). Ideally I think it would deserve a rework but it works.", "author": "Vlatombe", "createdAt": "2020-03-17T08:38:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwOTc0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcyOTAyOA==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742#discussion_r393729028", "bodyText": "But the build would fail anyway, without this clause; the exception would be thrown up out of launch. Right? And with this PR, you would see the appropriate diagnostics right in the log. But the current code here does more, by canceling some queue items (which seem to be any node blocks associated with this build, which is wrong by the way\u2014should only be canceling the node block associated with this pod). If that is needed in order to prevent the build from hanging, then it is needed in many other error cases too. So this does not add up for me.", "author": "jglick", "createdAt": "2020-03-17T14:40:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwOTc0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzczNzQxNQ==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742#discussion_r393737415", "bodyText": "No, the launcher would just fail but this wouldn't affect the build so the build would wait forever.\n\nshould only be canceling the node block associated with this pod\n\nprobably.", "author": "Vlatombe", "createdAt": "2020-03-17T14:51:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwOTc0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc0NDAzOA==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742#discussion_r393744038", "bodyText": "I do not think this is anything blocking the current PR but it looks like something to revisit.", "author": "jglick", "createdAt": "2020-03-17T15:00:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwOTc0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ3NjQ0MQ==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742#discussion_r414476441", "bodyText": "@jglick I'm revisiting this, not sure how to find out item should be cancelled exactly.\nThe only correlation I can make seems to be based on label, since at this point the queue item is not yet assigned to the node. There could be several items waiting for a node if they are inside a parallel block or using a static pod template. So, cancel the first one only?", "author": "Vlatombe", "createdAt": "2020-04-24T10:40:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwOTc0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA3OTg1OQ==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742#discussion_r416079859", "bodyText": "Not sure.", "author": "jglick", "createdAt": "2020-04-27T19:13:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwOTc0Mg=="}], "type": "inlineReview"}, {"oid": "a60d030c4f5d5f5aed5a3c2aeada6fecb28d1f1c", "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/a60d030c4f5d5f5aed5a3c2aeada6fecb28d1f1c", "message": "Fix reviews", "committedDate": "2020-03-17T08:42:21Z", "type": "commit"}, {"oid": "a60d030c4f5d5f5aed5a3c2aeada6fecb28d1f1c", "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/a60d030c4f5d5f5aed5a3c2aeada6fecb28d1f1c", "message": "Fix reviews", "committedDate": "2020-03-17T08:42:21Z", "type": "forcePushed"}, {"oid": "7e1ca05a104b6edd7d5d83df7f3d7162f4db0116", "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/7e1ca05a104b6edd7d5d83df7f3d7162f4db0116", "message": "Degrade gracefully if can't watch events", "committedDate": "2020-03-17T09:00:54Z", "type": "commit"}, {"oid": "390bfc0a7fb95ca444fcf9840618141aca462268", "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/390bfc0a7fb95ca444fcf9840618141aca462268", "message": "Remove watch events - should mostly pass", "committedDate": "2020-03-17T09:01:15Z", "type": "commit"}, {"oid": "f466c317d66fc2324a5616c8402da9904a5464bb", "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/f466c317d66fc2324a5616c8402da9904a5464bb", "message": "Fix changed line", "committedDate": "2020-03-17T09:05:55Z", "type": "commit"}, {"oid": "41786483f1c7ada8ee20fb6cef9d4b78ace66f8e", "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/41786483f1c7ada8ee20fb6cef9d4b78ace66f8e", "message": "Fix spotbugs", "committedDate": "2020-03-17T10:13:47Z", "type": "commit"}, {"oid": "e2349709bf074cdfb0098540a95cf03908510dad", "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/e2349709bf074cdfb0098540a95cf03908510dad", "message": "Un-comment role to pass", "committedDate": "2020-03-17T12:45:04Z", "type": "commit"}, {"oid": "d67bd92aa1ef950367a852fc3b782be4c87560cb", "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/d67bd92aa1ef950367a852fc3b782be4c87560cb", "message": "Move class and make package-private", "committedDate": "2020-03-17T13:35:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcxMjg4OQ==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742#discussion_r393712889", "bodyText": "Is is reasonable to ask that this log line be written more readily (less restricted than FINE) and include a note/link to instructions for the required level of access needed to watch pod events?", "author": "lelandsindttouchnet", "createdAt": "2020-03-17T14:18:36Z", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesLauncher.java", "diffHunk": "@@ -229,6 +230,15 @@ public void launch(SlaveComputer computer, TaskListener listener) {\n         }\n     }\n \n+    private Watch eventWatch(KubernetesClient client, String podName, String namespace, TaskListener runListener) {\n+        try {\n+            return client.events().inNamespace(namespace).withField(\"involvedObject.name\", podName).watch(new TaskListenerEventWatcher(podName, runListener));\n+        } catch (KubernetesClientException e) {\n+            LOGGER.log(Level.FINE, e, () -> \"Cannot watch events on \" + namespace + \"/\" +podName);", "originalCommit": "d67bd92aa1ef950367a852fc3b782be4c87560cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcyNjg0MA==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742#discussion_r393726840", "bodyText": "Yes, this seems like it could be at INFO.", "author": "jglick", "createdAt": "2020-03-17T14:37:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcxMjg4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzczMjg1MA==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742#discussion_r393732850", "bodyText": "Or printed to the runListener.", "author": "jglick", "createdAt": "2020-03-17T14:45:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcxMjg4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzczMTc3Nw==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742#discussion_r393731777", "bodyText": "How could it be null? You just assigned it via a constructor. Does SpotBugs not reject this?", "author": "jglick", "createdAt": "2020-03-17T14:44:05Z", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesLauncher.java", "diffHunk": "@@ -112,29 +113,29 @@ public void launch(SlaveComputer computer, TaskListener listener) {\n             Pod pod = template.build(slave);\n             slave.assignPod(pod);\n \n-            String podId = pod.getMetadata().getName();\n+            String podName = pod.getMetadata().getName();\n \n             String namespace = Arrays.asList( //\n                     pod.getMetadata().getNamespace(),\n                     template.getNamespace(), client.getNamespace()) //\n                     .stream().filter(s -> StringUtils.isNotBlank(s)).findFirst().orElse(null);\n             slave.setNamespace(namespace);\n \n-            LOGGER.log(Level.FINE, \"Creating Pod: {0}/{1}\", new Object[] { namespace, podId });\n+            LOGGER.log(Level.FINE, \"Creating Pod: {0}/{1}\", new Object[] { namespace, podName });\n             pod = client.pods().inNamespace(namespace).create(pod);\n-            LOGGER.log(INFO, \"Created Pod: {0}/{1}\", new Object[] { namespace, podId });\n-            listener.getLogger().printf(\"Created Pod: %s/%s%n\", namespace, podId);\n+            LOGGER.log(INFO, \"Created Pod: {0}/{1}\", new Object[] { namespace, podName });\n+            listener.getLogger().printf(\"Created Pod: %s/%s%n\", namespace, podName);\n \n             TaskListener runListener = template.getListener();\n-            runListener.getLogger().printf(\"Created Pod: %s in namespace %s%n\", podId, namespace);\n-\n+            runListener.getLogger().printf(\"Created Pod: %s/%s%n\", namespace, podName);\n \n-            String podName = pod.getMetadata().getName();\n-            String namespace1 = pod.getMetadata().getNamespace();\n             template.getWorkspaceVolume().createVolume(client, pod.getMetadata());\n             watcher = new AllContainersRunningPodWatcher(client, pod, runListener);\n-            try (Watch _w = client.pods().inNamespace(namespace1).withName(podName).watch(watcher)) {\n-                watcher.await(template.getSlaveConnectTimeout(), TimeUnit.SECONDS);\n+            try (Watch w1 = client.pods().inNamespace(namespace).withName(podName).watch(watcher);\n+                 Watch w2 = eventWatch(client, podName, namespace, runListener)) {\n+                if (watcher != null) {", "originalCommit": "d67bd92aa1ef950367a852fc3b782be4c87560cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzczNDQ3MQ==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742#discussion_r393734471", "bodyText": "I guess Spotbugs thinks eventWatch could have a side-effect.", "author": "Vlatombe", "createdAt": "2020-03-17T14:47:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzczMTc3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzczNTI2NQ==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742#discussion_r393735265", "bodyText": "AFAICT the watcher field is only written to in the one place above, so it should be definitely non-null here. You can always\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if (watcher != null) {\n          \n          \n            \n                            assert watcher != null;\n          \n      \n    \n    \n  \n\nto make it behave.", "author": "jglick", "createdAt": "2020-03-17T14:48:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzczMTc3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzczNzgzOA==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742#discussion_r393737838", "bodyText": "\ud83e\udd37\u200d\u2642", "author": "Vlatombe", "createdAt": "2020-03-17T14:52:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzczMTc3Nw=="}], "type": "inlineReview"}, {"oid": "7cf310bcfde56c4af681330b006982ba675b363a", "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/7cf310bcfde56c4af681330b006982ba675b363a", "message": "Log unability to watch events with INFO level", "committedDate": "2020-03-17T14:49:51Z", "type": "commit"}, {"oid": "fde676cec23fa93677b3a1c4ba26f53a000e3bb8", "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/fde676cec23fa93677b3a1c4ba26f53a000e3bb8", "message": "Assert watcher is non-null", "committedDate": "2020-03-17T14:53:12Z", "type": "commit"}]}