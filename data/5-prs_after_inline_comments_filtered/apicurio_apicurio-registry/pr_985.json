{"pr_number": 985, "pr_title": "REST Client throw specific exceptions", "pr_createdAt": "2020-11-04T11:57:49Z", "pr_url": "https://github.com/Apicurio/apicurio-registry/pull/985", "timeline": [{"oid": "7bc890bbcc40a58029305ba2d5fca5b1c25a101f", "url": "https://github.com/Apicurio/apicurio-registry/commit/7bc890bbcc40a58029305ba2d5fca5b1c25a101f", "message": "Adapt artifact state test", "committedDate": "2020-11-04T12:05:44Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzMwNDY2Mg==", "url": "https://github.com/Apicurio/apicurio-registry/pull/985#discussion_r517304662", "bodyText": "What would you think about sending the exception classname as a response header instead of in the payload?", "author": "EricWittmann", "createdAt": "2020-11-04T12:21:40Z", "path": "app/src/main/java/io/apicurio/registry/rest/RegistryExceptionMapper.java", "diffHunk": "@@ -158,7 +169,7 @@ private static Error toError(Throwable t, int code) {\n         error.setErrorCode(code);\n         error.setMessage(t.getLocalizedMessage());\n         error.setDetail(getStackTrace(t));\n-\n+        error.setName(t.getClass().getSimpleName());", "originalCommit": "7bc890bbcc40a58029305ba2d5fca5b1c25a101f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzMzMjM5OQ==", "url": "https://github.com/Apicurio/apicurio-registry/pull/985#discussion_r517332399", "bodyText": "Hm, I'm not sure if that's a good idea since this is the error payload so for me, it make sense to add the error name here. Do you have any strong reason I'm not aware of?", "author": "carlesarnal", "createdAt": "2020-11-04T13:12:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzMwNDY2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM0NDQ2OA==", "url": "https://github.com/Apicurio/apicurio-registry/pull/985#discussion_r517344468", "bodyText": "I was going to argue that the error classname is a detail that most clients won't care about, but then I realized that the \"detail\" field holds the java stack trace... so that argument wouldn't be very good.  :)\nSo nevermind - having it in the payload makes sense and is consistent with what we're doing already.\nI'll update the OpenAPI definition.", "author": "EricWittmann", "createdAt": "2020-11-04T13:33:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzMwNDY2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzMwNTQxNw==", "url": "https://github.com/Apicurio/apicurio-registry/pull/985#discussion_r517305417", "bodyText": "Rename the field as well?  Since it's now an executor and not a handler...", "author": "EricWittmann", "createdAt": "2020-11-04T12:23:10Z", "path": "rest-client/src/main/java/io/apicurio/registry/client/RegistryRestClientImpl.java", "diffHunk": "@@ -81,7 +81,7 @@\n  */\n public class RegistryRestClientImpl implements RegistryRestClient {\n \n-    private final RequestHandler requestHandler;\n+    private final RequestExecutor requestHandler;", "originalCommit": "7bc890bbcc40a58029305ba2d5fca5b1c25a101f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzMzMDIwNw==", "url": "https://github.com/Apicurio/apicurio-registry/pull/985#discussion_r517330207", "bodyText": "Whoops, good catch.", "author": "carlesarnal", "createdAt": "2020-11-04T13:09:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzMwNTQxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM0NTc2OQ==", "url": "https://github.com/Apicurio/apicurio-registry/pull/985#discussion_r517345769", "bodyText": "Should this be abstract?", "author": "EricWittmann", "createdAt": "2020-11-04T13:35:09Z", "path": "rest-client/src/main/java/io/apicurio/registry/client/exception/AlreadyExistsException.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Copyright 2020 Red Hat\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.apicurio.registry.client.exception;\n+\n+import io.apicurio.registry.rest.beans.Error;\n+\n+public class AlreadyExistsException extends RestClientException {", "originalCommit": "7bc890bbcc40a58029305ba2d5fca5b1c25a101f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM0Njg2Nw==", "url": "https://github.com/Apicurio/apicurio-registry/pull/985#discussion_r517346867", "bodyText": "Should be abstract?", "author": "EricWittmann", "createdAt": "2020-11-04T13:36:48Z", "path": "rest-client/src/main/java/io/apicurio/registry/client/exception/NotFoundException.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Copyright 2020 Red Hat\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.apicurio.registry.client.exception;\n+\n+import io.apicurio.registry.rest.beans.Error;\n+\n+public class NotFoundException extends RestClientException {", "originalCommit": "7bc890bbcc40a58029305ba2d5fca5b1c25a101f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM0NzU5MQ==", "url": "https://github.com/Apicurio/apicurio-registry/pull/985#discussion_r517347591", "bodyText": "Is there any way to parse the error detail into a stack trace that we could then use as a root cause?  Probably not, but worth investigating??", "author": "EricWittmann", "createdAt": "2020-11-04T13:37:50Z", "path": "rest-client/src/main/java/io/apicurio/registry/client/exception/RestClientException.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright 2020 Red Hat\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.apicurio.registry.client.exception;\n+\n+import io.apicurio.registry.rest.beans.Error;\n+\n+/**\n+ * @author Carles Arnal <carles.arnal@redhat.com>\n+ */\n+public class RestClientException extends RuntimeException {\n+\n+    private final Error error;\n+\n+    public RestClientException(Error error) {\n+        super(error.getMessage());", "originalCommit": "7bc890bbcc40a58029305ba2d5fca5b1c25a101f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQwOTgyMQ==", "url": "https://github.com/Apicurio/apicurio-registry/pull/985#discussion_r517409821", "bodyText": "Let me take a look.", "author": "carlesarnal", "createdAt": "2020-11-04T15:04:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM0NzU5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk0NTg1NQ==", "url": "https://github.com/Apicurio/apicurio-registry/pull/985#discussion_r517945855", "bodyText": "I haven't found a way to convert the String to a stack trace.", "author": "carlesarnal", "createdAt": "2020-11-05T10:29:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM0NzU5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM0NzgxOA==", "url": "https://github.com/Apicurio/apicurio-registry/pull/985#discussion_r517347818", "bodyText": "Should extend NotFoundException ?", "author": "EricWittmann", "createdAt": "2020-11-04T13:38:15Z", "path": "rest-client/src/main/java/io/apicurio/registry/client/exception/RuleNotFoundException.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Copyright 2020 Red Hat\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.apicurio.registry.client.exception;\n+\n+import io.apicurio.registry.rest.beans.Error;\n+\n+/**\n+ * @author Carles Arnal <carles.arnal@redhat.com>\n+ */\n+public class RuleNotFoundException extends RestClientException {", "originalCommit": "7bc890bbcc40a58029305ba2d5fca5b1c25a101f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM0ODEwNg==", "url": "https://github.com/Apicurio/apicurio-registry/pull/985#discussion_r517348106", "bodyText": "Should extend NotFoundException?", "author": "EricWittmann", "createdAt": "2020-11-04T13:38:44Z", "path": "rest-client/src/main/java/io/apicurio/registry/client/exception/VersionNotFoundException.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Copyright 2020 Red Hat\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.apicurio.registry.client.exception;\n+\n+import io.apicurio.registry.rest.beans.Error;\n+\n+/**\n+ * @author Carles Arnal <carles.arnal@redhat.com>\n+ */\n+public class VersionNotFoundException extends RestClientException {", "originalCommit": "7bc890bbcc40a58029305ba2d5fca5b1c25a101f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM0ODUyOA==", "url": "https://github.com/Apicurio/apicurio-registry/pull/985#discussion_r517348528", "bodyText": "Can probably just remove this extra ;?", "author": "EricWittmann", "createdAt": "2020-11-04T13:39:22Z", "path": "rest-client/src/main/java/io/apicurio/registry/client/request/HeadersInterceptor.java", "diffHunk": "@@ -40,15 +40,14 @@ public Response intercept(Chain chain) throws IOException {\n \n         final Request request = chain.request();\n \n-\n         final Headers requestHeaders = request.headers().newBuilder()\n-                .addAll(Headers.of(headers)).build();;\n-\n+                .addAll(Headers.of(headers)).build();\n+        ;", "originalCommit": "7bc890bbcc40a58029305ba2d5fca5b1c25a101f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM0OTQ5MA==", "url": "https://github.com/Apicurio/apicurio-registry/pull/985#discussion_r517349490", "bodyText": "This is much nicer now!", "author": "EricWittmann", "createdAt": "2020-11-04T13:40:48Z", "path": "utils/serde/src/main/java/io/apicurio/registry/utils/serde/strategy/AbstractCrudIdStrategy.java", "diffHunk": "@@ -44,18 +44,16 @@ protected void afterCreateArtifact(T schema, ArtifactMetaData amd) {\n     public long findId(RegistryRestClient client, String artifactId, ArtifactType artifactType, T schema) {\n         try {\n             return initialLookup(client, artifactId, artifactType, schema);\n-        } catch (WebApplicationException e) {\n-            if (isNotFound(e.getResponse())) {\n-                ArtifactMetaData amd = client.createArtifact(artifactId, artifactType, IfExistsType.RETURN_OR_UPDATE, toStream(schema));\n-                afterCreateArtifact(schema, amd);\n-                return amd.getGlobalId();\n-            } else {\n-                throw new IllegalStateException(String.format(\n+        } catch (ArtifactNotFoundException e) {\n+            ArtifactMetaData amd = client.createArtifact(artifactId, artifactType, IfExistsType.RETURN_OR_UPDATE, toStream(schema));\n+            afterCreateArtifact(schema, amd);\n+            return amd.getGlobalId();", "originalCommit": "7bc890bbcc40a58029305ba2d5fca5b1c25a101f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2777a8035fb6b75d1ba3f5c14136c0adec3c7efc", "url": "https://github.com/Apicurio/apicurio-registry/commit/2777a8035fb6b75d1ba3f5c14136c0adec3c7efc", "message": "Use proper exceptions in tests and ignore unknown fields", "committedDate": "2020-11-05T10:09:53Z", "type": "forcePushed"}, {"oid": "63ede13b84044aaf3d6eec3c5714f8ce6317ca41", "url": "https://github.com/Apicurio/apicurio-registry/commit/63ede13b84044aaf3d6eec3c5714f8ce6317ca41", "message": "Use proper exceptions in tests and ignore unknown fields", "committedDate": "2020-11-05T10:20:56Z", "type": "forcePushed"}, {"oid": "1759e839b6e8e4f618823c044a34b058708617ea", "url": "https://github.com/Apicurio/apicurio-registry/commit/1759e839b6e8e4f618823c044a34b058708617ea", "message": "Add rest client exception mapper", "committedDate": "2020-11-05T16:36:20Z", "type": "commit"}, {"oid": "930b9e980c1445c24103ed5b0a293d5c7e2c0590", "url": "https://github.com/Apicurio/apicurio-registry/commit/930b9e980c1445c24103ed5b0a293d5c7e2c0590", "message": "Add all exception kinds", "committedDate": "2020-11-05T16:37:37Z", "type": "commit"}, {"oid": "42abbd7a8e00bbd95ba63fc39258ae151e5fb4be", "url": "https://github.com/Apicurio/apicurio-registry/commit/42abbd7a8e00bbd95ba63fc39258ae151e5fb4be", "message": "Change tests to expect rest client exceptions", "committedDate": "2020-11-05T16:37:37Z", "type": "commit"}, {"oid": "179894ea45a370028b55991b18c17ad798e489af", "url": "https://github.com/Apicurio/apicurio-registry/commit/179894ea45a370028b55991b18c17ad798e489af", "message": "Adapt artifact state test", "committedDate": "2020-11-05T16:37:37Z", "type": "commit"}, {"oid": "87a03a524f6d2ef4f7879343c89d549bcbd23a94", "url": "https://github.com/Apicurio/apicurio-registry/commit/87a03a524f6d2ef4f7879343c89d549bcbd23a94", "message": "Change request executor variable name", "committedDate": "2020-11-05T16:39:27Z", "type": "commit"}, {"oid": "ecb08ee079a95b9c01e030fbf8c9659728459c3e", "url": "https://github.com/Apicurio/apicurio-registry/commit/ecb08ee079a95b9c01e030fbf8c9659728459c3e", "message": "Improve error classes hierarchy", "committedDate": "2020-11-05T16:39:27Z", "type": "commit"}, {"oid": "76ac463b1827d1ccbc24aca84407214e29e4c80b", "url": "https://github.com/Apicurio/apicurio-registry/commit/76ac463b1827d1ccbc24aca84407214e29e4c80b", "message": "Use proper exceptions in tests and ignore unknown fields", "committedDate": "2020-11-05T16:39:27Z", "type": "commit"}, {"oid": "f2caeaa9439e237b7cb5ebb8c857611758a34636", "url": "https://github.com/Apicurio/apicurio-registry/commit/f2caeaa9439e237b7cb5ebb8c857611758a34636", "message": "Remove unnecessary semicolon", "committedDate": "2020-11-05T16:39:27Z", "type": "commit"}, {"oid": "c6b9474ae1ddcc9572b1889d03705f4c71e1f205", "url": "https://github.com/Apicurio/apicurio-registry/commit/c6b9474ae1ddcc9572b1889d03705f4c71e1f205", "message": "Remove unnecessary imports", "committedDate": "2020-11-05T16:39:27Z", "type": "commit"}, {"oid": "c6b9474ae1ddcc9572b1889d03705f4c71e1f205", "url": "https://github.com/Apicurio/apicurio-registry/commit/c6b9474ae1ddcc9572b1889d03705f4c71e1f205", "message": "Remove unnecessary imports", "committedDate": "2020-11-05T16:39:27Z", "type": "forcePushed"}]}