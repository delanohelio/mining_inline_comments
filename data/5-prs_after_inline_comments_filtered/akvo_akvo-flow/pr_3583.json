{"pr_number": 3583, "pr_title": "[#3145] Webform redirection", "pr_createdAt": "2020-05-26T16:34:50Z", "pr_url": "https://github.com/akvo/akvo-flow/pull/3583", "timeline": [{"oid": "599ecb2e1d8b6ec3acc41eb3b11221524d05e2b8", "url": "https://github.com/akvo/akvo-flow/commit/599ecb2e1d8b6ec3acc41eb3b11221524d05e2b8", "message": "[#3145] Webform redirection\n\nPattern\nhttps://flow-instance.akvoflow.org/webforms/webFormId =>\nhttps://tech-consultancy.akvotest.org/akvo-flow-web/flow-instance/surveyId", "committedDate": "2020-05-27T09:20:33Z", "type": "commit"}, {"oid": "599ecb2e1d8b6ec3acc41eb3b11221524d05e2b8", "url": "https://github.com/akvo/akvo-flow/commit/599ecb2e1d8b6ec3acc41eb3b11221524d05e2b8", "message": "[#3145] Webform redirection\n\nPattern\nhttps://flow-instance.akvoflow.org/webforms/webFormId =>\nhttps://tech-consultancy.akvotest.org/akvo-flow-web/flow-instance/surveyId", "committedDate": "2020-05-27T09:20:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk4MDEwMw==", "url": "https://github.com/akvo/akvo-flow/pull/3583#discussion_r430980103", "bodyText": "@muloem how can we read the flow env akvotest value in flow app? so we can use prod depending deployment environment", "author": "tangrammer", "createdAt": "2020-05-27T09:24:24Z", "path": "GAE/src/org/akvo/flow/api/app/WebFormServlet.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ *  Copyright (C) 2020 Stichting Akvo (Akvo Foundation)\n+ *\n+ *  This file is part of Akvo FLOW.\n+ *\n+ *  Akvo FLOW is free software: you can redistribute it and modify it under the terms of\n+ *  the GNU Affero General Public License (AGPL) as published by the Free Software Foundation,\n+ *  either version 3 of the License or any later version.\n+ *\n+ *  Akvo FLOW is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n+ *  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n+ *  See the GNU Affero General Public License included below for more details.\n+ *\n+ *  The full license text can also be seen at <http://www.gnu.org/licenses/agpl.html>.\n+ */\n+\n+package org.akvo.flow.api.app;\n+\n+import com.gallatinsystems.framework.rest.AbstractRestApiServlet;\n+import com.gallatinsystems.framework.rest.RestRequest;\n+import com.gallatinsystems.framework.rest.RestResponse;\n+import com.google.appengine.api.utils.SystemProperty;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import java.util.logging.Logger;\n+\n+\n+/**\n+ * Redirect to tech-consultancy url or show the error\n+ */\n+@SuppressWarnings(\"serial\")\n+public class WebFormServlet extends AbstractRestApiServlet {\n+    private static final Logger log = Logger.getLogger(WebFormServlet.class.getName());\n+\n+    public WebFormServlet() {\n+        setMode(JSON_MODE);\n+    }\n+\n+    @Override\n+    protected RestRequest convertRequest() throws Exception {\n+        HttpServletRequest req = getRequest();\n+        log.warning(req.getPathInfo());\n+        RestRequest restRequest = new WebFormRequest();\n+        restRequest.populateFromHttpRequest(req);\n+        return restRequest;\n+    }\n+\n+    @Override\n+    protected RestResponse handleRequest(RestRequest req) throws Exception {\n+        RestResponse res = new RestResponse();\n+        res.setCode(String.valueOf(HttpServletResponse.SC_OK));\n+        String surveyId = ((WebFormRequest)req).getSurveyId();\n+        String url = String.format(\"https://tech-consultancy.akvotest.org/akvo-flow-web/%s/%s\", SystemProperty.applicationId.get(), surveyId);", "originalCommit": "599ecb2e1d8b6ec3acc41eb3b11221524d05e2b8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTAxNDgyMQ==", "url": "https://github.com/akvo/akvo-flow/pull/3583#discussion_r431014821", "bodyText": "You would need to add it to the appengine-web config and feed it in through the EnvServlet.java", "author": "muloem", "createdAt": "2020-05-27T10:25:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk4MDEwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTAyNzI1NQ==", "url": "https://github.com/akvo/akvo-flow/pull/3583#discussion_r431027255", "bodyText": "akvo/akvo-flow-server-config#600", "author": "tangrammer", "createdAt": "2020-05-27T10:48:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk4MDEwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTAzNjUxMw==", "url": "https://github.com/akvo/akvo-flow/pull/3583#discussion_r431036513", "bodyText": "2ef5a43", "author": "tangrammer", "createdAt": "2020-05-27T11:07:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk4MDEwMw=="}], "type": "inlineReview"}, {"oid": "2ef5a43c4c6154763a78398ce1e729b34699bb1e", "url": "https://github.com/akvo/akvo-flow/commit/2ef5a43c4c6154763a78398ce1e729b34699bb1e", "message": "[#3145] Load webFormRedirectionUrl as config value\n\nhttps://github.com/akvo/akvo-flow-server-config/pull/600/files", "committedDate": "2020-05-27T11:05:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4NDk0Ng==", "url": "https://github.com/akvo/akvo-flow/pull/3583#discussion_r431084946", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    String url = String.format(\"%s/%s/%s\", PropertyUtil.getProperty(EnvServlet.WEBFORM_REDIRECTION_URL), SystemProperty.applicationId.get(), surveyId);\n          \n          \n            \n                    String url = String.format(\"%s/%s/%s\", PropertyUtil.getProperty(EnvServlet.WEBFORM_REDIRECTION_URL), PropertyUtil.getProperty(\"appId\"), surveyId);", "author": "muloem", "createdAt": "2020-05-27T12:39:37Z", "path": "GAE/src/org/akvo/flow/api/app/WebFormServlet.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ *  Copyright (C) 2020 Stichting Akvo (Akvo Foundation)\n+ *\n+ *  This file is part of Akvo FLOW.\n+ *\n+ *  Akvo FLOW is free software: you can redistribute it and modify it under the terms of\n+ *  the GNU Affero General Public License (AGPL) as published by the Free Software Foundation,\n+ *  either version 3 of the License or any later version.\n+ *\n+ *  Akvo FLOW is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n+ *  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n+ *  See the GNU Affero General Public License included below for more details.\n+ *\n+ *  The full license text can also be seen at <http://www.gnu.org/licenses/agpl.html>.\n+ */\n+\n+package org.akvo.flow.api.app;\n+\n+import com.gallatinsystems.common.util.PropertyUtil;\n+import com.gallatinsystems.framework.rest.AbstractRestApiServlet;\n+import com.gallatinsystems.framework.rest.RestRequest;\n+import com.gallatinsystems.framework.rest.RestResponse;\n+import com.google.appengine.api.utils.SystemProperty;\n+\n+import org.waterforpeople.mapping.app.web.EnvServlet;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import java.util.logging.Logger;\n+\n+\n+/**\n+ * Redirect to tech-consultancy url or show the error\n+ */\n+@SuppressWarnings(\"serial\")\n+public class WebFormServlet extends AbstractRestApiServlet {\n+    private static final Logger log = Logger.getLogger(WebFormServlet.class.getName());\n+\n+    public WebFormServlet() {\n+        setMode(JSON_MODE);\n+    }\n+\n+    @Override\n+    protected RestRequest convertRequest() throws Exception {\n+        HttpServletRequest req = getRequest();\n+        log.warning(req.getPathInfo());\n+        RestRequest restRequest = new WebFormRequest();\n+        restRequest.populateFromHttpRequest(req);\n+        return restRequest;\n+    }\n+\n+    @Override\n+    protected RestResponse handleRequest(RestRequest req) throws Exception {\n+        RestResponse res = new RestResponse();\n+        res.setCode(String.valueOf(HttpServletResponse.SC_OK));\n+        String surveyId = ((WebFormRequest)req).getSurveyId();\n+        String url = String.format(\"%s/%s/%s\", PropertyUtil.getProperty(EnvServlet.WEBFORM_REDIRECTION_URL), SystemProperty.applicationId.get(), surveyId);", "originalCommit": "2ef5a43c4c6154763a78398ce1e729b34699bb1e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4NTEzNA==", "url": "https://github.com/akvo/akvo-flow/pull/3583#discussion_r431085134", "bodyText": "We try to keep all property access through same class when possible.", "author": "muloem", "createdAt": "2020-05-27T12:39:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4NDk0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4Nzc1Ng==", "url": "https://github.com/akvo/akvo-flow/pull/3583#discussion_r431087756", "bodyText": "Is this for debugging?", "author": "muloem", "createdAt": "2020-05-27T12:44:19Z", "path": "GAE/src/org/akvo/flow/api/app/WebFormServlet.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ *  Copyright (C) 2020 Stichting Akvo (Akvo Foundation)\n+ *\n+ *  This file is part of Akvo FLOW.\n+ *\n+ *  Akvo FLOW is free software: you can redistribute it and modify it under the terms of\n+ *  the GNU Affero General Public License (AGPL) as published by the Free Software Foundation,\n+ *  either version 3 of the License or any later version.\n+ *\n+ *  Akvo FLOW is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n+ *  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n+ *  See the GNU Affero General Public License included below for more details.\n+ *\n+ *  The full license text can also be seen at <http://www.gnu.org/licenses/agpl.html>.\n+ */\n+\n+package org.akvo.flow.api.app;\n+\n+import com.gallatinsystems.common.util.PropertyUtil;\n+import com.gallatinsystems.framework.rest.AbstractRestApiServlet;\n+import com.gallatinsystems.framework.rest.RestRequest;\n+import com.gallatinsystems.framework.rest.RestResponse;\n+import com.google.appengine.api.utils.SystemProperty;\n+\n+import org.waterforpeople.mapping.app.web.EnvServlet;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import java.util.logging.Logger;\n+\n+\n+/**\n+ * Redirect to tech-consultancy url or show the error\n+ */\n+@SuppressWarnings(\"serial\")\n+public class WebFormServlet extends AbstractRestApiServlet {\n+    private static final Logger log = Logger.getLogger(WebFormServlet.class.getName());\n+\n+    public WebFormServlet() {\n+        setMode(JSON_MODE);\n+    }\n+\n+    @Override\n+    protected RestRequest convertRequest() throws Exception {\n+        HttpServletRequest req = getRequest();\n+        log.warning(req.getPathInfo());", "originalCommit": "2ef5a43c4c6154763a78398ce1e729b34699bb1e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4ODA5NQ==", "url": "https://github.com/akvo/akvo-flow/pull/3583#discussion_r431088095", "bodyText": "if so maybe better log.debug() instead?", "author": "muloem", "createdAt": "2020-05-27T12:44:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4Nzc1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA5Mzg2Mw==", "url": "https://github.com/akvo/akvo-flow/pull/3583#discussion_r431093863", "bodyText": "forgot it, removing now", "author": "tangrammer", "createdAt": "2020-05-27T12:54:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4Nzc1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4ODU5MA==", "url": "https://github.com/akvo/akvo-flow/pull/3583#discussion_r431088590", "bodyText": "\ud83d\udc4d", "author": "muloem", "createdAt": "2020-05-27T12:45:39Z", "path": "GAE/src/org/akvo/flow/api/app/WebFormServlet.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ *  Copyright (C) 2020 Stichting Akvo (Akvo Foundation)\n+ *\n+ *  This file is part of Akvo FLOW.\n+ *\n+ *  Akvo FLOW is free software: you can redistribute it and modify it under the terms of\n+ *  the GNU Affero General Public License (AGPL) as published by the Free Software Foundation,\n+ *  either version 3 of the License or any later version.\n+ *\n+ *  Akvo FLOW is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n+ *  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n+ *  See the GNU Affero General Public License included below for more details.\n+ *\n+ *  The full license text can also be seen at <http://www.gnu.org/licenses/agpl.html>.\n+ */\n+\n+package org.akvo.flow.api.app;\n+\n+import com.gallatinsystems.common.util.PropertyUtil;\n+import com.gallatinsystems.framework.rest.AbstractRestApiServlet;\n+import com.gallatinsystems.framework.rest.RestRequest;\n+import com.gallatinsystems.framework.rest.RestResponse;\n+import com.google.appengine.api.utils.SystemProperty;\n+\n+import org.waterforpeople.mapping.app.web.EnvServlet;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import java.util.logging.Logger;\n+\n+\n+/**\n+ * Redirect to tech-consultancy url or show the error\n+ */\n+@SuppressWarnings(\"serial\")\n+public class WebFormServlet extends AbstractRestApiServlet {\n+    private static final Logger log = Logger.getLogger(WebFormServlet.class.getName());\n+\n+    public WebFormServlet() {\n+        setMode(JSON_MODE);\n+    }\n+\n+    @Override\n+    protected RestRequest convertRequest() throws Exception {\n+        HttpServletRequest req = getRequest();\n+        log.warning(req.getPathInfo());\n+        RestRequest restRequest = new WebFormRequest();\n+        restRequest.populateFromHttpRequest(req);\n+        return restRequest;\n+    }\n+\n+    @Override\n+    protected RestResponse handleRequest(RestRequest req) throws Exception {\n+        RestResponse res = new RestResponse();\n+        res.setCode(String.valueOf(HttpServletResponse.SC_OK));\n+        String surveyId = ((WebFormRequest)req).getSurveyId();\n+        String url = String.format(\"%s/%s/%s\", PropertyUtil.getProperty(EnvServlet.WEBFORM_REDIRECTION_URL), SystemProperty.applicationId.get(), surveyId);\n+        res.setMessage(url);\n+        return res;\n+    }\n+\n+   \n+    /**\n+     * writes response as a JSON string\n+     */\n+    @Override\n+    protected void writeOkResponse(RestResponse resp) throws Exception {\n+        int sc;\n+        try {\n+            sc = Integer.valueOf(resp.getCode());\n+        } catch (NumberFormatException ignored) {\n+            // Status code was not properly set in the RestResponse\n+            sc = HttpServletResponse.SC_INTERNAL_SERVER_ERROR;\n+        }\n+        getResponse().setStatus(sc);\n+        if (sc == HttpServletResponse.SC_OK) {\n+            HttpServletResponse response = getResponse();\n+            response.setContentType(\"text/html\");\n+            response.setStatus(response.SC_MOVED_TEMPORARILY);", "originalCommit": "2ef5a43c4c6154763a78398ce1e729b34699bb1e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "575c2a6f759495c4b6f060c2d352fe50ab2c8f00", "url": "https://github.com/akvo/akvo-flow/commit/575c2a6f759495c4b6f060c2d352fe50ab2c8f00", "message": "Update GAE/src/org/akvo/flow/api/app/WebFormServlet.java\n\nCo-authored-by: Emmanuel Mulo <emmanuel@akvo.org>", "committedDate": "2020-05-27T12:53:36Z", "type": "commit"}, {"oid": "f3cac52e12377acd7d7e9526c32a0af81c5dff90", "url": "https://github.com/akvo/akvo-flow/commit/f3cac52e12377acd7d7e9526c32a0af81c5dff90", "message": "[#3145] Tidy up", "committedDate": "2020-05-27T12:56:06Z", "type": "commit"}, {"oid": "5fd34c082dc22697026357ce54ec41963e0f4920", "url": "https://github.com/akvo/akvo-flow/commit/5fd34c082dc22697026357ce54ec41963e0f4920", "message": "[#3145] Use webapp-security /webforms/** = none", "committedDate": "2020-05-27T13:02:11Z", "type": "commit"}]}