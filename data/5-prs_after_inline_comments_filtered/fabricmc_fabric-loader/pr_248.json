{"pr_number": 248, "pr_title": "Add ability to get all CustomValues in a mod's metadata.", "pr_createdAt": "2020-05-18T22:23:14Z", "pr_url": "https://github.com/FabricMC/fabric-loader/pull/248", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyNTg0Nw==", "url": "https://github.com/FabricMC/fabric-loader/pull/248#discussion_r426925847", "bodyText": "Mind quickly document if this map is unmodifiable?", "author": "liach", "createdAt": "2020-05-18T22:26:47Z", "path": "src/main/java/net/fabricmc/loader/api/metadata/ModMetadata.java", "diffHunk": "@@ -63,6 +64,7 @@\n \n \tboolean containsCustomValue(String key);\n \tCustomValue getCustomValue(String key);\n+\tMap<String, CustomValue> getCustomValues();", "originalCommit": "affab7d3c68796db6ce6b9b19f3ed64b06042863", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyNjI2Ng==", "url": "https://github.com/FabricMC/fabric-loader/pull/248#discussion_r426926266", "bodyText": "Yes it is unmodifable, (See the CustomValueContainer).\nI'll add docs for it if you deem it nessecary", "author": "i509VCB", "createdAt": "2020-05-18T22:27:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyNTg0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkzMDExNA==", "url": "https://github.com/FabricMC/fabric-loader/pull/248#discussion_r426930114", "bodyText": "None of the other methods are documented at the moment, and I feel like it might make more sense to document the (un)modifiability of every method in the interface javadoc rather than this method in particular. (Edit: I'm not asking you to add javadocs in this PR, just that I don't think it would fit - plus it would imply that some of the other methods can be modified because they aren't explicitly marked as unmodifiable).", "author": "AlexIIL", "createdAt": "2020-05-18T22:39:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyNTg0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkzMDk0Mg==", "url": "https://github.com/FabricMC/fabric-loader/pull/248#discussion_r426930942", "bodyText": "Hmm. Yeah that makes sense, I'd probably open up a separate PR to document those other methods in that case.", "author": "i509VCB", "createdAt": "2020-05-18T22:41:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyNTg0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyNzMwNw==", "url": "https://github.com/FabricMC/fabric-loader/pull/248#discussion_r426927307", "bodyText": "maybe store the unmodifiable map wrapper in a field so you don't create one for each call", "author": "liach", "createdAt": "2020-05-18T22:30:55Z", "path": "src/main/java/net/fabricmc/loader/metadata/ModMetadataV1.java", "diffHunk": "@@ -572,4 +564,30 @@ public LicenseEntry deserialize(JsonElement json, Type typeOfT, JsonDeserializat\n \t\t\t}\n \t\t}\n \t}\n+\n+\tpublic static class CustomValueContainer {\n+\t\tprivate Map<String, CustomValue> customValues = new HashMap<>();\n+\n+\t\tprivate Map<String, CustomValue> getCustomValues() {\n+\t\t\treturn Collections.unmodifiableMap(this.customValues);", "originalCommit": "affab7d3c68796db6ce6b9b19f3ed64b06042863", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyOTU4Mg==", "url": "https://github.com/FabricMC/fabric-loader/pull/248#discussion_r426929582", "bodyText": "Well I'd say player should comment on that, we already end up recreating some lists and maps such as getting entrypoint containers here:\nhttps://github.com/FabricMC/fabric-loader/blob/master/src/main/java/net/fabricmc/loader/EntrypointStorage.java#L177", "author": "i509VCB", "createdAt": "2020-05-18T22:37:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyNzMwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyOTc3Mw==", "url": "https://github.com/FabricMC/fabric-loader/pull/248#discussion_r426929773", "bodyText": "Wouldn't it make sense to return a CvObject here ?", "author": "Pyrofab", "createdAt": "2020-05-18T22:38:30Z", "path": "src/main/java/net/fabricmc/loader/api/metadata/ModMetadata.java", "diffHunk": "@@ -63,6 +64,7 @@\n \n \tboolean containsCustomValue(String key);\n \tCustomValue getCustomValue(String key);\n+\tMap<String, CustomValue> getCustomValues();", "originalCommit": "affab7d3c68796db6ce6b9b19f3ed64b06042863", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkzMDIyMA==", "url": "https://github.com/FabricMC/fabric-loader/pull/248#discussion_r426930220", "bodyText": "I think it is possible to define any custom value there, such as:\n\"custom\": {\n  \"myval\": true\n}\nWhich wouldn't be a CvObject", "author": "i509VCB", "createdAt": "2020-05-18T22:39:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyOTc3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkzMDk4NA==", "url": "https://github.com/FabricMC/fabric-loader/pull/248#discussion_r426930984", "bodyText": "@i509VCB He means to return CvObject getCustomValues() than Map<String, CustomValue> getCustomValues()\nSo the CvObject is what the \"custom\": has, like in your case,\n{\n  \"myval\": true\n}", "author": "liach", "createdAt": "2020-05-18T22:42:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyOTc3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkzMTMxNQ==", "url": "https://github.com/FabricMC/fabric-loader/pull/248#discussion_r426931315", "bodyText": "Oh I see what was meant. Yeah that makes sense since the root value must be an object", "author": "i509VCB", "createdAt": "2020-05-18T22:43:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyOTc3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkzMjEyNg==", "url": "https://github.com/FabricMC/fabric-loader/pull/248#discussion_r426932126", "bodyText": "I would have thought that the Map is likely to be more useful to expose than a CvObject. (Although I think this brings up the related question of why CvObject doesn't implement Map directly).", "author": "AlexIIL", "createdAt": "2020-05-18T22:45:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyOTc3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkzMjcwNg==", "url": "https://github.com/FabricMC/fabric-loader/pull/248#discussion_r426932706", "bodyText": "Imo Map is bad, as we should not expose any modification operations. CvObject doesn't while Map does.", "author": "liach", "createdAt": "2020-05-18T22:47:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyOTc3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkzNTcyOQ==", "url": "https://github.com/FabricMC/fabric-loader/pull/248#discussion_r426935729", "bodyText": "My reasoning is that we have a vast amount of library methods that can operate on maps directly (as it's a standard Java collection), plus it has a few more methods that might be useful to users (such as keySet()), whereas CvObject is a minimal interface with no javadoc.", "author": "AlexIIL", "createdAt": "2020-05-18T22:55:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyOTc3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkzNjUxNA==", "url": "https://github.com/FabricMC/fabric-loader/pull/248#discussion_r426936514", "bodyText": "I could see adding a keySet() method or making it Iterable as of great benefit in another PR. Shouldn't be too bad in the impl side since CvObjectImpl is backed by a map.", "author": "i509VCB", "createdAt": "2020-05-18T22:57:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyOTc3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkzNjUyOQ==", "url": "https://github.com/FabricMC/fabric-loader/pull/248#discussion_r426936529", "bodyText": "With your reasoning, we should dump the whole custom value system in favor of plain Object, and use checks like instanceof Number instanceof Boolean instanceof Map to retrieve the sub objects.\nI personally disagree with your proposal. The whole custom value system uses custom value, if they can use a map for the top level they still can't avoid depending on/using custom values in lower levels, so there is no point.", "author": "liach", "createdAt": "2020-05-18T22:57:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyOTc3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkzODQyNg==", "url": "https://github.com/FabricMC/fabric-loader/pull/248#discussion_r426938426", "bodyText": "No, that was not my suggestion. We still need CustomValue to limit the types that are available lower-down, however Map<String, CustomValue> does limit the possible types down to what can be expressed in JSON.", "author": "AlexIIL", "createdAt": "2020-05-18T23:03:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyOTc3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkzOTU2NQ==", "url": "https://github.com/FabricMC/fabric-loader/pull/248#discussion_r426939565", "bodyText": "Oh yeah, taking AlexIIL's suggestions into consideration, this doesn't solve much unless we make CvObject implement Iterable<CustomValue> (EDIT: Or expose child objects)\nSo I'll need to add methods to CvObject to expose the child custom objects", "author": "i509VCB", "createdAt": "2020-05-18T23:06:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyOTc3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkzOTg4Mw==", "url": "https://github.com/FabricMC/fabric-loader/pull/248#discussion_r426939883", "bodyText": "Edit2: Wait no it is iterable, what was I thinking lol", "author": "i509VCB", "createdAt": "2020-05-18T23:07:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyOTc3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk0MDIzOQ==", "url": "https://github.com/FabricMC/fabric-loader/pull/248#discussion_r426940239", "bodyText": "CvObject is already Iterable<Map.Entry<String, CustomValue>>", "author": "liach", "createdAt": "2020-05-18T23:08:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyOTc3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk0MDQ1OQ==", "url": "https://github.com/FabricMC/fabric-loader/pull/248#discussion_r426940459", "bodyText": "The root type is always going to be a JSON object, which is exactly a CvObject", "author": "liach", "createdAt": "2020-05-18T23:09:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyOTc3Mw=="}], "type": "inlineReview"}, {"oid": "69bec672103b12e20d3565c1301aefa1ce78c717", "url": "https://github.com/FabricMC/fabric-loader/commit/69bec672103b12e20d3565c1301aefa1ce78c717", "message": "Add ability to get all CustomValues in a mod's metadata.", "committedDate": "2020-06-18T21:35:16Z", "type": "commit"}, {"oid": "958c32125df109ae66615ab7a000ee9506e9c549", "url": "https://github.com/FabricMC/fabric-loader/commit/958c32125df109ae66615ab7a000ee9506e9c549", "message": "Use CvObject over a Map", "committedDate": "2020-06-18T21:35:18Z", "type": "commit"}, {"oid": "034ab4e9e8c5db2c9024f0653a5e0581da0f430f", "url": "https://github.com/FabricMC/fabric-loader/commit/034ab4e9e8c5db2c9024f0653a5e0581da0f430f", "message": "Clarify json parsing error", "committedDate": "2020-06-18T21:35:18Z", "type": "commit"}, {"oid": "0821e67b5089016aaedf41d0320d004a21828203", "url": "https://github.com/FabricMC/fabric-loader/commit/0821e67b5089016aaedf41d0320d004a21828203", "message": "Revert \"Use CvObject over a Map\"\n\nThis reverts commit c54281cd6f97b9b3a486bd268f8409d8368bc54b.", "committedDate": "2020-06-18T21:35:19Z", "type": "commit"}, {"oid": "e4c6f36077d54d1c1d587d26233ac4cffcf07bb0", "url": "https://github.com/FabricMC/fabric-loader/commit/e4c6f36077d54d1c1d587d26233ac4cffcf07bb0", "message": "Docs for the new method, and make the stored map immutable.", "committedDate": "2020-06-18T21:35:20Z", "type": "commit"}, {"oid": "e4c6f36077d54d1c1d587d26233ac4cffcf07bb0", "url": "https://github.com/FabricMC/fabric-loader/commit/e4c6f36077d54d1c1d587d26233ac4cffcf07bb0", "message": "Docs for the new method, and make the stored map immutable.", "committedDate": "2020-06-18T21:35:20Z", "type": "forcePushed"}, {"oid": "a22a07e00c85776e552f466277a14328bc529fb5", "url": "https://github.com/FabricMC/fabric-loader/commit/a22a07e00c85776e552f466277a14328bc529fb5", "message": "Stupid import", "committedDate": "2020-06-18T21:39:45Z", "type": "commit"}, {"oid": "b28484741dca84699fe4ca09a5f34f740cc396f0", "url": "https://github.com/FabricMC/fabric-loader/commit/b28484741dca84699fe4ca09a5f34f740cc396f0", "message": "Merge remote-tracking branch 'remotes/upstream/master' into feature/moreexpose\n\n# Conflicts:\n#\tsrc/main/java/net/fabricmc/loader/metadata/ModMetadataParser.java\n#\tsrc/main/java/net/fabricmc/loader/metadata/ModMetadataV1.java", "committedDate": "2020-07-14T12:53:37Z", "type": "commit"}]}