{"pr_number": 334, "pr_title": "Add aliases to Fabric Loader", "pr_createdAt": "2020-11-17T01:27:39Z", "pr_url": "https://github.com/FabricMC/fabric-loader/pull/334", "timeline": [{"oid": "536180228e1fdd4a0e2c3dbb04578b80a3721f0a", "url": "https://github.com/FabricMC/fabric-loader/commit/536180228e1fdd4a0e2c3dbb04578b80a3721f0a", "message": "Add metadata entry", "committedDate": "2020-11-16T21:58:23Z", "type": "commit"}, {"oid": "aea23a95e16e53b3a4f35134ac20436344f4a8bd", "url": "https://github.com/FabricMC/fabric-loader/commit/aea23a95e16e53b3a4f35134ac20436344f4a8bd", "message": "Add alias functionality", "committedDate": "2020-11-17T01:24:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDg0MjA0Ng==", "url": "https://github.com/FabricMC/fabric-loader/pull/334#discussion_r524842046", "bodyText": "we don't use star imports typically. Old codestyle has some but we are moving away from that", "author": "i509VCB", "createdAt": "2020-11-17T02:21:04Z", "path": "src/main/java/net/fabricmc/loader/discovery/ModResolver.java", "diffHunk": "@@ -19,28 +19,23 @@\n import com.google.common.jimfs.Configuration;\n import com.google.common.jimfs.Jimfs;\n import com.google.common.jimfs.PathType;\n-\n import net.fabricmc.loader.FabricLoader;\n+import net.fabricmc.loader.api.Version;\n import net.fabricmc.loader.api.metadata.ModDependency;\n import net.fabricmc.loader.game.GameProvider.BuiltinMod;\n-import net.fabricmc.loader.api.Version;\n import net.fabricmc.loader.launch.common.FabricLauncherBase;\n import net.fabricmc.loader.lib.gson.MalformedJsonException;\n import net.fabricmc.loader.metadata.LoaderModMetadata;\n-import net.fabricmc.loader.metadata.NestedJarEntry;\n import net.fabricmc.loader.metadata.ModMetadataParser;\n+import net.fabricmc.loader.metadata.NestedJarEntry;\n import net.fabricmc.loader.metadata.ParseMetadataException;\n import net.fabricmc.loader.util.FileSystemUtil;\n import net.fabricmc.loader.util.UrlConversionException;\n import net.fabricmc.loader.util.UrlUtil;\n import net.fabricmc.loader.util.sat4j.core.VecInt;\n import net.fabricmc.loader.util.sat4j.minisat.SolverFactory;\n-import net.fabricmc.loader.util.sat4j.specs.ContradictionException;\n-import net.fabricmc.loader.util.sat4j.specs.IProblem;\n-import net.fabricmc.loader.util.sat4j.specs.ISolver;\n-import net.fabricmc.loader.util.sat4j.specs.IVecInt;\n import net.fabricmc.loader.util.sat4j.specs.TimeoutException;\n-\n+import net.fabricmc.loader.util.sat4j.specs.*;", "originalCommit": "aea23a95e16e53b3a4f35134ac20436344f4a8bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTEyMzU0OA==", "url": "https://github.com/FabricMC/fabric-loader/pull/334#discussion_r525123548", "bodyText": "Just noticed all that import cleaning noise, must have left IDEA's formatter on :P", "author": "AMereBagatelle", "createdAt": "2020-11-17T12:40:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDg0MjA0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE0NDY3Ng==", "url": "https://github.com/FabricMC/fabric-loader/pull/334#discussion_r525144676", "bodyText": "I think that I got it all", "author": "AMereBagatelle", "createdAt": "2020-11-17T13:16:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDg0MjA0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDg0MzUzMw==", "url": "https://github.com/FabricMC/fabric-loader/pull/334#discussion_r524843533", "bodyText": "Why not flip the condition here so you can just set the variable value from the nextString", "author": "i509VCB", "createdAt": "2020-11-17T02:25:41Z", "path": "src/main/java/net/fabricmc/loader/metadata/V1ModMetadataParser.java", "diffHunk": "@@ -220,7 +214,29 @@ static LoaderModMetadata parse(Logger logger, JsonReader reader) throws IOExcept\n \n \t\tModMetadataParser.logWarningMessages(logger, id, warnings);\n \n-\t\treturn new V1ModMetadata(id, version, environment, entrypoints, jars, mixins, accessWidener, depends, recommends, suggests, conflicts, breaks, requires, name, description, authors, contributors, contact, license, icon, languageAdapters, customValues);\n+\t\treturn new V1ModMetadata(id, version, aliases, environment, entrypoints, jars, mixins, accessWidener, depends, recommends, suggests, conflicts, breaks, requires, name, description, authors, contributors, contact, license, icon, languageAdapters, customValues);\n+\t}\n+\n+\tprivate static void readAliases(JsonReader reader, List<String> aliases) throws IOException, ParseMetadataException {\n+\t\tif (reader.peek() != JsonToken.BEGIN_ARRAY) {\n+\t\t\tthrow new ParseMetadataException(\"Aliases must be in an array\");\n+\t\t}\n+\n+\t\treader.beginArray();\n+\n+\t\twhile (reader.hasNext()) {\n+\t\t\tString alias;\n+\n+\t\t\tif (reader.peek() == JsonToken.STRING) {\n+\t\t\t\talias = reader.nextString();\n+\t\t\t} else {\n+\t\t\t\tthrow new ParseMetadataException(\"Aliases must be a string\", reader);", "originalCommit": "aea23a95e16e53b3a4f35134ac20436344f4a8bd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f8f161c3f3d80694734042d85d91cf37e5c99e52", "url": "https://github.com/FabricMC/fabric-loader/commit/f8f161c3f3d80694734042d85d91cf37e5c99e52", "message": "Revert IDEA autoformatting", "committedDate": "2020-11-17T13:04:49Z", "type": "commit"}, {"oid": "f54284092a1e59b9d248bc3aa24410e59707d180", "url": "https://github.com/FabricMC/fabric-loader/commit/f54284092a1e59b9d248bc3aa24410e59707d180", "message": "Flip condition", "committedDate": "2020-11-17T13:06:28Z", "type": "commit"}, {"oid": "aaa3bdfb5e82e61d1ea382a847e0a8de23ba323d", "url": "https://github.com/FabricMC/fabric-loader/commit/aaa3bdfb5e82e61d1ea382a847e0a8de23ba323d", "message": "Allow mods to be searched by alias", "committedDate": "2020-11-17T13:19:13Z", "type": "commit"}, {"oid": "3cdadc4a0d81417de0217ed38c534b19cd9e9b62", "url": "https://github.com/FabricMC/fabric-loader/commit/3cdadc4a0d81417de0217ed38c534b19cd9e9b62", "message": "Fix errors being still thrown even if alias is found", "committedDate": "2020-11-17T22:56:03Z", "type": "commit"}, {"oid": "1be523b0e0addd1e4170d196009487195cb9713f", "url": "https://github.com/FabricMC/fabric-loader/commit/1be523b0e0addd1e4170d196009487195cb9713f", "message": "Add logger statement to warn about using a alias", "committedDate": "2020-11-19T15:22:11Z", "type": "commit"}, {"oid": "237829b53d8bf52689b16c84047c2a1b4faa3610", "url": "https://github.com/FabricMC/fabric-loader/commit/237829b53d8bf52689b16c84047c2a1b4faa3610", "message": "Lock logger complaint behind isDevelopmentEnvironment check", "committedDate": "2020-11-19T17:23:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzkxNjk5Nw==", "url": "https://github.com/FabricMC/fabric-loader/pull/334#discussion_r527916997", "bodyText": "Make this an unmodifiableList, see the maps bellow.", "author": "modmuss50", "createdAt": "2020-11-20T19:11:57Z", "path": "src/main/java/net/fabricmc/loader/metadata/V1ModMetadata.java", "diffHunk": "@@ -76,9 +79,10 @@\n \t// Optional (custom values)\n \tprivate final Map<String, CustomValue> customValues;\n \n-\tV1ModMetadata(String id, Version version, ModEnvironment environment, Map<String, List<EntrypointMetadata>> entrypoints, Collection<NestedJarEntry> jars, Collection<MixinEntry> mixins, /* @Nullable */ String accessWidener, Map<String, ModDependency> depends, Map<String, ModDependency> recommends, Map<String, ModDependency> suggests, Map<String, ModDependency> conflicts, Map<String, ModDependency> breaks, Map<String, ModDependency> requires, /* @Nullable */ String name, /* @Nullable */String description, Collection<Person> authors, Collection<Person> contributors, /* @Nullable */ContactInformation contact, Collection<String> license, IconEntry icon, Map<String, String> languageAdapters, Map<String, CustomValue> customValues) {\n+\tV1ModMetadata(String id, Version version, Collection<String> aliases, ModEnvironment environment, Map<String, List<EntrypointMetadata>> entrypoints, Collection<NestedJarEntry> jars, Collection<MixinEntry> mixins, /* @Nullable */ String accessWidener, Map<String, ModDependency> depends, Map<String, ModDependency> recommends, Map<String, ModDependency> suggests, Map<String, ModDependency> conflicts, Map<String, ModDependency> breaks, Map<String, ModDependency> requires, /* @Nullable */ String name, /* @Nullable */String description, Collection<Person> authors, Collection<Person> contributors, /* @Nullable */ContactInformation contact, Collection<String> license, IconEntry icon, Map<String, String> languageAdapters, Map<String, CustomValue> customValues) {\n \t\tthis.id = id;\n \t\tthis.version = version;\n+\t\tthis.aliases = aliases;", "originalCommit": "237829b53d8bf52689b16c84047c2a1b4faa3610", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzkxOTY1Mw==", "url": "https://github.com/FabricMC/fabric-loader/pull/334#discussion_r527919653", "bodyText": "I'm not sure if this is sufficient to resolve a normal set of mods - what happens if there is an older version of fabric-api (with an id of \"fabric\") in the mods folder as well as a newer one (with an id of \"fabric-api\" and an alias of \"fabric\")? Depending on the order of the hash map I think this might either load both or only one? (Also this doesn't seem to have duplication checking in FabricLoader.addMod() - I don't think that's enough to fix this, but it would be able to at least detect when this happens)", "author": "AlexIIL", "createdAt": "2020-11-20T19:16:39Z", "path": "src/main/java/net/fabricmc/loader/discovery/ModResolver.java", "diffHunk": "@@ -98,6 +98,9 @@ private static IVecInt toVecInt(IntStream stream) {\n \t\tfor (ModCandidateSet mcs : modCandidateSetMap.values()) {\n \t\t\tCollection<ModCandidate> s = mcs.toSortedSet();\n \t\t\tmodCandidateMap.put(mcs.getModId(), s);\n+\t\t\tfor (String modAlias : mcs.getModAliases()) {\n+\t\t\t\tmodCandidateMap.put(modAlias, s);\n+\t\t\t}", "originalCommit": "237829b53d8bf52689b16c84047c2a1b4faa3610", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzk0MDg5MQ==", "url": "https://github.com/FabricMC/fabric-loader/pull/334#discussion_r527940891", "bodyText": "(Just FYI AMereBagatelle#1 seems to fix this from my testing) - this doesn't happen any more for simple mode after 635f5c0)", "author": "AlexIIL", "createdAt": "2020-11-20T20:00:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzkxOTY1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzk0MjE1MQ==", "url": "https://github.com/FabricMC/fabric-loader/pull/334#discussion_r527942151", "bodyText": "Merged the PR into the PR, thank you", "author": "AMereBagatelle", "createdAt": "2020-11-20T20:03:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzkxOTY1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzkyMTE5MQ==", "url": "https://github.com/FabricMC/fabric-loader/pull/334#discussion_r527921191", "bodyText": "Am I just missing something or is there no duplication checking? Lets say 2 mods define the same aliases this should fail in a similar way to duplicate mods.", "author": "modmuss50", "createdAt": "2020-11-20T19:19:41Z", "path": "src/main/java/net/fabricmc/loader/FabricLoader.java", "diffHunk": "@@ -333,6 +333,9 @@ protected void addMod(ModCandidate candidate) throws ModResolutionException {\n \t\tModContainer container = new ModContainer(info, originUrl);\n \t\tmods.add(container);\n \t\tmodMap.put(info.getId(), container);\n+\t\tfor (String alias : info.getAliases()) {\n+\t\t\tmodMap.put(alias, container);\n+\t\t}", "originalCommit": "237829b53d8bf52689b16c84047c2a1b4faa3610", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzkzMTkxOA==", "url": "https://github.com/FabricMC/fabric-loader/pull/334#discussion_r527931918", "bodyText": "I have now implemented the duplication checks, same way as the mods itself does it with a slightly different message (\"mod id\" -> \"alias\" of course)", "author": "AMereBagatelle", "createdAt": "2020-11-20T19:41:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzkyMTE5MQ=="}], "type": "inlineReview"}, {"oid": "4269c1525fa30b825c2713e9f0ceee6b2134a08b", "url": "https://github.com/FabricMC/fabric-loader/commit/4269c1525fa30b825c2713e9f0ceee6b2134a08b", "message": "Make aliases unmodifiable in V1ModMetadata", "committedDate": "2020-11-20T19:36:58Z", "type": "commit"}, {"oid": "635f5c03ac8c1cb8355d7dd33b5dc2c3989bf8b7", "url": "https://github.com/FabricMC/fabric-loader/commit/635f5c03ac8c1cb8355d7dd33b5dc2c3989bf8b7", "message": "Add duplication check, resolve ModMuss change request", "committedDate": "2020-11-20T19:41:52Z", "type": "commit"}, {"oid": "663b5e5de8fb1f1767ba9cc73fbc535b18f9283c", "url": "https://github.com/FabricMC/fabric-loader/commit/663b5e5de8fb1f1767ba9cc73fbc535b18f9283c", "message": "Fix advanced mod resolving not detecting duplicates correctly.", "committedDate": "2020-11-20T19:57:11Z", "type": "commit"}, {"oid": "377428fc034c2267180d25985f4be092cb161e6a", "url": "https://github.com/FabricMC/fabric-loader/commit/377428fc034c2267180d25985f4be092cb161e6a", "message": "Merge pull request #1 from AlexIIL/alexiil-alias-resolver-fix\n\nFix advanced mod resolving not working correctly for aliases...", "committedDate": "2020-11-20T20:02:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODE3OTI5Mg==", "url": "https://github.com/FabricMC/fabric-loader/pull/334#discussion_r528179292", "bodyText": "We can inline the reader.nextString() call right into the aliases.add(String) method", "author": "i509VCB", "createdAt": "2020-11-21T10:27:23Z", "path": "src/main/java/net/fabricmc/loader/metadata/V1ModMetadataParser.java", "diffHunk": "@@ -220,7 +226,29 @@ static LoaderModMetadata parse(Logger logger, JsonReader reader) throws IOExcept\n \n \t\tModMetadataParser.logWarningMessages(logger, id, warnings);\n \n-\t\treturn new V1ModMetadata(id, version, environment, entrypoints, jars, mixins, accessWidener, depends, recommends, suggests, conflicts, breaks, requires, name, description, authors, contributors, contact, license, icon, languageAdapters, customValues);\n+\t\treturn new V1ModMetadata(id, version, aliases, environment, entrypoints, jars, mixins, accessWidener, depends, recommends, suggests, conflicts, breaks, requires, name, description, authors, contributors, contact, license, icon, languageAdapters, customValues);\n+\t}\n+\n+\tprivate static void readAliases(JsonReader reader, List<String> aliases) throws IOException, ParseMetadataException {\n+\t\tif (reader.peek() != JsonToken.BEGIN_ARRAY) {\n+\t\t\tthrow new ParseMetadataException(\"Aliases must be in an array\");\n+\t\t}\n+\n+\t\treader.beginArray();\n+\n+\t\twhile (reader.hasNext()) {\n+\t\t\tString alias;\n+\n+\t\t\tif (reader.peek() != JsonToken.STRING) {\n+\t\t\t\tthrow new ParseMetadataException(\"Aliases must be a string\", reader);\n+\t\t\t}\n+\n+\t\t\talias = reader.nextString();\n+\n+\t\t\taliases.add(alias);", "originalCommit": "377428fc034c2267180d25985f4be092cb161e6a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODE3OTM2Ng==", "url": "https://github.com/FabricMC/fabric-loader/pull/334#discussion_r528179366", "bodyText": "Since this is referring to a specific entry.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\tthrow new ParseMetadataException(\"Aliases must be a string\", reader);\n          \n          \n            \n            \t\t\t\tthrow new ParseMetadataException(\"Alias must be a string\", reader);", "author": "i509VCB", "createdAt": "2020-11-21T10:28:24Z", "path": "src/main/java/net/fabricmc/loader/metadata/V1ModMetadataParser.java", "diffHunk": "@@ -220,7 +226,29 @@ static LoaderModMetadata parse(Logger logger, JsonReader reader) throws IOExcept\n \n \t\tModMetadataParser.logWarningMessages(logger, id, warnings);\n \n-\t\treturn new V1ModMetadata(id, version, environment, entrypoints, jars, mixins, accessWidener, depends, recommends, suggests, conflicts, breaks, requires, name, description, authors, contributors, contact, license, icon, languageAdapters, customValues);\n+\t\treturn new V1ModMetadata(id, version, aliases, environment, entrypoints, jars, mixins, accessWidener, depends, recommends, suggests, conflicts, breaks, requires, name, description, authors, contributors, contact, license, icon, languageAdapters, customValues);\n+\t}\n+\n+\tprivate static void readAliases(JsonReader reader, List<String> aliases) throws IOException, ParseMetadataException {\n+\t\tif (reader.peek() != JsonToken.BEGIN_ARRAY) {\n+\t\t\tthrow new ParseMetadataException(\"Aliases must be in an array\");\n+\t\t}\n+\n+\t\treader.beginArray();\n+\n+\t\twhile (reader.hasNext()) {\n+\t\t\tString alias;\n+\n+\t\t\tif (reader.peek() != JsonToken.STRING) {\n+\t\t\t\tthrow new ParseMetadataException(\"Aliases must be a string\", reader);", "originalCommit": "377428fc034c2267180d25985f4be092cb161e6a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODE4MDAxMg==", "url": "https://github.com/FabricMC/fabric-loader/pull/334#discussion_r528180012", "bodyText": "Not in scope of this PR, but it may a neat thing to look into for a GameProvider's builtin mods to possibly provide aliases.", "author": "i509VCB", "createdAt": "2020-11-21T10:35:19Z", "path": "src/main/java/net/fabricmc/loader/metadata/BuiltinModMetadata.java", "diffHunk": "@@ -76,6 +76,11 @@ public String getId() {\n \t\treturn id;\n \t}\n \n+\t@Override\n+\tpublic Collection<String> getAliases() {\n+\t\treturn Collections.emptyList();", "originalCommit": "377428fc034c2267180d25985f4be092cb161e6a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "11b5b40889e61f9bad1c48af24f218ee5a4df2c8", "url": "https://github.com/FabricMC/fabric-loader/commit/11b5b40889e61f9bad1c48af24f218ee5a4df2c8", "message": "Update src/main/java/net/fabricmc/loader/metadata/V1ModMetadataParser.java\r\n\r\nFix metadata exception string\n\nCo-authored-by: i509VCB <i509vcb@gmail.com>", "committedDate": "2020-11-21T17:49:54Z", "type": "commit"}, {"oid": "9057abba4fc3d3f4e06b88883105895c1c7a518e", "url": "https://github.com/FabricMC/fabric-loader/commit/9057abba4fc3d3f4e06b88883105895c1c7a518e", "message": "Inline reader.nextString call", "committedDate": "2020-11-21T17:56:32Z", "type": "commit"}, {"oid": "e8c473ce11f91a45030ace9d6e7aa060fa1f00fa", "url": "https://github.com/FabricMC/fabric-loader/commit/e8c473ce11f91a45030ace9d6e7aa060fa1f00fa", "message": "Merge remote-tracking branch 'origin/master'", "committedDate": "2020-11-21T17:57:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYzNzU2MA==", "url": "https://github.com/FabricMC/fabric-loader/pull/334#discussion_r533637560", "bodyText": "This appears to be broken when giving fabric loader an alias:\n{\n  \"schemaVersion\": 1,\n  \"id\": \"fabricloader\",\n  \"aliases\": [\n    \"testmod\"\n  ]\nFails with a duplicate mod id of fabricloader.", "author": "modmuss50", "createdAt": "2020-12-01T18:39:59Z", "path": "src/main/java/net/fabricmc/loader/discovery/ModResolver.java", "diffHunk": "@@ -92,12 +92,15 @@ private static IVecInt toVecInt(IntStream stream) {\n \tpublic Map<String, ModCandidate> findCompatibleSet(Logger logger, Map<String, ModCandidateSet> modCandidateSetMap) throws ModResolutionException {\n \t\t// First, map all ModCandidateSets to Set<ModCandidate>s.\n \t\tboolean isAdvanced = false;\n-\t\tMap<String, Collection<ModCandidate>> modCandidateMap = new HashMap<>();\n+\t\tMap<String, List<ModCandidate>> modCandidateMap = new HashMap<>();\n \t\tSet<String> mandatoryMods = new HashSet<>();\n \n \t\tfor (ModCandidateSet mcs : modCandidateSetMap.values()) {\n \t\t\tCollection<ModCandidate> s = mcs.toSortedSet();\n-\t\t\tmodCandidateMap.put(mcs.getModId(), s);\n+\t\t\tmodCandidateMap.computeIfAbsent(mcs.getModId(), i -> new ArrayList<>()).addAll(s);\n+\t\t\tfor (String modAlias : mcs.getModAliases()) {\n+\t\t\t\tmodCandidateMap.computeIfAbsent(modAlias, i -> new ArrayList<>()).addAll(s);\n+\t\t\t}", "originalCommit": "e8c473ce11f91a45030ace9d6e7aa060fa1f00fa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY0NjA1Mg==", "url": "https://github.com/FabricMC/fabric-loader/pull/334#discussion_r533646052", "bodyText": "Doesn't seem to do the same for me?  I aliased fabricloader in the fabric.mod.json and it didn't give any errors.\nI'd assume then that you have the testmod in your mods folder.", "author": "AMereBagatelle", "createdAt": "2020-12-01T18:53:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYzNzU2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY0NjcyNA==", "url": "https://github.com/FabricMC/fabric-loader/pull/334#discussion_r533646724", "bodyText": "Ill take another look, the testmod has the id of test", "author": "modmuss50", "createdAt": "2020-12-01T18:54:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYzNzU2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY0ODY1MQ==", "url": "https://github.com/FabricMC/fabric-loader/pull/334#discussion_r533648651", "bodyText": "In any case, it would probably be preferable for Loader to prefer an actual mod id to an alias which might be what the problem is here.", "author": "AMereBagatelle", "createdAt": "2020-12-01T18:57:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYzNzU2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY0OTA4Ng==", "url": "https://github.com/FabricMC/fabric-loader/pull/334#discussion_r533649086", "bodyText": "Yes, I dont plan on using an alias in loader anytime soon, but the option should be there. Ill dig into it more to see whats going on.", "author": "modmuss50", "createdAt": "2020-12-01T18:58:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYzNzU2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY1Mjk5NQ==", "url": "https://github.com/FabricMC/fabric-loader/pull/334#discussion_r533652995", "bodyText": "Seems to fail when going down the none advanced path (ModReslover:113). Make sure you dont have any mods in the mods dir when testing.", "author": "modmuss50", "createdAt": "2020-12-01T19:04:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYzNzU2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY2OTM1MQ==", "url": "https://github.com/FabricMC/fabric-loader/pull/334#discussion_r533669351", "bodyText": "I see what you mean, whoops", "author": "AMereBagatelle", "createdAt": "2020-12-01T19:32:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYzNzU2MA=="}], "type": "inlineReview"}, {"oid": "bfd1721cfd86fdd06921b338b059f8952c27afd1", "url": "https://github.com/FabricMC/fabric-loader/commit/bfd1721cfd86fdd06921b338b059f8952c27afd1", "message": "Fix aliases breaking on the non-advanced path", "committedDate": "2020-12-01T19:40:36Z", "type": "commit"}, {"oid": "c503f7a58fb3e0f190ae8b67dac7bafc50f76219", "url": "https://github.com/FabricMC/fabric-loader/commit/c503f7a58fb3e0f190ae8b67dac7bafc50f76219", "message": "Check mod id aliases when running loader\nRemove accidental inclusion of testmod alias", "committedDate": "2020-12-01T20:07:49Z", "type": "commit"}, {"oid": "1f749138ba76151c2c8d062be8f2a2dbc8263d8a", "url": "https://github.com/FabricMC/fabric-loader/commit/1f749138ba76151c2c8d062be8f2a2dbc8263d8a", "message": "Rename aliases to provides", "committedDate": "2020-12-04T18:37:57Z", "type": "commit"}, {"oid": "249266fd00566edf2b0d2964b210ec256c95be00", "url": "https://github.com/FabricMC/fabric-loader/commit/249266fd00566edf2b0d2964b210ec256c95be00", "message": "Oops missed some", "committedDate": "2020-12-04T18:43:16Z", "type": "commit"}, {"oid": "ffbf0f360c171b77612e72488c39b28cedcc92c9", "url": "https://github.com/FabricMC/fabric-loader/commit/ffbf0f360c171b77612e72488c39b28cedcc92c9", "message": "Oops, missed some v2", "committedDate": "2020-12-06T13:57:44Z", "type": "commit"}]}