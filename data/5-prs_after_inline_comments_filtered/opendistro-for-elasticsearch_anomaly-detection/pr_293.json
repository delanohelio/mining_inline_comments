{"pr_number": 293, "pr_title": "update user role filter to use nested query", "pr_createdAt": "2020-10-24T06:44:59Z", "pr_url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/293", "timeline": [{"oid": "71d100845ae6de7f610eb3b9c588bb5bddde2e5a", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/71d100845ae6de7f610eb3b9c588bb5bddde2e5a", "message": "update user role filter to use nested query", "committedDate": "2020-10-24T06:40:41Z", "type": "commit"}, {"oid": "dd15cb0f2779d43cbcd8102900763d0dca8702e9", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/dd15cb0f2779d43cbcd8102900763d0dca8702e9", "message": "make error message more generic", "committedDate": "2020-10-24T06:43:30Z", "type": "commit"}, {"oid": "c254612d8580556c632a2f717f23843154096fec", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/c254612d8580556c632a2f717f23843154096fec", "message": "check read permission of detector index", "committedDate": "2020-10-24T20:16:55Z", "type": "commit"}, {"oid": "712511e17d7240bea24fb34bc9befe37a8464535", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/712511e17d7240bea24fb34bc9befe37a8464535", "message": "fix checkstyle failrue", "committedDate": "2020-10-25T05:17:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE2MDkwMA==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/293#discussion_r512160900", "bodyText": "In this case, why don't we filter based on users' roles or just user name?", "author": "kaituo", "createdAt": "2020-10-26T17:57:43Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/util/ParseUtils.java", "diffHunk": "@@ -390,4 +397,41 @@ public static SearchSourceBuilder generateEntityColdStartQuery(\n         }\n         return featureData;\n     }\n+\n+    public static SearchSourceBuilder addUserBackendRolesFilter(User user, SearchSourceBuilder searchSourceBuilder) {\n+        BoolQueryBuilder boolQueryBuilder = new BoolQueryBuilder();\n+        String userFieldName = \"user\";\n+        String userBackendRoleFieldName = \"user.backend_roles.keyword\";\n+        if (user == null) {\n+            // For old monitor and detector, they have no user field, user = null\n+            ExistsQueryBuilder userRolesFilterQuery = QueryBuilders.existsQuery(userFieldName);\n+            NestedQueryBuilder nestedQueryBuilder = new NestedQueryBuilder(userFieldName, userRolesFilterQuery, ScoreMode.None);\n+            boolQueryBuilder.mustNot(nestedQueryBuilder);\n+        } else if (user.getBackendRoles() == null || user.getBackendRoles().size() == 0) {\n+            // For simple FGAC user, they may have no backend roles, these users should be able to see detectors\n+            // of other users whose backend role is empty. user != null, user.backend_role == null", "originalCommit": "712511e17d7240bea24fb34bc9befe37a8464535", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI4NTI1Ng==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/293#discussion_r512285256", "bodyText": "Good question.\n1.Why not use user's roles?\nIt's ok if all users use our predefined roles. But user can create custom role with arbitrary name. It's impossible to guess what permission the user role covers. Maybe role \"abc\" has exactly the same permission with \"123\".\n2.Why not use user name ?\nThe main use case is for enterprise org/team. For one team, team members should have same permission and they can access team's resources no matter it's created by themselves or other team members. If limit resource access to only the creator, they have to share one account across team which is not good. What's more, if the creator leaves company, then no one can access the resource.", "author": "ylwu-amzn", "createdAt": "2020-10-26T21:39:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE2MDkwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjMwMDAzMQ==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/293#discussion_r512300031", "bodyText": "does filtering using backend role has the same issue?  backend role \"abc\" has the same permission with \"123\"?\n\n\nuser name based solution is opposite to your current solution: it is overly restrictive while your current solution is overly permissive.", "author": "kaituo", "createdAt": "2020-10-26T22:12:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE2MDkwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjMwMjUyMw==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/293#discussion_r512302523", "bodyText": "1.Backend role has no mapping to permission. They just map to individuals or orgs. So if user1 and usr2 has same backend role, they are in same org.\n2.Agree.", "author": "ylwu-amzn", "createdAt": "2020-10-26T22:18:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE2MDkwMA=="}], "type": "inlineReview"}]}