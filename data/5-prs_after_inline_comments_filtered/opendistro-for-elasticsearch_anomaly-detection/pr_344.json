{"pr_number": 344, "pr_title": "backport change: filter out exceptions which should not be counted in failure stats", "pr_createdAt": "2020-12-29T04:13:51Z", "pr_url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/344", "timeline": [{"oid": "0a24dd866335eaf6fdedbb41bf57de46f8641ce4", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/0a24dd866335eaf6fdedbb41bf57de46f8641ce4", "message": "filter out exceptions which should not be counted in failure stats", "committedDate": "2020-12-29T04:12:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTg0NTQ5MA==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/344#discussion_r549845490", "bodyText": "Can we directly break out of the loop after this?", "author": "kaituo", "createdAt": "2020-12-29T21:01:38Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/transport/AnomalyResultTransportAction.java", "diffHunk": "@@ -477,17 +483,52 @@ private CombinedRcfResult getCombinedResult(List<RCFResultResponse> rcfResults)\n         return modelManager.combineRcfResults(rcfResultLib);\n     }\n \n+    private void handleFailure(Exception exception, ActionListener<AnomalyResultResponse> listener, String adID) {\n+        if (exception instanceof IndexNotFoundException) {\n+            listener.onFailure(new EndRunException(adID, TROUBLE_QUERYING_ERR_MSG + exception.getMessage(), true).countedInStats(false));\n+        } else if (exception instanceof EndRunException) {\n+            // invalid feature query\n+            listener.onFailure(exception);\n+        } else {\n+            handleExecuteException(exception, listener, adID);\n+        }\n+    }\n+\n     void handleExecuteException(Exception ex, ActionListener<AnomalyResultResponse> listener, String adID) {\n         if (ex instanceof ClientException) {\n             listener.onFailure(ex);\n         } else if (ex instanceof AnomalyDetectionException) {\n             listener.onFailure(new InternalFailure((AnomalyDetectionException) ex));\n+        } else if (ex instanceof SearchPhaseExecutionException && invalidQuery((SearchPhaseExecutionException) ex)) {\n+            // This is to catch invalid aggregation on wrong field type. For example,\n+            // sum aggregation on text field. We should end detector run for such case.\n+            listener\n+                .onFailure(\n+                    new EndRunException(\n+                        adID,\n+                        INVALID_SEARCH_QUERY_MSG + ((SearchPhaseExecutionException) ex).getDetailedMessage(),\n+                        ex,\n+                        true\n+                    ).countedInStats(false)\n+                );\n         } else {\n             Throwable cause = ExceptionsHelper.unwrapCause(ex);\n             listener.onFailure(new InternalFailure(adID, cause));\n         }\n     }\n \n+    private boolean invalidQuery(SearchPhaseExecutionException ex) {\n+        boolean invalidQuery = true;\n+        // If all shards return bad request and failure cause is IllegalArgumentException, we\n+        // consider the feature query is invalid and will not count the error in failure stats.\n+        for (ShardSearchFailure failure : ex.shardFailures()) {\n+            if (RestStatus.BAD_REQUEST != failure.status() || !(failure.getCause() instanceof IllegalArgumentException)) {\n+                invalidQuery = false;", "originalCommit": "0a24dd866335eaf6fdedbb41bf57de46f8641ce4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTg2MDM2OQ==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/344#discussion_r549860369", "bodyText": "Sure, will fix in a separate PR to make this backport PR clean", "author": "ylwu-amzn", "createdAt": "2020-12-29T21:45:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTg0NTQ5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTg3NTcwMQ==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/344#discussion_r549875701", "bodyText": "Fixed in this PR #348, will backport once PR approved.", "author": "ylwu-amzn", "createdAt": "2020-12-29T22:35:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTg0NTQ5MA=="}], "type": "inlineReview"}]}