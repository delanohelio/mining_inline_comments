{"pr_number": 5559, "pr_title": "RM#25402 Print templates", "pr_createdAt": "2020-06-25T07:21:04Z", "pr_url": "https://github.com/axelor/axelor-open-suite/pull/5559", "timeline": [{"oid": "03f30e34f29928a81ccced5d7c3992a7fc9b526d", "url": "https://github.com/axelor/axelor-open-suite/commit/03f30e34f29928a81ccced5d7c3992a7fc9b526d", "message": "RM#25402 PrintTemplate feature", "committedDate": "2020-03-30T13:30:22Z", "type": "commit"}, {"oid": "66ae67eea80113759d8efbc97b2a6705f6f73627", "url": "https://github.com/axelor/axelor-open-suite/commit/66ae67eea80113759d8efbc97b2a6705f6f73627", "message": "Merge branch 'wip-6.0' into wip-6.0-25402", "committedDate": "2020-03-30T14:32:22Z", "type": "commit"}, {"oid": "1fc8314164807d6744772111a537ec3e2c9b6c8b", "url": "https://github.com/axelor/axelor-open-suite/commit/1fc8314164807d6744772111a537ec3e2c9b6c8b", "message": "RM#25402 Print template and docusign", "committedDate": "2020-06-24T13:10:42Z", "type": "commit"}, {"oid": "6bb7fa5ec9d75772bafe70f6eb4cc5d8d636d87d", "url": "https://github.com/axelor/axelor-open-suite/commit/6bb7fa5ec9d75772bafe70f6eb4cc5d8d636d87d", "message": "Merge branch 'wip-6.0' into wip-6.0-25402", "committedDate": "2020-06-24T13:16:57Z", "type": "commit"}, {"oid": "56501a47ce7da32b6f88c1736d80467bdd67ff1e", "url": "https://github.com/axelor/axelor-open-suite/commit/56501a47ce7da32b6f88c1736d80467bdd67ff1e", "message": "Delete DocuSign", "committedDate": "2020-06-25T06:30:42Z", "type": "commit"}, {"oid": "37f61068c3c6ce6962db5ad48e5653dcbf58e0a7", "url": "https://github.com/axelor/axelor-open-suite/commit/37f61068c3c6ce6962db5ad48e5653dcbf58e0a7", "message": "RM#25402 Print template : Correcting traductions", "committedDate": "2020-06-25T07:40:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM3NzY5Nw==", "url": "https://github.com/axelor/axelor-open-suite/pull/5559#discussion_r445377697", "bodyText": "Please call i18n to translate the messages here", "author": "ale-axelor", "createdAt": "2020-06-25T08:01:19Z", "path": "axelor-base/src/main/java/com/axelor/apps/base/service/PrintServiceImpl.java", "diffHunk": "@@ -0,0 +1,156 @@\n+/*\n+ * Axelor Business Solutions\n+ *\n+ * Copyright (C) 2019 Axelor (<http://axelor.com>).\n+ *\n+ * This program is free software: you can redistribute it and/or  modify\n+ * it under the terms of the GNU Affero General Public License, version 3,\n+ * as published by the Free Software Foundation.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package com.axelor.apps.base.service;\n+\n+import com.axelor.apps.ReportFactory;\n+import com.axelor.apps.base.db.Print;\n+import com.axelor.apps.base.db.repo.PrintRepository;\n+import com.axelor.apps.base.exceptions.IExceptionMessage;\n+import com.axelor.apps.base.report.IReport;\n+import com.axelor.apps.report.engine.ReportSettings;\n+import com.axelor.common.ObjectUtils;\n+import com.axelor.common.StringUtils;\n+import com.axelor.db.JPA;\n+import com.axelor.db.Model;\n+import com.axelor.db.mapper.Mapper;\n+import com.axelor.db.mapper.Property;\n+import com.axelor.exception.AxelorException;\n+import com.axelor.exception.db.repo.TraceBackRepository;\n+import com.axelor.inject.Beans;\n+import com.axelor.meta.MetaFiles;\n+import com.axelor.meta.db.MetaFile;\n+import com.axelor.meta.schema.actions.ActionView;\n+import com.google.common.base.Preconditions;\n+import com.google.inject.Inject;\n+import com.google.inject.persist.Transactional;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.lang.invoke.MethodHandles;\n+import java.util.Map;\n+import java.util.Set;\n+import org.apache.commons.collections.CollectionUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class PrintServiceImpl implements PrintService {\n+\n+  private final Logger LOG = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass());\n+\n+  protected PrintRepository printRepo;\n+  protected MetaFiles metaFiles;\n+\n+  @Inject\n+  PrintServiceImpl(PrintRepository printRepo, MetaFiles metaFiles) {\n+    this.printRepo = printRepo;\n+    this.metaFiles = metaFiles;\n+  }\n+\n+  @Override\n+  @Transactional\n+  public Map<String, Object> generatePDF(Print print) throws AxelorException {\n+    print = printRepo.find(print.getId());\n+    String documentName =\n+        StringUtils.notEmpty(print.getDocumentName()) ? print.getDocumentName() : \"\";\n+\n+    String reportModele =\n+        print.getDisplayTypeSelect() == PrintRepository.DISPLAY_TYPE_LANDSCAPE\n+            ? IReport.PRINT_LANDSCAPE\n+            : IReport.PRINT_PORTRAIT;\n+\n+    ReportSettings reportSettings =\n+        ReportFactory.createReport(reportModele, documentName + \"-${date}\")\n+            .addParam(\"PrintId\", print.getId())\n+            .generate();\n+\n+    if (ObjectUtils.notEmpty(reportSettings)) {\n+\n+      if (print.getAttach() || StringUtils.notEmpty(print.getMetaFileField())) {\n+        File file = reportSettings.getFile();\n+        if (file.exists()) {\n+          try {\n+            try (InputStream is = new FileInputStream(file)) {\n+              MetaFile metaFile = metaFiles.upload(is, documentName);\n+              Class<? extends Model> modelClass =\n+                  (Class<? extends Model>) Class.forName(print.getMetaModel().getFullName());\n+              Model objectModel = JPA.find(modelClass, print.getObjectId());\n+\n+              if (print.getAttach()) {\n+                if (ObjectUtils.notEmpty(print.getMetaModel())) {\n+                  metaFiles.attach(metaFile, documentName, objectModel);\n+                }\n+              }\n+              if (StringUtils.notEmpty(print.getMetaFileField())) {\n+                saveMetaFileInModel(modelClass, objectModel, metaFile, print.getMetaFileField());\n+              }\n+            }\n+\n+          } catch (IOException | ClassNotFoundException e) {\n+            throw new AxelorException(e, TraceBackRepository.CATEGORY_INCONSISTENCY);\n+          }\n+        }\n+      }\n+\n+      if (CollectionUtils.isNotEmpty(print.getPrintSet())) {\n+        for (Print subPrint : print.getPrintSet()) {\n+          generatePDF(subPrint);\n+        }\n+      }\n+\n+      String pdfPath = reportSettings.getFileLink();\n+      if (StringUtils.notEmpty(pdfPath)) {\n+        return ActionView.define(documentName).add(\"html\", pdfPath).map();\n+      } else {\n+        throw new AxelorException(\n+            TraceBackRepository.CATEGORY_CONFIGURATION_ERROR, IExceptionMessage.PRINT_ERROR);\n+      }\n+    } else {\n+      throw new AxelorException(\n+          TraceBackRepository.CATEGORY_CONFIGURATION_ERROR, IExceptionMessage.PRINT_ERROR);\n+    }", "originalCommit": "37f61068c3c6ce6962db5ad48e5653dcbf58e0a7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM3Nzg5MA==", "url": "https://github.com/axelor/axelor-open-suite/pull/5559#discussion_r445377890", "bodyText": "please remove commented code", "author": "ale-axelor", "createdAt": "2020-06-25T08:01:45Z", "path": "axelor-base/src/main/java/com/axelor/apps/base/service/PrintTemplateService.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Axelor Business Solutions\n+ *\n+ * Copyright (C) 2019 Axelor (<http://axelor.com>).\n+ *\n+ * This program is free software: you can redistribute it and/or  modify\n+ * it under the terms of the GNU Affero General Public License, version 3,\n+ * as published by the Free Software Foundation.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package com.axelor.apps.base.service;\n+\n+import com.axelor.apps.base.db.Print;\n+import com.axelor.apps.base.db.PrintTemplate;\n+import com.axelor.exception.AxelorException;\n+import java.io.IOException;\n+\n+public interface PrintTemplateService {\n+\n+  /*\n+  public Map<String, Object> generatePrint(", "originalCommit": "37f61068c3c6ce6962db5ad48e5653dcbf58e0a7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM4MDEyNg==", "url": "https://github.com/axelor/axelor-open-suite/pull/5559#discussion_r445380126", "bodyText": "Do not use a set error and translate the exception messsage in the service:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  TraceBackService.trace(response, e);\n          \n          \n            \n                  response.setError(I18n.get(e.getMessage()));\n          \n          \n            \n                  TraceBackService.trace(response, e, ResponseMessageType.ERROR);", "author": "ale-axelor", "createdAt": "2020-06-25T08:05:45Z", "path": "axelor-base/src/main/java/com/axelor/apps/base/web/PrintController.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Axelor Business Solutions\n+ *\n+ * Copyright (C) 2019 Axelor (<http://axelor.com>).\n+ *\n+ * This program is free software: you can redistribute it and/or  modify\n+ * it under the terms of the GNU Affero General Public License, version 3,\n+ * as published by the Free Software Foundation.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package com.axelor.apps.base.web;\n+\n+import com.axelor.apps.base.db.Print;\n+import com.axelor.apps.base.service.PrintService;\n+import com.axelor.exception.AxelorException;\n+import com.axelor.exception.service.TraceBackService;\n+import com.axelor.i18n.I18n;\n+import com.axelor.inject.Beans;\n+import com.axelor.rpc.ActionRequest;\n+import com.axelor.rpc.ActionResponse;\n+\n+public class PrintController {\n+\n+  public void generatePDF(ActionRequest request, ActionResponse response) {\n+    Print print = request.getContext().asType(Print.class);\n+\n+    try {\n+      response.setView(Beans.get(PrintService.class).generatePDF(print));\n+    } catch (AxelorException e) {\n+      TraceBackService.trace(response, e);\n+      response.setError(I18n.get(e.getMessage()));", "originalCommit": "37f61068c3c6ce6962db5ad48e5653dcbf58e0a7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM4MDI5NA==", "url": "https://github.com/axelor/axelor-open-suite/pull/5559#discussion_r445380294", "bodyText": "remove commented code", "author": "ale-axelor", "createdAt": "2020-06-25T08:06:04Z", "path": "axelor-base/src/main/java/com/axelor/apps/base/web/PrintTemplateController.java", "diffHunk": "@@ -0,0 +1,122 @@\n+/*\n+ * Axelor Business Solutions\n+ *\n+ * Copyright (C) 2019 Axelor (<http://axelor.com>).\n+ *\n+ * This program is free software: you can redistribute it and/or  modify\n+ * it under the terms of the GNU Affero General Public License, version 3,\n+ * as published by the Free Software Foundation.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package com.axelor.apps.base.web;\n+\n+import com.axelor.apps.base.db.Print;\n+import com.axelor.apps.base.db.PrintTemplate;\n+import com.axelor.apps.base.db.Wizard;\n+import com.axelor.apps.base.db.repo.PrintTemplateRepository;\n+import com.axelor.apps.base.service.PrintService;\n+import com.axelor.apps.base.service.PrintTemplateService;\n+import com.axelor.db.Model;\n+import com.axelor.db.Query;\n+import com.axelor.exception.AxelorException;\n+import com.axelor.exception.service.TraceBackService;\n+import com.axelor.i18n.I18n;\n+import com.axelor.inject.Beans;\n+import com.axelor.meta.schema.actions.ActionView;\n+import com.axelor.rpc.ActionRequest;\n+import com.axelor.rpc.ActionResponse;\n+import com.axelor.rpc.Context;\n+import java.lang.invoke.MethodHandles;\n+import java.util.Map;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class PrintTemplateController {\n+\n+  private static final Logger LOG = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass());\n+\n+  public void openPrint(ActionRequest request, ActionResponse response) {\n+    Model context = request.getContext().asType(Model.class);\n+    String model = request.getModel();\n+\n+    LOG.debug(\"Print template wizard call for model : {}\", model);\n+\n+    // String simpleModel = model.substring(model.lastIndexOf(\".\") + 1);", "originalCommit": "37f61068c3c6ce6962db5ad48e5653dcbf58e0a7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM4MDc1MQ==", "url": "https://github.com/axelor/axelor-open-suite/pull/5559#discussion_r445380751", "bodyText": "Please remove commented out code", "author": "ale-axelor", "createdAt": "2020-06-25T08:06:56Z", "path": "axelor-base/src/main/java/com/axelor/apps/base/web/PrintTemplateController.java", "diffHunk": "@@ -0,0 +1,122 @@\n+/*\n+ * Axelor Business Solutions\n+ *\n+ * Copyright (C) 2019 Axelor (<http://axelor.com>).\n+ *\n+ * This program is free software: you can redistribute it and/or  modify\n+ * it under the terms of the GNU Affero General Public License, version 3,\n+ * as published by the Free Software Foundation.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package com.axelor.apps.base.web;\n+\n+import com.axelor.apps.base.db.Print;\n+import com.axelor.apps.base.db.PrintTemplate;\n+import com.axelor.apps.base.db.Wizard;\n+import com.axelor.apps.base.db.repo.PrintTemplateRepository;\n+import com.axelor.apps.base.service.PrintService;\n+import com.axelor.apps.base.service.PrintTemplateService;\n+import com.axelor.db.Model;\n+import com.axelor.db.Query;\n+import com.axelor.exception.AxelorException;\n+import com.axelor.exception.service.TraceBackService;\n+import com.axelor.i18n.I18n;\n+import com.axelor.inject.Beans;\n+import com.axelor.meta.schema.actions.ActionView;\n+import com.axelor.rpc.ActionRequest;\n+import com.axelor.rpc.ActionResponse;\n+import com.axelor.rpc.Context;\n+import java.lang.invoke.MethodHandles;\n+import java.util.Map;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class PrintTemplateController {\n+\n+  private static final Logger LOG = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass());\n+\n+  public void openPrint(ActionRequest request, ActionResponse response) {\n+    Model context = request.getContext().asType(Model.class);\n+    String model = request.getModel();\n+\n+    LOG.debug(\"Print template wizard call for model : {}\", model);\n+\n+    // String simpleModel = model.substring(model.lastIndexOf(\".\") + 1);\n+\n+    Query<PrintTemplate> printTemplateQuery =\n+        Beans.get(PrintTemplateRepository.class).all().filter(\"self.metaModel.fullName = ?\", model);\n+\n+    try {\n+      long templatesCount = printTemplateQuery.count();\n+\n+      LOG.debug(\"Print templates count : {} \", templatesCount);\n+\n+      if (templatesCount == 0) {\n+        response.setError(I18n.get(\"Please define a print template for the model :\" + model));\n+      } else if (templatesCount == 1) {\n+        Print print =\n+            Beans.get(PrintTemplateService.class)\n+                .generatePrint(context.getId(), printTemplateQuery.fetchOne());\n+\n+        response.setView(getPrintView(print));\n+\n+      } else if (templatesCount >= 2) {\n+        response.setView(\n+            ActionView.define(I18n.get(\"Select template\"))\n+                .model(Wizard.class.getName())\n+                .add(\"form\", \"select-print-template-wizard-form\")\n+                .param(\"show-confirm\", \"false\")\n+                .context(\"_objectId\", context.getId().toString())\n+                .context(\"_templateContextModel\", model)\n+                .map());\n+      }\n+    } catch (Exception e) {\n+      TraceBackService.trace(response, e);\n+    }\n+  }\n+\n+  public void generatePrint(ActionRequest request, ActionResponse response) {\n+    Context context = request.getContext();\n+\n+    Map templateContext = (Map) context.get(\"template\");\n+    PrintTemplate printTemplate = null;\n+    if (templateContext != null) {\n+      printTemplate =\n+          Beans.get(PrintTemplateRepository.class)\n+              .find(Long.parseLong(templateContext.get(\"id\").toString()));\n+    }\n+\n+    Long objectId = Long.parseLong(context.get(\"_objectId\").toString());\n+    // String model = (String) context.get(\"_templateContextModel\");\n+    // String simpleModel = (String) context.get(\"_simpleModel\");\n+", "originalCommit": "37f61068c3c6ce6962db5ad48e5653dcbf58e0a7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7966c9d3310198e9a0b601e2a95c4adb907e3079", "url": "https://github.com/axelor/axelor-open-suite/commit/7966c9d3310198e9a0b601e2a95c4adb907e3079", "message": "RM#25402 Print template : Correcting traductions", "committedDate": "2020-06-25T09:15:21Z", "type": "commit"}, {"oid": "7966c9d3310198e9a0b601e2a95c4adb907e3079", "url": "https://github.com/axelor/axelor-open-suite/commit/7966c9d3310198e9a0b601e2a95c4adb907e3079", "message": "RM#25402 Print template : Correcting traductions", "committedDate": "2020-06-25T09:15:21Z", "type": "forcePushed"}]}