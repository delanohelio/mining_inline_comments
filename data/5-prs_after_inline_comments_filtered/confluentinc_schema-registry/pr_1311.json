{"pr_number": 1311, "pr_title": "MINOR: cleanup references to Avro in errors", "pr_createdAt": "2020-02-04T19:08:44Z", "pr_url": "https://github.com/confluentinc/schema-registry/pull/1311", "timeline": [{"oid": "209c5bad476d6e4cbe80d00a65cb2876cc4fe6cb", "url": "https://github.com/confluentinc/schema-registry/commit/209c5bad476d6e4cbe80d00a65cb2876cc4fe6cb", "message": "MINOR: cleanup references to Avro in errors", "committedDate": "2020-02-04T19:07:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkyNjI3MA==", "url": "https://github.com/confluentinc/schema-registry/pull/1311#discussion_r374926270", "bodyText": "Why did we remove this ?", "author": "dragosvictor", "createdAt": "2020-02-04T21:14:14Z", "path": "core/src/main/java/io/confluent/kafka/schemaregistry/storage/KafkaSchemaRegistry.java", "diffHunk": "@@ -1091,10 +1091,6 @@ public boolean isCompatible(String subject,\n \n     List<ParsedSchema> prevParsedSchemas = new ArrayList<>(previousSchemas.size());\n     for (Schema previousSchema : previousSchemas) {\n-      if (previousSchema == null) {\n-        throw new InvalidSchemaException(\n-            \"Existing schema \" + previousSchema + \" is not a valid Avro schema\");\n-      }", "originalCommit": "209c5bad476d6e4cbe80d00a65cb2876cc4fe6cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk3ODE3Mg==", "url": "https://github.com/confluentinc/schema-registry/pull/1311#discussion_r374978172", "bodyText": "This is obsolete code.  The input schemas are never null.   Previously when parsing a schema failed, we returned a null.  Now when parsing a schema fails, we throw an InvalidSchemaException in the parseSchema method.", "author": "rayokota", "createdAt": "2020-02-04T23:15:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkyNjI3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk5NjcyNA==", "url": "https://github.com/confluentinc/schema-registry/pull/1311#discussion_r374996724", "bodyText": "Got it !", "author": "dragosvictor", "createdAt": "2020-02-05T00:15:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkyNjI3MA=="}], "type": "inlineReview"}]}