{"pr_number": 1508, "pr_title": "Add telemetry reporter SR config option", "pr_createdAt": "2020-06-24T04:45:58Z", "pr_url": "https://github.com/confluentinc/schema-registry/pull/1508", "timeline": [{"oid": "3b9152d031a9f7e411b8f6dea4ea6e439bcd3507", "url": "https://github.com/confluentinc/schema-registry/commit/3b9152d031a9f7e411b8f6dea4ea6e439bcd3507", "message": "Add telemetry reporter SR config option", "committedDate": "2020-06-24T04:45:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY0MjY4Ng==", "url": "https://github.com/confluentinc/schema-registry/pull/1508#discussion_r444642686", "bodyText": "nit:  can remove the check against true:  if (config.getBoolean(...) && ...)", "author": "rayokota", "createdAt": "2020-06-24T04:51:37Z", "path": "core/src/main/java/io/confluent/kafka/schemaregistry/metrics/MetricsContainer.java", "diffHunk": "@@ -208,13 +202,10 @@ private SchemaRegistryMetric getSchemaTypeMetric(String type, boolean isRegister\n   private static List<String> getMetricReporterConfig(SchemaRegistryConfig config) {\n     List<String> classes = new ArrayList<>(config.getList(\n             ProducerConfig.METRIC_REPORTER_CLASSES_CONFIG));\n-    try {\n-      if (Boolean.TRUE.equals(config.originals().get(TELEMETRY_ENABLED_CONFIG))\n-              && !classes.contains(TELEMETRY_REPORTER_CLASS)) {\n-        classes.add(TELEMETRY_REPORTER_CLASS);\n-      }\n-    } catch (ConfigException ce) {\n-      // Ignore\n+    if (Boolean.TRUE.equals(", "originalCommit": "3b9152d031a9f7e411b8f6dea4ea6e439bcd3507", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY0MzA1MQ==", "url": "https://github.com/confluentinc/schema-registry/pull/1508#discussion_r444643051", "bodyText": "Maybe change this one from private to public while we're at it?", "author": "rayokota", "createdAt": "2020-06-24T04:53:11Z", "path": "core/src/main/java/io/confluent/kafka/schemaregistry/rest/SchemaRegistryConfig.java", "diffHunk": "@@ -189,6 +188,8 @@\n   private static final String INTER_INSTANCE_HEADERS_WHITELIST_CONFIG =", "originalCommit": "3b9152d031a9f7e411b8f6dea4ea6e439bcd3507", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY0NDAyMA==", "url": "https://github.com/confluentinc/schema-registry/pull/1508#discussion_r444644020", "bodyText": "Maybe change this one from private to protected while we're at it?", "author": "rayokota", "createdAt": "2020-06-24T04:56:59Z", "path": "core/src/main/java/io/confluent/kafka/schemaregistry/rest/SchemaRegistryConfig.java", "diffHunk": "@@ -344,10 +345,13 @@\n   private static final String INTER_INSTANCE_HEADERS_WHITELIST_DOC", "originalCommit": "3b9152d031a9f7e411b8f6dea4ea6e439bcd3507", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY0NDA3OQ==", "url": "https://github.com/confluentinc/schema-registry/pull/1508#discussion_r444644079", "bodyText": "nit: change to protected", "author": "rayokota", "createdAt": "2020-06-24T04:57:14Z", "path": "core/src/main/java/io/confluent/kafka/schemaregistry/rest/SchemaRegistryConfig.java", "diffHunk": "@@ -344,10 +345,13 @@\n   private static final String INTER_INSTANCE_HEADERS_WHITELIST_DOC\n       = \"A list of ``http`` headers to forward from follower to leader, \"\n       + \"in addition to ``Content-Type``, ``Accept``, ``Authorization``.\";\n+  public static final String TELEMETRY_REPORTER_ENABLED_DOC =", "originalCommit": "3b9152d031a9f7e411b8f6dea4ea6e439bcd3507", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "56fe8acabe575ee27d191bd4cc11afa42ff61a5e", "url": "https://github.com/confluentinc/schema-registry/commit/56fe8acabe575ee27d191bd4cc11afa42ff61a5e", "message": "Address review", "committedDate": "2020-06-24T05:10:52Z", "type": "commit"}]}