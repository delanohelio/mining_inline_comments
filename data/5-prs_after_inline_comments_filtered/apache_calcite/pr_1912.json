{"pr_number": 1912, "pr_title": "[CALCITE-3889] Add apply(Mappings.Mapping) to RelTrait and RelTraitSet", "pr_createdAt": "2020-04-12T16:34:49Z", "pr_url": "https://github.com/apache/calcite/pull/1912", "timeline": [{"oid": "781de1d645d119bd9c5c46ce485c0411647a3e1d", "url": "https://github.com/apache/calcite/commit/781de1d645d119bd9c5c46ce485c0411647a3e1d", "message": "[CALCITE-3889] Add apply(Mappings.Mapping) to RelTrait and RelTraitSet\n\nRelTrait Collation, Distribution have key indices, when we pass down the\ntraitset to child or propagate to parent operator, we have to remap these keys.\nIt would be nice to have apply(Mappings.Mapping) on RelTrait and RelTraitSet.\nRelDistribution already has the method, but we may want it on every RelTrait\nexcept Convention.", "committedDate": "2020-04-12T16:36:59Z", "type": "forcePushed"}, {"oid": "8216e3b11a88a112f5426c3129d73f9b636b1b7e", "url": "https://github.com/apache/calcite/commit/8216e3b11a88a112f5426c3129d73f9b636b1b7e", "message": "[CALCITE-3889] Add apply(Mappings.Mapping) to RelTrait and RelTraitSet\n\nRelTrait Collation, Distribution have key indices, when we pass down the\ntraitset to child or propagate to parent operator, we have to remap these keys.\nIt would be nice to have apply(Mappings.Mapping) on RelTrait and RelTraitSet.\nRelDistribution already has the method, but we may want it on every RelTrait\nexcept Convention.", "committedDate": "2020-04-12T16:37:49Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzMxMjMzNQ==", "url": "https://github.com/apache/calcite/pull/1912#discussion_r407312335", "bodyText": "In which cases does the returned trait have a different type from this?", "author": "liyafan82", "createdAt": "2020-04-13T04:24:27Z", "path": "core/src/main/java/org/apache/calcite/plan/RelTrait.java", "diffHunk": "@@ -85,4 +87,14 @@\n    * @param planner Planner\n    */\n   void register(RelOptPlanner planner);\n+\n+  /**\n+   * Applies a mapping to this trait.\n+   *\n+   * @param mapping   Mapping\n+   * @return trait with mapping applied\n+   */\n+  default <T extends RelTrait> T apply(Mappings.TargetMapping mapping) {\n+    return (T) this;\n+  }", "originalCommit": "8216e3b11a88a112f5426c3129d73f9b636b1b7e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTg1ODQ3NQ==", "url": "https://github.com/apache/calcite/pull/1912#discussion_r411858475", "bodyText": "Ah, the cast seems not necessary. Thanks.", "author": "hsyuan", "createdAt": "2020-04-21T04:25:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzMxMjMzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDkyNDY5NA==", "url": "https://github.com/apache/calcite/pull/1912#discussion_r410924694", "bodyText": "We apply here only Mappings.TargetMapping. Can we apply other types of mappings?", "author": "rkondakov", "createdAt": "2020-04-19T15:05:37Z", "path": "core/src/main/java/org/apache/calcite/plan/RelTrait.java", "diffHunk": "@@ -85,4 +87,14 @@\n    * @param planner Planner\n    */\n   void register(RelOptPlanner planner);\n+\n+  /**\n+   * Applies a mapping to this trait.\n+   *\n+   * @param mapping   Mapping\n+   * @return trait with mapping applied\n+   */\n+  default <T extends RelTrait> T apply(Mappings.TargetMapping mapping) {", "originalCommit": "8216e3b11a88a112f5426c3129d73f9b636b1b7e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQ2NzE3MA==", "url": "https://github.com/apache/calcite/pull/1912#discussion_r411467170", "bodyText": "Can I have your use cases?", "author": "hsyuan", "createdAt": "2020-04-20T15:22:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDkyNDY5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUxNzcxMA==", "url": "https://github.com/apache/calcite/pull/1912#discussion_r411517710", "bodyText": "I don't have particular use-cases. To be honest, I don't know much about mappings, so I'm just wondering if other mapping types are applicable here.", "author": "rkondakov", "createdAt": "2020-04-20T16:27:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDkyNDY5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTg1ODY5Mg==", "url": "https://github.com/apache/calcite/pull/1912#discussion_r411858692", "bodyText": "Hmm, I will think about it. Thanks.", "author": "hsyuan", "createdAt": "2020-04-21T04:25:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDkyNDY5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYzNTQ0OQ==", "url": "https://github.com/apache/calcite/pull/1912#discussion_r412635449", "bodyText": "Hi @rkondakov, I know the mappings is confusing. But I searched around, didn't find any uses other than TargetMapping. I will leave it TargetMapping as it is, but we can add other once we found there is a need.", "author": "hsyuan", "createdAt": "2020-04-22T03:08:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDkyNDY5NA=="}], "type": "inlineReview"}, {"oid": "4787cba48eb00190f4477b92386db06cd2c7fb63", "url": "https://github.com/apache/calcite/commit/4787cba48eb00190f4477b92386db06cd2c7fb63", "message": "[CALCITE-3889] Add apply(Mappings.Mapping) to RelTrait and RelTraitSet\n\nRelTrait Collation, Distribution have key indices, when we pass down the\ntraitset to child or propagate to parent operator, we have to remap these keys.\nIt would be nice to have apply(Mappings.Mapping) on RelTrait and RelTraitSet.\nRelDistribution already has the method, but we may want it on every RelTrait\nexcept Convention.\n\nClose #1912", "committedDate": "2020-05-02T03:58:14Z", "type": "commit"}, {"oid": "4787cba48eb00190f4477b92386db06cd2c7fb63", "url": "https://github.com/apache/calcite/commit/4787cba48eb00190f4477b92386db06cd2c7fb63", "message": "[CALCITE-3889] Add apply(Mappings.Mapping) to RelTrait and RelTraitSet\n\nRelTrait Collation, Distribution have key indices, when we pass down the\ntraitset to child or propagate to parent operator, we have to remap these keys.\nIt would be nice to have apply(Mappings.Mapping) on RelTrait and RelTraitSet.\nRelDistribution already has the method, but we may want it on every RelTrait\nexcept Convention.\n\nClose #1912", "committedDate": "2020-05-02T03:58:14Z", "type": "forcePushed"}]}