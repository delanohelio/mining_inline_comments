{"pr_number": 2089, "pr_title": "[CALCITE-4081] Round-tripping a DECIMAL literal throws validation error", "pr_createdAt": "2020-07-29T07:06:54Z", "pr_url": "https://github.com/apache/calcite/pull/2089", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM4NjY3Mw==", "url": "https://github.com/apache/calcite/pull/2089#discussion_r463386673", "bodyText": "Seems the toType should always be a Decimal type, we should add a check here. Also, can we add some doc to this method ?", "author": "danny0405", "createdAt": "2020-07-31T03:29:16Z", "path": "core/src/main/java/org/apache/calcite/sql/type/SqlTypeUtil.java", "diffHunk": "@@ -1751,4 +1752,18 @@ public static RelDataType extractLastNFields(RelDataTypeFactory typeFactory,\n     return typeFactory.createStructType(\n         type.getFieldList().subList(fieldsCnt - numToKeep, fieldsCnt));\n   }\n+\n+  public static boolean isValidDecimalValue(BigDecimal value, RelDataType toType) {\n+    if (value == null) {\n+      return true;\n+    }\n+    switch (toType.getSqlTypeName()) {\n+    case DECIMAL:\n+      final int intDigits = value.precision() - value.scale();\n+      final int maxIntDigits = toType.getPrecision() - toType.getScale();\n+      return intDigits <= maxIntDigits;", "originalCommit": "74e25247096ae38b069e1674f7710a2c54c5d9d0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM5MDY1Ng==", "url": "https://github.com/apache/calcite/pull/2089#discussion_r463390656", "bodyText": "Seems the toType should always be a Decimal type, we should add a check here\n\nNot necessary. It would work even though toType is not Decimal since  I used case when.\n\nAlso, can we add some doc to this method ?\n\nMakes sense.", "author": "chunweilei", "createdAt": "2020-07-31T03:48:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM4NjY3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQzNTg0Mg==", "url": "https://github.com/apache/calcite/pull/2089#discussion_r463435842", "bodyText": "If toType is not decimal, how can you ensure that it has a valid precision and scale, such as -1.", "author": "danny0405", "createdAt": "2020-07-31T06:51:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM4NjY3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ0NDE4OQ==", "url": "https://github.com/apache/calcite/pull/2089#discussion_r463444189", "bodyText": "Do you want to throw an exception if toType is not decimal by saying \"add a check here\"?", "author": "chunweilei", "createdAt": "2020-07-31T07:14:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM4NjY3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ5NjU0Mg==", "url": "https://github.com/apache/calcite/pull/2089#discussion_r463496542", "bodyText": "I just want to make sure the logic is robust, either a check or assert is okey from  my side.", "author": "danny0405", "createdAt": "2020-07-31T09:09:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM4NjY3Mw=="}], "type": "inlineReview"}, {"oid": "6fef247a94507bf8c6544c210c7920dbdb0ce96f", "url": "https://github.com/apache/calcite/commit/6fef247a94507bf8c6544c210c7920dbdb0ce96f", "message": "[CALCITE-4081] Round-tripping a DECIMAL literal throws validation error", "committedDate": "2020-07-31T06:20:44Z", "type": "commit"}, {"oid": "6fef247a94507bf8c6544c210c7920dbdb0ce96f", "url": "https://github.com/apache/calcite/commit/6fef247a94507bf8c6544c210c7920dbdb0ce96f", "message": "[CALCITE-4081] Round-tripping a DECIMAL literal throws validation error", "committedDate": "2020-07-31T06:20:44Z", "type": "forcePushed"}]}