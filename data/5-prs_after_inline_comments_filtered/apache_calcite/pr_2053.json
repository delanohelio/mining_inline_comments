{"pr_number": 2053, "pr_title": "[CALCITE-4102] Some improvements to aggregate related operations", "pr_createdAt": "2020-07-02T04:40:36Z", "pr_url": "https://github.com/apache/calcite/pull/2053", "timeline": [{"oid": "1c39e51e4ce04e363ee7fb025f5acc2f8be2edec", "url": "https://github.com/apache/calcite/commit/1c39e51e4ce04e363ee7fb025f5acc2f8be2edec", "message": "[CALCITE-4102] Some improvements to aggregate related operations", "committedDate": "2020-07-02T06:04:17Z", "type": "forcePushed"}, {"oid": "5b3e8720944a241c70c7e6ecbff187043d648d3d", "url": "https://github.com/apache/calcite/commit/5b3e8720944a241c70c7e6ecbff187043d648d3d", "message": "[CALCITE-4102] Some improvements to aggregate related operations", "committedDate": "2020-07-02T06:07:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMzNDkwNg==", "url": "https://github.com/apache/calcite/pull/2053#discussion_r449334906", "bodyText": "we do not format like this", "author": "yanlin-Lynn", "createdAt": "2020-07-03T01:35:01Z", "path": "core/src/main/java/org/apache/calcite/util/ImmutableBitSet.java", "diffHunk": "@@ -901,6 +902,19 @@ public ImmutableBitSet shift(int offset) {\n     return builder.build();\n   }\n \n+  /**\n+   * Checks if all bit sets contain a particular bit.\n+   */\n+  public static boolean allContain(Collection<ImmutableBitSet> bitSets,\n+                                   int bit) {", "originalCommit": "5b3e8720944a241c70c7e6ecbff187043d648d3d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM5MDk0OA==", "url": "https://github.com/apache/calcite/pull/2053#discussion_r449390948", "bodyText": "Revised. Thank you for your kind reminder.", "author": "liyafan82", "createdAt": "2020-07-03T06:01:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMzNDkwNg=="}], "type": "inlineReview"}, {"oid": "4903337bb50dc3c1de955bd45d9b8e3d2b02ae45", "url": "https://github.com/apache/calcite/commit/4903337bb50dc3c1de955bd45d9b8e3d2b02ae45", "message": "[CALCITE-4102] Some improvements to aggregate related operations", "committedDate": "2020-07-03T06:00:58Z", "type": "forcePushed"}, {"oid": "555f3321bb94b7b0c74fc8ef21e51c5411d39ba9", "url": "https://github.com/apache/calcite/commit/555f3321bb94b7b0c74fc8ef21e51c5411d39ba9", "message": "[CALCITE-4102] Some improvements to aggregate related operations (Liya Fan)\n\n1. Extract a common method for ImmutableBitSet\n2. Refine the use of data structures\n3. Replace expensive operations with cheap ones", "committedDate": "2020-07-08T11:47:57Z", "type": "forcePushed"}, {"oid": "add875776e9b91424e2750430af904278e12c9a0", "url": "https://github.com/apache/calcite/commit/add875776e9b91424e2750430af904278e12c9a0", "message": "[CALCITE-4102] Some improvements to aggregate related operations (Liya Fan)\n\n1. Extract a common method for ImmutableBitSet\n2. Refine the use of data structures\n3. Replace expensive operations with cheap ones", "committedDate": "2020-07-09T03:29:23Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA2MTQwMQ==", "url": "https://github.com/apache/calcite/pull/2053#discussion_r454061401", "bodyText": "Would there be duplicate values since Set is changed to List?", "author": "chunweilei", "createdAt": "2020-07-14T02:32:06Z", "path": "core/src/main/java/org/apache/calcite/rel/core/Aggregate.java", "diffHunk": "@@ -548,19 +538,22 @@ public static boolean isRollup(ImmutableBitSet groupSet,\n      *\n      * @see #isRollup(ImmutableBitSet, List) */\n     public static List<Integer> getRollup(List<ImmutableBitSet> groupSets) {\n-      final Set<Integer> set = new LinkedHashSet<>();\n+      final List<Integer> rollUpBits = new ArrayList<>(groupSets.size() - 1);\n       ImmutableBitSet g = null;\n       for (ImmutableBitSet bitSet : groupSets) {\n         if (g == null) {\n           // First item must equal groupSet\n         } else {\n           // Each subsequent items must be a subset with one fewer bit than the\n           // previous item\n-          set.addAll(g.except(bitSet).toList());\n+          ImmutableBitSet diff = g.except(bitSet);", "originalCommit": "add875776e9b91424e2750430af904278e12c9a0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDEyMzMxNw==", "url": "https://github.com/apache/calcite/pull/2053#discussion_r454123317", "bodyText": "@chunweilei Thanks a lot for your feedback.\nAccording to the definition of Rollup (https://github.com/apache/calcite/blob/master/core/src/main/java/org/apache/calcite/rel/core/Aggregate.java#L508-L513), there can be no duplicate.", "author": "liyafan82", "createdAt": "2020-07-14T06:08:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA2MTQwMQ=="}], "type": "inlineReview"}, {"oid": "f7ce021df77a9acbf8f507c3c46486fe07be4957", "url": "https://github.com/apache/calcite/commit/f7ce021df77a9acbf8f507c3c46486fe07be4957", "message": "[CALCITE-4102] Some improvements to aggregate related operations (Liya Fan)\n\n1. Extract a common method for ImmutableBitSet\n2. Refine the use of data structures\n3. Replace expensive operations with cheap ones", "committedDate": "2020-07-16T02:23:19Z", "type": "commit"}, {"oid": "f7ce021df77a9acbf8f507c3c46486fe07be4957", "url": "https://github.com/apache/calcite/commit/f7ce021df77a9acbf8f507c3c46486fe07be4957", "message": "[CALCITE-4102] Some improvements to aggregate related operations (Liya Fan)\n\n1. Extract a common method for ImmutableBitSet\n2. Refine the use of data structures\n3. Replace expensive operations with cheap ones", "committedDate": "2020-07-16T02:23:19Z", "type": "forcePushed"}]}