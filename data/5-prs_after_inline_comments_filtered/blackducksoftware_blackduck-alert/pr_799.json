{"pr_number": 799, "pr_title": "Ps settings fix", "pr_createdAt": "2020-01-09T22:50:26Z", "pr_url": "https://github.com/blackducksoftware/blackduck-alert/pull/799", "timeline": [{"oid": "704bf4d56d7ddc40923b37e4f8dbec45b9713698", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/704bf4d56d7ddc40923b37e4f8dbec45b9713698", "message": "Feature(startup): Add a component to migrate authentication settings.", "committedDate": "2020-01-09T17:06:28Z", "type": "commit"}, {"oid": "e003de23365500bff4f49301afc825605fff1a2d", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/e003de23365500bff4f49301afc825605fff1a2d", "message": "Fix(startup): Migrate old authentication environment variables.", "committedDate": "2020-01-09T21:22:40Z", "type": "commit"}, {"oid": "22a6ad7b7baeb6110fad2bca5f3c1f70273e9ca8", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/22a6ad7b7baeb6110fad2bca5f3c1f70273e9ca8", "message": "Fix(startup): Add unit test for environment utility.", "committedDate": "2020-01-09T22:07:48Z", "type": "commit"}, {"oid": "5cd527f90aede584dc4dcc9139afb91b63234d24", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/5cd527f90aede584dc4dcc9139afb91b63234d24", "message": "Fix(startup): Add the check for the environment variable.", "committedDate": "2020-01-09T22:46:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTMwNjA3NA==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/799#discussion_r365306074", "bodyText": "This can be replaced with a method reference. Also, I generally prefer the orElse on it's own line.", "author": "bamandel", "createdAt": "2020-01-10T16:02:03Z", "path": "src/main/java/com/synopsys/integration/alert/workflow/startup/component/AuthenticationSettingsMigration.java", "diffHunk": "@@ -0,0 +1,161 @@\n+/**\n+ * blackduck-alert\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.alert.workflow.startup.component;\n+\n+import java.util.Collection;\n+import java.util.Comparator;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.core.annotation.Order;\n+import org.springframework.stereotype.Component;\n+\n+import com.synopsys.integration.alert.common.descriptor.DescriptorKey;\n+import com.synopsys.integration.alert.common.descriptor.accessor.SettingsUtility;\n+import com.synopsys.integration.alert.common.enumeration.ConfigContextEnum;\n+import com.synopsys.integration.alert.common.exception.AlertException;\n+import com.synopsys.integration.alert.common.persistence.accessor.ConfigurationAccessor;\n+import com.synopsys.integration.alert.common.persistence.accessor.DescriptorAccessor;\n+import com.synopsys.integration.alert.common.persistence.model.ConfigurationFieldModel;\n+import com.synopsys.integration.alert.common.persistence.model.ConfigurationModel;\n+import com.synopsys.integration.alert.common.persistence.model.DefinedFieldModel;\n+import com.synopsys.integration.alert.common.persistence.util.ConfigurationFieldModelConverter;\n+import com.synopsys.integration.alert.common.rest.model.FieldModel;\n+import com.synopsys.integration.alert.common.rest.model.FieldValueModel;\n+import com.synopsys.integration.alert.component.authentication.descriptor.AuthenticationDescriptorKey;\n+import com.synopsys.integration.alert.component.settings.descriptor.SettingsDescriptor;\n+import com.synopsys.integration.alert.web.config.FieldModelProcessor;\n+\n+@Component\n+@Order(2)\n+// TODO Remove this class in 6.0.0\n+// TODO Revisit the order of the startup components\n+public class AuthenticationSettingsMigration extends StartupComponent {\n+    private Logger logger = LoggerFactory.getLogger(AuthenticationSettingsMigration.class);\n+    private EnvironmentVariableUtility environmentUtility;\n+    private DescriptorAccessor descriptorAccessor;\n+    private ConfigurationAccessor fieldConfigurationAccessor;\n+    private ConfigurationFieldModelConverter modelConverter;\n+    private FieldModelProcessor fieldModelProcessor;\n+    private AuthenticationDescriptorKey authenticationDescriptorKey;\n+    private SettingsUtility settingsUtility;\n+\n+    @Autowired\n+    public AuthenticationSettingsMigration(EnvironmentVariableUtility environmentUtility, DescriptorAccessor descriptorAccessor, ConfigurationAccessor fieldConfigurationAccessor,\n+        ConfigurationFieldModelConverter modelConverter, FieldModelProcessor fieldModelProcessor, AuthenticationDescriptorKey authenticationDescriptorKey, SettingsUtility settingsUtility) {\n+        this.environmentUtility = environmentUtility;\n+        this.descriptorAccessor = descriptorAccessor;\n+        this.fieldConfigurationAccessor = fieldConfigurationAccessor;\n+        this.modelConverter = modelConverter;\n+        this.fieldModelProcessor = fieldModelProcessor;\n+        this.authenticationDescriptorKey = authenticationDescriptorKey;\n+        this.settingsUtility = settingsUtility;\n+    }\n+\n+    @Override\n+    protected void initialize() {\n+        logger.info(\"Settings authentication variable migration start...\");\n+        try {\n+            List<DefinedFieldModel> fieldsForDescriptor = descriptorAccessor.getFieldsForDescriptor(authenticationDescriptorKey, ConfigContextEnum.GLOBAL).stream()\n+                                                              .sorted(Comparator.comparing(DefinedFieldModel::getKey))\n+                                                              .collect(Collectors.toList());\n+            List<ConfigurationModel> foundConfigurationModels = fieldConfigurationAccessor.getConfigurationByDescriptorKeyAndContext(authenticationDescriptorKey, ConfigContextEnum.GLOBAL);\n+\n+            Map<String, ConfigurationFieldModel> existingConfiguredFields = new HashMap<>();\n+            foundConfigurationModels.forEach(config -> existingConfiguredFields.putAll(config.getCopyOfKeyToFieldMap()));\n+\n+            Set<ConfigurationFieldModel> configurationModels = createFieldModelsFromDefinedFields(fieldsForDescriptor, existingConfiguredFields);\n+            boolean overwriteConfig = settingsUtility.getConfiguration()\n+                                          .flatMap(configurationModel -> configurationModel.getField(SettingsDescriptor.KEY_STARTUP_ENVIRONMENT_VARIABLE_OVERRIDE))\n+                                          .flatMap(ConfigurationFieldModel::getFieldValue)\n+                                          .map(value -> Boolean.valueOf(value)).orElse(Boolean.FALSE);", "originalCommit": "5cd527f90aede584dc4dcc9139afb91b63234d24", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTMwODc2NQ==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/799#discussion_r365308765", "bodyText": "Perhaps we should make our standard steps increments of 10? That way we can fit temporary/new steps in between existing without re-ordering everything every time", "author": "bamandel", "createdAt": "2020-01-10T16:07:39Z", "path": "src/main/java/com/synopsys/integration/alert/workflow/startup/component/ConfigurationLogger.java", "diffHunk": "@@ -35,27 +35,27 @@\n import com.synopsys.integration.alert.common.rest.ProxyManager;\n \n @Component\n-@Order(4)\n+@Order(5)", "originalCommit": "5cd527f90aede584dc4dcc9139afb91b63234d24", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM3MDU4OA==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/799#discussion_r365370588", "bodyText": "I will implement that change in 5.3.0 as an enhancement when this change is merged.", "author": "psantos1113", "createdAt": "2020-01-10T18:31:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTMwODc2NQ=="}], "type": "inlineReview"}, {"oid": "2c85eb7b308ae596f0c0147338e75e6ea78842e0", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/2c85eb7b308ae596f0c0147338e75e6ea78842e0", "message": "Refactor(startup): Implement PR feedback.", "committedDate": "2020-01-10T18:35:53Z", "type": "commit"}, {"oid": "666f594e5b11446998d5486617004b691d2bc0f5", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/666f594e5b11446998d5486617004b691d2bc0f5", "message": "Merge remote-tracking branch 'origin/5.2.0' into ps_settings_fix", "committedDate": "2020-01-10T18:38:50Z", "type": "commit"}, {"oid": "40bd4a6bfbc387444e375286155c399dfe29e830", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/40bd4a6bfbc387444e375286155c399dfe29e830", "message": "Refactor(startup): Use a method reference for the boolean conversion.", "committedDate": "2020-01-10T20:03:19Z", "type": "commit"}]}