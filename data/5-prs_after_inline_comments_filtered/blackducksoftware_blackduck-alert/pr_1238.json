{"pr_number": 1238, "pr_title": "Fix all field error messages not displaying on distribution test configuration error", "pr_createdAt": "2020-11-02T18:42:38Z", "pr_url": "https://github.com/blackducksoftware/blackduck-alert/pull/1238", "timeline": [{"oid": "f8da6b4619d601f9e530743c1156129c5aa34680", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/f8da6b4619d601f9e530743c1156129c5aa34680", "message": "fix: Update validateJobNameUnique to return a field status", "committedDate": "2020-11-02T18:28:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIwMTM0Mw==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1238#discussion_r516201343", "bodyText": "There should only be 1 name per job, so why are we returning a list for this method?", "author": "jamesrichard91", "createdAt": "2020-11-02T19:21:05Z", "path": "web/src/main/java/com/synopsys/integration/alert/web/api/job/JobConfigActions.java", "diffHunk": "@@ -230,18 +231,18 @@ public JobConfigActions(AuthorizationManager authorizationManager, DescriptorAcc\n         }\n     }\n \n-    private ValidationResponseModel validateJobNameUnique(@Nullable UUID currentJobId, JobFieldModel jobFieldModel) {\n-        ValidationResponseModel responseModel = ValidationResponseModel.success(\"Valid name\");\n+    private List<AlertFieldStatus> validateJobNameUnique(@Nullable UUID currentJobId, JobFieldModel jobFieldModel) {\n+        List<AlertFieldStatus> fieldStatuses = new ArrayList<>();", "originalCommit": "f8da6b4619d601f9e530743c1156129c5aa34680", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIwNDQyNQ==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1238#discussion_r516204425", "bodyText": "I think your right, I saw the the for loop and incorrectly thought it should have been returned as a list because it looped through all of the fieldModels. I can change this to return a single AlertFieldStatus.", "author": "ChomickiM", "createdAt": "2020-11-02T19:27:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIwMTM0Mw=="}], "type": "inlineReview"}, {"oid": "2a23c43c45b3bd6be50e2b97717c782ee8ef985d", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/2a23c43c45b3bd6be50e2b97717c782ee8ef985d", "message": "refactor: Change validateJobNameUnique to return an optional rather than a list", "committedDate": "2020-11-02T19:47:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIyNTkzMg==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1238#discussion_r516225932", "bodyText": "Could you use a stream here to remove the for loop?  You would have to change the method signature of validateJobNameUnique to take a FieldValueModel.\nOptional<AlertFieldStatus> fieldStatus = jobFieldModel.getFieldModels().stream()\n     .filter(fieldModel ->                                            \n                     fieldModel.getFieldValueModel(ChannelDistributionUIConfig.KEY_NAME).isPresent())\n     .map(fieldModel.getFieldValueModel(ChannelDistributionUIConfig.KEY_NAME))\n     .map(fieldValueModel -> validateJobNameUnique(currentJobId, fieldValueModel)\n     .orElse(Optional.empty());", "author": "psantos1113", "createdAt": "2020-11-02T20:08:45Z", "path": "web/src/main/java/com/synopsys/integration/alert/web/api/job/JobConfigActions.java", "diffHunk": "@@ -230,18 +231,17 @@ public JobConfigActions(AuthorizationManager authorizationManager, DescriptorAcc\n         }\n     }\n \n-    private ValidationResponseModel validateJobNameUnique(@Nullable UUID currentJobId, JobFieldModel jobFieldModel) {\n-        ValidationResponseModel responseModel = ValidationResponseModel.success(\"Valid name\");\n+    private Optional<AlertFieldStatus> validateJobNameUnique(@Nullable UUID currentJobId, JobFieldModel jobFieldModel) {\n         for (FieldModel fieldModel : jobFieldModel.getFieldModels()) {\n-            responseModel = validateJobNameUnique(currentJobId, fieldModel);\n-            if (responseModel.hasErrors()) {\n-                return responseModel;\n+            Optional<AlertFieldStatus> fieldStatus = validateJobNameUnique(currentJobId, fieldModel);", "originalCommit": "2a23c43c45b3bd6be50e2b97717c782ee8ef985d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "37b8756ded3ca1006730a2d8855e7d1adb224dff", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/37b8756ded3ca1006730a2d8855e7d1adb224dff", "message": "refactor: Update validateJobNameUnique to use a stream", "committedDate": "2020-11-02T21:18:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzUzODY4Ng==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1238#discussion_r517538686", "bodyText": "This is for 6.3.0 right? This method should not be used in 6.4.0+", "author": "gkillough", "createdAt": "2020-11-04T18:13:22Z", "path": "web/src/main/java/com/synopsys/integration/alert/web/api/job/JobConfigActions.java", "diffHunk": "@@ -230,43 +231,38 @@ public JobConfigActions(AuthorizationManager authorizationManager, DescriptorAcc\n         }\n     }\n \n-    private ValidationResponseModel validateJobNameUnique(@Nullable UUID currentJobId, JobFieldModel jobFieldModel) {\n-        ValidationResponseModel responseModel = ValidationResponseModel.success(\"Valid name\");\n-        for (FieldModel fieldModel : jobFieldModel.getFieldModels()) {\n-            responseModel = validateJobNameUnique(currentJobId, fieldModel);\n-            if (responseModel.hasErrors()) {\n-                return responseModel;\n-            }\n-        }\n-        return responseModel;\n+    private Optional<AlertFieldStatus> validateJobNameUnique(@Nullable UUID currentJobId, JobFieldModel jobFieldModel) {\n+        Optional<AlertFieldStatus> fieldStatus = jobFieldModel.getFieldModels().stream()\n+                                                     .filter(fieldModel -> fieldModel.getFieldValueModel(ChannelDistributionUIConfig.KEY_NAME).isPresent())\n+                                                     .findFirst()\n+                                                     .flatMap(fieldModel -> fieldModel.getFieldValueModel(ChannelDistributionUIConfig.KEY_NAME))\n+                                                     .flatMap(fieldValueModel -> validateJobNameUnique(currentJobId, fieldValueModel));\n+        return fieldStatus;\n     }\n \n-    private ValidationResponseModel validateJobNameUnique(@Nullable UUID currentJobId, FieldModel fieldModel) {\n-        Optional<FieldValueModel> jobNameFieldOptional = fieldModel.getFieldValueModel(ChannelDistributionUIConfig.KEY_NAME);\n+    private Optional<AlertFieldStatus> validateJobNameUnique(@Nullable UUID currentJobId, FieldValueModel fieldValueModel) {\n         String error = \"\";\n-        if (jobNameFieldOptional.isPresent()) {\n-            String jobName = jobNameFieldOptional.get().getValue().orElse(null);\n-            if (StringUtils.isNotBlank(jobName)) {\n-                List<ConfigurationJobModel> jobs = configurationAccessor.getAllJobs();\n-\n-                boolean foundDuplicateName = jobs.stream()\n-                                                 .filter(job -> filterOutMatchingJobs(currentJobId, job))\n-                                                 .flatMap(job -> job.getCopyOfConfigurations().stream())\n-                                                 .map(configurationModel -> configurationModel.getField(ChannelDistributionUIConfig.KEY_NAME).orElse(null))\n-                                                 .filter(configurationFieldModel -> (null != configurationFieldModel) && configurationFieldModel.getFieldValue().isPresent())\n-                                                 .anyMatch(configurationFieldModel -> jobName.equals(configurationFieldModel.getFieldValue().get()));\n-                if (foundDuplicateName) {\n-                    error = \"A distribution configuration with this name already exists.\";\n-                }\n-            } else {\n-                error = \"Name cannot be blank.\";\n+        String jobName = fieldValueModel.getValue().orElse(null);\n+        if (StringUtils.isNotBlank(jobName)) {\n+            List<ConfigurationJobModel> jobs = configurationAccessor.getAllJobs();", "originalCommit": "37b8756ded3ca1006730a2d8855e7d1adb224dff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU0MDQ3MQ==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1238#discussion_r517540471", "bodyText": "Yes, its for 6.3.0, this is coming from Line 250 in the old code", "author": "ChomickiM", "createdAt": "2020-11-04T18:16:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzUzODY4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU0MTcxNQ==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1238#discussion_r517541715", "bodyText": "Gotcha. Just make sure when you merge 6.3.0 -> master that you don't use getAllJobs.", "author": "gkillough", "createdAt": "2020-11-04T18:18:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzUzODY4Ng=="}], "type": "inlineReview"}]}