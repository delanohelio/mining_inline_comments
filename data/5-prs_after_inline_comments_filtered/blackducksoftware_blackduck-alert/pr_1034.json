{"pr_number": 1034, "pr_title": "Black Duck Callback Handler", "pr_createdAt": "2020-06-24T16:10:39Z", "pr_url": "https://github.com/blackducksoftware/blackduck-alert/pull/1034", "timeline": [{"oid": "ecf53fbffeb8d3a2f43a83ccae1fdc4672a22025", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/ecf53fbffeb8d3a2f43a83ccae1fdc4672a22025", "message": "Feat(Java): Add common provider config retrieval logic to ProviderCallbackHandler", "committedDate": "2020-06-24T13:25:20Z", "type": "commit"}, {"oid": "f25cf6b90779da60c567a8057d7212b4e96da043", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/f25cf6b90779da60c567a8057d7212b4e96da043", "message": "Implement high level callback event handling for Black Duck", "committedDate": "2020-06-24T13:57:30Z", "type": "commit"}, {"oid": "5a653c6848013acce218d15d7e0e3658abebedb7", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/5a653c6848013acce218d15d7e0e3658abebedb7", "message": "Feat(Java): Implement Black Duck issue requests", "committedDate": "2020-06-24T15:58:49Z", "type": "commit"}, {"oid": "19d5d01eb4934d224e3705e4b7e3a09ab0ffc32b", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/19d5d01eb4934d224e3705e4b7e3a09ab0ffc32b", "message": "Feat(Java): Create workaround issue lookup url for Black Duck issue handling", "committedDate": "2020-06-24T16:05:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAzMzM1Ng==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1034#discussion_r445033356", "bodyText": "This is slightly concerning to me as we're making assumptions here and assume these URLs won't change. Is there no concrete way for us to get this issues url from Blackduck?", "author": "bamandel", "createdAt": "2020-06-24T16:49:09Z", "path": "src/main/java/com/synopsys/integration/alert/provider/blackduck/issues/BlackDuckProviderIssueHandler.java", "diffHunk": "@@ -0,0 +1,89 @@\n+package com.synopsys.integration.alert.provider.blackduck.issues;\n+\n+import java.time.Instant;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.Optional;\n+\n+import org.apache.commons.lang.StringUtils;\n+\n+import com.synopsys.integration.blackduck.api.manual.component.ResourceMetadata;\n+import com.synopsys.integration.blackduck.api.manual.throwaway.generated.view.IssueView;\n+import com.synopsys.integration.blackduck.service.BlackDuckService;\n+import com.synopsys.integration.blackduck.service.model.RequestFactory;\n+import com.synopsys.integration.exception.IntegrationException;\n+import com.synopsys.integration.rest.request.Request;\n+\n+public class BlackDuckProviderIssueHandler {\n+    public static final String ISSUE_ENDPOINT_MEDIA_TYPE_V6 = \"application/vnd.blackducksoftware.bill-of-materials-6+json\";\n+    private final BlackDuckService blackDuckService;\n+\n+    public BlackDuckProviderIssueHandler(BlackDuckService blackDuckService) {\n+        this.blackDuckService = blackDuckService;\n+    }\n+\n+    public void createOrUpdateBlackDuckIssue(String bomComponentVersionIssuesUrl, BlackDuckProviderIssueModel issueModel) throws IntegrationException {\n+        Optional<IssueView> optionalExistingIssue = retrieveExistingIssue(bomComponentVersionIssuesUrl, issueModel.getKey());\n+\n+        Date currentDate = Date.from(Instant.now());\n+        IssueView issueRequestModel = createIssueRequestModel(issueModel);\n+        if (optionalExistingIssue.isPresent()) {\n+            issueRequestModel.setIssueCreatedAt(optionalExistingIssue.get().getIssueCreatedAt());\n+            issueRequestModel.setIssueUpdatedAt(currentDate);\n+            putIssue(bomComponentVersionIssuesUrl, issueRequestModel);\n+        } else {\n+            issueRequestModel.setIssueCreatedAt(currentDate);\n+            issueRequestModel.setIssueUpdatedAt(null);\n+            postIssue(bomComponentVersionIssuesUrl, issueRequestModel);\n+        }\n+    }\n+\n+    // TODO fix this logic once the bomComponentVersionIssuesUrl supports GET requests directly\n+    private Optional<IssueView> retrieveExistingIssue(String bomComponentVersionIssuesUrl, String issueKey) throws IntegrationException {\n+        String issueLookupUrl = createIssueLookupUrl(bomComponentVersionIssuesUrl);\n+        Request.Builder requestBuilder = RequestFactory.createCommonGetRequestBuilder(issueLookupUrl)\n+                                             .addAdditionalHeader(\"Accept\", ISSUE_ENDPOINT_MEDIA_TYPE_V6);\n+\n+        // This is really a List<BomComponentIssueView>, but BomComponentIssueView is not considered a BlackDuckResponse.\n+        List<IssueView> bomComponentIssues = blackDuckService.getAllResponses(requestBuilder, IssueView.class);\n+        return bomComponentIssues\n+                   .stream()\n+                   .filter(issue -> issue.getIssueId().equals(issueKey))\n+                   .findAny();\n+    }\n+\n+    private void postIssue(String uri, IssueView requestModel) throws IntegrationException {\n+        blackDuckService.post(uri, requestModel);\n+    }\n+\n+    private void putIssue(String uri, IssueView requestModel) throws IntegrationException {\n+        ResourceMetadata resourceMetadata = new ResourceMetadata();\n+        resourceMetadata.setHref(uri);\n+        requestModel.setMeta(resourceMetadata);\n+\n+        blackDuckService.put(requestModel);\n+    }\n+\n+    private IssueView createIssueRequestModel(BlackDuckProviderIssueModel issueModel) {\n+        IssueView blackDuckIssueView = new IssueView();\n+        blackDuckIssueView.setIssueId(issueModel.getKey());\n+        blackDuckIssueView.setIssueLink(issueModel.getLink());\n+        blackDuckIssueView.setIssueAssignee(issueModel.getAssignee());\n+        blackDuckIssueView.setIssueStatus(issueModel.getStatus());\n+        blackDuckIssueView.setIssueDescription(issueModel.getSummary());\n+        return blackDuckIssueView;\n+    }\n+\n+    /**\n+     * @param bomComponentVersionIssuesUrl a string in the format of<br/>\n+     *                                     {blackDuckUrl}/api/projects/{projectId}/versions/{projectVersionId}/components/{componentId}/issues<br/>\n+     *                                     or<br/>\n+     *                                     {blackDuckUrl}/api/projects/{projectId}/versions/{projectVersionId}/components/{componentId}/component-versions/{componentVersionId}/issues\n+     * @return a string in the format of {blackDuckUrl}/api/projects/{projectId}/versions/{projectVersionId}/issues\n+     */\n+    private String createIssueLookupUrl(String bomComponentVersionIssuesUrl) {\n+        String projectVersionUrl = StringUtils.substringBefore(bomComponentVersionIssuesUrl, \"/components\");\n+        return projectVersionUrl + \"/issues\";\n+    }\n+\n+}", "originalCommit": "19d5d01eb4934d224e3705e4b7e3a09ab0ffc32b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAzNzU5OA==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1034#discussion_r445037598", "bodyText": "Not without asking a lot more of Events. This will go away when Black Duck supports GETs against the bomComponentVersionIssuesUrl.", "author": "gkillough", "createdAt": "2020-06-24T16:56:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAzMzM1Ng=="}], "type": "inlineReview"}, {"oid": "fc993c96ca16642a2ec28d7e5655606af24d8f95", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/fc993c96ca16642a2ec28d7e5655606af24d8f95", "message": "Fix(Java): Handle media type in Black Duck issue requests", "committedDate": "2020-06-24T17:12:39Z", "type": "commit"}, {"oid": "424aa088c32cd6ea25e3f2a94a459338042f5033", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/424aa088c32cd6ea25e3f2a94a459338042f5033", "message": "Refactor(Java): Replace string literal http headers with constants", "committedDate": "2020-06-24T17:17:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA1MzMxNQ==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1034#discussion_r445053315", "bodyText": "I would love some variable name suggestions here.\n\nchannelDestination represents the location that the channel posted to (e.g. name=\"IssueKey\", value=\"JIRA-123\", url= \"https://jira/browse/JIRA-123\").\noperation is currently tightly coupled to IssueOperation, but we might want to change that.\nchannelActionSummary represents a summary of the channel message (e.g. the Jira issue summary).", "author": "gkillough", "createdAt": "2020-06-24T17:23:42Z", "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/event/ProviderCallbackEvent.java", "diffHunk": "@@ -8,9 +8,11 @@\n public class ProviderCallbackEvent extends AlertEvent {\n     private final String callbackUrl;\n     private final String notificationType;\n+\n+    // TODO consider splitting channelDestination out into something resembling \"key\" and \"link\"\n     private final LinkableItem channelDestination;\n     private final IssueOperation operation;\n-    private final String channelEventDescription;\n+    private final String channelActionSummary;", "originalCommit": "424aa088c32cd6ea25e3f2a94a459338042f5033", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "73a7cc58ffe3d7d634effcb1d0046eb7cbf12040", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/73a7cc58ffe3d7d634effcb1d0046eb7cbf12040", "message": "Fix(Java): Add missing log message in ProviderCoallbackHandler", "committedDate": "2020-06-24T17:26:14Z", "type": "commit"}]}