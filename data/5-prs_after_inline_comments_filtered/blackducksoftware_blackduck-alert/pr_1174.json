{"pr_number": 1174, "pr_title": "Fix Provider Config reference strategy in Jobs", "pr_createdAt": "2020-09-18T16:12:56Z", "pr_url": "https://github.com/blackducksoftware/blackduck-alert/pull/1174", "timeline": [{"oid": "612a4996f36a09ff47081e26bf7180d2329f7d78", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/612a4996f36a09ff47081e26bf7180d2329f7d78", "message": "Feat(Liquibase): Add provider config id field for distribution jobs and migrate id based on provider name field", "committedDate": "2020-09-14T18:28:05Z", "type": "commit"}, {"oid": "853cc123008a4f8570e3166f8a4be093dc8f8c9e", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/853cc123008a4f8570e3166f8a4be093dc8f8c9e", "message": "Feat(ProviderDescriptor): Add provider config id key constant", "committedDate": "2020-09-14T18:47:38Z", "type": "commit"}, {"oid": "65ed8e215213f018a01abf1449b62e2bbdea0489", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/65ed8e215213f018a01abf1449b62e2bbdea0489", "message": "Fix(Test): Update tests to use Long for provider id", "committedDate": "2020-09-14T19:40:19Z", "type": "commit"}, {"oid": "538674728cc612a4270e22c7fc13495dccc7daf6", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/538674728cc612a4270e22c7fc13495dccc7daf6", "message": "Feat(Liquibase): Delete provider config name field from distribution jobs", "committedDate": "2020-09-15T16:02:57Z", "type": "commit"}, {"oid": "91715ea0580dd0cc6428130b71a825ef5698e976", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/91715ea0580dd0cc6428130b71a825ef5698e976", "message": "Fix(Provider): Remove cascading update for ditribution jobs in Black Duck global API action", "committedDate": "2020-09-16T17:45:55Z", "type": "commit"}, {"oid": "266f2384fb9851bd120b695e721eb7ff345d61f5", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/266f2384fb9851bd120b695e721eb7ff345d61f5", "message": "Merge branch 'master' into gk_fix_provider_config_reference", "committedDate": "2020-09-18T12:16:24Z", "type": "commit"}, {"oid": "62e4035d0df62c06e1b974175d9f8c66082b202c", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/62e4035d0df62c06e1b974175d9f8c66082b202c", "message": "Feat(Provider Fields): Migrate from provider config name to id in UI fields and custom endpoints", "committedDate": "2020-09-18T14:44:21Z", "type": "commit"}, {"oid": "5dadb2fbc980220b83898cd35c13b916f58be0df", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/5dadb2fbc980220b83898cd35c13b916f58be0df", "message": "Fix(Liquibase): Add provider config id field to provider_blackduck's descriptor fields", "committedDate": "2020-09-18T16:11:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA1NDg5MQ==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1174#discussion_r491054891", "bodyText": "Why did this get a field suffix and no others did?", "author": "bamandel", "createdAt": "2020-09-18T16:16:05Z", "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/descriptor/ProviderDescriptor.java", "diffHunk": "@@ -22,22 +22,23 @@\n  */\n package com.synopsys.integration.alert.common.descriptor;\n \n+import com.synopsys.integration.alert.common.descriptor.config.ui.ProviderDistributionUIConfig;\n import com.synopsys.integration.alert.common.descriptor.config.ui.ProviderGlobalUIConfig;\n-import com.synopsys.integration.alert.common.descriptor.config.ui.UIConfig;\n import com.synopsys.integration.alert.common.enumeration.DescriptorType;\n import com.synopsys.integration.alert.common.provider.ProviderKey;\n \n public abstract class ProviderDescriptor extends Descriptor {\n     public static final String KEY_COMMON_PROVIDER_PREFIX = \"provider.common.\";\n     public static final String KEY_PROVIDER_CONFIG_NAME = KEY_COMMON_PROVIDER_PREFIX + \"config.name\";\n+    public static final String KEY_PROVIDER_CONFIG_ID = KEY_COMMON_PROVIDER_PREFIX + \"config.id\";\n     public static final String KEY_PROVIDER_CONFIG_ENABLED = KEY_COMMON_PROVIDER_PREFIX + \"config.enabled\";\n     public static final String LABEL_PROVIDER_CONFIG_ENABLED = \"Enabled\";\n-    public static final String LABEL_PROVIDER_CONFIG_NAME = \"Provider Configuration\";\n+    public static final String LABEL_PROVIDER_CONFIG_FIELD = \"Provider Configuration\";", "originalCommit": "5dadb2fbc980220b83898cd35c13b916f58be0df", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b920eb7eba35a3e38da1aa5ea1f67292c0a72b32", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/b920eb7eba35a3e38da1aa5ea1f67292c0a72b32", "message": "Fix(Provider Fields): Update provider field variable names and update the provider config id field description", "committedDate": "2020-09-18T16:18:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA1NjM1Nw==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1174#discussion_r491056357", "bodyText": "Could the optional mapping be used here instead of this if check? We start with an optional and end with one. I feel there's a cleaner way to do this.", "author": "bamandel", "createdAt": "2020-09-18T16:19:04Z", "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/descriptor/config/ui/ProviderConfigSelectCustomFunctionAction.java", "diffHunk": "@@ -66,14 +66,21 @@ public ProviderConfigSelectCustomFunctionAction(AuthorizationManager authorizati\n         if (descriptorKey.isPresent()) {\n             List<ConfigurationModel> configurationModels = configurationAccessor.getConfigurationsByDescriptorKeyAndContext(descriptorKey.get(), ConfigContextEnum.GLOBAL);\n             options = configurationModels.stream()\n-                          .map(ConfigurationModel::getCopyOfKeyToFieldMap)\n-                          .map(FieldAccessor::new)\n-                          .map(accessor -> accessor.getString(ProviderDescriptor.KEY_PROVIDER_CONFIG_NAME))\n+                          .map(this::createNameToIdOption)\n                           .flatMap(Optional::stream)\n-                          .map(LabelValueSelectOption::new)\n                           .collect(Collectors.toList());\n         }\n         LabelValueSelectOptions optionList = new LabelValueSelectOptions(options);\n         return new ActionResponse<>(HttpStatus.OK, optionList);\n     }\n+\n+    private Optional<LabelValueSelectOption> createNameToIdOption(ConfigurationModel configurationModel) {\n+        Optional<String> providerConfigName = configurationModel.getField(ProviderDescriptor.KEY_PROVIDER_CONFIG_NAME).flatMap(ConfigurationFieldModel::getFieldValue);\n+        if (providerConfigName.isPresent()) {\n+            LabelValueSelectOption providerConfigOption = new LabelValueSelectOption(providerConfigName.get(), configurationModel.getConfigurationId().toString());\n+            return Optional.of(providerConfigOption);\n+        }\n+        return Optional.empty();", "originalCommit": "5dadb2fbc980220b83898cd35c13b916f58be0df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA2NjkyMg==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1174#discussion_r491066922", "bodyText": "Couldn't we use the .map() method on the providerConfigName variable to convert it to a LabelValueSelectOption and then you won't need the if's", "author": "jamesrichard91", "createdAt": "2020-09-18T16:38:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA1NjM1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA2OTg1OA==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1174#discussion_r491069858", "bodyText": "Just something to note, if we successfully remove AlertDatabaseConstraintException we'll be able to collapse this call into the previous Optional.", "author": "bamandel", "createdAt": "2020-09-18T16:44:25Z", "path": "src/main/java/com/synopsys/integration/alert/provider/blackduck/web/PolicyNotificationFilterCustomFunctionAction.java", "diffHunk": "@@ -138,16 +138,14 @@ private boolean isFilterablePolicy(Collection<String> notificationTypes) {\n \n     private Optional<BlackDuckProperties> createBlackDuckProperties(FieldModel fieldModel) throws IntegrationException {\n         FieldAccessor fieldAccessor = fieldModelConverter.convertToFieldAccessor(fieldModel);\n-        Optional<ConfigurationModel> configurationModel = configurationAccessor.getProviderConfigurationByName(fieldAccessor.getStringOrNull(ProviderDescriptor.KEY_PROVIDER_CONFIG_NAME));\n-        Optional<FieldAccessor> providerFieldAccessor = configurationModel\n-                                                            .map(ConfigurationModel::getCopyOfKeyToFieldMap)\n-                                                            .map(FieldAccessor::new);\n-\n-        if (configurationModel.isPresent() && providerFieldAccessor.isPresent()) {\n-            ConfigurationModel configModel = configurationModel.get();\n-            return Optional.of(blackDuckPropertiesFactory.createProperties(configModel.getConfigurationId(), providerFieldAccessor.get()));\n+        Long providerConfigId = fieldAccessor.getLong(ProviderDescriptor.KEY_PROVIDER_CONFIG_ID).orElse(null);\n+        if (null == providerConfigId) {\n+            return Optional.empty();\n         }\n-        return Optional.empty();\n+        return configurationAccessor.getConfigurationById(providerConfigId)", "originalCommit": "b920eb7eba35a3e38da1aa5ea1f67292c0a72b32", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ffc058b866d0b6f46a6225253cacd4af4df751ba", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/ffc058b866d0b6f46a6225253cacd4af4df751ba", "message": "Fix(Provider Custom Function): Collapse if-else into existing optional pipeline", "committedDate": "2020-09-18T16:56:52Z", "type": "commit"}]}