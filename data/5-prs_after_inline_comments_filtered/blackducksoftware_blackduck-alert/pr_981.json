{"pr_number": 981, "pr_title": "Fix Time Columns", "pr_createdAt": "2020-05-18T17:15:59Z", "pr_url": "https://github.com/blackducksoftware/blackduck-alert/pull/981", "timeline": [{"oid": "df1d26dc953e7ec6d4703c36b610b65497be3ff1", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/df1d26dc953e7ec6d4703c36b610b65497be3ff1", "message": "Use OffsetDateTime rather than Date", "committedDate": "2020-05-14T20:15:34Z", "type": "commit"}, {"oid": "6606a5a90127a4dc99909f0e5f23e6d1f2328bc6", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/6606a5a90127a4dc99909f0e5f23e6d1f2328bc6", "message": "Resolve date issues discovered in testing", "committedDate": "2020-05-15T14:35:20Z", "type": "commit"}, {"oid": "cc010fca7bd6c5d478c81426520963e959dedcf0", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/cc010fca7bd6c5d478c81426520963e959dedcf0", "message": "Fix mock entity date-time", "committedDate": "2020-05-15T15:12:53Z", "type": "commit"}, {"oid": "0381525834d38ea33248ee7354c47fce01036b0c", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/0381525834d38ea33248ee7354c47fce01036b0c", "message": "Fix remaining date-time tests", "committedDate": "2020-05-15T17:07:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc4MzE0Nw==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/981#discussion_r426783147", "bodyText": "Shouldn't this be\n return OffsetDateTime.now(ZoneOffset.UTC);", "author": "jamesrichard91", "createdAt": "2020-05-18T17:24:54Z", "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/util/DateUtils.java", "diffHunk": "@@ -24,38 +24,46 @@\n \n import java.text.ParseException;\n import java.text.SimpleDateFormat;\n+import java.time.OffsetDateTime;\n import java.time.ZoneOffset;\n-import java.time.ZonedDateTime;\n+import java.time.format.DateTimeFormatter;\n+import java.time.format.DateTimeParseException;\n import java.util.Date;\n-import java.util.TimeZone;\n \n public final class DateUtils {\n     public static final String DOCKER_DATE_FORMAT = \"yyyy-MM-dd'T'HH:mm:ss.SSSSSS'Z'\";\n     public static final String AUDIT_DATE_FORMAT = \"yyyy-MM-dd HH:mm:ss.SSS\";\n     public static final String UTC_DATE_FORMAT_TO_MINUTE = \"yyyy-MM-dd HH:mm '(UTC)'\";\n \n-    public static Date createCurrentDateTimestamp() {\n-        final ZonedDateTime zonedDateTime = ZonedDateTime.now().withZoneSameInstant(ZoneOffset.UTC);\n-        return Date.from(zonedDateTime.toInstant());\n+    public static OffsetDateTime createCurrentDateTimestamp() {\n+        return OffsetDateTime.now();", "originalCommit": "0381525834d38ea33248ee7354c47fce01036b0c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc4NDY4OA==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/981#discussion_r426784688", "bodyText": "OffsetDateTime stores the UTC time.", "author": "gkillough", "createdAt": "2020-05-18T17:27:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc4MzE0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc4MzQ4Mw==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/981#discussion_r426783483", "bodyText": "Shouldn't this still call createCurrentDateTimestamp?", "author": "jamesrichard91", "createdAt": "2020-05-18T17:25:27Z", "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/util/DateUtils.java", "diffHunk": "@@ -24,38 +24,46 @@\n \n import java.text.ParseException;\n import java.text.SimpleDateFormat;\n+import java.time.OffsetDateTime;\n import java.time.ZoneOffset;\n-import java.time.ZonedDateTime;\n+import java.time.format.DateTimeFormatter;\n+import java.time.format.DateTimeParseException;\n import java.util.Date;\n-import java.util.TimeZone;\n \n public final class DateUtils {\n     public static final String DOCKER_DATE_FORMAT = \"yyyy-MM-dd'T'HH:mm:ss.SSSSSS'Z'\";\n     public static final String AUDIT_DATE_FORMAT = \"yyyy-MM-dd HH:mm:ss.SSS\";\n     public static final String UTC_DATE_FORMAT_TO_MINUTE = \"yyyy-MM-dd HH:mm '(UTC)'\";\n \n-    public static Date createCurrentDateTimestamp() {\n-        final ZonedDateTime zonedDateTime = ZonedDateTime.now().withZoneSameInstant(ZoneOffset.UTC);\n-        return Date.from(zonedDateTime.toInstant());\n+    public static OffsetDateTime createCurrentDateTimestamp() {\n+        return OffsetDateTime.now();\n     }\n \n     public static String createCurrentDateString(String format) {\n-        Date currentDate = createCurrentDateTimestamp();\n+        OffsetDateTime currentDate = OffsetDateTime.now();", "originalCommit": "0381525834d38ea33248ee7354c47fce01036b0c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc4NDg4Mw==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/981#discussion_r426784883", "bodyText": "I probably should have deprecated that method. I will do that now.", "author": "gkillough", "createdAt": "2020-05-18T17:27:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc4MzQ4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc4ODQ3Mw==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/981#discussion_r426788473", "bodyText": "After a quick offline discussion, it makes more sense to keep this method and replace the OffsetDateTime.now() to minimize type migration headaches in the future.", "author": "gkillough", "createdAt": "2020-05-18T17:34:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc4MzQ4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc4Mzk4MA==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/981#discussion_r426783980", "bodyText": "Are we sure this is alright without setting the timezone?", "author": "jamesrichard91", "createdAt": "2020-05-18T17:26:22Z", "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/util/DateUtils.java", "diffHunk": "@@ -24,38 +24,46 @@\n \n import java.text.ParseException;\n import java.text.SimpleDateFormat;\n+import java.time.OffsetDateTime;\n import java.time.ZoneOffset;\n-import java.time.ZonedDateTime;\n+import java.time.format.DateTimeFormatter;\n+import java.time.format.DateTimeParseException;\n import java.util.Date;\n-import java.util.TimeZone;\n \n public final class DateUtils {\n     public static final String DOCKER_DATE_FORMAT = \"yyyy-MM-dd'T'HH:mm:ss.SSSSSS'Z'\";\n     public static final String AUDIT_DATE_FORMAT = \"yyyy-MM-dd HH:mm:ss.SSS\";\n     public static final String UTC_DATE_FORMAT_TO_MINUTE = \"yyyy-MM-dd HH:mm '(UTC)'\";\n \n-    public static Date createCurrentDateTimestamp() {\n-        final ZonedDateTime zonedDateTime = ZonedDateTime.now().withZoneSameInstant(ZoneOffset.UTC);\n-        return Date.from(zonedDateTime.toInstant());\n+    public static OffsetDateTime createCurrentDateTimestamp() {\n+        return OffsetDateTime.now();\n     }\n \n     public static String createCurrentDateString(String format) {\n-        Date currentDate = createCurrentDateTimestamp();\n+        OffsetDateTime currentDate = OffsetDateTime.now();\n         return formatDate(currentDate, format);\n     }\n \n-    public static String formatDate(Date date, String format) {\n-        SimpleDateFormat simpleDateFormat = new SimpleDateFormat(format);\n-        simpleDateFormat.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n-        return simpleDateFormat.format(date);\n+    public static String formatDate(OffsetDateTime date, String format) {\n+        DateTimeFormatter dtf = DateTimeFormatter.ofPattern(format);", "originalCommit": "0381525834d38ea33248ee7354c47fce01036b0c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjg1NjY4MQ==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/981#discussion_r426856681", "bodyText": "We are treating all dates as if they were UTC now, so this should be fine.", "author": "gkillough", "createdAt": "2020-05-18T19:48:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc4Mzk4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc4NDc2MA==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/981#discussion_r426784760", "bodyText": "I think we should be using DateUtils.createCurrentDateTimestamp() across Alert when we are getting the current time.", "author": "jamesrichard91", "createdAt": "2020-05-18T17:27:47Z", "path": "alert-database/src/main/java/com/synopsys/integration/alert/database/api/DefaultAuditUtility.java", "diffHunk": "@@ -134,7 +134,7 @@ public DefaultAuditUtility(AuditEntryRepository auditEntryRepository, AuditNotif\n                                                   .concat(componentNotificationIds.stream(), topLevelActionNotificationIds.stream())\n                                                   .collect(Collectors.toSet());\n         for (Long notificationId : allMessageNotificationIds) {\n-            AuditEntryEntity auditEntryEntity = new AuditEntryEntity(jobId, new Date(System.currentTimeMillis()), null, null, null, null);\n+            AuditEntryEntity auditEntryEntity = new AuditEntryEntity(jobId, OffsetDateTime.now(), null, null, null, null);", "originalCommit": "0381525834d38ea33248ee7354c47fce01036b0c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc4NTA2OQ==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/981#discussion_r426785069", "bodyText": "I think we should be using DateUtils.createCurrentDateTimestamp()", "author": "jamesrichard91", "createdAt": "2020-05-18T17:28:19Z", "path": "alert-database/src/main/java/com/synopsys/integration/alert/database/api/DefaultAuditUtility.java", "diffHunk": "@@ -166,7 +166,7 @@ public void setAuditEntrySuccess(Collection<Long> auditEntryIds) {\n                 auditEntryEntity.setStatus(AuditEntryStatus.SUCCESS.toString());\n                 auditEntryEntity.setErrorMessage(null);\n                 auditEntryEntity.setErrorStackTrace(null);\n-                auditEntryEntity.setTimeLastSent(new Date(System.currentTimeMillis()));\n+                auditEntryEntity.setTimeLastSent(OffsetDateTime.now());", "originalCommit": "0381525834d38ea33248ee7354c47fce01036b0c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc4NTEyMw==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/981#discussion_r426785123", "bodyText": "I think we should be using DateUtils.createCurrentDateTimestamp()", "author": "jamesrichard91", "createdAt": "2020-05-18T17:28:24Z", "path": "alert-database/src/main/java/com/synopsys/integration/alert/database/api/DefaultAuditUtility.java", "diffHunk": "@@ -197,7 +197,7 @@ public void setAuditEntryFailure(Collection<Long> auditEntryIds, String errorMes\n                     }\n                 }\n                 auditEntryEntity.setErrorStackTrace(exceptionStackTrace);\n-                auditEntryEntity.setTimeLastSent(new Date(System.currentTimeMillis()));\n+                auditEntryEntity.setTimeLastSent(OffsetDateTime.now());", "originalCommit": "0381525834d38ea33248ee7354c47fce01036b0c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc4NTYyMQ==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/981#discussion_r426785621", "bodyText": "Shouldn't we get the offset date time for UTC?", "author": "jamesrichard91", "createdAt": "2020-05-18T17:29:25Z", "path": "alert-database/src/main/java/com/synopsys/integration/alert/database/api/DefaultNotificationManager.java", "diffHunk": "@@ -136,26 +134,24 @@ public DefaultNotificationManager(NotificationContentRepository notificationCont\n \n     @Override\n     @Transactional(readOnly = true, isolation = Isolation.READ_COMMITTED)\n-    public List<AlertNotificationModel> findByCreatedAtBetween(Date startDate, Date endDate) {\n+    public List<AlertNotificationModel> findByCreatedAtBetween(OffsetDateTime startDate, OffsetDateTime endDate) {\n         List<NotificationEntity> byCreatedAtBetween = notificationContentRepository.findByCreatedAtBetween(startDate, endDate);\n         return toModels(byCreatedAtBetween);\n     }\n \n     @Override\n     @Transactional(readOnly = true, isolation = Isolation.READ_COMMITTED)\n-    public List<AlertNotificationModel> findByCreatedAtBefore(Date date) {\n+    public List<AlertNotificationModel> findByCreatedAtBefore(OffsetDateTime date) {\n         List<NotificationEntity> byCreatedAtBefore = notificationContentRepository.findByCreatedAtBefore(date);\n         return toModels(byCreatedAtBefore);\n     }\n \n     @Override\n     public List<AlertNotificationModel> findByCreatedAtBeforeDayOffset(int dayOffset) {\n-        ZonedDateTime zonedDate = ZonedDateTime.now();\n-        zonedDate = zonedDate.minusDays(dayOffset);\n-        zonedDate = zonedDate.withZoneSameInstant(ZoneOffset.UTC);\n-        zonedDate = zonedDate.withHour(0).withMinute(0).withSecond(0).withNano(0);\n-        Date date = Date.from(zonedDate.toInstant());\n-        return findByCreatedAtBefore(date);\n+        OffsetDateTime searchTime = OffsetDateTime.now()", "originalCommit": "0381525834d38ea33248ee7354c47fce01036b0c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgzODAzOQ==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/981#discussion_r426838039", "bodyText": "as mentioned earlier OffsetDateTime.now() get's the time for UTC.", "author": "psantos1113", "createdAt": "2020-05-18T19:10:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc4NTYyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc5MzY1Mw==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/981#discussion_r426793653", "bodyText": "There are a few places we create a Date and substract an offset. Shouldn't we have a method in DateUtils to do this?", "author": "jamesrichard91", "createdAt": "2020-05-18T17:44:42Z", "path": "src/main/java/com/synopsys/integration/alert/workflow/scheduled/PurgeTask.java", "diffHunk": "@@ -130,20 +128,19 @@ private void purgeNotifications() {\n \n     private void purgeSystemMessages() {\n         try {\n-            Date date = createDate();\n+            OffsetDateTime date = createDate();\n             List<SystemMessageModel> messages = systemMessageUtility.getSystemMessagesBefore(date);\n             systemMessageUtility.deleteSystemMessages(messages);\n         } catch (Exception ex) {\n             logger.error(\"Error purging system messages\", ex);\n         }\n     }\n \n-    public Date createDate() {\n-        ZonedDateTime zonedDate = ZonedDateTime.now();\n-        zonedDate = zonedDate.minusDays(dayOffset);\n-        zonedDate = zonedDate.withZoneSameInstant(ZoneOffset.UTC);\n-        zonedDate = zonedDate.withHour(0).withMinute(0).withSecond(0).withNano(0);\n-        return Date.from(zonedDate.toInstant());\n+    // TODO give this method a more descriptive name\n+    public OffsetDateTime createDate() {\n+        return OffsetDateTime.now()", "originalCommit": "0381525834d38ea33248ee7354c47fce01036b0c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjg0OTA4Mw==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/981#discussion_r426849083", "bodyText": "I see this used in NotificationManager.findByCreatedAtBeforeDayOffset and PurgeTask but the NotificationMananger interface I don't find any usage of the method outside of tests.  It may have been used in processing in the past but may not be used anymore.  We might want to TODO or FIXME to remove the method in NotificationManager", "author": "psantos1113", "createdAt": "2020-05-18T19:32:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc5MzY1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc5ODUyMw==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/981#discussion_r426798523", "bodyText": "Does this work? I don't see any methods that accept a date object in OffsetDateTime, would this need to be rewritten to something like OffsetDateTime.now()?", "author": "ChomickiM", "createdAt": "2020-05-18T17:53:33Z", "path": "alert-database/src/test/java/com/synopsys/integration/alert/database/api/DefaultNotificationManagerTest.java", "diffHunk": "@@ -47,8 +48,8 @@\n \n     @Test\n     public void saveAllNotificationsTest() throws Exception {\n-        Date createdAt = new Date();\n-        Date providerCreationTime = new Date(System.currentTimeMillis() - 10000);\n+        OffsetDateTime createdAt = new Date();\n+        OffsetDateTime providerCreationTime = new Date(System.currentTimeMillis() - 10000);", "originalCommit": "0381525834d38ea33248ee7354c47fce01036b0c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgwOTI4MA==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/981#discussion_r426809280", "bodyText": "Good catch.", "author": "gkillough", "createdAt": "2020-05-18T18:14:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc5ODUyMw=="}], "type": "inlineReview"}, {"oid": "8d347399443bcd975c5e38276a55e124fb1082e7", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/8d347399443bcd975c5e38276a55e124fb1082e7", "message": "Update references of OffsetDateTime.now() to use DateUtils and fix test issues", "committedDate": "2020-05-18T19:38:10Z", "type": "commit"}, {"oid": "7d15314bc607e03815cb8592e5ad0113b89618f0", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/7d15314bc607e03815cb8592e5ad0113b89618f0", "message": "Update references of OffsetDateTime.now() to use DateUtils in alert-database", "committedDate": "2020-05-18T19:51:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjg1NTg3Mg==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/981#discussion_r426855872", "bodyText": "In a separate conversation you mentioned that DateUtils.AUDIT_DATE_FORMAT was used in a test only, but this class was using the format. The method that uses the parseDateString is converting to paged models.  I believe it is being used. Is this correct to replace this format with the less precise minute format?", "author": "psantos1113", "createdAt": "2020-05-18T19:46:40Z", "path": "alert-database/src/main/java/com/synopsys/integration/alert/database/api/DefaultAuditUtility.java", "diffHunk": "@@ -346,10 +345,10 @@ private NotificationConfig populateConfigFromEntity(AlertNotificationModel notif\n         return new NotificationConfig(id, createdAt, notificationEntity.getProvider(), providerConfigId, providerConfigName, providerCreationTime, notificationEntity.getNotificationType(), notificationEntity.getContent());\n     }\n \n-    private Date parseDateString(String dateString) {\n-        Date date = null;\n+    private OffsetDateTime parseDateString(String dateString) {\n+        OffsetDateTime date = null;\n         try {\n-            date = DateUtils.parseDate(dateString, DateUtils.AUDIT_DATE_FORMAT);\n+            date = DateUtils.parseDate(dateString, DateUtils.UTC_DATE_FORMAT_TO_MINUTE);", "originalCommit": "8d347399443bcd975c5e38276a55e124fb1082e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjg2MjUyMg==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/981#discussion_r426862522", "bodyText": "Yeah, I must have missed this reference in the refactor. I think you are correct and we should keep it.", "author": "gkillough", "createdAt": "2020-05-18T20:00:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjg1NTg3Mg=="}], "type": "inlineReview"}, {"oid": "9506eaf0c233a95e357f6960f40603e7a4878f6b", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/9506eaf0c233a95e357f6960f40603e7a4878f6b", "message": "Re-add AUDIT_DATE_FORMAT", "committedDate": "2020-05-18T20:03:32Z", "type": "commit"}, {"oid": "b4821d193aace8188a54da45dcd2b56c73b22366", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/b4821d193aace8188a54da45dcd2b56c73b22366", "message": "Fix time typo in test", "committedDate": "2020-05-18T20:19:48Z", "type": "commit"}, {"oid": "f5da43784c866b8ef2fc8c2eef0c1c8c6f615b99", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/f5da43784c866b8ef2fc8c2eef0c1c8c6f615b99", "message": "Fix test imports", "committedDate": "2020-05-19T12:19:53Z", "type": "commit"}, {"oid": "e425b3e4db02f7357496372725b9717c8673deac", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/e425b3e4db02f7357496372725b9717c8673deac", "message": "Update audit date format", "committedDate": "2020-05-19T14:24:21Z", "type": "commit"}, {"oid": "20bbabc3eb19a6a719c69f6a27ba61ff88886035", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/20bbabc3eb19a6a719c69f6a27ba61ff88886035", "message": "Merge branch '6.0.0' into gk_fix_time_columns", "committedDate": "2020-05-19T14:59:21Z", "type": "commit"}]}