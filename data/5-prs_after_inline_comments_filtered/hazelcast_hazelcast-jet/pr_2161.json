{"pr_number": 2161, "pr_title": "Add checkNonNullAndSerializable util method", "pr_createdAt": "2020-04-09T13:24:10Z", "pr_url": "https://github.com/hazelcast/hazelcast-jet/pull/2161", "timeline": [{"oid": "52b32b2a1350521e534923c00a457f3e5b85715c", "url": "https://github.com/hazelcast/hazelcast-jet/commit/52b32b2a1350521e534923c00a457f3e5b85715c", "message": "Add checkNonNullAndSerializable util method\n\nThis combines Objects.requireNonNull with our Util.checkSerializable\ninto single method call. Useful in source/sink builders for checking\nparameters.", "committedDate": "2020-04-09T13:22:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwNTQ3NA==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2161#discussion_r406205474", "bodyText": "Double space", "author": "viliam-durina", "createdAt": "2020-04-09T13:31:22Z", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/util/Util.java", "diffHunk": "@@ -182,6 +182,32 @@ public static void checkSerializable(Object object, String objectName) {\n         }\n     }\n \n+    /**\n+     * Checks that the {@code object} is not null and  implements", "originalCommit": "52b32b2a1350521e534923c00a457f3e5b85715c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwNTYxMQ==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2161#discussion_r406205611", "bodyText": "We can add @Nonnull annotation for the method and @Nullable for object parameter.", "author": "viliam-durina", "createdAt": "2020-04-09T13:31:33Z", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/util/Util.java", "diffHunk": "@@ -182,6 +182,32 @@ public static void checkSerializable(Object object, String objectName) {\n         }\n     }\n \n+    /**\n+     * Checks that the {@code object} is not null and  implements\n+     * {@link Serializable} and is correctly serializable by actually\n+     * trying to serialize it. This will reveal some non-serializable\n+     * field early.\n+     * <p>\n+     * Usage:\n+     * <pre>{@code\n+     * void setValue(@Nonnull Object value) {\n+     *     this.value = checkNonNullAndSerializable(value, \"value\");\n+     * }\n+     * }</pre>\n+     *\n+     * @param object     object to check\n+     * @param objectName object description for the exception\n+     * @return given object\n+     * @throws IllegalArgumentException if {@code object} is not serializable\n+     */\n+    public static <T> T checkNonNullAndSerializable(T object, String objectName) {", "originalCommit": "52b32b2a1350521e534923c00a457f3e5b85715c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwNjgzMw==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2161#discussion_r406206833", "bodyText": "requireNonNullAndSerializable would better match the standard Objects.requireNonNull. We can also use it inside the method...", "author": "viliam-durina", "createdAt": "2020-04-09T13:33:14Z", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/util/Util.java", "diffHunk": "@@ -182,6 +182,32 @@ public static void checkSerializable(Object object, String objectName) {\n         }\n     }\n \n+    /**\n+     * Checks that the {@code object} is not null and  implements\n+     * {@link Serializable} and is correctly serializable by actually\n+     * trying to serialize it. This will reveal some non-serializable\n+     * field early.\n+     * <p>\n+     * Usage:\n+     * <pre>{@code\n+     * void setValue(@Nonnull Object value) {\n+     *     this.value = checkNonNullAndSerializable(value, \"value\");\n+     * }\n+     * }</pre>\n+     *\n+     * @param object     object to check\n+     * @param objectName object description for the exception\n+     * @return given object\n+     * @throws IllegalArgumentException if {@code object} is not serializable\n+     */\n+    public static <T> T checkNonNullAndSerializable(T object, String objectName) {", "originalCommit": "52b32b2a1350521e534923c00a457f3e5b85715c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d58156d9aaed86c647184fb6a94f26d63802bbb5", "url": "https://github.com/hazelcast/hazelcast-jet/commit/d58156d9aaed86c647184fb6a94f26d63802bbb5", "message": "Add annotations, make checkSerializable return given object", "committedDate": "2020-04-09T13:48:52Z", "type": "commit"}, {"oid": "ac3010591dd4f3e0798334e40f354524b2ece847", "url": "https://github.com/hazelcast/hazelcast-jet/commit/ac3010591dd4f3e0798334e40f354524b2ece847", "message": "Fix double space", "committedDate": "2020-04-09T13:50:38Z", "type": "commit"}, {"oid": "55b6a7803dbca59e1d15306dc564aa54ad1f2cb5", "url": "https://github.com/hazelcast/hazelcast-jet/commit/55b6a7803dbca59e1d15306dc564aa54ad1f2cb5", "message": "Remove annotations, not clear what to use on object", "committedDate": "2020-04-09T14:16:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA5ODMyMw==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2161#discussion_r408098323", "bodyText": "can we add Nullable / Nonnull annotations to these methods?", "author": "cangencer", "createdAt": "2020-04-14T12:32:31Z", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/util/Util.java", "diffHunk": "@@ -180,6 +181,33 @@ public static void checkSerializable(Object object, String objectName) {\n             // never really thrown, as the underlying stream never throws it\n             throw new JetException(e);\n         }\n+        return object;\n+    }\n+\n+    /**\n+     * Checks that the {@code object} is not null and implements\n+     * {@link Serializable} and is correctly serializable by actually\n+     * trying to serialize it. This will reveal some non-serializable\n+     * field early.\n+     * <p>\n+     * Usage:\n+     * <pre>{@code\n+     * void setValue(@Nonnull Object value) {\n+     *     this.value = checkNonNullAndSerializable(value, \"value\");\n+     * }\n+     * }</pre>\n+     *\n+     * @param object     object to check\n+     * @param objectName object description for the exception\n+     * @return given object\n+     * @throws IllegalArgumentException if {@code object} is not serializable\n+     */\n+    public static <T> T checkNonNullAndSerializable(T object, String objectName) {", "originalCommit": "55b6a7803dbca59e1d15306dc564aa54ad1f2cb5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0289e800bf041bbb0780f327e37448ed06d35c9e", "url": "https://github.com/hazelcast/hazelcast-jet/commit/0289e800bf041bbb0780f327e37448ed06d35c9e", "message": "Add @Nullable/@Nonnull annotations back", "committedDate": "2020-04-15T08:41:04Z", "type": "commit"}]}