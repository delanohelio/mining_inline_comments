{"pr_number": 2682, "pr_title": "Improve Kafka serde properties inference", "pr_createdAt": "2020-11-19T08:00:28Z", "pr_url": "https://github.com/hazelcast/hazelcast-jet/pull/2682", "timeline": [{"oid": "33a105d239fb4ac84705f8e2d0941bf92aa309ec", "url": "https://github.com/hazelcast/hazelcast-jet/commit/33a105d239fb4ac84705f8e2d0941bf92aa309ec", "message": "Improve Kafka serde properties inference", "committedDate": "2020-11-19T07:57:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjY2NjUxMg==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2682#discussion_r526666512", "bodyText": "Do we care? It will fail sooner or later due to some NoClassDefFoundError. Especially the NullSerializer - it's not in kafka and we might rename/move it, the kafka serializers are unlikely to change FQN.", "author": "viliam-durina", "createdAt": "2020-11-19T08:13:19Z", "path": "hazelcast-jet-sql/src/main/java/com/hazelcast/jet/sql/impl/connector/kafka/PropertiesResolver.java", "diffHunk": "@@ -49,11 +34,34 @@\n     static final String VALUE_SERIALIZER = \"value.serializer\";\n     static final String VALUE_DESERIALIZER = \"value.deserializer\";\n \n-    static final String AVRO_SERIALIZER = \"io.confluent.kafka.serializers.KafkaAvroSerializer\";\n-    static final String AVRO_DESERIALIZER = \"io.confluent.kafka.serializers.KafkaAvroDeserializer\";\n+    // using strings instead of canonical names to not fail without Kafka on the classpath", "originalCommit": "33a105d239fb4ac84705f8e2d0941bf92aa309ec", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjY2NzE5Mg==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2682#discussion_r526667192", "bodyText": "NullSerializer might be OK, we'll never try to write to the key. But NullDeserializer isn't, the key might be there, we just don't map it. I used ByteArrayDeserializer and ByteArraySerializer, these work with any data.", "author": "viliam-durina", "createdAt": "2020-11-19T08:14:31Z", "path": "hazelcast-jet-sql/src/main/java/com/hazelcast/jet/sql/impl/connector/kafka/PropertiesResolver.java", "diffHunk": "@@ -62,49 +70,51 @@ static Properties resolveProperties(Map<String, String> options) {\n         Properties properties = new Properties();\n         properties.putAll(options);\n \n-        properties(options, true).forEach(properties::putIfAbsent);\n-        properties(options, false).forEach(properties::putIfAbsent);\n+        withSerdeProperties(true, options, properties);\n+        withSerdeProperties(false, options, properties);\n \n         return properties;\n     }\n \n-    private static Map<String, String> properties(Map<String, String> options, boolean isKey) {\n-        Map<String, String> properties = new HashMap<>();\n-\n+    private static void withSerdeProperties(\n+            boolean isKey,\n+            Map<String, String> options,\n+            Properties properties\n+    ) {\n         String serializer = isKey ? KEY_SERIALIZER : VALUE_SERIALIZER;\n         String deserializer = isKey ? KEY_DESERIALIZER : VALUE_DESERIALIZER;\n \n         String format = options.get(isKey ? OPTION_KEY_FORMAT : OPTION_VALUE_FORMAT);\n-        if (JAVA_FORMAT.equals(format)) {\n+        if (format == null && isKey) {\n+            properties.putIfAbsent(serializer, NULL_SERIALIZER);\n+            properties.putIfAbsent(deserializer, NULL_DESERIALIZER);", "originalCommit": "33a105d239fb4ac84705f8e2d0941bf92aa309ec", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d03cde7cc831f9e2ff77cad711ff6adbe7ef2b03", "url": "https://github.com/hazelcast/hazelcast-jet/commit/d03cde7cc831f9e2ff77cad711ff6adbe7ef2b03", "message": "Using byte array (de) serializers as null serializers", "committedDate": "2020-11-19T08:23:11Z", "type": "commit"}]}