{"pr_number": 2298, "pr_title": "Use hz-serialization for processor suppliers", "pr_createdAt": "2020-06-03T15:23:23Z", "pr_url": "https://github.com/hazelcast/hazelcast-jet/pull/2298", "timeline": [{"oid": "44ca395dae6cfeb8a2d9e0d692a6488651bd5272", "url": "https://github.com/hazelcast/hazelcast-jet/commit/44ca395dae6cfeb8a2d9e0d692a6488651bd5272", "message": "Use hz-serialization for processor suppliers", "committedDate": "2020-06-03T15:22:32Z", "type": "commit"}, {"oid": "30875fc4ad4342d8640bd5d06ff9874ca34b53ed", "url": "https://github.com/hazelcast/hazelcast-jet/commit/30875fc4ad4342d8640bd5d06ff9874ca34b53ed", "message": "Fix deserialization using a correct class loader", "committedDate": "2020-06-04T07:29:53Z", "type": "commit"}, {"oid": "ce9372e5bb58c1f85febb5792062a5dd21ead779", "url": "https://github.com/hazelcast/hazelcast-jet/commit/ce9372e5bb58c1f85febb5792062a5dd21ead779", "message": "Match the read & write code better", "committedDate": "2020-06-04T07:37:51Z", "type": "commit"}, {"oid": "7078a7da9d3b1d7f6bf9701fca421097f460aa80", "url": "https://github.com/hazelcast/hazelcast-jet/commit/7078a7da9d3b1d7f6bf9701fca421097f460aa80", "message": "Fix test failure", "committedDate": "2020-06-04T07:44:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTczMDYxNA==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2298#discussion_r435730614", "bodyText": "is the qualifier needed?", "author": "cangencer", "createdAt": "2020-06-05T07:12:09Z", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/init/CustomClassLoadedObject.java", "diffHunk": "@@ -94,23 +95,36 @@ public boolean isOverwritable() {\n         // explicit cast to OutputStream and intentionally omitting to close ObjectOutputStream\n         @SuppressFBWarnings({\"BC_UNCONFIRMED_CAST\", \"OS_OPEN_STREAM\"})\n         public void write(ObjectDataOutput out, CustomClassLoadedObject object) throws IOException {\n-            final ObjectOutputStream objectOutputStream = new ObjectOutputStream((OutputStream) out);\n-            objectOutputStream.writeObject(object.object);\n-            // Force flush if not yet written due to internal behavior if pos < 1024\n-            objectOutputStream.flush();\n+            boolean isJavaSerialized = !(object.object instanceof DataSerializable);\n+            out.writeBoolean(isJavaSerialized);\n+            if (isJavaSerialized) {\n+                final ObjectOutputStream objectOutputStream = new ObjectOutputStream((OutputStream) out);\n+                objectOutputStream.writeObject(object.object);\n+                // Force flush if not yet written due to internal behavior if pos < 1024\n+                objectOutputStream.flush();\n+            } else {\n+                out.writeObject(object.object);\n+            }\n         }\n \n         @Override\n         // explicit cast to InputStream and intentionally omitting to close ObjectInputStream\n-        @SuppressFBWarnings({ \"BC_UNCONFIRMED_CAST\", \"OS_OPEN_STREAM\"})\n-        public CustomClassLoadedObject read(ObjectDataInput in) throws IOException {\n+        @SuppressFBWarnings({\"BC_UNCONFIRMED_CAST\", \"OS_OPEN_STREAM\"})\n+        public CustomClassLoadedObject read(com.hazelcast.nio.ObjectDataInput in) throws IOException {", "originalCommit": "7078a7da9d3b1d7f6bf9701fca421097f460aa80", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}