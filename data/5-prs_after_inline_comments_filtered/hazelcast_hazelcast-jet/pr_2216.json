{"pr_number": 2216, "pr_title": "Add test for mapUsingService stage with gRPC", "pr_createdAt": "2020-04-24T06:43:14Z", "pr_url": "https://github.com/hazelcast/hazelcast-jet/pull/2216", "timeline": [{"oid": "8264e22c625eb3eb6f68507f658c2f0dd2d79ba1", "url": "https://github.com/hazelcast/hazelcast-jet/commit/8264e22c625eb3eb6f68507f658c2f0dd2d79ba1", "message": "Add test for mapUsingService stage with gRPC", "committedDate": "2020-04-24T06:41:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDM0OTQ2NA==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2216#discussion_r414349464", "bodyText": "Do we need the catch blocks here?", "author": "frant-hartm", "createdAt": "2020-04-24T07:15:22Z", "path": "extensions/grpc/src/test/java/com/hazelcast/jet/grpc/GrpcServiceTest.java", "diffHunk": "@@ -118,6 +118,34 @@ public void when_bidirectionalStreaming_distributed() throws IOException {\n         instance().newJob(p).join();\n     }\n \n+    @Test\n+    public void whenNotAsync_bidirectionalStreaming_distributed() throws IOException {\n+        // Given\n+        server = createServer(new GreeterServiceImpl());\n+        final int port = server.getPort();\n+\n+        List<String> items = IntStream.range(0, ITEM_COUNT).mapToObj(Integer::toString).collect(toList());\n+\n+        Pipeline p = Pipeline.create();\n+        BatchStageWithKey<String, String> stage = p.readFrom(TestSources.items(items))\n+                .groupingKey(i -> i);\n+        // When\n+        BatchStage<String> mapped = stage.mapUsingService(bidirectionalStreaming(port), (service, key, item) -> {\n+            HelloRequest req = HelloRequest.newBuilder().setName(item).build();\n+            try {\n+                return service.call(req).get().getMessage();\n+            } catch (Exception ex) {", "originalCommit": "8264e22c625eb3eb6f68507f658c2f0dd2d79ba1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f1eb37b82a74a360375a563ba091a93d192d9a60", "url": "https://github.com/hazelcast/hazelcast-jet/commit/f1eb37b82a74a360375a563ba091a93d192d9a60", "message": "Address review comments", "committedDate": "2020-04-24T07:27:15Z", "type": "commit"}]}