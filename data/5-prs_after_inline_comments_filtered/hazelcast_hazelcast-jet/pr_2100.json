{"pr_number": 2100, "pr_title": "[006] Add Google Protocol Buffers serialization support", "pr_createdAt": "2020-03-26T14:14:22Z", "pr_url": "https://github.com/hazelcast/hazelcast-jet/pull/2100", "timeline": [{"oid": "f0e3ff110d18bc3a14b1979d13f2b8174b483e48", "url": "https://github.com/hazelcast/hazelcast-jet/commit/f0e3ff110d18bc3a14b1979d13f2b8174b483e48", "message": "Add protobuf serialization support", "committedDate": "2020-03-26T14:13:10Z", "type": "commit"}, {"oid": "a2c01a45820ac18f0ef253c127547a0540e49d9c", "url": "https://github.com/hazelcast/hazelcast-jet/commit/a2c01a45820ac18f0ef253c127547a0540e49d9c", "message": "Fix checkstyle", "committedDate": "2020-03-26T14:39:00Z", "type": "commit"}, {"oid": "03aa90b8e80ee84e7da4da56d07d86d1bd7069cf", "url": "https://github.com/hazelcast/hazelcast-jet/commit/03aa90b8e80ee84e7da4da56d07d86d1bd7069cf", "message": "Fix tests", "committedDate": "2020-03-26T15:24:36Z", "type": "commit"}, {"oid": "94973bf35b94cd92a5ce391e161463ae15fa9c52", "url": "https://github.com/hazelcast/hazelcast-jet/commit/94973bf35b94cd92a5ce391e161463ae15fa9c52", "message": "Add protobuf serialization support", "committedDate": "2020-03-27T10:05:58Z", "type": "commit"}, {"oid": "39a9308d6f3e949065cfd67707f56856a321807d", "url": "https://github.com/hazelcast/hazelcast-jet/commit/39a9308d6f3e949065cfd67707f56856a321807d", "message": "Improve javadocs", "committedDate": "2020-03-27T10:48:47Z", "type": "commit"}, {"oid": "5c33a34d3a9dbd52c5f2872678aee3a32b5db836", "url": "https://github.com/hazelcast/hazelcast-jet/commit/5c33a34d3a9dbd52c5f2872678aee3a32b5db836", "message": "Fix checkstyle", "committedDate": "2020-03-27T10:50:14Z", "type": "commit"}, {"oid": "4bb7f7701fa73e59c0e8ea240e8571d0e6ba1a41", "url": "https://github.com/hazelcast/hazelcast-jet/commit/4bb7f7701fa73e59c0e8ea240e8571d0e6ba1a41", "message": "Merge branch 'master' into protobuf_support", "committedDate": "2020-03-27T10:51:59Z", "type": "commit"}, {"oid": "784a0b5db43f0f5be2d30caf8e652bf4ff88c67b", "url": "https://github.com/hazelcast/hazelcast-jet/commit/784a0b5db43f0f5be2d30caf8e652bf4ff88c67b", "message": "Add protobuf serialization support", "committedDate": "2020-03-27T11:58:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE2MDkyMw==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2100#discussion_r400160923", "bodyText": "could we explain why? i.e. it needs to be a certain type etc.", "author": "cangencer", "createdAt": "2020-03-30T12:44:03Z", "path": "extensions/protobuf/src/main/java/com/hazelcast/jet/protobuf/ProtoStreamSerializer.java", "diffHunk": "@@ -0,0 +1,90 @@\n+/*\n+ * Copyright 2020 Hazelcast Inc.\n+ *\n+ * Licensed under the Hazelcast Community License (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://hazelcast.com/hazelcast-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.protobuf;\n+\n+import com.google.protobuf.GeneratedMessageV3;\n+import com.google.protobuf.Parser;\n+import com.hazelcast.nio.ObjectDataInput;\n+import com.hazelcast.nio.ObjectDataOutput;\n+import com.hazelcast.nio.serialization.StreamSerializer;\n+\n+import javax.annotation.Nonnull;\n+import java.io.IOException;\n+import java.lang.reflect.InvocationTargetException;\n+\n+import static com.hazelcast.internal.util.Preconditions.checkTrue;\n+import static com.hazelcast.jet.impl.util.ExceptionUtil.sneakyThrow;\n+\n+/**\n+ * An adapter implementation of {@link StreamSerializer} for Google Protocol\n+ * Buffers v3 binary format.\n+ *\n+ * <p>To learn more about Protocol Buffers, visit:\n+ * <a href=\"https://developers.google.com/protocol-buffers/docs/proto3\">\n+ *     https://developers.google.com/protocol-buffers/docs/proto3\n+ * </a>\n+ *\n+ * @param <T> the Protocol Buffers {@link GeneratedMessageV3} handled by this\n+ *            {@link StreamSerializer}.\n+ * @since 4.1\n+ */\n+public class ProtoStreamSerializer<T extends GeneratedMessageV3> implements StreamSerializer<T> {\n+\n+    private static final String DEFAULT_INSTANCE_METHOD_NAME = \"getDefaultInstance\";\n+\n+    private final int typeId;\n+    private final Parser<T> parser;\n+\n+    /**\n+     * Creates Google Protocol Buffers v3 serializer.\n+     *\n+     * @param typeId unique type id of serializer\n+     * @param clazz  class of {@link GeneratedMessageV3} handled by this\n+     *               serializer\n+     */\n+    public ProtoStreamSerializer(int typeId, @Nonnull Class<T> clazz) {\n+        checkTrue(GeneratedMessageV3.class.isAssignableFrom(clazz), clazz.getName() + \" is not supported\");", "originalCommit": "784a0b5db43f0f5be2d30caf8e652bf4ff88c67b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE2MTIyNQ==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2100#discussion_r400161225", "bodyText": "is parser thread safe?", "author": "cangencer", "createdAt": "2020-03-30T12:44:34Z", "path": "extensions/protobuf/src/main/java/com/hazelcast/jet/protobuf/ProtoStreamSerializer.java", "diffHunk": "@@ -0,0 +1,90 @@\n+/*\n+ * Copyright 2020 Hazelcast Inc.\n+ *\n+ * Licensed under the Hazelcast Community License (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://hazelcast.com/hazelcast-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.protobuf;\n+\n+import com.google.protobuf.GeneratedMessageV3;\n+import com.google.protobuf.Parser;\n+import com.hazelcast.nio.ObjectDataInput;\n+import com.hazelcast.nio.ObjectDataOutput;\n+import com.hazelcast.nio.serialization.StreamSerializer;\n+\n+import javax.annotation.Nonnull;\n+import java.io.IOException;\n+import java.lang.reflect.InvocationTargetException;\n+\n+import static com.hazelcast.internal.util.Preconditions.checkTrue;\n+import static com.hazelcast.jet.impl.util.ExceptionUtil.sneakyThrow;\n+\n+/**\n+ * An adapter implementation of {@link StreamSerializer} for Google Protocol\n+ * Buffers v3 binary format.\n+ *\n+ * <p>To learn more about Protocol Buffers, visit:\n+ * <a href=\"https://developers.google.com/protocol-buffers/docs/proto3\">\n+ *     https://developers.google.com/protocol-buffers/docs/proto3\n+ * </a>\n+ *\n+ * @param <T> the Protocol Buffers {@link GeneratedMessageV3} handled by this\n+ *            {@link StreamSerializer}.\n+ * @since 4.1\n+ */\n+public class ProtoStreamSerializer<T extends GeneratedMessageV3> implements StreamSerializer<T> {\n+\n+    private static final String DEFAULT_INSTANCE_METHOD_NAME = \"getDefaultInstance\";\n+\n+    private final int typeId;\n+    private final Parser<T> parser;\n+\n+    /**\n+     * Creates Google Protocol Buffers v3 serializer.\n+     *\n+     * @param typeId unique type id of serializer\n+     * @param clazz  class of {@link GeneratedMessageV3} handled by this\n+     *               serializer\n+     */\n+    public ProtoStreamSerializer(int typeId, @Nonnull Class<T> clazz) {\n+        checkTrue(GeneratedMessageV3.class.isAssignableFrom(clazz), clazz.getName() + \" is not supported\");\n+\n+        this.typeId = typeId;\n+        this.parser = parser(clazz);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    private Parser<T> parser(Class<T> clazz) {\n+        try {\n+            T defaultMessageInstance = (T) clazz.getMethod(DEFAULT_INSTANCE_METHOD_NAME).invoke(null);\n+            return (Parser<T>) defaultMessageInstance.getParserForType();\n+        } catch (NoSuchMethodException | IllegalAccessException | InvocationTargetException e) {\n+            throw sneakyThrow(e);\n+        }\n+    }\n+\n+    @Override\n+    public int getTypeId() {\n+        return typeId;\n+    }\n+\n+    @Override\n+    public void write(ObjectDataOutput out, T object) throws IOException {\n+        out.writeByteArray(object.toByteArray());\n+    }\n+\n+    @Override\n+    public T read(ObjectDataInput in) throws IOException {\n+        return parser.parseFrom(in.readByteArray());", "originalCommit": "784a0b5db43f0f5be2d30caf8e652bf4ff88c67b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE3MzkwOQ==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2100#discussion_r400173909", "bodyText": "Yes:\n\nThe implementation should be stateless and thread-safe.", "author": "gierlachg", "createdAt": "2020-03-30T13:04:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE2MTIyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE2NDE1MQ==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2100#discussion_r400164151", "bodyText": "how is this different than SerializerHook? It seems like we created lot of new interfaces, without a concrete reason.", "author": "cangencer", "createdAt": "2020-03-30T12:49:24Z", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/serialization/SerializerFactory.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.impl.serialization;\n+\n+import com.hazelcast.internal.util.ExceptionUtil;\n+import com.hazelcast.internal.util.ServiceLoader;\n+import com.hazelcast.nio.serialization.Serializer;\n+\n+import javax.annotation.Nonnull;\n+import java.util.Iterator;\n+\n+import static com.hazelcast.internal.util.Preconditions.checkFalse;\n+import static com.hazelcast.internal.util.Preconditions.checkState;\n+import static com.hazelcast.jet.impl.util.ReflectionUtils.loadClass;\n+import static com.hazelcast.jet.impl.util.ReflectionUtils.newInstance;\n+\n+/**\n+ * A serializer factory facade that discovers serializer factories by reading:\n+ * <ul>\n+ *     <li>\"META-INF/services/com.hazelcast.jet.protobuf.SerializerFactoryHook\"\n+ *     for Google Protocol Buffers v3 serializer factory</li>\n+ * </ul>\n+ * <p>\n+ * This system is meant to be internal code and is subject to change at any time.\n+ */\n+public final class SerializerFactory {", "originalCommit": "784a0b5db43f0f5be2d30caf8e652bf4ff88c67b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b3b6d6844ae8537aef9b1d338dc10565472b4c28", "url": "https://github.com/hazelcast/hazelcast-jet/commit/b3b6d6844ae8537aef9b1d338dc10565472b4c28", "message": "Simplify serializers creation", "committedDate": "2020-03-30T14:33:21Z", "type": "commit"}, {"oid": "076a57ded23474fe058355ff5df7b85e9fe864ce", "url": "https://github.com/hazelcast/hazelcast-jet/commit/076a57ded23474fe058355ff5df7b85e9fe864ce", "message": "Merge branch 'master' into protobuf_support", "committedDate": "2020-03-31T06:33:09Z", "type": "commit"}, {"oid": "f295767b651ead93b4c62d01c688ed067f977c66", "url": "https://github.com/hazelcast/hazelcast-jet/commit/f295767b651ead93b4c62d01c688ed067f977c66", "message": "Simplify even more", "committedDate": "2020-03-31T06:54:44Z", "type": "commit"}, {"oid": "a5a9d0a9e227e7f27aa33da4d6b55410ab189950", "url": "https://github.com/hazelcast/hazelcast-jet/commit/a5a9d0a9e227e7f27aa33da4d6b55410ab189950", "message": "Merge branch 'master' into protobuf_support", "committedDate": "2020-03-31T07:46:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDczMjA3MQ==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2100#discussion_r400732071", "bodyText": "missing annotation on return type. Could also explain the parameters?", "author": "cangencer", "createdAt": "2020-03-31T08:28:09Z", "path": "extensions/protobuf/src/main/java/com/hazelcast/jet/protobuf/ProtoSerializer.java", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ * Copyright 2020 Hazelcast Inc.\n+ *\n+ * Licensed under the Hazelcast Community License (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://hazelcast.com/hazelcast-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.protobuf;\n+\n+import com.google.protobuf.GeneratedMessageV3;\n+import com.google.protobuf.Parser;\n+import com.hazelcast.nio.ObjectDataInput;\n+import com.hazelcast.nio.ObjectDataOutput;\n+import com.hazelcast.nio.serialization.StreamSerializer;\n+\n+import javax.annotation.Nonnull;\n+import java.io.IOException;\n+import java.lang.reflect.InvocationTargetException;\n+\n+import static com.hazelcast.internal.util.Preconditions.checkTrue;\n+import static com.hazelcast.jet.impl.util.ExceptionUtil.sneakyThrow;\n+\n+/**\n+ * An adapter implementation of {@link StreamSerializer} for Google Protocol\n+ * Buffers v3 binary format.\n+ *\n+ * <p>To learn more about Protocol Buffers, visit:\n+ * <a href=\"https://developers.google.com/protocol-buffers/docs/proto3\">\n+ * https://developers.google.com/protocol-buffers/docs/proto3\n+ * </a>\n+ *\n+ * @param <T> the Protocol Buffers {@link GeneratedMessageV3} handled by this\n+ *            {@link StreamSerializer}.\n+ * @since 4.1\n+ */\n+public abstract class ProtoSerializer<T extends GeneratedMessageV3> implements StreamSerializer<T> {\n+\n+    private static final String DEFAULT_INSTANCE_METHOD_NAME = \"getDefaultInstance\";\n+\n+    private final int typeId;\n+    private final Parser<T> parser;\n+\n+    /**\n+     * Creates Protocol Buffers v3 serializer.\n+     *\n+     * @param clazz  class of {@link GeneratedMessageV3} handled by this\n+     *               serializer\n+     * @param typeId unique type id of serializer\n+     */\n+    public ProtoSerializer(@Nonnull Class<T> clazz, int typeId) {\n+        checkTrue(GeneratedMessageV3.class.isAssignableFrom(clazz), clazz.getName() + \" is not supported, \" +\n+                \"provide a Protocol Buffers \" + GeneratedMessageV3.class.getName() + \" type\");\n+\n+        this.typeId = typeId;\n+        this.parser = parser(clazz);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    private Parser<T> parser(Class<T> clazz) {\n+        try {\n+            T defaultMessageInstance = (T) clazz.getMethod(DEFAULT_INSTANCE_METHOD_NAME).invoke(null);\n+            return (Parser<T>) defaultMessageInstance.getParserForType();\n+        } catch (NoSuchMethodException | IllegalAccessException | InvocationTargetException e) {\n+            throw sneakyThrow(e);\n+        }\n+    }\n+\n+    @Override\n+    public int getTypeId() {\n+        return typeId;\n+    }\n+\n+    @Override\n+    public void write(ObjectDataOutput out, T object) throws IOException {\n+        out.writeByteArray(object.toByteArray());\n+    }\n+\n+    @Override\n+    public T read(ObjectDataInput in) throws IOException {\n+        return parser.parseFrom(in.readByteArray());\n+    }\n+\n+    /**\n+     * An utility method that creates an anonymous {@link ProtoSerializer}.\n+     */\n+    public static <T extends GeneratedMessageV3> ProtoSerializer<T> from(@Nonnull Class<T> clazz, int typeId) {", "originalCommit": "a5a9d0a9e227e7f27aa33da4d6b55410ab189950", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b5b67879d0247d5e4c50db857ef21488675e4848", "url": "https://github.com/hazelcast/hazelcast-jet/commit/b5b67879d0247d5e4c50db857ef21488675e4848", "message": "Add ProtoSerializerHook", "committedDate": "2020-03-31T10:30:00Z", "type": "commit"}, {"oid": "ca39e4039d947e3c0a1a6b78817131ca15a4a144", "url": "https://github.com/hazelcast/hazelcast-jet/commit/ca39e4039d947e3c0a1a6b78817131ca15a4a144", "message": "Merge branch 'master' into protobuf_support", "committedDate": "2020-03-31T11:07:16Z", "type": "commit"}, {"oid": "f1697e35cd7fec3cad20ed87e1c291337e12e4c0", "url": "https://github.com/hazelcast/hazelcast-jet/commit/f1697e35cd7fec3cad20ed87e1c291337e12e4c0", "message": "Add protobuf extension to distribution", "committedDate": "2020-03-31T11:09:46Z", "type": "commit"}, {"oid": "156afde9caec88e92be0a43d59bfbad00a7f48b9", "url": "https://github.com/hazelcast/hazelcast-jet/commit/156afde9caec88e92be0a43d59bfbad00a7f48b9", "message": "Fix test", "committedDate": "2020-03-31T11:40:45Z", "type": "commit"}, {"oid": "04c02b07fda4261f29ab7d78d344c7fc24372915", "url": "https://github.com/hazelcast/hazelcast-jet/commit/04c02b07fda4261f29ab7d78d344c7fc24372915", "message": "Cleanup", "committedDate": "2020-03-31T12:23:11Z", "type": "commit"}, {"oid": "6af78449c6d842ff190db73a458cdc4c03c52c6c", "url": "https://github.com/hazelcast/hazelcast-jet/commit/6af78449c6d842ff190db73a458cdc4c03c52c6c", "message": "Add missing @since tag to ProtoSerializerHook", "committedDate": "2020-04-01T08:28:41Z", "type": "commit"}, {"oid": "7e7a72d1e249a10c63967cec43d91dd8c5b73bfd", "url": "https://github.com/hazelcast/hazelcast-jet/commit/7e7a72d1e249a10c63967cec43d91dd8c5b73bfd", "message": "Improve Javadoc", "committedDate": "2020-04-01T14:35:42Z", "type": "commit"}, {"oid": "958b28bfa52701cea8b5b6c7d5ab2f4398686046", "url": "https://github.com/hazelcast/hazelcast-jet/commit/958b28bfa52701cea8b5b6c7d5ab2f4398686046", "message": "Forbid serializers with negative type ids", "committedDate": "2020-04-01T16:03:54Z", "type": "commit"}, {"oid": "545602af3dd594021d2c5fda97c0b66067fb72b3", "url": "https://github.com/hazelcast/hazelcast-jet/commit/545602af3dd594021d2c5fda97c0b66067fb72b3", "message": "Merge remote-tracking branch 'origin/protobuf_support' into protobuf_support", "committedDate": "2020-04-01T16:04:00Z", "type": "commit"}, {"oid": "54998291f1ab1bd0e77f1ca298407c49a8dd54fa", "url": "https://github.com/hazelcast/hazelcast-jet/commit/54998291f1ab1bd0e77f1ca298407c49a8dd54fa", "message": "Rename Proto to Protobuf", "committedDate": "2020-04-01T16:07:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA4OTA3NA==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2100#discussion_r402089074", "bodyText": "should be jet-start.sh", "author": "cangencer", "createdAt": "2020-04-02T06:54:17Z", "path": "extensions/protobuf/src/main/java/com/hazelcast/jet/protobuf/ProtobufSerializer.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Copyright 2020 Hazelcast Inc.\n+ *\n+ * Licensed under the Hazelcast Community License (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://hazelcast.com/hazelcast-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.protobuf;\n+\n+import com.google.protobuf.GeneratedMessageV3;\n+import com.google.protobuf.Parser;\n+import com.hazelcast.nio.ObjectDataInput;\n+import com.hazelcast.nio.ObjectDataOutput;\n+import com.hazelcast.nio.serialization.StreamSerializer;\n+\n+import javax.annotation.Nonnull;\n+import java.io.IOException;\n+import java.lang.reflect.InvocationTargetException;\n+\n+import static com.hazelcast.internal.util.Preconditions.checkTrue;\n+import static com.hazelcast.jet.impl.util.ExceptionUtil.sneakyThrow;\n+\n+/**\n+ * Adapts a generated <a\n+ * href=\"https://developers.google.com/protocol-buffers/docs/proto3\">\n+ * Google Protocol Buffers v3</a> serializer class to the Hazelcast {@link\n+ * StreamSerializer} interface.\n+ * <p>\n+ * To learn how to use this class, visit Jet's <a\n+ * href=\"https://hazelcast-jet.io/docs/api/serialization#google-protocol-buffers\">", "originalCommit": "54998291f1ab1bd0e77f1ca298407c49a8dd54fa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA4OTI2NQ==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2100#discussion_r402089265", "bodyText": "same as before", "author": "cangencer", "createdAt": "2020-04-02T06:54:43Z", "path": "extensions/protobuf/src/main/java/com/hazelcast/jet/protobuf/ProtobufSerializerHook.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright 2020 Hazelcast Inc.\n+ *\n+ * Licensed under the Hazelcast Community License (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://hazelcast.com/hazelcast-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.protobuf;\n+\n+import com.google.protobuf.GeneratedMessageV3;\n+import com.hazelcast.nio.serialization.Serializer;\n+import com.hazelcast.nio.serialization.SerializerHook;\n+\n+/**\n+ * Simplifies using the {@linkplain SerializerHook Hazelcast Serializer\n+ * Hook mechanism} to register a Google Protocol Buffers serializer with\n+ * the Hazelcast Jet cluster. The serialized class can then be used in\n+ * Hazelcast data structures and Jet jobs.\n+ * <p>\n+ * To use it, create a JAR containing the serializer hook class and\n+ * {@code META-INF/services/com.hazelcast.SerializerHook}, a plain-text\n+ * file containing its fully qualified name. Visit Jet's <a\n+ * href=\"https://hazelcast-jet.io/docs/api/serialization#google-protocol-buffers\">", "originalCommit": "54998291f1ab1bd0e77f1ca298407c49a8dd54fa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3d619166a45445d4ae93a31522ad9183c075a952", "url": "https://github.com/hazelcast/hazelcast-jet/commit/3d619166a45445d4ae93a31522ad9183c075a952", "message": "Change docs URLs", "committedDate": "2020-04-02T06:57:14Z", "type": "commit"}]}