{"pr_number": 1865, "pr_title": "Add a type check for the initilized object by ManagedContext", "pr_createdAt": "2020-01-20T17:22:51Z", "pr_url": "https://github.com/hazelcast/hazelcast-jet/pull/1865", "timeline": [{"oid": "67816c82540821de97bce33e45e04673e55efb58", "url": "https://github.com/hazelcast/hazelcast-jet/commit/67816c82540821de97bce33e45e04673e55efb58", "message": "add a type check for the initilized object by ManagedContext", "committedDate": "2020-01-20T17:13:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY2MjA0OQ==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1865#discussion_r368662049", "bodyText": "shouldn't use the Util method here too?", "author": "cangencer", "createdAt": "2020-01-20T17:29:45Z", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/ProcessorTasklet.java", "diffHunk": "@@ -197,10 +198,11 @@ private OutboxImpl createOutbox(@Nonnull OutboundCollector ssCollector) {\n \n     @Override\n     public void init() {\n-        if (serializationService.getManagedContext() != null) {\n+        ManagedContext managedContext = serializationService.getManagedContext();\n+        if (managedContext != null) {\n             Processor toInit = processor instanceof ProcessorWrapper\n                     ? ((ProcessorWrapper) processor).getWrapped() : processor;\n-            Object initialized = serializationService.getManagedContext().initialize(toInit);\n+            Object initialized = managedContext.initialize(toInit);", "originalCommit": "67816c82540821de97bce33e45e04673e55efb58", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY3OTIwNw==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1865#discussion_r368679207", "bodyText": "I guess we want to have object equality here, because we may be using the processor elsewhere ?", "author": "gurbuzali", "createdAt": "2020-01-20T18:23:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY2MjA0OQ=="}], "type": "inlineReview"}, {"oid": "b96c251a9921eb0e0ce0bdfa3e2eb4f1e51ef235", "url": "https://github.com/hazelcast/hazelcast-jet/commit/b96c251a9921eb0e0ce0bdfa3e2eb4f1e51ef235", "message": "add null check to the initialized object", "committedDate": "2020-01-20T18:23:46Z", "type": "commit"}, {"oid": "4d494365cd5d014a32f54fee4b405c7d4abe5787", "url": "https://github.com/hazelcast/hazelcast-jet/commit/4d494365cd5d014a32f54fee4b405c7d4abe5787", "message": "remove explicit class type checking, make ProcessorWrapper mutable to set the initialized object", "committedDate": "2020-01-21T11:09:56Z", "type": "commit"}, {"oid": "d3ccce3595fb00a09a234a62f5e7735ccf7dcc0e", "url": "https://github.com/hazelcast/hazelcast-jet/commit/d3ccce3595fb00a09a234a62f5e7735ccf7dcc0e", "message": "fix test", "committedDate": "2020-01-21T11:18:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk0NTY4Mg==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1865#discussion_r368945682", "bodyText": "do we want to pass the cause here, just in case?", "author": "cangencer", "createdAt": "2020-01-21T11:23:05Z", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/ProcessorTasklet.java", "diffHunk": "@@ -197,11 +198,23 @@ private OutboxImpl createOutbox(@Nonnull OutboundCollector ssCollector) {\n \n     @Override\n     public void init() {\n-        if (serializationService.getManagedContext() != null) {\n+        ManagedContext managedContext = serializationService.getManagedContext();\n+        if (managedContext != null) {\n             Processor toInit = processor instanceof ProcessorWrapper\n                     ? ((ProcessorWrapper) processor).getWrapped() : processor;\n-            Object initialized = serializationService.getManagedContext().initialize(toInit);\n-            assert initialized == toInit : \"different object returned\";\n+            Object initialized = null;\n+            try {\n+                initialized = managedContext.initialize(toInit);\n+                toInit = (Processor) initialized;\n+            } catch (ClassCastException e) {\n+                throw new IllegalArgumentException(String.format(", "originalCommit": "d3ccce3595fb00a09a234a62f5e7735ccf7dcc0e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "15b039bb4945822c7f2430a5b993fcffc50945cb", "url": "https://github.com/hazelcast/hazelcast-jet/commit/15b039bb4945822c7f2430a5b993fcffc50945cb", "message": "add more tests", "committedDate": "2020-01-21T11:51:18Z", "type": "commit"}, {"oid": "e1fb465584e2f1411999ad917d60c4b06d4e71fb", "url": "https://github.com/hazelcast/hazelcast-jet/commit/e1fb465584e2f1411999ad917d60c4b06d4e71fb", "message": "checkstyle", "committedDate": "2020-01-21T12:21:00Z", "type": "commit"}]}