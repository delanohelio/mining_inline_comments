{"pr_number": 3309, "pr_title": "SONARJAVA-3130 S3824: raise issue when \"containsKey\" is used", "pr_createdAt": "2020-12-01T14:54:45Z", "pr_url": "https://github.com/SonarSource/sonar-java/pull/3309", "timeline": [{"oid": "68eaa41b38aaa9e577c99a9dfaaa78ab569ade78", "url": "https://github.com/SonarSource/sonar-java/commit/68eaa41b38aaa9e577c99a9dfaaa78ab569ade78", "message": "WIP", "committedDate": "2020-12-01T16:13:36Z", "type": "forcePushed"}, {"oid": "963e04e43b7270bd39d6c06db1e1f49942e3bb82", "url": "https://github.com/SonarSource/sonar-java/commit/963e04e43b7270bd39d6c06db1e1f49942e3bb82", "message": "WIP", "committedDate": "2020-12-01T16:31:26Z", "type": "forcePushed"}, {"oid": "51cdeabb9c31f58bc92b830e729b32c71c2c49c3", "url": "https://github.com/SonarSource/sonar-java/commit/51cdeabb9c31f58bc92b830e729b32c71c2c49c3", "message": "WIP", "committedDate": "2020-12-01T16:50:46Z", "type": "forcePushed"}, {"oid": "dc6d90a36b335dd8913d32540bf2b30c50ff2d37", "url": "https://github.com/SonarSource/sonar-java/commit/dc6d90a36b335dd8913d32540bf2b30c50ff2d37", "message": "SONARJAVA-3130 S3824: raise issue when \"containsKey\" is used", "committedDate": "2020-12-02T09:47:56Z", "type": "forcePushed"}, {"oid": "f424bb58e4ba4afbef5c1a16dfb1da24e55d17c1", "url": "https://github.com/SonarSource/sonar-java/commit/f424bb58e4ba4afbef5c1a16dfb1da24e55d17c1", "message": "SONARJAVA-3130 S3824: raise issue when \"containsKey\" is used", "committedDate": "2020-12-02T10:03:58Z", "type": "forcePushed"}, {"oid": "3c7a97eee56bec56c6cc7ab6f74a8ebb1ff9fc95", "url": "https://github.com/SonarSource/sonar-java/commit/3c7a97eee56bec56c6cc7ab6f74a8ebb1ff9fc95", "message": "SONARJAVA-3130 S3824: raise issue when \"containsKey\" is used", "committedDate": "2020-12-02T10:10:31Z", "type": "forcePushed"}, {"oid": "9ee54aa126b2776d35151caf443399636e4eccc8", "url": "https://github.com/SonarSource/sonar-java/commit/9ee54aa126b2776d35151caf443399636e4eccc8", "message": "SONARJAVA-3130 S3824: raise issue when \"containsKey\" is used", "committedDate": "2020-12-02T10:34:02Z", "type": "forcePushed"}, {"oid": "7d8a01018ccf42eb584bc27923bae4017a7694b7", "url": "https://github.com/SonarSource/sonar-java/commit/7d8a01018ccf42eb584bc27923bae4017a7694b7", "message": "SONARJAVA-3130 S3824: raise issue when \"containsKey\" is used", "committedDate": "2020-12-02T10:49:55Z", "type": "forcePushed"}, {"oid": "e7e9f5d0fab20f390834d5454e9b7c742648e039", "url": "https://github.com/SonarSource/sonar-java/commit/e7e9f5d0fab20f390834d5454e9b7c742648e039", "message": "SONARJAVA-3130 S3824: raise issue when \"containsKey\" is used", "committedDate": "2020-12-02T10:59:30Z", "type": "forcePushed"}, {"oid": "db77f292c156b259f49f10c9b15aa62361490778", "url": "https://github.com/SonarSource/sonar-java/commit/db77f292c156b259f49f10c9b15aa62361490778", "message": "SONARJAVA-3130 S3824: raise issue when \"containsKey\" is used", "committedDate": "2020-12-02T12:16:31Z", "type": "forcePushed"}, {"oid": "ea2736b195440d0a090defd8d12d09f0b76f0734", "url": "https://github.com/SonarSource/sonar-java/commit/ea2736b195440d0a090defd8d12d09f0b76f0734", "message": "SONARJAVA-3130 S3824: raise issue when \"containsKey\" is used", "committedDate": "2020-12-02T12:26:23Z", "type": "commit"}, {"oid": "ea2736b195440d0a090defd8d12d09f0b76f0734", "url": "https://github.com/SonarSource/sonar-java/commit/ea2736b195440d0a090defd8d12d09f0b76f0734", "message": "SONARJAVA-3130 S3824: raise issue when \"containsKey\" is used", "committedDate": "2020-12-02T12:26:23Z", "type": "forcePushed"}, {"oid": "ef413b3ae3e6305c7d8703b89dfc89fbb06c3e72", "url": "https://github.com/SonarSource/sonar-java/commit/ef413b3ae3e6305c7d8703b89dfc89fbb06c3e72", "message": "Refactoring", "committedDate": "2020-12-02T13:12:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDI0NjA0Mg==", "url": "https://github.com/SonarSource/sonar-java/pull/3309#discussion_r534246042", "bodyText": "unused import", "author": "m-g-sonar", "createdAt": "2020-12-02T15:15:05Z", "path": "java-checks-test-sources/src/main/java/symbolicexecution/checks/MapComputeIfAbsentOrPresentCheck.java", "diffHunk": "@@ -1,11 +1,14 @@\n+package symbolicexecution.checks;\n+\n import com.google.common.base.Preconditions;\n \n import javax.annotation.CheckForNull;\n \n import java.util.Map;\n import java.util.Objects;\n+import org.elasticsearch.common.MacAddressProvider;", "originalCommit": "ea2736b195440d0a090defd8d12d09f0b76f0734", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDI1MDY2OA==", "url": "https://github.com/SonarSource/sonar-java/pull/3309#discussion_r534250668", "bodyText": "Love this part! pretty nice job!", "author": "m-g-sonar", "createdAt": "2020-12-02T15:20:53Z", "path": "java-frontend/src/main/java/org/sonar/java/se/checks/MapComputeIfAbsentOrPresentCheck.java", "diffHunk": "@@ -153,60 +184,99 @@ public void checkEndOfExecution(CheckerContext context) {\n     checkIssues.stream().filter(checkIssue -> checkIssue.isOnlyPossibleIssueForReportTree(checkIssues)).forEach(issue -> issue.report(context, check));\n   }\n \n-  private static class CheckIssue {\n+  private abstract static class CheckIssue {", "originalCommit": "ea2736b195440d0a090defd8d12d09f0b76f0734", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDI1MjAxMA==", "url": "https://github.com/SonarSource/sonar-java/pull/3309#discussion_r534252010", "bodyText": "From how it is implemented, getIfStatementParent(mit) can be pretty costly (it potentially explore the whole AST), and we are going to make such calls for each map.containsKey() or map.get().\nWhat about precomputing them or coaching them to avoid having to reexplore the AST for all these invocations?", "author": "m-g-sonar", "createdAt": "2020-12-02T15:22:32Z", "path": "java-frontend/src/main/java/org/sonar/java/se/checks/MapComputeIfAbsentOrPresentCheck.java", "diffHunk": "@@ -126,15 +151,21 @@ private static boolean isMethodInvocationThrowingCheckedException(ExpressionTree\n   }\n \n   private static boolean isInsideIfStatementWithNullCheckWithoutElse(MethodInvocationTree mit) {\n+    return getIfStatementParent(mit).map(ifStatementTree -> ifStatementTree.elseStatement() == null", "originalCommit": "ea2736b195440d0a090defd8d12d09f0b76f0734", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "609590186d600e808acfe0b7cf02991f16e7f9ce", "url": "https://github.com/SonarSource/sonar-java/commit/609590186d600e808acfe0b7cf02991f16e7f9ce", "message": "SONARJAVA-3130 Apply review comments", "committedDate": "2020-12-02T16:36:26Z", "type": "commit"}, {"oid": "c79f195e1fc71a02db50cce2b78714a9ff8eba6e", "url": "https://github.com/SonarSource/sonar-java/commit/c79f195e1fc71a02db50cce2b78714a9ff8eba6e", "message": "SONARJAVA-3130 Get rid of recursion because there is no tailrec optimization in Java", "committedDate": "2020-12-02T17:01:30Z", "type": "commit"}, {"oid": "7a3013e81f1c11808a4f4eab187e066dc7a3dc00", "url": "https://github.com/SonarSource/sonar-java/commit/7a3013e81f1c11808a4f4eab187e066dc7a3dc00", "message": "SONARJAVA-3130 Add proper flows for Map.containsKey()", "committedDate": "2020-12-02T17:23:26Z", "type": "commit"}]}