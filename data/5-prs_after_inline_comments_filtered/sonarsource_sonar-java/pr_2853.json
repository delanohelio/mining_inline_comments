{"pr_number": 2853, "pr_title": "SONARJAVA-2968 S2175 should cover more methods from \"List\" and cover \"Map\"", "pr_createdAt": "2020-02-28T17:47:15Z", "pr_url": "https://github.com/SonarSource/sonar-java/pull/2853", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjMwMjI2MA==", "url": "https://github.com/SonarSource/sonar-java/pull/2853#discussion_r386302260", "bodyText": "What about removeAll from Collection?", "author": "quentin-jaquier-sonarsource", "createdAt": "2020-03-02T10:12:51Z", "path": "java-checks/src/main/java/org/sonar/java/checks/CollectionInappropriateCallsCheck.java", "diffHunk": "@@ -39,52 +40,93 @@\n import org.sonar.plugins.java.api.tree.Tree.Kind;\n \n @Rule(key = \"S2175\")\n-public class CollectionInappropriateCallsCheck extends AbstractMethodDetection {\n+public class CollectionInappropriateCallsCheck extends IssuableSubscriptionVisitor {\n+\n+  private static final List<TypeChecker> TYPE_CHECKERS = new TypeCheckerBuilder()\n+    .on(\"java.util.Collection\")\n+      .method(\"remove\").argument(1).outOf(1).shouldMatchParametrizedType(1)\n+      .method(\"contains\").argument(1).outOf(1).shouldMatchParametrizedType(1)", "originalCommit": "bbc18597ffa87f158a6fde02eaf254c8f180c36f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ3MjEyNA==", "url": "https://github.com/SonarSource/sonar-java/pull/2853#discussion_r386472124", "bodyText": "\ud83d\ude31 I forgot the first case of the ticket! Thanks, it's fixed.", "author": "alban-auzeill", "createdAt": "2020-03-02T15:44:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjMwMjI2MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjMxNDE1NQ==", "url": "https://github.com/SonarSource/sonar-java/pull/2853#discussion_r386314155", "bodyText": "This builder is not building a single TypeChecker, but a List<TypeChecker>. You could rename it to TypeCheckerListBuilder.", "author": "quentin-jaquier-sonarsource", "createdAt": "2020-03-02T10:36:02Z", "path": "java-checks/src/main/java/org/sonar/java/checks/CollectionInappropriateCallsCheck.java", "diffHunk": "@@ -130,4 +171,65 @@ private static boolean autoboxing(Type argumentType, Type collectionParameterTyp\n       && JUtils.isPrimitiveWrapper(collectionParameterType)\n       && isSubtypeOf(JUtils.primitiveWrapperType(argumentType), collectionParameterType);\n   }\n+\n+  private static class TypeChecker {\n+    private final String methodOwnerType;\n+    private final MethodMatcher methodMatcher;\n+    private final int argumentIndex;\n+    private final int parametrizedTypeIndex;\n+\n+    private TypeChecker(String methodOwnerType, MethodMatcher methodMatcher, int argumentIndex, int parametrizedTypeIndex) {\n+      this.methodOwnerType = methodOwnerType;\n+      this.methodMatcher = methodMatcher;\n+      this.argumentIndex = argumentIndex;\n+      this.parametrizedTypeIndex = parametrizedTypeIndex;\n+    }\n+  }\n+\n+  private static class TypeCheckerBuilder {", "originalCommit": "bbc18597ffa87f158a6fde02eaf254c8f180c36f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjMxNjA5Mg==", "url": "https://github.com/SonarSource/sonar-java/pull/2853#discussion_r386316092", "bodyText": "It is implicit that shouldMatchParametrizedType is doing so much work, you could add an additional method add(), performing this additional work.\nOr maybe find a better name for it?\nIn any case, it should be clear at which point we build a TypeChecker and add it to the list.", "author": "quentin-jaquier-sonarsource", "createdAt": "2020-03-02T10:40:12Z", "path": "java-checks/src/main/java/org/sonar/java/checks/CollectionInappropriateCallsCheck.java", "diffHunk": "@@ -130,4 +171,65 @@ private static boolean autoboxing(Type argumentType, Type collectionParameterTyp\n       && JUtils.isPrimitiveWrapper(collectionParameterType)\n       && isSubtypeOf(JUtils.primitiveWrapperType(argumentType), collectionParameterType);\n   }\n+\n+  private static class TypeChecker {\n+    private final String methodOwnerType;\n+    private final MethodMatcher methodMatcher;\n+    private final int argumentIndex;\n+    private final int parametrizedTypeIndex;\n+\n+    private TypeChecker(String methodOwnerType, MethodMatcher methodMatcher, int argumentIndex, int parametrizedTypeIndex) {\n+      this.methodOwnerType = methodOwnerType;\n+      this.methodMatcher = methodMatcher;\n+      this.argumentIndex = argumentIndex;\n+      this.parametrizedTypeIndex = parametrizedTypeIndex;\n+    }\n+  }\n+\n+  private static class TypeCheckerBuilder {\n+\n+    private final List<TypeChecker> typeCheckers = new ArrayList<>();\n+\n+    private String methodOwnerType;\n+    private String methodName;\n+    private int argumentPosition;\n+    private int argumentCount;\n+\n+    private TypeCheckerBuilder on(String methodOwnerType) {\n+      this.methodOwnerType = methodOwnerType;\n+      return this;\n+    }\n+\n+    private TypeCheckerBuilder method(String methodName) {\n+      this.methodName = methodName;\n+      return this;\n+    }\n+\n+    private TypeCheckerBuilder argument(int argumentPosition) {\n+      this.argumentPosition = argumentPosition;\n+      return this;\n+    }\n+\n+    private TypeCheckerBuilder outOf(int argumentCount) {\n+      this.argumentCount = argumentCount;\n+      return this;\n+    }\n+\n+    private TypeCheckerBuilder shouldMatchParametrizedType(int parametrizedTypePosition) {", "originalCommit": "bbc18597ffa87f158a6fde02eaf254c8f180c36f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "dd728aa52adb1b6cfb4ebf37463cbfaafb3d8f18", "url": "https://github.com/SonarSource/sonar-java/commit/dd728aa52adb1b6cfb4ebf37463cbfaafb3d8f18", "message": "SONARJAVA-2968 S2175 should cover more methods from \"List\" and cover \"Map\"", "committedDate": "2020-03-02T13:06:11Z", "type": "commit"}, {"oid": "ec4f85e97649214b5423bb89901c6bf7b0659c56", "url": "https://github.com/SonarSource/sonar-java/commit/ec4f85e97649214b5423bb89901c6bf7b0659c56", "message": "Fix from review, rename TypeCheckerBuilder and create an \"add\" method", "committedDate": "2020-03-02T13:40:46Z", "type": "commit"}, {"oid": "955c85cbd90b05bb594147d93787027643afdb5e", "url": "https://github.com/SonarSource/sonar-java/commit/955c85cbd90b05bb594147d93787027643afdb5e", "message": "Fix from review, support \"removeAll\" method", "committedDate": "2020-03-02T15:00:34Z", "type": "commit"}, {"oid": "955c85cbd90b05bb594147d93787027643afdb5e", "url": "https://github.com/SonarSource/sonar-java/commit/955c85cbd90b05bb594147d93787027643afdb5e", "message": "Fix from review, support \"removeAll\" method", "committedDate": "2020-03-02T15:00:34Z", "type": "forcePushed"}]}