{"pr_number": 2856, "pr_title": "SONARJAVA-3296 FN for security rules using ExpressionUtils.getEnclosingMethod.", "pr_createdAt": "2020-03-03T16:32:51Z", "pr_url": "https://github.com/SonarSource/sonar-java/pull/2856", "timeline": [{"oid": "e76ea5bf859f75e477164ec660bceb43f7f0f5de", "url": "https://github.com/SonarSource/sonar-java/commit/e76ea5bf859f75e477164ec660bceb43f7f0f5de", "message": "SONARJAVA-3296 Remove FN for S5301", "committedDate": "2020-03-03T15:48:11Z", "type": "commit"}, {"oid": "a47f7807a196a55b4067f320d2d8de1c2ca67e0d", "url": "https://github.com/SonarSource/sonar-java/commit/a47f7807a196a55b4067f320d2d8de1c2ca67e0d", "message": "SONARJAVA-3296 Remove FN for S5527", "committedDate": "2020-03-03T16:08:59Z", "type": "commit"}, {"oid": "3ebb2659549e8d3b46708f190356ee3cf2e9855a", "url": "https://github.com/SonarSource/sonar-java/commit/3ebb2659549e8d3b46708f190356ee3cf2e9855a", "message": "Remove TriggeringSecuringHelper", "committedDate": "2020-03-03T16:09:37Z", "type": "commit"}, {"oid": "8ad780795d9044a1b3c2321c3bf8fbccc646d595", "url": "https://github.com/SonarSource/sonar-java/commit/8ad780795d9044a1b3c2321c3bf8fbccc646d595", "message": "Improve coverage", "committedDate": "2020-03-04T08:30:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM3NDg4MQ==", "url": "https://github.com/SonarSource/sonar-java/pull/2856#discussion_r388374881", "bodyText": "This test condition leads to FP if we are bad at resolving the variable symbol. I would prefer to replace isInvocationOnVariable by something like isInvocationOnTheGivenVariableButReturnTrueIfYourAreUnsureAboutOnWhatThisMethodIsInvoked \ud83d\ude09", "author": "alban-auzeill", "createdAt": "2020-03-05T15:38:34Z", "path": "java-checks/src/main/java/org/sonar/java/checks/security/VerifiedServerHostnamesCheck.java", "diffHunk": "@@ -179,15 +192,20 @@ private static boolean isNotFalse(ExpressionTree expression) {\n \n   private static class MethodBodyApacheVisitor extends BaseTreeVisitor {\n     private boolean isSecured = false;\n+    private Symbol variable;\n \n     private static final MethodMatcher SET_SSL_CHECK_SERVER_ID = MethodMatcher.create()\n       .typeDefinition(APACHE_EMAIL)\n       .name(\"setSSLCheckServerIdentity\")\n       .addParameter(\"boolean\");\n \n+    MethodBodyApacheVisitor(Symbol variable) {\n+      this.variable = variable;\n+    }\n+\n     @Override\n     public void visitMethodInvocation(MethodInvocationTree mit) {\n-      if (SET_SSL_CHECK_SERVER_ID.matches(mit) && isNotFalse(mit.arguments().get(0))) {\n+      if (isInvocationOnVariable(mit, variable) && SET_SSL_CHECK_SERVER_ID.matches(mit) && isNotFalse(mit.arguments().get(0))) {", "originalCommit": "8ad780795d9044a1b3c2321c3bf8fbccc646d595", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b0083cb65f1c087caadb803d695e20e54b30686a", "url": "https://github.com/SonarSource/sonar-java/commit/b0083cb65f1c087caadb803d695e20e54b30686a", "message": "Remove FP when symbol can not be resolved", "committedDate": "2020-03-06T08:08:20Z", "type": "commit"}, {"oid": "b0083cb65f1c087caadb803d695e20e54b30686a", "url": "https://github.com/SonarSource/sonar-java/commit/b0083cb65f1c087caadb803d695e20e54b30686a", "message": "Remove FP when symbol can not be resolved", "committedDate": "2020-03-06T08:08:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc4NjU2NQ==", "url": "https://github.com/SonarSource/sonar-java/pull/2856#discussion_r388786565", "bodyText": "We could reduce the cognitive complexity by 1 using:\n  public static boolean isInvocationOnVariable(MethodInvocationTree mit, @Nullable Symbol variable, boolean defaultReturn) {\n    ExpressionTree methodSelect = mit.methodSelect();\n    if (variable != null && methodSelect.is(Tree.Kind.MEMBER_SELECT)) {\n      return extractIdentifierSymbol(((MemberSelectExpressionTree) methodSelect).expression())\n        .map(variable::equals)\n        .orElse(defaultReturn);\n    }\n    return defaultReturn;\n  }\n\nor\n  public static boolean isInvocationOnVariable(MethodInvocationTree mit, @Nullable Symbol variable, boolean defaultReturn) {\n    ExpressionTree methodSelect = mit.methodSelect();\n    if (variable == null || !methodSelect.is(Tree.Kind.MEMBER_SELECT)) {\n      return defaultReturn;\n    }\n    return extractIdentifierSymbol(((MemberSelectExpressionTree) methodSelect).expression())\n      .map(variable::equals)\n      .orElse(defaultReturn);\n  }", "author": "alban-auzeill", "createdAt": "2020-03-06T09:09:25Z", "path": "java-frontend/src/main/java/org/sonar/java/model/ExpressionUtils.java", "diffHunk": "@@ -114,10 +115,21 @@ public static IdentifierTree extractIdentifier(AssignmentExpressionTree tree) {\n     return extractIdentifier(tree).map(IdentifierTree::symbol);\n   }\n \n-  public static boolean isInvocationOnVariable(MethodInvocationTree mit, Symbol variable) {\n+  /**\n+   * Return whether we are sure that the method invocation is on a given variable.\n+   *\n+   * If unsure (variable is null, or we can not extract an identifier from the method invocation),\n+   * return a default value\n+   */\n+  public static boolean isInvocationOnVariable(MethodInvocationTree mit, @Nullable Symbol variable, boolean defaultReturn) {\n     ExpressionTree methodSelect = mit.methodSelect();\n-    return methodSelect.is(Tree.Kind.MEMBER_SELECT)\n-      && extractIdentifierSymbol(((MemberSelectExpressionTree) methodSelect).expression()).filter(s -> s.equals(variable)).isPresent();\n+    if (variable != null && methodSelect.is(Tree.Kind.MEMBER_SELECT)) {\n+      Optional<Symbol> extractedSymbol = extractIdentifierSymbol(((MemberSelectExpressionTree) methodSelect).expression());\n+      if (extractedSymbol.isPresent()) {\n+        return extractedSymbol.get().equals(variable);\n+      }\n+    }\n+    return defaultReturn;\n   }", "originalCommit": "b0083cb65f1c087caadb803d695e20e54b30686a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "fc6c4e840bef3c3644b39f33f58e91642f8dbe1e", "url": "https://github.com/SonarSource/sonar-java/commit/fc6c4e840bef3c3644b39f33f58e91642f8dbe1e", "message": "Fix from review: reduce cognitive complexity", "committedDate": "2020-03-06T09:23:30Z", "type": "commit"}]}