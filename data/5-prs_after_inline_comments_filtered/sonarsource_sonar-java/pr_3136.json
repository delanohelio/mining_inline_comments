{"pr_number": 3136, "pr_title": "SONARJAVA-3186 SE rules should consider unknown exception as runtime.", "pr_createdAt": "2020-08-11T09:42:57Z", "pr_url": "https://github.com/SonarSource/sonar-java/pull/3136", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA3NzU0OQ==", "url": "https://github.com/SonarSource/sonar-java/pull/3136#discussion_r469077549", "bodyText": "This helper is used by 5 rules:\n\nS3546: CustomUnclosedResourcesCheck\nS3516: InvariantReturnCheck\nS2222: LocksNotUnlockedCheck\nS2095: UnclosedResourcesCheck\nS2755: XxeProcessingCheck\n\nFor me, when an exception is unknown, it's either:\n\nwe failed to correctly resolve the semantic\nit's an exception added by the engine to model the fact that something could go wrong in certain situations.\n\nIn both cases, it makes sense to not report an issue to avoid FPs.", "author": "quentin-jaquier-sonarsource", "createdAt": "2020-08-12T08:01:17Z", "path": "java-frontend/src/main/java/org/sonar/java/se/ProgramState.java", "diffHunk": "@@ -533,7 +533,7 @@ public SymbolicValue exitValue() {\n   public boolean exitingOnRuntimeException() {", "originalCommit": "da02d537d675f77a9b9b3826377497c881c9c8f5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b69fef5354a8796dc7a3120bd3776e141038cc0c", "url": "https://github.com/SonarSource/sonar-java/commit/b69fef5354a8796dc7a3120bd3776e141038cc0c", "message": "SONARJAVA-3186 SE rules should consider unknown exception as runtime.", "committedDate": "2020-08-14T07:29:24Z", "type": "commit"}, {"oid": "b69fef5354a8796dc7a3120bd3776e141038cc0c", "url": "https://github.com/SonarSource/sonar-java/commit/b69fef5354a8796dc7a3120bd3776e141038cc0c", "message": "SONARJAVA-3186 SE rules should consider unknown exception as runtime.", "committedDate": "2020-08-14T07:29:24Z", "type": "forcePushed"}]}