{"pr_number": 3359, "pr_title": "SONARJAVA-3634 Extend rule S1860 according to JEP 390: Warnings for Value-Based Classes", "pr_createdAt": "2020-12-17T14:57:24Z", "pr_url": "https://github.com/SonarSource/sonar-java/pull/3359", "timeline": [{"oid": "728bf36d2b228c77c1e3012f9a9389c94c13b70b", "url": "https://github.com/SonarSource/sonar-java/commit/728bf36d2b228c77c1e3012f9a9389c94c13b70b", "message": "SONARJAVA-3634 Extend rule S1860 according to JEP 390: Warnings for Value-Based Classes", "committedDate": "2020-12-17T15:12:07Z", "type": "commit"}, {"oid": "728bf36d2b228c77c1e3012f9a9389c94c13b70b", "url": "https://github.com/SonarSource/sonar-java/commit/728bf36d2b228c77c1e3012f9a9389c94c13b70b", "message": "SONARJAVA-3634 Extend rule S1860 according to JEP 390: Warnings for Value-Based Classes", "committedDate": "2020-12-17T15:12:07Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTIwMjE3Ng==", "url": "https://github.com/SonarSource/sonar-java/pull/3359#discussion_r545202176", "bodyText": "The idea is to check that the expression used in synchronized() is either call to List.of() Set.of()... or variable/field initialized with these methods.\nAs far as copmpile-time type is List it's impossible to check wether it's ListN, SetN or MapN in Runtime.", "author": "margarita-nedzelska-sonarsource", "createdAt": "2020-12-17T15:58:09Z", "path": "java-checks/src/main/java/org/sonar/java/checks/SynchronizationOnStringOrBoxedCheck.java", "diffHunk": "@@ -52,17 +89,29 @@\n   @Override\n   public void visitNode(Tree tree) {\n     SynchronizedStatementTree syncStatement = (SynchronizedStatementTree) tree;\n-    Type expressionType = syncStatement.expression().symbolType();\n-    if (expressionType.isPrimitive() || isForbiddenType(expressionType)) {\n-      reportIssue(syncStatement.expression(), \"Synchronize on a new \\\"Object\\\" instead.\");\n+    ExpressionTree expression = syncStatement.expression();\n+    Type expressionType = expression.symbolType();\n+    if (expressionType.isPrimitive() || isForbiddenType(expressionType) || isInitializedWithImmutable(expression)) {\n+      reportIssue(expression, \"Synchronize on a new \\\"Object\\\" instead.\");\n     }\n   }\n \n   private static boolean isForbiddenType(Type expressionType) {\n-    for (String forbiddenType : FORBIDDEN_TYPES) {\n-      if (expressionType.is(forbiddenType)) {\n-        return true;\n-      }\n+    return FORBIDDEN_TYPES.contains(expressionType.fullyQualifiedName()) \n+      || FORBIDDEN_SUBTYPES.stream().anyMatch(expressionType::isSubtypeOf);\n+  }\n+  \n+  private static boolean isInitializedWithImmutable(ExpressionTree tree) {", "originalCommit": "728bf36d2b228c77c1e3012f9a9389c94c13b70b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3bd0a3aad597341588c5f4652c3ceb1d835b8c4a", "url": "https://github.com/SonarSource/sonar-java/commit/3bd0a3aad597341588c5f4652c3ceb1d835b8c4a", "message": "SONARJAVA-3634 Update rule description", "committedDate": "2020-12-18T16:36:13Z", "type": "commit"}]}