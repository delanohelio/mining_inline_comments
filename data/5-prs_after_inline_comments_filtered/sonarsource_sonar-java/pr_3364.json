{"pr_number": 3364, "pr_title": "SONARJAVA-3633 FP in S4032 when there are several source directories", "pr_createdAt": "2020-12-22T13:58:55Z", "pr_url": "https://github.com/SonarSource/sonar-java/pull/3364", "timeline": [{"oid": "cbc80d707f02809323b8c859927016a2263f0291", "url": "https://github.com/SonarSource/sonar-java/commit/cbc80d707f02809323b8c859927016a2263f0291", "message": "SONARJAVA-3633 FP in S4032 when there are several source directories", "committedDate": "2020-12-22T13:58:06Z", "type": "commit"}, {"oid": "dee94e241c351f192f13a266c014b19cd97a1076", "url": "https://github.com/SonarSource/sonar-java/commit/dee94e241c351f192f13a266c014b19cd97a1076", "message": "Add coverage for default package and multiple files from same package", "committedDate": "2020-12-22T14:24:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzgzMDk4NA==", "url": "https://github.com/SonarSource/sonar-java/pull/3364#discussion_r547830984", "bodyText": "The behavior of scanFile seems to be that it adds a package to one or the other but not both. Is the explicit removal of valid packages from the the set of unneeded packages necessary?", "author": "dorian-burihabwa-sonarsource", "createdAt": "2020-12-23T09:02:48Z", "path": "java-checks/src/main/java/org/sonar/java/checks/UselessPackageInfoCheck.java", "diffHunk": "@@ -20,23 +20,57 @@\n package org.sonar.java.checks;\n \n import java.io.File;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n import org.sonar.check.Rule;\n+import org.sonar.java.EndOfAnalysisCheck;\n+import org.sonar.java.checks.helpers.ExpressionsHelper;\n import org.sonar.plugins.java.api.JavaFileScanner;\n import org.sonar.plugins.java.api.JavaFileScannerContext;\n+import org.sonar.plugins.java.api.tree.PackageDeclarationTree;\n \n @Rule(key = \"S4032\")\n-public class UselessPackageInfoCheck implements JavaFileScanner {\n+public class UselessPackageInfoCheck implements JavaFileScanner, EndOfAnalysisCheck {\n+\n+  private final Map<String, JavaFileScannerContext> unneededPackageInfoFiles = new HashMap<>();\n+  private final Set<String> knownPackagesWithOtherFiles = new HashSet<>();\n \n   @Override\n   public void scanFile(JavaFileScannerContext context) {\n-    File file = context.getInputFile().file();\n-    if (\"package-info.java\".equals(file.getName()) && isOnlyFileFromPackage(file)) {\n-      context.addIssueOnFile(this, \"Remove this package.\");\n+    PackageDeclarationTree packageDeclaration = context.getTree().packageDeclaration();\n+    String packageName = packageDeclaration == null ? null : ExpressionsHelper.concatenate(packageDeclaration.packageName());\n+\n+    // default package or already processed package\n+    if (packageName == null || knownPackagesWithOtherFiles.contains(packageName)) {\n+      return;\n+    }\n+\n+    File packageDirectory = context.getInputFile().file().getParentFile();\n+    File packageInfoFile = new File(packageDirectory, \"package-info.java\");\n+    boolean hasOtherFiles = !isOnlyFileFromPackage(packageDirectory, packageInfoFile);\n+\n+    if (hasOtherFiles) {\n+      knownPackagesWithOtherFiles.add(packageName);\n+    } else if (packageInfoFile.isFile()) {\n+      unneededPackageInfoFiles.put(packageName, context);\n+    }\n+  }\n+\n+  @Override\n+  public void endOfAnalysis() {\n+    unneededPackageInfoFiles.keySet().removeAll(knownPackagesWithOtherFiles);", "originalCommit": "dee94e241c351f192f13a266c014b19cd97a1076", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzg3NzUwNg==", "url": "https://github.com/SonarSource/sonar-java/pull/3364#discussion_r547877506", "bodyText": "Yes, it is needed to avoid FP in case the analysis scan the same package multiple times (from different source folder). In such a case, the package may be present in both collections, but we do not want to raise an issue.", "author": "christophe-zurn-sonarsource", "createdAt": "2020-12-23T10:03:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzgzMDk4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzg0NzMxMw==", "url": "https://github.com/SonarSource/sonar-java/pull/3364#discussion_r547847313", "bodyText": "To avoid  the silent corruption of one of the test files,  we should probably repeat the test with a call to singular onFile.", "author": "dorian-burihabwa-sonarsource", "createdAt": "2020-12-23T09:21:22Z", "path": "java-checks/src/test/java/org/sonar/java/checks/UselessPackageInfoCheckTest.java", "diffHunk": "@@ -45,7 +45,17 @@ void withOtherFile() {\n   @Test\n   void notAPackageInfo() {\n     JavaCheckVerifier.newVerifier()\n-      .onFile(testSourcesPath(\"checks/UselessPackageInfoCheck/packageWithNoOtherFilesButNotPackageInfo/HelloWorld.java\"))\n+      .onFiles(", "originalCommit": "dee94e241c351f192f13a266c014b19cd97a1076", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7ba67bff3814662362e579ad075ad5fde8790df2", "url": "https://github.com/SonarSource/sonar-java/commit/7ba67bff3814662362e579ad075ad5fde8790df2", "message": "Update following review", "committedDate": "2020-12-23T10:02:30Z", "type": "commit"}]}