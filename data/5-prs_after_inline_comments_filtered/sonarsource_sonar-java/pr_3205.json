{"pr_number": 3205, "pr_title": "Use ParameterizedTest instead of duplicating code", "pr_createdAt": "2020-09-22T09:50:47Z", "pr_url": "https://github.com/SonarSource/sonar-java/pull/3205", "timeline": [{"oid": "4093fe42e81d2f304ff3b5f94319929d2a672553", "url": "https://github.com/SonarSource/sonar-java/commit/4093fe42e81d2f304ff3b5f94319929d2a672553", "message": "Use ParameterizedTest instead of duplicating code", "committedDate": "2020-09-22T09:44:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYxMjQ0MQ==", "url": "https://github.com/SonarSource/sonar-java/pull/3205#discussion_r492612441", "bodyText": "This is the only refactoring that went not smoothly.\nI started with a @CsvSource, and the result was kind of messy, with string on multiple lines, it was not so clear to separate the differents values.\nI then used a @MethodSource and I feel that it's much better, even with the comments that were originally present in the different tests, the result is good.", "author": "quentin-jaquier-sonarsource", "createdAt": "2020-09-22T09:56:00Z", "path": "java-frontend/src/test/java/org/sonar/java/cfg/VariableReadExtractorTest.java", "diffHunk": "@@ -35,13 +39,30 @@ private static MethodTree buildMethodTree(String methodCode) {\n     return (MethodTree) ((ClassTree) cut.types().get(0)).members().get(2);\n   }\n \n-  @Test\n-  void should_extract_local_vars_read() {\n-    MethodTree methodTree = buildMethodTree(\"void foo(boolean a) { new Object() { void foo() { System.out.println(a);} };  }\");\n+  @ParameterizedTest(name = \"[{index}] With includeFields={1}, {2} read variable should be extracted from method code: {0}]\")\n+  @MethodSource(\"provideExtractionTest\")\n+  void should_extract_correctly(String methodCode, boolean includeFields, int size) {", "originalCommit": "4093fe42e81d2f304ff3b5f94319929d2a672553", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}