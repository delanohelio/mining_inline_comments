{"pr_number": 2772, "pr_title": "SONARJAVA-3240 Fixing handling of exceptions in rules", "pr_createdAt": "2020-01-27T14:36:03Z", "pr_url": "https://github.com/SonarSource/sonar-java/pull/2772", "timeline": [{"oid": "d435855788359b7de92e8c24068ec969fab46768", "url": "https://github.com/SonarSource/sonar-java/commit/d435855788359b7de92e8c24068ec969fab46768", "message": "Handle exception during visit for subscription visitors", "committedDate": "2020-01-27T16:45:13Z", "type": "forcePushed"}, {"oid": "4d79624cfc661f320d93d86e7600bf20a6ba4ede", "url": "https://github.com/SonarSource/sonar-java/commit/4d79624cfc661f320d93d86e7600bf20a6ba4ede", "message": "Handle exception during visit for subscription visitors", "committedDate": "2020-01-27T17:10:39Z", "type": "forcePushed"}, {"oid": "bd03715de9554d2d25f206bdfcf59302e440778f", "url": "https://github.com/SonarSource/sonar-java/commit/bd03715de9554d2d25f206bdfcf59302e440778f", "message": "Handle exception during visit for subscription visitors", "committedDate": "2020-01-27T17:20:08Z", "type": "forcePushed"}, {"oid": "911f72e2245876cf23ec7c938780e95715671724", "url": "https://github.com/SonarSource/sonar-java/commit/911f72e2245876cf23ec7c938780e95715671724", "message": "Catch unexpected Exception at file level", "committedDate": "2020-01-28T13:24:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTg1NTU1Mw==", "url": "https://github.com/SonarSource/sonar-java/pull/2772#discussion_r371855553", "bodyText": "In the current situation, if you want to implement this behavior, you can remove the two try/catch in visitFile(), the CheckFailureException will be catched in JavaAstScanner::simpleScan and fail fast if needed.\nHowever:\n\nin the case of IssuableSubscriptionVisitors, it will not change anything as it is the last step of the visit.\ndo we really want to report no issue on a file who fails SymbolicExecution checks?", "author": "quentin-jaquier-sonarsource", "createdAt": "2020-01-28T15:01:35Z", "path": "java-frontend/src/main/java/org/sonar/java/model/VisitorsBridge.java", "diffHunk": "@@ -175,22 +175,20 @@ private void runScanner(Runnable action, JavaFileScanner scanner, AnalysisError.\n       // bad configuration of a rule parameter, we want to fail analysis fast.\n       throw new AnalysisException(\"Bad configuration of rule parameter\", e);\n     } catch (Exception e) {\n-      if (sonarComponents != null && sonarComponents.shouldFailAnalysisOnException()) {\n-        throw e;\n-      }\n       Throwable rootCause = Throwables.getRootCause(e);\n       if (rootCause instanceof InterruptedIOException || rootCause instanceof InterruptedException) {\n         throw e;\n       }\n+\n       String ruleKey = ruleKey(scanner);\n-      LOG.error(\n-        String.format(\"Unable to run check %s - %s on file '%s', To help improve SonarJava, please report this problem to SonarSource : see https://www.sonarqube.org/community/\",\n-          scanner.getClass(), ruleKey, currentFile),\n-        e);\n+      String message = String.format(\n+        \"Unable to run check %s - %s on file '%s', To help improve SonarJava, please report this problem to SonarSource : see https://www.sonarqube.org/community/\",\n+        scanner.getClass(), ruleKey, currentFile);\n+\n+      LOG.error(message, e);\n       addAnalysisError(e, currentFile, kind);\n \n-      // for IssuableSubscriptionVisitors as well as for SymbolicExecution, this should lead to changing file", "originalCommit": "b196dd6eb1009f4124d8c2871ae1ec08e1464d7b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "dae4270470e8bb714ec8a6bcf0ea60a6a1fdb066", "url": "https://github.com/SonarSource/sonar-java/commit/dae4270470e8bb714ec8a6bcf0ea60a6a1fdb066", "message": "Don't fail fast before logging", "committedDate": "2020-01-28T15:08:09Z", "type": "forcePushed"}, {"oid": "01f061b0d6fc199a65682f033090438d17386557", "url": "https://github.com/SonarSource/sonar-java/commit/01f061b0d6fc199a65682f033090438d17386557", "message": "Add test for SECheck", "committedDate": "2020-01-29T09:07:14Z", "type": "forcePushed"}, {"oid": "ef52359fff05c698d83f48d6bbf160c8e614b7d2", "url": "https://github.com/SonarSource/sonar-java/commit/ef52359fff05c698d83f48d6bbf160c8e614b7d2", "message": "SONARJAVA-3240 Fix handling of exceptions happening in rules", "committedDate": "2020-01-29T11:54:06Z", "type": "commit"}, {"oid": "ef52359fff05c698d83f48d6bbf160c8e614b7d2", "url": "https://github.com/SonarSource/sonar-java/commit/ef52359fff05c698d83f48d6bbf160c8e614b7d2", "message": "SONARJAVA-3240 Fix handling of exceptions happening in rules", "committedDate": "2020-01-29T11:54:06Z", "type": "forcePushed"}, {"oid": "fb52f32e7a8dc64071d3e0eb735914299b2c454a", "url": "https://github.com/SonarSource/sonar-java/commit/fb52f32e7a8dc64071d3e0eb735914299b2c454a", "message": "SONARJAVA-3240 Rename fail-fast property\n\nFrom 'sonar.java.failOnException' to  'sonar.internal.analysis.failFast'", "committedDate": "2020-01-29T12:21:01Z", "type": "commit"}, {"oid": "fb52f32e7a8dc64071d3e0eb735914299b2c454a", "url": "https://github.com/SonarSource/sonar-java/commit/fb52f32e7a8dc64071d3e0eb735914299b2c454a", "message": "SONARJAVA-3240 Rename fail-fast property\n\nFrom 'sonar.java.failOnException' to  'sonar.internal.analysis.failFast'", "committedDate": "2020-01-29T12:21:01Z", "type": "forcePushed"}]}