{"pr_number": 2693, "pr_title": "Fix domain name being passed to the domain name free zone when using userStorePreferenceOrder", "pr_createdAt": "2020-05-31T12:25:59Z", "pr_url": "https://github.com/wso2/carbon-kernel/pull/2693", "timeline": [{"oid": "5ea113d899e613b784f4a816afad66badb143d6f", "url": "https://github.com/wso2/carbon-kernel/commit/5ea113d899e613b784f4a816afad66badb143d6f", "message": "Fix domain name being passed to the domain name free zone when using userStorePreferenceOrder", "committedDate": "2020-05-31T12:21:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk2Njk2Ng==", "url": "https://github.com/wso2/carbon-kernel/pull/2693#discussion_r432966966", "bodyText": "Shall we change this is invalid? WDYT?", "author": "somindatommy", "createdAt": "2020-05-31T17:24:33Z", "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/AbstractUserStoreManager.java", "diffHunk": "@@ -9633,6 +9641,32 @@ private boolean isUserStoreChainNeeded(List<String> userStorePreferenceOrder) th\n     private boolean generateUserStoreChain(String userName, Object credential, boolean domainProvided,\n                                            List<String> userStorePreferenceOrder) throws UserStoreException {\n \n+        // If domain name is provided, directly authenticate using the corresponding user store.\n+        if (domainProvided) {\n+            String providedDomainName = this.getUserStore(userName).getDomainName();\n+            // Check whether provided domain is in the preference list.\n+            if (!userStorePreferenceOrder.contains(providedDomainName)) {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Authentication failure. Wrong username or password is provided.\");", "originalCommit": "5ea113d899e613b784f4a816afad66badb143d6f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzAyOTE3Mw==", "url": "https://github.com/wso2/carbon-kernel/pull/2693#discussion_r433029173", "bodyText": "Done", "author": "DinikaSen", "createdAt": "2020-06-01T03:41:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk2Njk2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk2NzEwNQ==", "url": "https://github.com/wso2/carbon-kernel/pull/2693#discussion_r432967105", "bodyText": "Shall we end the sentence from instance of AbstractUserStoreManager and begin a new sentence? WDYT?", "author": "somindatommy", "createdAt": "2020-05-31T17:26:19Z", "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/AbstractUserStoreManager.java", "diffHunk": "@@ -9633,6 +9641,32 @@ private boolean isUserStoreChainNeeded(List<String> userStorePreferenceOrder) th\n     private boolean generateUserStoreChain(String userName, Object credential, boolean domainProvided,\n                                            List<String> userStorePreferenceOrder) throws UserStoreException {\n \n+        // If domain name is provided, directly authenticate using the corresponding user store.\n+        if (domainProvided) {\n+            String providedDomainName = this.getUserStore(userName).getDomainName();\n+            // Check whether provided domain is in the preference list.\n+            if (!userStorePreferenceOrder.contains(providedDomainName)) {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Authentication failure. Wrong username or password is provided.\");\n+                }\n+                handleOnAuthenticateFailure(ErrorMessages.ERROR_CODE_ERROR_WHILE_AUTHENTICATION.getCode(),\n+                        String.format(ErrorMessages.ERROR_CODE_ERROR_WHILE_AUTHENTICATION.getMessage(),\n+                                \"Authentication failed\"), userName, credential);\n+                throw new UserStoreException(\"Authentication failed. Invalid username or password.\");\n+            }\n+            UserStoreManager userStoreManager = this.getSecondaryUserStoreManager(providedDomainName);\n+            if (!(userStoreManager instanceof AbstractUserStoreManager)) {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"UserStoreManager is not an instance of AbstractUserStoreManager hence authenticate \" +", "originalCommit": "5ea113d899e613b784f4a816afad66badb143d6f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk2NzE1OA==", "url": "https://github.com/wso2/carbon-kernel/pull/2693#discussion_r432967158", "bodyText": "And shall we do the same in other relevant places?", "author": "somindatommy", "createdAt": "2020-05-31T17:27:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk2NzEwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzAyOTE5NA==", "url": "https://github.com/wso2/carbon-kernel/pull/2693#discussion_r433029194", "bodyText": "Done", "author": "DinikaSen", "createdAt": "2020-06-01T03:41:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk2NzEwNQ=="}], "type": "inlineReview"}, {"oid": "74ae56a98cee2264181b99ae7432573049fac268", "url": "https://github.com/wso2/carbon-kernel/commit/74ae56a98cee2264181b99ae7432573049fac268", "message": "Address comments of the PR", "committedDate": "2020-06-01T03:39:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzA0NzczMQ==", "url": "https://github.com/wso2/carbon-kernel/pull/2693#discussion_r477047731", "bodyText": "Is it possible to extract this logic to a method and reuse?", "author": "vihanga-liyanage", "createdAt": "2020-08-26T05:45:27Z", "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/AbstractUserStoreManager.java", "diffHunk": "@@ -10180,6 +10214,34 @@ private AuthenticationResult generateUserStoreChainWithID(String preferredUserNa\n             String preferredUserNameValue, Object credential, String profileName, boolean domainProvided,\n             List<String> userStorePreferenceOrder) throws UserStoreException {\n \n+        // If domain name is provided, directly authenticate using the corresponding user store.\n+        if (domainProvided) {\n+            String providedDomainName = this.getUserStore(preferredUserNameValue).getDomainName();\n+            // Check whether provided domain is in the preference list.\n+            if (!userStorePreferenceOrder.contains(providedDomainName)) {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Authentication failure. Invalid username or password is provided.\");\n+                }\n+                handleOnAuthenticateFailure(ErrorMessages.ERROR_CODE_ERROR_WHILE_AUTHENTICATION.getCode(),\n+                        String.format(ErrorMessages.ERROR_CODE_ERROR_WHILE_AUTHENTICATION.getMessage(),\n+                                \"Authentication failed\"), preferredUserNameValue, credential);\n+                throw new UserStoreException(\"Authentication failed. Invalid username or password.\");\n+            }\n+            UserStoreManager userStoreManager = this.getSecondaryUserStoreManager(providedDomainName);\n+            if (!(userStoreManager instanceof AbstractUserStoreManager)) {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"UserStoreManager is not an instance of AbstractUserStoreManager. Hence \" +\n+                            \"authenticate the user through all the available user store list.\");\n+                }\n+                return authenticateInternalWithID(preferredUserNameClaim, preferredUserNameValue, credential,\n+                        profileName, domainProvided);\n+            }\n+            IterativeUserStoreManager iterativeUserStoreManager = new IterativeUserStoreManager(\n+                    (AbstractUserStoreManager) userStoreManager);\n+            return iterativeUserStoreManager.\n+                    authenticateWithID(preferredUserNameClaim, preferredUserNameValue, credential, profileName);\n+        }", "originalCommit": "74ae56a98cee2264181b99ae7432573049fac268", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM0OTU3Ng==", "url": "https://github.com/wso2/carbon-kernel/pull/2693#discussion_r485349576", "bodyText": "Addressed in #2765", "author": "DinikaSen", "createdAt": "2020-09-09T05:37:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzA0NzczMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI3MTg2Ng==", "url": "https://github.com/wso2/carbon-kernel/pull/2693#discussion_r482271866", "bodyText": "Why don't we use UserCoreUtil.extractDomainFromName(userName) here.", "author": "ashensw", "createdAt": "2020-09-02T18:17:31Z", "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/AbstractUserStoreManager.java", "diffHunk": "@@ -9633,6 +9641,32 @@ private boolean isUserStoreChainNeeded(List<String> userStorePreferenceOrder) th\n     private boolean generateUserStoreChain(String userName, Object credential, boolean domainProvided,\n                                            List<String> userStorePreferenceOrder) throws UserStoreException {\n \n+        // If domain name is provided, directly authenticate using the corresponding user store.\n+        if (domainProvided) {\n+            String providedDomainName = this.getUserStore(userName).getDomainName();", "originalCommit": "74ae56a98cee2264181b99ae7432573049fac268", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM0OTYxMQ==", "url": "https://github.com/wso2/carbon-kernel/pull/2693#discussion_r485349611", "bodyText": "Addressed in #2765", "author": "DinikaSen", "createdAt": "2020-09-09T05:37:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI3MTg2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI3MTkwNw==", "url": "https://github.com/wso2/carbon-kernel/pull/2693#discussion_r482271907", "bodyText": "Why don't we use UserCoreUtil.extractDomainFromName(userName) here.", "author": "ashensw", "createdAt": "2020-09-02T18:17:35Z", "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/AbstractUserStoreManager.java", "diffHunk": "@@ -10180,6 +10214,34 @@ private AuthenticationResult generateUserStoreChainWithID(String preferredUserNa\n             String preferredUserNameValue, Object credential, String profileName, boolean domainProvided,\n             List<String> userStorePreferenceOrder) throws UserStoreException {\n \n+        // If domain name is provided, directly authenticate using the corresponding user store.\n+        if (domainProvided) {\n+            String providedDomainName = this.getUserStore(preferredUserNameValue).getDomainName();", "originalCommit": "74ae56a98cee2264181b99ae7432573049fac268", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM0OTg4NA==", "url": "https://github.com/wso2/carbon-kernel/pull/2693#discussion_r485349884", "bodyText": "Addressed in #2765", "author": "DinikaSen", "createdAt": "2020-09-09T05:38:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI3MTkwNw=="}], "type": "inlineReview"}]}