{"pr_number": 8856, "pr_title": "New entry in settings for cache details to disable extraction of waypoints from personal cache notes", "pr_createdAt": "2020-08-20T21:28:59Z", "pr_url": "https://github.com/cgeo/cgeo/pull/8856", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI4OTU5Ng==", "url": "https://github.com/cgeo/cgeo/pull/8856#discussion_r474289596", "bodyText": "IMHO this line is not needed, as this setting is new, so no need to migrate.", "author": "moving-bits", "createdAt": "2020-08-20T21:44:04Z", "path": "main/src/cgeo/geocaching/settings/Settings.java", "diffHunk": "@@ -194,6 +194,7 @@ private static void migrateSettings() {\n             e.putInt(getKey(R.string.pref_defaultNavigationTool), prefsV0.getInt(getKey(R.string.pref_defaultNavigationTool), NavigationAppsEnum.COMPASS.id));\n             e.putInt(getKey(R.string.pref_defaultNavigationTool2), prefsV0.getInt(getKey(R.string.pref_defaultNavigationTool2), NavigationAppsEnum.INTERNAL_MAP.id));\n             e.putBoolean(getKey(R.string.pref_debug), prefsV0.getBoolean(getKey(R.string.pref_debug), false));\n+            e.putBoolean(getKey(R.string.pref_global_wp_extraction_disable), prefsV0.getBoolean(getKey(R.string.pref_global_wp_extraction_disable), false));", "originalCommit": "1bda34ad6753875e2f3bb08e15efc4478514b31b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMwMjkxMQ==", "url": "https://github.com/cgeo/cgeo/pull/8856#discussion_r474302911", "bodyText": "I wasn't sure ;) Now I have removed it.", "author": "baiti", "createdAt": "2020-08-20T22:17:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI4OTU5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI5Mjc0MQ==", "url": "https://github.com/cgeo/cgeo/pull/8856#discussion_r474292741", "bodyText": "Not sure if I understand this condition correctly. To my understanding we wanted to implement an opt-out system. Wouldn't we need to check this in the Geocache class then instead of here? Distinguish on cache-level between a manually set value (true/false), which would override the global setting, and a \"not yet set\" value, which would activate the global setting for this cache?", "author": "moving-bits", "createdAt": "2020-08-20T21:51:17Z", "path": "main/src/cgeo/geocaching/models/Geocache.java", "diffHunk": "@@ -1558,7 +1558,7 @@ public boolean addWaypointsFromNote() {\n      */\n     public boolean addWaypointsFromText(@Nullable final String text, final boolean updateDb, @NonNull final String namePrefix, final boolean forceExtraction) {\n         boolean changed = false;\n-        if (forceExtraction || !preventWaypointsFromNote) {\n+        if (forceExtraction || (!Settings.isGlobalWpExtractionDisabled() && !preventWaypointsFromNote)) {", "originalCommit": "1bda34ad6753875e2f3bb08e15efc4478514b31b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI5NDMyOQ==", "url": "https://github.com/cgeo/cgeo/pull/8856#discussion_r474294329", "bodyText": "To my understanding we wanted to implement an opt-out system.\n\nCannot judge the code, but indeed an opt-out system was the idea:\n\nIf the setting is not active (which should be default) waypoints are extracted and only surpressed if the user activates the checkbox under the specific personal note.\nIt the setting is active (set by user, no default) the checkbox should be activated by default for all caches and can be individually deactivated by the user for each cache.", "author": "Lineflyer", "createdAt": "2020-08-20T21:55:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI5Mjc0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI5OTI0MA==", "url": "https://github.com/cgeo/cgeo/pull/8856#discussion_r474299240", "bodyText": "To my understanding we wanted to implement an opt-out system.\n\nCannot judge the code, but indeed an opt-out system was the idea:\n\nIf the setting is not active (which should be default) waypoints are extracted and only surpressed if the user activates the checkbox under the specific personal note.\n\n\nThat is indeed the implemented behaviour\n\n\nIt the setting is active (set by user, no default) the checkbox should be activated by default for all caches and can be individually deactivated by the user for each cache.\n\n\nAhh ok, that is not what the change does at the moment, however, I agree that is a much better. I understand that this type of change does not go into the place I put it. I have not found out yet, where in the code I could set the checkbox you mentioned but I will investigate that tomorrow.\nOnce I have it done, would I do another push into the same branch?", "author": "baiti", "createdAt": "2020-08-20T22:07:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI5Mjc0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMwMTExOQ==", "url": "https://github.com/cgeo/cgeo/pull/8856#discussion_r474301119", "bodyText": "Ahh ok, that is not what the change does at the moment, however, I agree that is a much better. I understand that this type of change does not go into the place I put it. I have not found out yet, where in the code I could set the checkbox you mentioned but I will investigate that tomorrow.\n\nDatabase change would go into storage/DataStore, applying the default value to models/Geocache (IIRC).\n\nOnce I have it done, would I do another push into the same branch?\n\nYes, for the time being. (At then end, when everything is fine, we would squash the individual commits into one commit containing all the changes necessary for this PR.)\nThanks for working on this issue! Very welcomed!", "author": "moving-bits", "createdAt": "2020-08-20T22:12:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI5Mjc0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQ2NzI1NQ==", "url": "https://github.com/cgeo/cgeo/pull/8856#discussion_r474467255", "bodyText": "It the setting is active (set by user, no default) the checkbox should be activated by default for all caches and can be individually deactivated by the user for each cache.\n\n\nAhh ok, that is not what the change does at the moment, however, I agree that is a much better. I understand that this type of change does not go into the place I put it. I have not found out yet, where in the code I could set the checkbox you mentioned but I will investigate that tomorrow.\n\nSorry for late comment..\nImho, the easiest way to achieve the desired behaviour is to set the default setting of Geocache.preventWaypointsFromNote to the new setting. Meaning: in Geocache.java, change line 176:\n    private boolean preventWaypointsFromNote = false;\nto\n    private boolean preventWaypointsFromNote = Settings.isGlobalWpExtractionDisabled();\nThat way the checkbox handling is automatically \"done\", and also the value would be correctly overridden from Database in case the cache is already stored there with a different setting.", "author": "eddiemuc", "createdAt": "2020-08-21T07:27:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI5Mjc0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQ4MTIwNA==", "url": "https://github.com/cgeo/cgeo/pull/8856#discussion_r474481204", "bodyText": "It the setting is active (set by user, no default) the checkbox should be activated by default for all caches and can be individually deactivated by the user for each cache.\n\n\nAhh ok, that is not what the change does at the moment, however, I agree that is a much better. I understand that this type of change does not go into the place I put it. I have not found out yet, where in the code I could set the checkbox you mentioned but I will investigate that tomorrow.\n\nSorry for late comment..\nImho, the easiest way to achieve the desired behaviour is to set the default setting of Geocache.preventWaypointsFromNote to the new setting. Meaning: in Geocache.java, change line 176:\n private boolean preventWaypointsFromNote = false;\nto\n private boolean preventWaypointsFromNote = Settings.isGlobalWpExtractionDisabled();\nThat way the checkbox handling is automatically \"done\", and also the value would be correctly overridden from Database in case the cache is already stored there with a different setting.\n\nHi Eddie, you wouldn't believe it, that is exactly the change I just made ;) I have started to test it and it works as expected and as discussed in this thread yesterday.\nI am going to push it shortly. Please have a look at the code and prefereably I'd also want some of you to give it a real try and walk through some usage scenarios on the device.", "author": "baiti", "createdAt": "2020-08-21T07:43:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI5Mjc0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQ5MDk3Mw==", "url": "https://github.com/cgeo/cgeo/pull/8856#discussion_r474490973", "bodyText": "I have just committed it into yesterday's pull request. I hope this was the right way doing it from a process point of view.", "author": "baiti", "createdAt": "2020-08-21T07:55:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI5Mjc0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDU2ODI4NQ==", "url": "https://github.com/cgeo/cgeo/pull/8856#discussion_r474568285", "bodyText": "Hi Eddie, you wouldn't believe it, that is exactly the change I just made ;) I have started to test it and it works as expected and as discussed in this thread yesterday.\n\nGreat thing!\nThere is a complication I did not think of (and how I feel a bit guilty having lead you in the wrong direction): it seems that Settings can only be used in the context of c:geo application because it internally uses SharedPreferences. This is a problem when Geocache is used outside of c:geo application context (in that case, CgeoApplication.getInstance() will return null).\nHowever, Geocache is used outside an applications context when (local) unit tests are executed. This is why in CI multiple tests for your PR fails with java.lang.NoClassDefFoundError: Could not initialize class cgeo.geocaching.settings.Settings\n(I assume this happens because Settings has a static initializer calling migrateSettings(), which in turn tries to use the sharedpreferences and fails - thus the class cannot be loaded)\nI have currently no idea how to deal with this unfortunately. Have to think about this", "author": "eddiemuc", "createdAt": "2020-08-21T09:21:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI5Mjc0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgyODQ4NQ==", "url": "https://github.com/cgeo/cgeo/pull/8856#discussion_r474828485", "bodyText": "Another tiny caveat with this solution is that you have to restart c:geo completely to make a change to this setting become effective for all caches already loaded. (That's why I proposed a \"not yet set\" value to the cache data, to be able to dynamically set the value on retrieval.) - OTOH your solution is much more elegant, and IMHO we can live with having to restart the app on changing this setting, as it is no setting you would change frequently. Just add a little note for it in the summary text (as we have in other areas of settings, too).", "author": "moving-bits", "createdAt": "2020-08-21T17:22:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI5Mjc0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA3NDI5NQ==", "url": "https://github.com/cgeo/cgeo/pull/8856#discussion_r475074295", "bodyText": "With respect to the tests failing, I have to admit that is currently over my head, given my limited unterstanding of the overall concepts here. I'd assume that in a CI environment there would be an instance of the \"Settings\" object but apparently this is not the case. I wonder whether other componentry under test would also reference that object and fail to test too?\nNow to @moving-bits comment:  Does restarting the app really make a difference for objects that are already loaded and persisted? Here is the scenario I observe on 2020.08.04:\nLet me apologize first for the long text now coming. I see this not only as a discussion but also a means to document the behaviour and rationales. (Or do we have some design documentation somehere? if yes, pls point me to it):\n\nIf I load (or refresh) a geocache object, Waypoints will be extracted from the PCNs unconditionally\nIf I go into the PCN editor and set the checkbox and leave the editor with the \"ok\", then nothing changes. Specifically the waypoint(s) that have been extracted before, will not be removed\nNow if I go into the PCN editor again, and change the content of the PCN such that an additional coordinate is in there, that new coordinate will not be extracted into a new WP when I close the PCN editor with \"ok\".\nIf I want to get rid of the extracted waypoints, I'd have to go and manually delete each one of them individually.\nAt that point I thought well ok, that flag in the editor is now set, why don't I just referesh the object from GC.com, that will make c'geo see the flag in the PCN editor, honor it and my refreshed cache will end up with no extracted waypoints whatsoever, which would exactly be the preference I wanted as I in general believe it is a bad idea to try to programmatically make sense of a text field into which a user can punch whatever he/she wants. Now if I really do this, everything is as before. The flag in the PCNs is off, all WPs have been extracted from the PCNs. It is as if that flag had never been set. Other users might have a different view of whether this is a bad idea or not and this is where the new global flag comes into play ...\n\nLet us now come to the new global flag, they have a choice:\n\nIf a new version of c'geo is installed, a version that has the new global flag, and the user never changes any setting, the application behaves exactly as before and described above.\nIf he now sets the global flag, it will not change anything to geocache objects that have already been persisted. Specifially it will not remove any waypoints that had been extracted before that global flag even existed and it will also not remove any waypoints that had been extracted while that global flag was not yet set.\nSetting the global flag only makes a difference when the user, after setting it, goes into the PCN editor, where he will see that prevent flag now being set, even if it wasn't set by him explicitly and if he then adds additional coordinates to the PCN field, leaves the editor, then the newly entered coordinates won't be extracted into a new WP. None of the previously extracted WPs will be removed.\nThe only way to \"cleanup the mess\", meaning to get rid of all these extracted waypoints is to refresh the cache object(s) from GC.com while the global flag was set and that is actually the very essence of that global flag for me. No restarting of the app is required in order to make this scenario work though. At this point I have not grasped what will be different after restarting the app. It would be an interesting thought if setting that global flag would cause us to iterate through all persisted objects and remove all WPs that had previously been extracted. I'd guess that we do not even have an indication exactly which of the waypoints are the result of the automatich extraction from the PCNs which would make it potentially a bad idea to even think about iterating through the persisted objects in the first place.\n\nHere is what I'd do if and once the global flag became available:\n\nI'd go and set the global flag\nThen I'd go into the list called \"All caches\" and I'd do a \"Refresh All\" and then wait for many hours untill all my 18,000 caches have been refreshed and all potentially extracted waypoints elliminiated that way.\n\nNow comes an interesting point:\nIn that state, global flag set, all caches refreshed, If I now go out in the field and it happens that I learn something, for instance in a field puzzle, that leads to another coordinate, I may want to enter those coordinates into the PCN and now uncheck the prevent extraction flag because in this case, and for the first time, and for explicit reason I'd want an additonal waypoint for that cache extracted.\nIf that flag in the PCN editor never existed, I'd go into the WP list and click \"add new Waypoint\" and enter the newly calculated coordinates there. The problem with that approach is that I cannot synchronize that new WP with GC.com as they do not seem to have a way to render user generated waypoints in their existing UI. Using the first approach, entering the coords into the PCNs, I would upload the PCNs to GC.com and I would at least have some documentation of what I learned int the field.\nI'd assume that GC.com will at some point provide a way to manage user generated waypoints such that those can be managed just like cache owner defined waypoints for a Multi for instance. Meaning that those WPs will show up in the list of WPs as we see it today. I would further assume that c'geo can upload waypoints that have been created in the app either explicitly or via WP extractiion from PCNs. If you go and review GC's Live API you will see they have a notion of user created WPs. I do not (yet) know, what exactly they do with those but I'd expect more clarity in the future.\nHaving said and written all this: I think I'd be happy if that global flag implementation made it into the next release in the way it is now. I hope we can fix the CI issue with the \"Settings\" object being available during the test runs.\nLet me make one last comment here: I know hat Eddie could have implemented this in a fraction of time. I'd consider this rather simple function as an education step getting my feet wet and it might well be that I could do more in the future. I am more into Node JS and all kinds of other programming environments but not (yet) Java and not (yet) into collaborative development on GitHub, but willing to learn.", "author": "baiti", "createdAt": "2020-08-22T09:59:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI5Mjc0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA3NjMyNQ==", "url": "https://github.com/cgeo/cgeo/pull/8856#discussion_r475076325", "bodyText": "With respect to the tests failing, I have to admit that is currently over my head, given my limited unterstanding of the overall concepts here. I'd assume that in a CI environment there would be an instance of the \"Settings\" object but apparently this is not the case. I wonder whether other componentry under test would also reference that object and fail to test too?\n\nI assumed the same, and actually I think code should be adapted such that this is the case. I will take a look into this.\nRegarding your question how other tests do this: with android you have the option to write and run unit test in an \"instrumented\" way. Those tests are not run \"plain locally\" as normal unit tests do, but they are executed on your emulator against a running and installed version of the app. For THESE tests, Settings is indeed available. Downside of these tests is that they run much slower (due to installment before etc).\nSo I assume right now all tests wich directly or indirectly use Settings are \"instrumented\" tests\nIn c:geo all \"normal\" unit tests are currently located under cgeo\\tests\\src while instrumented tests are located under cgeo\\tests\\src-android (and the later uses oldfashioned test method style with test methods starting with \"test\" instead of using annotation @Test)\nimho using Settings should not be a reason to have to move tests to instrumented tests", "author": "eddiemuc", "createdAt": "2020-08-22T10:26:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI5Mjc0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA4MjA5Nw==", "url": "https://github.com/cgeo/cgeo/pull/8856#discussion_r475082097", "bodyText": "Hi @baiti,\nI have now read the complete text from above, and I want to comment on two things:\n\nHere is what I'd do if and once the global flag became available:\n\nI'd go and set the global flag\nThen I'd go into the list called \"All caches\" and I'd do a \"Refresh All\" and then wait for many hours untill all my 18,000 caches have been refreshed and all potentially extracted waypoints elliminiated that way.\n\n\nI am afraid that afaik \"refreshing\" a cache will not clear existing user-defined waypoints from the cache. I currently see no good way to remove all previously extracted waypoints from already stored caches, except if you explicitely remove them first.\n\nLet me make one last comment here: I know hat Eddie could have implemented this in a fraction of time.\n\nActually, I don't think that would have been true. I am a newbie on c:geo myself. It just so happens that as my first step I chose to implement functionality around Waypoint extraction from personal note, this is where my \"knowlede\" comes from. Also, as you noted, I did not foresee the problem with Settings in unit tests myself (again sorry for that), and I never worked on Settings before.\nIt would be great to have you onboard with c:geo also for the future and we appreciate every contribution to the project as valuable. I would be delighted if we will meet more often in the future trying to solve c:geo-issues together.", "author": "eddiemuc", "createdAt": "2020-08-22T11:44:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI5Mjc0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA4NDk5MA==", "url": "https://github.com/cgeo/cgeo/pull/8856#discussion_r475084990", "bodyText": "I am afraid that afaik \"refreshing\" a cache will not clear existing user-defined waypoints from the cache. I currently see no good way to remove all previously extracted waypoints from already stored caches, except if you explicitely remove them first.\n\nJust ran a test on the emulator and yes, you are right -- which is very unfortunate for my own understanding of how these tools or apps should work. I had assumed a \"refresh\" would work in a way that the object first gets deleted from the database and a newly created object then goes into the database completely replacing what was there before.\nMy own understanding when unsing any third party tooling is that geocaching.com is in all circumstances the one and only true authoritative source of information and whatever change I make with a 3rd party tool or app for that sake, has to be reflected back to geocaching.com and if I lateron refresh a geocache object I want the local copy of the data to be exactly the same as it is on geocaching.com. That includes whatever text is in the PCN field. I understand that c'geo has a different understanding as it somehow merges what was in the PCN before and what comes down with a refresh. separating the two areas with a \"--\" line (... which caused me headaches in the past, when I was trying to clean things up and have the same on GC and on c'geo)\nThe reason for this understanding is that I am using multiple different tools on different devices and I do not want to have different information or state on any of them so on a regular basis I refresh them all from GC.com and whatever tool makes a change, has to submit the change to GC.com either implicitly or explicitly.\nI know geocachers who have only that set of data on c'geo that they need for one tour or a few tours on a vacation trip. Afterwards they clean it all up. My usage scenario was that I never deleted anything from c'geo which is why I have now 18,000 objects on the device. Now if anybody called me up as a TJ, I could always and for all caches I ever found or solved, go into the PCN and say something about it. I guess I have to rethink that paradigm as things have changed over time in many 3rd party tooling ... and will in the future.\nTo give you some background on what I use:\nMobile\n-c'geo\n-Locus Map\nPC\n-GSAK\nCloud\n-geocaching.com\n-Project-GC\n-Xctrails", "author": "baiti", "createdAt": "2020-08-22T12:20:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI5Mjc0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA5MDMyNg==", "url": "https://github.com/cgeo/cgeo/pull/8856#discussion_r475090326", "bodyText": "Hi @baiti,\n\nI had assumed a \"refresh\" would work in a way that the object first gets deleted from the database and a newly created object then goes into the database completely replacing what was there before. My own understanding when unsing any third party tooling is that geocaching.com is in all circumstances the one and only true authoritative source of information and whatever change I make\n\nA \"refresh\" replaces all information in the cache which is \"owned\" by the geocaching plattform (e.g. listing, logs, ...). The problem here is that the user-defined waypoints are not \"owned\" by the plattform, they are a c:geo-specific thing not (yet) supported by geocaching.com. For other refresh scenarios (e.g. updating log list when in the field) it would be fatal if own waypoints would be deleted.\nI agree that the platform should be the one and only true source of all information. But at least currently, the only way that c:geo can store user-defined waypoint information on the platform is the personal note. This is imho the reason the waypoint parsing was implemented in c:geo in the first place - so you are somehow able to save this c:geo-specific information onto the platform and restore it back.\n(Actually you will find that in the next release this will be extended - see #5688 )\nI think what you are looking for could be achieved with some sort of \"purge-reload\" function which explicitely deletes the cache on the local device (on db, in cache,...) and then freshly reloads it. Sort of like deleting it from all c:geo-lists and then storing it in the same lists again. Maybe this is worth its own issue?\n\nseparating the two areas with a \"--\" line (... which caused me headaches in the past, when I was trying to clean things up and have the same on GC and on c'geo)\n\nSame here. Should be better with next release, see  #5854\nIn summary, it is my belief that c:geo tries to implement the \"plattform-data-first\" approch as best as possible while still providing c:geo-specific extensions (e.g. user-defined waypoints) and ensuring that no user-created data is accidentally overridden. It's not perfect, but it gets better with every pull request.", "author": "eddiemuc", "createdAt": "2020-08-22T13:27:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI5Mjc0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA5NDQ5OQ==", "url": "https://github.com/cgeo/cgeo/pull/8856#discussion_r475094499", "bodyText": "@eddiemuc you have summarized it nicely, especially the part:\n\nIn summary, it is my belief that c:geo tries to implement the \"plattform-data-first\" approch as best as possible while still providing c:geo-specific extensions (e.g. user-defined waypoints) and ensuring that no user-created data is accidentally overridden. It's not perfect, but it gets better with every pull request.\n\nEven though am in the game only since 2013 I know that the \"corrected coords\" topic had not been handled well on the platform and various tools, for instance also Project-GC depended on extracting those from the PCNs in order to render it on the map correctly. Now since \"the platform\", as you call it, has fixed that so it is no longer necessary for 3rd parties to deal with it in a custom way. Project-GC has implemented the \"caret feature\" to avoid the extraction, as I already stated elsewhere.\nAnd on the extracted waypoints: They (as in \"the platform\") must be working on something, however, it appears at this time half-baked at best. Look at the API:\nGet Geocache's User Waypoints\nGet User Waypoints\nCreate User Waypoint\nUpdate User Waypoint\nDelete User Waypoint\nI believe, if you do a \"Get User Waypoints\" they go and give you something they parsed out of the PCNs ... for the lack of something better. I am truely surprised that even \"the Gods\" take the liberty and parse the PCNs. This can only be an act of desparation.\nIf you do a Create User Waypoint, it will be created, however, You won't find it anywhere on the cache listing's web page on GC.com. Doing a subsequent Get Geocache's User Waypoints, you will get it back even though it never showed up on the PCN. You also don't get it back if you export a GPX out of the cache listing at GC.com, which makes me conclude it is half-baked at this time ;)\n\nI think what you are looking for could be achieved with some sort of \"purge-reload\" function which explicitely deletes the cache on the local device (on db, in cache,...) and then freshly reloads it. Sort of like deleting it from all c:geo-lists and then storing it in the same lists again. Maybe this is worth its own issue?\n\nYes, that would be a feature I'd make use of. I think it would be worth its own issue, at least we could discuss it there.", "author": "baiti", "createdAt": "2020-08-22T14:06:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI5Mjc0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA5NjMzNg==", "url": "https://github.com/cgeo/cgeo/pull/8856#discussion_r475096336", "bodyText": "Let me apologize first for the long text now coming.\n\nNot worries, and thanks for the detailed description of your thoughts - helps us to understand where the real pain is from users' perspective, and how to tackle it.\n\nNow to @moving-bits comment: Does restarting the app really make a difference for objects that are already loaded and persisted?\n\nNo, not for caches already persisted. I was thinking of the objects loaded to the in-memory cache of c:geo\n\n\nAt that point I thought well ok, that flag in the editor is now set, why don't I just referesh the object from GC.com, that will make c'geo see the flag in the PCN editor, honor it and my refreshed cache will end up with no extracted waypoints whatsoever\n\n\nThere is an open issue #8415 that this flag does not survive reloading of the cache.\nSo maybe a solution for the scenario you describe, or at least an add-on, could be to fix that issue as well.\n\nLet us now come to the new global flag, they have a choice:\n\nIf a new version of c'geo is installed, a version that has the new global flag, and the user never changes any setting, the application behaves exactly as before and described above.\n\n\nWhich would meet users' expectations.\n\nIf he now sets the global flag, it will not change anything to geocache objects that have already been persisted. Specifially it will not remove any waypoints that had been extracted before that global flag even existed and it will also not remove any waypoints that had been extracted while that global flag was not yet set.\n\nOk\n\nSetting the global flag only makes a difference when the user, after setting it, goes into the PCN editor, where he will see that prevent flag now being set, even if it wasn't set by him explicitly and if he then adds additional coordinates to the PCN field, leaves the editor, then the newly entered coordinates won't be extracted into a new WP. None of the previously extracted WPs will be removed.\n\nTo my understanding the global setting will only work for caches not yet stored in c:geo's database or those being refreshed (the latter only until #8415 is being fixed). Caches that get loaded from c:geo database will have a defined setting for this flag, either true or false, so they will ignore the global setting.\nIf we would have this setting as a tri-state true / false / use global setting the global flag could be applied on loading a cache.\nBut even then we would have the edge case of caches already in c:geo's in-memory-cache. On loading into the cache, they get a certain setting for this flag. If you now change the global setting, caches in-memory do not recognize this change in settings, and only would do so on reloading into the cache - which is why I had mentioned the complete app restart.\nOTOH if we implement the tri-state setting (true / false / use global setting) this would also solve this problem, as the specific setting could be applied not on loading the cache, but on opening the personal note edit dialog (sort of a \"late binding\") and being persisted after finishing editing.\n\nIn that state, global flag set, all caches refreshed, If I now go out in the field and it happens that I learn something, for instance in a field puzzle, that leads to another coordinate, I may want to enter those coordinates into the PCN and now uncheck the prevent extraction flag because in this case, and for the first time, and for explicit reason I'd want an additonal waypoint for that cache extracted.\nIf that flag in the PCN editor never existed, I'd go into the WP list and click \"add new Waypoint\" and enter the newly calculated coordinates there. The problem with that approach is that I cannot synchronize that new WP with GC.com as they do not seem to have a way to render user generated waypoints in their existing UI.\n\nThey do not know of the user-created waypoints in c:geo.\n\nUsing the first approach, entering the coords into the PCNs, I would upload the PCNs to GC.com and I would at least have some documentation of what I learned int the field.\n\nYou can no do this with the latest extension by @eddiemuc, available in the nightly versions of c:geo and next release, see #5688 for the original issue, and #8608 + #8758 for implementation.\n\nLet me make one last comment here: I know hat Eddie could have implemented this in a fraction of time. I'd consider this rather simple function as an education step getting my feet wet and it might well be that I could do more in the future. I am more into Node JS and all kinds of other programming environments but not (yet) Java and not (yet) into collaborative development on GitHub, but willing to learn.\n\nYour contribution, and the discussion, is highly appreciated! Everyone of us started working on c:geo at some point in time, having no knowledge of c:geo's internals, and very different knowledge of Java programming in general and Android programming specifically. But do not hesitate to ask, and we'll either try to answer your question directly, or start searching for the answer together.", "author": "moving-bits", "createdAt": "2020-08-22T14:28:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI5Mjc0MQ=="}], "type": "inlineReview"}, {"oid": "948a85e931071870371567b043522a512aad37d7", "url": "https://github.com/cgeo/cgeo/commit/948a85e931071870371567b043522a512aad37d7", "message": "new entry in settings for cache details to disable extraction of waypoints from personal cache notes", "committedDate": "2020-08-23T12:12:34Z", "type": "commit"}, {"oid": "883304f1f2a931f3c28b3a260f02a0265497786b", "url": "https://github.com/cgeo/cgeo/commit/883304f1f2a931f3c28b3a260f02a0265497786b", "message": "issue-8848", "committedDate": "2020-08-23T12:12:34Z", "type": "commit"}, {"oid": "f571f53298822ae5968ff1f50f87c7a30ffb2d25", "url": "https://github.com/cgeo/cgeo/commit/f571f53298822ae5968ff1f50f87c7a30ffb2d25", "message": "new entry in settings for cache details to disable extraction of waypoints from personal cache notes", "committedDate": "2020-08-23T12:36:09Z", "type": "commit"}, {"oid": "2ce09629c603ec3ecd16bf70e6606c9d00fc8479", "url": "https://github.com/cgeo/cgeo/commit/2ce09629c603ec3ecd16bf70e6606c9d00fc8479", "message": "issue-8848", "committedDate": "2020-08-23T12:36:09Z", "type": "commit"}]}