{"pr_number": 721, "pr_title": "Remove leading and trailing whitespaces from datastream name on creation", "pr_createdAt": "2020-06-15T20:37:57Z", "pr_url": "https://github.com/linkedin/brooklin/pull/721", "timeline": [{"oid": "e76d90e04b6b09d4e24337d06c86057ba7e74abd", "url": "https://github.com/linkedin/brooklin/commit/e76d90e04b6b09d4e24337d06c86057ba7e74abd", "message": "Remove leading and trailing whitespaces from datastream name on creation", "committedDate": "2020-06-15T20:33:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQzODUyNw==", "url": "https://github.com/linkedin/brooklin/pull/721#discussion_r440438527", "bodyText": "nit and feel free to ignore\" add this as its own test. easy to spot perhaps?", "author": "DEEPTHIKORAT", "createdAt": "2020-06-15T20:49:36Z", "path": "datastream-server-restli/src/test/java/com/linkedin/datastream/server/dms/TestDatastreamResources.java", "diffHunk": "@@ -559,11 +559,19 @@ public void testCreateDatastream() throws Exception {\n     Set<String> missingFields = new HashSet<>();\n \n     // happy path\n-    Datastream fullDatastream = generateDatastream(1);\n+    Datastream fullDatastream = generateDatastream(0);\n     CreateResponse response = resource.create(fullDatastream);\n     Assert.assertNull(response.getError());\n     Assert.assertEquals(response.getStatus(), HttpStatus.S_201_CREATED);\n \n+    Datastream whitespaceDatastream = generateDatastream(1);", "originalCommit": "e76d90e04b6b09d4e24337d06c86057ba7e74abd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0Mzg1MQ==", "url": "https://github.com/linkedin/brooklin/pull/721#discussion_r440443851", "bodyText": "You're right. I'll add a comment to make it stand out instead because this test method contains all the datastream creation test cases.", "author": "ahmedahamid", "createdAt": "2020-06-15T20:59:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQzODUyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQzODA0OQ==", "url": "https://github.com/linkedin/brooklin/pull/721#discussion_r440438049", "bodyText": "can  datastreamName be null?", "author": "somandal", "createdAt": "2020-06-15T20:48:37Z", "path": "datastream-server-restli/src/main/java/com/linkedin/datastream/server/dms/DatastreamResources.java", "diffHunk": "@@ -761,6 +761,14 @@ public CreateResponse create(Datastream datastream) {\n         metadataMap.put(DatastreamMetadataConstants.IS_USER_MANAGED_DESTINATION_KEY, \"true\");\n       }\n \n+      String datastreamName = datastream.getName();\n+      String trimmedDatastreamName = (datastreamName == null) ? datastreamName : datastreamName.trim();", "originalCommit": "e76d90e04b6b09d4e24337d06c86057ba7e74abd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0MTk4Ng==", "url": "https://github.com/linkedin/brooklin/pull/721#discussion_r440441986", "bodyText": "Not in production, yes otherwise (tests, manually constructed datastream objects)", "author": "ahmedahamid", "createdAt": "2020-06-15T20:56:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQzODA0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2MDk0Ng==", "url": "https://github.com/linkedin/brooklin/pull/721#discussion_r440460946", "bodyText": "Removed the null check. Turns out this is already covered by this call performed at the beginning of this method:\nDatastreamUtils.validateNewDatastream(datastream);", "author": "ahmedahamid", "createdAt": "2020-06-15T21:36:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQzODA0OQ=="}], "type": "inlineReview"}, {"oid": "6d86188c8dccade099c9cd48b23be604c771852d", "url": "https://github.com/linkedin/brooklin/commit/6d86188c8dccade099c9cd48b23be604c771852d", "message": "Address review comments", "committedDate": "2020-06-15T21:13:39Z", "type": "commit"}, {"oid": "8eb9bf7826d32231424af79410ade59399fbeb1e", "url": "https://github.com/linkedin/brooklin/commit/8eb9bf7826d32231424af79410ade59399fbeb1e", "message": "Address review comments", "committedDate": "2020-06-15T21:16:47Z", "type": "commit"}, {"oid": "ab495d883ef337ade265ac5127576062d3fb9385", "url": "https://github.com/linkedin/brooklin/commit/ab495d883ef337ade265ac5127576062d3fb9385", "message": "Remove extraneous null check", "committedDate": "2020-06-15T21:35:08Z", "type": "commit"}]}