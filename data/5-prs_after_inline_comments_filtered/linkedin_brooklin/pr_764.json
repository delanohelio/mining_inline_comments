{"pr_number": 764, "pr_title": "Log difference between old and new partition infos in PartitionDiscoveryThread, minor improvements for other logs", "pr_createdAt": "2020-10-12T23:17:37Z", "pr_url": "https://github.com/linkedin/brooklin/pull/764", "timeline": [{"oid": "23a5057a124390239cb86cf06a246b884eae5cd5", "url": "https://github.com/linkedin/brooklin/commit/23a5057a124390239cb86cf06a246b884eae5cd5", "message": "Log difference between old and new partition infos in PartitionDiscoveryThread, minor improvements for other logs", "committedDate": "2020-10-12T23:14:23Z", "type": "commit"}, {"oid": "4e9d265d91f4ab8e4e0ba93731b4c7d822d5e24c", "url": "https://github.com/linkedin/brooklin/commit/4e9d265d91f4ab8e4e0ba93731b4c7d822d5e24c", "message": "Adding datastream name to latency warn log", "committedDate": "2020-10-13T07:13:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDExMjA5Ng==", "url": "https://github.com/linkedin/brooklin/pull/764#discussion_r504112096", "bodyText": "IMO, Splitting this in two lines will make the search easier while debugging.", "author": "vmaheshw", "createdAt": "2020-10-13T16:53:07Z", "path": "datastream-kafka-connector/src/main/java/com/linkedin/datastream/connectors/kafka/mirrormaker/KafkaMirrorMakerConnector.java", "diffHunk": "@@ -313,12 +313,23 @@ public void run() {\n       while (!isInterrupted() && !_shutdown) {\n         try {\n           List<String> newPartitionInfo = getPartitionsInfo(consumer);\n-          LOG.debug(\"Fetch partition info for {}, oldPartitionInfo: {}, new Partition info: {}\"\n-              , datastream.getName(), _subscribedPartitions, newPartitionInfo);\n+          LOG.debug(\"Fetch Partitions Info for {}, old Partitions Info: {}, new Partitions Info: {}\",\n+              datastream.getName(), _subscribedPartitions, newPartitionInfo);\n \n           if (!ListUtils.isEqualList(newPartitionInfo, _subscribedPartitions)) {\n-            LOG.info(\"Get updated partition info for {}, oldPartitionInfo: {}, new Partition info: {}\"\n-                , datastream.getName(), _subscribedPartitions, newPartitionInfo);\n+            LOG.info(\"Get updated Partitions Info for {}, old Partitions Info: {}, new Partitions Info: {}\",\n+                datastream.getName(), _subscribedPartitions, newPartitionInfo);\n+\n+            List<String> addedTopicPartitions = newPartitionInfo\n+                .stream()\n+                .filter(topicPartition -> !_subscribedPartitions.contains(topicPartition))\n+                .collect(Collectors.toList());\n+            List<String> removedTopicPartitions = _subscribedPartitions\n+                .stream()\n+                .filter(topicPartition -> !newPartitionInfo.contains(topicPartition))\n+                .collect(Collectors.toList());\n+            LOG.info(\"TopicPartitions for {} that are to be added: {} and that are to be removed: {}\",", "originalCommit": "4e9d265d91f4ab8e4e0ba93731b4c7d822d5e24c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE0Njc4MA==", "url": "https://github.com/linkedin/brooklin/pull/764#discussion_r504146780", "bodyText": "done", "author": "somandal", "createdAt": "2020-10-13T17:51:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDExMjA5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDExNDMwMg==", "url": "https://github.com/linkedin/brooklin/pull/764#discussion_r504114302", "bodyText": "Converting these list into set, cache the set as well and doing:\nadded = NewSet - ExistingSet or NewSet.removeall(existingSet)\nremoved = ExistingSet - NewSet or ExistingSet.removeall(NewSet)\nwill make this operation faster. Right now its O(N^2) complexity.", "author": "vmaheshw", "createdAt": "2020-10-13T16:56:40Z", "path": "datastream-kafka-connector/src/main/java/com/linkedin/datastream/connectors/kafka/mirrormaker/KafkaMirrorMakerConnector.java", "diffHunk": "@@ -313,12 +313,23 @@ public void run() {\n       while (!isInterrupted() && !_shutdown) {\n         try {\n           List<String> newPartitionInfo = getPartitionsInfo(consumer);\n-          LOG.debug(\"Fetch partition info for {}, oldPartitionInfo: {}, new Partition info: {}\"\n-              , datastream.getName(), _subscribedPartitions, newPartitionInfo);\n+          LOG.debug(\"Fetch Partitions Info for {}, old Partitions Info: {}, new Partitions Info: {}\",\n+              datastream.getName(), _subscribedPartitions, newPartitionInfo);\n \n           if (!ListUtils.isEqualList(newPartitionInfo, _subscribedPartitions)) {\n-            LOG.info(\"Get updated partition info for {}, oldPartitionInfo: {}, new Partition info: {}\"\n-                , datastream.getName(), _subscribedPartitions, newPartitionInfo);\n+            LOG.info(\"Get updated Partitions Info for {}, old Partitions Info: {}, new Partitions Info: {}\",\n+                datastream.getName(), _subscribedPartitions, newPartitionInfo);\n+\n+            List<String> addedTopicPartitions = newPartitionInfo\n+                .stream()\n+                .filter(topicPartition -> !_subscribedPartitions.contains(topicPartition))", "originalCommit": "4e9d265d91f4ab8e4e0ba93731b4c7d822d5e24c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE0NzIwMA==", "url": "https://github.com/linkedin/brooklin/pull/764#discussion_r504147200", "bodyText": "Modified to use a set, found the intersection of the two sets and removed the intersection from each.", "author": "somandal", "createdAt": "2020-10-13T17:52:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDExNDMwMg=="}], "type": "inlineReview"}, {"oid": "b072a5c3c005f2626f20c37c10f6ff0da85a82fd", "url": "https://github.com/linkedin/brooklin/commit/b072a5c3c005f2626f20c37c10f6ff0da85a82fd", "message": "Convert list to set to track added and removed topic partitions", "committedDate": "2020-10-13T17:51:11Z", "type": "commit"}]}