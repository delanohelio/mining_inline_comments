{"pr_number": 3003, "pr_title": "couchbase: wait until all services are part of the config", "pr_createdAt": "2020-07-17T06:39:35Z", "pr_url": "https://github.com/testcontainers/testcontainers-java/pull/3003", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI2MDg3OQ==", "url": "https://github.com/testcontainers/testcontainers-java/pull/3003#discussion_r456260879", "bodyText": "exception is swallowed here", "author": "aaronjwhiteside", "createdAt": "2020-07-17T07:12:44Z", "path": "modules/couchbase/src/main/java/org/testcontainers/couchbase/CouchbaseContainer.java", "diffHunk": "@@ -450,4 +449,41 @@ private Response doHttpRequest(final int port, final String path, final String m\n             throw new RuntimeException(\"Could not perform request against couchbase HTTP endpoint \", ex);\n         }\n     }\n+\n+    /**\n+     * In addition to getting a 200, we need to make sure that all services we need are enabled and available on\n+     * the bucket.\n+     * <p>\n+     *  Fixes the issue observed in https://github.com/testcontainers/testcontainers-java/issues/2993\n+     */\n+    private class AllServicesEnabledPredicate implements Predicate<String> {\n+\n+        @Override\n+        @SuppressWarnings(\"unchecked\")\n+        public boolean test(final String rawConfig) {\n+            try {\n+                Map<String, Object> parsedConfig = MAPPER.readValue(rawConfig, new TypeReference<Map<String, Object>>() {});\n+\n+                for (Map<String, Object> node : (List<Map<String, Object>>) parsedConfig.get(\"nodesExt\")) {\n+                    final Map<String, Integer> nodeServices = (Map<String, Integer>) node.get(\"services\");\n+                    for (CouchbaseService enabledService : enabledServices) {\n+                        boolean found = false;\n+                        for (String nodeService : nodeServices.keySet()) {\n+                            if (nodeService.startsWith(enabledService.getIdentifier())) {\n+                                found = true;\n+                            }\n+                        }\n+                        if (!found) {\n+                            logger().trace(\"Service {} not yet part of config, retrying.\", enabledService);\n+                            return false;\n+                        }\n+                    }\n+                }\n+                return true;\n+            } catch (IOException ex) {\n+                logger().error(\"Unable to parse response {}\", rawConfig);", "originalCommit": "f7caad2e4332a7f048d3560186877dabecd097d3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI2MTcwNQ==", "url": "https://github.com/testcontainers/testcontainers-java/pull/3003#discussion_r456261705", "bodyText": "Consider using readTree (and its path(String key) to have a null-safe access to sub-objects)", "author": "bsideup", "createdAt": "2020-07-17T07:14:49Z", "path": "modules/couchbase/src/main/java/org/testcontainers/couchbase/CouchbaseContainer.java", "diffHunk": "@@ -450,4 +449,41 @@ private Response doHttpRequest(final int port, final String path, final String m\n             throw new RuntimeException(\"Could not perform request against couchbase HTTP endpoint \", ex);\n         }\n     }\n+\n+    /**\n+     * In addition to getting a 200, we need to make sure that all services we need are enabled and available on\n+     * the bucket.\n+     * <p>\n+     *  Fixes the issue observed in https://github.com/testcontainers/testcontainers-java/issues/2993\n+     */\n+    private class AllServicesEnabledPredicate implements Predicate<String> {\n+\n+        @Override\n+        @SuppressWarnings(\"unchecked\")\n+        public boolean test(final String rawConfig) {\n+            try {\n+                Map<String, Object> parsedConfig = MAPPER.readValue(rawConfig, new TypeReference<Map<String, Object>>() {});", "originalCommit": "f7caad2e4332a7f048d3560186877dabecd097d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI3MTQyMw==", "url": "https://github.com/testcontainers/testcontainers-java/pull/3003#discussion_r456271423", "bodyText": "I second this, no more casting to Map/List..", "author": "aaronjwhiteside", "createdAt": "2020-07-17T07:36:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI2MTcwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzI3Mzc3NA==", "url": "https://github.com/testcontainers/testcontainers-java/pull/3003#discussion_r457273774", "bodyText": "I'll get it patched up shortly", "author": "daschl", "createdAt": "2020-07-20T10:49:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI2MTcwNQ=="}], "type": "inlineReview"}, {"oid": "848ae832edcf80cd91d0df17f0ee38ab29a0d104", "url": "https://github.com/testcontainers/testcontainers-java/commit/848ae832edcf80cd91d0df17f0ee38ab29a0d104", "message": "couchbase: wait until all services are part of the config\n\nThis changeset adds a predicate to the wait strategy to make sure\nthat it not only returns a 200, but also that every enabled service\nis actually already exposed in the config. Since we are polling\nthe server during bootstrap here, not all of them might show up\nat the same time.\n\nAlso, while not contributing to the fix we poll the terse bucket\nhttp config \"b\" instead of the verbose one \"buckets\" since it is\na little more efficient on the server side and actually the config\nthe client internally works with.\n\nfixes #2993", "committedDate": "2020-07-20T11:31:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzMxMTg5Mw==", "url": "https://github.com/testcontainers/testcontainers-java/pull/3003#discussion_r457311893", "bodyText": "put back {} for response, Throwables can be the last argument to error() calls.\nlogger().error(\"Unable to parse response {}\", response, e);", "author": "aaronjwhiteside", "createdAt": "2020-07-20T11:50:44Z", "path": "modules/couchbase/src/main/java/org/testcontainers/couchbase/CouchbaseContainer.java", "diffHunk": "@@ -168,7 +174,7 @@ protected void configure() {\n                             .map(\"healthy\"::equals)\n                             .orElse(false);\n                     } catch (IOException e) {\n-                        logger().error(\"Unable to parse response {}\", response);\n+                        logger().error(\"Unable to parse response: \" + response, e);", "originalCommit": "848ae832edcf80cd91d0df17f0ee38ab29a0d104", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzMxNDY3OA==", "url": "https://github.com/testcontainers/testcontainers-java/pull/3003#discussion_r457314678", "bodyText": "use {} placeholder for rawConfig\nold habits die hard, eh? ;)", "author": "aaronjwhiteside", "createdAt": "2020-07-20T11:54:50Z", "path": "modules/couchbase/src/main/java/org/testcontainers/couchbase/CouchbaseContainer.java", "diffHunk": "@@ -450,4 +452,38 @@ private Response doHttpRequest(final int port, final String path, final String m\n             throw new RuntimeException(\"Could not perform request against couchbase HTTP endpoint \", ex);\n         }\n     }\n+\n+    /**\n+     * In addition to getting a 200, we need to make sure that all services we need are enabled and available on\n+     * the bucket.\n+     * <p>\n+     *  Fixes the issue observed in https://github.com/testcontainers/testcontainers-java/issues/2993\n+     */\n+    private class AllServicesEnabledPredicate implements Predicate<String> {\n+\n+        @Override\n+        public boolean test(final String rawConfig) {\n+            try {\n+                for (JsonNode node : MAPPER.readTree(rawConfig).at(\"/nodesExt\")) {\n+                    for (CouchbaseService enabledService : enabledServices) {\n+                        boolean found = false;\n+                        Iterator<String> fieldNames = node.get(\"services\").fieldNames();\n+                        while (fieldNames.hasNext()) {\n+                            if (fieldNames.next().startsWith(enabledService.getIdentifier())) {\n+                                found = true;\n+                            }\n+                        }\n+                        if (!found) {\n+                            logger().trace(\"Service {} not yet part of config, retrying.\", enabledService);\n+                            return false;\n+                        }\n+                    }\n+                }\n+                return true;\n+            } catch (IOException ex) {\n+                logger().error(\"Unable to parse response: \" + rawConfig, ex);", "originalCommit": "848ae832edcf80cd91d0df17f0ee38ab29a0d104", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3e538bc9d3ed2067bc200731024ce0c8125189dc", "url": "https://github.com/testcontainers/testcontainers-java/commit/3e538bc9d3ed2067bc200731024ce0c8125189dc", "message": "couchbase: wait until all services are part of the config\n\nThis changeset adds a predicate to the wait strategy to make sure\nthat it not only returns a 200, but also that every enabled service\nis actually already exposed in the config. Since we are polling\nthe server during bootstrap here, not all of them might show up\nat the same time.\n\nAlso, while not contributing to the fix we poll the terse bucket\nhttp config \"b\" instead of the verbose one \"buckets\" since it is\na little more efficient on the server side and actually the config\nthe client internally works with.\n\nfixes #2993", "committedDate": "2020-07-20T11:55:38Z", "type": "forcePushed"}, {"oid": "c6598aae684188159f3d645efd05abddbd157b9b", "url": "https://github.com/testcontainers/testcontainers-java/commit/c6598aae684188159f3d645efd05abddbd157b9b", "message": "couchbase: wait until all services are part of the config\n\nThis changeset adds a predicate to the wait strategy to make sure\nthat it not only returns a 200, but also that every enabled service\nis actually already exposed in the config. Since we are polling\nthe server during bootstrap here, not all of them might show up\nat the same time.\n\nAlso, while not contributing to the fix we poll the terse bucket\nhttp config \"b\" instead of the verbose one \"buckets\" since it is\na little more efficient on the server side and actually the config\nthe client internally works with.\n\nfixes #2993", "committedDate": "2020-12-16T13:33:13Z", "type": "commit"}, {"oid": "c6598aae684188159f3d645efd05abddbd157b9b", "url": "https://github.com/testcontainers/testcontainers-java/commit/c6598aae684188159f3d645efd05abddbd157b9b", "message": "couchbase: wait until all services are part of the config\n\nThis changeset adds a predicate to the wait strategy to make sure\nthat it not only returns a 200, but also that every enabled service\nis actually already exposed in the config. Since we are polling\nthe server during bootstrap here, not all of them might show up\nat the same time.\n\nAlso, while not contributing to the fix we poll the terse bucket\nhttp config \"b\" instead of the verbose one \"buckets\" since it is\na little more efficient on the server side and actually the config\nthe client internally works with.\n\nfixes #2993", "committedDate": "2020-12-16T13:33:13Z", "type": "forcePushed"}, {"oid": "d46dc789cd82af2940b3140410717d5bb2e26447", "url": "https://github.com/testcontainers/testcontainers-java/commit/d46dc789cd82af2940b3140410717d5bb2e26447", "message": "Merge branch 'master' into wait-service-available", "committedDate": "2021-02-06T15:05:57Z", "type": "commit"}]}