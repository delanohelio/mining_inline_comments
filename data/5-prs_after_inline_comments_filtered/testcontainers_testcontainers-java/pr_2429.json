{"pr_number": 2429, "pr_title": "Fallback to `getDefaultGateway()` if \"bridge\" is unavailable.", "pr_createdAt": "2020-03-13T09:42:36Z", "pr_url": "https://github.com/testcontainers/testcontainers-java/pull/2429", "timeline": [{"oid": "0c4606d2e476cf18393d1f147ed63bd9b002c02b", "url": "https://github.com/testcontainers/testcontainers-java/commit/0c4606d2e476cf18393d1f147ed63bd9b002c02b", "message": "Fallback to `getDefaultGateway()` if \"bridge\" is unavailable.\n\nFixes #2239", "committedDate": "2020-03-13T09:40:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE3MzE3OA==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2429#discussion_r392173178", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    .orElseGet(() -> {\n          \n          \n            \n                                        return DockerClientConfigUtils.getDefaultGateway().orElse(\"localhost\");\n          \n          \n            \n                                    });\n          \n          \n            \n                                    .orElseGet(() -> DockerClientConfigUtils.getDefaultGateway().orElse(\"localhost\"));", "author": "NersesAM", "createdAt": "2020-03-13T11:29:12Z", "path": "core/src/main/java/org/testcontainers/dockerclient/DockerClientProviderStrategy.java", "diffHunk": "@@ -218,7 +218,9 @@ static String resolveDockerHostIpAddress(DockerClient client, URI dockerHost) {\n                         .filter(it -> it.getGateway() != null)\n                         .findAny()\n                         .map(Network.Ipam.Config::getGateway)\n-                        .orElse(\"localhost\");\n+                        .orElseGet(() -> {\n+                            return DockerClientConfigUtils.getDefaultGateway().orElse(\"localhost\");\n+                        });", "originalCommit": "0c4606d2e476cf18393d1f147ed63bd9b002c02b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE4MzM3NA==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2429#discussion_r392183374", "bodyText": "No, thank you, it is done for readability :)", "author": "bsideup", "createdAt": "2020-03-13T11:53:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE3MzE3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjIzOTMzMw==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2429#discussion_r392239333", "bodyText": "ok, thought you had multiline lambda to begin with, but ended up in oneliner later on forgetting to remove the braces :)", "author": "NersesAM", "createdAt": "2020-03-13T13:50:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE3MzE3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI0NTc1Mw==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2429#discussion_r392245753", "bodyText": "ah, no, just I don't like \"long short lambdas\" (lol). Thanks for suggesting anyways! \ud83d\udc4d", "author": "bsideup", "createdAt": "2020-03-13T14:01:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE3MzE3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI2MDk3NQ==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2429#discussion_r392260975", "bodyText": "long short lambdas\n\ud83e\udd23", "author": "NersesAM", "createdAt": "2020-03-13T14:26:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE3MzE3OA=="}], "type": "inlineReview"}]}