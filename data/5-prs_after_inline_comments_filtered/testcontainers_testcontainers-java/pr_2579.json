{"pr_number": 2579, "pr_title": "Allow using LocalStackContainer with AWS SDK v2 #1442", "pr_createdAt": "2020-04-16T03:35:58Z", "pr_url": "https://github.com/testcontainers/testcontainers-java/pull/2579", "timeline": [{"oid": "abd338d5fa0965d504b6644d4d87eed0af802ca4", "url": "https://github.com/testcontainers/testcontainers-java/commit/abd338d5fa0965d504b6644d4d87eed0af802ca4", "message": "Minimal changes to allow using LocalStackContainer with AWS SDK v2 #1442", "committedDate": "2020-04-16T03:32:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM3MTI1MQ==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2579#discussion_r409371251", "bodyText": "perhaps we should use just getAccessKey here and in other methods", "author": "bsideup", "createdAt": "2020-04-16T08:22:30Z", "path": "modules/localstack/src/main/java/org/testcontainers/containers/localstack/LocalStackContainer.java", "diffHunk": "@@ -124,10 +156,74 @@ public LocalStackContainer withServices(Service... services) {\n             .withCredentials(localstack.getDefaultCredentialsProvider())\n             .build();\n      </code></pre>\n+     * or for AWS SDK v2 you can use {@link #getDefaultAccessKey()}, {@link #getDefaultSecretKey()} directly:\n+     * <pre><code>S3Client s3 = S3Client\n+             .builder()\n+             .endpointOverride(localstack.getEndpointOverride(LocalStackContainer.Service.S3))\n+             .credentialsProvider(StaticCredentialsProvider.create(AwsBasicCredentials.create(\n+             localstack.getDefaultAccessKey(), localstack.getDefaultSecretKey()\n+             )))\n+             .region(Region.of(localstack.getDefaultRegion()))\n+             .build()\n+     </code></pre>\n      * @return an {@link AWSCredentialsProvider}\n      */\n     public AWSCredentialsProvider getDefaultCredentialsProvider() {\n-        return new AWSStaticCredentialsProvider(new BasicAWSCredentials(\"accesskey\", \"secretkey\"));\n+        return new AWSStaticCredentialsProvider(new BasicAWSCredentials(getDefaultAccessKey(), getDefaultSecretKey()));\n+    }\n+\n+    /**\n+     * Provides a default access key that is preconfigured to communicate with a given simulated service.\n+     * The access key can be used to construct AWS SDK v2 clients:\n+     * <pre><code>S3Client s3 = S3Client\n+             .builder()\n+             .endpointOverride(localstack.getEndpointOverride(LocalStackContainer.Service.S3))\n+             .credentialsProvider(StaticCredentialsProvider.create(AwsBasicCredentials.create(\n+             localstack.getDefaultAccessKey(), localstack.getDefaultSecretKey()\n+             )))\n+             .region(Region.of(localstack.getDefaultRegion()))\n+             .build()\n+     </code></pre>\n+     * @return a default access key\n+     */\n+    public String getDefaultAccessKey() {", "originalCommit": "abd338d5fa0965d504b6644d4d87eed0af802ca4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM3NTIxMQ==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2579#discussion_r409375211", "bodyText": "fixed in 2ff3fa1", "author": "musketyr", "createdAt": "2020-04-16T08:28:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM3MTI1MQ=="}], "type": "inlineReview"}, {"oid": "2ff3fa12b78ec8dbca2bebb03168ab1e95ccf4d3", "url": "https://github.com/testcontainers/testcontainers-java/commit/2ff3fa12b78ec8dbca2bebb03168ab1e95ccf4d3", "message": "removed `default` from the method names", "committedDate": "2020-04-16T08:26:34Z", "type": "commit"}, {"oid": "3d7ceb86969324ab0fba9d4240d5cc1f84154f6f", "url": "https://github.com/testcontainers/testcontainers-java/commit/3d7ceb86969324ab0fba9d4240d5cc1f84154f6f", "message": "showcase test with AWS SDK S3 v2 client", "committedDate": "2020-04-16T09:33:26Z", "type": "commit"}, {"oid": "ba3a73cb48f61b665cd94940ace5ca750a07978b", "url": "https://github.com/testcontainers/testcontainers-java/commit/ba3a73cb48f61b665cd94940ace5ca750a07978b", "message": "added example to the documentation", "committedDate": "2020-04-16T09:42:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg1NzMxMA==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2579#discussion_r410857310", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        assertEquals(\"The created bucket has the right name\", \"foo\", bucket.name());\n          \n          \n            \n                        assertEquals(\"The created bucket has the right name\", \"foo\", bucket.name());\n          \n      \n    \n    \n  \n\nduplicate", "author": "bsideup", "createdAt": "2020-04-19T09:06:24Z", "path": "modules/localstack/src/test/java/org/testcontainers/containers/localstack/LocalstackContainerTest.java", "diffHunk": "@@ -85,6 +92,34 @@ public void s3TestOverBridgeNetwork() throws IOException {\n             assertEquals(\"The object can be retrieved\", \"baz\", content);\n         }\n \n+        @Test\n+        public void s3TestOverBridgeNetworkV2() {\n+            S3Client s3 = S3Client\n+                .builder()\n+                .endpointOverride(localstack.getEndpointOverride(LocalStackContainer.Service.S3))\n+                .credentialsProvider(StaticCredentialsProvider.create(AwsBasicCredentials.create(\n+                    localstack.getAccessKey(), localstack.getSecretKey()\n+                )))\n+                .region(Region.of(localstack.getRegion()))\n+                .build();\n+\n+            s3.createBucket(b -> b.bucket(\"foo\"));\n+            s3.putObject(b -> b.bucket(\"foo\").key(\"bar\"), RequestBody.fromBytes(\"baz\".getBytes()));\n+\n+            final List<software.amazon.awssdk.services.s3.model.Bucket> buckets = s3.listBuckets().buckets();\n+            assertEquals(\"The created bucket is present\", 1, buckets.size());\n+            final software.amazon.awssdk.services.s3.model.Bucket bucket = buckets.get(0);\n+\n+            assertEquals(\"The created bucket has the right name\", \"foo\", bucket.name());\n+            assertEquals(\"The created bucket has the right name\", \"foo\", bucket.name());", "originalCommit": "ba3a73cb48f61b665cd94940ace5ca750a07978b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg1NzQ1NA==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2579#discussion_r410857454", "bodyText": "I think test's name is a bit too specific\ncould you please reduce the test to the minimum, so that it only tests that SDK v2 works fine?", "author": "bsideup", "createdAt": "2020-04-19T09:07:03Z", "path": "modules/localstack/src/test/java/org/testcontainers/containers/localstack/LocalstackContainerTest.java", "diffHunk": "@@ -85,6 +92,34 @@ public void s3TestOverBridgeNetwork() throws IOException {\n             assertEquals(\"The object can be retrieved\", \"baz\", content);\n         }\n \n+        @Test\n+        public void s3TestOverBridgeNetworkV2() {", "originalCommit": "ba3a73cb48f61b665cd94940ace5ca750a07978b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "846c88973b933ecaf12429edd07bc17d6a6091d2", "url": "https://github.com/testcontainers/testcontainers-java/commit/846c88973b933ecaf12429edd07bc17d6a6091d2", "message": "cleaned up Localstack spec", "committedDate": "2020-04-19T18:13:37Z", "type": "commit"}]}