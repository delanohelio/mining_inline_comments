{"pr_number": 3228, "pr_title": "feature: seata plugin", "pr_createdAt": "2020-10-28T05:08:57Z", "pr_url": "https://github.com/seata/seata/pull/3228", "timeline": [{"oid": "d13aa9fa66869ced4c8095a21f138cf685d4d094", "url": "https://github.com/seata/seata/commit/d13aa9fa66869ced4c8095a21f138cf685d4d094", "message": "feature: seata plugin module", "committedDate": "2020-10-28T04:58:44Z", "type": "commit"}, {"oid": "400e46bc9b4f20b470b3a89df5d25c66dfde4342", "url": "https://github.com/seata/seata/commit/400e46bc9b4f20b470b3a89df5d25c66dfde4342", "message": "Merge branch 'develop' of https://github.com/seata/seata into undo_ser_plugin", "committedDate": "2020-10-28T05:03:49Z", "type": "commit"}, {"oid": "5d3234aa264f25f01adaa90603a422c8058d508d", "url": "https://github.com/seata/seata/commit/5d3234aa264f25f01adaa90603a422c8058d508d", "message": "fix: code style.", "committedDate": "2020-10-28T05:04:59Z", "type": "commit"}, {"oid": "197318b9c9d67a2373b5c19e094912ff2988879d", "url": "https://github.com/seata/seata/commit/197318b9c9d67a2373b5c19e094912ff2988879d", "message": "feat: add repository", "committedDate": "2020-10-28T05:48:51Z", "type": "commit"}, {"oid": "a293045a305153e271037abd41ec93038377e7e5", "url": "https://github.com/seata/seata/commit/a293045a305153e271037abd41ec93038377e7e5", "message": "Merge branch 'develop' into undo_ser_plugin", "committedDate": "2020-10-28T05:51:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQ1OTI1OA==", "url": "https://github.com/seata/seata/pull/3228#discussion_r513459258", "bodyText": "CollectionUtils.isNotEmpty is better code.", "author": "dongzl", "createdAt": "2020-10-28T13:51:28Z", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/undo/parser/JacksonUndoLogParser.java", "diffHunk": "@@ -97,6 +102,28 @@\n \n     @Override\n     public void init() {\n+        try {\n+            List<JacksonSerializer> jacksonSerializers = EnhancedServiceLoader.loadAll(JacksonSerializer.class);\n+            if (!CollectionUtils.isEmpty(jacksonSerializers)) {", "originalCommit": "a293045a305153e271037abd41ec93038377e7e5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQ1OTM2MA==", "url": "https://github.com/seata/seata/pull/3228#discussion_r513459360", "bodyText": "CollectionUtils.isNotEmpty is better code.", "author": "dongzl", "createdAt": "2020-10-28T13:51:36Z", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/undo/parser/ProtostuffUndoLogParser.java", "diffHunk": "@@ -51,6 +60,20 @@\n \n     @Override\n     public void init() {\n+        try {\n+            List<ProtostuffDelegate> delegates = EnhancedServiceLoader.loadAll(ProtostuffDelegate.class);\n+            if (!CollectionUtils.isEmpty(delegates)) {", "originalCommit": "a293045a305153e271037abd41ec93038377e7e5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "711af65dd8ecc379d6114136ffc3662cdcaac2a4", "url": "https://github.com/seata/seata/commit/711af65dd8ecc379d6114136ffc3662cdcaac2a4", "message": "Merge branch 'develop' into undo_ser_plugin", "committedDate": "2020-10-29T04:31:19Z", "type": "commit"}, {"oid": "e35bab1eb42b8c5ba8975cb53c3fb21dd14ca1a4", "url": "https://github.com/seata/seata/commit/e35bab1eb42b8c5ba8975cb53c3fb21dd14ca1a4", "message": "Merge branch 'develop' of https://github.com/seata/seata into undo_ser_plugin", "committedDate": "2020-10-30T02:38:54Z", "type": "commit"}, {"oid": "9d59af8ad24061894fbe66a9cd9551da4f4013c9", "url": "https://github.com/seata/seata/commit/9d59af8ad24061894fbe66a9cd9551da4f4013c9", "message": "fix reviews", "committedDate": "2020-10-30T02:39:05Z", "type": "commit"}, {"oid": "3e1d34319f027a4d56bbb05b60d5a96d43e95d1a", "url": "https://github.com/seata/seata/commit/3e1d34319f027a4d56bbb05b60d5a96d43e95d1a", "message": "Merge branch 'undo_ser_plugin' of https://github.com/jsbxyyx/seata into undo_ser_plugin", "committedDate": "2020-10-30T02:39:27Z", "type": "commit"}, {"oid": "0d50397f17ae54cee53a59d33f9619f7fa3f3b72", "url": "https://github.com/seata/seata/commit/0d50397f17ae54cee53a59d33f9619f7fa3f3b72", "message": "feature: add fst, kryo.", "committedDate": "2020-10-30T03:18:48Z", "type": "commit"}, {"oid": "a0672b6853315bc64102651199c70a720dafe2c3", "url": "https://github.com/seata/seata/commit/a0672b6853315bc64102651199c70a720dafe2c3", "message": "Merge branch 'develop' into undo_ser_plugin", "committedDate": "2020-10-30T03:19:45Z", "type": "commit"}, {"oid": "f33536dc46df2350a27a60771ff9b56333b621c2", "url": "https://github.com/seata/seata/commit/f33536dc46df2350a27a60771ff9b56333b621c2", "message": "remove jackson type T.", "committedDate": "2020-10-30T03:34:54Z", "type": "commit"}, {"oid": "f06ef5ffb82a4308d30a690ed304db403df6fd3d", "url": "https://github.com/seata/seata/commit/f06ef5ffb82a4308d30a690ed304db403df6fd3d", "message": "Merge branch 'develop' into undo_ser_plugin", "committedDate": "2020-11-02T06:06:55Z", "type": "commit"}, {"oid": "8188e8b645dcff845903845b3c721e7d6043c228", "url": "https://github.com/seata/seata/commit/8188e8b645dcff845903845b3c721e7d6043c228", "message": "Merge branch 'develop' into undo_ser_plugin", "committedDate": "2020-11-05T09:50:47Z", "type": "commit"}, {"oid": "b5aa72fd75d0f97aea0542522e25499a4d8ad90c", "url": "https://github.com/seata/seata/commit/b5aa72fd75d0f97aea0542522e25499a4d8ad90c", "message": "update version.", "committedDate": "2020-11-05T09:52:23Z", "type": "commit"}, {"oid": "0bd45aa6dd33aacf35e7d9f22de5cc1af72377c8", "url": "https://github.com/seata/seata/commit/0bd45aa6dd33aacf35e7d9f22de5cc1af72377c8", "message": "Merge branch 'develop' into undo_ser_plugin", "committedDate": "2020-11-14T08:41:53Z", "type": "commit"}, {"oid": "ee1b477bb8ee8ddd9196acc9044a8bdad0a15a40", "url": "https://github.com/seata/seata/commit/ee1b477bb8ee8ddd9196acc9044a8bdad0a15a40", "message": "Merge branch 'develop' into undo_ser_plugin", "committedDate": "2020-11-23T05:43:21Z", "type": "commit"}, {"oid": "8cd5fe89b5eda555bf6fba24f7f85230ff4634b3", "url": "https://github.com/seata/seata/commit/8cd5fe89b5eda555bf6fba24f7f85230ff4634b3", "message": "Merge branch 'develop' into undo_ser_plugin", "committedDate": "2020-12-01T01:35:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjQ4NjM3MA==", "url": "https://github.com/seata/seata/pull/3228#discussion_r562486370", "bodyText": "Is it possible to add a unit test instead of keeping package-info here?", "author": "xingfudeshi", "createdAt": "2021-01-22T09:07:51Z", "path": "seata-plugin/seata-jackson-parser-oracle/src/test/java/io/seata/plugin/jackson/parser/oracle/package-info.java", "diffHunk": "@@ -0,0 +1,20 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+/**\n+ * @author jsbxyyx\n+ */\n+package io.seata.plugin.jackson.parser.oracle;", "originalCommit": "8cd5fe89b5eda555bf6fba24f7f85230ff4634b3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjQ4NzM2Mg==", "url": "https://github.com/seata/seata/pull/3228#discussion_r562487362", "bodyText": "please add comment", "author": "xingfudeshi", "createdAt": "2021-01-22T09:09:36Z", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/undo/parser/spi/ProtostuffDelegate.java", "diffHunk": "@@ -0,0 +1,28 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package io.seata.rm.datasource.undo.parser.spi;\n+\n+import io.protostuff.runtime.Delegate;\n+\n+/**\n+ * @author jsbxyyx\n+ */\n+public interface ProtostuffDelegate<T> {\n+\n+    Delegate<T> create();", "originalCommit": "8cd5fe89b5eda555bf6fba24f7f85230ff4634b3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjQ4NzQ0Nw==", "url": "https://github.com/seata/seata/pull/3228#discussion_r562487447", "bodyText": "please add comment", "author": "xingfudeshi", "createdAt": "2021-01-22T09:09:44Z", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/undo/parser/spi/KryoTypeSerializer.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package io.seata.rm.datasource.undo.parser.spi;\n+\n+import com.esotericsoftware.kryo.Serializer;\n+\n+/**\n+ * @author jsbxyyx\n+ */\n+public interface KryoTypeSerializer<T> {\n+\n+    Class<T> type();\n+\n+    Serializer serializer();", "originalCommit": "8cd5fe89b5eda555bf6fba24f7f85230ff4634b3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjQ4NzU0Nw==", "url": "https://github.com/seata/seata/pull/3228#discussion_r562487547", "bodyText": "please add comment", "author": "xingfudeshi", "createdAt": "2021-01-22T09:09:54Z", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/undo/parser/spi/JacksonSerializer.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package io.seata.rm.datasource.undo.parser.spi;\n+\n+import com.fasterxml.jackson.databind.JsonDeserializer;\n+import com.fasterxml.jackson.databind.JsonSerializer;\n+\n+/**\n+ * @author jsbxyyx\n+ */\n+public interface JacksonSerializer<T> {\n+\n+    Class<T> type();\n+\n+    JsonSerializer<T> ser();\n+\n+    JsonDeserializer<? extends T> deser();", "originalCommit": "8cd5fe89b5eda555bf6fba24f7f85230ff4634b3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjQ4NzYwMQ==", "url": "https://github.com/seata/seata/pull/3228#discussion_r562487601", "bodyText": "please add comment", "author": "xingfudeshi", "createdAt": "2021-01-22T09:10:00Z", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/undo/parser/spi/FstSerializer.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package io.seata.rm.datasource.undo.parser.spi;\n+\n+import org.nustaq.serialization.FSTObjectSerializer;\n+\n+/**\n+ * @author jsbxyyx\n+ */\n+public interface FstSerializer {\n+\n+    Class type();\n+\n+    FSTObjectSerializer ser();\n+\n+    boolean alsoForAllSubclasses();", "originalCommit": "8cd5fe89b5eda555bf6fba24f7f85230ff4634b3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjQ4ODM4NQ==", "url": "https://github.com/seata/seata/pull/3228#discussion_r562488385", "bodyText": "How about giving a warn or error message ?", "author": "xingfudeshi", "createdAt": "2021-01-22T09:11:17Z", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/undo/parser/ProtostuffUndoLogParser.java", "diffHunk": "@@ -51,6 +60,20 @@\n \n     @Override\n     public void init() {\n+        try {\n+            List<ProtostuffDelegate> delegates = EnhancedServiceLoader.loadAll(ProtostuffDelegate.class);\n+            if (CollectionUtils.isNotEmpty(delegates)) {\n+                for (ProtostuffDelegate delegate : delegates) {\n+                    if (delegate != null) {\n+                        idStrategy.registerDelegate(delegate.create());\n+                        LOGGER.info(\"protostuff undo log parser load [{}].\", delegate.getClass().getName());\n+                    }\n+                }\n+            }\n+        } catch (EnhancedServiceNotFoundException e) {\n+            LOGGER.info(\"ProtostuffDelegate not found children class.\", e);", "originalCommit": "8cd5fe89b5eda555bf6fba24f7f85230ff4634b3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjQ4ODY4OQ==", "url": "https://github.com/seata/seata/pull/3228#discussion_r562488689", "bodyText": "How about giving a warn or error message ?", "author": "xingfudeshi", "createdAt": "2021-01-22T09:11:50Z", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/undo/parser/KryoUndoLogParser.java", "diffHunk": "@@ -15,19 +15,52 @@\n  */\n package io.seata.rm.datasource.undo.parser;\n \n+import com.esotericsoftware.kryo.Serializer;\n+import io.seata.common.executor.Initialize;\n+import io.seata.common.loader.EnhancedServiceLoader;\n+import io.seata.common.loader.EnhancedServiceNotFoundException;\n import io.seata.common.loader.LoadLevel;\n+import io.seata.common.util.CollectionUtils;\n import io.seata.rm.datasource.undo.BranchUndoLog;\n import io.seata.rm.datasource.undo.UndoLogParser;\n+import io.seata.rm.datasource.undo.parser.spi.KryoTypeSerializer;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.List;\n \n /**\n  * kryo serializer\n  * @author jsbxyyx\n  */\n @LoadLevel(name = KryoUndoLogParser.NAME)\n-public class KryoUndoLogParser implements UndoLogParser {\n+public class KryoUndoLogParser implements UndoLogParser, Initialize {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(KryoUndoLogParser.class);\n \n     public static final String NAME = \"kryo\";\n \n+    @Override\n+    public void init() {\n+        try {\n+            List<KryoTypeSerializer> serializers = EnhancedServiceLoader.loadAll(KryoTypeSerializer.class);\n+            if (CollectionUtils.isNotEmpty(serializers)) {\n+                for (KryoTypeSerializer typeSerializer : serializers) {\n+                    if (typeSerializer != null) {\n+                        Class type = typeSerializer.type();\n+                        Serializer ser = typeSerializer.serializer();\n+                        if (type != null) {\n+                            KryoSerializerFactory.getInstance().registerSerializer(type, ser);\n+                            LOGGER.info(\"kryo undo log parser load [{}].\", typeSerializer.getClass().getName());\n+                        }\n+                    }\n+                }\n+            }\n+        } catch (EnhancedServiceNotFoundException e) {\n+            LOGGER.info(\"KryoTypeSerializer not found children class.\", e);", "originalCommit": "8cd5fe89b5eda555bf6fba24f7f85230ff4634b3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjQ4OTMxOA==", "url": "https://github.com/seata/seata/pull/3228#discussion_r562489318", "bodyText": "How about giving a warn or error message ?", "author": "xingfudeshi", "createdAt": "2021-01-22T09:12:53Z", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/undo/parser/JacksonUndoLogParser.java", "diffHunk": "@@ -97,6 +102,28 @@\n \n     @Override\n     public void init() {\n+        try {\n+            List<JacksonSerializer> jacksonSerializers = EnhancedServiceLoader.loadAll(JacksonSerializer.class);\n+            if (CollectionUtils.isNotEmpty(jacksonSerializers)) {\n+                for (JacksonSerializer jacksonSerializer : jacksonSerializers) {\n+                    Class type = jacksonSerializer.type();\n+                    JsonSerializer ser = jacksonSerializer.ser();\n+                    JsonDeserializer deser = jacksonSerializer.deser();\n+                    if (type != null) {\n+                        if (ser != null) {\n+                            module.addSerializer(type, ser);\n+                        }\n+                        if (deser != null) {\n+                            module.addDeserializer(type, deser);\n+                        }\n+                        LOGGER.info(\"jackson undo log parser load [{}].\", jacksonSerializer.getClass().getName());\n+                    }\n+                }\n+            }\n+        } catch (EnhancedServiceNotFoundException e) {\n+            LOGGER.info(\"JacksonSerializer not found children class.\", e);", "originalCommit": "8cd5fe89b5eda555bf6fba24f7f85230ff4634b3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjQ4OTQwNw==", "url": "https://github.com/seata/seata/pull/3228#discussion_r562489407", "bodyText": "How about giving a warn or error message ?", "author": "xingfudeshi", "createdAt": "2021-01-22T09:13:03Z", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/undo/parser/FstUndoLogParser.java", "diffHunk": "@@ -15,21 +15,55 @@\n  */\n package io.seata.rm.datasource.undo.parser;\n \n+import io.seata.common.executor.Initialize;\n+import io.seata.common.loader.EnhancedServiceLoader;\n+import io.seata.common.loader.EnhancedServiceNotFoundException;\n import io.seata.common.loader.LoadLevel;\n+import io.seata.common.util.CollectionUtils;\n import io.seata.rm.datasource.undo.BranchUndoLog;\n import io.seata.rm.datasource.undo.UndoLogParser;\n+import io.seata.rm.datasource.undo.parser.spi.FstSerializer;\n+import org.nustaq.serialization.FSTObjectSerializer;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.List;\n \n /**\n  * fst serializer\n  * @author funkye\n  */\n @LoadLevel(name = FstUndoLogParser.NAME)\n-public class FstUndoLogParser implements UndoLogParser {\n+public class FstUndoLogParser implements UndoLogParser, Initialize {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(FstUndoLogParser.class);\n \n     public static final String NAME = \"fst\";\n \n     private FstSerializerFactory fstFactory = FstSerializerFactory.getDefaultFactory();\n \n+    @Override\n+    public void init() {\n+        try {\n+            List<FstSerializer> serializers = EnhancedServiceLoader.loadAll(FstSerializer.class);\n+            if (CollectionUtils.isNotEmpty(serializers)) {\n+                for (FstSerializer serializer : serializers) {\n+                    if (serializer != null) {\n+                        Class type = serializer.type();\n+                        FSTObjectSerializer ser = serializer.ser();\n+                        boolean alsoForAllSubclasses = serializer.alsoForAllSubclasses();\n+                        if (type != null && ser != null) {\n+                            fstFactory.registerSerializer(type, ser, alsoForAllSubclasses);\n+                            LOGGER.info(\"fst undo log parser load [{}].\", serializer.getClass().getName());\n+                        }\n+                    }\n+                }\n+            }\n+        } catch (EnhancedServiceNotFoundException e) {\n+            LOGGER.info(\"FstSerializer not found children class.\", e);", "originalCommit": "8cd5fe89b5eda555bf6fba24f7f85230ff4634b3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjQ5MzU3Mw==", "url": "https://github.com/seata/seata/pull/3228#discussion_r562493573", "bodyText": "isNotEmpty may not required.", "author": "xingfudeshi", "createdAt": "2021-01-22T09:19:54Z", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/undo/parser/KryoSerializerFactory.java", "diffHunk": "@@ -60,11 +65,23 @@ public void returnKryo(KryoSerializer kryoSerializer) {\n         pool.release(kryoSerializer.getKryo());\n     }\n \n+    public void registerSerializer(Class type, Serializer ser) {\n+        if (type != null && ser != null) {\n+            TYPE_MAP.put(type, ser);\n+        }\n+    }\n+\n     @Override\n     public Kryo create() {\n         Kryo kryo = new Kryo();\n         kryo.setRegistrationRequired(false);\n \n+        if (CollectionUtils.isNotEmpty(TYPE_MAP)) {", "originalCommit": "8cd5fe89b5eda555bf6fba24f7f85230ff4634b3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjQ5NDE5Mg==", "url": "https://github.com/seata/seata/pull/3228#discussion_r562494192", "bodyText": "if (delegate != null) may not required.", "author": "xingfudeshi", "createdAt": "2021-01-22T09:20:54Z", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/undo/parser/ProtostuffUndoLogParser.java", "diffHunk": "@@ -51,6 +60,20 @@\n \n     @Override\n     public void init() {\n+        try {\n+            List<ProtostuffDelegate> delegates = EnhancedServiceLoader.loadAll(ProtostuffDelegate.class);\n+            if (CollectionUtils.isNotEmpty(delegates)) {\n+                for (ProtostuffDelegate delegate : delegates) {\n+                    if (delegate != null) {", "originalCommit": "8cd5fe89b5eda555bf6fba24f7f85230ff4634b3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0b36b3da5a541fd0a9873ad85ca9b7c2d5e664cf", "url": "https://github.com/seata/seata/commit/0b36b3da5a541fd0a9873ad85ca9b7c2d5e664cf", "message": "fix: reviews", "committedDate": "2021-01-26T04:55:21Z", "type": "commit"}, {"oid": "30031162f7fd2a0e83e8cc01d481c37e6cd2f7aa", "url": "https://github.com/seata/seata/commit/30031162f7fd2a0e83e8cc01d481c37e6cd2f7aa", "message": "remove unused imports", "committedDate": "2021-01-26T05:00:57Z", "type": "commit"}, {"oid": "0996abd21c235a6cdd71d4d7aa21a4d065ababe4", "url": "https://github.com/seata/seata/commit/0996abd21c235a6cdd71d4d7aa21a4d065ababe4", "message": "Merge branch 'develop' into undo_ser_plugin", "committedDate": "2021-02-18T03:55:40Z", "type": "commit"}]}