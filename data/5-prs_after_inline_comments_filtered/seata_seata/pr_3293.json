{"pr_number": 3293, "pr_title": "bugfix: configuration cache get value cast exception.", "pr_createdAt": "2020-11-20T07:16:46Z", "pr_url": "https://github.com/seata/seata/pull/3293", "timeline": [{"oid": "70c84c2c427d399b54d59abbcdd2f53933a0dd53", "url": "https://github.com/seata/seata/commit/70c84c2c427d399b54d59abbcdd2f53933a0dd53", "message": "configuration cache cast exception.", "committedDate": "2020-11-20T07:08:26Z", "type": "commit"}, {"oid": "9583c27e2ea46b5a60aebbd8e8adbedbc6b9eef5", "url": "https://github.com/seata/seata/commit/9583c27e2ea46b5a60aebbd8e8adbedbc6b9eef5", "message": "optimize substring", "committedDate": "2020-11-20T07:12:11Z", "type": "commit"}, {"oid": "a050dbc1b0ac5f1eec61805bdafb346af9ee0f0e", "url": "https://github.com/seata/seata/commit/a050dbc1b0ac5f1eec61805bdafb346af9ee0f0e", "message": "Merge branch 'develop' into configuration_cache", "committedDate": "2020-11-20T07:17:10Z", "type": "commit"}, {"oid": "23ad6b0238fa5baf06e01443207d1581f57f46e0", "url": "https://github.com/seata/seata/commit/23ad6b0238fa5baf06e01443207d1581f57f46e0", "message": "add test case", "committedDate": "2020-11-20T07:39:08Z", "type": "commit"}, {"oid": "324945752e75b9a6d7a684591fbc1c661e1bb9d4", "url": "https://github.com/seata/seata/commit/324945752e75b9a6d7a684591fbc1c661e1bb9d4", "message": "fix: test", "committedDate": "2020-11-20T10:00:07Z", "type": "commit"}, {"oid": "22e6fad635e79c96e859ad0d199d5aaa4375853e", "url": "https://github.com/seata/seata/commit/22e6fad635e79c96e859ad0d199d5aaa4375853e", "message": "Merge branch 'develop' into configuration_cache", "committedDate": "2020-11-23T01:06:53Z", "type": "commit"}, {"oid": "952453bff07431bce915c5703e5d409eab1e3e53", "url": "https://github.com/seata/seata/commit/952453bff07431bce915c5703e5d409eab1e3e53", "message": "fix: ci", "committedDate": "2020-11-23T02:03:25Z", "type": "commit"}, {"oid": "166d040c05b227b52b9fedc19f67f6045c506f6e", "url": "https://github.com/seata/seata/commit/166d040c05b227b52b9fedc19f67f6045c506f6e", "message": "Merge branch 'develop' into configuration_cache", "committedDate": "2020-11-23T02:05:54Z", "type": "commit"}, {"oid": "ce8ddfce07835ce121cd9ed90a555ebf709a198d", "url": "https://github.com/seata/seata/commit/ce8ddfce07835ce121cd9ed90a555ebf709a198d", "message": "add test case", "committedDate": "2020-11-23T02:29:41Z", "type": "commit"}, {"oid": "86cf60ca49b8b5422337dc6129afc70256cc6cec", "url": "https://github.com/seata/seata/commit/86cf60ca49b8b5422337dc6129afc70256cc6cec", "message": "Merge branch 'develop' into configuration_cache", "committedDate": "2020-11-23T02:34:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTIyNzc4Mw==", "url": "https://github.com/seata/seata/pull/3293#discussion_r529227783", "bodyText": "better use equalsIgnoreCase", "author": "slievrly", "createdAt": "2020-11-24T06:20:29Z", "path": "config/seata-config-core/src/main/java/io/seata/config/ConfigurationCache.java", "diffHunk": "@@ -103,4 +111,59 @@ public Configuration proxy(Configuration originalConfiguration) {\n     public void clear() {\n         CONFIG_CACHE.clear();\n     }\n+\n+    private static class ObjectWrapper {\n+\n+        static final String INT = \"Int\";\n+        static final String BOOLEAN = \"Boolean\";\n+        static final String DURATION = \"Duration\";\n+        static final String LONG = \"Long\";\n+        static final String SHORT = \"Short\";\n+\n+        private final Object data;\n+        private final String type;\n+\n+        ObjectWrapper(Object data, String type) {\n+            this.data = data;\n+            this.type = type;\n+        }\n+\n+        public Object getData() {\n+            return data;\n+        }\n+\n+        public String getType() {\n+            return type;\n+        }\n+\n+        public Object convertData(String aType) {\n+            if (data != null && Objects.equals(type, aType)) {\n+                return data;\n+            }\n+            if (data != null) {\n+                if (INT.equals(aType)) {\n+                    return Integer.parseInt(data.toString());\n+                } else if (BOOLEAN.equals(aType)) {\n+                    return Boolean.parseBoolean(data.toString());\n+                } else if (DURATION.equals(aType)) {\n+                    return DurationUtil.parse(data.toString());\n+                } else if (LONG.equals(aType)) {\n+                    return Long.parseLong(data.toString());\n+                } else if (SHORT.equals(aType)) {\n+                    return Short.parseShort(data.toString());\n+                }\n+                return String.valueOf(data);\n+            }\n+            return null;\n+        }\n+\n+        public static boolean supportType(String type) {\n+            return INT.equals(type)\n+                    || BOOLEAN.equals(type)", "originalCommit": "86cf60ca49b8b5422337dc6129afc70256cc6cec", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTIzMDY1Nw==", "url": "https://github.com/seata/seata/pull/3293#discussion_r529230657", "bodyText": "if(oldVluue!=null && oldVluue!=newValue)  ->  (oldVluue.type)newValue ?", "author": "slievrly", "createdAt": "2020-11-24T06:29:33Z", "path": "config/seata-config-core/src/main/java/io/seata/config/ConfigurationCache.java", "diffHunk": "@@ -64,10 +68,11 @@ public static ConfigurationCache getInstance() {\n \n     @Override\n     public void onChangeEvent(ConfigurationChangeEvent event) {\n-        Object oldValue = CONFIG_CACHE.get(event.getDataId());\n-        if (null == oldValue || !oldValue.equals(event.getNewValue())) {\n+        ObjectWrapper wrapper = CONFIG_CACHE.get(event.getDataId());\n+        // The wrapper.data only exists in the cache when it is not null.\n+        if (null == wrapper || !wrapper.getData().equals(event.getNewValue())) {\n             if (StringUtils.isNotBlank(event.getNewValue())) {\n-                CONFIG_CACHE.put(event.getDataId(), event.getNewValue());\n+                CONFIG_CACHE.put(event.getDataId(), new ObjectWrapper(event.getNewValue(), null));", "originalCommit": "86cf60ca49b8b5422337dc6129afc70256cc6cec", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f93e69c8803bc3ea22eeeae3886073dbc0754827", "url": "https://github.com/seata/seata/commit/f93e69c8803bc3ea22eeeae3886073dbc0754827", "message": "optimize: cache put cast.", "committedDate": "2020-11-24T07:38:18Z", "type": "commit"}, {"oid": "18cd928294d15c3bf0fcbaf70618b10878efae1b", "url": "https://github.com/seata/seata/commit/18cd928294d15c3bf0fcbaf70618b10878efae1b", "message": "Merge branch 'develop' into configuration_cache", "committedDate": "2020-11-24T07:51:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDEzMTA2Mg==", "url": "https://github.com/seata/seata/pull/3293#discussion_r530131062", "bodyText": "result ==null?null:result;", "author": "a364176773", "createdAt": "2020-11-25T06:18:22Z", "path": "config/seata-config-core/src/main/java/io/seata/config/ConfigurationCache.java", "diffHunk": "@@ -78,19 +85,22 @@ public Configuration proxy(Configuration originalConfiguration) {\n         return (Configuration)Enhancer.create(Configuration.class,\n             (MethodInterceptor)(proxy, method, args, methodProxy) -> {\n                 if (method.getName().startsWith(METHOD_PREFIX)\n-                    && !method.getName().equalsIgnoreCase(METHOD_LATEST_CONFIG)) {\n+                        && !method.getName().equalsIgnoreCase(METHOD_LATEST_CONFIG)) {\n                     String rawDataId = (String)args[0];\n-                    Object result = CONFIG_CACHE.get(rawDataId);\n-                    if (null == result) {\n-                        result = method.invoke(originalConfiguration, args);\n+                    ObjectWrapper wrapper = CONFIG_CACHE.get(rawDataId);\n+                    String type = method.getName().substring(METHOD_PREFIX.length());\n+                    if (!ObjectWrapper.supportType(type)) {\n+                        type = null;\n+                    }\n+                    if (null == wrapper) {\n+                        Object result = method.invoke(originalConfiguration, args);\n+                        wrapper = new ObjectWrapper(result, type);\n+                        // The wrapper.data only exists in the cache when it is not null.\n                         if (result != null) {\n-                            CONFIG_CACHE.put(rawDataId, result);\n+                            CONFIG_CACHE.put(rawDataId, wrapper);\n                         }\n                     }\n-                    if (null != result && method.getReturnType().equals(String.class)) {\n-                        return String.valueOf(result);\n-                    }\n-                    return result;\n+                    return wrapper.convertData(type);", "originalCommit": "18cd928294d15c3bf0fcbaf70618b10878efae1b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDEzMTI5Ng==", "url": "https://github.com/seata/seata/pull/3293#discussion_r530131296", "bodyText": "wrapper = new ObjectWrapper(result, type);\nCONFIG_CACHE.put(rawDataId, wrapper);", "author": "a364176773", "createdAt": "2020-11-25T06:19:05Z", "path": "config/seata-config-core/src/main/java/io/seata/config/ConfigurationCache.java", "diffHunk": "@@ -78,19 +85,22 @@ public Configuration proxy(Configuration originalConfiguration) {\n         return (Configuration)Enhancer.create(Configuration.class,\n             (MethodInterceptor)(proxy, method, args, methodProxy) -> {\n                 if (method.getName().startsWith(METHOD_PREFIX)\n-                    && !method.getName().equalsIgnoreCase(METHOD_LATEST_CONFIG)) {\n+                        && !method.getName().equalsIgnoreCase(METHOD_LATEST_CONFIG)) {\n                     String rawDataId = (String)args[0];\n-                    Object result = CONFIG_CACHE.get(rawDataId);\n-                    if (null == result) {\n-                        result = method.invoke(originalConfiguration, args);\n+                    ObjectWrapper wrapper = CONFIG_CACHE.get(rawDataId);\n+                    String type = method.getName().substring(METHOD_PREFIX.length());\n+                    if (!ObjectWrapper.supportType(type)) {\n+                        type = null;\n+                    }\n+                    if (null == wrapper) {\n+                        Object result = method.invoke(originalConfiguration, args);\n+                        wrapper = new ObjectWrapper(result, type);\n+                        // The wrapper.data only exists in the cache when it is not null.\n                         if (result != null) {\n-                            CONFIG_CACHE.put(rawDataId, result);\n+                            CONFIG_CACHE.put(rawDataId, wrapper);", "originalCommit": "18cd928294d15c3bf0fcbaf70618b10878efae1b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDEzMTM1Ng==", "url": "https://github.com/seata/seata/pull/3293#discussion_r530131356", "bodyText": "result = method.invoke(originalConfiguration, args);", "author": "a364176773", "createdAt": "2020-11-25T06:19:18Z", "path": "config/seata-config-core/src/main/java/io/seata/config/ConfigurationCache.java", "diffHunk": "@@ -78,19 +85,22 @@ public Configuration proxy(Configuration originalConfiguration) {\n         return (Configuration)Enhancer.create(Configuration.class,\n             (MethodInterceptor)(proxy, method, args, methodProxy) -> {\n                 if (method.getName().startsWith(METHOD_PREFIX)\n-                    && !method.getName().equalsIgnoreCase(METHOD_LATEST_CONFIG)) {\n+                        && !method.getName().equalsIgnoreCase(METHOD_LATEST_CONFIG)) {\n                     String rawDataId = (String)args[0];\n-                    Object result = CONFIG_CACHE.get(rawDataId);\n-                    if (null == result) {\n-                        result = method.invoke(originalConfiguration, args);\n+                    ObjectWrapper wrapper = CONFIG_CACHE.get(rawDataId);\n+                    String type = method.getName().substring(METHOD_PREFIX.length());\n+                    if (!ObjectWrapper.supportType(type)) {\n+                        type = null;\n+                    }\n+                    if (null == wrapper) {\n+                        Object result = method.invoke(originalConfiguration, args);", "originalCommit": "18cd928294d15c3bf0fcbaf70618b10878efae1b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDEzMTcyNw==", "url": "https://github.com/seata/seata/pull/3293#discussion_r530131727", "bodyText": "ObjectWrapper wrapper = CONFIG_CACHE.get(rawDataId);\nObject result = wrapper==null?null:wrapper.getData();", "author": "a364176773", "createdAt": "2020-11-25T06:20:27Z", "path": "config/seata-config-core/src/main/java/io/seata/config/ConfigurationCache.java", "diffHunk": "@@ -78,19 +85,22 @@ public Configuration proxy(Configuration originalConfiguration) {\n         return (Configuration)Enhancer.create(Configuration.class,\n             (MethodInterceptor)(proxy, method, args, methodProxy) -> {\n                 if (method.getName().startsWith(METHOD_PREFIX)\n-                    && !method.getName().equalsIgnoreCase(METHOD_LATEST_CONFIG)) {\n+                        && !method.getName().equalsIgnoreCase(METHOD_LATEST_CONFIG)) {\n                     String rawDataId = (String)args[0];\n-                    Object result = CONFIG_CACHE.get(rawDataId);\n-                    if (null == result) {\n-                        result = method.invoke(originalConfiguration, args);\n+                    ObjectWrapper wrapper = CONFIG_CACHE.get(rawDataId);", "originalCommit": "18cd928294d15c3bf0fcbaf70618b10878efae1b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDEzMTgxOQ==", "url": "https://github.com/seata/seata/pull/3293#discussion_r530131819", "bodyText": "result == null", "author": "a364176773", "createdAt": "2020-11-25T06:20:45Z", "path": "config/seata-config-core/src/main/java/io/seata/config/ConfigurationCache.java", "diffHunk": "@@ -78,19 +85,22 @@ public Configuration proxy(Configuration originalConfiguration) {\n         return (Configuration)Enhancer.create(Configuration.class,\n             (MethodInterceptor)(proxy, method, args, methodProxy) -> {\n                 if (method.getName().startsWith(METHOD_PREFIX)\n-                    && !method.getName().equalsIgnoreCase(METHOD_LATEST_CONFIG)) {\n+                        && !method.getName().equalsIgnoreCase(METHOD_LATEST_CONFIG)) {\n                     String rawDataId = (String)args[0];\n-                    Object result = CONFIG_CACHE.get(rawDataId);\n-                    if (null == result) {\n-                        result = method.invoke(originalConfiguration, args);\n+                    ObjectWrapper wrapper = CONFIG_CACHE.get(rawDataId);\n+                    String type = method.getName().substring(METHOD_PREFIX.length());\n+                    if (!ObjectWrapper.supportType(type)) {\n+                        type = null;\n+                    }\n+                    if (null == wrapper) {", "originalCommit": "18cd928294d15c3bf0fcbaf70618b10878efae1b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "285ea9856b6b5897449a3c53f9f8f544c1809847", "url": "https://github.com/seata/seata/commit/285ea9856b6b5897449a3c53f9f8f544c1809847", "message": "fix: reviews", "committedDate": "2020-11-25T06:40:00Z", "type": "commit"}, {"oid": "757ec8ad435e74c6eba59f95d11e171585148c3a", "url": "https://github.com/seata/seata/commit/757ec8ad435e74c6eba59f95d11e171585148c3a", "message": "fix: reviews", "committedDate": "2020-11-25T07:33:59Z", "type": "commit"}, {"oid": "199ddbb08c8ecbb4c3c86e41db3a422565553f59", "url": "https://github.com/seata/seata/commit/199ddbb08c8ecbb4c3c86e41db3a422565553f59", "message": "Merge branch 'develop' into configuration_cache", "committedDate": "2020-11-26T01:12:36Z", "type": "commit"}, {"oid": "18938202bf91050a717f1218d6f1156ffe26019f", "url": "https://github.com/seata/seata/commit/18938202bf91050a717f1218d6f1156ffe26019f", "message": "Merge branch 'develop' into configuration_cache", "committedDate": "2020-12-15T05:15:16Z", "type": "commit"}]}