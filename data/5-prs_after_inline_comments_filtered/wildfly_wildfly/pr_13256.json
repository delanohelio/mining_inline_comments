{"pr_number": 13256, "pr_title": "[WFLY-5097] Session bean spec violation ...", "pr_createdAt": "2020-04-30T15:48:32Z", "pr_url": "https://github.com/wildfly/wildfly/pull/13256", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODIzMzY3Mw==", "url": "https://github.com/wildfly/wildfly/pull/13256#discussion_r418233673", "bodyText": "This is more efficiently stored as:\n    Map<Class<? extends Annotation>, Set<String>> ejbTypes = new IdentityHashMap<>();\n    ejbTypes.put(javax.ejb.Stateful.class, new HashSet<>());\n    ejbTypes.put(javax.ejb.Stateless.class, new HashSet<>());\n    ejbTypes.put(javax.ejb.Singleton.class, new HashSet<>());", "author": "pferraro", "createdAt": "2020-04-30T19:17:27Z", "path": "ejb3/src/main/java/org/jboss/as/ejb3/deployment/processors/EjbJndiBindingsDeploymentUnitProcessor.java", "diffHunk": "@@ -79,11 +81,18 @@ public void deploy(DeploymentPhaseContext phaseContext) throws DeploymentUnitPro\n \n         final EEModuleDescription eeModuleDescription = deploymentUnit.getAttachment(Attachments.EE_MODULE_DESCRIPTION);\n         final Collection<ComponentDescription> componentDescriptions = eeModuleDescription.getComponentDescriptions();\n+        HashMap<String,HashSet<String>> ejbClassTypes = new HashMap();", "originalCommit": "f35deab274f87b9a4d6a034158c3a0c9e70717ab", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI0MTYyNQ==", "url": "https://github.com/wildfly/wildfly/pull/13256#discussion_r418241625", "bodyText": "Using the above data structure, this method is unnecessary.", "author": "pferraro", "createdAt": "2020-04-30T19:33:04Z", "path": "ejb3/src/main/java/org/jboss/as/ejb3/deployment/processors/EjbJndiBindingsDeploymentUnitProcessor.java", "diffHunk": "@@ -274,6 +283,32 @@ private void logBinding(final StringBuilder jndiBindingsLogMessage, final String\n         jndiBindingsLogMessage.append(System.lineSeparator());\n     }\n \n+    private boolean checkBeanTypeSpecViolation(HashMap<String,HashSet<String>> ejbClassTypes, SessionBeanComponentDescription ejbComponentDescription) {", "originalCommit": "f35deab274f87b9a4d6a034158c3a0c9e70717ab", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI0MTY0MA==", "url": "https://github.com/wildfly/wildfly/pull/13256#discussion_r418241640", "bodyText": "Using the above data structure, this spec violation check is simple:\nEJBComponentDescription ejbComponentDescription = (EJBComponentDescription) componentDescription;\nString ejbClassName = ejbComponentDescription.getEJBClassName();\nif (ejbClassTypes.putIfAbsent(ejbClassName, ejbComponentDescription) == null) {\n    this.setupJNDIBindings(ejbComponentDescription, deploymentUnit);\n} else {\n    EjbLogger.DEPLOYMENT_LOGGER.typeSpecViolation(ejbClassName);\n}", "author": "pferraro", "createdAt": "2020-04-30T19:33:06Z", "path": "ejb3/src/main/java/org/jboss/as/ejb3/deployment/processors/EjbJndiBindingsDeploymentUnitProcessor.java", "diffHunk": "@@ -79,11 +81,18 @@ public void deploy(DeploymentPhaseContext phaseContext) throws DeploymentUnitPro\n \n         final EEModuleDescription eeModuleDescription = deploymentUnit.getAttachment(Attachments.EE_MODULE_DESCRIPTION);\n         final Collection<ComponentDescription> componentDescriptions = eeModuleDescription.getComponentDescriptions();\n+        HashMap<String,HashSet<String>> ejbClassTypes = new HashMap();\n+        ejbClassTypes.put(\"isStateful\",new HashSet<>());\n+        ejbClassTypes.put(\"isStateless\",new HashSet<>());\n+        ejbClassTypes.put(\"isSingleton\",new HashSet<>());\n         if (componentDescriptions != null) {\n             for (ComponentDescription componentDescription : componentDescriptions) {\n                 // process only EJB session beans\n                 if (componentDescription instanceof SessionBeanComponentDescription) {\n-                    this.setupJNDIBindings((EJBComponentDescription) componentDescription, deploymentUnit);\n+                    if(!checkBeanTypeSpecViolation(ejbClassTypes,(SessionBeanComponentDescription)componentDescription))", "originalCommit": "f35deab274f87b9a4d6a034158c3a0c9e70717ab", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0a1738c258c5645197c2dc3037542382a5d51c8c", "url": "https://github.com/wildfly/wildfly/commit/0a1738c258c5645197c2dc3037542382a5d51c8c", "message": "[WFLY-5097] Session bean spec violation ...", "committedDate": "2020-05-04T09:12:48Z", "type": "forcePushed"}, {"oid": "9d317d9ea07ee165eaf693da28e01e4777ec3e9c", "url": "https://github.com/wildfly/wildfly/commit/9d317d9ea07ee165eaf693da28e01e4777ec3e9c", "message": "[WFLY-5097] Session bean spec violation ...", "committedDate": "2020-05-05T08:25:35Z", "type": "forcePushed"}, {"oid": "c29c837cc080df91e20f436d37dc88bae0d88067", "url": "https://github.com/wildfly/wildfly/commit/c29c837cc080df91e20f436d37dc88bae0d88067", "message": "[WFLY-5097] Session bean spec violation ...", "committedDate": "2020-05-05T09:29:56Z", "type": "forcePushed"}, {"oid": "4749a30b879bf7bacf49deb9a8a802b72cc26377", "url": "https://github.com/wildfly/wildfly/commit/4749a30b879bf7bacf49deb9a8a802b72cc26377", "message": "[WFLY-5097] Session bean spec violation ...", "committedDate": "2020-05-05T09:55:42Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA0OTk0NA==", "url": "https://github.com/wildfly/wildfly/pull/13256#discussion_r420049944", "bodyText": "I don't understand the need for these other conditions.  An EJB class name should only ever have 1 ejb component description (regardless of it's type).  Consequently, a simple putIfAbsent should be all that is needed to ensure there are not multiple type declarations.\nTo me, these other checks look redundant.  Am I missing something?", "author": "pferraro", "createdAt": "2020-05-05T11:50:56Z", "path": "ejb3/src/main/java/org/jboss/as/ejb3/deployment/processors/EjbJndiBindingsDeploymentUnitProcessor.java", "diffHunk": "@@ -79,11 +81,18 @@ public void deploy(DeploymentPhaseContext phaseContext) throws DeploymentUnitPro\n \n         final EEModuleDescription eeModuleDescription = deploymentUnit.getAttachment(Attachments.EE_MODULE_DESCRIPTION);\n         final Collection<ComponentDescription> componentDescriptions = eeModuleDescription.getComponentDescriptions();\n+        Map<String, EJBComponentDescription> ejbClassTypeDefined = new HashMap<>();\n         if (componentDescriptions != null) {\n             for (ComponentDescription componentDescription : componentDescriptions) {\n                 // process only EJB session beans\n                 if (componentDescription instanceof SessionBeanComponentDescription) {\n-                    this.setupJNDIBindings((EJBComponentDescription) componentDescription, deploymentUnit);\n+                    EJBComponentDescription ejbComponentDescription = (EJBComponentDescription) componentDescription;\n+                    String ejbClassName = ejbComponentDescription.getEJBClassName();\n+                    if ((ejbClassTypeDefined.putIfAbsent(ejbClassName,ejbComponentDescription) == null || !((ejbClassTypeDefined.get(ejbClassName).isSingleton() && (ejbComponentDescription.isStateful() || ejbComponentDescription.isStateless())) || (ejbClassTypeDefined.get(ejbClassName).isStateful() && (ejbComponentDescription.isSingleton() || ejbComponentDescription.isStateless())) || (ejbClassTypeDefined.get(ejbClassName).isStateless() && (ejbComponentDescription.isSingleton() || ejbComponentDescription.isStateful()))))) {", "originalCommit": "4749a30b879bf7bacf49deb9a8a802b72cc26377", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA3MDU2Mw==", "url": "https://github.com/wildfly/wildfly/pull/13256#discussion_r420070563", "bodyText": "Hello Paul. I am still doing some checks, but maybe there could exist multiple session beans (of same type) with different names from the same class  that should be allowed to be created.", "author": "panossot", "createdAt": "2020-05-05T12:29:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA0OTk0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDE1MTA1Nw==", "url": "https://github.com/wildfly/wildfly/pull/13256#discussion_r420151057", "bodyText": "maybe there could exist multiple session beans (of same type) with different names from the same class\n\nI don't think this is possible, but perhaps I have not fully understood your meaning.  Can you provide an example?\nAIUI, an EJB class has a single component description.  That description might have multiple views (e.g. @Local vs @Remote), but there is still only a single EJB component description which is of a single session type (@Stateless vs @Stateful vs @Singleton).", "author": "pferraro", "createdAt": "2020-05-05T14:25:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA0OTk0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDE5NzY3NQ==", "url": "https://github.com/wildfly/wildfly/pull/13256#discussion_r420197675", "bodyText": "For example ...\nenterprise-beans>\nsession>\nejb-name>Name1\nejb-class>EjbClass1\nsession-type>Stateless\n/session>\nsession>\nejb-name>Name2\nejb-class>EjbClass1\nsession-type>Stateless\n/session>\n/enterprise-beans>", "author": "panossot", "createdAt": "2020-05-05T15:26:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA0OTk0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDIwMDMwMQ==", "url": "https://github.com/wildfly/wildfly/pull/13256#discussion_r420200301", "bodyText": "Sorry about the format ...", "author": "panossot", "createdAt": "2020-05-05T15:30:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA0OTk0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM2MTU5Mg==", "url": "https://github.com/wildfly/wildfly/pull/13256#discussion_r420361592", "bodyText": "I don't see anything in the EJB specification that suggests that a given module can contain multiple beans with the same ejb-class (where each has a distinct ejb-name).  On the contrary, this is explicitly disallowed via EJB annotations, evident by the fact that:\n\nthe name property of the @Stateless, @Stateful, and @Singleton annotations is a String, not a String[], e.g. @Stateless(name = { \"name1\", \"name2\" })\nthe @Stateless, @Stateful, and @Singleton annotations are not @Repeatable, which would otherwise allow the user to define multiple names for the same bean class, e.g.@Stateless(name = \"name1\") @Stateless(name = \"name2\")\n\nWhat possible use case would require multiple beans sharing the same implementation class within the same module?", "author": "pferraro", "createdAt": "2020-05-05T19:43:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA0OTk0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU4NjIzOQ==", "url": "https://github.com/wildfly/wildfly/pull/13256#discussion_r420586239", "bodyText": "Ejbs with different names could be enriched with different interceptors ...", "author": "panossot", "createdAt": "2020-05-06T07:12:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA0OTk0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc1OTEyNg==", "url": "https://github.com/wildfly/wildfly/pull/13256#discussion_r420759126", "bodyText": "OK - I see how that could be useful.  Additionally, a quick stackoverflow search found that there are indeed users relying on this behavior (though I would still consider this unspecified spec behavior).\nWe can allow multiple beans of the same type per class and still simplify the expression above.\ne.g.\n        Map<String, SessionBeanComponentDescription> sessionBeanComponentDescriptions = new HashMap<>();\n        if (componentDescriptions != null) {\n            for (ComponentDescription componentDescription : componentDescriptions) {\n                // process only EJB session beans\n                if (componentDescription instanceof SessionBeanComponentDescription) {\n                    SessionBeanComponentDescription sessionBeanComponentDescription = (SessionBeanComponentDescription) componentDescription;\n                    String ejbClassName = sessionBeanComponentDescription.getEJBClassName();\n                    SessionBeanComponentDescription existingDescription = sessionBeanComponentDescription.putIfAbsent(ejbClassName, sessionBeanComponentDescription);\n                    if ((existingDescription == null) || existingDescription.getSessionBeanType() == sessionBeanComponentDescription.getSessionBeanType()) {\n                        this.setupJNDIBindings(ejbComponentDescription, deploymentUnit);\n                    } else {\n                        EjbLogger.DEPLOYMENT_LOGGER.typeSpecViolation(ejbClassName);\n                    }\n                }\n            }\n        }", "author": "pferraro", "createdAt": "2020-05-06T12:42:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA0OTk0NA=="}], "type": "inlineReview"}, {"oid": "432b22b3cde786b679d1b852fea1d00939c60f36", "url": "https://github.com/wildfly/wildfly/commit/432b22b3cde786b679d1b852fea1d00939c60f36", "message": "[WFLY-5097] Session bean spec violation ...", "committedDate": "2020-05-05T13:28:27Z", "type": "forcePushed"}, {"oid": "a59de3d694b25e88c595b34d5c1a0a960ebbd35c", "url": "https://github.com/wildfly/wildfly/commit/a59de3d694b25e88c595b34d5c1a0a960ebbd35c", "message": "[WFLY-5097] Session bean spec violation ...", "committedDate": "2020-05-06T14:19:30Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk5MjAyMA==", "url": "https://github.com/wildfly/wildfly/pull/13256#discussion_r420992020", "bodyText": "violetion should read violation\nSessionBeans should read Session EJBs", "author": "pferraro", "createdAt": "2020-05-06T18:10:16Z", "path": "ejb3/src/main/java/org/jboss/as/ejb3/logging/EjbLogger.java", "diffHunk": "@@ -3204,4 +3204,8 @@\n     @LogMessage(level = WARN)\n     @Message(id = 515, value = \"[EJB3.2 spec, section 4.9.2] Singleton session beans are not allowed to implement 'javax.ejb.SessionBean' interface. This interface on bean '%s' is going to be ignored and should be removed.\")\n     void singletonCantImplementSessionBean(String className);\n+\n+    @LogMessage(level = ERROR)\n+    @Message(id = 517, value = \"[EJB3.2 spec, section 4.1] Spec violetion for class %s. SessionBeans should have only one of the following types : Stateful, Stateless, Singleton.\")", "originalCommit": "a59de3d694b25e88c595b34d5c1a0a960ebbd35c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0ebac8324807869f493e0b4a32b205c485fff4ac", "url": "https://github.com/wildfly/wildfly/commit/0ebac8324807869f493e0b4a32b205c485fff4ac", "message": "[WFLY-5097] Session bean spec violation ...", "committedDate": "2020-05-06T18:18:50Z", "type": "forcePushed"}, {"oid": "16838a596d4fb6715d0d56a4697a5e39580178b5", "url": "https://github.com/wildfly/wildfly/commit/16838a596d4fb6715d0d56a4697a5e39580178b5", "message": "[WFLY-5097] Session bean spec violation", "committedDate": "2020-05-19T07:17:24Z", "type": "forcePushed"}, {"oid": "83b28cca08f906b7a50d947bef11070a3255b7e3", "url": "https://github.com/wildfly/wildfly/commit/83b28cca08f906b7a50d947bef11070a3255b7e3", "message": "[WFLY-5097] : Session bean spec violation", "committedDate": "2020-05-19T07:48:58Z", "type": "commit"}, {"oid": "83b28cca08f906b7a50d947bef11070a3255b7e3", "url": "https://github.com/wildfly/wildfly/commit/83b28cca08f906b7a50d947bef11070a3255b7e3", "message": "[WFLY-5097] : Session bean spec violation", "committedDate": "2020-05-19T07:48:58Z", "type": "forcePushed"}]}