{"pr_number": 13741, "pr_title": "WFLY-14118 Distributed session manager can throw UnsupportedOperationException", "pr_createdAt": "2020-11-25T18:58:35Z", "pr_url": "https://github.com/wildfly/wildfly/pull/13741", "timeline": [{"oid": "135e9f7bca8e7ed103caf27499afd7f5c1b7578e", "url": "https://github.com/wildfly/wildfly/commit/135e9f7bca8e7ed103caf27499afd7f5c1b7578e", "message": "WFLY-14118 Distributed session manager can throw UnsupportedOperationException on concurrent calls to HttpServletRequest.getSession(...) for a given session", "committedDate": "2020-11-25T18:57:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDY5NzYzMg==", "url": "https://github.com/wildfly/wildfly/pull/13741#discussion_r530697632", "bodyText": "Perhaps s/new Integer(0)/Integer.valueOf(0)/g ?", "author": "bstansberry", "createdAt": "2020-11-25T23:50:00Z", "path": "clustering/ee/cache/src/main/java/org/wildfly/clustering/ee/cache/ConcurrentManager.java", "diffHunk": "@@ -39,43 +40,47 @@\n  */\n public class ConcurrentManager<K, V> implements Manager<K, V> {\n \n-    private final Map<K, Map.Entry<Integer, V>> objects = new ConcurrentHashMap<>();\n-    private final BiFunction<K, Map.Entry<Integer, V>, Map.Entry<Integer, V>> addFunction = new BiFunction<K, Map.Entry<Integer, V>, Map.Entry<Integer, V>>() {\n+    private final Map<K, Map.Entry<Integer, VolatileReference<V>>> objects = new ConcurrentHashMap<>();\n+    private final BiFunction<K, Map.Entry<Integer, VolatileReference<V>>, Map.Entry<Integer, VolatileReference<V>>> addFunction = new BiFunction<K, Map.Entry<Integer, VolatileReference<V>>, Map.Entry<Integer, VolatileReference<V>>>() {\n         @Override\n-        public Map.Entry<Integer, V> apply(K id, Map.Entry<Integer, V> entry) {\n-            return entry != null ? new AbstractMap.SimpleImmutableEntry<>(Integer.valueOf(entry.getKey().intValue() + 1), entry.getValue()) : new VolatileEntry<>(new Integer(0));\n+        public Map.Entry<Integer, VolatileReference<V>> apply(K id, Map.Entry<Integer, VolatileReference<V>> entry) {\n+            Integer count = (entry != null) ? Integer.valueOf(entry.getKey().intValue() + 1) : new Integer(0);", "originalCommit": "135e9f7bca8e7ed103caf27499afd7f5c1b7578e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDcxNzU3Mg==", "url": "https://github.com/wildfly/wildfly/pull/13741#discussion_r530717572", "bodyText": "Good catch - given that this is the request thread, it's a worthwhile optimization.  I'll update this later.", "author": "pferraro", "createdAt": "2020-11-26T01:09:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDY5NzYzMg=="}], "type": "inlineReview"}]}