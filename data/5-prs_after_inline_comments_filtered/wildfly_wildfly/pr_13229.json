{"pr_number": 13229, "pr_title": "[WFLY-13396] Tests for RESTEasy integration with WildFly Elytron - Au\u2026", "pr_createdAt": "2020-04-21T13:25:55Z", "pr_url": "https://github.com/wildfly/wildfly/pull/13229", "timeline": [{"oid": "25a4ca7ecd1c9dd2a254d9f9a6aae69555a41179", "url": "https://github.com/wildfly/wildfly/commit/25a4ca7ecd1c9dd2a254d9f9a6aae69555a41179", "message": "[WFLY-13396] Tests for RESTEasy integration with WildFly Elytron - AuthenticationClient for Authentication / SSL", "committedDate": "2020-06-18T13:01:01Z", "type": "forcePushed"}, {"oid": "a4057f84e27204e4be0043f26dd9e3d27b92b405", "url": "https://github.com/wildfly/wildfly/commit/a4057f84e27204e4be0043f26dd9e3d27b92b405", "message": "[WFLY-13396] Tests for RESTEasy integration with WildFly Elytron - AuthenticationClient for Authentication / SSL", "committedDate": "2020-09-16T18:07:18Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc0NTAxMw==", "url": "https://github.com/wildfly/wildfly/pull/13229#discussion_r489745013", "bodyText": "The value returned from URL.getHost() is not valid input to new URI(String str).", "author": "bstansberry", "createdAt": "2020-09-16T20:48:14Z", "path": "testsuite/integration/elytron/src/test/java/org/wildfly/test/integration/elytron/ssl/UndertowTwoWaySslNeedClientAuthTestCase.java", "diffHunk": "@@ -130,6 +146,153 @@ public void testSendingNoClientCertificateFails() {\n         closeClient(client);\n     }\n \n+    /**\n+     * RESTEasy client loads truststore from Elytron client configuration. This truststore contains correct server certificate.\n+     */\n+    @Test\n+    public void testResteasyElytronClientTrustedServer() {\n+        AuthenticationContext context = doPrivileged((PrivilegedAction<AuthenticationContext>) () -> {\n+            try {\n+                URL config = getClass().getResource(\"wildfly-config-correct-truststore.xml\");\n+                return ElytronXmlParser.parseAuthenticationClientConfiguration(config.toURI()).create();\n+            } catch (Throwable t) {\n+                throw new InvalidAuthenticationConfigurationException(t);\n+            }\n+        });\n+        context.run(() -> {\n+            ResteasyClientBuilder resteasyClientBuilder = (ResteasyClientBuilder) ClientBuilder.newBuilder().hostnameVerifier((s, sslSession) -> true);\n+            ResteasyClient client = resteasyClientBuilder.build();\n+            Response response = client.target(String.valueOf(securedRootUrl)).request().get();\n+            Assert.assertEquals(200, response.getStatus());\n+        });\n+    }\n+\n+    /**\n+     * RESTEasy client loads SSL Context from Elytron client config.\n+     * This SSL Context does not have truststore configured, so exception is expected.\n+     */\n+    @Test(expected = ProcessingException.class)\n+    public void testResteasyElytronClientMissingTruststore() {\n+        AuthenticationContext context = doPrivileged((PrivilegedAction<AuthenticationContext>) () -> {\n+            try {\n+                URL config = getClass().getResource(\"wildfly-config-correct-truststore-missing.xml\");\n+                return ElytronXmlParser.parseAuthenticationClientConfiguration(config.toURI()).create();\n+            } catch (Throwable t) {\n+                throw new InvalidAuthenticationConfigurationException(t);\n+            }\n+        });\n+        context.run(() -> {\n+            ResteasyClientBuilder resteasyClientBuilder = (ResteasyClientBuilder) ClientBuilder.newBuilder();\n+            ResteasyClient client = resteasyClientBuilder.build();\n+            Response response = client.target(String.valueOf(securedRootUrl)).request().get();\n+            Assert.assertEquals(\"Hello World!\", response.readEntity(String.class));\n+            Assert.assertEquals(200, response.getStatus());\n+        });\n+    }\n+\n+    /**\n+     * Elytron client has configured truststore that does not contain server's certificate.\n+     * Test will pass because Elytron config is ignored since different ssl context is specified on RESTEasy client builder specifically.\n+     */\n+    @Test\n+    public void testClientConfigProviderSSLContextIgnoredIfDifferentIsSet() throws URISyntaxException, GeneralSecurityException {\n+        AuthenticationContextConfigurationClient AUTH_CONTEXT_CLIENT =\n+                AccessController.doPrivileged((PrivilegedAction<AuthenticationContextConfigurationClient>) AuthenticationContextConfigurationClient::new);\n+\n+        AuthenticationContext context = doPrivileged((PrivilegedAction<AuthenticationContext>) () -> {\n+            try {\n+                URL config = getClass().getResource(\"wildfly-config-correct-truststore-missing.xml\");\n+                return ElytronXmlParser.parseAuthenticationClientConfiguration(config.toURI()).create();\n+            } catch (Throwable t) {\n+                throw new InvalidAuthenticationConfigurationException(t);\n+            }\n+        });\n+        AuthenticationContext contextWithTruststore = doPrivileged((PrivilegedAction<AuthenticationContext>) () -> {\n+            try {\n+                URL config = getClass().getResource(\"wildfly-config-correct-truststore.xml\");\n+                return ElytronXmlParser.parseAuthenticationClientConfiguration(config.toURI()).create();\n+            } catch (Throwable t) {\n+                throw new InvalidAuthenticationConfigurationException(t);\n+            }\n+        });\n+        SSLContext sslContext = AUTH_CONTEXT_CLIENT.getSSLContext(new URI(securedRootUrl.getHost()), contextWithTruststore);", "originalCommit": "a4057f84e27204e4be0043f26dd9e3d27b92b405", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a58a906a916462b5622137a5d9eb29279794cfdf", "url": "https://github.com/wildfly/wildfly/commit/a58a906a916462b5622137a5d9eb29279794cfdf", "message": "[WFLY-13396] Tests for RESTEasy integration with WildFly Elytron - AuthenticationClient for Authentication / SSL", "committedDate": "2020-09-17T12:01:59Z", "type": "forcePushed"}, {"oid": "a354e9bd370b149fe744aa8ecabf1d62ea4abeba", "url": "https://github.com/wildfly/wildfly/commit/a354e9bd370b149fe744aa8ecabf1d62ea4abeba", "message": "[WFLY-13396] Tests for RESTEasy integration with WildFly Elytron - AuthenticationClient for Authentication / SSL", "committedDate": "2020-09-17T13:30:03Z", "type": "commit"}, {"oid": "a354e9bd370b149fe744aa8ecabf1d62ea4abeba", "url": "https://github.com/wildfly/wildfly/commit/a354e9bd370b149fe744aa8ecabf1d62ea4abeba", "message": "[WFLY-13396] Tests for RESTEasy integration with WildFly Elytron - AuthenticationClient for Authentication / SSL", "committedDate": "2020-09-17T13:30:03Z", "type": "forcePushed"}]}