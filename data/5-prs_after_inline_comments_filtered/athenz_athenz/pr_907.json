{"pr_number": 907, "pr_title": "Implement ZTS Notifications DB logic", "pr_createdAt": "2020-03-10T22:01:16Z", "pr_url": "https://github.com/AthenZ/athenz/pull/907", "timeline": [{"oid": "df686761f086143f5579a322a58a26d39ce15e6c", "url": "https://github.com/AthenZ/athenz/commit/df686761f086143f5579a322a58a26d39ce15e6c", "message": "Implement ZTS Notifications DB logic\n\n- Created CertFailedRefreshNotificationTask but not yet implemented. Will be implemented after DB logic is approved.\n- CertRecordStoreConnection - Added 2 methods to fetch unrefreshed certificates that haven't been notified by other servers.\n- DomainRoleMembersFetcherCommon - Added common implementation for ZMS entities (and added a dependency on athenz-zms-core in common)\n- JDBCCertRecordStoreConnection - Modified Insert / Update methods for new notification columns.", "committedDate": "2020-03-10T23:16:14Z", "type": "forcePushed"}, {"oid": "aed24631602823a526a8b923075ab6af16e75462", "url": "https://github.com/AthenZ/athenz/commit/aed24631602823a526a8b923075ab6af16e75462", "message": "Implement ZTS Notifications DB logic\n\n- Created CertFailedRefreshNotificationTask but not yet implemented. Will be implemented after DB logic is approved.\n- CertRecordStoreConnection - Added 2 methods to fetch unrefreshed certificates that haven't been notified by other servers.\n- DomainRoleMembersFetcherCommon - Added common implementation for ZMS entities (and added a dependency on athenz-zms-core in common)\n- JDBCCertRecordStoreConnection - Modified Insert / Update methods for new notification columns.", "committedDate": "2020-03-11T04:58:44Z", "type": "forcePushed"}, {"oid": "4144b9e666686822139bf2fad2f74a7e0676dd42", "url": "https://github.com/AthenZ/athenz/commit/4144b9e666686822139bf2fad2f74a7e0676dd42", "message": "Implement ZTS Notifications DB logic\n\n- Created CertFailedRefreshNotificationTask but not yet implemented. Will be implemented after DB logic is approved.\n- CertRecordStoreConnection - Added 2 methods to fetch unrefreshed certificates that haven't been notified by other servers.\n- DomainRoleMembersFetcherCommon - Added common implementation for ZMS entities (and added a dependency on athenz-zms-core in common)\n- JDBCCertRecordStoreConnection - Modified Insert / Update methods for new notification columns.\n- Added tests to verify insert / update / get work on nullable columns", "committedDate": "2020-03-11T08:55:07Z", "type": "forcePushed"}, {"oid": "aa75f74704db30ccccca2c35760f1faff16c5ac7", "url": "https://github.com/AthenZ/athenz/commit/aa75f74704db30ccccca2c35760f1faff16c5ac7", "message": "Implement ZTS Notifications DB logic\n\n- Created CertFailedRefreshNotificationTask but not yet implemented. Will be implemented after DB logic is approved.\n- CertRecordStoreConnection - Added 2 methods to fetch unrefreshed certificates that haven't been notified by other servers.\n- DomainRoleMembersFetcherCommon - Added common implementation for ZMS entities (and added a dependency on athenz-zms-core in common)\n- JDBCCertRecordStoreConnection - Modified Insert / Update methods for new notification columns.\n- Added tests to verify insert / update / get work on nullable columns", "committedDate": "2020-03-11T12:47:40Z", "type": "forcePushed"}, {"oid": "57567e7d26adf3a1a8df78957f1b90b73ee1cf36", "url": "https://github.com/AthenZ/athenz/commit/57567e7d26adf3a1a8df78957f1b90b73ee1cf36", "message": "Implement ZTS Notifications DB logic\n\n- Created CertFailedRefreshNotificationTask but not yet implemented. Will be implemented after DB logic is approved.\n- CertRecordStoreConnection - Added 2 methods to fetch unrefreshed certificates that haven't been notified by other servers.\n- DomainRoleMembersFetcherCommon - Added common implementation for ZMS entities (and added a dependency on athenz-zms-core in common)\n- JDBCCertRecordStoreConnection - Modified Insert / Update methods for new notification columns.\n- Added tests to verify insert / update / get work on nullable columns", "committedDate": "2020-03-11T12:49:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk4MjU5MQ==", "url": "https://github.com/AthenZ/athenz/pull/907#discussion_r390982591", "bodyText": "Moved USER_DOMAIN_PREFIX to common so it can be used by ZTS.", "author": "OferLevi85", "createdAt": "2020-03-11T13:49:25Z", "path": "libs/java/server_common/src/main/java/com/yahoo/athenz/common/ServerCommonConsts.java", "diffHunk": "@@ -21,6 +21,8 @@\n     public static final String OBJECT_ROLE      = \"role\";\n     public static final String USER_DOMAIN      = \"user\";\n \n+    public static final String USER_DOMAIN_PREFIX = \"user.\";\n+", "originalCommit": "57567e7d26adf3a1a8df78957f1b90b73ee1cf36", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk4Mzk4MQ==", "url": "https://github.com/AthenZ/athenz/pull/907#discussion_r390983981", "bodyText": "Initiated NotificationManager in ZTS. The daily thread will run but at this point won't send any notifications as the current NotificationTask is not implemented (returns empty collection).", "author": "OferLevi85", "createdAt": "2020-03-11T13:51:27Z", "path": "servers/zts/src/main/java/com/yahoo/athenz/zts/ZTSImpl.java", "diffHunk": "@@ -305,8 +308,15 @@ public ZTSImpl(CloudStore implCloudStore, DataStore implDataStore) {\n         // make sure to set the keystore for any instance that requires it\n         \n         setAuthorityKeyStore();\n+\n+        setNotificationManager();\n     }\n-    \n+\n+    private void setNotificationManager() {", "originalCommit": "57567e7d26adf3a1a8df78957f1b90b73ee1cf36", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk4NzA2Nw==", "url": "https://github.com/AthenZ/athenz/pull/907#discussion_r390987067", "bodyText": "Added four new columns but only two of them, expiryTime and hostName can be inserted. The other two, lastNotifiedTime and lastNotifiedServer are updated as part of the Notification logic.", "author": "OferLevi85", "createdAt": "2020-03-11T13:55:52Z", "path": "servers/zts/src/main/java/com/yahoo/athenz/zts/ZTSImpl.java", "diffHunk": "@@ -2475,8 +2485,14 @@ boolean verifyAWSAssumeRole(String domainName, String roleResource, String princ\n         return false;\n     }\n \n-    X509CertRecord insertX509CertRecord(ResourceContext ctx, final String cn, final String provider,\n-            final String instanceId, final String serial, Boolean certUsage) {\n+    X509CertRecord insertX509CertRecord(ResourceContext ctx,", "originalCommit": "57567e7d26adf3a1a8df78957f1b90b73ee1cf36", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk4OTgzMA==", "url": "https://github.com/AthenZ/athenz/pull/907#discussion_r390989830", "bodyText": "Currently, always put null (the columns are nullable). Will insert the real values once hca starts sending them as part of the request.", "author": "OferLevi85", "createdAt": "2020-03-11T13:59:42Z", "path": "servers/zts/src/main/java/com/yahoo/athenz/zts/ZTSImpl.java", "diffHunk": "@@ -2678,7 +2696,7 @@ public Response postInstanceRegisterInformation(ResourceContext ctx, InstanceReg\n             // able to validate the certificate during refresh operations\n \n             if (insertX509CertRecord(ctx, cn, provider, certReqInstanceId, certSerial,\n-                    InstanceProvider.ZTS_CERT_USAGE_CLIENT.equalsIgnoreCase(certUsage)) == null) {\n+                    InstanceProvider.ZTS_CERT_USAGE_CLIENT.equalsIgnoreCase(certUsage), null, null) == null) {", "originalCommit": "57567e7d26adf3a1a8df78957f1b90b73ee1cf36", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUyODI2OA==", "url": "https://github.com/AthenZ/athenz/pull/907#discussion_r392528268", "bodyText": "expiryTime is already available - it must come from the certificate that ZTS generates. only hostname is supposed to come from the service identity agent. We already get those when the host is requesting the hostname to be included in the car, so we there is no need to wait for any changes in the agent.", "author": "havetisyan", "createdAt": "2020-03-13T23:35:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk4OTgzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjYyODE5Ng==", "url": "https://github.com/AthenZ/athenz/pull/907#discussion_r392628196", "bodyText": "Fixed.", "author": "OferLevi85", "createdAt": "2020-03-14T23:41:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk4OTgzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk5MDk4OA==", "url": "https://github.com/AthenZ/athenz/pull/907#discussion_r390990988", "bodyText": "Similar to the logic of updateRoleMemberExpirationNotificationTimestamp and getNotifyTemporaryRoleMembers in ZMS.", "author": "OferLevi85", "createdAt": "2020-03-11T14:01:27Z", "path": "servers/zts/src/main/java/com/yahoo/athenz/zts/cert/CertRecordStoreConnection.java", "diffHunk": "@@ -70,4 +71,20 @@\n      * @return number of records deleted\n      */\n     int deleteExpiredX509CertRecords(int expiryTimeMins);\n+\n+    /**", "originalCommit": "57567e7d26adf3a1a8df78957f1b90b73ee1cf36", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk5MTg2NQ==", "url": "https://github.com/AthenZ/athenz/pull/907#discussion_r390991865", "bodyText": "Added 4 new nullable columns. Added tests that verify get / insert / update works correctly with null values for these columns.", "author": "OferLevi85", "createdAt": "2020-03-11T14:02:44Z", "path": "servers/zts/src/main/java/com/yahoo/athenz/zts/cert/impl/DynamoDBCertRecordStoreConnection.java", "diffHunk": "@@ -46,6 +47,10 @@\n     private static final String KEY_PREV_TIME = \"prevTime\";\n     private static final String KEY_PREV_IP = \"prevIP\";\n     private static final String KEY_CLIENT_CERT = \"clientCert\";\n+    private static final String KEY_LAST_NOTIFIED_TIME = \"lastNotifiedTime\";", "originalCommit": "57567e7d26adf3a1a8df78957f1b90b73ee1cf36", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk5MjQ3Nw==", "url": "https://github.com/AthenZ/athenz/pull/907#discussion_r390992477", "bodyText": "Our new notification is only for ZTS so at this point these methods are not required.", "author": "OferLevi85", "createdAt": "2020-03-11T14:03:37Z", "path": "servers/zts/src/main/java/com/yahoo/athenz/zts/cert/impl/DynamoDBCertRecordStoreConnection.java", "diffHunk": "@@ -179,6 +212,18 @@ public int deleteExpiredX509CertRecords(int expiryTimeMins) {\n         return 0;\n     }\n \n+    @Override", "originalCommit": "57567e7d26adf3a1a8df78957f1b90b73ee1cf36", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk5NDE4Mw==", "url": "https://github.com/AthenZ/athenz/pull/907#discussion_r390994183", "bodyText": "At this point this task doesn't return any notifications so no notifications will be sent in ZTS. It will be implemented after verifying the daily thread runs correctly in ZTS and the new columns are being populated.", "author": "OferLevi85", "createdAt": "2020-03-11T14:06:03Z", "path": "servers/zts/src/main/java/com/yahoo/athenz/zts/notification/CertFailedRefreshNotificationTask.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright 2020 Verizon Media\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.yahoo.athenz.zts.notification;\n+\n+import com.yahoo.athenz.common.server.notification.Notification;\n+import com.yahoo.athenz.common.server.notification.NotificationCommon;\n+import com.yahoo.athenz.common.server.notification.NotificationTask;\n+import com.yahoo.athenz.zts.cert.InstanceCertManager;\n+import com.yahoo.athenz.zts.store.DataStore;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import static com.yahoo.athenz.common.ServerCommonConsts.USER_DOMAIN_PREFIX;\n+\n+public class CertFailedRefreshNotificationTask implements NotificationTask {\n+    private final String serverName;\n+    private final InstanceCertManager instanceCertManager;\n+    private final DataStore dataStore;\n+    private final NotificationCommon notificationCommon;\n+    private static final Logger LOGGER = LoggerFactory.getLogger(CertFailedRefreshNotificationTask.class);\n+    private final static String DESCRIPTION = \"certificate failed refresh notification\";\n+\n+    public CertFailedRefreshNotificationTask(InstanceCertManager instanceCertManager, DataStore dataStore, String userDomainPrefix, String serverName) {\n+        this.serverName = serverName;\n+        this.instanceCertManager = instanceCertManager;\n+        this.dataStore = dataStore;\n+        ZTSDomainRoleMembersFetcher ztsDomainRoleMembersFetcher = new ZTSDomainRoleMembersFetcher(dataStore, USER_DOMAIN_PREFIX);\n+        this.notificationCommon = new NotificationCommon(ztsDomainRoleMembersFetcher, userDomainPrefix);\n+    }\n+\n+    @Override\n+    public List<Notification> getNotifications() {\n+        return new ArrayList<>();", "originalCommit": "57567e7d26adf3a1a8df78957f1b90b73ee1cf36", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTEzOTA1MQ==", "url": "https://github.com/AthenZ/athenz/pull/907#discussion_r391139051", "bodyText": "Currently implemented logic is to send notifications for certificates that didn't refresh for more than a day. Notification will be sent once a week for a month.\nWe can change this logic in a future pull request to consider expiration for example.", "author": "OferLevi85", "createdAt": "2020-03-11T17:26:13Z", "path": "servers/zts/src/main/java/com/yahoo/athenz/zts/cert/impl/JDBCCertRecordStoreConnection.java", "diffHunk": "@@ -37,24 +34,35 @@\n \n     private static final String SQL_GET_X509_RECORD = \"SELECT * FROM certificates WHERE provider=? AND instanceId=? AND service=?;\";\n     private static final String SQL_INSERT_X509_RECORD = \"INSERT INTO certificates \" +\n-            \"(provider, instanceId, service, currentSerial, currentTime, currentIP, prevSerial, prevTime, prevIP, clientCert) \" +\n-            \"VALUES (?, ?,?,?,?,?,?,?,?,?);\";\n+            \"(provider, instanceId, service, currentSerial, currentTime, currentIP, prevSerial, prevTime, prevIP, clientCert, \" +\n+            \"lastNotifiedTime, lastNotifiedServer, expiryTime, hostName) \" +\n+            \"VALUES (?, ?,?,?,?,?,?,?,?,?,?,?,?,?);\";\n     private static final String SQL_UPDATE_X509_RECORD = \"UPDATE certificates SET \" +\n-            \"currentSerial=?, currentTime=?, currentIP=?, prevSerial=?, prevTime=?, prevIP=?\" +\n+            \"currentSerial=?, currentTime=?, currentIP=?, prevSerial=?, prevTime=?, prevIP=?, \" +\n+            \"lastNotifiedTime=?, lastNotifiedServer=?, expiryTime=?, hostName=?\" +\n             \"WHERE provider=? AND instanceId=? AND service=?;\";\n     private static final String SQL_DELETE_X509_RECORD = \"DELETE from certificates \" +\n             \"WHERE provider=? AND instanceId=? AND service=?;\";\n     private static final String SQL_DELETE_EXPIRED_X509_RECORDS = \"DELETE FROM certificates \" +\n             \"WHERE currentTime < ADDDATE(NOW(), INTERVAL -? MINUTE);\";\n-    \n-    public static final String DB_COLUMN_SERVICE        = \"service\";\n-    public static final String DB_COLUMN_CURRENT_IP     = \"currentIP\";\n-    public static final String DB_COLUMN_CURRENT_SERIAL = \"currentSerial\";\n-    public static final String DB_COLUMN_CURRENT_TIME   = \"currentTime\";\n-    public static final String DB_COLUMN_PREV_IP        = \"prevIP\";\n-    public static final String DB_COLUMN_PREV_SERIAL    = \"prevSerial\";\n-    public static final String DB_COLUMN_PREV_TIME      = \"prevTime\";\n-    public static final String DB_COLUMN_CLIENT_CERT    = \"clientCert\";\n+    private static final String SQL_UPDATE_UNREFRESHED_X509_RECORDS_NOTIFICATION_TIMESTAMP = \"UPDATE certificates SET lastNotifiedTime=?, lastNotifiedServer=? \" +\n+            \"WHERE currentTime < (CURRENT_DATE - INTERVAL 1 DAY) AND DATEDIFF(CURRENT_TIME, currentTime) IN (1,7,14,21,28) AND (lastNotifiedTime IS NULL || lastNotifiedTime < (CURRENT_DATE - INTERVAL 1 DAY))\";\n+    private static final String SQL_LIST_NOTIFY_UNREFRESHED_X509_RECORDS = \"SELECT * FROM certificates WHERE lastNotifiedTime=? AND lastNotifiedServer=?;\";\n+", "originalCommit": "57567e7d26adf3a1a8df78957f1b90b73ee1cf36", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI0ODA3Nw==", "url": "https://github.com/AthenZ/athenz/pull/907#discussion_r393248077", "bodyText": "Note this logic was fixed in the up-coming pull request according to our last session. You may ignore it for now.", "author": "OferLevi85", "createdAt": "2020-03-16T18:59:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTEzOTA1MQ=="}], "type": "inlineReview"}, {"oid": "ab40bd50cc5cbc96edca0bd53644c67a947d9da7", "url": "https://github.com/AthenZ/athenz/commit/ab40bd50cc5cbc96edca0bd53644c67a947d9da7", "message": "Implement ZTS Notifications DB logic\n\n- Created CertFailedRefreshNotificationTask but not yet implemented. Will be implemented after DB logic is approved.\n- CertRecordStoreConnection - Added 2 methods to fetch unrefreshed certificates that haven't been notified by other servers.\n- DomainRoleMembersFetcherCommon - Added common implementation for ZMS entities (and added a dependency on athenz-zms-core in common)\n- JDBCCertRecordStoreConnection - Modified Insert / Update methods for new notification columns.\n- Added tests to verify insert / update / get work on nullable columns", "committedDate": "2020-03-12T09:18:30Z", "type": "forcePushed"}, {"oid": "5a9e696d92ac47fa365cb7e1b2b6bb5db044e28f", "url": "https://github.com/AthenZ/athenz/commit/5a9e696d92ac47fa365cb7e1b2b6bb5db044e28f", "message": "Implement ZTS Notifications DB logic\n\n- Created CertFailedRefreshNotificationTask but not yet implemented. Will be implemented after DB logic is approved.\n- CertRecordStoreConnection - Added 2 methods to fetch unrefreshed certificates that haven't been notified by other servers.\n- DomainRoleMembersFetcherCommon - Added common implementation for ZMS entities (and added a dependency on athenz-zms-core in common)\n- JDBCCertRecordStoreConnection - Modified Insert / Update methods for new notification columns.\n- Added tests to verify insert / update / get work on nullable columns", "committedDate": "2020-03-12T10:02:09Z", "type": "forcePushed"}, {"oid": "f62ba6ab92b33a7d4a8455c00ddc550a523427ab", "url": "https://github.com/AthenZ/athenz/commit/f62ba6ab92b33a7d4a8455c00ddc550a523427ab", "message": "Implement ZTS Notifications DB logic\n\n- Created CertFailedRefreshNotificationTask but not yet implemented. Will be implemented after DB logic is approved.\n- CertRecordStoreConnection - Added 2 methods to fetch unrefreshed certificates that haven't been notified by other servers.\n- DomainRoleMembersFetcherCommon - Added common implementation for ZMS entities (and added a dependency on athenz-zms-core in common)\n- JDBCCertRecordStoreConnection - Modified Insert / Update methods for new notification columns.\n- Added tests to verify insert / update / get work on nullable columns", "committedDate": "2020-03-14T23:40:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY0ODA1MQ==", "url": "https://github.com/AthenZ/athenz/pull/907#discussion_r392648051", "bodyText": "As we talked about on a different pull request, the status will not be part of the interface", "author": "OferLevi85", "createdAt": "2020-03-15T07:17:44Z", "path": "libs/java/server_common/src/main/java/com/yahoo/athenz/common/server/notification/impl/EmailNotificationService.java", "diffHunk": "@@ -251,20 +251,21 @@ void processExpiryEntry(StringBuilder body, final String entryNames, final Strin\n \n     boolean sendEmail(Set<String> recipients, String subject, String body) {\n         final AtomicInteger counter = new AtomicInteger();\n-        boolean status = true;\n         // SES imposes a limit of 50 recipients. So we convert the recipients into batches\n         if (recipients.size() > SES_RECIPIENTS_LIMIT_PER_MESSAGE) {\n             final Collection<List<String>> recipientsBatch = recipients.stream()\n                     .collect(Collectors.groupingBy(it -> counter.getAndIncrement() / SES_RECIPIENTS_LIMIT_PER_MESSAGE))\n                     .values();\n+            boolean status = true;\n             for (List<String> recipientsSegment : recipientsBatch) {\n-                status = sendEmailMIME(subject, body, status, recipientsSegment);", "originalCommit": "f62ba6ab92b33a7d4a8455c00ddc550a523427ab", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY0ODA2MA==", "url": "https://github.com/AthenZ/athenz/pull/907#discussion_r392648060", "bodyText": "As we talked about on a different pull request, the status will not be part of the interface", "author": "OferLevi85", "createdAt": "2020-03-15T07:17:53Z", "path": "libs/java/server_common/src/main/java/com/yahoo/athenz/common/server/notification/impl/EmailNotificationService.java", "diffHunk": "@@ -337,7 +338,7 @@ private MimeMessage getMimeMessage(String subject, String body, Collection<Strin\n         return message;\n     }\n \n-    private boolean sendEmailMIME(String subject, String body, boolean status, Collection<String> recipients) {\n+    private boolean sendEmailMIME(String subject, String body, Collection<String> recipients) {", "originalCommit": "f62ba6ab92b33a7d4a8455c00ddc550a523427ab", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ2NjU5OQ==", "url": "https://github.com/AthenZ/athenz/pull/907#discussion_r393466599", "bodyText": "we cannot use the certExpiryTime here since the cert signer may not honor what the server is asking  and instead use another expiry time. So the correct value here is to extract the expiry from the newCert that we're about send back to the client.\nalso, for the last hostname argument, why are we passing null instead of info.getHostname()?", "author": "havetisyan", "createdAt": "2020-03-17T06:26:55Z", "path": "servers/zts/src/main/java/com/yahoo/athenz/zts/ZTSImpl.java", "diffHunk": "@@ -2678,7 +2700,7 @@ public Response postInstanceRegisterInformation(ResourceContext ctx, InstanceReg\n             // able to validate the certificate during refresh operations\n \n             if (insertX509CertRecord(ctx, cn, provider, certReqInstanceId, certSerial,\n-                    InstanceProvider.ZTS_CERT_USAGE_CLIENT.equalsIgnoreCase(certUsage)) == null) {\n+                    InstanceProvider.ZTS_CERT_USAGE_CLIENT.equalsIgnoreCase(certUsage), certExpiryTime, null) == null) {", "originalCommit": "f62ba6ab92b33a7d4a8455c00ddc550a523427ab", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ2OTA1Mg==", "url": "https://github.com/AthenZ/athenz/pull/907#discussion_r393469052", "bodyText": "this one is the recovery mode certificate record. so the correct value should be the expiry of the cert  certificate and not the expiryTime. So we can extract the expiry from cert object passed in and use that.", "author": "havetisyan", "createdAt": "2020-03-17T06:35:36Z", "path": "servers/zts/src/main/java/com/yahoo/athenz/zts/ZTSImpl.java", "diffHunk": "@@ -3117,7 +3129,7 @@ X509CertRecord getValidatedX509CertRecord(ResourceContext ctx, final String prov\n \n             if (cert.getNotBefore().getTime() < x509CertRefreshResetTime) {\n                 x509CertRecord = insertX509CertRecord(ctx, principalName, provider, instanceId,\n-                        cert.getSerialNumber().toString(), false);\n+                        cert.getSerialNumber().toString(), false, expiryTime, null);", "originalCommit": "f62ba6ab92b33a7d4a8455c00ddc550a523427ab", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "fe5b035e065863aceb66647959d3c747284ed5bf", "url": "https://github.com/AthenZ/athenz/commit/fe5b035e065863aceb66647959d3c747284ed5bf", "message": "Implement ZTS Notifications DB logic\n\n- Created CertFailedRefreshNotificationTask but not yet implemented. Will be implemented after DB logic is approved.\n- CertRecordStoreConnection - Added 2 methods to fetch unrefreshed certificates that haven't been notified by other servers.\n- DomainRoleMembersFetcherCommon - Added common implementation for ZMS entities (and added a dependency on athenz-zms-core in common)\n- JDBCCertRecordStoreConnection - Modified Insert / Update methods for new notification columns.\n- Added tests to verify insert / update / get work on nullable columns", "committedDate": "2020-03-17T08:42:08Z", "type": "forcePushed"}, {"oid": "f5590c82825a2bd72b221f9c5a24b836c1b262a2", "url": "https://github.com/AthenZ/athenz/commit/f5590c82825a2bd72b221f9c5a24b836c1b262a2", "message": "Implement ZTS Notifications DB logic\n\n- Created CertFailedRefreshNotificationTask but not yet implemented. Will be implemented after DB logic is approved.\n- CertRecordStoreConnection - Added 2 methods to fetch unrefreshed certificates that haven't been notified by other servers.\n- DomainRoleMembersFetcherCommon - Added common implementation for ZMS entities (and added a dependency on athenz-zms-core in common)\n- JDBCCertRecordStoreConnection - Modified Insert / Update methods for new notification columns.\n- Added tests to verify insert / update / get work on nullable columns", "committedDate": "2020-03-17T08:50:24Z", "type": "commit"}, {"oid": "f5590c82825a2bd72b221f9c5a24b836c1b262a2", "url": "https://github.com/AthenZ/athenz/commit/f5590c82825a2bd72b221f9c5a24b836c1b262a2", "message": "Implement ZTS Notifications DB logic\n\n- Created CertFailedRefreshNotificationTask but not yet implemented. Will be implemented after DB logic is approved.\n- CertRecordStoreConnection - Added 2 methods to fetch unrefreshed certificates that haven't been notified by other servers.\n- DomainRoleMembersFetcherCommon - Added common implementation for ZMS entities (and added a dependency on athenz-zms-core in common)\n- JDBCCertRecordStoreConnection - Modified Insert / Update methods for new notification columns.\n- Added tests to verify insert / update / get work on nullable columns", "committedDate": "2020-03-17T08:50:24Z", "type": "forcePushed"}]}