{"pr_number": 2383, "pr_title": "Added SlimefunGuideOpenEvent.", "pr_createdAt": "2020-10-03T20:07:56Z", "pr_url": "https://github.com/Slimefun/Slimefun4/pull/2383", "timeline": [{"oid": "d72a60aed148e165bb15d2123f90848413355e72", "url": "https://github.com/Slimefun/Slimefun4/commit/d72a60aed148e165bb15d2123f90848413355e72", "message": "Added GuideOpenEvent.", "committedDate": "2020-10-03T20:04:39Z", "type": "commit"}, {"oid": "2cfbaf3ca6d18459e78a22fdefa815985ced982b", "url": "https://github.com/Slimefun/Slimefun4/commit/2cfbaf3ca6d18459e78a22fdefa815985ced982b", "message": "Added GuideOpenEvent.", "committedDate": "2020-10-03T20:05:23Z", "type": "commit"}, {"oid": "869051b09343f0d0a9a43c2fc65c081f5ce7bb5e", "url": "https://github.com/Slimefun/Slimefun4/commit/869051b09343f0d0a9a43c2fc65c081f5ce7bb5e", "message": "Merge branch 'master' into SfGuideEvent", "committedDate": "2020-10-03T20:09:25Z", "type": "commit"}, {"oid": "6d887b8abf7b44a7cb38039dddfaa54878eb3d85", "url": "https://github.com/Slimefun/Slimefun4/commit/6d887b8abf7b44a7cb38039dddfaa54878eb3d85", "message": "Fixed some build errors.", "committedDate": "2020-10-03T20:17:09Z", "type": "commit"}, {"oid": "5e038d1cc8191b1b3009d86ec7a6d896c3757606", "url": "https://github.com/Slimefun/Slimefun4/commit/5e038d1cc8191b1b3009d86ec7a6d896c3757606", "message": "And this is the last build error. Hopefully...", "committedDate": "2020-10-03T20:20:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE3OTAxMA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2383#discussion_r499179010", "bodyText": "tryOpenGuide sounds a bit better in my opinion.", "author": "TheBusyBiscuit", "createdAt": "2020-10-03T20:22:28Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/SlimefunGuideListener.java", "diffHunk": "@@ -72,16 +74,24 @@ else if (openGuide(e, SlimefunGuideLayout.CHEAT_SHEET) == Result.ALLOW) {\n             }\n         }\n     }\n+    \n+    @ParametersAreNonnullByDefault\n+    private void openGuide(Player p, PlayerRightClickEvent e, SlimefunGuideLayout layout) {\n+        GuideOpenEvent event = new GuideOpenEvent(p, e.getItem()) ;\n+        Bukkit.getPluginManager().callEvent(event);\n+        \n+        if (!event.isCancelled()) {\n+            e.cancel();\n+            SlimefunGuide.openGuide(p, layout);\n+        } \n+    } \n \n     @Nonnull\n     @ParametersAreNonnullByDefault\n-    private Result openGuide(PlayerRightClickEvent e, SlimefunGuideLayout layout) {\n-        Player p = e.getPlayer();\n+    private Result tryGuide(Player p, PlayerRightClickEvent e, SlimefunGuideLayout layout) {", "originalCommit": "5e038d1cc8191b1b3009d86ec7a6d896c3757606", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE3OTAyNw==", "url": "https://github.com/Slimefun/Slimefun4/pull/2383#discussion_r499179027", "bodyText": "SlimefunGuideOpenEvent maybe?", "author": "TheBusyBiscuit", "createdAt": "2020-10-03T20:22:42Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/GuideOpenEvent.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\r\n+\r\n+import javax.annotation.Nonnull;\r\n+\r\n+import org.apache.commons.lang.Validate;\r\n+import org.bukkit.entity.Player;\r\n+import org.bukkit.event.Cancellable;\r\n+import org.bukkit.event.Event;\r\n+import org.bukkit.event.HandlerList;\r\n+import org.bukkit.inventory.ItemStack;\r\n+\r\n+/**\r\n+ * This {@link Event} is called whenever a {@link Player} tries to open the Slimefun Guide book. \r\n+ * \r\n+ * @author Linox\r\n+ *\r\n+ */\r\n+public class GuideOpenEvent extends Event implements Cancellable {\r", "originalCommit": "5e038d1cc8191b1b3009d86ec7a6d896c3757606", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE3OTA1Mw==", "url": "https://github.com/Slimefun/Slimefun4/pull/2383#discussion_r499179053", "bodyText": "Some docs comments for these two methods would be nice.", "author": "TheBusyBiscuit", "createdAt": "2020-10-03T20:23:11Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/GuideOpenEvent.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\r\n+\r\n+import javax.annotation.Nonnull;\r\n+\r\n+import org.apache.commons.lang.Validate;\r\n+import org.bukkit.entity.Player;\r\n+import org.bukkit.event.Cancellable;\r\n+import org.bukkit.event.Event;\r\n+import org.bukkit.event.HandlerList;\r\n+import org.bukkit.inventory.ItemStack;\r\n+\r\n+/**\r\n+ * This {@link Event} is called whenever a {@link Player} tries to open the Slimefun Guide book. \r\n+ * \r\n+ * @author Linox\r\n+ *\r\n+ */\r\n+public class GuideOpenEvent extends Event implements Cancellable {\r\n+\r\n+    private static final HandlerList handlers = new HandlerList();\r\n+\r\n+    private final Player player;\r\n+    private final ItemStack guide;\r\n+    private boolean cancelled;\r\n+\r\n+    public GuideOpenEvent(@Nonnull Player p, @Nonnull ItemStack guide) {\r\n+        Validate.notNull(p, \"The Player cannot be null\");\r\n+        Validate.notNull(guide, \"Guide cannot be null\");\r\n+        this.player = p;\r\n+        this.guide = guide;\r\n+    }\r\n+\r\n+    @Nonnull\r\n+    public Player getPlayer() {\r\n+        return player;\r\n+    }\r\n+\r\n+    @Nonnull\r\n+    public ItemStack getGuide() {\r\n+        return guide;\r\n+    }\r", "originalCommit": "5e038d1cc8191b1b3009d86ec7a6d896c3757606", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE3OTA4OQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/2383#discussion_r499179089", "bodyText": "I think a SlimefunGuideLayout with respective getters/setters would be great too", "author": "TheBusyBiscuit", "createdAt": "2020-10-03T20:23:32Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/GuideOpenEvent.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\r\n+\r\n+import javax.annotation.Nonnull;\r\n+\r\n+import org.apache.commons.lang.Validate;\r\n+import org.bukkit.entity.Player;\r\n+import org.bukkit.event.Cancellable;\r\n+import org.bukkit.event.Event;\r\n+import org.bukkit.event.HandlerList;\r\n+import org.bukkit.inventory.ItemStack;\r\n+\r\n+/**\r\n+ * This {@link Event} is called whenever a {@link Player} tries to open the Slimefun Guide book. \r\n+ * \r\n+ * @author Linox\r\n+ *\r\n+ */\r\n+public class GuideOpenEvent extends Event implements Cancellable {\r\n+\r\n+    private static final HandlerList handlers = new HandlerList();\r\n+\r\n+    private final Player player;\r\n+    private final ItemStack guide;\r\n+    private boolean cancelled;\r\n+\r\n+    public GuideOpenEvent(@Nonnull Player p, @Nonnull ItemStack guide) {\r", "originalCommit": "5e038d1cc8191b1b3009d86ec7a6d896c3757606", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a222295b039416613a54ac0986dfd55fd69db391", "url": "https://github.com/Slimefun/Slimefun4/commit/a222295b039416613a54ac0986dfd55fd69db391", "message": "Did a requested change.", "committedDate": "2020-10-03T20:39:06Z", "type": "commit"}, {"oid": "41fc987083d4dae8c171282518832fd26a2d5349", "url": "https://github.com/Slimefun/Slimefun4/commit/41fc987083d4dae8c171282518832fd26a2d5349", "message": "Did more requested changes.", "committedDate": "2020-10-03T20:56:51Z", "type": "commit"}, {"oid": "fc999ae60d928569af82045be75e1bb07cf2b23b", "url": "https://github.com/Slimefun/Slimefun4/commit/fc999ae60d928569af82045be75e1bb07cf2b23b", "message": "Update SlimefunGuideListener.java", "committedDate": "2020-10-03T20:57:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4MTQ2Mw==", "url": "https://github.com/Slimefun/Slimefun4/pull/2383#discussion_r499181463", "bodyText": "Missing @return tag", "author": "TheBusyBiscuit", "createdAt": "2020-10-03T20:58:48Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/SlimefunGuideOpenEvent.java", "diffHunk": "@@ -9,36 +9,59 @@\n import org.bukkit.event.HandlerList;\r\n import org.bukkit.inventory.ItemStack;\r\n \r\n+import io.github.thebusybiscuit.slimefun4.core.guide.SlimefunGuideLayout;\r\n+\r\n /**\r\n  * This {@link Event} is called whenever a {@link Player} tries to open the Slimefun Guide book. \r\n  * \r\n  * @author Linox\r\n  *\r\n+ * @see SlimefunGuideLayout\r\n  */\r\n-public class GuideOpenEvent extends Event implements Cancellable {\r\n+public class SlimefunGuideOpenEvent extends Event implements Cancellable {\r\n \r\n     private static final HandlerList handlers = new HandlerList();\r\n \r\n     private final Player player;\r\n     private final ItemStack guide;\r\n+    private final SlimefunGuideLayout layout;\r\n     private boolean cancelled;\r\n \r\n-    public GuideOpenEvent(@Nonnull Player p, @Nonnull ItemStack guide) {\r\n+    public SlimefunGuideOpenEvent(@Nonnull Player p, @Nonnull ItemStack guide, @Nonnull SlimefunGuideLayout layout) {\r\n         Validate.notNull(p, \"The Player cannot be null\");\r\n         Validate.notNull(guide, \"Guide cannot be null\");\r\n+        Validate.notNull(layout, \"Layout cannot be null\");\r\n         this.player = p;\r\n         this.guide = guide;\r\n+        this.layout = layout;\r\n     }\r\n \r\n+    /**\r\n+     * This returns the {@link Player} that tries to open \r\n+     * the Slimefun Guide.\r\n+     */\r\n     @Nonnull\r\n     public Player getPlayer() {\r\n         return player;\r\n     }\r\n \r\n+    /**\r\n+     * This returns the {@link ItemStack} that {@link Player} \r\n+     * tries to open the Slimefun Guide with.\r\n+     */\r\n     @Nonnull\r\n     public ItemStack getGuide() {\r\n         return guide;\r\n     }\r\n+    \r\n+    /**\r\n+     * This returns the {@link SlimefunGuideLayout} of the Slimefun Guide\r\n+     * that {@link Player} tries to open.\r", "originalCommit": "41fc987083d4dae8c171282518832fd26a2d5349", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4MTQ2Ng==", "url": "https://github.com/Slimefun/Slimefun4/pull/2383#discussion_r499181466", "bodyText": "Missing @return tag", "author": "TheBusyBiscuit", "createdAt": "2020-10-03T20:58:51Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/SlimefunGuideOpenEvent.java", "diffHunk": "@@ -9,36 +9,59 @@\n import org.bukkit.event.HandlerList;\r\n import org.bukkit.inventory.ItemStack;\r\n \r\n+import io.github.thebusybiscuit.slimefun4.core.guide.SlimefunGuideLayout;\r\n+\r\n /**\r\n  * This {@link Event} is called whenever a {@link Player} tries to open the Slimefun Guide book. \r\n  * \r\n  * @author Linox\r\n  *\r\n+ * @see SlimefunGuideLayout\r\n  */\r\n-public class GuideOpenEvent extends Event implements Cancellable {\r\n+public class SlimefunGuideOpenEvent extends Event implements Cancellable {\r\n \r\n     private static final HandlerList handlers = new HandlerList();\r\n \r\n     private final Player player;\r\n     private final ItemStack guide;\r\n+    private final SlimefunGuideLayout layout;\r\n     private boolean cancelled;\r\n \r\n-    public GuideOpenEvent(@Nonnull Player p, @Nonnull ItemStack guide) {\r\n+    public SlimefunGuideOpenEvent(@Nonnull Player p, @Nonnull ItemStack guide, @Nonnull SlimefunGuideLayout layout) {\r\n         Validate.notNull(p, \"The Player cannot be null\");\r\n         Validate.notNull(guide, \"Guide cannot be null\");\r\n+        Validate.notNull(layout, \"Layout cannot be null\");\r\n         this.player = p;\r\n         this.guide = guide;\r\n+        this.layout = layout;\r\n     }\r\n \r\n+    /**\r\n+     * This returns the {@link Player} that tries to open \r\n+     * the Slimefun Guide.\r\n+     */\r\n     @Nonnull\r\n     public Player getPlayer() {\r\n         return player;\r\n     }\r\n \r\n+    /**\r\n+     * This returns the {@link ItemStack} that {@link Player} \r\n+     * tries to open the Slimefun Guide with.\r", "originalCommit": "41fc987083d4dae8c171282518832fd26a2d5349", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4MTQ3MQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/2383#discussion_r499181471", "bodyText": "Missing @return tag", "author": "TheBusyBiscuit", "createdAt": "2020-10-03T20:58:55Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/SlimefunGuideOpenEvent.java", "diffHunk": "@@ -9,36 +9,59 @@\n import org.bukkit.event.HandlerList;\r\n import org.bukkit.inventory.ItemStack;\r\n \r\n+import io.github.thebusybiscuit.slimefun4.core.guide.SlimefunGuideLayout;\r\n+\r\n /**\r\n  * This {@link Event} is called whenever a {@link Player} tries to open the Slimefun Guide book. \r\n  * \r\n  * @author Linox\r\n  *\r\n+ * @see SlimefunGuideLayout\r\n  */\r\n-public class GuideOpenEvent extends Event implements Cancellable {\r\n+public class SlimefunGuideOpenEvent extends Event implements Cancellable {\r\n \r\n     private static final HandlerList handlers = new HandlerList();\r\n \r\n     private final Player player;\r\n     private final ItemStack guide;\r\n+    private final SlimefunGuideLayout layout;\r\n     private boolean cancelled;\r\n \r\n-    public GuideOpenEvent(@Nonnull Player p, @Nonnull ItemStack guide) {\r\n+    public SlimefunGuideOpenEvent(@Nonnull Player p, @Nonnull ItemStack guide, @Nonnull SlimefunGuideLayout layout) {\r\n         Validate.notNull(p, \"The Player cannot be null\");\r\n         Validate.notNull(guide, \"Guide cannot be null\");\r\n+        Validate.notNull(layout, \"Layout cannot be null\");\r\n         this.player = p;\r\n         this.guide = guide;\r\n+        this.layout = layout;\r\n     }\r\n \r\n+    /**\r\n+     * This returns the {@link Player} that tries to open \r\n+     * the Slimefun Guide.\r", "originalCommit": "41fc987083d4dae8c171282518832fd26a2d5349", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4MTc4NQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/2383#discussion_r499181785", "bodyText": "Haha, build is failing.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    GuideOpenEvent event = new GuideOpenEvent(p, e.getItem(), layout) ;\n          \n          \n            \n                    SlimefunGuideOpenEvent event = new SlimefunGuideOpenEvent(p, e.getItem(), layout);", "author": "poma123", "createdAt": "2020-10-03T21:04:34Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/SlimefunGuideListener.java", "diffHunk": "@@ -72,16 +74,24 @@ else if (openGuide(e, SlimefunGuideLayout.CHEAT_SHEET) == Result.ALLOW) {\n             }\n         }\n     }\n+    \n+    @ParametersAreNonnullByDefault\n+    private void openGuide(Player p, PlayerRightClickEvent e, SlimefunGuideLayout layout) {\n+        GuideOpenEvent event = new GuideOpenEvent(p, e.getItem(), layout) ;", "originalCommit": "fc999ae60d928569af82045be75e1bb07cf2b23b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4MTc5OA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2383#discussion_r499181798", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import io.github.thebusybiscuit.slimefun4.api.events.GuideOpenEvent;\n          \n          \n            \n            import io.github.thebusybiscuit.slimefun4.api.events.SlimefunGuideOpenEvent;", "author": "poma123", "createdAt": "2020-10-03T21:04:53Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/SlimefunGuideListener.java", "diffHunk": "@@ -11,6 +12,7 @@\n import org.bukkit.event.player.PlayerJoinEvent;\n import org.bukkit.inventory.ItemStack;\n \n+import io.github.thebusybiscuit.slimefun4.api.events.GuideOpenEvent;", "originalCommit": "fc999ae60d928569af82045be75e1bb07cf2b23b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0e530fe13ad55b24574dc0cd4c2f71c5c1097ea9", "url": "https://github.com/Slimefun/Slimefun4/commit/0e530fe13ad55b24574dc0cd4c2f71c5c1097ea9", "message": "Update src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/SlimefunGuideListener.java\n\nCo-authored-by: poma123 <25465545+poma123@users.noreply.github.com>", "committedDate": "2020-10-03T21:06:13Z", "type": "commit"}, {"oid": "4316f83a007d1b30fc3f1824f4bb014ad1da5349", "url": "https://github.com/Slimefun/Slimefun4/commit/4316f83a007d1b30fc3f1824f4bb014ad1da5349", "message": "Update src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/SlimefunGuideListener.java\n\nCo-authored-by: poma123 <25465545+poma123@users.noreply.github.com>", "committedDate": "2020-10-03T21:06:20Z", "type": "commit"}, {"oid": "f7c3a5b052e1ce0aad86487206dbe4b5c453933a", "url": "https://github.com/Slimefun/Slimefun4/commit/f7c3a5b052e1ce0aad86487206dbe4b5c453933a", "message": "Did some more requestes changes.", "committedDate": "2020-10-03T21:09:52Z", "type": "commit"}, {"oid": "2ed707b3b318a0d8a6dedb6a28a7fd56090ee332", "url": "https://github.com/Slimefun/Slimefun4/commit/2ed707b3b318a0d8a6dedb6a28a7fd56090ee332", "message": "Update SlimefunGuideOpenEvent.java", "committedDate": "2020-10-03T21:25:27Z", "type": "commit"}, {"oid": "ca76411c403ec4ee9d6a314b8871a538b8236b4a", "url": "https://github.com/Slimefun/Slimefun4/commit/ca76411c403ec4ee9d6a314b8871a538b8236b4a", "message": "Update SlimefunGuideListener.java", "committedDate": "2020-10-03T21:26:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4NTQ1NA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2383#discussion_r499185454", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    this.layout = layout;\n          \n          \n            \n                    Validate.notNull(layout, \"You must specify a layout that is not-null!\");\n          \n          \n            \n                    this.layout = layout;", "author": "TheBusyBiscuit", "createdAt": "2020-10-03T22:03:24Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/SlimefunGuideOpenEvent.java", "diffHunk": "@@ -0,0 +1,103 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\r\n+\r\n+import javax.annotation.Nonnull;\r\n+\r\n+import org.apache.commons.lang.Validate;\r\n+import org.bukkit.entity.Player;\r\n+import org.bukkit.event.Cancellable;\r\n+import org.bukkit.event.Event;\r\n+import org.bukkit.event.HandlerList;\r\n+import org.bukkit.inventory.ItemStack;\r\n+\r\n+import io.github.thebusybiscuit.slimefun4.core.guide.SlimefunGuideLayout;\r\n+\r\n+/**\r\n+ * This {@link Event} is called whenever a {@link Player} tries to open the Slimefun Guide book. \r\n+ * \r\n+ * @author Linox\r\n+ *\r\n+ * @see SlimefunGuideLayout\r\n+ */\r\n+public class SlimefunGuideOpenEvent extends Event implements Cancellable {\r\n+\r\n+    private static final HandlerList handlers = new HandlerList();\r\n+\r\n+    private final Player player;\r\n+    private final ItemStack guide;\r\n+    private SlimefunGuideLayout layout;\r\n+    private boolean cancelled;\r\n+\r\n+    public SlimefunGuideOpenEvent(@Nonnull Player p, @Nonnull ItemStack guide, @Nonnull SlimefunGuideLayout layout) {\r\n+        Validate.notNull(p, \"The Player cannot be null\");\r\n+        Validate.notNull(guide, \"Guide cannot be null\");\r\n+        Validate.notNull(layout, \"Layout cannot be null\");\r\n+        this.player = p;\r\n+        this.guide = guide;\r\n+        this.layout = layout;\r\n+    }\r\n+\r\n+    /**\r\n+     * This returns the {@link Player} that tries to open \r\n+     * the Slimefun Guide.\r\n+     *\r\n+     * @return The {@link Player}\r\n+     */\r\n+    @Nonnull\r\n+    public Player getPlayer() {\r\n+        return player;\r\n+    }\r\n+\r\n+    /**\r\n+     * This returns the {@link ItemStack} that {@link Player} \r\n+     * tries to open the Slimefun Guide with.\r\n+     *\r\n+     * @return The {@link ItemStack}\r\n+     */\r\n+    @Nonnull\r\n+    public ItemStack getGuide() {\r\n+        return guide;\r\n+    }\r\n+    \r\n+    /**\r\n+     * This returns the {@link SlimefunGuideLayout} of the Slimefun Guide\r\n+     * that {@link Player} tries to open.\r\n+     *\r\n+     * @return The {@link SlimefunGuideLayout}\r\n+     */\r\n+    @Nonnull\r\n+    public SlimefunGuideLayout getGuideLayout() {\r\n+        return layout;\r\n+    }\r\n+    \r\n+    /**\r\n+     * Changes the {@link SlimefunGuideLayout} that was tried to be opened with.\r\n+     *\r\n+     * @param layout\r\n+     *                   The new {@link SlimefunGuideLayout}\r\n+     */\r\n+    public void setGuideLayout(@Nonnull SlimefunGuideLayout layout) {\r\n+        this.layout = layout;\r", "originalCommit": "ca76411c403ec4ee9d6a314b8871a538b8236b4a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "dbe8755e4a23b1e5390b50b4bf90a2dac120a0f9", "url": "https://github.com/Slimefun/Slimefun4/commit/dbe8755e4a23b1e5390b50b4bf90a2dac120a0f9", "message": "Update src/main/java/io/github/thebusybiscuit/slimefun4/api/events/SlimefunGuideOpenEvent.java\n\nCo-authored-by: TheBusyBiscuit <TheBusyBiscuit@users.noreply.github.com>", "committedDate": "2020-10-03T22:04:41Z", "type": "commit"}]}