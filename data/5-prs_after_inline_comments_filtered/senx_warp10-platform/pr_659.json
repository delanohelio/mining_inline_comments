{"pr_number": 659, "pr_title": "Fix JSON dump test with expose owner and producer", "pr_createdAt": "2020-02-10T10:54:14Z", "pr_url": "https://github.com/senx/warp10-platform/pull/659", "timeline": [{"oid": "17db98ca7c504beb8354865e9f7ff5433f5c61d0", "url": "https://github.com/senx/warp10-platform/commit/17db98ca7c504beb8354865e9f7ff5433f5c61d0", "message": "Fix JSON dump test with expose owner and producer", "committedDate": "2020-02-10T10:52:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk5MzAzNg==", "url": "https://github.com/senx/warp10-platform/pull/659#discussion_r376993036", "bodyText": "Would be clearer if the values used for producer and owner were actual UUIDs, it would not lead people into thinking other values could be there", "author": "hbs", "createdAt": "2020-02-10T10:57:16Z", "path": "warp10/src/test/java/io/warp10/continuum/egress/EgressFetchHandlerTest.java", "diffHunk": "@@ -1,45 +1,74 @@\n package io.warp10.continuum.egress;\n \n+import io.warp10.WarpConfig;\n import io.warp10.continuum.gts.GTSDecoder;\n import io.warp10.continuum.gts.GTSEncoder;\n import io.warp10.continuum.store.thrift.data.Metadata;\n-import org.apache.commons.io.IOUtils;\n-import org.junit.Test;\n \n-import java.io.*;\n+import java.io.ByteArrayOutputStream;\n+import java.io.PrintWriter;\n+import java.io.StringReader;\n import java.nio.charset.StandardCharsets;\n-import java.util.*;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.Map;\n import java.util.concurrent.atomic.AtomicLong;\n import java.util.concurrent.atomic.AtomicReference;\n \n+import org.apache.commons.io.IOUtils;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n import static java.util.Collections.singleton;\n import static java.util.Collections.singletonMap;\n import static org.junit.Assert.assertEquals;\n \n public class EgressFetchHandlerTest {\n-  private static ClassLoader CL = EgressFetchHandlerTest.class.getClassLoader();\n+\n+  private static final ClassLoader CL = EgressFetchHandlerTest.class.getClassLoader();\n+\n+  @BeforeClass\n+  public static void beforeClass() throws Exception {\n+    WarpConfig.safeSetProperties(new StringReader(\"warp.timeunits=us\"));\n+  }\n \n   @Test\n-  public void testJsonDump() throws Exception {\n+  public void testJsonDumpWithoutExpose() throws Exception {\n+    String json = jsonDumpWithExpose(false);\n+    String expect = IOUtils.toString(CL.getResourceAsStream(\"EgressFetchHandlerTest_1.json\"), StandardCharsets.UTF_8);\n+\n+    assertEquals(expect.trim(), json);\n+  }\n+\n+  @Test\n+  public void testJsonDumpWithExpose() throws Exception {\n+    String json = jsonDumpWithExpose(true);\n+    String expect = IOUtils.toString(CL.getResourceAsStream(\"EgressFetchHandlerExposeTest.json\"), StandardCharsets.UTF_8);\n+\n+    assertEquals(expect.trim(), json);\n+  }\n+\n+  private String jsonDumpWithExpose(boolean expose) throws Exception {\n+    Map<String, String> labels = new HashMap<String, String>();\n+    labels.put(\"foo\", \"bar\");", "originalCommit": "17db98ca7c504beb8354865e9f7ff5433f5c61d0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzAwMzYzNA==", "url": "https://github.com/senx/warp10-platform/pull/659#discussion_r377003634", "bodyText": "done", "author": "steven-gueguen", "createdAt": "2020-02-10T11:20:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk5MzAzNg=="}], "type": "inlineReview"}, {"oid": "c95ac6558a86500da601a6960b85f6196663dc47", "url": "https://github.com/senx/warp10-platform/commit/c95ac6558a86500da601a6960b85f6196663dc47", "message": "Use UUID for owner and producer", "committedDate": "2020-02-10T11:19:44Z", "type": "commit"}]}