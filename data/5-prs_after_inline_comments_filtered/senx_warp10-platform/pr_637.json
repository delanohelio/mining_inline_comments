{"pr_number": 637, "pr_title": "filter by size", "pr_createdAt": "2020-01-16T17:00:23Z", "pr_url": "https://github.com/senx/warp10-platform/pull/637", "timeline": [{"oid": "a0ff0253ca72c5e0f1e57515cd7f9f1f676cb10a", "url": "https://github.com/senx/warp10-platform/commit/a0ff0253ca72c5e0f1e57515cd7f9f1f676cb10a", "message": "filter by size", "committedDate": "2020-01-16T16:59:08Z", "type": "commit"}, {"oid": "2235f29447cdd3d8e2a1bf0799c96c20cf3e5372", "url": "https://github.com/senx/warp10-platform/commit/2235f29447cdd3d8e2a1bf0799c96c20cf3e5372", "message": "fix imports", "committedDate": "2020-01-16T17:02:03Z", "type": "commit"}, {"oid": "4f2e9cef6f3a7620a1e9eb12282dcbed8aad0d6f", "url": "https://github.com/senx/warp10-platform/commit/4f2e9cef6f3a7620a1e9eb12282dcbed8aad0d6f", "message": "move import at same place as before IDE automatic edit", "committedDate": "2020-01-16T17:03:50Z", "type": "commit"}, {"oid": "d803dc3af2f23dd40e8d99aa20f9705f4b520454", "url": "https://github.com/senx/warp10-platform/commit/d803dc3af2f23dd40e8d99aa20f9705f4b520454", "message": "fix null", "committedDate": "2020-01-23T10:08:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDEwMDYyOA==", "url": "https://github.com/senx/warp10-platform/pull/637#discussion_r370100628", "bodyText": "use this.min/this.max", "author": "hbs", "createdAt": "2020-01-23T12:55:29Z", "path": "warp10/src/main/java/io/warp10/script/filter/FilterBySize.java", "diffHunk": "@@ -0,0 +1,96 @@\n+//\n+//   Copyright 2020  SenX S.A.S.\n+//\n+//   Licensed under the Apache License, Version 2.0 (the \"License\");\n+//   you may not use this file except in compliance with the License.\n+//   You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+//   Unless required by applicable law or agreed to in writing, software\n+//   distributed under the License is distributed on an \"AS IS\" BASIS,\n+//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+//   See the License for the specific language governing permissions and\n+//   limitations under the License.\n+//\n+\n+package io.warp10.script.filter;\n+\n+import io.warp10.continuum.gts.GeoTimeSerie;\n+import io.warp10.script.NamedWarpScriptFunction;\n+import io.warp10.script.StackUtils;\n+import io.warp10.script.WarpScriptException;\n+import io.warp10.script.WarpScriptFilterFunction;\n+import io.warp10.script.WarpScriptStack;\n+import io.warp10.script.formatted.FormattedWarpScriptFunction;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+public class FilterBySize extends NamedWarpScriptFunction implements WarpScriptFilterFunction {\n+    static private final String MIN = \"min\";\n+    static private final String MAX = \"max\";\n+\n+    private final Long min;\n+    private final Long max;\n+\n+    public static class Builder extends FormattedWarpScriptFunction {\n+\n+        private final Arguments args;\n+\n+        public Builder(String name) {\n+            super(name);\n+\n+            args = new ArgumentsBuilder()\n+                    .addArgument(Long.class, MIN, \"The minimum size.\")\n+                    .addArgument(Long.class, MAX, \"The maximum size.\")\n+                    .build();\n+        }\n+\n+        @Override\n+        protected Arguments getArguments() {\n+            return args;\n+        }\n+\n+        @Override\n+        protected WarpScriptStack apply(Map<String, Object> formattedArgs, WarpScriptStack stack) throws WarpScriptException {\n+            Long min = (Long) formattedArgs.get(MIN);\n+            Long max = (Long) formattedArgs.get(MAX);\n+            stack.push(new FilterBySize(getName(), min, max));\n+            return stack;\n+        }\n+    }\n+\n+    public FilterBySize(String name, Long min, Long max) throws WarpScriptException {\n+        super(name);\n+        this.min = min;\n+        this.max = max;\n+    }\n+\n+    @Override\n+    public List<GeoTimeSerie> filter(Map<String, String> labels, List<GeoTimeSerie>... series) throws WarpScriptException {\n+\n+        List<GeoTimeSerie> retained = new ArrayList<GeoTimeSerie>();\n+\n+        for (List<GeoTimeSerie> serie: series) {\n+            for (GeoTimeSerie gts: serie) {\n+                if (gts.size() >= min && gts.size() <= max) {", "originalCommit": "d803dc3af2f23dd40e8d99aa20f9705f4b520454", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDEwMTUxMw==", "url": "https://github.com/senx/warp10-platform/pull/637#discussion_r370101513", "bodyText": "Make those primitive type. They can actually be int since the size of a GTS is an int, not a long.", "author": "hbs", "createdAt": "2020-01-23T12:57:29Z", "path": "warp10/src/main/java/io/warp10/script/filter/FilterBySize.java", "diffHunk": "@@ -0,0 +1,96 @@\n+//\n+//   Copyright 2020  SenX S.A.S.\n+//\n+//   Licensed under the Apache License, Version 2.0 (the \"License\");\n+//   you may not use this file except in compliance with the License.\n+//   You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+//   Unless required by applicable law or agreed to in writing, software\n+//   distributed under the License is distributed on an \"AS IS\" BASIS,\n+//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+//   See the License for the specific language governing permissions and\n+//   limitations under the License.\n+//\n+\n+package io.warp10.script.filter;\n+\n+import io.warp10.continuum.gts.GeoTimeSerie;\n+import io.warp10.script.NamedWarpScriptFunction;\n+import io.warp10.script.StackUtils;\n+import io.warp10.script.WarpScriptException;\n+import io.warp10.script.WarpScriptFilterFunction;\n+import io.warp10.script.WarpScriptStack;\n+import io.warp10.script.formatted.FormattedWarpScriptFunction;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+public class FilterBySize extends NamedWarpScriptFunction implements WarpScriptFilterFunction {\n+    static private final String MIN = \"min\";\n+    static private final String MAX = \"max\";\n+\n+    private final Long min;", "originalCommit": "d803dc3af2f23dd40e8d99aa20f9705f4b520454", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDEwMTY5MA==", "url": "https://github.com/senx/warp10-platform/pull/637#discussion_r370101690", "bodyText": "Overall indentation is 2 spaces", "author": "hbs", "createdAt": "2020-01-23T12:57:53Z", "path": "warp10/src/main/java/io/warp10/script/filter/FilterBySize.java", "diffHunk": "@@ -0,0 +1,96 @@\n+//\n+//   Copyright 2020  SenX S.A.S.\n+//\n+//   Licensed under the Apache License, Version 2.0 (the \"License\");\n+//   you may not use this file except in compliance with the License.\n+//   You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+//   Unless required by applicable law or agreed to in writing, software\n+//   distributed under the License is distributed on an \"AS IS\" BASIS,\n+//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+//   See the License for the specific language governing permissions and\n+//   limitations under the License.\n+//\n+\n+package io.warp10.script.filter;", "originalCommit": "d803dc3af2f23dd40e8d99aa20f9705f4b520454", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "616d00147a9c709337ef431d3e6f1de75aca66c8", "url": "https://github.com/senx/warp10-platform/commit/616d00147a9c709337ef431d3e6f1de75aca66c8", "message": "Merge branch 'master' of github.com:senx/warp10-platform into filterBySize", "committedDate": "2020-01-23T13:48:44Z", "type": "commit"}, {"oid": "eb353bda4794e2345b47131aa8d5f0445862e5aa", "url": "https://github.com/senx/warp10-platform/commit/eb353bda4794e2345b47131aa8d5f0445862e5aa", "message": "fix indent", "committedDate": "2020-01-23T13:49:33Z", "type": "commit"}, {"oid": "548da98fee0658cd9e22ccb4d316e1bcdab40f8f", "url": "https://github.com/senx/warp10-platform/commit/548da98fee0658cd9e22ccb4d316e1bcdab40f8f", "message": "resolve PR comments", "committedDate": "2020-01-23T13:51:48Z", "type": "commit"}, {"oid": "b23ba32d7a83f7ed4eb750d290d48af5ca5ca349", "url": "https://github.com/senx/warp10-platform/commit/b23ba32d7a83f7ed4eb750d290d48af5ca5ca349", "message": "resolve conflict", "committedDate": "2020-01-23T13:54:14Z", "type": "commit"}, {"oid": "c0a495234613132333c2bf121926aab413501043", "url": "https://github.com/senx/warp10-platform/commit/c0a495234613132333c2bf121926aab413501043", "message": "nit", "committedDate": "2020-01-23T13:55:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDEzMTUwOA==", "url": "https://github.com/senx/warp10-platform/pull/637#discussion_r370131508", "bodyText": "Use int and ((Long) ....).intValue()", "author": "hbs", "createdAt": "2020-01-23T13:58:40Z", "path": "warp10/src/main/java/io/warp10/script/filter/FilterBySize.java", "diffHunk": "@@ -0,0 +1,96 @@\n+//\n+//   Copyright 2020  SenX S.A.S.\n+//\n+//   Licensed under the Apache License, Version 2.0 (the \"License\");\n+//   you may not use this file except in compliance with the License.\n+//   You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+//   Unless required by applicable law or agreed to in writing, software\n+//   distributed under the License is distributed on an \"AS IS\" BASIS,\n+//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+//   See the License for the specific language governing permissions and\n+//   limitations under the License.\n+//\n+\n+package io.warp10.script.filter;\n+\n+import io.warp10.continuum.gts.GeoTimeSerie;\n+import io.warp10.script.NamedWarpScriptFunction;\n+import io.warp10.script.StackUtils;\n+import io.warp10.script.WarpScriptException;\n+import io.warp10.script.WarpScriptFilterFunction;\n+import io.warp10.script.WarpScriptStack;\n+import io.warp10.script.formatted.FormattedWarpScriptFunction;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+public class FilterBySize extends NamedWarpScriptFunction implements WarpScriptFilterFunction {\n+  static private final String MIN = \"min\";\n+  static private final String MAX = \"max\";\n+\n+  private final int min;\n+  private final int max;\n+\n+  public static class Builder extends FormattedWarpScriptFunction {\n+\n+    private final Arguments args;\n+\n+    public Builder(String name) {\n+      super(name);\n+\n+      args = new ArgumentsBuilder()\n+        .addArgument(Long.class, MIN, \"The minimum size.\")\n+        .addArgument(Long.class, MAX, \"The maximum size.\")\n+        .build();\n+    }\n+\n+    @Override\n+    protected Arguments getArguments() {\n+      return args;\n+    }\n+\n+    @Override\n+    protected WarpScriptStack apply(Map<String, Object> formattedArgs, WarpScriptStack stack) throws WarpScriptException {\n+      Long min = (Long) formattedArgs.get(MIN);", "originalCommit": "c0a495234613132333c2bf121926aab413501043", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "fc9b7a1234ca12d8d792e90766f79557e2d525fa", "url": "https://github.com/senx/warp10-platform/commit/fc9b7a1234ca12d8d792e90766f79557e2d525fa", "message": "fix int", "committedDate": "2020-01-23T14:27:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE5MjU1OQ==", "url": "https://github.com/senx/warp10-platform/pull/637#discussion_r370192559", "bodyText": "Missing a space between the two numeric parameters", "author": "hbs", "createdAt": "2020-01-23T15:38:21Z", "path": "warp10/src/main/java/io/warp10/script/filter/FilterBySize.java", "diffHunk": "@@ -0,0 +1,96 @@\n+//\n+//   Copyright 2020  SenX S.A.S.\n+//\n+//   Licensed under the Apache License, Version 2.0 (the \"License\");\n+//   you may not use this file except in compliance with the License.\n+//   You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+//   Unless required by applicable law or agreed to in writing, software\n+//   distributed under the License is distributed on an \"AS IS\" BASIS,\n+//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+//   See the License for the specific language governing permissions and\n+//   limitations under the License.\n+//\n+\n+package io.warp10.script.filter;\n+\n+import io.warp10.continuum.gts.GeoTimeSerie;\n+import io.warp10.script.NamedWarpScriptFunction;\n+import io.warp10.script.StackUtils;\n+import io.warp10.script.WarpScriptException;\n+import io.warp10.script.WarpScriptFilterFunction;\n+import io.warp10.script.WarpScriptStack;\n+import io.warp10.script.formatted.FormattedWarpScriptFunction;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+public class FilterBySize extends NamedWarpScriptFunction implements WarpScriptFilterFunction {\n+  static private final String MIN = \"min\";\n+  static private final String MAX = \"max\";\n+\n+  private final int min;\n+  private final int max;\n+\n+  public static class Builder extends FormattedWarpScriptFunction {\n+\n+    private final Arguments args;\n+\n+    public Builder(String name) {\n+      super(name);\n+\n+      args = new ArgumentsBuilder()\n+        .addArgument(Long.class, MIN, \"The minimum size.\")\n+        .addArgument(Long.class, MAX, \"The maximum size.\")\n+        .build();\n+    }\n+\n+    @Override\n+    protected Arguments getArguments() {\n+      return args;\n+    }\n+\n+    @Override\n+    protected WarpScriptStack apply(Map<String, Object> formattedArgs, WarpScriptStack stack) throws WarpScriptException {\n+      int min = ((Long) formattedArgs.get(MIN)).intValue();\n+      int max = ((Long) formattedArgs.get(MAX)).intValue();\n+      stack.push(new FilterBySize(getName(), min, max));\n+      return stack;\n+    }\n+  }\n+\n+  public FilterBySize(String name, int min, int max) throws WarpScriptException {\n+    super(name);\n+    this.min = min;\n+    this.max = max;\n+  }\n+\n+  @Override\n+  public List<GeoTimeSerie> filter(Map<String, String> labels, List<GeoTimeSerie>... series) throws WarpScriptException {\n+\n+    List<GeoTimeSerie> retained = new ArrayList<GeoTimeSerie>();\n+\n+    for (List<GeoTimeSerie> serie: series) {\n+      for (GeoTimeSerie gts: serie) {\n+        if (gts.size() >= this.min && gts.size() <= this.max) {\n+          retained.add(gts);\n+        }\n+      }\n+    }\n+\n+    return retained;\n+  }\n+\n+  @Override\n+  public String toString() {\n+    StringBuilder sb = new StringBuilder();\n+    sb.append(StackUtils.toString(this.min));", "originalCommit": "fc9b7a1234ca12d8d792e90766f79557e2d525fa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "19d8753b115d600df97aabdc7a1401eee92df6ee", "url": "https://github.com/senx/warp10-platform/commit/19d8753b115d600df97aabdc7a1401eee92df6ee", "message": "fix missing space", "committedDate": "2020-01-23T15:45:41Z", "type": "commit"}]}