{"pr_number": 372, "pr_title": "Allow adding an existing collection to CartesianProduct$Sets", "pr_createdAt": "2020-11-01T15:23:40Z", "pr_url": "https://github.com/junit-pioneer/junit-pioneer/pull/372", "timeline": [{"oid": "dd32a87e379485cbc84f1660cae107cf8c2ca8c6", "url": "https://github.com/junit-pioneer/junit-pioneer/commit/dd32a87e379485cbc84f1660cae107cf8c2ca8c6", "message": "Create method to add all items from an existing collection", "committedDate": "2020-11-01T15:04:33Z", "type": "commit"}, {"oid": "8f9bbd389520dccb73201585c3a72f01d22ecc26", "url": "https://github.com/junit-pioneer/junit-pioneer/commit/8f9bbd389520dccb73201585c3a72f01d22ecc26", "message": "Add separate test for Cartesian product sets", "committedDate": "2020-11-01T15:12:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0NDEyNw==", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/372#discussion_r515644127", "bodyText": "Personally, I'd put these in a @Nested class in CartesianProductTestExtensionTests.", "author": "Michael1993", "createdAt": "2020-11-01T16:44:36Z", "path": "src/test/java/org/junitpioneer/jupiter/CartesianProductTestSetsTest.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * http://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junitpioneer.jupiter;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.util.Lists.list;\n+\n+import java.util.List;\n+\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+\n+@DisplayName(\"The sets for CartesianProductTest\")\n+class CartesianProductTestSetsTest {", "originalCommit": "8f9bbd389520dccb73201585c3a72f01d22ecc26", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0NDIxNg==", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/372#discussion_r515644216", "bodyText": "Also, this test never runs because we only run test classes that match the pattern: .*Tests.", "author": "Michael1993", "createdAt": "2020-11-01T16:45:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0NDEyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0NTA1OQ==", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/372#discussion_r515645059", "bodyText": "Ah, thank you! Never realized this. This is also the reason why Sonar isn't happy.\nRegarding @Nested: CartesianProductTestExtensionTests is already quite big, so I thought having a separate class helps. But I can change that.", "author": "beatngu13", "createdAt": "2020-11-01T16:53:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0NDEyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0OTQxNQ==", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/372#discussion_r515649415", "bodyText": "@Michael1993 converted the test to a nested one. We \"now\" have some redundant test cases since e.g. RedundantInputSetTestCases does essentially the same, just via a different test interface.", "author": "beatngu13", "createdAt": "2020-11-01T17:34:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0NDEyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgyODI5Ng==", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/372#discussion_r516828296", "bodyText": "Regarding @Nested: CartesianProductTestExtensionTests is already quite big, so I thought having a separate class helps. But I can change that.\n\nI'm totally fine with splitting large test classes into multiple files and don't overuse @Nested.", "author": "Bukama", "createdAt": "2020-11-03T17:13:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0NDEyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgyODc3OQ==", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/372#discussion_r516828779", "bodyText": "@Michael1993 converted the test to a nested one. We \"now\" have some redundant test cases since e.g. RedundantInputSetTestCases does essentially the same, just via a different test interface.\n\nWhen they use different interfaces they go different ways, don't they?", "author": "Bukama", "createdAt": "2020-11-03T17:14:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0NDEyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0NDQxNQ==", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/372#discussion_r515644415", "bodyText": "Didn't you say we should be able to add a Stream too...?", "author": "Michael1993", "createdAt": "2020-11-01T16:47:07Z", "path": "src/main/java/org/junitpioneer/jupiter/CartesianProductTest.java", "diffHunk": "@@ -72,10 +74,19 @@\n \t\tprivate final List<List<?>> sets = new ArrayList<>(); //NOSONAR\n \n \t\tpublic Sets add(Object... entries) {\n-\t\t\tsets.add(new ArrayList<>(Arrays.stream(entries).distinct().collect(toList())));\n+\t\t\tsets.add(toDistinctList(Arrays.stream(entries)));\n \t\t\treturn this;\n \t\t}\n \n+\t\tpublic Sets addAll(Collection<?> entries) {", "originalCommit": "8f9bbd389520dccb73201585c3a72f01d22ecc26", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0NTI0MA==", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/372#discussion_r515645240", "bodyText": "Uh, no? \ud83e\udd37\u200d\u2642\ufe0f You mean addAll(Stream<?>) in addition?", "author": "beatngu13", "createdAt": "2020-11-01T16:54:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0NDQxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0NzEzOQ==", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/372#discussion_r515647139", "bodyText": "Yes, the option is already there, just make it public and rename it to add/addAll. \ud83d\ude04", "author": "Michael1993", "createdAt": "2020-11-01T17:12:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0NDQxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgzMDU3Nw==", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/372#discussion_r516830577", "bodyText": "Should we add the possibility to documentation, with a small code example?", "author": "Bukama", "createdAt": "2020-11-03T17:17:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0NDQxNQ=="}], "type": "inlineReview"}, {"oid": "f429dc79065099965e4b6f131130af3945a5a116", "url": "https://github.com/junit-pioneer/junit-pioneer/commit/f429dc79065099965e4b6f131130af3945a5a116", "message": "Fix test name", "committedDate": "2020-11-01T16:55:44Z", "type": "commit"}, {"oid": "b31884a966abbbf939c2af50059359da9bf486ff", "url": "https://github.com/junit-pioneer/junit-pioneer/commit/b31884a966abbbf939c2af50059359da9bf486ff", "message": "Create method to add all items from an existing stream", "committedDate": "2020-11-01T17:19:29Z", "type": "commit"}, {"oid": "56fe1531b16705d24bcb5f85149a5bdb9282546b", "url": "https://github.com/junit-pioneer/junit-pioneer/commit/56fe1531b16705d24bcb5f85149a5bdb9282546b", "message": "Convert sets tests to nested test", "committedDate": "2020-11-01T17:31:47Z", "type": "commit"}, {"oid": "a62fce9402b6ad338f949f0e667ff4b620f5ca58", "url": "https://github.com/junit-pioneer/junit-pioneer/commit/a62fce9402b6ad338f949f0e667ff4b620f5ca58", "message": "Inline method", "committedDate": "2020-11-01T17:37:12Z", "type": "commit"}, {"oid": "94567058773bcd9069274813b3c335adb6f556cc", "url": "https://github.com/junit-pioneer/junit-pioneer/commit/94567058773bcd9069274813b3c335adb6f556cc", "message": "Change code block style from MD to ADOC", "committedDate": "2020-11-24T20:37:28Z", "type": "commit"}, {"oid": "4648011fefeefe2ffd897eafd793c508b873bd5f", "url": "https://github.com/junit-pioneer/junit-pioneer/commit/4648011fefeefe2ffd897eafd793c508b873bd5f", "message": "Indent with tabs \ud83d\ude20", "committedDate": "2020-11-24T20:40:11Z", "type": "commit"}, {"oid": "192508216e13d7e4d285ac191cebfa7d39475372", "url": "https://github.com/junit-pioneer/junit-pioneer/commit/192508216e13d7e4d285ac191cebfa7d39475372", "message": "Explain addAll in documentation", "committedDate": "2020-11-24T20:40:25Z", "type": "commit"}, {"oid": "86547d6458434d9ece41fa924150facbf4507a18", "url": "https://github.com/junit-pioneer/junit-pioneer/commit/86547d6458434d9ece41fa924150facbf4507a18", "message": "Add addAll(Iterable)", "committedDate": "2020-11-24T20:45:13Z", "type": "commit"}, {"oid": "f7b69cda5b61329db9bbbc1d12ee55b5dcd2a8ae", "url": "https://github.com/junit-pioneer/junit-pioneer/commit/f7b69cda5b61329db9bbbc1d12ee55b5dcd2a8ae", "message": "Add contribution to README", "committedDate": "2020-11-24T20:49:04Z", "type": "commit"}]}