{"pr_number": 5957, "pr_title": "Fix #12: allow Dynamic content support in ImageCropper", "pr_createdAt": "2020-05-26T12:17:53Z", "pr_url": "https://github.com/primefaces/primefaces/pull/5957", "timeline": [{"oid": "6dfd2bd1e3454134cbf046f0b3c5195c7bba696a", "url": "https://github.com/primefaces/primefaces/commit/6dfd2bd1e3454134cbf046f0b3c5195c7bba696a", "message": "allow StreamedContent in ImageCropper", "committedDate": "2020-05-26T11:11:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM2OTMxMg==", "url": "https://github.com/primefaces/primefaces/pull/5957#discussion_r430369312", "bodyText": "I don't think you have check != null because intanceof NULL is always false. you can invert this by checking is streamobject instanceof ELSE throw exception", "author": "melloware", "createdAt": "2020-05-26T12:20:18Z", "path": "src/main/java/org/primefaces/component/imagecropper/ImageCropperRenderer.java", "diffHunk": "@@ -180,6 +184,15 @@ public Object getConvertedValue(FacesContext context, UIComponent component, Obj\n         Resource resource = getImageResource(context, cropper);\n         InputStream inputStream = null;\n         String imagePath = cropper.getImage();\n+        Object streamObject = cropper.getStream();\n+        StreamedContent stream = null;\n+        if (streamObject != null && !(streamObject instanceof StreamedContent)) {", "originalCommit": "6dfd2bd1e3454134cbf046f0b3c5195c7bba696a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ0NjY5Mw==", "url": "https://github.com/primefaces/primefaces/pull/5957#discussion_r430446693", "bodyText": "The check streamObject != null is performed because 'cropper.getStream() null' is a valid condition if 'cropper.getImage() is not null'. I just included some tests for check these scenarios.", "author": "doleron", "createdAt": "2020-05-26T14:16:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM2OTMxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ0NzcwNg==", "url": "https://github.com/primefaces/primefaces/pull/5957#discussion_r430447706", "bodyText": "I think @tandraschko wants you to not introduce a new stream property and just re-use image so it can either be a URL or StreamedContent like GraphicImage does it.", "author": "melloware", "createdAt": "2020-05-26T14:17:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM2OTMxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM3MDIzNg==", "url": "https://github.com/primefaces/primefaces/pull/5957#discussion_r430370236", "bodyText": "\"Either image or stream attribute is not provided\"", "author": "melloware", "createdAt": "2020-05-26T12:21:59Z", "path": "src/main/java/org/primefaces/component/imagecropper/ImageCropperRenderer.java", "diffHunk": "@@ -189,29 +202,38 @@ public Object getConvertedValue(FacesContext context, UIComponent component, Obj\n                 contentType = resource.getContentType();\n             }\n             else {\n+                if (imagePath != null) {\n \n-                boolean isExternal = imagePath.startsWith(\"http\");\n+                    boolean isExternal = imagePath.startsWith(\"http\");\n \n-                if (isExternal) {\n-                    URL url = new URL(imagePath);\n-                    URLConnection urlConnection = url.openConnection();\n-                    inputStream = urlConnection.getInputStream();\n-                    contentType = urlConnection.getContentType();\n+                    if (isExternal) {\n+                        URL url = new URL(imagePath);\n+                        URLConnection urlConnection = url.openConnection();\n+                        inputStream = urlConnection.getInputStream();\n+                        contentType = urlConnection.getContentType();\n+                    }\n+                    else {\n+                        ExternalContext externalContext = context.getExternalContext();\n+                        // GitHub #3268 OWASP Path Traversal\n+                        imagePath = FileUploadUtils.checkPathTraversal(imagePath);\n+\n+                        String webRoot = externalContext.getRealPath(Constants.EMPTY_STRING);\n+                        String fileSeparator = Constants.EMPTY_STRING;\n+                        if (!(webRoot.endsWith(\"\\\\\") || webRoot.endsWith(\"/\")) &&\n+                                    !(imagePath.startsWith(\"\\\\\") || imagePath.startsWith(\"/\"))) {\n+                            fileSeparator = \"/\";\n+                        }\n+\n+                        File file = new File(webRoot + fileSeparator + imagePath);\n+                        inputStream = new FileInputStream(file);\n+                    }\n+                }\n+                else if (stream != null) {\n+                    inputStream = stream.getStream();\n+                    contentType = stream.getContentType();\n                 }\n                 else {\n-                    ExternalContext externalContext = context.getExternalContext();\n-                    // GitHub #3268 OWASP Path Traversal\n-                    imagePath = FileUploadUtils.checkPathTraversal(imagePath);\n-\n-                    String webRoot = externalContext.getRealPath(Constants.EMPTY_STRING);\n-                    String fileSeparator = Constants.EMPTY_STRING;\n-                    if (!(webRoot.endsWith(\"\\\\\") || webRoot.endsWith(\"/\")) &&\n-                                !(imagePath.startsWith(\"\\\\\") || imagePath.startsWith(\"/\"))) {\n-                        fileSeparator = \"/\";\n-                    }\n-\n-                    File file = new File(webRoot + fileSeparator + imagePath);\n-                    inputStream = new FileInputStream(file);\n+                    throw new IllegalArgumentException(\"Either image and stream attributes are not provided.\");", "originalCommit": "6dfd2bd1e3454134cbf046f0b3c5195c7bba696a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM4Mjk3Mg==", "url": "https://github.com/primefaces/primefaces/pull/5957#discussion_r430382972", "bodyText": "Fixed!", "author": "doleron", "createdAt": "2020-05-26T12:44:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM3MDIzNg=="}], "type": "inlineReview"}, {"oid": "5f52377aa223911ed313dbbd49b1b7a08a7eb257", "url": "https://github.com/primefaces/primefaces/commit/5f52377aa223911ed313dbbd49b1b7a08a7eb257", "message": "+ section about dynamic content", "committedDate": "2020-05-26T12:40:00Z", "type": "commit"}, {"oid": "321cd5052586c2c4a1027ba1384b034b2fd2b8b0", "url": "https://github.com/primefaces/primefaces/commit/321cd5052586c2c4a1027ba1384b034b2fd2b8b0", "message": "fix exception message", "committedDate": "2020-05-26T12:40:26Z", "type": "commit"}, {"oid": "a287b6fd3e8db981a63fe24dd922208a9596bb24", "url": "https://github.com/primefaces/primefaces/commit/a287b6fd3e8db981a63fe24dd922208a9596bb24", "message": "tests for ImageCropperRenderer", "committedDate": "2020-05-26T14:13:36Z", "type": "commit"}, {"oid": "d8214e152b0746def2b118084abfaee5f957bd8a", "url": "https://github.com/primefaces/primefaces/commit/d8214e152b0746def2b118084abfaee5f957bd8a", "message": "fix test image path on linux", "committedDate": "2020-05-26T14:26:29Z", "type": "commit"}, {"oid": "22c795321a7e6ef57a60316fdc8f8815d8168883", "url": "https://github.com/primefaces/primefaces/commit/22c795321a7e6ef57a60316fdc8f8815d8168883", "message": "converging 'stream' and 'image' to the same attribute 'image'", "committedDate": "2020-05-26T15:01:12Z", "type": "commit"}, {"oid": "d8eb1ec04874864e3ab884e8057a502a7214638a", "url": "https://github.com/primefaces/primefaces/commit/d8eb1ec04874864e3ab884e8057a502a7214638a", "message": "removing 'stream' + updating 'image' in tag declaration of ImageCropper", "committedDate": "2020-05-26T15:36:40Z", "type": "commit"}]}