{"pr_number": 8695, "pr_title": "Support of multiple persistence units for Hibernate Panache", "pr_createdAt": "2020-04-20T12:01:37Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/8695", "timeline": [{"oid": "046cd22b8aaf9ccb56a3111f6fa0be48a92059ba", "url": "https://github.com/quarkusio/quarkus/commit/046cd22b8aaf9ccb56a3111f6fa0be48a92059ba", "message": "feat(panache): add support of multiple persistence units in hibernate\norm", "committedDate": "2020-08-21T20:40:41Z", "type": "forcePushed"}, {"oid": "1fb27e8b01fae1c6082f68a91f5d16953f68c6a9", "url": "https://github.com/quarkusio/quarkus/commit/1fb27e8b01fae1c6082f68a91f5d16953f68c6a9", "message": "feat(panache): add support of multiple persistence units in hibernate\norm", "committedDate": "2020-08-21T20:45:29Z", "type": "forcePushed"}, {"oid": "192c124412f1ca053983383fa3e1c1a974b705a0", "url": "https://github.com/quarkusio/quarkus/commit/192c124412f1ca053983383fa3e1c1a974b705a0", "message": "feat(panache): add support of multiple persistence units in hibernate\norm", "committedDate": "2020-08-21T20:52:31Z", "type": "forcePushed"}, {"oid": "40fbf07f33ad63ab4f140272959d2494bdf10e4c", "url": "https://github.com/quarkusio/quarkus/commit/40fbf07f33ad63ab4f140272959d2494bdf10e4c", "message": "feat(panache): add support of multiple persistence units in hibernate\norm", "committedDate": "2020-08-26T18:12:42Z", "type": "forcePushed"}, {"oid": "3480c0aef66f60496455852acf00d9e1ba807383", "url": "https://github.com/quarkusio/quarkus/commit/3480c0aef66f60496455852acf00d9e1ba807383", "message": "feat(panache): add support of multiple persistence units in hibernate\norm", "committedDate": "2020-08-26T18:17:18Z", "type": "forcePushed"}, {"oid": "3eaef9dc1b740fe67ebe34daf3949938609c87c9", "url": "https://github.com/quarkusio/quarkus/commit/3eaef9dc1b740fe67ebe34daf3949938609c87c9", "message": "feat(panache): add support of multiple persistence units in hibernate\norm", "committedDate": "2020-08-26T19:34:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQxNDcxNQ==", "url": "https://github.com/quarkusio/quarkus/pull/8695#discussion_r478414715", "bodyText": "No star imports, please.", "author": "gsmet", "createdAt": "2020-08-27T13:22:13Z", "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java", "diffHunk": "@@ -10,20 +10,8 @@\n import java.io.IOException;\n import java.nio.file.Files;\n import java.nio.file.Path;\n-import java.util.ArrayList;\n-import java.util.Collection;\n-import java.util.Collections;\n-import java.util.HashMap;\n-import java.util.HashSet;\n-import java.util.LinkedHashSet;\n-import java.util.List;\n-import java.util.Locale;\n-import java.util.Map;\n+import java.util.*;", "originalCommit": "3eaef9dc1b740fe67ebe34daf3949938609c87c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQzMzYxNw==", "url": "https://github.com/quarkusio/quarkus/pull/8695#discussion_r478433617", "bodyText": "Good catch. Huh this should have been gone.", "author": "machi1990", "createdAt": "2020-08-27T13:49:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQxNDcxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQxNTMxMw==", "url": "https://github.com/quarkusio/quarkus/pull/8695#discussion_r478415313", "bodyText": "I think I would name it JpaModelPersistenceUnitMappingBuildItem.\nAlso I already built something here to push it to the JPAConfig: https://github.com/quarkusio/quarkus/blob/master/extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java#L455 so I don't think we should build it again .\nIt's not perfect either as we can't really properly deal with XML descriptors but I think it's good enough for what we want.", "author": "gsmet", "createdAt": "2020-08-27T13:23:11Z", "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java", "diffHunk": "@@ -255,7 +243,8 @@ public void configurationDescriptorBuilding(\n             BuildProducer<SystemPropertyBuildItem> systemProperties,\n             BuildProducer<NativeImageResourceBuildItem> nativeImageResources,\n             BuildProducer<HotDeploymentWatchedFileBuildItem> hotDeploymentWatchedFiles,\n-            BuildProducer<PersistenceUnitDescriptorBuildItem> persistenceUnitDescriptors) {\n+            BuildProducer<PersistenceUnitDescriptorBuildItem> persistenceUnitDescriptors,\n+            BuildProducer<JpaEntityPerPersistenceUnitsBuildItem> jpaEntitiesPerPersistenceUnits) {", "originalCommit": "3eaef9dc1b740fe67ebe34daf3949938609c87c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ0MTE5NQ==", "url": "https://github.com/quarkusio/quarkus/pull/8695#discussion_r478441195", "bodyText": "I think I would name it JpaModelPersistenceUnitMappingBuildItem.\nAlso I already built something here to push it to the JPAConfig: https://github.com/quarkusio/quarkus/blob/master/extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java#L455 so I don't think we should build it again .\n\nAh that's better, for some reason I missed this. I'd re-use this.\n\nIt's not perfect either as we can't really properly deal with XML descriptors but I think it's good enough for what we want.\n\nIn case of XML descriptors, what is the best way to deal with them? Should we use the default PU or ?\nUpdate: I think I've an answer for that.", "author": "machi1990", "createdAt": "2020-08-27T13:59:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQxNTMxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ1MjAzNg==", "url": "https://github.com/quarkusio/quarkus/pull/8695#discussion_r478452036", "bodyText": "Well, have a look if it works or not but I think you won't have the entities in the descriptors (except the ones listed explicitly in the XML).\nFrankly, I think we don't really care, at least not in this first version of the multi-persistence unit support.", "author": "gsmet", "createdAt": "2020-08-27T14:14:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQxNTMxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ3MjY4Ng==", "url": "https://github.com/quarkusio/quarkus/pull/8695#discussion_r478472686", "bodyText": "Okay.", "author": "machi1990", "createdAt": "2020-08-27T14:42:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQxNTMxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQyMTk5NA==", "url": "https://github.com/quarkusio/quarkus/pull/8695#discussion_r478421994", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Internal model to hold a Jpa entity to its corresponding persistence units.\n          \n          \n            \n             * Internal model to hold the mapping linking a JPA entity to its corresponding persistence units.", "author": "gsmet", "createdAt": "2020-08-27T13:32:57Z", "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/JpaEntityPerPersistenceUnitsBuildItem.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package io.quarkus.hibernate.orm.deployment;\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+import io.quarkus.builder.item.SimpleBuildItem;\n+\n+/**\n+ * Internal model to hold a Jpa entity to its corresponding persistence units.", "originalCommit": "3eaef9dc1b740fe67ebe34daf3949938609c87c9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQyMjI1MQ==", "url": "https://github.com/quarkusio/quarkus/pull/8695#discussion_r478422251", "bodyText": "Maybe make it an unmodifiableMap?", "author": "gsmet", "createdAt": "2020-08-27T13:33:19Z", "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/JpaEntityPerPersistenceUnitsBuildItem.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package io.quarkus.hibernate.orm.deployment;\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+import io.quarkus.builder.item.SimpleBuildItem;\n+\n+/**\n+ * Internal model to hold a Jpa entity to its corresponding persistence units.\n+ */\n+public final class JpaEntityPerPersistenceUnitsBuildItem extends SimpleBuildItem {\n+\n+    private final Map<String, List<String>> entityToPersistenceUnits;\n+\n+    public JpaEntityPerPersistenceUnitsBuildItem(Map<String, List<String>> entityToPersistenceUnits) {\n+        this.entityToPersistenceUnits = entityToPersistenceUnits;", "originalCommit": "3eaef9dc1b740fe67ebe34daf3949938609c87c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQzNDUyNg==", "url": "https://github.com/quarkusio/quarkus/pull/8695#discussion_r478434526", "bodyText": "Sure.", "author": "machi1990", "createdAt": "2020-08-27T13:50:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQyMjI1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQyNDQ3MA==", "url": "https://github.com/quarkusio/quarkus/pull/8695#discussion_r478424470", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    \"PanacheEntity '%s' cannot be defined for usage in 'several persistence unit. The following persistence units were found %s'\",\n          \n          \n            \n                                    \"PanacheEntity '%s' cannot be defined for usage in several persistence units. The following persistence units were found: %s.\",", "author": "gsmet", "createdAt": "2020-08-27T13:36:40Z", "path": "extensions/panache/hibernate-orm-panache-kotlin/deployment/src/main/java/io/quarkus/hibernate/orm/panache/kotlin/deployment/KotlinPanacheResourceProcessor.java", "diffHunk": "@@ -185,5 +201,24 @@ void build(CombinedIndexBuildItem index,\n                 }\n             }\n         }\n+\n+        Map<String, List<String>> collectedEntityToPersistenceUnits = new HashMap<>();\n+        if (entityPerPersistenceUnits.isPresent()) {\n+            collectedEntityToPersistenceUnits = entityPerPersistenceUnits.get().getEntityToPersistenceUnits();\n+        }\n+\n+        for (Map.Entry<String, List<String>> entry : collectedEntityToPersistenceUnits.entrySet()) {\n+            String entityName = entry.getKey();\n+            List<String> selectedPersistenceUnits = entry.getValue();\n+            boolean isPanacheEntity = modelClasses.stream().anyMatch(name -> name.equals(entityName));\n+            if (selectedPersistenceUnits.size() > 1 && isPanacheEntity) {\n+                throw new IllegalStateException(String.format(\n+                        \"PanacheEntity '%s' cannot be defined for usage in 'several persistence unit. The following persistence units were found %s'\",", "originalCommit": "3eaef9dc1b740fe67ebe34daf3949938609c87c9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQyNTQ3Mg==", "url": "https://github.com/quarkusio/quarkus/pull/8695#discussion_r478425472", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                        \"PanacheEntity '%s' cannot be defined for usage in 'several persistence unit. The following persistence units were found %s'\",\n          \n          \n            \n                                        \"PanacheEntity '%s' cannot be defined for usage in several persistence units. The following persistence units were found: %s.\",", "author": "gsmet", "createdAt": "2020-08-27T13:38:11Z", "path": "extensions/panache/hibernate-orm-panache/deployment/src/main/java/io/quarkus/hibernate/orm/panache/deployment/PanacheHibernateResourceProcessor.java", "diffHunk": "@@ -194,4 +202,31 @@ void build(CombinedIndexBuildItem index,\n         }\n         return null;\n     }\n+\n+    @BuildStep\n+    @Record(ExecutionTime.STATIC_INIT)\n+    void persistenceUnits(PanacheHibernateOrmRecorder recorder,\n+            Optional<JpaEntityPerPersistenceUnitsBuildItem> entityPerPersistenceUnits,\n+            List<PanacheEntityClassBuildItem> entityClasses) {\n+        Map<String, String> panacheEntityToPersistenceUnit = new HashMap<>();\n+        if (entityPerPersistenceUnits.isPresent()) {\n+            Map<String, List<String>> collectedEntityToPersistenceUnits = entityPerPersistenceUnits.get()\n+                    .getEntityToPersistenceUnits();\n+            for (Map.Entry<String, List<String>> entry : collectedEntityToPersistenceUnits.entrySet()) {\n+                String entityName = entry.getKey();\n+                List<String> selectedPersistenceUnits = entry.getValue();\n+                boolean isPanacheEntity = entityClasses.stream()\n+                        .anyMatch(entity -> entity.get().name().toString().equals(entityName));\n+\n+                if (selectedPersistenceUnits.size() > 1 && isPanacheEntity) {\n+                    throw new IllegalStateException(String.format(\n+                            \"PanacheEntity '%s' cannot be defined for usage in 'several persistence unit. The following persistence units were found %s'\",", "originalCommit": "3eaef9dc1b740fe67ebe34daf3949938609c87c9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQyNTg0OA==", "url": "https://github.com/quarkusio/quarkus/pull/8695#discussion_r478425848", "bodyText": "Also it's not very clear in the message that this is not supported.", "author": "gsmet", "createdAt": "2020-08-27T13:38:43Z", "path": "extensions/panache/hibernate-orm-panache/deployment/src/main/java/io/quarkus/hibernate/orm/panache/deployment/PanacheHibernateResourceProcessor.java", "diffHunk": "@@ -194,4 +202,31 @@ void build(CombinedIndexBuildItem index,\n         }\n         return null;\n     }\n+\n+    @BuildStep\n+    @Record(ExecutionTime.STATIC_INIT)\n+    void persistenceUnits(PanacheHibernateOrmRecorder recorder,\n+            Optional<JpaEntityPerPersistenceUnitsBuildItem> entityPerPersistenceUnits,\n+            List<PanacheEntityClassBuildItem> entityClasses) {\n+        Map<String, String> panacheEntityToPersistenceUnit = new HashMap<>();\n+        if (entityPerPersistenceUnits.isPresent()) {\n+            Map<String, List<String>> collectedEntityToPersistenceUnits = entityPerPersistenceUnits.get()\n+                    .getEntityToPersistenceUnits();\n+            for (Map.Entry<String, List<String>> entry : collectedEntityToPersistenceUnits.entrySet()) {\n+                String entityName = entry.getKey();\n+                List<String> selectedPersistenceUnits = entry.getValue();\n+                boolean isPanacheEntity = entityClasses.stream()\n+                        .anyMatch(entity -> entity.get().name().toString().equals(entityName));\n+\n+                if (selectedPersistenceUnits.size() > 1 && isPanacheEntity) {\n+                    throw new IllegalStateException(String.format(\n+                            \"PanacheEntity '%s' cannot be defined for usage in 'several persistence unit. The following persistence units were found %s'\",", "originalCommit": "3eaef9dc1b740fe67ebe34daf3949938609c87c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ1Mjk5MA==", "url": "https://github.com/quarkusio/quarkus/pull/8695#discussion_r478452990", "bodyText": "Added a few words about this.", "author": "machi1990", "createdAt": "2020-08-27T14:16:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQyNTg0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQyODQ2Mg==", "url": "https://github.com/quarkusio/quarkus/pull/8695#discussion_r478428462", "bodyText": "Shouldn't we only flush the entityManager of the entity?", "author": "gsmet", "createdAt": "2020-08-27T13:42:24Z", "path": "extensions/panache/hibernate-orm-panache/runtime/src/main/java/io/quarkus/hibernate/orm/panache/runtime/JpaOperations.java", "diffHunk": "@@ -71,16 +85,31 @@ public static boolean isPersistent(Object entity) {\n     }\n \n     public static void flush() {\n-        delegate.flush();\n+        Set<String> values = new HashSet<>(entityToPersistenceUnit.values());\n+        for (String persistentUnit : values) {\n+            getEntityManager(persistentUnit).flush();", "originalCommit": "3eaef9dc1b740fe67ebe34daf3949938609c87c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQzNzUxMw==", "url": "https://github.com/quarkusio/quarkus/pull/8695#discussion_r478437513", "bodyText": "Yes, this is already done for https://github.com/quarkusio/quarkus/pull/8695/files#diff-2fcdac996e03f2fce93a3bc400488d93R70\nThe method is poorly named. I think it should be flushAll, there is a TODO comment in the code.\nhttps://github.com/quarkusio/quarkus/pull/8695/files#diff-2fcdac996e03f2fce93a3bc400488d93R103", "author": "machi1990", "createdAt": "2020-08-27T13:54:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQyODQ2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQzODI3NQ==", "url": "https://github.com/quarkusio/quarkus/pull/8695#discussion_r478438275", "bodyText": "Or maybe I am missing something.", "author": "machi1990", "createdAt": "2020-08-27T13:55:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQyODQ2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ1MTAyNQ==", "url": "https://github.com/quarkusio/quarkus/pull/8695#discussion_r478451025", "bodyText": "Hmmm, I think the comment is on the wrong method then.\nI think I would make flush() only flush the default persistence unit similar to what you did with other methods that are targeting the default if used without a parameter.", "author": "gsmet", "createdAt": "2020-08-27T14:13:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQyODQ2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ4NTM3NQ==", "url": "https://github.com/quarkusio/quarkus/pull/8695#discussion_r478485375", "bodyText": "So there are two methods:\n\nJpaOperations.flush(entity): this only flush the EntityManager of the entity\nJpaOperations.flush(): This flushes all the EntityManager. I was thinking that this one could be renamed to something like flushAll(), and certainly did not want to embark myself on that \"refactoring things\" journey.", "author": "machi1990", "createdAt": "2020-08-27T14:59:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQyODQ2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU3NDMwOA==", "url": "https://github.com/quarkusio/quarkus/pull/8695#discussion_r478574308", "bodyText": "I would keep the current behavior and flush the default entity manager.\nWe can add a flushAll later if someone asks for it.", "author": "gsmet", "createdAt": "2020-08-27T17:16:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQyODQ2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY0ODg0Mg==", "url": "https://github.com/quarkusio/quarkus/pull/8695#discussion_r478648842", "bodyText": "Sure.", "author": "machi1990", "createdAt": "2020-08-27T19:33:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQyODQ2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY1NzAzOQ==", "url": "https://github.com/quarkusio/quarkus/pull/8695#discussion_r478657039", "bodyText": "@gsmet this is now done.", "author": "machi1990", "createdAt": "2020-08-27T19:49:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQyODQ2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQzMjE1Mw==", "url": "https://github.com/quarkusio/quarkus/pull/8695#discussion_r478432153", "bodyText": "I wonder if we could avoid a lot of overhead by having a generated method in the PanacheEntity/Repository return a static Literal for consumption by CDI.\nIt would avoid the overhead of the map lookup and would also avoid the overhead of instantiating a new Literal each time we want to the get EntityManager.\nI'm not that versed into Panache so it might just be a crazy idea.", "author": "gsmet", "createdAt": "2020-08-27T13:47:35Z", "path": "extensions/panache/hibernate-orm-panache-kotlin/runtime/src/main/java/io/quarkus/hibernate/orm/panache/kotlin/runtime/JpaOperations.java", "diffHunk": "@@ -307,6 +330,13 @@ public static int update(Class<?> entityClass, String query, Object... params) {\n             return query.stream();\n         }\n \n+        @Override\n+        public EntityManager getEntityManager(Class<?> clazz) {\n+            String clazzName = clazz.getName();\n+            String persistentUnitName = entityToPersistenceUnit.get(clazzName);\n+            return super.getEntityManager(persistentUnitName);", "originalCommit": "3eaef9dc1b740fe67ebe34daf3949938609c87c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQzOTAwNQ==", "url": "https://github.com/quarkusio/quarkus/pull/8695#discussion_r478439005", "bodyText": "Ah that's something I never thought of. This way seemed easier for me. I can look at that idea.", "author": "machi1990", "createdAt": "2020-08-27T13:56:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQzMjE1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ0NTA5MA==", "url": "https://github.com/quarkusio/quarkus/pull/8695#discussion_r478445090", "bodyText": "And for the default one, we would use javax.enterprise.inject.Default.Literal.INSTANCE.", "author": "gsmet", "createdAt": "2020-08-27T14:05:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQzMjE1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ1NDk2Ng==", "url": "https://github.com/quarkusio/quarkus/pull/8695#discussion_r478454966", "bodyText": "Maybe let's get this first version in and then we work on a second iteration with code generation?", "author": "gsmet", "createdAt": "2020-08-27T14:18:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQzMjE1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ1NTQ3OA==", "url": "https://github.com/quarkusio/quarkus/pull/8695#discussion_r478455478", "bodyText": "Depends on how fast you will be but I think Panache generation uses ASM so it won't be fun :).", "author": "gsmet", "createdAt": "2020-08-27T14:19:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQzMjE1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ3MTIyOQ==", "url": "https://github.com/quarkusio/quarkus/pull/8695#discussion_r478471229", "bodyText": "Sure, I'll focus on resolving other comments (#8695 (comment)) first.", "author": "machi1990", "createdAt": "2020-08-27T14:40:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQzMjE1Mw=="}], "type": "inlineReview"}, {"oid": "477b99bb55b4c036c944e91a9715ff49919921e1", "url": "https://github.com/quarkusio/quarkus/commit/477b99bb55b4c036c944e91a9715ff49919921e1", "message": "feat(panache): add support of multiple persistence units in hibernate\norm", "committedDate": "2020-08-27T14:39:45Z", "type": "forcePushed"}, {"oid": "d03124ee893531ed05a409f7c4e147c731c1e45c", "url": "https://github.com/quarkusio/quarkus/commit/d03124ee893531ed05a409f7c4e147c731c1e45c", "message": "feat(panache): add support of multiple persistence units in hibernate\norm", "committedDate": "2020-08-27T14:54:51Z", "type": "forcePushed"}, {"oid": "8111e128ccf0754ecc9bf7c4bdae2a78a0ab03f1", "url": "https://github.com/quarkusio/quarkus/commit/8111e128ccf0754ecc9bf7c4bdae2a78a0ab03f1", "message": "feat(panache): add support of multiple persistence units in hibernate\norm", "committedDate": "2020-08-27T15:04:40Z", "type": "forcePushed"}, {"oid": "921bc691cd047bcd8a4693e72b6108495f5ac3a6", "url": "https://github.com/quarkusio/quarkus/commit/921bc691cd047bcd8a4693e72b6108495f5ac3a6", "message": "feat(panache): add support of multiple persistence units in hibernate\norm", "committedDate": "2020-08-27T19:47:06Z", "type": "forcePushed"}, {"oid": "582885e7c19a2a453e00ef332b04518317a6f053", "url": "https://github.com/quarkusio/quarkus/commit/582885e7c19a2a453e00ef332b04518317a6f053", "message": "Add the whole hierarchy of an entity to the persistence unit", "committedDate": "2020-08-31T13:40:23Z", "type": "forcePushed"}, {"oid": "ddad5162861d2df759b9276ba534ada1ae069b3c", "url": "https://github.com/quarkusio/quarkus/commit/ddad5162861d2df759b9276ba534ada1ae069b3c", "message": "Add the whole hierarchy of an entity to the persistence unit", "committedDate": "2020-08-31T13:46:31Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE0MzUzOA==", "url": "https://github.com/quarkusio/quarkus/pull/8695#discussion_r480143538", "bodyText": "Is this really needed? I would have expected the standard ORM processor to be triggered too? Or am I missing something?", "author": "gsmet", "createdAt": "2020-08-31T13:49:12Z", "path": "extensions/panache/hibernate-orm-panache-kotlin/deployment/src/main/java/io/quarkus/hibernate/orm/panache/kotlin/deployment/KotlinPanacheResourceProcessor.java", "diffHunk": "@@ -185,5 +202,24 @@ void build(CombinedIndexBuildItem index,\n                 }\n             }\n         }\n+\n+        Map<String, Set<String>> collectedEntityToPersistenceUnits = new HashMap<>();\n+        if (jpaModelPersistenceUnitMapping.isPresent()) {\n+            collectedEntityToPersistenceUnits = jpaModelPersistenceUnitMapping.get().getEntityToPersistenceUnits();\n+        }\n+\n+        for (Map.Entry<String, Set<String>> entry : collectedEntityToPersistenceUnits.entrySet()) {\n+            String entityName = entry.getKey();\n+            List<String> selectedPersistenceUnits = new ArrayList<>(entry.getValue());\n+            boolean isPanacheEntity = modelClasses.stream().anyMatch(name -> name.equals(entityName));\n+            if (selectedPersistenceUnits.size() > 1 && isPanacheEntity) {\n+                throw new IllegalStateException(String.format(\n+                        \"PanacheEntity '%s' cannot be defined for usage in several persistence units which is not supported. The following persistence units were found: %s.\",\n+                        entityName, String.join(\",\", selectedPersistenceUnits)));\n+            }\n+\n+            panacheEntityToPersistenceUnit.put(entityName, selectedPersistenceUnits.get(0));\n+        }\n+        recorder.setEntityToPersistenceUnit(panacheEntityToPersistenceUnit);", "originalCommit": "ddad5162861d2df759b9276ba534ada1ae069b3c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE0Mzc2Nw==", "url": "https://github.com/quarkusio/quarkus/pull/8695#discussion_r480143767", "bodyText": "If it's necessary, I will need to make the error message consistent but I would be surprised it is.", "author": "gsmet", "createdAt": "2020-08-31T13:49:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE0MzUzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE0NjEzNA==", "url": "https://github.com/quarkusio/quarkus/pull/8695#discussion_r480146134", "bodyText": "Is this really needed? I would have expected the standard ORM processor to be triggered too? Or am I missing something?\n\nYes, this is needed. The kotlin panache extension does not make use of the hibernate panache extension. They all share a common spi module.", "author": "machi1990", "createdAt": "2020-08-31T13:53:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE0MzUzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE1NzIzOQ==", "url": "https://github.com/quarkusio/quarkus/pull/8695#discussion_r480157239", "bodyText": "Ok, I will adjust the PR then. Running the tests, I will push once they're green.", "author": "gsmet", "createdAt": "2020-08-31T14:10:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE0MzUzOA=="}], "type": "inlineReview"}, {"oid": "2dd36722844fd3d772d724a0d8373f143aed98ce", "url": "https://github.com/quarkusio/quarkus/commit/2dd36722844fd3d772d724a0d8373f143aed98ce", "message": "Add the whole hierarchy of an entity to the persistence unit", "committedDate": "2020-08-31T14:14:54Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDI0MzA1MQ==", "url": "https://github.com/quarkusio/quarkus/pull/8695#discussion_r480243051", "bodyText": "It would probably be better to move this code just below the line below, otherwise we consider the current class too. It's not really a problem but it's less correct.\n@machi1990 I'll wait to see if you have other comments before fixing this.", "author": "gsmet", "createdAt": "2020-08-31T16:24:58Z", "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java", "diffHunk": "@@ -956,6 +968,27 @@ private void enhanceEntities(final JpaEntitiesBuildItem domainObjects,\n         return modelClassesPerPersistenceUnits;\n     }\n \n+    private static Set<String> getRelatedModelClassNames(IndexView index, Set<String> knownModelClassNames,\n+            String modelClassName) {\n+        Set<String> relatedModelClassNames = new HashSet<>();\n+        ClassInfo modelClassInfo = index.getClassByName(DotName.createSimple(modelClassName));\n+\n+        // for now we only deal with entities and mapped super classes\n+        if (modelClassInfo.classAnnotation(JPA_ENTITY) == null &&\n+                modelClassInfo.classAnnotation(MAPPED_SUPERCLASS) == null) {\n+            return Collections.emptySet();\n+        }\n+\n+        while (modelClassInfo != null && !modelClassInfo.name().equals(DotNames.OBJECT)) {\n+            if (knownModelClassNames.contains(modelClassName)) {\n+                relatedModelClassNames.add(modelClassInfo.name().toString());\n+            }", "originalCommit": "2dd36722844fd3d772d724a0d8373f143aed98ce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDI4NzE5OA==", "url": "https://github.com/quarkusio/quarkus/pull/8695#discussion_r480287198", "bodyText": "Just pushed the fix to have CI running this evening.\nFor me it looks ready to go, waiting for your blessing.", "author": "gsmet", "createdAt": "2020-08-31T17:45:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDI0MzA1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDI4ODYzMA==", "url": "https://github.com/quarkusio/quarkus/pull/8695#discussion_r480288630", "bodyText": "I was just reviewing this part. The initial version would add the model to the relatedModelClassNames set too. Thanks for taking care of that.", "author": "machi1990", "createdAt": "2020-08-31T17:48:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDI0MzA1MQ=="}], "type": "inlineReview"}, {"oid": "0d596e0d1152aa52957ad1b3fbd8a5212f4a4708", "url": "https://github.com/quarkusio/quarkus/commit/0d596e0d1152aa52957ad1b3fbd8a5212f4a4708", "message": "Add the whole hierarchy of an entity to the persistence unit", "committedDate": "2020-08-31T17:45:14Z", "type": "forcePushed"}, {"oid": "99a4b4f163ac9b17e7a2da4e14e87d9557f39950", "url": "https://github.com/quarkusio/quarkus/commit/99a4b4f163ac9b17e7a2da4e14e87d9557f39950", "message": "feat(panache): add support of multiple persistence units in hibernate\norm", "committedDate": "2020-08-31T19:57:08Z", "type": "commit"}, {"oid": "ee0e042ec2a782467eba208575db91de02bb67ff", "url": "https://github.com/quarkusio/quarkus/commit/ee0e042ec2a782467eba208575db91de02bb67ff", "message": "Make JpaModelPersistenceUnitMappingBuildItem map unmodifiable", "committedDate": "2020-08-31T19:57:08Z", "type": "commit"}, {"oid": "83709944d5304682e3c1baef432045cc91a8bac1", "url": "https://github.com/quarkusio/quarkus/commit/83709944d5304682e3c1baef432045cc91a8bac1", "message": "Improve error message for Panache entities attached to several PUs", "committedDate": "2020-08-31T19:57:08Z", "type": "commit"}, {"oid": "780966ab94830c9ad7788753efaca08f32a97e1b", "url": "https://github.com/quarkusio/quarkus/commit/780966ab94830c9ad7788753efaca08f32a97e1b", "message": "Don't make the PU map unmodifiable as we clear it on destroy", "committedDate": "2020-08-31T19:57:08Z", "type": "commit"}, {"oid": "59402d95310c23c58950a0cb3c7594ba26edc829", "url": "https://github.com/quarkusio/quarkus/commit/59402d95310c23c58950a0cb3c7594ba26edc829", "message": "Add the whole hierarchy of an entity to the persistence unit", "committedDate": "2020-08-31T19:57:08Z", "type": "commit"}, {"oid": "59402d95310c23c58950a0cb3c7594ba26edc829", "url": "https://github.com/quarkusio/quarkus/commit/59402d95310c23c58950a0cb3c7594ba26edc829", "message": "Add the whole hierarchy of an entity to the persistence unit", "committedDate": "2020-08-31T19:57:08Z", "type": "forcePushed"}]}