{"pr_number": 8864, "pr_title": "Fixes devmode for multi module projects using 'revision' property as versions", "pr_createdAt": "2020-04-26T22:25:18Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/8864", "timeline": [{"oid": "2b5a0b5911eb3d17bfd9d4c41c72df10f6e36c54", "url": "https://github.com/quarkusio/quarkus/commit/2b5a0b5911eb3d17bfd9d4c41c72df10f6e36c54", "message": "Fixes devmode for multi module projects using 'revision' property as versions", "committedDate": "2020-04-30T09:09:26Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ2NzE5Mw==", "url": "https://github.com/quarkusio/quarkus/pull/8864#discussion_r419467193", "bodyText": "I find this very fragile. IIRC, it's not the first time we discuss about this. What happens if there is a properly escaped space in the property? That happens a lot with paths on Windows.\nCan't we get some Maven classes to parse the command line somehow? I thought we did that somewhere else last time we discussed this.", "author": "gsmet", "createdAt": "2020-05-04T14:12:41Z", "path": "devtools/maven/src/main/java/io/quarkus/maven/DevMojo.java", "diffHunk": "@@ -642,13 +643,47 @@ void prepare() throws Exception {\n             if (devModeContext.isEnablePreview()) {\n                 args.add(DevModeContext.ENABLE_PREVIEW_FLAG);\n             }\n+\n+            propagateUserProperties();\n+\n             args.add(\"-jar\");\n             args.add(tempFile.getAbsolutePath());\n             if (argsString != null) {\n                 args.addAll(Arrays.asList(CommandLineUtils.translateCommandline(argsString)));\n             }\n         }\n \n+        private void propagateUserProperties() {\n+            final String mavenCmdLine = BootstrapMavenOptions.getMavenCmdLine();\n+            if (mavenCmdLine == null || mavenCmdLine.isEmpty()) {\n+                return;\n+            }\n+            int i = mavenCmdLine.indexOf(\"-D\");\n+            if (i < 0) {\n+                return;\n+            }\n+            final StringBuilder buf = new StringBuilder();\n+            buf.append(\"-D\");\n+            i += 2;\n+            while (i < mavenCmdLine.length()) {\n+                final char ch = mavenCmdLine.charAt(i++);\n+                if (!Character.isWhitespace(ch)) {", "originalCommit": "2b5a0b5911eb3d17bfd9d4c41c72df10f6e36c54", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ4MTE0OQ==", "url": "https://github.com/quarkusio/quarkus/pull/8864#discussion_r419481149", "bodyText": "You're right about escaping. It's not Maven-specific parsing though.", "author": "aloubyansky", "createdAt": "2020-05-04T14:31:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ2NzE5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ4MzA4Mw==", "url": "https://github.com/quarkusio/quarkus/pull/8864#discussion_r419483083", "bodyText": "I agree the escaping is not Maven specific but I suppose we should be in line with what Maven does? AFAICS we are in a Maven specific module.", "author": "gsmet", "createdAt": "2020-05-04T14:34:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ2NzE5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTUwNjk0NA==", "url": "https://github.com/quarkusio/quarkus/pull/8864#discussion_r419506944", "bodyText": "I don't think Maven does that anywhere. I can't think of reason why it would need to.", "author": "aloubyansky", "createdAt": "2020-05-04T15:06:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ2NzE5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTUxMDcwNw==", "url": "https://github.com/quarkusio/quarkus/pull/8864#discussion_r419510707", "bodyText": "I would have expected Maven to have code to parse parameters of the command line? But maybe I'm missing something obvious :).", "author": "gsmet", "createdAt": "2020-05-04T15:11:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ2NzE5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTUxNzkzNg==", "url": "https://github.com/quarkusio/quarkus/pull/8864#discussion_r419517936", "bodyText": "Is there a reason why we need to propogate individual parameters here and not just pass on the full system properties map ?", "author": "maxandersen", "createdAt": "2020-05-04T15:22:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ2NzE5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTUyMjg3Ng==", "url": "https://github.com/quarkusio/quarkus/pull/8864#discussion_r419522876", "bodyText": "That would probably mean persisting them to a file and then reading it and setting the properties in the dev mode process. I thought it'd be easier to parse a \"little\" string to pass what's in it on.", "author": "aloubyansky", "createdAt": "2020-05-04T15:29:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ2NzE5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc0Mzg0Mw==", "url": "https://github.com/quarkusio/quarkus/pull/8864#discussion_r419743843", "bodyText": "couldn't the property expression be in any part of the version string ?", "author": "maxandersen", "createdAt": "2020-05-04T21:36:31Z", "path": "independent-projects/bootstrap/core/src/main/java/io/quarkus/bootstrap/resolver/maven/workspace/ModelUtils.java", "diffHunk": "@@ -184,6 +210,39 @@ public static String getVersion(Model model) {\n         throw new IllegalStateException(\"Failed to determine version for project model\");\n     }\n \n+    public static String getVersion(Model model) {\n+        final String rawVersion = getRawVersion(model);\n+        return isUnresolvedVersion(rawVersion) ? resolveVersion(rawVersion, model) : rawVersion;\n+    }\n+\n+    public static boolean isUnresolvedVersion(String version) {\n+        return version.charAt(0) == '$';//UNRESOLVED_VERSION_PATTERN.matcher(version).find();", "originalCommit": "2b5a0b5911eb3d17bfd9d4c41c72df10f6e36c54", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc1MjAxNw==", "url": "https://github.com/quarkusio/quarkus/pull/8864#discussion_r419752017", "bodyText": "Since I was the one who added UNRESOLVED_VERSION_PATTERN I am also a litte surprised by this change.\nThe Maven documentation doesn't exactly answer this question but I don't see why you should not be allowed to start the raw version with a literal string.\nIt seems the only thing that is explicitly forbidden as per above mentioned doc is the usage of any other property than revision, sha1 or changelist.", "author": "famod", "createdAt": "2020-05-04T21:54:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc0Mzg0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc1NzIzNA==", "url": "https://github.com/quarkusio/quarkus/pull/8864#discussion_r419757234", "bodyText": "I'll change it back.", "author": "aloubyansky", "createdAt": "2020-05-04T22:05:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc0Mzg0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc1NzgxNw==", "url": "https://github.com/quarkusio/quarkus/pull/8864#discussion_r419757817", "bodyText": "might be minor issue but this will only consider things explicitly set on the command line; it will not honor .mvn/maven.config", "author": "maxandersen", "createdAt": "2020-05-04T22:07:21Z", "path": "devtools/maven/src/main/java/io/quarkus/maven/DevMojo.java", "diffHunk": "@@ -642,13 +643,47 @@ void prepare() throws Exception {\n             if (devModeContext.isEnablePreview()) {\n                 args.add(DevModeContext.ENABLE_PREVIEW_FLAG);\n             }\n+\n+            propagateUserProperties();\n+\n             args.add(\"-jar\");\n             args.add(tempFile.getAbsolutePath());\n             if (argsString != null) {\n                 args.addAll(Arrays.asList(CommandLineUtils.translateCommandline(argsString)));\n             }\n         }\n \n+        private void propagateUserProperties() {\n+            final String mavenCmdLine = BootstrapMavenOptions.getMavenCmdLine();", "originalCommit": "2b5a0b5911eb3d17bfd9d4c41c72df10f6e36c54", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc1OTU5OA==", "url": "https://github.com/quarkusio/quarkus/pull/8864#discussion_r419759598", "bodyText": "I'd classify it as a separate issue which should be fixed in the bootstrap Maven context/resolver.", "author": "aloubyansky", "createdAt": "2020-05-04T22:11:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc1NzgxNw=="}], "type": "inlineReview"}, {"oid": "af17877fc73eebd058409aee1de98fd9a6bf6083", "url": "https://github.com/quarkusio/quarkus/commit/af17877fc73eebd058409aee1de98fd9a6bf6083", "message": "Fixes devmode for multi module projects using 'revision' property as versions", "committedDate": "2020-05-04T22:24:42Z", "type": "commit"}, {"oid": "af17877fc73eebd058409aee1de98fd9a6bf6083", "url": "https://github.com/quarkusio/quarkus/commit/af17877fc73eebd058409aee1de98fd9a6bf6083", "message": "Fixes devmode for multi module projects using 'revision' property as versions", "committedDate": "2020-05-04T22:24:42Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc2NTkzMA==", "url": "https://github.com/quarkusio/quarkus/pull/8864#discussion_r419765930", "bodyText": "this would not handle case where there are nested properties would it ?", "author": "maxandersen", "createdAt": "2020-05-04T22:27:24Z", "path": "independent-projects/bootstrap/core/src/main/java/io/quarkus/bootstrap/resolver/maven/workspace/ModelUtils.java", "diffHunk": "@@ -184,6 +210,39 @@ public static String getVersion(Model model) {\n         throw new IllegalStateException(\"Failed to determine version for project model\");\n     }\n \n+    public static String getVersion(Model model) {\n+        final String rawVersion = getRawVersion(model);\n+        return isUnresolvedVersion(rawVersion) ? resolveVersion(rawVersion, model) : rawVersion;\n+    }\n+\n+    public static boolean isUnresolvedVersion(String version) {\n+        return getUnresolvedVersionPattern().matcher(version).find();\n+    }\n+\n+    public static String resolveVersion(String rawVersion, Model rawModel) {\n+        final Map<String, String> props = new HashMap<>();", "originalCommit": "af17877fc73eebd058409aee1de98fd9a6bf6083", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc2Nzg2NA==", "url": "https://github.com/quarkusio/quarkus/pull/8864#discussion_r419767864", "bodyText": "Nesting is not allowed in Maven project versions.", "author": "aloubyansky", "createdAt": "2020-05-04T22:32:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc2NTkzMA=="}], "type": "inlineReview"}]}