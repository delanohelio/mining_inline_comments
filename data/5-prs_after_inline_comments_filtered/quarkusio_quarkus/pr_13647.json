{"pr_number": 13647, "pr_title": "Adding picocli codestart", "pr_createdAt": "2020-12-02T22:41:04Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/13647", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDg0Mjk0Ng==", "url": "https://github.com/quarkusio/quarkus/pull/13647#discussion_r534842946", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Option(names = {\"--times\", \"-t\"}, defaultValue = \"1\", description = \"Who many time should we say goodbye\")\n          \n          \n            \n                @Option(names = {\"--times\", \"-t\"}, defaultValue = \"1\", description = \"How many time should we say goodbye\")", "author": "ia3andy", "createdAt": "2020-12-03T07:50:19Z", "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/singleton-examples/picocli-example/java/src/main/java/org/acme/picocli/GoodbyeCommand.java", "diffHunk": "@@ -0,0 +1,21 @@\n+package org.acme.picocli;\n+\n+import picocli.CommandLine.Command;\n+import picocli.CommandLine.Option;\n+\n+@Command(name = \"goodbye\")\n+public class GoodbyeCommand implements Runnable {\n+\n+    @Option(names = {\"--name\"}, description = \"Guest name\")\n+    String name;\n+\n+    @Option(names = {\"--times\", \"-t\"}, defaultValue = \"1\", description = \"Who many time should we say goodbye\")", "originalCommit": "bb5913908ad4eeb0102902833c453e0abb5ab00a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDkxMjcxNA==", "url": "https://github.com/quarkusio/quarkus/pull/13647#discussion_r534912714", "bodyText": "You don't need to add the codestart, it will be autoselected with the extension, but first you need to add it to the extension metadata in this file:\nhttps://github.com/quarkusio/quarkus/blob/master/extensions/picocli/runtime/src/main/resources/META-INF/quarkus-extension.yaml#L10\n---\nname: \"Picocli\"\nmetadata:\n  keywords:\n  - \"picocli\"\n  - \"command-line\"\n  guide: \"https://quarkus.io/guides/picocli\"\n  categories:\n  - \"miscellaneous\"\n  status: \"experimental\"\n  codestart: picocli", "author": "ia3andy", "createdAt": "2020-12-03T08:29:44Z", "path": "integration-tests/devtools/src/test/java/io/quarkus/devtools/codestarts/quarkus/QuarkusCodestartGenerationTest.java", "diffHunk": "@@ -311,6 +311,49 @@ void generateMavenResteasyJava() throws IOException {\n         assertThat(projectDir.resolve(\"src/test/java/org/acme/NativeGreetingResourceIT.java\")).exists();\n     }\n \n+    @Test\n+    void generateMavenPicocliJava() throws IOException {\n+        final QuarkusCodestartProjectInput input = QuarkusCodestartProjectInput.builder()\n+                .addExtension(AppArtifactKey.fromString(\"io.quarkus:quarkus-picocli\"))\n+                .addCodestart(\"picocli\")\n+                .addData(getTestInputData())\n+                .build();\n+        final Path projectDir = testDirPath.resolve(\"maven-picocli-java\");\n+        getCatalog().createProject(input).generate(projectDir);\n+\n+        checkMaven(projectDir);\n+        checkReadme(projectDir);\n+        checkDockerfiles(projectDir, BuildTool.MAVEN);\n+        checkConfigProperties(projectDir);\n+\n+        assertThat(projectDir.resolve(\"src/main/java/org/acme/picocli/EntryCommand.java\")).exists();\n+        assertThat(projectDir.resolve(\"src/main/java/org/acme/picocli/GoodbyeCommand.java\")).exists();\n+        assertThat(projectDir.resolve(\"src/main/java/org/acme/picocli/HelloCommand.java\")).exists();\n+        assertThat(projectDir.resolve(\"src/main/java/org/acme/picocli/GreetingService.java\")).exists();\n+    }\n+\n+    @Test\n+    void generateMavenPicocliKotlin() throws IOException {\n+        final QuarkusCodestartProjectInput input = QuarkusCodestartProjectInput.builder()\n+                .addExtension(AppArtifactKey.fromString(\"io.quarkus:quarkus-picocli\"))\n+                .addExtension(AppArtifactKey.fromString(\"io.quarkus:quarkus-kotlin\"))\n+                .addCodestart(\"picocli\")", "originalCommit": "86b0de8acc958674916886232638a6409e7173e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDkyMDA3OA==", "url": "https://github.com/quarkusio/quarkus/pull/13647#discussion_r534920078", "bodyText": "Ok, this one is missing from guide I think.", "author": "jtama", "createdAt": "2020-12-03T08:34:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDkxMjcxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDkyNjk3MQ==", "url": "https://github.com/quarkusio/quarkus/pull/13647#discussion_r534926971", "bodyText": "@jtama-op https://github.com/ia3andy/quarkus/blob/cs-doc/independent-projects/tools/codestarts/README.adoc#writing-a-codestart-with-example-code-for-an-extension\nLook at the When done part :)", "author": "ia3andy", "createdAt": "2020-12-03T08:38:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDkxMjcxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDkxMzMzMw==", "url": "https://github.com/quarkusio/quarkus/pull/13647#discussion_r534913333", "bodyText": "Same here", "author": "ia3andy", "createdAt": "2020-12-03T08:30:05Z", "path": "integration-tests/devtools/src/test/java/io/quarkus/devtools/codestarts/quarkus/QuarkusCodestartGenerationTest.java", "diffHunk": "@@ -311,6 +311,49 @@ void generateMavenResteasyJava() throws IOException {\n         assertThat(projectDir.resolve(\"src/test/java/org/acme/NativeGreetingResourceIT.java\")).exists();\n     }\n \n+    @Test\n+    void generateMavenPicocliJava() throws IOException {\n+        final QuarkusCodestartProjectInput input = QuarkusCodestartProjectInput.builder()\n+                .addExtension(AppArtifactKey.fromString(\"io.quarkus:quarkus-picocli\"))\n+                .addCodestart(\"picocli\")", "originalCommit": "86b0de8acc958674916886232638a6409e7173e7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0c9161b2e3906152f5f0b9a5a4333098be2e81c1", "url": "https://github.com/quarkusio/quarkus/commit/0c9161b2e3906152f5f0b9a5a4333098be2e81c1", "message": "Adding picocli codestart", "committedDate": "2020-12-03T08:29:10Z", "type": "forcePushed"}, {"oid": "78b1089ef7ec3f8c5ca4d6578a0174e1a5a0940e", "url": "https://github.com/quarkusio/quarkus/commit/78b1089ef7ec3f8c5ca4d6578a0174e1a5a0940e", "message": "Adding picocli codestart", "committedDate": "2020-12-03T08:35:18Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTAwNzYxOA==", "url": "https://github.com/quarkusio/quarkus/pull/13647#discussion_r535007618", "bodyText": "this felt a bit weird to have them exclusive, maybe --firt-name and --nick-name? would make more sense?", "author": "ia3andy", "createdAt": "2020-12-03T09:33:47Z", "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/examples/picocli-example/java/src/main/java/org/acme/picocli/HelloCommand.java", "diffHunk": "@@ -0,0 +1,38 @@\n+package org.acme.picocli;\n+\n+import picocli.CommandLine;\n+import picocli.CommandLine.Command;\n+\n+import java.io.File;\n+import java.net.URL;\n+\n+@Command(name = \"hello\")\n+public class HelloCommand implements Runnable{\n+\n+    @CommandLine.ArgGroup(exclusive = true, multiplicity = \"1\")\n+    Name name;\n+    static class Name {\n+\n+\n+        @CommandLine.Option(names = {\"--first-name\"}, description = \"The guest first name\")", "originalCommit": "78b1089ef7ec3f8c5ca4d6578a0174e1a5a0940e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTAxNzQzOQ==", "url": "https://github.com/quarkusio/quarkus/pull/13647#discussion_r535017439", "bodyText": "Ok yes of course! I only intended to show the exclusive feature, I will make the change.", "author": "jtama", "createdAt": "2020-12-03T09:42:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTAwNzYxOA=="}], "type": "inlineReview"}, {"oid": "becee6de1f1dcb588fd757485e20620e120a93a8", "url": "https://github.com/quarkusio/quarkus/commit/becee6de1f1dcb588fd757485e20620e120a93a8", "message": "Adding picocli codestart", "committedDate": "2020-12-03T11:16:18Z", "type": "commit"}, {"oid": "becee6de1f1dcb588fd757485e20620e120a93a8", "url": "https://github.com/quarkusio/quarkus/commit/becee6de1f1dcb588fd757485e20620e120a93a8", "message": "Adding picocli codestart", "committedDate": "2020-12-03T11:16:18Z", "type": "forcePushed"}]}