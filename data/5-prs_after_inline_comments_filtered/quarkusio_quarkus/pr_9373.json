{"pr_number": 9373, "pr_title": "REST data Panache reorganisation", "pr_createdAt": "2020-05-16T12:10:15Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/9373", "timeline": [{"oid": "eda585c9a00d7cd77468893f8e096e00e083e811", "url": "https://github.com/quarkusio/quarkus/commit/eda585c9a00d7cd77468893f8e096e00e083e811", "message": "Rename REST data Panache extension", "committedDate": "2020-05-17T09:12:41Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM3NDM5NQ==", "url": "https://github.com/quarkusio/quarkus/pull/9373#discussion_r426374395", "bodyText": "I assume this is used in addition to whatever the Class uses, right?", "author": "geoand", "createdAt": "2020-05-18T05:18:41Z", "path": "extensions/panache/rest-data-panache/runtime/src/main/java/io/quarkus/rest/data/panache/ResourceProperties.java", "diffHunk": "@@ -0,0 +1,31 @@\n+package io.quarkus.rest.data.panache;\n+\n+import static java.lang.annotation.ElementType.TYPE;\n+import static java.lang.annotation.RetentionPolicy.RUNTIME;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.Target;\n+\n+@Documented\n+@Retention(RUNTIME)\n+@Target({ TYPE })\n+public @interface ResourceProperties {\n+\n+    /**\n+     * Generate operations that support HAL content type.\n+     * HAL methods are generated in addition to the standard methods. They accept the same parameters but return a content of\n+     * `application/hal+json` type.\n+     * The operations that support HAL responses are `get`, `list`, `add` and `update`.\n+     *\n+     * Default: false.\n+     */\n+    boolean hal() default false;\n+\n+    /**\n+     * URL path segment that should be used to access the resources.", "originalCommit": "eda585c9a00d7cd77468893f8e096e00e083e811", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM4MjAxMA==", "url": "https://github.com/quarkusio/quarkus/pull/9373#discussion_r426382010", "bodyText": "Looking at the tests, I see it does :)", "author": "geoand", "createdAt": "2020-05-18T05:48:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM3NDM5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQxMjEwNQ==", "url": "https://github.com/quarkusio/quarkus/pull/9373#discussion_r426412105", "bodyText": "Yes, I've added a @Path annotation to the class too", "author": "gytis", "createdAt": "2020-05-18T07:13:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM3NDM5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcxNDU4Nw==", "url": "https://github.com/quarkusio/quarkus/pull/9373#discussion_r426714587", "bodyText": "Probably worth mentioning in the javadoc both here and on the OperationsProperties.path one to explain they accumulate.", "author": "FroMage", "createdAt": "2020-05-18T15:34:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM3NDM5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM3NTA3Mg==", "url": "https://github.com/quarkusio/quarkus/pull/9373#discussion_r426375072", "bodyText": "Any reason why this was renamed?", "author": "geoand", "createdAt": "2020-05-18T05:21:52Z", "path": "extensions/panache/rest-data-panache/deployment/src/main/java/io/quarkus/rest/data/panache/deployment/PanacheCrudResourceInfo.java", "diffHunk": "@@ -1,10 +1,10 @@\n-package io.quarkus.panache.rest.common.deployment;\n+package io.quarkus.rest.data.panache.deployment;\n \n import org.jboss.jandex.ClassInfo;\n \n import io.quarkus.builder.item.MultiBuildItem;\n \n-public final class PanacheCrudResourceBuildItem extends MultiBuildItem {\n+public final class PanacheCrudResourceInfo extends MultiBuildItem {", "originalCommit": "eda585c9a00d7cd77468893f8e096e00e083e811", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQxMzY4Ng==", "url": "https://github.com/quarkusio/quarkus/pull/9373#discussion_r426413686", "bodyText": "Before it was already used by a processor which would extract separate bits of information and only pass what's needed to a specific method implementor. I made the method implementors more abstract now so processor wouldn't have to know too much details about them. Now it just passes this object to each implementor. So I assumed the name without \"BuildItem\" suffix would be more suitable. What do you think?", "author": "gytis", "createdAt": "2020-05-18T07:16:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM3NTA3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQxNTQ3NQ==", "url": "https://github.com/quarkusio/quarkus/pull/9373#discussion_r426415475", "bodyText": "It just feels weird to have being a build item and not being called that. What we usually do in similar cases is to have a build item that just holds a reference to the regular class. Then in the non-build-step code you can just pass around the regular class. The build step classes would of course the build items to communicate.", "author": "geoand", "createdAt": "2020-05-18T07:20:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM3NTA3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQyMDQ2Nw==", "url": "https://github.com/quarkusio/quarkus/pull/9373#discussion_r426420467", "bodyText": "Yeah that makes sense, I'll extract it to a separate class", "author": "gytis", "createdAt": "2020-05-18T07:30:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM3NTA3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQ1ODY1Nw==", "url": "https://github.com/quarkusio/quarkus/pull/9373#discussion_r426458657", "bodyText": "Done", "author": "gytis", "createdAt": "2020-05-18T08:36:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM3NTA3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM3OTQxMw==", "url": "https://github.com/quarkusio/quarkus/pull/9373#discussion_r426379413", "bodyText": "Minor nipick (can be fixed later): The use of controller seems a little out of place. Perhaps use resource instead?", "author": "geoand", "createdAt": "2020-05-18T05:39:39Z", "path": "extensions/panache/rest-data-panache/deployment/src/main/java/io/quarkus/rest/data/panache/deployment/properties/ResourcePropertiesAccessor.java", "diffHunk": "@@ -0,0 +1,48 @@\n+package io.quarkus.rest.data.panache.deployment.properties;\n+\n+import org.jboss.jandex.AnnotationInstance;\n+import org.jboss.jandex.ClassInfo;\n+import org.jboss.jandex.DotName;\n+import org.jboss.jandex.IndexView;\n+\n+import io.quarkus.rest.data.panache.ResourceProperties;\n+import io.quarkus.rest.data.panache.deployment.utils.ResourceName;\n+\n+public class ResourcePropertiesAccessor {\n+\n+    private static final DotName RESOURCE_PROPERTIES_ANNOTATION = DotName.createSimple(ResourceProperties.class.getName());\n+\n+    private final IndexView index;\n+\n+    public ResourcePropertiesAccessor(IndexView index) {\n+        this.index = index;\n+    }\n+\n+    public boolean isHal(ClassInfo classInfo) {\n+        AnnotationInstance annotation = getAnnotation(classInfo);\n+        return annotation != null\n+                && annotation.value(\"hal\") != null\n+                && annotation.value(\"hal\").asBoolean();\n+    }\n+\n+    public String path(ClassInfo classInfo) {\n+        AnnotationInstance annotation = getAnnotation(classInfo);\n+        if (annotation == null || annotation.value(\"path\") == null || \"\".equals(annotation.value(\"path\").asString())) {\n+            return ResourceName.fromClass(classInfo.simpleName());\n+        }\n+        return annotation.value(\"path\").asString();\n+    }\n+\n+    private AnnotationInstance getAnnotation(ClassInfo classInfo) {\n+        if (classInfo.classAnnotation(RESOURCE_PROPERTIES_ANNOTATION) != null) {\n+            return classInfo.classAnnotation(RESOURCE_PROPERTIES_ANNOTATION);\n+        }\n+        if (classInfo.superName() != null) {\n+            ClassInfo superControllerInterface = index.getClassByName(classInfo.superName());", "originalCommit": "eda585c9a00d7cd77468893f8e096e00e083e811", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQxMzg5Mg==", "url": "https://github.com/quarkusio/quarkus/pull/9373#discussion_r426413892", "bodyText": "True. I'll take a note of this and will fix it separately after the release.", "author": "gytis", "createdAt": "2020-05-18T07:17:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM3OTQxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQ1ODU4OA==", "url": "https://github.com/quarkusio/quarkus/pull/9373#discussion_r426458588", "bodyText": "Renamed", "author": "gytis", "createdAt": "2020-05-18T08:36:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM3OTQxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM3OTkwMw==", "url": "https://github.com/quarkusio/quarkus/pull/9373#discussion_r426379903", "bodyText": "This seems to be unused now, no?", "author": "geoand", "createdAt": "2020-05-18T05:41:16Z", "path": "extensions/panache/rest-data-panache/deployment/src/main/java/io/quarkus/rest/data/panache/deployment/utils/ResourceName.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package io.quarkus.rest.data.panache.deployment.utils;\n+\n+import static io.quarkus.runtime.util.StringUtil.camelHumpsIterator;\n+import static io.quarkus.runtime.util.StringUtil.lowerCase;\n+import static io.quarkus.runtime.util.StringUtil.toList;\n+import static io.quarkus.runtime.util.StringUtil.withoutSuffix;\n+\n+public final class ResourceName {\n+\n+    private static final String[] SUFFIXES = { \"controller\", \"resource\" };\n+\n+    public static String fromClass(Class<?> resourceClass) {", "originalCommit": "eda585c9a00d7cd77468893f8e096e00e083e811", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQxNjM4Mg==", "url": "https://github.com/quarkusio/quarkus/pull/9373#discussion_r426416382", "bodyText": "True, I had a use for it initially. I'll get rid of it.", "author": "gytis", "createdAt": "2020-05-18T07:22:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM3OTkwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQ1ODU0OA==", "url": "https://github.com/quarkusio/quarkus/pull/9373#discussion_r426458548", "bodyText": "Removed", "author": "gytis", "createdAt": "2020-05-18T08:36:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM3OTkwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM4MjY3NQ==", "url": "https://github.com/quarkusio/quarkus/pull/9373#discussion_r426382675", "bodyText": "Not that I think this will ever be an issue, but by using \"\" as the default value, you are effectively preventing users from making an panache rest data resource without a path. Now that's probably A good thing, but I am just bringing it up in case you hadn't considered it. In any case it would probably be safer to use some nonsensical default valur", "author": "geoand", "createdAt": "2020-05-18T05:51:06Z", "path": "extensions/panache/rest-data-panache/runtime/src/main/java/io/quarkus/rest/data/panache/ResourceProperties.java", "diffHunk": "@@ -0,0 +1,31 @@\n+package io.quarkus.rest.data.panache;\n+\n+import static java.lang.annotation.ElementType.TYPE;\n+import static java.lang.annotation.RetentionPolicy.RUNTIME;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.Target;\n+\n+@Documented\n+@Retention(RUNTIME)\n+@Target({ TYPE })\n+public @interface ResourceProperties {\n+\n+    /**\n+     * Generate operations that support HAL content type.\n+     * HAL methods are generated in addition to the standard methods. They accept the same parameters but return a content of\n+     * `application/hal+json` type.\n+     * The operations that support HAL responses are `get`, `list`, `add` and `update`.\n+     *\n+     * Default: false.\n+     */\n+    boolean hal() default false;\n+\n+    /**\n+     * URL path segment that should be used to access the resources.\n+     *\n+     * Default: hyphenated resource name without a suffix. Ignored suffixes are `Controller` and `Resource`.\n+     */\n+    String path() default \"\";", "originalCommit": "eda585c9a00d7cd77468893f8e096e00e083e811", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQxNDg2MQ==", "url": "https://github.com/quarkusio/quarkus/pull/9373#discussion_r426414861", "bodyText": "Hmm, we could maybe change this later too. Adding a nonsense value and based on that not add an annotation at all. I need to add some default value because otherwise user will always have to specify a path when using this annotation.", "author": "gytis", "createdAt": "2020-05-18T07:19:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM4MjY3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQxNjAxMg==", "url": "https://github.com/quarkusio/quarkus/pull/9373#discussion_r426416012", "bodyText": "Yeah, I understand the need for a default value, just saying that \"\" is not the proper one :)", "author": "geoand", "createdAt": "2020-05-18T07:21:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM4MjY3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQyMDg5OA==", "url": "https://github.com/quarkusio/quarkus/pull/9373#discussion_r426420898", "bodyText": "Shall we change it separately after the release? I don't want to hold this PR for too long.", "author": "gytis", "createdAt": "2020-05-18T07:31:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM4MjY3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQyMTE2MQ==", "url": "https://github.com/quarkusio/quarkus/pull/9373#discussion_r426421161", "bodyText": "Sure yeah", "author": "geoand", "createdAt": "2020-05-18T07:31:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM4MjY3NQ=="}], "type": "inlineReview"}, {"oid": "3fc8b60eeca9058914ff89fbafa73eb2eb980574", "url": "https://github.com/quarkusio/quarkus/commit/3fc8b60eeca9058914ff89fbafa73eb2eb980574", "message": "Split RestData build item and resource info", "committedDate": "2020-05-18T07:59:24Z", "type": "forcePushed"}, {"oid": "cd4ae3d73c5e3ebec9a5d1e592e8bf945461a4b7", "url": "https://github.com/quarkusio/quarkus/commit/cd4ae3d73c5e3ebec9a5d1e592e8bf945461a4b7", "message": "Split RestData build item and resource info", "committedDate": "2020-05-18T09:37:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcwODU5MQ==", "url": "https://github.com/quarkusio/quarkus/pull/9373#discussion_r426708591", "bodyText": "So you were against CRUD in the module name, but not here in the resource name? Should it be PanacheEntityDataResource?", "author": "FroMage", "createdAt": "2020-05-18T15:25:26Z", "path": "extensions/panache/hibernate-orm-rest-data-panache/deployment/src/test/java/io/quarkus/hibernate/orm/rest/data/panache/deployment/CustomPathItemsResource.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package io.quarkus.hibernate.orm.rest.data.panache.deployment;\n+\n+import java.util.List;\n+\n+import javax.ws.rs.core.Response;\n+\n+import io.quarkus.hibernate.orm.rest.data.panache.PanacheEntityCrudResource;\n+import io.quarkus.rest.data.panache.OperationProperties;\n+import io.quarkus.rest.data.panache.ResourceProperties;\n+\n+@ResourceProperties(path = \"custom-items\", hal = true)\n+public interface CustomPathItemsResource extends PanacheEntityCrudResource<Item, Long> {", "originalCommit": "cd4ae3d73c5e3ebec9a5d1e592e8bf945461a4b7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcyMzcwMw==", "url": "https://github.com/quarkusio/quarkus/pull/9373#discussion_r426723703", "bodyText": "It does sounds better to me without CRUD. I'll try to rename it quickly.", "author": "gytis", "createdAt": "2020-05-18T15:47:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcwODU5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcyOTMzNg==", "url": "https://github.com/quarkusio/quarkus/pull/9373#discussion_r426729336", "bodyText": "Maybe just PanacheEntityResource?", "author": "gytis", "createdAt": "2020-05-18T15:55:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcwODU5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjczMTgyOA==", "url": "https://github.com/quarkusio/quarkus/pull/9373#discussion_r426731828", "bodyText": "I guess, yes.", "author": "FroMage", "createdAt": "2020-05-18T15:58:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcwODU5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjczMjI4Mw==", "url": "https://github.com/quarkusio/quarkus/pull/9373#discussion_r426732283", "bodyText": "Probably the same simplification could be done to the repository base name?", "author": "FroMage", "createdAt": "2020-05-18T15:58:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcwODU5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjczNjkxMg==", "url": "https://github.com/quarkusio/quarkus/pull/9373#discussion_r426736912", "bodyText": "Yes of course. Will do PanacheEntityResource and PanacheRepositoryResource for the ones defined in the Hibernate extension. And RestDataResource for that one defined in the common module that is extended by the first two.", "author": "gytis", "createdAt": "2020-05-18T16:06:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcwODU5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc0NjA1NQ==", "url": "https://github.com/quarkusio/quarkus/pull/9373#discussion_r426746055", "bodyText": "\ud83d\udc4d", "author": "FroMage", "createdAt": "2020-05-18T16:20:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcwODU5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc1MzYyOQ==", "url": "https://github.com/quarkusio/quarkus/pull/9373#discussion_r426753629", "bodyText": "Done", "author": "gytis", "createdAt": "2020-05-18T16:32:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcwODU5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcxMDcxMw==", "url": "https://github.com/quarkusio/quarkus/pull/9373#discussion_r426710713", "bodyText": "Given that you've called the class annotation ResourceProperties after JAX-RS's (horrible) choice, is there a colloquial term for methods too or did you pick Operation at random?\nFTR JAX-RS calls methods \"resource methods\":\n\nResource methods are methods of a resource class annotated with a request method designator. They are\nused to handle requests and MUST conform to certain restrictions described in this section.\nA request method designator is a runtime annotation that is annotated with the @HttpMethod annotation.\nJAX-RS defines a set of request method designators for the common HTTP methods: @get, @post, @put,\n@delete, @patch, @Head and @options. Users may define their own custom request method designators\nincluding alternate designators for the common HTTP methods\n\nI just want to make sure people are not going to object at us calling this an Operation.", "author": "FroMage", "createdAt": "2020-05-18T15:28:25Z", "path": "extensions/panache/hibernate-orm-rest-data-panache/deployment/src/test/java/io/quarkus/hibernate/orm/rest/data/panache/deployment/CustomPathItemsResource.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package io.quarkus.hibernate.orm.rest.data.panache.deployment;\n+\n+import java.util.List;\n+\n+import javax.ws.rs.core.Response;\n+\n+import io.quarkus.hibernate.orm.rest.data.panache.PanacheEntityCrudResource;\n+import io.quarkus.rest.data.panache.OperationProperties;\n+import io.quarkus.rest.data.panache.ResourceProperties;\n+\n+@ResourceProperties(path = \"custom-items\", hal = true)\n+public interface CustomPathItemsResource extends PanacheEntityCrudResource<Item, Long> {\n+\n+    @OperationProperties(path = \"api\")", "originalCommit": "cd4ae3d73c5e3ebec9a5d1e592e8bf945461a4b7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcyMDkyOA==", "url": "https://github.com/quarkusio/quarkus/pull/9373#discussion_r426720928", "bodyText": "I called them operations, because that term seems to be used in W3C https://www.w3.org/2001/sw/wiki/REST#Operations_on_Elements. I'm not a purist of any terminology. So whichever is more acceptable I'm fine with it.", "author": "gytis", "createdAt": "2020-05-18T15:43:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcxMDcxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcyNjY5Mw==", "url": "https://github.com/quarkusio/quarkus/pull/9373#discussion_r426726693", "bodyText": "If method is closer to JAX-RS which is what we're using I'm fine with it", "author": "gytis", "createdAt": "2020-05-18T15:51:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcxMDcxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjczMDE4Mg==", "url": "https://github.com/quarkusio/quarkus/pull/9373#discussion_r426730182", "bodyText": "I'm only mentioning it because we started with \u201ccontroller\u201d and we got forced to adhere to JAX-RS's (mistaken) \u201cresource\u201d. So if we need to map all the way to JAX-RS probably it should be @MethodProperties?\nBTW, that link you posted is non-normative. Reference for REST is https://www.ics.uci.edu/~fielding/pubs/dissertation/top.htm (and doesn't mention operations at all. I couldn't find at a glance how it refers to the operations you can do on the resources) but seems to call them \u201coperations\u201d.", "author": "FroMage", "createdAt": "2020-05-18T15:56:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcxMDcxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjczNTU2Mw==", "url": "https://github.com/quarkusio/quarkus/pull/9373#discussion_r426735563", "bodyText": "Yeah I'll just rename to @MethodProperties to be inline with JAX-RS. I'm renaming the interface anyway, so will do it at the same time.", "author": "gytis", "createdAt": "2020-05-18T16:03:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcxMDcxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc1MzY5Mg==", "url": "https://github.com/quarkusio/quarkus/pull/9373#discussion_r426753692", "bodyText": "Done", "author": "gytis", "createdAt": "2020-05-18T16:32:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcxMDcxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcxMzU5MA==", "url": "https://github.com/quarkusio/quarkus/pull/9373#discussion_r426713590", "bodyText": "Could probably do with javadoc to mention this annotation is not mandatory unless you want to override the defaults.", "author": "FroMage", "createdAt": "2020-05-18T15:32:42Z", "path": "extensions/panache/rest-data-panache/runtime/src/main/java/io/quarkus/rest/data/panache/OperationProperties.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package io.quarkus.rest.data.panache;\n+\n+import static java.lang.annotation.ElementType.METHOD;\n+import static java.lang.annotation.RetentionPolicy.RUNTIME;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.Target;\n+\n+@Documented\n+@Retention(RUNTIME)\n+@Target({ METHOD })\n+public @interface OperationProperties {", "originalCommit": "cd4ae3d73c5e3ebec9a5d1e592e8bf945461a4b7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc1Mzg2Mg==", "url": "https://github.com/quarkusio/quarkus/pull/9373#discussion_r426753862", "bodyText": "Done", "author": "gytis", "createdAt": "2020-05-18T16:32:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcxMzU5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcxMzY4OQ==", "url": "https://github.com/quarkusio/quarkus/pull/9373#discussion_r426713689", "bodyText": "Could probably do with javadoc to mention this annotation is not mandatory unless you want to override the defaults.", "author": "FroMage", "createdAt": "2020-05-18T15:32:51Z", "path": "extensions/panache/rest-data-panache/runtime/src/main/java/io/quarkus/rest/data/panache/ResourceProperties.java", "diffHunk": "@@ -0,0 +1,31 @@\n+package io.quarkus.rest.data.panache;\n+\n+import static java.lang.annotation.ElementType.TYPE;\n+import static java.lang.annotation.RetentionPolicy.RUNTIME;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.Target;\n+\n+@Documented\n+@Retention(RUNTIME)\n+@Target({ TYPE })\n+public @interface ResourceProperties {", "originalCommit": "cd4ae3d73c5e3ebec9a5d1e592e8bf945461a4b7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc1MzkxOA==", "url": "https://github.com/quarkusio/quarkus/pull/9373#discussion_r426753918", "bodyText": "Done", "author": "gytis", "createdAt": "2020-05-18T16:33:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcxMzY4OQ=="}], "type": "inlineReview"}, {"oid": "6c2b63c762880abb9166e7b03bfd9e163b9a4357", "url": "https://github.com/quarkusio/quarkus/commit/6c2b63c762880abb9166e7b03bfd9e163b9a4357", "message": "Rename REST data Panache extension", "committedDate": "2020-05-18T16:30:56Z", "type": "forcePushed"}, {"oid": "9215d9ecf047fb7730279f4ea9fe7982e67bd865", "url": "https://github.com/quarkusio/quarkus/commit/9215d9ecf047fb7730279f4ea9fe7982e67bd865", "message": "REST data with Panache guide", "committedDate": "2020-05-18T21:05:38Z", "type": "forcePushed"}, {"oid": "0ad2b121d8cc1dced92534b82a0cacda9320125d", "url": "https://github.com/quarkusio/quarkus/commit/0ad2b121d8cc1dced92534b82a0cacda9320125d", "message": "REST data with Panache guide", "committedDate": "2020-05-19T11:57:06Z", "type": "forcePushed"}, {"oid": "84bfa0a0a05f40aa46465f42a7cac9165f7f2015", "url": "https://github.com/quarkusio/quarkus/commit/84bfa0a0a05f40aa46465f42a7cac9165f7f2015", "message": "REST data with Panache guide", "committedDate": "2020-05-19T12:48:50Z", "type": "forcePushed"}, {"oid": "9339c072cee969689f7a49cabce7180281ca1bce", "url": "https://github.com/quarkusio/quarkus/commit/9339c072cee969689f7a49cabce7180281ca1bce", "message": "REST data with Panache guide", "committedDate": "2020-05-19T17:15:54Z", "type": "forcePushed"}, {"oid": "aac00811b492118cde9d7c7d82853e851eb0cd0e", "url": "https://github.com/quarkusio/quarkus/commit/aac00811b492118cde9d7c7d82853e851eb0cd0e", "message": "REST data with Panache guide", "committedDate": "2020-05-20T07:03:05Z", "type": "forcePushed"}, {"oid": "e34edcf1af1fa5f4d3d3bd3100788854121d6556", "url": "https://github.com/quarkusio/quarkus/commit/e34edcf1af1fa5f4d3d3bd3100788854121d6556", "message": "Path config and Panache REST reorg", "committedDate": "2020-05-20T08:42:46Z", "type": "commit"}, {"oid": "2e3e7df23e2060d22e45c4f4e343abadc41cdb14", "url": "https://github.com/quarkusio/quarkus/commit/2e3e7df23e2060d22e45c4f4e343abadc41cdb14", "message": "Rename REST data Panache extension", "committedDate": "2020-05-20T08:43:17Z", "type": "commit"}, {"oid": "deea0a5583538e899883a59d273a0caaaa4aef99", "url": "https://github.com/quarkusio/quarkus/commit/deea0a5583538e899883a59d273a0caaaa4aef99", "message": "REST data with Panache guide", "committedDate": "2020-05-20T08:43:17Z", "type": "commit"}, {"oid": "deea0a5583538e899883a59d273a0caaaa4aef99", "url": "https://github.com/quarkusio/quarkus/commit/deea0a5583538e899883a59d273a0caaaa4aef99", "message": "REST data with Panache guide", "committedDate": "2020-05-20T08:43:17Z", "type": "forcePushed"}]}