{"pr_number": 11664, "pr_title": "Enable the implicit cascading delete for Spring data jpa", "pr_createdAt": "2020-08-27T11:37:04Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/11664", "timeline": [{"oid": "e6e77b74ad2ba3f5c7e0c7bc5dcf9391368dddf2", "url": "https://github.com/quarkusio/quarkus/commit/e6e77b74ad2ba3f5c7e0c7bc5dcf9391368dddf2", "message": "fix: enable the implicit cascading delete for Spring data jpa", "committedDate": "2020-08-27T13:15:22Z", "type": "forcePushed"}, {"oid": "31f8d9eb22628186c4fd593c2e3e4caa529a9e3e", "url": "https://github.com/quarkusio/quarkus/commit/31f8d9eb22628186c4fd593c2e3e4caa529a9e3e", "message": "refactor: Check the metamodel for removing by entitiy manager just if cascade mode is required", "committedDate": "2020-08-31T15:58:23Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDMxMzI3OQ==", "url": "https://github.com/quarkusio/quarkus/pull/11664#discussion_r480313279", "bodyText": "Is this enough? Don't you also need to consider associations with cascade delete enabled?", "author": "gavinking", "createdAt": "2020-08-31T18:34:38Z", "path": "extensions/panache/hibernate-orm-panache-common/runtime/src/main/java/io/quarkus/hibernate/orm/panache/common/runtime/AbstractJpaOperations.java", "diffHunk": "@@ -414,7 +420,21 @@ public boolean exists(Class<?> entityClass, String query, Parameters params) {\n     }\n \n     public long deleteAll(Class<?> entityClass) {\n+        Metamodel metamodel = getEntityManager().getMetamodel();\n+        EntityType<?> entity1 = metamodel.entity(entityClass);\n+        Set<Attribute<?, ?>> declaredAttributes = ((EntityTypeImpl) entity1).getDeclaredAttributes();\n+        if (declaredAttributes.stream().filter(attribute -> attribute.getPersistentAttributeType()\n+                .equals(Attribute.PersistentAttributeType.ELEMENT_COLLECTION)).count() > 0) {", "originalCommit": "31f8d9eb22628186c4fd593c2e3e4caa529a9e3e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDMxNTMyOA==", "url": "https://github.com/quarkusio/quarkus/pull/11664#discussion_r480315328", "bodyText": "Unfortunately it looks like JPA doesn\u2019t expose the cascade style so you would need to look at something Hibernate-specific.", "author": "gavinking", "createdAt": "2020-08-31T18:38:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDMxMzI3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE4MTAwNg==", "url": "https://github.com/quarkusio/quarkus/pull/11664#discussion_r482181006", "bodyText": "Yes, effectively. I need to detect the both cases. I will push very soon my code re-factored. Thank you for the proposition.", "author": "aureamunoz", "createdAt": "2020-09-02T15:53:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDMxMzI3OQ=="}], "type": "inlineReview"}, {"oid": "7d50b53cf2e8b84786625db77e5b07f1146e7be9", "url": "https://github.com/quarkusio/quarkus/commit/7d50b53cf2e8b84786625db77e5b07f1146e7be9", "message": "fix: enable the implicit cascading delete for Spring data jpa", "committedDate": "2020-09-02T16:04:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE5MjY0Ng==", "url": "https://github.com/quarkusio/quarkus/pull/11664#discussion_r482192646", "bodyText": "Very minor, but I think you can use anyMatch() here, no?", "author": "gavinking", "createdAt": "2020-09-02T16:11:25Z", "path": "extensions/panache/hibernate-orm-panache-common/runtime/src/main/java/io/quarkus/hibernate/orm/panache/common/runtime/AbstractJpaOperations.java", "diffHunk": "@@ -421,7 +431,43 @@ public boolean exists(Class<?> entityClass, String query, Parameters params) {\n     }\n \n     public long deleteAll(Class<?> entityClass) {\n-        return (long) getEntityManager(entityClass).createQuery(\"DELETE FROM \" + getEntityName(entityClass)).executeUpdate();\n+        //detecting the case where there are cascade-delete associations, and do the the bulk delete query otherwise.\n+        if (deleteOnCascadeDetected(entityClass)) {\n+            int count = 0;\n+            List<?> objects = list(findAll(entityClass));\n+            for (Object entity : objects) {\n+                getEntityManager().remove(entity);\n+                count++;\n+            }\n+            return count;\n+        }\n+        return (long) getEntityManager().createQuery(\"DELETE FROM \" + getEntityName(entityClass)).executeUpdate();\n+\n+    }\n+\n+    /**\n+     * Detects if cascading delete is needed. The delete-cascading is needed when associations with cascade delete enabled\n+     * {@link javax.persistence.OneToMany#cascade()} and also on entities containing a collection of elements\n+     * {@link javax.persistence.ElementCollection}\n+     * \n+     * @param entityClass\n+     * @return true if cascading delete is needed. False otherwise\n+     */\n+    private boolean deleteOnCascadeDetected(Class<?> entityClass) {\n+        Metamodel metamodel = getEntityManager().getMetamodel();\n+        EntityType<?> entity1 = metamodel.entity(entityClass);\n+        Set<Attribute<?, ?>> declaredAttributes = ((EntityTypeImpl) entity1).getDeclaredAttributes();\n+\n+        CascadeStyle[] propertyCascadeStyles = getEntityManager().unwrap(SessionImplementor.class)\n+                .getEntityPersister(entityClass.getName(), null)\n+                .getPropertyCascadeStyles();\n+        boolean doCascade = Arrays.stream(propertyCascadeStyles)\n+                .filter(cascadeStyle -> cascadeStyle.doCascade(CascadingActions.DELETE))\n+                .count() > 0;", "originalCommit": "7d50b53cf2e8b84786625db77e5b07f1146e7be9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc2NDkxMw==", "url": "https://github.com/quarkusio/quarkus/pull/11664#discussion_r482764913", "bodyText": "yes, of course. Indeed, I used firstly the anyMatch but change because I was using another method and forget to use it again after refactor.", "author": "aureamunoz", "createdAt": "2020-09-03T07:28:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE5MjY0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE5OTMyNw==", "url": "https://github.com/quarkusio/quarkus/pull/11664#discussion_r482199327", "bodyText": "You need to at least also detect MANY_TO_MANY here.", "author": "gavinking", "createdAt": "2020-09-02T16:21:51Z", "path": "extensions/panache/hibernate-orm-panache-common/runtime/src/main/java/io/quarkus/hibernate/orm/panache/common/runtime/AbstractJpaOperations.java", "diffHunk": "@@ -421,7 +431,43 @@ public boolean exists(Class<?> entityClass, String query, Parameters params) {\n     }\n \n     public long deleteAll(Class<?> entityClass) {\n-        return (long) getEntityManager(entityClass).createQuery(\"DELETE FROM \" + getEntityName(entityClass)).executeUpdate();\n+        //detecting the case where there are cascade-delete associations, and do the the bulk delete query otherwise.\n+        if (deleteOnCascadeDetected(entityClass)) {\n+            int count = 0;\n+            List<?> objects = list(findAll(entityClass));\n+            for (Object entity : objects) {\n+                getEntityManager().remove(entity);\n+                count++;\n+            }\n+            return count;\n+        }\n+        return (long) getEntityManager().createQuery(\"DELETE FROM \" + getEntityName(entityClass)).executeUpdate();\n+\n+    }\n+\n+    /**\n+     * Detects if cascading delete is needed. The delete-cascading is needed when associations with cascade delete enabled\n+     * {@link javax.persistence.OneToMany#cascade()} and also on entities containing a collection of elements\n+     * {@link javax.persistence.ElementCollection}\n+     * \n+     * @param entityClass\n+     * @return true if cascading delete is needed. False otherwise\n+     */\n+    private boolean deleteOnCascadeDetected(Class<?> entityClass) {\n+        Metamodel metamodel = getEntityManager().getMetamodel();\n+        EntityType<?> entity1 = metamodel.entity(entityClass);\n+        Set<Attribute<?, ?>> declaredAttributes = ((EntityTypeImpl) entity1).getDeclaredAttributes();\n+\n+        CascadeStyle[] propertyCascadeStyles = getEntityManager().unwrap(SessionImplementor.class)\n+                .getEntityPersister(entityClass.getName(), null)\n+                .getPropertyCascadeStyles();\n+        boolean doCascade = Arrays.stream(propertyCascadeStyles)\n+                .filter(cascadeStyle -> cascadeStyle.doCascade(CascadingActions.DELETE))\n+                .count() > 0;\n+        boolean hasElementCollection = declaredAttributes.stream().filter(attribute -> attribute.getPersistentAttributeType()\n+                .equals(Attribute.PersistentAttributeType.ELEMENT_COLLECTION)).count() > 0;", "originalCommit": "7d50b53cf2e8b84786625db77e5b07f1146e7be9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc2OTA5Mg==", "url": "https://github.com/quarkusio/quarkus/pull/11664#discussion_r482769092", "bodyText": "Not sure to understand. I'm not detecting the kind of association (MANY_TO_MANY or ONE_TO_MANY and so on) but if the association has the cascade mode enabled. So the MANY_TO_MANY with cascade enabled will be detected here.\nIn the other hand, when an attribute has @ElementCollection, it is meaningless without the parent entity, so, whenever a parent entity is removed, the children will also be, no?", "author": "aureamunoz", "createdAt": "2020-09-03T07:35:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE5OTMyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIwODI4Mg==", "url": "https://github.com/quarkusio/quarkus/pull/11664#discussion_r485208282", "bodyText": "The thing is that many-to-many associations have the link table that needs to be cleaned up when you delete the current entity, even if you're not cascading the delete to the associated entity (which you wouldn't usually do anyway for a many-to-many).", "author": "gavinking", "createdAt": "2020-09-08T21:33:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE5OTMyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIwODYwOA==", "url": "https://github.com/quarkusio/quarkus/pull/11664#discussion_r485208608", "bodyText": "(So you need to treat many-to-many the same as an element collection.)", "author": "gavinking", "createdAt": "2020-09-08T21:34:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE5OTMyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU4MTE5Ng==", "url": "https://github.com/quarkusio/quarkus/pull/11664#discussion_r488581196", "bodyText": "I have added a test to verify that many-to-many associations are correctly managed and it's ok, the link table is also cleaned up. I've just pushed the code.", "author": "aureamunoz", "createdAt": "2020-09-15T11:09:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE5OTMyNw=="}], "type": "inlineReview"}, {"oid": "cf8d7fad90008d397c664288b3da6ad6f63e3aa9", "url": "https://github.com/quarkusio/quarkus/commit/cf8d7fad90008d397c664288b3da6ad6f63e3aa9", "message": "fix: enable the implicit cascading delete for Spring data jpa", "committedDate": "2020-09-08T12:50:08Z", "type": "forcePushed"}, {"oid": "4e56cf323d599913f83d35b8b439b748f02ac157", "url": "https://github.com/quarkusio/quarkus/commit/4e56cf323d599913f83d35b8b439b748f02ac157", "message": "fix: enable the implicit cascading delete for Spring data jpa\n\ntest: add test for @Many to many association", "committedDate": "2020-09-15T11:07:38Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY2NzkxNw==", "url": "https://github.com/quarkusio/quarkus/pull/11664#discussion_r488667917", "bodyText": "This doesn't seem right TBH", "author": "geoand", "createdAt": "2020-09-15T13:29:55Z", "path": "extensions/panache/hibernate-orm-panache-common/runtime/src/main/java/io/quarkus/hibernate/orm/panache/common/runtime/AbstractJpaOperations.java", "diffHunk": "@@ -421,7 +421,8 @@ public boolean exists(Class<?> entityClass, String query, Parameters params) {\n     }\n \n     public long deleteAll(Class<?> entityClass) {\n-        return (long) getEntityManager(entityClass).createQuery(\"DELETE FROM \" + getEntityName(entityClass)).executeUpdate();\n+        return (long) getEntityManager().createQuery(\"DELETE FROM \" + getEntityName(entityClass)).executeUpdate();", "originalCommit": "4e56cf323d599913f83d35b8b439b748f02ac157", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk1MzYyMQ==", "url": "https://github.com/quarkusio/quarkus/pull/11664#discussion_r488953621", "bodyText": "Weird, I should have done a wrong copy/paste or something. Fixed in the last push", "author": "aureamunoz", "createdAt": "2020-09-15T20:28:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY2NzkxNw=="}], "type": "inlineReview"}, {"oid": "bd72be74ab93bb5d6c6675c00ba6edaba46a5f27", "url": "https://github.com/quarkusio/quarkus/commit/bd72be74ab93bb5d6c6675c00ba6edaba46a5f27", "message": "fix: enable the implicit cascading delete for Spring data jpa\n\ntest: add test for @Many to many association\n\nfix: pass entity class", "committedDate": "2020-09-15T20:27:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk3OTMzOA==", "url": "https://github.com/quarkusio/quarkus/pull/11664#discussion_r488979338", "bodyText": "I still think this needs to be || MANY_TO_MANY", "author": "gavinking", "createdAt": "2020-09-15T21:19:27Z", "path": "extensions/panache/hibernate-orm-panache/runtime/src/main/java/io/quarkus/hibernate/orm/panache/runtime/AdditionalJpaOperations.java", "diffHunk": "@@ -36,4 +47,76 @@\n         JpaOperations.bindParameters(jpaQuery, params);\n         return new CustomCountPanacheQuery(em, jpaQuery, findQuery, countQuery, params);\n     }\n+\n+    public static long deleteAllWithCascade(Class<?> entityClass) {\n+        EntityManager em = JpaOperations.getEntityManager();\n+        //detecting the case where there are cascade-delete associations, and do the the bulk delete query otherwise.\n+        if (deleteOnCascadeDetected(entityClass)) {\n+            int count = 0;\n+            List<?> objects = JpaOperations.listAll(entityClass);\n+            for (Object entity : objects) {\n+                em.remove(entity);\n+                count++;\n+            }\n+            return count;\n+        }\n+        return JpaOperations.deleteAll(entityClass);\n+    }\n+\n+    /**\n+     * Detects if cascading delete is needed. The delete-cascading is needed when associations with cascade delete enabled\n+     * {@link javax.persistence.OneToMany#cascade()} and also on entities containing a collection of elements\n+     * {@link javax.persistence.ElementCollection}\n+     *\n+     * @param entityClass\n+     * @return true if cascading delete is needed. False otherwise\n+     */\n+    private static boolean deleteOnCascadeDetected(Class<?> entityClass) {\n+        EntityManager em = JpaOperations.getEntityManager();\n+        Metamodel metamodel = em.getMetamodel();\n+        EntityType<?> entity1 = metamodel.entity(entityClass);\n+        Set<Attribute<?, ?>> declaredAttributes = ((EntityTypeImpl) entity1).getDeclaredAttributes();\n+\n+        CascadeStyle[] propertyCascadeStyles = em.unwrap(SessionImplementor.class)\n+                .getEntityPersister(entityClass.getName(), null)\n+                .getPropertyCascadeStyles();\n+        boolean doCascade = Arrays.stream(propertyCascadeStyles)\n+                .anyMatch(cascadeStyle -> cascadeStyle.doCascade(CascadingActions.DELETE));\n+        boolean hasElementCollection = declaredAttributes.stream().filter(attribute -> attribute.getPersistentAttributeType()\n+                .equals(Attribute.PersistentAttributeType.ELEMENT_COLLECTION)).count() > 0;", "originalCommit": "bd72be74ab93bb5d6c6675c00ba6edaba46a5f27", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b725d348b13967b1ddd280bbf56582b0a4629ab3", "url": "https://github.com/quarkusio/quarkus/commit/b725d348b13967b1ddd280bbf56582b0a4629ab3", "message": "fix: enable the implicit cascading delete for Spring data jpa\n\ntest: add test for @Many to many association\n\nfix: pass entity class\n\ntest: add and improve tests", "committedDate": "2020-09-22T14:34:41Z", "type": "forcePushed"}, {"oid": "2c28df048d33b70028bc2c2d6d0faebddff3afc8", "url": "https://github.com/quarkusio/quarkus/commit/2c28df048d33b70028bc2c2d6d0faebddff3afc8", "message": "fix: enable the implicit cascading delete for Spring data jpa\n\ntest: add test for @Many to many association\n\nfix: pass entity class\n\ntest: add and improve tests\n\nrefactor: rename table", "committedDate": "2020-09-22T14:56:11Z", "type": "forcePushed"}, {"oid": "dedc3d40467680617bb54f19781b108c9039a958", "url": "https://github.com/quarkusio/quarkus/commit/dedc3d40467680617bb54f19781b108c9039a958", "message": "fix: enable the implicit cascading delete for Spring data jpa\n\ntest: add test for @Many to many association\n\nfix: pass entity class\n\ntest: add and improve tests\n\nrefactor: rename table\n\nrefactor: preparing data for deleting tests", "committedDate": "2020-09-23T14:34:51Z", "type": "forcePushed"}, {"oid": "1bd5675a2a012fd03781ac199afcb2014355bd89", "url": "https://github.com/quarkusio/quarkus/commit/1bd5675a2a012fd03781ac199afcb2014355bd89", "message": "fix: enable the implicit cascading delete for Spring data jpa\n\ntest: add test for @Many to many association\n\nfix: pass entity class\n\ntest: add and improve tests\n\nrefactor: rename table\n\nrefactor: preparing data for deleting tests\n\nrefactor: refactor in tests", "committedDate": "2020-09-25T15:33:41Z", "type": "forcePushed"}, {"oid": "55c2f43b95ca328f9ab7223ff5eb1fe8aec3c1fd", "url": "https://github.com/quarkusio/quarkus/commit/55c2f43b95ca328f9ab7223ff5eb1fe8aec3c1fd", "message": "fix: enable the implicit cascading delete for Spring data jpa\n\ntest: add test for @Many to many association\n\nfix: pass entity class\n\ntest: add and improve tests\n\nrefactor: rename table\n\nrefactor: preparing data for deleting tests\n\nrefactor: refactor in tests\n\nfix: clean up the created data", "committedDate": "2020-09-27T14:50:18Z", "type": "forcePushed"}, {"oid": "0b45b74316214e692b88f51377eda4269eba266b", "url": "https://github.com/quarkusio/quarkus/commit/0b45b74316214e692b88f51377eda4269eba266b", "message": "fix: enable the implicit cascading delete for Spring data jpa\n\ntest: add test for @Many to many association\n\nfix: pass entity class\n\ntest: add and improve tests\n\nrefactor: rename table\n\nrefactor: preparing data for deleting tests\n\nrefactor: refactor in tests\n\nfix: clean up the created data", "committedDate": "2020-09-28T12:00:42Z", "type": "commit"}, {"oid": "0b45b74316214e692b88f51377eda4269eba266b", "url": "https://github.com/quarkusio/quarkus/commit/0b45b74316214e692b88f51377eda4269eba266b", "message": "fix: enable the implicit cascading delete for Spring data jpa\n\ntest: add test for @Many to many association\n\nfix: pass entity class\n\ntest: add and improve tests\n\nrefactor: rename table\n\nrefactor: preparing data for deleting tests\n\nrefactor: refactor in tests\n\nfix: clean up the created data", "committedDate": "2020-09-28T12:00:42Z", "type": "forcePushed"}]}