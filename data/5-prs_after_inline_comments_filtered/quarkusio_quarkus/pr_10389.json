{"pr_number": 10389, "pr_title": "Set owner's permission to execute manage.sh", "pr_createdAt": "2020-07-01T06:53:58Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/10389", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE2NjY4MQ==", "url": "https://github.com/quarkusio/quarkus/pull/10389#discussion_r448166681", "bodyText": "Should the same be done for bootstrap-example.sh which gets created a few lines above this?", "author": "jaikiran", "createdAt": "2020-07-01T07:23:11Z", "path": "extensions/amazon-lambda/common-deployment/src/main/java/io/quarkus/amazon/lambda/deployment/LambdaUtil.java", "diffHunk": "@@ -76,7 +90,7 @@ public static void generateScripts(String handler, OutputTargetBuildItem target)\n         output = copyResource(\"lambda/manage.sh\")\n                 .replace(\"${handler}\", handler)\n                 .replace(\"${lambdaName}\", lambdaName);\n-        writeFile(target, \"manage.sh\", output);\n+        writeExecutableFile(target, \"manage.sh\", output);", "originalCommit": "a8a56a5ea72debabf373de5d50b315deae0b6944", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE3MjMwMQ==", "url": "https://github.com/quarkusio/quarkus/pull/10389#discussion_r448172301", "bodyText": "done", "author": "ejba", "createdAt": "2020-07-01T07:33:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE2NjY4MQ=="}], "type": "inlineReview"}, {"oid": "2902beb0d866cdb47de096d100e1b4d9e435079a", "url": "https://github.com/quarkusio/quarkus/commit/2902beb0d866cdb47de096d100e1b4d9e435079a", "message": "Set owner's permission to execute manage.sh", "committedDate": "2020-07-01T07:33:03Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIyNTU0NA==", "url": "https://github.com/quarkusio/quarkus/pull/10389#discussion_r448225544", "bodyText": "Given the failure on Windows, I think what you will have to do is conditionally set these PosixFilePermissions, something like:\nif (Files.getFileAttributeView(artifact, PosixFilePermission.class) != null) {\n... // setup the permissions\n}", "author": "jaikiran", "createdAt": "2020-07-01T09:08:01Z", "path": "extensions/amazon-lambda/common-deployment/src/main/java/io/quarkus/amazon/lambda/deployment/LambdaUtil.java", "diffHunk": "@@ -50,6 +53,17 @@ public static void writeFile(OutputTargetBuildItem target, String name, String o\n         Files.write(artifact, output.getBytes(StandardCharsets.UTF_8));\n     }\n \n+    public static void writeExecutableFile(OutputTargetBuildItem target, String name, String output) throws IOException {\n+        writeFile(target, name, output);\n+\n+        Path artifact = target.getOutputDirectory().resolve(name);\n+        Set<PosixFilePermission> permissions = new HashSet<>();\n+        permissions.add(PosixFilePermission.OWNER_READ);\n+        permissions.add(PosixFilePermission.OWNER_WRITE);\n+        permissions.add(PosixFilePermission.OWNER_EXECUTE);\n+        Files.setPosixFilePermissions(artifact, permissions);", "originalCommit": "2902beb0d866cdb47de096d100e1b4d9e435079a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIyNzEwMA==", "url": "https://github.com/quarkusio/quarkus/pull/10389#discussion_r448227100", "bodyText": "According with documentation, I could do just this. Tell me what do you think.\n        Path artifact = target.getOutputDirectory().resolve(name);\n        File file = new File(artifact.toString());\n        file.setExecutable(true, true);", "author": "ejba", "createdAt": "2020-07-01T09:10:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIyNTU0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIyOTI5Mw==", "url": "https://github.com/quarkusio/quarkus/pull/10389#discussion_r448229293", "bodyText": "I had forgotten about that one. Yes, that one looks much simpler and more relevant to what we want. One minor nit - instead of new File(artifact.toString()) , you can just do artifact.toFile().setExecutable(true, true);", "author": "jaikiran", "createdAt": "2020-07-01T09:14:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIyNTU0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIzNTMwMQ==", "url": "https://github.com/quarkusio/quarkus/pull/10389#discussion_r448235301", "bodyText": "Done!", "author": "ejba", "createdAt": "2020-07-01T09:25:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIyNTU0NA=="}], "type": "inlineReview"}, {"oid": "53c18a22d120ddc341887f871ccdd287d2d74eb2", "url": "https://github.com/quarkusio/quarkus/commit/53c18a22d120ddc341887f871ccdd287d2d74eb2", "message": "Set owner's permission to execute manage.sh", "committedDate": "2020-07-01T09:24:49Z", "type": "commit"}, {"oid": "53c18a22d120ddc341887f871ccdd287d2d74eb2", "url": "https://github.com/quarkusio/quarkus/commit/53c18a22d120ddc341887f871ccdd287d2d74eb2", "message": "Set owner's permission to execute manage.sh", "committedDate": "2020-07-01T09:24:49Z", "type": "forcePushed"}]}