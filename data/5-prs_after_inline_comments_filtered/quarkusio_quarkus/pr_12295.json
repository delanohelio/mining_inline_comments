{"pr_number": 12295, "pr_title": "Make OIDC CodeAuthenticationMechanism work with the proactive-auth disabled", "pr_createdAt": "2020-09-23T14:55:45Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/12295", "timeline": [{"oid": "85835a80bb531bfef06098e6d2e37fde20a997cc", "url": "https://github.com/quarkusio/quarkus/commit/85835a80bb531bfef06098e6d2e37fde20a997cc", "message": "Make OIDC CodeAuthenticationMechanism work with the proactive-auth disabled", "committedDate": "2020-09-23T15:01:45Z", "type": "forcePushed"}, {"oid": "a8e511130513cc27afbe5b4d776461701b516c9b", "url": "https://github.com/quarkusio/quarkus/commit/a8e511130513cc27afbe5b4d776461701b516c9b", "message": "Make OIDC CodeAuthenticationMechanism work with the proactive-auth disabled", "committedDate": "2020-09-24T16:21:48Z", "type": "forcePushed"}, {"oid": "214c36db507e60ccd30284dd9842ce62f6777675", "url": "https://github.com/quarkusio/quarkus/commit/214c36db507e60ccd30284dd9842ce62f6777675", "message": "Make OIDC CodeAuthenticationMechanism work with the proactive-auth disabled", "committedDate": "2020-09-28T15:58:06Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjM1MzM0MA==", "url": "https://github.com/quarkusio/quarkus/pull/12295#discussion_r496353340", "bodyText": "This feels fragile, as there is no guarantee which exceptions will be first.\nIf you want to prioritise security exceptions I think you need to scan the list first to look for security exceptions that need special handling.", "author": "stuartwdouglas", "createdAt": "2020-09-29T03:14:56Z", "path": "extensions/resteasy/runtime/src/main/java/io/quarkus/resteasy/runtime/CompositeExceptionMapper.java", "diffHunk": "@@ -0,0 +1,32 @@\n+package io.quarkus.resteasy.runtime;\n+\n+import javax.ws.rs.InternalServerErrorException;\n+import javax.ws.rs.core.Context;\n+import javax.ws.rs.core.Response;\n+import javax.ws.rs.ext.ExceptionMapper;\n+import javax.ws.rs.ext.Provider;\n+import javax.ws.rs.ext.Providers;\n+\n+import io.smallrye.mutiny.CompositeException;\n+\n+@Provider\n+public class CompositeExceptionMapper implements ExceptionMapper<CompositeException> {\n+\n+    @Context\n+    Providers p;\n+\n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n+    public Response toResponse(CompositeException ex) {\n+        Throwable t = ex.getCauses().get(0);", "originalCommit": "214c36db507e60ccd30284dd9842ce62f6777675", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY2NzU4Nw==", "url": "https://github.com/quarkusio/quarkus/pull/12295#discussion_r496667587", "bodyText": "Hi @stuartwdouglas, I actually did not plan to do any specific filtering of the security exceptions in this mapper, as it is meant to be a generic mapper which would work for CompositeException.\nAs far as the OIDC exceptions are concerned, it can only be the OIDC-related exception, I've also confirmed it in the debug mode the other day.\nIn some other flows, not even related to OIDC, CompositeException may also happen I guess (example, the user code throws the exception in the Uni exception recovery block), so this mapper will work there too.\nIf we have a case where the user wants a cause at index 1 be mapped then they'd just register their own custom CompositeExceptionMapper mapper.\nI reckon that for Quarkus in general we just need to look at the top cause and review it if there will be a case where it won't be sufficient, for now it seems to be fine.\nDo you agree :-) ?", "author": "sberyozkin", "createdAt": "2020-09-29T12:15:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjM1MzM0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM4NjM1OA==", "url": "https://github.com/quarkusio/quarkus/pull/12295#discussion_r498386358", "bodyText": "@stuartwdouglas I've updated this mapper to check for the 1st non-null cause, but for now I'd still rather prefer it be a generic mapper. Does it work for you ?", "author": "sberyozkin", "createdAt": "2020-10-01T16:52:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjM1MzM0MA=="}], "type": "inlineReview"}, {"oid": "5b5c7f429280c7953b7345e44b3993ab3fdb6d43", "url": "https://github.com/quarkusio/quarkus/commit/5b5c7f429280c7953b7345e44b3993ab3fdb6d43", "message": "Make OIDC CodeAuthenticationMechanism work with the proactive-auth disabled", "committedDate": "2020-09-29T12:03:42Z", "type": "forcePushed"}, {"oid": "8ed1276c34aa5d1c6a27849c898f6cebf9707444", "url": "https://github.com/quarkusio/quarkus/commit/8ed1276c34aa5d1c6a27849c898f6cebf9707444", "message": "Make OIDC CodeAuthenticationMechanism work with the proactive-auth disabled", "committedDate": "2020-10-01T16:50:33Z", "type": "commit"}, {"oid": "8ed1276c34aa5d1c6a27849c898f6cebf9707444", "url": "https://github.com/quarkusio/quarkus/commit/8ed1276c34aa5d1c6a27849c898f6cebf9707444", "message": "Make OIDC CodeAuthenticationMechanism work with the proactive-auth disabled", "committedDate": "2020-10-01T16:50:33Z", "type": "forcePushed"}]}