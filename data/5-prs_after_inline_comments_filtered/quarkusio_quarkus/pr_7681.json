{"pr_number": 7681, "pr_title": "Command mode support", "pr_createdAt": "2020-03-09T05:10:40Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/7681", "timeline": [{"oid": "980a43c10f6c6edd0388cc6558a32c9a2fee9f99", "url": "https://github.com/quarkusio/quarkus/commit/980a43c10f6c6edd0388cc6558a32c9a2fee9f99", "message": "Command mode support", "committedDate": "2020-03-09T07:59:12Z", "type": "forcePushed"}, {"oid": "84b9f0f4275b1a09a63c4dacdd34163e44937dcb", "url": "https://github.com/quarkusio/quarkus/commit/84b9f0f4275b1a09a63c4dacdd34163e44937dcb", "message": "Command mode support", "committedDate": "2020-03-10T00:59:30Z", "type": "forcePushed"}, {"oid": "cbc10d7756a810578c9ab93bfee485a50f9a9289", "url": "https://github.com/quarkusio/quarkus/commit/cbc10d7756a810578c9ab93bfee485a50f9a9289", "message": "Command mode support", "committedDate": "2020-03-10T03:13:35Z", "type": "forcePushed"}, {"oid": "34158357516d1d8845474743561f4d23b5eb605e", "url": "https://github.com/quarkusio/quarkus/commit/34158357516d1d8845474743561f4d23b5eb605e", "message": "Command mode support", "committedDate": "2020-03-10T06:03:45Z", "type": "forcePushed"}, {"oid": "62e90e0ba7d41add4981f8d1699ec2a85d5479ef", "url": "https://github.com/quarkusio/quarkus/commit/62e90e0ba7d41add4981f8d1699ec2a85d5479ef", "message": "Command mode support", "committedDate": "2020-03-10T09:09:40Z", "type": "forcePushed"}, {"oid": "7ac00c3d30b6c51d9d8f59aea7c2c48190bb7182", "url": "https://github.com/quarkusio/quarkus/commit/7ac00c3d30b6c51d9d8f59aea7c2c48190bb7182", "message": "Command mode support", "committedDate": "2020-03-13T00:58:09Z", "type": "forcePushed"}, {"oid": "fb75cc58f2a0f9fb64f07069e9834d1c69b0eeca", "url": "https://github.com/quarkusio/quarkus/commit/fb75cc58f2a0f9fb64f07069e9834d1c69b0eeca", "message": "Command mode support", "committedDate": "2020-03-13T03:17:30Z", "type": "forcePushed"}, {"oid": "8adf3ea90bcc1c6b92f9626e1200053fbd136e28", "url": "https://github.com/quarkusio/quarkus/commit/8adf3ea90bcc1c6b92f9626e1200053fbd136e28", "message": "Command mode support", "committedDate": "2020-03-13T03:30:25Z", "type": "forcePushed"}, {"oid": "cb6a77ee3ac880baaf5d78abc9031026dc2963f1", "url": "https://github.com/quarkusio/quarkus/commit/cb6a77ee3ac880baaf5d78abc9031026dc2963f1", "message": "Command mode support", "committedDate": "2020-03-16T00:09:52Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg2NzQ5OA==", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r392867498", "bodyText": "good enough to start, but I reckon just doing a recursive search for nearest pom.xml/build.gradle and resolve source paths from there (still just via filesystem not parsing the build files) could make this a bit less hacky.", "author": "maxandersen", "createdAt": "2020-03-16T09:00:31Z", "path": "core/deployment/src/main/java/io/quarkus/deployment/dev/LauncherMain.java", "diffHunk": "@@ -0,0 +1,38 @@\n+package io.quarkus.deployment.dev;\n+\n+import java.io.File;\n+import java.net.URL;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.Collections;\n+\n+import org.eclipse.microprofile.config.spi.ConfigProviderResolver;\n+\n+import io.smallrye.config.SmallRyeConfigProviderResolver;\n+\n+/**\n+ * The entry point when launched from an IDE\n+ */\n+public class LauncherMain {\n+\n+    public static void main(Path appClasses, Path wiring, URL[] classPath, String... args) throws Exception {\n+        DevModeContext context = new DevModeContext();\n+        context.setAbortOnFailedStart(true);\n+        context.setTest(false);\n+        context.setCacheDir(Files.createTempDirectory(\"quarkus-cache\").toFile());\n+        context.setSourceEncoding(\"UTF-8\");\n+        File appClassesFile = appClasses.toFile();\n+        context.getClassesRoots().add(appClassesFile);\n+\n+        //TODO: huge hacks\n+        File src = new File(appClassesFile, \"../../src/main/java\");", "originalCommit": "cb6a77ee3ac880baaf5d78abc9031026dc2963f1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQxMjgyMw==", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r398412823", "bodyText": "Also this would fail on windows because of the delimiters, or?", "author": "mkouba", "createdAt": "2020-03-26T09:05:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg2NzQ5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0NjAxNA==", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r398446014", "bodyText": "Forward slash is also a delimiter on windows.", "author": "stuartwdouglas", "createdAt": "2020-03-26T09:57:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg2NzQ5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ1MDk4MQ==", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r398450981", "bodyText": "That's good to know, I always thought it's only \\ on windows... ;-)", "author": "mkouba", "createdAt": "2020-03-26T10:05:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg2NzQ5OA=="}], "type": "inlineReview"}, {"oid": "1815bbbd115158391b8b9a5124af6281579b353b", "url": "https://github.com/quarkusio/quarkus/commit/1815bbbd115158391b8b9a5124af6281579b353b", "message": "Command mode support", "committedDate": "2020-03-18T02:14:42Z", "type": "forcePushed"}, {"oid": "f33beaddaf49dd4e303a27875e6d5053e03489dc", "url": "https://github.com/quarkusio/quarkus/commit/f33beaddaf49dd4e303a27875e6d5053e03489dc", "message": "Command mode support", "committedDate": "2020-03-24T01:10:19Z", "type": "forcePushed"}, {"oid": "3be0ffd5b8da9033b6248b4ca0addd6498d285cd", "url": "https://github.com/quarkusio/quarkus/commit/3be0ffd5b8da9033b6248b4ca0addd6498d285cd", "message": "Command mode support", "committedDate": "2020-03-26T02:09:10Z", "type": "forcePushed"}, {"oid": "f02605c33256310638b3955a458c05dd91d1a8c7", "url": "https://github.com/quarkusio/quarkus/commit/f02605c33256310638b3955a458c05dd91d1a8c7", "message": "Command mode support", "committedDate": "2020-03-26T03:04:57Z", "type": "forcePushed"}, {"oid": "1f49de4ba20b2c759ca86c991590116cdd0cdef0", "url": "https://github.com/quarkusio/quarkus/commit/1f49de4ba20b2c759ca86c991590116cdd0cdef0", "message": "Command mode support", "committedDate": "2020-03-26T03:35:43Z", "type": "forcePushed"}, {"oid": "43f1b718deebd3a35c0ec54d49d9cc4ba564591b", "url": "https://github.com/quarkusio/quarkus/commit/43f1b718deebd3a35c0ec54d49d9cc4ba564591b", "message": "Use Gradle ExecAction to support reading from System.in", "committedDate": "2020-03-29T00:03:13Z", "type": "forcePushed"}, {"oid": "8282463aee9aee5df94e0c012967e5944e419016", "url": "https://github.com/quarkusio/quarkus/commit/8282463aee9aee5df94e0c012967e5944e419016", "message": "Use Gradle ExecAction to support reading from System.in", "committedDate": "2020-03-29T00:05:35Z", "type": "forcePushed"}, {"oid": "95182a76ae0712ecde6fa0a371ead5291485b52f", "url": "https://github.com/quarkusio/quarkus/commit/95182a76ae0712ecde6fa0a371ead5291485b52f", "message": "Use Gradle ExecAction to support reading from System.in", "committedDate": "2020-03-29T00:24:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTczMzU0MA==", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r399733540", "bodyText": "Looks like this is no longer true?", "author": "gastaldi", "createdAt": "2020-03-29T02:07:06Z", "path": "core/runtime/src/main/java/io/quarkus/runtime/annotations/QuarkusMain.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package io.quarkus.runtime.annotations;\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+/**\n+ * The default main class of a Quarkus application. This annotation can appear\n+ * at most once in a Quarkus application.", "originalCommit": "95182a76ae0712ecde6fa0a371ead5291485b52f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8fec7103c7c068fa08edb830524c43685d103413", "url": "https://github.com/quarkusio/quarkus/commit/8fec7103c7c068fa08edb830524c43685d103413", "message": "Use Gradle ExecAction to support reading from System.in", "committedDate": "2020-03-29T23:32:19Z", "type": "forcePushed"}, {"oid": "06e710c606cb608f8ba0fd7de34dffaf21857a1b", "url": "https://github.com/quarkusio/quarkus/commit/06e710c606cb608f8ba0fd7de34dffaf21857a1b", "message": "Use Gradle ExecAction to support reading from System.in", "committedDate": "2020-03-30T01:32:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMzMDQzMA==", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r400330430", "bodyText": "Maybe you could add a comment about this proxy magic? It's not the typical build item.", "author": "gsmet", "createdAt": "2020-03-30T16:32:30Z", "path": "core/deployment/src/main/java/io/quarkus/deployment/builditem/RawCommandLineArgumentsBuildItem.java", "diffHunk": "@@ -0,0 +1,31 @@\n+package io.quarkus.deployment.builditem;\n+\n+import java.util.function.Supplier;\n+\n+import io.quarkus.builder.item.SimpleBuildItem;\n+import io.quarkus.deployment.recording.BytecodeRecorderImpl;\n+import io.quarkus.runtime.StartupContext;\n+\n+/**\n+ * A build item that represents the raw command line arguments as they were passed to the application.\n+ *\n+ * No filtering is done on these parameters.", "originalCommit": "06e710c606cb608f8ba0fd7de34dffaf21857a1b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMzMTc0MA==", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r400331740", "bodyText": "Shouldn't we have a proper logger? Or it's too low level?", "author": "gsmet", "createdAt": "2020-03-30T16:34:25Z", "path": "core/deployment/src/main/java/io/quarkus/deployment/dev/IsolatedDevModeMain.java", "diffHunk": "@@ -57,7 +60,31 @@ private synchronized void firstStart() {\n             //ok, we have resolved all the deps\n             try {\n                 StartupAction start = augmentAction.createInitialRuntimeApplication();\n-                runner = start.run();\n+                //this is a bit yuck, but we need replace the default\n+                //exit handler in the runtime class loader\n+                //TODO: look at implementing a common core classloader, that removes the need for this sort of crappy hack\n+                curatedApplication.getBaseRuntimeClassLoader().loadClass(ApplicationLifecycleManager.class.getName())\n+                        .getMethod(\"setDefaultExitCodeHandler\", Consumer.class)\n+                        .invoke(null, new Consumer<Integer>() {\n+                            @Override\n+                            public void accept(Integer integer) {\n+                                if (restarting || ApplicationLifecycleManager.isVmShuttingDown()\n+                                        || context.isAbortOnFailedStart()) {\n+                                    return;\n+                                }\n+                                System.out.println(\"Quarkus application exited with code \" + integer);\n+                                System.out.println(\"Press Enter to restart\");\n+                                try {\n+                                    while (System.in.read() != '\\n') {\n+                                    }\n+                                    runtimeUpdatesProcessor.checkForChangedClasses();\n+                                    restartApp(runtimeUpdatesProcessor.checkForFileChange());\n+                                } catch (Exception e) {\n+                                    e.printStackTrace();", "originalCommit": "06e710c606cb608f8ba0fd7de34dffaf21857a1b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMzMjI1MA==", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r400332250", "bodyText": "Shouldn't this be done only in command mode? Or this class is only used for command mode?", "author": "gsmet", "createdAt": "2020-03-30T16:35:12Z", "path": "core/deployment/src/main/java/io/quarkus/deployment/dev/IsolatedDevModeMain.java", "diffHunk": "@@ -57,7 +60,31 @@ private synchronized void firstStart() {\n             //ok, we have resolved all the deps\n             try {\n                 StartupAction start = augmentAction.createInitialRuntimeApplication();\n-                runner = start.run();\n+                //this is a bit yuck, but we need replace the default\n+                //exit handler in the runtime class loader\n+                //TODO: look at implementing a common core classloader, that removes the need for this sort of crappy hack\n+                curatedApplication.getBaseRuntimeClassLoader().loadClass(ApplicationLifecycleManager.class.getName())", "originalCommit": "06e710c606cb608f8ba0fd7de34dffaf21857a1b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU4MjMyMA==", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r400582320", "bodyText": "This is installed every time. For a normal hot reload the 'restarting' flag will be true, so nothing will happen.\nIf on the other hand something has called asyncExit or it is a command mode app and main has returned you get the option to press enter to re-run.", "author": "stuartwdouglas", "createdAt": "2020-03-31T01:01:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMzMjI1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMzMzA5MQ==", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r400333091", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    //the loading of this is super wierd, and does its own class loader delegation for some reason\n          \n          \n            \n                    //the loading of this is super weird, and does its own class loader delegation for some reason", "author": "gsmet", "createdAt": "2020-03-30T16:36:30Z", "path": "core/deployment/src/main/java/io/quarkus/deployment/dev/LauncherMain.java", "diffHunk": "@@ -0,0 +1,38 @@\n+package io.quarkus.deployment.dev;\n+\n+import java.io.File;\n+import java.net.URL;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.Collections;\n+\n+import org.eclipse.microprofile.config.spi.ConfigProviderResolver;\n+\n+import io.smallrye.config.SmallRyeConfigProviderResolver;\n+\n+/**\n+ * The entry point when launched from an IDE\n+ */\n+public class LauncherMain {\n+\n+    public static void main(Path appClasses, Path wiring, URL[] classPath, String... args) throws Exception {\n+        DevModeContext context = new DevModeContext();\n+        context.setAbortOnFailedStart(true);\n+        context.setTest(false);\n+        context.setCacheDir(Files.createTempDirectory(\"quarkus-cache\").toFile());\n+        context.setSourceEncoding(\"UTF-8\");\n+        File appClassesFile = appClasses.toFile();\n+        context.getClassesRoots().add(appClassesFile);\n+\n+        //TODO: huge hacks\n+        File src = new File(appClassesFile, \"../../src/main/java\");\n+        File res = new File(appClassesFile, \"../../src/main/resources\");\n+\n+        context.getModules().add(new DevModeContext.ModuleInfo(\"main\", new File(\"\").getAbsolutePath(),\n+                Collections.singleton(src.getAbsolutePath()), appClassesFile.getAbsolutePath(), res.getAbsolutePath()));\n+        //the loading of this is super wierd, and does its own class loader delegation for some reason", "originalCommit": "06e710c606cb608f8ba0fd7de34dffaf21857a1b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMzNjEyMQ==", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r400336121", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * This class makes not attempt to verify that an application is starting/stopping when the\n          \n          \n            \n             * This class makes no attempt to verify that an application is starting/stopping when the", "author": "gsmet", "createdAt": "2020-03-30T16:40:51Z", "path": "core/devmode-spi/src/main/java/io/quarkus/dev/appstate/ApplicationStateNotification.java", "diffHunk": "@@ -0,0 +1,52 @@\n+package io.quarkus.dev.appstate;\n+\n+/**\n+ * A class that allows for access to the application state, even from outside the runtime class loader.\n+ *\n+ * This should generally only be used by dev mode internals that need information about the current\n+ * application state.\n+ *\n+ * This class makes not attempt to verify that an application is starting/stopping when the", "originalCommit": "06e710c606cb608f8ba0fd7de34dffaf21857a1b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMzNjcyMw==", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r400336723", "bodyText": "Shouldn't it be sp here?", "author": "gsmet", "createdAt": "2020-03-30T16:41:49Z", "path": "core/devmode-spi/src/main/java/io/quarkus/dev/appstate/ApplicationStateNotification.java", "diffHunk": "@@ -0,0 +1,52 @@\n+package io.quarkus.dev.appstate;\n+\n+/**\n+ * A class that allows for access to the application state, even from outside the runtime class loader.\n+ *\n+ * This should generally only be used by dev mode internals that need information about the current\n+ * application state.\n+ *\n+ * This class makes not attempt to verify that an application is starting/stopping when the\n+ * wait methods are called, this should only be called by a client that is controlling the Quarkus\n+ * lifecycle, and so knows what the current lifecycle state is.\n+ */\n+public class ApplicationStateNotification {\n+\n+    private static boolean started = false;\n+    private static Throwable startupProblem;\n+\n+    public static synchronized void notifyStartupComplete(Throwable sp) {\n+        started = startupProblem == null;", "originalCommit": "06e710c606cb608f8ba0fd7de34dffaf21857a1b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMzNzM5Nw==", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r400337397", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * The launcher module has all it's dependencies shaded, so it is effectively self contained. This allows deployment time\n          \n          \n            \n             * The launcher module has all its dependencies shaded, so it is effectively self contained. This allows deployment time", "author": "gsmet", "createdAt": "2020-03-30T16:42:46Z", "path": "core/launcher/src/main/java/io/quarkus/launcher/QuarkusLauncher.java", "diffHunk": "@@ -0,0 +1,50 @@\n+package io.quarkus.launcher;\n+\n+import java.net.URL;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.function.Consumer;\n+\n+import io.quarkus.bootstrap.app.CuratedApplication;\n+import io.quarkus.bootstrap.app.QuarkusBootstrap;\n+\n+/**\n+ * IDE entry point.\n+ * <p>\n+ * This has a number of hacks to make it work, and is always going to be a bit fragile, as it is hard to make something\n+ * that will work 100% of the time as we just don't have enough information.\n+ * <p>\n+ * The launcher module has all it's dependencies shaded, so it is effectively self contained. This allows deployment time", "originalCommit": "06e710c606cb608f8ba0fd7de34dffaf21857a1b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMzODI4Nw==", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r400338287", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * but nothing else. This class can be used to run both persistent application that will run\n          \n          \n            \n             * but nothing else. This class can be used to run both persistent applications that will run", "author": "gsmet", "createdAt": "2020-03-30T16:44:02Z", "path": "core/runtime/src/main/java/io/quarkus/runtime/ApplicationLifecycleManager.java", "diffHunk": "@@ -0,0 +1,308 @@\n+package io.quarkus.runtime;\n+\n+import java.util.Objects;\n+import java.util.Set;\n+import java.util.concurrent.locks.Condition;\n+import java.util.concurrent.locks.Lock;\n+import java.util.function.Consumer;\n+\n+import javax.enterprise.context.spi.CreationalContext;\n+import javax.enterprise.inject.Any;\n+import javax.enterprise.inject.spi.Bean;\n+import javax.enterprise.inject.spi.CDI;\n+\n+import org.graalvm.nativeimage.ImageInfo;\n+import org.jboss.logging.Logger;\n+import org.wildfly.common.lock.Locks;\n+\n+import com.oracle.svm.core.OS;\n+\n+import io.quarkus.runtime.graal.DiagnosticPrinter;\n+import sun.misc.Signal;\n+import sun.misc.SignalHandler;\n+\n+/**\n+ * Manages the lifecycle of a Quarkus application.\n+ *\n+ * The {@link Application} class is responsible for starting and stopping the application,\n+ * but nothing else. This class can be used to run both persistent application that will run", "originalCommit": "06e710c606cb608f8ba0fd7de34dffaf21857a1b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMzODQ5Mw==", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r400338493", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * returns. This class registers a shutdown hook to properly shut down the application, and handled\n          \n          \n            \n             * returns. This class registers a shutdown hook to properly shut down the application, and handle", "author": "gsmet", "createdAt": "2020-03-30T16:44:20Z", "path": "core/runtime/src/main/java/io/quarkus/runtime/ApplicationLifecycleManager.java", "diffHunk": "@@ -0,0 +1,308 @@\n+package io.quarkus.runtime;\n+\n+import java.util.Objects;\n+import java.util.Set;\n+import java.util.concurrent.locks.Condition;\n+import java.util.concurrent.locks.Lock;\n+import java.util.function.Consumer;\n+\n+import javax.enterprise.context.spi.CreationalContext;\n+import javax.enterprise.inject.Any;\n+import javax.enterprise.inject.spi.Bean;\n+import javax.enterprise.inject.spi.CDI;\n+\n+import org.graalvm.nativeimage.ImageInfo;\n+import org.jboss.logging.Logger;\n+import org.wildfly.common.lock.Locks;\n+\n+import com.oracle.svm.core.OS;\n+\n+import io.quarkus.runtime.graal.DiagnosticPrinter;\n+import sun.misc.Signal;\n+import sun.misc.SignalHandler;\n+\n+/**\n+ * Manages the lifecycle of a Quarkus application.\n+ *\n+ * The {@link Application} class is responsible for starting and stopping the application,\n+ * but nothing else. This class can be used to run both persistent application that will run\n+ * till they receive a signal, and command mode applications that will run until the main method\n+ * returns. This class registers a shutdown hook to properly shut down the application, and handled", "originalCommit": "06e710c606cb608f8ba0fd7de34dffaf21857a1b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMzODY1Ng==", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r400338656", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * This class is static, there can only every be a single application instance running at any time.\n          \n          \n            \n             * This class is static, there can only ever be a single application instance running at any time.", "author": "gsmet", "createdAt": "2020-03-30T16:44:37Z", "path": "core/runtime/src/main/java/io/quarkus/runtime/ApplicationLifecycleManager.java", "diffHunk": "@@ -0,0 +1,308 @@\n+package io.quarkus.runtime;\n+\n+import java.util.Objects;\n+import java.util.Set;\n+import java.util.concurrent.locks.Condition;\n+import java.util.concurrent.locks.Lock;\n+import java.util.function.Consumer;\n+\n+import javax.enterprise.context.spi.CreationalContext;\n+import javax.enterprise.inject.Any;\n+import javax.enterprise.inject.spi.Bean;\n+import javax.enterprise.inject.spi.CDI;\n+\n+import org.graalvm.nativeimage.ImageInfo;\n+import org.jboss.logging.Logger;\n+import org.wildfly.common.lock.Locks;\n+\n+import com.oracle.svm.core.OS;\n+\n+import io.quarkus.runtime.graal.DiagnosticPrinter;\n+import sun.misc.Signal;\n+import sun.misc.SignalHandler;\n+\n+/**\n+ * Manages the lifecycle of a Quarkus application.\n+ *\n+ * The {@link Application} class is responsible for starting and stopping the application,\n+ * but nothing else. This class can be used to run both persistent application that will run\n+ * till they receive a signal, and command mode applications that will run until the main method\n+ * returns. This class registers a shutdown hook to properly shut down the application, and handled\n+ * exiting with the supplied exit code.\n+ *\n+ * This class should be used to run production and dev mode applications, while test use cases will\n+ * likely want to just use {@link Application} directly.\n+ *\n+ * This class is static, there can only every be a single application instance running at any time.", "originalCommit": "06e710c606cb608f8ba0fd7de34dffaf21857a1b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMzOTQ2Mw==", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r400339463", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * If an application does not want to immediatly shut down then {@link #waitForExit()} should be called, which\n          \n          \n            \n             * If an application does not want to immediately shut down then {@link #waitForExit()} should be called, which", "author": "gsmet", "createdAt": "2020-03-30T16:45:48Z", "path": "core/runtime/src/main/java/io/quarkus/runtime/Quarkus.java", "diffHunk": "@@ -0,0 +1,170 @@\n+package io.quarkus.runtime;\n+\n+import java.util.function.Consumer;\n+\n+import org.jboss.logging.Logger;\n+import org.jboss.logmanager.LogManager;\n+\n+import io.quarkus.launcher.QuarkusLauncher;\n+\n+/**\n+ * The entry point for applications that use a main method. Quarkus will shut down when the main method returns.\n+ * \n+ * If this application has already been generated then it will be run directly, otherwise it will be launched\n+ * in dev mode and augmentation will be done automatically.\n+ *\n+ * If an application does not want to immediatly shut down then {@link #waitForExit()} should be called, which", "originalCommit": "06e710c606cb608f8ba0fd7de34dffaf21857a1b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM0MDQ0NA==", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r400340444", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * the application. Note that Quarkus will not be started when this is method is called,\n          \n          \n            \n             * the application. Note that Quarkus will not be started when this method is called,", "author": "gsmet", "createdAt": "2020-03-30T16:47:19Z", "path": "core/runtime/src/main/java/io/quarkus/runtime/annotations/QuarkusMain.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package io.quarkus.runtime.annotations;\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+/**\n+ * The default main class of a Quarkus application.\n+ * \n+ * There are two different ways this annotation can be used. The first is to place it\n+ * on a class with a Java main method. This main method will be the default entry point of\n+ * the application. Note that Quarkus will not be started when this is method is called,", "originalCommit": "06e710c606cb608f8ba0fd7de34dffaf21857a1b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM0Njc0Nw==", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r400346747", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * If this is true then the quarkus application is expected to exit immediately (i.e. is a command mode app)\n          \n          \n            \n                 * If this is true then the Quarkus application is expected to exit immediately (i.e. is a command mode app)", "author": "gsmet", "createdAt": "2020-03-30T16:56:44Z", "path": "test-framework/junit5-internal/src/main/java/io/quarkus/test/QuarkusProdModeTest.java", "diffHunk": "@@ -173,6 +176,29 @@ public QuarkusProdModeTest setForcedDependencies(List<AppArtifact> forcedDepende\n         return this;\n     }\n \n+    /**\n+     * If this is true then the quarkus application is expected to exit immediately (i.e. is a command mode app)", "originalCommit": "06e710c606cb608f8ba0fd7de34dffaf21857a1b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM0ODEyOA==", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r400348128", "bodyText": "This should probably be renamed given you renamed the annotation.", "author": "gsmet", "createdAt": "2020-03-30T16:58:46Z", "path": "core/deployment/src/main/java/io/quarkus/deployment/steps/MainClassBuildStep.java", "diffHunk": "@@ -216,31 +234,86 @@ MainClassBuildItem build(List<StaticBytecodeRecorderBuildItem> staticInitTasks,\n         mv.invokeVirtualMethod(ofMethod(StartupContext.class, \"close\", void.class), startupContext);\n         mv.returnValue(null);\n \n+        // getName method\n+        mv = file.getMethodCreator(\"getName\", String.class);\n+        mv.returnValue(mv.load(applicationInfo.getName()));\n+\n         // Finish application class\n         file.close();\n+    }\n \n-        // Main class\n-\n-        file = new ClassCreator(gizmoOutput, MAIN_CLASS, null,\n-                Object.class.getName());\n-\n-        mv = file.getMethodCreator(\"main\", void.class, String[].class);\n-        mv.setModifiers(Modifier.PUBLIC | Modifier.STATIC);\n-\n-        final ResultHandle appClassInstance = mv.newInstance(ofConstructor(APP_CLASS));\n-\n-        // Set the application name\n-        mv.invokeVirtualMethod(ofMethod(Application.class, \"setName\", void.class, String.class), appClassInstance,\n-                mv.load(applicationInfo.getName()));\n-\n-        // run the app\n-        mv.invokeVirtualMethod(ofMethod(Application.class, \"run\", void.class, String[].class), appClassInstance,\n-                mv.getMethodParam(0));\n+    @BuildStep\n+    public MainClassBuildItem mainClassBuildStep(BuildProducer<GeneratedClassBuildItem> generatedClass,\n+            ApplicationArchivesBuildItem applicationArchivesBuildItem,\n+            CombinedIndexBuildItem combinedIndexBuildItem,\n+            PackageConfig packageConfig) {\n+        String mainClassName = MAIN_CLASS;\n+        Map<String, String> quarkusMainAnnotations = new HashMap<>();\n+        Collection<AnnotationInstance> defaultMains = combinedIndexBuildItem.getIndex()", "originalCommit": "06e710c606cb608f8ba0fd7de34dffaf21857a1b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "cd8c2c841ac24da47b9e053e5950f69aa793eb18", "url": "https://github.com/quarkusio/quarkus/commit/cd8c2c841ac24da47b9e053e5950f69aa793eb18", "message": "Use Gradle ExecAction to support reading from System.in", "committedDate": "2020-03-31T01:05:18Z", "type": "forcePushed"}, {"oid": "a8e35361071e42ac9f80c940be0b143701ad3dd4", "url": "https://github.com/quarkusio/quarkus/commit/a8e35361071e42ac9f80c940be0b143701ad3dd4", "message": "Fix issue with application state notification", "committedDate": "2020-03-31T05:18:42Z", "type": "forcePushed"}, {"oid": "afeebe073770d82ab63bbf95f9c149a914f83b3b", "url": "https://github.com/quarkusio/quarkus/commit/afeebe073770d82ab63bbf95f9c149a914f83b3b", "message": "Fix issue with application state notification", "committedDate": "2020-03-31T05:46:06Z", "type": "forcePushed"}, {"oid": "f941994bd32aa6b7d6a2899885e6f5680d4fbf57", "url": "https://github.com/quarkusio/quarkus/commit/f941994bd32aa6b7d6a2899885e6f5680d4fbf57", "message": "Fix issue with application state notification", "committedDate": "2020-03-31T05:53:05Z", "type": "forcePushed"}, {"oid": "07de0134e2a05dbea7f1b34bbeb8b6e81f46f487", "url": "https://github.com/quarkusio/quarkus/commit/07de0134e2a05dbea7f1b34bbeb8b6e81f46f487", "message": "Fix issue with application state notification", "committedDate": "2020-03-31T11:21:23Z", "type": "forcePushed"}, {"oid": "49e01a84c1f82c60a70760162196d32430ef307f", "url": "https://github.com/quarkusio/quarkus/commit/49e01a84c1f82c60a70760162196d32430ef307f", "message": "Fix issue with application state notification", "committedDate": "2020-04-02T02:54:25Z", "type": "forcePushed"}, {"oid": "7d75431ceecbb1465a3b41442af49d6b9b92837b", "url": "https://github.com/quarkusio/quarkus/commit/7d75431ceecbb1465a3b41442af49d6b9b92837b", "message": "Command mode support", "committedDate": "2020-04-06T01:18:10Z", "type": "commit"}, {"oid": "dc3d0da44e48705ff944d2b41c051a26947d1f56", "url": "https://github.com/quarkusio/quarkus/commit/dc3d0da44e48705ff944d2b41c051a26947d1f56", "message": "Use Gradle ExecAction to support reading from System.in", "committedDate": "2020-04-06T01:18:10Z", "type": "commit"}, {"oid": "2f35d434695dc6eefbaed3da49efec132594b0d8", "url": "https://github.com/quarkusio/quarkus/commit/2f35d434695dc6eefbaed3da49efec132594b0d8", "message": "Fix issue with application state notification", "committedDate": "2020-04-06T01:18:10Z", "type": "commit"}, {"oid": "2f35d434695dc6eefbaed3da49efec132594b0d8", "url": "https://github.com/quarkusio/quarkus/commit/2f35d434695dc6eefbaed3da49efec132594b0d8", "message": "Fix issue with application state notification", "committedDate": "2020-04-06T01:18:10Z", "type": "forcePushed"}]}