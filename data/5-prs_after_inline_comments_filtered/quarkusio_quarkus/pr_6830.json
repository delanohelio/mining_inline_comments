{"pr_number": 6830, "pr_title": "Throw a DefinitionException when non-producer method is annotated with a stereotype", "pr_createdAt": "2020-01-28T14:02:02Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/6830", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgyMDU5MQ==", "url": "https://github.com/quarkusio/quarkus/pull/6830#discussion_r371820591", "bodyText": "I don't think that we need to store this map in a field. It could be just a local variable inside the findBeans() method. WDYT?", "author": "mkouba", "createdAt": "2020-01-28T14:05:57Z", "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/BeanDeployment.java", "diffHunk": "@@ -64,6 +64,9 @@\n \n     private final Map<DotName, StereotypeInfo> stereotypes;\n \n+    // excluding additional BeanDefiningAnnotations\n+    private final Map<DotName, StereotypeInfo> realStereotypes;", "originalCommit": "7bb7491b485f3ae99cb97e3bf08bb2595b78da64", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE5MzA0OA==", "url": "https://github.com/quarkusio/quarkus/pull/6830#discussion_r372193048", "bodyText": "Yeah I wasn't quite sure, then I thought it might be useful in some other methods potentially in the future. But maybe not. I'll turn it into a local variable for now", "author": "jmartisk", "createdAt": "2020-01-29T05:22:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgyMDU5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgyMTY5Mg==", "url": "https://github.com/quarkusio/quarkus/pull/6830#discussion_r371821692", "bodyText": "I'd move this logic here: https://github.com/quarkusio/quarkus/blob/master/independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/BeanDeployment.java#L660 (to verify the inherited methods as well).", "author": "mkouba", "createdAt": "2020-01-28T14:07:52Z", "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/BeanDeployment.java", "diffHunk": "@@ -638,9 +644,21 @@ static ScopeInfo getValidScope(Collection<ScopeInfo> stereotypeScopes, Annotatio\n                                 beanClass);\n                         beanClasses.add(beanClass);\n                     }\n-                } else if (annotationStore.hasAnnotation(method, DotNames.DISPOSES)) {\n-                    // Disposers are not inherited\n-                    disposerMethods.add(method);\n+                } else {\n+                    // Verify that non-producer methods are not annotated with stereotypes\n+                    // only account for 'real' stereotypes that are not additional BeanDefiningAnnotations\n+                    for (AnnotationInstance i : annotationStore.getAnnotations(method)) {", "originalCommit": "7bb7491b485f3ae99cb97e3bf08bb2595b78da64", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d51947b4e2628442db8c9ee3a1106f16cdb39dd1", "url": "https://github.com/quarkusio/quarkus/commit/d51947b4e2628442db8c9ee3a1106f16cdb39dd1", "message": "Throw a DefinitionException when non-producer method/field is annotated with a stereotype", "committedDate": "2020-01-29T05:47:51Z", "type": "forcePushed"}, {"oid": "5b5fed06709b5cd960f2007fd32d2c06169b24ce", "url": "https://github.com/quarkusio/quarkus/commit/5b5fed06709b5cd960f2007fd32d2c06169b24ce", "message": "Throw a DefinitionException when non-producer method/field is annotated with a stereotype", "committedDate": "2020-01-30T07:27:01Z", "type": "forcePushed"}, {"oid": "a58742be620b3cbd04dee6f34a1dfc5f75aee1a5", "url": "https://github.com/quarkusio/quarkus/commit/a58742be620b3cbd04dee6f34a1dfc5f75aee1a5", "message": "Throw a DefinitionException when non-producer method/field is annotated with a stereotype", "committedDate": "2020-02-03T09:46:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTEyNTI0MA==", "url": "https://github.com/quarkusio/quarkus/pull/6830#discussion_r375125240", "bodyText": "I think that we should also verify that a stereotype can be declared on a producer method/field...", "author": "mkouba", "createdAt": "2020-02-05T08:51:50Z", "path": "independent-projects/arc/tests/src/test/java/io/quarkus/arc/test/validation/StereotypeOnMethodTest.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package io.quarkus.arc.test.validation;\n+\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+import io.quarkus.arc.test.ArcTestContainer;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.inject.Stereotype;\n+import javax.enterprise.inject.spi.DefinitionException;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+\n+public class StereotypeOnMethodTest {\n+\n+    @RegisterExtension\n+    public ArcTestContainer container = ArcTestContainer.builder()\n+            .beanClasses(BeanWithStereotypeOnMethod.class, Audited.class)\n+            .shouldFail()\n+            .build();\n+\n+    /**\n+     * Verify that DefinitionException is thrown if there is a stereotype applied on a non-producer method.\n+     */\n+    @Test\n+    public void testStereotypeOnNonProducerMethod() {\n+        Throwable error = container.getFailure();\n+        assertNotNull(error);\n+        assertTrue(error instanceof DefinitionException);\n+        assertTrue(error.getMessage().contains(\"auditedMethod\"));\n+    }\n+\n+    @ApplicationScoped\n+    static class BeanWithStereotypeOnMethod {\n+\n+        @Audited\n+        public void auditedMethod() {", "originalCommit": "a58742be620b3cbd04dee6f34a1dfc5f75aee1a5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc5ODU4Ng==", "url": "https://github.com/quarkusio/quarkus/pull/6830#discussion_r375798586", "bodyText": "Done", "author": "jmartisk", "createdAt": "2020-02-06T12:10:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTEyNTI0MA=="}], "type": "inlineReview"}, {"oid": "082f539a52ddead472cfca8d5002ac6cef2b1d1a", "url": "https://github.com/quarkusio/quarkus/commit/082f539a52ddead472cfca8d5002ac6cef2b1d1a", "message": "Throw a DefinitionException when non-producer method/field is annotated with a stereotype", "committedDate": "2020-02-06T12:09:33Z", "type": "forcePushed"}, {"oid": "b4a1294d3221787c7d22ca794cfedd05d4fa040d", "url": "https://github.com/quarkusio/quarkus/commit/b4a1294d3221787c7d22ca794cfedd05d4fa040d", "message": "Throw a DefinitionException when non-producer method/field is annotated with a stereotype", "committedDate": "2020-02-07T11:37:06Z", "type": "commit"}, {"oid": "b4a1294d3221787c7d22ca794cfedd05d4fa040d", "url": "https://github.com/quarkusio/quarkus/commit/b4a1294d3221787c7d22ca794cfedd05d4fa040d", "message": "Throw a DefinitionException when non-producer method/field is annotated with a stereotype", "committedDate": "2020-02-07T11:37:06Z", "type": "forcePushed"}]}