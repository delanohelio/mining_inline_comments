{"pr_number": 13675, "pr_title": "Allow methods annotated with @ServerRequestFilter and @ServerResponseFilter to return various types", "pr_createdAt": "2020-12-03T16:10:51Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/13675", "timeline": [{"oid": "d0cf46014d3078b44166ec0d3fb8af7cb225d7e0", "url": "https://github.com/quarkusio/quarkus/commit/d0cf46014d3078b44166ec0d3fb8af7cb225d7e0", "message": "Simplify TemplateResponseFilter by returning Uni and letting RR take care of the plumbing", "committedDate": "2020-12-03T16:11:55Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTM4NzgwOQ==", "url": "https://github.com/quarkusio/quarkus/pull/13675#discussion_r535387809", "bodyText": "Why not plain Response as a return type?", "author": "FroMage", "createdAt": "2020-12-03T16:31:23Z", "path": "independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/ServerRequestFilter.java", "diffHunk": "@@ -47,6 +47,24 @@\n  * <li>{@link ResourceInfo}\n  * <li>{@link SimpleResourceInfo}\n  * </ul>\n+ *\n+ * The return type of the method must be either be of type {@code void}, {@code Optional<Response>}, {@code Uni<Void>} or\n+ * {@code Uni<Response>}.\n+ * <ul>\n+ * <li>{@code void} should be used when filtering does not need to perform any blocking operations and the filter cannot abort\n+ * processing.\n+ * <li>{@code Optional<Response>} should be used when filtering does not need to perform any blocking operations but the filter", "originalCommit": "d0cf46014d3078b44166ec0d3fb8af7cb225d7e0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTM4OTU4Mg==", "url": "https://github.com/quarkusio/quarkus/pull/13675#discussion_r535389582", "bodyText": "Good question. I thought of making it Optional because a filter doesn't have to return it, so I thought I'd make it explicit.\nBut we can of course support it, it's no big deal.", "author": "geoand", "createdAt": "2020-12-03T16:33:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTM4NzgwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTM5MjExOA==", "url": "https://github.com/quarkusio/quarkus/pull/13675#discussion_r535392118", "bodyText": "I'd support both, if returning a Response and it's null then it's a no-abort case.", "author": "FroMage", "createdAt": "2020-12-03T16:37:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTM4NzgwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTM5Mjg2NQ==", "url": "https://github.com/quarkusio/quarkus/pull/13675#discussion_r535392865", "bodyText": "Will do", "author": "geoand", "createdAt": "2020-12-03T16:37:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTM4NzgwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQ1MTU1Ng==", "url": "https://github.com/quarkusio/quarkus/pull/13675#discussion_r535451556", "bodyText": "Fixed", "author": "geoand", "createdAt": "2020-12-03T17:50:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTM4NzgwOQ=="}], "type": "inlineReview"}, {"oid": "d3fc23fb4caff75b0dbf9dbba6d6ed4e43eb3c16", "url": "https://github.com/quarkusio/quarkus/commit/d3fc23fb4caff75b0dbf9dbba6d6ed4e43eb3c16", "message": "Allow methods annotated with @ServerRequestFilter and @ServerResponseFilter to return various types\n\nThis lifts the restriction on having to use void as a return type.\n\nFixes: #13592", "committedDate": "2020-12-03T17:49:49Z", "type": "commit"}, {"oid": "93bb8bcb9ff0b4fe24631b0f4f39e9487b9930d8", "url": "https://github.com/quarkusio/quarkus/commit/93bb8bcb9ff0b4fe24631b0f4f39e9487b9930d8", "message": "Simplify TemplateResponseFilter by returning Uni and letting RR take care of the plumbing", "committedDate": "2020-12-03T17:49:49Z", "type": "commit"}, {"oid": "93bb8bcb9ff0b4fe24631b0f4f39e9487b9930d8", "url": "https://github.com/quarkusio/quarkus/commit/93bb8bcb9ff0b4fe24631b0f4f39e9487b9930d8", "message": "Simplify TemplateResponseFilter by returning Uni and letting RR take care of the plumbing", "committedDate": "2020-12-03T17:49:49Z", "type": "forcePushed"}]}