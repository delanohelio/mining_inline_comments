{"pr_number": 7970, "pr_title": "Switch to mutiny based reactive streams ops", "pr_createdAt": "2020-03-19T12:09:45Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/7970", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTI3NDYwNQ==", "url": "https://github.com/quarkusio/quarkus/pull/7970#discussion_r395274605", "bodyText": "I'm not sure I would add a feature if it's a purely internal extension?", "author": "gsmet", "createdAt": "2020-03-19T19:38:57Z", "path": "extensions/reactive-streams-operators/mutiny-reactive-streams-operators/deployment/src/main/java/io/quarkus/mutiny/reactive/operators/deployment/MutinyReactiveStreamsOperatorsProcessor.java", "diffHunk": "@@ -0,0 +1,24 @@\n+package io.quarkus.mutiny.reactive.operators.deployment;\n+\n+import org.eclipse.microprofile.reactive.streams.operators.ReactiveStreamsFactory;\n+import org.eclipse.microprofile.reactive.streams.operators.core.ReactiveStreamsFactoryImpl;\n+import org.eclipse.microprofile.reactive.streams.operators.spi.ReactiveStreamsEngine;\n+\n+import io.quarkus.deployment.annotations.BuildProducer;\n+import io.quarkus.deployment.annotations.BuildStep;\n+import io.quarkus.deployment.builditem.FeatureBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ServiceProviderBuildItem;\n+import io.smallrye.mutiny.streams.Engine;\n+\n+public class MutinyReactiveStreamsOperatorsProcessor {\n+\n+    @BuildStep\n+    public void build(BuildProducer<ServiceProviderBuildItem> serviceProvider,\n+            BuildProducer<FeatureBuildItem> feature) {\n+        feature.produce(new FeatureBuildItem(FeatureBuildItem.MUTINY_REACTIVE_STREAMS_OPERATORS));", "originalCommit": "2df78dae7b481f6f375b138d470bcf3acdc7e6c5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY0OTkwMQ==", "url": "https://github.com/quarkusio/quarkus/pull/7970#discussion_r395649901", "bodyText": "I agree it was more something for me to check that it was the right implementation.\nLet me remove this.", "author": "cescoffier", "createdAt": "2020-03-20T13:52:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTI3NDYwNQ=="}], "type": "inlineReview"}, {"oid": "20e2c5c5d19934162ec67550e000581255f71bb8", "url": "https://github.com/quarkusio/quarkus/commit/20e2c5c5d19934162ec67550e000581255f71bb8", "message": "avoid having two implementations of reactive streams operators on the classpath", "committedDate": "2020-03-21T08:51:12Z", "type": "forcePushed"}, {"oid": "31a67da1a8ef792b6db020cc86f66d64a2ce1d36", "url": "https://github.com/quarkusio/quarkus/commit/31a67da1a8ef792b6db020cc86f66d64a2ce1d36", "message": "add resteasy-context-propagation to avoid the class loading issue", "committedDate": "2020-03-21T11:19:11Z", "type": "forcePushed"}, {"oid": "1ed9ee24c8e471daa87bd28babc76435f1839997", "url": "https://github.com/quarkusio/quarkus/commit/1ed9ee24c8e471daa87bd28babc76435f1839997", "message": "avoid having two implementations of reactive streams operators on the classpath", "committedDate": "2020-03-23T14:55:41Z", "type": "forcePushed"}, {"oid": "bfd17fa6eef4d05f0ca460eb4f731093ff02fecb", "url": "https://github.com/quarkusio/quarkus/commit/bfd17fa6eef4d05f0ca460eb4f731093ff02fecb", "message": "avoid having two implementations of reactive streams operators on the classpath", "committedDate": "2020-04-10T06:37:21Z", "type": "forcePushed"}, {"oid": "52f43a3271ab547c493be308003d80c08cbc5348", "url": "https://github.com/quarkusio/quarkus/commit/52f43a3271ab547c493be308003d80c08cbc5348", "message": "avoid having two implementations of reactive streams operators on the classpath", "committedDate": "2020-04-14T17:55:55Z", "type": "forcePushed"}, {"oid": "0b0f782298bf3252714992c23cf5421a0e53cf81", "url": "https://github.com/quarkusio/quarkus/commit/0b0f782298bf3252714992c23cf5421a0e53cf81", "message": "avoid having two implementations of reactive streams operators on the classpath", "committedDate": "2020-04-15T09:39:57Z", "type": "forcePushed"}, {"oid": "01e3025f8a7f0c0f89a342ce922f3736b1daeace", "url": "https://github.com/quarkusio/quarkus/commit/01e3025f8a7f0c0f89a342ce922f3736b1daeace", "message": "Switch from the SmallRye Reactive Streams Operators to the Mutiny-based implementation", "committedDate": "2020-05-04T15:07:18Z", "type": "forcePushed"}, {"oid": "89be0c69d7356a34dbd296f6b0219f6a501585ea", "url": "https://github.com/quarkusio/quarkus/commit/89be0c69d7356a34dbd296f6b0219f6a501585ea", "message": "Add a dependency on the Mutiny-based implementation of MicroProfile Reactive Streams Operators\n\nAlso bump the SmallRye Reactive Converter API version.", "committedDate": "2020-05-14T14:31:51Z", "type": "commit"}, {"oid": "48e0654927a509a00ded1a41fd400e3bc7ee59de", "url": "https://github.com/quarkusio/quarkus/commit/48e0654927a509a00ded1a41fd400e3bc7ee59de", "message": "Add an extension that provide support for the Mutiny-based implementation of MicroProfile Reactive Streams Operators\n\nIt will replace the current implementation.", "committedDate": "2020-05-14T14:31:51Z", "type": "commit"}, {"oid": "9fa945e7a903aff8ef367d6402139c92b275ce39", "url": "https://github.com/quarkusio/quarkus/commit/9fa945e7a903aff8ef367d6402139c92b275ce39", "message": "Use the Mutiny reactive converter from SmallRye instead of our internal implementation.", "committedDate": "2020-05-14T14:31:51Z", "type": "commit"}, {"oid": "39234e1457d59755b44b9bbf13466740c7bfc7ea", "url": "https://github.com/quarkusio/quarkus/commit/39234e1457d59755b44b9bbf13466740c7bfc7ea", "message": "Switch from the SmallRye Reactive Streams Operators to the Mutiny-based implementation", "committedDate": "2020-05-14T14:31:51Z", "type": "commit"}, {"oid": "39234e1457d59755b44b9bbf13466740c7bfc7ea", "url": "https://github.com/quarkusio/quarkus/commit/39234e1457d59755b44b9bbf13466740c7bfc7ea", "message": "Switch from the SmallRye Reactive Streams Operators to the Mutiny-based implementation", "committedDate": "2020-05-14T14:31:51Z", "type": "forcePushed"}]}