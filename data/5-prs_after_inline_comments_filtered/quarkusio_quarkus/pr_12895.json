{"pr_number": 12895, "pr_title": "Improve the Cloud-Native Codestarts experience", "pr_createdAt": "2020-10-23T08:09:11Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/12895", "timeline": [{"oid": "ee0161aa263b9ed6e774e9da4b472273a7c210ea", "url": "https://github.com/quarkusio/quarkus/commit/ee0161aa263b9ed6e774e9da4b472273a7c210ea", "message": "Improve Codestart experience", "committedDate": "2020-10-23T08:10:31Z", "type": "forcePushed"}, {"oid": "a6b35ee17b39328f3e820a81811785282b467e12", "url": "https://github.com/quarkusio/quarkus/commit/a6b35ee17b39328f3e820a81811785282b467e12", "message": "Improve Codestart experience", "committedDate": "2020-10-23T08:16:49Z", "type": "forcePushed"}, {"oid": "3c4a7d69dacc5154aa97ac5692974f6ec88cd48a", "url": "https://github.com/quarkusio/quarkus/commit/3c4a7d69dacc5154aa97ac5692974f6ec88cd48a", "message": "Improve Codestart experience", "committedDate": "2020-10-23T08:20:59Z", "type": "forcePushed"}, {"oid": "b8bd3e299498d44c60443fdf4cf04822c3069ada", "url": "https://github.com/quarkusio/quarkus/commit/b8bd3e299498d44c60443fdf4cf04822c3069ada", "message": "Improve Codestart experience", "committedDate": "2020-10-23T10:47:50Z", "type": "forcePushed"}, {"oid": "70d4feebe9f9072544f3154929077140448cbc60", "url": "https://github.com/quarkusio/quarkus/commit/70d4feebe9f9072544f3154929077140448cbc60", "message": "Improve Codestart experience", "committedDate": "2020-10-23T12:33:12Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzA3ODUzMw==", "url": "https://github.com/quarkusio/quarkus/pull/12895#discussion_r513078533", "bodyText": "this reads weird - we have a enum named shape inside a class called Box which always is referred to as a either square or circle....\nMaybe call Box a figure which has specific shape and size.", "author": "maxandersen", "createdAt": "2020-10-27T22:50:01Z", "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/examples/qute-example/java/src/main/java/org/acme/qute/Box.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package org.acme.qute;\n+\n+public class Box {\n+\n+    public enum Shape { SQUARE, CIRCLE }", "originalCommit": "70d4feebe9f9072544f3154929077140448cbc60", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIyMzQ2NQ==", "url": "https://github.com/quarkusio/quarkus/pull/12895#discussion_r513223465", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            LOG.infof(\"Stop being lazy , you can't go slower than %s\", i);\n          \n          \n            \n                            LOG.infof(\"Stop being lazy, you can't go slower than %s\", i);", "author": "maxandersen", "createdAt": "2020-10-28T07:16:50Z", "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/examples/logging-json/java/src/main/java/org/acme/logging/json/LoggingJsonResource.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package org.acme.logging.json;\n+\n+import org.jboss.logging.Logger;\n+\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.ServerErrorException;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+@Path(\"/logging-json\")\n+public class LoggingJsonResource {\n+\n+    private static final Logger LOG = Logger.getLogger(LoggingJsonResource.class);\n+\n+    private final AtomicInteger speed = new AtomicInteger(5);\n+\n+    @GET\n+    @Path(\"slowdown\")\n+    @Produces(MediaType.TEXT_PLAIN)\n+    public int slow() {\n+        return speed.updateAndGet(i -> {\n+            if (i == 0) {\n+                LOG.infof(\"Stop being lazy , you can't go slower than %s\", i);", "originalCommit": "70d4feebe9f9072544f3154929077140448cbc60", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI4OTYxMA==", "url": "https://github.com/quarkusio/quarkus/pull/12895#discussion_r513289610", "bodyText": "This is going to be removed", "author": "ia3andy", "createdAt": "2020-10-28T09:20:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIyMzQ2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIyMzgwNA==", "url": "https://github.com/quarkusio/quarkus/pull/12895#discussion_r513223804", "bodyText": "I don't understand this - I fell when I went to speed 9 but writes speed is back to 9 but then set it to 5...that does not feel right.", "author": "maxandersen", "createdAt": "2020-10-28T07:17:49Z", "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/examples/logging-json/java/src/main/java/org/acme/logging/json/LoggingJsonResource.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package org.acme.logging.json;\n+\n+import org.jboss.logging.Logger;\n+\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.ServerErrorException;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+@Path(\"/logging-json\")\n+public class LoggingJsonResource {\n+\n+    private static final Logger LOG = Logger.getLogger(LoggingJsonResource.class);\n+\n+    private final AtomicInteger speed = new AtomicInteger(5);\n+\n+    @GET\n+    @Path(\"slowdown\")\n+    @Produces(MediaType.TEXT_PLAIN)\n+    public int slow() {\n+        return speed.updateAndGet(i -> {\n+            if (i == 0) {\n+                LOG.infof(\"Stop being lazy , you can't go slower than %s\", i);\n+                return i;\n+            }\n+            LOG.infof(\"Come on /faster \ud83d\ude80, your speed is %s\", i);\n+            return i - 1;\n+        });\n+    }\n+\n+    @GET\n+    @Path(\"faster\")\n+    @Produces(MediaType.TEXT_PLAIN)\n+    public int faster() {\n+        final AtomicReference<RuntimeException> e = new AtomicReference<>();\n+        int newSpeed = speed.updateAndGet(i -> {\n+            if (i == 9) {\n+                e.set(new ServerErrorException(\"You just fell down \ud83e\udd15, speed is back to \" + i, Response.Status.SERVICE_UNAVAILABLE));", "originalCommit": "70d4feebe9f9072544f3154929077140448cbc60", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI4OTQyNw==", "url": "https://github.com/quarkusio/quarkus/pull/12895#discussion_r513289427", "bodyText": "I will just keep one endpoint to go faster, from 0 to 10, at eleven you fall and back to 0?", "author": "ia3andy", "createdAt": "2020-10-28T09:20:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIyMzgwNA=="}], "type": "inlineReview"}, {"oid": "3f518bf2999d0cd480c3fb3554ce1352d975eab9", "url": "https://github.com/quarkusio/quarkus/commit/3f518bf2999d0cd480c3fb3554ce1352d975eab9", "message": "Improve Codestart experience", "committedDate": "2020-11-05T19:04:34Z", "type": "forcePushed"}, {"oid": "81ef19dee5b513fb43233a5e03cfed2b65185290", "url": "https://github.com/quarkusio/quarkus/commit/81ef19dee5b513fb43233a5e03cfed2b65185290", "message": "Improve Codestart experience", "committedDate": "2020-11-05T19:06:49Z", "type": "forcePushed"}, {"oid": "c640510e48722819d0f65035c97728dc5379b2e7", "url": "https://github.com/quarkusio/quarkus/commit/c640510e48722819d0f65035c97728dc5379b2e7", "message": "Improve Codestart experience", "committedDate": "2020-11-05T19:53:28Z", "type": "forcePushed"}, {"oid": "968ecd22337de80eaa9d8cb7c3ea20cfff03cfcf", "url": "https://github.com/quarkusio/quarkus/commit/968ecd22337de80eaa9d8cb7c3ea20cfff03cfcf", "message": "Improve Codestart experience", "committedDate": "2020-11-06T07:56:22Z", "type": "forcePushed"}, {"oid": "7bb30449c56662150e357bc3f48d5cd17a8ca2b7", "url": "https://github.com/quarkusio/quarkus/commit/7bb30449c56662150e357bc3f48d5cd17a8ca2b7", "message": "Improve Codestart experience", "committedDate": "2020-11-06T08:50:12Z", "type": "forcePushed"}, {"oid": "7869cca1795d17dfebb918876b9d63c11ded5fa8", "url": "https://github.com/quarkusio/quarkus/commit/7869cca1795d17dfebb918876b9d63c11ded5fa8", "message": "Improve Codestart experience", "committedDate": "2020-11-06T09:29:12Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODYzNzYyMg==", "url": "https://github.com/quarkusio/quarkus/pull/12895#discussion_r518637622", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    LOG.infof(message);\n          \n          \n            \n                    LOG.info(message);", "author": "glefloch", "createdAt": "2020-11-06T09:49:01Z", "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/examples/logging-json/java/src/main/java/org/acme/logging/json/LoggingJsonResource.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package org.acme.logging.json;\n+\n+import org.jboss.logging.Logger;\n+\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.ServerErrorException;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import java.util.Random;\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+@Path(\"/logging-json\")\n+public class LoggingJsonResource {\n+\n+    private static final Logger LOG = Logger.getLogger(LoggingJsonResource.class);\n+    private static final int SPEED_OF_SOUND_IN_METER_PER_SECOND = 343;\n+\n+    private final AtomicInteger speed = new AtomicInteger(0);\n+    private final Random random = new Random();\n+\n+    @GET\n+    @Path(\"faster\")\n+    @Produces(MediaType.TEXT_PLAIN)\n+    public String faster() {\n+        final int s = speed.addAndGet(random.nextInt(200));\n+        if (s > SPEED_OF_SOUND_IN_METER_PER_SECOND) {\n+            throw new ServerErrorException(\"\ud83d\udca5 SONIC BOOOOOM!!!\", Response.Status.SERVICE_UNAVAILABLE);\n+        }\n+        String message = String.format(\"Your jet aircraft speed is %s m/s.\", s);\n+        LOG.infof(message);", "originalCommit": "7869cca1795d17dfebb918876b9d63c11ded5fa8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "bab6dee6d93f17432e233077bdd6d63118cd4b73", "url": "https://github.com/quarkusio/quarkus/commit/bab6dee6d93f17432e233077bdd6d63118cd4b73", "message": "Improve Codestart experience", "committedDate": "2020-11-06T10:18:34Z", "type": "commit"}, {"oid": "bab6dee6d93f17432e233077bdd6d63118cd4b73", "url": "https://github.com/quarkusio/quarkus/commit/bab6dee6d93f17432e233077bdd6d63118cd4b73", "message": "Improve Codestart experience", "committedDate": "2020-11-06T10:18:34Z", "type": "forcePushed"}]}