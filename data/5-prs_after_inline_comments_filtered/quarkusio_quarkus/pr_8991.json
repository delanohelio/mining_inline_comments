{"pr_number": 8991, "pr_title": "mTLS client authentication support", "pr_createdAt": "2020-04-30T19:25:23Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/8991", "timeline": [{"oid": "ba47ca63312e9dc519d1ab7c73037fcc0075e3c0", "url": "https://github.com/quarkusio/quarkus/commit/ba47ca63312e9dc519d1ab7c73037fcc0075e3c0", "message": "[fixes #8508] - mTLS client authentication support", "committedDate": "2020-04-30T19:49:06Z", "type": "forcePushed"}, {"oid": "75f17cf5aa233c8b85a40533f119f4f97114c99b", "url": "https://github.com/quarkusio/quarkus/commit/75f17cf5aa233c8b85a40533f119f4f97114c99b", "message": "[fixes #8508] - mTLS client authentication support", "committedDate": "2020-05-04T14:59:13Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg4NDg1NQ==", "url": "https://github.com/quarkusio/quarkus/pull/8991#discussion_r419884855", "bodyText": "This should just return an empty identity, it is still possible for the user to authenticate via another mechanism.", "author": "stuartwdouglas", "createdAt": "2020-05-05T06:17:50Z", "path": "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/security/MtlsAuthenticationMechanism.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * JBoss, Home of Professional Open Source.\n+ * Copyright 2014 Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.quarkus.vertx.http.runtime.security;\n+\n+import java.security.cert.Certificate;\n+import java.security.cert.X509Certificate;\n+import java.util.Collections;\n+import java.util.Optional;\n+import java.util.Set;\n+\n+import javax.net.ssl.SSLPeerUnverifiedException;\n+\n+import io.netty.handler.codec.http.HttpResponseStatus;\n+import io.quarkus.security.credential.CertificateCredential;\n+import io.quarkus.security.identity.IdentityProviderManager;\n+import io.quarkus.security.identity.SecurityIdentity;\n+import io.quarkus.security.identity.request.AuthenticationRequest;\n+import io.quarkus.security.identity.request.CertificateAuthenticationRequest;\n+import io.smallrye.mutiny.Uni;\n+import io.vertx.core.http.HttpServerRequest;\n+import io.vertx.ext.web.RoutingContext;\n+\n+/**\n+ * The authentication handler responsible for mTLS client authentication\n+ */\n+public class MtlsAuthenticationMechanism implements HttpAuthenticationMechanism {\n+\n+    @Override\n+    public Uni<SecurityIdentity> authenticate(RoutingContext context,\n+            IdentityProviderManager identityProviderManager) {\n+        HttpServerRequest request = context.request();\n+\n+        if (!request.isSSL()) {\n+            // we don't handle insecure requests\n+            return Uni.createFrom().failure(new AuthenticationCompletionException());", "originalCommit": "75f17cf5aa233c8b85a40533f119f4f97114c99b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg4NTA4MQ==", "url": "https://github.com/quarkusio/quarkus/pull/8991#discussion_r419885081", "bodyText": "Uni now has a better API for this (createFrom().empty() I think).", "author": "stuartwdouglas", "createdAt": "2020-05-05T06:18:33Z", "path": "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/security/MtlsAuthenticationMechanism.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * JBoss, Home of Professional Open Source.\n+ * Copyright 2014 Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.quarkus.vertx.http.runtime.security;\n+\n+import java.security.cert.Certificate;\n+import java.security.cert.X509Certificate;\n+import java.util.Collections;\n+import java.util.Optional;\n+import java.util.Set;\n+\n+import javax.net.ssl.SSLPeerUnverifiedException;\n+\n+import io.netty.handler.codec.http.HttpResponseStatus;\n+import io.quarkus.security.credential.CertificateCredential;\n+import io.quarkus.security.identity.IdentityProviderManager;\n+import io.quarkus.security.identity.SecurityIdentity;\n+import io.quarkus.security.identity.request.AuthenticationRequest;\n+import io.quarkus.security.identity.request.CertificateAuthenticationRequest;\n+import io.smallrye.mutiny.Uni;\n+import io.vertx.core.http.HttpServerRequest;\n+import io.vertx.ext.web.RoutingContext;\n+\n+/**\n+ * The authentication handler responsible for mTLS client authentication\n+ */\n+public class MtlsAuthenticationMechanism implements HttpAuthenticationMechanism {\n+\n+    @Override\n+    public Uni<SecurityIdentity> authenticate(RoutingContext context,\n+            IdentityProviderManager identityProviderManager) {\n+        HttpServerRequest request = context.request();\n+\n+        if (!request.isSSL()) {\n+            // we don't handle insecure requests\n+            return Uni.createFrom().failure(new AuthenticationCompletionException());\n+        }\n+\n+        Certificate certificate;\n+\n+        try {\n+            certificate = request.sslSession().getPeerCertificates()[0];\n+        } catch (SSLPeerUnverifiedException e) {\n+            return Uni.createFrom().optional(Optional.empty());", "originalCommit": "75f17cf5aa233c8b85a40533f119f4f97114c99b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1e8a670baf3852162a9086d2055dd1ae8c2bafe5", "url": "https://github.com/quarkusio/quarkus/commit/1e8a670baf3852162a9086d2055dd1ae8c2bafe5", "message": "[fixes #8508] - mTLS client authentication support", "committedDate": "2020-05-06T18:14:15Z", "type": "forcePushed"}, {"oid": "687875c6aa79534bebc7cb6c12281c28fbc494f9", "url": "https://github.com/quarkusio/quarkus/commit/687875c6aa79534bebc7cb6c12281c28fbc494f9", "message": "[fixes #8508] - mTLS client authentication support", "committedDate": "2020-06-03T12:07:17Z", "type": "forcePushed"}, {"oid": "ce03d8e4de05699fa0a94788cc33d3957c0efaf1", "url": "https://github.com/quarkusio/quarkus/commit/ce03d8e4de05699fa0a94788cc33d3957c0efaf1", "message": "[fixes #8508] - mTLS client authentication support", "committedDate": "2020-06-03T17:22:36Z", "type": "forcePushed"}, {"oid": "9b0d532bd4299c8bf589362d751ecfa789d0e76a", "url": "https://github.com/quarkusio/quarkus/commit/9b0d532bd4299c8bf589362d751ecfa789d0e76a", "message": "[fixes #8508] - mTLS client authentication support", "committedDate": "2020-06-16T18:11:22Z", "type": "commit"}, {"oid": "9b0d532bd4299c8bf589362d751ecfa789d0e76a", "url": "https://github.com/quarkusio/quarkus/commit/9b0d532bd4299c8bf589362d751ecfa789d0e76a", "message": "[fixes #8508] - mTLS client authentication support", "committedDate": "2020-06-16T18:11:22Z", "type": "forcePushed"}]}