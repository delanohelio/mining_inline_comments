{"pr_number": 8285, "pr_title": "Don't open the HTTP socket until late in the startup process", "pr_createdAt": "2020-03-31T00:36:09Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/8285", "timeline": [{"oid": "3e8555e4ec77fe8d047e280864a38bf96b688d8f", "url": "https://github.com/quarkusio/quarkus/commit/3e8555e4ec77fe8d047e280864a38bf96b688d8f", "message": "Don't open the HTTP socket until late in the startup process\n\nThis makes sure that we don't open the HTTP socket until\nall start events have been run and all ServiceStartBuildItem\nevents have been run.\n\nThis also makes sure that the runtime bean map has been initialized\nby this point.\n\nFixes #8269", "committedDate": "2020-03-31T02:29:45Z", "type": "forcePushed"}, {"oid": "8648c280db61f19d760f3deffd3db378bb1af6b3", "url": "https://github.com/quarkusio/quarkus/commit/8648c280db61f19d760f3deffd3db378bb1af6b3", "message": "Don't open the HTTP socket until late in the startup process\n\nThis makes sure that we don't open the HTTP socket until\nall start events have been run and all ServiceStartBuildItem\nevents have been run.\n\nThis also makes sure that the runtime bean map has been initialized\nby this point.\n\nFixes #8269", "committedDate": "2020-03-31T04:58:25Z", "type": "commit"}, {"oid": "8648c280db61f19d760f3deffd3db378bb1af6b3", "url": "https://github.com/quarkusio/quarkus/commit/8648c280db61f19d760f3deffd3db378bb1af6b3", "message": "Don't open the HTTP socket until late in the startup process\n\nThis makes sure that we don't open the HTTP socket until\nall start events have been run and all ServiceStartBuildItem\nevents have been run.\n\nThis also makes sure that the runtime bean map has been initialized\nby this point.\n\nFixes #8269", "committedDate": "2020-03-31T04:58:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc3MTIzMw==", "url": "https://github.com/quarkusio/quarkus/pull/8285#discussion_r400771233", "bodyText": "@stuartwdouglas I'm not sure a concurrent map is needed since we still synchronize on it, the sync block is needed to avoid the concurrent connection requests. But I suppose it is performing better anyway, the concurrent map.", "author": "sberyozkin", "createdAt": "2020-03-31T09:31:21Z", "path": "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/DefaultTenantConfigResolver.java", "diffHunk": "@@ -27,18 +26,17 @@\n     @Inject\n     Instance<TenantConfigResolver> tenantConfigResolver;\n \n-    private volatile Map<String, TenantConfigContext> staticTenantsConfig;\n-    private volatile TenantConfigContext defaultTenant;\n-    private volatile Function<OidcTenantConfig, TenantConfigContext> tenantConfigContextFactory;\n-    private volatile Map<String, TenantConfigContext> dynamicTenantsConfig;\n+    private final Map<String, TenantConfigContext> dynamicTenantsConfig = new ConcurrentHashMap<>();", "originalCommit": "8648c280db61f19d760f3deffd3db378bb1af6b3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc3MjY0MA==", "url": "https://github.com/quarkusio/quarkus/pull/8285#discussion_r400772640", "bodyText": "Interesting, so this is how one can register the application scoped like singletons at runtime", "author": "sberyozkin", "createdAt": "2020-03-31T09:33:34Z", "path": "extensions/oidc/deployment/src/main/java/io/quarkus/oidc/deployment/OidcBuildStep.java", "diffHunk": "@@ -66,9 +69,15 @@ EnableAllSecurityServicesBuildItem security() {\n \n     @Record(ExecutionTime.RUNTIME_INIT)\n     @BuildStep(onlyIf = IsEnabled.class)\n-    public void setup(OidcConfig config, OidcRecorder recorder, CoreVertxBuildItem vertxBuildItem,\n-            BeanContainerBuildItem bc) {\n-        recorder.setup(config, vertxBuildItem.getVertx(), bc.getValue());\n+    public SyntheticBeanBuildItem setup(\n+            OidcConfig config,\n+            OidcRecorder recorder,\n+            CoreVertxBuildItem vertxBuildItem) {\n+        return SyntheticBeanBuildItem.configure(TenantConfigBean.class).unremovable().types(TenantConfigBean.class)", "originalCommit": "8648c280db61f19d760f3deffd3db378bb1af6b3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY5NDEyMg==", "url": "https://github.com/quarkusio/quarkus/pull/8285#discussion_r401694122", "bodyText": "@stuartwdouglas I need it to be a Singleton. Many clients are casting it to VertxInternal (I know it's bad). With ApplciaitonScoped it does not work anymore.", "author": "cescoffier", "createdAt": "2020-04-01T15:14:13Z", "path": "extensions/vertx-core/deployment/src/main/java/io/quarkus/vertx/core/deployment/VertxCoreProcessor.java", "diffHunk": "@@ -69,12 +64,19 @@ IOThreadDetectorBuildItem ioThreadDetector(VertxCoreRecorder recorder) {\n \n     @BuildStep\n     @Record(value = ExecutionTime.RUNTIME_INIT)\n-    CoreVertxBuildItem build(VertxCoreRecorder recorder, BeanContainerBuildItem beanContainer,\n+    CoreVertxBuildItem build(VertxCoreRecorder recorder,\n             LaunchModeBuildItem launchMode, ShutdownContextBuildItem shutdown, VertxConfiguration config,\n+            BuildProducer<SyntheticBeanBuildItem> syntheticBeanBuildItemBuildProducer,\n             BuildProducer<ServiceStartBuildItem> serviceStartBuildItem) {\n \n-        Supplier<Vertx> vertx = recorder.configureVertx(beanContainer.getValue(), config,\n+        Supplier<Vertx> vertx = recorder.configureVertx(config,\n                 launchMode.getLaunchMode(), shutdown);\n+        syntheticBeanBuildItemBuildProducer.produce(SyntheticBeanBuildItem.configure(Vertx.class)\n+                .types(Vertx.class)\n+                .scope(ApplicationScoped.class)", "originalCommit": "8648c280db61f19d760f3deffd3db378bb1af6b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkxNjc0Mw==", "url": "https://github.com/quarkusio/quarkus/pull/8285#discussion_r401916743", "bodyText": "#8339", "author": "stuartwdouglas", "createdAt": "2020-04-01T21:21:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY5NDEyMg=="}], "type": "inlineReview"}]}