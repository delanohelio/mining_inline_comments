{"pr_number": 6824, "pr_title": "Make Jaeger tracer reconfigurable", "pr_createdAt": "2020-01-28T11:34:40Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/6824", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc1MDg4MA==", "url": "https://github.com/quarkusio/quarkus/pull/6824#discussion_r371750880", "bodyText": "On Jaeger creates metrics. On runtime restart a new tracer is created therefore a set of metrics is registered. On multiple restarts the same set of metrics are being registered which causes\nCaused by: java.lang.IllegalArgumentException: A metric with metricID MetricID{name='jaeger_tracer_reporter_queue_length', tags=[]} already exists\n\tat io.smallrye.metrics.MetricsRegistryImpl.register(MetricsRegistryImpl.java:129)\n\tat io.quarkus.jaeger.runtime.QuarkusJaegerMetricsFactory.createGauge(QuarkusJaegerMetricsFactory.java:48)\n\tat io.jaegertracing.internal.metrics.Metrics.createMetrics(Metrics.java:66)\n\t... 37 more\n\nDoes anybody know a better solution to this?", "author": "pavolloffay", "createdAt": "2020-01-28T11:36:45Z", "path": "extensions/jaeger/runtime/src/main/java/io/quarkus/jaeger/runtime/QuarkusJaegerMetricsFactory.java", "diffHunk": "@@ -21,6 +21,9 @@\n \n     @Override\n     public Counter createCounter(final String name, final Map<String, String> tags) {\n+        // On restart (e.g. in dev mode) Jaeger registers\n+        // the same metrics which would result in exception\n+        registry.remove(name);", "originalCommit": "615136c46264f1e8684f99d126745510434f4786", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc3ODU4Mg==", "url": "https://github.com/quarkusio/quarkus/pull/6824#discussion_r371778582", "bodyText": "@jmartisk perhaps?", "author": "geoand", "createdAt": "2020-01-28T12:42:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc1MDg4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA0NDQ2Mg==", "url": "https://github.com/quarkusio/quarkus/pull/6824#discussion_r374044462", "bodyText": "@jmartisk Any idea about this?", "author": "geoand", "createdAt": "2020-02-03T11:10:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc1MDg4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTY5OTI5MQ==", "url": "https://github.com/quarkusio/quarkus/pull/6824#discussion_r375699291", "bodyText": "Oh, my deepest apologies for such late reply! The notifications got buried somewhere and I probably skipped over them when there we too many of them to have a thorough look.\nI suppose you should use a shutdown task for any metric that the extension creates so that it will get removed on each live reload\nSee https://github.com/quarkusio/quarkus/blob/master/extensions/smallrye-metrics/runtime/src/main/java/io/quarkus/smallrye/metrics/runtime/SmallRyeMetricsRecorder.java#L110\nI am seriously considering changing the Metrics extension so that all metrics will be removed automatically though, so this will not be needed anymore", "author": "jmartisk", "createdAt": "2020-02-06T08:37:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc1MDg4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcwMDEzNQ==", "url": "https://github.com/quarkusio/quarkus/pull/6824#discussion_r375700135", "bodyText": "No problem @jmartisk !", "author": "geoand", "createdAt": "2020-02-06T08:40:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc1MDg4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcwMjkxNA==", "url": "https://github.com/quarkusio/quarkus/pull/6824#discussion_r375702914", "bodyText": "Or is this something that happens dynamically at runtime, rather than through a recorder? In that case I suppose you can't use a shutdown task, and I'd say the right thing to do is to remove them like you do atm, until we perform the Metrics change I mentioned.", "author": "jmartisk", "createdAt": "2020-02-06T08:46:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc1MDg4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcxMDg3Nw==", "url": "https://github.com/quarkusio/quarkus/pull/6824#discussion_r375710877", "bodyText": "thanks @jmartisk then I will keep this here.", "author": "pavolloffay", "createdAt": "2020-02-06T09:03:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc1MDg4MA=="}], "type": "inlineReview"}, {"oid": "556685637c3a071e74471aeea30c897919d0341e", "url": "https://github.com/quarkusio/quarkus/commit/556685637c3a071e74471aeea30c897919d0341e", "message": "Fallback to unknown if there is no app name\n\nSigned-off-by: Pavol Loffay <ploffay@redhat.com>", "committedDate": "2020-01-29T12:35:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDAwMjc0MQ==", "url": "https://github.com/quarkusio/quarkus/pull/6824#discussion_r374002741", "bodyText": "TBH this looks a little suspicious. Can you please explain what you are trying to achieve here?", "author": "geoand", "createdAt": "2020-02-03T09:42:20Z", "path": "extensions/jaeger/runtime/src/main/java/io/quarkus/jaeger/runtime/JaegerDeploymentRecorder.java", "diffHunk": "@@ -1,45 +1,37 @@\n package io.quarkus.jaeger.runtime;\n \n-import static io.jaegertracing.Configuration.JAEGER_SERVICE_NAME;\n-\n import java.util.Optional;\n import java.util.function.Function;\n \n-import org.eclipse.microprofile.config.Config;\n-import org.eclipse.microprofile.config.ConfigProvider;\n import org.jboss.logging.Logger;\n \n import io.opentracing.util.GlobalTracer;\n+import io.quarkus.runtime.ApplicationConfig;\n import io.quarkus.runtime.annotations.Recorder;\n \n @Recorder\n public class JaegerDeploymentRecorder {\n-    private static volatile boolean registered;\n-\n     private static final Logger log = Logger.getLogger(JaegerDeploymentRecorder.class);\n+    private static final Optional UNKNOWN_SERVICE_NAME = Optional.of(\"quarkus/unknown\");\n+    private static final QuarkusJaegerTracer quarkusTracer = new QuarkusJaegerTracer();\n \n-    public void registerTracer(JaegerConfig jaeger) {\n-        if (!registered) {\n-            if (isValidConfig(jaeger)) {\n-                initTracerConfig(jaeger);\n-                QuarkusJaegerTracer quarkusJaegerTracer = new QuarkusJaegerTracer();\n-                log.debugf(\"Registering tracer to GlobalTracer %s\", quarkusJaegerTracer);\n-                GlobalTracer.register(quarkusJaegerTracer);\n-            }\n-            registered = true;\n+    static {", "originalCommit": "556685637c3a071e74471aeea30c897919d0341e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDAyNjUwOA==", "url": "https://github.com/quarkusio/quarkus/pull/6824#discussion_r374026508", "bodyText": "GlobalTracer is used to pass the tracer to CDI producer defined in MP-OpenTracing spec.\nThis block registers the quarkus tracer to the global tracer. GlobalTracer has is a static accessor to a registered tracer, and it does not have a reset method - hence I have added it to static block.\nI have moved it to registerTracer  method - It might be better if a caller resets the tracer (via reflection - there is a test-jar utility).", "author": "pavolloffay", "createdAt": "2020-02-03T10:30:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDAwMjc0MQ=="}], "type": "inlineReview"}, {"oid": "bcdc03c8142f4b4c86e7ac8d440e473bc7e65367", "url": "https://github.com/quarkusio/quarkus/commit/bcdc03c8142f4b4c86e7ac8d440e473bc7e65367", "message": "Move static global tracer initialization to a method\n\nSigned-off-by: Pavol Loffay <ploffay@redhat.com>", "committedDate": "2020-02-03T10:30:54Z", "type": "forcePushed"}, {"oid": "434f195df32f207faee92a13f0a98e2ce69bd0cb", "url": "https://github.com/quarkusio/quarkus/commit/434f195df32f207faee92a13f0a98e2ce69bd0cb", "message": "Make Jaeger tracer reconfigurable\n\nSigned-off-by: Pavol Loffay <ploffay@redhat.com>", "committedDate": "2020-02-03T11:06:10Z", "type": "commit"}, {"oid": "d557e7e3b44941b243a2f3d2deb9b25cd20a2699", "url": "https://github.com/quarkusio/quarkus/commit/d557e7e3b44941b243a2f3d2deb9b25cd20a2699", "message": "Move static global tracer initialization to a method\n\nSigned-off-by: Pavol Loffay <ploffay@redhat.com>", "committedDate": "2020-02-03T11:06:10Z", "type": "commit"}, {"oid": "d557e7e3b44941b243a2f3d2deb9b25cd20a2699", "url": "https://github.com/quarkusio/quarkus/commit/d557e7e3b44941b243a2f3d2deb9b25cd20a2699", "message": "Move static global tracer initialization to a method\n\nSigned-off-by: Pavol Loffay <ploffay@redhat.com>", "committedDate": "2020-02-03T11:06:10Z", "type": "forcePushed"}]}