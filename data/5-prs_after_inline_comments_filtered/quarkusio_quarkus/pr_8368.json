{"pr_number": 8368, "pr_title": "Register all methods of Liquibase services sub-classes for reflection", "pr_createdAt": "2020-04-02T20:46:40Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/8368", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYxNzQwOA==", "url": "https://github.com/quarkusio/quarkus/pull/8368#discussion_r402617408", "bodyText": "I think I would make it true for all services.", "author": "gsmet", "createdAt": "2020-04-02T21:52:31Z", "path": "extensions/liquibase/deployment/src/main/java/io/quarkus/liquibase/LiquibaseProcessor.java", "diffHunk": "@@ -187,11 +188,11 @@ ServiceStartBuildItem configureRuntimeProperties(LiquibaseRecorder recorder,\n     private void addService(BuildProducer<ReflectiveClassBuildItem> reflective,\n             BuildProducer<GeneratedResourceBuildItem> generatedResourceProducer,\n             BuildProducer<NativeImageResourceBuildItem> resourceProducer,\n-            Class<?> className) {\n+            Class<?> className, boolean methods) {\n \n         Class<?>[] impl = ServiceLocator.getInstance().findClasses(className);\n         if (impl != null && impl.length > 0) {\n-            reflective.produce(new ReflectiveClassBuildItem(true, false, false, impl));\n+            reflective.produce(new ReflectiveClassBuildItem(true, methods, false, impl));", "originalCommit": "da25e966d1dcb11455a464338573e220c63d1e71", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYyMTExNA==", "url": "https://github.com/quarkusio/quarkus/pull/8368#discussion_r402621114", "bodyText": "It was my first solution, but I'm getting errors for some classes at native compile time.\nI'll try again and create two class lists.\nDoes it make big different for the native image (compile time) if we register all the classes?", "author": "andrejpetras", "createdAt": "2020-04-02T22:00:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYxNzQwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYzMzI3OA==", "url": "https://github.com/quarkusio/quarkus/pull/8368#discussion_r402633278", "bodyText": "Done, only the LicenseService class needs to be methods=false", "author": "andrejpetras", "createdAt": "2020-04-02T22:30:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYxNzQwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjk1MTE1MA==", "url": "https://github.com/quarkusio/quarkus/pull/8368#discussion_r402951150", "bodyText": "So doing that might include more methods than strictly needed in the native image but I think it's safer.\nAs for the LicenseService it's probably related to the substitutions you had to make there so looks OK to me.", "author": "gsmet", "createdAt": "2020-04-03T11:53:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYxNzQwOA=="}], "type": "inlineReview"}, {"oid": "df122520b434c04846fcb8755e35d53e603e9ff2", "url": "https://github.com/quarkusio/quarkus/commit/df122520b434c04846fcb8755e35d53e603e9ff2", "message": "Register all methods of LiquibaseDataType sub-classes for reflection in native mode", "committedDate": "2020-04-02T22:28:09Z", "type": "commit"}, {"oid": "df122520b434c04846fcb8755e35d53e603e9ff2", "url": "https://github.com/quarkusio/quarkus/commit/df122520b434c04846fcb8755e35d53e603e9ff2", "message": "Register all methods of LiquibaseDataType sub-classes for reflection in native mode", "committedDate": "2020-04-02T22:28:09Z", "type": "forcePushed"}]}