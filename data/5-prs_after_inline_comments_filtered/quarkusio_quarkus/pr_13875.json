{"pr_number": 13875, "pr_title": "Qute - support Mutiny Uni directly in the templates", "pr_createdAt": "2020-12-14T15:10:12Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/13875", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjUxNzgyNA==", "url": "https://github.com/quarkusio/quarkus/pull/13875#discussion_r542517824", "bodyText": "Missing a > in the comment", "author": "cescoffier", "createdAt": "2020-12-14T16:23:25Z", "path": "extensions/qute/deployment/src/main/java/io/quarkus/qute/deployment/QuteProcessor.java", "diffHunk": "@@ -1193,14 +1186,59 @@ static Type extractMatchType(Set<Type> closure, DotName matchName, Function<Type\n             return clazz.typeParameters();\n         }\n \n-        void clear() {\n+        ClassInfo clazz() {\n+            return clazz;\n+        }\n+\n+        Type type() {\n+            return type;\n+        }\n+\n+        boolean isPrimitive() {\n+            return type != null && type.kind() == org.jboss.jandex.Type.Kind.PRIMITIVE;\n+        }\n+\n+        boolean isArray() {\n+            return type != null && type.kind() == org.jboss.jandex.Type.Kind.ARRAY;\n+        }\n+\n+        boolean isParameterizedType() {\n+            return type != null && type.kind() == org.jboss.jandex.Type.Kind.PARAMETERIZED_TYPE;\n+        }\n+\n+        boolean isClass() {\n+            return type != null && type.kind() == org.jboss.jandex.Type.Kind.CLASS;\n+        }\n+\n+        void setValues(ClassInfo clazz, Type type) {\n+            this.clazz = clazz;\n+            this.type = type;\n+            autoExtractType();\n+        }\n+\n+        void clearValues() {\n             clazz = null;\n             type = null;\n         }\n \n         boolean isEmpty() {\n             return clazz == null;\n         }\n+\n+        void autoExtractType() {\n+            boolean hasCompletionStage = ValueResolverGenerator.hasCompletionStageInTypeClosure(clazz, index);\n+            boolean hasUni = hasCompletionStage ? false\n+                    : ValueResolverGenerator.hasClassInTypeClosure(clazz, Names.UNI, index);\n+            if (hasCompletionStage || hasUni) {\n+                Set<Type> closure = Types.getTypeClosure(clazz, Types.buildResolvedMap(\n+                        getParameterizedTypeArguments(), getTypeParameters(), new HashMap<>(), index), index);\n+                Function<Type, Type> firstParamType = t -> t.asParameterizedType().arguments().get(0);\n+                // CompletionStage<List<Item>> => List<Item>\n+                // Uni<List<String> => List<String>", "originalCommit": "8a0722a519b976bb5fefc687a3ca7cfb93013e76", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2718294c8553511ab93d31f6b3b87e14a08214a3", "url": "https://github.com/quarkusio/quarkus/commit/2718294c8553511ab93d31f6b3b87e14a08214a3", "message": "Qute - support Mutiny Uni directly in the templates\n\n- also mention the special handling of CompletionStage and Uni in docs\n\nCo-authored-by: George Gastaldi <gegastaldi@gmail.com>", "committedDate": "2020-12-15T07:33:03Z", "type": "commit"}, {"oid": "2718294c8553511ab93d31f6b3b87e14a08214a3", "url": "https://github.com/quarkusio/quarkus/commit/2718294c8553511ab93d31f6b3b87e14a08214a3", "message": "Qute - support Mutiny Uni directly in the templates\n\n- also mention the special handling of CompletionStage and Uni in docs\n\nCo-authored-by: George Gastaldi <gegastaldi@gmail.com>", "committedDate": "2020-12-15T07:33:03Z", "type": "forcePushed"}]}