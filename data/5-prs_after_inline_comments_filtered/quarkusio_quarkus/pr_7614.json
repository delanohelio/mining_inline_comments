{"pr_number": 7614, "pr_title": "Support for recognizing multiple Quarkus platforms in a project", "pr_createdAt": "2020-03-05T16:34:16Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/7614", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQxNTQxMg==", "url": "https://github.com/quarkusio/quarkus/pull/7614#discussion_r388415412", "bodyText": "Add the exception stacktrace to the debug message", "author": "gastaldi", "createdAt": "2020-03-05T16:37:27Z", "path": "devtools/maven/src/main/java/io/quarkus/maven/BuildFileMojoBase.java", "diffHunk": "@@ -137,6 +131,39 @@ public void execute() throws MojoExecutionException {\n         }\n     }\n \n+    private QuarkusPlatformDescriptor loadPlatformDescriptor(final MavenArtifactResolver mvn, final MessageWriter log,\n+            Artifact descrArtifact) {\n+        return QuarkusJsonPlatformDescriptorResolver.newInstance()\n+                .setArtifactResolver(new BootstrapAppModelResolver(mvn))\n+                .setMessageWriter(log)\n+                .resolveFromJson(descrArtifact.getFile().toPath());\n+    }\n+\n+    private Artifact resolveJsonOrNull(MavenArtifactResolver mvn, String bomGroupId, String bomArtifactId, String bomVersion) {\n+        Artifact jsonArtifact = new DefaultArtifact(bomGroupId, bomArtifactId, null, \"json\", bomVersion);\n+        try {\n+            jsonArtifact = mvn.resolve(jsonArtifact).getArtifact();\n+        } catch (Exception e) {\n+            if (getLog().isDebugEnabled()) {\n+                getLog().debug(\"Failed to resolve JSON descriptor as \" + jsonArtifact);\n+            }\n+            jsonArtifact = new DefaultArtifact(bomGroupId, bomArtifactId + \"-descriptor-json\", null, \"json\",\n+                    bomVersion);\n+            try {\n+                jsonArtifact = mvn.resolve(jsonArtifact).getArtifact();\n+            } catch (Exception e1) {\n+                if (getLog().isDebugEnabled()) {\n+                    getLog().debug(\"Failed to resolve JSON descriptor as \" + jsonArtifact);", "originalCommit": "dd87661a8c16808b676af696774d670e6a11e0d8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc0NzMzMg==", "url": "https://github.com/quarkusio/quarkus/pull/7614#discussion_r388747332", "bodyText": "TBH, I'd rather remove this logging altogether. Given that we are trying every imported BOM here, if it happens to be not a platform BOM is pretty much a usual situation. IMO, logging a stacktrace is going to make look scarier than it actually is.\nThe reason I'd consider removing this log message is that if you enable debug, the resolver itself is going to be pretty verbose about what's been tried and what didn't work.", "author": "aloubyansky", "createdAt": "2020-03-06T07:25:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQxNTQxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQxNTU5OQ==", "url": "https://github.com/quarkusio/quarkus/pull/7614#discussion_r388415599", "bodyText": "Add the exception stacktrace to the log statement", "author": "gastaldi", "createdAt": "2020-03-05T16:37:43Z", "path": "devtools/maven/src/main/java/io/quarkus/maven/BuildFileMojoBase.java", "diffHunk": "@@ -137,6 +131,39 @@ public void execute() throws MojoExecutionException {\n         }\n     }\n \n+    private QuarkusPlatformDescriptor loadPlatformDescriptor(final MavenArtifactResolver mvn, final MessageWriter log,\n+            Artifact descrArtifact) {\n+        return QuarkusJsonPlatformDescriptorResolver.newInstance()\n+                .setArtifactResolver(new BootstrapAppModelResolver(mvn))\n+                .setMessageWriter(log)\n+                .resolveFromJson(descrArtifact.getFile().toPath());\n+    }\n+\n+    private Artifact resolveJsonOrNull(MavenArtifactResolver mvn, String bomGroupId, String bomArtifactId, String bomVersion) {\n+        Artifact jsonArtifact = new DefaultArtifact(bomGroupId, bomArtifactId, null, \"json\", bomVersion);\n+        try {\n+            jsonArtifact = mvn.resolve(jsonArtifact).getArtifact();\n+        } catch (Exception e) {\n+            if (getLog().isDebugEnabled()) {\n+                getLog().debug(\"Failed to resolve JSON descriptor as \" + jsonArtifact);", "originalCommit": "dd87661a8c16808b676af696774d670e6a11e0d8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc0NzQ0Nw==", "url": "https://github.com/quarkusio/quarkus/pull/7614#discussion_r388747447", "bodyText": "Same as above.", "author": "aloubyansky", "createdAt": "2020-03-06T07:25:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQxNTU5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI0OTU3Mg==", "url": "https://github.com/quarkusio/quarkus/pull/7614#discussion_r389249572", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                getLog().debug(\"Failed to resolve version of \" + v);\n          \n          \n            \n                                getLog().debug(\"Failed to resolve version of \" + expr);\n          \n      \n    \n    \n  \n\nBecause v == null \ud83d\ude09", "author": "gastaldi", "createdAt": "2020-03-07T11:53:52Z", "path": "devtools/maven/src/main/java/io/quarkus/maven/BuildFileMojoBase.java", "diffHunk": "@@ -147,7 +174,9 @@ private String resolveValue(String expr, BuildFile buildFile) throws IOException\n         if (expr.startsWith(\"${\") && expr.endsWith(\"}\")) {\n             final String v = buildFile.getProperty(expr.substring(2, expr.length() - 1));\n             if (v == null) {\n-                getLog().debug(\"Failed to resolve version of \" + v);\n+                if (getLog().isDebugEnabled()) {\n+                    getLog().debug(\"Failed to resolve version of \" + v);", "originalCommit": "dd87661a8c16808b676af696774d670e6a11e0d8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMxNDg1Mg==", "url": "https://github.com/quarkusio/quarkus/pull/7614#discussion_r389314852", "bodyText": "Fixed, thanks!", "author": "aloubyansky", "createdAt": "2020-03-07T21:52:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI0OTU3Mg=="}], "type": "inlineReview"}, {"oid": "74a02ef31bf1267ceca67c5aec2479d9122fd946", "url": "https://github.com/quarkusio/quarkus/commit/74a02ef31bf1267ceca67c5aec2479d9122fd946", "message": "Support for recognizing multiple Quarkus platforms in a project (both maven and gradle supported) and merging their descriptors into a single one (with the platforms imported earlier dominating over those imported later) for the tools to be able to list and add extensions.", "committedDate": "2020-03-07T21:52:16Z", "type": "commit"}, {"oid": "74a02ef31bf1267ceca67c5aec2479d9122fd946", "url": "https://github.com/quarkusio/quarkus/commit/74a02ef31bf1267ceca67c5aec2479d9122fd946", "message": "Support for recognizing multiple Quarkus platforms in a project (both maven and gradle supported) and merging their descriptors into a single one (with the platforms imported earlier dominating over those imported later) for the tools to be able to list and add extensions.", "committedDate": "2020-03-07T21:52:16Z", "type": "forcePushed"}]}