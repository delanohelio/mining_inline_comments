{"pr_number": 7107, "pr_title": "Stop dealing with the SunEC library during the native image generation", "pr_createdAt": "2020-02-09T22:44:32Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/7107", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgyMzE0Nw==", "url": "https://github.com/quarkusio/quarkus/pull/7107#discussion_r376823147", "bodyText": "@gsmet Do we want to keep this line? I'd answer no but I'm not sure if it was added for the SunEC lib or some other reason.", "author": "gwenneg", "createdAt": "2020-02-09T22:48:25Z", "path": "core/deployment/src/main/java/io/quarkus/deployment/steps/NativeImageConfigBuildStep.java", "diffHunk": "@@ -91,33 +84,14 @@ void build(SslContextConfigurationRecorder sslContextConfigurationRecorder,\n \n             if (graalVmHome != null) {\n                 Path graalVmLibDirectory = Paths.get(graalVmHome, \"jre\", \"lib\");\n-                Path linuxLibDirectory = graalVmLibDirectory.resolve(\"amd64\");\n-                Path linuxPath = linuxLibDirectory.resolve(LIB_SUN_EC);\n \n                 // We add . as it might be useful in a containerized world\n                 javaLibraryPathAdditionalPath.produce(new JavaLibraryPathAdditionalPathBuildItem(\".\"));", "originalCommit": "56b3b035f88d48919f850387b82bed283954be8d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzAwMzgxNA==", "url": "https://github.com/quarkusio/quarkus/pull/7107#discussion_r377003814", "bodyText": "I think we can remove it.", "author": "gsmet", "createdAt": "2020-02-10T11:20:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgyMzE0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgyMzIyMg==", "url": "https://github.com/quarkusio/quarkus/pull/7107#discussion_r376823222", "bodyText": "I suppose we want to keep this around. I'll need it to be confirmed.", "author": "gwenneg", "createdAt": "2020-02-09T22:49:13Z", "path": "core/deployment/src/main/java/io/quarkus/deployment/steps/NativeImageConfigBuildStep.java", "diffHunk": "@@ -91,33 +84,14 @@ void build(SslContextConfigurationRecorder sslContextConfigurationRecorder,\n \n             if (graalVmHome != null) {\n                 Path graalVmLibDirectory = Paths.get(graalVmHome, \"jre\", \"lib\");\n-                Path linuxLibDirectory = graalVmLibDirectory.resolve(\"amd64\");\n-                Path linuxPath = linuxLibDirectory.resolve(LIB_SUN_EC);\n \n                 // We add . as it might be useful in a containerized world\n                 javaLibraryPathAdditionalPath.produce(new JavaLibraryPathAdditionalPathBuildItem(\".\"));\n-                if (Files.exists(linuxPath)) {\n-                    // On Linux, the SunEC library is in jre/lib/amd64/\n-                    // This is useful for testing or if you have a similar environment in production\n-                    javaLibraryPathAdditionalPath\n-                            .produce(new JavaLibraryPathAdditionalPathBuildItem(linuxLibDirectory.toString()));\n-                } else {\n-                    // On MacOS, the SunEC library is directly in jre/lib/\n-                    // This is useful for testing or if you have a similar environment in production\n-                    javaLibraryPathAdditionalPath\n-                            .produce(new JavaLibraryPathAdditionalPathBuildItem(graalVmLibDirectory.toString()));\n-                }\n \n                 // This is useful for testing but the user will have to override it.\n                 sslTrustStoreSystemProperty.produce(\n                         new SslTrustStoreSystemPropertyBuildItem(\n                                 graalVmLibDirectory.resolve(Paths.get(\"security\", \"cacerts\")).toString()));", "originalCommit": "56b3b035f88d48919f850387b82bed283954be8d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzAwMzc0OQ==", "url": "https://github.com/quarkusio/quarkus/pull/7107#discussion_r377003749", "bodyText": "Yes.", "author": "gsmet", "createdAt": "2020-02-10T11:20:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgyMzIyMg=="}], "type": "inlineReview"}, {"oid": "569fcc9187bbc069c87e68609f4803a14fc3de33", "url": "https://github.com/quarkusio/quarkus/commit/569fcc9187bbc069c87e68609f4803a14fc3de33", "message": "Stop dealing with the SunEC library during the native image generation", "committedDate": "2020-02-09T22:52:17Z", "type": "forcePushed"}, {"oid": "3a86ab243fb2cd9453e63e3b02d0317014c94fbe", "url": "https://github.com/quarkusio/quarkus/commit/3a86ab243fb2cd9453e63e3b02d0317014c94fbe", "message": "Stop dealing with the SunEC library during the native image generation", "committedDate": "2020-02-10T11:54:27Z", "type": "forcePushed"}, {"oid": "cef60d025aea37e17e6127985a762359e5779ff6", "url": "https://github.com/quarkusio/quarkus/commit/cef60d025aea37e17e6127985a762359e5779ff6", "message": "Stop dealing with the SunEC library during the native image generation", "committedDate": "2020-02-10T12:20:26Z", "type": "forcePushed"}, {"oid": "1bfaeed30e8f139e4c8a0584b89dfefa48e15fdd", "url": "https://github.com/quarkusio/quarkus/commit/1bfaeed30e8f139e4c8a0584b89dfefa48e15fdd", "message": "Stop dealing with the SunEC library during the native image generation", "committedDate": "2020-02-10T12:25:24Z", "type": "commit"}, {"oid": "1bfaeed30e8f139e4c8a0584b89dfefa48e15fdd", "url": "https://github.com/quarkusio/quarkus/commit/1bfaeed30e8f139e4c8a0584b89dfefa48e15fdd", "message": "Stop dealing with the SunEC library during the native image generation", "committedDate": "2020-02-10T12:25:24Z", "type": "forcePushed"}]}