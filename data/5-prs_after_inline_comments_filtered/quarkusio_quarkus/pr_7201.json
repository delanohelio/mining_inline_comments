{"pr_number": 7201, "pr_title": "Benefit from the static metadata for GraalVM to have been moved into \u2026", "pr_createdAt": "2020-02-14T15:35:08Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/7201", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5MzY1OQ==", "url": "https://github.com/quarkusio/quarkus/pull/7201#discussion_r379593659", "bodyText": "There's a native test failure that seems related to that line. Was it moved upstream too?", "author": "gwenneg", "createdAt": "2020-02-14T19:00:45Z", "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmReflections.java", "diffHunk": "@@ -1,161 +0,0 @@\n-package io.quarkus.hibernate.orm.deployment;\n-\n-import org.hibernate.tool.hbm2ddl.MultipleLinesSqlCommandExtractor;\n-import org.hibernate.type.EnumType;\n-\n-import antlr.CommonToken;\n-import io.quarkus.deployment.annotations.BuildProducer;\n-import io.quarkus.deployment.annotations.BuildStep;\n-import io.quarkus.deployment.builditem.nativeimage.ReflectiveClassBuildItem;\n-\n-/**\n- * This list of classes which any Hibernate ORM using application should register for reflective access in native mode.\n- * <p>\n- * FIXME Find a reliable way to identify these and maintain the list accurate: the current list\n- * is likely not complete as it was identified via a dumb \"trial&error\" strategy.\n- *\n- * @author Sanne Grinovero <sanne@hibernate.org>\n- */\n-public final class HibernateOrmReflections {\n-\n-    @BuildStep\n-    public void registerCoreReflections(BuildProducer<ReflectiveClassBuildItem> reflectiveClass) {\n-        //Eventlisteners need to be registered for reflection to allow creation via Array#newInstance ;\n-        // types need to be in synch with those declared in org.hibernate.event.spi.EventType\n-        simpleConstructor(reflectiveClass, org.hibernate.event.spi.LoadEventListener[].class);\n-        simpleConstructor(reflectiveClass, org.hibernate.event.spi.ResolveNaturalIdEventListener[].class);\n-        simpleConstructor(reflectiveClass, org.hibernate.event.spi.InitializeCollectionEventListener[].class);\n-        simpleConstructor(reflectiveClass, org.hibernate.event.spi.SaveOrUpdateEventListener[].class);\n-        simpleConstructor(reflectiveClass, org.hibernate.event.spi.PersistEventListener[].class);\n-        simpleConstructor(reflectiveClass, org.hibernate.event.spi.MergeEventListener[].class);\n-        simpleConstructor(reflectiveClass, org.hibernate.event.spi.DeleteEventListener[].class);\n-        simpleConstructor(reflectiveClass, org.hibernate.event.spi.ReplicateEventListener[].class);\n-        simpleConstructor(reflectiveClass, org.hibernate.event.spi.FlushEventListener[].class);\n-        simpleConstructor(reflectiveClass, org.hibernate.event.spi.AutoFlushEventListener[].class);\n-        simpleConstructor(reflectiveClass, org.hibernate.event.spi.DirtyCheckEventListener[].class);\n-        simpleConstructor(reflectiveClass, org.hibernate.event.spi.FlushEntityEventListener[].class);\n-        simpleConstructor(reflectiveClass, org.hibernate.event.spi.ClearEventListener[].class);\n-        simpleConstructor(reflectiveClass, org.hibernate.event.spi.EvictEventListener[].class);\n-        simpleConstructor(reflectiveClass, org.hibernate.event.spi.LockEventListener[].class);\n-        simpleConstructor(reflectiveClass, org.hibernate.event.spi.RefreshEventListener[].class);\n-        simpleConstructor(reflectiveClass, org.hibernate.event.spi.PreLoadEventListener[].class);\n-        simpleConstructor(reflectiveClass, org.hibernate.event.spi.PreDeleteEventListener[].class);\n-        simpleConstructor(reflectiveClass, org.hibernate.event.spi.PreUpdateEventListener[].class);\n-        simpleConstructor(reflectiveClass, org.hibernate.event.spi.PreInsertEventListener[].class);\n-        simpleConstructor(reflectiveClass, org.hibernate.event.spi.PostLoadEventListener[].class);\n-        simpleConstructor(reflectiveClass, org.hibernate.event.spi.PostDeleteEventListener[].class);\n-        simpleConstructor(reflectiveClass, org.hibernate.event.spi.PostUpdateEventListener[].class);\n-        simpleConstructor(reflectiveClass, org.hibernate.event.spi.PostInsertEventListener[].class);\n-        simpleConstructor(reflectiveClass, org.hibernate.event.spi.PreCollectionRecreateEventListener[].class);\n-        simpleConstructor(reflectiveClass, org.hibernate.event.spi.PreCollectionRemoveEventListener[].class);\n-        simpleConstructor(reflectiveClass, org.hibernate.event.spi.PreCollectionUpdateEventListener[].class);\n-        simpleConstructor(reflectiveClass, org.hibernate.event.spi.PostCollectionRecreateEventListener[].class);\n-        simpleConstructor(reflectiveClass, org.hibernate.event.spi.PostCollectionRemoveEventListener[].class);\n-        simpleConstructor(reflectiveClass, org.hibernate.event.spi.PostCollectionUpdateEventListener[].class);\n-\n-        //Various well known needs:\n-        simpleConstructor(reflectiveClass, org.hibernate.tuple.entity.PojoEntityTuplizer.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.tuple.entity.DynamicMapEntityTuplizer.class);\n-        allConstructors(reflectiveClass, org.hibernate.tuple.component.PojoComponentTuplizer.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.tuple.component.DynamicMapComponentTuplizer.class);\n-        allConstructors(reflectiveClass, org.hibernate.persister.collection.OneToManyPersister.class);\n-        allConstructors(reflectiveClass, org.hibernate.persister.collection.BasicCollectionPersister.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.persister.entity.SingleTableEntityPersister.class);\n-        allConstructors(reflectiveClass, org.hibernate.persister.entity.JoinedSubclassEntityPersister.class);\n-        allConstructors(reflectiveClass, org.hibernate.persister.entity.UnionSubclassEntityPersister.class);\n-        simpleConstructor(reflectiveClass,\n-                org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.id.enhanced.SequenceStyleGenerator.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl.class);\n-        simpleConstructor(reflectiveClass,\n-                org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl.class);\n-        simpleConstructor(reflectiveClass, EnumType.class);\n-        simpleConstructor(reflectiveClass, MultipleLinesSqlCommandExtractor.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.HqlToken.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.Node.class);\n-\n-        //ANTLR tokens:\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.SelectClause.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.HqlSqlWalkerNode.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.MethodNode.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.AbstractStatement.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.EntityJoinFromElement.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.UnaryLogicOperatorNode.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.NullNode.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.IntoClause.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.AbstractRestrictableStatement.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.UpdateStatement.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.SelectExpressionImpl.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.CastFunctionNode.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.MapKeyEntityFromElement.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.DeleteStatement.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.SqlNode.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.SearchedCaseNode.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.FromElement.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.JavaConstantNode.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.SelectExpressionList.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.SqlFragment.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.MapKeyNode.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.ImpliedFromElement.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.IsNotNullLogicOperatorNode.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.InsertStatement.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.UnaryArithmeticNode.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.CollectionFunction.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.BinaryLogicOperatorNode.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.CountNode.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.IsNullLogicOperatorNode.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.IdentNode.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.ComponentJoin.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.ParameterNode.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.AbstractSelectExpression.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.MapEntryNode.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.MapValueNode.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.InLogicOperatorNode.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.IndexNode.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.AbstractNullnessCheckNode.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.DotNode.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.ResultVariableRefNode.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.BetweenOperatorNode.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.AggregateNode.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.QueryNode.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.BooleanLiteralNode.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.SimpleCaseNode.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.AbstractMapComponentNode.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.FromReferenceNode.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.OrderByClause.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.FromClause.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.ConstructorNode.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.LiteralNode.class);\n-        simpleConstructor(reflectiveClass, org.hibernate.hql.internal.ast.tree.BinaryArithmeticOperatorNode.class);\n-        simpleConstructor(reflectiveClass, CommonToken.class);", "originalCommit": "c9d4d6be2172fb6c30484a40d8a85c0e64a7a525", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg1MzczNA==", "url": "https://github.com/quarkusio/quarkus/pull/7201#discussion_r379853734", "bodyText": "thanks, looks like something is wrong.  The upstream metadata is rather different, I've been trying to optimise it further - I did run all Quarkus tests during its development, but looks like I screwed something up during the last polishing phase. I'll re-introduce this file so to add the missing entry.", "author": "Sanne", "createdAt": "2020-02-15T20:19:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5MzY1OQ=="}], "type": "inlineReview"}, {"oid": "d667cbace35899fa916ce95819dc4b8ecd6ce4d4", "url": "https://github.com/quarkusio/quarkus/commit/d667cbace35899fa916ce95819dc4b8ecd6ce4d4", "message": "Benefit from the static metadata for GraalVM to have been moved into Hibernate ORM upstream", "committedDate": "2020-02-15T20:23:53Z", "type": "forcePushed"}, {"oid": "52b6a705c45a62b0a3d339cd6ca9b1165a203420", "url": "https://github.com/quarkusio/quarkus/commit/52b6a705c45a62b0a3d339cd6ca9b1165a203420", "message": "Benefit from the static metadata for GraalVM to have been moved into Hibernate ORM upstream", "committedDate": "2020-02-17T08:48:14Z", "type": "forcePushed"}, {"oid": "241dc343e08bc93ce43a882fbe4de321c28d9e44", "url": "https://github.com/quarkusio/quarkus/commit/241dc343e08bc93ce43a882fbe4de321c28d9e44", "message": "Benefit from the static metadata for GraalVM to have been moved into Hibernate ORM upstream", "committedDate": "2020-02-18T21:55:56Z", "type": "commit"}, {"oid": "241dc343e08bc93ce43a882fbe4de321c28d9e44", "url": "https://github.com/quarkusio/quarkus/commit/241dc343e08bc93ce43a882fbe4de321c28d9e44", "message": "Benefit from the static metadata for GraalVM to have been moved into Hibernate ORM upstream", "committedDate": "2020-02-18T21:55:56Z", "type": "forcePushed"}]}