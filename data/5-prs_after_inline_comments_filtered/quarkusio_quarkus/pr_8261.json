{"pr_number": 8261, "pr_title": "Amazon Alexa extension for Quarkus Native integration with AWS Lambda", "pr_createdAt": "2020-03-30T06:32:01Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/8261", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk4NDI0Nw==", "url": "https://github.com/quarkusio/quarkus/pull/8261#discussion_r399984247", "bodyText": "Can we try and use Jandex to do this?\nThat is pretty much what all the other extensions do.", "author": "geoand", "createdAt": "2020-03-30T07:38:53Z", "path": "extensions/amazon-lambda-alexa/deployment/src/main/java/io/quarkus/amazon/lambda/alexa/AlexaProcessor.java", "diffHunk": "@@ -0,0 +1,33 @@\n+package io.quarkus.amazon.lambda.alexa;\n+\n+import java.util.Set;\n+\n+import org.reflections.Reflections;\n+\n+import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n+\n+import io.quarkus.deployment.annotations.BuildProducer;\n+import io.quarkus.deployment.annotations.BuildStep;\n+import io.quarkus.deployment.builditem.nativeimage.NativeImageProxyDefinitionBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ReflectiveClassBuildItem;\n+import io.quarkus.deployment.pkg.steps.NativeBuild;\n+\n+public class AlexaProcessor {\n+\n+    @BuildStep(onlyIf = NativeBuild.class)\n+    public void reflection(BuildProducer<ReflectiveClassBuildItem> reflectiveClass) {\n+\n+        Reflections reflections = new Reflections(\"com.amazon.ask\");\n+        Set<Class<?>> types = reflections.getTypesAnnotatedWith(JsonDeserialize.class);\n+\n+        types.forEach(type -> reflectiveClass\n+                .produce(new ReflectiveClassBuildItem(true, true, type.getName(), type.getName() + \"$Builder\")));", "originalCommit": "a7cd7a8d177edcc14eb44f99ab161132c2913225", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA2NDgzMg==", "url": "https://github.com/quarkusio/quarkus/pull/8261#discussion_r400064832", "bodyText": "Also, I think we should do that in the Jackson extension and just have this one depend on the Jackson extension.", "author": "gsmet", "createdAt": "2020-03-30T09:52:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk4NDI0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA5NjcyMw==", "url": "https://github.com/quarkusio/quarkus/pull/8261#discussion_r400096723", "bodyText": "Yes, I was thinking it would be nice to have standard functionality that could automatically scan the class path and identify the JsonDeserialize usage.  The one caveat to this is that the Alexa ASK SDK also has a static Builder inner class, that requires ClassName$Builder to be added.", "author": "oztimpower", "createdAt": "2020-03-30T10:47:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk4NDI0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIxNTk3OA==", "url": "https://github.com/quarkusio/quarkus/pull/8261#discussion_r400215978", "bodyText": "Interestingly the Jackson extension potentially does have code to handle this & the builder already, yet it doesn't seem to pickup the JsonDeserialize annotation.\nThe combinedBuildIndex is small in size.\n  // handle the various @JsonDeserialize cases\n        for (AnnotationInstance deserializeInstance : index.getAnnotations(JSON_DESERIALIZE)) {\n            AnnotationTarget annotationTarget = deserializeInstance.target();\n            if (CLASS.equals(annotationTarget.kind())) {\n                DotName dotName = annotationTarget.asClass().name();\n                if (!ignoredDotNames.contains(dotName)) {\n                    addReflectiveHierarchyClass(dotName);\n                }\n\n                AnnotationValue annotationValue = deserializeInstance.value(\"builder\");\n                if (null != annotationValue && AnnotationValue.Kind.CLASS.equals(annotationValue.kind())) {\n                    DotName builderClassName = annotationValue.asClass().name();\n                    if (!BUILDER_VOID.equals(builderClassName)) {\n                        addReflectiveHierarchyClass(builderClassName);\n                    }\n                }\n            }\n    }", "author": "oztimpower", "createdAt": "2020-03-30T14:02:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk4NDI0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIxODUzOQ==", "url": "https://github.com/quarkusio/quarkus/pull/8261#discussion_r400218539", "bodyText": "You might need to create an IndexDependencyBuildItem in order to get that dependency into the inde (if it's not already in).", "author": "geoand", "createdAt": "2020-03-30T14:05:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk4NDI0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDcwODkyOQ==", "url": "https://github.com/quarkusio/quarkus/pull/8261#discussion_r400708929", "bodyText": "Got this working with Jandex, using the IndexDependencyBuildItem as a BuildStep.\nCode is quite simple now, all it does is draw in the Alexa dependencies, and then it uses the Jackson extension to do the work of identifying the JsonDeserialize & Builder classes.\nThanks to @stuartwdouglas for helping me today.", "author": "oztimpower", "createdAt": "2020-03-31T07:49:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk4NDI0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDcxMDg1NA==", "url": "https://github.com/quarkusio/quarkus/pull/8261#discussion_r400710854", "bodyText": "Excellent!", "author": "geoand", "createdAt": "2020-03-31T07:52:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk4NDI0Nw=="}], "type": "inlineReview"}, {"oid": "1da256a4dfab0b4bf23bd02395070dc9e6b1d17f", "url": "https://github.com/quarkusio/quarkus/commit/1da256a4dfab0b4bf23bd02395070dc9e6b1d17f", "message": "Modify to use with Jandex\nRename to Amazon Alexa", "committedDate": "2020-03-31T06:53:22Z", "type": "forcePushed"}, {"oid": "f9553cfcc82054e0f8c1ef99981714be83d4e730", "url": "https://github.com/quarkusio/quarkus/commit/f9553cfcc82054e0f8c1ef99981714be83d4e730", "message": "Modify to use with Jandex, Rename to Amazon Alexa", "committedDate": "2020-03-31T07:43:49Z", "type": "forcePushed"}, {"oid": "1a7dea439e45966da189c4261282c22837321771", "url": "https://github.com/quarkusio/quarkus/commit/1a7dea439e45966da189c4261282c22837321771", "message": "Modify to use with Jandex, Rename to Amazon Alexa", "committedDate": "2020-03-31T12:59:41Z", "type": "commit"}, {"oid": "1a7dea439e45966da189c4261282c22837321771", "url": "https://github.com/quarkusio/quarkus/commit/1a7dea439e45966da189c4261282c22837321771", "message": "Modify to use with Jandex, Rename to Amazon Alexa", "committedDate": "2020-03-31T12:59:41Z", "type": "forcePushed"}]}