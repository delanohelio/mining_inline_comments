{"pr_number": 11050, "pr_title": "Qute - improve content type detection", "pr_createdAt": "2020-07-29T06:31:49Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/11050", "timeline": [{"oid": "8dabad151f676f39e0bff48c9ec3e80fae3d3bb3", "url": "https://github.com/quarkusio/quarkus/commit/8dabad151f676f39e0bff48c9ec3e80fae3d3bb3", "message": "Qute - improve content type detection\n\n- add config property for additional mappings\n- resolves #10991", "committedDate": "2020-07-29T06:30:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI3MTM5MA==", "url": "https://github.com/quarkusio/quarkus/pull/11050#discussion_r462271390", "bodyText": "We could use Files.probeContentType too (or instead?) to take advantage of libraries that register their own java.nio.file.spi.FileTypeDetector through the ServiceLoader mechanism", "author": "gastaldi", "createdAt": "2020-07-29T12:48:40Z", "path": "extensions/qute/runtime/src/main/java/io/quarkus/qute/runtime/ContentTypes.java", "diffHunk": "@@ -0,0 +1,50 @@\n+package io.quarkus.qute.runtime;\n+\n+import java.net.URLConnection;\n+\n+import javax.inject.Inject;\n+import javax.inject.Singleton;\n+\n+import org.jboss.logging.Logger;\n+\n+import io.quarkus.qute.Variant;\n+\n+@Singleton\n+public class ContentTypes {\n+\n+    private static final Logger LOGGER = Logger.getLogger(ContentTypes.class);\n+\n+    @Inject\n+    QuteConfig config;\n+\n+    /**\n+     * \n+     * @param templatePath The path relative to the template root, uses the {@code /} path separator.\n+     * @return the content type\n+     */\n+    public String getContentType(String templatePath) {\n+        String fileName = templatePath;\n+        int slashIdx = fileName.lastIndexOf('/');\n+        if (slashIdx != -1) {\n+            fileName = fileName.substring(slashIdx, fileName.length());\n+        }\n+        int dotIdx = fileName.lastIndexOf('.');\n+        if (dotIdx != -1) {\n+            String suffix = fileName.substring(dotIdx + 1, fileName.length());\n+            String additionalContentType = config.contentTypes.get(suffix);\n+            if (additionalContentType != null) {\n+                return additionalContentType;\n+            }\n+            if (suffix.equalsIgnoreCase(\"json\")) {\n+                return Variant.APPLICATION_JSON;\n+            }\n+            String contentType = URLConnection.getFileNameMap().getContentTypeFor(fileName);", "originalCommit": "8dabad151f676f39e0bff48c9ec3e80fae3d3bb3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjgyNDEwMg==", "url": "https://github.com/quarkusio/quarkus/pull/11050#discussion_r462824102", "bodyText": "I was thinking about Files.probeContentType() too but given the fact that the result may differ, based on the OS or presence of other libraries, I decided to choose the simple and straightforward solution for now. Also it seems that the default FileTypeDetector impl is makes use of URLConnection.getFileNameMap() anyway...", "author": "mkouba", "createdAt": "2020-07-30T08:08:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI3MTM5MA=="}], "type": "inlineReview"}]}