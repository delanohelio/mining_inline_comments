{"pr_number": 6990, "pr_title": "ArC - improve performance of Reflections.findX() methods", "pr_createdAt": "2020-02-04T13:41:49Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/6990", "timeline": [{"oid": "88ca9511cdbb51b20f63f678aea523d35ab9fd4f", "url": "https://github.com/quarkusio/quarkus/commit/88ca9511cdbb51b20f63f678aea523d35ab9fd4f", "message": "ArC - improve performance of Reflections.findX() methods\n\n- resolves #6959", "committedDate": "2020-02-04T13:31:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDY3NzkxNw==", "url": "https://github.com/quarkusio/quarkus/pull/6990#discussion_r374677917", "bodyText": "Could you try with:\n\nremoving the finals here and in the other key class\ncaching the hashCode in the constructor\nnot using Objects.hash(clazz, methodName) as it does one more array allocation\n\nThat's what I did in HV and it was beneficial. If it doesn't make any significant difference, we can keep it your way but as you have a benchmark and we are optimizing things, it's worth a quick check IMHO", "author": "gsmet", "createdAt": "2020-02-04T13:46:40Z", "path": "independent-projects/arc/runtime/src/main/java/io/quarkus/arc/impl/Reflections.java", "diffHunk": "@@ -148,4 +197,74 @@ public static Object invokeMethod(Class<?> clazz, String name, Class<?>[] paramT\n         }\n     }\n \n+    static final class MethodKey {\n+\n+        final Class<?> clazz;\n+        final String methodName;\n+        final Class<?>[] parameterTypes;", "originalCommit": "88ca9511cdbb51b20f63f678aea523d35ab9fd4f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDY3OTMyNw==", "url": "https://github.com/quarkusio/quarkus/pull/6990#discussion_r374679327", "bodyText": "I can give it a try!", "author": "mkouba", "createdAt": "2020-02-04T13:49:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDY3NzkxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDY4MDAzNA==", "url": "https://github.com/quarkusio/quarkus/pull/6990#discussion_r374680034", "bodyText": "Btw, the remark on Objects.hash() is also valid for the Method one.", "author": "gsmet", "createdAt": "2020-02-04T13:50:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDY3NzkxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDY4Mzk1OQ==", "url": "https://github.com/quarkusio/quarkus/pull/6990#discussion_r374683959", "bodyText": "After giving it some thoughts, let's keep the finals and just experiment with the rest.\nIt's a bit different than in HV as you don't really publish these maps safely before accessing them in a multi-threaded environments.", "author": "gsmet", "createdAt": "2020-02-04T13:57:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDY3NzkxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc0MTQ0OA==", "url": "https://github.com/quarkusio/quarkus/pull/6990#discussion_r374741448", "bodyText": "So I've tried to cache the hashCodes and the results are:\nBenchmark                         Mode  Cnt         Score         Error  Units\nReflectionsBenchmark.findField   thrpt   25  70640655,243 \u00b1 1919015,675  ops/s\nReflectionsBenchmark.findMethod  thrpt   25  57293358,785 \u00b1 1065670,627  ops/s\n\nNow I'm going to replace the Objects.hash() ...", "author": "mkouba", "createdAt": "2020-02-04T15:29:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDY3NzkxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc0Nzk2Mg==", "url": "https://github.com/quarkusio/quarkus/pull/6990#discussion_r374747962", "bodyText": "Benchmark                         Mode  Cnt          Score         Error  Units\nReflectionsBenchmark.findField   thrpt   25  104686242,346 \u00b1 3802225,528  ops/s\nReflectionsBenchmark.findMethod  thrpt   25   81447915,881 \u00b1  661570,727  ops/s\n\nAwesome, thanks for your tips ;-)", "author": "mkouba", "createdAt": "2020-02-04T15:39:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDY3NzkxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc0OTQzOA==", "url": "https://github.com/quarkusio/quarkus/pull/6990#discussion_r374749438", "bodyText": "Yeah, we have a lot of pressure on the memory in HV as the path is really very optimized CPU-wise so we ended up with all sort of tricks to optimize the map lookups :).\nGlad it could be of use for another project.", "author": "gsmet", "createdAt": "2020-02-04T15:42:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDY3NzkxNw=="}], "type": "inlineReview"}, {"oid": "5812f7bb8a4800fcad1ca8f5b4217539fa048cb9", "url": "https://github.com/quarkusio/quarkus/commit/5812f7bb8a4800fcad1ca8f5b4217539fa048cb9", "message": "Reflections - cache key hashCodes and get rid of Objects.hashCode()", "committedDate": "2020-02-04T15:40:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc1MDUxMA==", "url": "https://github.com/quarkusio/quarkus/pull/6990#discussion_r374750510", "bodyText": "Maybe move that part to a buildHashCode method? :)", "author": "gsmet", "createdAt": "2020-02-04T15:43:34Z", "path": "independent-projects/arc/runtime/src/main/java/io/quarkus/arc/impl/Reflections.java", "diffHunk": "@@ -148,4 +197,84 @@ public static Object invokeMethod(Class<?> clazz, String name, Class<?>[] paramT\n         }\n     }\n \n+    static final class MethodKey {\n+\n+        final Class<?> clazz;\n+        final String methodName;\n+        final Class<?>[] parameterTypes;\n+        final int hashCode;\n+\n+        public MethodKey(Class<?> clazz, String methodName, Class<?>[] parameterTypes) {\n+            this.clazz = clazz;\n+            this.methodName = methodName;\n+            this.parameterTypes = parameterTypes;\n+            final int prime = 31;\n+            int result = 1;\n+            result = prime * result + Arrays.hashCode(parameterTypes);\n+            result = prime * result + ((clazz == null) ? 0 : clazz.hashCode());\n+            result = prime * result + ((methodName == null) ? 0 : methodName.hashCode());\n+            this.hashCode = result;", "originalCommit": "5812f7bb8a4800fcad1ca8f5b4217539fa048cb9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc1MTY0MA==", "url": "https://github.com/quarkusio/quarkus/pull/6990#discussion_r374751640", "bodyText": "I don't think it's necessary to create a separate method for this ;-).", "author": "mkouba", "createdAt": "2020-02-04T15:45:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc1MDUxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc1NDg0Mg==", "url": "https://github.com/quarkusio/quarkus/pull/6990#discussion_r374754842", "bodyText": "As you prefer. Looks good to me, then!", "author": "gsmet", "createdAt": "2020-02-04T15:50:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc1MDUxMA=="}], "type": "inlineReview"}]}