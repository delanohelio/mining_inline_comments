{"pr_number": 10088, "pr_title": "Optimize ArcContextProvider", "pr_createdAt": "2020-06-18T09:37:27Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/10088", "timeline": [{"oid": "07d95f97a1102588ed15e53d7e76a0da262042b0", "url": "https://github.com/quarkusio/quarkus/commit/07d95f97a1102588ed15e53d7e76a0da262042b0", "message": "Optimize ArcContextProvider\n\n- reuse snapshot instances if possible", "committedDate": "2020-06-18T09:51:54Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY3NDA3Mw==", "url": "https://github.com/quarkusio/quarkus/pull/10088#discussion_r442674073", "bodyText": "I think this is actually wrong - you won't share the ContextState which mean any changes into the context on new thread (newly created beans) won't propagate back to the original active context. E.g. the \"backward propagation\" will break.\nBut scrambling through the code, I don't this this is tested on MP CP level(which it should be), there is only ArC ContextState test here.", "author": "manovotn", "createdAt": "2020-06-19T07:19:59Z", "path": "extensions/arc/runtime/src/main/java/io/quarkus/arc/runtime/context/ArcContextProvider.java", "diffHunk": "@@ -34,59 +39,18 @@ public ThreadContextSnapshot currentContext(Map<String, String> map) {\n         }\n \n         // capture the state, null indicates no active context while capturing snapshot\n-        InjectableContext.ContextState state = isContextActiveOnThisThread(arc) ? arc.requestContext().getState() : null;\n-        return new ThreadContextSnapshot() {\n-            @Override\n-            public ThreadContextController begin() {\n-                // can be called later on, we should retrieve the container again\n-                ArcContainer arcContainer = Arc.container();\n-                if (arcContainer == null || !arcContainer.isRunning()) {\n-                    //this happens on shutdown, if we blow up here it can break shutdown, and stop\n-                    //resources from being cleaned up, causing tests to fail\n-                    return NOOP_CONTROLLER;\n-                }\n-                ThreadContextController controller;\n-                ManagedContext requestContext = arcContainer.requestContext();\n-                // this is executed on another thread, context can but doesn't need to be active here\n-                if (ArcContextProvider.this.isContextActiveOnThisThread(arcContainer)) {\n-                    // context active, store current state, feed it new one and restore state afterwards\n-                    InjectableContext.ContextState stateToRestore = requestContext.getState();\n-                    requestContext.deactivate();\n-                    if (state != null) {\n-                        // only activate if previous thread had it active\n-                        requestContext.activate(state);\n-                    }\n-                    controller = new ThreadContextController() {\n-                        @Override\n-                        public void endContext() throws IllegalStateException {\n-                            // clean up, reactivate context with previous values\n-                            if (state != null) {\n-                                // only deactivate if previous thread had it active\n-                                requestContext.deactivate();\n-                            }\n-                            requestContext.activate(stateToRestore);\n-                        }\n-                    };\n-                } else {\n-                    // context not active, activate and pass it new instance, deactivate afterwards\n-                    if (state != null) {\n-                        // only activate if previous thread had it active\n-                        requestContext.activate(state);\n-\n-                    }\n-                    controller = new ThreadContextController() {\n-                        @Override\n-                        public void endContext() throws IllegalStateException {\n-                            if (state != null) {\n-                                // only deactivate if previous thread had it active\n-                                requestContext.deactivate();\n-                            }\n-                        }\n-                    };\n-                }\n-                return controller;\n-            }\n-        };\n+        InjectableContext.ContextState state = null;\n+        ManagedContext requestContext = arc.requestContext();\n+        if (requestContext.isActive()) {\n+            state = requestContext.getState();\n+        }\n+        if (state == null) {\n+            return NULL_CONTEXT_SNAPSHOT;\n+        } else if (state.isEmpty()) {\n+            return EMPTY_CONTEXT_SNAPSHOT;", "originalCommit": "07d95f97a1102588ed15e53d7e76a0da262042b0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY3ODQ3Mw==", "url": "https://github.com/quarkusio/quarkus/pull/10088#discussion_r442678473", "bodyText": "Yes, you're right and it's a pity... I'll update the PR accordingly :-(", "author": "mkouba", "createdAt": "2020-06-19T07:29:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY3NDA3Mw=="}], "type": "inlineReview"}, {"oid": "5c6db265a9d9b3e98dba5063eb2b1e085f872471", "url": "https://github.com/quarkusio/quarkus/commit/5c6db265a9d9b3e98dba5063eb2b1e085f872471", "message": "Optimize ArcContextProvider\n\n- reuse snapshot instances if possible", "committedDate": "2020-06-23T09:35:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY5NjE5Ng==", "url": "https://github.com/quarkusio/quarkus/pull/10088#discussion_r444696196", "bodyText": "This util method (and its overriden version in req. context impl) is not used anywhere, do you still want to keep it?", "author": "manovotn", "createdAt": "2020-06-24T07:25:09Z", "path": "independent-projects/arc/runtime/src/main/java/io/quarkus/arc/InjectableContext.java", "diffHunk": "@@ -61,5 +60,13 @@ default boolean isNormal() {\n          */\n         Map<InjectableBean<?>, Object> getContextualInstances();\n \n+        /**\n+         * \n+         * @return {@code true} if there are no contextual instances stored in the context\n+         */\n+        default boolean isEmpty() {", "originalCommit": "5c6db265a9d9b3e98dba5063eb2b1e085f872471", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDcwNzA2Nw==", "url": "https://github.com/quarkusio/quarkus/pull/10088#discussion_r444707067", "bodyText": "Nope. Let's remove it!", "author": "mkouba", "createdAt": "2020-06-24T07:46:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY5NjE5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDcxNDQ4NQ==", "url": "https://github.com/quarkusio/quarkus/pull/10088#discussion_r444714485", "bodyText": "Done.", "author": "mkouba", "createdAt": "2020-06-24T08:00:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY5NjE5Ng=="}], "type": "inlineReview"}, {"oid": "3c65c824239ce65cc65854b1ce51436603365f6e", "url": "https://github.com/quarkusio/quarkus/commit/3c65c824239ce65cc65854b1ce51436603365f6e", "message": "Optimize ArcContextProvider\n\n- reuse snapshot instances if possible", "committedDate": "2020-06-24T07:59:50Z", "type": "commit"}, {"oid": "3c65c824239ce65cc65854b1ce51436603365f6e", "url": "https://github.com/quarkusio/quarkus/commit/3c65c824239ce65cc65854b1ce51436603365f6e", "message": "Optimize ArcContextProvider\n\n- reuse snapshot instances if possible", "committedDate": "2020-06-24T07:59:50Z", "type": "forcePushed"}]}