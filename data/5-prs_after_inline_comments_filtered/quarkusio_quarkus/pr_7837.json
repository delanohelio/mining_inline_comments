{"pr_number": 7837, "pr_title": "ArC - transform unproxyable bean classes by default", "pr_createdAt": "2020-03-13T10:13:11Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/7837", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI3NDU1Ng==", "url": "https://github.com/quarkusio/quarkus/pull/7837#discussion_r392274556", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Deprecated\n          \n          \n            \n                @Deprecated(forRemoval=true)", "author": "geoand", "createdAt": "2020-03-13T14:49:02Z", "path": "extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/ArcConfig.java", "diffHunk": "@@ -54,13 +52,25 @@\n     /**\n      * If set to true, Arc will transform the bytecode of beans containing methods that need to be proxyable\n      * but have been declared as final. The transformation is simply a matter of removing final.\n-     * This ensures that a proxy can be created properly.\n+     * This ensures that a proxy/subclass can be created properly.\n      * If the value is set to false, then an exception is thrown at build time indicating\n      * that a proxy could not be created because a method was final.\n+     * \n+     * @deprecated This config property is ignored and will be removed at some point post Quarkus 1.4\n+     * @see #transformUnproxyableClasses\n      */\n+    @Deprecated", "originalCommit": "bd54dd64b0ccf1a52a93b8071bf3f2ddb1d34752", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI3NjY0MQ==", "url": "https://github.com/quarkusio/quarkus/pull/7837#discussion_r392276641", "bodyText": "Hm, forRemoval is JDK9+. Is it required to build quarkus? Our pom still targets 1.8... and I'm still using JDK8 ;-).", "author": "mkouba", "createdAt": "2020-03-13T14:52:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI3NDU1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI3NzUxNQ==", "url": "https://github.com/quarkusio/quarkus/pull/7837#discussion_r392277515", "bodyText": "Ah damn it... You are right! I had just switched to JDK 11 in my IDE and didn't realize that this was a JDK 8+ thing since I was so used to viewing JDK 8 sources :)", "author": "geoand", "createdAt": "2020-03-13T14:53:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI3NDU1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI3OTMzNQ==", "url": "https://github.com/quarkusio/quarkus/pull/7837#discussion_r392279335", "bodyText": "I think this comment needs to be augmented, right? Since the transformation isn't only about removing final anymore", "author": "geoand", "createdAt": "2020-03-13T14:56:38Z", "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/BeanProcessor.java", "diffHunk": "@@ -403,8 +413,26 @@ public Builder addRemovalExclusion(Predicate<BeanInfo> exclusion) {\n             return this;\n         }\n \n+        /**\n+         * \n+         * @param removeFinalForProxyableMethods\n+         * @return self\n+         * @deprecated This method will be removed at some point post Quarkus 1.4\n+         */\n+        @Deprecated\n         public Builder setRemoveFinalFromProxyableMethods(boolean removeFinalForProxyableMethods) {\n-            this.removeFinalForProxyableMethods = removeFinalForProxyableMethods;\n+            return this;\n+        }\n+\n+        /**\n+         * If set to true the container will attempt to remove the final flag from a bean class that must be proxyable during", "originalCommit": "bd54dd64b0ccf1a52a93b8071bf3f2ddb1d34752", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI4MjQxNw==", "url": "https://github.com/quarkusio/quarkus/pull/7837#discussion_r392282417", "bodyText": "These tests are great! I think that having a extra test where the bean extends some class that doesn't have a no-args constructor would be beneficial - to ensure that a build error is encountered. I don't think I saw such a test.", "author": "geoand", "createdAt": "2020-03-13T15:01:35Z", "path": "extensions/arc/deployment/src/test/java/io/quarkus/arc/test/unproxyable/PrivateNoArgsConstructorDoNotChangeFlagTest.java", "diffHunk": "@@ -0,0 +1,48 @@\n+package io.quarkus.arc.test.unproxyable;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.inject.spi.DeploymentException;\n+\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.asset.StringAsset;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+\n+import io.quarkus.arc.Unremovable;\n+import io.quarkus.test.QuarkusUnitTest;\n+\n+public class PrivateNoArgsConstructorDoNotChangeFlagTest {", "originalCommit": "bd54dd64b0ccf1a52a93b8071bf3f2ddb1d34752", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI4MzkwNA==", "url": "https://github.com/quarkusio/quarkus/pull/7837#discussion_r392283904", "bodyText": "There is/was FailedToAddMissingNoargsConstructorTest... is that what you mean?", "author": "mkouba", "createdAt": "2020-03-13T15:03:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI4MjQxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI5MTE5NQ==", "url": "https://github.com/quarkusio/quarkus/pull/7837#discussion_r392291195", "bodyText": "Oh yes! That is exactly what I meant. I missed that one", "author": "geoand", "createdAt": "2020-03-13T15:15:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI4MjQxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA0MDYyOQ==", "url": "https://github.com/quarkusio/quarkus/pull/7837#discussion_r393040629", "bodyText": "Minor - aren't you going to miss the closing tag here? Line 28 still has <p>...", "author": "manovotn", "createdAt": "2020-03-16T13:57:52Z", "path": "extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/ArcConfig.java", "diffHunk": "@@ -37,7 +36,6 @@\n      * <li>does not declare any producer which is eligible for injection to any injection point,</li>\n      * <li>is not directly eligible for injection into any {@link javax.enterprise.inject.Instance} injection point</li>\n      * </ul>\n-     * </p>", "originalCommit": "d9ea47d4779796308beb649e179124da9e9ef2bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA3NzYyMg==", "url": "https://github.com/quarkusio/quarkus/pull/7837#discussion_r393077622", "bodyText": "That's ok in javadoc....", "author": "mkouba", "createdAt": "2020-03-16T14:43:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA0MDYyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEwMTkyNA==", "url": "https://github.com/quarkusio/quarkus/pull/7837#discussion_r393101924", "bodyText": "I know, just noted it here since I caught a glimpse of it. Doesn't really matter :)", "author": "manovotn", "createdAt": "2020-03-16T15:17:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA0MDYyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA0NjAxNA==", "url": "https://github.com/quarkusio/quarkus/pull/7837#discussion_r393046014", "bodyText": "Do we have a substitute for this now or do we just drop it?", "author": "manovotn", "createdAt": "2020-03-16T14:05:45Z", "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/BeanDeploymentValidator.java", "diffHunk": "@@ -23,11 +23,14 @@ default void validate(ValidationContext context) {\n     }\n \n     /**\n+     * This method is deprecated and is not used internally.\n      * \n      * @param target\n      * @param rule\n      * @return {@code true} if the given validation rule should be skipped for the specified target\n+     * @deprecated This method will be removed at some point post Quarkus 1.4\n      */\n+    @Deprecated", "originalCommit": "d9ea47d4779796308beb649e179124da9e9ef2bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA3ODEwMA==", "url": "https://github.com/quarkusio/quarkus/pull/7837#discussion_r393078100", "bodyText": "I think that we should just drop it.", "author": "mkouba", "createdAt": "2020-03-16T14:44:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA0NjAxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEwMDY1OA==", "url": "https://github.com/quarkusio/quarkus/pull/7837#discussion_r393100658", "bodyText": "Probably yes, I was just wondering since the deprecation doesn't mention it.", "author": "manovotn", "createdAt": "2020-03-16T15:15:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA0NjAxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA1MTI5Mg==", "url": "https://github.com/quarkusio/quarkus/pull/7837#discussion_r393051292", "bodyText": "Why unsupported as opposed to just no-op? Also a comment would be nice to know that this is only for test container and is not going to be actually invoked.", "author": "manovotn", "createdAt": "2020-03-16T14:13:31Z", "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/BeanProcessor.java", "diffHunk": "@@ -223,16 +232,17 @@ public BeanDeployment getBeanDeployment() {\n     }\n \n     public BeanDeployment process() throws IOException {\n-        registerCustomContexts();\n-        registerBeans();\n-        registerSyntheticObservers();\n-        initialize(new Consumer<BytecodeTransformer>() {\n+        Consumer<BytecodeTransformer> unsupportedBytecodeTransformer = new Consumer<BytecodeTransformer>() {\n             @Override\n             public void accept(BytecodeTransformer transformer) {\n-\n+                throw new UnsupportedOperationException();", "originalCommit": "d9ea47d4779796308beb649e179124da9e9ef2bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA4MDQ0Mg==", "url": "https://github.com/quarkusio/quarkus/pull/7837#discussion_r393080442", "bodyText": "\"no-op\" would just cause a problem later... In theory, it can be used for non-test scenarios as well. From my POV it's just illegal state if transformUnproxyableClasses=true and no valid Consumer<BytecodeTransformer> is provided.", "author": "mkouba", "createdAt": "2020-03-16T14:47:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA1MTI5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEwMTYwMg==", "url": "https://github.com/quarkusio/quarkus/pull/7837#discussion_r393101602", "bodyText": "it's just illegal state if transformUnproxyableClasses=true and no valid Consumer is provided.\n\nFair enough, that makes sense.", "author": "manovotn", "createdAt": "2020-03-16T15:17:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA1MTI5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA1MzE1NQ==", "url": "https://github.com/quarkusio/quarkus/pull/7837#discussion_r393053155", "bodyText": "Add @see setRemoveFinalFromProxyableMethods(boolean)`.", "author": "manovotn", "createdAt": "2020-03-16T14:15:15Z", "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/BeanProcessor.java", "diffHunk": "@@ -403,8 +413,25 @@ public Builder addRemovalExclusion(Predicate<BeanInfo> exclusion) {\n             return this;\n         }\n \n+        /**\n+         * \n+         * @param removeFinalForProxyableMethods\n+         * @return self\n+         * @deprecated This method will be removed at some point post Quarkus 1.4\n+         */", "originalCommit": "d9ea47d4779796308beb649e179124da9e9ef2bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA4MTQ2MQ==", "url": "https://github.com/quarkusio/quarkus/pull/7837#discussion_r393081461", "bodyText": "Did you mean @see #setTransformUnproxyableClasses()?", "author": "mkouba", "createdAt": "2020-03-16T14:48:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA1MzE1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEwMDI1Mw==", "url": "https://github.com/quarkusio/quarkus/pull/7837#discussion_r393100253", "bodyText": "Yea, that's what I meant :-D", "author": "manovotn", "createdAt": "2020-03-16T15:15:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA1MzE1NQ=="}], "type": "inlineReview"}, {"oid": "9a661c8a9e5d372ea21240de5d5f83a27a256efd", "url": "https://github.com/quarkusio/quarkus/commit/9a661c8a9e5d372ea21240de5d5f83a27a256efd", "message": "ArC - transform unproxyable bean classes by default\n\n- new transformations: remove final flag from a bean class, change\nvisibility of private no-args constructor\n- deprecate quarkus.arc.remove-final-for-proxyable-methods\n- introduce quarkus.arc.transfrorm-unproxyable-classes\n- this should also help kotlin developers where classes are final by\ndefault", "committedDate": "2020-03-17T10:42:27Z", "type": "commit"}, {"oid": "4ded145cd7a88ad826214336955c108bf5de4ce6", "url": "https://github.com/quarkusio/quarkus/commit/4ded145cd7a88ad826214336955c108bf5de4ce6", "message": "MP Config TCK - disable transformation of unproxyable types", "committedDate": "2020-03-17T10:42:27Z", "type": "commit"}, {"oid": "4df8c5848d51f6f6136439d0d6bc6cdd811c14a2", "url": "https://github.com/quarkusio/quarkus/commit/4df8c5848d51f6f6136439d0d6bc6cdd811c14a2", "message": "Update BeanProcessor.Builder.setTransformUnproxyableClasses() javadoc", "committedDate": "2020-03-17T10:42:27Z", "type": "commit"}, {"oid": "d297891f6501c67591fd02c7df66051ab0308813", "url": "https://github.com/quarkusio/quarkus/commit/d297891f6501c67591fd02c7df66051ab0308813", "message": "Refine BeanProcessor.Builder javadoc\n\n- BeanProcessor.Builder.setRemoveFinalFromProxyableMethods()", "committedDate": "2020-03-17T10:42:27Z", "type": "commit"}, {"oid": "d297891f6501c67591fd02c7df66051ab0308813", "url": "https://github.com/quarkusio/quarkus/commit/d297891f6501c67591fd02c7df66051ab0308813", "message": "Refine BeanProcessor.Builder javadoc\n\n- BeanProcessor.Builder.setRemoveFinalFromProxyableMethods()", "committedDate": "2020-03-17T10:42:27Z", "type": "forcePushed"}]}