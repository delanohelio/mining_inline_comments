{"pr_number": 6453, "pr_title": "Allow JAX-RS mapping in web.xml", "pr_createdAt": "2020-01-08T05:48:04Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/6453", "timeline": [{"oid": "ce999014074d044fe840de6389c73a291608a9e4", "url": "https://github.com/quarkusio/quarkus/commit/ce999014074d044fe840de6389c73a291608a9e4", "message": "Allow JAX-RS mapping in web.xml\n\nFixes #6426", "committedDate": "2020-01-08T05:46:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA5Njk2Mg==", "url": "https://github.com/quarkusio/quarkus/pull/6453#discussion_r364096962", "bodyText": "This comment looks off?", "author": "gsmet", "createdAt": "2020-01-08T07:42:57Z", "path": "integration-tests/elytron-undertow/src/test/java/io/quarkus/it/undertow/elytron/BaseAuthRestTest.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package io.quarkus.it.undertow.elytron;\n+\n+import static io.restassured.RestAssured.given;\n+import static org.hamcrest.Matchers.is;\n+\n+import org.junit.jupiter.api.RepeatedTest;\n+import org.junit.jupiter.api.Test;\n+\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.restassured.http.ContentType;\n+\n+@QuarkusTest\n+class BaseAuthRestTest {\n+\n+    @Test\n+    @RepeatedTest(100)\n+    void testPost() {\n+        // This is a regression test in that we had a problem where the Vert.x request was not paused\n+        // before the authentication filters ran and the post message was thrown away by Vert.x because\n+        // RESTEasy hadn't registered its request handlers yet.", "originalCommit": "ce999014074d044fe840de6389c73a291608a9e4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDExMzA3Nw==", "url": "https://github.com/quarkusio/quarkus/pull/6453#discussion_r364113077", "bodyText": "We don't have anywhere that is specifically dedicated to testing RESTEasy + Undertow, so I just enhanced the security tests to also test RESTEasy on Undertow, but used this mechanism to map RESTeasy.", "author": "stuartwdouglas", "createdAt": "2020-01-08T08:34:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA5Njk2Mg=="}], "type": "inlineReview"}]}