{"pr_number": 3873, "pr_title": "CATROID-600 Automatically detect API keys and warn user when uploadin\u2026", "pr_createdAt": "2020-11-17T09:58:58Z", "pr_url": "https://github.com/Catrobat/Catroid/pull/3873", "timeline": [{"oid": "7dfc7d60595fb1b0630a1bd421a426b4d450ddfa", "url": "https://github.com/Catrobat/Catroid/commit/7dfc7d60595fb1b0630a1bd421a426b4d450ddfa", "message": "CATROID-600 Automatically detect API keys and warn user when uploading is initiated", "committedDate": "2020-11-17T11:05:50Z", "type": "forcePushed"}, {"oid": "62064d91e6c0bc9c376452d406b801a404770bf4", "url": "https://github.com/Catrobat/Catroid/commit/62064d91e6c0bc9c376452d406b801a404770bf4", "message": "CATROID-600 Automatically detect API keys and warn user when uploading is initiated", "committedDate": "2020-11-17T11:23:41Z", "type": "forcePushed"}, {"oid": "85cd0bcc437141a6dca3c69f9053690c1f166264", "url": "https://github.com/Catrobat/Catroid/commit/85cd0bcc437141a6dca3c69f9053690c1f166264", "message": "CATROID-600 Automatically detect API keys and warn user when uploading is initiated", "committedDate": "2020-11-17T15:44:01Z", "type": "forcePushed"}, {"oid": "b002db054512d98be66dacc14344b2878fac2f9e", "url": "https://github.com/Catrobat/Catroid/commit/b002db054512d98be66dacc14344b2878fac2f9e", "message": "CATROID-600 Automatically detect API keys and warn user when uploading is initiated", "committedDate": "2020-11-17T16:24:47Z", "type": "forcePushed"}, {"oid": "728ae23b37014dc2c326d82079dfff0a3c13d90d", "url": "https://github.com/Catrobat/Catroid/commit/728ae23b37014dc2c326d82079dfff0a3c13d90d", "message": "CATROID-600 Automatically detect API keys and warn user when uploading is initiated", "committedDate": "2020-11-17T18:17:25Z", "type": "forcePushed"}, {"oid": "b717e1f45d057987f6f034f8bd4690f9f30eb9cf", "url": "https://github.com/Catrobat/Catroid/commit/b717e1f45d057987f6f034f8bd4690f9f30eb9cf", "message": "CATROID-600 Automatically detect API keys and warn user when uploading is initiated", "committedDate": "2020-11-19T13:52:55Z", "type": "forcePushed"}, {"oid": "5540435670a27d6cc1e06cf814372df1aa2a2eae", "url": "https://github.com/Catrobat/Catroid/commit/5540435670a27d6cc1e06cf814372df1aa2a2eae", "message": "CATROID-600 Automatically detect API keys and warn user when uploading is initiated", "committedDate": "2020-11-19T17:24:07Z", "type": "forcePushed"}, {"oid": "684ad6cedc6cfa743f17cff8c9cb15c9445ff35d", "url": "https://github.com/Catrobat/Catroid/commit/684ad6cedc6cfa743f17cff8c9cb15c9445ff35d", "message": "CATROID-600 Automatically detect API keys and warn user when uploading is initiated", "committedDate": "2020-11-19T17:47:33Z", "type": "forcePushed"}, {"oid": "f3487fd86125602002bd9465a5ab6d6893994641", "url": "https://github.com/Catrobat/Catroid/commit/f3487fd86125602002bd9465a5ab6d6893994641", "message": "CATROID-600 Automatically detect API keys and warn user when uploading is initiated", "committedDate": "2020-11-19T18:52:15Z", "type": "forcePushed"}, {"oid": "cc56d451ae945df8f42215cebb8dbfa25008d0cc", "url": "https://github.com/Catrobat/Catroid/commit/cc56d451ae945df8f42215cebb8dbfa25008d0cc", "message": "CATROID-600 Automatically detect API keys and warn user when uploading is initiated", "committedDate": "2020-11-20T14:59:49Z", "type": "forcePushed"}, {"oid": "4eb39785ebe9d1a0ce24cbeed276d6ec28786ff1", "url": "https://github.com/Catrobat/Catroid/commit/4eb39785ebe9d1a0ce24cbeed276d6ec28786ff1", "message": "CATROID-600 Automatically detect API keys and warn user when uploading is initiated", "committedDate": "2020-11-21T17:45:52Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjIyNTkyMA==", "url": "https://github.com/Catrobat/Catroid/pull/3873#discussion_r546225920", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t\tLog.e(TestUtils.class.getSimpleName(), Log.getStackTraceString(e));\n          \n          \n            \n            \t\t\t\t\tLog.e(TestUtils.class.getSimpleName(), \"can't delete the project \" + projectName );", "author": "ndrnour", "createdAt": "2020-12-19T11:11:10Z", "path": "catroid/src/androidTest/java/org/catrobat/catroid/test/utils/TestUtils.java", "diffHunk": "@@ -68,6 +69,20 @@ public static void deleteProjects(String... projectNames) throws IOException {\n \t\t}\n \t}\n \n+\tpublic static void deleteAllProjects() {\n+\t\tString[] projects = FlavoredConstants.DEFAULT_ROOT_DIRECTORY.list();\n+\t\tfor (String projectName : projects) {\n+\t\t\tFile projectDir = new File(FlavoredConstants.DEFAULT_ROOT_DIRECTORY, projectName);\n+\t\t\tif (projectDir.exists() && projectDir.isDirectory()) {\n+\t\t\t\ttry {\n+\t\t\t\t\tStorageOperations.deleteDir(projectDir);\n+\t\t\t\t} catch (IOException e) {\n+\t\t\t\t\tLog.e(TestUtils.class.getSimpleName(), Log.getStackTraceString(e));", "originalCommit": "4eb39785ebe9d1a0ce24cbeed276d6ec28786ff1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjIzMDMxOQ==", "url": "https://github.com/Catrobat/Catroid/pull/3873#discussion_r546230319", "bodyText": "ops! our minSdk is 21, please use an alternative code that supports SDKs from 21 on", "author": "ndrnour", "createdAt": "2020-12-19T11:59:29Z", "path": "catroid/src/main/java/org/catrobat/catroid/ui/ProjectUploadActivity.java", "diffHunk": "@@ -148,6 +159,7 @@ public void loadProjectActivity() {\n \t\tverifyUserIdentity();\n \t}\n \n+\t@RequiresApi(api = Build.VERSION_CODES.O)", "originalCommit": "4eb39785ebe9d1a0ce24cbeed276d6ec28786ff1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "82ec547bd51eab8a2aa4f4ad9d478404278b0310", "url": "https://github.com/Catrobat/Catroid/commit/82ec547bd51eab8a2aa4f4ad9d478404278b0310", "message": "CATROID-600 Automatically detect API keys and warn user when uploading is initiated", "committedDate": "2020-12-21T11:44:41Z", "type": "forcePushed"}, {"oid": "94fb0c08fdabe96078a7c3889f5d9012390c0c69", "url": "https://github.com/Catrobat/Catroid/commit/94fb0c08fdabe96078a7c3889f5d9012390c0c69", "message": "CATROID-600 Automatically detect API keys and warn user when uploading is initiated", "committedDate": "2020-12-21T17:37:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDkyNjk0MA==", "url": "https://github.com/Catrobat/Catroid/pull/3873#discussion_r550926940", "bodyText": "is this annotation needed?", "author": "ndrnour", "createdAt": "2021-01-02T22:16:20Z", "path": "catroid/src/main/java/org/catrobat/catroid/ui/ProjectUploadActivity.java", "diffHunk": "@@ -458,6 +525,7 @@ public void startSignInWorkflow() {\n \t\tstartActivityForResult(new Intent(this, SignInActivity.class), SIGN_IN_CODE);\n \t}\n \n+\t@RequiresApi(api = Build.VERSION_CODES.O)", "originalCommit": "94fb0c08fdabe96078a7c3889f5d9012390c0c69", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "46f0721ebd483a0ae76d1f5f2aa3bb799f9f636c", "url": "https://github.com/Catrobat/Catroid/commit/46f0721ebd483a0ae76d1f5f2aa3bb799f9f636c", "message": "CATROID-600 Automatically detect API keys and warn user when uploading is initiated", "committedDate": "2021-01-02T23:21:15Z", "type": "forcePushed"}, {"oid": "7cfef8ea10c93ed6da7bb96cec2dea74d358ff90", "url": "https://github.com/Catrobat/Catroid/commit/7cfef8ea10c93ed6da7bb96cec2dea74d358ff90", "message": "CATROID-600 Automatically detect API keys and warn user when uploading is initiated", "committedDate": "2021-01-03T10:08:11Z", "type": "forcePushed"}, {"oid": "72c0194b6214e9b49b3bddc6701e492df7db3240", "url": "https://github.com/Catrobat/Catroid/commit/72c0194b6214e9b49b3bddc6701e492df7db3240", "message": "CATROID-600 Automatically detect API keys and warn user when uploading is initiated", "committedDate": "2021-01-03T10:16:40Z", "type": "forcePushed"}, {"oid": "e0a2436b5976b6cc88538001b9ac458a81bef2fd", "url": "https://github.com/Catrobat/Catroid/commit/e0a2436b5976b6cc88538001b9ac458a81bef2fd", "message": "CATROID-600 Automatically detect API keys and warn user when uploading is initiated", "committedDate": "2021-01-03T10:33:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDk5MjYzMA==", "url": "https://github.com/Catrobat/Catroid/pull/3873#discussion_r550992630", "bodyText": "@Walcho1125 ?", "author": "ndrnour", "createdAt": "2021-01-03T11:23:41Z", "path": "catroid/src/main/java/org/catrobat/catroid/ui/ProjectUploadActivity.java", "diffHunk": "@@ -435,6 +501,7 @@ protected void verifyUserIdentity() {\n \t\t}\n \t}\n \n+\t@RequiresApi(api = Build.VERSION_CODES.O)", "originalCommit": "e0a2436b5976b6cc88538001b9ac458a81bef2fd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5b50e0223f570850e269f7a3ae5fc29111295774", "url": "https://github.com/Catrobat/Catroid/commit/5b50e0223f570850e269f7a3ae5fc29111295774", "message": "CATROID-600 Automatically detect API keys and warn user when uploading is initiated", "committedDate": "2021-01-03T11:25:48Z", "type": "forcePushed"}, {"oid": "a48a4138f23a39374eda9976c00bcbb0aa5790e7", "url": "https://github.com/Catrobat/Catroid/commit/a48a4138f23a39374eda9976c00bcbb0aa5790e7", "message": "CATROID-600 Automatically detect API keys and warn user when uploading is initiated", "committedDate": "2021-01-03T11:29:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDk5MzYwNg==", "url": "https://github.com/Catrobat/Catroid/pull/3873#discussion_r550993606", "bodyText": "please remove this.", "author": "ndrnour", "createdAt": "2021-01-03T11:33:21Z", "path": "catroid/src/androidTest/java/org/catrobat/catroid/test/utils/TestUtils.java", "diffHunk": "@@ -68,6 +69,20 @@ public static void deleteProjects(String... projectNames) throws IOException {\n \t\t}\n \t}\n \n+\tpublic static void deleteAllProjects() {", "originalCommit": "a48a4138f23a39374eda9976c00bcbb0aa5790e7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDk5MzgwNQ==", "url": "https://github.com/Catrobat/Catroid/pull/3873#discussion_r550993805", "bodyText": "please remove this. BaseActivityTestRule is taking care of that during the initialization. look at its implementation.", "author": "ndrnour", "createdAt": "2021-01-03T11:35:18Z", "path": "catroid/src/androidTest/java/org/catrobat/catroid/uiespresso/ui/dialog/ReplaceApiKeyDialogTest.java", "diffHunk": "@@ -0,0 +1,139 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2020 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.catrobat.catroid.uiespresso.ui.dialog;\n+\n+import android.content.Intent;\n+import android.content.SharedPreferences;\n+import android.preference.PreferenceManager;\n+import android.util.Log;\n+\n+import com.google.common.base.Charsets;\n+\n+import org.catrobat.catroid.ProjectManager;\n+import org.catrobat.catroid.R;\n+import org.catrobat.catroid.common.Constants;\n+import org.catrobat.catroid.content.Project;\n+import org.catrobat.catroid.content.Scene;\n+import org.catrobat.catroid.content.Script;\n+import org.catrobat.catroid.content.Sprite;\n+import org.catrobat.catroid.content.StartScript;\n+import org.catrobat.catroid.content.bricks.BackgroundRequestBrick;\n+import org.catrobat.catroid.io.asynctask.ProjectSaveTask;\n+import org.catrobat.catroid.test.utils.TestUtils;\n+import org.catrobat.catroid.uiespresso.ui.activity.ProjectUploadRatingDialogTest;\n+import org.catrobat.catroid.uiespresso.util.rules.BaseActivityTestRule;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+\n+import java.io.File;\n+import java.io.IOException;\n+\n+import androidx.test.core.app.ApplicationProvider;\n+\n+import static org.catrobat.catroid.common.Constants.CODE_XML_FILE_NAME;\n+import static org.catrobat.catroid.common.SharedPreferenceKeys.AGREED_TO_PRIVACY_POLICY_VERSION;\n+import static org.catrobat.catroid.ui.ProjectUploadActivity.PROJECT_DIR;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+import static androidx.test.espresso.Espresso.onView;\n+import static androidx.test.espresso.action.ViewActions.click;\n+import static androidx.test.espresso.matcher.ViewMatchers.withText;\n+\n+public class ReplaceApiKeyDialogTest {\n+\n+\tprivate static final String TAG = ReplaceApiKeyDialogTest.class.getSimpleName();\n+\n+\t@Rule\n+\tpublic BaseActivityTestRule<ProjectUploadRatingDialogTest.ProjectUploadTestActivity> activityTestRule =\n+\t\t\tnew BaseActivityTestRule<>(ProjectUploadRatingDialogTest.ProjectUploadTestActivity.class, false, false);\n+\n+\tprivate int bufferedPrivacyPolicyPreferenceSetting;\n+\n+\tProject dummyProject;\n+\tString apikey = \"AIzaas98d7f9a0sdf07ad0sf8a7sd09fASDf97asd9f\";\n+\t@Before\n+\tpublic void before() {\n+\t\tTestUtils.deleteAllProjects();", "originalCommit": "a48a4138f23a39374eda9976c00bcbb0aa5790e7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDk5Mzg0Mw==", "url": "https://github.com/Catrobat/Catroid/pull/3873#discussion_r550993843", "bodyText": "same.", "author": "ndrnour", "createdAt": "2021-01-03T11:35:42Z", "path": "catroid/src/androidTest/java/org/catrobat/catroid/uiespresso/ui/dialog/ReplaceApiKeyDialogTest.java", "diffHunk": "@@ -0,0 +1,139 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2020 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.catrobat.catroid.uiespresso.ui.dialog;\n+\n+import android.content.Intent;\n+import android.content.SharedPreferences;\n+import android.preference.PreferenceManager;\n+import android.util.Log;\n+\n+import com.google.common.base.Charsets;\n+\n+import org.catrobat.catroid.ProjectManager;\n+import org.catrobat.catroid.R;\n+import org.catrobat.catroid.common.Constants;\n+import org.catrobat.catroid.content.Project;\n+import org.catrobat.catroid.content.Scene;\n+import org.catrobat.catroid.content.Script;\n+import org.catrobat.catroid.content.Sprite;\n+import org.catrobat.catroid.content.StartScript;\n+import org.catrobat.catroid.content.bricks.BackgroundRequestBrick;\n+import org.catrobat.catroid.io.asynctask.ProjectSaveTask;\n+import org.catrobat.catroid.test.utils.TestUtils;\n+import org.catrobat.catroid.uiespresso.ui.activity.ProjectUploadRatingDialogTest;\n+import org.catrobat.catroid.uiespresso.util.rules.BaseActivityTestRule;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+\n+import java.io.File;\n+import java.io.IOException;\n+\n+import androidx.test.core.app.ApplicationProvider;\n+\n+import static org.catrobat.catroid.common.Constants.CODE_XML_FILE_NAME;\n+import static org.catrobat.catroid.common.SharedPreferenceKeys.AGREED_TO_PRIVACY_POLICY_VERSION;\n+import static org.catrobat.catroid.ui.ProjectUploadActivity.PROJECT_DIR;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+import static androidx.test.espresso.Espresso.onView;\n+import static androidx.test.espresso.action.ViewActions.click;\n+import static androidx.test.espresso.matcher.ViewMatchers.withText;\n+\n+public class ReplaceApiKeyDialogTest {\n+\n+\tprivate static final String TAG = ReplaceApiKeyDialogTest.class.getSimpleName();\n+\n+\t@Rule\n+\tpublic BaseActivityTestRule<ProjectUploadRatingDialogTest.ProjectUploadTestActivity> activityTestRule =\n+\t\t\tnew BaseActivityTestRule<>(ProjectUploadRatingDialogTest.ProjectUploadTestActivity.class, false, false);\n+\n+\tprivate int bufferedPrivacyPolicyPreferenceSetting;\n+\n+\tProject dummyProject;\n+\tString apikey = \"AIzaas98d7f9a0sdf07ad0sf8a7sd09fASDf97asd9f\";\n+\t@Before\n+\tpublic void before() {\n+\t\tTestUtils.deleteAllProjects();\n+\t\tSharedPreferences sharedPreferences = PreferenceManager\n+\t\t\t\t.getDefaultSharedPreferences(ApplicationProvider.getApplicationContext());\n+\n+\t\tbufferedPrivacyPolicyPreferenceSetting = sharedPreferences\n+\t\t\t\t.getInt(AGREED_TO_PRIVACY_POLICY_VERSION, 0);\n+\n+\t\tsharedPreferences\n+\t\t\t\t.edit()\n+\t\t\t\t.putInt(AGREED_TO_PRIVACY_POLICY_VERSION, Constants.CATROBAT_TERMS_OF_USE_ACCEPTED)\n+\t\t\t\t.commit();\n+\t\tdummyProject = new Project(ApplicationProvider.getApplicationContext(), \"ApiProject\");\n+\t\tScene dummyScene = new Scene(\"scene\", dummyProject);\n+\t\tProjectManager.getInstance().setCurrentProject(dummyProject);\n+\t\tSprite sprite = new Sprite(\"sprite\");\n+\t\tScript firstScript = new StartScript();\n+\t\tfirstScript.addBrick(new BackgroundRequestBrick(apikey));\n+\t\tdummyScene.addSprite(sprite);\n+\t\tsprite.addScript(firstScript);\n+\t\tdummyProject.addScene(dummyScene);\n+\t\tProjectSaveTask.task(dummyProject, ApplicationProvider.getApplicationContext());\n+\n+\t\tIntent intent = new Intent();\n+\t\tintent.putExtra(PROJECT_DIR, dummyProject.getDirectory());\n+\n+\t\tactivityTestRule.launchActivity(intent);\n+\t}\n+\n+\t@After\n+\tpublic void tearDown() throws Exception {\n+\t\tPreferenceManager.getDefaultSharedPreferences(ApplicationProvider.getApplicationContext())\n+\t\t\t\t.edit()\n+\t\t\t\t.putInt(AGREED_TO_PRIVACY_POLICY_VERSION,\n+\t\t\t\t\t\tbufferedPrivacyPolicyPreferenceSetting)\n+\t\t\t\t.commit();\n+\t\tTestUtils.deleteProjects(\"ApiProject\");", "originalCommit": "a48a4138f23a39374eda9976c00bcbb0aa5790e7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e4f095e43afcac3ab977e64cc6a1bb318b9e77f5", "url": "https://github.com/Catrobat/Catroid/commit/e4f095e43afcac3ab977e64cc6a1bb318b9e77f5", "message": "CATROID-600 Automatically detect API keys and warn user when uploading is initiated", "committedDate": "2021-01-03T11:40:50Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDk5NDc2Nw==", "url": "https://github.com/Catrobat/Catroid/pull/3873#discussion_r550994767", "bodyText": "this function should be void instead of boolean right?", "author": "ndrnour", "createdAt": "2021-01-03T11:44:29Z", "path": "catroid/src/main/java/org/catrobat/catroid/ui/ProjectUploadActivity.java", "diffHunk": "@@ -263,6 +273,60 @@ private void onNextButtonClick() {\n \t\t}\n \t}\n \n+\tprivate void checkCodeforApiKey() {\n+\t\tString regex = \"(<value>)[0-9a-zA-Z]{16,45}\";\n+\t\tcodeFile = new File(project.getDirectory(), CODE_XML_FILE_NAME);\n+\n+\t\ttry {\n+\t\t\tcode = com.google.common.io.Files.toString(codeFile, Charsets.UTF_8);\n+\t\t} catch (IOException e) {\n+\t\t\tLog.e(TAG, Log.getStackTraceString(e));\n+\t\t}\n+\t\tfinal List<String> matches = new ArrayList<>();\n+\t\tif (code.contains(\"WebRequestBrick\") || code.contains(\"BackgroundRequestBrick\") || code.contains(\"LookRequestBrick\")) {\n+\t\t\tPattern pattern = Pattern.compile(regex, Pattern.CASE_INSENSITIVE);\n+\t\t\tMatcher matcher = pattern.matcher(code);\n+\t\t\twhile (matcher.find()) {\n+\t\t\t\tmatches.add(matcher.group(0));\n+\t\t\t}\n+\t\t}\n+\t\tif (matches.size() > 0) {\n+\t\t\tfor (String match : matches) {\n+\t\t\t\tshowApiReplacementDialog(match);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tprivate void replaceSecret(String secrete) {\n+\t\tcode = code.replaceAll(secrete, \"<value>INSERT-API-KEY-HERE\");\n+\t\ttry {\n+\t\t\tFileOutputStream stream = new FileOutputStream(codeFile);\n+\t\t\tstream.write(code.getBytes(StandardCharsets.UTF_8));\n+\t\t} catch (IOException e) {\n+\t\t\tLog.e(TAG, Log.getStackTraceString(e));\n+\t\t}\n+\t}\n+\n+\tprivate boolean showApiReplacementDialog(String value) {", "originalCommit": "e4f095e43afcac3ab977e64cc6a1bb318b9e77f5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDk5NTQzNg==", "url": "https://github.com/Catrobat/Catroid/pull/3873#discussion_r550995436", "bodyText": "remove pls", "author": "ndrnour", "createdAt": "2021-01-03T11:50:27Z", "path": "catroid/src/androidTest/java/org/catrobat/catroid/test/utils/TestUtils.java", "diffHunk": "@@ -25,6 +25,7 @@\n import android.content.Context;\n import android.content.SharedPreferences;\n import android.preference.PreferenceManager;\n+import android.util.Log;", "originalCommit": "e4f095e43afcac3ab977e64cc6a1bb318b9e77f5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDk5NTYyMQ==", "url": "https://github.com/Catrobat/Catroid/pull/3873#discussion_r550995621", "bodyText": "pls rename to xmlFile", "author": "ndrnour", "createdAt": "2021-01-03T11:52:22Z", "path": "catroid/src/main/java/org/catrobat/catroid/ui/ProjectUploadActivity.java", "diffHunk": "@@ -92,6 +100,8 @@\n \tpublic static final String NUMBER_OF_UPLOADED_PROJECTS = \"number_of_uploaded_projects\";\n \n \tprivate Project project;\n+\tprivate String code = \"\";\n+\tFile codeFile;", "originalCommit": "e4f095e43afcac3ab977e64cc6a1bb318b9e77f5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDk5NTcyNg==", "url": "https://github.com/Catrobat/Catroid/pull/3873#discussion_r550995726", "bodyText": "instead of hardcoding, declare them as private static final", "author": "ndrnour", "createdAt": "2021-01-03T11:53:37Z", "path": "catroid/src/main/java/org/catrobat/catroid/ui/ProjectUploadActivity.java", "diffHunk": "@@ -263,6 +273,60 @@ private void onNextButtonClick() {\n \t\t}\n \t}\n \n+\tprivate void checkCodeforApiKey() {\n+\t\tString regex = \"(<value>)[0-9a-zA-Z]{16,45}\";\n+\t\tcodeFile = new File(project.getDirectory(), CODE_XML_FILE_NAME);\n+\n+\t\ttry {\n+\t\t\tcode = com.google.common.io.Files.toString(codeFile, Charsets.UTF_8);\n+\t\t} catch (IOException e) {\n+\t\t\tLog.e(TAG, Log.getStackTraceString(e));\n+\t\t}\n+\t\tfinal List<String> matches = new ArrayList<>();\n+\t\tif (code.contains(\"WebRequestBrick\") || code.contains(\"BackgroundRequestBrick\") || code.contains(\"LookRequestBrick\")) {", "originalCommit": "e4f095e43afcac3ab977e64cc6a1bb318b9e77f5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDk5NjQyNQ==", "url": "https://github.com/Catrobat/Catroid/pull/3873#discussion_r550996425", "bodyText": "dialog.dismiss() instead of finish()", "author": "ndrnour", "createdAt": "2021-01-03T12:00:03Z", "path": "catroid/src/main/java/org/catrobat/catroid/ui/ProjectUploadActivity.java", "diffHunk": "@@ -263,6 +273,60 @@ private void onNextButtonClick() {\n \t\t}\n \t}\n \n+\tprivate void checkCodeforApiKey() {\n+\t\tString regex = \"(<value>)[0-9a-zA-Z]{16,45}\";\n+\t\tcodeFile = new File(project.getDirectory(), CODE_XML_FILE_NAME);\n+\n+\t\ttry {\n+\t\t\tcode = com.google.common.io.Files.toString(codeFile, Charsets.UTF_8);\n+\t\t} catch (IOException e) {\n+\t\t\tLog.e(TAG, Log.getStackTraceString(e));\n+\t\t}\n+\t\tfinal List<String> matches = new ArrayList<>();\n+\t\tif (code.contains(\"WebRequestBrick\") || code.contains(\"BackgroundRequestBrick\") || code.contains(\"LookRequestBrick\")) {\n+\t\t\tPattern pattern = Pattern.compile(regex, Pattern.CASE_INSENSITIVE);\n+\t\t\tMatcher matcher = pattern.matcher(code);\n+\t\t\twhile (matcher.find()) {\n+\t\t\t\tmatches.add(matcher.group(0));\n+\t\t\t}\n+\t\t}\n+\t\tif (matches.size() > 0) {\n+\t\t\tfor (String match : matches) {\n+\t\t\t\tshowApiReplacementDialog(match);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tprivate void replaceSecret(String secrete) {\n+\t\tcode = code.replaceAll(secrete, \"<value>INSERT-API-KEY-HERE\");\n+\t\ttry {\n+\t\t\tFileOutputStream stream = new FileOutputStream(codeFile);\n+\t\t\tstream.write(code.getBytes(StandardCharsets.UTF_8));\n+\t\t} catch (IOException e) {\n+\t\t\tLog.e(TAG, Log.getStackTraceString(e));\n+\t\t}\n+\t}\n+\n+\tprivate boolean showApiReplacementDialog(String value) {\n+\t\tfinal AlertDialog alertDialog = new AlertDialog.Builder(this)\n+\t\t\t\t.setTitle(R.string.warning)\n+\t\t\t\t.setView(R.layout.dialog_replace_api_key)\n+\t\t\t\t.setPositiveButton(getText(R.string.api_replacement_dialog_accept), (dialog, which) -> {\n+\t\t\t\t\treplaceSecret(value);\n+\t\t\t\t})\n+\t\t\t\t.setNegativeButton(getText(R.string.api_replacement_dialog_neutral), null)\n+\t\t\t\t.setNeutralButton(getText(R.string.cancel), (dialog, which) -> {\n+\t\t\t\t\tfinish();", "originalCommit": "e4f095e43afcac3ab977e64cc6a1bb318b9e77f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDk5ODI5Mw==", "url": "https://github.com/Catrobat/Catroid/pull/3873#discussion_r550998293", "bodyText": "@ndrnour Actually finish() is just fine here, since the dialog hast 3 options,\n-replace key\n-upload with key\n-cancel -> should cancel the uploading process, otherwise, it would have the same behavior as \"upload with key\"", "author": "Walcho1125", "createdAt": "2021-01-03T12:18:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDk5NjQyNQ=="}], "type": "inlineReview"}, {"oid": "dcfee1dc4bd0f9de313a88f6ec329b027e905065", "url": "https://github.com/Catrobat/Catroid/commit/dcfee1dc4bd0f9de313a88f6ec329b027e905065", "message": "CATROID-600 Automatically detect API keys and warn user when uploading is initiated", "committedDate": "2021-01-03T12:23:25Z", "type": "forcePushed"}, {"oid": "68ec80451d42fb6f38f9d19901a84dc3a8cddd39", "url": "https://github.com/Catrobat/Catroid/commit/68ec80451d42fb6f38f9d19901a84dc3a8cddd39", "message": "CATROID-600 Automatically detect API keys and warn user when uploading is initiated", "committedDate": "2021-01-03T12:35:20Z", "type": "forcePushed"}, {"oid": "1ce95fbb03bff38675ddc5c507857f5efe47aac3", "url": "https://github.com/Catrobat/Catroid/commit/1ce95fbb03bff38675ddc5c507857f5efe47aac3", "message": "CATROID-600 Automatically detect API keys and warn user when uploading is initiated", "committedDate": "2021-01-03T12:42:09Z", "type": "forcePushed"}, {"oid": "7048d416a9c8409b77087c61a5577ee31abf49eb", "url": "https://github.com/Catrobat/Catroid/commit/7048d416a9c8409b77087c61a5577ee31abf49eb", "message": "CATROID-600 Automatically detect API keys and warn user when uploading is initiated\n\nCATROID-742 Add Placeholder names", "committedDate": "2021-01-05T13:41:51Z", "type": "forcePushed"}, {"oid": "85d3e8c580a553331609c8637cd20a75f2a79ba8", "url": "https://github.com/Catrobat/Catroid/commit/85d3e8c580a553331609c8637cd20a75f2a79ba8", "message": "CATROID-600 Automatically detect API keys and warn user when uploading is initiated\n\nCATROID-742 Add Placeholder names", "committedDate": "2021-01-05T13:56:13Z", "type": "forcePushed"}, {"oid": "a344645bdbf0d03aba607a790319f83817fe9902", "url": "https://github.com/Catrobat/Catroid/commit/a344645bdbf0d03aba607a790319f83817fe9902", "message": "CATROID-600 Automatically detect API keys and warn user when uploading is initiated\n\nCATROID-742 Add Placeholder names", "committedDate": "2021-01-05T15:37:14Z", "type": "forcePushed"}, {"oid": "15de186d54acaec2f001de8300414cb6874b36bd", "url": "https://github.com/Catrobat/Catroid/commit/15de186d54acaec2f001de8300414cb6874b36bd", "message": "CATROID-600 Automatically detect API keys and warn user when uploading is initiated", "committedDate": "2021-01-05T17:14:38Z", "type": "forcePushed"}, {"oid": "2386ba4f36ad5e9dcad7f743738aa0ea5b26126c", "url": "https://github.com/Catrobat/Catroid/commit/2386ba4f36ad5e9dcad7f743738aa0ea5b26126c", "message": "CATROID-600 Automatically detect API keys and warn user when uploading is initiated", "committedDate": "2021-01-05T19:30:18Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjgyMzk2OA==", "url": "https://github.com/Catrobat/Catroid/pull/3873#discussion_r552823968", "bodyText": "Please make this string also translatable.\nWhy the \"e\" at the end of secrete, instead of secret?", "author": "wslany", "createdAt": "2021-01-06T17:15:36Z", "path": "catroid/src/main/java/org/catrobat/catroid/ui/ProjectUploadActivity.java", "diffHunk": "@@ -263,6 +278,62 @@ private void onNextButtonClick() {\n \t\t}\n \t}\n \n+\tprivate void checkCodeforApiKey() {\n+\t\tString regex = \"(<value>).*?((?=.*[A-Za-z].*[0-9].*)[A-Za-z0-9]{24,45}).*?(</value>)\";\n+\t\txmlFile = new File(project.getDirectory(), CODE_XML_FILE_NAME);\n+\n+\t\ttry {\n+\t\t\txml = com.google.common.io.Files.toString(xmlFile, Charsets.UTF_8);\n+\t\t} catch (IOException e) {\n+\t\t\tLog.e(TAG, Log.getStackTraceString(e));\n+\t\t}\n+\t\tif (xml.contains(WEB_REQUEST_BRICK) || xml.contains(BACKGROUND_REQUEST_BRICK) || xml.contains(LOOK_REQUEST_BRICK) || xml.contains(OPEN_URL_BRICK)) {\n+\t\t\tapiPattern = Pattern.compile(regex, Pattern.CASE_INSENSITIVE);\n+\t\t\tapiMatcher = apiPattern.matcher(xml);\n+\t\t\tif (apiMatcher.find()) {\n+\t\t\t\tshowApiReplacementDialog(Objects.requireNonNull(apiMatcher.group(2)));\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tprivate void apiKeyFound() {\n+\t\tif (apiMatcher.find(apiMatcher.end())) {\n+\t\t\tshowApiReplacementDialog(Objects.requireNonNull(apiMatcher.group(2)));\n+\t\t}\n+\t}\n+\n+\tprivate void replaceSecret(String secrete) {\n+\t\txml = xml.replaceAll(secrete, \"INSERT-API-KEY-HERE\");", "originalCommit": "2386ba4f36ad5e9dcad7f743738aa0ea5b26126c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzQ4OTc0OA==", "url": "https://github.com/Catrobat/Catroid/pull/3873#discussion_r557489748", "bodyText": "While reviewing, Julia and I talked about the translatable part, is it really convenient to translate that part? If the key is being replaced by a certain language(say Russian) and the person that downloads the project does not speak that specific language, they wouldn\u00b4t know what happened there and do not know what/that it should be replaced. While the English version would be understandable for most languages", "author": "Walcho1125", "createdAt": "2021-01-14T15:41:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjgyMzk2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTk1NjExNA==", "url": "https://github.com/Catrobat/Catroid/pull/3873#discussion_r559956114", "bodyText": "While reviewing, Julia and I talked about the translatable part, is it really convenient to translate that part? If the key is being replaced by a certain language(say Russian) and the person that downloads the project does not speak that specific language, they wouldn\u00b4t know what happened there and do not know what/that it should be replaced. While the English version would be understandable for most languages\n\nThree reasons:\n\nUsers primarily code for themselves.\nRussian projects will anyway contain a lot of Russian, e.g., variable names, name of project, strings in parameters, etc.\nWe are already thinking of ways to include an optional in-app translate option allowing the user to see translations for all texts that might be in another language. This will include texts in strings in parameters.\n\nBy the way, to make it easier for our own translators, but also to facilitate point 3 above: Please change the inserted text to \"insert API key here\", i.e., without the all-caps and with dashes in between.", "author": "wslany", "createdAt": "2021-01-19T07:14:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjgyMzk2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDAzNTEyMw==", "url": "https://github.com/Catrobat/Catroid/pull/3873#discussion_r560035123", "bodyText": "Ok that makes sense. I changed the inserted string to \"insert API key here\"!", "author": "Walcho1125", "createdAt": "2021-01-19T09:33:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjgyMzk2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjgyNDk1OQ==", "url": "https://github.com/Catrobat/Catroid/pull/3873#discussion_r552824959", "bodyText": "Please choose a better name than \"value\".", "author": "wslany", "createdAt": "2021-01-06T17:16:30Z", "path": "catroid/src/main/java/org/catrobat/catroid/ui/ProjectUploadActivity.java", "diffHunk": "@@ -263,6 +278,62 @@ private void onNextButtonClick() {\n \t\t}\n \t}\n \n+\tprivate void checkCodeforApiKey() {\n+\t\tString regex = \"(<value>).*?((?=.*[A-Za-z].*[0-9].*)[A-Za-z0-9]{24,45}).*?(</value>)\";\n+\t\txmlFile = new File(project.getDirectory(), CODE_XML_FILE_NAME);\n+\n+\t\ttry {\n+\t\t\txml = com.google.common.io.Files.toString(xmlFile, Charsets.UTF_8);\n+\t\t} catch (IOException e) {\n+\t\t\tLog.e(TAG, Log.getStackTraceString(e));\n+\t\t}\n+\t\tif (xml.contains(WEB_REQUEST_BRICK) || xml.contains(BACKGROUND_REQUEST_BRICK) || xml.contains(LOOK_REQUEST_BRICK) || xml.contains(OPEN_URL_BRICK)) {\n+\t\t\tapiPattern = Pattern.compile(regex, Pattern.CASE_INSENSITIVE);\n+\t\t\tapiMatcher = apiPattern.matcher(xml);\n+\t\t\tif (apiMatcher.find()) {\n+\t\t\t\tshowApiReplacementDialog(Objects.requireNonNull(apiMatcher.group(2)));\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tprivate void apiKeyFound() {\n+\t\tif (apiMatcher.find(apiMatcher.end())) {\n+\t\t\tshowApiReplacementDialog(Objects.requireNonNull(apiMatcher.group(2)));\n+\t\t}\n+\t}\n+\n+\tprivate void replaceSecret(String secrete) {\n+\t\txml = xml.replaceAll(secrete, \"INSERT-API-KEY-HERE\");\n+\t\ttry {\n+\t\t\tFileOutputStream stream = new FileOutputStream(xmlFile);\n+\t\t\tstream.write(xml.getBytes(StandardCharsets.UTF_8));\n+\t\t} catch (IOException e) {\n+\t\t\tLog.e(TAG, Log.getStackTraceString(e));\n+\t\t}\n+\t\tapiKeyFound();\n+\t}\n+\n+\tprivate void showApiReplacementDialog(String value) {", "originalCommit": "2386ba4f36ad5e9dcad7f743738aa0ea5b26126c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjkyMDUzMA==", "url": "https://github.com/Catrobat/Catroid/pull/3873#discussion_r552920530", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tString regex = \"(<value>).*?((?=.*[A-Za-z].*[0-9].*)[A-Za-z0-9]{24,45}).*?(</value>)\";\n          \n          \n            \n            \t\tString regex = \"<value>.*?((?=[A-Za-z]+[0-9]|[0-9]+[A-Za-z])[A-Za-z0-9]{24,45})\";\n          \n      \n    \n    \n  \n\nNote: the capturing group needs to be changed to 1 in line 294 below.", "author": "wslany", "createdAt": "2021-01-06T19:31:47Z", "path": "catroid/src/main/java/org/catrobat/catroid/ui/ProjectUploadActivity.java", "diffHunk": "@@ -263,6 +278,62 @@ private void onNextButtonClick() {\n \t\t}\n \t}\n \n+\tprivate void checkCodeforApiKey() {\n+\t\tString regex = \"(<value>).*?((?=.*[A-Za-z].*[0-9].*)[A-Za-z0-9]{24,45}).*?(</value>)\";", "originalCommit": "2386ba4f36ad5e9dcad7f743738aa0ea5b26126c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "31b2245f17b407287b87758d5f804b6e554e1b20", "url": "https://github.com/Catrobat/Catroid/commit/31b2245f17b407287b87758d5f804b6e554e1b20", "message": "CATROID-600 Automatically detect API keys and warn user when uploading is initiated", "committedDate": "2021-01-12T12:23:11Z", "type": "forcePushed"}, {"oid": "51182f5c0d37c7ab310788f3c9b2c6d48f1d4c1a", "url": "https://github.com/Catrobat/Catroid/commit/51182f5c0d37c7ab310788f3c9b2c6d48f1d4c1a", "message": "CATROID-600 Automatically detect API keys and warn user when uploading is initiated", "committedDate": "2021-01-12T12:38:00Z", "type": "forcePushed"}, {"oid": "d17d0e08be43e2798077013aa0a502bfef8200fd", "url": "https://github.com/Catrobat/Catroid/commit/d17d0e08be43e2798077013aa0a502bfef8200fd", "message": "CATROID-600 Automatically detect API keys and warn user when uploading is initiated", "committedDate": "2021-01-18T13:24:22Z", "type": "forcePushed"}, {"oid": "32f94cfb05256df13b1e8b5bea0044ac91aeba6f", "url": "https://github.com/Catrobat/Catroid/commit/32f94cfb05256df13b1e8b5bea0044ac91aeba6f", "message": "CATROID-600 Automatically detect API keys and warn user when uploading is initiated", "committedDate": "2021-01-18T13:39:51Z", "type": "forcePushed"}, {"oid": "36999d31566f117d64878c7341289ff503d492de", "url": "https://github.com/Catrobat/Catroid/commit/36999d31566f117d64878c7341289ff503d492de", "message": "CATROID-600 Automatically detect API keys and warn user when uploading is initiated", "committedDate": "2021-01-18T14:05:15Z", "type": "forcePushed"}, {"oid": "529ed9334cd75bb6528bef902093b3b19a157a69", "url": "https://github.com/Catrobat/Catroid/commit/529ed9334cd75bb6528bef902093b3b19a157a69", "message": "CATROID-600 Automatically detect API keys and warn user when uploading is initiated", "committedDate": "2021-01-19T09:33:11Z", "type": "forcePushed"}, {"oid": "51f7dce35ff16b55cfb3fd5e655241cc10dc1f97", "url": "https://github.com/Catrobat/Catroid/commit/51f7dce35ff16b55cfb3fd5e655241cc10dc1f97", "message": "CATROID-600 Automatically detect API keys and warn user when uploading is initiated", "committedDate": "2021-01-28T11:57:41Z", "type": "forcePushed"}, {"oid": "92e18b4487669c87051e010e4f485da2dfca2ee5", "url": "https://github.com/Catrobat/Catroid/commit/92e18b4487669c87051e010e4f485da2dfca2ee5", "message": "CATROID-600 Test Automatically detect API keys and warn user when uploading is initiated", "committedDate": "2021-01-28T14:08:59Z", "type": "forcePushed"}, {"oid": "08e1a1f830db22dbf94c6fd9a8490d10103001d0", "url": "https://github.com/Catrobat/Catroid/commit/08e1a1f830db22dbf94c6fd9a8490d10103001d0", "message": "CATROID-600 Automatically detect API keys and warn user when uploading is initiated", "committedDate": "2021-01-28T14:46:20Z", "type": "forcePushed"}, {"oid": "5b15b12e4c729a9b44cca30c8c1c1c23a6142a49", "url": "https://github.com/Catrobat/Catroid/commit/5b15b12e4c729a9b44cca30c8c1c1c23a6142a49", "message": "CATROID-600 Automatically detect API keys and warn user when uploading is initiated", "committedDate": "2021-01-28T15:45:54Z", "type": "forcePushed"}, {"oid": "dc577dbea7f075d18de6e601daf47faeab4e2788", "url": "https://github.com/Catrobat/Catroid/commit/dc577dbea7f075d18de6e601daf47faeab4e2788", "message": "CATROID-600 Test Automatically detect API keys and warn user when uploading is initiated", "committedDate": "2021-02-26T10:16:46Z", "type": "forcePushed"}, {"oid": "3915f9110acaa636724dfabfa8e47e52da351183", "url": "https://github.com/Catrobat/Catroid/commit/3915f9110acaa636724dfabfa8e47e52da351183", "message": "CATROID-600 Test Automatically detect API keys and warn user when uploading is initiated", "committedDate": "2021-02-26T10:42:41Z", "type": "forcePushed"}, {"oid": "f8e2d053b4fdea4928f99e3d6d7b953572860efd", "url": "https://github.com/Catrobat/Catroid/commit/f8e2d053b4fdea4928f99e3d6d7b953572860efd", "message": "CATROID-600 Test Automatically detect API keys and warn user when uploading is initiated", "committedDate": "2021-02-28T18:11:34Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODk5NDExMw==", "url": "https://github.com/Catrobat/Catroid/pull/3873#discussion_r588994113", "bodyText": "This seems unnecessary", "author": "juliajulie95", "createdAt": "2021-03-07T08:34:42Z", "path": "catroid/src/main/java/org/catrobat/catroid/ui/ProjectUploadActivity.java", "diffHunk": "@@ -263,6 +289,97 @@ private void onNextButtonClick() {\n \t\t}\n \t}\n \n+\tprivate void checkCodeforApiKey() {\n+\t\tString regex = \"<value>.*?((?=[A-Za-z]+[0-9]|[0-9]+[A-Za-z])[A-Za-z0-9]{24,45})\";\n+\t\txmlFile = new File(project.getDirectory(), CODE_XML_FILE_NAME);\n+\n+\t\ttry {\n+\t\t\txml = Files.asCharSource(xmlFile, Charsets.UTF_8).read();\n+\t\t\tbackUpXml = xml;\n+\t\t} catch (IOException exception) {\n+\t\t\tLog.e(TAG, Log.getStackTraceString(exception));\n+\t\t}\n+\t\tif (xml.contains(WEB_REQUEST_BRICK) || xml.contains(BACKGROUND_REQUEST_BRICK) || xml.contains(LOOK_REQUEST_BRICK) || xml.contains(OPEN_URL_BRICK)) {\n+\t\t\tPattern apiPattern = Pattern.compile(regex, Pattern.CASE_INSENSITIVE);\n+\t\t\tapiMatcher = apiPattern.matcher(xml);\n+\t\t\tif (apiMatcher.find()) {\n+\t\t\t\tshowApiReplacementDialog(Objects.requireNonNull(apiMatcher.group(1)));\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tprivate void apiKeyFound() {\n+\t\tif (apiMatcher.find(apiMatcher.end())) {\n+\t\t\tshowApiReplacementDialog(Objects.requireNonNull(apiMatcher.group(1)));\n+\t\t}\n+\t}\n+\n+\tprivate void replaceSecret(String secret) {\n+\t\txml = xml.replaceAll(secret, getString(R.string.api_replacement));\n+\t\ttry {\n+\t\t\tFileOutputStream stream = new FileOutputStream(xmlFile);\n+\t\t\tstream.write(xml.getBytes(StandardCharsets.UTF_8));\n+\t\t} catch (IOException exception) {\n+\t\t\tLog.e(TAG, Log.getStackTraceString(exception));\n+\t\t}\n+\t\treloadProject();\n+\t\tapiKeyFound();\n+\t}\n+\n+\tprivate void reloadProject() {\n+\t\ttry {\n+\t\t\tProjectManager.getInstance().loadProject(project.getDirectory());\n+\t\t\tproject = ProjectManager.getInstance().getCurrentProject();\n+\t\t} catch (ProjectException exception) {\n+\t\t\tLog.e(TAG, Log.getStackTraceString(exception));\n+\t\t}\n+\t}\n+\n+\tprivate void loadBackup() {\n+\t\tString currentName = project.getName();\n+\t\tif (!currentName.equals(originalProjectName) && !originalProjectName.equals(project.getName())) {", "originalCommit": "f8e2d053b4fdea4928f99e3d6d7b953572860efd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODk5NDcxNQ==", "url": "https://github.com/Catrobat/Catroid/pull/3873#discussion_r588994715", "bodyText": "Files.copy? or FileUtils.copyFile?", "author": "juliajulie95", "createdAt": "2021-03-07T08:39:15Z", "path": "catroid/src/main/java/org/catrobat/catroid/ui/ProjectUploadActivity.java", "diffHunk": "@@ -263,6 +289,97 @@ private void onNextButtonClick() {\n \t\t}\n \t}\n \n+\tprivate void checkCodeforApiKey() {\n+\t\tString regex = \"<value>.*?((?=[A-Za-z]+[0-9]|[0-9]+[A-Za-z])[A-Za-z0-9]{24,45})\";\n+\t\txmlFile = new File(project.getDirectory(), CODE_XML_FILE_NAME);\n+\n+\t\ttry {\n+\t\t\txml = Files.asCharSource(xmlFile, Charsets.UTF_8).read();\n+\t\t\tbackUpXml = xml;\n+\t\t} catch (IOException exception) {\n+\t\t\tLog.e(TAG, Log.getStackTraceString(exception));\n+\t\t}\n+\t\tif (xml.contains(WEB_REQUEST_BRICK) || xml.contains(BACKGROUND_REQUEST_BRICK) || xml.contains(LOOK_REQUEST_BRICK) || xml.contains(OPEN_URL_BRICK)) {\n+\t\t\tPattern apiPattern = Pattern.compile(regex, Pattern.CASE_INSENSITIVE);\n+\t\t\tapiMatcher = apiPattern.matcher(xml);\n+\t\t\tif (apiMatcher.find()) {\n+\t\t\t\tshowApiReplacementDialog(Objects.requireNonNull(apiMatcher.group(1)));\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tprivate void apiKeyFound() {\n+\t\tif (apiMatcher.find(apiMatcher.end())) {\n+\t\t\tshowApiReplacementDialog(Objects.requireNonNull(apiMatcher.group(1)));\n+\t\t}\n+\t}\n+\n+\tprivate void replaceSecret(String secret) {\n+\t\txml = xml.replaceAll(secret, getString(R.string.api_replacement));\n+\t\ttry {\n+\t\t\tFileOutputStream stream = new FileOutputStream(xmlFile);\n+\t\t\tstream.write(xml.getBytes(StandardCharsets.UTF_8));\n+\t\t} catch (IOException exception) {\n+\t\t\tLog.e(TAG, Log.getStackTraceString(exception));\n+\t\t}\n+\t\treloadProject();\n+\t\tapiKeyFound();\n+\t}\n+\n+\tprivate void reloadProject() {\n+\t\ttry {\n+\t\t\tProjectManager.getInstance().loadProject(project.getDirectory());\n+\t\t\tproject = ProjectManager.getInstance().getCurrentProject();\n+\t\t} catch (ProjectException exception) {\n+\t\t\tLog.e(TAG, Log.getStackTraceString(exception));\n+\t\t}\n+\t}\n+\n+\tprivate void loadBackup() {\n+\t\tString currentName = project.getName();\n+\t\tif (!currentName.equals(originalProjectName) && !originalProjectName.equals(project.getName())) {\n+\t\t\tString toReplace = PROGRAM_NAME_START_TAG + originalProjectName + PROGRAM_NAME_END_TAG;\n+\t\t\tString replaceWith = PROGRAM_NAME_START_TAG + currentName + PROGRAM_NAME_END_TAG;\n+\t\t\txmlFile = new File(project.getDirectory(), CODE_XML_FILE_NAME);\n+\t\t\tbackUpXml = backUpXml.replace(toReplace, replaceWith);\n+\t\t}\n+\t\ttry {\n+\t\t\tFileOutputStream stream = new FileOutputStream(xmlFile);\n+\t\t\tstream.write(backUpXml.getBytes(StandardCharsets.UTF_8));", "originalCommit": "f8e2d053b4fdea4928f99e3d6d7b953572860efd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODk5NTAxOA==", "url": "https://github.com/Catrobat/Catroid/pull/3873#discussion_r588995018", "bodyText": "duplicate to function apiKeyFound?", "author": "juliajulie95", "createdAt": "2021-03-07T08:42:10Z", "path": "catroid/src/main/java/org/catrobat/catroid/ui/ProjectUploadActivity.java", "diffHunk": "@@ -263,6 +289,97 @@ private void onNextButtonClick() {\n \t\t}\n \t}\n \n+\tprivate void checkCodeforApiKey() {\n+\t\tString regex = \"<value>.*?((?=[A-Za-z]+[0-9]|[0-9]+[A-Za-z])[A-Za-z0-9]{24,45})\";\n+\t\txmlFile = new File(project.getDirectory(), CODE_XML_FILE_NAME);\n+\n+\t\ttry {\n+\t\t\txml = Files.asCharSource(xmlFile, Charsets.UTF_8).read();\n+\t\t\tbackUpXml = xml;\n+\t\t} catch (IOException exception) {\n+\t\t\tLog.e(TAG, Log.getStackTraceString(exception));\n+\t\t}\n+\t\tif (xml.contains(WEB_REQUEST_BRICK) || xml.contains(BACKGROUND_REQUEST_BRICK) || xml.contains(LOOK_REQUEST_BRICK) || xml.contains(OPEN_URL_BRICK)) {\n+\t\t\tPattern apiPattern = Pattern.compile(regex, Pattern.CASE_INSENSITIVE);\n+\t\t\tapiMatcher = apiPattern.matcher(xml);\n+\t\t\tif (apiMatcher.find()) {", "originalCommit": "f8e2d053b4fdea4928f99e3d6d7b953572860efd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "aef58bf20cdf787079d5991d96715c78492203d1", "url": "https://github.com/Catrobat/Catroid/commit/aef58bf20cdf787079d5991d96715c78492203d1", "message": "CATROID-600 Test Automatically detect API keys and warn user when uploading is initiated", "committedDate": "2021-03-09T13:23:49Z", "type": "commit"}, {"oid": "aef58bf20cdf787079d5991d96715c78492203d1", "url": "https://github.com/Catrobat/Catroid/commit/aef58bf20cdf787079d5991d96715c78492203d1", "message": "CATROID-600 Test Automatically detect API keys and warn user when uploading is initiated", "committedDate": "2021-03-09T13:23:49Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NzI1NjcwOA==", "url": "https://github.com/Catrobat/Catroid/pull/3873#discussion_r597256708", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tprivate static final String WIKI_URL = \"<a href='https://wiki.catrobat\"\n          \n          \n            \n            \t\t\t+ \".org/bin/view/Documentation/Web%20requests/'>https://wiki.catrobat.org/bin/view/Documentation/Web%20requests/</a>\";\n          \n          \n            \n            \tprivate static final String WIKI_URL = \"<a href='https://catrob.at/webbricks'>\"\n          \n          \n            \n            \t\t+ \"https://catrob.at/webbricks</a>\";", "author": "wslany", "createdAt": "2021-03-18T21:32:49Z", "path": "catroid/src/main/java/org/catrobat/catroid/ui/ProjectUploadActivity.java", "diffHunk": "@@ -90,8 +101,21 @@\n \n \tpublic static final int MAX_NUMBER_OF_TAGS_CHECKED = 3;\n \tpublic static final String NUMBER_OF_UPLOADED_PROJECTS = \"number_of_uploaded_projects\";\n+\tprivate static final String WEB_REQUEST_BRICK = \"WebRequestBrick\";\n+\tprivate static final String BACKGROUND_REQUEST_BRICK = \"BackgroundRequestBrick\";\n+\tprivate static final String LOOK_REQUEST_BRICK = \"LookRequestBrick\";\n+\tprivate static final String OPEN_URL_BRICK = \"OpenUrlBrick\";\n+\tprivate static final String WIKI_URL = \"<a href='https://wiki.catrobat\"\n+\t\t\t+ \".org/bin/view/Documentation/Web%20requests/'>https://wiki.catrobat.org/bin/view/Documentation/Web%20requests/</a>\";", "originalCommit": "aef58bf20cdf787079d5991d96715c78492203d1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a53db423a106dccdcda08ace1234aedb5d6d312a", "url": "https://github.com/Catrobat/Catroid/commit/a53db423a106dccdcda08ace1234aedb5d6d312a", "message": "Short url to webbricks wiki page", "committedDate": "2021-03-18T21:39:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NzI3NzI0Ng==", "url": "https://github.com/Catrobat/Catroid/pull/3873#discussion_r597277246", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t+ \"https://catrob.at/webbricks</a>\";\n          \n          \n            \n            \t\t\t+ \"https://catrob.at/webbricks</a>\";", "author": "wslany", "createdAt": "2021-03-18T22:12:19Z", "path": "catroid/src/main/java/org/catrobat/catroid/ui/ProjectUploadActivity.java", "diffHunk": "@@ -90,8 +101,21 @@\n \n \tpublic static final int MAX_NUMBER_OF_TAGS_CHECKED = 3;\n \tpublic static final String NUMBER_OF_UPLOADED_PROJECTS = \"number_of_uploaded_projects\";\n+\tprivate static final String WEB_REQUEST_BRICK = \"WebRequestBrick\";\n+\tprivate static final String BACKGROUND_REQUEST_BRICK = \"BackgroundRequestBrick\";\n+\tprivate static final String LOOK_REQUEST_BRICK = \"LookRequestBrick\";\n+\tprivate static final String OPEN_URL_BRICK = \"OpenUrlBrick\";\n+\tprivate static final String WIKI_URL = \"<a href='https://catrob.at/webbricks'>\"\n+\t\t+ \"https://catrob.at/webbricks</a>\";", "originalCommit": "a53db423a106dccdcda08ace1234aedb5d6d312a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a6082ec1b5bc50d3972eec91d46004311aa8931a", "url": "https://github.com/Catrobat/Catroid/commit/a6082ec1b5bc50d3972eec91d46004311aa8931a", "message": "correct indentation", "committedDate": "2021-03-18T22:12:35Z", "type": "commit"}]}