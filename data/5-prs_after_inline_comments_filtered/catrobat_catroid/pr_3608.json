{"pr_number": 3608, "pr_title": "CATROID-476 Line gets drawn between successive layers", "pr_createdAt": "2020-05-16T14:50:57Z", "pr_url": "https://github.com/Catrobat/Catroid/pull/3608", "timeline": [{"oid": "6ca8d656b9d4b2e011f2a2accbf3209450abd5a8", "url": "https://github.com/Catrobat/Catroid/commit/6ca8d656b9d4b2e011f2a2accbf3209450abd5a8", "message": "CATROID-476 Line gets drawn between successive layers\n\nFixes bug where stitches from different embroidery needles would be connected.", "committedDate": "2020-05-16T21:50:05Z", "type": "commit"}, {"oid": "6ca8d656b9d4b2e011f2a2accbf3209450abd5a8", "url": "https://github.com/Catrobat/Catroid/commit/6ca8d656b9d4b2e011f2a2accbf3209450abd5a8", "message": "CATROID-476 Line gets drawn between successive layers\n\nFixes bug where stitches from different embroidery needles would be connected.", "committedDate": "2020-05-16T21:50:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE5NDM0Mw==", "url": "https://github.com/Catrobat/Catroid/pull/3608#discussion_r426194343", "bodyText": "Nice!", "author": "adnaribo", "createdAt": "2020-05-16T21:51:48Z", "path": "catroid/src/test/java/org/catrobat/catroid/stage/EmbroideryActorCircleTest.java", "diffHunk": "@@ -52,12 +52,20 @@\n \t@Parameters(name = \"{0}\")\n \tpublic static Iterable<Object[]> data() {\n \t\treturn asList(new Object[][] {\n-\t\t\t\t{\"Test JumpPoint after ChangePoint\", asList(getChangePointMock(), getJumpPointMock()), false, true},\n-\t\t\t\t{\"Test Connecting Points\", asList(getConnectingPointMock(), getConnectingPointMock()), true, true},\n-\t\t\t\t{\"Test Changing Points\", asList(getChangePointMock(), getChangePointMock()), false, true},\n-\t\t\t\t{\"Test ChangePoint after JumpPoint\", asList(getJumpPointMock(), getChangePointMock()), false, true},\n-\t\t\t\t{\"Test JumpPoint after ConnectingPoint\", asList(getConnectingPointMock(), getJumpPointMock()), true, true},\n-\t\t\t\t{\"Test Jumping Points\", asList(getJumpPointMock(), getJumpPointMock()), false, true},\n+\t\t\t\t{\"Test ConnectingPoints\", asList(getConnectingPointMock(),\n+\t\t\t\t\t\tgetConnectingPointMock(), getConnectingPointMock()), true, true},\n+\t\t\t\t{\"Test JumpPoints\", asList(getConnectingPointMock(),\n+\t\t\t\t\t\tgetJumpPointMock(), getJumpPointMock()), false, false},\n+\t\t\t\t{\"Test ChangePoints\", asList(getConnectingPointMock(),\n+\t\t\t\t\t\tgetColorChangePointMock(), getColorChangePointMock()), false, false},\n+\t\t\t\t{\"Test JumpPoint after ChangePoint\", asList(getConnectingPointMock(),\n+\t\t\t\t\t\tgetColorChangePointMock(), getJumpPointMock()), false, false},\n+\t\t\t\t{\"Test ConnectingPoint after JumpPoint\", asList(getConnectingPointMock(),\n+\t\t\t\t\t\tgetJumpPointMock(), getConnectingPointMock()), false, true},\n+\t\t\t\t{\"Test ChangePoint after JumpPoint\", asList(getConnectingPointMock(),\n+\t\t\t\t\t\tgetJumpPointMock(), getColorChangePointMock()), false, false},\n+\t\t\t\t{\"Test JumpPoint after ConnectingPoint\", asList(getConnectingPointMock(),\n+\t\t\t\t\t\tgetConnectingPointMock(), getJumpPointMock()), true, false}", "originalCommit": "6ca8d656b9d4b2e011f2a2accbf3209450abd5a8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}