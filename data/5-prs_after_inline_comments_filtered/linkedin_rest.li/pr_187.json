{"pr_number": 187, "pr_title": "Fix issues when encoding/parsing custom properties in PDL.", "pr_createdAt": "2020-02-25T01:08:35Z", "pr_url": "https://github.com/linkedin/rest.li/pull/187", "timeline": [{"oid": "88bb5cb7863bb8df7925e7a7eb2a9d5246e3a25c", "url": "https://github.com/linkedin/rest.li/commit/88bb5cb7863bb8df7925e7a7eb2a9d5246e3a25c", "message": "Allow PDL parser and encoder to support property keys with special\ncharacters.\nAlso sort properties by key before encoding them to ensure ordering\nconsistency.", "committedDate": "2020-02-25T00:32:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYyNzM4Ng==", "url": "https://github.com/linkedin/rest.li/pull/187#discussion_r383627386", "bodyText": "I'd avoid packing this stream builder chain into the for-loop statement. Either construct the list on its own line, or use Stream#forEach", "author": "evanw555", "createdAt": "2020-02-25T02:32:08Z", "path": "data/src/main/java/com/linkedin/data/schema/PdlBuilder.java", "diffHunk": "@@ -127,14 +129,17 @@ PdlBuilder writeSpace() throws IOException\n   abstract boolean writeDoc(String doc) throws IOException;\n \n   /**\n-   * Writes a set of schema properties that share a common prefix to .pdl.\n+   * Writes a set of schema properties that share a common prefix to .pdl. Sorts the properties by key before writing.\n    *\n    * @param prefix provides the common prefix of all the properties.\n    * @param properties provides the properties to write.\n    */\n   PdlBuilder writeProperties(List<String> prefix, Map<String, Object> properties) throws IOException\n   {\n-    for (Map.Entry<String, Object> entry : properties.entrySet())\n+    for (Map.Entry<String, Object> entry :\n+        properties.entrySet().stream()", "originalCommit": "88bb5cb7863bb8df7925e7a7eb2a9d5246e3a25c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY1MDUwNQ==", "url": "https://github.com/linkedin/rest.li/pull/187#discussion_r383650505", "bodyText": "fixed", "author": "karthikbalasub", "createdAt": "2020-02-25T04:16:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYyNzM4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYzMTM3NQ==", "url": "https://github.com/linkedin/rest.li/pull/187#discussion_r383631375", "bodyText": "Tbh this is kind of confusing, it took me a minute to realize why this also contains .*...\nPerhaps it would make more sense to use the inverse:\nIDENTIFIER_CHARS = Pattern.compile(\"[0-9a-zA-Z_-]+\")\n\nThen do...\n!IDENTIFIER_CHARS.matcher(propertyKey).matches()", "author": "evanw555", "createdAt": "2020-02-25T02:48:50Z", "path": "data/src/main/java/com/linkedin/data/schema/PdlBuilder.java", "diffHunk": "@@ -51,6 +52,7 @@\n       \"record\", \"typeref\", \"union\", \"null\", \"true\", \"false\"\n   ));\n   private static final char ESCAPE_CHAR = '`';\n+  private static final Pattern NON_IDENTIFIER_CHARS = Pattern.compile(\".*[^0-9a-zA-Z_-].*\");", "originalCommit": "88bb5cb7863bb8df7925e7a7eb2a9d5246e3a25c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY1MDYxOA==", "url": "https://github.com/linkedin/rest.li/pull/187#discussion_r383650618", "bodyText": "done", "author": "karthikbalasub", "createdAt": "2020-02-25T04:17:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYzMTM3NQ=="}], "type": "inlineReview"}, {"oid": "f0379a7723b9962d107c600813621ce280af4342", "url": "https://github.com/linkedin/rest.li/commit/f0379a7723b9962d107c600813621ce280af4342", "message": "Address Evan's review comments", "committedDate": "2020-02-25T04:15:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYwNzAyMA==", "url": "https://github.com/linkedin/rest.li/pull/187#discussion_r383607020", "bodyText": "nit: remove extra line.", "author": "nickibi", "createdAt": "2020-02-25T01:12:19Z", "path": "data/src/test/java/com/linkedin/data/schema/grammar/TestPdlSchemaParser.java", "diffHunk": "@@ -85,6 +87,14 @@ public void testParseNestedProperties() throws IOException\n     expected.put(\"validate\", validate);\n     expected.put(\"com.linkedin.CustomValidator\", \"abc\");\n \n+    DataMap propertyWithPath = new DataMap();\n+    DataMap propertyWithSpecialChars = new DataMap();\n+    propertyWithPath.put(\"/*\", propertyWithSpecialChars);\n+    propertyWithSpecialChars.put(\"*/.$\", false);\n+    expected.put(\"pathProp\", propertyWithPath);\n+", "originalCommit": "88bb5cb7863bb8df7925e7a7eb2a9d5246e3a25c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA0ODg1Nw==", "url": "https://github.com/linkedin/rest.li/pull/187#discussion_r384048857", "bodyText": "The extra lines are to separate the different cases, for better reading", "author": "karthikbalasub", "createdAt": "2020-02-25T18:36:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYwNzAyMA=="}], "type": "inlineReview"}, {"oid": "a814adac5caeb851b27fa3000fe4849908a73580", "url": "https://github.com/linkedin/rest.li/commit/a814adac5caeb851b27fa3000fe4849908a73580", "message": "Added unit tests to cover escaping of grammar characters in property\nkeys", "committedDate": "2020-02-25T18:33:37Z", "type": "commit"}, {"oid": "acd99744f9415de66cdfc26dbcaa001a1366d534", "url": "https://github.com/linkedin/rest.li/commit/acd99744f9415de66cdfc26dbcaa001a1366d534", "message": "Release 28.1.19", "committedDate": "2020-02-25T18:35:09Z", "type": "commit"}, {"oid": "7773a751ee342ffeed05d131bc065b988c83c738", "url": "https://github.com/linkedin/rest.li/commit/7773a751ee342ffeed05d131bc065b988c83c738", "message": "Merge branch 'master' into bug/pdl_prop", "committedDate": "2020-02-25T18:38:15Z", "type": "commit"}]}