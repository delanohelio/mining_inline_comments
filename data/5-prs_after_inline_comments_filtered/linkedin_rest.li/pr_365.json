{"pr_number": 365, "pr_title": "Relax validation for upsert usecase: UPDATE used for create or update.", "pr_createdAt": "2020-08-05T22:57:22Z", "pr_url": "https://github.com/linkedin/rest.li/pull/365", "timeline": [{"oid": "4196962b4305676b08246657c0b58863cfa45d9e", "url": "https://github.com/linkedin/rest.li/commit/4196962b4305676b08246657c0b58863cfa45d9e", "message": "Relax validation for upsert usecase: UPDATE used for create or update.\nFields marked as ReadOnly will be optional for UPDATE methods.", "committedDate": "2020-08-05T22:47:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA4NzA3Ng==", "url": "https://github.com/linkedin/rest.li/pull/365#discussion_r466087076", "bodyText": "Is this mapping even needed anymore? If you look at the logic path, #validateInput(RecordTemplate) already has a switch to check that the resource method is one of [create, batch_create, update, batch_update], so it seems like the \"read-only optional\" logic is applied for all \"input\" method types. partial_update and delete have their own separate code paths.", "author": "evanw555", "createdAt": "2020-08-06T01:08:29Z", "path": "restli-common/src/main/java/com/linkedin/restli/common/validation/RestLiDataValidator.java", "diffHunk": "@@ -106,7 +106,7 @@\n \n   // ReadOnly fields are treated as optional for these types of requests\n   private static final Set<ResourceMethod> readOnlyOptional = new HashSet<>(Arrays.asList(", "originalCommit": "4196962b4305676b08246657c0b58863cfa45d9e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjIxNDE4MQ==", "url": "https://github.com/linkedin/rest.li/pull/365#discussion_r466214181", "bodyText": "Ack, fixed it.", "author": "karthikbalasub", "createdAt": "2020-08-06T07:53:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA4NzA3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA4NzI0NQ==", "url": "https://github.com/linkedin/rest.li/pull/365#discussion_r466087245", "bodyText": "Should you also make the same change for the following if-statement (for createOnly) so that the way these predicates are constructed is consistent?", "author": "evanw555", "createdAt": "2020-08-06T01:09:10Z", "path": "restli-common/src/main/java/com/linkedin/restli/common/validation/RestLiDataValidator.java", "diffHunk": "@@ -247,8 +250,7 @@ public RestLiDataValidator(Map<String, List<String>> annotations,\n       for (Map.Entry<String, List<String>> entry : annotations.entrySet())\n       {\n         String annotationName = entry.getKey();\n-        if (annotationName.equals(ReadOnly.class.getAnnotation(RestSpecAnnotation.class).name())\n-            && readOnlyRestrictedMethods.contains(resourceMethod))\n+        if (annotationName.equals(ReadOnly.class.getAnnotation(RestSpecAnnotation.class).name()))", "originalCommit": "4196962b4305676b08246657c0b58863cfa45d9e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjEyMTY2Nw==", "url": "https://github.com/linkedin/rest.li/pull/365#discussion_r466121667", "bodyText": "Should you also make the same change for the following if-statement (for createOnly) so that the way these predicates are constructed is consistent?\n\n+1", "author": "nickibi", "createdAt": "2020-08-06T03:20:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA4NzI0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjIxNDI1OQ==", "url": "https://github.com/linkedin/rest.li/pull/365#discussion_r466214259", "bodyText": "Done", "author": "karthikbalasub", "createdAt": "2020-08-06T07:53:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA4NzI0NQ=="}], "type": "inlineReview"}, {"oid": "ebafe1cc031744519fc9452ba38236ba7dcecab8", "url": "https://github.com/linkedin/rest.li/commit/ebafe1cc031744519fc9452ba38236ba7dcecab8", "message": "Address review comments.", "committedDate": "2020-08-06T07:29:27Z", "type": "commit"}, {"oid": "c203902f5695cca43877f02c846cabe1fb6a4ccc", "url": "https://github.com/linkedin/rest.li/commit/c203902f5695cca43877f02c846cabe1fb6a4ccc", "message": "Merge branch 'master' into feature/upsert_readonly", "committedDate": "2020-08-06T09:56:23Z", "type": "commit"}, {"oid": "6872f9482562a811f3423e11805eb749952b89b5", "url": "https://github.com/linkedin/rest.li/commit/6872f9482562a811f3423e11805eb749952b89b5", "message": "Release 29.4.11", "committedDate": "2020-08-06T17:08:26Z", "type": "commit"}]}