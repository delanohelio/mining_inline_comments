{"pr_number": 329, "pr_title": "Only include the underlying exception message in BufferedReaderInputStream", "pr_createdAt": "2020-06-17T21:33:10Z", "pr_url": "https://github.com/linkedin/rest.li/pull/329", "timeline": [{"oid": "6b13dea341a97872babc565bcbb721b9f5cef42f", "url": "https://github.com/linkedin/rest.li/commit/6b13dea341a97872babc565bcbb721b9f5cef42f", "message": "Only include the underlying exception message in BufferedReaderInputStream instead of rethrowing the original exception", "committedDate": "2020-06-17T21:14:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU1OTY5OQ==", "url": "https://github.com/linkedin/rest.li/pull/329#discussion_r442559699", "bodyText": "This means that you're going to lose the call stacks come with the throwable, right?\nWhy performance is a concern when there are errors?", "author": "cx-super", "createdAt": "2020-06-18T23:49:33Z", "path": "r2-filter-compression/src/main/java/com/linkedin/r2/filter/compression/streaming/BufferedReaderInputStream.java", "diffHunk": "@@ -54,7 +54,9 @@ public int read() throws IOException\n \n     if (_throwable != null)\n     {\n-      throw new IOException(_throwable);\n+      // Underlying network layer might throw an exception here and in certain frameworks, the exception class might not be classloaded (e.g. J2EE servlet containers separate server classes from application classes)\n+      // however logging framework might try to load the class when logging this exception, creating performance problems.\n+      throw new IOException(_throwable.getMessage());", "originalCommit": "6b13dea341a97872babc565bcbb721b9f5cef42f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU2MDY5Mw==", "url": "https://github.com/linkedin/rest.li/pull/329#discussion_r442560693", "bodyText": "If the throwable is included, log4j might try to classload it (to figure out the jar name of the class) when it is logged. However, this throwable may come from underlying network layer and sometimes classes from that layer (e.g. Jetty) are not visible to the application. In those cases, log4j will never load the class and will repeat trying, each time scanning through the classpath.", "author": "alexjinghn", "createdAt": "2020-06-18T23:53:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU1OTY5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU3NzAwNg==", "url": "https://github.com/linkedin/rest.li/pull/329#discussion_r442577006", "bodyText": "Understood. If classloader returns after some retries, ie performance issue, it should be ok. However if it stuck here forever, we'll have to figure out how to handle it. Can you confirm which case is this?", "author": "cx-super", "createdAt": "2020-06-19T00:59:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU1OTY5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU3NzYwMQ==", "url": "https://github.com/linkedin/rest.li/pull/329#discussion_r442577601", "bodyText": "It\u2019s the first case. It\u2019s a nice-to-have feature in log4j. If it can\u2019t find the jar, it will give up and just put a ? there", "author": "alexjinghn", "createdAt": "2020-06-19T01:02:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU1OTY5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU3OTAyMA==", "url": "https://github.com/linkedin/rest.li/pull/329#discussion_r442579020", "bodyText": "So error does not happen here. It's log4j trying to figure out the unknown stack. I'd vote not to change it here because we might lose some useful info. The app should fix the errors instead of worry about the performance when it happens.", "author": "cx-super", "createdAt": "2020-06-19T01:08:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU1OTY5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU4MTQ5NQ==", "url": "https://github.com/linkedin/rest.li/pull/329#discussion_r442581495", "bodyText": "Errors here are not app level errors. Most of them are network IO errors. eg when client times out, it sends an error to the server which is thrown here. I think we can omit the stacktrace from server here because application really only need to know network io issue happened here. server details shouldn\u2019t be exposed to application anyway. And lastly, the same error would have been logged in the server already.", "author": "alexjinghn", "createdAt": "2020-06-19T01:18:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU1OTY5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjYyMTE3Ng==", "url": "https://github.com/linkedin/rest.li/pull/329#discussion_r442621176", "bodyText": "OK then. Approved.", "author": "cx-super", "createdAt": "2020-06-19T04:13:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU1OTY5OQ=="}], "type": "inlineReview"}]}