{"pr_number": 295, "pr_title": "Stop publishing test artifacts & internal modules", "pr_createdAt": "2020-05-14T02:32:37Z", "pr_url": "https://github.com/linkedin/rest.li/pull/295", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg0OTYxNQ==", "url": "https://github.com/linkedin/rest.li/pull/295#discussion_r424849615", "bodyText": "I know this file is not written by you, but this variables naming is not consistent with other class variables, can you fix this by this chance?", "author": "junchuanwang", "createdAt": "2020-05-14T03:25:47Z", "path": "d2-test-api/src/main/java/com/linkedin/d2/balancer/clients/TestClient.java", "diffHunk": "@@ -0,0 +1,150 @@\n+/*\n+   Copyright (c) 2020 LinkedIn Corp.\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+*/\n+\n+package com.linkedin.d2.balancer.clients;\n+\n+import com.linkedin.common.callback.Callback;\n+import com.linkedin.common.util.None;\n+import com.linkedin.data.ByteString;\n+import com.linkedin.r2.filter.R2Constants;\n+import com.linkedin.r2.message.RequestContext;\n+import com.linkedin.r2.message.rest.RestRequest;\n+import com.linkedin.r2.message.rest.RestResponse;\n+import com.linkedin.r2.message.rest.RestResponseBuilder;\n+import com.linkedin.r2.message.stream.StreamRequest;\n+import com.linkedin.r2.message.stream.StreamResponse;\n+import com.linkedin.r2.message.stream.StreamResponseBuilder;\n+import com.linkedin.r2.message.stream.entitystream.ByteStringWriter;\n+import com.linkedin.r2.message.stream.entitystream.EntityStreams;\n+import com.linkedin.r2.transport.common.bridge.client.TransportClient;\n+import com.linkedin.r2.transport.common.bridge.common.TransportCallback;\n+import com.linkedin.r2.transport.common.bridge.common.TransportResponseImpl;\n+import java.util.Map;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.ScheduledExecutorService;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.TimeoutException;\n+\n+\n+public class TestClient implements TransportClient\n+{\n+  public static final int DEFAULT_REQUEST_TIMEOUT = 500;\n+  public StreamRequest streamRequest;\n+  public RestRequest restRequest;\n+  public RequestContext restRequestContext;\n+  public Map<String, String> restWireAttrs;\n+  public TransportCallback<StreamResponse> streamCallback;\n+  public TransportCallback<RestResponse>   restCallback;\n+  public ScheduledExecutorService _scheduler;\n+\n+  public boolean                         shutdownCalled;", "originalCommit": "98d77b1dd6923ae8512ac2c29d480be179de43eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg4MzU3OQ==", "url": "https://github.com/linkedin/rest.li/pull/295#discussion_r424883579", "bodyText": "Sure, may as well while I'm at it", "author": "evanw555", "createdAt": "2020-05-14T05:45:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg0OTYxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg5ODI0Mg==", "url": "https://github.com/linkedin/rest.li/pull/295#discussion_r424898242", "bodyText": "Actually I decided to keep it as-is because these variables are public.", "author": "evanw555", "createdAt": "2020-05-14T06:28:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg0OTYxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg1MDE1OQ==", "url": "https://github.com/linkedin/rest.li/pull/295#discussion_r424850159", "bodyText": "Also I noticed this, I actually seldom see variable contains \"don't\", I will rename to \"notToCallCallback\"... just saying.", "author": "junchuanwang", "createdAt": "2020-05-14T03:28:07Z", "path": "d2-test-api/src/main/java/com/linkedin/d2/balancer/clients/TestClient.java", "diffHunk": "@@ -0,0 +1,150 @@\n+/*\n+   Copyright (c) 2020 LinkedIn Corp.\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+*/\n+\n+package com.linkedin.d2.balancer.clients;\n+\n+import com.linkedin.common.callback.Callback;\n+import com.linkedin.common.util.None;\n+import com.linkedin.data.ByteString;\n+import com.linkedin.r2.filter.R2Constants;\n+import com.linkedin.r2.message.RequestContext;\n+import com.linkedin.r2.message.rest.RestRequest;\n+import com.linkedin.r2.message.rest.RestResponse;\n+import com.linkedin.r2.message.rest.RestResponseBuilder;\n+import com.linkedin.r2.message.stream.StreamRequest;\n+import com.linkedin.r2.message.stream.StreamResponse;\n+import com.linkedin.r2.message.stream.StreamResponseBuilder;\n+import com.linkedin.r2.message.stream.entitystream.ByteStringWriter;\n+import com.linkedin.r2.message.stream.entitystream.EntityStreams;\n+import com.linkedin.r2.transport.common.bridge.client.TransportClient;\n+import com.linkedin.r2.transport.common.bridge.common.TransportCallback;\n+import com.linkedin.r2.transport.common.bridge.common.TransportResponseImpl;\n+import java.util.Map;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.ScheduledExecutorService;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.TimeoutException;\n+\n+\n+public class TestClient implements TransportClient\n+{\n+  public static final int DEFAULT_REQUEST_TIMEOUT = 500;\n+  public StreamRequest streamRequest;\n+  public RestRequest restRequest;\n+  public RequestContext restRequestContext;\n+  public Map<String, String> restWireAttrs;\n+  public TransportCallback<StreamResponse> streamCallback;\n+  public TransportCallback<RestResponse>   restCallback;\n+  public ScheduledExecutorService _scheduler;\n+\n+  public boolean                         shutdownCalled;\n+  private final boolean _emptyResponse;\n+  private boolean _dontCallCallback;", "originalCommit": "98d77b1dd6923ae8512ac2c29d480be179de43eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg4Mzg2Nw==", "url": "https://github.com/linkedin/rest.li/pull/295#discussion_r424883867", "bodyText": "Yeah, it's sort of weird. I'll consider renaming.", "author": "evanw555", "createdAt": "2020-05-14T05:46:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg1MDE1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU4NTk5Mg==", "url": "https://github.com/linkedin/rest.li/pull/295#discussion_r425585992", "bodyText": "From what I remember, the policy is to keep the original copyright date if this is a simple refactor of the code.\nThis is the year of first publication.", "author": "karthikbalasub", "createdAt": "2020-05-15T06:09:54Z", "path": "d2-test-api/src/main/java/com/linkedin/d2/balancer/clients/TestClient.java", "diffHunk": "@@ -0,0 +1,153 @@\n+/*\n+   Copyright (c) 2020 LinkedIn Corp.", "originalCommit": "f34db252da0f880bcda9e90f228dc5e19443454e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "95f0a04314fd131257a68e4af821243a8efd5e3b", "url": "https://github.com/linkedin/rest.li/commit/95f0a04314fd131257a68e4af821243a8efd5e3b", "message": "Stop publishing test artifacts & internal modules\n\nIsolates the consumable test artifacts for d2 and darkcluster into the\nnew modules d2-test-api and darkcluster-test-api, respectively. Also\ndiscontinues publishing \"internal\" modules to Bintray, with these\nmodules determined as modules with no main source set and no known\nconsumers. Both these changes are backward-incompatible.", "committedDate": "2020-05-15T22:08:23Z", "type": "forcePushed"}, {"oid": "5570f5ef6be5217ffcaa12f1229b20129c5ee1a9", "url": "https://github.com/linkedin/rest.li/commit/5570f5ef6be5217ffcaa12f1229b20129c5ee1a9", "message": "Stop publishing test artifacts & internal modules\n\nIsolates the consumable test artifacts for d2 and darkcluster into the\nnew modules d2-test-api and darkcluster-test-api, respectively. Also\ndiscontinues publishing \"internal\" modules to Bintray, with these\nmodules determined as modules with no main source set and no known\nconsumers. Both these changes are backward-incompatible.", "committedDate": "2020-05-19T20:37:30Z", "type": "forcePushed"}, {"oid": "662aa3526677f3680d338156a8862284a7a2763a", "url": "https://github.com/linkedin/rest.li/commit/662aa3526677f3680d338156a8862284a7a2763a", "message": "Stop publishing test artifacts & internal modules\n\nIsolates the consumable test artifacts for d2 and darkcluster into the\nnew modules d2-test-api and darkcluster-test-api, respectively. Also\ndiscontinues publishing \"internal\" modules to Bintray, with these\nmodules determined as modules with no main source set and no known\nconsumers. Both these changes are backward-incompatible.", "committedDate": "2020-05-19T21:53:15Z", "type": "forcePushed"}, {"oid": "b3bcf2b8cdbd48377aa64af191b682cc3358a380", "url": "https://github.com/linkedin/rest.li/commit/b3bcf2b8cdbd48377aa64af191b682cc3358a380", "message": "Stop publishing test artifacts & internal modules\n\nIsolates the consumable test artifacts for d2 and darkcluster into the\nnew modules d2-test-api and darkcluster-test-api, respectively. Also\ndiscontinues publishing \"internal\" modules to Bintray, with these\nmodules determined as modules with no main source set and no known\nconsumers. Both these changes are backward-incompatible.", "committedDate": "2020-05-20T00:58:28Z", "type": "forcePushed"}, {"oid": "93a393b947dc0929e4cb8d14415121a75b4223f9", "url": "https://github.com/linkedin/rest.li/commit/93a393b947dc0929e4cb8d14415121a75b4223f9", "message": "Stop publishing test artifacts & internal modules\n\nIsolates the consumable test artifacts for d2 and darkcluster into the\nnew modules d2-test-api and darkcluster-test-api, respectively. Also\ndiscontinues publishing \"internal\" modules to Bintray, with these\nmodules determined as modules with no main source set and no known\nconsumers. Both these changes are backward-incompatible.", "committedDate": "2020-05-20T01:32:25Z", "type": "commit"}, {"oid": "93a393b947dc0929e4cb8d14415121a75b4223f9", "url": "https://github.com/linkedin/rest.li/commit/93a393b947dc0929e4cb8d14415121a75b4223f9", "message": "Stop publishing test artifacts & internal modules\n\nIsolates the consumable test artifacts for d2 and darkcluster into the\nnew modules d2-test-api and darkcluster-test-api, respectively. Also\ndiscontinues publishing \"internal\" modules to Bintray, with these\nmodules determined as modules with no main source set and no known\nconsumers. Both these changes are backward-incompatible.", "committedDate": "2020-05-20T01:32:25Z", "type": "forcePushed"}]}