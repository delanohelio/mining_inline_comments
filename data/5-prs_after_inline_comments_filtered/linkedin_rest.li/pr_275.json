{"pr_number": 275, "pr_title": "Enable tests in Travis, use retries for some tests", "pr_createdAt": "2020-04-29T22:41:33Z", "pr_url": "https://github.com/linkedin/rest.li/pull/275", "timeline": [{"oid": "2988a10e6e0f1ef6285247c55a36a9eb7368ae6d", "url": "https://github.com/linkedin/rest.li/commit/2988a10e6e0f1ef6285247c55a36a9eb7368ae6d", "message": "Enable tests in Travis, use retries for some tests\n\nEnabling tests in the Travis CI build to give us higher confidence in\nproposed changes. Addresses tests with recent flakiness by adding retry\nsupport.", "committedDate": "2020-05-07T20:40:50Z", "type": "forcePushed"}, {"oid": "f352908f1214a7c9449005649e86fe5b13ac9217", "url": "https://github.com/linkedin/rest.li/commit/f352908f1214a7c9449005649e86fe5b13ac9217", "message": "Enable tests in Travis, add some exclusions\n\nEnabling tests in the Travis CI build to give us higher confidence in\nproposed changes. The Travis environment seems to introduce flakiness or\neven total failure for some tests, so this adds test retries for some\ntests and total exclusion for other tests in order to alleviate this.\nThe 'ci-flaky' test group is excluded for all test tasks in the CI\nenvironment, though these tests should be addressed soon.", "committedDate": "2020-05-12T22:44:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg0NzgwNw==", "url": "https://github.com/linkedin/rest.li/pull/275#discussion_r424847807", "bodyText": "It is not necessary but I think 3 times will be better, sort of industry standard?", "author": "junchuanwang", "createdAt": "2020-05-14T03:17:48Z", "path": "d2/src/test/java/com/linkedin/d2/balancer/servers/ZookeeperConnectionManagerTest.java", "diffHunk": "@@ -352,7 +353,7 @@ public void testMarkUpDuringSessionExpiration()\n     shutdownManager(manager);\n   }\n \n-  @Test(invocationCount = 10, timeOut = 10000)\n+  @Test(invocationCount = 10, timeOut = 10000, retryAnalyzer = SingleRetry.class) // TODO: temporary retry to alleviate CI failures, should be investigated", "originalCommit": "07b53f83fe16a02ee002081094bf9682b0d05aee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg4MzQwMQ==", "url": "https://github.com/linkedin/rest.li/pull/275#discussion_r424883401", "bodyText": "I can create another implementation for 3 retries. I think I will add this as part of the dev guide:\n\nIf test is flaky in CI, add single retry.\nIf still flaky, use three retries.\nIf still flaky, add to ci-flaky group.\n\nOr do you think this is excessive?", "author": "evanw555", "createdAt": "2020-05-14T05:44:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg0NzgwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUwMDMzMQ==", "url": "https://github.com/linkedin/rest.li/pull/275#discussion_r425500331", "bodyText": "Second Junchuan, 3 times retry is kind of industry standard. Any reason to set it for 10?", "author": "nickibi", "createdAt": "2020-05-15T00:24:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg0NzgwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU5NjA3MQ==", "url": "https://github.com/linkedin/rest.li/pull/275#discussion_r425596071", "bodyText": "Did you check the tests in ci-flaky group with 3 retires?", "author": "karthikbalasub", "createdAt": "2020-05-15T06:39:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg0NzgwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA1OTgzNg==", "url": "https://github.com/linkedin/rest.li/pull/275#discussion_r426059836", "bodyText": "@nickibi The retry here (SingleRetry) allows for one retry. The invocationCount = 10 expression means that the test will run 10 times and must pass all 10 times.\n@karthikbalasub Nope, I excluded tests that failed even with a retry. I'll try another iteration that replaces ci-flaky with 3 retries. Then we'll see which ones really need to be excluded.", "author": "evanw555", "createdAt": "2020-05-15T21:41:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg0NzgwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg0ODEzOQ==", "url": "https://github.com/linkedin/rest.li/pull/275#discussion_r424848139", "bodyText": "what does this group do? Is there a way to disable all ci-flaky tests after you group them?", "author": "junchuanwang", "createdAt": "2020-05-14T03:19:19Z", "path": "d2/src/test/java/com/linkedin/d2/balancer/servers/ZookeeperConnectionManagerTest.java", "diffHunk": "@@ -437,7 +438,7 @@ public void testMarkUpAndDownMultipleTimesFinalDown()\n     executorService.shutdown();\n   }\n \n-  @Test(invocationCount = 10, timeOut = 10000)\n+  @Test(invocationCount = 10, timeOut = 10000, groups = { \"ci-flaky\" })", "originalCommit": "07b53f83fe16a02ee002081094bf9682b0d05aee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg4MjI3Mg==", "url": "https://github.com/linkedin/rest.li/pull/275#discussion_r424882272", "bodyText": "All tests in the group ci-flaky are conditionally excluded if being run in Travis. If being run locally, they will still be run. I added logic for this in the root build.gradle, search for the reference to ci-flaky", "author": "evanw555", "createdAt": "2020-05-14T05:40:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg0ODEzOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg0ODk5MA==", "url": "https://github.com/linkedin/rest.li/pull/275#discussion_r424848990", "bodyText": "I am afraid I am not a fan of this naming. How about just Retires or RetrySetup ?", "author": "junchuanwang", "createdAt": "2020-05-14T03:22:52Z", "path": "test-util/src/main/java/com/linkedin/test/util/VariableRetries.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+   Copyright (c) 2020 LinkedIn Corp.\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+*/\n+\n+package com.linkedin.test.util;\n+\n+import org.testng.IRetryAnalyzer;\n+import org.testng.ITestResult;\n+\n+\n+/**\n+ * Allows N retries for a given test method. Subclass implementations must specify the value of N.\n+ *\n+ * Note that the same instance is used for all iterations of a test method, meaning that even if there are multiple\n+ * iterations (e.g. data provider provides multiple sets of input) only N retries will be allowed.\n+ *\n+ * @author Evan Williams\n+ */\n+public abstract class VariableRetries implements IRetryAnalyzer", "originalCommit": "07b53f83fe16a02ee002081094bf9682b0d05aee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg4MjUyNg==", "url": "https://github.com/linkedin/rest.li/pull/275#discussion_r424882526", "bodyText": "Haha I agree, I originally named it NRetries but I thought it looked weird. I can just do Retries or something like that.", "author": "evanw555", "createdAt": "2020-05-14T05:41:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg0ODk5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU5Mjk1Mw==", "url": "https://github.com/linkedin/rest.li/pull/275#discussion_r425592953", "bodyText": "remove MAX_RETRIES constant", "author": "karthikbalasub", "createdAt": "2020-05-15T06:30:20Z", "path": "restli-int-test/src/test/java/com/linkedin/restli/examples/instrumentation/TestLatencyInstrumentation.java", "diffHunk": "@@ -167,37 +168,19 @@ public void afterMethod() throws Exception\n    * using streaming should be inconsequential for this test, but the server using the streaming codec will actually\n    * affect the outcome.\n    *\n-   * This test allows for multiple retries in case of an anomalous test run to prevent test flakiness.\n-   *\n    * @param useStreaming whether the server should use an underlying streaming server (\"restOverStream\") and whether the\n    *                     downstream request should use streaming (see the disclaimer above)\n    * @param forceException whether the upstream and downstream resources should trigger the error response path\n    * @param timingImportanceThreshold impacts which keys are included in the request context\n    */\n-  @Test(dataProvider = \"latencyInstrumentation\")\n+  @Test(dataProvider = \"latencyInstrumentation\", retryAnalyzer = SingleRetry.class)\n   public void testLatencyInstrumentation(boolean useStreaming, boolean forceException, boolean useScatterGather,\n       TimingImportance timingImportanceThreshold) throws RemoteInvocationException, InterruptedException\n   {\n-    AssertionError testFailure = null;\n-    for (int iteration = 0; iteration <= MAX_RETRIES; iteration++)", "originalCommit": "02bf43099186633e1aa637c834f20ab265fd374b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5b4d6f64355115b14cf927d58f57701f251b7eec", "url": "https://github.com/linkedin/rest.li/commit/5b4d6f64355115b14cf927d58f57701f251b7eec", "message": "Enable tests in Travis, add some exclusions\n\nEnabling tests in the Travis CI build to give us higher confidence in\nproposed changes. The Travis environment seems to introduce flakiness or\neven total failure for some tests, so this adds test retries for some\ntests and total exclusion for other tests in order to alleviate this.\nThe 'ci-flaky' test group is excluded for all test tasks in the CI\nenvironment, though these tests should be addressed soon.", "committedDate": "2020-05-15T22:14:46Z", "type": "forcePushed"}, {"oid": "544eb670829dfed6df109ba2fccde3a3ace1ea72", "url": "https://github.com/linkedin/rest.li/commit/544eb670829dfed6df109ba2fccde3a3ace1ea72", "message": "Enable tests in Travis, add some exclusions\n\nEnabling tests in the Travis CI build to give us higher confidence in\nproposed changes. The Travis environment seems to introduce flakiness or\neven total failure for some tests, so this adds test retries for some\ntests and total exclusion for other tests in order to alleviate this.\nThe 'ci-flaky' test group is excluded for all test tasks in the CI\nenvironment, though these tests should be addressed soon.\n\nThe process for addressing flakiness is:\n- if a test is flaky, give it one retry using SingleRetry\n- if it's still flaky, give it three retries using ThreeRetries\n- if it's still flaky, disable it in CI using the group \"ci-flaky\"", "committedDate": "2020-05-19T20:31:23Z", "type": "forcePushed"}, {"oid": "b36069be10fae9378c7a42be18bbbd2acfb50648", "url": "https://github.com/linkedin/rest.li/commit/b36069be10fae9378c7a42be18bbbd2acfb50648", "message": "Enable tests in Travis, add some exclusions\n\nEnabling tests in the Travis CI build to give us higher confidence in\nproposed changes. The Travis environment seems to introduce flakiness or\neven total failure for some tests, so this adds test retries for some\ntests and total exclusion for other tests in order to alleviate this.\nThe 'ci-flaky' test group is excluded for all test tasks in the CI\nenvironment, though these tests should be addressed soon.\n\nThe process for addressing flakiness is:\n- if a test is flaky, give it one retry using SingleRetry\n- if it's still flaky, give it three retries using ThreeRetries\n- if it's still flaky, disable it in CI using the group \"ci-flaky\"", "committedDate": "2020-05-19T20:47:38Z", "type": "commit"}, {"oid": "b36069be10fae9378c7a42be18bbbd2acfb50648", "url": "https://github.com/linkedin/rest.li/commit/b36069be10fae9378c7a42be18bbbd2acfb50648", "message": "Enable tests in Travis, add some exclusions\n\nEnabling tests in the Travis CI build to give us higher confidence in\nproposed changes. The Travis environment seems to introduce flakiness or\neven total failure for some tests, so this adds test retries for some\ntests and total exclusion for other tests in order to alleviate this.\nThe 'ci-flaky' test group is excluded for all test tasks in the CI\nenvironment, though these tests should be addressed soon.\n\nThe process for addressing flakiness is:\n- if a test is flaky, give it one retry using SingleRetry\n- if it's still flaky, give it three retries using ThreeRetries\n- if it's still flaky, disable it in CI using the group \"ci-flaky\"", "committedDate": "2020-05-19T20:47:38Z", "type": "forcePushed"}]}