{"pr_number": 1835, "pr_title": "Hive: Only provide iceberg tables in HiveCatalog listTables", "pr_createdAt": "2020-11-26T08:53:19Z", "pr_url": "https://github.com/apache/iceberg/pull/1835", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTgyOTQzMg==", "url": "https://github.com/apache/iceberg/pull/1835#discussion_r531829432", "bodyText": "nit: maybe use tableObjects or tables for this and use tableNames for prev.", "author": "rdsr", "createdAt": "2020-11-28T03:39:11Z", "path": "hive-metastore/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -118,8 +119,11 @@ public HiveCatalog(\n \n     try {\n       List<String> tables = clients.run(client -> client.getAllTables(database));\n-      List<TableIdentifier> tableIdentifiers = tables.stream()\n-          .map(t -> TableIdentifier.of(namespace, t))\n+      List<Table> tableObject = clients.run(client -> client.getTableObjectsByName(database, tables));", "originalCommit": "fa4d880747891efdbbff891f35106882a666ca39", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjMxMTY2Mg==", "url": "https://github.com/apache/iceberg/pull/1835#discussion_r532311662", "bodyText": "I udpated it, it is more clear", "author": "zhangjun0x01", "createdAt": "2020-11-30T02:08:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTgyOTQzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTgyOTY4Ng==", "url": "https://github.com/apache/iceberg/pull/1835#discussion_r531829686", "bodyText": "in org.apache.hadoop.hive.metastore.api.Table class I do see internally to check for table.getParameters is null or not. Do you think that check makes sense here? I'm not completely certain whether table.getParameters won't be null", "author": "rdsr", "createdAt": "2020-11-28T03:41:51Z", "path": "hive-metastore/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -118,8 +119,11 @@ public HiveCatalog(\n \n     try {\n       List<String> tables = clients.run(client -> client.getAllTables(database));\n-      List<TableIdentifier> tableIdentifiers = tables.stream()\n-          .map(t -> TableIdentifier.of(namespace, t))\n+      List<Table> tableObject = clients.run(client -> client.getTableObjectsByName(database, tables));\n+      List<TableIdentifier> tableIdentifiers = tableObject.stream()\n+          .filter(table -> BaseMetastoreTableOperations.ICEBERG_TABLE_TYPE_VALUE\n+              .equalsIgnoreCase(table.getParameters().get(BaseMetastoreTableOperations.TABLE_TYPE_PROP)))", "originalCommit": "fa4d880747891efdbbff891f35106882a666ca39", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjMxMTQ4MQ==", "url": "https://github.com/apache/iceberg/pull/1835#discussion_r532311481", "bodyText": "Yes,I added the check", "author": "zhangjun0x01", "createdAt": "2020-11-30T02:07:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTgyOTY4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTgyOTgzMg==", "url": "https://github.com/apache/iceberg/pull/1835#discussion_r531829832", "bodyText": "a simpler way IMO could have been to use HiveCatalog and Iceberg apis  to create a table and then drop the iceberg metadata from Hive table properties. Though I guess this is fine too.", "author": "rdsr", "createdAt": "2020-11-28T03:44:05Z", "path": "hive-metastore/src/test/java/org/apache/iceberg/hive/HiveTableTest.java", "diffHunk": "@@ -298,14 +308,43 @@ public void testFailure() throws TException {\n   }\n \n   @Test\n-  public void testListTables() {\n+  public void testListTables() throws TException, IOException {\n     List<TableIdentifier> tableIdents = catalog.listTables(TABLE_IDENTIFIER.namespace());\n     List<TableIdentifier> expectedIdents = tableIdents.stream()\n         .filter(t -> t.namespace().level(0).equals(DB_NAME) && t.name().equals(TABLE_NAME))\n         .collect(Collectors.toList());\n \n     Assert.assertEquals(1, expectedIdents.size());\n     Assert.assertTrue(catalog.tableExists(TABLE_IDENTIFIER));\n+\n+    // create a hive table\n+    String hiveTableName = \"test_hive_table\";\n+    org.apache.hadoop.hive.metastore.api.Table hiveTable = createHiveTable(hiveTableName);\n+    metastoreClient.createTable(hiveTable);\n+\n+    List<TableIdentifier> tableIdents1 = catalog.listTables(TABLE_IDENTIFIER.namespace());\n+    Assert.assertEquals(\"should only 1 iceberg table .\", 1, tableIdents1.size());\n+    Assert.assertTrue(catalog.tableExists(TABLE_IDENTIFIER));\n+    metastoreClient.dropTable(DB_NAME, hiveTableName);\n+  }\n+\n+  private org.apache.hadoop.hive.metastore.api.Table createHiveTable(String hiveTableName) throws IOException {", "originalCommit": "fa4d880747891efdbbff891f35106882a666ca39", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjMxMjY2MQ==", "url": "https://github.com/apache/iceberg/pull/1835#discussion_r532312661", "bodyText": "I think we can remove the properties from iceberg table, but it is not a correct hive table. Although the unit test can pass, I am not sure whether it makes sense.", "author": "zhangjun0x01", "createdAt": "2020-11-30T02:12:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTgyOTgzMg=="}], "type": "inlineReview"}, {"oid": "c893a4c772d028566529c705d7beb77762e4b303", "url": "https://github.com/apache/iceberg/commit/c893a4c772d028566529c705d7beb77762e4b303", "message": "only list iceberg tables for hivecatalog", "committedDate": "2020-11-30T02:04:53Z", "type": "commit"}, {"oid": "a57adf74dd2057649295fcdcb77d1716015b9725", "url": "https://github.com/apache/iceberg/commit/a57adf74dd2057649295fcdcb77d1716015b9725", "message": "check table.getParameters is null or not", "committedDate": "2020-11-30T02:04:53Z", "type": "commit"}, {"oid": "a57adf74dd2057649295fcdcb77d1716015b9725", "url": "https://github.com/apache/iceberg/commit/a57adf74dd2057649295fcdcb77d1716015b9725", "message": "check table.getParameters is null or not", "committedDate": "2020-11-30T02:04:53Z", "type": "forcePushed"}]}