{"pr_number": 1722, "pr_title": "API: one line fix in Expressions with tests", "pr_createdAt": "2020-11-04T18:20:26Z", "pr_url": "https://github.com/apache/iceberg/pull/1722", "timeline": [{"oid": "59baba3bb76a3526ff19c43095c9deef06c85b85", "url": "https://github.com/apache/iceberg/commit/59baba3bb76a3526ff19c43095c9deef06c85b85", "message": "API: one liner fix in Expressions", "committedDate": "2020-11-04T18:15:32Z", "type": "commit"}, {"oid": "b538644c0da8c3e14eed636d5d8db9dce331c842", "url": "https://github.com/apache/iceberg/commit/b538644c0da8c3e14eed636d5d8db9dce331c842", "message": "update tests", "committedDate": "2020-11-04T22:34:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMwNzk4MQ==", "url": "https://github.com/apache/iceberg/pull/1722#discussion_r518307981", "bodyText": "I don't see any uses of this factory method in Spark, Flink, or MR/Hive so luckily, I don't think that this affects engines. (And I would expect it to be caught quickly by Spark tests if we did.) I think that decreases the urgency of this fix, but it still affects API users.\nThanks for catching this, @yyanyy!", "author": "rdblue", "createdAt": "2020-11-05T19:25:57Z", "path": "api/src/main/java/org/apache/iceberg/expressions/Expressions.java", "diffHunk": "@@ -120,7 +120,7 @@ public static Expression not(Expression child) {\n   }\n \n   public static <T> UnboundPredicate<T> notNull(UnboundTerm<T> expr) {\n-    return new UnboundPredicate<>(Expression.Operation.IS_NULL, expr);\n+    return new UnboundPredicate<>(Expression.Operation.NOT_NULL, expr);", "originalCommit": "b538644c0da8c3e14eed636d5d8db9dce331c842", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODkxMTIyOQ==", "url": "https://github.com/apache/iceberg/pull/1722#discussion_r518911229", "bodyText": "Let's revert all of the changes to this file.\nWhat we need to test for this PR is that Expressions.notNull(UnboundTerm) creates an expression with operation NOT_NULL. The changes here are really large and change many, many more cases.\nThese changes basically migrate to using the UnboundTerm factory methods in Expressions for all of the cases, which is not what we want. This suite tests the Evaluator, not Expressions.\nIt would be great to add more cases to the TestExpressionHelpers suite for the Expressions factory methods that validates notNull results in UnboundPredicate with op() == NOT_NULL. We can also add more cases to cover more of Expressions, but I don't think this suite needs to change.", "author": "rdblue", "createdAt": "2020-11-06T17:53:19Z", "path": "api/src/test/java/org/apache/iceberg/expressions/TestEvaluator.java", "diffHunk": "@@ -63,11 +66,20 @@\n \n   @Test\n   public void testLessThan() {\n-    Evaluator evaluator = new Evaluator(STRUCT, lessThan(\"x\", 7));\n+    testLessThan(new Evaluator(STRUCT, lessThan(\"x\", 7)),\n+        new Evaluator(STRUCT, lessThan(\"s1.s2.s3.s4.i\", 7)));\n+  }\n+\n+  @Test\n+  public void testLessThanWithUnboundTerm() {\n+    testLessThan(new Evaluator(STRUCT, lessThan(self(\"x\"), 7)),\n+        new Evaluator(STRUCT, lessThan(self(\"s1.s2.s3.s4.i\"), 7)));", "originalCommit": "b538644c0da8c3e14eed636d5d8db9dce331c842", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "48aa82bc0ae8a88b1541e4eba70780e38bf7c3a7", "url": "https://github.com/apache/iceberg/commit/48aa82bc0ae8a88b1541e4eba70780e38bf7c3a7", "message": "Revert \"update tests\"\n\nThis reverts commit b538644c0da8c3e14eed636d5d8db9dce331c842.", "committedDate": "2020-11-06T18:40:53Z", "type": "commit"}]}