{"pr_number": 1321, "pr_title": "Avro: Fix pruning columns when a logical-map array's value type is nested", "pr_createdAt": "2020-08-11T05:42:52Z", "pr_url": "https://github.com/apache/iceberg/pull/1321", "timeline": [{"oid": "66d42076801b26f2965959f8786938a2ee4121c4", "url": "https://github.com/apache/iceberg/commit/66d42076801b26f2965959f8786938a2ee4121c4", "message": "Avro: Fix pruning columns when a logical-map array's value type is nested\n\nE.g., map(long, list<long>)", "committedDate": "2020-08-11T05:43:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODk5MzIxMw==", "url": "https://github.com/apache/iceberg/pull/1321#discussion_r468993213", "bodyText": "I wonder if we should solve this in a different way. The issue is that when complex value types are involved for logical maps the key is not projected. Then why don't we project the key field if the map's  value field is projected?\nWould it be better to change the map method in GetProjectedIds to always project the keyField if valueResult is not null instead of changing PruneColumns?\nWhat do you guys think @rdblue, @lxynov ?", "author": "rdsr", "createdAt": "2020-08-12T04:08:19Z", "path": "core/src/main/java/org/apache/iceberg/avro/PruneColumns.java", "diffHunk": "@@ -144,16 +144,18 @@ public Schema array(Schema array, Schema element) {\n       if (selectedIds.contains(keyId) || selectedIds.contains(valueId)) {\n         return complexMapWithIds(array, keyId, valueId);\n       } else if (element != null) {\n-        Schema keyProjection = element.getField(\"key\").schema();\n+        Schema.Field keyProjectionField = element.getField(\"key\");", "originalCommit": "66d42076801b26f2965959f8786938a2ee4121c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTAwMTgzMQ==", "url": "https://github.com/apache/iceberg/pull/1321#discussion_r469001831", "bodyText": "Discussing with @rdsr offline, also posting here for @rdblue 's visibility\nI tried to always project the keyField but encountered two issues:\n\nTestGenericReadProjection in Parquet fails somehow. (I haven't spent time looking into how to resolve it)\nWe'll still need to change PruneColumns because its current logic is // if either key or value is selected, the whole map must be projected.\n\n@rdsr @rdblue what are your thoughts? I think we can make it to always project keyField but it may need some efforts", "author": "lxynov", "createdAt": "2020-08-12T04:43:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODk5MzIxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTAwODM2Nw==", "url": "https://github.com/apache/iceberg/pull/1321#discussion_r469008367", "bodyText": "I understand now, specially bullet item 2 makes sense to me.", "author": "rdsr", "createdAt": "2020-08-12T05:10:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODk5MzIxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDMxNjEwMw==", "url": "https://github.com/apache/iceberg/pull/1321#discussion_r470316103", "bodyText": "Looks like indentation is off here. The project uses 2 spaces per indent, and 2 indents for continuation lines like this. Could you fix this method please?", "author": "rdblue", "createdAt": "2020-08-14T00:09:18Z", "path": "core/src/test/java/org/apache/iceberg/avro/TestAvroReadProjection.java", "diffHunk": "@@ -49,4 +56,27 @@\n \n     return Iterables.getOnlyElement(records);\n   }\n+\n+  @Test\n+  public void testAvroArrayAsLogicalMap() throws IOException {\n+    Schema writeSchema = new Schema(\n+            Types.NestedField.optional(0, \"map\", Types.MapType.ofOptional(2, 3,", "originalCommit": "66d42076801b26f2965959f8786938a2ee4121c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM4MTc3OA==", "url": "https://github.com/apache/iceberg/pull/1321#discussion_r470381778", "bodyText": "Oh right, just updated it.", "author": "lxynov", "createdAt": "2020-08-14T02:54:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDMxNjEwMw=="}], "type": "inlineReview"}, {"oid": "792050544be872c79a27ca0f1fabbe254cd22e73", "url": "https://github.com/apache/iceberg/commit/792050544be872c79a27ca0f1fabbe254cd22e73", "message": "Avro: Fix pruning columns when a logical-map array's value type is nested\n\nE.g., map(long, list<long>)", "committedDate": "2020-08-14T02:53:40Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDczMTY0MQ==", "url": "https://github.com/apache/iceberg/pull/1321#discussion_r470731641", "bodyText": "Looks like this wasn't updated.", "author": "rdblue", "createdAt": "2020-08-14T16:34:40Z", "path": "core/src/test/java/org/apache/iceberg/avro/TestAvroReadProjection.java", "diffHunk": "@@ -49,4 +56,27 @@\n \n     return Iterables.getOnlyElement(records);\n   }\n+\n+  @Test\n+  public void testAvroArrayAsLogicalMap() throws IOException {\n+    Schema writeSchema = new Schema(\n+        Types.NestedField.optional(0, \"map\", Types.MapType.ofOptional(2, 3,\n+            Types.LongType.get(),\n+            Types.ListType.ofRequired(1, Types.LongType.get())\n+        ))\n+    );\n+\n+    List<Long> values1 = ImmutableList.of(101L, 102L);\n+    List<Long> values2 = ImmutableList.of(201L, 202L, 203L);\n+    GenericData.Record record = new GenericData.Record(AvroSchemaUtil.convert(writeSchema, \"table\"));\n+    record.put(\"map\", ImmutableMap.of(100L, values1, 200L, values2));\n+\n+    GenericData.Record projected = writeAndRead(\"full_projection\", writeSchema, writeSchema, record);\n+    Assert.assertEquals(\"Should contain correct value list\",\n+            values1,", "originalCommit": "792050544be872c79a27ca0f1fabbe254cd22e73", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDgwOTMzMg==", "url": "https://github.com/apache/iceberg/pull/1321#discussion_r470809332", "bodyText": "Oh my bad, just updated.", "author": "lxynov", "createdAt": "2020-08-14T18:49:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDczMTY0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDgzNzk0OA==", "url": "https://github.com/apache/iceberg/pull/1321#discussion_r470837948", "bodyText": "Thanks! I'll commit this when tests pass.", "author": "rdblue", "createdAt": "2020-08-14T19:56:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDczMTY0MQ=="}], "type": "inlineReview"}, {"oid": "4f297d3f18d4d08004876370495a559f6eec522f", "url": "https://github.com/apache/iceberg/commit/4f297d3f18d4d08004876370495a559f6eec522f", "message": "Avro: Fix pruning columns when a logical-map array's value type is nested\n\nE.g., map(long, list<long>)", "committedDate": "2020-08-14T18:48:53Z", "type": "commit"}, {"oid": "4f297d3f18d4d08004876370495a559f6eec522f", "url": "https://github.com/apache/iceberg/commit/4f297d3f18d4d08004876370495a559f6eec522f", "message": "Avro: Fix pruning columns when a logical-map array's value type is nested\n\nE.g., map(long, list<long>)", "committedDate": "2020-08-14T18:48:53Z", "type": "forcePushed"}]}