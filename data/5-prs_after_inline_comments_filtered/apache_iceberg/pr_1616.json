{"pr_number": 1616, "pr_title": "Seperate Action Implementations into Spark Specific Modules - With Reflection", "pr_createdAt": "2020-10-15T17:07:52Z", "pr_url": "https://github.com/apache/iceberg/pull/1616", "timeline": [{"oid": "3f5fb2b76898a3fdc2e9bd6e4b96df0671e5180c", "url": "https://github.com/apache/iceberg/commit/3f5fb2b76898a3fdc2e9bd6e4b96df0671e5180c", "message": "Seperate Action Implementations into Spark Specific Modules\n\nUses reflection in the base Actions class to determine the actual\nimplementation on the classloader to use. This allows both Spark2\nand Spark3 to use different implementations of Actions while not\nchanging the location of the original Actions class.", "committedDate": "2020-10-15T17:09:50Z", "type": "commit"}, {"oid": "3f5fb2b76898a3fdc2e9bd6e4b96df0671e5180c", "url": "https://github.com/apache/iceberg/commit/3f5fb2b76898a3fdc2e9bd6e4b96df0671e5180c", "message": "Seperate Action Implementations into Spark Specific Modules\n\nUses reflection in the base Actions class to determine the actual\nimplementation on the classloader to use. This allows both Spark2\nand Spark3 to use different implementations of Actions while not\nchanging the location of the original Actions class.", "committedDate": "2020-10-15T17:09:50Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTk1NDA5MA==", "url": "https://github.com/apache/iceberg/pull/1616#discussion_r505954090", "bodyText": "Using our reflection helpers, this could be simpler:\n  try {\n    DynConstructors.Ctor<Actions> ctor = DynConstructors.builder()\n            .impl(SparkActions.class, SparkSession.class, Table.class)\n            .build();\n    return ctor;\n  } catch (NoSuchMethodException e) {\n    throw new UnsupportedOperationException(\"Cannot find Actions implementation on the classpath\");\n  }", "author": "rdblue", "createdAt": "2020-10-16T01:08:45Z", "path": "spark/src/main/java/org/apache/iceberg/actions/Actions.java", "diffHunk": "@@ -19,25 +19,57 @@\n \n package org.apache.iceberg.actions;\n \n+import java.lang.reflect.Constructor;\n+import java.lang.reflect.InvocationTargetException;\n import org.apache.iceberg.Table;\n import org.apache.spark.sql.SparkSession;\n \n public class Actions {\n+  private static final String IMPL_NAME = \"SparkActions\";\n+\n+  private static Class<Actions> implClass;\n+  private static Constructor<Actions> implConstructor;\n \n   private SparkSession spark;\n   private Table table;\n \n-  private Actions(SparkSession spark, Table table) {\n+  protected Actions(SparkSession spark, Table table) {\n     this.spark = spark;\n     this.table = table;\n   }\n \n+  private static Constructor actionConstructor() {", "originalCommit": "3f5fb2b76898a3fdc2e9bd6e4b96df0671e5180c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjUyMzY5NQ==", "url": "https://github.com/apache/iceberg/pull/1616#discussion_r506523695", "bodyText": "Unfortunately DynConstructor wraps up exceptions (no explicit throws) a bit differently so we can't just catch a NSME, let me see if I can do something similar.", "author": "RussellSpitzer", "createdAt": "2020-10-16T15:05:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTk1NDA5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjUyNTc3Nw==", "url": "https://github.com/apache/iceberg/pull/1616#discussion_r506525777", "bodyText": "we need build checked :| which has this code which kinda makes me laugh a little\n    @SuppressWarnings(\"unchecked\")\n    public <C> Ctor<C> buildChecked() throws NoSuchMethodException {", "author": "RussellSpitzer", "createdAt": "2020-10-16T15:06:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTk1NDA5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjYyMTA2OA==", "url": "https://github.com/apache/iceberg/pull/1616#discussion_r506621068", "bodyText": "Yeah, the API allows you to catch checked exceptions if you want to handle them, or the normal path will wrap them with error messages and unchecked exceptions.", "author": "rdblue", "createdAt": "2020-10-16T17:30:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTk1NDA5MA=="}], "type": "inlineReview"}, {"oid": "cdd4e8bd30329b13d364c5eea9c64663e482c2c5", "url": "https://github.com/apache/iceberg/commit/cdd4e8bd30329b13d364c5eea9c64663e482c2c5", "message": "Switch to using Reflection Utils Class", "committedDate": "2020-10-16T17:39:35Z", "type": "commit"}, {"oid": "cdd4e8bd30329b13d364c5eea9c64663e482c2c5", "url": "https://github.com/apache/iceberg/commit/cdd4e8bd30329b13d364c5eea9c64663e482c2c5", "message": "Switch to using Reflection Utils Class", "committedDate": "2020-10-16T17:39:35Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjcwMjE3Nw==", "url": "https://github.com/apache/iceberg/pull/1616#discussion_r506702177", "bodyText": "Do we need to make these public?", "author": "aokolnychyi", "createdAt": "2020-10-16T20:19:47Z", "path": "spark2/src/main/java/org/apache/iceberg/actions/SparkActions.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg.actions;\n+\n+import org.apache.iceberg.Table;\n+import org.apache.spark.sql.SparkSession;\n+\n+public class SparkActions extends Actions {", "originalCommit": "cdd4e8bd30329b13d364c5eea9c64663e482c2c5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzgzNjM3MQ==", "url": "https://github.com/apache/iceberg/pull/1616#discussion_r507836371", "bodyText": "I guess not, I'll close them", "author": "RussellSpitzer", "createdAt": "2020-10-19T15:16:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjcwMjE3Nw=="}], "type": "inlineReview"}, {"oid": "32f705469ed9efb67cac927eda56245dc3ea8664", "url": "https://github.com/apache/iceberg/commit/32f705469ed9efb67cac927eda56245dc3ea8664", "message": "DynConstructors uses HiddenImpl for DeclaredConstructors", "committedDate": "2020-10-16T21:01:39Z", "type": "commit"}, {"oid": "d7acc1a024c7b50135cb71be3bbdecf26deff916", "url": "https://github.com/apache/iceberg/commit/d7acc1a024c7b50135cb71be3bbdecf26deff916", "message": "Package Private SparkActions", "committedDate": "2020-10-19T15:21:25Z", "type": "commit"}]}