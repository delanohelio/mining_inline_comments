{"pr_number": 1280, "pr_title": "Spark: refactor serialization test suites", "pr_createdAt": "2020-07-31T07:36:09Z", "pr_url": "https://github.com/apache/iceberg/pull/1280", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ1MzI5NQ==", "url": "https://github.com/apache/iceberg/pull/1280#discussion_r463453295", "bodyText": "This is identical to TestDataFileSerialization.checkDataFile - just moved to here.", "author": "HeartSaVioR", "createdAt": "2020-07-31T07:37:08Z", "path": "spark/src/test/java/org/apache/iceberg/SerializationCheckHelper.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg;\n+\n+import org.junit.Assert;\n+import java.util.Comparator;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+public final class SerializationCheckHelper {\n+  private SerializationCheckHelper() {\n+  }\n+\n+  public static void checkBaseCombinedScanTask(BaseCombinedScanTask expected, BaseCombinedScanTask actual) {\n+    List<FileScanTask> expectedTasks = getFileScanTasksInFilePathOrder(expected);\n+    List<FileScanTask> actualTasks = getFileScanTasksInFilePathOrder(actual);\n+\n+    Assert.assertEquals(\"The number of file scan tasks should match\",\n+        expectedTasks.size(), actualTasks.size());\n+\n+    for (int i = 0 ; i < expectedTasks.size(); i++) {\n+      FileScanTask expectedTask = expectedTasks.get(i);\n+      FileScanTask actualTask = actualTasks.get(i);\n+      checkFileScanTask(expectedTask, actualTask);\n+    }\n+  }\n+\n+  private static List<FileScanTask> getFileScanTasksInFilePathOrder(BaseCombinedScanTask task) {\n+    return task.files().stream()\n+        // use file path + start position to differentiate the tasks\n+        .sorted(Comparator.comparing(o -> o.file().path().toString() + \"##\" + o.start()))\n+        .collect(Collectors.toList());\n+  }\n+\n+  public static void checkFileScanTask(FileScanTask expected, FileScanTask actual) {\n+    checkDataFile(expected.file(), actual.file());\n+\n+    // PartitionSpec implements its own equals method\n+    Assert.assertEquals(\"PartitionSpec doesn't match\", expected.spec(), actual.spec());\n+\n+    Assert.assertEquals(\"starting position doesn't match\", expected.start(), actual.start());\n+\n+    Assert.assertEquals(\"the number of bytes to scan doesn't match\", expected.start(), actual.start());\n+\n+    // simplify comparison on residual expression via comparing toString\n+    Assert.assertEquals(\"Residual expression doesn't match\",\n+        expected.residual().toString(), actual.residual().toString());\n+  }\n+\n+  public static void checkDataFile(DataFile expected, DataFile actual) {", "originalCommit": "f27f43e9830ed3812f3d34287ae8045c053b227a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ1NDAyNQ==", "url": "https://github.com/apache/iceberg/pull/1280#discussion_r463454025", "bodyText": "I decided to add the serde tests of BaseCombinedScanTask here, because it seems to require non-trivial efforts to create BasedCombinedScanTask by hand. I can move out if we'd like to have separate suite with manually crafted test objects.", "author": "HeartSaVioR", "createdAt": "2020-07-31T07:39:03Z", "path": "spark/src/test/java/org/apache/iceberg/actions/TestRewriteDataFilesAction.java", "diffHunk": "@@ -311,6 +324,64 @@ public void testRewriteLargeTableHasResiduals() {\n     Assert.assertEquals(\"Rows must match\", records, actualRecords);\n   }\n \n+  @Test", "originalCommit": "f27f43e9830ed3812f3d34287ae8045c053b227a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4f28b2bf4307be35cadd945071bf50ba96d3b2f1", "url": "https://github.com/apache/iceberg/commit/4f28b2bf4307be35cadd945071bf50ba96d3b2f1", "message": "Spark: refactor serialization test suites", "committedDate": "2020-08-07T03:29:08Z", "type": "commit"}, {"oid": "4f28b2bf4307be35cadd945071bf50ba96d3b2f1", "url": "https://github.com/apache/iceberg/commit/4f28b2bf4307be35cadd945071bf50ba96d3b2f1", "message": "Spark: refactor serialization test suites", "committedDate": "2020-08-07T03:29:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA3OTIyMw==", "url": "https://github.com/apache/iceberg/pull/1280#discussion_r467079223", "bodyText": "This is moved from TestScanTaskSerialization.checkFileScanTask.", "author": "HeartSaVioR", "createdAt": "2020-08-07T14:33:12Z", "path": "spark/src/test/java/org/apache/iceberg/SerializationCheckHelper.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg;\n+\n+import java.util.Comparator;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import org.junit.Assert;\n+\n+public final class SerializationCheckHelper {\n+  private SerializationCheckHelper() {\n+  }\n+\n+  public static void checkBaseCombinedScanTask(BaseCombinedScanTask expected, BaseCombinedScanTask actual) {\n+    List<FileScanTask> expectedTasks = getFileScanTasksInFilePathOrder(expected);\n+    List<FileScanTask> actualTasks = getFileScanTasksInFilePathOrder(actual);\n+\n+    Assert.assertEquals(\"The number of file scan tasks should match\",\n+        expectedTasks.size(), actualTasks.size());\n+\n+    for (int i = 0; i < expectedTasks.size(); i++) {\n+      FileScanTask expectedTask = expectedTasks.get(i);\n+      FileScanTask actualTask = actualTasks.get(i);\n+      checkFileScanTask(expectedTask, actualTask);\n+    }\n+  }\n+\n+  private static List<FileScanTask> getFileScanTasksInFilePathOrder(BaseCombinedScanTask task) {\n+    return task.files().stream()\n+        // use file path + start position to differentiate the tasks\n+        .sorted(Comparator.comparing(o -> o.file().path().toString() + \"##\" + o.start()))\n+        .collect(Collectors.toList());\n+  }\n+\n+  public static void checkFileScanTask(FileScanTask expected, FileScanTask actual) {", "originalCommit": "4f28b2bf4307be35cadd945071bf50ba96d3b2f1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA3OTUxNg==", "url": "https://github.com/apache/iceberg/pull/1280#discussion_r467079516", "bodyText": "This is moved from TestScanTaskSerialization.checkBaseCombinedScanTask.", "author": "HeartSaVioR", "createdAt": "2020-08-07T14:33:42Z", "path": "spark/src/test/java/org/apache/iceberg/SerializationCheckHelper.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg;\n+\n+import java.util.Comparator;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import org.junit.Assert;\n+\n+public final class SerializationCheckHelper {\n+  private SerializationCheckHelper() {\n+  }\n+\n+  public static void checkBaseCombinedScanTask(BaseCombinedScanTask expected, BaseCombinedScanTask actual) {", "originalCommit": "4f28b2bf4307be35cadd945071bf50ba96d3b2f1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA3OTU3MQ==", "url": "https://github.com/apache/iceberg/pull/1280#discussion_r467079571", "bodyText": "This is moved from TestScanTaskSerialization.getFileScanTasksInFilePathOrder.", "author": "HeartSaVioR", "createdAt": "2020-08-07T14:33:49Z", "path": "spark/src/test/java/org/apache/iceberg/SerializationCheckHelper.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg;\n+\n+import java.util.Comparator;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import org.junit.Assert;\n+\n+public final class SerializationCheckHelper {\n+  private SerializationCheckHelper() {\n+  }\n+\n+  public static void checkBaseCombinedScanTask(BaseCombinedScanTask expected, BaseCombinedScanTask actual) {\n+    List<FileScanTask> expectedTasks = getFileScanTasksInFilePathOrder(expected);\n+    List<FileScanTask> actualTasks = getFileScanTasksInFilePathOrder(actual);\n+\n+    Assert.assertEquals(\"The number of file scan tasks should match\",\n+        expectedTasks.size(), actualTasks.size());\n+\n+    for (int i = 0; i < expectedTasks.size(); i++) {\n+      FileScanTask expectedTask = expectedTasks.get(i);\n+      FileScanTask actualTask = actualTasks.get(i);\n+      checkFileScanTask(expectedTask, actualTask);\n+    }\n+  }\n+\n+  private static List<FileScanTask> getFileScanTasksInFilePathOrder(BaseCombinedScanTask task) {", "originalCommit": "4f28b2bf4307be35cadd945071bf50ba96d3b2f1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzUwNTEzNg==", "url": "https://github.com/apache/iceberg/pull/1280#discussion_r467505136", "bodyText": "It looks like these are mostly equivalent to assertEquals. In that case, they don't necessarily need to be used to validate serialization. To make them easier to find and reuse, how about naming this class TaskCheckHelper?", "author": "rdblue", "createdAt": "2020-08-08T21:18:41Z", "path": "spark/src/test/java/org/apache/iceberg/SerializationCheckHelper.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg;\n+\n+import java.util.Comparator;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import org.junit.Assert;\n+\n+public final class SerializationCheckHelper {", "originalCommit": "4f28b2bf4307be35cadd945071bf50ba96d3b2f1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzUwNTQ3Mw==", "url": "https://github.com/apache/iceberg/pull/1280#discussion_r467505473", "bodyText": "You might consider renaming these methods to assertEquals if that's what they are doing. That makes them more generic and easier for read because it tells the reader exactly what it validated. Otherwise, someone that wants to reuse these methods needs to look at what the check does.", "author": "rdblue", "createdAt": "2020-08-08T21:23:06Z", "path": "spark/src/test/java/org/apache/iceberg/SerializationCheckHelper.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg;\n+\n+import java.util.Comparator;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import org.junit.Assert;\n+\n+public final class SerializationCheckHelper {\n+  private SerializationCheckHelper() {\n+  }\n+\n+  public static void checkBaseCombinedScanTask(BaseCombinedScanTask expected, BaseCombinedScanTask actual) {", "originalCommit": "4f28b2bf4307be35cadd945071bf50ba96d3b2f1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8533c5250617964dfbd7bd1225092438a68b22ed", "url": "https://github.com/apache/iceberg/commit/8533c5250617964dfbd7bd1225092438a68b22ed", "message": "Rename class/methods via review comments", "committedDate": "2020-08-09T12:29:43Z", "type": "commit"}]}