{"pr_number": 983, "pr_title": "Convert date and timestamp values in generics", "pr_createdAt": "2020-04-28T11:16:57Z", "pr_url": "https://github.com/apache/iceberg/pull/983", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjUzNDg5NQ==", "url": "https://github.com/apache/iceberg/pull/983#discussion_r416534895", "bodyText": "This is due to https://issues.apache.org/jira/browse/PARQUET-1851.", "author": "chenjunjiedada", "createdAt": "2020-04-28T11:22:43Z", "path": "data/src/test/java/org/apache/iceberg/data/TestLocalScan.java", "diffHunk": "@@ -449,6 +454,45 @@ private DataFile writeFile(String location, String filename, List<Record> record\n     }\n   }\n \n+  @Test\n+  public void testFilterWithComplexType() throws IOException {\n+    if (format == FileFormat.PARQUET) {", "originalCommit": "0a8207e635369efa3ccb091be7bb2e9bcb3e65b8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ2NTk0Mg==", "url": "https://github.com/apache/iceberg/pull/983#discussion_r417465942", "bodyText": "Tests should be disabled using Assume, so it doesn't look like they are passing and are skipped instead.\nI think it makes sense to only disable the parts of the test that don't pass in Parquet -- I think just the timestamp without zone type. Can you separate that into a different case and add the assume to that one?", "author": "rdblue", "createdAt": "2020-04-29T16:54:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjUzNDg5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU5ODI5OA==", "url": "https://github.com/apache/iceberg/pull/983#discussion_r422598298", "bodyText": "This works after #891 merged.", "author": "chenjunjiedada", "createdAt": "2020-05-10T06:56:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjUzNDg5NQ=="}], "type": "inlineReview"}, {"oid": "cfd1bf6120ebd705ad24045b3d4744585b798282", "url": "https://github.com/apache/iceberg/commit/cfd1bf6120ebd705ad24045b3d4744585b798282", "message": "Add DateAccessor, TimeAccessor, and TimestampAccessor", "committedDate": "2020-04-29T12:40:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ2NjgxMA==", "url": "https://github.com/apache/iceberg/pull/983#discussion_r417466810", "bodyText": "Why were these changes necessary?", "author": "rdblue", "createdAt": "2020-04-29T16:55:52Z", "path": "api/src/test/java/org/apache/iceberg/transforms/TestResiduals.java", "diffHunk": "@@ -191,26 +191,18 @@ public void testInTimestamp() {\n         Types.NestedField.optional(51, \"dateint\", Types.IntegerType.get())\n     );\n \n-    Long date20191201 = (Long) Literal.of(\"2019-12-01T00:00:00.00000\")\n-        .to(Types.TimestampType.withoutZone()).value();\n-    Long date20191202 = (Long) Literal.of(\"2019-12-02T00:00:00.00000\")\n-        .to(Types.TimestampType.withoutZone()).value();\n-\n     PartitionSpec spec = PartitionSpec.builderFor(schema)\n         .day(\"ts\")\n         .build();\n \n-    Transform day = spec.getFieldsBySourceId(50).get(0).transform();\n-    Integer tsDay = (Integer) day.apply(date20191201);\n-\n-    Predicate pred = in(\"ts\", date20191201, date20191202);\n+    Predicate pred = in(\"ts\", \"2019-12-01T00:00:00.00000\", \"2019-12-01T00:00:00.00000\");", "originalCommit": "cfd1bf6120ebd705ad24045b3d4744585b798282", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk5NDI0Mw==", "url": "https://github.com/apache/iceberg/pull/983#discussion_r419994243", "bodyText": "The unit tests failed with the following exception, the same reason that tranform.day doesn't produce the date value. These changes are not necessary just use to pass unit tests. I will revert the changes.\nCannot cast java.lang.Integer to java.time.LocalDate\njava.lang.ClassCastException: Cannot cast java.lang.Integer to java.time.LocalDate\n\tat java.lang.Class.cast(Class.java:3369)\n\tat org.apache.iceberg.TestHelpers$Row.get(TestHelpers.java:121)\n\tat org.apache.iceberg.Accessors$DateAccessor.get(Accessors.java:216)\n\tat org.apache.iceberg.Accessors$DateAccessor.get(Accessors.java:209)\n\tat org.apache.iceberg.expressions.BoundReference.eval(BoundReference.java:39)\n\tat org.apache.iceberg.expressions.ResidualEvaluator$ResidualVisitor.in(ResidualEvaluator.java:201)\n\tat org.apache.iceberg.expressions.ResidualEvaluator$ResidualVisitor.in(ResidualEvaluator.java:120)\n\tat org.apache.iceberg.expressions.ExpressionVisitors$BoundExpressionVisitor.predicate(ExpressionVisitors.java:152)\n\tat org.apache.iceberg.expressions.ResidualEvaluator$ResidualVisitor.predicate(ResidualEvaluator.java:258)\n\tat org.apache.iceberg.expressions.ResidualEvaluator$ResidualVisitor.predicate(ResidualEvaluator.java:281)\n\tat org.apache.iceberg.expressions.ResidualEvaluator$ResidualVisitor.predicate(ResidualEvaluator.java:120)\n\tat org.apache.iceberg.expressions.ExpressionVisitors.visit(ExpressionVisitors.java:283)\n\tat org.apache.iceberg.expressions.ResidualEvaluator$ResidualVisitor.eval(ResidualEvaluator.java:125)\n\tat org.apache.iceberg.expressions.ResidualEvaluator$ResidualVisitor.access$100(ResidualEvaluator.java:120)\n\tat org.apache.iceberg.expressions.ResidualEvaluator.residualFor(ResidualEvaluator.java:117)\n\tat org.apache.iceberg.transforms.TestResiduals.testInTimestamp(TestResiduals.java:211)", "author": "chenjunjiedada", "createdAt": "2020-05-05T09:58:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ2NjgxMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ2ODU4NA==", "url": "https://github.com/apache/iceberg/pull/983#discussion_r417468584", "bodyText": "These accessors are for types used by Iceberg generics. I don't think that we want to make them part of the public API, and we need to be able to add them when using generics but not use them when binding to other rows. These should not be used with PartitionData instances, for example.", "author": "rdblue", "createdAt": "2020-04-29T16:58:26Z", "path": "api/src/main/java/org/apache/iceberg/Accessors.java", "diffHunk": "@@ -187,6 +206,47 @@ public String toString() {\n     }\n   }\n \n+  private static class DateAccessor extends PositionAccessor {", "originalCommit": "cfd1bf6120ebd705ad24045b3d4744585b798282", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ3NDAyNg==", "url": "https://github.com/apache/iceberg/pull/983#discussion_r417474026", "bodyText": "Looks like this is the cause of the test failures:\norg.apache.iceberg.spark.source.TestFilteredScan > testDayPartitionedTimestampFilters[2] FAILED\n    java.lang.IllegalArgumentException: Wrong class, java.time.LocalDate, for object: 17521\n        at org.apache.iceberg.PartitionData.get(PartitionData.java:120)\n        at org.apache.iceberg.Accessors$DateAccessor.get(Accessors.java:216)\n        at org.apache.iceberg.Accessors$DateAccessor.get(Accessors.java:209)\n        at org.apache.iceberg.expressions.BoundReference.eval(BoundReference.java:39)\n\nWe need to substitute this accessor for the default accessor only when using Iceberg generics.", "author": "rdblue", "createdAt": "2020-04-29T17:07:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ2ODU4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAxNjQ3MQ==", "url": "https://github.com/apache/iceberg/pull/983#discussion_r420016471", "bodyText": "I agree that these accessors should be specific for Iceberg generics and basically there are three options to do that:\n\n\nIdentify Iceberg generic class in Accessors in iceberg-api, but that would mix in iceberg-data into iceberg-api package.\n\n\nCopy all related Accessors into iceberg-data package, but Evaluator constructs accessors via Schema#accessForField which comes from iceberg-api package, so that we can not pass iceberg generic accessors to them. Or we need to update Evaluator but it is still in iceberg-api package.\n\n\nFix the issue: #984, so that DateAccessor works for PartitionData as well.\n\n\nIMO, option 3 is feasible, what do you think? Or you may have other options.", "author": "chenjunjiedada", "createdAt": "2020-05-05T10:42:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ2ODU4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU5ODA3MA==", "url": "https://github.com/apache/iceberg/pull/983#discussion_r422598070", "bodyText": "@rdblue , I just use another solution for this. Take accessors from passing parameter instead of parsing it from schema when binding expression with struct type. With this decoupling we could customize the accessors for different StructLike. Does that make sense to you?", "author": "chenjunjiedada", "createdAt": "2020-05-10T06:54:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ2ODU4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ3MTgxOQ==", "url": "https://github.com/apache/iceberg/pull/983#discussion_r417471819", "bodyText": "By moving these into iceberg-data, we can reuse the util class DateTimeUtil.", "author": "rdblue", "createdAt": "2020-04-29T17:03:42Z", "path": "api/src/main/java/org/apache/iceberg/Accessors.java", "diffHunk": "@@ -187,6 +206,47 @@ public String toString() {\n     }\n   }\n \n+  private static class DateAccessor extends PositionAccessor {\n+    private DateAccessor(int pos, Type type) {\n+      super(pos, type);\n+    }\n+\n+    @Override\n+    public Object get(StructLike record) {\n+      LocalDate value = record.get(position(), LocalDate.class);\n+      return (int) ChronoUnit.DAYS.between(EPOCH_DAY, value);", "originalCommit": "cfd1bf6120ebd705ad24045b3d4744585b798282", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDIxNzc5Mg==", "url": "https://github.com/apache/iceberg/pull/983#discussion_r420217792", "bodyText": "Does it make sense to have a separate PR to add those common functions into DateTimeUtil?", "author": "waterlx", "createdAt": "2020-05-05T15:54:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ3MTgxOQ=="}], "type": "inlineReview"}, {"oid": "503755180b4f22f5e4dd484b607db4382f400f63", "url": "https://github.com/apache/iceberg/commit/503755180b4f22f5e4dd484b607db4382f400f63", "message": "Convert date and timestamp values in generics", "committedDate": "2020-05-09T12:40:00Z", "type": "commit"}, {"oid": "174d1c8d2100cc24abfa8499fe37af3e584e20c0", "url": "https://github.com/apache/iceberg/commit/174d1c8d2100cc24abfa8499fe37af3e584e20c0", "message": "Add DateAccessor, TimeAccessor, and TimestampAccessor", "committedDate": "2020-05-09T12:40:00Z", "type": "commit"}, {"oid": "2f7e29e83fe4d5791b28c0953176129d63efa75d", "url": "https://github.com/apache/iceberg/commit/2f7e29e83fe4d5791b28c0953176129d63efa75d", "message": "revert unit test changes", "committedDate": "2020-05-09T12:40:00Z", "type": "commit"}, {"oid": "e8f94bf394e647bf2bced91ffbb3a7ec8b253cac", "url": "https://github.com/apache/iceberg/commit/e8f94bf394e647bf2bced91ffbb3a7ec8b253cac", "message": "rebase and remove parquet work around", "committedDate": "2020-05-09T12:42:34Z", "type": "forcePushed"}, {"oid": "d7f3d5000df96bfa5d2d989e73a2edcc7d0f36b6", "url": "https://github.com/apache/iceberg/commit/d7f3d5000df96bfa5d2d989e73a2edcc7d0f36b6", "message": "rebase and remove parquet work around", "committedDate": "2020-05-09T13:29:46Z", "type": "commit"}, {"oid": "d7f3d5000df96bfa5d2d989e73a2edcc7d0f36b6", "url": "https://github.com/apache/iceberg/commit/d7f3d5000df96bfa5d2d989e73a2edcc7d0f36b6", "message": "rebase and remove parquet work around", "committedDate": "2020-05-09T13:29:46Z", "type": "forcePushed"}, {"oid": "ea42ccec9207ba69ea0d3fd0bccc73c142fb6207", "url": "https://github.com/apache/iceberg/commit/ea42ccec9207ba69ea0d3fd0bccc73c142fb6207", "message": "alternative fix", "committedDate": "2020-05-10T06:36:58Z", "type": "commit"}, {"oid": "ea42ccec9207ba69ea0d3fd0bccc73c142fb6207", "url": "https://github.com/apache/iceberg/commit/ea42ccec9207ba69ea0d3fd0bccc73c142fb6207", "message": "alternative fix", "committedDate": "2020-05-10T06:36:58Z", "type": "forcePushed"}, {"oid": "f25ba39d91c5e4d3dd21c78a000cb1533f8545de", "url": "https://github.com/apache/iceberg/commit/f25ba39d91c5e4d3dd21c78a000cb1533f8545de", "message": "Add comments and remove useless chagnes", "committedDate": "2020-05-10T06:45:08Z", "type": "commit"}, {"oid": "00d5f9c9578a1a7825aeb6209c08dc108fe0b0a3", "url": "https://github.com/apache/iceberg/commit/00d5f9c9578a1a7825aeb6209c08dc108fe0b0a3", "message": "refine code", "committedDate": "2020-05-18T03:44:42Z", "type": "commit"}, {"oid": "6865f139e28c854206ecd154b541ef548a60d5ec", "url": "https://github.com/apache/iceberg/commit/6865f139e28c854206ecd154b541ef548a60d5ec", "message": "update to use wrapped class", "committedDate": "2020-05-23T00:37:30Z", "type": "commit"}, {"oid": "6865f139e28c854206ecd154b541ef548a60d5ec", "url": "https://github.com/apache/iceberg/commit/6865f139e28c854206ecd154b541ef548a60d5ec", "message": "update to use wrapped class", "committedDate": "2020-05-23T00:37:30Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDAxNjg3OA==", "url": "https://github.com/apache/iceberg/pull/983#discussion_r430016878", "bodyText": "The wrapper can be reused so it should be moved outside the predicate. The predicate just needs to be this:\n  record -> filter.eval(wrapper.wrap(record))", "author": "rdblue", "createdAt": "2020-05-25T16:49:41Z", "path": "data/src/main/java/org/apache/iceberg/data/TableScanIterable.java", "diffHunk": "@@ -161,7 +161,10 @@ public boolean hasNext() {\n \n           if (task.residual() != null && task.residual() != Expressions.alwaysTrue()) {\n             Evaluator filter = new Evaluator(projection.asStruct(), task.residual(), caseSensitive);\n-            this.currentIterator = Iterables.filter(reader, filter::eval).iterator();\n+            this.currentIterator = Iterables.filter(reader, record -> {\n+              InternalRecordWrapper wrapperRecord = new InternalRecordWrapper(record.struct()).wrap(record);", "originalCommit": "6865f139e28c854206ecd154b541ef548a60d5ec", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "34326405a11602cffa277cbd55f4228285ef6353", "url": "https://github.com/apache/iceberg/commit/34326405a11602cffa277cbd55f4228285ef6353", "message": "address comments", "committedDate": "2020-05-26T01:56:16Z", "type": "commit"}, {"oid": "cc189d84f07bcca16b36cacf6249f973eaee9634", "url": "https://github.com/apache/iceberg/commit/cc189d84f07bcca16b36cacf6249f973eaee9634", "message": "Assume false for orc", "committedDate": "2020-05-26T06:26:42Z", "type": "commit"}]}