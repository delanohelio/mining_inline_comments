{"pr_number": 410, "pr_title": "fix: Add documentation to bulkReadRows that each batch will process t\u2026", "pr_createdAt": "2020-09-08T15:26:44Z", "pr_url": "https://github.com/googleapis/java-bigtable/pull/410", "timeline": [{"oid": "57c4987fc285458f30c49e83a2576218915525c9", "url": "https://github.com/googleapis/java-bigtable/commit/57c4987fc285458f30c49e83a2576218915525c9", "message": "fix: Add documentation to bulkReadRows that each batch will process the keys sequentially", "committedDate": "2020-09-08T15:25:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIzMzUwOA==", "url": "https://github.com/googleapis/java-bigtable/pull/410#discussion_r485233508", "bodyText": "This isnt quite right.\nThe main issue is that Bigtable ReadRows must return row in lexicographic  row key order. Which means that the keys will be processed sequentially on the serverside. So batching works best when the caller cares more about throughput than latency and the keys are grouped together.\nIf the caller cares more about latency then sending smaller concurrent request is better", "author": "igorbernstein2", "createdAt": "2020-09-08T22:39:06Z", "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/BigtableDataClient.java", "diffHunk": "@@ -1077,9 +1077,9 @@ public void bulkMutateRows(BulkMutation mutation) {\n   }\n \n   /**\n-   * Reads rows for given tableId in a batch. If the row does not exist, the value will be null.\n-   * This operation should be called with in a single thread. The returned Batcher instance is not\n-   * threadsafe, it can only be used from single thread.\n+   * Reads rows for given tableId in a batch. If the row does not exist, the value will be null. The\n+   * keys are processed sequentially one by one in the order they are passed to the Batcher. The\n+   * returned Batcher instance is not threadsafe, it can only be used from a single thread.", "originalCommit": "57c4987fc285458f30c49e83a2576218915525c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQ3OTg0OQ==", "url": "https://github.com/googleapis/java-bigtable/pull/410#discussion_r485479849", "bodyText": "Thanks for the clarification, now I see what this issue is about.\nPlease take a look at the updated variant.", "author": "dmitry-fa", "createdAt": "2020-09-09T09:40:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIzMzUwOA=="}], "type": "inlineReview"}, {"oid": "d06b02a4b1e4183e2609685e78af99807671df0b", "url": "https://github.com/googleapis/java-bigtable/commit/d06b02a4b1e4183e2609685e78af99807671df0b", "message": "fix: Add documentation to bulkReadRows that each batch will process the keys sequentially", "committedDate": "2020-09-09T09:37:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzM0MzAzNA==", "url": "https://github.com/googleapis/java-bigtable/pull/410#discussion_r487343034", "bodyText": "How about \"Lower latencies can be achieved by sending smaller requests concurrently.\" ?", "author": "vermas2012", "createdAt": "2020-09-12T00:29:59Z", "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/BigtableDataClient.java", "diffHunk": "@@ -1113,8 +1117,13 @@ public void bulkMutateRows(BulkMutation mutation) {\n \n   /**\n    * Reads rows for given tableId and filter criteria in a batch. If the row does not exist, the\n-   * value will be null. This operation should be called with in a single thread. The returned\n-   * Batcher instance is not threadsafe, it can only be used from single thread.\n+   * value will be null. The returned Batcher instance is not threadsafe, it can only be used from a\n+   * single thread.\n+   *\n+   * <p>Performance notice: The ReadRows protocol requires that rows are sent in ascending key\n+   * order, which means that the keys are processed sequentially on the server-side, so batching\n+   * allows improving throughput but not latency. Low latency might be achieved if send smaller\n+   * requests concurrently.", "originalCommit": "d06b02a4b1e4183e2609685e78af99807671df0b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc1OTE3Mw==", "url": "https://github.com/googleapis/java-bigtable/pull/410#discussion_r487759173", "bodyText": "Agree, sounds much better.", "author": "dmitry-fa", "createdAt": "2020-09-14T09:01:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzM0MzAzNA=="}], "type": "inlineReview"}, {"oid": "8c9a077c2f3bbe44a5b7e9a9f9fdc47263af6495", "url": "https://github.com/googleapis/java-bigtable/commit/8c9a077c2f3bbe44a5b7e9a9f9fdc47263af6495", "message": "fix: Add documentation to bulkReadRows that each batch will process the keys sequentially", "committedDate": "2020-09-14T08:59:34Z", "type": "commit"}]}