{"pr_number": 276, "pr_title": "feat: expose new API with ReadRowsRequest in EnhancedBigtableStub", "pr_createdAt": "2020-04-30T15:34:50Z", "pr_url": "https://github.com/googleapis/java-bigtable/pull/276", "timeline": [{"oid": "fb025ae15fdc87c17c4d358a34dc4abcf4e82c63", "url": "https://github.com/googleapis/java-bigtable/commit/fb025ae15fdc87c17c4d358a34dc4abcf4e82c63", "message": "feat: expose StreamingCallable with ReadRowsRequest in EnhancedBigtableStub\n\nThis commit would enable the user to target the table using absolute resource name on each read request. Currently we expose `ServerStreamingCallable<Query, RowT>`, which does not have an option to provide different `app-profile-id` on each request.", "committedDate": "2020-04-30T15:31:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODczNzc3Nw==", "url": "https://github.com/googleapis/java-bigtable/pull/276#discussion_r418737777", "bodyText": "Please mark this as BetaApi and add a disclaimer that this method might be removed in the future", "author": "igorbernstein2", "createdAt": "2020-05-01T21:05:43Z", "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/stub/EnhancedBigtableStub.java", "diffHunk": "@@ -230,6 +230,66 @@ private EnhancedBigtableStub(\n   private <RowT> ServerStreamingCallable<Query, RowT> createReadRowsBaseCallable(\n       ServerStreamingCallSettings<Query, Row> readRowsSettings, RowAdapter<RowT> rowAdapter) {\n \n+    return new ReadRowsUserCallable<>(\n+        createReadRowsRawCallable(readRowsSettings, rowAdapter), requestContext);\n+  }\n+\n+  /**\n+   * Creates a callable chain to handle ReadRows RPCs. The chain will:\n+   *\n+   * <ul>\n+   *   <li>Dispatch the RPC with {@link ReadRowsRequest}.\n+   *   <li>Upon receiving the response stream, it will merge the {@link\n+   *       com.google.bigtable.v2.ReadRowsResponse.CellChunk}s in logical rows. The actual row\n+   *       implementation can be configured by the {@code rowAdapter} parameter.\n+   *   <li>Retry/resume on failure.\n+   *   <li>Filter out marker rows.\n+   * </ul>\n+   *\n+   * <p>NOTE: the caller is responsible for adding tracing & metrics.\n+   */\n+  public <RowT> ServerStreamingCallable<ReadRowsRequest, RowT> createReadRowsRawCallable(", "originalCommit": "fb025ae15fdc87c17c4d358a34dc4abcf4e82c63", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODczNzkwNQ==", "url": "https://github.com/googleapis/java-bigtable/pull/276#discussion_r418737905", "bodyText": "This should not be public", "author": "igorbernstein2", "createdAt": "2020-05-01T21:06:05Z", "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/stub/EnhancedBigtableStub.java", "diffHunk": "@@ -230,6 +230,66 @@ private EnhancedBigtableStub(\n   private <RowT> ServerStreamingCallable<Query, RowT> createReadRowsBaseCallable(\n       ServerStreamingCallSettings<Query, Row> readRowsSettings, RowAdapter<RowT> rowAdapter) {\n \n+    return new ReadRowsUserCallable<>(\n+        createReadRowsRawCallable(readRowsSettings, rowAdapter), requestContext);\n+  }\n+\n+  /**\n+   * Creates a callable chain to handle ReadRows RPCs. The chain will:\n+   *\n+   * <ul>\n+   *   <li>Dispatch the RPC with {@link ReadRowsRequest}.\n+   *   <li>Upon receiving the response stream, it will merge the {@link\n+   *       com.google.bigtable.v2.ReadRowsResponse.CellChunk}s in logical rows. The actual row\n+   *       implementation can be configured by the {@code rowAdapter} parameter.\n+   *   <li>Retry/resume on failure.\n+   *   <li>Filter out marker rows.\n+   * </ul>\n+   *\n+   * <p>NOTE: the caller is responsible for adding tracing & metrics.\n+   */\n+  public <RowT> ServerStreamingCallable<ReadRowsRequest, RowT> createReadRowsRawCallable(\n+      RowAdapter<RowT> adapter) {\n+    return createReadRowsBaseCallable(adapter)\n+        .withDefaultCallContext(clientContext.getDefaultCallContext());\n+  }\n+\n+  /**\n+   * Creates a callable chain to handle ReadRows RPCs. The chain will:\n+   *\n+   * <ul>\n+   *   <li>Dispatch the RPC with {@link ReadRowsRequest}.\n+   *   <li>Upon receiving the response stream, it will merge the {@link\n+   *       com.google.bigtable.v2.ReadRowsResponse.CellChunk}s in logical rows. The actual row\n+   *       implementation can be configured by the {@code rowAdapter} parameter.\n+   *   <li>Retry/resume on failure.\n+   *   <li>Filter out marker rows.\n+   * </ul>\n+   *\n+   * <p>NOTE: the caller is responsible for adding tracing & metrics.\n+   */\n+  public <RowT> ServerStreamingCallable<ReadRowsRequest, RowT> createReadRowsBaseCallable(", "originalCommit": "fb025ae15fdc87c17c4d358a34dc4abcf4e82c63", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5d32c60f5a6320b7ab696f232965341c1d6b6cbb", "url": "https://github.com/googleapis/java-bigtable/commit/5d32c60f5a6320b7ab696f232965341c1d6b6cbb", "message": "chore: reorganized createReadRows callable methods\n\nWith this commit, the public createReadRowsCallable() would refer to single createReadRowsBaseCallable.", "committedDate": "2020-05-11T14:46:40Z", "type": "commit"}]}