{"pr_number": 3216, "pr_title": "Allow use of JDK 15+", "pr_createdAt": "2020-09-27T23:21:45Z", "pr_url": "https://github.com/openzipkin/zipkin/pull/3216", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg5OTAyNA==", "url": "https://github.com/openzipkin/zipkin/pull/3216#discussion_r495899024", "bodyText": "This strategy seems good. Just wondering do you think this is a good time to move stuff out of core? For example, I guess storage, since it's for use by server and not client, doesn't need to be Java 6?", "author": "anuraaga", "createdAt": "2020-09-28T12:26:28Z", "path": "zipkin/src/main/java/zipkin2/storage/InMemoryStorage.java", "diffHunk": "@@ -77,15 +77,12 @@ public static Builder newBuilder() {\n     int maxSpanCount = 500000;\n     List<String> autocompleteKeys = Collections.emptyList();\n \n-    /** {@inheritDoc} */\n-    @Override\n-    public Builder strictTraceId(boolean strictTraceId) {\n+    @Override public Builder strictTraceId(boolean strictTraceId) {", "originalCommit": "3c87bd56a0992ee2faa1719f64b134d5baf96d48", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg5OTY1MA==", "url": "https://github.com/openzipkin/zipkin/pull/3216#discussion_r495899650", "bodyText": "IIRC we might have some senders that delegate to storage classes (thinking zipkin-aws). I think it could be a net win to duplicate for this rare case and mark storage as server-only. It's the only way to get to CompletableFuture for example.", "author": "anuraaga", "createdAt": "2020-09-28T12:27:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg5OTAyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTkwNjE3NQ==", "url": "https://github.com/openzipkin/zipkin/pull/3216#discussion_r495906175", "bodyText": "yeah we currently only support java 1.6 on the core library. the storage classes are already 1.8 iirc. that zipkin-aws xray sender internally uses storage is something that we aren't optimizing for in a bytecode level..\ntypically, senders raise to the level of the library used, sometimes 1.7 (okhttp) or 1.8 (kafka)", "author": "codefromthecrypt", "createdAt": "2020-09-28T12:39:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg5OTAyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjMxNTE3Nw==", "url": "https://github.com/openzipkin/zipkin/pull/3216#discussion_r496315177", "bodyText": "oh I see what you are saying.. to move these classes out? I think it is a non-transparent change to do that where as the rest of this is transparent to end users. I think we could consider doing that separately, but there would be some transition work involved and so not entirely keen to take that on right now.", "author": "codefromthecrypt", "createdAt": "2020-09-29T00:59:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg5OTAyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjMyMDc0Ng==", "url": "https://github.com/openzipkin/zipkin/pull/3216#discussion_r496320746", "bodyText": "#3217", "author": "codefromthecrypt", "createdAt": "2020-09-29T01:20:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg5OTAyNA=="}], "type": "inlineReview"}, {"oid": "b4435df019535aa8e1067e44f272d72ba9290de1", "url": "https://github.com/openzipkin/zipkin/commit/b4435df019535aa8e1067e44f272d72ba9290de1", "message": "Allow use of JDK 15+\n\nThis allows builds to work with JDK 15+ even if that JDK cannot compile\nJava 1.6 anymore. Specifically, this removes Retrolambda, which formerly\nrewrote our main tree to 1.6 bytecode. We had to do this as Retrolambda\nno longer works in JDK 15.\n\nIn order to publish a JRE compatible 1.6 jar to Maven Central, we use\nJDK during the release process (Travis). To ensure normal usage and\nDocker can use JDK 15, we change our GitHub actions to use JDK 15.\n\nThis also adds a RATIONALE.md which covers the major aspects around\nsource, largely duplicated from Brave (though not exactly the same as\ncontext slightly differs here.)", "committedDate": "2020-09-29T00:40:10Z", "type": "commit"}, {"oid": "b4435df019535aa8e1067e44f272d72ba9290de1", "url": "https://github.com/openzipkin/zipkin/commit/b4435df019535aa8e1067e44f272d72ba9290de1", "message": "Allow use of JDK 15+\n\nThis allows builds to work with JDK 15+ even if that JDK cannot compile\nJava 1.6 anymore. Specifically, this removes Retrolambda, which formerly\nrewrote our main tree to 1.6 bytecode. We had to do this as Retrolambda\nno longer works in JDK 15.\n\nIn order to publish a JRE compatible 1.6 jar to Maven Central, we use\nJDK during the release process (Travis). To ensure normal usage and\nDocker can use JDK 15, we change our GitHub actions to use JDK 15.\n\nThis also adds a RATIONALE.md which covers the major aspects around\nsource, largely duplicated from Brave (though not exactly the same as\ncontext slightly differs here.)", "committedDate": "2020-09-29T00:40:10Z", "type": "forcePushed"}, {"oid": "323d5a845d231cc4207fa72a3a7f6281c3ba44da", "url": "https://github.com/openzipkin/zipkin/commit/323d5a845d231cc4207fa72a3a7f6281c3ba44da", "message": "fuzz", "committedDate": "2020-09-29T01:06:21Z", "type": "commit"}, {"oid": "4cdcdbe3ff518dd04945d3bc4ae5d16e1aedecbf", "url": "https://github.com/openzipkin/zipkin/commit/4cdcdbe3ff518dd04945d3bc4ae5d16e1aedecbf", "message": "fuzzy", "committedDate": "2020-09-29T01:09:30Z", "type": "commit"}]}