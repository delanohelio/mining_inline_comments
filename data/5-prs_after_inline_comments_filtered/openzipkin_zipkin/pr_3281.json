{"pr_number": 3281, "pr_title": "Tidies build and completes migration off docker.io images during build", "pr_createdAt": "2020-11-02T01:01:31Z", "pr_url": "https://github.com/openzipkin/zipkin/pull/3281", "timeline": [{"oid": "95f3cbbe47a7b0f5b2159cb7aed47a08089b43bd", "url": "https://github.com/openzipkin/zipkin/commit/95f3cbbe47a7b0f5b2159cb7aed47a08089b43bd", "message": "Tidies build and completes migration off docker.io images during build\n\nThis makes some editorial changes to make this project look the same as\nzipkin-aws and zipkin-gcp. It also completes migration off docker.io\nimages so that routine test and development cannot cause a build outage.\n\nFixes #3279", "committedDate": "2020-11-02T01:00:08Z", "type": "commit"}, {"oid": "23cc77ffa79b0e8dd3c5ad7371e3b25505e4e1ca", "url": "https://github.com/openzipkin/zipkin/commit/23cc77ffa79b0e8dd3c5ad7371e3b25505e4e1ca", "message": "adds docker ignore for compose", "committedDate": "2020-11-02T01:07:39Z", "type": "commit"}, {"oid": "60fd0ccf79d56b0039bd60b6302103dc603476ea", "url": "https://github.com/openzipkin/zipkin/commit/60fd0ccf79d56b0039bd60b6302103dc603476ea", "message": "tries to get grafana working in ServerIntegratedBenchmark", "committedDate": "2020-11-02T01:47:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTcwNjIyMA==", "url": "https://github.com/openzipkin/zipkin/pull/3281#discussion_r515706220", "bodyText": "this is the container that I can't tell if even worked or not despite it being fine in docker-compose externally. Even it logged nothing though the logging properties here are set to info -> stdout.", "author": "codefromthecrypt", "createdAt": "2020-11-02T01:53:36Z", "path": "benchmarks/src/test/java/zipkin2/server/ServerIntegratedBenchmark.java", "diffHunk": "@@ -151,46 +157,62 @@ void runBenchmark(@Nullable GenericContainer<?> storage) throws Exception {\n \n   void runBenchmark(@Nullable GenericContainer<?> storage, GenericContainer<?> zipkin)\n     throws Exception {\n-    GenericContainer<?> backend = new GenericContainer<>(parse(\"ghcr.io/openzipkin/brave-example:armeria\"))\n-      .withNetwork(Network.SHARED)\n-      .withNetworkAliases(\"backend\")\n-      .withCommand(\"backend\")\n-      .withExposedPorts(9000)\n-      .waitingFor(Wait.forHealthcheck());\n+    GenericContainer<?> backend =\n+      new GenericContainer<>(parse(\"ghcr.io/openzipkin/brave-example:armeria\"))\n+        .withNetwork(Network.SHARED)\n+        .withNetworkAliases(\"backend\")\n+        .withCommand(\"backend\")\n+        .withExposedPorts(9000)\n+        .waitingFor(Wait.forHealthcheck());\n \n-    GenericContainer<?> frontend = new GenericContainer<>(parse(\"ghcr.io/openzipkin/brave-example:armeria\"))\n-      .withNetwork(Network.SHARED)\n-      .withNetworkAliases(\"frontend\")\n-      .withCommand(\"frontend\")\n-      .withExposedPorts(8081)\n-      .waitingFor(Wait.forHealthcheck());\n+    GenericContainer<?> frontend =\n+      new GenericContainer<>(parse(\"ghcr.io/openzipkin/brave-example:armeria\"))\n+        .withNetwork(Network.SHARED)\n+        .withNetworkAliases(\"frontend\")\n+        .withCommand(\"frontend\")\n+        .withExposedPorts(8081)\n+        .waitingFor(Wait.forHealthcheck());\n     containers.add(frontend);\n \n-    GenericContainer<?> prometheus = new GenericContainer<>(parse(\"prom/prometheus:latest\"))\n-      .withNetwork(Network.SHARED)\n-      .withNetworkAliases(\"prometheus\")\n-      .withExposedPorts(9090)\n-      .withCopyFileToContainer(\n-        MountableFile.forClasspathResource(\"prometheus.yml\"), \"/etc/prometheus/prometheus.yml\");\n+    // Use a quay.io mirror to prevent build outages due to Docker Hub pull quotas\n+    // Use same version as in docker/examples/docker-compose-prometheus.yml\n+    GenericContainer<?> prometheus =\n+      new GenericContainer<>(parse(\"quay.io/prometheus/prometheus:v2.22.0\"))\n+        .withNetwork(Network.SHARED)\n+        .withNetworkAliases(\"prometheus\")\n+        .withExposedPorts(9090)\n+        .withCopyFileToContainer(\n+          MountableFile.forClasspathResource(\"prometheus.yml\"), \"/etc/prometheus/prometheus.yml\");\n     containers.add(prometheus);\n \n-    GenericContainer<?> grafana = new GenericContainer<>(parse(\"grafana/grafana:latest\"))\n+    // Use a quay.io mirror to prevent build outages due to Docker Hub pull quotas\n+    // Use same version as in docker/examples/docker-compose-prometheus.yml\n+    GenericContainer<?> grafana = new GenericContainer<>(parse(\"quay.io/app-sre/grafana:7.3.1\"))\n       .withNetwork(Network.SHARED)\n       .withNetworkAliases(\"grafana\")\n       .withExposedPorts(3000)\n       .withEnv(\"GF_AUTH_ANONYMOUS_ENABLED\", \"true\")\n       .withEnv(\"GF_AUTH_ANONYMOUS_ORG_ROLE\", \"Admin\");\n     containers.add(grafana);\n \n-    GenericContainer<?> grafanaDashboards = new GenericContainer<>(parse(\"appropriate/curl:latest\"))\n-      .withNetwork(Network.SHARED)\n-      .withCommand(\"/create.sh\")\n-      .withCopyFileToContainer(\n-        MountableFile.forClasspathResource(\"create-datasource-and-dashboard.sh\"), \"/create.sh\");\n+    // This is an arbitrary small image that has curl installed\n+    // Use a quay.io mirror to prevent build outages due to Docker Hub pull quotas\n+    // Use same version as in docker/examples/docker-compose-prometheus.yml\n+    GenericContainer<?> grafanaDashboards =\n+      new GenericContainer<>(parse(\"quay.io/rackspace/curl:7.70.0\"))\n+        .withNetwork(Network.SHARED)\n+        .withWorkingDirectory(\"/tmp\")\n+        .withLogConsumer(new Slf4jLogConsumer(LOG))", "originalCommit": "60fd0ccf79d56b0039bd60b6302103dc603476ea", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTcyOTk5Nw==", "url": "https://github.com/openzipkin/zipkin/pull/3281#discussion_r515729997", "bodyText": "If grafana has the zipkin dashboards, it should be working ok.", "author": "anuraaga", "createdAt": "2020-11-02T04:01:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTcwNjIyMA=="}], "type": "inlineReview"}, {"oid": "af508cef76cb09da76b7e13340057c1b847530db", "url": "https://github.com/openzipkin/zipkin/commit/af508cef76cb09da76b7e13340057c1b847530db", "message": "more tidy", "committedDate": "2020-11-02T03:54:55Z", "type": "commit"}]}