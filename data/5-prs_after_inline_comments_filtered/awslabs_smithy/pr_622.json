{"pr_number": 622, "pr_title": "Add CloudFormation Resource Schema generation", "pr_createdAt": "2020-10-31T00:20:29Z", "pr_url": "https://github.com/awslabs/smithy/pull/622", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY4NDIyMQ==", "url": "https://github.com/awslabs/smithy/pull/622#discussion_r517684221", "bodyText": "This seems surprising. Can this throw instead?", "author": "mtdowling", "createdAt": "2020-11-04T23:07:23Z", "path": "smithy-aws-cloudformation/src/test/java/software/amazon/smithy/aws/cloudformation/schema/fromsmithy/CfnConfigTest.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.smithy.aws.cloudformation.schema.fromsmithy;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+import org.junit.jupiter.api.Test;\n+import software.amazon.smithy.aws.cloudformation.schema.CfnConfig;\n+import software.amazon.smithy.jsonschema.JsonSchemaConfig;\n+\n+public class CfnConfigTest {\n+    @Test\n+    public void configKeepsMapStrategy() {\n+        CfnConfig config = new CfnConfig();\n+\n+        assertEquals(config.getMapStrategy(), JsonSchemaConfig.MapStrategy.PATTERN_PROPERTIES);\n+\n+        // This manipulation should not change the strategy.\n+        config.setMapStrategy(JsonSchemaConfig.MapStrategy.PROPERTY_NAMES);", "originalCommit": "db99259bab16f71ed9181bb0a5b391d0af13bca5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY4ODY4Ng==", "url": "https://github.com/awslabs/smithy/pull/622#discussion_r517688686", "bodyText": "Can you link to the CloudFormation documentation for these model types?", "author": "mtdowling", "createdAt": "2020-11-04T23:20:34Z", "path": "smithy-aws-cloudformation/src/main/java/software/amazon/smithy/aws/cloudformation/schema/model/ResourceSchema.java", "diffHunk": "@@ -0,0 +1,392 @@\n+/*\n+ * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.smithy.aws.cloudformation.schema.model;\n+\n+import static java.lang.String.format;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.TreeMap;\n+import java.util.TreeSet;\n+import software.amazon.smithy.aws.cloudformation.schema.CfnException;\n+import software.amazon.smithy.jsonschema.Schema;\n+import software.amazon.smithy.model.node.Node;\n+import software.amazon.smithy.model.node.NodeMapper;\n+import software.amazon.smithy.model.node.ObjectNode;\n+import software.amazon.smithy.model.node.ToNode;\n+import software.amazon.smithy.utils.ListUtils;\n+import software.amazon.smithy.utils.SmithyBuilder;\n+import software.amazon.smithy.utils.ToSmithyBuilder;\n+\n+public final class ResourceSchema implements ToNode, ToSmithyBuilder<ResourceSchema> {", "originalCommit": "db99259bab16f71ed9181bb0a5b391d0af13bca5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY4OTk3Mw==", "url": "https://github.com/awslabs/smithy/pull/622#discussion_r517689973", "bodyText": "Does order matter here?", "author": "mtdowling", "createdAt": "2020-11-04T23:24:28Z", "path": "smithy-aws-cloudformation/src/main/java/software/amazon/smithy/aws/cloudformation/schema/model/ResourceSchema.java", "diffHunk": "@@ -0,0 +1,392 @@\n+/*\n+ * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.smithy.aws.cloudformation.schema.model;\n+\n+import static java.lang.String.format;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.TreeMap;\n+import java.util.TreeSet;\n+import software.amazon.smithy.aws.cloudformation.schema.CfnException;\n+import software.amazon.smithy.jsonschema.Schema;\n+import software.amazon.smithy.model.node.Node;\n+import software.amazon.smithy.model.node.NodeMapper;\n+import software.amazon.smithy.model.node.ObjectNode;\n+import software.amazon.smithy.model.node.ToNode;\n+import software.amazon.smithy.utils.ListUtils;\n+import software.amazon.smithy.utils.SmithyBuilder;\n+import software.amazon.smithy.utils.ToSmithyBuilder;\n+\n+public final class ResourceSchema implements ToNode, ToSmithyBuilder<ResourceSchema> {\n+    private final String typeName;\n+    private final String description;\n+    private final String sourceUrl;\n+    private final String documentationUrl;\n+    private final Map<String, Schema> definitions = new TreeMap<>();\n+    private final Map<String, Property> properties = new TreeMap<>();\n+    private final Set<String> readOnlyProperties = new TreeSet<>();\n+    private final Set<String> writeOnlyProperties = new TreeSet<>();\n+    private final Set<String> primaryIdentifier = new TreeSet<>();\n+    private final Set<String> createOnlyProperties = new TreeSet<>();\n+    private final Set<String> deprecatedProperties = new TreeSet<>();\n+    private final List<List<String>> additionalIdentifiers;\n+    private final Map<String, Handler> handlers = new TreeMap<>();", "originalCommit": "db99259bab16f71ed9181bb0a5b391d0af13bca5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQ3Njg0Mw==", "url": "https://github.com/awslabs/smithy/pull/622#discussion_r518476843", "bodyText": "Expected to be CRUDL on the output document, so updated the TreeMap with a comparator to sort those and keep them first in the output.", "author": "kstich", "createdAt": "2020-11-06T01:51:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY4OTk3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY5MDUxNg==", "url": "https://github.com/awslabs/smithy/pull/622#discussion_r517690516", "bodyText": "If this is meant to model CloudFormation, why omit members that this actually has in JSON?", "author": "mtdowling", "createdAt": "2020-11-04T23:25:44Z", "path": "smithy-aws-cloudformation/src/main/java/software/amazon/smithy/aws/cloudformation/schema/model/Property.java", "diffHunk": "@@ -0,0 +1,119 @@\n+/*\n+ * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.smithy.aws.cloudformation.schema.model;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import software.amazon.smithy.jsonschema.Schema;\n+import software.amazon.smithy.model.node.Node;\n+import software.amazon.smithy.model.node.ObjectNode;\n+import software.amazon.smithy.model.node.ToNode;\n+import software.amazon.smithy.utils.ListUtils;\n+import software.amazon.smithy.utils.SmithyBuilder;\n+import software.amazon.smithy.utils.ToSmithyBuilder;\n+\n+public final class Property implements ToNode, ToSmithyBuilder<Property> {\n+    private final boolean insertionOrder;\n+    private final List<String> dependencies;\n+    private final Schema schema;\n+    // Other reserved property names:\n+    // * readOnly", "originalCommit": "db99259bab16f71ed9181bb0a5b391d0af13bca5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQ3Njk1NQ==", "url": "https://github.com/awslabs/smithy/pull/622#discussion_r518476955", "bodyText": "These properties are described as reserved in documentation, but not defined in the JSON Schema. Updating the comment to state so.\nThe remote property in ResourceSchema does have a JSON Schema definition and has been added.", "author": "kstich", "createdAt": "2020-11-06T01:51:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY5MDUxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY5MTQxMQ==", "url": "https://github.com/awslabs/smithy/pull/622#discussion_r517691411", "bodyText": "Why 96?", "author": "mtdowling", "createdAt": "2020-11-04T23:28:27Z", "path": "smithy-aws-cloudformation/src/main/java/software/amazon/smithy/aws/cloudformation/schema/fromsmithy/mappers/JsonAddMapper.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.smithy.aws.cloudformation.schema.fromsmithy.mappers;\n+\n+import java.util.Map;\n+import java.util.logging.Logger;\n+import software.amazon.smithy.aws.cloudformation.schema.CfnException;\n+import software.amazon.smithy.aws.cloudformation.schema.fromsmithy.CfnMapper;\n+import software.amazon.smithy.aws.cloudformation.schema.fromsmithy.Context;\n+import software.amazon.smithy.aws.cloudformation.schema.model.ResourceSchema;\n+import software.amazon.smithy.model.node.Node;\n+import software.amazon.smithy.model.node.NodePointer;\n+import software.amazon.smithy.model.node.ObjectNode;\n+import software.amazon.smithy.model.shapes.ShapeId;\n+import software.amazon.smithy.utils.SmithyInternalApi;\n+\n+/**\n+ * Adds JSON values into the generated CloudFormation resource schemas using\n+ * a JSON Patch like \"add\" operation that also generated intermediate objects\n+ * as needed. Any existing property is overwritten.\n+ */\n+@SmithyInternalApi\n+public final class JsonAddMapper implements CfnMapper {\n+\n+    private static final Logger LOGGER = Logger.getLogger(JsonAddMapper.class.getName());\n+\n+    @Override\n+    public byte getOrder() {\n+        return 96;", "originalCommit": "db99259bab16f71ed9181bb0a5b391d0af13bca5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY5MTYwNw==", "url": "https://github.com/awslabs/smithy/pull/622#discussion_r517691607", "bodyText": "Does this and the other built-in CfnMapper implementations need to be public given you have an extension abstraction that registers these?", "author": "mtdowling", "createdAt": "2020-11-04T23:29:04Z", "path": "smithy-aws-cloudformation/src/main/java/software/amazon/smithy/aws/cloudformation/schema/fromsmithy/mappers/MutabilityMapper.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.smithy.aws.cloudformation.schema.fromsmithy.mappers;\n+\n+import software.amazon.smithy.aws.cloudformation.schema.fromsmithy.CfnMapper;\n+import software.amazon.smithy.aws.cloudformation.schema.fromsmithy.Context;\n+import software.amazon.smithy.aws.cloudformation.schema.model.ResourceSchema;\n+import software.amazon.smithy.aws.cloudformation.traits.CfnResource;\n+import software.amazon.smithy.utils.SmithyInternalApi;\n+\n+/**\n+ * Applies property mutability restrictions to their proper location\n+ * in the resulting resource schema.\n+ */\n+@SmithyInternalApi\n+public final class MutabilityMapper implements CfnMapper {", "originalCommit": "db99259bab16f71ed9181bb0a5b391d0af13bca5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY5MjIxMA==", "url": "https://github.com/awslabs/smithy/pull/622#discussion_r517692210", "bodyText": "Nit: for loops are so much easier to understand in general", "author": "mtdowling", "createdAt": "2020-11-04T23:30:43Z", "path": "smithy-aws-cloudformation/src/main/java/software/amazon/smithy/aws/cloudformation/schema/fromsmithy/mappers/IdentifierMapper.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.smithy.aws.cloudformation.schema.fromsmithy.mappers;\n+\n+import java.util.List;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import software.amazon.smithy.aws.cloudformation.schema.fromsmithy.CfnMapper;\n+import software.amazon.smithy.aws.cloudformation.schema.fromsmithy.Context;\n+import software.amazon.smithy.aws.cloudformation.schema.model.ResourceSchema.Builder;\n+import software.amazon.smithy.aws.cloudformation.traits.CfnResource;\n+import software.amazon.smithy.utils.SmithyInternalApi;\n+\n+/**\n+ * Applies the resource's identifier and annotated additional identifiers\n+ * to the resulting resource schema.\n+ */\n+@SmithyInternalApi\n+public final class IdentifierMapper implements CfnMapper {\n+\n+    @Override\n+    public void before(Context context, Builder builder) {\n+        CfnResource cfnResource = context.getCfnResource();\n+\n+        // Add the primary identifier.\n+        Set<String> primaryIdentifier = cfnResource.getPrimaryIdentifiers();\n+        builder.primaryIdentifier(primaryIdentifier.stream()\n+                .map(context::getPropertyPointer)\n+                .collect(Collectors.toList()));\n+\n+        // Add any additional identifiers.\n+        List<Set<String>> additionalIdentifiers = cfnResource.getAdditionalIdentifiers();\n+        additionalIdentifiers.stream()", "originalCommit": "db99259bab16f71ed9181bb0a5b391d0af13bca5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY5MjM5NQ==", "url": "https://github.com/awslabs/smithy/pull/622#discussion_r517692395", "bodyText": "Is there external documentation somewhere about these doc URLs we can link to?", "author": "mtdowling", "createdAt": "2020-11-04T23:31:20Z", "path": "smithy-aws-cloudformation/src/main/java/software/amazon/smithy/aws/cloudformation/schema/fromsmithy/mappers/DocumentationMapper.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.smithy.aws.cloudformation.schema.fromsmithy.mappers;\n+\n+import static java.util.function.Function.identity;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.Map;\n+import java.util.Optional;\n+import software.amazon.smithy.aws.cloudformation.schema.CfnConfig;\n+import software.amazon.smithy.aws.cloudformation.schema.fromsmithy.CfnMapper;\n+import software.amazon.smithy.aws.cloudformation.schema.fromsmithy.Context;\n+import software.amazon.smithy.aws.cloudformation.schema.model.ResourceSchema;\n+import software.amazon.smithy.model.shapes.ResourceShape;\n+import software.amazon.smithy.model.traits.ExternalDocumentationTrait;\n+import software.amazon.smithy.utils.MapUtils;\n+import software.amazon.smithy.utils.SmithyInternalApi;\n+\n+/**\n+ * Generates the schema doc urls based on the resource's {@code @externalDocumentation}", "originalCommit": "db99259bab16f71ed9181bb0a5b391d0af13bca5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY5NDM0Mw==", "url": "https://github.com/awslabs/smithy/pull/622#discussion_r517694343", "bodyText": "I usually just do resource.getTrait(ExternalDocumentationTrait.class).orElse(null), and then do a null check.", "author": "mtdowling", "createdAt": "2020-11-04T23:36:55Z", "path": "smithy-aws-cloudformation/src/main/java/software/amazon/smithy/aws/cloudformation/schema/fromsmithy/mappers/DocumentationMapper.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.smithy.aws.cloudformation.schema.fromsmithy.mappers;\n+\n+import static java.util.function.Function.identity;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.Map;\n+import java.util.Optional;\n+import software.amazon.smithy.aws.cloudformation.schema.CfnConfig;\n+import software.amazon.smithy.aws.cloudformation.schema.fromsmithy.CfnMapper;\n+import software.amazon.smithy.aws.cloudformation.schema.fromsmithy.Context;\n+import software.amazon.smithy.aws.cloudformation.schema.model.ResourceSchema;\n+import software.amazon.smithy.model.shapes.ResourceShape;\n+import software.amazon.smithy.model.traits.ExternalDocumentationTrait;\n+import software.amazon.smithy.utils.MapUtils;\n+import software.amazon.smithy.utils.SmithyInternalApi;\n+\n+/**\n+ * Generates the schema doc urls based on the resource's {@code @externalDocumentation}\n+ * trait. This is configurable based on the {@code \"sourceDocKeys\"} and\n+ * {@code \"externalDocKeys\"} plugin properties.\n+ */\n+@SmithyInternalApi\n+public final class DocumentationMapper implements CfnMapper {\n+\n+    @Override\n+    public void before(Context context, ResourceSchema.Builder builder) {\n+        ResourceShape resource = context.getResource();\n+        Optional<ExternalDocumentationTrait> traitOptional = resource.getTrait(ExternalDocumentationTrait.class);", "originalCommit": "db99259bab16f71ed9181bb0a5b391d0af13bca5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY5NTA1Ng==", "url": "https://github.com/awslabs/smithy/pull/622#discussion_r517695056", "bodyText": "nit: move converting a Collection of String to a lowercase Collection of String into a shared method. That will also clean up the fact that you're mixing Locale.US and Locale.ENGLISH here.", "author": "mtdowling", "createdAt": "2020-11-04T23:38:59Z", "path": "smithy-aws-cloudformation/src/main/java/software/amazon/smithy/aws/cloudformation/schema/fromsmithy/mappers/DocumentationMapper.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.smithy.aws.cloudformation.schema.fromsmithy.mappers;\n+\n+import static java.util.function.Function.identity;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.Map;\n+import java.util.Optional;\n+import software.amazon.smithy.aws.cloudformation.schema.CfnConfig;\n+import software.amazon.smithy.aws.cloudformation.schema.fromsmithy.CfnMapper;\n+import software.amazon.smithy.aws.cloudformation.schema.fromsmithy.Context;\n+import software.amazon.smithy.aws.cloudformation.schema.model.ResourceSchema;\n+import software.amazon.smithy.model.shapes.ResourceShape;\n+import software.amazon.smithy.model.traits.ExternalDocumentationTrait;\n+import software.amazon.smithy.utils.MapUtils;\n+import software.amazon.smithy.utils.SmithyInternalApi;\n+\n+/**\n+ * Generates the schema doc urls based on the resource's {@code @externalDocumentation}\n+ * trait. This is configurable based on the {@code \"sourceDocKeys\"} and\n+ * {@code \"externalDocKeys\"} plugin properties.\n+ */\n+@SmithyInternalApi\n+public final class DocumentationMapper implements CfnMapper {\n+\n+    @Override\n+    public void before(Context context, ResourceSchema.Builder builder) {\n+        ResourceShape resource = context.getResource();\n+        Optional<ExternalDocumentationTrait> traitOptional = resource.getTrait(ExternalDocumentationTrait.class);\n+\n+        if (!traitOptional.isPresent()) {\n+            return;\n+        }\n+\n+        CfnConfig config = context.getConfig();\n+\n+        getResolvedExternalDocs(traitOptional.get(), config.getSourceDocs()).ifPresent(builder::sourceUrl);\n+        getResolvedExternalDocs(traitOptional.get(), config.getExternalDocs()).ifPresent(builder::documentationUrl);\n+    }\n+\n+    private Optional<String> getResolvedExternalDocs(ExternalDocumentationTrait trait, List<String> enabledKeys) {\n+        // Get the valid list of lower case names to look for when converting.\n+        List<String> externalDocKeys = new ArrayList<>(enabledKeys.size());", "originalCommit": "db99259bab16f71ed9181bb0a5b391d0af13bca5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY5NTYzMg==", "url": "https://github.com/awslabs/smithy/pull/622#discussion_r517695632", "bodyText": "Needs docs", "author": "mtdowling", "createdAt": "2020-11-04T23:40:24Z", "path": "smithy-aws-cloudformation/src/main/java/software/amazon/smithy/aws/cloudformation/schema/fromsmithy/Smithy2CfnExtension.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.smithy.aws.cloudformation.schema.fromsmithy;\n+\n+import java.util.List;\n+import software.amazon.smithy.jsonschema.JsonSchemaMapper;\n+import software.amazon.smithy.utils.ListUtils;\n+\n+public interface Smithy2CfnExtension {", "originalCommit": "db99259bab16f71ed9181bb0a5b391d0af13bca5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY5NjIxMA==", "url": "https://github.com/awslabs/smithy/pull/622#discussion_r517696210", "bodyText": "Given that this is the SPI, the Mappers you register here should all be package-private", "author": "mtdowling", "createdAt": "2020-11-04T23:41:58Z", "path": "smithy-aws-cloudformation/src/main/java/software/amazon/smithy/aws/cloudformation/schema/fromsmithy/CoreExtension.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.smithy.aws.cloudformation.schema.fromsmithy;\n+\n+import java.util.List;\n+import software.amazon.smithy.aws.cloudformation.schema.fromsmithy.mappers.DeprecatedMapper;\n+import software.amazon.smithy.aws.cloudformation.schema.fromsmithy.mappers.DocumentationMapper;\n+import software.amazon.smithy.aws.cloudformation.schema.fromsmithy.mappers.IdentifierMapper;\n+import software.amazon.smithy.aws.cloudformation.schema.fromsmithy.mappers.JsonAddMapper;\n+import software.amazon.smithy.aws.cloudformation.schema.fromsmithy.mappers.MutabilityMapper;\n+import software.amazon.smithy.utils.ListUtils;\n+\n+public final class CoreExtension implements Smithy2CfnExtension {", "originalCommit": "db99259bab16f71ed9181bb0a5b391d0af13bca5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY5NjI4Mw==", "url": "https://github.com/awslabs/smithy/pull/622#discussion_r517696283", "bodyText": "Maybe a doc here stating these are registered automatically", "author": "mtdowling", "createdAt": "2020-11-04T23:42:12Z", "path": "smithy-aws-cloudformation/src/main/java/software/amazon/smithy/aws/cloudformation/schema/fromsmithy/CoreExtension.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.smithy.aws.cloudformation.schema.fromsmithy;\n+\n+import java.util.List;\n+import software.amazon.smithy.aws.cloudformation.schema.fromsmithy.mappers.DeprecatedMapper;\n+import software.amazon.smithy.aws.cloudformation.schema.fromsmithy.mappers.DocumentationMapper;\n+import software.amazon.smithy.aws.cloudformation.schema.fromsmithy.mappers.IdentifierMapper;\n+import software.amazon.smithy.aws.cloudformation.schema.fromsmithy.mappers.JsonAddMapper;\n+import software.amazon.smithy.aws.cloudformation.schema.fromsmithy.mappers.MutabilityMapper;\n+import software.amazon.smithy.utils.ListUtils;\n+\n+public final class CoreExtension implements Smithy2CfnExtension {", "originalCommit": "db99259bab16f71ed9181bb0a5b391d0af13bca5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY5NjMyNw==", "url": "https://github.com/awslabs/smithy/pull/622#discussion_r517696327", "bodyText": "Class docs", "author": "mtdowling", "createdAt": "2020-11-04T23:42:22Z", "path": "smithy-aws-cloudformation/src/main/java/software/amazon/smithy/aws/cloudformation/schema/fromsmithy/Context.java", "diffHunk": "@@ -0,0 +1,131 @@\n+/*\n+ * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.smithy.aws.cloudformation.schema.fromsmithy;\n+\n+import software.amazon.smithy.aws.cloudformation.schema.CfnConfig;\n+import software.amazon.smithy.aws.cloudformation.traits.CfnResource;\n+import software.amazon.smithy.jsonschema.JsonSchemaConverter;\n+import software.amazon.smithy.model.Model;\n+import software.amazon.smithy.model.shapes.MemberShape;\n+import software.amazon.smithy.model.shapes.ResourceShape;\n+import software.amazon.smithy.model.shapes.ServiceShape;\n+import software.amazon.smithy.model.shapes.StructureShape;\n+\n+public final class Context {", "originalCommit": "db99259bab16f71ed9181bb0a5b391d0af13bca5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY5NjM2NQ==", "url": "https://github.com/awslabs/smithy/pull/622#discussion_r517696365", "bodyText": "nit: extra newline", "author": "mtdowling", "createdAt": "2020-11-04T23:42:30Z", "path": "smithy-aws-cloudformation/src/main/java/software/amazon/smithy/aws/cloudformation/schema/fromsmithy/Context.java", "diffHunk": "@@ -0,0 +1,131 @@\n+/*\n+ * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.smithy.aws.cloudformation.schema.fromsmithy;\n+\n+import software.amazon.smithy.aws.cloudformation.schema.CfnConfig;\n+import software.amazon.smithy.aws.cloudformation.traits.CfnResource;\n+import software.amazon.smithy.jsonschema.JsonSchemaConverter;\n+import software.amazon.smithy.model.Model;\n+import software.amazon.smithy.model.shapes.MemberShape;\n+import software.amazon.smithy.model.shapes.ResourceShape;\n+import software.amazon.smithy.model.shapes.ServiceShape;\n+import software.amazon.smithy.model.shapes.StructureShape;\n+\n+public final class Context {\n+\n+    private final Model model;\n+    private final ServiceShape service;\n+    private final ResourceShape resource;\n+    private final CfnResource cfnResource;\n+    private final StructureShape resourceStructure;\n+    private final JsonSchemaConverter jsonSchemaConverter;\n+    private final CfnConfig config;\n+\n+    Context(\n+            Model model,\n+            ServiceShape service,\n+            ResourceShape resource,\n+            CfnResource cfnResource,\n+            StructureShape resourceStructure,\n+            CfnConfig config,\n+            JsonSchemaConverter jsonSchemaConverter\n+    ) {\n+        this.model = model;\n+        this.service = service;\n+        this.resource = resource;\n+        this.cfnResource = cfnResource;\n+        this.resourceStructure = resourceStructure;\n+        this.config = config;\n+        this.jsonSchemaConverter = jsonSchemaConverter;\n+    }\n+", "originalCommit": "db99259bab16f71ed9181bb0a5b391d0af13bca5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY5NjU2OA==", "url": "https://github.com/awslabs/smithy/pull/622#discussion_r517696568", "bodyText": "Docs", "author": "mtdowling", "createdAt": "2020-11-04T23:43:05Z", "path": "smithy-aws-cloudformation/src/main/java/software/amazon/smithy/aws/cloudformation/schema/fromsmithy/CfnMapper.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.smithy.aws.cloudformation.schema.fromsmithy;\n+\n+import software.amazon.smithy.aws.cloudformation.schema.model.ResourceSchema;\n+import software.amazon.smithy.model.node.ObjectNode;\n+\n+public interface CfnMapper {", "originalCommit": "db99259bab16f71ed9181bb0a5b391d0af13bca5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY5OTc0OA==", "url": "https://github.com/awslabs/smithy/pull/622#discussion_r517699748", "bodyText": "How / who would be calling these overrides? I almost want to throw an exception rather than just ignore these unsupported properties.", "author": "mtdowling", "createdAt": "2020-11-04T23:52:27Z", "path": "smithy-aws-cloudformation/src/main/java/software/amazon/smithy/aws/cloudformation/schema/CfnConfig.java", "diffHunk": "@@ -0,0 +1,282 @@\n+/*\n+ * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.smithy.aws.cloudformation.schema;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.logging.Logger;\n+import software.amazon.smithy.jsonschema.JsonSchemaConfig;\n+import software.amazon.smithy.model.node.Node;\n+import software.amazon.smithy.model.node.NodeMapper;\n+import software.amazon.smithy.model.node.ObjectNode;\n+import software.amazon.smithy.model.shapes.ShapeId;\n+import software.amazon.smithy.utils.ListUtils;\n+\n+/**\n+ * \"cloudformation\" smithy-build plugin configuration settings.\n+ */\n+public class CfnConfig extends JsonSchemaConfig {\n+\n+    /** The JSON pointer to where CloudFormation schema shared resource properties should be written. */\n+    public static final String SCHEMA_COMPONENTS_POINTER = \"#/definitions\";\n+\n+    private static final Logger LOGGER = Logger.getLogger(CfnConfig.class.getName());\n+\n+    private boolean disableDeprecatedPropertyGeneration = false;\n+    private boolean disableCapitalizedProperties = false;\n+    private List<String> externalDocs = ListUtils.of(\n+            \"Documentation Url\", \"DocumentationUrl\", \"API Reference\", \"User Guide\",\n+            \"Developer Guide\", \"Reference\", \"Guide\");\n+    private Map<ShapeId, Map<String, Node>> jsonAdd = Collections.emptyMap();\n+    private String organizationName;\n+    private String serviceName;\n+    private ShapeId service;\n+    private List<String> sourceDocs = ListUtils.of(\n+            \"Source Url\", \"SourceUrl\", \"Source\", \"Source Code\");\n+\n+    public CfnConfig() {\n+        super();\n+\n+        // CloudFormation Resource Schemas MUST use the patternProperties schema\n+        // property for maps. Invoke the parent class's method directly since\n+        // we override it to lock this functionality.\n+        //\n+        // https://github.com/aws-cloudformation/cloudformation-cli/blob/master/src/rpdk/core/data/schema/provider.definition.schema.v1.json#L166-L177\n+        super.setMapStrategy(MapStrategy.PATTERN_PROPERTIES);\n+\n+        // CloudFormation Resource Schemas MUST use alphanumeric only references.\n+        // Invoke the parent class's method directly since we override it to lock\n+        // this functionality.\n+        //\n+        // https://github.com/aws-cloudformation/cloudformation-cli/blob/master/src/rpdk/core/data/schema/provider.definition.schema.v1.json#L303\n+        super.setAlphanumericOnlyRefs(true);\n+\n+        setDefinitionPointer(SCHEMA_COMPONENTS_POINTER);\n+    }\n+\n+    @Override\n+    public void setAlphanumericOnlyRefs(boolean alphanumericOnlyRefs) {\n+        // CloudFormation Resource Schemas MUST use alphanumeric only references.\n+        // Warn if customers tried to set it at all, and don't replace the setting.\n+        //\n+        // https://github.com/aws-cloudformation/cloudformation-cli/blob/master/src/rpdk/core/data/schema/provider.definition.schema.v1.json#L303\n+        LOGGER.warning(String.format(\"CloudFormation Resource Schemas MUST use alphanumeric only references. \"\n+                + \"Ignoring the provided setting value of `%b`.\", alphanumericOnlyRefs));\n+    }\n+\n+    public boolean getDisableDeprecatedPropertyGeneration() {\n+        return disableDeprecatedPropertyGeneration;\n+    }\n+\n+    /**\n+     * Set to true to disable generating {@code deprecatedProperties} for Resource Schemas.\n+     *\n+     * <p>By default, deprecated members are automatically added to the\n+     * {@code deprecatedProperties} schema property.\n+     *\n+     * @param disableDeprecatedPropertyGeneration True to disable {@code deprecatedProperties}\n+     *   generation, false otherwise.\n+     */\n+    public void setDisableDeprecatedPropertyGeneration(boolean disableDeprecatedPropertyGeneration) {\n+        this.disableDeprecatedPropertyGeneration = disableDeprecatedPropertyGeneration;\n+    }\n+\n+    public boolean getDisableCapitalizedProperties() {\n+        return disableCapitalizedProperties;\n+    }\n+\n+    /**\n+     * Set to true to disable automatically capitalizing names of properties\n+     * of Resource Schemas.\n+     *\n+     * <p>By default, property names of Resource Schemas are capitalized if\n+     * no {@code cfnName} trait is applied.\n+     *\n+     * @param disableCapitalizedProperties True to disable capitalizing property names,\n+     *   false otherwise.\n+     */\n+    public void setDisableCapitalizedProperties(boolean disableCapitalizedProperties) {\n+        this.disableCapitalizedProperties = disableCapitalizedProperties;\n+    }\n+\n+    public List<String> getExternalDocs() {\n+        return externalDocs;\n+    }\n+\n+    /**\n+     * Limits the source of converted \"externalDocs\" fields to the specified\n+     * priority ordered list of names in an externalDocumentation trait.\n+     *\n+     * <p>This list is case insensitive. By default, this is a list of the\n+     * following values: \"Documentation Url\", \"DocumentationUrl\", \"API Reference\",\n+     * \"User Guide\", \"Developer Guide\", \"Reference\", and \"Guide\".\n+     *\n+     * @param externalDocs External docs to look for and convert, in order.\n+     */\n+    public void setExternalDocs(List<String> externalDocs) {\n+        this.externalDocs = externalDocs;\n+    }\n+\n+    public Map<ShapeId, Map<String, Node>> getJsonAdd() {\n+        return jsonAdd;\n+    }\n+\n+    /**\n+     * Adds or replaces the JSON value in the generated resource schema\n+     * document at the given JSON pointer locations with a different JSON\n+     * value.\n+     *\n+     * <p>The value must be a map where each key is a resource shape ID. The\n+     * value is a map where each key is a valid JSON pointer string as defined\n+     * in RFC 6901. Each value in the nested map is the JSON value to add or\n+     * replace at the given target.\n+     *\n+     * <p>Values are added using similar semantics of the \"add\" operation\n+     * of JSON Patch, as specified in RFC 6902, with the exception that\n+     * adding properties to an undefined object will create nested\n+     * objects in the result as needed.\n+     *\n+     * @param jsonAdd Map of JSON path to values to patch in.\n+     */\n+    public void setJsonAdd(Map<ShapeId, Map<String, Node>> jsonAdd) {\n+        this.jsonAdd = Objects.requireNonNull(jsonAdd);\n+    }\n+\n+    @Override\n+    public void setUseJsonName(boolean useJsonName) {", "originalCommit": "db99259bab16f71ed9181bb0a5b391d0af13bca5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQ3NzA1NA==", "url": "https://github.com/awslabs/smithy/pull/622#discussion_r518477054", "bodyText": "Yeah, probably better to throw on these instead so that they're not ignored and potentially affect generation if the restriction is lifted down the line.", "author": "kstich", "createdAt": "2020-11-06T01:52:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY5OTc0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzcwMDAyMA==", "url": "https://github.com/awslabs/smithy/pull/622#discussion_r517700020", "bodyText": "Doesn't https://awslabs.github.io/smithy/1.0/spec/aws/aws-core.html#cloudformationname provide this value?", "author": "mtdowling", "createdAt": "2020-11-04T23:53:29Z", "path": "smithy-aws-cloudformation/src/main/java/software/amazon/smithy/aws/cloudformation/schema/CfnConfig.java", "diffHunk": "@@ -0,0 +1,282 @@\n+/*\n+ * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.smithy.aws.cloudformation.schema;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.logging.Logger;\n+import software.amazon.smithy.jsonschema.JsonSchemaConfig;\n+import software.amazon.smithy.model.node.Node;\n+import software.amazon.smithy.model.node.NodeMapper;\n+import software.amazon.smithy.model.node.ObjectNode;\n+import software.amazon.smithy.model.shapes.ShapeId;\n+import software.amazon.smithy.utils.ListUtils;\n+\n+/**\n+ * \"cloudformation\" smithy-build plugin configuration settings.\n+ */\n+public class CfnConfig extends JsonSchemaConfig {\n+\n+    /** The JSON pointer to where CloudFormation schema shared resource properties should be written. */\n+    public static final String SCHEMA_COMPONENTS_POINTER = \"#/definitions\";\n+\n+    private static final Logger LOGGER = Logger.getLogger(CfnConfig.class.getName());\n+\n+    private boolean disableDeprecatedPropertyGeneration = false;\n+    private boolean disableCapitalizedProperties = false;\n+    private List<String> externalDocs = ListUtils.of(\n+            \"Documentation Url\", \"DocumentationUrl\", \"API Reference\", \"User Guide\",\n+            \"Developer Guide\", \"Reference\", \"Guide\");\n+    private Map<ShapeId, Map<String, Node>> jsonAdd = Collections.emptyMap();\n+    private String organizationName;\n+    private String serviceName;\n+    private ShapeId service;\n+    private List<String> sourceDocs = ListUtils.of(\n+            \"Source Url\", \"SourceUrl\", \"Source\", \"Source Code\");\n+\n+    public CfnConfig() {\n+        super();\n+\n+        // CloudFormation Resource Schemas MUST use the patternProperties schema\n+        // property for maps. Invoke the parent class's method directly since\n+        // we override it to lock this functionality.\n+        //\n+        // https://github.com/aws-cloudformation/cloudformation-cli/blob/master/src/rpdk/core/data/schema/provider.definition.schema.v1.json#L166-L177\n+        super.setMapStrategy(MapStrategy.PATTERN_PROPERTIES);\n+\n+        // CloudFormation Resource Schemas MUST use alphanumeric only references.\n+        // Invoke the parent class's method directly since we override it to lock\n+        // this functionality.\n+        //\n+        // https://github.com/aws-cloudformation/cloudformation-cli/blob/master/src/rpdk/core/data/schema/provider.definition.schema.v1.json#L303\n+        super.setAlphanumericOnlyRefs(true);\n+\n+        setDefinitionPointer(SCHEMA_COMPONENTS_POINTER);\n+    }\n+\n+    @Override\n+    public void setAlphanumericOnlyRefs(boolean alphanumericOnlyRefs) {\n+        // CloudFormation Resource Schemas MUST use alphanumeric only references.\n+        // Warn if customers tried to set it at all, and don't replace the setting.\n+        //\n+        // https://github.com/aws-cloudformation/cloudformation-cli/blob/master/src/rpdk/core/data/schema/provider.definition.schema.v1.json#L303\n+        LOGGER.warning(String.format(\"CloudFormation Resource Schemas MUST use alphanumeric only references. \"\n+                + \"Ignoring the provided setting value of `%b`.\", alphanumericOnlyRefs));\n+    }\n+\n+    public boolean getDisableDeprecatedPropertyGeneration() {\n+        return disableDeprecatedPropertyGeneration;\n+    }\n+\n+    /**\n+     * Set to true to disable generating {@code deprecatedProperties} for Resource Schemas.\n+     *\n+     * <p>By default, deprecated members are automatically added to the\n+     * {@code deprecatedProperties} schema property.\n+     *\n+     * @param disableDeprecatedPropertyGeneration True to disable {@code deprecatedProperties}\n+     *   generation, false otherwise.\n+     */\n+    public void setDisableDeprecatedPropertyGeneration(boolean disableDeprecatedPropertyGeneration) {\n+        this.disableDeprecatedPropertyGeneration = disableDeprecatedPropertyGeneration;\n+    }\n+\n+    public boolean getDisableCapitalizedProperties() {\n+        return disableCapitalizedProperties;\n+    }\n+\n+    /**\n+     * Set to true to disable automatically capitalizing names of properties\n+     * of Resource Schemas.\n+     *\n+     * <p>By default, property names of Resource Schemas are capitalized if\n+     * no {@code cfnName} trait is applied.\n+     *\n+     * @param disableCapitalizedProperties True to disable capitalizing property names,\n+     *   false otherwise.\n+     */\n+    public void setDisableCapitalizedProperties(boolean disableCapitalizedProperties) {\n+        this.disableCapitalizedProperties = disableCapitalizedProperties;\n+    }\n+\n+    public List<String> getExternalDocs() {\n+        return externalDocs;\n+    }\n+\n+    /**\n+     * Limits the source of converted \"externalDocs\" fields to the specified\n+     * priority ordered list of names in an externalDocumentation trait.\n+     *\n+     * <p>This list is case insensitive. By default, this is a list of the\n+     * following values: \"Documentation Url\", \"DocumentationUrl\", \"API Reference\",\n+     * \"User Guide\", \"Developer Guide\", \"Reference\", and \"Guide\".\n+     *\n+     * @param externalDocs External docs to look for and convert, in order.\n+     */\n+    public void setExternalDocs(List<String> externalDocs) {\n+        this.externalDocs = externalDocs;\n+    }\n+\n+    public Map<ShapeId, Map<String, Node>> getJsonAdd() {\n+        return jsonAdd;\n+    }\n+\n+    /**\n+     * Adds or replaces the JSON value in the generated resource schema\n+     * document at the given JSON pointer locations with a different JSON\n+     * value.\n+     *\n+     * <p>The value must be a map where each key is a resource shape ID. The\n+     * value is a map where each key is a valid JSON pointer string as defined\n+     * in RFC 6901. Each value in the nested map is the JSON value to add or\n+     * replace at the given target.\n+     *\n+     * <p>Values are added using similar semantics of the \"add\" operation\n+     * of JSON Patch, as specified in RFC 6902, with the exception that\n+     * adding properties to an undefined object will create nested\n+     * objects in the result as needed.\n+     *\n+     * @param jsonAdd Map of JSON path to values to patch in.\n+     */\n+    public void setJsonAdd(Map<ShapeId, Map<String, Node>> jsonAdd) {\n+        this.jsonAdd = Objects.requireNonNull(jsonAdd);\n+    }\n+\n+    @Override\n+    public void setUseJsonName(boolean useJsonName) {\n+        // CloudFormation Resource Schemas use a separate strategy, via @cfnName,\n+        // for naming JSON Schema properties for structures and unions. Warn if\n+        // customers tried to set it at all, and don't replace the setting.\n+        //\n+        // See CfnConverter::getPropertyNamingStrategy\n+        LOGGER.warning(String.format(\"CloudFormation Resource Schemas use the `@cfnName` trait for \"\n+                + \"naming JSON Schema properties for structures and unions. Ignoring the provided \"\n+                + \"setting value of `%b`.\", useJsonName));\n+    }\n+\n+    @Override\n+    public void setMapStrategy(MapStrategy mapStrategy) {\n+        // CloudFormation Resource Schemas MUST use the patternProperties schema\n+        // property for maps, which was already set in the constructor. Warn if\n+        // customers tried to set it to another MapStrategy, and don't replace\n+        // the setting.\n+        //\n+        // https://github.com/aws-cloudformation/cloudformation-cli/blob/master/src/rpdk/core/data/schema/provider.definition.schema.v1.json#L166-L177\n+        if (mapStrategy != MapStrategy.PATTERN_PROPERTIES) {\n+            LOGGER.warning(String.format(\"CloudFormation Resource Schemas require the use of `patternProperties` for \"\n+                + \"defining maps in JSON Schema. Ignoring the provided setting value of `%s`.\", mapStrategy));\n+        }\n+    }\n+\n+    public String getOrganizationName() {\n+        return organizationName;\n+    }\n+\n+    /**\n+     * Sets the \"Organization\" component for each of the generated resource's\n+     * type name.\n+     *\n+     * @see <a href=\"https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-type-schema.html#schema-properties-typeName\">Type Name</a>\n+     *\n+     * @param organizationName Name to use for the \"Organization\" component of resource type names.\n+     */\n+    public void setOrganizationName(String organizationName) {", "originalCommit": "db99259bab16f71ed9181bb0a5b391d0af13bca5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQ3NzE1OQ==", "url": "https://github.com/awslabs/smithy/pull/622#discussion_r518477159", "bodyText": "That provides serviceName for AWS Services and indicates the default of \"AWS\" for the organization, if present. Non-AWS services utilizing schema generation need to be able to configure these values, so the configuration needs to stay.", "author": "kstich", "createdAt": "2020-11-06T01:52:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzcwMDAyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzcwMDA4OQ==", "url": "https://github.com/awslabs/smithy/pull/622#discussion_r517700089", "bodyText": "final?", "author": "mtdowling", "createdAt": "2020-11-04T23:53:38Z", "path": "smithy-aws-cloudformation/src/main/java/software/amazon/smithy/aws/cloudformation/schema/CfnConfig.java", "diffHunk": "@@ -0,0 +1,282 @@\n+/*\n+ * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.smithy.aws.cloudformation.schema;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.logging.Logger;\n+import software.amazon.smithy.jsonschema.JsonSchemaConfig;\n+import software.amazon.smithy.model.node.Node;\n+import software.amazon.smithy.model.node.NodeMapper;\n+import software.amazon.smithy.model.node.ObjectNode;\n+import software.amazon.smithy.model.shapes.ShapeId;\n+import software.amazon.smithy.utils.ListUtils;\n+\n+/**\n+ * \"cloudformation\" smithy-build plugin configuration settings.\n+ */\n+public class CfnConfig extends JsonSchemaConfig {", "originalCommit": "db99259bab16f71ed9181bb0a5b391d0af13bca5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzcwMDU5OA==", "url": "https://github.com/awslabs/smithy/pull/622#discussion_r517700598", "bodyText": "*will", "author": "mtdowling", "createdAt": "2020-11-04T23:55:10Z", "path": "smithy-aws-cloudformation/src/main/java/software/amazon/smithy/aws/cloudformation/schema/fromsmithy/CfnConverter.java", "diffHunk": "@@ -0,0 +1,346 @@\n+/*\n+ * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.smithy.aws.cloudformation.schema.fromsmithy;\n+\n+import java.util.ArrayList;\n+import java.util.Comparator;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.ServiceLoader;\n+import java.util.Set;\n+import software.amazon.smithy.aws.cloudformation.schema.CfnConfig;\n+import software.amazon.smithy.aws.cloudformation.schema.CfnException;\n+import software.amazon.smithy.aws.cloudformation.schema.model.Property;\n+import software.amazon.smithy.aws.cloudformation.schema.model.ResourceSchema;\n+import software.amazon.smithy.aws.cloudformation.traits.CfnNameTrait;\n+import software.amazon.smithy.aws.cloudformation.traits.CfnResource;\n+import software.amazon.smithy.aws.cloudformation.traits.CfnResourceIndex;\n+import software.amazon.smithy.aws.cloudformation.traits.CfnResourceTrait;\n+import software.amazon.smithy.jsonschema.JsonSchemaConverter;\n+import software.amazon.smithy.jsonschema.JsonSchemaMapper;\n+import software.amazon.smithy.jsonschema.PropertyNamingStrategy;\n+import software.amazon.smithy.jsonschema.Schema;\n+import software.amazon.smithy.jsonschema.SchemaDocument;\n+import software.amazon.smithy.model.Model;\n+import software.amazon.smithy.model.knowledge.TopDownIndex;\n+import software.amazon.smithy.model.node.ObjectNode;\n+import software.amazon.smithy.model.shapes.MemberShape;\n+import software.amazon.smithy.model.shapes.ResourceShape;\n+import software.amazon.smithy.model.shapes.ServiceShape;\n+import software.amazon.smithy.model.shapes.Shape;\n+import software.amazon.smithy.model.shapes.ShapeId;\n+import software.amazon.smithy.model.shapes.StructureShape;\n+import software.amazon.smithy.model.traits.DocumentationTrait;\n+import software.amazon.smithy.model.traits.StringTrait;\n+import software.amazon.smithy.utils.ListUtils;\n+import software.amazon.smithy.utils.StringUtils;\n+\n+public final class CfnConverter {\n+\n+    private ClassLoader classLoader = CfnConverter.class.getClassLoader();\n+    private CfnConfig config = new CfnConfig();\n+    private final List<Smithy2CfnExtension> extensions = new ArrayList<>();\n+\n+    private CfnConverter() {}\n+\n+    public static CfnConverter create() {\n+        return new CfnConverter();\n+    }\n+\n+    /**\n+     * Get the CloudFormation configuration settings.\n+     *\n+     * @return Returns the config object.\n+     */\n+    public CfnConfig getConfig() {\n+        return config;\n+    }\n+\n+    /**\n+     * Set the CloudFormation configuration settings.\n+     *\n+     * @param config Config object to set.\n+     * @return Returns the converter.\n+     */\n+    public CfnConverter config(CfnConfig config) {\n+        this.config = config;\n+        return this;\n+    }\n+\n+    /**\n+     * Sets a {@link ClassLoader} to use to discover {@link Smithy2CfnExtension}\n+     * service providers through SPI.\n+     *\n+     * <p>The {@code CfnConverter} will use its own ClassLoader by default.\n+     *\n+     * @param classLoader ClassLoader to use.\n+     * @return Returns the converter.\n+     */\n+    public CfnConverter classLoader(ClassLoader classLoader) {\n+        this.classLoader = classLoader;\n+        return this;\n+    }\n+\n+    /**\n+     * Converts resource shapes annotated with the @cfnResource trait to JSON/Node\n+     * representations of CloudFormation Resource Schemas using the given Smithy\n+     * model.\n+     *\n+     * <p>The result of this method may differ from the result of calling\n+     * {@link ResourceSchema#toNode()} because this method wil pass the Node", "originalCommit": "db99259bab16f71ed9181bb0a5b391d0af13bca5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzcwMTUzOQ==", "url": "https://github.com/awslabs/smithy/pull/622#discussion_r517701539", "bodyText": "Need to wrap @cfnResource in {@code }", "author": "mtdowling", "createdAt": "2020-11-04T23:58:20Z", "path": "smithy-aws-cloudformation/src/main/java/software/amazon/smithy/aws/cloudformation/schema/fromsmithy/CfnConverter.java", "diffHunk": "@@ -0,0 +1,346 @@\n+/*\n+ * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.smithy.aws.cloudformation.schema.fromsmithy;\n+\n+import java.util.ArrayList;\n+import java.util.Comparator;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.ServiceLoader;\n+import java.util.Set;\n+import software.amazon.smithy.aws.cloudformation.schema.CfnConfig;\n+import software.amazon.smithy.aws.cloudformation.schema.CfnException;\n+import software.amazon.smithy.aws.cloudformation.schema.model.Property;\n+import software.amazon.smithy.aws.cloudformation.schema.model.ResourceSchema;\n+import software.amazon.smithy.aws.cloudformation.traits.CfnNameTrait;\n+import software.amazon.smithy.aws.cloudformation.traits.CfnResource;\n+import software.amazon.smithy.aws.cloudformation.traits.CfnResourceIndex;\n+import software.amazon.smithy.aws.cloudformation.traits.CfnResourceTrait;\n+import software.amazon.smithy.jsonschema.JsonSchemaConverter;\n+import software.amazon.smithy.jsonschema.JsonSchemaMapper;\n+import software.amazon.smithy.jsonschema.PropertyNamingStrategy;\n+import software.amazon.smithy.jsonschema.Schema;\n+import software.amazon.smithy.jsonschema.SchemaDocument;\n+import software.amazon.smithy.model.Model;\n+import software.amazon.smithy.model.knowledge.TopDownIndex;\n+import software.amazon.smithy.model.node.ObjectNode;\n+import software.amazon.smithy.model.shapes.MemberShape;\n+import software.amazon.smithy.model.shapes.ResourceShape;\n+import software.amazon.smithy.model.shapes.ServiceShape;\n+import software.amazon.smithy.model.shapes.Shape;\n+import software.amazon.smithy.model.shapes.ShapeId;\n+import software.amazon.smithy.model.shapes.StructureShape;\n+import software.amazon.smithy.model.traits.DocumentationTrait;\n+import software.amazon.smithy.model.traits.StringTrait;\n+import software.amazon.smithy.utils.ListUtils;\n+import software.amazon.smithy.utils.StringUtils;\n+\n+public final class CfnConverter {\n+\n+    private ClassLoader classLoader = CfnConverter.class.getClassLoader();\n+    private CfnConfig config = new CfnConfig();\n+    private final List<Smithy2CfnExtension> extensions = new ArrayList<>();\n+\n+    private CfnConverter() {}\n+\n+    public static CfnConverter create() {\n+        return new CfnConverter();\n+    }\n+\n+    /**\n+     * Get the CloudFormation configuration settings.\n+     *\n+     * @return Returns the config object.\n+     */\n+    public CfnConfig getConfig() {\n+        return config;\n+    }\n+\n+    /**\n+     * Set the CloudFormation configuration settings.\n+     *\n+     * @param config Config object to set.\n+     * @return Returns the converter.\n+     */\n+    public CfnConverter config(CfnConfig config) {\n+        this.config = config;\n+        return this;\n+    }\n+\n+    /**\n+     * Sets a {@link ClassLoader} to use to discover {@link Smithy2CfnExtension}\n+     * service providers through SPI.\n+     *\n+     * <p>The {@code CfnConverter} will use its own ClassLoader by default.\n+     *\n+     * @param classLoader ClassLoader to use.\n+     * @return Returns the converter.\n+     */\n+    public CfnConverter classLoader(ClassLoader classLoader) {\n+        this.classLoader = classLoader;\n+        return this;\n+    }\n+\n+    /**\n+     * Converts resource shapes annotated with the @cfnResource trait to JSON/Node", "originalCommit": "db99259bab16f71ed9181bb0a5b391d0af13bca5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzcwMjQyOA==", "url": "https://github.com/awslabs/smithy/pull/622#discussion_r517702428", "bodyText": "You can just do model.expectshape(serviceShapeId, ServiceShape.class)", "author": "mtdowling", "createdAt": "2020-11-05T00:00:55Z", "path": "smithy-aws-cloudformation/src/main/java/software/amazon/smithy/aws/cloudformation/schema/fromsmithy/CfnConverter.java", "diffHunk": "@@ -0,0 +1,346 @@\n+/*\n+ * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.smithy.aws.cloudformation.schema.fromsmithy;\n+\n+import java.util.ArrayList;\n+import java.util.Comparator;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.ServiceLoader;\n+import java.util.Set;\n+import software.amazon.smithy.aws.cloudformation.schema.CfnConfig;\n+import software.amazon.smithy.aws.cloudformation.schema.CfnException;\n+import software.amazon.smithy.aws.cloudformation.schema.model.Property;\n+import software.amazon.smithy.aws.cloudformation.schema.model.ResourceSchema;\n+import software.amazon.smithy.aws.cloudformation.traits.CfnNameTrait;\n+import software.amazon.smithy.aws.cloudformation.traits.CfnResource;\n+import software.amazon.smithy.aws.cloudformation.traits.CfnResourceIndex;\n+import software.amazon.smithy.aws.cloudformation.traits.CfnResourceTrait;\n+import software.amazon.smithy.jsonschema.JsonSchemaConverter;\n+import software.amazon.smithy.jsonschema.JsonSchemaMapper;\n+import software.amazon.smithy.jsonschema.PropertyNamingStrategy;\n+import software.amazon.smithy.jsonschema.Schema;\n+import software.amazon.smithy.jsonschema.SchemaDocument;\n+import software.amazon.smithy.model.Model;\n+import software.amazon.smithy.model.knowledge.TopDownIndex;\n+import software.amazon.smithy.model.node.ObjectNode;\n+import software.amazon.smithy.model.shapes.MemberShape;\n+import software.amazon.smithy.model.shapes.ResourceShape;\n+import software.amazon.smithy.model.shapes.ServiceShape;\n+import software.amazon.smithy.model.shapes.Shape;\n+import software.amazon.smithy.model.shapes.ShapeId;\n+import software.amazon.smithy.model.shapes.StructureShape;\n+import software.amazon.smithy.model.traits.DocumentationTrait;\n+import software.amazon.smithy.model.traits.StringTrait;\n+import software.amazon.smithy.utils.ListUtils;\n+import software.amazon.smithy.utils.StringUtils;\n+\n+public final class CfnConverter {\n+\n+    private ClassLoader classLoader = CfnConverter.class.getClassLoader();\n+    private CfnConfig config = new CfnConfig();\n+    private final List<Smithy2CfnExtension> extensions = new ArrayList<>();\n+\n+    private CfnConverter() {}\n+\n+    public static CfnConverter create() {\n+        return new CfnConverter();\n+    }\n+\n+    /**\n+     * Get the CloudFormation configuration settings.\n+     *\n+     * @return Returns the config object.\n+     */\n+    public CfnConfig getConfig() {\n+        return config;\n+    }\n+\n+    /**\n+     * Set the CloudFormation configuration settings.\n+     *\n+     * @param config Config object to set.\n+     * @return Returns the converter.\n+     */\n+    public CfnConverter config(CfnConfig config) {\n+        this.config = config;\n+        return this;\n+    }\n+\n+    /**\n+     * Sets a {@link ClassLoader} to use to discover {@link Smithy2CfnExtension}\n+     * service providers through SPI.\n+     *\n+     * <p>The {@code CfnConverter} will use its own ClassLoader by default.\n+     *\n+     * @param classLoader ClassLoader to use.\n+     * @return Returns the converter.\n+     */\n+    public CfnConverter classLoader(ClassLoader classLoader) {\n+        this.classLoader = classLoader;\n+        return this;\n+    }\n+\n+    /**\n+     * Converts resource shapes annotated with the @cfnResource trait to JSON/Node\n+     * representations of CloudFormation Resource Schemas using the given Smithy\n+     * model.\n+     *\n+     * <p>The result of this method may differ from the result of calling\n+     * {@link ResourceSchema#toNode()} because this method wil pass the Node\n+     * representation of the ResourceSchema through the {@link CfnMapper#updateNode}\n+     * method of each registered {@link CfnMapper}.\n+     *\n+     * @param model Smithy model to convert.\n+     * @return A map of CloudFormation resource type names to their converted schema nodes.\n+     */\n+    public Map<String, ObjectNode> convertToNodes(Model model) {\n+        List<ConversionEnvironment> environments = createConversionEnvironments(model);\n+        Map<ShapeId, ResourceSchema> resources = convertWithEnvironments(environments);\n+\n+        Map<String, ObjectNode> convertedNodes = new HashMap<>();\n+        for (ConversionEnvironment environment : environments) {\n+            ResourceSchema resourceSchema = resources.get(environment.context.getResource().getId());\n+            ObjectNode node = resourceSchema.toNode().expectObjectNode();\n+\n+            // Apply all the mappers' updateNode methods.\n+            for (CfnMapper mapper : environment.mappers) {\n+                node = mapper.updateNode(environment.context, resourceSchema, node);\n+            }\n+\n+            // CloudFormation resource schemas require the presence of a top-level\n+            // additionalProperties setting with the value of false to be validated.\n+            node = node.withMember(\"additionalProperties\", false);\n+\n+            convertedNodes.put(resourceSchema.getTypeName(), node);\n+        }\n+        return convertedNodes;\n+    }\n+\n+    /**\n+     * Converts the annotated resources in the Smithy model to CloudFormation\n+     * Resource Schemas.\n+     *\n+     * @param model Smithy model containing resources to convert.\n+     * @return Returns the converted resources.\n+     */\n+    public List<ResourceSchema> convert(Model model) {\n+        return ListUtils.copyOf(convertWithEnvironments(createConversionEnvironments(model)).values());\n+    }\n+\n+    private Map<ShapeId, ResourceSchema> convertWithEnvironments(List<ConversionEnvironment> environments) {\n+        Map<ShapeId, ResourceSchema> resourceSchemas = new HashMap<>();\n+        for (ConversionEnvironment environment : environments) {\n+            ResourceShape resourceShape = environment.context.getResource();\n+            ResourceSchema resourceSchema = convertResource(environment, resourceShape);\n+            resourceSchemas.put(resourceShape.getId(), resourceSchema);\n+        }\n+        return resourceSchemas;\n+    }\n+\n+    private List<ConversionEnvironment> createConversionEnvironments(Model model) {\n+        ShapeId serviceShapeId = config.getService();\n+\n+        if (serviceShapeId == null) {\n+            throw new CfnException(\"cloudformation is missing required property, `service`\");\n+        }\n+\n+        // Load the Smithy2Cfn extensions.\n+        ServiceLoader.load(Smithy2CfnExtension.class, classLoader).forEach(extensions::add);\n+\n+        // Find the service shape.\n+        ServiceShape serviceShape = model.getShape(serviceShapeId)", "originalCommit": "db99259bab16f71ed9181bb0a5b391d0af13bca5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzcwMjY4NQ==", "url": "https://github.com/awslabs/smithy/pull/622#discussion_r517702685", "bodyText": "Why?", "author": "mtdowling", "createdAt": "2020-11-05T00:01:45Z", "path": "smithy-aws-cloudformation/src/main/java/software/amazon/smithy/aws/cloudformation/schema/fromsmithy/CfnConverter.java", "diffHunk": "@@ -0,0 +1,346 @@\n+/*\n+ * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.smithy.aws.cloudformation.schema.fromsmithy;\n+\n+import java.util.ArrayList;\n+import java.util.Comparator;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.ServiceLoader;\n+import java.util.Set;\n+import software.amazon.smithy.aws.cloudformation.schema.CfnConfig;\n+import software.amazon.smithy.aws.cloudformation.schema.CfnException;\n+import software.amazon.smithy.aws.cloudformation.schema.model.Property;\n+import software.amazon.smithy.aws.cloudformation.schema.model.ResourceSchema;\n+import software.amazon.smithy.aws.cloudformation.traits.CfnNameTrait;\n+import software.amazon.smithy.aws.cloudformation.traits.CfnResource;\n+import software.amazon.smithy.aws.cloudformation.traits.CfnResourceIndex;\n+import software.amazon.smithy.aws.cloudformation.traits.CfnResourceTrait;\n+import software.amazon.smithy.jsonschema.JsonSchemaConverter;\n+import software.amazon.smithy.jsonschema.JsonSchemaMapper;\n+import software.amazon.smithy.jsonschema.PropertyNamingStrategy;\n+import software.amazon.smithy.jsonschema.Schema;\n+import software.amazon.smithy.jsonschema.SchemaDocument;\n+import software.amazon.smithy.model.Model;\n+import software.amazon.smithy.model.knowledge.TopDownIndex;\n+import software.amazon.smithy.model.node.ObjectNode;\n+import software.amazon.smithy.model.shapes.MemberShape;\n+import software.amazon.smithy.model.shapes.ResourceShape;\n+import software.amazon.smithy.model.shapes.ServiceShape;\n+import software.amazon.smithy.model.shapes.Shape;\n+import software.amazon.smithy.model.shapes.ShapeId;\n+import software.amazon.smithy.model.shapes.StructureShape;\n+import software.amazon.smithy.model.traits.DocumentationTrait;\n+import software.amazon.smithy.model.traits.StringTrait;\n+import software.amazon.smithy.utils.ListUtils;\n+import software.amazon.smithy.utils.StringUtils;\n+\n+public final class CfnConverter {\n+\n+    private ClassLoader classLoader = CfnConverter.class.getClassLoader();\n+    private CfnConfig config = new CfnConfig();\n+    private final List<Smithy2CfnExtension> extensions = new ArrayList<>();\n+\n+    private CfnConverter() {}\n+\n+    public static CfnConverter create() {\n+        return new CfnConverter();\n+    }\n+\n+    /**\n+     * Get the CloudFormation configuration settings.\n+     *\n+     * @return Returns the config object.\n+     */\n+    public CfnConfig getConfig() {\n+        return config;\n+    }\n+\n+    /**\n+     * Set the CloudFormation configuration settings.\n+     *\n+     * @param config Config object to set.\n+     * @return Returns the converter.\n+     */\n+    public CfnConverter config(CfnConfig config) {\n+        this.config = config;\n+        return this;\n+    }\n+\n+    /**\n+     * Sets a {@link ClassLoader} to use to discover {@link Smithy2CfnExtension}\n+     * service providers through SPI.\n+     *\n+     * <p>The {@code CfnConverter} will use its own ClassLoader by default.\n+     *\n+     * @param classLoader ClassLoader to use.\n+     * @return Returns the converter.\n+     */\n+    public CfnConverter classLoader(ClassLoader classLoader) {\n+        this.classLoader = classLoader;\n+        return this;\n+    }\n+\n+    /**\n+     * Converts resource shapes annotated with the @cfnResource trait to JSON/Node\n+     * representations of CloudFormation Resource Schemas using the given Smithy\n+     * model.\n+     *\n+     * <p>The result of this method may differ from the result of calling\n+     * {@link ResourceSchema#toNode()} because this method wil pass the Node\n+     * representation of the ResourceSchema through the {@link CfnMapper#updateNode}\n+     * method of each registered {@link CfnMapper}.\n+     *\n+     * @param model Smithy model to convert.\n+     * @return A map of CloudFormation resource type names to their converted schema nodes.\n+     */\n+    public Map<String, ObjectNode> convertToNodes(Model model) {\n+        List<ConversionEnvironment> environments = createConversionEnvironments(model);\n+        Map<ShapeId, ResourceSchema> resources = convertWithEnvironments(environments);\n+\n+        Map<String, ObjectNode> convertedNodes = new HashMap<>();\n+        for (ConversionEnvironment environment : environments) {\n+            ResourceSchema resourceSchema = resources.get(environment.context.getResource().getId());\n+            ObjectNode node = resourceSchema.toNode().expectObjectNode();\n+\n+            // Apply all the mappers' updateNode methods.\n+            for (CfnMapper mapper : environment.mappers) {\n+                node = mapper.updateNode(environment.context, resourceSchema, node);\n+            }\n+\n+            // CloudFormation resource schemas require the presence of a top-level\n+            // additionalProperties setting with the value of false to be validated.\n+            node = node.withMember(\"additionalProperties\", false);\n+\n+            convertedNodes.put(resourceSchema.getTypeName(), node);\n+        }\n+        return convertedNodes;\n+    }\n+\n+    /**\n+     * Converts the annotated resources in the Smithy model to CloudFormation\n+     * Resource Schemas.\n+     *\n+     * @param model Smithy model containing resources to convert.\n+     * @return Returns the converted resources.\n+     */\n+    public List<ResourceSchema> convert(Model model) {\n+        return ListUtils.copyOf(convertWithEnvironments(createConversionEnvironments(model)).values());\n+    }\n+\n+    private Map<ShapeId, ResourceSchema> convertWithEnvironments(List<ConversionEnvironment> environments) {\n+        Map<ShapeId, ResourceSchema> resourceSchemas = new HashMap<>();\n+        for (ConversionEnvironment environment : environments) {\n+            ResourceShape resourceShape = environment.context.getResource();\n+            ResourceSchema resourceSchema = convertResource(environment, resourceShape);\n+            resourceSchemas.put(resourceShape.getId(), resourceSchema);\n+        }\n+        return resourceSchemas;\n+    }\n+\n+    private List<ConversionEnvironment> createConversionEnvironments(Model model) {\n+        ShapeId serviceShapeId = config.getService();\n+\n+        if (serviceShapeId == null) {\n+            throw new CfnException(\"cloudformation is missing required property, `service`\");\n+        }\n+\n+        // Load the Smithy2Cfn extensions.\n+        ServiceLoader.load(Smithy2CfnExtension.class, classLoader).forEach(extensions::add);\n+\n+        // Find the service shape.\n+        ServiceShape serviceShape = model.getShape(serviceShapeId)\n+                .orElseThrow(() -> new IllegalArgumentException(String.format(\n+                        \"Shape `%s` not found in model\", serviceShapeId)))\n+                .asServiceShape()\n+                .orElseThrow(() -> new IllegalArgumentException(String.format(\n+                        \"Shape `%s` is not a service shape\", serviceShapeId)));\n+\n+        TopDownIndex topDownIndex = TopDownIndex.of(model);\n+        Set<ResourceShape> resourceShapes = topDownIndex.getContainedResources(serviceShape);\n+\n+        // Create an environment for each of the resources to be converted with.\n+        List<ConversionEnvironment> environments = new ArrayList<>();\n+        for (ResourceShape resourceShape : resourceShapes) {\n+            if (resourceShape.getTrait(CfnResourceTrait.class).isPresent()) {\n+                ConversionEnvironment environment = createConversionEnvironment(model, serviceShape, resourceShape);\n+                environments.add(environment);\n+            }\n+        }\n+\n+        return environments;\n+    }\n+\n+    private ConversionEnvironment createConversionEnvironment(\n+            Model model,\n+            ServiceShape serviceShape,\n+            ResourceShape resourceShape\n+    ) {\n+        // Prepare the JSON Schema Converter.\n+        JsonSchemaConverter.Builder jsonSchemaConverterBuilder = JsonSchemaConverter.builder()\n+                .config(config)\n+                .propertyNamingStrategy(getPropertyNamingStrategy());\n+\n+        List<CfnMapper> mappers = new ArrayList<>();\n+        for (Smithy2CfnExtension extension : extensions) {\n+            mappers.addAll(extension.getCfnMappers());\n+            // Add JSON schema mappers from found extensions.\n+            for (JsonSchemaMapper mapper : extension.getJsonSchemaMappers()) {\n+                jsonSchemaConverterBuilder.addMapper(mapper);\n+            }\n+        }\n+        mappers.sort(Comparator.comparingInt(CfnMapper::getOrder));\n+\n+        // Prepare a structure representing the CFN resource to be created.\n+        CfnResourceIndex resourceIndex = CfnResourceIndex.of(model);\n+        CfnResource cfnResource = resourceIndex.getResource(resourceShape)\n+                .orElseThrow(() -> new CfnException(\"Attempted to generate a CloudFormation resource schema \"\n+                        + \"for a resource not found to have had the.\"));\n+\n+        // Add that structure to a temporary model that's used for conversion.", "originalCommit": "db99259bab16f71ed9181bb0a5b391d0af13bca5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzcwMzExNA==", "url": "https://github.com/awslabs/smithy/pull/622#discussion_r517703114", "bodyText": "What's the point of this?", "author": "mtdowling", "createdAt": "2020-11-05T00:03:17Z", "path": "smithy-aws-cloudformation/src/main/java/software/amazon/smithy/aws/cloudformation/schema/fromsmithy/CfnConverter.java", "diffHunk": "@@ -0,0 +1,346 @@\n+/*\n+ * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.smithy.aws.cloudformation.schema.fromsmithy;\n+\n+import java.util.ArrayList;\n+import java.util.Comparator;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.ServiceLoader;\n+import java.util.Set;\n+import software.amazon.smithy.aws.cloudformation.schema.CfnConfig;\n+import software.amazon.smithy.aws.cloudformation.schema.CfnException;\n+import software.amazon.smithy.aws.cloudformation.schema.model.Property;\n+import software.amazon.smithy.aws.cloudformation.schema.model.ResourceSchema;\n+import software.amazon.smithy.aws.cloudformation.traits.CfnNameTrait;\n+import software.amazon.smithy.aws.cloudformation.traits.CfnResource;\n+import software.amazon.smithy.aws.cloudformation.traits.CfnResourceIndex;\n+import software.amazon.smithy.aws.cloudformation.traits.CfnResourceTrait;\n+import software.amazon.smithy.jsonschema.JsonSchemaConverter;\n+import software.amazon.smithy.jsonschema.JsonSchemaMapper;\n+import software.amazon.smithy.jsonschema.PropertyNamingStrategy;\n+import software.amazon.smithy.jsonschema.Schema;\n+import software.amazon.smithy.jsonschema.SchemaDocument;\n+import software.amazon.smithy.model.Model;\n+import software.amazon.smithy.model.knowledge.TopDownIndex;\n+import software.amazon.smithy.model.node.ObjectNode;\n+import software.amazon.smithy.model.shapes.MemberShape;\n+import software.amazon.smithy.model.shapes.ResourceShape;\n+import software.amazon.smithy.model.shapes.ServiceShape;\n+import software.amazon.smithy.model.shapes.Shape;\n+import software.amazon.smithy.model.shapes.ShapeId;\n+import software.amazon.smithy.model.shapes.StructureShape;\n+import software.amazon.smithy.model.traits.DocumentationTrait;\n+import software.amazon.smithy.model.traits.StringTrait;\n+import software.amazon.smithy.utils.ListUtils;\n+import software.amazon.smithy.utils.StringUtils;\n+\n+public final class CfnConverter {\n+\n+    private ClassLoader classLoader = CfnConverter.class.getClassLoader();\n+    private CfnConfig config = new CfnConfig();\n+    private final List<Smithy2CfnExtension> extensions = new ArrayList<>();\n+\n+    private CfnConverter() {}\n+\n+    public static CfnConverter create() {\n+        return new CfnConverter();\n+    }\n+\n+    /**\n+     * Get the CloudFormation configuration settings.\n+     *\n+     * @return Returns the config object.\n+     */\n+    public CfnConfig getConfig() {\n+        return config;\n+    }\n+\n+    /**\n+     * Set the CloudFormation configuration settings.\n+     *\n+     * @param config Config object to set.\n+     * @return Returns the converter.\n+     */\n+    public CfnConverter config(CfnConfig config) {\n+        this.config = config;\n+        return this;\n+    }\n+\n+    /**\n+     * Sets a {@link ClassLoader} to use to discover {@link Smithy2CfnExtension}\n+     * service providers through SPI.\n+     *\n+     * <p>The {@code CfnConverter} will use its own ClassLoader by default.\n+     *\n+     * @param classLoader ClassLoader to use.\n+     * @return Returns the converter.\n+     */\n+    public CfnConverter classLoader(ClassLoader classLoader) {\n+        this.classLoader = classLoader;\n+        return this;\n+    }\n+\n+    /**\n+     * Converts resource shapes annotated with the @cfnResource trait to JSON/Node\n+     * representations of CloudFormation Resource Schemas using the given Smithy\n+     * model.\n+     *\n+     * <p>The result of this method may differ from the result of calling\n+     * {@link ResourceSchema#toNode()} because this method wil pass the Node\n+     * representation of the ResourceSchema through the {@link CfnMapper#updateNode}\n+     * method of each registered {@link CfnMapper}.\n+     *\n+     * @param model Smithy model to convert.\n+     * @return A map of CloudFormation resource type names to their converted schema nodes.\n+     */\n+    public Map<String, ObjectNode> convertToNodes(Model model) {\n+        List<ConversionEnvironment> environments = createConversionEnvironments(model);\n+        Map<ShapeId, ResourceSchema> resources = convertWithEnvironments(environments);\n+\n+        Map<String, ObjectNode> convertedNodes = new HashMap<>();\n+        for (ConversionEnvironment environment : environments) {\n+            ResourceSchema resourceSchema = resources.get(environment.context.getResource().getId());\n+            ObjectNode node = resourceSchema.toNode().expectObjectNode();\n+\n+            // Apply all the mappers' updateNode methods.\n+            for (CfnMapper mapper : environment.mappers) {\n+                node = mapper.updateNode(environment.context, resourceSchema, node);\n+            }\n+\n+            // CloudFormation resource schemas require the presence of a top-level\n+            // additionalProperties setting with the value of false to be validated.\n+            node = node.withMember(\"additionalProperties\", false);\n+\n+            convertedNodes.put(resourceSchema.getTypeName(), node);\n+        }\n+        return convertedNodes;\n+    }\n+\n+    /**\n+     * Converts the annotated resources in the Smithy model to CloudFormation\n+     * Resource Schemas.\n+     *\n+     * @param model Smithy model containing resources to convert.\n+     * @return Returns the converted resources.\n+     */\n+    public List<ResourceSchema> convert(Model model) {\n+        return ListUtils.copyOf(convertWithEnvironments(createConversionEnvironments(model)).values());\n+    }\n+\n+    private Map<ShapeId, ResourceSchema> convertWithEnvironments(List<ConversionEnvironment> environments) {\n+        Map<ShapeId, ResourceSchema> resourceSchemas = new HashMap<>();\n+        for (ConversionEnvironment environment : environments) {\n+            ResourceShape resourceShape = environment.context.getResource();\n+            ResourceSchema resourceSchema = convertResource(environment, resourceShape);\n+            resourceSchemas.put(resourceShape.getId(), resourceSchema);\n+        }\n+        return resourceSchemas;\n+    }\n+\n+    private List<ConversionEnvironment> createConversionEnvironments(Model model) {\n+        ShapeId serviceShapeId = config.getService();\n+\n+        if (serviceShapeId == null) {\n+            throw new CfnException(\"cloudformation is missing required property, `service`\");\n+        }\n+\n+        // Load the Smithy2Cfn extensions.\n+        ServiceLoader.load(Smithy2CfnExtension.class, classLoader).forEach(extensions::add);\n+\n+        // Find the service shape.\n+        ServiceShape serviceShape = model.getShape(serviceShapeId)\n+                .orElseThrow(() -> new IllegalArgumentException(String.format(\n+                        \"Shape `%s` not found in model\", serviceShapeId)))\n+                .asServiceShape()\n+                .orElseThrow(() -> new IllegalArgumentException(String.format(\n+                        \"Shape `%s` is not a service shape\", serviceShapeId)));\n+\n+        TopDownIndex topDownIndex = TopDownIndex.of(model);\n+        Set<ResourceShape> resourceShapes = topDownIndex.getContainedResources(serviceShape);\n+\n+        // Create an environment for each of the resources to be converted with.\n+        List<ConversionEnvironment> environments = new ArrayList<>();\n+        for (ResourceShape resourceShape : resourceShapes) {\n+            if (resourceShape.getTrait(CfnResourceTrait.class).isPresent()) {\n+                ConversionEnvironment environment = createConversionEnvironment(model, serviceShape, resourceShape);\n+                environments.add(environment);\n+            }\n+        }\n+\n+        return environments;\n+    }\n+\n+    private ConversionEnvironment createConversionEnvironment(\n+            Model model,\n+            ServiceShape serviceShape,\n+            ResourceShape resourceShape\n+    ) {\n+        // Prepare the JSON Schema Converter.\n+        JsonSchemaConverter.Builder jsonSchemaConverterBuilder = JsonSchemaConverter.builder()\n+                .config(config)\n+                .propertyNamingStrategy(getPropertyNamingStrategy());\n+\n+        List<CfnMapper> mappers = new ArrayList<>();\n+        for (Smithy2CfnExtension extension : extensions) {\n+            mappers.addAll(extension.getCfnMappers());\n+            // Add JSON schema mappers from found extensions.\n+            for (JsonSchemaMapper mapper : extension.getJsonSchemaMappers()) {\n+                jsonSchemaConverterBuilder.addMapper(mapper);\n+            }\n+        }\n+        mappers.sort(Comparator.comparingInt(CfnMapper::getOrder));\n+\n+        // Prepare a structure representing the CFN resource to be created.\n+        CfnResourceIndex resourceIndex = CfnResourceIndex.of(model);\n+        CfnResource cfnResource = resourceIndex.getResource(resourceShape)\n+                .orElseThrow(() -> new CfnException(\"Attempted to generate a CloudFormation resource schema \"\n+                        + \"for a resource not found to have had the.\"));\n+\n+        // Add that structure to a temporary model that's used for conversion.\n+        StructureShape pseudoResource = getPseudoResource(model, resourceShape, cfnResource);\n+        Model updatedModel = model.toBuilder().addShape(pseudoResource).build();\n+        jsonSchemaConverterBuilder.model(updatedModel);\n+\n+        Context context = new Context(updatedModel, serviceShape, resourceShape, cfnResource,\n+                pseudoResource, config, jsonSchemaConverterBuilder.build());\n+\n+        return new ConversionEnvironment(context, mappers);\n+    }\n+\n+    private PropertyNamingStrategy getPropertyNamingStrategy() {\n+        return (containingShape, member, config) -> {\n+            // The cfnName trait's value takes precedence, even over any settings.\n+            Optional<CfnNameTrait> trait = member.getTrait(CfnNameTrait.class);\n+            if (trait.isPresent()) {\n+                return trait.get().getValue();\n+            }\n+\n+            // Otherwise, respect the property capitalization setting.\n+            String name = PropertyNamingStrategy.createMemberNameStrategy()\n+                    .toPropertyName(containingShape, member, config);\n+\n+            return this.config.getDisableCapitalizedProperties()\n+                    ? name\n+                    : StringUtils.capitalize(name);\n+        };\n+    }\n+\n+    private static final class ConversionEnvironment {\n+        private final Context context;\n+        private final List<CfnMapper> mappers;\n+\n+        private ConversionEnvironment(\n+                Context context,\n+                List<CfnMapper> mappers\n+        ) {\n+            this.context = context;\n+            this.mappers = mappers;\n+        }\n+    }\n+\n+    private ResourceSchema convertResource(ConversionEnvironment environment, ResourceShape resourceShape) {\n+        Context context = environment.context;\n+        JsonSchemaConverter jsonSchemaConverter = context.getJsonSchemaConverter().toBuilder()\n+                .rootShape(context.getResourceStructure())\n+                .build();\n+        SchemaDocument document = jsonSchemaConverter.convert();\n+\n+        // Prepare the initial contents\n+        CfnResourceTrait resourceTrait = resourceShape.expectTrait(CfnResourceTrait.class);\n+        ResourceSchema.Builder builder = ResourceSchema.builder();\n+        String typeName = resolveResourceTypeName(environment, resourceTrait);\n+        builder.typeName(typeName);\n+\n+        // Apply the resource's documentation if present, or default.\n+        builder.description(resourceShape.getTrait(DocumentationTrait.class)\n+                .map(StringTrait::getValue)\n+                .orElse(\"Definition of \" + typeName + \" Resource Type\"));\n+\n+        // Apply all the mappers' before methods.\n+        for (CfnMapper mapper : environment.mappers) {\n+            mapper.before(context, builder);\n+        }\n+\n+        // Add the properties from the converted shape.\n+        document.getRootSchema().getProperties().forEach((name, schema) -> {\n+            Property property = Property.builder()\n+                    .schema(schema)\n+                    .build();\n+            builder.addProperty(name, property);\n+        });\n+\n+        // Supply all the definitions that were created.\n+        for (Map.Entry<String, Schema> definition : document.getDefinitions().entrySet()) {\n+            String definitionName = definition.getKey()\n+                    .replace(CfnConfig.SCHEMA_COMPONENTS_POINTER, \"\")\n+                    .substring(1);\n+            builder.addDefinition(definitionName, definition.getValue());\n+        }\n+\n+        // Apply all the mappers' after methods.\n+        ResourceSchema resourceSchema = builder.build();\n+        for (CfnMapper mapper : environment.mappers) {\n+            resourceSchema = mapper.after(context, resourceSchema);\n+        }\n+\n+        return resourceSchema;\n+    }\n+\n+    private String resolveResourceTypeName(\n+            ConversionEnvironment environment,\n+            CfnResourceTrait resourceTrait\n+    ) {\n+        CfnConfig config = environment.context.getConfig();\n+\n+        String organizationName = config.getOrganizationName();\n+        if (organizationName == null) {\n+            throw new CfnException(\"cloudformation is missing required property, `organizationName`\");\n+        }\n+\n+        String serviceName = Optional.ofNullable(config.getServiceName())\n+                .orElseGet(() -> config.getService().getName());\n+\n+        // Use the trait's name if present, or default to the resource shape's name.\n+        String resourceName = resourceTrait.getName()\n+                .orElse(environment.context.getResource().getId().getName());\n+\n+        return String.format(\"%s::%s::%s\", organizationName, serviceName, resourceName);\n+    }\n+\n+    private StructureShape getPseudoResource(Model model, ResourceShape resource, CfnResource cfnResource) {", "originalCommit": "db99259bab16f71ed9181bb0a5b391d0af13bca5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "dd751575925835c6a41f753008e2148f32b28ad4", "url": "https://github.com/awslabs/smithy/commit/dd751575925835c6a41f753008e2148f32b28ad4", "message": "Add CloudFormation resource schema generation\n\nThis commit introduces a new \"cloudformation\" build plugin that, given\na model decorated with the aws.cloudformation traits, will generate\nCloudFormation Resource Schemas. This includes support for specifying\nthe mutability of properties, their documentation, and more.", "committedDate": "2020-11-06T01:51:04Z", "type": "forcePushed"}, {"oid": "7941baa57ef135991edfca925cf38b2eafec0143", "url": "https://github.com/awslabs/smithy/commit/7941baa57ef135991edfca925cf38b2eafec0143", "message": "Add CloudFormation resource schema generation\n\nThis commit introduces a new \"cloudformation\" build plugin that, given\na model decorated with the aws.cloudformation traits, will generate\nCloudFormation Resource Schemas. This includes support for specifying\nthe mutability of properties, their documentation, and more.", "committedDate": "2020-11-06T01:53:36Z", "type": "forcePushed"}, {"oid": "c78cdbaf4c679942544347d0b96437c1da1723ac", "url": "https://github.com/awslabs/smithy/commit/c78cdbaf4c679942544347d0b96437c1da1723ac", "message": "Add CloudFormation resource schema generation\n\nThis commit introduces a new \"cloudformation\" build plugin that, given\na model decorated with the aws.cloudformation traits, will generate\nCloudFormation Resource Schemas. This includes support for specifying\nthe mutability of properties, their documentation, and more.", "committedDate": "2020-11-06T22:59:16Z", "type": "forcePushed"}, {"oid": "f42c5169d96fab60b07584c02d3ba70a91c792da", "url": "https://github.com/awslabs/smithy/commit/f42c5169d96fab60b07584c02d3ba70a91c792da", "message": "Add CloudFormation resource schema generation\n\nThis commit introduces a new \"cloudformation\" build plugin that, given\na model decorated with the aws.cloudformation traits, will generate\nCloudFormation Resource Schemas. This includes support for specifying\nthe mutability of properties, their documentation, and more.", "committedDate": "2020-11-14T00:11:28Z", "type": "commit"}, {"oid": "f42c5169d96fab60b07584c02d3ba70a91c792da", "url": "https://github.com/awslabs/smithy/commit/f42c5169d96fab60b07584c02d3ba70a91c792da", "message": "Add CloudFormation resource schema generation\n\nThis commit introduces a new \"cloudformation\" build plugin that, given\na model decorated with the aws.cloudformation traits, will generate\nCloudFormation Resource Schemas. This includes support for specifying\nthe mutability of properties, their documentation, and more.", "committedDate": "2020-11-14T00:11:28Z", "type": "forcePushed"}]}