{"pr_number": 381, "pr_title": "Remove allowing true for annotation traits", "pr_createdAt": "2020-04-16T23:13:10Z", "pr_url": "https://github.com/awslabs/smithy/pull/381", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDM0Mjc3MQ==", "url": "https://github.com/awslabs/smithy/pull/381#discussion_r410342771", "bodyText": "Looks like there's now dead code in this class's createTrait method that should be cleaned up.", "author": "kstich", "createdAt": "2020-04-17T16:43:07Z", "path": "smithy-model/src/main/java/software/amazon/smithy/model/traits/AnnotationTrait.java", "diffHunk": "@@ -15,31 +15,32 @@\n \n package software.amazon.smithy.model.traits;\n \n+import java.util.Collections;\n import java.util.function.Function;\n import software.amazon.smithy.model.SourceException;\n import software.amazon.smithy.model.SourceLocation;\n import software.amazon.smithy.model.node.BooleanNode;\n import software.amazon.smithy.model.node.Node;\n+import software.amazon.smithy.model.node.ObjectNode;\n import software.amazon.smithy.model.shapes.ShapeId;\n \n /**\n- * Trait implementation that expects an empty object or a boolean\n- * value of true.\n+ * Trait implementation for traits that are an empty object.\n  */\n-public abstract class BooleanTrait extends AbstractTrait {\n-    public BooleanTrait(ShapeId id, SourceLocation sourceLocation) {\n+public abstract class AnnotationTrait extends AbstractTrait {\n+    public AnnotationTrait(ShapeId id, SourceLocation sourceLocation) {\n         super(id, sourceLocation);\n     }\n \n     @Override\n     protected final Node createNode() {\n-        return new BooleanNode(true, getSourceLocation());\n+        return new ObjectNode(Collections.emptyMap(), getSourceLocation());\n     }\n \n     /**\n      * Trait provider that expects a boolean value of true.\n      */\n-    public static class Provider<T extends BooleanTrait> extends AbstractTrait.Provider {\n+    public static class Provider<T extends AnnotationTrait> extends AbstractTrait.Provider {", "originalCommit": "923f1e5648cc7bcea898cac989bfc2f3c67235ed", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e15f5ee0157dc10ff632c60e4deaf9b3905c6979", "url": "https://github.com/awslabs/smithy/commit/e15f5ee0157dc10ff632c60e4deaf9b3905c6979", "message": "Remove allowing true for annotation traits\n\nThis commit removes the support for setting annotation traits to true\nbecause the previous rationale for supporting that no longer holds true.\nThe previous rationale was that supporting `true` makes writing the AST\nJSON files easier. However, we've already crossed the point where we\ndon't want humans writing the JSON AST, and we want it to be as easy to\nparse as possible.\n\nThe AST format now requires that `{}` is provided for annotation traits.\nThe IDL no longer supports setting a trait to `true` or `null`, as that\nwas only supported in order to provide isomorphism with the AST support.\nWe previously didn't persist which model format a pending trait\ndefinition came from, so it was necessary to give them the same feature\nset. However, now the Smithy loader maintains a boolean value that tells\nthe loader whether or not a value is an \"annotation\", meaning trait with\nno value. This isn't a feature used in the AST loader, but is used in\nthe IDL loader.\n\nFurther, the BooleanTrait abstract class was renamed to AnnotationTrait.\nThis is something I wanted to do for a long time, but never did since it\nwould cause so much churn, and the name wasn't that far off from what it\nrepresents. However, now that `true` isn't supported for annotation\ntraits, the name BooleanTrait makes no sense. This commit renames it and\ntakes the BC hit because it's now worth it.", "committedDate": "2020-04-17T17:16:57Z", "type": "forcePushed"}, {"oid": "fc5e2eb849defada20720ef63d2316bbe4646388", "url": "https://github.com/awslabs/smithy/commit/fc5e2eb849defada20720ef63d2316bbe4646388", "message": "Remove allowing true for annotation traits\n\nThis commit removes the support for setting annotation traits to true\nbecause the previous rationale for supporting that no longer holds true.\nThe previous rationale was that supporting `true` makes writing the AST\nJSON files easier. However, we've already crossed the point where we\ndon't want humans writing the JSON AST, and we want it to be as easy to\nparse as possible.\n\nThe AST format now requires that `{}` is provided for annotation traits.\nThe IDL no longer supports setting a trait to `true` or `null`, as that\nwas only supported in order to provide isomorphism with the AST support.\nWe previously didn't persist which model format a pending trait\ndefinition came from, so it was necessary to give them the same feature\nset. However, now the Smithy loader maintains a boolean value that tells\nthe loader whether or not a value is an \"annotation\", meaning trait with\nno value. This isn't a feature used in the AST loader, but is used in\nthe IDL loader.\n\nFurther, the BooleanTrait abstract class was renamed to AnnotationTrait.\nThis is something I wanted to do for a long time, but never did since it\nwould cause so much churn, and the name wasn't that far off from what it\nrepresents. However, now that `true` isn't supported for annotation\ntraits, the name BooleanTrait makes no sense. This commit renames it and\ntakes the BC hit because it's now worth it.", "committedDate": "2020-04-17T17:30:03Z", "type": "commit"}, {"oid": "fc5e2eb849defada20720ef63d2316bbe4646388", "url": "https://github.com/awslabs/smithy/commit/fc5e2eb849defada20720ef63d2316bbe4646388", "message": "Remove allowing true for annotation traits\n\nThis commit removes the support for setting annotation traits to true\nbecause the previous rationale for supporting that no longer holds true.\nThe previous rationale was that supporting `true` makes writing the AST\nJSON files easier. However, we've already crossed the point where we\ndon't want humans writing the JSON AST, and we want it to be as easy to\nparse as possible.\n\nThe AST format now requires that `{}` is provided for annotation traits.\nThe IDL no longer supports setting a trait to `true` or `null`, as that\nwas only supported in order to provide isomorphism with the AST support.\nWe previously didn't persist which model format a pending trait\ndefinition came from, so it was necessary to give them the same feature\nset. However, now the Smithy loader maintains a boolean value that tells\nthe loader whether or not a value is an \"annotation\", meaning trait with\nno value. This isn't a feature used in the AST loader, but is used in\nthe IDL loader.\n\nFurther, the BooleanTrait abstract class was renamed to AnnotationTrait.\nThis is something I wanted to do for a long time, but never did since it\nwould cause so much churn, and the name wasn't that far off from what it\nrepresents. However, now that `true` isn't supported for annotation\ntraits, the name BooleanTrait makes no sense. This commit renames it and\ntakes the BC hit because it's now worth it.", "committedDate": "2020-04-17T17:30:03Z", "type": "forcePushed"}]}