{"pr_number": 365, "pr_title": "Collapse eventstream with the streaming trait", "pr_createdAt": "2020-04-09T22:36:09Z", "pr_url": "https://github.com/awslabs/smithy/pull/365", "timeline": [{"oid": "6aa82db774632cff1509aa372b382cefcd2af956", "url": "https://github.com/awslabs/smithy/commit/6aa82db774632cff1509aa372b382cefcd2af956", "message": "Collapse eventstream with the streaming trait\n\nThe eventstream and streaming trait fundamentally work in similar\nways, and have identical validation rules. This merges the two traits\nto simplify the model and reduce duplication.", "committedDate": "2020-04-09T22:32:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUyMTg2NA==", "url": "https://github.com/awslabs/smithy/pull/365#discussion_r406521864", "bodyText": "Should this work for any streaming input/output -- i.e., rename this StreamIndex or StreamingIndex?", "author": "mtdowling", "createdAt": "2020-04-09T22:58:33Z", "path": "smithy-model/src/main/java/software/amazon/smithy/model/knowledge/EventStreamIndex.java", "diffHunk": "@@ -26,7 +26,7 @@\n import software.amazon.smithy.model.shapes.ShapeId;\n import software.amazon.smithy.model.shapes.StructureShape;\n import software.amazon.smithy.model.shapes.ToShapeId;\n-import software.amazon.smithy.model.traits.EventStreamTrait;\n+import software.amazon.smithy.model.traits.StreamingTrait;\n \n /**", "originalCommit": "6aa82db774632cff1509aa372b382cefcd2af956", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUzMDc2Nw==", "url": "https://github.com/awslabs/smithy/pull/365#discussion_r406530767", "bodyText": "I think you would need to do a lot more massaging than just a rename. The EventStreamInfo has a bunch of stuff about things like initial input / initial output that don't make sense for blob streams, for instance.", "author": "JordonPhillips", "createdAt": "2020-04-09T23:28:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUyMTg2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU3OTU4OA==", "url": "https://github.com/awslabs/smithy/pull/365#discussion_r406579588", "bodyText": "True", "author": "mtdowling", "createdAt": "2020-04-10T02:54:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUyMTg2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUyMjM3Mg==", "url": "https://github.com/awslabs/smithy/pull/365#discussion_r406522372", "bodyText": "Should we add an isEventStream method somewhere to centralize this behavior? Like on the EventStreamTrait as a static method?", "author": "mtdowling", "createdAt": "2020-04-09T23:00:10Z", "path": "smithy-model/src/main/java/software/amazon/smithy/model/knowledge/HttpBindingIndex.java", "diffHunk": "@@ -368,15 +368,13 @@ private String determineContentType(\n             }\n \n             if (binding.getLocation() == HttpBinding.Location.PAYLOAD) {\n-                if (binding.getMember().hasTrait(EventStreamTrait.class)) {\n-                    return eventStreamContentType;\n-                }\n-\n                 Shape target = model.getShape(binding.getMember().getTarget()).orElse(null);\n                 if (target == null) {\n                     // Can't determine the content-type because the model is broken :(\n                     // Let other parts of the validation system point this out.\n                     break;\n+                } else if (target.isUnionShape() && target.hasTrait(StreamingTrait.class)) {", "originalCommit": "6aa82db774632cff1509aa372b382cefcd2af956", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUzMDA2NA==", "url": "https://github.com/awslabs/smithy/pull/365#discussion_r406530064", "bodyText": "sure", "author": "JordonPhillips", "createdAt": "2020-04-09T23:26:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUyMjM3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUyNDAxNQ==", "url": "https://github.com/awslabs/smithy/pull/365#discussion_r406524015", "bodyText": "Could consolidate here if there's a helper method", "author": "mtdowling", "createdAt": "2020-04-09T23:06:06Z", "path": "smithy-mqtt-traits/src/main/java/software/amazon/smithy/mqtt/traits/validators/MqttPublishInputValidator.java", "diffHunk": "@@ -42,7 +42,10 @@\n     private Stream<ValidationEvent> validateOperation(Model model, OperationShape operation) {\n         return OptionalUtils.stream(operation.getInput().flatMap(model::getShape).flatMap(Shape::asStructureShape))\n                 .flatMap(input -> input.getAllMembers().values().stream()\n-                        .filter(member -> member.hasTrait(EventStreamTrait.class))\n+                        .filter(member -> {\n+                            Shape target = model.expectShape(member.getTarget());\n+                            return target.isUnionShape() && target.hasTrait(StreamingTrait.class);", "originalCommit": "6aa82db774632cff1509aa372b382cefcd2af956", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b33721b498953b7099e8523259498738ceba3554", "url": "https://github.com/awslabs/smithy/commit/b33721b498953b7099e8523259498738ceba3554", "message": "Combine streaming trait documentation", "committedDate": "2020-04-10T00:00:01Z", "type": "commit"}, {"oid": "5e380cde4b13ef7f719693abfe55355faefde409", "url": "https://github.com/awslabs/smithy/commit/5e380cde4b13ef7f719693abfe55355faefde409", "message": "Add helper method for event streams", "committedDate": "2020-04-10T00:22:50Z", "type": "commit"}, {"oid": "2605ffce57ddd93cba70e5c41e765f9b4ad26a0e", "url": "https://github.com/awslabs/smithy/commit/2605ffce57ddd93cba70e5c41e765f9b4ad26a0e", "message": "Touch up streaming documentation", "committedDate": "2020-04-10T19:05:54Z", "type": "commit"}]}