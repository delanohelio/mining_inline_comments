{"pr_number": 1582, "pr_title": "Refactor FileManager to use queues ", "pr_createdAt": "2020-12-09T20:05:22Z", "pr_url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1582", "timeline": [{"oid": "2fe1c118193b2afdb50ff81a0d18b712eeed70f8", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/2fe1c118193b2afdb50ff81a0d18b712eeed70f8", "message": "Refactor FileManager to use queues", "committedDate": "2020-12-09T20:03:00Z", "type": "commit"}, {"oid": "207b4546328bbb360151816b305c5d654e3ea076", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/207b4546328bbb360151816b305c5d654e3ea076", "message": "Merge branch 'develop' into feature/file_manager_refactor", "committedDate": "2020-12-09T20:03:49Z", "type": "commit"}, {"oid": "5173ec77206da3ca1a3929bf14ff6196bdd0dc3e", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/5173ec77206da3ca1a3929bf14ff6196bdd0dc3e", "message": "Update logs and comments in FileManager", "committedDate": "2020-12-09T22:12:05Z", "type": "commit"}, {"oid": "acfaaa784cd358bc68f33ec8c0809253fb817a66", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/acfaaa784cd358bc68f33ec8c0809253fb817a66", "message": "Update comments", "committedDate": "2020-12-09T22:18:17Z", "type": "commit"}, {"oid": "82a203f6a0677eb6778c17057efade4c8e496d02", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/82a203f6a0677eb6778c17057efade4c8e496d02", "message": "remove unnecessary public modifiers", "committedDate": "2020-12-10T15:53:33Z", "type": "commit"}, {"oid": "bc64920d5171e7264b9d381fab1e59e1ef571228", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/bc64920d5171e7264b9d381fab1e59e1ef571228", "message": "Simplify logic in DeleteFileOperation", "committedDate": "2020-12-10T16:02:05Z", "type": "commit"}, {"oid": "89048b5bff2e871d7b19322428883eaf5ca0f7b3", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/89048b5bff2e871d7b19322428883eaf5ca0f7b3", "message": "Simplify logic in ListFilesOperation", "committedDate": "2020-12-10T16:02:26Z", "type": "commit"}, {"oid": "82047ad8ed98b5a00f59c1e6b88dbfc9e3bac6ea", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/82047ad8ed98b5a00f59c1e6b88dbfc9e3bac6ea", "message": "Cleanup code in UploadFileOperation", "committedDate": "2020-12-10T18:55:09Z", "type": "commit"}, {"oid": "238d4469e72103b82c19ddac5042d7cc343074a7", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/238d4469e72103b82c19ddac5042d7cc343074a7", "message": "Cleanup code in BaseFileManager", "committedDate": "2020-12-10T19:37:39Z", "type": "commit"}, {"oid": "a8b5ef26de395f929420a4303fb6e167f2c62c8c", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/a8b5ef26de395f929420a4303fb6e167f2c62c8c", "message": "Add mssing getMtu method to Isdl", "committedDate": "2020-12-10T19:48:13Z", "type": "commit"}, {"oid": "1e8a7d2b952961ab4f44bd28119453c7f6679325", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/1e8a7d2b952961ab4f44bd28119453c7f6679325", "message": "Merge branch 'develop' into feature/file_manager_refactor\n\n# Conflicts:\n#\tbase/src/main/java/com/smartdevicelink/managers/file/BaseFileManager.java", "committedDate": "2020-12-14T14:35:32Z", "type": "commit"}, {"oid": "1520d6b8e1bca45c0be15afa7d4326e206fa1474", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/1520d6b8e1bca45c0be15afa7d4326e206fa1474", "message": "Fix testFileUploadSuccess() test", "committedDate": "2020-12-14T16:03:08Z", "type": "commit"}, {"oid": "971e8ff0f5f12a1563a41226adfcad919aadc8db", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/971e8ff0f5f12a1563a41226adfcad919aadc8db", "message": "Reuse createISdlMock() in all fileManager tests", "committedDate": "2020-12-14T16:05:59Z", "type": "commit"}, {"oid": "98d4b3a8cd2e957ac2d36e789d5845da4b69914f", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/98d4b3a8cd2e957ac2d36e789d5845da4b69914f", "message": "Fix issues in openInputStreamWithFile()", "committedDate": "2020-12-14T18:38:38Z", "type": "commit"}, {"oid": "a4fb92d3a51b7517ee2ca40657474e6fb2513975", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/a4fb92d3a51b7517ee2ca40657474e6fb2513975", "message": "Partially fix FileManager unit tests", "committedDate": "2020-12-14T18:40:45Z", "type": "commit"}, {"oid": "faa8f1e2dd9f19c2e6a4d521cef6652a536575e1", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/faa8f1e2dd9f19c2e6a4d521cef6652a536575e1", "message": "Fix more fileManager unit tests", "committedDate": "2020-12-14T18:58:41Z", "type": "commit"}, {"oid": "535fcf8f8ce6e30ee11d33005a9f67209f380e80", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/535fcf8f8ce6e30ee11d33005a9f67209f380e80", "message": "Fx more FileManager unit tests", "committedDate": "2020-12-14T19:36:12Z", "type": "commit"}, {"oid": "a5d1969d4f06b14d93ee75804e52a2d5581e6aed", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/a5d1969d4f06b14d93ee75804e52a2d5581e6aed", "message": "Fx more FileManager unit tests", "committedDate": "2020-12-14T20:10:28Z", "type": "commit"}, {"oid": "f10eeda7232e9c9e54090d860eeda7285d48045c", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/f10eeda7232e9c9e54090d860eeda7285d48045c", "message": "Fx more FileManager unit tests", "committedDate": "2020-12-14T20:33:55Z", "type": "commit"}, {"oid": "63b3d683eea54e5a0849e66cc75a41287a69e063", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/63b3d683eea54e5a0849e66cc75a41287a69e063", "message": "Fx more FileManager unit tests", "committedDate": "2020-12-14T20:44:10Z", "type": "commit"}, {"oid": "b1d52d9e6dc1aae68735c9a04ed2999beb8c077f", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/b1d52d9e6dc1aae68735c9a04ed2999beb8c077f", "message": "Reformat code", "committedDate": "2020-12-14T20:48:54Z", "type": "commit"}, {"oid": "2c538f70e13f9a44fa2294eebdb1917175d550b9", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/2c538f70e13f9a44fa2294eebdb1917175d550b9", "message": "Update comments", "committedDate": "2020-12-16T16:06:12Z", "type": "commit"}, {"oid": "5a91536e89c27310ecc0087aae327c7828823115", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/5a91536e89c27310ecc0087aae327c7828823115", "message": "Merge branch 'develop' into feature/file_manager_refactor", "committedDate": "2020-12-16T21:43:51Z", "type": "commit"}, {"oid": "11a80c269f9f33cdca03faa9764477477d07fa3f", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/11a80c269f9f33cdca03faa9764477477d07fa3f", "message": "Fix the logic that breaks large files into multiple PutFiles", "committedDate": "2020-12-17T18:36:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjE4NTA3Mw==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1582#discussion_r552185073", "bodyText": "Should we print this out using the debug tool? if we are just uploading one file, nothing gets printed to the logs and it just returns false.", "author": "JulianKast", "createdAt": "2021-01-05T20:47:40Z", "path": "base/src/main/java/com/smartdevicelink/managers/file/BaseFileManager.java", "diffHunk": "@@ -320,94 +356,90 @@ public void onResponse(int correlationId, RPCResponse response) {\n      * @param listener called when core responds to the attempt to upload the file\n      */\n     public void uploadFile(@NonNull final SdlFile file, final CompletionListener listener) {\n-        if (file.isStaticIcon()) {\n-            DebugTool.logWarning(TAG, String.format(\"%s is a static icon and doesn't need to be uploaded\", file.getName()));\n-            listener.onComplete(true);\n-            return;\n-        }\n-        if (!file.getOverwrite() && hasUploadedFile(file)) {\n-            DebugTool.logWarning(TAG, String.format(\"%s has already been uploaded and the overwrite property is set to false. It will not be uploaded again\", file.getName()));\n-            listener.onComplete(true);\n-            return;\n-        }\n-        PutFile putFile = createPutFile(file);\n-        putFile.setOnRPCResponseListener(new OnRPCResponseListener() {\n+        uploadFilePrivate(file, new FileManagerCompletionListener() {\n             @Override\n-            public void onResponse(int correlationId, RPCResponse response) {\n-                PutFileResponse putFileResponse = (PutFileResponse) response;\n-                if (putFileResponse.getSuccess()) {\n-                    bytesAvailable = putFileResponse.getSpaceAvailable() != null ? putFileResponse.getSpaceAvailable() : SPACE_AVAILABLE_MAX_VALUE;\n-                    remoteFiles.add(file.getName());\n-                    uploadedEphemeralFileNames.add(file.getName());\n-                    if (listener != null) {\n-                        listener.onComplete(true);\n-                    }\n-                } else {\n-                    if (shouldReUploadFile(file.getName(), file.getType())) {\n-                        uploadFile(file, listener);\n-                    } else if (listener != null) {\n-                        listener.onComplete(false);\n-                    }\n+            public void onComplete(boolean success, int bytesAvailable, Collection<String> fileNames, String errorMessage) {\n+                if (listener != null) {\n+                    listener.onComplete(success);\n                 }\n             }\n         });\n-        internalInterface.sendRPC(putFile);\n     }\n \n-    /**\n-     * Check to see if file can be re-uploaded\n-     *\n-     * @param fileName a String that represents an SdlFile's name\n-     * @param fileType an instances of FileType that represents a type of File\n-     * @return true or false depending on if file with given type and name can be re-uploaded\n-     */\n-    private boolean shouldReUploadFile(String fileName, FileType fileType) {\n-        if (!failedFileUploadsIndex.containsKey(fileName)) {\n-            if (FileType.GRAPHIC_JPEG.equals(fileType) ||\n-                    FileType.GRAPHIC_BMP.equals(fileType) ||\n-                    FileType.GRAPHIC_PNG.equals(fileType)) {\n-                failedFileUploadsIndex.put(fileName, fileManagerConfig.getArtworkRetryCount());\n-            } else {\n-                failedFileUploadsIndex.put(fileName, fileManagerConfig.getFileRetryCount());\n+    private void uploadFilePrivate(@NonNull final SdlFile file, final FileManagerCompletionListener listener) {\n+        if (file == null) {\n+            if (listener != null) {\n+                listener.onComplete(false, bytesAvailable, null, \"The file upload was canceled. The data for the file is missing.\");\n             }\n+            return;\n         }\n-        Integer fileRetryValue = failedFileUploadsIndex.get(fileName);\n-        if (fileRetryValue != null && fileRetryValue > 0) {\n-            failedFileUploadsIndex.put(fileName, fileRetryValue - 1);\n-            return true;\n-        }\n-        return false;\n-    }\n \n-    /**\n-     * Attempts to upload a list of SdlFiles to core\n-     *\n-     * @param files    list of SdlFiles with file name and one of A) fileData, B) Uri, or C) resourceID set\n-     * @param listener callback that is called once core responds to all upload requests\n-     */\n-    public void uploadFiles(@NonNull List<? extends SdlFile> files, final MultipleFileCompletionListener listener) {\n-        if (files.isEmpty()) {\n+        if (file.isStaticIcon()) {\n+            if (listener != null) {\n+                listener.onComplete(false, bytesAvailable, null, \"The file upload was canceled. The file is a static icon, which cannot be uploaded.\");", "originalCommit": "11a80c269f9f33cdca03faa9764477477d07fa3f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzM5Mjk5Nw==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1582#discussion_r553392997", "bodyText": "Good idea. I will print a warning message in uploadFile() if there is an errorMessage", "author": "bilal-alsharifi", "createdAt": "2021-01-07T15:19:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjE4NTA3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjg4NTkyMA==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1582#discussion_r552885920", "bodyText": "If we hit here do we want to be trying to upload the file still? Currently, it will try to still upload and will try multiple times if the file type allows for multiple retry attempts.", "author": "JulianKast", "createdAt": "2021-01-06T18:22:54Z", "path": "android/sdl_android/src/main/java/com/smartdevicelink/managers/file/FileManager.java", "diffHunk": "@@ -81,100 +70,33 @@ public FileManager(ISdl internalInterface, Context context, FileManagerConfig fi\n         this.context = new WeakReference<>(context);\n     }\n \n-    /**\n-     * Creates and returns a PutFile request that would upload a given SdlFile\n-     *\n-     * @param file SdlFile with fileName and one of A) fileData, B) Uri, or C) resourceID set\n-     * @return a valid PutFile request if SdlFile contained a fileName and sufficient data\n-     */\n     @Override\n-    PutFile createPutFile(@NonNull final SdlFile file) {\n-        PutFile putFile = new PutFile();\n-        if (file.getName() == null) {\n-            throw new IllegalArgumentException(\"You must specify an file name in the SdlFile\");\n-        } else {\n-            putFile.setSdlFileName(file.getName());\n+    InputStream openInputStreamWithFile(@NonNull SdlFile file) {\n+        InputStream inputStream = null;\n+\n+        if (context.get() == null) {\n+            DebugTool.logError(TAG, \"Context is null. Cannot open file input stream!\");\n+            return null;\n         }\n \n         if (file.getResourceId() > 0) {\n-            // Use resource id to upload file\n-            byte[] contents = contentsOfResource(file.getResourceId());\n-            if (contents != null) {\n-                putFile.setFileData(contents);\n-            } else {\n-                throw new IllegalArgumentException(\"Resource file id was empty\");\n+            try {\n+                inputStream = context.get().getResources().openRawResource(file.getResourceId());\n+            } catch (Resources.NotFoundException e) {\n+                DebugTool.logError(TAG, \"File cannot be found.\");\n             }\n         } else if (file.getUri() != null) {\n-            // Use URI to upload file\n-            byte[] contents = contentsOfUri(file.getUri());\n-            if (contents != null) {\n-                putFile.setFileData(contents);\n-            } else {\n-                throw new IllegalArgumentException(\"Uri was empty\");\n+            try {\n+                inputStream = context.get().getContentResolver().openInputStream(file.getUri());\n+            } catch (FileNotFoundException e) {\n+                DebugTool.logError(TAG, String.format(\"File at %s cannot be found.\", file.getUri()));\n             }\n         } else if (file.getFileData() != null) {\n-            // Use file data (raw bytes) to upload file\n-            putFile.setFileData(file.getFileData());\n+            inputStream = new ByteArrayInputStream(file.getFileData());\n         } else {\n-            throw new IllegalArgumentException(\"The SdlFile to upload does \" +\n-                    \"not specify its resourceId, Uri, or file data\");\n-        }\n-\n-        if (file.getType() != null) {\n-            putFile.setFileType(file.getType());\n-        }\n-        putFile.setPersistentFile(file.isPersistent());\n-\n-        return putFile;\n-    }\n-\n-    /**\n-     * Helper method to take resource files and turn them into byte arrays\n-     *\n-     * @param resource Resource file id\n-     * @return Resulting byte array\n-     */\n-    private byte[] contentsOfResource(int resource) {\n-        InputStream is = null;\n-        try {\n-            is = context.get().getResources().openRawResource(resource);\n-            return contentsOfInputStream(is);\n-        } catch (Resources.NotFoundException e) {\n-            DebugTool.logError(TAG, \"Can't read from resource\", e);\n-            return null;\n-        } finally {\n-            if (is != null) {\n-                try {\n-                    is.close();\n-                } catch (IOException e) {\n-                    e.printStackTrace();\n-                }\n-            }\n+            DebugTool.logError(TAG, \"The SdlFile to upload does not specify its resourceId, Uri, or file data\");", "originalCommit": "11a80c269f9f33cdca03faa9764477477d07fa3f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzQ0MTQ4NA==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1582#discussion_r553441484", "bodyText": "If the stream is null, it will return immediately in the method that called openInputStreamWithFile() :\n\n  \n    \n      sdl_java_suite/base/src/main/java/com/smartdevicelink/managers/file/UploadFileOperation.java\n    \n    \n         Line 127\n      in\n      2076d11\n    \n    \n    \n    \n\n        \n          \n           if (inputStream == null || fileSize == 0) { \n        \n    \n  \n\n\nHowever, you are right, it can try again if the retry count is > 0 which is not ideal. But in my opinion, that is okay because it will realize quickly again in the second attempt that it cannot upload and return without executing a lot of unnecessary logic.\nWe can definitely improve that but it will complicate the logic and I don't think that it is a very common corner case. If you still be live that this should be improved, we can discuss that with the iOS team because both projects should align on how that case is handled.", "author": "bilal-alsharifi", "createdAt": "2021-01-07T16:35:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjg4NTkyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjg5MjMxNw==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1582#discussion_r552892317", "bodyText": "Should we add a check like this in BaseFileManager, but instead of the throw, have it print an error to the log and return before UploadFileOperation is created.", "author": "JulianKast", "createdAt": "2021-01-06T18:35:01Z", "path": "android/sdl_android/src/main/java/com/smartdevicelink/managers/file/FileManager.java", "diffHunk": "@@ -81,100 +70,33 @@ public FileManager(ISdl internalInterface, Context context, FileManagerConfig fi\n         this.context = new WeakReference<>(context);\n     }\n \n-    /**\n-     * Creates and returns a PutFile request that would upload a given SdlFile\n-     *\n-     * @param file SdlFile with fileName and one of A) fileData, B) Uri, or C) resourceID set\n-     * @return a valid PutFile request if SdlFile contained a fileName and sufficient data\n-     */\n     @Override\n-    PutFile createPutFile(@NonNull final SdlFile file) {\n-        PutFile putFile = new PutFile();\n-        if (file.getName() == null) {\n-            throw new IllegalArgumentException(\"You must specify an file name in the SdlFile\");", "originalCommit": "11a80c269f9f33cdca03faa9764477477d07fa3f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzQyMjQxMg==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1582#discussion_r553422412", "bodyText": "Filename should technically never be null because a name will be auto-generated in SdlFile if the dev set the name to null:\n\n  \n    \n      sdl_java_suite/android/sdl_android/src/main/java/com/smartdevicelink/managers/file/filetypes/SdlFile.java\n    \n    \n         Line 134\n      in\n      6c4a24d\n    \n    \n    \n    \n\n        \n          \n           this.shouldAutoGenerateName = true; \n        \n    \n  \n\n\nbut I agree that it doesn't hurt to check that just in case.", "author": "bilal-alsharifi", "createdAt": "2021-01-07T16:03:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjg5MjMxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjk1MzQ3Mg==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1582#discussion_r552953472", "bodyText": "At the top of this file, we should update the copyright year", "author": "JulianKast", "createdAt": "2021-01-06T20:47:01Z", "path": "android/sdl_android/src/main/java/com/smartdevicelink/managers/file/FileManager.java", "diffHunk": "@@ -34,34 +34,23 @@\n \n import android.content.Context;\n import android.content.res.Resources;\n-import android.net.Uri;", "originalCommit": "11a80c269f9f33cdca03faa9764477477d07fa3f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzM5NzA0OQ==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1582#discussion_r553397049", "bodyText": "I don' think we should because the file was added in 2019 and it just got modified in 2020", "author": "bilal-alsharifi", "createdAt": "2021-01-07T15:25:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjk1MzQ3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzM1MTU0Mw==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1582#discussion_r553351543", "bodyText": "There are some unused imports in here.", "author": "JulianKast", "createdAt": "2021-01-07T14:13:16Z", "path": "javaSE/javaSE/src/main/java/com/smartdevicelink/managers/file/FileManager.java", "diffHunk": "@@ -41,24 +41,14 @@\n import com.smartdevicelink.util.DebugTool;\n import com.smartdevicelink.util.FileUtls;", "originalCommit": "11a80c269f9f33cdca03faa9764477477d07fa3f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzM1MzM3NA==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1582#discussion_r553353374", "bodyText": "Do you mean to have all this extra space between file and its description in the JavaDoscs? I think the autoFormatter does this and I noticed this throughout this PR.", "author": "JulianKast", "createdAt": "2021-01-07T14:16:19Z", "path": "base/src/main/java/com/smartdevicelink/managers/file/BaseFileManager.java", "diffHunk": "@@ -431,40 +463,60 @@ public void uploadArtworks(List<SdlArtwork> files, final MultipleFileCompletionL\n     }\n \n     /**\n-     * Check if an SdlFile has been uploaded to core\n+     * Checks if an artwork needs to be uploaded to Core. The artwork should not be sent to Core if\n+     * the artwork is already on Core or if the artwork is not on Core after the maximum number of\n+     * repeated upload attempts has been reached.\n      *\n-     * @param file SdlFile\n-     * @return boolean that tells whether file has been uploaded to core (true) or not (false)\n+     * @param file                   The file to be uploaded to Core", "originalCommit": "11a80c269f9f33cdca03faa9764477477d07fa3f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzQwMjQzNQ==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1582#discussion_r553402435", "bodyText": "Yes, the auto formatter in AS does that. That should be consistent in all classes in the project. When we did the refactoring in 5.0, we did let the formatter format all existing code in the library. So all classes should have the extra spaces to align.", "author": "bilal-alsharifi", "createdAt": "2021-01-07T15:33:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzM1MzM3NA=="}], "type": "inlineReview"}, {"oid": "f64e43dc02722b48d0ae211eaa3eac0a49d0f4d8", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/f64e43dc02722b48d0ae211eaa3eac0a49d0f4d8", "message": "Add log message when file upload failes", "committedDate": "2021-01-07T15:23:12Z", "type": "commit"}, {"oid": "5e9d421efa41635fb9f26276a69d5cf6f1e9f0b1", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/5e9d421efa41635fb9f26276a69d5cf6f1e9f0b1", "message": "Remove unused imports", "committedDate": "2021-01-07T15:45:55Z", "type": "commit"}, {"oid": "6c4a24d3b3e82a5b6c8299aa8b3b10f224cb64f2", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/6c4a24d3b3e82a5b6c8299aa8b3b10f224cb64f2", "message": "Merge branch 'develop' into feature/file_manager_refactor", "committedDate": "2021-01-07T15:53:58Z", "type": "commit"}, {"oid": "2076d116208214d92424e2f652337ecab0104e16", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/2076d116208214d92424e2f652337ecab0104e16", "message": "Add check to make sure file name is not null", "committedDate": "2021-01-07T16:04:44Z", "type": "commit"}]}