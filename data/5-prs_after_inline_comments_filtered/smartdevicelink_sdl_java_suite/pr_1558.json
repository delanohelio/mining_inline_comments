{"pr_number": 1558, "pr_title": "Add code to handle legacy PTU (5.0)", "pr_createdAt": "2020-11-13T19:06:59Z", "pr_url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1558", "timeline": [{"oid": "a0bfa3ba47025d34810975c11326a8520ab388f2", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/a0bfa3ba47025d34810975c11326a8520ab388f2", "message": "Add code to handle legacy PTU", "committedDate": "2020-11-13T19:00:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDU4MzAzNg==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1558#discussion_r524583036", "bodyText": "This logs a warning when we get a system request with type LOCK_SCREEN_ICON_URL", "author": "bilal-alsharifi", "createdAt": "2020-11-16T21:09:12Z", "path": "base/src/main/java/com/smartdevicelink/managers/lifecycle/BaseLifecycleManager.java", "diffHunk": "@@ -387,42 +391,62 @@ public void onReceived(RPCMessage message) {\n                     case ON_HASH_CHANGE:\n                         break;\n                     case ON_SYSTEM_REQUEST:\n+                    case ON_ENCODED_SYNC_P_DATA:\n+                    case ON_SYNC_P_DATA:\n+                        if (functionID.equals(FunctionID.ON_ENCODED_SYNC_P_DATA) || functionID.equals(FunctionID.ON_SYNC_P_DATA)) {\n+                            DebugTool.logInfo(TAG, \"Received legacy SYNC_P_DATA, handling it as OnSystemRequest\");\n+                        } else {\n+                            DebugTool.logInfo(TAG, \"Received OnSystemRequest\");\n+                        }\n+\n                         final OnSystemRequest onSystemRequest = (OnSystemRequest) message;\n-                        if ((onSystemRequest.getUrl() != null) &&\n-                                (((onSystemRequest.getRequestType() == RequestType.PROPRIETARY) && (onSystemRequest.getFileType() == FileType.JSON))\n-                                        || ((onSystemRequest.getRequestType() == RequestType.HTTP) && (onSystemRequest.getFileType() == FileType.BINARY)))) {\n-                            Thread handleOffboardTransmissionThread = new Thread() {\n-                                @Override\n-                                public void run() {\n-                                    RPCRequest request = PoliciesFetcher.fetchPolicies(onSystemRequest);\n-                                    if (request != null && isConnected()) {\n-                                        sendRPCMessagePrivate(request, true);\n+                        RequestType requestType = onSystemRequest.getRequestType();\n+                        FileType fileType = onSystemRequest.getFileType();\n+\n+                        if (onSystemRequest.getUrl() != null) {\n+                            if ((requestType == RequestType.PROPRIETARY && fileType == FileType.JSON)\n+                                    || (requestType == RequestType.HTTP && fileType == FileType.BINARY)\n+                                    || functionID.equals(FunctionID.ON_ENCODED_SYNC_P_DATA)\n+                                    || functionID.equals(FunctionID.ON_SYNC_P_DATA)) {\n+                                DebugTool.logInfo(TAG, \"List of conditionals has passed\");\n+                                Thread handleOffboardTransmissionThread = new Thread() {\n+                                    @Override\n+                                    public void run() {\n+                                        DebugTool.logInfo(TAG, \"Attempting to fetch policies\");\n+                                        RPCRequest request = PoliciesFetcher.fetchPolicies(onSystemRequest);\n+                                        if (request != null && isConnected()) {\n+                                            sendRPCMessagePrivate(request, true);\n+                                        }\n                                     }\n-                                }\n-                            };\n-                            handleOffboardTransmissionThread.start();\n-                        } else if (onSystemRequest.getRequestType() == RequestType.ICON_URL && onSystemRequest.getUrl() != null) {\n-                            //Download the icon file and send SystemRequest RPC\n-                            Thread handleOffBoardTransmissionThread = new Thread() {\n-                                @Override\n-                                public void run() {\n-                                    final String urlHttps = onSystemRequest.getUrl().replaceFirst(\"http://\", \"https://\");\n-                                    byte[] file = FileUtls.downloadFile(urlHttps);\n-                                    if (file != null) {\n-                                        SystemRequest systemRequest = new SystemRequest();\n-                                        systemRequest.setFileName(onSystemRequest.getUrl());\n-                                        systemRequest.setBulkData(file);\n-                                        systemRequest.setRequestType(RequestType.ICON_URL);\n-                                        if (isConnected()) {\n-                                            sendRPCMessagePrivate(systemRequest, true);\n+                                };\n+                                handleOffboardTransmissionThread.start();\n+                                return;\n+                            } else if (requestType == RequestType.ICON_URL) {\n+                                //Download the icon file and send SystemRequest RPC\n+                                Thread handleOffBoardTransmissionThread = new Thread() {\n+                                    @Override\n+                                    public void run() {\n+                                        final String urlHttps = onSystemRequest.getUrl().replaceFirst(\"http://\", \"https://\");\n+                                        byte[] file = FileUtls.downloadFile(urlHttps);\n+                                        if (file != null) {\n+                                            SystemRequest systemRequest = new SystemRequest();\n+                                            systemRequest.setFileName(onSystemRequest.getUrl());\n+                                            systemRequest.setBulkData(file);\n+                                            systemRequest.setRequestType(RequestType.ICON_URL);\n+                                            if (isConnected()) {\n+                                                sendRPCMessagePrivate(systemRequest, true);\n+                                            }\n+                                        } else {\n+                                            DebugTool.logError(TAG, \"File was null at: \" + urlHttps);\n                                         }\n-                                    } else {\n-                                        DebugTool.logError(TAG, \"File was null at: \" + urlHttps);\n                                     }\n-                                }\n-                            };\n-                            handleOffBoardTransmissionThread.start();\n+                                };\n+                                handleOffBoardTransmissionThread.start();\n+                                return;\n+                            }\n                         }\n+\n+                        DebugTool.logWarning(TAG, \"Unable to handle OnSystemRequest\");", "originalCommit": "a0bfa3ba47025d34810975c11326a8520ab388f2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e08da3b56644b938b848f489f633b281164388ef", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/e08da3b56644b938b848f489f633b281164388ef", "message": "Remove misleading log", "committedDate": "2020-11-16T21:43:52Z", "type": "commit"}]}