{"pr_number": 206, "pr_title": "Change Response Message from `validate()`", "pr_createdAt": "2020-07-14T20:42:13Z", "pr_url": "https://github.com/cryostatio/cryostat/pull/206", "timeline": [{"oid": "34aa0813954c4d19e2e2bb0d59209472672f7532", "url": "https://github.com/cryostatio/cryostat/commit/34aa0813954c4d19e2e2bb0d59209472672f7532", "message": "Make small final fixes", "committedDate": "2020-07-14T21:01:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY1ODQ4MA==", "url": "https://github.com/cryostatio/cryostat/pull/206#discussion_r454658480", "bodyText": "In this kind of scenario where there are multiple validation checks that can fail, beyond the most basic \"wrong number of arguments\" failure, how about performing all of the checks and constructing a message informing the client about all of the failures, rather than just the \"first\" in the arbitrary implementation order?", "author": "andrewazores", "createdAt": "2020-07-14T21:33:07Z", "path": "src/main/java/com/redhat/rhjmc/containerjfr/commands/internal/StartRecordingCommand.java", "diffHunk": "@@ -135,33 +135,34 @@ public void execute(String[] args) throws Exception {\n     }\n \n     @Override\n-    public boolean validate(String[] args) {\n+    public void validate(String[] args) throws FailedValidationException {\n         if (args.length != 3) {\n-            cw.println(\n-                    \"Expected three arguments: target (host:port, ip:port, or JMX service URL), recording name, and event types\");\n-            return false;\n+            String errorMessage =\n+                    \"Expected three arguments: target (host:port, ip:port, or JMX service URL), recording name, and event types\";\n+            cw.println(errorMessage);\n+            throw new FailedValidationException(errorMessage);\n         }\n \n         String targetId = args[0];\n         String name = args[1];\n         String events = args[2];\n \n-        boolean isValidTargetId = validateTargetId(targetId);\n-        boolean isValidName = validateRecordingName(name);\n-        boolean isValidEvents = validateEvents(events);\n-\n-        if (!isValidTargetId) {\n-            cw.println(String.format(\"%s is an invalid connection specifier\", args[0]));\n+        if (!validateTargetId(targetId)) {\n+            String errorMessage = \"%s is an invalid connection specifier\";", "originalCommit": "34aa0813954c4d19e2e2bb0d59209472672f7532", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY1ODg5OA==", "url": "https://github.com/cryostatio/cryostat/pull/206#discussion_r454658898", "bodyText": "This would match more closely with the previous behaviour, which would print out all of the failures before returning the value of the validation result.", "author": "andrewazores", "createdAt": "2020-07-14T21:34:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY1ODQ4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY3NDI5OA==", "url": "https://github.com/cryostatio/cryostat/pull/206#discussion_r454674298", "bodyText": "Ah, I didn't realize that.\nFor combining them, what do you think about just concatenating them together with some sort of separator? For example:\nMultiple validation checks failed: %s is an invalid connection specifier; %s is an invalid recording name; %s is an invalid events specifier\n\nAnd do you have any thoughts on adding tests to support this? I feel like being completely exhaustive and testing all the possible multiple-failure combinations is probably a bit too much? So maybe we could just do a 2-fail and all-fail test for validate() methods with more than two checks, and obviously just the 2-fail for any that have two checks?", "author": "vic-ma", "createdAt": "2020-07-14T22:09:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY1ODQ4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTIyNjk3Mg==", "url": "https://github.com/cryostatio/cryostat/pull/206#discussion_r455226972", "bodyText": "Yea, semicolons to separate them seems good to me.\nI think it's probably worth exhaustively testing all the validation cases, even if it does seem repetitive/monotonous to do. It's easy for a refactor or some other change in the future to accidentally change the semantics of the method, and that's a regression case that unit tests are great for catching. The command validation step should be considered as part of our command channel API, so we want to be very sure that it's stable between versions.", "author": "andrewazores", "createdAt": "2020-07-15T17:40:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY1ODQ4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY2MDQ2OA==", "url": "https://github.com/cryostatio/cryostat/pull/206#discussion_r454660468", "bodyText": "The return is implicit for a void method, so you can just have an empty method body between the curly braces.", "author": "andrewazores", "createdAt": "2020-07-14T21:37:07Z", "path": "src/test/java/com/redhat/rhjmc/containerjfr/commands/internal/AbstractConnectedCommandTest.java", "diffHunk": "@@ -141,8 +141,8 @@ public String getName() {\n         public void execute(String[] args) {}\n \n         @Override\n-        public boolean validate(String[] args) {\n-            return true;\n+        public void validate(String[] args) throws FailedValidationException {\n+            return;", "originalCommit": "34aa0813954c4d19e2e2bb0d59209472672f7532", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY2MDU1Mg==", "url": "https://github.com/cryostatio/cryostat/pull/206#discussion_r454660552", "bodyText": "Same here re: empty method body/implicit return", "author": "andrewazores", "createdAt": "2020-07-14T21:37:22Z", "path": "src/test/java/com/redhat/rhjmc/containerjfr/commands/internal/AbstractRecordingCommandTest.java", "diffHunk": "@@ -217,8 +217,8 @@ public String getName() {\n         }\n \n         @Override\n-        public boolean validate(String[] args) {\n-            return true;\n+        public void validate(String[] args) throws FailedValidationException {\n+            return;", "originalCommit": "34aa0813954c4d19e2e2bb0d59209472672f7532", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c2586cc3dc53275f920572ab5c02fa37a71577cf", "url": "https://github.com/cryostatio/cryostat/commit/c2586cc3dc53275f920572ab5c02fa37a71577cf", "message": "Fix short-circuiting behaviour in `validate()`", "committedDate": "2020-07-16T19:22:18Z", "type": "forcePushed"}, {"oid": "d0dac39ba6a3188af698d26bc0883f19958028eb", "url": "https://github.com/cryostatio/cryostat/commit/d0dac39ba6a3188af698d26bc0883f19958028eb", "message": "Create FailedValidationException class", "committedDate": "2020-07-17T14:36:21Z", "type": "commit"}, {"oid": "db56021aa9b967abc08638a5205567fcfd603634", "url": "https://github.com/cryostatio/cryostat/commit/db56021aa9b967abc08638a5205567fcfd603634", "message": "Change validate methods to be void and throw FailedValidationException", "committedDate": "2020-07-17T14:36:21Z", "type": "commit"}, {"oid": "4ebf50d1d5a196edb0877b151f8fcde6b7f3c49b", "url": "https://github.com/cryostatio/cryostat/commit/4ebf50d1d5a196edb0877b151f8fcde6b7f3c49b", "message": "Make changes to validate methods in registry implementations", "committedDate": "2020-07-17T14:36:21Z", "type": "commit"}, {"oid": "69060e6a27e831a436f423337d89c407858a68a6", "url": "https://github.com/cryostatio/cryostat/commit/69060e6a27e831a436f423337d89c407858a68a6", "message": "Change command executors to work with changes to validate", "committedDate": "2020-07-17T14:36:21Z", "type": "commit"}, {"oid": "f101f80c1fd62174c724fe71112d9604843af471", "url": "https://github.com/cryostatio/cryostat/commit/f101f80c1fd62174c724fe71112d9604843af471", "message": "Make small change to CommandRegistryImpl validate()\n\nPreviously, if the command was found to not be registered, the thrown\nexception would not contain an `errorMessage` (i.e. it would use\nthe empty constructor). I did this because the method used to check\nfor a command's registration (`isCommandAvailable()`) already outputs\nan error message when returning false.\n\nBut rethinking it, it probably makes more sense to have the validate\nmethod to just always include an error message, even if it is a bit\nredundant. We could also change AbstractCommandExecutor to work more\nlike WsCommandExecutor by having it check for registration and\navailability of commands before validating them, though that is\nprobably a lot of work for not much gain.", "committedDate": "2020-07-17T14:36:21Z", "type": "commit"}, {"oid": "53856f62c45eae30be74691cd77637391f9b4d4a", "url": "https://github.com/cryostatio/cryostat/commit/53856f62c45eae30be74691cd77637391f9b4d4a", "message": "Modify unit tests for executors to work with new validate", "committedDate": "2020-07-17T14:36:21Z", "type": "commit"}, {"oid": "040807b2bf48530a9b18404993d19c7bf72652d0", "url": "https://github.com/cryostatio/cryostat/commit/040807b2bf48530a9b18404993d19c7bf72652d0", "message": "Modify unit tests for registry implementations", "committedDate": "2020-07-17T14:36:21Z", "type": "commit"}, {"oid": "19a4a8553cef7c7c61b213e7cb4533b1b6e376a7", "url": "https://github.com/cryostatio/cryostat/commit/19a4a8553cef7c7c61b213e7cb4533b1b6e376a7", "message": "In Command.validate(), add back in ClientWriter printing error messages", "committedDate": "2020-07-17T14:36:21Z", "type": "commit"}, {"oid": "7adcbb19db17900be24bfab4ad8385258c41498b", "url": "https://github.com/cryostatio/cryostat/commit/7adcbb19db17900be24bfab4ad8385258c41498b", "message": "Change tests to reflect the re-added cw.println() in validate()", "committedDate": "2020-07-17T14:36:21Z", "type": "commit"}, {"oid": "e37c8c35d3b62a9b9150de7e3c4573c76f292256", "url": "https://github.com/cryostatio/cryostat/commit/e37c8c35d3b62a9b9150de7e3c4573c76f292256", "message": "Make naming for validate argc tests more consistent", "committedDate": "2020-07-17T14:36:21Z", "type": "commit"}, {"oid": "99610209173f05b04f904bcc6b70324fd0b3564f", "url": "https://github.com/cryostatio/cryostat/commit/99610209173f05b04f904bcc6b70324fd0b3564f", "message": "Small fix to COMMANDS.md\n\nThe `wait-for` command was missing a `targetId` parameter.\n\nChanged the `target` parameter in the `list` command to be `targetId`,\nto be more consistent.", "committedDate": "2020-07-17T14:36:21Z", "type": "commit"}, {"oid": "6b700adeb431d7f9deac5d0510f996ed755b799b", "url": "https://github.com/cryostatio/cryostat/commit/6b700adeb431d7f9deac5d0510f996ed755b799b", "message": "Change example commands in BatchModeExecutorTest to existing commands", "committedDate": "2020-07-17T14:36:21Z", "type": "commit"}, {"oid": "802b62d38b8a23ad61bc4e467d6727845a77a901", "url": "https://github.com/cryostatio/cryostat/commit/802b62d38b8a23ad61bc4e467d6727845a77a901", "message": "Make small final fixes", "committedDate": "2020-07-17T14:36:21Z", "type": "commit"}, {"oid": "ccbbf1963692616a94742ee36e0a034a1737bb91", "url": "https://github.com/cryostatio/cryostat/commit/ccbbf1963692616a94742ee36e0a034a1737bb91", "message": "Fix typo in COMMANDS.md", "committedDate": "2020-07-17T14:36:21Z", "type": "commit"}, {"oid": "55a9e2fae024aa255613dc4ace494e062a44dbb5", "url": "https://github.com/cryostatio/cryostat/commit/55a9e2fae024aa255613dc4ace494e062a44dbb5", "message": "Use implicit return in empty `validate()` methods", "committedDate": "2020-07-17T14:36:21Z", "type": "commit"}, {"oid": "75084912f5e9759d631f5af89436a82ec272a89c", "url": "https://github.com/cryostatio/cryostat/commit/75084912f5e9759d631f5af89436a82ec272a89c", "message": "Fix short-circuiting behaviour in `validate()`", "committedDate": "2020-07-17T14:36:21Z", "type": "commit"}, {"oid": "b73912359f687006b2b48bb3005236e0cf638a32", "url": "https://github.com/cryostatio/cryostat/commit/b73912359f687006b2b48bb3005236e0cf638a32", "message": "Remove print statement from `validateEvents()`", "committedDate": "2020-07-17T14:36:21Z", "type": "commit"}, {"oid": "7d9a21bd37decfdccb13e6486f9d84012fa5d291", "url": "https://github.com/cryostatio/cryostat/commit/7d9a21bd37decfdccb13e6486f9d84012fa5d291", "message": "Use StringJoiner instead of manual delimiters", "committedDate": "2020-07-20T15:08:08Z", "type": "commit"}, {"oid": "7d9a21bd37decfdccb13e6486f9d84012fa5d291", "url": "https://github.com/cryostatio/cryostat/commit/7d9a21bd37decfdccb13e6486f9d84012fa5d291", "message": "Use StringJoiner instead of manual delimiters", "committedDate": "2020-07-20T15:08:08Z", "type": "forcePushed"}]}