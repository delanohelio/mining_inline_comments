{"pr_number": 14451, "pr_title": "Bjorncs/feed handler cleanup", "pr_createdAt": "2020-09-18T14:10:03Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/14451", "timeline": [{"oid": "560c144bc72db8a3335742f6c659d1d312b122a5", "url": "https://github.com/vespa-engine/vespa/commit/560c144bc72db8a3335742f6c659d1d312b122a5", "message": "Add getter for number of queued tasks", "committedDate": "2020-09-18T13:27:03Z", "type": "commit"}, {"oid": "65586893bb603a6c433b9c0047293ae605e654be", "url": "https://github.com/vespa-engine/vespa/commit/65586893bb603a6c433b9c0047293ae605e654be", "message": "Move tests package containing classes being tested\n\nPackage private members can now be used from tests", "committedDate": "2020-09-18T13:58:00Z", "type": "commit"}, {"oid": "849c980b2470bbba975fd3e4a14f43fabdbf9cc2", "url": "https://github.com/vespa-engine/vespa/commit/849c980b2470bbba975fd3e4a14f43fabdbf9cc2", "message": "Reimplement flow control to work correctly with new threadpool model\n\nThrottle http requests when http handler threadpool starts queuing.\nAlways use non-blocking send method on messagebus session.\nRemove handling of messagebus status code that is never returned.", "committedDate": "2020-09-18T14:03:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE4MDA5OA==", "url": "https://github.com/vespa-engine/vespa/pull/14451#discussion_r491180098", "bodyText": "Did you intend for this to be sendBlocking, as we discussed?", "author": "jonmv", "createdAt": "2020-09-18T20:40:27Z", "path": "vespaclient-container-plugin/src/main/java/com/yahoo/vespa/http/server/ClientFeederV3.java", "diffHunk": "@@ -191,30 +169,14 @@ private int getOverloadReturnCode(HttpRequest request) {\n         }\n     }\n \n-    private Result sendMessage(FeederSettings settings,\n-                               DocumentOperationMessageV3 msg,\n-                               AtomicInteger threadsAvailableForFeeding) throws InterruptedException {\n-        Result result = null;\n-        while (result == null || result.getError().getCode() == SEND_QUEUE_FULL) {\n-            msg.getMessage().pushHandler(feedReplyHandler);\n-\n-            if (settings.denyIfBusy && threadsAvailableForFeeding.get() < 1) {\n-                return sourceSession.getResource().sendMessage(msg.getMessage());\n-            } else {\n-                result = sourceSession.getResource().sendMessageBlocking(msg.getMessage());\n-            }\n-            if (result.isAccepted()) {\n-                return result;\n-            }\n-            Thread.sleep(100);\n-        }\n-        return result;\n+    private Result sendMessage(DocumentOperationMessageV3 msg) {\n+        msg.getMessage().pushHandler(feedReplyHandler);\n+        return sourceSession.getResource().sendMessage(msg.getMessage());", "originalCommit": "849c980b2470bbba975fd3e4a14f43fabdbf9cc2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg3NDUwOA==", "url": "https://github.com/vespa-engine/vespa/pull/14451#discussion_r491874508", "bodyText": "NVM.", "author": "jonmv", "createdAt": "2020-09-21T08:37:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE4MDA5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE4MDI2MQ==", "url": "https://github.com/vespa-engine/vespa/pull/14451#discussion_r491180261", "bodyText": "\ud83d\udc4d", "author": "jonmv", "createdAt": "2020-09-18T20:40:49Z", "path": "vespaclient-container-plugin/src/main/java/com/yahoo/vespa/http/server/ClientFeederV3.java", "diffHunk": "@@ -244,27 +205,21 @@ private void feed(FeederSettings settings,\n                 repliesFromOldMessages.add(createOperationStatus(message.get().getOperationId(),\n                                                                  result.getError().getMessage(),\n                                                                  ErrorCode.TRANSIENT_ERROR,\n-                                                                 false,\n-                                                                 message.get().getMessage()));\n+                        message.get().getMessage()));\n             } else {\n-                // should probably not happen, but everybody knows stuff that\n-                // shouldn't happen, happens all the time\n-                boolean isConditionNotMet = result.getError().getCode() == DocumentProtocol.ERROR_TEST_AND_SET_CONDITION_FAILED;", "originalCommit": "849c980b2470bbba975fd3e4a14f43fabdbf9cc2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE4Mjg1NA==", "url": "https://github.com/vespa-engine/vespa/pull/14451#discussion_r491182854", "bodyText": "I believe this would oftentimes be true, even though there's no need to throttle. Consider a larger number than 0.", "author": "jonmv", "createdAt": "2020-09-18T20:46:46Z", "path": "vespaclient-container-plugin/src/main/java/com/yahoo/vespa/http/server/FeedHandlerV3.java", "diffHunk": "@@ -44,31 +43,40 @@\n     private final SessionCache sessionCache;\n     protected final ReplyHandler feedReplyHandler;\n     private final Metric metric;\n+    private final ClientFeederV3.HttpThrottlePolicy httpThrottlePolicy;\n     private final Object monitor = new Object();\n-    private final AtomicInteger threadsAvailableForFeeding;\n     private static final Logger log = Logger.getLogger(FeedHandlerV3.class.getName());\n \n-    public FeedHandlerV3(Executor executor,\n+    public FeedHandlerV3(ContainerThreadPool threadpool,\n                          Metric metric,\n                          AccessLog accessLog,\n                          DocumentmanagerConfig documentManagerConfig,\n                          SessionCache sessionCache,\n-                         ThreadpoolConfig threadpoolConfig,\n                          DocumentApiMetrics metricsHelper) {\n+        this(threadpool.executor(),\n+                () -> threadpool.queuedTasks() > 0,", "originalCommit": "849c980b2470bbba975fd3e4a14f43fabdbf9cc2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg3NjI4MA==", "url": "https://github.com/vespa-engine/vespa/pull/14451#discussion_r491876280", "bodyText": "@baldersheim Any input?", "author": "bjorncs", "createdAt": "2020-09-21T08:40:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE4Mjg1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg4OTUzNw==", "url": "https://github.com/vespa-engine/vespa/pull/14451#discussion_r491889537", "bodyText": "Hard to tell what is the correct value here. Perhaps queuesize/2 is a more conservative number. Might be better to start with a larger number and reduce. I guess we can  look at queue size afterwards and see how it behaves.", "author": "baldersheim", "createdAt": "2020-09-21T09:03:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE4Mjg1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk5NDYyNg==", "url": "https://github.com/vespa-engine/vespa/pull/14451#discussion_r491994626", "bodyText": "I'm not really a fan of this ad-hoc throttling. I think is better to reuse the rejection logic in the threaded request handler base class. The response code must be overridden to 429, but that should be easy to implement.", "author": "bjorncs", "createdAt": "2020-09-21T12:12:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE4Mjg1NA=="}], "type": "inlineReview"}]}