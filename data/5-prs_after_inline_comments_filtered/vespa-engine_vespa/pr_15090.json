{"pr_number": 15090, "pr_title": "Add method to calculate thin pool size", "pr_createdAt": "2020-10-29T13:26:07Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/15090", "timeline": [{"oid": "31bd8f7ddf34bd305c33a42bf1956d651aff0251", "url": "https://github.com/vespa-engine/vespa/commit/31bd8f7ddf34bd305c33a42bf1956d651aff0251", "message": "Add method to calculate thin pool size", "committedDate": "2020-10-29T13:24:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM3MDA3NA==", "url": "https://github.com/vespa-engine/vespa/pull/15090#discussion_r514370074", "bodyText": "Implementation no longer requires Zone argument", "author": "freva", "createdAt": "2020-10-29T15:53:25Z", "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/HostResourcesCalculator.java", "diffHunk": "@@ -34,4 +36,9 @@\n      */\n     NodeResources realToRequest(NodeResources realResources);\n \n+    /**\n+     * Returns the needed thin pool size in base2 Gb.\n+     */\n+    long thinPoolSizeInBase2Gb(Zone zone, NodeType nodeType);", "originalCommit": "31bd8f7ddf34bd305c33a42bf1956d651aff0251", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM4NzY0NA==", "url": "https://github.com/vespa-engine/vespa/pull/15090#discussion_r514387644", "bodyText": "Fixed", "author": "hmusum", "createdAt": "2020-10-29T16:16:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM3MDA3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM3ODk1Mw==", "url": "https://github.com/vespa-engine/vespa/pull/15090#discussion_r514378953", "bodyText": "Not sure how we ended up with this (Initially from #13267)... I guess this is the result after dividing by average number of containers on host or something. If so, I guess we need to somehow do something similar for shared hosts in dynamically provisioned zones \ud83d\ude2b", "author": "freva", "createdAt": "2020-10-29T16:04:41Z", "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/NodeResourceLimits.java", "diffHunk": "@@ -75,15 +76,12 @@ private double minAdvertisedDiskGb(NodeResources requested) {\n         return minRealDiskGb() + getThinPoolSize(requested.storageType());\n     }\n \n-    // TODO: Calculate thin pool size instead of hardcoding\n+    // Note: Assumes node type 'host'\n     private long getThinPoolSize(NodeResources.StorageType storageType) {\n-        if (storageType == NodeResources.StorageType.local && zone().getCloud().dynamicProvisioning()) {\n-            if (zone().system() == SystemName.Public)\n-                return 12;\n-            else\n-                return 24;\n-        }\n-        return 4;\n+        if (storageType == NodeResources.StorageType.local && zone().getCloud().dynamicProvisioning())\n+            return nodeRepository.resourcesCalculator().thinPoolSizeInBase2Gb(zone(), NodeType.host);\n+        else\n+            return 4;", "originalCommit": "31bd8f7ddf34bd305c33a42bf1956d651aff0251", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM4ODIzNg==", "url": "https://github.com/vespa-engine/vespa/pull/15090#discussion_r514388236", "bodyText": "OK, need to look into that, then", "author": "hmusum", "createdAt": "2020-10-29T16:17:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM3ODk1Mw=="}], "type": "inlineReview"}, {"oid": "b745a493ba5407d55d02eacc8f7f59803fe3dd44", "url": "https://github.com/vespa-engine/vespa/commit/b745a493ba5407d55d02eacc8f7f59803fe3dd44", "message": "No need for zone argument", "committedDate": "2020-10-29T16:15:37Z", "type": "commit"}]}