{"pr_number": 12941, "pr_title": "Add metrics for enqueued and processed coredumps ", "pr_createdAt": "2020-04-16T08:39:51Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/12941", "timeline": [{"oid": "8bebe88526e449bbca0514d8bdfc87390cb26db4", "url": "https://github.com/vespa-engine/vespa/commit/8bebe88526e449bbca0514d8bdfc87390cb26db4", "message": "Add metrics for enqueued and processed coredumps", "committedDate": "2020-04-16T08:38:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM5NjA4Mg==", "url": "https://github.com/vespa-engine/vespa/pull/12941#discussion_r409396082", "bodyText": "I'd recommend using UnixPath in the test methods to easily create parent directories and/or files you need, the before method should only create directories are guaranteed to always exist, otherwise the tests might not catch that a certain directory is not created as expected.", "author": "freva", "createdAt": "2020-04-16T09:00:28Z", "path": "node-admin/src/test/java/com/yahoo/vespa/hosted/node/admin/maintenance/coredump/CoredumpHandlerTest.java", "diffHunk": "@@ -206,13 +209,28 @@ public void process_single_coredump_test() throws IOException {\n         verify(coreCollector, never()).collect(any(), any());\n         verify(coredumpReporter, times(1)).reportCoredump(eq(\"id-123\"), eq(\"metadata\"));\n         assertFalse(Files.exists(coredumpDirectory));\n-        assertFolderContents(doneCoredumpsPath, \"id-123\");\n-        assertFolderContents(doneCoredumpsPath.resolve(\"id-123\"), \"metadata.json\", \"dump_bash.core.431.lz4\");\n+        assertFolderContents(doneCoredumpsPath.resolve(\"container-123\"), \"id-123\");\n+        assertFolderContents(doneCoredumpsPath.resolve(\"container-123\").resolve(\"id-123\"), \"metadata.json\", \"dump_bash.core.431.lz4\");\n+    }\n+\n+    @Test\n+    public void report_enqueued_and_processed_metrics() throws IOException {\n+        Files.createFile(crashPathInContainer.resolve(\"dump-1\"));\n+        Files.createFile(crashPathInContainer.resolve(\"dump-2\"));\n+        Files.createFile(doneCoredumpsPath.resolve(\"container-123\").resolve(\"dump-3\"));\n+\n+        coredumpHandler.updateMetrics(context, crashPathInContainer);\n+        List<DimensionMetrics> updatedMetrics = metrics.getMetricsByType(Metrics.DimensionType.PRETAGGED);\n+        assertEquals(1, updatedMetrics.size());\n+        Map<String, Number> values = updatedMetrics.get(0).getMetrics();\n+        assertEquals(2, values.get(\"coredumps.enqueued\").intValue());\n+        assertEquals(1, values.get(\"coredumps.processed\").intValue());\n     }\n \n     @Before\n     public void setup() throws IOException {\n-        Files.createDirectories(donePath);\n+        Files.createDirectories(donePath.resolve(\"container-123\"));", "originalCommit": "8bebe88526e449bbca0514d8bdfc87390cb26db4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQwMDk5Nw==", "url": "https://github.com/vespa-engine/vespa/pull/12941#discussion_r409400997", "bodyText": "The processing directory may contain multiple files, at least the core file and metadata.json. You probably want to limit max-depth here, but then you'll be off by 1 if there is a coredump being processed right now...", "author": "freva", "createdAt": "2020-04-16T09:08:12Z", "path": "node-admin/src/main/java/com/yahoo/vespa/hosted/node/admin/maintenance/coredump/CoredumpHandler.java", "diffHunk": "@@ -194,4 +204,47 @@ Path findCoredumpFileInProcessingDirectory(Path coredumpProccessingDirectory) {\n                 .orElseThrow(() -> new IllegalStateException(\n                         \"No coredump file found in processing directory \" + coredumpProccessingDirectory));\n     }\n+\n+    void updateMetrics(NodeAgentContext context, Path containerCrashPathOnHost) {\n+        Dimensions dimensions = generateDimensions(context);\n+\n+        // Unprocessed coredumps\n+        int numberOfUnprocessedCoredumps = FileFinder.files(containerCrashPathOnHost)", "originalCommit": "8bebe88526e449bbca0514d8bdfc87390cb26db4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQ2MjMyNg==", "url": "https://github.com/vespa-engine/vespa/pull/12941#discussion_r409462326", "bodyText": "This is for number of coredumps in crash path, not the processing path. So I'll need to filter out hs_err files as well", "author": "olaaun", "createdAt": "2020-04-16T10:48:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQwMDk5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQ2NTE3NA==", "url": "https://github.com/vespa-engine/vespa/pull/12941#discussion_r409465174", "bodyText": "processing is inside the crash path\n\n  \n    \n      vespa/node-admin/src/main/java/com/yahoo/vespa/hosted/node/admin/maintenance/coredump/CoredumpHandler.java\n    \n    \n         Line 87\n      in\n      8bebe88\n    \n    \n    \n    \n\n        \n          \n           Path containerProcessingPathOnHost = containerCrashPathOnHost.resolve(PROCESSING_DIRECTORY_NAME);", "author": "freva", "createdAt": "2020-04-16T10:53:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQwMDk5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQ2NjMwNg==", "url": "https://github.com/vespa-engine/vespa/pull/12941#discussion_r409466306", "bodyText": "Aha \ud83d\udc4d", "author": "olaaun", "createdAt": "2020-04-16T10:55:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQwMDk5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQwMTcxMA==", "url": "https://github.com/vespa-engine/vespa/pull/12941#discussion_r409401710", "bodyText": "Same problem here, should be .directories() instead of .files() and limit max-depth to 1", "author": "freva", "createdAt": "2020-04-16T09:09:16Z", "path": "node-admin/src/main/java/com/yahoo/vespa/hosted/node/admin/maintenance/coredump/CoredumpHandler.java", "diffHunk": "@@ -194,4 +204,47 @@ Path findCoredumpFileInProcessingDirectory(Path coredumpProccessingDirectory) {\n                 .orElseThrow(() -> new IllegalStateException(\n                         \"No coredump file found in processing directory \" + coredumpProccessingDirectory));\n     }\n+\n+    void updateMetrics(NodeAgentContext context, Path containerCrashPathOnHost) {\n+        Dimensions dimensions = generateDimensions(context);\n+\n+        // Unprocessed coredumps\n+        int numberOfUnprocessedCoredumps = FileFinder.files(containerCrashPathOnHost)\n+                .match(nameStartsWith(\".\").negate())\n+                .list().size();\n+\n+        metrics.declareGauge(Metrics.APPLICATION_NODE, \"coredumps.enqueued\", dimensions, Metrics.DimensionType.PRETAGGED).sample(numberOfUnprocessedCoredumps);\n+\n+        // Processed coredumps\n+        Path processedCoredumpsPath = doneCoredumpsPath.resolve(context.containerName().asString());\n+        int numberOfProcessedCoredumps = FileFinder.files(processedCoredumpsPath)", "originalCommit": "8bebe88526e449bbca0514d8bdfc87390cb26db4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9a93471efcdb1c764c46b5f030ad9b4a07ec47c2", "url": "https://github.com/vespa-engine/vespa/commit/9a93471efcdb1c764c46b5f030ad9b4a07ec47c2", "message": "Filter hs_err files. Limit depth when counting coredumps. Create folders using UnixPath in tests", "committedDate": "2020-04-16T11:13:48Z", "type": "commit"}, {"oid": "2aec59aee348699b4253ed2650d0155215b8cdbc", "url": "https://github.com/vespa-engine/vespa/commit/2aec59aee348699b4253ed2650d0155215b8cdbc", "message": "Update metrics before processing coredumps", "committedDate": "2020-04-16T11:36:34Z", "type": "commit"}]}