{"pr_number": 14393, "pr_title": "Test request statistics", "pr_createdAt": "2020-09-14T09:44:47Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/14393", "timeline": [{"oid": "a6a4e2d89afc8f299506ec3c97c9b3613dd26950", "url": "https://github.com/vespa-engine/vespa/commit/a6a4e2d89afc8f299506ec3c97c9b3613dd26950", "message": "Test request statistics", "committedDate": "2020-09-14T09:43:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc4OTE2MQ==", "url": "https://github.com/vespa-engine/vespa/pull/14393#discussion_r487789161", "bodyText": "I cannot find use of this class outside unit tests", "author": "bjorncs", "createdAt": "2020-09-14T09:52:06Z", "path": "jdisc_http_service/src/test/java/com/yahoo/jdisc/http/server/jetty/HttpServerTest.java", "diffHunk": "@@ -959,23 +1003,38 @@ public ContentChannel handleRequest(final Request request, final ResponseHandler\n     }\n \n     private static class ParameterPrinterRequestHandler extends AbstractRequestHandler {\n+\n         private static final CompletionHandler NULL_COMPLETION_HANDLER = null;\n \n         @Override\n-        public ContentChannel handleRequest(final Request request, final ResponseHandler handler) {\n-            final Map<String, List<String>> parameters =\n-                    new TreeMap<>(((HttpRequest)request).parameters());\n-            final ContentChannel responseContentChannel\n-                    = ResponseDispatch.newInstance(Response.Status.OK).connect(handler);\n-            responseContentChannel.write(\n-                    ByteBuffer.wrap(parameters.toString().getBytes(StandardCharsets.UTF_8)),\n-                    NULL_COMPLETION_HANDLER);\n+        public ContentChannel handleRequest(Request request, ResponseHandler handler) {\n+            Map<String, List<String>> parameters = new TreeMap<>(((HttpRequest)request).parameters());\n+            ContentChannel responseContentChannel = ResponseDispatch.newInstance(Response.Status.OK).connect(handler);\n+            responseContentChannel.write(ByteBuffer.wrap(parameters.toString().getBytes(StandardCharsets.UTF_8)),\n+                                         NULL_COMPLETION_HANDLER);\n \n             // Have the request content written back to the response.\n             return responseContentChannel;\n         }\n     }\n \n+    private static class RequestTypeHandler extends AbstractRequestHandler {", "originalCommit": "a6a4e2d89afc8f299506ec3c97c9b3613dd26950", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODA0NzI2OA==", "url": "https://github.com/vespa-engine/vespa/pull/14393#discussion_r488047268", "bodyText": "It's in a test class so I hope not :-)", "author": "bratseth", "createdAt": "2020-09-14T16:00:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc4OTE2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQyOTcyNw==", "url": "https://github.com/vespa-engine/vespa/pull/14393#discussion_r488429727", "bodyText": "Oops, my fault", "author": "bjorncs", "createdAt": "2020-09-15T06:57:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc4OTE2MQ=="}], "type": "inlineReview"}, {"oid": "f48d0f17f60ef074e131da38cb032a2af8328e84", "url": "https://github.com/vespa-engine/vespa/commit/f48d0f17f60ef074e131da38cb032a2af8328e84", "message": "Propagate requestType through jdisc core response", "committedDate": "2020-09-14T19:33:41Z", "type": "commit"}, {"oid": "b445f59b10b5f02e0209611ced663f290cf19cbb", "url": "https://github.com/vespa-engine/vespa/commit/b445f59b10b5f02e0209611ced663f290cf19cbb", "message": "Test just one request", "committedDate": "2020-09-14T19:47:46Z", "type": "commit"}]}