{"pr_number": 15598, "pr_title": "Bjorncs/feature flags", "pr_createdAt": "2020-12-02T13:04:41Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/15598", "timeline": [{"oid": "ac66edc8eab81f21f57b39b74e87fabe60e56ac7", "url": "https://github.com/vespa-engine/vespa/commit/ac66edc8eab81f21f57b39b74e87fabe60e56ac7", "message": "Allow list of owners", "committedDate": "2020-12-02T09:53:20Z", "type": "commit"}, {"oid": "1a976d946e39067269d6aeabe78502d72616a490", "url": "https://github.com/vespa-engine/vespa/commit/1a976d946e39067269d6aeabe78502d72616a490", "message": "Specify owner and expected time-to-leave for feature flags\n\nActual owners will be specified in upcoming PR", "committedDate": "2020-12-02T13:00:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE3NDk3NQ==", "url": "https://github.com/vespa-engine/vespa/pull/15598#discussion_r534174975", "bodyText": "== should be used here?", "author": "hakonhall", "createdAt": "2020-12-02T13:42:24Z", "path": "flags/src/main/java/com/yahoo/vespa/flags/FlagDefinition.java", "diffHunk": "@@ -39,4 +53,26 @@ public String getDescription() {\n     public String getModificationEffect() {\n         return modificationEffect;\n     }\n+\n+    public List<String> getOwners() { return owners; }\n+\n+    public Instant getCreatedAt() { return createdAt; }\n+\n+    public Instant getExpiresAt() { return expiresAt; }\n+\n+    private static void validate(List<String> owners, Instant createdAt, Instant expiresAt) {\n+        if (expiresAt.isBefore(createdAt)) {\n+            throw new IllegalArgumentException(\n+                    String.format(\n+                            \"Flag cannot expire before its creation date (createdAt='%s', expiresAt='%s')\",\n+                            createdAt, expiresAt));\n+        }\n+        if (owners.equals(PermanentFlags.OWNERS)) {", "originalCommit": "1a976d946e39067269d6aeabe78502d72616a490", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDIwMjg2Mg==", "url": "https://github.com/vespa-engine/vespa/pull/15598#discussion_r534202862", "bodyText": "I don't like that for anything except enums. Defensive copying of collections in constructors is a common pattern in our code base. That would break a reference equality check.", "author": "bjorncs", "createdAt": "2020-12-02T14:21:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE3NDk3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDIxNzMwNg==", "url": "https://github.com/vespa-engine/vespa/pull/15598#discussion_r534217306", "bodyText": "As it is now, the below if-block is unreachable because of this, since if owners.equals(PermanentFlags.OWNERS) then owners.isEmpty() is true.\nThis code should instead ask PermanentFlags if the Flag is owned by PermanentFlags, e.g. testing for reference-equals with a private static OWNERS, and then that class should validate the Flag instead of here.", "author": "hakonhall", "createdAt": "2020-12-02T14:39:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE3NDk3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDIyMzA2MA==", "url": "https://github.com/vespa-engine/vespa/pull/15598#discussion_r534223060", "bodyText": "I agree, the code was confusing. I changed line 70 to use your suggestion to check if flag originates from PermanentFlags.", "author": "bjorncs", "createdAt": "2020-12-02T14:46:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE3NDk3NQ=="}], "type": "inlineReview"}, {"oid": "94f0cf42981ea4e8213c9497eec4c1a898289bad", "url": "https://github.com/vespa-engine/vespa/commit/94f0cf42981ea4e8213c9497eec4c1a898289bad", "message": "Use reference equality on owner list to determine if owned by PermanentFlags", "committedDate": "2020-12-02T14:45:07Z", "type": "commit"}]}