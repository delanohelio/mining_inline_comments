{"pr_number": 13942, "pr_title": "Bjorncs/improve athenz access control", "pr_createdAt": "2020-07-24T13:10:06Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/13942", "timeline": [{"oid": "9953983bbc43ebfbf62b353aa043543c7b3ef5c9", "url": "https://github.com/vespa-engine/vespa/commit/9953983bbc43ebfbf62b353aa043543c7b3ef5c9", "message": "Add static builder taking port and path", "committedDate": "2020-08-18T08:53:06Z", "type": "commit"}, {"oid": "ca57e9c2cf1b72701f3ed2d454f0d59c7f56a63a", "url": "https://github.com/vespa-engine/vespa/commit/ca57e9c2cf1b72701f3ed2d454f0d59c7f56a63a", "message": "Bind access control filter to all paths on port 4443\n\nExclude bindings with separate filter chain.\nDo not bind access control filter to port 4080.\nSimplify AccessControl interface to a 'configure()' method.", "committedDate": "2020-08-18T08:53:06Z", "type": "commit"}, {"oid": "0479417622405fbf20290748be8dc5c3513334a5", "url": "https://github.com/vespa-engine/vespa/commit/0479417622405fbf20290748be8dc5c3513334a5", "message": "Use 'createModelAndGetHttp' in all test methods for AccessControl", "committedDate": "2020-08-18T08:53:07Z", "type": "commit"}, {"oid": "0344ab1a1ef64c042e27d095a4f34d5031bbfce2", "url": "https://github.com/vespa-engine/vespa/commit/0344ab1a1ef64c042e27d095a4f34d5031bbfce2", "message": "Implement equals/hashCode for FilterBinding", "committedDate": "2020-08-18T08:53:07Z", "type": "commit"}, {"oid": "40b8fd053051bd0f462ca7d400f0407c7961969f", "url": "https://github.com/vespa-engine/vespa/commit/40b8fd053051bd0f462ca7d400f0407c7961969f", "message": "Ensure that access control chain has unique bindings", "committedDate": "2020-08-18T08:54:50Z", "type": "commit"}, {"oid": "40b8fd053051bd0f462ca7d400f0407c7961969f", "url": "https://github.com/vespa-engine/vespa/commit/40b8fd053051bd0f462ca7d400f0407c7961969f", "message": "Ensure that access control chain has unique bindings", "committedDate": "2020-08-18T08:54:50Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjAzMjQ3MA==", "url": "https://github.com/vespa-engine/vespa/pull/13942#discussion_r472032470", "bodyText": "This seems to be inconsistent with fromHttpPath, unless the paths are semantically different?", "author": "gjoranv", "createdAt": "2020-08-18T09:09:03Z", "path": "config-model/src/main/java/com/yahoo/vespa/model/container/component/SystemBindingPattern.java", "diffHunk": "@@ -13,6 +13,7 @@\n \n     public static SystemBindingPattern fromHttpPath(String path) { return new SystemBindingPattern(\"http\", \"*\", null, path);}\n     public static SystemBindingPattern fromPattern(String binding) { return new SystemBindingPattern(binding);}\n+    public static SystemBindingPattern fromPortAndPath(String port, String path) { return new SystemBindingPattern(\"http\", \"*\", port, path); }", "originalCommit": "9953983bbc43ebfbf62b353aa043543c7b3ef5c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjExNTQzNQ==", "url": "https://github.com/vespa-engine/vespa/pull/13942#discussion_r472115435", "bodyText": "I agree, let's rename it to fromHttpPortAndPath.", "author": "bjorncs", "createdAt": "2020-08-18T11:44:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjAzMjQ3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA0NzkxMQ==", "url": "https://github.com/vespa-engine/vespa/pull/13942#discussion_r472047911", "bodyText": "Suggest to use a more descriptive name. This is not to configure the AccessControl object, but add a lot of stuff to the given Http. Perhaps this should be done in the Http object itself?", "author": "gjoranv", "createdAt": "2020-08-18T09:35:10Z", "path": "config-model/src/main/java/com/yahoo/vespa/model/container/http/AccessControl.java", "diffHunk": "@@ -84,69 +85,75 @@ public AccessControl build() {\n     public final boolean writeEnabled;\n     private final Set<BindingPattern> excludedBindings;\n     private final Collection<Handler<?>> handlers;\n-    private final Collection<Servlet> servlets;\n \n     private AccessControl(String domain,\n                           boolean writeEnabled,\n                           boolean readEnabled,\n                           Set<BindingPattern> excludedBindings,\n-                          Collection<Servlet> servlets,\n                           Collection<Handler<?>> handlers) {\n         this.domain = domain;\n         this.readEnabled = readEnabled;\n         this.writeEnabled = writeEnabled;\n         this.excludedBindings = Collections.unmodifiableSet(excludedBindings);\n         this.handlers = handlers;\n-        this.servlets = servlets;\n     }\n \n-    public List<FilterBinding> getBindings() {\n-        return Stream.concat(getHandlerBindings(), getServletBindings())\n-                .collect(Collectors.toCollection(ArrayList::new));\n+    public void configure(Http http) {", "originalCommit": "ca57e9c2cf1b72701f3ed2d454f0d59c7f56a63a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjExNTE5MQ==", "url": "https://github.com/vespa-engine/vespa/pull/13942#discussion_r472115191", "bodyText": "Perhaps rename it to something like configureAccessControlFilterChains?\nI would like to contain the logic for setting up filter chains and bindings inside the AccessControl class.", "author": "bjorncs", "createdAt": "2020-08-18T11:44:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA0NzkxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjExOTExNA==", "url": "https://github.com/vespa-engine/vespa/pull/13942#discussion_r472119114", "bodyText": "Isn't configureAccessControl enough? I'm ok with with either. I agree with containing the logic.", "author": "gjoranv", "createdAt": "2020-08-18T11:51:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA0NzkxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjEzNDAxMA==", "url": "https://github.com/vespa-engine/vespa/pull/13942#discussion_r472134010", "bodyText": "Renamed to configureHttpFilterChains.", "author": "bjorncs", "createdAt": "2020-08-18T12:18:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA0NzkxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA1MjMwNQ==", "url": "https://github.com/vespa-engine/vespa/pull/13942#discussion_r472052305", "bodyText": "Adding this to a given object is less modular than doing it on the outside, or having a configure/use/addAccessControl in Http.", "author": "gjoranv", "createdAt": "2020-08-18T09:42:42Z", "path": "config-model/src/main/java/com/yahoo/vespa/model/container/http/AccessControl.java", "diffHunk": "@@ -84,69 +85,75 @@ public AccessControl build() {\n     public final boolean writeEnabled;\n     private final Set<BindingPattern> excludedBindings;\n     private final Collection<Handler<?>> handlers;\n-    private final Collection<Servlet> servlets;\n \n     private AccessControl(String domain,\n                           boolean writeEnabled,\n                           boolean readEnabled,\n                           Set<BindingPattern> excludedBindings,\n-                          Collection<Servlet> servlets,\n                           Collection<Handler<?>> handlers) {\n         this.domain = domain;\n         this.readEnabled = readEnabled;\n         this.writeEnabled = writeEnabled;\n         this.excludedBindings = Collections.unmodifiableSet(excludedBindings);\n         this.handlers = handlers;\n-        this.servlets = servlets;\n     }\n \n-    public List<FilterBinding> getBindings() {\n-        return Stream.concat(getHandlerBindings(), getServletBindings())\n-                .collect(Collectors.toCollection(ArrayList::new));\n+    public void configure(Http http) {\n+        http.setAccessControl(this);", "originalCommit": "ca57e9c2cf1b72701f3ed2d454f0d59c7f56a63a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA1NTE5OQ==", "url": "https://github.com/vespa-engine/vespa/pull/13942#discussion_r472055199", "bodyText": "Why not add the embedding container element in createModelAndGetHttp?", "author": "gjoranv", "createdAt": "2020-08-18T09:47:51Z", "path": "config-model/src/test/java/com/yahoo/vespa/model/container/xml/AccessControlTest.java", "diffHunk": "@@ -44,15 +42,14 @@\n \n     @Test\n     public void access_control_filter_chains_are_set_up() {\n-        Element clusterElem = DomBuilderTest.parse(\n+        Http http = createModelAndGetHttp(\n+                \"<container version='1.0'>\",", "originalCommit": "0479417622405fbf20290748be8dc5c3513334a5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjEzMzc1MA==", "url": "https://github.com/vespa-engine/vespa/pull/13942#discussion_r472133750", "bodyText": "Fixed", "author": "bjorncs", "createdAt": "2020-08-18T12:18:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA1NTE5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA1OTYzNA==", "url": "https://github.com/vespa-engine/vespa/pull/13942#discussion_r472059634", "bodyText": "Perhaps we could start this method by creating a map from binding->id?", "author": "gjoranv", "createdAt": "2020-08-18T09:55:30Z", "path": "config-model/src/main/java/com/yahoo/vespa/model/container/http/AccessControl.java", "diffHunk": "@@ -137,6 +139,22 @@ private void addAccessControlExcludedChain(Http http) {\n         }\n     }\n \n+    // Remove bindings from access control chain that have binding pattern as a different filter chain\n+    private void removeDuplicateBindingsFromAccessControlChain(Http http) {\n+        Set<FilterBinding> duplicateBindings = new HashSet<>();\n+        for (FilterBinding binding : http.getBindings()) {", "originalCommit": "40b8fd053051bd0f462ca7d400f0407c7961969f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjEyOTgyMw==", "url": "https://github.com/vespa-engine/vespa/pull/13942#discussion_r472129823", "bodyText": "There are multiple strategies to solve this specific problem, but I don't think creating a mapping will be significantly better.", "author": "bjorncs", "createdAt": "2020-08-18T12:11:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA1OTYzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA2MjY1MQ==", "url": "https://github.com/vespa-engine/vespa/pull/13942#discussion_r472062651", "bodyText": "BTW, is filterId() the correct name? Sounds like it should be chainId.", "author": "gjoranv", "createdAt": "2020-08-18T10:00:43Z", "path": "config-model/src/main/java/com/yahoo/vespa/model/container/http/AccessControl.java", "diffHunk": "@@ -137,6 +139,22 @@ private void addAccessControlExcludedChain(Http http) {\n         }\n     }\n \n+    // Remove bindings from access control chain that have binding pattern as a different filter chain\n+    private void removeDuplicateBindingsFromAccessControlChain(Http http) {\n+        Set<FilterBinding> duplicateBindings = new HashSet<>();\n+        for (FilterBinding binding : http.getBindings()) {\n+            if (binding.filterId().toId().equals(ACCESS_CONTROL_CHAIN_ID)) {", "originalCommit": "40b8fd053051bd0f462ca7d400f0407c7961969f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8373e8d51ff3019e94f82211df16efae23080fe6", "url": "https://github.com/vespa-engine/vespa/commit/8373e8d51ff3019e94f82211df16efae23080fe6", "message": "Delegate configuration of noop filter to amender\n\nThe open-source model cannot configure the the noop filter, otherwise unit tests using application framework will fail when 'access-control' is in services.xml.", "committedDate": "2020-08-18T11:25:58Z", "type": "commit"}, {"oid": "e8f176b37a012028242b6983f0ac92994b5ec8b8", "url": "https://github.com/vespa-engine/vespa/commit/e8f176b37a012028242b6983f0ac92994b5ec8b8", "message": "Rename 'fromPortAndPath' -> 'fromHttpPortAndPath'", "committedDate": "2020-08-18T11:48:06Z", "type": "commit"}, {"oid": "62d961016037e31b7d2c2abb80f087c9bf0acf49", "url": "https://github.com/vespa-engine/vespa/commit/62d961016037e31b7d2c2abb80f087c9bf0acf49", "message": "Don't duplicate container element in all unit tests", "committedDate": "2020-08-18T11:54:41Z", "type": "commit"}, {"oid": "39023ba2fd955c51a430aa5886c7fe5344050a9e", "url": "https://github.com/vespa-engine/vespa/commit/39023ba2fd955c51a430aa5886c7fe5344050a9e", "message": "Component spec in FilterBinding refers to a chain not filter", "committedDate": "2020-08-18T11:57:20Z", "type": "commit"}, {"oid": "c13793f64a364babc5032b5229223b562cd54fed", "url": "https://github.com/vespa-engine/vespa/commit/c13793f64a364babc5032b5229223b562cd54fed", "message": "Rename 'configure' -> 'configureHttpFilterChains'", "committedDate": "2020-08-18T12:13:07Z", "type": "commit"}]}