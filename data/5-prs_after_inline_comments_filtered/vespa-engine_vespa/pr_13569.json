{"pr_number": 13569, "pr_title": "Extract time stamp from path instead of modified time", "pr_createdAt": "2020-06-12T13:46:36Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/13569", "timeline": [{"oid": "4a36842785c919e626fcb3665e8be9d4a9df31a6", "url": "https://github.com/vespa-engine/vespa/commit/4a36842785c919e626fcb3665e8be9d4a9df31a6", "message": "Extract time stamp from path instead of modified time", "committedDate": "2020-06-12T13:46:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQyOTU5MA==", "url": "https://github.com/vespa-engine/vespa/pull/13569#discussion_r439429590", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    System.err.println(logsByTimestamp);", "author": "jonmv", "createdAt": "2020-06-12T13:49:23Z", "path": "container-core/src/main/java/com/yahoo/container/handler/LogReader.java", "diffHunk": "@@ -127,15 +134,53 @@ public FileVisitResult postVisitDirectory(Path dir, IOException exc) {\n             throw new UncheckedIOException(e);\n         }\n \n-        List<Path> sorted = new ArrayList<>();\n-        for (var entries = paths.entrySet().stream().sorted(comparing(Map.Entry::getValue)).iterator(); entries.hasNext(); ) {\n-            var entry = entries.next();\n-            if (entry.getValue().isAfter(from))\n-                sorted.add(entry.getKey());\n-            if (entry.getValue().isAfter(to))\n+        var logsByTimestamp = paths.stream()\n+                                   .collect(Collectors.groupingBy(this::extractTimestamp,\n+                                                                  TreeMap::new,\n+                                                                  Collectors.toList()));\n+        System.err.println(logsByTimestamp);", "originalCommit": "4a36842785c919e626fcb3665e8be9d4a9df31a6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b2ec1bd2e5007fa8b67a21f9a5f1e4c0e6eee4fd", "url": "https://github.com/vespa-engine/vespa/commit/b2ec1bd2e5007fa8b67a21f9a5f1e4c0e6eee4fd", "message": "Remove serr", "committedDate": "2020-06-12T13:49:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQzMDM0Nw==", "url": "https://github.com/vespa-engine/vespa/pull/13569#discussion_r439430347", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                                Integer.parseInt(matcher.group(6)) + 1, // timestamp is that of the last entry, with seconds truncated\n          \n          \n            \n                                                Integer.parseInt(matcher.group(6)) + 1, // timestamp is that of the last entry, truncated to second accuracy", "author": "jonmv", "createdAt": "2020-06-12T13:50:38Z", "path": "container-core/src/main/java/com/yahoo/container/handler/LogReader.java", "diffHunk": "@@ -127,15 +134,52 @@ public FileVisitResult postVisitDirectory(Path dir, IOException exc) {\n             throw new UncheckedIOException(e);\n         }\n \n-        List<Path> sorted = new ArrayList<>();\n-        for (var entries = paths.entrySet().stream().sorted(comparing(Map.Entry::getValue)).iterator(); entries.hasNext(); ) {\n-            var entry = entries.next();\n-            if (entry.getValue().isAfter(from))\n-                sorted.add(entry.getKey());\n-            if (entry.getValue().isAfter(to))\n+        var logsByTimestamp = paths.stream()\n+                                   .collect(Collectors.groupingBy(this::extractTimestamp,\n+                                                                  TreeMap::new,\n+                                                                  Collectors.toList()));\n+\n+        List<List<Path>> sorted = new ArrayList<>();\n+        for (var entry : logsByTimestamp.entrySet()) {\n+            if (entry.getKey().isAfter(from))\n+                sorted.add(entry.getValue());\n+            if (entry.getKey().isAfter(to))\n                 break;\n         }\n         return sorted;\n     }\n \n+    /** Extracts a timestamp after all entries in the log file with the given path. */\n+    Instant extractTimestamp(Path path) {\n+        String relativePath = logDirectory.relativize(path).toString();\n+        Matcher matcher = logArchivePathPattern.matcher(relativePath);\n+        if (matcher.matches()) {\n+            return ZonedDateTime.of(Integer.parseInt(matcher.group(1)),\n+                                    Integer.parseInt(matcher.group(2)),\n+                                    Integer.parseInt(matcher.group(3)),\n+                                    Integer.parseInt(matcher.group(4)) + 1, // timestamp is start of hour range of the log file\n+                                    0,\n+                                    0,\n+                                    0,\n+                                    ZoneId.of(\"UTC\"))\n+                                .toInstant();\n+        }\n+        matcher = vespaLogPathPattern.matcher(relativePath);\n+        if (matcher.matches()) {\n+            if (matcher.group(1) == null)\n+                return Instant.MAX;\n+\n+            return ZonedDateTime.of(Integer.parseInt(matcher.group(1)),\n+                                    Integer.parseInt(matcher.group(2)),\n+                                    Integer.parseInt(matcher.group(3)),\n+                                    Integer.parseInt(matcher.group(4)),\n+                                    Integer.parseInt(matcher.group(5)),\n+                                    Integer.parseInt(matcher.group(6)) + 1, // timestamp is that of the last entry, with seconds truncated", "originalCommit": "b2ec1bd2e5007fa8b67a21f9a5f1e4c0e6eee4fd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f6979d980148739185c8745f03ff20406fceb463", "url": "https://github.com/vespa-engine/vespa/commit/f6979d980148739185c8745f03ff20406fceb463", "message": "Fix comment", "committedDate": "2020-06-12T13:50:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQzNzk0OA==", "url": "https://github.com/vespa-engine/vespa/pull/13569#discussion_r439437948", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                static final Pattern logArchivePathPattern = Pattern.compile(\"(\\\\d{4})/(\\\\d{2})/(\\\\d{2})/(\\\\d{2})-\\\\d(.gz)?\");\n          \n          \n            \n                static final Pattern logArchivePathPattern = Pattern.compile(\"(\\\\d{4})/(\\\\d{2})/(\\\\d{2})/(\\\\d{2})-\\\\d+(.gz)?\");", "author": "jonmv", "createdAt": "2020-06-12T14:02:29Z", "path": "container-core/src/main/java/com/yahoo/container/handler/LogReader.java", "diffHunk": "@@ -39,6 +41,9 @@\n  */\n class LogReader {\n \n+    static final Pattern logArchivePathPattern = Pattern.compile(\"(\\\\d{4})/(\\\\d{2})/(\\\\d{2})/(\\\\d{2})-\\\\d(.gz)?\");", "originalCommit": "f6979d980148739185c8745f03ff20406fceb463", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "06a7fd08498b1c84cdae5d1b9ece544dde1280bf", "url": "https://github.com/vespa-engine/vespa/commit/06a7fd08498b1c84cdae5d1b9ece544dde1280bf", "message": "Allow higher generatino than 9", "committedDate": "2020-06-12T14:02:42Z", "type": "commit"}]}