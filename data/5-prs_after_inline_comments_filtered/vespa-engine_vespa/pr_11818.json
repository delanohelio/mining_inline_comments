{"pr_number": 11818, "pr_title": "Reboot on memory change", "pr_createdAt": "2020-01-16T14:50:34Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/11818", "timeline": [{"oid": "31e9065ca43cf0ff7d22916317aca6efc2852301", "url": "https://github.com/vespa-engine/vespa/commit/31e9065ca43cf0ff7d22916317aca6efc2852301", "message": "Always set restartGeneration in active state in test", "committedDate": "2020-01-16T14:29:46Z", "type": "commit"}, {"oid": "fe0acea095ca21087ac803c4c72e128821f91a86", "url": "https://github.com/vespa-engine/vespa/commit/fe0acea095ca21087ac803c4c72e128821f91a86", "message": "Reboot container on memory resources change", "committedDate": "2020-01-16T14:31:36Z", "type": "commit"}, {"oid": "d55ce4bf80eeb88924ce6fee292463dbae3514c5", "url": "https://github.com/vespa-engine/vespa/commit/d55ce4bf80eeb88924ce6fee292463dbae3514c5", "message": "Combine restarts with reboots", "committedDate": "2020-01-16T14:47:03Z", "type": "commit"}, {"oid": "abcb7bf04aff13d0390d44fbaf0fe8b88c2325d4", "url": "https://github.com/vespa-engine/vespa/commit/abcb7bf04aff13d0390d44fbaf0fe8b88c2325d4", "message": "Return list of all reasons to remove container", "committedDate": "2020-01-16T14:47:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQ4MzU1Ng==", "url": "https://github.com/vespa-engine/vespa/pull/11818#discussion_r367483556", "bodyText": "there is already a log() above so this can be removed.", "author": "hakonhall", "createdAt": "2020-01-16T15:30:10Z", "path": "node-admin/src/main/java/com/yahoo/vespa/hosted/node/admin/nodeagent/NodeAgentImpl.java", "diffHunk": "@@ -205,15 +209,18 @@ private void startContainer(NodeAgentContext context) {\n     private Optional<Container> removeContainerIfNeededUpdateContainerState(\n             NodeAgentContext context, Optional<Container> existingContainer) {\n         if (existingContainer.isPresent()) {\n-            Optional<String> reason = shouldRemoveContainer(context, existingContainer.get());\n-            if (reason.isPresent()) {\n-                removeContainer(context, existingContainer.get(), reason.get(), false);\n+            List<String> reasons = shouldRemoveContainer(context, existingContainer.get());\n+            if (!reasons.isEmpty()) {\n+                removeContainer(context, existingContainer.get(), reasons, false);\n                 return Optional.empty();\n             }\n \n             shouldRestartServices(context, existingContainer.get()).ifPresent(restartReason -> {\n                 context.log(logger, \"Will restart services: \" + restartReason);\n-                restartServices(context, existingContainer.get());\n+                orchestratorSuspendNode(context);\n+\n+                dockerOperations.restartVespa(context);\n+                context.log(logger, \"Restarted services\");", "originalCommit": "abcb7bf04aff13d0390d44fbaf0fe8b88c2325d4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQ4NjUwMQ==", "url": "https://github.com/vespa-engine/vespa/pull/11818#discussion_r367486501", "bodyText": "I'd vote for comma-separated rather than newline, as the latter is not so good with grep and is visually extravagant.", "author": "hakonhall", "createdAt": "2020-01-16T15:35:04Z", "path": "node-admin/src/main/java/com/yahoo/vespa/hosted/node/admin/nodeagent/NodeAgentImpl.java", "diffHunk": "@@ -286,31 +277,40 @@ public void suspend(NodeAgentContext context) {\n         }\n     }\n \n-    private Optional<String> shouldRemoveContainer(NodeAgentContext context, Container existingContainer) {\n+    private List<String> shouldRemoveContainer(NodeAgentContext context, Container existingContainer) {\n         final NodeState nodeState = context.node().state();\n-        if (nodeState == NodeState.dirty || nodeState == NodeState.provisioned) {\n-            return Optional.of(\"Node in state \" + nodeState + \", container should no longer be running\");\n-        }\n+        List<String> reasons = new ArrayList<>();\n+        if (nodeState == NodeState.dirty || nodeState == NodeState.provisioned)\n+            reasons.add(\"Node in state \" + nodeState + \", container should no longer be running\");\n+\n         if (context.node().wantedDockerImage().isPresent() &&\n                 !context.node().wantedDockerImage().get().equals(existingContainer.image)) {\n-            return Optional.of(\"The node is supposed to run a new Docker image: \"\n+            reasons.add(\"The node is supposed to run a new Docker image: \"\n                     + existingContainer.image.asString() + \" -> \" + context.node().wantedDockerImage().get().asString());\n         }\n-        if (!existingContainer.state.isRunning()) {\n-            return Optional.of(\"Container no longer running\");\n-        }\n+\n+        if (!existingContainer.state.isRunning())\n+            reasons.add(\"Container no longer running\");\n \n         if (currentRebootGeneration < context.node().wantedRebootGeneration()) {\n-            return Optional.of(String.format(\"Container reboot wanted. Current: %d, Wanted: %d\",\n+            reasons.add(String.format(\"Container reboot wanted. Current: %d, Wanted: %d\",\n                     currentRebootGeneration, context.node().wantedRebootGeneration()));\n         }\n \n-        if (containerState == STARTING) return Optional.of(\"Container failed to start\");\n-        return Optional.empty();\n+        ContainerResources wantedContainerResources = getContainerResources(context);\n+        if (!wantedContainerResources.equalsMemory(existingContainer.resources)) {\n+            reasons.add(\"Container should be running with different memory allocation, wanted: \" +\n+                    wantedContainerResources.toStringMemory() + \", actual: \" + existingContainer.resources.toStringMemory());\n+        }\n+\n+        if (containerState == STARTING)\n+            reasons.add(\"Container failed to start\");\n+\n+        return reasons;\n     }\n \n-    private void removeContainer(NodeAgentContext context, Container existingContainer, String reason, boolean alreadySuspended) {\n-        context.log(logger, \"Will remove container: \" + reason);\n+    private void removeContainer(NodeAgentContext context, Container existingContainer, List<String> reasons, boolean alreadySuspended) {\n+        context.log(logger, \"Will remove container: \" + (reasons.size() == 1 ? reasons.get(0) : \"\\n\" + String.join(\"\\n\", reasons)));", "originalCommit": "abcb7bf04aff13d0390d44fbaf0fe8b88c2325d4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "91bc981ee8e4857827a8606dff4005c36fdd7f1d", "url": "https://github.com/vespa-engine/vespa/commit/91bc981ee8e4857827a8606dff4005c36fdd7f1d", "message": "Log fixing", "committedDate": "2020-01-16T15:43:29Z", "type": "commit"}]}