{"pr_number": 1655, "pr_title": "Make Repository rebuilder handle binaries", "pr_createdAt": "2020-04-04T21:21:25Z", "pr_url": "https://github.com/fcrepo/fcrepo/pull/1655", "timeline": [{"oid": "1660acc58bb2ac2aeaee11634aa6a049e925313a", "url": "https://github.com/fcrepo/fcrepo/commit/1660acc58bb2ac2aeaee11634aa6a049e925313a", "message": "Handle binary descriptions on rebuild", "committedDate": "2020-04-09T15:36:22Z", "type": "commit"}, {"oid": "a1fd56b0fb90b1df3b2f156f4ac948bbb9badcbe", "url": "https://github.com/fcrepo/fcrepo/commit/a1fd56b0fb90b1df3b2f156f4ac948bbb9badcbe", "message": "Add integration test for webapp in RebuildIT\n\n- Ensure context is refreshed before running this test\n- Update test data used in RebuildIT to currently produced OCFL\n- Update dependency version of failsafe (not necessary for this PR)\n- Add debug output for one FedoraHtmlIT (not necessary for this PR)\n\nRelated to: https://jira.lyrasis.org/browse/FCREPO-3268", "committedDate": "2020-04-09T15:36:22Z", "type": "commit"}, {"oid": "d672381f5fb3469fb1bfd6ee29bbe45fa2b30a65", "url": "https://github.com/fcrepo/fcrepo/commit/d672381f5fb3469fb1bfd6ee29bbe45fa2b30a65", "message": "Revert unnecessary changes", "committedDate": "2020-04-09T15:36:22Z", "type": "commit"}, {"oid": "3b1c7c5f391dd8bdb53bcecdef3c48afb927cbd9", "url": "https://github.com/fcrepo/fcrepo/commit/3b1c7c5f391dd8bdb53bcecdef3c48afb927cbd9", "message": "Use URLEncoder", "committedDate": "2020-04-09T15:36:22Z", "type": "commit"}, {"oid": "3b1c7c5f391dd8bdb53bcecdef3c48afb927cbd9", "url": "https://github.com/fcrepo/fcrepo/commit/3b1c7c5f391dd8bdb53bcecdef3c48afb927cbd9", "message": "Use URLEncoder", "committedDate": "2020-04-09T15:36:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM1ODE4Mg==", "url": "https://github.com/fcrepo/fcrepo/pull/1655#discussion_r406358182", "bodyText": "Curious why this was needed? It doesn't appear to be changing any info, and kernel-api is available in persistence.", "author": "bbpennel", "createdAt": "2020-04-09T17:22:00Z", "path": "fcrepo-persistence-api/src/main/java/org/fcrepo/persistence/api/PersistenceConstants.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.persistence.api;\n+\n+import static org.fcrepo.kernel.api.RdfLexicon.FEDORA_NON_RDF_SOURCE_DESCRIPTION_URI;\n+\n+/**\n+ * Class for persistence constants.\n+ */\n+public final class PersistenceConstants {\n+\n+    /**\n+     * Bringing from kernel level.\n+     */\n+    public static final String PERSISTENCE_FEDORA_NON_RDF_SOURCE_DESCRIPTION = FEDORA_NON_RDF_SOURCE_DESCRIPTION_URI;", "originalCommit": "3b1c7c5f391dd8bdb53bcecdef3c48afb927cbd9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQxNTgyNg==", "url": "https://github.com/fcrepo/fcrepo/pull/1655#discussion_r406415826", "bodyText": "It did seem to work for me, I'll try again. Maybe when I rebased on the latest changes I missed something.", "author": "whikloj", "createdAt": "2020-04-09T19:04:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM1ODE4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQyODcyNA==", "url": "https://github.com/fcrepo/fcrepo/pull/1655#discussion_r406428724", "bodyText": "I'm really not sure anymore, but it is not needed and I have removed it. \ud83e\udd37", "author": "whikloj", "createdAt": "2020-04-09T19:29:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM1ODE4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM4MjExNg==", "url": "https://github.com/fcrepo/fcrepo/pull/1655#discussion_r406382116", "bodyText": "not that i mind this, but was this intentionally left in?", "author": "bbpennel", "createdAt": "2020-04-09T18:03:52Z", "path": "fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/FedoraHtmlIT.java", "diffHunk": "@@ -104,7 +104,7 @@ public void testGetRootTemplate() throws IOException {\n         method.addHeader(ACCEPT, \"text/html\");\n         try (final CloseableHttpResponse response = execute(method)) {\n             final String html = EntityUtils.toString(response.getEntity());\n-            assertTrue(contains(html, \"class=\\\"fcrepo_root\\\"\"));\n+            assertTrue(html, contains(html, \"class=\\\"fcrepo_root\\\"\"));", "originalCommit": "3b1c7c5f391dd8bdb53bcecdef3c48afb927cbd9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQyNTQ4OA==", "url": "https://github.com/fcrepo/fcrepo/pull/1655#discussion_r406425488", "bodyText": "This was part of @awoods PR on this branch. Now I'm not sure so much.", "author": "whikloj", "createdAt": "2020-04-09T19:23:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM4MjExNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQwNTEwMA==", "url": "https://github.com/fcrepo/fcrepo/pull/1655#discussion_r406405100", "bodyText": "I'm trying to understand if this is the case and I can't test at the moment, so I may be totally off, but it seems like if you have an archival group which contains a binary, then everything else in the AG would also have the binary as its root instead of the AG? Do we only want to set the root for a description to the binary if its not in an AG, or do we always want to do this?", "author": "bbpennel", "createdAt": "2020-04-09T18:44:28Z", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/FedoraToOCFLObjectIndexUtilImpl.java", "diffHunk": "@@ -80,8 +83,11 @@ public void rebuild() {\n                                 fedoraIds.add(headers.getId());\n                                 if (headers.isArchivalGroup()) {\n                                     rootId.set(headers.getId());\n+                                } else if (Objects.equals(headers.getInteractionModel(),\n+                                        PERSISTENCE_FEDORA_NON_RDF_SOURCE_DESCRIPTION)) {\n+                                    rootId.set(headers.getParent());", "originalCommit": "3b1c7c5f391dd8bdb53bcecdef3c48afb927cbd9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQxMjc0MQ==", "url": "https://github.com/fcrepo/fcrepo/pull/1655#discussion_r406412741", "bodyText": "I think that's right @bbpennel.  And we also want to account for fcr:acl  as well.", "author": "dbernstein", "createdAt": "2020-04-09T18:58:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQwNTEwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQyNzM5NA==", "url": "https://github.com/fcrepo/fcrepo/pull/1655#discussion_r406427394", "bodyText": "Maybe changing this to\n} else if (Objects.equals(headers.getInteractionModel(),\n                                        FEDORA_NON_RDF_SOURCE_DESCRIPTION_URI) &&\n               rootId.get() == null) {\n\nSo it only sets it if the archival group hasn't set it, and if the archival group comes later it would overwrite.", "author": "whikloj", "createdAt": "2020-04-09T19:27:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQwNTEwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQzMjk3Nw==", "url": "https://github.com/fcrepo/fcrepo/pull/1655#discussion_r406432977", "bodyText": "Perhaps this is my lack of knowledge of how this was designed. In the case of an AG we know the root, but in the case of something else what (in the JSON) identifies it as the root?", "author": "whikloj", "createdAt": "2020-04-09T19:38:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQwNTEwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQzNDg5MQ==", "url": "https://github.com/fcrepo/fcrepo/pull/1655#discussion_r406434891", "bodyText": "hmm, i don't think anything in the json identifies it as the root. We had talked about potentially using a special name for the root object, although i'm forgetting what it was at the moment. Seems like once we find the root, we don't need to hunt for roots anymore, so maybe only do any of if (headers.isArchivalGroup()) { block if the root id is still null?", "author": "bbpennel", "createdAt": "2020-04-09T19:42:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQwNTEwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQ1OTI4NQ==", "url": "https://github.com/fcrepo/fcrepo/pull/1655#discussion_r406459285", "bodyText": "Right, my question is what is the root ID for a non-archival group? I'd prefer not to check for each Fedora type, so if we can codify this in the JSON all the better.\nBefore this PR the root for the binary and binary description was null because the code was only setting a root for AGs or if there was a single file it became its own root.\nWe need a way for multiple files in a single object (binary description, ACL, etc) but not an AG to have the root defined. Maybe on top of \"archivalGroup\":(true|false) we need a \"objectRoot\":(true|false)?", "author": "whikloj", "createdAt": "2020-04-09T20:30:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQwNTEwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUwNTI2Mw==", "url": "https://github.com/fcrepo/fcrepo/pull/1655#discussion_r406505263", "bodyText": "For a non-archival group,  the root is itself.\nhttp://localhost:8080/rest/binary ->   root= info:fedora/binary  resource=info:fedora/binary\nFor the non rdf description:\nhttp://localhost:8080/rest/binary/fcr:metadata ->   root=  info:fedora/binary resource= info:fedora/binary/fcr:metadata", "author": "dbernstein", "createdAt": "2020-04-09T22:09:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQwNTEwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUwNTUwNw==", "url": "https://github.com/fcrepo/fcrepo/pull/1655#discussion_r406505507", "bodyText": "Perhaps I'm missing something?", "author": "dbernstein", "createdAt": "2020-04-09T22:09:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQwNTEwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg1ODQzOQ==", "url": "https://github.com/fcrepo/fcrepo/pull/1655#discussion_r406858439", "bodyText": "What I am wondering is is there a way to determine the correct root Id for resources without checking if\nif (\n  Objects.equals(obj.getInteractionModel(), FEDORA_NON_RDF_SOURCE_DESCRIPTION_URI) ||\n  obj.getId().endsWith(FCR_ACL))\n) {\n\nOtherwise what I am doing will (as in your PR) have to be expanded to cover a bunch of different cases. If we can generalize that relationship between supporting resources (like binary descriptions and ACLs) and the resources they support, then we don't need to check the type of object in the rebuild process.", "author": "whikloj", "createdAt": "2020-04-10T17:25:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQwNTEwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg3MDI5MQ==", "url": "https://github.com/fcrepo/fcrepo/pull/1655#discussion_r406870291", "bodyText": "I think I see what you're saying.   If we add \"objectRoot\": (true|false) to the ResourceHeaders.json, then we don't have to deal with inspecting the interaction model.", "author": "dbernstein", "createdAt": "2020-04-10T17:53:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQwNTEwMA=="}], "type": "inlineReview"}, {"oid": "b4a71287d77d75662648777d92b6beb36f24a95f", "url": "https://github.com/fcrepo/fcrepo/commit/b4a71287d77d75662648777d92b6beb36f24a95f", "message": "Clearly I did something wrong", "committedDate": "2020-04-09T19:22:36Z", "type": "commit"}]}