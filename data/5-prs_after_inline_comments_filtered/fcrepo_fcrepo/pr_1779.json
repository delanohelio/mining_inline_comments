{"pr_number": 1779, "pr_title": "Combine all SMT exceptions together and provide valid constraints", "pr_createdAt": "2020-10-15T18:30:51Z", "pr_url": "https://github.com/fcrepo/fcrepo/pull/1779", "timeline": [{"oid": "2bd5105d3de3c5529b52a701a6806d8e33cc7796", "url": "https://github.com/fcrepo/fcrepo/commit/2bd5105d3de3c5529b52a701a6806d8e33cc7796", "message": "Combine all SMT exceptions together and provide valid constraints", "committedDate": "2020-10-15T18:29:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzcxMjczMw==", "url": "https://github.com/fcrepo/fcrepo/pull/1779#discussion_r507712733", "bodyText": "Shouldn't this be above line 131?", "author": "pwinckles", "createdAt": "2020-10-19T12:39:55Z", "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/services/SparqlTranslateVisitor.java", "diffHunk": "@@ -123,13 +129,20 @@ private void translateUpdate(final UpdateModify update) {\n         final List<Quad> deleteQuads = (update.hasDeleteClause() ? translateQuads(update.getDeleteQuads()) :\n                 Collections.emptyList());\n         deleteQuads.forEach(q -> newUpdate.getDeleteAcc().addQuad(q));\n+        assertNoExceptions();", "originalCommit": "2bd5105d3de3c5529b52a701a6806d8e33cc7796", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzcxNTk4Ng==", "url": "https://github.com/fcrepo/fcrepo/pull/1779#discussion_r507715986", "bodyText": "Why not just change this to be: public static Link buildConstrainLink(final Throwable e, [...]);?", "author": "pwinckles", "createdAt": "2020-10-19T12:45:18Z", "path": "fcrepo-http-commons/src/main/java/org/fcrepo/http/commons/exceptionhandlers/ConstraintExceptionMapper.java", "diffHunk": "@@ -51,15 +51,29 @@\n     public static Link buildConstraintLink(final ConstraintViolationException e,", "originalCommit": "2bd5105d3de3c5529b52a701a6806d8e33cc7796", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc1MTY2OQ==", "url": "https://github.com/fcrepo/fcrepo/pull/1779#discussion_r507751669", "bodyText": "I think the reason for that (though I didn't write that part) is because only constraint violations will have the actual RDF file backing the URL to be created here.", "author": "whikloj", "createdAt": "2020-10-19T13:36:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzcxNTk4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc1Mzg3MQ==", "url": "https://github.com/fcrepo/fcrepo/pull/1779#discussion_r507753871", "bodyText": "Right, but you refactored it to add a method that accepts a string class name. I could keep the code the same and just change the method signature without having to add a new method.", "author": "pwinckles", "createdAt": "2020-10-19T13:39:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzcxNTk4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODIxODc2Mw==", "url": "https://github.com/fcrepo/fcrepo/pull/1779#discussion_r508218763", "bodyText": "Ok, so the reason for the string is only because I couldn't (easily) de-duplicate the Exceptions because they all have different messages and so remained distinct. So I map all the exceptions to their class name and get the distinct set of those. Then I needed to build the constraint link using the class name which is why I added the new String method. I was not opening this up to any exception out there.", "author": "whikloj", "createdAt": "2020-10-20T05:30:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzcxNTk4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ0Njc4MA==", "url": "https://github.com/fcrepo/fcrepo/pull/1779#discussion_r508446780", "bodyText": "Gotcha. Now that the exceptions are defined as a set of ConstraintViolationException. You could change this signature to:\npublic static Link buildConstraintLink(final Class<? extends ConstraintViolationException> e, final ServletContext context, final UriInfo uriInfo);\nand then collected like:\n     final Link[] constraintLinks = e.getExceptionTypes().stream().map(Exception::getClass)\n                .distinct().map(c -> buildConstraintLink(c, context, uriInfo))\n                .toArray(Link[]::new);", "author": "pwinckles", "createdAt": "2020-10-20T12:10:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzcxNTk4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzcxODY5Mw==", "url": "https://github.com/fcrepo/fcrepo/pull/1779#discussion_r507718693", "bodyText": "Is the reason you iterate the exceptions twice because you're collapsing the exception types?", "author": "pwinckles", "createdAt": "2020-10-19T12:49:08Z", "path": "fcrepo-http-commons/src/main/java/org/fcrepo/http/commons/exceptionhandlers/MultipleConstraintViolationExceptionMapper.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.http.commons.exceptionhandlers;\n+\n+import static org.fcrepo.http.commons.domain.RDFMediaType.TEXT_PLAIN_WITH_CHARSET;\n+import static org.slf4j.LoggerFactory.getLogger;\n+\n+import static javax.ws.rs.core.Response.Status.CONFLICT;\n+import static javax.ws.rs.core.Response.status;\n+\n+import javax.servlet.ServletContext;\n+import javax.ws.rs.core.Context;\n+import javax.ws.rs.core.Link;\n+import javax.ws.rs.core.Response;\n+import javax.ws.rs.core.UriInfo;\n+import javax.ws.rs.ext.Provider;\n+\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import org.fcrepo.kernel.api.exception.MultipleConstraintViolationException;\n+import org.slf4j.Logger;\n+\n+/**\n+ * Mapper to display all the various constrainedby links and messages.\n+ * @author whikloj\n+ */\n+@Provider\n+public class MultipleConstraintViolationExceptionMapper extends\n+        ConstraintExceptionMapper<MultipleConstraintViolationException> implements ExceptionDebugLogging {\n+\n+    private static final Logger LOGGER = getLogger(MultipleConstraintViolationExceptionMapper.class);\n+\n+    @Context\n+    private UriInfo uriInfo;\n+\n+    @Context\n+    private ServletContext context;\n+\n+    @Override\n+    public Response toResponse(final MultipleConstraintViolationException e) {\n+        debugException(this, e, LOGGER);\n+\n+        final String msg = e.getMessage();\n+        final Set<String> exceptionClasses = e.getExceptionTypes().stream().map(Exception::getClass)", "originalCommit": "2bd5105d3de3c5529b52a701a6806d8e33cc7796", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc3OTAxNA==", "url": "https://github.com/fcrepo/fcrepo/pull/1779#discussion_r507779014", "bodyText": "I think I cleaned this up into a single iteration in the next commit\n28eeb9b", "author": "whikloj", "createdAt": "2020-10-19T14:08:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzcxODY5Mw=="}], "type": "inlineReview"}, {"oid": "28eeb9bf650b07194f99b5ac0cbfcacbb3db3165", "url": "https://github.com/fcrepo/fcrepo/commit/28eeb9bf650b07194f99b5ac0cbfcacbb3db3165", "message": "Code review", "committedDate": "2020-10-19T14:07:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc5MzYyMw==", "url": "https://github.com/fcrepo/fcrepo/pull/1779#discussion_r507793623", "bodyText": "Should this be constrained to only ConstraintViolationExceptions?", "author": "pwinckles", "createdAt": "2020-10-19T14:26:26Z", "path": "fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/exception/MultipleConstraintViolationException.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.kernel.api.exception;\n+\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+/**\n+ * Wrapper to hold multiple constraint violation exceptions for later reporting.\n+ * @author whikloj\n+ */\n+public class MultipleConstraintViolationException extends ConstraintViolationException {\n+\n+    private Set<Exception> exceptionTypes = new HashSet<>();", "originalCommit": "28eeb9bf650b07194f99b5ac0cbfcacbb3db3165", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODAzODIxNA==", "url": "https://github.com/fcrepo/fcrepo/pull/1779#discussion_r508038214", "bodyText": "Oh yes, I went back and forth a couple of times. Must have missed this.", "author": "whikloj", "createdAt": "2020-10-19T20:21:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc5MzYyMw=="}], "type": "inlineReview"}, {"oid": "b7d11b94af7985934cccbb52cc3d61e2b622ba20", "url": "https://github.com/fcrepo/fcrepo/commit/b7d11b94af7985934cccbb52cc3d61e2b622ba20", "message": "Only collect ConstraintViolationExceptions", "committedDate": "2020-10-19T20:53:22Z", "type": "commit"}, {"oid": "947d7083fca7dfa87208c66d24970aac02984849", "url": "https://github.com/fcrepo/fcrepo/commit/947d7083fca7dfa87208c66d24970aac02984849", "message": "Change from Strings to Classes", "committedDate": "2020-10-20T14:57:38Z", "type": "commit"}]}