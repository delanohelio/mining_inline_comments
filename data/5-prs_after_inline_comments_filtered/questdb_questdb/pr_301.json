{"pr_number": 301, "pr_title": "chore: improved accuracy of round() by more consistent use of tolerance. The latter is adjusted to be lower. JsonQueryProcessor now prints doubles up to scale of 12.", "pr_createdAt": "2020-05-18T16:20:41Z", "pr_url": "https://github.com/questdb/questdb/pull/301", "timeline": [{"oid": "ab19626ce44ee0f6d5fa51039aa5f3505123c510", "url": "https://github.com/questdb/questdb/commit/ab19626ce44ee0f6d5fa51039aa5f3505123c510", "message": "chore: improved accuracy of round() by more consistent use of tolerance. The latter is adjusted to be lower. JsonQueryProcessor now prints doubles up to scale of 12.", "committedDate": "2020-05-18T16:18:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc1NTMxMw==", "url": "https://github.com/questdb/questdb/pull/301#discussion_r426755313", "bodyText": "Do you think this change could fix the issue we are having with bound parameters and PGWire?", "author": "mpsq", "createdAt": "2020-05-18T16:35:29Z", "path": "core/src/main/java/io/questdb/cutlass/pgwire/BindVariableSetter.java", "diffHunk": "@@ -27,6 +27,6 @@\n import io.questdb.griffin.SqlException;\n \n @FunctionalInterface\n-interface BindVariableSetter {\n+public interface BindVariableSetter {", "originalCommit": "ab19626ce44ee0f6d5fa51039aa5f3505123c510", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc1NjU5NQ==", "url": "https://github.com/questdb/questdb/pull/301#discussion_r426756595", "bodyText": "This change seems to be unrelated, was it added accidentally or it is on purpose?", "author": "mpsq", "createdAt": "2020-05-18T16:37:41Z", "path": "core/src/test/java/io/questdb/griffin/KeyedVectorAggregateTest.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*******************************************************************************\n+ *     ___                  _   ____  ____\n+ *    / _ \\ _   _  ___  ___| |_|  _ \\| __ )\n+ *   | | | | | | |/ _ \\/ __| __| | | |  _ \\\n+ *   | |_| | |_| |  __/\\__ \\ |_| |_| | |_) |\n+ *    \\__\\_\\\\__,_|\\___||___/\\__|____/|____/\n+ *\n+ *  Copyright (c) 2014-2019 Appsicle\n+ *  Copyright (c) 2019-2020 QuestDB\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *\n+ ******************************************************************************/\n+\n+package io.questdb.griffin;", "originalCommit": "ab19626ce44ee0f6d5fa51039aa5f3505123c510", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc1NzI0Ng==", "url": "https://github.com/questdb/questdb/pull/301#discussion_r426757246", "bodyText": "Same with std.Hash file", "author": "mpsq", "createdAt": "2020-05-18T16:38:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc1NjU5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc1NzUwNg==", "url": "https://github.com/questdb/questdb/pull/301#discussion_r426757506", "bodyText": "accidentally. I stashed other changes but forgot this file in GIT.", "author": "bluestreak01", "createdAt": "2020-05-18T16:39:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc1NjU5NQ=="}], "type": "inlineReview"}]}