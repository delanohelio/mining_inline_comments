{"pr_number": 5919, "pr_title": "6392 send files to ingest stream", "pr_createdAt": "2020-05-28T17:55:12Z", "pr_url": "https://github.com/sleuthkit/autopsy/pull/5919", "timeline": [{"oid": "58b95e27812d06c2f620f287f321bd3a295a1805", "url": "https://github.com/sleuthkit/autopsy/commit/58b95e27812d06c2f620f287f321bd3a295a1805", "message": "Adding IngestStream.java and IngestStreamClosedException.java", "committedDate": "2020-05-19T18:41:25Z", "type": "commit"}, {"oid": "7b4856c77eb8520e2222bab55f2da89fc2b0bd59", "url": "https://github.com/sleuthkit/autopsy/commit/7b4856c77eb8520e2222bab55f2da89fc2b0bd59", "message": "Continued adding streaming ingest support", "committedDate": "2020-05-22T11:54:47Z", "type": "commit"}, {"oid": "a6afa1b92accacdf264f182ba50c1e684c2e700c", "url": "https://github.com/sleuthkit/autopsy/commit/a6afa1b92accacdf264f182ba50c1e684c2e700c", "message": "Adding IngestJobInputStream.java and AddImageTaskCallback.java", "committedDate": "2020-05-22T13:30:39Z", "type": "commit"}, {"oid": "a819e9166af0fbfbf5aca2b061ddd9dc1b1cd712", "url": "https://github.com/sleuthkit/autopsy/commit/a819e9166af0fbfbf5aca2b061ddd9dc1b1cd712", "message": "New run method in ImageDSProcessor.\nCommenting.", "committedDate": "2020-05-22T19:13:45Z", "type": "commit"}, {"oid": "87bda19be5c16102d8f24ccf016e843e266ef70d", "url": "https://github.com/sleuthkit/autopsy/commit/87bda19be5c16102d8f24ccf016e843e266ef70d", "message": "Added default callback.\nCleanup.", "committedDate": "2020-05-28T11:40:54Z", "type": "commit"}, {"oid": "1e6324fcc33f3534c2b257832663509d1aed6e69", "url": "https://github.com/sleuthkit/autopsy/commit/1e6324fcc33f3534c2b257832663509d1aed6e69", "message": "Cleanup", "committedDate": "2020-05-28T17:12:07Z", "type": "commit"}, {"oid": "916c9aefcfdf09cbbaeafafd2642591f1c2d3d2a", "url": "https://github.com/sleuthkit/autopsy/commit/916c9aefcfdf09cbbaeafafd2642591f1c2d3d2a", "message": "Merge remote-tracking branch 'upstream/develop' into 6392_sendFilesToIngestStream", "committedDate": "2020-05-28T17:12:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA1NjAzOQ==", "url": "https://github.com/sleuthkit/autopsy/pull/5919#discussion_r432056039", "bodyText": "Commented out, not deleted?", "author": "rcordovano", "createdAt": "2020-05-28T19:02:54Z", "path": "Core/src/org/sleuthkit/autopsy/casemodule/AddImageTask.java", "diffHunk": "@@ -52,7 +53,9 @@\n     private final String sha1;\n     private final String sha256;\n     private final DataSourceProcessorProgressMonitor progressMonitor;\n-    private final DataSourceProcessorCallback callback;\n+    //private final DataSourceProcessorCallback callback;", "originalCommit": "916c9aefcfdf09cbbaeafafd2642591f1c2d3d2a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA1Njg4Mw==", "url": "https://github.com/sleuthkit/autopsy/pull/5919#discussion_r432056883", "bodyText": "Perhaps just have an ImageDetails instance variable instead of duplicating the ImageDetails class within the AddImageTask class?", "author": "rcordovano", "createdAt": "2020-05-28T19:04:24Z", "path": "Core/src/org/sleuthkit/autopsy/casemodule/AddImageTask.java", "diffHunk": "@@ -73,40 +76,26 @@\n \n     /**\n      * Constructs a runnable task that adds an image to the case database.\n-     *\n-     * @param deviceId             An ASCII-printable identifier for the device\n-     *                             associated with the data source that is\n-     *                             intended to be unique across multiple cases\n-     *                             (e.g., a UUID).\n-     * @param imagePath            Path to the image file.\n-     * @param sectorSize           The sector size (use '0' for autodetect).\n-     * @param timeZone             The time zone to use when processing dates\n-     *                             and times for the image, obtained from\n-     *                             java.util.TimeZone.getID.\n-     * @param ignoreFatOrphanFiles Whether to parse orphans if the image has a\n-     *                             FAT filesystem.\n-     * @param md5                  The MD5 hash of the image, may be null.\n-     * @param sha1                 The SHA-1 hash of the image, may be null.\n-     * @param sha256               The SHA-256 hash of the image, may be null.\n-     * @param imageWriterPath      Path that a copy of the image should be\n-     *                             written to. Use empty string to disable image\n-     *                             writing\n+     * \n+     * @param imageDetails         Holds all data about the image.\n      * @param progressMonitor      Progress monitor to report progress during\n      *                             processing.\n-     * @param callback             Callback to call when processing is done.\n+     * @param addDataSourceCallbacks  Callback for sending data to the ingest pipeline if an ingest stream is being used.\n+     * @param addImageTaskCallback    Callback for dealing with add image task completion.\n      */\n-    AddImageTask(String deviceId, String imagePath, int sectorSize, String timeZone, boolean ignoreFatOrphanFiles, String md5, String sha1, String sha256, ImageWriterSettings imageWriterSettings,\n-            DataSourceProcessorProgressMonitor progressMonitor, DataSourceProcessorCallback callback) {\n-        this.deviceId = deviceId;\n-        this.imagePath = imagePath;\n-        this.sectorSize = sectorSize;\n-        this.timeZone = timeZone;\n-        this.ignoreFatOrphanFiles = ignoreFatOrphanFiles;\n-        this.md5 = md5;\n-        this.sha1 = sha1;\n-        this.sha256 = sha256;\n-        this.imageWriterSettings = imageWriterSettings;\n-        this.callback = callback;\n+    AddImageTask(ImageDetails imageDetails, DataSourceProcessorProgressMonitor progressMonitor, AddDataSourceCallbacks addDataSourceCallbacks,  \n+            AddImageTaskCallback addImageTaskCallback) {\n+        this.deviceId = imageDetails.deviceId;\n+        this.imagePath = imageDetails.imagePath;\n+        this.sectorSize = imageDetails.sectorSize;\n+        this.timeZone = imageDetails.timeZone;\n+        this.ignoreFatOrphanFiles = imageDetails.ignoreFatOrphanFiles;\n+        this.md5 = imageDetails.md5;\n+        this.sha1 = imageDetails.sha1;\n+        this.sha256 = imageDetails.sha256;\n+        this.imageWriterSettings = imageDetails.imageWriterSettings;\n+        this.addDataSourceCallbacks = addDataSourceCallbacks;\n+        this.addImageTaskCallback = addImageTaskCallback;", "originalCommit": "916c9aefcfdf09cbbaeafafd2642591f1c2d3d2a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA1NzU2MQ==", "url": "https://github.com/sleuthkit/autopsy/pull/5919#discussion_r432057561", "bodyText": "No println's, please.", "author": "rcordovano", "createdAt": "2020-05-28T19:05:42Z", "path": "Core/src/org/sleuthkit/autopsy/casemodule/DefaultIngestStream.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * To change this license header, choose License Headers in Project Properties.\n+ * To change this template file, choose Tools | Templates\n+ * and open the template in the editor.\n+ */\n+package org.sleuthkit.autopsy.casemodule;\n+\n+import java.util.List;\n+import org.sleuthkit.autopsy.ingest.IngestStream;\n+import org.sleuthkit.autopsy.ingest.IngestStreamClosedException;\n+import org.sleuthkit.datamodel.AbstractFile;\n+import org.sleuthkit.datamodel.DataSource;\n+import org.sleuthkit.datamodel.TskCoreException;\n+\n+/**\n+ * This is a default ingest stream to use with the data source processors when an IngestStream is not supplied.\n+ * Adding files/data sources are no-ops but errors will be thrown if there is an attempt\n+ * to access them through this class.\n+ */\n+class DefaultIngestStream implements IngestStream {\n+\n+    private volatile boolean isClosed = false;\n+\n+    @Override\n+    public void addDataSource(long dataSourceObjectId) throws IngestStreamClosedException {\n+        // Do nothing\n+        System.out.println(\"### DefaultAddImageTaskIngestStream - addDataSource \" + dataSourceObjectId);", "originalCommit": "916c9aefcfdf09cbbaeafafd2642591f1c2d3d2a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA2MDIxNw==", "url": "https://github.com/sleuthkit/autopsy/pull/5919#discussion_r432060217", "bodyText": "I think we can reduce code duplication using DefaultIngestStream to call run() from run(DataSourceProcessorProgressMonitor progressMonitor, DataSourceProcessorCallback callback).", "author": "rcordovano", "createdAt": "2020-05-28T19:10:43Z", "path": "Core/src/org/sleuthkit/autopsy/casemodule/ImageDSProcessor.java", "diffHunk": "@@ -192,6 +198,60 @@ public void run(DataSourceProcessorProgressMonitor progressMonitor, DataSourcePr\n         }\n         run(deviceId, imagePath, sectorSize, timeZone, ignoreFatOrphanFiles, md5, sha1, sha256, progressMonitor, callback);\n     }\n+    \n+    /**\n+     * Adds a data source to the case database using a background task in a\n+     * separate thread and the settings provided by the selection and\n+     * configuration panel. Files found during ingest will be sent directly to the\n+     * IngestStream provided. Returns as soon as the background task is started.\n+     * The background task uses a callback object to signal task completion and\n+     * return results.\n+     *\n+     * This method should not be called unless isPanelValid returns true, and \n+     * should only be called for DSPs that support ingest streams.\n+     * \n+     * @param progress        Progress monitor that will be used by the\n+     *                        background task to report progress.\n+     * @param callBack        Callback that will be used by the background task\n+     *                        to return results.\n+     * @param ingestStream    The ingest stream to send data to\n+     */\n+    @Override\n+    public void run(DataSourceProcessorProgressMonitor progress, DataSourceProcessorCallback callBack, IngestStream ingestStream) {\n+        this.ingestStream = ingestStream;\n+        if (!setDataSourceOptionsCalled) {\n+            configPanel.storeSettings();\n+            deviceId = UUID.randomUUID().toString();\n+            imagePath = configPanel.getContentPaths();\n+            sectorSize = configPanel.getSectorSize();\n+            timeZone = configPanel.getTimeZone();\n+            ignoreFatOrphanFiles = configPanel.getNoFatOrphans();\n+            md5 = configPanel.getMd5();\n+            if (md5.isEmpty()) {\n+                md5 = null;\n+            }\n+            sha1 = configPanel.getSha1();\n+            if (sha1.isEmpty()) {\n+                sha1 = null;\n+            }\n+            sha256 = configPanel.getSha256();\n+            if (sha256.isEmpty()) {\n+                sha256 = null;\n+            }\n+        }\n+                \n+        run(deviceId, imagePath, sectorSize, timeZone, ignoreFatOrphanFiles, md5, sha1, sha256, progress, callBack);\n+    }", "originalCommit": "916c9aefcfdf09cbbaeafafd2642591f1c2d3d2a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA2MjYxNw==", "url": "https://github.com/sleuthkit/autopsy/pull/5919#discussion_r432062617", "bodyText": "It looks like this class is the same as the one in ImageDSProcessor. We should probably have just one version of the class that is used by both DSPs.", "author": "rcordovano", "createdAt": "2020-05-28T19:15:18Z", "path": "Core/src/org/sleuthkit/autopsy/casemodule/LocalDiskDSProcessor.java", "diffHunk": "@@ -221,6 +234,32 @@ public void reset() {\n         ignoreFatOrphanFiles = false;\n         setDataSourceOptionsCalled = false;\n     }\n+    \n+    private static class AddLocalDiskCallbacks implements AddDataSourceCallbacks {\n+        private final IngestStream ingestStream;\n+        \n+        AddLocalDiskCallbacks(IngestStream stream) {\n+            ingestStream = stream;\n+        }\n+\n+        @Override\n+        public void onDataSourceAdded(long dataSourceObjectId) throws AddDataSourceCallbacksException {\n+            try {\n+                ingestStream.addDataSource(dataSourceObjectId);\n+            } catch (IngestStreamClosedException ex) {\n+                throw new AddDataSourceCallbacksException(\"Error adding files to ingest stream - ingest stream is closed\", ex);\n+            }\n+        }\n+        \n+        @Override\n+        public void onFilesAdded(List<Long> fileObjectIds) throws AddDataSourceCallbacksException {\n+            try {\n+                ingestStream.addFiles(fileObjectIds);\n+            } catch (IngestStreamClosedException ex) {\n+                throw new AddDataSourceCallbacksException(\"Error adding files to ingest stream - ingest stream is closed\", ex);\n+            }\n+        }\n+    }", "originalCommit": "916c9aefcfdf09cbbaeafafd2642591f1c2d3d2a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA2NDk4Mg==", "url": "https://github.com/sleuthkit/autopsy/pull/5919#discussion_r432064982", "bodyText": "I don't think this class needs to be public.", "author": "rcordovano", "createdAt": "2020-05-28T19:19:57Z", "path": "Core/src/org/sleuthkit/autopsy/ingest/IngestJobInputStream.java", "diffHunk": "@@ -0,0 +1,130 @@\n+/*\n+ * Autopsy Forensic Browser\n+ *\n+ * Copyright 2020 Basis Technology Corp.\n+ * Contact: carrier <at> sleuthkit <dot> org\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.sleuthkit.autopsy.ingest;\n+\n+import java.util.ArrayList;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Queue;\n+import org.sleuthkit.autopsy.casemodule.Case;\n+import org.sleuthkit.autopsy.casemodule.NoCurrentCaseException;\n+import org.sleuthkit.datamodel.AbstractFile;\n+import org.sleuthkit.datamodel.DataSource;\n+import org.sleuthkit.datamodel.TskCoreException;\n+import org.sleuthkit.datamodel.TskDataException;\n+\n+/**\n+ * Implementation of IngestStream. Will collect data from the data source\n+ * processor to be sent to the ingest pipeline.\n+ */\n+public class IngestJobInputStream implements IngestStream {", "originalCommit": "916c9aefcfdf09cbbaeafafd2642591f1c2d3d2a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "eb898d83b07a3486ef83c247970123ebb6dfc695", "url": "https://github.com/sleuthkit/autopsy/commit/eb898d83b07a3486ef83c247970123ebb6dfc695", "message": "Merge remote-tracking branch 'upstream/develop' into 6392_sendFilesToIngestStream", "committedDate": "2020-05-29T12:55:19Z", "type": "commit"}, {"oid": "5e5bf0b5663c911f9f5df306ecb795d5ed91abef", "url": "https://github.com/sleuthkit/autopsy/commit/5e5bf0b5663c911f9f5df306ecb795d5ed91abef", "message": "Review fixes", "committedDate": "2020-05-29T15:15:59Z", "type": "commit"}]}