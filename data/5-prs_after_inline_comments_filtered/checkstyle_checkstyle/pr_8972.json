{"pr_number": 8972, "pr_title": "Issue #8873: RequireThis: Incorrectly triggers for record fields in compact constructor", "pr_createdAt": "2020-11-09T05:37:10Z", "pr_url": "https://github.com/checkstyle/checkstyle/pull/8972", "timeline": [{"oid": "c78340062e05d5605717e5a05bd533c0900b9921", "url": "https://github.com/checkstyle/checkstyle/commit/c78340062e05d5605717e5a05bd533c0900b9921", "message": "Issue #8873: RequireThis: Incorrectly triggers for record fields in compact constructor", "committedDate": "2020-11-09T05:37:20Z", "type": "forcePushed"}, {"oid": "01d9c9ab0e354c8768632449c6dc692b879c9535", "url": "https://github.com/checkstyle/checkstyle/commit/01d9c9ab0e354c8768632449c6dc692b879c9535", "message": "Issue #8873: RequireThis: Incorrectly triggers for record fields in compact constructor", "committedDate": "2020-11-09T05:45:11Z", "type": "forcePushed"}, {"oid": "1091d0bbf9f9cc6dfce8fcfe36c79cda40631a9f", "url": "https://github.com/checkstyle/checkstyle/commit/1091d0bbf9f9cc6dfce8fcfe36c79cda40631a9f", "message": "Issue #8873: RequireThis: Incorrectly triggers for record fields in compact constructor", "committedDate": "2020-11-09T05:47:34Z", "type": "forcePushed"}, {"oid": "ef269fb8e90eea21be8b1940748af33ad8c4f5a8", "url": "https://github.com/checkstyle/checkstyle/commit/ef269fb8e90eea21be8b1940748af33ad8c4f5a8", "message": "Issue #8873: RequireThis: Incorrectly triggers for record fields in compact constructor", "committedDate": "2020-11-09T18:50:38Z", "type": "forcePushed"}, {"oid": "0af470a174b09e5549785e7547808c5e88d1bdd4", "url": "https://github.com/checkstyle/checkstyle/commit/0af470a174b09e5549785e7547808c5e88d1bdd4", "message": "Issue #8873: RequireThis: Incorrectly triggers for record fields in compact constructor", "committedDate": "2020-11-10T18:33:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTkwMDI3OQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8972#discussion_r521900279", "bodyText": "This can be easily replaced with a loop. How deep this recursion can be?", "author": "pbludov", "createdAt": "2020-11-12T07:55:13Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java", "diffHunk": "@@ -510,6 +511,21 @@ private AbstractFrame getFieldWithoutThis(DetailAST ast, int parentType) {\n         return frame;\n     }\n \n+    /**\n+     * Return whether ast is in a COMPACT_CTOR_DEF.\n+     *\n+     * @param ast The token to check\n+     * @return true if ast is in a COMPACT_CTOR_DEF, false otherwise\n+     */\n+    private static boolean isInCompactConstructor(DetailAST ast) {\n+        boolean isInCompactCtor = false;\n+        if (ast.getParent() != null) {\n+            isInCompactCtor = ast.getParent().getType() == TokenTypes.COMPACT_CTOR_DEF\n+                                || isInCompactConstructor(ast.getParent());", "originalCommit": "0af470a174b09e5549785e7547808c5e88d1bdd4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjI0MzM2NA==", "url": "https://github.com/checkstyle/checkstyle/pull/8972#discussion_r522243364", "bodyText": "@pbludov You are right. I have replaced it with a loop.\nThe recursion can reasonably be up to 6-8 level deep, depending on how many nested loops, nested expressions there are.", "author": "anhminhtran235", "createdAt": "2020-11-12T16:32:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTkwMDI3OQ=="}], "type": "inlineReview"}, {"oid": "cef905262dc4767010079404278aafe81218832e", "url": "https://github.com/checkstyle/checkstyle/commit/cef905262dc4767010079404278aafe81218832e", "message": "Issue #8873: RequireThis: Incorrectly triggers for record fields in compact constructor", "committedDate": "2020-11-12T16:24:18Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODIwNzA2OQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8972#discussion_r528207069", "bodyText": "This variable can be initialized with ast.getParent(), so the loop simplifies to\n DetailAST tempAst = ast.getParent();\n while (tempAst != null) {\n   if (tempAst.getType() == TokenTypes.COMPACT_CTOR_DEF) {\n   ...\nalso, tempAst can be renamed to parent for readability.", "author": "pbludov", "createdAt": "2020-11-21T15:16:16Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java", "diffHunk": "@@ -510,6 +511,25 @@ private AbstractFrame getFieldWithoutThis(DetailAST ast, int parentType) {\n         return frame;\n     }\n \n+    /**\n+     * Return whether ast is in a COMPACT_CTOR_DEF.\n+     *\n+     * @param ast The token to check\n+     * @return true if ast is in a COMPACT_CTOR_DEF, false otherwise\n+     */\n+    private static boolean isInCompactConstructor(DetailAST ast) {\n+        boolean isInCompactCtor = false;\n+        DetailAST tempAst = ast;", "originalCommit": "cef905262dc4767010079404278aafe81218832e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODIyOTExNQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8972#discussion_r528229115", "bodyText": "fixed", "author": "anhminhtran235", "createdAt": "2020-11-21T18:44:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODIwNzA2OQ=="}], "type": "inlineReview"}, {"oid": "8ec7ca7c611b1424eb2fca2e8ff45e8bbf828b4e", "url": "https://github.com/checkstyle/checkstyle/commit/8ec7ca7c611b1424eb2fca2e8ff45e8bbf828b4e", "message": "Issue #8873: RequireThis: Incorrectly triggers for record fields in compact constructor", "committedDate": "2020-11-21T18:38:09Z", "type": "forcePushed"}, {"oid": "455f3bd31e3efa5cef51d0532b3614b0e6d0362e", "url": "https://github.com/checkstyle/checkstyle/commit/455f3bd31e3efa5cef51d0532b3614b0e6d0362e", "message": "Issue #8873: RequireThis: Incorrectly triggers for record fields in compact constructor", "committedDate": "2020-11-21T18:42:01Z", "type": "commit"}, {"oid": "455f3bd31e3efa5cef51d0532b3614b0e6d0362e", "url": "https://github.com/checkstyle/checkstyle/commit/455f3bd31e3efa5cef51d0532b3614b0e6d0362e", "message": "Issue #8873: RequireThis: Incorrectly triggers for record fields in compact constructor", "committedDate": "2020-11-21T18:42:01Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI0MzkwNg==", "url": "https://github.com/checkstyle/checkstyle/pull/8972#discussion_r528243906", "bodyText": "@romani @pbludov should we consider creating a javac15 CI run for input files, similar to javac14? \n  \n    \n      checkstyle/.ci/travis/travis.sh\n    \n    \n        Lines 118 to 130\n      in\n      be3dab2\n    \n    \n    \n    \n\n        \n          \n           javac14) \n        \n\n        \n          \n             files=($(grep -Rl --include='*.java' ': Compilable with Java14' \\ \n        \n\n        \n          \n                   src/test/resources-noncompilable || true)) \n        \n\n        \n          \n             if [[  ${#files[@]} -eq 0 ]]; then \n        \n\n        \n          \n               echo \"No Java14 files to process\" \n        \n\n        \n          \n             else \n        \n\n        \n          \n                 mkdir -p target \n        \n\n        \n          \n                 for file in \"${files[@]}\" \n        \n\n        \n          \n                 do \n        \n\n        \n          \n                   javac --release 14 --enable-preview -d target \"${file}\" \n        \n\n        \n          \n                 done \n        \n\n        \n          \n             fi \n        \n\n        \n          \n             ;; \n        \n    \n  \n\n Since the changes in this PR relate to jdk15 syntax, and we already have an open issue for jdk15 specific syntax (#8989), this might be a good idea.", "author": "nmancus1", "createdAt": "2020-11-21T21:17:23Z", "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/coding/requirethis/InputRequireThisRecordCompactCtors.java", "diffHunk": "@@ -0,0 +1,17 @@\n+//non-compiled with javac: Compilable with Java14", "originalCommit": "455f3bd31e3efa5cef51d0532b3614b0e6d0362e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI2NzU1OA==", "url": "https://github.com/checkstyle/checkstyle/pull/8972#discussion_r528267558", "bodyText": "We we need this execution in CI", "author": "romani", "createdAt": "2020-11-22T01:45:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI0MzkwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI2Nzc2MA==", "url": "https://github.com/checkstyle/checkstyle/pull/8972#discussion_r528267760", "bodyText": "#9007", "author": "romani", "createdAt": "2020-11-22T01:47:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI0MzkwNg=="}], "type": "inlineReview"}]}