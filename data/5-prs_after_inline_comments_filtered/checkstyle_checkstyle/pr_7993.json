{"pr_number": 7993, "pr_title": "Issue #3946: code cleanup: minimize future xdoc changes", "pr_createdAt": "2020-03-29T20:36:58Z", "pr_url": "https://github.com/checkstyle/checkstyle/pull/7993", "timeline": [{"oid": "bb20ff29333e6cbc55b669ce51af05cd7bb24309", "url": "https://github.com/checkstyle/checkstyle/commit/bb20ff29333e6cbc55b669ce51af05cd7bb24309", "message": "Issue #3946: code cleanup: minimize future xdoc changes", "committedDate": "2020-03-30T07:03:22Z", "type": "forcePushed"}, {"oid": "8f77d3c55a200d94e4ce89365f1726b7d8b79ccf", "url": "https://github.com/checkstyle/checkstyle/commit/8f77d3c55a200d94e4ce89365f1726b7d8b79ccf", "message": "Issue #3946: code cleanup: minimize future xdoc changes", "committedDate": "2020-04-04T13:33:21Z", "type": "forcePushed"}, {"oid": "16ba68dff825aea98555d6b76394179991c3770d", "url": "https://github.com/checkstyle/checkstyle/commit/16ba68dff825aea98555d6b76394179991c3770d", "message": "Issue #3946: code cleanup: minimize future xdoc changes", "committedDate": "2020-04-11T18:00:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcxMDIwNA==", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r407710204", "bodyText": "Please follow other assertions with fileName + \" section '\" + sectionName first.", "author": "rnveach", "createdAt": "2020-04-13T20:45:20Z", "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "diffHunk": "@@ -882,13 +882,25 @@ private static void validatePropertySectionPropertyTokens(String fileName, Strin\n         assertEquals(\"tokens to check\", columns.get(1).getTextContent(),\n                 fileName + \" section '\" + sectionName\n                         + \"' should have the basic token description\");\n-        assertEquals(\"subset of tokens \" + CheckUtil.getTokenText(check.getAcceptableTokens(),\n-                check.getRequiredTokens()),\n-                columns.get(2).getTextContent().replaceAll(\"\\\\s+\", \" \").trim(),\n+\n+        String acceptableTokenText = columns.get(2).getTextContent().trim();\n+        final int removePrefixIdx = \"subset of tokens\".length();\n+        acceptableTokenText = acceptableTokenText.substring(removePrefixIdx);\n+        assertFalse(isInvalidTokenPunctuation(acceptableTokenText),\n+                \", & . should be placed at beginning of the next corresponding lines \"\n+                + \"in \" + fileName + \" acceptable token section: \" + sectionName);", "originalCommit": "16ba68dff825aea98555d6b76394179991c3770d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgzMzUxMg==", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r409833512", "bodyText": "Done", "author": "gaurabdg", "createdAt": "2020-04-16T20:37:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcxMDIwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzNDk5NQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r424034995", "bodyText": "This is not done as nothing changed. Assertion message should start with the file name and section first like the other assertions follow.", "author": "rnveach", "createdAt": "2020-05-12T21:09:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcxMDIwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcxMDM4MA==", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r407710380", "bodyText": "Put single quotes around , and . and write out and so it is clear.", "author": "rnveach", "createdAt": "2020-04-13T20:45:40Z", "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "diffHunk": "@@ -882,13 +882,25 @@ private static void validatePropertySectionPropertyTokens(String fileName, Strin\n         assertEquals(\"tokens to check\", columns.get(1).getTextContent(),\n                 fileName + \" section '\" + sectionName\n                         + \"' should have the basic token description\");\n-        assertEquals(\"subset of tokens \" + CheckUtil.getTokenText(check.getAcceptableTokens(),\n-                check.getRequiredTokens()),\n-                columns.get(2).getTextContent().replaceAll(\"\\\\s+\", \" \").trim(),\n+\n+        String acceptableTokenText = columns.get(2).getTextContent().trim();\n+        final int removePrefixIdx = \"subset of tokens\".length();\n+        acceptableTokenText = acceptableTokenText.substring(removePrefixIdx);\n+        assertFalse(isInvalidTokenPunctuation(acceptableTokenText),\n+                \", & . should be placed at beginning of the next corresponding lines \"", "originalCommit": "16ba68dff825aea98555d6b76394179991c3770d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgzMzU2Mw==", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r409833563", "bodyText": "Done", "author": "gaurabdg", "createdAt": "2020-04-16T20:37:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcxMDM4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcxMDU3NQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r407710575", "bodyText": "same x 2.", "author": "rnveach", "createdAt": "2020-04-13T20:46:05Z", "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "diffHunk": "@@ -882,13 +882,25 @@ private static void validatePropertySectionPropertyTokens(String fileName, Strin\n         assertEquals(\"tokens to check\", columns.get(1).getTextContent(),\n                 fileName + \" section '\" + sectionName\n                         + \"' should have the basic token description\");\n-        assertEquals(\"subset of tokens \" + CheckUtil.getTokenText(check.getAcceptableTokens(),\n-                check.getRequiredTokens()),\n-                columns.get(2).getTextContent().replaceAll(\"\\\\s+\", \" \").trim(),\n+\n+        String acceptableTokenText = columns.get(2).getTextContent().trim();\n+        final int removePrefixIdx = \"subset of tokens\".length();\n+        acceptableTokenText = acceptableTokenText.substring(removePrefixIdx);\n+        assertFalse(isInvalidTokenPunctuation(acceptableTokenText),\n+                \", & . should be placed at beginning of the next corresponding lines \"\n+                + \"in \" + fileName + \" acceptable token section: \" + sectionName);\n+        assertEquals(CheckUtil.getTokenText(check.getAcceptableTokens(),\n+                check.getRequiredTokens()).replaceAll(\"\\\\s+\", \"\"),\n+                acceptableTokenText.replaceAll(\"\\\\s+\", \"\"),\n                 fileName + \" section '\" + sectionName + \"' should have all the acceptable tokens\");\n-        assertEquals(\n-                CheckUtil.getTokenText(check.getDefaultTokens(), check.getRequiredTokens()),\n-                columns.get(3).getTextContent().replaceAll(\"\\\\s+\", \" \").trim(),\n+\n+        final String defaultTokenText = columns.get(3).getTextContent().trim();\n+        assertFalse(isInvalidTokenPunctuation(defaultTokenText),\n+                \", & . should be placed at beginning of the next corresponding lines \"\n+                + \"in \" + fileName + \" default token section: \" + sectionName);", "originalCommit": "16ba68dff825aea98555d6b76394179991c3770d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgzMzY2NA==", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r409833664", "bodyText": "Done", "author": "gaurabdg", "createdAt": "2020-04-16T20:37:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcxMDU3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzNTgxOQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r424035819", "bodyText": "Not completely done, see above.", "author": "rnveach", "createdAt": "2020-05-12T21:10:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcxMDU3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcxMDc0MA==", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r407710740", "bodyText": "same x2.", "author": "rnveach", "createdAt": "2020-04-13T20:46:24Z", "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "diffHunk": "@@ -897,16 +909,33 @@ private static void validatePropertySectionPropertyJavadocTokens(String fileName\n         assertEquals(\"javadoc tokens to check\",\n                 columns.get(1).getTextContent(), fileName + \" section '\" + sectionName\n                         + \"' should have the basic token javadoc description\");\n-        assertEquals(\"subset of javadoc tokens \"\n-                        + CheckUtil.getJavadocTokenText(check.getAcceptableJavadocTokens(),\n-                                check.getRequiredJavadocTokens()), columns.get(2).getTextContent()\n-                        .replaceAll(\"\\\\s+\", \" \").trim(), fileName + \" section '\" + sectionName\n-                                + \"' should have all the acceptable javadoc tokens\");\n-        assertEquals(\n-                CheckUtil.getJavadocTokenText(check.getDefaultJavadocTokens(),\n-                        check.getRequiredJavadocTokens()), columns.get(3).getTextContent()\n-                        .replaceAll(\"\\\\s+\", \" \").trim(), fileName + \" section '\" + sectionName\n-                                + \"' should have all the default javadoc tokens\");\n+\n+        String acceptableTokenText = columns.get(2).getTextContent().trim();\n+        final int removePrefixIdx = \"subset of javadoc tokens\".length();\n+        acceptableTokenText = acceptableTokenText.substring(removePrefixIdx);\n+        assertFalse(isInvalidTokenPunctuation(acceptableTokenText),\n+                \", & . should be placed at beginning of the next corresponding lines \"\n+                + \"in \" + fileName + \" acceptable javadoc token section: \" + sectionName);", "originalCommit": "16ba68dff825aea98555d6b76394179991c3770d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgzMzcwNA==", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r409833704", "bodyText": "Done", "author": "gaurabdg", "createdAt": "2020-04-16T20:38:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcxMDc0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzNjAxMw==", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r424036013", "bodyText": "Not completely done, see above.", "author": "rnveach", "createdAt": "2020-05-12T21:11:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcxMDc0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcxMDgyOQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r407710829", "bodyText": "same x2.", "author": "rnveach", "createdAt": "2020-04-13T20:46:36Z", "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "diffHunk": "@@ -897,16 +909,33 @@ private static void validatePropertySectionPropertyJavadocTokens(String fileName\n         assertEquals(\"javadoc tokens to check\",\n                 columns.get(1).getTextContent(), fileName + \" section '\" + sectionName\n                         + \"' should have the basic token javadoc description\");\n-        assertEquals(\"subset of javadoc tokens \"\n-                        + CheckUtil.getJavadocTokenText(check.getAcceptableJavadocTokens(),\n-                                check.getRequiredJavadocTokens()), columns.get(2).getTextContent()\n-                        .replaceAll(\"\\\\s+\", \" \").trim(), fileName + \" section '\" + sectionName\n-                                + \"' should have all the acceptable javadoc tokens\");\n-        assertEquals(\n-                CheckUtil.getJavadocTokenText(check.getDefaultJavadocTokens(),\n-                        check.getRequiredJavadocTokens()), columns.get(3).getTextContent()\n-                        .replaceAll(\"\\\\s+\", \" \").trim(), fileName + \" section '\" + sectionName\n-                                + \"' should have all the default javadoc tokens\");\n+\n+        String acceptableTokenText = columns.get(2).getTextContent().trim();\n+        final int removePrefixIdx = \"subset of javadoc tokens\".length();\n+        acceptableTokenText = acceptableTokenText.substring(removePrefixIdx);\n+        assertFalse(isInvalidTokenPunctuation(acceptableTokenText),\n+                \", & . should be placed at beginning of the next corresponding lines \"\n+                + \"in \" + fileName + \" acceptable javadoc token section: \" + sectionName);\n+        assertEquals(CheckUtil.getJavadocTokenText(check.getAcceptableJavadocTokens(),\n+                check.getRequiredJavadocTokens()).replaceAll(\"\\\\s+\", \"\"),\n+                acceptableTokenText.replaceAll(\"\\\\s+\", \"\"),\n+                fileName + \" section '\" + sectionName\n+                        + \"' should have all the acceptable javadoc tokens\");\n+\n+        final String defaultTokenText = columns.get(3).getTextContent().trim();\n+        assertFalse(isInvalidTokenPunctuation(defaultTokenText),\n+                \", & . should be placed at beginning of the next corresponding lines \"\n+                + \"in \" + fileName + \" default javadoc token section: \" + sectionName);", "originalCommit": "16ba68dff825aea98555d6b76394179991c3770d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgzMzc1NQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r409833755", "bodyText": "Done", "author": "gaurabdg", "createdAt": "2020-04-16T20:38:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcxMDgyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzNjEyNA==", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r424036124", "bodyText": "Not completely done, see above.", "author": "rnveach", "createdAt": "2020-05-12T21:11:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcxMDgyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ5NzQyMw==", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r424497423", "bodyText": "Sorry, for missing out, I have resolved them.", "author": "gaurabdg", "createdAt": "2020-05-13T14:47:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcxMDgyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcxMjI4Nw==", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r407712287", "bodyText": "Why can't we still verify the subset of javadoc tokens text in the assert equals? By splitting the string in this way, that \"subset\" text will not appear in the assertion failure which lets user know it needs to be there.", "author": "rnveach", "createdAt": "2020-04-13T20:49:12Z", "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "diffHunk": "@@ -897,16 +909,33 @@ private static void validatePropertySectionPropertyJavadocTokens(String fileName\n         assertEquals(\"javadoc tokens to check\",\n                 columns.get(1).getTextContent(), fileName + \" section '\" + sectionName\n                         + \"' should have the basic token javadoc description\");\n-        assertEquals(\"subset of javadoc tokens \"\n-                        + CheckUtil.getJavadocTokenText(check.getAcceptableJavadocTokens(),\n-                                check.getRequiredJavadocTokens()), columns.get(2).getTextContent()\n-                        .replaceAll(\"\\\\s+\", \" \").trim(), fileName + \" section '\" + sectionName\n-                                + \"' should have all the acceptable javadoc tokens\");\n-        assertEquals(\n-                CheckUtil.getJavadocTokenText(check.getDefaultJavadocTokens(),\n-                        check.getRequiredJavadocTokens()), columns.get(3).getTextContent()\n-                        .replaceAll(\"\\\\s+\", \" \").trim(), fileName + \" section '\" + sectionName\n-                                + \"' should have all the default javadoc tokens\");\n+\n+        String acceptableTokenText = columns.get(2).getTextContent().trim();\n+        final int removePrefixIdx = \"subset of javadoc tokens\".length();\n+        acceptableTokenText = acceptableTokenText.substring(removePrefixIdx);", "originalCommit": "16ba68dff825aea98555d6b76394179991c3770d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgzNDE2Ng==", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r409834166", "bodyText": "Initially I  was having some problem with regex matching. I have made the required changes now.", "author": "gaurabdg", "createdAt": "2020-04-16T20:38:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcxMjI4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcxMjQ1Mw==", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r407712453", "bodyText": "same.", "author": "rnveach", "createdAt": "2020-04-13T20:49:30Z", "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "diffHunk": "@@ -882,13 +882,25 @@ private static void validatePropertySectionPropertyTokens(String fileName, Strin\n         assertEquals(\"tokens to check\", columns.get(1).getTextContent(),\n                 fileName + \" section '\" + sectionName\n                         + \"' should have the basic token description\");\n-        assertEquals(\"subset of tokens \" + CheckUtil.getTokenText(check.getAcceptableTokens(),\n-                check.getRequiredTokens()),\n-                columns.get(2).getTextContent().replaceAll(\"\\\\s+\", \" \").trim(),\n+\n+        String acceptableTokenText = columns.get(2).getTextContent().trim();\n+        final int removePrefixIdx = \"subset of tokens\".length();\n+        acceptableTokenText = acceptableTokenText.substring(removePrefixIdx);", "originalCommit": "16ba68dff825aea98555d6b76394179991c3770d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgzMzg1Mg==", "url": "https://github.com/checkstyle/checkstyle/pull/7993#discussion_r409833852", "bodyText": "Done", "author": "gaurabdg", "createdAt": "2020-04-16T20:38:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcxMjQ1Mw=="}], "type": "inlineReview"}, {"oid": "c4e059ee202f849aa3dcf4eadf51328d32a357db", "url": "https://github.com/checkstyle/checkstyle/commit/c4e059ee202f849aa3dcf4eadf51328d32a357db", "message": "Issue #3946: code cleanup: minimize future xdoc changes", "committedDate": "2020-04-16T20:36:56Z", "type": "forcePushed"}, {"oid": "1a3a9cac5a96b3e3fd5f8d9c76b3378017e877aa", "url": "https://github.com/checkstyle/checkstyle/commit/1a3a9cac5a96b3e3fd5f8d9c76b3378017e877aa", "message": "Issue #3946: code cleanup: minimize future xdoc changes", "committedDate": "2020-04-17T09:12:44Z", "type": "forcePushed"}, {"oid": "a653f34532a06b850bea6738efbec2ab247e9cfd", "url": "https://github.com/checkstyle/checkstyle/commit/a653f34532a06b850bea6738efbec2ab247e9cfd", "message": "Issue #3946: code cleanup: minimize future xdoc changes", "committedDate": "2020-04-18T12:17:34Z", "type": "forcePushed"}, {"oid": "93e85ed54ff888c2236a309c752aa878b4e95116", "url": "https://github.com/checkstyle/checkstyle/commit/93e85ed54ff888c2236a309c752aa878b4e95116", "message": "Issue #3946: code cleanup: minimize future xdoc changes", "committedDate": "2020-04-29T22:45:47Z", "type": "forcePushed"}, {"oid": "136bbc9d627043f06da64925c323e3192e1dcc39", "url": "https://github.com/checkstyle/checkstyle/commit/136bbc9d627043f06da64925c323e3192e1dcc39", "message": "Issue #3946: code cleanup: minimize future xdoc changes", "committedDate": "2020-04-30T00:05:08Z", "type": "forcePushed"}, {"oid": "613a4d2a6e86ecd8f92b82b8eb8e34955ec26bfc", "url": "https://github.com/checkstyle/checkstyle/commit/613a4d2a6e86ecd8f92b82b8eb8e34955ec26bfc", "message": "Issue #3946: code cleanup: minimize future xdoc changes", "committedDate": "2020-05-13T14:48:52Z", "type": "forcePushed"}, {"oid": "9659cf1c49158c9b4dd604b7ea9d2d660b0da6ad", "url": "https://github.com/checkstyle/checkstyle/commit/9659cf1c49158c9b4dd604b7ea9d2d660b0da6ad", "message": "Issue #3946: code cleanup: minimize future xdoc changes", "committedDate": "2020-05-13T14:51:42Z", "type": "forcePushed"}, {"oid": "5f0684f4a3afed4a3c2e5987897b9bd6bf6b2eff", "url": "https://github.com/checkstyle/checkstyle/commit/5f0684f4a3afed4a3c2e5987897b9bd6bf6b2eff", "message": "Issue #3946: code cleanup: minimize future xdoc changes", "committedDate": "2020-05-29T20:15:34Z", "type": "forcePushed"}, {"oid": "fb0f36eef5e48fe63042205d44ae304a55dcf816", "url": "https://github.com/checkstyle/checkstyle/commit/fb0f36eef5e48fe63042205d44ae304a55dcf816", "message": "Issue #3946: code cleanup: minimize future xdoc changes", "committedDate": "2020-05-29T20:16:35Z", "type": "forcePushed"}, {"oid": "059b48ff6b462c8da964e2cee52c78d695140fbe", "url": "https://github.com/checkstyle/checkstyle/commit/059b48ff6b462c8da964e2cee52c78d695140fbe", "message": "Issue #3946: code cleanup: minimize future xdoc changes", "committedDate": "2020-05-29T20:20:18Z", "type": "commit"}, {"oid": "059b48ff6b462c8da964e2cee52c78d695140fbe", "url": "https://github.com/checkstyle/checkstyle/commit/059b48ff6b462c8da964e2cee52c78d695140fbe", "message": "Issue #3946: code cleanup: minimize future xdoc changes", "committedDate": "2020-05-29T20:20:18Z", "type": "forcePushed"}]}