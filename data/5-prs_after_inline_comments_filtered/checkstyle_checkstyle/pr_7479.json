{"pr_number": 7479, "pr_title": "Issue #5604: resolve Sonar violation 'Use the primitive boolean expression here'", "pr_createdAt": "2020-01-16T05:38:55Z", "pr_url": "https://github.com/checkstyle/checkstyle/pull/7479", "timeline": [{"oid": "97b9c5a149f84568d4bcfeb919d8f95a896cf924", "url": "https://github.com/checkstyle/checkstyle/commit/97b9c5a149f84568d4bcfeb919d8f95a896cf924", "message": "Issue #5604: resolve Sonar violation 'Use the primitive boolean expression here'", "committedDate": "2020-01-16T17:02:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY0Mzk0NQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7479#discussion_r367643945", "bodyText": "What about !afterValues.pop().booleanValue()?", "author": "rnveach", "createdAt": "2020-01-16T20:52:59Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "diffHunk": "@@ -343,7 +343,7 @@ private void visitUnitaryOperator(DetailAST ast, int basicBranchingFactor) {\n      * Leaves ternary operator (?:) and return tokens.\n      */\n     private void leaveUnitaryOperator() {\n-        if (!afterValues.pop()) {\n+        if (Boolean.FALSE.equals(afterValues.pop())) {", "originalCommit": "97b9c5a149f84568d4bcfeb919d8f95a896cf924", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY0NTA4OA==", "url": "https://github.com/checkstyle/checkstyle/pull/7479#discussion_r367645088", "bodyText": "Sonar do not like the fact that afterValues.pop() might be null, so your code still prone for NPE.", "author": "romani", "createdAt": "2020-01-16T20:55:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY0Mzk0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY0NTYzNw==", "url": "https://github.com/checkstyle/checkstyle/pull/7479#discussion_r367645637", "bodyText": "Old code was prone to NPE as this is basically what it was converting the code to. If we had an issue with NPE here, regression would have found it.", "author": "rnveach", "createdAt": "2020-01-16T20:56:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY0Mzk0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY0NzIxMg==", "url": "https://github.com/checkstyle/checkstyle/pull/7479#discussion_r367647212", "bodyText": "we do not have issue, it is the same over caution as https://checkstyle.org/config_coding.html#EqualsAvoidNull , .... if code is changed somewhere in wrong way at least this line will be stable.", "author": "romani", "createdAt": "2020-01-16T21:00:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY0Mzk0NQ=="}], "type": "inlineReview"}]}