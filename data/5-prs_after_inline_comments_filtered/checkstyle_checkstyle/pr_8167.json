{"pr_number": 8167, "pr_title": "Issue #7727: Updated ITs for CommentsIndentation", "pr_createdAt": "2020-04-22T11:11:50Z", "pr_url": "https://github.com/checkstyle/checkstyle/pull/8167", "timeline": [{"oid": "2e1f973bae6fa690059c14ff73951a464f16fc60", "url": "https://github.com/checkstyle/checkstyle/commit/2e1f973bae6fa690059c14ff73951a464f16fc60", "message": "Issue #7727: Updated ITs for CommentsIndentation", "committedDate": "2020-04-23T07:11:29Z", "type": "forcePushed"}, {"oid": "6f97f73f24d9ebfbc5f9e8752b35d65cf2ffca7a", "url": "https://github.com/checkstyle/checkstyle/commit/6f97f73f24d9ebfbc5f9e8752b35d65cf2ffca7a", "message": "Issue #7727: Updated ITs for CommentsIndentation", "committedDate": "2020-04-25T12:50:50Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjU4Mzk1Mg==", "url": "https://github.com/checkstyle/checkstyle/pull/8167#discussion_r416583952", "bodyText": "please change names of tests and test inputs to something more meaningful, because they all seem the same", "author": "strkkk", "createdAt": "2020-04-28T12:47:31Z", "path": "src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionCommentsIndentationTest.java", "diffHunk": "@@ -0,0 +1,219 @@\n+////////////////////////////////////////////////////////////////////////////////\n+// checkstyle: Checks Java source code for adherence to a set of rules.\n+// Copyright (C) 2001-2020 the original author or authors.\n+//\n+// This library is free software; you can redistribute it and/or\n+// modify it under the terms of the GNU Lesser General Public\n+// License as published by the Free Software Foundation; either\n+// version 2.1 of the License, or (at your option) any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+// Lesser General Public License for more details.\n+//\n+// You should have received a copy of the GNU Lesser General Public\n+// License along with this library; if not, write to the Free Software\n+// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n+////////////////////////////////////////////////////////////////////////////////\n+\n+package org.checkstyle.suppressionxpathfilter;\n+\n+import java.io.File;\n+import java.util.Collections;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import com.puppycrawl.tools.checkstyle.DefaultConfiguration;\n+import com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck;\n+\n+public class XpathRegressionCommentsIndentationTest extends AbstractXpathTestSupport {\n+\n+    private final String checkName = CommentsIndentationCheck.class.getSimpleName();\n+\n+    @Override\n+    protected String getCheckName() {\n+        return checkName;\n+    }\n+\n+    @Test\n+    public void testOne() throws Exception {\n+        final File fileToProcess =\n+                new File(getPath(\"SuppressionXpathRegressionCommentsIndentationOne.java\"));\n+\n+        final DefaultConfiguration moduleConfig =\n+                createModuleConfig(CommentsIndentationCheck.class);\n+\n+        final String[] expectedViolation = {\n+            \"5:9: \" + getCheckMessage(CommentsIndentationCheck.class,\n+                \"comments.indentation.single\", 4, 8, 4),\n+        };\n+\n+        final List<String> expectedXpathQueries = Collections.singletonList(\n+            \"/CLASS_DEF[./IDENT[@text='SuppressionXpathRegressionCommentsIndentationOne']]\"\n+                + \"/OBJBLOCK/SINGLE_LINE_COMMENT\"\n+        );\n+\n+        runVerifications(moduleConfig, fileToProcess, expectedViolation,\n+                expectedXpathQueries);\n+    }\n+\n+    @Test\n+    public void testTwo() throws Exception {\n+        final File fileToProcess =\n+                new File(getPath(\"SuppressionXpathRegressionCommentsIndentationTwo.java\"));\n+\n+        final DefaultConfiguration moduleConfig =\n+                createModuleConfig(CommentsIndentationCheck.class);\n+\n+        final String[] expectedViolation = {\n+            \"4:11: \" + getCheckMessage(CommentsIndentationCheck.class,\n+                \"comments.indentation.block\", 7, 10, 4),\n+        };\n+\n+        final List<String> expectedXpathQueries = Collections.singletonList(\n+            \"/CLASS_DEF[./IDENT[@text='SuppressionXpathRegressionCommentsIndentationTwo']]\"\n+                + \"/OBJBLOCK/VARIABLE_DEF[./IDENT[@text='f']]/TYPE/BLOCK_COMMENT_BEGIN\"\n+        );\n+\n+        runVerifications(moduleConfig, fileToProcess, expectedViolation,\n+                expectedXpathQueries);\n+    }\n+\n+    @Test\n+    public void testThree() throws Exception {\n+        final File fileToProcess =\n+                new File(getPath(\"SuppressionXpathRegressionCommentsIndentationThree.java\"));\n+\n+        final DefaultConfiguration moduleConfig =\n+                createModuleConfig(CommentsIndentationCheck.class);\n+\n+        final String[] expectedViolation = {\n+            \"8:13: \" + getCheckMessage(CommentsIndentationCheck.class,\n+                \"comments.indentation.single\", 10, 12, 4),\n+        };\n+\n+        final List<String> expectedXpathQueries = Collections.singletonList(\n+            \"/CLASS_DEF[./IDENT[@text='SuppressionXpathRegressionCommentsIndentationThree']]\"\n+                + \"/OBJBLOCK/METHOD_DEF[./IDENT[@text='foo']]/MODIFIERS/SINGLE_LINE_COMMENT\"\n+        );\n+\n+        runVerifications(moduleConfig, fileToProcess, expectedViolation,\n+                expectedXpathQueries);\n+    }\n+\n+    @Test\n+    public void testFour() throws Exception {\n+        final File fileToProcess =\n+                new File(getPath(\"SuppressionXpathRegressionCommentsIndentationFour.java\"));\n+\n+        final DefaultConfiguration moduleConfig =\n+                createModuleConfig(CommentsIndentationCheck.class);\n+\n+        final String[] expectedViolation = {\n+            \"10:25: \" + getCheckMessage(CommentsIndentationCheck.class,\n+                \"comments.indentation.single\", 8, 24, 8),\n+        };\n+\n+        final List<String> expectedXpathQueries = Collections.singletonList(\n+            \"/CLASS_DEF[./IDENT[@text='SuppressionXpathRegressionCommentsIndentationFour']]\"\n+                + \"/OBJBLOCK/METHOD_DEF[./IDENT[@text='foo']]/SLIST/SINGLE_LINE_COMMENT\"\n+        );\n+\n+        runVerifications(moduleConfig, fileToProcess, expectedViolation,\n+                expectedXpathQueries);\n+    }\n+\n+    @Test\n+    public void testFive() throws Exception {\n+        final File fileToProcess =\n+                new File(getPath(\"SuppressionXpathRegressionCommentsIndentationFive.java\"));\n+\n+        final DefaultConfiguration moduleConfig =\n+                createModuleConfig(CommentsIndentationCheck.class);\n+\n+        final String[] expectedViolation = {\n+            \"6:1: \" + getCheckMessage(CommentsIndentationCheck.class,\n+                \"comments.indentation.single\", 7, 0, 4),\n+        };\n+\n+        final List<String> expectedXpathQueries = Collections.singletonList(\n+            \"/CLASS_DEF[./IDENT[@text='SuppressionXpathRegressionCommentsIndentationFive']]\"\n+                + \"/OBJBLOCK/METHOD_DEF[./IDENT[@text='foo']]/SLIST/SINGLE_LINE_COMMENT[2]\"\n+        );\n+\n+        runVerifications(moduleConfig, fileToProcess, expectedViolation,\n+                expectedXpathQueries);\n+    }\n+\n+    @Test\n+    public void testSix() throws Exception {\n+        final File fileToProcess =\n+                new File(getPath(\"SuppressionXpathRegressionCommentsIndentationSix.java\"));\n+\n+        final DefaultConfiguration moduleConfig =\n+                createModuleConfig(CommentsIndentationCheck.class);\n+\n+        final String[] expectedViolation = {\n+            \"10:20: \" + getCheckMessage(CommentsIndentationCheck.class,\n+                \"comments.indentation.single\", \"9, 11\", 19, \"16, 12\"),\n+        };\n+\n+        final List<String> expectedXpathQueries = Collections.singletonList(\n+            \"/CLASS_DEF[./IDENT[@text='SuppressionXpathRegressionCommentsIndentationSix']]\"\n+                + \"/OBJBLOCK/METHOD_DEF[./IDENT[@text='foo']]/SLIST/LITERAL_SWITCH/\"\n+                + \"CASE_GROUP/SINGLE_LINE_COMMENT\"\n+        );\n+\n+        runVerifications(moduleConfig, fileToProcess, expectedViolation,\n+                expectedXpathQueries);\n+    }\n+\n+    @Test\n+    public void testSeven() throws Exception {\n+        final File fileToProcess =\n+                new File(getPath(\"SuppressionXpathRegressionCommentsIndentationSeven.java\"));\n+\n+        final DefaultConfiguration moduleConfig =\n+                createModuleConfig(CommentsIndentationCheck.class);\n+\n+        final String[] expectedViolation = {\n+            \"9:1: \" + getCheckMessage(CommentsIndentationCheck.class,\n+                \"comments.indentation.single\", \"8, 10\", 0, \"12, 12\"),\n+        };\n+\n+        final List<String> expectedXpathQueries = Collections.singletonList(\n+            \"/CLASS_DEF[./IDENT[@text='SuppressionXpathRegressionCommentsIndentationSeven']]\"\n+                + \"/OBJBLOCK/METHOD_DEF[./IDENT[@text='foo']]/SLIST/LITERAL_SWITCH/\"\n+                + \"CASE_GROUP/SINGLE_LINE_COMMENT\"\n+        );\n+\n+        runVerifications(moduleConfig, fileToProcess, expectedViolation,\n+                expectedXpathQueries);\n+    }\n+\n+    @Test\n+    public void testEight() throws Exception {", "originalCommit": "6f97f73f24d9ebfbc5f9e8752b35d65cf2ffca7a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2edfab7a4072b9c6ab62e3c765fb493bae6c6180", "url": "https://github.com/checkstyle/checkstyle/commit/2edfab7a4072b9c6ab62e3c765fb493bae6c6180", "message": "Issue #7727: Updated ITs for CommentsIndentation", "committedDate": "2020-04-28T13:50:02Z", "type": "commit"}, {"oid": "2edfab7a4072b9c6ab62e3c765fb493bae6c6180", "url": "https://github.com/checkstyle/checkstyle/commit/2edfab7a4072b9c6ab62e3c765fb493bae6c6180", "message": "Issue #7727: Updated ITs for CommentsIndentation", "committedDate": "2020-04-28T13:50:02Z", "type": "forcePushed"}]}