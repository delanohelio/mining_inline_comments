{"pr_number": 7456, "pr_title": "doc: sync summaries of all checks.", "pr_createdAt": "2020-01-09T22:17:47Z", "pr_url": "https://github.com/checkstyle/checkstyle/pull/7456", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAyMjAxNg==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365022016", "bodyText": "I question this sentence, especially the \"with the usage of\" part.\nI don't know this check and there are no examples but would something like \"Controls the styling of annotations.\"?", "author": "rnveach", "createdAt": "2020-01-10T00:17:44Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleCheck.java", "diffHunk": "@@ -28,7 +28,7 @@\n \n /**\n  * <p>\n- * This check controls the style with the usage of annotations.\n+ * Controls the style with the usage of annotations.", "originalCommit": "4dac36ecc0e3d03d6ade2e391a9a03c34cd1428a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTA4MDc4NQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365080785", "bodyText": "What about Checks the style used by annotations?", "author": "pbludov", "createdAt": "2020-01-10T05:46:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAyMjAxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTIyNDE0OQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365224149", "bodyText": "It is better but can we add something to say what kind of styling we are doing.\nhttps://checkstyle.org/property_types.html#elementStyle\nThe property in use has some examples. I see the word \"elements in annotations\" used as we are styling the things in the annotation and not the annotation itself.\nHow about \"Checks the style of elements in annotations\"?", "author": "rnveach", "createdAt": "2020-01-10T13:04:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAyMjAxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTI2MzkxMg==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365263912", "bodyText": "done", "author": "pbludov", "createdAt": "2020-01-10T14:38:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAyMjAxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAyMjI1Mw==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365022253", "bodyText": "X is present and Y are present.\n\nShouldn't they both be \"is\"?", "author": "rnveach", "createdAt": "2020-01-10T00:18:27Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingDeprecatedCheck.java", "diffHunk": "@@ -30,8 +30,8 @@\n \n /**\n  * <p>\n- * Verifies that both the &#64;Deprecated annotation is present\n- * and the &#64;deprecated javadoc tag are present when either one is present.\n+ * Verifies that both the {@code @Deprecated} annotation is present\n+ * and the {@code @deprecated} javadoc tag are present when either one is present.", "originalCommit": "4dac36ecc0e3d03d6ade2e391a9a03c34cd1428a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTA4MzYyMg==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365083622", "bodyText": "Changed to Verifies that the annotation {@code @Deprecated} and the Javadoc tag {@code @deprecated} are both present when either of them is present.", "author": "pbludov", "createdAt": "2020-01-10T06:02:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAyMjI1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAyMjM3Mw==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365022373", "bodyText": "No wording is changed. Do we really need to change this?", "author": "rnveach", "createdAt": "2020-01-10T00:19:01Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/PackageAnnotationCheck.java", "diffHunk": "@@ -27,8 +27,7 @@\n \n /**\n  * <p>\n- * This check makes sure that all package annotations are in the\n- * package-info.java file.\n+ * Checks that all package annotations are in the package-info.java file.", "originalCommit": "4dac36ecc0e3d03d6ade2e391a9a03c34cd1428a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTA4MzkwMQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365083901", "bodyText": "This check makes sure -> Checks. Just to unify with other summaries.", "author": "pbludov", "createdAt": "2020-01-10T06:03:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAyMjM3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTIyMjM5MA==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365222390", "bodyText": "Sorry. Github did not highlight the wording change and I didn't clearly pick up the change.", "author": "rnveach", "createdAt": "2020-01-10T13:00:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAyMjM3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAzNDkzNA==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365034934", "bodyText": "Maybe unrelated, but do we need the default listed in the description? We don't list default for other options and it seems to me we sometimes removed this in other cases.", "author": "rnveach", "createdAt": "2020-01-10T01:14:59Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ReturnCountCheck.java", "diffHunk": "@@ -31,7 +31,7 @@\n /**\n  * <p>\n  * Restricts the number of return statements in methods, constructors and lambda expressions\n- * (2 by default). Ignores specified methods ({@code equals()} by default).\n+ * (default = 2). Ignores specified methods ({@code equals()} by default).", "originalCommit": "4dac36ecc0e3d03d6ade2e391a9a03c34cd1428a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTA4NDkxNw==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365084917", "bodyText": "Let's remove them. I think the summaries should be short and clear. @romani @strkkk   what is your option?", "author": "pbludov", "createdAt": "2020-01-10T06:08:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAzNDkzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTE1OTA1NA==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365159054", "bodyText": "I think it is better to remove them. Keeping it in a single place will make doc support easier.\n@pbludov\nAlso, equals() should be without parentheses, as it is in other docs in this PR", "author": "strkkk", "createdAt": "2020-01-10T10:06:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAzNDkzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTI2MzYxNg==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365263616", "bodyText": "done", "author": "pbludov", "createdAt": "2020-01-10T14:38:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAzNDkzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAzNTI3OQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365035279", "bodyText": "I find the word inheritance lacking as I believe this checks that methods that could be inherited have a javadoc. This wouldn't come to mine if you said \"designed for inheritance\". I am thinking coding wise (class is not final, etc...)", "author": "rnveach", "createdAt": "2020-01-10T01:16:41Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/DesignForExtensionCheck.java", "diffHunk": "@@ -36,7 +36,7 @@\n \n /**\n  * <p>\n- * The check finds classes that are designed for extension (subclass creation).\n+ * Checks that classes are designed for inheritance.", "originalCommit": "4dac36ecc0e3d03d6ade2e391a9a03c34cd1428a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTA4NTMyMA==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365085320", "bodyText": "changed back to designed for extension (subclass creation)", "author": "pbludov", "createdAt": "2020-01-10T06:11:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAzNTI3OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAzNTUzMw==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365035533", "bodyText": "bottom of the class\n\nShould this be something like bottom of the primary, or maybe top-level class?", "author": "rnveach", "createdAt": "2020-01-10T01:17:59Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/InnerTypeLastCheck.java", "diffHunk": "@@ -27,7 +27,7 @@\n \n /**\n  * <p>\n- * Check nested (inner) classes/interfaces are declared at the bottom of the\n+ * Checks nested (internal) classes/interfaces are declared at the bottom of the\n  * class after all method and field declarations.", "originalCommit": "4dac36ecc0e3d03d6ade2e391a9a03c34cd1428a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTI2ODY2OA==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365268668", "bodyText": "done", "author": "pbludov", "createdAt": "2020-01-10T14:48:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAzNTUzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAzNTU5OA==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365035598", "bodyText": "Same as previous item.", "author": "rnveach", "createdAt": "2020-01-10T01:18:19Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java", "diffHunk": "@@ -26,7 +26,7 @@\n \n /**\n  * <p>\n- * Restricts throws statements to a specified count (4 by default).\n+ * Restricts throws statements to a specified count (default = 4).", "originalCommit": "4dac36ecc0e3d03d6ade2e391a9a03c34cd1428a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAzNTc4Nw==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365035787", "bodyText": "To me I liked the usage of class/interface over type. I don't see anywhere else it says what type means for those that don't make the connection.", "author": "rnveach", "createdAt": "2020-01-10T01:19:12Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java", "diffHunk": "@@ -40,7 +40,7 @@\n \n /**\n  * <p>\n- * Checks Javadoc comments for class and interface definitions. By default, does not check\n+ * Checks the Javadoc of a type. By default, does not check", "originalCommit": "4dac36ecc0e3d03d6ade2e391a9a03c34cd1428a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTA4NjE5Nw==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365086197", "bodyText": "This should be annotation, enum, class, interface. Too verbose, in my opinion.", "author": "pbludov", "createdAt": "2020-01-10T06:15:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAzNTc4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQyMDU0NA==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365420544", "bodyText": "@pbludov Do you have another suggestion? or you wish to leave it as it is?", "author": "rnveach", "createdAt": "2020-01-10T20:37:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAzNTc4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ1MjA3MQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365452071", "bodyText": "changed to Checks the Javadoc comments for annotation/enum/class/interface definitions.", "author": "pbludov", "createdAt": "2020-01-10T22:15:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAzNTc4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAzNTk3MQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365035971", "bodyText": "has a Javadoc comment", "author": "rnveach", "createdAt": "2020-01-10T01:20:14Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocVariableCheck.java", "diffHunk": "@@ -32,7 +32,7 @@\n \n /**\n  * <p>\n- * Checks that variables have Javadoc comments. Ignores {@code serialVersionUID} fields.\n+ * Checks that a variable has Javadoc comment. Ignores {@code serialVersionUID} fields.", "originalCommit": "4dac36ecc0e3d03d6ade2e391a9a03c34cd1428a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTA4NjQyNg==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365086426", "bodyText": "done", "author": "pbludov", "createdAt": "2020-01-10T06:17:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAzNTk3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAzNjAxNA==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365036014", "bodyText": "same as other.", "author": "rnveach", "createdAt": "2020-01-10T01:20:30Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/BooleanExpressionComplexityCheck.java", "diffHunk": "@@ -30,8 +30,8 @@\n \n /**\n  * <p>\n- * Restrict the number of {@code &amp;&amp;}, {@code ||}, {@code &amp;}, {@code |} and\n- * {@code ^} in an expression.\n+ * Restricts nested boolean operators ({@code &amp;&amp;}, {@code ||}, {@code &amp;}, {@code |} and\n+ * {@code ^}) to a specified depth (default = 3).", "originalCommit": "4dac36ecc0e3d03d6ade2e391a9a03c34cd1428a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTI2NDMxNA==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365264314", "bodyText": "done", "author": "pbludov", "createdAt": "2020-01-10T14:39:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAzNjAxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAzNjI2OQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365036269", "bodyText": "Should we keep \"in an expression\" because or the name of the check. Also | can not be in a boolean expression like a catch. Ex: catch(Exception | Exception)", "author": "rnveach", "createdAt": "2020-01-10T01:21:46Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/BooleanExpressionComplexityCheck.java", "diffHunk": "@@ -30,8 +30,8 @@\n \n /**\n  * <p>\n- * Restrict the number of {@code &amp;&amp;}, {@code ||}, {@code &amp;}, {@code |} and\n- * {@code ^} in an expression.", "originalCommit": "4dac36ecc0e3d03d6ade2e391a9a03c34cd1428a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTA4NjkxMQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365086911", "bodyText": "added in an expression", "author": "pbludov", "createdAt": "2020-01-10T06:19:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAzNjI2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAzNjM3NA==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365036374", "bodyText": "Same as other.", "author": "rnveach", "createdAt": "2020-01-10T01:22:09Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "diffHunk": "@@ -30,7 +30,7 @@\n \n /**\n  * <p>\n- * Checks the NPATH complexity against a specified limit.\n+ * Checks the NPATH complexity against a specified limit (default = 200).", "originalCommit": "4dac36ecc0e3d03d6ade2e391a9a03c34cd1428a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTI2NDQ3MA==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365264470", "bodyText": "done", "author": "pbludov", "createdAt": "2020-01-10T14:39:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAzNjM3NA=="}], "type": "inlineReview"}, {"oid": "65d38e26528b4ec260408a7d0765d27caa6d2a71", "url": "https://github.com/checkstyle/checkstyle/commit/65d38e26528b4ec260408a7d0765d27caa6d2a71", "message": "doc: sync summaries of all checks", "committedDate": "2020-01-10T06:23:41Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTE1NTE0MA==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365155140", "bodyText": "If you remove parentheses from main(), it should be consistent. Lines 36 and 39 should be corrected too in this case.\nAlso, method name can be included in {@code }", "author": "strkkk", "createdAt": "2020-01-10T09:58:18Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UncommentedMainCheck.java", "diffHunk": "@@ -30,7 +30,7 @@\n \n /**\n  * <p>\n- * Checks for uncommented main() methods.\n+ * Detects uncommented main methods.", "originalCommit": "65d38e26528b4ec260408a7d0765d27caa6d2a71", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTI2NDU2MA==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365264560", "bodyText": "done", "author": "pbludov", "createdAt": "2020-01-10T14:40:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTE1NTE0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTE1NjcwMg==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365156702", "bodyText": "suggestion - Code Conventions for the Java Programming Language can be a hyperlink as same phrase in line 41", "author": "strkkk", "createdAt": "2020-01-10T10:01:41Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/DeclarationOrderCheck.java", "diffHunk": "@@ -33,7 +33,8 @@\n \n /**\n  * <p>\n- * Checks the order in which parts of the class or interface declaration are defined.\n+ * Checks that the parts of a class or interface declaration appear in the order\n+ * suggested by the Code Conventions for the Java Programming Language.", "originalCommit": "65d38e26528b4ec260408a7d0765d27caa6d2a71", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTI2NDYyMw==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365264623", "bodyText": "done", "author": "pbludov", "createdAt": "2020-01-10T14:40:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTE1NjcwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTE1ODA4Ng==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365158086", "bodyText": "suggestion:\nChecks that there is no method {@code finalize} with zero parameters\nsounds better to me.\nWhat do you think?", "author": "strkkk", "createdAt": "2020-01-10T10:04:21Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/NoFinalizerCheck.java", "diffHunk": "@@ -26,7 +26,7 @@\n \n /**\n  * <p>\n- * Verifies there are no {@code finalize()} methods defined in a class.\n+ * Checks that no method having zero parameters is defined using the name {@code finalize}.", "originalCommit": "65d38e26528b4ec260408a7d0765d27caa6d2a71", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTI2NDY4Nw==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365264687", "bodyText": "done", "author": "pbludov", "createdAt": "2020-01-10T14:40:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTE1ODA4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTE4MzE4OA==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365183188", "bodyText": "just to note that here is a default value", "author": "strkkk", "createdAt": "2020-01-10T11:05:21Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/ExecutableStatementCountCheck.java", "diffHunk": "@@ -29,7 +29,7 @@\n \n /**\n  * <p>\n- * Restricts the number of executable statements to a specified limit.\n+ * Restricts the number of executable statements to a specified limit (default = 30).", "originalCommit": "65d38e26528b4ec260408a7d0765d27caa6d2a71", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTI2NDc4MA==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365264780", "bodyText": "done", "author": "pbludov", "createdAt": "2020-01-10T14:40:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTE4MzE4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTMzODQyNw==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365338427", "bodyText": "@pbludov , @strkkk , @rnveach ,\nI think It is reasonable to remove default values from summary. We always have default for all properties. We do change defaults sometime, so we can miss update of summary, it will be hard to catch.", "author": "romani", "createdAt": "2020-01-10T17:09:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTE4MzE4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ3NTIyOA==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365475228", "bodyText": "I unresolved this item, as I need to know your thoughts on this.", "author": "romani", "createdAt": "2020-01-10T23:57:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTE4MzE4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ5MDMzOQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365490339", "bodyText": "@romani This was already discussed and agreed upon at #7456 (comment) . Is there something more you are looking for?", "author": "rnveach", "createdAt": "2020-01-11T02:01:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTE4MzE4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ5NzA4Nw==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365497087", "bodyText": "No, resolved", "author": "romani", "createdAt": "2020-01-11T03:51:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTE4MzE4OA=="}], "type": "inlineReview"}, {"oid": "b6f9af24516b3c21d1b67d5571d77b95e013d30f", "url": "https://github.com/checkstyle/checkstyle/commit/b6f9af24516b3c21d1b67d5571d77b95e013d30f", "message": "doc: sync summaries of all checks", "committedDate": "2020-01-10T14:36:42Z", "type": "forcePushed"}, {"oid": "8bd9df1e70796ff493be82c91b4f274928a8e542", "url": "https://github.com/checkstyle/checkstyle/commit/8bd9df1e70796ff493be82c91b4f274928a8e542", "message": "doc: sync summaries of all checks", "committedDate": "2020-01-10T14:49:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQxODY0NQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365418645", "bodyText": "I don't see any depth check in the check. It looks like it is just counting how many are in 1 condition and giving a violation if it reaches a certain amount.", "author": "rnveach", "createdAt": "2020-01-10T20:31:47Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/BooleanExpressionComplexityCheck.java", "diffHunk": "@@ -30,8 +30,8 @@\n \n /**\n  * <p>\n- * Restrict the number of {@code &amp;&amp;}, {@code ||}, {@code &amp;}, {@code |} and\n- * {@code ^} in an expression.\n+ * Restricts nested boolean operators ({@code &amp;&amp;}, {@code ||}, {@code &amp;}, {@code |} and\n+ * {@code ^}) in an expression to a specified depth.", "originalCommit": "8bd9df1e70796ff493be82c91b4f274928a8e542", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQzNjAxNA==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365436014", "bodyText": "removed", "author": "pbludov", "createdAt": "2020-01-10T21:24:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQxODY0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ0MTM5Mg==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365441392", "bodyText": "Depth was removed but without the wording that we are looking for a specific count, description seems like it is talking about all operators.", "author": "rnveach", "createdAt": "2020-01-10T21:40:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQxODY0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ1MDk4OA==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365450988", "bodyText": "Reverted back to\nRestricts the number of boolean operators ({@code &amp;&amp;}, {@code ||}, {@code &amp;}, {@code |} and {@code ^}) in an expression.", "author": "pbludov", "createdAt": "2020-01-10T22:12:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQxODY0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQxODkwNQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365418905", "bodyText": "matches single line => matches a single line.", "author": "rnveach", "createdAt": "2020-01-10T20:32:40Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineCheck.java", "diffHunk": "@@ -27,8 +27,7 @@\n \n /**\n  * <p>\n- * A check for detecting single lines that match a supplied regular expression.\n- * Works with any file type.\n+ * Checks that a specified pattern matches single line in any file type.", "originalCommit": "8bd9df1e70796ff493be82c91b4f274928a8e542", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQzNTk3NA==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365435974", "bodyText": "done", "author": "pbludov", "createdAt": "2020-01-10T21:24:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQxODkwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQxOTU0Ng==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365419546", "bodyText": "same as above.", "author": "rnveach", "createdAt": "2020-01-10T20:34:30Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineJavaCheck.java", "diffHunk": "@@ -26,8 +26,7 @@\n \n /**\n  * <p>\n- * A check for detecting single lines that match a supplied\n- * regular expression in Java files.\n+ * Checks that a specified pattern matches single line in Java files.", "originalCommit": "8bd9df1e70796ff493be82c91b4f274928a8e542", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQzNTkyNg==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365435926", "bodyText": "done", "author": "pbludov", "createdAt": "2020-01-10T21:24:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQxOTU0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQyMDA0Nw==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365420047", "bodyText": "How come for previous checks like EmptyFor, we left the ; in but for this one we have to remove it? To me they both look like similar wording.", "author": "rnveach", "createdAt": "2020-01-10T20:36:01Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheck.java", "diffHunk": "@@ -27,9 +27,9 @@\n \n /**\n  * <p>\n- * Checks the policy on the padding of parentheses; i.e. whether a space is required\n+ * Checks the policy on the padding of parentheses (whether a space is required", "originalCommit": "8bd9df1e70796ff493be82c91b4f274928a8e542", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQzMzc4MA==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365433780", "bodyText": "We have to remove i.e. as it is recognized as the end of the sentence. See Javadoc for ParenPadCheck. This can be split into two sentences:\nChecks the policy on the padding of parentheses. I.e. whether a space...", "author": "pbludov", "createdAt": "2020-01-10T21:17:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQyMDA0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ0MDc0MA==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365440740", "bodyText": "ok. Other checks have their sentences like:\n\nChecks the padding of an empty for initializer; that is whether a white\n\nIf we are keeping the other descriptions like that, it seems to me we could the same here.", "author": "rnveach", "createdAt": "2020-01-10T21:38:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQyMDA0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ0OTEwMQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7456#discussion_r365449101", "bodyText": "done", "author": "pbludov", "createdAt": "2020-01-10T22:05:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQyMDA0Nw=="}], "type": "inlineReview"}, {"oid": "73beda2fbc92cf9bc995ebdadbf1555b544c000b", "url": "https://github.com/checkstyle/checkstyle/commit/73beda2fbc92cf9bc995ebdadbf1555b544c000b", "message": "doc: sync summaries of all checks", "committedDate": "2020-01-10T21:23:55Z", "type": "forcePushed"}, {"oid": "5cc73252680dc621bee6d5eb67cbbe64f5726c43", "url": "https://github.com/checkstyle/checkstyle/commit/5cc73252680dc621bee6d5eb67cbbe64f5726c43", "message": "doc: sync summaries of all checks", "committedDate": "2020-01-10T22:05:27Z", "type": "forcePushed"}, {"oid": "4a1196454985e23407717806e37aef56935b9da0", "url": "https://github.com/checkstyle/checkstyle/commit/4a1196454985e23407717806e37aef56935b9da0", "message": "doc: sync summaries of all checks", "committedDate": "2020-01-10T22:11:29Z", "type": "forcePushed"}, {"oid": "e12edb95ce7442ac293139239c43ba9a93eb2543", "url": "https://github.com/checkstyle/checkstyle/commit/e12edb95ce7442ac293139239c43ba9a93eb2543", "message": "doc: sync summaries of all checks", "committedDate": "2020-01-10T22:15:36Z", "type": "forcePushed"}, {"oid": "3cc3e0eb42e0666b890753f8e07b778d19a6e97a", "url": "https://github.com/checkstyle/checkstyle/commit/3cc3e0eb42e0666b890753f8e07b778d19a6e97a", "message": "doc: sync summaries of all checks", "committedDate": "2020-01-10T23:10:47Z", "type": "commit"}, {"oid": "3cc3e0eb42e0666b890753f8e07b778d19a6e97a", "url": "https://github.com/checkstyle/checkstyle/commit/3cc3e0eb42e0666b890753f8e07b778d19a6e97a", "message": "doc: sync summaries of all checks", "committedDate": "2020-01-10T23:10:47Z", "type": "forcePushed"}]}