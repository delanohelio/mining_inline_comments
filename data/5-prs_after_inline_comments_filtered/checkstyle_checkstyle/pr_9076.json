{"pr_number": 9076, "pr_title": " Issue #4358: add requiredJavadocPhrase to DesignForExtensionCheck", "pr_createdAt": "2020-12-03T06:44:44Z", "pr_url": "https://github.com/checkstyle/checkstyle/pull/9076", "timeline": [{"oid": "4f094f122f601f3db2e7228798fc37bdfa0edb44", "url": "https://github.com/checkstyle/checkstyle/commit/4f094f122f601f3db2e7228798fc37bdfa0edb44", "message": "minor: refactor static methods to instance methods(#4358)", "committedDate": "2020-12-03T06:52:34Z", "type": "forcePushed"}, {"oid": "30940061b8b45754f36605f419f0d11f5f0d0e76", "url": "https://github.com/checkstyle/checkstyle/commit/30940061b8b45754f36605f419f0d11f5f0d0e76", "message": "minor: refactor static methods to instance methods(#4358)", "committedDate": "2020-12-03T07:01:31Z", "type": "forcePushed"}, {"oid": "aa55094ded1af219336fa3df14dfdc32508ed7b2", "url": "https://github.com/checkstyle/checkstyle/commit/aa55094ded1af219336fa3df14dfdc32508ed7b2", "message": "minor: refactor static methods to instance methods(#4358)", "committedDate": "2020-12-29T05:07:49Z", "type": "forcePushed"}, {"oid": "fbfc298ab7d1069efd19067c623ed61e360bec6e", "url": "https://github.com/checkstyle/checkstyle/commit/fbfc298ab7d1069efd19067c623ed61e360bec6e", "message": "minor: refactor static methods to instance methods(#4358)", "committedDate": "2021-01-01T15:16:08Z", "type": "forcePushed"}, {"oid": "d32d7c3f2c0b4b6d8b41a4df6d8245de22ba6948", "url": "https://github.com/checkstyle/checkstyle/commit/d32d7c3f2c0b4b6d8b41a4df6d8245de22ba6948", "message": "minor: refactor static methods to instance methods(#4358)", "committedDate": "2021-01-07T04:28:30Z", "type": "forcePushed"}, {"oid": "d34dc5c0c0889e3ef67d0127dcda39ba31ff0dd6", "url": "https://github.com/checkstyle/checkstyle/commit/d34dc5c0c0889e3ef67d0127dcda39ba31ff0dd6", "message": "minor: refactor static methods to instance methods(#4358)", "committedDate": "2021-01-08T03:40:03Z", "type": "forcePushed"}, {"oid": "a4cde628939506bf93cfe63dbefbeab9f30095f7", "url": "https://github.com/checkstyle/checkstyle/commit/a4cde628939506bf93cfe63dbefbeab9f30095f7", "message": "minor: refactor static methods to instance methods(#4358)", "committedDate": "2021-01-10T14:12:05Z", "type": "forcePushed"}, {"oid": "5d76bd0b1919e072fafe809fe8ecb478c23c6321", "url": "https://github.com/checkstyle/checkstyle/commit/5d76bd0b1919e072fafe809fe8ecb478c23c6321", "message": "minor: refactor static methods to instance methods(#4358)", "committedDate": "2021-01-12T13:49:53Z", "type": "forcePushed"}, {"oid": "c497137c6abd3f5fd1aed8e3bea5cbf1968a9b6f", "url": "https://github.com/checkstyle/checkstyle/commit/c497137c6abd3f5fd1aed8e3bea5cbf1968a9b6f", "message": "minor: refactor static methods to instance methods(#4358)", "committedDate": "2021-01-13T00:43:26Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTA1NjYwMg==", "url": "https://github.com/checkstyle/checkstyle/pull/9076#discussion_r559056602", "bodyText": "if you make requiredJavadocPhrase static, can we keep methods to stay static ?", "author": "romani", "createdAt": "2021-01-17T00:18:21Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/DesignForExtensionCheck.java", "diffHunk": "@@ -314,13 +365,13 @@ private static boolean hasJavadocCommentOnToken(DetailAST methodDef, int tokenTy\n      * @param token tree token.\n      * @return true if a javadoc comment exists under the token.\n      */\n-    private static boolean branchContainsJavadocComment(DetailAST token) {\n+    private boolean branchContainsJavadocComment(DetailAST token) {", "originalCommit": "c497137c6abd3f5fd1aed8e3bea5cbf1968a9b6f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDUyNDU3Nw==", "url": "https://github.com/checkstyle/checkstyle/pull/9076#discussion_r560524577", "bodyText": "Seems like Checker does not like static properties:", "author": "nmancus1", "createdAt": "2021-01-19T21:59:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTA1NjYwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Mjc3MTM3Mw==", "url": "https://github.com/checkstyle/checkstyle/pull/9076#discussion_r562771373", "bodyText": "@nmancus1 , please try to share text form of error all the time, image is last resort.", "author": "romani", "createdAt": "2021-01-22T17:00:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTA1NjYwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Mjc3MTk4NQ==", "url": "https://github.com/checkstyle/checkstyle/pull/9076#discussion_r562771985", "bodyText": "this error means you have problem in config with unrecognized name of property", "author": "romani", "createdAt": "2021-01-22T17:02:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTA1NjYwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Mjc3NzkxNw==", "url": "https://github.com/checkstyle/checkstyle/pull/9076#discussion_r562777917", "bodyText": "sorry, I now got a problem, my bad, property of Check can not be static. I recall review item.", "author": "romani", "createdAt": "2021-01-22T17:11:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTA1NjYwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTA1NjgxNQ==", "url": "https://github.com/checkstyle/checkstyle/pull/9076#discussion_r559056815", "bodyText": "add a case of\n/**This method can safely be overridden. */ if this is valid javadoc (I am not sure)", "author": "romani", "createdAt": "2021-01-17T00:20:48Z", "path": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/design/designforextension/InputDesignForExtensionRequiredJavadocPhrase.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package com.puppycrawl.tools.checkstyle.checks.design.designforextension;\n+\n+/* Config:\n+ * requiredJavadocPhrase = \"^This implementation.*\\\\.$\"\n+ *\n+ */\n+public class InputDesignForExtensionRequiredJavadocPhrase {\n+\n+    /**\n+     * This implementation is for <p> some html code\n+     * </p>.\n+     *\n+     * @param a\n+     * @param b\n+     * @return sum\n+     */\n+    public int foo1(int a, int b) {return a + b;}  // ok, required comment pattern in javadoc\n+\n+    /**\n+     * This implementation is required for ...\n+     *\n+     * @param a\n+     * @param b\n+     * @return sum\n+     */\n+    public int foo2(int a, int b) {return a + b;}  // ok, required comment pattern in javadoc\n+\n+    /** This implementation is for ... */\n+    public int foo3(int a, int b) {return a + b;}  // ok, required comment pattern in javadoc\n+\n+    /**\n+     * This implementation ...\n+     */\n+    public int foo4(int a, int b) {return a + b;}  // ok, required comment pattern in javadoc\n+\n+    /** This method can safely be overridden. */", "originalCommit": "c497137c6abd3f5fd1aed8e3bea5cbf1968a9b6f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDUyMTkyMA==", "url": "https://github.com/checkstyle/checkstyle/pull/9076#discussion_r560521920", "bodyText": "This is valid javadoc. Adding.", "author": "nmancus1", "createdAt": "2021-01-19T21:54:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTA1NjgxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDkzNjA1NQ==", "url": "https://github.com/checkstyle/checkstyle/pull/9076#discussion_r560936055", "bodyText": "Done.", "author": "nmancus1", "createdAt": "2021-01-20T12:51:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTA1NjgxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Mjc3MjcyOQ==", "url": "https://github.com/checkstyle/checkstyle/pull/9076#discussion_r562772729", "bodyText": "input code is always a text, javadoc as image is ok.", "author": "romani", "createdAt": "2021-01-22T17:03:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTA1NjgxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTI2Mjc0Ng==", "url": "https://github.com/checkstyle/checkstyle/pull/9076#discussion_r559262746", "bodyText": "there will be questions from users on how we treat match on multi lines.\nPlease add fee words on this in property description and please add example\n *   /&#42;&#42; This\n *   &#42; implementation ...", "author": "romani", "createdAt": "2021-01-18T00:22:23Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/DesignForExtensionCheck.java", "diffHunk": "@@ -208,6 +215,35 @@\n  * }\n  * </pre>\n  * <p>\n+ * To configure the check to allow methods which contain a specified comment text\n+ * pattern in their javadoc to be designed for extension.\n+ * </p>\n+ * <pre>\n+ * &lt;module name=&quot;DesignForExtension&quot;&gt;\n+ *   &lt;property name=&quot;requiredJavadocPhrase&quot;\n+ *     value=&quot;This implementation&quot;/&gt;", "originalCommit": "c497137c6abd3f5fd1aed8e3bea5cbf1968a9b6f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDkzNjE4Nw==", "url": "https://github.com/checkstyle/checkstyle/pull/9076#discussion_r560936187", "bodyText": "Done, also added test case.", "author": "nmancus1", "createdAt": "2021-01-20T12:51:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTI2Mjc0Ng=="}], "type": "inlineReview"}, {"oid": "38a58ee12d769a87816a37f68fd4015852a96062", "url": "https://github.com/checkstyle/checkstyle/commit/38a58ee12d769a87816a37f68fd4015852a96062", "message": "Issue #4358: add requiredJavadocPhrase to DesignForExtensionCheck", "committedDate": "2021-01-20T12:47:05Z", "type": "forcePushed"}, {"oid": "65b26d2972c32d9eaa3d6034ba67c0c6bfba0b18", "url": "https://github.com/checkstyle/checkstyle/commit/65b26d2972c32d9eaa3d6034ba67c0c6bfba0b18", "message": "Issue #4358: add requiredJavadocPhrase to DesignForExtensionCheck", "committedDate": "2021-01-20T12:58:21Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Mjc3NDUxMA==", "url": "https://github.com/checkstyle/checkstyle/pull/9076#discussion_r562774510", "bodyText": "remove extra space", "author": "romani", "createdAt": "2021-01-22T17:06:04Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/DesignForExtensionCheck.java", "diffHunk": "@@ -236,6 +304,12 @@\n     private Set<String> ignoredAnnotations = Arrays.stream(new String[] {\"Test\", \"Before\", \"After\",\n         \"BeforeClass\", \"AfterClass\", }).collect(Collectors.toSet());\n \n+    /**\n+     * Specify the comment text pattern which qualifies a method as designed for extension.\n+     *  Supports multi-line regex.", "originalCommit": "65b26d2972c32d9eaa3d6034ba67c0c6bfba0b18", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Mjc3OTM5Ng==", "url": "https://github.com/checkstyle/checkstyle/pull/9076#discussion_r562779396", "bodyText": "please make method single line as methods below to be consistent in look.", "author": "romani", "createdAt": "2021-01-22T17:13:42Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/DesignForExtensionCheck.java", "diffHunk": "@@ -208,6 +216,66 @@\n  * }\n  * </pre>\n  * <p>\n+ * To configure the check to allow methods which contain a specified comment text\n+ * pattern in their javadoc to be designed for extension.\n+ * </p>\n+ * <pre>\n+ * &lt;module name=&quot;DesignForExtension&quot;&gt;\n+ *   &lt;property name=&quot;requiredJavadocPhrase&quot;\n+ *     value=&quot;This implementation&quot;/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <pre>\n+ * public class A extends B {\n+ *   /&#42;&#42;\n+ *   &#42; This implementation ...\n+ *   &#42;\n+ *   &#42;/\n+ *   public int foo() { // ok, required javadoc phrase in comment\n+ *     return 2;", "originalCommit": "65b26d2972c32d9eaa3d6034ba67c0c6bfba0b18", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Mjg3NDU2Mw==", "url": "https://github.com/checkstyle/checkstyle/pull/9076#discussion_r562874563", "bodyText": "Done.", "author": "nmancus1", "createdAt": "2021-01-22T19:57:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Mjc3OTM5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Mjc3OTU3MQ==", "url": "https://github.com/checkstyle/checkstyle/pull/9076#discussion_r562779571", "bodyText": "single line please", "author": "romani", "createdAt": "2021-01-22T17:13:59Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/DesignForExtensionCheck.java", "diffHunk": "@@ -208,6 +216,66 @@\n  * }\n  * </pre>\n  * <p>\n+ * To configure the check to allow methods which contain a specified comment text\n+ * pattern in their javadoc to be designed for extension.\n+ * </p>\n+ * <pre>\n+ * &lt;module name=&quot;DesignForExtension&quot;&gt;\n+ *   &lt;property name=&quot;requiredJavadocPhrase&quot;\n+ *     value=&quot;This implementation&quot;/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <pre>\n+ * public class A extends B {\n+ *   /&#42;&#42;\n+ *   &#42; This implementation ...\n+ *   &#42;\n+ *   &#42;/\n+ *   public int foo() { // ok, required javadoc phrase in comment\n+ *     return 2;\n+ *   }\n+ *\n+ *   /&#42;&#42;\n+ *   &#42; Do not extend ...\n+ *   &#42;\n+ *   &#42;/\n+ *   public int foo2() {return 8;} // violation, required javadoc phrase not in comment\n+ *\n+ *   public int foo3() {return 3;} // violation, required javadoc phrase not in comment\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check to allow methods which contain a specified comment text\n+ * pattern in their javadoc which can span multiple lines\n+ * to be designed for extension.\n+ * </p>\n+ * <pre>\n+ * &lt;module name=&quot;DesignForExtension&quot;&gt;\n+ *   &lt;property name=&quot;requiredJavadocPhrase&quot;\n+ *     value=&quot;This[\\s\\S]*implementation&quot;/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <pre>\n+ * public class A extends B {\n+ *   /&#42;&#42;\n+ *   &#42; This\n+ *   &#42; implementation ...\n+ *   &#42;\n+ *   &#42;/\n+ *   public int foo() { // ok, required javadoc phrase in comment\n+ *     return 2;", "originalCommit": "65b26d2972c32d9eaa3d6034ba67c0c6bfba0b18", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Mjg3NDUxNA==", "url": "https://github.com/checkstyle/checkstyle/pull/9076#discussion_r562874514", "bodyText": "Done.", "author": "nmancus1", "createdAt": "2021-01-22T19:57:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Mjc3OTU3MQ=="}], "type": "inlineReview"}, {"oid": "b61406ac8f000fafb01c62f9305c435a8bfeef16", "url": "https://github.com/checkstyle/checkstyle/commit/b61406ac8f000fafb01c62f9305c435a8bfeef16", "message": "Issue #4358: add requiredJavadocPhrase to DesignForExtensionCheck", "committedDate": "2021-01-22T19:57:02Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjkxNDY5OA==", "url": "https://github.com/checkstyle/checkstyle/pull/9076#discussion_r562914698", "bodyText": "remove extends B in all cases.\nCheck do make any decision on this.", "author": "romani", "createdAt": "2021-01-22T21:15:01Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/DesignForExtensionCheck.java", "diffHunk": "@@ -208,6 +216,62 @@\n  * }\n  * </pre>\n  * <p>\n+ * To configure the check to allow methods which contain a specified comment text\n+ * pattern in their javadoc to be designed for extension.\n+ * </p>\n+ * <pre>\n+ * &lt;module name=&quot;DesignForExtension&quot;&gt;\n+ *   &lt;property name=&quot;requiredJavadocPhrase&quot;\n+ *     value=&quot;This implementation&quot;/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <pre>\n+ * public class A extends B {", "originalCommit": "b61406ac8f000fafb01c62f9305c435a8bfeef16", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzE1Mjg5Nw==", "url": "https://github.com/checkstyle/checkstyle/pull/9076#discussion_r563152897", "bodyText": "Done in examples from this PR and existing example in separate commit.", "author": "nmancus1", "createdAt": "2021-01-23T13:29:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjkxNDY5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjkyMTA1NQ==", "url": "https://github.com/checkstyle/checkstyle/pull/9076#discussion_r562921055", "bodyText": "please remove such empty lines from javadoc, the less unnecessary stuff the better for user.", "author": "romani", "createdAt": "2021-01-22T21:24:50Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/DesignForExtensionCheck.java", "diffHunk": "@@ -208,6 +216,62 @@\n  * }\n  * </pre>\n  * <p>\n+ * To configure the check to allow methods which contain a specified comment text\n+ * pattern in their javadoc to be designed for extension.\n+ * </p>\n+ * <pre>\n+ * &lt;module name=&quot;DesignForExtension&quot;&gt;\n+ *   &lt;property name=&quot;requiredJavadocPhrase&quot;\n+ *     value=&quot;This implementation&quot;/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <pre>\n+ * public class A extends B {\n+ *   /&#42;&#42;\n+ *   &#42; This implementation ...\n+ *   &#42;\n+ *   &#42;/\n+ *   public int foo() {return 2;} // ok, required javadoc phrase in comment\n+ *\n+ *   /&#42;&#42;\n+ *   &#42; Do not extend ...\n+ *   &#42;", "originalCommit": "b61406ac8f000fafb01c62f9305c435a8bfeef16", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzE1Mjk1Mg==", "url": "https://github.com/checkstyle/checkstyle/pull/9076#discussion_r563152952", "bodyText": "Done.", "author": "nmancus1", "createdAt": "2021-01-23T13:29:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjkyMTA1NQ=="}], "type": "inlineReview"}, {"oid": "eaf3085d74b4fbbef6856c32345d57fa24d72cb1", "url": "https://github.com/checkstyle/checkstyle/commit/eaf3085d74b4fbbef6856c32345d57fa24d72cb1", "message": "Issue #4358: add requiredJavadocPhrase to DesignForExtensionCheck", "committedDate": "2021-01-23T13:22:29Z", "type": "commit"}, {"oid": "dfd60bef8c6ead96438c633b03b91febfbd9c270", "url": "https://github.com/checkstyle/checkstyle/commit/dfd60bef8c6ead96438c633b03b91febfbd9c270", "message": "minor: remove uneccessary \"extends\" from code example", "committedDate": "2021-01-23T13:22:29Z", "type": "commit"}, {"oid": "dfd60bef8c6ead96438c633b03b91febfbd9c270", "url": "https://github.com/checkstyle/checkstyle/commit/dfd60bef8c6ead96438c633b03b91febfbd9c270", "message": "minor: remove uneccessary \"extends\" from code example", "committedDate": "2021-01-23T13:22:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzE3NTE1NQ==", "url": "https://github.com/checkstyle/checkstyle/pull/9076#discussion_r563175155", "bodyText": "#4358 (comment)\n\nDefault should be \"^This implementation \" (as mentioned in our html doc).\n\nWas this changed?", "author": "rnveach", "createdAt": "2021-01-23T17:05:57Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/DesignForExtensionCheck.java", "diffHunk": "@@ -159,6 +161,12 @@\n  * Type is {@code java.lang.String[]}.\n  * Default value is {@code After, AfterClass, Before, BeforeClass, Test}.\n  * </li>\n+ * <li>\n+ * Property {@code requiredJavadocPhrase} - Specify the comment text pattern which qualifies a\n+ * method as designed for extension. Supports multi-line regex.\n+ * Type is {@code java.util.regex.Pattern}.\n+ * Default value is {@code \".*\"}.", "originalCommit": "dfd60bef8c6ead96438c633b03b91febfbd9c270", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzIwMzg3MQ==", "url": "https://github.com/checkstyle/checkstyle/pull/9076#discussion_r563203871", "bodyText": "See #8203 (comment).  This PR is a continuation of that one.", "author": "nmancus1", "createdAt": "2021-01-23T21:51:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzE3NTE1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzIwNzAwNQ==", "url": "https://github.com/checkstyle/checkstyle/pull/9076#discussion_r563207005", "bodyText": "https://checkstyle.org/config_design.html#DesignForExtension\nI did a quote from book for this phrase.\nNot sure why I suggested it as default value.\nProbably as breaking compatibility concern it is better to have default as any text. As writing of javadoc is already major attitude for method :).\nBut I am ok to vote on it.", "author": "romani", "createdAt": "2021-01-23T22:27:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzE3NTE1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzIzNDk4MA==", "url": "https://github.com/checkstyle/checkstyle/pull/9076#discussion_r563234980", "bodyText": "I am just pointing it out. If such a change is a breaking change then I recommend splitting it into a different issue that can be marked with breaking compatibility. We should try to avoid breaking compatibility in the same issue as a new feature. The release notes are not kindly to doing both at the same time.", "author": "rnveach", "createdAt": "2021-01-24T04:18:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzE3NTE1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzMwNjU5Mg==", "url": "https://github.com/checkstyle/checkstyle/pull/9076#discussion_r563306592", "bodyText": "good point.\nI will not create issue on this, lets users request this if they care.", "author": "romani", "createdAt": "2021-01-24T15:13:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzE3NTE1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzE3NTczMA==", "url": "https://github.com/checkstyle/checkstyle/pull/9076#discussion_r563175730", "bodyText": "What happens if there is HTML between the text? Bold for example. How do I configure this?", "author": "rnveach", "createdAt": "2021-01-23T17:11:46Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/DesignForExtensionCheck.java", "diffHunk": "@@ -208,6 +216,58 @@\n  * }\n  * </pre>\n  * <p>\n+ * To configure the check to allow methods which contain a specified comment text\n+ * pattern in their javadoc to be designed for extension.\n+ * </p>\n+ * <pre>\n+ * &lt;module name=&quot;DesignForExtension&quot;&gt;\n+ *   &lt;property name=&quot;requiredJavadocPhrase&quot;\n+ *     value=&quot;This implementation&quot;/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <pre>\n+ * public class A {\n+ *   /&#42;&#42;\n+ *   &#42; This implementation ...\n+ *   &#42;/\n+ *   public int foo() {return 2;} // ok, required javadoc phrase in comment\n+ *\n+ *   /&#42;&#42;\n+ *   &#42; Do not extend ...\n+ *   &#42;/\n+ *   public int foo2() {return 8;} // violation, required javadoc phrase not in comment\n+ *\n+ *   public int foo3() {return 3;} // violation, required javadoc phrase not in comment\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check to allow methods which contain a specified comment text\n+ * pattern in their javadoc which can span multiple lines", "originalCommit": "dfd60bef8c6ead96438c633b03b91febfbd9c270", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzIwMTg0MQ==", "url": "https://github.com/checkstyle/checkstyle/pull/9076#discussion_r563201841", "bodyText": "I think it will be just text", "author": "romani", "createdAt": "2021-01-23T21:31:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzE3NTczMA=="}], "type": "inlineReview"}]}