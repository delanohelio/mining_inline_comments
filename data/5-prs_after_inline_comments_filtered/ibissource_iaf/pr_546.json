{"pr_number": 546, "pr_title": "Allow the use of custom code in configurations", "pr_createdAt": "2020-03-28T20:54:28Z", "pr_url": "https://github.com/ibissource/iaf/pull/546", "timeline": [{"oid": "6a16df0bfa6df52d2f7644ad7647cd1acae31c0b", "url": "https://github.com/ibissource/iaf/commit/6a16df0bfa6df52d2f7644ad7647cd1acae31c0b", "message": "Allow the use of custom code in configurations", "committedDate": "2020-03-28T20:50:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIwNjk0Ng==", "url": "https://github.com/ibissource/iaf/pull/546#discussion_r400206946", "bodyText": "moet dit niet path zijn?", "author": "nielsm5", "createdAt": "2020-03-30T13:50:30Z", "path": "core/src/main/java/nl/nn/adapterframework/configuration/classloaders/ClassLoaderBase.java", "diffHunk": "@@ -217,6 +223,35 @@ public URL getResource(String name, boolean useParent) {\n \t\treturn urls.elements();\n \t}\n \n+\t@Override\n+\tprotected Class<?> loadClass(String name, boolean resolve) throws ClassNotFoundException {\n+\t\tThrowable throwable = null;\n+\t\ttry {\n+\t\t\treturn getParent().loadClass(name); // First try to load the class natively\n+\t\t} catch (Throwable t) { // Catch NoClassDefFoundError and ClassNotFoundExceptions\n+\t\t\tthrowable = t;\n+\t\t}\n+\n+\t\tString path = name.replace(\".\", \"/\")+\".class\";\n+\t\tURL url = null;\n+\t\tif(allowCustomClasses) {\n+\t\t\turl = getResource(name);", "originalCommit": "6a16df0bfa6df52d2f7644ad7647cd1acae31c0b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}