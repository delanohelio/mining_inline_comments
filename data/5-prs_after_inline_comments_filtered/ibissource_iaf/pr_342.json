{"pr_number": 342, "pr_title": "More GUI Enhancements and bugfixes", "pr_createdAt": "2020-01-03T14:45:46Z", "pr_url": "https://github.com/ibissource/iaf/pull/342", "timeline": [{"oid": "9c09c5aa22ae43796b881adee8e23113509966d0", "url": "https://github.com/ibissource/iaf/commit/9c09c5aa22ae43796b881adee8e23113509966d0", "message": "Upgrade RestEasy version to fix a few minor bugs\n\nhttps://issues.redhat.com/browse/RESTEASY-952?_sscc=t", "committedDate": "2020-01-02T09:43:16Z", "type": "commit"}, {"oid": "f0b0615f9cdb037306847e81912132d7b6152ef1", "url": "https://github.com/ibissource/iaf/commit/f0b0615f9cdb037306847e81912132d7b6152ef1", "message": "Dynamically load spring config files instead of using xml includes", "committedDate": "2020-01-02T12:31:33Z", "type": "commit"}, {"oid": "0971a115e02567754a29204b3907c4684ead1ce4", "url": "https://github.com/ibissource/iaf/commit/0971a115e02567754a29204b3907c4684ead1ce4", "message": "Prevent infinite amount of warnings when adapter in error state", "committedDate": "2020-01-02T14:26:09Z", "type": "commit"}, {"oid": "08b5b6182bb0eaeb56a45defc0158edf9e25e17d", "url": "https://github.com/ibissource/iaf/commit/08b5b6182bb0eaeb56a45defc0158edf9e25e17d", "message": "Run poller when started", "committedDate": "2020-01-02T14:34:35Z", "type": "commit"}, {"oid": "4ed78f45f1de815d28a7940b62131184d43f1b98", "url": "https://github.com/ibissource/iaf/commit/4ed78f45f1de815d28a7940b62131184d43f1b98", "message": "Fix etag handling", "committedDate": "2020-01-02T15:33:42Z", "type": "commit"}, {"oid": "c98bd8534c6e9b94dc9053160b215267c5097ed9", "url": "https://github.com/ibissource/iaf/commit/c98bd8534c6e9b94dc9053160b215267c5097ed9", "message": "Quartz is created, managed and destroyed by Spring, no need for this", "committedDate": "2020-01-03T09:34:12Z", "type": "commit"}, {"oid": "81f115e62fdc0c8a57df6a0332af68b2831e87c3", "url": "https://github.com/ibissource/iaf/commit/81f115e62fdc0c8a57df6a0332af68b2831e87c3", "message": "Load GUI 3.0 even when IBIS is in error more", "committedDate": "2020-01-06T14:51:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzMzMzkxNQ==", "url": "https://github.com/ibissource/iaf/pull/342#discussion_r363333915", "bodyText": "Deze System.out.println is niet echt nodig, toch? Anders in een comment zetten waarom hier wel.", "author": "gvanbrakel", "createdAt": "2020-01-06T15:11:13Z", "path": "core/src/main/java/nl/nn/adapterframework/lifecycle/IbisApplicationContext.java", "diffHunk": "@@ -157,6 +173,42 @@ private XmlWebApplicationContext createWebApplicationContext() throws BeansExcep\n \t\treturn applicationContext;\n \t}\n \n+\t/**\n+\t * Loads springContext, springUnmanagedDeployment, springCommon and files specified by the SPRING.CONFIG.LOCATIONS\n+\t * property in AppConstants.properties\n+\t * \n+\t * @param classLoader to use in order to find and validate the Spring Configuration files\n+\t * @return A String array containing all files to use.\n+\t */\n+\tprivate String[] getSpringConfigurationFiles(ClassLoader classLoader) {\n+\t\tList<String> springConfigurationFiles = new ArrayList<String>();\n+\t\tspringConfigurationFiles.add(XmlWebApplicationContext.CLASSPATH_URL_PREFIX + \"/springContext.xml\");\n+\t\tspringConfigurationFiles.add(XmlWebApplicationContext.CLASSPATH_URL_PREFIX + \"/springUnmanagedDeployment.xml\");\n+\t\tspringConfigurationFiles.add(XmlWebApplicationContext.CLASSPATH_URL_PREFIX + \"/springCommon.xml\");\n+\n+\t\tStringTokenizer locationTokenizer = AppConstants.getInstance().getTokenizedProperty(\"SPRING.CONFIG.LOCATIONS\");\n+\t\twhile(locationTokenizer.hasMoreTokens()) {\n+\t\t\tString file = locationTokenizer.nextToken();\n+\t\t\tlog.info(\"found spring configuration file to load [\"+file+\"]\");\n+\n+\t\t\tURL fileURL = classLoader.getResource(file);\n+\t\t\tif(fileURL == null) {\n+\t\t\t\tlog.error(\"unable to locate Spring configuration file [\"+file+\"]\");\n+\t\t\t\tSystem.out.println(\"unable to locate Spring configuration file [\"+file+\"]\");\n+\t\t\t} else {\n+\t\t\t\tif(file.indexOf(\":\") == -1) {\n+\t\t\t\t\tfile = XmlWebApplicationContext.CLASSPATH_URL_PREFIX+\"/\"+file;\n+\t\t\t\t}\n+\n+\t\t\t\tspringConfigurationFiles.add(file);\n+\t\t\t}\n+\t\t}\n+\n+\t\tlog.info(\"loading Spring configuration files \"+springConfigurationFiles+\"\");\n+\t\tSystem.out.println(\"loading Spring configuration files \"+springConfigurationFiles+\"\");", "originalCommit": "81f115e62fdc0c8a57df6a0332af68b2831e87c3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}