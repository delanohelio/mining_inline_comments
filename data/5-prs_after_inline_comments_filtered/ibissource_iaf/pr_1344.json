{"pr_number": 1344, "pr_title": "Introduce javascript.engines property for flowchart", "pr_createdAt": "2020-12-16T16:30:33Z", "pr_url": "https://github.com/ibissource/iaf/pull/1344", "timeline": [{"oid": "c556314a5bccf7a1a7bf790707751821e41de5c0", "url": "https://github.com/ibissource/iaf/commit/c556314a5bccf7a1a7bf790707751821e41de5c0", "message": "Introduce javascript.engines property to set comma separated engine list", "committedDate": "2020-12-16T16:17:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcwNjgyMw==", "url": "https://github.com/ibissource/iaf/pull/1344#discussion_r545706823", "bodyText": "I think this should be done once, (moved to the top). Otherwise this will happen every time a new engine is generated..\nYou can, instead of using split, use AppConstants.getTokenizedProperty()", "author": "nielsm5", "createdAt": "2020-12-18T09:28:26Z", "path": "core/src/main/java/nl/nn/adapterframework/extensions/graphviz/GraphvizEngine.java", "diffHunk": "@@ -156,21 +155,22 @@ private String getVisJsWrapper() {\n \n \t\tEngine(String initScript, String graphvisJsLibrary) {\n \t\t\t// Available JS Engines. Lower index has priority.\n-\t\t\tClass<?>[] engines = new Class[]{J2V8.class, Nashorn.class};\n+\t\t\tString[] engines = AppConstants.getInstance().getString(\"javascript.engines\", \"nl.nn.adapterframework.extensions.javascript.J2V8,nl.nn.adapterframework.extensions.javascript.Nashorn\").split(\",\");", "originalCommit": "c556314a5bccf7a1a7bf790707751821e41de5c0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcxMTg5NA==", "url": "https://github.com/ibissource/iaf/pull/1344#discussion_r545711894", "bodyText": "I think it would be a good idea, to have some form of instanceof check here, to validate if the new class instance is indeed castable to JavascriptEngine and if not returns a readable error message. If you move all this logic to the constructor, instead of keeping a String[] you can keep using the Class[].", "author": "nielsm5", "createdAt": "2020-12-18T09:35:21Z", "path": "core/src/main/java/nl/nn/adapterframework/extensions/graphviz/GraphvizEngine.java", "diffHunk": "@@ -156,21 +155,22 @@ private String getVisJsWrapper() {\n \n \t\tEngine(String initScript, String graphvisJsLibrary) {\n \t\t\t// Available JS Engines. Lower index has priority.\n-\t\t\tClass<?>[] engines = new Class[]{J2V8.class, Nashorn.class};\n+\t\t\tString[] engines = AppConstants.getInstance().getString(\"javascript.engines\", \"nl.nn.adapterframework.extensions.javascript.J2V8,nl.nn.adapterframework.extensions.javascript.Nashorn\").split(\",\");\n \n \t\t\tfor (int i = 0; i < engines.length && jsEngine == null; i++) {\n \t\t\t\ttry {\n-\t\t\t\t\tlog.debug(\"Trying Javascript engine [\" + engines[i].getName() + \"] for Graphviz.\");\n-\t\t\t\t\tJavascriptEngine<?> engine = ((JavascriptEngine<?>) engines[i].newInstance());\n+\t\t\t\t\tClass<?> clazz = Class.forName(engines[i]);\n+\t\t\t\t\tlog.debug(\"Trying Javascript engine [\" + engines[i] + \"] for Graphviz.\");\n+\t\t\t\t\tJavascriptEngine<?> engine = ((JavascriptEngine<?>) clazz.newInstance());", "originalCommit": "c556314a5bccf7a1a7bf790707751821e41de5c0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "723f19d270feba2a43df0415d681deac07d0adaa", "url": "https://github.com/ibissource/iaf/commit/723f19d270feba2a43df0415d681deac07d0adaa", "message": "work on the feedback", "committedDate": "2020-12-21T14:22:11Z", "type": "commit"}, {"oid": "a835701efd8bd8fd8e5762ca81bda78653753d89", "url": "https://github.com/ibissource/iaf/commit/a835701efd8bd8fd8e5762ca81bda78653753d89", "message": "fix failing tests", "committedDate": "2020-12-21T15:10:51Z", "type": "commit"}]}