{"pr_number": 1041, "pr_title": "Clearify 'IntegrityCheck' warning", "pr_createdAt": "2020-09-07T10:30:00Z", "pr_url": "https://github.com/ibissource/iaf/pull/1041", "timeline": [{"oid": "959fa55c6a57d174213903758dbfea283caefa25", "url": "https://github.com/ibissource/iaf/commit/959fa55c6a57d174213903758dbfea283caefa25", "message": "Clearify 'IntegrityCheck' warning", "committedDate": "2020-09-07T10:29:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM4MjQ4MA==", "url": "https://github.com/ibissource/iaf/pull/1041#discussion_r484382480", "bodyText": "moet dit ook niet (net als bij de directquery sender warnings.suppress.sqlInjections.<adapter>) dat je het op adapter niveau kan uitzetten?\nwarnings.suppress.integrityCheck en warnings.suppress.integrityCheck.<adapter> ?", "author": "nielsm5", "createdAt": "2020-09-07T11:48:57Z", "path": "core/src/main/java/nl/nn/adapterframework/pipes/MessageSendingPipe.java", "diffHunk": "@@ -365,7 +365,9 @@ public void configure() throws ConfigurationException {\n \t\tif (checkMessageLog) {\n \t\t\tif (!getSender().isSynchronous() && getListener()==null && !(getSender() instanceof nl.nn.adapterframework.senders.IbisLocalSender)) {\n \t\t\t\tif (messageLog==null) {\n-\t\t\t\t\tConfigurationWarnings.add(this, log, \"asynchronous sender [\" + getSender().getName() + \"] without sibling listener has no messageLog. Integrity check not possible\");\n+\t\t\t\t\tConfigurationWarnings.add(this, log, \"asynchronous sender [\" + getSender().getName() + \"] without sibling listener has no messageLog. \" + \n+\t\t\t\t\t\t\t\t\"Integrity check (matching messages received by the adapter to messages sent by this pipe) will not be possible. \" + \n+\t\t\t\t\t\t\t\t\"This warning can be suppressed by setting property messageLog.check=false\");", "originalCommit": "959fa55c6a57d174213903758dbfea283caefa25", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQyOTk5OA==", "url": "https://github.com/ibissource/iaf/pull/1041#discussion_r484429998", "bodyText": "(adapter noemen bij sql injection warning)", "author": "nielsm5", "createdAt": "2020-09-07T13:24:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM4MjQ4MA=="}], "type": "inlineReview"}, {"oid": "fb8ccb4773db09f72f580b1ea94c40173e1f8ff7", "url": "https://github.com/ibissource/iaf/commit/fb8ccb4773db09f72f580b1ea94c40173e1f8ff7", "message": "Replace property messageLog.check by warnings.suppress.integrityCheck", "committedDate": "2020-09-07T16:05:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk0NTY4Mg==", "url": "https://github.com/ibissource/iaf/pull/1041#discussion_r484945682", "bodyText": "Misschien in de configure zetten en zorgen dat dit maar 1 maal per configuratie voor kan komen?", "author": "nielsm5", "createdAt": "2020-09-08T14:03:01Z", "path": "core/src/main/java/nl/nn/adapterframework/pipes/MessageSendingPipe.java", "diffHunk": "@@ -362,14 +360,24 @@ public void configure() throws ConfigurationException {\n \t\t\t}\n \t\t}\n \t\tITransactionalStorage messageLog = getMessageLog();\n-\t\tif (checkMessageLog) {\n-\t\t\tif (!getSender().isSynchronous() && getListener()==null && !(getSender() instanceof nl.nn.adapterframework.senders.IbisLocalSender)) {\n-\t\t\t\tif (messageLog==null) {\n-\t\t\t\t\tConfigurationWarnings.add(this, log, \"asynchronous sender [\" + getSender().getName() + \"] without sibling listener has no messageLog. Integrity check not possible\");\n+\t\tif (messageLog==null) {\n+\t\t\tif (!getSender().isSynchronous() && getListener()==null && !(getSender() instanceof nl.nn.adapterframework.senders.IbisLocalSender)) { // sender is asynchronous and not a local sender, but has no messageLog\n+\t\t\t\tboolean suppressIntegrityCheckWarning = ConfigurationWarnings.isSuppressed(\"warnings.suppress.integrityCheck\", getAdapter(), getConfigurationClassLoader());\n+\t\t\t\tif (!suppressIntegrityCheckWarning) {\n+\t\t\t\t\tboolean legacyCheckMessageLog = AppConstants.getInstance(getConfigurationClassLoader()).getBoolean(\"messageLog.check\", true);\n+\t\t\t\t\tif (!legacyCheckMessageLog) {\n+\t\t\t\t\t\tConfigurationWarnings.add(this, log, \"Suppressing integrityCheck warnings by setting property 'messageLog.check=false' has been replaced by by setting property 'warnings.suppress.integrityCheck=true'\");\n+\t\t\t\t\t\tsuppressIntegrityCheckWarning=true;\n+\t\t\t\t\t}", "originalCommit": "fb8ccb4773db09f72f580b1ea94c40173e1f8ff7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}