{"pr_number": 771, "pr_title": "Fix #591 Avoid use of plain XMLReaderFactory and TransformerFactory", "pr_createdAt": "2020-05-29T09:14:09Z", "pr_url": "https://github.com/ibissource/iaf/pull/771", "timeline": [{"oid": "7e3b48f8a02ada44f7f2cdd0bb24f1c268557c34", "url": "https://github.com/ibissource/iaf/commit/7e3b48f8a02ada44f7f2cdd0bb24f1c268557c34", "message": "Fix #591 Avoid use of plain XMLReaderFactory and TransformerFactory", "committedDate": "2020-05-29T09:13:38Z", "type": "commit"}, {"oid": "756a3fef143c49cc1eefd64f531b046f40abeadf", "url": "https://github.com/ibissource/iaf/commit/756a3fef143c49cc1eefd64f531b046f40abeadf", "message": "Fix tests", "committedDate": "2020-05-29T09:50:34Z", "type": "commit"}, {"oid": "1591065cadf0821ff5ff3d1e8415d55e50855681", "url": "https://github.com/ibissource/iaf/commit/1591065cadf0821ff5ff3d1e8415d55e50855681", "message": "No entity resolving in validation", "committedDate": "2020-06-05T07:00:05Z", "type": "commit"}, {"oid": "65364828300f72621722a3528169098fe52722c8", "url": "https://github.com/ibissource/iaf/commit/65364828300f72621722a3528169098fe52722c8", "message": "Merge branch 'master' into fix#591_avoid_xxe_attacks_in_xml_alignment", "committedDate": "2020-06-05T07:04:25Z", "type": "commit"}, {"oid": "ecc2c989f22945ddecd3cbfe6ebf2e4043a2496e", "url": "https://github.com/ibissource/iaf/commit/ecc2c989f22945ddecd3cbfe6ebf2e4043a2496e", "message": "Merge branch 'xxe_temp' into fix#591_avoid_xxe_attacks_in_xml_alignment", "committedDate": "2020-06-05T07:05:19Z", "type": "commit"}, {"oid": "7b94f410e2696970b700c0e7c0561fbc05fd0c12", "url": "https://github.com/ibissource/iaf/commit/7b94f410e2696970b700c0e7c0561fbc05fd0c12", "message": "switch parameter order in parseXml()", "committedDate": "2020-06-05T11:22:10Z", "type": "commit"}, {"oid": "62640300433ec5a8d062f12590a7ab453806afcd", "url": "https://github.com/ibissource/iaf/commit/62640300433ec5a8d062f12590a7ab453806afcd", "message": "Resolve entities only for Resources", "committedDate": "2020-06-05T11:47:40Z", "type": "commit"}, {"oid": "7b9a54699524f42ee96d925123115210c7bd3d17", "url": "https://github.com/ibissource/iaf/commit/7b9a54699524f42ee96d925123115210c7bd3d17", "message": "Fix Codacy issues", "committedDate": "2020-06-05T12:04:32Z", "type": "commit"}, {"oid": "98de20e11197d446f8b9a7584d55fd7bab22c395", "url": "https://github.com/ibissource/iaf/commit/98de20e11197d446f8b9a7584d55fd7bab22c395", "message": "Remove unused file", "committedDate": "2020-06-05T12:24:13Z", "type": "commit"}, {"oid": "36fc97ea7cc8a6285c31601df7591be1a9caed40", "url": "https://github.com/ibissource/iaf/commit/36fc97ea7cc8a6285c31601df7591be1a9caed40", "message": "Use configured XMLReader in digester", "committedDate": "2020-06-08T09:02:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY5OTI4MQ==", "url": "https://github.com/ibissource/iaf/pull/771#discussion_r436699281", "bodyText": "Maybe you could add a small description (comment) why you're explicitly turning off the lexical-handler", "author": "nielsm5", "createdAt": "2020-06-08T13:26:26Z", "path": "core/src/test/java/nl/nn/adapterframework/xml/XmlWriterTest.java", "diffHunk": "@@ -62,8 +62,8 @@ public void testNoLexicalHandling() throws Exception {\n \t\tXmlWriter xmlWriter = new XmlWriter();\n \t\t\n \t\tInputSource inputSource = new InputSource(new StringReader(input));\n-\t\tXMLReader xmlReader = XmlUtils.getXMLReader(true, true);\n-\t\txmlReader.setContentHandler(xmlWriter);\n+\t\tXMLReader xmlReader = XmlUtils.getXMLReader(xmlWriter);\n+\t\txmlReader.setProperty(\"http://xml.org/sax/properties/lexical-handler\", null);", "originalCommit": "36fc97ea7cc8a6285c31601df7591be1a9caed40", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY5OTQwMw==", "url": "https://github.com/ibissource/iaf/pull/771#discussion_r436699403", "bodyText": "Maybe you could add a small description (comment) why you're explicitly turning off the lexical-handler", "author": "nielsm5", "createdAt": "2020-06-08T13:26:33Z", "path": "core/src/test/java/nl/nn/adapterframework/xml/XmlPrettyPrintFilterTest.java", "diffHunk": "@@ -47,8 +47,8 @@ public void testNoLexicalHandling() throws Exception {\n \t\tfilter.setContentHandler(xmlWriter);\n \n \t\tInputSource inputSource = new InputSource(new StringReader(input));\n-\t\tXMLReader xmlReader = XmlUtils.getXMLReader(true, true);\n-\t\txmlReader.setContentHandler(filter);\n+\t\tXMLReader xmlReader = XmlUtils.getXMLReader(filter);\n+\t\txmlReader.setProperty(\"http://xml.org/sax/properties/lexical-handler\", null);", "originalCommit": "36fc97ea7cc8a6285c31601df7591be1a9caed40", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjcwMzE0Nw==", "url": "https://github.com/ibissource/iaf/pull/771#discussion_r436703147", "bodyText": "What do you mean by proper setup? Is it possible to get the absolute path (feed the URL to a file and call toPath()).\nI believe one of the 'resource validation checks' is if the resource starts with the file:// protocol.", "author": "nielsm5", "createdAt": "2020-06-08T13:31:54Z", "path": "core/src/test/java/nl/nn/adapterframework/util/XmlParserTest.java", "diffHunk": "@@ -0,0 +1,84 @@\n+package nl.nn.adapterframework.util;\n+\n+import java.io.IOException;\n+import java.net.URL;\n+\n+import javax.xml.parsers.ParserConfigurationException;\n+\n+import org.junit.FixMethodOrder;\n+import org.junit.Ignore;\n+import org.junit.Test;\n+import org.junit.runners.MethodSorters;\n+import org.xml.sax.InputSource;\n+import org.xml.sax.SAXException;\n+\n+import nl.nn.adapterframework.core.Resource;\n+import nl.nn.adapterframework.stream.Message;\n+import nl.nn.adapterframework.testutil.MatchUtils;\n+import nl.nn.adapterframework.testutil.TestFileUtils;\n+import nl.nn.adapterframework.xml.XmlWriter;\n+\n+@FixMethodOrder(MethodSorters.NAME_ASCENDING)\n+public class XmlParserTest {\n+\n+\t\n+\tprotected String getInputAsString(String file) throws IOException {\n+\t\tString input    = TestFileUtils.getTestFile(file);\n+\t\tURL entity      = TestFileUtils.getTestFileURL(\"/XmlUtils/EntityResolution/in-plain.xml\");\n+\t\tinput=input.replaceAll(\"\\\\[ENTITY_URL\\\\]\", entity.toExternalForm());\n+\t\tSystem.out.println(\"input [\"+input+\"]\");\n+\t\treturn input;\n+\t}\n+\n+\t\n+\t@Test\n+\tpublic void testParseXmlNoExternalEntityInjection() throws IOException, SAXException {\n+\t\tString input    = getInputAsString(\"/XmlUtils/EntityResolution/in-file-entity.xml\");\n+\t\tString expected = TestFileUtils.getTestFile(\"/XmlUtils/EntityResolution/out-not-resolved.xml\");\n+\n+\t\tXmlWriter writer = new XmlWriter();\n+\t\tXmlUtils.parseXml(input, writer);\n+\t\t\n+\t\tMatchUtils.assertXmlEquals(expected,writer.toString());\t\t\n+\t}\n+\n+\t@Test\n+\tpublic void testParseXmlNoRelativeEntityInjection() throws IOException, SAXException {\n+\t\tURL    input    = TestFileUtils.getTestFileURL(\"/XmlUtils/EntityResolution/in-relative-entity.xml\");\n+\t\tString expected = TestFileUtils.getTestFile(\"/XmlUtils/EntityResolution/out-not-resolved.xml\");\n+\n+\t\tXmlWriter writer = new XmlWriter();\n+\t\tInputSource source = Message.asInputSource(input);\n+\t\t\n+\t\tXmlUtils.parseXml(source, writer);\n+\t\t\n+\t\tMatchUtils.assertXmlEquals(expected,writer.toString());\n+\t}\n+\n+\n+\t@Test\n+\tpublic void testParseXmlResourceWithRelativeEntityInjection() throws IOException, SAXException, ParserConfigurationException {\n+\t\tResource input  = Resource.getResource(\"/XmlUtils/EntityResolution/in-relative-entity.xml\");\n+\t\tString expected = TestFileUtils.getTestFile(\"/XmlUtils/EntityResolution/out-resolved.xml\");\n+\t\t\n+\t\tXmlWriter writer = new XmlWriter();\n+\t\tXmlUtils.parseXml(input, writer);\n+\t\t\n+\t\tMatchUtils.assertXmlEquals(expected,writer.toString());\t\t\n+\t}\n+\t\n+\t@Test\n+\t@Ignore(\"requires proper setup on the classpath filesystem\")\n+\tpublic void testParseXmlResourceWithExternalEntityInjection() throws IOException, SAXException, ParserConfigurationException {\n+\t\tResource input  = Resource.getResource(\"/XmlUtils/EntityResolution/in-file-entity-c-temp.xml\");\n+\t\tString expected = TestFileUtils.getTestFile(\"/XmlUtils/EntityResolution/out-resolved.xml\");\n+\t\t\n+\t\tXmlWriter writer = new XmlWriter();\n+\t\tXmlUtils.parseXml(input, writer);\n+\t\t\n+\t\tMatchUtils.assertXmlEquals(expected,writer.toString());\t\t\n+\t}", "originalCommit": "36fc97ea7cc8a6285c31601df7591be1a9caed40", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjcwNzQ1Mw==", "url": "https://github.com/ibissource/iaf/pull/771#discussion_r436707453", "bodyText": "Ik vind dit raar. De inputsource moet uit de Resource komen!", "author": "nielsm5", "createdAt": "2020-06-08T13:38:29Z", "path": "core/src/main/java/nl/nn/adapterframework/util/XmlUtils.java", "diffHunk": "@@ -978,28 +985,19 @@ public static Source stringToSource(String xmlString) throws DomBuilderException\n \tpublic static Source stringToSourceForSingleUse(String xmlString) throws SAXException {\n \t\treturn stringToSourceForSingleUse(xmlString, isNamespaceAwareByDefault());\n \t}\n-\n+\t\n \tpublic static Source stringToSourceForSingleUse(String xmlString, boolean namespaceAware) throws SAXException {\n-\t\treturn stringToSourceForSingleUse(xmlString, namespaceAware, false);\n-\t}\n-\n-\tpublic static Source stringToSourceForSingleUse(String xmlString, boolean namespaceAware, boolean resolveExternalEntities) throws SAXException {\n-\t\treturn stringToSAXSource(xmlString, namespaceAware, false);\n-\t}\n-\n-\tpublic static SAXSource stringToSAXSource(String xmlString, boolean namespaceAware, boolean resolveExternalEntities) throws SAXException {\n \t\tStringReader reader = new StringReader(xmlString);\n-\t\treturn readerToSAXSource(reader,namespaceAware,resolveExternalEntities);\n-\t}\n-\t\n-\tpublic static SAXSource readerToSAXSource(Reader reader, boolean namespaceAware, boolean resolveExternalEntities) throws SAXException {\n \t\tInputSource is = new InputSource(reader);\n-\t\treturn inputSourceToSAXSource(is,namespaceAware,resolveExternalEntities);\n+\t\treturn inputSourceToSAXSource(is, namespaceAware, null);\n \t}\t\n \t\n-\tpublic static SAXSource inputSourceToSAXSource(InputSource is, boolean namespaceAware, boolean resolveExternalEntities) throws SAXException {\n+\tpublic static SAXSource inputSourceToSAXSource(InputSource is, Resource classloaderProvider) throws SAXException {\n+\t\treturn inputSourceToSAXSource(is, true, classloaderProvider);\n+\t}\n+\tpublic static SAXSource inputSourceToSAXSource(InputSource is, boolean namespaceAware, Resource classloaderProvider) throws SAXException {\n \t\ttry {\n-\t\t\treturn new SAXSource(getXMLReader(namespaceAware, resolveExternalEntities), is);\n+\t\t\treturn new SAXSource(getXMLReader(namespaceAware, classloaderProvider), is);", "originalCommit": "36fc97ea7cc8a6285c31601df7591be1a9caed40", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8bbc3a5cde81e4b2807ab3878d84d00a7e3a8fb3", "url": "https://github.com/ibissource/iaf/commit/8bbc3a5cde81e4b2807ab3878d84d00a7e3a8fb3", "message": "Fix issues", "committedDate": "2020-06-08T19:35:15Z", "type": "commit"}]}