{"pr_number": 249, "pr_title": "Update .dep file", "pr_createdAt": "2020-03-11T16:40:26Z", "pr_url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249", "timeline": [{"oid": "f6466830147d86ce3648cf2489902950e470b7e1", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/f6466830147d86ce3648cf2489902950e470b7e1", "message": "Delete dependency file at didOpen moment", "committedDate": "2020-03-11T16:39:41Z", "type": "commit"}, {"oid": "007c58e31a8621e900b44a5d11bb43cc3fc226dc", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/007c58e31a8621e900b44a5d11bb43cc3fc226dc", "message": "update CHANGELOG.md", "committedDate": "2020-03-11T16:46:27Z", "type": "commit"}, {"oid": "6767b2105287fc95c12c465aa3b67e175b527e41", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/6767b2105287fc95c12c465aa3b67e175b527e41", "message": "Fix listDataset wrong call", "committedDate": "2020-03-12T07:32:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ1ODU1Nw==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r391458557", "bodyText": "MyTextDocumentService is passed as a first parameter here", "author": "temanbrcom", "createdAt": "2020-03-12T08:16:27Z", "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/MyLanguageServerImpl.java", "diffHunk": "@@ -75,12 +75,14 @@\n       TextDocumentService textService,\n       WorkspaceService workspaceService,\n       Provider<LanguageClient> clientProvider,\n-      SettingsProvider settingsProvider) {\n+      SettingsProvider settingsProvider,\n+      MyTextDocumentService customTextService) {", "originalCommit": "6767b2105287fc95c12c465aa3b67e175b527e41", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ3ODkzMg==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r391478932", "bodyText": "that is TextDocumentService which is the interface provided by lsp4j and the parameter that I need to set is workspaceFolder which I added in the MyTextDocumentService, in order to get this into the didOpen method", "author": "sergiuilie", "createdAt": "2020-03-12T08:59:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ1ODU1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ4MTI1Mg==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r391481252", "bodyText": "Is still not clear for me, better discuss in a parking lot or earlier if u need", "author": "zacanbrcom", "createdAt": "2020-03-12T09:04:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ1ODU1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ4NDY1Nw==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r391484657", "bodyText": "I tested on my che with devfile based with this lsp and I haven't seen the dep file deleted at didOpen\nMoreover when I try to change the copybook name, the dep file still maintain the old value.\n\nI experienced the same issue because CHE doesn't close the file immediately and moreover we got a problem on VSCode with Zowe: \"if your file is open by Zowe explorer and you close it and open it again you will see the same problem because I think that the IDE does not close the file immediately\"", "author": "sergiuilie", "createdAt": "2020-03-12T09:11:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ1ODU1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ1OTk1Ng==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r391459956", "bodyText": "It is definitely not the responsibility of this class. I think that TextDocumentService should just fire an event to make CopybookService to remove the dep file", "author": "temanbrcom", "createdAt": "2020-03-12T08:19:58Z", "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/MyTextDocumentService.java", "diffHunk": "@@ -213,6 +223,28 @@ private void registerEngineAndAnalyze(String uri, String languageType, String te\n     }\n   }\n \n+  /**\n+   * This method\n+   * @param uri\n+   */\n+  private void deleteDependencyFile(String uri) {\n+    Path folderPath = null;\n+    if (checkIfInitWasCalled()) {\n+      folderPath =\n+          Paths.get(\n+              getDependencyFileFolderPath()\n+                  + FileSystems.getDefault().getSeparator()\n+                  + getFileNameFromURI(uri)\n+                  + DEP_EXTENSION);\n+    }\n+    if (isFileExists(folderPath))\n+      try {\n+        Files.delete(folderPath);\n+      } catch (IOException e) {\n+        log.error(e.getMessage());\n+      }\n+  }\n+", "originalCommit": "6767b2105287fc95c12c465aa3b67e175b527e41", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ2MzM2Ng==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r391463366", "bodyText": "Wait, CopybookService lose this responsability, there is a CopybookDependencyService that is responsible to everything is related to the dep file. Why we need to propagate this event on the databus?", "author": "zacanbrcom", "createdAt": "2020-03-12T08:27:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ1OTk1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ2NjM4OQ==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r391466389", "bodyText": "Yes, it should be on CopybookDependencyService.\nThe databus event is needed to remove a direct dependency between the TextDocumentService and the dependency service.", "author": "temanbrcom", "createdAt": "2020-03-12T08:34:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ1OTk1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ3OTcyNw==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r391479727", "bodyText": "There is no direct dependency between those two services, @temanbrcom , how do you see the dependency?", "author": "sergiuilie", "createdAt": "2020-03-12T09:01:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ1OTk1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ4MTI2OQ==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r391481269", "bodyText": "There is no dependency because now TextDocumentService is applying file operations, but it shouldn't. It should just notify the CopybookDependencyService to delete dep files", "author": "temanbrcom", "createdAt": "2020-03-12T09:04:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ1OTk1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ4MzEzNw==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r391483137", "bodyText": "So, there is no dependency, I will take a look and see how I can notify the CopybookDependencyService", "author": "sergiuilie", "createdAt": "2020-03-12T09:08:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ1OTk1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ4NDg4MQ==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r391484881", "bodyText": "To be clear - saying \"remove\" I meant \"avoid\"", "author": "temanbrcom", "createdAt": "2020-03-12T09:11:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ1OTk1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ2MTA4Mw==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r391461083", "bodyText": "I've experienced that calling the JsonObject#toString this way will return a string with doubled quotes - \"\"string\"\"", "author": "temanbrcom", "createdAt": "2020-03-12T08:22:40Z", "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/CopybookServiceImpl.java", "diffHunk": "@@ -236,7 +236,7 @@ public void observerCallback(RequiredCopybookEvent event) {\n     path =\n         findCopybook(\n             requiredCopybookName,\n-            (String) configurationSettingsStorable.getProfiles(),\n+            configurationSettingsStorable.getProfiles().toString(),", "originalCommit": "6767b2105287fc95c12c465aa3b67e175b527e41", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ4MDE1NQ==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r391480155", "bodyText": "I haven't seen any unit test that verify this functionality, we have to do that.\n\ntaking care of", "author": "sergiuilie", "createdAt": "2020-03-12T09:02:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ2MTA4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0NTIxNw==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r398445217", "bodyText": "Is still pending this modification?", "author": "zacanbrcom", "createdAt": "2020-03-26T09:56:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ2MTA4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ1NjQ5MQ==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r398456491", "bodyText": "modify it, I forgot about it, thanks", "author": "sergiuilie", "createdAt": "2020-03-26T10:14:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ2MTA4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU2Nzk1OQ==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r398567959", "bodyText": "I read about this and toString should be enough because we already have a Java Object and the JSON is parsed in the first instance", "author": "sergiuilie", "createdAt": "2020-03-26T13:24:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ2MTA4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ1NzI5Ng==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r391457296", "bodyText": "Why do we need this reference?", "author": "zacanbrcom", "createdAt": "2020-03-12T08:13:41Z", "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/MyLanguageServerImpl.java", "diffHunk": "@@ -75,12 +75,14 @@\n       TextDocumentService textService,\n       WorkspaceService workspaceService,\n       Provider<LanguageClient> clientProvider,\n-      SettingsProvider settingsProvider) {\n+      SettingsProvider settingsProvider,\n+      MyTextDocumentService customTextService) {", "originalCommit": "6767b2105287fc95c12c465aa3b67e175b527e41", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUxNzQwMA==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r391517400", "bodyText": "that is TextDocumentService which is the interface provided by lsp4j and the parameter that I need to set is workspaceFolder which I added in the MyTextDocumentService, in order to get this into the didOpen/didClose method", "author": "sergiuilie", "createdAt": "2020-03-12T10:10:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ1NzI5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ1Nzk5NA==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r391457994", "bodyText": "Probably you forgot to complete this statement", "author": "zacanbrcom", "createdAt": "2020-03-12T08:15:10Z", "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/MyTextDocumentService.java", "diffHunk": "@@ -213,6 +223,28 @@ private void registerEngineAndAnalyze(String uri, String languageType, String te\n     }\n   }\n \n+  /**\n+   * This method", "originalCommit": "6767b2105287fc95c12c465aa3b67e175b527e41", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ1OTE0MQ==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r391459141", "bodyText": "Can we move this method into the FileSystemUtils ?", "author": "zacanbrcom", "createdAt": "2020-03-12T08:17:48Z", "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/MyTextDocumentService.java", "diffHunk": "@@ -213,6 +223,28 @@ private void registerEngineAndAnalyze(String uri, String languageType, String te\n     }\n   }\n \n+  /**\n+   * This method\n+   * @param uri\n+   */\n+  private void deleteDependencyFile(String uri) {\n+    Path folderPath = null;\n+    if (checkIfInitWasCalled()) {\n+      folderPath =\n+          Paths.get(\n+              getDependencyFileFolderPath()\n+                  + FileSystems.getDefault().getSeparator()\n+                  + getFileNameFromURI(uri)\n+                  + DEP_EXTENSION);\n+    }\n+    if (isFileExists(folderPath))\n+      try {\n+        Files.delete(folderPath);\n+      } catch (IOException e) {\n+        log.error(e.getMessage());\n+      }\n+  }\n+", "originalCommit": "6767b2105287fc95c12c465aa3b67e175b527e41", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ2MDQ4Ng==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r391460486", "bodyText": "I think we can extend the CopybookDependencyService APIs and move this implementation there, if I didn't miss anything \ud83d\udc7c", "author": "zacanbrcom", "createdAt": "2020-03-12T08:21:18Z", "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/MyTextDocumentService.java", "diffHunk": "@@ -262,4 +294,16 @@ private String createDescriptiveErrorMessage(String action, String uri) {\n   private BiConsumer<Object, Throwable> reportExceptionIfThrown(String message) {\n     return (res, ex) -> ofNullable(ex).ifPresent(it -> log.error(message, it));\n   }\n+\n+  private Path getDependencyFileFolderPath() {\n+    return Paths.get(\n+        getWorkspaceFoldersAsPathList(getWorkspaceFolders()).get(0)\n+            + filesystemSeparator()\n+            + COBDEPS\n+            + filesystemSeparator());\n+  }", "originalCommit": "6767b2105287fc95c12c465aa3b67e175b527e41", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUxNjk0Ng==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r391516946", "bodyText": "it can be done", "author": "sergiuilie", "createdAt": "2020-03-12T10:09:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ2MDQ4Ng=="}], "type": "inlineReview"}, {"oid": "5f625e7ffd523f588d55ee1e155fedfe69f6eb25", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/5f625e7ffd523f588d55ee1e155fedfe69f6eb25", "message": "move deletion to didClose", "committedDate": "2020-03-12T09:50:55Z", "type": "commit"}, {"oid": "e8e970438e402c58ba1d11916cfad587178272bd", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/e8e970438e402c58ba1d11916cfad587178272bd", "message": "Merge remote-tracking branch 'origin/delete-dep' into delete-dep", "committedDate": "2020-03-12T09:51:33Z", "type": "commit"}, {"oid": "8f43ab0af06b5c9e8f65d1802d5fe2a1d1b8423b", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/8f43ab0af06b5c9e8f65d1802d5fe2a1d1b8423b", "message": "update .dep file by removing the copybooks present in the .copybooks directory", "committedDate": "2020-03-25T13:25:19Z", "type": "commit"}, {"oid": "66768cc0a4666647ca12382e647782bfa0cd0a8b", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/66768cc0a4666647ca12382e647782bfa0cd0a8b", "message": "clean", "committedDate": "2020-03-25T13:35:27Z", "type": "commit"}, {"oid": "e70d5e09e5e3db2d03dcd1eb58287bc639246d8a", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/e70d5e09e5e3db2d03dcd1eb58287bc639246d8a", "message": "clean", "committedDate": "2020-03-25T15:50:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0NjgxOQ==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r398446819", "bodyText": "can we remove this?", "author": "zacanbrcom", "createdAt": "2020-03-26T09:58:55Z", "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/delegates/dependency/CopybookDependencyServiceImpl.java", "diffHunk": "@@ -125,18 +144,45 @@ public void generateDependencyFile(String cobolFileName) {\n     }\n   }\n \n-  private Path retrieveDependencyFile(Path dependencyFolderPath, String cobolFileName) {\n-    return Paths.get(dependencyFolderPath + filesystemSeparator() + cobolFileName + DEP_EXTENSION);\n-  }\n+  @Override\n+  public void observerCallback(CopybookDepEvent event) {\n+    if (!event.getTextDocumentSync().equals(\"DID_OPEN\")) {\n \n-  private String getCobolFileNameFromUri(String documentUri) {\n-    String result = null;\n-    try {\n-      result = FilenameUtils.getBaseName(Paths.get(new URI(documentUri)).getFileName().toString());\n-    } catch (URISyntaxException e) {\n-      log.error(e.getMessage());\n+      Path path =\n+          findCopybook(\n+              event.getCopybookName(),\n+              configurationSettingsStorableProvider.get().getProfiles().toString(),\n+              configurationSettingsStorableProvider.get().getPaths());\n+\n+      Path folderPath =\n+          Paths.get(\n+              getWorkspaceFolderPaths().get(0)\n+                  + filesystemSeparator()\n+                  + COBDEPS\n+                  + filesystemSeparator());\n+\n+      // change with document name, stupid blin", "originalCommit": "e70d5e09e5e3db2d03dcd1eb58287bc639246d8a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ1Njg3Nw==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r398456877", "bodyText": "of course", "author": "sergiuilie", "createdAt": "2020-03-26T10:15:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0NjgxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0NzEwNw==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r398447107", "bodyText": "can we remove this?", "author": "zacanbrcom", "createdAt": "2020-03-26T09:59:23Z", "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/delegates/dependency/CopybookDependencyServiceImpl.java", "diffHunk": "@@ -160,4 +206,60 @@ private Path createDependencyFileFolder() {\n       return folderPath;\n     }\n   }\n+\n+  /** come on */", "originalCommit": "e70d5e09e5e3db2d03dcd1eb58287bc639246d8a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ1NzA0Ng==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r398457046", "bodyText": "of course, I replaced it with docs", "author": "sergiuilie", "createdAt": "2020-03-26T10:15:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0NzEwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUzMjExMw==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r398532113", "bodyText": "copybookDependencyService is unused within the class", "author": "zacanbrcom", "createdAt": "2020-03-26T12:27:24Z", "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/MyLanguageServerImpl.java", "diffHunk": "@@ -66,21 +67,23 @@\n   private WorkspaceService workspaceService;\n   private CopybookService copybookService;\n   private Provider<LanguageClient> clientProvider;\n-\n   private SettingsProvider settingsProvider;\n+  private CopybookDependencyService copybookDependencyService;\n \n   @Inject\n   MyLanguageServerImpl(\n       CopybookService copybookService,\n       TextDocumentService textService,\n       WorkspaceService workspaceService,\n       Provider<LanguageClient> clientProvider,\n-      SettingsProvider settingsProvider) {\n+      SettingsProvider settingsProvider,\n+      CopybookDependencyService copybookDependencyService) {", "originalCommit": "e70d5e09e5e3db2d03dcd1eb58287bc639246d8a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU1Mjk3MA==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r398552970", "bodyText": "by calling it here I initialized it in order to subscribe it to the databus", "author": "sergiuilie", "createdAt": "2020-03-26T13:01:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUzMjExMw=="}], "type": "inlineReview"}, {"oid": "ec3698d9c07e03521dc539821aa94a89b40082c5", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/ec3698d9c07e03521dc539821aa94a89b40082c5", "message": "add unit test", "committedDate": "2020-03-26T13:26:11Z", "type": "commit"}, {"oid": "a6b51f8a35b7d1aea4405990ce1b6dcc9bb6db7e", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/a6b51f8a35b7d1aea4405990ce1b6dcc9bb6db7e", "message": "update CHANGELOG.md", "committedDate": "2020-03-26T13:44:59Z", "type": "commit"}, {"oid": "ad4a89532a0fd1144491c2c74aba1486fea10315", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/ad4a89532a0fd1144491c2c74aba1486fea10315", "message": "apply required changes", "committedDate": "2020-03-26T16:44:07Z", "type": "commit"}, {"oid": "a89de1e7b9501a2225ff53388d8b8f8a975f9bbf", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/a89de1e7b9501a2225ff53388d8b8f8a975f9bbf", "message": "add sync and check if copybooks were added", "committedDate": "2020-03-30T12:00:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE1ODAxNQ==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r400158015", "bodyText": "The databus observation is an implementation detail, so it would be better to implement the EventObserver in the exact class", "author": "temanbrcom", "createdAt": "2020-03-30T12:39:07Z", "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/delegates/dependency/CopybookDependencyService.java", "diffHunk": "@@ -16,14 +16,17 @@\n \n package com.ca.lsp.cobol.service.delegates.dependency;\n \n+import com.broadcom.lsp.domain.cobol.event.api.EventObserver;\n+import com.broadcom.lsp.domain.cobol.event.model.CopybookDepEvent;\n+\n import java.nio.file.Path;\n import java.util.List;\n \n /**\n  * This interface defines the API to generate and update dependency file for copybook download\n  * management\n  */\n-public interface CopybookDependencyService {\n+public interface CopybookDependencyService extends EventObserver<CopybookDepEvent> {", "originalCommit": "a89de1e7b9501a2225ff53388d8b8f8a975f9bbf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE2NDAwNw==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r400164007", "bodyText": "A negative check doesn't cover all the required cases here. I think it is better to compare the event's sync type with TextDocumentSyncType.DID_CHANGE.name()", "author": "temanbrcom", "createdAt": "2020-03-30T12:49:10Z", "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/delegates/dependency/CopybookDependencyServiceImpl.java", "diffHunk": "@@ -125,18 +145,66 @@ public void generateDependencyFile(String cobolFileName) {\n     }\n   }\n \n-  private Path retrieveDependencyFile(Path dependencyFolderPath, String cobolFileName) {\n-    return Paths.get(dependencyFolderPath + filesystemSeparator() + cobolFileName + DEP_EXTENSION);\n+  /**\n+   * This method is triggered when on databus the postData method is called and contains\n+   * CopybookDepEvent; This method implements the update logic for .dep file, by update we\n+   * understand that if the copybook is present in the .copybook folder than its name should be\n+   * remove from .dep file\n+   *\n+   * @param event of type CopybookDepEvent\n+   */\n+  @Synchronized\n+  @Override\n+  public void observerCallback(CopybookDepEvent event) {\n+    // we are not checking .dep on DID_OPEN because on DID_OPEN the file is updated with the\n+    // required copybooks\n+    if (!event.getTextDocumentSync().equals(\"DID_OPEN\")) {", "originalCommit": "a89de1e7b9501a2225ff53388d8b8f8a975f9bbf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIyNjgyNA==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r400226824", "bodyText": "true", "author": "sergiuilie", "createdAt": "2020-03-30T14:16:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE2NDAwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIxMDg5Nw==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r400210897", "bodyText": "Shouldn't it be updatedLines.equals(result)?", "author": "temanbrcom", "createdAt": "2020-03-30T13:55:34Z", "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/delegates/dependency/CopybookDependencyServiceImpl.java", "diffHunk": "@@ -125,18 +145,66 @@ public void generateDependencyFile(String cobolFileName) {\n     }\n   }\n \n-  private Path retrieveDependencyFile(Path dependencyFolderPath, String cobolFileName) {\n-    return Paths.get(dependencyFolderPath + filesystemSeparator() + cobolFileName + DEP_EXTENSION);\n+  /**\n+   * This method is triggered when on databus the postData method is called and contains\n+   * CopybookDepEvent; This method implements the update logic for .dep file, by update we\n+   * understand that if the copybook is present in the .copybook folder than its name should be\n+   * remove from .dep file\n+   *\n+   * @param event of type CopybookDepEvent\n+   */\n+  @Synchronized\n+  @Override\n+  public void observerCallback(CopybookDepEvent event) {\n+    // we are not checking .dep on DID_OPEN because on DID_OPEN the file is updated with the\n+    // required copybooks\n+    if (!event.getTextDocumentSync().equals(\"DID_OPEN\")) {\n+\n+      Path path =\n+          findCopybook(\n+              event.getCopybookName(),\n+              configurationSettingsStorableProvider.get().getProfiles().toString(),\n+              configurationSettingsStorableProvider.get().getPaths());\n+\n+      Path folderPath =\n+          Paths.get(\n+              getWorkspaceFolderPaths().get(0)\n+                  + filesystemSeparator()\n+                  + COBDEPS\n+                  + filesystemSeparator());\n+\n+      Path dependencyFilePath =\n+          retrieveDependencyFile(folderPath, getFileNameFromURI(event.getDocumentUri()));\n+\n+      if (path != null && isFileExists(dependencyFilePath)) {\n+        removeCpyFromDep(dependencyFilePath, event.getCopybookName());\n+      }\n+    }\n   }\n \n-  private String getCobolFileNameFromUri(String documentUri) {\n-    String result = null;\n+  /**\n+   * This method removes a given string from a given file\n+   *\n+   * @param dependencyFilePath - the path to .dep file\n+   * @param copybookName\n+   */\n+  private void removeCpyFromDep(Path dependencyFilePath, String copybookName) {\n+    List<String> result = null;\n     try {\n-      result = FilenameUtils.getBaseName(Paths.get(new URI(documentUri)).getFileName().toString());\n-    } catch (URISyntaxException e) {\n+      result = Files.readAllLines(dependencyFilePath);\n+      List<String> updatedLines =\n+          result.stream().filter(s -> !s.equals(copybookName)).collect(Collectors.toList());\n+      // don't write if the lines were not modify\n+      if (updatedLines != result) {", "originalCommit": "a89de1e7b9501a2225ff53388d8b8f8a975f9bbf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIyNzQ0NA==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r400227444", "bodyText": "no, if it equals than why to modify it?!", "author": "sergiuilie", "createdAt": "2020-03-30T14:17:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIxMDg5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIzNDc4OQ==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r400234789", "bodyText": "Yes, the correct line should be if (!updatedLines.equals(result)). The reason is that Collectors#toList() creates a new list every time, so the check on a link inequity will always return true", "author": "temanbrcom", "createdAt": "2020-03-30T14:26:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIxMDg5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIxMjU0Mg==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r400212542", "bodyText": "You may inline this variable definition", "author": "temanbrcom", "createdAt": "2020-03-30T13:57:39Z", "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/delegates/dependency/CopybookDependencyServiceImpl.java", "diffHunk": "@@ -125,18 +145,66 @@ public void generateDependencyFile(String cobolFileName) {\n     }\n   }\n \n-  private Path retrieveDependencyFile(Path dependencyFolderPath, String cobolFileName) {\n-    return Paths.get(dependencyFolderPath + filesystemSeparator() + cobolFileName + DEP_EXTENSION);\n+  /**\n+   * This method is triggered when on databus the postData method is called and contains\n+   * CopybookDepEvent; This method implements the update logic for .dep file, by update we\n+   * understand that if the copybook is present in the .copybook folder than its name should be\n+   * remove from .dep file\n+   *\n+   * @param event of type CopybookDepEvent\n+   */\n+  @Synchronized\n+  @Override\n+  public void observerCallback(CopybookDepEvent event) {\n+    // we are not checking .dep on DID_OPEN because on DID_OPEN the file is updated with the\n+    // required copybooks\n+    if (!event.getTextDocumentSync().equals(\"DID_OPEN\")) {\n+\n+      Path path =\n+          findCopybook(\n+              event.getCopybookName(),\n+              configurationSettingsStorableProvider.get().getProfiles().toString(),\n+              configurationSettingsStorableProvider.get().getPaths());\n+\n+      Path folderPath =\n+          Paths.get(\n+              getWorkspaceFolderPaths().get(0)\n+                  + filesystemSeparator()\n+                  + COBDEPS\n+                  + filesystemSeparator());\n+\n+      Path dependencyFilePath =\n+          retrieveDependencyFile(folderPath, getFileNameFromURI(event.getDocumentUri()));\n+\n+      if (path != null && isFileExists(dependencyFilePath)) {\n+        removeCpyFromDep(dependencyFilePath, event.getCopybookName());\n+      }\n+    }\n   }\n \n-  private String getCobolFileNameFromUri(String documentUri) {\n-    String result = null;\n+  /**\n+   * This method removes a given string from a given file\n+   *\n+   * @param dependencyFilePath - the path to .dep file\n+   * @param copybookName\n+   */\n+  private void removeCpyFromDep(Path dependencyFilePath, String copybookName) {\n+    List<String> result = null;", "originalCommit": "a89de1e7b9501a2225ff53388d8b8f8a975f9bbf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIxOTEyMQ==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r400219121", "bodyText": "We'll receive a code smell because of the following code is a duplication of CopybookServiceImpl", "author": "temanbrcom", "createdAt": "2020-03-30T14:06:34Z", "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/delegates/dependency/CopybookDependencyServiceImpl.java", "diffHunk": "@@ -160,4 +228,71 @@ private Path createDependencyFileFolder() {\n       return folderPath;\n     }\n   }\n+\n+  /**\n+   * This method is used to search for a copybook against a given configuration of datasets that\n+   * represent the sub-path of the copyooks folder\n+   *\n+   * @param filename copybook name\n+   * @return The path of the existent copybook or null if not found\n+   */\n+  private Path findCopybook(String filename, String profile, List<String> datasetList) {\n+    return retrievePathOrNull(filename, generatePathListFromSettings(profile, datasetList));\n+  }\n+\n+  private Path retrievePathOrNull(String filename, List<Path> datasetPathList) {\n+    return datasetPathList.stream()\n+        .map(it -> applySearch(filename, it))\n+        .filter(Objects::nonNull)\n+        .findAny()\n+        .orElse(null);\n+  }\n+\n+  /**\n+   * @param fileName copybook name\n+   * @param targetFolderPath physical path of workspace where to search for the copybook\n+   * @return Path of the found copybook in the target folder.\n+   */\n+  private Path applySearch(String fileName, Path targetFolderPath) {\n+    try (Stream<Path> pathStream =", "originalCommit": "a89de1e7b9501a2225ff53388d8b8f8a975f9bbf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIyODU1Nw==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r400228557", "bodyText": "Andrea's implementation which will merge my branch will cover this, that's why I didn't modify it", "author": "sergiuilie", "createdAt": "2020-03-30T14:18:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIxOTEyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIyMjQ1NA==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r400222454", "bodyText": "It seems like we may call a CopybookDependencyServiceImpl#obaserverCallback() method directly, so we don't need a data bus broker and asynchronous awaiting.", "author": "temanbrcom", "createdAt": "2020-03-30T14:10:58Z", "path": "com.ca.lsp.cobol/lsp-service-cobol/src/test/java/com/ca/lsp/cobol/service/DependencyServiceTest.java", "diffHunk": "@@ -44,13 +66,36 @@ public void initActivities() {\n     dependencyService.setWorkspaceFolderPaths(Collections.singletonList(workspaceFolder));\n   }\n \n+  /**\n+   * This test proves that the .dep file should update and remove the copybooks which were already\n+   * downloaded and present in the .copybook directory\n+   */\n+  @Test\n+  public void depFileUpdateTest() {\n+    // create the .dep file\n+    Path depFileReference = createDependencyFile(COPYBOOK_NAME);\n+    dependencyService.addCopybookInDepFile(CPY_OUTER_NAME_ONLY2, DOCUMENT_URI);\n+    int numberOfElements = getNumberOfElementsFromDepFile(depFileReference);\n+\n+    // trigger the event which will update the .dep file @link{CopybookDependencyServiceImpl.class}\n+    broker.postData(", "originalCommit": "a89de1e7b9501a2225ff53388d8b8f8a975f9bbf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIzNTU3Ng==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r400235576", "bodyText": "I agree if we have an \"integration test\" that use databus between DependencyService and CopybookService", "author": "zacanbrcom", "createdAt": "2020-03-30T14:27:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIyMjQ1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI1ODk2OQ==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r400258969", "bodyText": "In fact, the integration that should be asserted in this class is only a subscription to the data bus in the constructor, because we may rely on more specific data bus tests.", "author": "temanbrcom", "createdAt": "2020-03-30T14:57:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIyMjQ1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI2MjkwOA==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r400262908", "bodyText": "\ud83d\udc4d", "author": "zacanbrcom", "createdAt": "2020-03-30T15:02:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIyMjQ1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI0Mzg5MA==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/249#discussion_r400243890", "bodyText": "Paths.get cannot return null, so this check won't work. It is better to use Files::exists` here", "author": "temanbrcom", "createdAt": "2020-03-30T14:38:12Z", "path": "com.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/delegates/dependency/CopybookDependencyServiceImpl.java", "diffHunk": "@@ -160,4 +228,71 @@ private Path createDependencyFileFolder() {\n       return folderPath;\n     }\n   }\n+\n+  /**\n+   * This method is used to search for a copybook against a given configuration of datasets that\n+   * represent the sub-path of the copyooks folder\n+   *\n+   * @param filename copybook name\n+   * @return The path of the existent copybook or null if not found\n+   */\n+  private Path findCopybook(String filename, String profile, List<String> datasetList) {\n+    return retrievePathOrNull(filename, generatePathListFromSettings(profile, datasetList));\n+  }\n+\n+  private Path retrievePathOrNull(String filename, List<Path> datasetPathList) {\n+    return datasetPathList.stream()\n+        .map(it -> applySearch(filename, it))\n+        .filter(Objects::nonNull)\n+        .findAny()\n+        .orElse(null);\n+  }\n+\n+  /**\n+   * @param fileName copybook name\n+   * @param targetFolderPath physical path of workspace where to search for the copybook\n+   * @return Path of the found copybook in the target folder.\n+   */\n+  private Path applySearch(String fileName, Path targetFolderPath) {\n+    try (Stream<Path> pathStream =\n+        Files.find(\n+            targetFolderPath,\n+            100,\n+            (path, basicFileAttributes) -> isValidFileFound(path.toFile(), fileName),\n+            FileVisitOption.FOLLOW_LINKS)) {\n+      return pathStream.findAny().orElse(null);\n+    } catch (IOException e) {\n+      log.error(e.getMessage());\n+      return null;\n+    }\n+  }\n+\n+  private List<Path> generatePathListFromSettings(String profile, List<String> datasetList) {\n+    // can happen here that copybooks or internal structure is null\n+    return datasetList.stream()\n+        .map(\n+            it ->\n+                Paths.get(\n+                    getCopybookFolder(workspaceFolderPaths.get(0))\n+                        + filesystemSeparator()\n+                        + profile\n+                        + filesystemSeparator()\n+                        + it))\n+        .filter(Objects::nonNull)", "originalCommit": "a89de1e7b9501a2225ff53388d8b8f8a975f9bbf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "835a2414210ff0cc6fca953a31e340c384bc7d07", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/835a2414210ff0cc6fca953a31e340c384bc7d07", "message": "address required changes", "committedDate": "2020-03-30T15:17:22Z", "type": "commit"}]}