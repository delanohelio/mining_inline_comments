{"pr_number": 4945, "pr_title": "make key-generator as a spring bean on spring namespace.", "pr_createdAt": "2020-03-25T18:30:07Z", "pr_url": "https://github.com/apache/shardingsphere/pull/4945", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODI1NTU5NQ==", "url": "https://github.com/apache/shardingsphere/pull/4945#discussion_r398255595", "bodyText": "keep origin blankspaces", "author": "kimmking", "createdAt": "2020-03-26T00:47:51Z", "path": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/rule/TableRule.java", "diffHunk": "@@ -130,9 +130,9 @@ private void addActualTable(final String datasourceName, final String tableName)\n     }\n     \n     private boolean containsKeyGeneratorConfiguration(final TableRuleConfiguration tableRuleConfiguration) {\n-        return null != tableRuleConfiguration.getKeyGeneratorConfig() && !Strings.isNullOrEmpty(tableRuleConfiguration.getKeyGeneratorConfig().getType());\n+        return null != tableRuleConfiguration.getKeyGeneratorConfig() && null != tableRuleConfiguration.getKeyGeneratorConfig().getKeyGenerator();\n     }\n-    ", "originalCommit": "88f59c607141924effa6d506704d851d9479e5ee", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODI1NTYxNQ==", "url": "https://github.com/apache/shardingsphere/pull/4945#discussion_r398255615", "bodyText": "keep origin blankspaces", "author": "kimmking", "createdAt": "2020-03-26T00:47:55Z", "path": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/rule/TableRule.java", "diffHunk": "@@ -217,10 +217,10 @@ private void checkRule(final List<String> dataNodes) {\n             throw new ShardingSphereConfigurationException(\"ActualDataNodes must be configured if want to shard tables for logicTable [%s]\", logicTable);\n         }\n     }\n-    ", "originalCommit": "88f59c607141924effa6d506704d851d9479e5ee", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODI1NTYzMg==", "url": "https://github.com/apache/shardingsphere/pull/4945#discussion_r398255632", "bodyText": "keep origin blankspaces", "author": "kimmking", "createdAt": "2020-03-26T00:48:00Z", "path": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/rule/TableRule.java", "diffHunk": "@@ -217,10 +217,10 @@ private void checkRule(final List<String> dataNodes) {\n             throw new ShardingSphereConfigurationException(\"ActualDataNodes must be configured if want to shard tables for logicTable [%s]\", logicTable);\n         }\n     }\n-    \n+\n     /**\n      * Get generate key column.\n-     * ", "originalCommit": "88f59c607141924effa6d506704d851d9479e5ee", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEyNjM5NQ==", "url": "https://github.com/apache/shardingsphere/pull/4945#discussion_r399126395", "bodyText": "here we should rename ShardingKeyGenerator SPI to KeyGenerateAlgorithm.\nBe care about modifying all sub class of ShardingKeyGenerator", "author": "cherrylzhao", "createdAt": "2020-03-27T09:14:09Z", "path": "sharding-core/sharding-core-api/src/main/java/org/apache/shardingsphere/api/config/sharding/KeyGeneratorConfiguration.java", "diffHunk": "@@ -20,27 +20,21 @@\n import com.google.common.base.Preconditions;\n import com.google.common.base.Strings;\n import lombok.Getter;\n-import org.apache.shardingsphere.underlying.common.config.TypeBasedSPIConfiguration;\n-\n-import java.util.Properties;\n+import org.apache.shardingsphere.spi.keygen.ShardingKeyGenerator;\n \n /**\n  * Key generator configuration.\n */\n @Getter\n-public final class KeyGeneratorConfiguration extends TypeBasedSPIConfiguration {\n+public final class KeyGeneratorConfiguration {\n     \n     private final String column;\n     \n-    public KeyGeneratorConfiguration(final String type, final String column) {\n-        super(type);\n-        Preconditions.checkArgument(!Strings.isNullOrEmpty(column), \"Column is required.\");\n-        this.column = column;\n-    }\n+    private final ShardingKeyGenerator keyGenerator;", "originalCommit": "fe90913711b0aa5c4bfb35baad8dc8ea0a515101", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgxNDc2Nw==", "url": "https://github.com/apache/shardingsphere/pull/4945#discussion_r399814767", "bodyText": "here we should rename ShardingKeyGenerator SPI to KeyGenerateAlgorithm.\nBe care about modifying all sub class of ShardingKeyGenerator\n\nShardingKeyGenerator has renamed to KeyGenerateAlgorithm, including all sub class of ShardingKeyGenerator and ShardingKeyGeneratorServiceLoader.", "author": "TaoZhiMLND", "createdAt": "2020-03-29T15:40:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEyNjM5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI3Mzk3Ng==", "url": "https://github.com/apache/shardingsphere/pull/4945#discussion_r400273976", "bodyText": "containsKeyGeneratorConfiguration => containsKeyGenerateAlgorithm is better", "author": "cherrylzhao", "createdAt": "2020-03-30T15:16:04Z", "path": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/rule/ShardingRule.java", "diffHunk": "@@ -108,14 +108,14 @@ private ShardingStrategy createDefaultShardingStrategy(final ShardingStrategyCon\n         return Optional.ofNullable(shardingStrategyConfiguration).map(ShardingStrategyFactory::newInstance).orElse(new NoneShardingStrategy());\n     }\n     \n-    private ShardingKeyGenerator createDefaultKeyGenerator(final KeyGeneratorConfiguration keyGeneratorConfiguration) {\n-        ShardingKeyGeneratorServiceLoader serviceLoader = new ShardingKeyGeneratorServiceLoader();\n+    private KeyGenerateAlgorithm createDefaultKeyGenerateAlgorithm(final KeyGeneratorConfiguration keyGeneratorConfiguration) {\n+        KeyGenerateAlgorithmServiceLoader serviceLoader = new KeyGenerateAlgorithmServiceLoader();\n         return containsKeyGeneratorConfiguration(keyGeneratorConfiguration)\n-                ? serviceLoader.newService(keyGeneratorConfiguration.getType(), keyGeneratorConfiguration.getProperties()) : serviceLoader.newService();\n+                ? keyGeneratorConfiguration.getKeyGenerateAlgorithm() : serviceLoader.newService();\n     }\n     \n     private boolean containsKeyGeneratorConfiguration(final KeyGeneratorConfiguration keyGeneratorConfiguration) {", "originalCommit": "106d76e5f60b05c7e7dd575b260accef5fe74268", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI3NzI1Mg==", "url": "https://github.com/apache/shardingsphere/pull/4945#discussion_r400277252", "bodyText": "containsKeyGeneratorConfiguration => containsKeyGenerateAlgorithm is better", "author": "cherrylzhao", "createdAt": "2020-03-30T15:20:08Z", "path": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/rule/TableRule.java", "diffHunk": "@@ -130,7 +129,7 @@ private void addActualTable(final String datasourceName, final String tableName)\n     }\n     \n     private boolean containsKeyGeneratorConfiguration(final TableRuleConfiguration tableRuleConfiguration) {", "originalCommit": "106d76e5f60b05c7e7dd575b260accef5fe74268", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d966f4264c14c6c709946a8dd7c91a3acef61a98", "url": "https://github.com/apache/shardingsphere/commit/d966f4264c14c6c709946a8dd7c91a3acef61a98", "message": "make key-generator as a spring bean on spring namespace.", "committedDate": "2020-03-30T16:13:17Z", "type": "commit"}, {"oid": "f0251b99d03bc793d8c52704f79e88db3fa864e6", "url": "https://github.com/apache/shardingsphere/commit/f0251b99d03bc793d8c52704f79e88db3fa864e6", "message": "fix checkstyle.", "committedDate": "2020-03-30T16:13:18Z", "type": "commit"}, {"oid": "d5f86853216223f41d834b897e368e0668174b34", "url": "https://github.com/apache/shardingsphere/commit/d5f86853216223f41d834b897e368e0668174b34", "message": "code refactor for make key-generator as a spring bean.", "committedDate": "2020-03-30T16:13:20Z", "type": "commit"}, {"oid": "488bc05834b2cf915682181e47570a0374500abf", "url": "https://github.com/apache/shardingsphere/commit/488bc05834b2cf915682181e47570a0374500abf", "message": "add test for GenerateKeyAlgorithmFactoryBean.", "committedDate": "2020-03-30T16:13:20Z", "type": "commit"}, {"oid": "c8d143c3b9b36d84f8dff9602191c9264734df9e", "url": "https://github.com/apache/shardingsphere/commit/c8d143c3b9b36d84f8dff9602191c9264734df9e", "message": "rename ShardingKeyGenerator SPI to KeyGenerateAlgorithm.", "committedDate": "2020-03-30T16:13:23Z", "type": "commit"}, {"oid": "4f2d84584ae9d3baffd3799c6289cf34d7db48d5", "url": "https://github.com/apache/shardingsphere/commit/4f2d84584ae9d3baffd3799c6289cf34d7db48d5", "message": "rename method containsKeyGeneratorConfiguration to containsKeyGenerateAlgorithm.", "committedDate": "2020-03-30T16:13:24Z", "type": "commit"}]}