{"pr_number": 5992, "pr_title": "fix issue#5893:", "pr_createdAt": "2020-06-11T03:39:31Z", "pr_url": "https://github.com/apache/shardingsphere/pull/5992", "timeline": [{"oid": "fb0612cb7e7e51f5eb66548d892707962d1b70b8", "url": "https://github.com/apache/shardingsphere/commit/fb0612cb7e7e51f5eb66548d892707962d1b70b8", "message": "fix issue#5893:\nEncryptRule use equalsIgnoreCase method to match encrypt column, but use equals method to match decrypt column. #5893", "committedDate": "2020-06-11T03:34:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODUzNDg1Ng==", "url": "https://github.com/apache/shardingsphere/pull/5992#discussion_r438534856", "bodyText": "private method do not need javadoc", "author": "terrymanu", "createdAt": "2020-06-11T04:23:23Z", "path": "shardingsphere-features/shardingsphere-encrypt/shardingsphere-encrypt-common/src/main/java/org/apache/shardingsphere/encrypt/rule/EncryptRule.java", "diffHunk": "@@ -167,7 +167,23 @@ public String getCipherColumn(final String logicTable, final String logicColumn)\n      * @return cipher column or not\n      */\n     public boolean isCipherColumn(final String tableName, final String columnName) {\n-        return tables.containsKey(tableName) && tables.get(tableName).getCipherColumns().contains(columnName);\n+        return tables.containsKey(tableName) && isCipherColumn(tables.get(tableName).getCipherColumns(), columnName);\n+    }\n+\n+    /**\n+     * Is cipher column or not.\n+     *\n+     * @param cipherColumns cipher columns\n+     * @param columnName column name\n+     * @return cipher column or not\n+     */", "originalCommit": "fb0612cb7e7e51f5eb66548d892707962d1b70b8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU1MzU3Mg==", "url": "https://github.com/apache/shardingsphere/pull/5992#discussion_r438553572", "bodyText": "ok, I will make a change.", "author": "big-mountain-z", "createdAt": "2020-06-11T05:40:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODUzNDg1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODUzNDk1OQ==", "url": "https://github.com/apache/shardingsphere/pull/5992#discussion_r438534959", "bodyText": "It is better to use java8 lambda instead of for each", "author": "terrymanu", "createdAt": "2020-06-11T04:23:53Z", "path": "shardingsphere-features/shardingsphere-encrypt/shardingsphere-encrypt-common/src/main/java/org/apache/shardingsphere/encrypt/rule/EncryptRule.java", "diffHunk": "@@ -167,7 +167,23 @@ public String getCipherColumn(final String logicTable, final String logicColumn)\n      * @return cipher column or not\n      */\n     public boolean isCipherColumn(final String tableName, final String columnName) {\n-        return tables.containsKey(tableName) && tables.get(tableName).getCipherColumns().contains(columnName);\n+        return tables.containsKey(tableName) && isCipherColumn(tables.get(tableName).getCipherColumns(), columnName);\n+    }\n+\n+    /**\n+     * Is cipher column or not.\n+     *\n+     * @param cipherColumns cipher columns\n+     * @param columnName column name\n+     * @return cipher column or not\n+     */\n+    private boolean isCipherColumn(final Collection<String> cipherColumns, final String columnName) {\n+        for (String each : cipherColumns) {", "originalCommit": "fb0612cb7e7e51f5eb66548d892707962d1b70b8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU1MzU3OA==", "url": "https://github.com/apache/shardingsphere/pull/5992#discussion_r438553578", "bodyText": "ok, I will make a change.", "author": "big-mountain-z", "createdAt": "2020-06-11T05:40:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODUzNDk1OQ=="}], "type": "inlineReview"}, {"oid": "6b94766bd5a63e3d4d058e92b4e57daf4ecf655f", "url": "https://github.com/apache/shardingsphere/commit/6b94766bd5a63e3d4d058e92b4e57daf4ecf655f", "message": "fix issue#5893:\nEncryptRule use equalsIgnoreCase method to match encrypt column, but use equals method to match decrypt column. #5893\nremove private function and use java8 lambda to instead of for each.", "committedDate": "2020-06-11T05:44:18Z", "type": "commit"}]}