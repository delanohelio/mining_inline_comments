{"pr_number": 7619, "pr_title": "Parse SQLServer insert output clause.", "pr_createdAt": "2020-09-27T07:55:17Z", "pr_url": "https://github.com/apache/shardingsphere/pull/7619", "timeline": [{"oid": "2f83a0a50814053419f7d83f5c4b4e2eed13e965", "url": "https://github.com/apache/shardingsphere/commit/2f83a0a50814053419f7d83f5c4b4e2eed13e965", "message": "fixes SQLServer output clause table name grammar.", "committedDate": "2020-09-27T07:43:17Z", "type": "commit"}, {"oid": "8217be8720364f53ccf5b4be9daad17fbd96e5b5", "url": "https://github.com/apache/shardingsphere/commit/8217be8720364f53ccf5b4be9daad17fbd96e5b5", "message": "add SQLServer output segment parser.", "committedDate": "2020-09-27T07:44:17Z", "type": "commit"}, {"oid": "f3d03d97c0e21eea9df3ee0a3f068f59247efbcb", "url": "https://github.com/apache/shardingsphere/commit/f3d03d97c0e21eea9df3ee0a3f068f59247efbcb", "message": "fixes with clause error message.", "committedDate": "2020-09-27T07:46:52Z", "type": "commit"}, {"oid": "9af4abb0f0bc8263eb009c98df0f8a68bd82cbe8", "url": "https://github.com/apache/shardingsphere/commit/9af4abb0f0bc8263eb009c98df0f8a68bd82cbe8", "message": "add SQLServer output segment parser.", "committedDate": "2020-09-27T07:48:41Z", "type": "commit"}, {"oid": "6a2970d1bfd3ec1cab535e657de75172c952cf52", "url": "https://github.com/apache/shardingsphere/commit/6a2970d1bfd3ec1cab535e657de75172c952cf52", "message": "add SQLServer output segment parser test code.", "committedDate": "2020-09-27T07:49:48Z", "type": "commit"}, {"oid": "4fcd2ca87a8ac3433cfd5dd6fb1a9d3cd7106cd6", "url": "https://github.com/apache/shardingsphere/commit/4fcd2ca87a8ac3433cfd5dd6fb1a9d3cd7106cd6", "message": "add SQLServer output segment parser test case.", "committedDate": "2020-09-27T07:50:07Z", "type": "commit"}, {"oid": "19aeafbe696c3bfa4dc3fb0fb6d401395223368f", "url": "https://github.com/apache/shardingsphere/commit/19aeafbe696c3bfa4dc3fb0fb6d401395223368f", "message": "fixes class import.", "committedDate": "2020-09-27T07:51:46Z", "type": "commit"}, {"oid": "cef406ec66c3b4e7fc2676525cda3467f06d614e", "url": "https://github.com/apache/shardingsphere/commit/cef406ec66c3b4e7fc2676525cda3467f06d614e", "message": "Merge branch 'master' into sqlserver-output\n\n# Conflicts:\n#\tshardingsphere-sql-parser/shardingsphere-sql-parser-statement/src/main/java/org/apache/shardingsphere/sql/parser/sql/dialect/statement/sqlserver/dml/SQLServerInsertStatement.java", "committedDate": "2020-09-27T07:59:08Z", "type": "commit"}, {"oid": "2ad278158bea5ec252006f69f99590625e493561", "url": "https://github.com/apache/shardingsphere/commit/2ad278158bea5ec252006f69f99590625e493561", "message": "fixes code conflict.", "committedDate": "2020-09-27T08:00:20Z", "type": "commit"}, {"oid": "142365960f6ba6deb81f1263e4751ade4423fe62", "url": "https://github.com/apache/shardingsphere/commit/142365960f6ba6deb81f1263e4751ade4423fe62", "message": "fixes checkstyle.", "committedDate": "2020-09-27T08:08:00Z", "type": "commit"}, {"oid": "4bf9893b4a9b6c65342f13cc3edb347b9410783d", "url": "https://github.com/apache/shardingsphere/commit/4bf9893b4a9b6c65342f13cc3edb347b9410783d", "message": "fixes checkstyle & util class name.", "committedDate": "2020-09-27T08:08:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU1NTU5Mw==", "url": "https://github.com/apache/shardingsphere/pull/7619#discussion_r495555593", "bodyText": "Mybe it is better to make assertions based on specific DB.How do you think?", "author": "jingshanglu", "createdAt": "2020-09-27T10:09:02Z", "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/main/java/org/apache/shardingsphere/test/sql/parser/parameterized/asserts/statement/dml/impl/InsertStatementAssert.java", "diffHunk": "@@ -59,6 +61,7 @@ public static void assertIs(final SQLCaseAssertContext assertContext, final Inse\n         assertInsertSelectClause(assertContext, actual, expected);\n         assertOnDuplicateKeyColumns(assertContext, actual, expected);\n         assertWithClause(assertContext, actual, expected);\n+        assertOutputClause(assertContext, actual, expected);", "originalCommit": "4bf9893b4a9b6c65342f13cc3edb347b9410783d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU1NzY0MQ==", "url": "https://github.com/apache/shardingsphere/pull/7619#discussion_r495557641", "bodyText": "Mybe it is better to make assertions based on specific DB.How do you think?\n\n@jingshanglu , yes, it's a very good idea, but I suggest we can do it in another PR, do you think it?", "author": "dongzl", "createdAt": "2020-09-27T10:30:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU1NTU5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU1ODE5OA==", "url": "https://github.com/apache/shardingsphere/pull/7619#discussion_r495558198", "bodyText": "@dongzl @tristaZero @strongduanmu    We should discuss aboult parser test framework,one:first determin db type and then assert; two:assert all segment include in all db in InsertStatementAssert.java,and then decide whether to assert or not according to DB type.What do you think?", "author": "jingshanglu", "createdAt": "2020-09-27T10:36:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU1NTU5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU2MjQyNQ==", "url": "https://github.com/apache/shardingsphere/pull/7619#discussion_r495562425", "bodyText": "@jingshanglu @tristaZero @dongzl Now, the refactor task of Statement just splits different dialect statements, StatementContext and StatementAssert are not splitted. When Statement is used by StatemenContext and StatementAssert, different dialect statements are processed uniformly through the StatementHandler now.\nI was wondering if we need to split StatemenContext and StatementAssert, since StatementHandler seems to handle logic well already.", "author": "strongduanmu", "createdAt": "2020-09-27T11:22:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU1NTU5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU2NTg4NQ==", "url": "https://github.com/apache/shardingsphere/pull/7619#discussion_r495565885", "bodyText": "@jingshanglu @tristaZero @dongzl Now, the refactor task of Statement just splits different dialect statements, StatementContext and StatementAssert are not splitted. When Statement is used by StatemenContext and StatementAssert, different dialect statements are processed uniformly through the StatementHandler now.\nI was wondering if we need to split StatemenContext and StatementAssert, since StatementHandler seems to handle logic well already.\n\nyou mean the second way? decide whether to assert or not according to DB type in  specific function, like some segment  only contained by SQLServer.", "author": "jingshanglu", "createdAt": "2020-09-27T12:03:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU1NTU5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU2ODA1OQ==", "url": "https://github.com/apache/shardingsphere/pull/7619#discussion_r495568059", "bodyText": "Hi @jingshanglu , @strongduanmu  I suggest we open a new issue to discuss this problem, This is a big code refactor job, we need discuss it with more people. :)", "author": "dongzl", "createdAt": "2020-09-27T12:28:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU1NTU5Mw=="}], "type": "inlineReview"}]}