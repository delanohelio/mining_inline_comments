{"pr_number": 7601, "pr_title": "Support more java types for getObject", "pr_createdAt": "2020-09-25T07:02:03Z", "pr_url": "https://github.com/apache/shardingsphere/pull/7601", "timeline": [{"oid": "dccb7e49142cf85dbe1cdc4655c397a8604e58fd", "url": "https://github.com/apache/shardingsphere/commit/dccb7e49142cf85dbe1cdc4655c397a8604e58fd", "message": "refactor change YamlRuleSchemaMetaData same with  RuleSchemaMetaData", "committedDate": "2020-09-23T05:29:28Z", "type": "commit"}, {"oid": "539ba4095af1e26ff9433427f1846248909a7ec9", "url": "https://github.com/apache/shardingsphere/commit/539ba4095af1e26ff9433427f1846248909a7ec9", "message": "change for cr", "committedDate": "2020-09-23T09:36:01Z", "type": "commit"}, {"oid": "2a458b17a8a23cf8ce1c1231edecccd0fff64bc9", "url": "https://github.com/apache/shardingsphere/commit/2a458b17a8a23cf8ce1c1231edecccd0fff64bc9", "message": "add test of default constructor", "committedDate": "2020-09-24T00:09:50Z", "type": "commit"}, {"oid": "948480d16c0f78e9557a0247ff51f3adaa39260f", "url": "https://github.com/apache/shardingsphere/commit/948480d16c0f78e9557a0247ff51f3adaa39260f", "message": "Merge branch 'master' into dev", "committedDate": "2020-09-24T02:58:56Z", "type": "commit"}, {"oid": "290d10f89dea678a823cebd06db598f4469bbec9", "url": "https://github.com/apache/shardingsphere/commit/290d10f89dea678a823cebd06db598f4469bbec9", "message": "Merge branch 'master' into dev", "committedDate": "2020-09-25T05:25:07Z", "type": "commit"}, {"oid": "6ff762e366a792db7090d9c40826ff086f204503", "url": "https://github.com/apache/shardingsphere/commit/6ff762e366a792db7090d9c40826ff086f204503", "message": "Support url and bigdecimal data", "committedDate": "2020-09-25T06:56:22Z", "type": "commit"}, {"oid": "58dd890467940edeeb3b6cf3410cd0d2095d3c1e", "url": "https://github.com/apache/shardingsphere/commit/58dd890467940edeeb3b6cf3410cd0d2095d3c1e", "message": "fix test fail", "committedDate": "2020-09-25T08:30:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUzMzAwMg==", "url": "https://github.com/apache/shardingsphere/pull/7601#discussion_r495533002", "bodyText": "add parameter to message", "author": "kimmking", "createdAt": "2020-09-27T05:54:46Z", "path": "shardingsphere-jdbc/shardingsphere-jdbc-core/src/main/java/org/apache/shardingsphere/driver/jdbc/core/resultset/ResultSetUtil.java", "diffHunk": "@@ -77,6 +82,49 @@ public static Object convertValue(final Object value, final Class<?> convertType\n             return value;\n         }\n     }\n+    \n+    private static Object convertURL(final Object value) {\n+        String val = value.toString();\n+        try {\n+            return new URL(val);\n+        } catch (MalformedURLException mfe) {\n+            throw new ShardingSphereException(\"Unsupported Date type: URL\");", "originalCommit": "58dd890467940edeeb3b6cf3410cd0d2095d3c1e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU1NTE2OQ==", "url": "https://github.com/apache/shardingsphere/pull/7601#discussion_r495555169", "bodyText": "done", "author": "xbkaishui", "createdAt": "2020-09-27T10:04:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUzMzAwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUzMzAyNg==", "url": "https://github.com/apache/shardingsphere/pull/7601#discussion_r495533026", "bodyText": "use ex", "author": "kimmking", "createdAt": "2020-09-27T05:54:54Z", "path": "shardingsphere-jdbc/shardingsphere-jdbc-core/src/main/java/org/apache/shardingsphere/driver/jdbc/core/resultset/ResultSetUtil.java", "diffHunk": "@@ -77,6 +82,49 @@ public static Object convertValue(final Object value, final Class<?> convertType\n             return value;\n         }\n     }\n+    \n+    private static Object convertURL(final Object value) {\n+        String val = value.toString();\n+        try {\n+            return new URL(val);\n+        } catch (MalformedURLException mfe) {", "originalCommit": "58dd890467940edeeb3b6cf3410cd0d2095d3c1e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU1NTE3OA==", "url": "https://github.com/apache/shardingsphere/pull/7601#discussion_r495555178", "bodyText": "done", "author": "xbkaishui", "createdAt": "2020-09-27T10:04:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUzMzAyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUzMzEwOQ==", "url": "https://github.com/apache/shardingsphere/pull/7601#discussion_r495533109", "bodyText": "no need to round", "author": "kimmking", "createdAt": "2020-09-27T05:55:57Z", "path": "shardingsphere-jdbc/shardingsphere-jdbc-core/src/main/java/org/apache/shardingsphere/driver/jdbc/core/resultset/ResultSetUtil.java", "diffHunk": "@@ -77,6 +82,49 @@ public static Object convertValue(final Object value, final Class<?> convertType\n             return value;\n         }\n     }\n+    \n+    private static Object convertURL(final Object value) {\n+        String val = value.toString();\n+        try {\n+            return new URL(val);\n+        } catch (MalformedURLException mfe) {\n+            throw new ShardingSphereException(\"Unsupported Date type: URL\");\n+        }\n+    }\n+    \n+    /**\n+     * Convert object to BigDecimal.\n+     *\n+     * @param value current db object\n+     * @param needScale need scale\n+     * @param scale scale size\n+     * @return big decimal\n+     */\n+    public static Object convertBigDecimalValue(final Object value, final boolean needScale, final int scale) {\n+        if (null == value) {\n+            return convertNullValue(BigDecimal.class);\n+        }\n+        if (value.getClass() == BigDecimal.class) {\n+            return adjustBigDecimalResult((BigDecimal) value, needScale, scale);\n+        }\n+        if (value instanceof Number || value instanceof String) {\n+            BigDecimal bigDecimal = new BigDecimal(value.toString());\n+            return adjustBigDecimalResult(bigDecimal, needScale, scale);\n+        }\n+        throw new ShardingSphereException(\"Unsupported Date type: BigDecimal value %s\", value);\n+    }\n+  \n+    private static BigDecimal adjustBigDecimalResult(final BigDecimal value, final boolean needScale, final int scale) {\n+        if (needScale) {\n+            try {\n+                return value.setScale(scale);\n+            } catch (ArithmeticException ex) {\n+                // try this if above fails", "originalCommit": "58dd890467940edeeb3b6cf3410cd0d2095d3c1e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU1NDQ0NQ==", "url": "https://github.com/apache/shardingsphere/pull/7601#discussion_r495554445", "bodyText": "this is reference mysql  driver source code", "author": "xbkaishui", "createdAt": "2020-09-27T09:56:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUzMzEwOQ=="}], "type": "inlineReview"}, {"oid": "89d16347aab43769f9db05fd0e1c78ff680bfdab", "url": "https://github.com/apache/shardingsphere/commit/89d16347aab43769f9db05fd0e1c78ff680bfdab", "message": "change as cr comment", "committedDate": "2020-09-27T10:04:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYyMDkyOA==", "url": "https://github.com/apache/shardingsphere/pull/7601#discussion_r496620928", "bodyText": "remove comment", "author": "tuohai666", "createdAt": "2020-09-29T10:48:21Z", "path": "shardingsphere-jdbc/shardingsphere-jdbc-core/src/main/java/org/apache/shardingsphere/driver/jdbc/core/resultset/ResultSetUtil.java", "diffHunk": "@@ -77,6 +82,49 @@ public static Object convertValue(final Object value, final Class<?> convertType\n             return value;\n         }\n     }\n+    \n+    private static Object convertURL(final Object value) {\n+        String val = value.toString();\n+        try {\n+            return new URL(val);\n+        } catch (MalformedURLException ex) {\n+            throw new ShardingSphereException(\"Unsupported Date type: URL value %s\", value);\n+        }\n+    }\n+    \n+    /**\n+     * Convert object to BigDecimal.\n+     *\n+     * @param value current db object\n+     * @param needScale need scale\n+     * @param scale scale size\n+     * @return big decimal\n+     */\n+    public static Object convertBigDecimalValue(final Object value, final boolean needScale, final int scale) {\n+        if (null == value) {\n+            return convertNullValue(BigDecimal.class);\n+        }\n+        if (value.getClass() == BigDecimal.class) {\n+            return adjustBigDecimalResult((BigDecimal) value, needScale, scale);\n+        }\n+        if (value instanceof Number || value instanceof String) {\n+            BigDecimal bigDecimal = new BigDecimal(value.toString());\n+            return adjustBigDecimalResult(bigDecimal, needScale, scale);\n+        }\n+        throw new ShardingSphereException(\"Unsupported Date type: BigDecimal value %s\", value);\n+    }\n+  \n+    private static BigDecimal adjustBigDecimalResult(final BigDecimal value, final boolean needScale, final int scale) {\n+        if (needScale) {\n+            try {\n+                return value.setScale(scale);\n+            } catch (ArithmeticException ex) {\n+                // try this if above fails", "originalCommit": "89d16347aab43769f9db05fd0e1c78ff680bfdab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE4MTM3Nw==", "url": "https://github.com/apache/shardingsphere/pull/7601#discussion_r497181377", "bodyText": "done", "author": "xbkaishui", "createdAt": "2020-09-30T00:39:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYyMDkyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYyMTE3OA==", "url": "https://github.com/apache/shardingsphere/pull/7601#discussion_r496621178", "bodyText": "final", "author": "tuohai666", "createdAt": "2020-09-29T10:48:53Z", "path": "shardingsphere-jdbc/shardingsphere-jdbc-core/src/main/java/org/apache/shardingsphere/driver/jdbc/core/resultset/ResultSetUtil.java", "diffHunk": "@@ -77,6 +82,49 @@ public static Object convertValue(final Object value, final Class<?> convertType\n             return value;\n         }\n     }\n+    \n+    private static Object convertURL(final Object value) {\n+        String val = value.toString();\n+        try {\n+            return new URL(val);\n+        } catch (MalformedURLException ex) {\n+            throw new ShardingSphereException(\"Unsupported Date type: URL value %s\", value);\n+        }\n+    }\n+    \n+    /**\n+     * Convert object to BigDecimal.\n+     *\n+     * @param value current db object\n+     * @param needScale need scale\n+     * @param scale scale size\n+     * @return big decimal\n+     */\n+    public static Object convertBigDecimalValue(final Object value, final boolean needScale, final int scale) {\n+        if (null == value) {\n+            return convertNullValue(BigDecimal.class);\n+        }\n+        if (value.getClass() == BigDecimal.class) {\n+            return adjustBigDecimalResult((BigDecimal) value, needScale, scale);\n+        }\n+        if (value instanceof Number || value instanceof String) {\n+            BigDecimal bigDecimal = new BigDecimal(value.toString());\n+            return adjustBigDecimalResult(bigDecimal, needScale, scale);\n+        }\n+        throw new ShardingSphereException(\"Unsupported Date type: BigDecimal value %s\", value);\n+    }\n+  \n+    private static BigDecimal adjustBigDecimalResult(final BigDecimal value, final boolean needScale, final int scale) {\n+        if (needScale) {\n+            try {\n+                return value.setScale(scale);\n+            } catch (ArithmeticException ex) {", "originalCommit": "89d16347aab43769f9db05fd0e1c78ff680bfdab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE4MTM1OA==", "url": "https://github.com/apache/shardingsphere/pull/7601#discussion_r497181358", "bodyText": "done", "author": "xbkaishui", "createdAt": "2020-09-30T00:39:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYyMTE3OA=="}], "type": "inlineReview"}, {"oid": "06d759618a631d54701ea4450155dce56f4ddcf2", "url": "https://github.com/apache/shardingsphere/commit/06d759618a631d54701ea4450155dce56f4ddcf2", "message": "change as suggestions", "committedDate": "2020-09-29T15:04:03Z", "type": "commit"}, {"oid": "90d04a39c4c305286c444fe6bec616c19e589d1a", "url": "https://github.com/apache/shardingsphere/commit/90d04a39c4c305286c444fe6bec616c19e589d1a", "message": "add final", "committedDate": "2020-09-29T15:07:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI0ODE4Ng==", "url": "https://github.com/apache/shardingsphere/pull/7601#discussion_r497248186", "bodyText": "should be val instead of value.", "author": "kimmking", "createdAt": "2020-09-30T05:17:39Z", "path": "shardingsphere-jdbc/shardingsphere-jdbc-core/src/main/java/org/apache/shardingsphere/driver/jdbc/core/resultset/ResultSetUtil.java", "diffHunk": "@@ -77,6 +82,48 @@ public static Object convertValue(final Object value, final Class<?> convertType\n             return value;\n         }\n     }\n+    \n+    private static Object convertURL(final Object value) {\n+        String val = value.toString();\n+        try {\n+            return new URL(val);\n+        } catch (final MalformedURLException ex) {\n+            throw new ShardingSphereException(\"Unsupported Date type: URL value %s\", value);", "originalCommit": "90d04a39c4c305286c444fe6bec616c19e589d1a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}