{"pr_number": 5634, "pr_title": "Defect more when concurrently registering services", "pr_createdAt": "2020-05-16T00:48:07Z", "pr_url": "https://github.com/apache/shardingsphere/pull/5634", "timeline": [{"oid": "8288d46d700a2815f7414dfc94aaa42c2363baee", "url": "https://github.com/apache/shardingsphere/commit/8288d46d700a2815f7414dfc94aaa42c2363baee", "message": "Defect more when concurrently registering services\n\nThis pull request follows up #5618.\n\n`ConcurrentHashMap` is thread safe, but `get-and-check-and-put` are composite operations and are thus not atomic, this patch replaces the former with `computeIfAbsent`, which is atomic now.", "committedDate": "2020-05-16T00:49:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEwNjg3OQ==", "url": "https://github.com/apache/shardingsphere/pull/5634#discussion_r426106879", "bodyText": "should keep incident in new line", "author": "cherrylzhao", "createdAt": "2020-05-16T02:01:34Z", "path": "shardingsphere-spi/src/main/java/org/apache/shardingsphere/sharding/spi/ShardingSphereServiceLoader.java", "diffHunk": "@@ -51,17 +51,12 @@\n             registerServiceClass(service, each);\n         }\n     }\n-    \n-    @SuppressWarnings(\"unchecked\")\n+\n     private static <T> void registerServiceClass(final Class<T> service, final T instance) {\n-        Collection<Class<?>> serviceClasses = SERVICE_MAP.get(service);\n-        if (null == serviceClasses) {\n-            serviceClasses = new LinkedHashSet<>();\n-        }\n+        Collection<Class<?>> serviceClasses = SERVICE_MAP.computeIfAbsent(service, unused -> new LinkedHashSet<>());\n         serviceClasses.add(instance.getClass());\n-        SERVICE_MAP.put(service, serviceClasses);\n     }\n-    \n+", "originalCommit": "8288d46d700a2815f7414dfc94aaa42c2363baee", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEwNjg5Nw==", "url": "https://github.com/apache/shardingsphere/pull/5634#discussion_r426106897", "bodyText": "should keep incident in new line", "author": "cherrylzhao", "createdAt": "2020-05-16T02:01:50Z", "path": "shardingsphere-spi/src/main/java/org/apache/shardingsphere/sharding/spi/ShardingSphereServiceLoader.java", "diffHunk": "@@ -73,7 +68,7 @@\n     public static <T> Collection<T> newServiceInstances(final Class<T> service) {\n         return SERVICE_MAP.containsKey(service) ? SERVICE_MAP.get(service).stream().map(each -> (T) newServiceInstance(each)).collect(Collectors.toList()) : Collections.emptyList();\n     }\n-    \n+", "originalCommit": "8288d46d700a2815f7414dfc94aaa42c2363baee", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "fdea9f8f60d2f17ddfa1803a1551e0467e01cce8", "url": "https://github.com/apache/shardingsphere/commit/fdea9f8f60d2f17ddfa1803a1551e0467e01cce8", "message": "Revert some indentations", "committedDate": "2020-05-16T02:18:55Z", "type": "commit"}]}