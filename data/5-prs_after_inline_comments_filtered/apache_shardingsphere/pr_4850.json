{"pr_number": 4850, "pr_title": "#4460, fix order by string column exception", "pr_createdAt": "2020-03-19T10:14:13Z", "pr_url": "https://github.com/apache/shardingsphere/pull/4850", "timeline": [{"oid": "3adee15748c74e4cdbdd28c3ecd0e2cfa878c16d", "url": "https://github.com/apache/shardingsphere/commit/3adee15748c74e4cdbdd28c3ecd0e2cfa878c16d", "message": "#4460, fix order by string column exception", "committedDate": "2020-03-18T10:14:56Z", "type": "commit"}, {"oid": "6b2fba81b2062e280d523cea4d70db1c35bcb0f0", "url": "https://github.com/apache/shardingsphere/commit/6b2fba81b2062e280d523cea4d70db1c35bcb0f0", "message": "#4460, fix order by string column exception", "committedDate": "2020-03-19T10:12:49Z", "type": "commit"}, {"oid": "14655ad7849b786d7be193bef352aedcda8382ec", "url": "https://github.com/apache/shardingsphere/commit/14655ad7849b786d7be193bef352aedcda8382ec", "message": "#4460, different delimiters for different drivers", "committedDate": "2020-03-19T11:30:50Z", "type": "commit"}, {"oid": "73f5d7c64e3f235c8a7ce27c8ef7397013430569", "url": "https://github.com/apache/shardingsphere/commit/73f5d7c64e3f235c8a7ce27c8ef7397013430569", "message": "#4460, find column from all tables parsed", "committedDate": "2020-03-19T16:32:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQyMTgzNw==", "url": "https://github.com/apache/shardingsphere/pull/4850#discussion_r395421837", "bodyText": "This method are pretty long, and lots of break in this method. Can you consider about extract them as serval small methods?", "author": "terrymanu", "createdAt": "2020-03-20T03:10:52Z", "path": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/sharding/merge/dql/orderby/OrderByValue.java", "diffHunk": "@@ -43,17 +52,38 @@\n     \n     private List<Comparable<?>> orderValues;\n     \n-    public OrderByValue(final QueryResult queryResult, final Collection<OrderByItem> orderByItems) {\n+    public OrderByValue(final QueryResult queryResult, final Collection<OrderByItem> orderByItems, final SelectStatementContext selectStatementContext, final SchemaMetaData schemaMetaData) {\n         this.queryResult = queryResult;\n         this.orderByItems = orderByItems;\n-        this.orderValuesCaseSensitive = getOrderValuesCaseSensitive();\n+        this.orderValuesCaseSensitive = getOrderValuesCaseSensitive(selectStatementContext, schemaMetaData);\n     }\n     \n     @SneakyThrows\n-    private List<Boolean> getOrderValuesCaseSensitive() {\n+    private List<Boolean> getOrderValuesCaseSensitive(final SelectStatementContext selectStatementContext, final SchemaMetaData schemaMetaData) {\n         List<Boolean> result = new ArrayList<>(orderByItems.size());\n-        for (OrderByItem each : orderByItems) {\n-            result.add(queryResult.isCaseSensitive(each.getIndex()));\n+        for (OrderByItem eachOrderByItem : orderByItems) {\n+            for (SimpleTableSegment eachSimpleTableSegment : selectStatementContext.getAllTables()) {\n+                String tableName = eachSimpleTableSegment.getTableName().getIdentifier().getValue();\n+                TableMetaData tableMetaData = schemaMetaData.get(tableName);\n+                Map<String, ColumnMetaData> columns = tableMetaData.getColumns();\n+                OrderByItemSegment orderByItemSegment = eachOrderByItem.getSegment();\n+                if (orderByItemSegment instanceof ColumnOrderByItemSegment) {\n+                    String columnName = ((ColumnOrderByItemSegment) orderByItemSegment).getColumn().getIdentifier().getValue();\n+                    if (columns.containsKey(columnName)) {\n+                        result.add(columns.get(columnName).isCaseSensitive());\n+                        break;\n+                    }\n+                } else if (orderByItemSegment instanceof IndexOrderByItemSegment) {\n+                    int columnIndex = ((IndexOrderByItemSegment) orderByItemSegment).getColumnIndex();\n+                    if (columns.values().toArray().length >= columnIndex) {\n+                        result.add(((ColumnMetaData) columns.values().toArray()[columnIndex - 1]).isCaseSensitive());\n+                        break;\n+                    }\n+                } else {\n+                    result.add(false);\n+                    break;", "originalCommit": "73f5d7c64e3f235c8a7ce27c8ef7397013430569", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ4ODUwMg==", "url": "https://github.com/apache/shardingsphere/pull/4850#discussion_r395488502", "bodyText": "Fixed", "author": "tuohai666", "createdAt": "2020-03-20T08:19:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQyMTgzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQyMjIxMQ==", "url": "https://github.com/apache/shardingsphere/pull/4850#discussion_r395422211", "bodyText": "Please re-design about the codes here.\nWe should never do something about the sql dialect in this module.", "author": "terrymanu", "createdAt": "2020-03-20T03:13:20Z", "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/main/java/org/apache/shardingsphere/sql/parser/binder/metadata/column/ColumnMetaDataLoader.java", "diffHunk": "@@ -60,9 +60,34 @@\n                 result.add(new ColumnMetaData(columnName, columnType, isPrimaryKey));\n             }\n         }\n+        try (ResultSet resultSet = connection.createStatement().executeQuery(generateEmptyResultSQL(connection, table))) {\n+            for (ColumnMetaData each : result) {\n+                each.setCaseSensitive(resultSet.getMetaData().isCaseSensitive(resultSet.findColumn(each.getName())));\n+            }\n+        }\n         return result;\n     }\n     \n+    private static String generateEmptyResultSQL(final Connection connection, final String table) throws SQLException {\n+        String delimiterLeft;\n+        String delimiterRight;\n+        String url = connection.getMetaData().getURL();\n+        if (url.startsWith(\"jdbc:mysql:\")) {\n+            delimiterLeft = \"`\";\n+            delimiterRight = \"`\";\n+        } else if (url.startsWith(\"jdbc:oracle:\") || url.startsWith(\"jdbc:postgresql:\") || url.startsWith(\"jdbc:h2:\")) {\n+            delimiterLeft = \"\\\"\";\n+            delimiterRight = \"\\\"\";\n+        } else if (url.startsWith(\"jdbc:sqlserver:\")) {\n+            delimiterLeft = \"[\";\n+            delimiterRight = \"]\";\n+        } else {\n+            delimiterLeft = \"\";\n+            delimiterRight = \"\";\n+        }\n+        return \"SELECT * FROM \" + delimiterLeft + table + delimiterRight + \" WHERE 1 != 1;\";", "originalCommit": "73f5d7c64e3f235c8a7ce27c8ef7397013430569", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIyOTg0MA==", "url": "https://github.com/apache/shardingsphere/pull/4850#discussion_r396229840", "bodyText": "Fixed.", "author": "tuohai666", "createdAt": "2020-03-23T06:12:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQyMjIxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQyMjg0NA==", "url": "https://github.com/apache/shardingsphere/pull/4850#discussion_r395422844", "bodyText": "Please do not use setter, we may keep consist with other fields.", "author": "terrymanu", "createdAt": "2020-03-20T03:17:27Z", "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/main/java/org/apache/shardingsphere/sql/parser/binder/metadata/column/ColumnMetaData.java", "diffHunk": "@@ -36,4 +37,7 @@\n     private final String dataType;\n     \n     private final boolean primaryKey;\n+    \n+    @Setter\n+    private boolean isCaseSensitive;", "originalCommit": "73f5d7c64e3f235c8a7ce27c8ef7397013430569", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ4ODY0Ng==", "url": "https://github.com/apache/shardingsphere/pull/4850#discussion_r395488646", "bodyText": "Fixed.", "author": "tuohai666", "createdAt": "2020-03-20T08:19:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQyMjg0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQyMjkyNw==", "url": "https://github.com/apache/shardingsphere/pull/4850#discussion_r395422927", "bodyText": "Please consider change isCaseSensitive to caseSensitive", "author": "terrymanu", "createdAt": "2020-03-20T03:17:48Z", "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/main/java/org/apache/shardingsphere/sql/parser/binder/metadata/column/ColumnMetaData.java", "diffHunk": "@@ -36,4 +37,7 @@\n     private final String dataType;\n     \n     private final boolean primaryKey;\n+    \n+    @Setter\n+    private boolean isCaseSensitive;", "originalCommit": "73f5d7c64e3f235c8a7ce27c8ef7397013430569", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ4OTA1OQ==", "url": "https://github.com/apache/shardingsphere/pull/4850#discussion_r395489059", "bodyText": "Fixed.", "author": "tuohai666", "createdAt": "2020-03-20T08:20:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQyMjkyNw=="}], "type": "inlineReview"}, {"oid": "014c1d01b2788d4d9e8b4b053f7261d2afa8004e", "url": "https://github.com/apache/shardingsphere/commit/014c1d01b2788d4d9e8b4b053f7261d2afa8004e", "message": "#4460, fix index order by item problem", "committedDate": "2020-03-20T03:51:15Z", "type": "commit"}, {"oid": "79a8c00de3652d608f2ce4c5e5106f5f5490b6a2", "url": "https://github.com/apache/shardingsphere/commit/79a8c00de3652d608f2ce4c5e5106f5f5490b6a2", "message": "#4460, fix test case", "committedDate": "2020-03-20T05:15:50Z", "type": "commit"}, {"oid": "5c7a6121efe084e1869fa07efc003a478e895a53", "url": "https://github.com/apache/shardingsphere/commit/5c7a6121efe084e1869fa07efc003a478e895a53", "message": "#4460, remove isCaseSensitive from QueryResult", "committedDate": "2020-03-20T05:56:49Z", "type": "commit"}, {"oid": "d9e15e9a33610c5c545991ad7ece100aba799a78", "url": "https://github.com/apache/shardingsphere/commit/d9e15e9a33610c5c545991ad7ece100aba799a78", "message": "#4460, remove isCaseSensitive from QueryResult", "committedDate": "2020-03-20T06:16:14Z", "type": "commit"}, {"oid": "4c8956b7e7b61c5775b22fa342fc5088107d0164", "url": "https://github.com/apache/shardingsphere/commit/4c8956b7e7b61c5775b22fa342fc5088107d0164", "message": "#4460, remove isCaseSensitive from QueryResult", "committedDate": "2020-03-20T07:05:27Z", "type": "commit"}, {"oid": "94b3d3f31b920c6a8bd1729bdfb71096afcbea08", "url": "https://github.com/apache/shardingsphere/commit/94b3d3f31b920c6a8bd1729bdfb71096afcbea08", "message": "#4460, remove setter of isCaseSensitive", "committedDate": "2020-03-20T08:05:37Z", "type": "commit"}, {"oid": "7649d74d63edcd95130eb831fa23bbfeac9eac40", "url": "https://github.com/apache/shardingsphere/commit/7649d74d63edcd95130eb831fa23bbfeac9eac40", "message": "#4460, isCaseSensitive => caseSensitive", "committedDate": "2020-03-20T08:10:01Z", "type": "commit"}, {"oid": "8b43ce649bd917188ef8a4314c72a3aae077e425", "url": "https://github.com/apache/shardingsphere/commit/8b43ce649bd917188ef8a4314c72a3aae077e425", "message": "#4460, split getOrderValuesCaseSensitive to small methods", "committedDate": "2020-03-20T08:17:22Z", "type": "commit"}, {"oid": "61e79e54c9ac20df06fc6330b7ed93caaffb9c36", "url": "https://github.com/apache/shardingsphere/commit/61e79e54c9ac20df06fc6330b7ed93caaffb9c36", "message": "#4460, for test case", "committedDate": "2020-03-20T08:33:34Z", "type": "commit"}, {"oid": "b8bdad7ddb38f84520f76632d3efb956d8c06ed0", "url": "https://github.com/apache/shardingsphere/commit/b8bdad7ddb38f84520f76632d3efb956d8c06ed0", "message": "#4460, fix test cases", "committedDate": "2020-03-20T08:59:06Z", "type": "commit"}, {"oid": "52afd2a878aab2b6e2b4695ad9a7512eb206468a", "url": "https://github.com/apache/shardingsphere/commit/52afd2a878aab2b6e2b4695ad9a7512eb206468a", "message": "Merge remote-tracking branch 'upstream/master' into issue-4460\n\n# Conflicts:\n#\tsharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/sharding/route/engine/type/standard/AbstractSQLRouteTest.java\n#\tshardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/main/java/org/apache/shardingsphere/sql/parser/binder/metadata/column/ColumnMetaData.java\n#\tshardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/main/java/org/apache/shardingsphere/sql/parser/binder/metadata/column/ColumnMetaDataLoader.java", "committedDate": "2020-03-23T02:40:20Z", "type": "commit"}, {"oid": "051d176d3fea541e83243e9f1a70f5ff27eb1af0", "url": "https://github.com/apache/shardingsphere/commit/051d176d3fea541e83243e9f1a70f5ff27eb1af0", "message": "#4460, re-design generateEmptyResultSQL()", "committedDate": "2020-03-23T04:08:36Z", "type": "commit"}, {"oid": "80954da71b967566d1793009b4ab678ec7a8e00e", "url": "https://github.com/apache/shardingsphere/commit/80954da71b967566d1793009b4ab678ec7a8e00e", "message": "#4460, fix test cases", "committedDate": "2020-03-23T05:26:52Z", "type": "commit"}, {"oid": "fb994c3eaa0d7f7ef673c9e37838cbd78abd313b", "url": "https://github.com/apache/shardingsphere/commit/fb994c3eaa0d7f7ef673c9e37838cbd78abd313b", "message": "#4460, fix test cases", "committedDate": "2020-03-23T05:42:40Z", "type": "commit"}, {"oid": "0e5980a6c04f80b28ab260584353dc5176256d0d", "url": "https://github.com/apache/shardingsphere/commit/0e5980a6c04f80b28ab260584353dc5176256d0d", "message": "#4460, add TODO: consider add a getDialectDelimeter() interface in parse module", "committedDate": "2020-03-23T06:46:13Z", "type": "commit"}]}