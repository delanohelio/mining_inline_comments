{"pr_number": 1096, "pr_title": "Class to represent errors in Maven artifact", "pr_createdAt": "2020-01-09T20:26:58Z", "pr_url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1096", "timeline": [{"oid": "8f494b5fdadf3d22b20cd9acfb436464b3cb59d7", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/8f494b5fdadf3d22b20cd9acfb436464b3cb59d7", "message": "Fixes #1093", "committedDate": "2020-01-09T20:24:56Z", "type": "commit"}, {"oid": "d94ec864095947aa4cafc19d79aa8f2701880611", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/d94ec864095947aa4cafc19d79aa8f2701880611", "message": "Javadoc", "committedDate": "2020-01-09T20:32:38Z", "type": "commit"}, {"oid": "300430846a4078f6055fb8480b74e46967571db2", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/300430846a4078f6055fb8480b74e46967571db2", "message": "Removed unnecessary code", "committedDate": "2020-01-09T20:34:13Z", "type": "commit"}, {"oid": "1fd3e17a7b7a52e7da3b12e506101880f55dbd42", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/1fd3e17a7b7a52e7da3b12e506101880f55dbd42", "message": "javadoc", "committedDate": "2020-01-09T20:39:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk0OTYwOA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1096#discussion_r364949608", "bodyText": "Now these formatting the problem is ArtifactProblem's responsibility.", "author": "suztomo", "createdAt": "2020-01-09T20:40:09Z", "path": "enforcer-rules/src/main/java/com/google/cloud/tools/dependencies/enforcer/LinkageCheckerRule.java", "diffHunk": "@@ -358,17 +353,6 @@ public void execute(@Nonnull EnforcerRuleHelper helper) throws EnforcerRuleExcep\n     }\n   }\n \n-  private static String findPaths(DependencyNode root, Artifact artifact) {\n-    ImmutableList<List<DependencyNode>> dependencyPaths = findArtifactPaths(root, artifact);\n-\n-    ImmutableList<String> paths =\n-        dependencyPaths.stream()\n-            .map(path -> Joiner.on(\" > \").join(path))\n-            .collect(toImmutableList());\n-    // Joining one or more paths from root to the artifact\n-    return Joiner.on(\"\\n\").join(paths);", "originalCommit": "300430846a4078f6055fb8480b74e46967571db2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk1MDExNw==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1096#discussion_r364950117", "bodyText": "This is warn because having a unresolvable Maven artifact should not cause the build failure as long as there is no linkage errors.", "author": "suztomo", "createdAt": "2020-01-09T20:41:26Z", "path": "enforcer-rules/src/main/java/com/google/cloud/tools/dependencies/enforcer/LinkageCheckerRule.java", "diffHunk": "@@ -225,6 +228,11 @@ public void execute(@Nonnull EnforcerRuleHelper helper) throws EnforcerRuleExcep\n       }\n     } catch (ExpressionEvaluationException ex) {\n       throw new EnforcerRuleException(\"Unable to lookup an expression \" + ex.getMessage(), ex);\n+    } finally {\n+      // Always show artifact problems. But these should not be the cause of failing the rule.\n+      for (ArtifactProblem problem : artifactProblems) {\n+        logger.warn(problem.toString());", "originalCommit": "300430846a4078f6055fb8480b74e46967571db2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk4MDIxMA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1096#discussion_r364980210", "bodyText": "make this a comment in the code", "author": "elharo", "createdAt": "2020-01-09T21:58:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk1MDExNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAwNzgyMw==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1096#discussion_r365007823", "bodyText": "Moved.", "author": "suztomo", "createdAt": "2020-01-09T23:21:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk1MDExNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk3Nzk0Mw==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1096#discussion_r364977943", "bodyText": "Should this be a subclass instead? That is, should there be subclasses for different types of artifact problems? Using a type object feels not very object oriented.", "author": "elharo", "createdAt": "2020-01-09T21:53:01Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/ArtifactProblem.java", "diffHunk": "@@ -0,0 +1,126 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.google.cloud.tools.opensource.dependencies;\n+\n+import static com.google.common.base.Preconditions.checkArgument;\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import com.google.common.collect.ImmutableList;\n+import java.util.List;\n+import javax.annotation.Nullable;\n+import org.eclipse.aether.artifact.Artifact;\n+import org.eclipse.aether.graph.DependencyNode;\n+\n+/** Problem in a Maven artifact. */\n+public final class ArtifactProblem {\n+\n+  /** The Maven artifact that has the problem. */\n+  private final Artifact artifact;\n+\n+  /** The type of the problem in the artifact. */\n+  private final Type type;", "originalCommit": "1fd3e17a7b7a52e7da3b12e506101880f55dbd42", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAwMjQyNQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1096#discussion_r365002425", "bodyText": "Great idea. Removed the type in favor of class hierarchy.", "author": "suztomo", "createdAt": "2020-01-09T23:01:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk3Nzk0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk3ODE4NA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1096#discussion_r364978184", "bodyText": "Should SymbolProblem (or whatever it's called) and ArtifactProblem have  a common superclass?", "author": "elharo", "createdAt": "2020-01-09T21:53:40Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/ArtifactProblem.java", "diffHunk": "@@ -0,0 +1,126 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.google.cloud.tools.opensource.dependencies;\n+\n+import static com.google.common.base.Preconditions.checkArgument;\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import com.google.common.collect.ImmutableList;\n+import java.util.List;\n+import javax.annotation.Nullable;\n+import org.eclipse.aether.artifact.Artifact;\n+import org.eclipse.aether.graph.DependencyNode;\n+\n+/** Problem in a Maven artifact. */\n+public final class ArtifactProblem {", "originalCommit": "1fd3e17a7b7a52e7da3b12e506101880f55dbd42", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAwMjMzOA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1096#discussion_r365002338", "bodyText": "No, I don't see advantage to have a common superclass for SymbolProblem and ArtifactProblem. They do not share any property. They are not handled in a container class (Set or Map) together.", "author": "suztomo", "createdAt": "2020-01-09T23:01:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk3ODE4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk3ODcxMw==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1096#discussion_r364978713", "bodyText": "This sentence doesn't quite work.", "author": "elharo", "createdAt": "2020-01-09T21:54:59Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/ArtifactProblem.java", "diffHunk": "@@ -0,0 +1,126 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.google.cloud.tools.opensource.dependencies;\n+\n+import static com.google.common.base.Preconditions.checkArgument;\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import com.google.common.collect.ImmutableList;\n+import java.util.List;\n+import javax.annotation.Nullable;\n+import org.eclipse.aether.artifact.Artifact;\n+import org.eclipse.aether.graph.DependencyNode;\n+\n+/** Problem in a Maven artifact. */\n+public final class ArtifactProblem {\n+\n+  /** The Maven artifact that has the problem. */\n+  private final Artifact artifact;\n+\n+  /** The type of the problem in the artifact. */\n+  private final Type type;\n+\n+  /**\n+   * The dependency path to the artifact from the root of the dependency tree. An empty list if the\n+   * path is unknown.\n+   */\n+  private final ImmutableList<DependencyNode> dependencyPath;\n+\n+  /**\n+   * The list of invalid class files if type is {@link Type#INVALID_CLASS_FILE}; otherwise an empty\n+   * list.\n+   */\n+  private final ImmutableList<String> classFileNames;\n+\n+  /**\n+   * Returns the problem describing the artifact at the leaf of {@code dependencyPath} is not\n+   * resolvable by Maven.\n+   */\n+  public static ArtifactProblem unresolvableArtifact(List<DependencyNode> dependencyPath) {\n+    checkNotNull(dependencyPath);\n+    checkArgument(dependencyPath.size() > 0, \"dependencyPath should not be empty\");\n+\n+    DependencyNode lastElement = dependencyPath.get(dependencyPath.size() - 1);\n+    return new ArtifactProblem(\n+        Type.UNRESOLVABLE_ARTIFACT, lastElement.getArtifact(), dependencyPath, ImmutableList.of());\n+  }\n+\n+  /**\n+   * Returns the problem describing the artifact is not resolvable by Maven. This method is used", "originalCommit": "1fd3e17a7b7a52e7da3b12e506101880f55dbd42", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAwNjk3NQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1096#discussion_r365006975", "bodyText": "Updated in UnresolvableArtifactProblem.", "author": "suztomo", "createdAt": "2020-01-09T23:17:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk3ODcxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk3ODg4NA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1096#discussion_r364978884", "bodyText": "This sounds like a run on sentence.", "author": "elharo", "createdAt": "2020-01-09T21:55:27Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/ArtifactProblem.java", "diffHunk": "@@ -0,0 +1,126 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.google.cloud.tools.opensource.dependencies;\n+\n+import static com.google.common.base.Preconditions.checkArgument;\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import com.google.common.collect.ImmutableList;\n+import java.util.List;\n+import javax.annotation.Nullable;\n+import org.eclipse.aether.artifact.Artifact;\n+import org.eclipse.aether.graph.DependencyNode;\n+\n+/** Problem in a Maven artifact. */\n+public final class ArtifactProblem {\n+\n+  /** The Maven artifact that has the problem. */\n+  private final Artifact artifact;\n+\n+  /** The type of the problem in the artifact. */\n+  private final Type type;\n+\n+  /**\n+   * The dependency path to the artifact from the root of the dependency tree. An empty list if the\n+   * path is unknown.\n+   */\n+  private final ImmutableList<DependencyNode> dependencyPath;\n+\n+  /**\n+   * The list of invalid class files if type is {@link Type#INVALID_CLASS_FILE}; otherwise an empty\n+   * list.\n+   */\n+  private final ImmutableList<String> classFileNames;\n+\n+  /**\n+   * Returns the problem describing the artifact at the leaf of {@code dependencyPath} is not", "originalCommit": "1fd3e17a7b7a52e7da3b12e506101880f55dbd42", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAwNjg4Mg==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1096#discussion_r365006882", "bodyText": "Fixed in UnresolvableArtifactProblem.", "author": "suztomo", "createdAt": "2020-01-09T23:17:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk3ODg4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk3OTIyNw==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1096#discussion_r364979227", "bodyText": "All these static methods could be constructors in subclasses.", "author": "elharo", "createdAt": "2020-01-09T21:56:20Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/ArtifactProblem.java", "diffHunk": "@@ -0,0 +1,126 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.google.cloud.tools.opensource.dependencies;\n+\n+import static com.google.common.base.Preconditions.checkArgument;\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import com.google.common.collect.ImmutableList;\n+import java.util.List;\n+import javax.annotation.Nullable;\n+import org.eclipse.aether.artifact.Artifact;\n+import org.eclipse.aether.graph.DependencyNode;\n+\n+/** Problem in a Maven artifact. */\n+public final class ArtifactProblem {\n+\n+  /** The Maven artifact that has the problem. */\n+  private final Artifact artifact;\n+\n+  /** The type of the problem in the artifact. */\n+  private final Type type;\n+\n+  /**\n+   * The dependency path to the artifact from the root of the dependency tree. An empty list if the\n+   * path is unknown.\n+   */\n+  private final ImmutableList<DependencyNode> dependencyPath;\n+\n+  /**\n+   * The list of invalid class files if type is {@link Type#INVALID_CLASS_FILE}; otherwise an empty\n+   * list.\n+   */\n+  private final ImmutableList<String> classFileNames;\n+\n+  /**\n+   * Returns the problem describing the artifact at the leaf of {@code dependencyPath} is not\n+   * resolvable by Maven.\n+   */\n+  public static ArtifactProblem unresolvableArtifact(List<DependencyNode> dependencyPath) {\n+    checkNotNull(dependencyPath);\n+    checkArgument(dependencyPath.size() > 0, \"dependencyPath should not be empty\");\n+\n+    DependencyNode lastElement = dependencyPath.get(dependencyPath.size() - 1);\n+    return new ArtifactProblem(\n+        Type.UNRESOLVABLE_ARTIFACT, lastElement.getArtifact(), dependencyPath, ImmutableList.of());\n+  }\n+\n+  /**\n+   * Returns the problem describing the artifact is not resolvable by Maven. This method is used\n+   * when the dependency path to the artifact in the dependency tree is unknown.\n+   */\n+  public static ArtifactProblem unresolvableArtifactUnknownDependencyPath(Artifact artifact) {\n+    return new ArtifactProblem(\n+        Type.UNRESOLVABLE_ARTIFACT, artifact, ImmutableList.of(), ImmutableList.of());\n+  }\n+\n+  /** Returns the problems describing the artifact contains invalid class files. */\n+  public static ArtifactProblem invalidClassFileInArtifact(", "originalCommit": "1fd3e17a7b7a52e7da3b12e506101880f55dbd42", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAwNzAxMw==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1096#discussion_r365007013", "bodyText": "They are now subclasses.", "author": "suztomo", "createdAt": "2020-01-09T23:18:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk3OTIyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk3OTU4NA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1096#discussion_r364979584", "bodyText": "This switch strongly suggests this class really does need multiple subclasses.", "author": "elharo", "createdAt": "2020-01-09T21:57:08Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/ArtifactProblem.java", "diffHunk": "@@ -0,0 +1,126 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.google.cloud.tools.opensource.dependencies;\n+\n+import static com.google.common.base.Preconditions.checkArgument;\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import com.google.common.collect.ImmutableList;\n+import java.util.List;\n+import javax.annotation.Nullable;\n+import org.eclipse.aether.artifact.Artifact;\n+import org.eclipse.aether.graph.DependencyNode;\n+\n+/** Problem in a Maven artifact. */\n+public final class ArtifactProblem {\n+\n+  /** The Maven artifact that has the problem. */\n+  private final Artifact artifact;\n+\n+  /** The type of the problem in the artifact. */\n+  private final Type type;\n+\n+  /**\n+   * The dependency path to the artifact from the root of the dependency tree. An empty list if the\n+   * path is unknown.\n+   */\n+  private final ImmutableList<DependencyNode> dependencyPath;\n+\n+  /**\n+   * The list of invalid class files if type is {@link Type#INVALID_CLASS_FILE}; otherwise an empty\n+   * list.\n+   */\n+  private final ImmutableList<String> classFileNames;\n+\n+  /**\n+   * Returns the problem describing the artifact at the leaf of {@code dependencyPath} is not\n+   * resolvable by Maven.\n+   */\n+  public static ArtifactProblem unresolvableArtifact(List<DependencyNode> dependencyPath) {\n+    checkNotNull(dependencyPath);\n+    checkArgument(dependencyPath.size() > 0, \"dependencyPath should not be empty\");\n+\n+    DependencyNode lastElement = dependencyPath.get(dependencyPath.size() - 1);\n+    return new ArtifactProblem(\n+        Type.UNRESOLVABLE_ARTIFACT, lastElement.getArtifact(), dependencyPath, ImmutableList.of());\n+  }\n+\n+  /**\n+   * Returns the problem describing the artifact is not resolvable by Maven. This method is used\n+   * when the dependency path to the artifact in the dependency tree is unknown.\n+   */\n+  public static ArtifactProblem unresolvableArtifactUnknownDependencyPath(Artifact artifact) {\n+    return new ArtifactProblem(\n+        Type.UNRESOLVABLE_ARTIFACT, artifact, ImmutableList.of(), ImmutableList.of());\n+  }\n+\n+  /** Returns the problems describing the artifact contains invalid class files. */\n+  public static ArtifactProblem invalidClassFileInArtifact(\n+      List<DependencyNode> dependencyPath, List<String> classFileNames) {\n+    checkNotNull(dependencyPath);\n+    checkArgument(!dependencyPath.isEmpty(), \"dependencyPath should not be empty\");\n+\n+    DependencyNode lastElement = dependencyPath.get(dependencyPath.size() - 1);\n+    return new ArtifactProblem(\n+        Type.INVALID_CLASS_FILE, lastElement.getArtifact(), dependencyPath, classFileNames);\n+  }\n+\n+  private ArtifactProblem(\n+      Type type,\n+      Artifact artifact,\n+      @Nullable List<DependencyNode> dependencyPath,\n+      List<String> classFileNames) {\n+    this.type = checkNotNull(type);\n+    this.artifact = checkNotNull(artifact);\n+    this.dependencyPath = ImmutableList.copyOf(dependencyPath);\n+    this.classFileNames = ImmutableList.copyOf(classFileNames);\n+  }\n+\n+  private enum Type {\n+    /** When the JAR file of the artifact contains invalid class files. */\n+    INVALID_CLASS_FILE,\n+    /** When the artifact is unresolvable. */\n+    UNRESOLVABLE_ARTIFACT,\n+  }\n+\n+  @Override\n+  public String toString() {\n+    switch (type) {", "originalCommit": "1fd3e17a7b7a52e7da3b12e506101880f55dbd42", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAwNzI4OQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1096#discussion_r365007289", "bodyText": "The Type enum is removed in favor of InvalidClassFileProblem and UnresolvableArtifactProblem. They don't have switch statement.", "author": "suztomo", "createdAt": "2020-01-09T23:19:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk3OTU4NA=="}], "type": "inlineReview"}, {"oid": "5b6640a7020c1b1fca1f2e6e2f0a105486188bea", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/5b6640a7020c1b1fca1f2e6e2f0a105486188bea", "message": "Errors as subclasses", "committedDate": "2020-01-09T23:31:11Z", "type": "commit"}, {"oid": "4453555cdb989f2358428fa3f684f6e6054c6a73", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/4453555cdb989f2358428fa3f684f6e6054c6a73", "message": "Fixed test", "committedDate": "2020-01-10T01:43:02Z", "type": "commit"}, {"oid": "cb4993ffef141839aa90a20d5731e9e36d960049", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/cb4993ffef141839aa90a20d5731e9e36d960049", "message": "javadoc", "committedDate": "2020-01-10T01:45:52Z", "type": "commit"}, {"oid": "508df8a965efebf7165d745f25b734c7ba1a915c", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/508df8a965efebf7165d745f25b734c7ba1a915c", "message": "Fixed test", "committedDate": "2020-01-10T01:48:14Z", "type": "commit"}, {"oid": "028b702ce33de85b8bf74fbccdce4ce207e31893", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/028b702ce33de85b8bf74fbccdce4ce207e31893", "message": "final artifactProblems", "committedDate": "2020-01-10T01:50:16Z", "type": "commit"}, {"oid": "bc71a3bbdf7be731a883df7f9dfe41c906dc3d29", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/bc71a3bbdf7be731a883df7f9dfe41c906dc3d29", "message": "comment", "committedDate": "2020-01-10T01:57:23Z", "type": "commit"}, {"oid": "11db7c6763f9258435f50179b99f3251fbf5777c", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/11db7c6763f9258435f50179b99f3251fbf5777c", "message": "Should not -> cannot", "committedDate": "2020-01-10T02:00:41Z", "type": "commit"}, {"oid": "ba4f2162e17db76278bde1613c4ca932542a98cf", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/ba4f2162e17db76278bde1613c4ca932542a98cf", "message": "One line after copyright", "committedDate": "2020-01-10T02:31:13Z", "type": "commit"}]}