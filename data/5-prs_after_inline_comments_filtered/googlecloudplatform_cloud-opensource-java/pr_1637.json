{"pr_number": 1637, "pr_title": "The enforcer rule to pass repositories for artifact resolutions", "pr_createdAt": "2020-09-09T17:46:51Z", "pr_url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1637", "timeline": [{"oid": "f0432aa3204875eb871b80492942a4c3a0955070", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/f0432aa3204875eb871b80492942a4c3a0955070", "message": "Preparing test for #1609.\n\nThis fails because the BOM project cannot find the\nartifact.", "committedDate": "2020-09-09T14:42:07Z", "type": "commit"}, {"oid": "0afb0a5e4ff88a303ca3af477d9638031d9ca4e6", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/0afb0a5e4ff88a303ca3af477d9638031d9ca4e6", "message": "Test case", "committedDate": "2020-09-09T15:28:28Z", "type": "commit"}, {"oid": "44c58c2de3b2c561e855d3b8f87180f116d2e0f5", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/44c58c2de3b2c561e855d3b8f87180f116d2e0f5", "message": "Debug instruction", "committedDate": "2020-09-09T15:46:34Z", "type": "commit"}, {"oid": "0985e5500a8935d49d07b63f70a380ae24432bf9", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/0985e5500a8935d49d07b63f70a380ae24432bf9", "message": "RepositorySystemSession does not seem to remember\nrepositories.", "committedDate": "2020-09-09T16:17:22Z", "type": "commit"}, {"oid": "643bbda0cfc8fbd3937892a8571c8bf60d8786f0", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/643bbda0cfc8fbd3937892a8571c8bf60d8786f0", "message": "Passing MavenProject to resolve artifacts", "committedDate": "2020-09-09T17:45:01Z", "type": "commit"}, {"oid": "4128abd6a0214d4c75ace4d71a17c4eba214806f", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/4128abd6a0214d4c75ace4d71a17c4eba214806f", "message": "Javadoc", "committedDate": "2020-09-09T17:54:33Z", "type": "commit"}, {"oid": "ffdbc8e73122c5830c46cc51669fc43000366216", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/ffdbc8e73122c5830c46cc51669fc43000366216", "message": "cleaning up javadoc", "committedDate": "2020-09-09T18:01:25Z", "type": "commit"}, {"oid": "647bf96e509da0ee11aeeea182e85f3cbabb026a", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/647bf96e509da0ee11aeeea182e85f3cbabb026a", "message": "Comment on failure", "committedDate": "2020-09-09T18:08:48Z", "type": "commit"}, {"oid": "b92746b53f04b3c56db38b141b0a4ba77b4ec7e4", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/b92746b53f04b3c56db38b141b0a4ba77b4ec7e4", "message": "Merge remote-tracking branch 'origin/master' into spring_repository", "committedDate": "2020-09-09T18:09:11Z", "type": "commit"}, {"oid": "b0ce0b1019e79ea4d02a9917819b4fc80bba0cae", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/b0ce0b1019e79ea4d02a9917819b4fc80bba0cae", "message": "Fixed wrong change", "committedDate": "2020-09-09T18:13:46Z", "type": "commit"}, {"oid": "5f5c778316f551886acb70019820e7557713606a", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/5f5c778316f551886acb70019820e7557713606a", "message": "Comma for when clause", "committedDate": "2020-09-09T20:43:46Z", "type": "commit"}, {"oid": "211a248adf3ce0af07df34d4bcd914c2e55c9222", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/211a248adf3ce0af07df34d4bcd914c2e55c9222", "message": "Fixed test", "committedDate": "2020-09-09T20:53:30Z", "type": "commit"}, {"oid": "83517c68b2892b0b3a3d1b824e4ee6c1bf9e959b", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/83517c68b2892b0b3a3d1b824e4ee6c1bf9e959b", "message": "No need to pass MavenProject\n\nDependencyGraphBuilder can take list of repository URLs\nso that it uses them when building graphs.", "committedDate": "2020-09-09T21:09:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgxMzcyMA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1637#discussion_r485813720", "bodyText": "This is public because the enforcer rule calls this method.", "author": "suztomo", "createdAt": "2020-09-09T18:02:43Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathBuilder.java", "diffHunk": "@@ -59,11 +61,31 @@ public ClassPathBuilder(DependencyGraphBuilder dependencyGraphBuilder) {\n    */\n   public ClassPathResult resolve(List<Artifact> artifacts, boolean full) {\n     // dependencyGraph holds multiple versions for one artifact key (groupId:artifactId)\n+    return resolve(artifacts, full, null);\n+  }\n+\n+  /**\n+   * Builds a classpath from the transitive dependency graph from {@code artifacts}. If {@code\n+   * mavenProject} is not null, it uses the project's settings to resolve the artifacts.\n+   *\n+   * <p>When there are multiple versions of an artifact in the dependency tree, the closest to the\n+   * root in breadth-first order is picked up. This \"pick closest\" strategy follows Maven's\n+   * dependency mediation.\n+   *\n+   * @param artifacts the first artifacts that appear in the classpath, in order\n+   * @param mavenProject Maven project configuration for the artifact resolution. Non-null iff it's\n+   *     called by the Maven enforcer rule.\n+   * @param full if true all optional dependencies and their transitive dependencies are included.\n+   *     If false, optional dependencies are not included.\n+   */\n+  public ClassPathResult resolve(", "originalCommit": "ffdbc8e73122c5830c46cc51669fc43000366216", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgxMzkxNg==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1637#discussion_r485813916", "bodyText": "This is the motivation of this PR.", "author": "suztomo", "createdAt": "2020-09-09T18:03:05Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -108,8 +112,15 @@ private DependencyNode resolveCompileTimeDependencies(\n     } else {\n       collectRequest.setDependencies(dependencyList);\n     }\n-    for (RemoteRepository repository : repositories) {\n-      collectRequest.addRepository(repository);\n+    if (mavenProject != null) {\n+      // Read the `repositories` section in the pom.xml when the Maven enforcer rule is running\n+      for (RemoteRepository repository : mavenProject.getRemoteProjectRepositories()) {\n+        collectRequest.addRepository(repository);\n+      }", "originalCommit": "ffdbc8e73122c5830c46cc51669fc43000366216", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgxNDQzOA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1637#discussion_r485814438", "bodyText": "i moved these \"In the event of I/O errors\" sentences out from the description of the resulting dependency graphs.", "author": "suztomo", "createdAt": "2020-09-09T18:04:04Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -122,49 +133,97 @@ private DependencyNode resolveCompileTimeDependencies(\n \n   /**\n    * Finds the full compile time, transitive dependency graph including duplicates, conflicting\n-   * versions, and provided and optional dependencies. In the event of I/O errors, missing\n-   * artifacts, and other problems, it can return an incomplete graph. Each node's dependencies are\n-   * resolved recursively. The scope of a dependency does not affect the scope of its children's\n+   * versions, and provided and optional dependencies. Each node's dependencies are resolved\n+   * recursively. The scope of a dependency does not affect the scope of its children's\n    * dependencies. Provided and optional dependencies are not treated differently than any other\n    * dependency.\n    *\n+   * <p>In the event of I/O errors, missing artifacts, and other problems, it can return an\n+   * incomplete graph.", "originalCommit": "ffdbc8e73122c5830c46cc51669fc43000366216", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgxNTI0NA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1637#discussion_r485815244", "bodyText": "The description of the resulting dependency graph is moved to the 1st paragraph of this Javadoc, keeping \"In the event of I/O errors, ...\" sentence to the bottom.", "author": "suztomo", "createdAt": "2020-09-09T18:05:31Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -122,49 +133,97 @@ private DependencyNode resolveCompileTimeDependencies(\n \n   /**\n    * Finds the full compile time, transitive dependency graph including duplicates, conflicting\n-   * versions, and provided and optional dependencies. In the event of I/O errors, missing\n-   * artifacts, and other problems, it can return an incomplete graph. Each node's dependencies are\n-   * resolved recursively. The scope of a dependency does not affect the scope of its children's\n+   * versions, and provided and optional dependencies. Each node's dependencies are resolved\n+   * recursively. The scope of a dependency does not affect the scope of its children's\n    * dependencies. Provided and optional dependencies are not treated differently than any other\n    * dependency.\n    *\n+   * <p>In the event of I/O errors, missing artifacts, and other problems, it can return an\n+   * incomplete graph.\n+   *\n    * @param artifacts Maven artifacts whose dependencies to retrieve\n    * @return dependency graph representing the tree of Maven artifacts\n    */\n   public DependencyGraph buildFullDependencyGraph(List<Artifact> artifacts) {\n+    return buildFullDependencyGraph(artifacts, null);\n+  }\n+\n+  /**\n+   * Finds the full compile time, transitive dependency graph including duplicates, conflicting\n+   * versions, and provided and optional dependencies. Each node's dependencies are resolved\n+   * recursively. The scope of a dependency does not affect the scope of its children's\n+   * dependencies. Provided and optional dependencies are not treated differently than any other\n+   * dependency.\n+   *\n+   * <p>It uses Maven project configuration for the artifact resolution if {@code mavenProject} is\n+   * not null.\n+   *\n+   * <p>In the event of I/O errors, missing artifacts, and other problems, it can return an\n+   * incomplete graph.\n+   *\n+   * @param artifacts Maven artifacts whose dependencies to retrieve\n+   * @param mavenProject Maven project configuration for the artifact resolution\n+   * @return dependency graph representing the tree of Maven artifacts\n+   */\n+  public DependencyGraph buildFullDependencyGraph(\n+      List<Artifact> artifacts, @Nullable MavenProject mavenProject) {\n     ImmutableList<DependencyNode> dependencyNodes =\n         artifacts.stream().map(DefaultDependencyNode::new).collect(toImmutableList());\n     DefaultRepositorySystemSession session = RepositoryUtility.newSessionForFullDependency(system);\n-    return buildDependencyGraph(dependencyNodes, session);\n+    return buildDependencyGraph(dependencyNodes, session, mavenProject);\n   }\n-  \n+\n   /**\n    * Finds the full compile time, transitive dependency graph including duplicates and conflicting\n-   * versions, but not optional dependencies. In the event of I/O errors, missing\n-   * artifacts, and other problems, it can return an incomplete graph. Each node's dependencies are\n-   * resolved recursively. The scope of a dependency does not affect the scope of its children's\n-   * dependencies.\n+   * versions, but not optional dependencies. Each node's dependencies are resolved recursively. The\n+   * scope of a dependency does not affect the scope of its children's dependencies.\n+   *\n+   * <p>It uses Maven project configuration for the artifact resolution if {@code mavenProject} is\n+   * not null.\n+   *\n+   * <p>In the event of I/O errors, missing artifacts, and other problems, it can return an\n+   * incomplete graph.\n    *\n    * @param artifacts Maven artifacts whose dependencies to retrieve\n+   * @param mavenProject Maven project configuration for the artifact resolution\n    * @return dependency graph representing the tree of Maven artifacts\n    */\n-  public DependencyGraph buildVerboseDependencyGraph(List<Artifact> artifacts) {\n+  public DependencyGraph buildVerboseDependencyGraph(\n+      List<Artifact> artifacts, @Nullable MavenProject mavenProject) {\n     ImmutableList<DependencyNode> dependencyNodes =\n         artifacts.stream().map(DefaultDependencyNode::new).collect(toImmutableList());\n-    DefaultRepositorySystemSession session =\n-        RepositoryUtility.newSessionForVerboseListDependency(system);\n-    return buildDependencyGraph(dependencyNodes, session);\n+    DefaultRepositorySystemSession session = RepositoryUtility.newSessionForFullDependency(system);\n+    return buildDependencyGraph(dependencyNodes, session, mavenProject);\n   }\n-  \n+\n+  /**\n+   * Finds the full compile time, transitive dependency graph including duplicates and conflicting\n+   * versions, but not optional dependencies. Each node's dependencies are resolved recursively. The\n+   * scope of a dependency does not affect the scope of its children's dependencies.\n+   *\n+   * <p>In the event of I/O errors, missing artifacts, and other problems, it can return an\n+   * incomplete graph.\n+   *\n+   * @param artifacts Maven artifacts whose dependencies to retrieve\n+   * @return dependency graph representing the tree of Maven artifacts\n+   */\n+  public DependencyGraph buildVerboseDependencyGraph(List<Artifact> artifacts) {\n+    return buildVerboseDependencyGraph(artifacts, null);\n+  }\n+\n   /**\n    * Finds the full compile time, transitive dependency graph including conflicting versions and\n    * provided dependencies. This includes direct optional dependencies of the root node but not\n-   * optional dependencies of transitive dependencies.\n+   * optional dependencies of transitive dependencies. Each node's dependencies are resolved\n+   * recursively. The scope of a dependency does not affect the scope of its children's\n+   * dependencies. Provided and optional dependencies are not treated differently than any other\n+   * dependency.\n+   *\n+   * <p>It uses Maven project configuration for the artifact resolution if {@code mavenProject} is\n+   * not null.\n    *\n    * <p>In the event of I/O errors, missing artifacts, and other problems, it can return an\n-   * incomplete graph. Each node's dependencies are resolved recursively. The scope of a dependency\n-   * does not affect the scope of its children's dependencies. Provided and optional dependencies\n-   * are not treated differently than any other dependency.\n+   * incomplete graph.", "originalCommit": "ffdbc8e73122c5830c46cc51669fc43000366216", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTkyNDg0Mg==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1637#discussion_r485924842", "bodyText": "We can configure DependencyGraphBuilder to use repositories. (I was forgetting about this feature when I passed MavenProject)", "author": "suztomo", "createdAt": "2020-09-09T21:12:24Z", "path": "enforcer-rules/src/main/java/com/google/cloud/tools/dependencies/enforcer/LinkageCheckerRule.java", "diffHunk": "@@ -142,6 +144,13 @@ public void execute(@Nonnull EnforcerRuleHelper helper) throws EnforcerRuleExcep\n       MojoExecution execution = (MojoExecution) helper.evaluate(\"${mojoExecution}\");\n       RepositorySystemSession repositorySystemSession = session.getRepositorySession();\n \n+      ImmutableList<String> repositoryUrls =\n+          project.getRemoteProjectRepositories().stream()\n+              .map(RemoteRepository::getUrl)\n+              .collect(toImmutableList());\n+      DependencyGraphBuilder dependencyGraphBuilder = new DependencyGraphBuilder(repositoryUrls);\n+      classPathBuilder = new ClassPathBuilder(dependencyGraphBuilder);", "originalCommit": "83517c68b2892b0b3a3d1b824e4ee6c1bf9e959b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "82823fb2a41b0169590e20b81d7caa13f4860b70", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/82823fb2a41b0169590e20b81d7caa13f4860b70", "message": "Updating correct Maven Central repository in test", "committedDate": "2020-09-09T22:16:31Z", "type": "commit"}]}