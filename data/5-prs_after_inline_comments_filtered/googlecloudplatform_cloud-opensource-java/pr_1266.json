{"pr_number": 1266, "pr_title": "remove deprecated class", "pr_createdAt": "2020-03-03T12:35:54Z", "pr_url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1266", "timeline": [{"oid": "8b286e724940fa2364323efbad3beaa33435f048", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/8b286e724940fa2364323efbad3beaa33435f048", "message": "remove deprecated class", "committedDate": "2020-03-03T12:34:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzAwNzQ4MQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1266#discussion_r387007481", "bodyText": "I feel weird that the function return type is different from the super class.  http://maven.apache.org/ref/3.6.3/maven-model-builder/apidocs/org/apache/maven/model/resolution/ModelResolver.html#resolveModel-java.lang.String-java.lang.String-java.lang.String-\nModelSource resolveModel(String groupId,\n                         String artifactId,\n                         String version)\n                  throws UnresolvableModelException\n\nShouldn't this be fixed at org.apache.maven.model.resolution.ModelResolver?", "author": "suztomo", "createdAt": "2020-03-03T13:09:57Z", "path": "linkage-monitor/src/main/java/com/google/cloud/tools/dependencies/linkagemonitor/VersionSubstitutingModelResolver.java", "diffHunk": "@@ -68,16 +68,16 @@\n   }\n \n   /**\n-   * Returns model source for {@code groupId:artifactId:version}. The version is substituted if\n-   * {@link #versionSubstitution} contains the versionless coordinates ({@code groupId:artifactId})\n-   * in its keys.\n+   * Returns a file model source for {@code groupId:artifactId:version}.\n+   * The version is substituted if {@link #versionSubstitution} contains the\n+   * versionless coordinates ({@code groupId:artifactId}) in its keys.\n    */\n   @Override\n-  public ModelSource resolveModel(String groupId, String artifactId, String version)\n+  public ModelSource2 resolveModel(String groupId, String artifactId, String version)", "originalCommit": "8b286e724940fa2364323efbad3beaa33435f048", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzAzMjg1NA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1266#discussion_r387032854", "bodyText": "Possibly, though it might need to be that way for backwards compatibility.\nThis is a covariant return type introduced in Java 5. It still fulfills the contract of the superclass/superinterface .", "author": "elharo", "createdAt": "2020-03-03T13:54:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzAwNzQ4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzAzMzQ4Mg==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1266#discussion_r387033482", "bodyText": "This case was return value type, which is not used in method lookup. But what if there\u2019s an argument of ModelSource.", "author": "suztomo", "createdAt": "2020-03-03T13:55:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzAwNzQ4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzAzNzE1MQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1266#discussion_r387037151", "bodyText": "covariant\n\nRight. That\u2019s the difference from the case of the arguments. Thank you.", "author": "suztomo", "createdAt": "2020-03-03T14:01:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzAwNzQ4MQ=="}], "type": "inlineReview"}]}