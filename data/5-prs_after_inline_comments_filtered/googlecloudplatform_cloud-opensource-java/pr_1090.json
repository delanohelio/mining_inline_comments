{"pr_number": 1090, "pr_title": "Skip corrupt class file in JAR rather than stopping", "pr_createdAt": "2020-01-07T18:35:41Z", "pr_url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1090", "timeline": [{"oid": "e3eddb01f5f25fc36ab4da5602a488cc39a5e354", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/e3eddb01f5f25fc36ab4da5602a488cc39a5e354", "message": "Fixes #1048", "committedDate": "2020-01-07T18:25:13Z", "type": "commit"}, {"oid": "a1f22e37b168faa520d5e847781d3ffa7205b885", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/a1f22e37b168faa520d5e847781d3ffa7205b885", "message": "One error per JAR file", "committedDate": "2020-01-07T18:34:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg5ODM5Mw==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1090#discussion_r363898393", "bodyText": "so we'll still die on these sorts of corrupt jar files? Is that what we want? Perhaps whoever calls this method should handle the IOExceptions that arise here.", "author": "elharo", "createdAt": "2020-01-07T18:56:06Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassDumper.java", "diffHunk": "@@ -395,7 +400,16 @@ Path findClassLocation(String className) {\n         javaClasses.add(javaClass);\n       } catch (ClassNotFoundException ex) {\n         // We couldn't find the class in the jar file where we found it.\n-        throw new IOException(\"Corrupt jar file \" + jar + \"; could not load \" + classFileName, ex);\n+        Throwable cause = ex.getCause();\n+        if (cause != null && cause instanceof IOException) {\n+          // Skip unexpected files (such as a lock file) included in JAR file\n+          // https://github.com/GoogleCloudPlatform/cloud-opensource-java/issues/1048 was caused\n+          // by an IOException\n+          corruptedClassFileNames.add(classFileName);\n+        } else {\n+          throw new IOException(\n+              \"Corrupt jar file \" + jar + \"; could not load \" + classFileName, ex);", "originalCommit": "a1f22e37b168faa520d5e847781d3ffa7205b885", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzkyNjIzMQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1090#discussion_r363926231", "bodyText": "That's a nice idea. Now findSymbolReferences catches the exception.", "author": "suztomo", "createdAt": "2020-01-07T20:02:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg5ODM5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzkzMDkyNA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1090#discussion_r363930924", "bodyText": "I found the problem of catching IOException at the caller; it would skip all valid classes in the JAR file.", "author": "suztomo", "createdAt": "2020-01-07T20:14:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg5ODM5Mw=="}], "type": "inlineReview"}, {"oid": "7ada8f63154133e8bee16eefbf551ef7808ed6b5", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/7ada8f63154133e8bee16eefbf551ef7808ed6b5", "message": "findSymbolReferences catches IOException", "committedDate": "2020-01-07T20:05:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzkyODY0MA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1090#discussion_r363928640", "bodyText": "This was exceeding 100 char limit.", "author": "suztomo", "createdAt": "2020-01-07T20:08:00Z", "path": "dependencies/src/test/java/com/google/cloud/tools/opensource/classpath/ClassDumperTest.java", "diffHunk": "@@ -313,7 +314,8 @@ public void testIsUnusedClassSymbolReference_classSymbolReferenceNotFound()\n             ImmutableList.of(absolutePathOfResource(\"testdata/conscrypt-openjdk-uber-1.4.2.jar\")));\n \n     try {\n-      classDumper.isUnusedClassSymbolReference(\"org.conscrypt.Conscrypt\", new ClassSymbol(\"dummy.NoSuchClass\"));", "originalCommit": "7ada8f63154133e8bee16eefbf551ef7808ed6b5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ffa1e105c8177b20d2dab34d6040a145b8283f78", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/ffa1e105c8177b20d2dab34d6040a145b8283f78", "message": "listClasses should load valid classes", "committedDate": "2020-01-07T20:19:57Z", "type": "commit"}, {"oid": "0c1b1365835c23ba5c8c22318d20a131089b1e31", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/0c1b1365835c23ba5c8c22318d20a131089b1e31", "message": "format", "committedDate": "2020-01-07T20:21:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzkzNDE4NQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1090#discussion_r363934185", "bodyText": "This asserts that ClassDumper loads valid class files from the JAR file even if some of the content are invalid files.", "author": "suztomo", "createdAt": "2020-01-07T20:22:49Z", "path": "dependencies/src/test/java/com/google/cloud/tools/opensource/classpath/ClassDumperTest.java", "diffHunk": "@@ -364,4 +366,26 @@ public void testFindSymbolReferences_overLappingClass() throws IOException, Repo\n             new ClassFile(\n                 sisuGuicePath, \"com.google.inject.internal.InjectorImpl$BindingsMultimap\"));\n   }\n+\n+  @Test\n+  public void testListClasses_unexpectedNonClassFile() throws RepositoryException, IOException {\n+    // com.amazonaws:amazon-kinesis-client:1.13.0 contains an unexpected lock file\n+    // /unison/com/e007f77498fd27177e2ea931a06dcf50/unison/tmp/amazonaws/services/kinesis/leases/impl/LeaseTaker.class\n+    // https://github.com/awslabs/amazon-kinesis-client/issues/654\n+    Artifact kinesisClient = new DefaultArtifact(\"com.amazonaws:amazon-kinesis-client:1.13.0\");\n+    List<Path> paths = ClassPathBuilder.artifactsToClasspath(ImmutableList.of(kinesisClient));\n+    ClassDumper classDumper = ClassDumper.create(paths);\n+    Path kinesisJar = paths.get(0);\n+\n+    // This should not raise IOException\n+    SymbolReferenceMaps symbolReferences = classDumper.findSymbolReferences();\n+    assertNotNull(symbolReferences);\n+\n+    Truth.assertWithMessage(\"Invalid files should not stop loading valid class files\")\n+        .that(symbolReferences.getClassToClassSymbols().keySet())\n+        .comparingElementsUsing(\n+            Correspondence.transforming(\n+                (ClassFile classFile) -> classFile.getJar(), \"is in the JAR file\"))\n+        .contains(kinesisJar);", "originalCommit": "ffa1e105c8177b20d2dab34d6040a145b8283f78", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzkzMzk2Nw==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1090#discussion_r363933967", "bodyText": "could we bubble the ClassFormatException instead? This isn't really an IO error.", "author": "elharo", "createdAt": "2020-01-07T20:22:12Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassDumper.java", "diffHunk": "@@ -395,7 +400,7 @@ Path findClassLocation(String className) {\n         javaClasses.add(javaClass);\n       } catch (ClassNotFoundException ex) {\n         // We couldn't find the class in the jar file where we found it.\n-        throw new IOException(\"Corrupt jar file \" + jar + \"; could not load \" + classFileName, ex);\n+        corruptedClassFileNames.add(classFileName);\n       } catch (ClassFormatException ex) {\n         // We couldn't load the class from the jar file where we found it.\n         throw new IOException(", "originalCommit": "ffa1e105c8177b20d2dab34d6040a145b8283f78", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzkzNTc5NQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1090#discussion_r363935795", "bodyText": "Yes, removed the catch clause.", "author": "suztomo", "createdAt": "2020-01-07T20:27:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzkzMzk2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI5MTc1Ng==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1090#discussion_r370291756", "bodyText": "It turned out that this change causes #1142.", "author": "suztomo", "createdAt": "2020-01-23T18:46:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzkzMzk2Nw=="}], "type": "inlineReview"}, {"oid": "eaca555f2a543e1afaeec9f6abcfb4dcc238a06e", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/eaca555f2a543e1afaeec9f6abcfb4dcc238a06e", "message": "Bubble ClassFormatException", "committedDate": "2020-01-07T20:27:15Z", "type": "commit"}]}