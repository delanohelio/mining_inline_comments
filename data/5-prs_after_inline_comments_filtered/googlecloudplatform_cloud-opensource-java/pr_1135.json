{"pr_number": 1135, "pr_title": "LinkageCheckerMain to show artifact problems if any", "pr_createdAt": "2020-01-16T19:24:57Z", "pr_url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1135", "timeline": [{"oid": "db15debebd8951a0639ad8c7f6ff1da85eb1732b", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/db15debebd8951a0639ad8c7f6ff1da85eb1732b", "message": "ClassPathResult", "committedDate": "2020-01-16T18:04:29Z", "type": "commit"}, {"oid": "a2dc1f7d9cd2ff0950b2c4d01e5b80c2018d52f5", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/a2dc1f7d9cd2ff0950b2c4d01e5b80c2018d52f5", "message": "Removed resolveClassPath", "committedDate": "2020-01-16T19:16:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzYwNTU2Mw==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1135#discussion_r367605563", "bodyText": "This method is removed, in favor of classPathResult.getClassPath()", "author": "suztomo", "createdAt": "2020-01-16T19:25:28Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathBuilder.java", "diffHunk": "@@ -52,44 +52,19 @@ public ClassPathBuilder(DependencyGraphBuilder dependencyGraphBuilder) {\n   }\n \n   /**\n-   * Finds jar file paths for Maven artifacts and their transitive dependencies, using Maven's\n-   * dependency mediation strategy.\n-   *\n-   * @param artifacts Maven artifacts to check\n-   * @return list of absolute paths to jar files\n-   * @throws RepositoryException when there is a problem retrieving jar files\n-   */\n-  public ImmutableList<Path> artifactsToClasspath(List<Artifact> artifacts)", "originalCommit": "a2dc1f7d9cd2ff0950b2c4d01e5b80c2018d52f5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzYwNjA4MA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1135#discussion_r367606080", "bodyText": "There were many typos to use grpcArtifact variable name for artifacts not related to grpc.", "author": "suztomo", "createdAt": "2020-01-16T19:26:38Z", "path": "dependencies/src/test/java/com/google/cloud/tools/opensource/classpath/ClassDumperTest.java", "diffHunk": "@@ -336,8 +334,7 @@ public void testIsUnusedClassSymbolReference_multiReleaseJar()\n       throws IOException, RepositoryException {\n     // org.graalvm.libgraal.LibGraal class has different implementations between Java 8 and 11 via\n     // Multi-release JAR of this artifact.\n-    Artifact grpcArtifact = new DefaultArtifact(\"org.graalvm.compiler:compiler:19.0.0\");", "originalCommit": "a2dc1f7d9cd2ff0950b2c4d01e5b80c2018d52f5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzYwNzA5Ng==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1135#discussion_r367607096", "bodyText": "This is the goal of this PR. LinkageCheckerMain prints artifact problems if any.", "author": "suztomo", "createdAt": "2020-01-16T19:28:51Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageCheckerMain.java", "diffHunk": "@@ -73,6 +81,10 @@ public static void main(String[] arguments)\n     }\n \n     System.out.println(SymbolProblem.formatSymbolProblems(symbolProblems));\n-  }\n \n+    if (!artifactProblems.isEmpty()) {\n+      System.out.println(\"\\n\");\n+      System.out.println(ArtifactProblem.formatProblems(artifactProblems));", "originalCommit": "a2dc1f7d9cd2ff0950b2c4d01e5b80c2018d52f5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzYwNzQwMg==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1135#discussion_r367607402", "bodyText": "I still think we're missing an abstraction here. We have problems of which there are several subtypes including missing artifacts and linkage errors. The linkage errors we don't have a class for. Instead we're storing them as an entry in the multimap.", "author": "elharo", "createdAt": "2020-01-16T19:29:30Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathResult.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.opensource.classpath;\n+\n+import com.google.cloud.tools.opensource.dependencies.DependencyPath;\n+import com.google.cloud.tools.opensource.dependencies.UnresolvableArtifactProblem;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableListMultimap;\n+import com.google.common.collect.LinkedListMultimap;\n+import java.nio.file.Path;\n+\n+/** Result of class path resolution with {@link UnresolvableArtifactProblem}s if any. */\n+public final class ClassPathResult {\n+\n+  private final ImmutableList<Path> classPath;\n+  private final ImmutableListMultimap<Path, DependencyPath> dependencyPaths;", "originalCommit": "a2dc1f7d9cd2ff0950b2c4d01e5b80c2018d52f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI1NzUxOQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1135#discussion_r369257519", "bodyText": "Ping", "author": "elharo", "createdAt": "2020-01-21T21:40:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzYwNzQwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI3NTI4NA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1135#discussion_r369275284", "bodyText": "This multimap (ImmutableListMultimap<Path, DependencyPath> dependencyPaths) is not SymbolProblems or ArtifactProblems. This is dependency path to Maven artifacts.\nFor a better representation of linkage errors, I had created an issue #1083. This PR does not take care of this.", "author": "suztomo", "createdAt": "2020-01-21T22:22:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzYwNzQwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYwNDE0MA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1135#discussion_r369604140", "bodyText": "#1083 is about the output format. My question is about the data structures we're using in the code itself.", "author": "elharo", "createdAt": "2020-01-22T14:49:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzYwNzQwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYxODAyMg==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1135#discussion_r369618022", "bodyText": "Created #1139.\nThis line (line 30) is not linkage errors or artifact problems.", "author": "suztomo", "createdAt": "2020-01-22T15:12:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzYwNzQwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY1MzU0MA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1135#discussion_r367653540", "bodyText": "A side note: this multimap will help to implement #1095 \"Linkage Checker to report which version of a library has expected symbols\".", "author": "suztomo", "createdAt": "2020-01-16T21:15:41Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathResult.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.opensource.classpath;\n+\n+import com.google.cloud.tools.opensource.dependencies.DependencyPath;\n+import com.google.cloud.tools.opensource.dependencies.UnresolvableArtifactProblem;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableListMultimap;\n+import com.google.common.collect.LinkedListMultimap;\n+import java.nio.file.Path;\n+\n+/** Result of class path resolution with {@link UnresolvableArtifactProblem}s if any. */\n+public final class ClassPathResult {\n+\n+  private final ImmutableList<Path> classPath;\n+  private final ImmutableListMultimap<Path, DependencyPath> dependencyPaths;\n+  private final ImmutableList<UnresolvableArtifactProblem> artifactProblems;\n+\n+  ClassPathResult(\n+      LinkedListMultimap<Path, DependencyPath> dependencyPaths,\n+      Iterable<UnresolvableArtifactProblem> artifactProblems) {\n+    this.dependencyPaths = ImmutableListMultimap.copyOf(dependencyPaths);\n+    this.classPath = ImmutableList.copyOf(dependencyPaths.keySet());\n+    this.artifactProblems = ImmutableList.copyOf(artifactProblems);\n+  }\n+  ;\n+\n+  /** Returns the list of absolute paths to JAR files of resolved Maven artifacts. */\n+  public ImmutableList<Path> getClassPath() {\n+    return classPath;\n+  }\n+\n+  /**\n+   * Returns an ordered map of absolute paths of JAR files to one or more Maven dependency paths.\n+   *\n+   * <p>The keys of the returned map represent jar files of {@code artifacts} and their transitive\n+   * dependencies. The return value of {@link LinkedListMultimap#keySet()} preserves key iteration\n+   * order.\n+   *\n+   * <p>The values of the returned map for a key (jar file) represent the different Maven dependency\n+   * paths from {@code artifacts} to the Maven artifact of the jar file.\n+   */\n+  public ImmutableListMultimap<Path, DependencyPath> getDependencyPaths() {", "originalCommit": "a2dc1f7d9cd2ff0950b2c4d01e5b80c2018d52f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc0MTE4Ng==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1135#discussion_r369741186", "bodyText": "Why return a list here instead of letting this object offer a DependencyPath for an entry in the classpath? That is something like\npublic DependencyPath getDependencyPath(Path path)", "author": "elharo", "createdAt": "2020-01-22T18:54:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY1MzU0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTgxODQ2Ng==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1135#discussion_r369818466", "bodyText": "That's nice idea. Updated.", "author": "suztomo", "createdAt": "2020-01-22T21:40:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY1MzU0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI1NzM2NQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1135#discussion_r369257365", "bodyText": "ClasspathProblems?", "author": "elharo", "createdAt": "2020-01-21T21:40:12Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathResult.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.opensource.classpath;\n+\n+import com.google.cloud.tools.opensource.dependencies.DependencyPath;\n+import com.google.cloud.tools.opensource.dependencies.UnresolvableArtifactProblem;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableListMultimap;\n+import com.google.common.collect.LinkedListMultimap;\n+import java.nio.file.Path;\n+\n+/** Result of class path resolution with {@link UnresolvableArtifactProblem}s if any. */\n+public final class ClassPathResult {", "originalCommit": "a2dc1f7d9cd2ff0950b2c4d01e5b80c2018d52f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI3NDgzNg==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1135#discussion_r369274836", "bodyText": "This is not just problems but includes the result of class path resolution classPath.", "author": "suztomo", "createdAt": "2020-01-21T22:21:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI1NzM2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYxODUzOQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1135#discussion_r369618539", "bodyText": "This field holds artifact problems encountered while resolving a class path.", "author": "suztomo", "createdAt": "2020-01-22T15:13:12Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathResult.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.opensource.classpath;\n+\n+import com.google.cloud.tools.opensource.dependencies.DependencyPath;\n+import com.google.cloud.tools.opensource.dependencies.UnresolvableArtifactProblem;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableListMultimap;\n+import com.google.common.collect.LinkedListMultimap;\n+import java.nio.file.Path;\n+\n+/** Result of class path resolution with {@link UnresolvableArtifactProblem}s if any. */\n+public final class ClassPathResult {\n+\n+  private final ImmutableList<Path> classPath;\n+  private final ImmutableListMultimap<Path, DependencyPath> dependencyPaths;\n+  private final ImmutableList<UnresolvableArtifactProblem> artifactProblems;", "originalCommit": "a2dc1f7d9cd2ff0950b2c4d01e5b80c2018d52f5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4164e435fcab9b5fdf1f86c770a462d0509e9082", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/4164e435fcab9b5fdf1f86c770a462d0509e9082", "message": "Merge remote-tracking branch 'origin/master' into show_dependency_error", "committedDate": "2020-01-22T20:58:49Z", "type": "commit"}, {"oid": "30410ae55650b86b1f1bdebf1eeb1bd8e5a99493", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/30410ae55650b86b1f1bdebf1eeb1bd8e5a99493", "message": "Using ClassPathResult in favor of Multimap", "committedDate": "2020-01-22T21:34:49Z", "type": "commit"}, {"oid": "a205d16beecd25cc29c56f4e65996007cba6a7c5", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/a205d16beecd25cc29c56f4e65996007cba6a7c5", "message": "Merge branch 'master' into show_dependency_error", "committedDate": "2020-01-23T01:07:58Z", "type": "commit"}]}