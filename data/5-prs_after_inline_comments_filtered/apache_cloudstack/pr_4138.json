{"pr_number": 4138, "pr_title": "Fixed incorrect error message on invalid template type download", "pr_createdAt": "2020-06-10T09:27:33Z", "pr_url": "https://github.com/apache/cloudstack/pull/4138", "timeline": [{"oid": "9775dd57f3760facb79aaa6fdbefc0cfc4fce445", "url": "https://github.com/apache/cloudstack/commit/9775dd57f3760facb79aaa6fdbefc0cfc4fce445", "message": "Added a check for the original error message", "committedDate": "2020-06-10T08:27:11Z", "type": "commit"}, {"oid": "dabb83e4abab516cdab522936aff584f64feb83d", "url": "https://github.com/apache/cloudstack/commit/dabb83e4abab516cdab522936aff584f64feb83d", "message": "Added some cleanup", "committedDate": "2020-06-10T09:14:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA0MDE3Mw==", "url": "https://github.com/apache/cloudstack/pull/4138#discussion_r438040173", "bodyText": "errorString contains a single space initially. String.isEmpty returns (this.value.length == 0)\nso this is never happening.", "author": "DaanHoogland", "createdAt": "2020-06-10T11:04:16Z", "path": "core/src/main/java/com/cloud/storage/template/HttpTemplateDownloader.java", "diffHunk": "@@ -218,7 +218,10 @@ public long download(boolean resume, DownloadCompleteCallback callback) {\n             errorString = hte.getMessage();\n         } catch (IOException ioe) {\n             status = TemplateDownloader.Status.UNRECOVERABLE_ERROR; //probably a file write error?\n-            errorString = ioe.getMessage();\n+            // Let's not overwrite the original error message.\n+            if (errorString.isEmpty()){", "originalCommit": "dabb83e4abab516cdab522936aff584f64feb83d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA1Njk3OQ==", "url": "https://github.com/apache/cloudstack/pull/4138#discussion_r438056979", "bodyText": "You are correct @DaanHoogland, I have made the change.", "author": "Spaceman1984", "createdAt": "2020-06-10T11:38:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA0MDE3Mw=="}], "type": "inlineReview"}, {"oid": "4db5f192c1c265b41cccf9dc66559cbda158e716", "url": "https://github.com/apache/cloudstack/commit/4db5f192c1c265b41cccf9dc66559cbda158e716", "message": "Changed empty string check", "committedDate": "2020-06-10T11:36:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwNjE0Ng==", "url": "https://github.com/apache/cloudstack/pull/4138#discussion_r438706146", "bodyText": "i'd go for errorString.trim().isEmpty() to be honest (to be more defensive, but this should work as well. And it might be wise to alter the initialisation statement as well???", "author": "DaanHoogland", "createdAt": "2020-06-11T11:02:09Z", "path": "core/src/main/java/com/cloud/storage/template/HttpTemplateDownloader.java", "diffHunk": "@@ -219,7 +219,7 @@ public long download(boolean resume, DownloadCompleteCallback callback) {\n         } catch (IOException ioe) {\n             status = TemplateDownloader.Status.UNRECOVERABLE_ERROR; //probably a file write error?\n             // Let's not overwrite the original error message.\n-            if (errorString.isEmpty()){\n+            if (errorString.equals(\" \")){", "originalCommit": "4db5f192c1c265b41cccf9dc66559cbda158e716", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg3MDY2Mg==", "url": "https://github.com/apache/cloudstack/pull/4138#discussion_r442870662", "bodyText": "@DaanHoogland What if we get rid of the check altogether and append the error message to what was there already?", "author": "Spaceman1984", "createdAt": "2020-06-19T14:24:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwNjE0Ng=="}], "type": "inlineReview"}, {"oid": "c6ccb523040b90f69fdcee831f87b78f2da625b9", "url": "https://github.com/apache/cloudstack/commit/c6ccb523040b90f69fdcee831f87b78f2da625b9", "message": "Initialised errorString to null and added exception when format is invalid", "committedDate": "2020-06-23T09:16:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYxODY2OA==", "url": "https://github.com/apache/cloudstack/pull/4138#discussion_r444618668", "bodyText": "@Spaceman1984 this probably needs checking, what if the templates are OK for other secondary storages within the same zone; and across zones?", "author": "rhtyd", "createdAt": "2020-06-24T03:04:21Z", "path": "engine/storage/image/src/main/java/org/apache/cloudstack/storage/image/TemplateServiceImpl.java", "diffHunk": "@@ -489,6 +489,10 @@ public void handleTemplateSync(DataStore store) {\n                                     s_logger.info(\"Removing leftover template \" + uniqueName + \" entry from template store table\");\n                                     // remove those leftover entries\n                                     _vmTemplateStoreDao.remove(tmpltStore.getId());\n+                                    // remove from zones\n+                                    _vmTemplateZoneDao.deletePrimaryRecordsForTemplate(tmplt.getId());\n+                                    // remove template\n+                                    _templateDao.remove(tmplt.getId());", "originalCommit": "c6ccb523040b90f69fdcee831f87b78f2da625b9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDcwNjA4OA==", "url": "https://github.com/apache/cloudstack/pull/4138#discussion_r444706088", "bodyText": "I'll test with multiple secondary storages", "author": "Spaceman1984", "createdAt": "2020-06-24T07:44:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYxODY2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc4OTY0Mw==", "url": "https://github.com/apache/cloudstack/pull/4138#discussion_r444789643", "bodyText": "You are correct @rhtyd, this code removes the template if there is an error in any of the storages. I have reverted.", "author": "Spaceman1984", "createdAt": "2020-06-24T10:11:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYxODY2OA=="}], "type": "inlineReview"}, {"oid": "fdfe7e85cf4158ded47d7b7e9a2deac9ee9ec564", "url": "https://github.com/apache/cloudstack/commit/fdfe7e85cf4158ded47d7b7e9a2deac9ee9ec564", "message": "Reverting this change due to unintended side effects", "committedDate": "2020-06-24T10:09:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzYzNjUxOQ==", "url": "https://github.com/apache/cloudstack/pull/4138#discussion_r447636519", "bodyText": "Why not set it if errorString is null as below?", "author": "nvazquez", "createdAt": "2020-06-30T12:16:13Z", "path": "core/src/main/java/com/cloud/storage/template/HttpTemplateDownloader.java", "diffHunk": "@@ -218,7 +219,10 @@ public long download(boolean resume, DownloadCompleteCallback callback) {\n             errorString = hte.getMessage();", "originalCommit": "fdfe7e85cf4158ded47d7b7e9a2deac9ee9ec564", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc0MjAxNw==", "url": "https://github.com/apache/cloudstack/pull/4138#discussion_r447742017", "bodyText": "Why not set it if errorString is null as below?\n\nIt may be an easy code change, but then the scope of this issue will be greater, which will require more testing as well.", "author": "Spaceman1984", "createdAt": "2020-06-30T14:46:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzYzNjUxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzYzODU0MA==", "url": "https://github.com/apache/cloudstack/pull/4138#discussion_r447638540", "bodyText": "Minor format one: can you leave a space between the closing parenthesis and the opening brace?", "author": "nvazquez", "createdAt": "2020-06-30T12:19:46Z", "path": "core/src/main/java/com/cloud/storage/template/HttpTemplateDownloader.java", "diffHunk": "@@ -218,7 +219,10 @@ public long download(boolean resume, DownloadCompleteCallback callback) {\n             errorString = hte.getMessage();\n         } catch (IOException ioe) {\n             status = TemplateDownloader.Status.UNRECOVERABLE_ERROR; //probably a file write error?\n-            errorString = ioe.getMessage();\n+            // Let's not overwrite the original error message.\n+            if (errorString == null){", "originalCommit": "fdfe7e85cf4158ded47d7b7e9a2deac9ee9ec564", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "977335e2fad27fb52ddb5fb793c9afefb6224162", "url": "https://github.com/apache/cloudstack/commit/977335e2fad27fb52ddb5fb793c9afefb6224162", "message": "Formatting", "committedDate": "2020-07-03T14:43:55Z", "type": "commit"}, {"oid": "b77a929e16b69854e4948e4e5f08609236d0bf49", "url": "https://github.com/apache/cloudstack/commit/b77a929e16b69854e4948e4e5f08609236d0bf49", "message": "Removed executable flag from file", "committedDate": "2020-07-03T15:08:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMwMDI1NQ==", "url": "https://github.com/apache/cloudstack/pull/4138#discussion_r451300255", "bodyText": "@Spaceman1984 cc @nvazquez why are we not validating format now?", "author": "rhtyd", "createdAt": "2020-07-08T05:56:34Z", "path": "core/src/main/java/com/cloud/storage/template/HttpTemplateDownloader.java", "diffHunk": "@@ -243,7 +247,6 @@ private boolean copyBytes(File file, InputStream in, RandomAccessFile out) throw\n                 offset = writeBlock(bytes, out, block, offset);\n                 if (!verifyFormat.isVerifiedFormat() && (offset >= 1048576 || offset >= remoteSize)) { //let's check format after we get 1MB or full file\n                     verifyFormat.invoke();\n-                    if (verifyFormat.isInvalid()) return true;", "originalCommit": "b77a929e16b69854e4948e4e5f08609236d0bf49", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMxNTE2Ng==", "url": "https://github.com/apache/cloudstack/pull/4138#discussion_r451315166", "bodyText": "@rhtyd If validation fails, an exception is thrown, so there is no setting of an invalid state that has to be checked. Validation happens inside verifyFormat.invoke();", "author": "Spaceman1984", "createdAt": "2020-07-08T06:38:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMwMDI1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkxMDE5MA==", "url": "https://github.com/apache/cloudstack/pull/4138#discussion_r452910190", "bodyText": "In short, prior to these changes the invoke() method only set the boolean variable retrieved in case of valid/invalid. After these changes, if it is invalid invoke() throws an exception, so no need to check isInvalid() in this line", "author": "nvazquez", "createdAt": "2020-07-10T15:19:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMwMDI1NQ=="}], "type": "inlineReview"}]}