{"pr_number": 3844, "pr_title": "ISSUE-3838: Wrong SSVM behavior causes redownloading for all the templates", "pr_createdAt": "2020-01-28T04:16:13Z", "pr_url": "https://github.com/apache/cloudstack/pull/3844", "timeline": [{"oid": "ab87a4d97b8b3a52c02ef366352b8cf86e26e588", "url": "https://github.com/apache/cloudstack/commit/ab87a4d97b8b3a52c02ef366352b8cf86e26e588", "message": "Fixes #3838", "committedDate": "2020-01-28T04:47:57Z", "type": "forcePushed"}, {"oid": "b49a435cadf1828acf390062e8b1068eadad077e", "url": "https://github.com/apache/cloudstack/commit/b49a435cadf1828acf390062e8b1068eadad077e", "message": "Fixes #3838", "committedDate": "2020-01-28T04:50:27Z", "type": "forcePushed"}, {"oid": "241ecb9577e56bce95a23fa19f7c41def3477f9b", "url": "https://github.com/apache/cloudstack/commit/241ecb9577e56bce95a23fa19f7c41def3477f9b", "message": "Fixes #3838", "committedDate": "2020-01-28T05:02:31Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ2MzQwNQ==", "url": "https://github.com/apache/cloudstack/pull/3844#discussion_r373463405", "bodyText": "moving away from the naming convention, (also i think it is not declared like this)", "author": "DaanHoogland", "createdAt": "2020-01-31T12:49:08Z", "path": "services/secondary-storage/server/src/main/java/org/apache/cloudstack/storage/template/DownloadManagerImpl.java", "diffHunk": "@@ -596,54 +594,54 @@ public String downloadPublicTemplate(long id, String url, String name, ImageForm\n             File file =\n                     ResourceType.TEMPLATE == resourceType ? _storage.getFile(tmpDir + File.separator + TemplateLocation.Filename) : _storage.getFile(tmpDir + File.separator +\n                             \"volume.properties\");\n-                    if (file.exists()) {\n-                        if(! file.delete()) {\n-                            LOGGER.warn(\"Deletion of file '\" + file.getAbsolutePath() + \"' failed.\");\n-                        }\n-                    }\n+            if (file.exists()) {\n+                if(! file.delete()) {\n+                    s_logger.warn(\"Deletion of file '\" + file.getAbsolutePath() + \"' failed.\");", "originalCommit": "41da80493063311920883e33b8f5baeb2b8dbbee", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ2NDYzOQ==", "url": "https://github.com/apache/cloudstack/pull/3844#discussion_r373464639", "bodyText": "probably due to rebase? LOGGER", "author": "DaanHoogland", "createdAt": "2020-01-31T12:52:25Z", "path": "services/secondary-storage/server/src/main/java/org/apache/cloudstack/storage/template/DownloadManagerImpl.java", "diffHunk": "@@ -596,54 +594,54 @@ public String downloadPublicTemplate(long id, String url, String name, ImageForm\n             File file =\n                     ResourceType.TEMPLATE == resourceType ? _storage.getFile(tmpDir + File.separator + TemplateLocation.Filename) : _storage.getFile(tmpDir + File.separator +\n                             \"volume.properties\");\n-                    if (file.exists()) {\n-                        if(! file.delete()) {\n-                            LOGGER.warn(\"Deletion of file '\" + file.getAbsolutePath() + \"' failed.\");\n-                        }\n-                    }\n+            if (file.exists()) {\n+                if(! file.delete()) {\n+                    s_logger.warn(\"Deletion of file '\" + file.getAbsolutePath() + \"' failed.\");\n+                }\n+            }\n \n-                    if (!file.createNewFile()) {\n-                        LOGGER.warn(\"Unable to create new file: \" + file.getAbsolutePath());\n-                        return \"Unable to create new file: \" + file.getAbsolutePath();\n-                    }\n+            if (!file.createNewFile()) {\n+                s_logger.warn(\"Unable to create new file: \" + file.getAbsolutePath());", "originalCommit": "41da80493063311920883e33b8f5baeb2b8dbbee", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ2NTUxMA==", "url": "https://github.com/apache/cloudstack/pull/3844#discussion_r373465510", "bodyText": "renamed to LOGGER", "author": "DaanHoogland", "createdAt": "2020-01-31T12:54:40Z", "path": "services/secondary-storage/server/src/main/java/org/apache/cloudstack/storage/template/DownloadManagerImpl.java", "diffHunk": "@@ -850,10 +848,15 @@ private String getInstallPath(String jobId) {\n \n         Script script = new Script(listVolScr, LOGGER);\n         script.add(\"-r\", rootdir);\n-        ZfsPathParser zpp = new ZfsPathParser(rootdir);\n-        script.execute(zpp);\n-        result.addAll(zpp.getPaths());\n-        LOGGER.info(\"found \" + zpp.getPaths().size() + \" volumes\" + zpp.getPaths());\n+        NfsPathParser parser = new NfsPathParser(rootdir);\n+        script.execute(parser);\n+        if (script.getExitValue() != 0) {\n+            s_logger.error(\"Error while executing script \" + script.toString());", "originalCommit": "41da80493063311920883e33b8f5baeb2b8dbbee", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ2NTU4MA==", "url": "https://github.com/apache/cloudstack/pull/3844#discussion_r373465580", "bodyText": "LOGGER", "author": "DaanHoogland", "createdAt": "2020-01-31T12:54:51Z", "path": "services/secondary-storage/server/src/main/java/org/apache/cloudstack/storage/template/DownloadManagerImpl.java", "diffHunk": "@@ -850,10 +848,15 @@ private String getInstallPath(String jobId) {\n \n         Script script = new Script(listVolScr, LOGGER);\n         script.add(\"-r\", rootdir);\n-        ZfsPathParser zpp = new ZfsPathParser(rootdir);\n-        script.execute(zpp);\n-        result.addAll(zpp.getPaths());\n-        LOGGER.info(\"found \" + zpp.getPaths().size() + \" volumes\" + zpp.getPaths());\n+        NfsPathParser parser = new NfsPathParser(rootdir);\n+        script.execute(parser);\n+        if (script.getExitValue() != 0) {\n+            s_logger.error(\"Error while executing script \" + script.toString());\n+            throw new CloudRuntimeException(\"Error while executing script \" + script.toString());\n+        }\n+        result.addAll(parser.getPaths());\n+        s_logger.info(\"found \" + parser.getPaths().size() + \" volumes\" + parser.getPaths());", "originalCommit": "41da80493063311920883e33b8f5baeb2b8dbbee", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ2NTY3Mg==", "url": "https://github.com/apache/cloudstack/pull/3844#discussion_r373465672", "bodyText": "sorry", "author": "DaanHoogland", "createdAt": "2020-01-31T12:55:05Z", "path": "services/secondary-storage/server/src/main/java/org/apache/cloudstack/storage/template/DownloadManagerImpl.java", "diffHunk": "@@ -862,10 +865,14 @@ private String getInstallPath(String jobId) {\n \n         Script script = new Script(listTmpltScr, LOGGER);\n         script.add(\"-r\", rootdir);\n-        ZfsPathParser zpp = new ZfsPathParser(rootdir);\n-        script.execute(zpp);\n-        result.addAll(zpp.getPaths());\n-        LOGGER.info(\"found \" + zpp.getPaths().size() + \" templates\" + zpp.getPaths());\n+        NfsPathParser parser = new NfsPathParser(rootdir);\n+        script.execute(parser);\n+        if (script.getExitValue() != 0) {\n+            s_logger.error(\"Error while executing script \" + script.toString());", "originalCommit": "41da80493063311920883e33b8f5baeb2b8dbbee", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ2NTczNQ==", "url": "https://github.com/apache/cloudstack/pull/3844#discussion_r373465735", "bodyText": "again", "author": "DaanHoogland", "createdAt": "2020-01-31T12:55:17Z", "path": "services/secondary-storage/server/src/main/java/org/apache/cloudstack/storage/template/DownloadManagerImpl.java", "diffHunk": "@@ -862,10 +865,14 @@ private String getInstallPath(String jobId) {\n \n         Script script = new Script(listTmpltScr, LOGGER);\n         script.add(\"-r\", rootdir);\n-        ZfsPathParser zpp = new ZfsPathParser(rootdir);\n-        script.execute(zpp);\n-        result.addAll(zpp.getPaths());\n-        LOGGER.info(\"found \" + zpp.getPaths().size() + \" templates\" + zpp.getPaths());\n+        NfsPathParser parser = new NfsPathParser(rootdir);\n+        script.execute(parser);\n+        if (script.getExitValue() != 0) {\n+            s_logger.error(\"Error while executing script \" + script.toString());\n+            throw new CloudRuntimeException(\"Error while executing script \" + script.toString());\n+        }\n+        result.addAll(parser.getPaths());\n+        s_logger.info(\"found \" + parser.getPaths().size() + \" templates\" + parser.getPaths());", "originalCommit": "41da80493063311920883e33b8f5baeb2b8dbbee", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "949fab1095933151d4264677e995f3bf72c7d1c3", "url": "https://github.com/apache/cloudstack/commit/949fab1095933151d4264677e995f3bf72c7d1c3", "message": "Resolved conflicts.", "committedDate": "2020-02-03T10:17:02Z", "type": "commit"}, {"oid": "949fab1095933151d4264677e995f3bf72c7d1c3", "url": "https://github.com/apache/cloudstack/commit/949fab1095933151d4264677e995f3bf72c7d1c3", "message": "Resolved conflicts.", "committedDate": "2020-02-03T10:17:02Z", "type": "forcePushed"}]}