{"pr_number": 3847, "pr_title": "VR: Fix Redundant VRouter guest network on wrong interface", "pr_createdAt": "2020-01-28T11:09:46Z", "pr_url": "https://github.com/apache/cloudstack/pull/3847", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMyOTQ2Nw==", "url": "https://github.com/apache/cloudstack/pull/3847#discussion_r372329467", "bodyText": "could this be a aeparate method? getVlanLastIpMapForGuestNetwork();?\nand than later", "author": "DaanHoogland", "createdAt": "2020-01-29T11:29:38Z", "path": "server/src/main/java/com/cloud/network/router/CommandSetupHelper.java", "diffHunk": "@@ -670,7 +670,20 @@ public void createVpcAssociatePublicIPCommands(final VirtualRouter router, final\n             vlanIpMap.put(vlanTag, ipList);\n         }\n \n+        Long guestNetworkId = null;\n+        final List<NicVO> nics = _nicDao.listByVmId(router.getId());\n+        for (final NicVO nic : nics) {\n+            final NetworkVO nw = _networkDao.findById(nic.getNetworkId());\n+            if (nw.getTrafficType() == TrafficType.Guest) {\n+                guestNetworkId = nw.getId();\n+                break;\n+            }\n+        }\n+\n+        Map<String, Boolean> vlanLastIp = getVlanLastIpMap(router.getVpcId(), guestNetworkId);\n+", "originalCommit": "127199ba82ea29b468b5615777a6e1740edcb03d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMzMDA5Ng==", "url": "https://github.com/apache/cloudstack/pull/3847#discussion_r372330096", "bodyText": "here useAccessDetailsAccordingToVlanLastIpForGuestNetwork(); (long names just to be descriptive", "author": "DaanHoogland", "createdAt": "2020-01-29T11:31:06Z", "path": "server/src/main/java/com/cloud/network/router/CommandSetupHelper.java", "diffHunk": "@@ -728,6 +741,13 @@ public int compare(final PublicIpAddress o1, final PublicIpAddress o2) {\n             final DataCenterVO dcVo = _dcDao.findById(router.getDataCenterId());\n             cmd.setAccessDetail(NetworkElementCommand.ZONE_NETWORK_TYPE, dcVo.getNetworkType().toString());\n \n+            Boolean lastIp = vlanLastIp.get(vlanTagKey);\n+            if (lastIp == null) {\n+                cmd.setAccessDetail(NetworkElementCommand.NETWORK_PUB_LAST_IP, \"true\");\n+            } else {\n+                cmd.setAccessDetail(NetworkElementCommand.NETWORK_PUB_LAST_IP, \"false\");\n+            }\n+", "originalCommit": "127199ba82ea29b468b5615777a6e1740edcb03d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjcxNzE4MA==", "url": "https://github.com/apache/cloudstack/pull/3847#discussion_r372717180", "bodyText": "Duplicated lines (1797 - 1805 = 1838 - 1847). Can you please extract them into a method?", "author": "GabrielBrascher", "createdAt": "2020-01-30T01:18:15Z", "path": "plugins/hypervisors/kvm/src/main/java/com/cloud/hypervisor/kvm/resource/LibvirtComputingResource.java", "diffHunk": "@@ -1794,35 +1794,26 @@ public ExecutionResult prepareNetworkElementCommand(final IpAssocCommand cmd) {\n         final String routerIp = cmd.getAccessDetail(NetworkElementCommand.ROUTER_IP);\n         Connect conn;\n         try {\n-            conn = LibvirtConnection.getConnectionByVmName(routerName);\n-            final List<InterfaceDef> nics = getInterfaces(conn, routerName);\n-            final Map<String, Integer> broadcastUriAllocatedToVM = new HashMap<String, Integer>();\n-            Integer nicPos = 0;\n-            for (final InterfaceDef nic : nics) {\n-                if (nic.getBrName().equalsIgnoreCase(_linkLocalBridgeName)) {\n-                    broadcastUriAllocatedToVM.put(\"LinkLocal\", nicPos);\n-                } else {\n-                    if (nic.getBrName().equalsIgnoreCase(_publicBridgeName) || nic.getBrName().equalsIgnoreCase(_privBridgeName) ||\n-                            nic.getBrName().equalsIgnoreCase(_guestBridgeName)) {\n-                        broadcastUriAllocatedToVM.put(BroadcastDomainType.Vlan.toUri(Vlan.UNTAGGED).toString(), nicPos);\n-                    } else {\n-                        final String broadcastUri = getBroadcastUriFromBridge(nic.getBrName());\n-                        broadcastUriAllocatedToVM.put(broadcastUri, nicPos);\n-                    }\n-                }\n-                nicPos++;\n+            conn = getLibvirtUtilitiesHelper().getConnectionByVmName(routerName);\n+            Integer devNum = 0;\n+            final List<InterfaceDef> pluggedNics = getInterfaces(conn, routerName);\n+            final Map<String, Integer> macAddressToNicNum = new HashMap<>(pluggedNics.size());\n+            for (final InterfaceDef pluggedNic : pluggedNics) {\n+                final String pluggedVlan = pluggedNic.getBrName();\n+                macAddressToNicNum.put(pluggedNic.getMacAddress(), devNum);\n+                devNum++;", "originalCommit": "127199ba82ea29b468b5615777a6e1740edcb03d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ac17c5c6754805c153e68be62b237e6dfddd08a9", "url": "https://github.com/apache/cloudstack/commit/ac17c5c6754805c153e68be62b237e6dfddd08a9", "message": "VR: Fix Redundant VRouter guest network on wrong interface", "committedDate": "2020-02-06T09:00:56Z", "type": "commit"}, {"oid": "23eb1fc7a9f7cb5ef0d40231e9bdb7df7172bdb9", "url": "https://github.com/apache/cloudstack/commit/23eb1fc7a9f7cb5ef0d40231e9bdb7df7172bdb9", "message": "marvin: restart network/vpc", "committedDate": "2020-02-06T09:00:58Z", "type": "commit"}, {"oid": "d098c518f6107b05c3675157644b52333642784e", "url": "https://github.com/apache/cloudstack/commit/d098c518f6107b05c3675157644b52333642784e", "message": "marvin utils: return if ssh command is executed and returns nothing", "committedDate": "2020-02-06T09:01:02Z", "type": "commit"}, {"oid": "19382c109fc2766316194ce452b1114a999592b5", "url": "https://github.com/apache/cloudstack/commit/19382c109fc2766316194ce452b1114a999592b5", "message": "VR: Fix Redundant VRouter guest network on wrong interface (minor changes)", "committedDate": "2020-02-06T09:01:20Z", "type": "commit"}, {"oid": "02a82adbe6e980bc496f7c50323b057837c28d41", "url": "https://github.com/apache/cloudstack/commit/02a82adbe6e980bc496f7c50323b057837c28d41", "message": "VR: Fix Redundant VRouter guest network on wrong interface (minor 2)", "committedDate": "2020-02-06T09:01:23Z", "type": "commit"}, {"oid": "02a82adbe6e980bc496f7c50323b057837c28d41", "url": "https://github.com/apache/cloudstack/commit/02a82adbe6e980bc496f7c50323b057837c28d41", "message": "VR: Fix Redundant VRouter guest network on wrong interface (minor 2)", "committedDate": "2020-02-06T09:01:23Z", "type": "forcePushed"}, {"oid": "917ef2a8e06c17a316e146b6f92190cdfc30ccf3", "url": "https://github.com/apache/cloudstack/commit/917ef2a8e06c17a316e146b6f92190cdfc30ccf3", "message": "marvin test: Fix Redundant VRouter guest network on wrong interfaces", "committedDate": "2020-02-25T08:06:23Z", "type": "commit"}, {"oid": "27897b8c8ce64c81ddee4aa33e9d9713e31b4607", "url": "https://github.com/apache/cloudstack/commit/27897b8c8ce64c81ddee4aa33e9d9713e31b4607", "message": "marvin test: skip test on non-kvm hypervisors", "committedDate": "2020-02-25T08:06:27Z", "type": "commit"}, {"oid": "4e8d313c1e1fcc3a988f173e5a4201a401cd023e", "url": "https://github.com/apache/cloudstack/commit/4e8d313c1e1fcc3a988f173e5a4201a401cd023e", "message": "move marvin test to test/integration/component/", "committedDate": "2020-02-25T11:34:25Z", "type": "commit"}]}