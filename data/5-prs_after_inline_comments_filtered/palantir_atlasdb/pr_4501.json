{"pr_number": 4501, "pr_title": "[LW] Prequel to Part 5: VersionedLockWatchState and small fixes", "pr_createdAt": "2020-01-10T13:20:56Z", "pr_url": "https://github.com/palantir/atlasdb/pull/4501", "timeline": [{"oid": "382adf47b214e2ba7912b642f4e5312a8280d688", "url": "https://github.com/palantir/atlasdb/commit/382adf47b214e2ba7912b642f4e5312a8280d688", "message": "Get the trivial stuff out of the way", "committedDate": "2020-01-10T12:56:58Z", "type": "commit"}, {"oid": "060cefe0e90ae98736b388912e75a64f34329eb4", "url": "https://github.com/palantir/atlasdb/commit/060cefe0e90ae98736b388912e75a64f34329eb4", "message": "Add last update to VLWS, fix matchers in tests", "committedDate": "2020-01-10T13:17:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTI0MDUxOA==", "url": "https://github.com/palantir/atlasdb/pull/4501#discussion_r365240518", "bodyText": "I normally thought we specify the abstract rather than the concrete implementations of these as the sub-types (e.g. LockEvent as opposed to ImmutableLockEvent. Not wrong, but technically if you change the @JsonSerialize(as = Bla.class) in LockEvent it won't be respected.", "author": "jeremyk-91", "createdAt": "2020-01-10T13:47:12Z", "path": "lock-api/src/main/java/com/palantir/lock/watch/LockWatchEvent.java", "diffHunk": "@@ -16,11 +16,28 @@\n \n package com.palantir.lock.watch;\n \n+import com.fasterxml.jackson.annotation.JsonSubTypes;\n+import com.fasterxml.jackson.annotation.JsonTypeInfo;\n+\n+@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, property = \"type\")\n+@JsonSubTypes({\n+        @JsonSubTypes.Type(value = ImmutableLockEvent.class, name = LockEvent.TYPE),\n+        @JsonSubTypes.Type(value = ImmutableUnlockEvent.class, name = UnlockEvent.TYPE),\n+        @JsonSubTypes.Type(value = ImmutableLockWatchOpenLocksEvent.class, name = LockWatchOpenLocksEvent.TYPE),\n+        @JsonSubTypes.Type(value = ImmutableLockWatchCreatedEvent.class, name = LockWatchCreatedEvent.TYPE)})", "originalCommit": "060cefe0e90ae98736b388912e75a64f34329eb4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTI0MjIxNg==", "url": "https://github.com/palantir/atlasdb/pull/4501#discussion_r365242216", "bodyText": "Some JavaDoc may be useful as it's not clear what an OpenLocks operation is (compared to Lock and Unlock, which are pretty clear). Maybe something like:\n\nA LockWatchOpenLocksEvent captures the state of all lock descriptors for a given lock watch that are currently open (that is, held by clients).", "author": "jeremyk-91", "createdAt": "2020-01-10T13:51:01Z", "path": "lock-api/src/main/java/com/palantir/lock/watch/LockWatchOpenLocksEvent.java", "diffHunk": "@@ -17,24 +17,40 @@\n package com.palantir.lock.watch;\n \n import java.util.Set;\n+import java.util.UUID;\n \n import org.immutables.value.Value;\n \n+import com.fasterxml.jackson.annotation.JsonTypeName;\n+import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n+import com.fasterxml.jackson.databind.annotation.JsonSerialize;\n import com.palantir.lock.LockDescriptor;\n \n @Value.Immutable\n @Value.Style(visibility = Value.Style.ImplementationVisibility.PACKAGE)\n+@JsonSerialize(as = ImmutableLockWatchOpenLocksEvent.class)\n+@JsonDeserialize(as = ImmutableLockWatchOpenLocksEvent.class)\n+@JsonTypeName(LockWatchOpenLocksEvent.TYPE)\n public abstract class LockWatchOpenLocksEvent implements LockWatchEvent {", "originalCommit": "060cefe0e90ae98736b388912e75a64f34329eb4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "00c2e4e658b9d9931446f8922cb5129f3ab15a61", "url": "https://github.com/palantir/atlasdb/commit/00c2e4e658b9d9931446f8922cb5129f3ab15a61", "message": "Address CR", "committedDate": "2020-01-10T16:01:21Z", "type": "commit"}]}