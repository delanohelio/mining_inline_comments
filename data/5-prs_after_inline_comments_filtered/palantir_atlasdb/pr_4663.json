{"pr_number": 4663, "pr_title": "[Timelock Partitioning] Part 55: Takeover primitive", "pr_createdAt": "2020-03-23T12:33:01Z", "pr_url": "https://github.com/palantir/atlasdb/pull/4663", "timeline": [{"oid": "6f2d218393f51d5fdcd9c603065ad7364b28d44c", "url": "https://github.com/palantir/atlasdb/commit/6f2d218393f51d5fdcd9c603065ad7364b28d44c", "message": "Add ability to take over leadership via an endpoint.", "committedDate": "2020-03-23T12:23:19Z", "type": "commit"}, {"oid": "a4b0e7c54ad5f21b3c9fbcd50df2c95a414d4631", "url": "https://github.com/palantir/atlasdb/commit/a4b0e7c54ad5f21b3c9fbcd50df2c95a414d4631", "message": "Batch Namespace Takeover resource.", "committedDate": "2020-03-23T12:23:19Z", "type": "commit"}, {"oid": "09676befb52ddd6631dffd7e109f196acbbc41b3", "url": "https://github.com/palantir/atlasdb/commit/09676befb52ddd6631dffd7e109f196acbbc41b3", "message": "Checkstyle.", "committedDate": "2020-03-23T12:34:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ2MTU4Nw==", "url": "https://github.com/palantir/atlasdb/pull/4663#discussion_r396461587", "bodyText": "We should leave a comment along the lines of the ListenableFuture one explaining why this is safe. It is, because SerializingUtils.copy() will throw when trying to copy the non-(Java) Serializable Optional returned.", "author": "jeremyk-91", "createdAt": "2020-03-23T13:46:19Z", "path": "atlasdb-commons/src/main/java/com/palantir/common/proxy/SerializingProxy.java", "diffHunk": "@@ -52,7 +53,7 @@ public Object invoke(Object proxy, Method method, Object[] args) throws Throwabl\n         // Who knows why this class is present. Presumably it's to test some required behaviour in large internal\n         // product. But we know that they don't return ListenableFutures (and we do, and don't use Java serialization),\n         // so let's skip them.\n-        if (method.getReturnType().equals(ListenableFuture.class)) {\n+        if (method.getReturnType().equals(ListenableFuture.class) || method.getReturnType().equals(Optional.class)) {", "originalCommit": "09676befb52ddd6631dffd7e109f196acbbc41b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU0NDAwOQ==", "url": "https://github.com/palantir/atlasdb/pull/4663#discussion_r396544009", "bodyText": "will delete \ud83d\udd25", "author": "felixdesouza", "createdAt": "2020-03-23T15:36:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ2MTU4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ2MzE3Mg==", "url": "https://github.com/palantir/atlasdb/pull/4663#discussion_r396463172", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Note: Whilst a positive result means that it succussfully proposed and became the leader, it is still subject to\n          \n          \n            \n                 * Note: Whilst a positive result means that it successfully proposed and became the leader, it is still subject to", "author": "jeremyk-91", "createdAt": "2020-03-23T13:48:34Z", "path": "leader-election-api/src/main/java/com/palantir/leader/LeaderElectionService.java", "diffHunk": "@@ -82,6 +82,19 @@\n      */\n     boolean stepDown();\n \n+    /**\n+     * Attempts to forcefully take over leadership. That is, it is similar to {@link #blockOnBecomingLeader()}, however\n+     * it does not block and also if it discovers that it is not the leader, it doesn't back down but proposes\n+     * leadership anyway.\n+     * <p>\n+     * Note: Whilst a positive result means that it succussfully proposed and became the leader, it is still subject to", "originalCommit": "09676befb52ddd6631dffd7e109f196acbbc41b3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ2Mzk4Nw==", "url": "https://github.com/palantir/atlasdb/pull/4663#discussion_r396463987", "bodyText": "This doesn't quite agree with the API of hostileTakeover though (I didn't gain leadership forcefully, I just was already the leader). Probably the API should be reworded to something like true iff this node was the leader at some point during the method call (bearing in mind it might already the be the leader, and that a successful proposal + GC could see another node take over before this method returns).", "author": "jeremyk-91", "createdAt": "2020-03-23T13:49:35Z", "path": "leader-election-impl/src/main/java/com/palantir/leader/PaxosLeaderElectionService.java", "diffHunk": "@@ -312,6 +312,37 @@ public boolean stepDown() {\n         return false;\n     }\n \n+    @Override\n+    public boolean hostileTakeover() {\n+        LeadershipState leadershipState = determineLeadershipState();\n+        StillLeadingStatus status = leadershipState.status();\n+        switch (status) {\n+            case LEADING:\n+                return true;", "originalCommit": "09676befb52ddd6631dffd7e109f196acbbc41b3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ3MTc5NQ==", "url": "https://github.com/palantir/atlasdb/pull/4663#discussion_r396471795", "bodyText": "nit: the idea that we propose null is now baked in to three places in the code (propose, stepdown and here) - maybe we should refactor this slightly?", "author": "jeremyk-91", "createdAt": "2020-03-23T14:00:30Z", "path": "leader-election-impl/src/main/java/com/palantir/leader/PaxosLeaderElectionService.java", "diffHunk": "@@ -312,6 +312,37 @@ public boolean stepDown() {\n         return false;\n     }\n \n+    @Override\n+    public boolean hostileTakeover() {\n+        LeadershipState leadershipState = determineLeadershipState();\n+        StillLeadingStatus status = leadershipState.status();\n+        switch (status) {\n+            case LEADING:\n+                return true;\n+            case NOT_LEADING:\n+                try {\n+                    proposer.propose(getNextSequenceNumber(leadershipState.greatestLearnedValue()), null);", "originalCommit": "09676befb52ddd6631dffd7e109f196acbbc41b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUwNDkwNw==", "url": "https://github.com/palantir/atlasdb/pull/4663#discussion_r396504907", "bodyText": "can do", "author": "felixdesouza", "createdAt": "2020-03-23T14:45:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ3MTc5NQ=="}], "type": "inlineReview"}, {"oid": "4fc8b135a1837380927fa930f1c92a00a0219aac", "url": "https://github.com/palantir/atlasdb/commit/4fc8b135a1837380927fa930f1c92a00a0219aac", "message": "Update leader-election-api/src/main/java/com/palantir/leader/LeaderElectionService.java\n\nCo-Authored-By: Jeremy Kong <jeremykong@hotmail.com>", "committedDate": "2020-03-23T14:47:06Z", "type": "commit"}, {"oid": "188b3b62833df333e7fd9d9c4ae1a6bac6714eff", "url": "https://github.com/palantir/atlasdb/commit/188b3b62833df333e7fd9d9c4ae1a6bac6714eff", "message": "Address comments.", "committedDate": "2020-03-23T15:48:16Z", "type": "commit"}, {"oid": "6a9b5b4fc0015d1a5bbac7a0fd3cf2cdbb5bc951", "url": "https://github.com/palantir/atlasdb/commit/6a9b5b4fc0015d1a5bbac7a0fd3cf2cdbb5bc951", "message": "Delete SerializingProxy.java", "committedDate": "2020-03-23T15:54:01Z", "type": "commit"}]}