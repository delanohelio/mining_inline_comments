{"pr_number": 4762, "pr_title": "[Dialogue] Part 2: Translation from AtlasDB Services to ServiceConfigBlocks", "pr_createdAt": "2020-05-11T19:03:53Z", "pr_url": "https://github.com/palantir/atlasdb/pull/4762", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzYzNjM1NQ==", "url": "https://github.com/palantir/atlasdb/pull/4762#discussion_r423636355", "bodyText": "name it _SHORT", "author": "gmaretic", "createdAt": "2020-05-12T10:42:03Z", "path": "atlasdb-conjure/src/test/java/com/palantir/atlasdb/http/v2/DialogueClientOptionsTest.java", "diffHunk": "@@ -0,0 +1,106 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.http.v2;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.nio.file.Paths;\n+import java.util.List;\n+\n+import org.junit.Test;\n+\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableMap;\n+import com.palantir.atlasdb.config.AuxiliaryRemotingParameters;\n+import com.palantir.atlasdb.config.ImmutableServerListConfig;\n+import com.palantir.atlasdb.config.ServerListConfig;\n+import com.palantir.conjure.java.api.config.service.PartialServiceConfiguration;\n+import com.palantir.conjure.java.api.config.service.ServicesConfigBlock;\n+import com.palantir.conjure.java.api.config.service.UserAgent;\n+import com.palantir.conjure.java.api.config.ssl.SslConfiguration;\n+\n+public class DialogueClientOptionsTest {\n+    private static final String SERVICE_NAME = \"service\";\n+    private static final UserAgent USER_AGENT = UserAgent.of(UserAgent.Agent.of(SERVICE_NAME, \"1.2.3\"));\n+    private static final List<String> SERVERS = ImmutableList.of(\"apple\", \"banana\", \"cherry\", \"dewberry\");\n+    private static final SslConfiguration SSL_CONFIGURATION = SslConfiguration.of(Paths.get(\"a\", \"b\"));\n+\n+    private static final AuxiliaryRemotingParameters REMOTING_PARAMETERS_EXTENDED_TIMEOUT\n+            = AuxiliaryRemotingParameters.builder()\n+            .userAgent(USER_AGENT)\n+            .shouldRetry(true)\n+            .shouldLimitPayload(true)\n+            .shouldUseExtendedTimeout(true)\n+            .build();\n+    private static final AuxiliaryRemotingParameters REMOTING_PARAMETERS = AuxiliaryRemotingParameters.builder()", "originalCommit": "0cc2f2d41744526727da3b45cda70974731bcc70", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY0NjQyNw==", "url": "https://github.com/palantir/atlasdb/pull/4762#discussion_r423646427", "bodyText": "Yep, makes sense - this sounds like a default.", "author": "jeremyk-91", "createdAt": "2020-05-12T11:01:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzYzNjM1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzYzNjUzMg==", "url": "https://github.com/palantir/atlasdb/pull/4762#discussion_r423636532", "bodyText": "Same as above", "author": "gmaretic", "createdAt": "2020-05-12T10:42:27Z", "path": "atlasdb-conjure/src/test/java/com/palantir/atlasdb/http/v2/DialogueClientOptionsTest.java", "diffHunk": "@@ -0,0 +1,106 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.http.v2;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.nio.file.Paths;\n+import java.util.List;\n+\n+import org.junit.Test;\n+\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableMap;\n+import com.palantir.atlasdb.config.AuxiliaryRemotingParameters;\n+import com.palantir.atlasdb.config.ImmutableServerListConfig;\n+import com.palantir.atlasdb.config.ServerListConfig;\n+import com.palantir.conjure.java.api.config.service.PartialServiceConfiguration;\n+import com.palantir.conjure.java.api.config.service.ServicesConfigBlock;\n+import com.palantir.conjure.java.api.config.service.UserAgent;\n+import com.palantir.conjure.java.api.config.ssl.SslConfiguration;\n+\n+public class DialogueClientOptionsTest {\n+    private static final String SERVICE_NAME = \"service\";\n+    private static final UserAgent USER_AGENT = UserAgent.of(UserAgent.Agent.of(SERVICE_NAME, \"1.2.3\"));\n+    private static final List<String> SERVERS = ImmutableList.of(\"apple\", \"banana\", \"cherry\", \"dewberry\");\n+    private static final SslConfiguration SSL_CONFIGURATION = SslConfiguration.of(Paths.get(\"a\", \"b\"));\n+\n+    private static final AuxiliaryRemotingParameters REMOTING_PARAMETERS_EXTENDED_TIMEOUT\n+            = AuxiliaryRemotingParameters.builder()\n+            .userAgent(USER_AGENT)\n+            .shouldRetry(true)\n+            .shouldLimitPayload(true)\n+            .shouldUseExtendedTimeout(true)\n+            .build();\n+    private static final AuxiliaryRemotingParameters REMOTING_PARAMETERS = AuxiliaryRemotingParameters.builder()\n+            .userAgent(USER_AGENT)\n+            .shouldRetry(true)\n+            .shouldLimitPayload(true)\n+            .shouldUseExtendedTimeout(false)\n+            .build();\n+\n+    private static final ServerListConfig SERVER_LIST_CONFIG = ImmutableServerListConfig.builder()\n+            .sslConfiguration(SSL_CONFIGURATION)\n+            .addAllServers(SERVERS)\n+            .build();\n+\n+    private static final RemoteServiceConfiguration REMOTE_SERVICE_CONFIGURATION_EXTENDED_TIMEOUT\n+            = ImmutableRemoteServiceConfiguration.builder()\n+            .serverList(SERVER_LIST_CONFIG)\n+            .remotingParameters(REMOTING_PARAMETERS_EXTENDED_TIMEOUT)\n+            .build();\n+    private static final RemoteServiceConfiguration REMOTE_SERVICE_CONFIGURATION", "originalCommit": "0cc2f2d41744526727da3b45cda70974731bcc70", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzYzNzM1MA==", "url": "https://github.com/palantir/atlasdb/pull/4762#discussion_r423637350", "bodyText": "Verify absence of proxy configuration", "author": "gmaretic", "createdAt": "2020-05-12T10:43:48Z", "path": "atlasdb-conjure/src/test/java/com/palantir/atlasdb/http/v2/DialogueClientOptionsTest.java", "diffHunk": "@@ -0,0 +1,106 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.http.v2;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.nio.file.Paths;\n+import java.util.List;\n+\n+import org.junit.Test;\n+\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableMap;\n+import com.palantir.atlasdb.config.AuxiliaryRemotingParameters;\n+import com.palantir.atlasdb.config.ImmutableServerListConfig;\n+import com.palantir.atlasdb.config.ServerListConfig;\n+import com.palantir.conjure.java.api.config.service.PartialServiceConfiguration;\n+import com.palantir.conjure.java.api.config.service.ServicesConfigBlock;\n+import com.palantir.conjure.java.api.config.service.UserAgent;\n+import com.palantir.conjure.java.api.config.ssl.SslConfiguration;\n+\n+public class DialogueClientOptionsTest {\n+    private static final String SERVICE_NAME = \"service\";\n+    private static final UserAgent USER_AGENT = UserAgent.of(UserAgent.Agent.of(SERVICE_NAME, \"1.2.3\"));\n+    private static final List<String> SERVERS = ImmutableList.of(\"apple\", \"banana\", \"cherry\", \"dewberry\");\n+    private static final SslConfiguration SSL_CONFIGURATION = SslConfiguration.of(Paths.get(\"a\", \"b\"));\n+\n+    private static final AuxiliaryRemotingParameters REMOTING_PARAMETERS_EXTENDED_TIMEOUT\n+            = AuxiliaryRemotingParameters.builder()\n+            .userAgent(USER_AGENT)\n+            .shouldRetry(true)\n+            .shouldLimitPayload(true)\n+            .shouldUseExtendedTimeout(true)\n+            .build();\n+    private static final AuxiliaryRemotingParameters REMOTING_PARAMETERS = AuxiliaryRemotingParameters.builder()\n+            .userAgent(USER_AGENT)\n+            .shouldRetry(true)\n+            .shouldLimitPayload(true)\n+            .shouldUseExtendedTimeout(false)\n+            .build();\n+\n+    private static final ServerListConfig SERVER_LIST_CONFIG = ImmutableServerListConfig.builder()\n+            .sslConfiguration(SSL_CONFIGURATION)\n+            .addAllServers(SERVERS)\n+            .build();\n+\n+    private static final RemoteServiceConfiguration REMOTE_SERVICE_CONFIGURATION_EXTENDED_TIMEOUT\n+            = ImmutableRemoteServiceConfiguration.builder()\n+            .serverList(SERVER_LIST_CONFIG)\n+            .remotingParameters(REMOTING_PARAMETERS_EXTENDED_TIMEOUT)\n+            .build();\n+    private static final RemoteServiceConfiguration REMOTE_SERVICE_CONFIGURATION\n+            = ImmutableRemoteServiceConfiguration.builder()\n+            .serverList(SERVER_LIST_CONFIG)\n+            .remotingParameters(REMOTING_PARAMETERS)\n+            .build();\n+\n+    @Test\n+    public void serviceConfigBlockGeneration() {\n+        ServicesConfigBlock servicesConfigBlock = DialogueClientOptions.toServicesConfigBlock(\n+                ImmutableMap.of(SERVICE_NAME, REMOTE_SERVICE_CONFIGURATION_EXTENDED_TIMEOUT));\n+\n+        assertThat(servicesConfigBlock.services()).containsOnlyKeys(SERVICE_NAME);\n+\n+        PartialServiceConfiguration partialServiceConfiguration = servicesConfigBlock.services().get(SERVICE_NAME);\n+        assertThat(partialServiceConfiguration.uris()).hasSameElementsAs(SERVERS);\n+        assertThat(partialServiceConfiguration.security()).contains(SSL_CONFIGURATION);\n+        assertThat(partialServiceConfiguration.backoffSlotSize())\n+                .contains(ClientOptionsConstants.STANDARD_BACKOFF_SLOT_SIZE);\n+        assertThat(partialServiceConfiguration.connectTimeout()).contains(ClientOptionsConstants.CONNECT_TIMEOUT);\n+        assertThat(partialServiceConfiguration.maxNumRetries()).contains(ClientOptionsConstants.STANDARD_MAX_RETRIES);\n+        assertThat(partialServiceConfiguration.readTimeout()).contains(ClientOptionsConstants.LONG_READ_TIMEOUT);\n+    }", "originalCommit": "0cc2f2d41744526727da3b45cda70974731bcc70", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzYzODE0OQ==", "url": "https://github.com/palantir/atlasdb/pull/4762#discussion_r423638149", "bodyText": "Maybe rename this", "author": "gmaretic", "createdAt": "2020-05-12T10:45:19Z", "path": "timelock-server/src/suiteTest/java/com/palantir/atlasdb/timelock/MultiNodePaxosTimeLockServerIntegrationTest.java", "diffHunk": "@@ -82,7 +82,9 @@\n \n     private static final int DEFAULT_LOCK_TIMEOUT_MS = 10_000;\n     private static final int LONG_LOCK_TIMEOUT_MS =", "originalCommit": "0cc2f2d41744526727da3b45cda70974731bcc70", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY0NzExMg==", "url": "https://github.com/palantir/atlasdb/pull/4762#discussion_r423647112", "bodyText": "Yep, renamed to LONGER_THAN_READ_TIMEOUT_LOCK_TIMEOUT_MS", "author": "jeremyk-91", "createdAt": "2020-05-12T11:02:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzYzODE0OQ=="}], "type": "inlineReview"}, {"oid": "f8da751a5606d084f07c9ff120971f36255707fd", "url": "https://github.com/palantir/atlasdb/commit/f8da751a5606d084f07c9ff120971f36255707fd", "message": "Add generated changelog entries", "committedDate": "2020-05-12T10:58:42Z", "type": "commit"}, {"oid": "01e978f2075d7a41b4b64b9ba0ebade62e392cc7", "url": "https://github.com/palantir/atlasdb/commit/01e978f2075d7a41b4b64b9ba0ebade62e392cc7", "message": "versions", "committedDate": "2020-05-12T10:58:42Z", "type": "commit"}, {"oid": "79240234ef674b702a03d428ad6dcc01d94f31d2", "url": "https://github.com/palantir/atlasdb/commit/79240234ef674b702a03d428ad6dcc01d94f31d2", "message": "HRD and refactoring", "committedDate": "2020-05-12T10:58:42Z", "type": "commit"}, {"oid": "86b353279f92c52986496129191302549e659bfb", "url": "https://github.com/palantir/atlasdb/commit/86b353279f92c52986496129191302549e659bfb", "message": "ADDSP impl", "committedDate": "2020-05-12T10:58:42Z", "type": "commit"}, {"oid": "f29905638a788e9cb52fb5e17f6b53a68e03e9aa", "url": "https://github.com/palantir/atlasdb/commit/f29905638a788e9cb52fb5e17f6b53a68e03e9aa", "message": "DialogueClientOptionsTest and bugfix", "committedDate": "2020-05-12T10:58:42Z", "type": "commit"}, {"oid": "bc24909681835179a742531d77f1aaf617116082", "url": "https://github.com/palantir/atlasdb/commit/bc24909681835179a742531d77f1aaf617116082", "message": "don't put ADDSP in this commit", "committedDate": "2020-05-12T10:58:42Z", "type": "commit"}, {"oid": "e8cd97620db4778e6c7514e5ae8c30a2d30c3436", "url": "https://github.com/palantir/atlasdb/commit/e8cd97620db4778e6c7514e5ae8c30a2d30c3436", "message": "fix funky test", "committedDate": "2020-05-12T10:58:42Z", "type": "commit"}, {"oid": "4a0fb061069d34eb4a34d08d383b462377b1ab38", "url": "https://github.com/palantir/atlasdb/commit/4a0fb061069d34eb4a34d08d383b462377b1ab38", "message": "salts test", "committedDate": "2020-05-12T10:58:42Z", "type": "commit"}, {"oid": "afcb1f2c72c272060472b39c0a1389dd31d16302", "url": "https://github.com/palantir/atlasdb/commit/afcb1f2c72c272060472b39c0a1389dd31d16302", "message": "DACTS not in this PR", "committedDate": "2020-05-12T10:58:42Z", "type": "commit"}, {"oid": "26854690f90b5e760e350d58f487a9fd491ebe02", "url": "https://github.com/palantir/atlasdb/commit/26854690f90b5e760e350d58f487a9fd491ebe02", "message": "baseline", "committedDate": "2020-05-12T10:58:42Z", "type": "commit"}, {"oid": "3161a5d8e38a0e12cef44493a6ff4be4ac230975", "url": "https://github.com/palantir/atlasdb/commit/3161a5d8e38a0e12cef44493a6ff4be4ac230975", "message": "baseline 2", "committedDate": "2020-05-12T10:58:42Z", "type": "commit"}, {"oid": "a7b1fda497e25d0d5741b501b4c7b68d847c40ea", "url": "https://github.com/palantir/atlasdb/commit/a7b1fda497e25d0d5741b501b4c7b68d847c40ea", "message": "baseline", "committedDate": "2020-05-12T10:58:42Z", "type": "commit"}, {"oid": "1506da8d9630d85f96602eb8336dab7623f3ce00", "url": "https://github.com/palantir/atlasdb/commit/1506da8d9630d85f96602eb8336dab7623f3ce00", "message": "Revert \"Add generated changelog entries\"\n\nThis reverts commit f8da751a5606d084f07c9ff120971f36255707fd.", "committedDate": "2020-05-12T10:59:55Z", "type": "commit"}, {"oid": "1506da8d9630d85f96602eb8336dab7623f3ce00", "url": "https://github.com/palantir/atlasdb/commit/1506da8d9630d85f96602eb8336dab7623f3ce00", "message": "Revert \"Add generated changelog entries\"\n\nThis reverts commit f8da751a5606d084f07c9ff120971f36255707fd.", "committedDate": "2020-05-12T10:59:55Z", "type": "forcePushed"}, {"oid": "a7c3f65613bf92dbbf66031f071fd73bb59fea2b", "url": "https://github.com/palantir/atlasdb/commit/a7c3f65613bf92dbbf66031f071fd73bb59fea2b", "message": "CR", "committedDate": "2020-05-12T11:02:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4NDAzMg==", "url": "https://github.com/palantir/atlasdb/pull/4762#discussion_r424084032", "bodyText": "Can utilities like this be package-private? I know you guys don't use revapi right now, but I think if you made more of your stuff package-private maybe you could?", "author": "iamdanfox", "createdAt": "2020-05-12T23:07:55Z", "path": "atlasdb-conjure/src/main/java/com/palantir/atlasdb/http/v2/DialogueClientOptions.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.http.v2;\n+\n+import java.util.Map;\n+\n+import com.palantir.atlasdb.config.AuxiliaryRemotingParameters;\n+import com.palantir.atlasdb.config.ServerListConfig;\n+import com.palantir.common.streams.KeyedStream;\n+import com.palantir.conjure.java.api.config.service.PartialServiceConfiguration;\n+import com.palantir.conjure.java.api.config.service.ServicesConfigBlock;\n+import com.palantir.logsafe.exceptions.SafeIllegalStateException;\n+\n+public final class DialogueClientOptions {", "originalCommit": "a7c3f65613bf92dbbf66031f071fd73bb59fea2b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}