{"pr_number": 5079, "pr_title": "Leader Election Metrics 2a: Server side wiring ", "pr_createdAt": "2020-10-23T09:33:53Z", "pr_url": "https://github.com/palantir/atlasdb/pull/5079", "timeline": [{"oid": "b793264682bb075a7c5a779d5dc334a4302fad95", "url": "https://github.com/palantir/atlasdb/commit/b793264682bb075a7c5a779d5dc334a4302fad95", "message": "Transfer changes from other branches", "committedDate": "2020-10-21T09:27:36Z", "type": "commit"}, {"oid": "ee6bb046be4501552fe35f873a4fade024c877b8", "url": "https://github.com/palantir/atlasdb/commit/ee6bb046be4501552fe35f873a4fade024c877b8", "message": "Pull in the right things", "committedDate": "2020-10-21T14:12:34Z", "type": "commit"}, {"oid": "7d4669f0c72d8fb4a0fad8bc0afb94d414faa88b", "url": "https://github.com/palantir/atlasdb/commit/7d4669f0c72d8fb4a0fad8bc0afb94d414faa88b", "message": "Merge branch 'develop' into le/client-i", "committedDate": "2020-10-21T15:12:01Z", "type": "commit"}, {"oid": "48a3db4d3a5b0bd5f05a87b9d0856c55a8d09738", "url": "https://github.com/palantir/atlasdb/commit/48a3db4d3a5b0bd5f05a87b9d0856c55a8d09738", "message": "rename", "committedDate": "2020-10-21T15:25:12Z", "type": "commit"}, {"oid": "d1f7fa37374952504467f157c810a015c2a507d3", "url": "https://github.com/palantir/atlasdb/commit/d1f7fa37374952504467f157c810a015c2a507d3", "message": "Implementation and some tests", "committedDate": "2020-10-21T22:53:36Z", "type": "commit"}, {"oid": "3a6c460b2eed97fe8352e46c0ce68694e7cafedb", "url": "https://github.com/palantir/atlasdb/commit/3a6c460b2eed97fe8352e46c0ce68694e7cafedb", "message": "Should fix tests", "committedDate": "2020-10-22T08:39:58Z", "type": "commit"}, {"oid": "1c33135c2cf946bed86c415df29eab145cf3fcf5", "url": "https://github.com/palantir/atlasdb/commit/1c33135c2cf946bed86c415df29eab145cf3fcf5", "message": "Make tests great again", "committedDate": "2020-10-22T09:37:12Z", "type": "commit"}, {"oid": "cf458d26cce07fe45302d80a57a03d86bf06fd4c", "url": "https://github.com/palantir/atlasdb/commit/cf458d26cce07fe45302d80a57a03d86bf06fd4c", "message": "Merge with develop", "committedDate": "2020-10-22T14:52:48Z", "type": "commit"}, {"oid": "a3793e6f2fcf9257237d623e0b05b1f6be3f73a6", "url": "https://github.com/palantir/atlasdb/commit/a3793e6f2fcf9257237d623e0b05b1f6be3f73a6", "message": "Bleh", "committedDate": "2020-10-22T16:09:08Z", "type": "commit"}, {"oid": "edb7750726df1240901dc1bc41fb9ce7aaf967c1", "url": "https://github.com/palantir/atlasdb/commit/edb7750726df1240901dc1bc41fb9ce7aaf967c1", "message": "Pull out only necessary files", "committedDate": "2020-10-23T09:28:16Z", "type": "commit"}, {"oid": "a93f810c495937bdee87ac041fb00c6fe09bba50", "url": "https://github.com/palantir/atlasdb/commit/a93f810c495937bdee87ac041fb00c6fe09bba50", "message": "address aggressive autoformat", "committedDate": "2020-10-23T09:35:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDc2MDk2Nw==", "url": "https://github.com/palantir/atlasdb/pull/5079#discussion_r510760967", "bodyText": "I'm not a huge fan, but not sure what the best way to use a gauge here is.", "author": "Jolyon-S", "createdAt": "2020-10-23T09:36:04Z", "path": "timelock-impl/src/main/java/com/palantir/atlasdb/timelock/adjudicate/LeaderElectionMetricAggregator.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.timelock.adjudicate;\n+\n+import com.codahale.metrics.Gauge;\n+import com.palantir.atlasdb.util.MetricsManager;\n+import com.palantir.atlasdb.util.SlidingWindowWeightedMeanGauge;\n+import com.palantir.conjure.java.lib.SafeLong;\n+import com.palantir.timelock.feedback.LeaderElectionStatistics;\n+\n+public final class LeaderElectionMetricAggregator {\n+    private final SlidingWindowWeightedMeanGauge weightedGaugeP99;\n+    private final SlidingWindowWeightedMeanGauge weightedGaugeP95;\n+    private final SlidingWindowWeightedMeanGauge weightedGaugeMean;\n+    private volatile long lastElectionTime = 0L;", "originalCommit": "a93f810c495937bdee87ac041fb00c6fe09bba50", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4a75c069358bbef81d993781a8238a9829fcddad", "url": "https://github.com/palantir/atlasdb/commit/4a75c069358bbef81d993781a8238a9829fcddad", "message": "current value metric", "committedDate": "2020-10-23T09:39:07Z", "type": "commit"}, {"oid": "133bfa79b08a664ddabf141187edbaa8066ccb3c", "url": "https://github.com/palantir/atlasdb/commit/133bfa79b08a664ddabf141187edbaa8066ccb3c", "message": "Cleanup, more tests", "committedDate": "2020-10-23T09:51:07Z", "type": "commit"}, {"oid": "0c19da98f9fef5e3b8da5441f0b262b768a32e97", "url": "https://github.com/palantir/atlasdb/commit/0c19da98f9fef5e3b8da5441f0b262b768a32e97", "message": "add testing to LERTST", "committedDate": "2020-10-23T09:59:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDc3NzIxMg==", "url": "https://github.com/palantir/atlasdb/pull/5079#discussion_r510777212", "bodyText": "Driveby", "author": "Jolyon-S", "createdAt": "2020-10-23T10:05:26Z", "path": "lock-api/src/test/java/com/palantir/lock/client/LeaderElectionReportingTimelockServiceTest.java", "diffHunk": "@@ -197,13 +230,17 @@ private void assertExpectedDuration(Instant instant, Instant instant2) {\n \n     @Value.Immutable\n     interface SingleCall {\n-        @Parameter\n+        @Value.Parameter\n         long requestMillis();\n \n-        @Parameter\n+        @Value.Parameter\n         long responseMillis();\n \n-        @Parameter\n+        @Value.Parameter\n         UUID responseLeader();\n+\n+        static SingleCall of(long requestMillis, long responseMillis, UUID responseLeader) {\n+            return ImmutableSingleCall.of(requestMillis, responseMillis, responseLeader);\n+        }", "originalCommit": "0c19da98f9fef5e3b8da5441f0b262b768a32e97", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDc4MTg1OA==", "url": "https://github.com/palantir/atlasdb/pull/5079#discussion_r510781858", "bodyText": "Have fun rebasing :P", "author": "gmaretic", "createdAt": "2020-10-23T10:14:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDc3NzIxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDc4OTM1MQ==", "url": "https://github.com/palantir/atlasdb/pull/5079#discussion_r510789351", "bodyText": "I will, don't worry", "author": "Jolyon-S", "createdAt": "2020-10-23T10:28:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDc3NzIxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDc4MzIzMg==", "url": "https://github.com/palantir/atlasdb/pull/5079#discussion_r510783232", "bodyText": "Might be better to just not set when empty", "author": "gmaretic", "createdAt": "2020-10-23T10:16:47Z", "path": "timelock-impl/src/main/java/com/palantir/atlasdb/timelock/adjudicate/LeaderElectionMetricAggregator.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.timelock.adjudicate;\n+\n+import com.palantir.atlasdb.util.CurrentValueMetric;\n+import com.palantir.atlasdb.util.MetricsManager;\n+import com.palantir.atlasdb.util.SlidingWindowWeightedMeanGauge;\n+import com.palantir.conjure.java.lib.SafeLong;\n+import com.palantir.timelock.feedback.LeaderElectionStatistics;\n+\n+public final class LeaderElectionMetricAggregator {\n+    private final SlidingWindowWeightedMeanGauge weightedGaugeP99;\n+    private final SlidingWindowWeightedMeanGauge weightedGaugeP95;\n+    private final SlidingWindowWeightedMeanGauge weightedGaugeMean;\n+    private final CurrentValueMetric<Long> lastElectionTime;\n+\n+    public LeaderElectionMetricAggregator(MetricsManager metricsManager) {\n+        weightedGaugeP99 = SlidingWindowWeightedMeanGauge.create();\n+        weightedGaugeP95 = SlidingWindowWeightedMeanGauge.create();\n+        weightedGaugeMean = SlidingWindowWeightedMeanGauge.create();\n+        lastElectionTime = new CurrentValueMetric<>();\n+        metricsManager.registerMetric(\n+                LeaderElectionMetricAggregator.class, \"leaderElectionImpactMean\", weightedGaugeMean);\n+        metricsManager.registerMetric(\n+                LeaderElectionMetricAggregator.class, \"leaderElectionImpactP95\", weightedGaugeP95);\n+        metricsManager.registerMetric(\n+                LeaderElectionMetricAggregator.class, \"leaderElectionImpactP99\", weightedGaugeP99);\n+        metricsManager.registerMetric(LeaderElectionMetricAggregator.class, \"leaderElectionDuration\", lastElectionTime);\n+    }\n+\n+    void report(LeaderElectionStatistics statistics) {\n+        long count = statistics.getCount().longValue();\n+        weightedGaugeMean.update(statistics.getMean(), count);\n+        weightedGaugeP95.update(statistics.getP95(), count);\n+        weightedGaugeP99.update(statistics.getP99(), count);\n+        lastElectionTime.setValue(", "originalCommit": "0c19da98f9fef5e3b8da5441f0b262b768a32e97", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDc5MjQ4OA==", "url": "https://github.com/palantir/atlasdb/pull/5079#discussion_r510792488", "bodyText": "Reasoning here being that, when no election is going on, we might want to set to 0 (else the metric will sit on the previous observed value between elections, which might give the impression that we're having a bad time)", "author": "Jolyon-S", "createdAt": "2020-10-23T10:34:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDc4MzIzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTk3MzE1Nw==", "url": "https://github.com/palantir/atlasdb/pull/5079#discussion_r511973157", "bodyText": "Yeah, still not buying it as that's exactly what the metric is supposed to do: report the last known leader election, and 0 will skew the picture", "author": "gmaretic", "createdAt": "2020-10-26T13:49:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDc4MzIzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDc4Njk1Mw==", "url": "https://github.com/palantir/atlasdb/pull/5079#discussion_r510786953", "bodyText": "There is of course a small race condition here, but it's fine", "author": "gmaretic", "createdAt": "2020-10-23T10:23:40Z", "path": "lock-api/src/main/java/com/palantir/lock/client/LeaderElectionReportingTimelockService.java", "diffHunk": "@@ -115,6 +120,24 @@ public ConjureStartTransactionsResponse startTransactions(ConjureStartTransactio\n                 .logId());\n     }\n \n+    public LeaderElectionStatistics statistics() {\n+        return statisticsWithRegistry(new DefaultTaggedMetricRegistry());\n+    }\n+\n+    @VisibleForTesting\n+    LeaderElectionStatistics statisticsWithRegistry(TaggedMetricRegistry metricRegistry) {\n+        Snapshot metricsSnapshot = metrics.observedDuration().getSnapshot();\n+        LeaderElectionStatistics electionStatistics = LeaderElectionStatistics.builder()\n+                .p99(metricsSnapshot.get99thPercentile())\n+                .p95(metricsSnapshot.get95thPercentile())\n+                .mean(metricsSnapshot.getMean())\n+                .count(SafeLong.of(metrics.observedDuration().getCount()))", "originalCommit": "0c19da98f9fef5e3b8da5441f0b262b768a32e97", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDg3MjYxNw==", "url": "https://github.com/palantir/atlasdb/pull/5079#discussion_r510872617", "bodyText": "Did some digging and I believe that metricSnapshot.size() is equivalent, just without the race condition, so replacing with that.", "author": "Jolyon-S", "createdAt": "2020-10-23T13:10:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDc4Njk1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDc4Njk3NQ==", "url": "https://github.com/palantir/atlasdb/pull/5079#discussion_r510786975", "bodyText": "This is a bit janky, but probably fine for tests. Rename to getStatisticsAndSetRegistryTo or something such?", "author": "gmaretic", "createdAt": "2020-10-23T10:23:41Z", "path": "lock-api/src/main/java/com/palantir/lock/client/LeaderElectionReportingTimelockService.java", "diffHunk": "@@ -115,6 +120,24 @@ public ConjureStartTransactionsResponse startTransactions(ConjureStartTransactio\n                 .logId());\n     }\n \n+    public LeaderElectionStatistics statistics() {\n+        return statisticsWithRegistry(new DefaultTaggedMetricRegistry());\n+    }\n+\n+    @VisibleForTesting\n+    LeaderElectionStatistics statisticsWithRegistry(TaggedMetricRegistry metricRegistry) {", "originalCommit": "0c19da98f9fef5e3b8da5441f0b262b768a32e97", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDc5MzEzMg==", "url": "https://github.com/palantir/atlasdb/pull/5079#discussion_r510793132", "bodyText": "Yea, I hate this but it does make it much easier to test.", "author": "Jolyon-S", "createdAt": "2020-10-23T10:35:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDc4Njk3NQ=="}], "type": "inlineReview"}, {"oid": "a5f6339842ff2cff883413a576c51676803474ec", "url": "https://github.com/palantir/atlasdb/commit/a5f6339842ff2cff883413a576c51676803474ec", "message": "Merge branch 'le/client-ii' into le/server-ia\n\n# Conflicts:\n#\tlock-api/src/main/java/com/palantir/lock/client/LeaderElectionReportingTimelockService.java\n#\tlock-api/src/test/java/com/palantir/lock/client/LeaderElectionReportingTimelockServiceTest.java", "committedDate": "2020-10-23T12:58:04Z", "type": "commit"}, {"oid": "ddf2f72859208dc58405c3192d447bb6bf87f3e4", "url": "https://github.com/palantir/atlasdb/commit/ddf2f72859208dc58405c3192d447bb6bf87f3e4", "message": "comments", "committedDate": "2020-10-23T13:10:07Z", "type": "commit"}, {"oid": "debe1230b0cf305c036e6ecfea76e42e283b4939", "url": "https://github.com/palantir/atlasdb/commit/debe1230b0cf305c036e6ecfea76e42e283b4939", "message": "Merge conflicts, modify duration estimate", "committedDate": "2020-10-26T13:59:52Z", "type": "commit"}, {"oid": "a0b943dfee99c57f8cc9303d26696608a56c1c5d", "url": "https://github.com/palantir/atlasdb/commit/a0b943dfee99c57f8cc9303d26696608a56c1c5d", "message": "Separate changes into new PR", "committedDate": "2020-10-26T17:47:06Z", "type": "commit"}, {"oid": "5657e026f806eb83c67266ee9e137d34a4e766a0", "url": "https://github.com/palantir/atlasdb/commit/5657e026f806eb83c67266ee9e137d34a4e766a0", "message": "very well", "committedDate": "2020-10-28T11:19:35Z", "type": "commit"}, {"oid": "085ceb503114178256a6d2ee5714be00d439b290", "url": "https://github.com/palantir/atlasdb/commit/085ceb503114178256a6d2ee5714be00d439b290", "message": "revert", "committedDate": "2020-10-28T11:21:14Z", "type": "commit"}]}