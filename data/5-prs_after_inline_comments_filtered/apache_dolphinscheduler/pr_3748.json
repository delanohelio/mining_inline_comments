{"pr_number": 3748, "pr_title": "[Fix-3616][Server] when worker akc/response master exception , async retry", "pr_createdAt": "2020-09-15T06:07:26Z", "pr_url": "https://github.com/apache/dolphinscheduler/pull/3748", "timeline": [{"oid": "0fef52c4ffe8c7f1e13db0209188171191741a4a", "url": "https://github.com/apache/dolphinscheduler/commit/0fef52c4ffe8c7f1e13db0209188171191741a4a", "message": "[Fix-3616][Server] when worker akc/response master exception , async retry", "committedDate": "2020-09-14T08:38:47Z", "type": "commit"}, {"oid": "669419b7a573170866dc26c6c112bf8028393ce0", "url": "https://github.com/apache/dolphinscheduler/commit/669419b7a573170866dc26c6c112bf8028393ce0", "message": "[Fix-3616][Server] when worker akc/response master exception , async retry", "committedDate": "2020-09-14T11:45:43Z", "type": "commit"}, {"oid": "8aba5aa7334343da39cf91de78b5bf38a942c1c0", "url": "https://github.com/apache/dolphinscheduler/commit/8aba5aa7334343da39cf91de78b5bf38a942c1c0", "message": "[Fix-3616][Server] when worker akc/response master exception , async retry", "committedDate": "2020-09-15T03:28:50Z", "type": "commit"}, {"oid": "df1d6091c37476f5073318af631960c904678842", "url": "https://github.com/apache/dolphinscheduler/commit/df1d6091c37476f5073318af631960c904678842", "message": "[Fix-3616][Server] when worker akc/response master exception , async retry", "committedDate": "2020-09-15T03:32:14Z", "type": "commit"}, {"oid": "2383b92b59e9b4257b175d99cacfd6ed8a655722", "url": "https://github.com/apache/dolphinscheduler/commit/2383b92b59e9b4257b175d99cacfd6ed8a655722", "message": "[Fix-3616][Server] when worker akc/response master exception , async retry", "committedDate": "2020-09-15T07:32:37Z", "type": "commit"}, {"oid": "02bd10d6b5d74c2056b0e1b83334ac7114b1af03", "url": "https://github.com/apache/dolphinscheduler/commit/02bd10d6b5d74c2056b0e1b83334ac7114b1af03", "message": "[Fix-3616][Server] when worker akc/response master exception , async retry", "committedDate": "2020-09-15T07:51:06Z", "type": "commit"}, {"oid": "d5fbb9d95c057633192c0dfceb34d4e8d8ed80d2", "url": "https://github.com/apache/dolphinscheduler/commit/d5fbb9d95c057633192c0dfceb34d4e8d8ed80d2", "message": "[Fix-3616][Server] when worker akc/response master exception , async retry", "committedDate": "2020-09-15T09:06:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE1Mzg4MA==", "url": "https://github.com/apache/dolphinscheduler/pull/3748#discussion_r489153880", "bodyText": "pelase remove ^M", "author": "dailidong", "createdAt": "2020-09-16T04:26:43Z", "path": "dolphinscheduler-remote/src/main/java/org/apache/dolphinscheduler/remote/command/CommandType.java", "diffHunk": "@@ -1 +1 @@\n-/*\r * Licensed to the Apache Software Foundation (ASF) under one or more\r * contributor license agreements.  See the NOTICE file distributed with\r * this work for additional information regarding copyright ownership.\r * The ASF licenses this file to You under the Apache License, Version 2.0\r * (the \"License\"); you may not use this file except in compliance with\r * the License.  You may obtain a copy of the License at\r *\r *    http://www.apache.org/licenses/LICENSE-2.0\r *\r * Unless required by applicable law or agreed to in writing, software\r * distributed under the License is distributed on an \"AS IS\" BASIS,\r * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r * See the License for the specific language governing permissions and\r * limitations under the License.\r */\rpackage org.apache.dolphinscheduler.remote.command;\r\r\rpublic enum CommandType {\r\r    /**\r     * remove task log request,\r     */\r    REMOVE_TAK_LOG_REQUEST,\r\r    /**\r     * remove task log response\r     */\r    REMOVE_TAK_LOG_RESPONSE,\r\r    /**\r     *  roll view log request\r     */\r    ROLL_VIEW_LOG_REQUEST,\r\r    /**\r     *  roll view log response\r     */\r    ROLL_VIEW_LOG_RESPONSE,\r\r    /**\r     * view whole log request\r     */\r    VIEW_WHOLE_LOG_REQUEST,\r\r    /**\r     * view whole log response\r     */\r    VIEW_WHOLE_LOG_RESPONSE,\r\r    /**\r     * get log bytes request\r     */\r    GET_LOG_BYTES_REQUEST,\r\r    /**\r     * get log bytes response\r     */\r    GET_LOG_BYTES_RESPONSE,\r\r\r    WORKER_REQUEST,\r    MASTER_RESPONSE,\r\r    /**\r     * execute task request\r     */\r    TASK_EXECUTE_REQUEST,\r\r    /**\r     * execute task ack\r     */\r    TASK_EXECUTE_ACK,\r\r    /**\r     * execute task response\r     */\r    TASK_EXECUTE_RESPONSE,\r\r    /**\r     * kill task\r     */\r    TASK_KILL_REQUEST,\r\r    /**\r     * kill task response\r     */\r    TASK_KILL_RESPONSE,\r\r    /**\r     *  ping\r     */\r    PING,\r\r    /**\r     *  pong\r     */\r    PONG;\r}\r\n\\ No newline at end of file\n+/*\r * Licensed to the Apache Software Foundation (ASF) under one or more\r * contributor license agreements.  See the NOTICE file distributed with\r * this work for additional information regarding copyright ownership.\r * The ASF licenses this file to You under the Apache License, Version 2.0\r * (the \"License\"); you may not use this file except in compliance with\r * the License.  You may obtain a copy of the License at\r *\r *    http://www.apache.org/licenses/LICENSE-2.0\r *\r * Unless required by applicable law or agreed to in writing, software\r * distributed under the License is distributed on an \"AS IS\" BASIS,\r * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r * See the License for the specific language governing permissions and\r * limitations under the License.\r */\rpackage org.apache.dolphinscheduler.remote.command;\r\r\rpublic enum CommandType {\r\r    /**\r     * remove task log request,\r     */\r    REMOVE_TAK_LOG_REQUEST,\r\r    /**\r     * remove task log response\r     */\r    REMOVE_TAK_LOG_RESPONSE,\r\r    /**\r     *  roll view log request\r     */\r    ROLL_VIEW_LOG_REQUEST,\r\r    /**\r     *  roll view log response\r     */\r    ROLL_VIEW_LOG_RESPONSE,\r\r    /**\r     * view whole log request\r     */\r    VIEW_WHOLE_LOG_REQUEST,\r\r    /**\r     * view whole log response\r     */\r    VIEW_WHOLE_LOG_RESPONSE,\r\r    /**\r     * get log bytes request\r     */\r    GET_LOG_BYTES_REQUEST,\r\r    /**\r     * get log bytes response\r     */\r    GET_LOG_BYTES_RESPONSE,\r\r\r    WORKER_REQUEST,\r    MASTER_RESPONSE,\r\r    /**\r     * execute task request\r     */\r    TASK_EXECUTE_REQUEST,\r\r    /**\r     * execute task ack\r     */\r    TASK_EXECUTE_ACK,\r\r    /**\r     * execute task response\r     */\r    TASK_EXECUTE_RESPONSE,\r\r    /**\r     * db task ack\r     */\r    DB_TASK_ACK,\r\r    /**\r     * db task response\r     */\r    DB_TASK_RESPONSE,\r\r    /**\r     * kill task\r     */\r    TASK_KILL_REQUEST,\r\r    /**\r     * kill task response\r     */\r    TASK_KILL_RESPONSE,\r\r    /**\r     *  ping\r     */\r    PING,\r\r    /**\r     *  pong\r     */\r    PONG;\r}\r", "originalCommit": "d5fbb9d95c057633192c0dfceb34d4e8d8ed80d2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIyMDAxOQ==", "url": "https://github.com/apache/dolphinscheduler/pull/3748#discussion_r489220019", "bodyText": "resloved", "author": "qiaozhanwei", "createdAt": "2020-09-16T07:25:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE1Mzg4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE1ODAyNQ==", "url": "https://github.com/apache/dolphinscheduler/pull/3748#discussion_r489158025", "bodyText": "Which service starts this ?", "author": "Technoboy-", "createdAt": "2020-09-16T04:43:27Z", "path": "dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/worker/runner/RetryReportTaskStatusThread.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.dolphinscheduler.server.worker.runner;\n+\n+import org.apache.dolphinscheduler.common.thread.Stopper;\n+\n+import org.apache.dolphinscheduler.common.thread.ThreadUtils;\n+import org.apache.dolphinscheduler.remote.command.Command;\n+import org.apache.dolphinscheduler.server.worker.cache.ResponceCache;\n+import org.apache.dolphinscheduler.server.worker.processor.TaskCallbackService;\n+import org.apache.dolphinscheduler.service.bean.SpringApplicationContext;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+import java.util.Map;\n+\n+/**\n+ * Retry Report Task Status Thread\n+ */\n+@Component\n+public class RetryReportTaskStatusThread implements Runnable {\n+\n+    private final Logger logger = LoggerFactory.getLogger(RetryReportTaskStatusThread.class);\n+\n+    /**\n+     * every 5 minutes\n+     */\n+    private static long RETRY_REPORT_TASK_STATUS_TIME = 5 * 60 * 1000L;\n+    /**\n+     *  task callback service\n+     */\n+    private final TaskCallbackService taskCallbackService;\n+\n+    public void start(){", "originalCommit": "d5fbb9d95c057633192c0dfceb34d4e8d8ed80d2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIxOTc0NQ==", "url": "https://github.com/apache/dolphinscheduler/pull/3748#discussion_r489219745", "bodyText": "WorkerServer\n// retry report task status\nthis.retryReportTaskStatusThread.start();", "author": "qiaozhanwei", "createdAt": "2020-09-16T07:24:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE1ODAyNQ=="}], "type": "inlineReview"}, {"oid": "177cf0fea33b42a3c5ce6f68aca898d8278dbc25", "url": "https://github.com/apache/dolphinscheduler/commit/177cf0fea33b42a3c5ce6f68aca898d8278dbc25", "message": "[Fix-3616][Server] when worker akc/response master exception , async retry", "committedDate": "2020-09-16T06:07:35Z", "type": "commit"}, {"oid": "8231036913dfa11da2dd3d4abf3781df92058acd", "url": "https://github.com/apache/dolphinscheduler/commit/8231036913dfa11da2dd3d4abf3781df92058acd", "message": "[Fix-3616][Server] when worker akc/response master exception , async retry", "committedDate": "2020-09-16T06:08:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI3ODgxMA==", "url": "https://github.com/apache/dolphinscheduler/pull/3748#discussion_r489278810", "bodyText": "Miss java doc", "author": "Technoboy-", "createdAt": "2020-09-16T09:00:02Z", "path": "dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/worker/cache/ResponceCache.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.dolphinscheduler.server.worker.cache;\n+\n+import org.apache.dolphinscheduler.common.enums.Event;\n+import org.apache.dolphinscheduler.remote.command.Command;\n+\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+public class ResponceCache {", "originalCommit": "8231036913dfa11da2dd3d4abf3781df92058acd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI4OTI2Mg==", "url": "https://github.com/apache/dolphinscheduler/pull/3748#discussion_r489289262", "bodyText": "ok", "author": "qiaozhanwei", "createdAt": "2020-09-16T09:16:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI3ODgxMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI3OTgyNg==", "url": "https://github.com/apache/dolphinscheduler/pull/3748#discussion_r489279826", "bodyText": "opaque should be -1 is much better.  we can locate the issue easily.", "author": "Technoboy-", "createdAt": "2020-09-16T09:01:36Z", "path": "dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/worker/processor/NettyRemoteChannel.java", "diffHunk": "@@ -43,13 +45,21 @@\n      */\n     private final Host host;\n \n+    private final Random random = new Random();\n+\n \n     public NettyRemoteChannel(Channel channel, long opaque) {\n         this.channel = channel;\n         this.host = ChannelUtils.toAddress(channel);\n         this.opaque = opaque;\n     }\n \n+    public NettyRemoteChannel(Channel channel) {\n+        this.channel = channel;\n+        this.host = ChannelUtils.toAddress(channel);\n+        this.opaque = random.nextLong();", "originalCommit": "8231036913dfa11da2dd3d4abf3781df92058acd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI4OTM4Mg==", "url": "https://github.com/apache/dolphinscheduler/pull/3748#discussion_r489289382", "bodyText": "ok", "author": "qiaozhanwei", "createdAt": "2020-09-16T09:16:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI3OTgyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI4MDUxMg==", "url": "https://github.com/apache/dolphinscheduler/pull/3748#discussion_r489280512", "bodyText": "Rename to add", "author": "Technoboy-", "createdAt": "2020-09-16T09:02:39Z", "path": "dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/worker/cache/ResponceCache.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.dolphinscheduler.server.worker.cache;\n+\n+import org.apache.dolphinscheduler.common.enums.Event;\n+import org.apache.dolphinscheduler.remote.command.Command;\n+\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+public class ResponceCache {\n+\n+    private static final ResponceCache instance = new ResponceCache();\n+\n+    private ResponceCache(){}\n+\n+    public static ResponceCache get(){\n+        return instance;\n+    }\n+\n+    private Map<Integer,Command> ackCache = new ConcurrentHashMap<>();\n+    private Map<Integer,Command> responseCache = new ConcurrentHashMap<>();\n+\n+\n+    public void cache(Integer taskInstanceId, Command command, Event event){", "originalCommit": "8231036913dfa11da2dd3d4abf3781df92058acd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI5MDM5Nw==", "url": "https://github.com/apache/dolphinscheduler/pull/3748#discussion_r489290397", "bodyText": "cache maybe express my idea", "author": "qiaozhanwei", "createdAt": "2020-09-16T09:18:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI4MDUxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTg3OTA4NA==", "url": "https://github.com/apache/dolphinscheduler/pull/3748#discussion_r489879084", "bodyText": "For the class Name XXXCache.", "author": "Technoboy-", "createdAt": "2020-09-17T02:06:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI4MDUxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI4MTA0MA==", "url": "https://github.com/apache/dolphinscheduler/pull/3748#discussion_r489281040", "bodyText": "Should sleep.", "author": "Technoboy-", "createdAt": "2020-09-16T09:03:30Z", "path": "dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/worker/runner/RetryReportTaskStatusThread.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.dolphinscheduler.server.worker.runner;\n+\n+import org.apache.dolphinscheduler.common.thread.Stopper;\n+\n+import org.apache.dolphinscheduler.common.thread.ThreadUtils;\n+import org.apache.dolphinscheduler.remote.command.Command;\n+import org.apache.dolphinscheduler.server.worker.cache.ResponceCache;\n+import org.apache.dolphinscheduler.server.worker.processor.TaskCallbackService;\n+import org.apache.dolphinscheduler.service.bean.SpringApplicationContext;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+import java.util.Map;\n+\n+/**\n+ * Retry Report Task Status Thread\n+ */\n+@Component\n+public class RetryReportTaskStatusThread implements Runnable {\n+\n+    private final Logger logger = LoggerFactory.getLogger(RetryReportTaskStatusThread.class);\n+\n+    /**\n+     * every 5 minutes\n+     */\n+    private static long RETRY_REPORT_TASK_STATUS_TIME = 5 * 60 * 1000L;\n+    /**\n+     *  task callback service\n+     */\n+    private final TaskCallbackService taskCallbackService;\n+\n+    public void start(){\n+        Thread thread = new Thread(this,\"RetryReportTaskStatusThread\");\n+        thread.start();\n+    }\n+\n+    public RetryReportTaskStatusThread(){\n+        this.taskCallbackService = SpringApplicationContext.getBean(TaskCallbackService.class);\n+    }\n+    @Override\n+    public void run() {\n+        ResponceCache responceCache = ResponceCache.get();\n+\n+        while (Stopper.isRunning()){\n+            if (responceCache.getAckCache().isEmpty() && responceCache.getResponseCache().isEmpty()){\n+                continue;", "originalCommit": "8231036913dfa11da2dd3d4abf3781df92058acd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI4NjQyOA==", "url": "https://github.com/apache/dolphinscheduler/pull/3748#discussion_r489286428", "bodyText": "ok", "author": "qiaozhanwei", "createdAt": "2020-09-16T09:12:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI4MTA0MA=="}], "type": "inlineReview"}, {"oid": "f2b9e254da8b70dd02b8d63dc5b427a771aa62a1", "url": "https://github.com/apache/dolphinscheduler/commit/f2b9e254da8b70dd02b8d63dc5b427a771aa62a1", "message": "[Fix-3616][Server] when worker akc/response master exception , async retry", "committedDate": "2020-09-16T10:17:36Z", "type": "commit"}]}