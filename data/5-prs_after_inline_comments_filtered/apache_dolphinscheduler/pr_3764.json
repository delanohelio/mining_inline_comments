{"pr_number": 3764, "pr_title": "[Improvement][API] simplify with stream", "pr_createdAt": "2020-09-18T01:44:20Z", "pr_url": "https://github.com/apache/dolphinscheduler/pull/3764", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg4OTI4Nw==", "url": "https://github.com/apache/dolphinscheduler/pull/3764#discussion_r490889287", "bodyText": "Filter here is for - AbstractParameters.  not for params.getResourceFilesList(). please check.", "author": "Technoboy-", "createdAt": "2020-09-18T11:37:54Z", "path": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/impl/ProcessDefinitionServiceImpl.java", "diffHunk": "@@ -232,25 +232,14 @@\n      * @return resource ids\n      */\n     private String getResourceIds(ProcessData processData) {\n-        List<TaskNode> tasks = processData.getTasks();\n-        Set<Integer> resourceIds = new HashSet<>();\n-        for (TaskNode taskNode : tasks) {\n-            String taskParameter = taskNode.getParams();\n-            AbstractParameters params = TaskParametersUtils.getParameters(taskNode.getType(), taskParameter);\n-            if (CollectionUtils.isNotEmpty(params.getResourceFilesList())) {\n-                Set<Integer> tempSet = params.getResourceFilesList().stream().map(t -> t.getId()).collect(Collectors.toSet());\n-                resourceIds.addAll(tempSet);\n-            }\n-        }\n-\n-        StringBuilder sb = new StringBuilder();\n-        for (int i : resourceIds) {\n-            if (sb.length() > 0) {\n-                sb.append(\",\");\n-            }\n-            sb.append(i);\n-        }\n-        return sb.toString();\n+        return processData.getTasks()\n+                .stream()\n+                .map(taskNode -> TaskParametersUtils.getParameters(taskNode.getType(), taskNode.getParams()))\n+                .filter(Objects::nonNull)", "originalCommit": "c0fa5fc0b9d4dc3ed4416c13f6a8557505c1d555", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ef50a3779def5de352df864c174c6fec99875ea7", "url": "https://github.com/apache/dolphinscheduler/commit/ef50a3779def5de352df864c174c6fec99875ea7", "message": "simplify with stream", "committedDate": "2020-09-22T02:43:18Z", "type": "commit"}, {"oid": "8eb50f62711ce702fdb9c4d3a3aac3d92bbbc981", "url": "https://github.com/apache/dolphinscheduler/commit/8eb50f62711ce702fdb9c4d3a3aac3d92bbbc981", "message": "add distinct", "committedDate": "2020-09-22T02:43:18Z", "type": "commit"}, {"oid": "34b8f5f503c262feed12e6e8364e0ddf82eaa824", "url": "https://github.com/apache/dolphinscheduler/commit/34b8f5f503c262feed12e6e8364e0ddf82eaa824", "message": "compatible tasks is null", "committedDate": "2020-09-22T02:43:18Z", "type": "commit"}, {"oid": "0939375780c0ab1165d35991c9b90d20d5ad8f4f", "url": "https://github.com/apache/dolphinscheduler/commit/0939375780c0ab1165d35991c9b90d20d5ad8f4f", "message": "add unit test", "committedDate": "2020-09-22T02:43:18Z", "type": "forcePushed"}, {"oid": "b89682751030a4d85945efdc2ef7f6c1e9709e60", "url": "https://github.com/apache/dolphinscheduler/commit/b89682751030a4d85945efdc2ef7f6c1e9709e60", "message": "add unit test", "committedDate": "2020-09-22T02:57:16Z", "type": "commit"}, {"oid": "b89682751030a4d85945efdc2ef7f6c1e9709e60", "url": "https://github.com/apache/dolphinscheduler/commit/b89682751030a4d85945efdc2ef7f6c1e9709e60", "message": "add unit test", "committedDate": "2020-09-22T02:57:16Z", "type": "forcePushed"}]}