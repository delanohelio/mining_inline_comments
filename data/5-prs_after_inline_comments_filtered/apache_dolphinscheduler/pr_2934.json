{"pr_number": 2934, "pr_title": "[Feature-2815][server] One worker can belong to different workergroups", "pr_createdAt": "2020-06-09T07:39:51Z", "pr_url": "https://github.com/apache/dolphinscheduler/pull/2934", "timeline": [{"oid": "476f7877df2a7c88a34fa0c030da1ca043ec63a3", "url": "https://github.com/apache/dolphinscheduler/commit/476f7877df2a7c88a34fa0c030da1ca043ec63a3", "message": "[Feature-2815][server] One worker can belong to different workergroups", "committedDate": "2020-06-16T13:01:12Z", "type": "forcePushed"}, {"oid": "425fc002afaa0163e71e20ab78dc70e4f5c8f5fe", "url": "https://github.com/apache/dolphinscheduler/commit/425fc002afaa0163e71e20ab78dc70e4f5c8f5fe", "message": "[Feature-2815][server] One worker can belong to different workergroups", "committedDate": "2020-06-19T07:10:12Z", "type": "forcePushed"}, {"oid": "c8e389133811a95a095c7000dbb6971941d448ce", "url": "https://github.com/apache/dolphinscheduler/commit/c8e389133811a95a095c7000dbb6971941d448ce", "message": "Feature: optimize the worker mutigroups web UI and remove the duplicated code", "committedDate": "2020-06-23T14:36:58Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgwNjE1Mw==", "url": "https://github.com/apache/dolphinscheduler/pull/2934#discussion_r446806153", "bodyText": "Hello, is it possible to return directly here without continuing to judge? In addition, it is not very intuitive to flood with too many if else", "author": "CalvinKirs", "createdAt": "2020-06-29T06:47:44Z", "path": "dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/worker/registry/WorkerRegistry.java", "diffHunk": "@@ -86,34 +90,39 @@ public void init(){\n      */\n     public void registry() {\n         String address = OSUtils.getHost();\n-        String localNodePath = getWorkerPath();\n-        zookeeperRegistryCenter.getZookeeperCachedOperator().persistEphemeral(localNodePath, \"\");\n-        zookeeperRegistryCenter.getZookeeperCachedOperator().getZkClient().getConnectionStateListenable().addListener(new ConnectionStateListener() {\n-            @Override\n-            public void stateChanged(CuratorFramework client, ConnectionState newState) {\n-                if(newState == ConnectionState.LOST){\n-                    logger.error(\"worker : {} connection lost from zookeeper\", address);\n-                } else if(newState == ConnectionState.RECONNECTED){\n-                    logger.info(\"worker : {} reconnected to zookeeper\", address);\n-                    zookeeperRegistryCenter.getZookeeperCachedOperator().persistEphemeral(localNodePath, \"\");\n-                } else if(newState == ConnectionState.SUSPENDED){\n-                    logger.warn(\"worker : {} connection SUSPENDED \", address);\n-                }\n-            }\n-        });\n+        Set<String> workerZkPaths = getWorkerZkPaths();\n         int workerHeartbeatInterval = workerConfig.getWorkerHeartbeatInterval();\n-        this.heartBeatExecutor.scheduleAtFixedRate(new HeartBeatTask(), workerHeartbeatInterval, workerHeartbeatInterval, TimeUnit.SECONDS);\n-        logger.info(\"worker node : {} registry to ZK successfully with heartBeatInterval : {}s\", address, workerHeartbeatInterval);\n \n+        for (String workerZKPath : workerZkPaths) {\n+            zookeeperRegistryCenter.getZookeeperCachedOperator().persistEphemeral(workerZKPath, \"\");\n+            zookeeperRegistryCenter.getZookeeperCachedOperator().getZkClient().getConnectionStateListenable().addListener(new ConnectionStateListener() {\n+                @Override\n+                public void stateChanged(CuratorFramework client, ConnectionState newState) {\n+                    if (newState == ConnectionState.LOST) {\n+                        logger.error(\"worker : {} connection lost from zookeeper\", address);\n+                    } else if (newState == ConnectionState.RECONNECTED) {\n+                        logger.info(\"worker : {} reconnected to zookeeper\", address);\n+                        zookeeperRegistryCenter.getZookeeperCachedOperator().persistEphemeral(workerZKPath, \"\");\n+                    } else if (newState == ConnectionState.SUSPENDED) {\n+                        logger.warn(\"worker : {} connection SUSPENDED \", address);\n+                    }", "originalCommit": "c8e389133811a95a095c7000dbb6971941d448ce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjkwNzY1Nw==", "url": "https://github.com/apache/dolphinscheduler/pull/2934#discussion_r446907657", "bodyText": "Hello, is it possible to return directly here without continuing to judge? In addition, it is not very intuitive to flood with too many if else\n\nHi, Thx a lot for your review.\nCan you describe your opinion about why it need return directly? I think this is an important step for users to debug zk or worker status errors.", "author": "yangyichao-mango", "createdAt": "2020-06-29T11:46:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgwNjE1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUwMzcyMw==", "url": "https://github.com/apache/dolphinscheduler/pull/2934#discussion_r447503723", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            public void stateChanged(CuratorFramework client, ConnectionState newState) {\n          \n          \n            \n                                if (newState == ConnectionState.LOST) {\n          \n          \n            \n                                    logger.error(\"worker : {} connection lost from zookeeper\", address);\n          \n          \n            \n                                } else if (newState == ConnectionState.RECONNECTED) {\n          \n          \n            \n                                    logger.info(\"worker : {} reconnected to zookeeper\", address);\n          \n          \n            \n                                    zookeeperRegistryCenter.getZookeeperCachedOperator().persistEphemeral(workerZKPath, \"\");\n          \n          \n            \n                                } else if (newState == ConnectionState.SUSPENDED) {\n          \n          \n            \n                                    logger.warn(\"worker : {} connection SUSPENDED \", address);\n          \n          \n            \n                                }\n          \n          \n            \n                            public void stateChanged(CuratorFramework client, ConnectionState newState) {\n          \n          \n            \n                                if (newState == ConnectionState.LOST) {\n          \n          \n            \n                                    logger.error(\"worker : {} connection lost from zookeeper\", address);\n          \n          \n            \n                                    return;\n          \n          \n            \n                                } \n          \n          \n            \n                                 if (newState == ConnectionState.RECONNECTED) {\n          \n          \n            \n                                    logger.info(\"worker : {} reconnected to zookeeper\", address);\n          \n          \n            \n                                    zookeeperRegistryCenter.getZookeeperCachedOperator().persistEphemeral(workerZKPath, \"\");\n          \n          \n            \n                                    return ;\n          \n          \n            \n                                } \n          \n          \n            \n                                 if (newState == ConnectionState.SUSPENDED) {\n          \n          \n            \n                                    logger.warn(\"worker : {} connection SUSPENDED \", address);\n          \n          \n            \n                                    return;\n          \n          \n            \n                                }\n          \n      \n    \n    \n  \n\nThis is my suggestion, what do you think,", "author": "CalvinKirs", "createdAt": "2020-06-30T08:25:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgwNjE1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU0MzU0Ng==", "url": "https://github.com/apache/dolphinscheduler/pull/2934#discussion_r447543546", "bodyText": "This is my suggestion, what do you think,\n\nThx a lot for your review.\nI got your point, and can you describe your opinion about what is the benefits of using\nif (a) { xxx; return;}  if (b) { xxx; return; } but not if (a) { xxx; } else if (b) {xxx;} ?", "author": "yangyichao-mango", "createdAt": "2020-06-30T09:26:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgwNjE1Mw=="}], "type": "inlineReview"}, {"oid": "26560b24bcb917f2c68d7990ceef902198ed387f", "url": "https://github.com/apache/dolphinscheduler/commit/26560b24bcb917f2c68d7990ceef902198ed387f", "message": "Feature: optimize the worker mutigroups web UI and remove the duplicated code", "committedDate": "2020-07-02T13:36:57Z", "type": "forcePushed"}, {"oid": "f53450b255c385707cc1ff1b40bddd0ab1f9770c", "url": "https://github.com/apache/dolphinscheduler/commit/f53450b255c385707cc1ff1b40bddd0ab1f9770c", "message": "Feature: add test and optimize code style", "committedDate": "2020-07-03T04:25:54Z", "type": "forcePushed"}, {"oid": "db9de61656c5d44f7c1fbb45a1cd151154ec38ec", "url": "https://github.com/apache/dolphinscheduler/commit/db9de61656c5d44f7c1fbb45a1cd151154ec38ec", "message": "[Feature-2815][server] One worker can belong to different workergroups", "committedDate": "2020-07-03T06:58:03Z", "type": "commit"}, {"oid": "db9de61656c5d44f7c1fbb45a1cd151154ec38ec", "url": "https://github.com/apache/dolphinscheduler/commit/db9de61656c5d44f7c1fbb45a1cd151154ec38ec", "message": "[Feature-2815][server] One worker can belong to different workergroups", "committedDate": "2020-07-03T06:58:03Z", "type": "forcePushed"}, {"oid": "40f9f25ad20343def37e914ef28f5a183d16e8a2", "url": "https://github.com/apache/dolphinscheduler/commit/40f9f25ad20343def37e914ef28f5a183d16e8a2", "message": "Feature: Add test cases", "committedDate": "2020-07-03T10:00:41Z", "type": "forcePushed"}, {"oid": "8cf4cb1ebb0b5d19811aee1dae1a6850ed00fd7f", "url": "https://github.com/apache/dolphinscheduler/commit/8cf4cb1ebb0b5d19811aee1dae1a6850ed00fd7f", "message": "Feature: Add test cases", "committedDate": "2020-07-04T10:59:38Z", "type": "commit"}, {"oid": "8cf4cb1ebb0b5d19811aee1dae1a6850ed00fd7f", "url": "https://github.com/apache/dolphinscheduler/commit/8cf4cb1ebb0b5d19811aee1dae1a6850ed00fd7f", "message": "Feature: Add test cases", "committedDate": "2020-07-04T10:59:38Z", "type": "forcePushed"}, {"oid": "8f18b15856281db1463d16671c3f1b1fe05cbe10", "url": "https://github.com/apache/dolphinscheduler/commit/8f18b15856281db1463d16671c3f1b1fe05cbe10", "message": "Merge branch 'dev' into feature-2591", "committedDate": "2020-07-09T16:05:21Z", "type": "commit"}, {"oid": "9b4c48ff34dbe92b6a602a69b56df49967e14c83", "url": "https://github.com/apache/dolphinscheduler/commit/9b4c48ff34dbe92b6a602a69b56df49967e14c83", "message": "Merge branch 'dev' into feature-2591", "committedDate": "2020-07-10T23:46:37Z", "type": "commit"}, {"oid": "e0625c980c09e49d245d8f2d877f944d9c21a141", "url": "https://github.com/apache/dolphinscheduler/commit/e0625c980c09e49d245d8f2d877f944d9c21a141", "message": "Merge branch 'dev' into feature-2591", "committedDate": "2020-07-11T03:56:17Z", "type": "commit"}, {"oid": "f28c10d81492d6cd57d90ecbb5f911d7b1284e49", "url": "https://github.com/apache/dolphinscheduler/commit/f28c10d81492d6cd57d90ecbb5f911d7b1284e49", "message": "Update MonitorService.java", "committedDate": "2020-07-12T00:44:05Z", "type": "commit"}, {"oid": "cee62daa6d86f20c6c330f753d0ac9e0c4b0ee77", "url": "https://github.com/apache/dolphinscheduler/commit/cee62daa6d86f20c6c330f753d0ac9e0c4b0ee77", "message": "Merge branch 'dev' into feature-2591", "committedDate": "2020-07-12T00:44:25Z", "type": "commit"}, {"oid": "799245acd86c0d27d029d2816946176606eb8e1f", "url": "https://github.com/apache/dolphinscheduler/commit/799245acd86c0d27d029d2816946176606eb8e1f", "message": "Update MonitorService.java", "committedDate": "2020-07-13T04:59:58Z", "type": "commit"}, {"oid": "920b7f58ecd8ddf9d542101de7e3d1c34ab62c60", "url": "https://github.com/apache/dolphinscheduler/commit/920b7f58ecd8ddf9d542101de7e3d1c34ab62c60", "message": "Merge branch 'dev' into feature-2591", "committedDate": "2020-07-13T09:11:03Z", "type": "commit"}]}