{"pr_number": 734, "pr_title": "feat(plugins): Add remote plugin info release cache for plugins that contain remote extensions, add kork-api module", "pr_createdAt": "2020-08-05T21:44:50Z", "pr_url": "https://github.com/spinnaker/kork/pull/734", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjAyMjI3Nw==", "url": "https://github.com/spinnaker/kork/pull/734#discussion_r466022277", "bodyText": "If we think it makes sense to move this here I will make the necessary front50 update.", "author": "jonsie", "createdAt": "2020-08-05T21:45:25Z", "path": "kork-api/src/main/java/com/netflix/spinnaker/kork/api/plugins/remote/RemoteExtension.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Copyright 2020 Netflix, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package com.netflix.spinnaker.kork.api.plugins.remote;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+\n+/**\n+ * A Spinnaker plugin's remote extension configuration.\n+ *\n+ * <p>This model is used by Spinnaker to determine which extension points and services require\n+ * remote extension point configuration.\n+ *\n+ * <p>The plugin release {@link SpinnakerPluginInfo.Release#requires} field is used to inform\n+ * Spinnaker which service to use in configuring the extension point {@link #type} and additionally\n+ * if the remote extension is compatible with the running version of the Spinnaker service.\n+ */\n+@Data\n+@NoArgsConstructor\n+public class RemoteExtension {", "originalCommit": "81efaf9eed451f0259c32bf710dece96073d56f1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjAyMjU5Mw==", "url": "https://github.com/spinnaker/kork/pull/734#discussion_r466022593", "bodyText": "After thinking it over and based on some feedback from @robzienert I think it may make more sense to leave this untyped and then allow the specific service (Orca, Keel, etc) to map it to a specific remote extension config object.  This gives us more flexibility.", "author": "jonsie", "createdAt": "2020-08-05T21:46:07Z", "path": "kork-api/src/main/java/com/netflix/spinnaker/kork/api/plugins/remote/RemoteExtension.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Copyright 2020 Netflix, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package com.netflix.spinnaker.kork.api.plugins.remote;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+\n+/**\n+ * A Spinnaker plugin's remote extension configuration.\n+ *\n+ * <p>This model is used by Spinnaker to determine which extension points and services require\n+ * remote extension point configuration.\n+ *\n+ * <p>The plugin release {@link SpinnakerPluginInfo.Release#requires} field is used to inform\n+ * Spinnaker which service to use in configuring the extension point {@link #type} and additionally\n+ * if the remote extension is compatible with the running version of the Spinnaker service.\n+ */\n+@Data\n+@NoArgsConstructor\n+public class RemoteExtension {\n+\n+  /**\n+   * The remote extension type. The remote extension is configured in the service that implements\n+   * this extension type.\n+   */\n+  @Nonnull private String type;\n+\n+  /** Identifier of the remote extension. Used for tracing. */\n+  @Nonnull private String id;\n+\n+  /**\n+   * Outbound transport configuration for the remote extension point; the protocol to address it\n+   * with and the necessary configuration.\n+   */\n+  @Nonnull private RemoteExtensionTransport transport = new RemoteExtensionTransport();\n+\n+  /** Configures the remote extension point. */\n+  @Nullable private Map<String, Object> config;", "originalCommit": "81efaf9eed451f0259c32bf710dece96073d56f1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjAyMzMzNw==", "url": "https://github.com/spinnaker/kork/pull/734#discussion_r466023337", "bodyText": "Since these plugin releases are dynamic (more like Deck plugin releases in that way) I decided not to include the front50 pinning release source here - I feel like that is only really necessary for the plugins that are loaded in-process.", "author": "jonsie", "createdAt": "2020-08-05T21:47:50Z", "path": "kork-plugins/src/main/java/com/netflix/spinnaker/config/PluginsAutoConfiguration.java", "diffHunk": "@@ -199,6 +200,29 @@ public static PluginInfoReleaseProvider pluginInfoReleaseProvider(\n         pluginInfoReleaseSources, springStrictPluginLoaderStatusProvider);\n   }\n \n+  @Bean\n+  public static RemotePluginInfoReleaseCache remotePluginInfoReleaseCache(\n+      LatestPluginInfoReleaseSource latestPluginInfoReleaseSource,\n+      SpringPluginInfoReleaseSource springPluginInfoReleaseSource,\n+      PreferredPluginInfoReleaseSource preferredPluginInfoReleaseSource,\n+      SpringStrictPluginLoaderStatusProvider springStrictPluginLoaderStatusProvider,\n+      ApplicationEventPublisher applicationEventPublisher,\n+      SpinnakerUpdateManager updateManager,\n+      SpinnakerPluginManager pluginManager,\n+      SpringPluginStatusProvider springPluginStatusProvider) {\n+    return new RemotePluginInfoReleaseCache(\n+        new AggregatePluginInfoReleaseProvider(\n+            Arrays.asList(\n+                latestPluginInfoReleaseSource,\n+                springPluginInfoReleaseSource,\n+                preferredPluginInfoReleaseSource),", "originalCommit": "81efaf9eed451f0259c32bf710dece96073d56f1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA4NTM2NA==", "url": "https://github.com/spinnaker/kork/pull/734#discussion_r466085364", "bodyText": "What happens when a new PluginInfoReleaseSource is added somewhere down the line? I'd have expected to see an injection ofCollection<PluginInfoReleaseSource> and filter out the types you know you don't want. Was this route considered?", "author": "robzienert", "createdAt": "2020-08-06T01:01:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjAyMzMzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA5MDgzNA==", "url": "https://github.com/spinnaker/kork/pull/734#discussion_r466090834", "bodyText": "Yes, that's what I initially implemented. But then I reverted it because I didn't want someone inadvertently changing the behavior of this cache.  Now that you bring it up though - I agree.  I think it's reasonable to assume in kork-plugins land that any additional PluginInfoReleaseSource will be processed by the aggregate.", "author": "jonsie", "createdAt": "2020-08-06T01:22:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjAyMzMzNw=="}], "type": "inlineReview"}, {"oid": "11b70e8a381b6d6cd9f0c0074c081c211a162b4d", "url": "https://github.com/spinnaker/kork/commit/11b70e8a381b6d6cd9f0c0074c081c211a162b4d", "message": "feat(plugins): Add remote plugin info release cache for plugins that contain remote extensions, add kork-api module", "committedDate": "2020-08-05T22:36:04Z", "type": "forcePushed"}, {"oid": "fb1c54fbd56121e3721361894c77b8a4df7d019a", "url": "https://github.com/spinnaker/kork/commit/fb1c54fbd56121e3721361894c77b8a4df7d019a", "message": "feat(plugins): Add remote plugin info release cache for plugins that contain remote extensions, add kork-api module", "committedDate": "2020-08-05T22:47:31Z", "type": "forcePushed"}, {"oid": "667123c4595b9fa82a2222bdf473b4fab0190e60", "url": "https://github.com/spinnaker/kork/commit/667123c4595b9fa82a2222bdf473b4fab0190e60", "message": "feat(plugins): Add remote plugin info release cache for plugins that contain remote extensions, add kork-api module", "committedDate": "2020-08-05T22:49:30Z", "type": "forcePushed"}, {"oid": "1ea368158663109ca1e4e1a0ff8d9b2b93521610", "url": "https://github.com/spinnaker/kork/commit/1ea368158663109ca1e4e1a0ff8d9b2b93521610", "message": "feat(plugins): Add remote plugin info release cache for plugins that contain remote extensions, add kork-api module", "committedDate": "2020-08-05T22:52:22Z", "type": "forcePushed"}, {"oid": "ef8fd4ad88fc1c30828020aca88c1736aa2c327d", "url": "https://github.com/spinnaker/kork/commit/ef8fd4ad88fc1c30828020aca88c1736aa2c327d", "message": "feat(plugins): Add remote plugin info release cache for plugins that contain remote extensions, add kork-api module", "committedDate": "2020-08-05T22:54:25Z", "type": "forcePushed"}, {"oid": "1f3299a9c9ce332f005af599d078fd32f45df632", "url": "https://github.com/spinnaker/kork/commit/1f3299a9c9ce332f005af599d078fd32f45df632", "message": "feat(plugins): Add remote plugin info release cache for plugins that contain remote extensions, add kork-api module", "committedDate": "2020-08-05T23:37:56Z", "type": "forcePushed"}, {"oid": "ae300b77912a948387d7ea2d195eeff5970fc89e", "url": "https://github.com/spinnaker/kork/commit/ae300b77912a948387d7ea2d195eeff5970fc89e", "message": "feat(plugins): Add remote plugin info release cache for plugins that contain remote extensions, add kork-api module", "committedDate": "2020-08-06T22:17:36Z", "type": "commit"}, {"oid": "ae300b77912a948387d7ea2d195eeff5970fc89e", "url": "https://github.com/spinnaker/kork/commit/ae300b77912a948387d7ea2d195eeff5970fc89e", "message": "feat(plugins): Add remote plugin info release cache for plugins that contain remote extensions, add kork-api module", "committedDate": "2020-08-06T22:17:36Z", "type": "forcePushed"}, {"oid": "ee6638938bc28d4e38edd22409bb17c92321e90b", "url": "https://github.com/spinnaker/kork/commit/ee6638938bc28d4e38edd22409bb17c92321e90b", "message": "Merge branch 'master' into remote-plugin-cache", "committedDate": "2020-08-06T22:20:12Z", "type": "commit"}]}