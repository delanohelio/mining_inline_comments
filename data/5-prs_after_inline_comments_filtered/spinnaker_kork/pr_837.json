{"pr_number": 837, "pr_title": "fix(retrofit): Explicitly mark BAD_REQUEST and NOT_FOUND errors as not retryable", "pr_createdAt": "2020-12-18T18:17:10Z", "pr_url": "https://github.com/spinnaker/kork/pull/837", "timeline": [{"oid": "52daf62fc82f1435268908546e6f6e94c7a065a5", "url": "https://github.com/spinnaker/kork/commit/52daf62fc82f1435268908546e6f6e94c7a065a5", "message": "feat(retrofit): change SpinnakerRetrofitErrorHandler to throw non-retryable exceptions on http client errors\n\non the assumption that subsequent attempts would continue to fail in the same way.\n\nRetrySupport in kork-exceptions looks at the retryable attribute of SpinnakerException so\nit no longer retries on client errors with this change.", "committedDate": "2020-12-18T18:21:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAxMzUwMw==", "url": "https://github.com/spinnaker/kork/pull/837#discussion_r546013503", "bodyText": "Better to change NotFoundException to always set retryable to false?", "author": "dbyron0", "createdAt": "2020-12-18T18:29:56Z", "path": "kork-retrofit/src/main/java/com/netflix/spinnaker/kork/retrofit/exceptions/SpinnakerRetrofitErrorHandler.java", "diffHunk": "@@ -52,9 +52,14 @@ public Throwable handleError(RetrofitError e) {\n     switch (e.getKind()) {\n       case HTTP:\n         if (e.getResponse().getStatus() == HttpStatus.NOT_FOUND.value()) {\n-          return new NotFoundException(e);\n+          return new NotFoundException(e).setRetryable(false);", "originalCommit": "52daf62fc82f1435268908546e6f6e94c7a065a5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a321905108ecdbe1a7d2ba51b43c866c293f0dcd", "url": "https://github.com/spinnaker/kork/commit/a321905108ecdbe1a7d2ba51b43c866c293f0dcd", "message": "feat(retrofit): change SpinnakerRetrofitErrorHandler to throw non-retryable exceptions on http client errors\n\non the assumption that subsequent attempts would continue to fail in the same way.\n\nRetrySupport in kork-exceptions looks at the retryable attribute of SpinnakerException so\nit no longer retries on client errors with this change.", "committedDate": "2021-01-05T18:13:35Z", "type": "forcePushed"}, {"oid": "f336f565143259e7789743ec3508d4ed1382cf9b", "url": "https://github.com/spinnaker/kork/commit/f336f565143259e7789743ec3508d4ed1382cf9b", "message": "test(retrofit): demonstrate current behavior of SpinnakerRetrofitErrorHandler regarding retryable-or-not SpinnakerExceptions", "committedDate": "2021-01-12T18:15:54Z", "type": "commit"}, {"oid": "cebcebe306123b74719bf08c52834ad570f987b6", "url": "https://github.com/spinnaker/kork/commit/cebcebe306123b74719bf08c52834ad570f987b6", "message": "feat(retrofit): change SpinnakerRetrofitErrorHandler to throw non-retryable exceptions on http client errors\n\non the assumption that subsequent attempts would continue to fail in the same way.\n\nRetrySupport in kork-exceptions looks at the retryable attribute of SpinnakerException so\nit no longer retries on client errors with this change.", "committedDate": "2021-01-12T18:15:54Z", "type": "commit"}, {"oid": "cebcebe306123b74719bf08c52834ad570f987b6", "url": "https://github.com/spinnaker/kork/commit/cebcebe306123b74719bf08c52834ad570f987b6", "message": "feat(retrofit): change SpinnakerRetrofitErrorHandler to throw non-retryable exceptions on http client errors\n\non the assumption that subsequent attempts would continue to fail in the same way.\n\nRetrySupport in kork-exceptions looks at the retryable attribute of SpinnakerException so\nit no longer retries on client errors with this change.", "committedDate": "2021-01-12T18:15:54Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjE4OTI4Mg==", "url": "https://github.com/spinnaker/kork/pull/837#discussion_r556189282", "bodyText": "How much testing has been done with this outside of kork?  At a glance Series.CLIENT_ERROR is any 4xx, including 429 which could be retryable.\nThis does seem like a long drawn out fix for something that could have just been done in rosco? Sorry the holiday period made the cycle time on this quite long.\nResponse response =\n        retrySupport.retry(\n            () ->\n                AuthenticatedRequest.allowAnonymous(\n                    () -> clouddriverService.fetchArtifact(artifact)),\n            5,\n            1000,\n            true);\n\nWhy can't we just wrap clouddriverService.fetchArtifact(artifact)) in a try/catch that checks the status code?", "author": "ajordens", "createdAt": "2021-01-13T00:43:21Z", "path": "kork-retrofit/src/main/java/com/netflix/spinnaker/kork/retrofit/exceptions/SpinnakerRetrofitErrorHandler.java", "diffHunk": "@@ -52,9 +52,14 @@ public Throwable handleError(RetrofitError e) {\n     switch (e.getKind()) {\n       case HTTP:\n         if (e.getResponse().getStatus() == HttpStatus.NOT_FOUND.value()) {\n-          return new NotFoundException(e);\n+          return new NotFoundException(e).setRetryable(false);\n         }\n-        return new SpinnakerHttpException(e);\n+        SpinnakerHttpException retval = new SpinnakerHttpException(e);\n+        if (HttpStatus.Series.resolve(e.getResponse().getStatus())\n+            == HttpStatus.Series.CLIENT_ERROR) {\n+          retval.setRetryable(false);", "originalCommit": "cebcebe306123b74719bf08c52834ad570f987b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjgxNzU0Nw==", "url": "https://github.com/spinnaker/kork/pull/837#discussion_r556817547", "bodyText": "I haven't tested this outside of kork, and you're right about not handling 429 properly.\nYou're also right that adding the try/catch block to rosco is the most direct/simplest way forward.  It does seem like the kind of thing to handle centrally though.  I haven't come across other places that would benefit from it yet, but I bet they exist.\nWhat do you think of keeping the change here, but limiting it to 400/bad request?", "author": "dbyron0", "createdAt": "2021-01-13T20:46:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjE4OTI4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjgyNjc5MA==", "url": "https://github.com/spinnaker/kork/pull/837#discussion_r556826790", "bodyText": "Like this: 11a5ff9", "author": "dbyron0", "createdAt": "2021-01-13T21:03:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjE4OTI4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzExODQxNg==", "url": "https://github.com/spinnaker/kork/pull/837#discussion_r557118416", "bodyText": "That looks more reasonable to me. I'll set a reminder to take one last look before merging tomorrow.", "author": "ajordens", "createdAt": "2021-01-14T07:43:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjE4OTI4Mg=="}], "type": "inlineReview"}, {"oid": "11a5ff9363824d427ff99efc9ab68f0d76815f80", "url": "https://github.com/spinnaker/kork/commit/11a5ff9363824d427ff99efc9ab68f0d76815f80", "message": "only setRetryable(false) on BAD_REQUEST", "committedDate": "2021-01-13T20:58:59Z", "type": "commit"}]}