{"pr_number": 768, "pr_title": "fix(misc): Adding retrofit2 impl as an option", "pr_createdAt": "2020-09-01T07:14:40Z", "pr_url": "https://github.com/spinnaker/kork/pull/768", "timeline": [{"oid": "62a7c5f752dab16250547adb8565b4d4d29ff489", "url": "https://github.com/spinnaker/kork/commit/62a7c5f752dab16250547adb8565b4d4d29ff489", "message": "fix(misc): Adding retrofit2 impl to as an option", "committedDate": "2020-09-01T07:05:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMzMTM4Ng==", "url": "https://github.com/spinnaker/kork/pull/768#discussion_r482331386", "bodyText": "This looks kind of fragile - do all retrofit2 interfaces have a Call return type?", "author": "robzienert", "createdAt": "2020-09-02T19:21:58Z", "path": "kork-retrofit/src/main/java/com/netflix/spinnaker/kork/retrofit/Retrofit2ServiceFactory.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Copyright 2020 Netflix, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package com.netflix.spinnaker.kork.retrofit;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.netflix.spinnaker.config.DefaultServiceEndpoint;\n+import com.netflix.spinnaker.config.ServiceEndpoint;\n+import com.netflix.spinnaker.config.okhttp3.OkHttpClientProvider;\n+import com.netflix.spinnaker.kork.annotations.NonnullByDefault;\n+import com.netflix.spinnaker.kork.client.ServiceClientFactory;\n+import java.util.Objects;\n+import okhttp3.HttpUrl;\n+import okhttp3.OkHttpClient;\n+import retrofit2.Call;\n+import retrofit2.Retrofit;\n+import retrofit2.converter.jackson.JacksonConverterFactory;\n+\n+@NonnullByDefault\n+public class Retrofit2ServiceFactory implements ServiceClientFactory {\n+\n+  private final OkHttpClientProvider clientProvider;\n+\n+  public Retrofit2ServiceFactory(OkHttpClientProvider clientProvider) {\n+    this.clientProvider = clientProvider;\n+  }\n+\n+  @Override\n+  public <T> T create(Class<T> type, ServiceEndpoint serviceEndpoint, ObjectMapper objectMapper) {\n+    OkHttpClient okHttpClient =\n+        clientProvider.getClient(\n+            new DefaultServiceEndpoint(serviceEndpoint.getName(), serviceEndpoint.getBaseUrl()));\n+\n+    return new Retrofit.Builder()\n+        .baseUrl(Objects.requireNonNull(HttpUrl.parse(serviceEndpoint.getBaseUrl())))\n+        .client(okHttpClient)\n+        .addConverterFactory(JacksonConverterFactory.create(objectMapper))\n+        .build()\n+        .create(type);\n+  }\n+\n+  @Override\n+  public boolean supports(Class<?> type, ServiceEndpoint serviceEndpoint) {\n+    return type.getMethods()[0].getReturnType().getName().equalsIgnoreCase(Call.class.getName());", "originalCommit": "62a7c5f752dab16250547adb8565b4d4d29ff489", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjUyOTg4Mg==", "url": "https://github.com/spinnaker/kork/pull/768#discussion_r482529882", "bodyText": "the return value is always a parameterized Call<T>.  I thought about introducing another input var at the call site but that felt like more noise.", "author": "srekapalli", "createdAt": "2020-09-02T22:17:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMzMTM4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjYzMDk0Nw==", "url": "https://github.com/spinnaker/kork/pull/768#discussion_r482630947", "bodyText": "Cool, thanks - looks good then.", "author": "robzienert", "createdAt": "2020-09-03T00:58:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMzMTM4Ng=="}], "type": "inlineReview"}, {"oid": "a1caa25537d2a3f850ef94702f1b3ebd7f8b8d33", "url": "https://github.com/spinnaker/kork/commit/a1caa25537d2a3f850ef94702f1b3ebd7f8b8d33", "message": "fix(retrofit2): Move retrofit2 impl into a separate module", "committedDate": "2020-09-03T01:30:18Z", "type": "commit"}, {"oid": "16ba55b424c1d40689c3761e502968c28b691b14", "url": "https://github.com/spinnaker/kork/commit/16ba55b424c1d40689c3761e502968c28b691b14", "message": "Merge branch 'master' into retrofit2", "committedDate": "2020-09-04T20:17:37Z", "type": "commit"}]}