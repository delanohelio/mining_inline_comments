{"pr_number": 819, "pr_title": "fix(misc): Skip header check if the endpoint is not matching the prov\u2026", "pr_createdAt": "2020-11-10T22:41:59Z", "pr_url": "https://github.com/spinnaker/kork/pull/819", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTU3NjkyMA==", "url": "https://github.com/spinnaker/kork/pull/819#discussion_r521576920", "bodyText": "Small nitpick:  This tripped me up.  Instead of creating a member variable headerCheckPattern and assigning the value from okHttpMetricsInterceptorProperties I think it's fine to just call okHttpMetricsInterceptorProperties.getHeaderCheckRegExPattern() where it used below.", "author": "jonsie", "createdAt": "2020-11-11T19:06:27Z", "path": "kork-web/src/main/java/com/netflix/spinnaker/okhttp/MetricsInterceptor.java", "diffHunk": "@@ -27,12 +29,16 @@\n  */\n class MetricsInterceptor {\n   private final Provider<Registry> registry;\n-  private final boolean skipHeaderCheck;\n+  private final OkHttpMetricsInterceptorProperties okHttpMetricsInterceptorProperties;\n   private final Logger log;\n+  private final Pattern headerCheckPattern;\n \n-  MetricsInterceptor(Provider<Registry> registry, boolean skipHeaderCheck) {\n+  MetricsInterceptor(\n+      Provider<Registry> registry,\n+      OkHttpMetricsInterceptorProperties okHttpMetricsInterceptorProperties) {\n     this.registry = registry;\n-    this.skipHeaderCheck = skipHeaderCheck;\n+    this.okHttpMetricsInterceptorProperties = okHttpMetricsInterceptorProperties;\n+    this.headerCheckPattern = okHttpMetricsInterceptorProperties.getHeaderCheckRegExPattern();", "originalCommit": "d90ac3b642befbb53fbc6160f7e9adb6cac8b3f9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTYwNDA1MQ==", "url": "https://github.com/spinnaker/kork/pull/819#discussion_r521604051", "bodyText": "was keeping that in a member variable to avoid compiling the regex pattern every time we intercept the request.", "author": "srekapalli", "createdAt": "2020-11-11T19:58:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTU3NjkyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY0NjM1OQ==", "url": "https://github.com/spinnaker/kork/pull/819#discussion_r521646359", "bodyText": "I think the properties class could keep track of the compiled pattern.", "author": "ajordens", "createdAt": "2020-11-11T21:22:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTU3NjkyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY0Nzk2MA==", "url": "https://github.com/spinnaker/kork/pull/819#discussion_r521647960", "bodyText": "String headerCheckRegex or String headerCheckPattern imo (looking at ~/.spinnaker/* we have more instances of \"*Pattern\" for regexes).\nNot sure why we have public instance variables and getters/setters?", "author": "ajordens", "createdAt": "2020-11-11T21:26:11Z", "path": "kork-web/src/main/groovy/com/netflix/spinnaker/config/OkHttpMetricsInterceptorProperties.java", "diffHunk": "@@ -15,18 +15,42 @@\n  */\n package com.netflix.spinnaker.config;\n \n+import java.util.regex.Pattern;\n import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.util.StringUtils;\n \n @ConfigurationProperties(\"ok-http-client.interceptor\")\n public class OkHttpMetricsInterceptorProperties {\n \n+  /** If set to true, will skip header check completely. */\n   public boolean skipHeaderCheck = false;\n \n+  /**\n+   * If Skip header check is set to false and regex is set, header check will be skipped for all\n+   * endpoints except for the ones that match the provided regex.\n+   */\n+  public String headerCheckRegEx = null;", "originalCommit": "d90ac3b642befbb53fbc6160f7e9adb6cac8b3f9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY4NTkzOA==", "url": "https://github.com/spinnaker/kork/pull/819#discussion_r521685938", "bodyText": "yh.. Didn't notice those are public vars. Seems like a left over from groovy to java conversion. Fixed now.", "author": "srekapalli", "createdAt": "2020-11-11T22:52:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY0Nzk2MA=="}], "type": "inlineReview"}, {"oid": "e96263a9f5ac7bcab5d415c6594b9749d05b5368", "url": "https://github.com/spinnaker/kork/commit/e96263a9f5ac7bcab5d415c6594b9749d05b5368", "message": "fix(misc): Skip header check if the endpoint is not matching the provided regex", "committedDate": "2020-11-11T22:49:45Z", "type": "forcePushed"}, {"oid": "347d529f96bf3ecf29741de7cb23e74e3762ed86", "url": "https://github.com/spinnaker/kork/commit/347d529f96bf3ecf29741de7cb23e74e3762ed86", "message": "fix(misc): Skip header check if the endpoint is not matching the provided regex", "committedDate": "2020-11-12T20:08:30Z", "type": "commit"}, {"oid": "347d529f96bf3ecf29741de7cb23e74e3762ed86", "url": "https://github.com/spinnaker/kork/commit/347d529f96bf3ecf29741de7cb23e74e3762ed86", "message": "fix(misc): Skip header check if the endpoint is not matching the provided regex", "committedDate": "2020-11-12T20:08:30Z", "type": "forcePushed"}]}