{"pr_number": 667, "pr_title": "refactor(artifacts): Improve null-safety of Artifact class", "pr_createdAt": "2020-05-29T17:14:25Z", "pr_url": "https://github.com/spinnaker/kork/pull/667", "timeline": [{"oid": "5131832d088a327f092603e1d2c26d8ceddd0739", "url": "https://github.com/spinnaker/kork/commit/5131832d088a327f092603e1d2c26d8ceddd0739", "message": "fix(artifacts): Improve null safety of expected artifact\n\nThe ExpectedArtifact class is annotated such that id and matchArtifact\nare not null, but this is not actually enforced anywhere.\n\nFirst, explicitly write out the AllArgsConstructor that was generated\nby lombok, and move the Builder annotation to it (so the builder uses\nthat constructor when finally creating the object).\n\nThen update the constructor to have a ParametersAreNullable annotation\nas we can't control what gets passed to the constructor, and handle\nwhen we are passed a null id or matchArtifact.\n\nFor the id case, we'll just translate to an empty string. For the\nmatchArtifact case, we'll create an empty matchArtifact. As the\npoint of a matchArtifact is to contain filters that determine whether\na given artifact matches this expected artifact; by defaulting to no\nfilters seems like a reasonable behavior here.", "committedDate": "2020-05-29T17:10:32Z", "type": "commit"}, {"oid": "8dc2637d278617c87973246f930b8196df6e79be", "url": "https://github.com/spinnaker/kork/commit/8dc2637d278617c87973246f930b8196df6e79be", "message": "refactor(artifacts): Remove deprecated putMetadata\n\nLast time I updated this class (a few months ago) I added the\nDeprecated annotation to this function, which is not used anywhere\nin Spinnaker. Removing it now.", "committedDate": "2020-05-29T17:10:41Z", "type": "commit"}, {"oid": "65e71e03a295ccf7a58d7a8986b84cb4ff318994", "url": "https://github.com/spinnaker/kork/commit/65e71e03a295ccf7a58d7a8986b84cb4ff318994", "message": "refactor(artifacts): Improve null-safety of Artifact class\n\nThe Artifact class contains a number of strings that are often null.\nTo make the class more null-safe, annotate it with NonnullByDefault and\ntranslate any null values into the empty string in the constructor and\nin setters.\n\nIn order to do this null -> empty translation, we need to explicitly\nwrite out the constructor and the setters that were generated by\nlombok.\n\nWe rarely mutate artifacts; when we do it often leads to confusing and\nfragile logic because we often pass these many levels down in the call\nstack, and also sometimes convert to/from Map<> meaning that it's not\nalways clear if you're operating on the same artifact or a copy. To\ngreatly simplify this, I'd like to make this class immutable. Based\non my analysis of where we mutate artifacts, the few places can all\nbe replaced by either (1) fully specifying the artifact up-front or\n(2) returning a copy of the artifact with the desired mutations.\n\nTo start this process of making Artifact immutable, I've annotated\nall of the setters as Deprecated. Once all of the places where we\ncall these are updated, I'll come back and actually remove the\nsetters.", "committedDate": "2020-05-29T17:10:49Z", "type": "commit"}, {"oid": "ad80f574435929595fa82296f9f8c60d32b77d5e", "url": "https://github.com/spinnaker/kork/commit/ad80f574435929595fa82296f9f8c60d32b77d5e", "message": "refactor(artifacts): Remove redundant JsonProperty\n\nThese are just explicitly specifying the default values (and in\nany case we're using the builder to deserialize).", "committedDate": "2020-05-29T17:10:55Z", "type": "commit"}, {"oid": "2aef41533f119e833e90549b27c430df017c2140", "url": "https://github.com/spinnaker/kork/commit/2aef41533f119e833e90549b27c430df017c2140", "message": "refactor(artifacts): Clean up metadata creation\n\nThis is a tiny refactor to simplify creating the metadata in\nan Artifact builder; rather than check if the Map is null every\ntime we add a key, just initialize it.", "committedDate": "2020-05-29T17:11:06Z", "type": "commit"}, {"oid": "719b931456bedc990bde5a5955168f10b1025534", "url": "https://github.com/spinnaker/kork/commit/719b931456bedc990bde5a5955168f10b1025534", "message": "refactor(artifacts): Make Artifact final\n\nIf we want the class to truly be immutable in the future, it will\nneed to be final. We don't currently extend this anywhere, so\nlet's make it final.", "committedDate": "2020-05-29T17:16:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjYzNzU5MQ==", "url": "https://github.com/spinnaker/kork/pull/667#discussion_r432637591", "bodyText": "\"No one would do such things. Civilization has climbed above such perils.\"\n-- Winston Churchill", "author": "maggieneterval", "createdAt": "2020-05-29T17:37:17Z", "path": "kork-artifacts/src/main/java/com/netflix/spinnaker/kork/artifacts/model/Artifact.java", "diffHunk": "@@ -63,6 +68,99 @@\n   @JsonProperty(\"uuid\")\n   private String uuid;\n \n+  @Builder(toBuilder = true)\n+  @ParametersAreNullableByDefault\n+  private Artifact(\n+      String type,\n+      boolean customKind,\n+      String name,\n+      String version,\n+      String location,\n+      String reference,\n+      Map<String, Object> metadata,\n+      String artifactAccount,\n+      String provenance,\n+      String uuid) {\n+    this.type = Strings.nullToEmpty(type);\n+    this.customKind = customKind;\n+    this.name = Strings.nullToEmpty(name);\n+    this.version = Strings.nullToEmpty(version);\n+    this.location = Strings.nullToEmpty(location);\n+    this.reference = Strings.nullToEmpty(reference);\n+    this.metadata = Optional.ofNullable(metadata).orElseGet(HashMap::new);\n+    this.artifactAccount = Strings.nullToEmpty(artifactAccount);\n+    this.provenance = Strings.nullToEmpty(provenance);\n+    this.uuid = Strings.nullToEmpty(uuid);\n+  }\n+\n+  // All setters for this class are deprecated. In general, artifacts are passed around the pipeline\n+  // context and are liberally serialized and deserialized, which makes mutating them fraught with\n+  // peril (because you might or might not actually be operating on a copy of the artifact you", "originalCommit": "65e71e03a295ccf7a58d7a8986b84cb4ff318994", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}