{"pr_number": 3327, "pr_title": "GH-3326: TCP: Support Unsolicited Server Messages", "pr_createdAt": "2020-07-06T18:19:17Z", "pr_url": "https://github.com/spring-projects/spring-integration/pull/3327", "timeline": [{"oid": "80506586bce203764fd721fc735df5dac1b17ebc", "url": "https://github.com/spring-projects/spring-integration/commit/80506586bce203764fd721fc735df5dac1b17ebc", "message": "GH-3326: TCP: Support Unsolicited Server Messages\n\nResolves https://github.com/spring-projects/spring-integration/issues/3326\n\n- OB Gateway - send unsolicited messages and late replies to a channel\n- Support multiple `TcpSender`s", "committedDate": "2020-07-06T18:18:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQwMjMyNw==", "url": "https://github.com/spring-projects/spring-integration/pull/3327#discussion_r450402327", "bodyText": "Looks like you have there this setter as well setUnsolicitedMessageChannel(MessageChannel unsolicitedMessageChannel). Don't we need to have similar option here on DSL level?\nThanks", "author": "artembilan", "createdAt": "2020-07-06T18:22:51Z", "path": "spring-integration-ip/src/main/java/org/springframework/integration/ip/dsl/TcpOutboundGatewaySpec.java", "diffHunk": "@@ -114,6 +114,11 @@ public TcpOutboundGatewaySpec async(boolean async) {\n \t\treturn this;\n \t}\n \n+\tpublic TcpOutboundGatewaySpec unsolictedMessageChannelName(String channelName) {", "originalCommit": "80506586bce203764fd721fc735df5dac1b17ebc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQwMjc4Mw==", "url": "https://github.com/spring-projects/spring-integration/pull/3327#discussion_r450402783", "bodyText": "this. on method calls?\nI guess you have just moved those existing setter over here for better class structure.\nNevertheless can we fix this. as well since we are already here in a change?", "author": "artembilan", "createdAt": "2020-07-06T18:23:50Z", "path": "spring-integration-ip/src/main/java/org/springframework/integration/ip/tcp/TcpOutboundGateway.java", "diffHunk": "@@ -118,14 +129,53 @@ public void setIntegrationEvaluationContext(EvaluationContext evaluationContext)\n \t\tthis.evaluationContextSet = true;\n \t}\n \n-\t@Override\n-\tprotected void doInit() {\n-\t\tsuper.doInit();\n-\t\tif (!this.evaluationContextSet) {\n-\t\t\tthis.evaluationContext = ExpressionUtils.createStandardEvaluationContext(getBeanFactory());\n-\t\t}\n-\t\tAssert.state(!this.closeStreamAfterSend || this.isSingleUse,\n-\t\t\t\t\"Single use connection needed with closeStreamAfterSend\");\n+\t/**\n+\t * Specify the Spring Integration reply channel. If this property is not\n+\t * set the gateway will check for a 'replyChannel' header on the request.\n+\t * @param replyChannel The reply channel.\n+\t */\n+\tpublic void setReplyChannel(MessageChannel replyChannel) {\n+\t\tthis.setOutputChannel(replyChannel);", "originalCommit": "80506586bce203764fd721fc735df5dac1b17ebc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0a7385502248b04fa51e5f8bdbaf70b28268578b", "url": "https://github.com/spring-projects/spring-integration/commit/0a7385502248b04fa51e5f8bdbaf70b28268578b", "message": "Add channel variant to spec; code polishing.", "committedDate": "2020-07-06T19:00:28Z", "type": "commit"}]}