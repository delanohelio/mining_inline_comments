{"pr_number": 3448, "pr_title": "Subscribe to Publisher in the NullChannel", "pr_createdAt": "2020-12-21T21:32:25Z", "pr_url": "https://github.com/spring-projects/spring-integration/pull/3448", "timeline": [{"oid": "e051f0d282f0d3a587e6c7495f280c8ed346783e", "url": "https://github.com/spring-projects/spring-integration/commit/e051f0d282f0d3a587e6c7495f280c8ed346783e", "message": "Subscribe to Publisher in the NullChannel\n\nIf a payload of the message in the flow is a `org.reactivestreams.Publisher`,\nit must be subscribed somewhere downstream to initiate reactive processing.\nThe `NullChannel` just ignores the message altogether and therefore `Publisher`\nis lost\n\n* Check the payload of the message in the `NullChannel` for `Publisher` type\nand subscribe to it\n* Verify in the test and mention this logic in the docs\n\n**Cherry-pick to 5.4.x**", "committedDate": "2020-12-21T22:32:15Z", "type": "commit"}, {"oid": "e051f0d282f0d3a587e6c7495f280c8ed346783e", "url": "https://github.com/spring-projects/spring-integration/commit/e051f0d282f0d3a587e6c7495f280c8ed346783e", "message": "Subscribe to Publisher in the NullChannel\n\nIf a payload of the message in the flow is a `org.reactivestreams.Publisher`,\nit must be subscribed somewhere downstream to initiate reactive processing.\nThe `NullChannel` just ignores the message altogether and therefore `Publisher`\nis lost\n\n* Check the payload of the message in the `NullChannel` for `Publisher` type\nand subscribe to it\n* Verify in the test and mention this logic in the docs\n\n**Cherry-pick to 5.4.x**", "committedDate": "2020-12-21T22:32:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzMzNjIzNg==", "url": "https://github.com/spring-projects/spring-integration/pull/3448#discussion_r547336236", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * and all {@link #send} calls will return {@code true} although no action is performed.\n          \n          \n            \n             * Unless the payload of a sent is a {@link Publisher} implementation.\n          \n          \n            \n             * In this case the {@link Publisher#subscribe(Subscriber)} is called to initiate\n          \n          \n            \n             * the reactive stream, although data is ignored in this channel.\n          \n          \n            \n             * and all {@link #send} calls will return {@code true} although no action is performed.\n          \n          \n            \n             * Unless the payload of a sent message is a {@link Publisher} implementation, in\n          \n          \n            \n             * which case the {@link Publisher#subscribe(Subscriber)} is called to initiate\n          \n          \n            \n             * the reactive stream, although the data is discarded by this channel.", "author": "garyrussell", "createdAt": "2020-12-22T15:19:19Z", "path": "spring-integration-core/src/main/java/org/springframework/integration/channel/NullChannel.java", "diffHunk": "@@ -35,13 +38,16 @@\n \n /**\n  * A channel implementation that essentially behaves like \"/dev/null\".\n- * All receive() calls will return <em>null</em>, and all send() calls\n- * will return <em>true</em> although no action is performed.\n+ * All {@link #receive()} calls will return {@code null},\n+ * and all {@link #send} calls will return {@code true} although no action is performed.\n+ * Unless the payload of a sent is a {@link Publisher} implementation.\n+ * In this case the {@link Publisher#subscribe(Subscriber)} is called to initiate\n+ * the reactive stream, although data is ignored in this channel.", "originalCommit": "e051f0d282f0d3a587e6c7495f280c8ed346783e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d78f851a89032ae8429d59ded7dac4191c4dc2b9", "url": "https://github.com/spring-projects/spring-integration/commit/d78f851a89032ae8429d59ded7dac4191c4dc2b9", "message": "Apply suggestions from code review\n\nCo-authored-by: Gary Russell <grussell@vmware.com>", "committedDate": "2020-12-22T16:08:29Z", "type": "commit"}]}