{"pr_number": 3232, "pr_title": "GH-3230: MMIH: Fix Pausable/Lifecycle Methods", "pr_createdAt": "2020-03-31T19:54:27Z", "pr_url": "https://github.com/spring-projects/spring-integration/pull/3232", "timeline": [{"oid": "ea397db22109d8af9b3dd7e67ddb3ab6348204f1", "url": "https://github.com/spring-projects/spring-integration/commit/ea397db22109d8af9b3dd7e67ddb3ab6348204f1", "message": "GH-3230: MMIH: Fix Pausable/Lifecycle Methods\n\nResolves https://github.com/spring-projects/spring-integration/issues/3230\n\nPreviously, methods with the same name as `Lifecycle` methods were unconditionally ignored.\n\n- Use logic similar to `ControlBusMethodFilter` to explicitly compare the candidate Method\n  to those on `Paused` and `Lifecycle` and only ignore those.\n- Explicitly disallow these methods when named - previously the check was only performed\n  if no method name was supplied.", "committedDate": "2020-03-31T20:17:58Z", "type": "commit"}, {"oid": "ea397db22109d8af9b3dd7e67ddb3ab6348204f1", "url": "https://github.com/spring-projects/spring-integration/commit/ea397db22109d8af9b3dd7e67ddb3ab6348204f1", "message": "GH-3230: MMIH: Fix Pausable/Lifecycle Methods\n\nResolves https://github.com/spring-projects/spring-integration/issues/3230\n\nPreviously, methods with the same name as `Lifecycle` methods were unconditionally ignored.\n\n- Use logic similar to `ControlBusMethodFilter` to explicitly compare the candidate Method\n  to those on `Paused` and `Lifecycle` and only ignore those.\n- Explicitly disallow these methods when named - previously the check was only performed\n  if no method name was supplied.", "committedDate": "2020-03-31T20:17:58Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTIxNjM2MQ==", "url": "https://github.com/spring-projects/spring-integration/pull/3232#discussion_r401216361", "bodyText": "Any chances that we log special info that Pausable methods are not considered as candidates?", "author": "artembilan", "createdAt": "2020-03-31T21:08:25Z", "path": "spring-integration-core/src/main/java/org/springframework/integration/handler/support/MessagingMethodInvokerHelper.java", "diffHunk": "@@ -818,14 +818,19 @@ private HandlerMethod obtainHandlerMethodIfAny(Method methodToProcess) {\n \t}\n \n \tprivate boolean isMethodEligible(Method methodToProcess) {\n-\t\treturn !(methodToProcess.isBridge() || // NOSONAR boolean complexity\n+\t\treturn (!(methodToProcess.isBridge() || // NOSONAR boolean complexity\n \t\t\t\tisMethodDefinedOnObjectClass(methodToProcess) ||\n \t\t\t\tmethodToProcess.getDeclaringClass().equals(Proxy.class) ||\n \t\t\t\t(this.requiresReply && void.class.equals(methodToProcess.getReturnType())) ||\n-\t\t\t\t(this.methodName != null && !this.methodName.equals(methodToProcess.getName())) ||\n-\t\t\t\t(this.methodName == null &&\n-\t\t\t\t\t\tObjectUtils.containsElement(new String[] { \"start\", \"stop\", \"isRunning\" },\n-\t\t\t\t\t\t\t\tmethodToProcess.getName())));\n+\t\t\t\t(this.methodName != null && !this.methodName.equals(methodToProcess.getName()))))\n+\t\t\t&& !isPausableMethod(methodToProcess);\n+\t}\n+\n+\tprivate boolean isPausableMethod(Method pausableMethod) {\n+\t\tClass<?> declaringClass = pausableMethod.getDeclaringClass();\n+\t\treturn (Pausable.class.isAssignableFrom(declaringClass) || Lifecycle.class.isAssignableFrom(declaringClass))", "originalCommit": "ea397db22109d8af9b3dd7e67ddb3ab6348204f1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5fa2f89ab6b0ee43034202070e4a7263c142e87b", "url": "https://github.com/spring-projects/spring-integration/commit/5fa2f89ab6b0ee43034202070e4a7263c142e87b", "message": "- reinstate `Pausable/Lifecycle` methods if explicitly requested.\n- log `Pausable` methods that are not candidates.", "committedDate": "2020-03-31T21:28:02Z", "type": "commit"}, {"oid": "8db6fc50d84749bc76cc06d04e393f6a6054db2e", "url": "https://github.com/spring-projects/spring-integration/commit/8db6fc50d84749bc76cc06d04e393f6a6054db2e", "message": "- Fix typo in test method.", "committedDate": "2020-04-01T15:23:31Z", "type": "commit"}]}