{"pr_number": 3423, "pr_title": "Rely on `MProducerSupport.active` for `Flux`", "pr_createdAt": "2020-11-06T15:12:03Z", "pr_url": "https://github.com/spring-projects/spring-integration/pull/3423", "timeline": [{"oid": "ae8a6fced9d8363e2bcc1146cdc99cc0c3031d40", "url": "https://github.com/spring-projects/spring-integration/commit/ae8a6fced9d8363e2bcc1146cdc99cc0c3031d40", "message": "Rely on `MProducerSupport.active` for `Flux`\n\n* Fix `MessageProducerSupport` to extract an `active` flag and set it before\n`isRunning` - the `Flux` subscription relies on the `takeWhile()`\nwhere in case of `autoStartup = false` we will never start consume because\nit is set to `true` already after `doStart()`\n* Refactor all the `MessageProducerSupport` implementation with similar\n`active` state to use already one from the super class\n\n**Cherry-pick to 5.3.x**", "committedDate": "2020-11-06T15:11:36Z", "type": "commit"}, {"oid": "75f96592885f852598b0ea5f6d7829ab14a0ee81", "url": "https://github.com/spring-projects/spring-integration/commit/75f96592885f852598b0ea5f6d7829ab14a0ee81", "message": "* Remove `MessageProducerSupport.setActive()`\nto not let to mutate it from the implementations\n* Set `active` to `false` in the `destroy()`\n* Clean up and fix typos in the affected `JmsMessageDrivenEndpoint`", "committedDate": "2020-11-06T15:25:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgyMTY1Nw==", "url": "https://github.com/spring-projects/spring-integration/pull/3423#discussion_r518821657", "bodyText": "Javadocs for these methods needs polishing. Subclasses MUST call super (which is a bit brittle I think).", "author": "garyrussell", "createdAt": "2020-11-06T15:22:40Z", "path": "spring-integration-core/src/main/java/org/springframework/integration/endpoint/MessageProducerSupport.java", "diffHunk": "@@ -196,6 +207,7 @@ protected void doStart() {\n \t */\n \t@Override\n \tprotected void doStop() {\n+\t\tsetActive(false);\n \t}", "originalCommit": "ae8a6fced9d8363e2bcc1146cdc99cc0c3031d40", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgyODAzMg==", "url": "https://github.com/spring-projects/spring-integration/pull/3423#discussion_r518828032", "bodyText": "Well, I guess I can move this active directly into start() and stop() impls.", "author": "artembilan", "createdAt": "2020-11-06T15:32:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgyMTY1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgzNDkwOQ==", "url": "https://github.com/spring-projects/spring-integration/pull/3423#discussion_r518834909", "bodyText": "Well, I probably may hack and set running to true in that subscribeToPublisher(), so we will have less confusion with extra flag \ud83d\ude04", "author": "artembilan", "createdAt": "2020-11-06T15:43:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgyMTY1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgyNjI2Nw==", "url": "https://github.com/spring-projects/spring-integration/pull/3423#discussion_r518826267", "bodyText": "It's not clear why this is different; both flags are set to true in start().", "author": "garyrussell", "createdAt": "2020-11-06T15:29:39Z", "path": "spring-integration-core/src/main/java/org/springframework/integration/endpoint/MessageProducerSupport.java", "diffHunk": "@@ -222,7 +234,7 @@ protected void subscribeToPublisher(Publisher<? extends Message<?>> publisher) {\n \t\t\t\t\t\t.map(this::trackMessageIfAny)\n \t\t\t\t\t\t.doOnComplete(this::stop)\n \t\t\t\t\t\t.doOnCancel(this::stop)\n-\t\t\t\t\t\t.takeWhile((message) -> isRunning());\n+\t\t\t\t\t\t.takeWhile((message) -> isActive());", "originalCommit": "ae8a6fced9d8363e2bcc1146cdc99cc0c3031d40", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgyNzYxNQ==", "url": "https://github.com/spring-projects/spring-integration/pull/3423#discussion_r518827615", "bodyText": "Right, but running set after doStart() call. My idea (and I see in existing components) to have some flag which is true before we call doStart(). See that MessageProducerSupport.start() impl.", "author": "artembilan", "createdAt": "2020-11-06T15:31:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgyNjI2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgzMDMyMQ==", "url": "https://github.com/spring-projects/spring-integration/pull/3423#discussion_r518830321", "bodyText": "Right, but why does it matter that it is set after exiting doStart(). The requirement is not clear at all.", "author": "garyrussell", "createdAt": "2020-11-06T15:36:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgyNjI2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgzMzkyOA==", "url": "https://github.com/spring-projects/spring-integration/pull/3423#discussion_r518833928", "bodyText": "OK. See this subscribeToPublisher() details. There is that subscribe() word a couple times.\nSo, essentially we subscribe to the Flux in the doStart(), but since isRunning() returns false for us, we stop consuming the Flux immediately according that takeWhile() contract.\nI won't mind any other ideas.\nThanks", "author": "artembilan", "createdAt": "2020-11-06T15:41:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgyNjI2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgzNjc0Nw==", "url": "https://github.com/spring-projects/spring-integration/pull/3423#discussion_r518836747", "bodyText": "Ah; OK; got it now - but why not just set active=true in start() before calling doStart()? I think that would be cleaner.", "author": "garyrussell", "createdAt": "2020-11-06T15:45:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgyNjI2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODg0MTA0Ng==", "url": "https://github.com/spring-projects/spring-integration/pull/3423#discussion_r518841046", "bodyText": "Right. That's an idea, too. Although we would need to move active flag from the MessageProducerSupport down to the AbstractEndpoint...\nOn the other hand I saw similar active in the gateway impls, so probably we are on the right track.\nThanks for confirmation!\nStay tuned...", "author": "artembilan", "createdAt": "2020-11-06T15:52:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgyNjI2Nw=="}], "type": "inlineReview"}, {"oid": "efc9608c925eff78566cf41126dedef7f4be1693", "url": "https://github.com/spring-projects/spring-integration/commit/efc9608c925eff78566cf41126dedef7f4be1693", "message": "* Pull `active` flag down to the `AbstractEndpoint`\n* Set `active = true` in the `start()` before calling `doStart()`\n* Do same for `active = false` in the `stop()`\n* Clean up `AbstractEndpoint` impls to not call `doStart/doStop` for nothing\n* Refactor endpoints to rely on the `active` state from the `AbstractEndpoint`\nnot their own", "committedDate": "2020-11-06T17:13:02Z", "type": "commit"}]}