{"pr_number": 2475, "pr_title": "[NETBEANS-4925] - cleanup Map raw type warnings..", "pr_createdAt": "2020-10-21T03:18:40Z", "pr_url": "https://github.com/apache/netbeans/pull/2475", "timeline": [{"oid": "419b8c61b09a30d1b18eb98fa90ea7b1564ecd67", "url": "https://github.com/apache/netbeans/commit/419b8c61b09a30d1b18eb98fa90ea7b1564ecd67", "message": "[NETBEANS-4925] - cleanup Map raw type warnings..\n\nHey, it's me again.. The Netbeans Rust Remover..\n\nThere are a bunch of warnings related to raw type usage of the Map interface..\n\n   [repeat] /home/bwalker/src/netbeans/enterprise/websvc.rest/src/org/netbeans/modules/websvc/rest/support/SourceGroupSupport.java:170: warning: [rawtypes] found raw type: Map\n   [repeat]         Map result;\n   [repeat]         ^\n   [repeat]   missing type arguments for generic class Map<K,V>\n   [repeat]   where K,V are type-variables:\n   [repeat]     K extends Object declared in interface Map\n   [repeat]     V extends Object declared in interface Map\n\nThis change cleans some of this up..", "committedDate": "2020-10-21T03:17:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ2OTY5NA==", "url": "https://github.com/apache/netbeans/pull/2475#discussion_r510469694", "bodyText": "Do we really need the new Integer() here?", "author": "lkishalmi", "createdAt": "2020-10-22T21:30:55Z", "path": "java/dbschema/src/org/netbeans/modules/dbschema/jdbcimpl/SchemaElementImpl.java", "diffHunk": "@@ -592,18 +592,18 @@ private void initViews(ConnectionProvider cp, LinkedList views, DDLBridge bridge\n                                     rset = bridge.getDriverSpecification().getRow();\n                                     \n                                     //test references between two schemas\n-                                    c1 = (String) rset.get(new Integer(1));\n-                                    s1 = (String) rset.get(new Integer(2));\n-                                    c2 = (String) rset.get(new Integer(5));\n-                                    s2 = (String) rset.get(new Integer(6));\n+                                    c1 = rset.get(new Integer(1));", "originalCommit": "419b8c61b09a30d1b18eb98fa90ea7b1564ecd67", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTU4Mzk1Nw==", "url": "https://github.com/apache/netbeans/pull/2475#discussion_r511583957", "bodyText": "If we do we'll have a bigger problem. The primitive wrapper constructors will go away (they are deprecated for removal), so we need to get rid of them.\nTo my knowledge there is only one valid reason to use the constructors: You want an object, that you can synchronize on, that is not shared with others. But that is also flawed and will break in the future, when the primitive wrappers will be turned into value base objects, that don't have identity and don't hold a monitor.\nTL;DR: c1 = rset.get(new Integer(1)); should be c1 = rset.get(1);\nBut that might be worth fixing in another iteration.", "author": "matthiasblaesing", "createdAt": "2020-10-25T11:32:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ2OTY5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjIyOTIyMg==", "url": "https://github.com/apache/netbeans/pull/2475#discussion_r512229222", "bodyText": "Ok, then let's have this in.\nI've checked the code there are more than 5000 instances of new Integer, there also there are a few Long-s, Byte, Short-s and Chars as well. So that would be probably a few additional PR-s", "author": "lkishalmi", "createdAt": "2020-10-26T19:54:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ2OTY5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ2MTk5Mg==", "url": "https://github.com/apache/netbeans/pull/2475#discussion_r524461992", "bodyText": "Just wanted to respond for completeness sake, but it would be reasonable to change like @matthiasblaesing  says. But, I didn't want to \"confuse\" or \"cloud\" the issue as I'm really trying to just reduce the warning messages here..\nI'll pick that up for another change request..\nBTW, thanks to @lkishalmi  for committing the change!", "author": "BradWalker", "createdAt": "2020-11-16T17:53:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ2OTY5NA=="}], "type": "inlineReview"}]}