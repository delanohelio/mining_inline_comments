{"pr_number": 2556, "pr_title": "[NETBEANS-5053] - cleanup Set raw type warnings..", "pr_createdAt": "2020-11-23T03:35:03Z", "pr_url": "https://github.com/apache/netbeans/pull/2556", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU2MjQ3MA==", "url": "https://github.com/apache/netbeans/pull/2556#discussion_r528562470", "bodyText": "Redundant cast after change\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    variables = (String[])properties.toArray(new String [properties.size()]);\n          \n          \n            \n                    variables = properties.toArray(new String [properties.size()]);", "author": "mklaehn", "createdAt": "2020-11-23T09:23:03Z", "path": "java/ant.debugger/src/org/netbeans/modules/ant/debugger/AntDebugger.java", "diffHunk": "@@ -306,9 +306,8 @@ private void stopHere(AntEvent event) {\n         updateUI();\n         currentFile = event.getScriptLocation();\n         // update variable values\n-        Set properties = event.getPropertyNames ();\n-        variables = (String[]) properties.toArray \n-            (new String [properties.size ()]);\n+        Set<String> properties = event.getPropertyNames();\n+        variables = (String[])properties.toArray(new String [properties.size()]);", "originalCommit": "c75a02e1f95452f3e22847a6a280b49edf25b824", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTAxNzU4Nw==", "url": "https://github.com/apache/netbeans/pull/2556#discussion_r529017587", "bodyText": "Fixed..", "author": "BradWalker", "createdAt": "2020-11-23T21:48:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU2MjQ3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU2NDQzMw==", "url": "https://github.com/apache/netbeans/pull/2556#discussion_r528564433", "bodyText": "inferrable type informations\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        instructions.addAll(Arrays.<String>asList(new String[]{\"processing-instruction\", // NOI18N\n          \n          \n            \n                        instructions.addAll(Arrays.asList(new String[]{\"processing-instruction\", // NOI18N\n          \n      \n    \n    \n  \n\nstrictly speaking the array creation is not needed as well", "author": "mklaehn", "createdAt": "2020-11-23T09:26:30Z", "path": "ide/xsl/src/org/netbeans/modules/xsl/grammar/XSLGrammarQuery.java", "diffHunk": "@@ -136,33 +136,33 @@ private static Map getElementDecls() {\n             // Commonly used variables\n             Set emptySet = new TreeSet();\n             String spaceAtt = \"xml:space\";  // NOI18N\n-            Set tmpSet;\n+            Set<String> tmpSet;\n \n             ////////////////////////////////////////////////\n             // Initialize common sets\n \n-            Set charInstructions = new TreeSet(Arrays.asList(new String[]{\"apply-templates\", // NOI18N\n+            Set<String> charInstructions = new TreeSet<>(Arrays.<String>asList(new String[]{\"apply-templates\", // NOI18N\n             \"call-template\",\"apply-imports\",\"for-each\",\"value-of\", // NOI18N\n             \"copy-of\",\"number\",\"choose\",\"if\",\"text\",\"copy\", // NOI18N\n             \"variable\",\"message\",\"fallback\"})); // NOI18N\n \n-            Set instructions = new TreeSet(charInstructions);\n-            instructions.addAll(Arrays.asList(new String[]{\"processing-instruction\", // NOI18N\n+            Set<String> instructions = new TreeSet<>(charInstructions);\n+            instructions.addAll(Arrays.<String>asList(new String[]{\"processing-instruction\", // NOI18N", "originalCommit": "c75a02e1f95452f3e22847a6a280b49edf25b824", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA0NDc2NA==", "url": "https://github.com/apache/netbeans/pull/2556#discussion_r529044764", "bodyText": "changed..", "author": "BradWalker", "createdAt": "2020-11-23T22:45:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU2NDQzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU2NTU2NA==", "url": "https://github.com/apache/netbeans/pull/2556#discussion_r528565564", "bodyText": "inferrable type informations\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        Set<String> charInstructions = new TreeSet<>(Arrays.<String>asList(new String[]{\"apply-templates\", // NOI18N\n          \n          \n            \n                        Set<String> charInstructions = new TreeSet<>(Arrays.asList(new String[]{\"apply-templates\", // NOI18N\n          \n      \n    \n    \n  \n\nstrictly speaking the array creation is not needed as well", "author": "mklaehn", "createdAt": "2020-11-23T09:28:07Z", "path": "ide/xsl/src/org/netbeans/modules/xsl/grammar/XSLGrammarQuery.java", "diffHunk": "@@ -136,33 +136,33 @@ private static Map getElementDecls() {\n             // Commonly used variables\n             Set emptySet = new TreeSet();\n             String spaceAtt = \"xml:space\";  // NOI18N\n-            Set tmpSet;\n+            Set<String> tmpSet;\n \n             ////////////////////////////////////////////////\n             // Initialize common sets\n \n-            Set charInstructions = new TreeSet(Arrays.asList(new String[]{\"apply-templates\", // NOI18N\n+            Set<String> charInstructions = new TreeSet<>(Arrays.<String>asList(new String[]{\"apply-templates\", // NOI18N", "originalCommit": "c75a02e1f95452f3e22847a6a280b49edf25b824", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA0NTc2OQ==", "url": "https://github.com/apache/netbeans/pull/2556#discussion_r529045769", "bodyText": "changed..", "author": "BradWalker", "createdAt": "2020-11-23T22:47:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU2NTU2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU2NjI5Mw==", "url": "https://github.com/apache/netbeans/pull/2556#discussion_r528566293", "bodyText": "inferrable type informations\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        Set<String> topLevel = new TreeSet<>(Arrays.<String>asList(new String[]{\"import\",\"include\",\"strip-space\", // NOI18N\n          \n          \n            \n                        Set<String> topLevel = new TreeSet<>(Arrays.asList(new String[]{\"import\",\"include\",\"strip-space\", // NOI18N\n          \n      \n    \n    \n  \n\nstrictly speaking the array creation is not needed as well", "author": "mklaehn", "createdAt": "2020-11-23T09:29:16Z", "path": "ide/xsl/src/org/netbeans/modules/xsl/grammar/XSLGrammarQuery.java", "diffHunk": "@@ -136,33 +136,33 @@ private static Map getElementDecls() {\n             // Commonly used variables\n             Set emptySet = new TreeSet();\n             String spaceAtt = \"xml:space\";  // NOI18N\n-            Set tmpSet;\n+            Set<String> tmpSet;\n \n             ////////////////////////////////////////////////\n             // Initialize common sets\n \n-            Set charInstructions = new TreeSet(Arrays.asList(new String[]{\"apply-templates\", // NOI18N\n+            Set<String> charInstructions = new TreeSet<>(Arrays.<String>asList(new String[]{\"apply-templates\", // NOI18N\n             \"call-template\",\"apply-imports\",\"for-each\",\"value-of\", // NOI18N\n             \"copy-of\",\"number\",\"choose\",\"if\",\"text\",\"copy\", // NOI18N\n             \"variable\",\"message\",\"fallback\"})); // NOI18N\n \n-            Set instructions = new TreeSet(charInstructions);\n-            instructions.addAll(Arrays.asList(new String[]{\"processing-instruction\", // NOI18N\n+            Set<String> instructions = new TreeSet<>(charInstructions);\n+            instructions.addAll(Arrays.<String>asList(new String[]{\"processing-instruction\", // NOI18N\n             \"comment\",\"element\",\"attribute\"})); // NOI18N\n \n-            Set charTemplate = charInstructions; // We don't care about PCDATA\n+            Set<String> charTemplate = charInstructions; // We don't care about PCDATA\n \n-            template = new TreeSet(instructions);\n+            template = new TreeSet<>(instructions);\n             template.add(resultElements);\n \n-            Set topLevel = new TreeSet(Arrays.asList(new String[]{\"import\",\"include\",\"strip-space\", // NOI18N\n+            Set<String> topLevel = new TreeSet<>(Arrays.<String>asList(new String[]{\"import\",\"include\",\"strip-space\", // NOI18N", "originalCommit": "c75a02e1f95452f3e22847a6a280b49edf25b824", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA0NDk5Mw==", "url": "https://github.com/apache/netbeans/pull/2556#discussion_r529044993", "bodyText": "changed..", "author": "BradWalker", "createdAt": "2020-11-23T22:46:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU2NjI5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU2NjUxNA==", "url": "https://github.com/apache/netbeans/pull/2556#discussion_r528566514", "bodyText": "inferrable type informations\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        Set<String> topLevelAttr = new TreeSet(Arrays.<String>asList(new String[]{\"extension-element-prefixes\", // NOI18N\n          \n          \n            \n                        Set<String> topLevelAttr = new TreeSet(Arrays.asList(new String[]{\"extension-element-prefixes\", // NOI18N\n          \n      \n    \n    \n  \n\nstrictly speaking the array creation is not needed as well", "author": "mklaehn", "createdAt": "2020-11-23T09:29:37Z", "path": "ide/xsl/src/org/netbeans/modules/xsl/grammar/XSLGrammarQuery.java", "diffHunk": "@@ -136,33 +136,33 @@ private static Map getElementDecls() {\n             // Commonly used variables\n             Set emptySet = new TreeSet();\n             String spaceAtt = \"xml:space\";  // NOI18N\n-            Set tmpSet;\n+            Set<String> tmpSet;\n \n             ////////////////////////////////////////////////\n             // Initialize common sets\n \n-            Set charInstructions = new TreeSet(Arrays.asList(new String[]{\"apply-templates\", // NOI18N\n+            Set<String> charInstructions = new TreeSet<>(Arrays.<String>asList(new String[]{\"apply-templates\", // NOI18N\n             \"call-template\",\"apply-imports\",\"for-each\",\"value-of\", // NOI18N\n             \"copy-of\",\"number\",\"choose\",\"if\",\"text\",\"copy\", // NOI18N\n             \"variable\",\"message\",\"fallback\"})); // NOI18N\n \n-            Set instructions = new TreeSet(charInstructions);\n-            instructions.addAll(Arrays.asList(new String[]{\"processing-instruction\", // NOI18N\n+            Set<String> instructions = new TreeSet<>(charInstructions);\n+            instructions.addAll(Arrays.<String>asList(new String[]{\"processing-instruction\", // NOI18N\n             \"comment\",\"element\",\"attribute\"})); // NOI18N\n \n-            Set charTemplate = charInstructions; // We don't care about PCDATA\n+            Set<String> charTemplate = charInstructions; // We don't care about PCDATA\n \n-            template = new TreeSet(instructions);\n+            template = new TreeSet<>(instructions);\n             template.add(resultElements);\n \n-            Set topLevel = new TreeSet(Arrays.asList(new String[]{\"import\",\"include\",\"strip-space\", // NOI18N\n+            Set<String> topLevel = new TreeSet<>(Arrays.<String>asList(new String[]{\"import\",\"include\",\"strip-space\", // NOI18N\n             \"preserve-space\",\"output\",\"key\",\"decimal-format\",\"attribute-set\", // NOI18N\n             \"variable\",\"param\",\"template\",\"namespace-alias\"})); // NOI18N\n \n-            Set topLevelAttr = new TreeSet(Arrays.asList(new String[]{\"extension-element-prefixes\", // NOI18N\n+            Set<String> topLevelAttr = new TreeSet(Arrays.<String>asList(new String[]{\"extension-element-prefixes\", // NOI18N", "originalCommit": "c75a02e1f95452f3e22847a6a280b49edf25b824", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA0NTA2Mw==", "url": "https://github.com/apache/netbeans/pull/2556#discussion_r529045063", "bodyText": "changed..", "author": "BradWalker", "createdAt": "2020-11-23T22:46:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU2NjUxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU2NjcwMw==", "url": "https://github.com/apache/netbeans/pull/2556#discussion_r528566703", "bodyText": "inferrable type informations\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        resultElementAttr = new TreeSet<>(Arrays.<String>asList(new String[]{\"extension-element-prefixes\", // NOI18N\n          \n          \n            \n                        resultElementAttr = new TreeSet<>(Arrays.asList(new String[]{\"extension-element-prefixes\", // NOI18N\n          \n      \n    \n    \n  \n\nstrictly speaking the array creation is not needed as well", "author": "mklaehn", "createdAt": "2020-11-23T09:29:55Z", "path": "ide/xsl/src/org/netbeans/modules/xsl/grammar/XSLGrammarQuery.java", "diffHunk": "@@ -136,33 +136,33 @@ private static Map getElementDecls() {\n             // Commonly used variables\n             Set emptySet = new TreeSet();\n             String spaceAtt = \"xml:space\";  // NOI18N\n-            Set tmpSet;\n+            Set<String> tmpSet;\n \n             ////////////////////////////////////////////////\n             // Initialize common sets\n \n-            Set charInstructions = new TreeSet(Arrays.asList(new String[]{\"apply-templates\", // NOI18N\n+            Set<String> charInstructions = new TreeSet<>(Arrays.<String>asList(new String[]{\"apply-templates\", // NOI18N\n             \"call-template\",\"apply-imports\",\"for-each\",\"value-of\", // NOI18N\n             \"copy-of\",\"number\",\"choose\",\"if\",\"text\",\"copy\", // NOI18N\n             \"variable\",\"message\",\"fallback\"})); // NOI18N\n \n-            Set instructions = new TreeSet(charInstructions);\n-            instructions.addAll(Arrays.asList(new String[]{\"processing-instruction\", // NOI18N\n+            Set<String> instructions = new TreeSet<>(charInstructions);\n+            instructions.addAll(Arrays.<String>asList(new String[]{\"processing-instruction\", // NOI18N\n             \"comment\",\"element\",\"attribute\"})); // NOI18N\n \n-            Set charTemplate = charInstructions; // We don't care about PCDATA\n+            Set<String> charTemplate = charInstructions; // We don't care about PCDATA\n \n-            template = new TreeSet(instructions);\n+            template = new TreeSet<>(instructions);\n             template.add(resultElements);\n \n-            Set topLevel = new TreeSet(Arrays.asList(new String[]{\"import\",\"include\",\"strip-space\", // NOI18N\n+            Set<String> topLevel = new TreeSet<>(Arrays.<String>asList(new String[]{\"import\",\"include\",\"strip-space\", // NOI18N\n             \"preserve-space\",\"output\",\"key\",\"decimal-format\",\"attribute-set\", // NOI18N\n             \"variable\",\"param\",\"template\",\"namespace-alias\"})); // NOI18N\n \n-            Set topLevelAttr = new TreeSet(Arrays.asList(new String[]{\"extension-element-prefixes\", // NOI18N\n+            Set<String> topLevelAttr = new TreeSet(Arrays.<String>asList(new String[]{\"extension-element-prefixes\", // NOI18N\n             \"exclude-result-prefixes\",\"id\",\"version\",spaceAtt})); // NOI18N\n \n-            resultElementAttr = new TreeSet(Arrays.asList(new String[]{\"extension-element-prefixes\", // NOI18N\n+            resultElementAttr = new TreeSet<>(Arrays.<String>asList(new String[]{\"extension-element-prefixes\", // NOI18N", "originalCommit": "c75a02e1f95452f3e22847a6a280b49edf25b824", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA0NTIxMw==", "url": "https://github.com/apache/netbeans/pull/2556#discussion_r529045213", "bodyText": "chnaged..", "author": "BradWalker", "createdAt": "2020-11-23T22:46:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU2NjcwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU2NjkyNw==", "url": "https://github.com/apache/netbeans/pull/2556#discussion_r528566927", "bodyText": "inferrable type informations\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        xslFunctions = new TreeSet<>(Arrays.<String>asList(new String[]{\n          \n          \n            \n                        xslFunctions = new TreeSet<>(Arrays.asList(new String[]{\n          \n      \n    \n    \n  \n\nstrictly speaking the array creation is not needed as well", "author": "mklaehn", "createdAt": "2020-11-23T09:30:17Z", "path": "ide/xsl/src/org/netbeans/modules/xsl/grammar/XSLGrammarQuery.java", "diffHunk": "@@ -365,7 +365,7 @@ private static Set getTemplate() {\n \n     private static Set getXslFunctions() {\n         if (xslFunctions == null) {\n-            xslFunctions = new TreeSet(Arrays.asList(new String[]{\n+            xslFunctions = new TreeSet<>(Arrays.<String>asList(new String[]{", "originalCommit": "c75a02e1f95452f3e22847a6a280b49edf25b824", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA0NTM1Mw==", "url": "https://github.com/apache/netbeans/pull/2556#discussion_r529045353", "bodyText": "changed..", "author": "BradWalker", "createdAt": "2020-11-23T22:47:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU2NjkyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU2NzE5Mg==", "url": "https://github.com/apache/netbeans/pull/2556#discussion_r528567192", "bodyText": "inferrable type informations\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        xpathAxes = new TreeSet<>(Arrays.<String>asList(new String[]{\"ancestor::\", \"ancestor-or-self::\", // NOI18N\n          \n          \n            \n                        xpathAxes = new TreeSet<>(Arrays.asList(new String[]{\"ancestor::\", \"ancestor-or-self::\", // NOI18N\n          \n      \n    \n    \n  \n\nstrictly speaking the array creation is not needed as well", "author": "mklaehn", "createdAt": "2020-11-23T09:30:38Z", "path": "ide/xsl/src/org/netbeans/modules/xsl/grammar/XSLGrammarQuery.java", "diffHunk": "@@ -378,7 +378,7 @@ private static Set getXslFunctions() {\n \n     private static Set getXPathAxes() {\n         if (xpathAxes == null) {\n-            xpathAxes = new TreeSet(Arrays.asList(new String[]{\"ancestor::\", \"ancestor-or-self::\", // NOI18N\n+            xpathAxes = new TreeSet<>(Arrays.<String>asList(new String[]{\"ancestor::\", \"ancestor-or-self::\", // NOI18N", "originalCommit": "c75a02e1f95452f3e22847a6a280b49edf25b824", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA0NTU0MQ==", "url": "https://github.com/apache/netbeans/pull/2556#discussion_r529045541", "bodyText": "changed..", "author": "BradWalker", "createdAt": "2020-11-23T22:47:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU2NzE5Mg=="}], "type": "inlineReview"}, {"oid": "0ca19363f7a8212ffe0a9902b332c64913169821", "url": "https://github.com/apache/netbeans/commit/0ca19363f7a8212ffe0a9902b332c64913169821", "message": "[NETBEANS-5053] - cleanup Set raw type warnings..\n\nI am trying to cleanup a bunch of the Set raw type warnings.. They look like this..\n\n   [repeat] /home/bwalker/src/netbeans/cpplite/cpplite.debugger/src/org/netbeans/modules/cpplite/debugger/breakpoints/CPPLiteBreakpointActionProvider.java:50: warning: [rawtypes] found raw type: Set\n   [repeat]     private static final Set actions = Collections.singleton (\n   [repeat]                          ^\n   [repeat]   missing type arguments for generic class Set<E>\n   [repeat]   where E is a type-variable:\n   [repeat]     E extends Object declared in interface Set\n\nThis change reduces the warnings dramatically. The ones remaining are in public interfaces\nand it's beyond the scope for me to tackle that.. Hopefully, in the future.", "committedDate": "2020-11-23T22:59:43Z", "type": "forcePushed"}, {"oid": "6ba5fdb52a1653696559e4abc3b1c26ec72c4ba4", "url": "https://github.com/apache/netbeans/commit/6ba5fdb52a1653696559e4abc3b1c26ec72c4ba4", "message": "[NETBEANS-5053] - cleanup Set raw type warnings..\n\nI am trying to cleanup a bunch of the Set raw type warnings.. They look like this..\n\n   [repeat] /home/bwalker/src/netbeans/cpplite/cpplite.debugger/src/org/netbeans/modules/cpplite/debugger/breakpoints/CPPLiteBreakpointActionProvider.java:50: warning: [rawtypes] found raw type: Set\n   [repeat]     private static final Set actions = Collections.singleton (\n   [repeat]                          ^\n   [repeat]   missing type arguments for generic class Set<E>\n   [repeat]   where E is a type-variable:\n   [repeat]     E extends Object declared in interface Set\n\nThis change reduces the warnings dramatically. The ones remaining are in public interfaces\nand it's beyond the scope for me to tackle that.. Hopefully, in the future.", "committedDate": "2020-11-23T23:24:08Z", "type": "commit"}, {"oid": "6ba5fdb52a1653696559e4abc3b1c26ec72c4ba4", "url": "https://github.com/apache/netbeans/commit/6ba5fdb52a1653696559e4abc3b1c26ec72c4ba4", "message": "[NETBEANS-5053] - cleanup Set raw type warnings..\n\nI am trying to cleanup a bunch of the Set raw type warnings.. They look like this..\n\n   [repeat] /home/bwalker/src/netbeans/cpplite/cpplite.debugger/src/org/netbeans/modules/cpplite/debugger/breakpoints/CPPLiteBreakpointActionProvider.java:50: warning: [rawtypes] found raw type: Set\n   [repeat]     private static final Set actions = Collections.singleton (\n   [repeat]                          ^\n   [repeat]   missing type arguments for generic class Set<E>\n   [repeat]   where E is a type-variable:\n   [repeat]     E extends Object declared in interface Set\n\nThis change reduces the warnings dramatically. The ones remaining are in public interfaces\nand it's beyond the scope for me to tackle that.. Hopefully, in the future.", "committedDate": "2020-11-23T23:24:08Z", "type": "forcePushed"}]}