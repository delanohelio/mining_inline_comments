{"pr_number": 2126, "pr_title": "[NETBEANS-4299] find endPos for synthetic annotation attribute", "pr_createdAt": "2020-05-02T22:55:06Z", "pr_url": "https://github.com/apache/netbeans/pull/2126", "timeline": [{"oid": "c10a0ee7dd362e8b1740d2c5e8ab75f7c89d7caa", "url": "https://github.com/apache/netbeans/commit/c10a0ee7dd362e8b1740d2c5e8ab75f7c89d7caa", "message": "[NETBEANS-4299] find endPos for synthetic annotation attribute", "committedDate": "2020-05-02T22:28:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA0Nzk0Ng==", "url": "https://github.com/apache/netbeans/pull/2126#discussion_r419047946", "bodyText": "I think the \"&& ... instanceof MethodSymbol\" is probably unnecessary.", "author": "jlahoda", "createdAt": "2020-05-03T05:01:28Z", "path": "java/java.source.base/src/org/netbeans/modules/java/source/save/CasualDiff.java", "diffHunk": "@@ -535,8 +535,18 @@ public int endPos(JCTree t) {\n             VariableTree vt = fgt.getVariables().get(fgt.getVariables().size() - 1);\n             return TreeInfo.getEndPos((JCTree)vt, oldTopLevel.endPositions);\n         }\n-        return TreeInfo.getEndPos(t, oldTopLevel.endPositions);\n+        int endPos = TreeInfo.getEndPos(t, oldTopLevel.endPositions);\n+\n+        // [NETBEANS-4299], catch a synthetic annotation attribute and try rhs\n+        if (endPos == Position.NOPOS && t instanceof JCAssign) {\n+            JCAssign assign = (JCAssign)t;\n+            if (assign.lhs instanceof JCIdent\n+                    && ((JCIdent)assign.lhs).sym instanceof Symbol.MethodSymbol) {", "originalCommit": "1c05253fa6c7c68d274627aee93a8d21d998316e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA1Mjc5Mw==", "url": "https://github.com/apache/netbeans/pull/2126#discussion_r419052793", "bodyText": "I guess a regular/real assignment would have been in oldTopLevel.endPositions. So since it failed to get endPos as an assignment, all that's needed is to simply check the rhs (the end should be after that). Checking the lhs shouldn't be needed at all. I was being most conservative, but any rhs match should be good. I guess it could just be\n// [NETBEANS-4299], catch a synthetic annotation attribute and try rhs\nif (endPos == Position.NOPOS && t instanceof JCAssign) {\n    endPos = TreeInfo.getEndPos(((JCAssign)t).rhs, oldTopLevel.endPositions);\n}\n\nThat feels less conservative and I don't know anything about the quirks in the trees.\n@jlahoda  your call. Do you want either change or as is?", "author": "errael", "createdAt": "2020-05-03T05:55:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA0Nzk0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE1NTEzMQ==", "url": "https://github.com/apache/netbeans/pull/2126#discussion_r419155131", "bodyText": "I'd say - simplify the code. (We will see if some tests fail.) Overall, touching symbols too much inside CausalDiff is not very good, although in this particular case it probably does not matter much.", "author": "jlahoda", "createdAt": "2020-05-03T20:24:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA0Nzk0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE3ODA2NQ==", "url": "https://github.com/apache/netbeans/pull/2126#discussion_r419178065", "bodyText": "Simplified. Since first check is NOPOS, probably doesn't matter how much stuff is done; but I like simple. My manual tests passed.\nBTW, I'm assuming endPos of assignment, is endPos of assignment.rhs in general.\nDo you believe this is safe for 12.0? There's that milestone thingy... And/or might add @ebarboni as reviewer.", "author": "errael", "createdAt": "2020-05-04T00:08:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA0Nzk0Ng=="}], "type": "inlineReview"}]}