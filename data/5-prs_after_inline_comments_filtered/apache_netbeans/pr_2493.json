{"pr_number": 2493, "pr_title": "Infrastructure to display simple confirmations/questions in LSP client.", "pr_createdAt": "2020-10-26T14:54:12Z", "pr_url": "https://github.com/apache/netbeans/pull/2493", "timeline": [{"oid": "0bc7d8240d3be78b2cafbdb3870898fa735d9098", "url": "https://github.com/apache/netbeans/commit/0bc7d8240d3be78b2cafbdb3870898fa735d9098", "message": "Added A11Y properties to the panel.", "committedDate": "2020-10-26T14:22:32Z", "type": "commit"}, {"oid": "1c030b19696eedbba77e2bd1bb15182e30e167d5", "url": "https://github.com/apache/netbeans/commit/1c030b19696eedbba77e2bd1bb15182e30e167d5", "message": "Infrastructure to display simple confirmations/questions in LSP client.", "committedDate": "2020-10-26T14:47:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjAyNjU2NQ==", "url": "https://github.com/apache/netbeans/pull/2493#discussion_r512026565", "bodyText": "Note this change: some events are fired synchronously from Open Project. If the code asks for something like DialogDisplayer.notify (which some code really does), the initialization request processing would block - and the notify() round-trip would be never completed, freezing LSP client-server communication completely.", "author": "sdedic", "createdAt": "2020-10-26T14:58:22Z", "path": "java/java.lsp.server/src/org/netbeans/modules/java/lsp/server/protocol/Server.java", "diffHunk": "@@ -216,7 +242,42 @@ Lookup getSessionLookup() {\n             capabilities.setDocumentHighlightProvider(true);\n             capabilities.setReferencesProvider(true);\n             capabilities.setExecuteCommandProvider(new ExecuteCommandOptions(Arrays.asList(JAVA_BUILD_WORKSPACE, GRAALVM_PAUSE_SCRIPT)));\n-            return CompletableFuture.completedFuture(new InitializeResult(capabilities));\n+            return new InitializeResult(capabilities);\n+        }\n+        \n+        @Override\n+        public CompletableFuture<InitializeResult> initialize(InitializeParams init) {", "originalCommit": "1c030b19696eedbba77e2bd1bb15182e30e167d5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjA1MTQ5MQ==", "url": "https://github.com/apache/netbeans/pull/2493#discussion_r512051491", "bodyText": "Reasonable, given we after feature freeze. This functionality will certainly be needed in the future. For 12.2 we'd rather delay using it, unless necessary.", "author": "JaroslavTulach", "createdAt": "2020-10-26T15:29:40Z", "path": "java/java.lsp.server/nbcode/integration/src/org/netbeans/modules/nbcode/integration/LspDialogDisplayer.java", "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.netbeans.modules.nbcode.integration;\n+\n+import org.netbeans.modules.java.lsp.server.ui.AbstractDialogDisplayer;\n+import org.openide.DialogDisplayer;\n+import org.openide.util.lookup.ServiceProvider;\n+\n+/**\n+ *\n+ * @author sdedic\n+ */\n+//@ServiceProvider(service = DialogDisplayer.class, position = 1000)", "originalCommit": "1c030b19696eedbba77e2bd1bb15182e30e167d5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjA5MzQ4NQ==", "url": "https://github.com/apache/netbeans/pull/2493#discussion_r512093485", "bodyText": "I'm bit confused. The PR is against delivery, but no 12.2 milestone set, I'm not among the reviewers. Am I assuming right upon this comment, that you would like to float this here in case of need? So it is tentative for 12.2? If yes, please decide it till beta3 (29th Oct, late PDT) this week. If that one is messed this one have to go to master. I've put the milestone 12.2 anyway.", "author": "lkishalmi", "createdAt": "2020-10-26T16:24:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjA1MTQ5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjEwMjU0Mg==", "url": "https://github.com/apache/netbeans/pull/2493#discussion_r512102542", "bodyText": "Is beta3 supposed to become VC1? Oct 29, so close!\nI asked Sv\u00e1\u0165a to propose his infrastructure changes in this PR for 12.2 as they are harmless (until we enable @ServiceProvider), but we may desperately need them. I am afraid we may need to download nbjavac if support for JDK8 is needed. Downloading shall of course only happen after asking a question - preferably through this Sv\u00e1\u0165a's infrastructure.\nThat's my rationale. but Oct 29, is so close!", "author": "JaroslavTulach", "createdAt": "2020-10-26T16:37:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjA1MTQ5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjEwMjU5Ng==", "url": "https://github.com/apache/netbeans/pull/2493#discussion_r512102596", "bodyText": "@lkishalmi I would added you after the PR passed through Jarda ;) it's easier to review cleaned-up code.", "author": "sdedic", "createdAt": "2020-10-26T16:37:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjA1MTQ5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE4NTk0MA==", "url": "https://github.com/apache/netbeans/pull/2493#discussion_r512185940", "bodyText": "The VC is or I'd better call it RC is due to 7th of November. Previously we had 2 week period between beta1 and beta2, I've switched it  to one week as usually the forts week in the release mode is when the most commits are happening \"oh, this is a minor, but needs to be there\". Also the weekly delivery -> master merge is hopefully small enough change to deal with.", "author": "lkishalmi", "createdAt": "2020-10-26T18:38:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjA1MTQ5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjA1NTg2Ng==", "url": "https://github.com/apache/netbeans/pull/2493#discussion_r512055866", "bodyText": "Throughput 10!? Isn't opening of project sequential anyway?", "author": "JaroslavTulach", "createdAt": "2020-10-26T15:35:12Z", "path": "java/java.lsp.server/src/org/netbeans/modules/java/lsp/server/protocol/Server.java", "diffHunk": "@@ -86,39 +109,56 @@ public static void launchServer(InputStream in, OutputStream out) {\n         }\n     }\n     \n-    private static Launcher<NbCodeLanguageClient> createLauncher(LanguageServerImpl server, InputStream in, OutputStream out) {\n+    private static Launcher<NbCodeLanguageClient> createLauncher(LanguageServerImpl server, InputStream in, OutputStream out,\n+            Function<MessageConsumer, MessageConsumer> processor) {\n         return new LSPLauncher.Builder<NbCodeLanguageClient>()\n             .setLocalService(server)\n             .setRemoteInterface(NbCodeLanguageClient.class)\n             .setInput(in)\n             .setOutput(out)\n-            .wrapMessages(new ConsumeWithLookup(server.getSessionLookup())::attachLookup)\n+            .wrapMessages(processor)\n             .create();\n     }\n     \n+    static final ThreadLocal<NbCodeLanguageClient>   DISPATCHERS = new ThreadLocal<>();\n+    \n     /**\n      * Processes message while the default Lookup is set to \n      * {@link LanguageServerImpl#getSessionLookup()}.\n      */\n     private static class ConsumeWithLookup {\n         private final Lookup sessionLookup;\n-\n+        private NbCodeLanguageClient client;\n+        \n         public ConsumeWithLookup(Lookup sessionLookup) {\n             this.sessionLookup = sessionLookup;\n         }\n         \n+        synchronized void attachClient(NbCodeLanguageClient client) {\n+            this.client = client;\n+        }\n+        \n         public MessageConsumer attachLookup(MessageConsumer delegate) {\n             return new MessageConsumer() {\n                 @Override\n                 public void consume(Message msg) throws MessageIssueException, JsonRpcException {\n-                    Lookups.executeWith(sessionLookup, () -> {\n-                        delegate.consume(msg);\n-                    });\n+                    try {\n+                        DISPATCHERS.set(client);\n+                        Lookups.executeWith(sessionLookup, () -> {\n+                            delegate.consume(msg);\n+                        });\n+                    } finally {\n+                        DISPATCHERS.remove();\n+                    }\n                 }\n             };\n         }\n     }\n     \n+    private static final RequestProcessor SERVER_INIT_RP = new RequestProcessor(LanguageServerImpl.class.getName(), 10);", "originalCommit": "1c030b19696eedbba77e2bd1bb15182e30e167d5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjEwMTg2MA==", "url": "https://github.com/apache/netbeans/pull/2493#discussion_r512101860", "bodyText": "Hmm ... OK; I thought about multiple instances that may have been initializing (multiple LSP clients), but you're right as far as there's just project open operation being waited on. Will change.", "author": "sdedic", "createdAt": "2020-10-26T16:36:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjA1NTg2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjA1NzQzMw==", "url": "https://github.com/apache/netbeans/pull/2493#discussion_r512057433", "bodyText": "Is the initializations field read anywhere? I can't find it (and that'd be good, as I don't think it is needed).", "author": "JaroslavTulach", "createdAt": "2020-10-26T15:37:14Z", "path": "java/java.lsp.server/src/org/netbeans/modules/java/lsp/server/protocol/Server.java", "diffHunk": "@@ -86,39 +109,56 @@ public static void launchServer(InputStream in, OutputStream out) {\n         }\n     }\n     \n-    private static Launcher<NbCodeLanguageClient> createLauncher(LanguageServerImpl server, InputStream in, OutputStream out) {\n+    private static Launcher<NbCodeLanguageClient> createLauncher(LanguageServerImpl server, InputStream in, OutputStream out,\n+            Function<MessageConsumer, MessageConsumer> processor) {\n         return new LSPLauncher.Builder<NbCodeLanguageClient>()\n             .setLocalService(server)\n             .setRemoteInterface(NbCodeLanguageClient.class)\n             .setInput(in)\n             .setOutput(out)\n-            .wrapMessages(new ConsumeWithLookup(server.getSessionLookup())::attachLookup)\n+            .wrapMessages(processor)\n             .create();\n     }\n     \n+    static final ThreadLocal<NbCodeLanguageClient>   DISPATCHERS = new ThreadLocal<>();\n+    \n     /**\n      * Processes message while the default Lookup is set to \n      * {@link LanguageServerImpl#getSessionLookup()}.\n      */\n     private static class ConsumeWithLookup {\n         private final Lookup sessionLookup;\n-\n+        private NbCodeLanguageClient client;\n+        \n         public ConsumeWithLookup(Lookup sessionLookup) {\n             this.sessionLookup = sessionLookup;\n         }\n         \n+        synchronized void attachClient(NbCodeLanguageClient client) {\n+            this.client = client;\n+        }\n+        \n         public MessageConsumer attachLookup(MessageConsumer delegate) {\n             return new MessageConsumer() {\n                 @Override\n                 public void consume(Message msg) throws MessageIssueException, JsonRpcException {\n-                    Lookups.executeWith(sessionLookup, () -> {\n-                        delegate.consume(msg);\n-                    });\n+                    try {\n+                        DISPATCHERS.set(client);\n+                        Lookups.executeWith(sessionLookup, () -> {\n+                            delegate.consume(msg);\n+                        });\n+                    } finally {\n+                        DISPATCHERS.remove();\n+                    }\n                 }\n             };\n         }\n     }\n     \n+    private static final RequestProcessor SERVER_INIT_RP = new RequestProcessor(LanguageServerImpl.class.getName(), 10);\n+    private static final Map<NbCodeClientWrapper, Future> initializations = new WeakHashMap<>();", "originalCommit": "1c030b19696eedbba77e2bd1bb15182e30e167d5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjEwMjAwNQ==", "url": "https://github.com/apache/netbeans/pull/2493#discussion_r512102005", "bodyText": "leftover, will remove. I originally planned to cancel the pending Future if the server receives exit()", "author": "sdedic", "createdAt": "2020-10-26T16:36:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjA1NzQzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjA2MTA2Nw==", "url": "https://github.com/apache/netbeans/pull/2493#discussion_r512061067", "bodyText": "I believe the translation of the text away from HTML shall only happen if it starts with <html>.", "author": "JaroslavTulach", "createdAt": "2020-10-26T15:41:47Z", "path": "java/java.lsp.server/src/org/netbeans/modules/java/lsp/server/ui/NotifyDescriptorAdapter.java", "diffHunk": "@@ -0,0 +1,322 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.netbeans.modules.java.lsp.server.ui;\n+\n+import java.awt.Component;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.LinkedHashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.ExecutionException;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import java.util.stream.Collectors;\n+import javax.accessibility.Accessible;\n+import javax.accessibility.AccessibleContext;\n+import javax.accessibility.AccessibleIcon;\n+import javax.accessibility.AccessibleText;\n+import javax.swing.Icon;\n+import javax.swing.JButton;\n+import org.eclipse.lsp4j.MessageActionItem;\n+import org.eclipse.lsp4j.MessageType;\n+import org.eclipse.lsp4j.ShowMessageRequestParams;\n+import org.openide.NotifyDescriptor;\n+import org.openide.util.NbBundle;\n+\n+/**\n+ * Adapts a {@link NotifyDescriptor} to a {@link ShowMessageRequestParams} call.\n+ * @author sdedic\n+ */\n+class NotifyDescriptorAdapter {\n+    private static final Logger LOG = Logger.getLogger(NotifyDescriptorAdapter.class.getName());\n+    \n+    private final UIContext client;\n+    private final NotifyDescriptor  descriptor;\n+    private final Map<MessageActionItem, Object> item2Option = new LinkedHashMap<>();\n+    private final Map<String, Object> text2Option = new HashMap<>();\n+    private final Map<Object, List<ActionListener>> optionListeners = new HashMap<>();\n+    private final Map<Object, JButton> option2Button = new HashMap<>();\n+    \n+    private static final Set<String> warnedClasses = new HashSet<>();\n+    \n+    private ShowMessageRequestParams request;\n+\n+    private static final Object[] YES_NO_CANCEL = new Object[] {\n+        NotifyDescriptor.YES_OPTION,\n+        NotifyDescriptor.NO_OPTION,\n+        NotifyDescriptor.CANCEL_OPTION\n+    };\n+    \n+    private static final Object[] YES_NO = new Object[] {\n+        NotifyDescriptor.YES_OPTION,\n+        NotifyDescriptor.NO_OPTION,\n+    };\n+    \n+    private static final Object[] OK_CANCEL = new Object[] {\n+        NotifyDescriptor.OK_OPTION,\n+        NotifyDescriptor.CANCEL_OPTION\n+    };\n+    \n+    private static final Object[] JUST_OK = new Object[] {\n+        NotifyDescriptor.OK_OPTION\n+    };\n+    \n+    public NotifyDescriptorAdapter(NotifyDescriptor descriptor, UIContext client) {\n+        this.descriptor = descriptor;\n+        this.client = client;\n+    }\n+    \n+    private MessageType translateMessageType() {\n+        switch(descriptor.getMessageType()) {\n+            case NotifyDescriptor.ERROR_MESSAGE:\n+                return MessageType.Error;\n+            case NotifyDescriptor.WARNING_MESSAGE:\n+                return MessageType.Warning;\n+            \n+            case NotifyDescriptor.QUESTION_MESSAGE:\n+            case NotifyDescriptor.PLAIN_MESSAGE:\n+            case NotifyDescriptor.INFORMATION_MESSAGE:\n+                return MessageType.Info;\n+            default:\n+                return MessageType.Log;\n+        }\n+    }\n+    \n+    /**\n+     * Strip HTML from the message; VSCode standard showMessage does not support HTML.\n+     * @param original\n+     * @return \n+     */\n+    private String translateText(String original) {", "originalCommit": "1c030b19696eedbba77e2bd1bb15182e30e167d5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4372b99790288c14269b6da85ceec1e2205a84c0", "url": "https://github.com/apache/netbeans/commit/4372b99790288c14269b6da85ceec1e2205a84c0", "message": "Only translate html-starting content.", "committedDate": "2020-10-26T16:45:23Z", "type": "commit"}, {"oid": "8b4a3eda77ac8ec6afc85df27b42a5c62e41149f", "url": "https://github.com/apache/netbeans/commit/8b4a3eda77ac8ec6afc85df27b42a5c62e41149f", "message": "Leftover cleanup.", "committedDate": "2020-10-26T16:45:45Z", "type": "commit"}]}