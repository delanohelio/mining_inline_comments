{"pr_number": 1925, "pr_title": "Add UI to be able to disable Janitor on the Startup", "pr_createdAt": "2020-02-05T21:01:00Z", "pr_url": "https://github.com/apache/netbeans/pull/1925", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc3NzY0OA==", "url": "https://github.com/apache/netbeans/pull/1925#discussion_r375777648", "bodyText": "Typo here. Should be \"Janitor\"", "author": "AlexFalappa", "createdAt": "2020-02-06T11:19:08Z", "path": "platform/janitor/src/org/netbeans/modules/janitor/JanitorOptionsPanel.java", "diffHunk": "@@ -0,0 +1,147 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.netbeans.modules.janitor;\n+\n+import javax.swing.SpinnerNumberModel;\n+import org.openide.util.NbBundle;\n+import org.openide.util.NbBundle.Messages;\n+\n+/**\n+ *\n+ * @author lkishalmi\n+ */\n+public class JanitorOptionsPanel extends javax.swing.JPanel {\n+\n+    final SpinnerNumberModel spinnerModel;\n+    /**\n+     * Creates new form JanitorOptionsPanel\n+     */\n+    public JanitorOptionsPanel() {\n+        initComponents();\n+        spinnerModel = new SpinnerNumberModel(Janitor.getUnusedDays(), 0, 5*365, 1);\n+        spUnusedDays.setModel(spinnerModel);\n+    }\n+\n+    void loadValues() {\n+        cbEnabled.setSelected(Janitor.isEnabled());\n+        spinnerModel.setValue(Janitor.getUnusedDays());\n+        resetRunNow();\n+    }\n+\n+    void saveValues() {\n+        Janitor.setEnabled(cbEnabled.isSelected());\n+        Janitor.setUnusedDays(spinnerModel.getNumber().intValue());\n+        resetRunNow();\n+    }\n+\n+    boolean isChanged() {\n+        boolean changed = false;\n+        changed |= cbEnabled.isSelected() != Janitor.isEnabled();\n+        changed |= spinnerModel.getNumber().intValue() != Janitor.getUnusedDays();\n+        changed |= !btRunNow.isEnabled();\n+        return changed;\n+    }\n+    \n+    /**\n+     * This method is called from within the constructor to initialize the form.\n+     * WARNING: Do NOT modify this code. The content of this method is always\n+     * regenerated by the Form Editor.\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n+    private void initComponents() {\n+\n+        cbEnabled = new javax.swing.JCheckBox();\n+        jLabel1 = new javax.swing.JLabel();\n+        spUnusedDays = new javax.swing.JSpinner();\n+        btRunNow = new javax.swing.JButton();\n+        lbRunNowInfo = new javax.swing.JLabel();\n+\n+        org.openide.awt.Mnemonics.setLocalizedText(cbEnabled, org.openide.util.NbBundle.getMessage(JanitorOptionsPanel.class, \"JanitorOptionsPanel.cbEnabled.text\")); // NOI18N\n+\n+        jLabel1.setLabelFor(spUnusedDays);\n+        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(JanitorOptionsPanel.class, \"JanitorOptionsPanel.jLabel1.text\")); // NOI18N\n+\n+        org.openide.awt.Mnemonics.setLocalizedText(btRunNow, org.openide.util.NbBundle.getMessage(JanitorOptionsPanel.class, \"JanitorOptionsPanel.btRunNow.text\")); // NOI18N\n+        btRunNow.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                btRunNowActionPerformed(evt);\n+            }\n+        });\n+\n+        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n+        this.setLayout(layout);\n+        layout.setHorizontalGroup(\n+            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n+            .addGroup(layout.createSequentialGroup()\n+                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n+                    .addGroup(layout.createSequentialGroup()\n+                        .addContainerGap()\n+                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n+                            .addComponent(cbEnabled, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n+                            .addGroup(layout.createSequentialGroup()\n+                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n+                                    .addGroup(layout.createSequentialGroup()\n+                                        .addComponent(jLabel1)\n+                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n+                                        .addComponent(spUnusedDays, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))\n+                                    .addComponent(btRunNow))\n+                                .addGap(0, 43, Short.MAX_VALUE))))\n+                    .addGroup(layout.createSequentialGroup()\n+                        .addGap(12, 12, 12)\n+                        .addComponent(lbRunNowInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))\n+                .addContainerGap())\n+        );\n+        layout.setVerticalGroup(\n+            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n+            .addGroup(layout.createSequentialGroup()\n+                .addContainerGap()\n+                .addComponent(cbEnabled)\n+                .addGap(18, 18, 18)\n+                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n+                    .addComponent(jLabel1)\n+                    .addComponent(spUnusedDays, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))\n+                .addGap(18, 18, 18)\n+                .addComponent(btRunNow)\n+                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n+                .addComponent(lbRunNowInfo)\n+                .addContainerGap(176, Short.MAX_VALUE))\n+        );\n+    }// </editor-fold>//GEN-END:initComponents\n+\n+    @Messages(\"lbRunNowInfo_Info=Junitor run. Check your Notifications.\")", "originalCommit": "0edf34eac26761c301fdd42678bfebf6c22c23c3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e22bc118948564a9e9d837cfb9b82f831d838bb9", "url": "https://github.com/apache/netbeans/commit/e22bc118948564a9e9d837cfb9b82f831d838bb9", "message": "Add UI to be able to disable Janitor on the Startup", "committedDate": "2020-02-06T15:06:25Z", "type": "forcePushed"}, {"oid": "7a16086b57aafe8df75453ed83e34d9aa019bab3", "url": "https://github.com/apache/netbeans/commit/7a16086b57aafe8df75453ed83e34d9aa019bab3", "message": "Add UI to be able to disable Janitor on the Startup", "committedDate": "2020-02-07T14:39:01Z", "type": "commit"}, {"oid": "7a16086b57aafe8df75453ed83e34d9aa019bab3", "url": "https://github.com/apache/netbeans/commit/7a16086b57aafe8df75453ed83e34d9aa019bab3", "message": "Add UI to be able to disable Janitor on the Startup", "committedDate": "2020-02-07T14:39:01Z", "type": "forcePushed"}]}