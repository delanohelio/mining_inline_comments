{"pr_number": 8027, "pr_title": "CB-6914 Salt error in termination phase", "pr_createdAt": "2020-05-12T15:04:28Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/8027", "timeline": [{"oid": "7ece2b7e7bad1e31304b681a68ca7122356c4f58", "url": "https://github.com/hortonworks/cloudbreak/commit/7ece2b7e7bad1e31304b681a68ca7122356c4f58", "message": "CB-6914 Salt error in termination phase", "committedDate": "2020-05-12T15:13:10Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzgyMDcwMw==", "url": "https://github.com/hortonworks/cloudbreak/pull/8027#discussion_r423820703", "bodyText": "why do you stream the entryset if you need only the values?", "author": "lacikaaa", "createdAt": "2020-05-12T15:20:51Z", "path": "orchestrator-salt/src/main/java/com/sequenceiq/cloudbreak/orchestrator/salt/SaltOrchestrator.java", "diffHunk": "@@ -782,20 +783,38 @@ public void stopClusterManagerAgent(GatewayConfig gatewayConfig, Set<Node> nodes\n     public void leaveDomain(GatewayConfig gatewayConfig, Set<Node> allNodes, String roleToRemove, String roleToAdd, ExitCriteriaModel exitCriteriaModel)\n             throws CloudbreakOrchestratorFailedException {\n         try (SaltConnector sc = createSaltConnector(gatewayConfig)) {\n-            Set<String> targetHostnames = allNodes.stream().map(Node::getHostname).collect(Collectors.toSet());\n-            saltCommandRunner.runSaltCommand(sc, new GrainAddRunner(targetHostnames, allNodes, \"roles\", roleToAdd), exitCriteriaModel, maxRetryLeave,\n-                    exitCriteria);\n-            saltCommandRunner.runSaltCommand(sc, new GrainRemoveRunner(targetHostnames, allNodes, \"roles\", roleToRemove), exitCriteriaModel, maxRetryLeave,\n-                    exitCriteria);\n-            Set<String> allHostnames = allNodes.stream().map(Node::getHostname).collect(Collectors.toSet());\n-            saltCommandRunner.runSaltCommand(sc, new SyncAllRunner(allHostnames, allNodes), exitCriteriaModel, maxRetryLeave, exitCriteria);\n-            runNewService(sc, new HighStateRunner(allHostnames, allNodes), exitCriteriaModel, maxRetryLeave, true);\n+            if (isChangingRolesNecessary(gatewayConfig, sc, roleToRemove)) {\n+                Set<String> targetHostnames = allNodes.stream().map(Node::getHostname).collect(Collectors.toSet());\n+                saltCommandRunner.runSaltCommand(sc, new GrainAddRunner(targetHostnames, allNodes, \"roles\", roleToAdd),\n+                        exitCriteriaModel, maxRetryLeave, exitCriteria);\n+                saltCommandRunner.runSaltCommand(sc, new GrainRemoveRunner(targetHostnames, allNodes, \"roles\", roleToRemove),\n+                        exitCriteriaModel, maxRetryLeave, exitCriteria);\n+                Set<String> allHostnames = allNodes.stream().map(Node::getHostname).collect(Collectors.toSet());\n+                saltCommandRunner.runSaltCommand(sc, new SyncAllRunner(allHostnames, allNodes), exitCriteriaModel, maxRetryLeave, exitCriteria);\n+                runNewService(sc, new HighStateRunner(allHostnames, allNodes), exitCriteriaModel, maxRetryLeave, true);\n+            }\n         } catch (Exception e) {\n             LOGGER.info(\"Error occurred during executing highstate (for recipes).\", e);\n             throw new CloudbreakOrchestratorFailedException(e);\n         }\n     }\n \n+    private boolean isChangingRolesNecessary(GatewayConfig gatewayConfig, SaltConnector sc, String role) {\n+        return getMemberRoles(gatewayConfig, sc).contains(role);\n+    }\n+\n+    private Set<String> getMemberRoles(GatewayConfig gatewayConfig, SaltConnector sc) {\n+        Map<String, JsonNode> roles = SaltStates.getGrains(sc, new HostList(List.of(gatewayConfig.getHostname())), \"roles\");\n+        return roles.entrySet().stream().findFirst()\n+                .map(Entry::getValue)", "originalCommit": "7ece2b7e7bad1e31304b681a68ca7122356c4f58", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzgzMTUyMw==", "url": "https://github.com/hortonworks/cloudbreak/pull/8027#discussion_r423831523", "bodyText": "ok", "author": "bbihari", "createdAt": "2020-05-12T15:35:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzgyMDcwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzgyMTU3NQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/8027#discussion_r423821575", "bodyText": "what happens here? what is l and i?", "author": "lacikaaa", "createdAt": "2020-05-12T15:21:58Z", "path": "orchestrator-salt/src/main/java/com/sequenceiq/cloudbreak/orchestrator/salt/SaltOrchestrator.java", "diffHunk": "@@ -782,20 +783,38 @@ public void stopClusterManagerAgent(GatewayConfig gatewayConfig, Set<Node> nodes\n     public void leaveDomain(GatewayConfig gatewayConfig, Set<Node> allNodes, String roleToRemove, String roleToAdd, ExitCriteriaModel exitCriteriaModel)\n             throws CloudbreakOrchestratorFailedException {\n         try (SaltConnector sc = createSaltConnector(gatewayConfig)) {\n-            Set<String> targetHostnames = allNodes.stream().map(Node::getHostname).collect(Collectors.toSet());\n-            saltCommandRunner.runSaltCommand(sc, new GrainAddRunner(targetHostnames, allNodes, \"roles\", roleToAdd), exitCriteriaModel, maxRetryLeave,\n-                    exitCriteria);\n-            saltCommandRunner.runSaltCommand(sc, new GrainRemoveRunner(targetHostnames, allNodes, \"roles\", roleToRemove), exitCriteriaModel, maxRetryLeave,\n-                    exitCriteria);\n-            Set<String> allHostnames = allNodes.stream().map(Node::getHostname).collect(Collectors.toSet());\n-            saltCommandRunner.runSaltCommand(sc, new SyncAllRunner(allHostnames, allNodes), exitCriteriaModel, maxRetryLeave, exitCriteria);\n-            runNewService(sc, new HighStateRunner(allHostnames, allNodes), exitCriteriaModel, maxRetryLeave, true);\n+            if (isChangingRolesNecessary(gatewayConfig, sc, roleToRemove)) {\n+                Set<String> targetHostnames = allNodes.stream().map(Node::getHostname).collect(Collectors.toSet());\n+                saltCommandRunner.runSaltCommand(sc, new GrainAddRunner(targetHostnames, allNodes, \"roles\", roleToAdd),\n+                        exitCriteriaModel, maxRetryLeave, exitCriteria);\n+                saltCommandRunner.runSaltCommand(sc, new GrainRemoveRunner(targetHostnames, allNodes, \"roles\", roleToRemove),\n+                        exitCriteriaModel, maxRetryLeave, exitCriteria);\n+                Set<String> allHostnames = allNodes.stream().map(Node::getHostname).collect(Collectors.toSet());\n+                saltCommandRunner.runSaltCommand(sc, new SyncAllRunner(allHostnames, allNodes), exitCriteriaModel, maxRetryLeave, exitCriteria);\n+                runNewService(sc, new HighStateRunner(allHostnames, allNodes), exitCriteriaModel, maxRetryLeave, true);\n+            }\n         } catch (Exception e) {\n             LOGGER.info(\"Error occurred during executing highstate (for recipes).\", e);\n             throw new CloudbreakOrchestratorFailedException(e);\n         }\n     }\n \n+    private boolean isChangingRolesNecessary(GatewayConfig gatewayConfig, SaltConnector sc, String role) {\n+        return getMemberRoles(gatewayConfig, sc).contains(role);\n+    }\n+\n+    private Set<String> getMemberRoles(GatewayConfig gatewayConfig, SaltConnector sc) {\n+        Map<String, JsonNode> roles = SaltStates.getGrains(sc, new HostList(List.of(gatewayConfig.getHostname())), \"roles\");\n+        return roles.entrySet().stream().findFirst()\n+                .map(Entry::getValue)\n+                .map(JsonNode::elements)\n+                .map(IteratorUtils::toList)\n+                .map(l -> (Set<String>) l.stream()\n+                        .map(i -> ((JsonNode) i).asText())\n+                        .collect(Collectors.toSet())", "originalCommit": "7ece2b7e7bad1e31304b681a68ca7122356c4f58", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzgzMzQ4NQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/8027#discussion_r423833485", "bodyText": "I've 'fixed' it. Personally I like to use short variables in lambda. I think in this place it wasn't confusing.", "author": "bbihari", "createdAt": "2020-05-12T15:37:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzgyMTU3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzgyMzY1OA==", "url": "https://github.com/hortonworks/cloudbreak/pull/8027#discussion_r423823658", "bodyText": "it could be useful somewhere else, should we extract it? also some tests for this would be nice", "author": "lacikaaa", "createdAt": "2020-05-12T15:24:33Z", "path": "orchestrator-salt/src/main/java/com/sequenceiq/cloudbreak/orchestrator/salt/SaltOrchestrator.java", "diffHunk": "@@ -782,20 +783,38 @@ public void stopClusterManagerAgent(GatewayConfig gatewayConfig, Set<Node> nodes\n     public void leaveDomain(GatewayConfig gatewayConfig, Set<Node> allNodes, String roleToRemove, String roleToAdd, ExitCriteriaModel exitCriteriaModel)\n             throws CloudbreakOrchestratorFailedException {\n         try (SaltConnector sc = createSaltConnector(gatewayConfig)) {\n-            Set<String> targetHostnames = allNodes.stream().map(Node::getHostname).collect(Collectors.toSet());\n-            saltCommandRunner.runSaltCommand(sc, new GrainAddRunner(targetHostnames, allNodes, \"roles\", roleToAdd), exitCriteriaModel, maxRetryLeave,\n-                    exitCriteria);\n-            saltCommandRunner.runSaltCommand(sc, new GrainRemoveRunner(targetHostnames, allNodes, \"roles\", roleToRemove), exitCriteriaModel, maxRetryLeave,\n-                    exitCriteria);\n-            Set<String> allHostnames = allNodes.stream().map(Node::getHostname).collect(Collectors.toSet());\n-            saltCommandRunner.runSaltCommand(sc, new SyncAllRunner(allHostnames, allNodes), exitCriteriaModel, maxRetryLeave, exitCriteria);\n-            runNewService(sc, new HighStateRunner(allHostnames, allNodes), exitCriteriaModel, maxRetryLeave, true);\n+            if (isChangingRolesNecessary(gatewayConfig, sc, roleToRemove)) {\n+                Set<String> targetHostnames = allNodes.stream().map(Node::getHostname).collect(Collectors.toSet());\n+                saltCommandRunner.runSaltCommand(sc, new GrainAddRunner(targetHostnames, allNodes, \"roles\", roleToAdd),\n+                        exitCriteriaModel, maxRetryLeave, exitCriteria);\n+                saltCommandRunner.runSaltCommand(sc, new GrainRemoveRunner(targetHostnames, allNodes, \"roles\", roleToRemove),\n+                        exitCriteriaModel, maxRetryLeave, exitCriteria);\n+                Set<String> allHostnames = allNodes.stream().map(Node::getHostname).collect(Collectors.toSet());\n+                saltCommandRunner.runSaltCommand(sc, new SyncAllRunner(allHostnames, allNodes), exitCriteriaModel, maxRetryLeave, exitCriteria);\n+                runNewService(sc, new HighStateRunner(allHostnames, allNodes), exitCriteriaModel, maxRetryLeave, true);\n+            }\n         } catch (Exception e) {\n             LOGGER.info(\"Error occurred during executing highstate (for recipes).\", e);\n             throw new CloudbreakOrchestratorFailedException(e);\n         }\n     }\n \n+    private boolean isChangingRolesNecessary(GatewayConfig gatewayConfig, SaltConnector sc, String role) {", "originalCommit": "7ece2b7e7bad1e31304b681a68ca7122356c4f58", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzgzMTI5OQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/8027#discussion_r423831299", "bodyText": "As long as we don't use this function at least one other place, I wouldn't like to make it public or extract it", "author": "bbihari", "createdAt": "2020-05-12T15:34:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzgyMzY1OA=="}], "type": "inlineReview"}, {"oid": "0b03c0ff3775b794500274b9d0c598b85d78aeed", "url": "https://github.com/hortonworks/cloudbreak/commit/0b03c0ff3775b794500274b9d0c598b85d78aeed", "message": "CB-6914 Salt error in termination phase", "committedDate": "2020-05-12T15:32:07Z", "type": "forcePushed"}, {"oid": "d1f6e1a34ed7463ce2eb1d44c47ab4dcae700661", "url": "https://github.com/hortonworks/cloudbreak/commit/d1f6e1a34ed7463ce2eb1d44c47ab4dcae700661", "message": "CB-6914 Salt error in termination phase", "committedDate": "2020-05-13T08:54:28Z", "type": "commit"}, {"oid": "d1f6e1a34ed7463ce2eb1d44c47ab4dcae700661", "url": "https://github.com/hortonworks/cloudbreak/commit/d1f6e1a34ed7463ce2eb1d44c47ab4dcae700661", "message": "CB-6914 Salt error in termination phase", "committedDate": "2020-05-13T08:54:28Z", "type": "forcePushed"}]}