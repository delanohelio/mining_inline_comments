{"pr_number": 7892, "pr_title": "CB-6745: Allow FreeIPA health check when the stack is unavailable", "pr_createdAt": "2020-04-24T13:49:51Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/7892", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYxMzk3Mw==", "url": "https://github.com/hortonworks/cloudbreak/pull/7892#discussion_r414613973", "bodyText": "this method name get a little bit out of hand :)\ncould you make it shorter, like getFreeIpaClientForCheck or something similar", "author": "lacikaaa", "createdAt": "2020-04-24T14:21:04Z", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/FreeIpaClientFactory.java", "diffHunk": "@@ -142,17 +144,17 @@ private boolean canTryAnotherInstance(boolean lastInstance, IOException e) {\n \n     public FreeIpaClient getFreeIpaClientForStack(Stack stack) throws FreeIpaClientException {\n         LOGGER.debug(\"Creating FreeIpaClient for stack {}\", stack.getResourceCrn());\n-        return getFreeIpaClient(stack, false, Optional.empty());\n+        return getFreeIpaClient(stack, false, false, Optional.empty());\n     }\n \n     public FreeIpaClient getFreeIpaClientForStack(Stack stack, String freeIpaFqdn) throws FreeIpaClientException {\n         LOGGER.debug(\"Creating FreeIpaClient for stack {} for {}\", stack.getResourceCrn(), freeIpaFqdn);\n-        return getFreeIpaClient(stack, false, Optional.of(freeIpaFqdn));\n+        return getFreeIpaClient(stack, false, false, Optional.of(freeIpaFqdn));\n     }\n \n-    public FreeIpaClient getFreeIpaClientForStackWithPing(Stack stack, String freeIpaFqdn) throws Exception {\n+    public FreeIpaClient getFreeIpaClientForStackWithPingAndForceCheckUnreachableStack(Stack stack, String freeIpaFqdn) throws Exception {", "originalCommit": "51c88d9eed3d62b49a28076b2c4dbaf417872576", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ed23ea9982d2125bca5da8bc2880e590d01986e5", "url": "https://github.com/hortonworks/cloudbreak/commit/ed23ea9982d2125bca5da8bc2880e590d01986e5", "message": "CB-6745: Allow FreeIPA health check when the stack is unavailable\n\nFixes the health check so that it is able to run when the stack is\nunavailable.\n\nFixes the stack status so that when it is unavailable it doesn't\nbounce between unavailable and unhealthy every minute, but rather\nit remains unavailable until it should actually change.\n\nFixes some exception handling so that it checks the exceptions that\nare wrapped inside a FreeIpaClientException.\n\nIn addition to updating the tests, this was validated on a cluster\nthat was stuck in the unavailable status to ensure it became\navailable after the problem was fixed.", "committedDate": "2020-04-24T19:32:55Z", "type": "commit"}, {"oid": "ed23ea9982d2125bca5da8bc2880e590d01986e5", "url": "https://github.com/hortonworks/cloudbreak/commit/ed23ea9982d2125bca5da8bc2880e590d01986e5", "message": "CB-6745: Allow FreeIPA health check when the stack is unavailable\n\nFixes the health check so that it is able to run when the stack is\nunavailable.\n\nFixes the stack status so that when it is unavailable it doesn't\nbounce between unavailable and unhealthy every minute, but rather\nit remains unavailable until it should actually change.\n\nFixes some exception handling so that it checks the exceptions that\nare wrapped inside a FreeIpaClientException.\n\nIn addition to updating the tests, this was validated on a cluster\nthat was stuck in the unavailable status to ensure it became\navailable after the problem was fixed.", "committedDate": "2020-04-24T19:32:55Z", "type": "forcePushed"}]}