{"pr_number": 8129, "pr_title": "CB-6585 ClusterDefinition and ClusterTemplate should accessible for M\u2026", "pr_createdAt": "2020-05-21T15:37:13Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/8129", "timeline": [{"oid": "da24ad2dcbc6e9e2296555e0951ceb548de6f21f", "url": "https://github.com/hortonworks/cloudbreak/commit/da24ad2dcbc6e9e2296555e0951ceb548de6f21f", "message": "CB-6585 ClusterDefinition and ClusterTemplate should accessible for Management Console owner", "committedDate": "2020-05-22T13:25:01Z", "type": "forcePushed"}, {"oid": "d31c154ea7e5e86ee92ccb9013fed3d304daf869", "url": "https://github.com/hortonworks/cloudbreak/commit/d31c154ea7e5e86ee92ccb9013fed3d304daf869", "message": "CB-6585 ClusterDefinition and ClusterTemplate should accessible for Management Console owner", "committedDate": "2020-05-22T13:52:48Z", "type": "forcePushed"}, {"oid": "052ca6299fccf9dd050788d6680b8e8912f18033", "url": "https://github.com/hortonworks/cloudbreak/commit/052ca6299fccf9dd050788d6680b8e8912f18033", "message": "CB-6585 ClusterDefinition and ClusterTemplate should accessible for Management Console owner", "committedDate": "2020-05-27T09:01:46Z", "type": "forcePushed"}, {"oid": "9810139b2dd53c36b86fdd3d8e58e7d27ddc3780", "url": "https://github.com/hortonworks/cloudbreak/commit/9810139b2dd53c36b86fdd3d8e58e7d27ddc3780", "message": "CB-6585 ClusterDefinition and ClusterTemplate should accessible for Management Console owner", "committedDate": "2020-05-27T11:00:29Z", "type": "forcePushed"}, {"oid": "91b32e103a9514dc328529dac462c6ede6ce0736", "url": "https://github.com/hortonworks/cloudbreak/commit/91b32e103a9514dc328529dac462c6ede6ce0736", "message": "CB-6585 ClusterDefinition and ClusterTemplate should accessible for Management Console owner", "committedDate": "2020-05-27T13:34:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgyNTk3OA==", "url": "https://github.com/hortonworks/cloudbreak/pull/8129#discussion_r431825978", "bodyText": "Can you please do something like this:\nSELECT just_the_necessary_fields WHERE crn in (:crns);\n\ninstead of\nfor ... {\n  SELECT one where crn = :crn\n}", "author": "foldik", "createdAt": "2020-05-28T13:16:08Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/blueprint/DefaultBlueprintChecker.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package com.sequenceiq.cloudbreak.service.blueprint;\n+\n+import static com.sequenceiq.authorization.resource.AuthorizationResourceAction.DESCRIBE_CLUSTER_TEMPLATE;\n+import static java.util.Collections.emptyList;\n+\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+import javax.inject.Inject;\n+\n+import org.springframework.stereotype.Component;\n+\n+import com.sequenceiq.authorization.resource.AuthorizationResourceAction;\n+import com.sequenceiq.authorization.resource.AuthorizationResourceType;\n+import com.sequenceiq.authorization.service.CrnsByCategory;\n+import com.sequenceiq.authorization.service.DefaultResourceChecker;\n+import com.sequenceiq.cloudbreak.api.endpoint.v4.common.ResourceStatus;\n+import com.sequenceiq.cloudbreak.domain.Blueprint;\n+\n+@Component\n+public class DefaultBlueprintChecker implements DefaultResourceChecker {\n+\n+    @Inject\n+    private BlueprintService blueprintService;\n+\n+    @Override\n+    public AuthorizationResourceType getResourceType() {\n+        return AuthorizationResourceType.CLUSTER_TEMPLATE;\n+    }\n+\n+    @Override\n+    public boolean isDefault(String resourceCrn) {\n+        Blueprint b = blueprintService.getByResourceCrn(resourceCrn);\n+        return b != null && ResourceStatus.DEFAULT == b.getStatus();\n+    }\n+\n+    @Override\n+    public boolean isAllowedAction(AuthorizationResourceAction action) {\n+        return DESCRIBE_CLUSTER_TEMPLATE.equals(action);\n+    }\n+\n+    @Override\n+    public CrnsByCategory getDefaultResourceCrns(Collection<String> resourceCrns) {\n+        Map<Boolean, List<String>> byDefault = resourceCrns.stream().collect(Collectors.partitioningBy(this::isDefault));", "originalCommit": "91b32e103a9514dc328529dac462c6ede6ce0736", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg3Njg2MA==", "url": "https://github.com/hortonworks/cloudbreak/pull/8129#discussion_r431876860", "bodyText": "ok", "author": "bbihari", "createdAt": "2020-05-28T14:26:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgyNTk3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgyOTAwOA==", "url": "https://github.com/hortonworks/cloudbreak/pull/8129#discussion_r431829008", "bodyText": "Can you please rewrite it as the DefaultBlueprintChecker?", "author": "foldik", "createdAt": "2020-05-28T13:20:46Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/template/DefaultClusterTemplateChecker.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package com.sequenceiq.cloudbreak.service.template;\n+\n+import static com.sequenceiq.authorization.resource.AuthorizationResourceAction.DESCRIBE_CLUSTER_DEFINITION;\n+import static com.sequenceiq.authorization.resource.AuthorizationResourceType.CLUSTER_DEFINITION;\n+import static java.util.Collections.emptyList;\n+\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+import javax.inject.Inject;\n+\n+import org.springframework.stereotype.Component;\n+\n+import com.sequenceiq.authorization.resource.AuthorizationResourceAction;\n+import com.sequenceiq.authorization.resource.AuthorizationResourceType;\n+import com.sequenceiq.authorization.service.CrnsByCategory;\n+import com.sequenceiq.authorization.service.DefaultResourceChecker;\n+import com.sequenceiq.cloudbreak.api.endpoint.v4.common.ResourceStatus;\n+import com.sequenceiq.cloudbreak.domain.stack.cluster.ClusterTemplate;\n+\n+@Component\n+public class DefaultClusterTemplateChecker implements DefaultResourceChecker {\n+\n+    @Inject\n+    private ClusterTemplateService clusterTemplateService;\n+\n+    @Override\n+    public AuthorizationResourceType getResourceType() {\n+        return CLUSTER_DEFINITION;\n+    }\n+\n+    @Override\n+    public boolean isDefault(String resourceCrn) {\n+        ClusterTemplate b = clusterTemplateService.getByResourceCrn(resourceCrn);\n+        return b != null && ResourceStatus.DEFAULT == b.getStatus();\n+    }\n+\n+    @Override\n+    public boolean isAllowedAction(AuthorizationResourceAction action) {\n+        return DESCRIBE_CLUSTER_DEFINITION == action;\n+    }\n+\n+    @Override\n+    public CrnsByCategory getDefaultResourceCrns(Collection<String> resourceCrns) {\n+        Map<Boolean, List<String>> byDefault = resourceCrns.stream().collect(Collectors.partitioningBy(this::isDefault));", "originalCommit": "91b32e103a9514dc328529dac462c6ede6ce0736", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg3NjkzOQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/8129#discussion_r431876939", "bodyText": "sure", "author": "bbihari", "createdAt": "2020-05-28T14:27:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgyOTAwOA=="}], "type": "inlineReview"}, {"oid": "b036a4932d927a8c01509759a94e64ae48490fd7", "url": "https://github.com/hortonworks/cloudbreak/commit/b036a4932d927a8c01509759a94e64ae48490fd7", "message": "CB-6585 ClusterDefinition and ClusterTemplate should accessible for Management Console owner", "committedDate": "2020-05-28T14:26:14Z", "type": "commit"}, {"oid": "b036a4932d927a8c01509759a94e64ae48490fd7", "url": "https://github.com/hortonworks/cloudbreak/commit/b036a4932d927a8c01509759a94e64ae48490fd7", "message": "CB-6585 ClusterDefinition and ClusterTemplate should accessible for Management Console owner", "committedDate": "2020-05-28T14:26:14Z", "type": "forcePushed"}]}