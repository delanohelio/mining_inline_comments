{"pr_number": 7480, "pr_title": "CB-5913 flow fixes", "pr_createdAt": "2020-03-05T17:15:14Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/7480", "timeline": [{"oid": "3a3f61996a3911de6770339d5e3112600acb62df", "url": "https://github.com/hortonworks/cloudbreak/commit/3a3f61996a3911de6770339d5e3112600acb62df", "message": "CB-5914 Flow cancel does not work when exception comes from handler", "committedDate": "2020-03-05T17:26:54Z", "type": "forcePushed"}, {"oid": "841284b807bb802c293c6ec87ce30e58496861bb", "url": "https://github.com/hortonworks/cloudbreak/commit/841284b807bb802c293c6ec87ce30e58496861bb", "message": "CB-5914 Flow cancel does not work when exception comes from handler", "committedDate": "2020-03-05T18:45:09Z", "type": "forcePushed"}, {"oid": "2a8f6dfb30f6838f8c07d44314cc7220f34a5cbc", "url": "https://github.com/hortonworks/cloudbreak/commit/2a8f6dfb30f6838f8c07d44314cc7220f34a5cbc", "message": "CB-5914 Flow cancel does not work when exception comes from handler", "committedDate": "2020-03-06T08:28:07Z", "type": "commit"}, {"oid": "db6ed8c8c1b51d059a9bcba6456974380a2d9a15", "url": "https://github.com/hortonworks/cloudbreak/commit/db6ed8c8c1b51d059a9bcba6456974380a2d9a15", "message": "CB-5913 flow fixes", "committedDate": "2020-03-06T09:54:54Z", "type": "commit"}, {"oid": "db6ed8c8c1b51d059a9bcba6456974380a2d9a15", "url": "https://github.com/hortonworks/cloudbreak/commit/db6ed8c8c1b51d059a9bcba6456974380a2d9a15", "message": "CB-5913 flow fixes", "committedDate": "2020-03-06T09:54:54Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIzNjk1MA==", "url": "https://github.com/hortonworks/cloudbreak/pull/7480#discussion_r390236950", "bodyText": "What's wrong with StateStatus? Why introduce a new Enum?", "author": "lnardai", "createdAt": "2020-03-10T11:00:24Z", "path": "datalake/src/main/java/com/sequenceiq/datalake/service/sdx/CloudbreakFlowService.java", "diffHunk": "@@ -35,18 +35,30 @@ public void getAndSaveLastCloudbreakFlowChainId(SdxCluster sdxCluster) {\n         sdxClusterRepository.save(sdxCluster);\n     }\n \n-    public boolean isLastKnownFlowRunning(SdxCluster sdxCluster) {\n+    public FlowState getLastKnownFlowState(SdxCluster sdxCluster) {\n         try {\n             String actualCbFlowChainId = sdxCluster.getLastCbFlowChainId();\n             if (actualCbFlowChainId != null) {\n-                return flowEndpoint.hasFlowRunningByChainId(sdxCluster.getLastCbFlowChainId()).getHasActiveFlow();\n+                LOGGER.info(\"Check if flow is running: {}\", actualCbFlowChainId);\n+                Boolean hasActiveFlow = flowEndpoint.hasFlowRunningByChainId(sdxCluster.getLastCbFlowChainId()).getHasActiveFlow();\n+                if (hasActiveFlow) {\n+                    return FlowState.RUNNING;\n+                } else {\n+                    return FlowState.FINISHED;\n+                }\n+            } else  {\n+                return FlowState.UNKNOWN;\n             }\n         } catch (NotFoundException e) {\n             LOGGER.error(\"Flow chain id or resource {} not found in CB: {}, so there is no active flow!\", sdxCluster.getClusterName(), e.getMessage());\n+            return FlowState.UNKNOWN;\n         } catch (Exception e) {\n             LOGGER.error(\"Exception occured during checking if there is a flow for cluster {} in CB: {}\", sdxCluster.getClusterName(), e.getMessage());\n-            return true;\n+            return FlowState.UNKNOWN;\n         }\n-        return false;\n+    }\n+\n+    public enum FlowState {", "originalCommit": "db6ed8c8c1b51d059a9bcba6456974380a2d9a15", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDI2Nzc4NQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/7480#discussion_r390267785", "bodyText": "I would like to handle unknown state like missing flow id or flow id is not known by cloudbreak. Also we call hasFlowRunningByChainId method which can only return a boolean.", "author": "sodre90", "createdAt": "2020-03-10T12:06:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIzNjk1MA=="}], "type": "inlineReview"}]}