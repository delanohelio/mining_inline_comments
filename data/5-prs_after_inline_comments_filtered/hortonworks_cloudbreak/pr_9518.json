{"pr_number": 9518, "pr_title": "CB-9580 Salt changes to configure the embedded Postgres DB to use the preserved disk", "pr_createdAt": "2020-11-25T15:01:17Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/9518", "timeline": [{"oid": "9a6d68245657427530f13958afa8228615c4f0a0", "url": "https://github.com/hortonworks/cloudbreak/commit/9a6d68245657427530f13958afa8228615c4f0a0", "message": "CB-9580 Salt changes to configure the embedded Postgres DB to use the preserved disk", "committedDate": "2020-11-25T15:29:10Z", "type": "forcePushed"}, {"oid": "1092d602d82f6d17cb50328b4d127cb2fa90cbf6", "url": "https://github.com/hortonworks/cloudbreak/commit/1092d602d82f6d17cb50328b4d127cb2fa90cbf6", "message": "CB-9580 Salt changes to configure the embedded Postgres DB to use the preserved disk", "committedDate": "2020-11-25T17:12:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDk0MzU3MQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/9518#discussion_r530943571", "bodyText": "I made some suggestion on slack for refactoring this method", "author": "lacikaaa", "createdAt": "2020-11-26T10:55:06Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/bootstrap/service/container/postgres/PostgresConfigService.java", "diffHunk": "@@ -56,10 +64,25 @@ public void decorateServicePillarWithPostgresIfNeeded(Map<String, SaltPillarProp\n         Map<String, Object> postgresConfig = new HashMap<>();\n         if (dbServerConfigurer.isRemoteDatabaseNeeded(cluster)) {\n             postgresConfig.put(\"configure_remote_db\", \"true\");\n+        } else {\n+            collectEmbeddedDatabaseConfigs(stack, postgresConfig);\n         }\n         rdsConfigProviderFactory.getAllSupportedRdsConfigProviders().forEach(provider ->\n                 postgresConfig.putAll(provider.createServicePillarConfigMapIfNeeded(stack, cluster)));\n         return postgresConfig;\n     }\n \n+    private void collectEmbeddedDatabaseConfigs(Stack stack, Map<String, Object> postgresConfig) {", "originalCommit": "1092d602d82f6d17cb50328b4d127cb2fa90cbf6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTE5MjI5NQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/9518#discussion_r531192295", "bodyText": "Refactored based on what we discussed on slack", "author": "schfeca75", "createdAt": "2020-11-26T19:02:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDk0MzU3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDk0NTYxMA==", "url": "https://github.com/hortonworks/cloudbreak/pull/9518#discussion_r530945610", "bodyText": "to reflect on this: https://github.com/hortonworks/cloudbreak/pull/9518/files#r530931639\nI think this condition should be false on YCloud and only enable this for real cloud providers", "author": "lacikaaa", "createdAt": "2020-11-26T10:58:26Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/bootstrap/service/container/postgres/PostgresConfigService.java", "diffHunk": "@@ -56,10 +64,25 @@ public void decorateServicePillarWithPostgresIfNeeded(Map<String, SaltPillarProp\n         Map<String, Object> postgresConfig = new HashMap<>();\n         if (dbServerConfigurer.isRemoteDatabaseNeeded(cluster)) {\n             postgresConfig.put(\"configure_remote_db\", \"true\");\n+        } else {\n+            collectEmbeddedDatabaseConfigs(stack, postgresConfig);\n         }\n         rdsConfigProviderFactory.getAllSupportedRdsConfigProviders().forEach(provider ->\n                 postgresConfig.putAll(provider.createServicePillarConfigMapIfNeeded(stack, cluster)));\n         return postgresConfig;\n     }\n \n+    private void collectEmbeddedDatabaseConfigs(Stack stack, Map<String, Object> postgresConfig) {\n+        String databaseDirectory = \"/var/lib/pgsql/data\";\n+        boolean databaseDirectoryOnAttachedDisk = false;\n+        if (entitlementService.embeddedDatabaseOnAttachedDiskEnabled(INTERNAL_ACTOR_CRN, ThreadBasedUserCrnProvider.getAccountId())) {", "originalCommit": "1092d602d82f6d17cb50328b4d127cb2fa90cbf6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjgzMTk5MA==", "url": "https://github.com/hortonworks/cloudbreak/pull/9518#discussion_r532831990", "bodyText": "Embedded database on attached disk will only be enabled next to the entitlement, if there are attached disks.", "author": "schfeca75", "createdAt": "2020-11-30T19:06:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDk0NTYxMA=="}], "type": "inlineReview"}, {"oid": "009295dfa92053ca1714ed988228dcb7b454447d", "url": "https://github.com/hortonworks/cloudbreak/commit/009295dfa92053ca1714ed988228dcb7b454447d", "message": "CB-9580 Salt changes to configure the embedded Postgres DB to use the preserved disk", "committedDate": "2020-11-26T18:57:34Z", "type": "forcePushed"}, {"oid": "298a2818712503c8f21d017df7b21f5a3fa7df72", "url": "https://github.com/hortonworks/cloudbreak/commit/298a2818712503c8f21d017df7b21f5a3fa7df72", "message": "CB-9580 Salt changes to configure the embedded Postgres DB to use the preserved disk", "committedDate": "2020-11-28T13:14:19Z", "type": "forcePushed"}, {"oid": "e42e77961b285fbed816a58b34a4cd1a12607324", "url": "https://github.com/hortonworks/cloudbreak/commit/e42e77961b285fbed816a58b34a4cd1a12607324", "message": "CB-9580 Salt changes to configure the embedded Postgres DB to use the preserved disk\n- introduce new entitlement: CDP_EMBEDDED_DATABASE_ON_ATTACHED_DISK. If it is enabled, the embedded postgres sql server will be setup to use an attached disk to store its data otherwise the default setup will be used.\n- salt pillar config changes for postgres embedded db: the sqlserver's directlory, the log directory and the entitlement value will be set in pillar\n- salt state changes: setup embedded postgres sql server with the provided pillar parameters.\n\nHint: These changes only setup postgres sql server for the '/hadoopfs/fs1' attached disk if the entitlement is enabled. The future plan is to setup a separated attached disk for the postgres sql server.", "committedDate": "2020-11-28T13:20:21Z", "type": "forcePushed"}, {"oid": "67113bbe1b4c1281c2eaad8c1322259178808fc0", "url": "https://github.com/hortonworks/cloudbreak/commit/67113bbe1b4c1281c2eaad8c1322259178808fc0", "message": "CB-9580 Salt changes to configure the embedded Postgres DB to use the preserved disk\n- introduce new entitlement: CDP_EMBEDDED_DATABASE_ON_ATTACHED_DISK. If it is enabled, the embedded postgres sql server will be setup to use an attached disk to store its data otherwise the default setup will be used.\n- salt pillar config changes for postgres embedded db: the sqlserver's directlory, the log directory and the entitlement value will be set in pillar\n- salt state changes: setup embedded postgres sql server with the provided pillar parameters.\n\nHint: These changes only setup postgres sql server for the '/hadoopfs/fs1' attached disk if the entitlement is enabled. The future plan is to setup a separated attached disk for the postgres sql server.", "committedDate": "2020-11-28T15:44:51Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjA5OTgzNw==", "url": "https://github.com/hortonworks/cloudbreak/pull/9518#discussion_r532099837", "bodyText": "On YCloud it is going to be 0, right? And will be resolved as /hadoopfs/root1 ?", "author": "keyki", "createdAt": "2020-11-28T19:54:39Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/bootstrap/service/container/postgres/EmbeddedDatabaseConfigProvider.java", "diffHunk": "@@ -0,0 +1,68 @@\n+package com.sequenceiq.cloudbreak.core.bootstrap.service.container.postgres;\n+\n+import static com.sequenceiq.cloudbreak.auth.ThreadBasedUserCrnProvider.INTERNAL_ACTOR_CRN;\n+\n+import java.util.Map;\n+\n+import javax.inject.Inject;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+import com.sequenceiq.cloudbreak.auth.ThreadBasedUserCrnProvider;\n+import com.sequenceiq.cloudbreak.auth.altus.EntitlementService;\n+import com.sequenceiq.cloudbreak.auth.altus.model.Entitlement;\n+import com.sequenceiq.cloudbreak.domain.Template;\n+import com.sequenceiq.cloudbreak.domain.stack.Stack;\n+import com.sequenceiq.cloudbreak.template.VolumeUtils;\n+\n+@Component\n+public class EmbeddedDatabaseConfigProvider {\n+    public static final String POSTGRES_DIRECTORY_KEY = \"postgres_directory\";\n+\n+    public static final String POSTGRES_LOG_DIRECTORY_KEY = \"postgres_log_directory\";\n+\n+    public static final String POSTGRES_DATA_ON_ATTACHED_DISK_KEY = \"postgres_data_on_attached_disk\";\n+\n+    public static final String POSTGRES_SUBDIRECTORY_ON_ATTACHED_DISK = \"pgsql\";\n+\n+    public static final String POSTGRES_LOG_SUBDIRECTORY_ON_ATTACHED_DISK = \"pgsql/log\";\n+\n+    public static final String POSTGRES_DEFAULT_DIRECTORY = \"/var/lib/pgsql\";\n+\n+    public static final String POSTGRES_DEFAULT_LOG_DIRECTORY = \"/var/log\";\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(EmbeddedDatabaseConfigProvider.class);\n+\n+    @Inject\n+    private EntitlementService entitlementService;\n+\n+    public Map<String, Object> collectEmbeddedDatabaseConfigs(Stack stack) {\n+        Map<String, Object> result;\n+        if (entitlementService.embeddedDatabaseOnAttachedDiskEnabled(INTERNAL_ACTOR_CRN, ThreadBasedUserCrnProvider.getAccountId())) {\n+            LOGGER.info(\"Attached disk will be used to store data for postgres sql server, as '{}' entitlement is enabled\",\n+                    Entitlement.CDP_EMBEDDED_DATABASE_ON_ATTACHED_DISK);\n+            result = createEmbeddedDbOnAttachedDiskConfig(stack);\n+        } else {\n+            LOGGER.info(\"Default settings for data storage will be used for postgres sql server, as '{}' entitlement is disabled\",\n+                    Entitlement.CDP_EMBEDDED_DATABASE_ON_ATTACHED_DISK);\n+            result = Map.of(\n+                    POSTGRES_DIRECTORY_KEY, POSTGRES_DEFAULT_DIRECTORY,\n+                    POSTGRES_LOG_DIRECTORY_KEY, POSTGRES_DEFAULT_LOG_DIRECTORY,\n+                    POSTGRES_DATA_ON_ATTACHED_DISK_KEY, false);\n+        }\n+        LOGGER.debug(\"Embedded Postgres sql server pillar parameters: {}\", result);\n+        return result;\n+    }\n+\n+    private Map<String, Object> createEmbeddedDbOnAttachedDiskConfig(Stack stack) {\n+        Template template = stack.getPrimaryGatewayInstance().getInstanceGroup().getTemplate();\n+        int volumeCount = template == null ? 1 : template.getVolumeTemplates().stream()", "originalCommit": "67113bbe1b4c1281c2eaad8c1322259178808fc0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjE3NTU2Mg==", "url": "https://github.com/hortonworks/cloudbreak/pull/9518#discussion_r532175562", "bodyText": "I checked and it is correct, but fails anyway since the /hadoopfs/root1 folder does not exist.  I think if there are 0 attached volumes we should use the original place instead of the /hadoopfs.", "author": "keyki", "createdAt": "2020-11-29T08:39:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjA5OTgzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjgzMjM5Mg==", "url": "https://github.com/hortonworks/cloudbreak/pull/9518#discussion_r532832392", "bodyText": "Embedded database on attached disk will only be enabled next to the entitlement, if there are attached disks.", "author": "schfeca75", "createdAt": "2020-11-30T19:07:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjA5OTgzNw=="}], "type": "inlineReview"}, {"oid": "071b6e15fd756a6d528525728f434f89710ba430", "url": "https://github.com/hortonworks/cloudbreak/commit/071b6e15fd756a6d528525728f434f89710ba430", "message": "CB-9580 Salt changes to configure the embedded Postgres DB to use the preserved disk\n- introduce new entitlement: CDP_EMBEDDED_DATABASE_ON_ATTACHED_DISK. If it is enabled, the embedded postgres sql server will be setup to use an attached disk to store its data otherwise the default setup will be used.\n- salt pillar config changes for postgres embedded db: the sqlserver's directlory, the log directory and the entitlement value will be set in pillar\n- salt state changes: setup embedded postgres sql server with the provided pillar parameters.\n\nHint: These changes only setup postgres sql server for the '/hadoopfs/fs1' attached disk if the entitlement is enabled. The future plan is to setup a separated attached disk for the postgres sql server.", "committedDate": "2020-11-30T14:54:05Z", "type": "forcePushed"}, {"oid": "bd257636f75de1f68a3c01162bdbe0a13960bd68", "url": "https://github.com/hortonworks/cloudbreak/commit/bd257636f75de1f68a3c01162bdbe0a13960bd68", "message": "CB-9580 Salt changes to configure the embedded Postgres DB to use the preserved disk\n- introduce new entitlement: CDP_EMBEDDED_DATABASE_ON_ATTACHED_DISK. If it is enabled, the embedded postgres sql server will be setup to use an attached disk to store its data otherwise the default setup will be used.\n- salt pillar config changes for postgres embedded db: the sqlserver's directlory, the log directory and the entitlement value will be set in pillar\n- salt state changes: setup embedded postgres sql server with the provided pillar parameters.\n\nHint: These changes only setup postgres sql server for the '/hadoopfs/fs1' attached disk if the entitlement is enabled. The future plan is to setup a separated attached disk for the postgres sql server.", "committedDate": "2020-11-30T19:11:16Z", "type": "commit"}, {"oid": "67e643a275db40ad31df070f92e58c1671bad9dc", "url": "https://github.com/hortonworks/cloudbreak/commit/67e643a275db40ad31df070f92e58c1671bad9dc", "message": "CB-9580 Enable gateway repair if the embedded database data is stored on attached disk\n- Extend Cluster with new field: embeddedDatabaseOnAttachedDisk to persist where the embedded database stores data\n- Gateway repair will be enabled if embedded database stores its data on attached disk\n- If entitlement will change it won't affect the existing clusters' behavior.", "committedDate": "2020-11-30T19:11:17Z", "type": "forcePushed"}, {"oid": "4c42dad0bb701110ba29ab6e7bd8ec09db4fc020", "url": "https://github.com/hortonworks/cloudbreak/commit/4c42dad0bb701110ba29ab6e7bd8ec09db4fc020", "message": "CB-9580 Enable gateway repair if the embedded database data is stored on attached disk\n- Extend Cluster with new field: embeddedDatabaseOnAttachedDisk to persist where the embedded database stores data\n- Gateway repair will be enabled if embedded database stores its data on attached disk\n- If entitlement will change it won't affect the existing clusters' behavior.", "committedDate": "2020-11-30T19:38:37Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzI3MTMyMQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/9518#discussion_r533271321", "bodyText": "This could be simplified by passing the volume count only and calculate the true/false in the constructor. This would reduce the code duplication as well.", "author": "keyki", "createdAt": "2020-12-01T10:11:12Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/cluster/EmbeddedDatabaseService.java", "diffHunk": "@@ -1,26 +1,48 @@\n package com.sequenceiq.cloudbreak.service.cluster;\n \n+import java.util.Optional;\n+\n import javax.inject.Inject;\n \n+import org.apache.commons.lang3.ObjectUtils;\n import org.springframework.stereotype.Component;\n \n+import com.sequenceiq.cloudbreak.api.endpoint.v4.stacks.request.database.DatabaseAvailabilityType;\n import com.sequenceiq.cloudbreak.auth.altus.EntitlementService;\n import com.sequenceiq.cloudbreak.domain.Template;\n import com.sequenceiq.cloudbreak.domain.stack.Stack;\n+import com.sequenceiq.cloudbreak.domain.stack.instance.InstanceGroup;\n+import com.sequenceiq.common.api.type.InstanceGroupType;\n \n @Component\n public class EmbeddedDatabaseService {\n     @Inject\n     private EntitlementService entitlementService;\n \n     public EmbeddedDatabaseInfo getEmbeddedDatabaseInfo(String actorCrn, String accountId, Stack stack) {\n-        if (entitlementService.embeddedDatabaseOnAttachedDiskEnabled(actorCrn, accountId)) {\n-            Template template = stack.getPrimaryGatewayInstance().getInstanceGroup().getTemplate();\n-            int volumeCount = template == null ? 0 : template.getVolumeTemplates().stream()\n-                    .mapToInt(volume -> volume.getVolumeCount()).sum();\n+        DatabaseAvailabilityType externalDatabase = ObjectUtils.defaultIfNull(stack.getExternalDatabaseCreationType(), DatabaseAvailabilityType.NONE);\n+        if (DatabaseAvailabilityType.NONE == externalDatabase && entitlementService.embeddedDatabaseOnAttachedDiskEnabled(actorCrn, accountId)) {\n+            int volumeCount = calculateVolumeCountOnGatewayGroup(stack);\n             return new EmbeddedDatabaseInfo(volumeCount > 0, volumeCount);\n         } else {\n             return new EmbeddedDatabaseInfo(false, 0);\n         }\n     }\n+\n+    public EmbeddedDatabaseInfo getEmbeddedDatabaseInfo(Stack stack) {\n+        if (stack.getCluster().getEmbeddedDatabaseOnAttachedDisk()) {\n+            int volumeCount = calculateVolumeCountOnGatewayGroup(stack);\n+            return new EmbeddedDatabaseInfo(volumeCount > 0, volumeCount);", "originalCommit": "4c42dad0bb701110ba29ab6e7bd8ec09db4fc020", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "26d6616be3bf075009c5cc4aaca2729e47c7519a", "url": "https://github.com/hortonworks/cloudbreak/commit/26d6616be3bf075009c5cc4aaca2729e47c7519a", "message": "CB-9580 Enable gateway repair if the embedded database data is stored on attached disk\n- Extend Cluster with new field: embeddedDatabaseOnAttachedDisk to persist where the embedded database stores data\n- Gateway repair will be enabled if embedded database stores its data on attached disk\n- If entitlement will change it won't affect the existing clusters' behavior.", "committedDate": "2020-12-01T10:57:12Z", "type": "forcePushed"}, {"oid": "ebcbb2123fdbc9ce5dff928299973b0489a7feea", "url": "https://github.com/hortonworks/cloudbreak/commit/ebcbb2123fdbc9ce5dff928299973b0489a7feea", "message": "CB-9580 Enable gateway repair if the embedded database data is stored on attached disk\n- Extend Cluster with new field: embeddedDatabaseOnAttachedDisk to persist where the embedded database stores data\n- Gateway repair will be enabled if embedded database stores its data on attached disk\n- If entitlement will change it won't affect the existing clusters' behavior.", "committedDate": "2020-12-01T12:17:04Z", "type": "forcePushed"}, {"oid": "3bb50ab02edd2a981f91a1ff0e2cde9e3c5bdf7c", "url": "https://github.com/hortonworks/cloudbreak/commit/3bb50ab02edd2a981f91a1ff0e2cde9e3c5bdf7c", "message": "CB-9580 Enable gateway repair if the embedded database data is stored on attached disk\n- Extend Cluster with new field: embeddedDatabaseOnAttachedDisk to persist where the embedded database stores data\n- Gateway repair will be enabled if embedded database stores its data on attached disk\n- If entitlement will change it won't affect the existing clusters' behavior.", "committedDate": "2020-12-01T16:48:36Z", "type": "commit"}, {"oid": "3bb50ab02edd2a981f91a1ff0e2cde9e3c5bdf7c", "url": "https://github.com/hortonworks/cloudbreak/commit/3bb50ab02edd2a981f91a1ff0e2cde9e3c5bdf7c", "message": "CB-9580 Enable gateway repair if the embedded database data is stored on attached disk\n- Extend Cluster with new field: embeddedDatabaseOnAttachedDisk to persist where the embedded database stores data\n- Gateway repair will be enabled if embedded database stores its data on attached disk\n- If entitlement will change it won't affect the existing clusters' behavior.", "committedDate": "2020-12-01T16:48:36Z", "type": "forcePushed"}]}