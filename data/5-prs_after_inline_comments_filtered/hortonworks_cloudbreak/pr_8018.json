{"pr_number": 8018, "pr_title": "CDPCP-808 Sync SSH keys to IPA", "pr_createdAt": "2020-05-11T21:57:31Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/8018", "timeline": [{"oid": "ef4045e4108e712a9ed08e7b4cb204b82135502c", "url": "https://github.com/hortonworks/cloudbreak/commit/ef4045e4108e712a9ed08e7b4cb204b82135502c", "message": "[CDPCP-808] sync ssh keys to ipa\n\nSsh public keys are retrieved for each user as part of the UMS\nGetActorWorkloadCredentials API. The user sync code to set workload\npasswords in FreeIPA has been refactored to sync both the hashed\npassword and the public keys.\n\nFreeIPA may return an 4202 error code during the user-mod call that can\nbe safely ignored. This error indicates that the mod list is empty and\nmay occur if the user does not have a hashed password set in the UMS and\ndoes not have any ssh public keys. Exception handling in the user sync\ncode has been imnproved to also ignore similar exceptions for user and\ngroup addition and removal as well as group membership changes.\nNon-ignorable exceptions are now propagated to the sync operation status.\nEnvironments with these exceptions are now put in the \"failure\" list\ninstead of the \"success\" list.", "committedDate": "2020-05-12T16:01:44Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI0NTc3Nw==", "url": "https://github.com/hortonworks/cloudbreak/pull/8018#discussion_r425245777", "bodyText": "apache StringUtils.isNotBlank(hashPassword) is a shorter", "author": "lacikaaa", "createdAt": "2020-05-14T15:53:57Z", "path": "freeipa-client/src/main/java/com/sequenceiq/freeipa/client/FreeIpaClient.java", "diffHunk": "@@ -207,14 +208,21 @@ public void updateUserPasswordMaxExpiration(String user) throws FreeIpaClientExc\n         updateUserPasswordExpiration(user, Optional.empty());\n     }\n \n-    public User userSetPasswordHash(String user, String hashedPassword,\n-            String unencryptedKrbPrincipalKey, Optional<Instant> expiration) throws FreeIpaClientException {\n-        String passwordExpirationDate = formatDate(expiration);\n-        Map<String, Object> params =\n-                Map.of(\"setattr\", List.of(\n-                        \"cdpHashedPassword=\" + hashedPassword,\n-                        \"cdpUnencryptedKrbPrincipalKey=\" + unencryptedKrbPrincipalKey,\n-                        \"krbPasswordExpiration=\" + passwordExpirationDate));\n+    public User userSetWorkloadCredentials(String user, String hashedPassword,\n+            String unencryptedKrbPrincipalKey, Optional<Instant> expiration,\n+            List<String> sshPublicKeys) throws FreeIpaClientException {\n+        Map<String, Object> params = new HashMap<>();\n+        List<String> attributes = new ArrayList<>();\n+\n+        if (null != hashedPassword && !hashedPassword.isBlank()) {", "originalCommit": "ef4045e4108e712a9ed08e7b4cb204b82135502c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM4MjM0Mw==", "url": "https://github.com/hortonworks/cloudbreak/pull/8018#discussion_r425382343", "bodyText": "thanks!", "author": "handavid", "createdAt": "2020-05-14T19:34:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI0NTc3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI0Nzg1OA==", "url": "https://github.com/hortonworks/cloudbreak/pull/8018#discussion_r425247858", "bodyText": "why not to log and why not error?", "author": "lacikaaa", "createdAt": "2020-05-14T15:56:47Z", "path": "freeipa-client/src/main/java/com/sequenceiq/freeipa/client/FreeIpaClient.java", "diffHunk": "@@ -581,12 +553,12 @@ public Host showHost(String fqdn) throws FreeIpaClientException {\n             return response;\n         } catch (Exception e) {\n             String message = String.format(\"Invoke FreeIpa failed: %s\", e.getLocalizedMessage());\n-            LOGGER.error(message, e);\n+            LOGGER.warn(message);\n             OptionalInt responseCode = extractResponseCode(e);\n             throw FreeIpaClientExceptionUtil.convertToRetryableIfNeeded(new FreeIpaClientException(message, e, responseCode));\n         } catch (Throwable throwable) {\n             String message = String.format(\"Invoke FreeIpa failed: %s\", throwable.getLocalizedMessage());\n-            LOGGER.error(message, throwable);\n+            LOGGER.warn(message);", "originalCommit": "ef4045e4108e712a9ed08e7b4cb204b82135502c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM4MzUxNg==", "url": "https://github.com/hortonworks/cloudbreak/pull/8018#discussion_r425383516", "bodyText": "the throwable is set as the cause of the FreeIpaClientException and then rethrown. I feel that the caller should be responsible for logging/handling the exception. Seeing an error stacktrace in the logs at this point is misleading.", "author": "handavid", "createdAt": "2020-05-14T19:36:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI0Nzg1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI1MTEwNA==", "url": "https://github.com/hortonworks/cloudbreak/pull/8018#discussion_r425251104", "bodyText": "if you use StringUtils.isBlank here it will work even if getHashedPassword returns null", "author": "lacikaaa", "createdAt": "2020-05-14T16:00:57Z", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/flow/freeipa/user/handler/SetPasswordHandler.java", "diffHunk": "@@ -69,10 +59,17 @@ public void accept(Event<SetPasswordRequest> setPasswordRequestEvent) {\n \n             FreeIpaClient freeIpaClient = freeIpaClientFactory.getFreeIpaClientForStack(stack);\n             if (FreeIpaCapabilities.hasSetPasswordHashSupport(freeIpaClient.getConfig())) {\n-                LOGGER.info(\"IPA has password hash support, credentials information from UMS will be used.\");\n-                setPasswordHashFromUms(freeIpaClient, request.getUsername(), request.getUserCrn(), request.getExpirationInstant());\n+                WorkloadCredential workloadCredential = umsCredentialProvider.getCredentials(request.getUserCrn(), MDCUtils.getRequestId());\n+\n+                LOGGER.info(\"IPA has password hash support. Credentials information from UMS will be used.\");\n+                workloadCredentialService.setWorkloadCredential(freeIpaClient, request.getUsername(), workloadCredential);\n+                if (workloadCredential.getHashedPassword().isBlank()) {", "originalCommit": "ef4045e4108e712a9ed08e7b4cb204b82135502c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "359f34d74d2e166a052c29453d1329503e49260e", "url": "https://github.com/hortonworks/cloudbreak/commit/359f34d74d2e166a052c29453d1329503e49260e", "message": "[CDPCP-808] update usermanagement.proto", "committedDate": "2020-05-14T17:10:11Z", "type": "commit"}, {"oid": "798aaf047f3b8ed93bfa10a18aa24e183eaff943", "url": "https://github.com/hortonworks/cloudbreak/commit/798aaf047f3b8ed93bfa10a18aa24e183eaff943", "message": "[CDPCP-808] sync ssh keys to ipa\n\nSsh public keys are retrieved for each user as part of the UMS\nGetActorWorkloadCredentials API. The user sync code to set workload\npasswords in FreeIPA has been refactored to sync both the hashed\npassword and the public keys.\n\nFreeIPA may return an 4202 error code during the user-mod call that can\nbe safely ignored. This error indicates that the mod list is empty and\nmay occur if the user does not have a hashed password set in the UMS and\ndoes not have any ssh public keys. Exception handling in the user sync\ncode has been imnproved to also ignore similar exceptions for user and\ngroup addition and removal as well as group membership changes.\nNon-ignorable exceptions are now propagated to the sync operation status.\nEnvironments with these exceptions are now put in the \"failure\" list\ninstead of the \"success\" list.", "committedDate": "2020-05-14T17:10:11Z", "type": "forcePushed"}, {"oid": "a67f24cbc5248473f72270c4964801d0569a7a7b", "url": "https://github.com/hortonworks/cloudbreak/commit/a67f24cbc5248473f72270c4964801d0569a7a7b", "message": "[CDPCP-808] sync ssh keys to ipa\n\nSsh public keys are retrieved for each user as part of the UMS\nGetActorWorkloadCredentials API. The user sync code to set workload\npasswords in FreeIPA has been refactored to sync both the hashed\npassword and the public keys.\n\nFreeIPA may return an 4202 error code during the user-mod call that can\nbe safely ignored. This error indicates that the mod list is empty and\nmay occur if the user does not have a hashed password set in the UMS and\ndoes not have any ssh public keys. Exception handling in the user sync\ncode has been imnproved to also ignore similar exceptions for user and\ngroup addition and removal as well as group membership changes.\nNon-ignorable exceptions are now propagated to the sync operation status.\nEnvironments with these exceptions are now put in the \"failure\" list\ninstead of the \"success\" list.", "committedDate": "2020-05-14T19:37:35Z", "type": "commit"}, {"oid": "a67f24cbc5248473f72270c4964801d0569a7a7b", "url": "https://github.com/hortonworks/cloudbreak/commit/a67f24cbc5248473f72270c4964801d0569a7a7b", "message": "[CDPCP-808] sync ssh keys to ipa\n\nSsh public keys are retrieved for each user as part of the UMS\nGetActorWorkloadCredentials API. The user sync code to set workload\npasswords in FreeIPA has been refactored to sync both the hashed\npassword and the public keys.\n\nFreeIPA may return an 4202 error code during the user-mod call that can\nbe safely ignored. This error indicates that the mod list is empty and\nmay occur if the user does not have a hashed password set in the UMS and\ndoes not have any ssh public keys. Exception handling in the user sync\ncode has been imnproved to also ignore similar exceptions for user and\ngroup addition and removal as well as group membership changes.\nNon-ignorable exceptions are now propagated to the sync operation status.\nEnvironments with these exceptions are now put in the \"failure\" list\ninstead of the \"success\" list.", "committedDate": "2020-05-14T19:37:35Z", "type": "forcePushed"}]}