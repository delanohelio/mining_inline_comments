{"pr_number": 7228, "pr_title": "SRE-5408 Small steps toward allowing large number of AWS SDX cluster creations happen in parallel.", "pr_createdAt": "2020-02-05T22:15:25Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/7228", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU0MDg4NA==", "url": "https://github.com/hortonworks/cloudbreak/pull/7228#discussion_r375540884", "bodyText": "Why secure random? Why not threadlocalrandom?", "author": "risdenk", "createdAt": "2020-02-05T22:20:41Z", "path": "cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/scheduler/AwsBackoffSyncPollingScheduler.java", "diffHunk": "@@ -20,14 +22,16 @@\n \n     private static final int POLLING_INTERVAL = 5;\n \n-    private static final int MAX_POLLING_INTERVAL = 10;\n+    private static final int MAX_POLLING_INTERVAL = 50;\n \n     private static final int MAX_POLLING_ATTEMPT = 1000;\n \n-    private static final int FAILURE_TOLERANT_ATTEMPT = 3;\n+    private static final int FAILURE_TOLERANT_ATTEMPT = 10;\n \n     private static final String THROTTLING_ERROR_CODE = \"Throttling\";\n \n+    private static final Random RANDOM = new SecureRandom();", "originalCommit": "ac773967af01542fefbd37c4a22479770394f00f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU0NDk2MQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/7228#discussion_r375544961", "bodyText": "I just looked at what is the general practice in this codebase. All the places I saw it was secure random. No strong takes here. Happy to change it.", "author": "cegganesh84", "createdAt": "2020-02-05T22:30:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU0MDg4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA5MTEyMA==", "url": "https://github.com/hortonworks/cloudbreak/pull/7228#discussion_r376091120", "bodyText": "Fixed it! Thanks!", "author": "cegganesh84", "createdAt": "2020-02-06T21:27:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU0MDg4NA=="}], "type": "inlineReview"}, {"oid": "f5c09a83c06cc33d4dde723d2caeac4cc96c22b7", "url": "https://github.com/hortonworks/cloudbreak/commit/f5c09a83c06cc33d4dde723d2caeac4cc96c22b7", "message": "SRE-5408 Small steps toward allowing large number of AWS SDX cluster creations happen in parallel.\n\n1. In PR #7227 we reduced the throttling and request limit exceeded issues for describe images.\n2. In this PR, we are fixing the next two offenders, those are describe CF stacks and events.\n3. All these were already nicely wrapped in a backoff scheduler with reset.\n4. In this PR increased the time lag between resets, added a jitter and made the code to be more tolerant of request limit exceeded errors.\n\n./gradlew clean build", "committedDate": "2020-02-06T21:26:18Z", "type": "commit"}, {"oid": "f5c09a83c06cc33d4dde723d2caeac4cc96c22b7", "url": "https://github.com/hortonworks/cloudbreak/commit/f5c09a83c06cc33d4dde723d2caeac4cc96c22b7", "message": "SRE-5408 Small steps toward allowing large number of AWS SDX cluster creations happen in parallel.\n\n1. In PR #7227 we reduced the throttling and request limit exceeded issues for describe images.\n2. In this PR, we are fixing the next two offenders, those are describe CF stacks and events.\n3. All these were already nicely wrapped in a backoff scheduler with reset.\n4. In this PR increased the time lag between resets, added a jitter and made the code to be more tolerant of request limit exceeded errors.\n\n./gradlew clean build", "committedDate": "2020-02-06T21:26:18Z", "type": "forcePushed"}]}