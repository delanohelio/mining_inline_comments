{"pr_number": 9426, "pr_title": "CB-9480 Authorize POST list endpoints", "pr_createdAt": "2020-11-13T08:32:12Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/9426", "timeline": [{"oid": "3918049ddd9d48de07ed641c282984ae404e6491", "url": "https://github.com/hortonworks/cloudbreak/commit/3918049ddd9d48de07ed641c282984ae404e6491", "message": "CB-9480 Refactor authorization framework internal logic to collect what and how to authorrize, then call UMS once for recource based authorization", "committedDate": "2020-11-13T08:34:19Z", "type": "forcePushed"}, {"oid": "90eb4e28223b1cc6b408723c77dcb84742d2e939", "url": "https://github.com/hortonworks/cloudbreak/commit/90eb4e28223b1cc6b408723c77dcb84742d2e939", "message": "CB-9480 Refactor authorization framework internal logic to collect what and how to authorrize, then call UMS once for recource based authorization", "committedDate": "2020-11-13T10:04:05Z", "type": "forcePushed"}, {"oid": "ab91aed063ea6583180cdf5b038058595a30c018", "url": "https://github.com/hortonworks/cloudbreak/commit/ab91aed063ea6583180cdf5b038058595a30c018", "message": "CB-9480 Refactor authorization framework internal logic to collect what and how to authorrize, then call UMS once for recource based authorization", "committedDate": "2020-11-13T16:00:46Z", "type": "forcePushed"}, {"oid": "7a8cbada574dc5e10cbc8f7934e54729292d29d9", "url": "https://github.com/hortonworks/cloudbreak/commit/7a8cbada574dc5e10cbc8f7934e54729292d29d9", "message": "CB-9480 Refactor authorization framework internal logic to collect what and how to authorrize, then call UMS once for recource based authorization", "committedDate": "2020-11-16T08:32:58Z", "type": "forcePushed"}, {"oid": "ea49a08770bc751c933e0daa5be0f494ed67bf9f", "url": "https://github.com/hortonworks/cloudbreak/commit/ea49a08770bc751c933e0daa5be0f494ed67bf9f", "message": "CB-9480 Refactor authorization framework internal logic to collect what and how to authorrize, then call UMS once for recource based authorization", "committedDate": "2020-11-17T15:26:22Z", "type": "forcePushed"}, {"oid": "ce3115e8aca35eca8b4c6eddc74e5fe652fea665", "url": "https://github.com/hortonworks/cloudbreak/commit/ce3115e8aca35eca8b4c6eddc74e5fe652fea665", "message": "CB-9480 Refactor authorization framework internal logic to collect what and how to authorrize, then call UMS once for recource based authorization", "committedDate": "2020-11-17T15:52:41Z", "type": "forcePushed"}, {"oid": "1d90eef3b95aa23ae83858e9f0ec6f9daf023316", "url": "https://github.com/hortonworks/cloudbreak/commit/1d90eef3b95aa23ae83858e9f0ec6f9daf023316", "message": "CB-9480 Refactor authorization framework internal logic to collect what and how to authorrize, then call UMS once for recource based authorization", "committedDate": "2020-11-18T14:33:53Z", "type": "forcePushed"}, {"oid": "39c91f1b4dd92c8e33e0a73e9af4c4adcfe1b2fa", "url": "https://github.com/hortonworks/cloudbreak/commit/39c91f1b4dd92c8e33e0a73e9af4c4adcfe1b2fa", "message": "CB-9480 Refactor authorization framework internal logic to collect what and how to authorrize, then call UMS once for recource based authorization", "committedDate": "2020-11-18T16:49:59Z", "type": "forcePushed"}, {"oid": "093fa8269140b8cb8346863eb6d6d48d050bd046", "url": "https://github.com/hortonworks/cloudbreak/commit/093fa8269140b8cb8346863eb6d6d48d050bd046", "message": "CB-9480 Refactor authorization framework internal logic to collect what and how to authorrize, then call UMS once for recource based authorization", "committedDate": "2020-11-19T06:42:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc1Njk3Mg==", "url": "https://github.com/hortonworks/cloudbreak/pull/9426#discussion_r526756972", "bodyText": "Maybe you should consider to rename these classes. They make sense for devs who is in the development of this feature, but other devs won't understand it at first. These names And, Or, etc. are very general. The same applies for Authorization interface.", "author": "horadla23", "createdAt": "2020-11-19T10:35:32Z", "path": "authorization-common/src/main/java/com/sequenceiq/authorization/service/model/And.java", "diffHunk": "@@ -0,0 +1,95 @@\n+package com.sequenceiq.authorization.service.model;\n+\n+import static java.util.stream.Collectors.joining;\n+import static java.util.stream.Collectors.toList;\n+\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.function.BiConsumer;\n+import java.util.function.Function;\n+import java.util.stream.Collectors;\n+\n+import com.sequenceiq.authorization.resource.AuthorizationResourceAction;\n+\n+public class And implements Authorization {", "originalCommit": "093fa8269140b8cb8346863eb6d6d48d050bd046", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjgxNjgzOA==", "url": "https://github.com/hortonworks/cloudbreak/pull/9426#discussion_r526816838", "bodyText": "Okay I will rename those to AuthorizationRule, AllMatch and AnyMatch, although I would not give them thirty letters long names just to make it clear (actually more frustrating to read) every time, in every cases that this is about authorization.", "author": "foldik", "createdAt": "2020-11-19T12:06:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc1Njk3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc1ODUwNw==", "url": "https://github.com/hortonworks/cloudbreak/pull/9426#discussion_r526758507", "bodyText": "I am not sure if this is needed, we have StackView and StackApiView also.", "author": "horadla23", "createdAt": "2020-11-19T10:38:03Z", "path": "core-model/src/main/java/com/sequenceiq/cloudbreak/domain/projection/StackCrnView.java", "diffHunk": "@@ -0,0 +1,8 @@\n+package com.sequenceiq.cloudbreak.domain.projection;\n+\n+public interface StackCrnView {", "originalCommit": "093fa8269140b8cb8346863eb6d6d48d050bd046", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc3MTcxMA==", "url": "https://github.com/hortonworks/cloudbreak/pull/9426#discussion_r526771710", "bodyText": "The intention was to return the least amount of data from the database. Those views contain way more than we need here.", "author": "foldik", "createdAt": "2020-11-19T10:58:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc1ODUwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc3NDU2Ng==", "url": "https://github.com/hortonworks/cloudbreak/pull/9426#discussion_r526774566", "bodyText": "It is clear, I am just not sure if there is significant difference between performances of querying these views. If it is, then it is reasonable.", "author": "horadla23", "createdAt": "2020-11-19T11:03:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc1ODUwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc4NjA3Nw==", "url": "https://github.com/hortonworks/cloudbreak/pull/9426#discussion_r526786077", "bodyText": "I think this interface can be easily refactored, deleted if we would need more data for this feature.", "author": "foldik", "createdAt": "2020-11-19T11:20:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc1ODUwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc4OTUyNA==", "url": "https://github.com/hortonworks/cloudbreak/pull/9426#discussion_r526789524", "bodyText": "alright", "author": "horadla23", "createdAt": "2020-11-19T11:22:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc1ODUwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc1ODcyNg==", "url": "https://github.com/hortonworks/cloudbreak/pull/9426#discussion_r526758726", "bodyText": "same here, maybe we should move this into StackViewRepository", "author": "horadla23", "createdAt": "2020-11-19T10:38:23Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/repository/StackRepository.java", "diffHunk": "@@ -198,6 +199,12 @@\n     @Query(\"SELECT s FROM Stack s WHERE s.resourceCrn = :crn\")\n     Optional<Stack> findByResourceCrn(@Param(\"crn\") String crn);\n \n+    @Query(\"SELECT s.environmentCrn FROM Stack s WHERE s.resourceCrn = :crn\")\n+    Optional<String> findEnvCrnByResourceCrn(@Param(\"crn\") String crn);\n+\n+    @Query(\"SELECT s.resourceCrn as resourceCrn, s.environmentCrn as environmentCrn FROM Stack s WHERE s.resourceCrn IN (:crns)\")\n+    List<StackCrnView> findAllByResourceCrn(@Param(\"crns\") Set<String> crn);", "originalCommit": "093fa8269140b8cb8346863eb6d6d48d050bd046", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc2NTgwNw==", "url": "https://github.com/hortonworks/cloudbreak/pull/9426#discussion_r526765807", "bodyText": "'with' not needed in the method name i guess", "author": "horadla23", "createdAt": "2020-11-19T10:49:13Z", "path": "authorization-common/src/main/java/com/sequenceiq/authorization/service/ResourceBasedCrnProvider.java", "diffHunk": "@@ -25,5 +27,9 @@ default String getResourceCrnByResourceName(String resourceName) {\n         return Optional.empty();\n     }\n \n+    default Map<String, Optional<String>> getWithEnvironmentCrnsByResourceCrns(Collection<String> resourceCrns) {", "originalCommit": "093fa8269140b8cb8346863eb6d6d48d050bd046", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc3Mjk1NQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/9426#discussion_r526772955", "bodyText": "thanks", "author": "foldik", "createdAt": "2020-11-19T11:00:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc2NTgwNw=="}], "type": "inlineReview"}, {"oid": "9be6a4d7253c527f72619ffccedbeeff73117434", "url": "https://github.com/hortonworks/cloudbreak/commit/9be6a4d7253c527f72619ffccedbeeff73117434", "message": "CB-9480 Refactor authorization framework internal logic to collect what and how to authorrize, then call UMS once for recource based authorization", "committedDate": "2020-11-19T12:21:20Z", "type": "forcePushed"}, {"oid": "c9b7cf52b5994dc7d325009b133be0b2c7fa5f04", "url": "https://github.com/hortonworks/cloudbreak/commit/c9b7cf52b5994dc7d325009b133be0b2c7fa5f04", "message": "CB-9480 Refactor authorization framework internal logic to collect what and how to authorrize, then call UMS once for recource based authorization", "committedDate": "2020-11-19T15:52:04Z", "type": "commit"}, {"oid": "c9b7cf52b5994dc7d325009b133be0b2c7fa5f04", "url": "https://github.com/hortonworks/cloudbreak/commit/c9b7cf52b5994dc7d325009b133be0b2c7fa5f04", "message": "CB-9480 Refactor authorization framework internal logic to collect what and how to authorrize, then call UMS once for recource based authorization", "committedDate": "2020-11-19T15:52:04Z", "type": "forcePushed"}]}