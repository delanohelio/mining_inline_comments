{"pr_number": 7513, "pr_title": "CB-5790 Cleanup freeipa during cluster creaton", "pr_createdAt": "2020-03-09T15:41:04Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/7513", "timeline": [{"oid": "97f9ae5ed4cd4c7dfc5917f057c9a76bee2aa0f7", "url": "https://github.com/hortonworks/cloudbreak/commit/97f9ae5ed4cd4c7dfc5917f057c9a76bee2aa0f7", "message": "CB-5790 Cleanup freeipa during cluster creaton", "committedDate": "2020-03-09T15:38:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc5NDUxNg==", "url": "https://github.com/hortonworks/cloudbreak/pull/7513#discussion_r389794516", "bodyText": "Why is this StackEvent instead of CleanupFreeIpaEvent? Is it because we don't actually care about anything in the event?", "author": "handavid", "createdAt": "2020-03-09T16:09:13Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/provision/ClusterCreationActions.java", "diffHunk": "@@ -107,11 +112,33 @@ protected Selectable createRequest(StackContext context) {\n         };\n     }\n \n+    @Bean(name = \"CLEANUP_FREEIPA_STATE\")\n+    public Action<?, ?> cleanupFreeIpaAction() {\n+        return new AbstractStackCreationAction<>(HostMetadataSetupSuccess.class) {\n+\n+            @Inject\n+            private InstanceMetaDataService instanceMetaDataService;\n+\n+            @Override\n+            protected void doExecute(StackContext context, HostMetadataSetupSuccess payload, Map<Object, Object> variables) throws Exception {\n+                sendEvent(context);\n+            }\n+\n+            @Override\n+            protected Selectable createRequest(StackContext context) {\n+                Set<InstanceMetaData> instanceMetaData = instanceMetaDataService.findNotTerminatedForStack(context.getStack().getId());\n+                Set<String> hostNames = instanceMetaData.stream().map(InstanceMetaData::getDiscoveryFQDN).collect(Collectors.toSet());\n+                Set<String> ips = instanceMetaData.stream().map(InstanceMetaData::getPrivateIp).collect(Collectors.toSet());\n+                return new CleanupFreeIpaEvent(context.getStack().getId(), hostNames, ips);\n+            }\n+        };\n+    }\n+\n     @Bean(name = \"BOOTSTRAPPING_PUBLIC_ENDPOINT_STATE\")\n     public Action<?, ?> bootStrappingPublicEndpointAction() {\n-        return new AbstractStackCreationAction<>(HostMetadataSetupSuccess.class) {\n+        return new AbstractStackCreationAction<>(StackEvent.class) {", "originalCommit": "97f9ae5ed4cd4c7dfc5917f057c9a76bee2aa0f7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}