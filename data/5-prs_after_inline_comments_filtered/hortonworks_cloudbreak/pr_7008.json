{"pr_number": 7008, "pr_title": "Cb 4931 DistroX and environment tests to their own package and remove provider specific code from tests", "pr_createdAt": "2020-01-03T15:49:08Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/7008", "timeline": [{"oid": "bfde262ab339d391dc203ac0365d202a43226c0c", "url": "https://github.com/hortonworks/cloudbreak/commit/bfde262ab339d391dc203ac0365d202a43226c0c", "message": "CB-4931 e2e tests: distrox and environment tests to distrox package and remove provider specific code", "committedDate": "2020-01-06T15:39:38Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI0OTc0MQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/7008#discussion_r364249741", "bodyText": "would not be nicer to implement in CloudProvider a getInstanceTemplateV1Request which decorate  the request, instead of a switch case?", "author": "afarsang", "createdAt": "2020-01-08T14:12:17Z", "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/dto/distrox/instancegroup/DistroXInstanceGroupsBuilder.java", "diffHunk": "@@ -0,0 +1,72 @@\n+package com.sequenceiq.it.cloudbreak.dto.distrox.instancegroup;\n+\n+import static com.sequenceiq.it.cloudbreak.cloud.HostGroupType.COMPUTE;\n+import static com.sequenceiq.it.cloudbreak.cloud.HostGroupType.MASTER;\n+import static com.sequenceiq.it.cloudbreak.cloud.HostGroupType.WORKER;\n+import static com.sequenceiq.it.cloudbreak.dto.distrox.instancegroup.DistroXInstanceGroupTestDto.withHostGroup;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import org.apache.commons.lang3.NotImplementedException;\n+\n+import com.sequenceiq.cloudbreak.common.mappable.CloudPlatform;\n+import com.sequenceiq.common.api.type.EncryptionType;\n+import com.sequenceiq.distrox.api.v1.distrox.model.instancegroup.template.AwsEncryptionV1Parameters;\n+import com.sequenceiq.distrox.api.v1.distrox.model.instancegroup.template.AwsInstanceTemplateV1Parameters;\n+import com.sequenceiq.distrox.api.v1.distrox.model.instancegroup.template.InstanceTemplateV1Request;\n+import com.sequenceiq.it.cloudbreak.context.TestContext;\n+\n+public class DistroXInstanceGroupsBuilder {\n+\n+    private final TestContext testContext;\n+\n+    private List<DistroXInstanceGroupTestDto> distroXInstanceGroupTestDtoList;\n+\n+    public DistroXInstanceGroupsBuilder(TestContext testContext) {\n+        this.testContext = testContext;\n+    }\n+\n+    public DistroXInstanceGroupsBuilder defaultHostGroup() {\n+        distroXInstanceGroupTestDtoList = withHostGroup(testContext, MASTER, COMPUTE, WORKER);\n+        return this;\n+    }\n+\n+    public DistroXInstanceGroupsBuilder withDiskEncryption() {\n+        getInstanceTemplates().forEach(this::setInstanceTemplateV1Parameters);\n+        return this;\n+    }\n+\n+    public List<DistroXInstanceGroupTestDto> build() {\n+        return distroXInstanceGroupTestDtoList;\n+    }\n+\n+    private List<InstanceTemplateV1Request> getInstanceTemplates() {\n+        return distroXInstanceGroupTestDtoList.stream()\n+                .map(this::getInstanceTemplate)\n+                .collect(Collectors.toList());\n+    }\n+\n+    private InstanceTemplateV1Request getInstanceTemplate(DistroXInstanceGroupTestDto distroXInstanceGroupTestDto) {\n+        return distroXInstanceGroupTestDto.getRequest().getTemplate();\n+    }\n+\n+    private void setInstanceTemplateV1Parameters(InstanceTemplateV1Request instanceTemplateV1Request) {\n+        CloudPlatform cloudPlatform = testContext.getCloudProvider().getCloudPlatform();\n+        switch (cloudPlatform) {\n+            case AWS:\n+                instanceTemplateV1Request.setAws(getAwsInstanceTemplateV1Parameters());\n+                break;\n+            default:\n+                throw new NotImplementedException(String.format(\"Not implemented on cloudPlatform %s\", cloudPlatform));", "originalCommit": "bfde262ab339d391dc203ac0365d202a43226c0c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "37fab73743e1cfc937e436d56de4ddb25abfebe7", "url": "https://github.com/hortonworks/cloudbreak/commit/37fab73743e1cfc937e436d56de4ddb25abfebe7", "message": "CB-4931 e2e tests: distrox and environment tests to their own package and remove provider specific code", "committedDate": "2020-01-08T15:08:05Z", "type": "commit"}, {"oid": "37fab73743e1cfc937e436d56de4ddb25abfebe7", "url": "https://github.com/hortonworks/cloudbreak/commit/37fab73743e1cfc937e436d56de4ddb25abfebe7", "message": "CB-4931 e2e tests: distrox and environment tests to their own package and remove provider specific code", "committedDate": "2020-01-08T15:08:05Z", "type": "forcePushed"}]}