{"pr_number": 7312, "pr_title": "CB-5546 Mock integration tests for parent-child environment relation", "pr_createdAt": "2020-02-18T10:09:27Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/7312", "timeline": [{"oid": "654a4e2c929e5c48a265ee2acadfee55988a7648", "url": "https://github.com/hortonworks/cloudbreak/commit/654a4e2c929e5c48a265ee2acadfee55988a7648", "message": "CB-5546 Environment service mock tests to validate parent-child related operations", "committedDate": "2020-02-18T10:13:13Z", "type": "forcePushed"}, {"oid": "d6f7de7c897fdfcdc40a0035c61839fcc637d4d7", "url": "https://github.com/hortonworks/cloudbreak/commit/d6f7de7c897fdfcdc40a0035c61839fcc637d4d7", "message": "CB-5546 Environment service mock tests to validate parent-child related operations", "committedDate": "2020-02-18T10:14:44Z", "type": "forcePushed"}, {"oid": "fdc434f38c7eff803caf14c4ddd497b2495af4eb", "url": "https://github.com/hortonworks/cloudbreak/commit/fdc434f38c7eff803caf14c4ddd497b2495af4eb", "message": "CB-5546 Environment service mock tests to validate parent-child related operations", "committedDate": "2020-02-18T11:39:58Z", "type": "forcePushed"}, {"oid": "99b3873dac159241c6ea5c669bc7ffa52b366a6f", "url": "https://github.com/hortonworks/cloudbreak/commit/99b3873dac159241c6ea5c669bc7ffa52b366a6f", "message": "CB-5546 Environment service mock tests to validate parent-child related operations", "committedDate": "2020-02-19T08:45:00Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI4MTMwMA==", "url": "https://github.com/hortonworks/cloudbreak/pull/7312#discussion_r381281300", "bodyText": "What is the point with this line? If it has a purpose shouldn't it be checked?", "author": "afarsang", "createdAt": "2020-02-19T13:14:21Z", "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/testcase/mock/EnvironmentTest.java", "diffHunk": "@@ -157,17 +162,155 @@ public void testWlClusterWithInternalGetRequest(MockedTestContext testContext) {\n                 .validate();\n     }\n \n-    private EnvironmentTestDto checkEnvIsListed(TestContext testContext, EnvironmentTestDto environment, EnvironmentClient environmentClient) {\n+    @Test(dataProvider = TEST_CONTEXT_WITH_MOCK)\n+    @Description(\n+            given = \"there is a running cloudbreak\",\n+            when = \"valid create environment requests are sent to create parent environment first and then a child one\",\n+            then = \"environments should be created and parent environment should be referenced in the child environment\")\n+    public void testCreateParentChildEnvironment(TestContext testContext) {\n+        testContext\n+                .given(CredentialTestDto.class)\n+                .when(credentialTestClient.create())\n+                .given(PARENT_ENVIRONMENT, EnvironmentTestDto.class)\n+                .when(environmentTestClient.create())\n+                .when(environmentTestClient.list())\n+                .then(this::checkEnvIsListedByNameAndParentName)\n+                .await(EnvironmentStatus.AVAILABLE)\n+                .given(CHILD_ENVIRONMENT, EnvironmentTestDto.class)\n+                .withParentEnvironmentName(testContext.get(PARENT_ENVIRONMENT).getName())\n+                .when(environmentTestClient.create())\n+                .when(environmentTestClient.list())\n+                .then(this::checkEnvIsListedByNameAndParentName)\n+                .validate();\n+    }\n+\n+    @Test(dataProvider = TEST_CONTEXT_WITH_MOCK)\n+    @Description(\n+            given = \"there is an available child environment with a referenced available parent environment\",\n+            when = \"child create request is sent but parent environment is a child environment\",\n+            then = \"a BadRequestException should be returned\")\n+    public void testCreateParentChildEnvironmentWhereParentIsAChild(TestContext testContext) {\n+        String forbiddenKey = resourcePropertyProvider().getName();\n+        testContext\n+                .given(CredentialTestDto.class)\n+                .when(credentialTestClient.create())\n+                .given(PARENT_ENVIRONMENT, EnvironmentTestDto.class)\n+                .when(environmentTestClient.create())\n+                .await(EnvironmentStatus.AVAILABLE)\n+                .given(CHILD_ENVIRONMENT, EnvironmentTestDto.class)\n+                .withParentEnvironmentName(testContext.get(PARENT_ENVIRONMENT).getName())\n+                .when(environmentTestClient.create())\n+                .await(EnvironmentStatus.AVAILABLE)\n+                .when(environmentTestClient.list())", "originalCommit": "99b3873dac159241c6ea5c669bc7ffa52b366a6f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI4NDYzMQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/7312#discussion_r381284631", "bodyText": "it would make sense to implement this method with RunninParameter argument and let the method gain the environment name from the testcontext\nwithParentEnvironmentName(RunningParameter parentEnvKey) {\ngetRequest().setEnvironmentName(resource.get(parentEnvKey.getKey());\n...\nbut it is just nice to have", "author": "afarsang", "createdAt": "2020-02-19T13:21:05Z", "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/dto/environment/EnvironmentTestDto.java", "diffHunk": "@@ -202,6 +210,16 @@ public EnvironmentTestDto withS3Guard() {\n         return this;\n     }\n \n+    public EnvironmentTestDto withParentEnvironmentName(String parentEnvironmentName) {", "originalCommit": "99b3873dac159241c6ea5c669bc7ffa52b366a6f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkxNjg2NQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/7312#discussion_r381916865", "bodyText": "As I recall we planned to check freeipa mock calls as well, don't we?", "author": "afarsang", "createdAt": "2020-02-20T10:37:55Z", "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/testcase/mock/FreeIpaAttachChildEnvironmentTest.java", "diffHunk": "@@ -0,0 +1,70 @@\n+package com.sequenceiq.it.cloudbreak.testcase.mock;\n+\n+import javax.inject.Inject;\n+\n+import org.testng.annotations.Test;\n+\n+import com.sequenceiq.environment.api.v1.environment.model.response.EnvironmentStatus;\n+import com.sequenceiq.freeipa.api.v1.freeipa.stack.model.common.Status;\n+import com.sequenceiq.it.cloudbreak.assertion.freeipa.FreeIpaChildEnvironmentAssertion;\n+import com.sequenceiq.it.cloudbreak.client.CredentialTestClient;\n+import com.sequenceiq.it.cloudbreak.client.EnvironmentTestClient;\n+import com.sequenceiq.it.cloudbreak.client.FreeIPATestClient;\n+import com.sequenceiq.it.cloudbreak.context.Description;\n+import com.sequenceiq.it.cloudbreak.context.MockedTestContext;\n+import com.sequenceiq.it.cloudbreak.context.TestContext;\n+import com.sequenceiq.it.cloudbreak.dto.environment.EnvironmentTestDto;\n+import com.sequenceiq.it.cloudbreak.dto.freeipa.FreeIPAChildEnvironmentTestDto;\n+import com.sequenceiq.it.cloudbreak.dto.freeipa.FreeIPATestDto;\n+import com.sequenceiq.it.cloudbreak.mock.ITResponse;\n+import com.sequenceiq.it.cloudbreak.mock.freeipa.FreeIpaRouteHandler;\n+import com.sequenceiq.it.cloudbreak.spark.DynamicRouteStack;\n+import com.sequenceiq.it.cloudbreak.testcase.AbstractIntegrationTest;\n+\n+public class FreeIpaAttachChildEnvironmentTest extends AbstractIntegrationTest {\n+\n+    @Inject\n+    private FreeIPATestClient freeIPATestClient;\n+\n+    @Inject\n+    private CredentialTestClient credentialTestClient;\n+\n+    @Inject\n+    private EnvironmentTestClient environmentTestClient;\n+\n+    @Inject\n+    private FreeIpaRouteHandler freeIpaRouteHandler;\n+\n+    protected void setupTest(TestContext testContext) {\n+        createDefaultUser(testContext);\n+        createDefaultCredential(testContext);\n+        createDefaultEnvironmentWithNetwork(testContext);\n+        createDefaultImageCatalog(testContext);\n+        initializeDefaultBlueprints(testContext);\n+    }\n+\n+    @Test(dataProvider = TEST_CONTEXT_WITH_MOCK)\n+    @Description(\n+            given = \"environment is present\",\n+            when = \"calling a freeipa attach child environment\",\n+            then = \"freeipa should be available with kerberos and ldap config\")\n+    public void testAttachChildEnvironment(MockedTestContext testContext) {\n+        DynamicRouteStack dynamicRouteStack = testContext.getModel().getClouderaManagerMock().getDynamicRouteStack();\n+        dynamicRouteStack.post(ITResponse.FREEIPA_ROOT + \"/session/login_password\", (request, response) -> {\n+            response.cookie(\"ipa_session\", \"dummysession\");\n+            return \"\";\n+        });\n+        dynamicRouteStack.post(ITResponse.FREEIPA_ROOT + \"/session/json\", freeIpaRouteHandler);\n+        testContext\n+                .given(FreeIPATestDto.class).withCatalog(testContext.getImageCatalogMockServerSetup().getFreeIpaImageCatalogUrl())\n+                .when(freeIPATestClient.create())\n+                .await(Status.AVAILABLE)\n+                .given(FreeIPAChildEnvironmentTestDto.CHILD_ENVIRONMENT_KEY, EnvironmentTestDto.class).withCreateFreeIpa(false)\n+                .when(environmentTestClient.create())\n+                .await(EnvironmentStatus.AVAILABLE)\n+                .given(FreeIPAChildEnvironmentTestDto.class)\n+                .when(freeIPATestClient.attachChildEnvironment())\n+                .then(FreeIpaChildEnvironmentAssertion.validate())", "originalCommit": "40026131a865d88b97167b786f54cb4be659daa2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9cb0a0650c770679f2a1eb1ffa37cd6d7d2b3b5e", "url": "https://github.com/hortonworks/cloudbreak/commit/9cb0a0650c770679f2a1eb1ffa37cd6d7d2b3b5e", "message": "CB-5546 Add mock FreeIpa child environment delete tests", "committedDate": "2020-02-21T10:26:47Z", "type": "forcePushed"}, {"oid": "f46119ed893f347d320a02f8af12d9c2bfc72bea", "url": "https://github.com/hortonworks/cloudbreak/commit/f46119ed893f347d320a02f8af12d9c2bfc72bea", "message": "CB-5546 Add FreeIpa tests to their suite", "committedDate": "2020-02-24T13:46:41Z", "type": "forcePushed"}, {"oid": "03f7d7893cf15954b39e2592cb3de3ed47f2948a", "url": "https://github.com/hortonworks/cloudbreak/commit/03f7d7893cf15954b39e2592cb3de3ed47f2948a", "message": "CB-5546 Add reverse DNS zone test, refactor child env test", "committedDate": "2020-02-25T13:33:48Z", "type": "forcePushed"}, {"oid": "56f45fdd63b6cb3ee4219db6242dbdd1d366e43f", "url": "https://github.com/hortonworks/cloudbreak/commit/56f45fdd63b6cb3ee4219db6242dbdd1d366e43f", "message": "CB-5546 Environment service mock tests to validate parent-child related operations", "committedDate": "2020-02-25T16:00:01Z", "type": "commit"}, {"oid": "1288a691338e47fae7488d725f375eb7ba5e0f97", "url": "https://github.com/hortonworks/cloudbreak/commit/1288a691338e47fae7488d725f375eb7ba5e0f97", "message": "CB-5546 Implement review comments", "committedDate": "2020-02-25T16:00:01Z", "type": "commit"}, {"oid": "1d8e7ca89a46f61f71b45a87af04d740be7b74fc", "url": "https://github.com/hortonworks/cloudbreak/commit/1d8e7ca89a46f61f71b45a87af04d740be7b74fc", "message": "CB-5546 Add mock FreeIpa AttachChildEnvironment test", "committedDate": "2020-02-25T16:00:01Z", "type": "commit"}, {"oid": "8d87b43a0e3e232a06a0a957a12fbec163086c47", "url": "https://github.com/hortonworks/cloudbreak/commit/8d87b43a0e3e232a06a0a957a12fbec163086c47", "message": "CB-5546 Add mock FreeIpa child environment delete tests", "committedDate": "2020-02-25T16:00:01Z", "type": "commit"}, {"oid": "7f0352e186110c46134edc0c59c821b1f06bf6a6", "url": "https://github.com/hortonworks/cloudbreak/commit/7f0352e186110c46134edc0c59c821b1f06bf6a6", "message": "CB-5546 Clean up attach/detach child env tests", "committedDate": "2020-02-25T16:00:01Z", "type": "commit"}, {"oid": "54941fa5ae263899a6637df5c0d0403f52df5e45", "url": "https://github.com/hortonworks/cloudbreak/commit/54941fa5ae263899a6637df5c0d0403f52df5e45", "message": "CB-5546 Add FreeIpa tests to their suite", "committedDate": "2020-02-25T16:00:01Z", "type": "commit"}, {"oid": "748b8ea1fba5c4e5ed16a3267cbfbb50d3da5f41", "url": "https://github.com/hortonworks/cloudbreak/commit/748b8ea1fba5c4e5ed16a3267cbfbb50d3da5f41", "message": "CB-5546 Initialize freeipa response in IT", "committedDate": "2020-02-25T16:00:01Z", "type": "commit"}, {"oid": "778fdacffd5592740c4e27350d9c245b4fe2513f", "url": "https://github.com/hortonworks/cloudbreak/commit/778fdacffd5592740c4e27350d9c245b4fe2513f", "message": "CB-5546 Add reverse DNS zone test, refactor child env test", "committedDate": "2020-02-25T16:00:01Z", "type": "commit"}, {"oid": "778fdacffd5592740c4e27350d9c245b4fe2513f", "url": "https://github.com/hortonworks/cloudbreak/commit/778fdacffd5592740c4e27350d9c245b4fe2513f", "message": "CB-5546 Add reverse DNS zone test, refactor child env test", "committedDate": "2020-02-25T16:00:01Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQwMzE3OQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/7312#discussion_r384403179", "bodyText": "Although it is working, this is not the way what we use to follow in our mock tests. We are using a httpmock (for FreeIPA as well), and we are use to seek the http mock calls for validation. You can see examples in DistroXClusterCreationTest", "author": "afarsang", "createdAt": "2020-02-26T10:28:15Z", "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/testcase/mock/EnvironmentChildTest.java", "diffHunk": "@@ -0,0 +1,180 @@\n+package com.sequenceiq.it.cloudbreak.testcase.mock;\n+\n+import static java.util.Objects.isNull;\n+import static org.mockito.ArgumentMatchers.any;\n+\n+import java.util.Collection;\n+\n+import javax.inject.Inject;\n+import javax.ws.rs.BadRequestException;\n+\n+import org.mockito.Mockito;\n+import org.testng.annotations.Test;\n+\n+import com.sequenceiq.environment.api.v1.environment.model.response.EnvironmentStatus;\n+import com.sequenceiq.environment.api.v1.environment.model.response.SimpleEnvironmentResponse;\n+import com.sequenceiq.it.cloudbreak.EnvironmentClient;\n+import com.sequenceiq.it.cloudbreak.client.EnvironmentTestClient;\n+import com.sequenceiq.it.cloudbreak.context.Description;\n+import com.sequenceiq.it.cloudbreak.context.MockedTestContext;\n+import com.sequenceiq.it.cloudbreak.context.RunningParameter;\n+import com.sequenceiq.it.cloudbreak.context.TestContext;\n+import com.sequenceiq.it.cloudbreak.dto.environment.EnvironmentTestDto;\n+import com.sequenceiq.it.cloudbreak.exception.TestFailException;\n+import com.sequenceiq.it.cloudbreak.mock.freeipa.AbstractFreeIpaResponse;\n+import com.sequenceiq.it.cloudbreak.testcase.AbstractIntegrationTest;\n+\n+public class EnvironmentChildTest extends AbstractIntegrationTest {\n+\n+    private static final String PARENT_ENVIRONMENT = \"parent\";\n+\n+    private static final String CHILD_ENVIRONMENT = \"child\";\n+\n+    @Inject\n+    private EnvironmentTestClient environmentTestClient;\n+\n+    @Override\n+    protected void setupTest(TestContext testContext) {\n+        createDefaultUser(testContext);\n+        initializeDefaultBlueprints(testContext);\n+        createDefaultCredential(testContext);\n+        createDefaultEnvironmentWithNetwork(testContext);\n+        createDefaultFreeIPA(testContext);\n+    }\n+\n+    @Test(dataProvider = TEST_CONTEXT_WITH_MOCK)\n+    @Description(\n+            given = \"there is an available parent environment\",\n+            when = \"valid create child environment request is sent\",\n+            then = \"environment should be created and parent environment should be referenced in the child environment\")\n+    public void testCreateChildEnvironment(MockedTestContext testContext) {\n+        AbstractFreeIpaResponse<?> dnsZoneAddResponse = Mockito.mock(AbstractFreeIpaResponse.class);\n+        getFreeIpaRouteHandler().updateResponse(\"dnszone_add\", dnsZoneAddResponse);\n+\n+        testContext\n+                .given(EnvironmentTestDto.class)\n+                .when(environmentTestClient.list())\n+                .then(this::checkEnvIsListedByNameAndParentName)\n+                .given(CHILD_ENVIRONMENT, EnvironmentTestDto.class)\n+                    .withParentEnvironment()\n+                .when(environmentTestClient.create())\n+                .await(EnvironmentStatus.AVAILABLE)\n+                .when(environmentTestClient.list())\n+                .then(this::checkEnvIsListedByNameAndParentName)\n+                .then((testContext1, testDto, client) -> {\n+                    Mockito.verify(dnsZoneAddResponse).handle(any(), any());", "originalCommit": "778fdacffd5592740c4e27350d9c245b4fe2513f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "dd8fa50ba592c3c00f6b2579c507b886b14fb9b9", "url": "https://github.com/hortonworks/cloudbreak/commit/dd8fa50ba592c3c00f6b2579c507b886b14fb9b9", "message": "CB-5546 Refactor freeipa request verification", "committedDate": "2020-02-26T12:35:55Z", "type": "commit"}]}