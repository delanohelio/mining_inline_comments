{"pr_number": 9483, "pr_title": "CB-7210: Ensure that RAZ role is included when RAZ is requested, and isn't when it is not.", "pr_createdAt": "2020-11-20T00:02:15Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/9483", "timeline": [{"oid": "75fa182b419056a7ead3893de2811ab2793b1744", "url": "https://github.com/hortonworks/cloudbreak/commit/75fa182b419056a7ead3893de2811ab2793b1744", "message": "CB-7210: Ensure that RAZ role is included when RAZ is requested, and isn't when it is not.", "committedDate": "2020-11-20T00:20:34Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYyNjc5Ng==", "url": "https://github.com/hortonworks/cloudbreak/pull/9483#discussion_r527626796", "bodyText": "Minor: I would rather directly throw BadRequestException since the latter more appropriately expresses that the problem is due to a conflict of cluster settings vs IDBroker mappings. IdbmmsOperationException is supposed to  denote problems specific to IDBMMS, e.g. due to missing mappings, communication error or some other internal service error.", "author": "lajosrodek", "createdAt": "2020-11-20T11:23:12Z", "path": "datalake/src/main/java/com/sequenceiq/datalake/service/sdx/StackRequestManifester.java", "diffHunk": "@@ -269,6 +270,27 @@ void setupCloudStorageAccountMapping(StackV4Request stackRequest, String environ\n         }\n     }\n \n+    void validateMappingsConfig(MappingsConfig mappingsConfig, StackV4Request stackRequest) {\n+        String errorMessage = null;\n+\n+        // Validate RAZ if enabled, making sure that the RAZ mapping exists only when it is required.\n+        if (stackRequest.getCluster().isRangerRazEnabled()) {\n+            if (!mappingsConfig.getActorMappings().containsKey(\"rangerraz\")) {\n+                errorMessage = \"IDBMMS mappings must contain the RAZ role if RAZ is to be created!\";\n+            }\n+        } else {\n+            if (mappingsConfig.getActorMappings().containsKey(\"rangerraz\")) {\n+                errorMessage = \"IDBMMS mappings cannot contain the RAZ role if RAZ is not enabled for the cluster!\";\n+            }\n+        }\n+\n+        // Throw error if validation failed.\n+        if (errorMessage != null) {\n+            LOGGER.error(errorMessage);\n+            throw new IdbmmsOperationException(errorMessage);", "originalCommit": "75fa182b419056a7ead3893de2811ab2793b1744", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc5Mjc1Nw==", "url": "https://github.com/hortonworks/cloudbreak/pull/9483#discussion_r527792757", "bodyText": "Badrequest does sound better.", "author": "frozenwizard", "createdAt": "2020-11-20T16:05:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYyNjc5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYyODQ4OQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/9483#discussion_r527628489", "bodyText": "I see the general intent of this check, but IDBMMS always includes mappings for other service principals even if they will never be used by any clusters. So I see no real benefit of prohibiting this mapping rule if no RAZ is to be installed. (No other users are supposed to be able to ever impersonate themselves as rangerraz.)", "author": "lajosrodek", "createdAt": "2020-11-20T11:26:21Z", "path": "datalake/src/main/java/com/sequenceiq/datalake/service/sdx/StackRequestManifester.java", "diffHunk": "@@ -269,6 +270,27 @@ void setupCloudStorageAccountMapping(StackV4Request stackRequest, String environ\n         }\n     }\n \n+    void validateMappingsConfig(MappingsConfig mappingsConfig, StackV4Request stackRequest) {\n+        String errorMessage = null;\n+\n+        // Validate RAZ if enabled, making sure that the RAZ mapping exists only when it is required.\n+        if (stackRequest.getCluster().isRangerRazEnabled()) {\n+            if (!mappingsConfig.getActorMappings().containsKey(\"rangerraz\")) {\n+                errorMessage = \"IDBMMS mappings must contain the RAZ role if RAZ is to be created!\";\n+            }\n+        } else {\n+            if (mappingsConfig.getActorMappings().containsKey(\"rangerraz\")) {", "originalCommit": "75fa182b419056a7ead3893de2811ab2793b1744", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg4OTk4MQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/9483#discussion_r527889981", "bodyText": "+1 to @lajosrodek's comment. I was the one who initially suggested that we might want to disallow setting the RAZ role when creating non-RAZ datalakes, but Lajos makes a good point here, which hadn't occurred to me.\nThe rangerraz role is a more powerful role than other roles, but, as Lajos points out, our security model assumes that users are not able to impersonate other users.", "author": "gitmfox", "createdAt": "2020-11-20T18:19:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYyODQ4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc4NTg3OQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/9483#discussion_r527785879", "bodyText": "Split this into 3 tests.  Unit tests in general should only test 1 thing.    once an exception has been thrown, the unit test is considered to be dirty.  So in some cases if you try to test something immediately after, it may or may not be in a good state so the assert isn't valid.  So you could get false positives/negatives after.", "author": "frozenwizard", "createdAt": "2020-11-20T15:54:43Z", "path": "datalake/src/test/java/com/sequenceiq/datalake/service/sdx/StackRequestManifesterTest.java", "diffHunk": "@@ -216,6 +216,36 @@ public void testSetupCloudStorageAccountMappingWhenCloudStorageWithNoAccountMapp\n         assertThat(clusterV4Request.getCloudStorage().getAccountMapping()).isNull();\n     }\n \n+    @Test\n+    void testSetupCloudStorageAccountMappingsWithRAZ() {", "originalCommit": "75fa182b419056a7ead3893de2811ab2793b1744", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "eeae6b763bb2056ed575b3b7e72093628af8d15b", "url": "https://github.com/hortonworks/cloudbreak/commit/eeae6b763bb2056ed575b3b7e72093628af8d15b", "message": "CB-7210: Ensure that RAZ role is included when RAZ is requested, and isn't when it is not.", "committedDate": "2020-11-20T19:00:08Z", "type": "forcePushed"}, {"oid": "98440262bf580298402e8e4feebe25132fc5c1b0", "url": "https://github.com/hortonworks/cloudbreak/commit/98440262bf580298402e8e4feebe25132fc5c1b0", "message": "CB-7210: Ensure that RAZ role is included when RAZ is requested, and isn't when it is not.", "committedDate": "2020-11-20T19:01:41Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc0Mjc0NQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/9483#discussion_r533742745", "bodyText": "Just throw the exception here.  Remove the errorMessage variable.", "author": "frozenwizard", "createdAt": "2020-12-01T21:47:43Z", "path": "datalake/src/main/java/com/sequenceiq/datalake/service/sdx/StackRequestManifester.java", "diffHunk": "@@ -269,6 +270,23 @@ void setupCloudStorageAccountMapping(StackV4Request stackRequest, String environ\n         }\n     }\n \n+    void validateMappingsConfig(MappingsConfig mappingsConfig, StackV4Request stackRequest) {\n+        String errorMessage = null;\n+\n+        // Validate RAZ if enabled, making sure that the RAZ mapping exists when it is required.\n+        if (stackRequest.getCluster().isRangerRazEnabled()) {\n+            if (!mappingsConfig.getActorMappings().containsKey(\"rangerraz\")) {\n+                errorMessage = \"IDBMMS mappings must contain the RAZ role if RAZ is to be created!\";", "originalCommit": "98440262bf580298402e8e4feebe25132fc5c1b0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2fd2b0d2a7cf3f18b00bb47860ce5e840ff5768b", "url": "https://github.com/hortonworks/cloudbreak/commit/2fd2b0d2a7cf3f18b00bb47860ce5e840ff5768b", "message": "CB-7210: Ensure that RAZ role is included when RAZ is requested, and isn't when it is not.", "committedDate": "2020-12-01T23:45:29Z", "type": "commit"}, {"oid": "2fd2b0d2a7cf3f18b00bb47860ce5e840ff5768b", "url": "https://github.com/hortonworks/cloudbreak/commit/2fd2b0d2a7cf3f18b00bb47860ce5e840ff5768b", "message": "CB-7210: Ensure that RAZ role is included when RAZ is requested, and isn't when it is not.", "committedDate": "2020-12-01T23:45:29Z", "type": "forcePushed"}]}