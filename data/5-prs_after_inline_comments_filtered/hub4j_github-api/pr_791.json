{"pr_number": 791, "pr_title": "Add global node_id to GHObject + GHTeam extends GHObject", "pr_createdAt": "2020-04-18T12:29:05Z", "pr_url": "https://github.com/hub4j/github-api/pull/791", "timeline": [{"oid": "fdcf74eaf27dd455e41af4150ea78649952b3b20", "url": "https://github.com/hub4j/github-api/commit/fdcf74eaf27dd455e41af4150ea78649952b3b20", "message": "Add global node_id to GHObject + GHTeam extends GHObject", "committedDate": "2020-04-18T12:23:06Z", "type": "commit"}, {"oid": "e05348463ce3ee51e0159431e91fea987619839d", "url": "https://github.com/hub4j/github-api/commit/e05348463ce3ee51e0159431e91fea987619839d", "message": "Fix javadoc", "committedDate": "2020-04-18T12:32:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDc1NzczMQ==", "url": "https://github.com/hub4j/github-api/pull/791#discussion_r410757731", "bodyText": "We can create a deprecated version of this method and add new method.  We can't just change it.", "author": "bitwiseman", "createdAt": "2020-04-18T22:06:00Z", "path": "src/main/java/org/kohsuke/github/GHOrganization.java", "diffHunk": "@@ -139,7 +139,7 @@ public GHCreateRepositoryBuilder createRepository(String name) {\n      *\n      * @see <a href= \"https://developer.github.com/v3/teams/#get-team-by-name\">documentation</a>\n      */\n-    public GHTeam getTeam(int teamId) throws IOException {\n+    public GHTeam getTeam(long teamId) throws IOException {", "originalCommit": "e05348463ce3ee51e0159431e91fea987619839d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDc1Nzg4Mg==", "url": "https://github.com/hub4j/github-api/pull/791#discussion_r410757882", "bodyText": "We have a BridgeMethods to handle cases like these.  Preserving backward compatibility while changing method return types.\nhttps://github.com/github-api/github-api/blob/7d842175f7984e33b3d97346cba3b20a1f905031/src/main/java/org/kohsuke/github/GHObject.java#L75", "author": "bitwiseman", "createdAt": "2020-04-18T22:07:05Z", "path": "src/main/java/org/kohsuke/github/GHTeam.java", "diffHunk": "@@ -129,15 +130,6 @@ public void setPrivacy(Privacy privacy) throws IOException {\n         root.createRequest().method(\"PATCH\").with(\"privacy\", privacy).withUrlPath(api(\"\")).send();\n     }\n \n-    /**\n-     * Gets id.\n-     *\n-     * @return the id\n-     */\n-    public int getId() {", "originalCommit": "e05348463ce3ee51e0159431e91fea987619839d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg2MDczNA==", "url": "https://github.com/hub4j/github-api/pull/791#discussion_r410860734", "bodyText": "Seems like it works only at runtime..\nIDE still shows errors when trying to use it to return int..\nBut i assume its ok..", "author": "ingwarsw", "createdAt": "2020-04-19T09:24:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDc1Nzg4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc2MjQ4Mw==", "url": "https://github.com/hub4j/github-api/pull/791#discussion_r411762483", "bodyText": "I'm not sure this is okay.  If I had:\nint a = team.getId();\n\nDoes it compile still with this change?", "author": "bitwiseman", "createdAt": "2020-04-20T23:32:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDc1Nzg4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTk0NTc1Mg==", "url": "https://github.com/hub4j/github-api/pull/791#discussion_r411945752", "bodyText": "incompatible types: possible lossy conversion from long to int", "author": "ingwarsw", "createdAt": "2020-04-21T07:37:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDc1Nzg4Mg=="}], "type": "inlineReview"}, {"oid": "f77eb33029746536aa26ac72ed6b13ad8d03cf1f", "url": "https://github.com/hub4j/github-api/commit/f77eb33029746536aa26ac72ed6b13ad8d03cf1f", "message": "Add deprecated method", "committedDate": "2020-04-19T09:18:29Z", "type": "commit"}, {"oid": "a3073ec14ee13355d8edb591d75cd2a9bec259eb", "url": "https://github.com/hub4j/github-api/commit/a3073ec14ee13355d8edb591d75cd2a9bec259eb", "message": "Fix formatting", "committedDate": "2020-04-19T09:19:48Z", "type": "commit"}, {"oid": "b45f353fa95b59d061e65269cc9e75dbca1e3000", "url": "https://github.com/hub4j/github-api/commit/b45f353fa95b59d061e65269cc9e75dbca1e3000", "message": "Fix tests + add deprecation to one of methods", "committedDate": "2020-04-19T09:38:36Z", "type": "commit"}, {"oid": "d536a9f8746287a9e30f256d10407e5539ec0e4e", "url": "https://github.com/hub4j/github-api/commit/d536a9f8746287a9e30f256d10407e5539ec0e4e", "message": "Merge branch 'master' into global_node_id", "committedDate": "2020-04-19T09:41:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc1ODM3OA==", "url": "https://github.com/hub4j/github-api/pull/791#discussion_r411758378", "bodyText": "* @see <a href= \"https://developer.github.com/v3/teams/#get-team-by-name\">documentation</a>\n     * @deprecated Use {@link GHOrganization#getTeam(long)}\n     */\n    @Deprecated\t     \n    public GHTeam getTeam(int teamId) throws IOException {", "author": "bitwiseman", "createdAt": "2020-04-20T23:27:52Z", "path": "src/main/java/org/kohsuke/github/GHOrganization.java", "diffHunk": "@@ -139,13 +139,28 @@ public GHCreateRepositoryBuilder createRepository(String name) {\n      *\n      * @see <a href= \"https://developer.github.com/v3/teams/#get-team-by-name\">documentation</a>\n      */\n-    public GHTeam getTeam(int teamId) throws IOException {\n+    public GHTeam getTeam(long teamId) throws IOException {", "originalCommit": "d536a9f8746287a9e30f256d10407e5539ec0e4e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc1ODU3Ng==", "url": "https://github.com/hub4j/github-api/pull/791#discussion_r411758576", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @deprecated Use {@link GHOrganization#getTeam(long)}\n          \n          \n            \n                 */\n          \n          \n            \n                public GHTeam getTeam(int teamId) throws IOException {\n          \n          \n            \n                 */\n          \n          \n            \n                public GHTeam getTeam(long teamId) throws IOException {", "author": "bitwiseman", "createdAt": "2020-04-20T23:28:18Z", "path": "src/main/java/org/kohsuke/github/GHOrganization.java", "diffHunk": "@@ -139,13 +139,28 @@ public GHCreateRepositoryBuilder createRepository(String name) {\n      *\n      * @see <a href= \"https://developer.github.com/v3/teams/#get-team-by-name\">documentation</a>\n      */\n-    public GHTeam getTeam(int teamId) throws IOException {\n+    public GHTeam getTeam(long teamId) throws IOException {\n         return root.createRequest()\n                 .withUrlPath(String.format(\"/organizations/%d/team/%d\", id, teamId))\n                 .fetch(GHTeam.class)\n                 .wrapUp(this);\n     }\n \n+    /**\n+     * Gets a single team by ID.\n+     *\n+     * @param teamId\n+     *            id of the team that we want to query for\n+     * @return the team\n+     * @throws IOException\n+     *             the io exception\n+     *\n+     * @deprecated Use {@link GHOrganization#getTeam(long)}\n+     */\n+    public GHTeam getTeam(int teamId) throws IOException {", "originalCommit": "d536a9f8746287a9e30f256d10407e5539ec0e4e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc2MzAxMA==", "url": "https://github.com/hub4j/github-api/pull/791#discussion_r411763010", "bodyText": "Right... so this means there will be build breaks for clients and we can't have that.", "author": "bitwiseman", "createdAt": "2020-04-20T23:34:22Z", "path": "src/test/java/org/kohsuke/github/AppTest.java", "diffHunk": "@@ -291,7 +291,7 @@ public void testShouldFetchTeam() throws Exception {\n         GHOrganization organization = gitHub.getOrganization(GITHUB_API_TEST_ORG);\n         GHTeam teamByName = organization.getTeams().get(\"Core Developers\");\n \n-        GHTeam teamById = gitHub.getTeam(teamByName.getId());\n+        GHTeam teamById = gitHub.getTeam((int) teamByName.getId());", "originalCommit": "d536a9f8746287a9e30f256d10407e5539ec0e4e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAwMzgzNw==", "url": "https://github.com/hub4j/github-api/pull/791#discussion_r412003837", "bodyText": "That would mean we would have not to extend GHObject in GHTeam but write own implementation of node_id.. (And I actually need GHTeam)\nAnd thats actually not good idea (it should extend it from the start)..\nIm not sure how bridge methods should work (but in java you cannot have 2 methods with same signature just different return type), but probably it just work at runtime..\nAt compile time it for sure gives error..", "author": "ingwarsw", "createdAt": "2020-04-21T08:58:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc2MzAxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAxNjUyNw==", "url": "https://github.com/hub4j/github-api/pull/791#discussion_r412016527", "bodyText": "If you want me to remove extension and implement node id in GHTeam without issues..", "author": "ingwarsw", "createdAt": "2020-04-21T09:15:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc2MzAxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM1NjAzOA==", "url": "https://github.com/hub4j/github-api/pull/791#discussion_r412356038", "bodyText": "@bitwiseman From code perspective I see that such \"breaking\" changes was already being mage few times (that changes are binary compatible because of that bridge methods)\nSee here\nb6e48cc\nedd9a2d\nAnd GHObject was also moved from int to long not far away...\n#388\nSo I think its safe enought to do it..", "author": "ingwarsw", "createdAt": "2020-04-21T17:36:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc2MzAxMA=="}], "type": "inlineReview"}, {"oid": "87f37e9f1c62fc4b71862924b25803dc81b41166", "url": "https://github.com/hub4j/github-api/commit/87f37e9f1c62fc4b71862924b25803dc81b41166", "message": "Formatting and improved bridge method tests", "committedDate": "2020-04-22T16:40:19Z", "type": "commit"}, {"oid": "87f37e9f1c62fc4b71862924b25803dc81b41166", "url": "https://github.com/hub4j/github-api/commit/87f37e9f1c62fc4b71862924b25803dc81b41166", "message": "Formatting and improved bridge method tests", "committedDate": "2020-04-22T16:40:19Z", "type": "forcePushed"}]}