{"pr_number": 3921, "pr_title": "Refactor Workpiece.getAll\u2026() methods", "pr_createdAt": "2020-08-11T07:57:40Z", "pr_url": "https://github.com/kitodo/kitodo-production/pull/3921", "timeline": [{"oid": "7bb3ea0e1515289c2bb9c1064b111ccc4020ef5f", "url": "https://github.com/kitodo/kitodo-production/commit/7bb3ea0e1515289c2bb9c1064b111ccc4020ef5f", "message": "Not collect the stream for just counting it", "committedDate": "2020-08-11T09:17:51Z", "type": "forcePushed"}, {"oid": "7d8b075cdcc9544e299acd769b22e90f9c2068bf", "url": "https://github.com/kitodo/kitodo-production/commit/7d8b075cdcc9544e299acd769b22e90f9c2068bf", "message": "Not collect the stream for just counting it", "committedDate": "2020-08-11T09:20:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTM0MzM0OQ==", "url": "https://github.com/kitodo/kitodo-production/pull/3921#discussion_r471343349", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .collect(Collectors.toList());\n          \n          \n            \n                    mediaUnits.sort(Comparator.comparing(MediaUnit::getOrder));\n          \n          \n            \n                            .sorted(Comparator.comparing(MediaUnit::getOrder)).collect(Collectors.toList());", "author": "solth", "createdAt": "2020-08-17T09:06:21Z", "path": "Kitodo-API/src/main/java/org/kitodo/api/dataformat/Workpiece.java", "diffHunk": "@@ -180,42 +178,41 @@ public boolean equals(Object o) {\n     }\n \n     /**\n-     * Recursively search for all logical elements.\n+     * Returns all included structural elements of the root element of the\n+     * workpiece as a flat list. The list isn\u2019t backed by the included\n+     * structural elements, which means that insertions and deletions in the\n+     * list would not change the included structural elements. Therefore a list\n+     * that cannot be modified is returned.\n      *\n-     * @return list of all logical elements\n+     * @return all included structural elements as an unmodifiable list\n      */\n     public List<IncludedStructuralElement> getAllIncludedStructuralElements() {\n-        List<IncludedStructuralElement> includedStructuralElements = new LinkedList<>();\n-        includedStructuralElements.add(rootElement);\n-        includedStructuralElements.addAll(getAllIncludedStructuralElementsRecursive(rootElement));\n-        return includedStructuralElements;\n-    }\n-\n-    private List<IncludedStructuralElement> getAllIncludedStructuralElementsRecursive(IncludedStructuralElement parent) {\n-        List<IncludedStructuralElement> includedStructuralElements = new LinkedList<>(parent.getChildren());\n-        for (IncludedStructuralElement child : parent.getChildren()) {\n-            if (Objects.nonNull(child)) {\n-                includedStructuralElements.addAll(getAllIncludedStructuralElementsRecursive(child));\n-            }\n-        }\n-        return includedStructuralElements;\n+        return Collections.unmodifiableList(treeStream(rootElement).collect(Collectors.toList()));\n     }\n \n     /**\n-     * Recursively search for all media units with type \"page\".\n+     * Returns all media units of the media unit of the workpiece with type\n+     * \"page\" sorted by their {@code order} as a flat list. The list isn\u2019t\n+     * backed by the media units, which means that insertions and deletions in\n+     * the list would not change the media units. Therefore a list that cannot\n+     * be modified is returned.\n      *\n-     * @return list of all media units with type \"page\", sorted by their \"ORDER\" attribute.\n+     * @return all media units with type \"page\", sorted by their {@code order}\n      */\n-    public List<MediaUnit> getAllMediaUnitsSorted() {\n-        List<MediaUnit> mediaUnits = getAllMediaUnits();\n+    public List<MediaUnit> getAllMediaUnitsFilteredByTypePageAndSorted() {\n+        List<MediaUnit> mediaUnits = treeStream(mediaUnit).filter(m -> Objects.equals(m.getType(), MediaUnit.TYPE_PAGE))\n+                .collect(Collectors.toList());\n         mediaUnits.sort(Comparator.comparing(MediaUnit::getOrder));", "originalCommit": "7d8b075cdcc9544e299acd769b22e90f9c2068bf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTM0MzkzNA==", "url": "https://github.com/kitodo/kitodo-production/pull/3921#discussion_r471343934", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return Stream.concat(Stream.of((T) tree), tree.getChildren().stream().flatMap(child -> treeStream(child)));\n          \n          \n            \n                    return Stream.concat(Stream.of((T) tree), tree.getChildren().stream().flatMap(Workpiece::treeStream));", "author": "solth", "createdAt": "2020-08-17T09:07:26Z", "path": "Kitodo-API/src/main/java/org/kitodo/api/dataformat/Workpiece.java", "diffHunk": "@@ -239,4 +236,16 @@ public boolean equals(Object o) {\n         }\n         return allMediaUnits;\n     }\n+\n+    /**\n+     * Generates a stream of nodes from structure tree.\n+     *\n+     * @param tree\n+     *            starting node\n+     * @return all nodes as stream\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public static <T extends Parent<T>> Stream<T> treeStream(Parent<T> tree) {\n+        return Stream.concat(Stream.of((T) tree), tree.getChildren().stream().flatMap(child -> treeStream(child)));", "originalCommit": "7d8b075cdcc9544e299acd769b22e90f9c2068bf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d018379c6641fa507754f295472131980449598a", "url": "https://github.com/kitodo/kitodo-production/commit/d018379c6641fa507754f295472131980449598a", "message": "Deduplicate method treeStream() into class Workpiece", "committedDate": "2020-08-17T12:30:13Z", "type": "commit"}, {"oid": "02592a34a6089edf16040aff99f600cfa6413d9d", "url": "https://github.com/kitodo/kitodo-production/commit/02592a34a6089edf16040aff99f600cfa6413d9d", "message": "Extract media unit type strings into constants", "committedDate": "2020-08-17T12:31:52Z", "type": "commit"}, {"oid": "423a1cefdf34751e706aafcc47501e1726e76284", "url": "https://github.com/kitodo/kitodo-production/commit/423a1cefdf34751e706aafcc47501e1726e76284", "message": "Rename method to better make explicit what it does", "committedDate": "2020-08-17T12:31:52Z", "type": "commit"}, {"oid": "78458e5148f622f7902fd317857eed0d37b73755", "url": "https://github.com/kitodo/kitodo-production/commit/78458e5148f622f7902fd317857eed0d37b73755", "message": "Commit suggested changes\n\nCo-authored-by: Arved Solth <solth@effective-webwork.de>", "committedDate": "2020-08-17T12:33:24Z", "type": "forcePushed"}, {"oid": "3912b7ca6ad9cbc6eb03c8cc4c9d928418702c11", "url": "https://github.com/kitodo/kitodo-production/commit/3912b7ca6ad9cbc6eb03c8cc4c9d928418702c11", "message": "Commit suggested changes\n\nCo-authored-by: Arved Solth <solth@effective-webwork.de>", "committedDate": "2020-08-17T12:51:18Z", "type": "forcePushed"}, {"oid": "72ac8ab563e2b64a28dcada9dc5731f17194ff62", "url": "https://github.com/kitodo/kitodo-production/commit/72ac8ab563e2b64a28dcada9dc5731f17194ff62", "message": "Rewrite suspicious recursive list building methods", "committedDate": "2020-08-17T13:34:58Z", "type": "commit"}, {"oid": "1bd1da63cb65d4cd698aaaa20ceb57b76577b1a0", "url": "https://github.com/kitodo/kitodo-production/commit/1bd1da63cb65d4cd698aaaa20ceb57b76577b1a0", "message": "Use getters for flat lists", "committedDate": "2020-08-17T13:35:00Z", "type": "commit"}, {"oid": "0ad2ac0b867b87adba251373a43dff1c262648ce", "url": "https://github.com/kitodo/kitodo-production/commit/0ad2ac0b867b87adba251373a43dff1c262648ce", "message": "Not collect the stream for just counting it", "committedDate": "2020-08-17T13:35:03Z", "type": "commit"}, {"oid": "172901083170b8ed56000386f1043a742df524a0", "url": "https://github.com/kitodo/kitodo-production/commit/172901083170b8ed56000386f1043a742df524a0", "message": "Commit suggested changes\n\nCo-authored-by: Arved Solth <solth@effective-webwork.de>", "committedDate": "2020-08-17T13:35:05Z", "type": "commit"}, {"oid": "172901083170b8ed56000386f1043a742df524a0", "url": "https://github.com/kitodo/kitodo-production/commit/172901083170b8ed56000386f1043a742df524a0", "message": "Commit suggested changes\n\nCo-authored-by: Arved Solth <solth@effective-webwork.de>", "committedDate": "2020-08-17T13:35:05Z", "type": "forcePushed"}, {"oid": "8ab4327572998696f0eff41d9b4975c56d601fc1", "url": "https://github.com/kitodo/kitodo-production/commit/8ab4327572998696f0eff41d9b4975c56d601fc1", "message": "Rename stub variable 'm' to 'mediaUnitToCheck'", "committedDate": "2020-08-17T13:51:38Z", "type": "commit"}]}