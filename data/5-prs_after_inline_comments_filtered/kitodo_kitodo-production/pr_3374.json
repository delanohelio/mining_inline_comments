{"pr_number": 3374, "pr_title": "Update import module to make it usable for arbitrary search queries by URL", "pr_createdAt": "2020-04-01T12:24:13Z", "pr_url": "https://github.com/kitodo/kitodo-production/pull/3374", "timeline": [{"oid": "13a84df6dd63ec760eeb3b410d90261234dcc891", "url": "https://github.com/kitodo/kitodo-production/commit/13a84df6dd63ec760eeb3b410d90261234dcc891", "message": "Update import module to make it usable for arbitrary query URLs", "committedDate": "2020-04-01T12:18:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYyOTc3OA==", "url": "https://github.com/kitodo/kitodo-production/pull/3374#discussion_r401629778", "bodyText": "How does the condition effect the execution of the concatenation?", "author": "Kathrin-Huber", "createdAt": "2020-04-01T13:49:19Z", "path": "Kitodo-Query-URL-Import/src/main/java/org/kitodo/queryurlimport/QueryURLImport.java", "diffHunk": "@@ -130,17 +133,24 @@ public DataRecord getFullRecordById(String catalogId, String identifier) throws\n         if (searchFieldMapping.keySet().containsAll(searchFields.keySet())) {\n             // Query parameters for HTTP request\n             LinkedHashMap<String, String> queryParameters = new LinkedHashMap<>(parameters);\n-\n             // Search fields and terms of query\n-            LinkedHashMap<String, String> searchFieldMap = new LinkedHashMap<>();\n-            for (Map.Entry<String, String> entry : searchFields.entrySet()) {\n-                searchFieldMap.put(searchFieldMapping.get(entry.getKey()), entry.getValue());\n-            }\n+            LinkedHashMap<String, String> searchFieldMap = getSearchFieldMap(searchFields);\n+\n             try {\n                 URI queryURL = createQueryURI(queryParameters);\n-                String queryString = queryURL.toString();\n-                queryString = queryString + \"&startRecord=0&maximumRecords=\" + rows + \"&query=\"\n-                        + createSearchFieldString(searchFieldMap);\n+                String queryString = queryURL.toString() + \"&\";\n+                if (Objects.nonNull(interfaceType)) {\n+                    if (Objects.nonNull(interfaceType.getStartRecordString())) {\n+                        queryString = queryString + interfaceType.getStartRecordString() + equalsOperand + \"0&\";\n+                    }\n+                    if (Objects.nonNull(interfaceType.getMaxRecordsString())) {\n+                        queryString = queryString + interfaceType.getMaxRecordsString() + equalsOperand + rows + \"&\";\n+                    }\n+                    if (Objects.nonNull(interfaceType.getQueryString())) {\n+                        queryString = queryString + equalsOperand;\n+                    }", "originalCommit": "13a84df6dd63ec760eeb3b410d90261234dcc891", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjExNjE2Nw==", "url": "https://github.com/kitodo/kitodo-production/pull/3374#discussion_r402116167", "bodyText": "Well spotted, this is one place where I forgot to add the return value of interfaceType.getQueryString() itself to complete query string. Fixed it now.", "author": "solth", "createdAt": "2020-04-02T07:49:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYyOTc3OA=="}], "type": "inlineReview"}, {"oid": "f18b2d2fa396e286cc57b274b78613c5b77bdff4", "url": "https://github.com/kitodo/kitodo-production/commit/f18b2d2fa396e286cc57b274b78613c5b77bdff4", "message": "Add missing query string parameter", "committedDate": "2020-04-02T07:49:04Z", "type": "commit"}, {"oid": "0f5b37488cbb9e0d5a00520faa95516b17056960", "url": "https://github.com/kitodo/kitodo-production/commit/0f5b37488cbb9e0d5a00520faa95516b17056960", "message": "Display error messages returned by search interfaces during OPAC import", "committedDate": "2020-04-03T19:02:49Z", "type": "commit"}, {"oid": "717cd0b3d2433996b505269b6ce474afb8b5441d", "url": "https://github.com/kitodo/kitodo-production/commit/717cd0b3d2433996b505269b6ce474afb8b5441d", "message": "Prepend optional 'idPrefix' before every ID search parameter", "committedDate": "2020-04-03T19:25:55Z", "type": "commit"}]}