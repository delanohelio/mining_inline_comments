{"pr_number": 801, "pr_title": "Refactorings on the Analytics Scheduler", "pr_createdAt": "2020-06-30T21:27:25Z", "pr_url": "https://github.com/scireum/sirius-biz/pull/801", "timeline": [{"oid": "783d3327550811550c4a642739ae3355599fbd0e", "url": "https://github.com/scireum/sirius-biz/commit/783d3327550811550c4a642739ae3355599fbd0e", "message": "Extracts common code to simplify the batch emitters.", "committedDate": "2020-06-30T21:21:19Z", "type": "commit"}, {"oid": "ab64c098ed2798532cdf01462fccbdbdc756b7c2", "url": "https://github.com/scireum/sirius-biz/commit/ab64c098ed2798532cdf01462fccbdbdc756b7c2", "message": "Performs refactorings necessarry after re-writing batch emitters.", "committedDate": "2020-06-30T21:22:01Z", "type": "commit"}, {"oid": "1e0d8a50777f8e6a81ecf9615572f5dc6866c180", "url": "https://github.com/scireum/sirius-biz/commit/1e0d8a50777f8e6a81ecf9615572f5dc6866c180", "message": "Provides a special kind of MetricComputer for large tasks.\n\nThis has a heavily reduced batch size, as the tasks within\nare expected to be larger. Also there is no daily best effort\ncomputation for this metric.", "committedDate": "2020-06-30T21:23:02Z", "type": "commit"}, {"oid": "8ffca020b87fbec0d53296f31cceec4fd8d7fa5c", "url": "https://github.com/scireum/sirius-biz/commit/8ffca020b87fbec0d53296f31cceec4fd8d7fa5c", "message": "Adds a missing grant to the auto-setup for MongoDB.", "committedDate": "2020-06-30T21:23:32Z", "type": "commit"}, {"oid": "f1f61adb408a24d2f607e4dedb70bea8346d691c", "url": "https://github.com/scireum/sirius-biz/commit/f1f61adb408a24d2f607e4dedb70bea8346d691c", "message": "Provides a maintenance command for managing and executing analytical schedulers.", "committedDate": "2020-06-30T21:26:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEyNzE5NA==", "url": "https://github.com/scireum/sirius-biz/pull/801#discussion_r448127194", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param force       determines if executon is forced\n          \n          \n            \n                 * @param force       determines if execution is forced", "author": "mkeckmkeck", "createdAt": "2020-07-01T05:42:31Z", "path": "src/main/java/sirius/biz/analytics/scheduler/AnalyticalEngine.java", "diffHunk": "@@ -149,24 +156,31 @@ private Boolean checkIfQueueIsEmpty(String queueName) {\n      * Creates an entry which is processed by the {@link AnalyticsScheduler#getExecutorForScheduling() scheduling executor}\n      * and will eventually invoke {@link AnalyticsScheduler#scheduleBatches(Consumer)} for the given scheduler.\n      * <p>\n-     * This method also enforces the {@link AnalyticsScheduler#getInterval() scheduling interval}.\n+     * This method also enforces the {@link AnalyticsScheduler#getInterval() scheduling interval} unless <tt>force</tt>\n+     * is set to <tt>true</tt>.\n      *\n-     * @param scheduler the scheduler to queue\n+     * @param scheduler   the scheduler to queue\n+     * @param force       determines if executon is forced", "originalCommit": "f1f61adb408a24d2f607e4dedb70bea8346d691c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEyNzg1OA==", "url": "https://github.com/scireum/sirius-biz/pull/801#discussion_r448127858", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * executions for the current day. If an execution if foced for another day, this will not be recorded\n          \n          \n            \n                 * executions for the current day. If an execution if forced for another day, this will not be recorded", "author": "mkeckmkeck", "createdAt": "2020-07-01T05:44:57Z", "path": "src/main/java/sirius/biz/analytics/scheduler/AnalyticalEngine.java", "diffHunk": "@@ -193,12 +207,25 @@ private boolean shouldExecuteAgain(AnalyticsScheduler scheduler) {\n             return true;\n         }\n \n-        LocalDateTime lastExecution =\n-                flags.readExecutionFlag(computeExecutionFlagName(scheduler), EXECUTION_FLAG).orElse(null);\n+        LocalDateTime lastExecution = getLastExecution(scheduler).orElse(null);\n         if (lastExecution == null) {\n             return true;\n         }\n \n         return lastExecution.getMonthValue() != LocalDate.now().getMonthValue();\n     }\n+\n+    /**\n+     * Determines the last execution timestamp of the given scheduler.\n+     * <p>\n+     * Note that this only accounts for regular (planned) invocations of the scheduler as well as forced\n+     * executions for the current day. If an execution if foced for another day, this will not be recorded", "originalCommit": "f1f61adb408a24d2f607e4dedb70bea8346d691c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEyODA4OQ==", "url": "https://github.com/scireum/sirius-biz/pull/801#discussion_r448128089", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * as execution flag and therefore not be reported here.\n          \n          \n            \n                 * as execution flag and therefore not be returned here.", "author": "mkeckmkeck", "createdAt": "2020-07-01T05:45:40Z", "path": "src/main/java/sirius/biz/analytics/scheduler/AnalyticalEngine.java", "diffHunk": "@@ -193,12 +207,25 @@ private boolean shouldExecuteAgain(AnalyticsScheduler scheduler) {\n             return true;\n         }\n \n-        LocalDateTime lastExecution =\n-                flags.readExecutionFlag(computeExecutionFlagName(scheduler), EXECUTION_FLAG).orElse(null);\n+        LocalDateTime lastExecution = getLastExecution(scheduler).orElse(null);\n         if (lastExecution == null) {\n             return true;\n         }\n \n         return lastExecution.getMonthValue() != LocalDate.now().getMonthValue();\n     }\n+\n+    /**\n+     * Determines the last execution timestamp of the given scheduler.\n+     * <p>\n+     * Note that this only accounts for regular (planned) invocations of the scheduler as well as forced\n+     * executions for the current day. If an execution if foced for another day, this will not be recorded\n+     * as execution flag and therefore not be reported here.", "originalCommit": "f1f61adb408a24d2f607e4dedb70bea8346d691c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEzNzIwNA==", "url": "https://github.com/scireum/sirius-biz/pull/801#discussion_r448137204", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Provides a maintenance command to execute analytical schedulers on demand and to also diplay their state.\n          \n          \n            \n             * Provides a maintenance command to execute analytical schedulers on demand and to also display their state.", "author": "sabieber", "createdAt": "2020-07-01T06:14:53Z", "path": "src/main/java/sirius/biz/analytics/scheduler/AnalyticsCommand.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/*\n+ * Made with all the love in the world\n+ * by scireum in Remshalden, Germany\n+ *\n+ * Copyright by scireum GmbH\n+ * http://www.scireum.de - info@scireum.de\n+ */\n+\n+package sirius.biz.analytics.scheduler;\n+\n+import sirius.biz.cluster.work.DistributedTaskExecutor;\n+import sirius.biz.cluster.work.DistributedTasks;\n+import sirius.kernel.commons.Strings;\n+import sirius.kernel.di.std.Part;\n+import sirius.kernel.di.std.Register;\n+import sirius.kernel.health.console.Command;\n+import sirius.kernel.nls.NLS;\n+\n+import javax.annotation.Nonnull;\n+import java.time.LocalDate;\n+import java.time.LocalDateTime;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+/**\n+ * Provides a maintenance command to execute analytical schedulers on demand and to also diplay their state.", "originalCommit": "f1f61adb408a24d2f607e4dedb70bea8346d691c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "94bef20971d95201fe08faaae37c6468368144fe", "url": "https://github.com/scireum/sirius-biz/commit/94bef20971d95201fe08faaae37c6468368144fe", "message": "Apply suggestions from code review\n\nCo-authored-by: Matthias Keck <60612914+mkeckmkeck@users.noreply.github.com>\nCo-authored-by: Sascha Bieberstein <sabieber@users.noreply.github.com>", "committedDate": "2020-07-01T06:56:22Z", "type": "commit"}]}