{"pr_number": 866, "pr_title": "Adds ability to validate XML files against specified XSD files", "pr_createdAt": "2020-09-24T12:34:07Z", "pr_url": "https://github.com/scireum/sirius-biz/pull/866", "timeline": [{"oid": "9001067badf9f6dc1403d5e8ab0883d29890e26a", "url": "https://github.com/scireum/sirius-biz/commit/9001067badf9f6dc1403d5e8ab0883d29890e26a", "message": "Adds a simple class to validate xml files\n\n- Fixes: SIRI-255", "committedDate": "2020-09-24T12:29:26Z", "type": "commit"}, {"oid": "ecf2a509274825346a212e5e1e1a432cf6e3aed4", "url": "https://github.com/scireum/sirius-biz/commit/ecf2a509274825346a212e5e1e1a432cf6e3aed4", "message": "Adds ability to validate xml files before import\n\n- Overwrites methods of parent class as each file has to be read twice in case of validation\n- Adds requireValidFile as a hidden parameter that prevents an import in case of errors during validation\n- Adds logic to read xsd files located in the resource directory and validate xml files against the specified xsd\n\n- Fixes: SIRI-255", "committedDate": "2020-09-24T12:32:50Z", "type": "commit"}, {"oid": "15733117aa35b7fef04bcf848ed3d8587525850c", "url": "https://github.com/scireum/sirius-biz/commit/15733117aa35b7fef04bcf848ed3d8587525850c", "message": "Adds translations for new NLS keys\n\n- Fixes: SIRI-255", "committedDate": "2020-09-24T12:33:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI4MzYxNA==", "url": "https://github.com/scireum/sirius-biz/pull/866#discussion_r494283614", "bodyText": "only add if getXsdResourcePath() != null?", "author": "andyHa", "createdAt": "2020-09-24T12:40:00Z", "path": "src/main/java/sirius/biz/jobs/batch/file/XMLImportJobFactory.java", "diffHunk": "@@ -8,13 +8,27 @@\n \n package sirius.biz.jobs.batch.file;\n \n+import sirius.biz.jobs.params.BooleanParameter;\n+import sirius.biz.jobs.params.Parameter;\n import sirius.biz.process.ProcessContext;\n \n+import java.util.function.Consumer;\n+\n /**\n  * Provides a base implementation for batch jobs which import XML files using a {@link XMLImportJob}.\n  */\n public abstract class XMLImportJobFactory extends FileImportJobFactory {\n \n+    protected final BooleanParameter requireValidFile =\n+            new BooleanParameter(\"requireValidFile\", \"$XMLImportJobFactory.requireValidFile\").hidden()\n+                                                                                                       .logInSystem();\n+\n+    @Override\n+    protected void collectParameters(Consumer<Parameter<?, ?>> parameterCollector) {\n+        parameterCollector.accept(requireValidFile);", "originalCommit": "15733117aa35b7fef04bcf848ed3d8587525850c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI4NDA4OQ==", "url": "https://github.com/scireum/sirius-biz/pull/866#discussion_r494284089", "bodyText": "Why is this simple and what would be a complex one?", "author": "andyHa", "createdAt": "2020-09-24T12:40:47Z", "path": "src/main/java/sirius/biz/jobs/batch/file/SimpleXMLValidator.java", "diffHunk": "@@ -0,0 +1,126 @@\n+/*\n+ * Made with all the love in the world\n+ * by scireum in Remshalden, Germany\n+ *\n+ * Copyright by scireum GmbH\n+ * http://www.scireum.de - info@scireum.de\n+ */\n+\n+package sirius.biz.jobs.batch.file;\n+\n+import org.xml.sax.ErrorHandler;\n+import org.xml.sax.SAXException;\n+import org.xml.sax.SAXParseException;\n+import sirius.biz.process.ProcessContext;\n+import sirius.biz.process.logs.ProcessLog;\n+import sirius.kernel.commons.Monoflop;\n+import sirius.kernel.commons.Strings;\n+import sirius.kernel.health.Exceptions;\n+import sirius.web.security.UserContext;\n+\n+import javax.xml.XMLConstants;\n+import javax.xml.transform.Source;\n+import javax.xml.validation.Schema;\n+import javax.xml.validation.SchemaFactory;\n+import javax.xml.validation.Validator;\n+import java.io.IOException;\n+import java.util.Locale;\n+\n+/**\n+ * wra\n+ */\n+public class SimpleXMLValidator {", "originalCommit": "15733117aa35b7fef04bcf848ed3d8587525850c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI4NzI0Nw==", "url": "https://github.com/scireum/sirius-biz/pull/866#discussion_r494287247", "bodyText": "I would say that it is simple as only one xml and xsd source can be provided without additional settings. But I can rename it to XMLValidator as this class might evolve in time.", "author": "fhaScireum", "createdAt": "2020-09-24T12:46:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI4NDA4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI4OTY5OQ==", "url": "https://github.com/scireum/sirius-biz/pull/866#discussion_r494289699", "bodyText": "XsdParser or XsdValidator would be my call", "author": "idlira", "createdAt": "2020-09-24T12:49:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI4NDA4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDMwNDY3OA==", "url": "https://github.com/scireum/sirius-biz/pull/866#discussion_r494304678", "bodyText": "In my opinion, XsdValidator makes it seem like it validates XSD's.", "author": "fhaScireum", "createdAt": "2020-09-24T13:12:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI4NDA4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI4NDMwNQ==", "url": "https://github.com/scireum/sirius-biz/pull/866#discussion_r494284305", "bodyText": ":)", "author": "andyHa", "createdAt": "2020-09-24T12:41:09Z", "path": "src/main/java/sirius/biz/jobs/batch/file/SimpleXMLValidator.java", "diffHunk": "@@ -0,0 +1,126 @@\n+/*\n+ * Made with all the love in the world\n+ * by scireum in Remshalden, Germany\n+ *\n+ * Copyright by scireum GmbH\n+ * http://www.scireum.de - info@scireum.de\n+ */\n+\n+package sirius.biz.jobs.batch.file;\n+\n+import org.xml.sax.ErrorHandler;\n+import org.xml.sax.SAXException;\n+import org.xml.sax.SAXParseException;\n+import sirius.biz.process.ProcessContext;\n+import sirius.biz.process.logs.ProcessLog;\n+import sirius.kernel.commons.Monoflop;\n+import sirius.kernel.commons.Strings;\n+import sirius.kernel.health.Exceptions;\n+import sirius.web.security.UserContext;\n+\n+import javax.xml.XMLConstants;\n+import javax.xml.transform.Source;\n+import javax.xml.validation.Schema;\n+import javax.xml.validation.SchemaFactory;\n+import javax.xml.validation.Validator;\n+import java.io.IOException;\n+import java.util.Locale;\n+\n+/**\n+ * wra", "originalCommit": "15733117aa35b7fef04bcf848ed3d8587525850c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI4NDUxNA==", "url": "https://github.com/scireum/sirius-biz/pull/866#discussion_r494284514", "bodyText": ":)", "author": "fhaScireum", "createdAt": "2020-09-24T12:41:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI4NDMwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI4MzczNw==", "url": "https://github.com/scireum/sirius-biz/pull/866#discussion_r494283737", "bodyText": "Add javadoc", "author": "bwiedmann", "createdAt": "2020-09-24T12:40:13Z", "path": "src/main/java/sirius/biz/jobs/batch/file/SimpleXMLValidator.java", "diffHunk": "@@ -0,0 +1,126 @@\n+/*\n+ * Made with all the love in the world\n+ * by scireum in Remshalden, Germany\n+ *\n+ * Copyright by scireum GmbH\n+ * http://www.scireum.de - info@scireum.de\n+ */\n+\n+package sirius.biz.jobs.batch.file;\n+\n+import org.xml.sax.ErrorHandler;\n+import org.xml.sax.SAXException;\n+import org.xml.sax.SAXParseException;\n+import sirius.biz.process.ProcessContext;\n+import sirius.biz.process.logs.ProcessLog;\n+import sirius.kernel.commons.Monoflop;\n+import sirius.kernel.commons.Strings;\n+import sirius.kernel.health.Exceptions;\n+import sirius.web.security.UserContext;\n+\n+import javax.xml.XMLConstants;\n+import javax.xml.transform.Source;\n+import javax.xml.validation.Schema;\n+import javax.xml.validation.SchemaFactory;\n+import javax.xml.validation.Validator;\n+import java.io.IOException;\n+import java.util.Locale;\n+\n+/**\n+ * wra", "originalCommit": "15733117aa35b7fef04bcf848ed3d8587525850c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "fc406a6cafe105e8f67f79ece8eb35a03d859666", "url": "https://github.com/scireum/sirius-biz/commit/fc406a6cafe105e8f67f79ece8eb35a03d859666", "message": "Moves xsd resource path to the factory as it's the same for each job execution and enables checking them before adding the hidden boolean parameter.\n\nAlso clarifies why the xml file is invalid.\n\n- Fixes: SIRI-255", "committedDate": "2020-09-24T13:14:24Z", "type": "commit"}, {"oid": "d549b0202a054ad6f79d6d478f4ceaa912b6327c", "url": "https://github.com/scireum/sirius-biz/commit/d549b0202a054ad6f79d6d478f4ceaa912b6327c", "message": "Update src/main/resources/biz_de.properties\n\nCo-authored-by: Idevaldo De Lira <ili@scireum.de>", "committedDate": "2020-09-24T13:21:19Z", "type": "commit"}, {"oid": "e2b1de2d9fcc68add056abdcd1023d5b9b16a632", "url": "https://github.com/scireum/sirius-biz/commit/e2b1de2d9fcc68add056abdcd1023d5b9b16a632", "message": "Update src/main/resources/biz_en.properties\n\nCo-authored-by: Idevaldo De Lira <ili@scireum.de>", "committedDate": "2020-09-24T13:21:26Z", "type": "commit"}, {"oid": "52877fc69bf384b99c0cc7c5fb0445721a6ef085", "url": "https://github.com/scireum/sirius-biz/commit/52877fc69bf384b99c0cc7c5fb0445721a6ef085", "message": "Allows to change the visibility of a parameter to normal in case extended factories want to show a certain parameter\n\n- Fixes: SIRI-255", "committedDate": "2020-09-24T14:27:33Z", "type": "commit"}, {"oid": "721604dac8e8af7f755b84fbf1502a7002177aba", "url": "https://github.com/scireum/sirius-biz/commit/721604dac8e8af7f755b84fbf1502a7002177aba", "message": "Logs the parameter normally as non admin users may be able to set the parameter (if made visible in extended jobs)\n\n- Fixes: SIRI-255", "committedDate": "2020-09-24T14:32:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc1MTA5MA==", "url": "https://github.com/scireum/sirius-biz/pull/866#discussion_r494751090", "bodyText": "Error handler will only handle SAXParseException. So we will swallow IOExceptions here.", "author": "mkeckmkeck", "createdAt": "2020-09-25T05:12:52Z", "path": "src/main/java/sirius/biz/jobs/batch/file/XMLValidator.java", "diffHunk": "@@ -0,0 +1,126 @@\n+/*\n+ * Made with all the love in the world\n+ * by scireum in Remshalden, Germany\n+ *\n+ * Copyright by scireum GmbH\n+ * http://www.scireum.de - info@scireum.de\n+ */\n+\n+package sirius.biz.jobs.batch.file;\n+\n+import org.xml.sax.ErrorHandler;\n+import org.xml.sax.SAXException;\n+import org.xml.sax.SAXParseException;\n+import sirius.biz.process.ProcessContext;\n+import sirius.biz.process.logs.ProcessLog;\n+import sirius.kernel.commons.Monoflop;\n+import sirius.kernel.commons.Strings;\n+import sirius.kernel.health.Exceptions;\n+import sirius.web.security.UserContext;\n+\n+import javax.xml.XMLConstants;\n+import javax.xml.transform.Source;\n+import javax.xml.validation.Schema;\n+import javax.xml.validation.SchemaFactory;\n+import javax.xml.validation.Validator;\n+import java.io.IOException;\n+import java.util.Locale;\n+\n+/**\n+ * Validates an XML source against an XSD source and keeps track if any error occurred during validation.\n+ */\n+public class XMLValidator {\n+\n+    private final ProcessContext process;\n+\n+    /**\n+     * Creates a validator that logs errors into the given process context.\n+     *\n+     * @param process the context to log errors into\n+     */\n+    public XMLValidator(ProcessContext process) {\n+        this.process = process;\n+    }\n+\n+    /**\n+     * Determines if the \u00a0{@link Source xml source} is valid by validating it with the given {@link Source xsd source}.\n+     *\n+     * @param xml the XML source to be validated\n+     * @param xsd the XSD source used as the schema for the validator\n+     * @return <tt>true</tt> if the xml source is valid, <tt>false</tt> otherwise\n+     * @throws SAXException in case of an invalid xsd source\n+     */\n+    public boolean validate(Source xml, Source xsd) throws SAXException {\n+        SchemaFactory schemaFactory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);\n+        Schema schema = schemaFactory.newSchema(xsd);\n+\n+        Validator validator = schema.newValidator();\n+        String language = UserContext.getCurrentUser().getLang();\n+        // Apply a workaround for using the english translations as those are not stored in an extra \"en\" resource\n+        // bundle but in the root one instead.\n+        Locale locale = Strings.areEqual(language, \"en\") ? Locale.ROOT : new Locale(language);\n+        validator.setProperty(\"http://apache.org/xml/properties/locale\", locale);\n+\n+        XMLValidatorErrorHandler errorHandler = new XMLValidatorErrorHandler(process);\n+        validator.setErrorHandler(errorHandler);\n+\n+        try {\n+            validator.validate(xml);\n+        } catch (SAXParseException | IOException e) {\n+            // Cause of the exception is already logged via validator's error handler.\n+            Exceptions.ignore(e);", "originalCommit": "721604dac8e8af7f755b84fbf1502a7002177aba", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc1MTM5OQ==", "url": "https://github.com/scireum/sirius-biz/pull/866#discussion_r494751399", "bodyText": "Is therre a use case for having a validation on xml file import and ignoring the result? If not, then why not just use the xsdPath parameter to determine if a validation should happen?", "author": "mkeckmkeck", "createdAt": "2020-09-25T05:14:07Z", "path": "src/main/java/sirius/biz/jobs/batch/file/XMLImportJob.java", "diffHunk": "@@ -27,6 +47,93 @@\n      */\n     protected XMLImportJob(XMLImportJobFactory factory, ProcessContext process) {\n         super(factory.fileParameter, process);\n+        requireValidFile = process.getParameter(factory.requireValidFile).orElse(false);\n+        xsdResourcePath = factory.getXsdResourcePath();", "originalCommit": "721604dac8e8af7f755b84fbf1502a7002177aba", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc2OTMyOQ==", "url": "https://github.com/scireum/sirius-biz/pull/866#discussion_r494769329", "bodyText": "The path dictates if a validation should happen. The flag controls the behavior of the job:\n\nImport: Abort or try to import anyway.\nExport: finish the job with either failed or success.\nIn both cases, validation errors will be logged accordingly as warning/error.", "author": "idlira", "createdAt": "2020-09-25T06:15:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc1MTM5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDk0ODYzOA==", "url": "https://github.com/scireum/sirius-biz/pull/866#discussion_r494948638", "bodyText": "We are inside an import job here. If you have a use case for validation and ignoring the results, than that is fine. Just I don't see that use case :-)", "author": "mkeckmkeck", "createdAt": "2020-09-25T12:19:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc1MTM5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDk1NTM2OA==", "url": "https://github.com/scireum/sirius-biz/pull/866#discussion_r494955368", "bodyText": "Fine for me", "author": "mkeckmkeck", "createdAt": "2020-09-25T12:32:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc1MTM5OQ=="}], "type": "inlineReview"}, {"oid": "a22f927b9c3779d7b31b9edac6a6d2e20beeb68c", "url": "https://github.com/scireum/sirius-biz/commit/a22f927b9c3779d7b31b9edac6a6d2e20beeb68c", "message": "Logs IOExceptions to the process errors and fails the xml validation\n\nFixes: SIRI-256", "committedDate": "2020-09-29T11:57:01Z", "type": "commit"}, {"oid": "c403a0a7fd94770a6262d6f9b7b58c98f4e06009", "url": "https://github.com/scireum/sirius-biz/commit/c403a0a7fd94770a6262d6f9b7b58c98f4e06009", "message": "Merge remote-tracking branch 'origin/master' into fha/SIRI-255-XSD-Validation", "committedDate": "2020-09-29T14:19:16Z", "type": "commit"}]}