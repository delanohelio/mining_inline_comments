{"pr_number": 659, "pr_title": "Adds some methods to re-use PageHelpers in processes to iterate over total items", "pr_createdAt": "2020-01-08T16:32:26Z", "pr_url": "https://github.com/scireum/sirius-biz/pull/659", "timeline": [{"oid": "2d7538a02b16418fa75576e63481c04b8ca649c7", "url": "https://github.com/scireum/sirius-biz/commit/2d7538a02b16418fa75576e63481c04b8ca649c7", "message": "Adds some methods to re-use PageHelpers in processes to iterate over total items\n\nWhile this is not really the purpose of these helpers, this prevents a lot of duplicate code when building processes that are linked to page views, for example export processes.\n\nFixes: SIRI-146", "committedDate": "2020-01-08T16:31:05Z", "type": "commit"}, {"oid": "7f1a3485968518d3d5924068cc2602491539ea10", "url": "https://github.com/scireum/sirius-biz/commit/7f1a3485968518d3d5924068cc2602491539ea10", "message": "Enables aggregations with a processContext\n\nFixes: SIRI-146", "committedDate": "2020-01-08T16:38:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDMyODIyNA==", "url": "https://github.com/scireum/sirius-biz/pull/659#discussion_r364328224", "bodyText": "couldn't we use a Function<String,Value> parameterProvider here?", "author": "andyHa", "createdAt": "2020-01-08T16:38:09Z", "path": "src/main/java/sirius/biz/web/BasePageHelper.java", "diffHunk": "@@ -47,7 +49,8 @@\n public abstract class BasePageHelper<E extends BaseEntity<?>, C extends Constraint, Q extends Query<Q, E, C>, B extends BasePageHelper<E, C, Q, B>> {\n \n     protected static final int DEFAULT_PAGE_SIZE = 25;\n-    protected WebContext ctx;\n+    protected WebContext webContext;\n+    protected ProcessContext processContext;", "originalCommit": "2d7538a02b16418fa75576e63481c04b8ca649c7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDMyODQ1OQ==", "url": "https://github.com/scireum/sirius-biz/pull/659#discussion_r364328459", "bodyText": "also this.parameterProvider = webContext::getParameter", "author": "andyHa", "createdAt": "2020-01-08T16:38:38Z", "path": "src/main/java/sirius/biz/web/BasePageHelper.java", "diffHunk": "@@ -61,12 +64,25 @@ protected BasePageHelper(Q query) {\n     /**\n      * Attaches a web context to the helper, to fetch filter and pagination values from.\n      *\n-     * @param ctx the request to attach\n+     * @param webContext the request to attach\n      * @return the helper itself for fluent method calls\n      */\n     @SuppressWarnings(\"unchecked\")\n-    public B withContext(WebContext ctx) {\n-        this.ctx = ctx;\n+    public B withContext(WebContext webContext) {\n+        this.webContext = webContext;\n+        return (B) this;", "originalCommit": "2d7538a02b16418fa75576e63481c04b8ca649c7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDMyODU1NA==", "url": "https://github.com/scireum/sirius-biz/pull/659#discussion_r364328554", "bodyText": "withParameterProvider(Function ...)", "author": "andyHa", "createdAt": "2020-01-08T16:38:48Z", "path": "src/main/java/sirius/biz/web/BasePageHelper.java", "diffHunk": "@@ -61,12 +64,25 @@ protected BasePageHelper(Q query) {\n     /**\n      * Attaches a web context to the helper, to fetch filter and pagination values from.\n      *\n-     * @param ctx the request to attach\n+     * @param webContext the request to attach\n      * @return the helper itself for fluent method calls\n      */\n     @SuppressWarnings(\"unchecked\")\n-    public B withContext(WebContext ctx) {\n-        this.ctx = ctx;\n+    public B withContext(WebContext webContext) {\n+        this.webContext = webContext;\n+        return (B) this;\n+    }\n+\n+    /**\n+     * Attaches a process context to the helper, to fetch filter values from.\n+     * This can be used intead of supplying a webContext via {@link #withContext(WebContext)}.\n+     *\n+     * @param processContext the context where filter values are fetched from\n+     * @return the helper itself for fluent method calls\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public B withProcessContext(ProcessContext processContext) {", "originalCommit": "2d7538a02b16418fa75576e63481c04b8ca649c7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDMyOTQzMw==", "url": "https://github.com/scireum/sirius-biz/pull/659#discussion_r364329433", "bodyText": "getQuery", "author": "andyHa", "createdAt": "2020-01-08T16:40:31Z", "path": "src/main/java/sirius/biz/web/BasePageHelper.java", "diffHunk": "@@ -325,10 +344,10 @@ public B withPageSize(int pageSize) {\n      * @return the given data wrapped as <tt>Page</tt>\n      */\n     public Page<E> asPage() {\n-        Objects.requireNonNull(ctx);\n+        Objects.requireNonNull(webContext);\n         Watch w = Watch.start();\n         Page<E> result = new Page<E>().withStart(1).withPageSize(pageSize);\n-        result.bindToRequest(ctx);\n+        result.bindToRequest(webContext);\n \n         if (Strings.isFilled(result.getQuery()) && !searchFields.isEmpty()) {", "originalCommit": "2d7538a02b16418fa75576e63481c04b8ca649c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDMyOTQ4MQ==", "url": "https://github.com/scireum/sirius-biz/pull/659#discussion_r364329481", "bodyText": "or createQuery", "author": "andyHa", "createdAt": "2020-01-08T16:40:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDMyOTQzMw=="}], "type": "inlineReview"}, {"oid": "2b83d9be4c57251876dd2b2d3387457b0bb403f3", "url": "https://github.com/scireum/sirius-biz/commit/2b83d9be4c57251876dd2b2d3387457b0bb403f3", "message": "Uses a generic parameter provider instead of a process context\n\nFixes: SIRI-146", "committedDate": "2020-01-09T10:21:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDcwNzMxMQ==", "url": "https://github.com/scireum/sirius-biz/pull/659#discussion_r364707311", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * While this is not the purpose of this helper, this can be used to easily re-use code that is inteded for page views.\n          \n          \n            \n                 * While this is not the purpose of this helper, this can be used to easily re-use code that is intended for page views.", "author": "sabieber", "createdAt": "2020-01-09T12:14:26Z", "path": "src/main/java/sirius/biz/web/BasePageHelper.java", "diffHunk": "@@ -349,6 +359,53 @@ public B withPageSize(int pageSize) {\n         return result;\n     }\n \n+    /**\n+     * Calls the given function on all items in the result ignoring {@link #pageSize}, as long as it returns <tt>true</tt>.\n+     * <p>\n+     * While this is not the purpose of this helper, this can be used to easily re-use code that is inteded for page views.", "originalCommit": "2b83d9be4c57251876dd2b2d3387457b0bb403f3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDcwNzQ2NA==", "url": "https://github.com/scireum/sirius-biz/pull/659#discussion_r364707464", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param resultHandler the handle to be invoked for each item in the result\n          \n          \n            \n                 * @param resultHandler the handler to be invoked for each item in the result", "author": "sabieber", "createdAt": "2020-01-09T12:14:50Z", "path": "src/main/java/sirius/biz/web/BasePageHelper.java", "diffHunk": "@@ -349,6 +359,53 @@ public B withPageSize(int pageSize) {\n         return result;\n     }\n \n+    /**\n+     * Calls the given function on all items in the result ignoring {@link #pageSize}, as long as it returns <tt>true</tt>.\n+     * <p>\n+     * While this is not the purpose of this helper, this can be used to easily re-use code that is inteded for page views.\n+     * For example, together with {@link #withParameterProvider(Function)} this can be used to export the same page view in a process,\n+     * using the same query and facet suppliers as the view that is to be exported.\n+     *\n+     * @param resultHandler the handle to be invoked for each item in the result", "originalCommit": "2b83d9be4c57251876dd2b2d3387457b0bb403f3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDcwNzYwMg==", "url": "https://github.com/scireum/sirius-biz/pull/659#discussion_r364707602", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * While this is not the purpose of this helper, this can be used to easily re-use code that is inteded for page views.\n          \n          \n            \n                 * While this is not the purpose of this helper, this can be used to easily re-use code that is intended for page views.", "author": "sabieber", "createdAt": "2020-01-09T12:15:12Z", "path": "src/main/java/sirius/biz/web/BasePageHelper.java", "diffHunk": "@@ -349,6 +359,53 @@ public B withPageSize(int pageSize) {\n         return result;\n     }\n \n+    /**\n+     * Calls the given function on all items in the result ignoring {@link #pageSize}, as long as it returns <tt>true</tt>.\n+     * <p>\n+     * While this is not the purpose of this helper, this can be used to easily re-use code that is inteded for page views.\n+     * For example, together with {@link #withParameterProvider(Function)} this can be used to export the same page view in a process,\n+     * using the same query and facet suppliers as the view that is to be exported.\n+     *\n+     * @param resultHandler the handle to be invoked for each item in the result\n+     */\n+    public void iterateTotalItems(Function<E, Boolean> resultHandler) {\n+        String query = getParameterValue(\"query\").getString();\n+        applyQuery(query);\n+\n+        applyFacets(null);\n+        baseQuery.iterate(resultHandler);\n+    }\n+\n+    /**\n+     * Calls the given consumer on all items in the result ignoring {@link #pageSize}.\n+     * <p>\n+     * While this is not the purpose of this helper, this can be used to easily re-use code that is inteded for page views.", "originalCommit": "2b83d9be4c57251876dd2b2d3387457b0bb403f3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDcwNzY4Nw==", "url": "https://github.com/scireum/sirius-biz/pull/659#discussion_r364707687", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param consumer the handle to be invoked for each item in the result\n          \n          \n            \n                 * @param consumer the handler to be invoked for each item in the result", "author": "sabieber", "createdAt": "2020-01-09T12:15:25Z", "path": "src/main/java/sirius/biz/web/BasePageHelper.java", "diffHunk": "@@ -349,6 +359,53 @@ public B withPageSize(int pageSize) {\n         return result;\n     }\n \n+    /**\n+     * Calls the given function on all items in the result ignoring {@link #pageSize}, as long as it returns <tt>true</tt>.\n+     * <p>\n+     * While this is not the purpose of this helper, this can be used to easily re-use code that is inteded for page views.\n+     * For example, together with {@link #withParameterProvider(Function)} this can be used to export the same page view in a process,\n+     * using the same query and facet suppliers as the view that is to be exported.\n+     *\n+     * @param resultHandler the handle to be invoked for each item in the result\n+     */\n+    public void iterateTotalItems(Function<E, Boolean> resultHandler) {\n+        String query = getParameterValue(\"query\").getString();\n+        applyQuery(query);\n+\n+        applyFacets(null);\n+        baseQuery.iterate(resultHandler);\n+    }\n+\n+    /**\n+     * Calls the given consumer on all items in the result ignoring {@link #pageSize}.\n+     * <p>\n+     * While this is not the purpose of this helper, this can be used to easily re-use code that is inteded for page views.\n+     * For example, together with {@link #withParameterProvider(Function)} this can be used to export the same page view in a process,\n+     * using the same query and facet suppliers as the view that is to be exported.\n+     *\n+     * @param consumer the handle to be invoked for each item in the result", "originalCommit": "2b83d9be4c57251876dd2b2d3387457b0bb403f3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0e360b646be7eacae07c027619d64b6f8308746d", "url": "https://github.com/scireum/sirius-biz/commit/0e360b646be7eacae07c027619d64b6f8308746d", "message": "Fixes javadoc typos\n\nCo-Authored-By: Sascha Bieberstein <sabieber@users.noreply.github.com>", "committedDate": "2020-01-09T12:17:36Z", "type": "commit"}]}