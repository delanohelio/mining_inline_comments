{"pr_number": 18417, "pr_title": "#18407 this fix allows you to save not only file asset on the edit co\u2026", "pr_createdAt": "2020-05-01T03:45:57Z", "pr_url": "https://github.com/dotCMS/core/pull/18417", "timeline": [{"oid": "7a17afe240bfedd223b24e040112837a9a4bd23a", "url": "https://github.com/dotCMS/core/commit/7a17afe240bfedd223b24e040112837a9a4bd23a", "message": "#18407 this fix allows you to save not only file asset on the edit contentlet but also, dotAsset and any contentlet with binary field", "committedDate": "2020-05-01T03:45:12Z", "type": "commit"}, {"oid": "e84cfc02794e577d5fe82766389e0cd66863859d", "url": "https://github.com/dotCMS/core/commit/e84cfc02794e577d5fe82766389e0cd66863859d", "message": "#18407 organize import", "committedDate": "2020-05-01T03:47:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU2OTQ2MQ==", "url": "https://github.com/dotCMS/core/pull/18417#discussion_r418569461", "bodyText": "should this logic get into a API?", "author": "freddyucv", "createdAt": "2020-05-01T14:37:34Z", "path": "dotCMS/src/main/java/com/dotmarketing/portlets/fileassets/ajax/FileAssetAjax.java", "diffHunk": "@@ -56,41 +58,50 @@ public FileAssetAjax() {\n \t}\r\n \r\n \r\n-\tpublic void saveFileText(String contentletInode, String newText, String binField) throws PortalException, SystemException,\r\n-\tDotDataException, DotSecurityException, IOException {\r\n-\t\tWebContext ctx = WebContextFactory.get();\r\n-\t\tHttpServletRequest req = ctx.getHttpServletRequest();\r\n-\t\tUser user = userAPI.getLoggedInUser(req);\r\n-\t\tboolean respectFrontendRoles = userAPI.isLoggedToFrontend(req);\r\n-\t\tContentlet cont  = APILocator.getContentletAPI().find(contentletInode, user, respectFrontendRoles);\r\n-\t\tFileAsset fa = APILocator.getFileAssetAPI().fromContentlet(cont);\r\n+\tpublic void saveFileText(final String contentletInode, final String newText, final String binField)\r\n+\t\t\tthrows PortalException, SystemException, DotDataException, DotSecurityException, IOException {\r\n+\r\n+\t\tfinal WebContext webContext        = WebContextFactory.get();\r\n+\t\tfinal HttpServletRequest request   = webContext.getHttpServletRequest();\r\n+\t\tfinal User user \t\t\t       = userAPI.getLoggedInUser(request);\r\n+\t\tfinal boolean respectFrontendRoles = userAPI.isLoggedToFrontend(request);\r\n+\t\tfinal Contentlet contentlet        = APILocator.getContentletAPI().find(contentletInode, user, respectFrontendRoles);\r\n+\t\tString incomingFileName            = null;\r\n+\t\tString binaryFieldName             = binField;\r\n+\r\n+\t\tif (contentlet.isFileAsset()) {\r\n+\r\n+\t\t\tfinal FileAsset fileAsset = APILocator.getFileAssetAPI().fromContentlet(contentlet);\r\n+\t\t\tincomingFileName = fileAsset.getFileAsset().getName();\r\n+\t\t\tbinaryFieldName  = FileAssetAPI.BINARY_FIELD;\r\n+\t\t} else if (contentlet.isDotAsset()) {\r\n+\r\n+\t\t\tincomingFileName = contentlet.getBinary(DotAssetContentType.ASSET_FIELD_VAR).getName();\r\n+\t\t\tbinaryFieldName  = DotAssetContentType.ASSET_FIELD_VAR;\r\n+\t\t} else {\r\n+\r\n+\t\t\tincomingFileName = contentlet.getBinary(binField).getName();\r\n+\t\t}\r\n \r\n-\t\tjava.io.File tempDir =  new java.io.File(APILocator.getFileAssetAPI().getRealAssetPathTmpBinary() + java.io.File.separator + contentletInode.charAt(0)\r\n-\t\t\t\t\t+ java.io.File.separator + contentletInode.charAt(1) + java.io.File.separator + contentletInode\r\n-\t\t\t\t\t+ java.io.File.separator + APILocator.getFileAssetAPI().BINARY_FIELD);\r\n+\t\tfinal File tempDir =  new File(APILocator.getFileAssetAPI().getRealAssetPathTmpBinary() + File.separator + contentletInode.charAt(0)\r\n+\t\t\t\t+ File.separator + contentletInode.charAt(1) + File.separator + contentletInode\r\n+\t\t\t\t+ File.separator + binaryFieldName);\r\n \r\n-\t\tif(!tempDir.exists())\r\n+\t\tif(!tempDir.exists()) {\r\n \t\t\ttempDir.mkdirs();\r\n+\t\t}\r\n \r\n-\t\tjava.io.File fileData = new java.io.File(tempDir.getAbsoluteFile() + java.io.File.separator + WebKeys.TEMP_FILE_PREFIX + fa.getFileAsset().getName());\r\n+\t\tfinal File fileData = new File(tempDir.getAbsoluteFile() + File.separator + WebKeys.TEMP_FILE_PREFIX + incomingFileName);\r\n \r\n \t\tfileData.deleteOnExit();\r\n-\t\tOutputStream os = null;\r\n-\t\ttry {\r\n-\t\t\tos = Files.newOutputStream(fileData.toPath());\r\n+\r\n+\t\ttry (OutputStream os = Files.newOutputStream(fileData.toPath())) {\r\n+\r\n \t\t\tos.write(newText.getBytes());\r\n \t\t} catch(Exception e) {\r\n-\t\t\tLogger.error(getClass(), \"Error writing to file\", e);\r\n-\t\t}finally {\r\n-\t\t\tif (os != null){\r\n-\t\t\t\tos.close();\r\n-\t\t\t}\r\n \r\n+\t\t\tLogger.error(getClass(), \"Error writing to file\", e);\r", "originalCommit": "e84cfc02794e577d5fe82766389e0cd66863859d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU5ODA2Ng==", "url": "https://github.com/dotCMS/core/pull/18417#discussion_r418598066", "bodyText": "I would probably promote to an endpoint, I might create an issue", "author": "jdotcms", "createdAt": "2020-05-01T15:41:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU2OTQ2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODYwMDIzMQ==", "url": "https://github.com/dotCMS/core/pull/18417#discussion_r418600231", "bodyText": "#18421", "author": "jdotcms", "createdAt": "2020-05-01T15:45:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU2OTQ2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU4MTI3Mg==", "url": "https://github.com/dotCMS/core/pull/18417#discussion_r418581272", "bodyText": "I think we should support all binary fields - even if you just have a generic content that has a binary field with text", "author": "wezell", "createdAt": "2020-05-01T15:04:09Z", "path": "dotCMS/src/main/java/com/dotmarketing/portlets/fileassets/ajax/FileAssetAjax.java", "diffHunk": "@@ -56,41 +58,50 @@ public FileAssetAjax() {\n \t}\r\n \r\n \r\n-\tpublic void saveFileText(String contentletInode, String newText, String binField) throws PortalException, SystemException,\r\n-\tDotDataException, DotSecurityException, IOException {\r\n-\t\tWebContext ctx = WebContextFactory.get();\r\n-\t\tHttpServletRequest req = ctx.getHttpServletRequest();\r\n-\t\tUser user = userAPI.getLoggedInUser(req);\r\n-\t\tboolean respectFrontendRoles = userAPI.isLoggedToFrontend(req);\r\n-\t\tContentlet cont  = APILocator.getContentletAPI().find(contentletInode, user, respectFrontendRoles);\r\n-\t\tFileAsset fa = APILocator.getFileAssetAPI().fromContentlet(cont);\r\n+\tpublic void saveFileText(final String contentletInode, final String newText, final String binField)\r\n+\t\t\tthrows PortalException, SystemException, DotDataException, DotSecurityException, IOException {\r\n+\r\n+\t\tfinal WebContext webContext        = WebContextFactory.get();\r\n+\t\tfinal HttpServletRequest request   = webContext.getHttpServletRequest();\r\n+\t\tfinal User user \t\t\t       = userAPI.getLoggedInUser(request);\r\n+\t\tfinal boolean respectFrontendRoles = userAPI.isLoggedToFrontend(request);\r\n+\t\tfinal Contentlet contentlet        = APILocator.getContentletAPI().find(contentletInode, user, respectFrontendRoles);\r\n+\t\tString incomingFileName            = null;\r\n+\t\tString binaryFieldName             = binField;\r\n+\r\n+\t\tif (contentlet.isFileAsset()) {\r", "originalCommit": "e84cfc02794e577d5fe82766389e0cd66863859d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU5Nzc1Mw==", "url": "https://github.com/dotCMS/core/pull/18417#discussion_r418597753", "bodyText": "last if support this case, I have tested with a contentlet with a binary as a field", "author": "jdotcms", "createdAt": "2020-05-01T15:40:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU4MTI3Mg=="}], "type": "inlineReview"}]}