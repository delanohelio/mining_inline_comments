{"pr_number": 19198, "pr_title": "#19190 containers Done", "pr_createdAt": "2020-08-28T23:40:31Z", "pr_url": "https://github.com/dotCMS/core/pull/19198", "timeline": [{"oid": "53fd78052480f3c4775b1ccc0f34e3b2161316bc", "url": "https://github.com/dotCMS/core/commit/53fd78052480f3c4775b1ccc0f34e3b2161316bc", "message": "#19190 first part", "committedDate": "2020-08-28T23:39:50Z", "type": "commit"}, {"oid": "af7007368ea742c5fc94f3716ac10b6d2410068a", "url": "https://github.com/dotCMS/core/commit/af7007368ea742c5fc94f3716ac10b6d2410068a", "message": "#19190 container first level properties", "committedDate": "2020-08-31T23:19:42Z", "type": "commit"}, {"oid": "98a1133bd0bd4680db580865db891a202774f173", "url": "https://github.com/dotCMS/core/commit/98a1133bd0bd4680db580865db891a202774f173", "message": "#19190 postman tests for first level fields", "committedDate": "2020-09-01T22:07:04Z", "type": "commit"}, {"oid": "4834c4313267dcb184006d0e4eb33fc7ac552083", "url": "https://github.com/dotCMS/core/commit/4834c4313267dcb184006d0e4eb33fc7ac552083", "message": "#19190 containers-rendered done with postman", "committedDate": "2020-09-01T23:34:10Z", "type": "commit"}, {"oid": "4b877c6697ffad332344532a40fb6a0f0dcc612b", "url": "https://github.com/dotCMS/core/commit/4b877c6697ffad332344532a40fb6a0f0dcc612b", "message": "#19190 containers-rendered done with postman", "committedDate": "2020-09-01T23:34:29Z", "type": "commit"}, {"oid": "d35de1b70f06ec1b411313535399452c1193e663", "url": "https://github.com/dotCMS/core/commit/d35de1b70f06ec1b411313535399452c1193e663", "message": "Include both variants of collection names", "committedDate": "2020-09-02T17:16:17Z", "type": "commit"}, {"oid": "45ec60d1df2dc621e5278d23e1d063fd20de1448", "url": "https://github.com/dotCMS/core/commit/45ec60d1df2dc621e5278d23e1d063fd20de1448", "message": "#19190 containerStructure ready", "committedDate": "2020-09-02T21:48:37Z", "type": "commit"}, {"oid": "0d96e9ae0efcc6213e998e50fab61aba1f53b716", "url": "https://github.com/dotCMS/core/commit/0d96e9ae0efcc6213e998e50fab61aba1f53b716", "message": "#19190 include tags in contentlets", "committedDate": "2020-09-02T23:53:14Z", "type": "commit"}, {"oid": "3580e3def6504032fe2e73de9336ba5f8f284801", "url": "https://github.com/dotCMS/core/commit/3580e3def6504032fe2e73de9336ba5f8f284801", "message": "#19190 doOptions for CORS", "committedDate": "2020-09-03T16:00:47Z", "type": "commit"}, {"oid": "9489f27a241f663d3b0b03c0fbe238a07877cdc1", "url": "https://github.com/dotCMS/core/commit/9489f27a241f663d3b0b03c0fbe238a07877cdc1", "message": "Revert \"#19190 doOptions for CORS\"\n\nThis reverts commit 3580e3def6504032fe2e73de9336ba5f8f284801.", "committedDate": "2020-09-03T16:07:12Z", "type": "commit"}, {"oid": "581b066ac6ae485d8af3126b9dec223a89e51de6", "url": "https://github.com/dotCMS/core/commit/581b066ac6ae485d8af3126b9dec223a89e51de6", "message": "#19190 add map field for contentlet", "committedDate": "2020-09-03T23:09:22Z", "type": "commit"}, {"oid": "0ffcc5dce4320d07feceebc69b945b9922a02803", "url": "https://github.com/dotCMS/core/commit/0ffcc5dce4320d07feceebc69b945b9922a02803", "message": "#19190 test cats and tags using map field", "committedDate": "2020-09-04T18:39:03Z", "type": "commit"}, {"oid": "e331cbd3def9ff0fdc66accadd6b4c4397e372f3", "url": "https://github.com/dotCMS/core/commit/e331cbd3def9ff0fdc66accadd6b4c4397e372f3", "message": "#19190 fix ITs", "committedDate": "2020-09-04T21:51:10Z", "type": "commit"}, {"oid": "f07162eb3d600a9d0343c3c0af0c0ed5479d4709", "url": "https://github.com/dotCMS/core/commit/f07162eb3d600a9d0343c3c0af0c0ed5479d4709", "message": "#19190 codacy feedback", "committedDate": "2020-09-04T22:20:46Z", "type": "commit"}, {"oid": "72fa82fd0ca3058f24c664c5df9574e5540c2a77", "url": "https://github.com/dotCMS/core/commit/72fa82fd0ca3058f24c664c5df9574e5540c2a77", "message": "#19190 fix postman tests", "committedDate": "2020-09-04T23:30:23Z", "type": "commit"}, {"oid": "f65297b5c6801897be97d5f8c7c31a00880d377b", "url": "https://github.com/dotCMS/core/commit/f65297b5c6801897be97d5f8c7c31a00880d377b", "message": "#19190 fix integration tests", "committedDate": "2020-09-08T15:28:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAyMzAwMg==", "url": "https://github.com/dotCMS/core/pull/19198#discussion_r485023002", "bodyText": "Codacy found an issue: Avoid unused method parameters such as 'map'.", "author": "dev-dotcms", "createdAt": "2020-09-08T15:47:39Z", "path": "dotCMS/src/main/java/com/dotmarketing/portlets/contentlet/transform/strategy/DefaultTransformStrategy.java", "diffHunk": "@@ -276,6 +278,22 @@ private void addCategories(final Contentlet contentlet, final Map<String, Object\n         }\n     }\n \n+    /**\n+     * add tags to the given contentlet\n+     */\n+    private void addTags(final Contentlet contentlet, final Map<String, Object> map,", "originalCommit": "f65297b5c6801897be97d5f8c7c31a00880d377b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAyMzAxNg==", "url": "https://github.com/dotCMS/core/pull/19198#discussion_r485023016", "bodyText": "Codacy found an issue: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block", "author": "dev-dotcms", "createdAt": "2020-09-08T15:47:40Z", "path": "dotCMS/src/main/java/com/dotcms/graphql/datafetcher/page/RenderedContainersDataFetcher.java", "diffHunk": "@@ -0,0 +1,50 @@\n+package com.dotcms.graphql.datafetcher.page;\n+\n+import com.dotcms.graphql.DotGraphQLContext;\n+import com.dotcms.rendering.velocity.services.PageRenderUtil;\n+import com.dotmarketing.portlets.htmlpageasset.business.render.ContainerRaw;\n+import com.dotmarketing.portlets.htmlpageasset.business.render.ContainerRenderedBuilder;\n+import com.dotmarketing.portlets.htmlpageasset.model.HTMLPageAsset;\n+import com.dotmarketing.portlets.templates.design.bean.TemplateLayout;\n+import com.dotmarketing.util.Logger;\n+import com.dotmarketing.util.PageMode;\n+import com.dotmarketing.util.VelocityUtil;\n+import graphql.schema.DataFetcher;\n+import graphql.schema.DataFetchingEnvironment;\n+import java.util.Map;\n+import java.util.Map.Entry;\n+import java.util.Set;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import org.apache.velocity.context.Context;\n+\n+/**\n+ * This DataFetcher returns the {@link TemplateLayout} associated to the requested {@link HTMLPageAsset}.\n+ */\n+public class RenderedContainersDataFetcher implements DataFetcher<Set<Entry<String, String>>> {\n+    @Override\n+    public Set<Entry<String, String>> get(final DataFetchingEnvironment environment) throws Exception {\n+        try {\n+            final DotGraphQLContext context = environment.getContext();\n+            final ContainerRaw containerRaw = environment.getSource();\n+            final String pageModeAsString = (String) context.getParam(\"pageMode\");\n+\n+            final PageMode mode = PageMode.get(pageModeAsString);\n+            final HttpServletRequest request = context.getHttpServletRequest();\n+            final HttpServletResponse response = context.getHttpServletResponse();\n+\n+            final PageRenderUtil pageRenderUtil = (PageRenderUtil) context.getParam(\"pageRenderUtil\");\n+\n+            final Context velocityContext  = pageRenderUtil\n+                    .addAll(VelocityUtil.getInstance().getContext(request, response));\n+\n+            final Map<String, String> uuidsRendered = ContainerRenderedBuilder.\n+                    render(velocityContext, mode, containerRaw);\n+\n+            return uuidsRendered.entrySet();\n+        } catch (Exception e) {", "originalCommit": "f65297b5c6801897be97d5f8c7c31a00880d377b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAyMzAyNQ==", "url": "https://github.com/dotCMS/core/pull/19198#discussion_r485023025", "bodyText": "Codacy found an issue: Avoid declaring a variable if it is unreferenced before a possible exit point.", "author": "dev-dotcms", "createdAt": "2020-09-08T15:47:41Z", "path": "dotCMS/src/main/java/com/dotcms/graphql/datafetcher/page/ContainersDataFetcher.java", "diffHunk": "@@ -0,0 +1,50 @@\n+package com.dotcms.graphql.datafetcher.page;\n+\n+import com.dotcms.graphql.DotGraphQLContext;\n+import com.dotcms.rendering.velocity.services.PageRenderUtil;\n+import com.dotmarketing.beans.Host;\n+import com.dotmarketing.business.APILocator;\n+import com.dotmarketing.portlets.contentlet.model.Contentlet;\n+import com.dotmarketing.portlets.htmlpageasset.business.render.ContainerRaw;\n+import com.dotmarketing.portlets.htmlpageasset.model.HTMLPageAsset;\n+import com.dotmarketing.portlets.templates.design.bean.TemplateLayout;\n+import com.dotmarketing.util.Logger;\n+import com.dotmarketing.util.PageMode;\n+import com.liferay.portal.model.User;\n+import graphql.schema.DataFetcher;\n+import graphql.schema.DataFetchingEnvironment;\n+import java.util.List;\n+import javax.servlet.http.HttpServletRequest;\n+\n+/**\n+ * This DataFetcher returns the {@link TemplateLayout} associated to the requested {@link HTMLPageAsset}.\n+ */\n+public class ContainersDataFetcher implements DataFetcher<List<ContainerRaw>> {\n+    @Override\n+    public List<ContainerRaw> get(final DataFetchingEnvironment environment) throws Exception {\n+        try {\n+            final DotGraphQLContext context = environment.getContext();\n+            final User user = context.getUser();\n+            final Contentlet page = environment.getSource();\n+            final String pageModeAsString = (String) context.getParam(\"pageMode\");\n+            final String languageId = (String) context.getParam(\"languageId\");\n+\n+            final PageMode mode = PageMode.get(pageModeAsString);\n+            final HttpServletRequest request = context.getHttpServletRequest();", "originalCommit": "f65297b5c6801897be97d5f8c7c31a00880d377b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAyMzA0Ng==", "url": "https://github.com/dotCMS/core/pull/19198#discussion_r485023046", "bodyText": "Codacy found an issue: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block", "author": "dev-dotcms", "createdAt": "2020-09-08T15:47:42Z", "path": "dotCMS/src/main/java/com/dotcms/graphql/datafetcher/page/ContainersDataFetcher.java", "diffHunk": "@@ -0,0 +1,50 @@\n+package com.dotcms.graphql.datafetcher.page;\n+\n+import com.dotcms.graphql.DotGraphQLContext;\n+import com.dotcms.rendering.velocity.services.PageRenderUtil;\n+import com.dotmarketing.beans.Host;\n+import com.dotmarketing.business.APILocator;\n+import com.dotmarketing.portlets.contentlet.model.Contentlet;\n+import com.dotmarketing.portlets.htmlpageasset.business.render.ContainerRaw;\n+import com.dotmarketing.portlets.htmlpageasset.model.HTMLPageAsset;\n+import com.dotmarketing.portlets.templates.design.bean.TemplateLayout;\n+import com.dotmarketing.util.Logger;\n+import com.dotmarketing.util.PageMode;\n+import com.liferay.portal.model.User;\n+import graphql.schema.DataFetcher;\n+import graphql.schema.DataFetchingEnvironment;\n+import java.util.List;\n+import javax.servlet.http.HttpServletRequest;\n+\n+/**\n+ * This DataFetcher returns the {@link TemplateLayout} associated to the requested {@link HTMLPageAsset}.\n+ */\n+public class ContainersDataFetcher implements DataFetcher<List<ContainerRaw>> {\n+    @Override\n+    public List<ContainerRaw> get(final DataFetchingEnvironment environment) throws Exception {\n+        try {\n+            final DotGraphQLContext context = environment.getContext();\n+            final User user = context.getUser();\n+            final Contentlet page = environment.getSource();\n+            final String pageModeAsString = (String) context.getParam(\"pageMode\");\n+            final String languageId = (String) context.getParam(\"languageId\");\n+\n+            final PageMode mode = PageMode.get(pageModeAsString);\n+            final HttpServletRequest request = context.getHttpServletRequest();\n+\n+            final HTMLPageAsset pageAsset = APILocator.getHTMLPageAssetAPI()\n+                    .fromContentlet(page);\n+\n+            final Host site = APILocator.getHostAPI().find(page.getHost(), user, false);\n+            PageRenderUtil pageRenderUtil = new PageRenderUtil(pageAsset, user, mode,\n+                    Long.parseLong(languageId), site);\n+\n+            context.addParam(\"pageRenderUtil\", pageRenderUtil);\n+\n+            return pageRenderUtil.getContainersRaw();\n+        } catch (Exception e) {", "originalCommit": "f65297b5c6801897be97d5f8c7c31a00880d377b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAyMzA1OA==", "url": "https://github.com/dotCMS/core/pull/19198#discussion_r485023058", "bodyText": "Codacy found an issue: Avoid unused method parameters such as 'user'.", "author": "dev-dotcms", "createdAt": "2020-09-08T15:47:43Z", "path": "dotCMS/src/main/java/com/dotmarketing/portlets/contentlet/transform/strategy/DefaultTransformStrategy.java", "diffHunk": "@@ -276,6 +278,22 @@ private void addCategories(final Contentlet contentlet, final Map<String, Object\n         }\n     }\n \n+    /**\n+     * add tags to the given contentlet\n+     */\n+    private void addTags(final Contentlet contentlet, final Map<String, Object> map,\n+            final Set<TransformOptions> options, final User user) {", "originalCommit": "f65297b5c6801897be97d5f8c7c31a00880d377b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAyMzA3NA==", "url": "https://github.com/dotCMS/core/pull/19198#discussion_r485023074", "bodyText": "Codacy found an issue: The String literal \"containers\" appears 5 times in this file; the first occurrence is on line 113", "author": "dev-dotcms", "createdAt": "2020-09-08T15:47:44Z", "path": "dotCMS/src/main/java/com/dotcms/graphql/business/PageAPIGraphQLTypesProvider.java", "diffHunk": "@@ -108,6 +123,8 @@\n \n         pageFields.put(\"layout\", new TypeFetcher(GraphQLTypeReference.typeRef(\"Layout\"),\n                 new LayoutDataFetcher()));\n+        pageFields.put(\"containers\", new TypeFetcher(list(GraphQLTypeReference.typeRef(\"Container\")),", "originalCommit": "f65297b5c6801897be97d5f8c7c31a00880d377b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAyMzA5MA==", "url": "https://github.com/dotCMS/core/pull/19198#discussion_r485023090", "bodyText": "Codacy found an issue: Avoid unused local variables such as 'request'.", "author": "dev-dotcms", "createdAt": "2020-09-08T15:47:45Z", "path": "dotCMS/src/main/java/com/dotcms/graphql/datafetcher/page/ContainersDataFetcher.java", "diffHunk": "@@ -0,0 +1,50 @@\n+package com.dotcms.graphql.datafetcher.page;\n+\n+import com.dotcms.graphql.DotGraphQLContext;\n+import com.dotcms.rendering.velocity.services.PageRenderUtil;\n+import com.dotmarketing.beans.Host;\n+import com.dotmarketing.business.APILocator;\n+import com.dotmarketing.portlets.contentlet.model.Contentlet;\n+import com.dotmarketing.portlets.htmlpageasset.business.render.ContainerRaw;\n+import com.dotmarketing.portlets.htmlpageasset.model.HTMLPageAsset;\n+import com.dotmarketing.portlets.templates.design.bean.TemplateLayout;\n+import com.dotmarketing.util.Logger;\n+import com.dotmarketing.util.PageMode;\n+import com.liferay.portal.model.User;\n+import graphql.schema.DataFetcher;\n+import graphql.schema.DataFetchingEnvironment;\n+import java.util.List;\n+import javax.servlet.http.HttpServletRequest;\n+\n+/**\n+ * This DataFetcher returns the {@link TemplateLayout} associated to the requested {@link HTMLPageAsset}.\n+ */\n+public class ContainersDataFetcher implements DataFetcher<List<ContainerRaw>> {\n+    @Override\n+    public List<ContainerRaw> get(final DataFetchingEnvironment environment) throws Exception {\n+        try {\n+            final DotGraphQLContext context = environment.getContext();\n+            final User user = context.getUser();\n+            final Contentlet page = environment.getSource();\n+            final String pageModeAsString = (String) context.getParam(\"pageMode\");\n+            final String languageId = (String) context.getParam(\"languageId\");\n+\n+            final PageMode mode = PageMode.get(pageModeAsString);\n+            final HttpServletRequest request = context.getHttpServletRequest();", "originalCommit": "f65297b5c6801897be97d5f8c7c31a00880d377b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAyMzEwOQ==", "url": "https://github.com/dotCMS/core/pull/19198#discussion_r485023109", "bodyText": "Codacy found an issue: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block", "author": "dev-dotcms", "createdAt": "2020-09-08T15:47:46Z", "path": "dotCMS/src/main/java/com/dotcms/graphql/datafetcher/ContentMapDataFetcher.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package com.dotcms.graphql.datafetcher;\n+\n+import com.dotmarketing.portlets.contentlet.model.Contentlet;\n+import com.dotmarketing.util.Logger;\n+import graphql.schema.DataFetcher;\n+import graphql.schema.DataFetchingEnvironment;\n+\n+public class ContentMapDataFetcher implements DataFetcher<Object> {\n+    @Override\n+    public Object get(final DataFetchingEnvironment environment) throws Exception {\n+        try {\n+            final Contentlet contentlet = environment.getSource();\n+            final String key = environment.getArgument(\"key\");\n+            return contentlet.get(key);\n+        } catch (Exception e) {", "originalCommit": "f65297b5c6801897be97d5f8c7c31a00880d377b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}