{"pr_number": 18631, "pr_title": "Issue 18530 v2", "pr_createdAt": "2020-06-09T22:01:22Z", "pr_url": "https://github.com/dotCMS/core/pull/18631", "timeline": [{"oid": "e2b9ce7f7b3212121151b0bef5cbf35a29bd25b1", "url": "https://github.com/dotCMS/core/commit/e2b9ce7f7b3212121151b0bef5cbf35a29bd25b1", "message": "#18530 if param is locale use as it is", "committedDate": "2020-06-05T21:54:39Z", "type": "commit"}, {"oid": "907c4bedb9a1aa5e6ed5cb627f3000d2ac9f0f54", "url": "https://github.com/dotCMS/core/commit/907c4bedb9a1aa5e6ed5cb627f3000d2ac9f0f54", "message": "#18530 fix tests", "committedDate": "2020-06-05T22:46:30Z", "type": "commit"}, {"oid": "e961cec770b6ba5ee582063a10a4bc2dda2b074b", "url": "https://github.com/dotCMS/core/commit/e961cec770b6ba5ee582063a10a4bc2dda2b074b", "message": "Merge branch 'master' of github.com:dotCMS/core into issue-18530-v2", "committedDate": "2020-06-09T21:44:48Z", "type": "commit"}, {"oid": "c0500ffc3f06e03c2bbe1a8a791335da7b9400d1", "url": "https://github.com/dotCMS/core/commit/c0500ffc3f06e03c2bbe1a8a791335da7b9400d1", "message": "#18530 change endpoint name, get also lang keys and vars", "committedDate": "2020-06-09T21:45:54Z", "type": "commit"}, {"oid": "365706af43792831ae8748e758be4ed637b393b7", "url": "https://github.com/dotCMS/core/commit/365706af43792831ae8748e758be4ed637b393b7", "message": "#18530 tests", "committedDate": "2020-06-09T21:46:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc0OTcyNA==", "url": "https://github.com/dotCMS/core/pull/18631#discussion_r437749724", "bodyText": "Issue found: Useless parentheses.", "author": "dev-dotcms", "createdAt": "2020-06-09T22:08:03Z", "path": "dotCMS/src/main/java/com/dotcms/rest/api/v2/languages/LanguagesResource.java", "diffHunk": "@@ -207,17 +216,59 @@ public Response getAllMessages (\n             @Context final HttpServletResponse response,\n             @PathParam(\"language\") final String language){\n \n-        final long languageId = \"default\".equalsIgnoreCase(language) ? APILocator.getLanguageAPI().getDefaultLanguage().getId() : LanguageUtil.getLanguageId(language);\n-        final Language language1 = APILocator.getLanguageAPI().getLanguage(languageId);\n-        if(!UtilMethods.isSet(language1)){\n-            final String message = \"Language with Id or Code: \"+ language + \" does not exist\";\n-            Logger.error(this,message);\n-            throw new IllegalArgumentException(message);\n+        final InitDataObject initData = new WebResource.InitBuilder(webResource)\n+                .requiredAnonAccess(AnonymousAccess.READ)\n+                .requestAndResponse(request, response)\n+                .rejectWhenNoUser(false).init();\n+\n+        final User user = initData.getUser();\n+\n+        final Locale locale = \"default\".equalsIgnoreCase(language) ? APILocator.getLanguageAPI().getDefaultLanguage().asLocale() : ConversionUtils.toLocale(language);\n+        final Locale[] locales = LanguageUtil.getAvailableLocales();\n+        for(int i=0;i<locales.length;i++){\n+            final Locale currentLocale = locales[i];\n+            if(currentLocale.getLanguage().equalsIgnoreCase(locale.getLanguage())){\n+                if(UtilMethods.isSet(locale.getCountry())){\n+                    if(currentLocale.getCountry().equalsIgnoreCase(locale.getCountry())){\n+                        break;\n+                    }\n+                }else{\n+                    break;\n+                }\n+\n+            } else if(i == (locales.length-1)){", "originalCommit": "365706af43792831ae8748e758be4ed637b393b7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc0OTc0MQ==", "url": "https://github.com/dotCMS/core/pull/18631#discussion_r437749741", "bodyText": "Issue found: Avoid unused imports such as 'java.util.stream.Stream'", "author": "dev-dotcms", "createdAt": "2020-06-09T22:08:04Z", "path": "dotCMS/src/main/java/com/dotcms/rest/api/v2/languages/LanguagesResource.java", "diffHunk": "@@ -26,13 +30,18 @@\n import com.liferay.portal.language.LanguageUtil;\n import com.liferay.portal.model.User;\n import com.rainerhahnekamp.sneakythrow.Sneaky;\n+import io.vavr.control.Try;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n import java.util.List;\n import java.util.Locale;\n import java.util.Map;\n+import java.util.TreeMap;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;", "originalCommit": "365706af43792831ae8748e758be4ed637b393b7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc0OTc0OQ==", "url": "https://github.com/dotCMS/core/pull/18631#discussion_r437749749", "bodyText": "Issue found: Local variable 'langId' could be declared final", "author": "dev-dotcms", "createdAt": "2020-06-09T22:08:05Z", "path": "dotCMS/src/main/java/com/dotcms/rest/api/v2/languages/LanguagesResource.java", "diffHunk": "@@ -207,17 +216,59 @@ public Response getAllMessages (\n             @Context final HttpServletResponse response,\n             @PathParam(\"language\") final String language){\n \n-        final long languageId = \"default\".equalsIgnoreCase(language) ? APILocator.getLanguageAPI().getDefaultLanguage().getId() : LanguageUtil.getLanguageId(language);\n-        final Language language1 = APILocator.getLanguageAPI().getLanguage(languageId);\n-        if(!UtilMethods.isSet(language1)){\n-            final String message = \"Language with Id or Code: \"+ language + \" does not exist\";\n-            Logger.error(this,message);\n-            throw new IllegalArgumentException(message);\n+        final InitDataObject initData = new WebResource.InitBuilder(webResource)\n+                .requiredAnonAccess(AnonymousAccess.READ)\n+                .requestAndResponse(request, response)\n+                .rejectWhenNoUser(false).init();\n+\n+        final User user = initData.getUser();\n+\n+        final Locale locale = \"default\".equalsIgnoreCase(language) ? APILocator.getLanguageAPI().getDefaultLanguage().asLocale() : ConversionUtils.toLocale(language);\n+        final Locale[] locales = LanguageUtil.getAvailableLocales();\n+        for(int i=0;i<locales.length;i++){\n+            final Locale currentLocale = locales[i];\n+            if(currentLocale.getLanguage().equalsIgnoreCase(locale.getLanguage())){\n+                if(UtilMethods.isSet(locale.getCountry())){\n+                    if(currentLocale.getCountry().equalsIgnoreCase(locale.getCountry())){\n+                        break;\n+                    }\n+                }else{\n+                    break;\n+                }\n+\n+            } else if(i == (locales.length-1)){\n+                final String message = \"Locale: \"+ locale + \" not found in Portal.properties file\";\n+                Logger.error(this,message);\n+                throw new DoesNotExistException(message);\n+            }\n+        }\n+\n+        //Messages in the properties file\n+        final Map mapPropertiesFile = LanguageUtil.getAllMessagesByLocale(locale);\n+\n+        final Map result = new TreeMap(mapPropertiesFile);\n+\n+        final Language language1 = APILocator.getLanguageAPI().getLanguage(locale.getLanguage(),locale.getCountry());\n+        if(UtilMethods.isSet(language1)) {\n+            //Language Keys\n+            final Map mapLanguageKeys = APILocator.getLanguageAPI()\n+                    .getLanguageKeys(locale.getLanguage()).stream().collect(\n+                            Collectors.toMap(LanguageKey::getKey, LanguageKey::getValue));\n+\n+            result.putAll(mapLanguageKeys);\n+\n+            //Language Variable\n+            long langId = language1.getId();", "originalCommit": "365706af43792831ae8748e758be4ed637b393b7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI3NjUzMg==", "url": "https://github.com/dotCMS/core/pull/18631#discussion_r438276532", "bodyText": "yeah and rename to languageId", "author": "jdotcms", "createdAt": "2020-06-10T17:01:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc0OTc0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc0OTc1Nw==", "url": "https://github.com/dotCMS/core/pull/18631#discussion_r437749757", "bodyText": "Issue found: Avoid declaring a variable if it is unreferenced before a possible exit point.", "author": "dev-dotcms", "createdAt": "2020-06-09T22:08:06Z", "path": "dotCMS/src/main/java/com/dotcms/rest/api/v2/languages/LanguagesResource.java", "diffHunk": "@@ -207,17 +216,59 @@ public Response getAllMessages (\n             @Context final HttpServletResponse response,\n             @PathParam(\"language\") final String language){\n \n-        final long languageId = \"default\".equalsIgnoreCase(language) ? APILocator.getLanguageAPI().getDefaultLanguage().getId() : LanguageUtil.getLanguageId(language);\n-        final Language language1 = APILocator.getLanguageAPI().getLanguage(languageId);\n-        if(!UtilMethods.isSet(language1)){\n-            final String message = \"Language with Id or Code: \"+ language + \" does not exist\";\n-            Logger.error(this,message);\n-            throw new IllegalArgumentException(message);\n+        final InitDataObject initData = new WebResource.InitBuilder(webResource)\n+                .requiredAnonAccess(AnonymousAccess.READ)\n+                .requestAndResponse(request, response)\n+                .rejectWhenNoUser(false).init();\n+\n+        final User user = initData.getUser();", "originalCommit": "365706af43792831ae8748e758be4ed637b393b7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI3NjQxMg==", "url": "https://github.com/dotCMS/core/pull/18631#discussion_r438276412", "bodyText": "rename to something else such as localeLanguage or languageResolved", "author": "jdotcms", "createdAt": "2020-06-10T17:01:27Z", "path": "dotCMS/src/main/java/com/dotcms/rest/api/v2/languages/LanguagesResource.java", "diffHunk": "@@ -207,17 +216,59 @@ public Response getAllMessages (\n             @Context final HttpServletResponse response,\n             @PathParam(\"language\") final String language){\n \n-        final long languageId = \"default\".equalsIgnoreCase(language) ? APILocator.getLanguageAPI().getDefaultLanguage().getId() : LanguageUtil.getLanguageId(language);\n-        final Language language1 = APILocator.getLanguageAPI().getLanguage(languageId);\n-        if(!UtilMethods.isSet(language1)){\n-            final String message = \"Language with Id or Code: \"+ language + \" does not exist\";\n-            Logger.error(this,message);\n-            throw new IllegalArgumentException(message);\n+        final InitDataObject initData = new WebResource.InitBuilder(webResource)\n+                .requiredAnonAccess(AnonymousAccess.READ)\n+                .requestAndResponse(request, response)\n+                .rejectWhenNoUser(false).init();\n+\n+        final User user = initData.getUser();\n+\n+        final Locale locale = \"default\".equalsIgnoreCase(language) ? APILocator.getLanguageAPI().getDefaultLanguage().asLocale() : ConversionUtils.toLocale(language);\n+        final Locale[] locales = LanguageUtil.getAvailableLocales();\n+        for(int i=0;i<locales.length;i++){\n+            final Locale currentLocale = locales[i];\n+            if(currentLocale.getLanguage().equalsIgnoreCase(locale.getLanguage())){\n+                if(UtilMethods.isSet(locale.getCountry())){\n+                    if(currentLocale.getCountry().equalsIgnoreCase(locale.getCountry())){\n+                        break;\n+                    }\n+                }else{\n+                    break;\n+                }\n+\n+            } else if(i == (locales.length-1)){\n+                final String message = \"Locale: \"+ locale + \" not found in Portal.properties file\";\n+                Logger.error(this,message);\n+                throw new DoesNotExistException(message);\n+            }\n+        }\n+\n+        //Messages in the properties file\n+        final Map mapPropertiesFile = LanguageUtil.getAllMessagesByLocale(locale);\n+\n+        final Map result = new TreeMap(mapPropertiesFile);\n+\n+        final Language language1 = APILocator.getLanguageAPI().getLanguage(locale.getLanguage(),locale.getCountry());", "originalCommit": "365706af43792831ae8748e758be4ed637b393b7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}