{"pr_number": 19641, "pr_title": "(#19376): Adding method to add field variables when provided", "pr_createdAt": "2020-12-02T00:32:33Z", "pr_url": "https://github.com/dotCMS/core/pull/19641", "timeline": [{"oid": "97bb6375a414586697ea93da98477b96f6bfd79c", "url": "https://github.com/dotCMS/core/commit/97bb6375a414586697ea93da98477b96f6bfd79c", "message": "Moving ContentType Resource collection file and adding tests to it", "committedDate": "2020-12-03T21:13:46Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc0Nzg0OA==", "url": "https://github.com/dotCMS/core/pull/19641#discussion_r543747848", "bodyText": "is it worth to log the exception here?", "author": "nollymar", "createdAt": "2020-12-15T22:56:43Z", "path": "dotCMS/src/main/java/com/dotcms/contenttype/business/ContentTypeFactoryImpl.java", "diffHunk": "@@ -395,31 +397,67 @@ private ContentType dbSaveUpdate(final ContentType saveType) throws DotDataExcep\n     \tretType = new ImplClassContentTypeTransformer(retType).from();\n     }\n \n-    // set up default fields\n-    if (oldContentType == null) {\n-    \tList<Field> fields = new ArrayList<Field>(saveType.fields());\n-\n-        for (Field ff : retType.requiredFields()) {\n-          Optional<Field> optional = fields.stream().filter(x -> ff.variable().equalsIgnoreCase(x.variable())).findFirst();\n-          if (!optional.isPresent()) {\n-            fields.add(ff);\n-          }\n+    final List<Field> fields = new ArrayList<>(saveType.fields());\n+    for (final Field requiredField : retType.requiredFields()) {\n+        Optional<Field> foundField = fields\n+                .stream()\n+                .filter(x -> requiredField.variable().equalsIgnoreCase(x.variable()))\n+                .findFirst();\n+        if (!foundField.isPresent()) {\n+            fields.add(requiredField);\n         }\n+    }\n \n-        FieldAPI fapi = APILocator.getContentTypeFieldAPI();\n-        for (Field f : fields) {\n-          f = FieldBuilder.builder(f).contentTypeId(retType.id()).build();\n-          try {\n-            fapi.save(f, APILocator.systemUser());\n-          } catch (DotSecurityException e) {\n-            throw new DotStateException(e);\n-          }\n+    final FieldAPI fapi = APILocator.getContentTypeFieldAPI();\n+    // set up default fields\n+    for (Field field : fields) {\n+        final List<FieldVariable> fieldVariables = field.fieldVariables();\n+\n+        if (oldContentType == null) {\n+            field = FieldBuilder.builder(field).contentTypeId(retType.id()).build();\n+            try {\n+                field = fapi.save(field, APILocator.systemUser());\n+            } catch (DotSecurityException e) {\n+                throw new DotStateException(e);", "originalCommit": "97bb6375a414586697ea93da98477b96f6bfd79c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDgwNjk2Mg==", "url": "https://github.com/dotCMS/core/pull/19641#discussion_r544806962", "bodyText": "Exception logged.", "author": "victoralfaro-dotcms", "createdAt": "2020-12-17T04:39:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc0Nzg0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc0ODg3NA==", "url": "https://github.com/dotCMS/core/pull/19641#discussion_r543748874", "bodyText": "I would add some ITs to this logic, it can be at factory or api level", "author": "nollymar", "createdAt": "2020-12-15T22:58:51Z", "path": "dotCMS/src/main/java/com/dotcms/contenttype/business/ContentTypeFactoryImpl.java", "diffHunk": "@@ -323,10 +325,9 @@ private ContentType dbByVar(String var) throws DotDataException {\n   }\n \n   private ContentType dbSaveUpdate(final ContentType saveType) throws DotDataException {\n-\n-\n-    ContentTypeBuilder builder =\n-        ContentTypeBuilder.builder(saveType).modDate(DateUtils.round(new Date(), Calendar.SECOND));\n+    final ContentTypeBuilder builder = ContentTypeBuilder", "originalCommit": "97bb6375a414586697ea93da98477b96f6bfd79c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDUxNDk0Nw==", "url": "https://github.com/dotCMS/core/pull/19641#discussion_r544514947", "bodyText": "@nollymar This is already tested in the postman ContentTypeResourceTests.json test.", "author": "victoralfaro-dotcms", "createdAt": "2020-12-16T18:10:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc0ODg3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYzMTMzMQ==", "url": "https://github.com/dotCMS/core/pull/19641#discussion_r544631331", "bodyText": "It is ok to have the curl test, but they aren't meant to replace integration tests, especially when we have heavy logic in the API or Factory class", "author": "nollymar", "createdAt": "2020-12-16T21:21:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc0ODg3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDgwNjg4NQ==", "url": "https://github.com/dotCMS/core/pull/19641#discussion_r544806885", "bodyText": "IT created.", "author": "victoralfaro-dotcms", "createdAt": "2020-12-17T04:39:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc0ODg3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDM2MzkyMw==", "url": "https://github.com/dotCMS/core/pull/19641#discussion_r544363923", "bodyText": "It is worth a test over here", "author": "erickgonzalez", "createdAt": "2020-12-16T14:55:10Z", "path": "dotCMS/src/main/java/com/dotcms/contenttype/business/FieldAPIImpl.java", "diffHunk": "@@ -639,6 +638,18 @@ public void delete(final Field field, final User user) throws DotDataException,\n \n   }\n \n+    /**\n+     * Given a field load and return its variables.\n+     *\n+     * @param field field variables belong to\n+     * @return list of variables\n+     * @throws DotDataException when SQL error happens\n+     */\n+    @Override\n+    public List<FieldVariable> loadVariables(final Field field) throws DotDataException {", "originalCommit": "97bb6375a414586697ea93da98477b96f6bfd79c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDgwNzEyOQ==", "url": "https://github.com/dotCMS/core/pull/19641#discussion_r544807129", "bodyText": "Unit test added.", "author": "victoralfaro-dotcms", "createdAt": "2020-12-17T04:40:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDM2MzkyMw=="}], "type": "inlineReview"}, {"oid": "d4cf7ab65f2197fb48fc2be0876a4c4d9c1662a2", "url": "https://github.com/dotCMS/core/commit/d4cf7ab65f2197fb48fc2be0876a4c4d9c1662a2", "message": "Applying feedback", "committedDate": "2020-12-17T04:38:49Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTExMzYyMw==", "url": "https://github.com/dotCMS/core/pull/19641#discussion_r545113623", "bodyText": "Doc Test\n/**\n* Method to test: include this in case the method to test does not belong to the class this test-class is testing \n* Given Scenario: Scenario under test\n* ExpectedResult: Expected result that the assertion is checking against\n*\n*/", "author": "erickgonzalez", "createdAt": "2020-12-17T14:04:09Z", "path": "dotCMS/src/integration-test/java/com/dotcms/contenttype/test/ContentTypeFactoryImplTest.java", "diffHunk": "@@ -189,6 +196,31 @@ public void testAddingContentTypes() throws Exception {\n \t\tassertThat(\"contenttypes are added\", count == count2 - runs);\n \t}\n \n+\t@Test", "originalCommit": "d4cf7ab65f2197fb48fc2be0876a4c4d9c1662a2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTM3OTI0MQ==", "url": "https://github.com/dotCMS/core/pull/19641#discussion_r545379241", "bodyText": "Added.", "author": "victoralfaro-dotcms", "createdAt": "2020-12-17T20:21:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTExMzYyMw=="}], "type": "inlineReview"}, {"oid": "34e836f34f71dc0f62599d74e75f24d9f8c041a1", "url": "https://github.com/dotCMS/core/commit/34e836f34f71dc0f62599d74e75f24d9f8c041a1", "message": "Adding IT description", "committedDate": "2021-01-12T17:37:17Z", "type": "forcePushed"}, {"oid": "e0a0dac0757b0a413f1a424700a0ce896d41c67f", "url": "https://github.com/dotCMS/core/commit/e0a0dac0757b0a413f1a424700a0ce896d41c67f", "message": "Adding IT description", "committedDate": "2021-01-13T20:06:34Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4Mjk2MzEzOQ==", "url": "https://github.com/dotCMS/core/pull/19641#discussion_r582963139", "bodyText": "I am wondering if this code can not be move to the ContentTypeAPI after dbSaveUpdate, it woud be desire to avoid API call into a Factory objects.\nIf there is not possible, would be ok", "author": "jdotcms", "createdAt": "2021-02-25T16:09:45Z", "path": "dotCMS/src/main/java/com/dotcms/contenttype/business/ContentTypeFactoryImpl.java", "diffHunk": "@@ -397,31 +398,68 @@ private ContentType dbSaveUpdate(final ContentType saveType) throws DotDataExcep\n     \tretType = new ImplClassContentTypeTransformer(retType).from();\n     }\n \n-    // set up default fields\n-    if (oldContentType == null) {\n-    \tList<Field> fields = new ArrayList<Field>(saveType.fields());\n-\n-        for (Field ff : retType.requiredFields()) {\n-          Optional<Field> optional = fields.stream().filter(x -> ff.variable().equalsIgnoreCase(x.variable())).findFirst();\n-          if (!optional.isPresent()) {\n-            fields.add(ff);\n-          }\n+    final List<Field> fields = new ArrayList<>(saveType.fields());\n+    for (final Field requiredField : retType.requiredFields()) {\n+        Optional<Field> foundField = fields\n+                .stream()\n+                .filter(x -> requiredField.variable().equalsIgnoreCase(x.variable()))\n+                .findFirst();\n+        if (!foundField.isPresent()) {\n+            fields.add(requiredField);\n         }\n+    }\n \n-        FieldAPI fapi = APILocator.getContentTypeFieldAPI();\n-        for (Field f : fields) {\n-          f = FieldBuilder.builder(f).contentTypeId(retType.id()).build();\n-          try {\n-            fapi.save(f, APILocator.systemUser());\n-          } catch (DotSecurityException e) {\n-            throw new DotStateException(e);\n-          }\n+    final FieldAPI fapi = APILocator.getContentTypeFieldAPI();", "originalCommit": "e0a0dac0757b0a413f1a424700a0ce896d41c67f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzkyOTk0Nw==", "url": "https://github.com/dotCMS/core/pull/19641#discussion_r583929947", "bodyText": "@jdotcms that call to FieldAPI was already there. Probably I formatted the code and that's why it looks like I added it.\nThe main change I've introduced is the saveFieldVariables() method.", "author": "victoralfaro-dotcms", "createdAt": "2021-02-26T21:31:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4Mjk2MzEzOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4Mjk2NDQwMg==", "url": "https://github.com/dotCMS/core/pull/19641#discussion_r582964402", "bodyText": "add CloseDbIfOpened please", "author": "jdotcms", "createdAt": "2021-02-25T16:11:19Z", "path": "dotCMS/src/main/java/com/dotcms/contenttype/business/FieldAPIImpl.java", "diffHunk": "@@ -639,6 +641,18 @@ public void delete(final Field field, final User user) throws DotDataException,\n \n   }\n \n+    /**\n+     * Given a field load and return its variables.\n+     *\n+     * @param field field variables belong to\n+     * @return list of variables\n+     * @throws DotDataException when SQL error happens\n+     */\n+    @Override\n+    public List<FieldVariable> loadVariables(final Field field) throws DotDataException {", "originalCommit": "e0a0dac0757b0a413f1a424700a0ce896d41c67f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzkzNDYyNQ==", "url": "https://github.com/dotCMS/core/pull/19641#discussion_r583934625", "bodyText": "Done.", "author": "victoralfaro-dotcms", "createdAt": "2021-02-26T21:42:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4Mjk2NDQwMg=="}], "type": "inlineReview"}, {"oid": "651b0566ea881155bbd599621db825ad714b60ba", "url": "https://github.com/dotCMS/core/commit/651b0566ea881155bbd599621db825ad714b60ba", "message": "(#19376: Adding method to add field variables when provided)", "committedDate": "2021-02-26T18:48:57Z", "type": "commit"}, {"oid": "bb58d0bd1fed26ca131b278ba28eeeba0810e6d9", "url": "https://github.com/dotCMS/core/commit/bb58d0bd1fed26ca131b278ba28eeeba0810e6d9", "message": "Restructuring call to add field variables", "committedDate": "2021-02-26T18:48:58Z", "type": "commit"}, {"oid": "30dc07b5d7716c6ca22ffae4ca334ec8f5983322", "url": "https://github.com/dotCMS/core/commit/30dc07b5d7716c6ca22ffae4ca334ec8f5983322", "message": "Moving ContentType Resource collection file and adding tests to it", "committedDate": "2021-02-26T18:48:58Z", "type": "commit"}, {"oid": "a10e2a1bc834a57b383579210ea619a57f7c3e9b", "url": "https://github.com/dotCMS/core/commit/a10e2a1bc834a57b383579210ea619a57f7c3e9b", "message": "Applying feedback", "committedDate": "2021-02-26T18:48:58Z", "type": "commit"}, {"oid": "0e4c656d0946315769c553ce3fc08a849db56386", "url": "https://github.com/dotCMS/core/commit/0e4c656d0946315769c553ce3fc08a849db56386", "message": "Adding IT description", "committedDate": "2021-02-26T18:48:58Z", "type": "commit"}, {"oid": "01d6aee993fc8a0c4fcd2f4e0ac6deb323823dab", "url": "https://github.com/dotCMS/core/commit/01d6aee993fc8a0c4fcd2f4e0ac6deb323823dab", "message": "Applying feedback", "committedDate": "2021-02-26T21:33:06Z", "type": "forcePushed"}, {"oid": "98a1dcde50847c06d0f539fcef7ccb121d309351", "url": "https://github.com/dotCMS/core/commit/98a1dcde50847c06d0f539fcef7ccb121d309351", "message": "Applying feedback", "committedDate": "2021-03-01T17:47:59Z", "type": "commit"}, {"oid": "98a1dcde50847c06d0f539fcef7ccb121d309351", "url": "https://github.com/dotCMS/core/commit/98a1dcde50847c06d0f539fcef7ccb121d309351", "message": "Applying feedback", "committedDate": "2021-03-01T17:47:59Z", "type": "forcePushed"}, {"oid": "a619c363ac84abac9181f7d946d6f50146caef03", "url": "https://github.com/dotCMS/core/commit/a619c363ac84abac9181f7d946d6f50146caef03", "message": "Fix of postman test", "committedDate": "2021-03-02T17:35:54Z", "type": "forcePushed"}, {"oid": "29ae11f6a9b5810e14f2bb233f90e4abd5031990", "url": "https://github.com/dotCMS/core/commit/29ae11f6a9b5810e14f2bb233f90e4abd5031990", "message": "Fix of postman test", "committedDate": "2021-03-02T20:26:38Z", "type": "commit"}, {"oid": "29ae11f6a9b5810e14f2bb233f90e4abd5031990", "url": "https://github.com/dotCMS/core/commit/29ae11f6a9b5810e14f2bb233f90e4abd5031990", "message": "Fix of postman test", "committedDate": "2021-03-02T20:26:38Z", "type": "forcePushed"}, {"oid": "97088b40a0074d9c5cd25f3ebb7fc0c6652dab5a", "url": "https://github.com/dotCMS/core/commit/97088b40a0074d9c5cd25f3ebb7fc0c6652dab5a", "message": "Fix of IT", "committedDate": "2021-03-03T03:56:22Z", "type": "commit"}]}