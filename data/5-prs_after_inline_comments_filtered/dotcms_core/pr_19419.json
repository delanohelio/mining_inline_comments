{"pr_number": 19419, "pr_title": "Release 5.3.9", "pr_createdAt": "2020-10-08T21:09:20Z", "pr_url": "https://github.com/dotCMS/core/pull/19419", "timeline": [{"oid": "4ab0c716ea94fd31a5e580042079488cb3e3f5b3", "url": "https://github.com/dotCMS/core/commit/4ab0c716ea94fd31a5e580042079488cb3e3f5b3", "message": "Update dotcmsReleaseVersion and coreWebReleasion version", "committedDate": "2020-09-22T17:58:49Z", "type": "commit"}, {"oid": "093c19127405bdc927bc05834a66c27ee213deaf", "url": "https://github.com/dotCMS/core/commit/093c19127405bdc927bc05834a66c27ee213deaf", "message": "update release version", "committedDate": "2020-09-22T19:06:37Z", "type": "commit"}, {"oid": "b65bf9585030ead35ac59992bfcb2622476ba916", "url": "https://github.com/dotCMS/core/commit/b65bf9585030ead35ac59992bfcb2622476ba916", "message": "update release version", "committedDate": "2020-09-22T19:13:45Z", "type": "commit"}, {"oid": "698ec87cdde251ca0fe1cebd571219487fd6b350", "url": "https://github.com/dotCMS/core/commit/698ec87cdde251ca0fe1cebd571219487fd6b350", "message": "update release version", "committedDate": "2020-09-22T19:13:59Z", "type": "commit"}, {"oid": "043e273b8391d4b1929896ab176205d8338ecfaf", "url": "https://github.com/dotCMS/core/commit/043e273b8391d4b1929896ab176205d8338ecfaf", "message": "dotCMS/core#18990 Key/Value field back as string in the page API", "committedDate": "2020-09-22T22:53:40Z", "type": "commit"}, {"oid": "0d9fab8f0285d667d5822b918bcc4a818792b501", "url": "https://github.com/dotCMS/core/commit/0d9fab8f0285d667d5822b918bcc4a818792b501", "message": "dotCMS/core#19267 Limited User can not edit Categories", "committedDate": "2020-09-23T16:03:48Z", "type": "commit"}, {"oid": "2691ee86dde23e2a4fbe4e8f07a71c53756e7b74", "url": "https://github.com/dotCMS/core/commit/2691ee86dde23e2a4fbe4e8f07a71c53756e7b74", "message": "dotCMS/core#19304 Edit Mode: Adding Content on Page missing pagination", "committedDate": "2020-09-24T15:11:51Z", "type": "commit"}, {"oid": "861d122b71316f953d48a7d390577b3756a98611", "url": "https://github.com/dotCMS/core/commit/861d122b71316f953d48a7d390577b3756a98611", "message": "dotCMS/core#19181 UPLOAD NEW FILE button does not work in Image/File fields (#19324)", "committedDate": "2020-09-24T16:54:17Z", "type": "commit"}, {"oid": "f20c423a3f3b18ad594da1aa092b8f298497c60d", "url": "https://github.com/dotCMS/core/commit/f20c423a3f3b18ad594da1aa092b8f298497c60d", "message": "dotCMS/core#19300 Starter export for personalized pages exports them all", "committedDate": "2020-09-24T20:29:59Z", "type": "commit"}, {"oid": "8430ea47fac7c0e9b444dee4b63663b5c847969b", "url": "https://github.com/dotCMS/core/commit/8430ea47fac7c0e9b444dee4b63663b5c847969b", "message": "dotCMS/core#19310 Handle Runtime Exception on Jersey", "committedDate": "2020-09-24T20:30:36Z", "type": "commit"}, {"oid": "c94caeae40776d5f331e82f0dbc5f307879955ad", "url": "https://github.com/dotCMS/core/commit/c94caeae40776d5f331e82f0dbc5f307879955ad", "message": "Fixing oracle test (#19336)", "committedDate": "2020-09-25T15:53:05Z", "type": "commit"}, {"oid": "8ea0dcb2878d81862ab3bdd084d0a20a65496064", "url": "https://github.com/dotCMS/core/commit/8ea0dcb2878d81862ab3bdd084d0a20a65496064", "message": "dotCMS/core#8538 | 19267 Limited User cannot add (edit) categories\n\n* #8538 #19267 set parents when editing\r\n\r\n* #8538 #19267 fix permissions when add/edit category\r\n\r\n* #8538 #19267 doc\r\n\r\n* #8538 #19267 tests\r\n\r\n* #8538 #19267 feedback", "committedDate": "2020-09-25T17:03:40Z", "type": "commit"}, {"oid": "1ffeb09dc5508d0d546aef4704a21462faa1cd10", "url": "https://github.com/dotCMS/core/commit/1ffeb09dc5508d0d546aef4704a21462faa1cd10", "message": "#19289 new starter (#19340)", "committedDate": "2020-09-28T15:45:13Z", "type": "commit"}, {"oid": "0e5aaf72c2d1d0d03f1eadbba9edf294eca3cc85", "url": "https://github.com/dotCMS/core/commit/0e5aaf72c2d1d0d03f1eadbba9edf294eca3cc85", "message": "#19314 upgrade task to alter table job detail tables on mysql to use \u2026 (#19325)\n\n* #19314 upgrade task to alter table job detail tables on mysql to use wider job_data col\r\n\r\n* #19314 changes job_data fields from  blob  to longblob for mySQL", "committedDate": "2020-09-29T14:52:37Z", "type": "commit"}, {"oid": "5d968ef829ac9259bb4a9335e002a1edea9cbba1", "url": "https://github.com/dotCMS/core/commit/5d968ef829ac9259bb4a9335e002a1edea9cbba1", "message": "#19302 restore secret key store on password changed  prevents exception from breaking apps (#19328)", "committedDate": "2020-09-29T15:07:10Z", "type": "commit"}, {"oid": "f99c727c9b12652b13816b19ae832c62d017c28c", "url": "https://github.com/dotCMS/core/commit/f99c727c9b12652b13816b19ae832c62d017c28c", "message": "#19278 fixing a graphql unit test (#19330)\n\n* #19278 fixing a graphql unit test\r\n\r\n* #19278 making some validations to avoid NPE and other errors", "committedDate": "2020-09-29T15:42:11Z", "type": "commit"}, {"oid": "24bc503a4fdcc876879f336f8d7ad2f91a39ffb9", "url": "https://github.com/dotCMS/core/commit/24bc503a4fdcc876879f336f8d7ad2f91a39ffb9", "message": "dotCMS/core#19096 Template Rest API CRUD\n\n* #19096 now can not delete a template if it is not first archive\r\n\r\n* #19096 just changing the message\r\n\r\n* #19096 adding more curl test\r\n\r\n* #19096 adding more curl test\r\n\r\n* #19096 adding more curl test\r\n\r\n* #19096 review feedback", "committedDate": "2020-09-29T19:30:19Z", "type": "commit"}, {"oid": "6ba0b7b8bfb4a4822aced53676103ebae537fde7", "url": "https://github.com/dotCMS/core/commit/6ba0b7b8bfb4a4822aced53676103ebae537fde7", "message": "dotCMS/core#19355 What's changed feature is not working", "committedDate": "2020-09-30T15:43:55Z", "type": "commit"}, {"oid": "218a3c22a9264f7da6a320fc3ca5243d2117476c", "url": "https://github.com/dotCMS/core/commit/218a3c22a9264f7da6a320fc3ca5243d2117476c", "message": "dotCMS/core#8538 change permission level to publish when top categories", "committedDate": "2020-09-30T15:51:49Z", "type": "commit"}, {"oid": "c215ae9af794b8b8e0e48f321a3d4878fd5812da", "url": "https://github.com/dotCMS/core/commit/c215ae9af794b8b8e0e48f321a3d4878fd5812da", "message": "Revert \"#19278 fixing a graphql unit test (#19330)\" (#19383)\n\nThis reverts commit f99c727c9b12652b13816b19ae832c62d017c28c.", "committedDate": "2020-10-05T18:38:47Z", "type": "commit"}, {"oid": "8fb1e1917b48b667fd14cb828dd1ee15bf717d99", "url": "https://github.com/dotCMS/core/commit/8fb1e1917b48b667fd14cb828dd1ee15bf717d99", "message": "Fixing oracle test (#19388)", "committedDate": "2020-10-06T14:34:33Z", "type": "commit"}, {"oid": "adc504e66d10b345b8213ae6422ec3f285ba0371", "url": "https://github.com/dotCMS/core/commit/adc504e66d10b345b8213ae6422ec3f285ba0371", "message": "#18607 Fixing some containers bug (#19387)\n\n* #18607 Fixing some containers bug\r\n\r\n* Fixing test\r\n\r\n* removing NotNull", "committedDate": "2020-10-06T17:31:50Z", "type": "commit"}, {"oid": "b52c5ec94e17a28db7e38933e28ef24ae5589597", "url": "https://github.com/dotCMS/core/commit/b52c5ec94e17a28db7e38933e28ef24ae5589597", "message": "Fixing oracle test (#19392)", "committedDate": "2020-10-06T22:29:45Z", "type": "commit"}, {"oid": "7fdf4fe6a8983cfdd2398a1b363baeba853d5135", "url": "https://github.com/dotCMS/core/commit/7fdf4fe6a8983cfdd2398a1b363baeba853d5135", "message": "Fixing containers bug (#19393)", "committedDate": "2020-10-06T22:40:18Z", "type": "commit"}, {"oid": "a60bbee65aa45150bf2c1faf5090f98bbc1334e0", "url": "https://github.com/dotCMS/core/commit/a60bbee65aa45150bf2c1faf5090f98bbc1334e0", "message": "Fixing oracle integration test (#19408)", "committedDate": "2020-10-07T16:54:32Z", "type": "commit"}, {"oid": "9aa88913763e8de5d7f33bd5c95174bed870c56d", "url": "https://github.com/dotCMS/core/commit/9aa88913763e8de5d7f33bd5c95174bed870c56d", "message": "dotCMS/core#19385 #18990 refactoring a simpler way to do the key value for the page re\u2026\n\n* #18990 refactoring a simplier way to do the key value for the page render\r\n\r\n* #18990 adding a fix", "committedDate": "2020-10-07T20:42:01Z", "type": "commit"}, {"oid": "c7ae88cdde0f8aefd96c6e305755431baa3245d9", "url": "https://github.com/dotCMS/core/commit/c7ae88cdde0f8aefd96c6e305755431baa3245d9", "message": "Merge branch 'master' into release-5.3.9", "committedDate": "2020-10-08T21:15:06Z", "type": "commit"}, {"oid": "3b2b88f587976e388986b41c5b07155ed16405db", "url": "https://github.com/dotCMS/core/commit/3b2b88f587976e388986b41c5b07155ed16405db", "message": "rename UT", "committedDate": "2020-10-08T21:23:39Z", "type": "commit"}, {"oid": "4a355b7ddf0bb95f7d7c5f5c3c5e33c951c866e2", "url": "https://github.com/dotCMS/core/commit/4a355b7ddf0bb95f7d7c5f5c3c5e33c951c866e2", "message": "revert values", "committedDate": "2020-10-08T21:47:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAzNDY2Mw==", "url": "https://github.com/dotCMS/core/pull/19419#discussion_r502034663", "bodyText": "Codacy found an issue: Avoid unused imports such as 'com.dotmarketing.business.DotStateException'", "author": "dev-dotcms", "createdAt": "2020-10-08T21:55:22Z", "path": "dotCMS/src/main/java/com/dotcms/rest/api/v1/template/TemplateResource.java", "diffHunk": "@@ -7,13 +7,15 @@\n import com.dotcms.rest.ResponseEntityView;\n import com.dotcms.rest.WebResource;\n import com.dotcms.rest.annotation.NoCache;\n+import com.dotcms.rest.exception.ValidationException;\n import com.dotcms.util.CollectionsUtils;\n import com.dotcms.util.PaginationUtil;\n import com.dotcms.util.pagination.ContainerPaginator;\n import com.dotcms.util.pagination.OrderDirection;\n import com.dotcms.util.pagination.TemplatePaginator;\n import com.dotmarketing.beans.Host;\n import com.dotmarketing.business.APILocator;\n+import com.dotmarketing.business.DotStateException;", "originalCommit": "4a355b7ddf0bb95f7d7c5f5c3c5e33c951c866e2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAzNDY2OA==", "url": "https://github.com/dotCMS/core/pull/19419#discussion_r502034668", "bodyText": "Codacy found an issue: Avoid unused imports such as 'com.dotmarketing.portlets.contentlet.transform.strategy.KeyValueViewStrategy'", "author": "dev-dotcms", "createdAt": "2020-10-08T21:55:23Z", "path": "dotCMS/src/main/java/com/dotmarketing/portlets/htmlpageasset/business/render/page/PageViewSerializer.java", "diffHunk": "@@ -1,9 +1,15 @@\n package com.dotmarketing.portlets.htmlpageasset.business.render.page;\n \n+import com.dotcms.contenttype.model.field.Field;\n+import com.dotcms.contenttype.model.field.KeyValueField;\n+import com.dotcms.contenttype.model.type.ContentType;\n import com.dotmarketing.exception.DotRuntimeException;\n+import com.dotmarketing.portlets.contentlet.model.Contentlet;\n import com.dotmarketing.portlets.contentlet.transform.DotContentletTransformer;\n import com.dotmarketing.portlets.contentlet.transform.DotTransformerBuilder;\n+import com.dotmarketing.portlets.contentlet.transform.strategy.KeyValueViewStrategy;", "originalCommit": "4a355b7ddf0bb95f7d7c5f5c3c5e33c951c866e2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAzNDY3Nw==", "url": "https://github.com/dotCMS/core/pull/19419#discussion_r502034677", "bodyText": "Codacy found an issue: A method/constructor should not explicitly throw java.lang.Exception", "author": "dev-dotcms", "createdAt": "2020-10-08T21:55:24Z", "path": "dotCMS/src/integration-test/java/com/dotmarketing/startup/runonce/Task05390MakeRoomForLongerJobDetailTest.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package com.dotmarketing.startup.runonce;\n+\n+import com.dotcms.util.IntegrationTestInitService;\n+import com.dotmarketing.db.DbConnectionFactory;\n+import com.dotmarketing.db.DbType;\n+import com.dotmarketing.util.Logger;\n+import org.junit.Assert;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class Task05390MakeRoomForLongerJobDetailTest {\n+\n+    @BeforeClass\n+    public static void prepare() throws Exception {", "originalCommit": "4a355b7ddf0bb95f7d7c5f5c3c5e33c951c866e2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAzNDY4NQ==", "url": "https://github.com/dotCMS/core/pull/19419#discussion_r502034685", "bodyText": "Codacy found an issue: Avoid unused imports such as 'com.dotmarketing.util.UtilMethods'", "author": "dev-dotcms", "createdAt": "2020-10-08T21:55:25Z", "path": "dotCMS/src/main/java/com/dotmarketing/portlets/htmlpageasset/business/render/page/PageViewSerializer.java", "diffHunk": "@@ -1,9 +1,15 @@\n package com.dotmarketing.portlets.htmlpageasset.business.render.page;\n \n+import com.dotcms.contenttype.model.field.Field;\n+import com.dotcms.contenttype.model.field.KeyValueField;\n+import com.dotcms.contenttype.model.type.ContentType;\n import com.dotmarketing.exception.DotRuntimeException;\n+import com.dotmarketing.portlets.contentlet.model.Contentlet;\n import com.dotmarketing.portlets.contentlet.transform.DotContentletTransformer;\n import com.dotmarketing.portlets.contentlet.transform.DotTransformerBuilder;\n+import com.dotmarketing.portlets.contentlet.transform.strategy.KeyValueViewStrategy;\n import com.dotmarketing.portlets.templates.model.Template;\n+import com.dotmarketing.util.UtilMethods;", "originalCommit": "4a355b7ddf0bb95f7d7c5f5c3c5e33c951c866e2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAzNDY5MA==", "url": "https://github.com/dotCMS/core/pull/19419#discussion_r502034690", "bodyText": "Codacy found an issue: Avoid unused imports such as 'com.dotcms.rest.exception.ValidationException'", "author": "dev-dotcms", "createdAt": "2020-10-08T21:55:26Z", "path": "dotCMS/src/main/java/com/dotcms/rest/api/v1/template/TemplateResource.java", "diffHunk": "@@ -7,13 +7,15 @@\n import com.dotcms.rest.ResponseEntityView;\n import com.dotcms.rest.WebResource;\n import com.dotcms.rest.annotation.NoCache;\n+import com.dotcms.rest.exception.ValidationException;", "originalCommit": "4a355b7ddf0bb95f7d7c5f5c3c5e33c951c866e2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAzNDY5Nw==", "url": "https://github.com/dotCMS/core/pull/19419#discussion_r502034697", "bodyText": "Codacy found an issue: Avoid unused imports such as 'com.dotcms.contenttype.model.type.ContentType'", "author": "dev-dotcms", "createdAt": "2020-10-08T21:55:27Z", "path": "dotCMS/src/main/java/com/dotmarketing/portlets/htmlpageasset/business/render/page/PageViewSerializer.java", "diffHunk": "@@ -1,9 +1,15 @@\n package com.dotmarketing.portlets.htmlpageasset.business.render.page;\n \n+import com.dotcms.contenttype.model.field.Field;\n+import com.dotcms.contenttype.model.field.KeyValueField;\n+import com.dotcms.contenttype.model.type.ContentType;", "originalCommit": "4a355b7ddf0bb95f7d7c5f5c3c5e33c951c866e2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAzNDcwMg==", "url": "https://github.com/dotCMS/core/pull/19419#discussion_r502034702", "bodyText": "Codacy found an issue: Avoid unused imports such as 'com.dotcms.contenttype.model.field.TextField'", "author": "dev-dotcms", "createdAt": "2020-10-08T21:55:28Z", "path": "dotCMS/src/integration-test/java/com/dotmarketing/portlets/htmlpageasset/business/render/page/PageViewSerializerTest.java", "diffHunk": "@@ -0,0 +1,98 @@\n+package com.dotmarketing.portlets.htmlpageasset.business.render.page;\n+\n+import com.dotcms.contenttype.model.field.Field;\n+import com.dotcms.contenttype.model.field.KeyValueField;\n+import com.dotcms.contenttype.model.field.TextField;", "originalCommit": "4a355b7ddf0bb95f7d7c5f5c3c5e33c951c866e2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAzNDcwNQ==", "url": "https://github.com/dotCMS/core/pull/19419#discussion_r502034705", "bodyText": "Codacy found an issue: Avoid unused imports such as 'java.util.Collections.emptyMap'", "author": "dev-dotcms", "createdAt": "2020-10-08T21:55:29Z", "path": "dotCMS/src/main/java/com/dotmarketing/portlets/htmlpageasset/business/render/page/PageViewSerializer.java", "diffHunk": "@@ -13,10 +19,13 @@\n import java.io.CharArrayReader;\n import java.io.IOException;\n import java.util.Collections;\n+import java.util.List;\n import java.util.Map;\n import java.util.Objects;\n import java.util.TreeMap;\n \n+import static java.util.Collections.emptyMap;", "originalCommit": "4a355b7ddf0bb95f7d7c5f5c3c5e33c951c866e2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAzNDcxNQ==", "url": "https://github.com/dotCMS/core/pull/19419#discussion_r502034715", "bodyText": "Codacy found an issue: Avoid unused imports such as 'java.security.KeyStoreException'", "author": "dev-dotcms", "createdAt": "2020-10-08T21:55:30Z", "path": "dotCMS/src/integration-test/java/com/dotcms/security/apps/SecretsStoreKeyStoreImplTest.java", "diffHunk": "@@ -1,13 +1,17 @@\n package com.dotcms.security.apps;\n \n+import static com.dotcms.security.apps.SecretsStoreKeyStoreImpl.SECRETS_KEYSTORE_PASSWORD_KEY;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertTrue;\n \n import com.dotcms.util.IntegrationTestInitService;\n import com.dotmarketing.business.CacheLocator;\n+import com.dotmarketing.util.Config;\n import com.dotmarketing.util.UUIDGenerator;\n+import java.security.KeyStore;\n+import java.security.KeyStoreException;", "originalCommit": "4a355b7ddf0bb95f7d7c5f5c3c5e33c951c866e2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAzNDcyNQ==", "url": "https://github.com/dotCMS/core/pull/19419#discussion_r502034725", "bodyText": "Codacy found an issue: Unnecessary modifier 'public' on method 'deleteTemplate': the method is declared in an interface type", "author": "dev-dotcms", "createdAt": "2020-10-08T21:55:31Z", "path": "dotCMS/src/main/java/com/dotmarketing/portlets/templates/business/TemplateAPI.java", "diffHunk": "@@ -193,16 +193,33 @@ Template copy(Template sourceTemplate, Host destinationHost, boolean forceOverwr\n \t */\n \tvoid unarchive (Template template);\n \n+\t/**\n+\t * Delete the specified template.\n+\t *\n+\t * Template should be archive, otherwise DotStateException\n+\t * Should have write permission, otherwise SecurityException\n+\t *\n+\t * @param template {@link Template}\n+\t * @param user     {@link User}\n+\t * @param respectFrontendRoles {@link Boolean}\n+\t * @return boolean\n+\t * @throws DotSecurityException\n+\t * @throws Exception\n+\t */\n+\tpublic boolean deleteTemplate(Template template, User user, boolean respectFrontendRoles);", "originalCommit": "4a355b7ddf0bb95f7d7c5f5c3c5e33c951c866e2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAzNDczNQ==", "url": "https://github.com/dotCMS/core/pull/19419#discussion_r502034735", "bodyText": "Codacy found an issue: Avoid unused imports such as 'java.util.stream.Stream'", "author": "dev-dotcms", "createdAt": "2020-10-08T21:55:32Z", "path": "dotCMS/src/main/java/com/dotmarketing/portlets/templates/design/bean/TemplateLayout.java", "diffHunk": "@@ -19,6 +19,7 @@\n import java.util.List;\n import java.util.Set;\n import java.util.stream.Collectors;\n+import java.util.stream.Stream;", "originalCommit": "4a355b7ddf0bb95f7d7c5f5c3c5e33c951c866e2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAzNDc0NA==", "url": "https://github.com/dotCMS/core/pull/19419#discussion_r502034744", "bodyText": "Codacy found an issue: The String literal \"urlContentMap\" appears 6 times in this file; the first occurrence is on line 61", "author": "dev-dotcms", "createdAt": "2020-10-08T21:55:33Z", "path": "dotCMS/src/integration-test/java/com/dotmarketing/portlets/htmlpageasset/business/render/page/PageViewSerializerTest.java", "diffHunk": "@@ -0,0 +1,98 @@\n+package com.dotmarketing.portlets.htmlpageasset.business.render.page;\n+\n+import com.dotcms.contenttype.model.field.Field;\n+import com.dotcms.contenttype.model.field.KeyValueField;\n+import com.dotcms.contenttype.model.field.TextField;\n+import com.dotcms.contenttype.model.type.BaseContentType;\n+import com.dotcms.contenttype.model.type.ContentType;\n+import com.dotcms.util.IntegrationTestInitService;\n+import com.dotmarketing.portlets.contentlet.model.Contentlet;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+/**\n+ * Test for the {@link PageViewSerializerTest}\n+ * @author jsanca\n+ */\n+public class PageViewSerializerTest {\n+\n+    @BeforeClass\n+    public static void prepare () throws Exception {\n+\n+        //Setting web app environment\n+        IntegrationTestInitService.getInstance().init();\n+    }\n+\n+    /**\n+     * Method to test: createObjectMapKeyValue\n+     * Given Scenario: key value but not key field\n+     * ExpectedResult: return the key value as string\n+     */\n+    @Test\n+    public void createObjectMapUrlContent_convert_url_map_no_keyvalue() throws Exception {\n+\n+        final PageViewSerializer pageViewSerializer = new PageViewSerializer();\n+        final Map<String, Object> pageViewMap       = new HashMap<>();\n+        final Contentlet baseContent                = new Contentlet();\n+        final Contentlet urlContent                 = mock(Contentlet.class);\n+        final String     keyValue                   = \"{\\\"key1\\\":\\\"value1\\\", \\\"key2\\\":\\\"value2\\\"}\";\n+        baseContent.getMap().put(\"keyValue\", keyValue);\n+        final ContentType contentType               = mock(ContentType.class);\n+        when(contentType.baseType()).thenReturn(BaseContentType.CONTENT);\n+        when(urlContent.getTitleImage()).thenReturn(Optional.empty());\n+        when(urlContent.getContentType()).thenReturn(contentType);\n+        when(urlContent.getBaseType()).thenReturn(Optional.of(BaseContentType.CONTENT));\n+        when(urlContent.get(\"keyValue\")).thenReturn(keyValue);\n+        when(contentType.fields(KeyValueField.class)).thenReturn(new ArrayList<>());\n+        pageViewSerializer.createObjectMapUrlContent(urlContent, pageViewMap);\n+\n+        assertTrue(pageViewMap.containsKey(\"urlContentMap\"));", "originalCommit": "4a355b7ddf0bb95f7d7c5f5c3c5e33c951c866e2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAzNDc1NA==", "url": "https://github.com/dotCMS/core/pull/19419#discussion_r502034754", "bodyText": "Codacy found an issue: Avoid unused imports such as 'java.security.GeneralSecurityException'", "author": "dev-dotcms", "createdAt": "2020-10-08T21:55:35Z", "path": "dotCMS/src/main/java/com/dotcms/security/apps/SecretsStoreKeyStoreImpl.java", "diffHunk": "@@ -2,24 +2,35 @@\n \n import static com.dotcms.security.apps.AppsCache.CACHE_404;\n \n+import com.dotcms.api.system.event.Visibility;\n import com.dotcms.auth.providers.jwt.factories.SigningKeyFactory;\n import com.dotcms.enterprise.cluster.ClusterFactory;\n+import com.dotcms.notifications.bean.NotificationLevel;\n+import com.dotcms.notifications.bean.NotificationType;\n+import com.dotcms.notifications.business.NotificationAPI;\n+import com.dotcms.util.I18NMessage;\n import com.dotmarketing.business.APILocator;\n import com.dotmarketing.business.CacheLocator;\n import com.dotmarketing.business.DotCacheException;\n+import com.dotmarketing.business.Role;\n+import com.dotmarketing.exception.DotDataException;\n import com.dotmarketing.exception.DotRuntimeException;\n import com.dotmarketing.util.Config;\n import com.dotmarketing.util.Logger;\n import com.dotmarketing.util.UtilMethods;\n import com.google.common.annotations.VisibleForTesting;\n+import com.liferay.portal.language.LanguageException;\n+import com.liferay.portal.model.User;\n import com.liferay.util.FileUtil;\n import com.rainerhahnekamp.sneakythrow.Sneaky;\n+import io.vavr.control.Try;\n import java.io.File;\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.OutputStream;\n import java.nio.file.Files;\n import java.nio.file.Paths;\n+import java.security.GeneralSecurityException;", "originalCommit": "4a355b7ddf0bb95f7d7c5f5c3c5e33c951c866e2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAzNDc2NQ==", "url": "https://github.com/dotCMS/core/pull/19419#discussion_r502034765", "bodyText": "Codacy found an issue: Avoid unused imports such as 'com.dotcms.contenttype.model.field.Field'", "author": "dev-dotcms", "createdAt": "2020-10-08T21:55:36Z", "path": "dotCMS/src/main/java/com/dotmarketing/portlets/htmlpageasset/business/render/page/PageViewSerializer.java", "diffHunk": "@@ -1,9 +1,15 @@\n package com.dotmarketing.portlets.htmlpageasset.business.render.page;\n \n+import com.dotcms.contenttype.model.field.Field;", "originalCommit": "4a355b7ddf0bb95f7d7c5f5c3c5e33c951c866e2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAzNDc3Ng==", "url": "https://github.com/dotCMS/core/pull/19419#discussion_r502034776", "bodyText": "Codacy found an issue: A method/constructor should not explicitly throw java.lang.Exception", "author": "dev-dotcms", "createdAt": "2020-10-08T21:55:37Z", "path": "dotCMS/src/integration-test/java/com/dotmarketing/portlets/htmlpageasset/business/render/page/PageViewSerializerTest.java", "diffHunk": "@@ -0,0 +1,98 @@\n+package com.dotmarketing.portlets.htmlpageasset.business.render.page;\n+\n+import com.dotcms.contenttype.model.field.Field;\n+import com.dotcms.contenttype.model.field.KeyValueField;\n+import com.dotcms.contenttype.model.field.TextField;\n+import com.dotcms.contenttype.model.type.BaseContentType;\n+import com.dotcms.contenttype.model.type.ContentType;\n+import com.dotcms.util.IntegrationTestInitService;\n+import com.dotmarketing.portlets.contentlet.model.Contentlet;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+/**\n+ * Test for the {@link PageViewSerializerTest}\n+ * @author jsanca\n+ */\n+public class PageViewSerializerTest {\n+\n+    @BeforeClass\n+    public static void prepare () throws Exception {\n+\n+        //Setting web app environment\n+        IntegrationTestInitService.getInstance().init();\n+    }\n+\n+    /**\n+     * Method to test: createObjectMapKeyValue\n+     * Given Scenario: key value but not key field\n+     * ExpectedResult: return the key value as string\n+     */\n+    @Test\n+    public void createObjectMapUrlContent_convert_url_map_no_keyvalue() throws Exception {\n+\n+        final PageViewSerializer pageViewSerializer = new PageViewSerializer();\n+        final Map<String, Object> pageViewMap       = new HashMap<>();\n+        final Contentlet baseContent                = new Contentlet();\n+        final Contentlet urlContent                 = mock(Contentlet.class);\n+        final String     keyValue                   = \"{\\\"key1\\\":\\\"value1\\\", \\\"key2\\\":\\\"value2\\\"}\";\n+        baseContent.getMap().put(\"keyValue\", keyValue);\n+        final ContentType contentType               = mock(ContentType.class);\n+        when(contentType.baseType()).thenReturn(BaseContentType.CONTENT);\n+        when(urlContent.getTitleImage()).thenReturn(Optional.empty());\n+        when(urlContent.getContentType()).thenReturn(contentType);\n+        when(urlContent.getBaseType()).thenReturn(Optional.of(BaseContentType.CONTENT));\n+        when(urlContent.get(\"keyValue\")).thenReturn(keyValue);\n+        when(contentType.fields(KeyValueField.class)).thenReturn(new ArrayList<>());\n+        pageViewSerializer.createObjectMapUrlContent(urlContent, pageViewMap);\n+\n+        assertTrue(pageViewMap.containsKey(\"urlContentMap\"));\n+        assertFalse(Map.class.cast(pageViewMap.get(\"urlContentMap\")).containsKey(\"keyValue\"));\n+    }\n+\n+    /**\n+     * Method to test: createObjectMapKeyValue\n+     * Given Scenario: key value given\n+     * ExpectedResult: return the key value as map\n+     */\n+    @Test\n+    public void createObjectMapUrlContent_convert_url_map_keyvalue() throws Exception {", "originalCommit": "4a355b7ddf0bb95f7d7c5f5c3c5e33c951c866e2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAzNDc4MQ==", "url": "https://github.com/dotCMS/core/pull/19419#discussion_r502034781", "bodyText": "Codacy found an issue: A method/constructor should not explicitly throw java.lang.Exception", "author": "dev-dotcms", "createdAt": "2020-10-08T21:55:38Z", "path": "dotCMS/src/integration-test/java/com/dotmarketing/portlets/htmlpageasset/business/render/page/PageViewSerializerTest.java", "diffHunk": "@@ -0,0 +1,98 @@\n+package com.dotmarketing.portlets.htmlpageasset.business.render.page;\n+\n+import com.dotcms.contenttype.model.field.Field;\n+import com.dotcms.contenttype.model.field.KeyValueField;\n+import com.dotcms.contenttype.model.field.TextField;\n+import com.dotcms.contenttype.model.type.BaseContentType;\n+import com.dotcms.contenttype.model.type.ContentType;\n+import com.dotcms.util.IntegrationTestInitService;\n+import com.dotmarketing.portlets.contentlet.model.Contentlet;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+/**\n+ * Test for the {@link PageViewSerializerTest}\n+ * @author jsanca\n+ */\n+public class PageViewSerializerTest {\n+\n+    @BeforeClass\n+    public static void prepare () throws Exception {\n+\n+        //Setting web app environment\n+        IntegrationTestInitService.getInstance().init();\n+    }\n+\n+    /**\n+     * Method to test: createObjectMapKeyValue\n+     * Given Scenario: key value but not key field\n+     * ExpectedResult: return the key value as string\n+     */\n+    @Test\n+    public void createObjectMapUrlContent_convert_url_map_no_keyvalue() throws Exception {", "originalCommit": "4a355b7ddf0bb95f7d7c5f5c3c5e33c951c866e2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAzNDc4NQ==", "url": "https://github.com/dotCMS/core/pull/19419#discussion_r502034785", "bodyText": "Codacy found an issue: The String literal \"content2content1\" appears 4 times in this file; the first occurrence is on line 668", "author": "dev-dotcms", "createdAt": "2020-10-08T21:55:39Z", "path": "dotCMS/src/integration-test/java/com/dotcms/rendering/velocity/services/HTMLPageAssetRenderedTest.java", "diffHunk": "@@ -664,7 +665,7 @@ public void ContentFallbackFalse_PageFallbackFalse_PageEnglish_ViewEnglishConten\n                         .setPageMode(PageMode.LIVE)\n                         .build(),\n                 mockRequest, mockResponse);\n-        Assert.assertTrue(\"ENG = \"+html , html.contains(\"content2content1\"));\n+        assertTrue(\"ENG = \"+html , html.contains(\"content2content1\"));", "originalCommit": "4a355b7ddf0bb95f7d7c5f5c3c5e33c951c866e2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAzNDc5MQ==", "url": "https://github.com/dotCMS/core/pull/19419#discussion_r502034791", "bodyText": "Codacy found an issue: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block", "author": "dev-dotcms", "createdAt": "2020-10-08T21:55:40Z", "path": "dotCMS/src/integration-test/java/com/dotmarketing/startup/runonce/Task05390MakeRoomForLongerJobDetailTest.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package com.dotmarketing.startup.runonce;\n+\n+import com.dotcms.util.IntegrationTestInitService;\n+import com.dotmarketing.db.DbConnectionFactory;\n+import com.dotmarketing.db.DbType;\n+import com.dotmarketing.util.Logger;\n+import org.junit.Assert;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class Task05390MakeRoomForLongerJobDetailTest {\n+\n+    @BeforeClass\n+    public static void prepare() throws Exception {\n+        // Setting web app environment\n+        IntegrationTestInitService.getInstance().init();\n+    }\n+\n+    @Test\n+    public void testExecuteUpgrade() {\n+        final DbType dbType = DbType.getDbType(DbConnectionFactory.getDBType());\n+        try{\n+            final Task05390MakeRoomForLongerJobDetail upgradeTask = new Task05390MakeRoomForLongerJobDetail();\n+            final boolean forceRun = upgradeTask.forceRun();\n+            if(forceRun){\n+                Assert.assertEquals(\"should be applied only for mySQL \", DbType.MYSQL, dbType );\n+                upgradeTask.executeUpgrade();\n+            } else {\n+                Assert.assertNotEquals(String.format(\"should not be applied on dbs ot type `%s` \",dbType), DbType.MYSQL, dbType );\n+            }\n+        } catch (Exception e) {", "originalCommit": "4a355b7ddf0bb95f7d7c5f5c3c5e33c951c866e2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAzNDgwMA==", "url": "https://github.com/dotCMS/core/pull/19419#discussion_r502034800", "bodyText": "Codacy found an issue: Avoid unused imports such as 'java.security.KeyStore'", "author": "dev-dotcms", "createdAt": "2020-10-08T21:55:41Z", "path": "dotCMS/src/integration-test/java/com/dotcms/security/apps/SecretsStoreKeyStoreImplTest.java", "diffHunk": "@@ -1,13 +1,17 @@\n package com.dotcms.security.apps;\n \n+import static com.dotcms.security.apps.SecretsStoreKeyStoreImpl.SECRETS_KEYSTORE_PASSWORD_KEY;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertTrue;\n \n import com.dotcms.util.IntegrationTestInitService;\n import com.dotmarketing.business.CacheLocator;\n+import com.dotmarketing.util.Config;\n import com.dotmarketing.util.UUIDGenerator;\n+import java.security.KeyStore;", "originalCommit": "4a355b7ddf0bb95f7d7c5f5c3c5e33c951c866e2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAzNDgwNg==", "url": "https://github.com/dotCMS/core/pull/19419#discussion_r502034806", "bodyText": "Codacy found an issue: A method/constructor should not explicitly throw java.lang.Exception", "author": "dev-dotcms", "createdAt": "2020-10-08T21:55:42Z", "path": "dotCMS/src/integration-test/java/com/dotcms/rendering/velocity/services/HTMLPageAssetRenderedTest.java", "diffHunk": "@@ -1602,7 +1603,54 @@ public void containerTwiceIntoPageAndTemplateLayout() throws Exception{\n                         .setPageMode(PageMode.LIVE)\n                         .build(),\n                 mockRequest, mockResponse);\n-        Assert.assertTrue(html.contains(\"content1content2content1content2\"));\n+        assertTrue(html.contains(\"content1content2content1content2\"));\n+    }\n+\n+    @Test\n+    public void pageWithSidebarShouldRender() throws Exception{", "originalCommit": "4a355b7ddf0bb95f7d7c5f5c3c5e33c951c866e2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAzNDgxNw==", "url": "https://github.com/dotCMS/core/pull/19419#discussion_r502034817", "bodyText": "Codacy found an issue: Avoid unused imports such as 'com.dotmarketing.portlets.contentlet.transform.strategy.TransformOptions.KEY_VALUE_VIEW'", "author": "dev-dotcms", "createdAt": "2020-10-08T21:55:43Z", "path": "dotCMS/src/main/java/com/dotmarketing/portlets/contentlet/transform/DotContentletTransformerImpl.java", "diffHunk": "@@ -4,7 +4,11 @@\n import static com.dotmarketing.portlets.contentlet.transform.strategy.TransformOptions.CATEGORIES_NAME;\n import static com.dotmarketing.portlets.contentlet.transform.strategy.TransformOptions.COMMON_PROPS;\n import static com.dotmarketing.portlets.contentlet.transform.strategy.TransformOptions.CONSTANTS;\n+\n+import static com.dotmarketing.portlets.contentlet.transform.strategy.TransformOptions.KEY_VALUE_VIEW;", "originalCommit": "4a355b7ddf0bb95f7d7c5f5c3c5e33c951c866e2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAzNDgyMw==", "url": "https://github.com/dotCMS/core/pull/19419#discussion_r502034823", "bodyText": "Codacy found an issue: The String literal \"keyValue\" appears 10 times in this file; the first occurrence is on line 47", "author": "dev-dotcms", "createdAt": "2020-10-08T21:55:44Z", "path": "dotCMS/src/integration-test/java/com/dotmarketing/portlets/htmlpageasset/business/render/page/PageViewSerializerTest.java", "diffHunk": "@@ -0,0 +1,98 @@\n+package com.dotmarketing.portlets.htmlpageasset.business.render.page;\n+\n+import com.dotcms.contenttype.model.field.Field;\n+import com.dotcms.contenttype.model.field.KeyValueField;\n+import com.dotcms.contenttype.model.field.TextField;\n+import com.dotcms.contenttype.model.type.BaseContentType;\n+import com.dotcms.contenttype.model.type.ContentType;\n+import com.dotcms.util.IntegrationTestInitService;\n+import com.dotmarketing.portlets.contentlet.model.Contentlet;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+/**\n+ * Test for the {@link PageViewSerializerTest}\n+ * @author jsanca\n+ */\n+public class PageViewSerializerTest {\n+\n+    @BeforeClass\n+    public static void prepare () throws Exception {\n+\n+        //Setting web app environment\n+        IntegrationTestInitService.getInstance().init();\n+    }\n+\n+    /**\n+     * Method to test: createObjectMapKeyValue\n+     * Given Scenario: key value but not key field\n+     * ExpectedResult: return the key value as string\n+     */\n+    @Test\n+    public void createObjectMapUrlContent_convert_url_map_no_keyvalue() throws Exception {\n+\n+        final PageViewSerializer pageViewSerializer = new PageViewSerializer();\n+        final Map<String, Object> pageViewMap       = new HashMap<>();\n+        final Contentlet baseContent                = new Contentlet();\n+        final Contentlet urlContent                 = mock(Contentlet.class);\n+        final String     keyValue                   = \"{\\\"key1\\\":\\\"value1\\\", \\\"key2\\\":\\\"value2\\\"}\";\n+        baseContent.getMap().put(\"keyValue\", keyValue);", "originalCommit": "4a355b7ddf0bb95f7d7c5f5c3c5e33c951c866e2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAzNDgzMg==", "url": "https://github.com/dotCMS/core/pull/19419#discussion_r502034832", "bodyText": "Codacy found an issue: The String literal \"ESP = \" appears 5 times in this file; the first occurrence is on line 472", "author": "dev-dotcms", "createdAt": "2020-10-08T21:55:45Z", "path": "dotCMS/src/integration-test/java/com/dotcms/rendering/velocity/services/HTMLPageAssetRenderedTest.java", "diffHunk": "@@ -468,7 +469,7 @@ public void render_spanish_contentlets_on_english_page(\n                         .setPageMode(PageMode.LIVE)\n                         .build(),\n                 mockRequest, mockResponse);\n-        Assert.assertTrue(\"ESP = \"+html , html.contains(\"content2Spa\") && html.contains(\"content3Spa\"));\n+        assertTrue(\"ESP = \"+html , html.contains(\"content2Spa\") && html.contains(\"content3Spa\"));", "originalCommit": "4a355b7ddf0bb95f7d7c5f5c3c5e33c951c866e2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAzNDgzNQ==", "url": "https://github.com/dotCMS/core/pull/19419#discussion_r502034835", "bodyText": "Codacy found an issue: Avoid unused imports such as 'com.dotcms.contenttype.model.field.Field'", "author": "dev-dotcms", "createdAt": "2020-10-08T21:55:46Z", "path": "dotCMS/src/integration-test/java/com/dotmarketing/portlets/htmlpageasset/business/render/page/PageViewSerializerTest.java", "diffHunk": "@@ -0,0 +1,98 @@\n+package com.dotmarketing.portlets.htmlpageasset.business.render.page;\n+\n+import com.dotcms.contenttype.model.field.Field;", "originalCommit": "4a355b7ddf0bb95f7d7c5f5c3c5e33c951c866e2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAzNDgzOA==", "url": "https://github.com/dotCMS/core/pull/19419#discussion_r502034838", "bodyText": "Codacy found an issue: The String literal \"ENG = \" appears 6 times in this file; the first occurrence is on line 405", "author": "dev-dotcms", "createdAt": "2020-10-08T21:55:47Z", "path": "dotCMS/src/integration-test/java/com/dotcms/rendering/velocity/services/HTMLPageAssetRenderedTest.java", "diffHunk": "@@ -401,7 +402,7 @@ public void ContentFallbackFalse_PageFallbackTrue_PageEnglish_ViewEnglishContent\n                     .setPageMode(PageMode.LIVE)\n                     .build(),\n                 mockRequest, mockResponse);\n-        Assert.assertTrue(\"ENG = \"+html , html.contains(\"content1\") && html.contains(\"content2\"));\n+        assertTrue(\"ENG = \"+html , html.contains(\"content1\") && html.contains(\"content2\"));", "originalCommit": "4a355b7ddf0bb95f7d7c5f5c3c5e33c951c866e2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}