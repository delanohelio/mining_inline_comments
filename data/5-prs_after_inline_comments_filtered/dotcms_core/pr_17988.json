{"pr_number": 17988, "pr_title": "Issue 16565 dotasset", "pr_createdAt": "2020-02-12T22:35:35Z", "pr_url": "https://github.com/dotCMS/core/pull/17988", "timeline": [{"oid": "724b85ea0cde42eb69b1bf9c83dae4ce0e4d7f91", "url": "https://github.com/dotCMS/core/commit/724b85ea0cde42eb69b1bf9c83dae4ce0e4d7f91", "message": "#16565 first draft of the dotAsset content type", "committedDate": "2020-02-03T22:08:20Z", "type": "commit"}, {"oid": "35bf0c8598b0e5ab80a3253abb4a8e70787d8831", "url": "https://github.com/dotCMS/core/commit/35bf0c8598b0e5ab80a3253abb4a8e70787d8831", "message": "#16565 now the tags is also removable", "committedDate": "2020-02-04T04:03:17Z", "type": "commit"}, {"oid": "25a59cd4e90a6d1ebbd572786f03decc3a27ae0e", "url": "https://github.com/dotCMS/core/commit/25a59cd4e90a6d1ebbd572786f03decc3a27ae0e", "message": "Merge branch 'master' of github.com:dotCMS/core into issue-16565-dotasset", "committedDate": "2020-02-04T16:05:07Z", "type": "commit"}, {"oid": "0c9132235406d651988806a2ea172401ef122d18", "url": "https://github.com/dotCMS/core/commit/0c9132235406d651988806a2ea172401ef122d18", "message": "#16565 changes after review", "committedDate": "2020-02-04T18:44:31Z", "type": "commit"}, {"oid": "b44e82b28a25f517544f115beb578dd203c7e6cd", "url": "https://github.com/dotCMS/core/commit/b44e82b28a25f517544f115beb578dd203c7e6cd", "message": "Merge branch 'master' of github.com:dotCMS/core into issue-16565-dotasset", "committedDate": "2020-02-12T15:58:24Z", "type": "commit"}, {"oid": "5760b938cfc980c6e144ca6afb68828dc94511dd", "url": "https://github.com/dotCMS/core/commit/5760b938cfc980c6e144ca6afb68828dc94511dd", "message": "#16565 added a new base type and content type dotAsset", "committedDate": "2020-02-12T22:34:53Z", "type": "commit"}, {"oid": "a62dea4ca7e0308489f4f48e198e7324de299474", "url": "https://github.com/dotCMS/core/commit/a62dea4ca7e0308489f4f48e198e7324de299474", "message": "#16565 adding the support for the graphql", "committedDate": "2020-02-12T22:50:17Z", "type": "commit"}, {"oid": "ac3405b6a30cf3c65aa42781579a50e15271ef22", "url": "https://github.com/dotCMS/core/commit/ac3405b6a30cf3c65aa42781579a50e15271ef22", "message": "#16565 added codacy feedback", "committedDate": "2020-02-13T16:04:03Z", "type": "commit"}, {"oid": "a3ae160091a2fc5780071d873f53f4ee760f6c20", "url": "https://github.com/dotCMS/core/commit/a3ae160091a2fc5780071d873f53f4ee760f6c20", "message": "#16565 adding unit test", "committedDate": "2020-02-13T22:25:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE1NjY4NA==", "url": "https://github.com/dotCMS/core/pull/17988#discussion_r379156684", "bodyText": "Issue found: A method/constructor should not explicitly throw java.lang.Exception", "author": "dev-dotcms", "createdAt": "2020-02-13T22:31:52Z", "path": "dotCMS/src/integration-test/java/com/dotmarketing/startup/runonce/Task05210CreateDefaultDotAssetTest.java", "diffHunk": "@@ -0,0 +1,66 @@\n+package com.dotmarketing.startup.runonce;\n+\n+import com.dotcms.util.IntegrationTestInitService;\n+import com.dotmarketing.common.db.DotConnect;\n+import com.dotmarketing.db.DbConnectionFactory;\n+import com.dotmarketing.exception.DotDataException;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+import java.sql.SQLException;\n+\n+import static org.junit.Assert.assertTrue;\n+\n+public class Task05210CreateDefaultDotAssetTest {\n+\n+    @BeforeClass\n+    public static void prepare() throws Exception {", "originalCommit": "a3ae160091a2fc5780071d873f53f4ee760f6c20", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE1NjY5Ng==", "url": "https://github.com/dotCMS/core/pull/17988#discussion_r379156696", "bodyText": "Issue found: Avoid empty catch blocks", "author": "dev-dotcms", "createdAt": "2020-02-13T22:31:54Z", "path": "dotCMS/src/integration-test/java/com/dotmarketing/startup/runonce/Task05210CreateDefaultDotAssetTest.java", "diffHunk": "@@ -0,0 +1,66 @@\n+package com.dotmarketing.startup.runonce;\n+\n+import com.dotcms.util.IntegrationTestInitService;\n+import com.dotmarketing.common.db.DotConnect;\n+import com.dotmarketing.db.DbConnectionFactory;\n+import com.dotmarketing.exception.DotDataException;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+import java.sql.SQLException;\n+\n+import static org.junit.Assert.assertTrue;\n+\n+public class Task05210CreateDefaultDotAssetTest {\n+\n+    @BeforeClass\n+    public static void prepare() throws Exception {\n+        // Setting web app environment\n+        IntegrationTestInitService.getInstance().init();\n+    }\n+\n+    private void removeConstraintIfAny() throws DotDataException {\n+        try {\n+            DbConnectionFactory.getConnection().setAutoCommit(true);\n+        } catch (SQLException e) {\n+            throw new DotDataException(e.getMessage(), e);\n+        }\n+\n+        //Certain db engines store unique constraints as indices\n+        final String [] fieldInodes = Task05210CreateDefaultDotAsset.DOTASSET_VARIABLE_FIELD_INODES;\n+        for (final String fieldInode : fieldInodes) {\n+            try {\n+                new DotConnect().setSQL(\"delete from field where inode = ?\")\n+                        .addParam(fieldInode).loadResult();\n+            } catch (DotDataException e) {\n+                //Nah.\n+            }\n+        }\n+\n+        for (final String fieldInode : fieldInodes) {\n+            try {\n+                new DotConnect().setSQL(\"delete from inode where inode = ?\")\n+                        .addParam(fieldInode).loadResult();\n+            } catch (DotDataException e) {", "originalCommit": "a3ae160091a2fc5780071d873f53f4ee760f6c20", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}