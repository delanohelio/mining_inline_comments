{"pr_number": 18281, "pr_title": "Issue 18268 when es is down the form are not getting render", "pr_createdAt": "2020-04-07T21:08:41Z", "pr_url": "https://github.com/dotCMS/core/pull/18281", "timeline": [{"oid": "60f9f19b645ce7fe5b02120aa558e8506c57aa74", "url": "https://github.com/dotCMS/core/commit/60f9f19b645ce7fe5b02120aa558e8506c57aa74", "message": "Fix: render form when Es is down", "committedDate": "2020-04-06T21:32:39Z", "type": "commit"}, {"oid": "2713c7f428b94532bfaced656a7488efeae84159", "url": "https://github.com/dotCMS/core/commit/2713c7f428b94532bfaced656a7488efeae84159", "message": "#18268 refactoring", "committedDate": "2020-04-07T16:37:47Z", "type": "commit"}, {"oid": "2bcfb784ff9da722a3e797056ca839839bae8a1d", "url": "https://github.com/dotCMS/core/commit/2bcfb784ff9da722a3e797056ca839839bae8a1d", "message": "Merge remote-tracking branch 'origin/master' into issue-18268-When-ES-is-down-the-form-are-not-getting-render", "committedDate": "2020-04-07T16:38:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTEzMTkyNA==", "url": "https://github.com/dotCMS/core/pull/18281#discussion_r405131924", "bodyText": "can we write a test for this?", "author": "dsilvam", "createdAt": "2020-04-07T21:44:40Z", "path": "dotCMS/src/main/java/com/dotcms/contenttype/model/field/layout/FieldUtil.java", "diffHunk": "@@ -245,14 +257,22 @@ public static void setFieldInternationalization(\n         final long languageId = contentTypeInternationalization.getLanguageId();\n         final boolean live = contentTypeInternationalization.isLive();\n         final User user = APILocator.systemUser();\n-        \n-        for (final String propertyName : fieldMap.keySet()) {\n-            final String key = String.format(\"%s.%s.%s\", contentType.variable(), fieldMap.get(\"variable\"), propertyName);\n-            final String i18nValue = APILocator.getLanguageVariableAPI().getLanguageVariable(\n-                    key, languageId, user, live, user == null);\n-\n-            if (!i18nValue.equals(key) && !i18nValue.equals(fieldMap.get(propertyName).toString())) {\n-                fieldMap.put(propertyName, i18nValue);\n+\n+        try {\n+            for (final String propertyName : fieldMap.keySet()) {\n+                final String key = String.format(\"%s.%s.%s\", contentType.variable(), fieldMap.get(\"variable\"), propertyName);\n+                final String i18nValue = APILocator.getLanguageVariableAPI().getLanguageVariable(\n+                        key, languageId, user, live, user == null);\n+\n+                if (!i18nValue.equals(key) && !i18nValue.equals(fieldMap.get(propertyName).toString())) {\n+                    fieldMap.put(propertyName, i18nValue);\n+                }\n+            }\n+        } catch (DotRuntimeException e) {\n+            if ( ExceptionUtil.causedBy(e, ConnectException.class)) {", "originalCommit": "2bcfb784ff9da722a3e797056ca839839bae8a1d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc5NTM0MA==", "url": "https://github.com/dotCMS/core/pull/18281#discussion_r405795340", "bodyText": "done fc44d05#diff-174105054591969073d7cc9d3406b5d5R27", "author": "freddyucv", "createdAt": "2020-04-08T20:30:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTEzMTkyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTEzOTY0MQ==", "url": "https://github.com/dotCMS/core/pull/18281#discussion_r405139641", "bodyText": "This method sounds like a good candidate to be moved to an API. Too much for a util method?", "author": "dsilvam", "createdAt": "2020-04-07T22:01:44Z", "path": "dotCMS/src/main/java/com/dotcms/contenttype/model/field/layout/FieldUtil.java", "diffHunk": "@@ -236,6 +239,15 @@ public static Field copyField(final Field field, final int newSortOrder) {\n         return jsonFieldTransformer.from();\n     }\n \n+    /**\n+     * Apply Internationalization to field property using a Language Variable, for each field property set into\n+     * fieldMap a Language Variable with the name contentTypeVariable.fieldVariable.propertyName is searched, if it\n+     * exists then the field's property value is replaced by the language variable value\n+     *\n+     * @param contentType\n+     * @param contentTypeInternationalization set the mode, language and user to search the Language Variable\n+     * @param fieldMap field properties\n+     */\n     public static void setFieldInternationalization(", "originalCommit": "2bcfb784ff9da722a3e797056ca839839bae8a1d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc5NTAxNg==", "url": "https://github.com/dotCMS/core/pull/18281#discussion_r405795016", "bodyText": "done c5d753c", "author": "freddyucv", "createdAt": "2020-04-08T20:29:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTEzOTY0MQ=="}], "type": "inlineReview"}, {"oid": "c5d753c9f171f339c058cfc4df2a6d8a16a5725a", "url": "https://github.com/dotCMS/core/commit/c5d753c9f171f339c058cfc4df2a6d8a16a5725a", "message": "#18268 refactoring", "committedDate": "2020-04-08T20:23:33Z", "type": "commit"}, {"oid": "fc44d05d8a9e9041ebf7df076ce9de4b45694bc7", "url": "https://github.com/dotCMS/core/commit/fc44d05d8a9e9041ebf7df076ce9de4b45694bc7", "message": "#18268 testing", "committedDate": "2020-04-08T20:24:58Z", "type": "commit"}, {"oid": "28baff427f7d145ecdc9e563b50db0cca153634f", "url": "https://github.com/dotCMS/core/commit/28baff427f7d145ecdc9e563b50db0cca153634f", "message": "Merge branch 'master' of github.com:dotCMS/core into issue-18268-When-ES-is-down-the-form-are-not-getting-render", "committedDate": "2020-04-13T17:59:49Z", "type": "commit"}, {"oid": "217cffc801a9fc2dd7124526a1e9b57c89d3c3ce", "url": "https://github.com/dotCMS/core/commit/217cffc801a9fc2dd7124526a1e9b57c89d3c3ce", "message": "#18268 Fixing error", "committedDate": "2020-04-13T22:13:16Z", "type": "commit"}, {"oid": "d3e32950377d6f04ccee9d6349b1f6d69f99cb24", "url": "https://github.com/dotCMS/core/commit/d3e32950377d6f04ccee9d6349b1f6d69f99cb24", "message": "Merge branch 'issue-18268-When-ES-is-down-the-form-are-not-getting-render' of github.com:dotCMS/core into issue-18268-When-ES-is-down-the-form-are-not-getting-render", "committedDate": "2020-04-13T22:41:22Z", "type": "commit"}, {"oid": "02351b8e54207dd6081453e4baeeefb1960f9796", "url": "https://github.com/dotCMS/core/commit/02351b8e54207dd6081453e4baeeefb1960f9796", "message": "#18268 merge with master", "committedDate": "2020-04-13T23:13:33Z", "type": "commit"}, {"oid": "b7dac5a71a5b36eb085a122ce1cc3a01cb8891fc", "url": "https://github.com/dotCMS/core/commit/b7dac5a71a5b36eb085a122ce1cc3a01cb8891fc", "message": "Merge branch 'master' into issue-18268-When-ES-is-down-the-form-are-not-getting-render", "committedDate": "2020-04-13T23:15:16Z", "type": "commit"}, {"oid": "6bfde6e99b8dfface957bcf9b3261df80044b4b9", "url": "https://github.com/dotCMS/core/commit/6bfde6e99b8dfface957bcf9b3261df80044b4b9", "message": "#18268 merge with master", "committedDate": "2020-04-13T23:19:13Z", "type": "commit"}, {"oid": "66ef18c78cb62d766e29256273e926614f6bf390", "url": "https://github.com/dotCMS/core/commit/66ef18c78cb62d766e29256273e926614f6bf390", "message": "#18268 merge with master", "committedDate": "2020-04-13T23:19:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc3NjQxMQ==", "url": "https://github.com/dotCMS/core/pull/18281#discussion_r407776411", "bodyText": "Issue found: The String literal \"value_3\" appears 4 times in this file; the first occurrence is on line 72", "author": "dev-dotcms", "createdAt": "2020-04-13T23:26:33Z", "path": "dotCMS/src/test/java/com/dotcms/contenttype/business/FieldAPIImplTest.java", "diffHunk": "@@ -0,0 +1,160 @@\n+package com.dotcms.contenttype.business;\n+\n+import com.dotcms.contenttype.business.FieldAPIImpl;\n+import com.dotcms.contenttype.model.type.ContentType;\n+import com.dotcms.contenttype.transform.contenttype.ContentTypeInternationalization;\n+import com.dotcms.languagevariable.business.LanguageVariableAPI;\n+import com.dotcms.system.event.local.business.LocalSystemEventsAPI;\n+import com.dotmarketing.business.APILocator;\n+import com.dotmarketing.business.PermissionAPI;\n+import com.dotmarketing.business.RelationshipAPI;\n+import com.dotmarketing.business.UserAPI;\n+import com.dotmarketing.exception.DotRuntimeException;\n+import com.dotmarketing.portlets.contentlet.business.ContentletAPI;\n+import com.liferay.portal.model.User;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+import java.net.ConnectException;\n+import java.util.Map;\n+\n+import static com.dotcms.util.CollectionsUtils.map;\n+import static org.mockito.Matchers.*;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+import static org.junit.Assert.assertEquals;\n+\n+public class FieldAPIImplTest {\n+    private static PermissionAPI perAPI;\n+    private static ContentletAPI conAPI;\n+    private static UserAPI userAPI;\n+    private static RelationshipAPI relationshipAPI;\n+    private static LocalSystemEventsAPI localSystemEventsAPI;\n+    private static LanguageVariableAPI languageVariableAPI;\n+\n+    private static FieldAPIImpl fieldAPIImpl;\n+\n+    @BeforeClass\n+    public static void init(){\n+        perAPI = mock(PermissionAPI.class);\n+        conAPI = mock(ContentletAPI.class);\n+        userAPI = mock(UserAPI.class);\n+        relationshipAPI = mock(RelationshipAPI.class);\n+        localSystemEventsAPI = mock(LocalSystemEventsAPI.class);\n+        languageVariableAPI = mock(LanguageVariableAPI.class);\n+\n+        fieldAPIImpl = new FieldAPIImpl(\n+                perAPI,\n+                conAPI,\n+                userAPI,\n+                relationshipAPI,\n+                localSystemEventsAPI,\n+                languageVariableAPI\n+        );\n+    }\n+\n+    /**\n+     * when: you have to language variable for the Content Type's fields\n+     * Should: Change the field property name by the language variable values\n+     */\n+    @Test\n+    public void shouldFieldInternationalizationWork(){\n+        final long languageId = 1;\n+        final boolean live = true;\n+        final User user = mock(User.class);\n+        final Object object = mock(Object.class);\n+\n+        final ContentType contentType = mock(ContentType.class);\n+        final ContentTypeInternationalization contentTypeInternationalization = mock(ContentTypeInternationalization.class);\n+        final Map<String, Object> fieldMap = map(\n+                \"attribute_1\", \"value_1\",\n+                \"attribute_2\", \"value_2\",\n+                \"attribute_3\", \"value_3\",", "originalCommit": "66ef18c78cb62d766e29256273e926614f6bf390", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc3NjQxNw==", "url": "https://github.com/dotCMS/core/pull/18281#discussion_r407776417", "bodyText": "Issue found: The String literal \"attribute_1\" appears 4 times in this file; the first occurrence is on line 70", "author": "dev-dotcms", "createdAt": "2020-04-13T23:26:34Z", "path": "dotCMS/src/test/java/com/dotcms/contenttype/business/FieldAPIImplTest.java", "diffHunk": "@@ -0,0 +1,160 @@\n+package com.dotcms.contenttype.business;\n+\n+import com.dotcms.contenttype.business.FieldAPIImpl;\n+import com.dotcms.contenttype.model.type.ContentType;\n+import com.dotcms.contenttype.transform.contenttype.ContentTypeInternationalization;\n+import com.dotcms.languagevariable.business.LanguageVariableAPI;\n+import com.dotcms.system.event.local.business.LocalSystemEventsAPI;\n+import com.dotmarketing.business.APILocator;\n+import com.dotmarketing.business.PermissionAPI;\n+import com.dotmarketing.business.RelationshipAPI;\n+import com.dotmarketing.business.UserAPI;\n+import com.dotmarketing.exception.DotRuntimeException;\n+import com.dotmarketing.portlets.contentlet.business.ContentletAPI;\n+import com.liferay.portal.model.User;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+import java.net.ConnectException;\n+import java.util.Map;\n+\n+import static com.dotcms.util.CollectionsUtils.map;\n+import static org.mockito.Matchers.*;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+import static org.junit.Assert.assertEquals;\n+\n+public class FieldAPIImplTest {\n+    private static PermissionAPI perAPI;\n+    private static ContentletAPI conAPI;\n+    private static UserAPI userAPI;\n+    private static RelationshipAPI relationshipAPI;\n+    private static LocalSystemEventsAPI localSystemEventsAPI;\n+    private static LanguageVariableAPI languageVariableAPI;\n+\n+    private static FieldAPIImpl fieldAPIImpl;\n+\n+    @BeforeClass\n+    public static void init(){\n+        perAPI = mock(PermissionAPI.class);\n+        conAPI = mock(ContentletAPI.class);\n+        userAPI = mock(UserAPI.class);\n+        relationshipAPI = mock(RelationshipAPI.class);\n+        localSystemEventsAPI = mock(LocalSystemEventsAPI.class);\n+        languageVariableAPI = mock(LanguageVariableAPI.class);\n+\n+        fieldAPIImpl = new FieldAPIImpl(\n+                perAPI,\n+                conAPI,\n+                userAPI,\n+                relationshipAPI,\n+                localSystemEventsAPI,\n+                languageVariableAPI\n+        );\n+    }\n+\n+    /**\n+     * when: you have to language variable for the Content Type's fields\n+     * Should: Change the field property name by the language variable values\n+     */\n+    @Test\n+    public void shouldFieldInternationalizationWork(){\n+        final long languageId = 1;\n+        final boolean live = true;\n+        final User user = mock(User.class);\n+        final Object object = mock(Object.class);\n+\n+        final ContentType contentType = mock(ContentType.class);\n+        final ContentTypeInternationalization contentTypeInternationalization = mock(ContentTypeInternationalization.class);\n+        final Map<String, Object> fieldMap = map(\n+                \"attribute_1\", \"value_1\",", "originalCommit": "66ef18c78cb62d766e29256273e926614f6bf390", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc3NjQxOQ==", "url": "https://github.com/dotCMS/core/pull/18281#discussion_r407776419", "bodyText": "Issue found: The String literal \"attribute_2\" appears 4 times in this file; the first occurrence is on line 71", "author": "dev-dotcms", "createdAt": "2020-04-13T23:26:35Z", "path": "dotCMS/src/test/java/com/dotcms/contenttype/business/FieldAPIImplTest.java", "diffHunk": "@@ -0,0 +1,160 @@\n+package com.dotcms.contenttype.business;\n+\n+import com.dotcms.contenttype.business.FieldAPIImpl;\n+import com.dotcms.contenttype.model.type.ContentType;\n+import com.dotcms.contenttype.transform.contenttype.ContentTypeInternationalization;\n+import com.dotcms.languagevariable.business.LanguageVariableAPI;\n+import com.dotcms.system.event.local.business.LocalSystemEventsAPI;\n+import com.dotmarketing.business.APILocator;\n+import com.dotmarketing.business.PermissionAPI;\n+import com.dotmarketing.business.RelationshipAPI;\n+import com.dotmarketing.business.UserAPI;\n+import com.dotmarketing.exception.DotRuntimeException;\n+import com.dotmarketing.portlets.contentlet.business.ContentletAPI;\n+import com.liferay.portal.model.User;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+import java.net.ConnectException;\n+import java.util.Map;\n+\n+import static com.dotcms.util.CollectionsUtils.map;\n+import static org.mockito.Matchers.*;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+import static org.junit.Assert.assertEquals;\n+\n+public class FieldAPIImplTest {\n+    private static PermissionAPI perAPI;\n+    private static ContentletAPI conAPI;\n+    private static UserAPI userAPI;\n+    private static RelationshipAPI relationshipAPI;\n+    private static LocalSystemEventsAPI localSystemEventsAPI;\n+    private static LanguageVariableAPI languageVariableAPI;\n+\n+    private static FieldAPIImpl fieldAPIImpl;\n+\n+    @BeforeClass\n+    public static void init(){\n+        perAPI = mock(PermissionAPI.class);\n+        conAPI = mock(ContentletAPI.class);\n+        userAPI = mock(UserAPI.class);\n+        relationshipAPI = mock(RelationshipAPI.class);\n+        localSystemEventsAPI = mock(LocalSystemEventsAPI.class);\n+        languageVariableAPI = mock(LanguageVariableAPI.class);\n+\n+        fieldAPIImpl = new FieldAPIImpl(\n+                perAPI,\n+                conAPI,\n+                userAPI,\n+                relationshipAPI,\n+                localSystemEventsAPI,\n+                languageVariableAPI\n+        );\n+    }\n+\n+    /**\n+     * when: you have to language variable for the Content Type's fields\n+     * Should: Change the field property name by the language variable values\n+     */\n+    @Test\n+    public void shouldFieldInternationalizationWork(){\n+        final long languageId = 1;\n+        final boolean live = true;\n+        final User user = mock(User.class);\n+        final Object object = mock(Object.class);\n+\n+        final ContentType contentType = mock(ContentType.class);\n+        final ContentTypeInternationalization contentTypeInternationalization = mock(ContentTypeInternationalization.class);\n+        final Map<String, Object> fieldMap = map(\n+                \"attribute_1\", \"value_1\",\n+                \"attribute_2\", \"value_2\",", "originalCommit": "66ef18c78cb62d766e29256273e926614f6bf390", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc3NjQyNQ==", "url": "https://github.com/dotCMS/core/pull/18281#discussion_r407776425", "bodyText": "Issue found: The String literal \"variable\" appears 4 times in this file; the first occurrence is on line 73", "author": "dev-dotcms", "createdAt": "2020-04-13T23:26:36Z", "path": "dotCMS/src/test/java/com/dotcms/contenttype/business/FieldAPIImplTest.java", "diffHunk": "@@ -0,0 +1,160 @@\n+package com.dotcms.contenttype.business;\n+\n+import com.dotcms.contenttype.business.FieldAPIImpl;\n+import com.dotcms.contenttype.model.type.ContentType;\n+import com.dotcms.contenttype.transform.contenttype.ContentTypeInternationalization;\n+import com.dotcms.languagevariable.business.LanguageVariableAPI;\n+import com.dotcms.system.event.local.business.LocalSystemEventsAPI;\n+import com.dotmarketing.business.APILocator;\n+import com.dotmarketing.business.PermissionAPI;\n+import com.dotmarketing.business.RelationshipAPI;\n+import com.dotmarketing.business.UserAPI;\n+import com.dotmarketing.exception.DotRuntimeException;\n+import com.dotmarketing.portlets.contentlet.business.ContentletAPI;\n+import com.liferay.portal.model.User;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+import java.net.ConnectException;\n+import java.util.Map;\n+\n+import static com.dotcms.util.CollectionsUtils.map;\n+import static org.mockito.Matchers.*;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+import static org.junit.Assert.assertEquals;\n+\n+public class FieldAPIImplTest {\n+    private static PermissionAPI perAPI;\n+    private static ContentletAPI conAPI;\n+    private static UserAPI userAPI;\n+    private static RelationshipAPI relationshipAPI;\n+    private static LocalSystemEventsAPI localSystemEventsAPI;\n+    private static LanguageVariableAPI languageVariableAPI;\n+\n+    private static FieldAPIImpl fieldAPIImpl;\n+\n+    @BeforeClass\n+    public static void init(){\n+        perAPI = mock(PermissionAPI.class);\n+        conAPI = mock(ContentletAPI.class);\n+        userAPI = mock(UserAPI.class);\n+        relationshipAPI = mock(RelationshipAPI.class);\n+        localSystemEventsAPI = mock(LocalSystemEventsAPI.class);\n+        languageVariableAPI = mock(LanguageVariableAPI.class);\n+\n+        fieldAPIImpl = new FieldAPIImpl(\n+                perAPI,\n+                conAPI,\n+                userAPI,\n+                relationshipAPI,\n+                localSystemEventsAPI,\n+                languageVariableAPI\n+        );\n+    }\n+\n+    /**\n+     * when: you have to language variable for the Content Type's fields\n+     * Should: Change the field property name by the language variable values\n+     */\n+    @Test\n+    public void shouldFieldInternationalizationWork(){\n+        final long languageId = 1;\n+        final boolean live = true;\n+        final User user = mock(User.class);\n+        final Object object = mock(Object.class);\n+\n+        final ContentType contentType = mock(ContentType.class);\n+        final ContentTypeInternationalization contentTypeInternationalization = mock(ContentTypeInternationalization.class);\n+        final Map<String, Object> fieldMap = map(\n+                \"attribute_1\", \"value_1\",\n+                \"attribute_2\", \"value_2\",\n+                \"attribute_3\", \"value_3\",\n+                \"variable\", \"testField\",", "originalCommit": "66ef18c78cb62d766e29256273e926614f6bf390", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc3NjQyNw==", "url": "https://github.com/dotCMS/core/pull/18281#discussion_r407776427", "bodyText": "Issue found: Unnecessary modifier 'public' on method 'getFieldInternationalization': the method is declared in an interface type", "author": "dev-dotcms", "createdAt": "2020-04-13T23:26:37Z", "path": "dotCMS/src/main/java/com/dotcms/contenttype/business/FieldAPI.java", "diffHunk": "@@ -229,4 +220,37 @@ default FieldAPI instance() {\n \t * @throws DotDataException\n \t */\n     void saveFields(final List<Field> fields, final User user) throws DotSecurityException, DotDataException;\n+\n+\t/**\n+\t * Apply Internationalization to field property using a Language Variable, for each field property set into\n+\t * fieldMap a Language Variable with the name contentTypeVariable.fieldVariable.propertyName is searched, if it\n+\t * exists then the field's property value is replaced by the language variable value\n+\t *\n+\t * @param contentType\n+\t * @param contentTypeInternationalization set the mode, language and user to search the Language Variable\n+\t * @param fieldMap field properties\n+\t * @return  The Field's properties with the new internationalization values\n+\t */\n+\tpublic Map<String, Object> getFieldInternationalization(\n+\t\t\tfinal ContentType contentType,\n+\t\t\tfinal ContentTypeInternationalization contentTypeInternationalization,\n+\t\t\tfinal Map<String, Object> fieldMap\n+\t);\n+\n+\t/**\n+\t * Apply Internationalization to field property using a Language Variable, for each field property set into\n+\t * fieldMap a Language Variable with the name contentTypeVariable.fieldVariable.propertyName is searched, if it\n+\t * exists then the field's property value is replaced by the language variable value\n+\t *\n+\t * @param contentType\n+\t * @param contentTypeInternationalization set the mode, language and user to search the Language Variable\n+\t * @param fieldMap field properties\n+\t * @return  The Field's properties with the new internationalization values\n+\t */\n+\tpublic Map<String, Object> getFieldInternationalization(", "originalCommit": "66ef18c78cb62d766e29256273e926614f6bf390", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc3NjQzNA==", "url": "https://github.com/dotCMS/core/pull/18281#discussion_r407776434", "bodyText": "Issue found: No need to import a type that lives in the same package", "author": "dev-dotcms", "createdAt": "2020-04-13T23:26:38Z", "path": "dotCMS/src/test/java/com/dotcms/contenttype/business/FieldAPIImplTest.java", "diffHunk": "@@ -0,0 +1,160 @@\n+package com.dotcms.contenttype.business;\n+\n+import com.dotcms.contenttype.business.FieldAPIImpl;", "originalCommit": "66ef18c78cb62d766e29256273e926614f6bf390", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc3NjQ0NA==", "url": "https://github.com/dotCMS/core/pull/18281#discussion_r407776444", "bodyText": "Issue found: Avoid unused imports such as 'org.mockito.Matchers'", "author": "dev-dotcms", "createdAt": "2020-04-13T23:26:39Z", "path": "dotCMS/src/test/java/com/dotcms/contenttype/business/FieldAPIImplTest.java", "diffHunk": "@@ -0,0 +1,160 @@\n+package com.dotcms.contenttype.business;\n+\n+import com.dotcms.contenttype.business.FieldAPIImpl;\n+import com.dotcms.contenttype.model.type.ContentType;\n+import com.dotcms.contenttype.transform.contenttype.ContentTypeInternationalization;\n+import com.dotcms.languagevariable.business.LanguageVariableAPI;\n+import com.dotcms.system.event.local.business.LocalSystemEventsAPI;\n+import com.dotmarketing.business.APILocator;\n+import com.dotmarketing.business.PermissionAPI;\n+import com.dotmarketing.business.RelationshipAPI;\n+import com.dotmarketing.business.UserAPI;\n+import com.dotmarketing.exception.DotRuntimeException;\n+import com.dotmarketing.portlets.contentlet.business.ContentletAPI;\n+import com.liferay.portal.model.User;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+import java.net.ConnectException;\n+import java.util.Map;\n+\n+import static com.dotcms.util.CollectionsUtils.map;\n+import static org.mockito.Matchers.*;", "originalCommit": "66ef18c78cb62d766e29256273e926614f6bf390", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc3NjQ1MQ==", "url": "https://github.com/dotCMS/core/pull/18281#discussion_r407776451", "bodyText": "Issue found: Avoid unused imports such as 'com.dotmarketing.business.APILocator'", "author": "dev-dotcms", "createdAt": "2020-04-13T23:26:40Z", "path": "dotCMS/src/test/java/com/dotcms/contenttype/business/FieldAPIImplTest.java", "diffHunk": "@@ -0,0 +1,160 @@\n+package com.dotcms.contenttype.business;\n+\n+import com.dotcms.contenttype.business.FieldAPIImpl;\n+import com.dotcms.contenttype.model.type.ContentType;\n+import com.dotcms.contenttype.transform.contenttype.ContentTypeInternationalization;\n+import com.dotcms.languagevariable.business.LanguageVariableAPI;\n+import com.dotcms.system.event.local.business.LocalSystemEventsAPI;\n+import com.dotmarketing.business.APILocator;", "originalCommit": "66ef18c78cb62d766e29256273e926614f6bf390", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}