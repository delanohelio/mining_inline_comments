{"pr_number": 18701, "pr_title": "#18697 : Several improvements have been made to the ES implementation\u2026", "pr_createdAt": "2020-06-18T18:38:41Z", "pr_url": "https://github.com/dotCMS/core/pull/18701", "timeline": [{"oid": "b1b4f2a74865b3b64bce8e94cebb6d22d93e4ad7", "url": "https://github.com/dotCMS/core/commit/b1b4f2a74865b3b64bce8e94cebb6d22d93e4ad7", "message": "#18697 : Several improvements have been made to the ES implementation in dotCMS. As part of that, the WhitespaceAnalyzer is not being used anymore. However, there's code that is still using this code and applying other outdated verifications to Lucene queries. For some specific ones, this is causing an error that is keeping the AVAILABLE WORKFLOW ACTIONS button from working as expected.", "committedDate": "2020-06-18T18:38:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg1ODgzMQ==", "url": "https://github.com/dotCMS/core/pull/18701#discussion_r442858831", "bodyText": "is it possible to do any test here?", "author": "freddyucv", "createdAt": "2020-06-19T14:02:23Z", "path": "dotCMS/src/main/java/com/dotmarketing/util/LuceneQueryUtils.java", "diffHunk": "@@ -1,67 +1,44 @@\n package com.dotmarketing.util;\n \n-import com.google.common.collect.ImmutableSet;\n import com.liferay.util.StringPool;\n-import java.util.HashSet;\n-import java.util.List;\n-import java.util.Set;\n-import org.apache.lucene.analysis.core.WhitespaceAnalyzer;\n-import org.apache.lucene.index.Term;\n import org.apache.lucene.queryparser.classic.ParseException;\n-import org.apache.lucene.queryparser.classic.QueryParser;\n-import org.apache.lucene.search.BooleanClause;\n-import org.apache.lucene.search.BooleanClause.Occur;\n-import org.apache.lucene.search.BooleanQuery;\n-import org.apache.lucene.search.TermQuery;\n-\n \n+/**\n+ * Utility class in charge of dealing with Lucene Queries that require a specific formatting, validation, or addition of\n+ * default parameters.\n+ *\n+ * @author Fabrizzio Araya\n+ * @since Jun 21, 2018\n+ */\n public class LuceneQueryUtils {\n \n-\n     /**\n+     * Removes the {@code \"query_\"} prefix that might be included in the Lucene query.\n+     *\n+     * @param luceneQuery The Lucene query.\n      *\n-     * @param luceneQuery\n-     * @return\n+     * @return The Lucene query without the {@code \"query_\"} prefix.\n      */\n     private static String removeQueryPrefix(final String luceneQuery) {\n-\n         return (luceneQuery.startsWith(\"query_\") ? luceneQuery.replace(\"query_\", StringPool.BLANK)\n                 : luceneQuery\n         );\n     }\n \n-    private static Set<BooleanClause> filterQueryTerms = ImmutableSet.of(\n-            new BooleanClause(new TermQuery(new Term(\"contentType\",\"Host\")),Occur.MUST_NOT)\n-    );\n-\n     /**\n-     * This method basically does two things. Gets rid of the 'query_' prefix and also adds an additional condition to ensure we exclude all content of type host\n-     * Since acces to ContentType Host is limited.\n-     * @param luceneQuery\n-     * @return\n-     * @throws ParseException\n+     * This method basically does two things:\n+     * <ol>\n+     *     <li>Gets rid of the 'query_' prefix.</li>\n+     *     <li>Adds an additional condition to ensure we exclude all content of type {@code host} since access to\n+     *     Content Type Host is limited.</li>\n+     * </ol>\n+     *\n+     * @param luceneQuery The Lucene query that will be treated.\n+     *\n+     * @return The sanitized query.\n      */\n-    public static String sanitizeBulkActionsQuery(final String luceneQuery) throws ParseException {\n-\n-        final String cleanedUpQuery = removeQueryPrefix(luceneQuery);\n-        final QueryParser parser = new QueryParser(null, new WhitespaceAnalyzer());\n-        final BooleanQuery query = (BooleanQuery) parser.parse(cleanedUpQuery);\n-        final List<BooleanClause> clauses = query.clauses();\n-        final Set<BooleanClause> clauseSet = new HashSet<>(clauses);\n-        final BooleanQuery.Builder builder = new BooleanQuery.Builder();\n-\n-        for(final BooleanClause clause:clauses){\n-            builder.add(clause);\n-        }\n-\n-        //Do not add terms that are already part of the query.\n-        for (final BooleanClause clause : filterQueryTerms) {\n-              if(!clauseSet.contains(clause)){\n-                 builder.add(clause);\n-              }\n-        }\n-\n-        return builder.build().toString();\n+    public static String sanitizeBulkActionsQuery(final String luceneQuery) {", "originalCommit": "b1b4f2a74865b3b64bce8e94cebb6d22d93e4ad7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc5MTMxNg==", "url": "https://github.com/dotCMS/core/pull/18701#discussion_r455791316", "bodyText": "Is this contentType:host text required for every case? Or just when selecting all the items (not just the paginated)? @wezell", "author": "victoralfaro-dotcms", "createdAt": "2020-07-16T13:37:08Z", "path": "dotCMS/src/main/java/com/dotmarketing/util/LuceneQueryUtils.java", "diffHunk": "@@ -1,67 +1,44 @@\n package com.dotmarketing.util;\n \n-import com.google.common.collect.ImmutableSet;\n import com.liferay.util.StringPool;\n-import java.util.HashSet;\n-import java.util.List;\n-import java.util.Set;\n-import org.apache.lucene.analysis.core.WhitespaceAnalyzer;\n-import org.apache.lucene.index.Term;\n import org.apache.lucene.queryparser.classic.ParseException;\n-import org.apache.lucene.queryparser.classic.QueryParser;\n-import org.apache.lucene.search.BooleanClause;\n-import org.apache.lucene.search.BooleanClause.Occur;\n-import org.apache.lucene.search.BooleanQuery;\n-import org.apache.lucene.search.TermQuery;\n-\n \n+/**\n+ * Utility class in charge of dealing with Lucene Queries that require a specific formatting, validation, or addition of\n+ * default parameters.\n+ *\n+ * @author Fabrizzio Araya\n+ * @since Jun 21, 2018\n+ */\n public class LuceneQueryUtils {\n \n-\n     /**\n+     * Removes the {@code \"query_\"} prefix that might be included in the Lucene query.\n+     *\n+     * @param luceneQuery The Lucene query.\n      *\n-     * @param luceneQuery\n-     * @return\n+     * @return The Lucene query without the {@code \"query_\"} prefix.\n      */\n     private static String removeQueryPrefix(final String luceneQuery) {\n-\n         return (luceneQuery.startsWith(\"query_\") ? luceneQuery.replace(\"query_\", StringPool.BLANK)\n                 : luceneQuery\n         );\n     }\n \n-    private static Set<BooleanClause> filterQueryTerms = ImmutableSet.of(\n-            new BooleanClause(new TermQuery(new Term(\"contentType\",\"Host\")),Occur.MUST_NOT)\n-    );\n-\n     /**\n-     * This method basically does two things. Gets rid of the 'query_' prefix and also adds an additional condition to ensure we exclude all content of type host\n-     * Since acces to ContentType Host is limited.\n-     * @param luceneQuery\n-     * @return\n-     * @throws ParseException\n+     * This method basically does two things:\n+     * <ol>\n+     *     <li>Gets rid of the 'query_' prefix.</li>\n+     *     <li>Adds an additional condition to ensure we exclude all content of type {@code host} since access to\n+     *     Content Type Host is limited.</li>\n+     * </ol>\n+     *\n+     * @param luceneQuery The Lucene query that will be treated.\n+     *\n+     * @return The sanitized query.\n      */\n-    public static String sanitizeBulkActionsQuery(final String luceneQuery) throws ParseException {\n-\n-        final String cleanedUpQuery = removeQueryPrefix(luceneQuery);\n-        final QueryParser parser = new QueryParser(null, new WhitespaceAnalyzer());\n-        final BooleanQuery query = (BooleanQuery) parser.parse(cleanedUpQuery);\n-        final List<BooleanClause> clauses = query.clauses();\n-        final Set<BooleanClause> clauseSet = new HashSet<>(clauses);\n-        final BooleanQuery.Builder builder = new BooleanQuery.Builder();\n-\n-        for(final BooleanClause clause:clauses){\n-            builder.add(clause);\n-        }\n-\n-        //Do not add terms that are already part of the query.\n-        for (final BooleanClause clause : filterQueryTerms) {\n-              if(!clauseSet.contains(clause)){\n-                 builder.add(clause);\n-              }\n-        }\n-\n-        return builder.build().toString();\n+    public static String sanitizeBulkActionsQuery(final String luceneQuery) {\n+        return removeQueryPrefix(luceneQuery) + \" -contentType:host\";", "originalCommit": "b1b4f2a74865b3b64bce8e94cebb6d22d93e4ad7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTgxMzUzNA==", "url": "https://github.com/dotCMS/core/pull/18701#discussion_r455813534", "bodyText": "So, this query is for bulk actions.  Hosts should never be included in buik actions (even if they get included in a content query), so I think this is ok.", "author": "wezell", "createdAt": "2020-07-16T14:07:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc5MTMxNg=="}], "type": "inlineReview"}, {"oid": "70c18acc2f89718babed4bc5eedad88e4028081e", "url": "https://github.com/dotCMS/core/commit/70c18acc2f89718babed4bc5eedad88e4028081e", "message": "Update of unit tests to evaluate new suffix at bulk action queries", "committedDate": "2020-07-16T16:21:21Z", "type": "commit"}]}