{"pr_number": 19076, "pr_title": "#19070 almost all template properties working", "pr_createdAt": "2020-08-11T23:13:27Z", "pr_url": "https://github.com/dotCMS/core/pull/19076", "timeline": [{"oid": "1014ab10a7afca5ea8a9a5bbe8479c23044d8b75", "url": "https://github.com/dotCMS/core/commit/1014ab10a7afca5ea8a9a5bbe8479c23044d8b75", "message": "#19070 almost all template properties working", "committedDate": "2020-08-11T23:12:42Z", "type": "commit"}, {"oid": "92bb3f3ad6ea7f31a7259bb351b95b3306d32395", "url": "https://github.com/dotCMS/core/commit/92bb3f3ad6ea7f31a7259bb351b95b3306d32395", "message": "19070 missing properties for template", "committedDate": "2020-08-12T23:37:08Z", "type": "commit"}, {"oid": "8ea6df55590aa4f2fbff7cbdf4929f3e9f5e3bcf", "url": "https://github.com/dotCMS/core/commit/8ea6df55590aa4f2fbff7cbdf4929f3e9f5e3bcf", "message": "#19070 postman tests", "committedDate": "2020-08-13T22:21:03Z", "type": "commit"}, {"oid": "b78fb26acebed2316f59e360a34b083d39a2d7fd", "url": "https://github.com/dotCMS/core/commit/b78fb26acebed2316f59e360a34b083d39a2d7fd", "message": "#19070 codacy feedback", "committedDate": "2020-08-13T22:24:34Z", "type": "commit"}, {"oid": "d0ad61e7102482b7ceba97d6441b5038bd4ef6a1", "url": "https://github.com/dotCMS/core/commit/d0ad61e7102482b7ceba97d6441b5038bd4ef6a1", "message": "#19070 javadoc", "committedDate": "2020-08-13T22:27:05Z", "type": "commit"}, {"oid": "dbd530f80c0dc1c7d23d1e0b83f27a503bc220c5", "url": "https://github.com/dotCMS/core/commit/dbd530f80c0dc1c7d23d1e0b83f27a503bc220c5", "message": "#19070 fix postman test", "committedDate": "2020-08-14T19:36:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDgzMjUyOA==", "url": "https://github.com/dotCMS/core/pull/19076#discussion_r470832528", "bodyText": "Codacy found an issue: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block", "author": "dev-dotcms", "createdAt": "2020-08-14T19:43:17Z", "path": "dotCMS/src/main/java/com/dotcms/graphql/datafetcher/page/TemplateDataFetcher.java", "diffHunk": "@@ -0,0 +1,93 @@\n+package com.dotcms.graphql.datafetcher.page;\n+\n+import com.dotcms.graphql.DotGraphQLContext;\n+import com.dotmarketing.business.APILocator;\n+import com.dotmarketing.business.PermissionLevel;\n+import com.dotmarketing.exception.DotDataException;\n+import com.dotmarketing.exception.DotRuntimeException;\n+import com.dotmarketing.exception.DotSecurityException;\n+import com.dotmarketing.portlets.contentlet.model.Contentlet;\n+import com.dotmarketing.portlets.htmlpageasset.business.HTMLPageAssetAPI;\n+import com.dotmarketing.portlets.htmlpageasset.business.render.page.JsonMapper;\n+import com.dotmarketing.portlets.htmlpageasset.model.HTMLPageAsset;\n+import com.dotmarketing.portlets.templates.model.Template;\n+import com.dotmarketing.util.Logger;\n+import com.dotmarketing.util.PageMode;\n+import com.fasterxml.jackson.databind.ObjectWriter;\n+import com.liferay.portal.model.User;\n+import graphql.schema.DataFetcher;\n+import graphql.schema.DataFetchingEnvironment;\n+import java.io.CharArrayReader;\n+import java.io.IOException;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+/**\n+ * This DataFetcher returns a {@link Map} representing a {@link Template} associated to the originally\n+ * requested {@link HTMLPageAsset}.\n+ */\n+public class TemplateDataFetcher implements DataFetcher<Map<Object, Object>> {\n+    @Override\n+    public Map<Object, Object> get(final DataFetchingEnvironment environment) throws Exception {\n+        try {\n+            final User user = ((DotGraphQLContext) environment.getContext()).getUser();\n+            final Contentlet contentlet = environment.getSource();\n+            final String pageModeAsString = environment.getArgument(\"pageMode\")\n+                    != null ? environment.getArgument(\"pageMode\") : PageMode.LIVE.name();\n+\n+            final PageMode mode = PageMode.get(pageModeAsString);\n+\n+            final String templateId = contentlet.getStringProperty(HTMLPageAssetAPI.TEMPLATE_FIELD);\n+\n+            final Template template = getTemplate(templateId, mode);\n+\n+            return asMap(template, user);\n+        } catch (Exception e) {", "originalCommit": "dbd530f80c0dc1c7d23d1e0b83f27a503bc220c5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}