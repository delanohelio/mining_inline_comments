{"pr_number": 19459, "pr_title": "#19452 Not use dotRaw when the field is a integer", "pr_createdAt": "2020-10-16T19:02:39Z", "pr_url": "https://github.com/dotCMS/core/pull/19459", "timeline": [{"oid": "ff7eb07277b850a9027e4716f4e98d993c96cfd5", "url": "https://github.com/dotCMS/core/commit/ff7eb07277b850a9027e4716f4e98d993c96cfd5", "message": "#19452 Not use dotRaw when the field is a integer", "committedDate": "2020-10-16T19:01:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY5MTAxNA==", "url": "https://github.com/dotCMS/core/pull/19459#discussion_r506691014", "bodyText": "Please add a test for a DataTypes.FLOAT as well", "author": "nollymar", "createdAt": "2020-10-16T19:53:06Z", "path": "dotCMS/src/integration-test/java/com/dotmarketing/cms/urlmap/URLMapAPIImplTest.java", "diffHunk": "@@ -668,4 +659,43 @@ private UrlMapContext getUrlMapContext(final User systemUser, final Host host, f\n     private UrlMapContext getUrlMapContext(final User systemUser, final Host host, final String uri) {\n         return getUrlMapContext(systemUser, host, uri, PageMode.PREVIEW_MODE);\n     }\n+\n+    /**\n+     * methodToTest {@link URLMapAPIImpl#processURLMap(UrlMapContext)}\n+     * Given Scenario: Process a URL Map url when both the Content Type and Content exists but the field to Map is a\n+     * {@link com.dotcms.contenttype.model.field.DataTypes#INTEGER}\n+     * ExpectedResult: Should return a {@link URLMapInfo} wit the right content ans detail page\n+     */\n+    @Test\n+    public void shouldReturnContentletWhenTheContentExistsAndUseAIntegerFIeld()", "originalCommit": "ff7eb07277b850a9027e4716f4e98d993c96cfd5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkzMzE1Nw==", "url": "https://github.com/dotCMS/core/pull/19459#discussion_r507933157", "bodyText": "done 0699dee#diff-de0fb9193432881efb85f6e38c30df1524a2a3e392f54d744734dd37520586daR701", "author": "freddyucv", "createdAt": "2020-10-19T17:37:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY5MTAxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY5MTIyMg==", "url": "https://github.com/dotCMS/core/pull/19459#discussion_r506691222", "bodyText": "would it work for DataType.FLOAT", "author": "nollymar", "createdAt": "2020-10-16T19:53:37Z", "path": "dotCMS/src/main/java/com/dotmarketing/cms/urlmap/URLMapAPIImpl.java", "diffHunk": "@@ -205,17 +206,30 @@ private String buildFields(final ContentType structure,\n         final StringBuilder query = new StringBuilder();\n         final List<RegExMatch> groups = matches.getMatches().get(0).getGroups();\n         final List<String> fieldMatches = matches.getPatternChange().getFieldMatches();\n-\n         int counter = 0;\n+\n+        final Map<String, Field> fieldMap = structure.fieldMap();\n+\n         for (final RegExMatch regExMatch : groups) {\n \n             String value = regExMatch.getMatch();\n             if (value.endsWith(\"/\")) {\n                 value = value.substring(0, value.length() - 1);\n             }\n-            query.append('+').append(structure.variable()).append('.')\n-                    .append(fieldMatches.get(counter)).append(\"_dotRaw\").append(':')\n-                    .append(ESUtils.escapeExcludingSlashIncludingSpace(value)).append(' ');\n+            query.append('+')\n+                    .append(structure.variable()).append('.');\n+\n+            final String variableName = fieldMatches.get(counter);\n+            final Field field = fieldMap.get(variableName);\n+\n+            if (field.dataType().equals(DataTypes.INTEGER)){", "originalCommit": "ff7eb07277b850a9027e4716f4e98d993c96cfd5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY5MTQ2Mw==", "url": "https://github.com/dotCMS/core/pull/19459#discussion_r506691463", "bodyText": "Is there any test for the happy path (non-number)?", "author": "nollymar", "createdAt": "2020-10-16T19:54:14Z", "path": "dotCMS/src/integration-test/java/com/dotmarketing/cms/urlmap/URLMapAPIImplTest.java", "diffHunk": "@@ -668,4 +659,43 @@ private UrlMapContext getUrlMapContext(final User systemUser, final Host host, f\n     private UrlMapContext getUrlMapContext(final User systemUser, final Host host, final String uri) {\n         return getUrlMapContext(systemUser, host, uri, PageMode.PREVIEW_MODE);\n     }\n+\n+    /**\n+     * methodToTest {@link URLMapAPIImpl#processURLMap(UrlMapContext)}\n+     * Given Scenario: Process a URL Map url when both the Content Type and Content exists but the field to Map is a\n+     * {@link com.dotcms.contenttype.model.field.DataTypes#INTEGER}\n+     * ExpectedResult: Should return a {@link URLMapInfo} wit the right content ans detail page\n+     */\n+    @Test\n+    public void shouldReturnContentletWhenTheContentExistsAndUseAIntegerFIeld()", "originalCommit": "ff7eb07277b850a9027e4716f4e98d993c96cfd5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc4NDg0Nw==", "url": "https://github.com/dotCMS/core/pull/19459#discussion_r507784847", "bodyText": "Yes", "author": "freddyucv", "createdAt": "2020-10-19T14:15:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY5MTQ2Mw=="}], "type": "inlineReview"}, {"oid": "0699deeb5e145914cc439fa7061bdb1f8b9d9ae0", "url": "https://github.com/dotCMS/core/commit/0699deeb5e145914cc439fa7061bdb1f8b9d9ae0", "message": "#19452 Fix to float field too", "committedDate": "2020-10-19T17:36:23Z", "type": "commit"}, {"oid": "0c3a2833803c7085d03dbf07c5dbe71e207a05e3", "url": "https://github.com/dotCMS/core/commit/0c3a2833803c7085d03dbf07c5dbe71e207a05e3", "message": "#19452 Fix to float field too", "committedDate": "2020-10-19T17:39:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkzODc0Mg==", "url": "https://github.com/dotCMS/core/pull/19459#discussion_r507938742", "bodyText": "Update this comment", "author": "nollymar", "createdAt": "2020-10-19T17:43:11Z", "path": "dotCMS/src/integration-test/java/com/dotmarketing/cms/urlmap/URLMapAPIImplTest.java", "diffHunk": "@@ -668,4 +659,81 @@ private UrlMapContext getUrlMapContext(final User systemUser, final Host host, f\n     private UrlMapContext getUrlMapContext(final User systemUser, final Host host, final String uri) {\n         return getUrlMapContext(systemUser, host, uri, PageMode.PREVIEW_MODE);\n     }\n+\n+    /**\n+     * methodToTest {@link URLMapAPIImpl#processURLMap(UrlMapContext)}\n+     * Given Scenario: Process a URL Map url when both the Content Type and Content exists but the field to Map is a\n+     * {@link com.dotcms.contenttype.model.field.DataTypes#INTEGER}\n+     * ExpectedResult: Should return a {@link URLMapInfo} wit the right content ans detail page\n+     */\n+    @Test\n+    public void shouldReturnContentletWhenTheContentExistsAndUseAIntegerFIeld()\n+            throws DotDataException, DotSecurityException {\n+        final String newsPatternPrefix =\n+                \"integer\" + TEST_PATTERN + System.currentTimeMillis() + \"/\";\n+\n+\n+        final Field field = new FieldDataGen().dataType(DataTypes.INTEGER).next();\n+        final String urlMapper = newsPatternPrefix  + \"{\" + field.variable() + \"}\";\n+        final ContentType contentType = new ContentTypeDataGen()\n+                .field(field)\n+                .detailPage(detailPage1.getIdentifier())\n+                .urlMapPattern(urlMapper)\n+                .nextPersisted();\n+\n+        final Contentlet newsTestContent = new ContentletDataGen(contentType.id())\n+                .setProperty(field.variable(), 2)\n+                .languageId(1)\n+                .host(host)\n+                .nextPersisted();\n+\n+        final UrlMapContext context = getUrlMapContext(systemUser, host,\n+                newsPatternPrefix + newsTestContent.getStringProperty(field.variable()));\n+\n+        final Optional<URLMapInfo> urlMapInfoOptional = urlMapAPI.processURLMap(context);\n+\n+        assertTrue(urlMapInfoOptional.isPresent());\n+        final URLMapInfo urlMapInfo = urlMapInfoOptional.get();\n+        assertEquals(newsTestContent.getLongProperty(field.variable()),\n+                urlMapInfo.getContentlet().getLongProperty(field.variable()));\n+        assertEquals(\"/news-events/news/news-detail\", urlMapInfo.getIdentifier().getURI());\n+    }\n+\n+    /**\n+     * methodToTest {@link URLMapAPIImpl#processURLMap(UrlMapContext)}\n+     * Given Scenario: Process a URL Map url when both the Content Type and Content exists but the field to Map is a\n+     * {@link com.dotcms.contenttype.model.field.DataTypes#INTEGER}", "originalCommit": "0c3a2833803c7085d03dbf07c5dbe71e207a05e3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk0MjUyNA==", "url": "https://github.com/dotCMS/core/pull/19459#discussion_r507942524", "bodyText": "done f17437f#diff-de0fb9193432881efb85f6e38c30df1524a2a3e392f54d744734dd37520586daR705", "author": "freddyucv", "createdAt": "2020-10-19T17:47:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkzODc0Mg=="}], "type": "inlineReview"}, {"oid": "f17437f7adc0402fb60bbb10ce4d32760dd8a60d", "url": "https://github.com/dotCMS/core/commit/f17437f7adc0402fb60bbb10ce4d32760dd8a60d", "message": "#19452 Fix to float field too", "committedDate": "2020-10-19T17:46:33Z", "type": "commit"}, {"oid": "35b461912a8c89f0e1a6938de53d656d05d84e15", "url": "https://github.com/dotCMS/core/commit/35b461912a8c89f0e1a6938de53d656d05d84e15", "message": "Merge remote-tracking branch 'origin/master' into issue-19452-URL-maps-which-match-the-URL-map-pattern-and-content-values-fail-with-404-on-customer-system", "committedDate": "2020-10-20T20:09:54Z", "type": "commit"}, {"oid": "4c98e101edbee24413b465190bb468dd4a7317c7", "url": "https://github.com/dotCMS/core/commit/4c98e101edbee24413b465190bb468dd4a7317c7", "message": "Fixing test", "committedDate": "2020-10-20T22:01:51Z", "type": "commit"}, {"oid": "cf6494f1b136b198306d41b81e9b176151a991c6", "url": "https://github.com/dotCMS/core/commit/cf6494f1b136b198306d41b81e9b176151a991c6", "message": "merge", "committedDate": "2020-10-21T17:43:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTUwMzQxOA==", "url": "https://github.com/dotCMS/core/pull/19459#discussion_r509503418", "bodyText": "Codacy found an issue: Avoid unused imports such as 'org.jgroups.util.Util'", "author": "dev-dotcms", "createdAt": "2020-10-21T17:50:16Z", "path": "dotCMS/src/integration-test/java/com/dotmarketing/cms/urlmap/URLMapAPIImplTest.java", "diffHunk": "@@ -1,20 +1,16 @@\n package com.dotmarketing.cms.urlmap;\n \n import static com.dotcms.datagen.TestDataUtils.getNewsLikeContentType;\n-import static org.jgroups.util.Util.assertEquals;\n-import static org.jgroups.util.Util.assertFalse;\n+import static org.jgroups.util.Util.*;", "originalCommit": "cf6494f1b136b198306d41b81e9b176151a991c6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTUwMzQ4Mg==", "url": "https://github.com/dotCMS/core/pull/19459#discussion_r509503482", "bodyText": "Codacy found an issue: Avoid unused imports such as 'com.dotcms.datagen'", "author": "dev-dotcms", "createdAt": "2020-10-21T17:50:17Z", "path": "dotCMS/src/integration-test/java/com/dotmarketing/cms/urlmap/URLMapAPIImplTest.java", "diffHunk": "@@ -1,20 +1,16 @@\n package com.dotmarketing.cms.urlmap;\n \n import static com.dotcms.datagen.TestDataUtils.getNewsLikeContentType;\n-import static org.jgroups.util.Util.assertEquals;\n-import static org.jgroups.util.Util.assertFalse;\n+import static org.jgroups.util.Util.*;\n import static org.mockito.Mockito.mock;\n import static org.powermock.api.mockito.PowerMockito.when;\n \n import com.dotcms.api.web.HttpServletRequestThreadLocal;\n import com.dotcms.contenttype.business.ContentTypeAPI;\n+import com.dotcms.contenttype.model.field.DataTypes;\n+import com.dotcms.contenttype.model.field.Field;\n import com.dotcms.contenttype.model.type.ContentType;\n-import com.dotcms.datagen.FolderDataGen;\n-import com.dotcms.datagen.HTMLPageDataGen;\n-import com.dotcms.datagen.SiteDataGen;\n-import com.dotcms.datagen.TemplateDataGen;\n-import com.dotcms.datagen.TestDataUtils;\n-import com.dotcms.datagen.UserDataGen;\n+import com.dotcms.datagen.*;", "originalCommit": "cf6494f1b136b198306d41b81e9b176151a991c6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTUwMzUzOA==", "url": "https://github.com/dotCMS/core/pull/19459#discussion_r509503538", "bodyText": "Codacy found an issue: Avoid unused imports such as 'com.dotcms.content.elasticsearch.constants.ESMappingConstants'", "author": "dev-dotcms", "createdAt": "2020-10-21T17:50:18Z", "path": "dotCMS/src/main/java/com/dotmarketing/cms/urlmap/URLMapAPIImpl.java", "diffHunk": "@@ -1,12 +1,13 @@\n package com.dotmarketing.cms.urlmap;\n \n+import com.dotcms.content.elasticsearch.constants.ESMappingConstants;", "originalCommit": "cf6494f1b136b198306d41b81e9b176151a991c6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTUwMzU2OQ==", "url": "https://github.com/dotCMS/core/pull/19459#discussion_r509503569", "bodyText": "Codacy found an issue: Field dataType has the same name as a method", "author": "dev-dotcms", "createdAt": "2020-10-21T17:50:19Z", "path": "dotCMS/src/integration-test/java/com/dotcms/datagen/FieldDataGen.java", "diffHunk": "@@ -24,6 +25,8 @@\n     private boolean unique = Boolean.FALSE;\n     private String contentTypeId;\n     private String relationType;\n+    private DataTypes dataType;", "originalCommit": "cf6494f1b136b198306d41b81e9b176151a991c6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}