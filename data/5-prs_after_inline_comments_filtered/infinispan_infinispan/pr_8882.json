{"pr_number": 8882, "pr_title": "ISPN-12500 Custom server paths", "pr_createdAt": "2020-11-24T08:47:00Z", "pr_url": "https://github.com/infinispan/infinispan/pull/8882", "timeline": [{"oid": "0356025c8aa1158fc0235cfa5d8a9687a39375b8", "url": "https://github.com/infinispan/infinispan/commit/0356025c8aa1158fc0235cfa5d8a9687a39375b8", "message": "ISPN-12500 Custom server paths", "committedDate": "2020-11-24T08:51:52Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTMyNDc3MA==", "url": "https://github.com/infinispan/infinispan/pull/8882#discussion_r529324770", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                * directory undert the server root.\n          \n          \n            \n                * directory under the server root.", "author": "oraNod", "createdAt": "2020-11-24T09:13:02Z", "path": "server/runtime/src/main/java/org/infinispan/server/loader/Loader.java", "diffHunk": "@@ -32,6 +34,11 @@\n     * directory under the server home.\n     */\n    public static final String INFINISPAN_SERVER_ROOT_PATH = \"infinispan.server.root.path\";\n+   /**\n+    * Property name indicating the paths to the server lib directories. If unspecified, defaults to the <i>lib</i>\n+    * directory undert the server root.", "originalCommit": "0356025c8aa1158fc0235cfa5d8a9687a39375b8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "753ce1acf800c3a553223943c5bc063193249d56", "url": "https://github.com/infinispan/infinispan/commit/753ce1acf800c3a553223943c5bc063193249d56", "message": "ISPN-12500 Custom server paths", "committedDate": "2020-11-24T11:50:29Z", "type": "forcePushed"}, {"oid": "1d562e8c2026fb8d7acdd3ef02e9b85d0062efce", "url": "https://github.com/infinispan/infinispan/commit/1d562e8c2026fb8d7acdd3ef02e9b85d0062efce", "message": "ISPN-12500 Custom server paths", "committedDate": "2020-11-24T14:23:33Z", "type": "forcePushed"}, {"oid": "83089ac7fa494bd09c1fbc848caf502ca2c02493", "url": "https://github.com/infinispan/infinispan/commit/83089ac7fa494bd09c1fbc848caf502ca2c02493", "message": "ISPN-12500 Custom server paths", "committedDate": "2020-11-25T16:00:21Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA2NzAyOA==", "url": "https://github.com/infinispan/infinispan/pull/8882#discussion_r534067028", "bodyText": "nit: can you normalize the path?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        try {\n          \n          \n            \n                        try {\n          \n          \n            \n                            p = p.toAbsolutePath().normalize();\n          \n      \n    \n    \n  \n\nJust to get a \"more readable\" error message than this :)\nException in thread \"main\" java.lang.IllegalArgumentException: Duplicate JARs:\n../../../../counter/target/infinispan-clustered-counter-12.0.0-SNAPSHOT-test-sources.jar\nfile:/home/pedro/Work/infinispan/server/runtime/target/infinispan-server-12.0.0-SNAPSHOT/../../../../counter/target/infinispan-clustered-counter-12.0.0-SNAPSHOT-sources.jar", "author": "pruivo", "createdAt": "2020-12-02T10:41:30Z", "path": "server/runtime/src/main/java/org/infinispan/server/loader/Loader.java", "diffHunk": "@@ -82,21 +90,27 @@ public static void run(String[] args, Properties properties) {\n \n    public static ClassLoader classLoaderFromPath(Path path, ClassLoader parent) {\n       try {\n-         Map<String, URL> jars = new HashMap<>();\n-         Files.walk(path)\n-               .filter(f -> f.toString().endsWith(\".jar\"))\n-               .forEach(jar -> {\n-                  try {\n-                     String artifact = extractArtifactName(jar.getFileName().toString());\n-                     if (jars.containsKey(artifact)) {\n-                        throw new IllegalArgumentException(\"Duplicate JARs:\\n\" + jar + \"\\n\" + jars.get(artifact));\n-                     } else {\n-                        jars.put(artifact, jar.toUri().toURL());\n-                     }\n-                  } catch (MalformedURLException e) {\n+         if (!Files.exists(path)) {\n+            return parent;\n+         }\n+         Map<String, URL> urls = new LinkedHashMap<>();\n+         Files.find(path, Integer.MAX_VALUE, (p, a) -> p.toString().endsWith(\".jar\") || a.isDirectory(), FileVisitOption.FOLLOW_LINKS).forEach(p -> {\n+            try {", "originalCommit": "83089ac7fa494bd09c1fbc848caf502ca2c02493", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE0NjU2OQ==", "url": "https://github.com/infinispan/infinispan/pull/8882#discussion_r534146569", "bodyText": "Ok", "author": "tristantarrant", "createdAt": "2020-12-02T12:57:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA2NzAyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA2NzkzNQ==", "url": "https://github.com/infinispan/infinispan/pull/8882#discussion_r534067935", "bodyText": "is this required? I think find() will enter the directory and give you the jars.", "author": "pruivo", "createdAt": "2020-12-02T10:42:52Z", "path": "server/runtime/src/main/java/org/infinispan/server/loader/Loader.java", "diffHunk": "@@ -82,21 +90,27 @@ public static void run(String[] args, Properties properties) {\n \n    public static ClassLoader classLoaderFromPath(Path path, ClassLoader parent) {\n       try {\n-         Map<String, URL> jars = new HashMap<>();\n-         Files.walk(path)\n-               .filter(f -> f.toString().endsWith(\".jar\"))\n-               .forEach(jar -> {\n-                  try {\n-                     String artifact = extractArtifactName(jar.getFileName().toString());\n-                     if (jars.containsKey(artifact)) {\n-                        throw new IllegalArgumentException(\"Duplicate JARs:\\n\" + jar + \"\\n\" + jars.get(artifact));\n-                     } else {\n-                        jars.put(artifact, jar.toUri().toURL());\n-                     }\n-                  } catch (MalformedURLException e) {\n+         if (!Files.exists(path)) {\n+            return parent;\n+         }\n+         Map<String, URL> urls = new LinkedHashMap<>();\n+         Files.find(path, Integer.MAX_VALUE, (p, a) -> p.toString().endsWith(\".jar\") || a.isDirectory(), FileVisitOption.FOLLOW_LINKS).forEach(p -> {\n+            try {\n+               if (p.toString().endsWith(\".jar\")) {\n+                  String artifact = extractArtifactName(p.getFileName().toString());\n+                  if (urls.containsKey(artifact)) {\n+                     throw new IllegalArgumentException(\"Duplicate JARs:\\n\" + p + \"\\n\" + urls.get(artifact));\n+                  } else {\n+                     urls.put(artifact, p.toUri().toURL());\n                   }\n-               });\n-         final URL[] array = jars.values().toArray(new URL[jars.size()]);\n+               } else {\n+                  // It's a directory", "originalCommit": "83089ac7fa494bd09c1fbc848caf502ca2c02493", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE0NzY3OA==", "url": "https://github.com/infinispan/infinispan/pull/8882#discussion_r534147678", "bodyText": "find() returns both files and directories and we need to process them differently. URLClassLoader treats non-jar URIs as root paths where to look for \"bare\" resources such as property files.", "author": "tristantarrant", "createdAt": "2020-12-02T12:59:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA2NzkzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA3ODc4MA==", "url": "https://github.com/infinispan/infinispan/pull/8882#discussion_r534078780", "bodyText": "nit:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               public static void main(String args[]) {\n          \n          \n            \n               public static void main(String[] args) {", "author": "pruivo", "createdAt": "2020-12-02T11:00:12Z", "path": "server/runtime/src/test/java/org/infinispan/server/loader/LoaderTest.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package org.infinispan.server.loader;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.net.URLClassLoader;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.Properties;\n+\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.exporter.ZipExporter;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n+import org.junit.Test;\n+\n+/**\n+ * @author Tristan Tarrant &lt;tristan@infinispan.org&gt;\n+ * @since 12.0\n+ **/\n+public class LoaderTest {\n+\n+   @Test\n+   public void testLoader() throws IOException {\n+      Path path = Paths.get(System.getProperty(\"build.directory\"), \"test-classes\", \"server\");\n+      Path lib1 = path.resolve(\"lib1\");\n+      Path lib2 = path.resolve(\"lib2\");\n+      Path lib3 = Files.createDirectories(lib2.resolve(\"lib3\"));\n+      ShrinkWrap.create(JavaArchive.class,\"two.jar\")\n+            .addClasses(TwoClass.class).as(ZipExporter.class).exportTo(lib2.resolve(\"two.jar\").toFile(), true);\n+      ShrinkWrap.create(JavaArchive.class,\"three.jar\")\n+            .addClasses(ThreeClass.class).as(ZipExporter.class).exportTo(lib3.resolve(\"three.jar\").toFile(), true);\n+      Properties properties = new Properties();\n+      properties.put(Loader.INFINISPAN_SERVER_LIB_PATH, String.join(File.pathSeparator, lib1.toString(), lib2.toString(), lib3.toString()));\n+      Loader.run(new String[]{LoaderTest.class.getName()}, properties);\n+   }\n+\n+   public static void main(String args[]) {", "originalCommit": "83089ac7fa494bd09c1fbc848caf502ca2c02493", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "98b28dbe7fee92505c0d76fa3bc0f418a9c3c7ba", "url": "https://github.com/infinispan/infinispan/commit/98b28dbe7fee92505c0d76fa3bc0f418a9c3c7ba", "message": "ISPN-12500 Custom server paths", "committedDate": "2020-12-02T14:59:36Z", "type": "forcePushed"}, {"oid": "dc80df18abec9cb1882ec4d6ba284fcd9a180685", "url": "https://github.com/infinispan/infinispan/commit/dc80df18abec9cb1882ec4d6ba284fcd9a180685", "message": "ISPN-12500 Custom server paths", "committedDate": "2020-12-02T16:06:04Z", "type": "commit"}, {"oid": "dc80df18abec9cb1882ec4d6ba284fcd9a180685", "url": "https://github.com/infinispan/infinispan/commit/dc80df18abec9cb1882ec4d6ba284fcd9a180685", "message": "ISPN-12500 Custom server paths", "committedDate": "2020-12-02T16:06:04Z", "type": "forcePushed"}]}