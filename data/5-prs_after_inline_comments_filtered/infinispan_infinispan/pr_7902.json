{"pr_number": 7902, "pr_title": "ISPN-11280 More ConditionFuture updates", "pr_createdAt": "2020-02-17T10:12:09Z", "pr_url": "https://github.com/infinispan/infinispan/pull/7902", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzMjU2MQ==", "url": "https://github.com/infinispan/infinispan/pull/7902#discussion_r380132561", "bodyText": "why not use new ArrayList<>(futures.values());", "author": "pruivo", "createdAt": "2020-02-17T11:38:05Z", "path": "core/src/main/java/org/infinispan/util/concurrent/ConditionFuture.java", "diffHunk": "@@ -100,17 +100,19 @@ public void updateAsync(T value, Executor executor) {\n       try {\n          executor.execute(() -> checkConditions(value));\n       } catch (Throwable t) {\n-         List<CompletableFuture<?>> completed;\n-         synchronized (futures) {\n-            completed = new ArrayList<>(futures.size());\n-            for (Data data : futures.values()) {\n-               data.cancelFuture.cancel(false);\n-               completed.add(data);\n-            }\n-         }\n-         for (CompletableFuture<?> future : completed) {\n-            future.completeExceptionally(t);\n-         }\n+         completeAllExceptionally(t);\n+      }\n+   }\n+\n+   private void completeAllExceptionally(Throwable t) {\n+      List<Data> completed;\n+      synchronized (futures) {\n+         completed = new ArrayList<>(futures.size());", "originalCommit": "8f7ef234f5ed4467a3d002eadeb82df69cd960b1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI0NzQ1Ng==", "url": "https://github.com/infinispan/infinispan/pull/7902#discussion_r380247456", "bodyText": "Done", "author": "danberindei", "createdAt": "2020-02-17T15:32:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzMjU2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzMjkwNA==", "url": "https://github.com/infinispan/infinispan/pull/7902#discussion_r380132904", "bodyText": "unused import.", "author": "pruivo", "createdAt": "2020-02-17T11:38:52Z", "path": "core/src/test/java/org/infinispan/test/Exceptions.java", "diffHunk": "@@ -1,6 +1,8 @@\n package org.infinispan.test;\n \n import java.util.concurrent.Callable;\n+import java.util.concurrent.CompletionException;", "originalCommit": "8f7ef234f5ed4467a3d002eadeb82df69cd960b1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b3f537aebdbf3eb313c5dfa78df251d3c5dd3ef9", "url": "https://github.com/infinispan/infinispan/commit/b3f537aebdbf3eb313c5dfa78df251d3c5dd3ef9", "message": "ISPN-11280 More ConditionFuture updates", "committedDate": "2020-02-17T15:32:31Z", "type": "forcePushed"}, {"oid": "5dd2907082e170625b2ff9ed7e1a815fd82a405a", "url": "https://github.com/infinispan/infinispan/commit/5dd2907082e170625b2ff9ed7e1a815fd82a405a", "message": "ISPN-11280 More ConditionFuture updates", "committedDate": "2020-02-18T11:08:49Z", "type": "commit"}, {"oid": "5dd2907082e170625b2ff9ed7e1a815fd82a405a", "url": "https://github.com/infinispan/infinispan/commit/5dd2907082e170625b2ff9ed7e1a815fd82a405a", "message": "ISPN-11280 More ConditionFuture updates", "committedDate": "2020-02-18T11:08:49Z", "type": "forcePushed"}]}