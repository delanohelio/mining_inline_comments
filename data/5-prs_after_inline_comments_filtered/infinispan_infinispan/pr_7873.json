{"pr_number": 7873, "pr_title": "ISPN-11323 solate JGroupsTransport MBean references to private methods", "pr_createdAt": "2020-02-11T16:08:55Z", "pr_url": "https://github.com/infinispan/infinispan/pull/7873", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc2ODg5MA==", "url": "https://github.com/infinispan/infinispan/pull/7873#discussion_r377768890", "bodyText": "No, this does not start JMX :) Please name it registerMBeans.", "author": "anistor", "createdAt": "2020-02-11T17:00:31Z", "path": "core/src/main/java/org/infinispan/remoting/transport/jgroups/JGroupsTransport.java", "diffHunk": "@@ -523,27 +523,31 @@ protected void startJGroupsChannelIfNeeded() {\n          } catch (Exception e) {\n             throw new CacheException(\"Unable to start JGroups Channel\", e);\n          }\n-\n-         try {\n-            // Normally this would be done by CacheManagerJmxRegistration but\n-            // the channel is not started when the cache manager starts but\n-            // when first cache starts, so it's safer to do it here.\n-            globalStatsEnabled = configuration.statistics();\n-            if (globalStatsEnabled) {\n-               // TODO Use the overloaded variant when available: https://issues.jboss.org/browse/JGRP-2394\n-               JmxConfigurator.registerChannel(channel, jmxRegistration.getMBeanServer(), jmxRegistration.getDomain(), clusterName, true);\n-            }\n-         } catch (Exception e) {\n-            throw new CacheException(\"Channel connected, but unable to register MBeans\", e);\n-         }\n       }\n+      startJmxIfNeeded(clusterName);\n       if (!connectChannel) {\n          // the channel was already started externally, we need to initialize our member list\n          receiveClusterView(channel.getView());\n       }\n       CLUSTER.localAndPhysicalAddress(clusterName, getAddress(), getPhysicalAddresses());\n    }\n \n+   // This needs to stay as a separate method to allow for substitution for Substrate\n+   private void startJmxIfNeeded(String clusterName) {", "originalCommit": "fcf2f790073832fb6b970122a412a9edf0e96871", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc3MDc1Nw==", "url": "https://github.com/infinispan/infinispan/pull/7873#discussion_r377770757", "bodyText": "Okay.", "author": "wburns", "createdAt": "2020-02-11T17:03:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc2ODg5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc2OTIzNw==", "url": "https://github.com/infinispan/infinispan/pull/7873#discussion_r377769237", "bodyText": "unregisterMBeans", "author": "anistor", "createdAt": "2020-02-11T17:01:02Z", "path": "core/src/main/java/org/infinispan/remoting/transport/jgroups/JGroupsTransport.java", "diffHunk": "@@ -807,6 +809,13 @@ public void stop() {\n       }\n    }\n \n+   // This needs to stay as a separate method to allow for substitution for Substrate\n+   private void stopJmxIfNeeded(String clusterName) throws Exception {", "originalCommit": "fcf2f790073832fb6b970122a412a9edf0e96871", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc3MDgwMg==", "url": "https://github.com/infinispan/infinispan/pull/7873#discussion_r377770802", "bodyText": "Okay.", "author": "wburns", "createdAt": "2020-02-11T17:03:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc2OTIzNw=="}], "type": "inlineReview"}, {"oid": "2aca5b1a0db700c275aa8b1d076f26e3656b6cf7", "url": "https://github.com/infinispan/infinispan/commit/2aca5b1a0db700c275aa8b1d076f26e3656b6cf7", "message": "ISPN-11323 solate JGroupsTransport MBean references to private methods", "committedDate": "2020-02-11T17:11:01Z", "type": "commit"}, {"oid": "2aca5b1a0db700c275aa8b1d076f26e3656b6cf7", "url": "https://github.com/infinispan/infinispan/commit/2aca5b1a0db700c275aa8b1d076f26e3656b6cf7", "message": "ISPN-11323 solate JGroupsTransport MBean references to private methods", "committedDate": "2020-02-11T17:11:01Z", "type": "forcePushed"}]}