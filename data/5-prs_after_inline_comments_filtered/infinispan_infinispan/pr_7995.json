{"pr_number": 7995, "pr_title": "ISPN-11425 Missing metadata for persistent counter upon server restart", "pr_createdAt": "2020-03-04T18:50:54Z", "pr_url": "https://github.com/infinispan/infinispan/pull/7995", "timeline": [{"oid": "2eebd7ea0ff7c4f987fb283f6f39435557693d6e", "url": "https://github.com/infinispan/infinispan/commit/2eebd7ea0ff7c4f987fb283f6f39435557693d6e", "message": "ISPN-11425 Missing metada for persistent counter upon server restart", "committedDate": "2020-03-05T10:16:41Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIxNjI2OQ==", "url": "https://github.com/infinispan/infinispan/pull/7995#discussion_r388216269", "bodyText": "No need to specify the type or required for any of these fields.\nWe deliberately avoid required as it limits schema evolution and all fields are optional from proto3 onwards.", "author": "ryanemerson", "createdAt": "2020-03-05T10:49:59Z", "path": "commons/src/main/java/org/infinispan/counter/api/CounterConfiguration.java", "diffHunk": "@@ -52,26 +44,32 @@ public static Builder builder(CounterType type) {\n       return new Builder(Objects.requireNonNull(type));\n    }\n \n+   @ProtoField(number = 1, type = Type.INT64, required = true, defaultValue = \"0\")", "originalCommit": "2eebd7ea0ff7c4f987fb283f6f39435557693d6e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIzOTQ3MA==", "url": "https://github.com/infinispan/infinispan/pull/7995#discussion_r388239470", "bodyText": "ok didn't know that.\nI was trying to avoid adding the default but I failed :)", "author": "pruivo", "createdAt": "2020-03-05T11:37:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIxNjI2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIxNjk1OA==", "url": "https://github.com/infinispan/infinispan/pull/7995#discussion_r388216958", "bodyText": "11.0 \ud83d\ude42", "author": "ryanemerson", "createdAt": "2020-03-05T10:51:09Z", "path": "core/src/main/java/org/infinispan/functional/impl/CounterConfigurationMetaParam.java", "diffHunk": "@@ -0,0 +1,29 @@\n+package org.infinispan.functional.impl;\n+\n+import org.infinispan.counter.api.CounterConfiguration;\n+import org.infinispan.functional.MetaParam;\n+\n+/**\n+ * Stores the {@link CounterConfiguration}.\n+ * <p>\n+ * The metadata is static and doesn't change. It is sent when initializing a counter and it is kept locally in all the\n+ * nodes. This avoids transfer information about the counter in every operation (e.g. boundaries/reset).\n+ *\n+ * @author Pedro Ruivo\n+ * @since 9.0", "originalCommit": "2eebd7ea0ff7c4f987fb283f6f39435557693d6e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIxNzQyNA==", "url": "https://github.com/infinispan/infinispan/pull/7995#discussion_r388217424", "bodyText": "Nitpick: Unnecessary white space lines 17 & 23.", "author": "ryanemerson", "createdAt": "2020-03-05T10:52:00Z", "path": "core/src/main/java/org/infinispan/functional/impl/CounterConfigurationMetaParam.java", "diffHunk": "@@ -0,0 +1,29 @@\n+package org.infinispan.functional.impl;\n+\n+import org.infinispan.counter.api.CounterConfiguration;\n+import org.infinispan.functional.MetaParam;\n+\n+/**\n+ * Stores the {@link CounterConfiguration}.\n+ * <p>\n+ * The metadata is static and doesn't change. It is sent when initializing a counter and it is kept locally in all the\n+ * nodes. This avoids transfer information about the counter in every operation (e.g. boundaries/reset).\n+ *\n+ * @author Pedro Ruivo\n+ * @since 9.0\n+ */\n+public class CounterConfigurationMetaParam implements MetaParam.Writable<CounterConfiguration> {\n+\n+", "originalCommit": "2eebd7ea0ff7c4f987fb283f6f39435557693d6e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIxODM1Nw==", "url": "https://github.com/infinispan/infinispan/pull/7995#discussion_r388218357", "bodyText": "These classes should be registered with the commons PersistenceContextInitializer otherwise we will have split-packages across modules with the generated marshallers.", "author": "ryanemerson", "createdAt": "2020-03-05T10:53:55Z", "path": "core/src/main/java/org/infinispan/marshall/persistence/impl/PersistenceContextInitializer.java", "diffHunk": "@@ -36,7 +39,10 @@\n             NumericVersion.class,\n             RemoteMetadata.class,\n             SimpleClusteredVersion.class,\n-            MarshallableUserObject.class\n+            MarshallableUserObject.class,\n+            CounterConfiguration.class,\n+            CounterType.class,\n+            Storage.class,", "originalCommit": "2eebd7ea0ff7c4f987fb283f6f39435557693d6e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIyMjgwNw==", "url": "https://github.com/infinispan/infinispan/pull/7995#discussion_r388222807", "bodyText": "I'm not strongly opposed to this, as it does simplify things here, but do we want to be mixing counters with core?", "author": "ryanemerson", "createdAt": "2020-03-05T11:02:27Z", "path": "core/src/main/java/org/infinispan/functional/impl/CounterConfigurationMetaParam.java", "diffHunk": "@@ -0,0 +1,29 @@\n+package org.infinispan.functional.impl;", "originalCommit": "2eebd7ea0ff7c4f987fb283f6f39435557693d6e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIzOTA0Nw==", "url": "https://github.com/infinispan/infinispan/pull/7995#discussion_r388239047", "bodyText": "I will move it to commons.\nThis class was in counters and I didn't want to create a cycle dependency between core <-> counters.", "author": "pruivo", "createdAt": "2020-03-05T11:36:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIyMjgwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI0Mzc3Mw==", "url": "https://github.com/infinispan/infinispan/pull/7995#discussion_r388243773", "bodyText": "well, it has to stay in core. MetaParam.Writable is only available here.", "author": "pruivo", "createdAt": "2020-03-05T11:47:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIyMjgwNw=="}], "type": "inlineReview"}, {"oid": "6f61f1781f7041315eba8a7f1b03333284ce8641", "url": "https://github.com/infinispan/infinispan/commit/6f61f1781f7041315eba8a7f1b03333284ce8641", "message": "ISPN-11425 Missing metada for persistent counter upon server restart", "committedDate": "2020-03-05T12:10:42Z", "type": "forcePushed"}, {"oid": "20feef495212a97177a45ee2aa199e1288733316", "url": "https://github.com/infinispan/infinispan/commit/20feef495212a97177a45ee2aa199e1288733316", "message": "ISPN-11425 Missing metada for persistent counter upon server restart", "committedDate": "2020-03-09T10:27:45Z", "type": "commit"}, {"oid": "20feef495212a97177a45ee2aa199e1288733316", "url": "https://github.com/infinispan/infinispan/commit/20feef495212a97177a45ee2aa199e1288733316", "message": "ISPN-11425 Missing metada for persistent counter upon server restart", "committedDate": "2020-03-09T10:27:45Z", "type": "forcePushed"}]}