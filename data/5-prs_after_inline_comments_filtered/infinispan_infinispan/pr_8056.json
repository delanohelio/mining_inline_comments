{"pr_number": 8056, "pr_title": "ISPN-11470 Scheduled thread pools rejection handle should throw Lifec\u2026", "pr_createdAt": "2020-03-13T16:23:37Z", "pr_url": "https://github.com/infinispan/infinispan/pull/8056", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQxNTk0OQ==", "url": "https://github.com/infinispan/infinispan/pull/8056#discussion_r392415949", "bodyText": "Shouldn't we throw an IllegalLifecycleStateException only if the executor has been shut down?", "author": "danberindei", "createdAt": "2020-03-13T19:00:27Z", "path": "commons/src/main/java/org/infinispan/commons/util/concurrent/LifecycleRejectedExecutionHandler.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package org.infinispan.commons.util.concurrent;\n+\n+import java.util.concurrent.RejectedExecutionHandler;\n+import java.util.concurrent.ThreadPoolExecutor;\n+\n+import org.infinispan.commons.IllegalLifecycleStateException;\n+\n+/**\n+ * A handler for rejected tasks that always throws a {@link IllegalLifecycleStateException}.\n+ * @author wburns\n+ * @since 11.0\n+ */\n+public class LifecycleRejectedExecutionHandler implements RejectedExecutionHandler {\n+   private LifecycleRejectedExecutionHandler() { }\n+\n+   private static final LifecycleRejectedExecutionHandler INSTANCE = new LifecycleRejectedExecutionHandler();\n+\n+   public static LifecycleRejectedExecutionHandler getInstance() {\n+      return INSTANCE;\n+   }\n+\n+   @Override\n+   public void rejectedExecution(Runnable r, ThreadPoolExecutor executor) {\n+      throw new IllegalLifecycleStateException();", "originalCommit": "9d5a51774b81201c67acd4cbdd4823d2515ea8d7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQxNzY3MQ==", "url": "https://github.com/infinispan/infinispan/pull/8056#discussion_r392417671", "bodyText": "I took a peek at ScheduledThreadPoolExecutor and it uses an effectively unbounded queue (Integer.MAX_VALUE, which isn't configurable) and has a rejection handler that is AbortPolicy by default, which always throws the exception. So I figured this was good.", "author": "wburns", "createdAt": "2020-03-13T19:04:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQxNTk0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5MDQ0MQ==", "url": "https://github.com/infinispan/infinispan/pull/8056#discussion_r393090441", "bodyText": "Ok, but please add a comment to document the decision @wburns", "author": "danberindei", "createdAt": "2020-03-16T15:01:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQxNTk0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5MTYzMg==", "url": "https://github.com/infinispan/infinispan/pull/8056#discussion_r393091632", "bodyText": "It didn't seem especially pertinent to this class myself, but okay.", "author": "wburns", "createdAt": "2020-03-16T15:02:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQxNTk0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5ODA1OQ==", "url": "https://github.com/infinispan/infinispan/pull/8056#discussion_r393098059", "bodyText": "To me it seems better to document it in the class then at the call site. Somehow comments between method arguments always rub me the wrong way, even when they're not on the same line as the parameters :)", "author": "danberindei", "createdAt": "2020-03-16T15:12:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQxNTk0OQ=="}], "type": "inlineReview"}, {"oid": "4d0bd9591635ccf60d1d1fd32912f1bd93ea4435", "url": "https://github.com/infinispan/infinispan/commit/4d0bd9591635ccf60d1d1fd32912f1bd93ea4435", "message": "ISPN-11470 Scheduled thread pools rejection handle should throw Lifecycle exception", "committedDate": "2020-03-16T15:05:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEyNzI5NQ==", "url": "https://github.com/infinispan/infinispan/pull/8056#discussion_r393127295", "bodyText": "Don't need to explain what AbortPolicy does, the only surprising part for me is that it's safe to throw IllegalLifecycleStateException instead of RejectedExecutionException without checking that the executor is stopping.", "author": "danberindei", "createdAt": "2020-03-16T15:53:03Z", "path": "commons/src/main/java/org/infinispan/commons/executors/ScheduledThreadPoolExecutorFactory.java", "diffHunk": "@@ -13,7 +15,11 @@\n \n    @Override\n    public ScheduledExecutorService createExecutor(ThreadFactory factory) {\n-      ScheduledThreadPoolExecutor result = new ScheduledThreadPoolExecutor(1, factory);\n+      ScheduledThreadPoolExecutor result = new ScheduledThreadPoolExecutor(1, factory,\n+            // Just use a rejection policy that always throws a lifecycle exception\n+            // ScheduledThreadPoolExecutor uses an unbounded queue and always throws a RejectedException for the default\n+            // rejection policy.", "originalCommit": "4d0bd9591635ccf60d1d1fd32912f1bd93ea4435", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQzNzMzMA==", "url": "https://github.com/infinispan/infinispan/pull/8056#discussion_r395437330", "bodyText": "So you are saying to throw IllegalLifecycleStateException if it is stopping and RejectedExecutionException if it is not? From the code, it will only ever do the former btw. Unless we have a box with so much memory that we hold Integer.MAX_VALUE tasks :)", "author": "wburns", "createdAt": "2020-03-20T04:44:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEyNzI5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk0MzA2OA==", "url": "https://github.com/infinispan/infinispan/pull/8056#discussion_r400943068", "bodyText": "Sorry for pushing so much on this, I know I'm too nitpicky about comments.\nI just didn't feel like your comment was explaining why it's ok to always throw an IllegalLifecycleStateException, I read it more like a sequence of disconnected facts: Our rejection policy throws this exception, the default policy throws that other exception, and BTW the queue is also unbounded.", "author": "danberindei", "createdAt": "2020-03-31T14:08:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEyNzI5NQ=="}], "type": "inlineReview"}, {"oid": "0bb852d089c1828fd58c275063b778e2cf7f5f7d", "url": "https://github.com/infinispan/infinispan/commit/0bb852d089c1828fd58c275063b778e2cf7f5f7d", "message": "ISPN-11470 Scheduled thread pools rejection handle should throw Lifecycle exception", "committedDate": "2020-03-25T19:26:18Z", "type": "commit"}, {"oid": "0bb852d089c1828fd58c275063b778e2cf7f5f7d", "url": "https://github.com/infinispan/infinispan/commit/0bb852d089c1828fd58c275063b778e2cf7f5f7d", "message": "ISPN-11470 Scheduled thread pools rejection handle should throw Lifecycle exception", "committedDate": "2020-03-25T19:26:18Z", "type": "forcePushed"}]}