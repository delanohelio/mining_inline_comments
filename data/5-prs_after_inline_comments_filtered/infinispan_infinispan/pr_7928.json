{"pr_number": 7928, "pr_title": "ISPN-9814 Publisher forEach conversion", "pr_createdAt": "2020-02-20T00:22:59Z", "pr_url": "https://github.com/infinispan/infinispan/pull/7928", "timeline": [{"oid": "b675bbeca76963b213f9a88d44814b0761f85293", "url": "https://github.com/infinispan/infinispan/commit/b675bbeca76963b213f9a88d44814b0761f85293", "message": "ISPN-9814 Convert DistributedStreams to use Distributed Publisher for streaming response", "committedDate": "2020-02-24T17:01:59Z", "type": "commit"}, {"oid": "d3408d4fc4d162c6049d810bc56d9a54f567e6cc", "url": "https://github.com/infinispan/infinispan/commit/d3408d4fc4d162c6049d810bc56d9a54f567e6cc", "message": "ISPN-9814 Convert DistributedStreams to use Distributed Publisher for streaming response\n\n* Remove no longerned cache stream code", "committedDate": "2020-02-24T17:06:08Z", "type": "commit"}, {"oid": "d3408d4fc4d162c6049d810bc56d9a54f567e6cc", "url": "https://github.com/infinispan/infinispan/commit/d3408d4fc4d162c6049d810bc56d9a54f567e6cc", "message": "ISPN-9814 Convert DistributedStreams to use Distributed Publisher for streaming response\n\n* Remove no longerned cache stream code", "committedDate": "2020-02-24T17:06:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA3MTE0Mg==", "url": "https://github.com/infinispan/infinispan/pull/7928#discussion_r385071142", "bodyText": "Is there no other blocking CacheRpcCommand we could have used instead?", "author": "danberindei", "createdAt": "2020-02-27T11:33:53Z", "path": "core/src/test/java/org/infinispan/remoting/AsynchronousInvocationTest.java", "diffHunk": "@@ -99,9 +96,6 @@ public void setUp() throws Throwable {\n       commandsFactory = extractCommandsFactory(cache);\n \n       //populate commands\n-      blockingCacheRpcCommand = new StreamRequestCommand<>(cacheName, null, null, false,\n-                                                           StreamRequestCommand.Type.TERMINAL, null, null, null, false,\n-                                                           false, mock(TerminalOperation.class));", "originalCommit": "d3408d4fc4d162c6049d810bc56d9a54f567e6cc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTExNTQyMg==", "url": "https://github.com/infinispan/infinispan/pull/7928#discussion_r385115422", "bodyText": "I tried a few, but couldn't find one that still passed the assertion. Do you know of one we could add back in? To be honest I would hope we would eventually get to a point where no command would block, as we would handle it in the interceptors.", "author": "wburns", "createdAt": "2020-02-27T13:10:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA3MTE0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEyNjA3NQ==", "url": "https://github.com/infinispan/infinispan/pull/7928#discussion_r385126075", "bodyText": "CompleteTransactionCommand", "author": "pruivo", "createdAt": "2020-02-27T13:30:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA3MTE0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTIxNzExMA==", "url": "https://github.com/infinispan/infinispan/pull/7928#discussion_r385217110", "bodyText": "I created #7962 to use mocks for all command types, since the test is about InboundInvocationHandler.", "author": "danberindei", "createdAt": "2020-02-27T16:21:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA3MTE0Mg=="}], "type": "inlineReview"}]}