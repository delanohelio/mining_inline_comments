{"pr_number": 1309, "pr_title": "(#1291) Joined list can be mutable", "pr_createdAt": "2020-02-19T00:58:31Z", "pr_url": "https://github.com/yegor256/cactoos/pull/1309", "timeline": [{"oid": "58b76d71704e725197e155f95ae1d644b349d61c", "url": "https://github.com/yegor256/cactoos/commit/58b76d71704e725197e155f95ae1d644b349d61c", "message": "(#1291) Joined list can be mutable", "committedDate": "2020-02-19T00:57:08Z", "type": "commit"}, {"oid": "f6f0257680c96379c6f220a1fb802c06f7f9cc14", "url": "https://github.com/yegor256/cactoos/commit/f6f0257680c96379c6f220a1fb802c06f7f9cc14", "message": "(#1291) Removed todo decription", "committedDate": "2020-02-19T01:17:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg4MDYyMw==", "url": "https://github.com/yegor256/cactoos/pull/1309#discussion_r382880623", "bodyText": "@fanifieiev Please put the values used in the tests into constants, to avoid this supression", "author": "paulodamaso", "createdAt": "2020-02-22T03:04:50Z", "path": "src/test/java/org/cactoos/list/JoinedTest.java", "diffHunk": "@@ -34,8 +36,9 @@\n  * @since 0.20\n  * @checkstyle JavadocMethodCheck (500 lines)\n  * @checkstyle MagicNumber (500 line)\n+ * @checkstyle DiamondOperatorCheck (500 lines)\n  */\n-@SuppressWarnings(\"PMD.TooManyMethods\")\n+@SuppressWarnings({\"PMD.TooManyMethods\", \"PMD.AvoidDuplicateLiterals\"})", "originalCommit": "f6f0257680c96379c6f220a1fb802c06f7f9cc14", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg4MDc1MQ==", "url": "https://github.com/yegor256/cactoos/pull/1309#discussion_r382880751", "bodyText": "@fanifieiev It is better to assure if the new list was properly joined by looking into its elements than just counting them in this case", "author": "paulodamaso", "createdAt": "2020-02-22T03:06:31Z", "path": "src/test/java/org/cactoos/list/JoinedTest.java", "diffHunk": "@@ -96,24 +99,31 @@ public void iterator() throws Exception {\n     }\n \n     @Test\n-    public void toArray() throws Exception {\n-        MatcherAssert.assertThat(\n-            new Joined<Integer>(\n-                new ListOf<>(11, 12),\n-                new ListOf<>(13, 14)\n-            ).toArray(),\n-            new IsEqual<>(new ListOf<>(11, 12, 13, 14).toArray())\n-        );\n-    }\n-\n-    @Test(expected = UnsupportedOperationException.class)\n     public void add() throws Exception {\n-        new Joined<String>(new ListOf<String>(\"add0\")).add(\"new add0\");\n+        final List<String> joined = new Joined<String>(\n+            new ListOf<>(\"One\"),\n+            new ListOf<>(\"Two\")\n+        );\n+        joined.add(\"Three\");\n+        new Assertion<>(", "originalCommit": "f6f0257680c96379c6f220a1fb802c06f7f9cc14", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg4MDc5Mw==", "url": "https://github.com/yegor256/cactoos/pull/1309#discussion_r382880793", "bodyText": "@fanifieiev Here we should also test for the list values, not for its size", "author": "paulodamaso", "createdAt": "2020-02-22T03:07:20Z", "path": "src/test/java/org/cactoos/list/JoinedTest.java", "diffHunk": "@@ -96,24 +99,31 @@ public void iterator() throws Exception {\n     }\n \n     @Test\n-    public void toArray() throws Exception {\n-        MatcherAssert.assertThat(\n-            new Joined<Integer>(\n-                new ListOf<>(11, 12),\n-                new ListOf<>(13, 14)\n-            ).toArray(),\n-            new IsEqual<>(new ListOf<>(11, 12, 13, 14).toArray())\n-        );\n-    }\n-\n-    @Test(expected = UnsupportedOperationException.class)\n     public void add() throws Exception {\n-        new Joined<String>(new ListOf<String>(\"add0\")).add(\"new add0\");\n+        final List<String> joined = new Joined<String>(\n+            new ListOf<>(\"One\"),\n+            new ListOf<>(\"Two\")\n+        );\n+        joined.add(\"Three\");\n+        new Assertion<>(\n+            \"must be able to add element specified\",\n+            joined.size(),\n+            new IsEqual<>(3)\n+        ).affirm();\n     }\n \n-    @Test(expected = UnsupportedOperationException.class)\n+    @Test\n     public void remove() throws Exception {\n-        new Joined<String>(new ListOf<String>(\"remove\")).remove(\"new remove\");\n+        final List<String> joined = new Joined<String>(", "originalCommit": "f6f0257680c96379c6f220a1fb802c06f7f9cc14", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg4MDg2Ng==", "url": "https://github.com/yegor256/cactoos/pull/1309#discussion_r382880866", "bodyText": "@fanifieiev This one is a little bit trickier: first, I think that we should add a list with more than one element to get certain that we are effectively joining two lists; also, we should check for the elements, not just the size", "author": "paulodamaso", "createdAt": "2020-02-22T03:08:37Z", "path": "src/test/java/org/cactoos/list/JoinedTest.java", "diffHunk": "@@ -129,35 +139,83 @@ public void containsAll() throws Exception {\n         );\n     }\n \n-    @Test(expected = UnsupportedOperationException.class)\n+    @Test\n     public void addAll() throws Exception {\n-        new Joined<String>(\n-            new ListOf<String>(\"addAll\")\n-        ).addAll(new ListOf<>(\"new addAll\"));\n+        final List<String> joined = new Joined<String>(", "originalCommit": "f6f0257680c96379c6f220a1fb802c06f7f9cc14", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg4MDkyMQ==", "url": "https://github.com/yegor256/cactoos/pull/1309#discussion_r382880921", "bodyText": "@fanifieiev Here also: better all the elements to see if they are the correct order", "author": "paulodamaso", "createdAt": "2020-02-22T03:09:40Z", "path": "src/test/java/org/cactoos/list/JoinedTest.java", "diffHunk": "@@ -129,35 +139,83 @@ public void containsAll() throws Exception {\n         );\n     }\n \n-    @Test(expected = UnsupportedOperationException.class)\n+    @Test\n     public void addAll() throws Exception {\n-        new Joined<String>(\n-            new ListOf<String>(\"addAll\")\n-        ).addAll(new ListOf<>(\"new addAll\"));\n+        final List<String> joined = new Joined<String>(\n+            new ListOf<>(\"One\"),\n+            new ListOf<>(\"Two\")\n+        );\n+        joined.addAll(\n+            new ListOf<>(\"Three\")\n+        );\n+        new Assertion<>(\n+            \"must be able to addAll elements specified\",\n+            joined.get(2),\n+            new IsEqual<>(\"Three\")\n+        ).affirm();\n     }\n \n-    @Test(expected = UnsupportedOperationException.class)\n-    public void addAllSecond() throws Exception {\n-        new Joined<String>(\n-            new ListOf<String>(\"addAll1\")\n-        ).addAll(22, new ListOf<>(\"new addAll1\"));\n+    @Test\n+    public void addAllInFront() throws Exception {\n+        final List<String> joined = new Joined<String>(", "originalCommit": "f6f0257680c96379c6f220a1fb802c06f7f9cc14", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg4MDk2MQ==", "url": "https://github.com/yegor256/cactoos/pull/1309#discussion_r382880961", "bodyText": "@fanifieiev Here too, let's check the resulting list", "author": "paulodamaso", "createdAt": "2020-02-22T03:10:09Z", "path": "src/test/java/org/cactoos/list/JoinedTest.java", "diffHunk": "@@ -129,35 +139,83 @@ public void containsAll() throws Exception {\n         );\n     }\n \n-    @Test(expected = UnsupportedOperationException.class)\n+    @Test\n     public void addAll() throws Exception {\n-        new Joined<String>(\n-            new ListOf<String>(\"addAll\")\n-        ).addAll(new ListOf<>(\"new addAll\"));\n+        final List<String> joined = new Joined<String>(\n+            new ListOf<>(\"One\"),\n+            new ListOf<>(\"Two\")\n+        );\n+        joined.addAll(\n+            new ListOf<>(\"Three\")\n+        );\n+        new Assertion<>(\n+            \"must be able to addAll elements specified\",\n+            joined.get(2),\n+            new IsEqual<>(\"Three\")\n+        ).affirm();\n     }\n \n-    @Test(expected = UnsupportedOperationException.class)\n-    public void addAllSecond() throws Exception {\n-        new Joined<String>(\n-            new ListOf<String>(\"addAll1\")\n-        ).addAll(22, new ListOf<>(\"new addAll1\"));\n+    @Test\n+    public void addAllInFront() throws Exception {\n+        final List<String> joined = new Joined<String>(\n+            new ListOf<>(\"One\"),\n+            new ListOf<>(\"Two\")\n+        );\n+        joined.addAll(\n+            0,\n+            new ListOf<>(\"Three\")\n+        );\n+        new Assertion<>(\n+            \"must be able to addAll elements specified\",\n+            joined.get(0),\n+            new IsEqual<>(\"Three\")\n+        ).affirm();\n     }\n \n-    @Test(expected = UnsupportedOperationException.class)\n+    @Test\n     public void removeAll() throws Exception {\n-        new Joined<String>(\n-            new ListOf<String>(\"removeAll\")\n-        ).removeAll(new ListOf<>(\"new removeAll\"));\n+        final List<String> joined = new Joined<String>(\n+            new ListOf<>(\"One\"),\n+            new ListOf<>(\"Two\")\n+        );\n+        joined.removeAll(\n+            new ListOf<>(\"Two\")\n+        );\n+        new Assertion<>(\n+            \"must be able to removeAll elements specified\",\n+            joined.size(),", "originalCommit": "f6f0257680c96379c6f220a1fb802c06f7f9cc14", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg4MDk4OA==", "url": "https://github.com/yegor256/cactoos/pull/1309#discussion_r382880988", "bodyText": "@fanifieiev Check the list elements here too, please", "author": "paulodamaso", "createdAt": "2020-02-22T03:10:47Z", "path": "src/test/java/org/cactoos/list/JoinedTest.java", "diffHunk": "@@ -129,35 +139,83 @@ public void containsAll() throws Exception {\n         );\n     }\n \n-    @Test(expected = UnsupportedOperationException.class)\n+    @Test\n     public void addAll() throws Exception {\n-        new Joined<String>(\n-            new ListOf<String>(\"addAll\")\n-        ).addAll(new ListOf<>(\"new addAll\"));\n+        final List<String> joined = new Joined<String>(\n+            new ListOf<>(\"One\"),\n+            new ListOf<>(\"Two\")\n+        );\n+        joined.addAll(\n+            new ListOf<>(\"Three\")\n+        );\n+        new Assertion<>(\n+            \"must be able to addAll elements specified\",\n+            joined.get(2),\n+            new IsEqual<>(\"Three\")\n+        ).affirm();\n     }\n \n-    @Test(expected = UnsupportedOperationException.class)\n-    public void addAllSecond() throws Exception {\n-        new Joined<String>(\n-            new ListOf<String>(\"addAll1\")\n-        ).addAll(22, new ListOf<>(\"new addAll1\"));\n+    @Test\n+    public void addAllInFront() throws Exception {\n+        final List<String> joined = new Joined<String>(\n+            new ListOf<>(\"One\"),\n+            new ListOf<>(\"Two\")\n+        );\n+        joined.addAll(\n+            0,\n+            new ListOf<>(\"Three\")\n+        );\n+        new Assertion<>(\n+            \"must be able to addAll elements specified\",\n+            joined.get(0),\n+            new IsEqual<>(\"Three\")\n+        ).affirm();\n     }\n \n-    @Test(expected = UnsupportedOperationException.class)\n+    @Test\n     public void removeAll() throws Exception {\n-        new Joined<String>(\n-            new ListOf<String>(\"removeAll\")\n-        ).removeAll(new ListOf<>(\"new removeAll\"));\n+        final List<String> joined = new Joined<String>(\n+            new ListOf<>(\"One\"),\n+            new ListOf<>(\"Two\")\n+        );\n+        joined.removeAll(\n+            new ListOf<>(\"Two\")\n+        );\n+        new Assertion<>(\n+            \"must be able to removeAll elements specified\",\n+            joined.size(),\n+            new IsEqual<>(1)\n+        ).affirm();\n     }\n \n-    @Test(expected = UnsupportedOperationException.class)\n+    @Test\n     public void retainAll() throws Exception {\n-        new Joined<String>().retainAll(new ListOf<>(\"retain\", \"All\"));\n+        final List<String> joined = new Joined<String>(\n+            new ListOf<>(\"One\"),\n+            new ListOf<>(\"Two\", \"Three\")\n+        );\n+        joined.retainAll(\n+            new ListOf<>(\"One\", \"Two\")\n+        );\n+        new Assertion<>(\n+            \"must be able to retain all\",", "originalCommit": "f6f0257680c96379c6f220a1fb802c06f7f9cc14", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9700ed2e8aea8f4a3a9689fb0a3cd1edce473aae", "url": "https://github.com/yegor256/cactoos/commit/9700ed2e8aea8f4a3a9689fb0a3cd1edce473aae", "message": "(#1291) After review test fixes", "committedDate": "2020-02-24T02:48:17Z", "type": "commit"}, {"oid": "8abb2f4108ef2a22a251bbe4b250dbed672845ff", "url": "https://github.com/yegor256/cactoos/commit/8abb2f4108ef2a22a251bbe4b250dbed672845ff", "message": "(#1291) After review test fixes, attempt 2", "committedDate": "2020-02-24T03:02:37Z", "type": "commit"}, {"oid": "e22c82143d1745d975298a3d0eb6342da7af749d", "url": "https://github.com/yegor256/cactoos/commit/e22c82143d1745d975298a3d0eb6342da7af749d", "message": "(#1291) After review test fixes, attempt 3", "committedDate": "2020-02-24T03:12:39Z", "type": "commit"}]}