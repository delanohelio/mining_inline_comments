{"pr_number": 7470, "pr_title": "[KEYCLOAK-14139] Upgrade login screen to PF4", "pr_createdAt": "2020-10-06T13:04:30Z", "pr_url": "https://github.com/keycloak/keycloak/pull/7470", "timeline": [{"oid": "2ea1c129aa6c732d73130f5dc565814a21843452", "url": "https://github.com/keycloak/keycloak/commit/2ea1c129aa6c732d73130f5dc565814a21843452", "message": "[KEYCLOAK-14139] Upgrade login screen to PF4", "committedDate": "2020-10-07T13:55:22Z", "type": "forcePushed"}, {"oid": "77e3875b73c4e977277a5896509f91cfac363699", "url": "https://github.com/keycloak/keycloak/commit/77e3875b73c4e977277a5896509f91cfac363699", "message": "[KEYCLOAK-14139] Upgrade login screen to PF4", "committedDate": "2020-10-08T07:31:13Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQxNTIyMw==", "url": "https://github.com/keycloak/keycloak/pull/7470#discussion_r503415223", "bodyText": "Please use getTextFromElement as it contains some workarounds.", "author": "vmuzikar", "createdAt": "2020-10-12T16:45:17Z", "path": "testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/auth/page/login/FeedbackMessage.java", "diffHunk": "@@ -29,46 +29,71 @@\n \n /**\n  * @author Vaclav Muzikar <vmuzikar@redhat.com>\n+ * @author Martin Bartos <mabartos@redhat.com>\n  */\n public class FeedbackMessage {\n-    @FindBy(css = \".alert\")\n+\n+    private final String SUCCESS = \"success\";\n+    private final String WARNING = \"warning\";\n+    private final String ERROR = \"error\";\n+    private final String INFO = \"info\";\n+\n+    @FindBy(css = \"div[class^='alert']\")\n     private WebElement alertRoot;\n \n+    @FindBy(css = \"span[id^='input-error']\")\n+    private WebElement inputErrorRoot;\n+\n     public boolean isPresent() {\n         try {\n             return alertRoot.isDisplayed();\n+        } catch (NoSuchElementException e) {\n+            return getInputError() != null && !getInputError().isEmpty();\n         }\n-        catch (NoSuchElementException e) {\n-            return false;\n+    }\n+\n+    public String getInputError() {\n+        try {\n+            return inputErrorRoot != null ? inputErrorRoot.getText() : null;", "originalCommit": "77e3875b73c4e977277a5896509f91cfac363699", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQxODE2OQ==", "url": "https://github.com/keycloak/keycloak/pull/7470#discussion_r503418169", "bodyText": "The WebElements injected by Selenium will never be null.", "author": "vmuzikar", "createdAt": "2020-10-12T16:51:06Z", "path": "testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/auth/page/login/FeedbackMessage.java", "diffHunk": "@@ -29,46 +29,71 @@\n \n /**\n  * @author Vaclav Muzikar <vmuzikar@redhat.com>\n+ * @author Martin Bartos <mabartos@redhat.com>\n  */\n public class FeedbackMessage {\n-    @FindBy(css = \".alert\")\n+\n+    private final String SUCCESS = \"success\";\n+    private final String WARNING = \"warning\";\n+    private final String ERROR = \"error\";\n+    private final String INFO = \"info\";\n+\n+    @FindBy(css = \"div[class^='alert']\")\n     private WebElement alertRoot;\n \n+    @FindBy(css = \"span[id^='input-error']\")\n+    private WebElement inputErrorRoot;\n+\n     public boolean isPresent() {\n         try {\n             return alertRoot.isDisplayed();\n+        } catch (NoSuchElementException e) {\n+            return getInputError() != null && !getInputError().isEmpty();\n         }\n-        catch (NoSuchElementException e) {\n-            return false;\n+    }\n+\n+    public String getInputError() {\n+        try {\n+            return inputErrorRoot != null ? inputErrorRoot.getText() : null;", "originalCommit": "77e3875b73c4e977277a5896509f91cfac363699", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQxODQ2MA==", "url": "https://github.com/keycloak/keycloak/pull/7470#discussion_r503418460", "bodyText": "The WebElements injected by Selenium will never be null.", "author": "vmuzikar", "createdAt": "2020-10-12T16:51:36Z", "path": "testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/pages/LoginPage.java", "diffHunk": "@@ -124,8 +128,20 @@ public void cancel() {\n         cancelButton.click();\n     }\n \n+    public String getInputError() {\n+        try {\n+            return inputError != null ? inputError.getText() : null;", "originalCommit": "77e3875b73c4e977277a5896509f91cfac363699", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQxODkwNA==", "url": "https://github.com/keycloak/keycloak/pull/7470#discussion_r503418904", "bodyText": "The WebElements injected by Selenium will never be null.", "author": "vmuzikar", "createdAt": "2020-10-12T16:52:20Z", "path": "testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/pages/LoginPage.java", "diffHunk": "@@ -124,8 +128,20 @@ public void cancel() {\n         cancelButton.click();\n     }\n \n+    public String getInputError() {\n+        try {\n+            return inputError != null ? inputError.getText() : null;\n+        } catch (NoSuchElementException e) {\n+            return null;\n+        }\n+    }\n+\n     public String getError() {\n-        return loginErrorMessage != null ? loginErrorMessage.getText() : null;\n+        try {\n+            return loginErrorMessage != null ? loginErrorMessage.getText() : getInputError();", "originalCommit": "77e3875b73c4e977277a5896509f91cfac363699", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQxOTAyNg==", "url": "https://github.com/keycloak/keycloak/pull/7470#discussion_r503419026", "bodyText": "The WebElements injected by Selenium will never be null.", "author": "vmuzikar", "createdAt": "2020-10-12T16:52:36Z", "path": "testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/pages/LoginPasswordResetPage.java", "diffHunk": "@@ -62,8 +66,20 @@ public String getSuccessMessage() {\n         return emailSuccessMessage != null ? emailSuccessMessage.getText() : null;\n     }\n \n+    public String getUsernameError() {\n+        try {\n+            return usernameError != null ? usernameError.getText() : null;", "originalCommit": "77e3875b73c4e977277a5896509f91cfac363699", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQxOTE0NQ==", "url": "https://github.com/keycloak/keycloak/pull/7470#discussion_r503419145", "bodyText": "The WebElements injected by Selenium will never be null.", "author": "vmuzikar", "createdAt": "2020-10-12T16:52:49Z", "path": "testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/pages/LoginPasswordResetPage.java", "diffHunk": "@@ -62,8 +66,20 @@ public String getSuccessMessage() {\n         return emailSuccessMessage != null ? emailSuccessMessage.getText() : null;\n     }\n \n+    public String getUsernameError() {\n+        try {\n+            return usernameError != null ? usernameError.getText() : null;\n+        } catch (NoSuchElementException e) {\n+            return null;\n+        }\n+    }\n+\n     public String getErrorMessage() {\n-        return emailErrorMessage != null ? emailErrorMessage.getText() : null;\n+        try {\n+            return emailErrorMessage != null ? emailErrorMessage.getText() : getUsernameError();", "originalCommit": "77e3875b73c4e977277a5896509f91cfac363699", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQxOTM2Mg==", "url": "https://github.com/keycloak/keycloak/pull/7470#discussion_r503419362", "bodyText": "The WebElements injected by Selenium will never be null.", "author": "vmuzikar", "createdAt": "2020-10-12T16:53:11Z", "path": "testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/pages/LoginUsernameOnlyPage.java", "diffHunk": "@@ -19,10 +23,26 @@ public void login(String username) {\n         submitButton.click();\n     }\n \n+    public String getUsernameError() {\n+        try {\n+            return usernameError != null ? usernameError.getText() : null;", "originalCommit": "77e3875b73c4e977277a5896509f91cfac363699", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQyMjgxMg==", "url": "https://github.com/keycloak/keycloak/pull/7470#discussion_r503422812", "bodyText": "I'm not sure we should do it this way. The test should be deterministic and should know whether it's fetching the error message from the notification or from the field. What if the error is displayed as field error whereas it should be a notification? And vice versa.", "author": "vmuzikar", "createdAt": "2020-10-12T16:59:44Z", "path": "testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/pages/LoginUsernameOnlyPage.java", "diffHunk": "@@ -19,10 +23,26 @@ public void login(String username) {\n         submitButton.click();\n     }\n \n+    public String getUsernameError() {\n+        try {\n+            return usernameError != null ? usernameError.getText() : null;\n+        } catch (NoSuchElementException e) {\n+            return null;\n+        }\n+    }\n \n+    @Override\n+    public String getError() {\n+        try {\n+            return super.getError() != null ? super.getError() : getUsernameError();", "originalCommit": "77e3875b73c4e977277a5896509f91cfac363699", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQyMzEzMg==", "url": "https://github.com/keycloak/keycloak/pull/7470#discussion_r503423132", "bodyText": "The test should be deterministic and should know whether it's fetching the error message from the notification or from the field.", "author": "vmuzikar", "createdAt": "2020-10-12T17:00:17Z", "path": "testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/pages/LoginPasswordResetPage.java", "diffHunk": "@@ -62,8 +66,20 @@ public String getSuccessMessage() {\n         return emailSuccessMessage != null ? emailSuccessMessage.getText() : null;\n     }\n \n+    public String getUsernameError() {\n+        try {\n+            return usernameError != null ? usernameError.getText() : null;\n+        } catch (NoSuchElementException e) {\n+            return null;\n+        }\n+    }\n+\n     public String getErrorMessage() {\n-        return emailErrorMessage != null ? emailErrorMessage.getText() : null;\n+        try {\n+            return emailErrorMessage != null ? emailErrorMessage.getText() : getUsernameError();", "originalCommit": "77e3875b73c4e977277a5896509f91cfac363699", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQyMzI2Nw==", "url": "https://github.com/keycloak/keycloak/pull/7470#discussion_r503423267", "bodyText": "The test should be deterministic and should know whether it's fetching the error message from the notification or from the field.", "author": "vmuzikar", "createdAt": "2020-10-12T17:00:35Z", "path": "testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/pages/LoginPage.java", "diffHunk": "@@ -124,8 +128,20 @@ public void cancel() {\n         cancelButton.click();\n     }\n \n+    public String getInputError() {\n+        try {\n+            return inputError != null ? inputError.getText() : null;\n+        } catch (NoSuchElementException e) {\n+            return null;\n+        }\n+    }\n+\n     public String getError() {\n-        return loginErrorMessage != null ? loginErrorMessage.getText() : null;\n+        try {\n+            return loginErrorMessage != null ? loginErrorMessage.getText() : getInputError();", "originalCommit": "77e3875b73c4e977277a5896509f91cfac363699", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQyMzY0NA==", "url": "https://github.com/keycloak/keycloak/pull/7470#discussion_r503423644", "bodyText": "The test should be deterministic and should know whether it's fetching the error message from the notification or from the field.", "author": "vmuzikar", "createdAt": "2020-10-12T17:01:27Z", "path": "testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/pages/PasswordPage.java", "diffHunk": "@@ -46,8 +49,20 @@ public String getPassword() {\n         return passwordInput.getAttribute(\"value\");\n     }\n \n+    public String getPasswordError() {\n+        try {\n+            return passwordError != null ? passwordError.getText() : null;\n+        } catch (NoSuchElementException e) {\n+            return null;\n+        }\n+    }\n+\n     public String getError() {\n-        return loginErrorMessage != null ? loginErrorMessage.getText() : null;\n+        try {\n+            return loginErrorMessage != null ? loginErrorMessage.getText() : getPasswordError();", "originalCommit": "77e3875b73c4e977277a5896509f91cfac363699", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQyNDY5Ng==", "url": "https://github.com/keycloak/keycloak/pull/7470#discussion_r503424696", "bodyText": "Should this really be a field error? I mean a disabled account is not an input error, so why it should be assigned to a field?", "author": "vmuzikar", "createdAt": "2020-10-12T17:03:36Z", "path": "services/src/main/java/org/keycloak/authentication/authenticators/browser/AbstractUsernameFormAuthenticator.java", "diffHunk": "@@ -113,7 +127,7 @@ public boolean enabledUser(AuthenticationFlowContext context, UserModel user) {\n         if (!user.isEnabled()) {\n             context.getEvent().user(user);\n             context.getEvent().error(Errors.USER_DISABLED);\n-            Response challengeResponse = challenge(context, Messages.ACCOUNT_DISABLED);\n+            Response challengeResponse = challenge(context, Messages.ACCOUNT_DISABLED, FIELD_USERNAME);", "originalCommit": "77e3875b73c4e977277a5896509f91cfac363699", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQyNzEwNQ==", "url": "https://github.com/keycloak/keycloak/pull/7470#discussion_r503427105", "bodyText": "The WebElements injected by Selenium will never be null.", "author": "vmuzikar", "createdAt": "2020-10-12T17:08:41Z", "path": "testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/pages/PasswordPage.java", "diffHunk": "@@ -46,8 +49,20 @@ public String getPassword() {\n         return passwordInput.getAttribute(\"value\");\n     }\n \n+    public String getPasswordError() {\n+        try {\n+            return passwordError != null ? passwordError.getText() : null;", "originalCommit": "77e3875b73c4e977277a5896509f91cfac363699", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "87ba8d16bc20c259e4acf1b4c336911c961306be", "url": "https://github.com/keycloak/keycloak/commit/87ba8d16bc20c259e4acf1b4c336911c961306be", "message": "[KEYCLOAK-14139] Upgrade login screen to PF4", "committedDate": "2020-10-13T06:56:04Z", "type": "forcePushed"}, {"oid": "84ce047f44d018b2c9423f0ca01b4f199d50d51f", "url": "https://github.com/keycloak/keycloak/commit/84ce047f44d018b2c9423f0ca01b4f199d50d51f", "message": "[KEYCLOAK-14139] Upgrade login screen to PF4", "committedDate": "2020-10-13T11:18:34Z", "type": "forcePushed"}, {"oid": "8ff8002f028dc6a9a72e5c19d458bfbbfb0b4140", "url": "https://github.com/keycloak/keycloak/commit/8ff8002f028dc6a9a72e5c19d458bfbbfb0b4140", "message": "[KEYCLOAK-14139] Upgrade login screen to PF4", "committedDate": "2020-10-13T12:00:05Z", "type": "forcePushed"}, {"oid": "65431bfda59902303d3034566a02b81610e99bf5", "url": "https://github.com/keycloak/keycloak/commit/65431bfda59902303d3034566a02b81610e99bf5", "message": "[KEYCLOAK-14139] Upgrade login screen to PF4", "committedDate": "2020-10-15T07:50:21Z", "type": "forcePushed"}, {"oid": "7c38b062a0db4923a85e4567f15fba5b30b34c27", "url": "https://github.com/keycloak/keycloak/commit/7c38b062a0db4923a85e4567f15fba5b30b34c27", "message": "[KEYCLOAK-14139] Upgrade login screen to PF4", "committedDate": "2020-10-19T12:28:30Z", "type": "forcePushed"}, {"oid": "10a0829f55808ae74ee1e5f0643007134a8ebea1", "url": "https://github.com/keycloak/keycloak/commit/10a0829f55808ae74ee1e5f0643007134a8ebea1", "message": "[KEYCLOAK-14139] Upgrade login screen to PF4", "committedDate": "2020-10-26T11:35:02Z", "type": "forcePushed"}, {"oid": "785fbe457dfde34318c4d3e80e322f0fb57c1ecf", "url": "https://github.com/keycloak/keycloak/commit/785fbe457dfde34318c4d3e80e322f0fb57c1ecf", "message": "[KEYCLOAK-14139] Upgrade login screen to PF4", "committedDate": "2020-10-26T11:45:09Z", "type": "forcePushed"}, {"oid": "038578b1afe232da034c1c0027f2a49e5c74ff97", "url": "https://github.com/keycloak/keycloak/commit/038578b1afe232da034c1c0027f2a49e5c74ff97", "message": "[KEYCLOAK-14139] Upgrade login screen to PF4", "committedDate": "2020-10-26T11:55:33Z", "type": "forcePushed"}, {"oid": "f067aa2e90921e0ab8a84fd628c38305e7936203", "url": "https://github.com/keycloak/keycloak/commit/f067aa2e90921e0ab8a84fd628c38305e7936203", "message": "[KEYCLOAK-14139] Upgrade login screen to PF4", "committedDate": "2020-10-27T12:41:13Z", "type": "commit"}, {"oid": "f067aa2e90921e0ab8a84fd628c38305e7936203", "url": "https://github.com/keycloak/keycloak/commit/f067aa2e90921e0ab8a84fd628c38305e7936203", "message": "[KEYCLOAK-14139] Upgrade login screen to PF4", "committedDate": "2020-10-27T12:41:13Z", "type": "forcePushed"}]}