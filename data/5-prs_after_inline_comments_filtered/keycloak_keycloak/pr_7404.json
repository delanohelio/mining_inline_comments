{"pr_number": 7404, "pr_title": "KEYCLOAK-15477 Fix permission evaluation logic", "pr_createdAt": "2020-09-09T09:50:59Z", "pr_url": "https://github.com/keycloak/keycloak/pull/7404", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc5MjM5OA==", "url": "https://github.com/keycloak/keycloak/pull/7404#discussion_r485792398", "bodyText": "Isn't there a NPE waiting to happen here if set1 is null? IIRC the HasSet constructor raises an NPE if the collection specified in the constructor is null.", "author": "sguilhen", "createdAt": "2020-09-09T17:24:56Z", "path": "services/src/main/java/org/keycloak/services/resources/admin/AdminConsole.java", "diffHunk": "@@ -232,28 +233,36 @@ public Response whoAmI(final @Context HttpHeaders headers) {\n     private void addRealmAccess(RealmModel realm, UserModel user, Map<String, Set<String>> realmAdminAccess) {\n         RealmManager realmManager = new RealmManager(session);\n         ClientModel realmAdminApp = realm.getClientByClientId(realmManager.getRealmAdminClientId(realm));\n-        getRealmAdminAccess(realmAdminApp, user, realmAdminAccess);\n+        getRealmAdminAccess(realm, realmAdminApp, user, realmAdminAccess);\n     }\n \n     private void addMasterRealmAccess(UserModel user, Map<String, Set<String>> realmAdminAccess) {\n         List<RealmModel> realms = session.realms().getRealms();\n         for (RealmModel realm : realms) {\n             ClientModel realmAdminApp = realm.getMasterAdminClient();\n-            getRealmAdminAccess(realmAdminApp, user, realmAdminAccess);\n+            getRealmAdminAccess(realm, realmAdminApp, user, realmAdminAccess);\n         }\n     }\n \n-    private void getRealmAdminAccess(ClientModel client, UserModel user, Map<String, Set<String>> realmAdminAccess) {\n-        Set<String> roles = client.getRolesStream().filter(user::hasRole)\n-                .map(RoleModel::getName).collect(Collectors.toSet());\n \n-        if (!roles.isEmpty()) {\n-            if (!realmAdminAccess.containsKey(realm.getName())) {\n-                realmAdminAccess.put(realm.getName(), roles);\n-            } else {\n-                realmAdminAccess.get(realm.getName()).addAll(roles);\n-            }\n+    private static <T> HashSet<T> union(Set<T> set1, Set<T> set2) {\n+        if (set1 == null && set2 == null) {\n+            return null;\n+        }\n+        HashSet<T> res = (set1 instanceof HashSet) ? (HashSet <T>) set1 : new HashSet<>(set1);", "originalCommit": "926c535f98dd1ff34e57984cf7d688c4860b2a1f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA3Njc5MA==", "url": "https://github.com/keycloak/keycloak/pull/7404#discussion_r486076790", "bodyText": "Good catch, indeed!", "author": "hmlnarik", "createdAt": "2020-09-10T05:37:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc5MjM5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc5MjgzNA==", "url": "https://github.com/keycloak/keycloak/pull/7404#discussion_r485792834", "bodyText": "License header", "author": "sguilhen", "createdAt": "2020-09-09T17:25:39Z", "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/admin/AdminConsolePermissionsCalculatedTest.java", "diffHunk": "@@ -0,0 +1,65 @@\n+package org.keycloak.testsuite.admin;", "originalCommit": "926c535f98dd1ff34e57984cf7d688c4860b2a1f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "041430765f28af8ca89d66f08fea2e6047311f07", "url": "https://github.com/keycloak/keycloak/commit/041430765f28af8ca89d66f08fea2e6047311f07", "message": "KEYCLOAK-15477 Fix permission evaluation logic", "committedDate": "2020-09-10T05:37:12Z", "type": "commit"}, {"oid": "041430765f28af8ca89d66f08fea2e6047311f07", "url": "https://github.com/keycloak/keycloak/commit/041430765f28af8ca89d66f08fea2e6047311f07", "message": "KEYCLOAK-15477 Fix permission evaluation logic", "committedDate": "2020-09-10T05:37:12Z", "type": "forcePushed"}]}