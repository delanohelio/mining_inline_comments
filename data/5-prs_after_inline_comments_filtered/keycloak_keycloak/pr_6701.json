{"pr_number": 6701, "pr_title": "[KEYCLOAK-12107] Add tests for Applications page", "pr_createdAt": "2020-01-29T02:21:02Z", "pr_url": "https://github.com/keycloak/keycloak/pull/6701", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjUzNDkwNA==", "url": "https://github.com/keycloak/keycloak/pull/6701#discussion_r372534904", "bodyText": "I'm not sure we should use selectors like that. This will be very error prone in the future when slightly changing the layout or even updating PF/React. Please add IDs where missing. (To keep all IDs unique, you can make a part of the ID dynamic like e.g. here).", "author": "vmuzikar", "createdAt": "2020-01-29T17:48:36Z", "path": "testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/page/ApplicationsPage.java", "diffHunk": "@@ -17,14 +17,46 @@\n \n package org.keycloak.testsuite.ui.account2.page;\n \n+import org.keycloak.representations.account.ClientRepresentation;\n+import org.openqa.selenium.By;\n+import org.openqa.selenium.WebElement;\n+import org.openqa.selenium.support.FindBy;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n /**\n  * @author Vaclav Muzikar <vmuzikar@redhat.com>\n  */\n public class ApplicationsPage extends AbstractLoggedInPage {\n+    @FindBy(xpath = \"//ul[@id='applications-list']/li/div/div[@class='pf-c-data-list__item-content']\")", "originalCommit": "8662d286865550d1e6bfbf9dac8ee9ff1b5eb4ce", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjUzNDk1MQ==", "url": "https://github.com/keycloak/keycloak/pull/6701#discussion_r372534951", "bodyText": "I'm not sure we should use selectors like that.", "author": "vmuzikar", "createdAt": "2020-01-29T17:48:42Z", "path": "testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/page/ApplicationsPage.java", "diffHunk": "@@ -17,14 +17,46 @@\n \n package org.keycloak.testsuite.ui.account2.page;\n \n+import org.keycloak.representations.account.ClientRepresentation;\n+import org.openqa.selenium.By;\n+import org.openqa.selenium.WebElement;\n+import org.openqa.selenium.support.FindBy;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n /**\n  * @author Vaclav Muzikar <vmuzikar@redhat.com>\n  */\n public class ApplicationsPage extends AbstractLoggedInPage {\n+    @FindBy(xpath = \"//ul[@id='applications-list']/li/div/div[@class='pf-c-data-list__item-content']\")\n+    private List<WebElement> applications;\n+\n     @Override\n     public String getPageId() {\n         return \"applications\";\n     }\n \n+    public List<ClientRepresentation> getApplications() {\n+        ArrayList<ClientRepresentation> apps = new ArrayList<>();\n+        for(WebElement app : applications) {\n+            apps.add(toRepresentation(app));\n+        }\n+        return apps;\n+    }\n+\n+    private ClientRepresentation toRepresentation(WebElement app) {\n+        ClientRepresentation client = new ClientRepresentation();\n+        String clientName = app.findElement(By.xpath(\"(div)[1]\")).getText();", "originalCommit": "8662d286865550d1e6bfbf9dac8ee9ff1b5eb4ce", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjUzNzE2MA==", "url": "https://github.com/keycloak/keycloak/pull/6701#discussion_r372537160", "bodyText": "We should also test collapsing/expanding of an app works.", "author": "vmuzikar", "createdAt": "2020-01-29T17:52:57Z", "path": "testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/ApplicationsTest.java", "diffHunk": "@@ -32,4 +53,69 @@\n     protected AbstractLoggedInPage getAccountPage() {\n         return applicationsPage;\n     }\n+\n+    @Override\n+    public void addTestRealms(List<RealmRepresentation> testRealms) {\n+        super.addTestRealms(testRealms);\n+        RealmRepresentation realm = testRealms.get(0);\n+\n+        realm.setClients(Arrays.asList(\n+                ClientBuilder\n+                        .create()\n+                        .clientId(\"in-use-client\")\n+                        .id(KeycloakModelUtils.generateId())\n+                        .name(\"In Use Client\")\n+                        .baseUrl(APP_ROOT + \"/in-use-client\")\n+                        .directAccessGrants()\n+                        .secret(\"secret1\")\n+                        .build(),\n+                ClientBuilder\n+                        .create()\n+                        .clientId(\"always-display-client\")\n+                        .id(KeycloakModelUtils.generateId())\n+                        .name(\"Always Display Client\")\n+                        .baseUrl(APP_ROOT + \"/always-display-client\")\n+                        .directAccessGrants()\n+                        .secret(\"secret1\")\n+                        .alwaysDisplayInConsole(true)\n+                        .build(),\n+                ClientBuilder\n+                        .create()\n+                        .clientId(\"third-party-client\")\n+                        .id(KeycloakModelUtils.generateId())\n+                        .name(\"Third Party Client\")\n+                        .baseUrl(APP_ROOT + \"/third-party-client\")\n+                        .directAccessGrants()\n+                        .secret(\"secret1\")\n+                        .consentRequired(true)\n+                        .build()\n+        ));\n+    }\n+\n+    @Test\n+    public void test() throws Exception {", "originalCommit": "8662d286865550d1e6bfbf9dac8ee9ff1b5eb4ce", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjUzODA0OQ==", "url": "https://github.com/keycloak/keycloak/pull/6701#discussion_r372538049", "bodyText": "Please use getTextFromElement to avoid any browser-related problems in the future.", "author": "vmuzikar", "createdAt": "2020-01-29T17:54:40Z", "path": "testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/page/ApplicationsPage.java", "diffHunk": "@@ -17,14 +17,46 @@\n \n package org.keycloak.testsuite.ui.account2.page;\n \n+import org.keycloak.representations.account.ClientRepresentation;\n+import org.openqa.selenium.By;\n+import org.openqa.selenium.WebElement;\n+import org.openqa.selenium.support.FindBy;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n /**\n  * @author Vaclav Muzikar <vmuzikar@redhat.com>\n  */\n public class ApplicationsPage extends AbstractLoggedInPage {\n+    @FindBy(xpath = \"//ul[@id='applications-list']/li/div/div[@class='pf-c-data-list__item-content']\")\n+    private List<WebElement> applications;\n+\n     @Override\n     public String getPageId() {\n         return \"applications\";\n     }\n \n+    public List<ClientRepresentation> getApplications() {\n+        ArrayList<ClientRepresentation> apps = new ArrayList<>();\n+        for(WebElement app : applications) {\n+            apps.add(toRepresentation(app));\n+        }\n+        return apps;\n+    }\n+\n+    private ClientRepresentation toRepresentation(WebElement app) {\n+        ClientRepresentation client = new ClientRepresentation();\n+        String clientName = app.findElement(By.xpath(\"(div)[1]\")).getText();\n+        client.setClientName(clientName);\n+        boolean userConsentRequired = !app.findElement(By.xpath(\"(div)[2]\")).getText().equals(\"Internal\");", "originalCommit": "8662d286865550d1e6bfbf9dac8ee9ff1b5eb4ce", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ccf0d191b80040fcf26b5bc43a1b9f84ba461630", "url": "https://github.com/keycloak/keycloak/commit/ccf0d191b80040fcf26b5bc43a1b9f84ba461630", "message": "[KEYCLOAK-12107] Add tests for Applications page", "committedDate": "2020-01-29T19:58:18Z", "type": "forcePushed"}, {"oid": "f5250fc6464c347996ac18128d0e337baadee503", "url": "https://github.com/keycloak/keycloak/commit/f5250fc6464c347996ac18128d0e337baadee503", "message": "[KEYCLOAK-12107] Add tests for Applications page", "committedDate": "2020-01-30T19:56:14Z", "type": "forcePushed"}, {"oid": "a45870f16e4f282d3749fd1d5af50b211766362f", "url": "https://github.com/keycloak/keycloak/commit/a45870f16e4f282d3749fd1d5af50b211766362f", "message": "[KEYCLOAK-12107] Add tests for Applications page", "committedDate": "2020-01-30T22:26:06Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ2ODMzNg==", "url": "https://github.com/keycloak/keycloak/pull/6701#discussion_r373468336", "bodyText": "I'm not sure how this can work. The ID doesn't have a unique value at all so we cannot be sure what app was selected. This is of course not an issue with the test as such but rather with the page.", "author": "vmuzikar", "createdAt": "2020-01-31T13:02:17Z", "path": "testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/page/ApplicationsPage.java", "diffHunk": "@@ -17,14 +17,94 @@\n \n package org.keycloak.testsuite.ui.account2.page;\n \n+import org.keycloak.testsuite.util.UIUtils;\n+import org.openqa.selenium.By;\n+import org.openqa.selenium.WebElement;\n+import org.openqa.selenium.support.FindBy;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n /**\n  * @author Vaclav Muzikar <vmuzikar@redhat.com>\n  */\n public class ApplicationsPage extends AbstractLoggedInPage {\n+    @FindBy(xpath = \"//li[starts-with(@id,'application-client-id')]\")\n+    private List<WebElement> applications;\n+\n     @Override\n     public String getPageId() {\n         return \"applications\";\n     }\n \n-    // TODO implement this! (KEYCLOAK-12107)\n+    public List<ClientRepresentation> toggleApplicationsDetails() {\n+        ArrayList<ClientRepresentation> apps = new ArrayList<>();\n+        for(WebElement app : applications) {\n+            String clientId = app.getAttribute(\"id\").replace(\"application-client-id-\", \"\");\n+            WebElement expandButton = app.findElement(By.xpath(\"//button[@id='application-toggle-\" + clientId + \"']\"));\n+            expandButton.click();\n+            apps.add(toRepresentation(app, clientId));\n+        }\n+        return apps;\n+    }\n+\n+    public List<ClientRepresentation> getApplications() {\n+        ArrayList<ClientRepresentation> apps = new ArrayList<>();\n+        for(WebElement app : applications) {\n+            String clientId = app.getAttribute(\"id\").replace(\"application-client-id-\", \"\");\n+            apps.add(toRepresentation(app, clientId));\n+        }\n+        return apps;\n+    }\n+\n+    private ClientRepresentation toRepresentation(WebElement app, String clientId) {\n+        String clientName = UIUtils.getTextFromElement(app.findElement(By.xpath(\"//div[@id='application-name-\" + clientId + \"']\")));\n+        boolean userConsentRequired = !UIUtils.getTextFromElement(app.findElement(By.xpath(\"//div[@id='application-internal-\" + clientId + \"']\"))).equals(\"Internal\");\n+        boolean inUse = UIUtils.getTextFromElement(app.findElement(By.xpath(\"//div[@id='application-status-\" + clientId + \"']\"))).equals(\"In use\");\n+        String baseURL = UIUtils.getTextFromElement(app.findElement(By.xpath(\"//div[@id='application-baseurl-\" + clientId + \"']\")));\n+        boolean applicationDetailsVisible = app.findElement(By.xpath(\"//section[@id='expandable']\")).isDisplayed();", "originalCommit": "a45870f16e4f282d3749fd1d5af50b211766362f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ3MDg5Nw==", "url": "https://github.com/keycloak/keycloak/pull/6701#discussion_r373470897", "bodyText": "We might want to try toggling only one app. What if the button is broken and toggles all apps at once instead of only one? :)", "author": "vmuzikar", "createdAt": "2020-01-31T13:09:25Z", "path": "testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/ApplicationsTest.java", "diffHunk": "@@ -32,4 +52,73 @@\n     protected AbstractLoggedInPage getAccountPage() {\n         return applicationsPage;\n     }\n+\n+    @Override\n+    public void addTestRealms(List<RealmRepresentation> testRealms) {\n+        super.addTestRealms(testRealms);\n+        RealmRepresentation realm = testRealms.get(0);\n+\n+        realm.setClients(Arrays.asList(\n+                ClientBuilder\n+                        .create()\n+                        .clientId(\"always-display-client\")\n+                        .id(KeycloakModelUtils.generateId())\n+                        .name(\"Always Display Client\")\n+                        .baseUrl(APP_ROOT + \"/always-display-client\")\n+                        .directAccessGrants()\n+                        .secret(\"secret1\")\n+                        .alwaysDisplayInConsole(true)\n+                        .build(),\n+                ClientBuilder\n+                        .create()\n+                        .clientId(\"third-party-client\")\n+                        .id(KeycloakModelUtils.generateId())\n+                        .name(\"Third Party Client\")\n+                        .baseUrl(APP_ROOT + \"/third-party-client\")\n+                        .directAccessGrants()\n+                        .secret(\"secret1\")\n+                        .consentRequired(true)\n+                        .build()\n+        ));\n+    }\n+\n+    @Test\n+    public void applicationListTest() throws Exception {\n+        List<ApplicationsPage.ClientRepresentation> applications = applicationsPage.getApplications();\n+        assertFalse(applications.isEmpty());\n+        Map<String, ApplicationsPage.ClientRepresentation> apps = applications.stream().collect(Collectors.toMap(x -> x.getClientId(), x -> x));\n+        assertThat(apps.keySet(), containsInAnyOrder(\"always-display-client\", \"account-console\"));\n+\n+        assertClientRep(apps.get(\"account-console\"), \"Account Console\", false, true, \"/realms/test/account/\", false);\n+        assertClientRep(apps.get(\"always-display-client\"), \"Always Display Client\", false, false, \"https://localhost:8543/auth/realms/master/app/always-display-client\", false);\n+    }\n+\n+    @Test\n+    public void toggleApplicationDetailsTest() throws Exception {\n+        List<ApplicationsPage.ClientRepresentation> applications = applicationsPage.toggleApplicationsDetails();", "originalCommit": "a45870f16e4f282d3749fd1d5af50b211766362f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "dc1f6db65f11ab7c83b2f0c3966ec1407ce212f0", "url": "https://github.com/keycloak/keycloak/commit/dc1f6db65f11ab7c83b2f0c3966ec1407ce212f0", "message": "[KEYCLOAK-12107] Add tests for Applications page", "committedDate": "2020-01-31T14:50:57Z", "type": "forcePushed"}, {"oid": "ab862c045231dffaba342b400cf301d409aedc47", "url": "https://github.com/keycloak/keycloak/commit/ab862c045231dffaba342b400cf301d409aedc47", "message": "[KEYCLOAK-12107] Add tests for Applications page", "committedDate": "2020-01-31T15:12:58Z", "type": "forcePushed"}, {"oid": "63993138641c219da1730a53f0c8f2b17d981eb7", "url": "https://github.com/keycloak/keycloak/commit/63993138641c219da1730a53f0c8f2b17d981eb7", "message": "[KEYCLOAK-12107] Add tests for Applications page", "committedDate": "2020-02-03T18:03:23Z", "type": "commit"}, {"oid": "63993138641c219da1730a53f0c8f2b17d981eb7", "url": "https://github.com/keycloak/keycloak/commit/63993138641c219da1730a53f0c8f2b17d981eb7", "message": "[KEYCLOAK-12107] Add tests for Applications page", "committedDate": "2020-02-03T18:03:23Z", "type": "forcePushed"}]}