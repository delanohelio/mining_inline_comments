{"pr_number": 7190, "pr_title": "KEYCLOAK-14529 Signed and Encrypted ID Token Support : RSA-OAEP-256", "pr_createdAt": "2020-06-20T20:02:34Z", "pr_url": "https://github.com/keycloak/keycloak/pull/7190", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI2OTk0Mg==", "url": "https://github.com/keycloak/keycloak/pull/7190#discussion_r443269942", "bodyText": "4.3.  Key Encryption with RSAES OAEP of JWA states that\n\n\"alg\" Param Value : RSA-OAEP-256\nKey Management Algorithm : RSAES OAEP using SHA-256 and MGF1 with SHA-256\n\n[A.2.  Key Management Algorithm Identifier Cross-Reference of JWA](A.2.  Key Management Algorithm Identifier Cross-Reference) stats that\n\nJWE : RSA-OAEP-256\nJCA : RSA/ECB/OAEPWithSHA-256AndMGF1Padding & MGF1ParameterSpec.SHA256\n\nI think RSA-OAEP-256 use SHA-256 for both the main digest and the MGF1 digest.\nI'm not sure\nreturn new RsaKeyEncryption256JWEAlgorithmProvider(\"RSA/ECB/OAEPWithSHA-256AndMGF1Padding\")\ncan instanciate the provider for satisfying RSA-OAEP-256. (might be use SHA-256 for the main digest and SHA-1 for the MGF1 digest?).", "author": "tnorimat", "createdAt": "2020-06-22T00:01:02Z", "path": "services/src/main/java/org/keycloak/crypto/RsaCekManagementProvider.java", "diffHunk": "@@ -39,6 +40,8 @@ public JWEAlgorithmProvider jweAlgorithmProvider() {\n             jcaAlgorithmName = \"RSA/ECB/PKCS1Padding\";\n         } else if (JWEConstants.RSA_OAEP.equals(jweAlgorithmName)) {\n             jcaAlgorithmName = \"RSA/ECB/OAEPWithSHA-1AndMGF1Padding\";\n+        } else if (JWEConstants.RSA_OAEP_256.equals(jweAlgorithmName)) {\n+            return new RsaKeyEncryption256JWEAlgorithmProvider(\"RSA/ECB/OAEPWithSHA-256AndMGF1Padding\");", "originalCommit": "c7017b1ed47410101299b237ae1cb26229fbe7c5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYwMDM1Mg==", "url": "https://github.com/keycloak/keycloak/pull/7190#discussion_r443600352", "bodyText": "This is handled in org.keycloak.jose.jwe.alg.RsaKeyEncryption256JWEAlgorithmProvider where the AlgorithmParameterSpec is passed in\nAlgorithmParameterSpec paramSpec = new OAEPParameterSpec(\"SHA-256\", \"MGF1\", MGF1ParameterSpec.SHA256, PSource.PSpecified.DEFAULT);\nalgp.init(paramSpec);\n\nThere isn't a more specific cipher than \"RSA/ECB/OAEPWithSHA-256AndMGF1Padding\" available - passing in those AlgorithmParameterSpec seems to be the only way to get SHA-256 on the main and MFG1 digest.", "author": "dillon-sellars", "createdAt": "2020-06-22T14:29:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI2OTk0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgyMjkzOQ==", "url": "https://github.com/keycloak/keycloak/pull/7190#discussion_r443822939", "bodyText": "@dillon-sellars Thank you. I've confirmed the point you've mentioned.", "author": "tnorimat", "createdAt": "2020-06-22T20:59:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI2OTk0Mg=="}], "type": "inlineReview"}, {"oid": "69cf67f1792e63ccd13f8d6bec459658e4647f53", "url": "https://github.com/keycloak/keycloak/commit/69cf67f1792e63ccd13f8d6bec459658e4647f53", "message": "KEYCLOAK-14529 Signed and Encrypted ID Token Support : RSA-OAEP-256 Key Management Algorithm", "committedDate": "2020-07-09T15:53:49Z", "type": "commit"}, {"oid": "69cf67f1792e63ccd13f8d6bec459658e4647f53", "url": "https://github.com/keycloak/keycloak/commit/69cf67f1792e63ccd13f8d6bec459658e4647f53", "message": "KEYCLOAK-14529 Signed and Encrypted ID Token Support : RSA-OAEP-256 Key Management Algorithm", "committedDate": "2020-07-09T15:53:49Z", "type": "forcePushed"}]}