{"pr_number": 597, "pr_title": "Issue #533 - i18n.", "pr_createdAt": "2020-06-08T15:00:34Z", "pr_url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/597", "timeline": [{"oid": "29a628b201092230db7fb91cdfc9b57944123bc3", "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/29a628b201092230db7fb91cdfc9b57944123bc3", "message": "Issue #533 - i18n.\n\nAlso replaced slf4j with JUL in the API module(as this needs to boil up to the spec, so we should not introduce new dependency)\n\nFor all other modules replaced slf4J with JBoss Logger and adding i18n.\n\nI had to remove annotationprocessor in the compile plugin in the pom, but the build still works.\n\nFor some tests (like mosqito) I had to keep slf4j, but for most replace with JBoss Logger.\nSigned-off-by:Phillip Kruger <phillip.kruger@gmail.com>", "committedDate": "2020-06-08T14:59:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc4NTYwOA==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/597#discussion_r436785608", "bodyText": "What does the code mean? SmallRye Reactive Messaging L? Logging? Logger? Library?", "author": "cescoffier", "createdAt": "2020-06-08T15:14:13Z", "path": "smallrye-reactive-messaging-amqp/src/main/java/io/smallrye/reactive/messaging/amqp/i18n/AMQPExceptions.java", "diffHunk": "@@ -0,0 +1,29 @@\n+package io.smallrye.reactive.messaging.amqp.i18n;\n+\n+import org.jboss.logging.Messages;\n+import org.jboss.logging.annotations.Cause;\n+import org.jboss.logging.annotations.Message;\n+import org.jboss.logging.annotations.MessageBundle;\n+\n+@MessageBundle(projectCode = \"SRRML\")", "originalCommit": "29a628b201092230db7fb91cdfc9b57944123bc3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgxMTUyOA==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/597#discussion_r436811528", "bodyText": "Maybe \"SRMSG\" instead?", "author": "kenfinnigan", "createdAt": "2020-06-08T15:51:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc4NTYwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgxMzE0MA==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/597#discussion_r436813140", "bodyText": "I am easy, just let me know what it should be.", "author": "phillip-kruger", "createdAt": "2020-06-08T15:53:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc4NTYwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg2MDYzNw==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/597#discussion_r436860637", "bodyText": "Making it SRMSG", "author": "phillip-kruger", "createdAt": "2020-06-08T17:07:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc4NTYwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc5Nzg4OQ==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/597#discussion_r436797889", "bodyText": "Can it use a method reference?", "author": "cescoffier", "createdAt": "2020-06-08T15:31:27Z", "path": "smallrye-reactive-messaging-in-memory/src/main/java/io/smallrye/reactive/messaging/connectors/InMemoryConnector.java", "diffHunk": "@@ -137,15 +143,15 @@ public static void clear() {\n     public PublisherBuilder<? extends Message<?>> getPublisherBuilder(Config config) {\n         String name = config.getOptionalValue(\"channel-name\", String.class)\n                 .orElseThrow(\n-                        () -> new IllegalArgumentException(\"Invalid incoming configuration, `channel-name` is not set\"));\n+                        () -> ex.illegalArgumentInvalidIncomingConfig());", "originalCommit": "29a628b201092230db7fb91cdfc9b57944123bc3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg5OTc3Mg==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/597#discussion_r436899772", "bodyText": "Yup", "author": "phillip-kruger", "createdAt": "2020-06-08T18:12:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc5Nzg4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc5ODAwNA==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/597#discussion_r436798004", "bodyText": "Can it use a method reference?", "author": "cescoffier", "createdAt": "2020-06-08T15:31:37Z", "path": "smallrye-reactive-messaging-in-memory/src/main/java/io/smallrye/reactive/messaging/connectors/InMemoryConnector.java", "diffHunk": "@@ -137,15 +143,15 @@ public static void clear() {\n     public PublisherBuilder<? extends Message<?>> getPublisherBuilder(Config config) {\n         String name = config.getOptionalValue(\"channel-name\", String.class)\n                 .orElseThrow(\n-                        () -> new IllegalArgumentException(\"Invalid incoming configuration, `channel-name` is not set\"));\n+                        () -> ex.illegalArgumentInvalidIncomingConfig());\n         return sources.computeIfAbsent(name, InMemorySourceImpl::new).source;\n     }\n \n     @Override\n     public SubscriberBuilder<? extends Message<?>, Void> getSubscriberBuilder(Config config) {\n         String name = config.getOptionalValue(\"channel-name\", String.class)\n                 .orElseThrow(\n-                        () -> new IllegalArgumentException(\"Invalid outgoing configuration, `channel-name` is not set\"));\n+                        () -> ex.illegalArgumentInvalidOutgoingConfig());", "originalCommit": "29a628b201092230db7fb91cdfc9b57944123bc3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg5OTkzOA==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/597#discussion_r436899938", "bodyText": "done", "author": "phillip-kruger", "createdAt": "2020-06-08T18:12:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc5ODAwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc5ODU4MQ==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/597#discussion_r436798581", "bodyText": "Shouldn't it be first? It's above in the other connectors.", "author": "cescoffier", "createdAt": "2020-06-08T15:32:26Z", "path": "smallrye-reactive-messaging-in-memory/src/main/java/io/smallrye/reactive/messaging/connectors/i18n/InMemoryLogging.java", "diffHunk": "@@ -0,0 +1,12 @@\n+package io.smallrye.reactive.messaging.connectors.i18n;\n+\n+import org.jboss.logging.Logger;\n+import org.jboss.logging.annotations.MessageLogger;\n+\n+@MessageLogger(projectCode = \"SRRML\")\n+public interface InMemoryLogging {\n+\n+    InMemoryLogging log = Logger.getMessageLogger(InMemoryLogging.class, \"io.smallrye.reactive.messaging\");\n+\n+    // 19667-19999 (logging)", "originalCommit": "29a628b201092230db7fb91cdfc9b57944123bc3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg2NTIwNQ==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/597#discussion_r436865205", "bodyText": "I started from the bottom (for connectors). So the implementation is first, then there is a gap (for future use, either impl from the one side or new connectors from the other side. That was my thinking.", "author": "phillip-kruger", "createdAt": "2020-06-08T17:14:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc5ODU4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc5ODkzOQ==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/597#discussion_r436798939", "bodyText": "Should it be before the definition? Or actually, now that I'm thinking about it, in the Javadoc of the class?", "author": "cescoffier", "createdAt": "2020-06-08T15:32:58Z", "path": "smallrye-reactive-messaging-in-memory/src/main/java/io/smallrye/reactive/messaging/connectors/i18n/InMemoryMessages.java", "diffHunk": "@@ -0,0 +1,12 @@\n+package io.smallrye.reactive.messaging.connectors.i18n;\n+\n+import org.jboss.logging.Messages;\n+import org.jboss.logging.annotations.MessageBundle;\n+\n+@MessageBundle(projectCode = \"SRRML\")\n+public interface InMemoryMessages {\n+\n+    InMemoryMessages msg = Messages.getBundle(InMemoryMessages.class);\n+\n+    // 19334-19666 (messaging)", "originalCommit": "29a628b201092230db7fb91cdfc9b57944123bc3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg2NTg3MQ==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/597#discussion_r436865871", "bodyText": "There is a global file in the root of the parent that contains all indexes. I can move this to Javadoc, no problem :)", "author": "phillip-kruger", "createdAt": "2020-06-08T17:15:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc5ODkzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg4ODUzNg==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/597#discussion_r436888536", "bodyText": "Moved to JavaDoc", "author": "phillip-kruger", "createdAt": "2020-06-08T17:52:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc5ODkzOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgwMzU4OA==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/597#discussion_r436803588", "bodyText": "do we have to pass \"null\" ?", "author": "cescoffier", "createdAt": "2020-06-08T15:39:57Z", "path": "smallrye-reactive-messaging-provider/src/main/java/io/smallrye/reactive/messaging/extension/LegacyEmitterImpl.java", "diffHunk": "@@ -41,7 +43,7 @@ public boolean isRequested() {\n     @Override\n     public synchronized Emitter<T> send(T msg) {\n         if (msg == null) {\n-            throw new IllegalArgumentException(\"`null` is not a valid value\");\n+            throw ex.illegalArgumentForValue(\"null\");", "originalCommit": "29a628b201092230db7fb91cdfc9b57944123bc3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgxMjUwNQ==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/597#discussion_r436812505", "bodyText": "Maybe change the message to be about null to being valid and use a specific method name for it?", "author": "kenfinnigan", "createdAt": "2020-06-08T15:52:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgwMzU4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgxMzY1Mg==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/597#discussion_r436813652", "bodyText": "I reuse that for other fields (I think)", "author": "phillip-kruger", "createdAt": "2020-06-08T15:54:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgwMzU4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjkwMTQ3OQ==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/597#discussion_r436901479", "bodyText": "Replace with dedicated field.", "author": "phillip-kruger", "createdAt": "2020-06-08T18:15:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgwMzU4OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgwNDU4NA==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/597#discussion_r436804584", "bodyText": "Can we have a \"nameMustBeSet\" and avoiding passing \"name\"?", "author": "cescoffier", "createdAt": "2020-06-08T15:41:27Z", "path": "smallrye-reactive-messaging-provider/src/main/java/io/smallrye/reactive/messaging/helpers/Validation.java", "diffHunk": "@@ -8,11 +10,11 @@ private Validation() {\n \n     public static <T> T notNull(T instance, String name) {\n         if (isBlank(name)) {\n-            throw new IllegalArgumentException(\"`name` must be set\");\n+            throw ex.validationForMustBeSet(\"name\");", "originalCommit": "29a628b201092230db7fb91cdfc9b57944123bc3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgxNDAwMg==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/597#discussion_r436814002", "bodyText": "I reuse that for other fields (I think), but I can change to have one per field", "author": "phillip-kruger", "createdAt": "2020-06-08T15:54:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgwNDU4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgxNzMyNA==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/597#discussion_r436817324", "bodyText": "it's just that \"name\" is often used, so we pass a constant.", "author": "cescoffier", "createdAt": "2020-06-08T15:59:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgwNDU4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjkwMjc0Mw==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/597#discussion_r436902743", "bodyText": "Changed to dedicated field", "author": "phillip-kruger", "createdAt": "2020-06-08T18:17:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgwNDU4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgwNTYzNw==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/597#discussion_r436805637", "bodyText": "Can we avoid passing \"name\" and have a dedicated method?", "author": "cescoffier", "createdAt": "2020-06-08T15:42:51Z", "path": "smallrye-reactive-messaging-provider/src/main/java/io/smallrye/reactive/messaging/impl/InternalChannelRegistry.java", "diffHunk": "@@ -14,51 +16,50 @@\n @ApplicationScoped\n public class InternalChannelRegistry implements ChannelRegistry {\n \n-    private static final String NAME_MUST_BE_SET = \"'name' must be set\";\n     private final Map<String, List<PublisherBuilder<? extends Message<?>>>> publishers = new HashMap<>();\n     private final Map<String, List<SubscriberBuilder<? extends Message<?>, Void>>> subscribers = new HashMap<>();\n     private final Map<String, Emitter<?>> emitters = new HashMap<>();\n \n     @Override\n     public synchronized PublisherBuilder<? extends Message<?>> register(String name,\n             PublisherBuilder<? extends Message<?>> stream) {\n-        Objects.requireNonNull(name, NAME_MUST_BE_SET);\n-        Objects.requireNonNull(stream, \"'stream' must be set\");\n+        Objects.requireNonNull(name, msg.mustBeSet(\"name\"));", "originalCommit": "29a628b201092230db7fb91cdfc9b57944123bc3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjkxMjg1OQ==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/597#discussion_r436912859", "bodyText": "Done, created dedicated methods", "author": "phillip-kruger", "createdAt": "2020-06-08T18:36:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgwNTYzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgwNjAzOQ==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/597#discussion_r436806039", "bodyText": "vertx, lowe-case x.", "author": "cescoffier", "createdAt": "2020-06-08T15:43:26Z", "path": "smallrye-reactive-messaging-vertx-eventbus/src/main/java/io/smallrye/reactive/messaging/eventbus/EventBusSink.java", "diffHunk": "@@ -20,13 +23,13 @@\n     private final long timeout;\n \n     EventBusSink(Vertx vertx, VertxEventBusConnectorOutgoingConfiguration config) {\n-        this.vertx = Objects.requireNonNull(vertx, \"Vert.x instance must not be `null`\");\n+        this.vertx = Objects.requireNonNull(vertx, msg.vertXInstanceMustNotBeNull());", "originalCommit": "29a628b201092230db7fb91cdfc9b57944123bc3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgwNjkyNQ==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/597#discussion_r436806925", "bodyText": "thinking about it, this check is useless. The instance cannot be null since the inclusion of vert.x in the core.", "author": "cescoffier", "createdAt": "2020-06-08T15:44:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgwNjAzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgxNDU4OA==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/597#discussion_r436814588", "bodyText": "Should I just remove it ?", "author": "phillip-kruger", "createdAt": "2020-06-08T15:55:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgwNjAzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgxNjk3MQ==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/597#discussion_r436816971", "bodyText": "Yes, same in the source. Remove the check, but with the assignment.", "author": "cescoffier", "createdAt": "2020-06-08T15:58:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgwNjAzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg5NjI3Ng==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/597#discussion_r436896276", "bodyText": "Removed", "author": "phillip-kruger", "createdAt": "2020-06-08T18:06:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgwNjAzOQ=="}], "type": "inlineReview"}, {"oid": "42e640f2b2016c0018fe45e8b92489427d8dab8d", "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/42e640f2b2016c0018fe45e8b92489427d8dab8d", "message": "Added back annotation processor\nSigned-off-by:Phillip Kruger <phillip.kruger@gmail.com>", "committedDate": "2020-06-08T17:20:17Z", "type": "commit"}, {"oid": "dcb0599f28cd0c59370a983a0eff15b2e7e6a7b8", "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/dcb0599f28cd0c59370a983a0eff15b2e7e6a7b8", "message": "Changes from PR review\nSigned-off-by:Phillip Kruger <phillip.kruger@gmail.com>", "committedDate": "2020-06-08T18:44:09Z", "type": "commit"}, {"oid": "335dca1159586e014ed38168fb064d6b5328821a", "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/335dca1159586e014ed38168fb064d6b5328821a", "message": "Resolve conflicts in PR\nSigned-off-by:Phillip Kruger <phillip.kruger@gmail.com>", "committedDate": "2020-06-08T19:53:39Z", "type": "commit"}, {"oid": "5eae4ca6e619c3599398c2d3ace98d17b9a08745", "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/5eae4ca6e619c3599398c2d3ace98d17b9a08745", "message": "Merge branch 'master' into master", "committedDate": "2020-06-08T20:00:12Z", "type": "commit"}, {"oid": "095b130cab0cdf01979a726353f00cca5c350587", "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/095b130cab0cdf01979a726353f00cca5c350587", "message": "PR reviews\nSigned-off-by:Phillip Kruger <phillip.kruger@gmail.com>", "committedDate": "2020-06-09T07:14:58Z", "type": "commit"}, {"oid": "9812ed48c1bb6ad65e23e4abe685a30ba2aef536", "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/9812ed48c1bb6ad65e23e4abe685a30ba2aef536", "message": "Merge origin/master", "committedDate": "2020-06-09T07:16:27Z", "type": "commit"}, {"oid": "8b992a354c76e1b70b95fca5832bc2b63505a57c", "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/8b992a354c76e1b70b95fca5832bc2b63505a57c", "message": "Added info on logging and fix getting started (issue #519)\nSigned-off-by:Phillip Kruger <phillip.kruger@gmail.com>", "committedDate": "2020-06-09T09:53:21Z", "type": "commit"}, {"oid": "47dd0c9c11f1e1c8eb0aa3be28a5c2a3c71d4466", "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/47dd0c9c11f1e1c8eb0aa3be28a5c2a3c71d4466", "message": "Fixes as per review\nSigned-off-by:Phillip Kruger <phillip.kruger@gmail.com>", "committedDate": "2020-06-09T11:34:58Z", "type": "commit"}, {"oid": "1a9752cdaa177acc11a36676cbd6c6e15ea14b6e", "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/1a9752cdaa177acc11a36676cbd6c6e15ea14b6e", "message": "Logger -> Logging\nSigned-off-by:Phillip Kruger <phillip.kruger@gmail.com>", "committedDate": "2020-06-09T12:03:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM5OTE0OQ==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/597#discussion_r437399149", "bodyText": "It might be a good idea to add length. Though it's the same as the default right now, if the default changed we would get different numbers output", "author": "kenfinnigan", "createdAt": "2020-06-09T13:05:25Z", "path": "smallrye-reactive-messaging-amqp/src/main/java/io/smallrye/reactive/messaging/amqp/i18n/AMQPExceptions.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package io.smallrye.reactive.messaging.amqp.i18n;\n+\n+import org.jboss.logging.Messages;\n+import org.jboss.logging.annotations.Cause;\n+import org.jboss.logging.annotations.Message;\n+import org.jboss.logging.annotations.MessageBundle;\n+\n+/**\n+ * Exceptions for AMQP Connector\n+ * Assigned ID range is 16000-16099\n+ */\n+@MessageBundle(projectCode = \"SRMSG\")", "originalCommit": "1a9752cdaa177acc11a36676cbd6c6e15ea14b6e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM5OTg5Mg==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/597#discussion_r437399892", "bodyText": "That would apply to all @MessageBundle usage", "author": "kenfinnigan", "createdAt": "2020-06-09T13:06:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM5OTE0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQzMzcxMw==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/597#discussion_r437433713", "bodyText": "What should the length be ? 6 ?", "author": "phillip-kruger", "createdAt": "2020-06-09T13:48:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM5OTE0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ0MzM4MA==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/597#discussion_r437443380", "bodyText": "(seems like the default is 6, but the wiki says 5)", "author": "phillip-kruger", "createdAt": "2020-06-09T13:57:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM5OTE0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ0NTQyMg==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/597#discussion_r437445422", "bodyText": "We want the length at 5", "author": "kenfinnigan", "createdAt": "2020-06-09T14:00:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM5OTE0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ1Mjc2MA==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/597#discussion_r437452760", "bodyText": "Made it 5", "author": "phillip-kruger", "createdAt": "2020-06-09T14:09:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM5OTE0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQwMDE2Ng==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/597#discussion_r437400166", "bodyText": "Same on the length for @MessageLogger", "author": "kenfinnigan", "createdAt": "2020-06-09T13:06:31Z", "path": "smallrye-reactive-messaging-amqp/src/main/java/io/smallrye/reactive/messaging/amqp/i18n/AMQPLogging.java", "diffHunk": "@@ -0,0 +1,118 @@\n+package io.smallrye.reactive.messaging.amqp.i18n;\n+\n+import org.jboss.logging.Logger;\n+import org.jboss.logging.annotations.Cause;\n+import org.jboss.logging.annotations.LogMessage;\n+import org.jboss.logging.annotations.Message;\n+import org.jboss.logging.annotations.MessageLogger;\n+\n+/**\n+ * Logging for AMQP Connector\n+ * Assigned ID range is 16200-16299\n+ */\n+@MessageLogger(projectCode = \"SRMSG\")", "originalCommit": "1a9752cdaa177acc11a36676cbd6c6e15ea14b6e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQwMzMyMw==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/597#discussion_r437403323", "bodyText": "This, and other loggers, should extend BasicLogger as per wiki", "author": "kenfinnigan", "createdAt": "2020-06-09T13:09:50Z", "path": "smallrye-reactive-messaging-amqp/src/main/java/io/smallrye/reactive/messaging/amqp/i18n/AMQPLogging.java", "diffHunk": "@@ -0,0 +1,118 @@\n+package io.smallrye.reactive.messaging.amqp.i18n;\n+\n+import org.jboss.logging.Logger;\n+import org.jboss.logging.annotations.Cause;\n+import org.jboss.logging.annotations.LogMessage;\n+import org.jboss.logging.annotations.Message;\n+import org.jboss.logging.annotations.MessageLogger;\n+\n+/**\n+ * Logging for AMQP Connector\n+ * Assigned ID range is 16200-16299\n+ */\n+@MessageLogger(projectCode = \"SRMSG\")\n+public interface AMQPLogging {", "originalCommit": "1a9752cdaa177acc11a36676cbd6c6e15ea14b6e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "db8659f2a1cff316c440551c2d4195deea04efeb", "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/db8659f2a1cff316c440551c2d4195deea04efeb", "message": "added basic logger and length\nSigned-off-by:Phillip Kruger <phillip.kruger@gmail.com>", "committedDate": "2020-06-09T14:18:24Z", "type": "commit"}]}