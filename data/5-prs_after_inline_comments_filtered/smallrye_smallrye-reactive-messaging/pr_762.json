{"pr_number": 762, "pr_title": "Use timer on throttled strategy and improve throttled health check", "pr_createdAt": "2020-09-21T06:22:40Z", "pr_url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/762", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg0NjA2Mw==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/762#discussion_r491846063", "bodyText": "while an object, a long with an initial value of -1 works well.", "author": "cescoffier", "createdAt": "2020-09-21T07:44:28Z", "path": "smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/commit/KafkaThrottledLatestProcessedCommit.java", "diffHunk": "@@ -41,37 +42,27 @@\n  */\n public class KafkaThrottledLatestProcessedCommit implements KafkaCommitHandler {\n \n-    private static final long THROTTLE_TIME_IN_MILLIS = 5_000L;\n     private static final Map<String, Map<Integer, TopicPartition>> TOPIC_PARTITIONS_CACHE = new ConcurrentHashMap<>();\n \n     private final Map<TopicPartition, OffsetStore> offsetStores = new HashMap<>();\n \n     private final KafkaConsumer<?, ?> consumer;\n     private final KafkaSource<?, ?> source;\n-    private final int maxReceivedWithoutAckAllowed;\n+    private final int unprocessedRecordMaxAge;\n+    private final int autoCommitInterval;\n \n     private volatile Context context;\n-    private long nextCommitTime;\n+\n+    private Long timerId = null;", "originalCommit": "cad5346a11e89e7333fed0f071eb79d31387c393", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA2ODgzMw==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/762#discussion_r492068833", "bodyText": "Sure thing.", "author": "pcasaes", "createdAt": "2020-09-21T14:01:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg0NjA2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg0NjU3Mw==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/762#discussion_r491846573", "bodyText": "you should store the IncomingKAfkaConfiguration and use this object instead of accessing the config. Typically, alias and default values are managed for you.", "author": "cescoffier", "createdAt": "2020-09-21T07:45:22Z", "path": "smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/commit/KafkaThrottledLatestProcessedCommit.java", "diffHunk": "@@ -82,10 +73,16 @@ public static KafkaThrottledLatestProcessedCommit create(KafkaConsumer<?, ?> con\n             Map<String, String> config,\n             KafkaSource<?, ?> source) {\n \n-        int maxPollRecords = Integer.parseInt(config.getOrDefault(ConsumerConfig.MAX_POLL_RECORDS_CONFIG, \"500\"));\n-        int maxReceivedWithoutAckAllowed = getNextPowerOfTwoEqualOrGreater(maxPollRecords * 2);\n-        log.settingMaxReceivedWithoutAckAllowed(config.get(ConsumerConfig.GROUP_ID_CONFIG), maxReceivedWithoutAckAllowed);\n-        return new KafkaThrottledLatestProcessedCommit(consumer, source, maxReceivedWithoutAckAllowed);\n+        int unprocessedRecordMaxAge = Integer.parseInt(config.getOrDefault(\"throttled.unprocessed-record-max-age\", \"60000\"));", "originalCommit": "cad5346a11e89e7333fed0f071eb79d31387c393", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA4NzkwOQ==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/762#discussion_r492087909", "bodyText": "I see it. thanks.", "author": "pcasaes", "createdAt": "2020-09-21T14:22:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg0NjU3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg0NzQ3OQ==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/762#discussion_r491847479", "bodyText": "instead of using a periodic task, we may want to do a timed task starting a new timed task. So the gap between the end of the task and the beginning of the next one will be the configured time. Without it's the time between 2 beginning which might be too close.", "author": "cescoffier", "createdAt": "2020-09-21T07:47:05Z", "path": "smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/commit/KafkaThrottledLatestProcessedCommit.java", "diffHunk": "@@ -106,25 +103,26 @@ public void partitionsAssigned(Context context, Set<TopicPartition> partitions)\n \n         offsetStores.clear();\n \n-        resetNextCommitTime();\n+        if (timerId != null) {\n+            context.owner().cancelTimer(timerId);\n+            timerId = null;\n+        }\n+\n+        if (!partitions.isEmpty()) {\n+            timerId = context\n+                    .owner()\n+                    .setPeriodic(autoCommitInterval, this::flushAndCheckHealth);", "originalCommit": "cad5346a11e89e7333fed0f071eb79d31387c393", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA2OTA5MQ==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/762#discussion_r492069091", "bodyText": "I wavered between the two options. I'll go with your suggestion.", "author": "pcasaes", "createdAt": "2020-09-21T14:01:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg0NzQ3OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg0ODE4OA==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/762#discussion_r491848188", "bodyText": "shouldn't we pause first?", "author": "cescoffier", "createdAt": "2020-09-21T07:48:24Z", "path": "smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/impl/KafkaSource.java", "diffHunk": "@@ -150,6 +150,7 @@ public KafkaSource(Vertx vertx,\n                     + 11_000L; // it's possible that it might expire 10 seconds before when we need it to\n \n             kafkaConsumer.partitionsAssignedHandler(set -> {\n+                commitHandler.partitionsAssigned(vertx.getOrCreateContext(), set);", "originalCommit": "cad5346a11e89e7333fed0f071eb79d31387c393", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA4MDU4Mg==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/762#discussion_r492080582", "bodyText": "Works either way since we are in the context's event thread. I'll move it if it makes it clearer.", "author": "pcasaes", "createdAt": "2020-09-21T14:14:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg0ODE4OA=="}], "type": "inlineReview"}, {"oid": "1b7c8d9ff0c341240de3ce37f8665aefa304d974", "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/1b7c8d9ff0c341240de3ce37f8665aefa304d974", "message": "Use timer on throttled strategy and improve throttled health check", "committedDate": "2020-09-21T14:55:39Z", "type": "forcePushed"}, {"oid": "0dbdd7833c2c20322f69e947427e376c8dcf2b9c", "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/0dbdd7833c2c20322f69e947427e376c8dcf2b9c", "message": "Use timer on throttled strategy and improve throttled health check", "committedDate": "2020-09-21T16:58:38Z", "type": "commit"}, {"oid": "0dbdd7833c2c20322f69e947427e376c8dcf2b9c", "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/0dbdd7833c2c20322f69e947427e376c8dcf2b9c", "message": "Use timer on throttled strategy and improve throttled health check", "committedDate": "2020-09-21T16:58:38Z", "type": "forcePushed"}]}