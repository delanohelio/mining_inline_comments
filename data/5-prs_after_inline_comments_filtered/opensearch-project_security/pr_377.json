{"pr_number": 377, "pr_title": "[opendistro-0.9 backport] Implement APIs and datamodel to configure nodes_dn dynamically.", "pr_createdAt": "2020-04-14T18:53:04Z", "pr_url": "https://github.com/opensearch-project/security/pull/377", "timeline": [{"oid": "460bec9f289e819b3634806fb913918558c40b6f", "url": "https://github.com/opensearch-project/security/commit/460bec9f289e819b3634806fb913918558c40b6f", "message": "Implement APIs and datamodel to configure nodes_dn dynamically.\n\nThis is a backport of pull request #362\n\nThe primary usecase is targeted at cross-cluster where in nodes restart\ncan be avoided by populating the coordinating cluster's nodes_dn values\nto facilitate cross-cluster usecases.\n\n**Summary of changes**:\n\n- Introduce \"nodesdn\" datatype to be stored in security index. In a way\n  it is another permission entity similar to internaluser, role etc\n- Make the above datatype backward compatible i.e do not fail other\n  operations (roles, users etc)\n- Implement APIs for CRUD operations that are only super-admin\n  accessible and are only enabled based on a YML config value.", "committedDate": "2020-04-14T18:43:11Z", "type": "commit"}, {"oid": "f36d8bf36aefbed4a3fc8d2b5fa26da5b026ef56", "url": "https://github.com/opensearch-project/security/commit/f36d8bf36aefbed4a3fc8d2b5fa26da5b026ef56", "message": "Fix ccs test.", "committedDate": "2020-04-14T19:09:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTk0ODYzMw==", "url": "https://github.com/opensearch-project/security/pull/377#discussion_r409948633", "bodyText": "nit: use Settings.Empty", "author": "sujithvm", "createdAt": "2020-04-17T01:58:38Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/configuration/ConfigurationLoader.java", "diffHunk": "@@ -103,6 +103,10 @@ public void singleFailure(Failure failure) {\n             @Override\n             public void noData(String id) {\n                 log.warn(\"No data for {} while retrieving configuration for {}  (index={})\", id, Arrays.toString(events), opendistrosecurityIndex);\n+                if (ConfigConstants.NEW_CONFIG_NAMES.contains(id)) {\n+                    rs.put(id, new Tuple<>(IndexBaseConfigurationRepository.EMPTY_DOCUMENT_VERSION, Settings.builder().build()));\n+                    latch.countDown();", "originalCommit": "f36d8bf36aefbed4a3fc8d2b5fa26da5b026ef56", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTk0OTY4Mg==", "url": "https://github.com/opensearch-project/security/pull/377#discussion_r409949682", "bodyText": "nit: Is it possible to make another constant variable for this?\nConfigConstants.ALL_CONFIG_NAMES.toArray(new String[0]) as it seems to be used quite a lot.", "author": "sujithvm", "createdAt": "2020-04-17T02:03:01Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/AbstractApiAction.java", "diffHunk": "@@ -346,7 +346,7 @@ public ConfigUpdatingActionListener(Client client, ActionListener<Response> dele\n \t\t@Override\n \t\tpublic void onResponse(Response response) {\n \n-\t\t\tfinal ConfigUpdateRequest cur = new ConfigUpdateRequest(new String[] { \"config\", \"roles\", \"rolesmapping\", \"internalusers\", \"actiongroups\" });\n+\t\t\tfinal ConfigUpdateRequest cur = new ConfigUpdateRequest(ConfigConstants.ALL_CONFIG_NAMES.toArray(new String[0]));", "originalCommit": "f36d8bf36aefbed4a3fc8d2b5fa26da5b026ef56", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}