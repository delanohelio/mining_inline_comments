{"pr_number": 256, "pr_title": "Allow SuperAdmin to update/delete/add read only config such as action\u2026", "pr_createdAt": "2020-02-28T22:37:34Z", "pr_url": "https://github.com/opensearch-project/security/pull/256", "timeline": [{"oid": "5dd7d193ae43da25854d3713d044869e35fa8c12", "url": "https://github.com/opensearch-project/security/commit/5dd7d193ae43da25854d3713d044869e35fa8c12", "message": "Allow SuperAdmin to update/delete/add read only config such as action_groups, roles, roles_mapping, internal_users\n\nFixed readonly check for AccountAPI", "committedDate": "2020-02-29T03:11:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU3NDk4MQ==", "url": "https://github.com/opensearch-project/security/pull/256#discussion_r386574981", "bodyText": "Can you verify if  resources are stored by username + \".\" + ConfigConstants.CONFIGKEY_READONLY  and this works as expected", "author": "sujithvm", "createdAt": "2020-03-02T18:39:21Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/InternalUsersApiAction.java", "diffHunk": "@@ -115,9 +115,7 @@ protected void handlePut(RestChannel channel, final RestRequest request, final C\n         }\n \n         // check if resource is writeable\n-        Boolean readOnly = configurationSettings.v2().getAsBoolean(username + \".\" + ConfigConstants.CONFIGKEY_READONLY,\n-                Boolean.FALSE);\n-        if (readOnly) {\n+        if (!isReadOnlyAndAccessible(configurationSettings.v2(), username)) {", "originalCommit": "5dd7d193ae43da25854d3713d044869e35fa8c12", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU5ODIzMg==", "url": "https://github.com/opensearch-project/security/pull/256#discussion_r386598232", "bodyText": "Yes, looks like this mechanism in place\nexample -  v2={\"admin.attributes.attribute1\":\"value1\",\"admin.attributes.attribute2\":\"value2\"", "author": "palashhedau", "createdAt": "2020-03-02T19:21:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU3NDk4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU5OTI5Mg==", "url": "https://github.com/opensearch-project/security/pull/256#discussion_r386599292", "bodyText": "Its just the way of lookup in the settings, my code doesn't interfere with the logic change for the lookup", "author": "palashhedau", "createdAt": "2020-03-02T19:23:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU3NDk4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYwNTg0OQ==", "url": "https://github.com/opensearch-project/security/pull/256#discussion_r386605849", "bodyText": "Correct me if i m wrong. It looks like in v6, read only internal user resource is suffixed with .ConfigConstants.CONFIGKEY_READONLY. Dont we need to check for this also in isReadOnlyAndAccessible function?", "author": "sujithvm", "createdAt": "2020-03-02T19:35:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU3NDk4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYxMDcxMQ==", "url": "https://github.com/opensearch-project/security/pull/256#discussion_r386610711", "bodyText": "There is a function isReadOnly which has this check and isReadOnlyAndAccessible is calling this isReadOnly function.\nThe one thing I noticed is all other api were making use of this function but not internalusers[code duplication]. now internalusers is also making use of isReadOnly via isReadOnlyAndAccessible", "author": "palashhedau", "createdAt": "2020-03-02T19:45:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU3NDk4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYyMjc0Ng==", "url": "https://github.com/opensearch-project/security/pull/256#discussion_r386622746", "bodyText": "Alright. I see isReadOnly has implemented the same", "author": "sujithvm", "createdAt": "2020-03-02T20:09:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU3NDk4MQ=="}], "type": "inlineReview"}]}