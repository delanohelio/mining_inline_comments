{"pr_number": 2703, "pr_title": "CORE: Optimized check on attribute dependencies", "pr_createdAt": "2020-05-15T11:06:39Z", "pr_url": "https://github.com/CESNET/perun/pull/2703", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTc0NDA5Nw==", "url": "https://github.com/CESNET/perun/pull/2703#discussion_r425744097", "bodyText": "Why are you changing input parameter? It is always better to prevent this behavior and return list of rich attributes instead. You can then call  \"addAll\" outside instead. We should prevent this behavior as much as possible.", "author": "stavamichal", "createdAt": "2020-05-15T11:39:57Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AttributesManagerBlImpl.java", "diffHunk": "@@ -5715,211 +5851,230 @@ private void checkAttributesDependencies(PerunSession sess, Member member, Group\n \t\t\t\t\tthrow new WrongAttributeAssignmentException(attr);\n \t\t\t\t}\n \t\t\t}\n-\t\t\tcheckAttributesDependencies(sess, member, null, memberAttributes);\n-\t\t\tcheckAttributesDependencies(sess, user, null, userAttributes);\n-\t\t\tcheckAttributesDependencies(sess, member, group, memberGroupAttributes);\n+\t\t\tconstructRichAttributes(richAttrs, member, null, memberAttributes);\n+\t\t\tconstructRichAttributes(richAttrs, user, null, userAttributes);\n+\t\t\tconstructRichAttributes(richAttrs, member, group, memberGroupAttributes);\n \t\t} else {\n-\t\t\tcheckAttributesDependencies(sess, member, group, attributes);\n+\t\t\tconstructRichAttributes(richAttrs, member, group, attributes);\n \t\t}\n+\t\tcheckAttributesDependencies(sess, richAttrs);\n \t}\n \n-\tprivate void checkAttributesDependencies(PerunSession sess, Object primaryHolder, Object secondaryHolder, List<Attribute> attributes) throws InternalErrorException, WrongAttributeValueException, WrongAttributeAssignmentException, WrongReferenceAttributeValueException {\n+\tprivate void constructRichAttributes(List<RichAttribute> richAttrs, Object primaryHolder, Object secondaryHolder, List<Attribute> attributes) {", "originalCommit": "0d96cd12a55b2803eb832760a224c8c65fdeef34", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgyNDI4MQ==", "url": "https://github.com/CESNET/perun/pull/2703#discussion_r428824281", "bodyText": "Fixed in the next commit. I also renamed the method to more common convertToRichAttributes()", "author": "zlamalp", "createdAt": "2020-05-21T18:08:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTc0NDA5Nw=="}], "type": "inlineReview"}, {"oid": "eaac979b376a8d1f815c017d41386cb8d546409c", "url": "https://github.com/CESNET/perun/commit/eaac979b376a8d1f815c017d41386cb8d546409c", "message": "CORE: Optimized check on attribute dependencies\n\n- We previously get and check dependencies of each attribute\n  in the passed list of attributes.\n  But in case of any attribute to have exactly \"same\" dependency\n  as another, we would get and check those dependant attributes\n  multiple times.\n- Since this behaviour is dependant on actuall dependencies,\n  I'm not sure it ever happened. But it is still better\n  to prevent this possibility.\n- Now we retrieve all dependant attributes for all source attributes\n  at start, put them in the set (to make them unique if some have\n  same dependency) and then we check their semantics.", "committedDate": "2020-05-22T09:48:33Z", "type": "commit"}, {"oid": "1f1d80408c358827d8480de906586b6a61668cee", "url": "https://github.com/CESNET/perun/commit/1f1d80408c358827d8480de906586b6a61668cee", "message": "CORE: Iteration on optimization of checkAttributeDependencies\n\n- We can iterate on previous commit. As we perform check on\n  the list of RichAttributes, there is no need to perform it\n  for each namespace separately.\n\n- Now we also cover the case, when two attributes of \"different\n  namespace\" are dependant on the same attribute. Which we previously\n  could check twice and now will do once.\n\n- Removed unnecessary \"this.\" from all calls of checkAttribute...().\n\n- Since we don't directly pass beans and attributes to the\n  checkAttributeDependencies() methods anymore, new private methods\n  were created in order to convert passed beans and list of attributes\n  to the list of RichAttributes.\n  Previously this existed only for the checks working with multiple\n  attribute namespaces. Now each namespace have one.\n  Correctness can be checked by the fact, that we no longer\n  pass \"null\" value as bean to those checkAttributeDependencies().", "committedDate": "2020-05-22T09:50:06Z", "type": "commit"}, {"oid": "c35c7ad213feb5a665e3fdcbd2eebe721e86a00e", "url": "https://github.com/CESNET/perun/commit/c35c7ad213feb5a665e3fdcbd2eebe721e86a00e", "message": "CORE: Aligned attribute holders order where possible\n\n- Whenever we pass attribute holders, we should conform\n  order of beans within attribute namespace.\n  Eg. for member_resource attributes we should pass\n  holders in the API in Member, Resource order.\n- Since original methods in API doesn't conform it, it\n  still might seem like we are switching orders randomly.\n  Fixing whole API now would probably break many pull-requests.", "committedDate": "2020-05-22T09:50:07Z", "type": "commit"}, {"oid": "7d08e35d868bd7d6f566b8bcab33abe8ac6e463d", "url": "https://github.com/CESNET/perun/commit/7d08e35d868bd7d6f566b8bcab33abe8ac6e463d", "message": "CORE: Reworked constructRichAttributes()\n\n- Renamed to more common convertToRichAttributes()\n- Now it returns list of RichAttributes and we do not\n  modify input list. It simplifies usage for cases\n  with single attribute namespace.", "committedDate": "2020-05-22T09:50:07Z", "type": "commit"}, {"oid": "7d08e35d868bd7d6f566b8bcab33abe8ac6e463d", "url": "https://github.com/CESNET/perun/commit/7d08e35d868bd7d6f566b8bcab33abe8ac6e463d", "message": "CORE: Reworked constructRichAttributes()\n\n- Renamed to more common convertToRichAttributes()\n- Now it returns list of RichAttributes and we do not\n  modify input list. It simplifies usage for cases\n  with single attribute namespace.", "committedDate": "2020-05-22T09:50:07Z", "type": "forcePushed"}]}