{"pr_number": 2969, "pr_title": "Methods for convertion of sponsored users", "pr_createdAt": "2020-11-03T18:27:38Z", "pr_url": "https://github.com/CESNET/perun/pull/2969", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzI2ODQ2OQ==", "url": "https://github.com/CESNET/perun/pull/2969#discussion_r517268469", "bodyText": "You should add info that all original sponors will be processed somehow too.", "author": "stavamichal", "createdAt": "2020-11-04T11:11:30Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/api/VosManager.java", "diffHunk": "@@ -549,4 +549,25 @@\n \t * @throws VoNotExistsException if there is no vo with given id\n \t */\n \tList<BanOnVo> getBansForVo(PerunSession sess, int voId) throws PrivilegeException, VoNotExistsException;\n+\n+\t/**\n+\t * For the given vo, creates sponsored members for each sponsored user who is a member\n+\t * of the given vo.", "originalCommit": "147ce28a7968615da1c8cb9061f1b6208451e50a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzI2OTE3Nw==", "url": "https://github.com/CESNET/perun/pull/2969#discussion_r517269177", "bodyText": "Same for other javadocs of this method in different layers.", "author": "stavamichal", "createdAt": "2020-11-04T11:12:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzI2ODQ2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY0NDkyMA==", "url": "https://github.com/CESNET/perun/pull/2969#discussion_r518644920", "bodyText": "Javadocs updated.", "author": "Vojtech-Sassmann", "createdAt": "2020-11-06T10:01:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzI2ODQ2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzI3NjY3Nw==", "url": "https://github.com/CESNET/perun/pull/2969#discussion_r517276677", "bodyText": "I would skip the order of these two lines. If user is not member of the VO, you don't need to have his owners at all.", "author": "stavamichal", "createdAt": "2020-11-04T11:26:36Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/VosManagerBlImpl.java", "diffHunk": "@@ -821,6 +825,92 @@ public boolean isMemberBanned(PerunSession sess, int memberId) {\n \t\treturn vosManagerImpl.isMemberBanned(sess, memberId);\n \t}\n \n+\t@Override\n+\tpublic void convertSponsoredUsers(PerunSession sess, Vo vo) {\n+\t\tperunBl.getUsersManagerBl().getSpecificUsers(sess).stream()\n+\t\t\t\t.filter(User::isSponsoredUser)\n+\t\t\t\t.forEach(user -> convertToSponsoredMember(sess, user, vo));\n+\t}\n+\n+\t@Override\n+\tpublic void convertSponsoredUsersWithNewSponsor(PerunSession sess, Vo vo, User newSponsor) {\n+\t\tperunBl.getUsersManagerBl().getSpecificUsers(sess).stream()\n+\t\t\t\t.filter(User::isSponsoredUser)\n+\t\t\t\t.forEach(user -> convertToSponsoredMemberWithNewSponsor(sess, user, newSponsor, vo));\n+\t}\n+\n+\t/**\n+\t * Sponsor given user by the given newSponsor in the given vo. If the newSponsor doesn't have\n+\t * the SPONSOR role, it will be set to him.\n+\t *\n+\t * @param sess session\n+\t * @param user user to be sponsored\n+\t * @param newSponsor new sponsor\n+\t * @param vo vo where the given user will be sponsored\n+\t */\n+\tprivate void convertToSponsoredMemberWithNewSponsor(PerunSession sess, User user, User newSponsor, Vo vo) {\n+\t\ttry {\n+\t\t\tMember member = perunBl.getMembersManagerBl().getMemberByUser(sess, vo, user);\n+\n+\t\t\tsponsorMemberByUser(sess, member, newSponsor, vo);\n+\t\t} catch (MemberNotExistsException e) {\n+\t\t\t// if the sponsored user is not member of the given vo, skip it\n+\t\t}\n+\t}\n+\n+\t/**\n+\t * Converts sponsored user to sponsored member in the given vo.\n+\t * If the user is not member of the given vo, it is skipped.\n+\t *\n+\t * @param sess session\n+\t * @param user user\n+\t * @param vo vo where the given user will be sponsored\n+\t */\n+\tprivate void convertToSponsoredMember(PerunSession sess, User user, Vo vo) {\n+\t\ttry {\n+\t\t\tList<User> owners = perunBl.getUsersManagerBl().getUsersBySpecificUser(sess, user);\n+\t\t\tMember member = perunBl.getMembersManagerBl().getMemberByUser(sess, vo, user);", "originalCommit": "147ce28a7968615da1c8cb9061f1b6208451e50a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY0NDk1OA==", "url": "https://github.com/CESNET/perun/pull/2969#discussion_r518644958", "bodyText": "Done.", "author": "Vojtech-Sassmann", "createdAt": "2020-11-06T10:01:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzI3NjY3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzI3OTQzNA==", "url": "https://github.com/CESNET/perun/pull/2969#discussion_r517279434", "bodyText": "Converting could be done more than once on the same VO. For this reason, you should allow to skip situation when sponsor is already sponsoring user's member. In such situation, it will add missing sponsors or fill new one (if needed).", "author": "stavamichal", "createdAt": "2020-11-04T11:31:47Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/VosManagerBlImpl.java", "diffHunk": "@@ -821,6 +825,92 @@ public boolean isMemberBanned(PerunSession sess, int memberId) {\n \t\treturn vosManagerImpl.isMemberBanned(sess, memberId);\n \t}\n \n+\t@Override\n+\tpublic void convertSponsoredUsers(PerunSession sess, Vo vo) {\n+\t\tperunBl.getUsersManagerBl().getSpecificUsers(sess).stream()\n+\t\t\t\t.filter(User::isSponsoredUser)\n+\t\t\t\t.forEach(user -> convertToSponsoredMember(sess, user, vo));\n+\t}\n+\n+\t@Override\n+\tpublic void convertSponsoredUsersWithNewSponsor(PerunSession sess, Vo vo, User newSponsor) {\n+\t\tperunBl.getUsersManagerBl().getSpecificUsers(sess).stream()\n+\t\t\t\t.filter(User::isSponsoredUser)\n+\t\t\t\t.forEach(user -> convertToSponsoredMemberWithNewSponsor(sess, user, newSponsor, vo));\n+\t}\n+\n+\t/**\n+\t * Sponsor given user by the given newSponsor in the given vo. If the newSponsor doesn't have\n+\t * the SPONSOR role, it will be set to him.\n+\t *\n+\t * @param sess session\n+\t * @param user user to be sponsored\n+\t * @param newSponsor new sponsor\n+\t * @param vo vo where the given user will be sponsored\n+\t */\n+\tprivate void convertToSponsoredMemberWithNewSponsor(PerunSession sess, User user, User newSponsor, Vo vo) {\n+\t\ttry {\n+\t\t\tMember member = perunBl.getMembersManagerBl().getMemberByUser(sess, vo, user);\n+\n+\t\t\tsponsorMemberByUser(sess, member, newSponsor, vo);\n+\t\t} catch (MemberNotExistsException e) {\n+\t\t\t// if the sponsored user is not member of the given vo, skip it\n+\t\t}\n+\t}\n+\n+\t/**\n+\t * Converts sponsored user to sponsored member in the given vo.\n+\t * If the user is not member of the given vo, it is skipped.\n+\t *\n+\t * @param sess session\n+\t * @param user user\n+\t * @param vo vo where the given user will be sponsored\n+\t */\n+\tprivate void convertToSponsoredMember(PerunSession sess, User user, Vo vo) {\n+\t\ttry {\n+\t\t\tList<User> owners = perunBl.getUsersManagerBl().getUsersBySpecificUser(sess, user);\n+\t\t\tMember member = perunBl.getMembersManagerBl().getMemberByUser(sess, vo, user);\n+\n+\t\t\tfor (User owner : owners) {\n+\t\t\t\tsponsorMemberByUser(sess, member, owner, vo);\n+\t\t\t}\n+\t\t} catch (MemberNotExistsException e) {\n+\t\t\t// if the sponsored user is not member of the given vo, skip it\n+\t\t}\n+\t}\n+\n+\t/**\n+\t * Sponsor the given member by the given sponsor in the given vo. If the\n+\t * member is already sponsored, this method just adds the sponsor to the given member.\n+\t * If the member is not sponsored at all, it will transform it into a sponsored one\n+\t * with the given sponsor.\n+\t *\n+\t * @param sess session\n+\t * @param member member to be sponsored\n+\t * @param sponsor sponsor\n+\t * @param vo vo where the member is sponsored\n+\t */\n+\tprivate void sponsorMemberByUser(PerunSession sess, Member member, User sponsor, Vo vo) {\n+\t\ttry {\n+\t\t\tif (!getPerunBl().getVosManagerBl().isUserInRoleForVo(sess, sponsor, Role.SPONSOR, vo, true)) {\n+\t\t\t\tAuthzResolverBlImpl.setRole(sess, sponsor, vo, Role.SPONSOR);\n+\t\t\t}\n+\n+\t\t\t// we need to refresh information and check if the member is already sponsored\n+\t\t\tmember = perunBl.getMembersManagerBl().getMemberById(sess, member.getId());\n+\n+\t\t\tif (member.isSponsored()) {\n+\t\t\t\t// if the member is already sponsored, just add another sponsor\n+\t\t\t\tperunBl.getMembersManagerBl().sponsorMember(sess, member, sponsor);", "originalCommit": "147ce28a7968615da1c8cb9061f1b6208451e50a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY0NTMxNA==", "url": "https://github.com/CESNET/perun/pull/2969#discussion_r518645314", "bodyText": "I have added a catch block that should solve this problem.", "author": "Vojtech-Sassmann", "createdAt": "2020-11-06T10:02:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzI3OTQzNA=="}], "type": "inlineReview"}, {"oid": "eac4c0bb01ed7d46d674210b5798db033f27df4a", "url": "https://github.com/CESNET/perun/commit/eac4c0bb01ed7d46d674210b5798db033f27df4a", "message": "Methods for convertion of sponsored users\n\n* Created two new methods that can be used to convert sponsored users.\n* Method `convertSponsoredUsers` can be used to create sponsored members\nfor all sponsored users who are members of the given vo. All sponsors\nare kept, if they were not sponsors in the given, the role is set for\nthem.\n* Method `convertSponsoredUsersWithNewSponsor` can also be used for the\nconversion. The difference is, that this method sets a given users as a\nsponsor of all members. Old sponsors will be not set.\n* Once all conversions are done, we have to consider how to remove all\nof the user sponsorships. This is not handled by these two methods.", "committedDate": "2020-11-06T09:58:53Z", "type": "commit"}, {"oid": "eac4c0bb01ed7d46d674210b5798db033f27df4a", "url": "https://github.com/CESNET/perun/commit/eac4c0bb01ed7d46d674210b5798db033f27df4a", "message": "Methods for convertion of sponsored users\n\n* Created two new methods that can be used to convert sponsored users.\n* Method `convertSponsoredUsers` can be used to create sponsored members\nfor all sponsored users who are members of the given vo. All sponsors\nare kept, if they were not sponsors in the given, the role is set for\nthem.\n* Method `convertSponsoredUsersWithNewSponsor` can also be used for the\nconversion. The difference is, that this method sets a given users as a\nsponsor of all members. Old sponsors will be not set.\n* Once all conversions are done, we have to consider how to remove all\nof the user sponsorships. This is not handled by these two methods.", "committedDate": "2020-11-06T09:58:53Z", "type": "forcePushed"}]}