{"pr_number": 246, "pr_title": "BLUEBUTTON 1788: Outpatient Data Fixes and Tests", "pr_createdAt": "2020-03-18T21:50:12Z", "pr_url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/246", "timeline": [{"oid": "1ac4875da50ea6382556938c16570c4d73562bd2", "url": "https://github.com/CMSgov/beneficiary-fhir-data/commit/1ac4875da50ea6382556938c16570c4d73562bd2", "message": "Fix a small typo bug in the outpatient transformer", "committedDate": "2020-03-18T20:05:19Z", "type": "commit"}, {"oid": "9aafd4dc451671e79a802c19d8c0942f0e293900", "url": "https://github.com/CMSgov/beneficiary-fhir-data/commit/9aafd4dc451671e79a802c19d8c0942f0e293900", "message": "Added a test for all outpatient synthetic records", "committedDate": "2020-03-18T20:06:00Z", "type": "commit"}, {"oid": "62d54cb750190a3b93baa6ed2fe277bd8874efe9", "url": "https://github.com/CMSgov/beneficiary-fhir-data/commit/62d54cb750190a3b93baa6ed2fe277bd8874efe9", "message": "Documentation Updates", "committedDate": "2020-03-18T21:32:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY2MjAzNg==", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/246#discussion_r394662036", "bodyText": "I fixed this because it is a clear typo to me. Only a very small number of EOBs have admission code 3.", "author": "RickHawesUSDS", "createdAt": "2020-03-18T21:55:32Z", "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/OutpatientClaimTransformer.java", "diffHunk": "@@ -227,7 +227,7 @@ private static ExplanationOfBenefit transformClaim(OutpatientClaim claimGroup) {\n       TransformerUtils.addDiagnosisCode(\n           eob,\n           Diagnosis.from(\n-                  claimGroup.getDiagnosisAdmission2Code(),\n+                  claimGroup.getDiagnosisAdmission3Code(),\n                   claimGroup.getDiagnosisAdmission3CodeVersion(),", "originalCommit": "62d54cb750190a3b93baa6ed2fe277bd8874efe9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY2MjkyNw==", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/246#discussion_r394662927", "bodyText": "The code to add diagnosis codes to EOB checks for duplicates. There are couple of synthetic records that have duplicate diagnoses, so the count of the claim will not match exactly the count in the EOB.", "author": "RickHawesUSDS", "createdAt": "2020-03-18T21:57:33Z", "path": "apps/bfd-server/bfd-server-war/src/test/java/gov/cms/bfd/server/war/stu3/providers/OutpatientClaimTransformerTest.java", "diffHunk": "@@ -135,7 +176,9 @@ static void assertMatches(OutpatientClaim claim, ExplanationOfBenefit eob) throw\n         claim.getPrimaryPayerPaidAmount(),\n         claim.getFiscalIntermediaryNumber());\n \n-    Assert.assertEquals(countDiagnosisCodes(claim), eob.getDiagnosis().size());\n+    Assert.assertTrue(\n+        \"Expect actual diagnosis count is less than or equal to the claim count\",\n+        countDiagnosisCodes(claim) >= eob.getDiagnosis().size());\n ", "originalCommit": "62d54cb750190a3b93baa6ed2fe277bd8874efe9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY2MzExOQ==", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/246#discussion_r394663119", "bodyText": "These codes were missing before.", "author": "RickHawesUSDS", "createdAt": "2020-03-18T21:57:56Z", "path": "apps/bfd-server/bfd-server-war/src/test/java/gov/cms/bfd/server/war/stu3/providers/OutpatientClaimTransformerTest.java", "diffHunk": "@@ -275,10 +318,12 @@ static void assertMatches(OutpatientClaim claim, ExplanationOfBenefit eob) throw\n   public static long countDiagnosisCodes(OutpatientClaim claim) {\n     Stream<String> methodNames =\n         Stream.concat(\n-            IntStream.range(1, 26).mapToObj(i -> \"getDiagnosis\" + i + \"Code\"),\n+            Stream.concat(\n+                IntStream.range(1, 26).mapToObj(i -> \"getDiagnosis\" + i + \"Code\"),\n+                IntStream.range(1, 5).mapToObj(i -> \"getDiagnosisAdmission\" + i + \"Code\")),\n             Stream.concat(\n                 IntStream.range(1, 16).mapToObj(i -> \"getDiagnosisExternal\" + i + \"Code\"),\n-                IntStream.range(1, 4).mapToObj(i -> \"getDiagnosisAdmission\" + i + \"Code\")));\n+                Stream.of(\"getDiagnosisPrincipalCode\", \"getDiagnosisExternalFirstCode\")));\n ", "originalCommit": "62d54cb750190a3b93baa6ed2fe277bd8874efe9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY2MzU4Ng==", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/246#discussion_r394663586", "bodyText": "Doing this operation on every record slowed down our tests significantly.", "author": "RickHawesUSDS", "createdAt": "2020-03-18T21:58:57Z", "path": "apps/bfd-server/bfd-server-war/src/test/java/gov/cms/bfd/server/war/stu3/providers/TransformerTestUtils.java", "diffHunk": "@@ -912,12 +915,7 @@ static void assertInformationPeriodEquals(\n    * @param resource the FHIR {@link Resource} to check\n    */\n   static void assertNoEncodedOptionals(Resource resource) {\n-    FhirContext fhirContext = FhirContext.forDstu3();\n     String encodedResourceXml = fhirContext.newXmlParser().encodeResourceToString(resource);", "originalCommit": "62d54cb750190a3b93baa6ed2fe277bd8874efe9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY2MzkwNg==", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/246#discussion_r394663906", "bodyText": "These print outs added to the jibberish of the test logs.", "author": "RickHawesUSDS", "createdAt": "2020-03-18T21:59:41Z", "path": "apps/bfd-server/bfd-server-war/src/test/java/gov/cms/bfd/server/war/stu3/providers/TransformerTestUtils.java", "diffHunk": "@@ -912,12 +915,7 @@ static void assertInformationPeriodEquals(\n    * @param resource the FHIR {@link Resource} to check\n    */\n   static void assertNoEncodedOptionals(Resource resource) {\n-    FhirContext fhirContext = FhirContext.forDstu3();\n     String encodedResourceXml = fhirContext.newXmlParser().encodeResourceToString(resource);\n-    String encodedResourceJson = fhirContext.newJsonParser().encodeResourceToString(resource);\n-    System.out.println(encodedResourceXml);\n-    System.out.println(encodedResourceJson);", "originalCommit": "62d54cb750190a3b93baa6ed2fe277bd8874efe9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}