{"pr_number": 2130, "pr_title": "[JBPM-9184] Subprocess excepcion handling tx rollback causes main process to fail", "pr_createdAt": "2020-06-11T06:41:08Z", "pr_url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2130", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYwODYyNg==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2130#discussion_r438608626", "bodyText": "Please use more descriptive method name.", "author": "sutaakar", "createdAt": "2020-06-11T07:56:45Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ExceptionHandlingIntegrationTest.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Copyright 2015 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+*/\n+\n+package org.kie.server.integrationtests.jbpm;\n+\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.kie.api.KieServices;\n+import org.kie.internal.runtime.conf.RuntimeStrategy;\n+import org.kie.server.api.KieServerConstants;\n+import org.kie.server.api.model.KieServerConfigItem;\n+import org.kie.server.api.model.ReleaseId;\n+import org.kie.server.api.model.instance.ProcessInstance;\n+import org.kie.server.integrationtests.shared.KieServerDeployer;\n+\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+\n+public class ExceptionHandlingIntegrationTest extends JbpmKieServerBaseIntegrationTest {\n+\n+    private static final KieServerConfigItem PPI_RUNTIME_STRATEGY = new KieServerConfigItem(KieServerConstants.PCFG_RUNTIME_STRATEGY, RuntimeStrategy.PER_PROCESS_INSTANCE.name(), String.class.getName());\n+\n+    private static ReleaseId releaseId = new ReleaseId(\"org.kie.server.testing\", \"exception-handling\", \"1.0.0.Final\");\n+\n+   \n+    @BeforeClass\n+    public static void buildAndDeployArtifacts() {\n+\n+        KieServerDeployer.buildAndDeployCommonMavenParent();\n+        KieServerDeployer.buildAndDeployMavenProjectFromResource(\"/kjars-sources/exception-handling\");\n+\n+        kieContainer = KieServices.Factory.get().newKieContainer(releaseId);\n+\n+        createContainer(CONTAINER_ID, releaseId, PPI_RUNTIME_STRATEGY);\n+    }\n+\n+    @Test\n+    public void test1() throws Exception {", "originalCommit": "fbc621c9a9393a6b9495ed88aa894a2a87eb9ab3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYwODk3MQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2130#discussion_r438608971", "bodyText": "Please remove the catch", "author": "sutaakar", "createdAt": "2020-06-11T07:57:24Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ExceptionHandlingIntegrationTest.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Copyright 2015 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+*/\n+\n+package org.kie.server.integrationtests.jbpm;\n+\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.kie.api.KieServices;\n+import org.kie.internal.runtime.conf.RuntimeStrategy;\n+import org.kie.server.api.KieServerConstants;\n+import org.kie.server.api.model.KieServerConfigItem;\n+import org.kie.server.api.model.ReleaseId;\n+import org.kie.server.api.model.instance.ProcessInstance;\n+import org.kie.server.integrationtests.shared.KieServerDeployer;\n+\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+\n+public class ExceptionHandlingIntegrationTest extends JbpmKieServerBaseIntegrationTest {\n+\n+    private static final KieServerConfigItem PPI_RUNTIME_STRATEGY = new KieServerConfigItem(KieServerConstants.PCFG_RUNTIME_STRATEGY, RuntimeStrategy.PER_PROCESS_INSTANCE.name(), String.class.getName());\n+\n+    private static ReleaseId releaseId = new ReleaseId(\"org.kie.server.testing\", \"exception-handling\", \"1.0.0.Final\");\n+\n+   \n+    @BeforeClass\n+    public static void buildAndDeployArtifacts() {\n+\n+        KieServerDeployer.buildAndDeployCommonMavenParent();\n+        KieServerDeployer.buildAndDeployMavenProjectFromResource(\"/kjars-sources/exception-handling\");\n+\n+        kieContainer = KieServices.Factory.get().newKieContainer(releaseId);\n+\n+        createContainer(CONTAINER_ID, releaseId, PPI_RUNTIME_STRATEGY);\n+    }\n+\n+    @Test\n+    public void test1() throws Exception {\n+        Long processInstanceId = null;\n+        try {\n+            processInstanceId = processClient.startProcess(CONTAINER_ID, \"ExceptionHandling.ScriptMainProcess\");\n+\n+            assertNotNull(processInstanceId);\n+            assertTrue(processInstanceId.longValue() > 0);\n+\n+            ProcessInstance a = processClient.getProcessInstance(CONTAINER_ID, processInstanceId);\n+            assertNotNull(a);\n+            processInstanceId = null;\n+        } catch (Exception e) {", "originalCommit": "fbc621c9a9393a6b9495ed88aa894a2a87eb9ab3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI2MDI5Nw==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2130#discussion_r444260297", "bodyText": "done", "author": "elguardian", "createdAt": "2020-06-23T14:18:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYwODk3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc4OTA0NA==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2130#discussion_r438789044", "bodyText": "2020", "author": "gmunozfe", "createdAt": "2020-06-11T13:38:44Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ExceptionHandlingIntegrationTest.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Copyright 2015 Red Hat, Inc. and/or its affiliates.", "originalCommit": "fbc621c9a9393a6b9495ed88aa894a2a87eb9ab3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI2MDM1Ng==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2130#discussion_r444260356", "bodyText": "done", "author": "elguardian", "createdAt": "2020-06-23T14:18:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc4OTA0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY1MzA4NA==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2130#discussion_r440653084", "bodyText": "+1", "author": "afalhambra", "createdAt": "2020-06-16T07:49:05Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ExceptionHandlingIntegrationTest.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Copyright 2015 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+*/\n+\n+package org.kie.server.integrationtests.jbpm;\n+\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.kie.api.KieServices;\n+import org.kie.internal.runtime.conf.RuntimeStrategy;\n+import org.kie.server.api.KieServerConstants;\n+import org.kie.server.api.model.KieServerConfigItem;\n+import org.kie.server.api.model.ReleaseId;\n+import org.kie.server.api.model.instance.ProcessInstance;\n+import org.kie.server.integrationtests.shared.KieServerDeployer;\n+\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+\n+public class ExceptionHandlingIntegrationTest extends JbpmKieServerBaseIntegrationTest {\n+\n+    private static final KieServerConfigItem PPI_RUNTIME_STRATEGY = new KieServerConfigItem(KieServerConstants.PCFG_RUNTIME_STRATEGY, RuntimeStrategy.PER_PROCESS_INSTANCE.name(), String.class.getName());\n+\n+    private static ReleaseId releaseId = new ReleaseId(\"org.kie.server.testing\", \"exception-handling\", \"1.0.0.Final\");\n+\n+   \n+    @BeforeClass\n+    public static void buildAndDeployArtifacts() {\n+\n+        KieServerDeployer.buildAndDeployCommonMavenParent();\n+        KieServerDeployer.buildAndDeployMavenProjectFromResource(\"/kjars-sources/exception-handling\");\n+\n+        kieContainer = KieServices.Factory.get().newKieContainer(releaseId);\n+\n+        createContainer(CONTAINER_ID, releaseId, PPI_RUNTIME_STRATEGY);\n+    }\n+\n+    @Test\n+    public void test1() throws Exception {\n+        Long processInstanceId = null;\n+        try {\n+            processInstanceId = processClient.startProcess(CONTAINER_ID, \"ExceptionHandling.ScriptMainProcess\");\n+\n+            assertNotNull(processInstanceId);\n+            assertTrue(processInstanceId.longValue() > 0);\n+\n+            ProcessInstance a = processClient.getProcessInstance(CONTAINER_ID, processInstanceId);\n+            assertNotNull(a);\n+            processInstanceId = null;\n+        } catch (Exception e) {", "originalCommit": "fbc621c9a9393a6b9495ed88aa894a2a87eb9ab3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI2MDU5NQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2130#discussion_r444260595", "bodyText": "done", "author": "elguardian", "createdAt": "2020-06-23T14:19:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY1MzA4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY1MzE2Mg==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2130#discussion_r440653162", "bodyText": "+1", "author": "afalhambra", "createdAt": "2020-06-16T07:49:14Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ExceptionHandlingIntegrationTest.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Copyright 2015 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+*/\n+\n+package org.kie.server.integrationtests.jbpm;\n+\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.kie.api.KieServices;\n+import org.kie.internal.runtime.conf.RuntimeStrategy;\n+import org.kie.server.api.KieServerConstants;\n+import org.kie.server.api.model.KieServerConfigItem;\n+import org.kie.server.api.model.ReleaseId;\n+import org.kie.server.api.model.instance.ProcessInstance;\n+import org.kie.server.integrationtests.shared.KieServerDeployer;\n+\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+\n+public class ExceptionHandlingIntegrationTest extends JbpmKieServerBaseIntegrationTest {\n+\n+    private static final KieServerConfigItem PPI_RUNTIME_STRATEGY = new KieServerConfigItem(KieServerConstants.PCFG_RUNTIME_STRATEGY, RuntimeStrategy.PER_PROCESS_INSTANCE.name(), String.class.getName());\n+\n+    private static ReleaseId releaseId = new ReleaseId(\"org.kie.server.testing\", \"exception-handling\", \"1.0.0.Final\");\n+\n+   \n+    @BeforeClass\n+    public static void buildAndDeployArtifacts() {\n+\n+        KieServerDeployer.buildAndDeployCommonMavenParent();\n+        KieServerDeployer.buildAndDeployMavenProjectFromResource(\"/kjars-sources/exception-handling\");\n+\n+        kieContainer = KieServices.Factory.get().newKieContainer(releaseId);\n+\n+        createContainer(CONTAINER_ID, releaseId, PPI_RUNTIME_STRATEGY);\n+    }\n+\n+    @Test\n+    public void test1() throws Exception {", "originalCommit": "fbc621c9a9393a6b9495ed88aa894a2a87eb9ab3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI2MDQxNg==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2130#discussion_r444260416", "bodyText": "done", "author": "elguardian", "createdAt": "2020-06-23T14:18:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY1MzE2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY1MzMwMQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2130#discussion_r440653301", "bodyText": "+1", "author": "afalhambra", "createdAt": "2020-06-16T07:49:24Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ExceptionHandlingIntegrationTest.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Copyright 2015 Red Hat, Inc. and/or its affiliates.", "originalCommit": "fbc621c9a9393a6b9495ed88aa894a2a87eb9ab3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI2MDQ5Mg==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2130#discussion_r444260492", "bodyText": "done", "author": "elguardian", "createdAt": "2020-06-23T14:18:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY1MzMwMQ=="}], "type": "inlineReview"}, {"oid": "c0c12d97b615dbd820b0c9c1a42507afad645bd6", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/c0c12d97b615dbd820b0c9c1a42507afad645bd6", "message": "[JBPM-9184] Subprocess excepcion handling tx rollback causes main process to fail", "committedDate": "2020-06-23T14:18:23Z", "type": "commit"}, {"oid": "c0c12d97b615dbd820b0c9c1a42507afad645bd6", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/c0c12d97b615dbd820b0c9c1a42507afad645bd6", "message": "[JBPM-9184] Subprocess excepcion handling tx rollback causes main process to fail", "committedDate": "2020-06-23T14:18:23Z", "type": "forcePushed"}]}