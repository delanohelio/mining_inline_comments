{"pr_number": 2228, "pr_title": "[JBPM-9321] Some form options can't be rendered in API response / DocumentCollection", "pr_createdAt": "2020-09-08T10:46:56Z", "pr_url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2228", "timeline": [{"oid": "85030fa786bdc5775b1bd91bf0921f14c95c8d6d", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/85030fa786bdc5775b1bd91bf0921f14c95c8d6d", "message": "[JBPM-9321] Some form options can't be rendered in API response\n\nAdd DocumentCollection input", "committedDate": "2020-09-08T15:49:28Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQwODgxMQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2228#discussion_r485408811", "bodyText": "This code is duplicated, please remove\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    } else if (type.contains(\"Integer\") || type.contains(\"Double\") || type.contains(\"Float\")) {\n          \n          \n            \n                        return \"Number(\";\n          \n          \n            \n                    } else if (type.contains(\"Boolean\")) {\n          \n          \n            \n                        return \"Boolean(\";", "author": "afalhambra", "createdAt": "2020-09-09T07:50:27Z", "path": "kie-server-parent/kie-server-services/kie-server-services-jbpm-ui/src/main/java/org/kie/server/services/jbpm/ui/form/render/AbstractFormRenderer.java", "diffHunk": "@@ -597,12 +644,19 @@ protected void appendFieldJSON(StringBuilder jsonTemplate, String type, String n\n     }\n \n     protected String getFieldType(String type) {\n+\n         if (type.contains(\"Integer\") || type.contains(\"Double\") || type.contains(\"Float\")) {\n             return \"Number(\";\n         } else if (type.contains(\"Boolean\")) {\n             return \"Boolean(\";\n         } else if (type.contains(\"Date\")) {\n             return \"Object(\";\n+        } else if (type.contains(\"Integer\") || type.contains(\"Double\") || type.contains(\"Float\")) {\n+            return \"Number(\";\n+        } else if (type.contains(\"Boolean\")) {\n+            return \"Boolean(\";", "originalCommit": "85030fa786bdc5775b1bd91bf0921f14c95c8d6d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc3MDg3OQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2228#discussion_r487770879", "bodyText": "done", "author": "elguardian", "createdAt": "2020-09-14T09:20:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQwODgxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ3NTI4MA==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2228#discussion_r488475280", "bodyText": "sorry, can't see the change yet?", "author": "afalhambra", "createdAt": "2020-09-15T08:16:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQwODgxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQxMDQzNQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2228#discussion_r485410435", "bodyText": "type.contains(\"Date\") is already covered in a previous else-if statement, no needed here.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    } else if (type.contains(\"Document\") || type.contains(\"documentCollection\") || type.contains(\"Date\")) {\n          \n          \n            \n                    } else if (type.contains(\"Document\") || type.contains(\"documentCollection\")) {", "author": "afalhambra", "createdAt": "2020-09-09T07:53:01Z", "path": "kie-server-parent/kie-server-services/kie-server-services-jbpm-ui/src/main/java/org/kie/server/services/jbpm/ui/form/render/AbstractFormRenderer.java", "diffHunk": "@@ -597,12 +644,19 @@ protected void appendFieldJSON(StringBuilder jsonTemplate, String type, String n\n     }\n \n     protected String getFieldType(String type) {\n+\n         if (type.contains(\"Integer\") || type.contains(\"Double\") || type.contains(\"Float\")) {\n             return \"Number(\";\n         } else if (type.contains(\"Boolean\")) {\n             return \"Boolean(\";\n         } else if (type.contains(\"Date\")) {\n             return \"Object(\";\n+        } else if (type.contains(\"Integer\") || type.contains(\"Double\") || type.contains(\"Float\")) {\n+            return \"Number(\";\n+        } else if (type.contains(\"Boolean\")) {\n+            return \"Boolean(\";\n+        } else if (type.contains(\"Document\") || type.contains(\"documentCollection\") || type.contains(\"Date\")) {", "originalCommit": "85030fa786bdc5775b1bd91bf0921f14c95c8d6d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc3MDkxNg==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2228#discussion_r487770916", "bodyText": "done", "author": "elguardian", "createdAt": "2020-09-14T09:21:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQxMDQzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ3NTQ0MA==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2228#discussion_r488475440", "bodyText": "Same here, can't see the change yet", "author": "afalhambra", "createdAt": "2020-09-15T08:16:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQxMDQzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQxNDUzNQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2228#discussion_r485414535", "bodyText": "static final members should be named all uppercase, with components separated by underscore \"_\" characters\nArrays.asList(\"documentCollection\"); can be replace with singletonList\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static final List<String> fieldsExclusionTransformation = Arrays.asList(\"documentCollection\");\n          \n          \n            \n                public static final List<String> FIELDS_EXCLUSION_TRANSFORMATION = Collections.singletonList(\"documentCollection\");", "author": "afalhambra", "createdAt": "2020-09-09T07:59:53Z", "path": "kie-server-parent/kie-server-services/kie-server-services-jbpm-ui/src/main/java/org/kie/server/services/jbpm/ui/form/render/AbstractFormRenderer.java", "diffHunk": "@@ -61,6 +67,7 @@\n     public static final String PROCESS_LAYOUT_TEMPLATE = \"process-layout\";\n     public static final String TASK_LAYOUT_TEMPLATE = \"task-layout\";\n     public static final String TABLE_LAYOUT_TEMPLATE = \"table\";\n+    public static final List<String> fieldsExclusionTransformation = Arrays.asList(\"documentCollection\");", "originalCommit": "85030fa786bdc5775b1bd91bf0921f14c95c8d6d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc3MTMwMQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2228#discussion_r487771301", "bodyText": "done", "author": "elguardian", "createdAt": "2020-09-14T09:21:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQxNDUzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQzMDYzOQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2228#discussion_r485430639", "bodyText": "typo\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                            DocumentCollection<Document> docColletion = (DocumentCollection<Document>) value;\n          \n          \n            \n                                            DocumentCollection<Document> docCollection = (DocumentCollection<Document>) value;", "author": "afalhambra", "createdAt": "2020-09-09T08:26:36Z", "path": "kie-server-parent/kie-server-services/kie-server-services-jbpm-ui/src/main/java/org/kie/server/services/jbpm/ui/form/render/AbstractFormRenderer.java", "diffHunk": "@@ -379,14 +405,35 @@ protected void processFormLayout(FormInstance topLevelForm,\n                                 value = outputs.get(field.getBinding());\n                             }\n                             \n-                            item.setValue(value);\n+                            if(!fieldsExclusionTransformation.contains(fieldType)) {\n+                                item.setValue(value.toString());\n+                            } else {\n+                                DocumentCollection<Document> docColletion = (DocumentCollection<Document>) value;", "originalCommit": "85030fa786bdc5775b1bd91bf0921f14c95c8d6d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTUyNDU2OQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2228#discussion_r485524569", "bodyText": "this could throw a ClassCastException when there is no binding defined or there is no actual document attached to the form (attached documents can be empty).\n\n  \n    \n      droolsjbpm-integration/kie-server-parent/kie-server-services/kie-server-services-jbpm-ui/src/main/java/org/kie/server/services/jbpm/ui/form/render/AbstractFormRenderer.java\n    \n    \n        Lines 401 to 406\n      in\n      85030fa\n    \n    \n    \n    \n\n        \n          \n           if (inputs.get(field.getBinding()) != null) { \n        \n\n        \n          \n               value = inputs.get(field.getBinding()); \n        \n\n        \n          \n           } \n        \n\n        \n          \n           if (outputs.get(field.getBinding()) != null) { \n        \n\n        \n          \n               value = outputs.get(field.getBinding()); \n        \n\n        \n          \n           }", "author": "afalhambra", "createdAt": "2020-09-09T11:02:12Z", "path": "kie-server-parent/kie-server-services/kie-server-services-jbpm-ui/src/main/java/org/kie/server/services/jbpm/ui/form/render/AbstractFormRenderer.java", "diffHunk": "@@ -379,14 +405,35 @@ protected void processFormLayout(FormInstance topLevelForm,\n                                 value = outputs.get(field.getBinding());\n                             }\n                             \n-                            item.setValue(value);\n+                            if(!fieldsExclusionTransformation.contains(fieldType)) {\n+                                item.setValue(value.toString());\n+                            } else {\n+                                DocumentCollection<Document> docColletion = (DocumentCollection<Document>) value;", "originalCommit": "85030fa786bdc5775b1bd91bf0921f14c95c8d6d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc3MjY0NA==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2228#discussion_r487772644", "bodyText": "you setup this wrong. The type of the field should be org.jbpm.document.DocumentCollection\nand it should be binded to a document collection. Otherwise it is not possible to make it work.\nI am adding a instanceof check anyway.", "author": "elguardian", "createdAt": "2020-09-14T09:24:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTUyNDU2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA5OTg1MQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2228#discussion_r486099851", "bodyText": "item.getValue().equals(\"{}\") may throw a NPE\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                        if ((\"file\".equals(fieldType) || \"documentCollection\".equals(fieldType)) && !item.getValue().equals(\"{}\")) {\n          \n          \n            \n                                        if ((\"file\".equals(fieldType) || \"documentCollection\".equals(fieldType)) && !\"\".equals(item.getValue())) {", "author": "afalhambra", "createdAt": "2020-09-10T06:40:44Z", "path": "kie-server-parent/kie-server-services/kie-server-services-jbpm-ui/src/main/java/org/kie/server/services/jbpm/ui/form/render/AbstractFormRenderer.java", "diffHunk": "@@ -379,14 +405,35 @@ protected void processFormLayout(FormInstance topLevelForm,\n                                 value = outputs.get(field.getBinding());\n                             }\n                             \n-                            item.setValue(value);\n+                            if(!fieldsExclusionTransformation.contains(fieldType)) {\n+                                item.setValue(value.toString());\n+                            } else {\n+                                DocumentCollection<Document> docColletion = (DocumentCollection<Document>) value;\n+                                docColletion.getDocuments().stream()\n+                                                           .map(e -> (DocumentImpl) e)\n+                                                           .forEach(DocumentImpl::load);\n+\n+                                List<DocumentItem> items = docColletion.getDocuments()\n+                                                               .stream()\n+                                                               .map(e -> new DocumentItem(e.getName(), Base64.getEncoder().encodeToString(e.getContent())))\n+                                                               .collect(Collectors.toList());\n+                                item.setValue(items);\n+                            }\n+                            \n+\n+\n                             item.setReadOnly(field.isReadOnly());\n                             item.setRequired(field.isRequired());\n-                            \n+\n                             // generate column content                    \n                             Map<String, Object> parameters = new HashMap<>();\n                             parameters.put(\"item\", item);\n-                            parameters.put(\"documentPath\", getDocumentPath()); // used to generate link for documents\n+                            if ((\"file\".equals(fieldType) || \"documentCollection\".equals(fieldType)) && !item.getValue().equals(\"{}\")) {", "originalCommit": "85030fa786bdc5775b1bd91bf0921f14c95c8d6d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ3NDg5Mw==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2228#discussion_r488474893", "bodyText": "Any updates on this?", "author": "afalhambra", "createdAt": "2020-09-15T08:15:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA5OTg1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY4OTA4OQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2228#discussion_r488689089", "bodyText": "not really needed", "author": "elguardian", "createdAt": "2020-09-15T13:57:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA5OTg1MQ=="}], "type": "inlineReview"}, {"oid": "484a98e66724105d3f2190c0f0d95440938818d4", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/484a98e66724105d3f2190c0f0d95440938818d4", "message": "[JBPM-9321] Some form options can't be rendered in API response\n\nAdd DocumentCollection input", "committedDate": "2020-09-14T09:40:22Z", "type": "commit"}, {"oid": "484a98e66724105d3f2190c0f0d95440938818d4", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/484a98e66724105d3f2190c0f0d95440938818d4", "message": "[JBPM-9321] Some form options can't be rendered in API response\n\nAdd DocumentCollection input", "committedDate": "2020-09-14T09:40:22Z", "type": "forcePushed"}]}