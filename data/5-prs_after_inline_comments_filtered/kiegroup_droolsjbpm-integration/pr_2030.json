{"pr_number": 2030, "pr_title": "Fix Springboot Swagger tests", "pr_createdAt": "2020-02-27T09:52:17Z", "pr_url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2030", "timeline": [{"oid": "1e42819a63b01b723e7f58428c6ed64700915a85", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/1e42819a63b01b723e7f58428c6ed64700915a85", "message": "Fix Springboot Swagger tests", "committedDate": "2020-02-27T17:05:27Z", "type": "forcePushed"}, {"oid": "bf5d9c2d298a85ae51aca5c4fb2618ca4e3e7959", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/bf5d9c2d298a85ae51aca5c4fb2618ca4e3e7959", "message": "Fix Springboot Swagger tests", "committedDate": "2020-02-27T23:32:31Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY2NDE5Mg==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2030#discussion_r385664192", "bodyText": "Can you please remove this line from assertResponse and place it for example directly to test methods?\nIt is a side effect and is unrelated to meaning of assertResponse method - according to its name I would expect it just to check response, not setting some method variable.", "author": "sutaakar", "createdAt": "2020-02-28T12:16:29Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/swagger/SwaggerIntegrationTest.java", "diffHunk": "@@ -53,39 +57,49 @@ public static void closeHttpClient() {\n \n     @Test\n     public void testSwaggerDocs() throws Exception {\n-        String html = invokeGet(getContextRoot()+\"docs/\");\n+        Response response = invokeGet(getContextRoot(3)+\"docs/\");\n         \n-        assertThat(Jsoup.parse(html).title()).isEqualTo(\"Execution Server Documentation\");\n+        if (response.getStatus()!=200) {\n+            //Springboot Swagger Docs is located in other URL\n+            response = invokeGet(getContextRoot(1)+\"api-docs?url=\"+getContextRoot(1)+\"swagger.json\");\n+        }\n+\n+        assertResponse(response);\n+        assertThat(Jsoup.parse(responseStr).title()).isIn(\"Execution Server Documentation\", \"Swagger UI\");\n     }\n \n     @Test\n     @SuppressWarnings(\"unchecked\")\n     public void testSwaggerJson() throws Exception {\n-        String responseStr = invokeGet(getContextRoot()+\"services/rest/server/swagger.json\");\n-        \n+        Response response = invokeGet(TestConfig.getKieServerHttpUrl()+\"/swagger.json\");\n+        assertResponse(response);\n+\n         ObjectMapper om = new ObjectMapper();\n         HashMap<String, Object> hm = (HashMap<String, Object>) om.readValue(responseStr, HashMap.class);\n         assertNotNull(hm.get(\"swagger\"));\n         assertNotNull(hm.get(\"info\"));\n         assertEquals(\"KIE Server\", ((HashMap<String, Object>) hm.get(\"info\")).get(\"title\"));\n      }\n \n-    protected String getContextRoot() {\n-        //Navigate to parent path 3 times to get context root\n+    protected String getContextRoot(int foldersUp) {\n+        //Navigate to parent path N folders up to get context root\n         String url = TestConfig.getKieServerHttpUrl();\n         int pos = url.length();\n-        for (int i = 0; i < 3; i++) {\n+        for (int i = 0; i < foldersUp; i++) {\n             pos = url.lastIndexOf('/', pos - 1);\n         }\n         return url.substring(0, pos + 1);\n     }\n \n-    protected String invokeGet(String docsUri) {\n+    protected Response invokeGet(String docsUri) {\n+        logger.info(\"[GET] \" + docsUri);\n         WebTarget clientRequest = httpClient.target(docsUri);\n-        Response response = clientRequest.request().get();\n+        return clientRequest.request().get();\n+    }\n \n+    private void assertResponse(Response response) {\n         assertEquals(200, response.getStatus());\n         assertNotNull(response.getEntity());\n-        return response.readEntity(String.class);\n+        responseStr = response.readEntity(String.class);", "originalCommit": "bf5d9c2d298a85ae51aca5c4fb2618ca4e3e7959", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzUwMDk1NQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2030#discussion_r387500955", "bodyText": "Done, moved to upper level", "author": "gmunozfe", "createdAt": "2020-03-04T08:03:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY2NDE5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY2ODAwNg==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2030#discussion_r385668006", "bodyText": "Can you please close the response in the end of test?", "author": "sutaakar", "createdAt": "2020-02-28T12:26:25Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/swagger/SwaggerIntegrationTest.java", "diffHunk": "@@ -53,39 +57,49 @@ public static void closeHttpClient() {\n \n     @Test\n     public void testSwaggerDocs() throws Exception {\n-        String html = invokeGet(getContextRoot()+\"docs/\");\n+        Response response = invokeGet(getContextRoot(3)+\"docs/\");", "originalCommit": "bf5d9c2d298a85ae51aca5c4fb2618ca4e3e7959", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzUwMTA0MQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2030#discussion_r387501041", "bodyText": "done", "author": "gmunozfe", "createdAt": "2020-03-04T08:03:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY2ODAwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY2ODEwNw==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2030#discussion_r385668107", "bodyText": "Same as above.", "author": "sutaakar", "createdAt": "2020-02-28T12:26:39Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/swagger/SwaggerIntegrationTest.java", "diffHunk": "@@ -53,39 +57,49 @@ public static void closeHttpClient() {\n \n     @Test\n     public void testSwaggerDocs() throws Exception {\n-        String html = invokeGet(getContextRoot()+\"docs/\");\n+        Response response = invokeGet(getContextRoot(3)+\"docs/\");\n         \n-        assertThat(Jsoup.parse(html).title()).isEqualTo(\"Execution Server Documentation\");\n+        if (response.getStatus()!=200) {\n+            //Springboot Swagger Docs is located in other URL\n+            response = invokeGet(getContextRoot(1)+\"api-docs?url=\"+getContextRoot(1)+\"swagger.json\");\n+        }\n+\n+        assertResponse(response);\n+        assertThat(Jsoup.parse(responseStr).title()).isIn(\"Execution Server Documentation\", \"Swagger UI\");\n     }\n \n     @Test\n     @SuppressWarnings(\"unchecked\")\n     public void testSwaggerJson() throws Exception {\n-        String responseStr = invokeGet(getContextRoot()+\"services/rest/server/swagger.json\");\n-        \n+        Response response = invokeGet(TestConfig.getKieServerHttpUrl()+\"/swagger.json\");", "originalCommit": "bf5d9c2d298a85ae51aca5c4fb2618ca4e3e7959", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzUwMTE3MQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2030#discussion_r387501171", "bodyText": "done", "author": "gmunozfe", "createdAt": "2020-03-04T08:03:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY2ODEwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY2ODI4Nw==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2030#discussion_r385668287", "bodyText": "Can you please change the log level to debug?", "author": "sutaakar", "createdAt": "2020-02-28T12:27:09Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/swagger/SwaggerIntegrationTest.java", "diffHunk": "@@ -53,39 +57,49 @@ public static void closeHttpClient() {\n \n     @Test\n     public void testSwaggerDocs() throws Exception {\n-        String html = invokeGet(getContextRoot()+\"docs/\");\n+        Response response = invokeGet(getContextRoot(3)+\"docs/\");\n         \n-        assertThat(Jsoup.parse(html).title()).isEqualTo(\"Execution Server Documentation\");\n+        if (response.getStatus()!=200) {\n+            //Springboot Swagger Docs is located in other URL\n+            response = invokeGet(getContextRoot(1)+\"api-docs?url=\"+getContextRoot(1)+\"swagger.json\");\n+        }\n+\n+        assertResponse(response);\n+        assertThat(Jsoup.parse(responseStr).title()).isIn(\"Execution Server Documentation\", \"Swagger UI\");\n     }\n \n     @Test\n     @SuppressWarnings(\"unchecked\")\n     public void testSwaggerJson() throws Exception {\n-        String responseStr = invokeGet(getContextRoot()+\"services/rest/server/swagger.json\");\n-        \n+        Response response = invokeGet(TestConfig.getKieServerHttpUrl()+\"/swagger.json\");\n+        assertResponse(response);\n+\n         ObjectMapper om = new ObjectMapper();\n         HashMap<String, Object> hm = (HashMap<String, Object>) om.readValue(responseStr, HashMap.class);\n         assertNotNull(hm.get(\"swagger\"));\n         assertNotNull(hm.get(\"info\"));\n         assertEquals(\"KIE Server\", ((HashMap<String, Object>) hm.get(\"info\")).get(\"title\"));\n      }\n \n-    protected String getContextRoot() {\n-        //Navigate to parent path 3 times to get context root\n+    protected String getContextRoot(int foldersUp) {\n+        //Navigate to parent path N folders up to get context root\n         String url = TestConfig.getKieServerHttpUrl();\n         int pos = url.length();\n-        for (int i = 0; i < 3; i++) {\n+        for (int i = 0; i < foldersUp; i++) {\n             pos = url.lastIndexOf('/', pos - 1);\n         }\n         return url.substring(0, pos + 1);\n     }\n \n-    protected String invokeGet(String docsUri) {\n+    protected Response invokeGet(String docsUri) {\n+        logger.info(\"[GET] \" + docsUri);", "originalCommit": "bf5d9c2d298a85ae51aca5c4fb2618ca4e3e7959", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzUwMTA5OQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2030#discussion_r387501099", "bodyText": "done", "author": "gmunozfe", "createdAt": "2020-03-04T08:03:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY2ODI4Nw=="}], "type": "inlineReview"}, {"oid": "8a6940ac5dd64886339a5492c538b017d1f6cb41", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/8a6940ac5dd64886339a5492c538b017d1f6cb41", "message": "Fix Springboot Swagger tests", "committedDate": "2020-03-04T08:02:03Z", "type": "commit"}, {"oid": "8a6940ac5dd64886339a5492c538b017d1f6cb41", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/8a6940ac5dd64886339a5492c538b017d1f6cb41", "message": "Fix Springboot Swagger tests", "committedDate": "2020-03-04T08:02:03Z", "type": "forcePushed"}]}