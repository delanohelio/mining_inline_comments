{"pr_number": 606, "pr_title": "Handle publish future exception", "pr_createdAt": "2020-11-02T22:16:39Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/606", "timeline": [{"oid": "a542effaae8761ee54471eda66c2f0f6b2b49f80", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/a542effaae8761ee54471eda66c2f0f6b2b49f80", "message": "Handle publish future exception", "committedDate": "2020-11-02T22:10:44Z", "type": "commit"}, {"oid": "7fa9938023fce5517a24801dc953b503556440f4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/7fa9938023fce5517a24801dc953b503556440f4", "message": "Merge branch 'master' into mqtt-publish", "committedDate": "2020-11-02T22:24:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI5MjQyMQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/606#discussion_r516292421", "bodyText": "The error log is more accurate to be \"Unable to add publish request to spooler\"", "author": "awszztt", "createdAt": "2020-11-02T22:26:19Z", "path": "src/main/java/com/aws/greengrass/builtin/services/mqttproxy/MqttProxyIPCAgent.java", "diffHunk": "@@ -90,21 +89,23 @@ public PublishToIoTCoreResponse handleRequest(PublishToIoTCoreRequest request) {\n                 doAuthorization(this.getOperationModelContext().getOperationName(), serviceName, topic);\n             } catch (AuthorizationException e) {\n                 LOGGER.atError().cause(e).log();\n-                throw new UnauthorizedError(String.format(\"Authorization failed with error %s\", e.getMessage()));\n+                throw new UnauthorizedError(String.format(\"Authorization failed with error %s\", e));\n             }\n \n             PublishRequest publishRequest = PublishRequest.builder().payload(request.getPayload()).topic(topic)\n                     .retain(request.isRetain()).qos(getQualityOfServiceFromQOS(request.getQos())).build();\n             CompletableFuture<Integer> future = mqttClient.publish(publishRequest);\n \n-            // GG_NEEDS_REVIEW: TODO: replace this with a check that message is inserted in spooler queue\n-            try {\n-                future.get(mqttClient.getTimeout(), TimeUnit.MILLISECONDS);\n-            } catch (InterruptedException | ExecutionException | TimeoutException e) {\n-                LOGGER.atError().cause(e).kv(TOPIC_KEY, topic).kv(SERVICE_KEY, serviceName)\n-                        .log(\"Unable to publish to topic\");\n-                throw new ServiceError(String.format(\"Publish to topic %s failed with error %s\", topic,\n-                        e.getMessage()));\n+            if (future.isCompletedExceptionally()) {\n+                try {\n+                    future.get();\n+                } catch (InterruptedException ignore) {\n+                    // this won't happen since future already completed\n+                } catch (ExecutionException e) {\n+                    LOGGER.atError().cause(e).kv(TOPIC_KEY, topic).kv(SERVICE_KEY, serviceName)\n+                            .log(\"Unable to publish to topic\");", "originalCommit": "7fa9938023fce5517a24801dc953b503556440f4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM3NTIyNA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/606#discussion_r516375224", "bodyText": "done", "author": "popanmol", "createdAt": "2020-11-03T01:00:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI5MjQyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI5NDU5Mg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/606#discussion_r516294592", "bodyText": "I did not get why this method should be deleted. The mqttClient.subscribe() mqttClient.unsubscribe are also involved this.", "author": "awszztt", "createdAt": "2020-11-02T22:31:18Z", "path": "src/main/java/com/aws/greengrass/mqttclient/MqttClient.java", "diffHunk": "@@ -547,10 +547,6 @@ public void addToCallbackEvents(MqttClientConnectionEvents callbacks) {\n         callbackEventManager.addToCallbackEvents(callbacks);\n     }\n \n-    public int getTimeout() {\n-        return Coerce.toInt(mqttTopics.findOrDefault(DEFAULT_MQTT_OPERATION_TIMEOUT, MQTT_OPERATION_TIMEOUT_KEY));", "originalCommit": "7fa9938023fce5517a24801dc953b503556440f4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjMyMjIyNg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/606#discussion_r516322226", "bodyText": "mqttClient.subscribe() and mqttClient.unsubscribe are calling the publish method of AwsIotMqttClient.\nThis one was added by me just for calling in MqttProxyIPCAgent, so removing it now", "author": "popanmol", "createdAt": "2020-11-02T23:16:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI5NDU5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjMyODU3MQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/606#discussion_r516328571", "bodyText": "Can you add an integration test to make sure the appropriate error response is returned to the IPC client?", "author": "jbutler", "createdAt": "2020-11-02T23:26:06Z", "path": "src/main/java/com/aws/greengrass/builtin/services/mqttproxy/MqttProxyIPCAgent.java", "diffHunk": "@@ -90,21 +89,23 @@ public PublishToIoTCoreResponse handleRequest(PublishToIoTCoreRequest request) {\n                 doAuthorization(this.getOperationModelContext().getOperationName(), serviceName, topic);\n             } catch (AuthorizationException e) {\n                 LOGGER.atError().cause(e).log();\n-                throw new UnauthorizedError(String.format(\"Authorization failed with error %s\", e.getMessage()));\n+                throw new UnauthorizedError(String.format(\"Authorization failed with error %s\", e));\n             }\n \n             PublishRequest publishRequest = PublishRequest.builder().payload(request.getPayload()).topic(topic)\n                     .retain(request.isRetain()).qos(getQualityOfServiceFromQOS(request.getQos())).build();\n             CompletableFuture<Integer> future = mqttClient.publish(publishRequest);\n \n-            // GG_NEEDS_REVIEW: TODO: replace this with a check that message is inserted in spooler queue\n-            try {\n-                future.get(mqttClient.getTimeout(), TimeUnit.MILLISECONDS);\n-            } catch (InterruptedException | ExecutionException | TimeoutException e) {\n-                LOGGER.atError().cause(e).kv(TOPIC_KEY, topic).kv(SERVICE_KEY, serviceName)\n-                        .log(\"Unable to publish to topic\");\n-                throw new ServiceError(String.format(\"Publish to topic %s failed with error %s\", topic,\n-                        e.getMessage()));\n+            if (future.isCompletedExceptionally()) {\n+                try {\n+                    future.get();\n+                } catch (InterruptedException ignore) {\n+                    // this won't happen since future already completed\n+                } catch (ExecutionException e) {\n+                    LOGGER.atError().cause(e).kv(TOPIC_KEY, topic).kv(SERVICE_KEY, serviceName)\n+                            .log(\"Unable to publish to topic\");\n+                    throw new ServiceError(String.format(\"Publish to topic %s failed with error %s\", topic, e));", "originalCommit": "7fa9938023fce5517a24801dc953b503556440f4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3600a443192ce4484d6c7b764e23f6f3ffabbc4e", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3600a443192ce4484d6c7b764e23f6f3ffabbc4e", "message": "integ test for publish error", "committedDate": "2020-11-03T00:56:11Z", "type": "commit"}, {"oid": "56cdee019dd65ce82e2668a008ade90c1ea489e0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/56cdee019dd65ce82e2668a008ade90c1ea489e0", "message": "Merge branch 'master' into mqtt-publish", "committedDate": "2020-11-03T00:58:27Z", "type": "commit"}, {"oid": "123c997823d54378d63b56900355f6acc09ed7bf", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/123c997823d54378d63b56900355f6acc09ed7bf", "message": "Merge branch 'master' into mqtt-publish", "committedDate": "2020-11-03T01:41:16Z", "type": "commit"}, {"oid": "b99bcae9956a41602ac692144c54ed4c0f21ce51", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b99bcae9956a41602ac692144c54ed4c0f21ce51", "message": "Merge branch 'master' into mqtt-publish", "committedDate": "2020-11-03T18:09:02Z", "type": "commit"}, {"oid": "4b4e6cd308b179df981d3f68b6820a2b3e820a7b", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/4b4e6cd308b179df981d3f68b6820a2b3e820a7b", "message": "Merge branch 'master' into mqtt-publish", "committedDate": "2020-11-03T20:50:33Z", "type": "commit"}]}