{"pr_number": 643, "pr_title": "Setup script", "pr_createdAt": "2020-11-09T18:05:57Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/643", "timeline": [{"oid": "02a0a5cf10c2dd1fdbd69897027569ea3d94d7e9", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/02a0a5cf10c2dd1fdbd69897027569ea3d94d7e9", "message": "Fixes for user and group handling in setup", "committedDate": "2020-11-09T18:18:44Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAxNjg4Nw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/643#discussion_r520016887", "bodyText": "can't you just use Exec.sh here?", "author": "rbattle", "createdAt": "2020-11-09T18:11:29Z", "path": "src/main/java/com/aws/greengrass/util/platforms/unix/UnixPlatform.java", "diffHunk": "@@ -324,6 +325,21 @@ public UnixRunWithGenerator getRunWithGenerator() {\n         return runWithGenerator;\n     }\n \n+    @Override\n+    public void createUser(String user) throws IOException, InterruptedException {\n+        runCmd(\"useradd -r -m \" + user, o -> {}, \"Failed to create user\");", "originalCommit": "44ef77988dd44c9ef4c32882f9b8aca130ed463b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA1NjY0MQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/643#discussion_r520056641", "bodyText": "It does use exec, created this method to keep the error handling common logic for whenever I have to use exec", "author": "shaguptashaikh", "createdAt": "2020-11-09T19:12:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAxNjg4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAxNzQ1Nw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/643#discussion_r520017457", "bodyText": "you can combine this into one if statement, or immediately return if not the super user instead of having nested ifs", "author": "rbattle", "createdAt": "2020-11-09T18:12:26Z", "path": "src/main/java/com/aws/greengrass/easysetup/GreengrassSetup.java", "diffHunk": "@@ -393,31 +344,66 @@ private String getArg() {\n     void provision(Kernel kernel) throws IOException, DeviceConfigurationException {\n         outStream.printf(\"Provisioning AWS IoT resources for the device with IoT Thing Name: [%s]...%n\", thingName);\n         final ThingInfo thingInfo =\n-                deviceProvisioningHelper.createThing(deviceProvisioningHelper.getIotClient(), policyName, thingName);\n+                deviceProvisioningHelper.createThing(deviceProvisioningHelper.getIotClient(), thingName);\n         outStream.printf(\"Successfully provisioned AWS IoT resources for the device with IoT Thing Name: [%s]!%n\",\n                 thingName);\n         if (!Utils.isEmpty(thingGroupName)) {\n             outStream.printf(\"Adding IoT Thing [%s] into Thing Group: [%s]...%n\", thingName, thingGroupName);\n-                deviceProvisioningHelper.addThingToGroup(deviceProvisioningHelper.getIotClient(), thingName,\n-                        thingGroupName);\n+            deviceProvisioningHelper\n+                    .addThingToGroup(deviceProvisioningHelper.getIotClient(), thingName, thingGroupName);\n             outStream.printf(\"Successfully added Thing into Thing Group: [%s]%n\", thingGroupName);\n         }\n-\n-        // TODO: [P41215965]: setupTes should not be an arg anymore since role alias is required, need to remove\n-        //  this arg and always pass either user specified or a default role alias\n-        if (setupTes) {\n-            outStream.println(\"Setting up resources for TokenExchangeService...\");\n-            deviceProvisioningHelper.setupIoTRoleForTes(tesRoleName, tesRoleAliasName, thingInfo.getCertificateArn());\n-            if (tesRolePolicyName != null && tesRolePolicyDoc != null) {\n-                deviceProvisioningHelper.createAndAttachRolePolicy(tesRoleName, tesRolePolicyName, tesRolePolicyDoc);\n-            }\n-        }\n-        outStream.println(\"Configuring kernel with provisioned resource details...\");\n+        outStream.printf(\"Setting up resources for %s ... %n\", TokenExchangeService.TOKEN_EXCHANGE_SERVICE_TOPICS);\n+        deviceProvisioningHelper.setupIoTRoleForTes(tesRoleName, tesRoleAliasName, thingInfo.getCertificateArn());\n+        deviceProvisioningHelper.createAndAttachRolePolicy(tesRoleName);\n+        outStream.println(\"Configuring Nucleus with provisioned resource details...\");\n         deviceProvisioningHelper.updateKernelConfigWithIotConfiguration(kernel, thingInfo, awsRegion, tesRoleAliasName);\n         outStream.println(\"Successfully configured kernel with provisioned resource details!\");\n+        if (deployDevTools) {\n+            deviceProvisioningHelper.createInitialDeploymentIfNeeded(thingInfo, thingGroupName);\n+        }\n \n     }\n \n+    @SuppressWarnings(\"PMD.PreserveStackTrace\")\n+    private void setComponentDefaultUserAndGroup() {\n+        try {\n+            Platform platform = Platform.getInstance();\n+            // If not super user and default user option is not provided, the current user will be used\n+            // as the default user so we do not need to create anything here\n+            if (platform.lookupCurrentUser().isSuperUser()) {\n+                if (Utils.isEmpty(defaultUser) || GGC_USER.equals(defaultUser)) {", "originalCommit": "44ef77988dd44c9ef4c32882f9b8aca130ed463b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA1NzExNw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/643#discussion_r520057117", "bodyText": "Combined the ifs", "author": "shaguptashaikh", "createdAt": "2020-11-09T19:12:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAxNzQ1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAxODU3OQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/643#discussion_r520018579", "bodyText": "can't you just use Exec.sh here?", "author": "rbattle", "createdAt": "2020-11-09T18:14:29Z", "path": "src/main/java/com/aws/greengrass/util/platforms/unix/DarwinPlatform.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.util.platforms.unix;\n+\n+import java.io.IOException;\n+import java.util.concurrent.atomic.AtomicLong;\n+\n+public class DarwinPlatform extends UnixPlatform {\n+    private static String CREATE_USER_CMD_PREFIX = \"sudo dscl . -create /Users/\";\n+    private static String AVAILABLE_UNIQUE_ID_CMD =\n+            \"dscl . -list /Users UniqueID | awk '{print $2}' | sort -ug | tail -1\";\n+    private static String CREATE_GROUP_CMD_PREFIX = \"sudo dscl . -create /Groups/\";\n+    private static String AVAILABLE_GID_CMD = \"dscl . -list /Groups gid | awk '{print $2}' | sort -ug | tail -1\";\n+    private static String ADD_USER_TO_GROUP_CMD_PREFIX = \"sudo dscl . -append /Groups/\";\n+\n+    @Override\n+    public void createUser(String user) throws IOException, InterruptedException {\n+        AtomicLong uniqueUid = new AtomicLong();\n+        runCmd(AVAILABLE_UNIQUE_ID_CMD, o -> {\n+            uniqueUid.set(Long.parseLong(o.toString().replaceAll(\"\\\\n\", \"\")) + 1L);\n+        }, \"Cannot get a unique id for creating user\");\n+        runCmd(CREATE_USER_CMD_PREFIX + user, o -> {}, \"Failed to create user\");", "originalCommit": "44ef77988dd44c9ef4c32882f9b8aca130ed463b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA1Njc1OA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/643#discussion_r520056758", "bodyText": "Same as above", "author": "shaguptashaikh", "createdAt": "2020-11-09T19:12:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAxODU3OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE0NDQ3NA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/643#discussion_r520144474", "bodyText": "swap the arguments here then - your message should come first, not the command.\nI think you would actually be better off doing something like:\nlogger.atError()\n.kv(\"stdout\", output)\n.kv(\"stderr\", err)\n.kv(\"command\", cmdStr)\n.log(\"Error running command\")\nthrow new IOException(msg);\n\nAlso, should you catch IOException too - Runtime.getRuntime().exec() will throw IOException if an error occurs - if it does your message gets lost", "author": "rbattle", "createdAt": "2020-11-09T21:53:45Z", "path": "src/main/java/com/aws/greengrass/util/platforms/unix/UnixPlatform.java", "diffHunk": "@@ -397,6 +413,27 @@ public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IO\n         }\n     }\n \n+    protected void runCmd(String cmdStr, Consumer<CharSequence> out, String msg)\n+            throws IOException, InterruptedException {\n+        try (Exec exec = new Exec()) {\n+            StringBuilder output = new StringBuilder();\n+            StringBuilder error = new StringBuilder();\n+            Optional<Integer> exit = exec.withExec(cmdStr.split(\" \"))\n+                    .withShell()\n+                    .withOut(o -> {\n+                        out.accept(o);\n+                        output.append(o);\n+                    }).withErr(e -> {\n+                        error.append(e);\n+                    }).exec();\n+            if (!exit.isPresent() || exit.get() != 0) {\n+                throw new IOException(String.format(\n+                        String.format(\"%s - command: %s, output: %s , error: %s \", cmdStr, msg, output.toString(),", "originalCommit": "02a0a5cf10c2dd1fdbd69897027569ea3d94d7e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE4NTYzMg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/643#discussion_r520185632", "bodyText": "Updated the sequence and catching the .exec() exceptions, although still including all details in the exception message instead of logging because the actual error in running the command is more important to include in the setup script output than the hardcoded message strings", "author": "shaguptashaikh", "createdAt": "2020-11-09T23:26:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE0NDQ3NA=="}], "type": "inlineReview"}, {"oid": "1975ea0238e38dcee28afe5210bcd5fd6d4a27aa", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/1975ea0238e38dcee28afe5210bcd5fd6d4a27aa", "message": "Fixes for user and group handling in setup", "committedDate": "2020-11-09T23:21:02Z", "type": "forcePushed"}, {"oid": "2ccd57e1496e294269f00376b5ad868d61ac9802", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/2ccd57e1496e294269f00376b5ad868d61ac9802", "message": "Revert \"Revert \"Setup script changes (#610)\" (#641)\"\n\nThis reverts commit c7698ff5da0945972597e22be2015fd251640f96.", "committedDate": "2020-11-10T01:27:57Z", "type": "commit"}, {"oid": "0681064a1682dae6cc90b0962d5805c4122381d0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/0681064a1682dae6cc90b0962d5805c4122381d0", "message": "Fixes for user and group handling in setup", "committedDate": "2020-11-10T01:27:57Z", "type": "commit"}, {"oid": "c6264786ab47cef0daff307f636e5998bdaf6b65", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c6264786ab47cef0daff307f636e5998bdaf6b65", "message": "Update Cli component name, change condition, change macos group", "committedDate": "2020-11-10T01:27:57Z", "type": "commit"}, {"oid": "c6264786ab47cef0daff307f636e5998bdaf6b65", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c6264786ab47cef0daff307f636e5998bdaf6b65", "message": "Update Cli component name, change condition, change macos group", "committedDate": "2020-11-10T01:27:57Z", "type": "forcePushed"}, {"oid": "48261e1142f1c1f6127728f4b1edbafc4de6ba45", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/48261e1142f1c1f6127728f4b1edbafc4de6ba45", "message": "Merge branch 'master' into setup-script", "committedDate": "2020-11-10T02:06:01Z", "type": "commit"}, {"oid": "2874e0bf50ee00e7aa33693e50e15ab168d4f27c", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/2874e0bf50ee00e7aa33693e50e15ab168d4f27c", "message": "Merge branch 'master' into setup-script", "committedDate": "2020-11-10T02:45:16Z", "type": "commit"}]}