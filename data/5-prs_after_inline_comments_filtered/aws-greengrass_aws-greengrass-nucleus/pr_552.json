{"pr_number": 552, "pr_title": "Add hook to allow test feature parameters to be overridden by a plugin", "pr_createdAt": "2020-10-21T01:02:44Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/552", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODkzMjc5NQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/552#discussion_r508932795", "bodyText": "copyright notice here too", "author": "MikeDombo", "createdAt": "2020-10-21T01:19:50Z", "path": "src/test/java/com/aws/greengrass/testing/TestFeatureParametersTest.java", "diffHunk": "@@ -0,0 +1,68 @@\n+package com.aws.greengrass.testing;", "originalCommit": "42a5e1678082ac6828c956d36d921cf07819400d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYyNTU0Nw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/552#discussion_r509625547", "bodyText": "Ugh, good catch.", "author": "JamieHunter", "createdAt": "2020-10-21T19:50:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODkzMjc5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTI0MTI1NA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/552#discussion_r509241254", "bodyText": "[nit] I think it would be beneficial to log DEBUG which handler implementation is being used to retrieve the parameter", "author": "philcali", "createdAt": "2020-10-21T12:37:17Z", "path": "src/main/java/com/aws/greengrass/testing/TestFeatureParameters.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/* Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0 */\n+\n+package com.aws.greengrass.testing;\n+\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+/**\n+ * Some functionality is enabled only for integration testing. Such functionality is subject to change between\n+ * releases of the Greengrass Nucleus and/or may result in unstable behavior in production and should be avoided.\n+ */\n+public final class TestFeatureParameters {\n+\n+    /**\n+     * Default implementation when not overridden.\n+     */\n+    /*PackagePrivate*/ static TestFeatureParameterInterface DEFAULT_HANDLER = new TestFeatureParameterInterface() {\n+        /**\n+         * {@inheritDoc}\n+         */\n+        @Override\n+        public <T> T get(String featureParameterName, T productionValue) {\n+            return productionValue;\n+        }\n+    };\n+\n+    private static final AtomicReference<TestFeatureParameterInterface> handler =\n+                                                                            new AtomicReference<>(DEFAULT_HANDLER);\n+\n+    private TestFeatureParameters() {\n+        // No instance methods\n+    }\n+\n+    /**\n+     * Retrieve either the provided production value of a parameter, or, under test conditions, an alternative value\n+     * specific for the test being undertaken.\n+     *\n+     * @param featureParameterName Name of parameter to query.\n+     * @param productionValue Value to use when not overridden under test conditions.\n+     * @param <T> Simple parameter type (String, Integer, etc).\n+     * @return Production value, or override value.\n+     */\n+    public static <T> T get(String featureParameterName, T productionValue) {\n+        return handler.get().get(featureParameterName, productionValue);\n+    }", "originalCommit": "42a5e1678082ac6828c956d36d921cf07819400d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYyNTI3MQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/552#discussion_r509625271", "bodyText": "Good idea.", "author": "JamieHunter", "createdAt": "2020-10-21T19:50:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTI0MTI1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgxNzI0OA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/552#discussion_r509817248", "bodyText": "\ud83d\udc4d", "author": "philcali", "createdAt": "2020-10-22T00:53:19Z", "path": "src/main/java/com/aws/greengrass/testing/TestFeatureParameters.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/* Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0 */\n+\n+package com.aws.greengrass.testing;\n+\n+import com.aws.greengrass.logging.api.Logger;\n+import com.aws.greengrass.logging.impl.LogManager;\n+\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+/**\n+ * Some functionality is enabled only for integration testing. Such functionality is subject to change between\n+ * releases of the Greengrass Nucleus and/or may result in unstable behavior in production and should be avoided.\n+ */\n+public final class TestFeatureParameters {\n+    private static final Logger LOGGER = LogManager.getLogger(TestFeatureParameters.class);\n+\n+    /**\n+     * Default implementation when not overridden.\n+     */\n+    /*PackagePrivate*/ static TestFeatureParameterInterface DEFAULT_HANDLER = new TestFeatureParameterInterface() {\n+        /**\n+         * {@inheritDoc}\n+         */\n+        @Override\n+        public <T> T get(String featureParameterName, T productionValue) {\n+            return productionValue;\n+        }\n+    };\n+\n+    private static final AtomicReference<TestFeatureParameterInterface> handler =\n+                                                                            new AtomicReference<>(DEFAULT_HANDLER);\n+\n+    private TestFeatureParameters() {\n+        // No instance methods\n+    }\n+\n+    /**\n+     * Retrieve either the provided production value of a parameter, or, under test conditions, an alternative value\n+     * specific for the test being undertaken.\n+     *\n+     * @param featureParameterName Name of parameter to query.\n+     * @param productionValue Value to use when not overridden under test conditions.\n+     * @param <T> Simple parameter type (String, Integer, etc).\n+     * @return Production value, or override value.\n+     */\n+    public static <T> T get(String featureParameterName, T productionValue) {\n+        return handler.get().get(featureParameterName, productionValue);\n+    }\n+\n+    /**\n+     * Called under test conditions to provide a feature parameter handler. Note that this method is subject to change\n+     * under future releases of Nucleus.\n+     *\n+     * @param newHandler New handler to use\n+     * @return previous handler\n+     */\n+    @SuppressWarnings(\"PMD.CompareObjectsWithEquals\") // intentional reference equals\n+    /*PackagePrivate*/ static TestFeatureParameterInterface internalEnableTestingFeatureParameters(\n+            TestFeatureParameterInterface newHandler) {\n+        if (newHandler == DEFAULT_HANDLER) {\n+            LOGGER.atInfo(\"Testing Feature Parameters has been disabled.\");\n+        } else {\n+            LOGGER.atWarn(\"Testing Feature Parameters has been enabled. This operation is not supported in \"\n+                    + \"a production environment.\");", "originalCommit": "b054c7132687a376896d495c124c68a52d71081c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgxNzgxMQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/552#discussion_r509817811", "bodyText": "Change atwarn to warn. It won't be logged that way.", "author": "MikeDombo", "createdAt": "2020-10-22T00:55:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgxNzI0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgxODIyNg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/552#discussion_r509818226", "bodyText": "You either need to use info or atinfo with log", "author": "MikeDombo", "createdAt": "2020-10-22T00:56:50Z", "path": "src/main/java/com/aws/greengrass/testing/TestFeatureParameters.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/* Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0 */\n+\n+package com.aws.greengrass.testing;\n+\n+import com.aws.greengrass.logging.api.Logger;\n+import com.aws.greengrass.logging.impl.LogManager;\n+\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+/**\n+ * Some functionality is enabled only for integration testing. Such functionality is subject to change between\n+ * releases of the Greengrass Nucleus and/or may result in unstable behavior in production and should be avoided.\n+ */\n+public final class TestFeatureParameters {\n+    private static final Logger LOGGER = LogManager.getLogger(TestFeatureParameters.class);\n+\n+    /**\n+     * Default implementation when not overridden.\n+     */\n+    /*PackagePrivate*/ static TestFeatureParameterInterface DEFAULT_HANDLER = new TestFeatureParameterInterface() {\n+        /**\n+         * {@inheritDoc}\n+         */\n+        @Override\n+        public <T> T get(String featureParameterName, T productionValue) {\n+            return productionValue;\n+        }\n+    };\n+\n+    private static final AtomicReference<TestFeatureParameterInterface> handler =\n+                                                                            new AtomicReference<>(DEFAULT_HANDLER);\n+\n+    private TestFeatureParameters() {\n+        // No instance methods\n+    }\n+\n+    /**\n+     * Retrieve either the provided production value of a parameter, or, under test conditions, an alternative value\n+     * specific for the test being undertaken.\n+     *\n+     * @param featureParameterName Name of parameter to query.\n+     * @param productionValue Value to use when not overridden under test conditions.\n+     * @param <T> Simple parameter type (String, Integer, etc).\n+     * @return Production value, or override value.\n+     */\n+    public static <T> T get(String featureParameterName, T productionValue) {\n+        return handler.get().get(featureParameterName, productionValue);\n+    }\n+\n+    /**\n+     * Called under test conditions to provide a feature parameter handler. Note that this method is subject to change\n+     * under future releases of Nucleus.\n+     *\n+     * @param newHandler New handler to use\n+     * @return previous handler\n+     */\n+    @SuppressWarnings(\"PMD.CompareObjectsWithEquals\") // intentional reference equals\n+    /*PackagePrivate*/ static TestFeatureParameterInterface internalEnableTestingFeatureParameters(\n+            TestFeatureParameterInterface newHandler) {\n+        if (newHandler == DEFAULT_HANDLER) {\n+            LOGGER.atInfo(\"Testing Feature Parameters has been disabled.\");", "originalCommit": "b054c7132687a376896d495c124c68a52d71081c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "64ec9130b883a1c3bb6bd03b07fa71aa749eed0f", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/64ec9130b883a1c3bb6bd03b07fa71aa749eed0f", "message": "Add hook to allow test feature parameters to be overridden by a plugin", "committedDate": "2020-10-26T17:01:01Z", "type": "forcePushed"}, {"oid": "7cc88fd8a81c44e66d54a77823e89553697572f7", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/7cc88fd8a81c44e66d54a77823e89553697572f7", "message": "Add hook to allow test feature parameters to be overridden by a plugin", "committedDate": "2020-10-26T22:25:11Z", "type": "commit"}, {"oid": "7cc88fd8a81c44e66d54a77823e89553697572f7", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/7cc88fd8a81c44e66d54a77823e89553697572f7", "message": "Add hook to allow test feature parameters to be overridden by a plugin", "committedDate": "2020-10-26T22:25:11Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjMwNzU4OQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/552#discussion_r512307589", "bodyText": "you don't need to check for debug enabled unless you're doing something computationally expensive. The logger itself will skip the logging if debug isn't enabled.", "author": "MikeDombo", "createdAt": "2020-10-26T22:29:44Z", "path": "src/main/java/com/aws/greengrass/testing/TestFeatureParameters.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/* Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0 */\n+\n+package com.aws.greengrass.testing;\n+\n+import com.aws.greengrass.logging.api.Logger;\n+import com.aws.greengrass.logging.impl.LogManager;\n+\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+/**\n+ * Some functionality is enabled only for integration testing. Such functionality is subject to change between\n+ * releases of the Greengrass Nucleus and/or may result in unstable behavior in production and should be avoided.\n+ */\n+public final class TestFeatureParameters {\n+    private static final Logger LOGGER = LogManager.getLogger(TestFeatureParameters.class);\n+\n+    /**\n+     * Default implementation when not overridden.\n+     */\n+    /*PackagePrivate*/ static TestFeatureParameterInterface DEFAULT_HANDLER = new TestFeatureParameterInterface() {\n+        /**\n+         * {@inheritDoc}\n+         */\n+        @Override\n+        public <T> T get(String featureParameterName, T productionValue) {\n+            return productionValue;\n+        }\n+    };\n+\n+    private static final AtomicReference<TestFeatureParameterInterface> handler =\n+                                                                            new AtomicReference<>(DEFAULT_HANDLER);\n+\n+    private TestFeatureParameters() {\n+        // No instance methods\n+    }\n+\n+    /**\n+     * Retrieve either the provided production value of a parameter, or, under test conditions, an alternative value\n+     * specific for the test being undertaken.\n+     *\n+     * @param featureParameterName Name of parameter to query.\n+     * @param productionValue Value to use when not overridden under test conditions.\n+     * @param <T> Simple parameter type (String, Integer, etc).\n+     * @return Production value, or override value.\n+     */\n+    @SuppressWarnings(\"PMD.CompareObjectsWithEquals\") // intentional reference equals\n+    public static <T> T get(String featureParameterName, T productionValue) {\n+        T value = handler.get().get(featureParameterName, productionValue);\n+        if (productionValue == value && LOGGER.isDebugEnabled()) {", "originalCommit": "7cc88fd8a81c44e66d54a77823e89553697572f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjMxMjUwMQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/552#discussion_r512312501", "bodyText": "There is a trade-off, this get code-path shouldn't go through a lot of gets and processing getting ready to write to log if the log path is rarely taken. Generally I agree on sentiment of letting the logger take care of it, but this is one place I think it's worth the extra check.", "author": "JamieHunter", "createdAt": "2020-10-26T22:42:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjMwNzU4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjMxMzY4OQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/552#discussion_r512313689", "bodyText": "It looks like the only thing you're doing which is a little expensive is to get the class name, is that your worry? Because when debug is disabled the logger won't do any string processing or anything, so it should be very cheap", "author": "MikeDombo", "createdAt": "2020-10-26T22:46:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjMwNzU4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjMxNDQ4OQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/552#discussion_r512314489", "bodyText": "Retrospectively I'm going to change this back and let atDebug do the work.", "author": "JamieHunter", "createdAt": "2020-10-26T22:47:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjMwNzU4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjMwNzg2Mg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/552#discussion_r512307862", "bodyText": "this is logging at warn but is only when trace is enabled?", "author": "MikeDombo", "createdAt": "2020-10-26T22:30:19Z", "path": "src/main/java/com/aws/greengrass/testing/TestFeatureParameters.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/* Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0 */\n+\n+package com.aws.greengrass.testing;\n+\n+import com.aws.greengrass.logging.api.Logger;\n+import com.aws.greengrass.logging.impl.LogManager;\n+\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+/**\n+ * Some functionality is enabled only for integration testing. Such functionality is subject to change between\n+ * releases of the Greengrass Nucleus and/or may result in unstable behavior in production and should be avoided.\n+ */\n+public final class TestFeatureParameters {\n+    private static final Logger LOGGER = LogManager.getLogger(TestFeatureParameters.class);\n+\n+    /**\n+     * Default implementation when not overridden.\n+     */\n+    /*PackagePrivate*/ static TestFeatureParameterInterface DEFAULT_HANDLER = new TestFeatureParameterInterface() {\n+        /**\n+         * {@inheritDoc}\n+         */\n+        @Override\n+        public <T> T get(String featureParameterName, T productionValue) {\n+            return productionValue;\n+        }\n+    };\n+\n+    private static final AtomicReference<TestFeatureParameterInterface> handler =\n+                                                                            new AtomicReference<>(DEFAULT_HANDLER);\n+\n+    private TestFeatureParameters() {\n+        // No instance methods\n+    }\n+\n+    /**\n+     * Retrieve either the provided production value of a parameter, or, under test conditions, an alternative value\n+     * specific for the test being undertaken.\n+     *\n+     * @param featureParameterName Name of parameter to query.\n+     * @param productionValue Value to use when not overridden under test conditions.\n+     * @param <T> Simple parameter type (String, Integer, etc).\n+     * @return Production value, or override value.\n+     */\n+    @SuppressWarnings(\"PMD.CompareObjectsWithEquals\") // intentional reference equals\n+    public static <T> T get(String featureParameterName, T productionValue) {\n+        T value = handler.get().get(featureParameterName, productionValue);\n+        if (productionValue == value && LOGGER.isDebugEnabled()) {\n+            // Pass through production value logged at debug level\n+            LOGGER.atDebug().addKeyValue(\"FeatureParameterName\", featureParameterName)\n+                    .addKeyValue(\"ProductionValue\", productionValue)\n+                    .log(\"Production Feature Parameter \\\"{}\\\"=\\\"{}\\\" via {}\", featureParameterName, value,\n+                            handler.get().getClass().getSimpleName());\n+        } else if (productionValue != value && LOGGER.isTraceEnabled()) {", "originalCommit": "7cc88fd8a81c44e66d54a77823e89553697572f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjMxMzE5Mw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/552#discussion_r512313193", "bodyText": "That's a bug, will fix.", "author": "JamieHunter", "createdAt": "2020-10-26T22:44:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjMwNzg2Mg=="}], "type": "inlineReview"}, {"oid": "41fabd9614bb448b55c16dbde6939730417c49ea", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/41fabd9614bb448b55c16dbde6939730417c49ea", "message": "Simplify logging. Fix non-atomic use of atomic get.", "committedDate": "2020-10-26T22:55:23Z", "type": "commit"}, {"oid": "70e9d08f0b3fe20c07ea1fc9bbde2b79ab4760f1", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/70e9d08f0b3fe20c07ea1fc9bbde2b79ab4760f1", "message": "Merge branch 'master' into test-feature-parameters", "committedDate": "2020-10-26T23:28:25Z", "type": "commit"}, {"oid": "15519931adb39a4c1ac932fb71e8f8fee7219ff8", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/15519931adb39a4c1ac932fb71e8f8fee7219ff8", "message": "Merge branch 'master' into test-feature-parameters", "committedDate": "2020-10-27T16:22:32Z", "type": "commit"}, {"oid": "6d2b4de035fa1394e735a37e0063685750ef009f", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/6d2b4de035fa1394e735a37e0063685750ef009f", "message": "Address feedback", "committedDate": "2020-10-27T17:53:16Z", "type": "commit"}, {"oid": "d7b8cdab298e1af2320d3eecd1ad6095f98bf8fc", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d7b8cdab298e1af2320d3eecd1ad6095f98bf8fc", "message": "Merge branch 'master' into test-feature-parameters", "committedDate": "2020-10-27T21:19:45Z", "type": "commit"}, {"oid": "7072609fd82a0ba69e6379a8a4a54dccccf0c453", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/7072609fd82a0ba69e6379a8a4a54dccccf0c453", "message": "Merge branch 'master' into test-feature-parameters", "committedDate": "2020-10-28T14:18:11Z", "type": "commit"}]}