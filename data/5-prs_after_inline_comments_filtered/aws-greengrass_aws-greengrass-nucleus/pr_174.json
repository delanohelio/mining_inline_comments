{"pr_number": 174, "pr_title": "Fixed race condition during service close", "pr_createdAt": "2020-04-10T21:24:32Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/174", "timeline": [{"oid": "19b3c477f0fafe87b6cd82a980e1b6ff33d339a8", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/19b3c477f0fafe87b6cd82a980e1b6ff33d339a8", "message": "ficed race condition during service close", "committedDate": "2020-04-10T21:01:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk1MTkyNQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/174#discussion_r406951925", "bodyText": "Fantastic! Can we decrease the timeouts on the other e2e tests as well?", "author": "MikeDombo", "createdAt": "2020-04-10T21:29:50Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentE2ETest.java", "diffHunk": "@@ -143,7 +143,7 @@ void GIVEN_kernel_running_with_deployed_services_WHEN_deployment_removes_package\n                         Arrays.asList(new DeploymentPackageConfiguration(\"CustomerApp\", \"1.0.0\", null, null, null),\n                                 new DeploymentPackageConfiguration(\"SomeService\", \"1.0.0\", null, null, null))).build());\n         String jobId1 = Utils.createJob(document1, targets);\n-        Utils.waitForJobToComplete(jobId1, Duration.ofMinutes(5));\n+        Utils.waitForJobToComplete(jobId1, Duration.ofMinutes(2));", "originalCommit": "19b3c477f0fafe87b6cd82a980e1b6ff33d339a8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk2NTI3OQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/174#discussion_r406965279", "bodyText": "The timeout for other end-end test are already 2.", "author": "fahadmohammed01", "createdAt": "2020-04-10T22:14:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk1MTkyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk1MjMyMg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/174#discussion_r406952322", "bodyText": "Simple fix, looks great.\nJust 1 question though, does this actually work if the service is currently RUNNING? Because it needs to go through STOPPING, then FINISHED, which means that it needs to go through the loop multiple times, but since you have set it to closed, won't it stop the loop, thus preventing it from properly stopping?", "author": "MikeDombo", "createdAt": "2020-04-10T21:31:02Z", "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -256,8 +256,8 @@ protected void shutdown() throws InterruptedException {\n                 } catch (InterruptedException e) {\n                     logger.error(\"Interrupted waiting for dependers to exit\");\n                 }\n-                requestStop();\n                 lifecycle.setClosed(true);\n+                requestStop();", "originalCommit": "19b3c477f0fafe87b6cd82a980e1b6ff33d339a8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk1NTA0MA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/174#discussion_r406955040", "bodyText": "I still think we should use interrupt instead of a boolean flag to shutdown the service, but that can be done in a separate PR.", "author": "fengwang666", "createdAt": "2020-04-10T21:39:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk1MjMyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk2MzM5NA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/174#discussion_r406963394", "bodyText": "isClosed only one of the 2 conditions guarding the loop, the thread can't exit the loop until\nservice moves to a closable state event though the isClosed is marked as true\nExit Condition:\nwhile (!(isClosed.get() && evergreenService.getState().isClosable()))", "author": "fahadmohammed01", "createdAt": "2020-04-10T22:07:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk1MjMyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk2Mzk3NA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/174#discussion_r406963974", "bodyText": "closable states are FINISHED, ERRORED, BROKEN", "author": "fahadmohammed01", "createdAt": "2020-04-10T22:09:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk1MjMyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk2OTIxMw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/174#discussion_r406969213", "bodyText": "Even if we use an interrupt, we will end up using a flag because the service cannot shutdown as soon a interrupt is received. It need to transition to a final state before exiting.", "author": "fahadmohammed01", "createdAt": "2020-04-10T22:30:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk1MjMyMg=="}], "type": "inlineReview"}]}