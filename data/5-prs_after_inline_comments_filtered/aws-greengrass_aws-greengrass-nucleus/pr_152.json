{"pr_number": 152, "pr_title": "Add deployment dependency conflict e2e test", "pr_createdAt": "2020-04-02T17:02:25Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/152", "timeline": [{"oid": "802821983b014d7481c67cdb634d7312e6ea2709", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/802821983b014d7481c67cdb634d7312e6ea2709", "message": "Add deployment dependency conflict e2e test\n\n* Also fix a bug where deployment service does not report the error", "committedDate": "2020-04-02T16:52:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ3NjQwNQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/152#discussion_r402476405", "bodyText": "These shouldn't really be needed for your test since your test is supposed to fail, so nothing will be merged anyway.", "author": "MikeDombo", "createdAt": "2020-04-02T17:14:38Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentE2ETest.java", "diffHunk": "@@ -155,6 +156,53 @@ void GIVEN_kernel_running_with_deployed_services_WHEN_deployment_removes_package\n                 Utils.iotClient.describeJob(DescribeJobRequest.builder().jobId(jobId2).build()).job().status());\n     }\n \n+    @Timeout(value = 10, unit = TimeUnit.MINUTES)\n+    @Test\n+    void GIVEN_kernel_running_with_deployed_services_WHEN_deployment_has_conflicts_THEN_job_should_fail_and_return_error()\n+            throws Exception {\n+        // Target our DUT for deployments\n+        // TODO: Eventually switch this to target using Thing Group instead of individual Thing\n+        String[] targets = {thing.thingArn};\n+\n+        // First deployment to have some services running in Kernel\n+        String document1 = new ObjectMapper().writeValueAsString(\n+                DeploymentDocument.builder()\n+                        .timestamp(System.currentTimeMillis())\n+                        .deploymentId(UUID.randomUUID().toString())\n+                        .rootPackages(Arrays.asList(\"SomeService\"))\n+                        .deploymentPackageConfigurationList(Arrays.asList(\n+                                new DeploymentPackageConfiguration(\"SomeService\", \"1.0.0\", null, null, null)))\n+                        .build());\n+        String jobId1 = Utils.createJob(document1, targets);\n+        Utils.waitForJobToComplete(jobId1, Duration.ofMinutes(5));\n+\n+        // Second deployment contains dependency conflicts\n+        String document2 = new ObjectMapper().writeValueAsString(\n+                DeploymentDocument.builder()\n+                        .timestamp(System.currentTimeMillis())\n+                        .deploymentId(UUID.randomUUID().toString())\n+                        .rootPackages(Arrays.asList(\"SomeService\", \"SomeOldService\"))\n+                        .deploymentPackageConfigurationList(Arrays.asList(\n+                                new DeploymentPackageConfiguration(\"SomeService\", \"1.0.0\", null, null, null),\n+                                new DeploymentPackageConfiguration(\"SomeOldService\", \"0.9.0\", null, null, null)))\n+                        .build());\n+        String jobId2 = Utils.createJob(document2, targets);\n+        Utils.waitForJobToComplete(jobId2, Duration.ofMinutes(5));\n+\n+        // Ensure that main is finished, which is its terminal state, so this means that all updates ought to be done\n+        assertEquals(State.FINISHED, kernel.getMain().getState());\n+        assertEquals(State.FINISHED, EvergreenService.locate(kernel.context, \"SomeService\").getState());", "originalCommit": "802821983b014d7481c67cdb634d7312e6ea2709", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ5NzA3Nw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/152#discussion_r402497077", "bodyText": "Thanks! I wasn't sure what these are for. But I think I understand now. It was copied from GIVEN_kernel_running_with_deployed_services_WHEN_deployment_removes_packages_THEN_services_should_be_stopped_and_job_is_successful. But in that test, SomeService would have started and finished after the 2nd deployment.", "author": "fufranci", "createdAt": "2020-04-02T17:41:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ3NjQwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ3NzcwMA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/152#discussion_r402477700", "bodyText": "To limit flakiness, I don't think our initial provisioning should be through IoT jobs. I'd suggest instead that you setup the kernel's initial state through a config.yaml file that contains the SomeService.", "author": "MikeDombo", "createdAt": "2020-04-02T17:16:47Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentE2ETest.java", "diffHunk": "@@ -155,6 +156,53 @@ void GIVEN_kernel_running_with_deployed_services_WHEN_deployment_removes_package\n                 Utils.iotClient.describeJob(DescribeJobRequest.builder().jobId(jobId2).build()).job().status());\n     }\n \n+    @Timeout(value = 10, unit = TimeUnit.MINUTES)\n+    @Test\n+    void GIVEN_kernel_running_with_deployed_services_WHEN_deployment_has_conflicts_THEN_job_should_fail_and_return_error()\n+            throws Exception {\n+        // Target our DUT for deployments\n+        // TODO: Eventually switch this to target using Thing Group instead of individual Thing\n+        String[] targets = {thing.thingArn};\n+\n+        // First deployment to have some services running in Kernel\n+        String document1 = new ObjectMapper().writeValueAsString(\n+                DeploymentDocument.builder()\n+                        .timestamp(System.currentTimeMillis())\n+                        .deploymentId(UUID.randomUUID().toString())\n+                        .rootPackages(Arrays.asList(\"SomeService\"))\n+                        .deploymentPackageConfigurationList(Arrays.asList(\n+                                new DeploymentPackageConfiguration(\"SomeService\", \"1.0.0\", null, null, null)))\n+                        .build());\n+        String jobId1 = Utils.createJob(document1, targets);\n+        Utils.waitForJobToComplete(jobId1, Duration.ofMinutes(5));", "originalCommit": "802821983b014d7481c67cdb634d7312e6ea2709", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "64245a2babe930084825e02a4744090bda77bf38", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/64245a2babe930084825e02a4744090bda77bf38", "message": "* Remove unnecessary asserts\n* Test should not shutdown kernel. It is done in `afterAll`", "committedDate": "2020-04-03T06:26:47Z", "type": "commit"}, {"oid": "6f92ac8c15e36d7a4286305c8a8c4beabaac1970", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/6f92ac8c15e36d7a4286305c8a8c4beabaac1970", "message": "Merge branch 'master' into deployment_conflict_e2e", "committedDate": "2020-04-03T07:00:02Z", "type": "commit"}, {"oid": "00061903876a7aa61baabdccb7808451c2e4e224", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/00061903876a7aa61baabdccb7808451c2e4e224", "message": "Use a config file that already contains SomeService", "committedDate": "2020-04-03T22:15:10Z", "type": "commit"}, {"oid": "60246f3744aed9a89dd565d5b952a6f6a6a96162", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/60246f3744aed9a89dd565d5b952a6f6a6a96162", "message": "Merge remote-tracking branch 'origin/master' into deployment_conflict_e2e", "committedDate": "2020-04-03T22:18:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM2OTU5MA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/152#discussion_r403369590", "bodyText": "No shutdown? We need to stop the kernel after all tests.", "author": "MikeDombo", "createdAt": "2020-04-03T22:39:49Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentE2ETest.java", "diffHunk": "@@ -100,7 +105,6 @@ void GIVEN_blank_kernel_WHEN_deploy_new_services_e2e_THEN_new_services_deployed_\n         // Ensure that main is finished, which is its terminal state, so this means that all updates ought to be done\n         assertEquals(State.FINISHED, kernel.getMain().getState());\n         assertEquals(State.FINISHED, EvergreenService.locate(kernel.context, \"CustomerApp\").getState());\n-        kernel.shutdown();", "originalCommit": "60246f3744aed9a89dd565d5b952a6f6a6a96162", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM3MDEwOQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/152#discussion_r403370109", "bodyText": "shutdown is done in afterAll.", "author": "fufranci", "createdAt": "2020-04-03T22:41:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM2OTU5MA=="}], "type": "inlineReview"}, {"oid": "5ceb924fd5e2b90cc299179e5214c05d62abb61c", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/5ceb924fd5e2b90cc299179e5214c05d62abb61c", "message": "Merge branch 'master' into deployment_conflict_e2e", "committedDate": "2020-04-04T01:15:46Z", "type": "commit"}, {"oid": "d1a3eae57fcae5de6517ad8b893e210af9295ea7", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d1a3eae57fcae5de6517ad8b893e210af9295ea7", "message": "Add back `injectKernelPackageManagementDependencies`", "committedDate": "2020-04-06T05:45:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM5NzI3Ng==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/152#discussion_r404397276", "bodyText": "Let's cut down all these timeouts. In practice, when they pass, they don't take more than 2-3 minutes. Have a look at a successful test in GitHub actions and then set the timeout based on that.\nProbably should update the Utils.waitForJobToComplete timeout to be the 2-3 minutes. Then remove this @Timeout. The default timeout is 5 minutes per test, so let's stick with that by removing this annotation and then decreasing how long the test itself waits.\nApply the change to all the tests in this class.", "author": "MikeDombo", "createdAt": "2020-04-06T21:23:56Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentE2ETest.java", "diffHunk": "@@ -152,6 +161,39 @@ void GIVEN_kernel_running_with_deployed_services_WHEN_deployment_removes_package\n                 Utils.iotClient.describeJob(DescribeJobRequest.builder().jobId(jobId2).build()).job().status());\n     }\n \n+    @Timeout(value = 10, unit = TimeUnit.MINUTES)", "originalCommit": "d1a3eae57fcae5de6517ad8b893e210af9295ea7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ2ODYwOA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/152#discussion_r404468608", "bodyText": "\ud83d\udc4d", "author": "fufranci", "createdAt": "2020-04-07T00:33:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM5NzI3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ2ODY2Mw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/152#discussion_r404468663", "bodyText": "Done", "author": "fufranci", "createdAt": "2020-04-07T00:33:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM5NzI3Ng=="}], "type": "inlineReview"}, {"oid": "085aeadc8948a903e16018bbf361a49cf0a121f7", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/085aeadc8948a903e16018bbf361a49cf0a121f7", "message": "Move kernel.shutdown() to afterEach.", "committedDate": "2020-04-06T23:32:30Z", "type": "commit"}, {"oid": "8694a99006667c5c330b7299b7005e0bdcdf043e", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/8694a99006667c5c330b7299b7005e0bdcdf043e", "message": "Merge remote-tracking branch 'origin/master' into deployment_conflict_e2e", "committedDate": "2020-04-06T23:34:11Z", "type": "commit"}, {"oid": "e3beb05fd3ca21001fabdab4cd3292dea200c000", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e3beb05fd3ca21001fabdab4cd3292dea200c000", "message": "Remove timeout per test", "committedDate": "2020-04-07T00:25:17Z", "type": "commit"}, {"oid": "61797eea17c27c7fd7ad0526cd7c7eb6932871f7", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/61797eea17c27c7fd7ad0526cd7c7eb6932871f7", "message": "Add sleep after kernel.launch()", "committedDate": "2020-04-07T05:12:25Z", "type": "commit"}, {"oid": "63cc7adc81643de8fa150269b59326f2f0ae14b6", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/63cc7adc81643de8fa150269b59326f2f0ae14b6", "message": "Merge remote-tracking branch 'origin/master' into deployment_conflict_e2e", "committedDate": "2020-04-07T05:13:13Z", "type": "commit"}]}