{"pr_number": 295, "pr_title": "[WIP] Fix flaky tests", "pr_createdAt": "2020-07-02T20:12:46Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/295", "timeline": [{"oid": "890dbaf1b6a52c99aeade66a615e08de2ffb26eb", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/890dbaf1b6a52c99aeade66a615e08de2ffb26eb", "message": "fix flaky tests", "committedDate": "2020-07-02T19:41:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI3NDg4Mg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/295#discussion_r449274882", "bodyText": "This doesn't need to be a CountDownLatch now since no one is waiting on it.", "author": "fufranci", "createdAt": "2020-07-02T21:30:33Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/deployment/DeploymentConfigMergingTest.java", "diffHunk": "@@ -513,21 +510,24 @@ void GIVEN_service_running_with_rollback_safe_param_WHEN_rollback_THEN_rollback_\n             put(SERVICES_NAMESPACE_TOPIC, new HashMap<Object, Object>() {{\n                 put(\"sleeperB\", new HashMap<Object, Object>() {{\n                     put(SERVICE_LIFECYCLE_NAMESPACE_TOPIC, new HashMap<Object, Object>() {{\n-                        put(LIFECYCLE_RUN_NAMESPACE_TOPIC, \"exit -1\");\n+                        put(LIFECYCLE_STARTUP_NAMESPACE_TOPIC, \"exit -1\");\n                     }});\n                 }});\n             }});\n         }};\n \n-        CountDownLatch sleeperBErrored = new CountDownLatch(1);\n+        CountDownLatch sleeperBBroken = new CountDownLatch(1);", "originalCommit": "890dbaf1b6a52c99aeade66a615e08de2ffb26eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMzMDcxMQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/295#discussion_r451330711", "bodyText": "Updated to use atomicboolean", "author": "fahadmohammed01", "createdAt": "2020-07-08T07:14:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI3NDg4Mg=="}], "type": "inlineReview"}, {"oid": "579e403dd0daee5671813e1a7bdd7a8b79b15488", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/579e403dd0daee5671813e1a7bdd7a8b79b15488", "message": "add windows support", "committedDate": "2020-07-02T22:49:23Z", "type": "commit"}, {"oid": "e27b32f6cb920ab3e39e0ad4283687669a628a6d", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e27b32f6cb920ab3e39e0ad4283687669a628a6d", "message": "Wait for SoftDependency to be RUNNING first", "committedDate": "2020-07-03T05:08:57Z", "type": "commit"}, {"oid": "72e66470dc6d0cbec46376a552602d6001cd611a", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/72e66470dc6d0cbec46376a552602d6001cd611a", "message": "Merge branch 'master' into deflake_tests", "committedDate": "2020-07-06T21:27:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA1MzUzMw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/295#discussion_r451053533", "bodyText": "Is it ok to remove these? Can we use eventuallyEval to make it pass?", "author": "hui-yang", "createdAt": "2020-07-07T18:12:49Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/deployment/DeploymentConfigMergingTest.java", "diffHunk": "@@ -418,15 +419,10 @@ void GIVEN_kernel_running_services_WHEN_merge_removes_service_THEN_removed_servi\n             }\n         });\n \n-        EvergreenService main = kernel.locate(\"main\");\n-        EvergreenService sleeperB = kernel.locate(\"sleeperB\");\n         // wait for merge to complete\n         future.get(60, TimeUnit.SECONDS);\n         //sleeperA should be closed\n         assertTrue(isSleeperAClosed.get());\n-        // main and sleeperB should be running\n-        assertEquals(State.RUNNING, main.getState());\n-        assertEquals(State.RUNNING, sleeperB.getState());", "originalCommit": "72e66470dc6d0cbec46376a552602d6001cd611a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMzNjcyNA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/295#discussion_r451336724", "bodyText": "I digged a bit deeper and found a race condition, the functionality tested here is also verified in other tests. But since it triggered the race condition, I adding these checks back.", "author": "fahadmohammed01", "createdAt": "2020-07-08T07:26:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA1MzUzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA1NDIzNA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/295#discussion_r451054234", "bodyText": "\ud83d\udc4d", "author": "hui-yang", "createdAt": "2020-07-07T18:14:08Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/ServiceDependencyLifecycleTest.java", "diffHunk": "@@ -380,6 +380,11 @@ void WHEN_dependency_type_changes_with_no_other_updates_THEN_customer_app_should\n                         .toString()).launch();\n         assertThat(kernel.locate(\"main\")::getState, eventuallyEval(is(State.FINISHED)));\n \n+        // The test below assumes SoftDependency is already running and checks against RUNNING->STOPPING and\n+        // STARTING->RUNNING. But I have seen cases where it hasn't get to the initial RUNNING state yet. So we need to\n+        // wait for SoftDependency to be RUNNING first.\n+        assertThat(kernel.locate(\"SoftDependency\")::getState, eventuallyEval(is(State.RUNNING)));", "originalCommit": "72e66470dc6d0cbec46376a552602d6001cd611a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA2NTkzNA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/295#discussion_r451065934", "bodyText": "Do we need this long sleep time?", "author": "ShirleyZheng92", "createdAt": "2020-07-07T18:36:02Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/deployment/DeploymentConfigMergingTest.java", "diffHunk": "@@ -541,8 +541,7 @@ void GIVEN_service_running_with_rollback_safe_param_WHEN_rollback_THEN_rollback_\n \n         // THEN\n         // deployment should have errored and rolled back\n-        assertTrue(sleeperBErrored.await(1, TimeUnit.SECONDS));\n-        assertTrue(sleeperBRolledBack.await(1, TimeUnit.SECONDS));\n+        assertTrue(sleeperBRolledBack.await(30, TimeUnit.SECONDS));", "originalCommit": "72e66470dc6d0cbec46376a552602d6001cd611a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMzMDc2MQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/295#discussion_r451330761", "bodyText": "we are waiting 30 seconds for the deployment to finish. reverted to 1 seconds", "author": "fahadmohammed01", "createdAt": "2020-07-08T07:14:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA2NTkzNA=="}], "type": "inlineReview"}, {"oid": "38e5e6a74052bdd0b6751d5a0cc8e97dd756f0b4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/38e5e6a74052bdd0b6751d5a0cc8e97dd756f0b4", "message": "updated tests based on feedback", "committedDate": "2020-07-08T07:13:48Z", "type": "commit"}, {"oid": "a4e7764022b3d42887e519aaa498329b634e2666", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/a4e7764022b3d42887e519aaa498329b634e2666", "message": "added TODO's to fix an existing race condition", "committedDate": "2020-07-08T07:25:57Z", "type": "commit"}]}