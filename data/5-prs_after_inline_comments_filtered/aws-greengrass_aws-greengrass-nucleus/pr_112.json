{"pr_number": 112, "pr_title": "updated kernel shutdown integration test", "pr_createdAt": "2020-03-12T19:16:11Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/112", "timeline": [{"oid": "f95ea24dc512ddb7913d4d088a881de35e2dbd29", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f95ea24dc512ddb7913d4d088a881de35e2dbd29", "message": "updated kernel shutdown integration test", "committedDate": "2020-03-12T19:09:11Z", "type": "commit"}, {"oid": "7fd472ca976121712bea063f672b76cf99fdeead", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/7fd472ca976121712bea063f672b76cf99fdeead", "message": "updated test to use GlobalStateChangeListener", "committedDate": "2020-03-12T19:39:13Z", "type": "commit"}, {"oid": "ee10afe037278bfb77c3b1e6ef0d3597dc59fe9c", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/ee10afe037278bfb77c3b1e6ef0d3597dc59fe9c", "message": "fixed bug in finding dependers", "committedDate": "2020-03-12T20:55:50Z", "type": "commit"}, {"oid": "076fabe8c4d3993b6c134ea722042535ba84ed0b", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/076fabe8c4d3993b6c134ea722042535ba84ed0b", "message": "Merge branch 'master' into update-kernel-shutdown-integ-test", "committedDate": "2020-03-12T21:17:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg5ODQ2Mg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/112#discussion_r391898462", "bodyText": "Since we're not awaiting these, they can just be atomic integers.", "author": "MikeDombo", "createdAt": "2020-03-12T21:17:15Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/KernelShutdownTest.java", "diffHunk": "@@ -40,29 +40,37 @@ void setup() {\n \n     @Test\n     void WHEN_kernel_shutdown_THEN_services_are_shutdown_in_reverse_dependecy_order() throws InterruptedException {\n+        CountDownLatch mainClosed = new CountDownLatch(1);", "originalCommit": "ee10afe037278bfb77c3b1e6ef0d3597dc59fe9c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "35214d25b87426a002637923c63a795faec19cb0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/35214d25b87426a002637923c63a795faec19cb0", "message": "Merge branch 'master' into update-kernel-shutdown-integ-test", "committedDate": "2020-03-12T21:45:23Z", "type": "commit"}, {"oid": "21ad6ede73cd1d5ca3f28ffb7bc8537772ea55b0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/21ad6ede73cd1d5ca3f28ffb7bc8537772ea55b0", "message": "using atomic boolean instead of countdown latch", "committedDate": "2020-03-12T21:58:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk2OTkwOA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/112#discussion_r391969908", "bodyText": "Maybe change the isCloseable to FINISHED because it should be FINISHED right? Also below occurrences!", "author": "leaf94", "createdAt": "2020-03-13T00:18:42Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/KernelShutdownTest.java", "diffHunk": "@@ -40,30 +35,37 @@ void setup() {\n \n     @Test\n     void WHEN_kernel_shutdown_THEN_services_are_shutdown_in_reverse_dependecy_order() throws InterruptedException {\n+        AtomicBoolean mainClosed = new AtomicBoolean(false);\n+        AtomicBoolean sleeperAClosed = new AtomicBoolean(false);\n+        AtomicBoolean sleeperBClosed = new AtomicBoolean(false);\n+\n+        kernel.context.addGlobalStateChangeListener((service, oldState, newState) -> {\n+            if (service.getName().equals(\"main\") && newState.isClosable()) {", "originalCommit": "21ad6ede73cd1d5ca3f28ffb7bc8537772ea55b0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk3MDkwNA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/112#discussion_r391970904", "bodyText": "Update this :)", "author": "leaf94", "createdAt": "2020-03-13T00:23:03Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/KernelShutdownTest.java", "diffHunk": "@@ -40,30 +35,37 @@ void setup() {\n \n     @Test\n     void WHEN_kernel_shutdown_THEN_services_are_shutdown_in_reverse_dependecy_order() throws InterruptedException {\n+        AtomicBoolean mainClosed = new AtomicBoolean(false);\n+        AtomicBoolean sleeperAClosed = new AtomicBoolean(false);\n+        AtomicBoolean sleeperBClosed = new AtomicBoolean(false);\n+\n+        kernel.context.addGlobalStateChangeListener((service, oldState, newState) -> {\n+            if (service.getName().equals(\"main\") && newState.isClosable()) {\n+                mainClosed.set(true);\n+            }\n+            // Only count main as started if its dependency (new_service) has already been started", "originalCommit": "21ad6ede73cd1d5ca3f28ffb7bc8537772ea55b0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk3NjEwOA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/112#discussion_r391976108", "bodyText": "As discussed offline, I think Boolean will work the same way... Since the global state listener logic will be executed one at a time...", "author": "leaf94", "createdAt": "2020-03-13T00:46:06Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/KernelShutdownTest.java", "diffHunk": "@@ -40,30 +35,37 @@ void setup() {\n \n     @Test\n     void WHEN_kernel_shutdown_THEN_services_are_shutdown_in_reverse_dependecy_order() throws InterruptedException {\n+        AtomicBoolean mainClosed = new AtomicBoolean(false);\n+        AtomicBoolean sleeperAClosed = new AtomicBoolean(false);", "originalCommit": "21ad6ede73cd1d5ca3f28ffb7bc8537772ea55b0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}