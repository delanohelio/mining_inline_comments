{"pr_number": 247, "pr_title": "Add role alias parameter for TES", "pr_createdAt": "2020-05-19T17:16:39Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/247", "timeline": [{"oid": "43ec352d18480a23fe2b47e11b2c5517df438e17", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/43ec352d18480a23fe2b47e11b2c5517df438e17", "message": "Add role alias parameter for TES", "committedDate": "2020-05-19T08:16:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ3MDM5NQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/247#discussion_r427470395", "bodyText": "read tree as case insensitive maybe? Should make it a bit easier.", "author": "MikeDombo", "createdAt": "2020-05-19T17:21:35Z", "path": "src/main/java/com/aws/iot/evergreen/tes/CredentialRequestHandler.java", "diffHunk": "@@ -43,15 +65,33 @@ public void handle(final HttpExchange exchange) throws IOException {\n      * @return AWS credentials from cloud.\n      */\n     public byte[] getCredentials() {\n-        String credentials = \"--alive--\";\n+        byte[] response = {};\n+        LOGGER.debug(\"Got request for credentials\");\n         // TODO: Add cache\n         try {\n-            credentials = iotCloudHelper.sendHttpRequest(iotConnectionManager,\n-                    IOT_CREDENTIALS_PATH,\n+            final String credentials = iotCloudHelper.sendHttpRequest(iotConnectionManager,\n+                    iotCredentialsPath,\n                     IOT_CREDENTIALS_HTTP_VERB);\n+            response = translateToAwsSdkFormat(credentials);\n         } catch (AWSIotException e) {\n             // TODO: Generate 4xx, 5xx responses for all error scnearios\n+            LOGGER.error(\"Encountered error while fetching credentials\", e);\n+        }\n+        return response;\n+    }\n+\n+    private byte[] translateToAwsSdkFormat(final String credentials) throws AWSIotException {\n+        try {\n+            JsonNode jsonNode = OBJECT_MAPPER.readTree(credentials).get(CREDENTIALS_UPSTREAM_STR);", "originalCommit": "43ec352d18480a23fe2b47e11b2c5517df438e17", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ3Mjk1NQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/247#discussion_r427472955", "bodyText": "I see. let me check.", "author": "prateek-y", "createdAt": "2020-05-19T17:25:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ3MDM5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM2NzQ2NA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/247#discussion_r429367464", "bodyText": "Not able to make it work with readTree, have added it TODO, will try to see if a pojo can help. For now lets merge this to unblock demos. I will add integration test as the next immediate thing as priority.", "author": "prateek-y", "createdAt": "2020-05-22T17:22:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ3MDM5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ3MTExOA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/247#discussion_r427471118", "bodyText": "WTF. 30 minutes!? Shouldn't this be more like 5 seconds?", "author": "MikeDombo", "createdAt": "2020-05-19T17:22:38Z", "path": "src/main/java/com/aws/iot/evergreen/tes/IotCloudHelper.java", "diffHunk": "@@ -33,7 +33,7 @@\n     private static final String HTTP_HEADER_ERROR_TYPE = \"x-amzn-ErrorType\";\n     // TODO: revisit all timeout values\n     // Max wait time for device to receive HTTP response from IOT CLOUD\n-    private static final long TIMEOUT_FOR_RESPONSE_FROM_IOT_CLOUD_SECONDS = (long) Duration.ofMinutes(5).getSeconds();\n+    private static final long TIMEOUT_FOR_RESPONSE_FROM_IOT_CLOUD_SECONDS = (long) Duration.ofMinutes(30).getSeconds();", "originalCommit": "43ec352d18480a23fe2b47e11b2c5517df438e17", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ3Mjg1Mw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/247#discussion_r427472853", "bodyText": "Hehe. :) will change.", "author": "prateek-y", "createdAt": "2020-05-19T17:25:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ3MTExOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ3NDAwMA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/247#discussion_r427474000", "bodyText": "5 seconds might be a little tight for a small steam-powered processor at the end of a flaky phone line.", "author": "JamesGosling", "createdAt": "2020-05-19T17:27:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ3MTExOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ3Njg1Nw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/247#discussion_r427476857", "bodyText": "Maybe 30 seconds then?", "author": "MikeDombo", "createdAt": "2020-05-19T17:31:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ3MTExOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ3OTkwMg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/247#discussion_r427479902", "bodyText": "30 seconds sounds reasonable to me.", "author": "prateek-y", "createdAt": "2020-05-19T17:35:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ3MTExOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ3MTMwNQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/247#discussion_r427471305", "bodyText": "make the string a public const.", "author": "MikeDombo", "createdAt": "2020-05-19T17:22:58Z", "path": "src/main/java/com/aws/iot/evergreen/tes/TokenExchangeService.java", "diffHunk": "@@ -40,17 +41,22 @@ public TokenExchangeService(Topics topics,\n                 .subscribe((why, newv) ->\n                         port = Coerce.toInt(newv));\n \n+        topics.lookup(\"iotRoleAlias\")", "originalCommit": "43ec352d18480a23fe2b47e11b2c5517df438e17", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ3MjU2NA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/247#discussion_r427472564", "bodyText": "okay", "author": "prateek-y", "createdAt": "2020-05-19T17:25:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ3MTMwNQ=="}], "type": "inlineReview"}, {"oid": "fc44bcb930b0de1a2d16a6b13b80fcbe12b2dedf", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/fc44bcb930b0de1a2d16a6b13b80fcbe12b2dedf", "message": "Apply feedback", "committedDate": "2020-05-22T17:17:18Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM2Njc0NA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/247#discussion_r429366744", "bodyText": "you can configure your IDE to add a blank line at the end of files which is preferred.", "author": "MikeDombo", "createdAt": "2020-05-22T17:21:20Z", "path": "src/main/java/com/aws/iot/evergreen/tes/CredentialRequestHandler.java", "diffHunk": "@@ -43,15 +65,34 @@ public void handle(final HttpExchange exchange) throws IOException {\n      * @return AWS credentials from cloud.\n      */\n     public byte[] getCredentials() {\n-        String credentials = \"--alive--\";\n+        byte[] response = {};\n+        LOGGER.debug(\"Got request for credentials\");\n         // TODO: Add cache\n         try {\n-            credentials = iotCloudHelper.sendHttpRequest(iotConnectionManager,\n-                    IOT_CREDENTIALS_PATH,\n+            final String credentials = iotCloudHelper.sendHttpRequest(iotConnectionManager,\n+                    iotCredentialsPath,\n                     IOT_CREDENTIALS_HTTP_VERB);\n+            response = translateToAwsSdkFormat(credentials);\n         } catch (AWSIotException e) {\n             // TODO: Generate 4xx, 5xx responses for all error scnearios\n+            LOGGER.error(\"Encountered error while fetching credentials\", e);\n+        }\n+        return response;\n+    }\n+\n+    private byte[] translateToAwsSdkFormat(final String credentials) throws AWSIotException {\n+        try {\n+            // TODO: Validate if lowercase lookup can make this simpler\n+            JsonNode jsonNode = OBJECT_MAPPER.readTree(credentials).get(CREDENTIALS_UPSTREAM_STR);\n+            Map<String, String> response = new HashMap<>();\n+            response.put(ACCESS_KEY_DOWNSTREAM_STR, jsonNode.get(ACCESS_KEY_UPSTREAM_STR).asText());\n+            response.put(SECRET_ACCESS_DOWNSTREAM_STR, jsonNode.get(SECRET_ACCESS_UPSTREAM_STR).asText());\n+            response.put(SESSION_TOKEN_DOWNSTREAM_STR, jsonNode.get(SESSION_TOKEN_UPSTREAM_STR).asText());\n+            response.put(EXPIRATION_DOWNSTREAM_STR, jsonNode.get(EXPIRATION_UPSTREAM_STR).asText());\n+            return OBJECT_MAPPER.writeValueAsBytes(response);\n+        } catch (JsonProcessingException e) {\n+            LOGGER.error(\"Received malformed credential input\", e);\n+            throw new AWSIotException(e);\n         }\n-        return credentials.getBytes(StandardCharsets.UTF_8);\n     }\n }", "originalCommit": "fc44bcb930b0de1a2d16a6b13b80fcbe12b2dedf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM2Nzg2Mg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/247#discussion_r429367862", "bodyText": "ok", "author": "prateek-y", "createdAt": "2020-05-22T17:23:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM2Njc0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM2NzI5NQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/247#discussion_r429367295", "bodyText": "For next PR, would be nice to have the ability to get credentials for use within the kernel, so maybe implement a credential provider which can return these credentials. I say to use a credential provider specifically because it would need to handle expiration and refreshing.", "author": "MikeDombo", "createdAt": "2020-05-22T17:22:35Z", "path": "src/main/java/com/aws/iot/evergreen/tes/CredentialRequestHandler.java", "diffHunk": "@@ -43,15 +65,34 @@ public void handle(final HttpExchange exchange) throws IOException {\n      * @return AWS credentials from cloud.\n      */\n     public byte[] getCredentials() {", "originalCommit": "fc44bcb930b0de1a2d16a6b13b80fcbe12b2dedf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM2Nzc4OA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/247#discussion_r429367788", "bodyText": "makes sense", "author": "prateek-y", "createdAt": "2020-05-22T17:23:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM2NzI5NQ=="}], "type": "inlineReview"}, {"oid": "b9d45ed4d0470d397c8d666198be995464d1717c", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b9d45ed4d0470d397c8d666198be995464d1717c", "message": "Apply changes for feedback", "committedDate": "2020-05-26T18:20:43Z", "type": "commit"}, {"oid": "b9d45ed4d0470d397c8d666198be995464d1717c", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b9d45ed4d0470d397c8d666198be995464d1717c", "message": "Apply changes for feedback", "committedDate": "2020-05-26T18:20:43Z", "type": "forcePushed"}, {"oid": "fa6ab7a40961c9e110f408457cf0e0a801db6550", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/fa6ab7a40961c9e110f408457cf0e0a801db6550", "message": "Merge branch 'master' into iot_tes", "committedDate": "2020-05-26T18:22:44Z", "type": "commit"}]}