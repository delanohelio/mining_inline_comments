{"pr_number": 257, "pr_title": "Integrate with Fleet Configuration Service", "pr_createdAt": "2020-05-23T02:06:34Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/257", "timeline": [{"oid": "d4e3b391328e56ff92e935ac8e1a73f0e22a39fa", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d4e3b391328e56ff92e935ac8e1a73f0e22a39fa", "message": "Integrate with Fleet Configuration Service", "committedDate": "2020-05-23T02:08:47Z", "type": "forcePushed"}, {"oid": "1348829f17a03d2a0b4a0e78cc6ed93cccd9a6c0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/1348829f17a03d2a0b4a0e78cc6ed93cccd9a6c0", "message": "Integrate with Fleet Configuration Service", "committedDate": "2020-05-26T19:12:21Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcwMjg0OA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/257#discussion_r430702848", "bodyText": "I wouldn't add this specifically; you should be able to use the default credential provider chain.", "author": "MikeDombo", "createdAt": "2020-05-26T20:56:05Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentCloudServiceIntegTest.java", "diffHunk": "@@ -59,45 +47,39 @@\n @Tag(\"E2E\")\n public class DeploymentCloudServiceIntegTest {\n \n-    private static final String CLOUD_SERVICE_URL = \"http://everg-everg-h5kz3uxz114v-1885244560.us-east-1.elb.amazonaws.com/deployments\";\n+    private static final String FCS_BETA_ENDPOINT = \"https://aqzw8qdn5l.execute-api.us-east-1.amazonaws.com/Beta\";\n+    private static final Region FCS_BETA_REGION = Region.US_EAST_1;\n+    private static final String THING_GROUP_TARGET_TYPE = \"thinggroup\";\n \n-    //TODO: after cloud service support creating deployments for things in custom accounts, remove the assume role.\n-    private static final String assumeRoleArn = \"arn:aws:iam::432173944312:role/EvergreenDeviceTestAssumeRole\";\n-    private static final String HTTP_HEADER_ETAG = \"x-amzn-iot-eg-etag\";\n     private final List<String> createdIotJobIdList = new ArrayList<>();\n     private Utils.ThingInfo thingInfo;\n-    private CreateThingGroupResponse thingGroupResp;\n+    private String thingGroupName;\n \n-    private final ObjectMapper mapper = new ObjectMapper();\n-    private final HttpClient client = HttpClients.createDefault();\n     private final Logger logger = LogManager.getLogger(this.getClass());\n     private Kernel kernel;\n \n+    private static AWSGreengrassFleetConfiguration fcsClient;\n     private static IotClient iotClient;\n \n     @TempDir\n     Path tempRootDir;\n \n     @BeforeAll\n-    @SuppressWarnings(\"PMD.CloseResource\")\n-    static void setIotClient() {\n-        StsClient stsClient = StsClient.builder().build();\n-\n-        AssumeRoleRequest roleRequest = AssumeRoleRequest.builder().roleArn(assumeRoleArn)\n-                .roleSessionName(UUID.randomUUID().toString()).build();\n-        AssumeRoleResponse roleResponse = stsClient.assumeRole(roleRequest);\n-        Credentials sessionCredentials = roleResponse.credentials();\n-\n-        AwsSessionCredentials awsCreds = AwsSessionCredentials\n-                .create(sessionCredentials.accessKeyId(), sessionCredentials.secretAccessKey(), sessionCredentials\n-                        .sessionToken());\n-\n-        iotClient = IotClient.builder().credentialsProvider(StaticCredentialsProvider.create(awsCreds))\n-                .region(Region.US_EAST_1).build();\n+    static void initClient() {\n+        iotClient = IotClient.builder().credentialsProvider(\n+                software.amazon.awssdk.auth.credentials.EnvironmentVariableCredentialsProvider.create())\n+                .region(FCS_BETA_REGION).build();\n+\n+        AwsClientBuilder.EndpointConfiguration endpointConfiguration = new AwsClientBuilder.EndpointConfiguration(\n+                FCS_BETA_ENDPOINT, FCS_BETA_REGION.toString());\n+        fcsClient = AWSGreengrassFleetConfigurationClientBuilder.standard()\n+                .withCredentials( new EnvironmentVariableCredentialsProvider())", "originalCommit": "1348829f17a03d2a0b4a0e78cc6ed93cccd9a6c0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcwNDY4NA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/257#discussion_r430704684", "bodyText": "You're right. Will clean it up.", "author": "hui-yang", "createdAt": "2020-05-26T20:59:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcwMjg0OA=="}], "type": "inlineReview"}, {"oid": "25a1123fcaa990d12db1abdd7e0b25087136a7f6", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/25a1123fcaa990d12db1abdd7e0b25087136a7f6", "message": "Integrate with Fleet Configuration Service", "committedDate": "2020-05-26T21:00:06Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDczNTc3MA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/257#discussion_r430735770", "bodyText": "Can we update this to use the component management service in cloud, instead of local package store?", "author": "abanthiy", "createdAt": "2020-05-26T22:10:49Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentCloudServiceIntegTest.java", "diffHunk": "@@ -123,49 +100,43 @@ void GIVEN_blank_kernel_WHEN_create_deployment_on_thing_group_THEN_new_services_\n         FileUtils.copyFolderRecursively(localStoreContentPath, kernel.getPackageStorePath());", "originalCommit": "25a1123fcaa990d12db1abdd7e0b25087136a7f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc3NjE1Mw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/257#discussion_r430776153", "bodyText": "Will we assume cloud has these test packages? If not, the full e2e solution might be 'uploading pkg to cloud and use cloud mngment service'", "author": "ShirleyZheng92", "createdAt": "2020-05-27T00:17:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDczNTc3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDgxODE3Mg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/257#discussion_r430818172", "bodyText": "Will add CMS integration in a follow-up PR.", "author": "hui-yang", "createdAt": "2020-05-27T02:09:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDczNTc3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDczNjIwMA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/257#discussion_r430736200", "bodyText": "Might be good to extract this out into separate methods/helper", "author": "abanthiy", "createdAt": "2020-05-26T22:12:00Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentCloudServiceIntegTest.java", "diffHunk": "@@ -123,49 +100,43 @@ void GIVEN_blank_kernel_WHEN_create_deployment_on_thing_group_THEN_new_services_\n         FileUtils.copyFolderRecursively(localStoreContentPath, kernel.getPackageStorePath());\n \n         thingInfo = Utils.createThing(iotClient);\n+        logger.atWarn().kv(\"thingName\", thingInfo.thingName).log();\n         Utils.updateKernelConfigWithIotConfiguration(kernel, thingInfo);\n \n         kernel.launch();\n \n         // Create thing group and deployment\n-        thingGroupResp = Utils.createThingGroupAndAddThing(iotClient, thingInfo);\n-        DeploymentDocument document = DeploymentDocument.builder().timestamp(System.currentTimeMillis())\n-                .deploymentId(UUID.randomUUID().toString()).rootPackages(Arrays.asList(\"CustomerApp\", \"SomeService\"))\n-                .deploymentPackageConfigurationList(Arrays\n-                        .asList(new DeploymentPackageConfiguration(\"CustomerApp\", \"1.0.0\", null), new DeploymentPackageConfiguration(\"SomeService\", \"1.0.0\", null)))\n-                .build();\n-\n-        String jobId1 = sendCreateDeploymentRequest(thingGroupResp.thingGroupArn(), document);\n+        thingGroupName = Utils.createThingGroupAndAddThing(iotClient, thingInfo).thingGroupName();\n+        logger.atWarn().kv(\"thingGroupName\", thingGroupName).log();\n+\n+        SetConfigurationRequest setRequest = new SetConfigurationRequest()\n+                .withTargetName(thingGroupName)\n+                .withTargetType(THING_GROUP_TARGET_TYPE)\n+                .withFailureHandlingPolicy(FailureHandlingPolicy.DO_NOTHING)\n+                .addPackagesEntry(\"CustomerApp\", new PackageMetaData().withRootComponent(true).withVersion(\"1.0.0\")\n+                        .withConfiguration(\"{\\\"sampleText\\\":\\\"FCS integ test\\\"}\"))\n+                .addPackagesEntry(\"SomeService\", new PackageMetaData().withRootComponent(true).withVersion(\"1.0.0\"));\n+        logger.atWarn().kv(\"setRequest\", setRequest).log();\n+        SetConfigurationResult setResult = fcsClient.setConfiguration(setRequest);\n+        logger.atWarn().kv(\"setResult\", setResult).log();\n+\n+        PublishConfigurationRequest publishRequest = new PublishConfigurationRequest()\n+                .withTargetName(thingGroupName)\n+                .withTargetType(THING_GROUP_TARGET_TYPE)\n+                .withRevisionId(setResult.getRevisionId());\n+        logger.atWarn().kv(\"publishRequest\", publishRequest).log();\n+        PublishConfigurationResult publishResult = fcsClient.publishConfiguration(publishRequest);\n+        logger.atWarn().kv(\"publishResult\", publishResult).log();\n+\n+        createdIotJobIdList.add(publishResult.getJobId());\n+        logger.atWarn().kv(\"iotJobId\", publishResult.getJobId()).log();", "originalCommit": "25a1123fcaa990d12db1abdd7e0b25087136a7f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDgxODI1NQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/257#discussion_r430818255", "bodyText": "Will do.", "author": "hui-yang", "createdAt": "2020-05-27T02:09:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDczNjIwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDczODYwMA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/257#discussion_r430738600", "bodyText": "Do you plan to replace tests in DeploymentE2ETest.java with communicating with cloud? Creating jobs for thing groups directly using IotJobs api isn't really our use case since jobs for Greengrass will be created on a different jobs topic which will be exposed only via cloud APIs.\nOther test cases are needed:\n\nMultiple jobs created\nError scenarios for bad deployment configuration (package not available in cloud)\nDifferent rollback policies\nSome of these are covered in DeploymentE2ETest", "author": "abanthiy", "createdAt": "2020-05-26T22:18:26Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentCloudServiceIntegTest.java", "diffHunk": "@@ -107,13 +85,12 @@ void cleanUp() {\n             kernel.shutdown();\n         }\n         Utils.cleanThing(iotClient, thingInfo);\n-        Utils.cleanThingGroup(iotClient, thingGroupResp.thingGroupName());\n+        Utils.cleanThingGroup(iotClient, thingGroupName);\n         createdIotJobIdList.forEach(jobId -> Utils.cleanJob(iotClient, jobId));\n         createdIotJobIdList.clear();\n     }\n \n-    // TODO: Integrate with Fleet Configuration Service\n-//    @Test\n+    @Test\n     void GIVEN_blank_kernel_WHEN_create_deployment_on_thing_group_THEN_new_services_deployed_and_job_is_successful() throws Exception {", "originalCommit": "25a1123fcaa990d12db1abdd7e0b25087136a7f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDgxODI0Nw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/257#discussion_r430818247", "bodyText": "Will do.", "author": "hui-yang", "createdAt": "2020-05-27T02:09:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDczODYwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc3NDc2Mg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/257#discussion_r430774762", "bodyText": "NIT: info level log", "author": "ShirleyZheng92", "createdAt": "2020-05-27T00:12:17Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentCloudServiceIntegTest.java", "diffHunk": "@@ -123,49 +100,43 @@ void GIVEN_blank_kernel_WHEN_create_deployment_on_thing_group_THEN_new_services_\n         FileUtils.copyFolderRecursively(localStoreContentPath, kernel.getPackageStorePath());\n \n         thingInfo = Utils.createThing(iotClient);\n+        logger.atWarn().kv(\"thingName\", thingInfo.thingName).log();", "originalCommit": "25a1123fcaa990d12db1abdd7e0b25087136a7f6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc3NTA1Mg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/257#discussion_r430775052", "bodyText": "Will targetType be an enum in SDK?", "author": "ShirleyZheng92", "createdAt": "2020-05-27T00:13:11Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentCloudServiceIntegTest.java", "diffHunk": "@@ -123,49 +100,43 @@ void GIVEN_blank_kernel_WHEN_create_deployment_on_thing_group_THEN_new_services_\n         FileUtils.copyFolderRecursively(localStoreContentPath, kernel.getPackageStorePath());\n \n         thingInfo = Utils.createThing(iotClient);\n+        logger.atWarn().kv(\"thingName\", thingInfo.thingName).log();\n         Utils.updateKernelConfigWithIotConfiguration(kernel, thingInfo);\n \n         kernel.launch();\n \n         // Create thing group and deployment\n-        thingGroupResp = Utils.createThingGroupAndAddThing(iotClient, thingInfo);\n-        DeploymentDocument document = DeploymentDocument.builder().timestamp(System.currentTimeMillis())\n-                .deploymentId(UUID.randomUUID().toString()).rootPackages(Arrays.asList(\"CustomerApp\", \"SomeService\"))\n-                .deploymentPackageConfigurationList(Arrays\n-                        .asList(new DeploymentPackageConfiguration(\"CustomerApp\", \"1.0.0\", null), new DeploymentPackageConfiguration(\"SomeService\", \"1.0.0\", null)))\n-                .build();\n-\n-        String jobId1 = sendCreateDeploymentRequest(thingGroupResp.thingGroupArn(), document);\n+        thingGroupName = Utils.createThingGroupAndAddThing(iotClient, thingInfo).thingGroupName();\n+        logger.atWarn().kv(\"thingGroupName\", thingGroupName).log();\n+\n+        SetConfigurationRequest setRequest = new SetConfigurationRequest()\n+                .withTargetName(thingGroupName)\n+                .withTargetType(THING_GROUP_TARGET_TYPE)", "originalCommit": "25a1123fcaa990d12db1abdd7e0b25087136a7f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDgxNzk3OQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/257#discussion_r430817979", "bodyText": "I don't think it's available as an enum.", "author": "hui-yang", "createdAt": "2020-05-27T02:08:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc3NTA1Mg=="}], "type": "inlineReview"}, {"oid": "ecd3e523f22203200f4b553d6fa36929acd5a212", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/ecd3e523f22203200f4b553d6fa36929acd5a212", "message": "Integrate with Fleet Configuration Service", "committedDate": "2020-05-27T19:25:04Z", "type": "forcePushed"}, {"oid": "5be06906268e6df9be361858eaa5b5e5760b56e6", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/5be06906268e6df9be361858eaa5b5e5760b56e6", "message": "Integrate with Fleet Configuration Service", "committedDate": "2020-05-27T21:59:16Z", "type": "commit"}, {"oid": "5be06906268e6df9be361858eaa5b5e5760b56e6", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/5be06906268e6df9be361858eaa5b5e5760b56e6", "message": "Integrate with Fleet Configuration Service", "committedDate": "2020-05-27T21:59:16Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ4OTYwOQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/257#discussion_r431489609", "bodyText": "nit: extra space before extends", "author": "MikeDombo", "createdAt": "2020-05-27T22:59:51Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/MultipleDeploymentsTest.java", "diffHunk": "@@ -31,40 +30,27 @@\n import java.time.Duration;\n import java.util.Arrays;\n import java.util.HashMap;\n-import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n-import java.util.Set;\n import java.util.concurrent.TimeUnit;\n \n import static com.aws.iot.evergreen.deployment.DeploymentService.DEPLOYMENT_SERVICE_TOPICS;\n import static com.aws.iot.evergreen.deployment.DeploymentStatusKeeper.PERSISTED_DEPLOYMENT_STATUS_KEY_JOB_ID;\n import static com.aws.iot.evergreen.deployment.DeploymentStatusKeeper.PERSISTED_DEPLOYMENT_STATUS_KEY_JOB_STATUS;\n import static com.aws.iot.evergreen.deployment.DeploymentStatusKeeper.PROCESSED_DEPLOYMENTS_TOPICS;\n import static com.aws.iot.evergreen.kernel.EvergreenService.SERVICES_NAMESPACE_TOPIC;\n-import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n \n @ExtendWith(EGExtension.class)\n @Tag(\"E2E\")\n-class MultipleDeploymentsTest {\n-    @TempDir\n-    Path tempRootDir;\n-\n+class MultipleDeploymentsTest  extends BaseE2ETestCase {", "originalCommit": "5be06906268e6df9be361858eaa5b5e5760b56e6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ5MjUwMw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/257#discussion_r431492503", "bodyText": "I will update!", "author": "hui-yang", "createdAt": "2020-05-27T23:08:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ4OTYwOQ=="}], "type": "inlineReview"}, {"oid": "1011249d20e2ae581dbb85b57265ea45958fa5c4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/1011249d20e2ae581dbb85b57265ea45958fa5c4", "message": "Address comments", "committedDate": "2020-05-27T23:08:30Z", "type": "commit"}]}