{"pr_number": 59, "pr_title": "Switch to newly agreed upon packet format", "pr_createdAt": "2020-02-11T17:59:33Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/59", "timeline": [{"oid": "7447db7adfcec0cbb8897ea9fd6b5af28fdd5dcf", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/7447db7adfcec0cbb8897ea9fd6b5af28fdd5dcf", "message": "Switch to newly agreed upon packet format", "committedDate": "2020-02-14T17:37:56Z", "type": "forcePushed"}, {"oid": "ea88b0bad395d0bc4f3a517d06d55df9f6a995ac", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/ea88b0bad395d0bc4f3a517d06d55df9f6a995ac", "message": "Switch to newly agreed upon packet format", "committedDate": "2020-02-14T17:59:14Z", "type": "forcePushed"}, {"oid": "a2bfa09b3347cd84db3f461415220a4a5d22b8bc", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/a2bfa09b3347cd84db3f461415220a4a5d22b8bc", "message": "Switch to newly agreed upon packet format", "committedDate": "2020-02-14T18:28:03Z", "type": "commit"}, {"oid": "a2bfa09b3347cd84db3f461415220a4a5d22b8bc", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/a2bfa09b3347cd84db3f461415220a4a5d22b8bc", "message": "Switch to newly agreed upon packet format", "committedDate": "2020-02-14T18:28:03Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM1MTk3OA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/59#discussion_r380351978", "bodyText": "NIT: I prefer pass the enum directly to sendAndReceive", "author": "ShirleyZheng92", "createdAt": "2020-02-17T20:13:36Z", "path": "src/main/java/com/aws/iot/evergreen/builtin/services/lifecycle/LifecycleIPCAgent.java", "diffHunk": "@@ -126,7 +125,7 @@ public void postInject() {\n                         ConnectionHandle connectionHandle =\n                                 router.getConnectionHandle(context, this::handleConnectionClosed);\n                         if (connectionHandle != null) {\n-                            connectionHandle.sendAndReceive(LIFECYCLE_SERVICE_NAME,\n+                            connectionHandle.sendAndReceive(BuiltInServiceDestinationCode.LIFECYCLE.getValue(),", "originalCommit": "a2bfa09b3347cd84db3f461415220a4a5d22b8bc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM2OTk4Nw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/59#discussion_r380369987", "bodyText": "As discussed offline, the reasoning here is that services can be dynamically added and not present in the enum at compile time. So that's why to use the int value directly instead of the enum.", "author": "MikeDombo", "createdAt": "2020-02-17T21:22:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM1MTk3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM1MzI5MQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/59#discussion_r380353291", "bodyText": "Should you disconnect after this?", "author": "ShirleyZheng92", "createdAt": "2020-02-17T20:18:58Z", "path": "src/main/java/com/aws/iot/evergreen/ipc/handler/AuthHandler.java", "diffHunk": "@@ -72,6 +87,32 @@ public ConnectionContext doAuth(FrameReader.Message request) throws IPCClientNot\n             throw new IPCClientNotAuthorizedException(\"Auth token not found\");\n         }\n \n-        return new ConnectionContext(serviceName);\n+        return new ConnectionContext(serviceName, remoteAddress);\n+    }\n+\n+    void handleAuth(ChannelHandlerContext ctx, FrameReader.MessageFrame message) throws IOException {\n+        if (message.destination == BuiltInServiceDestinationCode.AUTH.getValue()) {\n+            try {\n+                ConnectionContext context = doAuth(message.message, ctx.channel().remoteAddress());\n+                ctx.channel().attr(IPCChannelHandler.CONNECTION_CONTEXT_KEY).set(context);\n+                log.note(\"Successfully authenticated client\", context);\n+                sendResponse(new FrameReader.Message(IPCUtil.encode(\n+                        GeneralResponse.builder().response(context.getServiceName()).error(GenericErrorCodes.Success)\n+                                .build())), message.requestId, message.destination, ctx, false);\n+                router.clientConnected(context, ctx.channel());\n+            } catch (Throwable t) {\n+                log.warn(\"Error while authenticating client\", ctx.channel().remoteAddress(), t);\n+                sendResponse(new FrameReader.Message(IPCUtil.encode(\n+                        GeneralResponse.builder().errorMessage(\"Error while authenticating client\")\n+                                .error(GenericErrorCodes.Unauthorized).build())), message.requestId,\n+                        message.destination, ctx, true);\n+            }\n+        } else {\n+            log.warn(\"Wrong destination for first packet from client\", ctx.channel().remoteAddress());\n+            sendResponse(new FrameReader.Message(IPCUtil.encode(", "originalCommit": "a2bfa09b3347cd84db3f461415220a4a5d22b8bc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM3MDE0Ng==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/59#discussion_r380370146", "bodyText": "As discussed offline, yes it should and does disconnect. That's the boolean flag at the end. Setting it to true means that it will disconnect the netty channel once we write the response.", "author": "MikeDombo", "createdAt": "2020-02-17T21:23:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM1MzI5MQ=="}], "type": "inlineReview"}]}