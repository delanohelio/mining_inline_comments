{"pr_number": 142, "pr_title": "Refine behavior of requestRestart() and requestReinstall()", "pr_createdAt": "2020-03-26T22:43:33Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/142", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk3NDgyMg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/142#discussion_r398974822", "bodyText": "why is null allowed and used as a branching condition here? Is it possible to make us not reply on null?", "author": "leaf94", "createdAt": "2020-03-27T00:47:51Z", "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -610,6 +600,33 @@ private void startStateTransition() throws InterruptedException {\n         }\n     }\n \n+    /**\n+     * Only use in service lifecycle thread.\n+     * @param desiredState the desiredState to go. If not provided, default is Finished.\n+     */\n+    private void goToDesiredState(State desiredState) {\n+        if (desiredState == null) {\n+            updateStateAndBroadcast(State.FINISHED);\n+            return;", "originalCommit": "4a843afb30533254a3632aaf5c291ecefa1c99ae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQzMTk1MA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/142#discussion_r399431950", "bodyText": "sure. I can directly return here", "author": "ShirleyZheng92", "createdAt": "2020-03-27T17:36:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk3NDgyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk3NTE1OA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/142#discussion_r398975158", "bodyText": "Why does RUNNING also set INSTALLED?", "author": "leaf94", "createdAt": "2020-03-27T00:49:00Z", "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -610,6 +600,33 @@ private void startStateTransition() throws InterruptedException {\n         }\n     }\n \n+    /**\n+     * Only use in service lifecycle thread.\n+     * @param desiredState the desiredState to go. If not provided, default is Finished.\n+     */\n+    private void goToDesiredState(State desiredState) {\n+        if (desiredState == null) {\n+            updateStateAndBroadcast(State.FINISHED);\n+            return;\n+        }\n+        switch (desiredState) {\n+            case NEW:\n+                updateStateAndBroadcast(State.NEW);\n+                break;\n+            case INSTALLED:\n+            case RUNNING:\n+                updateStateAndBroadcast(State.INSTALLED);", "originalCommit": "4a843afb30533254a3632aaf5c291ecefa1c99ae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQzMTQ4MA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/142#discussion_r399431480", "bodyText": "If current state is FINISHED and desiredState is RUNNING, we sill want the service to go through startup process", "author": "ShirleyZheng92", "createdAt": "2020-03-27T17:35:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk3NTE1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk3NTM5MQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/142#discussion_r398975391", "bodyText": "I think we should revisit do we need this method or not...", "author": "leaf94", "createdAt": "2020-03-27T00:49:48Z", "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -610,6 +600,33 @@ private void startStateTransition() throws InterruptedException {\n         }\n     }\n \n+    /**\n+     * Only use in service lifecycle thread.\n+     * @param desiredState the desiredState to go. If not provided, default is Finished.\n+     */\n+    private void goToDesiredState(State desiredState) {", "originalCommit": "4a843afb30533254a3632aaf5c291ecefa1c99ae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA5NDMxOA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/142#discussion_r401094318", "bodyText": "I struggled at finding a good naming for this method. This logic is duplicated when the service is in FINISHED/STOPPING/ERROED at RUNNING  .", "author": "ShirleyZheng92", "createdAt": "2020-03-31T17:37:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk3NTM5MQ=="}], "type": "inlineReview"}, {"oid": "32cf6a751139f345f5a3d48b0c35897275d9b090", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/32cf6a751139f345f5a3d48b0c35897275d9b090", "message": "Refine behavior of requestRestart() and requestReinstall()\n\nMake requestRestart() not go through FINISHED state, so that dependers\nwon't treat the service as dependencyReady.", "committedDate": "2020-03-27T17:44:04Z", "type": "forcePushed"}, {"oid": "dfe4e56babde639b4f04931341e30a4142bb0ca5", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/dfe4e56babde639b4f04931341e30a4142bb0ca5", "message": "Refine behavior of requestRestart() and requestReinstall()\n\nMake requestRestart() not go through FINISHED state, so that dependers\nwon't treat the service as dependencyReady.", "committedDate": "2020-03-27T20:34:05Z", "type": "forcePushed"}, {"oid": "0269cbd9f0c27f227a032bdd10430e141c332b0c", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/0269cbd9f0c27f227a032bdd10430e141c332b0c", "message": "Refine behavior of requestRestart() and requestReinstall()\n\nMake requestRestart() not go through FINISHED state, so that dependers\nwon't treat the service as dependencyReady.", "committedDate": "2020-03-31T23:18:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI5ODgzOA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/142#discussion_r401298838", "bodyText": "This Nonnull is from lombok, and has no effect here.", "author": "MikeDombo", "createdAt": "2020-04-01T01:00:20Z", "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -611,6 +603,30 @@ private void startStateTransition() throws InterruptedException {\n         }\n     }\n \n+    /**\n+     * Given the service is terminated, move to desired state.\n+     * Only use in service lifecycle thread.\n+     * @param desiredState the desiredState to go, not null\n+     */\n+    private void serviceTerminatedMoveToDesiredState(@NonNull State desiredState) {", "originalCommit": "0269cbd9f0c27f227a032bdd10430e141c332b0c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg0NzY4OQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/142#discussion_r401847689", "bodyText": "NonNull from lombok should still work and do the run-time check. On the other hand, the pure javax.annotation (without binding a checker) will not do run-time check. It only acts as documentation and compile-time check with intellij/findbug. Here I think both are fine...", "author": "leaf94", "createdAt": "2020-04-01T19:12:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI5ODgzOA=="}], "type": "inlineReview"}, {"oid": "3c39c8c2512a647f636a44079365eaa12d85f9b4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3c39c8c2512a647f636a44079365eaa12d85f9b4", "message": "Refine behavior of requestRestart() and requestReinstall()\n\nMake requestRestart() not go through FINISHED state, so that dependers\nwon't treat the service as dependencyReady.", "committedDate": "2020-04-01T17:36:29Z", "type": "commit"}, {"oid": "3c39c8c2512a647f636a44079365eaa12d85f9b4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3c39c8c2512a647f636a44079365eaa12d85f9b4", "message": "Refine behavior of requestRestart() and requestReinstall()\n\nMake requestRestart() not go through FINISHED state, so that dependers\nwon't treat the service as dependencyReady.", "committedDate": "2020-04-01T17:36:29Z", "type": "forcePushed"}]}