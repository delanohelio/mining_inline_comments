{"pr_number": 720, "pr_title": "Support manifest level lifecycle override", "pr_createdAt": "2020-11-24T00:20:39Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/720", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA4NjQ5NQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/720#discussion_r529086495", "bodyText": "I try to make it a habit of not calling a get method multiple times. Here it makes no difference, but there are other places where data can change between get calls. Of course, I didn't follow my own rule above, but just worth a note :)", "author": "JamieHunter", "createdAt": "2020-11-24T00:36:27Z", "path": "src/main/java/com/aws/greengrass/componentmanager/converter/RecipeLoader.java", "diffHunk": "@@ -170,39 +170,26 @@ private static ComponentArtifact convertArtifactFromFile(\n             @Nonnull PlatformSpecificManifest manifest,\n             @Nonnull Set<String> allSelectors) {\n \n-        Map<String, Object> effectiveLifecycleMap = lifecycleMap;\n-\n-        if (manifest.getSelections() == null || manifest.getSelections().isEmpty()) {\n-            // BEGIN BETA Compatibility code\n-            // TODO: These need to be removed for re:Invent\n-            // We might be running with old lifecycle\n-            if (effectiveLifecycleMap.isEmpty()) {\n-                effectiveLifecycleMap = manifest.getLifecycle();\n-            }\n-            if (effectiveLifecycleMap.isEmpty()) {\n-                LOGGER.warn(\"Non-empty lifecycle section ignored after (old style) platform selection filtering\");\n-                return Collections.emptyMap();\n-            }\n-\n-            return effectiveLifecycleMap;\n-            // END BETA Compatibility code\n+        // If there is manifest level lifecycle\n+        if (manifest.getLifecycle() != null && !manifest.getLifecycle().isEmpty()) {", "originalCommit": "8a71bb4e2bc1ef093b0dd170e9456be77191489b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA4NzExNQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/720#discussion_r529087115", "bodyText": "This warning will occur if the lifecycle was empty / not provided.\nIt's important to only give this warning if a non-empty lifecyle was turned into an empty lifecycle else it will be confusing for a valid scenario.", "author": "JamieHunter", "createdAt": "2020-11-24T00:38:17Z", "path": "src/main/java/com/aws/greengrass/componentmanager/converter/RecipeLoader.java", "diffHunk": "@@ -170,39 +170,26 @@ private static ComponentArtifact convertArtifactFromFile(\n             @Nonnull PlatformSpecificManifest manifest,\n             @Nonnull Set<String> allSelectors) {\n \n-        Map<String, Object> effectiveLifecycleMap = lifecycleMap;\n-\n-        if (manifest.getSelections() == null || manifest.getSelections().isEmpty()) {\n-            // BEGIN BETA Compatibility code\n-            // TODO: These need to be removed for re:Invent\n-            // We might be running with old lifecycle\n-            if (effectiveLifecycleMap.isEmpty()) {\n-                effectiveLifecycleMap = manifest.getLifecycle();\n-            }\n-            if (effectiveLifecycleMap.isEmpty()) {\n-                LOGGER.warn(\"Non-empty lifecycle section ignored after (old style) platform selection filtering\");\n-                return Collections.emptyMap();\n-            }\n-\n-            return effectiveLifecycleMap;\n-            // END BETA Compatibility code\n+        // If there is manifest level lifecycle\n+        if (manifest.getLifecycle() != null && !manifest.getLifecycle().isEmpty()) {\n+            return manifest.getLifecycle();\n+        }\n+\n+        // selections were applied to the lifecycle section\n+        // we allow the following syntax forms (combined)\n+        //\n+        // Lifecycle:\n+        //    <selector>: (optional)\n+        //       Section:\n+        //          <selector>: (optional)\n+        //              body\n+        Object filtered = PlatformResolver.filterPlatform(lifecycleMap, allSelectors,\n+                manifest.getSelections()).orElse(Collections.emptyMap());\n+        if (filtered instanceof Map && !((Map<?, ?>) filtered).isEmpty()) {\n+            return (Map<String, Object>) filtered;\n         } else {\n-            // selections were applied to the lifecycle section\n-            // we allow the following syntax forms (combined)\n-            //\n-            // Lifecycle:\n-            //    <selector>: (optional)\n-            //       Section:\n-            //          <selector>: (optional)\n-            //              body\n-            Object filtered = PlatformResolver.filterPlatform(effectiveLifecycleMap, allSelectors,\n-                    manifest.getSelections()).orElse(Collections.emptyMap());\n-            if (filtered instanceof Map && !((Map<?, ?>) filtered).isEmpty()) {\n-                return (Map<String, Object>) filtered;\n-            } else {\n-                LOGGER.warn(\"Non-empty lifecycle section ignored after platform selection filtering\");\n-                return Collections.emptyMap();\n-            }\n+            LOGGER.warn(\"Non-empty lifecycle section ignored after platform selection filtering\");", "originalCommit": "8a71bb4e2bc1ef093b0dd170e9456be77191489b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTEwMDE0Nw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/720#discussion_r529100147", "bodyText": "What is the use case of a lifecycle is intended to be empty?", "author": "ShirleyZheng92", "createdAt": "2020-11-24T01:17:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA4NzExNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg3MzE0MQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/720#discussion_r529873141", "bodyText": "Just providing artifacts is one scenario. I expect when we support other recipe types, we're more likely to see lifecycle implied rather than explicit.", "author": "JamieHunter", "createdAt": "2020-11-24T20:57:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA4NzExNQ=="}], "type": "inlineReview"}, {"oid": "11ebd5a6eb42b72d22d9ad8915c22fd7ffa3c679", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/11ebd5a6eb42b72d22d9ad8915c22fd7ffa3c679", "message": "Support manifest level lifecycle override. Update platform field in ResolveComponentCandidates call.", "committedDate": "2020-11-24T20:36:42Z", "type": "forcePushed"}, {"oid": "69032db91bc3a2e85a21612d847fc3b751cae53a", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/69032db91bc3a2e85a21612d847fc3b751cae53a", "message": "Support manifest level lifecycle override. Update platform field in ResolveComponentCandidates call.", "committedDate": "2020-11-24T20:48:25Z", "type": "forcePushed"}, {"oid": "825720a823bb3e9cfec804800d9f267d7ad0feeb", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/825720a823bb3e9cfec804800d9f267d7ad0feeb", "message": "Support manifest level lifecycle override.", "committedDate": "2020-11-24T23:01:46Z", "type": "commit"}, {"oid": "825720a823bb3e9cfec804800d9f267d7ad0feeb", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/825720a823bb3e9cfec804800d9f267d7ad0feeb", "message": "Support manifest level lifecycle override.", "committedDate": "2020-11-24T23:01:46Z", "type": "forcePushed"}, {"oid": "0e52fbf90bc4bd56ce0f9bf799385ffb5467664c", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/0e52fbf90bc4bd56ce0f9bf799385ffb5467664c", "message": "Merge branch 'master' into manifest_lifecycle", "committedDate": "2020-11-24T23:47:24Z", "type": "commit"}, {"oid": "3ad1a6585d3f6d76f97532ca582143899630dc2b", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3ad1a6585d3f6d76f97532ca582143899630dc2b", "message": "Merge branch 'master' into manifest_lifecycle", "committedDate": "2020-11-25T18:50:17Z", "type": "commit"}]}