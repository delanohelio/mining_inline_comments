{"pr_number": 61, "pr_title": "Move platform resolving into separate java class.", "pr_createdAt": "2020-02-13T00:13:14Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/61", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU4NjgxMA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/61#discussion_r378586810", "bodyText": "Please create SIM and add link here.", "author": "MikeDombo", "createdAt": "2020-02-13T00:18:19Z", "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -617,29 +539,22 @@ public String getName() {\n \n     @Override\n     public void postInject() {\n-        addDependency(config.getChild(\"requires\"));\n-    }\n-\n-    public boolean addDependency(Node d) {\n-        boolean ret = false;\n-        if (d instanceof Topics) {\n-            d = pickByOS((Topics) d);\n-        }\n+        Node d = config.getChild(\"requires\");\n         if (d instanceof Topic) {\n             String ds = ((Topic) d).getOnce().toString();\n             Matcher m = DEP_PARSE.matcher(ds);\n             while (m.find()) {\n                 addDependency(m.group(1), m.group(3));\n-                ret = true;\n             }\n             if (!m.hitEnd()) {\n                 errored(\"bad dependency syntax\", ds);\n             }\n+        } else {\n+            // TODO: invalidate the config file", "originalCommit": "e476889ef9891d3b610bf859bd13bba28aad563f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU5NzE1Mw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/61#discussion_r378597153", "bodyText": "I feel it's too early to create SIM for this line now. Config validation is whole big story that we haven't dig into. I'll add a Sys.out here. For some reason log might not be initialized at this point(which I believe is a bug)", "author": "ShirleyZheng92", "createdAt": "2020-02-13T00:52:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU4NjgxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODYwMjg1Mw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/61#discussion_r378602853", "bodyText": "Looks like line 553 is causing a null pointer exception too. Probably because the node (d) is null.", "author": "MikeDombo", "createdAt": "2020-02-13T01:14:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU4NjgxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTEyMDAxMw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/61#discussion_r379120013", "bodyText": "Resolved", "author": "ShirleyZheng92", "createdAt": "2020-02-13T21:10:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU4NjgxMA=="}], "type": "inlineReview"}, {"oid": "57c338cb137f5d207e74875d9822af2014a436f9", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/57c338cb137f5d207e74875d9822af2014a436f9", "message": "Move platform resolving into separate java class.\n\nPlatform resolve will happen before config yaml file is loaded into\nmemory.", "committedDate": "2020-02-13T00:50:34Z", "type": "forcePushed"}, {"oid": "5649786b0f46e66c196c8692a092878b1d7fba01", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/5649786b0f46e66c196c8692a092878b1d7fba01", "message": "Move platform resolving into separate java class.\n\nPlatform resolve will happen before config yaml file is loaded into\nmemory.", "committedDate": "2020-02-13T00:54:29Z", "type": "forcePushed"}, {"oid": "84a07099749d6642fc6e7c18174923c052459045", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/84a07099749d6642fc6e7c18174923c052459045", "message": "Move platform resolving into separate java class.\n\nPlatform resolve will happen before config yaml file is loaded into\nmemory.", "committedDate": "2020-02-13T00:55:13Z", "type": "forcePushed"}, {"oid": "1ba5737fb1fc6fbfed6f006c089d87e5b35f4b3b", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/1ba5737fb1fc6fbfed6f006c089d87e5b35f4b3b", "message": "Move platform resolving into separate java class.\n\nPlatform resolve will happen before config yaml file is loaded into\nmemory.", "committedDate": "2020-02-13T01:16:56Z", "type": "commit"}, {"oid": "1ba5737fb1fc6fbfed6f006c089d87e5b35f4b3b", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/1ba5737fb1fc6fbfed6f006c089d87e5b35f4b3b", "message": "Move platform resolving into separate java class.\n\nPlatform resolve will happen before config yaml file is loaded into\nmemory.", "committedDate": "2020-02-13T01:16:56Z", "type": "forcePushed"}, {"oid": "0807be3dce10d23d5af303211801243386d616f2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/0807be3dce10d23d5af303211801243386d616f2", "message": "Merge branch 'master' into platformResolv", "committedDate": "2020-02-13T17:31:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTEyNDk5MA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/61#discussion_r379124990", "bodyText": "We could avoid static block by doing:\n private static final Set<String> SUPPORTED_PLATFORMS = ImmutableList.of(all\", \"any\", \"unix\",...);\n private static final Set<String> SUPPORTED_PLATFORMS = initializeRanks();", "author": "leaf94", "createdAt": "2020-02-13T21:20:55Z", "path": "src/main/java/com/aws/iot/evergreen/config/PlatformResolver.java", "diffHunk": "@@ -0,0 +1,129 @@\n+package com.aws.iot.evergreen.config;\n+\n+import com.aws.iot.evergreen.util.Exec;\n+\n+import java.net.InetAddress;\n+import java.net.UnknownHostException;\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+\n+public class PlatformResolver {\n+\n+    private static final Set<String> SUPPORTED_PLATFORMS = new HashSet<>();\n+    private static final HashMap<String, Integer> RANKS = new HashMap<>();\n+\n+    static {\n+        initialize();\n+    }\n+\n+    @edu.umd.cs.findbugs.annotations.SuppressFBWarnings(\n+            value = \"DMI_HARDCODED_ABSOLUTE_FILENAME\")\n+    private static void initialize() {", "originalCommit": "0807be3dce10d23d5af303211801243386d616f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE2NDI2MQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/61#discussion_r379164261", "bodyText": "ImmutableList isn't in the dependency. I addressed your comments", "author": "ShirleyZheng92", "createdAt": "2020-02-13T22:52:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTEyNDk5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTEyODU3Mg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/61#discussion_r379128572", "bodyText": "I understand we want to provide our own RANKS for unit testing purpose, but then this unit test for this public static method loses its functionality if we do so. Say we accidentally changed the RANKS wrongly in the source code, this unit test will be not be able to catch it...\nLet's have a quick offline discussion!", "author": "leaf94", "createdAt": "2020-02-13T21:28:39Z", "path": "src/test/java/com/aws/iot/evergreen/config/PlatformResolverTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.aws.iot.evergreen.config;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.dataformat.yaml.YAMLFactory;\n+import com.fasterxml.jackson.jr.ob.JSON;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+\n+import java.io.InputStream;\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+\n+public class PlatformResolverTest {\n+    ObjectMapper mapper = new ObjectMapper();\n+    private static Method platformResolveInternalMethod;\n+\n+    @BeforeAll\n+    public static void setup() throws NoSuchMethodException {\n+        Class[] cArg = new Class[2];\n+        cArg[0] = Map.class;\n+        cArg[1] = Map.class;\n+\n+        platformResolveInternalMethod = PlatformResolver.class.getDeclaredMethod(\"resolvePlatform\", cArg);\n+        platformResolveInternalMethod.setAccessible(true);", "originalCommit": "0807be3dce10d23d5af303211801243386d616f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTEzMzQ0MA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/61#discussion_r379133440", "bodyText": "The test of actual platform is hard.. Unless we have an integration test on a fleet of different platforms.", "author": "ShirleyZheng92", "createdAt": "2020-02-13T21:39:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTEyODU3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE5ODU4Mg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/61#discussion_r379198582", "bodyText": "As discussed, we can leave a TODO to refactor test with a PlatformRankFactory, which is injected into the PlatformResolver so that we could avoid testing private method.", "author": "leaf94", "createdAt": "2020-02-14T00:45:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTEyODU3Mg=="}], "type": "inlineReview"}, {"oid": "7c81653ee4aeef6d0c3dcfa6688e1f5eadead0ce", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/7c81653ee4aeef6d0c3dcfa6688e1f5eadead0ce", "message": "Address comments", "committedDate": "2020-02-13T22:38:44Z", "type": "commit"}]}