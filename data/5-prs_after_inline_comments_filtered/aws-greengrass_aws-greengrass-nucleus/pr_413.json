{"pr_number": 413, "pr_title": "Make Config store case-insensitive", "pr_createdAt": "2020-09-04T21:53:10Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/413", "timeline": [{"oid": "49e807daf1ad4b011e0aa5070724dc0abcdd01a2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/49e807daf1ad4b011e0aa5070724dc0abcdd01a2", "message": "Make Config store case-insensitive", "committedDate": "2020-09-04T22:08:05Z", "type": "forcePushed"}, {"oid": "dd8351402231813d68e1b9faaff2ca2d0742300f", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/dd8351402231813d68e1b9faaff2ca2d0742300f", "message": "Make Config store case-insensitive", "committedDate": "2020-09-04T22:11:47Z", "type": "forcePushed"}, {"oid": "dea12b1bd44bf02e2c1a327f03cbd78f72c4eb42", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/dea12b1bd44bf02e2c1a327f03cbd78f72c4eb42", "message": "Make Config store case-insensitive", "committedDate": "2020-09-04T22:18:15Z", "type": "forcePushed"}, {"oid": "3c8f8af3879f2e7d5cdcba9b118ee796f36f65bb", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3c8f8af3879f2e7d5cdcba9b118ee796f36f65bb", "message": "Make Config store case-insensitive", "committedDate": "2020-09-04T22:30:30Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg3MjAyOQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/413#discussion_r483872029", "bodyText": "just value.equalsIgnoreCase(o.getValue())?", "author": "leaf94", "createdAt": "2020-09-04T22:47:25Z", "path": "src/main/java/com/aws/iot/evergreen/config/CaseInsensitiveString.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.iot.evergreen.config;\n+\n+import lombok.NonNull;\n+\n+import java.util.Objects;\n+\n+public class CaseInsensitiveString implements CharSequence {\n+    private final String value;\n+    private String lower;\n+\n+    public CaseInsensitiveString(@NonNull String value) {\n+        this.value = value;\n+    }\n+\n+    private String getLower() {\n+        if (lower == null) {\n+            lower = value.toLowerCase();\n+        }\n+        return lower;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (o == null || getClass() != o.getClass()) {\n+            return false;\n+        }\n+        CaseInsensitiveString that = (CaseInsensitiveString) o;\n+        return getLower().equals(that.getLower());", "originalCommit": "3c8f8af3879f2e7d5cdcba9b118ee796f36f65bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg3MjQxMw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/413#discussion_r483872413", "bodyText": "Could do that, but I need the lowercase version anyway for hashcode, so I think that'll be more efficient.", "author": "MikeDombo", "createdAt": "2020-09-04T22:49:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg3MjAyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg3MzI4MA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/413#discussion_r483873280", "bodyText": "Make sense.", "author": "leaf94", "createdAt": "2020-09-04T22:53:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg3MjAyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg3MzIxNA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/413#discussion_r483873214", "bodyText": "nit - could also be final if wee do toLowerCase() in the constructor.", "author": "leaf94", "createdAt": "2020-09-04T22:53:29Z", "path": "src/main/java/com/aws/iot/evergreen/config/CaseInsensitiveString.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.iot.evergreen.config;\n+\n+import lombok.NonNull;\n+\n+import java.util.Objects;\n+\n+public class CaseInsensitiveString implements CharSequence {\n+    private final String value;\n+    private String lower;", "originalCommit": "3c8f8af3879f2e7d5cdcba9b118ee796f36f65bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg3MzM5Mw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/413#discussion_r483873393", "bodyText": "I did that first, but I think this is more efficient because it isn't guaranteed that we always need the lowercase form, like if hashcode or equals isn't called.", "author": "MikeDombo", "createdAt": "2020-09-04T22:54:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg3MzIxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg3MzI2NA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/413#discussion_r483873264", "bodyText": "No need for the null check if toLowerCase() in the constructor.", "author": "leaf94", "createdAt": "2020-09-04T22:53:47Z", "path": "src/main/java/com/aws/iot/evergreen/config/CaseInsensitiveString.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.iot.evergreen.config;\n+\n+import lombok.NonNull;\n+\n+import java.util.Objects;\n+\n+public class CaseInsensitiveString implements CharSequence {\n+    private final String value;\n+    private String lower;\n+\n+    public CaseInsensitiveString(@NonNull String value) {\n+        this.value = value;\n+    }\n+\n+    private String getLower() {\n+        if (lower == null) {\n+            lower = value.toLowerCase();", "originalCommit": "3c8f8af3879f2e7d5cdcba9b118ee796f36f65bb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIzMTQ0Ng==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/413#discussion_r485231446", "bodyText": "Why have to wait here?", "author": "ShirleyZheng92", "createdAt": "2020-09-08T22:33:19Z", "path": "src/main/java/com/aws/iot/evergreen/config/Topics.java", "diffHunk": "@@ -364,6 +375,7 @@ public void replaceAndWait(Map<Object, Object> newValue) {\n                 updateFromMap(System.currentTimeMillis(), newValue,\n                         new UpdateBehaviorTree(UpdateBehaviorTree.UpdateBehavior.REPLACE))\n         );\n+        context.runOnPublishQueueAndWait(() -> {});", "originalCommit": "3c8f8af3879f2e7d5cdcba9b118ee796f36f65bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIzMzA5OQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/413#discussion_r485233099", "bodyText": "Because the updates run on the publish queue after this method would have exited, so there's a race and the name replaceAndWait is wrong because it doesn't wait for the updates to be done.", "author": "MikeDombo", "createdAt": "2020-09-08T22:37:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIzMTQ0Ng=="}], "type": "inlineReview"}, {"oid": "66d734bc04b1dddabdc99892ff7071616b0b9b7c", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/66d734bc04b1dddabdc99892ff7071616b0b9b7c", "message": "Make Config store case-insensitive", "committedDate": "2020-09-08T22:47:29Z", "type": "commit"}, {"oid": "66d734bc04b1dddabdc99892ff7071616b0b9b7c", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/66d734bc04b1dddabdc99892ff7071616b0b9b7c", "message": "Make Config store case-insensitive", "committedDate": "2020-09-08T22:47:29Z", "type": "forcePushed"}]}