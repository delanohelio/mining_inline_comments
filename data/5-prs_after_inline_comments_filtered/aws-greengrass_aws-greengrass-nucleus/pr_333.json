{"pr_number": 333, "pr_title": "Add \"ComponentType\" key to Recipe", "pr_createdAt": "2020-07-27T22:10:18Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/333", "timeline": [{"oid": "22a838b2c1d6391fdd1630a9b67d55977e4f4c9b", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/22a838b2c1d6391fdd1630a9b67d55977e4f4c9b", "message": "Add private namespace to comment", "committedDate": "2020-07-27T22:16:29Z", "type": "forcePushed"}, {"oid": "32700c066dd0d61a8b29c9c3e8385370ebfc816a", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/32700c066dd0d61a8b29c9c3e8385370ebfc816a", "message": "Add class key to component recipe", "committedDate": "2020-07-27T22:39:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg2MTc2OA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/333#discussion_r461861768", "bodyText": "Curious, can you use @AllArgsConstructor @JsonSetter(nulls = Nulls.AS_EMPTY) and @JsonNaming(PropertyNamingStrategy.UpperCamelCaseStrategy.class) ?", "author": "ShirleyZheng92", "createdAt": "2020-07-28T20:34:52Z", "path": "src/main/java/com/aws/iot/evergreen/packagemanager/models/PackageRecipe.java", "diffHunk": "@@ -79,13 +82,13 @@ public PackageRecipe(@JsonProperty(\"RecipeTemplateVersion\") RecipeTemplateVersio\n                          @JsonProperty(\"ComponentName\") String componentName, @JsonProperty(\"Version\") Semver version,", "originalCommit": "32700c066dd0d61a8b29c9c3e8385370ebfc816a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg2MzA1OQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/333#discussion_r461863059", "bodyText": "Don't think so because there's custom logic in the constructor as well as custom deserializers", "author": "MikeDombo", "createdAt": "2020-07-28T20:37:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg2MTc2OA=="}], "type": "inlineReview"}, {"oid": "211cb93fd1033ebf00d04713eb4d9d970f414303", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/211cb93fd1033ebf00d04713eb4d9d970f414303", "message": "Change Class to ComponentType to abstract the actual class used", "committedDate": "2020-07-28T22:53:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk0MTkzMQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/333#discussion_r461941931", "bodyText": "Add unit tests for these two types?", "author": "fengwang666", "createdAt": "2020-07-28T23:02:34Z", "path": "src/main/java/com/aws/iot/evergreen/kernel/Kernel.java", "diffHunk": "@@ -119,6 +125,10 @@ public Kernel() {\n         context.put(DeploymentActivatorFactory.class, new DeploymentActivatorFactory(this));\n         context.put(BootstrapManager.class, new BootstrapManager(this));\n         context.put(Clock.class, Clock.systemUTC());\n+        Map<String, String> typeToClassMap = new ConcurrentHashMap<>();\n+        typeToClassMap.put(\"generic\", GenericExternalService.class.getName());\n+        typeToClassMap.put(\"lambda\", \"com.aws.iot.evergreen.lambdamanager.UserLambdaService\");", "originalCommit": "211cb93fd1033ebf00d04713eb4d9d970f414303", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6fef3424b328e4ed9720e7f19d97b6913329287d", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/6fef3424b328e4ed9720e7f19d97b6913329287d", "message": "Scope down visibility of EGService methods", "committedDate": "2020-07-29T00:09:01Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk4MzAyOQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/333#discussion_r461983029", "bodyText": "Are we okay with needing a new kernel version in rare cases where a new lambda manager version changes this class ?", "author": "shaguptashaikh", "createdAt": "2020-07-29T01:22:22Z", "path": "src/main/java/com/aws/iot/evergreen/kernel/Kernel.java", "diffHunk": "@@ -119,6 +125,10 @@ public Kernel() {\n         context.put(DeploymentActivatorFactory.class, new DeploymentActivatorFactory(this));\n         context.put(BootstrapManager.class, new BootstrapManager(this));\n         context.put(Clock.class, Clock.systemUTC());\n+        Map<String, String> typeToClassMap = new ConcurrentHashMap<>();\n+        typeToClassMap.put(\"generic\", GenericExternalService.class.getName());\n+        typeToClassMap.put(\"lambda\", \"com.aws.iot.evergreen.lambdamanager.UserLambdaService\");", "originalCommit": "d4d6687bb77f259d4d07760ffca3b44addffd80f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk4MzkyMg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/333#discussion_r461983922", "bodyText": "It should be treated as a breaking change if we ever rename or move it. After talking with Jamie and Feng, we decided that having this map was a bit of a better solution than exposing the class name to customers. As I mention in the updated PR description, we can't have this be dynamic because there's a race which it will always lose between updating this map and lambda services being created in the kernel.", "author": "MikeDombo", "createdAt": "2020-07-29T01:25:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk4MzAyOQ=="}], "type": "inlineReview"}, {"oid": "dfc6c3f3856b37f7adf4dcb6755fbc97389def3d", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/dfc6c3f3856b37f7adf4dcb6755fbc97389def3d", "message": "Add private namespace to comment", "committedDate": "2020-07-29T01:30:28Z", "type": "commit"}, {"oid": "2d7d6cf2b6de64b913d942ecfdbeb0f737dcbb23", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/2d7d6cf2b6de64b913d942ecfdbeb0f737dcbb23", "message": "Add class key to component recipe", "committedDate": "2020-07-29T01:30:28Z", "type": "commit"}, {"oid": "006bb69ea869091093d1d694af2522cf7f2158b3", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/006bb69ea869091093d1d694af2522cf7f2158b3", "message": "Change Class to ComponentType to abstract the actual class used", "committedDate": "2020-07-29T01:30:28Z", "type": "commit"}, {"oid": "1682a6eba51e75b6853ae0bde3bb24238fa5657b", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/1682a6eba51e75b6853ae0bde3bb24238fa5657b", "message": "Wait for main to restart in test", "committedDate": "2020-07-29T01:30:28Z", "type": "commit"}, {"oid": "70e7e4a154a188d958db8558490758a584a832a7", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/70e7e4a154a188d958db8558490758a584a832a7", "message": "Scope down visibility of EGService methods", "committedDate": "2020-07-29T01:30:28Z", "type": "commit"}, {"oid": "27e1fc55df39f0a8e1bba127d93a9104b950325b", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/27e1fc55df39f0a8e1bba127d93a9104b950325b", "message": "Undo change to test", "committedDate": "2020-07-29T01:31:09Z", "type": "commit"}, {"oid": "27e1fc55df39f0a8e1bba127d93a9104b950325b", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/27e1fc55df39f0a8e1bba127d93a9104b950325b", "message": "Undo change to test", "committedDate": "2020-07-29T01:31:09Z", "type": "forcePushed"}]}