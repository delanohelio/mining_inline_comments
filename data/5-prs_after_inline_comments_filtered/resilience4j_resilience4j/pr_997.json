{"pr_number": 997, "pr_title": "Issue #991 Cancel auto transition when trasition happend in Open state", "pr_createdAt": "2020-05-19T04:03:21Z", "pr_url": "https://github.com/resilience4j/resilience4j/pull/997", "timeline": [{"oid": "91f8dbcc3defb450ad1328c71dd41a648c1dc59e", "url": "https://github.com/resilience4j/resilience4j/commit/91f8dbcc3defb450ad1328c71dd41a648c1dc59e", "message": "Issue #991 Cancel auto transition when trasition happend in Open state", "committedDate": "2020-05-19T03:53:07Z", "type": "commit"}, {"oid": "06d4980caae1ed2b6dd9a6b919318edccbd0d4b8", "url": "https://github.com/resilience4j/resilience4j/commit/06d4980caae1ed2b6dd9a6b919318edccbd0d4b8", "message": "Add auto transition cancel test", "committedDate": "2020-05-24T08:15:34Z", "type": "commit"}, {"oid": "a075e6cd0ecf5543e67a31224c563b42d0a8e4ba", "url": "https://github.com/resilience4j/resilience4j/commit/a075e6cd0ecf5543e67a31224c563b42d0a8e4ba", "message": "Test with mocked ScheduledExecutorService", "committedDate": "2020-05-26T08:38:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg2OTQ0Ng==", "url": "https://github.com/resilience4j/resilience4j/pull/997#discussion_r430869446", "bodyText": "I'm not happy that this state-specific code is in generic method of the CircuitBreakerStateMachine.\nMaybe we can add a postTransitionHook or preTransitionHook to states which are invoked here in a generic form?", "author": "RobWin", "createdAt": "2020-05-27T05:43:58Z", "path": "resilience4j-circuitbreaker/src/main/java/io/github/resilience4j/circuitbreaker/internal/CircuitBreakerStateMachine.java", "diffHunk": "@@ -293,6 +291,9 @@ private void stateTransition(State newState,\n         UnaryOperator<CircuitBreakerState> newStateGenerator) {\n         CircuitBreakerState previousState = stateReference.getAndUpdate(currentState -> {\n             StateTransition.transitionBetween(getName(), currentState.getState(), newState);\n+            if (currentState instanceof OpenState) {", "originalCommit": "a075e6cd0ecf5543e67a31224c563b42d0a8e4ba", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg3NzQwNA==", "url": "https://github.com/resilience4j/resilience4j/pull/997#discussion_r430877404", "bodyText": "Yes right. that would be better. I'll add preTransitionHook.", "author": "dlsrb6342", "createdAt": "2020-05-27T06:08:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg2OTQ0Ng=="}], "type": "inlineReview"}, {"oid": "cd02830859bc9359b5fbedcc3ad4abe4b9b8c914", "url": "https://github.com/resilience4j/resilience4j/commit/cd02830859bc9359b5fbedcc3ad4abe4b9b8c914", "message": "Add preTransisionHook", "committedDate": "2020-05-28T05:36:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY3MzYwNw==", "url": "https://github.com/resilience4j/resilience4j/pull/997#discussion_r431673607", "bodyText": "what happens if the future is already completed?", "author": "RobWin", "createdAt": "2020-05-28T08:38:14Z", "path": "resilience4j-circuitbreaker/src/main/java/io/github/resilience4j/circuitbreaker/internal/CircuitBreakerStateMachine.java", "diffHunk": "@@ -695,12 +706,23 @@ public CircuitBreakerMetrics getMetrics() {\n             return circuitBreakerMetrics;\n         }\n \n+        @Override\n+        public void preTransitionHook() {\n+            cancelAutomaticTransitionToHalfOpen();\n+        }\n+\n         private void toHalfOpenState() {\n             if (isOpen.compareAndSet(true, false)) {\n                 transitionToHalfOpenState();\n             }\n         }\n \n+        private void cancelAutomaticTransitionToHalfOpen() {\n+            if (transitionToHalfOpenFuture != null) {\n+                transitionToHalfOpenFuture.cancel(true);", "originalCommit": "cd02830859bc9359b5fbedcc3ad4abe4b9b8c914", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY4OTIzOA==", "url": "https://github.com/resilience4j/resilience4j/pull/997#discussion_r431689238", "bodyText": "Yes. Needed to check whether it is done or is cancelled already.\nThank you.", "author": "dlsrb6342", "createdAt": "2020-05-28T09:04:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY3MzYwNw=="}], "type": "inlineReview"}, {"oid": "969f4e9407781dc732715ee08e92bc524eda908b", "url": "https://github.com/resilience4j/resilience4j/commit/969f4e9407781dc732715ee08e92bc524eda908b", "message": "Check auto transition future is already done", "committedDate": "2020-05-28T09:21:39Z", "type": "commit"}]}