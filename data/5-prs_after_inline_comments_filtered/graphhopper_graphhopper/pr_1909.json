{"pr_number": 1909, "pr_title": "Start using JUnit 5", "pr_createdAt": "2020-02-13T16:18:53Z", "pr_url": "https://github.com/graphhopper/graphhopper/pull/1909", "timeline": [{"oid": "8fd3fd5d91517c37a531af5e02638725b25e584a", "url": "https://github.com/graphhopper/graphhopper/commit/8fd3fd5d91517c37a531af5e02638725b25e584a", "message": "Minor cleanup", "committedDate": "2020-02-13T13:20:40Z", "type": "commit"}, {"oid": "2e957429ea732f219e9e7c9a27bccc42fd7ef085", "url": "https://github.com/graphhopper/graphhopper/commit/2e957429ea732f219e9e7c9a27bccc42fd7ef085", "message": "Start using junit 5", "committedDate": "2020-02-13T15:59:57Z", "type": "commit"}, {"oid": "08a85bc9792f78694304814c4e44bb7ad2eb4279", "url": "https://github.com/graphhopper/graphhopper/commit/08a85bc9792f78694304814c4e44bb7ad2eb4279", "message": "Merge branch 'master' into start_junit5", "committedDate": "2020-02-13T16:20:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk2ODgzNw==", "url": "https://github.com/graphhopper/graphhopper/pull/1909#discussion_r378968837", "bodyText": "jupiter tells us we are dealing with the junit 5 dependencies here", "author": "easbar", "createdAt": "2020-02-13T16:22:49Z", "path": "reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java", "diffHunk": "@@ -34,7 +34,9 @@\n import com.graphhopper.util.exceptions.PointDistanceExceededException;\n import com.graphhopper.util.shapes.GHPoint;\n import com.graphhopper.util.shapes.GHPoint3D;\n-import org.junit.*;\n+import org.junit.jupiter.api.*;", "originalCommit": "08a85bc9792f78694304814c4e44bb7ad2eb4279", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk2OTA5Nw==", "url": "https://github.com/graphhopper/graphhopper/pull/1909#discussion_r378969097", "bodyText": "This has been renamed, but its easy to change :)", "author": "easbar", "createdAt": "2020-02-13T16:23:12Z", "path": "reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java", "diffHunk": "@@ -59,7 +62,7 @@\n     private static GraphHopper hopper;\n     private final String tmpGraphFile = \"target/graphhopperIT-tmp\";\n \n-    @BeforeClass\n+    @BeforeAll", "originalCommit": "08a85bc9792f78694304814c4e44bb7ad2eb4279", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk2OTIyMQ==", "url": "https://github.com/graphhopper/graphhopper/pull/1909#discussion_r378969221", "bodyText": "Same here, just a rename", "author": "easbar", "createdAt": "2020-02-13T16:23:22Z", "path": "reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java", "diffHunk": "@@ -72,28 +75,29 @@ public static void beforeClass() {\n                 importOrLoad();\n     }\n \n-    @AfterClass\n+    @AfterAll\n     public static void afterClass() {\n         Helper.removeDir(new File(graphFileFoot));\n     }\n \n-    @Before\n+    @BeforeEach\n     public void setUp() {\n         Helper.removeDir(new File(tmpGraphFile));\n     }\n \n-    @After\n+    @AfterEach", "originalCommit": "08a85bc9792f78694304814c4e44bb7ad2eb4279", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk3MDQ1NQ==", "url": "https://github.com/graphhopper/graphhopper/pull/1909#discussion_r378970455", "bodyText": "This is quite nice, especially for testing with different api parameters. Each element of the array is split into separate parameters to the test method (algo and expectedVisitedNodes) and there are default converters (e.g. expectedVisitedNodes is parsed to an int here. So with these two annotations I was able to run the test I was talking about in the initial comment for different algorithms.", "author": "easbar", "createdAt": "2020-02-13T16:25:18Z", "path": "reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java", "diffHunk": "@@ -72,28 +75,29 @@ public static void beforeClass() {\n                 importOrLoad();\n     }\n \n-    @AfterClass\n+    @AfterAll\n     public static void afterClass() {\n         Helper.removeDir(new File(graphFileFoot));\n     }\n \n-    @Before\n+    @BeforeEach\n     public void setUp() {\n         Helper.removeDir(new File(tmpGraphFile));\n     }\n \n-    @After\n+    @AfterEach\n     public void tearDown() {\n         Helper.removeDir(new File(tmpGraphFile));\n     }\n \n-    @Test\n-    public void testMonacoWithInstructions() {\n+    @ParameterizedTest\n+    @CsvSource({DIJKSTRA + \",1110\", DIJKSTRA_BI + \",892\", ASTAR + \",699\", ASTAR_BI + \",396\"})", "originalCommit": "08a85bc9792f78694304814c4e44bb7ad2eb4279", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk3NDEzNw==", "url": "https://github.com/graphhopper/graphhopper/pull/1909#discussion_r378974137", "bodyText": "Its also nice to see the visited nodes counts for the different algos here :)", "author": "easbar", "createdAt": "2020-02-13T16:30:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk3MDQ1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU1MDk5MQ==", "url": "https://github.com/graphhopper/graphhopper/pull/1909#discussion_r379550991", "bodyText": "Interesting! Looks good.", "author": "karussell", "createdAt": "2020-02-14T17:21:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk3MDQ1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk3MDgwMg==", "url": "https://github.com/graphhopper/graphhopper/pull/1909#discussion_r378970802", "bodyText": "The message shown when an assertion fails is now the last parrameter in the assertXYZ methods...", "author": "easbar", "createdAt": "2020-02-13T16:25:53Z", "path": "reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java", "diffHunk": "@@ -1370,7 +1374,7 @@ public void testEncoderWithTurnCostSupport_stillAllows_nodeBasedRouting() {\n         GHRequest req = new GHRequest(p, q);\n         req.setVehicle(\"foot\");\n         GHResponse rsp = tmpHopper.route(req);\n-        assertEquals(\"there should not be an error, but was: \" + rsp.getErrors(), 0, rsp.getErrors().size());\n+        assertEquals(0, rsp.getErrors().size(), \"there should not be an error, but was: \" + rsp.getErrors());", "originalCommit": "08a85bc9792f78694304814c4e44bb7ad2eb4279", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk3MTQyNg==", "url": "https://github.com/graphhopper/graphhopper/pull/1909#discussion_r378971426", "bodyText": "I did not feel like changing all the method calls to the new format, but after adding these methods this could be done with a single click by using the inline refactoring in IntelliJ", "author": "easbar", "createdAt": "2020-02-13T16:26:43Z", "path": "reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java", "diffHunk": "@@ -1587,6 +1591,22 @@ private void assertInstruction(Instruction instruction, String expectedName, Str\n         assertEquals(expectedPoints, instruction.getPoints().size());\n     }\n \n+    private void assertTrue(boolean condition) {", "originalCommit": "08a85bc9792f78694304814c4e44bb7ad2eb4279", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "30de8cbbafa94031f4edaaa10af032adf1f83d0c", "url": "https://github.com/graphhopper/graphhopper/commit/30de8cbbafa94031f4edaaa10af032adf1f83d0c", "message": "Add dependency management and junit4 dependency to parent pom", "committedDate": "2020-02-14T22:03:44Z", "type": "commit"}, {"oid": "e649830c7ca48eb4c665fbd094c24cb8cf88300f", "url": "https://github.com/graphhopper/graphhopper/commit/e649830c7ca48eb4c665fbd094c24cb8cf88300f", "message": "Setup junit5 in parent pom", "committedDate": "2020-02-14T22:28:56Z", "type": "commit"}, {"oid": "079529df4eb02e817ef85f65beb300a1704950ac", "url": "https://github.com/graphhopper/graphhopper/commit/079529df4eb02e817ef85f65beb300a1704950ac", "message": "Merge branch 'master' into start_junit5", "committedDate": "2020-02-16T16:04:58Z", "type": "commit"}, {"oid": "bce9ec6692a09f588539bf6d6ee141cd5d631863", "url": "https://github.com/graphhopper/graphhopper/commit/bce9ec6692a09f588539bf6d6ee141cd5d631863", "message": "Convert GraphHopperIT to JUnit5", "committedDate": "2020-02-16T16:24:16Z", "type": "commit"}, {"oid": "ad672f2679295c670a3d7a3b61e6635bfa0ba7c7", "url": "https://github.com/graphhopper/graphhopper/commit/ad672f2679295c670a3d7a3b61e6635bfa0ba7c7", "message": "Merge branch 'master' into dependency_management", "committedDate": "2020-02-16T16:26:20Z", "type": "commit"}, {"oid": "a0c86fb814a7a5e9fcb7acd2860ab1a8d8e70dd8", "url": "https://github.com/graphhopper/graphhopper/commit/a0c86fb814a7a5e9fcb7acd2860ab1a8d8e70dd8", "message": "Merge branch 'dependency_management' into start_junit5\n\n# Conflicts:\n#\tpom.xml", "committedDate": "2020-02-16T16:28:05Z", "type": "commit"}, {"oid": "c8a3d990711e9f2be07f7ba7d5e8859a568e7314", "url": "https://github.com/graphhopper/graphhopper/commit/c8a3d990711e9f2be07f7ba7d5e8859a568e7314", "message": "Merge branch 'master' into dependency_management", "committedDate": "2020-02-18T07:41:43Z", "type": "commit"}, {"oid": "4ae35dc2d9928b3b458572d1f7ff2306b76b47ed", "url": "https://github.com/graphhopper/graphhopper/commit/4ae35dc2d9928b3b458572d1f7ff2306b76b47ed", "message": "Add comment", "committedDate": "2020-02-18T07:44:24Z", "type": "commit"}, {"oid": "e8462d9b80cf60470e7cbcb0ea3455fe76bfd677", "url": "https://github.com/graphhopper/graphhopper/commit/e8462d9b80cf60470e7cbcb0ea3455fe76bfd677", "message": "Merge branch 'dependency_management' into start_junit5", "committedDate": "2020-02-18T07:47:13Z", "type": "commit"}, {"oid": "2ec7fa62c669c165f14b601544f37356276fb5f7", "url": "https://github.com/graphhopper/graphhopper/commit/2ec7fa62c669c165f14b601544f37356276fb5f7", "message": "Merge branch 'master' into start_junit5\n\n# Conflicts:\n#\tpom.xml", "committedDate": "2020-02-18T07:48:43Z", "type": "commit"}, {"oid": "a9235d700063921c8d959ac2c5f136b802837b39", "url": "https://github.com/graphhopper/graphhopper/commit/a9235d700063921c8d959ac2c5f136b802837b39", "message": "Merge branch 'master' into start_junit5", "committedDate": "2020-02-21T07:39:46Z", "type": "commit"}, {"oid": "13aacd76a04fd7b4f6d5559694f02f148ba9c833", "url": "https://github.com/graphhopper/graphhopper/commit/13aacd76a04fd7b4f6d5559694f02f148ba9c833", "message": "Enable CH for newly added test", "committedDate": "2020-02-21T07:49:46Z", "type": "commit"}]}