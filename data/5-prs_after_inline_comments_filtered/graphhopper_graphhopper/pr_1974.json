{"pr_number": 1974, "pr_title": "Make sure node-based algos are not running with turn costs", "pr_createdAt": "2020-03-29T07:36:12Z", "pr_url": "https://github.com/graphhopper/graphhopper/pull/1974", "timeline": [{"oid": "9593041ad3784d126c55f5ed83553c6bdd95ed8f", "url": "https://github.com/graphhopper/graphhopper/commit/9593041ad3784d126c55f5ed83553c6bdd95ed8f", "message": "Add Weighting#hasTurnCosts, make sure node-based algos are not running with turn costs", "committedDate": "2020-03-29T07:31:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc1OTMxNQ==", "url": "https://github.com/graphhopper/graphhopper/pull/1974#discussion_r399759315", "bodyText": "Since disabling the turn costs is actually something we need to do sometimes I made this an actual parameter", "author": "easbar", "createdAt": "2020-03-29T07:37:24Z", "path": "core/src/main/java/com/graphhopper/GraphHopper.java", "diffHunk": "@@ -982,12 +982,19 @@ void interpolateBridgesAndOrTunnels() {\n         }\n     }\n \n+    final public Weighting createWeighting(ProfileConfig profileConfig, PMap hints) {\n+        return createWeighting(profileConfig, hints, false);\n+    }\n+\n     /**\n-     * @param profileConfig The profile for which the weighting shall be created\n-     * @param hints         Additional hints that can be used to further specify the weighting that shall be created\n+     * @param profileConfig    The profile for which the weighting shall be created\n+     * @param hints            Additional hints that can be used to further specify the weighting that shall be created\n+     * @param disableTurnCosts Can be used to explicitly create the weighting without turn costs. This is sometimes needed when the\n+     *                         weighting shall be used by some algorithm that can only be run with node-based graph traversal, like\n+     *                         LM preparation or Isochrones\n      */\n-    public Weighting createWeighting(ProfileConfig profileConfig, PMap hints) {\n-        return new DefaultWeightingFactory(encodingManager, ghStorage).createWeighting(profileConfig, hints);\n+    public Weighting createWeighting(ProfileConfig profileConfig, PMap hints, boolean disableTurnCosts) {", "originalCommit": "9593041ad3784d126c55f5ed83553c6bdd95ed8f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEyOTQ4Mg==", "url": "https://github.com/graphhopper/graphhopper/pull/1974#discussion_r400129482", "bodyText": "Couldn't we use turn_costs=false in hints? I would like to avoid further parameters here.", "author": "karussell", "createdAt": "2020-03-30T11:48:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc1OTMxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEzOTk5Nw==", "url": "https://github.com/graphhopper/graphhopper/pull/1974#discussion_r400139997", "bodyText": "But why not? We are creating weightings here and sometimes we need them without turn costs.. But if you really want to avoid the extra parameter, we can use a hint as before, I would just not like to call it turn_costs, because that had a different meaning before. So I would call it __disable_turn_costs, like it was called at the very beginning :)", "author": "easbar", "createdAt": "2020-03-30T12:08:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc1OTMxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE1MTE1NQ==", "url": "https://github.com/graphhopper/graphhopper/pull/1974#discussion_r400151155", "bodyText": "But why not?\n\nI see createWeighting as a more generic method and it is unclear why disabling turn costs should be so special.\nShouldn't the caller of createWeighting be able to create a Weighting and only use edge weights?\n\nI would just not like to call it turn_costs, because that had a different meaning before\n\nIsn't the meaning very similar in the sense that we ask the profile to ignore turn costs? Like a none-CH profile with turn_costs=true configured but turn_costs=false in the request hints?", "author": "karussell", "createdAt": "2020-03-30T12:27:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc1OTMxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI0MjM0Ng==", "url": "https://github.com/graphhopper/graphhopper/pull/1974#discussion_r400242346", "bodyText": "Ok, one argument for the additional boolean is a minor higher type safety for users overriding the createWeighting method. The would not need to explicitly figure out what is wrong in the source code.", "author": "karussell", "createdAt": "2020-03-30T14:36:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc1OTMxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI1Njg2Mw==", "url": "https://github.com/graphhopper/graphhopper/pull/1974#discussion_r400256863", "bodyText": "I see createWeighting as a more generic method and it is unclear why disabling turn costs should be so special.\n\nBasically there are two ways to disable turn costs: The first one is via the profile, there are profiles with and without turn costs and depending on this the weighting will include turn costs or not. But then there are cases where we have to disable the turn costs although they are enabled in the profile, for example for Isochrones (because they are only implemented for node-based graph traversal so far) and for LM preparation (also not implemented edge-based and the preparation is even more useful when turn costs are excluded (can be used for queries with and without turn costs)). So we need a second flag to disable turn costs also for profiles that include turn costs. This second flag is what makes disabling the turn costs special. In principle it could also go into the hints parameter, but it is  slightly different than the other hints in that it is only set internally vs. something the user can change via the request.\n\nShouldn't the caller of createWeighting be able to create a Weighting and only use edge weights?\n\nNot sure if I understand the question, but yes thats totally possible with the disableTurnCosts flag.\n\nIsn't the meaning very similar in the sense that we ask the profile to ignore turn costs? Like a none-CH profile with turn_costs=true configured but turn_costs=false in the request hints?\n\nYes its similar to that, but turn_costs existed as a request parameter before and now its an internal thing, so it seems a bit confusing to use the same name.", "author": "easbar", "createdAt": "2020-03-30T14:54:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc1OTMxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkxNDMwOA==", "url": "https://github.com/graphhopper/graphhopper/pull/1974#discussion_r400914308", "bodyText": "Shouldn't the caller of createWeighting be able to create a Weighting and only use edge weights?\n\n\n\nNot sure if I understand the question, but yes thats totally possible with the disableTurnCosts flag.\n\nI meant: createWeighting could be made independent of the use case. And then in the algorithm the node based traversal leads to skip calling calcTurnWeight without the need for this disableTurnCosts flag. I.e. turn cost supports needs then two things for the algorithm: a \"proper created\" Weighting and edge-based traversal.", "author": "karussell", "createdAt": "2020-03-31T13:30:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc1OTMxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkxNTQ2MA==", "url": "https://github.com/graphhopper/graphhopper/pull/1974#discussion_r400915460", "bodyText": "I.e. turn cost supports needs then two things for the algorithm: a \"proper created\" Weighting and edge-based traversal.\n\nI do not say this is wrong :) ... just that it might be slightly cleaner but likely also more complicated to do it at the algorithm level", "author": "karussell", "createdAt": "2020-03-31T13:31:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc1OTMxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkyMDQ0NA==", "url": "https://github.com/graphhopper/graphhopper/pull/1974#discussion_r400920444", "bodyText": "No its not complicated at the algorithm level and I suggested this a few times (here and here) :) . The reason why I eventually decided against this was that this way when we pass a weighting that includes turn costs into an algorithm with node-based graph traversal the turn costs will be silently ignored. The way we are doing this now is more strict in this sense: If we choose node-based we also have to make sure the weighting does not include turn costs, otherwise we will be notified that what we are trying to do is not possible.\n\ncreateWeighting could be made independent of the use case.\n\nThe createWeighting method does not really know what it is used for, it just has a switch that allows creating a weighting without turn costs even for profiles that have turn costs enabled", "author": "easbar", "createdAt": "2020-03-31T13:38:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc1OTMxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk2ODAxMg==", "url": "https://github.com/graphhopper/graphhopper/pull/1974#discussion_r400968012", "bodyText": "I eventually decided against this was that this way when we pass a weighting that includes turn costs into an algorithm with node-based graph traversal the turn costs will be silently ignored. The way we are doing this now is more strict in this sense:\n\nAh, thanks for the explanation.", "author": "karussell", "createdAt": "2020-03-31T14:40:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc1OTMxNQ=="}], "type": "inlineReview"}, {"oid": "e4f989ba8ededeeed22367b886cbee85bfb12ab4", "url": "https://github.com/graphhopper/graphhopper/commit/e4f989ba8ededeeed22367b886cbee85bfb12ab4", "message": "Add check for AlternativeRoute", "committedDate": "2020-03-29T08:54:51Z", "type": "commit"}, {"oid": "a9ccf950c68cbdb8fed8d4ef0bff599e72e6d972", "url": "https://github.com/graphhopper/graphhopper/commit/a9ccf950c68cbdb8fed8d4ef0bff599e72e6d972", "message": "Merge branch 'master' into has_turn_costs", "committedDate": "2020-03-29T13:44:01Z", "type": "commit"}, {"oid": "4b98a4f35161d18d2a658c2081c6118a31ade8e7", "url": "https://github.com/graphhopper/graphhopper/commit/4b98a4f35161d18d2a658c2081c6118a31ade8e7", "message": "Merge branch 'master' into has_turn_costs", "committedDate": "2020-03-31T14:41:50Z", "type": "commit"}]}