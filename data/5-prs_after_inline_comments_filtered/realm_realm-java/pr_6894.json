{"pr_number": 6894, "pr_title": "Update App Javadoc", "pr_createdAt": "2020-06-03T15:30:53Z", "pr_url": "https://github.com/realm/realm-java/pull/6894", "timeline": [{"oid": "b8db558a34c632c3ae501d814bea17825ae25145", "url": "https://github.com/realm/realm-java/commit/b8db558a34c632c3ae501d814bea17825ae25145", "message": "First brief documentation of App", "committedDate": "2020-06-03T13:07:22Z", "type": "commit"}, {"oid": "c9f07c7a3cb8c372fe22d6b205777a0f83fcf77c", "url": "https://github.com/realm/realm-java/commit/c9f07c7a3cb8c372fe22d6b205777a0f83fcf77c", "message": "Minor App documentation updates", "committedDate": "2020-06-03T15:24:10Z", "type": "commit"}, {"oid": "7deffd60bd381e0075056d7313e9adac95da28f4", "url": "https://github.com/realm/realm-java/commit/7deffd60bd381e0075056d7313e9adac95da28f4", "message": "Remove test file only used for formatting example code", "committedDate": "2020-06-03T15:27:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc5MTk4Ng==", "url": "https://github.com/realm/realm-java/pull/6894#discussion_r434791986", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * An <i>App</i> is the main client side entry point for interacting with a <i>MongoDB Realm App</i>.\n          \n          \n            \n             * An <i>App</i> is the main client-side entry point for interacting with a <i>MongoDB Realm App</i>.", "author": "edualonso", "createdAt": "2020-06-03T19:08:13Z", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java", "diffHunk": "@@ -51,8 +51,93 @@\n import io.realm.mongodb.functions.Functions;\n \n /**\n- * FIXME\n+ * An <i>App</i> is the main client side entry point for interacting with a <i>MongoDB Realm App</i>.", "originalCommit": "7deffd60bd381e0075056d7313e9adac95da28f4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc5MzA4OQ==", "url": "https://github.com/realm/realm-java/pull/6894#discussion_r434793089", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             *   <li>Register uses and perform various user related operations through authentication providers\n          \n          \n            \n             *   <li>Register uses and perform various user-related operations through authentication providers", "author": "edualonso", "createdAt": "2020-06-03T19:10:19Z", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java", "diffHunk": "@@ -51,8 +51,93 @@\n import io.realm.mongodb.functions.Functions;\n \n /**\n- * FIXME\n+ * An <i>App</i> is the main client side entry point for interacting with a <i>MongoDB Realm App</i>.\n+ *\n+ * The <i>App</i> can be used to:\n+ * <ul>\n+ *   <li>Register uses and perform various user related operations through authentication providers", "originalCommit": "7deffd60bd381e0075056d7313e9adac95da28f4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc5Mzc5Nw==", "url": "https://github.com/realm/realm-java/pull/6894#discussion_r434793797", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * <i>App</i> as below:\n          \n          \n            \n             * <i>App</i> as shown below:", "author": "edualonso", "createdAt": "2020-06-03T19:11:43Z", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java", "diffHunk": "@@ -51,8 +51,93 @@\n import io.realm.mongodb.functions.Functions;\n \n /**\n- * FIXME\n+ * An <i>App</i> is the main client side entry point for interacting with a <i>MongoDB Realm App</i>.\n+ *\n+ * The <i>App</i> can be used to:\n+ * <ul>\n+ *   <li>Register uses and perform various user related operations through authentication providers\n+ *   ({@link io.realm.mongodb.auth.ApiKeyAuth}, {@link EmailPasswordAuthImpl})</li>\n+ *   <li>Synchronize data between the local device and a remote Realm App with Synchronized Realms</li>\n+ *   <li>Invoke Realm App functions with {@link Functions}</li>\n+ *   <li>Access remote data from MongoDB databases with a {@link io.realm.mongodb.mongo.MongoClient}</li>\n+ * </ul>\n+ * <p>\n+ * To create an app that is linked with a remote <i>Realm App</i> initialize Realm and configure the\n+ * <i>App</i> as below:", "originalCommit": "7deffd60bd381e0075056d7313e9adac95da28f4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc5Njc3NA==", "url": "https://github.com/realm/realm-java/pull/6894#discussion_r434796774", "bodyText": "A couple of grammar mistakes.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * call remote Realm Functions and access remote data through Mongo Collections. The below examples\n          \n          \n            \n             * shows the synchronized APIs which cannot be used from the main thread. For the equivalent\n          \n          \n            \n             * asynchronous counter parts. The example project in please see\n          \n          \n            \n             * call remote Realm Functions and access remote data through Mongo Collections. The examples below\n          \n          \n            \n             * show the synchronized APIs which cannot be used from the main thread. For the equivalent\n          \n          \n            \n             * asynchronous counterparts. The example project in please see\n          \n      \n    \n    \n  \n\nAlso, these two sentences do not make grammatical sense:\nFor the equivalent asynchronous counterparts. The example project in please see", "author": "edualonso", "createdAt": "2020-06-03T19:17:14Z", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java", "diffHunk": "@@ -51,8 +51,93 @@\n import io.realm.mongodb.functions.Functions;\n \n /**\n- * FIXME\n+ * An <i>App</i> is the main client side entry point for interacting with a <i>MongoDB Realm App</i>.\n+ *\n+ * The <i>App</i> can be used to:\n+ * <ul>\n+ *   <li>Register uses and perform various user related operations through authentication providers\n+ *   ({@link io.realm.mongodb.auth.ApiKeyAuth}, {@link EmailPasswordAuthImpl})</li>\n+ *   <li>Synchronize data between the local device and a remote Realm App with Synchronized Realms</li>\n+ *   <li>Invoke Realm App functions with {@link Functions}</li>\n+ *   <li>Access remote data from MongoDB databases with a {@link io.realm.mongodb.mongo.MongoClient}</li>\n+ * </ul>\n+ * <p>\n+ * To create an app that is linked with a remote <i>Realm App</i> initialize Realm and configure the\n+ * <i>App</i> as below:\n+ * <p>\n+ * <pre>\n+ *    class MyApplication extends Application {\n+ *\n+ *         @Override\n+ *         public void onCreate() {\n+ *             super.onCreate();\n+ *\n+ *             Realm.init(this);\n+ *\n+ *             AppConfiguration appConfiguration = new AppConfiguration.Builder(BuildConfig.MONGODB_REALM_APP_ID)\n+ *                     .appName(BuildConfig.VERSION_NAME)\n+ *                     .appVersion(Integer.toString(BuildConfig.VERSION_CODE))\n+ *                     .build();\n+ *\n+ *             App APP = new App(appConfiguration);\n+ *         }\n+ *\n+ *     }\n+ * </pre>\n+ * <p>\n+ * After configuring the <i>App</i> you can start managing users, configure Synchronized Realms,\n+ * call remote Realm Functions and access remote data through Mongo Collections. The below examples\n+ * shows the synchronized APIs which cannot be used from the main thread. For the equivalent\n+ * asynchronous counter parts. The example project in please see", "originalCommit": "7deffd60bd381e0075056d7313e9adac95da28f4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc5Njk4OQ==", "url": "https://github.com/realm/realm-java/pull/6894#discussion_r434796989", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * To register a new user and/or login with an existing user as below:\n          \n          \n            \n             * To register a new user and/or login with an existing user do as shown below:", "author": "edualonso", "createdAt": "2020-06-03T19:17:40Z", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java", "diffHunk": "@@ -51,8 +51,93 @@\n import io.realm.mongodb.functions.Functions;\n \n /**\n- * FIXME\n+ * An <i>App</i> is the main client side entry point for interacting with a <i>MongoDB Realm App</i>.\n+ *\n+ * The <i>App</i> can be used to:\n+ * <ul>\n+ *   <li>Register uses and perform various user related operations through authentication providers\n+ *   ({@link io.realm.mongodb.auth.ApiKeyAuth}, {@link EmailPasswordAuthImpl})</li>\n+ *   <li>Synchronize data between the local device and a remote Realm App with Synchronized Realms</li>\n+ *   <li>Invoke Realm App functions with {@link Functions}</li>\n+ *   <li>Access remote data from MongoDB databases with a {@link io.realm.mongodb.mongo.MongoClient}</li>\n+ * </ul>\n+ * <p>\n+ * To create an app that is linked with a remote <i>Realm App</i> initialize Realm and configure the\n+ * <i>App</i> as below:\n+ * <p>\n+ * <pre>\n+ *    class MyApplication extends Application {\n+ *\n+ *         @Override\n+ *         public void onCreate() {\n+ *             super.onCreate();\n+ *\n+ *             Realm.init(this);\n+ *\n+ *             AppConfiguration appConfiguration = new AppConfiguration.Builder(BuildConfig.MONGODB_REALM_APP_ID)\n+ *                     .appName(BuildConfig.VERSION_NAME)\n+ *                     .appVersion(Integer.toString(BuildConfig.VERSION_CODE))\n+ *                     .build();\n+ *\n+ *             App APP = new App(appConfiguration);\n+ *         }\n+ *\n+ *     }\n+ * </pre>\n+ * <p>\n+ * After configuring the <i>App</i> you can start managing users, configure Synchronized Realms,\n+ * call remote Realm Functions and access remote data through Mongo Collections. The below examples\n+ * shows the synchronized APIs which cannot be used from the main thread. For the equivalent\n+ * asynchronous counter parts. The example project in please see\n+ * https://github.com/realm/realm-java/tree/v10/examples/mongoDbRealmExample.\n+ *\n+ * To register a new user and/or login with an existing user as below:", "originalCommit": "7deffd60bd381e0075056d7313e9adac95da28f4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc5NzIyOA==", "url": "https://github.com/realm/realm-java/pull/6894#discussion_r434797228", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * App by opening a Realm with a {@link io.realm.mongodb.sync.SyncConfiguration} as below:\n          \n          \n            \n             * App by opening a Realm with a {@link io.realm.mongodb.sync.SyncConfiguration} as indicated below:", "author": "edualonso", "createdAt": "2020-06-03T19:18:11Z", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java", "diffHunk": "@@ -51,8 +51,93 @@\n import io.realm.mongodb.functions.Functions;\n \n /**\n- * FIXME\n+ * An <i>App</i> is the main client side entry point for interacting with a <i>MongoDB Realm App</i>.\n+ *\n+ * The <i>App</i> can be used to:\n+ * <ul>\n+ *   <li>Register uses and perform various user related operations through authentication providers\n+ *   ({@link io.realm.mongodb.auth.ApiKeyAuth}, {@link EmailPasswordAuthImpl})</li>\n+ *   <li>Synchronize data between the local device and a remote Realm App with Synchronized Realms</li>\n+ *   <li>Invoke Realm App functions with {@link Functions}</li>\n+ *   <li>Access remote data from MongoDB databases with a {@link io.realm.mongodb.mongo.MongoClient}</li>\n+ * </ul>\n+ * <p>\n+ * To create an app that is linked with a remote <i>Realm App</i> initialize Realm and configure the\n+ * <i>App</i> as below:\n+ * <p>\n+ * <pre>\n+ *    class MyApplication extends Application {\n+ *\n+ *         @Override\n+ *         public void onCreate() {\n+ *             super.onCreate();\n+ *\n+ *             Realm.init(this);\n+ *\n+ *             AppConfiguration appConfiguration = new AppConfiguration.Builder(BuildConfig.MONGODB_REALM_APP_ID)\n+ *                     .appName(BuildConfig.VERSION_NAME)\n+ *                     .appVersion(Integer.toString(BuildConfig.VERSION_CODE))\n+ *                     .build();\n+ *\n+ *             App APP = new App(appConfiguration);\n+ *         }\n+ *\n+ *     }\n+ * </pre>\n+ * <p>\n+ * After configuring the <i>App</i> you can start managing users, configure Synchronized Realms,\n+ * call remote Realm Functions and access remote data through Mongo Collections. The below examples\n+ * shows the synchronized APIs which cannot be used from the main thread. For the equivalent\n+ * asynchronous counter parts. The example project in please see\n+ * https://github.com/realm/realm-java/tree/v10/examples/mongoDbRealmExample.\n+ *\n+ * To register a new user and/or login with an existing user as below:\n+ * <pre>\n+ *     // Register new user\n+ *     User user = APP.getEmailPasswordAuth().registerUser(username, password);\n+ *\n+ *     // Login with existing\n+ *     APP.login(Credentials.emailPassword(username, password))\n+ * </pre>\n+ * <p>\n+ * With an authorized user you can synchronize data between the local device and the remote Realm\n+ * App by opening a Realm with a {@link io.realm.mongodb.sync.SyncConfiguration} as below:", "originalCommit": "7deffd60bd381e0075056d7313e9adac95da28f4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc5NzQyNQ==", "url": "https://github.com/realm/realm-java/pull/6894#discussion_r434797425", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * You can call remove Realm functions as below:\n          \n          \n            \n             * You can call remove Realm functions as shown below:", "author": "edualonso", "createdAt": "2020-06-03T19:18:32Z", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java", "diffHunk": "@@ -51,8 +51,93 @@\n import io.realm.mongodb.functions.Functions;\n \n /**\n- * FIXME\n+ * An <i>App</i> is the main client side entry point for interacting with a <i>MongoDB Realm App</i>.\n+ *\n+ * The <i>App</i> can be used to:\n+ * <ul>\n+ *   <li>Register uses and perform various user related operations through authentication providers\n+ *   ({@link io.realm.mongodb.auth.ApiKeyAuth}, {@link EmailPasswordAuthImpl})</li>\n+ *   <li>Synchronize data between the local device and a remote Realm App with Synchronized Realms</li>\n+ *   <li>Invoke Realm App functions with {@link Functions}</li>\n+ *   <li>Access remote data from MongoDB databases with a {@link io.realm.mongodb.mongo.MongoClient}</li>\n+ * </ul>\n+ * <p>\n+ * To create an app that is linked with a remote <i>Realm App</i> initialize Realm and configure the\n+ * <i>App</i> as below:\n+ * <p>\n+ * <pre>\n+ *    class MyApplication extends Application {\n+ *\n+ *         @Override\n+ *         public void onCreate() {\n+ *             super.onCreate();\n+ *\n+ *             Realm.init(this);\n+ *\n+ *             AppConfiguration appConfiguration = new AppConfiguration.Builder(BuildConfig.MONGODB_REALM_APP_ID)\n+ *                     .appName(BuildConfig.VERSION_NAME)\n+ *                     .appVersion(Integer.toString(BuildConfig.VERSION_CODE))\n+ *                     .build();\n+ *\n+ *             App APP = new App(appConfiguration);\n+ *         }\n+ *\n+ *     }\n+ * </pre>\n+ * <p>\n+ * After configuring the <i>App</i> you can start managing users, configure Synchronized Realms,\n+ * call remote Realm Functions and access remote data through Mongo Collections. The below examples\n+ * shows the synchronized APIs which cannot be used from the main thread. For the equivalent\n+ * asynchronous counter parts. The example project in please see\n+ * https://github.com/realm/realm-java/tree/v10/examples/mongoDbRealmExample.\n+ *\n+ * To register a new user and/or login with an existing user as below:\n+ * <pre>\n+ *     // Register new user\n+ *     User user = APP.getEmailPasswordAuth().registerUser(username, password);\n+ *\n+ *     // Login with existing\n+ *     APP.login(Credentials.emailPassword(username, password))\n+ * </pre>\n+ * <p>\n+ * With an authorized user you can synchronize data between the local device and the remote Realm\n+ * App by opening a Realm with a {@link io.realm.mongodb.sync.SyncConfiguration} as below:\n+ * <pre>\n+ *     SyncConfiguration syncConfiguration = new SyncConfiguration.Builder(user, \"<partition value>\")\n+ *              .build();\n+ *\n+ *     Realm instance = Realm.getInstance(syncConfiguration);\n+ *     SyncSession session = APP.getSync().getSession(syncConfiguration);\n+ *\n+ *     instance.executeTransaction(realm -> {\n+ *         realm.insert(...);\n+ *     });\n+ *     session.uploadAllLocalChanges();\n+ *     instance.close();\n+ * </pre>\n+ * <p>\n+ * You can call remove Realm functions as below:", "originalCommit": "7deffd60bd381e0075056d7313e9adac95da28f4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc5Nzk0Mg==", "url": "https://github.com/realm/realm-java/pull/6894#discussion_r434797942", "bodyText": "Trying not to abuse the shown/indicate below:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * And access collections from the remote Realm App as below:\n          \n          \n            \n             * And access collections from the remote Realm App as shown here:", "author": "edualonso", "createdAt": "2020-06-03T19:19:35Z", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java", "diffHunk": "@@ -51,8 +51,93 @@\n import io.realm.mongodb.functions.Functions;\n \n /**\n- * FIXME\n+ * An <i>App</i> is the main client side entry point for interacting with a <i>MongoDB Realm App</i>.\n+ *\n+ * The <i>App</i> can be used to:\n+ * <ul>\n+ *   <li>Register uses and perform various user related operations through authentication providers\n+ *   ({@link io.realm.mongodb.auth.ApiKeyAuth}, {@link EmailPasswordAuthImpl})</li>\n+ *   <li>Synchronize data between the local device and a remote Realm App with Synchronized Realms</li>\n+ *   <li>Invoke Realm App functions with {@link Functions}</li>\n+ *   <li>Access remote data from MongoDB databases with a {@link io.realm.mongodb.mongo.MongoClient}</li>\n+ * </ul>\n+ * <p>\n+ * To create an app that is linked with a remote <i>Realm App</i> initialize Realm and configure the\n+ * <i>App</i> as below:\n+ * <p>\n+ * <pre>\n+ *    class MyApplication extends Application {\n+ *\n+ *         @Override\n+ *         public void onCreate() {\n+ *             super.onCreate();\n+ *\n+ *             Realm.init(this);\n+ *\n+ *             AppConfiguration appConfiguration = new AppConfiguration.Builder(BuildConfig.MONGODB_REALM_APP_ID)\n+ *                     .appName(BuildConfig.VERSION_NAME)\n+ *                     .appVersion(Integer.toString(BuildConfig.VERSION_CODE))\n+ *                     .build();\n+ *\n+ *             App APP = new App(appConfiguration);\n+ *         }\n+ *\n+ *     }\n+ * </pre>\n+ * <p>\n+ * After configuring the <i>App</i> you can start managing users, configure Synchronized Realms,\n+ * call remote Realm Functions and access remote data through Mongo Collections. The below examples\n+ * shows the synchronized APIs which cannot be used from the main thread. For the equivalent\n+ * asynchronous counter parts. The example project in please see\n+ * https://github.com/realm/realm-java/tree/v10/examples/mongoDbRealmExample.\n+ *\n+ * To register a new user and/or login with an existing user as below:\n+ * <pre>\n+ *     // Register new user\n+ *     User user = APP.getEmailPasswordAuth().registerUser(username, password);\n+ *\n+ *     // Login with existing\n+ *     APP.login(Credentials.emailPassword(username, password))\n+ * </pre>\n+ * <p>\n+ * With an authorized user you can synchronize data between the local device and the remote Realm\n+ * App by opening a Realm with a {@link io.realm.mongodb.sync.SyncConfiguration} as below:\n+ * <pre>\n+ *     SyncConfiguration syncConfiguration = new SyncConfiguration.Builder(user, \"<partition value>\")\n+ *              .build();\n+ *\n+ *     Realm instance = Realm.getInstance(syncConfiguration);\n+ *     SyncSession session = APP.getSync().getSession(syncConfiguration);\n+ *\n+ *     instance.executeTransaction(realm -> {\n+ *         realm.insert(...);\n+ *     });\n+ *     session.uploadAllLocalChanges();\n+ *     instance.close();\n+ * </pre>\n+ * <p>\n+ * You can call remove Realm functions as below:\n+ * <pre>\n+ *     Functions functions = user.getFunctions();\n+ *     Integer sum = functions.callFunction(\"sum\", Arrays.asList(1, 2, 3, 4), Integer.class);\n+ * </pre>\n+ * <p>\n+ * And access collections from the remote Realm App as below:", "originalCommit": "7deffd60bd381e0075056d7313e9adac95da28f4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDgxNjMyNw==", "url": "https://github.com/realm/realm-java/pull/6894#discussion_r434816327", "bodyText": "Maybe move this to file constant or companion object definition? At least the way it is used below will not work with how it is defined here?", "author": "cmelchior", "createdAt": "2020-06-03T19:52:20Z", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java", "diffHunk": "@@ -51,8 +51,93 @@\n import io.realm.mongodb.functions.Functions;\n \n /**\n- * FIXME\n+ * An <i>App</i> is the main client side entry point for interacting with a <i>MongoDB Realm App</i>.\n+ *\n+ * The <i>App</i> can be used to:\n+ * <ul>\n+ *   <li>Register uses and perform various user related operations through authentication providers\n+ *   ({@link io.realm.mongodb.auth.ApiKeyAuth}, {@link EmailPasswordAuthImpl})</li>\n+ *   <li>Synchronize data between the local device and a remote Realm App with Synchronized Realms</li>\n+ *   <li>Invoke Realm App functions with {@link Functions}</li>\n+ *   <li>Access remote data from MongoDB databases with a {@link io.realm.mongodb.mongo.MongoClient}</li>\n+ * </ul>\n+ * <p>\n+ * To create an app that is linked with a remote <i>Realm App</i> initialize Realm and configure the\n+ * <i>App</i> as below:\n+ * <p>\n+ * <pre>\n+ *    class MyApplication extends Application {\n+ *\n+ *         @Override\n+ *         public void onCreate() {\n+ *             super.onCreate();\n+ *\n+ *             Realm.init(this);\n+ *\n+ *             AppConfiguration appConfiguration = new AppConfiguration.Builder(BuildConfig.MONGODB_REALM_APP_ID)\n+ *                     .appName(BuildConfig.VERSION_NAME)\n+ *                     .appVersion(Integer.toString(BuildConfig.VERSION_CODE))\n+ *                     .build();\n+ *\n+ *             App APP = new App(appConfiguration);", "originalCommit": "7deffd60bd381e0075056d7313e9adac95da28f4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTE1NjczMA==", "url": "https://github.com/realm/realm-java/pull/6894#discussion_r435156730", "bodyText": "\ud83d\udc4d Moved", "author": "rorbech", "createdAt": "2020-06-04T10:36:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDgxNjMyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDgyMDY4Mw==", "url": "https://github.com/realm/realm-java/pull/6894#discussion_r434820683", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             *     // Login with existing\n          \n          \n            \n             *     // Login with existing user", "author": "cmelchior", "createdAt": "2020-06-03T20:01:05Z", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java", "diffHunk": "@@ -51,8 +51,93 @@\n import io.realm.mongodb.functions.Functions;\n \n /**\n- * FIXME\n+ * An <i>App</i> is the main client side entry point for interacting with a <i>MongoDB Realm App</i>.\n+ *\n+ * The <i>App</i> can be used to:\n+ * <ul>\n+ *   <li>Register uses and perform various user related operations through authentication providers\n+ *   ({@link io.realm.mongodb.auth.ApiKeyAuth}, {@link EmailPasswordAuthImpl})</li>\n+ *   <li>Synchronize data between the local device and a remote Realm App with Synchronized Realms</li>\n+ *   <li>Invoke Realm App functions with {@link Functions}</li>\n+ *   <li>Access remote data from MongoDB databases with a {@link io.realm.mongodb.mongo.MongoClient}</li>\n+ * </ul>\n+ * <p>\n+ * To create an app that is linked with a remote <i>Realm App</i> initialize Realm and configure the\n+ * <i>App</i> as below:\n+ * <p>\n+ * <pre>\n+ *    class MyApplication extends Application {\n+ *\n+ *         @Override\n+ *         public void onCreate() {\n+ *             super.onCreate();\n+ *\n+ *             Realm.init(this);\n+ *\n+ *             AppConfiguration appConfiguration = new AppConfiguration.Builder(BuildConfig.MONGODB_REALM_APP_ID)\n+ *                     .appName(BuildConfig.VERSION_NAME)\n+ *                     .appVersion(Integer.toString(BuildConfig.VERSION_CODE))\n+ *                     .build();\n+ *\n+ *             App APP = new App(appConfiguration);\n+ *         }\n+ *\n+ *     }\n+ * </pre>\n+ * <p>\n+ * After configuring the <i>App</i> you can start managing users, configure Synchronized Realms,\n+ * call remote Realm Functions and access remote data through Mongo Collections. The below examples\n+ * shows the synchronized APIs which cannot be used from the main thread. For the equivalent\n+ * asynchronous counter parts. The example project in please see\n+ * https://github.com/realm/realm-java/tree/v10/examples/mongoDbRealmExample.\n+ *\n+ * To register a new user and/or login with an existing user as below:\n+ * <pre>\n+ *     // Register new user\n+ *     User user = APP.getEmailPasswordAuth().registerUser(username, password);\n+ *\n+ *     // Login with existing", "originalCommit": "7deffd60bd381e0075056d7313e9adac95da28f4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDgyMTE3NA==", "url": "https://github.com/realm/realm-java/pull/6894#discussion_r434821174", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 *", "author": "cmelchior", "createdAt": "2020-06-03T20:02:07Z", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java", "diffHunk": "@@ -242,7 +331,10 @@ public User currentUser() {\n     }\n \n     /**\n-     * Switch current user. The current user is the user returned by {@link #currentUser()}.\n+     * Switch current user.\n+     * <p>\n+     *", "originalCommit": "7deffd60bd381e0075056d7313e9adac95da28f4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "28ee2277e7226502435033ee80c95fd82be9c958", "url": "https://github.com/realm/realm-java/commit/28ee2277e7226502435033ee80c95fd82be9c958", "message": "Apply suggestions from code review\n\nCo-authored-by: Eduardo L\u00f3pez <1874445+edualonso@users.noreply.github.com>\nCo-authored-by: Christian Melchior <christian@ilios.dk>", "committedDate": "2020-06-04T06:49:12Z", "type": "commit"}, {"oid": "5df91e976aa42086cbf24b7ef21db623352790b2", "url": "https://github.com/realm/realm-java/commit/5df91e976aa42086cbf24b7ef21db623352790b2", "message": "Fix APP scoping", "committedDate": "2020-06-04T06:53:19Z", "type": "commit"}, {"oid": "03f82a0aee1f777aaa206a04fa2939e646570712", "url": "https://github.com/realm/realm-java/commit/03f82a0aee1f777aaa206a04fa2939e646570712", "message": "Merge branch 'v10' into cr/app-documentation", "committedDate": "2020-06-04T07:45:23Z", "type": "commit"}]}