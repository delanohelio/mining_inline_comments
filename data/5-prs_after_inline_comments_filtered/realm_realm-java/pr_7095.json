{"pr_number": 7095, "pr_title": "Add support for multiple apps", "pr_createdAt": "2020-09-10T16:02:22Z", "pr_url": "https://github.com/realm/realm-java/pull/7095", "timeline": [{"oid": "48e425f3c756c9ff619e800766b1b6d0182d08d9", "url": "https://github.com/realm/realm-java/commit/48e425f3c756c9ff619e800766b1b6d0182d08d9", "message": "Add support for multiple apps", "committedDate": "2020-09-10T15:57:15Z", "type": "commit"}, {"oid": "bf69209bba499c9a7db064d9a99d3575966535af", "url": "https://github.com/realm/realm-java/commit/bf69209bba499c9a7db064d9a99d3575966535af", "message": "Upgrade to latest OS commit. Add new sample app to test multiple apps.", "committedDate": "2020-09-14T11:36:53Z", "type": "commit"}, {"oid": "7cc65390efc50bad2bc931c47c64be0f41e6f8b6", "url": "https://github.com/realm/realm-java/commit/7cc65390efc50bad2bc931c47c64be0f41e6f8b6", "message": "Add App caching when creating multiple instances. Add tests.", "committedDate": "2020-09-15T07:22:11Z", "type": "commit"}, {"oid": "4f48bb0917a66a1c5f7fc2ff6923807b027ff065", "url": "https://github.com/realm/realm-java/commit/4f48bb0917a66a1c5f7fc2ff6923807b027ff065", "message": "Fix test", "committedDate": "2020-09-15T07:25:34Z", "type": "commit"}, {"oid": "b00b443f6a99b5d73fd4ebe0d846f09d785d80a3", "url": "https://github.com/realm/realm-java/commit/b00b443f6a99b5d73fd4ebe0d846f09d785d80a3", "message": "Fix test", "committedDate": "2020-09-15T08:31:32Z", "type": "commit"}, {"oid": "9431977e09b891d396732a5aab5dd2b6e5c4faa1", "url": "https://github.com/realm/realm-java/commit/9431977e09b891d396732a5aab5dd2b6e5c4faa1", "message": "Fix SpotBugs errors. Correctly clear app cache when resetting a test.", "committedDate": "2020-09-15T09:30:15Z", "type": "commit"}, {"oid": "480e6e54df81e30c956303704ef173b784ce8a2a", "url": "https://github.com/realm/realm-java/commit/480e6e54df81e30c956303704ef173b784ce8a2a", "message": "More SpotBugs fixes", "committedDate": "2020-09-15T09:45:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU3NjE4OA==", "url": "https://github.com/realm/realm-java/pull/7095#discussion_r488576188", "bodyText": "Maybe we should document what is meant by equals.", "author": "rorbech", "createdAt": "2020-09-15T11:00:21Z", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java", "diffHunk": "@@ -524,6 +504,24 @@ protected void setNetworkTransport(OsJavaNetworkTransport transport) {\n         osApp.setNetworkTransport(transport);\n     }\n \n+    @Override", "originalCommit": "480e6e54df81e30c956303704ef173b784ce8a2a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU4MjcwMg==", "url": "https://github.com/realm/realm-java/pull/7095#discussion_r488582702", "bodyText": "Again; it would maybe be nice to document the criteria for equals, but at least it is derivable from the code here.", "author": "rorbech", "createdAt": "2020-09-15T11:12:47Z", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java", "diffHunk": "@@ -502,8 +502,8 @@ public boolean equals(@Nullable Object o) {\n \n         User user = (User) o;\n \n-        if (!osUser.equals(user.osUser)) return false;\n-        return app.equals(user.app);\n+        if (!osUser.getIdentity().equals(user.osUser.getIdentity())) return false;", "originalCommit": "480e6e54df81e30c956303704ef173b784ce8a2a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU4NTI0MQ==", "url": "https://github.com/realm/realm-java/pull/7095#discussion_r488585241", "bodyText": "Not important, but would maybe make sense to keep the ordering in sync with the constructor arguments.", "author": "rorbech", "createdAt": "2020-09-15T11:17:29Z", "path": "realm/realm-library/src/main/java/io/realm/internal/OsRealmConfig.java", "diffHunk": "@@ -222,6 +222,7 @@ private OsRealmConfig(final RealmConfiguration config,\n         Byte clientResyncMode = (Byte) syncConfigurationOptions[j++];\n         String encodedPartitionValue = (String) syncConfigurationOptions[j++];\n         Object syncService = syncConfigurationOptions[j++];\n+        Long appPtr = (Long) syncConfigurationOptions[j++];", "originalCommit": "480e6e54df81e30c956303704ef173b784ce8a2a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODYwNjQwMw==", "url": "https://github.com/realm/realm-java/pull/7095#discussion_r488606403", "bodyText": "missing the rest of the comment?", "author": "nhachicha", "createdAt": "2020-09-15T11:55:02Z", "path": "realm/realm-library/src/objectServer/java/io/realm/internal/SyncObjectServerFacade.java", "diffHunk": "@@ -88,6 +90,18 @@ public void realmClosed(RealmConfiguration configuration) {\n             String urlPrefix = syncConfig.getUrlPrefix();\n             String customAuthorizationHeaderName = app.getConfiguration().getAuthorizationHeaderName();\n             Map<String, String> customHeaders = app.getConfiguration().getCustomRequestHeaders();\n+            long appNativePointer;\n+\n+            // We cannot get the app native pointer without exposing it in the public API due to\n+            // how our packages are structured. Instead of polluting the API we", "originalCommit": "480e6e54df81e30c956303704ef173b784ce8a2a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODYwNzQ5NQ==", "url": "https://github.com/realm/realm-java/pull/7095#discussion_r488607495", "bodyText": "can we cache this lookup of OsApp so it's not redundant for each SyncConf?", "author": "nhachicha", "createdAt": "2020-09-15T11:56:52Z", "path": "realm/realm-library/src/objectServer/java/io/realm/internal/SyncObjectServerFacade.java", "diffHunk": "@@ -88,6 +90,18 @@ public void realmClosed(RealmConfiguration configuration) {\n             String urlPrefix = syncConfig.getUrlPrefix();\n             String customAuthorizationHeaderName = app.getConfiguration().getAuthorizationHeaderName();\n             Map<String, String> customHeaders = app.getConfiguration().getCustomRequestHeaders();\n+            long appNativePointer;\n+\n+            // We cannot get the app native pointer without exposing it in the public API due to\n+            // how our packages are structured. Instead of polluting the API we\n+            try {\n+                Field osAppField = App.class.getDeclaredField(\"osApp\");", "originalCommit": "480e6e54df81e30c956303704ef173b784ce8a2a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODYwODA5MQ==", "url": "https://github.com/realm/realm-java/pull/7095#discussion_r488608091", "bodyText": "Is this by design? can an app name be nullable?", "author": "nhachicha", "createdAt": "2020-09-15T11:57:49Z", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/AppConfiguration.java", "diffHunk": "@@ -187,6 +187,7 @@ public String getAppId() {\n      *\n      * @return the app name.\n      */\n+    @Nullable", "originalCommit": "480e6e54df81e30c956303704ef173b784ce8a2a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE4MDI2Ng==", "url": "https://github.com/realm/realm-java/pull/7095#discussion_r489180266", "bodyText": "Yes, it is an optional parameter on the config that is only used or debug information.", "author": "cmelchior", "createdAt": "2020-09-16T05:55:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODYwODA5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODYwOTkwOQ==", "url": "https://github.com/realm/realm-java/pull/7095#discussion_r488609909", "bodyText": "Does the app_id hash include the user identity also? if yes we can simplify the condition to check only on it. If not we need to maintain this and we risk having a collision in https://github.com/realm/realm-java/pull/7095/files#diff-79b05914e49eabc2a48d017ab1b7b38dR119  since two users could have the same app_id?", "author": "nhachicha", "createdAt": "2020-09-15T12:01:04Z", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java", "diffHunk": "@@ -502,8 +502,8 @@ public boolean equals(@Nullable Object o) {\n \n         User user = (User) o;\n \n-        if (!osUser.equals(user.osUser)) return false;\n-        return app.equals(user.app);\n+        if (!osUser.getIdentity().equals(user.osUser.getIdentity())) return false;\n+        return app.getConfiguration().getAppId().equals(user.app.getConfiguration().getAppId());", "originalCommit": "480e6e54df81e30c956303704ef173b784ce8a2a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI0MjUzMQ==", "url": "https://github.com/realm/realm-java/pull/7095#discussion_r489242531", "bodyText": "We check the user identity in line 505, so in combination with 506 we should check for the pair <appId, userId> which should uniquely identify the user?", "author": "cmelchior", "createdAt": "2020-09-16T08:03:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODYwOTkwOQ=="}], "type": "inlineReview"}, {"oid": "b5834c6cabb667d4c4501e1ec70ee55cfdffc778", "url": "https://github.com/realm/realm-java/commit/b5834c6cabb667d4c4501e1ec70ee55cfdffc778", "message": "Merge branch 'v10' into cm/multiple-app-support\n\n# Conflicts:\n#\trealm/realm-library/src/androidTestObjectServer/kotlin/io/realm/AppTests.kt\n#\trealm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncSession.java\n#\trealm/realm-library/src/syncTestUtils/kotlin/io/realm/TestApp.kt", "committedDate": "2020-09-15T13:07:34Z", "type": "commit"}, {"oid": "a078d379a5161e3b2ac0c8237acd1280480630b0", "url": "https://github.com/realm/realm-java/commit/a078d379a5161e3b2ac0c8237acd1280480630b0", "message": "Fix tests", "committedDate": "2020-09-15T14:42:35Z", "type": "commit"}, {"oid": "7e470facfec65e245c523bf61b4665b15dd15682", "url": "https://github.com/realm/realm-java/commit/7e470facfec65e245c523bf61b4665b15dd15682", "message": "Fix API changes after merge", "committedDate": "2020-09-16T05:39:38Z", "type": "commit"}, {"oid": "b793775183294d0b4f7653cb7d8518bdbc74b03d", "url": "https://github.com/realm/realm-java/commit/b793775183294d0b4f7653cb7d8518bdbc74b03d", "message": "PR feedback", "committedDate": "2020-09-16T06:02:12Z", "type": "commit"}, {"oid": "aab6fef5bdfc8a864d0d183a8dc9d1348e95b8a3", "url": "https://github.com/realm/realm-java/commit/aab6fef5bdfc8a864d0d183a8dc9d1348e95b8a3", "message": "Fix CheckStyle warning", "committedDate": "2020-09-16T07:27:00Z", "type": "commit"}]}