{"pr_number": 7097, "pr_title": "Handle Client Reset in a separate callback", "pr_createdAt": "2020-09-14T20:03:48Z", "pr_url": "https://github.com/realm/realm-java/pull/7097", "timeline": [{"oid": "b1da7a3c53c1d25a9f464219d08c0bb8ca31a6f9", "url": "https://github.com/realm/realm-java/commit/b1da7a3c53c1d25a9f464219d08c0bb8ca31a6f9", "message": "Handle Client Reset in a seperate interface", "committedDate": "2020-09-14T20:01:33Z", "type": "commit"}, {"oid": "54ff9b91ad0944c9e92d8e2b5d8971359375a9e1", "url": "https://github.com/realm/realm-java/commit/54ff9b91ad0944c9e92d8e2b5d8971359375a9e1", "message": "Add changelog entry", "committedDate": "2020-09-14T20:05:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU3MjMwNg==", "url": "https://github.com/realm/realm-java/pull/7097#discussion_r488572306", "bodyText": "Is this the default behaviour we want to introduce rather than throwing? what happens now if the user silently ignores this error? sync will stop or we'll keep getting a divergent history error from the server?", "author": "nhachicha", "createdAt": "2020-09-15T10:53:15Z", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/AppConfiguration.java", "diffHunk": "@@ -338,6 +347,12 @@ public void onError(SyncSession session, AppException error) {\n                 }\n             }\n         };\n+        private SyncSession.ClientResetHandler defaultClientResetHandler = new SyncSession.ClientResetHandler() {\n+            @Override\n+            public void onClientReset(SyncSession session, ClientResetRequiredError error) {\n+                RealmLog.error(\"Client Reset required for: \" + session.getConfiguration().getServerUrl());", "originalCommit": "54ff9b91ad0944c9e92d8e2b5d8971359375a9e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU4MTE3OQ==", "url": "https://github.com/realm/realm-java/pull/7097#discussion_r488581179", "bodyText": "It is the same behavior we have currently for the default behavior, but yes I was also considering if we should throw an exception instead.\nThrowing feels a bit heavy though because you can theoretically still use the app after this happens, Sync just stops working. If we throw, it might mean forcibly breaking a lot of apps if the developer somehow failed to implement support. Without throwing there is a least a bigger chance that the app is still somewhat useful.", "author": "cmelchior", "createdAt": "2020-09-15T11:09:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU3MjMwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU3MzA4MQ==", "url": "https://github.com/realm/realm-java/pull/7097#discussion_r488573081", "bodyText": "can't we use Util.checkNull(handler, \"handler\"); simply?", "author": "nhachicha", "createdAt": "2020-09-15T10:54:44Z", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncConfiguration.java", "diffHunk": "@@ -807,6 +820,21 @@ public Builder errorHandler(SyncSession.ErrorHandler errorHandler) {\n             return this;\n         }\n \n+        /**\n+         * Sets the handler for when a Client Reset occurs. If no handler is set, and error is\n+         * logged when a Client Reset occurs.\n+         *\n+         * @param handler custom handler in case of a Client Reset.\n+         */\n+        public Builder clientResetHandler(SyncSession.ClientResetHandler handler) {\n+            //noinspection ConstantConditions\n+            if (handler == null) {", "originalCommit": "54ff9b91ad0944c9e92d8e2b5d8971359375a9e1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU3NDI1MA==", "url": "https://github.com/realm/realm-java/pull/7097#discussion_r488574250", "bodyText": "Is the code snippet pointed to from the doc is up-to-date?", "author": "nhachicha", "createdAt": "2020-09-15T10:56:41Z", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncSession.java", "diffHunk": "@@ -196,8 +198,8 @@ void notifySessionError(String nativeErrorCategory, int nativeErrorCode, String\n         if (errCode == ErrorCode.CLIENT_RESET) {\n             // errorMessage contains the path to the backed up file\n             RealmConfiguration backupRealmConfiguration = configuration.forErrorRecovery(errorMessage);\n-            errorHandler.onError(this, new ClientResetRequiredError(errCode, \"A Client Reset is required. \" +\n-                    \"Read more here: https://realm.io/docs/realm-object-server/#client-recovery-from-a-backup.\",\n+            clientResetHandler.onClientReset(this, new ClientResetRequiredError(errCode, \"A Client Reset is required. \" +\n+                    \"Read more here: https://docs.realm.io/sync/using-synced-realms/errors#client-reset.\",", "originalCommit": "54ff9b91ad0944c9e92d8e2b5d8971359375a9e1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU3NTIxNg==", "url": "https://github.com/realm/realm-java/pull/7097#discussion_r488575216", "bodyText": "Is there a test checking we could actually open the backup correctly and inspect data?", "author": "nhachicha", "createdAt": "2020-09-15T10:58:32Z", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncSession.java", "diffHunk": "@@ -647,48 +649,60 @@ private void checkTimeout(long timeout, TimeUnit unit) {\n          * When an exception is thrown in the error handler, the occurrence will be logged and the exception\n          * will be ignored.\n          *\n-         * <p>\n-         * When the {@code error.getErrorCode()} returns {@link ErrorCode#CLIENT_RESET}, it indicates the Realm\n-         * needs to be reset and the {@code error} can be cast to {@link ClientResetRequiredError}.\n-         * <p>\n-         * A synced Realm may need to be reset because the Realm Object Server encountered an error and had\n-         * to be restored from a backup. If the backup copy of the remote Realm is of an earlier version\n-         * than the local copy of the Realm, the server will ask the client to reset the Realm.\n-         * <p>\n-         * The reset process is as follows: the local copy of the Realm is copied into a recovery directory\n-         * for safekeeping, and then deleted from the original location. The next time the Realm for that\n-         * URL is opened, the Realm will automatically be re-downloaded from the Realm Object Server, and\n-         * can be used as normal.\n-         * <p>\n-         * Data written to the Realm after the local copy of the Realm diverged from the backup remote copy\n-         * will be present in the local recovery copy of the Realm file. The re-downloaded Realm will\n-         * initially contain only the data present at the time the Realm was backed up on the server.\n-         * <p>\n-         * The client reset process can be initiated in one of two ways:\n-         * <ol>\n-         *     <li>\n-         *         Run {@link ClientResetRequiredError#executeClientReset()} manually. All Realm instances must be\n-         *         closed before this method is called.\n-         *     </li>\n-         *     <li>\n-         *         If Client Reset isn't executed manually, it will automatically be carried out the next time all\n-         *         Realm instances have been closed and re-opened. This will most likely be\n-         *         when the app is restarted.\n-         *     </li>\n-         * </ol>\n-         *\n-         * <b>WARNING:</b>\n-         * Any writes to the Realm file between this callback and Client Reset has been executed, will not be\n-         * synchronized to the Object Server. Those changes will only be present in the backed up file. It is therefore\n-         * recommended to close all open Realm instances as soon as possible.\n-         *\n-         *\n          * @param session {@link SyncSession} this error happened on.\n          * @param error type of error.\n          */\n         void onError(SyncSession session, AppException error);\n     }\n \n+    /**\n+     * Callback for the specific error event known as a Client Reset, determined by the error code\n+     * {@link ErrorCode#CLIENT_RESET}.\n+     * <p>\n+     * A synced Realm may need to be reset because the MongoDB Realm Server encountered an error and had\n+     * to be restored from a backup or because it has been too long since the client connected to the\n+     * server so the server has rotated the logs.\n+     * <p>\n+     * The Client Reset thus occurs because the server does not have the full information required to\n+     * bring the Client fully up to date.\n+     * <p>\n+     * The reset process is as follows: the local copy of the Realm is copied into a recovery directory", "originalCommit": "54ff9b91ad0944c9e92d8e2b5d8971359375a9e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM4ODA5Mg==", "url": "https://github.com/realm/realm-java/pull/7097#discussion_r489388092", "bodyText": "Yes: https://github.com/realm/realm-java/blob/v10/realm/realm-library/src/androidTestObjectServer/kotlin/io/realm/mongodb/sync/SessionTests.kt#L190", "author": "cmelchior", "createdAt": "2020-09-16T12:12:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU3NTIxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU3NjIwNQ==", "url": "https://github.com/realm/realm-java/pull/7097#discussion_r488576205", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                     * Callback that indicates a Client Reset has happend. This should be handled as quickly\n          \n          \n            \n                     * Callback that indicates a Client Reset has happened. This should be handled as quickly as possible.", "author": "nhachicha", "createdAt": "2020-09-15T11:00:24Z", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncSession.java", "diffHunk": "@@ -647,48 +649,60 @@ private void checkTimeout(long timeout, TimeUnit unit) {\n          * When an exception is thrown in the error handler, the occurrence will be logged and the exception\n          * will be ignored.\n          *\n-         * <p>\n-         * When the {@code error.getErrorCode()} returns {@link ErrorCode#CLIENT_RESET}, it indicates the Realm\n-         * needs to be reset and the {@code error} can be cast to {@link ClientResetRequiredError}.\n-         * <p>\n-         * A synced Realm may need to be reset because the Realm Object Server encountered an error and had\n-         * to be restored from a backup. If the backup copy of the remote Realm is of an earlier version\n-         * than the local copy of the Realm, the server will ask the client to reset the Realm.\n-         * <p>\n-         * The reset process is as follows: the local copy of the Realm is copied into a recovery directory\n-         * for safekeeping, and then deleted from the original location. The next time the Realm for that\n-         * URL is opened, the Realm will automatically be re-downloaded from the Realm Object Server, and\n-         * can be used as normal.\n-         * <p>\n-         * Data written to the Realm after the local copy of the Realm diverged from the backup remote copy\n-         * will be present in the local recovery copy of the Realm file. The re-downloaded Realm will\n-         * initially contain only the data present at the time the Realm was backed up on the server.\n-         * <p>\n-         * The client reset process can be initiated in one of two ways:\n-         * <ol>\n-         *     <li>\n-         *         Run {@link ClientResetRequiredError#executeClientReset()} manually. All Realm instances must be\n-         *         closed before this method is called.\n-         *     </li>\n-         *     <li>\n-         *         If Client Reset isn't executed manually, it will automatically be carried out the next time all\n-         *         Realm instances have been closed and re-opened. This will most likely be\n-         *         when the app is restarted.\n-         *     </li>\n-         * </ol>\n-         *\n-         * <b>WARNING:</b>\n-         * Any writes to the Realm file between this callback and Client Reset has been executed, will not be\n-         * synchronized to the Object Server. Those changes will only be present in the backed up file. It is therefore\n-         * recommended to close all open Realm instances as soon as possible.\n-         *\n-         *\n          * @param session {@link SyncSession} this error happened on.\n          * @param error type of error.\n          */\n         void onError(SyncSession session, AppException error);\n     }\n \n+    /**\n+     * Callback for the specific error event known as a Client Reset, determined by the error code\n+     * {@link ErrorCode#CLIENT_RESET}.\n+     * <p>\n+     * A synced Realm may need to be reset because the MongoDB Realm Server encountered an error and had\n+     * to be restored from a backup or because it has been too long since the client connected to the\n+     * server so the server has rotated the logs.\n+     * <p>\n+     * The Client Reset thus occurs because the server does not have the full information required to\n+     * bring the Client fully up to date.\n+     * <p>\n+     * The reset process is as follows: the local copy of the Realm is copied into a recovery directory\n+     * for safekeeping, and then deleted from the original location. The next time the Realm for that\n+     * URL is opened, the Realm will automatically be re-downloaded from MongoDB Realm, and\n+     * can be used as normal.\n+     * <p>\n+     * Data written to the Realm after the local copy of the Realm diverged from the backup remote copy\n+     * will be present in the local recovery copy of the Realm file. The re-downloaded Realm will\n+     * initially contain only the data present at the time the Realm was backed up on the server.\n+     * <p>\n+     * The client reset process can be initiated in one of two ways:\n+     * <ol>\n+     *     <li>\n+     *         Run {@link ClientResetRequiredError#executeClientReset()} manually. All Realm instances must be\n+     *         closed before this method is called.\n+     *     </li>\n+     *     <li>\n+     *         If Client Reset isn't executed manually, it will automatically be carried out the next time all\n+     *         Realm instances have been closed and re-opened. This will most likely be\n+     *         when the app is restarted.\n+     *     </li>\n+     * </ol>\n+     *\n+     * <b>WARNING:</b>\n+     * Any writes to the Realm file between this callback and Client Reset has been executed, will not be\n+     * synchronized to MongoDB Realm. Those changes will only be present in the backed up file. It is therefore\n+     * recommended to close all open Realm instances as soon as possible.\n+     */\n+    public interface ClientResetHandler {\n+        /**\n+         * Callback that indicates a Client Reset has happend. This should be handled as quickly", "originalCommit": "54ff9b91ad0944c9e92d8e2b5d8971359375a9e1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d065593d0829f77254211f25056f434e95847cd8", "url": "https://github.com/realm/realm-java/commit/d065593d0829f77254211f25056f434e95847cd8", "message": "Merge branch 'v10' into cm/better-client-reset-callback\n\n# Conflicts:\n#\trealm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncSession.java", "committedDate": "2020-09-16T12:08:41Z", "type": "commit"}, {"oid": "46d31f7c8e81df668ba433c19a7b779fc6ebc025", "url": "https://github.com/realm/realm-java/commit/46d31f7c8e81df668ba433c19a7b779fc6ebc025", "message": "PR feedback", "committedDate": "2020-09-16T12:16:42Z", "type": "commit"}, {"oid": "3777ad4933ce0e8c4ef830b948a29a09bc5f0afa", "url": "https://github.com/realm/realm-java/commit/3777ad4933ce0e8c4ef830b948a29a09bc5f0afa", "message": "Use correct version of ObjectStore", "committedDate": "2020-09-16T12:22:47Z", "type": "commit"}, {"oid": "be55a8f4c3b1b6f0ac52fbe6681a6a6c0baac000", "url": "https://github.com/realm/realm-java/commit/be55a8f4c3b1b6f0ac52fbe6681a6a6c0baac000", "message": "Fix default client reset handler", "committedDate": "2020-09-16T14:34:02Z", "type": "commit"}, {"oid": "258150a6354862ef69cb34d7b04dda09ae9e5c65", "url": "https://github.com/realm/realm-java/commit/258150a6354862ef69cb34d7b04dda09ae9e5c65", "message": "Fix newly transformed kotlin test", "committedDate": "2020-09-16T15:14:23Z", "type": "commit"}]}