{"pr_number": 562, "pr_title": "Generate additional properties and fix some corner cases", "pr_createdAt": "2020-03-27T07:14:44Z", "pr_url": "https://github.com/Azure/autorest.java/pull/562", "timeline": [{"oid": "674bdba1f05a3f58e80d1f30fd29e071b1f2abc5", "url": "https://github.com/Azure/autorest.java/commit/674bdba1f05a3f58e80d1f30fd29e071b1f2abc5", "message": "Generate additional properties and fix some corner cases", "committedDate": "2020-03-27T07:14:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA3NjQ4NA==", "url": "https://github.com/Azure/autorest.java/pull/562#discussion_r399076484", "bodyText": "Maybe we should not change the serializedName?\nI am not sure how this one actually get implemented. Only assume that the serializedName should remain as it is.", "author": "weidongxu-microsoft", "createdAt": "2020-03-27T07:24:46Z", "path": "javagen/src/main/java/com/azure/autorest/mapper/ModelMapper.java", "diffHunk": "@@ -131,6 +131,16 @@ public ClientModel map(ObjectSchema compositeType) {\n                 }\n             }\n             builder.imports(new ArrayList<>(modelImports));\n+            if (hasAdditionalProperties) {\n+                for (Property property : compositeTypeProperties) {\n+                    if (property.getLanguage().getJava().getName().equals(\"additionalProperties\")) {\n+                        property.getLanguage().getJava().setName(\"AdditionalPropertiesProperty\");\n+                    }\n+                    if (property.getSerializedName().equals(\"additionalProperties\")) {\n+                        property.setSerializedName(\"additionalProperties-original\");", "originalCommit": "674bdba1f05a3f58e80d1f30fd29e071b1f2abc5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA5MTk4Ng==", "url": "https://github.com/Azure/autorest.java/pull/562#discussion_r399091986", "bodyText": "It has to be anything but remain as is. Because at serialization time the other additionalProperties will be temporarily serialized into \u201cadditionalProperties\u201d, which conflicts with this normal property. See Azure/azure-sdk-for-java#9624", "author": "jianghaolu", "createdAt": "2020-03-27T08:05:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA3NjQ4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA5MjIyNA==", "url": "https://github.com/Azure/autorest.java/pull/562#discussion_r399092224", "bodyText": "I\u2019m not super happy with this either but cannot think of a better way. I\u2019m open to suggestions", "author": "jianghaolu", "createdAt": "2020-03-27T08:05:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA3NjQ4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEwMzY2NQ==", "url": "https://github.com/Azure/autorest.java/pull/562#discussion_r399103665", "bodyText": "I see. @JsonProperty(value = \"\") would let valueToTree generate the node with key = field name.\nYeah, not able to think a better approach with this in place.", "author": "weidongxu-microsoft", "createdAt": "2020-03-27T08:30:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA3NjQ4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTExNjg1OQ==", "url": "https://github.com/Azure/autorest.java/pull/562#discussion_r399116859", "bodyText": "BTW, this one seems to work in basic case with only ObjectMapper. I didn't test any corner case (e.g. same key name with existing JsonProperty, flatten etc.).\n    class TestClass {\n        private Map<String, String> additionalProperties;\n\n        @JsonAnySetter\n        void setAdditionalProperties(String key, String value) {\n            if (additionalProperties == null) {\n                additionalProperties = new HashMap<>();\n            }\n            additionalProperties.put(key, value);\n        }\n\n        @JsonAnyGetter\n        public Map<String, String> getAdditionalProperties(){\n            return additionalProperties;\n        }\n    }", "author": "weidongxu-microsoft", "createdAt": "2020-03-27T08:56:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA3NjQ4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTUzNjMzNw==", "url": "https://github.com/Azure/autorest.java/pull/562#discussion_r399536337", "bodyText": "This is gold. These 2 annotations should have been used in place for the custom serializers. But for backward compatibility I'll keep them there but update the new generated code to use this.", "author": "jianghaolu", "createdAt": "2020-03-27T21:02:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA3NjQ4NA=="}], "type": "inlineReview"}, {"oid": "8453dedf8b8bc192ff252df7c982e540732e308a", "url": "https://github.com/Azure/autorest.java/commit/8453dedf8b8bc192ff252df7c982e540732e308a", "message": "Use @JsonAnyGetter and @JsonAnySetter", "committedDate": "2020-03-28T07:01:06Z", "type": "commit"}]}