{"pr_number": 3199, "pr_title": "[RW-4446][risk=no] Clean up the enableNewAccountCreation flag", "pr_createdAt": "2020-02-28T14:37:34Z", "pr_url": "https://github.com/all-of-us/workbench/pull/3199", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc1OTg4Mg==", "url": "https://github.com/all-of-us/workbench/pull/3199#discussion_r385759882", "bodyText": "This is one minor functional change I made along the way... I felt we should probably have more of the profile object validation centralized in this method, which is called during both the createProfile and updateProfile flows.", "author": "gjuggler", "createdAt": "2020-02-28T15:30:25Z", "path": "api/src/main/java/org/pmiops/workbench/api/ProfileController.java", "diffHunk": "@@ -247,15 +247,25 @@ private void validateStringLength(String field, String fieldName, int max, int m\n     }\n   }\n \n-  private void validateProfileFields(Profile profile) {\n+  private void validateAndCleanProfile(Profile profile) throws BadRequestException {", "originalCommit": "dd50ebebc59b5bcc9f5bd78a56fae6d4cda9da05", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg2MDk2Mg==", "url": "https://github.com/all-of-us/workbench/pull/3199#discussion_r385860962", "bodyText": "This seems reasonable.", "author": "jmthibault79", "createdAt": "2020-02-28T18:45:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc1OTg4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgxNDg5NQ==", "url": "https://github.com/all-of-us/workbench/pull/3199#discussion_r385814895", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (profile.getDemographicSurvey() == null) {\n          \n          \n            \n                  profile.setDemographicSurvey(new DemographicSurvey());\n          \n          \n            \n                }\n          \n          \n            \n                profile.setDemographicSurvey(Optional.ofNullable(profile.getDemographicSurvey()).orElse(new DemographicSurvey()));", "author": "freemabd", "createdAt": "2020-02-28T17:09:00Z", "path": "api/src/main/java/org/pmiops/workbench/api/ProfileController.java", "diffHunk": "@@ -247,15 +247,25 @@ private void validateStringLength(String field, String fieldName, int max, int m\n     }\n   }\n \n-  private void validateProfileFields(Profile profile) {\n+  private void validateAndCleanProfile(Profile profile) throws BadRequestException {\n+    if (profile.getDemographicSurvey() == null) {\n+      profile.setDemographicSurvey(new DemographicSurvey());\n+    }", "originalCommit": "dd50ebebc59b5bcc9f5bd78a56fae6d4cda9da05", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgxNTI3NA==", "url": "https://github.com/all-of-us/workbench/pull/3199#discussion_r385815274", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (profile.getInstitutionalAffiliations() == null) {\n          \n          \n            \n                  profile.setInstitutionalAffiliations(new ArrayList<>());\n          \n          \n            \n                }\n          \n          \n            \n                profile.setInstitutionalAffiliations(Optional.ofNullable(profile.getInstitutionalAffiliations()).orElse(new ArrayList()));", "author": "freemabd", "createdAt": "2020-02-28T17:09:53Z", "path": "api/src/main/java/org/pmiops/workbench/api/ProfileController.java", "diffHunk": "@@ -247,15 +247,25 @@ private void validateStringLength(String field, String fieldName, int max, int m\n     }\n   }\n \n-  private void validateProfileFields(Profile profile) {\n+  private void validateAndCleanProfile(Profile profile) throws BadRequestException {\n+    if (profile.getDemographicSurvey() == null) {\n+      profile.setDemographicSurvey(new DemographicSurvey());\n+    }\n+    if (profile.getInstitutionalAffiliations() == null) {\n+      profile.setInstitutionalAffiliations(new ArrayList<>());\n+    }", "originalCommit": "dd50ebebc59b5bcc9f5bd78a56fae6d4cda9da05", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgyMjc0Ng==", "url": "https://github.com/all-of-us/workbench/pull/3199#discussion_r385822746", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (profile.getAddress() == null) {\n          \n          \n            \n                  throw new BadRequestException(\"Address must not be empty\");\n          \n          \n            \n                }\n          \n          \n            \n                Optional.ofNullable(profile.getAddress()).orElseThrow(() -> new BadRequestException(\"Address must not be empty\"));", "author": "freemabd", "createdAt": "2020-02-28T17:20:53Z", "path": "api/src/main/java/org/pmiops/workbench/api/ProfileController.java", "diffHunk": "@@ -323,28 +333,22 @@ private DbUser initializeUserIfNeeded() {\n       verifyInvitationKey(request.getInvitationKey());\n     }\n \n-    String userName = request.getProfile().getUsername();\n-    if (userName == null || userName.length() < 3 || userName.length() > 64)\n-      throw new BadRequestException(\n-          \"Username should be at least 3 characters and not more than 64 characters\");\n-    request.getProfile().setUsername(request.getProfile().getUsername().toLowerCase());\n-    validateProfileFields(request.getProfile());\n-    // This check will be removed once enableNewAccountCreation flag is turned on.\n-    if (request.getProfile().getAddress() == null) {\n-      request.getProfile().setAddress(new Address());\n-    }\n-    if (request.getProfile().getDemographicSurvey() == null) {\n-      request.getProfile().setDemographicSurvey(new DemographicSurvey());\n-    }\n-    if (request.getProfile().getInstitutionalAffiliations() == null) {\n-      request.getProfile().setInstitutionalAffiliations(new ArrayList<>());\n+    final Profile profile = request.getProfile();\n+\n+    // We don't include this check in validateAndCleanProfile since some existing user profiles\n+    // may have empty addresses. So we only check this on user creation, not update.\n+    if (profile.getAddress() == null) {\n+      throw new BadRequestException(\"Address must not be empty\");\n     }", "originalCommit": "dd50ebebc59b5bcc9f5bd78a56fae6d4cda9da05", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg2MTc4NA==", "url": "https://github.com/all-of-us/workbench/pull/3199#discussion_r385861784", "bodyText": "Let's make this check first.", "author": "jmthibault79", "createdAt": "2020-02-28T18:47:48Z", "path": "api/src/main/java/org/pmiops/workbench/api/ProfileController.java", "diffHunk": "@@ -247,15 +248,23 @@ private void validateStringLength(String field, String fieldName, int max, int m\n     }\n   }\n \n-  private void validateProfileFields(Profile profile) {\n+  private void validateAndCleanProfile(Profile profile) throws BadRequestException {\n+    profile.setDemographicSurvey(\n+        Optional.ofNullable(profile.getDemographicSurvey()).orElse(new DemographicSurvey()));\n+    profile.setInstitutionalAffiliations(\n+        Optional.ofNullable(profile.getInstitutionalAffiliations()).orElse(new ArrayList()));\n+\n+    String userName = profile.getUsername();\n+    if (userName == null || userName.length() < 3 || userName.length() > 64) {", "originalCommit": "df786872dbd172e9f1d7558bfd31e3d719103ecb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkwMjA2MA==", "url": "https://github.com/all-of-us/workbench/pull/3199#discussion_r385902060", "bodyText": "I'm not 100% sure what you meant, but I reshuffled things so the \"validation\" steps and the \"cleanup\" steps are more clearly delineated.", "author": "gjuggler", "createdAt": "2020-02-28T20:14:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg2MTc4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkwNjA4Ng==", "url": "https://github.com/all-of-us/workbench/pull/3199#discussion_r385906086", "bodyText": "thanks - was just a nit, no worries", "author": "jmthibault79", "createdAt": "2020-02-28T20:25:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg2MTc4NA=="}], "type": "inlineReview"}, {"oid": "3e2802739a92735d4ab0736201373be804923db6", "url": "https://github.com/all-of-us/workbench/commit/3e2802739a92735d4ab0736201373be804923db6", "message": "Clean up the enableNewAccountCreation flag", "committedDate": "2020-02-28T20:52:28Z", "type": "commit"}, {"oid": "1cfd7b8a457ce3273c2098d224a9ef1a2479e606", "url": "https://github.com/all-of-us/workbench/commit/1cfd7b8a457ce3273c2098d224a9ef1a2479e606", "message": "Update api/src/main/java/org/pmiops/workbench/api/ProfileController.java\n\nCo-Authored-By: Brian Freeman <brian.d.freeman@gmail.com>", "committedDate": "2020-02-28T20:52:28Z", "type": "commit"}, {"oid": "cd8c43393cc0ba1b584255c20fd662c22e7b394d", "url": "https://github.com/all-of-us/workbench/commit/cd8c43393cc0ba1b584255c20fd662c22e7b394d", "message": "Update api/src/main/java/org/pmiops/workbench/api/ProfileController.java\n\nCo-Authored-By: Brian Freeman <brian.d.freeman@gmail.com>", "committedDate": "2020-02-28T20:52:28Z", "type": "commit"}, {"oid": "bca36e018111136a01711de31285b7996f3538f6", "url": "https://github.com/all-of-us/workbench/commit/bca36e018111136a01711de31285b7996f3538f6", "message": "Update api/src/main/java/org/pmiops/workbench/api/ProfileController.java\n\nCo-Authored-By: Brian Freeman <brian.d.freeman@gmail.com>", "committedDate": "2020-02-28T20:52:28Z", "type": "commit"}, {"oid": "ca37eda4e141abde65b2b338ab6a58c03b5d31a9", "url": "https://github.com/all-of-us/workbench/commit/ca37eda4e141abde65b2b338ab6a58c03b5d31a9", "message": "Spotless formatting.", "committedDate": "2020-02-28T20:52:28Z", "type": "commit"}, {"oid": "34c9d13dbb226c7fdeb08dcd51d632be918fd615", "url": "https://github.com/all-of-us/workbench/commit/34c9d13dbb226c7fdeb08dcd51d632be918fd615", "message": "PR feedback", "committedDate": "2020-02-28T20:53:09Z", "type": "commit"}, {"oid": "34c9d13dbb226c7fdeb08dcd51d632be918fd615", "url": "https://github.com/all-of-us/workbench/commit/34c9d13dbb226c7fdeb08dcd51d632be918fd615", "message": "PR feedback", "committedDate": "2020-02-28T20:53:09Z", "type": "forcePushed"}, {"oid": "7515e94a6415ca9d837c840b4f795e8b65da19f7", "url": "https://github.com/all-of-us/workbench/commit/7515e94a6415ca9d837c840b4f795e8b65da19f7", "message": "Sign-in test fixes.", "committedDate": "2020-02-28T21:11:07Z", "type": "commit"}]}