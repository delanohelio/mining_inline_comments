{"pr_number": 3266, "pr_title": "[RW-4524][risk=no] Add in-form institution check to user creation page.", "pr_createdAt": "2020-03-18T12:49:13Z", "pr_url": "https://github.com/all-of-us/workbench/pull/3266", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM0NzgwOA==", "url": "https://github.com/all-of-us/workbench/pull/3266#discussion_r394347808", "bodyText": "Javadoc-ifying is good.  Let's fill in the return description too.", "author": "jmthibault79", "createdAt": "2020-03-18T13:32:54Z", "path": "api/src/main/java/org/pmiops/workbench/api/InstitutionController.java", "diffHunk": "@@ -56,8 +57,11 @@\n     return ResponseEntity.ok(response);\n   }\n \n-  // note: this endpoint is publicly accessible because it is needed for account creation\n-\n+  /**\n+   * This API is publicly-accessible since it is called during account creation.\n+   *\n+   * @return", "originalCommit": "0a567f713962c2831e5c02dae97425fc7347accf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk5NTQwNA==", "url": "https://github.com/all-of-us/workbench/pull/3266#discussion_r395995404", "bodyText": "Done", "author": "gjuggler", "createdAt": "2020-03-21T14:05:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM0NzgwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM0OTQ0Nw==", "url": "https://github.com/all-of-us/workbench/pull/3266#discussion_r394349447", "bodyText": "@Override", "author": "jmthibault79", "createdAt": "2020-03-18T13:35:19Z", "path": "api/src/main/java/org/pmiops/workbench/api/InstitutionController.java", "diffHunk": "@@ -66,6 +70,24 @@\n     return ResponseEntity.ok(response);\n   }\n \n+  /**\n+   * This API is publicly-accessible since it is called during account creation.\n+   *\n+   * @return\n+   */\n+  public ResponseEntity<CheckEmailResponse> checkEmail(final String shortName, final String email) {", "originalCommit": "0a567f713962c2831e5c02dae97425fc7347accf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk5NTQzNw==", "url": "https://github.com/all-of-us/workbench/pull/3266#discussion_r395995437", "bodyText": "Done", "author": "gjuggler", "createdAt": "2020-03-21T14:05:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM0OTQ0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM1MDA0MQ==", "url": "https://github.com/all-of-us/workbench/pull/3266#discussion_r394350041", "bodyText": "We repeat this block in a few places now so let's make it a private method", "author": "jmthibault79", "createdAt": "2020-03-18T13:36:13Z", "path": "api/src/main/java/org/pmiops/workbench/api/InstitutionController.java", "diffHunk": "@@ -66,6 +70,24 @@\n     return ResponseEntity.ok(response);\n   }\n \n+  /**\n+   * This API is publicly-accessible since it is called during account creation.\n+   *\n+   * @return\n+   */\n+  public ResponseEntity<CheckEmailResponse> checkEmail(final String shortName, final String email) {\n+    final Institution institution =", "originalCommit": "0a567f713962c2831e5c02dae97425fc7347accf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk5NTY4Mw==", "url": "https://github.com/all-of-us/workbench/pull/3266#discussion_r395995683", "bodyText": "Done", "author": "gjuggler", "createdAt": "2020-03-21T14:09:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM1MDA0MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM1NTM1MQ==", "url": "https://github.com/all-of-us/workbench/pull/3266#discussion_r394355351", "bodyText": "might as well fill in these as well", "author": "jmthibault79", "createdAt": "2020-03-18T13:44:03Z", "path": "api/src/main/java/org/pmiops/workbench/institution/InstitutionService.java", "diffHunk": "@@ -35,4 +35,13 @@\n    */\n   boolean validateAffiliation(\n       @Nullable DbVerifiedInstitutionalAffiliation dbAffiliation, String contactEmail);\n+\n+  /**\n+   * Checks whether a given email address is a valid member of an Institution.\n+   *\n+   * @param institution", "originalCommit": "0a567f713962c2831e5c02dae97425fc7347accf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk5NTk1Mw==", "url": "https://github.com/all-of-us/workbench/pull/3266#discussion_r395995953", "bodyText": "Done", "author": "gjuggler", "createdAt": "2020-03-21T14:13:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM1NTM1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM1NTgwMg==", "url": "https://github.com/all-of-us/workbench/pull/3266#discussion_r394355802", "bodyText": "maybe: copy the pattern matching comment from the previous method", "author": "jmthibault79", "createdAt": "2020-03-18T13:44:46Z", "path": "api/src/main/java/org/pmiops/workbench/institution/InstitutionService.java", "diffHunk": "@@ -35,4 +35,13 @@\n    */\n   boolean validateAffiliation(\n       @Nullable DbVerifiedInstitutionalAffiliation dbAffiliation, String contactEmail);\n+\n+  /**\n+   * Checks whether a given email address is a valid member of an Institution.", "originalCommit": "0a567f713962c2831e5c02dae97425fc7347accf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk5NTg1MQ==", "url": "https://github.com/all-of-us/workbench/pull/3266#discussion_r395995851", "bodyText": "Done, did some comment cleanup here.", "author": "gjuggler", "createdAt": "2020-03-21T14:12:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM1NTgwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM3NzcwMA==", "url": "https://github.com/all-of-us/workbench/pull/3266#discussion_r394377700", "bodyText": "Could this return a ResponseEntity<Boolean> instead?", "author": "jmthibault79", "createdAt": "2020-03-18T14:15:03Z", "path": "api/src/main/java/org/pmiops/workbench/api/InstitutionController.java", "diffHunk": "@@ -66,6 +70,24 @@\n     return ResponseEntity.ok(response);\n   }\n \n+  /**\n+   * This API is publicly-accessible since it is called during account creation.\n+   *\n+   * @return\n+   */\n+  public ResponseEntity<CheckEmailResponse> checkEmail(final String shortName, final String email) {", "originalCommit": "0a567f713962c2831e5c02dae97425fc7347accf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk5NTU0Nw==", "url": "https://github.com/all-of-us/workbench/pull/3266#discussion_r395995547", "bodyText": "I generally tend to avoid primitive return types for API responses where possible. It dramatically reduces the additional effort for someone to add another response field in the future, which I've found to be a maintenance win.", "author": "gjuggler", "createdAt": "2020-03-21T14:07:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM3NzcwMA=="}], "type": "inlineReview"}, {"oid": "f60f804a3cd152fef081e59d8b0cc3c165eec645", "url": "https://github.com/all-of-us/workbench/commit/f60f804a3cd152fef081e59d8b0cc3c165eec645", "message": "WIP checkEmail API and UI.", "committedDate": "2020-03-23T15:55:39Z", "type": "commit"}, {"oid": "50e111d099e7a491a7eda62004a8a93351e591cb", "url": "https://github.com/all-of-us/workbench/commit/50e111d099e7a491a7eda62004a8a93351e591cb", "message": "Move API to better location, add UI and unit tests.", "committedDate": "2020-03-23T15:55:39Z", "type": "commit"}, {"oid": "f2a28c962640424da5fa59eb613a8396ee372d2f", "url": "https://github.com/all-of-us/workbench/commit/f2a28c962640424da5fa59eb613a8396ee372d2f", "message": "Revert temp change to starting sign-in step.", "committedDate": "2020-03-23T15:55:39Z", "type": "commit"}, {"oid": "3d96d1d06b4ef68d962bdef9c293aec32908ef1b", "url": "https://github.com/all-of-us/workbench/commit/3d96d1d06b4ef68d962bdef9c293aec32908ef1b", "message": "PR feedback and added test case.", "committedDate": "2020-03-23T15:55:40Z", "type": "commit"}, {"oid": "bafe6f251da61243d23b5182c452ccacabca193c", "url": "https://github.com/all-of-us/workbench/commit/bafe6f251da61243d23b5182c452ccacabca193c", "message": "Add fix & test case for email-before-institution scenario", "committedDate": "2020-03-23T15:55:40Z", "type": "commit"}, {"oid": "ea5639e67abae3862a3ca321307d879157558ece", "url": "https://github.com/all-of-us/workbench/commit/ea5639e67abae3862a3ca321307d879157558ece", "message": "Fix bug in dropdown change handler.", "committedDate": "2020-03-23T15:55:40Z", "type": "commit"}, {"oid": "ea5639e67abae3862a3ca321307d879157558ece", "url": "https://github.com/all-of-us/workbench/commit/ea5639e67abae3862a3ca321307d879157558ece", "message": "Fix bug in dropdown change handler.", "committedDate": "2020-03-23T15:55:40Z", "type": "forcePushed"}]}