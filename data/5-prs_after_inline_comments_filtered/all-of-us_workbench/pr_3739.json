{"pr_number": 3739, "pr_title": "[risk=no][RW-4361] API portion: rm code depending on Feature Flag requireInstitutionalVerification", "pr_createdAt": "2020-07-02T01:03:32Z", "pr_url": "https://github.com/all-of-us/workbench/pull/3739", "timeline": [{"oid": "d837004bccbee588198d096d77ccce567396f3a7", "url": "https://github.com/all-of-us/workbench/commit/d837004bccbee588198d096d77ccce567396f3a7", "message": "Don't send old-style affiliations to the RDR", "committedDate": "2020-07-01T20:59:01Z", "type": "commit"}, {"oid": "05ff106d4e1cec605b550b57205aee6bbfb656e0", "url": "https://github.com/all-of-us/workbench/commit/05ff106d4e1cec605b550b57205aee6bbfb656e0", "message": "Remove requireInstitutionalVerification checks from ProfileController/Service\n- update tests accordingly", "committedDate": "2020-07-02T00:54:32Z", "type": "commit"}, {"oid": "a6d4569e0644218147646c12888df5972f1f34b0", "url": "https://github.com/all-of-us/workbench/commit/a6d4569e0644218147646c12888df5972f1f34b0", "message": "rm verification check in UserServiceImpl", "committedDate": "2020-07-02T01:01:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY5MjczNw==", "url": "https://github.com/all-of-us/workbench/pull/3739#discussion_r448692737", "bodyText": "Confirmed with RDR that it's OK to stop sending this - it has been bad information for a long time already.", "author": "jmthibault79", "createdAt": "2020-07-02T01:05:30Z", "path": "api/src/main/java/org/pmiops/workbench/rdr/RdrExportServiceImpl.java", "diffHunk": "@@ -242,14 +242,10 @@ private RdrResearcher toRdrResearcher(DbUser dbUser) {\n       researcher.setLgbtqIdentity(dbDemographicSurvey.getLgbtqIdentity());\n       researcher.setIdentifiesAsLgbtq(dbDemographicSurvey.getIdentifiesAsLgbtq());\n     }\n-    researcher.setAffiliations(\n-        dbUser.getInstitutionalAffiliations().stream()\n-            .map(\n-                inst ->\n-                    new ResearcherAffiliation()\n-                        .institution(inst.getInstitution())\n-                        .role(inst.getRole()))\n-            .collect(Collectors.toList()));\n+\n+    // Deprecated old-style institutional affiliations\n+    // To be removed in RW-4362\n+    researcher.setAffiliations(Collections.emptyList());", "originalCommit": "a6d4569e0644218147646c12888df5972f1f34b0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY5MzI5Mg==", "url": "https://github.com/all-of-us/workbench/pull/3739#discussion_r448693292", "bodyText": "Affiliation is now required for user creation.  Most tests get the default, but a few use a version with a parameter.", "author": "jmthibault79", "createdAt": "2020-07-02T01:07:40Z", "path": "api/src/test/java/org/pmiops/workbench/api/ProfileControllerTest.java", "diffHunk": "@@ -266,7 +264,7 @@ public void setUp() throws IOException {\n \n   @Test(expected = BadRequestException.class)\n   public void testCreateAccount_invitationKeyMismatch() {\n-    createUser();\n+    createUserWithVerifiedAffiliation();", "originalCommit": "a6d4569e0644218147646c12888df5972f1f34b0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8015d6f90d5229e1081c22655d9ec07dd2891ede", "url": "https://github.com/all-of-us/workbench/commit/8015d6f90d5229e1081c22655d9ec07dd2891ede", "message": "These tests were incorrect: this field is needed", "committedDate": "2020-07-02T01:33:14Z", "type": "commit"}, {"oid": "a7fdb6d75d74755270ae1ba73f2576ccf6de9f68", "url": "https://github.com/all-of-us/workbench/commit/a7fdb6d75d74755270ae1ba73f2576ccf6de9f68", "message": "fix invalid test", "committedDate": "2020-07-02T01:38:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODcwMjYwMQ==", "url": "https://github.com/all-of-us/workbench/pull/3739#discussion_r448702601", "bodyText": "fun fact! many of these tests were invalid because leaving out the organizationTypeEnum when creating an Institution also generates a BadRequestException", "author": "jmthibault79", "createdAt": "2020-07-02T01:44:00Z", "path": "api/src/test/java/org/pmiops/workbench/api/ProfileControllerTest.java", "diffHunk": "@@ -298,12 +296,11 @@ public void testInvitationKeyVerification_invitationKeyMismatch() {\n \n   @Test(expected = BadRequestException.class)\n   public void testCreateAccount_MismatchEmailAddress() {\n-    createUser();\n-    config.featureFlags.requireInstitutionalVerification = true;\n     final Institution broad =\n         new Institution()\n             .shortName(\"Broad\")\n             .displayName(\"The Broad Institute\")\n+            .organizationTypeEnum(OrganizationType.ACADEMIC_RESEARCH_INSTITUTION)", "originalCommit": "a7fdb6d75d74755270ae1ba73f2576ccf6de9f68", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "00d9c15427d9574acae803ac9ec71bbe3c7f11c1", "url": "https://github.com/all-of-us/workbench/commit/00d9c15427d9574acae803ac9ec71bbe3c7f11c1", "message": "consolidate and cleanup", "committedDate": "2020-07-02T02:05:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODcwODEzMw==", "url": "https://github.com/all-of-us/workbench/pull/3739#discussion_r448708133", "bodyText": "moved and grouped below", "author": "jmthibault79", "createdAt": "2020-07-02T02:06:18Z", "path": "api/src/test/java/org/pmiops/workbench/api/ProfileControllerTest.java", "diffHunk": "@@ -246,16 +244,21 @@ public void setUp() throws IOException {\n     googleUser.setChangePasswordAtNextLogin(true);\n     googleUser.setPassword(\"testPassword\");\n     googleUser.setIsEnrolledIn2Sv(true);\n-    when(mockDirectoryService.getUser(PRIMARY_EMAIL)).thenReturn(googleUser);", "originalCommit": "00d9c15427d9574acae803ac9ec71bbe3c7f11c1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODcwODIwMQ==", "url": "https://github.com/all-of-us/workbench/pull/3739#discussion_r448708201", "bodyText": "these 2 are moved from createUser()", "author": "jmthibault79", "createdAt": "2020-07-02T02:06:39Z", "path": "api/src/test/java/org/pmiops/workbench/api/ProfileControllerTest.java", "diffHunk": "@@ -246,16 +244,21 @@ public void setUp() throws IOException {\n     googleUser.setChangePasswordAtNextLogin(true);\n     googleUser.setPassword(\"testPassword\");\n     googleUser.setIsEnrolledIn2Sv(true);\n-    when(mockDirectoryService.getUser(PRIMARY_EMAIL)).thenReturn(googleUser);\n \n     DUA_VERSION = userService.getCurrentDuccVersion();\n \n+    when(mockDirectoryService.getUser(PRIMARY_EMAIL)).thenReturn(googleUser);\n+    when(mockCloudStorageService.readInvitationKey()).thenReturn(INVITATION_KEY);", "originalCommit": "00d9c15427d9574acae803ac9ec71bbe3c7f11c1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODcwODcxMQ==", "url": "https://github.com/all-of-us/workbench/pull/3739#discussion_r448708711", "bodyText": "can you deprecate a test?  whatever, removing these soon", "author": "jmthibault79", "createdAt": "2020-07-02T02:09:03Z", "path": "api/src/test/java/org/pmiops/workbench/api/ProfileControllerTest.java", "diffHunk": "@@ -599,9 +570,10 @@ public void testMe_userBeforeNotLoggedInSuccess() {\n         false);\n   }\n \n+  @Deprecated // to be removed in RW-4362", "originalCommit": "00d9c15427d9574acae803ac9ec71bbe3c7f11c1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODcwODk2OA==", "url": "https://github.com/all-of-us/workbench/pull/3739#discussion_r448708968", "bodyText": "this became equivalent to the other test testMe_success()", "author": "jmthibault79", "createdAt": "2020-07-02T02:10:01Z", "path": "api/src/test/java/org/pmiops/workbench/api/ProfileControllerTest.java", "diffHunk": "@@ -693,33 +668,14 @@ public void testMe_removeAllInstitutionalAffiliations() {\n     assertThat(result.getInstitutionalAffiliations().size()).isEqualTo(0);\n   }\n \n-  @Test\n-  public void testMe_verifiedInstitutionalAffiliation() {\n-    config.featureFlags.requireInstitutionalVerification = true;", "originalCommit": "00d9c15427d9574acae803ac9ec71bbe3c7f11c1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODcxMDEzOA==", "url": "https://github.com/all-of-us/workbench/pull/3739#discussion_r448710138", "bodyText": "no longer possible to create a user without an affiliation", "author": "jmthibault79", "createdAt": "2020-07-02T02:14:43Z", "path": "api/src/test/java/org/pmiops/workbench/api/ProfileControllerTest.java", "diffHunk": "@@ -812,30 +752,13 @@ public void updateVerifiedInstitutionalAffiliation_noSuchInstitution() {\n     profileController.updateVerifiedInstitutionalAffiliation(dbUser.getUserId(), newAffil);\n   }\n \n-  @Test\n-  public void updateVerifiedInstitutionalAffiliation_create() {", "originalCommit": "00d9c15427d9574acae803ac9ec71bbe3c7f11c1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "09da987d527fa7af76f82c87bf7af48d566e2cb5", "url": "https://github.com/all-of-us/workbench/commit/09da987d527fa7af76f82c87bf7af48d566e2cb5", "message": "not sure how this was passing?", "committedDate": "2020-07-02T02:15:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODcxMTIzMQ==", "url": "https://github.com/all-of-us/workbench/pull/3739#discussion_r448711231", "bodyText": "moved these 2 to setUp()", "author": "jmthibault79", "createdAt": "2020-07-02T02:19:12Z", "path": "api/src/test/java/org/pmiops/workbench/api/ProfileControllerTest.java", "diffHunk": "@@ -1251,18 +1145,22 @@ public void testUpdateProfile_updateDemographicSurvey() {\n         false);\n   }\n \n-  private Profile createUser() {\n-    when(mockCloudStorageService.readInvitationKey()).thenReturn(INVITATION_KEY);", "originalCommit": "00d9c15427d9574acae803ac9ec71bbe3c7f11c1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9026b473027e98c00547897ff68c511318f84e2f", "url": "https://github.com/all-of-us/workbench/commit/9026b473027e98c00547897ff68c511318f84e2f", "message": "comment", "committedDate": "2020-07-02T02:20:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODcxMjE3OQ==", "url": "https://github.com/all-of-us/workbench/pull/3739#discussion_r448712179", "bodyText": "the logic of this test was backwards until I moved the invitation key mock to where it always ran.\nPreviously: this test called invitationKeyVerification() with the correct key.  It was a BadRequest because it mismatched the mock which didn't return the correct key\nNow: mock returns correct key, and this test attempts to verify a wrong key.", "author": "jmthibault79", "createdAt": "2020-07-02T02:23:32Z", "path": "api/src/test/java/org/pmiops/workbench/api/ProfileControllerTest.java", "diffHunk": "@@ -293,17 +296,17 @@ public void testCreateAccount_noRequireInvitationKey() {\n \n   @Test(expected = BadRequestException.class)\n   public void testInvitationKeyVerification_invitationKeyMismatch() {\n+    invitationVerificationRequest.setInvitationKey(\"wrong key\");", "originalCommit": "9026b473027e98c00547897ff68c511318f84e2f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}