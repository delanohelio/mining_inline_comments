{"pr_number": 3248, "pr_title": "[RW-4506][risk=no] keep elastic at pace with CB changes", "pr_createdAt": "2020-03-12T16:32:11Z", "pr_url": "https://github.com/all-of-us/workbench/pull/3248", "timeline": [{"oid": "958cfbb1b1700b8427fd7d4e32774da33d33fc83", "url": "https://github.com/all-of-us/workbench/commit/958cfbb1b1700b8427fd7d4e32774da33d33fc83", "message": "RW-4506 added sex at birth, age at consent and age at cdr", "committedDate": "2020-03-12T16:50:53Z", "type": "commit"}, {"oid": "b076ec4849272d4e1979211d6a2edbdad843dfd4", "url": "https://github.com/all-of-us/workbench/commit/b076ec4849272d4e1979211d6a2edbdad843dfd4", "message": "RW-4506 added sex at birth, age at consent and age at cdr", "committedDate": "2020-03-12T16:50:53Z", "type": "commit"}, {"oid": "b076ec4849272d4e1979211d6a2edbdad843dfd4", "url": "https://github.com/all-of-us/workbench/commit/b076ec4849272d4e1979211d6a2edbdad843dfd4", "message": "RW-4506 added sex at birth, age at consent and age at cdr", "committedDate": "2020-03-12T16:50:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA4ODE1Mw==", "url": "https://github.com/all-of-us/workbench/pull/3248#discussion_r394088153", "bodyText": "nit: fix newline", "author": "calbach", "createdAt": "2020-03-18T03:30:20Z", "path": "api/src/main/java/org/pmiops/workbench/elasticsearch/AggregationUtils.java", "diffHunk": "@@ -10,50 +10,64 @@\n import org.elasticsearch.search.aggregations.bucket.range.ParsedDateRange;\n import org.elasticsearch.search.aggregations.bucket.range.Range;\n import org.elasticsearch.search.aggregations.bucket.terms.Terms;\n+import org.elasticsearch.search.aggregations.bucket.terms.TermsAggregationBuilder;\n+import org.pmiops.workbench.model.AgeType;\n import org.pmiops.workbench.model.DemoChartInfo;\n+import org.pmiops.workbench.model.GenderOrSexType;\n \n public class AggregationUtils {\n \n   public static final String RANGE_18_44 = \"18-44\";\n   public static final String RANGE_45_64 = \"45-64\";\n   public static final String RANGE_GT_65 = \"65\";\n   public static final String DATE = \"d_\";\n-  public static final String GENDER = \"g_\";\n+  public static final String GENDER_OR_SEX = \"g_or_s_\";\n   public static final String RACE = \"r_\";\n \n   /**\n    * Build aggregations for demographic charting based on date range, gender and race. The bucket\n    * aggregations compute and return the number of documents that \"fell into\" each bucket.\n    */\n-  public static AggregationBuilder buildDemoChartAggregation(String ageRange) {\n+  public static AggregationBuilder buildDemoChartAggregation(\n+      GenderOrSexType genderOrSexType, AgeType ageType, String ageRange) {\n     String[] ages = ageRange.split(\"-\");\n-    LocalDate start = null;\n-    // use the low end of the age range to calculate the end of the date range\n-    LocalDate end = ElasticUtils.todayMinusYears(Integer.parseInt(ages[0]));\n-    if (ages.length > 1) {\n-      // use high end of the age range to calculate the start of the date range\n-      // need to add 1 year to adjust the start date to beginning of age range\n-      start = ElasticUtils.todayMinusYears(Integer.parseInt(ages[1]) + 1);\n-    }\n+    // use Integer values of age ranges when calculating age at consent or age at cdr\n+    Integer lo = Integer.valueOf(ages[0]);\n+    Integer hi = (ages.length > 1) ? Integer.valueOf(ages[1]) : null;\n+\n+    // use high endDate of the age range to calculate the startDate of the date range\n+    // need to add 1 year to adjust the startDate date to beginning of age range\n+    LocalDate startDate = (hi != null) ? ElasticUtils.todayMinusYears(hi + 1) : null;\n+    // use the low endDate of the age range to calculate the endDate of the date range\n+    // when calculating age from date of birth\n+    LocalDate endDate = ElasticUtils.todayMinusYears(lo);\n \n-    // Added order to gender and race buckets. Therefore the UI code can expect consistent results\n-    // between BQ(sql ordered by gender, race, age) and elastic\n-    return AggregationBuilders.dateRange(DATE + ageRange)\n-        .field(\"birth_datetime\")\n-        .format(\"yyyy-MM-dd\")\n-        .addRange((start == null) ? null : start.toString(), end.toString())\n-        .subAggregation(\n-            AggregationBuilders.terms(GENDER + ageRange)\n-                .field(\"gender_concept_name\")\n-                .order(BucketOrder.key(true))\n-                .subAggregation(\n-                    AggregationBuilders.terms(RACE + ageRange)\n-                        .field(\"race_concept_name\")\n-                        .order(BucketOrder.key(true))\n-                        // This eliminates the race buckets with 0 counts. Without this param\n-                        // elastic\n-                        // returns all race buckets regardless of count.\n-                        .minDocCount(1)));\n+    boolean isGender = GenderOrSexType.GENDER.equals(genderOrSexType);\n+    boolean isAgeAtConsent = AgeType.AGE_AT_CONSENT.equals(ageType);\n+    // Added order to gender/sex and race buckets. Therefore the UI code can expect consistent\n+    // results\n+    // between BQ(sql ordered by gender/sex, race, age) and elastic", "originalCommit": "b076ec4849272d4e1979211d6a2edbdad843dfd4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQxMjE3Nw==", "url": "https://github.com/all-of-us/workbench/pull/3248#discussion_r394412177", "bodyText": "Done.", "author": "freemabd", "createdAt": "2020-03-18T14:59:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA4ODE1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA4OTI0OQ==", "url": "https://github.com/all-of-us/workbench/pull/3248#discussion_r394089249", "bodyText": "Hm - did this change? Or was this a bug?", "author": "calbach", "createdAt": "2020-03-18T03:35:04Z", "path": "api/src/test/java/org/pmiops/workbench/elasticsearch/ElasticFiltersTest.java", "diffHunk": "@@ -925,18 +927,50 @@ public void testAgeQuery() {\n             new SearchRequest()\n                 .addIncludesItem(\n                     new SearchGroup()\n-                        .addItemsItem(new SearchGroupItem().addSearchParametersItem(ethParam))));\n+                        .addItemsItem(new SearchGroupItem().addSearchParametersItem(ageParam))));\n     BoolQueryBuilder ageBuilder =\n         QueryBuilders.boolQuery()\n             .filter(QueryBuilders.termQuery(\"is_deceased\", false))\n             .filter(\n                 QueryBuilders.rangeQuery(\"birth_datetime\")\n-                    .gt(left)\n+                    .gte(left)", "originalCommit": "b076ec4849272d4e1979211d6a2edbdad843dfd4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQxNDIwMg==", "url": "https://github.com/all-of-us/workbench/pull/3248#discussion_r394414202", "bodyText": "A bug. So participants that have birthdays today wouldn't be included in the left most range.", "author": "freemabd", "createdAt": "2020-03-18T15:02:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA4OTI0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA4OTYwMQ==", "url": "https://github.com/all-of-us/workbench/pull/3248#discussion_r394089601", "bodyText": "Owch. Will check for an update on synthetic data this week. We need to be able to rerun the latest curation pipeline at a bare minimum even if we can't easily make data improvements yet.", "author": "calbach", "createdAt": "2020-03-18T03:36:38Z", "path": "api/tools/src/main/java/org/pmiops/workbench/tools/elastic/ElasticSearchIndexer.java", "diffHunk": "@@ -306,9 +306,11 @@ private void createIndex(CommandLine opts) throws IOException, InterruptedExcept\n   }\n \n   private String getPersonBigQuerySQL(String bqDataset, int inverseProb) throws IOException {\n+    // Synth dataset doesn't contain sex_at_birth, so we use gender as a fix", "originalCommit": "b076ec4849272d4e1979211d6a2edbdad843dfd4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQxNDUwMQ==", "url": "https://github.com/all-of-us/workbench/pull/3248#discussion_r394414501", "bodyText": "Agreed.", "author": "freemabd", "createdAt": "2020-03-18T15:02:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA4OTYwMQ=="}], "type": "inlineReview"}, {"oid": "8dbb8d9c44b94caeb70454c2c516002c7bf5b78c", "url": "https://github.com/all-of-us/workbench/commit/8dbb8d9c44b94caeb70454c2c516002c7bf5b78c", "message": "RW-4506 remove newline on comment.", "committedDate": "2020-03-18T14:59:25Z", "type": "commit"}]}