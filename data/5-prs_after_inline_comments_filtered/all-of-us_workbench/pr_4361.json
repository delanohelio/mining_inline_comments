{"pr_number": 4361, "pr_title": "[RW-6009][risk=no] batch inserts", "pr_createdAt": "2020-12-05T18:32:56Z", "pr_url": "https://github.com/all-of-us/workbench/pull/4361", "timeline": [{"oid": "bff82fec5df03513f3088632376c9627aed1d149", "url": "https://github.com/all-of-us/workbench/commit/bff82fec5df03513f3088632376c9627aed1d149", "message": "clean up more dead code and batch inserts to at most 1000", "committedDate": "2020-12-06T01:57:55Z", "type": "forcePushed"}, {"oid": "c08a0135a126671864990f65139dace85e5d9f8c", "url": "https://github.com/all-of-us/workbench/commit/c08a0135a126671864990f65139dace85e5d9f8c", "message": "batch up to 1000 rows per InsertAllRequest", "committedDate": "2020-12-06T02:12:02Z", "type": "commit"}, {"oid": "606b7f9d0b245af8d1f7cf9ddb05b4a18d50bdf9", "url": "https://github.com/all-of-us/workbench/commit/606b7f9d0b245af8d1f7cf9ddb05b4a18d50bdf9", "message": "cleanup", "committedDate": "2020-12-07T22:10:47Z", "type": "commit"}, {"oid": "cab9c84243601b9b73d73a2af1d564f844f027f2", "url": "https://github.com/all-of-us/workbench/commit/cab9c84243601b9b73d73a2af1d564f844f027f2", "message": "restore merged-out values", "committedDate": "2020-12-07T22:16:02Z", "type": "commit"}, {"oid": "8f28e657a6e06ed75916c1d39e79829aee8bc383", "url": "https://github.com/all-of-us/workbench/commit/8f28e657a6e06ed75916c1d39e79829aee8bc383", "message": "update", "committedDate": "2020-12-07T22:16:26Z", "type": "commit"}, {"oid": "8f28e657a6e06ed75916c1d39e79829aee8bc383", "url": "https://github.com/all-of-us/workbench/commit/8f28e657a6e06ed75916c1d39e79829aee8bc383", "message": "update", "committedDate": "2020-12-07T22:16:26Z", "type": "forcePushed"}, {"oid": "aa6e1cc1f2502d3bbc0d95398f731d1db73e8f45", "url": "https://github.com/all-of-us/workbench/commit/aa6e1cc1f2502d3bbc0d95398f731d1db73e8f45", "message": "remove unneeded files", "committedDate": "2020-12-07T22:19:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkyNzE1OA==", "url": "https://github.com/all-of-us/workbench/pull/4361#discussion_r537927158", "bodyText": "nit: addAll can be chained", "author": "calbach", "createdAt": "2020-12-07T23:59:33Z", "path": "api/src/main/java/org/pmiops/workbench/reporting/ReportingUploadServiceImpl.java", "diffHunk": "@@ -123,51 +120,70 @@ private TableId getTableId(String tableName) {\n   private List<InsertAllRequest> getInsertAllRequests(ReportingSnapshot reportingSnapshot) {\n     final Map<String, Object> fixedValues =\n         ImmutableMap.of(\"snapshot_timestamp\", reportingSnapshot.getCaptureTimestamp());\n+    // The maxRowsForInsert parameter is in use by the insert query implementation, but that code is\n+    // being removed, freeing it to be used here.\n+    final int batchSize = configProvider.get().reporting.maxRowsPerInsert;\n+    final ImmutableList.Builder<InsertAllRequest> resultBuilder = ImmutableList.builder();\n \n-    return ImmutableList.of(\n-            cohortRequestBuilder.build(\n-                getTableId(CohortColumnValueExtractor.class),\n-                reportingSnapshot.getCohorts(),\n-                fixedValues),\n-            datasetRequestBuilder.build(\n-                getTableId(DatasetColumnValueExtractor.class),\n-                reportingSnapshot.getDatasets(),\n-                fixedValues),\n-            datasetCohortRequestBuilder.build(\n-                getTableId(DatasetCohortColumnValueExtractor.class),\n-                reportingSnapshot.getDatasetCohorts(),\n-                fixedValues),\n-            datasetConceptSetRequestBuilder.build(\n-                getTableId(DatasetConceptSetColumnValueExtractor.class),\n-                reportingSnapshot.getDatasetConceptSets(),\n-                fixedValues),\n-            datasetDomainIIdValueRequestBuilder.build(\n-                getTableId(DatasetDomainColumnValueExtractor.class),\n-                reportingSnapshot.getDatasetDomainIdValues(),\n-                fixedValues),\n-            institutionRequestBuilder.build(\n-                getTableId(InstitutionColumnValueExtractor.class),\n-                reportingSnapshot.getInstitutions(),\n-                fixedValues),\n-            userRequestBuilder.build(\n-                getTableId(UserColumnValueExtractor.class),\n-                reportingSnapshot.getUsers(),\n-                fixedValues),\n-            workspaceRequestBuilder.build(\n-                getTableId(WorkspaceColumnValueExtractor.class),\n-                reportingSnapshot.getWorkspaces(),\n-                fixedValues))\n-        .stream()\n+    resultBuilder.addAll(", "originalCommit": "aa6e1cc1f2502d3bbc0d95398f731d1db73e8f45", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk4NDI3MA==", "url": "https://github.com/all-of-us/workbench/pull/4361#discussion_r537984270", "bodyText": "oh nice. I'll do that on another submission.", "author": "jaycarlton", "createdAt": "2020-12-08T02:26:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkyNzE1OA=="}], "type": "inlineReview"}]}