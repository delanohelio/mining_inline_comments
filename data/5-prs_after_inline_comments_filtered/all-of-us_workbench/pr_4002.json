{"pr_number": 4002, "pr_title": "[RW-5422][risk=low] GetRuntime - Add runtime configuration details", "pr_createdAt": "2020-09-14T19:43:30Z", "pr_url": "https://github.com/all-of-us/workbench/pull/4002", "timeline": [{"oid": "0949d39117bdfa9893666d611307a4aa20e3d233", "url": "https://github.com/all-of-us/workbench/commit/0949d39117bdfa9893666d611307a4aa20e3d233", "message": "add new Runtime fields and mapping fields", "committedDate": "2020-09-14T19:37:56Z", "type": "commit"}, {"oid": "cda3099ac70eac455d109dd92f8e69dab1904491", "url": "https://github.com/all-of-us/workbench/commit/cda3099ac70eac455d109dd92f8e69dab1904491", "message": "spotless", "committedDate": "2020-09-14T19:38:38Z", "type": "commit"}, {"oid": "51a0225c88b02c102b0655aa298f9b99b5faf9cb", "url": "https://github.com/all-of-us/workbench/commit/51a0225c88b02c102b0655aa298f9b99b5faf9cb", "message": "add comment", "committedDate": "2020-09-14T19:43:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM1NjM5Mw==", "url": "https://github.com/all-of-us/workbench/pull/4002#discussion_r488356393", "bodyText": "You should be able to unmarshal it using Gson. Something like this, but probably simpler: \n  \n    \n      workbench/api/src/main/java/org/pmiops/workbench/firecloud/FirecloudTransforms.java\n    \n    \n         Line 22\n      in\n      3fd2793\n    \n    \n    \n    \n\n        \n          \n           return gson.fromJson(gson.toJson(aclResp.getAcl(), accessEntryType), accessEntryType);", "author": "calbach", "createdAt": "2020-09-15T03:11:47Z", "path": "api/src/main/java/org/pmiops/workbench/utils/mappers/LeonardoMapper.java", "diffHunk": "@@ -20,12 +27,67 @@ ListRuntimeResponse toApiListRuntimeResponse(\n       LeonardoListRuntimeResponse leonardoListRuntimeResponse);\n \n   @Mapping(target = \"createdDate\", source = \"auditInfo.createdDate\")\n+  @Mapping(target = \"toolDockerImage\", source = \"runtimeImages\")\n+  @Mapping(target = \"configurationType\", ignore = true)\n+  @Mapping(target = \"gceConfig\", ignore = true)\n+  @Mapping(target = \"dataprocConfig\", ignore = true)\n   Runtime toApiRuntime(LeonardoGetRuntimeResponse runtime);\n \n+  default Integer extractIntField(Map<String, Object> map, String field) {\n+    if (map.get(field) == null) {\n+      return null;\n+    }\n+\n+    return ((Number) map.get(field)).intValue();\n+  }\n+\n+  @AfterMapping\n+  default void mapRuntimeConfig(\n+      @MappingTarget Runtime runtime, LeonardoGetRuntimeResponse leonardoGetRuntimeResponse) {\n+    // There's a lot of unchecked casting happening here but I couldn't find a way around it\n+    // This is primarily due to the fact that Swagger generates the `runtimeConfig` object as a\n+    // generic Java object.\n+    // From manual testing, it seems like it is generated as a LinkedTreeMap.", "originalCommit": "51a0225c88b02c102b0655aa298f9b99b5faf9cb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM1NzM3NQ==", "url": "https://github.com/all-of-us/workbench/pull/4002#discussion_r488357375", "bodyText": "nit: \"Jupyter\".equals(image.getImageType()) for slightly better null safety", "author": "calbach", "createdAt": "2020-09-15T03:15:10Z", "path": "api/src/main/java/org/pmiops/workbench/utils/mappers/LeonardoMapper.java", "diffHunk": "@@ -20,12 +27,67 @@ ListRuntimeResponse toApiListRuntimeResponse(\n       LeonardoListRuntimeResponse leonardoListRuntimeResponse);\n \n   @Mapping(target = \"createdDate\", source = \"auditInfo.createdDate\")\n+  @Mapping(target = \"toolDockerImage\", source = \"runtimeImages\")\n+  @Mapping(target = \"configurationType\", ignore = true)\n+  @Mapping(target = \"gceConfig\", ignore = true)\n+  @Mapping(target = \"dataprocConfig\", ignore = true)\n   Runtime toApiRuntime(LeonardoGetRuntimeResponse runtime);\n \n+  default Integer extractIntField(Map<String, Object> map, String field) {\n+    if (map.get(field) == null) {\n+      return null;\n+    }\n+\n+    return ((Number) map.get(field)).intValue();\n+  }\n+\n+  @AfterMapping\n+  default void mapRuntimeConfig(\n+      @MappingTarget Runtime runtime, LeonardoGetRuntimeResponse leonardoGetRuntimeResponse) {\n+    // There's a lot of unchecked casting happening here but I couldn't find a way around it\n+    // This is primarily due to the fact that Swagger generates the `runtimeConfig` object as a\n+    // generic Java object.\n+    // From manual testing, it seems like it is generated as a LinkedTreeMap.\n+\n+    Map<String, Object> runtimeConfig =\n+        (Map<String, Object>) leonardoGetRuntimeResponse.getRuntimeConfig();\n+\n+    if (runtimeConfig.get(\"cloudService\").equals(\"DATAPROC\")) {\n+      runtime.dataprocConfig(\n+          new DataprocConfig()\n+              .numberOfWorkers(extractIntField(runtimeConfig, \"numberOfWorkers\"))\n+              .masterMachineType((String) runtimeConfig.get(\"masterMachineType\"))\n+              .masterDiskSize(extractIntField(runtimeConfig, \"masterDiskSize\"))\n+              .workerMachineType((String) runtimeConfig.get(\"workerMachineType\"))\n+              .workerDiskSize(extractIntField(runtimeConfig, \"workerDiskSize\"))\n+              .numberOfWorkerLocalSSDs(extractIntField(runtimeConfig, \"numberOfWorkerLocalSSDs\"))\n+              .numberOfPreemptibleWorkers(\n+                  extractIntField(runtimeConfig, \"numberOfPreemptibleWorkers\")));\n+    } else if (runtimeConfig.get(\"cloudService\").equals(\"GCE\")) {\n+      runtime.gceConfig(\n+          new GceConfig()\n+              .diskSize(extractIntField(runtimeConfig, \"diskSize\"))\n+              .bootDiskSize(extractIntField(runtimeConfig, \"bootDiskSize\"))\n+              .machineType((String) runtimeConfig.get(\"machineType\")));\n+    } else {\n+      throw new IllegalArgumentException(\n+          \"Invalid LeonardoGetRuntimeResponse.RuntimeConfig.cloudService : \"\n+              + runtimeConfig.get(\"cloudService\"));\n+    }\n+  }\n+\n   default RuntimeStatus toApiRuntimeStatus(LeonardoRuntimeStatus leonardoRuntimeStatus) {\n     if (leonardoRuntimeStatus == null) {\n       return RuntimeStatus.UNKNOWN;\n     }\n     return RuntimeStatus.fromValue(leonardoRuntimeStatus.toString());\n   }\n+\n+  default String getJupyterImage(List<LeonardoRuntimeImage> images) {\n+    return images.stream()\n+        .filter(image -> image.getImageType().equals(\"Jupyter\"))", "originalCommit": "51a0225c88b02c102b0655aa298f9b99b5faf9cb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "51a0225c88b02c102b0655aa298f9b99b5faf9cb", "url": "https://github.com/all-of-us/workbench/commit/51a0225c88b02c102b0655aa298f9b99b5faf9cb", "message": "add comment", "committedDate": "2020-09-14T19:43:19Z", "type": "forcePushed"}, {"oid": "025f2594d5d9cb336e975d2f14043ef723768644", "url": "https://github.com/all-of-us/workbench/commit/025f2594d5d9cb336e975d2f14043ef723768644", "message": "use GSON to deserialize", "committedDate": "2020-09-15T18:56:20Z", "type": "commit"}, {"oid": "110dc0ab1749d793b1b6eec95f4c8220500c9d63", "url": "https://github.com/all-of-us/workbench/commit/110dc0ab1749d793b1b6eec95f4c8220500c9d63", "message": "remove old function:", "committedDate": "2020-09-15T18:57:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkwNDU2Mw==", "url": "https://github.com/all-of-us/workbench/pull/4002#discussion_r488904563", "bodyText": "nit: would reverse the ordering again here for improved null safety", "author": "calbach", "createdAt": "2020-09-15T19:10:48Z", "path": "api/src/main/java/org/pmiops/workbench/utils/mappers/LeonardoMapper.java", "diffHunk": "@@ -20,12 +36,51 @@ ListRuntimeResponse toApiListRuntimeResponse(\n       LeonardoListRuntimeResponse leonardoListRuntimeResponse);\n \n   @Mapping(target = \"createdDate\", source = \"auditInfo.createdDate\")\n+  @Mapping(target = \"toolDockerImage\", source = \"runtimeImages\")\n+  @Mapping(target = \"gceConfig\", ignore = true)\n+  @Mapping(target = \"dataprocConfig\", ignore = true)\n   Runtime toApiRuntime(LeonardoGetRuntimeResponse runtime);\n \n+  @AfterMapping\n+  default void mapRuntimeConfig(\n+      @MappingTarget Runtime runtime, LeonardoGetRuntimeResponse leonardoGetRuntimeResponse) {\n+    Gson gson = new Gson();\n+    LeonardoRuntimeConfig runtimeConfig =\n+        gson.fromJson(\n+            gson.toJson(leonardoGetRuntimeResponse.getRuntimeConfig()),\n+            LeonardoRuntimeConfig.class);\n+\n+    if (runtimeConfig.getCloudService().equals(CloudServiceEnum.DATAPROC)) {", "originalCommit": "110dc0ab1749d793b1b6eec95f4c8220500c9d63", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5166f59fa343a638b86cad955823bad48da48155", "url": "https://github.com/all-of-us/workbench/commit/5166f59fa343a638b86cad955823bad48da48155", "message": "null safetey", "committedDate": "2020-09-15T19:55:52Z", "type": "commit"}, {"oid": "7d5d1d8073656510e05c46c3676d7bfd41ae3240", "url": "https://github.com/all-of-us/workbench/commit/7d5d1d8073656510e05c46c3676d7bfd41ae3240", "message": "test fix", "committedDate": "2020-09-15T20:23:24Z", "type": "commit"}, {"oid": "44d6eb4303296bce5c4b031708116eb6734aea5a", "url": "https://github.com/all-of-us/workbench/commit/44d6eb4303296bce5c4b031708116eb6734aea5a", "message": "test fix", "committedDate": "2020-09-15T20:37:16Z", "type": "commit"}, {"oid": "9bdb723ff27559f89a8005ef1f974ca3aaae453f", "url": "https://github.com/all-of-us/workbench/commit/9bdb723ff27559f89a8005ef1f974ca3aaae453f", "message": "Merge branch 'master' of github.com:all-of-us/workbench into songe/RW-5422", "committedDate": "2020-09-15T21:32:04Z", "type": "commit"}]}