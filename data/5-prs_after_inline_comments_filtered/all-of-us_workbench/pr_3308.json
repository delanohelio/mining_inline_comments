{"pr_number": 3308, "pr_title": "[risk=no]Fix NPE in userHasFreeTierCredits", "pr_createdAt": "2020-03-27T13:33:30Z", "pr_url": "https://github.com/all-of-us/workbench/pull/3308", "timeline": [{"oid": "9c29f8e5be65c94ae9722d1ea85f70365900caa7", "url": "https://github.com/all-of-us/workbench/commit/9c29f8e5be65c94ae9722d1ea85f70365900caa7", "message": "clarify getCachedFreeTierUsage/userHasRemainingFreeTierCredits conditions and add tests", "committedDate": "2020-03-27T13:30:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI2ODc3Nw==", "url": "https://github.com/all-of-us/workbench/pull/3308#discussion_r399268777", "bodyText": "Renamed to userHasRemainingFreeTierCredits and moved below", "author": "jmthibault79", "createdAt": "2020-03-27T13:36:32Z", "path": "api/src/main/java/org/pmiops/workbench/billing/FreeTierBillingService.java", "diffHunk": "@@ -61,10 +62,6 @@ public FreeTierBillingService(\n     this.workbenchConfigProvider = workbenchConfigProvider;\n   }\n \n-  public boolean userHasFreeTierCredits(DbUser user) {", "originalCommit": "9c29f8e5be65c94ae9722d1ea85f70365900caa7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI2OTUzMQ==", "url": "https://github.com/all-of-us/workbench/pull/3308#discussion_r399269531", "bodyText": "No functional change here", "author": "jmthibault79", "createdAt": "2020-03-27T13:37:42Z", "path": "api/src/main/java/org/pmiops/workbench/billing/FreeTierBillingService.java", "diffHunk": "@@ -245,11 +258,7 @@ public Double getUserCachedFreeTierUsage(DbUser user) {\n    * @return the US dollar amount, represented as a double\n    */\n   public double getUserFreeTierDollarLimit(DbUser user) {\n-    final Double override = user.getFreeTierCreditsLimitDollarsOverride();\n-    if (override != null) {\n-      return override;\n-    }\n-\n-    return workbenchConfigProvider.get().billing.defaultFreeCreditsDollarLimit;\n+    return Optional.ofNullable(user.getFreeTierCreditsLimitDollarsOverride())", "originalCommit": "9c29f8e5be65c94ae9722d1ea85f70365900caa7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI2OTg0Ng==", "url": "https://github.com/all-of-us/workbench/pull/3308#discussion_r399269846", "bodyText": "renamed: \"user\" is redundant", "author": "jmthibault79", "createdAt": "2020-03-27T13:38:08Z", "path": "api/src/main/java/org/pmiops/workbench/billing/FreeTierBillingService.java", "diffHunk": "@@ -230,13 +227,29 @@ private void maybeAlertOnCostThresholds(\n    * have created. This is NOT live BigQuery data: it is only as recent as the last\n    * checkFreeTierBillingUsage cron job, recorded as last_update_time in the DB.\n    *\n+   * <p>Note: return value may be null, to enable direct assignment to the nullable Profile field\n+   *\n    * @param user the user as represented in our database\n    * @return the total USD amount spent in workspaces created by this user, represented as a double\n    */\n-  public Double getUserCachedFreeTierUsage(DbUser user) {", "originalCommit": "9c29f8e5be65c94ae9722d1ea85f70365900caa7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMxNzUzNQ==", "url": "https://github.com/all-of-us/workbench/pull/3308#discussion_r399317535", "bodyText": "nit: can it be like user: the user as represented in our database to make it more readable", "author": "NehaBroad", "createdAt": "2020-03-27T14:46:18Z", "path": "api/src/main/java/org/pmiops/workbench/billing/FreeTierBillingService.java", "diffHunk": "@@ -230,13 +227,29 @@ private void maybeAlertOnCostThresholds(\n    * have created. This is NOT live BigQuery data: it is only as recent as the last\n    * checkFreeTierBillingUsage cron job, recorded as last_update_time in the DB.\n    *\n+   * <p>Note: return value may be null, to enable direct assignment to the nullable Profile field\n+   *\n    * @param user the user as represented in our database\n    * @return the total USD amount spent in workspaces created by this user, represented as a double\n    */\n-  public Double getUserCachedFreeTierUsage(DbUser user) {\n+  @Nullable\n+  public Double getCachedFreeTierUsage(DbUser user) {\n     return workspaceFreeTierUsageDao.totalCostByUser(user);\n   }\n \n+  /**\n+   * Does this user have remaining free tier credits? Compare the user-specific free tier limit (may\n+   * be the system default) to the amount they have used.\n+   *\n+   * @param user the user as represented in our database", "originalCommit": "9c29f8e5be65c94ae9722d1ea85f70365900caa7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMzODU5MA==", "url": "https://github.com/all-of-us/workbench/pull/3308#discussion_r399338590", "bodyText": "I like that idea, but a space is the javadoc standard for @param", "author": "jmthibault79", "createdAt": "2020-03-27T15:15:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMxNzUzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMxOTEzMQ==", "url": "https://github.com/all-of-us/workbench/pull/3308#discussion_r399319131", "bodyText": "Why to remove ?", "author": "NehaBroad", "createdAt": "2020-03-27T14:48:26Z", "path": "api/src/test/java/org/pmiops/workbench/workspaces/WorkspacesControllerTest.java", "diffHunk": "@@ -236,7 +236,7 @@\n           .domainId(\"Measurement\")\n           .countValue(256L)\n           .prevalence(0.4F)\n-          .conceptSynonyms(new ArrayList<String>());\n+          .conceptSynonyms(new ArrayList<>());", "originalCommit": "9c29f8e5be65c94ae9722d1ea85f70365900caa7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMzOTUyOA==", "url": "https://github.com/all-of-us/workbench/pull/3308#discussion_r399339528", "bodyText": "I have an auto-linter configured which does small fixes like this when I touch a file.", "author": "jmthibault79", "createdAt": "2020-03-27T15:16:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMxOTEzMQ=="}], "type": "inlineReview"}]}