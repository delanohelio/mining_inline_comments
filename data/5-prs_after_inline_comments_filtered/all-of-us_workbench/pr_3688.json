{"pr_number": 3688, "pr_title": "[risk=low] Only lock out free tier workspaces on credit expiration", "pr_createdAt": "2020-06-18T19:21:21Z", "pr_url": "https://github.com/all-of-us/workbench/pull/3688", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ0OTYxMQ==", "url": "https://github.com/all-of-us/workbench/pull/3688#discussion_r442449611", "bodyText": "This signature update also helps with billing un-lock-out, which I'm working on", "author": "jmthibault79", "createdAt": "2020-06-18T19:22:00Z", "path": "api/src/main/java/org/pmiops/workbench/billing/FreeTierBillingService.java", "diffHunk": "@@ -140,11 +140,18 @@ private boolean expiredByCost(final DbUser user, final double currentCost) {\n     return compareCosts(currentCost, getUserFreeTierDollarLimit(user)) > 0;\n   }\n \n-  private void deactivateUserWorkspaces(final DbUser user) {\n-    final Set<DbWorkspace> toDeactivate = workspaceDao.findAllByCreator(user);\n-    for (final DbWorkspace workspace : toDeactivate) {\n-      workspaceDao.updateBillingStatus(workspace.getWorkspaceId(), BillingStatus.INACTIVE);\n-    }\n+  // TODO: move to DbWorkspace?  RW-5107\n+  private boolean isFreeTier(final DbWorkspace workspace) {\n+    return workspace\n+        .getBillingAccountName()\n+        .equals(workbenchConfigProvider.get().billing.freeTierBillingAccountName());\n+  }\n+\n+  private void setActiveStatusForCreatedWorkspaces(final DbUser user, final BillingStatus status) {", "originalCommit": "151f4961cb53faa6c0ce4421991d2465cb553229", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzAyOTk1Ng==", "url": "https://github.com/all-of-us/workbench/pull/3688#discussion_r443029956", "bodyText": "I hate to ask for more characters in this verbose method name, but seems like this should probably specify FreeTierWorkspaces", "author": "calbach", "createdAt": "2020-06-19T20:25:41Z", "path": "api/src/main/java/org/pmiops/workbench/billing/FreeTierBillingService.java", "diffHunk": "@@ -140,11 +140,18 @@ private boolean expiredByCost(final DbUser user, final double currentCost) {\n     return compareCosts(currentCost, getUserFreeTierDollarLimit(user)) > 0;\n   }\n \n-  private void deactivateUserWorkspaces(final DbUser user) {\n-    final Set<DbWorkspace> toDeactivate = workspaceDao.findAllByCreator(user);\n-    for (final DbWorkspace workspace : toDeactivate) {\n-      workspaceDao.updateBillingStatus(workspace.getWorkspaceId(), BillingStatus.INACTIVE);\n-    }\n+  // TODO: move to DbWorkspace?  RW-5107\n+  private boolean isFreeTier(final DbWorkspace workspace) {\n+    return workspace\n+        .getBillingAccountName()\n+        .equals(workbenchConfigProvider.get().billing.freeTierBillingAccountName());\n+  }\n+\n+  private void setActiveStatusForCreatedWorkspaces(final DbUser user, final BillingStatus status) {", "originalCommit": "151f4961cb53faa6c0ce4421991d2465cb553229", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "56e1c3a248e1d4d9e65b96878606aaae07471d22", "url": "https://github.com/all-of-us/workbench/commit/56e1c3a248e1d4d9e65b96878606aaae07471d22", "message": "Don't deactivate billing-upgraded Workspaces", "committedDate": "2020-06-19T20:51:58Z", "type": "commit"}, {"oid": "0f95d896c5e4ee5c958b9f85bd703d3ecdb468ad", "url": "https://github.com/all-of-us/workbench/commit/0f95d896c5e4ee5c958b9f85bd703d3ecdb468ad", "message": "test for only disable free tier", "committedDate": "2020-06-19T20:51:58Z", "type": "commit"}, {"oid": "f5427b0aa5eeb7d285ed825d0b0dff2505974d70", "url": "https://github.com/all-of-us/workbench/commit/f5427b0aa5eeb7d285ed825d0b0dff2505974d70", "message": "rename", "committedDate": "2020-06-19T20:51:59Z", "type": "commit"}, {"oid": "f5427b0aa5eeb7d285ed825d0b0dff2505974d70", "url": "https://github.com/all-of-us/workbench/commit/f5427b0aa5eeb7d285ed825d0b0dff2505974d70", "message": "rename", "committedDate": "2020-06-19T20:51:59Z", "type": "forcePushed"}]}