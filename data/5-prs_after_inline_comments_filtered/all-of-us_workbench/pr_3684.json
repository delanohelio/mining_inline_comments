{"pr_number": 3684, "pr_title": "[RW-2400][RISK=HIGH] Prompt to update research purpose", "pr_createdAt": "2020-06-18T14:00:59Z", "pr_url": "https://github.com/all-of-us/workbench/pull/3684", "timeline": [{"oid": "38038b8239203870a0a70ffff28fddceb809f191", "url": "https://github.com/all-of-us/workbench/commit/38038b8239203870a0a70ffff28fddceb809f191", "message": "Prompt research purpose review", "committedDate": "2020-06-15T14:57:50Z", "type": "commit"}, {"oid": "1707d51c86fe113266d1852b5cfdfc7fa4639cc2", "url": "https://github.com/all-of-us/workbench/commit/1707d51c86fe113266d1852b5cfdfc7fa4639cc2", "message": "Comments from Karthik", "committedDate": "2020-06-16T17:42:24Z", "type": "commit"}, {"oid": "ab02b6e52bb44b56ea7b293225457f5bb31b616e", "url": "https://github.com/all-of-us/workbench/commit/ab02b6e52bb44b56ea7b293225457f5bb31b616e", "message": "Feature flag and other feedback from Lou", "committedDate": "2020-06-18T13:48:48Z", "type": "commit"}, {"oid": "676c04e7f3ccc7f011f30b1f219b844e82791f8b", "url": "https://github.com/all-of-us/workbench/commit/676c04e7f3ccc7f011f30b1f219b844e82791f8b", "message": "Fix tests", "committedDate": "2020-06-19T05:46:27Z", "type": "commit"}, {"oid": "7dbaa5c38bfff5d2a2e296d64c22c2a31941e2b2", "url": "https://github.com/all-of-us/workbench/commit/7dbaa5c38bfff5d2a2e296d64c22c2a31941e2b2", "message": "removing test as its no longer needed", "committedDate": "2020-06-19T05:55:36Z", "type": "commit"}, {"oid": "6f7735f3dbffe4f50d61973e5e5705262847a9e8", "url": "https://github.com/all-of-us/workbench/commit/6f7735f3dbffe4f50d61973e5e5705262847a9e8", "message": "Fix Api test", "committedDate": "2020-06-19T13:47:02Z", "type": "commit"}, {"oid": "d8c7c9756e943e966ca07ccb3d7452d2372010ee", "url": "https://github.com/all-of-us/workbench/commit/d8c7c9756e943e966ca07ccb3d7452d2372010ee", "message": "Merge branch 'master' into nsaxena/PromptResearchPurpose", "committedDate": "2020-06-19T14:08:01Z", "type": "commit"}, {"oid": "05c4a92b121355144ed843b3bc1f4bae232d303a", "url": "https://github.com/all-of-us/workbench/commit/05c4a92b121355144ed843b3bc1f4bae232d303a", "message": "Fix config", "committedDate": "2020-06-19T14:12:13Z", "type": "commit"}, {"oid": "5ccbeceaafd6f3b2fd26761c53e52d54f9ea639a", "url": "https://github.com/all-of-us/workbench/commit/5ccbeceaafd6f3b2fd26761c53e52d54f9ea639a", "message": "too many review attributes", "committedDate": "2020-06-19T14:29:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg3NzgxMQ==", "url": "https://github.com/all-of-us/workbench/pull/3684#discussion_r442877811", "bodyText": "What does this comment mean? Can you specify in this comment that we want to prompt when a workspace FIRST goes over 15 days old and then EVERY 365 days?", "author": "als364", "createdAt": "2020-06-19T14:37:33Z", "path": "api/src/main/java/org/pmiops/workbench/api/OfflineWorkspaceController.java", "diffHunk": "@@ -0,0 +1,71 @@\n+package org.pmiops.workbench.api;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import javax.inject.Provider;\n+import org.joda.time.DateTime;\n+import org.joda.time.DateTimeComparator;\n+import org.pmiops.workbench.config.WorkbenchConfig;\n+import org.pmiops.workbench.db.dao.WorkspaceDao;\n+import org.pmiops.workbench.db.model.DbWorkspace;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+@RestController\n+public class OfflineWorkspaceController implements OfflineWorkspaceApiDelegate {\n+\n+  private final WorkspaceDao workspaceDao;\n+  private final Provider<WorkbenchConfig> configProvider;\n+\n+  @Autowired\n+  OfflineWorkspaceController(Provider<WorkbenchConfig> configProvider, WorkspaceDao workspaceDao) {\n+    this.configProvider = configProvider;\n+    this.workspaceDao = workspaceDao;\n+  }\n+\n+  @Override\n+  public ResponseEntity<Void> updateResearchPurposeReview() {\n+    if (configProvider.get().featureFlags.enableResearchPurposePrompt) {\n+      List<DbWorkspace> workspaceList = workspaceDao.findAllByReviewResearchPurpose((short) 1);\n+\n+      // 1. Filter out workspace where creation date is 365 days or 15 days", "originalCommit": "05c4a92b121355144ed843b3bc1f4bae232d303a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU3MDcyMg==", "url": "https://github.com/all-of-us/workbench/pull/3684#discussion_r443570722", "bodyText": "I will update this, earlier the requirements was eery year we will have the pop-up however ir was change to : Just first year researcher/OWNER will be getting the pop up.", "author": "NehaBroad", "createdAt": "2020-06-22T13:48:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg3NzgxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg4NjUzMA==", "url": "https://github.com/all-of-us/workbench/pull/3684#discussion_r442886530", "bodyText": "I'm not sure what this logic is doing. Comparing against null should always fail and we don't want to always show the prompt. I also don't think we should be looking at direct equality. Per the ticket, we really want to check the following:\n\nis the workspace older than 15 days and hasn't yet had a research purpose update? if so, prompt.\nhas the workspace research purpose been updated in the past 365 days? if not, prompt.\nWe don't currently have a concept of 'when was the research purpose last updated' and we need to introduce one.", "author": "als364", "createdAt": "2020-06-19T14:53:40Z", "path": "api/src/main/java/org/pmiops/workbench/api/OfflineWorkspaceController.java", "diffHunk": "@@ -0,0 +1,71 @@\n+package org.pmiops.workbench.api;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import javax.inject.Provider;\n+import org.joda.time.DateTime;\n+import org.joda.time.DateTimeComparator;\n+import org.pmiops.workbench.config.WorkbenchConfig;\n+import org.pmiops.workbench.db.dao.WorkspaceDao;\n+import org.pmiops.workbench.db.model.DbWorkspace;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+@RestController\n+public class OfflineWorkspaceController implements OfflineWorkspaceApiDelegate {\n+\n+  private final WorkspaceDao workspaceDao;\n+  private final Provider<WorkbenchConfig> configProvider;\n+\n+  @Autowired\n+  OfflineWorkspaceController(Provider<WorkbenchConfig> configProvider, WorkspaceDao workspaceDao) {\n+    this.configProvider = configProvider;\n+    this.workspaceDao = workspaceDao;\n+  }\n+\n+  @Override\n+  public ResponseEntity<Void> updateResearchPurposeReview() {\n+    if (configProvider.get().featureFlags.enableResearchPurposePrompt) {\n+      List<DbWorkspace> workspaceList = workspaceDao.findAllByReviewResearchPurpose((short) 1);\n+\n+      // 1. Filter out workspace where creation date is 365 days or 15 days\n+      // 2. set Research Purpose Review to FALSE\n+      // 3. Update workspace\n+      workspaceList =\n+          workspaceList.stream()\n+              .filter(\n+                  workspace -> {\n+                    DateTime workspaceCreationDate = new DateTime(workspace.getCreationTime());\n+                    DateTime workspaceModifiedDate = new DateTime(workspace.getLastModifiedTime());\n+                    return checkReviewDate(workspaceCreationDate, workspaceModifiedDate);\n+                  })\n+              .map(\n+                  filteredWorkspace -> {\n+                    filteredWorkspace.setResearchPurposeReviewed(false);\n+                    return filteredWorkspace;\n+                  })\n+              .collect(Collectors.toList());\n+      workspaceDao.save(workspaceList);\n+    }\n+    return ResponseEntity.noContent().build();\n+  }\n+\n+  private boolean checkReviewDate(DateTime workspaceCreationDate, DateTime workspaceModifiedDate) {\n+    DateTime creationDatePlus15 = workspaceCreationDate.plusDays(15);\n+    DateTime creationDatePlus1Year = workspaceCreationDate.plusYears(1);\n+\n+    // True if\n+    // 1. Current date is creation Date + 1 year or\n+    // 2. Current date is 15 days after creation date or\n+    // 3. Current Date is AFTER an year of creation date (in case cron job did not run/ missed\n+    // picking the workspace) and the Workspace has\n+    // not been modified after 1 year of creation date.\n+    int compareCreationDatePlus1Year =", "originalCommit": "05c4a92b121355144ed843b3bc1f4bae232d303a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU3NTMyNQ==", "url": "https://github.com/all-of-us/workbench/pull/3684#discussion_r443575325", "bodyText": "We need to update the story (will do it right now) the logic is as follows now and please let me know if it matches the understanding from code: it just checks if its more than 15 days/365 days. We are not implementing the update logic.\nSo this cron job will run and start marking workspaces that matches the days criteria", "author": "NehaBroad", "createdAt": "2020-06-22T13:55:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg4NjUzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYyNDQ3MQ==", "url": "https://github.com/all-of-us/workbench/pull/3684#discussion_r443624471", "bodyText": "I didn't realize the requirements had been updated, thank you for letting me know.\nThe logic still won't work. You're comparing the creation date plus one year / plus fifteen days against nothing. You need to compare the creation date plus one year / plus fifteen days against the current date.", "author": "als364", "createdAt": "2020-06-22T15:00:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg4NjUzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYzMzAwMg==", "url": "https://github.com/all-of-us/workbench/pull/3684#discussion_r443633002", "bodyText": "null means now\n**\n* Compare two objects against only the range of date time fields as\n* specified in the constructor.\n*\n* @param lhsObj  the first object,\n*      logically on the left of a < comparison, null means now\n* @param rhsObj  the second object,\n*      logically on the right of a < comparison, null means now\n* @return zero if order does not matter,\n*      negative value if lhsObj < rhsObj, positive value otherwise.", "author": "NehaBroad", "createdAt": "2020-06-22T15:13:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg4NjUzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYzNDg4MQ==", "url": "https://github.com/all-of-us/workbench/pull/3684#discussion_r443634881", "bodyText": "oh my god that is the worst way for a library to default a thing that I have ever seen.\nAlright, this is fine, but can you leave a comment saying that null means now with a hyperlink to the documentation for this method call, please?", "author": "als364", "createdAt": "2020-06-22T15:15:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg4NjUzMA=="}], "type": "inlineReview"}, {"oid": "b0000feed44268be07392ceb93be973b20c6ecb9", "url": "https://github.com/all-of-us/workbench/commit/b0000feed44268be07392ceb93be973b20c6ecb9", "message": "PR Comments", "committedDate": "2020-06-23T03:58:45Z", "type": "commit"}, {"oid": "556ce050f425bb0a38384d889f9f3ff1ff74c9db", "url": "https://github.com/all-of-us/workbench/commit/556ce050f425bb0a38384d889f9f3ff1ff74c9db", "message": "PR Comment endpoint name change and text change for popup and banner", "committedDate": "2020-06-23T18:00:22Z", "type": "commit"}]}