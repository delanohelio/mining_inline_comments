{"pr_number": 3324, "pr_title": "[RW-4500][risk=low]Institution affiliation: distinguish between two institution agreement\u2026", "pr_createdAt": "2020-03-31T19:29:30Z", "pr_url": "https://github.com/all-of-us/workbench/pull/3324", "timeline": [{"oid": "e293f487cb6a01d0eb19b8e82c27d70e1aece85e", "url": "https://github.com/all-of-us/workbench/commit/e293f487cb6a01d0eb19b8e82c27d70e1aece85e", "message": "Institution affiliation: distinguish between two institution agreement types", "committedDate": "2020-03-31T19:25:02Z", "type": "commit"}, {"oid": "a868777ab3b89e958484769f4885a93029806d50", "url": "https://github.com/all-of-us/workbench/commit/a868777ab3b89e958484769f4885a93029806d50", "message": "spotless and add comments", "committedDate": "2020-03-31T19:36:14Z", "type": "commit"}, {"oid": "ae787d170f1cf472b8969a8b698df5a9b9b85917", "url": "https://github.com/all-of-us/workbench/commit/ae787d170f1cf472b8969a8b698df5a9b9b85917", "message": "resolve conflict", "committedDate": "2020-03-31T19:45:48Z", "type": "commit"}, {"oid": "583eac0fcc47782c3f6a8a548f92b802d72d44b0", "url": "https://github.com/all-of-us/workbench/commit/583eac0fcc47782c3f6a8a548f92b802d72d44b0", "message": "correc file name", "committedDate": "2020-03-31T19:47:40Z", "type": "commit"}, {"oid": "c75147335efc391f8dd375654a565bd6941b7720", "url": "https://github.com/all-of-us/workbench/commit/c75147335efc391f8dd375654a565bd6941b7720", "message": "Fix ui Test", "committedDate": "2020-03-31T22:56:46Z", "type": "commit"}, {"oid": "78525454158dfae0bbd4234332bf73214f0a79ec", "url": "https://github.com/all-of-us/workbench/commit/78525454158dfae0bbd4234332bf73214f0a79ec", "message": "Fix backend test", "committedDate": "2020-04-01T02:24:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkxMzI3Ng==", "url": "https://github.com/all-of-us/workbench/pull/3324#discussion_r401913276", "bodyText": "remove this line to demonstrate that null is converted to MASTER on round-trip", "author": "jmthibault79", "createdAt": "2020-04-01T21:13:56Z", "path": "api/src/test/java/org/pmiops/workbench/institution/InstitutionServiceTest.java", "diffHunk": "@@ -41,15 +42,19 @@\n   @Autowired private VerifiedInstitutionalAffiliationDao verifiedInstitutionalAffiliationDao;\n \n   private final Institution testInst =\n-      new Institution().shortName(\"test\").displayName(\"this is a test\");\n+      new Institution()\n+          .shortName(\"test\")\n+          .displayName(\"this is a test\")\n+          .agreementTypeEnum(AgreementType.MASTER);", "originalCommit": "78525454158dfae0bbd4234332bf73214f0a79ec", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkxODAzOQ==", "url": "https://github.com/all-of-us/workbench/pull/3324#discussion_r401918039", "bodyText": "Please add these ProfileControllerTests:\n\nemail validation success when agreementType is NULL\nemail validation success when agreementType is MASTER\nemail validation failure when agreementType is RESTRICTED and the email matches domain\nemail validation failure when agreementType is MASTER and the email does not match domain", "author": "jmthibault79", "createdAt": "2020-04-01T21:23:35Z", "path": "api/src/test/java/org/pmiops/workbench/api/ProfileControllerTest.java", "diffHunk": "@@ -57,6 +57,7 @@\n import org.pmiops.workbench.model.AccessBypassRequest;\n import org.pmiops.workbench.model.AccessModule;\n import org.pmiops.workbench.model.Address;\n+import org.pmiops.workbench.model.AgreementType;", "originalCommit": "78525454158dfae0bbd4234332bf73214f0a79ec", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkxOTU2MQ==", "url": "https://github.com/all-of-us/workbench/pull/3324#discussion_r401919561", "bodyText": "Please add these InstitutionServiceTests:\n\nvalidation success when agreementType is NULL and the contact email matches a domain\nsomething to demonstrate that agreementType is what determines how we validate email, rather than the presence of address or domains.  i.e. don't match against an email address if agreementType is MASTER", "author": "jmthibault79", "createdAt": "2020-04-01T21:26:18Z", "path": "api/src/test/java/org/pmiops/workbench/institution/InstitutionServiceTest.java", "diffHunk": "@@ -18,6 +18,7 @@\n import org.pmiops.workbench.db.model.DbVerifiedInstitutionalAffiliation;\n import org.pmiops.workbench.exceptions.ConflictException;\n import org.pmiops.workbench.exceptions.NotFoundException;\n+import org.pmiops.workbench.model.AgreementType;", "originalCommit": "78525454158dfae0bbd4234332bf73214f0a79ec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjMzNDc3MA==", "url": "https://github.com/all-of-us/workbench/pull/3324#discussion_r402334770", "bodyText": "there is already a test for that test_emailValidation_mismatch", "author": "NehaBroad", "createdAt": "2020-04-02T13:58:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkxOTU2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjMzNjE3OQ==", "url": "https://github.com/all-of-us/workbench/pull/3324#discussion_r402336179", "bodyText": "I will add more for Restricted and NULL", "author": "NehaBroad", "createdAt": "2020-04-02T14:00:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkxOTU2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU0Mjc3Mg==", "url": "https://github.com/all-of-us/workbench/pull/3324#discussion_r402542772", "bodyText": "Let's chat on Slack about point 2 here", "author": "jmthibault79", "createdAt": "2020-04-02T18:59:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkxOTU2MQ=="}], "type": "inlineReview"}, {"oid": "7804135712b87ae829c05e92a96ed29135ec7335", "url": "https://github.com/all-of-us/workbench/commit/7804135712b87ae829c05e92a96ed29135ec7335", "message": "PR Comments: Change name agreementType to DuaType and add test to include restricted", "committedDate": "2020-04-03T19:08:28Z", "type": "commit"}, {"oid": "c5b74d8ca99e1b0fee2f868cb93c076dc2fbaf26", "url": "https://github.com/all-of-us/workbench/commit/c5b74d8ca99e1b0fee2f868cb93c076dc2fbaf26", "message": "remove static file that got added by mistake", "committedDate": "2020-04-03T19:10:54Z", "type": "commit"}, {"oid": "c5c74a43719874029e290fc3f3eb32a73ff57b7b", "url": "https://github.com/all-of-us/workbench/commit/c5c74a43719874029e290fc3f3eb32a73ff57b7b", "message": "Fix UI", "committedDate": "2020-04-04T02:50:15Z", "type": "commit"}, {"oid": "9c6ed4f48fbbebfdde9487cd2a63526ce8799cec", "url": "https://github.com/all-of-us/workbench/commit/9c6ed4f48fbbebfdde9487cd2a63526ce8799cec", "message": "PR Comments: Update comments and update contact email", "committedDate": "2020-04-04T02:55:02Z", "type": "commit"}, {"oid": "48e60a6fbdcdb2ff66f6a194a6480fdd8b35047c", "url": "https://github.com/all-of-us/workbench/commit/48e60a6fbdcdb2ff66f6a194a6480fdd8b35047c", "message": "fix test", "committedDate": "2020-04-04T03:03:30Z", "type": "commit"}, {"oid": "97dddb6c9d961669a259f5a166e6e9a86cc18d1b", "url": "https://github.com/all-of-us/workbench/commit/97dddb6c9d961669a259f5a166e6e9a86cc18d1b", "message": "rebase", "committedDate": "2020-04-04T03:10:46Z", "type": "commit"}, {"oid": "796f6d495fff9fb6c5c5a949ab9596add9f1ac16", "url": "https://github.com/all-of-us/workbench/commit/796f6d495fff9fb6c5c5a949ab9596add9f1ac16", "message": "SpotlessApply", "committedDate": "2020-04-04T03:35:58Z", "type": "commit"}, {"oid": "0e808554966f110983b987ee77d963e370bf8237", "url": "https://github.com/all-of-us/workbench/commit/0e808554966f110983b987ee77d963e370bf8237", "message": "adding new test for email validation with dua null", "committedDate": "2020-04-07T15:46:48Z", "type": "commit"}]}