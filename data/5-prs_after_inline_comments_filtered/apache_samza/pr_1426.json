{"pr_number": 1426, "pr_title": "SAMZA-2587: IntermediateMessageSerde exception handling", "pr_createdAt": "2020-09-02T00:01:40Z", "pr_url": "https://github.com/apache/samza/pull/1426", "timeline": [{"oid": "a436183eb253a3322710b6c75b88e5a03836352f", "url": "https://github.com/apache/samza/commit/a436183eb253a3322710b6c75b88e5a03836352f", "message": "SAMZA-2587: IntermediateMessageSerde exception handling", "committedDate": "2020-09-01T18:06:16Z", "type": "commit"}, {"oid": "9691cea65a3b561ada9ae0c5d54f6a2e35a644ac", "url": "https://github.com/apache/samza/commit/9691cea65a3b561ada9ae0c5d54f6a2e35a644ac", "message": "add unit test", "committedDate": "2020-09-01T23:04:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMxNzg2Mw==", "url": "https://github.com/apache/samza/pull/1426#discussion_r482317863", "bodyText": "Consider also adding a little clarification about what versions older than 0.13.1 did to make those versions incompatible with this new code.", "author": "cameronlee314", "createdAt": "2020-09-02T19:06:52Z", "path": "samza-core/src/main/java/org/apache/samza/serializers/IntermediateMessageSerde.java", "diffHunk": "@@ -83,21 +83,17 @@ public Object fromBytes(byte[] bytes) {\n           throw new UnsupportedOperationException(String.format(\"Message type %s is not supported\", type.name()));\n       }\n       return object;\n-\n     } catch (UnsupportedOperationException ue) {\n       throw new SamzaException(ue);\n     } catch (Exception e) {\n       // This will catch the following exceptions:\n       // 1) the first byte is not a valid type so it will cause ArrayOutOfBound exception\n       // 2) the first byte happens to be a valid type, but the deserialization fails with certain exception\n-      // For these cases, we fall back to user-provided serde\n-      try {\n-        return userMessageSerde.fromBytes(bytes);\n-      } catch (Exception umse) {\n-        LOGGER.error(\"Error deserializing from both intermediate message serde and user message serde. \"\n-            + \"Original exception: \", e);\n-        throw umse;\n-      }\n+      // For these cases, we WILL NOT fall back to user-provided serde. Thus, we are not compatible with upgrade\n+      // directly from samza version older than 0.13.1.", "originalCommit": "9691cea65a3b561ada9ae0c5d54f6a2e35a644ac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk5NDg4NQ==", "url": "https://github.com/apache/samza/pull/1426#discussion_r485994885", "bodyText": "Good point. Clarification added.", "author": "Zhangyx39", "createdAt": "2020-09-10T00:34:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMxNzg2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMyNzUwMw==", "url": "https://github.com/apache/samza/pull/1426#discussion_r482327503", "bodyText": "Just to clarify: Is the idea that this PR will go into Samza 1.6? So upgrading to samza 1.5 first will convert all intermediate messages into the new format, which means going to 1.6 after that will then be compatible?\nMaybe consider adding a comment to the code about why upgrading to Samza 1.5 will help.", "author": "cameronlee314", "createdAt": "2020-09-02T19:17:41Z", "path": "samza-core/src/main/java/org/apache/samza/serializers/IntermediateMessageSerde.java", "diffHunk": "@@ -83,21 +83,17 @@ public Object fromBytes(byte[] bytes) {\n           throw new UnsupportedOperationException(String.format(\"Message type %s is not supported\", type.name()));\n       }\n       return object;\n-\n     } catch (UnsupportedOperationException ue) {\n       throw new SamzaException(ue);\n     } catch (Exception e) {\n       // This will catch the following exceptions:\n       // 1) the first byte is not a valid type so it will cause ArrayOutOfBound exception\n       // 2) the first byte happens to be a valid type, but the deserialization fails with certain exception\n-      // For these cases, we fall back to user-provided serde\n-      try {\n-        return userMessageSerde.fromBytes(bytes);\n-      } catch (Exception umse) {\n-        LOGGER.error(\"Error deserializing from both intermediate message serde and user message serde. \"\n-            + \"Original exception: \", e);\n-        throw umse;\n-      }\n+      // For these cases, we WILL NOT fall back to user-provided serde. Thus, we are not compatible with upgrade\n+      // directly from samza version older than 0.13.1.\n+      LOGGER.error(\"Error deserializing with intermediate message serde. If you are upgrading from samza version older\"\n+          + \" than 0.13.1, please upgrade to samza 1.5 first.\");", "originalCommit": "9691cea65a3b561ada9ae0c5d54f6a2e35a644ac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjM1ODkxNQ==", "url": "https://github.com/apache/samza/pull/1426#discussion_r482358915", "bodyText": "If a user upgraded to 0.13.1+ some time ago, they could theoretically run into an error if they just still happened to have some intermediate messages from before 0.13.1 in their topic (e.g. they have really long retention) and they got processed for some reason. So maybe you can generalize the log message a little bit more to also cover the case if there are still messages from before 0.13.1 in their stream.", "author": "cameronlee314", "createdAt": "2020-09-02T19:43:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMyNzUwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk5NTczOQ==", "url": "https://github.com/apache/samza/pull/1426#discussion_r485995739", "bodyText": "Good suggestion. I have removed this error log and added a new exception when failing to read the message type. Also added comments to explain what's the issue and how to solve it.", "author": "Zhangyx39", "createdAt": "2020-09-10T00:37:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMyNzUwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMzNjMwOA==", "url": "https://github.com/apache/samza/pull/1426#discussion_r482336308", "bodyText": "Instead of depending on JsonSerdeV2 for this test, consider creating a mock Serde to do what you need.\nIn general, using mocks is helpful so that you don't rely on a specific implementation of something which is subject to change in the future. For example, what if JsonSerdeV2 was changed to stop throwing an exception for certain kinds of data, or if it was changed to throw a different kind of exception than SamzaException?", "author": "cameronlee314", "createdAt": "2020-09-02T19:26:40Z", "path": "samza-core/src/test/java/org/apache/samza/serializers/model/serializers/TestIntermediateMessageSerde.java", "diffHunk": "@@ -126,4 +128,14 @@ public void testEndOfStreamMessageSerde() {\n     assertEquals(de.getTaskName(), taskName);\n     assertEquals(de.getVersion(), 1);\n   }\n+\n+  @Test (expected = SamzaException.class)\n+  public void testUserMessageSerdeException() {\n+    IntermediateMessageSerde imserde = new IntermediateMessageSerde(new ObjectSerde());\n+    IntermediateMessageSerde imserde2 = new IntermediateMessageSerde(new JsonSerdeV2<>());", "originalCommit": "9691cea65a3b561ada9ae0c5d54f6a2e35a644ac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk5NTkxNQ==", "url": "https://github.com/apache/samza/pull/1426#discussion_r485995915", "bodyText": "Good suggestion. I have updated to use a mocked serde.", "author": "Zhangyx39", "createdAt": "2020-09-10T00:38:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMzNjMwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjM0MDEwMQ==", "url": "https://github.com/apache/samza/pull/1426#discussion_r482340101", "bodyText": "It seems like this test would have succeeded with the previous version of IntermediateMessageSerde as well. Could you please try to come up with a test that would only succeed with your new version of IntermediateMessageSerde?\nFor example, you could mock the imserde2 and then verify that it only gets called with a certain byte array.", "author": "cameronlee314", "createdAt": "2020-09-02T19:29:34Z", "path": "samza-core/src/test/java/org/apache/samza/serializers/model/serializers/TestIntermediateMessageSerde.java", "diffHunk": "@@ -126,4 +128,14 @@ public void testEndOfStreamMessageSerde() {\n     assertEquals(de.getTaskName(), taskName);\n     assertEquals(de.getVersion(), 1);\n   }\n+\n+  @Test (expected = SamzaException.class)\n+  public void testUserMessageSerdeException() {", "originalCommit": "9691cea65a3b561ada9ae0c5d54f6a2e35a644ac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk5NjQ2MQ==", "url": "https://github.com/apache/samza/pull/1426#discussion_r485996461", "bodyText": "Updated unit test to fail if the bytes given are not expected.", "author": "Zhangyx39", "createdAt": "2020-09-10T00:40:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjM0MDEwMQ=="}], "type": "inlineReview"}, {"oid": "d0578061f8ad513725c3d7b77326fc0c7955004d", "url": "https://github.com/apache/samza/commit/d0578061f8ad513725c3d7b77326fc0c7955004d", "message": "address comments", "committedDate": "2020-09-10T00:25:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU2ODEwMQ==", "url": "https://github.com/apache/samza/pull/1426#discussion_r486568101", "bodyText": "Could you please add this point to the PR description as well?\n\"Reset checkpoint\" means \"reset to newest message in the stream\", right? Could you please make sure that is clear in the doc/description?", "author": "cameronlee314", "createdAt": "2020-09-10T18:57:59Z", "path": "samza-core/src/main/java/org/apache/samza/serializers/IntermediateMessageSerde.java", "diffHunk": "@@ -67,7 +67,20 @@ public IntermediateMessageSerde(Serde userMessageSerde) {\n   public Object fromBytes(byte[] bytes) {\n     try {\n       final Object object;\n-      final MessageType type = MessageType.values()[bytes[0]];\n+      final MessageType type;\n+      try {\n+        type = MessageType.values()[bytes[0]];\n+      } catch (ArrayIndexOutOfBoundsException e) {\n+        // The message type was introduced in samza 0.13.1. For samza 0.13.0 or older versions, the first byte of\n+        // MessageType doesn't exist in the bytes. Thus, upgrading from those versions will get this exception.\n+        // There are two ways to solve this issue:\n+        // a) Reset checkpoint or clean all messages for the intermediate topic", "originalCommit": "d0578061f8ad513725c3d7b77326fc0c7955004d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQxMzI5OQ==", "url": "https://github.com/apache/samza/pull/1426#discussion_r498413299", "bodyText": "Makes sense. Updated.", "author": "Zhangyx39", "createdAt": "2020-10-01T17:41:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU2ODEwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU3MjY3NA==", "url": "https://github.com/apache/samza/pull/1426#discussion_r486572674", "bodyText": "Is it possible that this serde gets the old message format but bytes[0] is still small enough that there is no ArrayIndexOutOfBoundsException? In that case, you wouldn't see your message about the upgrade from 0.13.0.\nI think it was good to have this exception message where you had it before in the outer catch, since then you could at least warn users in all cases. You might also want to mention in the exception message that the error could just be due to a user serde error, so that users aren't misled into thinking that their issue is definitely the 0.13.0 upgrade issue.", "author": "cameronlee314", "createdAt": "2020-09-10T19:06:33Z", "path": "samza-core/src/main/java/org/apache/samza/serializers/IntermediateMessageSerde.java", "diffHunk": "@@ -67,7 +67,20 @@ public IntermediateMessageSerde(Serde userMessageSerde) {\n   public Object fromBytes(byte[] bytes) {\n     try {\n       final Object object;\n-      final MessageType type = MessageType.values()[bytes[0]];\n+      final MessageType type;\n+      try {\n+        type = MessageType.values()[bytes[0]];\n+      } catch (ArrayIndexOutOfBoundsException e) {", "originalCommit": "d0578061f8ad513725c3d7b77326fc0c7955004d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQyMDMxOQ==", "url": "https://github.com/apache/samza/pull/1426#discussion_r498420319", "bodyText": "Sorry for the late reply. I moved the exception from the outer catch to here because I think:\n\nIf this exception is triggered, the failure must be caused by the old format. The exception will tell the user exactly what is the issue.\nThe chance of old message having a first byte of 0 to 2 is relatively small. In that case, users will still see the correct exception if they have multiple containers (with multiple exceptions) or if they look at the source code.\nNew message with user serde error won't have this exception about message type. So users won't be misled by it. And I think this kind of failure is majority.", "author": "Zhangyx39", "createdAt": "2020-10-01T17:54:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU3MjY3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU4OTE3NA==", "url": "https://github.com/apache/samza/pull/1426#discussion_r486589174", "bodyText": "Since you have control over it, consider using something other than SamzaException for this mock and validation, since SamzaException is something that gets thrown a lot by core Samza classes.\nIt's just a nice small thing you can do to help make tests a little more robust, in case someone introduces a bug in the future.", "author": "cameronlee314", "createdAt": "2020-09-10T19:38:20Z", "path": "samza-core/src/test/java/org/apache/samza/serializers/model/serializers/TestIntermediateMessageSerde.java", "diffHunk": "@@ -126,4 +132,25 @@ public void testEndOfStreamMessageSerde() {\n     assertEquals(de.getTaskName(), taskName);\n     assertEquals(de.getVersion(), 1);\n   }\n+\n+  @Test(expected = SamzaException.class)\n+  public void testUserMessageSerdeException() {\n+    Serde<?> mockUserMessageSerde = mock(Serde.class);\n+    when(mockUserMessageSerde.fromBytes(anyObject())).then(new Answer<Object>() {\n+      @Override\n+      public Object answer(InvocationOnMock invocation) throws Throwable {\n+        byte[] bytes = invocation.getArgumentAt(0, byte[].class);\n+        if (Arrays.equals(bytes, new byte[]{1, 2})) {\n+          throw new SamzaException(\"User message serde failed to deserialize this message.\");", "originalCommit": "d0578061f8ad513725c3d7b77326fc0c7955004d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQwOTU5Mg==", "url": "https://github.com/apache/samza/pull/1426#discussion_r498409592", "bodyText": "Good suggestion. Updated to use IllegalArgumentException.", "author": "Zhangyx39", "createdAt": "2020-10-01T17:35:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU4OTE3NA=="}], "type": "inlineReview"}, {"oid": "921d996a4711ad71350e04d71bb49d44a536e1dc", "url": "https://github.com/apache/samza/commit/921d996a4711ad71350e04d71bb49d44a536e1dc", "message": "update comment and unit test", "committedDate": "2020-10-01T17:33:30Z", "type": "commit"}, {"oid": "af06faac371c88637480619cf7773de33f03c661", "url": "https://github.com/apache/samza/commit/af06faac371c88637480619cf7773de33f03c661", "message": "removing unsed import", "committedDate": "2020-10-01T21:11:13Z", "type": "commit"}]}