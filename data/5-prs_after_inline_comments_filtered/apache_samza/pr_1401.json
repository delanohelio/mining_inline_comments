{"pr_number": 1401, "pr_title": "SAMZA-2560: Generate SamzaSQLRelRecord using avro schema of input event instead of cached-schema.", "pr_createdAt": "2020-07-17T02:23:54Z", "pr_url": "https://github.com/apache/samza/pull/1401", "timeline": [{"oid": "4149851f836e09c521e49a76703e35f2c30385e0", "url": "https://github.com/apache/samza/commit/4149851f836e09c521e49a76703e35f2c30385e0", "message": "Generate SamzaSQLRelRecord using schema of input avro-record rather than the cached-schema.", "committedDate": "2020-07-16T23:36:35Z", "type": "commit"}, {"oid": "0cc1f26349ac643c0dcbf36f953b9c2896a710f2", "url": "https://github.com/apache/samza/commit/0cc1f26349ac643c0dcbf36f953b9c2896a710f2", "message": "Fix checkstyle violations.", "committedDate": "2020-07-17T02:52:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIxNDM3Ng==", "url": "https://github.com/apache/samza/pull/1401#discussion_r456214376", "bodyText": "Can you revert the change for validation here and below ?", "author": "atoomula", "createdAt": "2020-07-17T04:40:38Z", "path": "samza-sql/src/main/java/org/apache/samza/sql/interfaces/SqlIOConfig.java", "diffHunk": "@@ -81,11 +81,13 @@ public SqlIOConfig(String systemName, String streamName, List<String> sourcePart\n     this.streamId = String.format(\"%s-%s\", systemName, streamName);\n \n     samzaRelConverterName = streamConfigs.get(CFG_SAMZA_REL_CONVERTER);\n-    Validate.notEmpty(samzaRelConverterName, String.format(\"System %s is not supported. Please check if the system name is provided correctly.\", systemName));", "originalCommit": "0cc1f26349ac643c0dcbf36f953b9c2896a710f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIyOTAwMA==", "url": "https://github.com/apache/samza/pull/1401#discussion_r456229000", "bodyText": "Done. I just split the long-line so that it doesn't cross the 120 char-limit.", "author": "shanthoosh", "createdAt": "2020-07-17T05:39:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIxNDM3Ng=="}], "type": "inlineReview"}, {"oid": "d89f2f57535cee39439d7a16b49058f305dc18cd", "url": "https://github.com/apache/samza/commit/d89f2f57535cee39439d7a16b49058f305dc18cd", "message": "Address review comments.", "committedDate": "2020-07-17T05:39:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUyOTgyMg==", "url": "https://github.com/apache/samza/pull/1401#discussion_r456529822", "bodyText": "Can we add a simple unit test or at least a comment to avoid that this happens again in the future ?", "author": "b-slim", "createdAt": "2020-07-17T15:55:09Z", "path": "samza-sql/src/main/java/org/apache/samza/sql/avro/AvroRelConverter.java", "diffHunk": "@@ -125,11 +125,18 @@ public static void fetchFieldNamesAndValuesFromIndexedRecord(IndexedRecord recor\n         .collect(Collectors.toList()));\n   }\n \n-  private static SamzaSqlRelRecord convertToRelRecord(IndexedRecord avroRecord, Schema schema) {\n+  private static SamzaSqlRelRecord convertToRelRecord(IndexedRecord avroRecord) {\n     List<Object> fieldValues = new ArrayList<>();\n     List<String> fieldNames = new ArrayList<>();\n     if (avroRecord != null) {\n-      fetchFieldNamesAndValuesFromIndexedRecord(avroRecord, fieldNames, fieldValues, schema);\n+      fieldNames.addAll(", "originalCommit": "d89f2f57535cee39439d7a16b49058f305dc18cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU3ODI1MQ==", "url": "https://github.com/apache/samza/pull/1401#discussion_r457578251", "bodyText": "Done. Added unit tests for Avro record conversion with non-nullable union type.", "author": "shanthoosh", "createdAt": "2020-07-20T17:34:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUyOTgyMg=="}], "type": "inlineReview"}, {"oid": "13c02ec3733a09134ea1a4c09f1923cd3c6acabb", "url": "https://github.com/apache/samza/commit/13c02ec3733a09134ea1a4c09f1923cd3c6acabb", "message": "Address review comments\n\nAdd unit tests for non-nullable union conversion with nested records.", "committedDate": "2020-07-20T17:32:50Z", "type": "commit"}, {"oid": "43142aee99e0debdb0699fe7b1efdc3f7af7726c", "url": "https://github.com/apache/samza/commit/43142aee99e0debdb0699fe7b1efdc3f7af7726c", "message": "Fix rat failures.", "committedDate": "2020-07-20T17:37:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU4MzgwMQ==", "url": "https://github.com/apache/samza/pull/1401#discussion_r457583801", "bodyText": "I am wondering if this can be auto generated by the Build/Testing framework at runtime ? using something like avro-maven-plugin  here is an example https://github.com/alexholmes/avro-maven.\nFYI this is a suggestion comment and can be tackled as a followup if it is has a big scope.", "author": "b-slim", "createdAt": "2020-07-20T17:44:03Z", "path": "samza-sql/src/test/java/org/apache/samza/sql/avro/schemas/ComplexUnion.java", "diffHunk": "@@ -0,0 +1,143 @@\n+/**\n+ * Autogenerated by Avro\n+ * \n+ * DO NOT EDIT DIRECTLY\n+ */\n+package org.apache.samza.sql.avro.schemas;  ", "originalCommit": "13c02ec3733a09134ea1a4c09f1923cd3c6acabb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU4NjM2MQ==", "url": "https://github.com/apache/samza/pull/1401#discussion_r457586361", "bodyText": "I agree that auto-generating the avro-code using gradle plugin at build-time would be better and i'll create a follow-up ticket for it.", "author": "shanthoosh", "createdAt": "2020-07-20T17:48:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU4MzgwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYwNjQ4Ng==", "url": "https://github.com/apache/samza/pull/1401#discussion_r457606486", "bodyText": "Were you able to repro the issue with this unit test by having the older changes (with cached schema) ?", "author": "atoomula", "createdAt": "2020-07-20T18:24:27Z", "path": "samza-sql/src/test/java/org/apache/samza/sql/avro/TestAvroRelConversion.java", "diffHunk": "@@ -231,6 +240,42 @@ public void testComplexRecordConversion() throws IOException {\n     validateAvroSerializedData(serializedData, testStrValue);\n   }\n \n+  @Test\n+  public void testComplexUnionConversionShouldWorkWithBothStringAndIntTypes() throws Exception {", "originalCommit": "43142aee99e0debdb0699fe7b1efdc3f7af7726c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}