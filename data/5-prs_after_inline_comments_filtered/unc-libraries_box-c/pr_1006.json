{"pr_number": 1006, "pr_title": "Objects with embargoes failing migration", "pr_createdAt": "2020-06-08T12:44:16Z", "pr_url": "https://github.com/UNC-Libraries/box-c/pull/1006", "timeline": [{"oid": "0007a7bf5dd7420ee2180484212b97e183da07bb", "url": "https://github.com/UNC-Libraries/box-c/commit/0007a7bf5dd7420ee2180484212b97e183da07bb", "message": "Add milliseconds to embargo date for boxc3 objects", "committedDate": "2020-06-05T16:57:54Z", "type": "commit"}, {"oid": "a16aec8ae66b9658fa977614a306217b8a5f7770", "url": "https://github.com/UNC-Libraries/box-c/commit/a16aec8ae66b9658fa977614a306217b8a5f7770", "message": "Add embargoes as TypedLiterals", "committedDate": "2020-06-05T19:53:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY4Njc4MA==", "url": "https://github.com/UNC-Libraries/box-c/pull/1006#discussion_r436686780", "bodyText": "you shouldn't need to create a new model to create a literal here, since you have existing models. You can do bxc3Resc.getModel() or bxc5Resc.getModel(). There's also a static method for creating typed literals, ResourceFactory.createTypedLiteral() which would probably work, although I haven't tried it", "author": "bbpennel", "createdAt": "2020-06-08T13:13:06Z", "path": "migration-util/src/main/java/edu/unc/lib/dcr/migration/content/ACLTransformationHelpers.java", "diffHunk": "@@ -72,9 +75,9 @@ private ACLTransformationHelpers() {\n      */\n     public static void transformPatronAccess(Resource bxc3Resc, Resource bxc5Resc, PID parentPid) {\n         // For admin units, cache patron access settings so they can be used for children instead\n+        Model unitModel = createDefaultModel();", "originalCommit": "a16aec8ae66b9658fa977614a306217b8a5f7770", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY5MDQ5NA==", "url": "https://github.com/UNC-Libraries/box-c/pull/1006#discussion_r436690494", "bodyText": "Since this is just carrying over an embargo from a parent object that already went throught the formatting method, I think you can skip most of these steps and just do something like destResc.addLiteral(CdrAcl.embargoUntil, parentUnitResc.getProperty(CdrAcl.embargoUntil).getObject()). If that doesn't work, you can probably at least skip the formatEmbargoDate call here", "author": "bbpennel", "createdAt": "2020-06-08T13:17:09Z", "path": "migration-util/src/main/java/edu/unc/lib/dcr/migration/content/ACLTransformationHelpers.java", "diffHunk": "@@ -195,8 +200,10 @@ private static void mergeParentPatronAcls(PID parentPid, Resource destResc, Prop\n         if (parentUnitModel != null) {\n             Resource parentUnitResc = parentUnitModel.getResource(parentPid.getRepositoryPath());\n             if (!destResc.hasProperty(CdrAcl.embargoUntil) && parentUnitResc.hasProperty(CdrAcl.embargoUntil)) {\n-                destResc.addLiteral(CdrAcl.embargoUntil,\n-                        parentUnitResc.getProperty(CdrAcl.embargoUntil).getLiteral().getString());\n+                String embargoDate = formatEmbargoDate(parentUnitResc.getProperty(", "originalCommit": "a16aec8ae66b9658fa977614a306217b8a5f7770", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY5NTUzMg==", "url": "https://github.com/UNC-Libraries/box-c/pull/1006#discussion_r436695532", "bodyText": "Adding the milliseconds in here probably means that the actual code is never receiving the embargo without milliseconds during the test run. It should be fine to leave off adding the milliseconds here, which would also be more true to the actual data coming from boxc3.\nAlso, a note that you shouldn't need to create a new model to create the typed literal down below, as in my previous comment.", "author": "bbpennel", "createdAt": "2020-06-08T13:22:32Z", "path": "migration-util/src/test/java/edu/unc/lib/dcr/migration/content/ACLTransformationHelpersTest.java", "diffHunk": "@@ -335,7 +355,16 @@ private void setInheritFromParent(Resource bxc3Resc, boolean inherit) {\n     }\n \n     private void addEmbargo(Resource bxc3Resc, String embargoEndDate) {\n-        bxc3Resc.addLiteral(CDRProperty.embargoUntil.getProperty(), embargoEndDate);\n+        String regex = \"^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}$\"; // ISO date without milliseconds", "originalCommit": "a16aec8ae66b9658fa977614a306217b8a5f7770", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjcxMTA3MA==", "url": "https://github.com/UNC-Libraries/box-c/pull/1006#discussion_r436711070", "bodyText": "this isn't verifying that the right embargo end date is set anymore, could you add that back in?", "author": "bbpennel", "createdAt": "2020-06-08T13:43:06Z", "path": "migration-util/src/test/java/edu/unc/lib/dcr/migration/content/ACLTransformationHelpersTest.java", "diffHunk": "@@ -378,7 +407,7 @@ private void assertNoRolesAssignedforAuthenticated(Resource bxc5Resc) {\n \n     private void assertHasEmbargo(String embargoEndDate, Resource bxc5Resc) {\n         assertTrue(\"Resource \" + bxc5Resc.getURI() + \" did not have expected embargo with end date \" + embargoEndDate,\n-                bxc5Resc.hasLiteral(CdrAcl.embargoUntil, embargoEndDate));", "originalCommit": "a16aec8ae66b9658fa977614a306217b8a5f7770", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b92b5a0add006420c144ab170f178cfe722e491b", "url": "https://github.com/UNC-Libraries/box-c/commit/b92b5a0add006420c144ab170f178cfe722e491b", "message": "* Update the way typedLiterals are added\n* Remove unneeded test code", "committedDate": "2020-06-08T18:32:13Z", "type": "commit"}, {"oid": "b92b5a0add006420c144ab170f178cfe722e491b", "url": "https://github.com/UNC-Libraries/box-c/commit/b92b5a0add006420c144ab170f178cfe722e491b", "message": "* Update the way typedLiterals are added\n* Remove unneeded test code", "committedDate": "2020-06-08T18:32:13Z", "type": "forcePushed"}]}