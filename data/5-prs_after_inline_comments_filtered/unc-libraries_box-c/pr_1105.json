{"pr_number": 1105, "pr_title": "Only mark a file completed if it passes virus checking", "pr_createdAt": "2020-10-16T19:41:58Z", "pr_url": "https://github.com/UNC-Libraries/box-c/pull/1105", "timeline": [{"oid": "5d0932f0d8302a471186da831426b7af3b238dd7", "url": "https://github.com/UNC-Libraries/box-c/commit/5d0932f0d8302a471186da831426b7af3b238dd7", "message": "Only mark a file completed if it passes virus checking", "committedDate": "2020-10-16T19:41:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTcwNDE1MA==", "url": "https://github.com/UNC-Libraries/box-c/pull/1105#discussion_r509704150", "bodyText": "I don't think you want this in a finally block, it means that it will still run even if the fail() up above was called", "author": "bbpennel", "createdAt": "2020-10-21T21:15:47Z", "path": "deposit/src/test/java/edu/unc/lib/deposit/validate/VirusScanJobTest.java", "diffHunk": "@@ -205,6 +207,38 @@ public void failOneScanTest() throws Exception {\n         }\n     }\n \n+    @Test\n+    public void failAndRescanTest() throws Exception {\n+        when(scanResult.getStatus()).thenReturn(Status.FAILED)\n+                .thenReturn(Status.PASSED);\n+        File textFile = new File(depositDir, \"text.txt\");\n+        doReturn(scanResult).when(clamScan).scan(argThat(new FileArgumentMatcher(textFile)));\n+\n+        Model model = job.getWritableModel();\n+        Bag depBag = model.createBag(depositPid.getRepositoryPath());\n+\n+        PID filePid = addFileObject(depBag, textFile);\n+\n+        job.closeModel();\n+\n+        try {\n+            job.run();\n+            fail();\n+        } catch(JobFailedException e) {\n+            verify(jobStatusFactory).setTotalCompletion(eq(jobUUID), eq(1));\n+            verify(jobStatusFactory, times(0)).incrCompletion(eq(jobUUID), eq(0));\n+        } finally {", "originalCommit": "5d0932f0d8302a471186da831426b7af3b238dd7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTcwNjA4NA==", "url": "https://github.com/UNC-Libraries/box-c/pull/1105#discussion_r509706084", "bodyText": "very minor, but you can use never() instead of times(0)", "author": "bbpennel", "createdAt": "2020-10-21T21:18:07Z", "path": "deposit/src/test/java/edu/unc/lib/deposit/validate/VirusScanJobTest.java", "diffHunk": "@@ -205,6 +207,38 @@ public void failOneScanTest() throws Exception {\n         }\n     }\n \n+    @Test\n+    public void failAndRescanTest() throws Exception {\n+        when(scanResult.getStatus()).thenReturn(Status.FAILED)\n+                .thenReturn(Status.PASSED);\n+        File textFile = new File(depositDir, \"text.txt\");\n+        doReturn(scanResult).when(clamScan).scan(argThat(new FileArgumentMatcher(textFile)));\n+\n+        Model model = job.getWritableModel();\n+        Bag depBag = model.createBag(depositPid.getRepositoryPath());\n+\n+        PID filePid = addFileObject(depBag, textFile);\n+\n+        job.closeModel();\n+\n+        try {\n+            job.run();\n+            fail();\n+        } catch(JobFailedException e) {\n+            verify(jobStatusFactory).setTotalCompletion(eq(jobUUID), eq(1));\n+            verify(jobStatusFactory, times(0)).incrCompletion(eq(jobUUID), eq(0));", "originalCommit": "5d0932f0d8302a471186da831426b7af3b238dd7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3c9c2d66e5d0f4e11af55a3f8269c45edf3859d2", "url": "https://github.com/UNC-Libraries/box-c/commit/3c9c2d66e5d0f4e11af55a3f8269c45edf3859d2", "message": "Minor test cleanup", "committedDate": "2020-10-22T12:14:22Z", "type": "commit"}]}