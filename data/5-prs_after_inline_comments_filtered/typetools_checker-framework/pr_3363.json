{"pr_number": 3363, "pr_title": "Remove javadoc.astub file; fixes #3357", "pr_createdAt": "2020-06-08T23:48:37Z", "pr_url": "https://github.com/typetools/checker-framework/pull/3363", "timeline": [{"oid": "bda9bd749a7c8f647c80d0569ee5467fee32dcd8", "url": "https://github.com/typetools/checker-framework/commit/bda9bd749a7c8f647c80d0569ee5467fee32dcd8", "message": "Remove javadoc.astub file", "committedDate": "2020-06-08T20:01:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU1MTQwNw==", "url": "https://github.com/typetools/checker-framework/pull/3363#discussion_r437551407", "bodyText": "Should this be in org.checkerframework.javacutil.SystemUtil?", "author": "smillst", "createdAt": "2020-06-09T16:10:26Z", "path": "checker/src/test/java/tests/NullnessJavadocTest.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package tests;\n+\n+import java.io.File;\n+import java.util.Collections;\n+import java.util.List;\n+import org.checkerframework.framework.test.CheckerFrameworkPerDirectoryTest;\n+import org.junit.runners.Parameterized.Parameters;\n+\n+/**\n+ * JUnit tests for the Nullness Checker -- testing type-checking of code that uses Javadoc classes.\n+ */\n+public class NullnessJavadocTest extends CheckerFrameworkPerDirectoryTest {\n+\n+    /** @param testFiles the files containing test code, which will be type-checked */\n+    public NullnessJavadocTest(List<File> testFiles) {\n+        super(\n+                testFiles,\n+                org.checkerframework.checker.nullness.NullnessChecker.class,\n+                \"nullness\",\n+                toolsJar(),\n+                \"-Anomsgtext\");\n+    }\n+\n+    /**\n+     * Return a list that contains the pathname to the tools.jar file, if it exists.\n+     *\n+     * @returns a list that contains the pathname to the tools.jar file, or an empty list\n+     */\n+    private static List<String> toolsJar() {", "originalCommit": "bda9bd749a7c8f647c80d0569ee5467fee32dcd8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU1MjAwMw==", "url": "https://github.com/typetools/checker-framework/pull/3363#discussion_r437552003", "bodyText": "This should use org.checkerframework.javacutil.SystemUtil#getJreVersion.", "author": "smillst", "createdAt": "2020-06-09T16:11:17Z", "path": "checker/src/test/java/tests/NullnessJavadocTest.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package tests;\n+\n+import java.io.File;\n+import java.util.Collections;\n+import java.util.List;\n+import org.checkerframework.framework.test.CheckerFrameworkPerDirectoryTest;\n+import org.junit.runners.Parameterized.Parameters;\n+\n+/**\n+ * JUnit tests for the Nullness Checker -- testing type-checking of code that uses Javadoc classes.\n+ */\n+public class NullnessJavadocTest extends CheckerFrameworkPerDirectoryTest {\n+\n+    /** @param testFiles the files containing test code, which will be type-checked */\n+    public NullnessJavadocTest(List<File> testFiles) {\n+        super(\n+                testFiles,\n+                org.checkerframework.checker.nullness.NullnessChecker.class,\n+                \"nullness\",\n+                toolsJar(),\n+                \"-Anomsgtext\");\n+    }\n+\n+    /**\n+     * Return a list that contains the pathname to the tools.jar file, if it exists.\n+     *\n+     * @returns a list that contains the pathname to the tools.jar file, or an empty list\n+     */\n+    private static List<String> toolsJar() {\n+        if (!System.getProperty(\"java.version\").startsWith(\"1.8\")) {", "originalCommit": "bda9bd749a7c8f647c80d0569ee5467fee32dcd8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1f8d9b4d81382e23bc5bccb966892fce713108c6", "url": "https://github.com/typetools/checker-framework/commit/1f8d9b4d81382e23bc5bccb966892fce713108c6", "message": "Move code to SystemUtil.java", "committedDate": "2020-06-09T17:46:54Z", "type": "commit"}, {"oid": "b90eea2ab4b87f4fb34184f5ee49798fa8f52f28", "url": "https://github.com/typetools/checker-framework/commit/b90eea2ab4b87f4fb34184f5ee49798fa8f52f28", "message": "Fix visibility", "committedDate": "2020-06-09T19:07:16Z", "type": "commit"}, {"oid": "477eb458e1ae6119059fee952b199c8acd1e2b6a", "url": "https://github.com/typetools/checker-framework/commit/477eb458e1ae6119059fee952b199c8acd1e2b6a", "message": "Fix typo", "committedDate": "2020-06-09T19:30:03Z", "type": "commit"}, {"oid": "e52e0475c43ce6bc8effd2a8d2e74ce7dfe75155", "url": "https://github.com/typetools/checker-framework/commit/e52e0475c43ce6bc8effd2a8d2e74ce7dfe75155", "message": "Add diagnostics to test whether tools.jar file exists", "committedDate": "2020-06-09T22:23:45Z", "type": "commit"}, {"oid": "e52e0475c43ce6bc8effd2a8d2e74ce7dfe75155", "url": "https://github.com/typetools/checker-framework/commit/e52e0475c43ce6bc8effd2a8d2e74ce7dfe75155", "message": "Add diagnostics to test whether tools.jar file exists", "committedDate": "2020-06-09T22:23:45Z", "type": "forcePushed"}, {"oid": "939c2899446972c9f5ce472ffae8e1bcb1e44678", "url": "https://github.com/typetools/checker-framework/commit/939c2899446972c9f5ce472ffae8e1bcb1e44678", "message": "Fix problem with format string", "committedDate": "2020-06-09T22:57:09Z", "type": "commit"}]}