{"pr_number": 1397, "pr_title": "Eliminate Java-11 HttpClient plugin class version errors", "pr_createdAt": "2020-09-14T06:22:00Z", "pr_url": "https://github.com/elastic/apm-agent-java/pull/1397", "timeline": [{"oid": "8a53a5999c5ceaa564b575f5534c679930a93c21", "url": "https://github.com/elastic/apm-agent-java/commit/8a53a5999c5ceaa564b575f5534c679930a93c21", "message": "Eliminate Java-11 HttpClient plugin class version errors", "committedDate": "2020-09-14T06:19:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODA0Njg3Mg==", "url": "https://github.com/elastic/apm-agent-java/pull/1397#discussion_r488046872", "bodyText": "I'm not really a fan of having something specific to the httpclient, as adding other similar plugins for java11 will need to modify this file again.\nThus keeping only the log as debug would probably be better for now, as we don't have any reliable way to tell if a plugin/instrumentation is expected to be compatible with a given version, the only thing that we can detect is which version it has been compiled as target (we could read this from bytecode).", "author": "SylvainJuge", "createdAt": "2020-09-14T16:00:09Z", "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/util/DependencyInjectingServiceLoader.java", "diffHunk": "@@ -138,7 +138,12 @@ private T instantiate(ClassLoader classLoader, String implementation) {\n             String msg = String.format(\"unable to instantiate '%s', please check descriptor in META-INF\", implementation);\n             throw new ServiceConfigurationError(msg, e);\n         } catch(UnsupportedClassVersionError e) {\n-            logger.error(String.format(\"unable to instantiate '%s', unsupported class version error: %s\", implementation, e.getMessage()));\n+            // The Java 11 HttpClient plugin is compiled with Java 11, so this is expected\n+            if (!implementation.startsWith(\"co.elastic.apm.agent.httpclient\")) {", "originalCommit": "8a53a5999c5ceaa564b575f5534c679930a93c21", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE2MjAwMw==", "url": "https://github.com/elastic/apm-agent-java/pull/1397#discussion_r489162003", "bodyText": "OK, I will change to debug.\nIn my view - this is indeed an error and I want indication of doing something wrong in my plugin. We shouldn't try to load classes where they shouldn't be loaded.\nI may do a separate PR to propose a different way to deal with that. It will include some refactoring, but I think it would be the right way to go.", "author": "eyalkoren", "createdAt": "2020-09-16T04:57:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODA0Njg3Mg=="}], "type": "inlineReview"}, {"oid": "70386318896d016b3e2353f91e4942798289f97d", "url": "https://github.com/elastic/apm-agent-java/commit/70386318896d016b3e2353f91e4942798289f97d", "message": "Always log unsupported class file version errors at debug level", "committedDate": "2020-09-16T05:03:19Z", "type": "commit"}, {"oid": "c831ec9e14adc3197b45b68376899e03ec71cae1", "url": "https://github.com/elastic/apm-agent-java/commit/c831ec9e14adc3197b45b68376899e03ec71cae1", "message": "Merge branch 'master' into java11-httpclient-plugin-compilation-fix", "committedDate": "2020-09-16T07:28:01Z", "type": "commit"}]}