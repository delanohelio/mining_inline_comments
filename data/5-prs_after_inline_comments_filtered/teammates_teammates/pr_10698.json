{"pr_number": 10698, "pr_title": "[#10697] Performance improvements when getting session result as students", "pr_createdAt": "2020-09-07T05:37:03Z", "pr_url": "https://github.com/TEAMMATES/teammates/pull/10698", "timeline": [{"oid": "4eae2bf10245ff72c5eb1a1c45490ab168657c69", "url": "https://github.com/TEAMMATES/teammates/commit/4eae2bf10245ff72c5eb1a1c45490ab168657c69", "message": "proactively fetch viewable responses", "committedDate": "2020-09-07T05:28:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDMwMjQ3Mg==", "url": "https://github.com/TEAMMATES/teammates/pull/10698#discussion_r484302472", "bodyText": "This is more likely than not user error so it should not return any 500-resulting exception (like this one)", "author": "wkurniawan07", "createdAt": "2020-09-07T09:15:58Z", "path": "src/main/java/teammates/logic/core/FeedbackSessionsLogic.java", "diffHunk": "@@ -654,11 +652,27 @@ public SessionResultsBundle getSessionResultsForUser(\n         }\n \n         // load response(s)\n+        StudentAttributes student = getStudent(courseId, userEmail, role);\n         List<FeedbackResponseAttributes> allResponses;\n-        if (questionId == null) {\n-            allResponses = frLogic.getFeedbackResponsesForSessionInSection(feedbackSessionName, courseId, section);\n+        if (isInstructor(role)) {\n+            // load all response for instructors and passively filter them later\n+            if (questionId == null) {\n+                allResponses = frLogic.getFeedbackResponsesForSessionInSection(feedbackSessionName, courseId, section);\n+            } else {\n+                allResponses = frLogic.getFeedbackResponsesForQuestionInSection(questionId, section);\n+            }\n         } else {\n-            allResponses = frLogic.getFeedbackResponsesForQuestionInSection(questionId, section);\n+            if (section != null) {\n+                throw new UnsupportedOperationException(\"Specify section filtering is not supported for student result\");", "originalCommit": "4eae2bf10245ff72c5eb1a1c45490ab168657c69", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}