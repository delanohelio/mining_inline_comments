{"pr_number": 10667, "pr_title": "[#9536] Feedback Text Question E2E Test", "pr_createdAt": "2020-08-31T17:51:52Z", "pr_url": "https://github.com/TEAMMATES/teammates/pull/10667", "timeline": [{"oid": "ee20348735a68fc0719eeb0f17b6ce7569d04395", "url": "https://github.com/TEAMMATES/teammates/commit/ee20348735a68fc0719eeb0f17b6ce7569d04395", "message": "Add backdoor methods for submit page", "committedDate": "2020-08-31T17:15:53Z", "type": "commit"}, {"oid": "8b57b6436d10049cd97f242d0a0d7c720fd63e52", "url": "https://github.com/TEAMMATES/teammates/commit/8b57b6436d10049cd97f242d0a0d7c720fd63e52", "message": "Add generic methods for FeedbackSubmitPage and InstructorFeedbackEditPage", "committedDate": "2020-08-31T17:44:47Z", "type": "commit"}, {"oid": "eeea49742d1af28935b567eb4a1e8de18b57df87", "url": "https://github.com/TEAMMATES/teammates/commit/eeea49742d1af28935b567eb4a1e8de18b57df87", "message": "Add FeedbackTextQuestionE2ETest", "committedDate": "2020-08-31T17:50:39Z", "type": "commit"}, {"oid": "8b3da223dd2caf8c9c1f5f05c1133c43428fdd1d", "url": "https://github.com/TEAMMATES/teammates/commit/8b3da223dd2caf8c9c1f5f05c1133c43428fdd1d", "message": "Merge branch 'master' of https://github.com/TEAMMATES/teammates into text-question-e2e\n\n# Conflicts:\n#\tsrc/e2e/java/teammates/e2e/cases/BaseTestCaseWithBackDoorApiAccess.java\n#\tsrc/e2e/java/teammates/e2e/pageobjects/FeedbackSubmitPage.java\n#\tsrc/e2e/java/teammates/e2e/pageobjects/InstructorFeedbackEditPage.java\n#\tsrc/e2e/java/teammates/e2e/util/BackDoor.java\n#\tsrc/e2e/resources/testng-e2e.xml", "committedDate": "2020-09-01T05:28:30Z", "type": "commit"}, {"oid": "52ac2346a72e3fc0cfdb8405c15ad163ef759ff9", "url": "https://github.com/TEAMMATES/teammates/commit/52ac2346a72e3fc0cfdb8405c15ad163ef759ff9", "message": "Add waitForPageToLoad", "committedDate": "2020-09-01T06:03:53Z", "type": "commit"}, {"oid": "52ac2346a72e3fc0cfdb8405c15ad163ef759ff9", "url": "https://github.com/TEAMMATES/teammates/commit/52ac2346a72e3fc0cfdb8405c15ad163ef759ff9", "message": "Add waitForPageToLoad", "committedDate": "2020-09-01T06:03:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE5MzQ4Mg==", "url": "https://github.com/TEAMMATES/teammates/pull/10667#discussion_r481193482", "bodyText": "Minor suggestion: Shall we make this string longer to see if the response length field can work? Maybe a string that has 100 words?", "author": "rrtheonlyone", "createdAt": "2020-09-01T14:46:19Z", "path": "src/e2e/java/teammates/e2e/cases/e2e/FeedbackTextQuestionE2ETest.java", "diffHunk": "@@ -0,0 +1,134 @@\n+package teammates.e2e.cases.e2e;\n+\n+import org.testng.annotations.Test;\n+\n+import teammates.common.datatransfer.attributes.CourseAttributes;\n+import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;\n+import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;\n+import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;\n+import teammates.common.datatransfer.attributes.InstructorAttributes;\n+import teammates.common.datatransfer.attributes.StudentAttributes;\n+import teammates.common.datatransfer.questions.FeedbackTextQuestionDetails;\n+import teammates.common.datatransfer.questions.FeedbackTextResponseDetails;\n+import teammates.common.util.AppUrl;\n+import teammates.common.util.Const;\n+import teammates.common.util.StringHelper;\n+import teammates.e2e.pageobjects.AppPage;\n+import teammates.e2e.pageobjects.FeedbackSubmitPage;\n+import teammates.e2e.pageobjects.InstructorFeedbackEditPage;\n+\n+/**\n+ * SUT: {@link Const.WebPageURIs#INSTRUCTOR_SESSION_EDIT_PAGE}, {@link Const.WebPageURIs#SESSION_SUBMISSION_PAGE}\n+ *      specifically for text questions.\n+ */\n+public class FeedbackTextQuestionE2ETest extends BaseE2ETestCase {\n+    InstructorAttributes instructor;\n+    CourseAttributes course;\n+    FeedbackSessionAttributes feedbackSession;\n+    StudentAttributes student;\n+\n+    @Override\n+    protected void prepareTestData() {\n+        testData = loadDataBundle(\"/FeedbackTextQuestionE2ETest.json\");\n+        removeAndRestoreDataBundle(testData);\n+\n+        instructor = testData.instructors.get(\"instructor\");\n+        course = testData.courses.get(\"course\");\n+        feedbackSession = testData.feedbackSessions.get(\"openSession\");\n+        student = testData.students.get(\"alice.tmms@FTextQuestionE2eT.CS2104\");\n+    }\n+\n+    @Test\n+    public void testAll() {\n+        testEditPage();\n+        testSubmitPage();\n+    }\n+\n+    private void testEditPage() {\n+        AppUrl url = createUrl(Const.WebPageURIs.INSTRUCTOR_SESSION_EDIT_PAGE)\n+                .withUserId(instructor.googleId)\n+                .withCourseId(course.getId())\n+                .withSessionName(feedbackSession.getFeedbackSessionName());\n+        InstructorFeedbackEditPage feedbackEditPage = loginAdminToPage(url, InstructorFeedbackEditPage.class);\n+        feedbackEditPage.waitForPageToLoad();\n+\n+        ______TS(\"verify loaded question\");\n+        FeedbackQuestionAttributes loadedQuestion = testData.feedbackQuestions.get(\"qn1ForFirstSession\");\n+        FeedbackTextQuestionDetails questionDetails = (FeedbackTextQuestionDetails) loadedQuestion.getQuestionDetails();\n+        feedbackEditPage.verifyTextQuestionDetails(1, questionDetails);\n+\n+        ______TS(\"add new question\");\n+        // add new question exactly like loaded question\n+        loadedQuestion.setQuestionNumber(2);\n+        feedbackEditPage.addTextQuestion(loadedQuestion);\n+\n+        feedbackEditPage.verifyTextQuestionDetails(2, questionDetails);\n+        verifyPresentInDatastore(loadedQuestion);\n+\n+        ______TS(\"copy question\");\n+        FeedbackQuestionAttributes copiedQuestion = testData.feedbackQuestions.get(\"qn1ForSecondSession\");\n+        questionDetails = (FeedbackTextQuestionDetails) copiedQuestion.getQuestionDetails();\n+        feedbackEditPage.copyQuestion(copiedQuestion.getCourseId(),\n+                copiedQuestion.getQuestionDetails().getQuestionText());\n+        copiedQuestion.courseId = course.getId();\n+        copiedQuestion.feedbackSessionName = feedbackSession.getFeedbackSessionName();\n+        copiedQuestion.setQuestionNumber(3);\n+\n+        feedbackEditPage.verifyTextQuestionDetails(3, questionDetails);\n+        verifyPresentInDatastore(copiedQuestion);\n+\n+        ______TS(\"edit question\");\n+        questionDetails.setRecommendedLength(200);\n+        copiedQuestion.questionDetails = questionDetails;\n+        feedbackEditPage.editTextQuestion(3, questionDetails);\n+\n+        feedbackEditPage.verifyTextQuestionDetails(3, questionDetails);\n+        verifyPresentInDatastore(copiedQuestion);\n+    }\n+\n+    private void testSubmitPage() {\n+        AppUrl url = createUrl(Const.WebPageURIs.SESSION_SUBMISSION_PAGE)\n+                .withUserId(student.googleId)\n+                .withCourseId(student.course)\n+                .withSessionName(feedbackSession.getFeedbackSessionName())\n+                .withRegistrationKey(StringHelper.encrypt(getStudent(student).key));\n+        FeedbackSubmitPage feedbackSubmitPage = loginAdminToPage(url, FeedbackSubmitPage.class);\n+        feedbackSubmitPage.waitForPageToLoad();\n+\n+        ______TS(\"verify loaded question\");\n+        FeedbackQuestionAttributes question = testData.feedbackQuestions.get(\"qn1ForFirstSession\");\n+        InstructorAttributes receiver = testData.instructors.get(\"instructor\");\n+        question.setQuestionNumber(1);\n+        feedbackSubmitPage.verifyTextQuestion(1, (FeedbackTextQuestionDetails) question.getQuestionDetails());\n+\n+        ______TS(\"submit response\");\n+        String questionId = getFeedbackQuestion(question).getId();\n+        FeedbackResponseAttributes response = getResponse(questionId, receiver, \"<p>This is the response for qn 1</p>\");\n+        feedbackSubmitPage.submitTextResponse(1, receiver.getName(), response);\n+\n+        verifyPresentInDatastore(response);\n+\n+        ______TS(\"check previous response\");\n+        feedbackSubmitPage = AppPage.getNewPageInstance(browser, url, FeedbackSubmitPage.class);\n+        feedbackSubmitPage.waitForPageToLoad();\n+        feedbackSubmitPage.verifyTextResponse(1, receiver.getName(), response);\n+\n+        ______TS(\"edit response\");\n+        String editedResponse = \"<p><strong>Edited response</strong></p>\";", "originalCommit": "52ac2346a72e3fc0cfdb8405c15ad163ef759ff9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMxMzAzNQ==", "url": "https://github.com/TEAMMATES/teammates/pull/10667#discussion_r481313035", "bodyText": "Actually above there is a string of length 7 that aims to test the counting functionality of the response length field. I believe increasing it to 100 should not make a difference unless we are testing for handling of excess number of words,  which I think should not be done for E2E test.", "author": "jtankw3", "createdAt": "2020-09-01T17:28:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE5MzQ4Mg=="}], "type": "inlineReview"}, {"oid": "98f66875db77eee690396a81faebd847bdcb4905", "url": "https://github.com/TEAMMATES/teammates/commit/98f66875db77eee690396a81faebd847bdcb4905", "message": "Merge branch 'master' into text-question-e2e", "committedDate": "2020-09-03T06:07:28Z", "type": "commit"}, {"oid": "c79a6f487eb792c2e3d933367e945feca8e062e2", "url": "https://github.com/TEAMMATES/teammates/commit/c79a6f487eb792c2e3d933367e945feca8e062e2", "message": "Merge branch 'master' into text-question-e2e", "committedDate": "2020-09-03T09:39:44Z", "type": "commit"}]}