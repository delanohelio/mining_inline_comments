{"pr_number": 10766, "pr_title": "[#9536] Instructor Course Details Page E2E Test", "pr_createdAt": "2020-10-06T08:04:57Z", "pr_url": "https://github.com/TEAMMATES/teammates/pull/10766", "timeline": [{"oid": "efc19a1464cb0aefa8c496807ec90c775b54282c", "url": "https://github.com/TEAMMATES/teammates/commit/efc19a1464cb0aefa8c496807ec90c775b54282c", "message": "Add InstructorCourseDetailsPageE2ETest", "committedDate": "2020-10-06T08:00:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ5NTc3MA==", "url": "https://github.com/TEAMMATES/teammates/pull/10766#discussion_r500495770", "bodyText": "Consider using System.lineSeparator() to make this work across OS", "author": "wkurniawan07", "createdAt": "2020-10-06T18:06:09Z", "path": "src/e2e/java/teammates/e2e/pageobjects/InstructorCourseDetailsPage.java", "diffHunk": "@@ -0,0 +1,153 @@\n+package teammates.e2e.pageobjects;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import java.util.List;\n+import java.util.StringJoiner;\n+\n+import org.openqa.selenium.By;\n+import org.openqa.selenium.NoSuchElementException;\n+import org.openqa.selenium.WebElement;\n+import org.openqa.selenium.support.FindBy;\n+\n+import teammates.common.datatransfer.attributes.CourseAttributes;\n+import teammates.common.datatransfer.attributes.InstructorAttributes;\n+import teammates.common.datatransfer.attributes.StudentAttributes;\n+\n+/**\n+ * Represents the instructor course details page of the website.\n+ */\n+public class InstructorCourseDetailsPage extends AppPage {\n+    @FindBy(id = \"course-id\")\n+    private WebElement courseIdField;\n+\n+    @FindBy(id = \"course-name\")\n+    private WebElement courseNameField;\n+\n+    @FindBy(id = \"num-sections\")\n+    private WebElement numSectionsField;\n+\n+    @FindBy(id = \"num-teams\")\n+    private WebElement numTeamsField;\n+\n+    @FindBy(id = \"num-students\")\n+    private WebElement numStudentsField;\n+\n+    @FindBy(id = \"instructors\")\n+    private WebElement instructorsField;\n+\n+    public InstructorCourseDetailsPage(Browser browser) {\n+        super(browser);\n+    }\n+\n+    @Override\n+    protected boolean containsExpectedPageContents() {\n+        return getPageTitle().contains(\"Course Details\");\n+    }\n+\n+    public void verifyCourseDetails(CourseAttributes course, InstructorAttributes[] instructors,\n+                                    int numSections, int numTeams, int numStudents) {\n+        assertEquals(course.getId(), courseIdField.getText());\n+        assertEquals(course.getName(), courseNameField.getText());\n+        assertEquals(Integer.toString(numSections), numSectionsField.getText());\n+        assertEquals(Integer.toString(numTeams), numTeamsField.getText());\n+        assertEquals(Integer.toString(numStudents), numStudentsField.getText());\n+        assertEquals(getExpectedInstructorString(instructors), instructorsField.getText());\n+    }\n+\n+    public void verifyStudentDetails(StudentAttributes[] students) {\n+        verifyTableBodyValues(getStudentList(), getExpectedStudentValues(students));\n+    }\n+\n+    public void verifyNumStudents(int expected) {\n+        assertEquals(expected, getNumStudents());\n+    }\n+\n+    public void sendInvite(StudentAttributes student) {\n+        clickAndConfirm(getSendInviteButton(student));\n+    }\n+\n+    public void remindAllToJoin() {\n+        clickAndConfirm(waitForElementPresence(By.id(\"btn-remind-all\")));\n+    }\n+\n+    public void downloadStudentList() {\n+        click(waitForElementPresence(By.id(\"btn-download\")));\n+    }\n+\n+    public void sortByName() {\n+        click(browser.driver.findElement(By.id(\"sort-by-name\")));\n+        waitUntilAnimationFinish();\n+    }\n+\n+    public void sortByStatus() {\n+        click(browser.driver.findElement(By.id(\"sort-by-status\")));\n+        waitUntilAnimationFinish();\n+    }\n+\n+    public void deleteStudent(StudentAttributes student) {\n+        clickAndConfirm(getDeleteButton(student));\n+    }\n+\n+    public void deleteAllStudents() {\n+        clickAndConfirm(waitForElementPresence(By.id(\"btn-delete-all\")));\n+    }\n+\n+    private String getExpectedInstructorString(InstructorAttributes[] instructors) {\n+        StringJoiner expected = new StringJoiner(\"\\n\");", "originalCommit": "efc19a1464cb0aefa8c496807ec90c775b54282c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ5NjQ4OA==", "url": "https://github.com/TEAMMATES/teammates/pull/10766#discussion_r500496488", "bodyText": "Nitpicking here. Looks kind of weird that one item is beside the {, can put everything in new line instead? Same goes for the instructors variable above.", "author": "wkurniawan07", "createdAt": "2020-10-06T18:07:22Z", "path": "src/e2e/java/teammates/e2e/cases/e2e/InstructorCourseDetailsPageE2ETest.java", "diffHunk": "@@ -0,0 +1,124 @@\n+package teammates.e2e.cases.e2e;\n+\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+import teammates.common.datatransfer.attributes.CourseAttributes;\n+import teammates.common.datatransfer.attributes.InstructorAttributes;\n+import teammates.common.datatransfer.attributes.StudentAttributes;\n+import teammates.common.util.AppUrl;\n+import teammates.common.util.Const;\n+import teammates.e2e.pageobjects.InstructorCourseDetailsPage;\n+import teammates.e2e.util.TestProperties;\n+\n+/**\n+ * SUT: {@link Const.WebPageURIs#INSTRUCTOR_COURSE_DETAILS_PAGE}.\n+ */\n+public class InstructorCourseDetailsPageE2ETest extends BaseE2ETestCase {\n+    private StudentAttributes student;\n+    private CourseAttributes course;\n+\n+    private String fileName;\n+\n+    @Override\n+    protected void prepareTestData() {\n+        testData = loadDataBundle(\"/InstructorCourseDetailsPageE2ETest.json\");\n+        student = testData.students.get(\"charlie.tmms@ICDetailsE2eT.CS2104\");\n+        if (!TestProperties.isDevServer()) {\n+            student.email = TestProperties.TEST_STUDENT1_ACCOUNT;\n+        }\n+\n+        removeAndRestoreDataBundle(testData);\n+        course = testData.courses.get(\"ICDetailsE2eT.CS2104\");\n+        fileName = \"/\" + course.getId() + \"_studentList.csv\";\n+    }\n+\n+    @BeforeClass\n+    public void classSetup() {\n+        deleteDownloadsFile(fileName);\n+    }\n+\n+    @Test\n+    public void allTests() {\n+        AppUrl detailsPageUrl = createUrl(Const.WebPageURIs.INSTRUCTOR_COURSE_DETAILS_PAGE)\n+                .withUserId(testData.instructors.get(\"ICDetailsE2eT.instr\").googleId)\n+                .withCourseId(course.getId());\n+        InstructorCourseDetailsPage detailsPage = loginAdminToPage(detailsPageUrl, InstructorCourseDetailsPage.class);\n+\n+        ______TS(\"verify loaded details\");\n+        InstructorAttributes[] instructors = { testData.instructors.get(\"ICDetailsE2eT.instr\"),\n+                testData.instructors.get(\"ICDetailsE2eT.instr2\"),\n+        };\n+        StudentAttributes[] students = { testData.students.get(\"alice.tmms@ICDetailsE2eT.CS2104\"),", "originalCommit": "efc19a1464cb0aefa8c496807ec90c775b54282c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f1164b5bf9367b4d54b9ebf2959357f547d8d236", "url": "https://github.com/TEAMMATES/teammates/commit/f1164b5bf9367b4d54b9ebf2959357f547d8d236", "message": "Use System.lineSeparator to make test work across OS", "committedDate": "2020-10-07T05:03:18Z", "type": "commit"}, {"oid": "1ea1a143230039a5fa2a91a3d9b43d70776299ed", "url": "https://github.com/TEAMMATES/teammates/commit/1ea1a143230039a5fa2a91a3d9b43d70776299ed", "message": "Fix spacing", "committedDate": "2020-10-07T05:03:25Z", "type": "commit"}, {"oid": "dc76562e5aa427378d8d6f6862552e51ee9fba69", "url": "https://github.com/TEAMMATES/teammates/commit/dc76562e5aa427378d8d6f6862552e51ee9fba69", "message": "Merge branch 'master' of https://github.com/TEAMMATES/teammates into instructor-course-details-e2e", "committedDate": "2020-10-07T05:03:44Z", "type": "commit"}, {"oid": "0be5ed614000547e08388d9186a09225ef7bedff", "url": "https://github.com/TEAMMATES/teammates/commit/0be5ed614000547e08388d9186a09225ef7bedff", "message": "Merge branch 'master' into instructor-course-details-e2e", "committedDate": "2020-10-07T07:19:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkzNTY3NQ==", "url": "https://github.com/TEAMMATES/teammates/pull/10766#discussion_r505935675", "bodyText": "why is 4 hardcoded here^", "author": "rrtheonlyone", "createdAt": "2020-10-16T00:23:58Z", "path": "src/e2e/java/teammates/e2e/cases/e2e/InstructorCourseDetailsPageE2ETest.java", "diffHunk": "@@ -0,0 +1,126 @@\n+package teammates.e2e.cases.e2e;\n+\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+import teammates.common.datatransfer.attributes.CourseAttributes;\n+import teammates.common.datatransfer.attributes.InstructorAttributes;\n+import teammates.common.datatransfer.attributes.StudentAttributes;\n+import teammates.common.util.AppUrl;\n+import teammates.common.util.Const;\n+import teammates.e2e.pageobjects.InstructorCourseDetailsPage;\n+import teammates.e2e.util.TestProperties;\n+\n+/**\n+ * SUT: {@link Const.WebPageURIs#INSTRUCTOR_COURSE_DETAILS_PAGE}.\n+ */\n+public class InstructorCourseDetailsPageE2ETest extends BaseE2ETestCase {\n+    private StudentAttributes student;\n+    private CourseAttributes course;\n+\n+    private String fileName;\n+\n+    @Override\n+    protected void prepareTestData() {\n+        testData = loadDataBundle(\"/InstructorCourseDetailsPageE2ETest.json\");\n+        student = testData.students.get(\"charlie.tmms@ICDetailsE2eT.CS2104\");\n+        if (!TestProperties.isDevServer()) {\n+            student.email = TestProperties.TEST_STUDENT1_ACCOUNT;\n+        }\n+\n+        removeAndRestoreDataBundle(testData);\n+        course = testData.courses.get(\"ICDetailsE2eT.CS2104\");\n+        fileName = \"/\" + course.getId() + \"_studentList.csv\";\n+    }\n+\n+    @BeforeClass\n+    public void classSetup() {\n+        deleteDownloadsFile(fileName);\n+    }\n+\n+    @Test\n+    public void allTests() {\n+        AppUrl detailsPageUrl = createUrl(Const.WebPageURIs.INSTRUCTOR_COURSE_DETAILS_PAGE)\n+                .withUserId(testData.instructors.get(\"ICDetailsE2eT.instr\").googleId)\n+                .withCourseId(course.getId());\n+        InstructorCourseDetailsPage detailsPage = loginAdminToPage(detailsPageUrl, InstructorCourseDetailsPage.class);\n+\n+        ______TS(\"verify loaded details\");\n+        InstructorAttributes[] instructors = {\n+                testData.instructors.get(\"ICDetailsE2eT.instr\"),\n+                testData.instructors.get(\"ICDetailsE2eT.instr2\"),\n+        };\n+        StudentAttributes[] students = {\n+                testData.students.get(\"alice.tmms@ICDetailsE2eT.CS2104\"),\n+                testData.students.get(\"charlie.tmms@ICDetailsE2eT.CS2104\"),\n+                testData.students.get(\"benny.tmms@ICDetailsE2eT.CS2104\"),\n+                testData.students.get(\"danny.tmms@ICDetailsE2eT.CS2104\"),\n+        };\n+\n+        verifyCourseDetails(detailsPage, course, instructors, students);\n+        detailsPage.verifyNumStudents(4);", "originalCommit": "0be5ed614000547e08388d9186a09225ef7bedff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkzNjUwNw==", "url": "https://github.com/TEAMMATES/teammates/pull/10766#discussion_r505936507", "bodyText": "I find it odd that we only check that one student is in the downloaded file. Shouldn't we check and ensure all the student's are there?\nverifyDownloadedFile name is a little misleading - I think a better name is verifyDownloadedFileContainsContent (since all it does is check if something is inside - it is not an equality check)", "author": "rrtheonlyone", "createdAt": "2020-10-16T00:27:04Z", "path": "src/e2e/java/teammates/e2e/cases/e2e/InstructorCourseDetailsPageE2ETest.java", "diffHunk": "@@ -0,0 +1,126 @@\n+package teammates.e2e.cases.e2e;\n+\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+import teammates.common.datatransfer.attributes.CourseAttributes;\n+import teammates.common.datatransfer.attributes.InstructorAttributes;\n+import teammates.common.datatransfer.attributes.StudentAttributes;\n+import teammates.common.util.AppUrl;\n+import teammates.common.util.Const;\n+import teammates.e2e.pageobjects.InstructorCourseDetailsPage;\n+import teammates.e2e.util.TestProperties;\n+\n+/**\n+ * SUT: {@link Const.WebPageURIs#INSTRUCTOR_COURSE_DETAILS_PAGE}.\n+ */\n+public class InstructorCourseDetailsPageE2ETest extends BaseE2ETestCase {\n+    private StudentAttributes student;\n+    private CourseAttributes course;\n+\n+    private String fileName;\n+\n+    @Override\n+    protected void prepareTestData() {\n+        testData = loadDataBundle(\"/InstructorCourseDetailsPageE2ETest.json\");\n+        student = testData.students.get(\"charlie.tmms@ICDetailsE2eT.CS2104\");\n+        if (!TestProperties.isDevServer()) {\n+            student.email = TestProperties.TEST_STUDENT1_ACCOUNT;\n+        }\n+\n+        removeAndRestoreDataBundle(testData);\n+        course = testData.courses.get(\"ICDetailsE2eT.CS2104\");\n+        fileName = \"/\" + course.getId() + \"_studentList.csv\";\n+    }\n+\n+    @BeforeClass\n+    public void classSetup() {\n+        deleteDownloadsFile(fileName);\n+    }\n+\n+    @Test\n+    public void allTests() {\n+        AppUrl detailsPageUrl = createUrl(Const.WebPageURIs.INSTRUCTOR_COURSE_DETAILS_PAGE)\n+                .withUserId(testData.instructors.get(\"ICDetailsE2eT.instr\").googleId)\n+                .withCourseId(course.getId());\n+        InstructorCourseDetailsPage detailsPage = loginAdminToPage(detailsPageUrl, InstructorCourseDetailsPage.class);\n+\n+        ______TS(\"verify loaded details\");\n+        InstructorAttributes[] instructors = {\n+                testData.instructors.get(\"ICDetailsE2eT.instr\"),\n+                testData.instructors.get(\"ICDetailsE2eT.instr2\"),\n+        };\n+        StudentAttributes[] students = {\n+                testData.students.get(\"alice.tmms@ICDetailsE2eT.CS2104\"),\n+                testData.students.get(\"charlie.tmms@ICDetailsE2eT.CS2104\"),\n+                testData.students.get(\"benny.tmms@ICDetailsE2eT.CS2104\"),\n+                testData.students.get(\"danny.tmms@ICDetailsE2eT.CS2104\"),\n+        };\n+\n+        verifyCourseDetails(detailsPage, course, instructors, students);\n+        detailsPage.verifyNumStudents(4);\n+        detailsPage.verifyStudentDetails(students);\n+\n+        ______TS(\"send invite\");\n+        detailsPage.sendInvite(student);\n+\n+        detailsPage.verifyStatusMessage(\"An email has been sent to \" + student.getEmail());\n+        String expectedEmailSubject = \"TEAMMATES: Invitation to join course [\"\n+                + course.getName() + \"][\" + course.getId() + \"]\";\n+        verifyEmailSent(student.getEmail(), expectedEmailSubject);\n+\n+        ______TS(\"remind all students to join\");\n+        detailsPage.remindAllToJoin();\n+\n+        detailsPage.verifyStatusMessage(\"Emails have been sent to unregistered students.\");\n+        verifyEmailSent(student.getEmail(), expectedEmailSubject);\n+\n+        ______TS(\"download student list\");\n+        detailsPage.downloadStudentList();\n+        String status = student.googleId.isEmpty() ? \"Yet to Join\" : \"Joined\";\n+        String lastName = student.getName().split(\" \")[1];\n+        String[] studentInfo = { student.getTeam(), student.getName(), lastName, status, student.getEmail() };\n+        List<String> expectedContent = Arrays.asList(\"Course ID,\" + course.getId(),\n+                \"Course Name,\" + course.getName(), String.join(\",\", studentInfo));\n+        verifyDownloadedFile(fileName, expectedContent);", "originalCommit": "0be5ed614000547e08388d9186a09225ef7bedff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjEzODA1Nw==", "url": "https://github.com/TEAMMATES/teammates/pull/10766#discussion_r506138057", "bodyText": "This is my suggestion. If you want to ensure all students are there, that's the job of a unit test. Here is just a list of some representative content, although admittedly more wouldn't hurt.", "author": "wkurniawan07", "createdAt": "2020-10-16T07:51:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkzNjUwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjMxMDE5NA==", "url": "https://github.com/TEAMMATES/teammates/pull/10766#discussion_r506310194", "bodyText": "Yes agreed, a unit test is better for the above check", "author": "rrtheonlyone", "createdAt": "2020-10-16T11:19:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkzNjUwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkzNjg0NQ==", "url": "https://github.com/TEAMMATES/teammates/pull/10766#discussion_r505936845", "bodyText": "Here, we also check email sent for just one student. Shouldn't we check all unregistered students get an email (which I think is all for this case)?", "author": "rrtheonlyone", "createdAt": "2020-10-16T00:28:31Z", "path": "src/e2e/java/teammates/e2e/cases/e2e/InstructorCourseDetailsPageE2ETest.java", "diffHunk": "@@ -0,0 +1,126 @@\n+package teammates.e2e.cases.e2e;\n+\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+import teammates.common.datatransfer.attributes.CourseAttributes;\n+import teammates.common.datatransfer.attributes.InstructorAttributes;\n+import teammates.common.datatransfer.attributes.StudentAttributes;\n+import teammates.common.util.AppUrl;\n+import teammates.common.util.Const;\n+import teammates.e2e.pageobjects.InstructorCourseDetailsPage;\n+import teammates.e2e.util.TestProperties;\n+\n+/**\n+ * SUT: {@link Const.WebPageURIs#INSTRUCTOR_COURSE_DETAILS_PAGE}.\n+ */\n+public class InstructorCourseDetailsPageE2ETest extends BaseE2ETestCase {\n+    private StudentAttributes student;\n+    private CourseAttributes course;\n+\n+    private String fileName;\n+\n+    @Override\n+    protected void prepareTestData() {\n+        testData = loadDataBundle(\"/InstructorCourseDetailsPageE2ETest.json\");\n+        student = testData.students.get(\"charlie.tmms@ICDetailsE2eT.CS2104\");\n+        if (!TestProperties.isDevServer()) {\n+            student.email = TestProperties.TEST_STUDENT1_ACCOUNT;\n+        }\n+\n+        removeAndRestoreDataBundle(testData);\n+        course = testData.courses.get(\"ICDetailsE2eT.CS2104\");\n+        fileName = \"/\" + course.getId() + \"_studentList.csv\";\n+    }\n+\n+    @BeforeClass\n+    public void classSetup() {\n+        deleteDownloadsFile(fileName);\n+    }\n+\n+    @Test\n+    public void allTests() {\n+        AppUrl detailsPageUrl = createUrl(Const.WebPageURIs.INSTRUCTOR_COURSE_DETAILS_PAGE)\n+                .withUserId(testData.instructors.get(\"ICDetailsE2eT.instr\").googleId)\n+                .withCourseId(course.getId());\n+        InstructorCourseDetailsPage detailsPage = loginAdminToPage(detailsPageUrl, InstructorCourseDetailsPage.class);\n+\n+        ______TS(\"verify loaded details\");\n+        InstructorAttributes[] instructors = {\n+                testData.instructors.get(\"ICDetailsE2eT.instr\"),\n+                testData.instructors.get(\"ICDetailsE2eT.instr2\"),\n+        };\n+        StudentAttributes[] students = {\n+                testData.students.get(\"alice.tmms@ICDetailsE2eT.CS2104\"),\n+                testData.students.get(\"charlie.tmms@ICDetailsE2eT.CS2104\"),\n+                testData.students.get(\"benny.tmms@ICDetailsE2eT.CS2104\"),\n+                testData.students.get(\"danny.tmms@ICDetailsE2eT.CS2104\"),\n+        };\n+\n+        verifyCourseDetails(detailsPage, course, instructors, students);\n+        detailsPage.verifyNumStudents(4);\n+        detailsPage.verifyStudentDetails(students);\n+\n+        ______TS(\"send invite\");\n+        detailsPage.sendInvite(student);\n+\n+        detailsPage.verifyStatusMessage(\"An email has been sent to \" + student.getEmail());\n+        String expectedEmailSubject = \"TEAMMATES: Invitation to join course [\"\n+                + course.getName() + \"][\" + course.getId() + \"]\";\n+        verifyEmailSent(student.getEmail(), expectedEmailSubject);\n+\n+        ______TS(\"remind all students to join\");\n+        detailsPage.remindAllToJoin();\n+\n+        detailsPage.verifyStatusMessage(\"Emails have been sent to unregistered students.\");\n+        verifyEmailSent(student.getEmail(), expectedEmailSubject);", "originalCommit": "0be5ed614000547e08388d9186a09225ef7bedff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjEzOTUyMQ==", "url": "https://github.com/TEAMMATES/teammates/pull/10766#discussion_r506139521", "bodyText": "On top of the same reasoning as before (just one representative is enough for an E2E test), there is another more fundamental reason here. Checking email sent in production server requires actual account and even within the actual account some setups are required. It's not feasible to set up more accounts than required just for the sake of this.", "author": "wkurniawan07", "createdAt": "2020-10-16T07:53:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkzNjg0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjMwOTUyNQ==", "url": "https://github.com/TEAMMATES/teammates/pull/10766#discussion_r506309525", "bodyText": "Yes that is true! I agree", "author": "rrtheonlyone", "createdAt": "2020-10-16T11:18:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkzNjg0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkzNzg0OQ==", "url": "https://github.com/TEAMMATES/teammates/pull/10766#discussion_r505937849", "bodyText": "3 hardcoded here too^ (although this is just a minor nit..)", "author": "rrtheonlyone", "createdAt": "2020-10-16T00:32:33Z", "path": "src/e2e/java/teammates/e2e/cases/e2e/InstructorCourseDetailsPageE2ETest.java", "diffHunk": "@@ -0,0 +1,126 @@\n+package teammates.e2e.cases.e2e;\n+\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+import teammates.common.datatransfer.attributes.CourseAttributes;\n+import teammates.common.datatransfer.attributes.InstructorAttributes;\n+import teammates.common.datatransfer.attributes.StudentAttributes;\n+import teammates.common.util.AppUrl;\n+import teammates.common.util.Const;\n+import teammates.e2e.pageobjects.InstructorCourseDetailsPage;\n+import teammates.e2e.util.TestProperties;\n+\n+/**\n+ * SUT: {@link Const.WebPageURIs#INSTRUCTOR_COURSE_DETAILS_PAGE}.\n+ */\n+public class InstructorCourseDetailsPageE2ETest extends BaseE2ETestCase {\n+    private StudentAttributes student;\n+    private CourseAttributes course;\n+\n+    private String fileName;\n+\n+    @Override\n+    protected void prepareTestData() {\n+        testData = loadDataBundle(\"/InstructorCourseDetailsPageE2ETest.json\");\n+        student = testData.students.get(\"charlie.tmms@ICDetailsE2eT.CS2104\");\n+        if (!TestProperties.isDevServer()) {\n+            student.email = TestProperties.TEST_STUDENT1_ACCOUNT;\n+        }\n+\n+        removeAndRestoreDataBundle(testData);\n+        course = testData.courses.get(\"ICDetailsE2eT.CS2104\");\n+        fileName = \"/\" + course.getId() + \"_studentList.csv\";\n+    }\n+\n+    @BeforeClass\n+    public void classSetup() {\n+        deleteDownloadsFile(fileName);\n+    }\n+\n+    @Test\n+    public void allTests() {\n+        AppUrl detailsPageUrl = createUrl(Const.WebPageURIs.INSTRUCTOR_COURSE_DETAILS_PAGE)\n+                .withUserId(testData.instructors.get(\"ICDetailsE2eT.instr\").googleId)\n+                .withCourseId(course.getId());\n+        InstructorCourseDetailsPage detailsPage = loginAdminToPage(detailsPageUrl, InstructorCourseDetailsPage.class);\n+\n+        ______TS(\"verify loaded details\");\n+        InstructorAttributes[] instructors = {\n+                testData.instructors.get(\"ICDetailsE2eT.instr\"),\n+                testData.instructors.get(\"ICDetailsE2eT.instr2\"),\n+        };\n+        StudentAttributes[] students = {\n+                testData.students.get(\"alice.tmms@ICDetailsE2eT.CS2104\"),\n+                testData.students.get(\"charlie.tmms@ICDetailsE2eT.CS2104\"),\n+                testData.students.get(\"benny.tmms@ICDetailsE2eT.CS2104\"),\n+                testData.students.get(\"danny.tmms@ICDetailsE2eT.CS2104\"),\n+        };\n+\n+        verifyCourseDetails(detailsPage, course, instructors, students);\n+        detailsPage.verifyNumStudents(4);\n+        detailsPage.verifyStudentDetails(students);\n+\n+        ______TS(\"send invite\");\n+        detailsPage.sendInvite(student);\n+\n+        detailsPage.verifyStatusMessage(\"An email has been sent to \" + student.getEmail());\n+        String expectedEmailSubject = \"TEAMMATES: Invitation to join course [\"\n+                + course.getName() + \"][\" + course.getId() + \"]\";\n+        verifyEmailSent(student.getEmail(), expectedEmailSubject);\n+\n+        ______TS(\"remind all students to join\");\n+        detailsPage.remindAllToJoin();\n+\n+        detailsPage.verifyStatusMessage(\"Emails have been sent to unregistered students.\");\n+        verifyEmailSent(student.getEmail(), expectedEmailSubject);\n+\n+        ______TS(\"download student list\");\n+        detailsPage.downloadStudentList();\n+        String status = student.googleId.isEmpty() ? \"Yet to Join\" : \"Joined\";\n+        String lastName = student.getName().split(\" \")[1];\n+        String[] studentInfo = { student.getTeam(), student.getName(), lastName, status, student.getEmail() };\n+        List<String> expectedContent = Arrays.asList(\"Course ID,\" + course.getId(),\n+                \"Course Name,\" + course.getName(), String.join(\",\", studentInfo));\n+        verifyDownloadedFile(fileName, expectedContent);\n+\n+        ______TS(\"delete student\");\n+        detailsPage.sortByName();\n+        detailsPage.sortByStatus();\n+        StudentAttributes[] studentsAfterDelete = { students[3], students[0], students[2] };\n+        detailsPage.deleteStudent(student);\n+\n+        detailsPage.verifyStatusMessage(\"Student is successfully deleted from course \\\"\"\n+                + course.getId() + \"\\\"\");\n+        detailsPage.verifyNumStudents(3);", "originalCommit": "0be5ed614000547e08388d9186a09225ef7bedff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkzOTQwNA==", "url": "https://github.com/TEAMMATES/teammates/pull/10766#discussion_r505939404", "bodyText": "This one is really your call! I would actually sort and remove the student.", "author": "rrtheonlyone", "createdAt": "2020-10-16T00:35:57Z", "path": "src/e2e/java/teammates/e2e/cases/e2e/InstructorCourseDetailsPageE2ETest.java", "diffHunk": "@@ -0,0 +1,126 @@\n+package teammates.e2e.cases.e2e;\n+\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+import teammates.common.datatransfer.attributes.CourseAttributes;\n+import teammates.common.datatransfer.attributes.InstructorAttributes;\n+import teammates.common.datatransfer.attributes.StudentAttributes;\n+import teammates.common.util.AppUrl;\n+import teammates.common.util.Const;\n+import teammates.e2e.pageobjects.InstructorCourseDetailsPage;\n+import teammates.e2e.util.TestProperties;\n+\n+/**\n+ * SUT: {@link Const.WebPageURIs#INSTRUCTOR_COURSE_DETAILS_PAGE}.\n+ */\n+public class InstructorCourseDetailsPageE2ETest extends BaseE2ETestCase {\n+    private StudentAttributes student;\n+    private CourseAttributes course;\n+\n+    private String fileName;\n+\n+    @Override\n+    protected void prepareTestData() {\n+        testData = loadDataBundle(\"/InstructorCourseDetailsPageE2ETest.json\");\n+        student = testData.students.get(\"charlie.tmms@ICDetailsE2eT.CS2104\");\n+        if (!TestProperties.isDevServer()) {\n+            student.email = TestProperties.TEST_STUDENT1_ACCOUNT;\n+        }\n+\n+        removeAndRestoreDataBundle(testData);\n+        course = testData.courses.get(\"ICDetailsE2eT.CS2104\");\n+        fileName = \"/\" + course.getId() + \"_studentList.csv\";\n+    }\n+\n+    @BeforeClass\n+    public void classSetup() {\n+        deleteDownloadsFile(fileName);\n+    }\n+\n+    @Test\n+    public void allTests() {\n+        AppUrl detailsPageUrl = createUrl(Const.WebPageURIs.INSTRUCTOR_COURSE_DETAILS_PAGE)\n+                .withUserId(testData.instructors.get(\"ICDetailsE2eT.instr\").googleId)\n+                .withCourseId(course.getId());\n+        InstructorCourseDetailsPage detailsPage = loginAdminToPage(detailsPageUrl, InstructorCourseDetailsPage.class);\n+\n+        ______TS(\"verify loaded details\");\n+        InstructorAttributes[] instructors = {\n+                testData.instructors.get(\"ICDetailsE2eT.instr\"),\n+                testData.instructors.get(\"ICDetailsE2eT.instr2\"),\n+        };\n+        StudentAttributes[] students = {\n+                testData.students.get(\"alice.tmms@ICDetailsE2eT.CS2104\"),\n+                testData.students.get(\"charlie.tmms@ICDetailsE2eT.CS2104\"),\n+                testData.students.get(\"benny.tmms@ICDetailsE2eT.CS2104\"),\n+                testData.students.get(\"danny.tmms@ICDetailsE2eT.CS2104\"),\n+        };\n+\n+        verifyCourseDetails(detailsPage, course, instructors, students);\n+        detailsPage.verifyNumStudents(4);\n+        detailsPage.verifyStudentDetails(students);\n+\n+        ______TS(\"send invite\");\n+        detailsPage.sendInvite(student);\n+\n+        detailsPage.verifyStatusMessage(\"An email has been sent to \" + student.getEmail());\n+        String expectedEmailSubject = \"TEAMMATES: Invitation to join course [\"\n+                + course.getName() + \"][\" + course.getId() + \"]\";\n+        verifyEmailSent(student.getEmail(), expectedEmailSubject);\n+\n+        ______TS(\"remind all students to join\");\n+        detailsPage.remindAllToJoin();\n+\n+        detailsPage.verifyStatusMessage(\"Emails have been sent to unregistered students.\");\n+        verifyEmailSent(student.getEmail(), expectedEmailSubject);\n+\n+        ______TS(\"download student list\");\n+        detailsPage.downloadStudentList();\n+        String status = student.googleId.isEmpty() ? \"Yet to Join\" : \"Joined\";\n+        String lastName = student.getName().split(\" \")[1];\n+        String[] studentInfo = { student.getTeam(), student.getName(), lastName, status, student.getEmail() };\n+        List<String> expectedContent = Arrays.asList(\"Course ID,\" + course.getId(),\n+                \"Course Name,\" + course.getName(), String.join(\",\", studentInfo));\n+        verifyDownloadedFile(fileName, expectedContent);\n+\n+        ______TS(\"delete student\");\n+        detailsPage.sortByName();\n+        detailsPage.sortByStatus();\n+        StudentAttributes[] studentsAfterDelete = { students[3], students[0], students[2] };", "originalCommit": "0be5ed614000547e08388d9186a09225ef7bedff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjgwODc2MQ==", "url": "https://github.com/TEAMMATES/teammates/pull/10766#discussion_r506808761", "bodyText": "I think since it is an array it is simpler to just make a new one. Might swap everything to use Lists instead at a later date.", "author": "jtankw3", "createdAt": "2020-10-17T05:39:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkzOTQwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkzOTU3NQ==", "url": "https://github.com/TEAMMATES/teammates/pull/10766#discussion_r505939575", "bodyText": "why not use a loop here for these three", "author": "rrtheonlyone", "createdAt": "2020-10-16T00:36:18Z", "path": "src/e2e/java/teammates/e2e/cases/e2e/InstructorCourseDetailsPageE2ETest.java", "diffHunk": "@@ -0,0 +1,126 @@\n+package teammates.e2e.cases.e2e;\n+\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+import teammates.common.datatransfer.attributes.CourseAttributes;\n+import teammates.common.datatransfer.attributes.InstructorAttributes;\n+import teammates.common.datatransfer.attributes.StudentAttributes;\n+import teammates.common.util.AppUrl;\n+import teammates.common.util.Const;\n+import teammates.e2e.pageobjects.InstructorCourseDetailsPage;\n+import teammates.e2e.util.TestProperties;\n+\n+/**\n+ * SUT: {@link Const.WebPageURIs#INSTRUCTOR_COURSE_DETAILS_PAGE}.\n+ */\n+public class InstructorCourseDetailsPageE2ETest extends BaseE2ETestCase {\n+    private StudentAttributes student;\n+    private CourseAttributes course;\n+\n+    private String fileName;\n+\n+    @Override\n+    protected void prepareTestData() {\n+        testData = loadDataBundle(\"/InstructorCourseDetailsPageE2ETest.json\");\n+        student = testData.students.get(\"charlie.tmms@ICDetailsE2eT.CS2104\");\n+        if (!TestProperties.isDevServer()) {\n+            student.email = TestProperties.TEST_STUDENT1_ACCOUNT;\n+        }\n+\n+        removeAndRestoreDataBundle(testData);\n+        course = testData.courses.get(\"ICDetailsE2eT.CS2104\");\n+        fileName = \"/\" + course.getId() + \"_studentList.csv\";\n+    }\n+\n+    @BeforeClass\n+    public void classSetup() {\n+        deleteDownloadsFile(fileName);\n+    }\n+\n+    @Test\n+    public void allTests() {\n+        AppUrl detailsPageUrl = createUrl(Const.WebPageURIs.INSTRUCTOR_COURSE_DETAILS_PAGE)\n+                .withUserId(testData.instructors.get(\"ICDetailsE2eT.instr\").googleId)\n+                .withCourseId(course.getId());\n+        InstructorCourseDetailsPage detailsPage = loginAdminToPage(detailsPageUrl, InstructorCourseDetailsPage.class);\n+\n+        ______TS(\"verify loaded details\");\n+        InstructorAttributes[] instructors = {\n+                testData.instructors.get(\"ICDetailsE2eT.instr\"),\n+                testData.instructors.get(\"ICDetailsE2eT.instr2\"),\n+        };\n+        StudentAttributes[] students = {\n+                testData.students.get(\"alice.tmms@ICDetailsE2eT.CS2104\"),\n+                testData.students.get(\"charlie.tmms@ICDetailsE2eT.CS2104\"),\n+                testData.students.get(\"benny.tmms@ICDetailsE2eT.CS2104\"),\n+                testData.students.get(\"danny.tmms@ICDetailsE2eT.CS2104\"),\n+        };\n+\n+        verifyCourseDetails(detailsPage, course, instructors, students);\n+        detailsPage.verifyNumStudents(4);\n+        detailsPage.verifyStudentDetails(students);\n+\n+        ______TS(\"send invite\");\n+        detailsPage.sendInvite(student);\n+\n+        detailsPage.verifyStatusMessage(\"An email has been sent to \" + student.getEmail());\n+        String expectedEmailSubject = \"TEAMMATES: Invitation to join course [\"\n+                + course.getName() + \"][\" + course.getId() + \"]\";\n+        verifyEmailSent(student.getEmail(), expectedEmailSubject);\n+\n+        ______TS(\"remind all students to join\");\n+        detailsPage.remindAllToJoin();\n+\n+        detailsPage.verifyStatusMessage(\"Emails have been sent to unregistered students.\");\n+        verifyEmailSent(student.getEmail(), expectedEmailSubject);\n+\n+        ______TS(\"download student list\");\n+        detailsPage.downloadStudentList();\n+        String status = student.googleId.isEmpty() ? \"Yet to Join\" : \"Joined\";\n+        String lastName = student.getName().split(\" \")[1];\n+        String[] studentInfo = { student.getTeam(), student.getName(), lastName, status, student.getEmail() };\n+        List<String> expectedContent = Arrays.asList(\"Course ID,\" + course.getId(),\n+                \"Course Name,\" + course.getName(), String.join(\",\", studentInfo));\n+        verifyDownloadedFile(fileName, expectedContent);\n+\n+        ______TS(\"delete student\");\n+        detailsPage.sortByName();\n+        detailsPage.sortByStatus();\n+        StudentAttributes[] studentsAfterDelete = { students[3], students[0], students[2] };\n+        detailsPage.deleteStudent(student);\n+\n+        detailsPage.verifyStatusMessage(\"Student is successfully deleted from course \\\"\"\n+                + course.getId() + \"\\\"\");\n+        detailsPage.verifyNumStudents(3);\n+        detailsPage.verifyStudentDetails(studentsAfterDelete);\n+        verifyAbsentInDatastore(student);\n+\n+        ______TS(\"delete all students\");\n+        detailsPage.deleteAllStudents();\n+\n+        detailsPage.verifyStatusMessage(\"All the students have been removed from the course\");\n+        detailsPage.verifyNumStudents(0);\n+        verifyAbsentInDatastore(studentsAfterDelete[0]);", "originalCommit": "0be5ed614000547e08388d9186a09225ef7bedff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "883acb773bb55f7a49120e9188bd08f553c6f543", "url": "https://github.com/TEAMMATES/teammates/commit/883acb773bb55f7a49120e9188bd08f553c6f543", "message": "Merge branch 'master' of https://github.com/TEAMMATES/teammates into instructor-course-details-e2e", "committedDate": "2020-10-17T04:47:33Z", "type": "commit"}, {"oid": "c2fe2ca6aa50aefa013559479af191cc060f756a", "url": "https://github.com/TEAMMATES/teammates/commit/c2fe2ca6aa50aefa013559479af191cc060f756a", "message": "Clean up code", "committedDate": "2020-10-17T05:05:31Z", "type": "commit"}, {"oid": "56f0ee23d148e80ca6f3419a8ca7b8e2818affd4", "url": "https://github.com/TEAMMATES/teammates/commit/56f0ee23d148e80ca6f3419a8ca7b8e2818affd4", "message": "Add section test data", "committedDate": "2020-10-17T06:40:21Z", "type": "commit"}]}