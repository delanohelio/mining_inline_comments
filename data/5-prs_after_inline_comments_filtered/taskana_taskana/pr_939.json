{"pr_number": 939, "pr_title": "TSK-1131 updateOwner on multiple tasks", "pr_createdAt": "2020-02-20T13:15:10Z", "pr_url": "https://github.com/Taskana/taskana/pull/939", "timeline": [{"oid": "b4824ddce8181e5d2b19a23ad7780c60ac260600", "url": "https://github.com/Taskana/taskana/commit/b4824ddce8181e5d2b19a23ad7780c60ac260600", "message": "TSK-1131 updateOwner on multiple tasks", "committedDate": "2020-02-20T13:56:13Z", "type": "forcePushed"}, {"oid": "8dcec2b1348341f569f7d0899f70e88e848b2e28", "url": "https://github.com/Taskana/taskana/commit/8dcec2b1348341f569f7d0899f70e88e848b2e28", "message": "TSK-1131 updateOwner on multiple tasks", "committedDate": "2020-02-20T14:32:58Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzIzODU0Mw==", "url": "https://github.com/Taskana/taskana/pull/939#discussion_r383238543", "bodyText": "This would be better placed in TaskanaEngine or even better in CurrentUserContext?", "author": "holgerhagen", "createdAt": "2020-02-24T12:32:20Z", "path": "lib/taskana-core/src/main/java/pro/taskana/task/internal/TaskServiceImpl.java", "diffHunk": "@@ -757,6 +808,77 @@ Duration calculateDuration(\n     return result;\n   }\n \n+  private void addErrorsToResultObject(\n+      String owner,\n+      BulkOperationResults<String, TaskanaException> bulkLog,\n+      List<MinimalTaskSummary> existingMinimalTaskSummaries) {\n+    for (MinimalTaskSummary taskSummary : existingMinimalTaskSummaries) {\n+      if (!owner.equals(taskSummary.getOwner())) { // owner was not set\n+        if (!taskSummary.getTaskState().equals(TaskState.READY)) { // due to invalid state\n+          bulkLog.addError(\n+              taskSummary.getTaskId(),\n+              new InvalidStateException(\n+                  \"Task \"\n+                      + taskSummary.getTaskId()\n+                      + \" is in state \"\n+                      + taskSummary.getTaskState()));\n+        } else { // due to unknown reason\n+          bulkLog.addError(\n+              taskSummary.getTaskId(),\n+              new UpdateFailedException(\n+                  \"Could not set owner of Task \" + taskSummary.getTaskId() + \".\"));\n+        }\n+      }\n+    }\n+  }\n+\n+  private void handleNonExistingTasks(\n+      List<String> taskIds,\n+      List<MinimalTaskSummary> existingMinimalTaskSummaries,\n+      BulkOperationResults<String, TaskanaException> bulkLog) {\n+    List<String> nonExistingTaskIds = new ArrayList<>(taskIds);\n+    List<String> existingTaskIds =\n+        existingMinimalTaskSummaries.stream()\n+            .map(MinimalTaskSummary::getTaskId)\n+            .collect(Collectors.toList());\n+    nonExistingTaskIds.removeAll(existingTaskIds);\n+    for (String taskId : nonExistingTaskIds) {\n+      bulkLog.addError(taskId, new TaskNotFoundException(taskId, \"Task was not found\"));\n+    }\n+  }\n+\n+  private List<String> filterForAuthorized(\n+      List<String> taskIds, BulkOperationResults<String, TaskanaException> bulkLog) {\n+    List<String> accessIds = getAccessIds();\n+    List<String> tasksAuthorizedFor = new ArrayList<>(taskIds);\n+    if (accessIds != null) {\n+      List<String> tasksNotAuthorizedFor =\n+          taskMapper.filterTaskIdsNotAuthorizedFor(taskIds, accessIds);\n+      tasksAuthorizedFor.removeAll(tasksNotAuthorizedFor);\n+      String currentUserId = CurrentUserContext.getUserid();\n+      for (String taskId : tasksNotAuthorizedFor) {\n+        bulkLog.addError(\n+            taskId,\n+            new NotAuthorizedException(\n+                \"Current user not authorized for task \" + taskId, currentUserId));\n+      }\n+    }\n+    return tasksAuthorizedFor;\n+  }\n+\n+  private List<String> getAccessIds() {", "originalCommit": "8dcec2b1348341f569f7d0899f70e88e848b2e28", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzcxNzI1NQ==", "url": "https://github.com/Taskana/taskana/pull/939#discussion_r383717255", "bodyText": "Ok, I checked - lowercasing is done in CurrentUserContext. I removed it from TaskServiceImpl", "author": "BerndBreier", "createdAt": "2020-02-25T08:17:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzIzODU0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI0MTg5MQ==", "url": "https://github.com/Taskana/taskana/pull/939#discussion_r383241891", "bodyText": "We could move this down to do the preparations before we open the connection. This way we reduce the time the DB connection is used.", "author": "holgerhagen", "createdAt": "2020-02-24T12:40:13Z", "path": "lib/taskana-core/src/main/java/pro/taskana/task/internal/TaskServiceImpl.java", "diffHunk": "@@ -617,6 +619,55 @@ public void forceDeleteTask(String taskId)\n     }\n   }\n \n+  @Override\n+  public BulkOperationResults<String, TaskanaException> setOwnerOfTasks(\n+      String owner, List<String> argTaskIds) {\n+    if (LOGGER.isDebugEnabled()) {\n+      LOGGER.debug(\n+          \"entry to setOwnerOfTasks(owner = {}, tasks = {})\",\n+          owner,\n+          LoggerUtils.listToString(argTaskIds));\n+    }\n+    try {\n+      taskanaEngine.openConnection();", "originalCommit": "8dcec2b1348341f569f7d0899f70e88e848b2e28", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzcxNzM1OA==", "url": "https://github.com/Taskana/taskana/pull/939#discussion_r383717358", "bodyText": "Done", "author": "BerndBreier", "createdAt": "2020-02-25T08:17:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI0MTg5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI0MjE1OA==", "url": "https://github.com/Taskana/taskana/pull/939#discussion_r383242158", "bodyText": "why sorted?", "author": "holgerhagen", "createdAt": "2020-02-24T12:40:53Z", "path": "lib/taskana-core/src/main/java/pro/taskana/task/internal/TaskServiceImpl.java", "diffHunk": "@@ -617,6 +619,55 @@ public void forceDeleteTask(String taskId)\n     }\n   }\n \n+  @Override\n+  public BulkOperationResults<String, TaskanaException> setOwnerOfTasks(\n+      String owner, List<String> argTaskIds) {\n+    if (LOGGER.isDebugEnabled()) {\n+      LOGGER.debug(\n+          \"entry to setOwnerOfTasks(owner = {}, tasks = {})\",\n+          owner,\n+          LoggerUtils.listToString(argTaskIds));\n+    }\n+    try {\n+      taskanaEngine.openConnection();\n+      BulkOperationResults<String, TaskanaException> bulkLog = new BulkOperationResults<>();\n+      if (argTaskIds == null || argTaskIds.isEmpty()) {\n+        return bulkLog;\n+      }\n+      // remove duplicates\n+      List<String> taskIds = argTaskIds.stream().sorted().distinct().collect(Collectors.toList());", "originalCommit": "8dcec2b1348341f569f7d0899f70e88e848b2e28", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY4OTkxOA==", "url": "https://github.com/Taskana/taskana/pull/939#discussion_r383689918", "bodyText": "I had read that distinct() works only correctly on ordered streams. However, this is not true.\nI will remove the sorted() method.\nThe javadoc says:\nStream distinct()\nReturns a stream consisting of the distinct elements (according to Object.equals(Object)) of this stream.\nFor ordered streams, the selection of distinct elements is stable (for duplicated elements, the element appearing first in the encounter order is preserved.) For unordered streams, no stability guarantees are made.\nThis is a stateful intermediate operation.\nAPI Note:\nPreserving stability for distinct() in parallel pipelines is relatively expensive (requires that the operation act as a full barrier, with substantial buffering overhead), and stability is often not needed. Using an unordered stream source (such as generate(Supplier)) or removing the ordering constraint with BaseStream.unordered() may result in significantly more efficient execution for distinct() in parallel pipelines, if the semantics of your situation permit. If consistency with encounter order is required, and you are experiencing poor performance or memory utilization with distinct() in parallel pipelines, switching to sequential execution with BaseStream.sequential() may improve performance.\nReturns:\nthe new stream", "author": "BerndBreier", "createdAt": "2020-02-25T06:59:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI0MjE1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI0MjYzNg==", "url": "https://github.com/Taskana/taskana/pull/939#discussion_r383242636", "bodyText": "Cannot we do the authorization check withon the retrieval of the tasks?", "author": "holgerhagen", "createdAt": "2020-02-24T12:42:03Z", "path": "lib/taskana-core/src/main/java/pro/taskana/task/internal/TaskServiceImpl.java", "diffHunk": "@@ -617,6 +619,55 @@ public void forceDeleteTask(String taskId)\n     }\n   }\n \n+  @Override\n+  public BulkOperationResults<String, TaskanaException> setOwnerOfTasks(\n+      String owner, List<String> argTaskIds) {\n+    if (LOGGER.isDebugEnabled()) {\n+      LOGGER.debug(\n+          \"entry to setOwnerOfTasks(owner = {}, tasks = {})\",\n+          owner,\n+          LoggerUtils.listToString(argTaskIds));\n+    }\n+    try {\n+      taskanaEngine.openConnection();\n+      BulkOperationResults<String, TaskanaException> bulkLog = new BulkOperationResults<>();\n+      if (argTaskIds == null || argTaskIds.isEmpty()) {\n+        return bulkLog;\n+      }\n+      // remove duplicates\n+      List<String> taskIds = argTaskIds.stream().sorted().distinct().collect(Collectors.toList());\n+      final int requestSize = taskIds.size();\n+      // use only elements we are authorized for\n+      taskIds = filterForAuthorized(taskIds, bulkLog);\n+      // set the Owner of these tasks we are authorized for\n+      if (taskIds.isEmpty()) {\n+        return bulkLog;\n+      } else {\n+        final int numberOfAffectedTasks = taskMapper.setOwnerOfTasks(owner, taskIds, Instant.now());\n+        // check the outcome\n+        List<MinimalTaskSummary> existingMinimalTaskSummaries =", "originalCommit": "8dcec2b1348341f569f7d0899f70e88e848b2e28", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY5MDUzNQ==", "url": "https://github.com/Taskana/taskana/pull/939#discussion_r383690535", "bodyText": "We can, but then we cannot distinguish the reason why an update failed - due to non-existence or due to missing authorization.", "author": "BerndBreier", "createdAt": "2020-02-25T07:01:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI0MjYzNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI0MzUxOQ==", "url": "https://github.com/Taskana/taskana/pull/939#discussion_r383243519", "bodyText": "Personally I think we could be more precise in the naming. \"AddExceptionForNonExistingTasks\" for example. And isn't it a good practice to return the modified value? In this case the bulklog?", "author": "holgerhagen", "createdAt": "2020-02-24T12:44:13Z", "path": "lib/taskana-core/src/main/java/pro/taskana/task/internal/TaskServiceImpl.java", "diffHunk": "@@ -757,6 +808,77 @@ Duration calculateDuration(\n     return result;\n   }\n \n+  private void addErrorsToResultObject(\n+      String owner,\n+      BulkOperationResults<String, TaskanaException> bulkLog,\n+      List<MinimalTaskSummary> existingMinimalTaskSummaries) {\n+    for (MinimalTaskSummary taskSummary : existingMinimalTaskSummaries) {\n+      if (!owner.equals(taskSummary.getOwner())) { // owner was not set\n+        if (!taskSummary.getTaskState().equals(TaskState.READY)) { // due to invalid state\n+          bulkLog.addError(\n+              taskSummary.getTaskId(),\n+              new InvalidStateException(\n+                  \"Task \"\n+                      + taskSummary.getTaskId()\n+                      + \" is in state \"\n+                      + taskSummary.getTaskState()));\n+        } else { // due to unknown reason\n+          bulkLog.addError(\n+              taskSummary.getTaskId(),\n+              new UpdateFailedException(\n+                  \"Could not set owner of Task \" + taskSummary.getTaskId() + \".\"));\n+        }\n+      }\n+    }\n+  }\n+\n+  private void handleNonExistingTasks(", "originalCommit": "8dcec2b1348341f569f7d0899f70e88e848b2e28", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzcxODA3NQ==", "url": "https://github.com/Taskana/taskana/pull/939#discussion_r383718075", "bodyText": "Done. I changed all new methods so that they return the bulklog that they create locally.", "author": "BerndBreier", "createdAt": "2020-02-25T08:19:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI0MzUxOQ=="}], "type": "inlineReview"}, {"oid": "8e99b7aeb5da1637d06144d7440de0a0ecf9fdd8", "url": "https://github.com/Taskana/taskana/commit/8e99b7aeb5da1637d06144d7440de0a0ecf9fdd8", "message": "TSK-1131 updateOwner Bulk - comments from Holger", "committedDate": "2020-02-25T08:19:31Z", "type": "forcePushed"}, {"oid": "523a6a668ad68cba51804dddaac03e6b4c973202", "url": "https://github.com/Taskana/taskana/commit/523a6a668ad68cba51804dddaac03e6b4c973202", "message": "TSK-1131 updateOwner Bulk - comments from Holger", "committedDate": "2020-02-25T13:36:44Z", "type": "forcePushed"}, {"oid": "6cd2bd61390fbd67d7be976aeeccb8ab0cc03ec4", "url": "https://github.com/Taskana/taskana/commit/6cd2bd61390fbd67d7be976aeeccb8ab0cc03ec4", "message": "TSK-1131 updateOwner Bulk - comments from Holger", "committedDate": "2020-02-25T14:53:28Z", "type": "forcePushed"}, {"oid": "05b5aec6e45172f4a2739af1a146c42078022199", "url": "https://github.com/Taskana/taskana/commit/05b5aec6e45172f4a2739af1a146c42078022199", "message": "TSK-1131 updateOwner Bulk - comments from Holger", "committedDate": "2020-02-25T14:54:50Z", "type": "forcePushed"}, {"oid": "2372672d72b9ac7687722c1172738f8a9099f5c4", "url": "https://github.com/Taskana/taskana/commit/2372672d72b9ac7687722c1172738f8a9099f5c4", "message": "TSK-1131 updateOwner Bulk - comments from Holger", "committedDate": "2020-02-25T15:23:38Z", "type": "forcePushed"}, {"oid": "3ec1ec899f003ca0dec651ee8f2505029d92e240", "url": "https://github.com/Taskana/taskana/commit/3ec1ec899f003ca0dec651ee8f2505029d92e240", "message": "TSK-1131 updateOwner Bulk - comments from Holger", "committedDate": "2020-02-25T15:58:44Z", "type": "forcePushed"}, {"oid": "0a38b4158d82100611b98cb9bffd8dd648e87df2", "url": "https://github.com/Taskana/taskana/commit/0a38b4158d82100611b98cb9bffd8dd648e87df2", "message": "TSK-1131 updateOwner Bulk - comments from Holger", "committedDate": "2020-02-26T07:11:32Z", "type": "forcePushed"}, {"oid": "9f4b8ac62ef7c8b7d5a740ca8b5af34977f85431", "url": "https://github.com/Taskana/taskana/commit/9f4b8ac62ef7c8b7d5a740ca8b5af34977f85431", "message": "TSK-1131 updateOwner on multiple tasks", "committedDate": "2020-02-26T08:17:07Z", "type": "commit"}, {"oid": "5c92943843c7c7b97d424884254b7d4e086c368b", "url": "https://github.com/Taskana/taskana/commit/5c92943843c7c7b97d424884254b7d4e086c368b", "message": "TSK-1131 updateOwner Bulk - comments from Holger", "committedDate": "2020-02-26T08:35:07Z", "type": "commit"}, {"oid": "5c92943843c7c7b97d424884254b7d4e086c368b", "url": "https://github.com/Taskana/taskana/commit/5c92943843c7c7b97d424884254b7d4e086c368b", "message": "TSK-1131 updateOwner Bulk - comments from Holger", "committedDate": "2020-02-26T08:35:07Z", "type": "forcePushed"}]}