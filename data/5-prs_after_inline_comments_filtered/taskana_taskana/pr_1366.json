{"pr_number": 1366, "pr_title": "TSK-1468: Added validation of name and type of workbasket when updating Workbasket", "pr_createdAt": "2020-12-08T19:28:19Z", "pr_url": "https://github.com/Taskana/taskana/pull/1366", "timeline": [{"oid": "c355a1496a0317e2bda4e1a28f19dc111bb0012c", "url": "https://github.com/Taskana/taskana/commit/c355a1496a0317e2bda4e1a28f19dc111bb0012c", "message": "TSK-1468: Added validation of name and type of workbasket when updating Workbasket", "committedDate": "2020-12-08T19:03:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA3ODI4NQ==", "url": "https://github.com/Taskana/taskana/pull/1366#discussion_r539078285", "bodyText": "why are you testing this twice?", "author": "gitgoodjhe", "createdAt": "2020-12-09T07:47:13Z", "path": "lib/taskana-core/src/test/java/acceptance/workbasket/UpdateWorkbasketAccTest.java", "diffHunk": "@@ -57,6 +58,35 @@ void testUpdateWorkbasket() throws Exception {\n     assertThat(updatedWorkbasket.getModified()).isNotEqualTo(modified);\n   }\n \n+  @WithAccessId(user = \"businessadmin\")\n+  @Test\n+  void should_ThrowException_When_UpdatingWorkbasketWithInvalidName() throws Exception {\n+    WorkbasketService workbasketService = taskanaEngine.getWorkbasketService();\n+\n+    WorkbasketImpl workbasket =\n+        (WorkbasketImpl) workbasketService.getWorkbasket(\"GPK_KSC\", \"DOMAIN_A\");\n+    workbasket.setName(null);\n+    assertThatExceptionOfType(InvalidWorkbasketException.class)\n+        .isThrownBy(() -> workbasketService.updateWorkbasket(workbasket));\n+\n+    workbasket.setName(null);", "originalCommit": "c355a1496a0317e2bda4e1a28f19dc111bb0012c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE2NTMxNQ==", "url": "https://github.com/Taskana/taskana/pull/1366#discussion_r539165315", "bodyText": "Wanted to use empty String in the second, I change it", "author": "tge20", "createdAt": "2020-12-09T09:55:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA3ODI4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA3OTQ0OA==", "url": "https://github.com/Taskana/taskana/pull/1366#discussion_r539079448", "bodyText": "While this is not wrong, I think we decided to use the following structure:\nassertThatThrownBy(() -> workbasketService.updateWorkbasket(workbasket))\n.isInstanceOf(InvalidWorkbasketException.class);", "author": "gitgoodjhe", "createdAt": "2020-12-09T07:49:30Z", "path": "lib/taskana-core/src/test/java/acceptance/workbasket/UpdateWorkbasketAccTest.java", "diffHunk": "@@ -57,6 +58,35 @@ void testUpdateWorkbasket() throws Exception {\n     assertThat(updatedWorkbasket.getModified()).isNotEqualTo(modified);\n   }\n \n+  @WithAccessId(user = \"businessadmin\")\n+  @Test\n+  void should_ThrowException_When_UpdatingWorkbasketWithInvalidName() throws Exception {\n+    WorkbasketService workbasketService = taskanaEngine.getWorkbasketService();\n+\n+    WorkbasketImpl workbasket =\n+        (WorkbasketImpl) workbasketService.getWorkbasket(\"GPK_KSC\", \"DOMAIN_A\");\n+    workbasket.setName(null);\n+    assertThatExceptionOfType(InvalidWorkbasketException.class)\n+        .isThrownBy(() -> workbasketService.updateWorkbasket(workbasket));\n+\n+    workbasket.setName(null);\n+    assertThatExceptionOfType(InvalidWorkbasketException.class)", "originalCommit": "c355a1496a0317e2bda4e1a28f19dc111bb0012c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA3OTY0Ng==", "url": "https://github.com/Taskana/taskana/pull/1366#discussion_r539079646", "bodyText": "see above", "author": "gitgoodjhe", "createdAt": "2020-12-09T07:49:47Z", "path": "lib/taskana-core/src/test/java/acceptance/workbasket/UpdateWorkbasketAccTest.java", "diffHunk": "@@ -57,6 +58,35 @@ void testUpdateWorkbasket() throws Exception {\n     assertThat(updatedWorkbasket.getModified()).isNotEqualTo(modified);\n   }\n \n+  @WithAccessId(user = \"businessadmin\")\n+  @Test\n+  void should_ThrowException_When_UpdatingWorkbasketWithInvalidName() throws Exception {\n+    WorkbasketService workbasketService = taskanaEngine.getWorkbasketService();\n+\n+    WorkbasketImpl workbasket =\n+        (WorkbasketImpl) workbasketService.getWorkbasket(\"GPK_KSC\", \"DOMAIN_A\");\n+    workbasket.setName(null);\n+    assertThatExceptionOfType(InvalidWorkbasketException.class)\n+        .isThrownBy(() -> workbasketService.updateWorkbasket(workbasket));\n+\n+    workbasket.setName(null);\n+    assertThatExceptionOfType(InvalidWorkbasketException.class)\n+        .isThrownBy(() -> workbasketService.updateWorkbasket(workbasket));\n+  }\n+\n+  @WithAccessId(user = \"businessadmin\")\n+  @Test\n+  void should_ThrowException_When_UpdatingWorkbasketWithTypeNull() throws Exception {\n+    WorkbasketService workbasketService = taskanaEngine.getWorkbasketService();\n+\n+    WorkbasketImpl workbasket =\n+        (WorkbasketImpl) workbasketService.getWorkbasket(\"GPK_KSC\", \"DOMAIN_A\");\n+    workbasket.setType(null);\n+\n+    assertThatExceptionOfType(InvalidWorkbasketException.class)", "originalCommit": "c355a1496a0317e2bda4e1a28f19dc111bb0012c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA4MDAzNQ==", "url": "https://github.com/Taskana/taskana/pull/1366#discussion_r539080035", "bodyText": "why did you rename this? To name the new method validateNameAndType without workbasket?", "author": "gitgoodjhe", "createdAt": "2020-12-09T07:50:37Z", "path": "lib/taskana-core/src/main/java/pro/taskana/workbasket/internal/WorkbasketServiceImpl.java", "diffHunk": "@@ -1199,7 +1197,7 @@ private void markWorkbasketForDeletion(String workbasketId)\n     taskanaEngine.getEngine().checkRoleMembership(TaskanaRole.BUSINESS_ADMIN, TaskanaRole.ADMIN);\n     try {\n       taskanaEngine.openConnection();\n-      validateWorkbasketId(workbasketId);\n+      validateId(workbasketId);", "originalCommit": "c355a1496a0317e2bda4e1a28f19dc111bb0012c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE1NDg0OQ==", "url": "https://github.com/Taskana/taskana/pull/1366#discussion_r539154849", "bodyText": "I just thought it would be clearer and easier to read", "author": "tge20", "createdAt": "2020-12-09T09:41:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA4MDAzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA5MTczNg==", "url": "https://github.com/Taskana/taskana/pull/1366#discussion_r539091736", "bodyText": "I think we could have just re-used the validateWorkbasket method here", "author": "gitgoodjhe", "createdAt": "2020-12-09T08:10:17Z", "path": "lib/taskana-core/src/main/java/pro/taskana/workbasket/internal/WorkbasketServiceImpl.java", "diffHunk": "@@ -173,38 +173,30 @@ public Workbasket createWorkbasket(Workbasket newWorkbasket)\n \n   @Override\n   public Workbasket updateWorkbasket(Workbasket workbasketToUpdate)\n-      throws NotAuthorizedException, WorkbasketNotFoundException, ConcurrencyException {\n+      throws NotAuthorizedException, WorkbasketNotFoundException, ConcurrencyException,\n+          InvalidWorkbasketException {\n \n     LOGGER.debug(\"entry to updateWorkbasket(Workbasket = {})\", workbasketToUpdate);\n \n     taskanaEngine.getEngine().checkRoleMembership(TaskanaRole.BUSINESS_ADMIN, TaskanaRole.ADMIN);\n-\n-    WorkbasketImpl workbasketImplToUpdate = null;\n+    WorkbasketImpl workbasketImplToUpdate = (WorkbasketImpl) workbasketToUpdate;\n+    validateNameAndType(workbasketToUpdate);", "originalCommit": "c355a1496a0317e2bda4e1a28f19dc111bb0012c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE2Mzk0NA==", "url": "https://github.com/Taskana/taskana/pull/1366#discussion_r539163944", "bodyText": "Possible, I thought it would only be necessary to check those two. Problem could be that according to line 193-197 in method update(...) it seems to be possible that you update a workbasket having Id null or empty (it won't update the id) which thus should not throw an exception if wanted by intention.", "author": "tge20", "createdAt": "2020-12-09T09:53:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA5MTczNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA5MjMyOQ==", "url": "https://github.com/Taskana/taskana/pull/1366#discussion_r539092329", "bodyText": "If we re-use the whole validateWorkbasket method, then we woudln't have to refactor this to a separate method, right?", "author": "gitgoodjhe", "createdAt": "2020-12-09T08:10:57Z", "path": "lib/taskana-core/src/main/java/pro/taskana/workbasket/internal/WorkbasketServiceImpl.java", "diffHunk": "@@ -1158,27 +1138,45 @@ private boolean skipAuthorizationCheck(WorkbasketPermission... requestedPermissi\n   private void validateWorkbasket(Workbasket workbasket)\n       throws InvalidWorkbasketException, DomainNotFoundException {\n     // check that required properties (database not null) are set\n+    validateNameAndType(workbasket);", "originalCommit": "c355a1496a0317e2bda4e1a28f19dc111bb0012c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE2NDM5Ng==", "url": "https://github.com/Taskana/taskana/pull/1366#discussion_r539164396", "bodyText": "True, but see above", "author": "tge20", "createdAt": "2020-12-09T09:54:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA5MjMyOQ=="}], "type": "inlineReview"}, {"oid": "cc201ff5bd3a54325b150035539b0b3652b2e006", "url": "https://github.com/Taskana/taskana/commit/cc201ff5bd3a54325b150035539b0b3652b2e006", "message": "TSK-1468: Improvements after review", "committedDate": "2020-12-09T11:31:58Z", "type": "commit"}]}