{"pr_number": 1613, "pr_title": "Search filter page", "pr_createdAt": "2020-04-09T10:09:29Z", "pr_url": "https://github.com/openequella/openEQUELLA/pull/1613", "timeline": [{"oid": "91db0e0d16932b4fbe59dfb43fc104223f056390", "url": "https://github.com/openequella/openEQUELLA/commit/91db0e0d16932b4fbe59dfb43fc104223f056390", "message": "Create Search filter page, including two sections: one for the\nvisibility configuration of Owner filter and Date modified filter,\nthe other one for MIME type filter list.", "committedDate": "2020-04-06T03:18:09Z", "type": "commit"}, {"oid": "f4f2335a8c26a8e3d04ff69b7798cf32a7488c5e", "url": "https://github.com/openequella/openEQUELLA/commit/f4f2335a8c26a8e3d04ff69b7798cf32a7488c5e", "message": "Make sure the Search setting update endpoint keeps the information\nof Search filters", "committedDate": "2020-04-06T03:18:09Z", "type": "commit"}, {"oid": "0a15031cc5fc56caf2881a41e598e9a64e043f32", "url": "https://github.com/openequella/openEQUELLA/commit/0a15031cc5fc56caf2881a41e598e9a64e043f32", "message": "REST endpoint for retrieving MIME types and their descriptions", "committedDate": "2020-04-06T03:18:09Z", "type": "commit"}, {"oid": "393c29946020d75161284e9ae821871466bf84b3", "url": "https://github.com/openequella/openEQUELLA/commit/393c29946020d75161284e9ae821871466bf84b3", "message": "Add a new endpoint to support updating multiple filters in one PUT request;\n\nReplace the use of query params with JSON body", "committedDate": "2020-04-08T03:28:13Z", "type": "commit"}, {"oid": "a60319f329971120cb2007950dd9d0cff5d4d049", "url": "https://github.com/openequella/openEQUELLA/commit/a60319f329971120cb2007950dd9d0cff5d4d049", "message": "Create the MIME type filter editing dialog;\n\nSave all the changes do not get saved to Server until click save button;", "committedDate": "2020-04-08T03:55:00Z", "type": "commit"}, {"oid": "8703051620f1056c28bd8936a1cc9cd67269927f", "url": "https://github.com/openequella/openEQUELLA/commit/8703051620f1056c28bd8936a1cc9cd67269927f", "message": "Create a new endpoint to support batch delete;\n\nEnsure the batch update only creates a new filter when uuid is empty;\n\nDon't send requests to Server if no setting changes are found;\n\nOnly save changed settings", "committedDate": "2020-04-09T00:15:30Z", "type": "commit"}, {"oid": "f952ac01903d0d95851be729c51ad98028bbaeb4", "url": "https://github.com/openequella/openEQUELLA/commit/f952ac01903d0d95851be729c51ad98028bbaeb4", "message": "Make the list of MIME types scrollable;\n\nPut texts in languagestrings;\n\nAdd JSDoc;", "committedDate": "2020-04-09T09:48:32Z", "type": "commit"}, {"oid": "5dbd4ad4d89b92aae4106879243984d6fb831356", "url": "https://github.com/openequella/openEQUELLA/commit/5dbd4ad4d89b92aae4106879243984d6fb831356", "message": "Merge branch 'component/search_configuration' into feature/search-filter-page", "committedDate": "2020-04-09T09:53:52Z", "type": "commit"}, {"oid": "87029aa7f6889db3317c684f52b79b4ec47960cf", "url": "https://github.com/openequella/openEQUELLA/commit/87029aa7f6889db3317c684f52b79b4ec47960cf", "message": "Update SearchFilterApiTest to call endpoints with JSON body", "committedDate": "2020-04-11T10:25:42Z", "type": "commit"}, {"oid": "2436ba4fb7fe88b3617a19aad2b7d127bddb3a98", "url": "https://github.com/openequella/openEQUELLA/commit/2436ba4fb7fe88b3617a19aad2b7d127bddb3a98", "message": "Create the header for MimeTypeResource;", "committedDate": "2020-04-13T23:30:36Z", "type": "commit"}, {"oid": "d7e1b71d1636c728f9f5f17cb7295baa4252fd23", "url": "https://github.com/openequella/openEQUELLA/commit/d7e1b71d1636c728f9f5f17cb7295baa4252fd23", "message": "Merge branch 'component/search_configuration' into feature/search-filter-page", "committedDate": "2020-04-14T06:39:55Z", "type": "commit"}, {"oid": "82d9501bac02d4c8320e41fae886e93008b90d8a", "url": "https://github.com/openequella/openEQUELLA/commit/82d9501bac02d4c8320e41fae886e93008b90d8a", "message": "Use QueryParam for the batch delete endpoint;\n\nFor batch operations, the response code is 207 and response body includes\na status code and a message for each operation", "committedDate": "2020-04-15T05:11:27Z", "type": "commit"}, {"oid": "251072d68d2489d66a2d9d3426c71cbc3bf3eec8", "url": "https://github.com/openequella/openEQUELLA/commit/251072d68d2489d66a2d9d3426c71cbc3bf3eec8", "message": "Tests for batch update and delete MIME type filters;\n\nDo not consume the response body for delete requests;", "committedDate": "2020-04-15T06:25:42Z", "type": "commit"}, {"oid": "079a0ccc7a4e4d91bcc6ac968785bd8619553abf", "url": "https://github.com/openequella/openEQUELLA/commit/079a0ccc7a4e4d91bcc6ac968785bd8619553abf", "message": "Remove the boolean variable from function 'addOrUpdate' For MimeTypeFilterEditor", "committedDate": "2020-04-15T06:50:43Z", "type": "commit"}, {"oid": "ddc6d4e60b220532e74c3ff9e515fd41277d817a", "url": "https://github.com/openequella/openEQUELLA/commit/ddc6d4e60b220532e74c3ff9e515fd41277d817a", "message": "Test for the endpoint of retrieving MIME types", "committedDate": "2020-04-15T08:26:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY5NjQ1Mw==", "url": "https://github.com/openequella/openEQUELLA/pull/1613#discussion_r408696453", "bodyText": "Misc notes about the tests:\n\nSome of them are covering more than one scenario rather than having a test per scenario\nno usage of soft asserts, the first assert failure will prevent the remainder from being tested.  This is a pain point when you fix one assert only to find another, and another and another....\nrepeating assert structures rather than helper methods to do common asserts,  e.g. http response codes with response message", "author": "nmkae", "createdAt": "2020-04-15T09:13:00Z", "path": "autotest/OldTests/src/test/java/com/tle/webtests/test/webservices/rest/SearchSettingApiTest.java", "diffHunk": "@@ -290,4 +274,117 @@ public void testDeleteSearchFilter() throws Exception {\n   private String searchFilterUri(String filterId) {\n     return PathUtils.urlPath(context.getBaseUrl(), API_SEARCH_FILTER_PATH, filterId);\n   }\n+\n+  @Test\n+  public void testBatchUpdateSearchFilter() throws Exception {", "originalCommit": "079a0ccc7a4e4d91bcc6ac968785bd8619553abf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTIyNzE3Mw==", "url": "https://github.com/openequella/openEQUELLA/pull/1613#discussion_r409227173", "bodyText": "Yes, I agree that this test should be split up, and some helper methods would help - I think we did some of them in the recent work on the tests for the updated Taxonomy endpoints. \ud83e\udd14\nAs for the soft asserts, I'm not too concerned there and happy for it stay with this at the moment - also matches what's done everywhere else currently.\nOne further consideration is whether going through the verbosity of using objects to create your JSON is necessary. In this kind of testing - as opposed to writing core integration code - I'm not against straight up strings (possibly read from a resource file - especially with Java's limitations of support for multi-line strings and having to escape double quotes). But I see you're also using the objects you're creating to slightly tweak, so... it depends.", "author": "edalex-ian", "createdAt": "2020-04-16T01:27:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY5NjQ1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTIyNTYwMA==", "url": "https://github.com/openequella/openEQUELLA/pull/1613#discussion_r409225600", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // The batch update endpoint supports creating and updating, so create one filter firstly\n          \n          \n            \n                // The batch update endpoint supports creating and updating, so create one filter first", "author": "edalex-ian", "createdAt": "2020-04-16T01:22:07Z", "path": "autotest/OldTests/src/test/java/com/tle/webtests/test/webservices/rest/SearchSettingApiTest.java", "diffHunk": "@@ -290,4 +274,124 @@ public void testDeleteSearchFilter() throws Exception {\n   private String searchFilterUri(String filterId) {\n     return PathUtils.urlPath(context.getBaseUrl(), API_SEARCH_FILTER_PATH, filterId);\n   }\n+\n+  @Test\n+  public void testBatchUpdateSearchFilter() throws Exception {\n+    final String uri = searchFilterUri(\"\");\n+\n+    ArrayNode jsonBody = mapper.createArrayNode();\n+    // The batch update endpoint supports creating and updating, so create one filter firstly", "originalCommit": "ddc6d4e60b220532e74c3ff9e515fd41277d817a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTIyNjQ3OQ==", "url": "https://github.com/openequella/openEQUELLA/pull/1613#discussion_r409226479", "bodyText": "This is not specifically related to Search Settings - and so should be in it's own class.", "author": "edalex-ian", "createdAt": "2020-04-16T01:25:01Z", "path": "autotest/OldTests/src/test/java/com/tle/webtests/test/webservices/rest/SearchSettingApiTest.java", "diffHunk": "@@ -290,4 +274,124 @@ public void testDeleteSearchFilter() throws Exception {\n   private String searchFilterUri(String filterId) {\n     return PathUtils.urlPath(context.getBaseUrl(), API_SEARCH_FILTER_PATH, filterId);\n   }\n+\n+  @Test\n+  public void testBatchUpdateSearchFilter() throws Exception {\n+    final String uri = searchFilterUri(\"\");\n+\n+    ArrayNode jsonBody = mapper.createArrayNode();\n+    // The batch update endpoint supports creating and updating, so create one filter firstly\n+    ObjectNode filterOne = mapper.createObjectNode();\n+    filterOne.put(FILTER_NAME, IMAGE_FILTER);\n+    ArrayNode filterOneMimeTypes = filterOne.putArray(FILTER_MIME_TYPES);\n+    filterOneMimeTypes.add(JPEG);\n+    jsonBody.add(filterOne);\n+\n+    HttpResponse response = putEntity(jsonBody.toString(), uri, getToken(), false);\n+    JsonNode updateResults = mapper.readTree(response.getEntity().getContent());\n+    JsonNode returnedFilterOne = updateResults.get(0);\n+    newFilterId = returnedFilterOne.get(FILTER_ID).asText();\n+    assertNotNull(newFilterId);\n+    assertEquals(200, returnedFilterOne.get(RESPONSE_STATUS).asInt());\n+    assertEquals(\n+        \"A new filter has been created. ID: \" + newFilterId,\n+        returnedFilterOne.get(RESPONSE_MESSAGE).asText());\n+\n+    // Now update this filter and create one more\n+    filterOne.put(FILTER_NAME, PDF_FILTER);\n+    filterOne.put(FILTER_ID, newFilterId);\n+    filterOneMimeTypes.add(PDF);\n+\n+    ObjectNode filterTwo = mapper.createObjectNode();\n+    filterTwo.put(FILTER_NAME, IMAGE_FILTER);\n+    ArrayNode filterTwoMimeTypes = filterTwo.putArray(FILTER_MIME_TYPES);\n+    filterTwoMimeTypes.add(JPEG);\n+    filterTwoMimeTypes.add(PNG);\n+    jsonBody.add(filterTwo);\n+\n+    response = putEntity(jsonBody.toString(), uri, getToken(), false);\n+    updateResults = mapper.readTree(response.getEntity().getContent());\n+    assertEquals(2, updateResults.size());\n+\n+    returnedFilterOne = updateResults.get(0);\n+    assertEquals(200, returnedFilterOne.get(RESPONSE_STATUS).asInt());\n+    assertEquals(\n+        \"MIME type filter \" + newFilterId + \" has been updated.\",\n+        returnedFilterOne.get(RESPONSE_MESSAGE).asText());\n+\n+    JsonNode returnedFilterTwo = updateResults.get(1);\n+    secondeNewFilterId = returnedFilterTwo.get(FILTER_ID).asText();\n+    assertNotNull(secondeNewFilterId);\n+    assertEquals(200, returnedFilterTwo.get(RESPONSE_STATUS).asInt());\n+    assertEquals(\n+        \"A new filter has been created. ID: \" + secondeNewFilterId,\n+        returnedFilterTwo.get(RESPONSE_MESSAGE).asText());\n+\n+    // Update without filter name and MIME types\n+    filterOne.remove(FILTER_NAME);\n+    filterTwo.remove(FILTER_MIME_TYPES);\n+\n+    filterTwo.put(FILTER_ID, BAD_FILTER_ID);\n+    response = putEntity(jsonBody.toString(), uri, getToken(), false);\n+    updateResults = mapper.readTree(response.getEntity().getContent());\n+    assertEquals(2, updateResults.size());\n+\n+    returnedFilterOne = updateResults.get(0);\n+    assertEquals(400, returnedFilterOne.get(RESPONSE_STATUS).asInt());\n+    assertEquals(\"Filter name cannot be empty.\", returnedFilterOne.get(RESPONSE_MESSAGE).asText());\n+\n+    returnedFilterTwo = updateResults.get(1);\n+    assertEquals(400, returnedFilterTwo.get(RESPONSE_STATUS).asInt());\n+    assertEquals(\"Need at least one MIME type.\", returnedFilterTwo.get(RESPONSE_MESSAGE).asText());\n+\n+    // Update with invalid ID\n+    filterOne.put(FILTER_NAME, PDF_FILTER);\n+    filterOne.put(FILTER_ID, BAD_FILTER_ID);\n+    response = putEntity(jsonBody.toString(), uri, getToken(), false);\n+    updateResults = mapper.readTree(response.getEntity().getContent());\n+    returnedFilterOne = updateResults.get(0);\n+    assertEquals(404, returnedFilterOne.get(RESPONSE_STATUS).asInt());\n+    assertEquals(\n+        \"No Search filters matching UUID: \" + BAD_FILTER_ID,\n+        returnedFilterOne.get(RESPONSE_MESSAGE).asText());\n+  }\n+\n+  @Test(dependsOnMethods = \"testBatchUpdateSearchFilter\")\n+  public void testBatchDeleteSearchFilter() throws Exception {\n+    final String uri = searchFilterUri(\"\");\n+\n+    // Delete the two filters created\n+    HttpResponse response =\n+        deleteResource(uri, getToken(), \"ids\", newFilterId, \"ids\", secondeNewFilterId);\n+    JsonNode updateResults = mapper.readTree(response.getEntity().getContent());\n+    assertEquals(2, updateResults.size());\n+\n+    JsonNode filterOne = updateResults.get(0);\n+    assertEquals(200, filterOne.get(RESPONSE_STATUS).asInt());\n+    assertEquals(\n+        \"MIME type filter \" + newFilterId + \" has been deleted.\",\n+        filterOne.get(RESPONSE_MESSAGE).asText());\n+\n+    JsonNode filterTwo = updateResults.get(1);\n+    assertEquals(200, filterTwo.get(RESPONSE_STATUS).asInt());\n+    assertEquals(\n+        \"MIME type filter \" + secondeNewFilterId + \" has been deleted.\",\n+        filterTwo.get(RESPONSE_MESSAGE).asText());\n+\n+    // Delete again with the deleted IDs\n+    response = deleteResource(uri, getToken(), \"ids\", newFilterId);\n+    updateResults = mapper.readTree(response.getEntity().getContent());\n+    filterOne = updateResults.get(0);\n+    assertEquals(404, filterOne.get(RESPONSE_STATUS).asInt());\n+    assertEquals(\n+        \"No Search filters matching UUID: \" + newFilterId,\n+        filterOne.get(RESPONSE_MESSAGE).asText());\n+  }\n+\n+  @Test\n+  public void testRetrieveMimeTypes() throws Exception {\n+    final JsonNode initialFilters =\n+        getEntity(context.getBaseUrl() + \"api/settings/mimetype\", getToken());\n+    assertEquals(153, initialFilters.size());\n+  }", "originalCommit": "ddc6d4e60b220532e74c3ff9e515fd41277d817a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f215c3987920a414bd68aded0818da3ccbc1a004", "url": "https://github.com/openequella/openEQUELLA/commit/f215c3987920a414bd68aded0818da3ccbc1a004", "message": "Add default export to 'MimeTypeList' and move React.memo to the default\nexport;\n\nThe property 'selected' can't be undefined or null so remove the\nquestion mark;\n\nMove the styling for the list to the MUI List and then remove the\nredundant div;\n\nGive proper value to the ListItem key;\n\nRemove redundant variable 'checked'", "committedDate": "2020-04-16T02:46:02Z", "type": "commit"}, {"oid": "8cd9fa48de145ea06618e64791258d0ef1e15935", "url": "https://github.com/openequella/openEQUELLA/commit/8cd9fa48de145ea06618e64791258d0ef1e15935", "message": "Rename this component to 'MimeTypeFilterEditingDialog';\n\nAdd JSDoc to this component and its props interface, and react hooks;\n\nRemove redundant function 'updateFilterName';\n\nRemove redundant expressions for MUI Dialog;\n\nRemove helperText from the Filter name textfield.", "committedDate": "2020-04-16T02:52:05Z", "type": "commit"}, {"oid": "f05ee404f5f6e30573dcc3cb2ef231bfc1d9bab0", "url": "https://github.com/openequella/openEQUELLA/commit/f05ee404f5f6e30573dcc3cb2ef231bfc1d9bab0", "message": "Keep the initial Search setting and do not pick out the initial values\nof the Owner filter and Date modified filter of it;\n\nCombine two react hooks into one as they have identical dependencies;\n\nMove the declaration of two variables to a better place;\n\nMake the logic of the if statement in 'save' simpler;\n\nRemove two redundant functions 'setOwnerFilter' and 'setDateModifiedFilter';\n\nGive a proper value to the MUI ListItem key attribute;\n\nMove the use of 'MimeTypeFilterEditingDialog' above the save button;\n\nRemove unused code.", "committedDate": "2020-04-16T03:12:49Z", "type": "commit"}, {"oid": "f28d1d605e2b6e767c19442fb7cae428723bf098", "url": "https://github.com/openequella/openEQUELLA/commit/f28d1d605e2b6e767c19442fb7cae428723bf098", "message": "Create a new utility to handle immutable arrays;\n\nRemove repeated array operations;\n\nMake clearer comments;", "committedDate": "2020-04-16T06:06:13Z", "type": "commit"}, {"oid": "787b64c4baebee1f6c7b221a30dc26d8eadeab47", "url": "https://github.com/openequella/openEQUELLA/commit/787b64c4baebee1f6c7b221a30dc26d8eadeab47", "message": "Support 'secondaryText' of 'SettingsListControl' to be undefined;\n\nSimplify function 'vaidateMimeTypeName'.", "committedDate": "2020-04-16T06:12:53Z", "type": "commit"}, {"oid": "5069fdd6b024748f8ea52f19aa01a07c93703dda", "url": "https://github.com/openequella/openEQUELLA/commit/5069fdd6b024748f8ea52f19aa01a07c93703dda", "message": "Handle the 207 response. If the 207 response includes non-2xx codes\nthen display a dialog to show all the error messages.\n\nMUI snackbar does not support multiple lines of texts so create a dialog\nfor this case.\n\nCreate an interface to represent the data included in the 207 response\nbody.", "committedDate": "2020-04-17T04:02:24Z", "type": "commit"}, {"oid": "3830e92742dedd6fa16c9b8a61c50cf39d75c78c", "url": "https://github.com/openequella/openEQUELLA/commit/3830e92742dedd6fa16c9b8a61c50cf39d75c78c", "message": "Move the endpoint for MIME Type to the top level rather than under\nsettings.", "committedDate": "2020-04-17T04:14:26Z", "type": "commit"}, {"oid": "67f82cbfc2b8eee0b3191bdfcbe6fb33bbf6ec04", "url": "https://github.com/openequella/openEQUELLA/commit/67f82cbfc2b8eee0b3191bdfcbe6fb33bbf6ec04", "message": "Documentation for how to handle REST requests that cantain multiple items", "committedDate": "2020-04-17T04:40:09Z", "type": "commit"}, {"oid": "19efbffefb399e6c6e455c518a5cc64c889ce2ae", "url": "https://github.com/openequella/openEQUELLA/commit/19efbffefb399e6c6e455c518a5cc64c889ce2ae", "message": "Move the MimeType test to itw own class;\n\nSplit up the batch update test and remove unnecessary asserts.", "committedDate": "2020-04-17T06:34:17Z", "type": "commit"}, {"oid": "271a7ab7ddbf1ca02b41024269774923f860aa22", "url": "https://github.com/openequella/openEQUELLA/commit/271a7ab7ddbf1ca02b41024269774923f860aa22", "message": "Return 400 for UnrecognizedPropertyException if marshalling fails", "committedDate": "2020-04-17T07:03:27Z", "type": "commit"}, {"oid": "dfed27266ec84c3fb8b61205d9f091f3b73352d3", "url": "https://github.com/openequella/openEQUELLA/commit/dfed27266ec84c3fb8b61205d9f091f3b73352d3", "message": "Add proper JSDoc.", "committedDate": "2020-04-20T01:10:26Z", "type": "commit"}, {"oid": "b35c812cfdd5aa9e7576ca2a467f57425c6a2c59", "url": "https://github.com/openequella/openEQUELLA/commit/b35c812cfdd5aa9e7576ca2a467f57425c6a2c59", "message": "Add Jest test for MimeTypeFilterEditingDialog.", "committedDate": "2020-04-20T06:30:21Z", "type": "commit"}, {"oid": "4d93c6fc31eb6138c8873b02ec6249ac309caaa0", "url": "https://github.com/openequella/openEQUELLA/commit/4d93c6fc31eb6138c8873b02ec6249ac309caaa0", "message": "Merge branch 'component/search_configuration' into feature/search-filter-page", "committedDate": "2020-04-20T06:47:43Z", "type": "commit"}, {"oid": "640f03c53cd0a30309e009819b46aeeff88de89f", "url": "https://github.com/openequella/openEQUELLA/commit/640f03c53cd0a30309e009819b46aeeff88de89f", "message": "Add story for MimeTypeFilterEditingDialog and MimeTypeList", "committedDate": "2020-04-20T07:50:58Z", "type": "commit"}, {"oid": "1addd5249df9851887949e8376ef6ae059471fb3", "url": "https://github.com/openequella/openEQUELLA/commit/1addd5249df9851887949e8376ef6ae059471fb3", "message": "Use storybook provided knob object for json objects", "committedDate": "2020-04-20T09:29:53Z", "type": "commit"}, {"oid": "677b63d2ea490e37fd9e7e1d51632349bb26d9e8", "url": "https://github.com/openequella/openEQUELLA/commit/677b63d2ea490e37fd9e7e1d51632349bb26d9e8", "message": "Add Jest test for the Array Utility;\n\nThese Array utility functions take a comparator funtion as parameter rather\nthan a single element", "committedDate": "2020-04-21T03:08:03Z", "type": "commit"}, {"oid": "752f8bbf13ec08a0ced0cdeb641bf700b096d189", "url": "https://github.com/openequella/openEQUELLA/commit/752f8bbf13ec08a0ced0cdeb641bf700b096d189", "message": "Add full stops to JSDoc;\n\nImport makeStyles from '@material-ui/core';\n\nMerge the two useeffects in SearchFilterSettingPage into one.", "committedDate": "2020-04-21T04:12:46Z", "type": "commit"}, {"oid": "a0a4015afbeed7c5b6731fbc80e2098f909c82be", "url": "https://github.com/openequella/openEQUELLA/commit/a0a4015afbeed7c5b6731fbc80e2098f909c82be", "message": "Merge branch 'component/search_configuration' into feature/search-filter-page", "committedDate": "2020-04-21T04:39:56Z", "type": "commit"}]}