{"pr_number": 4611, "pr_title": "Create PropertiesClass for external properties (http.proxyHost, http.proxyPort, http.nonProxyHosts)", "pr_createdAt": "2020-10-14T08:46:57Z", "pr_url": "https://github.com/eclipse-ee4j/jersey/pull/4611", "timeline": [{"oid": "ad22cd8381a7ecb6513fd3091e1a138fbecf94e0", "url": "https://github.com/eclipse-ee4j/jersey/commit/ad22cd8381a7ecb6513fd3091e1a138fbecf94e0", "message": "Create properties class for external properties\n\nSigned-off-by: tvallin <thibault.vallin@oracle.com>", "committedDate": "2020-10-13T16:39:30Z", "type": "commit"}, {"oid": "87285bcb9f6320cf57e5b49b0a8df4604ad2fad9", "url": "https://github.com/eclipse-ee4j/jersey/commit/87285bcb9f6320cf57e5b49b0a8df4604ad2fad9", "message": "Add javadoc\n\nSigned-off-by: tvallin <thibault.vallin@oracle.com>", "committedDate": "2020-10-14T08:18:31Z", "type": "commit"}, {"oid": "3d8ce3d33c76ff97afb8f86380091da0e55b762f", "url": "https://github.com/eclipse-ee4j/jersey/commit/3d8ce3d33c76ff97afb8f86380091da0e55b762f", "message": "Add copyright\n\nSigned-off-by: tvallin <thibault.vallin@oracle.com>", "committedDate": "2020-10-14T08:22:24Z", "type": "commit"}, {"oid": "0d8030e5f2ee8a8a5a0eec37f7e0b6c96dc7653b", "url": "https://github.com/eclipse-ee4j/jersey/commit/0d8030e5f2ee8a8a5a0eec37f7e0b6c96dc7653b", "message": "Tests for http proxy properties + clean up\n\nSigned-off-by: tvallin <thibault.vallin@oracle.com>", "committedDate": "2020-10-19T13:54:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTI2NTA1Nw==", "url": "https://github.com/eclipse-ee4j/jersey/pull/4611#discussion_r509265057", "bodyText": "new Server(PROXY_PORT)", "author": "jansupol", "createdAt": "2020-10-21T13:11:55Z", "path": "tests/e2e-core-common/src/test/java/org/glassfish/jersey/tests/e2e/common/TestExternalProperties.java", "diffHunk": "@@ -0,0 +1,112 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates. All rights reserved.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License v. 2.0, which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * This Source Code may also be made available under the following Secondary\n+ * Licenses when the conditions for such availability set forth in the\n+ * Eclipse Public License v. 2.0 are satisfied: GNU General Public License,\n+ * version 2 with the GNU Classpath Exception, which is available at\n+ * https://www.gnu.org/software/classpath/license.html.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n+ */\n+\n+package org.glassfish.jersey.tests.e2e.common;\n+\n+import org.eclipse.jetty.server.Request;\n+import org.eclipse.jetty.server.Server;\n+import org.eclipse.jetty.server.handler.AbstractHandler;\n+import org.glassfish.jersey.ExternalProperties;\n+import org.glassfish.jersey.server.ResourceConfig;\n+import org.glassfish.jersey.test.JerseyTest;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.core.Application;\n+import javax.ws.rs.core.Response;\n+\n+public class TestExternalProperties extends JerseyTest {\n+\n+    private static final String PROXY_HOST = \"localhost\";\n+    private static final String PROXY_PORT = \"9997\";\n+    private static boolean proxyHit = false;\n+\n+    @Path(\"resource\")\n+    public static class ProxyTestResource {\n+\n+        @GET\n+        public String getOK() {\n+            return \"OK\";\n+        }\n+\n+    }\n+\n+    @Override\n+    protected Application configure() {\n+        return new ResourceConfig(ProxyTestResource.class);\n+    }\n+\n+    @Test\n+    public void testProxy() {\n+        startFakeProxy();\n+\n+        System.setProperty(ExternalProperties.HTTP_PROXY_HOST, PROXY_HOST);\n+        System.setProperty(ExternalProperties.HTTP_PROXY_PORT, PROXY_PORT);\n+        System.setProperty(ExternalProperties.HTTP_NON_PROXY_HOSTS, \"\");\n+\n+        Response response = target(\"resource\").request().get();\n+\n+        Assert.assertEquals(407, response.getStatus());\n+    }\n+\n+    @Test\n+    public void testNonProxy() {\n+        startFakeProxy();\n+\n+        System.setProperty(ExternalProperties.HTTP_PROXY_HOST, PROXY_HOST);\n+        System.setProperty(ExternalProperties.HTTP_PROXY_PORT, PROXY_PORT);\n+        System.setProperty(ExternalProperties.HTTP_NON_PROXY_HOSTS, \"localhost\");\n+\n+        Response response = target(\"resource\").request().get();\n+\n+        Assert.assertEquals(200, response.getStatus());\n+        Assert.assertEquals(\"OK\", response.readEntity(String.class));\n+        Assert.assertFalse(proxyHit);\n+    }\n+\n+    private void startFakeProxy() {\n+        Server server = new Server(9997);", "originalCommit": "0d8030e5f2ee8a8a5a0eec37f7e0b6c96dc7653b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "41debb91e2059f539f1e0ea013356e960e55945d", "url": "https://github.com/eclipse-ee4j/jersey/commit/41debb91e2059f539f1e0ea013356e960e55945d", "message": "new tests/integration/externalproperties + renaming class\n\nSigned-off-by: tvallin <thibault.vallin@oracle.com>", "committedDate": "2020-10-21T15:21:19Z", "type": "commit"}, {"oid": "1b30f63eb315efc399174fc501fd03acc6d2eb1f", "url": "https://github.com/eclipse-ee4j/jersey/commit/1b30f63eb315efc399174fc501fd03acc6d2eb1f", "message": "remove changes on e2e-core-common pom.xml\n\nSigned-off-by: tvallin <thibault.vallin@oracle.com>", "committedDate": "2020-10-21T15:26:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM4OTg4Mw==", "url": "https://github.com/eclipse-ee4j/jersey/pull/4611#discussion_r510389883", "bodyText": "why not to put those 2 properties to @Before method as well?\nSystem.setProperty(ExternalProperties.HTTP_PROXY_HOST, PROXY_HOST);\nSystem.setProperty(ExternalProperties.HTTP_PROXY_PORT, PROXY_PORT);", "author": "senivam", "createdAt": "2020-10-22T19:01:10Z", "path": "tests/integration/externalproperties/src/test/java/org/glassfish/jersey/tests/externalproperties/HttpProxyTest.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates. All rights reserved.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License v. 2.0, which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * This Source Code may also be made available under the following Secondary\n+ * Licenses when the conditions for such availability set forth in the\n+ * Eclipse Public License v. 2.0 are satisfied: GNU General Public License,\n+ * version 2 with the GNU Classpath Exception, which is available at\n+ * https://www.gnu.org/software/classpath/license.html.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n+ */\n+\n+package org.glassfish.jersey.tests.externalproperties;\n+\n+import org.eclipse.jetty.server.Request;\n+import org.eclipse.jetty.server.Server;\n+import org.eclipse.jetty.server.handler.AbstractHandler;\n+import org.glassfish.jersey.ExternalProperties;\n+import org.glassfish.jersey.server.ResourceConfig;\n+import org.glassfish.jersey.test.JerseyTest;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.core.Application;\n+import javax.ws.rs.core.Response;\n+\n+public class HttpProxyTest extends JerseyTest {\n+\n+    private static final String PROXY_HOST = \"localhost\";\n+    private static final String PROXY_PORT = \"9997\";\n+    private static boolean proxyHit = false;\n+\n+    @Path(\"resource\")\n+    public static class ProxyTestResource {\n+\n+        @GET\n+        public String getOK() {\n+            return \"OK\";\n+        }\n+\n+    }\n+\n+    @Override\n+    protected Application configure() {\n+        return new ResourceConfig(ProxyTestResource.class);\n+    }\n+\n+    @Before\n+    public void startFakeProxy() {\n+        Server server = new Server(Integer.parseInt(PROXY_PORT));\n+        server.setHandler(new ProxyHandler(false));\n+        try {\n+            server.start();\n+        } catch (Exception e) {\n+\n+        }\n+    }\n+\n+    @Test\n+    public void testProxy() {\n+        System.setProperty(ExternalProperties.HTTP_PROXY_HOST, PROXY_HOST);", "originalCommit": "1b30f63eb315efc399174fc501fd03acc6d2eb1f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDg1Mjk0OA==", "url": "https://github.com/eclipse-ee4j/jersey/pull/4611#discussion_r510852948", "bodyText": "I think it makes sense !", "author": "tvallin", "createdAt": "2020-10-23T12:36:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM4OTg4Mw=="}], "type": "inlineReview"}, {"oid": "cdab7352341c74e71c0d26f5dfe796dcb4edf84b", "url": "https://github.com/eclipse-ee4j/jersey/commit/cdab7352341c74e71c0d26f5dfe796dcb4edf84b", "message": "Set property into @Before method\n\nSigned-off-by: tvallin <thibault.vallin@oracle.com>", "committedDate": "2020-10-23T12:28:03Z", "type": "commit"}]}