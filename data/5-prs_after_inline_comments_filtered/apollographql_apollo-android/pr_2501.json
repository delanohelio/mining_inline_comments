{"pr_number": 2501, "pr_title": "[Runtime] add missing @Deprecated and `toBuilder` for ApolloMutationCall", "pr_createdAt": "2020-08-05T09:54:30Z", "pr_url": "https://github.com/apollographql/apollo-android/pull/2501", "timeline": [{"oid": "499eb94da029ceb942eaaea30a7811e87f250fdd", "url": "https://github.com/apollographql/apollo-android/commit/499eb94da029ceb942eaaea30a7811e87f250fdd", "message": "add missing @Deprecated\n\nSee https://github.com/apollographql/apollo-android/issues/2500#issuecomment-669092437", "committedDate": "2020-08-07T08:31:31Z", "type": "commit"}, {"oid": "42f43131a5808955be77d19fc0e637fd42c5c787", "url": "https://github.com/apollographql/apollo-android/commit/42f43131a5808955be77d19fc0e637fd42c5c787", "message": "add the ApolloMutationCall.toBuilder()", "committedDate": "2020-08-07T08:37:22Z", "type": "commit"}, {"oid": "42f43131a5808955be77d19fc0e637fd42c5c787", "url": "https://github.com/apollographql/apollo-android/commit/42f43131a5808955be77d19fc0e637fd42c5c787", "message": "add the ApolloMutationCall.toBuilder()", "committedDate": "2020-08-07T08:37:22Z", "type": "forcePushed"}, {"oid": "3e230ad3f3051bc7f0f4d9e8729bdfbed569b306", "url": "https://github.com/apollographql/apollo-android/commit/3e230ad3f3051bc7f0f4d9e8729bdfbed569b306", "message": "fix metalava", "committedDate": "2020-08-07T10:08:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA5NjE2Mg==", "url": "https://github.com/apollographql/apollo-android/pull/2501#discussion_r467096162", "bodyText": "While reviewing I remembered I also added similar capability to ApolloClient. There I used newBuilder naming since OkHttp and Retrofit use that. I don't have a strong feeling but we should align them.\nhttps://github.com/apollographql/apollo-android/blob/master/apollo-runtime/src/main/java/com/apollographql/apollo/ApolloClient.java#L352", "author": "tasomaniac", "createdAt": "2020-08-07T15:01:07Z", "path": "apollo-runtime/src/main/java/com/apollographql/apollo/ApolloMutationCall.java", "diffHunk": "@@ -40,9 +52,11 @@\n    * @param requestHeaders The {@link RequestHeaders} to use for this request.\n    * @return The ApolloCall object with the provided {@link RequestHeaders}.\n    */\n-  @NotNull ApolloMutationCall<T> requestHeaders(@NotNull RequestHeaders requestHeaders);\n+  @Deprecated @NotNull ApolloMutationCall<T> requestHeaders(@NotNull RequestHeaders requestHeaders);\n+\n+  @Deprecated @NotNull @Override ApolloMutationCall<T> clone();\n \n-  @NotNull @Override ApolloMutationCall<T> clone();\n+  @NotNull @Override ApolloMutationCall.Builder<T> toBuilder();", "originalCommit": "3e230ad3f3051bc7f0f4d9e8729bdfbed569b306", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIxNDcxNQ==", "url": "https://github.com/apollographql/apollo-android/pull/2501#discussion_r467214715", "bodyText": "I like newBuilder() better, it's more consistent with other libs. The question is whether we want to invest in this API if end up rebuilding it in apollo-runtime-kotlin. If we end up deprecating apollo-runtime in favor of apollo-runtime-kotlin, there's no need to deprecate too much.", "author": "martinbonnin", "createdAt": "2020-08-07T18:55:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA5NjE2Mg=="}], "type": "inlineReview"}]}