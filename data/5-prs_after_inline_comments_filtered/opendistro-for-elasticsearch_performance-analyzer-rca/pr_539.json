{"pr_number": 539, "pr_title": "Add basic retry mechanism for clients", "pr_createdAt": "2020-12-15T20:48:23Z", "pr_url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/539", "timeline": [{"oid": "3b658ce001b1ad34df52faf168f2fb45d1914b9d", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/3b658ce001b1ad34df52faf168f2fb45d1914b9d", "message": "Add basic retry mechanism for clients", "committedDate": "2020-12-15T19:50:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc0MDA5MQ==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/539#discussion_r543740091", "bodyText": "do we also want to add deadline for rpc call ?\nAnd I also notice that maxRetryAttempts() is marked as experimental. is it going to be an issue to use it inprod ?", "author": "rguo-aws", "createdAt": "2020-12-15T22:41:33Z", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/net/GRPCConnectionManager.java", "diffHunk": "@@ -175,10 +173,12 @@ private int getPortFromHost(final InstanceDetails remoteHost) {\n   }\n \n   private ManagedChannel buildInsecureChannel(final InstanceDetails remoteHost) {\n-    return ManagedChannelBuilder.forAddress(\n-            remoteHost.getInstanceIp().toString(),\n-            getPortFromHost(remoteHost)\n-    ).usePlaintext().build();\n+    return ManagedChannelBuilder.forAddress(remoteHost.getInstanceIp().toString(),\n+        getPortFromHost(remoteHost))\n+                                .usePlaintext()\n+                                .enableRetry()\n+                                .maxRetryAttempts(MAX_RETRY_ATTEMPTS)", "originalCommit": "3b658ce001b1ad34df52faf168f2fb45d1914b9d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc0NjQzNA==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/539#discussion_r543746434", "bodyText": "Deadlines for RPC - We use streaming calls, and deadlines aren't applicable to long lived streaming calls. I don't think there is a simple way to enforce deadlines per message. If we were using a blocking call/unary rpc, then we can add a deadline for it.\nBoth the enableRetry() and maxRetryAttempts() are marked experimental because of a different reason - its dependency on service config apis. We will consume those when we implement application level retries.", "author": "ktkrg", "createdAt": "2020-12-15T22:54:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc0MDA5MQ=="}], "type": "inlineReview"}]}