{"pr_number": 314, "pr_title": "Consume Queue Capacity from Node Config Cache.", "pr_createdAt": "2020-07-28T19:07:29Z", "pr_url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/314", "timeline": [{"oid": "ff975771e2fe516eef3e1f911c4533a1fbfc6328", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/ff975771e2fe516eef3e1f911c4533a1fbfc6328", "message": "Consume Queue Capacity from Node Config Cache.\n\nNode Config Cache is updated from the Node Config Flow Unit.\nThis cache contains values for different Caches and Queues etc.", "committedDate": "2020-07-28T18:49:35Z", "type": "commit"}, {"oid": "9e767cd2688e036ac9c602bd468b039a01570136", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/9e767cd2688e036ac9c602bd468b039a01570136", "message": "Checkstyle Errors", "committedDate": "2020-07-28T18:59:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgxOTU2OA==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/314#discussion_r461819568", "bodyText": "resource object read from QueueRejctionRca is threadpool + queue rejection. That is not the metric we want to read here. What we want to read from node config cache is threadpool + queue capacity", "author": "rguo-aws", "createdAt": "2020-07-28T19:27:10Z", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/deciders/QueueHealthDecider.java", "diffHunk": "@@ -91,11 +92,11 @@ private void configureActionPriority() {\n    * <p>Action relevance decided based on user configured priorities for now, this can be modified\n    * to consume better signals going forward.\n    */\n-  private Action computeBestAction(NodeKey esNode, ResourceEnum threadPool) {\n+  private Action computeBestAction(NodeKey esNode, Resource resource) {\n     Action action = null;\n     for (String actionName : actionsByUserPriority) {\n       action =\n-          getAction(actionName, esNode, threadPool, getNodeQueueCapacity(esNode, threadPool), true);\n+        getAction(actionName, esNode, resource.getResourceEnum(), getNodeQueueCapacity(esNode, resource), true);", "originalCommit": "9e767cd2688e036ac9c602bd468b039a01570136", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgyMDE5NA==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/314#discussion_r461820194", "bodyText": "as I mentioned above, we don't have to change the input argument of this function. What we can do instead is to map queue rejection -> queue capacity", "author": "rguo-aws", "createdAt": "2020-07-28T19:28:18Z", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/deciders/QueueHealthDecider.java", "diffHunk": "@@ -120,11 +124,15 @@ private ModifyQueueCapacityAction configureQueueCapacity(NodeKey esNode, Resourc\n     return null;\n   }\n \n-  private int getNodeQueueCapacity(NodeKey esNode, ResourceEnum threadPool) {\n-    // TODO: use NodeConfigurationRca to return capacity, for now returning defaults\n-    if (threadPool.equals(ResourceEnum.SEARCH_THREADPOOL)) {\n-      return 1000;\n+  private int getNodeQueueCapacity(NodeKey esNode, Resource resource) {", "originalCommit": "9e767cd2688e036ac9c602bd468b039a01570136", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgyMDU4NQ==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/314#discussion_r461820585", "bodyText": "remove QueueRejectionClusterRca from the constructor as we don't consume anything directly from QueueRejectionClusterRca", "author": "rguo-aws", "createdAt": "2020-07-28T19:29:03Z", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/deciders/QueueHealthDecider.java", "diffHunk": "@@ -17,31 +17,32 @@\n \n import com.amazon.opendistro.elasticsearch.performanceanalyzer.decisionmaker.actions.Action;\n import com.amazon.opendistro.elasticsearch.performanceanalyzer.decisionmaker.actions.ModifyQueueCapacityAction;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.grpc.Resource;\n import com.amazon.opendistro.elasticsearch.performanceanalyzer.grpc.ResourceEnum;\n import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.flow_units.ResourceFlowUnit;\n import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.summaries.HotClusterSummary;\n import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.summaries.HotNodeSummary;\n import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.summaries.HotResourceSummary;\n import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.store.rca.cluster.NodeKey;\n import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.store.rca.cluster.QueueRejectionClusterRca;\n-\n import java.util.ArrayList;\n import java.util.List;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n \n // This is a sample decider implementation to finalize decision maker interfaces.\n // TODO: 1. Read action priorities from a configurable yml\n-// TODO: 2. Read current queue capacity from NodeConfigurationRca (PR #252)\n \n public class QueueHealthDecider extends Decider {\n \n+  private static final Logger LOG = LogManager.getLogger(Decider.class);\n   public static final String NAME = \"queue_health\";\n \n   private QueueRejectionClusterRca queueRejectionRca;\n   List<String> actionsByUserPriority = new ArrayList<>();\n   private int counter = 0;\n \n   public QueueHealthDecider(long evalIntervalSeconds, int decisionFrequency, QueueRejectionClusterRca queueRejectionClusterRca) {", "originalCommit": "9e767cd2688e036ac9c602bd468b039a01570136", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk1MDE1Mg==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/314#discussion_r461950152", "bodyText": "Don't we rely on QueueRejectionClusterRca flow units to check whether a thread pool queue is healthy/unhealthy - @rguo-aws ?", "author": "vigyasharma", "createdAt": "2020-07-28T23:27:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgyMDU4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk1MTI3Mw==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/314#discussion_r461951273", "bodyText": "Yes resolved this with ruizhen!", "author": "aditjind", "createdAt": "2020-07-28T23:30:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgyMDU4NQ=="}], "type": "inlineReview"}, {"oid": "693244f496b8f6de9f48fed6413fec8e866a83cc", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/693244f496b8f6de9f48fed6413fec8e866a83cc", "message": "Addressing PR Comments", "committedDate": "2020-07-28T23:21:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk1MDU1Mw==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/314#discussion_r461950553", "bodyText": "Minor: This is bit of a code smell. Can we raise an exception here instead and handle it gracefully at the caller? Instead of overloading the meaning of return value?", "author": "vigyasharma", "createdAt": "2020-07-28T23:28:22Z", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/deciders/QueueHealthDecider.java", "diffHunk": "@@ -121,10 +126,16 @@ private ModifyQueueCapacityAction configureQueueCapacity(NodeKey esNode, Resourc\n   }\n \n   private int getNodeQueueCapacity(NodeKey esNode, ResourceEnum threadPool) {\n-    // TODO: use NodeConfigurationRca to return capacity, for now returning defaults\n-    if (threadPool.equals(ResourceEnum.SEARCH_THREADPOOL)) {\n-      return 1000;\n+    try {\n+      return (int) getAppContext().getNodeConfigCache().get(esNode, Resource.newBuilder()\n+              .setResourceEnum(threadPool)\n+              .setMetricEnum(MetricEnum.QUEUE_CAPACITY).build());\n+    } catch (Exception e) {\n+      LOG.error(\"Exception while reading values from Node Config Cache\", e);\n     }\n-    return 100;\n+    // No action if value not present in the cache.\n+    // Assumption here is the cache has been wiped off due to\n+    // unforeseen events and we dont want to trigger any action.\n+    return -1;", "originalCommit": "693244f496b8f6de9f48fed6413fec8e866a83cc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk1NDEyNQ==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/314#discussion_r461954125", "bodyText": "Done", "author": "aditjind", "createdAt": "2020-07-28T23:39:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk1MDU1Mw=="}], "type": "inlineReview"}, {"oid": "dfeed4ce8bfdaa2e894e5c9ac95119dc0be6cab1", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/dfeed4ce8bfdaa2e894e5c9ac95119dc0be6cab1", "message": "Addressing PR Comments x2", "committedDate": "2020-07-28T23:39:03Z", "type": "commit"}, {"oid": "68c11071fffab778df90ddbe7318aa50630e9ddc", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/68c11071fffab778df90ddbe7318aa50630e9ddc", "message": "Modifying Variables", "committedDate": "2020-07-28T23:41:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjYyNDQyMA==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/314#discussion_r462624420", "bodyText": "This will return an IllegalArgumentException if the NodeKey is not present. We should add handling for it.", "author": "khushbr", "createdAt": "2020-07-29T22:23:14Z", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/deciders/QueueHealthDecider.java", "diffHunk": "@@ -121,10 +134,8 @@ private ModifyQueueCapacityAction configureQueueCapacity(NodeKey esNode, Resourc\n   }\n \n   private int getNodeQueueCapacity(NodeKey esNode, ResourceEnum threadPool) {\n-    // TODO: use NodeConfigurationRca to return capacity, for now returning defaults\n-    if (threadPool.equals(ResourceEnum.SEARCH_THREADPOOL)) {\n-      return 1000;\n-    }\n-    return 100;\n+      return (int) getAppContext().getNodeConfigCache().get(esNode, Resource.newBuilder()", "originalCommit": "68c11071fffab778df90ddbe7318aa50630e9ddc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjYzMTE3MA==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/314#discussion_r462631170", "bodyText": "I have handled exceptions in the caller of this function. It will result in no action being taken on the cluster.", "author": "aditjind", "createdAt": "2020-07-29T22:40:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjYyNDQyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjYzMTk4NA==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/314#discussion_r462631984", "bodyText": "nit: should we add a throws keyword here ?", "author": "rguo-aws", "createdAt": "2020-07-29T22:43:09Z", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/deciders/QueueHealthDecider.java", "diffHunk": "@@ -121,10 +134,8 @@ private ModifyQueueCapacityAction configureQueueCapacity(NodeKey esNode, Resourc\n   }\n \n   private int getNodeQueueCapacity(NodeKey esNode, ResourceEnum threadPool) {", "originalCommit": "68c11071fffab778df90ddbe7318aa50630e9ddc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}