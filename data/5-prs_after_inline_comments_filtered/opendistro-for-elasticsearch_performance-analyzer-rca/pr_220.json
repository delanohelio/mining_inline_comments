{"pr_number": 220, "pr_title": "Removing the min and the max shard calculations.", "pr_createdAt": "2020-06-01T22:26:16Z", "pr_url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/220", "timeline": [{"oid": "f2d265f579bdf2748f6a6f8941d5ff2d3fe1bf2e", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/f2d265f579bdf2748f6a6f8941d5ff2d3fe1bf2e", "message": "Removing the min and the max shard calculations while inserting shards in a Zone\n\nInstead while returning the shard list as part of the REST request, we sort\nshards by the temperature value for the dimension.", "committedDate": "2020-06-01T22:21:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUyODM2Nw==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/220#discussion_r433528367", "bodyText": "nit: A comment would be nice here, this seems \"backwards\" until you realize we're trying to sort temperatures from high to low", "author": "sidheart", "createdAt": "2020-06-01T22:44:40Z", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/api/summaries/temperature/NodeLevelDimensionalSummary.java", "diffHunk": "@@ -381,4 +351,11 @@ public JsonElement toJson() {\n             return summaryObj;\n         }\n     }\n+\n+    private class ShardProfileComparator implements Comparator<ShardProfileSummary> {\n+        @Override\n+        public int compare(ShardProfileSummary o1, ShardProfileSummary o2) {", "originalCommit": "f2d265f579bdf2748f6a6f8941d5ff2d3fe1bf2e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUzMzcxNg==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/220#discussion_r433533716", "bodyText": "Makes sense. Will add one", "author": "yojs", "createdAt": "2020-06-01T23:02:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUyODM2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUzNDE0OA==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/220#discussion_r433534148", "bodyText": "LGTM!", "author": "aditjind", "createdAt": "2020-06-01T23:03:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUyODM2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUzNTA4Ng==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/220#discussion_r433535086", "bodyText": "Are we making this schemaless by adding the entire json blob into a single tuple in SQL table ?", "author": "rguo-aws", "createdAt": "2020-06-01T23:07:02Z", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/api/summaries/temperature/NodeLevelDimensionalSummary.java", "diffHunk": "@@ -347,9 +322,11 @@ public String getTableName() {\n         public List<Object> getSqlValue() {\n             List<Object> values = new ArrayList<>();\n             values.add(myZone.name());\n-            values.add(minShard == null ? \"\" : minShard.toJson());\n-            values.add(maxShard == null ? \"\" : maxShard.toJson());\n             JsonArray array = new JsonArray();\n+\n+            // The reason we are not getting shards ordered by temperature as\n+            // we don't want to pay the cost of sorting while writes. We do writes\n+            // more often than reads and therefore, we would rather sort on reads.\n             for (ShardProfileSummary shard : shardProfileSummaries) {", "originalCommit": "f2d265f579bdf2748f6a6f8941d5ff2d3fe1bf2e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "edc220039ea1e011868a4c192ce5628d674c404b", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/edc220039ea1e011868a4c192ce5628d674c404b", "message": "making it more obvious that this is reverse sorted", "committedDate": "2020-06-01T23:23:58Z", "type": "commit"}]}