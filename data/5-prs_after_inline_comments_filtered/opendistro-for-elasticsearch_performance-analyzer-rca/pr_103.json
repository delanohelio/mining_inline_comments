{"pr_number": 103, "pr_title": "Persist nested summaries only if the flowunit is emitted by the top level RCA of each node", "pr_createdAt": "2020-02-13T02:25:28Z", "pr_url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/103", "timeline": [{"oid": "bae6f95183d81c0dde3ada5be3f29fe5dea623d9", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/bae6f95183d81c0dde3ada5be3f29fe5dea623d9", "message": "Persist nested summaries only if the flowunit is emitted by the top level RCA of each node", "committedDate": "2020-02-13T00:42:33Z", "type": "commit"}, {"oid": "97e76133e8e0fa3dd3fa46e023942e724fd6e02a", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/97e76133e8e0fa3dd3fa46e023942e724fd6e02a", "message": "Add an unit test to capture this summary persistence issue", "committedDate": "2020-02-13T02:19:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTEyMzgzNw==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/103#discussion_r379123837", "bodyText": "probably we want to remove this ? :)", "author": "yojs", "createdAt": "2020-02-13T21:18:34Z", "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/persistence/PersistFlowUnitAndSummaryTest.java", "diffHunk": "@@ -0,0 +1,206 @@\n+/*\n+ * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.persistence;\n+\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.grpc.JvmEnum;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.grpc.ResourceType;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.metrics.AllMetrics;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.metrics.AllMetrics.NodeRole;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.GradleTaskForRca;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.AnalysisGraph;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.Metric;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.Rca;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.Resources;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.contexts.ResourceContext;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.flow_units.ResourceFlowUnit;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.metrics.Heap_Used;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.summaries.HotResourceSummary;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.core.Queryable;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.core.RcaConf;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.core.ThresholdMain;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.util.RcaConsts;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.util.RcaConsts.RcaTagConstants;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.util.RcaUtil;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.net.WireHopper;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.scheduler.FlowUnitOperationArgWrapper;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.scheduler.RCAScheduler;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.spec.MetricsDBProviderTestHelper;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.store.rca.HighHeapUsageClusterRca;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.store.rca.HotNodeRca;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.reader.ClusterDetailsEventProcessorTestHelper;\n+import java.nio.file.Paths;\n+import java.util.Collections;\n+import org.junit.After;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+\n+@Category(GradleTaskForRca.class)\n+@SuppressWarnings(\"serial\")\n+public class PersistFlowUnitAndSummaryTest {\n+  Queryable queryable;\n+\n+  static class DummyYoungGenRca extends Rca<ResourceFlowUnit> {\n+    public <M extends Metric> DummyYoungGenRca(M metric) {\n+      super(1);\n+    }\n+\n+    @Override\n+    public ResourceFlowUnit operate() {\n+      System.out.println(\"!!!!! ruizhen : scheduled \\n\");", "originalCommit": "97e76133e8e0fa3dd3fa46e023942e724fd6e02a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTEzMTQ3MQ==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/103#discussion_r379131471", "bodyText": "done", "author": "rguo-aws", "createdAt": "2020-02-13T21:35:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTEyMzgzNw=="}], "type": "inlineReview"}, {"oid": "c5f12eee27cbcdb97945fa767bec3cbee6e60109", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/c5f12eee27cbcdb97945fa767bec3cbee6e60109", "message": "remove debugging log", "committedDate": "2020-02-13T21:24:25Z", "type": "commit"}]}