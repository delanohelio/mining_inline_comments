{"pr_number": 475, "pr_title": "Add missing upstream rca node for heap health decider", "pr_createdAt": "2020-10-16T19:25:31Z", "pr_url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/475", "timeline": [{"oid": "75d0a51bff2c4c46b63106fba74a88589a2b864b", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/75d0a51bff2c4c46b63106fba74a88589a2b864b", "message": "Add missing upstream rca node for heap health decider", "committedDate": "2020-10-16T18:55:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY5MjY0Ng==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/475#discussion_r506692646", "bodyText": "Did we add decider integ tests? How did they pass without this?", "author": "vigyasharma", "createdAt": "2020-10-16T19:56:56Z", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ElasticSearchAnalysisGraph.java", "diffHunk": "@@ -200,7 +199,7 @@ public void construct() {\n     HeapHealthDecider heapHealthDecider = new HeapHealthDecider(RCA_PERIOD, highHeapUsageClusterRca,\n         largeHeapClusterRca);\n     heapHealthDecider.addTag(TAG_LOCUS, LOCUS_MASTER_NODE);\n-    heapHealthDecider.addAllUpstreams(Collections.singletonList(highHeapUsageClusterRca));\n+    heapHealthDecider.addAllUpstreams(Arrays.asList(highHeapUsageClusterRca, largeHeapClusterRca));", "originalCommit": "75d0a51bff2c4c46b63106fba74a88589a2b864b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjcxNzYxMw==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/475#discussion_r506717613", "bodyText": "No, we don't have decider integ tests yet.\n\nHow did they pass without this?\n\nNot having it in the upstream list won't necessarily fail the integration test even if we had one. The scheduler can at worst get the scheduling wrong and have the decider run before the RCA(because they'll be executed in parallel based on the distance from the leaf nodes). This causes race conditions which may or may not fail in the integ test. This upstream dependency was present in the 128G PR: #439 though, so this wouldn't have been caught then. Maybe at/after merge?", "author": "ktkrg", "createdAt": "2020-10-16T20:56:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY5MjY0Ng=="}], "type": "inlineReview"}]}