{"pr_number": 295, "pr_title": "Add listeners for publisher actions", "pr_createdAt": "2020-07-20T23:22:14Z", "pr_url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/295", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc2NDI1OA==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/295#discussion_r457764258", "bodyText": "should we make this list thread safe ? it looks to me that addActionListener() is called from a different thread.", "author": "rguo-aws", "createdAt": "2020-07-21T00:23:54Z", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/deciders/Publisher.java", "diffHunk": "@@ -30,10 +33,12 @@\n \n   private Collator collator;\n   private boolean isMuted = false;\n+  private List<ActionListener> actionListeners;", "originalCommit": "2c1e740c552da0a02e7800061f118c47331b9473", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYxMjI3NA==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/295#discussion_r460612274", "bodyText": "It should only be called during instantiation of the graph, not during regular scheduling.", "author": "vigyasharma", "createdAt": "2020-07-27T02:12:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc2NDI1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc2NTQwMA==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/295#discussion_r457765400", "bodyText": "maybe we should add an error log here ?", "author": "rguo-aws", "createdAt": "2020-07-21T00:27:53Z", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/plugins/PluginController.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.plugins;\n+\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.decisionmaker.actions.ActionListener;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.decisionmaker.deciders.Publisher;\n+import java.lang.reflect.Constructor;\n+import java.lang.reflect.InvocationTargetException;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+public class PluginController {\n+\n+  private static final Logger LOG = LogManager.getLogger(PluginController.class);\n+  private final Publisher publisher;\n+  private List<Plugin> plugins;\n+\n+  public PluginController(Publisher publisher) {\n+    this.publisher = publisher;\n+    this.plugins = new ArrayList<>();\n+    loadFrameworkPlugins();\n+    registerActionListeners();\n+  }\n+\n+  private void loadFrameworkPlugins() {\n+    for (Class<?> pluginClass : PluginControllerConfig.getFrameworkPlugins()) {\n+      final Constructor<?>[] constructors = pluginClass.getConstructors();\n+      if (constructors.length == 0) {\n+        throw new IllegalStateException(\n+            \"no public constructor found for plugin class: [\" + pluginClass.getName() + \"]\");\n+      }\n+      if (constructors.length > 1) {\n+        throw new IllegalStateException(\n+            \"unique constructor expected for plugin class: [\" + pluginClass.getName() + \"]\");\n+      }\n+      if (constructors[0].getParameterCount() != 0) {\n+        throw new IllegalStateException(\n+            \"default constructor expected for plugin class: [\" + pluginClass.getName() + \"]\");\n+      }\n+\n+      try {\n+        plugins.add((Plugin) constructors[0].newInstance());\n+        LOG.info(\"loaded plugin: [{}]\", plugins.get(plugins.size() - 1).name());\n+      } catch (InstantiationException | IllegalAccessException | InvocationTargetException e) {\n+        e.printStackTrace();", "originalCommit": "2c1e740c552da0a02e7800061f118c47331b9473", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQxMjE2NQ==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/295#discussion_r458412165", "bodyText": "^ seconded can we replace this with Log.error(\"message\", e)? That'll include the stacktrace.", "author": "sidheart", "createdAt": "2020-07-21T21:56:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc2NTQwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYxMjAyMA==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/295#discussion_r460612020", "bodyText": "Added error log here and throwing a runtime exception. Since these are currently framework plugins, which are critical, I want the process to error out instead of silently logging them.", "author": "vigyasharma", "createdAt": "2020-07-27T02:11:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc2NTQwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc2NjMxNw==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/295#discussion_r457766317", "bodyText": "IllegalStateException is not handled here.", "author": "rguo-aws", "createdAt": "2020-07-21T00:31:18Z", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/plugins/PluginController.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.plugins;\n+\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.decisionmaker.actions.ActionListener;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.decisionmaker.deciders.Publisher;\n+import java.lang.reflect.Constructor;\n+import java.lang.reflect.InvocationTargetException;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+public class PluginController {\n+\n+  private static final Logger LOG = LogManager.getLogger(PluginController.class);\n+  private final Publisher publisher;\n+  private List<Plugin> plugins;\n+\n+  public PluginController(Publisher publisher) {\n+    this.publisher = publisher;\n+    this.plugins = new ArrayList<>();\n+    loadFrameworkPlugins();", "originalCommit": "2c1e740c552da0a02e7800061f118c47331b9473", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYxMjEyNQ==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/295#discussion_r460612125", "bodyText": "We want the system to error out as plugins can be critical.", "author": "vigyasharma", "createdAt": "2020-07-27T02:12:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc2NjMxNw=="}], "type": "inlineReview"}, {"oid": "a0a3d3a1e88c5b5613b02978c1d0b328d8332e56", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/a0a3d3a1e88c5b5613b02978c1d0b328d8332e56", "message": "Remove action execute method", "committedDate": "2020-07-25T01:11:24Z", "type": "forcePushed"}, {"oid": "5366e63f0de3c15bc465f885390b9a45adf5eb11", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/5366e63f0de3c15bc465f885390b9a45adf5eb11", "message": "Throw exceptions if unable to instantiate plugin", "committedDate": "2020-07-27T21:19:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE4MzMwMA==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/295#discussion_r461183300", "bodyText": "Can we use a singleton pattern here instead of static? Then we can avoid the PowerMock stuff in the test class and have multiple configs in one JVM context", "author": "sidheart", "createdAt": "2020-07-27T21:33:38Z", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/plugins/PluginControllerConfig.java", "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.plugins;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class PluginControllerConfig {", "originalCommit": "5366e63f0de3c15bc465f885390b9a45adf5eb11", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE4NDQxMQ==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/295#discussion_r461184411", "bodyText": "I have a strong distaste for PowerMock, it breaks code coverage analysis since it generates new bytecode and it causes a host of compiler warning that will eventually block us from building our code with newer versions of java. Can we use a singleton pattern for PluginControllerConfig and mock it using Mockito instead?", "author": "sidheart", "createdAt": "2020-07-27T21:35:45Z", "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/plugins/PluginControllerTest.java", "diffHunk": "@@ -0,0 +1,158 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.plugins;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.isA;\n+import static org.mockito.Mockito.times;\n+\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.decisionmaker.actions.Action;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.decisionmaker.actions.ActionListener;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.decisionmaker.deciders.Publisher;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mockito;\n+import org.powermock.api.mockito.PowerMockito;\n+import org.powermock.core.classloader.annotations.PowerMockIgnore;\n+import org.powermock.core.classloader.annotations.PrepareForTest;\n+import org.powermock.modules.junit4.PowerMockRunner;\n+\n+@PowerMockIgnore({\"com.sun.org.apache.xerces.*\", \"org.apache.logging.log4j.*\"})", "originalCommit": "5366e63f0de3c15bc465f885390b9a45adf5eb11", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0da4e8cdf802f4baeba4f0f30f9b34045af7d90a", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/0da4e8cdf802f4baeba4f0f30f9b34045af7d90a", "message": "Checkstyle fixes", "committedDate": "2020-07-28T05:10:43Z", "type": "forcePushed"}, {"oid": "0ea01effd1b99778304b9cf67e1d066c040925d9", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/0ea01effd1b99778304b9cf67e1d066c040925d9", "message": "Fix broken UT after rebase", "committedDate": "2020-07-29T00:53:47Z", "type": "forcePushed"}, {"oid": "4070fb3cd6ae2afae2c06b005c7b00470d311d14", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/4070fb3cd6ae2afae2c06b005c7b00470d311d14", "message": "Spotbugs fix", "committedDate": "2020-07-29T15:55:33Z", "type": "forcePushed"}, {"oid": "cf547f6130d6a648684c5802b69453bf836917ee", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/cf547f6130d6a648684c5802b69453bf836917ee", "message": "Code changes for action listener plugin", "committedDate": "2020-07-30T20:31:48Z", "type": "commit"}, {"oid": "aaf56f096b426390a00d2eae655eb571ee5a1d69", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/aaf56f096b426390a00d2eae655eb571ee5a1d69", "message": "Remove action execute method", "committedDate": "2020-07-30T20:31:48Z", "type": "commit"}, {"oid": "389a3357f6acf5b6e0d9538786715ca17033d934", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/389a3357f6acf5b6e0d9538786715ca17033d934", "message": "Add tests for framework plugins controller", "committedDate": "2020-07-30T20:31:49Z", "type": "commit"}, {"oid": "d0de8f8e932e7d9e6ab705b5deb3931fd0c235bb", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/d0de8f8e932e7d9e6ab705b5deb3931fd0c235bb", "message": "Fix styling issues", "committedDate": "2020-07-30T20:31:49Z", "type": "commit"}, {"oid": "e169ed78b6b031448a299b794167ab445acda612", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/e169ed78b6b031448a299b794167ab445acda612", "message": "Throw exceptions if unable to instantiate plugin", "committedDate": "2020-07-30T20:31:49Z", "type": "commit"}, {"oid": "b8b54875bf40eab730a4d7478a8518c9d2113417", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/b8b54875bf40eab730a4d7478a8518c9d2113417", "message": "Remove execute from cache capacity action", "committedDate": "2020-07-30T20:31:49Z", "type": "commit"}, {"oid": "f14914443194a0641afdd92dc580ea1175716741", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/f14914443194a0641afdd92dc580ea1175716741", "message": "Checkstyle fixes", "committedDate": "2020-07-30T20:31:49Z", "type": "commit"}, {"oid": "5d1cbfa9f5f1e7f728d1cb7013c754ed807dba7b", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/5d1cbfa9f5f1e7f728d1cb7013c754ed807dba7b", "message": "Remove static from PluginControllerConfig", "committedDate": "2020-07-30T20:31:49Z", "type": "commit"}, {"oid": "8b5388fc76ef70c01773a403fd7c545d9497a3c1", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/8b5388fc76ef70c01773a403fd7c545d9497a3c1", "message": "Fix broken UT after rebase", "committedDate": "2020-07-30T20:31:49Z", "type": "commit"}, {"oid": "d207d659a4d2a18e65fb2130c2e455197b627f4a", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/d207d659a4d2a18e65fb2130c2e455197b627f4a", "message": "Spotbugs fix", "committedDate": "2020-07-30T20:31:49Z", "type": "commit"}, {"oid": "d207d659a4d2a18e65fb2130c2e455197b627f4a", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/d207d659a4d2a18e65fb2130c2e455197b627f4a", "message": "Spotbugs fix", "committedDate": "2020-07-30T20:31:49Z", "type": "forcePushed"}]}