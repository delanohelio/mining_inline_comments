{"pr_number": 1413, "pr_title": "Limiting the number of tasks/loops in _parallel", "pr_createdAt": "2020-06-05T13:23:09Z", "pr_url": "https://github.com/treasure-data/digdag/pull/1413", "timeline": [{"oid": "2e6c865a94dc1a46faf80249b165b0a089c368a0", "url": "https://github.com/treasure-data/digdag/commit/2e6c865a94dc1a46faf80249b165b0a089c368a0", "message": "Update _parallel parameter to accept more options\n\nCurrently, _parallel: BOOLEAN can be accepted, but this makes JSON objects can also be acceptable.", "committedDate": "2020-06-05T02:21:23Z", "type": "commit"}, {"oid": "6d6de023cb4d245fbebbf6f18c36405fb55ae108", "url": "https://github.com/treasure-data/digdag/commit/6d6de023cb4d245fbebbf6f18c36405fb55ae108", "message": "Extract method parseSubtaskWithParallel", "committedDate": "2020-06-05T02:21:23Z", "type": "commit"}, {"oid": "6e34078652da0ba12bc03dd02ad90129ec5ee649", "url": "https://github.com/treasure-data/digdag/commit/6e34078652da0ba12bc03dd02ad90129ec5ee649", "message": "Update to accept _parallel parameter as JsonNode instead of boolean\n\nAdd support for limiting the number of concurrent runs (loops) by using _parallel: {limit: N} parameter", "committedDate": "2020-06-05T02:21:23Z", "type": "commit"}, {"oid": "f2b4fb769a132d0604ba099f50c09aec314e2fc8", "url": "https://github.com/treasure-data/digdag/commit/f2b4fb769a132d0604ba099f50c09aec314e2fc8", "message": "Add test cases for _parallel: {limit: N}", "committedDate": "2020-06-05T02:21:23Z", "type": "commit"}, {"oid": "38b8416a3091d2f20e1d8b59f0491662d78fc3bd", "url": "https://github.com/treasure-data/digdag/commit/38b8416a3091d2f20e1d8b59f0491662d78fc3bd", "message": "Update docs of _parallel", "committedDate": "2020-06-05T02:21:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU2MzkzOQ==", "url": "https://github.com/treasure-data/digdag/pull/1413#discussion_r438563939", "bodyText": "Maybe the following is slightly better while it changes how to handle negative figure for limit ?\n    if (pc.isParallel()) {\n        if (pc.getParallelLimit() > 0) {\n            :\n        }\n        else {\n            :\n        }\n    }\n    else {\n        :\n    }", "author": "komamitsu", "createdAt": "2020-06-11T06:14:31Z", "path": "digdag-core/src/main/java/io/digdag/core/workflow/WorkflowCompiler.java", "diffHunk": "@@ -231,22 +232,25 @@ else if (config.has(\"_type\") || config.getKeys().stream().anyMatch(key -> key.en\n                     .map(pair -> collect(Optional.of(tb), fullName, pair.getKey(), pair.getValue(), validator))\n                     .collect(Collectors.toList());\n \n-                if (config.get(\"_parallel\", boolean.class, false)) {\n-                    // _after: is valid only when parallel: is true\n-                    Map<String, TaskBuilder> names = new HashMap<>();\n+                ParallelControl pc = new ParallelControl(config);\n+                Map<String, TaskBuilder> names = new HashMap<>();\n+                if (pc.isParallel() && pc.getParallelLimit() == 0) {", "originalCommit": "38b8416a3091d2f20e1d8b59f0491662d78fc3bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjA0ODE2OQ==", "url": "https://github.com/treasure-data/digdag/pull/1413#discussion_r442048169", "bodyText": "Good point, updated 3a11951", "author": "szyn", "createdAt": "2020-06-18T08:14:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU2MzkzOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYyODQ3Mw==", "url": "https://github.com/treasure-data/digdag/pull/1413#discussion_r438628473", "bodyText": "\ud83d\udc4d", "author": "komamitsu", "createdAt": "2020-06-11T08:34:19Z", "path": "digdag-core/src/main/java/io/digdag/core/workflow/WorkflowCompiler.java", "diffHunk": "@@ -231,22 +232,25 @@ else if (config.has(\"_type\") || config.getKeys().stream().anyMatch(key -> key.en\n                     .map(pair -> collect(Optional.of(tb), fullName, pair.getKey(), pair.getValue(), validator))\n                     .collect(Collectors.toList());\n \n-                if (config.get(\"_parallel\", boolean.class, false)) {\n-                    // _after: is valid only when parallel: is true\n-                    Map<String, TaskBuilder> names = new HashMap<>();\n+                ParallelControl pc = new ParallelControl(config);\n+                Map<String, TaskBuilder> names = new HashMap<>();\n+                if (pc.isParallel() && pc.getParallelLimit() == 0) {\n                     for (TaskBuilder subtask : subtasks) {\n-                        if (subtask.getConfig().get(\"_background\", boolean.class, false)) {\n-                            throw new ConfigException(\"Setting \\\"_background: true\\\" option is invalid (unnecessary) if its parent task has \\\"_parallel: true\\\" option\");\n-                        }\n-                        for (String upName : subtask.getConfig().getListOrEmpty(\"_after\", String.class)) {\n-                            TaskBuilder up = names.get(upName);\n-                            if (up == null) {\n-                                throw new ConfigException(\"Dependency task '\"+upName+\"' does not exist\");\n+                        parseSubtaskWithParallel(names, subtask);\n+                    }\n+                }\n+                else if (pc.isParallel() && pc.getParallelLimit() > 0) {\n+                    int limit = pc.getParallelLimit();\n+                    List<TaskBuilder> beforeList = new ArrayList<>();\n+                    for (List<TaskBuilder> chunkedSubtasks : Lists.partition(subtasks, limit)) {", "originalCommit": "38b8416a3091d2f20e1d8b59f0491662d78fc3bd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIxMjk3NQ==", "url": "https://github.com/treasure-data/digdag/pull/1413#discussion_r439212975", "bodyText": "Could you adjust the alignment of expected column?", "author": "komamitsu", "createdAt": "2020-06-12T05:24:39Z", "path": "digdag-core/src/test/java/io/digdag/core/workflow/TaskDependenciesTest.java", "diffHunk": "@@ -212,4 +214,113 @@ public void testGroupRetryTaskDependencies()\n             return null;\n         });\n     }\n+\n+    @Test\n+    public void testParallelLimitDependencies()\n+            throws Exception {\n+        StoredSessionAttemptWithSession attempt =\n+                runWorkflow(embed, projectPath, \"parallel_limit\", loadYamlResource(\"/io/digdag/core/workflow/parallel_limit.dig\"));\n+        tm.begin(() -> {\n+            assertThat(attempt.getStateFlags().isSuccess(), is(true));\n+            List<ArchivedTask> tasks = localSite.getSessionStore().getTasksOfAttempt(attempt.getId());\n+            // # parallel_limit.dig\n+            // +repeat:\n+            //   loop>: 5\n+            //   _parallel:\n+            //     limit: 2\n+            //   _do:\n+            //     +step1:\n+            //       echo>: '${this.task_name}'\n+            //     +step2:\n+            //       echo>: '${this.task_name}'\n+            //     +step3:\n+            //       echo>: '${this.task_name}'\n+            //\n+            // id | tasks index   | full_name                                 | expected parent_id | expected upstream_id \u3000", "originalCommit": "38b8416a3091d2f20e1d8b59f0491662d78fc3bd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIxNTIwNg==", "url": "https://github.com/treasure-data/digdag/pull/1413#discussion_r439215206", "bodyText": "These 2 entries have wrong upstream_id?", "author": "komamitsu", "createdAt": "2020-06-12T05:33:06Z", "path": "digdag-core/src/test/java/io/digdag/core/workflow/TaskDependenciesTest.java", "diffHunk": "@@ -212,4 +214,113 @@ public void testGroupRetryTaskDependencies()\n             return null;\n         });\n     }\n+\n+    @Test\n+    public void testParallelLimitDependencies()\n+            throws Exception {\n+        StoredSessionAttemptWithSession attempt =\n+                runWorkflow(embed, projectPath, \"parallel_limit\", loadYamlResource(\"/io/digdag/core/workflow/parallel_limit.dig\"));\n+        tm.begin(() -> {\n+            assertThat(attempt.getStateFlags().isSuccess(), is(true));\n+            List<ArchivedTask> tasks = localSite.getSessionStore().getTasksOfAttempt(attempt.getId());\n+            // # parallel_limit.dig\n+            // +repeat:\n+            //   loop>: 5\n+            //   _parallel:\n+            //     limit: 2\n+            //   _do:\n+            //     +step1:\n+            //       echo>: '${this.task_name}'\n+            //     +step2:\n+            //       echo>: '${this.task_name}'\n+            //     +step3:\n+            //       echo>: '${this.task_name}'\n+            //\n+            // id | tasks index   | full_name                                 | expected parent_id | expected upstream_id \u3000\n+            // 1  | tasks.get(0)  | +parallel_limit                         |                    |\n+            // 2  | tasks.get(1)  | +parallel_limit+repeat                  | 1                  |\n+            // 3  | tasks.get(2)  | +parallel_limit+repeat^sub              | 2                  |\n+            // 4  | tasks.get(3)  | +parallel_limit+repeat^sub+loop-0       | 3                  |\n+            // 5  | tasks.get(4)  | +parallel_limit+repeat^sub+loop-0+step1 | 4                  |\n+            // 6  | tasks.get(5)  | +parallel_limit+repeat^sub+loop-0+step2 | 4                  | 5\n+            // 7  | tasks.get(6)  | +parallel_limit+repeat^sub+loop-0+step3 | 4                  | 6\n+            // 8  | tasks.get(7)  | +parallel_limit+repeat^sub+loop-1       | 3                  |\n+            // 9  | tasks.get(8)  | +parallel_limit+repeat^sub+loop-1+step1 | 8                  | 9", "originalCommit": "38b8416a3091d2f20e1d8b59f0491662d78fc3bd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIxNjEyNg==", "url": "https://github.com/treasure-data/digdag/pull/1413#discussion_r439216126", "bodyText": "4,8 is correct?", "author": "komamitsu", "createdAt": "2020-06-12T05:36:46Z", "path": "digdag-core/src/test/java/io/digdag/core/workflow/TaskDependenciesTest.java", "diffHunk": "@@ -212,4 +214,113 @@ public void testGroupRetryTaskDependencies()\n             return null;\n         });\n     }\n+\n+    @Test\n+    public void testParallelLimitDependencies()\n+            throws Exception {\n+        StoredSessionAttemptWithSession attempt =\n+                runWorkflow(embed, projectPath, \"parallel_limit\", loadYamlResource(\"/io/digdag/core/workflow/parallel_limit.dig\"));\n+        tm.begin(() -> {\n+            assertThat(attempt.getStateFlags().isSuccess(), is(true));\n+            List<ArchivedTask> tasks = localSite.getSessionStore().getTasksOfAttempt(attempt.getId());\n+            // # parallel_limit.dig\n+            // +repeat:\n+            //   loop>: 5\n+            //   _parallel:\n+            //     limit: 2\n+            //   _do:\n+            //     +step1:\n+            //       echo>: '${this.task_name}'\n+            //     +step2:\n+            //       echo>: '${this.task_name}'\n+            //     +step3:\n+            //       echo>: '${this.task_name}'\n+            //\n+            // id | tasks index   | full_name                                 | expected parent_id | expected upstream_id \u3000\n+            // 1  | tasks.get(0)  | +parallel_limit                         |                    |\n+            // 2  | tasks.get(1)  | +parallel_limit+repeat                  | 1                  |\n+            // 3  | tasks.get(2)  | +parallel_limit+repeat^sub              | 2                  |\n+            // 4  | tasks.get(3)  | +parallel_limit+repeat^sub+loop-0       | 3                  |\n+            // 5  | tasks.get(4)  | +parallel_limit+repeat^sub+loop-0+step1 | 4                  |\n+            // 6  | tasks.get(5)  | +parallel_limit+repeat^sub+loop-0+step2 | 4                  | 5\n+            // 7  | tasks.get(6)  | +parallel_limit+repeat^sub+loop-0+step3 | 4                  | 6\n+            // 8  | tasks.get(7)  | +parallel_limit+repeat^sub+loop-1       | 3                  |\n+            // 9  | tasks.get(8)  | +parallel_limit+repeat^sub+loop-1+step1 | 8                  | 9\n+            // 10 | tasks.get(9)  | +parallel_limit+repeat^sub+loop-1+step2 | 8                  | 10\n+            // 11 | tasks.get(10) | +parallel_limit+repeat^sub+loop-1+step3 | 8                  | 4,8", "originalCommit": "38b8416a3091d2f20e1d8b59f0491662d78fc3bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjA1MDMwMg==", "url": "https://github.com/treasure-data/digdag/pull/1413#discussion_r442050302", "bodyText": "Thank you! It's wrong. Fixed: 75a87b1", "author": "szyn", "createdAt": "2020-06-18T08:17:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIxNjEyNg=="}], "type": "inlineReview"}, {"oid": "75a87b1b600c0df324c3e346e39b6f11c5ce2be8", "url": "https://github.com/treasure-data/digdag/commit/75a87b1b600c0df324c3e346e39b6f11c5ce2be8", "message": "Fix the comment on testParallelLimitDependencies", "committedDate": "2020-06-12T06:50:27Z", "type": "commit"}, {"oid": "cf56b4d7eed4fb082a88ff2a125770d23106463c", "url": "https://github.com/treasure-data/digdag/commit/cf56b4d7eed4fb082a88ff2a125770d23106463c", "message": "Update formatting", "committedDate": "2020-06-12T07:06:23Z", "type": "commit"}, {"oid": "ad5ea45c528dd10d50c2e590fdd1286814c50f24", "url": "https://github.com/treasure-data/digdag/commit/ad5ea45c528dd10d50c2e590fdd1286814c50f24", "message": "Follow-up of 38b8416", "committedDate": "2020-06-12T07:33:33Z", "type": "commit"}, {"oid": "3a1195101f2fd0f706c9e420cb7941f910bb373c", "url": "https://github.com/treasure-data/digdag/commit/3a1195101f2fd0f706c9e420cb7941f910bb373c", "message": "Update to make it easier to handle a parallel limit number", "committedDate": "2020-06-12T07:34:22Z", "type": "commit"}]}