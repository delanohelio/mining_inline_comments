{"pr_number": 8196, "pr_title": "Improve environments pipeline edit", "pr_createdAt": "2020-05-28T21:20:31Z", "pr_url": "https://github.com/gocd/gocd/pull/8196", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMwMzcxMg==", "url": "https://github.com/gocd/gocd/pull/8196#discussion_r432303712", "bodyText": "This is not required as the envs page does not need the users and roles info.", "author": "kritika-singh3", "createdAt": "2020-05-29T07:28:20Z", "path": "api/api-internal-pipeline-groups-v1/src/main/java/com/thoughtworks/go/apiv1/internalpipelinegroups/representers/InternalPipelineGroupsRepresenter.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright 2020 ThoughtWorks, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.thoughtworks.go.apiv1.internalpipelinegroups.representers;\n+\n+import com.thoughtworks.go.api.base.OutputWriter;\n+import com.thoughtworks.go.apiv1.internalpipelinegroups.models.PipelineGroupsViewModel;\n+import com.thoughtworks.go.config.EnvironmentConfig;\n+import com.thoughtworks.go.config.PipelineConfig;\n+import com.thoughtworks.go.config.remote.ConfigOrigin;\n+import com.thoughtworks.go.config.remote.FileConfigOrigin;\n+import com.thoughtworks.go.config.remote.RepoConfigOrigin;\n+\n+import java.util.Collection;\n+\n+public class InternalPipelineGroupsRepresenter {\n+    public static void toJSON(OutputWriter outputWriter, PipelineGroupsViewModel pipelineGroupsViewModel) {\n+        outputWriter.\n+                addChildList(\"groups\", groupsWriter -> {\n+                    pipelineGroupsViewModel.getPipelineGroups().forEach(group -> {\n+                        groupsWriter.addChild(groupWriter -> {\n+                            groupWriter.add(\"name\", group.getGroup())\n+                                    .addChildList(\"pipelines\",\n+                                            outputListWriter -> group.forEach(pipelineConfig -> {\n+                                                outputListWriter.addChild(pipelineWriter -> {\n+                                                    pipelineWriter.add(\"name\", pipelineConfig.name());\n+                                                    writeOrigin(pipelineWriter, pipelineConfig.getOrigin());\n+                                                    renderEnvironment(pipelineWriter, pipelineConfig, pipelineGroupsViewModel);\n+                                                });\n+                                            }));\n+                        });\n+                    });\n+                });\n+    }\n+\n+    private static void renderEnvironment(OutputWriter pipelineWriter, PipelineConfig pipelineConfig, PipelineGroupsViewModel environments) {\n+        EnvironmentConfig envForPipeline = environments.environmentFor(pipelineConfig.name());\n+        if (envForPipeline != null) {\n+            pipelineWriter.add(\"environment\", envForPipeline.name());\n+        } else {\n+            pipelineWriter.renderNull(\"environment\");\n+        }\n+    }\n+\n+    private static void writeOrigin(OutputWriter jsonWriter, ConfigOrigin origin) {\n+        if (origin instanceof FileConfigOrigin) {\n+            jsonWriter.addChild(\"origin\", originWriter -> originWriter.add(\"type\", \"gocd\"));\n+        } else if (origin instanceof RepoConfigOrigin) {\n+            jsonWriter.addChild(\"origin\", originWriter -> {\n+                originWriter.add(\"type\", \"config_repo\");\n+                originWriter.add(\"id\", ((RepoConfigOrigin) origin).getConfigRepo().getId());\n+            });\n+        }\n+    }\n+\n+    public static void toJSON(OutputWriter outputWriter, PipelineGroupsViewModel pipelineGroupsViewModel, Collection<String> users, Collection<String> roles) {\n+        toJSON(outputWriter, pipelineGroupsViewModel);\n+        outputWriter.addChild(\"additional_info\", (writer) -> writer.addChildList(\"users\", users)\n+                .addChildList(\"roles\", roles));\n+    }", "originalCommit": "49763ba244cee66488725c4c22a47e359b865a82", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc0MzMxNA==", "url": "https://github.com/gocd/gocd/pull/8196#discussion_r432743314", "bodyText": "Done", "author": "maheshp", "createdAt": "2020-05-29T21:27:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMwMzcxMg=="}], "type": "inlineReview"}, {"oid": "8a6153cb55ca521de9fd45db8b21fc93da835d84", "url": "https://github.com/gocd/gocd/commit/8a6153cb55ca521de9fd45db8b21fc93da835d84", "message": "Environments pipeline edit should use the internal pipeline groups API", "committedDate": "2020-05-29T21:23:54Z", "type": "forcePushed"}, {"oid": "722ec8fcb0c0788231f33879dbbf19cff774ddf0", "url": "https://github.com/gocd/gocd/commit/722ec8fcb0c0788231f33879dbbf19cff774ddf0", "message": "Introduced internal pipeline groups API #000\n\n* This API will be used on the environments SPA for editing\n  pipelines.", "committedDate": "2020-05-29T21:27:09Z", "type": "commit"}, {"oid": "c3304d04cb9c7e48494e633a51c323c424ad085e", "url": "https://github.com/gocd/gocd/commit/c3304d04cb9c7e48494e633a51c323c424ad085e", "message": "Improve environment pipelines modal rendering performance.\n\n* The environment pipelines edit modal contains the following information:\n  - available pipelines:\n    The list of pipelines available for edit. Contains all XML defined pipelines\n    which does not belong to other environments.\n  - unavailable pipelines belonging to other environments:\n    The list of pipelines which are not available for association with current\n    environment because they're already associated with other environments.\n  - unavailable pipelines defined in config repository:\n    The list of pipelines which does not belong to any environment and are\n    defined remotely.\n\n* Prior implementation:\n  - To compute the above mentioned information, the pipeline vm model used\n    to iterate over all the pipelines several times. (at least 4 times).\n  - Also, to compute other environment pipelines, it would iterate over all\n    pipelines belonging to other environments (at least 2 times).\n  - The VM used to dynamically compute this information, hence, every mithril\n    redraw would cause this information to be recomputed.\n  - Due to alot of local variables (consisting of thousands of pipelines) and\n    recomputing every milliseconds, the CPU usage was 90%+ (with pipeline edit\n    modal open and no other operation)\n\n* Newer implementation:\n  - To compute the above mentioned information, the pipeline vm now just\n    iterate over all the pipelines only once.\n  - Use Map to store pipelines (pipelineName => Pipeline) making lookups faster.\n  - The VM computes all this information only once (during creation), hence,\n    subsequent redraws do not cause CPU spikes.", "committedDate": "2020-05-29T21:27:18Z", "type": "commit"}, {"oid": "9993e795746fc3914de77a9953c0d4b3a9bf1977", "url": "https://github.com/gocd/gocd/commit/9993e795746fc3914de77a9953c0d4b3a9bf1977", "message": "Environments pipeline edit should use the internal pipeline groups API", "committedDate": "2020-05-29T21:27:18Z", "type": "commit"}, {"oid": "9993e795746fc3914de77a9953c0d4b3a9bf1977", "url": "https://github.com/gocd/gocd/commit/9993e795746fc3914de77a9953c0d4b3a9bf1977", "message": "Environments pipeline edit should use the internal pipeline groups API", "committedDate": "2020-05-29T21:27:18Z", "type": "forcePushed"}]}