{"pr_number": 4326, "pr_title": "Fix for WFWIP-355, Bootable JAR - scripts in bin folder of the server installation directory are not executable", "pr_createdAt": "2020-09-11T10:52:22Z", "pr_url": "https://github.com/wildfly/wildfly-core/pull/4326", "timeline": [{"oid": "71caa612cc8c7f50b462f7a7bc3be3b1ebd40316", "url": "https://github.com/wildfly/wildfly-core/commit/71caa612cc8c7f50b462f7a7bc3be3b1ebd40316", "message": "Fix for WFWIP-355, Bootable JAR - scripts in bin folder of the server installation directory are not executable", "committedDate": "2020-09-11T10:50:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQzMDkyMQ==", "url": "https://github.com/wildfly/wildfly-core/pull/4326#discussion_r488430921", "bodyText": "Just a general FYI we may want to record for later, the method setPosixFilePermissions involves a SecurityManager permissions check - HOWEVER this Main class is the entry point to the application meaning it will be the only protection domain on the call stack, all a doPrivileged call does is drop the parent protection domains from the call stack so as this is class is the first this is not nescesary.", "author": "darranl", "createdAt": "2020-09-15T06:59:28Z", "path": "bootable-jar/boot/src/main/java/org/wildfly/core/jar/boot/Main.java", "diffHunk": "@@ -190,13 +208,20 @@ private static void unzip(InputStream wf, Path dir) throws Exception {\n                         Files.createDirectories(parent);\n                     }\n                     Files.copy(zis, newFile, StandardCopyOption.REPLACE_EXISTING);\n+                    if (!isWindows && newFile.getFileName().toString().endsWith(\".sh\")) {\n+                        Files.setPosixFilePermissions(newFile, EXECUTE_PERMISSIONS);", "originalCommit": "71caa612cc8c7f50b462f7a7bc3be3b1ebd40316", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}