{"pr_number": 4324, "pr_title": "[WFCORE-5027] Security Realms should support specifying the charset and encoding for credentials", "pr_createdAt": "2020-09-10T18:26:31Z", "pr_url": "https://github.com/wildfly/wildfly-core/pull/4324", "timeline": [{"oid": "df30933124890fbd680cb433e0eea2a53ddb16cc", "url": "https://github.com/wildfly/wildfly-core/commit/df30933124890fbd680cb433e0eea2a53ddb16cc", "message": "[WFCORE-5027] Security Realms should support specifying the charset and encoding for credentials", "committedDate": "2020-09-21T20:17:06Z", "type": "forcePushed"}, {"oid": "8fa4a012262af4b45d01e1d1a578ee5fbc8610de", "url": "https://github.com/wildfly/wildfly-core/commit/8fa4a012262af4b45d01e1d1a578ee5fbc8610de", "message": "[WFCORE-5027] Security Realms should support specifying the charset and encoding for credentials", "committedDate": "2020-09-23T17:25:40Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU3NDkzNQ==", "url": "https://github.com/wildfly/wildfly-core/pull/4324#discussion_r494574935", "bodyText": "Would be good to add a description here.", "author": "fjuma", "createdAt": "2020-09-24T19:56:11Z", "path": "controller/src/main/java/org/jboss/as/controller/operations/validation/CharsetValidator.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * JBoss, Home of Professional Open Source.\n+ * Copyright 2020 Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.jboss.as.controller.operations.validation;\n+\n+import java.nio.charset.Charset;\n+import java.nio.charset.IllegalCharsetNameException;\n+import java.nio.charset.UnsupportedCharsetException;\n+import org.jboss.as.controller.OperationFailedException;\n+import org.jboss.as.controller.logging.ControllerLogger;\n+import org.jboss.dmr.ModelNode;\n+import org.jboss.dmr.ModelType;\n+\n+/**", "originalCommit": "8fa4a012262af4b45d01e1d1a578ee5fbc8610de", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU3OTk1Ng==", "url": "https://github.com/wildfly/wildfly-core/pull/4324#discussion_r494579956", "bodyText": "This could be changed from String to OperationFailedException. Same below. Then, you could simplify the code in your validator to just throw ControllerLogger.ROOT_LOGGER.illegalCharsetName(...).", "author": "fjuma", "createdAt": "2020-09-24T20:06:01Z", "path": "controller/src/main/java/org/jboss/as/controller/logging/ControllerLogger.java", "diffHunk": "@@ -3629,4 +3629,10 @@ OperationFailedRuntimeException capabilityAlreadyRegisteredInContext(String capa\n \n     @Message(id = 476, value = \"Value for attribute '%s' is invalid: either '%s' must be specified on its own or '%s' needs to be specified with at least one of '%s' or '%s'\")\n     OperationFailedException invalidCredentialReferenceValue(String attributeName, String clearTextAttributeName, String credentialStoreAttributeName, String clearTextAttributeName1, String alias);\n+\n+    @Message(id = 478, value = \"Value '%s' is not a legal charset name\")\n+    String illegalCharsetName(String charset);", "originalCommit": "8fa4a012262af4b45d01e1d1a578ee5fbc8610de", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU4NDU2Mg==", "url": "https://github.com/wildfly/wildfly-core/pull/4324#discussion_r494584562", "bodyText": "We also need to think about the LDAP realm case here.", "author": "fjuma", "createdAt": "2020-09-24T20:15:10Z", "path": "elytron/src/main/java/org/wildfly/extension/elytron/ModifiableRealmDecorator.java", "diffHunk": "@@ -543,41 +546,48 @@ protected void executeRuntimeStep(final OperationContext context, final ModelNod\n         }\n \n         private Password createPassword(final OperationContext parentContext, final String principalName, String passwordType, ModelNode passwordNode) throws OperationFailedException, NoSuchAlgorithmException, InvalidKeySpecException  {\n+\n+            ModifiableSecurityRealm fsRealm = getModifiableSecurityRealm(parentContext);\n+            Charset hashCharset = StandardCharsets.UTF_8;\n+            if (fsRealm instanceof FileSystemSecurityRealm) {", "originalCommit": "8fa4a012262af4b45d01e1d1a578ee5fbc8610de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjAxMjc0NA==", "url": "https://github.com/wildfly/wildfly-core/pull/4324#discussion_r496012744", "bodyText": "The LdapSecurityRealm is not a public class, so I am not sure how to access it's charset. I thought about adding the getter to ModifiableSecurityRealm, but I think that's a public API so I am not sure whether I can edit that. Should I add the method to ModifiableSecurityRealm with a default implementation?", "author": "SoniaZaldana", "createdAt": "2020-09-28T15:02:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU4NDU2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA2MjI5MA==", "url": "https://github.com/wildfly/wildfly-core/pull/4324#discussion_r496062290", "bodyText": "I'll ping you to discuss this one a bit more.", "author": "fjuma", "createdAt": "2020-09-28T15:59:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU4NDU2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU4OTY5OQ==", "url": "https://github.com/wildfly/wildfly-core/pull/4324#discussion_r494589699", "bodyText": "Some more work is needed in this parser. This existing block should be copied to a new realmParser variable and then a new variable should be introduced that contains these changes.", "author": "fjuma", "createdAt": "2020-09-24T20:25:19Z", "path": "elytron/src/main/java/org/wildfly/extension/elytron/RealmParser.java", "diffHunk": "@@ -137,11 +154,11 @@\n             .addChild(customRealmParser)\n             .addChild(customModifiableRealmParser)\n             .addChild(identityRealmParser)\n-            .addChild(jdbcRealmParser_7_0)\n+            .addChild(jdbcRealmParser_11_0)", "originalCommit": "8fa4a012262af4b45d01e1d1a578ee5fbc8610de", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU5MTQwMQ==", "url": "https://github.com/wildfly/wildfly-core/pull/4324#discussion_r494591401", "bodyText": "These should be added to from12 instead.", "author": "fjuma", "createdAt": "2020-09-24T20:28:36Z", "path": "elytron/src/main/java/org/wildfly/extension/elytron/ElytronSubsystemTransformers.java", "diffHunk": "@@ -158,6 +151,12 @@ private static void from11(ChainedTransformationDescriptionBuilder chainedBuilde\n                 .addRejectCheck(RejectAttributeChecker.DEFINED, HASH_ENCODING);\n     }\n \n+    private static void from11(ChainedTransformationDescriptionBuilder chainedBuilder) {\n+        ResourceTransformationDescriptionBuilder builder = chainedBuilder.createBuilder(ELYTRON_11_0_0, ELYTRON_10_0_0);\n+        builder.rejectChildResource(PathElement.pathElement(ElytronDescriptionConstants.DISTRIBUTED_REALM));\n+        builder.rejectChildResource(PathElement.pathElement(ElytronDescriptionConstants.FAILOVER_REALM));", "originalCommit": "c7a8f0e8d724913d3825c26806cbbfa7b6cba74a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTgzNTI4MA==", "url": "https://github.com/wildfly/wildfly-core/pull/4324#discussion_r501835280", "bodyText": "This can be changed from String to OperationFailedException.", "author": "fjuma", "createdAt": "2020-10-08T16:00:23Z", "path": "controller/src/main/java/org/jboss/as/controller/logging/ControllerLogger.java", "diffHunk": "@@ -3629,4 +3629,10 @@ OperationFailedRuntimeException capabilityAlreadyRegisteredInContext(String capa\n \n     @Message(id = 476, value = \"Value for attribute '%s' is invalid: either '%s' must be specified on its own or '%s' needs to be specified with at least one of '%s' or '%s'\")\n     OperationFailedException invalidCredentialReferenceValue(String attributeName, String clearTextAttributeName, String credentialStoreAttributeName, String clearTextAttributeName1, String alias);\n+\n+    @Message(id = 478, value = \"Value '%s' is not a legal charset name\")\n+    OperationFailedException illegalCharsetName(String charset);\n+\n+    @Message(id = 479, value = \"Charset '%s' is not supported in this instance of the Java Virtual Machine\")\n+    String unsupportedCharset(String charset);", "originalCommit": "8debb394fa6d3edab6279733b5c868c9df6e7953", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTgzNTkyMw==", "url": "https://github.com/wildfly/wildfly-core/pull/4324#discussion_r501835923", "bodyText": "With the change suggested above, this can be simplified to just throw ControllerLogger.ROOT_LOGGER.unsupportedCharset...", "author": "fjuma", "createdAt": "2020-10-08T16:01:25Z", "path": "controller/src/main/java/org/jboss/as/controller/operations/validation/CharsetValidator.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * JBoss, Home of Professional Open Source.\n+ * Copyright 2020 Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.jboss.as.controller.operations.validation;\n+\n+import java.nio.charset.Charset;\n+import java.nio.charset.IllegalCharsetNameException;\n+import java.nio.charset.UnsupportedCharsetException;\n+import org.jboss.as.controller.OperationFailedException;\n+import org.jboss.as.controller.logging.ControllerLogger;\n+import org.jboss.dmr.ModelNode;\n+import org.jboss.dmr.ModelType;\n+\n+/**\n+ * Validates whether the provided string represents a valid character set.\n+ *\n+ * @author <a href=\"mailto:szaldana@redhat.com\">Sonia Zaldana</a>\n+ */\n+public class CharsetValidator extends ModelTypeValidator {\n+\n+    public CharsetValidator() {\n+        super(ModelType.STRING);\n+    }\n+\n+    @Override\n+    public void validateParameter(String parameterName, ModelNode value) throws OperationFailedException {\n+        super.validateParameter(parameterName, value);\n+        if (value.isDefined()) {\n+            try {\n+                Charset hashCharset = Charset.forName(value.asString());\n+            } catch (IllegalCharsetNameException e) {\n+                throw ControllerLogger.ROOT_LOGGER.illegalCharsetName(value.asString());\n+            } catch (UnsupportedCharsetException e) {\n+                throw new OperationFailedException(ControllerLogger.ROOT_LOGGER.unsupportedCharset(value.asString()));", "originalCommit": "8debb394fa6d3edab6279733b5c868c9df6e7953", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTg0MTU2OQ==", "url": "https://github.com/wildfly/wildfly-core/pull/4324#discussion_r501841569", "bodyText": "Instead of modifying the parser values here, the existing realmParser_11_0 variable needs to be copied to a new realmParser_12_0 variable and then that should be updated to reference the new jdbcRealmParser_12_0 variable, the new propertiesRealmParser_12_0 variable, etc.", "author": "fjuma", "createdAt": "2020-10-08T16:09:47Z", "path": "elytron/src/main/java/org/wildfly/extension/elytron/RealmParser.java", "diffHunk": "@@ -137,11 +154,11 @@\n             .addChild(customRealmParser)\n             .addChild(customModifiableRealmParser)\n             .addChild(identityRealmParser)\n-            .addChild(jdbcRealmParser_7_0)\n+            .addChild(jdbcRealmParser_12_0)", "originalCommit": "8debb394fa6d3edab6279733b5c868c9df6e7953", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "cd7fa73984b7150c4dad88890d59b3f273ece759", "url": "https://github.com/wildfly/wildfly-core/commit/cd7fa73984b7150c4dad88890d59b3f273ece759", "message": "[WFCORE-5027] Updating branch based on feedback", "committedDate": "2020-10-09T14:26:54Z", "type": "forcePushed"}, {"oid": "d7f124cd95985ac6b510041067ce08b14aaf63a4", "url": "https://github.com/wildfly/wildfly-core/commit/d7f124cd95985ac6b510041067ce08b14aaf63a4", "message": "[WFCORE-5027] Updating branch based on feedback", "committedDate": "2020-10-09T18:19:49Z", "type": "forcePushed"}, {"oid": "dbc7bfeed22e69ef37e54bc2dad1538b1b78de9d", "url": "https://github.com/wildfly/wildfly-core/commit/dbc7bfeed22e69ef37e54bc2dad1538b1b78de9d", "message": "[WFCORE-5027] Security Realms should support specifying the charset and encoding for credentials", "committedDate": "2021-01-11T19:57:17Z", "type": "forcePushed"}, {"oid": "4e7117f36eae6b6f15b30c1dc49e8a2fee8e8416", "url": "https://github.com/wildfly/wildfly-core/commit/4e7117f36eae6b6f15b30c1dc49e8a2fee8e8416", "message": "[WFCORE-5027] Security Realms should support specifying the charset and encoding for credentials", "committedDate": "2021-01-29T16:39:28Z", "type": "forcePushed"}, {"oid": "a4502b704438e5eaee80b1226563f93b41486eb4", "url": "https://github.com/wildfly/wildfly-core/commit/a4502b704438e5eaee80b1226563f93b41486eb4", "message": "[WFCORE-5027] Security Realms should support specifying the charset and encoding for credentials", "committedDate": "2021-02-04T18:44:55Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDU2MzE3NQ==", "url": "https://github.com/wildfly/wildfly-core/pull/4324#discussion_r570563175", "bodyText": "These will need to be moved to the new from13 method.", "author": "fjuma", "createdAt": "2021-02-04T21:42:34Z", "path": "elytron/src/main/java/org/wildfly/extension/elytron/ElytronSubsystemTransformers.java", "diffHunk": "@@ -133,6 +137,32 @@ private static void from12(ChainedTransformationDescriptionBuilder chainedBuilde\n                 .setDiscard(DiscardAttributeChecker.UNDEFINED, SSLDefinitions.GENERATE_SELF_SIGNED_CERTIFICATE_HOST)\n                 .end();\n \n+        builder.addChildResource(PathElement.pathElement(PROPERTIES_REALM))", "originalCommit": "a4502b704438e5eaee80b1226563f93b41486eb4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "714733f3dfc8a36ce71dff388bd51429cfbf497c", "url": "https://github.com/wildfly/wildfly-core/commit/714733f3dfc8a36ce71dff388bd51429cfbf497c", "message": "[WFCORE-5341] Add version 14 of the WildFly Elytron model and schema.", "committedDate": "2021-03-17T16:17:41Z", "type": "commit"}, {"oid": "4933c8ca0c4e0ee4afb9094c2cd6e340a889bca4", "url": "https://github.com/wildfly/wildfly-core/commit/4933c8ca0c4e0ee4afb9094c2cd6e340a889bca4", "message": "[WFCORE-5027] Security Realms should support specifying the charset and encoding for credentials", "committedDate": "2021-03-17T20:41:01Z", "type": "forcePushed"}, {"oid": "d04ad69a364913407a661486a1d5570f67d262c9", "url": "https://github.com/wildfly/wildfly-core/commit/d04ad69a364913407a661486a1d5570f67d262c9", "message": "[WFCORE-5027] Security Realms should support specifying the charset and encoding for credentials", "committedDate": "2021-03-17T20:50:33Z", "type": "forcePushed"}, {"oid": "c336990ef2b10151ae24ca5a4e8e4624592e1f18", "url": "https://github.com/wildfly/wildfly-core/commit/c336990ef2b10151ae24ca5a4e8e4624592e1f18", "message": "[WFCORE-5027] Security Realms should support specifying the charset and encoding for credentials", "committedDate": "2021-03-18T14:44:32Z", "type": "forcePushed"}, {"oid": "151880ed8b7825dee0df01b75c46203d8e9d4397", "url": "https://github.com/wildfly/wildfly-core/commit/151880ed8b7825dee0df01b75c46203d8e9d4397", "message": "[WFCORE-5027] Security Realms should support specifying the charset and encoding for credentials", "committedDate": "2021-03-18T14:53:28Z", "type": "forcePushed"}, {"oid": "fc3bf9ebae5d2aaca1b3b3f90e4e647706ff7dd4", "url": "https://github.com/wildfly/wildfly-core/commit/fc3bf9ebae5d2aaca1b3b3f90e4e647706ff7dd4", "message": "[WFCORE-5341] Merge latest changes from \"master\".", "committedDate": "2021-03-22T15:53:02Z", "type": "commit"}, {"oid": "baed45eb9f35a52ee61147df7988c551cc3ee1db", "url": "https://github.com/wildfly/wildfly-core/commit/baed45eb9f35a52ee61147df7988c551cc3ee1db", "message": "[WFCORE-5027] Security Realms should support specifying the charset and encoding for credentials", "committedDate": "2021-04-08T18:13:29Z", "type": "forcePushed"}, {"oid": "61a961d7147f200cbe024586a8ab431285e80407", "url": "https://github.com/wildfly/wildfly-core/commit/61a961d7147f200cbe024586a8ab431285e80407", "message": "[WFCORE-5341] Add version 14 of the WildFly Elytron model and schema.", "committedDate": "2021-05-25T13:52:46Z", "type": "forcePushed"}, {"oid": "151880ed8b7825dee0df01b75c46203d8e9d4397", "url": "https://github.com/wildfly/wildfly-core/commit/151880ed8b7825dee0df01b75c46203d8e9d4397", "message": "[WFCORE-5027] Security Realms should support specifying the charset and encoding for credentials", "committedDate": "2021-03-18T14:53:28Z", "type": "forcePushed"}, {"oid": "0bcc9035efd0a705e0ec6a018a9e6fb29af4f726", "url": "https://github.com/wildfly/wildfly-core/commit/0bcc9035efd0a705e0ec6a018a9e6fb29af4f726", "message": "[WFCORE-5341] Add version 14 of the WildFly Elytron model and schema.", "committedDate": "2021-06-01T15:18:54Z", "type": "forcePushed"}, {"oid": "5eccad679e9e3b8cc0171d1881b2723eaa8a2298", "url": "https://github.com/wildfly/wildfly-core/commit/5eccad679e9e3b8cc0171d1881b2723eaa8a2298", "message": "[WFCORE-5027] Security Realms should support specifying the charset and encoding for credentials", "committedDate": "2021-06-01T15:34:03Z", "type": "commit"}, {"oid": "5eccad679e9e3b8cc0171d1881b2723eaa8a2298", "url": "https://github.com/wildfly/wildfly-core/commit/5eccad679e9e3b8cc0171d1881b2723eaa8a2298", "message": "[WFCORE-5027] Security Realms should support specifying the charset and encoding for credentials", "committedDate": "2021-06-01T15:34:03Z", "type": "forcePushed"}]}