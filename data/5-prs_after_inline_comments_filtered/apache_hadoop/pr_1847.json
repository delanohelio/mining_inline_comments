{"pr_number": 1847, "pr_title": "HADOOP-16859: ABFS: Add unbuffer support to ABFS connector", "pr_createdAt": "2020-02-13T18:18:52Z", "pr_url": "https://github.com/apache/hadoop/pull/1847", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA5OTI2OQ==", "url": "https://github.com/apache/hadoop/pull/1847#discussion_r379099269", "bodyText": "or you could just classcast the wrapped stream and let the JVM do the reporting...", "author": "steveloughran", "createdAt": "2020-02-13T20:25:10Z", "path": "hadoop-tools/hadoop-azure/src/test/java/org/apache/hadoop/fs/azurebfs/services/ITestAbfsUnbuffer.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.fs.azurebfs.services;\n+\n+import java.io.IOException;\n+\n+import org.junit.Test;\n+\n+import org.apache.hadoop.fs.FSDataInputStream;\n+import org.apache.hadoop.fs.Path;\n+import org.apache.hadoop.fs.azurebfs.AbstractAbfsIntegrationTest;\n+import org.apache.hadoop.fs.contract.ContractTestUtils;\n+\n+/**\n+ * Integration test for calling\n+ * {@link org.apache.hadoop.fs.CanUnbuffer#unbuffer} on {@link AbfsInputStream}.\n+ * Validates that the underlying stream's buffer is null.\n+ */\n+public class ITestAbfsUnbuffer extends AbstractAbfsIntegrationTest {\n+\n+  private Path dest;\n+\n+  public ITestAbfsUnbuffer() throws Exception {\n+  }\n+\n+  @Override\n+  public void setup() throws Exception {\n+    super.setup();\n+    dest = path(\"ITestAbfsUnbuffer\");\n+\n+    byte[] data = ContractTestUtils.dataset(16, 'a', 26);\n+    ContractTestUtils.writeDataset(getFileSystem(), dest, data, data.length,\n+            16, true);\n+  }\n+\n+  @Test\n+  public void testUnbuffer() throws IOException {\n+    // Open file, read half the data, and then call unbuffer\n+    try (FSDataInputStream inputStream = getFileSystem().open(dest)) {\n+      assertTrue(\"unexpected stream type \" +", "originalCommit": "c5e7dafda1b53da2230814a3ab1b6b807a3d99c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk4NDE1OQ==", "url": "https://github.com/apache/hadoop/pull/1847#discussion_r380984159", "bodyText": "Yeah, we could do that. I think the exception message is slightly friendlier this way though.", "author": "sahilTakiar", "createdAt": "2020-02-18T22:53:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA5OTI2OQ=="}], "type": "inlineReview"}, {"oid": "7a7ac8c5691bf3948e74222ad0e38126125d18a6", "url": "https://github.com/apache/hadoop/commit/7a7ac8c5691bf3948e74222ad0e38126125d18a6", "message": "HADOOP-16859: ABFS: Add unbuffer support to ABFS connector", "committedDate": "2020-02-14T19:26:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTgzODM4OQ==", "url": "https://github.com/apache/hadoop/pull/1847#discussion_r379838389", "bodyText": "ABFS", "author": "steveloughran", "createdAt": "2020-02-15T15:36:06Z", "path": "hadoop-tools/hadoop-azure/src/test/java/org/apache/hadoop/fs/azurebfs/services/ITestAbfsUnbuffer.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.fs.azurebfs.services;\n+\n+import java.io.IOException;\n+\n+import org.junit.Test;\n+\n+import org.apache.hadoop.fs.FSDataInputStream;\n+import org.apache.hadoop.fs.Path;\n+import org.apache.hadoop.fs.azurebfs.AbstractAbfsIntegrationTest;\n+import org.apache.hadoop.fs.contract.ContractTestUtils;\n+\n+/**\n+ * Integration test for calling\n+ * {@link org.apache.hadoop.fs.CanUnbuffer#unbuffer} on {@link AbfsInputStream}.\n+ * Validates that the underlying stream's buffer is null.\n+ */\n+public class ITestAbfsUnbuffer extends AbstractAbfsIntegrationTest {\n+\n+  private Path dest;\n+\n+  public ITestAbfsUnbuffer() throws Exception {\n+  }\n+\n+  @Override\n+  public void setup() throws Exception {\n+    super.setup();\n+    dest = path(\"ITestAbfsUnbuffer\");\n+\n+    byte[] data = ContractTestUtils.dataset(16, 'a', 26);\n+    ContractTestUtils.writeDataset(getFileSystem(), dest, data, data.length,\n+            16, true);\n+  }\n+\n+  @Test\n+  public void testUnbuffer() throws IOException {\n+    // Open file, read half the data, and then call unbuffer\n+    try (FSDataInputStream inputStream = getFileSystem().open(dest)) {\n+      assertTrue(\"unexpected stream type \" +\n+              inputStream.getWrappedStream().getClass().getSimpleName(),\n+              inputStream.getWrappedStream() instanceof AbfsInputStream);\n+      readAndAssertBytesRead(inputStream, 8);\n+      assertFalse(\"AbfsInputStream buffer should not be null\",\n+              isBufferNull(inputStream));\n+      inputStream.unbuffer();\n+\n+      // Check the the underlying buffer is null\n+      assertTrue(\"AbfsInputStream buffer should be null\",\n+              isBufferNull(inputStream));\n+    }\n+  }\n+\n+  private boolean isBufferNull(FSDataInputStream inputStream) {\n+    return ((AbfsInputStream) inputStream.getWrappedStream()).buffer == null;\n+  }\n+\n+  /**\n+   * Read the specified number of bytes from the given\n+   * {@link FSDataInputStream} and assert that\n+   * {@link FSDataInputStream#read(byte[])} read the specified number of bytes.\n+   */\n+  private static void readAndAssertBytesRead(FSDataInputStream inputStream,\n+                                             int bytesToRead) throws IOException {\n+    assertEquals(\"S3AInputStream#read did not read the correct number of \" +", "originalCommit": "7a7ac8c5691bf3948e74222ad0e38126125d18a6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk4NDIyOA==", "url": "https://github.com/apache/hadoop/pull/1847#discussion_r380984228", "bodyText": "done", "author": "sahilTakiar", "createdAt": "2020-02-18T22:53:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTgzODM4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTgzODQ1OA==", "url": "https://github.com/apache/hadoop/pull/1847#discussion_r379838458", "bodyText": "add a getter", "author": "steveloughran", "createdAt": "2020-02-15T15:37:01Z", "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsInputStream.java", "diffHunk": "@@ -45,7 +52,8 @@\n   private final boolean tolerateOobAppends; // whether tolerate Oob Appends\n   private final boolean readAheadEnabled; // whether enable readAhead;\n \n-  private byte[] buffer = null;            // will be initialized on first use\n+  @VisibleForTesting\n+  byte[] buffer = null;            // will be initialized on first use", "originalCommit": "7a7ac8c5691bf3948e74222ad0e38126125d18a6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk4NDI2NA==", "url": "https://github.com/apache/hadoop/pull/1847#discussion_r380984264", "bodyText": "done", "author": "sahilTakiar", "createdAt": "2020-02-18T22:53:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTgzODQ1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTgzODUxOQ==", "url": "https://github.com/apache/hadoop/pull/1847#discussion_r379838519", "bodyText": "should be synchronized", "author": "steveloughran", "createdAt": "2020-02-15T15:38:19Z", "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsInputStream.java", "diffHunk": "@@ -390,4 +398,19 @@ public synchronized void reset() throws IOException {\n   public boolean markSupported() {\n     return false;\n   }\n+\n+  @Override\n+  public void unbuffer() {", "originalCommit": "7a7ac8c5691bf3948e74222ad0e38126125d18a6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk4NDMwNA==", "url": "https://github.com/apache/hadoop/pull/1847#discussion_r380984304", "bodyText": "done", "author": "sahilTakiar", "createdAt": "2020-02-18T22:53:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTgzODUxOQ=="}], "type": "inlineReview"}, {"oid": "944ba3ddef1ec30f0fa6fd4f6d365ba33da98b23", "url": "https://github.com/apache/hadoop/commit/944ba3ddef1ec30f0fa6fd4f6d365ba33da98b23", "message": "HADOOP-16859: ABFS: Add unbuffer support to ABFS connector", "committedDate": "2020-02-18T22:39:02Z", "type": "forcePushed"}, {"oid": "85fecf16303d2972094e33c423eedbb2f073cb8d", "url": "https://github.com/apache/hadoop/commit/85fecf16303d2972094e33c423eedbb2f073cb8d", "message": "HADOOP-16859: ABFS: Add unbuffer support to ABFS connector", "committedDate": "2020-02-19T03:28:18Z", "type": "commit"}, {"oid": "85fecf16303d2972094e33c423eedbb2f073cb8d", "url": "https://github.com/apache/hadoop/commit/85fecf16303d2972094e33c423eedbb2f073cb8d", "message": "HADOOP-16859: ABFS: Add unbuffer support to ABFS connector", "committedDate": "2020-02-19T03:28:18Z", "type": "forcePushed"}]}