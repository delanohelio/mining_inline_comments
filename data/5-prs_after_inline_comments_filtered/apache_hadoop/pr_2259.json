{"pr_number": 2259, "pr_title": "HADOOP-17208. LoadBalanceKMSClientProvider#deleteKey should invalidat\u2026", "pr_createdAt": "2020-08-28T23:36:42Z", "pr_url": "https://github.com/apache/hadoop/pull/2259", "timeline": [{"oid": "609357f6b52a0fc3469bfb43a2a277ead5aecd75", "url": "https://github.com/apache/hadoop/commit/609357f6b52a0fc3469bfb43a2a277ead5aecd75", "message": "HADOOP-17208. LoadBalanceKMSClientProvider#deleteKey should invalidateCache via all KMSClientProvider instances.", "committedDate": "2020-08-28T23:31:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM2MjkyMg==", "url": "https://github.com/apache/hadoop/pull/2259#discussion_r488362922", "bodyText": "Hi @xiaoyuyao , Not sure if it is compatible to throw out this exception. Other are fair enough to me. Thanks.", "author": "Hexiaoqiao", "createdAt": "2020-09-15T03:36:58Z", "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/ValueQueue.java", "diffHunk": "@@ -299,19 +299,18 @@ public E getNext(String keyName)\n    * @param keyName the key to drain the Queue for\n    */\n   public void drain(String keyName) {\n+    Runnable e;\n+    while ((e = queue.deleteByName(keyName)) != null) {\n+      executor.remove(e);\n+    }\n+    writeLock(keyName);\n     try {\n-      Runnable e;\n-      while ((e = queue.deleteByName(keyName)) != null) {\n-        executor.remove(e);\n-      }\n-      writeLock(keyName);\n-      try {\n-        keyQueues.get(keyName).clear();\n-      } finally {\n-        writeUnlock(keyName);\n+      LinkedBlockingQueue kq = keyQueues.getIfPresent(keyName);\n+      if (kq != null) {\n+        kq.clear();\n       }\n-    } catch (ExecutionException ex) {", "originalCommit": "609357f6b52a0fc3469bfb43a2a277ead5aecd75", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU5OTYzNg==", "url": "https://github.com/apache/hadoop/pull/2259#discussion_r489599636", "bodyText": "We don't have compatibility issue here. LoadingCache#get() may throw ExecutionException. But this ticket has change to use LoadingCache#getIfPresent() which does not throw ExecutionException. This way, we don't need to worry about either NPE from LoadingCache.get().clear() or ExecutionException.", "author": "xiaoyuyao", "createdAt": "2020-09-16T17:21:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM2MjkyMg=="}], "type": "inlineReview"}]}