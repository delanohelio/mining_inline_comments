{"pr_number": 2461, "pr_title": "YARN-10468. Fix TestNodeStatusUpdater timeouts and broken conditions", "pr_createdAt": "2020-11-12T06:58:58Z", "pr_url": "https://github.com/apache/hadoop/pull/2461", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMwNDU5NQ==", "url": "https://github.com/apache/hadoop/pull/2461#discussion_r522304595", "bodyText": "We can do this with GenericTestUtils.waitFor() right?", "author": "goiri", "createdAt": "2020-11-12T17:57:25Z", "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/TestNodeStatusUpdater.java", "diffHunk": "@@ -1161,43 +1165,34 @@ protected NodeStatusUpdater createNodeStatusUpdater(Context context,\n     Assert.assertTrue(\"last service is NOT the node status updater\",\n         lastService instanceof NodeStatusUpdater);\n \n-    new Thread() {\n-      public void run() {\n-        try {\n-          nm.start();\n-        } catch (Throwable e) {\n-          TestNodeStatusUpdater.this.nmStartError = e;\n-          throw new YarnRuntimeException(e);\n-        }\n+    Thread starterThread = new Thread(() -> {\n+      try {\n+        nm.start();\n+      } catch (Throwable e) {\n+        TestNodeStatusUpdater.this.nmStartError = e;\n+        throw new YarnRuntimeException(e);\n       }\n-    }.start();\n+    });\n+    starterThread.start();\n \n-    System.out.println(\" ----- thread already started..\"\n-        + nm.getServiceState());\n+    LOG.info(\" ----- thread already started..{}\", nm.getServiceState());\n \n-    int waitCount = 0;\n-    while (nm.getServiceState() == STATE.INITED && waitCount++ != 50) {\n-      LOG.info(\"Waiting for NM to start..\");\n-      if (nmStartError != null) {\n-        LOG.error(\"Error during startup. \", nmStartError);\n-        Assert.fail(nmStartError.getCause().getMessage());\n-      }\n-      Thread.sleep(2000);\n-    }\n-    if (nm.getServiceState() != STATE.STARTED) {\n-      // NM could have failed.\n-      Assert.fail(\"NodeManager failed to start\");\n+    starterThread.join(100000);\n+\n+    if (nmStartError != null) {\n+      LOG.error(\"Error during startup. \", nmStartError);\n+      Assert.fail(nmStartError.getCause().getMessage());\n     }\n \n-    waitCount = 0;\n-    while (heartBeatID <= 3 && waitCount++ != 200) {\n-      Thread.sleep(1000);\n+    int waitCount = 0;\n+    while (nm.getServiceState() == STATE.STARTED", "originalCommit": "7f7b8aba9ac157a2d7d042949abffa7fcb7b92bc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMxNDc3OQ==", "url": "https://github.com/apache/hadoop/pull/2461#discussion_r522314779", "bodyText": "Thanks @goiri, I added the nm.getServiceState() == STATE.STARTED because I found that the Unit test could keep waiting for the heartBeatID even after the nm fails.\nThe loop can be replaced with waitFor() but the conditions has to be rewritten in a way that may be confusing a little bit.\n// we should not be waiting once the service stops running\nGenericTestUtils.waitFor( () -> (nm.getServiceState() != STATE.STARTED) || heartBeatID > 3), 50, 1000);\nIf you are fine with the above version, I can replace all the loops with WaitFor()", "author": "amahussein", "createdAt": "2020-11-12T18:13:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMwNDU5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjM3Mjg1Mg==", "url": "https://github.com/apache/hadoop/pull/2461#discussion_r522372852", "bodyText": "I would split it into two lines but I think the or condition is clear enough.", "author": "goiri", "createdAt": "2020-11-12T19:38:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMwNDU5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMwNTIzOA==", "url": "https://github.com/apache/hadoop/pull/2461#discussion_r522305238", "bodyText": "waitFor()?", "author": "goiri", "createdAt": "2020-11-12T17:58:28Z", "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/TestNodeStatusUpdater.java", "diffHunk": "@@ -1529,19 +1518,27 @@ public void testApplicationKeepAlive() throws Exception {\n       nm.init(conf);\n       nm.start();\n       // HB 2 -> app cancelled by RM.\n-      while (heartBeatID < 12) {\n-        Thread.sleep(1000l);\n+      GenericTestUtils.waitFor(() -> nm.getServiceState() == STATE.STARTED,\n+          20, 10000);\n+      int waitCount = 0;\n+      while (nm.getServiceState() == STATE.STARTED && heartBeatID < 12\n+          && waitCount++ < 60000000) {\n+        Thread.sleep(100l);\n       }\n+      Assert.assertTrue(heartBeatID >= 12);\n       MyResourceTracker3 rt =\n           (MyResourceTracker3) nm.getNodeStatusUpdater().getRMClient();\n       rt.context.getApplications().remove(rt.appId);\n       Assert.assertEquals(1, rt.keepAliveRequests.size());\n       int numKeepAliveRequests = rt.keepAliveRequests.get(rt.appId).size();\n       LOG.info(\"Number of Keep Alive Requests: [\" + numKeepAliveRequests + \"]\");\n       Assert.assertTrue(numKeepAliveRequests == 2 || numKeepAliveRequests == 3);\n-      while (heartBeatID < 20) {\n-        Thread.sleep(1000l);\n+      waitCount = 0;\n+      while (nm.getServiceState() == STATE.STARTED && heartBeatID < 20", "originalCommit": "7f7b8aba9ac157a2d7d042949abffa7fcb7b92bc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMxNTQ2MA==", "url": "https://github.com/apache/hadoop/pull/2461#discussion_r522315460", "bodyText": "same as above", "author": "amahussein", "createdAt": "2020-11-12T18:14:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMwNTIzOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMwNTI5Mw==", "url": "https://github.com/apache/hadoop/pull/2461#discussion_r522305293", "bodyText": "waitFor()?", "author": "goiri", "createdAt": "2020-11-12T17:58:34Z", "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/TestNodeStatusUpdater.java", "diffHunk": "@@ -1529,19 +1518,27 @@ public void testApplicationKeepAlive() throws Exception {\n       nm.init(conf);\n       nm.start();\n       // HB 2 -> app cancelled by RM.\n-      while (heartBeatID < 12) {\n-        Thread.sleep(1000l);\n+      GenericTestUtils.waitFor(() -> nm.getServiceState() == STATE.STARTED,\n+          20, 10000);\n+      int waitCount = 0;\n+      while (nm.getServiceState() == STATE.STARTED && heartBeatID < 12", "originalCommit": "7f7b8aba9ac157a2d7d042949abffa7fcb7b92bc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMxNTM3OQ==", "url": "https://github.com/apache/hadoop/pull/2461#discussion_r522315379", "bodyText": "Same as above", "author": "amahussein", "createdAt": "2020-11-12T18:14:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMwNTI5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMwNTYyMQ==", "url": "https://github.com/apache/hadoop/pull/2461#discussion_r522305621", "bodyText": "waitFor()?", "author": "goiri", "createdAt": "2020-11-12T17:59:07Z", "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/TestNodeStatusUpdater.java", "diffHunk": "@@ -1712,27 +1704,14 @@ protected ContainerManagerImpl createContainerManager(Context context,\n     YarnConfiguration conf = createNMConfig();\n     nm.init(conf);\n     nm.start();\n-\n-    System.out.println(\" ----- thread already started..\"\n-        + nm.getServiceState());\n+    GenericTestUtils.waitFor(() -> nm.getServiceState() == STATE.STARTED,\n+        20, 20000);\n \n     int waitCount = 0;\n-    while (nm.getServiceState() == STATE.INITED && waitCount++ != 20) {\n-      LOG.info(\"Waiting for NM to start..\");\n-      if (nmStartError != null) {\n-        LOG.error(\"Error during startup. \", nmStartError);\n-        Assert.fail(nmStartError.getCause().getMessage());\n-      }\n-      Thread.sleep(1000);\n-    }\n-    if (nm.getServiceState() != STATE.STARTED) {\n-      // NM could have failed.\n-      Assert.fail(\"NodeManager failed to start\");\n-    }\n \n-    waitCount = 0;\n-    while (heartBeatID <= 3 && waitCount++ != 20) {\n-      Thread.sleep(500);\n+    while (nm.getServiceState() == STATE.STARTED", "originalCommit": "7f7b8aba9ac157a2d7d042949abffa7fcb7b92bc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMxNTU1NQ==", "url": "https://github.com/apache/hadoop/pull/2461#discussion_r522315555", "bodyText": "same as above", "author": "amahussein", "createdAt": "2020-11-12T18:14:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMwNTYyMQ=="}], "type": "inlineReview"}, {"oid": "b37e863b13de1093580c06ddf12083f28dee16d8", "url": "https://github.com/apache/hadoop/commit/b37e863b13de1093580c06ddf12083f28dee16d8", "message": "YARN-10468. Fix TestNodeStatusUpdater timeouts and broken conditions", "committedDate": "2020-11-12T17:30:46Z", "type": "forcePushed"}, {"oid": "bffc68c56dfe73698814e7b648aef196761f25b3", "url": "https://github.com/apache/hadoop/commit/bffc68c56dfe73698814e7b648aef196761f25b3", "message": "YARN-10468. Fix TestNodeStatusUpdater timeouts and broken conditions", "committedDate": "2020-11-24T16:33:58Z", "type": "commit"}, {"oid": "51db2bb4cd67074f4d701b44e1ec0e7deb2ce360", "url": "https://github.com/apache/hadoop/commit/51db2bb4cd67074f4d701b44e1ec0e7deb2ce360", "message": "YARN-10468. use WaitFor throughout the test", "committedDate": "2020-11-24T16:33:59Z", "type": "commit"}, {"oid": "51db2bb4cd67074f4d701b44e1ec0e7deb2ce360", "url": "https://github.com/apache/hadoop/commit/51db2bb4cd67074f4d701b44e1ec0e7deb2ce360", "message": "YARN-10468. use WaitFor throughout the test", "committedDate": "2020-11-24T16:33:59Z", "type": "forcePushed"}]}