{"pr_number": 1851, "pr_title": "HADOOP-16858. S3Guard fsck: Add option to remove orphaned entries", "pr_createdAt": "2020-02-17T16:44:27Z", "pr_url": "https://github.com/apache/hadoop/pull/1851", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM3ODgwOQ==", "url": "https://github.com/apache/hadoop/pull/1851#discussion_r380378809", "bodyText": "you could probably do this in the base class for now", "author": "steveloughran", "createdAt": "2020-02-17T21:59:34Z", "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3GuardFsckViolationHandler.java", "diffHunk": "@@ -152,6 +184,12 @@ public NoMetadataEntry(S3GuardFsck.ComparePair comparePair) {\n     public String getError() {\n       return \"No PathMetadata for this path in the MS.\";\n     }\n+\n+    @Override\n+    public String fixViolation(S3AFileSystem fs, DynamoDBMetadataStore ddbms) {", "originalCommit": "e13eabfecfb311f7585fd76865345ae70c5e1882", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc0MzI2MA==", "url": "https://github.com/apache/hadoop/pull/1851#discussion_r383743260", "bodyText": "Don't you think CASE statements would be better option here.", "author": "mukund-thakur", "createdAt": "2020-02-25T09:09:31Z", "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3GuardFsckViolationHandler.java", "diffHunk": "@@ -60,28 +66,51 @@ public void handle(S3GuardFsck.ComparePair comparePair) {\n     sB.append(newLine)\n         .append(\"On path: \").append(comparePair.getPath()).append(newLine);\n \n-    handleComparePair(comparePair, sB);\n+    handleComparePair(comparePair, sB, HandleMode.LOG);\n \n     LOG.error(sB.toString());\n   }\n \n+  public void doFix(S3GuardFsck.ComparePair comparePair) throws IOException {\n+    if (!comparePair.containsViolation()) {\n+      LOG.debug(\"There is no violation in the compare pair: {}\", comparePair);\n+      return;\n+    }\n+\n+    StringBuilder sB = new StringBuilder();\n+    sB.append(newLine)\n+        .append(\"On path: \").append(comparePair.getPath()).append(newLine);\n+\n+    handleComparePair(comparePair, sB, HandleMode.FIX);\n+\n+    LOG.info(sB.toString());\n+  }\n+\n   /**\n    * Create a new instance of the violation handler for all the violations\n    * found in the compare pair and use it.\n    *\n    * @param comparePair the compare pair with violations\n    * @param sB StringBuilder to append error strings from violations.\n    */\n-  protected static void handleComparePair(S3GuardFsck.ComparePair comparePair,\n-      StringBuilder sB) {\n+  protected void handleComparePair(S3GuardFsck.ComparePair comparePair,\n+      StringBuilder sB, HandleMode handleMode) throws IOException {\n \n     for (S3GuardFsck.Violation violation : comparePair.getViolations()) {\n       try {\n         ViolationHandler handler = violation.getHandler()\n             .getDeclaredConstructor(S3GuardFsck.ComparePair.class)\n             .newInstance(comparePair);\n-        final String errorStr = handler.getError();\n-        sB.append(errorStr);\n+\n+        if (handleMode == HandleMode.LOG) {", "originalCommit": "eae4dc2f1c876ad9185161f3746e3b1b90fd2f40", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ5NTEzNw==", "url": "https://github.com/apache/hadoop/pull/1851#discussion_r384495137", "bodyText": "Yes, though I'm not planning to extend this anymore I can add a switch case here.", "author": "bgaborg", "createdAt": "2020-02-26T13:36:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc0MzI2MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgxMTA4Mw==", "url": "https://github.com/apache/hadoop/pull/1851#discussion_r383811083", "bodyText": "It would be nice if you can add some comments here. Thanks.", "author": "mukund-thakur", "createdAt": "2020-02-25T11:06:18Z", "path": "hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/s3guard/ITestS3GuardFsck.java", "diffHunk": "@@ -599,6 +613,12 @@ private void checkForViolationInPairs(Path file,\n   private void checkNoViolationInPairs(Path file2,\n       List<S3GuardFsck.ComparePair> comparePairs,\n       S3GuardFsck.Violation violation) {\n+", "originalCommit": "eae4dc2f1c876ad9185161f3746e3b1b90fd2f40", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ5MzU4OQ==", "url": "https://github.com/apache/hadoop/pull/1851#discussion_r384493589", "bodyText": "I don't see what you mean by that - the logging is sufficient here. Do you mean to add javadoc to the method?", "author": "bgaborg", "createdAt": "2020-02-26T13:34:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgxMTA4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAxMzk5OQ==", "url": "https://github.com/apache/hadoop/pull/1851#discussion_r385013999", "bodyText": "Yes I meant javadoc only.", "author": "mukund-thakur", "createdAt": "2020-02-27T09:45:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgxMTA4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAyNTExNQ==", "url": "https://github.com/apache/hadoop/pull/1851#discussion_r385025115", "bodyText": "done", "author": "bgaborg", "createdAt": "2020-02-27T10:03:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgxMTA4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgyNzU0OA==", "url": "https://github.com/apache/hadoop/pull/1851#discussion_r383827548", "bodyText": "I am wondering why there is no assert here.", "author": "mukund-thakur", "createdAt": "2020-02-25T11:41:55Z", "path": "hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/s3guard/ITestS3GuardToolDynamoDB.java", "diffHunk": "@@ -353,6 +353,28 @@ public void testCLIFsckCheckExclusive() throws Exception {\n         \"s3a://\" + getFileSystem().getBucket()));\n   }\n \n+  @Test\n+  public void testCLIFsckDDbFixOnlyFails() throws Exception {\n+    describe(\"This test serves the purpose to run fsck with the correct \" +\n+        \"parameters, so there will be no exception thrown.\");\n+    final int result = run(S3GuardTool.Fsck.NAME,\n+        \"-\" + Fsck.FIX_FLAG,\n+        \"s3a://\" + getFileSystem().getBucket());\n+    LOG.info(\"The return value of the run: {}\", result);\n+    assertEquals(ERROR, result);\n+  }\n+\n+  @Test\n+  public void testCLIFsckDDbFixAndInternalSucceed() throws Exception {\n+    describe(\"This test serves the purpose to run fsck with the correct \" +\n+        \"parameters, so there will be no exception thrown.\");\n+    final int result = run(S3GuardTool.Fsck.NAME,\n+        \"-\" + Fsck.FIX_FLAG,\n+        \"-\" + Fsck.DDB_MS_CONSISTENCY_FLAG,\n+        \"s3a://\" + getFileSystem().getBucket());\n+    LOG.info(\"The return value of the run: {}\", result);", "originalCommit": "eae4dc2f1c876ad9185161f3746e3b1b90fd2f40", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ5NDgxOQ==", "url": "https://github.com/apache/hadoop/pull/1851#discussion_r384494819", "bodyText": "There is no assert here because we can not assert on the result - there maybe some errors found during the check and the returned value will be ERROR and not SUCCESS. So if we assert on SUCCESS, then the test could (likely) to be flaky.\nWe want the test to fail or pass - and we don't expect any exceptions here so if the parameters are not accepted the test will fail, and this is enough check here.\nI'll add a javadoc on the top of the method about this.", "author": "bgaborg", "createdAt": "2020-02-26T13:36:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgyNzU0OA=="}], "type": "inlineReview"}, {"oid": "01c4be2c9212f48315367f57389adf9a7dd20815", "url": "https://github.com/apache/hadoop/commit/01c4be2c9212f48315367f57389adf9a7dd20815", "message": "addig javadoc to a private test function\n\nChange-Id: If35368a307660e6560c9a98d25260f0ef00f5ea0", "committedDate": "2020-02-27T12:46:04Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU0Mzg0NA==", "url": "https://github.com/apache/hadoop/pull/1851#discussion_r386543844", "bodyText": "javadoc change?", "author": "steveloughran", "createdAt": "2020-03-02T17:40:20Z", "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3GuardFsckViolationHandler.java", "diffHunk": "@@ -60,28 +66,55 @@ public void handle(S3GuardFsck.ComparePair comparePair) {\n     sB.append(newLine)\n         .append(\"On path: \").append(comparePair.getPath()).append(newLine);\n \n-    handleComparePair(comparePair, sB);\n+    handleComparePair(comparePair, sB, HandleMode.LOG);\n \n     LOG.error(sB.toString());\n   }\n \n+  public void doFix(S3GuardFsck.ComparePair comparePair) throws IOException {\n+    if (!comparePair.containsViolation()) {\n+      LOG.debug(\"There is no violation in the compare pair: {}\", comparePair);\n+      return;\n+    }\n+\n+    StringBuilder sB = new StringBuilder();\n+    sB.append(newLine)\n+        .append(\"On path: \").append(comparePair.getPath()).append(newLine);\n+\n+    handleComparePair(comparePair, sB, HandleMode.FIX);\n+\n+    LOG.info(sB.toString());\n+  }\n+\n   /**\n    * Create a new instance of the violation handler for all the violations\n    * found in the compare pair and use it.\n    *\n    * @param comparePair the compare pair with violations\n    * @param sB StringBuilder to append error strings from violations.\n    */\n-  protected static void handleComparePair(S3GuardFsck.ComparePair comparePair,\n-      StringBuilder sB) {\n+  protected void handleComparePair(S3GuardFsck.ComparePair comparePair,", "originalCommit": "01c4be2c9212f48315367f57389adf9a7dd20815", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5d9833621c74191d462ef39b5655f9f90e2175f6", "url": "https://github.com/apache/hadoop/commit/5d9833621c74191d462ef39b5655f9f90e2175f6", "message": "HADOOP-16858. S3Guard fsck: Add option to remove orphaned entries\n\nChange-Id: I2cdb6601fea1d859b54370046b827ef06eb1107d", "committedDate": "2020-03-18T09:58:23Z", "type": "commit"}, {"oid": "d93d0ed980f1f1596c4d3ae31bea9258f02e9aa7", "url": "https://github.com/apache/hadoop/commit/d93d0ed980f1f1596c4d3ae31bea9258f02e9aa7", "message": "remove impl from subclasses and add itest for fix\n\nChange-Id: Ic35c3d69117c7de1129f299ad0a64cd93e94de7b", "committedDate": "2020-03-18T09:58:23Z", "type": "commit"}, {"oid": "61a69a5ebd84bd15d1eedcbda62d3ab2359bd244", "url": "https://github.com/apache/hadoop/commit/61a69a5ebd84bd15d1eedcbda62d3ab2359bd244", "message": "fixing based on Mukund's review\n\nChange-Id: If4cd6b9bd19c741ee2dfa566105f2f1bebea6fd8", "committedDate": "2020-03-18T09:58:23Z", "type": "commit"}, {"oid": "c0051d19ae2403d7c028552d36b4e43baec8798a", "url": "https://github.com/apache/hadoop/commit/c0051d19ae2403d7c028552d36b4e43baec8798a", "message": "addig javadoc to a private test function\n\nChange-Id: If35368a307660e6560c9a98d25260f0ef00f5ea0", "committedDate": "2020-03-18T09:58:23Z", "type": "commit"}, {"oid": "2dbdbffe26514d34eba18c021d64c1ed0f8a6f36", "url": "https://github.com/apache/hadoop/commit/2dbdbffe26514d34eba18c021d64c1ed0f8a6f36", "message": "adding docs\n\nChange-Id: I82e992425ba15fdf9fe717c48b4a5cea73f3c99f", "committedDate": "2020-03-18T11:43:21Z", "type": "commit"}, {"oid": "2dbdbffe26514d34eba18c021d64c1ed0f8a6f36", "url": "https://github.com/apache/hadoop/commit/2dbdbffe26514d34eba18c021d64c1ed0f8a6f36", "message": "adding docs\n\nChange-Id: I82e992425ba15fdf9fe717c48b4a5cea73f3c99f", "committedDate": "2020-03-18T11:43:21Z", "type": "forcePushed"}]}