{"pr_number": 1956, "pr_title": "HADOOP-16965 Refactor abfs stream configuration.", "pr_createdAt": "2020-04-14T09:48:38Z", "pr_url": "https://github.com/apache/hadoop/pull/1956", "timeline": [{"oid": "3ed1ed1feffc3f0410f372089c89f588d7786d38", "url": "https://github.com/apache/hadoop/commit/3ed1ed1feffc3f0410f372089c89f588d7786d38", "message": "HADOOP-16965 Rafactor abfs stream configuration.", "committedDate": "2020-04-14T09:45:32Z", "type": "commit"}, {"oid": "492ca11519a9122fac2d7c33436aa008a86f980e", "url": "https://github.com/apache/hadoop/commit/492ca11519a9122fac2d7c33436aa008a86f980e", "message": " Changing to builder based contexts", "committedDate": "2020-04-15T13:32:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQ3NzA1MA==", "url": "https://github.com/apache/hadoop/pull/1956#discussion_r411477050", "bodyText": "for consistency, mark as final. I know, it's not that significant in a constructor, but it just keeps things the same.", "author": "steveloughran", "createdAt": "2020-04-20T15:34:39Z", "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsInputStream.java", "diffHunk": "@@ -61,21 +61,19 @@\n   private boolean closed = false;\n \n   public AbfsInputStream(\n-      final AbfsClient client,\n-      final Statistics statistics,\n-      final String path,\n-      final long contentLength,\n-      final int bufferSize,\n-      final int readAheadQueueDepth,\n-      final boolean tolerateOobAppends,\n-      final String eTag) {\n+          final AbfsClient client,\n+          final Statistics statistics,\n+          final String path,\n+          final long contentLength,\n+          AbfsInputStreamContext abfsInputStreamContext,", "originalCommit": "492ca11519a9122fac2d7c33436aa008a86f980e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQ3Nzg4NA==", "url": "https://github.com/apache/hadoop/pull/1956#discussion_r411477884", "bodyText": "do we need any validators here yet, or is there enough in the code as it is?", "author": "steveloughran", "createdAt": "2020-04-20T15:35:43Z", "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsOutputStreamContext.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.fs.azurebfs.services;\n+\n+/**\n+ * Class to hold extra output stream configs.\n+ */\n+public class AbfsOutputStreamContext extends AbfsStreamContext {\n+\n+  private int writeBufferSize;\n+\n+  private boolean enableFlush;\n+\n+  private boolean disableOutputStreamFlush;\n+\n+  public AbfsOutputStreamContext() {\n+  }\n+\n+  public AbfsOutputStreamContext withWriteBufferSize(\n+          final int writeBufferSize) {\n+    this.writeBufferSize = writeBufferSize;\n+    return this;\n+  }\n+\n+  public AbfsOutputStreamContext enableFlush(final boolean enableFlush) {\n+    this.enableFlush = enableFlush;\n+    return this;\n+  }\n+\n+  public AbfsOutputStreamContext disableOutputStreamFlush(\n+          final boolean disableOutputStreamFlush) {\n+    this.disableOutputStreamFlush = disableOutputStreamFlush;\n+    return this;\n+  }\n+\n+  public AbfsOutputStreamContext build() {\n+    // Validation of parameters to be done here.\n+    return this;", "originalCommit": "492ca11519a9122fac2d7c33436aa008a86f980e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE4NTA3MQ==", "url": "https://github.com/apache/hadoop/pull/1956#discussion_r412185071", "bodyText": "Now we don't have any validation yet but we can add the new ones here in future if required.", "author": "mukund-thakur", "createdAt": "2020-04-21T13:29:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQ3Nzg4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQ3OTI0Ng==", "url": "https://github.com/apache/hadoop/pull/1956#discussion_r411479246", "bodyText": "trailing ;", "author": "steveloughran", "createdAt": "2020-04-20T15:37:27Z", "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsInputStreamContext.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.fs.azurebfs.services;\n+\n+/**\n+ * Class to hold extra input stream configs.\n+ */\n+public class AbfsInputStreamContext extends AbfsStreamContext {\n+\n+  private int readBufferSize;\n+\n+  private int readAheadQueueDepth;\n+\n+  private boolean tolerateOobAppends;\n+\n+  public AbfsInputStreamContext() {\n+  }\n+\n+  public AbfsInputStreamContext withReadBufferSize(final int readBufferSize) {\n+    this.readBufferSize = readBufferSize;\n+    return this;\n+  }\n+\n+  public AbfsInputStreamContext withReadAheadQueueDepth(\n+          final int readAheadQueueDepth) {\n+    this.readAheadQueueDepth = (readAheadQueueDepth >= 0)\n+            ? readAheadQueueDepth\n+            : Runtime.getRuntime().availableProcessors();;", "originalCommit": "492ca11519a9122fac2d7c33436aa008a86f980e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8faf18c8a78ba1dce0e2001c3362353d0d14eb3c", "url": "https://github.com/apache/hadoop/commit/8faf18c8a78ba1dce0e2001c3362353d0d14eb3c", "message": "Review comments", "committedDate": "2020-04-21T13:28:21Z", "type": "commit"}]}