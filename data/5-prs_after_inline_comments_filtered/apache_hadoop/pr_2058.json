{"pr_number": 2058, "pr_title": "HDFS-15394. Add all available fs.viewfs.overload.scheme.target.<scheme>.impl classes in core-default.xml bydefault.", "pr_createdAt": "2020-06-06T02:30:05Z", "pr_url": "https://github.com/apache/hadoop/pull/2058", "timeline": [{"oid": "473e89a8bfe7501ffe6606f7f0d3fc37a9097862", "url": "https://github.com/apache/hadoop/commit/473e89a8bfe7501ffe6606f7f0d3fc37a9097862", "message": "HDFS-15394. Add all available fs.viewfs.overload.scheme.target.<scheme>.impl classes in core-default.xml bydefault.", "committedDate": "2020-06-06T02:28:13Z", "type": "commit"}, {"oid": "f3736575889b1cf4794e10c79d18e1a998e02aee", "url": "https://github.com/apache/hadoop/commit/f3736575889b1cf4794e10c79d18e1a998e02aee", "message": "HDFS-15394. Add all available fs.viewfs.overload.scheme.target.<scheme>.impl classes in core-default.xml bydefault.", "committedDate": "2020-06-06T02:34:54Z", "type": "commit"}, {"oid": "1f27f7df06192737442f2ab25f4fc2dad34bda59", "url": "https://github.com/apache/hadoop/commit/1f27f7df06192737442f2ab25f4fc2dad34bda59", "message": "Fixed test failures.", "committedDate": "2020-06-06T06:35:20Z", "type": "commit"}, {"oid": "eaa403c9d67e5887988c6cb3a4c7980717ff6286", "url": "https://github.com/apache/hadoop/commit/eaa403c9d67e5887988c6cb3a4c7980717ff6286", "message": "Fixed test failures.", "committedDate": "2020-06-06T06:40:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI0NDkzMQ==", "url": "https://github.com/apache/hadoop/pull/2058#discussion_r436244931", "bodyText": "Can we just add one line instead :\n    xmlPrefixToSkipCompare.add(\"fs.viewfs.overload.scheme.target.\");", "author": "ayushtkn", "createdAt": "2020-06-06T06:51:53Z", "path": "hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/conf/TestCommonConfigurationFields.java", "diffHunk": "@@ -124,6 +124,24 @@ public void initializeMemberVariables() {\n     xmlPrefixToSkipCompare.add(\"fs.adl.\");\n     xmlPropsToSkipCompare.add(\"fs.AbstractFileSystem.adl.impl\");\n \n+    // ViewfsOverloadScheme target fs impl property keys are dynamically\n+    // constructed and they are advanced props.\n+    xmlPropsToSkipCompare.add(\"fs.viewfs.overload.scheme.target.abfs.impl\");\n+    xmlPropsToSkipCompare.add(\"fs.viewfs.overload.scheme.target.abfss.impl\");\n+    xmlPropsToSkipCompare.add(\"fs.viewfs.overload.scheme.target.file.impl\");\n+    xmlPropsToSkipCompare.add(\"fs.viewfs.overload.scheme.target.ftp.impl\");\n+    xmlPropsToSkipCompare.add(\"fs.viewfs.overload.scheme.target.hdfs.impl\");\n+    xmlPropsToSkipCompare.add(\"fs.viewfs.overload.scheme.target.http.impl\");\n+    xmlPropsToSkipCompare.add(\"fs.viewfs.overload.scheme.target.https.impl\");\n+    xmlPropsToSkipCompare.add(\"fs.viewfs.overload.scheme.target.o3fs.impl\");\n+    xmlPropsToSkipCompare.add(\"fs.viewfs.overload.scheme.target.oss.impl\");\n+    xmlPropsToSkipCompare.add(\"fs.viewfs.overload.scheme.target.s3a.impl\");\n+    xmlPropsToSkipCompare.\n+        add(\"fs.viewfs.overload.scheme.target.swebhdfs.impl\");\n+    xmlPropsToSkipCompare.add(\"fs.viewfs.overload.scheme.target.webhdfs.impl\");\n+    xmlPropsToSkipCompare.add(\"fs.viewfs.overload.scheme.target.wasb.impl\");\n+    xmlPropsToSkipCompare.add(\"fs.viewfs.overload.scheme.target.swift.impl\");\n+", "originalCommit": "eaa403c9d67e5887988c6cb3a4c7980717ff6286", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI0ODY3OA==", "url": "https://github.com/apache/hadoop/pull/2058#discussion_r436248678", "bodyText": "@ayushtkn , Thanks a lot for review!\nInitially I thought that, but if we add any property later starts with prefix this test will silently ignore them. In tests I prefer specific cases rather than pattern here in this case. If you are so strong on to change, let me know I will try to modify it :-).", "author": "umamaheswararao", "createdAt": "2020-06-06T07:55:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI0NDkzMQ=="}], "type": "inlineReview"}]}