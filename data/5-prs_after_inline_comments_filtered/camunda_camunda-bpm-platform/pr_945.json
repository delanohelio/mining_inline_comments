{"pr_number": 945, "pr_title": "feat(rest): add batch operation to set variables", "pr_createdAt": "2020-08-27T09:46:41Z", "pr_url": "https://github.com/camunda/camunda-bpm-platform/pull/945", "timeline": [{"oid": "bc8bdc96ef5313b72dc48e9b1b76d2f5fa2983ee", "url": "https://github.com/camunda/camunda-bpm-platform/commit/bc8bdc96ef5313b72dc48e9b1b76d2f5fa2983ee", "message": "feat(engine): add batch operation to set variables\n\nrelated to CAM-12301", "committedDate": "2020-08-27T14:03:07Z", "type": "forcePushed"}, {"oid": "849dba4ab164196fab5c656b3b209470148439da", "url": "https://github.com/camunda/camunda-bpm-platform/commit/849dba4ab164196fab5c656b3b209470148439da", "message": "feat(rest): add batch operation to set variables\n\nrelated to CAM-12300", "committedDate": "2020-08-27T14:13:21Z", "type": "forcePushed"}, {"oid": "cc85e19d2285c6b8348525799d2153b863e69a78", "url": "https://github.com/camunda/camunda-bpm-platform/commit/cc85e19d2285c6b8348525799d2153b863e69a78", "message": "feat(rest): add batch operation to set variables\n\nrelated to CAM-12300", "committedDate": "2020-08-27T14:15:43Z", "type": "commit"}, {"oid": "cc85e19d2285c6b8348525799d2153b863e69a78", "url": "https://github.com/camunda/camunda-bpm-platform/commit/cc85e19d2285c6b8348525799d2153b863e69a78", "message": "feat(rest): add batch operation to set variables\n\nrelated to CAM-12300", "committedDate": "2020-08-27T14:15:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDAwODEyMw==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/945#discussion_r480008123", "bodyText": "I guess it is just fine like that, but what it really tests is that ProcessEngineExceptions are transformed to InvalidRequestExceptions, right?", "author": "tmetzke", "createdAt": "2020-08-31T09:29:30Z", "path": "engine-rest/engine-rest/src/test/java/org/camunda/bpm/engine/rest/ProcessInstanceRestServiceInteractionTest.java", "diffHunk": "@@ -3634,6 +3640,254 @@ public void testAsyncProcessInstanceModificationCancellationSource() {\n     verify(mockModificationBuilder).cancellationSourceExternal(true);\n   }\n \n+  @Test\n+  public void shouldSetVariablesAsync() {\n+    // given\n+    Batch batchMock = createMockBatch();\n+    when(runtimeServiceMock.setVariablesAsync(any(), any(), any(), any()))\n+        .thenReturn(batchMock);\n+\n+    SetVariablesAsyncDto body = new SetVariablesAsyncDto();\n+\n+    VariableValueDto variableValueDto = new VariableValueDto();\n+    variableValueDto.setValue(\"bar\");\n+\n+    body.setVariables(Collections.singletonMap(\"foo\", variableValueDto));\n+\n+    // when\n+    Response response = given()\n+          .contentType(ContentType.JSON)\n+          .body(body)\n+        .then().expect()\n+          .statusCode(Status.OK.getStatusCode())\n+        .when()\n+          .post(PROCESS_INSTANCE_SET_VARIABLES_ASYNC_URL);\n+\n+    // then\n+    ArgumentCaptor<Map> captor = ArgumentCaptor.forClass(Map.class);\n+    verify(runtimeServiceMock).setVariablesAsync(\n+        eq(null),\n+        eq(null),\n+        eq(null),\n+        captor.capture()\n+    );\n+\n+    Assertions.assertThat(captor.getValue().get(\"foo\")).isEqualTo(\"bar\");\n+\n+    verifyBatchJson(response.asString());\n+  }\n+\n+  @Test\n+  public void shouldThrowExceptionWhenSetVariablesAsync_UnsupportedType() {\n+    // given\n+    Batch batchMock = createMockBatch();\n+    when(runtimeServiceMock.setVariablesAsync(any(), any(), any(), any()))\n+        .thenReturn(batchMock);\n+\n+    SetVariablesAsyncDto body = new SetVariablesAsyncDto();\n+\n+    VariableValueDto variableValueDto = new VariableValueDto();\n+    variableValueDto.setValue(\"bar\");\n+    variableValueDto.setType(\"unknown\");\n+\n+    body.setVariables(Collections.singletonMap(\"foo\", variableValueDto));\n+\n+    // when + then\n+    given()\n+          .contentType(ContentType.JSON)\n+          .body(body)\n+        .then().expect()\n+          .statusCode(Status.BAD_REQUEST.getStatusCode())\n+          .body(containsString(\"{\\\"type\\\":\\\"InvalidRequestException\\\",\" +\n+              \"\\\"message\\\":\\\"Cannot set variables: Unsupported value type 'unknown'\\\"}\"))\n+        .when()\n+          .post(PROCESS_INSTANCE_SET_VARIABLES_ASYNC_URL);\n+  }\n+\n+  @Test\n+  public void shouldThrowExceptionWhenSetVariablesAsync_JavaSerializationFormatProhibited() {", "originalCommit": "cc85e19d2285c6b8348525799d2153b863e69a78", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "878a6604e5a1675506a2673af79006a32e2c4a8f", "url": "https://github.com/camunda/camunda-bpm-platform/commit/878a6604e5a1675506a2673af79006a32e2c4a8f", "message": "follow review hints", "committedDate": "2020-08-31T13:02:03Z", "type": "commit"}, {"oid": "878a6604e5a1675506a2673af79006a32e2c4a8f", "url": "https://github.com/camunda/camunda-bpm-platform/commit/878a6604e5a1675506a2673af79006a32e2c4a8f", "message": "follow review hints", "committedDate": "2020-08-31T13:02:03Z", "type": "forcePushed"}]}