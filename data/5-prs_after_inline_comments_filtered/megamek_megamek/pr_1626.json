{"pr_number": 1626, "pr_title": "Add LargeCraft Roles to RatGen", "pr_createdAt": "2020-01-31T17:46:15Z", "pr_url": "https://github.com/MegaMek/megamek/pull/1626", "timeline": [{"oid": "d9fc898877ea413f32164428262558c80606e5d5", "url": "https://github.com/MegaMek/megamek/commit/d9fc898877ea413f32164428262558c80606e5d5", "message": "Return true for SUPPORT fitsunittype (newgrange...)", "committedDate": "2020-01-29T17:25:31Z", "type": "commit"}, {"oid": "42345c9fd96f14ad02161b8cb5b06f22c4eb090e", "url": "https://github.com/MegaMek/megamek/commit/42345c9fd96f14ad02161b8cb5b06f22c4eb090e", "message": "Add civilian and warship class roles", "committedDate": "2020-01-29T17:57:31Z", "type": "commit"}, {"oid": "caa3046536f03aa813c67dd181fafd86e492ef7d", "url": "https://github.com/MegaMek/megamek/commit/caa3046536f03aa813c67dd181fafd86e492ef7d", "message": "Continue work on large craft roles", "committedDate": "2020-01-30T20:11:33Z", "type": "commit"}, {"oid": "4b797f4cee06aa653f5744c9b1adadddc94424ce", "url": "https://github.com/MegaMek/megamek/commit/4b797f4cee06aa653f5744c9b1adadddc94424ce", "message": "Add messages for protomech carrier", "committedDate": "2020-01-31T15:56:27Z", "type": "commit"}, {"oid": "79ec998a9dc5c33231993fc821f3b924fb6b2d21", "url": "https://github.com/MegaMek/megamek/commit/79ec998a9dc5c33231993fc821f3b924fb6b2d21", "message": "Finish adding dropship roles", "committedDate": "2020-01-31T17:42:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5MjI4Mw==", "url": "https://github.com/MegaMek/megamek/pull/1626#discussion_r373792283", "bodyText": "TROOP_CARRIER is a combined forces transport, but it may just be vees and infantry. MECH_CARRIER should just be those with mech bays.", "author": "neoancient", "createdAt": "2020-02-01T17:44:12Z", "path": "megamek/src/megamek/client/ratgenerator/MissionRole.java", "diffHunk": "@@ -418,6 +419,132 @@ public static Double adjustAvailabilityByRole(double avRating, Collection<Missio\n \t\t\t\t\t\tavRating += avAdj[2] * (mRec.getSpeed() - (7 - mRec.getWeightClass()));\t\t\t\t\t\n \t\t\t\t\t}\n \t\t\t\t\tbreak;\n+\t\t\t\t//Large craft roles\n+\t\t\t\tcase CIVILIAN:\n+\t\t\t\t    if (!mRec.getRoles().contains(CIVILIAN)) {\n+\t\t\t\t        return null;\n+\t\t\t\t    }\n+\t\t\t\t    break;\n+\t\t\t\tcase CARGO:\n+\t\t\t\t    if (mRec.getRoles().contains(CARGO)) {\n+\t\t\t\t        avRating += avAdj[2];\n+                    } else if (mRec.getRoles().contains(CIVILIAN)) {\n+                        avRating += avAdj[1];\n+                    } else {\n+                        avRating -= avAdj[2];\n+                    }\n+                    break;\n+\t\t\t\tcase SUPPORT:\n+                    if (mRec.getRoles().contains(SUPPORT)) {\n+                        avRating += avAdj[2];\n+                    } else if (mRec.getRoles().contains(TUG)) {\n+                        avRating += avAdj[1];\n+                    } else if (mRec.getRoles().contains(CARGO)\n+                                || mRec.getRoles().contains(CIVILIAN)) {\n+                        avRating += avAdj[0];\n+                    } else {\n+                        avRating -= avAdj[2];\n+                    }\n+                    break;\n+\t\t\t\tcase TUG:\n+                    if (!mRec.getRoles().contains(TUG)) {\n+                        return null;\n+                    }\n+                    break;\n+\t\t\t\tcase POCKET_WARSHIP:\n+\t\t\t\t    if (mRec.getRoles().contains(POCKET_WARSHIP)) {\n+                        avRating += avAdj[2];\n+                    } else if (mRec.getRoles().contains(ASSAULT)) {\n+                        avRating += avAdj[0];\n+                    } else {\n+                        return null;\n+                    }\n+\t\t\t\t    break;\n+\t\t\t\tcase ASSAULT:\n+                    if (mRec.getRoles().contains(ASSAULT)) {\n+                        avRating += avAdj[2];\n+                    } else if (mRec.getRoles().contains(POCKET_WARSHIP)) {\n+                        avRating += avAdj[0];\n+                    } else {\n+                        return null;\n+                    }\n+                    break;\n+\t\t\t\tcase MECH_CARRIER:\n+\t\t\t\t    if (mRec.getRoles().contains(MECH_CARRIER)) {\n+                        avRating += avAdj[2];\n+                    } else if (mRec.getRoles().contains(TROOP_CARRIER)) {", "originalCommit": "79ec998a9dc5c33231993fc821f3b924fb6b2d21", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg4NTMxOQ==", "url": "https://github.com/MegaMek/megamek/pull/1626#discussion_r373885319", "bodyText": "I had done this intentionally because a number of the ships listed as troop carriers include (substantial) mech carrier capabilities -  Colossus, Excalibur...\nI recognize that every now and again it'll return a ship with no mech carrying capacity.\nFor myself, I've updated the forcegen files to reflect each individual role as well where this is the case, but since my files are customized I haven't submitted those changes to the repo.", "author": "mkerensky", "createdAt": "2020-02-02T23:37:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5MjI4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg4NjQ2NA==", "url": "https://github.com/MegaMek/megamek/pull/1626#discussion_r373886464", "bodyText": "Ok, I'm good with that.", "author": "neoancient", "createdAt": "2020-02-02T23:55:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5MjI4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5MjMxMQ==", "url": "https://github.com/MegaMek/megamek/pull/1626#discussion_r373792311", "bodyText": "Similarly, this should probably be implemented as a filter that returns null for any unit that does not contain ASF_CARRIER.", "author": "neoancient", "createdAt": "2020-02-01T17:45:18Z", "path": "megamek/src/megamek/client/ratgenerator/MissionRole.java", "diffHunk": "@@ -418,6 +419,132 @@ public static Double adjustAvailabilityByRole(double avRating, Collection<Missio\n \t\t\t\t\t\tavRating += avAdj[2] * (mRec.getSpeed() - (7 - mRec.getWeightClass()));\t\t\t\t\t\n \t\t\t\t\t}\n \t\t\t\t\tbreak;\n+\t\t\t\t//Large craft roles\n+\t\t\t\tcase CIVILIAN:\n+\t\t\t\t    if (!mRec.getRoles().contains(CIVILIAN)) {\n+\t\t\t\t        return null;\n+\t\t\t\t    }\n+\t\t\t\t    break;\n+\t\t\t\tcase CARGO:\n+\t\t\t\t    if (mRec.getRoles().contains(CARGO)) {\n+\t\t\t\t        avRating += avAdj[2];\n+                    } else if (mRec.getRoles().contains(CIVILIAN)) {\n+                        avRating += avAdj[1];\n+                    } else {\n+                        avRating -= avAdj[2];\n+                    }\n+                    break;\n+\t\t\t\tcase SUPPORT:\n+                    if (mRec.getRoles().contains(SUPPORT)) {\n+                        avRating += avAdj[2];\n+                    } else if (mRec.getRoles().contains(TUG)) {\n+                        avRating += avAdj[1];\n+                    } else if (mRec.getRoles().contains(CARGO)\n+                                || mRec.getRoles().contains(CIVILIAN)) {\n+                        avRating += avAdj[0];\n+                    } else {\n+                        avRating -= avAdj[2];\n+                    }\n+                    break;\n+\t\t\t\tcase TUG:\n+                    if (!mRec.getRoles().contains(TUG)) {\n+                        return null;\n+                    }\n+                    break;\n+\t\t\t\tcase POCKET_WARSHIP:\n+\t\t\t\t    if (mRec.getRoles().contains(POCKET_WARSHIP)) {\n+                        avRating += avAdj[2];\n+                    } else if (mRec.getRoles().contains(ASSAULT)) {\n+                        avRating += avAdj[0];\n+                    } else {\n+                        return null;\n+                    }\n+\t\t\t\t    break;\n+\t\t\t\tcase ASSAULT:\n+                    if (mRec.getRoles().contains(ASSAULT)) {\n+                        avRating += avAdj[2];\n+                    } else if (mRec.getRoles().contains(POCKET_WARSHIP)) {\n+                        avRating += avAdj[0];\n+                    } else {\n+                        return null;\n+                    }\n+                    break;\n+\t\t\t\tcase MECH_CARRIER:\n+\t\t\t\t    if (mRec.getRoles().contains(MECH_CARRIER)) {\n+                        avRating += avAdj[2];\n+                    } else if (mRec.getRoles().contains(TROOP_CARRIER)) {\n+                        avRating += avAdj[0];\n+                    } else {\n+                        return null;\n+                    }\n+                    break;\n+\t\t\t\tcase ASF_CARRIER:\n+\t\t\t\t    if (mRec.getRoles().contains(ASF_CARRIER)) {\n+                        avRating += avAdj[2];\n+                    } else if (mRec.getRoles().contains(ASSAULT)) {", "originalCommit": "79ec998a9dc5c33231993fc821f3b924fb6b2d21", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg4NTM4Ng==", "url": "https://github.com/MegaMek/megamek/pull/1626#discussion_r373885386", "bodyText": "Same as above, this is intentional since there are so few defined ASF carriers but so many assault ships carry about 6 fighters.", "author": "mkerensky", "createdAt": "2020-02-02T23:39:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5MjMxMQ=="}], "type": "inlineReview"}, {"oid": "20fcc48694e6cbfd1c647ec569a19126bcd510cc", "url": "https://github.com/MegaMek/megamek/commit/20fcc48694e6cbfd1c647ec569a19126bcd510cc", "message": "Replace tabs with spaces", "committedDate": "2020-02-02T23:39:32Z", "type": "commit"}]}