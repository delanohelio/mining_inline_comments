{"pr_number": 2168, "pr_title": "Bot pathfinding tweaks", "pr_createdAt": "2020-08-23T02:19:10Z", "pr_url": "https://github.com/MegaMek/megamek/pull/2168", "timeline": [{"oid": "56415c1d8b3d892641a2967896d123efd502462f", "url": "https://github.com/MegaMek/megamek/commit/56415c1d8b3d892641a2967896d123efd502462f", "message": "actual generation of long-range jump paths", "committedDate": "2020-08-22T16:50:42Z", "type": "commit"}, {"oid": "426a77171ce59adac21710f523a912267cddcb49", "url": "https://github.com/MegaMek/megamek/commit/426a77171ce59adac21710f523a912267cddcb49", "message": "Merge branch 'master' of https://github.com/MegaMek/megamek into bot_pathfinding_tweaks", "committedDate": "2020-08-23T01:20:05Z", "type": "commit"}, {"oid": "22d9b569f044a2f052fc2ea9fc052d9ed88e0f89", "url": "https://github.com/MegaMek/megamek/commit/22d9b569f044a2f052fc2ea9fc052d9ed88e0f89", "message": "don't check for engagement if attempting to flee", "committedDate": "2020-08-23T02:12:48Z", "type": "commit"}, {"oid": "b194db097dd8e427513240f1f4e574fdbaabad35", "url": "https://github.com/MegaMek/megamek/commit/b194db097dd8e427513240f1f4e574fdbaabad35", "message": "remove debugging code", "committedDate": "2020-08-23T02:14:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE2MDA1Nw==", "url": "https://github.com/MegaMek/megamek/pull/2168#discussion_r475160057", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if(!isAirborneAeroOnGroundMap && !getOwner().wantsToFallBack(mover)) {\n          \n          \n            \n                            if (!isAirborneAeroOnGroundMap && !getOwner().wantsToFallBack(mover)) {", "author": "Windchild292", "createdAt": "2020-08-23T02:20:37Z", "path": "megamek/src/megamek/client/bot/princess/PathRanker.java", "diffHunk": "@@ -195,7 +196,8 @@ abstract RankedPath rankPath(MovePath path, IGame game, int maxRange, double fal\n \n                 // Make sure I'm trying to get/stay in range of a target.\n                 // Skip this part if I'm an aero on the ground map, as it's kind of irrelevant\n-                if(!isAirborneAeroOnGroundMap) {\n+                // also skip this part if I'm attempting to retreat, as engagement is not the point here\n+                if(!isAirborneAeroOnGroundMap && !getOwner().wantsToFallBack(mover)) {", "originalCommit": "22d9b569f044a2f052fc2ea9fc052d9ed88e0f89", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE2MDA3OA==", "url": "https://github.com/MegaMek/megamek/pull/2168#discussion_r475160078", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if(!mover.isAirborne()) {                \n          \n          \n            \n                            if (!mover.isAirborne()) {", "author": "Windchild292", "createdAt": "2020-08-23T02:20:53Z", "path": "megamek/src/megamek/client/bot/princess/Princess.java", "diffHunk": "@@ -1521,7 +1521,10 @@ protected void initFiring() {\n             // so just have it mill around in place as usual. Also set the behavior to \"no path to destination\"\n             // so it doesn't hump the walls due to \"self preservation mods\"\n             if ((bulldozerPaths == null) || (bulldozerPaths.size() == 0)) {\n-                getUnitBehaviorTracker().overrideBehaviorType(mover, BehaviorType.NoPathToDestination);\n+                \n+                if(!mover.isAirborne()) {                ", "originalCommit": "22d9b569f044a2f052fc2ea9fc052d9ed88e0f89", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE2MDExMA==", "url": "https://github.com/MegaMek/megamek/pull/2168#discussion_r475160110", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(jumpMPNoGravity == null) {\n          \n          \n            \n                    if (jumpMPNoGravity == null) {", "author": "Windchild292", "createdAt": "2020-08-23T02:21:41Z", "path": "megamek/src/megamek/common/pathfinder/CachedEntityState.java", "diffHunk": "@@ -106,6 +108,22 @@ public int getTorsoJumpJets() {\n         return torsoJumpJets;\n     }\n     \n+    public int getJumpMPNoGravity() {\n+        if(jumpMPNoGravity == null) {", "originalCommit": "b194db097dd8e427513240f1f4e574fdbaabad35", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE2MDEzMw==", "url": "https://github.com/MegaMek/megamek/pull/2168#discussion_r475160133", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(runMPNoGravity == null) {\n          \n          \n            \n                    if (runMPNoGravity == null) {", "author": "Windchild292", "createdAt": "2020-08-23T02:21:48Z", "path": "megamek/src/megamek/common/pathfinder/CachedEntityState.java", "diffHunk": "@@ -106,6 +108,22 @@ public int getTorsoJumpJets() {\n         return torsoJumpJets;\n     }\n     \n+    public int getJumpMPNoGravity() {\n+        if(jumpMPNoGravity == null) {\n+            jumpMPNoGravity = backingEntity.getJumpMP(false);\n+        }\n+        \n+        return jumpMPNoGravity;\n+    }\n+    \n+    public int getRunMPNoGravity() {\n+        if(runMPNoGravity == null) {", "originalCommit": "b194db097dd8e427513240f1f4e574fdbaabad35", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE2MDE3Mg==", "url": "https://github.com/MegaMek/megamek/pull/2168#discussion_r475160172", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    for(int desiredMP : desiredMPs) {\n          \n          \n            \n                    for (int desiredMP : desiredMPs) {", "author": "Windchild292", "createdAt": "2020-08-23T02:22:34Z", "path": "megamek/src/megamek/common/pathfinder/PathDecorator.java", "diffHunk": "@@ -33,10 +33,62 @@\n  */\n public class PathDecorator {\n     \n+    public static Set<MovePath> decoratePath(BulldozerMovePath source) {\n+        Set<MovePath> result = new HashSet<>();\n+        \n+        // paths that aren't on the ground require separate and special logic\n+        if (source.isJumping()) {\n+            result.addAll(decorateJumpPath(source));\n+        } else if (source.getEntity().isAirborne()) {\n+            result.add(source);\n+        } else if (source.getGame().useVectorMove()) {\n+            result.add(source);\n+        } else {\n+            result.addAll(decorateGroundPath(source));\n+        }\n+        \n+        return result;\n+    }\n+    \n+    /**\n+     * Takes a given (jumping) path and returns a list of child paths that lead up to max jump MP or\n+     * max jump MP without gravity.\n+     */\n+    public static Set<MovePath> decorateJumpPath(BulldozerMovePath source) {\n+        Set<MovePath> retVal = new HashSet<>();\n+        \n+        MovePath clippedSource = source.clone();\n+        clippedSource.clipToPossible();\n+        \n+        // jumping move paths are pretty easy to clip\n+        // there are two interesting MP amounts - current jump MP and jump MP without \"bonus\" for low gravity.\n+        Set<Integer> desiredMPs = new HashSet<>();\n+        desiredMPs.add(source.getCachedEntityState().getJumpMP());\n+        desiredMPs.add(source.getCachedEntityState().getJumpMPNoGravity());\n+        \n+        for(int desiredMP : desiredMPs) {", "originalCommit": "b194db097dd8e427513240f1f4e574fdbaabad35", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "483018e43ccad08738753281e38ea04b3de8859b", "url": "https://github.com/MegaMek/megamek/commit/483018e43ccad08738753281e38ea04b3de8859b", "message": "Apply suggestions from code review\n\nCo-authored-by: Justin Bowen <39067288+Windchild292@users.noreply.github.com>", "committedDate": "2020-08-23T03:30:18Z", "type": "commit"}]}