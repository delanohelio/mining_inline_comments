{"pr_number": 2002, "pr_title": "Refactor StepSprite, BoardView", "pr_createdAt": "2020-06-13T09:25:11Z", "pr_url": "https://github.com/MegaMek/megamek/pull/2002", "timeline": [{"oid": "76e22df8f76f2f9edcbd03c18d7aae3a730827b0", "url": "https://github.com/MegaMek/megamek/commit/76e22df8f76f2f9edcbd03c18d7aae3a730827b0", "message": "Refactor StepSprite, BoardView", "committedDate": "2020-06-13T08:48:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc0NzQ4Mg==", "url": "https://github.com/MegaMek/megamek/pull/2002#discussion_r439747482", "bodyText": "A rather roundabout way to calculate Point(0, 0)", "author": "neoancient", "createdAt": "2020-06-13T15:34:04Z", "path": "megamek/src/megamek/client/ui/swing/boardview/StepSprite.java", "diffHunk": "@@ -63,84 +78,61 @@ public void prepare() {\n         Image tempImage = new BufferedImage(BoardView1.HEX_W, BoardView1.HEX_H,\n                 BufferedImage.TYPE_INT_ARGB);\n         Graphics graph = tempImage.getGraphics();\n+        Graphics2D g2D = (Graphics2D)graph;\n \n-        if (GUIPreferences.getInstance().getAntiAliasing()) {\n-            ((Graphics2D) graph).setRenderingHint(\n-                    RenderingHints.KEY_ANTIALIASING,\n-                    RenderingHints.VALUE_ANTIALIAS_ON);\n-        }\n+        GUIPreferences.AntiAliasifSet(graph);\n \n         // fill with key color\n         graph.setColor(new Color(0, 0, 0, 0));\n         graph.fillRect(0, 0, BoardView1.HEX_W, BoardView1.HEX_H);\n \n         // setup some variables\n-        final Point stepPos = bv.getHexLocation(step.getPosition());\n-        stepPos.translate(-bounds.x, -bounds.y);\n-", "originalCommit": "76e22df8f76f2f9edcbd03c18d7aae3a730827b0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc1NzQ5Mg==", "url": "https://github.com/MegaMek/megamek/pull/2002#discussion_r439757492", "bodyText": "I believe I added this comment a few lines below that \"//when is stepPos ever <> 0?\" a few years ago. But I was afraid I was missing something...", "author": "SJuliez", "createdAt": "2020-06-13T18:06:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc0NzQ4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0MDM0OQ==", "url": "https://github.com/MegaMek/megamek/pull/2002#discussion_r440240349", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Graphics2D g2D = (Graphics2D)graph;\n          \n          \n            \n                    Graphics2D g2D = (Graphics2D) graph;", "author": "Windchild292", "createdAt": "2020-06-15T15:00:47Z", "path": "megamek/src/megamek/client/ui/swing/boardview/StepSprite.java", "diffHunk": "@@ -63,84 +78,61 @@ public void prepare() {\n         Image tempImage = new BufferedImage(BoardView1.HEX_W, BoardView1.HEX_H,\n                 BufferedImage.TYPE_INT_ARGB);\n         Graphics graph = tempImage.getGraphics();\n+        Graphics2D g2D = (Graphics2D)graph;", "originalCommit": "76e22df8f76f2f9edcbd03c18d7aae3a730827b0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0MTI2Mw==", "url": "https://github.com/MegaMek/megamek/pull/2002#discussion_r440241263", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private final static GUIPreferences GUIP = GUIPreferences.getInstance(); \n          \n          \n            \n                private static final GUIPreferences GUIP = GUIPreferences.getInstance();", "author": "Windchild292", "createdAt": "2020-06-15T15:02:06Z", "path": "megamek/src/megamek/client/ui/swing/boardview/StepSprite.java", "diffHunk": "@@ -28,6 +33,16 @@\n  * entering, exiting or turning.\n  */\n class StepSprite extends Sprite {\n+    \n+    private final static GUIPreferences GUIP = GUIPreferences.getInstance(); ", "originalCommit": "76e22df8f76f2f9edcbd03c18d7aae3a730827b0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0MTUyOQ==", "url": "https://github.com/MegaMek/megamek/pull/2002#discussion_r440241529", "bodyText": "Just standard order for this project.", "author": "Windchild292", "createdAt": "2020-06-15T15:02:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0MTI2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0NzU0Mg==", "url": "https://github.com/MegaMek/megamek/pull/2002#discussion_r440247542", "bodyText": "There is no standard order for this project. The Java Language Specification has a recommended order, but our style guide does not dictate any particular order.", "author": "neoancient", "createdAt": "2020-06-15T15:11:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0MTI2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0ODA5MA==", "url": "https://github.com/MegaMek/megamek/pull/2002#discussion_r440248090", "bodyText": "Sorry, standard order for the code within this project.", "author": "Windchild292", "createdAt": "2020-06-15T15:11:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0MTI2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI4NzEwOA==", "url": "https://github.com/MegaMek/megamek/pull/2002#discussion_r440287108", "bodyText": "??", "author": "SJuliez", "createdAt": "2020-06-15T16:08:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0MTI2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMwOTQwOA==", "url": "https://github.com/MegaMek/megamek/pull/2002#discussion_r440309408", "bodyText": "The order makes no difference.", "author": "neoancient", "createdAt": "2020-06-15T16:45:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0MTI2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMxNTE4NQ==", "url": "https://github.com/MegaMek/megamek/pull/2002#discussion_r440315185", "bodyText": "Code-wise it does not, however readability-wise it does. If I wrote final static private int, it would be a proper variable declaration, although it is not readable. Therefore, standardization helps the code be significantly more readable.", "author": "Windchild292", "createdAt": "2020-06-15T16:55:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0MTI2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMyMjg3NA==", "url": "https://github.com/MegaMek/megamek/pull/2002#discussion_r440322874", "bodyText": "It's perfectly readable that way. You're trying to impose your own preferences and inventing authorities to appeal to.", "author": "neoancient", "createdAt": "2020-06-15T17:09:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0MTI2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzODU1MA==", "url": "https://github.com/MegaMek/megamek/pull/2002#discussion_r440338550", "bodyText": "That is abjectly wrong. It is not my preferences, it is standard Java practice and is part of our recommended style guide: https://google.github.io/styleguide/javaguide.html#s4.8.7-modifiers", "author": "Windchild292", "createdAt": "2020-06-15T17:37:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0MTI2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzOTk3OQ==", "url": "https://github.com/MegaMek/megamek/pull/2002#discussion_r440339979", "bodyText": "That's not our style guide.", "author": "neoancient", "createdAt": "2020-06-15T17:40:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0MTI2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUzMDQ5Ng==", "url": "https://github.com/MegaMek/megamek/pull/2002#discussion_r440530496", "bodyText": "So, my two cents on this (here specifically, and because it keeps coming up) is that a) changing the order of modifier declarations doesn't materially impact the readability of the code (unless it's a grep command), and b) having people spend their time making minor formatting changes is not really a productive use of said time. While I appreciate striving for code readability, the return on investment here is a lot less than the amount of time we've spent talking about it. To quote a wiser man than I, \"the perfect is the enemy of the good\".\nLet's all please keep in mind that we're all doing this in our spare time as a hobby, and I'd rather the focus be on more \"substantive\" issues. Given that this is an intermediate PR, I'm going to merge it and assume our intrepid author will address the formatting issues in a subsequent one.", "author": "NickAragua", "createdAt": "2020-06-16T01:12:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0MTI2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0MzQyOA==", "url": "https://github.com/MegaMek/megamek/pull/2002#discussion_r440243428", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                drawMovementCost(step, isLastStep, new Point(0,0), graph, col, true);\n          \n          \n            \n                                drawMovementCost(step, isLastStep, new Point(0, 0), graph, col, true);", "author": "Windchild292", "createdAt": "2020-06-15T15:05:16Z", "path": "megamek/src/megamek/client/ui/swing/boardview/StepSprite.java", "diffHunk": "@@ -259,205 +202,74 @@ public void prepare() {\n                 // if this is the last legal step then the facing arrow is drawn later\n                 if (!isLastLegalStep) {\n                     // draw arrows showing the facing\n-                    graph.setColor(Color.darkGray);\n-                    currentArrow = stepOffset.createTransformedShape(facingArrow);\n-                    ((Graphics2D) graph).fill(currentArrow);\n-\n-                    graph.setColor(col);\n-                    currentArrow = shadowOffset.createTransformedShape(currentArrow);\n-                    ((Graphics2D) graph).fill(currentArrow);\n+                    drawArrowShape(g2D, facingArrow, col);\n                 }\n \n                 if (bv.game.useVectorMove()) {\n-                    drawMovementCost(step, isLastStep, stepPos, graph, col, false);\n+                    drawMovementCost(step, isLastStep, new Point(0,0), graph, col, false);\n                 }\n                 break;\n             case BOOTLEGGER:\n                 // draw arrows showing them entering the next\n-                graph.setColor(Color.darkGray);\n-                currentArrow = stepOffset.createTransformedShape(moveArrow);\n-                ((Graphics2D) graph).fill(currentArrow);\n-\n-                graph.setColor(col);\n-                currentArrow = shadowOffset.createTransformedShape(currentArrow);\n-                ((Graphics2D) graph).fill(currentArrow);\n-\n-                drawMovementCost(step, isLastStep, stepPos, graph, col, true);\n+                drawArrowShape(g2D, moveArrow, col);\n+                drawMovementCost(step, isLastStep, new Point(0,0), graph, col, true);\n                 break;\n             case LOAD:\n-                // Announce load.\n                 String load = Messages.getString(\"BoardView1.Load\"); //$NON-NLS-1$\n-                if (step.isPastDanger()) {\n-                    load = \"(\" + load + \")\"; //$NON-NLS-1$ //$NON-NLS-2$\n-                }\n-                graph.setFont(new Font(\"SansSerif\", Font.PLAIN, 12)); //$NON-NLS-1$\n-                int loadX = (stepPos.x + 42)\n-                        - (graph.getFontMetrics(graph.getFont()).stringWidth(load) / 2);\n-                graph.setColor(Color.darkGray);\n-                graph.drawString(load, loadX, stepPos.y + 39);\n-                graph.setColor(col);\n-                graph.drawString(load, loadX - 1, stepPos.y + 38);\n+                drawAnnouncement(g2D, load, step, col);\n                 break;\n             case TOW:\n-                // Announce tow.\n                 String tow = Messages.getString(\"BoardView1.Tow\"); //$NON-NLS-1$\n-                if (step.isPastDanger()) {\n-                    tow = \"(\" + tow + \")\"; //$NON-NLS-1$ //$NON-NLS-2$\n-                }\n-                graph.setFont(new Font(\"SansSerif\", Font.PLAIN, 12)); //$NON-NLS-1$\n-                int towX = (stepPos.x + 42)\n-                        - (graph.getFontMetrics(graph.getFont()).stringWidth(tow) / 2);\n-                graph.setColor(Color.darkGray);\n-                graph.drawString(tow, towX, stepPos.y + 39);\n-                graph.setColor(col);\n-                graph.drawString(tow, towX - 1, stepPos.y + 38);\n+                drawAnnouncement(g2D, tow, step, col);\n                 break;\n             case DISCONNECT:\n-                // Announce disconnect.\n                 String disconnect = Messages.getString(\"BoardView1.Disconnect\"); //$NON-NLS-1$\n-                if (step.isPastDanger()) {\n-                    disconnect = \"(\" + disconnect + \")\"; //$NON-NLS-1$ //$NON-NLS-2$\n-                }\n-                graph.setFont(new Font(\"SansSerif\", Font.PLAIN, 12)); //$NON-NLS-1$\n-                int disconnectX = (stepPos.x + 42)\n-                        - (graph.getFontMetrics(graph.getFont()).stringWidth(disconnect) / 2);\n-                int disconnectY = stepPos.y + 38\n-                        + graph.getFontMetrics(graph.getFont()).getHeight();\n-                graph.setColor(Color.darkGray);\n-                graph.drawString(disconnect, disconnectX, disconnectY + 1);\n-                graph.setColor(col);\n-                graph.drawString(disconnect, disconnectX - 1, disconnectY);\n+                drawAnnouncement(g2D, disconnect, step, col);\n                 break;\n             case LAUNCH:\n             case UNDOCK:\n-                // announce launch\n                 String launch = Messages.getString(\"BoardView1.Launch\"); //$NON-NLS-1$\n-                if (step.isPastDanger()) {\n-                    launch = \"(\" + launch + \")\"; //$NON-NLS-1$ //$NON-NLS-2$\n-                }\n-                graph.setFont(new Font(\"SansSerif\", Font.PLAIN, 12)); //$NON-NLS-1$\n-                int launchX = (stepPos.x + 42)\n-                        - (graph.getFontMetrics(graph.getFont()).stringWidth(launch) / 2);\n-                int launchY = stepPos.y + 38\n-                        + graph.getFontMetrics(graph.getFont()).getHeight();\n-                graph.setColor(Color.darkGray);\n-                graph.drawString(launch, launchX, launchY + 1);\n-                graph.setColor(col);\n-                graph.drawString(launch, launchX - 1, launchY);\n+                drawAnnouncement(g2D, launch, step, col);\n                 break;\n             case DROP:\n-                // announce drop\n                 String drop = Messages.getString(\"BoardView1.Drop\"); //$NON-NLS-1$\n-                if (step.isPastDanger()) {\n-                    drop = \"(\" + drop + \")\"; //$NON-NLS-1$ //$NON-NLS-2$\n-                }\n-                graph.setFont(new Font(\"SansSerif\", Font.PLAIN, 12)); //$NON-NLS-1$\n-                int dropX = (stepPos.x + 42)\n-                        - (graph.getFontMetrics(graph.getFont()).stringWidth(drop) / 2);\n-                int dropY = stepPos.y + 38\n-                        + graph.getFontMetrics(graph.getFont()).getHeight();\n-                graph.setColor(Color.darkGray);\n-                graph.drawString(drop, dropX, dropY + 1);\n-                graph.setColor(col);\n-                graph.drawString(drop, dropX - 1, dropY);\n+                drawAnnouncement(g2D, drop, step, col);\n                 break;\n             case RECOVER:\n-                // announce recover\n                 String recover = Messages.getString(\"BoardView1.Recover\"); //$NON-NLS-1$\n                 if (step.isDocking()) {\n                     recover = Messages.getString(\"BoardView1.Dock\"); //$NON-NLS-1$\n                 }\n-                if (step.isPastDanger()) {\n-                    recover = \"(\" + recover + \")\"; //$NON-NLS-1$ //$NON-NLS-2$\n-                }\n-                graph.setFont(new Font(\"SansSerif\", Font.PLAIN, 12)); //$NON-NLS-1$\n-                int recoverX = (stepPos.x + 42)\n-                        - (graph.getFontMetrics(graph.getFont()).stringWidth(recover) / 2);\n-                int recoverY = stepPos.y + 38\n-                        + graph.getFontMetrics(graph.getFont()).getHeight();\n-                graph.setColor(Color.darkGray);\n-                graph.drawString(recover, recoverX, recoverY + 1);\n-                graph.setColor(col);\n-                graph.drawString(recover, recoverX - 1, recoverY);\n+                drawAnnouncement(g2D, recover, step, col);\n                 break;\n             case JOIN:\n-                // announce join\n                 String join = Messages.getString(\"BoardView1.Join\"); //$NON-NLS-1$\n-                if (step.isPastDanger()) {\n-                    join = \"(\" + join + \")\"; //$NON-NLS-1$ //$NON-NLS-2$\n-                }\n-                graph.setFont(new Font(\"SansSerif\", Font.PLAIN, 12)); //$NON-NLS-1$\n-                int joinX = (stepPos.x + 42)\n-                        - (graph.getFontMetrics(graph.getFont()).stringWidth(join) / 2);\n-                int joinY = stepPos.y + 38\n-                        + graph.getFontMetrics(graph.getFont()).getHeight();\n-                graph.setColor(Color.darkGray);\n-                graph.drawString(join, joinX, joinY + 1);\n-                graph.setColor(col);\n-                graph.drawString(join, joinX - 1, joinY);\n+                drawAnnouncement(g2D, join, step, col);\n                 break;\n             case UNLOAD:\n-                // Announce unload.\n                 String unload = Messages.getString(\"BoardView1.Unload\"); //$NON-NLS-1$\n-                if (step.isPastDanger()) {\n-                    unload = \"(\" + unload + \")\"; //$NON-NLS-1$ //$NON-NLS-2$\n-                }\n-                graph.setFont(new Font(\"SansSerif\", Font.PLAIN, 12)); //$NON-NLS-1$\n-                int unloadX = (stepPos.x + 42)\n-                        - (graph.getFontMetrics(graph.getFont()).stringWidth(unload) / 2);\n-                int unloadY = stepPos.y + 38\n-                        + graph.getFontMetrics(graph.getFont()).getHeight();\n-                graph.setColor(Color.darkGray);\n-                graph.drawString(unload, unloadX, unloadY + 1);\n-                graph.setColor(col);\n-                graph.drawString(unload, unloadX - 1, unloadY);\n+                drawAnnouncement(g2D, unload, step, col);\n                 break;\n             case HOVER:\n-                // announce hover\n                 String hover = Messages.getString(\"BoardView1.Hover\"); //$NON-NLS-1$\n-                if (step.isPastDanger()) {\n-                    hover = \"(\" + hover + \")\"; //$NON-NLS-1$ //$NON-NLS-2$\n-                }\n-                graph.setFont(new Font(\"SansSerif\", Font.PLAIN, 12)); //$NON-NLS-1$\n-                int hoverX = (stepPos.x + 42)\n-                        - (graph.getFontMetrics(graph.getFont()).stringWidth(hover) / 2);\n-                int hoverY = stepPos.y + 38\n-                        + graph.getFontMetrics(graph.getFont()).getHeight();\n-                graph.setColor(Color.darkGray);\n-                graph.drawString(hover, hoverX, hoverY + 1);\n-                graph.setColor(col);\n-                graph.drawString(hover, hoverX - 1, hoverY);\n-                drawMovementCost(step, isLastStep, stepPos, graph, col, false);\n+                drawAnnouncement(g2D, hover, step, col);\n                 break;\n             case LAND:\n-                // announce land\n                 String land = Messages.getString(\"BoardView1.Land\"); //$NON-NLS-1$\n-                if (step.isPastDanger()) {\n-                    land = \"(\" + land + \")\"; //$NON-NLS-1$ //$NON-NLS-2$\n-                }\n-                graph.setFont(new Font(\"SansSerif\", Font.PLAIN, 12)); //$NON-NLS-1$\n-                int landX = (stepPos.x + 42)\n-                        - (graph.getFontMetrics(graph.getFont()).stringWidth(land) / 2);\n-                int landY = stepPos.y + 38\n-                        + graph.getFontMetrics(graph.getFont()).getHeight();\n-                graph.setColor(Color.darkGray);\n-                graph.drawString(land, landX, landY + 1);\n-                graph.setColor(col);\n-                graph.drawString(land, landX - 1, landY);\n+                drawAnnouncement(g2D, land, step, col);\n                 break;\n             case CONVERT_MODE:\n-                int modePos = stepPos.y + 38;\n+                int modePos = 38;\n                 if (step.getMp() > 0) {\n                     // draw movement cost\n-                    drawMovementCost(step, isLastStep, stepPos, graph, col, true);\n+                    drawMovementCost(step, isLastStep, new Point(0,0), graph, col, true);", "originalCommit": "76e22df8f76f2f9edcbd03c18d7aae3a730827b0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0MzU2MA==", "url": "https://github.com/MegaMek/megamek/pull/2002#discussion_r440243560", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                drawMovementCost(step, isLastStep, new Point(0,0), graph, col, false);\n          \n          \n            \n                                drawMovementCost(step, isLastStep, new Point(0, 0), graph, col, false);", "author": "Windchild292", "createdAt": "2020-06-15T15:05:28Z", "path": "megamek/src/megamek/client/ui/swing/boardview/StepSprite.java", "diffHunk": "@@ -259,205 +202,74 @@ public void prepare() {\n                 // if this is the last legal step then the facing arrow is drawn later\n                 if (!isLastLegalStep) {\n                     // draw arrows showing the facing\n-                    graph.setColor(Color.darkGray);\n-                    currentArrow = stepOffset.createTransformedShape(facingArrow);\n-                    ((Graphics2D) graph).fill(currentArrow);\n-\n-                    graph.setColor(col);\n-                    currentArrow = shadowOffset.createTransformedShape(currentArrow);\n-                    ((Graphics2D) graph).fill(currentArrow);\n+                    drawArrowShape(g2D, facingArrow, col);\n                 }\n \n                 if (bv.game.useVectorMove()) {\n-                    drawMovementCost(step, isLastStep, stepPos, graph, col, false);\n+                    drawMovementCost(step, isLastStep, new Point(0,0), graph, col, false);", "originalCommit": "76e22df8f76f2f9edcbd03c18d7aae3a730827b0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0MzgxOA==", "url": "https://github.com/MegaMek/megamek/pull/2002#discussion_r440243818", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            drawMovementCost(step, isLastStep, new Point(0,0), graph, col, true);\n          \n          \n            \n                            drawMovementCost(step, isLastStep, new Point(0, 0), graph, col, true);", "author": "Windchild292", "createdAt": "2020-06-15T15:05:51Z", "path": "megamek/src/megamek/client/ui/swing/boardview/StepSprite.java", "diffHunk": "@@ -157,18 +149,10 @@ public void prepare() {\n             case ACC:\n             case ACCN:\n             case LOOP:\n-                // draw arrows showing them entering the next\n-                graph.setColor(Color.darkGray);\n-                currentArrow = stepOffset.createTransformedShape(moveArrow);\n-                ((Graphics2D) graph).fill(currentArrow);\n-\n-                graph.setColor(col);\n-                currentArrow = shadowOffset.createTransformedShape(currentArrow);\n-                ((Graphics2D) graph).fill(currentArrow);\n-\n-                // draw movement cost\n-                drawMovementCost(step, isLastStep, stepPos, graph, col, true);\n-                drawRemainingVelocity(step, stepPos, graph, true);\n+                // forward movement arrow\n+                drawArrowShape(g2D, moveArrow, col);\n+                drawMovementCost(step, isLastStep, new Point(0,0), graph, col, true);", "originalCommit": "76e22df8f76f2f9edcbd03c18d7aae3a730827b0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0NDE5Mw==", "url": "https://github.com/MegaMek/megamek/pull/2002#discussion_r440244193", "bodyText": "Why keep this commented out code?", "author": "Windchild292", "createdAt": "2020-06-15T15:06:22Z", "path": "megamek/src/megamek/client/ui/swing/boardview/StepSprite.java", "diffHunk": "@@ -471,66 +283,77 @@ public void prepare() {\n         // draw arrows showing the facing for final step only\n         if (isLastLegalStep) {\n             Shape finalFacingArrow = bv.finalFacingPolys[step.getFacing()];\n-\n-            graph.setColor(Color.darkGray);\n-            currentArrow = stepOffset.createTransformedShape(finalFacingArrow);\n-            ((Graphics2D) graph).fill(currentArrow);\n-\n-            graph.setColor(col);\n-            currentArrow = shadowOffset.createTransformedShape(currentArrow);\n-            ((Graphics2D) graph).fill(currentArrow);\n+            drawArrowShape(g2D, finalFacingArrow, col);\n         }\n \n         if (step.isVTOLBombingStep() || step.isStrafingStep()) {\n             graph.setColor(col);\n-            ((Graphics2D) graph).fill(\n-                    AffineTransform.getTranslateInstance(stepPos.x, stepPos.y)\n-                            .createTransformedShape(\n-                                    HexDrawUtilities.getHexFullBorderArea(3, 0)));\n+//            g2D.fill(AffineTransform.getTranslateInstance(stepPos.x, stepPos.y)\n+//                    .createTransformedShape(HexDrawUtilities.getHexFullBorderArea(3, 0)));", "originalCommit": "76e22df8f76f2f9edcbd03c18d7aae3a730827b0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b74cfb2014ffee89a0bdc9c1e0d46e830d38780e", "url": "https://github.com/MegaMek/megamek/commit/b74cfb2014ffee89a0bdc9c1e0d46e830d38780e", "message": "Apply suggestions from code review\n\nCo-authored-by: Justin Bowen <39067288+Windchild292@users.noreply.github.com>", "committedDate": "2020-06-16T01:14:01Z", "type": "commit"}]}