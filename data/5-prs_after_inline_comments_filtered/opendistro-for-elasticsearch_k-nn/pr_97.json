{"pr_number": 97, "pr_title": "Added index cache information in stats", "pr_createdAt": "2020-04-23T21:38:13Z", "pr_url": "https://github.com/opendistro-for-elasticsearch/k-NN/pull/97", "timeline": [{"oid": "ab9bc173e9bff040f631974e6837f010ced38cef", "url": "https://github.com/opendistro-for-elasticsearch/k-NN/commit/ab9bc173e9bff040f631974e6837f010ced38cef", "message": "added index cache information in stats", "committedDate": "2020-04-23T21:21:24Z", "type": "commit"}, {"oid": "82b5db0a1610b15cacf524c77faa83350a760139", "url": "https://github.com/opendistro-for-elasticsearch/k-NN/commit/82b5db0a1610b15cacf524c77faa83350a760139", "message": "updated readme", "committedDate": "2020-04-23T21:38:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDMyMzQwNA==", "url": "https://github.com/opendistro-for-elasticsearch/k-NN/pull/97#discussion_r414323404", "bodyText": "returns Map of index stats?", "author": "vamshin", "createdAt": "2020-04-24T06:20:16Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/knn/index/KNNIndexCache.java", "diffHunk": "@@ -147,6 +162,35 @@ public CacheStats getStats() {\n         return cache.stats();\n     }\n \n+    /**\n+     * Get the Elasticsearch indices currently loaded into the Cache\n+     *\n+     * @return Set containing all of the Elasticsearch indices in the cache", "originalCommit": "82b5db0a1610b15cacf524c77faa83350a760139", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDMyOTA2MQ==", "url": "https://github.com/opendistro-for-elasticsearch/k-NN/pull/97#discussion_r414329061", "bodyText": "Let us add info log here to help in debugging something like manually evicted all graphs from cache", "author": "vamshin", "createdAt": "2020-04-24T06:33:15Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/knn/index/KNNIndexCache.java", "diffHunk": "@@ -174,6 +230,22 @@ public void setCacheCapacityReached(Boolean value) {\n         cacheCapacityReached.set(value);\n     }\n \n+    /**\n+     * Evict a graph in the cache manually\n+     *\n+     * @param indexFilePath path to segment file. Also, key in cache\n+     */\n+    public void evictGraphFromCache(String indexFilePath) {\n+        cache.invalidate(indexFilePath);\n+    }\n+\n+    /**\n+     * Evict all graphs in the cache manually\n+     */\n+    public void evictAllGraphsFromCache() {\n+        cache.invalidateAll();", "originalCommit": "82b5db0a1610b15cacf524c77faa83350a760139", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDMzMDEyMQ==", "url": "https://github.com/opendistro-for-elasticsearch/k-NN/pull/97#discussion_r414330121", "bodyText": "lets add info log here Manually evicted graph from cache, indexFilePath, indexname", "author": "vamshin", "createdAt": "2020-04-24T06:35:42Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/knn/index/KNNIndexCache.java", "diffHunk": "@@ -174,6 +230,22 @@ public void setCacheCapacityReached(Boolean value) {\n         cacheCapacityReached.set(value);\n     }\n \n+    /**\n+     * Evict a graph in the cache manually\n+     *\n+     * @param indexFilePath path to segment file. Also, key in cache\n+     */\n+    public void evictGraphFromCache(String indexFilePath) {\n+        cache.invalidate(indexFilePath);", "originalCommit": "82b5db0a1610b15cacf524c77faa83350a760139", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDMzMDc1OQ==", "url": "https://github.com/opendistro-for-elasticsearch/k-NN/pull/97#discussion_r414330759", "bodyText": "nit: final String indexName", "author": "vamshin", "createdAt": "2020-04-24T06:37:04Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/knn/index/KNNIndexCache.java", "diffHunk": "@@ -156,6 +200,18 @@ public Long getWeightInKilobytes() {\n         return cache.asMap().values().stream().map(KNNIndexCacheEntry::getKnnIndex).mapToLong(KNNIndex::getIndexSize).sum();\n     }\n \n+    /**\n+     * Returns the current weight of an index in the cache in KiloBytes\n+     *\n+     * @param indexName Name if index to get the weight for\n+     * @return Weight of the index in the cache in kilobytes\n+     */\n+    public Long getWeightInKilobytes(String indexName) {", "originalCommit": "82b5db0a1610b15cacf524c77faa83350a760139", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDMzNTAwOA==", "url": "https://github.com/opendistro-for-elasticsearch/k-NN/pull/97#discussion_r414335008", "bodyText": "statValues.get(indexName).put(GRAPH_COUNT, ((Integer) statValues.get(indexName).getorDefault(GRAPH_COUNT, 0)) + 1)", "author": "vamshin", "createdAt": "2020-04-24T06:46:20Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/knn/index/KNNIndexCache.java", "diffHunk": "@@ -147,6 +162,35 @@ public CacheStats getStats() {\n         return cache.stats();\n     }\n \n+    /**\n+     * Get the Elasticsearch indices currently loaded into the Cache\n+     *\n+     * @return Set containing all of the Elasticsearch indices in the cache\n+     */\n+    public Map<String, Map<String, Object>> getIndicesCacheStats() {\n+        Map<String, Map<String, Object>> statValues = new HashMap<>();\n+        String indexName;\n+        for (Map.Entry<String, KNNIndexCacheEntry> index : cache.asMap().entrySet()) {\n+            indexName = index.getValue().getEsIndexName();\n+            statValues.putIfAbsent(indexName, new HashMap<>());\n+\n+            statValues.get(indexName).putIfAbsent(GRAPH_COUNT, 0);\n+            statValues.get(indexName).put(GRAPH_COUNT, ((Integer) statValues.get(indexName).get(GRAPH_COUNT)) + 1);", "originalCommit": "82b5db0a1610b15cacf524c77faa83350a760139", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDkyNjA0MA==", "url": "https://github.com/opendistro-for-elasticsearch/k-NN/pull/97#discussion_r414926040", "bodyText": "Thanks for enriching the stats. Few other stats which might be helpful as well\n* graph_memory_usage_percentage in terms of total cache capacity at node level\n\n* index_graph_memory_usage_percentage at index level for that node in terms of total cache capacity\n\n* index_graph_loads at index level which counts the number of graph loads for an index in that node. This helps in identifying the hot indices in the cache. We could add a counter variable in the KNNIndexCacheEntry and increment it when ever the entry is accessed.\n\n\nI think the first two make sense. I am not sure on the last one. Isn't the number of graphs per index somewhat analogous to index_graph_loads?", "author": "jmazanec15", "createdAt": "2020-04-25T00:00:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDMzNTAwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTM3MDExMA==", "url": "https://github.com/opendistro-for-elasticsearch/k-NN/pull/97#discussion_r415370110", "bodyText": "Ah right. Third one seem to be already covered. You could ignore the third one.", "author": "vamshin", "createdAt": "2020-04-26T18:25:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDMzNTAwOA=="}], "type": "inlineReview"}, {"oid": "e4584b8333cf134b5c9b105283d3b8b21b5aa327", "url": "https://github.com/opendistro-for-elasticsearch/k-NN/commit/e4584b8333cf134b5c9b105283d3b8b21b5aa327", "message": "Add graph memory usage as a percentage", "committedDate": "2020-04-27T18:02:12Z", "type": "commit"}, {"oid": "58692f48cde5258f147f9441f636e54a890c8749", "url": "https://github.com/opendistro-for-elasticsearch/k-NN/commit/58692f48cde5258f147f9441f636e54a890c8749", "message": "Merge branch 'master' of https://github.com/opendistro-for-elasticsearch/k-NN into index-cache-stats", "committedDate": "2020-04-27T18:03:23Z", "type": "commit"}]}