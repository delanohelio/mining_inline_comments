{"pr_number": 1578, "pr_title": "Add testing for methods within sex enum", "pr_createdAt": "2020-09-18T13:52:59Z", "pr_url": "https://github.com/broadinstitute/picard/pull/1578", "timeline": [{"oid": "09079b0dce7b9da66a9e9c68bd13ae2ac7401a4d", "url": "https://github.com/broadinstitute/picard/commit/09079b0dce7b9da66a9e9c68bd13ae2ac7401a4d", "message": "sextest", "committedDate": "2020-09-18T13:42:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk3MjYzNQ==", "url": "https://github.com/broadinstitute/picard/pull/1578#discussion_r490972635", "bodyText": "I think it would probably be simpler to just take as input the integer and the expected Sex, and the test that Sex.fromCode(i) == sex.  You don't really need the false tests, once you know that Sex.fromCode returns one value, you know it doesn't return any of the other values.", "author": "kachulis", "createdAt": "2020-09-18T14:04:45Z", "path": "src/test/java/picard/pedigree/SexTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package picard.pedigree;\n+\n+import org.testng.Assert;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+import picard.PicardException;\n+\n+import java.util.Arrays;\n+\n+public class SexTest {\n+    @DataProvider(name=\"testSexDataProviderInt\")\n+    public Object[][] testSexDataProviderInt() {\n+        return new Object[][] {\n+                new Object[]{Sex.Male, 1, true},\n+                new Object[]{Sex.Female, 2, true},\n+                new Object[]{Sex.Unknown, 0, true},\n+                new Object[]{Sex.NotReported, 0, false},\n+                new Object[]{Sex.Female, 1, false},\n+                new Object[]{Sex.Unknown, 2, false},\n+                };\n+    }\n+\n+    @DataProvider(name=\"testSexDataProviderStr\")\n+    public Object[][] testSexDataProviderStr() {\n+        return new Object[][] {\n+                new Object[]{Sex.Male, \"M\", true},\n+                new Object[]{Sex.Female, \"Female\", true},\n+                new Object[]{Sex.Unknown, \"Unknown\", true},\n+                new Object[]{Sex.NotReported, \"NotReported\", true},\n+                new Object[]{Sex.Female, \"M\", false},\n+                new Object[]{Sex.Unknown, \"female\", false}\n+        };\n+    }\n+\n+    /**\n+     *Test Methods within Sex enum\n+     */\n+\n+    @Test(dataProvider=\"testSexDataProviderInt\")\n+    public void testFromCode(final Sex sex, final int i, final boolean b){", "originalCommit": "09079b0dce7b9da66a9e9c68bd13ae2ac7401a4d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk3Nzc4Nw==", "url": "https://github.com/broadinstitute/picard/pull/1578#discussion_r490977787", "bodyText": "test out different cases and full/short versions for each value", "author": "kachulis", "createdAt": "2020-09-18T14:12:43Z", "path": "src/test/java/picard/pedigree/SexTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package picard.pedigree;\n+\n+import org.testng.Assert;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+import picard.PicardException;\n+\n+import java.util.Arrays;\n+\n+public class SexTest {\n+    @DataProvider(name=\"testSexDataProviderInt\")\n+    public Object[][] testSexDataProviderInt() {\n+        return new Object[][] {\n+                new Object[]{Sex.Male, 1, true},\n+                new Object[]{Sex.Female, 2, true},\n+                new Object[]{Sex.Unknown, 0, true},\n+                new Object[]{Sex.NotReported, 0, false},\n+                new Object[]{Sex.Female, 1, false},\n+                new Object[]{Sex.Unknown, 2, false},\n+                };\n+    }\n+\n+    @DataProvider(name=\"testSexDataProviderStr\")\n+    public Object[][] testSexDataProviderStr() {\n+        return new Object[][] {\n+                new Object[]{Sex.Male, \"M\", true},", "originalCommit": "09079b0dce7b9da66a9e9c68bd13ae2ac7401a4d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk3ODgyMQ==", "url": "https://github.com/broadinstitute/picard/pull/1578#discussion_r490978821", "bodyText": "same here, don't need the true/false, can just test that the correct enum value is returned", "author": "kachulis", "createdAt": "2020-09-18T14:14:19Z", "path": "src/test/java/picard/pedigree/SexTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package picard.pedigree;\n+\n+import org.testng.Assert;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+import picard.PicardException;\n+\n+import java.util.Arrays;\n+\n+public class SexTest {\n+    @DataProvider(name=\"testSexDataProviderInt\")\n+    public Object[][] testSexDataProviderInt() {\n+        return new Object[][] {\n+                new Object[]{Sex.Male, 1, true},\n+                new Object[]{Sex.Female, 2, true},\n+                new Object[]{Sex.Unknown, 0, true},\n+                new Object[]{Sex.NotReported, 0, false},\n+                new Object[]{Sex.Female, 1, false},\n+                new Object[]{Sex.Unknown, 2, false},\n+                };\n+    }\n+\n+    @DataProvider(name=\"testSexDataProviderStr\")\n+    public Object[][] testSexDataProviderStr() {\n+        return new Object[][] {\n+                new Object[]{Sex.Male, \"M\", true},\n+                new Object[]{Sex.Female, \"Female\", true},\n+                new Object[]{Sex.Unknown, \"Unknown\", true},\n+                new Object[]{Sex.NotReported, \"NotReported\", true},\n+                new Object[]{Sex.Female, \"M\", false},\n+                new Object[]{Sex.Unknown, \"female\", false}\n+        };\n+    }\n+\n+    /**\n+     *Test Methods within Sex enum\n+     */\n+\n+    @Test(dataProvider=\"testSexDataProviderInt\")\n+    public void testFromCode(final Sex sex, final int i, final boolean b){\n+        Assert.assertEquals(sex == Sex.fromCode(i), b);\n+    }\n+\n+    @Test(dataProvider=\"testSexDataProviderStr\")\n+    public void testFromString(final Sex sex, final String s, final boolean b){", "originalCommit": "09079b0dce7b9da66a9e9c68bd13ae2ac7401a4d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk5MDU5NA==", "url": "https://github.com/broadinstitute/picard/pull/1578#discussion_r490990594", "bodyText": "operator new not needed here\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            new Object[]{Sex.Male, 1, true},\n          \n          \n            \n                           {Sex.Male, 1, true},", "author": "pshapiro4broad", "createdAt": "2020-09-18T14:31:09Z", "path": "src/test/java/picard/pedigree/SexTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package picard.pedigree;\n+\n+import org.testng.Assert;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+import picard.PicardException;\n+\n+import java.util.Arrays;\n+\n+public class SexTest {\n+    @DataProvider(name=\"testSexDataProviderInt\")\n+    public Object[][] testSexDataProviderInt() {\n+        return new Object[][] {\n+                new Object[]{Sex.Male, 1, true},", "originalCommit": "09079b0dce7b9da66a9e9c68bd13ae2ac7401a4d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1857bce2525ea6106402055d7059844e39e5dc73", "url": "https://github.com/broadinstitute/picard/commit/1857bce2525ea6106402055d7059844e39e5dc73", "message": "edits", "committedDate": "2020-09-18T17:08:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTEyMTE3Nw==", "url": "https://github.com/broadinstitute/picard/pull/1578#discussion_r491121177", "bodyText": "unnecessary new\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            new Object[]{Sex.Male, 1},\n          \n          \n            \n                            {Sex.Male, 1},", "author": "pshapiro4broad", "createdAt": "2020-09-18T18:27:09Z", "path": "src/test/java/picard/pedigree/SexTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+package picard.pedigree;\n+\n+import org.testng.Assert;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+import picard.PicardException;\n+\n+import java.util.Arrays;\n+\n+public class SexTest {\n+    @DataProvider(name=\"testSexDataProviderInt\")\n+    public Object[][] testSexDataProviderInt() {\n+        return new Object[][] {\n+                new Object[]{Sex.Male, 1},", "originalCommit": "1857bce2525ea6106402055d7059844e39e5dc73", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTEyMTMxMw==", "url": "https://github.com/broadinstitute/picard/pull/1578#discussion_r491121313", "bodyText": "fix whitespace\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            };\n          \n          \n            \n                        };", "author": "pshapiro4broad", "createdAt": "2020-09-18T18:27:24Z", "path": "src/test/java/picard/pedigree/SexTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+package picard.pedigree;\n+\n+import org.testng.Assert;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+import picard.PicardException;\n+\n+import java.util.Arrays;\n+\n+public class SexTest {\n+    @DataProvider(name=\"testSexDataProviderInt\")\n+    public Object[][] testSexDataProviderInt() {\n+        return new Object[][] {\n+                new Object[]{Sex.Male, 1},\n+                new Object[]{Sex.Female, 2},\n+                new Object[]{Sex.Unknown, 0},\n+                };", "originalCommit": "1857bce2525ea6106402055d7059844e39e5dc73", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTEyMTQyMQ==", "url": "https://github.com/broadinstitute/picard/pull/1578#discussion_r491121421", "bodyText": "more whitespace\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testFromCode(final Sex sex, final int i){\n          \n          \n            \n                public void testFromCode(final Sex sex, final int i) {", "author": "pshapiro4broad", "createdAt": "2020-09-18T18:27:39Z", "path": "src/test/java/picard/pedigree/SexTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+package picard.pedigree;\n+\n+import org.testng.Assert;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+import picard.PicardException;\n+\n+import java.util.Arrays;\n+\n+public class SexTest {\n+    @DataProvider(name=\"testSexDataProviderInt\")\n+    public Object[][] testSexDataProviderInt() {\n+        return new Object[][] {\n+                new Object[]{Sex.Male, 1},\n+                new Object[]{Sex.Female, 2},\n+                new Object[]{Sex.Unknown, 0},\n+                };\n+    }\n+\n+    @DataProvider(name=\"testSexDataProviderStr\")\n+    public Object[][] testSexDataProviderStr() {\n+        return new Object[][] {\n+                {Sex.Female, \"F\"},\n+                {Sex.Female, \"f\"},\n+                {Sex.Female, \"Female\"},\n+                {Sex.Female, \"female\"},\n+                {Sex.Male, \"M\"},\n+                {Sex.Male, \"m\"},\n+                {Sex.Male, \"Male\"},\n+                {Sex.Male, \"male\"},\n+                {Sex.Unknown, \"Unknown\"},\n+                {Sex.Unknown, \"U\"},\n+                {Sex.Unknown, \"unknown\"},\n+                {Sex.Unknown, \"u\"},\n+        };\n+    }\n+\n+    /**\n+     *Test Methods within Sex enum\n+     */\n+\n+    @Test(dataProvider=\"testSexDataProviderInt\")\n+    public void testFromCode(final Sex sex, final int i){", "originalCommit": "1857bce2525ea6106402055d7059844e39e5dc73", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTEyMTQ3OA==", "url": "https://github.com/broadinstitute/picard/pull/1578#discussion_r491121478", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testFromString(final Sex sex, final String s){\n          \n          \n            \n                public void testFromString(final Sex sex, final String s) {", "author": "pshapiro4broad", "createdAt": "2020-09-18T18:27:46Z", "path": "src/test/java/picard/pedigree/SexTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+package picard.pedigree;\n+\n+import org.testng.Assert;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+import picard.PicardException;\n+\n+import java.util.Arrays;\n+\n+public class SexTest {\n+    @DataProvider(name=\"testSexDataProviderInt\")\n+    public Object[][] testSexDataProviderInt() {\n+        return new Object[][] {\n+                new Object[]{Sex.Male, 1},\n+                new Object[]{Sex.Female, 2},\n+                new Object[]{Sex.Unknown, 0},\n+                };\n+    }\n+\n+    @DataProvider(name=\"testSexDataProviderStr\")\n+    public Object[][] testSexDataProviderStr() {\n+        return new Object[][] {\n+                {Sex.Female, \"F\"},\n+                {Sex.Female, \"f\"},\n+                {Sex.Female, \"Female\"},\n+                {Sex.Female, \"female\"},\n+                {Sex.Male, \"M\"},\n+                {Sex.Male, \"m\"},\n+                {Sex.Male, \"Male\"},\n+                {Sex.Male, \"male\"},\n+                {Sex.Unknown, \"Unknown\"},\n+                {Sex.Unknown, \"U\"},\n+                {Sex.Unknown, \"unknown\"},\n+                {Sex.Unknown, \"u\"},\n+        };\n+    }\n+\n+    /**\n+     *Test Methods within Sex enum\n+     */\n+\n+    @Test(dataProvider=\"testSexDataProviderInt\")\n+    public void testFromCode(final Sex sex, final int i){\n+        Assert.assertTrue(sex == Sex.fromCode(i));\n+    }\n+\n+    @Test(dataProvider=\"testSexDataProviderStr\")\n+    public void testFromString(final Sex sex, final String s){", "originalCommit": "1857bce2525ea6106402055d7059844e39e5dc73", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTEyMTY1NQ==", "url": "https://github.com/broadinstitute/picard/pull/1578#discussion_r491121655", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testFromStringException(){\n          \n          \n            \n                public void testFromStringException() {\n          \n      \n    \n    \n  \n\nreformatting in an IDE like Intellij would work too", "author": "pshapiro4broad", "createdAt": "2020-09-18T18:28:11Z", "path": "src/test/java/picard/pedigree/SexTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+package picard.pedigree;\n+\n+import org.testng.Assert;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+import picard.PicardException;\n+\n+import java.util.Arrays;\n+\n+public class SexTest {\n+    @DataProvider(name=\"testSexDataProviderInt\")\n+    public Object[][] testSexDataProviderInt() {\n+        return new Object[][] {\n+                new Object[]{Sex.Male, 1},\n+                new Object[]{Sex.Female, 2},\n+                new Object[]{Sex.Unknown, 0},\n+                };\n+    }\n+\n+    @DataProvider(name=\"testSexDataProviderStr\")\n+    public Object[][] testSexDataProviderStr() {\n+        return new Object[][] {\n+                {Sex.Female, \"F\"},\n+                {Sex.Female, \"f\"},\n+                {Sex.Female, \"Female\"},\n+                {Sex.Female, \"female\"},\n+                {Sex.Male, \"M\"},\n+                {Sex.Male, \"m\"},\n+                {Sex.Male, \"Male\"},\n+                {Sex.Male, \"male\"},\n+                {Sex.Unknown, \"Unknown\"},\n+                {Sex.Unknown, \"U\"},\n+                {Sex.Unknown, \"unknown\"},\n+                {Sex.Unknown, \"u\"},\n+        };\n+    }\n+\n+    /**\n+     *Test Methods within Sex enum\n+     */\n+\n+    @Test(dataProvider=\"testSexDataProviderInt\")\n+    public void testFromCode(final Sex sex, final int i){\n+        Assert.assertTrue(sex == Sex.fromCode(i));\n+    }\n+\n+    @Test(dataProvider=\"testSexDataProviderStr\")\n+    public void testFromString(final Sex sex, final String s){\n+        Assert.assertTrue(sex == Sex.fromString(s));\n+    }\n+\n+    @Test(expectedExceptions = PicardException.class)\n+    public void testFromStringException(){", "originalCommit": "1857bce2525ea6106402055d7059844e39e5dc73", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "dde797a49b61767883e41c1fde2e9b90b819c877", "url": "https://github.com/broadinstitute/picard/commit/dde797a49b61767883e41c1fde2e9b90b819c877", "message": "reformat", "committedDate": "2020-09-18T19:49:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE2MDQwOQ==", "url": "https://github.com/broadinstitute/picard/pull/1578#discussion_r491160409", "bodyText": "still need to remove the new Object[] here.", "author": "kachulis", "createdAt": "2020-09-18T19:54:31Z", "path": "src/test/java/picard/pedigree/SexTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+package picard.pedigree;\n+\n+import org.testng.Assert;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+import picard.PicardException;\n+\n+import java.util.Arrays;\n+\n+public class SexTest {\n+    @DataProvider(name = \"testSexDataProviderInt\")\n+    public Object[][] testSexDataProviderInt() {\n+        return new Object[][]{\n+                new Object[]{Sex.Male, 1},\n+                new Object[]{Sex.Female, 2},", "originalCommit": "dde797a49b61767883e41c1fde2e9b90b819c877", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c6e226acd657bfa44825e0b44123dd6d3f1c4cad", "url": "https://github.com/broadinstitute/picard/commit/c6e226acd657bfa44825e0b44123dd6d3f1c4cad", "message": "remove-new-object", "committedDate": "2020-09-18T20:09:37Z", "type": "commit"}]}