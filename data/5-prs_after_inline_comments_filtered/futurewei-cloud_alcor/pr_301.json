{"pr_number": 301, "pr_title": "[Microservice] Port Manager 2.0 Implementation", "pr_createdAt": "2020-07-17T08:06:21Z", "pr_url": "https://github.com/futurewei-cloud/alcor/pull/301", "timeline": [{"oid": "451e09acad3250629e679cbc2142f03724068bc3", "url": "https://github.com/futurewei-cloud/alcor/commit/451e09acad3250629e679cbc2142f03724068bc3", "message": "Fix compile error", "committedDate": "2020-07-17T08:35:29Z", "type": "forcePushed"}, {"oid": "d5788815c4f6113e60c8f75c152dd5d685eaac35", "url": "https://github.com/futurewei-cloud/alcor/commit/d5788815c4f6113e60c8f75c152dd5d685eaac35", "message": "Fix compile error", "committedDate": "2020-07-17T10:08:06Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM5MjM3NQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/301#discussion_r456392375", "bodyText": "Cool. Like the change.\nPR #297 also sets this flag as true for existing microservices, but we also need to change it fundamentally in DB module.", "author": "xieus", "createdAt": "2020-07-17T11:48:35Z", "path": "lib/src/main/java/com/futurewei/alcor/common/db/ignite/IgniteConfiguration.java", "diffHunk": "@@ -70,7 +70,7 @@\n     @Value(\"${ignite.trust-store-password:#{null}}\")\n     private String trustStorePassword;\n \n-    @Value(\"${ignite.thin.client.enable: #{false}}\")\n+    @Value(\"${ignite.thin.client.enable: #{true}}\")", "originalCommit": "d5788815c4f6113e60c8f75c152dd5d685eaac35", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM5NTM2MQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/301#discussion_r456395361", "bodyText": "Will this give us some false positive information that the duration is zero? :-)", "author": "xieus", "createdAt": "2020-07-17T11:55:18Z", "path": "lib/src/main/java/com/futurewei/alcor/common/stats/DurationCalculator.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+package com.futurewei.alcor.common.stats;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+public class DurationCalculator {\n+    private static final Logger LOG = LoggerFactory.getLogger(DurationCalculator.class);\n+\n+    private static Map<Long, Long> startTimes = new HashMap<>();\n+\n+    public static void begin() {\n+        long id = Thread.currentThread().getId();\n+        startTimes.put(id, System.nanoTime());\n+    }\n+\n+    public static void end(String description) {\n+        long id = Thread.currentThread().getId();\n+        long endTime = System.nanoTime();\n+        long startTime;\n+        if (startTimes.containsKey(id)) {\n+            startTime = startTimes.get(id);\n+        } else {\n+            startTime = endTime;", "originalCommit": "d5788815c4f6113e60c8f75c152dd5d685eaac35", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM5NjE1OA==", "url": "https://github.com/futurewei-cloud/alcor/pull/301#discussion_r456396158", "bodyText": "Interesting!", "author": "xieus", "createdAt": "2020-07-17T11:57:23Z", "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/service/implement/PortServiceImpl.java", "diffHunk": "@@ -37,9 +38,10 @@\n import java.util.*;\n import java.util.concurrent.CompletableFuture;\n \n-@Service\n-@ComponentScan(value = \"com.futurewei.alcor.common.utils\")\n-@ComponentScan(value = \"com.futurewei.alcor.web.restclient\")\n+//@Service\n+//@ComponentScan(value = \"com.futurewei.alcor.common.utils\")\n+//@ComponentScan(value = \"com.futurewei.alcor.web.restclient\")\n+@Deprecated", "originalCommit": "d5788815c4f6113e60c8f75c152dd5d685eaac35", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM5NjMzNg==", "url": "https://github.com/futurewei-cloud/alcor/pull/301#discussion_r456396336", "bodyText": "Which guy replace this? Let me keep looking.", "author": "xieus", "createdAt": "2020-07-17T11:57:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM5NjE1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM5NzQ4Mw==", "url": "https://github.com/futurewei-cloud/alcor/pull/301#discussion_r456397483", "bodyText": "This is a very good annotation. Consider to apply it to all other services as well \ud83d\udc4d", "author": "xieus", "createdAt": "2020-07-17T12:00:17Z", "path": "services/private_ip_manager/src/main/java/com/futurewei/alcor/privateipmanager/controller/IpAddrController.java", "diffHunk": "@@ -82,6 +85,7 @@ private int checkIpVersion(String ipAddress) throws Exception {\n     @PostMapping(\"/ips\")\n     @ResponseBody\n     @ResponseStatus(HttpStatus.CREATED)\n+    @DurationStatistics", "originalCommit": "d5788815c4f6113e60c8f75c152dd5d685eaac35", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "13d5c8d261adb763ee8647118a7cb05e94e568a1", "url": "https://github.com/futurewei-cloud/alcor/commit/13d5c8d261adb763ee8647118a7cb05e94e568a1", "message": "Fix compile error", "committedDate": "2020-07-20T01:48:49Z", "type": "forcePushed"}, {"oid": "f75247816e55e0b63dc5a17c3ff63ed700abfefa", "url": "https://github.com/futurewei-cloud/alcor/commit/f75247816e55e0b63dc5a17c3ff63ed700abfefa", "message": "Fix compile error", "committedDate": "2020-07-20T01:55:48Z", "type": "forcePushed"}, {"oid": "439252a00868f8a417be17e73a9e67a1e2ca6616", "url": "https://github.com/futurewei-cloud/alcor/commit/439252a00868f8a417be17e73a9e67a1e2ca6616", "message": "private-ip-manager performance optimization", "committedDate": "2020-07-20T10:48:45Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc1MzcxMA==", "url": "https://github.com/futurewei-cloud/alcor/pull/301#discussion_r457753710", "bodyText": "Can we explicit set it to false?", "author": "xieus", "createdAt": "2020-07-20T23:47:47Z", "path": "lib/src/main/java/com/futurewei/alcor/common/db/ignite/MockIgniteServer.java", "diffHunk": "@@ -55,6 +57,11 @@ public static void init() {\n                 tcpDiscoverySpi.setLocalPortRange(LISTEN_PORT_RANGE);\n                 cfg.setDiscoverySpi(tcpDiscoverySpi);\n //                cfg.setPeerClassLoadingEnabled(true);", "originalCommit": "439252a00868f8a417be17e73a9e67a1e2ca6616", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ4MjA3MA==", "url": "https://github.com/futurewei-cloud/alcor/pull/301#discussion_r458482070", "bodyText": "For testing, since ignite server is started locally, we do not need to enable this configuration.", "author": "chenpiaoping", "createdAt": "2020-07-22T01:34:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc1MzcxMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc2MTAwMQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/301#discussion_r457761001", "bodyText": "Can we use Alcor logger or you need something special from slf4j?", "author": "xieus", "createdAt": "2020-07-21T00:12:26Z", "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/processor/AbstractProcessor.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+package com.futurewei.alcor.portmanager.processor;\n+\n+import org.slf4j.Logger;", "originalCommit": "439252a00868f8a417be17e73a9e67a1e2ca6616", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ4Mzc0MA==", "url": "https://github.com/futurewei-cloud/alcor/pull/301#discussion_r458483740", "bodyText": "I thought alcor would use slf4j directly.", "author": "chenpiaoping", "createdAt": "2020-07-22T01:40:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc2MTAwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc2MzQwOA==", "url": "https://github.com/futurewei-cloud/alcor/pull/301#discussion_r457763408", "bodyText": "Does the @DaTa annotation not work here?", "author": "xieus", "createdAt": "2020-07-21T00:20:51Z", "path": "web/src/main/java/com/futurewei/alcor/web/entity/subnet/SubnetEntity.java", "diffHunk": "@@ -208,4 +208,284 @@ public SubnetEntity(SubnetEntity subnetEntity) {\n                 subnetEntity.getHostRoutes(), subnetEntity.getPrefixlen(), subnetEntity.useDefaultSubnetpool, subnetEntity.getServiceTypes(), subnetEntity.getCreated_at(),\n                 subnetEntity.getUpdated_at());\n     }\n+\n+    public String getVpcId() {\n+        return vpcId;", "originalCommit": "439252a00868f8a417be17e73a9e67a1e2ca6616", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ4MzI4Ng==", "url": "https://github.com/futurewei-cloud/alcor/pull/301#discussion_r458483286", "bodyText": "As i know, @ Data is no longer recommended because it generates code during compilation and has Poor security and maintainability", "author": "chenpiaoping", "createdAt": "2020-07-22T01:38:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc2MzQwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU1OTM3MA==", "url": "https://github.com/futurewei-cloud/alcor/pull/301#discussion_r458559370", "bodyText": "Okay thanks, let us remind the team of this annotation limit and start cleaning up the annotation when we see that.", "author": "xieus", "createdAt": "2020-07-22T06:18:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc2MzQwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc2NDk3MQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/301#discussion_r457764971", "bodyText": "@chenpiaoping Can you test the SG APIs from API GW to see if anything is expected? Recently there is a minor change of List SG API introduced by PR ##304. The List SG contract was not fully compatible wit Neutron. Can you check others as well.\nThanks.", "author": "xieus", "createdAt": "2020-07-21T00:26:18Z", "path": "services/security_group_manager/src/main/java/com/futurewei/alcor/securitygroup/controller/SecurityGroupRuleController.java", "diffHunk": "@@ -15,24 +15,28 @@\n */\n package com.futurewei.alcor.securitygroup.controller;\n \n+import com.futurewei.alcor.common.stats.DurationStatistics;\n import com.futurewei.alcor.securitygroup.service.SecurityGroupRuleService;\n import com.futurewei.alcor.web.entity.securitygroup.SecurityGroupRule;\n import com.futurewei.alcor.web.entity.securitygroup.SecurityGroupRuleBulkJson;\n import com.futurewei.alcor.web.entity.securitygroup.SecurityGroupRuleJson;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.annotation.ComponentScan;\n import org.springframework.http.HttpStatus;\n import org.springframework.web.bind.annotation.*;\n import java.util.List;\n import static com.futurewei.alcor.securitygroup.utils.RestParameterValidator.*;\n \n @RestController\n+@ComponentScan(value = \"com.futurewei.alcor.common.stats\")", "originalCommit": "439252a00868f8a417be17e73a9e67a1e2ca6616", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc2NTEzNQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/301#discussion_r457765135", "bodyText": "You can do it a separate/small PR if any change is needed.", "author": "xieus", "createdAt": "2020-07-21T00:26:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc2NDk3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ4NDAwMw==", "url": "https://github.com/futurewei-cloud/alcor/pull/301#discussion_r458484003", "bodyText": "ok, i will do that.", "author": "chenpiaoping", "createdAt": "2020-07-22T01:41:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc2NDk3MQ=="}], "type": "inlineReview"}, {"oid": "89faca6d64234992ff388d8cd1d4572f94016f5d", "url": "https://github.com/futurewei-cloud/alcor/commit/89faca6d64234992ff388d8cd1d4572f94016f5d", "message": "private-ip-manager performance optimization", "committedDate": "2020-07-22T01:48:11Z", "type": "forcePushed"}, {"oid": "9e59445e8c3080c828e6d75f9bb94000215d998a", "url": "https://github.com/futurewei-cloud/alcor/commit/9e59445e8c3080c828e6d75f9bb94000215d998a", "message": "add thin ignite config item", "committedDate": "2020-07-22T08:27:04Z", "type": "forcePushed"}, {"oid": "54882bf3e04f5d82945561c10d80e2b3e4fb0686", "url": "https://github.com/futurewei-cloud/alcor/commit/54882bf3e04f5d82945561c10d80e2b3e4fb0686", "message": "add thin ignite config item", "committedDate": "2020-07-22T08:34:26Z", "type": "forcePushed"}, {"oid": "0b8fb2c5d283342b5c47d66b06a748c1e6f0630f", "url": "https://github.com/futurewei-cloud/alcor/commit/0b8fb2c5d283342b5c47d66b06a748c1e6f0630f", "message": "Rest client supports batch interface", "committedDate": "2020-07-23T09:30:44Z", "type": "forcePushed"}, {"oid": "3f4fd270359f4f6ce3abd0af2cb1714f3cf4d820", "url": "https://github.com/futurewei-cloud/alcor/commit/3f4fd270359f4f6ce3abd0af2cb1714f3cf4d820", "message": "Rest client supports batch interface", "committedDate": "2020-07-23T12:09:12Z", "type": "forcePushed"}, {"oid": "9b8dc67b0156e8f46063b94c4be82e56c6689bd3", "url": "https://github.com/futurewei-cloud/alcor/commit/9b8dc67b0156e8f46063b94c4be82e56c6689bd3", "message": "Rest client supports batch interface", "committedDate": "2020-07-24T01:43:40Z", "type": "forcePushed"}, {"oid": "3197a817214edfd85b59b949bdfea6bdfe5dae0b", "url": "https://github.com/futurewei-cloud/alcor/commit/3197a817214edfd85b59b949bdfea6bdfe5dae0b", "message": "security group support query with parameters", "committedDate": "2020-07-24T04:44:38Z", "type": "forcePushed"}, {"oid": "c66982ef723401725daece88c7379b7315428534", "url": "https://github.com/futurewei-cloud/alcor/commit/c66982ef723401725daece88c7379b7315428534", "message": "Batch port binding security groups are supported", "committedDate": "2020-07-25T08:56:41Z", "type": "forcePushed"}, {"oid": "8d593dcbec9d0beb957815020b7f14dd2b198881", "url": "https://github.com/futurewei-cloud/alcor/commit/8d593dcbec9d0beb957815020b7f14dd2b198881", "message": "Rebase from alcor master", "committedDate": "2020-07-27T02:08:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM2NjI0Mg==", "url": "https://github.com/futurewei-cloud/alcor/pull/301#discussion_r460366242", "bodyText": "extra line.", "author": "xieus", "createdAt": "2020-07-25T05:06:53Z", "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/processor/CallbackFunction.java", "diffHunk": "@@ -0,0 +1,9 @@\n+package com.futurewei.alcor.portmanager.processor;\n+\n+", "originalCommit": "ba6c9ba4bbc267ce46391c31da94822541f6182a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f83279f8884c6c02ec072479f4d141ad4c04fc43", "url": "https://github.com/futurewei-cloud/alcor/commit/f83279f8884c6c02ec072479f4d141ad4c04fc43", "message": "Rebase from alcor master", "committedDate": "2020-07-30T03:44:12Z", "type": "forcePushed"}, {"oid": "a0788ea1840ced34fb3acb70b7d0ce4cbda56227", "url": "https://github.com/futurewei-cloud/alcor/commit/a0788ea1840ced34fb3acb70b7d0ce4cbda56227", "message": "Allocate ip address by subnet id", "committedDate": "2020-08-03T01:55:17Z", "type": "forcePushed"}, {"oid": "103ea6688c839194a76091f2d6e43c357b7dc9e5", "url": "https://github.com/futurewei-cloud/alcor/commit/103ea6688c839194a76091f2d6e43c357b7dc9e5", "message": "Build the correct network configuration when updating port", "committedDate": "2020-08-03T09:11:19Z", "type": "forcePushed"}, {"oid": "c11f91ed078d021b72cd76fdb2b2dcc3452c89a9", "url": "https://github.com/futurewei-cloud/alcor/commit/c11f91ed078d021b72cd76fdb2b2dcc3452c89a9", "message": "Fix the problem of incorrect network configuration", "committedDate": "2020-08-04T06:26:48Z", "type": "forcePushed"}, {"oid": "56836b8f740691248a4a04d41f8d96104c8dee94", "url": "https://github.com/futurewei-cloud/alcor/commit/56836b8f740691248a4a04d41f8d96104c8dee94", "message": "Query node info by name", "committedDate": "2020-08-04T07:22:12Z", "type": "forcePushed"}, {"oid": "e9cb38564ee41aec2f776e19190630cd94072d2d", "url": "https://github.com/futurewei-cloud/alcor/commit/e9cb38564ee41aec2f776e19190630cd94072d2d", "message": "Query node info by name", "committedDate": "2020-08-04T07:27:02Z", "type": "forcePushed"}, {"oid": "9c81f1e185eb2b28c174f68a3915f2105242dddd", "url": "https://github.com/futurewei-cloud/alcor/commit/9c81f1e185eb2b28c174f68a3915f2105242dddd", "message": "Query node info by name", "committedDate": "2020-08-04T08:06:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMzMDUwOQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/301#discussion_r465330509", "bodyText": "\"node_name\" => \"name\"", "author": "xieus", "createdAt": "2020-08-04T21:06:44Z", "path": "web/src/main/java/com/futurewei/alcor/web/restclient/NodeManagerRestClient.java", "diffHunk": "@@ -34,8 +38,23 @@\n \n     @DurationStatistics\n     public NodeInfoJson getNodeInfo(String nodeId) throws Exception {\n-        String url = nodeManagerUrl + \"/\" + nodeId;\n-        return getRequest(url, NodeInfoJson.class);\n+        String queryParameter = buildQueryParameter(\"node_name\", Collections.singletonList(nodeId));", "originalCommit": "9c81f1e185eb2b28c174f68a3915f2105242dddd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMzMDY1Mw==", "url": "https://github.com/futurewei-cloud/alcor/pull/301#discussion_r465330653", "bodyText": "\"node_name\" => \"name\"", "author": "xieus", "createdAt": "2020-08-04T21:06:59Z", "path": "web/src/main/java/com/futurewei/alcor/web/restclient/NodeManagerRestClient.java", "diffHunk": "@@ -34,8 +38,23 @@\n \n     @DurationStatistics\n     public NodeInfoJson getNodeInfo(String nodeId) throws Exception {\n-        String url = nodeManagerUrl + \"/\" + nodeId;\n-        return getRequest(url, NodeInfoJson.class);\n+        String queryParameter = buildQueryParameter(\"node_name\", Collections.singletonList(nodeId));\n+        String url = nodeManagerUrl + \"?\" + queryParameter;\n+        NodesWebJson nodesWebJson = getForObject(url, NodesWebJson.class);\n+        if (nodesWebJson == null ||\n+                nodesWebJson.getNodeInfos() == null ||\n+                nodesWebJson.getNodeInfos().size() != 1) {\n+            return new NodeInfoJson();\n+        }\n+\n+        return new NodeInfoJson(nodesWebJson.getNodeInfos().get(0));\n+    }\n+\n+    @DurationStatistics\n+    public NodesWebJson getNodeInfoBulk(List<String> nodeIds) throws Exception {\n+        String queryParameter = buildQueryParameter(\"node_name\", nodeIds);", "originalCommit": "9c81f1e185eb2b28c174f68a3915f2105242dddd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQyMDQ2MA==", "url": "https://github.com/futurewei-cloud/alcor/pull/301#discussion_r465420460", "bodyText": "But node manager uses node_name:\npublic List getAllNodes(@ApiParam(value = \"node_name\") @RequestParam(required = false) String name,\n@ApiParam(value = \"node_id\") @RequestParam(required = false) String id,\n@ApiParam(value = \"mac_address\") @RequestParam(required = false) String mac_address,\n@ApiParam(value = \"local_Ip\") @RequestParam(required = false) String local_ip) throws ParameterNullOrEmptyException, Exception {\nhttps://github.com/futurewei-cloud/alcor/blob/master/services/node_manager/src/main/java/com/futurewei/alcor/nodemanager/controller/NodeController.java", "author": "chenpiaoping", "createdAt": "2020-08-05T01:33:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMzMDY1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUxNTg2Mw==", "url": "https://github.com/futurewei-cloud/alcor/pull/301#discussion_r465515863", "bodyText": "@chenpiaoping Somehow the query parameters that actually worked in the E2E test are\nname\nid\nmac_address\nlocal_ip\nIs this expected? @Gzure", "author": "xieus", "createdAt": "2020-08-05T07:02:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMzMDY1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUzNDUwNA==", "url": "https://github.com/futurewei-cloud/alcor/pull/301#discussion_r465534504", "bodyText": "Yes. name is ok as a parameter.", "author": "Gzure", "createdAt": "2020-08-05T07:41:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMzMDY1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUyNjY5NQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/301#discussion_r465526695", "bodyText": "@chenpiaoping  Piaoping, our debug session doesn't include the commit 27d5b64 \"Change the name of neighbor cache\" which was just committed right before the meeting. Do you think this would make the difference?\nAlso can you pull from the latest master later today as we want to make sure your private branch has all the master payload? Thanks.", "author": "xieus", "createdAt": "2020-08-05T07:25:21Z", "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/repo/PortRepository.java", "diffHunk": "@@ -243,4 +257,67 @@ public PortNeighbors getPortNeighbors(Object arg) throws CacheException {\n \n         return portNeighbors;\n     }\n+\n+    private String getNeighborCacheName(String suffix) {", "originalCommit": "27d5b642ae0b5e117494d88c91a1d80868fb31e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUyOTI5Mg==", "url": "https://github.com/futurewei-cloud/alcor/pull/301#discussion_r465529292", "bodyText": "This commit will not affect the results of the test. I pulled it from master yesterday.", "author": "chenpiaoping", "createdAt": "2020-08-05T07:30:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUyNjY5NQ=="}], "type": "inlineReview"}, {"oid": "0f917a2dd602eff59409e10b878ce4feda196d07", "url": "https://github.com/futurewei-cloud/alcor/commit/0f917a2dd602eff59409e10b878ce4feda196d07", "message": "Fix issue of Missing Neighbor Info in Cross-Node Scenario", "committedDate": "2020-08-06T04:49:54Z", "type": "forcePushed"}, {"oid": "90198918ea53a162ec96e08d3a4579d36deebb1d", "url": "https://github.com/futurewei-cloud/alcor/commit/90198918ea53a162ec96e08d3a4579d36deebb1d", "message": "Fix issue of Missing Neighbor Info in Cross-Node Scenario", "committedDate": "2020-08-06T06:22:04Z", "type": "forcePushed"}, {"oid": "5d034e94aeb9de09176a7c1fd5f213c1ee0c400a", "url": "https://github.com/futurewei-cloud/alcor/commit/5d034e94aeb9de09176a7c1fd5f213c1ee0c400a", "message": "Fix the problem of missing tunnel id", "committedDate": "2020-08-08T02:22:12Z", "type": "forcePushed"}, {"oid": "a577b17c13f0f7c60f78f719df25d48afe8e26d4", "url": "https://github.com/futurewei-cloud/alcor/commit/a577b17c13f0f7c60f78f719df25d48afe8e26d4", "message": "Refactoring port manager", "committedDate": "2020-08-10T06:59:12Z", "type": "commit"}, {"oid": "69330bf32d4a0350ff23db0e31d5a376eec8dc30", "url": "https://github.com/futurewei-cloud/alcor/commit/69330bf32d4a0350ff23db0e31d5a376eec8dc30", "message": "Refactor: Delete port", "committedDate": "2020-08-10T06:59:18Z", "type": "commit"}, {"oid": "10b7f1c4802d32eb8a7815ad7ff8967eaae58231", "url": "https://github.com/futurewei-cloud/alcor/commit/10b7f1c4802d32eb8a7815ad7ff8967eaae58231", "message": "Refactor: Update port", "committedDate": "2020-08-10T06:59:20Z", "type": "commit"}, {"oid": "56eaf2557e3813dd4def38df34956dd58509f6f9", "url": "https://github.com/futurewei-cloud/alcor/commit/56eaf2557e3813dd4def38df34956dd58509f6f9", "message": "Refactor: Add some logs", "committedDate": "2020-08-10T06:59:22Z", "type": "commit"}, {"oid": "2ce05e80c373787de06dc6c7ec84020c9b52292b", "url": "https://github.com/futurewei-cloud/alcor/commit/2ce05e80c373787de06dc6c7ec84020c9b52292b", "message": "Fix compile error", "committedDate": "2020-08-10T06:59:26Z", "type": "commit"}, {"oid": "d4162ef84cce0d0541c63099ebe468397f776799", "url": "https://github.com/futurewei-cloud/alcor/commit/d4162ef84cce0d0541c63099ebe468397f776799", "message": "private-ip-manager performance optimization", "committedDate": "2020-08-10T06:59:29Z", "type": "commit"}, {"oid": "e1415c9c8e7d325dd4364f9c54892438fc6ad191", "url": "https://github.com/futurewei-cloud/alcor/commit/e1415c9c8e7d325dd4364f9c54892438fc6ad191", "message": "add thin ignite config item", "committedDate": "2020-08-10T06:59:32Z", "type": "commit"}, {"oid": "466166eb51e7a5e0db3ab577a77f49e0202eead5", "url": "https://github.com/futurewei-cloud/alcor/commit/466166eb51e7a5e0db3ab577a77f49e0202eead5", "message": "Rest client supports batch interface", "committedDate": "2020-08-10T06:59:37Z", "type": "commit"}, {"oid": "335bc2500d76d7b6f9cd596779131229afaf6d3e", "url": "https://github.com/futurewei-cloud/alcor/commit/335bc2500d76d7b6f9cd596779131229afaf6d3e", "message": "security group support query with parameters", "committedDate": "2020-08-10T06:59:39Z", "type": "commit"}, {"oid": "12f129c79a4ca9b4062f032b4b156108d8bf49bb", "url": "https://github.com/futurewei-cloud/alcor/commit/12f129c79a4ca9b4062f032b4b156108d8bf49bb", "message": "Close some useless logs", "committedDate": "2020-08-10T06:59:40Z", "type": "commit"}, {"oid": "dfcebaaa4843c9a9899d2ff9f02a36384bcb4c39", "url": "https://github.com/futurewei-cloud/alcor/commit/dfcebaaa4843c9a9899d2ff9f02a36384bcb4c39", "message": "Batch port binding security groups are supported", "committedDate": "2020-08-10T06:59:44Z", "type": "commit"}, {"oid": "e69dabecd6baff911c55b48c1cd8af9be3f05bc6", "url": "https://github.com/futurewei-cloud/alcor/commit/e69dabecd6baff911c55b48c1cd8af9be3f05bc6", "message": "Rebase from alcor master", "committedDate": "2020-08-10T06:59:47Z", "type": "commit"}, {"oid": "5da04e304b1dbe28821d0096fbc04418a79bd910", "url": "https://github.com/futurewei-cloud/alcor/commit/5da04e304b1dbe28821d0096fbc04418a79bd910", "message": "Rebase from master", "committedDate": "2020-08-10T06:59:49Z", "type": "commit"}, {"oid": "b08026f777a066f09101eabf0c5f3de467e92026", "url": "https://github.com/futurewei-cloud/alcor/commit/b08026f777a066f09101eabf0c5f3de467e92026", "message": "Allocate ip address by subnet id", "committedDate": "2020-08-10T06:59:52Z", "type": "commit"}, {"oid": "62bc67659446b7762758edb41023beaa98e2d10b", "url": "https://github.com/futurewei-cloud/alcor/commit/62bc67659446b7762758edb41023beaa98e2d10b", "message": "Rebase from master and fix some UTs error", "committedDate": "2020-08-10T06:59:54Z", "type": "commit"}, {"oid": "1e3a92da48aa79d7670b9f04baca3c98b2245b6d", "url": "https://github.com/futurewei-cloud/alcor/commit/1e3a92da48aa79d7670b9f04baca3c98b2245b6d", "message": "Build the correct network configuration when updating port", "committedDate": "2020-08-10T06:59:56Z", "type": "commit"}, {"oid": "ca4f7537bb39c8759e45208d8b814681f6876488", "url": "https://github.com/futurewei-cloud/alcor/commit/ca4f7537bb39c8759e45208d8b814681f6876488", "message": "Fix the problem of incorrect network configuration", "committedDate": "2020-08-10T06:59:58Z", "type": "commit"}, {"oid": "e8b70ba6791eca722d5f6a28978239aee42e02f1", "url": "https://github.com/futurewei-cloud/alcor/commit/e8b70ba6791eca722d5f6a28978239aee42e02f1", "message": "Query node info by name", "committedDate": "2020-08-10T07:00:01Z", "type": "commit"}, {"oid": "9bc758d38984a1faee7d879aabda34f7dff35580", "url": "https://github.com/futurewei-cloud/alcor/commit/9bc758d38984a1faee7d879aabda34f7dff35580", "message": "Change the name of neighbor cache", "committedDate": "2020-08-10T07:00:03Z", "type": "commit"}, {"oid": "85b410b736b1ffb4eaa9c694049f06f8411ecf21", "url": "https://github.com/futurewei-cloud/alcor/commit/85b410b736b1ffb4eaa9c694049f06f8411ecf21", "message": "Fix issue of Missing Neighbor Info in Cross-Node Scenario", "committedDate": "2020-08-10T07:00:04Z", "type": "commit"}, {"oid": "6e23bb69cf9c2c80dec36ae0cbacb9835b997279", "url": "https://github.com/futurewei-cloud/alcor/commit/6e23bb69cf9c2c80dec36ae0cbacb9835b997279", "message": "Fix the problem of missing tunnel id", "committedDate": "2020-08-10T07:00:05Z", "type": "commit"}, {"oid": "0827dc546153d7bac41bc2c44eab610715b6d700", "url": "https://github.com/futurewei-cloud/alcor/commit/0827dc546153d7bac41bc2c44eab610715b6d700", "message": "Fix the problem that take a long time to create an ip range", "committedDate": "2020-08-10T07:02:04Z", "type": "commit"}, {"oid": "0827dc546153d7bac41bc2c44eab610715b6d700", "url": "https://github.com/futurewei-cloud/alcor/commit/0827dc546153d7bac41bc2c44eab610715b6d700", "message": "Fix the problem that take a long time to create an ip range", "committedDate": "2020-08-10T07:02:04Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODIzNjA5NA==", "url": "https://github.com/futurewei-cloud/alcor/pull/301#discussion_r468236094", "bodyText": "This createProcess only applies to port with binding host id. How about those without binding host id?", "author": "xieus", "createdAt": "2020-08-10T23:14:43Z", "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/processor/PortProcessor.java", "diffHunk": "@@ -0,0 +1,239 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+package com.futurewei.alcor.portmanager.processor;\n+\n+import com.futurewei.alcor.web.entity.dataplane.InternalPortEntity;\n+import com.futurewei.alcor.web.entity.port.BindingProfile;\n+import com.futurewei.alcor.web.entity.port.PortEntity;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.UUID;\n+\n+public class PortProcessor extends AbstractProcessor {\n+    private void updateName(PortEntity newPortEntity, PortEntity oldPortEntity) {\n+        String newName = newPortEntity.getName();\n+        String oldName = oldPortEntity.getName();\n+\n+        if (newName != null && !newName.equals(oldName)) {\n+            oldPortEntity.setName(newName);\n+        }\n+    }\n+\n+    private void updateAdminState(PortEntity newPortEntity, PortEntity oldPortEntity) {\n+        boolean newAdminStateUp = newPortEntity.isAdminStateUp();\n+        boolean oldAdminStateUp = oldPortEntity.isAdminStateUp();\n+\n+        if (newAdminStateUp != oldAdminStateUp) {\n+            oldPortEntity.setAdminStateUp(newAdminStateUp);\n+        }\n+    }\n+\n+    private void updateBindingHostId(PortEntity newPortEntity, PortEntity oldPortEntity) {\n+        String newBindingHostId = newPortEntity.getBindingHostId();\n+        String oldBindingHostId = oldPortEntity.getBindingHostId();\n+\n+        if (newBindingHostId != null && !newBindingHostId.equals(oldBindingHostId)) {\n+            oldPortEntity.setBindingHostId(newBindingHostId);\n+        }\n+    }\n+\n+    private void updateBindingProfile(PortEntity newPortEntity, PortEntity oldPortEntity) {\n+        BindingProfile newBindingProfile = newPortEntity.getBindingProfile();\n+        BindingProfile oldBindingProfile = oldPortEntity.getBindingProfile();\n+\n+        if (newBindingProfile != null && !newBindingProfile.equals(oldBindingProfile)) {\n+            oldPortEntity.setBindingProfile(newBindingProfile);\n+        }\n+    }\n+\n+    private void updateBindingVnicType(PortEntity newPortEntity, PortEntity oldPortEntity) {\n+        String newBindingVnicType = newPortEntity.getBindingVnicType();\n+        String oldBindingVnicType = oldPortEntity.getBindingVnicType();\n+\n+        if (newBindingVnicType != null && !newBindingVnicType.equals(oldBindingVnicType)) {\n+            oldPortEntity.setBindingVnicType(newBindingVnicType);\n+        }\n+    }\n+\n+    private void updateDescription(PortEntity newPortEntity, PortEntity oldPortEntity) {\n+        String newDescription = newPortEntity.getDescription();\n+        String oldDescription = oldPortEntity.getDescription();\n+\n+        if (newDescription != null && !newDescription.equals(oldDescription)) {\n+            oldPortEntity.setDescription(newDescription);\n+        }\n+    }\n+\n+    private void updateDeviceId(PortEntity newPortEntity, PortEntity oldPortEntity) {\n+        String newDeviceId = newPortEntity.getDeviceId();\n+        String oldDeviceId = oldPortEntity.getDeviceId();\n+\n+        if (newDeviceId != null && !newDeviceId.equals(oldDeviceId)) {\n+            oldPortEntity.setDeviceId(newDeviceId);\n+        }\n+    }\n+\n+    private void updateDeviceOwner(PortEntity newPortEntity, PortEntity oldPortEntity) {\n+        String newDeviceOwner = newPortEntity.getDeviceOwner();\n+        String oldDeviceOwner = oldPortEntity.getDeviceOwner();\n+\n+        if (newDeviceOwner != null && !newDeviceOwner.equals(oldDeviceOwner)) {\n+            oldPortEntity.setDeviceOwner(newDeviceOwner);\n+        }\n+    }\n+\n+    private void updateDnsDomain(PortEntity newPortEntity, PortEntity oldPortEntity) {\n+        String newDnsDomain = newPortEntity.getDnsDomain();\n+        String oldDnsDomain = oldPortEntity.getDnsDomain();\n+\n+        if (newDnsDomain != null && !newDnsDomain.equals(oldDnsDomain)) {\n+            oldPortEntity.setDnsDomain(newDnsDomain);\n+        }\n+    }\n+\n+    private void updateDnsName(PortEntity newPortEntity, PortEntity oldPortEntity) {\n+        String newDnsName = newPortEntity.getDnsName();\n+        String oldDnsName = oldPortEntity.getDnsName();\n+\n+        if (newDnsName != null && !newDnsName.equals(oldDnsName)) {\n+            oldPortEntity.setDnsName(newDnsName);\n+        }\n+    }\n+\n+    private void updateExtraDhcpOpts(PortEntity newPortEntity, PortEntity oldPortEntity) {\n+        List<PortEntity.ExtraDhcpOpt> newExtraDhcpOpts = newPortEntity.getExtraDhcpOpts();\n+        List<PortEntity.ExtraDhcpOpt> oldExtraDhcpOpts = oldPortEntity.getExtraDhcpOpts();\n+\n+        if (newExtraDhcpOpts != null && !newExtraDhcpOpts.equals(oldExtraDhcpOpts)) {\n+            oldPortEntity.setExtraDhcpOpts(newExtraDhcpOpts);\n+        }\n+    }\n+\n+    private void updateAllowedAddressPairs(PortEntity newPortEntity, PortEntity oldPortEntity) {\n+        List<PortEntity.AllowAddressPair> newAllowedAddressPairs = newPortEntity.getAllowedAddressPairs();\n+        List<PortEntity.AllowAddressPair> oldAllowedAddressPairs = oldPortEntity.getAllowedAddressPairs();\n+\n+        if (newAllowedAddressPairs != null && !newAllowedAddressPairs.equals(oldAllowedAddressPairs)) {\n+            oldPortEntity.setAllowedAddressPairs(newAllowedAddressPairs);\n+        }\n+    }\n+\n+    private void updatePortSecurityEnabled(PortEntity newPortEntity, PortEntity oldPortEntity) {\n+        boolean newPortSecurityEnabled = newPortEntity.isPortSecurityEnabled();\n+        boolean oldPortSecurityEnabled = oldPortEntity.isPortSecurityEnabled();\n+\n+        if (newPortSecurityEnabled != oldPortSecurityEnabled) {\n+            oldPortEntity.setPortSecurityEnabled(newPortSecurityEnabled);\n+        }\n+    }\n+\n+    private void updateQosPolicyId(PortEntity newPortEntity, PortEntity oldPortEntity) {\n+        String newQosPolicyId = newPortEntity.getQosPolicyId();\n+        String oldQosPolicyId = oldPortEntity.getQosPolicyId();\n+\n+        if (newQosPolicyId != null && !newQosPolicyId.equals(oldQosPolicyId)) {\n+            oldPortEntity.setQosPolicyId(newQosPolicyId);\n+        }\n+    }\n+\n+\n+    private void updateMacLearningEnabled(PortEntity newPortEntity, PortEntity oldPortEntity) {\n+        boolean newMacLearningEnabled = newPortEntity.isMacLearningEnabled();\n+        boolean oldMacLearningEnabled = oldPortEntity.isMacLearningEnabled();\n+\n+        if (newMacLearningEnabled != oldMacLearningEnabled) {\n+            oldPortEntity.setMacLearningEnabled(newMacLearningEnabled);\n+        }\n+    }\n+\n+    private InternalPortEntity buildInternalPortEntity(PortEntity portEntity) {\n+        InternalPortEntity internalPortEntity =\n+                new InternalPortEntity(portEntity, null, null, null);\n+        NetworkConfig.ExtendPortEntity extendPortEntity =\n+                new NetworkConfig.ExtendPortEntity(internalPortEntity, portEntity.getBindingHostId());\n+\n+        return extendPortEntity;\n+    }\n+\n+    private void buildInternalPortEntities(PortContext context, List<PortEntity> portEntities) {\n+        List<InternalPortEntity> internalPortEntities = new ArrayList<>();\n+\n+        for (PortEntity portEntity: portEntities) {\n+            if (portEntity.getBindingHostId() != null) {\n+                internalPortEntities.add(buildInternalPortEntity(portEntity));\n+            }\n+        }\n+\n+        context.getNetworkConfig().setPortEntities(internalPortEntities);\n+    }\n+\n+    @Override\n+    void createProcess(PortContext context) {", "originalCommit": "0827dc546153d7bac41bc2c44eab610715b6d700", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODIzODU1OQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/301#discussion_r468238559", "bodyText": "Can you give some comments to ProcessManager, AbstractProcess, PortProcess, and other types of processes etc.?", "author": "xieus", "createdAt": "2020-08-10T23:22:26Z", "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/processor/ProcessorManager.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+package com.futurewei.alcor.portmanager.processor;\n+\n+import com.futurewei.alcor.portmanager.util.ReflectionUtil;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+import javax.annotation.PostConstruct;\n+import java.util.*;\n+\n+@Component\n+public class ProcessorManager {", "originalCommit": "0827dc546153d7bac41bc2c44eab610715b6d700", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI0MDk5NA==", "url": "https://github.com/futurewei-cloud/alcor/pull/301#discussion_r468240994", "bodyText": "Please make some comments to RequestManager, and some other important requests as well.", "author": "xieus", "createdAt": "2020-08-10T23:30:24Z", "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/request/RequestManager.java", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+package com.futurewei.alcor.portmanager.request;\n+\n+import com.futurewei.alcor.common.executor.AsyncExecutor;\n+import com.futurewei.alcor.portmanager.processor.CallbackFunction;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.ArrayList;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.CompletionException;\n+\n+public class RequestManager {", "originalCommit": "0827dc546153d7bac41bc2c44eab610715b6d700", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}