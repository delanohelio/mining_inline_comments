{"pr_number": 2012, "pr_title": "1866: Implementing New Day MRMS Option", "pr_createdAt": "2020-09-16T17:50:55Z", "pr_url": "https://github.com/MegaMek/mekhq/pull/2012", "timeline": [{"oid": "026e5e639f0ee19571a1dedbcfe02783b058b7f0", "url": "https://github.com/MegaMek/mekhq/commit/026e5e639f0ee19571a1dedbcfe02783b058b7f0", "message": "Code cleanup and light refactoring for MRMS", "committedDate": "2020-09-11T22:07:13Z", "type": "commit"}, {"oid": "425388660412778a0c785421a5f2b2e9232a756b", "url": "https://github.com/MegaMek/mekhq/commit/425388660412778a0c785421a5f2b2e9232a756b", "message": "Merge remote-tracking branch 'upstream/master' into dev_Windchild_1866", "committedDate": "2020-09-16T17:20:19Z", "type": "commit"}, {"oid": "10f8544933bf742ef3411a5dc8c645a6b206abb4", "url": "https://github.com/MegaMek/mekhq/commit/10f8544933bf742ef3411a5dc8c645a6b206abb4", "message": "Reworking MassRepairService to rely on Campaign instead of CampaignGUI", "committedDate": "2020-09-16T17:23:03Z", "type": "commit"}, {"oid": "528025af9fa782ff19c4ee02408c15e3b5756ced", "url": "https://github.com/MegaMek/mekhq/commit/528025af9fa782ff19c4ee02408c15e3b5756ced", "message": "Simplifying Unit::isAvailable", "committedDate": "2020-09-16T17:28:28Z", "type": "commit"}, {"oid": "ee97584bc8e78efb19c06cbfb3c40362633bbd4f", "url": "https://github.com/MegaMek/mekhq/commit/ee97584bc8e78efb19c06cbfb3c40362633bbd4f", "message": "Removing duplicated checks for whether a unit is valid or not", "committedDate": "2020-09-16T17:29:43Z", "type": "commit"}, {"oid": "e60a2714f5c9a11f11a57fd3ff27fdb8648c04cc", "url": "https://github.com/MegaMek/mekhq/commit/e60a2714f5c9a11f11a57fd3ff27fdb8648c04cc", "message": "Implementing MRMS option on new day", "committedDate": "2020-09-16T17:45:53Z", "type": "commit"}, {"oid": "909fc06f1bed5d896b80b82b99c2a8c91123bb7b", "url": "https://github.com/MegaMek/mekhq/commit/909fc06f1bed5d896b80b82b99c2a8c91123bb7b", "message": "Fixing merge conflicts", "committedDate": "2020-09-17T05:21:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY2Mjg1Nw==", "url": "https://github.com/MegaMek/mekhq/pull/2012#discussion_r490662857", "bodyText": "Isn't this going to throw an exception of getMassRepairOptions returns null?", "author": "NickAragua", "createdAt": "2020-09-18T02:22:01Z", "path": "MekHQ/src/mekhq/gui/dialog/MassRepairSalvageDialog.java", "diffHunk": "@@ -634,628 +612,577 @@ public void actionPerformed(ActionEvent e) {\n                         \"All pod-mounted equipment will be replaced or salvaged regardless of other categories selected\",\n                         \"massRepairItemPod\", pnlItems, rowIdx++));\n \n-\t\treturn pnlOptions;\n-\t}\n-\n-\tprivate MassRepairOptionControl createMassRepairOptionControls(int type, String text, String tooltipText,\n-\t\t\tString activeBoxName, JPanel pnlItems, int rowIdx) {\n-\t\tMassRepairOption mro = null;\n-\n-\t\tList<MassRepairOption> mroList = campaignOptions.getMassRepairOptions();\n-\n-\t\tif (null != mroList) {\n-\t\t\tfor (int i = 0; i < mroList.size(); i++) {\n-\t\t\t\tif (mroList.get(i).getType() == type) {\n-\t\t\t\t\tmro = mroList.get(i);\n-\t\t\t\t\tbreak;\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\n-\t\tif (null == mro) {\n-\t\t\tmro = new MassRepairOption(type);\n-\t\t}\n-\n-\t\tint columnIdx = 0;\n-\n-\t\tMassRepairOptionControl mroc = new MassRepairOptionControl();\n-\t\tmroc.activeBox = createMassRepairOptionItemBox(text, tooltipText, activeBoxName, mro.isActive(), pnlItems,\n-\t\t\t\trowIdx, columnIdx++);\n-\t\tmroc.minSkillCBox = createMassRepairSkillCBox(mro.getSkillMin(), mro.isActive(), pnlItems, rowIdx, columnIdx++);\n-\t\tmroc.maxSkillCBox = createMassRepairSkillCBox(mro.getSkillMax(), mro.isActive(), pnlItems, rowIdx, columnIdx++);\n-\t\tmroc.minBTHSpn = createMassRepairSkillBTHSpinner(mro.getBthMin(), mro.isActive(), pnlItems, rowIdx,\n-\t\t\t\tcolumnIdx++);\n-\t\tmroc.maxBTHSpn = createMassRepairSkillBTHSpinner(mro.getBthMax(), mro.isActive(), pnlItems, rowIdx,\n-\t\t\t\tcolumnIdx++);\n-\n-\t\tmroc.activeBox.addActionListener(new java.awt.event.ActionListener() {\n-\t\t\tpublic void actionPerformed(java.awt.event.ActionEvent evt) {\n-\t\t\t\tif (mroc.activeBox.isSelected()) {\n-\t\t\t\t\tmroc.minSkillCBox.setEnabled(true);\n-\t\t\t\t\tmroc.maxSkillCBox.setEnabled(true);\n-\t\t\t\t\tmroc.minBTHSpn.setEnabled(true);\n-\t\t\t\t\tmroc.maxBTHSpn.setEnabled(true);\n-\t\t\t\t} else {\n-\t\t\t\t\tmroc.minSkillCBox.setEnabled(false);\n-\t\t\t\t\tmroc.maxSkillCBox.setEnabled(false);\n-\t\t\t\t\tmroc.minBTHSpn.setEnabled(false);\n-\t\t\t\t\tmroc.maxBTHSpn.setEnabled(false);\n-\t\t\t\t}\n-\t\t\t}\n-\t\t});\n-\n-\t\treturn mroc;\n-\t}\n-\n-\tprivate JSpinner createMassRepairSkillBTHSpinner(int selectedValue, boolean enabled, JPanel pnlItems, int rowIdx,\n-\t\t\tint columnIdx) {\n-\t\tJSpinner skillBTHSpn = new JSpinner(new SpinnerNumberModel(selectedValue, 1, 12, 1));\n-\t\t((JSpinner.DefaultEditor) skillBTHSpn.getEditor()).getTextField().setEditable(false);\n-\t\tskillBTHSpn.setEnabled(enabled);\n-\n-\t\tGridBagConstraints gridBagConstraints = new GridBagConstraints();\n-\t\tgridBagConstraints.gridx = columnIdx;\n-\t\tgridBagConstraints.gridy = rowIdx;\n-\t\tgridBagConstraints.insets = new Insets(0, 5, 0, 5);\n-\t\tgridBagConstraints.fill = java.awt.GridBagConstraints.NONE;\n-\t\tgridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;\n-\n-\t\tpnlItems.add(skillBTHSpn, gridBagConstraints);\n-\n-\t\treturn skillBTHSpn;\n-\t}\n-\n-\tprivate JComboBox<String> createMassRepairSkillCBox(int selectedValue, boolean enabled, JPanel pnlItems, int rowIdx,\n-\t\t\tint columnIdx) {\n-\t\tDefaultComboBoxModel<String> skillModel = new DefaultComboBoxModel<String>();\n-\t\tskillModel.addElement(SkillType.getExperienceLevelName(SkillType.EXP_ULTRA_GREEN));\n-\t\tskillModel.addElement(SkillType.getExperienceLevelName(SkillType.EXP_GREEN));\n-\t\tskillModel.addElement(SkillType.getExperienceLevelName(SkillType.EXP_REGULAR));\n-\t\tskillModel.addElement(SkillType.getExperienceLevelName(SkillType.EXP_VETERAN));\n-\t\tskillModel.addElement(SkillType.getExperienceLevelName(SkillType.EXP_ELITE));\n-\t\tskillModel.setSelectedItem(SkillType.getExperienceLevelName(selectedValue));\n-\t\tJComboBox<String> skillCBox = new JComboBox<String>(skillModel);\n-\t\tskillCBox.setEnabled(enabled);\n-\n-\t\tGridBagConstraints gridBagConstraints = new GridBagConstraints();\n-\t\tgridBagConstraints.gridx = columnIdx;\n-\t\tgridBagConstraints.gridy = rowIdx;\n-\t\tgridBagConstraints.insets = new Insets(0, 5, 0, 5);\n-\t\tgridBagConstraints.fill = java.awt.GridBagConstraints.NONE;\n-\n-\t\tpnlItems.add(skillCBox, gridBagConstraints);\n-\n-\t\treturn skillCBox;\n-\t}\n-\n-\tprivate JCheckBox createMassRepairOptionItemBox(String text, String toolTipText, String name, boolean selected,\n-\t\t\tJPanel pnlItems, int rowIdx, int columnIdx) {\n-\t\tJCheckBox optionItemBox = new JCheckBox();\n-\t\toptionItemBox.setText(text);\n-\t\toptionItemBox.setToolTipText(toolTipText);\n-\t\toptionItemBox.setName(name);\n-\t\toptionItemBox.setSelected(selected);\n-\t\tif (name.equals(\"massRepairItemPod\") && !isModeWarehouse()) {\n+        return pnlOptions;\n+    }\n+\n+    private MassRepairOptionControl createMassRepairOptionControls(int type, String text,String tooltipText,\n+                                                                   String activeBoxName, JPanel pnlItems,\n+                                                                   int rowIdx) {\n+        MassRepairOption mro = null;\n+\n+        for (MassRepairOption massRepairOption : campaignOptions.getMassRepairOptions()) {", "originalCommit": "909fc06f1bed5d896b80b82b99c2a8c91123bb7b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY2NDA5Mg==", "url": "https://github.com/MegaMek/mekhq/pull/2012#discussion_r490664092", "bodyText": "Fixed it on one end, and I think I forgot to fix it on the other end... give me five and I'll double check", "author": "Windchild292", "createdAt": "2020-09-18T02:26:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY2Mjg1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY2NzA4MA==", "url": "https://github.com/MegaMek/mekhq/pull/2012#discussion_r490667080", "bodyText": "Yep, forgot to fix it on the other end... That's now fixed", "author": "Windchild292", "createdAt": "2020-09-18T02:38:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY2Mjg1Nw=="}], "type": "inlineReview"}, {"oid": "a43e11cc252a5c0c94a63cdc1f877b34e9758581", "url": "https://github.com/MegaMek/mekhq/commit/a43e11cc252a5c0c94a63cdc1f877b34e9758581", "message": "Properly implementing null check", "committedDate": "2020-09-18T02:35:19Z", "type": "commit"}]}