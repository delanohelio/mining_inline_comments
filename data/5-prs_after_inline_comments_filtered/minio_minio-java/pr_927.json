{"pr_number": 927, "pr_title": " Make bucket with builder", "pr_createdAt": "2020-05-11T06:53:35Z", "pr_url": "https://github.com/minio/minio-java/pull/927", "timeline": [{"oid": "a9934604ded44fc040228ce5e6a95c30c8cb403a", "url": "https://github.com/minio/minio-java/commit/a9934604ded44fc040228ce5e6a95c30c8cb403a", "message": " Make bucket with builder", "committedDate": "2020-05-11T07:37:35Z", "type": "forcePushed"}, {"oid": "73eeb8ef3831ca68c1992c7ef3ee56480d29cbb8", "url": "https://github.com/minio/minio-java/commit/73eeb8ef3831ca68c1992c7ef3ee56480d29cbb8", "message": " Make bucket with builder", "committedDate": "2020-05-11T07:39:14Z", "type": "forcePushed"}, {"oid": "199fb4446048f651ef154d636f4fd9c7c712f1ff", "url": "https://github.com/minio/minio-java/commit/199fb4446048f651ef154d636f4fd9c7c712f1ff", "message": " Make bucket with builder", "committedDate": "2020-05-11T07:43:25Z", "type": "forcePushed"}, {"oid": "7f85037a280df7435d0a87b621a17e1455fc1c2a", "url": "https://github.com/minio/minio-java/commit/7f85037a280df7435d0a87b621a17e1455fc1c2a", "message": " Make bucket with builder", "committedDate": "2020-05-11T08:11:13Z", "type": "commit"}, {"oid": "7f85037a280df7435d0a87b621a17e1455fc1c2a", "url": "https://github.com/minio/minio-java/commit/7f85037a280df7435d0a87b621a17e1455fc1c2a", "message": " Make bucket with builder", "committedDate": "2020-05-11T08:11:13Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjk3NjkzNg==", "url": "https://github.com/minio/minio-java/pull/927#discussion_r422976936", "bodyText": "Please move the validations to a separate method called validate() or validateName()", "author": "anjalshireesh", "createdAt": "2020-05-11T11:35:53Z", "path": "api/src/main/java/io/minio/BucketArgs.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+public abstract class BucketArgs {\n+  private String name;\n+  private String region;\n+\n+  BucketArgs(Builder<?> builder) {\n+\n+    this.name = builder.name;\n+    this.region = builder.region;\n+  }\n+\n+  public String bucketName() {\n+    return name;\n+  }\n+\n+  public String region() {\n+    return region;\n+  }\n+\n+  public abstract static class Builder<T extends Builder<T>> {\n+    public String name;\n+    public String region;\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public T bucket(String name) {\n+      if (name == null) {\n+        throw new IllegalArgumentException(\"null bucket name\");\n+      }\n+\n+      // Bucket names cannot be no less than 3 and no more than 63 characters long.\n+      if (name.length() < 3 || name.length() > 63) {\n+        throw new IllegalArgumentException(\n+            name + \" : \" + \"bucket name must be at least 3 and no more than 63 characters long\");\n+      }\n+      // Successive periods in bucket names are not allowed.\n+      if (name.contains(\"..\")) {\n+        String msg =\n+            \"bucket name cannot contain successive periods. For more information refer \"\n+                + \"http://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html\";\n+        throw new IllegalArgumentException(name + \" : \" + msg);\n+      }\n+      // Bucket names should be dns compatible.\n+      if (!name.matches(\"^[a-z0-9][a-z0-9\\\\.\\\\-]+[a-z0-9]$\")) {\n+        String msg =\n+            \"bucket name does not follow Amazon S3 standards. For more information refer \"\n+                + \"http://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html\";\n+        throw new IllegalArgumentException(name + \" : \" + msg);", "originalCommit": "7f85037a280df7435d0a87b621a17e1455fc1c2a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzAwNTg0Mg==", "url": "https://github.com/minio/minio-java/pull/927#discussion_r423005842", "bodyText": "This method should be static and need not pass this as an argument to the constructor.", "author": "anjalshireesh", "createdAt": "2020-05-11T12:33:10Z", "path": "api/src/main/java/io/minio/MakeBucketArgs.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+public class MakeBucketArgs extends BucketArgs {\n+  private final boolean objectLock;\n+\n+  MakeBucketArgs(Builder builder) {\n+    super(builder);\n+    this.objectLock = builder.objectLock;\n+  }\n+\n+  public boolean objectLock() {\n+    return objectLock;\n+  }\n+\n+  public MakeBucketArgs() {\n+    this(new Builder());\n+  }\n+\n+  public Builder builder() {\n+    return new Builder(this);\n+  }", "originalCommit": "7f85037a280df7435d0a87b621a17e1455fc1c2a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzAwNjc5Mw==", "url": "https://github.com/minio/minio-java/pull/927#discussion_r423006793", "bodyText": "This constructor is not required", "author": "anjalshireesh", "createdAt": "2020-05-11T12:35:00Z", "path": "api/src/main/java/io/minio/MakeBucketArgs.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+public class MakeBucketArgs extends BucketArgs {\n+  private final boolean objectLock;\n+\n+  MakeBucketArgs(Builder builder) {\n+    super(builder);\n+    this.objectLock = builder.objectLock;\n+  }\n+\n+  public boolean objectLock() {\n+    return objectLock;\n+  }\n+\n+  public MakeBucketArgs() {\n+    this(new Builder());\n+  }", "originalCommit": "7f85037a280df7435d0a87b621a17e1455fc1c2a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzA0MDYyNA==", "url": "https://github.com/minio/minio-java/pull/927#discussion_r423040624", "bodyText": "Empty line can be removed", "author": "anjalshireesh", "createdAt": "2020-05-11T13:31:18Z", "path": "api/src/main/java/io/minio/BucketArgs.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+public abstract class BucketArgs {\n+  private String name;\n+  private String region;\n+\n+  BucketArgs(Builder<?> builder) {\n+", "originalCommit": "7f85037a280df7435d0a87b621a17e1455fc1c2a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzA0MzE2Nw==", "url": "https://github.com/minio/minio-java/pull/927#discussion_r423043167", "bodyText": "Setting of name and region should happen in the constructor of BucketArgs.builder and that can be called with super(args) here", "author": "anjalshireesh", "createdAt": "2020-05-11T13:35:05Z", "path": "api/src/main/java/io/minio/MakeBucketArgs.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+public class MakeBucketArgs extends BucketArgs {\n+  private final boolean objectLock;\n+\n+  MakeBucketArgs(Builder builder) {\n+    super(builder);\n+    this.objectLock = builder.objectLock;\n+  }\n+\n+  public boolean objectLock() {\n+    return objectLock;\n+  }\n+\n+  public MakeBucketArgs() {\n+    this(new Builder());\n+  }\n+\n+  public Builder builder() {\n+    return new Builder(this);\n+  }\n+\n+  public static final class Builder extends BucketArgs.Builder<Builder> {\n+    private boolean objectLock;\n+\n+    public Builder() {}\n+\n+    public Builder(MakeBucketArgs args) {\n+      this.name = args.bucketName();\n+      this.region = args.region();", "originalCommit": "7f85037a280df7435d0a87b621a17e1455fc1c2a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzgzMjM1MQ==", "url": "https://github.com/minio/minio-java/pull/927#discussion_r423832351", "bodyText": "This constructor has been removed as per @balamurugana  comment\n\nYou could remove Builder(XXXArgs args) constructor everywhere and will be added on demand.", "author": "sinhaashish", "createdAt": "2020-05-12T15:36:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzA0MzE2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzA1MDEzMw==", "url": "https://github.com/minio/minio-java/pull/927#discussion_r423050133", "bodyText": "This constructor can be made private to ensure that objects are always created through the builder.", "author": "anjalshireesh", "createdAt": "2020-05-11T13:45:12Z", "path": "api/src/main/java/io/minio/MakeBucketArgs.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+public class MakeBucketArgs extends BucketArgs {\n+  private final boolean objectLock;\n+\n+  MakeBucketArgs(Builder builder) {", "originalCommit": "7f85037a280df7435d0a87b621a17e1455fc1c2a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzA1NDI0NQ==", "url": "https://github.com/minio/minio-java/pull/927#discussion_r423054245", "bodyText": "name and region can be defined final", "author": "anjalshireesh", "createdAt": "2020-05-11T13:51:06Z", "path": "api/src/main/java/io/minio/BucketArgs.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+public abstract class BucketArgs {\n+  private String name;\n+  private String region;", "originalCommit": "7f85037a280df7435d0a87b621a17e1455fc1c2a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzA1NjM5Mg==", "url": "https://github.com/minio/minio-java/pull/927#discussion_r423056392", "bodyText": "Instead of new MakeBucketArgs().builder(), this should look like MakeBucketArgs.builder()", "author": "anjalshireesh", "createdAt": "2020-05-11T13:54:14Z", "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -3263,12 +3263,13 @@ public boolean bucketExists(String bucketName)\n    * @throws RegionConflictException thrown to indicate passed region conflict with default region.\n    * @throws XmlParserException thrown to indicate XML parsing error.\n    */\n+  @Deprecated\n   public void makeBucket(String bucketName)\n       throws ErrorResponseException, IllegalArgumentException, InsufficientDataException,\n           InternalException, InvalidBucketNameException, InvalidKeyException,\n           InvalidResponseException, IOException, NoSuchAlgorithmException, RegionConflictException,\n           XmlParserException {\n-    this.makeBucket(bucketName, null, false);\n+    this.makeBucket(new MakeBucketArgs().builder().bucket(bucketName).build());", "originalCommit": "7f85037a280df7435d0a87b621a17e1455fc1c2a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzA1MTMzOA==", "url": "https://github.com/minio/minio-java/pull/927#discussion_r423051338", "bodyText": "You can remove this whitespace.", "author": "balamurugana", "createdAt": "2020-05-11T13:46:58Z", "path": "api/src/main/java/io/minio/BucketArgs.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+public abstract class BucketArgs {\n+  private String name;\n+  private String region;\n+\n+  BucketArgs(Builder<?> builder) {\n+", "originalCommit": "7f85037a280df7435d0a87b621a17e1455fc1c2a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzA1MjIzOA==", "url": "https://github.com/minio/minio-java/pull/927#discussion_r423052238", "bodyText": "Please add javadoc all public class/methods.", "author": "balamurugana", "createdAt": "2020-05-11T13:48:15Z", "path": "api/src/main/java/io/minio/BucketArgs.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+public abstract class BucketArgs {", "originalCommit": "7f85037a280df7435d0a87b621a17e1455fc1c2a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzA1MzYwNQ==", "url": "https://github.com/minio/minio-java/pull/927#discussion_r423053605", "bodyText": "Add justification as Its safe to type cast to T as T is inherited this class.", "author": "balamurugana", "createdAt": "2020-05-11T13:50:13Z", "path": "api/src/main/java/io/minio/BucketArgs.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+public abstract class BucketArgs {\n+  private String name;\n+  private String region;\n+\n+  BucketArgs(Builder<?> builder) {\n+\n+    this.name = builder.name;\n+    this.region = builder.region;\n+  }\n+\n+  public String bucketName() {\n+    return name;\n+  }\n+\n+  public String region() {\n+    return region;\n+  }\n+\n+  public abstract static class Builder<T extends Builder<T>> {\n+    public String name;\n+    public String region;\n+\n+    @SuppressWarnings(\"unchecked\")", "originalCommit": "7f85037a280df7435d0a87b621a17e1455fc1c2a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzA1NzAyOQ==", "url": "https://github.com/minio/minio-java/pull/927#discussion_r423057029", "bodyText": "Its been decided to add this feature later on demand.", "author": "balamurugana", "createdAt": "2020-05-11T13:55:03Z", "path": "api/src/main/java/io/minio/MakeBucketArgs.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+public class MakeBucketArgs extends BucketArgs {\n+  private final boolean objectLock;\n+\n+  MakeBucketArgs(Builder builder) {\n+    super(builder);\n+    this.objectLock = builder.objectLock;\n+  }\n+\n+  public boolean objectLock() {\n+    return objectLock;\n+  }\n+\n+  public MakeBucketArgs() {\n+    this(new Builder());\n+  }\n+\n+  public Builder builder() {", "originalCommit": "7f85037a280df7435d0a87b621a17e1455fc1c2a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQzOTI5MA==", "url": "https://github.com/minio/minio-java/pull/927#discussion_r423439290", "bodyText": "You can find @anjalshireesh  comment above, and thus i have made this as static and created the object like\nMakeBucketArgs.builder()\n        .bucket(\"<bucketname>\")\n        .region(\"<region>\")\n        .objectLock(<true/false>)\n        .build()", "author": "sinhaashish", "createdAt": "2020-05-12T03:23:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzA1NzAyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzA1NzkwOQ==", "url": "https://github.com/minio/minio-java/pull/927#discussion_r423057909", "bodyText": "This is code block. It should be a comment. Also touch relevant code to this PR.", "author": "balamurugana", "createdAt": "2020-05-11T13:56:08Z", "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -1957,27 +1957,27 @@ public void getObject(\n    * Creates an object by server-side copying data from another object.\n    *\n    * <pre>Example:{@code\n-   * // Copy data from my-source-bucketname/my-objectname to my-bucketname/my-objectname.\n+   *  Copy data from my-source-bucketname/my-objectname to my-bucketname/my-objectname.", "originalCommit": "7f85037a280df7435d0a87b621a17e1455fc1c2a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzA2MDk0Mg==", "url": "https://github.com/minio/minio-java/pull/927#discussion_r423060942", "bodyText": "Creates a bucket with region and object lock.", "author": "balamurugana", "createdAt": "2020-05-11T14:00:32Z", "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -3324,13 +3326,55 @@ public void makeBucket(String bucketName, String region)\n    * @throws RegionConflictException thrown to indicate passed region conflict with default region.\n    * @throws XmlParserException thrown to indicate XML parsing error.\n    */\n+  @Deprecated\n   public void makeBucket(String bucketName, String region, boolean objectLock)\n       throws ErrorResponseException, IllegalArgumentException, InsufficientDataException,\n           InternalException, InvalidBucketNameException, InvalidKeyException,\n           InvalidResponseException, IOException, NoSuchAlgorithmException, RegionConflictException,\n           XmlParserException {\n-    // If region param is not provided, set it with the one provided by constructor\n-    if (region == null) {\n+    this.makeBucket(\n+        new MakeBucketArgs()\n+            .builder()\n+            .bucket(bucketName)\n+            .region(region)\n+            .objectLock(objectLock)\n+            .build());\n+  }\n+\n+  /**\n+   * Creates a bucket with make bucket arguments.", "originalCommit": "7f85037a280df7435d0a87b621a17e1455fc1c2a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzA2MTI1NA==", "url": "https://github.com/minio/minio-java/pull/927#discussion_r423061254", "bodyText": "You would need to provide examples as similar as API.md here.", "author": "balamurugana", "createdAt": "2020-05-11T14:01:00Z", "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -3324,13 +3326,55 @@ public void makeBucket(String bucketName, String region)\n    * @throws RegionConflictException thrown to indicate passed region conflict with default region.\n    * @throws XmlParserException thrown to indicate XML parsing error.\n    */\n+  @Deprecated\n   public void makeBucket(String bucketName, String region, boolean objectLock)\n       throws ErrorResponseException, IllegalArgumentException, InsufficientDataException,\n           InternalException, InvalidBucketNameException, InvalidKeyException,\n           InvalidResponseException, IOException, NoSuchAlgorithmException, RegionConflictException,\n           XmlParserException {\n-    // If region param is not provided, set it with the one provided by constructor\n-    if (region == null) {\n+    this.makeBucket(\n+        new MakeBucketArgs()\n+            .builder()\n+            .bucket(bucketName)\n+            .region(region)\n+            .objectLock(objectLock)\n+            .build());\n+  }\n+\n+  /**\n+   * Creates a bucket with make bucket arguments.\n+   *\n+   * <pre>Example:{@code\n+   * minioClient.makeBucket(MakeBucketArgs args);", "originalCommit": "7f85037a280df7435d0a87b621a17e1455fc1c2a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzA2NDY0NQ==", "url": "https://github.com/minio/minio-java/pull/927#discussion_r423064645", "bodyText": "Now you could have one example MakeBucket.java and add three variation there.", "author": "balamurugana", "createdAt": "2020-05-11T14:06:06Z", "path": "examples/MakeBucketWithLock.java", "diffHunk": "@@ -36,7 +37,8 @@ public static void main(String[] args)\n         System.out.println(\"my-bucketname already exists\");\n       } else {\n         // Create bucket 'my-bucketname' with object lock functionality enabled\n-        s3Client.makeBucket(\"my-bucketname\", null, true);\n+        s3Client.makeBucket(\n+            new MakeBucketArgs.Builder().bucket(\"my-bucketname\").objectLock(true).build());", "originalCommit": "7f85037a280df7435d0a87b621a17e1455fc1c2a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzA3NDU1NA==", "url": "https://github.com/minio/minio-java/pull/927#discussion_r423074554", "bodyText": "You can add a tag like with region, with objectLock or with region and objectLock", "author": "balamurugana", "createdAt": "2020-05-11T14:20:14Z", "path": "functional/FunctionalTest.java", "diffHunk": "@@ -251,22 +251,21 @@ public static void makeBucket_test1() throws Exception {\n     }\n   }\n \n-  /** Test: makeBucket(String bucketName, String region). */\n+  /** Test: makeBucket(MakeBucketArgs args). */\n   public static void makeBucketwithRegion_test() throws Exception {\n     if (!mintEnv) {\n-      System.out.println(\"Test: makeBucket(String bucketName, String region)\");\n+      System.out.println(\"Test: makeBucket(MakeBucketArgs args)\");", "originalCommit": "7f85037a280df7435d0a87b621a17e1455fc1c2a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ1MjMwNw==", "url": "https://github.com/minio/minio-java/pull/927#discussion_r423452307", "bodyText": "/** Base argument class holds bucket name and region */", "author": "balamurugana", "createdAt": "2020-05-12T04:18:31Z", "path": "api/src/main/java/io/minio/BucketArgs.java", "diffHunk": "@@ -16,30 +16,55 @@\n \n package io.minio;\n \n+/** Bucket Arguments to hold base bucket properties */", "originalCommit": "4cb198976e780200060a0245c22b6ef478755dce", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ1MzMzMg==", "url": "https://github.com/minio/minio-java/pull/927#discussion_r423453332", "bodyText": "/** Returns bucket name */ to consistent with other docs.", "author": "balamurugana", "createdAt": "2020-05-12T04:22:32Z", "path": "api/src/main/java/io/minio/BucketArgs.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+/** Bucket Arguments to hold base bucket properties */\n+public abstract class BucketArgs {\n+  private final String name;\n+  private final String region;\n+\n+  BucketArgs(Builder<?> builder) {\n+    this.name = builder.name;\n+    this.region = builder.region;\n+  }\n+\n+  /** Returns the name of bucket */", "originalCommit": "4cb198976e780200060a0245c22b6ef478755dce", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ1MzQwOQ==", "url": "https://github.com/minio/minio-java/pull/927#discussion_r423453409", "bodyText": "/** Returns region */", "author": "balamurugana", "createdAt": "2020-05-12T04:22:51Z", "path": "api/src/main/java/io/minio/BucketArgs.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+/** Bucket Arguments to hold base bucket properties */\n+public abstract class BucketArgs {\n+  private final String name;\n+  private final String region;\n+\n+  BucketArgs(Builder<?> builder) {\n+    this.name = builder.name;\n+    this.region = builder.region;\n+  }\n+\n+  /** Returns the name of bucket */\n+  public String bucketName() {\n+    return name;\n+  }\n+\n+  /** Returns the region of bucket */", "originalCommit": "4cb198976e780200060a0245c22b6ef478755dce", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ1MzcyNg==", "url": "https://github.com/minio/minio-java/pull/927#discussion_r423453726", "bodyText": "Please check how to add justification in @suppressWarnings", "author": "balamurugana", "createdAt": "2020-05-12T04:23:55Z", "path": "api/src/main/java/io/minio/BucketArgs.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+/** Bucket Arguments to hold base bucket properties */\n+public abstract class BucketArgs {\n+  private final String name;\n+  private final String region;\n+\n+  BucketArgs(Builder<?> builder) {\n+    this.name = builder.name;\n+    this.region = builder.region;\n+  }\n+\n+  /** Returns the name of bucket */\n+  public String bucketName() {\n+    return name;\n+  }\n+\n+  /** Returns the region of bucket */\n+  public String region() {\n+    return region;\n+  }\n+\n+  /** Builder class to create base bucket object */\n+  public abstract static class Builder<T extends Builder<T>> {\n+    public String name;\n+    public String region;\n+\n+    public Builder() {}\n+\n+    public Builder(BucketArgs args) {\n+      this.name = args.bucketName();\n+      this.region = args.region();\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    /** Its safe to type cast to T as T is inherited this class. */", "originalCommit": "4cb198976e780200060a0245c22b6ef478755dce", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ1Mzg3Ng==", "url": "https://github.com/minio/minio-java/pull/927#discussion_r423453876", "bodyText": "We could make this as static method.", "author": "balamurugana", "createdAt": "2020-05-12T04:24:33Z", "path": "api/src/main/java/io/minio/BucketArgs.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+/** Bucket Arguments to hold base bucket properties */\n+public abstract class BucketArgs {\n+  private final String name;\n+  private final String region;\n+\n+  BucketArgs(Builder<?> builder) {\n+    this.name = builder.name;\n+    this.region = builder.region;\n+  }\n+\n+  /** Returns the name of bucket */\n+  public String bucketName() {\n+    return name;\n+  }\n+\n+  /** Returns the region of bucket */\n+  public String region() {\n+    return region;\n+  }\n+\n+  /** Builder class to create base bucket object */\n+  public abstract static class Builder<T extends Builder<T>> {\n+    public String name;\n+    public String region;\n+\n+    public Builder() {}\n+\n+    public Builder(BucketArgs args) {\n+      this.name = args.bucketName();\n+      this.region = args.region();\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    /** Its safe to type cast to T as T is inherited this class. */\n+    public T bucket(String name) {\n+      validateName(name);\n+      this.name = name;\n+      return (T) this;\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    /** Its safe to type cast to T as T is inherited this class. */\n+    public T region(String region) {\n+      this.region = region;\n+      return (T) this;\n+    }\n+\n+    /** Validate the name of the bucket */\n+    public void validateName(String name) {", "originalCommit": "4cb198976e780200060a0245c22b6ef478755dce", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ1NDc3OA==", "url": "https://github.com/minio/minio-java/pull/927#discussion_r423454778", "bodyText": "/** Argument class of {@see makeBucket()}. */", "author": "balamurugana", "createdAt": "2020-05-12T04:28:16Z", "path": "api/src/main/java/io/minio/MakeBucketArgs.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+/** Bucket Arguments to be used to create Bukcet. */", "originalCommit": "4cb198976e780200060a0245c22b6ef478755dce", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ1NDk3NA==", "url": "https://github.com/minio/minio-java/pull/927#discussion_r423454974", "bodyText": "Just `/** Returns object lock flag. */", "author": "balamurugana", "createdAt": "2020-05-12T04:29:00Z", "path": "api/src/main/java/io/minio/MakeBucketArgs.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+/** Bucket Arguments to be used to create Bukcet. */\n+public class MakeBucketArgs extends BucketArgs {\n+  private final boolean objectLock;\n+\n+  private MakeBucketArgs(Builder builder) {\n+    super(builder);\n+    this.objectLock = builder.objectLock;\n+  }\n+\n+  /** Return true if object lock functionality is enabled */", "originalCommit": "4cb198976e780200060a0245c22b6ef478755dce", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ1NTU5Nw==", "url": "https://github.com/minio/minio-java/pull/927#discussion_r423455597", "bodyText": "/** Base argument builder class. */ is sufficient.", "author": "balamurugana", "createdAt": "2020-05-12T04:31:33Z", "path": "api/src/main/java/io/minio/BucketArgs.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+/** Bucket Arguments to hold base bucket properties */\n+public abstract class BucketArgs {\n+  private final String name;\n+  private final String region;\n+\n+  BucketArgs(Builder<?> builder) {\n+    this.name = builder.name;\n+    this.region = builder.region;\n+  }\n+\n+  /** Returns the name of bucket */\n+  public String bucketName() {\n+    return name;\n+  }\n+\n+  /** Returns the region of bucket */\n+  public String region() {\n+    return region;\n+  }\n+\n+  /** Builder class to create base bucket object */", "originalCommit": "4cb198976e780200060a0245c22b6ef478755dce", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ1NTk5NA==", "url": "https://github.com/minio/minio-java/pull/927#discussion_r423455994", "bodyText": "/** Argument builder of {@see makeBucket()}. */`", "author": "balamurugana", "createdAt": "2020-05-12T04:33:05Z", "path": "api/src/main/java/io/minio/MakeBucketArgs.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+/** Bucket Arguments to be used to create Bukcet. */\n+public class MakeBucketArgs extends BucketArgs {\n+  private final boolean objectLock;\n+\n+  private MakeBucketArgs(Builder builder) {\n+    super(builder);\n+    this.objectLock = builder.objectLock;\n+  }\n+\n+  /** Return true if object lock functionality is enabled */\n+  public boolean objectLock() {\n+    return objectLock;\n+  }\n+\n+  /** Return new Builder */\n+  public static Builder builder() {\n+    return new Builder();\n+  }\n+\n+  public static final class Builder extends BucketArgs.Builder<Builder> {", "originalCommit": "4cb198976e780200060a0245c22b6ef478755dce", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ1NjQwOQ==", "url": "https://github.com/minio/minio-java/pull/927#discussion_r423456409", "bodyText": "You could remove Builder(XXXArgs args) constructor everywhere and will be added on demand.", "author": "balamurugana", "createdAt": "2020-05-12T04:34:47Z", "path": "api/src/main/java/io/minio/MakeBucketArgs.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+/** Bucket Arguments to be used to create Bukcet. */\n+public class MakeBucketArgs extends BucketArgs {\n+  private final boolean objectLock;\n+\n+  private MakeBucketArgs(Builder builder) {\n+    super(builder);\n+    this.objectLock = builder.objectLock;\n+  }\n+\n+  /** Return true if object lock functionality is enabled */\n+  public boolean objectLock() {\n+    return objectLock;\n+  }\n+\n+  /** Return new Builder */\n+  public static Builder builder() {\n+    return new Builder();\n+  }\n+\n+  public static final class Builder extends BucketArgs.Builder<Builder> {\n+    private boolean objectLock;\n+\n+    public Builder() {}\n+\n+    public Builder(MakeBucketArgs args) {", "originalCommit": "4cb198976e780200060a0245c22b6ef478755dce", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ1OTY5OQ==", "url": "https://github.com/minio/minio-java/pull/927#discussion_r423459699", "bodyText": "You could have bucket names as my-bucketname, my-bucketname-in-eu, my-bucketname-in-eu-with-object-lock\nI prefer longer block in if i.e. if (!minioClient.bucketExists(...)) { is better.", "author": "balamurugana", "createdAt": "2020-05-12T04:47:52Z", "path": "examples/MakeBucket.java", "diffHunk": "@@ -37,14 +38,36 @@ public static void main(String[] args)\n       //                                           \"YOUR-SECRETACCESSKEY\");\n \n       // Create bucket if it doesn't exist.\n-      boolean found = minioClient.bucketExists(\"my-bucketname\");\n-      if (found) {\n+      if (minioClient.bucketExists(\"my-bucketname\")) {\n         System.out.println(\"my-bucketname already exists\");\n       } else {\n         // Create bucket 'my-bucketname'.\n-        minioClient.makeBucket(\"my-bucketname\");\n+        minioClient.makeBucket(MakeBucketArgs.builder().bucket(\"my-bucketname\").build());\n         System.out.println(\"my-bucketname is created successfully\");\n       }\n+      // Create bucket if it doesn't exist.\n+      if (minioClient.bucketExists(\"my-bucketname2\")) {\n+        System.out.println(\"my-bucketname2 already exists\");\n+      } else {\n+        // Create bucket 'my-bucketname2' and region.\n+        minioClient.makeBucket(\n+            MakeBucketArgs.builder().bucket(\"my-bucketname2\").region(\"us-west-1\").build());\n+        System.out.println(\"my-bucketname2 is created successfully\");\n+      }\n+      // Create bucket if it doesn't exist.\n+      if (minioClient.bucketExists(\"my-bucketname3\")) {\n+        System.out.println(\"my-bucketname3 already exists\");\n+      } else {\n+\n+        // Create bucket 'my-bucketname3' , egion and object lock functionality enabled.\n+        minioClient.makeBucket(\n+            MakeBucketArgs.builder()\n+                .bucket(\"my-bucketname3\")\n+                .region(\"us-west-1\")\n+                .objectLock(true)\n+                .build());\n+        System.out.println(\"my-bucketname3 is created successfully\");", "originalCommit": "4cb198976e780200060a0245c22b6ef478755dce", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ2MDE2Mg==", "url": "https://github.com/minio/minio-java/pull/927#discussion_r423460162", "bodyText": "Add tag before the API Test: with region: makeBucket(...)", "author": "balamurugana", "createdAt": "2020-05-12T04:49:54Z", "path": "functional/FunctionalTest.java", "diffHunk": "@@ -251,22 +251,21 @@ public static void makeBucket_test1() throws Exception {\n     }\n   }\n \n-  /** Test: makeBucket(String bucketName, String region). */\n+  /** Test: makeBucket(MakeBucketArgs args). */\n   public static void makeBucketwithRegion_test() throws Exception {\n     if (!mintEnv) {\n-      System.out.println(\"Test: makeBucket(String bucketName, String region)\");\n+      System.out.println(\"Test: makeBucket(MakeBucketArgs args) with region\");", "originalCommit": "4cb198976e780200060a0245c22b6ef478755dce", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ2MDkyNA==", "url": "https://github.com/minio/minio-java/pull/927#discussion_r423460924", "bodyText": "I think we should use makeBucket_testN() like other tests.", "author": "balamurugana", "createdAt": "2020-05-12T04:52:51Z", "path": "functional/FunctionalTest.java", "diffHunk": "@@ -303,6 +301,33 @@ public static void makeBucketWithPeriod_test() throws Exception {\n     }\n   }\n \n+  /** Test: makeBucket(MakeBucketArgs args). */\n+  public static void makeBucketwithRegioAndObjectLock() throws Exception {", "originalCommit": "4cb198976e780200060a0245c22b6ef478755dce", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "bbf54c317cbbf8aafa42b1a446e3496bda551f40", "url": "https://github.com/minio/minio-java/commit/bbf54c317cbbf8aafa42b1a446e3496bda551f40", "message": "Address review comment", "committedDate": "2020-05-12T04:55:05Z", "type": "forcePushed"}, {"oid": "076b9e7473e190b5b2aef9c7d67fcbe1c2d8ac95", "url": "https://github.com/minio/minio-java/commit/076b9e7473e190b5b2aef9c7d67fcbe1c2d8ac95", "message": "Address review comment", "committedDate": "2020-05-12T04:56:24Z", "type": "forcePushed"}, {"oid": "0542e6141c3bfc7d9a4b357eeadeaa5e06322a37", "url": "https://github.com/minio/minio-java/commit/0542e6141c3bfc7d9a4b357eeadeaa5e06322a37", "message": "Address review comment", "committedDate": "2020-05-12T04:59:03Z", "type": "commit"}, {"oid": "0542e6141c3bfc7d9a4b357eeadeaa5e06322a37", "url": "https://github.com/minio/minio-java/commit/0542e6141c3bfc7d9a4b357eeadeaa5e06322a37", "message": "Address review comment", "committedDate": "2020-05-12T04:59:03Z", "type": "forcePushed"}, {"oid": "92caa86268eff2054eadb1da2d5ba273ac67a8b5", "url": "https://github.com/minio/minio-java/commit/92caa86268eff2054eadb1da2d5ba273ac67a8b5", "message": "Address bala's comment", "committedDate": "2020-05-12T11:26:04Z", "type": "commit"}, {"oid": "92caa86268eff2054eadb1da2d5ba273ac67a8b5", "url": "https://github.com/minio/minio-java/commit/92caa86268eff2054eadb1da2d5ba273ac67a8b5", "message": "Address bala's comment", "committedDate": "2020-05-12T11:26:04Z", "type": "forcePushed"}, {"oid": "4af1da96864dc09c68953b15b528d2dd6d332334", "url": "https://github.com/minio/minio-java/commit/4af1da96864dc09c68953b15b528d2dd6d332334", "message": "Change Gradle to build error upon warning", "committedDate": "2020-05-12T15:27:26Z", "type": "commit"}, {"oid": "4af1da96864dc09c68953b15b528d2dd6d332334", "url": "https://github.com/minio/minio-java/commit/4af1da96864dc09c68953b15b528d2dd6d332334", "message": "Change Gradle to build error upon warning", "committedDate": "2020-05-12T15:27:26Z", "type": "forcePushed"}]}