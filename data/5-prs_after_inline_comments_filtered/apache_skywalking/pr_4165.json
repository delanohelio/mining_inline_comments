{"pr_number": 4165, "pr_title": "Add kotlin coroutine plugin", "pr_createdAt": "2020-01-02T15:14:13Z", "pr_url": "https://github.com/apache/skywalking/pull/4165", "timeline": [{"oid": "8ad1ad64fbb00a03851932c0ea899c4a6f8b311b", "url": "https://github.com/apache/skywalking/commit/8ad1ad64fbb00a03851932c0ea899c4a6f8b311b", "message": "Kotlin coroutine plugin write in Java", "committedDate": "2020-01-02T17:13:33Z", "type": "commit"}, {"oid": "8ad1ad64fbb00a03851932c0ea899c4a6f8b311b", "url": "https://github.com/apache/skywalking/commit/8ad1ad64fbb00a03851932c0ea899c4a6f8b311b", "message": "Kotlin coroutine plugin write in Java", "committedDate": "2020-01-02T17:13:33Z", "type": "forcePushed"}, {"oid": "47cbf78f5cb8139f79724ecb700b730f0f0a46e4", "url": "https://github.com/apache/skywalking/commit/47cbf78f5cb8139f79724ecb700b730f0f0a46e4", "message": "Add license", "committedDate": "2020-01-03T07:03:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjcyMTEzNA==", "url": "https://github.com/apache/skywalking/pull/4165#discussion_r362721134", "bodyText": "Do we need it?", "author": "dmsolr", "createdAt": "2020-01-03T07:15:21Z", "path": "apm-sniffer/optional-plugins/kotlin-coroutine-plugin/src/main/java/org/apache/skywalking/apm/plugin/kotlin/coroutine/TracingRunnable.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.plugin.kotlin.coroutine;\n+\n+import org.apache.skywalking.apm.agent.core.context.ContextManager;\n+import org.apache.skywalking.apm.agent.core.context.ContextSnapshot;\n+import org.apache.skywalking.apm.agent.core.context.trace.AbstractSpan;\n+import org.apache.skywalking.apm.network.trace.component.ComponentsDefine;\n+\n+/**\n+ * {@link Runnable} wrapper with trace context snapshot, it will create span\n+ * with context snapshot around {@link Runnable} runs.\n+ * <p>\n+ * A class implementation will be cheaper cost than lambda with captured\n+ * variables implementation.\n+ */\n+class TracingRunnable implements Runnable {\n+    private static final String COROUTINE = \"/Kotlin/Coroutine\";\n+\n+    private ContextSnapshot snapshot;\n+    private Runnable delegate;\n+    private String tracingId;\n+\n+    private TracingRunnable(ContextSnapshot snapshot, Runnable delegate, String tracingId) {\n+        this.snapshot = snapshot;\n+        this.delegate = delegate;\n+        this.tracingId = tracingId;\n+    }\n+\n+    private TracingRunnable(ContextSnapshot snapshot, Runnable delegate) {\n+        this(snapshot, delegate, ContextManager.getGlobalTraceId());\n+    }\n+\n+    /**\n+     * Wrap {@link Runnable} by {@link TracingRunnable} if active trace context\n+     * existed.\n+     *\n+     * @param delegate {@link Runnable} to wrap.\n+     *\n+     * @return Wrapped {@link TracingRunnable} or original {@link Runnable} if\n+     * trace context not existed.\n+     */\n+    public static Runnable wrapOrNot(Runnable delegate) {\n+        // Just wrap continuation with active trace context\n+        if (ContextManager.isActive()) {\n+            return new TracingRunnable(ContextManager.capture(), delegate);\n+        } else {\n+            return delegate;\n+        }\n+    }\n+\n+    @Override\n+    public void run() {\n+        if (ContextManager.getGlobalTraceId().equals(tracingId)) {\n+            // Trace id same with before dispatching, skip restore snapshot.\n+            delegate.run();\n+            return;\n+        }", "originalCommit": "47cbf78f5cb8139f79724ecb700b730f0f0a46e4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjc0MjUzMw==", "url": "https://github.com/apache/skywalking/pull/4165#discussion_r362742533", "bodyText": "Sometimes coroutine or suspend function will not switch the thread, we can skip creating a \"/Kotlin/Coroutine\" span for simplifying tracing.", "author": "devkanro", "createdAt": "2020-01-03T09:15:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjcyMTEzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzAwNTQ5NQ==", "url": "https://github.com/apache/skywalking/pull/4165#discussion_r363005495", "bodyText": "Please use core API to do this check. snapshot#isFromCurrent(). Segment id is more accurate to do thread-switch check", "author": "wu-sheng", "createdAt": "2020-01-04T01:05:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjcyMTEzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzAwNTgwNg==", "url": "https://github.com/apache/skywalking/pull/4165#discussion_r363005806", "bodyText": "Before doing this, you need to do ContextManager#isActive, making sure there is a context activated in the current thread.", "author": "wu-sheng", "createdAt": "2020-01-04T01:08:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjcyMTEzNA=="}], "type": "inlineReview"}, {"oid": "c237385d33d116864fd9770cabc5cd3052e5e778", "url": "https://github.com/apache/skywalking/commit/c237385d33d116864fd9770cabc5cd3052e5e778", "message": "Add licens for plugin def file", "committedDate": "2020-01-03T09:34:40Z", "type": "commit"}, {"oid": "6927733408eae5efc85e13552affa6726b25a658", "url": "https://github.com/apache/skywalking/commit/6927733408eae5efc85e13552affa6726b25a658", "message": "Merge branch 'master' into kt", "committedDate": "2020-01-03T13:58:39Z", "type": "commit"}, {"oid": "2bb159554fe0452d7eee4279bde1946095d14e79", "url": "https://github.com/apache/skywalking/commit/2bb159554fe0452d7eee4279bde1946095d14e79", "message": "Add test case", "committedDate": "2020-01-03T20:51:17Z", "type": "commit"}, {"oid": "55c46557a01abad9f48b724259b91d4d6bb7bfce", "url": "https://github.com/apache/skywalking/commit/55c46557a01abad9f48b724259b91d4d6bb7bfce", "message": "Fix review and update plugin test", "committedDate": "2020-01-04T05:39:31Z", "type": "commit"}, {"oid": "3d8d467381f1d45f1ba3c3669551d77d35527264", "url": "https://github.com/apache/skywalking/commit/3d8d467381f1d45f1ba3c3669551d77d35527264", "message": "Fix missed configuration 'startScript'", "committedDate": "2020-01-04T06:02:32Z", "type": "commit"}, {"oid": "415436de6069f0b4a04f07a9000057b3793fd037", "url": "https://github.com/apache/skywalking/commit/415436de6069f0b4a04f07a9000057b3793fd037", "message": "Add docs for kotlin coroutine plugin", "committedDate": "2020-01-04T06:04:51Z", "type": "commit"}, {"oid": "b318bd747362275ba89adb20eecb6440650217f0", "url": "https://github.com/apache/skywalking/commit/b318bd747362275ba89adb20eecb6440650217f0", "message": "Fix wrong configs", "committedDate": "2020-01-04T06:21:00Z", "type": "commit"}, {"oid": "67560402694fa4877f1b8cc18d1689c30dedc99b", "url": "https://github.com/apache/skywalking/commit/67560402694fa4877f1b8cc18d1689c30dedc99b", "message": "Update expectedData.yaml", "committedDate": "2020-01-04T06:34:07Z", "type": "commit"}, {"oid": "b891f1fa99844f8900b5468e9ea6c2fd2c43a153", "url": "https://github.com/apache/skywalking/commit/b891f1fa99844f8900b5468e9ea6c2fd2c43a153", "message": "Fix typo", "committedDate": "2020-01-04T06:37:08Z", "type": "commit"}, {"oid": "8d0e4efffdee024c939fd6277f22364c8b299323", "url": "https://github.com/apache/skywalking/commit/8d0e4efffdee024c939fd6277f22364c8b299323", "message": "Fix operation names", "committedDate": "2020-01-04T07:28:56Z", "type": "commit"}, {"oid": "760c4fef751a194f803d9ea4ab7f825127a68bea", "url": "https://github.com/apache/skywalking/commit/760c4fef751a194f803d9ea4ab7f825127a68bea", "message": "Add more kotlin coroutine to test", "committedDate": "2020-01-04T09:49:29Z", "type": "commit"}, {"oid": "c9ad4d825201095da6597c261d2687b9512ff0fe", "url": "https://github.com/apache/skywalking/commit/c9ad4d825201095da6597c261d2687b9512ff0fe", "message": "Update docs", "committedDate": "2020-01-04T09:49:47Z", "type": "commit"}, {"oid": "dcbfaf3ac48e46b5000b5287f4fc41e054725e69", "url": "https://github.com/apache/skywalking/commit/dcbfaf3ac48e46b5000b5287f4fc41e054725e69", "message": "Update image url", "committedDate": "2020-01-04T09:53:51Z", "type": "commit"}, {"oid": "81bd37c974c1193dcac7abbb0184ec413866e329", "url": "https://github.com/apache/skywalking/commit/81bd37c974c1193dcac7abbb0184ec413866e329", "message": "Fix docs", "committedDate": "2020-01-04T12:15:26Z", "type": "commit"}, {"oid": "5abf643f59a93be6d50fa9bbe8095fffe7815927", "url": "https://github.com/apache/skywalking/commit/5abf643f59a93be6d50fa9bbe8095fffe7815927", "message": "Merge branch 'master' into kt", "committedDate": "2020-01-04T12:31:57Z", "type": "commit"}]}