{"pr_number": 5390, "pr_title": "Support IN filter expressions in OAL", "pr_createdAt": "2020-08-26T09:25:59Z", "pr_url": "https://github.com/apache/skywalking/pull/5390", "timeline": [{"oid": "5bd9abc031f1d7fc65702d9e0b3b3e3b3410361c", "url": "https://github.com/apache/skywalking/commit/5bd9abc031f1d7fc65702d9e0b3b3e3b3410361c", "message": "support in", "committedDate": "2020-08-26T09:21:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE2Nzg4MA==", "url": "https://github.com/apache/skywalking/pull/5390#discussion_r477167880", "bodyText": "I think this empty line is not required.", "author": "wu-sheng", "createdAt": "2020-08-26T09:32:34Z", "path": "oap-server/oal-rt/src/main/java/org/apache/skywalking/oal/rt/parser/ConditionExpression.java", "diffHunk": "@@ -18,18 +18,42 @@\n \n package org.apache.skywalking.oal.rt.parser;\n \n-import lombok.AllArgsConstructor;\n+import java.util.LinkedList;\n+import java.util.List;\n import lombok.Getter;\n import lombok.NoArgsConstructor;\n import lombok.Setter;\n \n @Getter\n @Setter\n @NoArgsConstructor\n-@AllArgsConstructor\n public class ConditionExpression {\n     // original from script\n     private String expressionType;\n     private String attribute;\n     private String value;\n+", "originalCommit": "5bd9abc031f1d7fc65702d9e0b3b3e3b3410361c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE3MzczNQ==", "url": "https://github.com/apache/skywalking/pull/5390#discussion_r477173735", "bodyText": "done", "author": "arugal", "createdAt": "2020-08-26T09:42:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE2Nzg4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE2OTk1Nw==", "url": "https://github.com/apache/skywalking/pull/5390#discussion_r477169957", "bodyText": "equal match support literal string?", "author": "wu-sheng", "createdAt": "2020-08-26T09:36:01Z", "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/analysis/metrics/expression/EqualMatch.java", "diffHunk": "@@ -23,6 +23,19 @@\n \n @FilterMatcher(\"stringMatch\")\n public class EqualMatch {\n+\n+    public boolean match(String left, String right) {", "originalCommit": "5bd9abc031f1d7fc65702d9e0b3b3e3b3410361c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE3MjM0Nw==", "url": "https://github.com/apache/skywalking/pull/5390#discussion_r477172347", "bodyText": "Yes, passed the unit test.\n\n  \n    \n      skywalking/oap-server/oal-rt/src/test/java/org/apache/skywalking/oal/rt/parser/ScriptParserTest.java\n    \n    \n        Lines 87 to 111\n      in\n      720c1dd\n    \n    \n    \n    \n\n        \n          \n           public void testParse3() throws IOException { \n        \n\n        \n          \n               ScriptParser parser = ScriptParser.createFromScriptText( \n        \n\n        \n          \n                   \"Endpoint_percent = from(Endpoint.*).filter(status == true).filter(name == \\\"/product/abc\\\").longAvg();\", \n        \n\n        \n          \n                   TEST_SOURCE_PACKAGE \n        \n\n        \n          \n               ); \n        \n\n        \n          \n               List<AnalysisResult> results = parser.parse().getMetricsStmts(); \n        \n\n        \n          \n            \n        \n\n        \n          \n               AnalysisResult endpointPercent = results.get(0); \n        \n\n        \n          \n               Assert.assertEquals(\"EndpointPercent\", endpointPercent.getMetricsName()); \n        \n\n        \n          \n               Assert.assertEquals(\"Endpoint\", endpointPercent.getSourceName()); \n        \n\n        \n          \n               Assert.assertEquals(\"*\", endpointPercent.getSourceAttribute()); \n        \n\n        \n          \n               Assert.assertEquals(\"longAvg\", endpointPercent.getAggregationFunctionName()); \n        \n\n        \n          \n               List<ConditionExpression> expressions = endpointPercent.getFilterExpressionsParserResult(); \n        \n\n        \n          \n            \n        \n\n        \n          \n               Assert.assertEquals(2, expressions.size()); \n        \n\n        \n          \n            \n        \n\n        \n          \n               ConditionExpression booleanMatchExp = expressions.get(0); \n        \n\n        \n          \n               Assert.assertEquals(\"status\", booleanMatchExp.getAttribute()); \n        \n\n        \n          \n               Assert.assertEquals(\"true\", booleanMatchExp.getValue()); \n        \n\n        \n          \n               Assert.assertEquals(\"booleanMatch\", booleanMatchExp.getExpressionType()); \n        \n\n        \n          \n            \n        \n\n        \n          \n               ConditionExpression stringMatchExp = expressions.get(1); \n        \n\n        \n          \n               Assert.assertEquals(\"name\", stringMatchExp.getAttribute()); \n        \n\n        \n          \n               Assert.assertEquals(\"\\\"/product/abc\\\"\", stringMatchExp.getValue()); \n        \n\n        \n          \n               Assert.assertEquals(\"stringMatch\", stringMatchExp.getExpressionType());", "author": "arugal", "createdAt": "2020-08-26T09:39:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE2OTk1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE3Mjk5Nw==", "url": "https://github.com/apache/skywalking/pull/5390#discussion_r477172997", "bodyText": "I noticed there are tests, just confirm.", "author": "wu-sheng", "createdAt": "2020-08-26T09:41:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE2OTk1Nw=="}], "type": "inlineReview"}, {"oid": "f8ab6fc33e7b492b9f508c7f845fc03d9383d46c", "url": "https://github.com/apache/skywalking/commit/f8ab6fc33e7b492b9f508c7f845fc03d9383d46c", "message": "del empty line", "committedDate": "2020-08-26T09:42:14Z", "type": "commit"}, {"oid": "1037cfa76598098ea1e632d679829574f2971c5f", "url": "https://github.com/apache/skywalking/commit/1037cfa76598098ea1e632d679829574f2971c5f", "message": "Merge branch 'master' into oal/expression", "committedDate": "2020-08-26T11:12:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzIzODI5Mw==", "url": "https://github.com/apache/skywalking/pull/5390#discussion_r477238293", "bodyText": "The minimal change is to annotate this field with @Builder.Default and give it a default value (null for example)", "author": "kezhenxu94", "createdAt": "2020-08-26T11:46:50Z", "path": "oap-server/oal-rt/src/main/java/org/apache/skywalking/oal/rt/parser/ConditionExpression.java", "diffHunk": "@@ -18,18 +18,41 @@\n \n package org.apache.skywalking.oal.rt.parser;\n \n-import lombok.AllArgsConstructor;\n+import java.util.LinkedList;\n+import java.util.List;\n import lombok.Getter;\n import lombok.NoArgsConstructor;\n import lombok.Setter;\n \n @Getter\n @Setter\n @NoArgsConstructor\n-@AllArgsConstructor\n public class ConditionExpression {\n     // original from script\n     private String expressionType;\n     private String attribute;\n     private String value;\n+    private List<String> values;", "originalCommit": "1037cfa76598098ea1e632d679829574f2971c5f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM2MDYyNw==", "url": "https://github.com/apache/skywalking/pull/5390#discussion_r477360627", "bodyText": "The values default isnull, what did I miss?", "author": "arugal", "createdAt": "2020-08-26T14:48:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzIzODI5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM5NDY3OA==", "url": "https://github.com/apache/skywalking/pull/5390#discussion_r477394678", "bodyText": "@arugal I think Zhenxu is talking about using Lombok.", "author": "wu-sheng", "createdAt": "2020-08-26T15:34:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzIzODI5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzI3NTA2MQ==", "url": "https://github.com/apache/skywalking/pull/5390#discussion_r477275061", "bodyText": "OK I made a mistake here before :(", "author": "kezhenxu94", "createdAt": "2020-08-26T12:51:09Z", "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/analysis/metrics/expression/LikeMatch.java", "diffHunk": "@@ -23,14 +23,18 @@\n @FilterMatcher\n public class LikeMatch {\n     public boolean match(String left, String right) {\n-        if (left == null || right == null) {\n+        if (right == null || left == null) {\n             return false;\n         }\n-        if (left.startsWith(\"%\") && left.endsWith(\"%\")) { // %keyword%\n-            return right.contains(left.substring(1, left.length() - 1));\n+        if (right.startsWith(\"\\\"\") && right.endsWith(\"\\\"\")) {\n+            right = right.substring(1, right.length() - 1);\n         }\n-        return (left.startsWith(\"%\") && right.endsWith(left.substring(1)))  // %suffix\n-            || (left.endsWith(\"%\") && right.startsWith(left.substring(0, left.length() - 1))) // prefix%\n+\n+        if (right.startsWith(\"%\") && right.endsWith(\"%\")) { // %keyword%\n+            return left.contains(right.substring(1, right.length() - 1));", "originalCommit": "1037cfa76598098ea1e632d679829574f2971c5f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d6b0b5a76c6ea3add4bea39e0d3aa799dfc287e0", "url": "https://github.com/apache/skywalking/commit/d6b0b5a76c6ea3add4bea39e0d3aa799dfc287e0", "message": "rename", "committedDate": "2020-08-26T14:37:09Z", "type": "commit"}, {"oid": "196c84d0519a84e054f5f90319f6c6aee955513b", "url": "https://github.com/apache/skywalking/commit/196c84d0519a84e054f5f90319f6c6aee955513b", "message": "Merge remote-tracking branch 'origin/oal/expression' into oal/expression", "committedDate": "2020-08-26T14:43:12Z", "type": "commit"}]}