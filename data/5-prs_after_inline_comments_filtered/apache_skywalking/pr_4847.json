{"pr_number": 4847, "pr_title": "Provide kafka as collector/reporter", "pr_createdAt": "2020-06-01T02:31:16Z", "pr_url": "https://github.com/apache/skywalking/pull/4847", "timeline": [{"oid": "9cedaf888b49afadd96b24402c4d438b36c8fc93", "url": "https://github.com/apache/skywalking/commit/9cedaf888b49afadd96b24402c4d438b36c8fc93", "message": "fix", "committedDate": "2020-07-28T02:47:02Z", "type": "commit"}, {"oid": "dde229232c508c24468006d5bcf936957d617b28", "url": "https://github.com/apache/skywalking/commit/dde229232c508c24468006d5bcf936957d617b28", "message": "test", "committedDate": "2020-07-28T03:55:02Z", "type": "commit"}, {"oid": "bb447cf831e48523230428496775469fca3976f1", "url": "https://github.com/apache/skywalking/commit/bb447cf831e48523230428496775469fca3976f1", "message": "test", "committedDate": "2020-07-28T06:11:58Z", "type": "commit"}, {"oid": "261dea10991b08ba3a940090d176709c79eeebc5", "url": "https://github.com/apache/skywalking/commit/261dea10991b08ba3a940090d176709c79eeebc5", "message": "e2e", "committedDate": "2020-07-28T08:01:14Z", "type": "commit"}, {"oid": "021d6b342278019f38aea3df1b0141f6eb6ca24b", "url": "https://github.com/apache/skywalking/commit/021d6b342278019f38aea3df1b0141f6eb6ca24b", "message": "fix e2e", "committedDate": "2020-07-28T09:09:58Z", "type": "commit"}, {"oid": "22b3477767a80b513a16e70857dc52af8b6e37ee", "url": "https://github.com/apache/skywalking/commit/22b3477767a80b513a16e70857dc52af8b6e37ee", "message": "separate meter process to analyzer module", "committedDate": "2020-07-28T11:26:58Z", "type": "commit"}, {"oid": "87063ef6ce89e867e0401c04db473f079f0064e5", "url": "https://github.com/apache/skywalking/commit/87063ef6ce89e867e0401c04db473f079f0064e5", "message": "checkstyle", "committedDate": "2020-07-28T11:34:32Z", "type": "commit"}, {"oid": "cf12057895bfc414c817ff18cb36ebd5a341e392", "url": "https://github.com/apache/skywalking/commit/cf12057895bfc414c817ff18cb36ebd5a341e392", "message": "fix service name", "committedDate": "2020-07-28T11:59:13Z", "type": "commit"}, {"oid": "ab1b1e47baa2693f4004dbee92972a6424e32040", "url": "https://github.com/apache/skywalking/commit/ab1b1e47baa2693f4004dbee92972a6424e32040", "message": "fix", "committedDate": "2020-07-28T15:48:57Z", "type": "commit"}, {"oid": "2177298ff495042a3d13ef0af2ea5ad5b7e2e052", "url": "https://github.com/apache/skywalking/commit/2177298ff495042a3d13ef0af2ea5ad5b7e2e052", "message": "fix profiling", "committedDate": "2020-07-28T17:14:37Z", "type": "commit"}, {"oid": "90c6e6a76a0c41248f044915a74a54b82c98dca1", "url": "https://github.com/apache/skywalking/commit/90c6e6a76a0c41248f044915a74a54b82c98dca1", "message": "fix", "committedDate": "2020-07-28T19:27:55Z", "type": "commit"}, {"oid": "cd591f7c3539c02e997f9c1f150ba08b0a6f76d0", "url": "https://github.com/apache/skywalking/commit/cd591f7c3539c02e997f9c1f150ba08b0a6f76d0", "message": "polish", "committedDate": "2020-07-29T02:34:08Z", "type": "commit"}, {"oid": "f9d72fd72e70e104ba76ce2a6ee3f8cc7142ce95", "url": "https://github.com/apache/skywalking/commit/f9d72fd72e70e104ba76ce2a6ee3f8cc7142ce95", "message": "checkstyle", "committedDate": "2020-07-29T03:29:49Z", "type": "commit"}, {"oid": "9ee9545a37c48eb4090b19753a26d355afaa3ba1", "url": "https://github.com/apache/skywalking/commit/9ee9545a37c48eb4090b19753a26d355afaa3ba1", "message": "submodule updated & fetch meter data in batch", "committedDate": "2020-07-29T04:28:56Z", "type": "commit"}, {"oid": "6344e9d924ea42cfeeb2666c7478f137a277f3e7", "url": "https://github.com/apache/skywalking/commit/6344e9d924ea42cfeeb2666c7478f137a277f3e7", "message": "checkstyle", "committedDate": "2020-07-29T06:21:31Z", "type": "commit"}, {"oid": "03fa7aa59aeb1602079d217ff8c9ede9de2a495c", "url": "https://github.com/apache/skywalking/commit/03fa7aa59aeb1602079d217ff8c9ede9de2a495c", "message": "fix profiling e2e", "committedDate": "2020-07-29T08:11:16Z", "type": "commit"}, {"oid": "07a89233061678201f1e36b33bd617b2f3e5b066", "url": "https://github.com/apache/skywalking/commit/07a89233061678201f1e36b33bd617b2f3e5b066", "message": "fix", "committedDate": "2020-07-29T09:14:57Z", "type": "commit"}, {"oid": "dc3fdd9267b985c95cf86468b0105df16bac6c75", "url": "https://github.com/apache/skywalking/commit/dc3fdd9267b985c95cf86468b0105df16bac6c75", "message": "typo", "committedDate": "2020-07-29T10:01:34Z", "type": "commit"}, {"oid": "b81d0d6e0f12c00a2067800f3a086929b3aa1eb9", "url": "https://github.com/apache/skywalking/commit/b81d0d6e0f12c00a2067800f3a086929b3aa1eb9", "message": "Merge branch 'master' into v8/devel/kafka", "committedDate": "2020-07-29T11:26:23Z", "type": "commit"}, {"oid": "adb4744713030de17d0dd3a27dc590c69b730840", "url": "https://github.com/apache/skywalking/commit/adb4744713030de17d0dd3a27dc590c69b730840", "message": "update docs", "committedDate": "2020-07-29T16:36:19Z", "type": "commit"}, {"oid": "0b90d47077addb8392a3cb1d9fb4710a54a6f20f", "url": "https://github.com/apache/skywalking/commit/0b90d47077addb8392a3cb1d9fb4710a54a6f20f", "message": "checkstyle", "committedDate": "2020-07-29T16:50:41Z", "type": "commit"}, {"oid": "1b90d2ee71e1378212df073a69225a035735153c", "url": "https://github.com/apache/skywalking/commit/1b90d2ee71e1378212df073a69225a035735153c", "message": "coverage", "committedDate": "2020-07-29T17:41:54Z", "type": "commit"}, {"oid": "5f8bfff27b7b3e7378d2b12ee6f038e1fabace18", "url": "https://github.com/apache/skywalking/commit/5f8bfff27b7b3e7378d2b12ee6f038e1fabace18", "message": "Merge branch 'master' into v8/devel/kafka", "committedDate": "2020-07-29T23:33:28Z", "type": "commit"}, {"oid": "299601f76ebdac81b4697116e301782aa0692978", "url": "https://github.com/apache/skywalking/commit/299601f76ebdac81b4697116e301782aa0692978", "message": "Update docs/en/setup/service-agent/java-agent/README.md", "committedDate": "2020-07-30T01:20:42Z", "type": "commit"}, {"oid": "be6dada18cd520e4bc9f963a6be3053d9c11d679", "url": "https://github.com/apache/skywalking/commit/be6dada18cd520e4bc9f963a6be3053d9c11d679", "message": "provide kafka as collector/reporter", "committedDate": "2020-05-31T19:22:02Z", "type": "commit"}, {"oid": "16b8f7be0c067a6acb8d25d3f34465fc4daa65b9", "url": "https://github.com/apache/skywalking/commit/16b8f7be0c067a6acb8d25d3f34465fc4daa65b9", "message": "fix typo", "committedDate": "2020-06-02T12:38:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc5NTk1Mg==", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r435795952", "bodyText": "need try catch exception and send trace data by async way? put to buffer, and consume to send by kafka, just advice.", "author": "zifeihan", "createdAt": "2020-06-05T09:17:28Z", "path": "apm-sniffer/optional-producer-plugins/kafka-producer-plugin/src/main/java/org/apache/skywalking/apm/agent/core/kafka/KafkaTraceSegmentService.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.agent.core.kafka;\n+\n+import org.apache.kafka.clients.producer.KafkaProducer;\n+import org.apache.kafka.clients.producer.ProducerRecord;\n+import org.apache.kafka.common.utils.Bytes;\n+import org.apache.skywalking.apm.agent.core.boot.BootService;\n+import org.apache.skywalking.apm.agent.core.boot.OverrideImplementor;\n+import org.apache.skywalking.apm.agent.core.boot.ServiceManager;\n+import org.apache.skywalking.apm.agent.core.conf.Config;\n+import org.apache.skywalking.apm.agent.core.context.TracingContext;\n+import org.apache.skywalking.apm.agent.core.context.TracingContextListener;\n+import org.apache.skywalking.apm.agent.core.context.trace.TraceSegment;\n+import org.apache.skywalking.apm.agent.core.logging.api.ILog;\n+import org.apache.skywalking.apm.agent.core.logging.api.LogManager;\n+import org.apache.skywalking.apm.agent.core.remote.TraceSegmentServiceClient;\n+import org.apache.skywalking.apm.network.language.agent.v3.SegmentObject;\n+\n+@OverrideImplementor(TraceSegmentServiceClient.class)\n+public class KafkaTraceSegmentService implements BootService, TracingContextListener {\n+    private static final ILog logger = LogManager.getLogger(KafkaTraceSegmentService.class);\n+\n+    private String topic;\n+    private KafkaProducer<String, Bytes> producer;\n+\n+    @Override\n+    public void prepare() throws Throwable {\n+        topic = Config.Collector.Kafka.TOPIC_SEGMENT;\n+    }\n+\n+    @Override\n+    public void boot() throws Throwable {\n+        producer = ServiceManager.INSTANCE.findService(MessageQueueServiceManagement.class).getProducer(topic);\n+    }\n+\n+    @Override\n+    public void onComplete() throws Throwable {\n+        TracingContext.ListenerManager.add(this);\n+    }\n+\n+    @Override\n+    public void shutdown() throws Throwable {\n+        TracingContext.ListenerManager.remove(this);\n+    }\n+\n+    @Override", "originalCommit": "16b8f7be0c067a6acb8d25d3f34465fc4daa65b9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTgwNTE4Mw==", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r435805183", "bodyText": "Thanks for your suggestions.\nYes, we have to catch the exception.", "author": "dmsolr", "createdAt": "2020-06-05T09:34:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc5NTk1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzExODQ2Mg==", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r443118462", "bodyText": "@dmsolr  any update?", "author": "zifeihan", "createdAt": "2020-06-20T09:58:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc5NTk1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE0NTU5Ng==", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r443145596", "bodyText": "Yes, it will be released in 8.1.0 :)", "author": "dmsolr", "createdAt": "2020-06-20T17:11:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc5NTk1Mg=="}], "type": "inlineReview"}, {"oid": "cb758d229092c00475ecfd8754712731ece9a575", "url": "https://github.com/apache/skywalking/commit/cb758d229092c00475ecfd8754712731ece9a575", "message": "Merge branch 'master' into v8/devel/kafka", "committedDate": "2020-06-19T03:43:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkxMzk1Nw==", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r443913957", "bodyText": "How are these topic(s) created?", "author": "wu-sheng", "createdAt": "2020-06-23T01:42:13Z", "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/conf/Config.java", "diffHunk": "@@ -140,6 +140,25 @@\n          * Get profile task list interval\n          */\n         public static int GET_PROFILE_TASK_INTERVAL = 20;\n+\n+        public static class Kafka {\n+\n+            public static String BOOTSTRAP_SERVERS;\n+\n+            public static int BATCH_SIZE = 1000;\n+\n+            public static String ACKS = \"1\";\n+\n+            public static String TOPIC_METRICS = \"skywalking-metrics\";\n+\n+            public static String TOPIC_PROFILING = \"skywalking-profiling\";\n+\n+            public static String TOPIC_SEGMENT = \"skywalking-segment\";\n+\n+            public static String TOPIC_MANAGEMENT = \"skywalking-management\";", "originalCommit": "cb758d229092c00475ecfd8754712731ece9a575", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU0MjA4OQ==", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r448542089", "bodyText": "If the topic not exists, Kafka will create it by itself.", "author": "dmsolr", "createdAt": "2020-07-01T18:25:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkxMzk1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkxNDEyNQ==", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r443914125", "bodyText": "Why change this? Who will create new Tracing Context?", "author": "wu-sheng", "createdAt": "2020-06-23T01:42:47Z", "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/context/TracingContext.java", "diffHunk": "@@ -116,7 +116,7 @@\n     /**\n      * Initialize all fields with default value.\n      */\n-    TracingContext(String firstOPName) {\n+    public TracingContext(String firstOPName) {", "originalCommit": "cb758d229092c00475ecfd8754712731ece9a575", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkxNDUxNQ==", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r443914515", "bodyText": "Comments are required.", "author": "wu-sheng", "createdAt": "2020-06-23T01:44:15Z", "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/jvm/JVMServiceSender.java", "diffHunk": "@@ -0,0 +1,28 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.agent.core.jvm;\n+\n+import org.apache.skywalking.apm.agent.core.boot.BootService;\n+import org.apache.skywalking.apm.network.language.agent.v3.JVMMetric;\n+\n+public interface JVMServiceSender extends BootService, Runnable {", "originalCommit": "cb758d229092c00475ecfd8754712731ece9a575", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkxNTA2Mw==", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r443915063", "bodyText": "I think this should be JVMServiceGrpcSender", "author": "wu-sheng", "createdAt": "2020-06-23T01:46:22Z", "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/jvm/JVMServiceSenderImpl.java", "diffHunk": "@@ -0,0 +1,109 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.agent.core.jvm;\n+\n+import io.grpc.Channel;\n+import java.util.LinkedList;\n+import java.util.concurrent.LinkedBlockingQueue;\n+import java.util.concurrent.TimeUnit;\n+import org.apache.skywalking.apm.agent.core.boot.DefaultImplementor;\n+import org.apache.skywalking.apm.agent.core.boot.ServiceManager;\n+import org.apache.skywalking.apm.agent.core.commands.CommandService;\n+import org.apache.skywalking.apm.agent.core.conf.Config;\n+import org.apache.skywalking.apm.agent.core.logging.api.ILog;\n+import org.apache.skywalking.apm.agent.core.logging.api.LogManager;\n+import org.apache.skywalking.apm.agent.core.remote.GRPCChannelListener;\n+import org.apache.skywalking.apm.agent.core.remote.GRPCChannelManager;\n+import org.apache.skywalking.apm.agent.core.remote.GRPCChannelStatus;\n+import org.apache.skywalking.apm.network.common.v3.Commands;\n+import org.apache.skywalking.apm.network.language.agent.v3.JVMMetric;\n+import org.apache.skywalking.apm.network.language.agent.v3.JVMMetricCollection;\n+import org.apache.skywalking.apm.network.language.agent.v3.JVMMetricReportServiceGrpc;\n+\n+import static org.apache.skywalking.apm.agent.core.conf.Config.Collector.GRPC_UPSTREAM_TIMEOUT;\n+\n+@DefaultImplementor\n+public class JVMServiceSenderImpl implements JVMServiceSender, GRPCChannelListener {", "originalCommit": "cb758d229092c00475ecfd8754712731ece9a575", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkxODYxOA==", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r443918618", "bodyText": "What does this comment mean? What Rest API? All codes below are using Kafka related tech stack. Confusing.", "author": "wu-sheng", "createdAt": "2020-06-23T01:59:38Z", "path": "apm-sniffer/optional-producer-plugins/kafka-producer-plugin/src/main/java/org/apache/skywalking/apm/agent/core/kafka/KafkaProfileTaskService.java", "diffHunk": "@@ -0,0 +1,105 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.agent.core.kafka;\n+\n+import java.util.ArrayList;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.TimeUnit;\n+import org.apache.kafka.clients.producer.KafkaProducer;\n+import org.apache.kafka.clients.producer.ProducerRecord;\n+import org.apache.kafka.common.utils.Bytes;\n+import org.apache.skywalking.apm.agent.core.boot.DefaultNamedThreadFactory;\n+import org.apache.skywalking.apm.agent.core.boot.OverrideImplementor;\n+import org.apache.skywalking.apm.agent.core.boot.ServiceManager;\n+import org.apache.skywalking.apm.agent.core.conf.Config;\n+import org.apache.skywalking.apm.agent.core.logging.api.ILog;\n+import org.apache.skywalking.apm.agent.core.logging.api.LogManager;\n+import org.apache.skywalking.apm.agent.core.profile.ProfileTaskChannelService;\n+import org.apache.skywalking.apm.agent.core.profile.TracingThreadSnapshot;\n+import org.apache.skywalking.apm.agent.core.remote.GRPCChannelManager;\n+import org.apache.skywalking.apm.network.language.profile.v3.ThreadSnapshot;\n+import org.apache.skywalking.apm.util.RunnableWithExceptionProtection;\n+\n+/**\n+ * Considering that MessageQueue belongs to a decoupled architecture, therefore we do not support this. The MQ is not\n+ * good for real-time interactive. It will be implemented through Rest API.", "originalCommit": "cb758d229092c00475ecfd8754712731ece9a575", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkyOTA5Nw==", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r443929097", "bodyText": "Ignore it, note for myself. I forgot to remove it.", "author": "dmsolr", "createdAt": "2020-06-23T02:40:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkxODYxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkxOTY5MQ==", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r443919691", "bodyText": "Comments", "author": "wu-sheng", "createdAt": "2020-06-23T02:03:29Z", "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/conf/Config.java", "diffHunk": "@@ -140,6 +140,25 @@\n          * Get profile task list interval\n          */\n         public static int GET_PROFILE_TASK_INTERVAL = 20;\n+\n+        public static class Kafka {", "originalCommit": "cb758d229092c00475ecfd8754712731ece9a575", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkyMTgyNg==", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r443921826", "bodyText": "What is this? Why is there a config not from the official way?", "author": "wu-sheng", "createdAt": "2020-06-23T02:11:39Z", "path": "apm-sniffer/optional-producer-plugins/kafka-producer-plugin/src/main/java/org/apache/skywalking/apm/agent/core/kafka/MessageQueueServiceManagement.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.agent.core.kafka;\n+\n+import java.util.Properties;\n+import org.apache.kafka.clients.producer.KafkaProducer;\n+import org.apache.kafka.clients.producer.ProducerConfig;\n+import org.apache.kafka.common.serialization.BytesSerializer;\n+import org.apache.kafka.common.serialization.StringSerializer;\n+import org.apache.kafka.common.utils.Bytes;\n+import org.apache.skywalking.apm.agent.core.boot.BootService;\n+import org.apache.skywalking.apm.agent.core.boot.DefaultImplementor;\n+import org.apache.skywalking.apm.agent.core.conf.Config;\n+import org.apache.skywalking.apm.agent.core.logging.api.ILog;\n+import org.apache.skywalking.apm.agent.core.logging.api.LogManager;\n+\n+@DefaultImplementor\n+public class MessageQueueServiceManagement implements BootService, Runnable {\n+    private static final ILog logger = LogManager.getLogger(MessageQueueServiceManagement.class);\n+    private KafkaProducer<String, Bytes> producer;\n+\n+    @Override\n+    public void prepare() {\n+        Properties properties = new Properties();\n+        properties.setProperty(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, Config.Collector.Kafka.BOOTSTRAP_SERVERS);\n+        properties.setProperty(ProducerConfig.BATCH_SIZE_CONFIG, String.valueOf(Config.Collector.Kafka.BATCH_SIZE));\n+        properties.setProperty(ProducerConfig.ACKS_CONFIG, Config.Collector.Kafka.ACKS);\n+\n+        Config.Collector.Kafka.CONSUMER_CONFIG.forEach((k, v) -> properties.setProperty(k, v));\n+\n+        if (!properties.contains(\"max.block.ms\")) {", "originalCommit": "cb758d229092c00475ecfd8754712731ece9a575", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkyMjUxMA==", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r443922510", "bodyText": "I think once you are opening receiver, this should take the responsibility of creating topic(s), right?", "author": "wu-sheng", "createdAt": "2020-06-23T02:14:20Z", "path": "oap-server/server-receiver-plugin/skywalking-mq-receiver-plugins/kafka-receiver-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/kafka/provider/KafkaReceiverProvider.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.receiver.kafka.provider;\n+\n+import lombok.extern.slf4j.Slf4j;\n+import org.apache.skywalking.oap.server.configuration.api.ConfigurationModule;\n+import org.apache.skywalking.oap.server.core.CoreModule;\n+import org.apache.skywalking.oap.server.core.cluster.ClusterModule;\n+import org.apache.skywalking.oap.server.library.module.ModuleConfig;\n+import org.apache.skywalking.oap.server.library.module.ModuleDefine;\n+import org.apache.skywalking.oap.server.library.module.ModuleProvider;\n+import org.apache.skywalking.oap.server.library.module.ModuleStartException;\n+import org.apache.skywalking.oap.server.library.module.ServiceNotProvidedException;\n+import org.apache.skywalking.oap.server.receiver.kafka.KafkaReceiveHandlerRegister;\n+import org.apache.skywalking.oap.server.receiver.kafka.module.KafkaReceiverConfig;\n+import org.apache.skywalking.oap.server.receiver.kafka.provider.handler.JVMMetricsReceiveHandler;\n+import org.apache.skywalking.oap.server.receiver.kafka.provider.handler.KafkaManagementReceiveHandler;\n+import org.apache.skywalking.oap.server.receiver.kafka.provider.handler.TraceSegmentReceiveHandler;\n+import org.apache.skywalking.oap.server.receiver.mq.ReceiveHandlerRegister;\n+import org.apache.skywalking.oap.server.receiver.mq.module.MessageQueueReceiverModule;\n+import org.apache.skywalking.oap.server.receiver.sharing.server.SharingServerModule;\n+import org.apache.skywalking.oap.server.receiver.trace.provider.TraceServiceModuleConfig;\n+import org.apache.skywalking.oap.server.receiver.trace.provider.parser.SegmentParserListenerManager;\n+import org.apache.skywalking.oap.server.receiver.trace.provider.parser.listener.MultiScopesAnalysisListener;\n+import org.apache.skywalking.oap.server.receiver.trace.provider.parser.listener.NetworkAddressAliasMappingListener;\n+import org.apache.skywalking.oap.server.receiver.trace.provider.parser.listener.SegmentAnalysisListener;\n+import org.apache.skywalking.oap.server.telemetry.TelemetryModule;\n+\n+@Slf4j\n+public class KafkaReceiverProvider extends ModuleProvider {\n+    private KafkaReceiverConfig config;\n+    private KafkaReceiveHandlerRegister handlerRegister;\n+    private TraceServiceModuleConfig traceServiceModuleConfig;\n+\n+    public KafkaReceiverProvider() {\n+        config = new KafkaReceiverConfig();\n+    }\n+\n+    @Override\n+    public String name() {\n+        return \"kafka\";\n+    }\n+\n+    @Override\n+    public Class<? extends ModuleDefine> module() {\n+        return MessageQueueReceiverModule.class;\n+    }\n+\n+    @Override\n+    public ModuleConfig createConfigBeanIfAbsent() {\n+        return config;\n+    }\n+\n+    @Override\n+    public void prepare() throws ServiceNotProvidedException, ModuleStartException {\n+        handlerRegister = new KafkaReceiveHandlerRegister(config);\n+        this.registerServiceImplementation(ReceiveHandlerRegister.class, handlerRegister);\n+    }\n+\n+    @Override\n+    public void start() throws ServiceNotProvidedException, ModuleStartException {", "originalCommit": "cb758d229092c00475ecfd8754712731ece9a575", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkzMDE5Nw==", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r443930197", "bodyText": "Kafka consumer/product will create it if not exists in default. I will recheck.", "author": "dmsolr", "createdAt": "2020-06-23T02:44:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkyMjUxMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkyMjYwNg==", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r443922606", "bodyText": "Unexpected logger,", "author": "wu-sheng", "createdAt": "2020-06-23T02:14:47Z", "path": "oap-server/server-receiver-plugin/skywalking-mq-receiver-plugins/kafka-receiver-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/kafka/provider/dispatcher/JVMSourceDispatcher.java", "diffHunk": "@@ -0,0 +1,179 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.receiver.kafka.provider.dispatcher;\n+\n+import java.util.List;\n+import org.apache.skywalking.apm.network.common.v3.CPU;\n+import org.apache.skywalking.apm.network.language.agent.v3.GC;\n+import org.apache.skywalking.apm.network.language.agent.v3.JVMMetric;\n+import org.apache.skywalking.apm.network.language.agent.v3.Memory;\n+import org.apache.skywalking.apm.network.language.agent.v3.MemoryPool;\n+import org.apache.skywalking.oap.server.core.CoreModule;\n+import org.apache.skywalking.oap.server.core.analysis.IDManager;\n+import org.apache.skywalking.oap.server.core.analysis.NodeType;\n+import org.apache.skywalking.oap.server.core.analysis.TimeBucket;\n+import org.apache.skywalking.oap.server.core.source.GCPhrase;\n+import org.apache.skywalking.oap.server.core.source.MemoryPoolType;\n+import org.apache.skywalking.oap.server.core.source.ServiceInstanceJVMCPU;\n+import org.apache.skywalking.oap.server.core.source.ServiceInstanceJVMGC;\n+import org.apache.skywalking.oap.server.core.source.ServiceInstanceJVMMemory;\n+import org.apache.skywalking.oap.server.core.source.ServiceInstanceJVMMemoryPool;\n+import org.apache.skywalking.oap.server.core.source.SourceReceiver;\n+import org.apache.skywalking.oap.server.library.module.ModuleManager;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Copy from other receiver\n+ */\n+public class JVMSourceDispatcher {\n+    private static final Logger logger = LoggerFactory.getLogger(JVMSourceDispatcher.class);", "originalCommit": "cb758d229092c00475ecfd8754712731ece9a575", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkyMzQ5MQ==", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r443923491", "bodyText": "This comment doesn't make sense. If you want to say copy, that is mostly from another project, not ourselves.", "author": "wu-sheng", "createdAt": "2020-06-23T02:18:27Z", "path": "oap-server/server-receiver-plugin/skywalking-mq-receiver-plugins/kafka-receiver-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/kafka/provider/dispatcher/JVMSourceDispatcher.java", "diffHunk": "@@ -0,0 +1,179 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.receiver.kafka.provider.dispatcher;\n+\n+import java.util.List;\n+import org.apache.skywalking.apm.network.common.v3.CPU;\n+import org.apache.skywalking.apm.network.language.agent.v3.GC;\n+import org.apache.skywalking.apm.network.language.agent.v3.JVMMetric;\n+import org.apache.skywalking.apm.network.language.agent.v3.Memory;\n+import org.apache.skywalking.apm.network.language.agent.v3.MemoryPool;\n+import org.apache.skywalking.oap.server.core.CoreModule;\n+import org.apache.skywalking.oap.server.core.analysis.IDManager;\n+import org.apache.skywalking.oap.server.core.analysis.NodeType;\n+import org.apache.skywalking.oap.server.core.analysis.TimeBucket;\n+import org.apache.skywalking.oap.server.core.source.GCPhrase;\n+import org.apache.skywalking.oap.server.core.source.MemoryPoolType;\n+import org.apache.skywalking.oap.server.core.source.ServiceInstanceJVMCPU;\n+import org.apache.skywalking.oap.server.core.source.ServiceInstanceJVMGC;\n+import org.apache.skywalking.oap.server.core.source.ServiceInstanceJVMMemory;\n+import org.apache.skywalking.oap.server.core.source.ServiceInstanceJVMMemoryPool;\n+import org.apache.skywalking.oap.server.core.source.SourceReceiver;\n+import org.apache.skywalking.oap.server.library.module.ModuleManager;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Copy from other receiver", "originalCommit": "cb758d229092c00475ecfd8754712731ece9a575", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkzMDI0MQ==", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r443930241", "bodyText": "Got it", "author": "dmsolr", "createdAt": "2020-06-23T02:44:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkyMzQ5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkyMzc5Mw==", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r443923793", "bodyText": "All handler names should be renamed to KafkaConsumer, as this is what you are doing.", "author": "wu-sheng", "createdAt": "2020-06-23T02:19:42Z", "path": "oap-server/server-receiver-plugin/skywalking-mq-receiver-plugins/kafka-receiver-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/kafka/provider/handler/JVMMetricsReceiveHandler.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.receiver.kafka.provider.handler;\n+\n+import com.google.protobuf.InvalidProtocolBufferException;\n+import lombok.extern.slf4j.Slf4j;\n+import org.apache.kafka.clients.consumer.ConsumerRecord;\n+import org.apache.kafka.common.TopicPartition;\n+import org.apache.kafka.common.utils.Bytes;\n+import org.apache.skywalking.apm.network.language.agent.v3.JVMMetricCollection;\n+import org.apache.skywalking.oap.server.core.CoreModule;\n+import org.apache.skywalking.oap.server.core.config.NamingLengthControl;\n+import org.apache.skywalking.oap.server.library.module.ModuleManager;\n+import org.apache.skywalking.oap.server.receiver.kafka.module.KafkaReceiverConfig;\n+import org.apache.skywalking.oap.server.receiver.kafka.provider.dispatcher.JVMSourceDispatcher;\n+\n+@Slf4j\n+public class JVMMetricsReceiveHandler implements KafkaReceiveHandler {", "originalCommit": "cb758d229092c00475ecfd8754712731ece9a575", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkzMDI5OA==", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r443930298", "bodyText": "OK", "author": "dmsolr", "createdAt": "2020-06-23T02:44:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkyMzc5Mw=="}], "type": "inlineReview"}, {"oid": "03061059ce22e56a20540c1bd3b46412e0a64401", "url": "https://github.com/apache/skywalking/commit/03061059ce22e56a20540c1bd3b46412e0a64401", "message": "Merge branch 'master' into v8/devel/kafka", "committedDate": "2020-07-01T18:18:45Z", "type": "commit"}, {"oid": "66421465122ad58ff947805221d72e5ff59ec60e", "url": "https://github.com/apache/skywalking/commit/66421465122ad58ff947805221d72e5ff59ec60e", "message": "polish && unit test", "committedDate": "2020-07-01T18:19:19Z", "type": "commit"}, {"oid": "bb2534cf00aaf381f6d3e228de15d526583a1ba0", "url": "https://github.com/apache/skywalking/commit/bb2534cf00aaf381f6d3e228de15d526583a1ba0", "message": "update", "committedDate": "2020-07-01T18:20:49Z", "type": "commit"}, {"oid": "7a8d837cfc07fbe993513d8f8f9618bab8bc87e5", "url": "https://github.com/apache/skywalking/commit/7a8d837cfc07fbe993513d8f8f9618bab8bc87e5", "message": "Merge branch 'v8/devel/kafka' of https://github.com/dmsolr/skywalking into v8/devel/kafka", "committedDate": "2020-07-01T18:20:54Z", "type": "commit"}, {"oid": "6d1ff444912d9c64c53aec4cecbdb2aa5d324638", "url": "https://github.com/apache/skywalking/commit/6d1ff444912d9c64c53aec4cecbdb2aa5d324638", "message": "stash", "committedDate": "2020-07-05T10:18:26Z", "type": "commit"}, {"oid": "d02e91b4f858b33a5641a00ba7ee61bfd68bba22", "url": "https://github.com/apache/skywalking/commit/d02e91b4f858b33a5641a00ba7ee61bfd68bba22", "message": "relocate kafka package", "committedDate": "2020-07-05T18:16:36Z", "type": "commit"}, {"oid": "b8ca761742b83ad80db892abd8af40ea95a014c4", "url": "https://github.com/apache/skywalking/commit/b8ca761742b83ad80db892abd8af40ea95a014c4", "message": "Merge branch 'master' into v8/devel/kafka", "committedDate": "2020-07-06T02:29:42Z", "type": "commit"}, {"oid": "ad228f279eaf8cffeccea245f25d1575d8a1ef25", "url": "https://github.com/apache/skywalking/commit/ad228f279eaf8cffeccea245f25d1575d8a1ef25", "message": "fix typo", "committedDate": "2020-07-06T03:03:11Z", "type": "commit"}, {"oid": "c1340dd0644841b4ac2fe7cf488ce777f1e9fb70", "url": "https://github.com/apache/skywalking/commit/c1340dd0644841b4ac2fe7cf488ce777f1e9fb70", "message": "fix ut", "committedDate": "2020-07-06T04:53:56Z", "type": "commit"}, {"oid": "e3fb02e9ca6b21e5f921411f40b2aad3e9d9fcb8", "url": "https://github.com/apache/skywalking/commit/e3fb02e9ca6b21e5f921411f40b2aad3e9d9fcb8", "message": "set up e2e", "committedDate": "2020-07-06T08:23:19Z", "type": "commit"}, {"oid": "22fd4430f31e79cc6cb993217226d157e175b022", "url": "https://github.com/apache/skywalking/commit/22fd4430f31e79cc6cb993217226d157e175b022", "message": "enable e2e", "committedDate": "2020-07-08T05:57:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA2MTQ4Nw==", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r452061487", "bodyText": "This should not be a service, as no one will use this out of this module", "author": "wu-sheng", "createdAt": "2020-07-09T08:46:06Z", "path": "oap-server/server-receiver-plugin/skywalking-kafka-receiver-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/kafka/KafkaReceiveHandlerRegister.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.receiver.kafka;\n+\n+import com.google.common.collect.ImmutableMap;\n+import com.google.common.collect.Lists;\n+import io.netty.util.concurrent.DefaultThreadFactory;\n+import java.time.Duration;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Properties;\n+import java.util.concurrent.Executors;\n+import lombok.extern.slf4j.Slf4j;\n+import org.apache.kafka.clients.consumer.ConsumerConfig;\n+import org.apache.kafka.clients.consumer.ConsumerRecord;\n+import org.apache.kafka.clients.consumer.ConsumerRecords;\n+import org.apache.kafka.clients.consumer.KafkaConsumer;\n+import org.apache.kafka.common.TopicPartition;\n+import org.apache.kafka.common.serialization.BytesDeserializer;\n+import org.apache.kafka.common.serialization.StringDeserializer;\n+import org.apache.kafka.common.utils.Bytes;\n+import org.apache.skywalking.oap.server.library.module.Service;\n+import org.apache.skywalking.oap.server.receiver.kafka.module.KafkaReceiverConfig;\n+import org.apache.skywalking.oap.server.receiver.kafka.provider.handler.KafkaConsumerHandler;\n+\n+/**\n+ *\n+ */\n+@Slf4j\n+public class KafkaReceiveHandlerRegister implements Service, Runnable {", "originalCommit": "22fd4430f31e79cc6cb993217226d157e175b022", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ba0906d727c1d47a6b60459d974863b17b48bb79", "url": "https://github.com/apache/skywalking/commit/ba0906d727c1d47a6b60459d974863b17b48bb79", "message": "polish", "committedDate": "2020-07-09T16:18:50Z", "type": "commit"}, {"oid": "f44e4f04a3c164af4f2e046da0ea21c6a7e76909", "url": "https://github.com/apache/skywalking/commit/f44e4f04a3c164af4f2e046da0ea21c6a7e76909", "message": "Merge branch 'master' into v8/devel/kafka", "committedDate": "2020-07-10T05:20:50Z", "type": "commit"}, {"oid": "2d3515a3a49f8e3af2be2fb81571c9e4a2739ab4", "url": "https://github.com/apache/skywalking/commit/2d3515a3a49f8e3af2be2fb81571c9e4a2739ab4", "message": "polish", "committedDate": "2020-07-10T19:27:54Z", "type": "commit"}, {"oid": "c7ef24e26fc262b0c6f3bb4e66b53edca7a3f745", "url": "https://github.com/apache/skywalking/commit/c7ef24e26fc262b0c6f3bb4e66b53edca7a3f745", "message": "polish", "committedDate": "2020-07-11T07:00:34Z", "type": "commit"}, {"oid": "34797ab0dcf2d494774dca5863748546adb70a6d", "url": "https://github.com/apache/skywalking/commit/34797ab0dcf2d494774dca5863748546adb70a6d", "message": "fix", "committedDate": "2020-07-12T09:45:27Z", "type": "commit"}, {"oid": "b4c4b2dad283cc0f2a088597ed77969011ad7060", "url": "https://github.com/apache/skywalking/commit/b4c4b2dad283cc0f2a088597ed77969011ad7060", "message": "fix", "committedDate": "2020-07-12T10:54:35Z", "type": "commit"}, {"oid": "a931cb7a63e619f3ad1a7b1bcde3a1ec8cbf1163", "url": "https://github.com/apache/skywalking/commit/a931cb7a63e619f3ad1a7b1bcde3a1ec8cbf1163", "message": "Merge branch 'master' into v8/devel/kafka", "committedDate": "2020-07-12T11:32:14Z", "type": "commit"}, {"oid": "f77e7b563f048b657415ae55156c82ad6d125f8a", "url": "https://github.com/apache/skywalking/commit/f77e7b563f048b657415ae55156c82ad6d125f8a", "message": "rename", "committedDate": "2020-07-12T15:13:06Z", "type": "commit"}, {"oid": "2a77111d7a42962dbbe24e885de195cd3b6a86aa", "url": "https://github.com/apache/skywalking/commit/2a77111d7a42962dbbe24e885de195cd3b6a86aa", "message": "Merge branch 'v8/devel/kafka' of https://github.com/dmsolr/skywalking into v8/devel/kafka", "committedDate": "2020-07-12T15:15:20Z", "type": "commit"}, {"oid": "20df41f0b02a3d4804eda186fe0916f5b63683c0", "url": "https://github.com/apache/skywalking/commit/20df41f0b02a3d4804eda186fe0916f5b63683c0", "message": "fix ci", "committedDate": "2020-07-12T17:37:36Z", "type": "commit"}, {"oid": "6e2193c1599f8627ee0648d0046aaee038d73371", "url": "https://github.com/apache/skywalking/commit/6e2193c1599f8627ee0648d0046aaee038d73371", "message": "ci", "committedDate": "2020-07-13T02:21:30Z", "type": "commit"}, {"oid": "ef03035d1110f5aea1757047aaa9b72bfedaa010", "url": "https://github.com/apache/skywalking/commit/ef03035d1110f5aea1757047aaa9b72bfedaa010", "message": "license", "committedDate": "2020-07-13T04:02:58Z", "type": "commit"}, {"oid": "3639bfc100f1b37efd96c65ca081f8cc8e152ca3", "url": "https://github.com/apache/skywalking/commit/3639bfc100f1b37efd96c65ca081f8cc8e152ca3", "message": "comments", "committedDate": "2020-07-14T03:50:44Z", "type": "commit"}, {"oid": "c50b511c029498967aea97fcf130c45948154f27", "url": "https://github.com/apache/skywalking/commit/c50b511c029498967aea97fcf130c45948154f27", "message": "fix ut", "committedDate": "2020-07-14T06:51:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI3NjUwMg==", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r454276502", "bodyText": "unused", "author": "kezhenxu94", "createdAt": "2020-07-14T11:03:32Z", "path": "oap-server/server-receiver-plugin/skywalking-kafka-receiver-plugin/src/test/java/org/apache/skywalking/oap/server/receiver/kafka/provider/SourceReceiverPoint.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.receiver.kafka.provider;\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+@Retention(RetentionPolicy.RUNTIME)\n+@Target(ElementType.FIELD)\n+public @interface SourceReceiverPoint {", "originalCommit": "c50b511c029498967aea97fcf130c45948154f27", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI4ODA2Mg==", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r454288062", "bodyText": "Do you mean conflict (instead of confirmed)?", "author": "kezhenxu94", "createdAt": "2020-07-14T11:27:23Z", "path": "oap-server/server-cluster-plugin/cluster-zookeeper-plugin/src/main/java/org/apache/skywalking/oap/server/cluster/plugin/zookeeper/ZookeeperCoordinator.java", "diffHunk": "@@ -78,6 +84,33 @@ public synchronized void registerRemote(RemoteInstance remoteInstance) throws Se\n         }\n     }\n \n+    @Override\n+    public synchronized RemoteInstance updateRemoteNodes(String serverId) throws Exception {\n+        ServiceInstance self = null;\n+        for (ServiceInstance<RemoteInstance> service : serviceCache.getInstances()) {\n+\n+            if (service.getPayload().getAddress().equals(selfAddress)) {\n+                self = service;\n+            } else if (StringUtil.isNotEmpty(serverId) && serverId.equals(service.getPayload().getServerId())) {\n+                throw new ServiceRegisterException(\"ServerId[\" + serverId + \"] confirmed\");", "originalCommit": "c50b511c029498967aea97fcf130c45948154f27", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI5MzkxNg==", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r454293916", "bodyText": "Is this class name general enough? Seems KafkaServiceManagementService has nothing to do with ServiceManagement, a little misleading (because there is another class KafkaServiceManagementService)", "author": "kezhenxu94", "createdAt": "2020-07-14T11:39:09Z", "path": "apm-sniffer/optional-reporter-plugins/kafka-reporter-plugin/src/main/java/org/apache/skywalking/apm/agent/core/kafka/KafkaServiceManagementProducer.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.agent.core.kafka;\n+\n+import java.util.Arrays;\n+import java.util.Objects;\n+import java.util.Properties;\n+import java.util.Set;\n+import java.util.concurrent.ExecutionException;\n+import java.util.stream.Collectors;\n+import org.apache.kafka.clients.admin.AdminClient;\n+import org.apache.kafka.clients.admin.DescribeTopicsResult;\n+import org.apache.kafka.clients.producer.KafkaProducer;\n+import org.apache.kafka.clients.producer.ProducerConfig;\n+import org.apache.kafka.common.serialization.BytesSerializer;\n+import org.apache.kafka.common.serialization.StringSerializer;\n+import org.apache.kafka.common.utils.Bytes;\n+import org.apache.skywalking.apm.agent.core.boot.BootService;\n+import org.apache.skywalking.apm.agent.core.boot.DefaultImplementor;\n+import org.apache.skywalking.apm.agent.core.conf.Config;\n+\n+/**\n+ *  Configuring, initializing and holding a KafkaProducer instance for reporters.\n+ */\n+@DefaultImplementor\n+public class KafkaServiceManagementProducer implements BootService, Runnable {", "originalCommit": "c50b511c029498967aea97fcf130c45948154f27", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4b4e9046991e3b6d74c025566ccc95efed4565f8", "url": "https://github.com/apache/skywalking/commit/4b4e9046991e3b6d74c025566ccc95efed4565f8", "message": "Merge branch 'master' into v8/devel/kafka", "committedDate": "2020-07-14T12:14:43Z", "type": "commit"}, {"oid": "594bbd51f70d38a8938240bfe6014812da5b2980", "url": "https://github.com/apache/skywalking/commit/594bbd51f70d38a8938240bfe6014812da5b2980", "message": "fix missing dependecies", "committedDate": "2020-07-14T12:16:21Z", "type": "commit"}, {"oid": "6148083c0c3f62790d463c0f540bdd446b0c9d4d", "url": "https://github.com/apache/skywalking/commit/6148083c0c3f62790d463c0f540bdd446b0c9d4d", "message": "update", "committedDate": "2020-07-14T18:26:08Z", "type": "commit"}, {"oid": "2534439f80c80303dec935358b8b808e228c9c66", "url": "https://github.com/apache/skywalking/commit/2534439f80c80303dec935358b8b808e228c9c66", "message": "rename", "committedDate": "2020-07-15T03:01:26Z", "type": "commit"}, {"oid": "eed50986db7c82ea5055055fe8c4e709f87906a5", "url": "https://github.com/apache/skywalking/commit/eed50986db7c82ea5055055fe8c4e709f87906a5", "message": "Merge branch 'master' into v8/devel/kafka", "committedDate": "2020-07-15T04:02:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgxNzExMg==", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r454817112", "bodyText": "I don't this is the right design, as commented above.", "author": "wu-sheng", "createdAt": "2020-07-15T06:19:17Z", "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/cluster/ClusterNodeUpdate.java", "diffHunk": "@@ -0,0 +1,27 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.core.cluster;\n+\n+import org.apache.skywalking.oap.server.library.module.Service;\n+\n+public interface ClusterNodeUpdate extends Service {", "originalCommit": "eed50986db7c82ea5055055fe8c4e709f87906a5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "142558b6c027286097760b2f879eb9bb65cff70d", "url": "https://github.com/apache/skywalking/commit/142558b6c027286097760b2f879eb9bb65cff70d", "message": "refactor", "committedDate": "2020-07-17T09:27:51Z", "type": "commit"}, {"oid": "ae665a3d7f5db0239fa6c5d1444a78340525d3bd", "url": "https://github.com/apache/skywalking/commit/ae665a3d7f5db0239fa6c5d1444a78340525d3bd", "message": "Merge branch 'v8/devel/kafka' of https://github.com/dmsolr/skywalking into v8/devel/kafka", "committedDate": "2020-07-17T09:29:57Z", "type": "commit"}, {"oid": "97ed67a13538c6b289fb2d6053f67baa488defee", "url": "https://github.com/apache/skywalking/commit/97ed67a13538c6b289fb2d6053f67baa488defee", "message": "rename", "committedDate": "2020-07-17T12:03:28Z", "type": "commit"}, {"oid": "eb074e9e108308bc285afd97fb3bb2d7c4243166", "url": "https://github.com/apache/skywalking/commit/eb074e9e108308bc285afd97fb3bb2d7c4243166", "message": "move TraceModule to analyzer-module", "committedDate": "2020-07-17T17:06:26Z", "type": "commit"}, {"oid": "63b644d6ee36130058ff4db7ac71a4bc7a9236c7", "url": "https://github.com/apache/skywalking/commit/63b644d6ee36130058ff4db7ac71a4bc7a9236c7", "message": "rename module name", "committedDate": "2020-07-17T17:08:12Z", "type": "commit"}, {"oid": "575dd22412d8e895f8b569f97b19be03d5ff4c35", "url": "https://github.com/apache/skywalking/commit/575dd22412d8e895f8b569f97b19be03d5ff4c35", "message": "Merge branch 'master' into v8/devel/kafka", "committedDate": "2020-07-18T15:58:46Z", "type": "commit"}, {"oid": "0cda7c9f224ffcc2e6dbdbf9b85ddbfee8df9c1e", "url": "https://github.com/apache/skywalking/commit/0cda7c9f224ffcc2e6dbdbf9b85ddbfee8df9c1e", "message": "update docs and remove zookeeper coordinator", "committedDate": "2020-07-20T04:20:01Z", "type": "commit"}, {"oid": "702c5cd5df1dd0fbc087dbfd042bcd05e9b56d7a", "url": "https://github.com/apache/skywalking/commit/702c5cd5df1dd0fbc087dbfd042bcd05e9b56d7a", "message": "Merge branch 'v8/devel/kafka' of https://github.com/dmsolr/skywalking into v8/devel/kafka", "committedDate": "2020-07-20T04:20:15Z", "type": "commit"}, {"oid": "1029df476cc9953a572d0cafc027eac78ad93e3f", "url": "https://github.com/apache/skywalking/commit/1029df476cc9953a572d0cafc027eac78ad93e3f", "message": "Merge branch 'master' into v8/devel/kafka", "committedDate": "2020-07-20T06:49:42Z", "type": "commit"}, {"oid": "9300f8c11e9758a1aa89fa3f9ac9ed926ca5e66a", "url": "https://github.com/apache/skywalking/commit/9300f8c11e9758a1aa89fa3f9ac9ed926ca5e66a", "message": "typo", "committedDate": "2020-07-20T09:37:56Z", "type": "commit"}, {"oid": "0393a0e692de63f7d82341b8cad840a46adc884e", "url": "https://github.com/apache/skywalking/commit/0393a0e692de63f7d82341b8cad840a46adc884e", "message": "fix", "committedDate": "2020-07-20T10:44:32Z", "type": "commit"}, {"oid": "d729044ef300dc56bf7f196b2bccb7eb1ef3dd17", "url": "https://github.com/apache/skywalking/commit/d729044ef300dc56bf7f196b2bccb7eb1ef3dd17", "message": "fix", "committedDate": "2020-07-20T12:21:38Z", "type": "commit"}, {"oid": "b413ce93da2eb5e791ddc3caf7f1fb8605253e4a", "url": "https://github.com/apache/skywalking/commit/b413ce93da2eb5e791ddc3caf7f1fb8605253e4a", "message": "typo", "committedDate": "2020-07-21T06:14:52Z", "type": "commit"}, {"oid": "990cb2227e2cd8e2662f2b7c8bbd755e7c69f7e4", "url": "https://github.com/apache/skywalking/commit/990cb2227e2cd8e2662f2b7c8bbd755e7c69f7e4", "message": "Merge branch 'master' into v8/devel/kafka", "committedDate": "2020-07-21T13:20:24Z", "type": "commit"}, {"oid": "44436221f0b3bdfd711ac419da793e6b30504dc8", "url": "https://github.com/apache/skywalking/commit/44436221f0b3bdfd711ac419da793e6b30504dc8", "message": "new config", "committedDate": "2020-07-21T13:32:44Z", "type": "commit"}, {"oid": "4d0b4915422d424ab625b24725949b04495d38ba", "url": "https://github.com/apache/skywalking/commit/4d0b4915422d424ab625b24725949b04495d38ba", "message": "profiling e2e", "committedDate": "2020-07-21T16:07:56Z", "type": "commit"}, {"oid": "a5a61fe5c40f075af52f2a00c16582de6734e5f3", "url": "https://github.com/apache/skywalking/commit/a5a61fe5c40f075af52f2a00c16582de6734e5f3", "message": "what happend?", "committedDate": "2020-07-21T17:19:27Z", "type": "commit"}, {"oid": "4b058340cad3dde1da8bc88acaab5355fbdfa99e", "url": "https://github.com/apache/skywalking/commit/4b058340cad3dde1da8bc88acaab5355fbdfa99e", "message": "Merge remote-tracking branch 'upstream/master' into kafka", "committedDate": "2020-07-22T02:23:05Z", "type": "commit"}, {"oid": "ed531793cd14afc21dd16df17ceac271d1e1eb39", "url": "https://github.com/apache/skywalking/commit/ed531793cd14afc21dd16df17ceac271d1e1eb39", "message": "Merge branch 'kafka' into v8/devel/kafka", "committedDate": "2020-07-22T02:26:01Z", "type": "commit"}, {"oid": "b57397a39e1f2e0c38446df3b91c89662d3440dd", "url": "https://github.com/apache/skywalking/commit/b57397a39e1f2e0c38446df3b91c89662d3440dd", "message": "reduce code redundancy", "committedDate": "2020-07-22T09:21:01Z", "type": "commit"}, {"oid": "2cdc365686641987789c758f2de795106b7ed4b0", "url": "https://github.com/apache/skywalking/commit/2cdc365686641987789c758f2de795106b7ed4b0", "message": "revert KafkaE2E and rename name of task", "committedDate": "2020-07-23T12:02:48Z", "type": "commit"}, {"oid": "59d20a57c10c7b234e960aa8dfe1bf2f55bdb8e7", "url": "https://github.com/apache/skywalking/commit/59d20a57c10c7b234e960aa8dfe1bf2f55bdb8e7", "message": "Merge branch 'master' into v8/devel/kafka", "committedDate": "2020-07-23T23:37:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc4Njc1Ng==", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r459786756", "bodyText": "Why do this? Your context manager should be controlled by kafka connectivity. Is that possible?", "author": "wu-sheng", "createdAt": "2020-07-23T23:42:00Z", "path": "apm-sniffer/optional-reporter-plugins/kafka-reporter-plugin/src/main/java/org/apache/skywalking/apm/agent/core/kafka/KafkaContextManagerExtendService.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.agent.core.kafka;\n+\n+import org.apache.skywalking.apm.agent.core.boot.OverrideImplementor;\n+import org.apache.skywalking.apm.agent.core.context.ContextManagerExtendService;\n+import org.apache.skywalking.apm.agent.core.remote.GRPCChannelStatus;\n+\n+/**\n+ * For compatible with {@link ContextManagerExtendService}, don't need to manage connection status by self.\n+ */\n+@OverrideImplementor(ContextManagerExtendService.class)\n+public class KafkaContextManagerExtendService extends ContextManagerExtendService {\n+\n+    @Override\n+    public void prepare() {\n+        statusChanged(GRPCChannelStatus.CONNECTED);", "originalCommit": "59d20a57c10c7b234e960aa8dfe1bf2f55bdb8e7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1c66ba76914666d36c40103f46adf572795f7970", "url": "https://github.com/apache/skywalking/commit/1c66ba76914666d36c40103f46adf572795f7970", "message": "polish", "committedDate": "2020-07-24T03:16:55Z", "type": "commit"}, {"oid": "c579a080b2c34394e84e2b0083fca14d944fc2c9", "url": "https://github.com/apache/skywalking/commit/c579a080b2c34394e84e2b0083fca14d944fc2c9", "message": "docs", "committedDate": "2020-07-24T03:18:25Z", "type": "commit"}, {"oid": "febb78a2f808386edd66501071caa88c053cd1ea", "url": "https://github.com/apache/skywalking/commit/febb78a2f808386edd66501071caa88c053cd1ea", "message": "comment", "committedDate": "2020-07-24T08:48:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkyODE5MA==", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r459928190", "bodyText": "What is this for?", "author": "wu-sheng", "createdAt": "2020-07-24T08:48:41Z", "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/cluster/RemoteInstance.java", "diffHunk": "@@ -26,8 +26,15 @@\n \n     private final Address address;\n \n+    private final String serverId;\n+\n     public RemoteInstance(Address address) {\n+        this(address, null);\n+    }\n+\n+    public RemoteInstance(Address address, String serverId) {\n         this.address = address;\n+        this.serverId = serverId;", "originalCommit": "c579a080b2c34394e84e2b0083fca14d944fc2c9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d107ad8fb8e42e4cd5c763e6da2f559837fa4221", "url": "https://github.com/apache/skywalking/commit/d107ad8fb8e42e4cd5c763e6da2f559837fa4221", "message": "remove reporter-plugins dir", "committedDate": "2020-07-24T09:31:52Z", "type": "commit"}, {"oid": "0f8a0da04278f9da40faf8e33f06d206b9570fa0", "url": "https://github.com/apache/skywalking/commit/0f8a0da04278f9da40faf8e33f06d206b9570fa0", "message": "checkstyle", "committedDate": "2020-07-24T09:34:31Z", "type": "commit"}, {"oid": "52b539363b6f5eb1cdf87e80bba268f3375d5ed4", "url": "https://github.com/apache/skywalking/commit/52b539363b6f5eb1cdf87e80bba268f3375d5ed4", "message": "Merge branch 'master' into v8/devel/kafka", "committedDate": "2020-07-24T12:09:56Z", "type": "commit"}, {"oid": "552355a85c010bd6c464c8a989ac97edfada3fcd", "url": "https://github.com/apache/skywalking/commit/552355a85c010bd6c464c8a989ac97edfada3fcd", "message": "Fix wrong package & Separate the analysis module", "committedDate": "2020-07-26T13:35:36Z", "type": "commit"}, {"oid": "02353972f4d5879c4be8e227bbf43df898ecbe3c", "url": "https://github.com/apache/skywalking/commit/02353972f4d5879c4be8e227bbf43df898ecbe3c", "message": "Merge branch 'master' into v8/devel/kafka", "committedDate": "2020-07-26T13:43:24Z", "type": "commit"}, {"oid": "bc96b267ca1ba34ee23eaece54236e34f733e24a", "url": "https://github.com/apache/skywalking/commit/bc96b267ca1ba34ee23eaece54236e34f733e24a", "message": "meter reporeter and fetcher", "committedDate": "2020-07-26T18:18:20Z", "type": "commit"}, {"oid": "cc23fbaae8486db220c62a8ea0e3ae0f0a1827b5", "url": "https://github.com/apache/skywalking/commit/cc23fbaae8486db220c62a8ea0e3ae0f0a1827b5", "message": "Update apm-sniffer/config/agent.config\n\nCo-authored-by: \u5434\u665f Wu Sheng <wu.sheng@foxmail.com>", "committedDate": "2020-07-26T18:55:10Z", "type": "commit"}, {"oid": "99410fa734ca6f61997ec62f5d9c8ed62497334a", "url": "https://github.com/apache/skywalking/commit/99410fa734ca6f61997ec62f5d9c8ed62497334a", "message": "Update docs/en/setup/service-agent/java-agent/How-to-enable-kafka-reporter.md\n\nCo-authored-by: \u5434\u665f Wu Sheng <wu.sheng@foxmail.com>", "committedDate": "2020-07-26T18:55:25Z", "type": "commit"}, {"oid": "306a853c18d3b86413221b4580599e83efac55ab", "url": "https://github.com/apache/skywalking/commit/306a853c18d3b86413221b4580599e83efac55ab", "message": "Update docs/en/setup/backend/backend-fetcher.md\n\nCo-authored-by: \u5434\u665f Wu Sheng <wu.sheng@foxmail.com>", "committedDate": "2020-07-26T18:55:51Z", "type": "commit"}, {"oid": "5495e6f230e4a544ce2b9c28d079cbd987f9f0ee", "url": "https://github.com/apache/skywalking/commit/5495e6f230e4a544ce2b9c28d079cbd987f9f0ee", "message": "Update docs/en/setup/backend/backend-fetcher.md\n\nCo-authored-by: \u5434\u665f Wu Sheng <wu.sheng@foxmail.com>", "committedDate": "2020-07-26T18:56:07Z", "type": "commit"}, {"oid": "3fb2227a4613b9a146527f0141eba522321eafde", "url": "https://github.com/apache/skywalking/commit/3fb2227a4613b9a146527f0141eba522321eafde", "message": "Update docs/en/setup/backend/backend-fetcher.md\n\nCo-authored-by: \u5434\u665f Wu Sheng <wu.sheng@foxmail.com>", "committedDate": "2020-07-26T18:56:26Z", "type": "commit"}, {"oid": "506844cf3225ab8062d8cc61f2ef099133b527c2", "url": "https://github.com/apache/skywalking/commit/506844cf3225ab8062d8cc61f2ef099133b527c2", "message": "enable e2e", "committedDate": "2020-07-26T18:58:21Z", "type": "commit"}, {"oid": "500059130ed01a671f57241f2402c472aa15cb8d", "url": "https://github.com/apache/skywalking/commit/500059130ed01a671f57241f2402c472aa15cb8d", "message": "typo", "committedDate": "2020-07-26T19:00:51Z", "type": "commit"}, {"oid": "a0f0b0332d5a760b46ecbc3e4bd1af46602cc268", "url": "https://github.com/apache/skywalking/commit/a0f0b0332d5a760b46ecbc3e4bd1af46602cc268", "message": "fix typo", "committedDate": "2020-07-27T03:17:20Z", "type": "commit"}, {"oid": "3868983f98eaf04ce277543b44085cb65c1715cd", "url": "https://github.com/apache/skywalking/commit/3868983f98eaf04ce277543b44085cb65c1715cd", "message": "Merge branch 'master' into v8/devel/kafka", "committedDate": "2020-07-27T06:37:43Z", "type": "commit"}, {"oid": "1d3df0086f6d2143f363c1b657067649ad2c6562", "url": "https://github.com/apache/skywalking/commit/1d3df0086f6d2143f363c1b657067649ad2c6562", "message": "fix configuration", "committedDate": "2020-07-27T07:41:13Z", "type": "commit"}, {"oid": "b95fc220b17d4dd79ff879c5a2665e3e27a0d5d1", "url": "https://github.com/apache/skywalking/commit/b95fc220b17d4dd79ff879c5a2665e3e27a0d5d1", "message": "checkstyl", "committedDate": "2020-07-27T08:01:48Z", "type": "commit"}, {"oid": "d637b05af1fb15549ae0cfd75d9dba0309cdf9ea", "url": "https://github.com/apache/skywalking/commit/d637b05af1fb15549ae0cfd75d9dba0309cdf9ea", "message": "move meter config to analyzer module", "committedDate": "2020-07-27T09:19:08Z", "type": "commit"}, {"oid": "8b174a171e6956c10c48b68af587b52a7ea7eaac", "url": "https://github.com/apache/skywalking/commit/8b174a171e6956c10c48b68af587b52a7ea7eaac", "message": "fix ut", "committedDate": "2020-07-27T10:10:07Z", "type": "commit"}, {"oid": "48ac4ab282613e1d27a4df46f3c10fc41d58ffdd", "url": "https://github.com/apache/skywalking/commit/48ac4ab282613e1d27a4df46f3c10fc41d58ffdd", "message": "update docs", "committedDate": "2020-07-27T12:46:37Z", "type": "commit"}, {"oid": "a962e85b777a43baadf657937e9d44cd6fe8d1fd", "url": "https://github.com/apache/skywalking/commit/a962e85b777a43baadf657937e9d44cd6fe8d1fd", "message": "fix ut", "committedDate": "2020-07-27T12:57:52Z", "type": "commit"}, {"oid": "2e719655ae130e18f54b0031bb316b1754d52646", "url": "https://github.com/apache/skywalking/commit/2e719655ae130e18f54b0031bb316b1754d52646", "message": "checkstyle", "committedDate": "2020-07-27T13:03:00Z", "type": "commit"}, {"oid": "1fd4b68c929171d7368eff0811676a6f0118ebc9", "url": "https://github.com/apache/skywalking/commit/1fd4b68c929171d7368eff0811676a6f0118ebc9", "message": "fix e2e", "committedDate": "2020-07-27T16:53:38Z", "type": "commit"}, {"oid": "98a8c33b578a97ddcb48dc817b798065db5bfeca", "url": "https://github.com/apache/skywalking/commit/98a8c33b578a97ddcb48dc817b798065db5bfeca", "message": "Merge branch 'v8/devel/kafka' of https://github.com/dmsolr/skywalking into v8/devel/kafka", "committedDate": "2020-07-27T16:54:11Z", "type": "commit"}, {"oid": "60605033a76ec7ecad4eed8fdfe5fd69dddba9e5", "url": "https://github.com/apache/skywalking/commit/60605033a76ec7ecad4eed8fdfe5fd69dddba9e5", "message": "fix", "committedDate": "2020-07-27T19:06:09Z", "type": "commit"}, {"oid": "3c4bd4b8f6dd95876ddc034a2c02bcce023b177f", "url": "https://github.com/apache/skywalking/commit/3c4bd4b8f6dd95876ddc034a2c02bcce023b177f", "message": "checkstyle", "committedDate": "2020-07-27T19:37:42Z", "type": "commit"}, {"oid": "f2d28955463fb765d98037483b753ed6028ba79f", "url": "https://github.com/apache/skywalking/commit/f2d28955463fb765d98037483b753ed6028ba79f", "message": "fix", "committedDate": "2020-07-27T19:41:16Z", "type": "commit"}, {"oid": "eb1303ed5de3478d0d3135fe6d4cd66b47a64af3", "url": "https://github.com/apache/skywalking/commit/eb1303ed5de3478d0d3135fe6d4cd66b47a64af3", "message": "Merge branch 'master' into v8/devel/kafka", "committedDate": "2020-07-27T23:28:42Z", "type": "commit"}]}