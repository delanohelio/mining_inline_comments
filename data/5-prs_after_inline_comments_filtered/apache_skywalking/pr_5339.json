{"pr_number": 5339, "pr_title": "Add support for spring @Scheduled", "pr_createdAt": "2020-08-17T16:45:40Z", "pr_url": "https://github.com/apache/skywalking/pull/5339", "timeline": [{"oid": "793cacfa8c7e95dd4ee5b7a7dc13850abc648389", "url": "https://github.com/apache/skywalking/commit/793cacfa8c7e95dd4ee5b7a7dc13850abc648389", "message": "Merge pull request #1 from apache/master\n\npull request", "committedDate": "2020-08-17T15:11:54Z", "type": "commit"}, {"oid": "7f6bba6a27a0ba0ccb41c639f0002e5276b7de3a", "url": "https://github.com/apache/skywalking/commit/7f6bba6a27a0ba0ccb41c639f0002e5276b7de3a", "message": "Support spring @Scheduled annotation", "committedDate": "2020-08-17T16:25:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg3NzY0NA==", "url": "https://github.com/apache/skywalking/pull/5339#discussion_r471877644", "bodyText": "This is just a local scheduler task, not an entry. Please read the plugin dev document. This should be a local span. Could you share why you put this as Entry Span?", "author": "wu-sheng", "createdAt": "2020-08-18T02:31:14Z", "path": "apm-sniffer/apm-sdk-plugin/spring-plugins/scheduled-annotation-plugin/src/main/java/org/apache/skywalking/apm/plugin/spring/scheduled/ScheduledMethodInterceptor.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.plugin.spring.scheduled;\n+\n+import org.apache.skywalking.apm.agent.core.context.ContextCarrier;\n+import org.apache.skywalking.apm.agent.core.context.ContextManager;\n+import org.apache.skywalking.apm.agent.core.context.trace.AbstractSpan;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.EnhancedInstance;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstanceConstructorInterceptor;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstanceMethodsAroundInterceptor;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.MethodInterceptResult;\n+import org.apache.skywalking.apm.network.trace.component.ComponentsDefine;\n+\n+import java.lang.reflect.Method;\n+\n+public class ScheduledMethodInterceptor implements InstanceMethodsAroundInterceptor, InstanceConstructorInterceptor {\n+\n+    private static final String DEFAULT_OPERATION_NAME = \"SpringScheduled\";\n+\n+    @Override\n+    public void beforeMethod(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes, MethodInterceptResult result) throws Throwable {\n+        String targetMethodName = (String) objInst.getSkyWalkingDynamicField();\n+        String operationName = targetMethodName != null ? targetMethodName : DEFAULT_OPERATION_NAME;\n+\n+        AbstractSpan span = ContextManager.createEntrySpan(operationName, new ContextCarrier());", "originalCommit": "7f6bba6a27a0ba0ccb41c639f0002e5276b7de3a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTkyODI0Nw==", "url": "https://github.com/apache/skywalking/pull/5339#discussion_r471928247", "bodyText": "Thank you, I will read the plugin dev document.\nI referenced elasticjob plugin", "author": "hailin0", "createdAt": "2020-08-18T05:46:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg3NzY0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTkyOTU3OA==", "url": "https://github.com/apache/skywalking/pull/5339#discussion_r471929578", "bodyText": "If it is an entry, then it is a bug. Could you confirm? If yes. please send a pull request to fix.\nAnd if you want to analysis the performance of the job, consider to use logic endpoint tag, which is also included in the dev doc, too.", "author": "wu-sheng", "createdAt": "2020-08-18T05:50:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg3NzY0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTk5NzMwNA==", "url": "https://github.com/apache/skywalking/pull/5339#discussion_r471997304", "bodyText": "@zhaoyuguang Please recheck the ElasticJob plugin too.", "author": "wu-sheng", "createdAt": "2020-08-18T08:12:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg3NzY0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjAxNDkwNQ==", "url": "https://github.com/apache/skywalking/pull/5339#discussion_r472014905", "bodyText": "@zhaoyuguang Please recheck the ElasticJob plugin too.\n\nWell, I'm using it the wrong way", "author": "zhaoyuguang", "createdAt": "2020-08-18T08:41:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg3NzY0NA=="}], "type": "inlineReview"}, {"oid": "0c2f1758c715ec93f00db8e98cf5a5989dec34d1", "url": "https://github.com/apache/skywalking/commit/0c2f1758c715ec93f00db8e98cf5a5989dec34d1", "message": "Merge pull request #2 from apache/master\n\nMerge", "committedDate": "2020-08-18T16:23:26Z", "type": "commit"}, {"oid": "eb48bc078eb1c29b2b3dae14a4fedb2aa9cbcc65", "url": "https://github.com/apache/skywalking/commit/eb48bc078eb1c29b2b3dae14a4fedb2aa9cbcc65", "message": "fixed", "committedDate": "2020-08-18T16:58:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU2NjQ3NA==", "url": "https://github.com/apache/skywalking/pull/5339#discussion_r472566474", "bodyText": "Could you move this into Tags as more plugins are going to use this? And name this as VAL_LOCAL_SPAN_AS_LOGIC_ENDPOINT\u00b7", "author": "wu-sheng", "createdAt": "2020-08-19T00:29:45Z", "path": "apm-sniffer/apm-sdk-plugin/spring-plugins/scheduled-annotation-plugin/src/main/java/org/apache/skywalking/apm/plugin/spring/scheduled/ScheduledMethodInterceptor.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.plugin.spring.scheduled;\n+\n+import org.apache.skywalking.apm.agent.core.context.ContextManager;\n+import org.apache.skywalking.apm.agent.core.context.tag.Tags;\n+import org.apache.skywalking.apm.agent.core.context.trace.AbstractSpan;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.EnhancedInstance;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstanceConstructorInterceptor;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstanceMethodsAroundInterceptor;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.MethodInterceptResult;\n+import org.apache.skywalking.apm.network.trace.component.ComponentsDefine;\n+\n+import java.lang.reflect.Method;\n+\n+public class ScheduledMethodInterceptor implements InstanceMethodsAroundInterceptor, InstanceConstructorInterceptor {\n+\n+    private static final String DEFAULT_OPERATION_NAME = \"SpringScheduled\";\n+    private static final String DEFAULT_LOGIC_ENDPOINT_CONTENT = \"{\\\"logic-span\\\":true}\";", "originalCommit": "eb48bc078eb1c29b2b3dae14a4fedb2aa9cbcc65", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU5MjIwOQ==", "url": "https://github.com/apache/skywalking/pull/5339#discussion_r472592209", "bodyText": "Add logic endpoint into others plugin\uff1fI could try", "author": "hailin0", "createdAt": "2020-08-19T02:04:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU2NjQ3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjYxMjMzMQ==", "url": "https://github.com/apache/skywalking/pull/5339#discussion_r472612331", "bodyText": "Move this value constant into the Tags(core class), and do a little refactor to GraphQL plugin, by sharing this new constant", "author": "wu-sheng", "createdAt": "2020-08-19T02:43:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU2NjQ3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjY1MDAxMQ==", "url": "https://github.com/apache/skywalking/pull/5339#discussion_r472650011", "bodyText": "ok", "author": "hailin0", "createdAt": "2020-08-19T03:44:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU2NjQ3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjk5NDczMA==", "url": "https://github.com/apache/skywalking/pull/5339#discussion_r472994730", "bodyText": "This has been done in #5347", "author": "wu-sheng", "createdAt": "2020-08-19T12:35:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU2NjQ3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjk5NDkxNQ==", "url": "https://github.com/apache/skywalking/pull/5339#discussion_r472994915", "bodyText": "I will merge that soon, please update the codes after that.", "author": "wu-sheng", "createdAt": "2020-08-19T12:36:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU2NjQ3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU2NzA4OA==", "url": "https://github.com/apache/skywalking/pull/5339#discussion_r472567088", "bodyText": "Instanceof is not recommended in the interceptor. Usually, we set up two instrumentation for constructures with different parameters(if necessary)", "author": "wu-sheng", "createdAt": "2020-08-19T00:32:04Z", "path": "apm-sniffer/apm-sdk-plugin/spring-plugins/scheduled-annotation-plugin/src/main/java/org/apache/skywalking/apm/plugin/spring/scheduled/ScheduledMethodInterceptor.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.plugin.spring.scheduled;\n+\n+import org.apache.skywalking.apm.agent.core.context.ContextManager;\n+import org.apache.skywalking.apm.agent.core.context.tag.Tags;\n+import org.apache.skywalking.apm.agent.core.context.trace.AbstractSpan;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.EnhancedInstance;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstanceConstructorInterceptor;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstanceMethodsAroundInterceptor;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.MethodInterceptResult;\n+import org.apache.skywalking.apm.network.trace.component.ComponentsDefine;\n+\n+import java.lang.reflect.Method;\n+\n+public class ScheduledMethodInterceptor implements InstanceMethodsAroundInterceptor, InstanceConstructorInterceptor {\n+\n+    private static final String DEFAULT_OPERATION_NAME = \"SpringScheduled\";\n+    private static final String DEFAULT_LOGIC_ENDPOINT_CONTENT = \"{\\\"logic-span\\\":true}\";\n+\n+    @Override\n+    public void beforeMethod(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes, MethodInterceptResult result) throws Throwable {\n+        String targetMethodName = (String) objInst.getSkyWalkingDynamicField();\n+        String operationName = targetMethodName != null ? targetMethodName : DEFAULT_OPERATION_NAME;\n+\n+        AbstractSpan span = ContextManager.createLocalSpan(operationName);\n+        Tags.LOGIC_ENDPOINT.set(span, DEFAULT_LOGIC_ENDPOINT_CONTENT);\n+        span.setComponent(ComponentsDefine.SPRING_SCHEDULED);\n+    }\n+\n+    @Override\n+    public Object afterMethod(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes, Object ret) throws Throwable {\n+        ContextManager.stopSpan();\n+        return ret;\n+    }\n+\n+    @Override\n+    public void handleMethodException(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes, Throwable t) {\n+        ContextManager.activeSpan().errorOccurred().log(t);\n+    }\n+\n+    @Override\n+    public void onConstruct(EnhancedInstance objInst, Object[] allArguments) throws Throwable {\n+        Object targetMethod = allArguments[1];\n+        String targetMethodName = getTargetMethodName(targetMethod);\n+\n+        objInst.setSkyWalkingDynamicField(targetMethodName);\n+    }\n+\n+    private String getTargetMethodName(Object targetMethod) {\n+        if (targetMethod instanceof String) {", "originalCommit": "eb48bc078eb1c29b2b3dae14a4fedb2aa9cbcc65", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg5ODE1NQ==", "url": "https://github.com/apache/skywalking/pull/5339#discussion_r472898155", "bodyText": "@hailin0, I think I got @zhaoyuguang 's point as he DM me.\nThis bean has @Component already, so, why this method wouldn't work? I think Spring annotation plugin tracing all methods of the bean. Unless you only want to activate this, rather than other beans?", "author": "wu-sheng", "createdAt": "2020-08-19T09:36:50Z", "path": "test/plugin/scenarios/spring-scheduled-scenario/src/main/java/org/apache/skywalking/apm/testcase/spring/scheduled/job/SchedulingJob.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.testcase.spring.scheduled.job;\n+\n+import okhttp3.OkHttpClient;\n+import okhttp3.Request;\n+import okhttp3.Response;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.springframework.scheduling.annotation.EnableScheduling;\n+import org.springframework.scheduling.annotation.Scheduled;\n+import org.springframework.stereotype.Component;\n+\n+import java.io.IOException;\n+\n+@Component\n+@EnableScheduling\n+public class SchedulingJob {\n+\n+    private static final Logger logger = LogManager.getLogger(SchedulingJob.class);\n+    \n+    private static final OkHttpClient client = new OkHttpClient.Builder().build();\n+\n+    @Scheduled(fixedDelay = 5000)", "originalCommit": "eb48bc078eb1c29b2b3dae14a4fedb2aa9cbcc65", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzAwMDM3NQ==", "url": "https://github.com/apache/skywalking/pull/5339#discussion_r473000375", "bodyText": "I found some bugs...  @wu-sheng\nExpected to be normal when I use @configuration\n\n\nDuplicate tracing occurs when I use @component", "author": "hailin0", "createdAt": "2020-08-19T12:45:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg5ODE1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzAwNDE5NA==", "url": "https://github.com/apache/skywalking/pull/5339#discussion_r473004194", "bodyText": "Maybe the @scheduled method should be filtered out in spring-annotation-plugi.\n\n@scheduled is not an optional plugin\nspring-scheduler can be started through xml configuration files instead of just annotations\n\n<bean id=\"myJob\" class=\"org.example.Job\" />\n\n<task:scheduled-tasks scheduler=\"myScheduler\">  \n    <task:scheduled ref=\"myJob\" method=\"work1\" cron=\"0 0/10 * * * ?\"/>  \n</task:scheduled-tasks>  \n<task:scheduler id=\"myScheduler\" pool-size=\"1\"/>\nHow do you think about it ?", "author": "hailin0", "createdAt": "2020-08-19T12:51:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg5ODE1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzAzMjA4Mw==", "url": "https://github.com/apache/skywalking/pull/5339#discussion_r473032083", "bodyText": "The first one is easy to explain, we don't watch the configuration. The second one is not clear, why Duplicate tracing occurs when I use @component? Who will trace twice?", "author": "wu-sheng", "createdAt": "2020-08-19T13:33:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg5ODE1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzAzMzI5OA==", "url": "https://github.com/apache/skywalking/pull/5339#discussion_r473033298", "bodyText": "Does this duplicated tracing cause by this new plugin with @component?", "author": "wu-sheng", "createdAt": "2020-08-19T13:34:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg5ODE1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzAzNjE0Mg==", "url": "https://github.com/apache/skywalking/pull/5339#discussion_r473036142", "bodyText": "Note, I know this plugin should be useful at some points, but I need to make it clear.", "author": "wu-sheng", "createdAt": "2020-08-19T13:38:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg5ODE1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzAzNjkzMg==", "url": "https://github.com/apache/skywalking/pull/5339#discussion_r473036932", "bodyText": "The first one is easy to explain, we don't watch the configuration. The second one is not clear, why Duplicate tracing occurs when I use @component? Who will trace twice?\n\nspring-scheduled-annotation-plugin trace once\nthen spring-annotation-plugin(optional-plugin) trace it again", "author": "hailin0", "createdAt": "2020-08-19T13:39:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg5ODE1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA0NjIwMQ==", "url": "https://github.com/apache/skywalking/pull/5339#discussion_r473046201", "bodyText": "OK, seems byte-buddy added some features. FYI @apache/skywalking-committers. It used to can't instrument a class twice, but this test proved it is not the case today.", "author": "wu-sheng", "createdAt": "2020-08-19T13:52:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg5ODE1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA0ODMwNg==", "url": "https://github.com/apache/skywalking/pull/5339#discussion_r473048306", "bodyText": "According to the official doc, https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/context/annotation/Configuration.html\n@Configuration should only be used for @Bean. Is there abuse? I am not working on Spring for a long time, could you explain more about the use case.", "author": "wu-sheng", "createdAt": "2020-08-19T13:55:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg5ODE1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA2MTQ3Mw==", "url": "https://github.com/apache/skywalking/pull/5339#discussion_r473061473", "bodyText": "According to the official doc, https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/context/annotation/Configuration.html\n@Configuration should only be used for @Bean. Is there abuse? I am not working on Spring for a long time, could you explain more about the use case.\n\nThe document describes  @Configuration and @Scheduled can be used together\nhttps://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/scheduling/annotation/EnableScheduling.html", "author": "hailin0", "createdAt": "2020-08-19T14:13:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg5ODE1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA2MzE1MA==", "url": "https://github.com/apache/skywalking/pull/5339#discussion_r473063150", "bodyText": "@configuration and @scheduled can be used together\n\nYes, but with component is the right usage?", "author": "wu-sheng", "createdAt": "2020-08-19T14:15:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg5ODE1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA2NjQxNw==", "url": "https://github.com/apache/skywalking/pull/5339#discussion_r473066417", "bodyText": "@configuration and @scheduled can be used together\n\nYes, but with component is the right usage?\n\nThe document indicates that @Component and @Scheduled can also be used together", "author": "hailin0", "createdAt": "2020-08-19T14:20:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg5ODE1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA2ODk0Mw==", "url": "https://github.com/apache/skywalking/pull/5339#discussion_r473068943", "bodyText": "@configuration and @scheduled can be used together\n\nYes, but with component is the right usage?\n\nThe document indicates that @Component and @Scheduled can also be used together\n\nDuplicate tracing occurs when @Component and @Scheduled are used together", "author": "hailin0", "createdAt": "2020-08-19T14:23:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg5ODE1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA3Njk0OQ==", "url": "https://github.com/apache/skywalking/pull/5339#discussion_r473076949", "bodyText": "This is a tricky point, I think maybe you should consider put this plugin as optional too. And add a FAQ doc to describe these cases, and provide recommended solutions.", "author": "wu-sheng", "createdAt": "2020-08-19T14:33:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg5ODE1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA4NjE5NQ==", "url": "https://github.com/apache/skywalking/pull/5339#discussion_r473086195", "bodyText": "OK\uff0ci have a try", "author": "hailin0", "createdAt": "2020-08-19T14:45:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg5ODE1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA5MjgxOQ==", "url": "https://github.com/apache/skywalking/pull/5339#discussion_r473092819", "bodyText": "I need to set it's an optional plugin? spring-annotation-plugin is already in optional list", "author": "hailin0", "createdAt": "2020-08-19T14:54:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg5ODE1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzEzMzI3Mw==", "url": "https://github.com/apache/skywalking/pull/5339#discussion_r473133273", "bodyText": "Do you think there is a problem with using @Component and @Async generate two spans?\nIt seems that @Component, @Scheduled and @Component, @Async are similar scenarios.\nMaybe we should keep the status quo and use SpringScheduled as a operationName.\ne.g.\nno added spring-annotation-plugin\n\nadded spring-annotation-plugin", "author": "hailin0", "createdAt": "2020-08-19T15:51:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg5ODE1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ2NzAzMA==", "url": "https://github.com/apache/skywalking/pull/5339#discussion_r473467030", "bodyText": "I need to set it's an optional plugin?\n\nI mean this scheduled plugin.\n\nMaybe we should keep the status quo and use SpringScheduled as a operationName.\n\nYou could have two, but only SpringScheduled as an OP name(also will be an endpoint) is not a good idea, you could use SpringScheduled- + full class name + method name as a better operation name. Because from the analysis perspective you need a meaningful name.", "author": "wu-sheng", "createdAt": "2020-08-20T00:20:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg5ODE1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzUyMzEyOA==", "url": "https://github.com/apache/skywalking/pull/5339#discussion_r473523128", "bodyText": "You could have two, but only SpringScheduled as an OP name(also will be an endpoint) is not a good idea, you could use SpringScheduled- + full class name + method name as a better operation name. Because from the analysis perspective you need a meaningful name.\n\nYes, I agree with you.\nSo, are these the final conclusions?\n\nspring-scheduled-annotation-plugin is not an optional plugin\nuse SpringScheduled- + full class name + method name as a better operation name.", "author": "hailin0", "createdAt": "2020-08-20T01:47:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg5ODE1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU0Njg5Ng==", "url": "https://github.com/apache/skywalking/pull/5339#discussion_r473546896", "bodyText": "Yes, agree.", "author": "wu-sheng", "createdAt": "2020-08-20T02:24:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg5ODE1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDYwNzYyNg==", "url": "https://github.com/apache/skywalking/pull/5339#discussion_r474607626", "bodyText": "verify failed. the master code seems to have changes", "author": "hailin0", "createdAt": "2020-08-21T10:15:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg5ODE1NQ=="}], "type": "inlineReview"}, {"oid": "e1bde9dbb8e986a95f35908b006a40b160957b5b", "url": "https://github.com/apache/skywalking/commit/e1bde9dbb8e986a95f35908b006a40b160957b5b", "message": "Merge branch 'master' into spring-scheduled-plugin", "committedDate": "2020-08-19T13:38:44Z", "type": "commit"}, {"oid": "17429f24f1c43a5d3688bad6b206c1c23ff25a9f", "url": "https://github.com/apache/skywalking/commit/17429f24f1c43a5d3688bad6b206c1c23ff25a9f", "message": "Merge branch 'master' into spring-scheduled-plugin", "committedDate": "2020-08-20T07:16:08Z", "type": "commit"}, {"oid": "15a5c58971258e12be255740913af05d972e3051", "url": "https://github.com/apache/skywalking/commit/15a5c58971258e12be255740913af05d972e3051", "message": "fixed", "committedDate": "2020-08-20T16:15:55Z", "type": "commit"}, {"oid": "24271551a80ede646d43dc053ee283c384e5fb85", "url": "https://github.com/apache/skywalking/commit/24271551a80ede646d43dc053ee283c384e5fb85", "message": "Merge branch 'master' into spring-scheduled-plugin", "committedDate": "2020-08-21T16:02:35Z", "type": "commit"}, {"oid": "858f9472e67182aa3dfca74d3ffc81e4a6fa6a65", "url": "https://github.com/apache/skywalking/commit/858f9472e67182aa3dfca74d3ffc81e4a6fa6a65", "message": "Merge branch 'master' into spring-scheduled-plugin", "committedDate": "2020-08-22T10:19:12Z", "type": "commit"}, {"oid": "74a1f3c452f9ddb13db6cf75cbec571332f1b608", "url": "https://github.com/apache/skywalking/commit/74a1f3c452f9ddb13db6cf75cbec571332f1b608", "message": "fixed", "committedDate": "2020-08-22T16:53:16Z", "type": "commit"}, {"oid": "acac5fcb9f796a0e5902ce644a97481183c28963", "url": "https://github.com/apache/skywalking/commit/acac5fcb9f796a0e5902ce644a97481183c28963", "message": "Merge branch 'master' into spring-scheduled-plugin", "committedDate": "2020-08-23T08:15:51Z", "type": "commit"}]}