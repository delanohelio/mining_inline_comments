{"pr_number": 5616, "pr_title": "fix RESOURCE_LEAK", "pr_createdAt": "2020-10-01T06:19:24Z", "pr_url": "https://github.com/apache/skywalking/pull/5616", "timeline": [{"oid": "e77744a5a13c070b0a44133140acd395562f269a", "url": "https://github.com/apache/skywalking/commit/e77744a5a13c070b0a44133140acd395562f269a", "message": "fix RESOURCE_LEAK\n\nuse  try-with-resources", "committedDate": "2020-10-01T06:18:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODI5NDQ4MA==", "url": "https://github.com/apache/skywalking/pull/5616#discussion_r498294480", "bodyText": "It is closed in L50.", "author": "dmsolr", "createdAt": "2020-10-01T14:36:15Z", "path": "apm-sniffer/optional-plugins/trace-ignore-plugin/src/main/java/org/apache/skywalking/apm/plugin/trace/ignore/conf/IgnoreConfigInitializer.java", "diffHunk": "@@ -89,10 +88,12 @@ private static void overrideConfigBySystemProp() throws IllegalAccessException {\n     private static InputStream loadConfigFromAgentFolder() throws AgentPackageNotFoundException, ConfigNotFoundException {\n         File configFile = new File(AgentPackagePath.getPath(), CONFIG_FILE_NAME);\n         if (configFile.exists() && configFile.isFile()) {\n-            try {\n+            try(var configFileStream = new FileInputStream(configFile)) {", "originalCommit": "e77744a5a13c070b0a44133140acd395562f269a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM4MTk3Mw==", "url": "https://github.com/apache/skywalking/pull/5616#discussion_r498381973", "bodyText": "ok, is false positive.", "author": "x22x22", "createdAt": "2020-10-01T16:44:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODI5NDQ4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODI5NDc3NA==", "url": "https://github.com/apache/skywalking/pull/5616#discussion_r498294774", "bodyText": "JarFile need to be resident in memory. @wu-sheng @acurtain", "author": "dmsolr", "createdAt": "2020-10-01T14:36:39Z", "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/loader/AgentClassLoader.java", "diffHunk": "@@ -192,9 +193,11 @@ public URL nextElement() {\n                 for (String fileName : jarFileNames) {\n                     try {\n                         File file = new File(path, fileName);\n-                        Jar jar = new Jar(new JarFile(file), file);\n-                        jars.add(jar);\n-                        LOGGER.info(\"{} loaded.\", file.toString());\n+                        try(var jarFile = new JarFile(file)){", "originalCommit": "e77744a5a13c070b0a44133140acd395562f269a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM1MzQ4Nw==", "url": "https://github.com/apache/skywalking/pull/5616#discussion_r498353487", "bodyText": "var is not acceptable in the JDK8 compiler. Why use this?", "author": "wu-sheng", "createdAt": "2020-10-01T15:57:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODI5NDc3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM2NjEzNg==", "url": "https://github.com/apache/skywalking/pull/5616#discussion_r498366136", "bodyText": "We don't recommend abusing lombok. Its annotation-based usages are enough. Don't put var in the codes.", "author": "wu-sheng", "createdAt": "2020-10-01T16:17:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODI5NDc3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM2NjkxOQ==", "url": "https://github.com/apache/skywalking/pull/5616#discussion_r498366919", "bodyText": "We are using Java, rather than Scala or Kotlin today, we don't want to make codes simpler, but want to make the codes easier to read for everyone. At here, you are just trying to fix the muse recommendation, so, please don't bring any related thing in.", "author": "wu-sheng", "createdAt": "2020-10-01T16:18:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODI5NDc3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM4MjI0MA==", "url": "https://github.com/apache/skywalking/pull/5616#discussion_r498382240", "bodyText": "is false positive, I have restored the original code", "author": "x22x22", "createdAt": "2020-10-01T16:45:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODI5NDc3NA=="}], "type": "inlineReview"}, {"oid": "9e5af78659f1d517a056f20a3672ccd15d17c257", "url": "https://github.com/apache/skywalking/commit/9e5af78659f1d517a056f20a3672ccd15d17c257", "message": "Merge branch 'master' into fix-RESOURCE_LEAK", "committedDate": "2020-10-01T14:47:24Z", "type": "commit"}, {"oid": "d0f9ed48dde9b500fabf3b8621d146347bc20913", "url": "https://github.com/apache/skywalking/commit/d0f9ed48dde9b500fabf3b8621d146347bc20913", "message": "Merge branch 'master' into fix-RESOURCE_LEAK", "committedDate": "2020-10-01T14:55:40Z", "type": "commit"}, {"oid": "9edd7c6908020ae7b9188ee320053d265e03d312", "url": "https://github.com/apache/skywalking/commit/9edd7c6908020ae7b9188ee320053d265e03d312", "message": "fix RESOURCE_LEAK\n\nuse  try-with-resources", "committedDate": "2020-10-01T16:36:46Z", "type": "commit"}, {"oid": "987360371b229c1c0ab0e7225330eacd8199451d", "url": "https://github.com/apache/skywalking/commit/987360371b229c1c0ab0e7225330eacd8199451d", "message": "fix RESOURCE_LEAK\n\nuse  try-with-resources", "committedDate": "2020-10-01T16:43:29Z", "type": "commit"}, {"oid": "1a0015148567774bef3e02ef710abab40eb8d0d6", "url": "https://github.com/apache/skywalking/commit/1a0015148567774bef3e02ef710abab40eb8d0d6", "message": "fix RESOURCE_LEAK\n\nuse  try-with-resources", "committedDate": "2020-10-01T16:49:09Z", "type": "commit"}, {"oid": "658669179515084a3279522380db4a94de5ee7e6", "url": "https://github.com/apache/skywalking/commit/658669179515084a3279522380db4a94de5ee7e6", "message": "Merge branch 'master' into fix-RESOURCE_LEAK", "committedDate": "2020-10-02T14:04:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg0MzMyMw==", "url": "https://github.com/apache/skywalking/pull/5616#discussion_r498843323", "bodyText": "Closing this?", "author": "wu-sheng", "createdAt": "2020-10-02T14:05:52Z", "path": "oap-server/server-receiver-plugin/zipkin-receiver-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/zipkin/handler/SpanProcessor.java", "diffHunk": "@@ -39,37 +39,36 @@ public SpanProcessor(SourceReceiver receiver) {\n     }\n \n     void convert(ZipkinReceiverConfig config, SpanBytesDecoder decoder, HttpServletRequest request) throws IOException {\n-        InputStream inputStream = getInputStream(request);\n-        ByteArrayOutputStream out = new ByteArrayOutputStream();\n-        byte[] buffer = new byte[2048];\n-        int readCntOnce;\n+        try(InputStream inputStream = getInputStream(request)) {\n+            ByteArrayOutputStream out = new ByteArrayOutputStream();\n+            byte[] buffer = new byte[2048];\n+            int readCntOnce;\n \n-        while ((readCntOnce = inputStream.read(buffer)) >= 0) {\n-            out.write(buffer, 0, readCntOnce);\n-        }\n+            while ((readCntOnce = inputStream.read(buffer)) >= 0) {\n+                out.write(buffer, 0, readCntOnce);\n+            }\n \n-        List<Span> spanList = decoder.decodeList(out.toByteArray());\n+            List<Span> spanList = decoder.decodeList(out.toByteArray());\n \n-        if (config.isNeedAnalysis()) {\n-            ZipkinSkyWalkingTransfer transfer = new ZipkinSkyWalkingTransfer();\n-            transfer.doTransfer(config, spanList);\n-        } else {\n-            SpanForward forward = new SpanForward(config, receiver);\n-            forward.send(spanList);\n+            if (config.isNeedAnalysis()) {\n+                ZipkinSkyWalkingTransfer transfer = new ZipkinSkyWalkingTransfer();\n+                transfer.doTransfer(config, spanList);\n+            } else {\n+                SpanForward forward = new SpanForward(config, receiver);\n+                forward.send(spanList);\n+            }\n         }\n     }\n \n     private InputStream getInputStream(HttpServletRequest request) throws IOException {\n-        InputStream requestInStream;\n-\n         String headEncoding = request.getHeader(\"accept-encoding\");\n         if (headEncoding != null && (headEncoding.indexOf(\"gzip\") != -1)) {\n-            requestInStream = new GZIPInputStream(request.getInputStream());\n+            try(InputStream requestInStream = new GZIPInputStream(request.getInputStream());){\n+                return requestInStream;", "originalCommit": "658669179515084a3279522380db4a94de5ee7e6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTIwMTI3NQ==", "url": "https://github.com/apache/skywalking/pull/5616#discussion_r499201275", "bodyText": "Restored code.", "author": "x22x22", "createdAt": "2020-10-04T03:19:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg0MzMyMw=="}], "type": "inlineReview"}, {"oid": "7bd9ab934f446092d9d938d24bb2cc3b5cf43847", "url": "https://github.com/apache/skywalking/commit/7bd9ab934f446092d9d938d24bb2cc3b5cf43847", "message": "fix Codestyle issue", "committedDate": "2020-10-04T03:12:47Z", "type": "commit"}, {"oid": "e34411abb64c8cf161f5756793e3c0c5391dc0c8", "url": "https://github.com/apache/skywalking/commit/e34411abb64c8cf161f5756793e3c0c5391dc0c8", "message": "Code reductionCode reduction.", "committedDate": "2020-10-04T03:16:00Z", "type": "commit"}, {"oid": "f61f1136d0bc51237eef40be4b5434ac15697c29", "url": "https://github.com/apache/skywalking/commit/f61f1136d0bc51237eef40be4b5434ac15697c29", "message": "Merge branch 'master' into fix-RESOURCE_LEAK", "committedDate": "2020-10-04T03:17:12Z", "type": "commit"}, {"oid": "55028de757eddee23519431bb0b9110e25a1eef9", "url": "https://github.com/apache/skywalking/commit/55028de757eddee23519431bb0b9110e25a1eef9", "message": "Merge branch 'master' into fix-RESOURCE_LEAK", "committedDate": "2020-10-06T13:53:21Z", "type": "commit"}, {"oid": "52c4342a197c0e306dc8ce7237cf6412e393fe70", "url": "https://github.com/apache/skywalking/commit/52c4342a197c0e306dc8ce7237cf6412e393fe70", "message": "Merge branch 'master' into fix-RESOURCE_LEAK", "committedDate": "2020-10-07T08:32:18Z", "type": "commit"}]}