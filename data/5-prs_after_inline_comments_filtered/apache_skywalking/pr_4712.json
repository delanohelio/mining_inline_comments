{"pr_number": 4712, "pr_title": "Fix npe in afterMethod/handleMethodException of kafka/finagle plugins", "pr_createdAt": "2020-04-25T08:14:11Z", "pr_url": "https://github.com/apache/skywalking/pull/4712", "timeline": [{"oid": "cd31b50db32978fd2d952e78d6e4c3c667e19d62", "url": "https://github.com/apache/skywalking/commit/cd31b50db32978fd2d952e78d6e4c3c667e19d62", "message": "Fix npe in afterMethod/handleMethodException of kafka/finagle plugins", "committedDate": "2020-04-25T08:05:34Z", "type": "commit"}, {"oid": "51f283f9a5e79861bc73091365562f3ea22cd1c5", "url": "https://github.com/apache/skywalking/commit/51f283f9a5e79861bc73091365562f3ea22cd1c5", "message": "Merge branch 'master' into fix-KafkaConsumerInterceptor-npe", "committedDate": "2020-04-25T08:13:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTAxNDYzOA==", "url": "https://github.com/apache/skywalking/pull/4712#discussion_r415014638", "bodyText": "When ret == null?", "author": "wu-sheng", "createdAt": "2020-04-25T08:33:22Z", "path": "apm-sniffer/apm-sdk-plugin/kafka-plugin/src/main/java/org/apache/skywalking/apm/plugin/kafka/KafkaConsumerInterceptor.java", "diffHunk": "@@ -51,6 +51,9 @@ public void beforeMethod(EnhancedInstance objInst, Method method, Object[] allAr\n     @Override\n     public Object afterMethod(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes,\n         Object ret) throws Throwable {\n+        if (ret == null) {", "originalCommit": "51f283f9a5e79861bc73091365562f3ea22cd1c5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTAyNzQzNQ==", "url": "https://github.com/apache/skywalking/pull/4712#discussion_r415027435", "bodyText": "According to InstMethodsInter, if the intercepted method(here is KafkaConsumer.pollOnce()) throws exception, the ret will be null.", "author": "huangyoje", "createdAt": "2020-04-25T09:51:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTAxNDYzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTAyNzUxNw==", "url": "https://github.com/apache/skywalking/pull/4712#discussion_r415027517", "bodyText": "Object ret = null;\n        try {\n            if (!result.isContinue()) {\n                ret = result._ret();\n            } else {\n                ret = zuper.call();\n            }\n        } catch (Throwable t) {\n            try {\n                interceptor.handleMethodException(targetObject, method, allArguments, method.getParameterTypes(), t);\n            } catch (Throwable t2) {\n                logger.error(t2, \"class[{}] handle method[{}] exception failure\", obj.getClass(), method.getName());\n            }\n            throw t;\n        } finally {\n            try {\n                ret = interceptor.afterMethod(targetObject, method, allArguments, method.getParameterTypes(), ret);\n            } catch (Throwable t) {\n                logger.error(t, \"class[{}] after method[{}] intercept failure\", obj.getClass(), method.getName());\n            }\n        }", "author": "huangyoje", "createdAt": "2020-04-25T09:52:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTAxNDYzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA0OTYzNA==", "url": "https://github.com/apache/skywalking/pull/4712#discussion_r415049634", "bodyText": "Look good to me, could you add comments about this at if (ret == null) { and   if (ContextManager.isActive()) places?", "author": "wu-sheng", "createdAt": "2020-04-25T12:07:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTAxNDYzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA1NjQxOQ==", "url": "https://github.com/apache/skywalking/pull/4712#discussion_r415056419", "bodyText": "Updated.", "author": "huangyoje", "createdAt": "2020-04-25T12:48:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTAxNDYzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA1NjY5Nw==", "url": "https://github.com/apache/skywalking/pull/4712#discussion_r415056697", "bodyText": "Look like finagle doesn't have the log? I assume they are the same cases?", "author": "wu-sheng", "createdAt": "2020-04-25T12:50:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTAxNDYzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA2MTYxOQ==", "url": "https://github.com/apache/skywalking/pull/4712#discussion_r415061619", "bodyText": "Comments were Added to finagle too!", "author": "huangyoje", "createdAt": "2020-04-25T13:18:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTAxNDYzOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTAxNDY2MA==", "url": "https://github.com/apache/skywalking/pull/4712#discussion_r415014660", "bodyText": "Why we have inactive cases?", "author": "wu-sheng", "createdAt": "2020-04-25T08:33:35Z", "path": "apm-sniffer/apm-sdk-plugin/kafka-plugin/src/main/java/org/apache/skywalking/apm/plugin/kafka/KafkaConsumerInterceptor.java", "diffHunk": "@@ -88,6 +91,8 @@ public Object afterMethod(EnhancedInstance objInst, Method method, Object[] allA\n     @Override\n     public void handleMethodException(EnhancedInstance objInst, Method method, Object[] allArguments,\n         Class<?>[] argumentsTypes, Throwable t) {\n-        ContextManager.activeSpan().errorOccurred().log(t);\n+        if (ContextManager.isActive()) {", "originalCommit": "51f283f9a5e79861bc73091365562f3ea22cd1c5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTAyODUwMA==", "url": "https://github.com/apache/skywalking/pull/4712#discussion_r415028500", "bodyText": "KafkaConsumerInterceptor create entry span in afterMethod, but handleMethodException is called before afterMethod, and before the creation of entry span, we can not ensure there is an active span.", "author": "huangyoje", "createdAt": "2020-04-25T09:58:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTAxNDY2MA=="}], "type": "inlineReview"}, {"oid": "1136bf47f2d21315d23148ea6e2a9aef59720352", "url": "https://github.com/apache/skywalking/commit/1136bf47f2d21315d23148ea6e2a9aef59720352", "message": "Merge branch 'master' into fix-afterMethod-npe", "committedDate": "2020-04-25T10:02:33Z", "type": "commit"}, {"oid": "a491e3004b57edc0cb2372d50c99f47d96e21dbd", "url": "https://github.com/apache/skywalking/commit/a491e3004b57edc0cb2372d50c99f47d96e21dbd", "message": "Add comment", "committedDate": "2020-04-25T12:46:39Z", "type": "commit"}, {"oid": "5dc210c2ba2e5724077eaa506d52711c40f3967c", "url": "https://github.com/apache/skywalking/commit/5dc210c2ba2e5724077eaa506d52711c40f3967c", "message": "Add comment", "committedDate": "2020-04-25T13:15:07Z", "type": "commit"}, {"oid": "d0bbc6788f26021daae0e4c5067f655e45a9933d", "url": "https://github.com/apache/skywalking/commit/d0bbc6788f26021daae0e4c5067f655e45a9933d", "message": "Merge branch 'master' into fix-afterMethod-npe", "committedDate": "2020-04-25T13:25:36Z", "type": "commit"}]}