{"pr_number": 5760, "pr_title": "Catch all exception when consume kafka record", "pr_createdAt": "2020-10-31T02:51:44Z", "pr_url": "https://github.com/apache/skywalking/pull/5760", "timeline": [{"oid": "e1821a362aba4cf30479ad8d1f14f1a4be05f147", "url": "https://github.com/apache/skywalking/commit/e1821a362aba4cf30479ad8d1f14f1a4be05f147", "message": "Update KafkaFetcherHandlerRegister.java\n\nconsume record maybe throws Expcption, it will terminate the \"ConsumerThread\", NO data can processed. Catch All Throwable, ignore the failed record.....", "committedDate": "2020-10-31T02:33:30Z", "type": "commit"}, {"oid": "64a55c83611588d9ae658c2ca7d4ceffa6a77fe8", "url": "https://github.com/apache/skywalking/commit/64a55c83611588d9ae658c2ca7d4ceffa6a77fe8", "message": "Merge pull request #1 from nileblack/nileblack-patch-1\n\nCatch all exception when consume kafka record", "committedDate": "2020-10-31T02:48:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ0Nzg4OQ==", "url": "https://github.com/apache/skywalking/pull/5760#discussion_r515447889", "bodyText": "When and why this exception happens?", "author": "wu-sheng", "createdAt": "2020-10-31T03:05:16Z", "path": "oap-server/server-fetcher-plugin/kafka-fetcher-plugin/src/main/java/org/apache/skywalking/oap/server/analyzer/agent/kafka/KafkaFetcherHandlerRegister.java", "diffHunk": "@@ -137,7 +137,11 @@ public void run() {\n                 Iterator<ConsumerRecord<String, Bytes>> iterator = consumerRecords.iterator();\n                 while (iterator.hasNext()) {\n                     ConsumerRecord<String, Bytes> record = iterator.next();\n-                    handlerMap.get(record.topic()).handle(record);\n+                    try {\n+                        handlerMap.get(record.topic()).handle(record);\n+                    } catch(Throwable t) {\n+                        log.error(\"consume record error\", t);", "originalCommit": "64a55c83611588d9ae658c2ca7d4ceffa6a77fe8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ1MTAzMg==", "url": "https://github.com/apache/skywalking/pull/5760#discussion_r515451032", "bodyText": "aha ,the log is lost. In my situation , ServiceManagementHandler.java  L65 throw a NPE.\n    @Override\n    public void handle(final ConsumerRecord<String, Bytes> record) {\n        try {\n            if (record.key().startsWith(\"register-\")) {\n                serviceReportProperties(InstanceProperties.parseFrom(record.value().get()));\n            } else {\n                keepAlive(InstancePingPkg.parseFrom(record.value().get()));\n            }\n        } catch (InvalidProtocolBufferException e) {\n            log.error(\"\", e);\n        }\n    }\n\nMaybe a record without a key?", "author": "nileblack", "createdAt": "2020-10-31T03:45:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ0Nzg4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ1MTQxMg==", "url": "https://github.com/apache/skywalking/pull/5760#discussion_r515451412", "bodyText": "I am fine if you just want to make sure the illegal data would not break all things.\nAt the same time, fix doc and ci.", "author": "wu-sheng", "createdAt": "2020-10-31T03:51:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ0Nzg4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTcyMzYxMg==", "url": "https://github.com/apache/skywalking/pull/5760#discussion_r515723612", "bodyText": "As you show the code, I suggest changing the InvalidProtocolBufferException to Throwable or Exception. And then don't need to add try-catch statement again.", "author": "dmsolr", "createdAt": "2020-11-02T03:27:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ0Nzg4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc0NTE0OQ==", "url": "https://github.com/apache/skywalking/pull/5760#discussion_r515745149", "bodyText": "There mayby Another Handler  throws a uncaputure exception.", "author": "nileblack", "createdAt": "2020-11-02T05:21:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ0Nzg4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc0NzA0NQ==", "url": "https://github.com/apache/skywalking/pull/5760#discussion_r515747045", "bodyText": "Yeap, I mean all handlers should be modified. :)", "author": "dmsolr", "createdAt": "2020-11-02T05:30:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ0Nzg4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg2ODA1Nw==", "url": "https://github.com/apache/skywalking/pull/5760#discussion_r515868057", "bodyText": "i think every hander should catch Exception not InvalidProtocolBufferException.", "author": "zifeihan", "createdAt": "2020-11-02T10:15:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ0Nzg4OQ=="}], "type": "inlineReview"}, {"oid": "bbf817ea1bc8d13481982c8a8a9370d4d4420448", "url": "https://github.com/apache/skywalking/commit/bbf817ea1bc8d13481982c8a8a9370d4d4420448", "message": "format fix", "committedDate": "2020-10-31T04:36:41Z", "type": "commit"}, {"oid": "0a9724fffcacbfc266644357d1639f0ea1cd9127", "url": "https://github.com/apache/skywalking/commit/0a9724fffcacbfc266644357d1639f0ea1cd9127", "message": "Merge branch 'master' into master", "committedDate": "2020-10-31T04:47:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ3NzI2OA==", "url": "https://github.com/apache/skywalking/pull/5760#discussion_r515477268", "bodyText": "Why need two error lines?", "author": "wu-sheng", "createdAt": "2020-10-31T09:26:46Z", "path": "oap-server/server-fetcher-plugin/kafka-fetcher-plugin/src/main/java/org/apache/skywalking/oap/server/analyzer/agent/kafka/KafkaFetcherHandlerRegister.java", "diffHunk": "@@ -132,14 +132,23 @@ public void start() {\n     @Override\n     public void run() {\n         while (true) {\n-            ConsumerRecords<String, Bytes> consumerRecords = consumer.poll(Duration.ofMillis(500L));\n-            if (!consumerRecords.isEmpty()) {\n-                Iterator<ConsumerRecord<String, Bytes>> iterator = consumerRecords.iterator();\n-                while (iterator.hasNext()) {\n-                    ConsumerRecord<String, Bytes> record = iterator.next();\n-                    handlerMap.get(record.topic()).handle(record);\n+            try {\n+                ConsumerRecords<String, Bytes> consumerRecords = consumer.poll(Duration.ofMillis(500L));\n+                if (!consumerRecords.isEmpty()) {\n+                    Iterator<ConsumerRecord<String, Bytes>> iterator = consumerRecords.iterator();\n+                    while (iterator.hasNext()) {\n+                        ConsumerRecord<String, Bytes> record = iterator.next();\n+                        try {\n+                            handlerMap.get(record.topic()).handle(record);\n+                        } catch (Throwable e) {\n+                            log.error(\"process record error, topic:{}, key:{}, value:{}\", record.topic(), record.key(), record.value());\n+                            log.error(\"process record error\", e);", "originalCommit": "0a9724fffcacbfc266644357d1639f0ea1cd9127", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODUwNjQ2OA==", "url": "https://github.com/apache/skywalking/pull/5760#discussion_r518506468", "bodyText": "Just want record detail data? what's best practice to do that?", "author": "nileblack", "createdAt": "2020-11-06T03:43:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ3NzI2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU4MzM3Mw==", "url": "https://github.com/apache/skywalking/pull/5760#discussion_r518583373", "bodyText": "Logging data actually isn't useful.", "author": "wu-sheng", "createdAt": "2020-11-06T08:08:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ3NzI2OA=="}], "type": "inlineReview"}, {"oid": "f8a567f5c948964c6a9ff2bff0c0cf93754e6cc0", "url": "https://github.com/apache/skywalking/commit/f8a567f5c948964c6a9ff2bff0c0cf93754e6cc0", "message": "catch all Exception in handlers", "committedDate": "2020-11-06T07:59:40Z", "type": "commit"}, {"oid": "f8a567f5c948964c6a9ff2bff0c0cf93754e6cc0", "url": "https://github.com/apache/skywalking/commit/f8a567f5c948964c6a9ff2bff0c0cf93754e6cc0", "message": "catch all Exception in handlers", "committedDate": "2020-11-06T07:59:40Z", "type": "forcePushed"}, {"oid": "7256607e9446925ee403050fa5215d62507c6739", "url": "https://github.com/apache/skywalking/commit/7256607e9446925ee403050fa5215d62507c6739", "message": "fix conflicts", "committedDate": "2020-11-06T08:47:40Z", "type": "commit"}, {"oid": "620c7f8ba7871929d0251f89c27741a211d36d77", "url": "https://github.com/apache/skywalking/commit/620c7f8ba7871929d0251f89c27741a211d36d77", "message": "remove log data", "committedDate": "2020-11-06T08:53:06Z", "type": "commit"}, {"oid": "b670fa142ee0c69efeed76a1004f9557fd1da71f", "url": "https://github.com/apache/skywalking/commit/b670fa142ee0c69efeed76a1004f9557fd1da71f", "message": "Merge branch 'master' into master", "committedDate": "2020-11-06T08:54:31Z", "type": "commit"}, {"oid": "a5645655a6eedb4593cc16c3bcc041e2986d5e8e", "url": "https://github.com/apache/skywalking/commit/a5645655a6eedb4593cc16c3bcc041e2986d5e8e", "message": "add catch all exception", "committedDate": "2020-11-07T02:32:50Z", "type": "commit"}, {"oid": "d29eae62203e20cd2b898719003bd32e558648da", "url": "https://github.com/apache/skywalking/commit/d29eae62203e20cd2b898719003bd32e558648da", "message": "Update CHANGES.md", "committedDate": "2020-11-07T12:37:56Z", "type": "commit"}, {"oid": "1332fda268e75c5da68f8aa1ca45378c6a0a94c5", "url": "https://github.com/apache/skywalking/commit/1332fda268e75c5da68f8aa1ca45378c6a0a94c5", "message": "Merge branch 'master' into master", "committedDate": "2020-11-07T12:38:05Z", "type": "commit"}]}