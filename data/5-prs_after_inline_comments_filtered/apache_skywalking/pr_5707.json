{"pr_number": 5707, "pr_title": "Add `slowTraceSegmentThreshold` to forcibly sample slow traces", "pr_createdAt": "2020-10-21T05:14:06Z", "pr_url": "https://github.com/apache/skywalking/pull/5707", "timeline": [{"oid": "40da84cda7f4d834e2a0cf8d08e169b50cb54854", "url": "https://github.com/apache/skywalking/commit/40da84cda7f4d834e2a0cf8d08e169b50cb54854", "message": "`slowTraceSegmentThreshold` is for you to open force save some slow trace segment when sampling mechanism active.When sampling mechanism activated, this config would make the slow trace segment sampled, ignoring the sampling rate.", "committedDate": "2020-10-21T05:07:27Z", "type": "commit"}, {"oid": "cae7dbb03922d6da0708849fa6e2d5585b43ffc3", "url": "https://github.com/apache/skywalking/commit/cae7dbb03922d6da0708849fa6e2d5585b43ffc3", "message": "Merge branch 'master' into hanfei", "committedDate": "2020-10-21T05:42:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTAwNDIyNA==", "url": "https://github.com/apache/skywalking/pull/5707#discussion_r509004224", "bodyText": "why is(500)? Shouldn't it be 1000?", "author": "kezhenxu94", "createdAt": "2020-10-21T05:46:50Z", "path": "oap-server/analyzer/agent-analyzer/src/test/java/org/apache/skywalking/oap/server/analyzer/provider/trace/TraceLatencyThresholdsAndWatcherTest.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.analyzer.provider.trace;\n+\n+import java.util.Optional;\n+import java.util.Set;\n+import org.apache.skywalking.oap.server.analyzer.provider.AnalyzerModuleProvider;\n+import org.apache.skywalking.oap.server.configuration.api.ConfigChangeWatcher;\n+import org.apache.skywalking.oap.server.configuration.api.ConfigTable;\n+import org.apache.skywalking.oap.server.configuration.api.ConfigWatcherRegister;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.runners.MockitoJUnitRunner;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class TraceLatencyThresholdsAndWatcherTest {\n+    private AnalyzerModuleProvider provider;\n+\n+    @Before\n+    public void init() {\n+        provider = new AnalyzerModuleProvider();\n+    }\n+\n+    @Test\n+    public void testInit() {\n+        TraceLatencyThresholdsAndWatcher traceLatencyThresholdsAndWatcher = new TraceLatencyThresholdsAndWatcher(provider);\n+        Assert.assertEquals(traceLatencyThresholdsAndWatcher.getSlowTraceSegmentThreshold(), 500);\n+        Assert.assertEquals(traceLatencyThresholdsAndWatcher.value(), \"500\");\n+    }\n+\n+    @Test(timeout = 20000)\n+    public void testDynamicUpdate() throws InterruptedException {\n+        ConfigWatcherRegister register = new MockConfigWatcherRegister(3);\n+\n+        TraceLatencyThresholdsAndWatcher watcher = new TraceLatencyThresholdsAndWatcher(provider);\n+        register.registerConfigChangeWatcher(watcher);\n+        register.start();\n+\n+        while (watcher.getSlowTraceSegmentThreshold() == 10000) {\n+            Thread.sleep(2000);\n+        }\n+        assertThat(watcher.getSlowTraceSegmentThreshold(), is(1000));\n+        assertThat(provider.getModuleConfig().getSlowTraceSegmentThreshold(), is(500));", "originalCommit": "cae7dbb03922d6da0708849fa6e2d5585b43ffc3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTAzOTIwMA==", "url": "https://github.com/apache/skywalking/pull/5707#discussion_r509039200", "bodyText": "hello, provider.getModuleConfig().getSlowTraceSegmentThreshold() is module config value, watcher can't change it. watcher has it own value.", "author": "zifeihan", "createdAt": "2020-10-21T07:10:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTAwNDIyNA=="}], "type": "inlineReview"}, {"oid": "6ff13f9670555951551e969c264cf81d50a91604", "url": "https://github.com/apache/skywalking/commit/6ff13f9670555951551e969c264cf81d50a91604", "message": "Polishing.", "committedDate": "2020-10-21T07:23:42Z", "type": "commit"}, {"oid": "ad89b2f9f87eb8494ce8c29f25b786e9601bee83", "url": "https://github.com/apache/skywalking/commit/ad89b2f9f87eb8494ce8c29f25b786e9601bee83", "message": "Merge remote-tracking branch 'origin/hanfei' into hanfei", "committedDate": "2020-10-21T07:25:51Z", "type": "commit"}, {"oid": "5017e9de9da0e7ae6cc34c754570d72f7cea7f35", "url": "https://github.com/apache/skywalking/commit/5017e9de9da0e7ae6cc34c754570d72f7cea7f35", "message": "Merge branch 'master' into hanfei", "committedDate": "2020-10-21T14:26:28Z", "type": "commit"}, {"oid": "b4f2b83d1b690e3bd7e35137e28dfd68bec864f0", "url": "https://github.com/apache/skywalking/commit/b4f2b83d1b690e3bd7e35137e28dfd68bec864f0", "message": "Update CHANGES.md", "committedDate": "2020-10-26T04:00:05Z", "type": "commit"}, {"oid": "223b213eee8c56a70bd0845c22a15fe059fb38a2", "url": "https://github.com/apache/skywalking/commit/223b213eee8c56a70bd0845c22a15fe059fb38a2", "message": "Merge branch 'master' into hanfei", "committedDate": "2020-10-26T04:27:19Z", "type": "commit"}, {"oid": "36f8fcab6af02c03ae39282fde4758ee65e00c93", "url": "https://github.com/apache/skywalking/commit/36f8fcab6af02c03ae39282fde4758ee65e00c93", "message": "Polishing.", "committedDate": "2020-10-26T06:06:17Z", "type": "commit"}, {"oid": "8326b1c768b616745e88edca50ecb24c81842c41", "url": "https://github.com/apache/skywalking/commit/8326b1c768b616745e88edca50ecb24c81842c41", "message": "Merge branch 'master' into hanfei", "committedDate": "2020-10-29T06:59:51Z", "type": "commit"}, {"oid": "b61495ac02fc104665c6c31234efe017d8e5661d", "url": "https://github.com/apache/skywalking/commit/b61495ac02fc104665c6c31234efe017d8e5661d", "message": "change the `slowTraceSegmentThreshold` default value to `-1`, which means would not sample slow traces.", "committedDate": "2020-10-29T11:16:58Z", "type": "commit"}, {"oid": "0d5c371e8dd4a47cdf6c3ece7b606cf795226bc6", "url": "https://github.com/apache/skywalking/commit/0d5c371e8dd4a47cdf6c3ece7b606cf795226bc6", "message": "Merge branch 'master' into hanfei\n\n# Conflicts:\n#\tCHANGES.md", "committedDate": "2020-10-29T11:27:52Z", "type": "commit"}, {"oid": "c421c6b8433fbc69095abc2261a3e8a18162e9fa", "url": "https://github.com/apache/skywalking/commit/c421c6b8433fbc69095abc2261a3e8a18162e9fa", "message": "Merge branch 'master' into hanfei\n\n# Conflicts:\n#\tCHANGES.md\n#\tdocs/en/setup/backend/configuration-vocabulary.md\n#\toap-server/server-bootstrap/src/main/resources/application.yml", "committedDate": "2020-10-30T03:41:29Z", "type": "commit"}, {"oid": "e678f24f794729e7a1191e4924357abdd3a813c8", "url": "https://github.com/apache/skywalking/commit/e678f24f794729e7a1191e4924357abdd3a813c8", "message": "Update CHANGES.md", "committedDate": "2020-10-30T03:59:24Z", "type": "commit"}, {"oid": "0cd0aee359c644efc0e456396dfde0b1c1094b1e", "url": "https://github.com/apache/skywalking/commit/0cd0aee359c644efc0e456396dfde0b1c1094b1e", "message": "Update trace-sampling.md", "committedDate": "2020-10-30T04:17:26Z", "type": "commit"}]}