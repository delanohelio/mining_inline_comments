{"pr_number": 5628, "pr_title": "Support Alarm to dingtalk", "pr_createdAt": "2020-10-04T07:14:30Z", "pr_url": "https://github.com/apache/skywalking/pull/5628", "timeline": [{"oid": "10e65eb824985463b64ad0cab7cb91861a0f2f43", "url": "https://github.com/apache/skywalking/commit/10e65eb824985463b64ad0cab7cb91861a0f2f43", "message": "Add dingtalk webhook", "committedDate": "2020-10-04T07:06:44Z", "type": "commit"}, {"oid": "6442711399c90f9bf7cd449bf9aa7a1c5cc84de3", "url": "https://github.com/apache/skywalking/commit/6442711399c90f9bf7cd449bf9aa7a1c5cc84de3", "message": "add blank line", "committedDate": "2020-10-04T07:11:08Z", "type": "commit"}, {"oid": "9e3127ce538fd3a8ec68b28ada0cfc0fbac800ac", "url": "https://github.com/apache/skywalking/commit/9e3127ce538fd3a8ec68b28ada0cfc0fbac800ac", "message": "change as cr suggestions", "committedDate": "2020-10-04T10:37:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTIzOTE5OQ==", "url": "https://github.com/apache/skywalking/pull/5628#discussion_r499239199", "bodyText": "Please recheck the test case, seems this method is not covered. Also, please help on rechecking other read* methods in this class.", "author": "wu-sheng", "createdAt": "2020-10-04T12:05:12Z", "path": "oap-server/server-alarm-plugin/src/main/java/org/apache/skywalking/oap/server/core/alarm/provider/RulesReader.java", "diffHunk": "@@ -203,4 +206,25 @@ private void readCompositeRuleConfig(Rules rules) {\n             }\n         });\n     }\n+\n+    /**\n+     * Read composite rule config into {@link DingtalkSettings}\n+     */\n+    private void readDingtalkConfig(Rules rules) {", "originalCommit": "9e3127ce538fd3a8ec68b28ada0cfc0fbac800ac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI0MDg4NA==", "url": "https://github.com/apache/skywalking/pull/5628#discussion_r499240884", "bodyText": "Actually I have added test logic in RulesReaderTest.java  will check others. it may be related to Codecov detect logic. let me check", "author": "xbkaishui", "createdAt": "2020-10-04T12:22:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTIzOTE5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTIzOTMxMw==", "url": "https://github.com/apache/skywalking/pull/5628#discussion_r499239313", "bodyText": "But I have noticed this, maybe above is just a coverage issue? FYI @kezhenxu94, any clue?", "author": "wu-sheng", "createdAt": "2020-10-04T12:06:04Z", "path": "oap-server/server-alarm-plugin/src/test/java/org/apache/skywalking/oap/server/core/alarm/provider/RulesReaderTest.java", "diffHunk": "@@ -18,16 +18,23 @@\n \n package org.apache.skywalking.oap.server.core.alarm.provider;\n \n-import java.util.List;\n+import org.apache.skywalking.oap.server.core.alarm.provider.dingtalk.DingtalkSettings;\n import org.junit.Assert;\n import org.junit.Test;\n \n-public class AlarmRuleInitTest {\n+import java.util.List;\n+\n+import static org.hamcrest.CoreMatchers.any;\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertThat;\n+\n+public class RulesReaderTest {\n     @Test\n-    public void testInit() {\n+    public void testReadRules() {", "originalCommit": "9e3127ce538fd3a8ec68b28ada0cfc0fbac800ac", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c5b9b0c67d906e6d0f5dad37760bae9cfe256553", "url": "https://github.com/apache/skywalking/commit/c5b9b0c67d906e6d0f5dad37760bae9cfe256553", "message": "Add more test case", "committedDate": "2020-10-04T12:49:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI0MzQ0Ng==", "url": "https://github.com/apache/skywalking/pull/5628#discussion_r499243446", "bodyText": "Be careful when copy-and-pasting\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Read composite rule config into {@link DingtalkSettings}\n          \n          \n            \n                 * Read alarm rule config into {@link DingtalkSettings}", "author": "kezhenxu94", "createdAt": "2020-10-04T12:51:22Z", "path": "oap-server/server-alarm-plugin/src/main/java/org/apache/skywalking/oap/server/core/alarm/provider/RulesReader.java", "diffHunk": "@@ -203,4 +206,25 @@ private void readCompositeRuleConfig(Rules rules) {\n             }\n         });\n     }\n+\n+    /**\n+     * Read composite rule config into {@link DingtalkSettings}", "originalCommit": "9e3127ce538fd3a8ec68b28ada0cfc0fbac800ac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI1MjM4Mw==", "url": "https://github.com/apache/skywalking/pull/5628#discussion_r499252383", "bodyText": "done", "author": "xbkaishui", "createdAt": "2020-10-04T14:26:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI0MzQ0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI0MzY0NA==", "url": "https://github.com/apache/skywalking/pull/5628#discussion_r499243644", "bodyText": "Please confirm that whether the default settings in the application.yaml makes this.alarmRulesWatcher.getDingtalkSettings().getWebhooks() null, if yes there is possible NPE", "author": "kezhenxu94", "createdAt": "2020-10-04T12:53:26Z", "path": "oap-server/server-alarm-plugin/src/main/java/org/apache/skywalking/oap/server/core/alarm/provider/dingtalk/DingtalkHookCallback.java", "diffHunk": "@@ -0,0 +1,154 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.core.alarm.provider.dingtalk;\n+\n+import io.netty.handler.codec.http.HttpHeaderValues;\n+import lombok.extern.slf4j.Slf4j;\n+import org.apache.http.HttpHeaders;\n+import org.apache.http.HttpStatus;\n+import org.apache.http.StatusLine;\n+import org.apache.http.client.config.RequestConfig;\n+import org.apache.http.client.methods.CloseableHttpResponse;\n+import org.apache.http.client.methods.HttpPost;\n+import org.apache.http.entity.ContentType;\n+import org.apache.http.entity.StringEntity;\n+import org.apache.http.impl.client.CloseableHttpClient;\n+import org.apache.http.impl.client.HttpClients;\n+import org.apache.http.util.EntityUtils;\n+import org.apache.skywalking.apm.util.StringUtil;\n+import org.apache.skywalking.oap.server.core.alarm.AlarmCallback;\n+import org.apache.skywalking.oap.server.core.alarm.AlarmMessage;\n+import org.apache.skywalking.oap.server.core.alarm.provider.AlarmRulesWatcher;\n+\n+import javax.crypto.Mac;\n+import javax.crypto.spec.SecretKeySpec;\n+import java.io.IOException;\n+import java.io.UnsupportedEncodingException;\n+import java.net.URLEncoder;\n+import java.nio.charset.StandardCharsets;\n+import java.security.InvalidKeyException;\n+import java.security.NoSuchAlgorithmException;\n+import java.util.Base64;\n+import java.util.List;\n+\n+/**\n+ * Use SkyWalking alarm dingtalk webhook API.\n+ */\n+@Slf4j\n+public class DingtalkHookCallback implements AlarmCallback {\n+\n+    private static final int HTTP_CONNECT_TIMEOUT = 1000;\n+    private static final int HTTP_CONNECTION_REQUEST_TIMEOUT = 1000;\n+    private static final int HTTP_SOCKET_TIMEOUT = 10000;\n+    private AlarmRulesWatcher alarmRulesWatcher;\n+    private RequestConfig requestConfig;\n+\n+    public DingtalkHookCallback(final AlarmRulesWatcher alarmRulesWatcher) {\n+        this.alarmRulesWatcher = alarmRulesWatcher;\n+        this.requestConfig = RequestConfig.custom()\n+                .setConnectTimeout(HTTP_CONNECT_TIMEOUT)\n+                .setConnectionRequestTimeout(HTTP_CONNECTION_REQUEST_TIMEOUT)\n+                .setSocketTimeout(HTTP_SOCKET_TIMEOUT)\n+                .build();\n+    }\n+\n+    /**\n+     * Send alarm message if the settings not empty\n+     */\n+    @Override\n+    public void doAlarm(List<AlarmMessage> alarmMessages) {\n+        if (this.alarmRulesWatcher.getDingtalkSettings() == null || this.alarmRulesWatcher.getDingtalkSettings().getWebhooks().isEmpty()) {", "originalCommit": "9e3127ce538fd3a8ec68b28ada0cfc0fbac800ac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI0NzQyMQ==", "url": "https://github.com/apache/skywalking/pull/5628#discussion_r499247421", "bodyText": "I think this.alarmRulesWatcher.getDingtalkSettings().getWebhooks() is null, then this will return directly.", "author": "wu-sheng", "createdAt": "2020-10-04T13:34:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI0MzY0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI1MjM3Ng==", "url": "https://github.com/apache/skywalking/pull/5628#discussion_r499252376", "bodyText": "Nop, in DingtalkSettings.java the webhooks default is empty list, it can direct to check isEmpty", "author": "xbkaishui", "createdAt": "2020-10-04T14:26:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI0MzY0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI1NDU5Nw==", "url": "https://github.com/apache/skywalking/pull/5628#discussion_r499254597", "bodyText": "Yes, seems so.", "author": "wu-sheng", "createdAt": "2020-10-04T14:49:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI0MzY0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ3MjAzMw==", "url": "https://github.com/apache/skywalking/pull/5628#discussion_r499472033", "bodyText": "@kezhenxu94 Any concern?", "author": "wu-sheng", "createdAt": "2020-10-05T09:43:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI0MzY0NA=="}], "type": "inlineReview"}, {"oid": "bab1e9f6b6af1e25f060c4359b477cd46bb48e67", "url": "https://github.com/apache/skywalking/commit/bab1e9f6b6af1e25f060c4359b477cd46bb48e67", "message": "fix typo", "committedDate": "2020-10-04T14:27:06Z", "type": "commit"}, {"oid": "e6dbdb3f68f158cac8e72ac0ca3bba3af4dc7428", "url": "https://github.com/apache/skywalking/commit/e6dbdb3f68f158cac8e72ac0ca3bba3af4dc7428", "message": "Merge branch 'master' into alarm-dingtalk", "committedDate": "2020-10-04T15:22:41Z", "type": "commit"}]}