{"pr_number": 5962, "pr_title": "Append interceptors to elasticsearch-6.x-plugin", "pr_createdAt": "2020-12-07T06:13:16Z", "pr_url": "https://github.com/apache/skywalking/pull/5962", "timeline": [{"oid": "dd51216fd911c4db9e6c269196a1fdde7a2bbd53", "url": "https://github.com/apache/skywalking/commit/dd51216fd911c4db9e6c269196a1fdde7a2bbd53", "message": "add interceptors for elasticsearch-6.x", "committedDate": "2020-12-06T17:13:36Z", "type": "commit"}, {"oid": "50b05516822d71be4bd2ce45ff926d51fccd903e", "url": "https://github.com/apache/skywalking/commit/50b05516822d71be4bd2ce45ff926d51fccd903e", "message": "Merge branch 'master' into master", "committedDate": "2020-12-07T06:13:52Z", "type": "commit"}, {"oid": "56175f3f0f536b1144db762f7cf7173255c21cc5", "url": "https://github.com/apache/skywalking/commit/56175f3f0f536b1144db762f7cf7173255c21cc5", "message": "add log", "committedDate": "2020-12-07T08:24:02Z", "type": "commit"}, {"oid": "64166b4db45d063357036f5d3890b005d38f5396", "url": "https://github.com/apache/skywalking/commit/64166b4db45d063357036f5d3890b005d38f5396", "message": "Merge branch 'master' into master", "committedDate": "2020-12-08T04:01:20Z", "type": "commit"}, {"oid": "e12d982ef1880465e936cacd7b30cf409a1b55c2", "url": "https://github.com/apache/skywalking/commit/e12d982ef1880465e936cacd7b30cf409a1b55c2", "message": "Modify the format of the import package", "committedDate": "2020-12-08T09:14:18Z", "type": "commit"}, {"oid": "e3a6054aabd4caa8122ba8a4a74ac7763d3b0c0a", "url": "https://github.com/apache/skywalking/commit/e3a6054aabd4caa8122ba8a4a74ac7763d3b0c0a", "message": "Merge branch 'master' into master", "committedDate": "2020-12-08T09:20:25Z", "type": "commit"}, {"oid": "18221a7197d6bda619a185856e8d8756dac1af49", "url": "https://github.com/apache/skywalking/commit/18221a7197d6bda619a185856e8d8756dac1af49", "message": "modify test logic", "committedDate": "2020-12-08T16:18:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODYxNTQ3MA==", "url": "https://github.com/apache/skywalking/pull/5962#discussion_r538615470", "bodyText": "UnnecessaryParentheses:  Unnecessary use of grouping parentheses", "author": "sonatype-lift", "createdAt": "2020-12-08T17:10:38Z", "path": "apm-sniffer/apm-sdk-plugin/elasticsearch-6.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/elasticsearch/v6/interceptor/IndicesClientAnalyzeMethodsInterceptor.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.plugin.elasticsearch.v6.interceptor;\n+\n+import org.apache.skywalking.apm.agent.core.context.ContextManager;\n+import org.apache.skywalking.apm.agent.core.context.tag.Tags;\n+import org.apache.skywalking.apm.agent.core.context.trace.AbstractSpan;\n+import org.apache.skywalking.apm.agent.core.context.trace.SpanLayer;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.EnhancedInstance;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstanceMethodsAroundInterceptor;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.MethodInterceptResult;\n+import org.apache.skywalking.apm.network.trace.component.ComponentsDefine;\n+import org.apache.skywalking.apm.plugin.elasticsearch.v6.RestClientEnhanceInfo;\n+import org.elasticsearch.action.admin.indices.analyze.AnalyzeRequest;\n+\n+import java.lang.reflect.Method;\n+\n+import static org.apache.skywalking.apm.plugin.elasticsearch.v6.ElasticsearchPluginConfig.Plugin.Elasticsearch.TRACE_DSL;\n+import static org.apache.skywalking.apm.plugin.elasticsearch.v6.interceptor.Constants.DB_TYPE;\n+\n+public class IndicesClientAnalyzeMethodsInterceptor implements InstanceMethodsAroundInterceptor {\n+\n+    @Override\n+    public void beforeMethod(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes,\n+        MethodInterceptResult result) throws Throwable {\n+        AnalyzeRequest analyzeRequest = (AnalyzeRequest) (allArguments[0]);", "originalCommit": "18221a7197d6bda619a185856e8d8756dac1af49", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODYxNTQ5OQ==", "url": "https://github.com/apache/skywalking/pull/5962#discussion_r538615499", "bodyText": "UnnecessaryParentheses:  Unnecessary use of grouping parentheses", "author": "sonatype-lift", "createdAt": "2020-12-08T17:10:39Z", "path": "apm-sniffer/apm-sdk-plugin/elasticsearch-6.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/elasticsearch/v6/interceptor/IndicesClientAnalyzeMethodsInterceptor.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.plugin.elasticsearch.v6.interceptor;\n+\n+import org.apache.skywalking.apm.agent.core.context.ContextManager;\n+import org.apache.skywalking.apm.agent.core.context.tag.Tags;\n+import org.apache.skywalking.apm.agent.core.context.trace.AbstractSpan;\n+import org.apache.skywalking.apm.agent.core.context.trace.SpanLayer;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.EnhancedInstance;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstanceMethodsAroundInterceptor;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.MethodInterceptResult;\n+import org.apache.skywalking.apm.network.trace.component.ComponentsDefine;\n+import org.apache.skywalking.apm.plugin.elasticsearch.v6.RestClientEnhanceInfo;\n+import org.elasticsearch.action.admin.indices.analyze.AnalyzeRequest;\n+\n+import java.lang.reflect.Method;\n+\n+import static org.apache.skywalking.apm.plugin.elasticsearch.v6.ElasticsearchPluginConfig.Plugin.Elasticsearch.TRACE_DSL;\n+import static org.apache.skywalking.apm.plugin.elasticsearch.v6.interceptor.Constants.DB_TYPE;\n+\n+public class IndicesClientAnalyzeMethodsInterceptor implements InstanceMethodsAroundInterceptor {\n+\n+    @Override\n+    public void beforeMethod(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes,\n+        MethodInterceptResult result) throws Throwable {\n+        AnalyzeRequest analyzeRequest = (AnalyzeRequest) (allArguments[0]);\n+\n+        RestClientEnhanceInfo restClientEnhanceInfo = (RestClientEnhanceInfo) objInst.getSkyWalkingDynamicField();\n+        if (restClientEnhanceInfo != null) {\n+            AbstractSpan span = ContextManager.createExitSpan(Constants.ANALYZE_OPERATOR_NAME, restClientEnhanceInfo.getPeers());\n+            span.setComponent(ComponentsDefine.REST_HIGH_LEVEL_CLIENT);\n+\n+            Tags.DB_TYPE.set(span, DB_TYPE);\n+            span.tag(Tags.ofKey(\"analyzer\"), analyzeRequest.analyzer());\n+            if (TRACE_DSL) {\n+                Tags.DB_STATEMENT.set(span, analyzeRequest.text()[0]);\n+            }\n+            SpanLayer.asDB(span);\n+        }\n+    }\n+\n+    @Override\n+    public Object afterMethod(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes,\n+        Object ret) throws Throwable {\n+        RestClientEnhanceInfo restClientEnhanceInfo = (RestClientEnhanceInfo) (objInst.getSkyWalkingDynamicField());", "originalCommit": "18221a7197d6bda619a185856e8d8756dac1af49", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "597ad09eae5f895c78030fb04819b211d585fad2", "url": "https://github.com/apache/skywalking/commit/597ad09eae5f895c78030fb04819b211d585fad2", "message": "remove the unnecessary use of grouping parentheses", "committedDate": "2020-12-09T01:26:28Z", "type": "commit"}, {"oid": "058b5e23ace6cfb01e8b66298d9e6d8bf723a791", "url": "https://github.com/apache/skywalking/commit/058b5e23ace6cfb01e8b66298d9e6d8bf723a791", "message": "remove the unnecessary use of grouping parentheses", "committedDate": "2020-12-09T01:28:57Z", "type": "commit"}, {"oid": "443231fecda5960761671c3a47c108ef4a9c8b48", "url": "https://github.com/apache/skywalking/commit/443231fecda5960761671c3a47c108ef4a9c8b48", "message": "Merge branch 'master' into master", "committedDate": "2020-12-09T01:41:12Z", "type": "commit"}, {"oid": "8da8855cc595c0a395ddc41ba89a998dab350391", "url": "https://github.com/apache/skywalking/commit/8da8855cc595c0a395ddc41ba89a998dab350391", "message": "Merge branch 'master' into master", "committedDate": "2020-12-09T05:46:20Z", "type": "commit"}, {"oid": "30218ed2a7330eef80dd63207d972fa67fe3ee21", "url": "https://github.com/apache/skywalking/commit/30218ed2a7330eef80dd63207d972fa67fe3ee21", "message": "Merge branch 'master' into master", "committedDate": "2020-12-18T14:28:58Z", "type": "commit"}]}