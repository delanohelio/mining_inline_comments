{"pr_number": 1600, "pr_title": "SOLR Move \"userfiles\" stuff from SolrPaths to CoreContainer.", "pr_createdAt": "2020-06-22T14:43:36Z", "pr_url": "https://github.com/apache/lucene-solr/pull/1600", "timeline": [{"oid": "d2a029c6cf78f63c52d4ed5cdda8d594d7d3091b", "url": "https://github.com/apache/lucene-solr/commit/d2a029c6cf78f63c52d4ed5cdda8d594d7d3091b", "message": "SOLR Move \"userfiles\" stuff from SolrPaths to CoreContainer.\nConvert String and File paths to Path API", "committedDate": "2020-06-22T14:31:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY0MTIwMg==", "url": "https://github.com/apache/lucene-solr/pull/1600#discussion_r444641202", "bodyText": "The delta here with Paths API isn't line-for-line; it's much better.  Files.createDirectories works if it exists and simply throws if something goes wrong.", "author": "dsmiley", "createdAt": "2020-06-24T04:45:03Z", "path": "solr/core/src/java/org/apache/solr/core/SolrPaths.java", "diffHunk": "@@ -94,26 +87,6 @@ public static Path locateSolrHome() {\n     return Paths.get(home).toAbsolutePath().normalize();\n   }\n \n-  public static void ensureUserFilesDataDir(Path solrHome) {\n-    final Path userFilesPath = getUserFilesPath(solrHome);\n-    final File userFilesDirectory = new File(userFilesPath.toString());\n-    if (!userFilesDirectory.exists()) {", "originalCommit": "d2a029c6cf78f63c52d4ed5cdda8d594d7d3091b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY0MTQ3MQ==", "url": "https://github.com/apache/lucene-solr/pull/1600#discussion_r444641471", "bodyText": "Path \"startsWith\" API makes what you were trying to do simpler (less code).", "author": "dsmiley", "createdAt": "2020-06-24T04:46:12Z", "path": "solr/core/src/java/org/apache/solr/handler/CatStream.java", "diffHunk": "@@ -158,28 +157,20 @@ public Explanation toExplanation(StreamFactory factory) throws IOException {\n   }\n \n   private List<CrawlFile> validateAndSetFilepathsInSandbox() {\n-    final String[] relativePathRoots = commaDelimitedFilepaths.split(\",\");\n-\n     final List<CrawlFile> crawlSeeds = new ArrayList<>();\n-    for (String crawlRoot : relativePathRoots) {\n-      final File crawlRootFile = new File(crawlRoot);\n-      if (crawlRootFile.isAbsolute()) {\n-        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n-            \"file/directory to stream must be provided as an absolute path: \" + crawlRoot);\n-      }\n-      if ( crawlRoot.contains(\"..\")) {\n+    for (String crawlRootStr : commaDelimitedFilepaths.split(\",\")) {\n+      Path crawlRootPath = chroot.resolve(crawlRootStr).normalize();\n+      if (! crawlRootPath.startsWith(chroot)) {", "originalCommit": "d2a029c6cf78f63c52d4ed5cdda8d594d7d3091b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTYzNDQ5Nw==", "url": "https://github.com/apache/lucene-solr/pull/1600#discussion_r571634497", "bodyText": "I hope you're right about this. In my testing it does prevent the use of \"..\", but there is nothing explicit that I've read that says the change made here will prevent the use of \"..\". This is not a small issue because of the security ramifications.\nThis PR also exposes the chroot in the error message which needs to be changed.", "author": "joel-bernstein", "createdAt": "2021-02-07T15:30:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY0MTQ3MQ=="}], "type": "inlineReview"}]}