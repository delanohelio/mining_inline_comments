{"pr_number": 2037, "pr_title": "LUCENE-9583: extract separate RandomAccessVectorValues interface", "pr_createdAt": "2020-10-26T18:22:21Z", "pr_url": "https://github.com/apache/lucene-solr/pull/2037", "timeline": [{"oid": "00e230717397455039d995969d1fb3248f3204a0", "url": "https://github.com/apache/lucene-solr/commit/00e230717397455039d995969d1fb3248f3204a0", "message": "LUCENE-9583: extract separate RandomAccessVectorValues interface", "committedDate": "2020-10-26T18:19:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA3MDkzNA==", "url": "https://github.com/apache/lucene-solr/pull/2037#discussion_r515070934", "bodyText": "Is it intentional that we are leaving search on VectorValues, but moving searchStrategy to RandomAccessVectorValues?", "author": "mikemccand", "createdAt": "2020-10-30T12:44:06Z", "path": "lucene/core/src/java/org/apache/lucene/index/VectorValues.java", "diffHunk": "@@ -75,68 +75,23 @@ public BytesRef binaryValue() throws IOException {\n   }\n \n   /**\n-   * Return a random access interface over this iterator's vectors. Calling the RandomAccess methods will\n-   * have no effect on the progress of the iteration or the values returned by this iterator. Successive calls\n-   * will retrieve independent copies that do not overwrite each others' returned values.\n+   * Return the k nearest neighbor documents as determined by comparison of their vector values\n+   * for this field, to the given vector, by the field's search strategy. If the search strategy is\n+   * reversed, lower values indicate nearer vectors, otherwise higher scores indicate nearer\n+   * vectors. Unlike relevance scores, vector scores may be negative.\n+   * @param target the vector-valued query\n+   * @param k      the number of docs to return\n+   * @param fanout control the accuracy/speed tradeoff - larger values give better recall at higher cost\n+   * @return the k nearest neighbor documents, along with their (searchStrategy-specific) scores.\n    */\n-  public abstract RandomAccess randomAccess();\n-\n-  /**\n-   * Provides random access to vectors by dense ordinal.\n-   *\n-   * @lucene.experimental\n-   */\n-  public interface RandomAccess {\n-\n-    /**\n-     * Return the number of vector values\n-     */\n-    int size();\n-\n-    /**\n-     * Return the dimension of the returned vector values\n-     */\n-    int dimension();\n-\n-    /**\n-     * Return the search strategy used to compare these vectors\n-     */\n-    SearchStrategy searchStrategy();\n-\n-    /**\n-     * Return the vector value indexed at the given ordinal. The provided floating point array may\n-     * be shared and overwritten by subsequent calls to this method and {@link #binaryValue(int)}.\n-     * @param targetOrd a valid ordinal, &ge; 0 and &lt; {@link #size()}.\n-     */\n-    float[] vectorValue(int targetOrd) throws IOException;\n-\n-    /**\n-     * Return the vector indexed at the given ordinal value as an array of bytes in a BytesRef;\n-     * these are the bytes corresponding to the float array. The provided bytes may be shared and overwritten \n-     * by subsequent calls to this method and {@link #vectorValue(int)}.\n-     * @param targetOrd a valid ordinal, &ge; 0 and &lt; {@link #size()}.\n-     */\n-    BytesRef binaryValue(int targetOrd) throws IOException;\n-\n-    /**\n-     * Return the k nearest neighbor documents as determined by comparison of their vector values\n-     * for this field, to the given vector, by the field's search strategy. If the search strategy is\n-     * reversed, lower values indicate nearer vectors, otherwise higher scores indicate nearer\n-     * vectors. Unlike relevance scores, vector scores may be negative.\n-     * @param target the vector-valued query\n-     * @param k      the number of docs to return\n-     * @param fanout control the accuracy/speed tradeoff - larger values give better recall at higher cost\n-     * @return the k nearest neighbor documents, along with their (searchStrategy-specific) scores.\n-     */\n-    TopDocs search(float[] target, int k, int fanout) throws IOException;\n-  }\n+  public abstract TopDocs search(float[] target, int k, int fanout) throws IOException;", "originalCommit": "00e230717397455039d995969d1fb3248f3204a0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE2MDM3OQ==", "url": "https://github.com/apache/lucene-solr/pull/2037#discussion_r515160379", "bodyText": "Right, it's not moved actually just still in both places. The RA one is basically always a delegate for the other one. There is some ongoing discussion about this whole topic on the JIRA, so perhaps we'll ultimately end up with something different, but for the nonce I think we can commit this in order to make progress while we iterate.", "author": "msokolov", "createdAt": "2020-10-30T14:57:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA3MDkzNA=="}], "type": "inlineReview"}]}