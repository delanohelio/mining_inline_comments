{"pr_number": 2018, "pr_title": "LUCENE-9582: rename VectorValues.ScoreFunction to SearchStrategy", "pr_createdAt": "2020-10-21T22:55:19Z", "pr_url": "https://github.com/apache/lucene-solr/pull/2018", "timeline": [{"oid": "2e5c55959d21935a745410011a1ee1855bd3de9e", "url": "https://github.com/apache/lucene-solr/commit/2e5c55959d21935a745410011a1ee1855bd3de9e", "message": "LUCENE-9582: rename VectorValues.ScoreFunction to SearchStrategy", "committedDate": "2020-10-21T22:42:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM4NTc4Ng==", "url": "https://github.com/apache/lucene-solr/pull/2018#discussion_r510385786", "bodyText": "Should we add a light unit test for these utility methods?", "author": "jtibshirani", "createdAt": "2020-10-22T18:54:07Z", "path": "lucene/core/src/java/org/apache/lucene/util/VectorUtil.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.lucene.util;\n+ \n+/**\n+ * Utilities for computations with numeric arrays\n+ */\n+public final class VectorUtil {", "originalCommit": "2e5c55959d21935a745410011a1ee1855bd3de9e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDg5NTM5MQ==", "url": "https://github.com/apache/lucene-solr/pull/2018#discussion_r510895391", "bodyText": "oh, good call. I will add", "author": "msokolov", "createdAt": "2020-10-23T13:47:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM4NTc4Ng=="}], "type": "inlineReview"}, {"oid": "c41dc86f94b86b6b727a7377d925dc5d341fe894", "url": "https://github.com/apache/lucene-solr/commit/c41dc86f94b86b6b727a7377d925dc5d341fe894", "message": "add TestVectorUtil", "committedDate": "2020-10-23T14:19:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA4NzQ4Mw==", "url": "https://github.com/apache/lucene-solr/pull/2018#discussion_r511087483", "bodyText": "Just noticed this rename seems accidental.", "author": "jtibshirani", "createdAt": "2020-10-23T19:03:11Z", "path": "lucene/queries/src/java/org/apache/lucene/queries/intervals/IntervalQuery.java", "diffHunk": "@@ -99,7 +99,7 @@ public IntervalQuery(String field, IntervalsSource intervalsSource, float pivot,\n   private IntervalQuery(String field, IntervalsSource intervalsSource, IntervalScoreFunction scoreFunction) {\n     Objects.requireNonNull(field, \"null field aren't accepted\");\n     Objects.requireNonNull(intervalsSource, \"null intervalsSource aren't accepted\");\n-    Objects.requireNonNull(scoreFunction, \"null scoreFunction aren't accepted\");\n+    Objects.requireNonNull(scoreFunction, \"null searchStrategy aren't accepted\");", "originalCommit": "c41dc86f94b86b6b727a7377d925dc5d341fe894", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA5Mjg1Nw==", "url": "https://github.com/apache/lucene-solr/pull/2018#discussion_r511092857", "bodyText": "Small comment: I don't think you mean MSE here since it's not a mean, it could be 'squared distance' ?", "author": "jtibshirani", "createdAt": "2020-10-23T19:12:02Z", "path": "lucene/core/src/test/org/apache/lucene/util/TestVectorUtil.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.lucene.util;\n+\n+public class TestVectorUtil extends LuceneTestCase {\n+\n+  public void testBasicDotProduct() {\n+    assertEquals(5, VectorUtil.dotProduct(new float[]{1, 2, 3}, new float[]{-10, 0, 5}), 0);\n+  }\n+\n+  public void testSelfDotProduct() {\n+    // the dot product of a vector with itself is equal to the sum of the squares of its components\n+    float[] v = randomVector();\n+    assertEquals(l2(v), VectorUtil.dotProduct(v, v), 1e-5);\n+  }\n+\n+  public void testOrthogonalDotProduct() {\n+    // the dot product of two perpendicular vectors is 0\n+    float[] v = new float[2];\n+    v[0] = random().nextInt(100);\n+    v[1] = random().nextInt(100);\n+    float[] u = new float[2];\n+    u[0] = v[1];\n+    u[1] = -v[0];\n+    assertEquals(0, VectorUtil.dotProduct(u, v), 1e-5);\n+  }\n+\n+  public void testSelfSquareSum() {\n+    // the l2 distance of a vector with itself is zero\n+    float[] v = randomVector();\n+    assertEquals(0, VectorUtil.squareSum(v, v), 1e-5);\n+  }\n+\n+  public void testBasicSquareSum() {\n+    assertEquals(12, VectorUtil.squareSum(new float[]{1, 2, 3}, new float[]{-1, 0, 5}), 0);\n+  }\n+\n+  public void testRandomSquareSum() {\n+    // the MSE of a vector with its inverse is equal to four times the sum of squares of its components", "originalCommit": "c41dc86f94b86b6b727a7377d925dc5d341fe894", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "60624fa59254b1fe5fb1e2b092964eb59e5e5d0e", "url": "https://github.com/apache/lucene-solr/commit/60624fa59254b1fe5fb1e2b092964eb59e5e5d0e", "message": "address review comments", "committedDate": "2020-10-23T21:29:17Z", "type": "commit"}, {"oid": "64ee9eb4208bde77034423edb21a598ece6ab2a5", "url": "https://github.com/apache/lucene-solr/commit/64ee9eb4208bde77034423edb21a598ece6ab2a5", "message": "renamed squareSum to squareDistance", "committedDate": "2020-10-23T21:33:48Z", "type": "commit"}]}