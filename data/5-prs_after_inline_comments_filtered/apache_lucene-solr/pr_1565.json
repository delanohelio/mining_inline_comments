{"pr_number": 1565, "pr_title": "SOLR-12823: fix test failures", "pr_createdAt": "2020-06-10T20:56:50Z", "pr_url": "https://github.com/apache/lucene-solr/pull/1565", "timeline": [{"oid": "883c4c930672aa8b0cc7f2021f34a8721e7c5c4a", "url": "https://github.com/apache/lucene-solr/commit/883c4c930672aa8b0cc7f2021f34a8721e7c5c4a", "message": "SOLR-12823: fix failures in CloudHttp2SolrClientTest CloudSolrClientTest TestCloudSolrClientConnections", "committedDate": "2020-06-10T20:51:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQwOTUzNA==", "url": "https://github.com/apache/lucene-solr/pull/1565#discussion_r438409534", "bodyText": "Could have instead picked another path other than CLUSTER_STATE from those created in ZkController.createClusterZkNodes() and explicitly tested it like was done before, but this seemed cleaner.\nOpen to change.", "author": "murblanc", "createdAt": "2020-06-10T21:08:39Z", "path": "solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.java", "diffHunk": "@@ -476,27 +476,32 @@ public synchronized void createClusterStateWatchersAndUpdate() throws KeeperExce\n \n     log.debug(\"Updating cluster state from ZooKeeper... \");\n \n-    // on reconnect of SolrZkClient force refresh and re-add watches.\n-    loadClusterProperties();\n-    refreshLiveNodes(new LiveNodeWatcher());\n-    refreshCollections();\n-    refreshCollectionList(new CollectionsChildWatcher());\n-    refreshAliases(aliasesManager);\n-\n-    if (securityNodeListener != null) {\n-      addSecurityNodeWatcher(pair -> {\n-        ConfigData cd = new ConfigData();\n-        cd.data = pair.first() == null || pair.first().length == 0 ? EMPTY_MAP : Utils.getDeepCopy((Map) fromJSON(pair.first()), 4, false);\n-        cd.version = pair.second() == null ? -1 : pair.second().getVersion();\n-        securityData = cd;\n-        securityNodeListener.run();\n+    try {\n+      // on reconnect of SolrZkClient force refresh and re-add watches.\n+      loadClusterProperties();\n+      refreshLiveNodes(new LiveNodeWatcher());\n+      refreshCollections();\n+      refreshCollectionList(new CollectionsChildWatcher());\n+      refreshAliases(aliasesManager);\n+\n+      if (securityNodeListener != null) {\n+        addSecurityNodeWatcher(pair -> {\n+          ConfigData cd = new ConfigData();\n+          cd.data = pair.first() == null || pair.first().length == 0 ? EMPTY_MAP : Utils.getDeepCopy((Map) fromJSON(pair.first()), 4, false);\n+          cd.version = pair.second() == null ? -1 : pair.second().getVersion();\n+          securityData = cd;\n+          securityNodeListener.run();\n+        });\n+        securityData = getSecurityProps(true);\n+      }\n+\n+      collectionPropsObservers.forEach((k, v) -> {\n+        collectionPropsWatchers.computeIfAbsent(k, PropsWatcher::new).refreshAndWatch(true);\n       });\n-      securityData = getSecurityProps(true);\n+    } catch (KeeperException.NoNodeException nne) {\n+      throw new SolrException(ErrorCode.SERVICE_UNAVAILABLE,\n+          \"Cannot connect to cluster at \" + zkClient.getZkServerAddress() + \": cluster not found/not ready\");", "originalCommit": "883c4c930672aa8b0cc7f2021f34a8721e7c5c4a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}