{"pr_number": 2138, "pr_title": "LUCENE-9635: BM25FQuery - Mask encoded norm long value in array lookup", "pr_createdAt": "2020-12-09T21:43:26Z", "pr_url": "https://github.com/apache/lucene-solr/pull/2138", "timeline": [{"oid": "ca1b48b0780f4e06c27e2481cc38b8261205dcca", "url": "https://github.com/apache/lucene-solr/commit/ca1b48b0780f4e06c27e2481cc38b8261205dcca", "message": "LUCENE-9635: BM25FQuery - Mask encoded norm long value in array lookup to avoid negative norms in long documents", "committedDate": "2020-12-09T21:48:45Z", "type": "forcePushed"}, {"oid": "2a49e15b21c0d7273aeca9bef209fcc68193c4ef", "url": "https://github.com/apache/lucene-solr/commit/2a49e15b21c0d7273aeca9bef209fcc68193c4ef", "message": "LUCENE-9635: BM25FQuery - Mask encoded norm long value in array lookup to avoid negative norms in long documents", "committedDate": "2020-12-09T21:59:38Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQxMzM2OQ==", "url": "https://github.com/apache/lucene-solr/pull/2138#discussion_r542413369", "bodyText": "Actually, I see that SimilarityBase.java uses Byte.toUnsignedInt instead -- should we use that here?  It is the same computation?\nOr, if you want to stick with & 0xff, could you add parens around the (byte) cast to make the order of operations clear?", "author": "mikemccand", "createdAt": "2020-12-14T14:11:55Z", "path": "lucene/sandbox/src/java/org/apache/lucene/sandbox/search/MultiNormsLeafSimScorer.java", "diffHunk": "@@ -128,7 +128,7 @@ public boolean advanceExact(int target) throws IOException {\n       for (int i = 0; i < normsArr.length; i++) {\n         boolean found = normsArr[i].advanceExact(target);\n         assert found;\n-        normValue += weightArr[i] * LENGTH_TABLE[(byte) normsArr[i].longValue()];\n+        normValue += weightArr[i] * LENGTH_TABLE[(byte) normsArr[i].longValue() & 0xff];", "originalCommit": "2a49e15b21c0d7273aeca9bef209fcc68193c4ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTY1MDc3Mg==", "url": "https://github.com/apache/lucene-solr/pull/2138#discussion_r545650772", "bodyText": "I've updated the change using Byte.toUnsignedInt", "author": "yiluncui", "createdAt": "2020-12-18T08:31:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQxMzM2OQ=="}], "type": "inlineReview"}, {"oid": "72e88fcb623989e0a59bc90ba3141c8912989863", "url": "https://github.com/apache/lucene-solr/commit/72e88fcb623989e0a59bc90ba3141c8912989863", "message": "LUCENE-9635: BM25FQuery - Mask encoded norm long value in array lookup to avoid negative norms in long documents", "committedDate": "2020-12-18T08:27:59Z", "type": "commit"}, {"oid": "72e88fcb623989e0a59bc90ba3141c8912989863", "url": "https://github.com/apache/lucene-solr/commit/72e88fcb623989e0a59bc90ba3141c8912989863", "message": "LUCENE-9635: BM25FQuery - Mask encoded norm long value in array lookup to avoid negative norms in long documents", "committedDate": "2020-12-18T08:27:59Z", "type": "forcePushed"}]}