{"pr_number": 1553, "pr_title": "LUCENE-9393: FunctionScoreQuery turns TOP_DOCS to COMPLETE in inner weights", "pr_createdAt": "2020-06-04T23:07:54Z", "pr_url": "https://github.com/apache/lucene-solr/pull/1553", "timeline": [{"oid": "d7ad3de182a0475151f47af66329173de59e2b18", "url": "https://github.com/apache/lucene-solr/commit/d7ad3de182a0475151f47af66329173de59e2b18", "message": "LUCENE-9393: FunctionScoreQuery turns TOP_DOCS to COMPLETE in inner weights\n\nFunctionScoreQuery can't really use WAND algorithm even if TOP_DOCS score mode is requested. This commit makes the inner weight created use COMPLETE", "committedDate": "2020-06-04T23:10:22Z", "type": "commit"}, {"oid": "d7ad3de182a0475151f47af66329173de59e2b18", "url": "https://github.com/apache/lucene-solr/commit/d7ad3de182a0475151f47af66329173de59e2b18", "message": "LUCENE-9393: FunctionScoreQuery turns TOP_DOCS to COMPLETE in inner weights\n\nFunctionScoreQuery can't really use WAND algorithm even if TOP_DOCS score mode is requested. This commit makes the inner weight created use COMPLETE", "committedDate": "2020-06-04T23:10:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYwNDQ4Nw==", "url": "https://github.com/apache/lucene-solr/pull/1553#discussion_r435604487", "bodyText": "While this test makes the current code pass, I'm trying to understand why it is correct. Why do we pass a COMPLETE_NO_SCORES to the underlying weight when the function's ValueSource doesn't need scores?", "author": "tflobbe", "createdAt": "2020-06-04T23:21:40Z", "path": "lucene/queries/src/test/org/apache/lucene/queries/function/TestFunctionScoreQuery.java", "diffHunk": "@@ -244,4 +247,33 @@ public void testAccessToValueSource() throws Exception {\n \n   }\n \n+  public void testScoreMode() throws Exception {\n+    // Value Source doesn't need scores\n+    assertInnerScoreMode(ScoreMode.COMPLETE_NO_SCORES, ScoreMode.COMPLETE, DoubleValuesSource.fromDoubleField(\"foo\"));", "originalCommit": "d7ad3de182a0475151f47af66329173de59e2b18", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTcyNjQ5Ng==", "url": "https://github.com/apache/lucene-solr/pull/1553#discussion_r435726496", "bodyText": "If the function's values source doesn't need scores, then Scorer#score() will never be called on the inner scorers, so we can treat them as filters, which is what COMPLETE_NO_SCORES does.", "author": "jpountz", "createdAt": "2020-06-05T07:01:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYwNDQ4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA2MjcyMA==", "url": "https://github.com/apache/lucene-solr/pull/1553#discussion_r436062720", "bodyText": "Ah, right. ValueSources like MultiplicativeBoostValuesSource will need scores because it uses the DoubleValues scores argument.", "author": "tflobbe", "createdAt": "2020-06-05T17:31:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYwNDQ4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTcyNTg3Mw==", "url": "https://github.com/apache/lucene-solr/pull/1553#discussion_r435725873", "bodyText": "I think we can simplify the above to\nif (scoreMode.needsScores() && source.needsScores()) {\n  sm = ScoreMode.COMPLETE;\n} else {\n  sm = ScoreMode.COMPLETE_NO_SCORES;\n}", "author": "jpountz", "createdAt": "2020-06-05T07:00:05Z", "path": "lucene/queries/src/java/org/apache/lucene/queries/function/FunctionScoreQuery.java", "diffHunk": "@@ -105,7 +105,13 @@ public static FunctionScoreQuery boostByQuery(Query in, Query boostMatch, float\n \n   @Override\n   public Weight createWeight(IndexSearcher searcher, ScoreMode scoreMode, float boost) throws IOException {\n-    Weight inner = in.createWeight(searcher, scoreMode.needsScores() && source.needsScores() ? scoreMode : ScoreMode.COMPLETE_NO_SCORES, 1f);\n+    ScoreMode sm = scoreMode;\n+    if (scoreMode.needsScores() && source.needsScores() && scoreMode == ScoreMode.TOP_SCORES) {\n+      sm = ScoreMode.COMPLETE;\n+    } else if (!scoreMode.needsScores() || !source.needsScores()) {\n+      sm = ScoreMode.COMPLETE_NO_SCORES;\n+    }", "originalCommit": "d7ad3de182a0475151f47af66329173de59e2b18", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "08dbf5592f28b160fc39036ee7e00d1a389ee1b3", "url": "https://github.com/apache/lucene-solr/commit/08dbf5592f28b160fc39036ee7e00d1a389ee1b3", "message": "Addressed PR comment", "committedDate": "2020-06-05T17:33:12Z", "type": "commit"}, {"oid": "a43cb45246b91c19c1dd4fa2f7f06c4e3189f124", "url": "https://github.com/apache/lucene-solr/commit/a43cb45246b91c19c1dd4fa2f7f06c4e3189f124", "message": "Add CHANGES entry", "committedDate": "2020-06-05T17:40:58Z", "type": "commit"}]}