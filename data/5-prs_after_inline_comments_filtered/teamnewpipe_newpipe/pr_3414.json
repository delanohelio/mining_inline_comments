{"pr_number": 3414, "pr_title": "Fix ReCaptcha Activity for another type of recaptcha page", "pr_createdAt": "2020-04-10T17:41:18Z", "pr_url": "https://github.com/TeamNewPipe/NewPipe/pull/3414", "timeline": [{"oid": "bd0d7ce06d89d0f3b13715c75a796b8ca8f44bd6", "url": "https://github.com/TeamNewPipe/NewPipe/commit/bd0d7ce06d89d0f3b13715c75a796b8ca8f44bd6", "message": "Save and restore cookies to/from preferences\n\nSo that the user does not have to solve a recaptcha every time he opens the app", "committedDate": "2020-04-11T09:51:40Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzEwNTc2MA==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3414#discussion_r407105760", "bodyText": "Is that information useful to find further cookies? We might want to show a snackbar to allow reporting the error and more importantly, the url", "author": "TobiGr", "createdAt": "2020-04-11T20:10:46Z", "path": "app/src/main/java/org/schabi/newpipe/ReCaptchaActivity.java", "diffHunk": "@@ -137,23 +178,54 @@ private void saveCookiesAndFinish() {\n     }\n \n \n-    private void handleCookies(final String url) {\n+    private void handleCookiesFromUrl(final @Nullable String url) {\n+        if (MainActivity.DEBUG) {\n+            Log.d(TAG, \"handleCookiesFromUrl: url=\" + (url == null ? \"null\" : url));\n+        }\n+\n+        if (url == null) {\n+            return;\n+        }\n+\n         String cookies = CookieManager.getInstance().getCookie(url);\n+        handleCookies(cookies);\n+\n+        // sometimes cookies are inside the url\n+        int abuseStart = url.indexOf(\"google_abuse=\");\n+        if (abuseStart != -1) {\n+            int abuseEnd = url.indexOf(\"+path\");\n+\n+            try {\n+                String abuseCookie = url.substring(abuseStart + 13, abuseEnd);\n+                abuseCookie = URLDecoder.decode(abuseCookie, \"UTF-8\");\n+                handleCookies(abuseCookie);\n+            } catch (UnsupportedEncodingException | StringIndexOutOfBoundsException e) {\n+                if (MainActivity.DEBUG) {\n+                    e.printStackTrace();\n+                    Log.d(TAG, \"handleCookiesFromUrl: invalid google abuse starting at \"\n+                            + abuseStart + \" and ending at \" + abuseEnd + \" for url \" + url);", "originalCommit": "bd0d7ce06d89d0f3b13715c75a796b8ca8f44bd6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc3OTMxOQ==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3414#discussion_r408779319", "bodyText": "This piece of code has never been useful in my testing, since it just obtains a cookie that would anyway appear as a cookie in one of the subsequent requests. Though to prevent issues under different environment where the webview behaves strangely (who knows?), it doesn't hurt to obtain the cookie twice in a different way and call it a day.\nI left a Log there just so that when I send people an apk to debug, I don't have to make a custom one that throws a random Exception with the log message inside (as I did with the other cookie testing apk), but I can just tell them to install a logcat viewer and I have the information needed for the whole execution of the activity.\nAnyway, if the catch block is ever reached it means the url isn't useful to obtain a cookie, so there is no need to report anything to a normal user imho.", "author": "Stypox", "createdAt": "2020-04-15T11:44:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzEwNTc2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc4NDYwOQ==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3414#discussion_r408784609", "bodyText": "However logcat apps need root access since Jelly Bean.", "author": "wb9688", "createdAt": "2020-04-15T11:54:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzEwNTc2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg0Mjg3Mw==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3414#discussion_r408842873", "bodyText": "Oh, do they? I didn't know ;-)\nBut what could I implement then, that would log everything and display it to the user after he presses \"Ok\" on a snackbar? Should I do some kind of bug report, but with logs instead of stack trace?", "author": "Stypox", "createdAt": "2020-04-15T13:31:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzEwNTc2MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODcyNjYzOA==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3414#discussion_r408726638", "bodyText": "Why this change? We have final after the @s everywhere\u2026", "author": "wb9688", "createdAt": "2020-04-15T10:03:17Z", "path": "app/src/main/java/org/schabi/newpipe/ReCaptchaActivity.java", "diffHunk": "@@ -137,23 +178,54 @@ private void saveCookiesAndFinish() {\n     }\n \n \n-    private void handleCookies(final String url) {\n+    private void handleCookiesFromUrl(final @Nullable String url) {\n+        if (MainActivity.DEBUG) {\n+            Log.d(TAG, \"handleCookiesFromUrl: url=\" + (url == null ? \"null\" : url));\n+        }\n+\n+        if (url == null) {\n+            return;\n+        }\n+\n         String cookies = CookieManager.getInstance().getCookie(url);\n+        handleCookies(cookies);\n+\n+        // sometimes cookies are inside the url\n+        int abuseStart = url.indexOf(\"google_abuse=\");\n+        if (abuseStart != -1) {\n+            int abuseEnd = url.indexOf(\"+path\");\n+\n+            try {\n+                String abuseCookie = url.substring(abuseStart + 13, abuseEnd);\n+                abuseCookie = URLDecoder.decode(abuseCookie, \"UTF-8\");\n+                handleCookies(abuseCookie);\n+            } catch (UnsupportedEncodingException | StringIndexOutOfBoundsException e) {\n+                if (MainActivity.DEBUG) {\n+                    e.printStackTrace();\n+                    Log.d(TAG, \"handleCookiesFromUrl: invalid google abuse starting at \"\n+                            + abuseStart + \" and ending at \" + abuseEnd + \" for url \" + url);\n+                }\n+            }\n+        }\n+    }\n+\n+    private void handleCookies(final @Nullable String cookies) {\n         if (MainActivity.DEBUG) {\n-            Log.d(TAG, \"handleCookies: \"\n-                    + \"url=\" + url + \"; cookies=\" + (cookies == null ? \"null\" : cookies));\n+            Log.d(TAG, \"handleCookies: cookies=\" + (cookies == null ? \"null\" : cookies));\n         }\n+\n         if (cookies == null) {\n             return;\n         }\n \n         addYoutubeCookies(cookies);\n-        // add other methods to extract cookies here\n+        // add here methods to extract cookies for other services\n     }\n \n-    private void addYoutubeCookies(@NonNull final String cookies) {\n+    private void addYoutubeCookies(final @NonNull String cookies) {", "originalCommit": "bd0d7ce06d89d0f3b13715c75a796b8ca8f44bd6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc3MzEyMg==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3414#discussion_r408773122", "bodyText": "I don't know ;-)\nFixed", "author": "Stypox", "createdAt": "2020-04-15T11:32:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODcyNjYzOA=="}], "type": "inlineReview"}, {"oid": "e2cbf40957eb2a0ebd0085bf0d504cb30ef3931b", "url": "https://github.com/TeamNewPipe/NewPipe/commit/e2cbf40957eb2a0ebd0085bf0d504cb30ef3931b", "message": "Fix recaptcha activity for another type of recaptcha page\n\nTry to get cookies from pages even when they start loading, because non-html pages like ones with `pbj=1` never stop loading.\nTry to extract the cookie directly from the redirection url, by looking at the field \"google_abuse=\".\nAdd `GOOGLE_ABUSE_EXEMPTION=` to the youtube recaptcha cookies.", "committedDate": "2020-04-15T11:30:27Z", "type": "commit"}, {"oid": "b8efef7c7a9f3fce8e57a5fb4f6cf1b0f5a3cfd3", "url": "https://github.com/TeamNewPipe/NewPipe/commit/b8efef7c7a9f3fce8e57a5fb4f6cf1b0f5a3cfd3", "message": "Remove duplicate check if cookies are already present", "committedDate": "2020-04-15T11:30:27Z", "type": "commit"}, {"oid": "ee5ce0c8096cf735588b7b9d13bdc74d39f0f69d", "url": "https://github.com/TeamNewPipe/NewPipe/commit/ee5ce0c8096cf735588b7b9d13bdc74d39f0f69d", "message": "Save and restore cookies to/from preferences\n\n    So that the user does not have to solve a recaptcha every time he opens the app", "committedDate": "2020-04-15T11:30:27Z", "type": "commit"}, {"oid": "ee5ce0c8096cf735588b7b9d13bdc74d39f0f69d", "url": "https://github.com/TeamNewPipe/NewPipe/commit/ee5ce0c8096cf735588b7b9d13bdc74d39f0f69d", "message": "Save and restore cookies to/from preferences\n\n    So that the user does not have to solve a recaptcha every time he opens the app", "committedDate": "2020-04-15T11:30:27Z", "type": "forcePushed"}]}