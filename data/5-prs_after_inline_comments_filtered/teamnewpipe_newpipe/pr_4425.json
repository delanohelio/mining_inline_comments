{"pr_number": 4425, "pr_title": "Replace specific enqueue options with one", "pr_createdAt": "2020-10-06T12:55:41Z", "pr_url": "https://github.com/TeamNewPipe/NewPipe/pull/4425", "timeline": [{"oid": "cd515993f5ee47edd17aa737b537ab3c614b671d", "url": "https://github.com/TeamNewPipe/NewPipe/commit/cd515993f5ee47edd17aa737b537ab3c614b671d", "message": "Enqueue: Add auto-select StreamDialogEntry for current PlayerType", "committedDate": "2020-10-06T11:33:44Z", "type": "commit"}, {"oid": "ed6fc4d848ba113c1087ca453541af08752e4316", "url": "https://github.com/TeamNewPipe/NewPipe/commit/ed6fc4d848ba113c1087ca453541af08752e4316", "message": "Enqueue: Replaced specific StreamDialogEntry items with one\n\nThe enqueue options won't be shown in the dialogs if the Player service is not running. When it's running one item (enqueue stream) will be shown and enqueues the item into the Player type which is currently selected.", "committedDate": "2020-10-06T12:38:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI1NzI3Mw==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/4425#discussion_r500257273", "bodyText": "br br?", "author": "opusforlife2", "createdAt": "2020-10-06T13:03:17Z", "path": "app/src/main/java/org/schabi/newpipe/util/StreamDialogEntry.java", "diffHunk": "@@ -1,21 +1,61 @@\n package org.schabi.newpipe.util;\n \n import android.content.Context;\n+import android.widget.Toast;\n \n import androidx.fragment.app.Fragment;\n \n import org.schabi.newpipe.R;\n import org.schabi.newpipe.extractor.stream.StreamInfoItem;\n import org.schabi.newpipe.local.dialog.PlaylistAppendDialog;\n+import org.schabi.newpipe.player.MainPlayer;\n+import org.schabi.newpipe.player.helper.PlayerHolder;\n import org.schabi.newpipe.player.playqueue.SinglePlayQueue;\n \n+import java.util.ArrayList;\n import java.util.Collections;\n \n public enum StreamDialogEntry {\n     //////////////////////////////////////\n     // enum values with DEFAULT actions //\n     //////////////////////////////////////\n \n+    /**\n+     * Enqueues the stream automatically to the current PlayerType.<br>\n+     * <br>", "originalCommit": "ed6fc4d848ba113c1087ca453541af08752e4316", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI1ODg3MQ==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/4425#discussion_r500258871", "bodyText": "This is  just Java Doc syntax for linebreaks.", "author": "vkay94", "createdAt": "2020-10-06T13:05:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI1NzI3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI1OTY5Mg==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/4425#discussion_r500259692", "bodyText": "Ah.", "author": "opusforlife2", "createdAt": "2020-10-06T13:06:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI1NzI3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI4MjgwNg==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/4425#discussion_r500282806", "bodyText": "Add a method to VideoPlayerImpl that just returns the playerType field", "author": "Stypox", "createdAt": "2020-10-06T13:36:34Z", "path": "app/src/main/java/org/schabi/newpipe/player/helper/PlayerHolder.java", "diffHunk": "@@ -31,6 +35,24 @@ private PlayerHolder() {\n     private static MainPlayer playerService;\n     private static VideoPlayerImpl player;\n \n+    /**\n+     * Returns the current {@link MainPlayer.PlayerType} of the {@link MainPlayer} service,\n+     * otherwise `null` if no service running.\n+     *\n+     * @return Current PlayerType\n+     */\n+    @Nullable\n+    public static MainPlayer.PlayerType getType() {\n+        if (player == null) {\n+            return null;\n+        }\n+\n+        return player.videoPlayerSelected() ? MainPlayer.PlayerType.VIDEO\n+                : player.popupPlayerSelected() ? MainPlayer.PlayerType.POPUP\n+                : player.audioPlayerSelected() ? MainPlayer.PlayerType.AUDIO\n+                : null;", "originalCommit": "ed6fc4d848ba113c1087ca453541af08752e4316", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMwMTcwMg==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/4425#discussion_r500301702", "bodyText": "Alright, I keep the static method in PlayerHolder, so it will call return player.getPlayerType().", "author": "vkay94", "createdAt": "2020-10-06T13:56:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI4MjgwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI4OTMzNw==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/4425#discussion_r500289337", "bodyText": "I think you can replace this part with something like this, and call it a day. As you said the type can never theoretically be null or an invalid value, so we can just include that impossible situation into the condition for opening the main video player (enqueueing when there is no player does not raise errors, but just opens that player).\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (type == null) {\n          \n          \n            \n                        // This code shouldn't be reached since the checks for appending this entry should be\n          \n          \n            \n                        // done within the showStreamDialog calls.\n          \n          \n            \n                        Toast.makeText(fragment.getContext(),\n          \n          \n            \n                                \"No player currently playing\", Toast.LENGTH_SHORT).show();\n          \n          \n            \n                        return;\n          \n          \n            \n                    }\n          \n          \n            \n                    switch (type) {\n          \n          \n            \n                        case AUDIO:\n          \n          \n            \n                            NavigationHelper.enqueueOnBackgroundPlayer(fragment.getContext(),\n          \n          \n            \n                                    new SinglePlayQueue(item), false);\n          \n          \n            \n                            break;\n          \n          \n            \n                        case POPUP:\n          \n          \n            \n                            NavigationHelper.enqueueOnPopupPlayer(fragment.getContext(),\n          \n          \n            \n                                    new SinglePlayQueue(item), false);\n          \n          \n            \n                            break;\n          \n          \n            \n                        case VIDEO:\n          \n          \n            \n                            NavigationHelper.enqueueOnVideoPlayer(fragment.getContext(),\n          \n          \n            \n                                    new SinglePlayQueue(item), false);\n          \n          \n            \n                            break;\n          \n          \n            \n                        default:\n          \n          \n            \n                            // Same as above, but keep it for now for debugging.\n          \n          \n            \n                            Toast.makeText(fragment.getContext(),\n          \n          \n            \n                                    \"Unreachable code executed\", Toast.LENGTH_SHORT).show();\n          \n          \n            \n                            break;\n          \n          \n            \n                    }\n          \n          \n            \n                    if (type == AUDIO) {\n          \n          \n            \n                        NavigationHelper.enqueueOnBackgroundPlayer(fragment.getContext(),\n          \n          \n            \n                                new SinglePlayQueue(item), false);\n          \n          \n            \n                    } else if (type == POPUP) {\n          \n          \n            \n                        NavigationHelper.enqueueOnPopupPlayer(fragment.getContext(),\n          \n          \n            \n                                new SinglePlayQueue(item), false);\n          \n          \n            \n                    } else /* type == VIDEO */ {\n          \n          \n            \n                        NavigationHelper.enqueueOnVideoPlayer(fragment.getContext(),\n          \n          \n            \n                                new SinglePlayQueue(item), false);\n          \n          \n            \n                    }", "author": "Stypox", "createdAt": "2020-10-06T13:43:27Z", "path": "app/src/main/java/org/schabi/newpipe/util/StreamDialogEntry.java", "diffHunk": "@@ -1,21 +1,61 @@\n package org.schabi.newpipe.util;\n \n import android.content.Context;\n+import android.widget.Toast;\n \n import androidx.fragment.app.Fragment;\n \n import org.schabi.newpipe.R;\n import org.schabi.newpipe.extractor.stream.StreamInfoItem;\n import org.schabi.newpipe.local.dialog.PlaylistAppendDialog;\n+import org.schabi.newpipe.player.MainPlayer;\n+import org.schabi.newpipe.player.helper.PlayerHolder;\n import org.schabi.newpipe.player.playqueue.SinglePlayQueue;\n \n+import java.util.ArrayList;\n import java.util.Collections;\n \n public enum StreamDialogEntry {\n     //////////////////////////////////////\n     // enum values with DEFAULT actions //\n     //////////////////////////////////////\n \n+    /**\n+     * Enqueues the stream automatically to the current PlayerType.<br>\n+     * <br>\n+     * Info: Add this entry within showStreamDialog.\n+     */\n+    enqueue_stream(R.string.enqueue_stream, (fragment, item) -> {\n+        final MainPlayer.PlayerType type = PlayerHolder.getType();\n+\n+        if (type == null) {\n+            // This code shouldn't be reached since the checks for appending this entry should be\n+            // done within the showStreamDialog calls.\n+            Toast.makeText(fragment.getContext(),\n+                    \"No player currently playing\", Toast.LENGTH_SHORT).show();\n+            return;\n+        }\n+        switch (type) {\n+            case AUDIO:\n+                NavigationHelper.enqueueOnBackgroundPlayer(fragment.getContext(),\n+                        new SinglePlayQueue(item), false);\n+                break;\n+            case POPUP:\n+                NavigationHelper.enqueueOnPopupPlayer(fragment.getContext(),\n+                        new SinglePlayQueue(item), false);\n+                break;\n+            case VIDEO:\n+                NavigationHelper.enqueueOnVideoPlayer(fragment.getContext(),\n+                        new SinglePlayQueue(item), false);\n+                break;\n+            default:\n+                // Same as above, but keep it for now for debugging.\n+                Toast.makeText(fragment.getContext(),\n+                        \"Unreachable code executed\", Toast.LENGTH_SHORT).show();\n+                break;\n+        }", "originalCommit": "ed6fc4d848ba113c1087ca453541af08752e4316", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMwMzU0NA==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/4425#discussion_r500303544", "bodyText": "I kept it before reviews, when there might occur something unexpected, but yeah, I'll make it more compact.", "author": "vkay94", "createdAt": "2020-10-06T13:58:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI4OTMzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI5MDI2Mg==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/4425#discussion_r500290262", "bodyText": "Remove this and the one below, since they are now unused.", "author": "Stypox", "createdAt": "2020-10-06T13:44:24Z", "path": "app/src/main/java/org/schabi/newpipe/util/StreamDialogEntry.java", "diffHunk": "@@ -1,21 +1,61 @@\n package org.schabi.newpipe.util;\n \n import android.content.Context;\n+import android.widget.Toast;\n \n import androidx.fragment.app.Fragment;\n \n import org.schabi.newpipe.R;\n import org.schabi.newpipe.extractor.stream.StreamInfoItem;\n import org.schabi.newpipe.local.dialog.PlaylistAppendDialog;\n+import org.schabi.newpipe.player.MainPlayer;\n+import org.schabi.newpipe.player.helper.PlayerHolder;\n import org.schabi.newpipe.player.playqueue.SinglePlayQueue;\n \n+import java.util.ArrayList;\n import java.util.Collections;\n \n public enum StreamDialogEntry {\n     //////////////////////////////////////\n     // enum values with DEFAULT actions //\n     //////////////////////////////////////\n \n+    /**\n+     * Enqueues the stream automatically to the current PlayerType.<br>\n+     * <br>\n+     * Info: Add this entry within showStreamDialog.\n+     */\n+    enqueue_stream(R.string.enqueue_stream, (fragment, item) -> {\n+        final MainPlayer.PlayerType type = PlayerHolder.getType();\n+\n+        if (type == null) {\n+            // This code shouldn't be reached since the checks for appending this entry should be\n+            // done within the showStreamDialog calls.\n+            Toast.makeText(fragment.getContext(),\n+                    \"No player currently playing\", Toast.LENGTH_SHORT).show();\n+            return;\n+        }\n+        switch (type) {\n+            case AUDIO:\n+                NavigationHelper.enqueueOnBackgroundPlayer(fragment.getContext(),\n+                        new SinglePlayQueue(item), false);\n+                break;\n+            case POPUP:\n+                NavigationHelper.enqueueOnPopupPlayer(fragment.getContext(),\n+                        new SinglePlayQueue(item), false);\n+                break;\n+            case VIDEO:\n+                NavigationHelper.enqueueOnVideoPlayer(fragment.getContext(),\n+                        new SinglePlayQueue(item), false);\n+                break;\n+            default:\n+                // Same as above, but keep it for now for debugging.\n+                Toast.makeText(fragment.getContext(),\n+                        \"Unreachable code executed\", Toast.LENGTH_SHORT).show();\n+                break;\n+        }\n+    }),\n+\n     enqueue_on_background(R.string.enqueue_on_background, (fragment, item) ->", "originalCommit": "ed6fc4d848ba113c1087ca453541af08752e4316", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMwNDk5MQ==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/4425#discussion_r500304991", "bodyText": "I didn't want to remove it before review. I'll remove it alongside the strings ;)", "author": "vkay94", "createdAt": "2020-10-06T13:59:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI5MDI2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI5MTI5MA==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/4425#discussion_r500291290", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static void setEnabledEntries(final ArrayList<StreamDialogEntry> entries) {\n          \n          \n            \n                public static void setEnabledEntries(final List<StreamDialogEntry> entries) {", "author": "Stypox", "createdAt": "2020-10-06T13:45:26Z", "path": "app/src/main/java/org/schabi/newpipe/util/StreamDialogEntry.java", "diffHunk": "@@ -69,6 +109,10 @@\n     // non-static methods to initialize and edit entries //\n     ///////////////////////////////////////////////////////\n \n+    public static void setEnabledEntries(final ArrayList<StreamDialogEntry> entries) {", "originalCommit": "ed6fc4d848ba113c1087ca453541af08752e4316", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "12f615c6da39b7220569c5172899dc8e1c17bbd1", "url": "https://github.com/TeamNewPipe/NewPipe/commit/12f615c6da39b7220569c5172899dc8e1c17bbd1", "message": "Enqueue: Removed unneeded dialog-entries and strings + adjustments", "committedDate": "2020-10-06T15:22:12Z", "type": "commit"}, {"oid": "cbf364f24f775122555122d2705332a086b27eba", "url": "https://github.com/TeamNewPipe/NewPipe/commit/cbf364f24f775122555122d2705332a086b27eba", "message": "Enqueue: Renamed string resource", "committedDate": "2020-10-06T19:17:52Z", "type": "commit"}]}