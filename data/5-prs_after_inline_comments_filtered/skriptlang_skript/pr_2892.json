{"pr_number": 2892, "pr_title": "ThrownPotionData - fix syntax not working", "pr_createdAt": "2020-03-28T08:21:35Z", "pr_url": "https://github.com/SkriptLang/Skript/pull/2892", "timeline": [{"oid": "6a35e0c56fe8a190aee1459de1eae9cc8b23b3b6", "url": "https://github.com/SkriptLang/Skript/commit/6a35e0c56fe8a190aee1459de1eae9cc8b23b3b6", "message": "ThrownPotionData - fix syntax not working", "committedDate": "2020-03-28T08:18:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU2NDUxMw==", "url": "https://github.com/SkriptLang/Skript/pull/2892#discussion_r421564513", "bodyText": "Don't do Material checks, put the corresponding alias in a constant through Aliases#javaItemtype instead.", "author": "SnowPyon", "createdAt": "2020-05-07T14:47:50Z", "path": "src/main/java/ch/njol/skript/entity/ThrownPotionData.java", "diffHunk": "@@ -46,34 +47,33 @@\n \t\tEntityData.register(ThrownPotionData.class, \"thrown potion\", ThrownPotion.class, \"thrown potion\");\r\n \t}\r\n \t\r\n-\tprivate final static Adjective m_adjective = new Adjective(\"entities.thrown potion.adjective\");\r\n+\tprivate static final Adjective m_adjective = new Adjective(\"entities.thrown potion.adjective\");\r\n+\tprivate static final boolean RUNNING_LEGACY = !Skript.isRunningMinecraft(1, 13);\r\n \t\r\n \t@Nullable\r\n \tprivate ItemType[] types;\r\n \t\r\n \t@Override\r\n \tprotected boolean init(final Literal<?>[] exprs, final int matchedPattern, final ParseResult parseResult) {\r\n \t\tif (exprs.length > 0 && exprs[0] != null) {\r\n-\t\t\tif ((Converters.convert((ItemType[]) exprs[0].getAll(), ItemType.class, new Converter<ItemType, ItemType>() {\r\n-\t\t\t\t@Override\r\n-\t\t\t\t@Nullable\r\n-\t\t\t\tpublic ItemType convert(final ItemType t) {\r\n-\t\t\t\t\tItemType r = null;\r\n-\t\t\t\t\tfor (final ItemData d : t.getTypes()) {\r\n-\t\t\t\t\t\tif (d.getType() == Material.POTION) {\r\n-\t\t\t\t\t\t\tif (r == null)\r\n-\t\t\t\t\t\t\t\tr = new ItemType(d);\r\n-\t\t\t\t\t\t\telse\r\n-\t\t\t\t\t\t\t\tr.add(d);\r\n-\t\t\t\t\t\t}\r\n-\t\t\t\t\t}\r\n-\t\t\t\t\treturn r;\r\n+\t\t\treturn (types = Converters.convert((ItemType[]) exprs[0].getAll(), ItemType.class, t -> {\r\n+\t\t\t\tMaterial type = t.getMaterial();\r\n+\t\t\t\t// If the itemtype is a potion, lets make it a splash potion (required by Bukkit)\r\n+\t\t\t\t// Due to an issue with 1.12.2 and below, we have to force a lingering potion to be a splash potion\r\n+\t\t\t\tif (type == Material.POTION || (type == Material.LINGERING_POTION && RUNNING_LEGACY)) {\r", "originalCommit": "6a35e0c56fe8a190aee1459de1eae9cc8b23b3b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTc1NTk5Ng==", "url": "https://github.com/SkriptLang/Skript/pull/2892#discussion_r421755996", "bodyText": "Ah yes you're right, totally forgot about that thanks. Ill switch them up.", "author": "ShaneBeee", "createdAt": "2020-05-07T19:54:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU2NDUxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTc4Nzg4Mw==", "url": "https://github.com/SkriptLang/Skript/pull/2892#discussion_r421787883", "bodyText": "Ok these have now been changed!", "author": "ShaneBeee", "createdAt": "2020-05-07T20:54:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU2NDUxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU2NTAxOQ==", "url": "https://github.com/SkriptLang/Skript/pull/2892#discussion_r421565019", "bodyText": "Same goes here, get the ItemType through Aliases#javaItemtype", "author": "SnowPyon", "createdAt": "2020-05-07T14:48:29Z", "path": "src/main/java/ch/njol/skript/entity/ThrownPotionData.java", "diffHunk": "@@ -46,34 +47,33 @@\n \t\tEntityData.register(ThrownPotionData.class, \"thrown potion\", ThrownPotion.class, \"thrown potion\");\r\n \t}\r\n \t\r\n-\tprivate final static Adjective m_adjective = new Adjective(\"entities.thrown potion.adjective\");\r\n+\tprivate static final Adjective m_adjective = new Adjective(\"entities.thrown potion.adjective\");\r\n+\tprivate static final boolean RUNNING_LEGACY = !Skript.isRunningMinecraft(1, 13);\r\n \t\r\n \t@Nullable\r\n \tprivate ItemType[] types;\r\n \t\r\n \t@Override\r\n \tprotected boolean init(final Literal<?>[] exprs, final int matchedPattern, final ParseResult parseResult) {\r\n \t\tif (exprs.length > 0 && exprs[0] != null) {\r\n-\t\t\tif ((Converters.convert((ItemType[]) exprs[0].getAll(), ItemType.class, new Converter<ItemType, ItemType>() {\r\n-\t\t\t\t@Override\r\n-\t\t\t\t@Nullable\r\n-\t\t\t\tpublic ItemType convert(final ItemType t) {\r\n-\t\t\t\t\tItemType r = null;\r\n-\t\t\t\t\tfor (final ItemData d : t.getTypes()) {\r\n-\t\t\t\t\t\tif (d.getType() == Material.POTION) {\r\n-\t\t\t\t\t\t\tif (r == null)\r\n-\t\t\t\t\t\t\t\tr = new ItemType(d);\r\n-\t\t\t\t\t\t\telse\r\n-\t\t\t\t\t\t\t\tr.add(d);\r\n-\t\t\t\t\t\t}\r\n-\t\t\t\t\t}\r\n-\t\t\t\t\treturn r;\r\n+\t\t\treturn (types = Converters.convert((ItemType[]) exprs[0].getAll(), ItemType.class, t -> {\r\n+\t\t\t\tMaterial type = t.getMaterial();\r\n+\t\t\t\t// If the itemtype is a potion, lets make it a splash potion (required by Bukkit)\r\n+\t\t\t\t// Due to an issue with 1.12.2 and below, we have to force a lingering potion to be a splash potion\r\n+\t\t\t\tif (type == Material.POTION || (type == Material.LINGERING_POTION && RUNNING_LEGACY)) {\r\n+\t\t\t\t\tItemMeta meta = t.getItemMeta();\r\n+\t\t\t\t\tItemType itemType = new ItemType(Material.SPLASH_POTION);\r", "originalCommit": "6a35e0c56fe8a190aee1459de1eae9cc8b23b3b6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "069bb787579996fdf0faceb86846868648ecd177", "url": "https://github.com/SkriptLang/Skript/commit/069bb787579996fdf0faceb86846868648ecd177", "message": "ThrownPotionData - remove material checks", "committedDate": "2020-05-07T20:54:17Z", "type": "commit"}, {"oid": "92813cd646e00813957c4f878c1a03696adb3bd2", "url": "https://github.com/SkriptLang/Skript/commit/92813cd646e00813957c4f878c1a03696adb3bd2", "message": "Merge branch 'master' into fix/throw-potion", "committedDate": "2020-07-09T19:13:01Z", "type": "commit"}]}