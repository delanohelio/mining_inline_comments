{"pr_number": 3122, "pr_title": "Level Progress Fixes + Floating Point Safety Function", "pr_createdAt": "2020-07-10T02:52:15Z", "pr_url": "https://github.com/SkriptLang/Skript/pull/3122", "timeline": [{"oid": "1f32df838b50dd6a19c6c46b1de2962ec2e810cc", "url": "https://github.com/SkriptLang/Skript/commit/1f32df838b50dd6a19c6c46b1de2962ec2e810cc", "message": "Merge pull request #17 from SkriptLang/master\n\nMerge Upstream", "committedDate": "2020-07-10T02:44:16Z", "type": "commit"}, {"oid": "0a062b8484493633fef1a62cabbf9e10c5d7ebc1", "url": "https://github.com/SkriptLang/Skript/commit/0a062b8484493633fef1a62cabbf9e10c5d7ebc1", "message": "Safe Math2 Functions", "committedDate": "2020-07-10T02:48:26Z", "type": "commit"}, {"oid": "e7bd3d0bb5e089914524631e206e2777071691f7", "url": "https://github.com/SkriptLang/Skript/commit/e7bd3d0bb5e089914524631e206e2777071691f7", "message": "Safety Check", "committedDate": "2020-07-10T02:49:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU5NjA0OA==", "url": "https://github.com/SkriptLang/Skript/pull/3122#discussion_r452596048", "bodyText": "Space after if", "author": "APickledWalrus", "createdAt": "2020-07-10T02:57:36Z", "path": "src/main/java/ch/njol/util/Math2.java", "diffHunk": "@@ -454,4 +454,30 @@ public static double smoothStep(final double x, final double x1, final double x2\n \t\treturn d * d * (3 - 2 * d);\n \t}\n \t\n+\t/**\n+\t * Guarantees a float is neither NaN nor INF.\n+\t * Useful for situations when safe floats are required.\n+\t * \n+\t * @param f\n+\t * @return 0 if f is NaN or INF, otherwise f\n+\t */\n+\tpublic static float safe(float f) {\n+\t\tif(f != f || Float.isInfinite(f)) //NaN or INF ", "originalCommit": "e7bd3d0bb5e089914524631e206e2777071691f7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU5NjA5Nw==", "url": "https://github.com/SkriptLang/Skript/pull/3122#discussion_r452596097", "bodyText": "Space after if", "author": "APickledWalrus", "createdAt": "2020-07-10T02:57:47Z", "path": "src/main/java/ch/njol/util/Math2.java", "diffHunk": "@@ -454,4 +454,30 @@ public static double smoothStep(final double x, final double x1, final double x2\n \t\treturn d * d * (3 - 2 * d);\n \t}\n \t\n+\t/**\n+\t * Guarantees a float is neither NaN nor INF.\n+\t * Useful for situations when safe floats are required.\n+\t * \n+\t * @param f\n+\t * @return 0 if f is NaN or INF, otherwise f\n+\t */\n+\tpublic static float safe(float f) {\n+\t\tif(f != f || Float.isInfinite(f)) //NaN or INF \n+\t\t\treturn 0;\n+\t\treturn f;\n+\t}\n+\t\n+\t/**\n+\t * Guarantees a double is neither NaN nor INF.\n+\t * Useful for situations when safe doubles are required.\n+\t * \n+\t * @param d\n+\t * @return 0 if d is NaN or INF, otherwise d\n+\t */\n+\tpublic static double safe(double d) {\n+\t\tif(d != d || Double.isInfinite(d)) //NaN or INF ", "originalCommit": "e7bd3d0bb5e089914524631e206e2777071691f7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1dcf76c102aac12afd4dfb3aa94b8c771c750ceb", "url": "https://github.com/SkriptLang/Skript/commit/1dcf76c102aac12afd4dfb3aa94b8c771c750ceb", "message": "Update Math2.java", "committedDate": "2020-07-10T02:58:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU5NjY1MA==", "url": "https://github.com/SkriptLang/Skript/pull/3122#discussion_r452596650", "bodyText": "don't you have to use the method on the level as well", "author": "FranKusmiruk", "createdAt": "2020-07-10T03:00:18Z", "path": "src/main/java/ch/njol/skript/expressions/ExprLevelProgress.java", "diffHunk": "@@ -101,13 +101,13 @@ public void change(final Event e, final @Nullable Object[] delta, final ChangeMo\n \t\t\t\t\treturn;\r\n \t\t\t}\r\n \t\t\tp.setLevel(Math.max(0, p.getLevel() + (int) Math.floor(c)));\r", "originalCommit": "1dcf76c102aac12afd4dfb3aa94b8c771c750ceb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU5NzE2Mg==", "url": "https://github.com/SkriptLang/Skript/pull/3122#discussion_r452597162", "bodyText": "No, because it's converted to an int, which destroys the NaN/INF value.", "author": "Wealthyturtle", "createdAt": "2020-07-10T03:02:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU5NjY1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU5NzQ5Mg==", "url": "https://github.com/SkriptLang/Skript/pull/3122#discussion_r452597492", "bodyText": "Missed that bit, should be good then.", "author": "FranKusmiruk", "createdAt": "2020-07-10T03:03:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU5NjY1MA=="}], "type": "inlineReview"}]}