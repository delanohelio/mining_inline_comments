{"pr_number": 3270, "pr_title": "Implement 'decimals between' in ExprNumbers", "pr_createdAt": "2020-08-03T14:20:54Z", "pr_url": "https://github.com/SkriptLang/Skript/pull/3270", "timeline": [{"oid": "52cf538056576f0919077381dff5f7c7478b81cb", "url": "https://github.com/SkriptLang/Skript/commit/52cf538056576f0919077381dff5f7c7478b81cb", "message": "Add decimals between to ExprNumbers.java\n\nAdds a 'decimals between' mode to the numbers expression", "committedDate": "2020-08-03T13:21:34Z", "type": "commit"}, {"oid": "1f8ecd3ebc7370392318c4c782b8071c9f90f26e", "url": "https://github.com/SkriptLang/Skript/commit/1f8ecd3ebc7370392318c4c782b8071c9f90f26e", "message": "Update 'decimals between'\n\nSome fixes to decimals between, tested on git-Paper-130 (1.16.1)", "committedDate": "2020-08-03T14:03:36Z", "type": "commit"}, {"oid": "9a24fbe93deae3b3a6812f82561af270cba65be1", "url": "https://github.com/SkriptLang/Skript/commit/9a24fbe93deae3b3a6812f82561af270cba65be1", "message": "Update ExprNumbers to follow code conventions", "committedDate": "2020-08-03T14:11:46Z", "type": "commit"}, {"oid": "785093819f413a7657e8a82738ed698ac693de1d", "url": "https://github.com/SkriptLang/Skript/commit/785093819f413a7657e8a82738ed698ac693de1d", "message": "Oops, forgot a semicolon", "committedDate": "2020-08-03T14:28:39Z", "type": "commit"}, {"oid": "f5749b81f08313d573eac15956e2d012085fcc78", "url": "https://github.com/SkriptLang/Skript/commit/f5749b81f08313d573eac15956e2d012085fcc78", "message": "Merge branch 'master' into bluelhf-numbers", "committedDate": "2020-08-03T18:47:01Z", "type": "commit"}, {"oid": "639b645136ac06c653c982db135687336c75555c", "url": "https://github.com/SkriptLang/Skript/commit/639b645136ac06c653c982db135687336c75555c", "message": "Merge branch 'master' into bluelhf-numbers", "committedDate": "2020-08-04T21:00:50Z", "type": "commit"}, {"oid": "c5745bf8da6684523a628b9641460ea7b6e999bc", "url": "https://github.com/SkriptLang/Skript/commit/c5745bf8da6684523a628b9641460ea7b6e999bc", "message": "Merge branch 'master' into bluelhf-numbers", "committedDate": "2020-08-10T21:35:03Z", "type": "commit"}, {"oid": "f42b9212de6b9133c2096fa6f2f05b27937f7269", "url": "https://github.com/SkriptLang/Skript/commit/f42b9212de6b9133c2096fa6f2f05b27937f7269", "message": "Merge branch 'master' into bluelhf-numbers", "committedDate": "2020-08-15T15:24:15Z", "type": "commit"}, {"oid": "60729a8d1bbb3e1ab4a34b931bf8850ab1669bb3", "url": "https://github.com/SkriptLang/Skript/commit/60729a8d1bbb3e1ab4a34b931bf8850ab1669bb3", "message": "Merge branch 'master' into bluelhf-numbers", "committedDate": "2020-08-15T21:00:47Z", "type": "commit"}, {"oid": "0fd8e4f556c5068aebc614e597713d6533779f35", "url": "https://github.com/SkriptLang/Skript/commit/0fd8e4f556c5068aebc614e597713d6533779f35", "message": "Merge branch 'master' into bluelhf-numbers", "committedDate": "2020-09-02T18:27:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ3ODQ2MQ==", "url": "https://github.com/SkriptLang/Skript/pull/3270#discussion_r495478461", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tint mode = -1;\n          \n          \n            \n            \tprivate int mode;", "author": "APickledWalrus", "createdAt": "2020-09-26T17:35:12Z", "path": "src/main/java/ch/njol/skript/expressions/ExprNumbers.java", "diffHunk": "@@ -45,26 +46,28 @@\n @Name(\"Numbers\")\r\n @Description({\"All numbers between two given numbers, useful for looping.\",\r\n \t\t\"Use 'numbers' if your start is not an integer and you want to keep the fractional part of the start number constant, or use 'integers' if you only want to loop integers.\",\r\n+\t\t\"You may also use 'decimals' if you want to use the decimal precision of the start number.\",\r\n \t\t\"You may want to use the 'times' expression instead, for instance 'loop 5 times:'\"})\r\n @Examples({\"loop numbers from 2.5 to 5.5: # loops 2.5, 3.5, 4.5, 5.5\",\r\n-\t\t\"loop integers from 2.9 to 5.1: # same as '3 to 5', i.e. loops 3, 4, 5\"})\r\n-@Since(\"1.4.6\")\r\n+\t\t\"loop integers from 2.9 to 5.1: # same as '3 to 5', i.e. loops 3, 4, 5\",\r\n+\t\t\"loop decimals from 3.94 to 4: # loops 3.94, 3.95, 3.96, 3.97, 3.98, 3.99, 4\"})\r\n+@Since(\"1.4.6 (integers & numbers), INSERT VERSION (decimals)\")\r\n public class ExprNumbers extends SimpleExpression<Number> {\r\n \tstatic {\r\n \t\tSkript.registerExpression(ExprNumbers.class, Number.class, ExpressionType.COMBINED,\r\n-\t\t\t\t\"[(all [[of] the]|the)] (numbers|1\u00a6integers) (between|from) %number% (and|to) %number%\");\r\n+\t\t\t\t\"[(all [[of] the]|the)] (numbers|1\u00a6integers|2\u00a6decimals) (between|from) %number% (and|to) %number%\");\r\n \t}\r\n \t\r\n \t@SuppressWarnings(\"null\")\r\n \tprivate Expression<Number> start, end;\r\n-\tboolean integer;\r\n+\tint mode = -1;\r", "originalCommit": "0fd8e4f556c5068aebc614e597713d6533779f35", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ3ODUyOQ==", "url": "https://github.com/SkriptLang/Skript/pull/3270#discussion_r495478529", "bodyText": "Suggested change", "author": "APickledWalrus", "createdAt": "2020-09-26T17:36:03Z", "path": "src/main/java/ch/njol/skript/expressions/ExprNumbers.java", "diffHunk": "@@ -106,34 +127,63 @@ public boolean init(final Expression<?>[] exprs, final int matchedPattern, final\n \t\t\tf = temp;\r\n \t\t}\r\n \t\tfinal Number starting = s, finish = f;\r\n-\t\treturn new Iterator<Number>() {\r\n-\t\t\tdouble i = integer ? Math.ceil(starting.doubleValue()) : starting.doubleValue(), max = integer ? Math.floor(finish.doubleValue()) : finish.doubleValue();\r\n-\t\t\t\r\n-\t\t\t@Override\r\n-\t\t\tpublic boolean hasNext() {\r\n-\t\t\t\treturn i <= max;\r\n-\t\t\t}\r\n+\t\tif (mode < 2) {\r\n+\t\t\treturn new Iterator<Number>() {\r\n+\t\t\t\tdouble i = mode == 1 ? Math.ceil(starting.doubleValue()) : starting.doubleValue();\r\n+\t\t\t\tdouble max = mode == 1 ? Math.floor(finish.doubleValue()) : finish.doubleValue();\r\n+\t\t\t\t\r", "originalCommit": "0fd8e4f556c5068aebc614e597713d6533779f35", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ3ODYzMg==", "url": "https://github.com/SkriptLang/Skript/pull/3270#discussion_r495478632", "bodyText": "Small nitpick \ud83d\ude05\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t}\n          \n          \n            \n            \t}", "author": "APickledWalrus", "createdAt": "2020-09-26T17:37:29Z", "path": "src/main/java/ch/njol/skript/expressions/ExprNumbers.java", "diffHunk": "@@ -143,6 +193,6 @@ public boolean isSingle() {\n \t\r\n \t@Override\r\n \tpublic Class<? extends Number> getReturnType() {\r\n-\t\treturn integer ? Long.class : Double.class;\r\n+\t\treturn mode == 1 ? Long.class : Double.class;\r\n \t}\r", "originalCommit": "0fd8e4f556c5068aebc614e597713d6533779f35", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ3ODY4NQ==", "url": "https://github.com/SkriptLang/Skript/pull/3270#discussion_r495478685", "bodyText": "Not that this is on you, but since you're already editing this expression can you move toString to the bottom of the file?", "author": "APickledWalrus", "createdAt": "2020-09-26T17:38:01Z", "path": "src/main/java/ch/njol/skript/expressions/ExprNumbers.java", "diffHunk": "@@ -106,34 +127,63 @@ public boolean init(final Expression<?>[] exprs, final int matchedPattern, final\n \t\t\tf = temp;\r\n \t\t}\r\n \t\tfinal Number starting = s, finish = f;\r\n-\t\treturn new Iterator<Number>() {\r\n-\t\t\tdouble i = integer ? Math.ceil(starting.doubleValue()) : starting.doubleValue(), max = integer ? Math.floor(finish.doubleValue()) : finish.doubleValue();\r\n-\t\t\t\r\n-\t\t\t@Override\r\n-\t\t\tpublic boolean hasNext() {\r\n-\t\t\t\treturn i <= max;\r\n-\t\t\t}\r\n+\t\tif (mode < 2) {\r\n+\t\t\treturn new Iterator<Number>() {\r\n+\t\t\t\tdouble i = mode == 1 ? Math.ceil(starting.doubleValue()) : starting.doubleValue();\r\n+\t\t\t\tdouble max = mode == 1 ? Math.floor(finish.doubleValue()) : finish.doubleValue();\r\n+\t\t\t\t\r\n+\t\t\t\t\r\n+\t\t\t\t@Override\r\n+\t\t\t\tpublic boolean hasNext() {\r\n+\t\t\t\t\treturn i <= max;\r\n+\t\t\t\t}\r\n+\t\t\t\t\r\n+\t\t\t\t@Override\r\n+\t\t\t\tpublic Number next() {\r\n+\t\t\t\t\tif (!hasNext())\r\n+\t\t\t\t\t\tthrow new NoSuchElementException();\r\n+\t\t\t\t\tif (mode == 1)\r\n+\t\t\t\t\t\treturn (long) (reverse ? max-- : i++);\r\n+\t\t\t\t\telse\r\n+\t\t\t\t\t\treturn reverse ? max-- : i++;\r\n+\t\t\t\t}\r\n+\t\t\t};\r\n+\t\t} else {\r\n+\t\t\treturn new Iterator<Number>() {\r\n+\t\t\t\tfinal double start = starting.doubleValue();\r\n+\t\t\t\tfinal double max = finish.doubleValue();\r\n+\t\t\t\tfinal String[] split = starting.toString().split(\"\\\\.\");\r\n+\t\t\t\tfinal int precision = split.length > 0 ? split[1].length() : 0;\r\n \t\t\t\r\n-\t\t\t@Override\r\n-\t\t\tpublic Number next() {\r\n-\t\t\t\tif (!hasNext())\r\n-\t\t\t\t\tthrow new NoSuchElementException();\r\n-\t\t\t\tif (integer)\r\n-\t\t\t\t\treturn (long) (reverse ? max-- : i++);\r\n-\t\t\t\telse\r\n-\t\t\t\t\treturn reverse ? max-- : i++;\r\n-\t\t\t}\r\n-\t\t};\r\n+\t\t\t\tfinal double multiplier = Math.pow(10, precision);\r\n+\t\t\t\tint current = reverse ? (int) (max * multiplier - 1) : (int) (start * multiplier);\r\n+\t\t\t\t\r\n+\t\t\t\t@Override\r\n+\t\t\t\tpublic boolean hasNext() {\r\n+\t\t\t\t\treturn reverse ? current > start : current < max * multiplier;\r\n+\t\t\t\t}\r\n+\t\t\t\t\r\n+\t\t\t\t@Override\r\n+\t\t\t\tpublic Number next() {\r\n+\t\t\t\t\tif (!hasNext())\r\n+\t\t\t\t\t\tthrow new NoSuchElementException();\r\n+\t\t\t\t\tdouble value = start + current / multiplier;\r\n+\t\t\t\t\tcurrent = reverse ? current - 1 : current + 1;\r\n+\t\t\t\t\treturn value;\r\n+\t\t\t\t}\r\n+\t\t\t};\r\n+\t\t}\r\n \t}\r\n \t\r\n \t@Override\r\n \tpublic String toString(final @Nullable Event e, final boolean debug) {\r", "originalCommit": "0fd8e4f556c5068aebc614e597713d6533779f35", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU3OTM4Mw==", "url": "https://github.com/SkriptLang/Skript/pull/3270#discussion_r495579383", "bodyText": "Done! :)", "author": "bluelhf", "createdAt": "2020-09-27T14:35:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ3ODY4NQ=="}], "type": "inlineReview"}, {"oid": "89cc13fc4f1aabd118264071e47c6fe3078382b9", "url": "https://github.com/SkriptLang/Skript/commit/89cc13fc4f1aabd118264071e47c6fe3078382b9", "message": "Move toString to the end of ExprNumbers.java", "committedDate": "2020-09-27T14:32:42Z", "type": "commit"}, {"oid": "ea6a9eb0a2bf7d895e3fdf87bcda972c5b4c259f", "url": "https://github.com/SkriptLang/Skript/commit/ea6a9eb0a2bf7d895e3fdf87bcda972c5b4c259f", "message": "Apply suggestions from PickedWalrus' review\n\nCo-authored-by: APickledWalrus <apickledwalrus@gmail.com>", "committedDate": "2020-09-27T14:33:38Z", "type": "commit"}, {"oid": "a545986b4bbe3e796e558a390d945727c586feae", "url": "https://github.com/SkriptLang/Skript/commit/a545986b4bbe3e796e558a390d945727c586feae", "message": "Teeny-tiny formatting changes", "committedDate": "2020-09-27T14:34:41Z", "type": "commit"}, {"oid": "0e2a7de053e60c94e456ddc5d26a9b5bab1842ff", "url": "https://github.com/SkriptLang/Skript/commit/0e2a7de053e60c94e456ddc5d26a9b5bab1842ff", "message": "ExprNumbers - update license header and line endings", "committedDate": "2020-10-05T06:56:55Z", "type": "commit"}, {"oid": "2fd9011752699f82535267cc4a7c05329131639f", "url": "https://github.com/SkriptLang/Skript/commit/2fd9011752699f82535267cc4a7c05329131639f", "message": "ExprNumbers - remove extra line in header", "committedDate": "2020-10-05T07:01:21Z", "type": "commit"}, {"oid": "ae77745809e73903a3953bfa3f385ac543f51ef5", "url": "https://github.com/SkriptLang/Skript/commit/ae77745809e73903a3953bfa3f385ac543f51ef5", "message": "Merge remote-tracking branch 'upstream/dev-2.5' into bluelhf-numbers\n\n# Conflicts:\n#\tsrc/main/java/ch/njol/skript/expressions/ExprNumbers.java", "committedDate": "2020-10-05T07:02:48Z", "type": "commit"}, {"oid": "5adf8665c6756e6aa23cca2b11096eb39693ea27", "url": "https://github.com/SkriptLang/Skript/commit/5adf8665c6756e6aa23cca2b11096eb39693ea27", "message": "Merge branch 'dev-2.5' into bluelhf-numbers", "committedDate": "2020-10-05T07:03:21Z", "type": "commit"}]}