{"pr_number": 1329, "pr_title": "Add location header to the response of REST API call to add oauth scopes", "pr_createdAt": "2020-02-21T07:29:44Z", "pr_url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1329", "timeline": [{"oid": "8045a618b34a4590bdadb22fc233b0663bd126e0", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/8045a618b34a4590bdadb22fc233b0663bd126e0", "message": "Add location header to the response of REST API call to add oauth scopes", "committedDate": "2020-02-21T07:24:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ0NzIzNg==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1329#discussion_r382447236", "bodyText": "will it be possible to rename this variable as location?", "author": "Buddhimah", "createdAt": "2020-02-21T08:15:20Z", "path": "components/org.wso2.carbon.identity.oauth.scope.endpoint/src/main/java/org/wso2/carbon/identity/oauth/scope/endpoint/impl/ScopesApiServiceImpl.java", "diffHunk": "@@ -233,4 +246,48 @@ public Response deleteScope(String name) {\n         }\n         return Response.status(Response.Status.OK).build();\n     }\n+\n+    /**\n+     * Build the complete URI to the location of the resource.\n+     * Ex: https://localhost:9443/t/<tenant-domain>/identity/oauth2/v1.0/scopes/name/<scope_name>\n+     *\n+     * @param name of the scope.\n+     * @return Fully qualified and complete URI.\n+     */\n+    private static URI buildURIForHeader(String name) {\n+\n+        String tenantQualifiedRelativePath =\n+                String.format(TENANT_CONTEXT_PATH_COMPONENT, getTenantDomainFromContext()) + SERVER_API_PATH_COMPONENT;\n+        String url = IdentityUtil.getEndpointURIPath(tenantQualifiedRelativePath + name, false, true);\n+\n+        URI loc = URI.create(url);\n+        if (!loc.isAbsolute()) {\n+            Message currentMessage = PhaseInterceptorChain.getCurrentMessage();\n+            if (currentMessage != null) {\n+                UriInfo ui = new UriInfoImpl(currentMessage.getExchange().getInMessage(), null);\n+                try {\n+                    return new URI(ui.getBaseUri().getScheme(), ui.getBaseUri().getAuthority(), url, null, null);\n+                } catch (URISyntaxException e) {\n+                    LOG.error(\"Server encountered an error while building the location URL with scheme: \" +\n+                            ui.getBaseUri().getScheme() + \", authority: \" + ui.getBaseUri().getAuthority() +\n+                            \", url: \" + url, e);\n+                }\n+            }\n+        }\n+        return loc;", "originalCommit": "8045a618b34a4590bdadb22fc233b0663bd126e0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ1MTExOQ==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1329#discussion_r382451119", "bodyText": "Renamed", "author": "DinikaSen", "createdAt": "2020-02-21T08:25:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ0NzIzNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ0ODMzMw==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1329#discussion_r382448333", "bodyText": "if (StringUtils.isNotBlank(IdentityUtil.threadLocalProperties.get().get(TENANT_NAME_FROM_CONTEXT))) {\n        return (String) IdentityUtil.threadLocalProperties.get().get(TENANT_NAME_FROM_CONTEXT);\n    }\n    return MultitenantConstants.SUPER_TENANT_DOMAIN_NAME;", "author": "Buddhimah", "createdAt": "2020-02-21T08:18:14Z", "path": "components/org.wso2.carbon.identity.oauth.scope.endpoint/src/main/java/org/wso2/carbon/identity/oauth/scope/endpoint/impl/ScopesApiServiceImpl.java", "diffHunk": "@@ -233,4 +246,48 @@ public Response deleteScope(String name) {\n         }\n         return Response.status(Response.Status.OK).build();\n     }\n+\n+    /**\n+     * Build the complete URI to the location of the resource.\n+     * Ex: https://localhost:9443/t/<tenant-domain>/identity/oauth2/v1.0/scopes/name/<scope_name>\n+     *\n+     * @param name of the scope.\n+     * @return Fully qualified and complete URI.\n+     */\n+    private static URI buildURIForHeader(String name) {\n+\n+        String tenantQualifiedRelativePath =\n+                String.format(TENANT_CONTEXT_PATH_COMPONENT, getTenantDomainFromContext()) + SERVER_API_PATH_COMPONENT;\n+        String url = IdentityUtil.getEndpointURIPath(tenantQualifiedRelativePath + name, false, true);\n+\n+        URI loc = URI.create(url);\n+        if (!loc.isAbsolute()) {\n+            Message currentMessage = PhaseInterceptorChain.getCurrentMessage();\n+            if (currentMessage != null) {\n+                UriInfo ui = new UriInfoImpl(currentMessage.getExchange().getInMessage(), null);\n+                try {\n+                    return new URI(ui.getBaseUri().getScheme(), ui.getBaseUri().getAuthority(), url, null, null);\n+                } catch (URISyntaxException e) {\n+                    LOG.error(\"Server encountered an error while building the location URL with scheme: \" +\n+                            ui.getBaseUri().getScheme() + \", authority: \" + ui.getBaseUri().getAuthority() +\n+                            \", url: \" + url, e);\n+                }\n+            }\n+        }\n+        return loc;\n+    }\n+\n+    /**\n+     * Retrieves loaded tenant domain from carbon context.\n+     *\n+     * @return tenant domain of the request being served.\n+     */\n+    private static String getTenantDomainFromContext() {\n+\n+        String tenantDomain = MultitenantConstants.SUPER_TENANT_DOMAIN_NAME;", "originalCommit": "8045a618b34a4590bdadb22fc233b0663bd126e0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ0OTQ5Ng==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1329#discussion_r382449496", "bodyText": "I think this is okay since it avoids multiple returns in the method.", "author": "madurangasiriwardena", "createdAt": "2020-02-21T08:21:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ0ODMzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ1MDA0Ng==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1329#discussion_r382450046", "bodyText": "Can we change the parameter name to something like scopeName", "author": "Buddhimah", "createdAt": "2020-02-21T08:22:57Z", "path": "components/org.wso2.carbon.identity.oauth.scope.endpoint/src/main/java/org/wso2/carbon/identity/oauth/scope/endpoint/impl/ScopesApiServiceImpl.java", "diffHunk": "@@ -233,4 +246,48 @@ public Response deleteScope(String name) {\n         }\n         return Response.status(Response.Status.OK).build();\n     }\n+\n+    /**\n+     * Build the complete URI to the location of the resource.\n+     * Ex: https://localhost:9443/t/<tenant-domain>/identity/oauth2/v1.0/scopes/name/<scope_name>\n+     *\n+     * @param name of the scope.\n+     * @return Fully qualified and complete URI.\n+     */\n+    private static URI buildURIForHeader(String name) {", "originalCommit": "8045a618b34a4590bdadb22fc233b0663bd126e0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ1MzgxMw==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1329#discussion_r382453813", "bodyText": "Changed 'name' to 'scopeName'", "author": "DinikaSen", "createdAt": "2020-02-21T08:33:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ1MDA0Ng=="}], "type": "inlineReview"}, {"oid": "5c477731e784f3fbcb9de136d6e0e569db981e58", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/5c477731e784f3fbcb9de136d6e0e569db981e58", "message": "Rename variable loc to location", "committedDate": "2020-02-21T08:24:54Z", "type": "commit"}, {"oid": "112d70b3c2f70edcd8215a6471ede743d9159039", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/112d70b3c2f70edcd8215a6471ede743d9159039", "message": "Rename variable scope to scopeName", "committedDate": "2020-02-21T08:31:34Z", "type": "commit"}]}