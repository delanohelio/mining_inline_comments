{"pr_number": 1223, "pr_title": "Ensure that requests to update replication factor cannot cause a deadlock.", "pr_createdAt": "2020-06-02T02:38:56Z", "pr_url": "https://github.com/linkedin/cruise-control/pull/1223", "timeline": [{"oid": "a8f45de15d8e95f4ee7afb5fef6e754479ff9039", "url": "https://github.com/linkedin/cruise-control/commit/a8f45de15d8e95f4ee7afb5fef6e754479ff9039", "message": "Ensure that requests to update replication factor cannot cause a deadlock.", "committedDate": "2020-06-02T02:37:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYyNjczMA==", "url": "https://github.com/linkedin/cruise-control/pull/1223#discussion_r433626730", "bodyText": "I'm not sure Set.toString() will always convert all the topics toString, it's behavior is not stable between different versions of Java.", "author": "smccauliff", "createdAt": "2020-06-02T05:23:22Z", "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/servlet/handler/async/runnable/RunnableUtils.java", "diffHunk": "@@ -93,7 +93,11 @@ public static void populateRackInfoForReplicationFactorChange(Map<Short, Set<Str\n     }\n \n     topicsByReplicationFactor.forEach((replicationFactor, topics) -> {\n-      if (replicationFactor > brokersByRack.size()) {\n+      if (replicationFactor > rackByBroker.size()) {\n+        throw new RuntimeException(String.format(\"Unable to change replication factor (RF) of topics %s to %d since there are only %d \"", "originalCommit": "a8f45de15d8e95f4ee7afb5fef6e754479ff9039", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY0MjU5NQ==", "url": "https://github.com/linkedin/cruise-control/pull/1223#discussion_r433642595", "bodyText": "I can't recall observing issues related to toString() call on Sets using openjdk-jdk8, openjdk-jdk11, or zulu 8. That being said, our repo has been using ootb set implementations , such as HashSet, TreeSet, and LinkedHashSet -- and openJDK implementation for their toString() implementation in AbstractCollection.java hasn't changed from 8 to 11.\nHave you observed issues in specific implementations / versions of Java or specific implementation of collections?", "author": "efeg", "createdAt": "2020-06-02T06:15:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYyNjczMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY4NTExMQ==", "url": "https://github.com/linkedin/cruise-control/pull/1223#discussion_r433685111", "bodyText": "Never mind.  It's some trauma I experienced in some previous version of Java.  This program never truncates; even for very large numbers and different Set implementations.\nimport java.util.*;\n\nclass tostring {\n   public static void main(String[] argv) throws Exception {\n        Set<Integer> s = new TreeSet<>();\n        int count = Integer.parseInt(argv[0]);\n        for (int i =0; i < count; i++) {\n           s.add(i);\n        }\n        \n        System.out.println(s);\n   }\n}", "author": "smccauliff", "createdAt": "2020-06-02T07:49:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYyNjczMA=="}], "type": "inlineReview"}]}