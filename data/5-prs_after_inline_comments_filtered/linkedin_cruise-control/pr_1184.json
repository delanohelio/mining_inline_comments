{"pr_number": 1184, "pr_title": "Fix 1183 chained replica movement strategies", "pr_createdAt": "2020-04-29T22:24:37Z", "pr_url": "https://github.com/linkedin/cruise-control/pull/1184", "timeline": [{"oid": "3ad67145cb772d197bc47d6b7474f591d9e1865b", "url": "https://github.com/linkedin/cruise-control/commit/3ad67145cb772d197bc47d6b7474f591d9e1865b", "message": "Update test to reproduce exception - multiple partitions with same size cause failure", "committedDate": "2020-04-29T19:15:53Z", "type": "commit"}, {"oid": "272ea8831e0cf5c33bdc129a59f0e07d2150bfb9", "url": "https://github.com/linkedin/cruise-control/commit/272ea8831e0cf5c33bdc129a59f0e07d2150bfb9", "message": "Chain taskComparator's properly when using custom replica movement strategies", "committedDate": "2020-04-29T22:04:02Z", "type": "commit"}, {"oid": "0e95545b7fb3117f140ac12a8e24e9acd3323568", "url": "https://github.com/linkedin/cruise-control/commit/0e95545b7fb3117f140ac12a8e24e9acd3323568", "message": "Allow different source brokers for same destination brokers and skip getting more replica movements if one is in progress", "committedDate": "2020-04-29T22:20:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY1MzAyNw==", "url": "https://github.com/linkedin/cruise-control/pull/1184#discussion_r417653027", "bodyText": "Note: We didn't need to change the PrioritizeLargeReplicaRebalance strategy tests after making this change, because of: #1183 (comment).", "author": "matthinograb", "createdAt": "2020-04-29T22:37:09Z", "path": "cruise-control/src/test/java/com/linkedin/kafka/cruisecontrol/executor/ExecutionTaskPlannerTest.java", "diffHunk": "@@ -62,7 +62,7 @@\n       new ExecutionProposal(new TopicPartition(TOPIC1, 3), 0, _r3, Arrays.asList(_r3, _r2), Arrays.asList(_r2, _r3));\n \n   private final ExecutionProposal _partitionMovement1 =\n-      new ExecutionProposal(new TopicPartition(TOPIC2, 0), 4, _r0, Arrays.asList(_r0, _r2), Arrays.asList(_r2, _r1));\n+      new ExecutionProposal(new TopicPartition(TOPIC2, 0), 1, _r0, Arrays.asList(_r0, _r2), Arrays.asList(_r2, _r1));", "originalCommit": "0e95545b7fb3117f140ac12a8e24e9acd3323568", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTEwNjQ3NQ==", "url": "https://github.com/linkedin/cruise-control/pull/1184#discussion_r421106475", "bodyText": "Is there any specific reason we want to change the test case here?\nI just test locally, with the bug fix, If we do not change the test, it can still pass.", "author": "kidkun", "createdAt": "2020-05-06T21:34:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY1MzAyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTYxMjMyNQ==", "url": "https://github.com/linkedin/cruise-control/pull/1184#discussion_r421612325", "bodyText": "The test cases were missing the \"equal partition size\" case, which caused the original bug. Adding this test case proves that the fix is working as expected, and it should help to prevent future regressions (if the chaining breaks in the future).", "author": "matthinograb", "createdAt": "2020-05-07T15:53:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY1MzAyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODcxOTQzNQ==", "url": "https://github.com/linkedin/cruise-control/pull/1184#discussion_r418719435", "bodyText": "Would this alliviate the issue described in #1167 (comment) ? @efeg can you please comment?", "author": "amuraru", "createdAt": "2020-05-01T20:17:43Z", "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/executor/ExecutionTaskPlanner.java", "diffHunk": "@@ -315,6 +317,13 @@ private void maybeAddLeaderChangeTasks(Collection<ExecutionProposal> proposals,\n                                                                 Set<TopicPartition> inProgressPartitions) {\n     LOG.trace(\"Getting inter-broker replica movement tasks for brokers with concurrency {}\", readyBrokers);\n     List<ExecutionTask> executableReplicaMovements = new ArrayList<>();\n+\n+    // Kafka doesn't allow new replica movements if there is an ongoing rebalance\n+    if (!inProgressPartitions.isEmpty()) {", "originalCommit": "0e95545b7fb3117f140ac12a8e24e9acd3323568", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA5OTE4Ng==", "url": "https://github.com/linkedin/cruise-control/pull/1184#discussion_r421099186", "bodyText": "I do not think this check should be added.\nThe way CC submit tasks is in batch. we select a set of tasks based on the concurrency requirement and submit them in batch, later we check the finish status and select more tasks to current ongoing tasks(as long as we do not violate concurrency requirement) and submit in second batch.", "author": "kidkun", "createdAt": "2020-05-06T21:19:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODcxOTQzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ1MTQzMA==", "url": "https://github.com/linkedin/cruise-control/pull/1184#discussion_r423451430", "bodyText": "From my understanding, Kafka cannot start a new rebalance while a current one is in progress. So we don't need to create a second batch, if the first batch isn't completed yet.\nBut I'll remove this line, since it isn't related to the referenced issue -- and isn't important for the bugfix.", "author": "matthinograb", "createdAt": "2020-05-12T04:14:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODcxOTQzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDEwODQ0MA==", "url": "https://github.com/linkedin/cruise-control/pull/1184#discussion_r424108440", "bodyText": "Kafka can accept new task while there is ongoing task and that CC use that to ensure the task are always executed in desired concurrency.", "author": "kidkun", "createdAt": "2020-05-13T00:31:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODcxOTQzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDEyMjQ3OQ==", "url": "https://github.com/linkedin/cruise-control/pull/1184#discussion_r424122479", "bodyText": "@matthinograb\nJust wanted to chime in to give a little more context on @kidkun 's explanation.\nStarting a new rebalance while a current one is in progress requires the workaround patch described in #1167 (comment) -- i.e. it is indeed not supported in Apache Kafka out of the box.\nHope it helps!", "author": "efeg", "createdAt": "2020-05-13T01:27:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODcxOTQzNQ=="}], "type": "inlineReview"}, {"oid": "11f3c8379704e324a7199b6ae809f3b31a07e618", "url": "https://github.com/linkedin/cruise-control/commit/11f3c8379704e324a7199b6ae809f3b31a07e618", "message": "Remove unecessary inProgressPartition check", "committedDate": "2020-05-12T04:17:02Z", "type": "commit"}, {"oid": "cbb105c66800d9322ef16647acc1c94d38063d4f", "url": "https://github.com/linkedin/cruise-control/commit/cbb105c66800d9322ef16647acc1c94d38063d4f", "message": "Remove unrelated change", "committedDate": "2020-05-12T04:19:21Z", "type": "commit"}]}