{"pr_number": 1352, "pr_title": "Check entries value in partition load query to disallow negative values (#1351)", "pr_createdAt": "2020-10-16T02:49:21Z", "pr_url": "https://github.com/linkedin/cruise-control/pull/1352", "timeline": [{"oid": "456ef37bb3d90dc8535c1eda41e090274a01fe9a", "url": "https://github.com/linkedin/cruise-control/commit/456ef37bb3d90dc8535c1eda41e090274a01fe9a", "message": "Check entries value in partition load query to disallow negative values (#1351)", "committedDate": "2020-10-16T02:48:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjAyNzA1NQ==", "url": "https://github.com/linkedin/cruise-control/pull/1352#discussion_r506027055", "bodyText": "Looks like ParameterUtils #entries(HttpServletRequest) is used by other callers. Would it ever be acceptable to get a negative value for entries? If not, should we move the sanity check to ParameterUtils #entries(HttpServletRequest)?", "author": "efeg", "createdAt": "2020-10-16T03:34:44Z", "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/servlet/parameters/PartitionLoadParameters.java", "diffHunk": "@@ -97,10 +97,14 @@ protected void initParameters() throws UnsupportedEncodingException {\n     _endMs = ParameterUtils.endMs(_request);\n     _partitionLowerBoundary = ParameterUtils.partitionBoundary(_request, false);\n     _partitionUpperBoundary = ParameterUtils.partitionBoundary(_request, true);\n-    _entries = ParameterUtils.entries(_request);\n     _minValidPartitionRatio = ParameterUtils.minValidPartitionRatio(_request);\n     _allowCapacityEstimation = ParameterUtils.allowCapacityEstimation(_request);\n     _brokerIds = ParameterUtils.brokerIds(_request, true);\n+    _entries = ParameterUtils.entries(_request);", "originalCommit": "456ef37bb3d90dc8535c1eda41e090274a01fe9a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjAzMjI1Mw==", "url": "https://github.com/linkedin/cruise-control/pull/1352#discussion_r506032253", "bodyText": "That's a good idea. All entries should have positive values. I will move the check to ParameterUtils. Thanks", "author": "Lincong", "createdAt": "2020-10-16T03:47:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjAyNzA1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjAyNzgyOQ==", "url": "https://github.com/linkedin/cruise-control/pull/1352#discussion_r506027829", "bodyText": "Nit: Can we (1) make this error message more concise and (2) ensure that 0 entries is also not acceptable? -- e.g. something like\nif (_entries <= 0) {\n    throw new UserRequestException(\"The requested entries must be positive (Requested: \" + _entries + \").\");\n}", "author": "efeg", "createdAt": "2020-10-16T03:36:38Z", "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/servlet/parameters/PartitionLoadParameters.java", "diffHunk": "@@ -97,10 +97,14 @@ protected void initParameters() throws UnsupportedEncodingException {\n     _endMs = ParameterUtils.endMs(_request);\n     _partitionLowerBoundary = ParameterUtils.partitionBoundary(_request, false);\n     _partitionUpperBoundary = ParameterUtils.partitionBoundary(_request, true);\n-    _entries = ParameterUtils.entries(_request);\n     _minValidPartitionRatio = ParameterUtils.minValidPartitionRatio(_request);\n     _allowCapacityEstimation = ParameterUtils.allowCapacityEstimation(_request);\n     _brokerIds = ParameterUtils.brokerIds(_request, true);\n+    _entries = ParameterUtils.entries(_request);\n+    if (_entries < 0) {\n+      throw new UserRequestException(\"Invalid entries value. The entries value must be\"\n+          + \" greater than or equal to 0. Got negative value: \" + _entries);", "originalCommit": "456ef37bb3d90dc8535c1eda41e090274a01fe9a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjAzMjc0Ng==", "url": "https://github.com/linkedin/cruise-control/pull/1352#discussion_r506032746", "bodyText": "Good idea!", "author": "Lincong", "createdAt": "2020-10-16T03:48:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjAyNzgyOQ=="}], "type": "inlineReview"}, {"oid": "6b73a62d514f43136c7a21fa47b9aeb328eb6d1a", "url": "https://github.com/linkedin/cruise-control/commit/6b73a62d514f43136c7a21fa47b9aeb328eb6d1a", "message": "Move the positive check to the util class and make its error message more concise", "committedDate": "2020-10-16T03:46:29Z", "type": "commit"}, {"oid": "0a4aa50b95b8e766db3a97f3230974bbfd8a6565", "url": "https://github.com/linkedin/cruise-control/commit/0a4aa50b95b8e766db3a97f3230974bbfd8a6565", "message": "Check for positive entries value", "committedDate": "2020-10-16T03:48:11Z", "type": "commit"}, {"oid": "257d8e23c5b125a0ea0932a0ca9074a521417100", "url": "https://github.com/linkedin/cruise-control/commit/257d8e23c5b125a0ea0932a0ca9074a521417100", "message": "Move entries check back to its original line", "committedDate": "2020-10-16T03:50:42Z", "type": "commit"}]}