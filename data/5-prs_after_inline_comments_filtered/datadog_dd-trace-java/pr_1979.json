{"pr_number": 1979, "pr_title": "Fix flaky netty executor instrumentation test", "pr_createdAt": "2020-10-13T09:22:30Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/1979", "timeline": [{"oid": "635aa4a043bde405923e9a5745729c61a8f96a9a", "url": "https://github.com/DataDog/dd-trace-java/commit/635aa4a043bde405923e9a5745729c61a8f96a9a", "message": "separate netty executor tests to avoid creating so many groups", "committedDate": "2020-10-13T09:54:39Z", "type": "forcePushed"}, {"oid": "c18557de02ec5f0cb35701f0694444847f2a06c2", "url": "https://github.com/DataDog/dd-trace-java/commit/c18557de02ec5f0cb35701f0694444847f2a06c2", "message": "separate netty executor tests to avoid creating so many groups", "committedDate": "2020-10-13T10:15:53Z", "type": "forcePushed"}, {"oid": "e8ad7e4ee230f488fc506b4a8fbb1b7af5d26ac1", "url": "https://github.com/DataDog/dd-trace-java/commit/e8ad7e4ee230f488fc506b4a8fbb1b7af5d26ac1", "message": "separate netty executor tests to avoid creating so many groups", "committedDate": "2020-10-13T12:06:18Z", "type": "forcePushed"}, {"oid": "cf913bb4df60a4489d6b2e2d73a4de3815c99f85", "url": "https://github.com/DataDog/dd-trace-java/commit/cf913bb4df60a4489d6b2e2d73a4de3815c99f85", "message": "remove unnecessary context store", "committedDate": "2020-10-13T13:49:16Z", "type": "forcePushed"}, {"oid": "23ca22f9d158eb53bd17810e1c7075cef08dbbaa", "url": "https://github.com/DataDog/dd-trace-java/commit/23ca22f9d158eb53bd17810e1c7075cef08dbbaa", "message": "separate netty executor tests to avoid creating so many groups", "committedDate": "2020-10-13T14:05:38Z", "type": "commit"}, {"oid": "6d84a162833368cac5ed4ea2d23f325347759a05", "url": "https://github.com/DataDog/dd-trace-java/commit/6d84a162833368cac5ed4ea2d23f325347759a05", "message": "remove unnecessary context store", "committedDate": "2020-10-13T14:05:38Z", "type": "commit"}, {"oid": "6d84a162833368cac5ed4ea2d23f325347759a05", "url": "https://github.com/DataDog/dd-trace-java/commit/6d84a162833368cac5ed4ea2d23f325347759a05", "message": "remove unnecessary context store", "committedDate": "2020-10-13T14:05:38Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAwODQzMA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1979#discussion_r504008430", "bodyText": "\ud83d\udc4d", "author": "bantonsson", "createdAt": "2020-10-13T14:40:21Z", "path": "dd-java-agent/instrumentation/java-concurrent/src/main/java/datadog/trace/instrumentation/java/concurrent/JavaForkJoinTaskInstrumentation.java", "diffHunk": "@@ -58,7 +59,7 @@ public boolean matches(TypeDescription target) {\n   @Override\n   public Map<? extends ElementMatcher<? super MethodDescription>, String> transformers() {\n     Map<ElementMatcher<MethodDescription>, String> transformers = new HashMap<>(4);\n-    transformers.put(isMethod().and(named(\"exec\")), getClass().getName() + \"$Exec\");\n+    transformers.put(isMethod().and(namedOneOf(\"doExec\", \"exec\")), getClass().getName() + \"$Exec\");", "originalCommit": "3a5bb55353904ec4e80b11bfe566cd2b1a09bcba", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a9e44ab8648dc94a23a43434950de3453ad7a764", "url": "https://github.com/DataDog/dd-trace-java/commit/a9e44ab8648dc94a23a43434950de3453ad7a764", "message": "instrument doExec for cases where work is stolen", "committedDate": "2020-10-13T14:55:15Z", "type": "forcePushed"}, {"oid": "6ff9c1c01163de5cdd9a051d0193602e3d90417d", "url": "https://github.com/DataDog/dd-trace-java/commit/6ff9c1c01163de5cdd9a051d0193602e3d90417d", "message": "instrument FJT.doExec, remove UnorderedThreadPoolEventExecutor from tests", "committedDate": "2020-10-13T15:38:29Z", "type": "forcePushed"}, {"oid": "39f9044035aae40d2194c954a042a9073f2f294f", "url": "https://github.com/DataDog/dd-trace-java/commit/39f9044035aae40d2194c954a042a9073f2f294f", "message": "instrument doExec for cases where work is stolen, remove UnorderedThreadPoolEventExecutor from tests", "committedDate": "2020-10-13T15:40:00Z", "type": "commit"}, {"oid": "39f9044035aae40d2194c954a042a9073f2f294f", "url": "https://github.com/DataDog/dd-trace-java/commit/39f9044035aae40d2194c954a042a9073f2f294f", "message": "instrument doExec for cases where work is stolen, remove UnorderedThreadPoolEventExecutor from tests", "committedDate": "2020-10-13T15:40:00Z", "type": "forcePushed"}, {"oid": "a5c68876b30da76e83f3599c0632c88575593b60", "url": "https://github.com/DataDog/dd-trace-java/commit/a5c68876b30da76e83f3599c0632c88575593b60", "message": "prevent RunnableFuture instrumentation from interfering with ForkJoinTask adapater classes", "committedDate": "2020-10-13T16:51:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDExNjc1Mw==", "url": "https://github.com/DataDog/dd-trace-java/pull/1979#discussion_r504116753", "bodyText": "This shouldn't be needed...", "author": "tylerbenson", "createdAt": "2020-10-13T17:00:41Z", "path": "dd-java-agent/instrumentation/akka-concurrent/src/main/java/datadog/trace/instrumentation/akka/concurrent/AkkaForkJoinTaskInstrumentation.java", "diffHunk": "@@ -44,6 +52,22 @@ public AkkaForkJoinTaskInstrumentation() {\n     return named(\"akka.dispatch.forkjoin.ForkJoinTask\");\n   }\n \n+  @Override\n+  public boolean isEnabled() {\n+    return true;\n+  }", "originalCommit": "a5c68876b30da76e83f3599c0632c88575593b60", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDExODEwMg==", "url": "https://github.com/DataDog/dd-trace-java/pull/1979#discussion_r504118102", "bodyText": "This enables the filter provider", "author": "richardstartin", "createdAt": "2020-10-13T17:03:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDExNjc1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDEzNDAyMw==", "url": "https://github.com/DataDog/dd-trace-java/pull/1979#discussion_r504134023", "bodyText": "shoot... so confusing. sorry about that.", "author": "tylerbenson", "createdAt": "2020-10-13T17:29:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDExNjc1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ0MjU5Ng==", "url": "https://github.com/DataDog/dd-trace-java/pull/1979#discussion_r504442596", "bodyText": "So the reason this was there in the first place was to be able to have different behavior depending on if the instrumentation was enabled or not (in effect reverting to the old behavior for CompletableFuture), but it seems that we are way beyond that point anyway, so I'll just remove this method and the corresponding check altogether.", "author": "bantonsson", "createdAt": "2020-10-14T06:55:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDExNjc1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDExNzA4OQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1979#discussion_r504117089", "bodyText": "or this", "author": "tylerbenson", "createdAt": "2020-10-13T17:01:12Z", "path": "dd-java-agent/instrumentation/java-concurrent/src/main/java/datadog/trace/instrumentation/java/concurrent/JavaForkJoinTaskInstrumentation.java", "diffHunk": "@@ -58,12 +65,28 @@ public boolean matches(TypeDescription target) {\n   @Override\n   public Map<? extends ElementMatcher<? super MethodDescription>, String> transformers() {\n     Map<ElementMatcher<MethodDescription>, String> transformers = new HashMap<>(4);\n-    transformers.put(isMethod().and(named(\"exec\")), getClass().getName() + \"$Exec\");\n+    transformers.put(isMethod().and(namedOneOf(\"doExec\", \"exec\")), getClass().getName() + \"$Exec\");\n     transformers.put(isMethod().and(named(\"fork\")), getClass().getName() + \"$Fork\");\n     transformers.put(isMethod().and(named(\"cancel\")), getClass().getName() + \"$Cancel\");\n     return Collections.unmodifiableMap(transformers);\n   }\n \n+  @Override\n+  public boolean isEnabled() {\n+    return true;\n+  }", "originalCommit": "a5c68876b30da76e83f3599c0632c88575593b60", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDExODE3OA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1979#discussion_r504118178", "bodyText": "and this", "author": "richardstartin", "createdAt": "2020-10-13T17:03:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDExNzA4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDExODcwNA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1979#discussion_r504118704", "bodyText": "Is there are reason we don't want enabling/disabling to work like every other instrumentation?", "author": "randomanderson", "createdAt": "2020-10-13T17:04:01Z", "path": "dd-java-agent/instrumentation/akka-concurrent/src/main/java/datadog/trace/instrumentation/akka/concurrent/AkkaForkJoinTaskInstrumentation.java", "diffHunk": "@@ -44,6 +52,22 @@ public AkkaForkJoinTaskInstrumentation() {\n     return named(\"akka.dispatch.forkjoin.ForkJoinTask\");\n   }\n \n+  @Override\n+  public boolean isEnabled() {\n+    return true;\n+  }\n+", "originalCommit": "a5c68876b30da76e83f3599c0632c88575593b60", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDEyMDMyNA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1979#discussion_r504120324", "bodyText": "This is a misleading named method from ExcludeFilterProvider - I blame @bantonsson. Perhaps we should call it isFilterEnabled. It means that the filter returned by excludedClasses should be respected.", "author": "richardstartin", "createdAt": "2020-10-13T17:06:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDExODcwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDEyMDU3Ng==", "url": "https://github.com/DataDog/dd-trace-java/pull/1979#discussion_r504120576", "bodyText": "NVM.  Name confusion", "author": "randomanderson", "createdAt": "2020-10-13T17:07:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDExODcwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDEyMTExMw==", "url": "https://github.com/DataDog/dd-trace-java/pull/1979#discussion_r504121113", "bodyText": "@tylerbenson read it the same way, as did I the first time I saw it. Maybe we should change it.", "author": "richardstartin", "createdAt": "2020-10-13T17:08:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDExODcwNA=="}], "type": "inlineReview"}, {"oid": "e74ade45f96fbe65bd507fbc3055d6079f4e2dde", "url": "https://github.com/DataDog/dd-trace-java/commit/e74ade45f96fbe65bd507fbc3055d6079f4e2dde", "message": "restrict instrumented RunnableFuture classes", "committedDate": "2020-10-13T17:18:40Z", "type": "commit"}]}