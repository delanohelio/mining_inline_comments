{"pr_number": 1711, "pr_title": "use spring-webflux-5.1+ ClientResponse.rawStatusCode when available", "pr_createdAt": "2020-07-24T10:14:40Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/1711", "timeline": [{"oid": "5b37fbeb6aaa62afd395fc5047f08217411d1aeb", "url": "https://github.com/DataDog/dd-trace-java/commit/5b37fbeb6aaa62afd395fc5047f08217411d1aeb", "message": "use spring-webflux-5.1+ when available", "committedDate": "2020-07-24T10:33:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA3MzM0MA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1711#discussion_r460073340", "bodyText": "I think muzzle will cause problems here... it will prevent the instrumentation from loading on any classloader that doesn't have the new method.  You'll likely need to split/copy the instrumentation to handle this properly.", "author": "tylerbenson", "createdAt": "2020-07-24T14:05:04Z", "path": "dd-java-agent/instrumentation/spring-webflux-5/src/main/java8/datadog/trace/instrumentation/springwebflux/client/SpringWebfluxHttpClientDecorator.java", "diffHunk": "@@ -41,6 +41,10 @@ protected URI url(final ClientRequest httpRequest) {\n \n   @Override\n   protected Integer status(final ClientResponse httpResponse) {\n-    return httpResponse.statusCode().value();\n+    try {\n+      return httpResponse.rawStatusCode();\n+    } catch (NoSuchMethodError mustBeUsingWebfluxV5_0) { // method not available in 5.0.0\n+      return httpResponse.statusCode().value();\n+    }", "originalCommit": "5b37fbeb6aaa62afd395fc5047f08217411d1aeb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA3NDQwMA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1711#discussion_r460074400", "bodyText": "can't we add excludes to muzzle like we ignore JDK classes?", "author": "richardstartin", "createdAt": "2020-07-24T14:06:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA3MzM0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA3NTEyMQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1711#discussion_r460075121", "bodyText": "Also, muzzle passes for 5.0.0?", "author": "richardstartin", "createdAt": "2020-07-24T14:08:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA3MzM0MA=="}], "type": "inlineReview"}, {"oid": "5b37fbeb6aaa62afd395fc5047f08217411d1aeb", "url": "https://github.com/DataDog/dd-trace-java/commit/5b37fbeb6aaa62afd395fc5047f08217411d1aeb", "message": "use spring-webflux-5.1+ when available", "committedDate": "2020-07-24T10:33:47Z", "type": "forcePushed"}, {"oid": "1781029b9f80910fff24ce4816779509bc601955", "url": "https://github.com/DataDog/dd-trace-java/commit/1781029b9f80910fff24ce4816779509bc601955", "message": "use spring-webflux-5.1+ when available", "committedDate": "2020-07-24T18:46:00Z", "type": "forcePushed"}, {"oid": "017b268d7245cd716105b6e1ca415795319b309f", "url": "https://github.com/DataDog/dd-trace-java/commit/017b268d7245cd716105b6e1ca415795319b309f", "message": "use spring-webflux-5.1+ when available", "committedDate": "2020-07-24T19:10:35Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM3MjY1Nw==", "url": "https://github.com/DataDog/dd-trace-java/pull/1711#discussion_r460372657", "bodyText": "This var is mutable and we can't guarantee no side effects here. That's why it's better to be lower case (same as log):\nhttps://google.github.io/styleguide/javaguide.html#s5.2.4-constant-names", "author": "lpriima", "createdAt": "2020-07-25T06:31:50Z", "path": "dd-java-agent/instrumentation/spring-webflux-5/src/main/java8/datadog/trace/instrumentation/springwebflux/client/SpringWebfluxHttpClientDecorator.java", "diffHunk": "@@ -11,6 +14,8 @@\n public class SpringWebfluxHttpClientDecorator\n     extends HttpClientDecorator<ClientRequest, ClientResponse> {\n \n+  private static final MethodHandle RAW_STATUS_CODE = findRawStatusCode();", "originalCommit": "017b268d7245cd716105b6e1ca415795319b309f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM4MTc5Mw==", "url": "https://github.com/DataDog/dd-trace-java/pull/1711#discussion_r460381793", "bodyText": "It's not mutable.", "author": "richardstartin", "createdAt": "2020-07-25T08:31:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM3MjY1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM3MjcyMQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1711#discussion_r460372721", "bodyText": "maybe log.debug()", "author": "lpriima", "createdAt": "2020-07-25T06:32:51Z", "path": "dd-java-agent/instrumentation/spring-webflux-5/src/main/java8/datadog/trace/instrumentation/springwebflux/client/SpringWebfluxHttpClientDecorator.java", "diffHunk": "@@ -41,6 +46,21 @@ protected URI url(final ClientRequest httpRequest) {\n \n   @Override\n   protected Integer status(final ClientResponse httpResponse) {\n+    if (null != RAW_STATUS_CODE) {\n+      try {\n+        return (int) RAW_STATUS_CODE.invokeExact(httpResponse);\n+      } catch (Throwable ignored) {\n+      }", "originalCommit": "017b268d7245cd716105b6e1ca415795319b309f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0d04226669b71e97e74461394847849ab3c5a6fc", "url": "https://github.com/DataDog/dd-trace-java/commit/0d04226669b71e97e74461394847849ab3c5a6fc", "message": "use spring-webflux-5.1+ when available", "committedDate": "2020-07-27T16:26:45Z", "type": "commit"}, {"oid": "0d04226669b71e97e74461394847849ab3c5a6fc", "url": "https://github.com/DataDog/dd-trace-java/commit/0d04226669b71e97e74461394847849ab3c5a6fc", "message": "use spring-webflux-5.1+ when available", "committedDate": "2020-07-27T16:26:45Z", "type": "forcePushed"}]}