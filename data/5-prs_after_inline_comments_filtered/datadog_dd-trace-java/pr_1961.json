{"pr_number": 1961, "pr_title": "specialised Java FJT/FJP instrumentation and context propagation tests", "pr_createdAt": "2020-10-08T15:01:31Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/1961", "timeline": [{"oid": "e280d85c305ecec0a4518255045ab67e6ce33361", "url": "https://github.com/DataDog/dd-trace-java/commit/e280d85c305ecec0a4518255045ab67e6ce33361", "message": "specialised Java FJT/FJP instrumentation and context propagation tests", "committedDate": "2020-10-08T15:47:20Z", "type": "forcePushed"}, {"oid": "034e68989c3f220fc13ef69e22583a7bcda8cea7", "url": "https://github.com/DataDog/dd-trace-java/commit/034e68989c3f220fc13ef69e22583a7bcda8cea7", "message": "specialised Java FJT/FJP instrumentation and context propagation tests", "committedDate": "2020-10-08T16:05:55Z", "type": "forcePushed"}, {"oid": "e4b115431046d386ce30a885a0df9f736c1aee46", "url": "https://github.com/DataDog/dd-trace-java/commit/e4b115431046d386ce30a885a0df9f736c1aee46", "message": "specialised Java FJT/FJP instrumentation and context propagation tests", "committedDate": "2020-10-08T16:20:59Z", "type": "forcePushed"}, {"oid": "3e03b44ed30044ef5798cead6f2fb65e65246ea7", "url": "https://github.com/DataDog/dd-trace-java/commit/3e03b44ed30044ef5798cead6f2fb65e65246ea7", "message": "specialised Java FJT/FJP instrumentation and context propagation tests", "committedDate": "2020-10-08T16:35:58Z", "type": "forcePushed"}, {"oid": "5e91792d6f7853bbd46f620ec47d5c033d471175", "url": "https://github.com/DataDog/dd-trace-java/commit/5e91792d6f7853bbd46f620ec47d5c033d471175", "message": "check java.version when specifying ForkJoinPool entry points", "committedDate": "2020-10-08T16:44:25Z", "type": "forcePushed"}, {"oid": "cd1e20cc86f7d9682d59f900683b1fa11386dda0", "url": "https://github.com/DataDog/dd-trace-java/commit/cd1e20cc86f7d9682d59f900683b1fa11386dda0", "message": "check java.version when specifying ForkJoinPool entry points", "committedDate": "2020-10-08T16:58:52Z", "type": "forcePushed"}, {"oid": "e9bceeacf87d3d9cb9ed3549ce94bd75e6198c15", "url": "https://github.com/DataDog/dd-trace-java/commit/e9bceeacf87d3d9cb9ed3549ce94bd75e6198c15", "message": "check java.version when specifying ForkJoinPool entry points", "committedDate": "2020-10-08T17:12:37Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTg4MTcwMQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1961#discussion_r501881701", "bodyText": "Something like this might be valuable if we start needing to add this in other places: https://github.com/openzipkin/brave/blob/master/brave/src/main/java/brave/internal/Platform.java", "author": "devinsba", "createdAt": "2020-10-08T17:14:14Z", "path": "dd-java-agent/instrumentation/java-concurrent/src/main/java/datadog/trace/instrumentation/java/concurrent/JavaForkJoinPoolInstrumentation.java", "diffHunk": "@@ -0,0 +1,65 @@\n+package datadog.trace.instrumentation.java.concurrent;\n+\n+import static datadog.trace.agent.tooling.bytebuddy.matcher.NameMatchers.namedOneOf;\n+import static datadog.trace.bootstrap.instrumentation.api.AgentTracer.activeScope;\n+import static datadog.trace.bootstrap.instrumentation.java.concurrent.ExcludeFilter.ExcludeType.FORK_JOIN_TASK;\n+import static java.util.Collections.singletonMap;\n+import static net.bytebuddy.matcher.ElementMatchers.isMethod;\n+import static net.bytebuddy.matcher.ElementMatchers.named;\n+\n+import com.google.auto.service.AutoService;\n+import datadog.trace.agent.tooling.Instrumenter;\n+import datadog.trace.bootstrap.InstrumentationContext;\n+import datadog.trace.bootstrap.instrumentation.java.concurrent.ExcludeFilter;\n+import datadog.trace.bootstrap.instrumentation.java.concurrent.State;\n+import datadog.trace.context.TraceScope;\n+import java.util.Map;\n+import java.util.concurrent.ForkJoinTask;\n+import net.bytebuddy.asm.Advice;\n+import net.bytebuddy.description.method.MethodDescription;\n+import net.bytebuddy.description.type.TypeDescription;\n+import net.bytebuddy.matcher.ElementMatcher;\n+\n+@AutoService(Instrumenter.class)\n+public class JavaForkJoinPoolInstrumentation extends Instrumenter.Default {\n+\n+  public JavaForkJoinPoolInstrumentation() {\n+    super(\"java_concurrent\", \"fjp\");\n+  }\n+\n+  @Override\n+  public ElementMatcher<? super TypeDescription> typeMatcher() {\n+    return named(\"java.util.concurrent.ForkJoinPool\");\n+  }\n+\n+  @Override\n+  public Map<String, String> contextStore() {\n+    return singletonMap(\"java.util.concurrent.ForkJoinTask\", State.class.getName());\n+  }\n+\n+  @Override\n+  public Map<? extends ElementMatcher<? super MethodDescription>, String> transformers() {\n+    if (System.getProperty(\"java.version\").startsWith(\"1.7\")) {", "originalCommit": "e9bceeacf87d3d9cb9ed3549ce94bd75e6198c15", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTg4MzczMg==", "url": "https://github.com/DataDog/dd-trace-java/pull/1961#discussion_r501883732", "bodyText": "Yes, though I think we should try to avoid doing this sort of thing in general.", "author": "richardstartin", "createdAt": "2020-10-08T17:17:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTg4MTcwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTg4NDY0Nw==", "url": "https://github.com/DataDog/dd-trace-java/pull/1961#discussion_r501884647", "bodyText": "Agreed, thoug I know there is a big switch statement for JFR compatibility, localizing these kind of checks would probably be good", "author": "devinsba", "createdAt": "2020-10-08T17:19:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTg4MTcwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTg4NTg2MA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1961#discussion_r501885860", "bodyText": "We could probably use something like this to conditionally add instrumentations. IE: reactor shouldn't even be loaded into bytebuddy unless we are on 8+, and 11+ for the new JDK WebClient if we had instrumentation for that", "author": "devinsba", "createdAt": "2020-10-08T17:21:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTg4MTcwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTg5OTM3NQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1961#discussion_r501899375", "bodyText": "Yes, switching everything on by default is wasteful when a lot can be determined cheaply up front.", "author": "richardstartin", "createdAt": "2020-10-08T17:42:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTg4MTcwMQ=="}], "type": "inlineReview"}, {"oid": "116d68bcb8c2550c83bf2de87bd0e11bcf0434b2", "url": "https://github.com/DataDog/dd-trace-java/commit/116d68bcb8c2550c83bf2de87bd0e11bcf0434b2", "message": "capture context and wrap runnables on entry to scala execution context in case batching is performed", "committedDate": "2020-10-09T10:34:38Z", "type": "forcePushed"}, {"oid": "e9bceeacf87d3d9cb9ed3549ce94bd75e6198c15", "url": "https://github.com/DataDog/dd-trace-java/commit/e9bceeacf87d3d9cb9ed3549ce94bd75e6198c15", "message": "check java.version when specifying ForkJoinPool entry points", "committedDate": "2020-10-08T17:12:37Z", "type": "forcePushed"}, {"oid": "6936fa3f9b5fb77248d4eb7e19c97976e40477df", "url": "https://github.com/DataDog/dd-trace-java/commit/6936fa3f9b5fb77248d4eb7e19c97976e40477df", "message": "make scala-concurrent latestDepTest depend on promise instrumentation", "committedDate": "2020-10-09T15:18:07Z", "type": "forcePushed"}, {"oid": "595dd830bfde7d1da695f7ee5356c316180f5b83", "url": "https://github.com/DataDog/dd-trace-java/commit/595dd830bfde7d1da695f7ee5356c316180f5b83", "message": "specialised Java FJT/FJP instrumentation and context propagation tests", "committedDate": "2020-10-09T16:58:52Z", "type": "commit"}, {"oid": "bec7f90198a4ba16b83883d6c4da579cb5dbe71e", "url": "https://github.com/DataDog/dd-trace-java/commit/bec7f90198a4ba16b83883d6c4da579cb5dbe71e", "message": "check java.version when specifying ForkJoinPool entry points", "committedDate": "2020-10-09T16:58:52Z", "type": "commit"}, {"oid": "9b34e0ed0f049576905d65cd44e7340f6ccca1ab", "url": "https://github.com/DataDog/dd-trace-java/commit/9b34e0ed0f049576905d65cd44e7340f6ccca1ab", "message": "make scala-concurrent latestDepTest depend on promise instrumentation", "committedDate": "2020-10-09T16:58:52Z", "type": "commit"}, {"oid": "9b34e0ed0f049576905d65cd44e7340f6ccca1ab", "url": "https://github.com/DataDog/dd-trace-java/commit/9b34e0ed0f049576905d65cd44e7340f6ccca1ab", "message": "make scala-concurrent latestDepTest depend on promise instrumentation", "committedDate": "2020-10-09T16:58:52Z", "type": "forcePushed"}]}