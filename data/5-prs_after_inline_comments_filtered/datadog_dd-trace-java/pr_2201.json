{"pr_number": 2201, "pr_title": "Reduce DDSpanContext footprint", "pr_createdAt": "2020-12-14T21:04:25Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/2201", "timeline": [{"oid": "6e91da97259acfc12e556f5f372776976a304972", "url": "https://github.com/DataDog/dd-trace-java/commit/6e91da97259acfc12e556f5f372776976a304972", "message": "don't store direct reference to CoreTracer in DDSpanContext", "committedDate": "2020-12-14T21:41:55Z", "type": "forcePushed"}, {"oid": "37fbfa22c5fda838f95fc4fdee9bcce46a10a2b7", "url": "https://github.com/DataDog/dd-trace-java/commit/37fbfa22c5fda838f95fc4fdee9bcce46a10a2b7", "message": "don't store direct reference to CoreTracer in DDSpanContext", "committedDate": "2020-12-14T22:38:53Z", "type": "commit"}, {"oid": "1d6f43cf29e2391f47cdd48bce3dbd51fa00f873", "url": "https://github.com/DataDog/dd-trace-java/commit/1d6f43cf29e2391f47cdd48bce3dbd51fa00f873", "message": "don't store thread attributes in the tags map", "committedDate": "2020-12-14T22:38:53Z", "type": "commit"}, {"oid": "1d6f43cf29e2391f47cdd48bce3dbd51fa00f873", "url": "https://github.com/DataDog/dd-trace-java/commit/1d6f43cf29e2391f47cdd48bce3dbd51fa00f873", "message": "don't store thread attributes in the tags map", "committedDate": "2020-12-14T22:38:53Z", "type": "forcePushed"}, {"oid": "065534c568d8e6a6cc360e1dc4aaf50a1cb73df5", "url": "https://github.com/DataDog/dd-trace-java/commit/065534c568d8e6a6cc360e1dc4aaf50a1cb73df5", "message": "lighter-weight metrics in DDSpanContext", "committedDate": "2020-12-14T23:18:36Z", "type": "commit"}, {"oid": "bcaef74909465018bc959b98e7e828442b8de343", "url": "https://github.com/DataDog/dd-trace-java/commit/bcaef74909465018bc959b98e7e828442b8de343", "message": "remove unnecessary ExclusiveSpan field from DDSpanContext", "committedDate": "2020-12-14T23:36:16Z", "type": "commit"}, {"oid": "57618dae5da74c3799178e471b156861ba75a6c8", "url": "https://github.com/DataDog/dd-trace-java/commit/57618dae5da74c3799178e471b156861ba75a6c8", "message": "get rid of unnecessary serviceNameMappings duplicated on each DDSpanContext instance", "committedDate": "2020-12-15T00:10:08Z", "type": "forcePushed"}, {"oid": "de3889cac5cda04025c6bbb221f8bbdacaa2b927", "url": "https://github.com/DataDog/dd-trace-java/commit/de3889cac5cda04025c6bbb221f8bbdacaa2b927", "message": "get rid of unnecessary serviceNameMappings duplicated on each DDSpanContext instance", "committedDate": "2020-12-15T00:18:14Z", "type": "forcePushed"}, {"oid": "451e246774b6f7b1ad3a02080a44f8acf104f4f2", "url": "https://github.com/DataDog/dd-trace-java/commit/451e246774b6f7b1ad3a02080a44f8acf104f4f2", "message": "get rid of unnecessary serviceNameMappings duplicated on each DDSpanContext instance", "committedDate": "2020-12-15T00:44:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE0ODQ3MA==", "url": "https://github.com/DataDog/dd-trace-java/pull/2201#discussion_r543148470", "bodyText": "Not directly related to the change, but maybe hoist this access out of the loop?", "author": "bantonsson", "createdAt": "2020-12-15T08:39:57Z", "path": "dd-trace-core/src/main/java/datadog/trace/core/DDSpanContext.java", "diffHunk": "@@ -386,7 +379,10 @@ void setAllTags(final Map<String, ? extends Object> map) {\n \n     synchronized (unsafeTags) {\n       for (final Map.Entry<String, ? extends Object> tag : map.entrySet()) {\n-        if (!tracer.getTagInterceptor().interceptTag(exclusiveSpan, tag.getKey(), tag.getValue())) {\n+        if (!trace\n+            .getTracer()\n+            .getTagInterceptor()", "originalCommit": "37fbfa22c5fda838f95fc4fdee9bcce46a10a2b7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE3NjA0Mg==", "url": "https://github.com/DataDog/dd-trace-java/pull/2201#discussion_r543176042", "bodyText": "Done", "author": "richardstartin", "createdAt": "2020-12-15T09:20:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE0ODQ3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE1NzY1Ng==", "url": "https://github.com/DataDog/dd-trace-java/pull/2201#discussion_r543157656", "bodyText": "Nice find.", "author": "bantonsson", "createdAt": "2020-12-15T08:53:39Z", "path": "dd-trace-core/src/main/java/datadog/trace/core/DDSpanContext.java", "diffHunk": "@@ -89,8 +89,6 @@\n \n   private final Map<String, String> serviceNameMappings;\n \n-  private final ExclusiveSpan exclusiveSpan;", "originalCommit": "bcaef74909465018bc959b98e7e828442b8de343", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "86c7d7c2029ca787770734a929138653cddd412e", "url": "https://github.com/DataDog/dd-trace-java/commit/86c7d7c2029ca787770734a929138653cddd412e", "message": "hoist taginterceptor access out of loop", "committedDate": "2020-12-15T09:33:57Z", "type": "forcePushed"}, {"oid": "b0c8c6c7d49893fdd48d318aedb42807ef2af468", "url": "https://github.com/DataDog/dd-trace-java/commit/b0c8c6c7d49893fdd48d318aedb42807ef2af468", "message": "fix hashmap sizing to avoid resizes", "committedDate": "2020-12-15T10:28:30Z", "type": "forcePushed"}, {"oid": "9e22e1a148962b80d110b58f2835886c92855f58", "url": "https://github.com/DataDog/dd-trace-java/commit/9e22e1a148962b80d110b58f2835886c92855f58", "message": "get rid of unnecessary serviceNameMappings duplicated on each DDSpanContext instance", "committedDate": "2020-12-15T14:38:08Z", "type": "commit"}, {"oid": "661557a66e2cc2f85b97ab993a5f53d49bc6dafd", "url": "https://github.com/DataDog/dd-trace-java/commit/661557a66e2cc2f85b97ab993a5f53d49bc6dafd", "message": "remove now hardly used ExclusiveSpan", "committedDate": "2020-12-15T14:38:08Z", "type": "commit"}, {"oid": "e6b883c6f06fdc16db356d1f660eefe76613ac6e", "url": "https://github.com/DataDog/dd-trace-java/commit/e6b883c6f06fdc16db356d1f660eefe76613ac6e", "message": "hoist taginterceptor access out of loop", "committedDate": "2020-12-15T14:38:08Z", "type": "commit"}, {"oid": "9e83a162999b32e87502653049a911d337ec6dd5", "url": "https://github.com/DataDog/dd-trace-java/commit/9e83a162999b32e87502653049a911d337ec6dd5", "message": "fix hashmap sizing to avoid resizes", "committedDate": "2020-12-15T14:38:08Z", "type": "commit"}, {"oid": "ba6c3d7d1b662685f7b2b53fa891585d1985986f", "url": "https://github.com/DataDog/dd-trace-java/commit/ba6c3d7d1b662685f7b2b53fa891585d1985986f", "message": "fix missing baggage check and initialise baggage lazily if it's used", "committedDate": "2020-12-15T14:38:08Z", "type": "commit"}, {"oid": "ba6c3d7d1b662685f7b2b53fa891585d1985986f", "url": "https://github.com/DataDog/dd-trace-java/commit/ba6c3d7d1b662685f7b2b53fa891585d1985986f", "message": "fix missing baggage check and initialise baggage lazily if it's used", "committedDate": "2020-12-15T14:38:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQxMTMzNg==", "url": "https://github.com/DataDog/dd-trace-java/pull/2201#discussion_r543411336", "bodyText": "Needs some sort of GuardedBy comment.", "author": "tylerbenson", "createdAt": "2020-12-15T14:49:40Z", "path": "dd-trace-core/src/main/java/datadog/trace/core/DDSpanContext.java", "diffHunk": "@@ -80,11 +87,7 @@\n   /** The origin of the trace. (eg. Synthetics) */\n   private final String origin;\n   /** Metrics on the span */\n-  private final AtomicReference<Map<CharSequence, Number>> metrics = new AtomicReference<>();\n-\n-  private final Map<String, String> serviceNameMappings;\n-\n-  private final ExclusiveSpan exclusiveSpan;\n+  private volatile Map<CharSequence, Number> metrics = EMPTY_METRICS;", "originalCommit": "ba6c3d7d1b662685f7b2b53fa891585d1985986f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQyNzEyOQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/2201#discussion_r543427129", "bodyText": "I'm not so sure it does. It's clearly synchronized where accessed.", "author": "richardstartin", "createdAt": "2020-12-15T15:08:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQxMTMzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQzMjk2NQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/2201#discussion_r543432965", "bodyText": "yes, but synchronized on spanId, which I have no objection to... just not obvious.", "author": "tylerbenson", "createdAt": "2020-12-15T15:15:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQxMTMzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQzNTg1Nw==", "url": "https://github.com/DataDog/dd-trace-java/pull/2201#discussion_r543435857", "bodyText": "there was already a comment in the relevant synchronized block, which was added precisely because it wasn't obvious. That said, I hadn't clocked that we're also doing a map lookup each time we want to check what the sampling priority is, so added a properly synchronized method to do that. I will change the representation of the sampling to something a bit leaner in a follow up PR.", "author": "richardstartin", "createdAt": "2020-12-15T15:18:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQxMTMzNg=="}], "type": "inlineReview"}, {"oid": "1f0d1da9ec54b1602fc62215d6d7ac2cea33a69b", "url": "https://github.com/DataDog/dd-trace-java/commit/1f0d1da9ec54b1602fc62215d6d7ac2cea33a69b", "message": "add synchronized internal utility method for getting metric values", "committedDate": "2020-12-15T15:15:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQzODgzMg==", "url": "https://github.com/DataDog/dd-trace-java/pull/2201#discussion_r543438832", "bodyText": "This method should probably be removed since access to the map is no longer thread safe and the guarding lock is private. How widely is it used?", "author": "tylerbenson", "createdAt": "2020-12-15T15:21:41Z", "path": "dd-trace-core/src/main/java/datadog/trace/core/DDSpanContext.java", "diffHunk": "@@ -342,22 +340,32 @@ public PendingTrace getTrace() {\n \n   @Deprecated\n   public CoreTracer getTracer() {\n-    return tracer;\n+    return trace.getTracer();\n   }\n \n   public Map<CharSequence, Number> getMetrics() {\n-    final Map<CharSequence, Number> metrics = this.metrics.get();\n-    return metrics == null ? EMPTY_METRICS : metrics;\n+    return metrics;", "originalCommit": "1f0d1da9ec54b1602fc62215d6d7ac2cea33a69b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ1MTMzMw==", "url": "https://github.com/DataDog/dd-trace-java/pull/2201#discussion_r543451333", "bodyText": "it's only accessed from a single thread after the span has been finished. The writes to the map are synchronized in case they come from different threads, but after the context is effectively sealed it's let out, in much the same way the unsafeTags are, and this makes it much cheaper to iterate over.", "author": "richardstartin", "createdAt": "2020-12-15T15:36:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQzODgzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ1MzQ2NQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/2201#discussion_r543453465", "bodyText": "The method should probably be renamed to \"unsafe\" or document the specific use case it is enabling then.", "author": "tylerbenson", "createdAt": "2020-12-15T15:38:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQzODgzMg=="}], "type": "inlineReview"}, {"oid": "51006634a1a4a1000c441031f5686a9bee509fac", "url": "https://github.com/DataDog/dd-trace-java/commit/51006634a1a4a1000c441031f5686a9bee509fac", "message": "rename internal API getMetrics() to getUnsafeMetrics()", "committedDate": "2020-12-15T15:50:53Z", "type": "commit"}]}