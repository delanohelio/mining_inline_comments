{"pr_number": 1821, "pr_title": "add writer to print trace structure", "pr_createdAt": "2020-09-01T17:30:29Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/1821", "timeline": [{"oid": "fbc07478856d7cc6cd385c4f55c33de6e98d3952", "url": "https://github.com/DataDog/dd-trace-java/commit/fbc07478856d7cc6cd385c4f55c33de6e98d3952", "message": "add writer to print trace structure, optionally to a file, to enable verification of smoke test traces", "committedDate": "2020-09-01T17:37:41Z", "type": "forcePushed"}, {"oid": "84d3c2cf425607ddad663487a1d4fa658d04d186", "url": "https://github.com/DataDog/dd-trace-java/commit/84d3c2cf425607ddad663487a1d4fa658d04d186", "message": "add writer to print trace structure, optionally to a file, to enable verification of smoke test traces", "committedDate": "2020-09-01T17:59:01Z", "type": "forcePushed"}, {"oid": "6e53d3deb3e60cb3d1401ef23808e5c9f258dfc9", "url": "https://github.com/DataDog/dd-trace-java/commit/6e53d3deb3e60cb3d1401ef23808e5c9f258dfc9", "message": "add writer to print trace structure, optionally to a file, to enable verification of smoke test traces", "committedDate": "2020-09-01T19:48:54Z", "type": "forcePushed"}, {"oid": "529eb592b7b209c896b0429820b7512b215aa0fe", "url": "https://github.com/DataDog/dd-trace-java/commit/529eb592b7b209c896b0429820b7512b215aa0fe", "message": "add writer to print trace structure, optionally to a file, to enable verification of smoke test traces", "committedDate": "2020-09-01T20:02:04Z", "type": "forcePushed"}, {"oid": "249bbd7a56c7ee3feb53d25365d9b7714ba237a5", "url": "https://github.com/DataDog/dd-trace-java/commit/249bbd7a56c7ee3feb53d25365d9b7714ba237a5", "message": "add writer to print trace structure, optionally to a file, to enable verification of smoke test traces", "committedDate": "2020-09-01T20:20:56Z", "type": "commit"}, {"oid": "249bbd7a56c7ee3feb53d25365d9b7714ba237a5", "url": "https://github.com/DataDog/dd-trace-java/commit/249bbd7a56c7ee3feb53d25365d9b7714ba237a5", "message": "add writer to print trace structure, optionally to a file, to enable verification of smoke test traces", "committedDate": "2020-09-01T20:20:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTgwNjYwNw==", "url": "https://github.com/DataDog/dd-trace-java/pull/1821#discussion_r481806607", "bodyText": "Could we add a check for a broken traceId as well? I know it shouldn't happen, but who knows...", "author": "bantonsson", "createdAt": "2020-09-02T06:58:50Z", "path": "dd-trace-core/src/main/java/datadog/trace/common/writer/TraceStructureWriter.java", "diffHunk": "@@ -0,0 +1,107 @@\n+package datadog.trace.common.writer;\n+\n+import datadog.trace.api.DDId;\n+import datadog.trace.core.DDSpan;\n+import java.io.File;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.io.PrintStream;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+public class TraceStructureWriter implements Writer {\n+\n+  private final PrintStream out;\n+\n+  public TraceStructureWriter() {\n+    this(\"\");\n+  }\n+\n+  public TraceStructureWriter(String outputFile) {\n+    try {\n+      this.out =\n+          outputFile.isEmpty() || outputFile.equals(\":\")\n+              ? System.err\n+              : new PrintStream(new FileOutputStream(new File(outputFile.replace(\":\", \"\"))));\n+    } catch (IOException e) {\n+      throw new RuntimeException(\"Failed to create trace structure writer from \" + outputFile, e);\n+    }\n+  }\n+\n+  @Override\n+  public void write(List<DDSpan> trace) {\n+    if (trace.isEmpty()) {\n+      out.println(\"[]\");\n+    } else {\n+      DDId traceId = trace.get(0).getTraceId();\n+      DDId rootSpanId = trace.get(0).getSpanId();\n+      Map<DDId, Node> nodesById = new HashMap<>();\n+      // index the tree\n+      for (DDSpan span : trace) {\n+        if (DDId.ZERO.equals(span.getParentId())) {\n+          rootSpanId = span.getSpanId();\n+        }\n+        nodesById.put(span.getSpanId(), new Node(span));\n+      }\n+      // build the tree\n+      for (DDSpan span : trace) {\n+        if (!rootSpanId.equals(span.getSpanId())) {", "originalCommit": "249bbd7a56c7ee3feb53d25365d9b7714ba237a5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg3MjQ2OQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1821#discussion_r481872469", "bodyText": "If CI were a little more reliable and it wouldn't cost me quite some time to do that and get it built, I would do it. I'll batch it in with more tests I want to build on this.", "author": "richardstartin", "createdAt": "2020-09-02T08:16:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTgwNjYwNw=="}], "type": "inlineReview"}, {"oid": "12fa93c4e75781270d81d8a6c08a6fbdb98ed442", "url": "https://github.com/DataDog/dd-trace-java/commit/12fa93c4e75781270d81d8a6c08a6fbdb98ed442", "message": "cap opentelemetry instrumentation at 0.8.0 owing to API breaks", "committedDate": "2020-09-02T07:32:27Z", "type": "commit"}]}