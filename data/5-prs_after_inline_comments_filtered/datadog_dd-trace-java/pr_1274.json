{"pr_number": 1274, "pr_title": "Add proper hashcode/equals methods to our matchers", "pr_createdAt": "2020-02-28T22:14:02Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/1274", "timeline": [{"oid": "80f13bc6705a29b7cdf29e9639b8401c314788aa", "url": "https://github.com/DataDog/dd-trace-java/commit/80f13bc6705a29b7cdf29e9639b8401c314788aa", "message": "Add proper hashcode/equals methods to our matchers\n\nI copied over the methods that would have been generated had the `HashCodeAndEqualsPlugin` actually been working.\n\nAlso updated the matcher tests to use the TypePool for more realistic values.", "committedDate": "2020-02-28T22:13:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU3MTQ4OQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1274#discussion_r386571489", "bodyText": "Should this be loggingFailSafeMatcher or something similar?", "author": "mar-kolya", "createdAt": "2020-03-02T18:32:32Z", "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/bytebuddy/matcher/LoggingFailSafeMatcher.java", "diffHunk": "@@ -52,6 +50,26 @@ public boolean matches(final T target) {\n \n   @Override\n   public String toString() {\n-    return \"safeMatcher(try(\" + matcher + \") or \" + fallback + \")\";\n+    return \"failSafe(try(\" + matcher + \") or \" + fallback + \")\";", "originalCommit": "80f13bc6705a29b7cdf29e9639b8401c314788aa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU3MTgyNw==", "url": "https://github.com/DataDog/dd-trace-java/pull/1274#discussion_r386571827", "bodyText": "Is there really no way to make this work through gradle somehow?", "author": "mar-kolya", "createdAt": "2020-03-02T18:33:15Z", "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/bytebuddy/matcher/LoggingFailSafeMatcher.java", "diffHunk": "@@ -14,7 +13,6 @@\n  * @see net.bytebuddy.matcher.FailSafeMatcher\n  */\n @Slf4j\n-@HashCodeAndEqualsPlugin.Enhance", "originalCommit": "80f13bc6705a29b7cdf29e9639b8401c314788aa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU3NDEzMA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1274#discussion_r386574130", "bodyText": "probably, but not immediately obvious.  Plus AFAIK it wouldn't work in an IDE.", "author": "tylerbenson", "createdAt": "2020-03-02T18:37:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU3MTgyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU3MjA5NQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1274#discussion_r386572095", "bodyText": "var1?", "author": "mar-kolya", "createdAt": "2020-03-02T18:33:50Z", "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/bytebuddy/matcher/LoggingFailSafeMatcher.java", "diffHunk": "@@ -52,6 +50,26 @@ public boolean matches(final T target) {\n \n   @Override\n   public String toString() {\n-    return \"safeMatcher(try(\" + matcher + \") or \" + fallback + \")\";\n+    return \"failSafe(try(\" + matcher + \") or \" + fallback + \")\";\n+  }\n+\n+  @Override\n+  public boolean equals(final Object var1) {", "originalCommit": "80f13bc6705a29b7cdf29e9639b8401c314788aa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}