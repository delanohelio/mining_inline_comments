{"pr_number": 1362, "pr_title": "add {\"_dd.measured\":1} to every integration individually", "pr_createdAt": "2020-04-10T19:27:47Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/1362", "timeline": [{"oid": "ee5ec1b4c4e300f6288c70bde9aa32c774d7e8a5", "url": "https://github.com/DataDog/dd-trace-java/commit/ee5ec1b4c4e300f6288c70bde9aa32c774d7e8a5", "message": "add {\"_dd.measured\":1} to ServerDecorator", "committedDate": "2020-04-16T05:53:58Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzMyNDUwNQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1362#discussion_r413324505", "bodyText": "this ServerDecorator is only used for spans handling http requests correct?\ne.g. Spring, Struts, Play, etc?", "author": "brettlangdon", "createdAt": "2020-04-22T20:52:40Z", "path": "dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/instrumentation/decorator/ServerDecorator.java", "diffHunk": "@@ -11,6 +11,7 @@ public AgentSpan afterStart(final AgentSpan span) {\n     assert span != null;\n     span.setTag(Tags.SPAN_KIND, Tags.SPAN_KIND_SERVER);\n     span.setTag(Config.LANGUAGE_TAG_KEY, Config.LANGUAGE_TAG_VALUE);\n+    span.setTag(\"_dd.measured\", \"1\");", "originalCommit": "ee5ec1b4c4e300f6288c70bde9aa32c774d7e8a5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM0MDM0NA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1362#discussion_r413340344", "bodyText": "I'm a bit concerned by some of the decorators where this would have effect.\nFor example, a standard spring boot app, we would see potentially 2 spans with this added, the top level servlet span, plus the handler/controller span.  The first one makes sense, but I'm not sure the second one does.  Before we merge this, we'd need to review all the decorators that extend this class to confirm we want the metric added.", "author": "tylerbenson", "createdAt": "2020-04-22T21:19:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzMyNDUwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM0NzA2Mg==", "url": "https://github.com/DataDog/dd-trace-java/pull/1362#discussion_r413347062", "bodyText": "So, should we do this on an instrumentation by instrumentation basis instead?\nIs there a rule of thumb as to which server spans should have \"measured\"?", "author": "dougqh", "createdAt": "2020-04-22T21:30:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzMyNDUwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM1MzA5MA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1362#discussion_r413353090", "bodyText": "Integration root spans should be marked for measured.\nThe main goal behind manually marking spans to be measured is as we move towards unifying the service name used by an application (e.g. all spans regardless of integration share the same service name), we want to be sure that people do not lose access to metrics that get generated today automatically by having unique service names for integrations.", "author": "brettlangdon", "createdAt": "2020-04-22T21:41:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzMyNDUwNQ=="}], "type": "inlineReview"}, {"oid": "13804bf1dbcc42b7dc035047a385c2f3753de4c6", "url": "https://github.com/DataDog/dd-trace-java/commit/13804bf1dbcc42b7dc035047a385c2f3753de4c6", "message": "Keep Tags.PEER_SERVICE", "committedDate": "2020-05-20T20:50:27Z", "type": "forcePushed"}, {"oid": "78afcb61b54c1b8b15cf9ca0010106bea1b988d2", "url": "https://github.com/DataDog/dd-trace-java/commit/78afcb61b54c1b8b15cf9ca0010106bea1b988d2", "message": "add {\"_dd.measured\":1} to ServerDecorator", "committedDate": "2020-05-21T03:30:56Z", "type": "forcePushed"}, {"oid": "bd0af464428b0f900493fb66587b23ab03001ab6", "url": "https://github.com/DataDog/dd-trace-java/commit/bd0af464428b0f900493fb66587b23ab03001ab6", "message": "specify _dd.measured individually for every integration", "committedDate": "2020-05-26T21:48:40Z", "type": "forcePushed"}, {"oid": "1be8f68391807b33cb6bb1d238eb071c2fc5e13b", "url": "https://github.com/DataDog/dd-trace-java/commit/1be8f68391807b33cb6bb1d238eb071c2fc5e13b", "message": "specify _dd.measured individually for every integration", "committedDate": "2020-05-26T21:54:21Z", "type": "forcePushed"}, {"oid": "7a73ade71b1f56a272a2cc0bd5beb40d29adfb7c", "url": "https://github.com/DataDog/dd-trace-java/commit/7a73ade71b1f56a272a2cc0bd5beb40d29adfb7c", "message": "specify _dd.measured individually for every integration", "committedDate": "2020-05-26T21:59:04Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkwNDk2MA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1362#discussion_r430904960", "bodyText": "Is there a reason we're making this a string? Ultimately, it would be beneficial for all numeric tags to be numeric, because the vast majority of our allocation overhead is in UTF-8 encoding of strings. As things stand, this will get converted to a string anyway, but when we find a reasonable way to pass numerics through as numerics, it would be nice if this code didn't need alteration.", "author": "richardstartin", "createdAt": "2020-05-27T07:16:47Z", "path": "dd-java-agent/instrumentation/akka-http-10.0/src/main/java/datadog/trace/instrumentation/akkahttp/AkkaHttpClientInstrumentation.java", "diffHunk": "@@ -80,6 +81,7 @@ public static AgentScope methodEnter(\n       }\n \n       final AgentSpan span = startSpan(\"akka-http.request\");\n+      span.setTag(DD_MEASURED, \"1\");", "originalCommit": "7a73ade71b1f56a272a2cc0bd5beb40d29adfb7c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c316f06981a74cd7f0c40a8e2b6686317f784795", "url": "https://github.com/DataDog/dd-trace-java/commit/c316f06981a74cd7f0c40a8e2b6686317f784795", "message": "set tag \"_dd.measured\" as integer 1", "committedDate": "2020-05-27T16:23:19Z", "type": "forcePushed"}, {"oid": "9d1742716715245e59c0934a294822b3d009f4bf", "url": "https://github.com/DataDog/dd-trace-java/commit/9d1742716715245e59c0934a294822b3d009f4bf", "message": "set metric  \"_dd.measured\":1 if _dd.measured tag is true", "committedDate": "2020-05-27T22:45:22Z", "type": "forcePushed"}, {"oid": "f1289fe535bacf0ace32d1ba64e8c019536c3071", "url": "https://github.com/DataDog/dd-trace-java/commit/f1289fe535bacf0ace32d1ba64e8c019536c3071", "message": "send \"_dd.measured\":1 metric instead of tag by rule", "committedDate": "2020-05-28T02:25:53Z", "type": "forcePushed"}, {"oid": "d6ab7dd7ff77c8d5e9f54aa42324ca0ff81db63b", "url": "https://github.com/DataDog/dd-trace-java/commit/d6ab7dd7ff77c8d5e9f54aa42324ca0ff81db63b", "message": "send \"_dd.measured\":1 metric instead of tag by rule", "committedDate": "2020-05-28T02:31:06Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg3NDE2MA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1362#discussion_r431874160", "bodyText": "See Richard's work in #1504", "author": "tylerbenson", "createdAt": "2020-05-28T14:23:24Z", "path": "dd-trace-core/src/main/java/datadog/trace/core/processor/rule/MarkSpanForMetricCalculationRule.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package datadog.trace.core.processor.rule;\n+\n+import datadog.trace.bootstrap.instrumentation.api.InstrumentationTags;\n+import datadog.trace.core.DDSpan;\n+import datadog.trace.core.processor.TraceProcessor;\n+import java.util.Collection;\n+import java.util.Map;\n+\n+public class MarkSpanForMetricCalculationRule implements TraceProcessor.Rule {\n+  @Override\n+  public String[] aliases() {\n+    return new String[] {};\n+  }\n+\n+  @Override\n+  public void processSpan(DDSpan span, Map<String, Object> tags, Collection<DDSpan> trace) {\n+    final Object val = tags.get(InstrumentationTags.DD_MEASURED);\n+    if (val instanceof Boolean && (Boolean) val) {\n+      span.context().setMetric(InstrumentationTags.DD_MEASURED, 1);\n+      span.removeTag(InstrumentationTags.DD_MEASURED);", "originalCommit": "d6ab7dd7ff77c8d5e9f54aa42324ca0ff81db63b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8fa46b72abf273066b6db049724e61b829eeaa90", "url": "https://github.com/DataDog/dd-trace-java/commit/8fa46b72abf273066b6db049724e61b829eeaa90", "message": "remove \"_dd.measured\" from defult tags in tests", "committedDate": "2020-05-28T16:33:42Z", "type": "forcePushed"}, {"oid": "57e0629db68cf09337ddebf29fa05345efd1caa5", "url": "https://github.com/DataDog/dd-trace-java/commit/57e0629db68cf09337ddebf29fa05345efd1caa5", "message": "add {\"_dd.measured\":1} to ServerDecorator", "committedDate": "2020-05-28T17:12:20Z", "type": "commit"}, {"oid": "97c9aa0f31e0cca38489dad70583a4a9b693267b", "url": "https://github.com/DataDog/dd-trace-java/commit/97c9aa0f31e0cca38489dad70583a4a9b693267b", "message": "specify _dd.measured individually for every integration", "committedDate": "2020-05-28T17:12:20Z", "type": "commit"}, {"oid": "51b8d60fa82a0ec67bf115572538a317d998ffde", "url": "https://github.com/DataDog/dd-trace-java/commit/51b8d60fa82a0ec67bf115572538a317d998ffde", "message": "set tag \"_dd.measured\" as integer 1", "committedDate": "2020-05-28T17:12:20Z", "type": "commit"}, {"oid": "977bc2f42a512170a6d13b3ffe10cf5bf92026fd", "url": "https://github.com/DataDog/dd-trace-java/commit/977bc2f42a512170a6d13b3ffe10cf5bf92026fd", "message": "set metric  \"_dd.measured\":1 if _dd.measured tag is true", "committedDate": "2020-05-28T17:12:21Z", "type": "commit"}, {"oid": "e8cb80cd9fc700d30b2ed33c091df7844cb5c99c", "url": "https://github.com/DataDog/dd-trace-java/commit/e8cb80cd9fc700d30b2ed33c091df7844cb5c99c", "message": "send \"_dd.measured\":1 metric instead of tag by rule", "committedDate": "2020-05-28T17:12:21Z", "type": "commit"}, {"oid": "a211c25deecfa54b01ff771474ef3531040a7db3", "url": "https://github.com/DataDog/dd-trace-java/commit/a211c25deecfa54b01ff771474ef3531040a7db3", "message": "remove \"_dd.measured\" from defult tags in tests", "committedDate": "2020-05-28T17:12:21Z", "type": "commit"}, {"oid": "1d0ecd93771aab46074974040d6a17bdcd423bd7", "url": "https://github.com/DataDog/dd-trace-java/commit/1d0ecd93771aab46074974040d6a17bdcd423bd7", "message": "use DDSpan::getAndRemoveTag from #1504", "committedDate": "2020-05-28T17:16:43Z", "type": "commit"}, {"oid": "1d0ecd93771aab46074974040d6a17bdcd423bd7", "url": "https://github.com/DataDog/dd-trace-java/commit/1d0ecd93771aab46074974040d6a17bdcd423bd7", "message": "use DDSpan::getAndRemoveTag from #1504", "committedDate": "2020-05-28T17:16:43Z", "type": "forcePushed"}]}