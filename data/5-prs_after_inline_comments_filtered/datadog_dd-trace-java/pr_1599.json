{"pr_number": 1599, "pr_title": "MLT writer perf improvements", "pr_createdAt": "2020-06-17T17:54:26Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/1599", "timeline": [{"oid": "295f4983966a0627a2616b779abf4e54cf9b4e9e", "url": "https://github.com/DataDog/dd-trace-java/commit/295f4983966a0627a2616b779abf4e54cf9b4e9e", "message": "Adjust the agent structure", "committedDate": "2020-06-17T17:30:12Z", "type": "commit"}, {"oid": "de76e1d2d83660699105b796a09d572fb430d534", "url": "https://github.com/DataDog/dd-trace-java/commit/de76e1d2d83660699105b796a09d572fb430d534", "message": "Allow to completely omit the stacktrace subtree deduplication", "committedDate": "2020-06-17T17:39:25Z", "type": "commit"}, {"oid": "8b7da1a23c2e3c847b3dc814d00c6a4e71b46a34", "url": "https://github.com/DataDog/dd-trace-java/commit/8b7da1a23c2e3c847b3dc814d00c6a4e71b46a34", "message": "Remove LEB128ByteArrayWriter.java", "committedDate": "2020-06-17T17:39:25Z", "type": "commit"}, {"oid": "12d2f167829dd79c324be4b0e2e564fb0cf895a2", "url": "https://github.com/DataDog/dd-trace-java/commit/12d2f167829dd79c324be4b0e2e564fb0cf895a2", "message": "Allow temporarily adjust sampler period via a system property", "committedDate": "2020-06-17T17:40:58Z", "type": "commit"}, {"oid": "7e7b15be56db329340e78beaaf77f14e7dc6a843", "url": "https://github.com/DataDog/dd-trace-java/commit/7e7b15be56db329340e78beaaf77f14e7dc6a843", "message": "Allow passing in a processor closure instead of passing over an IMLTChunk instance", "committedDate": "2020-06-17T17:43:15Z", "type": "commit"}, {"oid": "29d64c69ed4b13a15a2fe877d439450f5bf667d1", "url": "https://github.com/DataDog/dd-trace-java/commit/29d64c69ed4b13a15a2fe877d439450f5bf667d1", "message": "Improve allocation behaviour by pooling ByteBuffer at thread level", "committedDate": "2020-06-17T17:44:40Z", "type": "commit"}, {"oid": "9dd938212cd3a4711424baebd70d2fdae7ec7c21", "url": "https://github.com/DataDog/dd-trace-java/commit/9dd938212cd3a4711424baebd70d2fdae7ec7c21", "message": "Use hash-based maps and sets (d'oh)", "committedDate": "2020-06-17T17:45:04Z", "type": "commit"}, {"oid": "7f4b45aa97fc3d528f7aacd361ecfe9cee843c45", "url": "https://github.com/DataDog/dd-trace-java/commit/7f4b45aa97fc3d528f7aacd361ecfe9cee843c45", "message": "Fix tests", "committedDate": "2020-06-17T18:15:13Z", "type": "commit"}, {"oid": "99cfcc1c8c433dae6013bc0ed4edfabe21eac768", "url": "https://github.com/DataDog/dd-trace-java/commit/99cfcc1c8c433dae6013bc0ed4edfabe21eac768", "message": "Make formatter happy", "committedDate": "2020-06-17T18:38:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTgwNDYxMA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1599#discussion_r441804610", "bodyText": "I suspect this branch will probably lead to much better compression opportunities than the other.", "author": "richardstartin", "createdAt": "2020-06-17T20:10:23Z", "path": "dd-java-agent/agent-mlt/src/main/java/com/datadog/mlt/sampler/ScopeStackCollector.java", "diffHunk": "@@ -55,20 +65,37 @@ public void collect(StackTraceElement[] stackTrace) {\n     if (stackTrace.length == 0) {\n       return;\n     }\n-    FrameSequence subtree = null;\n-    for (int i = stackTrace.length - 1; i >= 0; i--) {\n-      StackTraceElement element = stackTrace[i];\n-      subtree =\n-          newTree(\n-              new FrameElement(\n-                  element.getClassName(),\n-                  element.getMethodName(),\n-                  element.getLineNumber(),\n-                  stringPool),\n-              subtree);\n+    FrameSequence tree = null;\n+    if (USE_SUBTREE_COMPRESSION) {\n+      for (int i = stackTrace.length - 1; i >= 0; i--) {\n+        StackTraceElement element = stackTrace[i];\n+        tree =\n+            newTree(\n+                new FrameElement(\n+                    element.getClassName(),\n+                    element.getMethodName(),\n+                    element.getLineNumber(),\n+                    stringPool,\n+                    framePool),\n+                tree);\n+      }\n+    } else {\n+      int[] framePtrs = new int[stackTrace.length];\n+      for (int i = 0; i < stackTrace.length; i++) {\n+        StackTraceElement element = stackTrace[i];", "originalCommit": "99cfcc1c8c433dae6013bc0ed4edfabe21eac768", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjAzMjQ4Ng==", "url": "https://github.com/DataDog/dd-trace-java/pull/1599#discussion_r442032486", "bodyText": "Yep. The former one will be probably removed - does not seem to bring much benefit in real life.", "author": "jbachorik", "createdAt": "2020-06-18T07:46:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTgwNDYxMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTgwNjA4NQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1599#discussion_r441806085", "bodyText": "if ((topItem & 0x80000000) == 0x80000000\n->\nif (topItem < 0)\nhttps://github.com/DataDog/dd-trace-java/pull/1599/files#diff-a5e10a778b56aa8ff92e25ed4fd67ae4L121", "author": "richardstartin", "createdAt": "2020-06-17T20:13:03Z", "path": "dd-java-agent/agent-mlt/src/main/java/com/datadog/mlt/sampler/ScopeStackCollector.java", "diffHunk": "@@ -148,8 +179,8 @@ void addCompressedStackptr(int stackptr) {\n     stacks.add(stackptr);", "originalCommit": "99cfcc1c8c433dae6013bc0ed4edfabe21eac768", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTgwNzg3MA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1599#discussion_r441807870", "bodyText": "good.", "author": "richardstartin", "createdAt": "2020-06-17T20:16:44Z", "path": "utils/mlt-support/src/main/java/com/datadog/mlt/io/LEB128ByteBufferWriter.java", "diffHunk": "@@ -127,11 +158,31 @@ private void ensureCapacity(int offset, int dataLength) {\n       ByteBuffer newBuffer = allocateBuffer(newCapacity);\n       buffer.flip();\n       newBuffer.put(buffer);\n-      buffer = newBuffer;\n+      BUFFER_REF.set(new SoftReference<>(newBuffer));\n+      return newBuffer;\n     }\n+    return buffer;\n   }\n \n   private static ByteBuffer allocateBuffer(int capacity) {\n-    return ByteBuffer.allocateDirect(capacity);\n+    return ByteBuffer.allocate(capacity);", "originalCommit": "99cfcc1c8c433dae6013bc0ed4edfabe21eac768", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTgwODIxMg==", "url": "https://github.com/DataDog/dd-trace-java/pull/1599#discussion_r441808212", "bodyText": "if (val >= 0)", "author": "richardstartin", "createdAt": "2020-06-17T20:17:27Z", "path": "utils/mlt-support/src/main/java/com/datadog/mlt/io/MLTWriter.java", "diffHunk": "@@ -44,23 +39,16 @@ private void writeChunk(IMLTChunk chunk, LEB128Writer writer) {\n         .writeLong(chunk.getDuration()) // duration\n         .writeLong(chunk.getThreadId());\n \n-    IntSet stringConstants = new IntArraySet();\n-    IntSet frameConstants = new IntArraySet();\n-    IntSet stackConstants = new IntArraySet();\n+    IntSet stringConstants = new IntOpenHashSet();\n+    IntSet frameConstants = new IntOpenHashSet();\n+    IntSet stackConstants = new IntOpenHashSet();\n \n-    /*\n-     * Write out the stack trace sequence and collect the constant pool usage.\n-     * In order collect the data and count it in one pass the intermediary result is written to a separate\n-     * writer.\n-     */\n-    LEB128Writer stackEventWriter = frameStackDataWriter;\n     int[] eventCount = new int[1];\n     chunk\n         .frameSequenceCpIndexes()\n         .forEach(\n             val -> {\n               eventCount[0]++;\n-              stackEventWriter.writeInt(val);\n               if ((val & 0x80000000) == 0) {", "originalCommit": "99cfcc1c8c433dae6013bc0ed4edfabe21eac768", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjAzMDAyNw==", "url": "https://github.com/DataDog/dd-trace-java/pull/1599#discussion_r442030027", "bodyText": "can remove the comment then :)", "author": "jpbempel", "createdAt": "2020-06-18T07:42:23Z", "path": "dd-java-agent/agent-mlt/src/main/java/com/datadog/mlt/sampler/JMXSampler.java", "diffHunk": "@@ -25,7 +25,8 @@\n   public JMXSampler(ThreadScopeMapper threadScopeMapper) {\n     this.threadScopeMapper = threadScopeMapper;\n     // TODO period as parameter", "originalCommit": "99cfcc1c8c433dae6013bc0ed4edfabe21eac768", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjExODE5OA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1599#discussion_r442118198", "bodyText": "It is not a proper parameter, though :)", "author": "jbachorik", "createdAt": "2020-06-18T10:10:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjAzMDAyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjAzMTIwNw==", "url": "https://github.com/DataDog/dd-trace-java/pull/1599#discussion_r442031207", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                long samplerPeriod = Long.parseLong(System.getProperty(\"mlt.sampler.ms\", \"10\"));\n          \n          \n            \n                long samplerPeriod = Long.getLong(\"mlt.sampler.ms\", 10);", "author": "jpbempel", "createdAt": "2020-06-18T07:44:24Z", "path": "dd-java-agent/agent-mlt/src/main/java/com/datadog/mlt/sampler/JMXSampler.java", "diffHunk": "@@ -25,7 +25,8 @@\n   public JMXSampler(ThreadScopeMapper threadScopeMapper) {\n     this.threadScopeMapper = threadScopeMapper;\n     // TODO period as parameter\n-    executor.scheduleAtFixedRate(this::sample, 0, 10, TimeUnit.MILLISECONDS);\n+    long samplerPeriod = Long.parseLong(System.getProperty(\"mlt.sampler.ms\", \"10\"));", "originalCommit": "99cfcc1c8c433dae6013bc0ed4edfabe21eac768", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjA0MzgwMg==", "url": "https://github.com/DataDog/dd-trace-java/pull/1599#discussion_r442043802", "bodyText": "MLTReader class does not have any fields so we may make all methods static.\nusually when you are doing something like:\nnew MyClass().aMethod()\nyou can transform your method as a static one as don't have to store any fields inside the object", "author": "jpbempel", "createdAt": "2020-06-18T08:06:38Z", "path": "dd-java-agent/agent-mlt/src/test/java/com/datadog/mlt/sampler/ScopeManagerTest.java", "diffHunk": "@@ -51,32 +50,37 @@ void sample() throws Exception {\n       sampler.collect(ti.getStackTrace());\n       Thread.sleep(ThreadLocalRandom.current().nextInt(20) + 2);\n     }\n-    IMLTChunk collectedChunk = sampler.end();\n+    sampler.end(\n+        collectedChunk -> {\n+          byte[] serializedChunk = collectedChunk.serialize();\n+          List<MLTChunk> chunks = new MLTReader().readMLTChunks(serializedChunk);", "originalCommit": "99cfcc1c8c433dae6013bc0ed4edfabe21eac768", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjExODY4MQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1599#discussion_r442118681", "bodyText": "Yep, once the overall shape is stabilized I might do this.", "author": "jbachorik", "createdAt": "2020-06-18T10:11:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjA0MzgwMg=="}], "type": "inlineReview"}, {"oid": "d294929480adcf7da75b6e238a9a564e041f4a8c", "url": "https://github.com/DataDog/dd-trace-java/commit/d294929480adcf7da75b6e238a9a564e041f4a8c", "message": "Use (potentially) more performant checks instead of bit-masks", "committedDate": "2020-06-18T08:08:00Z", "type": "commit"}, {"oid": "baeca3465b4ba0d0f3ebd9e4ba3db062feb23166", "url": "https://github.com/DataDog/dd-trace-java/commit/baeca3465b4ba0d0f3ebd9e4ba3db062feb23166", "message": "Update dd-java-agent/agent-mlt/src/main/java/com/datadog/mlt/sampler/JMXSampler.java\n\nCo-authored-by: Jean-Philippe Bempel <jean-philippe.bempel@datadoghq.com>", "committedDate": "2020-06-18T10:10:22Z", "type": "commit"}, {"oid": "baeca3465b4ba0d0f3ebd9e4ba3db062feb23166", "url": "https://github.com/DataDog/dd-trace-java/commit/baeca3465b4ba0d0f3ebd9e4ba3db062feb23166", "message": "Update dd-java-agent/agent-mlt/src/main/java/com/datadog/mlt/sampler/JMXSampler.java\n\nCo-authored-by: Jean-Philippe Bempel <jean-philippe.bempel@datadoghq.com>", "committedDate": "2020-06-18T10:10:22Z", "type": "forcePushed"}]}