{"pr_number": 1598, "pr_title": "route classloads to classloader by package", "pr_createdAt": "2020-06-17T14:05:11Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/1598", "timeline": [{"oid": "04432714f0f6fd22b63cb80d073835ce1d11bf46", "url": "https://github.com/DataDog/dd-trace-java/commit/04432714f0f6fd22b63cb80d073835ce1d11bf46", "message": "find classloader for type by class package", "committedDate": "2020-06-17T15:49:17Z", "type": "forcePushed"}, {"oid": "46e79fd2271c55996eb91143b2675396f8afb0fa", "url": "https://github.com/DataDog/dd-trace-java/commit/46e79fd2271c55996eb91143b2675396f8afb0fa", "message": "find classloader for type by class package", "committedDate": "2020-06-17T16:14:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY3MDc3OQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1598#discussion_r441670779", "bodyText": "So, cache is caching the last requested packageName?", "author": "jbachorik", "createdAt": "2020-06-17T16:23:53Z", "path": "dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/DatadogClassLoader.java", "diffHunk": "@@ -77,6 +67,24 @@ public boolean hasLoadedClass(final String className) {\n     return findLoadedClass(className) != null;\n   }\n \n+  Class<?> loadFromPackage(String packageName, String name) throws ClassNotFoundException {\n+    if (internalJarURLHandler.getPackages().contains(packageName)) {\n+      Class<?> loaded = findLoadedClass(name);\n+      return null == loaded ? findClass(name) : loaded;\n+    }\n+    return super.loadClass(name);\n+  }\n+\n+  String getPackageName(final String className) {\n+    // intentionally not thread-safe: the worst case scenario is excess allocation/lookups\n+    String packageName = this.cache.get();\n+    if (null == packageName || !className.startsWith(packageName)) {\n+      packageName = className.substring(0, className.lastIndexOf('.'));\n+      this.cache = new WeakReference<>(packageName);", "originalCommit": "46e79fd2271c55996eb91143b2675396f8afb0fa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY3NTIyMA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1598#discussion_r441675220", "bodyText": "yes, it could probably do with a rename and probably doesn't need to to be a weak reference any more (this contained a Pair<String, ClassLoader> at some point today)", "author": "richardstartin", "createdAt": "2020-06-17T16:31:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY3MDc3OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY3Njg1NA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1598#discussion_r441676854", "bodyText": "This should probably account for 'no-package' classes as well - eg. lastIndexOf('/') == -1", "author": "jbachorik", "createdAt": "2020-06-17T16:33:57Z", "path": "dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/InternalJarURLHandler.java", "diffHunk": "@@ -1,42 +1,61 @@\n package datadog.trace.bootstrap;\n \n+import datadog.trace.bootstrap.instrumentation.api.Pair;\n import java.io.ByteArrayInputStream;\n import java.io.File;\n import java.io.IOException;\n import java.io.InputStream;\n+import java.lang.ref.WeakReference;\n import java.net.URISyntaxException;\n import java.net.URL;\n import java.net.URLConnection;\n import java.net.URLStreamHandler;\n-import java.nio.file.NoSuchFileException;\n import java.security.Permission;\n import java.util.Enumeration;\n import java.util.HashMap;\n+import java.util.HashSet;\n import java.util.Map;\n+import java.util.Set;\n import java.util.jar.JarEntry;\n import java.util.jar.JarFile;\n import lombok.extern.slf4j.Slf4j;\n \n @Slf4j\n public class InternalJarURLHandler extends URLStreamHandler {\n+\n+  private static final WeakReference<Pair<String, JarEntry>> NULL = new WeakReference<>(null);\n+\n+  private final String name;\n+  private final FileNotInInternalJar notFound;\n   private final Map<String, JarEntry> filenameToEntry = new HashMap<>();\n-  private JarFile bootstrapJarFile;\n+  private final Set<String> packages = new HashSet<>();\n+  private final JarFile bootstrapJarFile;\n+\n+  private WeakReference<Pair<String, JarEntry>> cache = NULL;\n \n   InternalJarURLHandler(final String internalJarFileName, final URL bootstrapJarLocation) {\n+    this.name = internalJarFileName;\n+    this.notFound = new FileNotInInternalJar(internalJarFileName);\n     final String filePrefix = internalJarFileName + \"/\";\n-\n+    JarFile jarFile = null;\n+    String currentDir = \"$\";\n     try {\n       if (bootstrapJarLocation != null) {\n-        bootstrapJarFile = new JarFile(new File(bootstrapJarLocation.toURI()), false);\n-        final Enumeration<JarEntry> entries = bootstrapJarFile.entries();\n+        jarFile = new JarFile(new File(bootstrapJarLocation.toURI()), false);\n+        final Enumeration<JarEntry> entries = jarFile.entries();\n         while (entries.hasMoreElements()) {\n           final JarEntry entry = entries.nextElement();\n-\n           if (!entry.isDirectory() && entry.getName().startsWith(filePrefix)) {\n             String name = entry.getName();\n             // remove data suffix\n             int end = name.endsWith(\".classdata\") ? name.length() - 4 : name.length();\n-            filenameToEntry.put(name.substring(internalJarFileName.length(), end), entry);\n+            String fileName = name.substring(internalJarFileName.length(), end);\n+            filenameToEntry.put(fileName, entry);\n+            if (fileName.endsWith(\".class\") && !fileName.startsWith(currentDir)) {\n+              currentDir = fileName.substring(1, fileName.lastIndexOf('/'));", "originalCommit": "46e79fd2271c55996eb91143b2675396f8afb0fa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY3OTA3OA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1598#discussion_r441679078", "bodyText": "yes, in several places, I'll handle these cases in the next commit.", "author": "richardstartin", "createdAt": "2020-06-17T16:37:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY3Njg1NA=="}], "type": "inlineReview"}, {"oid": "b063bfd96bb3690f800339981b354a269f5f5f0f", "url": "https://github.com/DataDog/dd-trace-java/commit/b063bfd96bb3690f800339981b354a269f5f5f0f", "message": "access bootstrap proxy via method", "committedDate": "2020-06-17T16:35:33Z", "type": "forcePushed"}, {"oid": "edc2e370c1f3de152257e92bfa486ed51a14a0f7", "url": "https://github.com/DataDog/dd-trace-java/commit/edc2e370c1f3de152257e92bfa486ed51a14a0f7", "message": "find classloader for type by class package", "committedDate": "2020-06-17T16:39:46Z", "type": "commit"}, {"oid": "68c1013d19f250057401ebbd726769bd0bd64372", "url": "https://github.com/DataDog/dd-trace-java/commit/68c1013d19f250057401ebbd726769bd0bd64372", "message": "access bootstrap proxy via method", "committedDate": "2020-06-17T16:39:46Z", "type": "forcePushed"}, {"oid": "647e9f48b265e1a5a4ec48f71cd4d68fe1e0fe97", "url": "https://github.com/DataDog/dd-trace-java/commit/647e9f48b265e1a5a4ec48f71cd4d68fe1e0fe97", "message": "access bootstrap proxy via method", "committedDate": "2020-06-17T16:56:25Z", "type": "forcePushed"}, {"oid": "e254602abb9b4062f86a911aa0589802cb973ce5", "url": "https://github.com/DataDog/dd-trace-java/commit/e254602abb9b4062f86a911aa0589802cb973ce5", "message": "access bootstrap proxy via method", "committedDate": "2020-06-17T17:06:15Z", "type": "commit"}, {"oid": "e254602abb9b4062f86a911aa0589802cb973ce5", "url": "https://github.com/DataDog/dd-trace-java/commit/e254602abb9b4062f86a911aa0589802cb973ce5", "message": "access bootstrap proxy via method", "committedDate": "2020-06-17T17:06:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYxOTk2NQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1598#discussion_r441619965", "bodyText": "are we sure this is the case for all JVMs?", "author": "tylerbenson", "createdAt": "2020-06-17T15:08:15Z", "path": "dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/InternalJarURLHandler.java", "diffHunk": "@@ -59,12 +83,26 @@ protected URLConnection openConnection(final URL url) throws IOException {\n       // nullInputStream() is not available until Java 11\n       return new InternalJarURLConnection(url, new ByteArrayInputStream(new byte[0]));\n     }\n-    final JarEntry entry = filenameToEntry.get(filename);\n-    if (null != entry) {\n-      return new InternalJarURLConnection(url, bootstrapJarFile.getInputStream(entry));\n+    // believe it or not, we're going to get called twice for this,\n+    // and the key will be a new object each time.\n+    Pair<String, JarEntry> pair = cache.get();\n+    if (null == pair || !filename.equals(pair.getLeft())) {\n+      final JarEntry entry = filenameToEntry.get(filename);\n+      if (null != entry) { // jar live\n+        pair = Pair.of(filename, entry);\n+        // this mechanism intentionally does not ensure visibility of this write, because it doesn't\n+        // matter\n+        this.cache = new WeakReference<>(pair);\n+      } else {\n+        log.debug(\"{} not found in {}\", filename, name);\n+        throw notFound;\n+      }\n     } else {\n-      throw new NoSuchFileException(url.getFile(), null, url.getFile() + \" not in internal jar\");\n+      // hack: just happen to know this only ever happens twice,\n+      // so dismiss cache after a hit\n+      this.cache = NULL;", "originalCommit": "7031cb13374dcbf7fe061c7fb6524d58767ad686", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc3MTkxMg==", "url": "https://github.com/DataDog/dd-trace-java/pull/1598#discussion_r441771912", "bodyText": "Do you think that on some JVMs we have been looking up each class more than twice?", "author": "richardstartin", "createdAt": "2020-06-17T19:06:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYxOTk2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc3MzAwOQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1598#discussion_r441773009", "bodyText": "I have no idea.  It was just a question based on the code.", "author": "tylerbenson", "createdAt": "2020-06-17T19:09:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYxOTk2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc3NTA5OA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1598#discussion_r441775098", "bodyText": "Let's say that it's different on some JVM - so what? Let's assume that on the other JVM we only try to load once, then we never reach this condition. If we try to load three or more times every odd load after the second will be a bit slower and end up doing a lookup, but we probably have bigger problems in that case.", "author": "richardstartin", "createdAt": "2020-06-17T19:13:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYxOTk2NQ=="}], "type": "inlineReview"}, {"oid": "c634071591a6167e36023720eac9bb383a08845c", "url": "https://github.com/DataDog/dd-trace-java/commit/c634071591a6167e36023720eac9bb383a08845c", "message": "don't cache empty package name", "committedDate": "2020-06-18T11:38:35Z", "type": "commit"}, {"oid": "16cfd58230bb2171bba7d1ee509e692cd1b0527f", "url": "https://github.com/DataDog/dd-trace-java/commit/16cfd58230bb2171bba7d1ee509e692cd1b0527f", "message": "add tests for InternalJarURLHandler and DatadogClassLoader", "committedDate": "2020-06-18T14:08:22Z", "type": "forcePushed"}, {"oid": "ba94801898b79c1f26e40f3cdb1c82ce42b0b648", "url": "https://github.com/DataDog/dd-trace-java/commit/ba94801898b79c1f26e40f3cdb1c82ce42b0b648", "message": "add tests for InternalJarURLHandler and DatadogClassLoader", "committedDate": "2020-06-18T14:13:50Z", "type": "forcePushed"}, {"oid": "e108ce238509ba1460308c778dad471c159ae101", "url": "https://github.com/DataDog/dd-trace-java/commit/e108ce238509ba1460308c778dad471c159ae101", "message": "add tests for InternalJarURLHandler and DatadogClassLoader", "committedDate": "2020-06-18T14:22:01Z", "type": "commit"}, {"oid": "e108ce238509ba1460308c778dad471c159ae101", "url": "https://github.com/DataDog/dd-trace-java/commit/e108ce238509ba1460308c778dad471c159ae101", "message": "add tests for InternalJarURLHandler and DatadogClassLoader", "committedDate": "2020-06-18T14:22:01Z", "type": "forcePushed"}]}