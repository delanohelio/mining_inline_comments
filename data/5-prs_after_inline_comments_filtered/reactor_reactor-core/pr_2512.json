{"pr_number": 2512, "pr_title": "Avoid LoggerUtils.CapturingFactory nesting, reset capture logger after LoggersTest", "pr_createdAt": "2020-11-26T16:13:33Z", "pr_url": "https://github.com/reactor/reactor-core/pull/2512", "timeline": [{"oid": "3ff6fc0cfed2a2c46823187dd104523e0ea72c25", "url": "https://github.com/reactor/reactor-core/commit/3ff6fc0cfed2a2c46823187dd104523e0ea72c25", "message": "[polish] Simplify gradle handling of standard output (see #2512)\n\nThe stackTraceFilter didn't seem to help much, and the custom code to\noutput standard output in case of a test failure was brittle and\nseem unnecessary on github actions CI for now.", "committedDate": "2020-11-26T18:54:58Z", "type": "commit"}, {"oid": "9268a0447f9450238e71b5d0147c9b12455ac198", "url": "https://github.com/reactor/reactor-core/commit/9268a0447f9450238e71b5d0147c9b12455ac198", "message": "[test] Have loggers reset to CapturingFactory after LoggersTest (#2512)\n\nDepending on the execution order of the tests, the CapturingFactory set\nup by the ReactorTestExecutionListener could be overwritten by\nLoggersTest, resulting in failure of the 30 tests that rely on the log\ncapture mechanisms.\n\nThis commit ensures that the capturing factory is set again after these\ntests, and any test tagged with `Tag(\"changesLoggerFactory\")`.", "committedDate": "2020-11-26T18:55:21Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIxMzI2Mg==", "url": "https://github.com/reactor/reactor-core/pull/2512#discussion_r531213262", "bodyText": "Seems a bit blunt to use a tag and custom logic in this class. Why not @After or @AfterAll in LoggersTest only?", "author": "ericbottard", "createdAt": "2020-11-26T20:21:18Z", "path": "reactor-core/src/test/java/reactor/ReactorTestExecutionListener.java", "diffHunk": "@@ -61,11 +63,19 @@ private static void resetHooksAndSchedulers() {\n \t@Override\n \tpublic void executionFinished(TestIdentifier testIdentifier, TestExecutionResult testExecutionResult) {\n \t\tresetHooksAndSchedulers();\n+\t\tif (testIdentifier.getTags().contains(TestTag.create(\"changesLoggerFactory\"))) {", "originalCommit": "9268a0447f9450238e71b5d0147c9b12455ac198", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQ0MDk3Ng==", "url": "https://github.com/reactor/reactor-core/pull/2512#discussion_r531440976", "bodyText": "centralize the logic of setting up the logger factory in the TestExecutionListener only", "author": "simonbasle", "createdAt": "2020-11-27T08:13:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIxMzI2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQ1NjYwNA==", "url": "https://github.com/reactor/reactor-core/pull/2512#discussion_r531456604", "bodyText": "Could also just call LoggerUtils.useCurrentLoggersWithCapture(); once more at the end of LoggerUtilsTest.disposeOnlyUninstallsItelf(), seems way more simple and understandable. wdyt?", "author": "ericbottard", "createdAt": "2020-11-27T08:45:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIxMzI2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQ3NDEwNw==", "url": "https://github.com/reactor/reactor-core/pull/2512#discussion_r531474107", "bodyText": "is one really better than the other? note that right now if we were to do the reset in an @AfterAll, it would first have to reset the logger to default one (since the current logger could be eg. jdkLogger), then reinstall capturing logger on top of it.", "author": "simonbasle", "createdAt": "2020-11-27T09:17:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIxMzI2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQ4MjYxMg==", "url": "https://github.com/reactor/reactor-core/pull/2512#discussion_r531482612", "bodyText": "pushed a commit to see the diff. if approved I'll rework the PR's history and do the merge.", "author": "simonbasle", "createdAt": "2020-11-27T09:33:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIxMzI2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQ4OTI2Ng==", "url": "https://github.com/reactor/reactor-core/pull/2512#discussion_r531489266", "bodyText": "I went and did the rebase in order to get 4 meaningful commits", "author": "simonbasle", "createdAt": "2020-11-27T09:45:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIxMzI2Mg=="}], "type": "inlineReview"}, {"oid": "469bc877ba8fd197a981e1f3c5f0c9571da686bf", "url": "https://github.com/reactor/reactor-core/commit/469bc877ba8fd197a981e1f3c5f0c9571da686bf", "message": "[polish] Remove internal LoggerFactory interface (#2512)\n\nThis commit removes the internal `LoggerFactory` interface from the\nLoggerUtils class, directly storing the factories as `Function`s.\n\nThis enables comparisons to be made with the current factory and any\nother factory, including the `useCustomLoggers` Function-based ones.", "committedDate": "2020-11-27T09:39:29Z", "type": "commit"}, {"oid": "6c9bab3475d848e2ccfb44a08f5e4fac248f43fa", "url": "https://github.com/reactor/reactor-core/commit/6c9bab3475d848e2ccfb44a08f5e4fac248f43fa", "message": "Prevent nested install of CapturingFactory, polish LoggerUtils (#2512)\n\nNow that logger factory is stored as a Function, the CapturingFactory\ncan reflexively detect another one is already in place (which was\ntrickier before, as the field would contain a method reference, not the\nwhole instance).\n\nAs a consequence, attempting to install a CapturingFactory over another\nCapturingFactory will result in the old one being returned.\n\nThis commit also contains a few polish changes (fixing typos, etc...).", "committedDate": "2020-11-27T09:42:36Z", "type": "commit"}, {"oid": "0d2baa2433e948635b54b1142a2b44e1c48ac14f", "url": "https://github.com/reactor/reactor-core/commit/0d2baa2433e948635b54b1142a2b44e1c48ac14f", "message": "[test] Have loggers reset to CapturingFactory after LoggersTest (#2512)\n\nDepending on the execution order of the tests, the CapturingFactory set\nup by the ReactorTestExecutionListener could be overwritten by\nLoggersTest, resulting in failure of the 30 tests that rely on the log\ncapture mechanisms.\n\nThis commit ensures that the capturing factory is set again after these\ntests, delegating to ReactorTestExecutionListener for the exact logger\nsetup.", "committedDate": "2020-11-27T09:43:50Z", "type": "commit"}, {"oid": "0d2baa2433e948635b54b1142a2b44e1c48ac14f", "url": "https://github.com/reactor/reactor-core/commit/0d2baa2433e948635b54b1142a2b44e1c48ac14f", "message": "[test] Have loggers reset to CapturingFactory after LoggersTest (#2512)\n\nDepending on the execution order of the tests, the CapturingFactory set\nup by the ReactorTestExecutionListener could be overwritten by\nLoggersTest, resulting in failure of the 30 tests that rely on the log\ncapture mechanisms.\n\nThis commit ensures that the capturing factory is set again after these\ntests, delegating to ReactorTestExecutionListener for the exact logger\nsetup.", "committedDate": "2020-11-27T09:43:50Z", "type": "forcePushed"}]}