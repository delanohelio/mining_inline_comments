{"pr_number": 2363, "pr_title": "fix #2173 Add firstWithValue operator, alias/deprecate first", "pr_createdAt": "2020-09-08T08:10:24Z", "pr_url": "https://github.com/reactor/reactor-core/pull/2363", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDczNzcxNA==", "url": "https://github.com/reactor/reactor-core/pull/2363#discussion_r484737714", "bodyText": "After further thoughts, I'm having huge doubts about the introduction of this method and the corresponding one in Mono as I think it can easily be missed by the user and though results in an invalid mix & match of firstValues and or operators called.", "author": "aneveu", "createdAt": "2020-09-08T08:20:25Z", "path": "reactor-core/src/main/java/reactor/core/publisher/Flux.java", "diffHunk": "@@ -6602,17 +6637,42 @@ public int getPrefetch() {\n \t * @see #first\n \t */\n \tpublic final Flux<T> or(Publisher<? extends T> other) {\n-\t\tif (this instanceof FluxFirstEmitting) {\n-\t\t\tFluxFirstEmitting<T> publisherAmb = (FluxFirstEmitting<T>) this;\n+\t\tif (this instanceof FluxFirst) {\n+\t\t\tFluxFirst<T> orPublisher = (FluxFirst<T>) this;\n \n-\t\t\tFluxFirstEmitting<T> result = publisherAmb.ambAdditionalSource(other);\n+\t\t\tFluxFirst<T> result = orPublisher.orAdditionalSource(other);\n \t\t\tif (result != null) {\n \t\t\t\treturn result;\n \t\t\t}\n \t\t}\n \t\treturn first(this, other);\n \t}\n \n+\t/**\n+\t * Pick the first {@link Publisher} between this {@link Flux} and another publisher\n+\t * to emit any value and replay all signals from that\n+\t * {@link Publisher}, effectively behaving like the fastest of these competing sources.\n+\t *\n+\t * <p> TODO\n+\t * <img class=\"marble\" src=\"doc-files/marbles/orForFlux.svg\" alt=\"\">\n+\t *\n+\t * @param other the {@link Publisher} to race with\n+\t *\n+\t * @return the fastest sequence\n+\t * @see #firstValues\n+\t */\n+\tpublic final Flux<T> orValues(Publisher<? extends T> other) {\n+\t\tif (this instanceof FluxFirstValues) {\n+\t\t\tFluxFirstValues<T> orPublisher = (FluxFirstValues<T>) this;\n+\n+\t\t\tFluxFirstValues<T> result = orPublisher.orAdditionalSource(other);\n+\t\t\tif (result != null) {\n+\t\t\t\treturn result;\n+\t\t\t}\n+\t\t}\n+\t\treturn firstValues(this, other);\n+\t}", "originalCommit": "963ecc147e7a3e112d8474d373a3746011694253", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDc3NzY4NA==", "url": "https://github.com/reactor/reactor-core/pull/2363#discussion_r484777684", "bodyText": "that is actually a huge argument in favor of NOT mutualizing the publisher concrete classes !", "author": "simonbasle", "createdAt": "2020-09-08T09:24:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDczNzcxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDkzNzk4NQ==", "url": "https://github.com/reactor/reactor-core/pull/2363#discussion_r484937985", "bodyText": "actually, let's forget about orValues for now.", "author": "simonbasle", "createdAt": "2020-09-08T13:52:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDczNzcxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDkzNzQ3Mw==", "url": "https://github.com/reactor/reactor-core/pull/2363#discussion_r484937473", "bodyText": "let's cover the case where first source in the vararg is a FluxFirstValues (and return the result of orAdditionalSource then)", "author": "simonbasle", "createdAt": "2020-09-08T13:52:09Z", "path": "reactor-core/src/main/java/reactor/core/publisher/Flux.java", "diffHunk": "@@ -942,7 +942,42 @@\n \t * @return a new {@link Flux} behaving like the fastest of its sources\n \t */\n \tpublic static <I> Flux<I> first(Iterable<? extends Publisher<? extends I>> sources) {\n-\t\treturn onAssembly(new FluxFirstEmitting<>(sources));\n+\t\treturn onAssembly(new FluxFirst<>(sources));\n+\t}\n+\n+\t/**\n+\t * Pick the first {@link Publisher} to emit any value and replay all signals\n+\t * from that {@link Publisher}, effectively behaving like the\n+\t * fastest of these competing sources.\n+\t *\n+\t * <p>\n+\t * // TODO replace the img\n+\t *\n+\t * @param sources The competing source publishers\n+\t * @param <I> The type of values in both source and output sequences\n+\t *\n+\t * @return a new {@link Flux} behaving like the fastest of its sources\n+\t */\n+\t@SafeVarargs\n+\tpublic static <I> Flux<I> firstValues(Publisher<? extends I>... sources) {\n+\t\treturn onAssembly(new FluxFirstValues<>(sources));", "originalCommit": "963ecc147e7a3e112d8474d373a3746011694253", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDkzODM2Mw==", "url": "https://github.com/reactor/reactor-core/pull/2363#discussion_r484938363", "bodyText": "same as in flux, do some amount of macro-fusion", "author": "simonbasle", "createdAt": "2020-09-08T13:53:21Z", "path": "reactor-core/src/main/java/reactor/core/publisher/Mono.java", "diffHunk": "@@ -355,6 +355,15 @@\n \t\treturn onAssembly(new MonoFirst<>(monos));\n \t}\n \n+\t@SafeVarargs\n+\tpublic static <T> Mono<T> firstValue(Mono<? extends T>... monos) {\n+\t\treturn onAssembly(new MonoFirstValue<>(monos));", "originalCommit": "963ecc147e7a3e112d8474d373a3746011694253", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDkzODQ5Ng==", "url": "https://github.com/reactor/reactor-core/pull/2363#discussion_r484938496", "bodyText": "same as in Flux, remove the instance method", "author": "simonbasle", "createdAt": "2020-09-08T13:53:33Z", "path": "reactor-core/src/main/java/reactor/core/publisher/Mono.java", "diffHunk": "@@ -3082,6 +3091,17 @@ public T block(Duration timeout) {\n \t\treturn first(this, other);\n \t}\n \n+\tpublic final Mono<T> orValue(Mono<? extends T> other) {", "originalCommit": "963ecc147e7a3e112d8474d373a3746011694253", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDkzODg2MA==", "url": "https://github.com/reactor/reactor-core/pull/2363#discussion_r484938860", "bodyText": "formatting unrelated change", "author": "simonbasle", "createdAt": "2020-09-08T13:54:02Z", "path": "reactor-core/src/main/java/reactor/core/publisher/Mono.java", "diffHunk": "@@ -3259,8 +3279,7 @@ public T block(Duration timeout) {\n \t * @see Flux#onErrorResume\n \t */\n \tpublic final Mono<T> onErrorResume(Function<? super Throwable, ? extends Mono<? extends\n-\t\t\tT>> fallback) {\n-\t\treturn onAssembly(new MonoOnErrorResume<>(this, fallback));\n+\t\t\tT>> fallback) {\t\treturn onAssembly(new MonoOnErrorResume<>(this, fallback));", "originalCommit": "963ecc147e7a3e112d8474d373a3746011694253", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d8977750e8ccdf3f8e19d7a2d13d5f6bf7b9d129", "url": "https://github.com/reactor/reactor-core/commit/d8977750e8ccdf3f8e19d7a2d13d5f6bf7b9d129", "message": "remove the or operator and replace it with a firstValue method doing the equivalent treatment", "committedDate": "2020-09-09T15:27:21Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ2NjAwMA==", "url": "https://github.com/reactor/reactor-core/pull/2363#discussion_r486466000", "bodyText": "this sounds really weird to me (\"valued\" as an adjective, not verb)\nWhat about race/fastest/other suggested names from the issue?", "author": "bsideup", "createdAt": "2020-09-10T16:11:26Z", "path": "reactor-core/src/main/java/reactor/core/publisher/Flux.java", "diffHunk": "@@ -942,7 +941,66 @@\n \t * @return a new {@link Flux} behaving like the fastest of its sources\n \t */\n \tpublic static <I> Flux<I> first(Iterable<? extends Publisher<? extends I>> sources) {\n-\t\treturn onAssembly(new FluxFirstEmitting<>(sources));\n+\t\treturn onAssembly(new FluxFirstSignalling<>(sources));\n+\t}\n+\n+\t/**\n+\t * Pick the first {@link Publisher} to emit any value and replay all values\n+\t * from that {@link Publisher}, effectively behaving like the source that first\n+\t * emits an {@link Subscriber#onNext(Object) onNext}.\n+\t *\n+\t * <p>\n+\t * // TODO replace the img\n+\t * <p>\n+\t * Valued sources always \"win\" over an empty source (one that only emits onComplete)\n+\t * or a failing source (one that only emits onError).\n+\t * Note that like in {@link #first(Iterable)}, an infinite source can be problematic\n+\t * if no other source emits onNext.\n+\t *\n+\t * @param sources An {@link Iterable} of the competing source publishers\n+\t * @param <I> The type of values in both source and output sequences\n+\t *\n+\t * @return a new {@link Flux} behaving like the fastest of its sources\n+\t */\n+\tpublic static <I> Flux<I> firstValued(Iterable<? extends Publisher<? extends I>> sources) {", "originalCommit": "f56d86f5312f1c8fef003e304dc56a9875df32a8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c9e63583254092375d0e8ab13f6d32af2578540c", "url": "https://github.com/reactor/reactor-core/commit/c9e63583254092375d0e8ab13f6d32af2578540c", "message": "fix #2173 add a FluxFirstValue operator", "committedDate": "2020-10-05T15:37:41Z", "type": "commit"}, {"oid": "e130104a68ec9e55d03502f83870211114107e6d", "url": "https://github.com/reactor/reactor-core/commit/e130104a68ec9e55d03502f83870211114107e6d", "message": "Add tests, add orValues() operator.\n\nCo-authored-by: Audrey Neveu <aneveu@pivotal.io>", "committedDate": "2020-10-05T15:37:41Z", "type": "commit"}, {"oid": "48fc66093cca42a338b1576b86a60d321e50bc5d", "url": "https://github.com/reactor/reactor-core/commit/48fc66093cca42a338b1576b86a60d321e50bc5d", "message": "add MonoFirstValue operator + try to fix flaky test in FluxFirstValue", "committedDate": "2020-10-05T15:37:42Z", "type": "commit"}, {"oid": "f1a4b8faf98fc2a9d3ac85992a258679f7df55cd", "url": "https://github.com/reactor/reactor-core/commit/f1a4b8faf98fc2a9d3ac85992a258679f7df55cd", "message": "fix tests", "committedDate": "2020-10-05T15:37:42Z", "type": "commit"}, {"oid": "6b8d7697cdd1097bd1009d32ffb18eb1dbe948ba", "url": "https://github.com/reactor/reactor-core/commit/6b8d7697cdd1097bd1009d32ffb18eb1dbe948ba", "message": "add missing orValue to Mono", "committedDate": "2020-10-05T15:37:42Z", "type": "commit"}, {"oid": "010e41173dc610790af33dadc91128f66512d93a", "url": "https://github.com/reactor/reactor-core/commit/010e41173dc610790af33dadc91128f66512d93a", "message": "polish: unify and clarify naming on first operators:\n* unify naming of FluFirst and Mono First operators\n* rename field WIP to WINNER to be more accurate with its purpose\n* rename `amb` method to `or`for clarity", "committedDate": "2020-10-05T15:37:42Z", "type": "commit"}, {"oid": "7eef8932c6d6cca855915295bb09e7a9aa8e6f62", "url": "https://github.com/reactor/reactor-core/commit/7eef8932c6d6cca855915295bb09e7a9aa8e6f62", "message": "add header to new file + replace existing ones", "committedDate": "2020-10-05T15:37:42Z", "type": "commit"}, {"oid": "645a69d29f664168938df46364e7e0ded6a7538e", "url": "https://github.com/reactor/reactor-core/commit/645a69d29f664168938df46364e7e0ded6a7538e", "message": "remove the or operator and replace it with a firstValue method doing the equivalent treatment", "committedDate": "2020-10-05T15:37:42Z", "type": "commit"}, {"oid": "bd7bafb2fb2f9784c3b7614fcbd72bb59784e300", "url": "https://github.com/reactor/reactor-core/commit/bd7bafb2fb2f9784c3b7614fcbd72bb59784e300", "message": "Polish javadocs", "committedDate": "2020-10-05T15:37:42Z", "type": "commit"}, {"oid": "665bf89c079411b7386f2e5113b91b88fa8ffe6d", "url": "https://github.com/reactor/reactor-core/commit/665bf89c079411b7386f2e5113b91b88fa8ffe6d", "message": "renamed FluxFirst to FluxFirstSignalling (preparing for a potential future name change", "committedDate": "2020-10-05T15:37:42Z", "type": "commit"}, {"oid": "3152e341899d28aa08689a1931004fee9f6fc105", "url": "https://github.com/reactor/reactor-core/commit/3152e341899d28aa08689a1931004fee9f6fc105", "message": "rename operator to firstValued in both Flux and Mono", "committedDate": "2020-10-05T15:37:42Z", "type": "commit"}, {"oid": "3c3b05836ebe7cd1f2f61bd88536a6fabae6ac76", "url": "https://github.com/reactor/reactor-core/commit/3c3b05836ebe7cd1f2f61bd88536a6fabae6ac76", "message": "rename classes to align with new operator name firstValued", "committedDate": "2020-10-05T15:37:42Z", "type": "commit"}, {"oid": "4614e147737e9bad7b5b8e1a522bc6d0a8401b2b", "url": "https://github.com/reactor/reactor-core/commit/4614e147737e9bad7b5b8e1a522bc6d0a8401b2b", "message": "suppress unchecked warning", "committedDate": "2020-10-05T15:37:42Z", "type": "commit"}, {"oid": "43708ae81d151dbba91ca91df2c23a057636ecad", "url": "https://github.com/reactor/reactor-core/commit/43708ae81d151dbba91ca91df2c23a057636ecad", "message": "Rework the macro fusion to allow vararg others, remove firstValued(array)", "committedDate": "2020-10-05T15:37:43Z", "type": "commit"}, {"oid": "82499dd82c4f4f32b9d2f600c37d01071fa9acbc", "url": "https://github.com/reactor/reactor-core/commit/82499dd82c4f4f32b9d2f600c37d01071fa9acbc", "message": "fix missing safevararg", "committedDate": "2020-10-05T15:37:43Z", "type": "commit"}, {"oid": "4fb43f87f5790fe71b173a2951c76001f4542632", "url": "https://github.com/reactor/reactor-core/commit/4fb43f87f5790fe71b173a2951c76001f4542632", "message": "junit5: no need for public modifiers", "committedDate": "2020-10-05T15:37:43Z", "type": "commit"}, {"oid": "c891dfd8d1b7249944ad6fdae1bed572ed9b6923", "url": "https://github.com/reactor/reactor-core/commit/c891dfd8d1b7249944ad6fdae1bed572ed9b6923", "message": "Fix generics related warnings", "committedDate": "2020-10-05T15:37:43Z", "type": "commit"}, {"oid": "e56f35e19387e29ffc64817052b3f90e4bbfe544", "url": "https://github.com/reactor/reactor-core/commit/e56f35e19387e29ffc64817052b3f90e4bbfe544", "message": "Add marble diagram for Flux", "committedDate": "2020-10-05T15:37:43Z", "type": "commit"}, {"oid": "2dfb9151bcf4035ead367edd127b17b9c9ed84e8", "url": "https://github.com/reactor/reactor-core/commit/2dfb9151bcf4035ead367edd127b17b9c9ed84e8", "message": "Packed the subscribe() call on diagram", "committedDate": "2020-10-05T15:37:43Z", "type": "commit"}, {"oid": "a1386f1ce4354535988369ea32ac5330da398971", "url": "https://github.com/reactor/reactor-core/commit/a1386f1ce4354535988369ea32ac5330da398971", "message": "Moved end arrows for no-impact fluxes", "committedDate": "2020-10-05T15:37:43Z", "type": "commit"}, {"oid": "245e98677b3420bf937d813dc60ebfae57e3c847", "url": "https://github.com/reactor/reactor-core/commit/245e98677b3420bf937d813dc60ebfae57e3c847", "message": "Added marble for Mono, changed name, optimized", "committedDate": "2020-10-05T15:37:43Z", "type": "commit"}, {"oid": "2c3ea153bfb481cbda835dbc4ab46d0a1b610915", "url": "https://github.com/reactor/reactor-core/commit/2c3ea153bfb481cbda835dbc4ab46d0a1b610915", "message": "Rename to firstWithValues", "committedDate": "2020-10-05T15:37:43Z", "type": "commit"}, {"oid": "3b3dec1426d6df098f207981f16668efcef13b97", "url": "https://github.com/reactor/reactor-core/commit/3b3dec1426d6df098f207981f16668efcef13b97", "message": "Aliased first to firstWithSignal", "committedDate": "2020-10-05T15:37:43Z", "type": "commit"}, {"oid": "cfb85008e34c8e4eeea702b7310cf7488f1195ae", "url": "https://github.com/reactor/reactor-core/commit/cfb85008e34c8e4eeea702b7310cf7488f1195ae", "message": "Rename Mono related classes.", "committedDate": "2020-10-05T15:37:43Z", "type": "commit"}, {"oid": "b997150f90086586a6274f74c9dbfdfaf527fe10", "url": "https://github.com/reactor/reactor-core/commit/b997150f90086586a6274f74c9dbfdfaf527fe10", "message": "Added a second case for the first(WithSignal) diagrams.", "committedDate": "2020-10-05T15:37:43Z", "type": "commit"}, {"oid": "5a784eceb4874ae8a5348b5ce8d98504ff611f55", "url": "https://github.com/reactor/reactor-core/commit/5a784eceb4874ae8a5348b5ce8d98504ff611f55", "message": "Remove diagrams for first alias.", "committedDate": "2020-10-05T15:37:43Z", "type": "commit"}, {"oid": "384e08929100333757ed904d76f2877875585498", "url": "https://github.com/reactor/reactor-core/commit/384e08929100333757ed904d76f2877875585498", "message": "Empty value shapes after cancel", "committedDate": "2020-10-05T15:37:44Z", "type": "commit"}, {"oid": "551c092e9ab94192b8f555fe395a0f72e6319d8d", "url": "https://github.com/reactor/reactor-core/commit/551c092e9ab94192b8f555fe395a0f72e6319d8d", "message": "small last minute polish after rebasing on master", "committedDate": "2020-10-05T15:41:33Z", "type": "commit"}, {"oid": "551c092e9ab94192b8f555fe395a0f72e6319d8d", "url": "https://github.com/reactor/reactor-core/commit/551c092e9ab94192b8f555fe395a0f72e6319d8d", "message": "small last minute polish after rebasing on master", "committedDate": "2020-10-05T15:41:33Z", "type": "forcePushed"}]}