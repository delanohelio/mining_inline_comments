{"pr_number": 2302, "pr_title": "1928 update name behavior", "pr_createdAt": "2020-08-05T11:16:58Z", "pr_url": "https://github.com/reactor/reactor-core/pull/2302", "timeline": [{"oid": "1f564a1ba559e15e0a6e0b6fbfb658b25c248868", "url": "https://github.com/reactor/reactor-core/commit/1f564a1ba559e15e0a6e0b6fbfb658b25c248868", "message": "fix #1928 update name behavior", "committedDate": "2020-08-05T11:06:53Z", "type": "commit"}, {"oid": "6c94e67992edabc5facacbded4a1926290bd1891", "url": "https://github.com/reactor/reactor-core/commit/6c94e67992edabc5facacbded4a1926290bd1891", "message": "Update documentation", "committedDate": "2020-08-05T11:16:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcwMzY2OA==", "url": "https://github.com/reactor/reactor-core/pull/2302#discussion_r465703668", "bodyText": "Suggestion: add The name serves as a prefix in the reported metrics names. before that sentence", "author": "simonbasle", "createdAt": "2020-08-05T12:52:35Z", "path": "reactor-core/src/main/java/reactor/core/publisher/Flux.java", "diffHunk": "@@ -6001,12 +6001,16 @@ public int getPrefetch() {\n \t * {@link #name(String) name} (and optionally {@link #tag(String, String) tag}) the\n \t * sequence.\n \t * <p>\n+\t * In case no name has been provided, the default name \"reactor\" will be applied.", "originalCommit": "6c94e67992edabc5facacbded4a1926290bd1891", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcwNDA1NQ==", "url": "https://github.com/reactor/reactor-core/pull/2302#discussion_r465704055", "bodyText": "don't reference micrometer classes in the javadoc. this can be turned into this name will be used as a prefix for metrics names (or meters instead of metrics)", "author": "simonbasle", "createdAt": "2020-08-05T12:53:12Z", "path": "reactor-core/src/main/java/reactor/core/publisher/Flux.java", "diffHunk": "@@ -6022,9 +6026,16 @@ public int getPrefetch() {\n \t/**\n \t * Give a name to this sequence, which can be retrieved using {@link Scannable#name()}\n \t * as long as this is the first reachable {@link Scannable#parents()}.\n+\t * <p>\n+\t * If {@link #metrics()} operator is called later in the chain, this name will be used for\n+\t * {@link io.micrometer.core.instrument.Meter}.", "originalCommit": "6c94e67992edabc5facacbded4a1926290bd1891", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcwNDkxMQ==", "url": "https://github.com/reactor/reactor-core/pull/2302#discussion_r465704911", "bodyText": "don't link to micrometer classes in javadoc", "author": "simonbasle", "createdAt": "2020-08-05T12:54:35Z", "path": "reactor-core/src/main/java/reactor/core/publisher/Flux.java", "diffHunk": "@@ -8289,10 +8300,17 @@ public final void subscribe(Subscriber<? super T> actual) {\n \t * all tags throughout the publisher chain by using {@link Scannable#tags()} (as\n \t * traversed\n \t * by {@link Scannable#parents()}).\n+\t * <p>\n+\t * Note that some monitoring systems like Prometheus require to have the exact same set of\n+\t * tags for each {@link io.micrometer.core.instrument.Meter} bearing the same name.", "originalCommit": "6c94e67992edabc5facacbded4a1926290bd1891", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcxMDE1OA==", "url": "https://github.com/reactor/reactor-core/pull/2302#discussion_r465710158", "bodyText": "I'd still try to keep both of these tests, validating that a Mono.just and a Mono.error both have the same default set of tags. Just remove the .name (or make it the same). Same in the flux test.", "author": "simonbasle", "createdAt": "2020-08-05T13:03:11Z", "path": "reactor-core/src/withMicrometerTest/java/reactor/core/publisher/MonoMetricsTest.java", "diffHunk": "@@ -373,48 +363,20 @@ public void noRequestTrackingEvenForNamedSequence() {\n \t\tMono<Integer> source = Mono.just(10)\n \t\t                           .name(\"foo\")\n \t\t                           .hide();\n-\t\tnew MonoMetrics<>(source, registry)\n-\t\t\t\t.block();\n \n-\t\tDistributionSummary meter = registry.find(METER_REQUESTED)\n+\t\tnew MonoMetrics<>(source, registry).block();\n+\n+\t\tDistributionSummary meter = registry.find(\"foo\" + METER_REQUESTED)\n \t\t                                    .summary();\n \n \t\tassertThat(meter).as(\"global find\").isNull();\n \n-\t\tmeter = registry.find(METER_REQUESTED)\n-\t\t                .tag(TAG_SEQUENCE_NAME, \"foo\")\n+\t\tmeter = registry.find(\"foo\" + METER_REQUESTED)\n \t\t                .summary();\n \n \t\tassertThat(meter).as(\"tagged find\").isNull();\n \t}\n \n-\t//see https://github.com/reactor/reactor-core/issues/1425", "originalCommit": "6c94e67992edabc5facacbded4a1926290bd1891", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "709dc931d7501da3a38993cdc32c7e768fef1876", "url": "https://github.com/reactor/reactor-core/commit/709dc931d7501da3a38993cdc32c7e768fef1876", "message": "code review + add missing documentation", "committedDate": "2020-08-05T13:55:03Z", "type": "commit"}, {"oid": "83009cac14db34f9fd1b372d82f9e6f84b03e94c", "url": "https://github.com/reactor/reactor-core/commit/83009cac14db34f9fd1b372d82f9e6f84b03e94c", "message": "merge common and custom tags section in doc", "committedDate": "2020-08-05T15:01:45Z", "type": "commit"}]}