{"pr_number": 2066, "pr_title": "fix #2060 Introduce and use VirtualTimeScheduler#getOrSet(boolean)", "pr_createdAt": "2020-03-05T12:12:52Z", "pr_url": "https://github.com/reactor/reactor-core/pull/2066", "timeline": [{"oid": "e09c1308f469b30c7bef4fcdddc7ab3574a614d4", "url": "https://github.com/reactor/reactor-core/commit/e09c1308f469b30c7bef4fcdddc7ab3574a614d4", "message": "fix #2060 Introduce and use VirtualTimeScheduler#getOrSet(boolean)", "committedDate": "2020-03-05T12:12:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxOTUxNQ==", "url": "https://github.com/reactor/reactor-core/pull/2066#discussion_r389619515", "bodyText": "nit: {} are missing", "author": "bsideup", "createdAt": "2020-03-09T12:08:05Z", "path": "reactor-test/src/test/java/reactor/test/StepVerifierTests.java", "diffHunk": "@@ -2343,4 +2346,32 @@ public void verifyDrainOnRequestInCaseOfFusion2() {\n \n \t\tassertThat(requests).containsExactly(1L, 1L, 1L);\n \t}\n+\n+\t//see https://github.com/reactor/reactor-core/issues/2060\n+\t@Test\n+\tpublic void externalGetOrSetTakenIntoAccount() {\n+\t\tScheduler.Worker subscriptionWorker = VirtualTimeScheduler.getOrSet().createWorker();\n+\t\tList<String> source = Stream.of(\"first\", \"second\", \"third\").collect(Collectors.toList());\n+\n+\n+\t\tStepVerifier.withVirtualTime(() -> {\n+\t\t\tEmitterProcessor<String> fluxEmitter = EmitterProcessor.create();\n+\n+\t\t\tsubscriptionWorker.schedulePeriodically(() -> {\n+\t\t\t\tif (source.size() > 0)\n+\t\t\t\t\tfluxEmitter.onNext(source.remove(0));", "originalCommit": "e09c1308f469b30c7bef4fcdddc7ab3574a614d4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3ffa179c732ee3d4151868cd3fec63476e60801a", "url": "https://github.com/reactor/reactor-core/commit/3ffa179c732ee3d4151868cd3fec63476e60801a", "message": "polish code style", "committedDate": "2020-03-09T13:45:41Z", "type": "commit"}]}