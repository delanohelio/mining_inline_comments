{"pr_number": 2466, "pr_title": "fix #2465 Add custom AssertJ Representation of QueueSubscription in core", "pr_createdAt": "2020-10-29T17:40:04Z", "pr_url": "https://github.com/reactor/reactor-core/pull/2466", "timeline": [{"oid": "f0cf0fb6d6da6f6401262f7f81c0e2955162ff9b", "url": "https://github.com/reactor/reactor-core/commit/f0cf0fb6d6da6f6401262f7f81c0e2955162ff9b", "message": "fix #2465 Add custom AssertJ Representation of QueueSubscription in core\n\nThis commit adds the `QueueSubscription` case to the reactor custom\nrepresentation (in `AssertionsUtils`), in addition to recognizing\n`MemoryUtils.Tracked`.\n\nAdditionally, it leverages `ReactorTestExecutionListener` to set up\nAssertJ automatically with said StandardRepresentation in core tests.\n\nThis should mark the end of \"Although QueueSubscription extends Queue\nit is purely internal...\" messages in assertions.", "committedDate": "2020-10-29T17:41:34Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDk2NjczNw==", "url": "https://github.com/reactor/reactor-core/pull/2466#discussion_r514966737", "bodyText": "Missing a CR. Will fix and force push a rebased version", "author": "ericbottard", "createdAt": "2020-10-30T09:26:00Z", "path": "reactor-core/src/test/java/reactor/core/QueueSubscriptionTest.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Copyright (c) 2011-Present VMware Inc. or its affiliates, All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *        https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package reactor.core;\n+\n+import org.assertj.core.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+\n+import reactor.core.publisher.Operators;\n+import reactor.test.AssertionsUtils;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.assertThatExceptionOfType;\n+\n+/**\n+ * @author Simon Basl\u00e9\n+ */\n+class QueueSubscriptionTest {\n+\n+\t@Test\n+\tvoid assertJShouldProperlyFormatQueueSubscription() {\n+\t\t//on purpose, doesn't set any particular representation for QueueSubscriptions\n+\t\tFuseable.QueueSubscription<?> queueSubscription = new Fuseable.QueueSubscription<Object>() {\n+\t\t\t@Override\n+\t\t\tpublic int requestFusion(int requestedMode) {\n+\t\t\t\treturn 0;\n+\t\t\t}\n+\n+\t\t\t@Override\n+\t\t\tpublic Object poll() {\n+\t\t\t\treturn null;\n+\t\t\t}\n+\n+\t\t\t@Override\n+\t\t\tpublic int size() {\n+\t\t\t\treturn 0;\n+\t\t\t}\n+\n+\t\t\t@Override\n+\t\t\tpublic boolean isEmpty() {\n+\t\t\t\treturn false;\n+\t\t\t}\n+\n+\t\t\t@Override\n+\t\t\tpublic void clear() {\n+\n+\t\t\t}\n+\n+\t\t\t@Override\n+\t\t\tpublic void request(long n) {\n+\n+\t\t\t}\n+\n+\t\t\t@Override\n+\t\t\tpublic void cancel() {\n+\n+\t\t\t}\n+\n+\t\t\t@Override\n+\t\t\tpublic String toString() {\n+\t\t\t\treturn \"ThisIsNotAQueue\";\n+\t\t\t}\n+\t\t};\n+\n+\t\tassertThatExceptionOfType(AssertionError.class)\n+\t\t\t\t.isThrownBy(() -> {\n+\t\t\t\t\tassertThat(queueSubscription).isNull();\n+\t\t\t\t})\n+\t\t.withMessage(\"\\n\" + \"Expecting:\\n\" + \" <ThisIsNotAQueue>\\n\" + \"to be equal to:\\n\" + \" <null>\\n\" + \"but was not.\");\n+\t}\n+\n+}", "originalCommit": "f0cf0fb6d6da6f6401262f7f81c0e2955162ff9b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a046e16e8c1c08b33ebf298922f5c6db061bff66", "url": "https://github.com/reactor/reactor-core/commit/a046e16e8c1c08b33ebf298922f5c6db061bff66", "message": "fix #2465 Add custom AssertJ Representation of QueueSubscription in core\n\nThis commit adds the `QueueSubscription` case to the reactor custom\nrepresentation (in `AssertionsUtils`), in addition to recognizing\n`MemoryUtils.Tracked`.\n\nAdditionally, it leverages `ReactorTestExecutionListener` to set up\nAssertJ automatically with said StandardRepresentation in core tests.\n\nThis should mark the end of \"Although QueueSubscription extends Queue\nit is purely internal...\" messages in assertions.", "committedDate": "2020-10-30T09:25:14Z", "type": "forcePushed"}, {"oid": "e45a2fe2fabebdcbf11a77491421548460eb4f76", "url": "https://github.com/reactor/reactor-core/commit/e45a2fe2fabebdcbf11a77491421548460eb4f76", "message": "fix #2465 Add custom AssertJ Representation of QueueSubscription in core\n\nThis commit adds the `QueueSubscription` case to the reactor custom\nrepresentation (in `AssertionsUtils`), in addition to recognizing\n`MemoryUtils.Tracked`.\n\nAdditionally, it leverages `ReactorTestExecutionListener` to set up\nAssertJ automatically with said StandardRepresentation in core tests.\n\nThis should mark the end of \"Although QueueSubscription extends Queue\nit is purely internal...\" messages in assertions.", "committedDate": "2020-10-30T09:35:58Z", "type": "commit"}, {"oid": "e45a2fe2fabebdcbf11a77491421548460eb4f76", "url": "https://github.com/reactor/reactor-core/commit/e45a2fe2fabebdcbf11a77491421548460eb4f76", "message": "fix #2465 Add custom AssertJ Representation of QueueSubscription in core\n\nThis commit adds the `QueueSubscription` case to the reactor custom\nrepresentation (in `AssertionsUtils`), in addition to recognizing\n`MemoryUtils.Tracked`.\n\nAdditionally, it leverages `ReactorTestExecutionListener` to set up\nAssertJ automatically with said StandardRepresentation in core tests.\n\nThis should mark the end of \"Although QueueSubscription extends Queue\nit is purely internal...\" messages in assertions.", "committedDate": "2020-10-30T09:35:58Z", "type": "forcePushed"}]}