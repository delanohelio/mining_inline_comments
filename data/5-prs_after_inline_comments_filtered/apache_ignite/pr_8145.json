{"pr_number": 8145, "pr_title": "IGNITE-13349: Tcp discovery statistics migrated to the new metrics framework.", "pr_createdAt": "2020-08-12T08:52:49Z", "pr_url": "https://github.com/apache/ignite/pull/8145", "timeline": [{"oid": "d38f631f34e92d8cc5cb266a47a61fa3d5cc6600", "url": "https://github.com/apache/ignite/commit/d38f631f34e92d8cc5cb266a47a61fa3d5cc6600", "message": "IGNITE-13347: `InitialSize`, `MaxSize` metrics added to data region metrics.", "committedDate": "2020-08-11T09:37:53Z", "type": "commit"}, {"oid": "584e50ec05e507c7efab537373bb78fe61d6068d", "url": "https://github.com/apache/ignite/commit/584e50ec05e507c7efab537373bb78fe61d6068d", "message": "IGNITE-13347: code review fixes.", "committedDate": "2020-08-11T10:33:29Z", "type": "commit"}, {"oid": "71a2962d31245bbcf37499f906d7edc08079bcb0", "url": "https://github.com/apache/ignite/commit/71a2962d31245bbcf37499f906d7edc08079bcb0", "message": "IGNITE-13349: Tcp discovery statistics migrated to the new metrics framework.", "committedDate": "2020-08-12T08:45:02Z", "type": "commit"}, {"oid": "f4891a42e83a90ac31c6a75513bd8c5ddc3fed64", "url": "https://github.com/apache/ignite/commit/f4891a42e83a90ac31c6a75513bd8c5ddc3fed64", "message": "Merge branch 'master' into IGNITE-13349", "committedDate": "2020-08-12T08:47:11Z", "type": "commit"}, {"oid": "120b28ae46a3d3c7ea3dfe6cf802379dd99c08d8", "url": "https://github.com/apache/ignite/commit/120b28ae46a3d3c7ea3dfe6cf802379dd99c08d8", "message": "IGNITE-13349: Unused code removed.", "committedDate": "2020-08-12T14:16:08Z", "type": "commit"}, {"oid": "5d3d26995fee997eecc44e9ad9894b8a04660490", "url": "https://github.com/apache/ignite/commit/5d3d26995fee997eecc44e9ad9894b8a04660490", "message": "IGNITE-13349: Unused code removed.", "committedDate": "2020-08-12T14:48:02Z", "type": "commit"}, {"oid": "c499072072c50819c298b2de070b94f65db9019c", "url": "https://github.com/apache/ignite/commit/c499072072c50819c298b2de070b94f65db9019c", "message": "Merge branch 'master' into IGNITE-13349", "committedDate": "2020-08-17T07:49:12Z", "type": "commit"}, {"oid": "9b332e99b77bf39dbb923964e1ca90e5db7e12c0", "url": "https://github.com/apache/ignite/commit/9b332e99b77bf39dbb923964e1ca90e5db7e12c0", "message": "IGNITE-13349: code style fixes.", "committedDate": "2020-08-17T08:01:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTM3MTQyNg==", "url": "https://github.com/apache/ignite/pull/8145#discussion_r471371426", "bodyText": "Do we want to make a set of constants for (\"io\", \"discovery\")?", "author": "ingvard", "createdAt": "2020-08-17T09:58:37Z", "path": "modules/core/src/main/java/org/apache/ignite/spi/discovery/tcp/TcpDiscoverySpi.java", "diffHunk": "@@ -2115,6 +2115,20 @@ protected void onExchange(DiscoveryDataPacket dataPacket, ClassLoader clsLdr) {\n     @Override public void spiStart(@Nullable String igniteInstanceName) throws IgniteSpiException {\n         initializeImpl();\n \n+        MetricRegistry discoReg =\n+            ((IgniteEx)ignite()).context().metric().registry(metricName(\"io\", \"discovery\"));", "originalCommit": "9b332e99b77bf39dbb923964e1ca90e5db7e12c0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQzNjA3NA==", "url": "https://github.com/apache/ignite/pull/8145#discussion_r471436074", "bodyText": "Fixed.", "author": "nizhikov", "createdAt": "2020-08-17T12:11:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTM3MTQyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTM3MjUxNQ==", "url": "https://github.com/apache/ignite/pull/8145#discussion_r471372515", "bodyText": "Is it mistake?  long duration = U.currentTimeMillis() - startTs;  startTs is always null.", "author": "ingvard", "createdAt": "2020-08-17T10:00:37Z", "path": "modules/core/src/main/java/org/apache/ignite/spi/discovery/tcp/internal/TcpDiscoveryStatistics.java", "diffHunk": "@@ -287,23 +158,18 @@ public synchronized void onMessageProcessingStarted(TcpDiscoveryAbstractMessage\n     public synchronized void onMessageProcessingFinished(TcpDiscoveryAbstractMessage msg) {\n         assert msg != null;\n \n-        Long startTs = msgsProcStartTs.get(msg.id());\n+        Long startTs = msgsProcStartTs.remove(msg.id());\n \n-        if (startTs != null) {\n+        if (startTs == null) {", "originalCommit": "9b332e99b77bf39dbb923964e1ca90e5db7e12c0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQzNjE4NA==", "url": "https://github.com/apache/ignite/pull/8145#discussion_r471436184", "bodyText": "Yes, my fault.\nThanks for noticing.", "author": "nizhikov", "createdAt": "2020-08-17T12:12:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTM3MjUxNQ=="}], "type": "inlineReview"}, {"oid": "a9c500116d904427f665d65bdf7d64981cb926fc", "url": "https://github.com/apache/ignite/commit/a9c500116d904427f665d65bdf7d64981cb926fc", "message": "IGNITE-13349: revert error fix.", "committedDate": "2020-08-17T10:17:27Z", "type": "commit"}, {"oid": "bfe0182bc2ac20adb42f4041e5a016684f100bf9", "url": "https://github.com/apache/ignite/commit/bfe0182bc2ac20adb42f4041e5a016684f100bf9", "message": "IGNITE-13349: Client mode fixes. Test improvement", "committedDate": "2020-08-17T12:07:20Z", "type": "commit"}, {"oid": "1aa691d449c5d18ffb8aa0d01b9d11ba0cc3ae68", "url": "https://github.com/apache/ignite/commit/1aa691d449c5d18ffb8aa0d01b9d11ba0cc3ae68", "message": "IGNITE-13349: Constant introduced.", "committedDate": "2020-08-17T12:11:44Z", "type": "commit"}, {"oid": "a3232c4678bec14cbfabe258182633a24b8e6971", "url": "https://github.com/apache/ignite/commit/a3232c4678bec14cbfabe258182633a24b8e6971", "message": "IGNITE-13349: code style fixes.", "committedDate": "2020-08-17T12:15:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQ3MjY5MA==", "url": "https://github.com/apache/ignite/pull/8145#discussion_r471472690", "bodyText": "Why the public API was changed?", "author": "NSAmelchev", "createdAt": "2020-08-17T13:19:43Z", "path": "modules/core/src/main/java/org/apache/ignite/spi/discovery/tcp/TcpDiscoverySpi.java", "diffHunk": "@@ -1358,15 +1363,6 @@ public long getPendingMessagesRegistered() {\n         return stats.pendingMessagesRegistered();\n     }\n \n-    /**\n-     * Gets pending messages discarded count.\n-     *\n-     * @return Pending messages registered count.\n-     */\n-    public long getPendingMessagesDiscarded() {", "originalCommit": "a3232c4678bec14cbfabe258182633a24b8e6971", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTUwOTg3MQ==", "url": "https://github.com/apache/ignite/pull/8145#discussion_r471509871", "bodyText": "fixed.", "author": "nizhikov", "createdAt": "2020-08-17T14:17:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQ3MjY5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQ3NjAwNA==", "url": "https://github.com/apache/ignite/pull/8145#discussion_r471476004", "bodyText": "Now we can get NPE from public methods until SPI was started.", "author": "NSAmelchev", "createdAt": "2020-08-17T13:25:01Z", "path": "modules/core/src/main/java/org/apache/ignite/spi/discovery/tcp/TcpDiscoverySpi.java", "diffHunk": "@@ -359,7 +364,7 @@\n     private Marshaller marsh;\n \n     /** Statistics. */\n-    protected final TcpDiscoveryStatistics stats = new TcpDiscoveryStatistics();\n+    protected TcpDiscoveryStatistics stats;", "originalCommit": "a3232c4678bec14cbfabe258182633a24b8e6971", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQ3ODI0Mw==", "url": "https://github.com/apache/ignite/pull/8145#discussion_r471478243", "bodyText": "Can be one-line", "author": "NSAmelchev", "createdAt": "2020-08-17T13:28:25Z", "path": "modules/core/src/main/java/org/apache/ignite/spi/discovery/tcp/TcpDiscoverySpi.java", "diffHunk": "@@ -2115,6 +2109,23 @@ protected void onExchange(DiscoveryDataPacket dataPacket, ClassLoader clsLdr) {\n     @Override public void spiStart(@Nullable String igniteInstanceName) throws IgniteSpiException {\n         initializeImpl();\n \n+        MetricRegistry discoReg =", "originalCommit": "a3232c4678bec14cbfabe258182633a24b8e6971", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQ4OTQwNw==", "url": "https://github.com/apache/ignite/pull/8145#discussion_r471489407", "bodyText": "Why this changed?", "author": "NSAmelchev", "createdAt": "2020-08-17T13:46:07Z", "path": "modules/core/src/test/java/org/apache/ignite/spi/discovery/tcp/TcpDiscoverySpiMBeanTest.java", "diffHunk": "@@ -64,21 +70,121 @@\n      */\n     @Test\n     public void testMBean() throws Exception {\n-        startGrids(3);\n+        int cnt = 3;\n+        int cliIdx = cnt - 1;\n+\n+        startGrids(cnt - 1);\n+        startClientGrid(cliIdx);\n+\n+        ClusterNode crd = U.oldest(grid(0).context().discovery().aliveServerNodes(), null);\n+\n+        assertNotNull(crd);\n \n         try {\n-            for (int i = 0; i < 3; i++) {\n+            for (int i = 0; i < cnt; i++) {\n                 IgniteEx grid = grid(i);\n \n+                MetricRegistry discoReg = grid.context().metric().registry(DISCO_METRICS);\n+\n                 TcpDiscoverySpiMBean bean = getMxBean(grid.context().igniteInstanceName(), \"SPIs\",\n                     TcpDiscoverySpi.class, TcpDiscoverySpiMBean.class);\n \n                 assertNotNull(bean);\n+\n                 assertEquals(grid.cluster().topologyVersion(), bean.getCurrentTopologyVersion());\n+                assertEquals(grid.cluster().topologyVersion(),\n+                    discoReg.<LongMetric>findMetric(\"CurrentTopologyVersion\").value());\n+\n+                if (i != cliIdx) {\n+                    assertEquals(crd.id(), bean.getCoordinator());\n+                    assertEquals(crd.id(), discoReg.<ObjectMetric<UUID>>findMetric(\"Coordinator\").value());\n+                }\n+                else {\n+                    assertNull(bean.getCoordinator());\n+                    assertNull(discoReg.findMetric(\"Coordinator\"));\n+                }\n+\n+                if (grid.localNode().id().equals(bean.getCoordinator())) {\n+                    assertTrue(bean.getCoordinatorSinceTimestamp() > 0);\n+                    assertTrue(discoReg.<LongMetric>findMetric(\"CoordinatorSince\").value() > 0);\n+                }\n+                else {\n+                    assertEquals(0, bean.getCoordinatorSinceTimestamp());\n+\n+                    if (i == cliIdx)\n+                        assertNull(discoReg.findMetric(\"CoordinatorSince\"));\n+                    else\n+                        assertEquals(0L, discoReg.<LongMetric>findMetric(\"CoordinatorSince\").value());\n+                }\n+\n+                // `getNodesJoined` returns count of joined nodes since local node startup.\n+                assertEquals((cnt - 1) - i, bean.getNodesJoined());\n+                assertEquals((cnt - 1) - i, discoReg.<IntMetric>findMetric(\"JoinedNodes\").value());\n+\n+                assertEquals(0L, bean.getNodesFailed());\n+                assertEquals(0, discoReg.<IntMetric>findMetric(\"FailedNodes\").value());\n+\n+                assertEquals(0L, bean.getNodesLeft());\n+                assertEquals(0, discoReg.<IntMetric>findMetric(\"LeftNodes\").value());\n+\n+                assertTrue(bean.getTotalReceivedMessages() > 0);\n+                assertTrue(discoReg.<IntMetric>findMetric(\"TotalReceivedMessages\").value() > 0);\n+\n+                assertTrue(bean.getTotalProcessedMessages() > 0);\n+                assertTrue(discoReg.<IntMetric>findMetric(\"TotalProcessedMessages\").value() > 0);\n+\n+                if (i != cliIdx) {\n+                    assertTrue(bean.getPendingMessagesRegistered() > 0);\n+                    assertTrue(discoReg.<IntMetric>findMetric(\"PendingMessagesRegistered\").value() > 0);\n+                }\n+                else {\n+                    assertEquals(0, bean.getPendingMessagesRegistered());\n+                    assertEquals(0, discoReg.<IntMetric>findMetric(\"PendingMessagesRegistered\").value());\n+                }\n+\n+                assertEquals(0, bean.getPendingMessagesDiscarded());\n \n                 bean.dumpRingStructure();\n                 assertTrue(strLog.toString().contains(\"TcpDiscoveryNodesRing\"));\n+\n+                assertFalse(bean.getProcessedMessages().isEmpty());\n+                assertFalse(bean.getReceivedMessages().isEmpty());\n+                assertTrue(bean.getMaxMessageProcessingTime() > 0);\n+                assertEquals(i == cliIdx, bean.isClientMode());\n+            }\n+\n+            stopGrid(0);\n+\n+            crd = U.oldest(grid(1).context().discovery().aliveServerNodes(), null);\n+\n+            for (int i = 1; i < cnt; i++) {\n+                IgniteEx grid = grid(i);\n+\n+                MetricRegistry discoReg = grid.context().metric().registry(DISCO_METRICS);\n+\n+                TcpDiscoverySpiMBean bean = getMxBean(grid.context().igniteInstanceName(), \"SPIs\",\n+                    TcpDiscoverySpi.class, TcpDiscoverySpiMBean.class);\n+\n+                assertNotNull(bean);\n+\n+                assertEquals(grid.cluster().topologyVersion(), bean.getCurrentTopologyVersion());\n+                assertEquals(grid.cluster().topologyVersion(),\n+                    discoReg.<LongMetric>findMetric(\"CurrentTopologyVersion\").value());\n+\n+                if (i != cliIdx) {\n+                    assertEquals(crd.id(), bean.getCoordinator());\n+                    assertEquals(crd.id(), discoReg.<ObjectMetric<UUID>>findMetric(\"Coordinator\").value());\n+                }\n+\n+                if (grid.localNode().id().equals(crd.id())) {\n+                    assertTrue(bean.getCoordinatorSinceTimestamp() > 0);\n+                    assertTrue(discoReg.<LongMetric>findMetric(\"CoordinatorSince\").value() > 0);\n+                }\n+\n+                assertEquals(1L, bean.getNodesLeft());\n+                assertEquals(1, discoReg.<IntMetric>findMetric(\"LeftNodes\").value());\n             }\n+", "originalCommit": "a3232c4678bec14cbfabe258182633a24b8e6971", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "271170baac7a8e4c18314f82c228a073747d1676", "url": "https://github.com/apache/ignite/commit/271170baac7a8e4c18314f82c228a073747d1676", "message": "IGNITE-13349: public API changes revert.", "committedDate": "2020-08-17T13:51:32Z", "type": "commit"}, {"oid": "b19d0b4bde8d2c5528cb2d275184b8907bb70dd1", "url": "https://github.com/apache/ignite/commit/b19d0b4bde8d2c5528cb2d275184b8907bb70dd1", "message": "IGNITE-13349: review fixes.", "committedDate": "2020-08-17T14:08:08Z", "type": "commit"}, {"oid": "c29c204978f308738b0721a2247fddd15723cbd8", "url": "https://github.com/apache/ignite/commit/c29c204978f308738b0721a2247fddd15723cbd8", "message": "IGNITE-13349: test fixes.", "committedDate": "2020-08-17T15:40:59Z", "type": "commit"}, {"oid": "f207f53d1a264201a90be4c01715cd5644564158", "url": "https://github.com/apache/ignite/commit/f207f53d1a264201a90be4c01715cd5644564158", "message": "IGNITE-13349: Ip finder added to the test.", "committedDate": "2020-08-18T09:30:27Z", "type": "commit"}]}