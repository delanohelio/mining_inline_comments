{"pr_number": 8130, "pr_title": "Cellular affinity test", "pr_createdAt": "2020-08-07T11:31:35Z", "pr_url": "https://github.com/apache/ignite/pull/8130", "timeline": [{"oid": "91b04f12ace98bb5fc178f3995429c4f4dd66c95", "url": "https://github.com/apache/ignite/commit/91b04f12ace98bb5fc178f3995429c4f4dd66c95", "message": "Cellular affinity test", "committedDate": "2020-08-07T11:30:29Z", "type": "commit"}, {"oid": "166ac1992f41b8cc03a331ec26f235222de56f0b", "url": "https://github.com/apache/ignite/commit/166ac1992f41b8cc03a331ec26f235222de56f0b", "message": "Cellular affinity test", "committedDate": "2020-08-07T12:13:49Z", "type": "commit"}, {"oid": "91149255df8ef30a11fe45c7dce0e56ac43ce2ff", "url": "https://github.com/apache/ignite/commit/91149255df8ef30a11fe45c7dce0e56ac43ce2ff", "message": "Cellular affinity test", "committedDate": "2020-08-07T12:28:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzAxOTgzOQ==", "url": "https://github.com/apache/ignite/pull/8130#discussion_r467019839", "bodyText": "Oops, missing newline", "author": "ivandasch", "createdAt": "2020-08-07T12:51:05Z", "path": "modules/ducktests/src/main/java/org/apache/ignite/internal/ducktest/tests/cellular_affinity_test/CellularAffinityBackupFilter.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.ducktest.tests.cellular_affinity_test;\n+\n+import java.util.List;\n+import java.util.Objects;\n+import org.apache.ignite.cluster.ClusterNode;\n+import org.apache.ignite.lang.IgniteBiPredicate;\n+\n+/**\n+ *\n+ */\n+public class CellularAffinityBackupFilter implements IgniteBiPredicate<ClusterNode, List<ClusterNode>> {\n+    /** */\n+    private static final long serialVersionUID = 1L;\n+\n+    /** Attribute name. */\n+    private final String attrName;\n+\n+    /**\n+     * @param attrName The attribute name for the attribute to compare.\n+     */\n+    public CellularAffinityBackupFilter(String attrName) {\n+        this.attrName = attrName;\n+    }\n+\n+    /**\n+     * Defines a predicate which returns {@code true} if a node is acceptable for a backup\n+     * or {@code false} otherwise. An acceptable node is one where its attribute value\n+     * is exact match with previously selected nodes.  If an attribute does not\n+     * exist on exactly one node of a pair, then the attribute does not match.  If the attribute\n+     * does not exist both nodes of a pair, then the attribute matches.\n+     *\n+     * @param candidate          A node that is a candidate for becoming a backup node for a partition.\n+     * @param previouslySelected A list of primary/backup nodes already chosen for a partition.\n+     *                           The primary is first.\n+     */\n+    @Override public boolean apply(ClusterNode candidate, List<ClusterNode> previouslySelected) {\n+        for (ClusterNode node : previouslySelected)\n+            return Objects.equals(candidate.attribute(attrName), node.attribute(attrName));\n+\n+        return true;\n+    }\n+}", "originalCommit": "91149255df8ef30a11fe45c7dce0e56ac43ce2ff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkxNjQxNg==", "url": "https://github.com/apache/ignite/pull/8130#discussion_r467916416", "bodyText": "Done", "author": "anton-vinogradov", "createdAt": "2020-08-10T13:49:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzAxOTgzOQ=="}], "type": "inlineReview"}, {"oid": "d92fc2a315289bf0e749505230af8d5cb035c877", "url": "https://github.com/apache/ignite/commit/d92fc2a315289bf0e749505230af8d5cb035c877", "message": "Merge branch 'ignite-ducktape' into ignite-ducktape-cellular-affinity-test", "committedDate": "2020-08-10T13:41:53Z", "type": "commit"}, {"oid": "aafbd601725408074ffcdbbdae17f4598437c827", "url": "https://github.com/apache/ignite/commit/aafbd601725408074ffcdbbdae17f4598437c827", "message": "Cellular affinity test", "committedDate": "2020-08-10T13:48:55Z", "type": "commit"}, {"oid": "47d166fef9aadcfe4f757816268813dbc515481f", "url": "https://github.com/apache/ignite/commit/47d166fef9aadcfe4f757816268813dbc515481f", "message": "Cellular affinity test", "committedDate": "2020-08-10T15:04:41Z", "type": "commit"}, {"oid": "0d37d62f5a4186eef91381db8fd017fdadb089c4", "url": "https://github.com/apache/ignite/commit/0d37d62f5a4186eef91381db8fd017fdadb089c4", "message": "Cellular affinity test", "committedDate": "2020-08-11T08:49:04Z", "type": "commit"}]}