{"pr_number": 8232, "pr_title": "IGNITE-13433 Benchmark confirms operation's latency drop decrease on Cellular switch comparing to PME-free switch", "pr_createdAt": "2020-09-09T19:54:28Z", "pr_url": "https://github.com/apache/ignite/pull/8232", "timeline": [{"oid": "6c47c0e2c96e928cfd3fc7ac213c6b09079c56f8", "url": "https://github.com/apache/ignite/commit/6c47c0e2c96e928cfd3fc7ac213c6b09079c56f8", "message": "cellular switch", "committedDate": "2020-09-09T19:53:15Z", "type": "commit"}, {"oid": "0255513d0a43ebc99470975eec8a740aba11322f", "url": "https://github.com/apache/ignite/commit/0255513d0a43ebc99470975eec8a740aba11322f", "message": "cellular switch", "committedDate": "2020-09-10T15:05:15Z", "type": "commit"}, {"oid": "ef20b6a000a82ad06de73ddf7cf4b931f65f92a5", "url": "https://github.com/apache/ignite/commit/ef20b6a000a82ad06de73ddf7cf4b931f65f92a5", "message": "cellular switch", "committedDate": "2020-09-10T15:08:12Z", "type": "commit"}, {"oid": "8dc1e0c65634c90f7570e80180fc65b4d7785b4f", "url": "https://github.com/apache/ignite/commit/8dc1e0c65634c90f7570e80180fc65b4d7785b4f", "message": "cellular switch", "committedDate": "2020-09-11T07:45:13Z", "type": "commit"}, {"oid": "13393bba8c1bc45103b2cac8aa99cc870de284f3", "url": "https://github.com/apache/ignite/commit/13393bba8c1bc45103b2cac8aa99cc870de284f3", "message": "cellular switch", "committedDate": "2020-09-11T09:32:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk5MDc3Nw==", "url": "https://github.com/apache/ignite/pull/8232#discussion_r486990777", "bodyText": "IgniteAwareApplication::start already catch any exception and mark app as broken", "author": "timoninmaxim", "createdAt": "2020-09-11T11:45:02Z", "path": "modules/ducktests/src/main/java/org/apache/ignite/internal/ducktest/tests/cellular_affinity_test/PreparedTxStreamer.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.ducktest.tests.cellular_affinity_test;\n+\n+import java.util.Collection;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import org.apache.ignite.IgniteCache;\n+import org.apache.ignite.IgniteCheckedException;\n+import org.apache.ignite.cache.affinity.Affinity;\n+import org.apache.ignite.cluster.ClusterNode;\n+import org.apache.ignite.internal.ducktest.utils.IgniteAwareApplication;\n+import org.apache.ignite.internal.processors.cache.transactions.TransactionProxyImpl;\n+import org.apache.ignite.internal.util.typedef.internal.U;\n+import org.apache.ignite.transactions.Transaction;\n+\n+/**\n+ *\n+ */\n+public class PreparedTxStreamer extends IgniteAwareApplication {\n+    /**\n+     * {@inheritDoc}\n+     */\n+    @Override protected void run(JsonNode jsonNode) throws Exception {\n+        final String cacheName = jsonNode.get(\"cacheName\").asText();\n+        final String attr = jsonNode.get(\"attr\").asText();\n+        final String cell = jsonNode.get(\"cell\").asText();\n+        final int txCnt = jsonNode.get(\"txCnt\").asInt();\n+\n+        markInitialized();\n+\n+        waitForActivation();\n+\n+        IgniteCache<Integer, Integer> cache = ignite.getOrCreateCache(cacheName);\n+\n+        log.info(\"Starting Prepared Txs...\");\n+\n+        Affinity<Integer> aff = ignite.affinity(cacheName);\n+\n+        int cnt = 0;\n+        int i = -1; // Negative keys to have no intersection with load.\n+\n+        while (cnt != txCnt && !terminated()) {\n+            Collection<ClusterNode> nodes = aff.mapKeyToPrimaryAndBackups(i);\n+\n+            Map<Object, Long> stat = nodes.stream().collect(\n+                Collectors.groupingBy(n -> n.attributes().get(attr), Collectors.counting()));\n+\n+            assert 1 == stat.keySet().size() :\n+                \"Partition should be located on nodes from only one cell \" +\n+                    \"[key=\" + i + \", nodes=\" + nodes.size() + \", stat=\" + stat + \"]\";\n+\n+            if (stat.containsKey(cell)) {\n+                cnt++;\n+\n+                Transaction tx = ignite.transactions().txStart();\n+\n+                cache.put(i, i);\n+\n+                try {\n+                    ((TransactionProxyImpl<?, ?>)tx).tx().prepare(true);\n+                }\n+                catch (IgniteCheckedException e) {", "originalCommit": "13393bba8c1bc45103b2cac8aa99cc870de284f3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzczMTgxMw==", "url": "https://github.com/apache/ignite/pull/8232#discussion_r487731813", "bodyText": "Fixed", "author": "anton-vinogradov", "createdAt": "2020-09-14T08:16:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk5MDc3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk5MzcyMA==", "url": "https://github.com/apache/ignite/pull/8232#discussion_r486993720", "bodyText": "Could you please provide a short brief of the class", "author": "timoninmaxim", "createdAt": "2020-09-11T11:51:43Z", "path": "modules/ducktests/src/main/java/org/apache/ignite/internal/ducktest/tests/cellular_affinity_test/TxStreamer.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.ducktest.tests.cellular_affinity_test;\n+\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import org.apache.ignite.IgniteCache;\n+import org.apache.ignite.cache.affinity.Affinity;\n+import org.apache.ignite.cluster.ClusterNode;\n+import org.apache.ignite.internal.ducktest.utils.IgniteAwareApplication;\n+\n+/**\n+ *", "originalCommit": "13393bba8c1bc45103b2cac8aa99cc870de284f3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzczNjI0Nw==", "url": "https://github.com/apache/ignite/pull/8232#discussion_r487736247", "bodyText": "Done", "author": "anton-vinogradov", "createdAt": "2020-09-14T08:24:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk5MzcyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk5MzgwNw==", "url": "https://github.com/apache/ignite/pull/8232#discussion_r486993807", "bodyText": "Could you please provide a short brief of the class", "author": "timoninmaxim", "createdAt": "2020-09-11T11:51:56Z", "path": "modules/ducktests/src/main/java/org/apache/ignite/internal/ducktest/tests/cellular_affinity_test/PreparedTxStreamer.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.ducktest.tests.cellular_affinity_test;\n+\n+import java.util.Collection;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import org.apache.ignite.IgniteCache;\n+import org.apache.ignite.IgniteCheckedException;\n+import org.apache.ignite.cache.affinity.Affinity;\n+import org.apache.ignite.cluster.ClusterNode;\n+import org.apache.ignite.internal.ducktest.utils.IgniteAwareApplication;\n+import org.apache.ignite.internal.processors.cache.transactions.TransactionProxyImpl;\n+import org.apache.ignite.internal.util.typedef.internal.U;\n+import org.apache.ignite.transactions.Transaction;\n+\n+/**\n+ *", "originalCommit": "13393bba8c1bc45103b2cac8aa99cc870de284f3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzczNjM3OQ==", "url": "https://github.com/apache/ignite/pull/8232#discussion_r487736379", "bodyText": "Done", "author": "anton-vinogradov", "createdAt": "2020-09-14T08:24:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk5MzgwNw=="}], "type": "inlineReview"}, {"oid": "37895dde5d5a7d5d1f34e9f09184321a511b8048", "url": "https://github.com/apache/ignite/commit/37895dde5d5a7d5d1f34e9f09184321a511b8048", "message": "cellular switch", "committedDate": "2020-09-14T08:10:34Z", "type": "commit"}, {"oid": "8c35cadaa72cffaf1839cb45155cfd9079d1c09b", "url": "https://github.com/apache/ignite/commit/8c35cadaa72cffaf1839cb45155cfd9079d1c09b", "message": "cellular switch", "committedDate": "2020-09-14T08:16:29Z", "type": "commit"}, {"oid": "6bc686f3af44c0c90ca6efbaccf6cd5bf8006575", "url": "https://github.com/apache/ignite/commit/6bc686f3af44c0c90ca6efbaccf6cd5bf8006575", "message": "cellular switch", "committedDate": "2020-09-14T08:24:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc0NDU3Mg==", "url": "https://github.com/apache/ignite/pull/8232#discussion_r487744572", "bodyText": "I suppose that this should be one-lined", "author": "ivandasch", "createdAt": "2020-09-14T08:38:05Z", "path": "modules/ducktests/src/main/java/org/apache/ignite/internal/ducktest/tests/cellular_affinity_test/CellularTxStreamer.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.ducktest.tests.cellular_affinity_test;\n+\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import org.apache.ignite.IgniteCache;\n+import org.apache.ignite.cache.affinity.Affinity;\n+import org.apache.ignite.cluster.ClusterNode;\n+import org.apache.ignite.internal.ducktest.utils.IgniteAwareApplication;\n+\n+/**\n+ * Streams transactions to specified cell.\n+ */\n+public class CellularTxStreamer extends IgniteAwareApplication {\n+    /**", "originalCommit": "6bc686f3af44c0c90ca6efbaccf6cd5bf8006575", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc3NjY1Mw==", "url": "https://github.com/apache/ignite/pull/8232#discussion_r487776653", "bodyText": "Correct. Fixed.", "author": "anton-vinogradov", "createdAt": "2020-09-14T09:30:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc0NDU3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc0NTk4Ng==", "url": "https://github.com/apache/ignite/pull/8232#discussion_r487745986", "bodyText": "Why 10_000_000? You never use this fact in the code.", "author": "ivandasch", "createdAt": "2020-09-14T08:40:23Z", "path": "modules/ducktests/src/main/java/org/apache/ignite/internal/ducktest/tests/cellular_affinity_test/CellularTxStreamer.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.ducktest.tests.cellular_affinity_test;\n+\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import org.apache.ignite.IgniteCache;\n+import org.apache.ignite.cache.affinity.Affinity;\n+import org.apache.ignite.cluster.ClusterNode;\n+import org.apache.ignite.internal.ducktest.utils.IgniteAwareApplication;\n+\n+/**\n+ * Streams transactions to specified cell.\n+ */\n+public class CellularTxStreamer extends IgniteAwareApplication {\n+    /**\n+     * {@inheritDoc}\n+     */\n+    @Override public void run(JsonNode jsonNode) throws Exception {\n+        String cacheName = jsonNode.get(\"cacheName\").asText();\n+        int warmup = jsonNode.get(\"warmup\").asInt();\n+        String cell = jsonNode.get(\"cell\").asText();\n+        String attr = jsonNode.get(\"attr\").asText();\n+\n+        markInitialized();\n+\n+        waitForActivation();\n+\n+        IgniteCache<Integer, Integer> cache = ignite.getOrCreateCache(cacheName);\n+\n+        long[] max = new long[20];\n+\n+        Arrays.fill(max, -1);\n+\n+        int key = 10_000_000;", "originalCommit": "6bc686f3af44c0c90ca6efbaccf6cd5bf8006575", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc4MTAwOQ==", "url": "https://github.com/apache/ignite/pull/8232#discussion_r487781009", "bodyText": "Fixed", "author": "anton-vinogradov", "createdAt": "2020-09-14T09:38:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc0NTk4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc0NzM4Mg==", "url": "https://github.com/apache/ignite/pull/8232#discussion_r487747382", "bodyText": "Use PriorityQueue (binary heap) here", "author": "ivandasch", "createdAt": "2020-09-14T08:42:47Z", "path": "modules/ducktests/src/main/java/org/apache/ignite/internal/ducktest/tests/cellular_affinity_test/CellularTxStreamer.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.ducktest.tests.cellular_affinity_test;\n+\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import org.apache.ignite.IgniteCache;\n+import org.apache.ignite.cache.affinity.Affinity;\n+import org.apache.ignite.cluster.ClusterNode;\n+import org.apache.ignite.internal.ducktest.utils.IgniteAwareApplication;\n+\n+/**\n+ * Streams transactions to specified cell.\n+ */\n+public class CellularTxStreamer extends IgniteAwareApplication {\n+    /**\n+     * {@inheritDoc}\n+     */\n+    @Override public void run(JsonNode jsonNode) throws Exception {\n+        String cacheName = jsonNode.get(\"cacheName\").asText();\n+        int warmup = jsonNode.get(\"warmup\").asInt();\n+        String cell = jsonNode.get(\"cell\").asText();\n+        String attr = jsonNode.get(\"attr\").asText();\n+\n+        markInitialized();\n+\n+        waitForActivation();\n+\n+        IgniteCache<Integer, Integer> cache = ignite.getOrCreateCache(cacheName);\n+\n+        long[] max = new long[20];\n+\n+        Arrays.fill(max, -1);\n+\n+        int key = 10_000_000;\n+\n+        int cnt = 0;\n+\n+        long initTime = 0;\n+\n+        boolean record = false;\n+\n+        Affinity<Integer> aff = ignite.affinity(cacheName);\n+\n+        while (!terminated()) {\n+            key++;\n+\n+            Collection<ClusterNode> nodes = aff.mapKeyToPrimaryAndBackups(key);\n+\n+            Map<Object, Long> stat = nodes.stream().collect(\n+                Collectors.groupingBy(n -> n.attributes().get(attr), Collectors.counting()));\n+\n+            if (!stat.containsKey(cell))\n+                continue;\n+\n+            cnt++;\n+\n+            long start = System.currentTimeMillis();\n+\n+            cache.put(key, key);\n+\n+            long finish = System.currentTimeMillis();\n+\n+            long time = finish - start;\n+\n+            if (!record && cnt > warmup) {\n+                record = true;\n+\n+                initTime = System.currentTimeMillis();\n+\n+                log.info(\"Warmup finished\");\n+            }\n+\n+            if (record) {\n+                for (int i = 0; i < max.length; i++) {", "originalCommit": "6bc686f3af44c0c90ca6efbaccf6cd5bf8006575", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc3NzI1MA==", "url": "https://github.com/apache/ignite/pull/8232#discussion_r487777250", "bodyText": "Discussed privately, the array is ok.", "author": "anton-vinogradov", "createdAt": "2020-09-14T09:31:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc0NzM4Mg=="}], "type": "inlineReview"}, {"oid": "11eba85966002e9d60512e22b04e29e9b29a5eb1", "url": "https://github.com/apache/ignite/commit/11eba85966002e9d60512e22b04e29e9b29a5eb1", "message": "cellular switch", "committedDate": "2020-09-14T09:01:31Z", "type": "commit"}, {"oid": "ef4342f2c60e05881ad2518b2eb72b53a066f617", "url": "https://github.com/apache/ignite/commit/ef4342f2c60e05881ad2518b2eb72b53a066f617", "message": "cellular switch", "committedDate": "2020-09-14T09:29:56Z", "type": "commit"}, {"oid": "ec53ea598ef3fd50766899d81cfb72bf42ccfbe7", "url": "https://github.com/apache/ignite/commit/ec53ea598ef3fd50766899d81cfb72bf42ccfbe7", "message": "cellular switch", "committedDate": "2020-09-14T09:30:33Z", "type": "commit"}, {"oid": "8951cc6fcc5eb92f8aa1f0d8879ff0fe17d32710", "url": "https://github.com/apache/ignite/commit/8951cc6fcc5eb92f8aa1f0d8879ff0fe17d32710", "message": "cellular switch", "committedDate": "2020-09-14T09:38:14Z", "type": "commit"}]}