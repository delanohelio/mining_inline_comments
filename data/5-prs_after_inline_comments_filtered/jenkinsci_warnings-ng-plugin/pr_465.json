{"pr_number": 465, "pr_title": "Add integration test for autograder plugin", "pr_createdAt": "2020-05-06T17:45:59Z", "pr_url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/465", "timeline": [{"oid": "240af2fffdacef8cf3aab2b1cfdcfc34865c11e2", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/240af2fffdacef8cf3aab2b1cfdcfc34865c11e2", "message": "Bump echarts-api from 4.6.0-9 to 4.6.0-10\n\nBumps [echarts-api](https://github.com/jenkinsci/echarts-api-plugin) from 4.6.0-9 to 4.6.0-10.\n- [Release notes](https://github.com/jenkinsci/echarts-api-plugin/releases)\n- [Changelog](https://github.com/jenkinsci/echarts-api-plugin/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/jenkinsci/echarts-api-plugin/compare/echarts-api-4.6.0-9...echarts-api-4.6.0-10)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>", "committedDate": "2020-05-05T06:10:13Z", "type": "commit"}, {"oid": "36a027ad6b5eca25102bc6a72af1b6c36fbc2739", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/36a027ad6b5eca25102bc6a72af1b6c36fbc2739", "message": "Bump bootstrap4-api from 4.4.1-13 to 4.4.1-14\n\nBumps [bootstrap4-api](https://github.com/jenkinsci/bootstrap4-api-plugin) from 4.4.1-13 to 4.4.1-14.\n- [Release notes](https://github.com/jenkinsci/bootstrap4-api-plugin/releases)\n- [Changelog](https://github.com/jenkinsci/bootstrap4-api-plugin/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/jenkinsci/bootstrap4-api-plugin/compare/bootstrap4-api-4.4.1-13...bootstrap4-api-4.4.1-14)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>", "committedDate": "2020-05-06T06:15:37Z", "type": "commit"}, {"oid": "e084b8c07b008ffeea546d51dcdae22042068458", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/e084b8c07b008ffeea546d51dcdae22042068458", "message": "Add initial API integration test", "committedDate": "2020-05-06T17:44:01Z", "type": "commit"}, {"oid": "4a6217dfa004f78092a06e9ba15cdfca34cc55c5", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/4a6217dfa004f78092a06e9ba15cdfca34cc55c5", "message": "Merge pull request #462 from jenkinsci/dependabot/maven/io.jenkins.plugins-bootstrap4-api-4.4.1-14\n\nBump bootstrap4-api from 4.4.1-13 to 4.4.1-14", "committedDate": "2020-05-06T21:53:01Z", "type": "commit"}, {"oid": "fc5fe5a6068ee57c31b515a4753b9eb330820896", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/fc5fe5a6068ee57c31b515a4753b9eb330820896", "message": "Merge pull request #460 from jenkinsci/dependabot/maven/io.jenkins.plugins-echarts-api-4.6.0-10\n\nBump echarts-api from 4.6.0-9 to 4.6.0-10", "committedDate": "2020-05-06T21:53:51Z", "type": "commit"}, {"oid": "75e308cdd59358051457c4dd0e52be8ca859a304", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/75e308cdd59358051457c4dd0e52be8ca859a304", "message": "Check that action contains the expected score.", "committedDate": "2020-05-09T09:14:12Z", "type": "commit"}, {"oid": "60bae19240bb75e04997eb711b47590ea1f85ef0", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/60bae19240bb75e04997eb711b47590ea1f85ef0", "message": "Bump bootstrap4-api from 4.4.1-14 to 4.4.1-15\n\nBumps [bootstrap4-api](https://github.com/jenkinsci/bootstrap4-api-plugin) from 4.4.1-14 to 4.4.1-15.\n- [Release notes](https://github.com/jenkinsci/bootstrap4-api-plugin/releases)\n- [Changelog](https://github.com/jenkinsci/bootstrap4-api-plugin/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/jenkinsci/bootstrap4-api-plugin/compare/bootstrap4-api-4.4.1-14...bootstrap4-api-4.4.1-15)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>", "committedDate": "2020-05-11T06:28:20Z", "type": "commit"}, {"oid": "f5883c46ad3a92abd54c7a6f71cd5e866bc3ecae", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/f5883c46ad3a92abd54c7a6f71cd5e866bc3ecae", "message": "Merge pull request #468 from jenkinsci/dependabot/maven/io.jenkins.plugins-bootstrap4-api-4.4.1-15\n\nBump bootstrap4-api from 4.4.1-14 to 4.4.1-15", "committedDate": "2020-05-11T21:38:59Z", "type": "commit"}, {"oid": "027d219ebddae0e6d75f0896d10e8a1f9c35811e", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/027d219ebddae0e6d75f0896d10e8a1f9c35811e", "message": "Bump analysis-model-api from 8.0.1 to 8.1.0\n\nBumps [analysis-model-api](https://github.com/jenkinsci/analysis-model) from 8.0.1 to 8.1.0.\n- [Release notes](https://github.com/jenkinsci/analysis-model/releases)\n- [Changelog](https://github.com/jenkinsci/analysis-model/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/jenkinsci/analysis-model/compare/analysis-model-8.0.1...analysis-model-8.1.0)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>", "committedDate": "2020-05-12T06:14:40Z", "type": "commit"}, {"oid": "09f7afabf7a7e4ab069d7024e58049052ea11b1c", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/09f7afabf7a7e4ab069d7024e58049052ea11b1c", "message": "Bump version of analysis-model tests to 8.1.0.", "committedDate": "2020-05-12T07:17:07Z", "type": "commit"}, {"oid": "3e8a23f72f4c3b4d44994356c99d8b64ed0b9035", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/3e8a23f72f4c3b4d44994356c99d8b64ed0b9035", "message": "Fix links to warnings plugin native format", "committedDate": "2020-05-12T08:30:36Z", "type": "commit"}, {"oid": "72d76b0bafbb0b695edd38d1be03052b8f523945", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/72d76b0bafbb0b695edd38d1be03052b8f523945", "message": "Merge pull request #470 from whut/patch-1\n\nFix links to warnings plugin native format", "committedDate": "2020-05-12T17:53:07Z", "type": "commit"}, {"oid": "304b181b322f3dfd73ca653f2b5f282b838c9acb", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/304b181b322f3dfd73ca653f2b5f282b838c9acb", "message": "Fix source code links.\n\nFollowup to #470.", "committedDate": "2020-05-12T17:57:07Z", "type": "commit"}, {"oid": "8b7daccfb88e7334a13061acf68b61dcf9d82143", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/8b7daccfb88e7334a13061acf68b61dcf9d82143", "message": "Merge pull request #471 from jenkinsci/links\n\nFix source code links", "committedDate": "2020-05-12T17:58:21Z", "type": "commit"}, {"oid": "d385f03127a5b73c292f685b8c6c37dbbf71d798", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/d385f03127a5b73c292f685b8c6c37dbbf71d798", "message": "Merge pull request #469 from jenkinsci/dependabot/maven/io.jenkins.plugins-analysis-model-api-8.1.0\n\nBump analysis-model-api from 8.0.1 to 8.1.0", "committedDate": "2020-05-12T17:58:38Z", "type": "commit"}, {"oid": "44522d3d191bd9d2e24784557538dd86ef237e42", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/44522d3d191bd9d2e24784557538dd86ef237e42", "message": "Fix plugin path.", "committedDate": "2020-05-12T18:02:22Z", "type": "commit"}, {"oid": "06c0833d78fecf80c3458ee1c5f4ad029dbcda87", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/06c0833d78fecf80c3458ee1c5f4ad029dbcda87", "message": "Add skipping test", "committedDate": "2020-05-13T19:52:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM0MDczOQ==", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/465#discussion_r428340739", "bodyText": "Da wird der Wert von vorher wieder \u00fcberschrieben?", "author": "uhafner", "createdAt": "2020-05-20T22:20:44Z", "path": "plugin/src/test/java/io/jenkins/plugins/analysis/warnings/plugins/AutogradingPluginITest.java", "diffHunk": "@@ -0,0 +1,111 @@\n+package io.jenkins.plugins.analysis.warnings.plugins;\n+\n+import java.util.List;\n+\n+import org.junit.Test;\n+\n+import hudson.model.FreeStyleProject;\n+import hudson.model.Run;\n+\n+import io.jenkins.plugins.analysis.core.steps.IssuesRecorder;\n+import io.jenkins.plugins.analysis.core.testutil.IntegrationTestWithJenkinsPerSuite;\n+import io.jenkins.plugins.analysis.warnings.Cpd;\n+import io.jenkins.plugins.analysis.warnings.Java;\n+import io.jenkins.plugins.analysis.warnings.Pmd;\n+import io.jenkins.plugins.analysis.warnings.SpotBugs;\n+import io.jenkins.plugins.analysis.warnings.checkstyle.CheckStyle;\n+import io.jenkins.plugins.grading.AggregatedScore;\n+import io.jenkins.plugins.grading.AutoGrader;\n+import io.jenkins.plugins.grading.AutoGradingBuildAction;\n+\n+import static io.jenkins.plugins.analysis.core.assertions.Assertions.*;\n+\n+/**\n+ * This class tests the compatibility between the warnings-ng and the autograding plugin.\n+ *\n+ * @author Lion Kosiuk\n+ */\n+public class AutogradingPluginITest extends IntegrationTestWithJenkinsPerSuite {\n+\n+    private static final String AUTOGRADER_RESULT = \"{\\\"analysis\\\":{\\\"maxScore\\\":100,\\\"errorImpact\\\":-10,\\\"highImpact\\\":-5,\\\"normalImpact\\\":-2,\\\"lowImpact\\\":-1}}\";\n+\n+    /**\n+     * Ensures that the autographing plugin outputs the expected score after passing the checks.\n+     * Used tools: checkstyle, spotbugs, cpd, pmd\n+     */\n+    @Test\n+    public void checksCorrectGradingWithSeveralTools() {\n+        FreeStyleProject project = createJavaWarningsFreestyleProject(\"checkstyle.xml\", \"spotbugs.xml\", \"cpd.xml\", \"pmd.xml\");\n+\n+        IssuesRecorder recorder = new IssuesRecorder();\n+\n+        CheckStyle checkStyle = new CheckStyle();\n+        checkStyle.setPattern(\"**/*checkstyle*\");\n+\n+        SpotBugs spotBugs = new SpotBugs();\n+        spotBugs.setPattern(\"**/spotbugs*\");\n+\n+        Cpd cpd = new Cpd();\n+        cpd.setPattern(\"**/cpd*\");\n+\n+        Pmd pmd = new Pmd();\n+        pmd.setPattern(\"**/pmd\");\n+\n+        recorder.setTools(checkStyle);\n+        recorder.setTools(spotBugs);", "originalCommit": "06c0833d78fecf80c3458ee1c5f4ad029dbcda87", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM0MTc2Mw==", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/465#discussion_r428341763", "bodyText": "Hier w\u00e4re noch sch\u00f6n, die jeweiligen Results zu holen score.getAnalysisScores(), da sollten ja 3 drin sein. Sonst ist unklar woher die -2 kommt.", "author": "uhafner", "createdAt": "2020-05-20T22:23:30Z", "path": "plugin/src/test/java/io/jenkins/plugins/analysis/warnings/plugins/AutogradingPluginITest.java", "diffHunk": "@@ -0,0 +1,111 @@\n+package io.jenkins.plugins.analysis.warnings.plugins;\n+\n+import java.util.List;\n+\n+import org.junit.Test;\n+\n+import hudson.model.FreeStyleProject;\n+import hudson.model.Run;\n+\n+import io.jenkins.plugins.analysis.core.steps.IssuesRecorder;\n+import io.jenkins.plugins.analysis.core.testutil.IntegrationTestWithJenkinsPerSuite;\n+import io.jenkins.plugins.analysis.warnings.Cpd;\n+import io.jenkins.plugins.analysis.warnings.Java;\n+import io.jenkins.plugins.analysis.warnings.Pmd;\n+import io.jenkins.plugins.analysis.warnings.SpotBugs;\n+import io.jenkins.plugins.analysis.warnings.checkstyle.CheckStyle;\n+import io.jenkins.plugins.grading.AggregatedScore;\n+import io.jenkins.plugins.grading.AutoGrader;\n+import io.jenkins.plugins.grading.AutoGradingBuildAction;\n+\n+import static io.jenkins.plugins.analysis.core.assertions.Assertions.*;\n+\n+/**\n+ * This class tests the compatibility between the warnings-ng and the autograding plugin.\n+ *\n+ * @author Lion Kosiuk\n+ */\n+public class AutogradingPluginITest extends IntegrationTestWithJenkinsPerSuite {\n+\n+    private static final String AUTOGRADER_RESULT = \"{\\\"analysis\\\":{\\\"maxScore\\\":100,\\\"errorImpact\\\":-10,\\\"highImpact\\\":-5,\\\"normalImpact\\\":-2,\\\"lowImpact\\\":-1}}\";\n+\n+    /**\n+     * Ensures that the autographing plugin outputs the expected score after passing the checks.\n+     * Used tools: checkstyle, spotbugs, cpd, pmd\n+     */\n+    @Test\n+    public void checksCorrectGradingWithSeveralTools() {\n+        FreeStyleProject project = createJavaWarningsFreestyleProject(\"checkstyle.xml\", \"spotbugs.xml\", \"cpd.xml\", \"pmd.xml\");\n+\n+        IssuesRecorder recorder = new IssuesRecorder();\n+\n+        CheckStyle checkStyle = new CheckStyle();\n+        checkStyle.setPattern(\"**/*checkstyle*\");\n+\n+        SpotBugs spotBugs = new SpotBugs();\n+        spotBugs.setPattern(\"**/spotbugs*\");\n+\n+        Cpd cpd = new Cpd();\n+        cpd.setPattern(\"**/cpd*\");\n+\n+        Pmd pmd = new Pmd();\n+        pmd.setPattern(\"**/pmd\");\n+\n+        recorder.setTools(checkStyle);\n+        recorder.setTools(spotBugs);\n+        recorder.setTools(cpd);\n+\n+        project.getPublishersList().add(recorder);\n+        project.getPublishersList().add(new AutoGrader(AUTOGRADER_RESULT));\n+\n+        Run<?, ?> baseline = buildSuccessfully(project);\n+\n+        List<AutoGradingBuildAction> actions = baseline.getActions(AutoGradingBuildAction.class);\n+        assertThat(actions).hasSize(1);\n+        AggregatedScore score = actions.get(0).getResult();\n+        assertThat(score.getAchieved()).isEqualTo(98);", "originalCommit": "06c0833d78fecf80c3458ee1c5f4ad029dbcda87", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM0MTk4NQ==", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/465#discussion_r428341985", "bodyText": "Der Test ist nur im Autograding relevant und kann entfernt werden.", "author": "uhafner", "createdAt": "2020-05-20T22:24:08Z", "path": "plugin/src/test/java/io/jenkins/plugins/analysis/warnings/plugins/AutogradingPluginITest.java", "diffHunk": "@@ -0,0 +1,111 @@\n+package io.jenkins.plugins.analysis.warnings.plugins;\n+\n+import java.util.List;\n+\n+import org.junit.Test;\n+\n+import hudson.model.FreeStyleProject;\n+import hudson.model.Run;\n+\n+import io.jenkins.plugins.analysis.core.steps.IssuesRecorder;\n+import io.jenkins.plugins.analysis.core.testutil.IntegrationTestWithJenkinsPerSuite;\n+import io.jenkins.plugins.analysis.warnings.Cpd;\n+import io.jenkins.plugins.analysis.warnings.Java;\n+import io.jenkins.plugins.analysis.warnings.Pmd;\n+import io.jenkins.plugins.analysis.warnings.SpotBugs;\n+import io.jenkins.plugins.analysis.warnings.checkstyle.CheckStyle;\n+import io.jenkins.plugins.grading.AggregatedScore;\n+import io.jenkins.plugins.grading.AutoGrader;\n+import io.jenkins.plugins.grading.AutoGradingBuildAction;\n+\n+import static io.jenkins.plugins.analysis.core.assertions.Assertions.*;\n+\n+/**\n+ * This class tests the compatibility between the warnings-ng and the autograding plugin.\n+ *\n+ * @author Lion Kosiuk\n+ */\n+public class AutogradingPluginITest extends IntegrationTestWithJenkinsPerSuite {\n+\n+    private static final String AUTOGRADER_RESULT = \"{\\\"analysis\\\":{\\\"maxScore\\\":100,\\\"errorImpact\\\":-10,\\\"highImpact\\\":-5,\\\"normalImpact\\\":-2,\\\"lowImpact\\\":-1}}\";\n+\n+    /**\n+     * Ensures that the autographing plugin outputs the expected score after passing the checks.\n+     * Used tools: checkstyle, spotbugs, cpd, pmd\n+     */\n+    @Test\n+    public void checksCorrectGradingWithSeveralTools() {\n+        FreeStyleProject project = createJavaWarningsFreestyleProject(\"checkstyle.xml\", \"spotbugs.xml\", \"cpd.xml\", \"pmd.xml\");\n+\n+        IssuesRecorder recorder = new IssuesRecorder();\n+\n+        CheckStyle checkStyle = new CheckStyle();\n+        checkStyle.setPattern(\"**/*checkstyle*\");\n+\n+        SpotBugs spotBugs = new SpotBugs();\n+        spotBugs.setPattern(\"**/spotbugs*\");\n+\n+        Cpd cpd = new Cpd();\n+        cpd.setPattern(\"**/cpd*\");\n+\n+        Pmd pmd = new Pmd();\n+        pmd.setPattern(\"**/pmd\");\n+\n+        recorder.setTools(checkStyle);\n+        recorder.setTools(spotBugs);\n+        recorder.setTools(cpd);\n+\n+        project.getPublishersList().add(recorder);\n+        project.getPublishersList().add(new AutoGrader(AUTOGRADER_RESULT));\n+\n+        Run<?, ?> baseline = buildSuccessfully(project);\n+\n+        List<AutoGradingBuildAction> actions = baseline.getActions(AutoGradingBuildAction.class);\n+        assertThat(actions).hasSize(1);\n+        AggregatedScore score = actions.get(0).getResult();\n+        assertThat(score.getAchieved()).isEqualTo(98);\n+    }\n+\n+    /**\n+     * Makes sure that the autograding plugin interrupts the grading if the configuration is empty.\n+     */\n+    @Test\n+    public void interruptsGradingDueToEmptyConfiguration() {", "originalCommit": "06c0833d78fecf80c3458ee1c5f4ad029dbcda87", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6b482b507c2676efefb850e74d57487208bc4eb6", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/6b482b507c2676efefb850e74d57487208bc4eb6", "message": "Merge branch 'autogradingApiITest' of github.com:kosiuk/warnings-ng-plugin", "committedDate": "2020-05-22T07:26:34Z", "type": "commit"}, {"oid": "a842d618cd24446de3ccdcd70d005c0170ed5775", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/a842d618cd24446de3ccdcd70d005c0170ed5775", "message": "Evaluate all AnalysisScores", "committedDate": "2020-05-22T07:56:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY2NjU4NA==", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/465#discussion_r429666584", "bodyText": "K\u00f6nnen Sie den Teil noch raus l\u00f6schen, das verwirrt nur. Dadurch sind es ja 5 Analysis Ergebnisse, aus dem JavaDoc und dem Code oben erwartet man aber nur 4.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Java java = new Java();\n          \n          \n            \n                    for(String file: files) {\n          \n          \n            \n                        java.setPattern(\"**/*\" + file + \"*\");\n          \n          \n            \n                    }\n          \n          \n            \n                    enableWarnings(project, java);", "author": "uhafner", "createdAt": "2020-05-24T19:18:47Z", "path": "plugin/src/test/java/io/jenkins/plugins/analysis/warnings/plugins/AutogradingPluginITest.java", "diffHunk": "@@ -0,0 +1,92 @@\n+package io.jenkins.plugins.analysis.warnings.plugins;\n+\n+import java.util.List;\n+\n+import org.junit.Test;\n+\n+import hudson.model.FreeStyleProject;\n+import hudson.model.Run;\n+\n+import io.jenkins.plugins.analysis.core.steps.IssuesRecorder;\n+import io.jenkins.plugins.analysis.core.testutil.IntegrationTestWithJenkinsPerSuite;\n+import io.jenkins.plugins.analysis.warnings.Cpd;\n+import io.jenkins.plugins.analysis.warnings.Java;\n+import io.jenkins.plugins.analysis.warnings.Pmd;\n+import io.jenkins.plugins.analysis.warnings.SpotBugs;\n+import io.jenkins.plugins.analysis.warnings.checkstyle.CheckStyle;\n+import io.jenkins.plugins.grading.AggregatedScore;\n+import io.jenkins.plugins.grading.AnalysisScore;\n+import io.jenkins.plugins.grading.AutoGrader;\n+import io.jenkins.plugins.grading.AutoGradingBuildAction;\n+\n+import static io.jenkins.plugins.analysis.core.assertions.Assertions.*;\n+\n+/**\n+ * This class tests the compatibility between the warnings-ng and the autograding plugin.\n+ *\n+ * @author Lion Kosiuk\n+ */\n+public class AutogradingPluginITest extends IntegrationTestWithJenkinsPerSuite {\n+\n+    private static final String AUTOGRADER_RESULT = \"{\\\"analysis\\\":{\\\"maxScore\\\":100,\\\"errorImpact\\\":-10,\\\"highImpact\\\":-5,\\\"normalImpact\\\":-2,\\\"lowImpact\\\":-1}}\";\n+\n+    /**\n+     * Ensures that the autographing plugin outputs the expected score after passing the checks.\n+     * Used tools: checkstyle, spotbugs, cpd, pmd\n+     */\n+    @Test\n+    public void checksCorrectGradingWithSeveralTools() {\n+        FreeStyleProject project = createJavaWarningsFreestyleProject(\"checkstyle.xml\", \"spotbugs.xml\", \"cpd.xml\", \"pmd.xml\");\n+\n+        IssuesRecorder recorder = new IssuesRecorder();\n+\n+        CheckStyle checkStyle = new CheckStyle();\n+        checkStyle.setPattern(\"**/*checkstyle*\");\n+\n+        SpotBugs spotBugs = new SpotBugs();\n+        spotBugs.setPattern(\"**/spotbugs*\");\n+\n+        Cpd cpd = new Cpd();\n+        cpd.setPattern(\"**/cpd*\");\n+\n+        Pmd pmd = new Pmd();\n+        pmd.setPattern(\"**/pmd*\");\n+\n+        recorder.setTools(checkStyle, spotBugs, cpd, pmd);\n+\n+        project.getPublishersList().add(recorder);\n+        project.getPublishersList().add(new AutoGrader(AUTOGRADER_RESULT));\n+\n+        Run<?, ?> baseline = buildSuccessfully(project);\n+\n+        List<AutoGradingBuildAction> actions = baseline.getActions(AutoGradingBuildAction.class);\n+        assertThat(actions).hasSize(1);\n+        AggregatedScore score = actions.get(0).getResult();\n+        List<AnalysisScore> analysisScore = score.getAnalysisScores();\n+        assertThat(score.getAchieved()).isEqualTo(22);\n+        assertThat(analysisScore).hasSize(5);\n+        assertThat(analysisScore.get(0).getTotalImpact()).isEqualTo(0);\n+        assertThat(analysisScore.get(1).getTotalImpact()).isEqualTo(-60);\n+        assertThat(analysisScore.get(2).getTotalImpact()).isEqualTo(-4);\n+        assertThat(analysisScore.get(3).getTotalImpact()).isEqualTo(-2);\n+        assertThat(analysisScore.get(4).getTotalImpact()).isEqualTo(-12);\n+    }\n+\n+    /**\n+     * Create a Freestyle Project with enabled Java warnings.\n+     *\n+     * @param files\n+     *         The files to be imported into the Freestyle project.\n+     *\n+     * @return The created Freestyle Project.\n+     */\n+    private FreeStyleProject createJavaWarningsFreestyleProject(final String... files) {\n+        FreeStyleProject project = createFreeStyleProjectWithWorkspaceFiles(files);\n+        Java java = new Java();\n+        for(String file: files) {\n+            java.setPattern(\"**/*\" + file + \"*\");\n+        }\n+        enableWarnings(project, java);", "originalCommit": "a842d618cd24446de3ccdcd70d005c0170ed5775", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY2NjU5NQ==", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/465#discussion_r429666595", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(analysisScore).hasSize(5);\n          \n          \n            \n                    assertThat(analysisScore).hasSize(4);", "author": "uhafner", "createdAt": "2020-05-24T19:18:59Z", "path": "plugin/src/test/java/io/jenkins/plugins/analysis/warnings/plugins/AutogradingPluginITest.java", "diffHunk": "@@ -0,0 +1,92 @@\n+package io.jenkins.plugins.analysis.warnings.plugins;\n+\n+import java.util.List;\n+\n+import org.junit.Test;\n+\n+import hudson.model.FreeStyleProject;\n+import hudson.model.Run;\n+\n+import io.jenkins.plugins.analysis.core.steps.IssuesRecorder;\n+import io.jenkins.plugins.analysis.core.testutil.IntegrationTestWithJenkinsPerSuite;\n+import io.jenkins.plugins.analysis.warnings.Cpd;\n+import io.jenkins.plugins.analysis.warnings.Java;\n+import io.jenkins.plugins.analysis.warnings.Pmd;\n+import io.jenkins.plugins.analysis.warnings.SpotBugs;\n+import io.jenkins.plugins.analysis.warnings.checkstyle.CheckStyle;\n+import io.jenkins.plugins.grading.AggregatedScore;\n+import io.jenkins.plugins.grading.AnalysisScore;\n+import io.jenkins.plugins.grading.AutoGrader;\n+import io.jenkins.plugins.grading.AutoGradingBuildAction;\n+\n+import static io.jenkins.plugins.analysis.core.assertions.Assertions.*;\n+\n+/**\n+ * This class tests the compatibility between the warnings-ng and the autograding plugin.\n+ *\n+ * @author Lion Kosiuk\n+ */\n+public class AutogradingPluginITest extends IntegrationTestWithJenkinsPerSuite {\n+\n+    private static final String AUTOGRADER_RESULT = \"{\\\"analysis\\\":{\\\"maxScore\\\":100,\\\"errorImpact\\\":-10,\\\"highImpact\\\":-5,\\\"normalImpact\\\":-2,\\\"lowImpact\\\":-1}}\";\n+\n+    /**\n+     * Ensures that the autographing plugin outputs the expected score after passing the checks.\n+     * Used tools: checkstyle, spotbugs, cpd, pmd\n+     */\n+    @Test\n+    public void checksCorrectGradingWithSeveralTools() {\n+        FreeStyleProject project = createJavaWarningsFreestyleProject(\"checkstyle.xml\", \"spotbugs.xml\", \"cpd.xml\", \"pmd.xml\");\n+\n+        IssuesRecorder recorder = new IssuesRecorder();\n+\n+        CheckStyle checkStyle = new CheckStyle();\n+        checkStyle.setPattern(\"**/*checkstyle*\");\n+\n+        SpotBugs spotBugs = new SpotBugs();\n+        spotBugs.setPattern(\"**/spotbugs*\");\n+\n+        Cpd cpd = new Cpd();\n+        cpd.setPattern(\"**/cpd*\");\n+\n+        Pmd pmd = new Pmd();\n+        pmd.setPattern(\"**/pmd*\");\n+\n+        recorder.setTools(checkStyle, spotBugs, cpd, pmd);\n+\n+        project.getPublishersList().add(recorder);\n+        project.getPublishersList().add(new AutoGrader(AUTOGRADER_RESULT));\n+\n+        Run<?, ?> baseline = buildSuccessfully(project);\n+\n+        List<AutoGradingBuildAction> actions = baseline.getActions(AutoGradingBuildAction.class);\n+        assertThat(actions).hasSize(1);\n+        AggregatedScore score = actions.get(0).getResult();\n+        List<AnalysisScore> analysisScore = score.getAnalysisScores();\n+        assertThat(score.getAchieved()).isEqualTo(22);\n+        assertThat(analysisScore).hasSize(5);", "originalCommit": "a842d618cd24446de3ccdcd70d005c0170ed5775", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY2NjY4MQ==", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/465#discussion_r429666681", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(analysisScore.get(0).getTotalImpact()).isEqualTo(0);", "author": "uhafner", "createdAt": "2020-05-24T19:20:22Z", "path": "plugin/src/test/java/io/jenkins/plugins/analysis/warnings/plugins/AutogradingPluginITest.java", "diffHunk": "@@ -0,0 +1,92 @@\n+package io.jenkins.plugins.analysis.warnings.plugins;\n+\n+import java.util.List;\n+\n+import org.junit.Test;\n+\n+import hudson.model.FreeStyleProject;\n+import hudson.model.Run;\n+\n+import io.jenkins.plugins.analysis.core.steps.IssuesRecorder;\n+import io.jenkins.plugins.analysis.core.testutil.IntegrationTestWithJenkinsPerSuite;\n+import io.jenkins.plugins.analysis.warnings.Cpd;\n+import io.jenkins.plugins.analysis.warnings.Java;\n+import io.jenkins.plugins.analysis.warnings.Pmd;\n+import io.jenkins.plugins.analysis.warnings.SpotBugs;\n+import io.jenkins.plugins.analysis.warnings.checkstyle.CheckStyle;\n+import io.jenkins.plugins.grading.AggregatedScore;\n+import io.jenkins.plugins.grading.AnalysisScore;\n+import io.jenkins.plugins.grading.AutoGrader;\n+import io.jenkins.plugins.grading.AutoGradingBuildAction;\n+\n+import static io.jenkins.plugins.analysis.core.assertions.Assertions.*;\n+\n+/**\n+ * This class tests the compatibility between the warnings-ng and the autograding plugin.\n+ *\n+ * @author Lion Kosiuk\n+ */\n+public class AutogradingPluginITest extends IntegrationTestWithJenkinsPerSuite {\n+\n+    private static final String AUTOGRADER_RESULT = \"{\\\"analysis\\\":{\\\"maxScore\\\":100,\\\"errorImpact\\\":-10,\\\"highImpact\\\":-5,\\\"normalImpact\\\":-2,\\\"lowImpact\\\":-1}}\";\n+\n+    /**\n+     * Ensures that the autographing plugin outputs the expected score after passing the checks.\n+     * Used tools: checkstyle, spotbugs, cpd, pmd\n+     */\n+    @Test\n+    public void checksCorrectGradingWithSeveralTools() {\n+        FreeStyleProject project = createJavaWarningsFreestyleProject(\"checkstyle.xml\", \"spotbugs.xml\", \"cpd.xml\", \"pmd.xml\");\n+\n+        IssuesRecorder recorder = new IssuesRecorder();\n+\n+        CheckStyle checkStyle = new CheckStyle();\n+        checkStyle.setPattern(\"**/*checkstyle*\");\n+\n+        SpotBugs spotBugs = new SpotBugs();\n+        spotBugs.setPattern(\"**/spotbugs*\");\n+\n+        Cpd cpd = new Cpd();\n+        cpd.setPattern(\"**/cpd*\");\n+\n+        Pmd pmd = new Pmd();\n+        pmd.setPattern(\"**/pmd*\");\n+\n+        recorder.setTools(checkStyle, spotBugs, cpd, pmd);\n+\n+        project.getPublishersList().add(recorder);\n+        project.getPublishersList().add(new AutoGrader(AUTOGRADER_RESULT));\n+\n+        Run<?, ?> baseline = buildSuccessfully(project);\n+\n+        List<AutoGradingBuildAction> actions = baseline.getActions(AutoGradingBuildAction.class);\n+        assertThat(actions).hasSize(1);\n+        AggregatedScore score = actions.get(0).getResult();\n+        List<AnalysisScore> analysisScore = score.getAnalysisScores();\n+        assertThat(score.getAchieved()).isEqualTo(22);\n+        assertThat(analysisScore).hasSize(5);\n+        assertThat(analysisScore.get(0).getTotalImpact()).isEqualTo(0);", "originalCommit": "a842d618cd24446de3ccdcd70d005c0170ed5775", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY2NjY5Ng==", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/465#discussion_r429666696", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(analysisScore.get(1).getTotalImpact()).isEqualTo(-60);\n          \n          \n            \n                    assertThat(analysisScore.get(0).getTotalImpact()).isEqualTo(-60);\n          \n          \n            \n                    assertThat(analysisScore.get(0).getId()).isEqualTo(\"checkstyle\");", "author": "uhafner", "createdAt": "2020-05-24T19:20:35Z", "path": "plugin/src/test/java/io/jenkins/plugins/analysis/warnings/plugins/AutogradingPluginITest.java", "diffHunk": "@@ -0,0 +1,92 @@\n+package io.jenkins.plugins.analysis.warnings.plugins;\n+\n+import java.util.List;\n+\n+import org.junit.Test;\n+\n+import hudson.model.FreeStyleProject;\n+import hudson.model.Run;\n+\n+import io.jenkins.plugins.analysis.core.steps.IssuesRecorder;\n+import io.jenkins.plugins.analysis.core.testutil.IntegrationTestWithJenkinsPerSuite;\n+import io.jenkins.plugins.analysis.warnings.Cpd;\n+import io.jenkins.plugins.analysis.warnings.Java;\n+import io.jenkins.plugins.analysis.warnings.Pmd;\n+import io.jenkins.plugins.analysis.warnings.SpotBugs;\n+import io.jenkins.plugins.analysis.warnings.checkstyle.CheckStyle;\n+import io.jenkins.plugins.grading.AggregatedScore;\n+import io.jenkins.plugins.grading.AnalysisScore;\n+import io.jenkins.plugins.grading.AutoGrader;\n+import io.jenkins.plugins.grading.AutoGradingBuildAction;\n+\n+import static io.jenkins.plugins.analysis.core.assertions.Assertions.*;\n+\n+/**\n+ * This class tests the compatibility between the warnings-ng and the autograding plugin.\n+ *\n+ * @author Lion Kosiuk\n+ */\n+public class AutogradingPluginITest extends IntegrationTestWithJenkinsPerSuite {\n+\n+    private static final String AUTOGRADER_RESULT = \"{\\\"analysis\\\":{\\\"maxScore\\\":100,\\\"errorImpact\\\":-10,\\\"highImpact\\\":-5,\\\"normalImpact\\\":-2,\\\"lowImpact\\\":-1}}\";\n+\n+    /**\n+     * Ensures that the autographing plugin outputs the expected score after passing the checks.\n+     * Used tools: checkstyle, spotbugs, cpd, pmd\n+     */\n+    @Test\n+    public void checksCorrectGradingWithSeveralTools() {\n+        FreeStyleProject project = createJavaWarningsFreestyleProject(\"checkstyle.xml\", \"spotbugs.xml\", \"cpd.xml\", \"pmd.xml\");\n+\n+        IssuesRecorder recorder = new IssuesRecorder();\n+\n+        CheckStyle checkStyle = new CheckStyle();\n+        checkStyle.setPattern(\"**/*checkstyle*\");\n+\n+        SpotBugs spotBugs = new SpotBugs();\n+        spotBugs.setPattern(\"**/spotbugs*\");\n+\n+        Cpd cpd = new Cpd();\n+        cpd.setPattern(\"**/cpd*\");\n+\n+        Pmd pmd = new Pmd();\n+        pmd.setPattern(\"**/pmd*\");\n+\n+        recorder.setTools(checkStyle, spotBugs, cpd, pmd);\n+\n+        project.getPublishersList().add(recorder);\n+        project.getPublishersList().add(new AutoGrader(AUTOGRADER_RESULT));\n+\n+        Run<?, ?> baseline = buildSuccessfully(project);\n+\n+        List<AutoGradingBuildAction> actions = baseline.getActions(AutoGradingBuildAction.class);\n+        assertThat(actions).hasSize(1);\n+        AggregatedScore score = actions.get(0).getResult();\n+        List<AnalysisScore> analysisScore = score.getAnalysisScores();\n+        assertThat(score.getAchieved()).isEqualTo(22);\n+        assertThat(analysisScore).hasSize(5);\n+        assertThat(analysisScore.get(0).getTotalImpact()).isEqualTo(0);\n+        assertThat(analysisScore.get(1).getTotalImpact()).isEqualTo(-60);", "originalCommit": "a842d618cd24446de3ccdcd70d005c0170ed5775", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "948be3643f2a22d494e72cfddc02808eabd17163", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/948be3643f2a22d494e72cfddc02808eabd17163", "message": "Removing java from tests", "committedDate": "2020-05-24T19:32:28Z", "type": "commit"}]}