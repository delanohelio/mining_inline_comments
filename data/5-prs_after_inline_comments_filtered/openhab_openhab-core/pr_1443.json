{"pr_number": 1443, "pr_title": "Migrate to JAX-RS Whiteboard", "pr_createdAt": "2020-04-24T06:55:12Z", "pr_url": "https://github.com/openhab/openhab-core/pull/1443", "timeline": [{"oid": "884b5ac0905cb2977a8ba009d40b36d6f6bf7fa1", "url": "https://github.com/openhab/openhab-core/commit/884b5ac0905cb2977a8ba009d40b36d6f6bf7fa1", "message": "Migrate to JAX-RS Whiteboard\n\nThe upstream JAX-RS Whiteboard feature is not used because the version ranges currently do not work with Karaf on Windows.\nSee: https://issues.apache.org/jira/browse/KARAF-6536\n\nAlso-by: Markus Rathgeb <maggu2810@gmail.com>\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-04-26T12:39:57Z", "type": "forcePushed"}, {"oid": "59dfcaacfc0871a3e4ff222cac7c15f1f8352ceb", "url": "https://github.com/openhab/openhab-core/commit/59dfcaacfc0871a3e4ff222cac7c15f1f8352ceb", "message": "Migrate SSE item states update logic\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-04-28T23:22:18Z", "type": "forcePushed"}, {"oid": "2fc9725bfd5b70dff989388eb85d2130716cf960", "url": "https://github.com/openhab/openhab-core/commit/2fc9725bfd5b70dff989388eb85d2130716cf960", "message": "Migrate SSE item states update logic\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-04-28T23:32:58Z", "type": "forcePushed"}, {"oid": "e63499dc52b64f216219317c49113756d26e4c60", "url": "https://github.com/openhab/openhab-core/commit/e63499dc52b64f216219317c49113756d26e4c60", "message": "Migrate SSE item states update logic\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-04-29T07:16:10Z", "type": "forcePushed"}, {"oid": "d1972ebbc82b62a371cc502380c8902008ae99a1", "url": "https://github.com/openhab/openhab-core/commit/d1972ebbc82b62a371cc502380c8902008ae99a1", "message": "Migrate SSE item states update logic\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-04-29T07:49:19Z", "type": "forcePushed"}, {"oid": "4a3f5aa85dc8bb610ae8859131448401c1f346d6", "url": "https://github.com/openhab/openhab-core/commit/4a3f5aa85dc8bb610ae8859131448401c1f346d6", "message": "Resolve itest runbundles\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-04-29T21:48:48Z", "type": "forcePushed"}, {"oid": "0a0941e91a5637786cd154a90ea1bd8aa17cdcd1", "url": "https://github.com/openhab/openhab-core/commit/0a0941e91a5637786cd154a90ea1bd8aa17cdcd1", "message": "Resolve itest runbundles\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-04-29T22:21:37Z", "type": "forcePushed"}, {"oid": "0a0941e91a5637786cd154a90ea1bd8aa17cdcd1", "url": "https://github.com/openhab/openhab-core/commit/0a0941e91a5637786cd154a90ea1bd8aa17cdcd1", "message": "Resolve itest runbundles\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-04-29T22:21:37Z", "type": "forcePushed"}, {"oid": "a67524479fb4e0ec6436f51ad9a394d60fdb2c65", "url": "https://github.com/openhab/openhab-core/commit/a67524479fb4e0ec6436f51ad9a394d60fdb2c65", "message": "Resolve itest runbundles\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-04-30T11:01:23Z", "type": "forcePushed"}, {"oid": "c1f54ab8975d7588de0dd365c876afae1e7d16d0", "url": "https://github.com/openhab/openhab-core/commit/c1f54ab8975d7588de0dd365c876afae1e7d16d0", "message": "Resolve itest runbundles\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-04-30T13:18:12Z", "type": "forcePushed"}, {"oid": "77e617b5d4daa3e744e9721b0f9690d82c8c371a", "url": "https://github.com/openhab/openhab-core/commit/77e617b5d4daa3e744e9721b0f9690d82c8c371a", "message": "Simplify Path annotations\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-05-03T07:47:50Z", "type": "forcePushed"}, {"oid": "009db5438c5df9d604932126f4429904af907028", "url": "https://github.com/openhab/openhab-core/commit/009db5438c5df9d604932126f4429904af907028", "message": "Migrate to JAX-RS Whiteboard\n\nThe upstream JAX-RS Whiteboard feature is not used because the version ranges currently do not work with Karaf on Windows.\nSee: https://issues.apache.org/jira/browse/KARAF-6536\n\nAlso-by: Markus Rathgeb <maggu2810@gmail.com>\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-05-04T20:01:14Z", "type": "commit"}, {"oid": "5e4be3cb99fa0979996a817cba03f2a219681dbe", "url": "https://github.com/openhab/openhab-core/commit/5e4be3cb99fa0979996a817cba03f2a219681dbe", "message": "Migrate SSE item states update logic\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-05-04T20:01:15Z", "type": "commit"}, {"oid": "bd9a624405c51874cd75ec76dc9ece7a4c786912", "url": "https://github.com/openhab/openhab-core/commit/bd9a624405c51874cd75ec76dc9ece7a4c786912", "message": "Fix feature verification\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-05-04T20:01:15Z", "type": "commit"}, {"oid": "166363e371a8101392e73cf6d1a982ff59a987d8", "url": "https://github.com/openhab/openhab-core/commit/166363e371a8101392e73cf6d1a982ff59a987d8", "message": "Resolve itest runbundles\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-05-04T20:01:15Z", "type": "commit"}, {"oid": "2b0d22e8204d95283729203063dc6ba4d18bb4fa", "url": "https://github.com/openhab/openhab-core/commit/2b0d22e8204d95283729203063dc6ba4d18bb4fa", "message": "Upgrade Jackson and Swagger TP feature dependencies\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-05-04T20:01:16Z", "type": "commit"}, {"oid": "13e8940b00b471dcad286e2d2c48b19e7c21b836", "url": "https://github.com/openhab/openhab-core/commit/13e8940b00b471dcad286e2d2c48b19e7c21b836", "message": "Add missing Swagger annotations\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-05-04T20:01:16Z", "type": "commit"}, {"oid": "8c1cdacb6772e0e14d59b7a061bfc7d6d1701805", "url": "https://github.com/openhab/openhab-core/commit/8c1cdacb6772e0e14d59b7a061bfc7d6d1701805", "message": "Simplify Path annotations\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-05-04T20:01:17Z", "type": "commit"}, {"oid": "0c637ea3bd66900f4e42ec577c4ef3662ac24108", "url": "https://github.com/openhab/openhab-core/commit/0c637ea3bd66900f4e42ec577c4ef3662ac24108", "message": "Add Jackson and Swagger dependencies to runtime BOM\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-05-04T20:01:17Z", "type": "commit"}, {"oid": "215ddf6fd8d9a511494a081a1e5cf01cc9c0cd93", "url": "https://github.com/openhab/openhab-core/commit/215ddf6fd8d9a511494a081a1e5cf01cc9c0cd93", "message": "Don't add root resource to links\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-05-04T20:01:17Z", "type": "commit"}, {"oid": "4b80c0f4ee452a2df9053b62831bcfffd5dccfef", "url": "https://github.com/openhab/openhab-core/commit/4b80c0f4ee452a2df9053b62831bcfffd5dccfef", "message": "Update Felix logback to 1.0.2\n\nThis version adds the jul-to-slf4j bridge (FELIX-6027).\nJUL is used by CXF and using the bridge we can use logback to reduce the verbosity of the info logging whenever org.apache.cxf.endpoint.ServerImpl creates each endpoints.\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-05-04T20:07:29Z", "type": "forcePushed"}, {"oid": "d916de0c3468455cb88020d26ebb9d52c870c21d", "url": "https://github.com/openhab/openhab-core/commit/d916de0c3468455cb88020d26ebb9d52c870c21d", "message": "Update Felix logback to 1.0.2\n\nThis version adds the jul-to-slf4j bridge (FELIX-6027).\nJUL is used by CXF and using the bridge we can use logback to reduce the verbosity of the info logging whenever org.apache.cxf.endpoint.ServerImpl creates each endpoints.\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-05-04T20:09:08Z", "type": "forcePushed"}, {"oid": "3e4d31cf0388784be9bb294a8b6e15d4e67dd4f4", "url": "https://github.com/openhab/openhab-core/commit/3e4d31cf0388784be9bb294a8b6e15d4e67dd4f4", "message": "Update Felix logback to 1.0.2\n\nThis version adds the jul-to-slf4j bridge (FELIX-6027).\nJUL is used by CXF and using the bridge we can use logback to reduce the verbosity of the info logging whenever org.apache.cxf.endpoint.ServerImpl creates each endpoints.\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-05-04T20:10:24Z", "type": "forcePushed"}, {"oid": "ea2162acccb2a1b46a543cb0a0c7f9250382591f", "url": "https://github.com/openhab/openhab-core/commit/ea2162acccb2a1b46a543cb0a0c7f9250382591f", "message": "Update Felix logback to 1.0.2\n\nThis version adds the jul-to-slf4j bridge (FELIX-6027).\nJUL is used by CXF and using the bridge we can use logback to reduce the verbosity of the info logging whenever org.apache.cxf.endpoint.ServerImpl creates endpoints.\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-05-04T20:15:21Z", "type": "commit"}, {"oid": "ea2162acccb2a1b46a543cb0a0c7f9250382591f", "url": "https://github.com/openhab/openhab-core/commit/ea2162acccb2a1b46a543cb0a0c7f9250382591f", "message": "Update Felix logback to 1.0.2\n\nThis version adds the jul-to-slf4j bridge (FELIX-6027).\nJUL is used by CXF and using the bridge we can use logback to reduce the verbosity of the info logging whenever org.apache.cxf.endpoint.ServerImpl creates endpoints.\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-05-04T20:15:21Z", "type": "forcePushed"}, {"oid": "c9ea9b6d690f7973977440dcdfc8f74e8b32ca3d", "url": "https://github.com/openhab/openhab-core/commit/c9ea9b6d690f7973977440dcdfc8f74e8b32ca3d", "message": "Update Aries Whiteboard to 1.0.8\n\n* Removes the hated default web application (ARIES-1931)\n* Improves performance\n* Uses CXF 3.2.12\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-05-04T20:57:53Z", "type": "commit"}, {"oid": "b287ef39a31548c65108961ea51c16d995fabbcd", "url": "https://github.com/openhab/openhab-core/commit/b287ef39a31548c65108961ea51c16d995fabbcd", "message": "Tune PlainMessageBodyReader logging\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-05-05T09:37:30Z", "type": "commit"}, {"oid": "0165c69e07772dfccbbcc8739d97ee0beb9db6b3", "url": "https://github.com/openhab/openhab-core/commit/0165c69e07772dfccbbcc8739d97ee0beb9db6b3", "message": "Fix authentication\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-05-05T10:49:52Z", "type": "commit"}, {"oid": "7f660757f1872945f163a84d0da165f4efb9c410", "url": "https://github.com/openhab/openhab-core/commit/7f660757f1872945f163a84d0da165f4efb9c410", "message": "Cleanup code\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-05-05T12:11:39Z", "type": "commit"}, {"oid": "26b5f2bc1b1833ae68d4fc7eeb5fef3c15f2494b", "url": "https://github.com/openhab/openhab-core/commit/26b5f2bc1b1833ae68d4fc7eeb5fef3c15f2494b", "message": "Don't reuse SSE event builders\n\nSSE event builders are not thread-safe.\nIt also causes the wrong default values being used.\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-05-05T13:49:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ3MzkwMA==", "url": "https://github.com/openhab/openhab-core/pull/1443#discussion_r422473900", "bodyText": "Rename const to PATH_PERSISTENCE?", "author": "cweitkamp", "createdAt": "2020-05-09T09:19:49Z", "path": "bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/persistence/PersistenceResource.java", "diffHunk": "@@ -79,10 +85,15 @@\n  * @author Franck Dechavanne - Added DTOs to ApiResponses\n  * @author Erdoan Hadzhiyusein - Adapted the convertTime() method to work with the new DateTimeType\n  * @author Lyubomir Papazov - Change java.util.Date references to be of type java.time.ZonedDateTime\n+ * @author Markus Rathgeb - Migrated to JAX-RS Whiteboard Specification\n  */\n-@Path(PersistenceResource.PATH)\n-@Api(value = PersistenceResource.PATH)\n @Component\n+@JaxrsResource\n+@JaxrsName(PersistenceResource.PATH)", "originalCommit": "26b5f2bc1b1833ae68d4fc7eeb5fef3c15f2494b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ3Mzk5NQ==", "url": "https://github.com/openhab/openhab-core/pull/1443#discussion_r422473995", "bodyText": "Rename to PATH_THING_TYPES", "author": "cweitkamp", "createdAt": "2020-05-09T09:20:50Z", "path": "bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/thing/ThingTypeResource.java", "diffHunk": "@@ -79,10 +85,15 @@\n  * @author Miki Jankov - Introducing StrippedThingTypeDTO\n  * @author Franck Dechavanne - Added DTOs to ApiResponses\n  * @author Yannick Schaus - Added filter to getAll\n+ * @author Markus Rathgeb - Migrated to JAX-RS Whiteboard Specification\n  */\n-@Path(ThingTypeResource.PATH_THINGS_TYPES)\n-@Api(value = ThingTypeResource.PATH_THINGS_TYPES)\n @Component\n+@JaxrsResource\n+@JaxrsName(ThingTypeResource.PATH_THINGS_TYPES)", "originalCommit": "26b5f2bc1b1833ae68d4fc7eeb5fef3c15f2494b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ3NDMxNw==", "url": "https://github.com/openhab/openhab-core/pull/1443#discussion_r422474317", "bodyText": "Why remove this? Shouldn't we use it for annotations?", "author": "cweitkamp", "createdAt": "2020-05-09T09:24:17Z", "path": "bundles/org.openhab.core.io.rest.sse/src/main/java/org/openhab/core/io/rest/sse/SseResource.java", "diffHunk": "@@ -63,75 +74,66 @@\n  * @author Ivan Iliev - Initial contribution\n  * @author Yordan Zhelev - Added Swagger annotations\n  * @author Yannick Schaus - Add endpoints to track item state updates\n+ * @author Markus Rathgeb - Drop Glassfish dependency and use API only\n+ * @author Wouter Born - Rework SSE item state sinks for dropping Glassfish\n  */\n-@Component(immediate = true, service = SseResource.class)\n-@Path(SseResource.PATH_EVENTS)\n+@Component(service = SsePublisher.class/* , scope = ServiceScope.PROTOTYPE */)\n+@JaxrsResource\n+@JaxrsName(\"events\")\n+@JaxrsApplicationSelect(\"(\" + JaxrsWhiteboardConstants.JAX_RS_NAME + \"=\" + RESTConstants.JAX_RS_NAME + \")\")\n+@JSONRequired\n+@Path(\"/events\")\n @RolesAllowed({ Role.USER })\n @Singleton\n-@Api(value = SseResource.PATH_EVENTS, hidden = true)\n-public class SseResource {\n-\n-    public static final String PATH_EVENTS = \"events\";", "originalCommit": "26b5f2bc1b1833ae68d4fc7eeb5fef3c15f2494b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ3NDUyNw==", "url": "https://github.com/openhab/openhab-core/pull/1443#discussion_r422474527", "bodyText": "NonNullByDefault", "author": "cweitkamp", "createdAt": "2020-05-09T09:26:24Z", "path": "bundles/org.openhab.core.io.rest/src/main/java/org/openhab/core/io/rest/JSONInputStream.java", "diffHunk": "@@ -0,0 +1,22 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.io.rest;\n+\n+/**\n+ * Marker interface for an input stream that provides a JSON string.\n+ *\n+ * @author Markus Rathgeb - Initial contribution\n+ */\n+public interface JSONInputStream {", "originalCommit": "26b5f2bc1b1833ae68d4fc7eeb5fef3c15f2494b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ3NDgxMQ==", "url": "https://github.com/openhab/openhab-core/pull/1443#discussion_r422474811", "bodyText": "NonNullByDefault", "author": "cweitkamp", "createdAt": "2020-05-09T09:29:29Z", "path": "bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/GsonMessageBodyReader.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.io.rest.core.internal;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+import java.lang.annotation.Annotation;\n+import java.lang.reflect.Type;\n+import java.nio.charset.StandardCharsets;\n+\n+import javax.ws.rs.WebApplicationException;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.MultivaluedMap;\n+import javax.ws.rs.ext.MessageBodyReader;\n+\n+import com.google.gson.Gson;\n+\n+/**\n+ * A message body reader for JSON using GSON.\n+ *\n+ * @author Markus Rathgeb - Initial contribution\n+ */\n+public class GsonMessageBodyReader<T> implements MessageBodyReader<T> {", "originalCommit": "26b5f2bc1b1833ae68d4fc7eeb5fef3c15f2494b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU0ODAzNQ==", "url": "https://github.com/openhab/openhab-core/pull/1443#discussion_r422548035", "bodyText": "That's not possible because it's implementing an unannotated non-OH interface so adding that annotation results in many \"Illegal redefinition of parameter annotations, inherited method from ... does not constrain this parameter\" errors.", "author": "wborn", "createdAt": "2020-05-09T21:25:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ3NDgxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU5NjI3NA==", "url": "https://github.com/openhab/openhab-core/pull/1443#discussion_r422596274", "bodyText": "That\u2018s one of the bigger problems we have with our null-annotations. All classes implementing non-annotated (external) interfaces cannot be annotated in our code.", "author": "J-N-K", "createdAt": "2020-05-10T06:37:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ3NDgxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU5Nzg5OA==", "url": "https://github.com/openhab/openhab-core/pull/1443#discussion_r422597898", "bodyText": "Yes we should really get those EEAs working (#888). Maybe we have more time for that when this PR is merged. :-)", "author": "wborn", "createdAt": "2020-05-10T06:53:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ3NDgxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ3NDg0MQ==", "url": "https://github.com/openhab/openhab-core/pull/1443#discussion_r422474841", "bodyText": "NonNullByDefault", "author": "cweitkamp", "createdAt": "2020-05-09T09:29:51Z", "path": "bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/GsonMessageBodyWriter.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.io.rest.core.internal;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.lang.annotation.Annotation;\n+import java.lang.reflect.Type;\n+import java.nio.charset.StandardCharsets;\n+\n+import javax.ws.rs.WebApplicationException;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.MultivaluedMap;\n+import javax.ws.rs.core.Response.ResponseBuilder;\n+import javax.ws.rs.ext.MessageBodyWriter;\n+\n+import org.apache.commons.io.IOUtils;\n+import org.openhab.core.io.rest.JSONInputStream;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.google.gson.Gson;\n+\n+/**\n+ * A message body writer for JSON using GSON.\n+ *\n+ * @author Markus Rathgeb - Initial contribution\n+ */\n+public class GsonMessageBodyWriter<T> implements MessageBodyWriter<T> {", "originalCommit": "26b5f2bc1b1833ae68d4fc7eeb5fef3c15f2494b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU0ODA0Ng==", "url": "https://github.com/openhab/openhab-core/pull/1443#discussion_r422548046", "bodyText": "That's not possible because it's implementing an unannotated non-OH interface so adding that annotation results in many \"Illegal redefinition of parameter annotations, inherited method from ... does not constrain this parameter\" errors.", "author": "wborn", "createdAt": "2020-05-09T21:25:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ3NDg0MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ3NDg4NQ==", "url": "https://github.com/openhab/openhab-core/pull/1443#discussion_r422474885", "bodyText": "NonNullByDefault\nThere are more new classes / interfaces where the annotation is missing. Can we add them on every new one?", "author": "cweitkamp", "createdAt": "2020-05-09T09:30:20Z", "path": "bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/JSONResponseExceptionMapper.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.io.rest.core.internal;\n+\n+import javax.ws.rs.core.Response;\n+import javax.ws.rs.ext.ExceptionMapper;\n+\n+import org.openhab.core.io.rest.JSONResponse;\n+import org.openhab.core.io.rest.RESTConstants;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.jaxrs.whiteboard.JaxrsWhiteboardConstants;\n+import org.osgi.service.jaxrs.whiteboard.propertytypes.JaxrsApplicationSelect;\n+import org.osgi.service.jaxrs.whiteboard.propertytypes.JaxrsExtension;\n+\n+/**\n+ * Trap exceptions.\n+ *\n+ * @author Markus Rathgeb - Migrated to JAX-RS Whiteboard Specification\n+ */\n+@Component\n+@JaxrsExtension\n+@JaxrsApplicationSelect(\"(\" + JaxrsWhiteboardConstants.JAX_RS_NAME + \"=\" + RESTConstants.JAX_RS_NAME + \")\")\n+public class JSONResponseExceptionMapper implements ExceptionMapper<Exception> {", "originalCommit": "26b5f2bc1b1833ae68d4fc7eeb5fef3c15f2494b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU0ODE5OA==", "url": "https://github.com/openhab/openhab-core/pull/1443#discussion_r422548198", "bodyText": "I added them where possible.", "author": "wborn", "createdAt": "2020-05-09T21:27:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ3NDg4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU0ODQxNw==", "url": "https://github.com/openhab/openhab-core/pull/1443#discussion_r422548417", "bodyText": "I guess we do not want to add nullness annotations on every REST resource in the scope of this PR\n\nYes let's do that in follow up PRs so this PR doesn't grow even bigger. \ud83d\ude09", "author": "wborn", "createdAt": "2020-05-09T21:29:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ3NDg4NQ=="}], "type": "inlineReview"}, {"oid": "4bdf8166e3ac0eb5ab4ccedd3cb0e8d4d5a3c7df", "url": "https://github.com/openhab/openhab-core/commit/4bdf8166e3ac0eb5ab4ccedd3cb0e8d4d5a3c7df", "message": "Address review comments\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-05-09T21:24:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI2MDEyNA==", "url": "https://github.com/openhab/openhab-core/pull/1443#discussion_r425260124", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * An endpoint to generate and provide an Swagger 1 description.\n          \n          \n            \n             * An endpoint to generate and provide a Swagger 1 description.", "author": "kaikreuzer", "createdAt": "2020-05-14T16:14:05Z", "path": "bundles/org.openhab.core.io.rest.swagger1/src/main/java/org/openhab/core/io/rest/swagger1/impl/RESTResource.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.io.rest.swagger1.impl;\n+\n+import java.io.IOException;\n+import java.util.Map;\n+\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.openhab.core.io.rest.RESTConstants;\n+import org.osgi.service.component.annotations.Activate;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.Reference;\n+import org.osgi.service.component.annotations.ServiceScope;\n+import org.osgi.service.jaxrs.whiteboard.JaxrsWhiteboardConstants;\n+import org.osgi.service.jaxrs.whiteboard.propertytypes.JSONRequired;\n+import org.osgi.service.jaxrs.whiteboard.propertytypes.JaxrsApplicationSelect;\n+import org.osgi.service.jaxrs.whiteboard.propertytypes.JaxrsResource;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import de.maggu2810.jaxrswb.swagger1.gen.JaxRsWhiteboardSwaggerGenerator;\n+\n+/**\n+ * An endpoint to generate and provide an Swagger 1 description.", "originalCommit": "4bdf8166e3ac0eb5ab4ccedd3cb0e8d4d5a3c7df", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI2MDUyNQ==", "url": "https://github.com/openhab/openhab-core/pull/1443#discussion_r425260525", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @return an Swagger 1 description of the endpoints\n          \n          \n            \n                 * @return a Swagger 1 description of the endpoints", "author": "kaikreuzer", "createdAt": "2020-05-14T16:14:36Z", "path": "bundles/org.openhab.core.io.rest.swagger1/src/main/java/org/openhab/core/io/rest/swagger1/impl/RESTResource.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.io.rest.swagger1.impl;\n+\n+import java.io.IOException;\n+import java.util.Map;\n+\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.openhab.core.io.rest.RESTConstants;\n+import org.osgi.service.component.annotations.Activate;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.Reference;\n+import org.osgi.service.component.annotations.ServiceScope;\n+import org.osgi.service.jaxrs.whiteboard.JaxrsWhiteboardConstants;\n+import org.osgi.service.jaxrs.whiteboard.propertytypes.JSONRequired;\n+import org.osgi.service.jaxrs.whiteboard.propertytypes.JaxrsApplicationSelect;\n+import org.osgi.service.jaxrs.whiteboard.propertytypes.JaxrsResource;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import de.maggu2810.jaxrswb.swagger1.gen.JaxRsWhiteboardSwaggerGenerator;\n+\n+/**\n+ * An endpoint to generate and provide an Swagger 1 description.\n+ *\n+ * @author Markus Rathgeb - Initial contribution\n+ */\n+@Component(service = { RESTResource.class }, scope = ServiceScope.PROTOTYPE)\n+@JaxrsResource\n+@JaxrsApplicationSelect(\"(\" + JaxrsWhiteboardConstants.JAX_RS_NAME + \"=\" + RESTConstants.JAX_RS_NAME + \")\")\n+@JSONRequired\n+@Path(\"/swagger.json\")\n+@NonNullByDefault\n+public class RESTResource {\n+\n+    private final Logger logger = LoggerFactory.getLogger(RESTResource.class);\n+    private final JaxRsWhiteboardSwaggerGenerator generator;\n+\n+    /**\n+     * Creates a new instance.\n+     *\n+     * @param generator the generator\n+     */\n+    @Activate\n+    public RESTResource(final @Reference JaxRsWhiteboardSwaggerGenerator generator) {\n+        this.generator = generator;\n+    }\n+\n+    /**\n+     * Gets the current JAX-RS Whiteboard provided endpoint information by Swagger 1.\n+     *\n+     * @return an Swagger 1 description of the endpoints", "originalCommit": "4bdf8166e3ac0eb5ab4ccedd3cb0e8d4d5a3c7df", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI2ODA1OA==", "url": "https://github.com/openhab/openhab-core/pull/1443#discussion_r425268058", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    \"servlet.init.hide-service-list-page=true\" //\n          \n          \n            \n                    \"servlet.init.hide-service-list-page=true\"", "author": "kaikreuzer", "createdAt": "2020-05-14T16:24:24Z", "path": "bundles/org.openhab.core.io.rest/src/main/java/org/openhab/core/io/rest/internal/RESTApplicationImpl.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.io.rest.internal;\n+\n+import javax.ws.rs.core.Application;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.openhab.core.io.rest.RESTConstants;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.jaxrs.whiteboard.propertytypes.JaxrsApplicationBase;\n+import org.osgi.service.jaxrs.whiteboard.propertytypes.JaxrsName;\n+\n+/**\n+ * The JAX-RS application for the openHAB JAX-RS resources.\n+ *\n+ * @author Markus Rathgeb - Initial contribution\n+ */\n+@Component(service = Application.class, property = {\n+        // https://lists.apache.org/thread.html/\n+        // r1379789bd90c6b7e3971d5ffeedb2e0d1e1c9103fd2392cb95458596%40%3Cuser.aries.apache.org%3E\n+        \"servlet.init.hide-service-list-page=true\" //", "originalCommit": "4bdf8166e3ac0eb5ab4ccedd3cb0e8d4d5a3c7df", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI2OTIzNg==", "url": "https://github.com/openhab/openhab-core/pull/1443#discussion_r425269236", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            @Component(service = RootResource.class, configurationPid = \"org.openhab.restroot\" // , scope = ServiceScope.PROTOTYPE\n          \n          \n            \n            @Component(service = RootResource.class, configurationPid = \"org.openhab.restroot\"", "author": "kaikreuzer", "createdAt": "2020-05-14T16:25:29Z", "path": "bundles/org.openhab.core.io.rest/src/main/java/org/openhab/core/io/rest/internal/resources/RootResource.java", "diffHunk": "@@ -52,82 +58,62 @@\n  * The result is returned as JSON\n  *\n  * @author Kai Kreuzer - Initial contribution\n+ * @author Markus Rathgeb - Migrated to JAX-RS Whiteboard Specification\n  */\n+@Component(service = RootResource.class, configurationPid = \"org.openhab.restroot\" // , scope = ServiceScope.PROTOTYPE", "originalCommit": "4bdf8166e3ac0eb5ab4ccedd3cb0e8d4d5a3c7df", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b092113fd3dda43f8d46c729021da88c050221ee", "url": "https://github.com/openhab/openhab-core/commit/b092113fd3dda43f8d46c729021da88c050221ee", "message": "Address review comments\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-05-14T17:51:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM1OTU2Nw==", "url": "https://github.com/openhab/openhab-core/pull/1443#discussion_r425359567", "bodyText": "Remove org.apache.commons.io.IOUtilsfrom imports:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        IOUtils.copy((InputStream) object, entityStream);\n          \n          \n            \n                        ((InputStream) object).transferTo(entityStream);", "author": "cweitkamp", "createdAt": "2020-05-14T18:51:34Z", "path": "bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/GsonMessageBodyWriter.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.io.rest.core.internal;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.lang.annotation.Annotation;\n+import java.lang.reflect.Type;\n+import java.nio.charset.StandardCharsets;\n+\n+import javax.ws.rs.WebApplicationException;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.MultivaluedMap;\n+import javax.ws.rs.core.Response.ResponseBuilder;\n+import javax.ws.rs.ext.MessageBodyWriter;\n+\n+import org.apache.commons.io.IOUtils;\n+import org.openhab.core.io.rest.JSONInputStream;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.google.gson.Gson;\n+\n+/**\n+ * A message body writer for JSON using GSON.\n+ *\n+ * @author Markus Rathgeb - Initial contribution\n+ */\n+public class GsonMessageBodyWriter<T> implements MessageBodyWriter<T> {\n+\n+    private final Logger logger = LoggerFactory.getLogger(GsonMessageBodyWriter.class);\n+\n+    private final Gson gson;\n+\n+    /**\n+     * Constructor.\n+     *\n+     * @param gson the GSON object to use\n+     */\n+    public GsonMessageBodyWriter(final Gson gson) {\n+        this.gson = gson;\n+    }\n+\n+    @Override\n+    public long getSize(final T object, final Class<?> type, final Type genericType, final Annotation[] annotations,\n+            final MediaType mediaType) {\n+        return -1;\n+    }\n+\n+    @Override\n+    public boolean isWriteable(final Class<?> type, final Type genericType, final Annotation[] annotations,\n+            final MediaType mediaType) {\n+        return true;\n+    }\n+\n+    @Override\n+    public void writeTo(final T object, final Class<?> type, final Type genericType, final Annotation[] annotations,\n+            final MediaType mediaType, final MultivaluedMap<String, Object> httpHeaders,\n+            final OutputStream entityStream) throws IOException, WebApplicationException {\n+        if (object == null) {\n+            return;\n+        }\n+\n+        // Log a message if a response builder is received.\n+        if (object instanceof ResponseBuilder) {\n+            logger.error(\n+                    \"A REST endpoint returns a ResponseBuilder object. This is mostly wrong and the call to \\\"build()\\\" is missing. Please report or fix it. Got: {}\",\n+                    object);\n+        }\n+\n+        if (object instanceof InputStream && object instanceof JSONInputStream) {\n+            IOUtils.copy((InputStream) object, entityStream);", "originalCommit": "b092113fd3dda43f8d46c729021da88c050221ee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM4NTk1OA==", "url": "https://github.com/openhab/openhab-core/pull/1443#discussion_r425385958", "bodyText": "I didn't know that one yet. \ud83d\udc4d", "author": "wborn", "createdAt": "2020-05-14T19:41:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM1OTU2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM4OTMwMw==", "url": "https://github.com/openhab/openhab-core/pull/1443#discussion_r425389303", "bodyText": "Me neither. I discovered it during #1441. It has been introduced with JDK 9.", "author": "cweitkamp", "createdAt": "2020-05-14T19:47:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM1OTU2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM2NDIyOA==", "url": "https://github.com/openhab/openhab-core/pull/1443#discussion_r425364228", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            @Component(service = SsePublisher.class/* , scope = ServiceScope.PROTOTYPE */)\n          \n          \n            \n            @Component(service = SsePublisher.class)", "author": "cweitkamp", "createdAt": "2020-05-14T18:59:42Z", "path": "bundles/org.openhab.core.io.rest.sse/src/main/java/org/openhab/core/io/rest/sse/SseResource.java", "diffHunk": "@@ -63,75 +74,69 @@\n  * @author Ivan Iliev - Initial contribution\n  * @author Yordan Zhelev - Added Swagger annotations\n  * @author Yannick Schaus - Add endpoints to track item state updates\n+ * @author Markus Rathgeb - Drop Glassfish dependency and use API only\n+ * @author Wouter Born - Rework SSE item state sinks for dropping Glassfish\n  */\n-@Component(immediate = true, service = SseResource.class)\n+@Component(service = SsePublisher.class/* , scope = ServiceScope.PROTOTYPE */)", "originalCommit": "b092113fd3dda43f8d46c729021da88c050221ee", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM2ODg2MA==", "url": "https://github.com/openhab/openhab-core/pull/1443#discussion_r425368860", "bodyText": "Do we need the ServiceScope here? You removed it everywhere else.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            @Component(service = { RESTResource.class }, scope = ServiceScope.PROTOTYPE)\n          \n          \n            \n            @Component(service = RESTResource.class)", "author": "cweitkamp", "createdAt": "2020-05-14T19:08:08Z", "path": "bundles/org.openhab.core.io.rest.swagger/src/main/java/org/openhab/core/io/rest/swagger/impl/RESTResource.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.io.rest.swagger.impl;\n+\n+import java.io.IOException;\n+import java.util.Map;\n+\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.openhab.core.io.rest.RESTConstants;\n+import org.osgi.service.component.annotations.Activate;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.Reference;\n+import org.osgi.service.component.annotations.ServiceScope;\n+import org.osgi.service.jaxrs.whiteboard.JaxrsWhiteboardConstants;\n+import org.osgi.service.jaxrs.whiteboard.propertytypes.JSONRequired;\n+import org.osgi.service.jaxrs.whiteboard.propertytypes.JaxrsApplicationSelect;\n+import org.osgi.service.jaxrs.whiteboard.propertytypes.JaxrsResource;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import de.maggu2810.jaxrswb.swagger1.gen.JaxRsWhiteboardSwaggerGenerator;\n+\n+/**\n+ * An endpoint to generate and provide a Swagger 1 description.\n+ *\n+ * @author Markus Rathgeb - Initial contribution\n+ */\n+@Component(service = { RESTResource.class }, scope = ServiceScope.PROTOTYPE)", "originalCommit": "b092113fd3dda43f8d46c729021da88c050221ee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM5MDU5MQ==", "url": "https://github.com/openhab/openhab-core/pull/1443#discussion_r425390591", "bodyText": "It's explained in the whiteboard resource lifecycle. To me it seems that using a prototype scope may be overkill and also causes more overhead.", "author": "wborn", "createdAt": "2020-05-14T19:50:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM2ODg2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM5NDY4Nw==", "url": "https://github.com/openhab/openhab-core/pull/1443#discussion_r425394687", "bodyText": "Everything still seems to work without it so I'll remove it here as well.", "author": "wborn", "createdAt": "2020-05-14T19:57:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM2ODg2MA=="}], "type": "inlineReview"}, {"oid": "b6bb605e09b990372537afdb227af93e4477f6aa", "url": "https://github.com/openhab/openhab-core/commit/b6bb605e09b990372537afdb227af93e4477f6aa", "message": "Address final remarks\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-05-14T19:59:03Z", "type": "commit"}]}