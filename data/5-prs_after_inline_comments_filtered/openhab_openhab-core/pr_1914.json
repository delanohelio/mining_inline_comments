{"pr_number": 1914, "pr_title": "Implemented start level service", "pr_createdAt": "2020-12-11T23:47:34Z", "pr_url": "https://github.com/openhab/openhab-core/pull/1914", "timeline": [{"oid": "df92a748840fc0f11bdbabf7003fefeddcc0e9a1", "url": "https://github.com/openhab/openhab-core/commit/df92a748840fc0f11bdbabf7003fefeddcc0e9a1", "message": "Implemented start level service\n\nSigned-off-by: Kai Kreuzer <kai@openhab.org>", "committedDate": "2020-12-11T23:29:42Z", "type": "commit"}, {"oid": "83737e464929f74f9adedb64028c5377050d4ca4", "url": "https://github.com/openhab/openhab-core/commit/83737e464929f74f9adedb64028c5377050d4ca4", "message": "fixed some further itests\n\nSigned-off-by: Kai Kreuzer <kai@openhab.org>", "committedDate": "2020-12-12T00:18:01Z", "type": "commit"}, {"oid": "69ed24e1796a9f45ebc697eecc543a6e8a78b954", "url": "https://github.com/openhab/openhab-core/commit/69ed24e1796a9f45ebc697eecc543a6e8a78b954", "message": "moved integration test\n\nSigned-off-by: Kai Kreuzer <kai@openhab.org>", "committedDate": "2020-12-12T00:58:05Z", "type": "commit"}, {"oid": "377b6b32c485d86c87095f0bb464fa8af88eeb62", "url": "https://github.com/openhab/openhab-core/commit/377b6b32c485d86c87095f0bb464fa8af88eeb62", "message": "move test back\n\nSigned-off-by: Kai Kreuzer <kai@openhab.org>", "committedDate": "2020-12-12T10:33:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU2NDQ5Nw==", "url": "https://github.com/openhab/openhab-core/pull/1914#discussion_r541564497", "bodyText": "This seems like a schedule parameter left over:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        }, TimeUnit.MILLISECONDS));\n          \n          \n            \n                        }));", "author": "wborn", "createdAt": "2020-12-12T12:11:39Z", "path": "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/RuleEngineImpl.java", "diffHunk": "@@ -900,13 +895,13 @@ private void setStatus(String ruleUID, RuleStatusInfo newStatusInfo) {\n     protected void scheduleRuleInitialization(final String rUID) {\n         Future<?> f = scheduleTasks.get(rUID);\n         if (f == null || f.isDone()) {\n-            scheduleTasks.put(rUID, getScheduledExecutor().schedule(() -> {\n+            scheduleTasks.put(rUID, getScheduledExecutor().submit(() -> {\n                 final WrappedRule managedRule = getManagedRule(rUID);\n                 if (managedRule == null) {\n                     return;\n                 }\n                 setRule(managedRule);\n-            }, scheduleReinitializationDelay, TimeUnit.MILLISECONDS));\n+            }, TimeUnit.MILLISECONDS));", "originalCommit": "377b6b32c485d86c87095f0bb464fa8af88eeb62", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU2NDkwNA==", "url": "https://github.com/openhab/openhab-core/pull/1914#discussion_r541564904", "bodyText": "Did you also look into using constructor injection for injecting the ReadyService into the registries?", "author": "wborn", "createdAt": "2020-12-12T12:14:33Z", "path": "bundles/org.openhab.core/src/main/java/org/openhab/core/internal/items/ItemRegistryImpl.java", "diffHunk": "@@ -280,6 +281,17 @@ protected void unsetEventPublisher(EventPublisher eventPublisher) {\n         }\n     }\n \n+    @Override\n+    @Reference\n+    protected void setReadyService(ReadyService readyService) {\n+        super.setReadyService(readyService);\n+    }\n+\n+    @Override\n+    protected void unsetReadyService(ReadyService readyService) {\n+        super.unsetReadyService(readyService);\n+    }", "originalCommit": "377b6b32c485d86c87095f0bb464fa8af88eeb62", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU2OTk1Mw==", "url": "https://github.com/openhab/openhab-core/pull/1914#discussion_r541569953", "bodyText": "No, I didn't want to mess with that in that PR as it can easily be a bigger refactoring. That's imho rather something for after the release.", "author": "kaikreuzer", "createdAt": "2020-12-12T12:47:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU2NDkwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU3NTUxNg==", "url": "https://github.com/openhab/openhab-core/pull/1914#discussion_r541575516", "bodyText": "I can imagine that, but if you had already given it a try and it didn't work out well... then your insights on this might help if someone else looks into it one day. \ud83d\ude42", "author": "wborn", "createdAt": "2020-12-12T13:24:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU2NDkwNA=="}], "type": "inlineReview"}, {"oid": "b8dd5e5fa28cb572f6d3a1ca91470c4d706af32b", "url": "https://github.com/openhab/openhab-core/commit/b8dd5e5fa28cb572f6d3a1ca91470c4d706af32b", "message": "addressed review comment\n\nSigned-off-by: Kai Kreuzer <kai@openhab.org>", "committedDate": "2020-12-12T12:46:52Z", "type": "commit"}, {"oid": "8034f5302cc1a5b6d9b1cf2d726cb9b0b2512732", "url": "https://github.com/openhab/openhab-core/commit/8034f5302cc1a5b6d9b1cf2d726cb9b0b2512732", "message": "fixed rule model tests\n\nSigned-off-by: Kai Kreuzer <kai@openhab.org>", "committedDate": "2020-12-12T12:56:01Z", "type": "commit"}]}