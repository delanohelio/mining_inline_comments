{"pr_number": 885, "pr_title": "kube-scheduler: case insensitive constraint names", "pr_createdAt": "2020-07-17T20:10:11Z", "pr_url": "https://github.com/Netflix/titus-control-plane/pull/885", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY1NDc1OQ==", "url": "https://github.com/Netflix/titus-control-plane/pull/885#discussion_r456654759", "bodyText": "Direct for loop for better performance, as this code might be used in many places?", "author": "tbak", "createdAt": "2020-07-17T20:16:59Z", "path": "titus-common/src/main/java/com/netflix/titus/common/util/CollectionsExt.java", "diffHunk": "@@ -595,6 +595,31 @@ private CollectionsExt() {\n         return -from - 1;\n     }\n \n+    /**\n+     * Convert all keys to lower case, the behavior is undefined when values clash, and only one will be kept\n+     */\n+    public static <V> Map<String, V> toLowerCaseKeys(Map<String, V> entries) {\n+        return entries.entrySet().stream()", "originalCommit": "a54b82a9ea3255f292d925245046638bac6dc570", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY1NDg4NQ==", "url": "https://github.com/Netflix/titus-control-plane/pull/885#discussion_r456654885", "bodyText": "Is there a unit test for these methods?", "author": "tbak", "createdAt": "2020-07-17T20:17:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY1NDc1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY2MDY4OA==", "url": "https://github.com/Netflix/titus-control-plane/pull/885#discussion_r456660688", "bodyText": "the same performance argument could be made to any other of the CollectionsExt methods, I think this is fine, I will leave it as is for now to avoid early optimization.\nGood point about the unit test, I will add one.", "author": "fabiokung", "createdAt": "2020-07-17T20:31:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY1NDc1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY1NTExMA==", "url": "https://github.com/Netflix/titus-control-plane/pull/885#discussion_r456655110", "bodyText": "This isn't entirely a no-op as it sets a gauge", "author": "corindwyer", "createdAt": "2020-07-17T20:17:53Z", "path": "titus-server-master/src/main/java/com/netflix/titus/master/scheduler/DefaultSchedulingService.java", "diffHunk": "@@ -531,6 +531,9 @@ private void processTaskSchedulingFailureCallbacks(Map<FailureKind, Map<V3Queuea\n     }\n \n     private void launchTasks(TaskAssignments taskAssignments) {\n+        if (taskAssignments.getCount() <= 0) {", "originalCommit": "a54b82a9ea3255f292d925245046638bac6dc570", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY1NjUzNA==", "url": "https://github.com/Netflix/titus-control-plane/pull/885#discussion_r456656534", "bodyText": "I guess it doesn't matter though as it is actually adding a 0 to the AtomicLong which is getting polled.", "author": "corindwyer", "createdAt": "2020-07-17T20:21:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY1NTExMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY1OTkxMg==", "url": "https://github.com/Netflix/titus-control-plane/pull/885#discussion_r456659912", "bodyText": "exactly, this mirrors the previous behavior better, before #881", "author": "fabiokung", "createdAt": "2020-07-17T20:29:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY1NTExMA=="}], "type": "inlineReview"}, {"oid": "ad63b424c0a80c7002763df704b29a7afff5724d", "url": "https://github.com/Netflix/titus-control-plane/commit/ad63b424c0a80c7002763df704b29a7afff5724d", "message": "kube-scheduler: case insensitive constraint names", "committedDate": "2020-07-17T20:51:42Z", "type": "commit"}, {"oid": "ad63b424c0a80c7002763df704b29a7afff5724d", "url": "https://github.com/Netflix/titus-control-plane/commit/ad63b424c0a80c7002763df704b29a7afff5724d", "message": "kube-scheduler: case insensitive constraint names", "committedDate": "2020-07-17T20:51:42Z", "type": "forcePushed"}]}