{"pr_number": 817, "pr_title": "Add configurable Fenzo taints", "pr_createdAt": "2020-03-19T21:47:18Z", "pr_url": "https://github.com/Netflix/titus-control-plane/pull/817", "timeline": [{"oid": "d1c89daf539e57d7f7c2d3a5eb52f4e1f2f98b6e", "url": "https://github.com/Netflix/titus-control-plane/commit/d1c89daf539e57d7f7c2d3a5eb52f4e1f2f98b6e", "message": "Add configurable Fenzo taints", "committedDate": "2020-03-19T21:46:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM0NjU2OQ==", "url": "https://github.com/Netflix/titus-control-plane/pull/817#discussion_r395346569", "bodyText": "the code below seems to be returning false when there is no explicit scheduler taint (i.e. schedulerTaintValues.size() < 1). What is the expected behavior?\nSome unit tests here would be nice.", "author": "fabiokung", "createdAt": "2020-03-19T22:07:29Z", "path": "titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/KubeApiServerIntegrator.java", "diffHunk": "@@ -351,24 +351,49 @@ private void nodeUpdated(V1Node node) {\n      * </ul>\n      */\n     private boolean isNodeOwnedByFenzo(V1Node node) {\n+        if (isFarzoneNode(node)) {\n+            logger.debug(\"Not owned by fenzo (farzone node): {}\", node.getMetadata().getName());\n+            return false;\n+        }\n+        if (!hasFenzoSchedulerTaint(node)) {\n+            logger.debug(\"Not owned by fenzo (non Fenzo scheduler taint): {}\", node.getMetadata().getName());\n+            return false;\n+        }\n+\n         List<V1Taint> taints = node.getSpec().getTaints();\n         if (CollectionsExt.isNullOrEmpty(taints)) {\n-            return !isFarzoneNode(node);\n+            logger.debug(\"Owned by fenzo (no taint set): {}\", node.getMetadata().getName());\n+            return true;\n         }\n \n+        Set<String> toleratedTaints = mesosConfiguration.getFenzoTaintTolerations();\n+        for (V1Taint taint : taints) {\n+            String taintKey = taint.getKey();\n+            if (!taintKey.equals(KubeConstants.TAINT_SCHEDULER) && !toleratedTaints.contains(taintKey)) {\n+                logger.debug(\"Not owned by fenzo (non tolerable taint found): nodeId={}, taintKey={}\", node.getMetadata().getName(), taintKey);\n+                return false;\n+            }\n+        }\n+\n+        logger.debug(\"Owned by fenzo (all taints tolerated): {}\", node.getMetadata().getName());\n+        return true;\n+    }\n+\n+    /**\n+     * Returns true if there is {@link KubeConstants#TAINT_SCHEDULER} taint with {@link KubeConstants#TAINT_SCHEDULER_VALUE_FENZO} value\n+     * or this taint is missing (no explicit scheduler taint == Fenzo).", "originalCommit": "d1c89daf539e57d7f7c2d3a5eb52f4e1f2f98b6e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM2MjY1OQ==", "url": "https://github.com/Netflix/titus-control-plane/pull/817#discussion_r395362659", "bodyText": "Yes, this is correct. If there is no taint, we assume the node belongs to fenzo (see the comment).\nWe do not have unit tests for this class. I tested this extensively manually on a running system.", "author": "tbak", "createdAt": "2020-03-19T22:50:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM0NjU2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM3NjQwNQ==", "url": "https://github.com/Netflix/titus-control-plane/pull/817#discussion_r395376405", "bodyText": "Let me rephrase: the comment here is not consistent with the behavior of the code on line 396. If a Node has taints, but none of them are KubeConstants.TAINT_SCHEDULER the return of this method will be false and the node will be considered not owned by Fenzo, which is the opposite of what the javadoc says.", "author": "fabiokung", "createdAt": "2020-03-19T23:34:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM0NjU2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM3NjcwMw==", "url": "https://github.com/Netflix/titus-control-plane/pull/817#discussion_r395376703", "bodyText": "If what I said is correct and I'm not missing anything, one more argument in favor of having a unit test for the behavior here (how taints are being used and expected).", "author": "fabiokung", "createdAt": "2020-03-19T23:35:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM0NjU2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQxMDI0Nw==", "url": "https://github.com/Netflix/titus-control-plane/pull/817#discussion_r395410247", "bodyText": "It is a bug. I am adding a unit test for this function.", "author": "tbak", "createdAt": "2020-03-20T02:05:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM0NjU2OQ=="}], "type": "inlineReview"}, {"oid": "2b2a07ca22ba9769d122c2a81906c3bc8a18a095", "url": "https://github.com/Netflix/titus-control-plane/commit/2b2a07ca22ba9769d122c2a81906c3bc8a18a095", "message": "Bug fix", "committedDate": "2020-03-20T15:36:59Z", "type": "commit"}]}