{"pr_number": 754, "pr_title": "ManyReconciler refactoring", "pr_createdAt": "2020-01-31T23:31:23Z", "pr_url": "https://github.com/Netflix/titus-control-plane/pull/754", "timeline": [{"oid": "14eb9c06c8fb90e9bf094c48d53548d21bb714ba", "url": "https://github.com/Netflix/titus-control-plane/commit/14eb9c06c8fb90e9bf094c48d53548d21bb714ba", "message": "ManyReconciler refactoring\n\n(metrics, Reactor scheduler handling)", "committedDate": "2020-01-31T23:29:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc0ODQ4NQ==", "url": "https://github.com/Netflix/titus-control-plane/pull/754#discussion_r373748485", "bodyText": "Is there no way to get a pending count here?", "author": "andrew-leung", "createdAt": "2020-02-01T01:44:35Z", "path": "titus-common/src/main/java/com/netflix/titus/common/framework/simplereconciler/internal/DefaultManyReconciler.java", "diffHunk": "@@ -144,14 +148,19 @@ public DefaultManyReconciler(\n                     executor.close();\n                 }\n             }\n-        }).publishOn(notificationScheduler);\n+        }).publishOn(notificationSchedulerRef.get());\n     }\n \n     @Override\n     public Mono<Void> close() {\n         return Mono.defer(() -> {\n             stateRef.compareAndSet(ReconcilerState.Running, ReconcilerState.Closing);\n-            return closedProcessor;\n+\n+            return closedProcessor.doFinally(signal -> {\n+                reconcilerSchedulerRef.close();\n+                // TODO There may be pending notifications, so we have to delay the actual close. There must be a better solution than timer.", "originalCommit": "14eb9c06c8fb90e9bf094c48d53548d21bb714ba", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE4Mzk5Mg==", "url": "https://github.com/Netflix/titus-control-plane/pull/754#discussion_r374183992", "bodyText": "Yes, we could do it but it would be a bit more complicated. I will fix that when working again on this code.", "author": "tbak", "createdAt": "2020-02-03T15:55:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc0ODQ4NQ=="}], "type": "inlineReview"}]}