{"pr_number": 807, "pr_title": "Support Kube scheduler zone balancing", "pr_createdAt": "2020-03-12T21:57:59Z", "pr_url": "https://github.com/Netflix/titus-control-plane/pull/807", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk0NDA1OA==", "url": "https://github.com/Netflix/titus-control-plane/pull/807#discussion_r391944058", "bodyText": "minor: configurable", "author": "fabiokung", "createdAt": "2020-03-12T22:43:10Z", "path": "titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/direct/DefaultTaskToPodConverter.java", "diffHunk": "@@ -81,6 +84,12 @@\n     private static final String ARN_SUFFIX = \":role/\";\n     private static final Pattern IAM_PROFILE_RE = Pattern.compile(ARN_PREFIX + \"(\\\\d+)\" + ARN_SUFFIX + \"\\\\S+\");\n \n+    /**\n+     * Max allowed skew for zone load balancing as a soft constraint. As we do not want to prevent placement in any\n+     * case, it must be >= max job size.\n+     */\n+    private static final int SOFT_MAX_SKEW = 100_000;", "originalCommit": "3e5cf7916b19bbdc515e223ec5c69bed12d37942", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk0NzAxMg==", "url": "https://github.com/Netflix/titus-control-plane/pull/807#discussion_r391947012", "bodyText": "It is set to a very high value so it is always larger than any job.\nWould you like to make it configurable, in case we have such big jobs, or to actually have a skew < job size. In the latter case, it should be computed as a % of desired job size.", "author": "tbak", "createdAt": "2020-03-12T22:52:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk0NDA1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk0NzYzOQ==", "url": "https://github.com/Netflix/titus-control-plane/pull/807#discussion_r391947639", "bodyText": "just a minor quality of life change in case we observe skew issues when running this and need to tweak it. Given we are using this with .whenUnsatisfiable(\"ScheduleAnyway\") maybe it doesn't matter much", "author": "fabiokung", "createdAt": "2020-03-12T22:54:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk0NDA1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk0NDQ1OA==", "url": "https://github.com/Netflix/titus-control-plane/pull/807#discussion_r391944458", "bodyText": "nice \ud83d\udc4f", "author": "fabiokung", "createdAt": "2020-03-12T22:44:32Z", "path": "titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/direct/DefaultTaskToPodConverter.java", "diffHunk": "@@ -331,4 +341,24 @@ private void setJobAcceptedTimestamp(TitanProtos.ContainerInfo.Builder container\n                 .build()\n         ).collect(Collectors.toList());\n     }\n+\n+    private List<V1TopologySpreadConstraint> buildTopologySpreadConstraints(Job<?> job) {\n+        boolean hard = Boolean.parseBoolean(job.getJobDescriptor().getContainer().getHardConstraints().get(JobConstraints.ZONE_BALANCE));\n+        boolean soft = Boolean.parseBoolean(job.getJobDescriptor().getContainer().getSoftConstraints().get(JobConstraints.ZONE_BALANCE));\n+        if (!hard && !soft) {\n+            return Collections.emptyList();\n+        }\n+\n+        V1TopologySpreadConstraint constraint = new V1TopologySpreadConstraint()\n+                .topologyKey(KubeConstants.NODE_LABEL_ZONE)\n+                .labelSelector(new V1LabelSelector().matchLabels(Collections.singletonMap(KubeConstants.POD_LABEL_JOB_ID, job.getId())));\n+\n+        if (hard) {\n+            constraint.maxSkew(1).whenUnsatisfiable(\"DoNotSchedule\");\n+        } else {\n+            constraint.maxSkew(SOFT_MAX_SKEW).whenUnsatisfiable(\"ScheduleAnyway\");\n+        }", "originalCommit": "3e5cf7916b19bbdc515e223ec5c69bed12d37942", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "214f2bfc9aea7901aee3ff1ac31089ff9d3ee06e", "url": "https://github.com/Netflix/titus-control-plane/commit/214f2bfc9aea7901aee3ff1ac31089ff9d3ee06e", "message": "Support Kube scheduler zone balancing", "committedDate": "2020-03-12T23:07:39Z", "type": "commit"}, {"oid": "51515835260fd2cd9aa8e4d96027603e76176fb6", "url": "https://github.com/Netflix/titus-control-plane/commit/51515835260fd2cd9aa8e4d96027603e76176fb6", "message": "Dependency lock update", "committedDate": "2020-03-12T23:17:59Z", "type": "commit"}, {"oid": "51515835260fd2cd9aa8e4d96027603e76176fb6", "url": "https://github.com/Netflix/titus-control-plane/commit/51515835260fd2cd9aa8e4d96027603e76176fb6", "message": "Dependency lock update", "committedDate": "2020-03-12T23:17:59Z", "type": "forcePushed"}]}