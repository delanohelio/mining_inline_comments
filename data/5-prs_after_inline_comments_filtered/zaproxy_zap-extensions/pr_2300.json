{"pr_number": 2300, "pr_title": "Add support for selenium scripts", "pr_createdAt": "2020-02-10T16:54:46Z", "pr_url": "https://github.com/zaproxy/zap-extensions/pull/2300", "timeline": [{"oid": "601171ea804fb9619bba305796900989c2d288e1", "url": "https://github.com/zaproxy/zap-extensions/commit/601171ea804fb9619bba305796900989c2d288e1", "message": "Add support for selenium scripts\n\nSigned-off-by: Simon Bennetts <psiinon@gmail.com>", "committedDate": "2020-02-12T17:40:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0OTk2Mw==", "url": "https://github.com/zaproxy/zap-extensions/pull/2300#discussion_r379849963", "bodyText": "Could be moved to an instance variable to avoid getting the extension each time in getWebDriverImpl.", "author": "thc202", "createdAt": "2020-02-15T19:09:14Z", "path": "addOns/selenium/src/main/java/org/zaproxy/zap/extension/selenium/ExtensionSelenium.java", "diffHunk": "@@ -187,6 +193,26 @@ public void hook(ExtensionHook extensionHook) {\n         }\n \n         extensionHook.addApiImplementor(seleniumApi);\n+\n+        ExtensionScript extScript =", "originalCommit": "601171ea804fb9619bba305796900989c2d288e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkyMjAwMA==", "url": "https://github.com/zaproxy/zap-extensions/pull/2300#discussion_r400922000", "bodyText": "Done", "author": "psiinon", "createdAt": "2020-03-31T13:40:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0OTk2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0OTk3MA==", "url": "https://github.com/zaproxy/zap-extensions/pull/2300#discussion_r379849970", "bodyText": "Needs to be removed on unload.", "author": "thc202", "createdAt": "2020-02-15T19:09:22Z", "path": "addOns/selenium/src/main/java/org/zaproxy/zap/extension/selenium/ExtensionSelenium.java", "diffHunk": "@@ -187,6 +193,26 @@ public void hook(ExtensionHook extensionHook) {\n         }\n \n         extensionHook.addApiImplementor(seleniumApi);\n+\n+        ExtensionScript extScript =\n+                Control.getSingleton().getExtensionLoader().getExtension(ExtensionScript.class);\n+        if (extScript != null) {\n+            extScript.registerScriptType(", "originalCommit": "601171ea804fb9619bba305796900989c2d288e1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0OTk3Ng==", "url": "https://github.com/zaproxy/zap-extensions/pull/2300#discussion_r379849976", "bodyText": "We should also handle/catch the Exception here.", "author": "thc202", "createdAt": "2020-02-15T19:09:31Z", "path": "addOns/selenium/src/main/java/org/zaproxy/zap/extension/selenium/ExtensionSelenium.java", "diffHunk": "@@ -634,9 +660,46 @@ private WebDriver getWebDriverImpl(\n         if (proxyAddress == null) {\n             return webDriverProviders.get(providedBrowser.getProviderId()).getWebDriver(requester);\n         }\n-        return webDriverProviders\n-                .get(providedBrowser.getProviderId())\n-                .getWebDriver(requester, proxyAddress, proxyPort);\n+        WebDriver wd =\n+                webDriverProviders\n+                        .get(providedBrowser.getProviderId())\n+                        .getWebDriver(requester, proxyAddress, proxyPort);\n+        ExtensionScript extScript =\n+                Control.getSingleton().getExtensionLoader().getExtension(ExtensionScript.class);\n+        if (extScript != null) {\n+            List<ScriptWrapper> scripts = extScript.getScripts(SCRIPT_TYPE_SELENIUM);\n+            for (ScriptWrapper script : scripts) {\n+                try {\n+                    if (script.isEnabled()) {\n+                        SeleniumScript s = extScript.getInterface(script, SeleniumScript.class);\n+\n+                        if (s != null) {\n+                            new Thread(\"ZAP-selenium-script\") {\n+                                @Override\n+                                public void run() {\n+                                    s.browserLaunched(", "originalCommit": "601171ea804fb9619bba305796900989c2d288e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg0NjA0Mg==", "url": "https://github.com/zaproxy/zap-extensions/pull/2300#discussion_r400846042", "bodyText": "Doesnt the outer try-catch statement do this?", "author": "psiinon", "createdAt": "2020-03-31T11:43:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0OTk3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg1MjE5MQ==", "url": "https://github.com/zaproxy/zap-extensions/pull/2300#discussion_r400852191", "bodyText": "No, this is already in the thread.", "author": "thc202", "createdAt": "2020-03-31T11:54:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0OTk3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkyMjE4Ng==", "url": "https://github.com/zaproxy/zap-extensions/pull/2300#discussion_r400922186", "bodyText": "Good point. Now done.", "author": "psiinon", "createdAt": "2020-03-31T13:41:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0OTk3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0OTk5OA==", "url": "https://github.com/zaproxy/zap-extensions/pull/2300#discussion_r379849998", "bodyText": "IMO we should use a parameter object (or add a \"utils\" param) to allow to add more state/behaviour without breaking compatibility.", "author": "thc202", "createdAt": "2020-02-15T19:10:12Z", "path": "addOns/selenium/src/main/java/org/zaproxy/zap/extension/selenium/SeleniumScript.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.selenium;\n+\n+import org.openqa.selenium.WebDriver;\n+\n+/** A script run whenever a browser is launched using selenium. */\n+public interface SeleniumScript {\n+\n+    void browserLaunched(", "originalCommit": "601171ea804fb9619bba305796900989c2d288e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkyMjM4NA==", "url": "https://github.com/zaproxy/zap-extensions/pull/2300#discussion_r400922384", "bodyText": "Yeah, good thinking - done.", "author": "psiinon", "createdAt": "2020-03-31T13:41:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0OTk5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg1MDAwNg==", "url": "https://github.com/zaproxy/zap-extensions/pull/2300#discussion_r379850006", "bodyText": "browserId", "author": "thc202", "createdAt": "2020-02-15T19:10:14Z", "path": "addOns/selenium/src/main/java/org/zaproxy/zap/extension/selenium/SeleniumScript.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.selenium;\n+\n+import org.openqa.selenium.WebDriver;\n+\n+/** A script run whenever a browser is launched using selenium. */\n+public interface SeleniumScript {\n+\n+    void browserLaunched(\n+            WebDriver wd,\n+            int requester,\n+            String providedBrowserId,", "originalCommit": "601171ea804fb9619bba305796900989c2d288e1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg1MDgxOQ==", "url": "https://github.com/zaproxy/zap-extensions/pull/2300#discussion_r379850819", "bodyText": "Should the scripts be called for these browsers too?", "author": "thc202", "createdAt": "2020-02-15T19:25:03Z", "path": "addOns/selenium/src/main/java/org/zaproxy/zap/extension/selenium/ExtensionSelenium.java", "diffHunk": "@@ -634,9 +660,46 @@ private WebDriver getWebDriverImpl(\n         if (proxyAddress == null) {\n             return webDriverProviders.get(providedBrowser.getProviderId()).getWebDriver(requester);", "originalCommit": "601171ea804fb9619bba305796900989c2d288e1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "043eb64d5f3a4dfc1a4a6b630156e2a0e561ac0a", "url": "https://github.com/zaproxy/zap-extensions/commit/043eb64d5f3a4dfc1a4a6b630156e2a0e561ac0a", "message": "Add support for selenium scripts\n\nSigned-off-by: Simon Bennetts <psiinon@gmail.com>", "committedDate": "2020-03-31T13:29:18Z", "type": "forcePushed"}, {"oid": "1a12b17e990eb49b167bd7430694bd531f302f98", "url": "https://github.com/zaproxy/zap-extensions/commit/1a12b17e990eb49b167bd7430694bd531f302f98", "message": "Add support for selenium scripts\n\nSigned-off-by: Simon Bennetts <psiinon@gmail.com>", "committedDate": "2020-03-31T13:34:50Z", "type": "commit"}, {"oid": "1a12b17e990eb49b167bd7430694bd531f302f98", "url": "https://github.com/zaproxy/zap-extensions/commit/1a12b17e990eb49b167bd7430694bd531f302f98", "message": "Add support for selenium scripts\n\nSigned-off-by: Simon Bennetts <psiinon@gmail.com>", "committedDate": "2020-03-31T13:34:50Z", "type": "forcePushed"}, {"oid": "b4f076eb156893cd0e9a363639171ff8d8947a4e", "url": "https://github.com/zaproxy/zap-extensions/commit/b4f076eb156893cd0e9a363639171ff8d8947a4e", "message": "Merge remote-tracking branch 'upstream/master' into selenium/scripts\n\nConflicts:\n\taddOns/selenium/CHANGELOG.md", "committedDate": "2020-03-31T14:08:20Z", "type": "commit"}, {"oid": "5b2a8401af84896e9cff16e8e3dec60c0e988ec4", "url": "https://github.com/zaproxy/zap-extensions/commit/5b2a8401af84896e9cff16e8e3dec60c0e988ec4", "message": "Added waitForURL\n\nSigned-off-by: Simon Bennetts <psiinon@gmail.com>", "committedDate": "2020-03-31T15:11:50Z", "type": "forcePushed"}, {"oid": "db60c527ba6b1a65e020c2a28ada1fb210997b46", "url": "https://github.com/zaproxy/zap-extensions/commit/db60c527ba6b1a65e020c2a28ada1fb210997b46", "message": "Added waitForURL\n\nSigned-off-by: Simon Bennetts <psiinon@gmail.com>", "committedDate": "2020-03-31T15:14:13Z", "type": "forcePushed"}, {"oid": "05787eb52842456478a550520ec03f00d9245e45", "url": "https://github.com/zaproxy/zap-extensions/commit/05787eb52842456478a550520ec03f00d9245e45", "message": "Added waitForURL\n\nSigned-off-by: Simon Bennetts <psiinon@gmail.com>", "committedDate": "2020-03-31T15:16:01Z", "type": "forcePushed"}, {"oid": "120607e5b6cd69858b384a0891596931900c77d9", "url": "https://github.com/zaproxy/zap-extensions/commit/120607e5b6cd69858b384a0891596931900c77d9", "message": "Added waitForURL\n\nSigned-off-by: Simon Bennetts <psiinon@gmail.com>", "committedDate": "2020-03-31T15:24:03Z", "type": "forcePushed"}, {"oid": "486a257cbb04ff7b34b851356413dca8e0962cef", "url": "https://github.com/zaproxy/zap-extensions/commit/486a257cbb04ff7b34b851356413dca8e0962cef", "message": "Added waitForURL\n\nSigned-off-by: Simon Bennetts <psiinon@gmail.com>", "committedDate": "2020-03-31T15:26:51Z", "type": "forcePushed"}, {"oid": "bc4ec2f0bcfca2a43ecbc6cc75ad6d340847e17f", "url": "https://github.com/zaproxy/zap-extensions/commit/bc4ec2f0bcfca2a43ecbc6cc75ad6d340847e17f", "message": "Added waitForURL\n\nSigned-off-by: Simon Bennetts <psiinon@gmail.com>", "committedDate": "2020-03-31T15:32:03Z", "type": "commit"}, {"oid": "bc4ec2f0bcfca2a43ecbc6cc75ad6d340847e17f", "url": "https://github.com/zaproxy/zap-extensions/commit/bc4ec2f0bcfca2a43ecbc6cc75ad6d340847e17f", "message": "Added waitForURL\n\nSigned-off-by: Simon Bennetts <psiinon@gmail.com>", "committedDate": "2020-03-31T15:32:03Z", "type": "forcePushed"}]}