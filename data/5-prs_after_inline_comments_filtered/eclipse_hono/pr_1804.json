{"pr_number": 1804, "pr_title": "[#1791] Allow hashed passwords credentials with a whitelist of algorithms", "pr_createdAt": "2020-03-03T14:42:49Z", "pr_url": "https://github.com/eclipse/hono/pull/1804", "timeline": [{"oid": "b61473b0e82a6ec8292602d2116dc8c9f8450ae3", "url": "https://github.com/eclipse/hono/commit/b61473b0e82a6ec8292602d2116dc8c9f8450ae3", "message": "[#1791] Allow already hashed passwords credentials in the device registry with a whitelist of allowed hashing algorithms\n\nSigned-off-by: Jean-Baptiste Trystram <jbtrystram@redhat.com>", "committedDate": "2020-03-03T14:45:14Z", "type": "forcePushed"}, {"oid": "c248f2fccb99d3e6d72869e6751e4b0baaac2175", "url": "https://github.com/eclipse/hono/commit/c248f2fccb99d3e6d72869e6751e4b0baaac2175", "message": "[#1791] Allow already hashed passwords credentials in the device registry with a whitelist of allowed hashing algorithms\n\nSigned-off-by: Jean-Baptiste Trystram <jbtrystram@redhat.com>", "committedDate": "2020-03-03T15:29:40Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ5MTQ4NA==", "url": "https://github.com/eclipse/hono/pull/1804#discussion_r387491484", "bodyText": "I would use a HashSet, rather than an array.", "author": "ctron", "createdAt": "2020-03-04T07:37:27Z", "path": "services/device-registry-file/src/main/java/org/eclipse/hono/deviceregistry/file/AbstractFileBasedRegistryConfigProperties.java", "diffHunk": "@@ -31,6 +31,7 @@\n     private boolean modificationEnabled = true;\n     private boolean startEmpty = false;\n     private int cacheMaxAge = DEFAULT_MAX_AGE_SECONDS;\n+    private String[] hashAlgorithmsWhitelist = {};", "originalCommit": "c248f2fccb99d3e6d72869e6751e4b0baaac2175", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ5MzE0OQ==", "url": "https://github.com/eclipse/hono/pull/1804#discussion_r387493149", "bodyText": "An array is populated without extra work by springboot from a YAML list, or with comma separated values in an environment variable :)\nThat said, the setter method could convert the array to a HashSet.", "author": "jbtrystram", "createdAt": "2020-03-04T07:42:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ5MTQ4NA=="}], "type": "inlineReview"}, {"oid": "3f31de9f66853cd733185ccd40015a295489c616", "url": "https://github.com/eclipse/hono/commit/3f31de9f66853cd733185ccd40015a295489c616", "message": "[#1791] Allow already hashed passwords credentials in the device registry with a whitelist of allowed hashing algorithms\n\nSigned-off-by: Jean-Baptiste Trystram <jbtrystram@redhat.com>", "committedDate": "2020-03-04T08:40:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzUxNzcxMA==", "url": "https://github.com/eclipse/hono/pull/1804#discussion_r387517710", "bodyText": "@ctron WDYT ?", "author": "jbtrystram", "createdAt": "2020-03-04T08:41:12Z", "path": "services/device-registry-file/src/main/java/org/eclipse/hono/deviceregistry/file/AbstractFileBasedRegistryConfigProperties.java", "diffHunk": "@@ -164,4 +168,38 @@ public final boolean isStartEmpty() {\n     public final void setStartEmpty(final boolean flag) {\n         this.startEmpty = flag;\n     }\n+\n+    /**\n+     * Get the list of authorised hashing algorithms for already hashed passwords.\n+     * The device registry will not accept credentials using a hashing\n+     * algorithm that is not present in that list.\n+     * If the list is empty, the device registry will accept any hashing algorithm.\n+     * <p>\n+     * Default value is an empty HashSet.\n+     *\n+     * @return The list of authorized algorithms.\n+     */\n+    public Set<String> getHashAlgorithmsWhitelist() {\n+        return hashAlgorithmsWhitelist;\n+    }\n+\n+    /**\n+     * Set the list of authorised hashing algorithms for already hashed passwords.\n+     * The device registry will not accept credentials using a hashing\n+     * algorithm that is not present in that list.\n+     * <p>\n+     * The default value is empty.\n+     *\n+     * @param hashAlgorithmsWhitelist The list of authorized algorithms.\n+     */\n+    public void setHashAlgorithmsWhitelist(final String[] hashAlgorithmsWhitelist) {\n+\n+        final HashSet<String> set = new HashSet<>();\n+\n+        for (String s : hashAlgorithmsWhitelist) {\n+            set.add(s);\n+        }\n+\n+        this.hashAlgorithmsWhitelist = set;", "originalCommit": "3f31de9f66853cd733185ccd40015a295489c616", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3ed5bdea5c94dca2f8d9d948b8ca1f7516415b4c", "url": "https://github.com/eclipse/hono/commit/3ed5bdea5c94dca2f8d9d948b8ca1f7516415b4c", "message": "[#1791] Allow already hashed passwords credentials in the device registry with a whitelist of allowed hashing algorithms\n\nSigned-off-by: Jean-Baptiste Trystram <jbtrystram@redhat.com>", "committedDate": "2020-03-04T09:01:39Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ0ODEzMg==", "url": "https://github.com/eclipse/hono/pull/1804#discussion_r388448132", "bodyText": "We should probably use set instead of array here as well?", "author": "dejanb", "createdAt": "2020-03-05T17:29:41Z", "path": "services/device-registry-file/src/main/java/org/eclipse/hono/deviceregistry/file/AbstractFileBasedRegistryConfigProperties.java", "diffHunk": "@@ -164,4 +168,34 @@ public final boolean isStartEmpty() {\n     public final void setStartEmpty(final boolean flag) {\n         this.startEmpty = flag;\n     }\n+\n+    /**\n+     * Get the list of authorised hashing algorithms for already hashed passwords.\n+     * The device registry will not accept credentials using a hashing\n+     * algorithm that is not present in that list.\n+     * If the list is empty, the device registry will accept any hashing algorithm.\n+     * <p>\n+     * Default value is an empty HashSet.\n+     *\n+     * @return The list of authorized algorithms.\n+     */\n+    public Set<String> getHashAlgorithmsWhitelist() {\n+        return hashAlgorithmsWhitelist;\n+    }\n+\n+    /**\n+     * Set the list of authorised hashing algorithms for already hashed passwords.\n+     * The device registry will not accept credentials using a hashing\n+     * algorithm that is not present in that list.\n+     * <p>\n+     * The default value is empty.\n+     *\n+     * @param hashAlgorithmsWhitelist The list of authorized algorithms.\n+     */\n+    public void setHashAlgorithmsWhitelist(final String[] hashAlgorithmsWhitelist) {", "originalCommit": "3ed5bdea5c94dca2f8d9d948b8ca1f7516415b4c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc1MzY3OA==", "url": "https://github.com/eclipse/hono/pull/1804#discussion_r388753678", "bodyText": "springboot create an array from a YAML list, or comma separated values in an environment variable :)", "author": "jbtrystram", "createdAt": "2020-03-06T07:45:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ0ODEzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ0ODk3OA==", "url": "https://github.com/eclipse/hono/pull/1804#discussion_r388448978", "bodyText": "This should be checked before containsOnlySecretId() method call.", "author": "dejanb", "createdAt": "2020-03-05T17:31:12Z", "path": "services/device-registry-file/src/main/java/org/eclipse/hono/deviceregistry/file/FileBasedCredentialsService.java", "diffHunk": "@@ -629,6 +631,33 @@ protected void checkCredential(final CommonCredential credential) {\n         }\n     }\n \n+    /**\n+     * Verifies that a hash algorithm in the supplied PasswordSecret is authorised.\n+     * <p>\n+     * The value must be present in the whitelist provided in the configuration\n+     * by {@link #getHashAlgorithmsWhitelist()}\n+     * If the whitelist is empty, any value will be accepted.\n+     *\n+     * @param secret The PasswordSecret object to verify.\n+     * @throws IllegalStateException if the hash algorithm provided in the PasswordSecret is not in the whitelist.\n+     */\n+    protected void verifyHashAlgorithmIsAuthorised(final PasswordSecret secret){\n+\n+        if (getHashAlgorithmsWhitelist().isEmpty()\n+            || secret.containsOnlySecretId()) {\n+            return;\n+        }\n+\n+        Objects.requireNonNull(secret);", "originalCommit": "3ed5bdea5c94dca2f8d9d948b8ca1f7516415b4c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ1NzA1MA==", "url": "https://github.com/eclipse/hono/pull/1804#discussion_r388457050", "bodyText": "formatting ... space inside if() statement.", "author": "dejanb", "createdAt": "2020-03-05T17:45:43Z", "path": "services/device-registry-file/src/main/java/org/eclipse/hono/deviceregistry/file/FileBasedCredentialsService.java", "diffHunk": "@@ -629,6 +631,33 @@ protected void checkCredential(final CommonCredential credential) {\n         }\n     }\n \n+    /**\n+     * Verifies that a hash algorithm in the supplied PasswordSecret is authorised.\n+     * <p>\n+     * The value must be present in the whitelist provided in the configuration\n+     * by {@link #getHashAlgorithmsWhitelist()}\n+     * If the whitelist is empty, any value will be accepted.\n+     *\n+     * @param secret The PasswordSecret object to verify.\n+     * @throws IllegalStateException if the hash algorithm provided in the PasswordSecret is not in the whitelist.\n+     */\n+    protected void verifyHashAlgorithmIsAuthorised(final PasswordSecret secret){\n+\n+        if (getHashAlgorithmsWhitelist().isEmpty()\n+            || secret.containsOnlySecretId()) {\n+            return;\n+        }\n+\n+        Objects.requireNonNull(secret);\n+        final String hashAlgorithm = secret.getHashFunction();\n+        Objects.requireNonNull(hashAlgorithm);\n+\n+        if ( getHashAlgorithmsWhitelist().contains(hashAlgorithm)) {", "originalCommit": "3ed5bdea5c94dca2f8d9d948b8ca1f7516415b4c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "383a043eeb8449c7205d2a8446e3d688b8522fad", "url": "https://github.com/eclipse/hono/commit/383a043eeb8449c7205d2a8446e3d688b8522fad", "message": "[#1791] Allow already hashed passwords credentials in the device registry with a whitelist of allowed hashing algorithms\n\nSigned-off-by: Jean-Baptiste Trystram <jbtrystram@redhat.com>", "committedDate": "2020-03-06T08:01:32Z", "type": "forcePushed"}, {"oid": "206327dc1d53ab7bdb4a738ba42fc44b83d1b298", "url": "https://github.com/eclipse/hono/commit/206327dc1d53ab7bdb4a738ba42fc44b83d1b298", "message": "[#1791] Allow already hashed passwords credentials in the device registry with a whitelist of allowed hashing algorithms\n\nSigned-off-by: Jean-Baptiste Trystram <jbtrystram@redhat.com>", "committedDate": "2020-03-06T08:01:52Z", "type": "commit"}, {"oid": "206327dc1d53ab7bdb4a738ba42fc44b83d1b298", "url": "https://github.com/eclipse/hono/commit/206327dc1d53ab7bdb4a738ba42fc44b83d1b298", "message": "[#1791] Allow already hashed passwords credentials in the device registry with a whitelist of allowed hashing algorithms\n\nSigned-off-by: Jean-Baptiste Trystram <jbtrystram@redhat.com>", "committedDate": "2020-03-06T08:01:52Z", "type": "forcePushed"}]}