{"pr_number": 1861, "pr_title": "[#1860] Use unique adapter instance id per consumer factory", "pr_createdAt": "2020-03-29T17:31:04Z", "pr_url": "https://github.com/eclipse/hono/pull/1861", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM4NTA1OQ==", "url": "https://github.com/eclipse/hono/pull/1861#discussion_r401385059", "bodyText": "I do not really see why we need this additional constructor. In fact, I believe we once had one like this one but removed it because it was hard to make sure that the config props passed in are the same as the ones used for creating the connection factory. Also, HonoConnectionImpl(Vertx, ClientConfigProperties) seems to be doing the same thing as what you are doing in AbstractAdapterConfig or am I mistaken?", "author": "sophokles73", "createdAt": "2020-04-01T06:34:42Z", "path": "client/src/main/java/org/eclipse/hono/client/HonoConnection.java", "diffHunk": "@@ -82,6 +83,24 @@ static HonoConnection newConnection(final Vertx vertx, final ClientConfigPropert\n         return new HonoConnectionImpl(vertx, clientConfigProperties);\n     }\n \n+    /**\n+     * Creates a new connection using the default implementation.\n+     * <p>\n+     * <strong>Note:</strong> Instances of {@link ClientConfigProperties} are not thread safe and not immutable.\n+     * They must therefore not be modified after calling this method.\n+     *\n+     * @param vertx The vert.x instance to use.\n+     * @param connectionFactory The factory to use for creating an AMQP connection to the Hono server.\n+     * @param clientConfigProperties The client properties to use.\n+     * @return The newly created connection. Note that the underlying AMQP connection will not be established\n+     *         until one of its <em>connect</em> methods is invoked.\n+     * @throws NullPointerException if vertx or clientConfigProperties is {@code null}.\n+     */\n+    static HonoConnection newConnection(final Vertx vertx, final ConnectionFactory connectionFactory,\n+            final ClientConfigProperties clientConfigProperties) {\n+        return new HonoConnectionImpl(vertx, connectionFactory, clientConfigProperties);\n+    }\n+", "originalCommit": "f2b20a9f8d21b25205410a3cd26574bc389d1d89", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ2NjMxOA==", "url": "https://github.com/eclipse/hono/pull/1861#discussion_r401466318", "bodyText": "I liked the idea of having the adapterInstanceId also represented in the AMQP connection container-id advertised in the OPEN frame. So I wanted to keep that.\nBefore this PR, the adapterInstanceId / container-id UUID was initialized in the ClientConfigProperties. So, in order to have a unique adapterInstanceId per ProtocolAdapterCommandConsumerFactory, a new ClientConfigProperties instance was needed. This is somethat counterintuitive, therefore I opted for handling the container-id in the ConnectionFactory instead, using a new ConnectionFactory instance for each ProtocolAdapterCommandConsumerFactory instance.\nThis leads to the need for accessing the ConnectionFactory instance here:\n\n  \n    \n      hono/service-base/src/main/java/org/eclipse/hono/service/AbstractAdapterConfig.java\n    \n    \n        Lines 452 to 459\n      in\n      f2b20a9\n    \n    \n    \n    \n\n        \n          \n           public ProtocolAdapterCommandConsumerFactory commandConsumerFactory() { \n        \n\n        \n          \n               final ClientConfigProperties clientConfigProperties = commandConsumerFactoryConfig(); \n        \n\n        \n          \n               final ConnectionFactory connectionFactory = ConnectionFactory.newConnectionFactory(vertx(), clientConfigProperties); \n        \n\n        \n          \n               final HonoConnection connection = HonoConnection.newConnection(vertx(), connectionFactory, clientConfigProperties); \n        \n\n        \n          \n               // the container id contains a UUID therefore it can be used as a unique adapter instance id \n        \n\n        \n          \n               final String adapterInstanceId = connectionFactory.getContainerId(); \n        \n\n        \n          \n               return ProtocolAdapterCommandConsumerFactory.create(connection, adapterInstanceId); \n        \n\n        \n          \n           } \n        \n    \n  \n\n\nAn alternative would be adding a HonoConnection.getConnectionFactory() method, but I preferred the extra HonoConnection factory method.\nBut yes, I see your point about the config props passed in that factory method.\nAs a solution, I guess we could either\n\nremove the ClientConfigProperties param from HonoConnectionImpl(Vertx, ConnectionFactory, ClientConfigProperties) and the factory method (and adding ConnectionFactory.getConfig).\nintroduce HonoConnection.getConnectionFactory().\nor, deem all this not worth the effort and handle adapterInstanceId independent of the used container-id, keeping adapterInstanceId internal to the ProtocolAdapterCommandConsumerFactory instance.\n\nI think I would prefer the first option here - but would also be OK with the others. WDYT?", "author": "calohmn", "createdAt": "2020-04-01T09:09:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM4NTA1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU2MTQyMA==", "url": "https://github.com/eclipse/hono/pull/1861#discussion_r401561420", "bodyText": "I am not sure if I can follow. My understanding is that we need to make sure that a call to ProtocolAdapterCommandConsumerFactory.createCommandConsumer() creates a receiver link with a unique source address of the form command_internal/{unique_id}. Now we would like to use the container-id of the underlying connection as the unique_id, right? Can't we then simply keep the container-id in a field of HonoConnectionImpl and make it available via e.g. HonoConnection.getContainerId() in order to use it when establishing the receiver link?", "author": "sophokles73", "createdAt": "2020-04-01T12:01:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM4NTA1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY3Mjk1OQ==", "url": "https://github.com/eclipse/hono/pull/1861#discussion_r401672959", "bodyText": "Yes, that is also an option. I would let HonoConnection.getContainerId() call connectionFactory.getContainerId() then.\nI've amended the commit here accordingly.\nAs I don't see a sensible default implementation of the new HonoConnection.getContainerId() method, I've set up the changes to be for 1.3 only (also removing unused methods).\nFor 1.2.2, I'll create a separate PR then (#1871), using the approach where the ClientConfigProperties get copied to get a separate adapterInstanceId.", "author": "calohmn", "createdAt": "2020-04-01T14:46:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM4NTA1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM4NTY1Mg==", "url": "https://github.com/eclipse/hono/pull/1861#discussion_r401385652", "bodyText": "Is there a particular reason why you do not want to simply remove this method?", "author": "sophokles73", "createdAt": "2020-04-01T06:36:14Z", "path": "core/src/main/java/org/eclipse/hono/config/ClientConfigProperties.java", "diffHunk": "@@ -159,7 +159,11 @@ public final void setAmqpHostname(final String amqpHostname) {\n      * The identifier consists of the name returned by {@link #getName()} plus a UUID.\n      *\n      * @return The identifier.\n+     * @deprecated The preferred way to obtain the <em>container-id</em> for the AMQP connection is now via\n+     *             the connection factory, so that not necessarily all connections configured with this properties\n+     *             object get the same id, but rather only all connections of the same connection factory instance do.\n      */\n+    @Deprecated", "originalCommit": "f2b20a9f8d21b25205410a3cd26574bc389d1d89", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ0NzAxMg==", "url": "https://github.com/eclipse/hono/pull/1861#discussion_r401447012", "bodyText": "This is mainly for merging this commit as-is in 1.2.2. For 1.3, this method can then be removed, yes.", "author": "calohmn", "createdAt": "2020-04-01T08:37:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM4NTY1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU4NDQ3Mw==", "url": "https://github.com/eclipse/hono/pull/1861#discussion_r402584473", "bodyText": "Method is removed in the newest commit. For 1.2.2 there is a separate PR.", "author": "calohmn", "createdAt": "2020-04-02T20:16:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM4NTY1Mg=="}], "type": "inlineReview"}, {"oid": "1233efa7ac7bffae8b615733d8c504ffb85ba9dc", "url": "https://github.com/eclipse/hono/commit/1233efa7ac7bffae8b615733d8c504ffb85ba9dc", "message": "[#1860] Use unique adapter instance id per consumer factory.\n\nThis fixes Command & Control errors if the protocol adapter\nis configured with hono.app.maxInstances > 1.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>", "committedDate": "2020-04-01T14:25:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjE3MTczOQ==", "url": "https://github.com/eclipse/hono/pull/1861#discussion_r402171739", "bodyText": "Is this necessarily the case? I would rather document the requirement regarding the ID's uniqueness instead of describing (and thus defining) how it needs to be created. WDYT?", "author": "sophokles73", "createdAt": "2020-04-02T09:21:37Z", "path": "client/src/main/java/org/eclipse/hono/client/HonoConnection.java", "diffHunk": "@@ -230,10 +230,19 @@ static HonoConnection newConnection(final Vertx vertx, final ClientConfigPropert\n      *\n      * @return The remote container id or {@code null}.\n      */\n-    default String getRemoteContainer() {\n+    default String getRemoteContainerId() {\n         return \"N/A\";\n     }\n \n+    /**\n+     * Gets the container id as advertised to the peer.\n+     * <p>\n+     * The identifier consists of the name set in the configuration plus a UUID.", "originalCommit": "1233efa7ac7bffae8b615733d8c504ffb85ba9dc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc3Mzg5MA==", "url": "https://github.com/eclipse/hono/pull/1861#discussion_r402773890", "bodyText": "Right, I've adapted the javadoc accordingly.", "author": "calohmn", "createdAt": "2020-04-03T07:01:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjE3MTczOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjE3Mjc3MA==", "url": "https://github.com/eclipse/hono/pull/1861#discussion_r402172770", "bodyText": "just wondering: shouldn't this better return null by default? Otherwise, what purpose does it have to allow for null to be returned in the first place?", "author": "sophokles73", "createdAt": "2020-04-02T09:23:13Z", "path": "client/src/main/java/org/eclipse/hono/client/HonoConnection.java", "diffHunk": "@@ -230,10 +230,19 @@ static HonoConnection newConnection(final Vertx vertx, final ClientConfigPropert\n      *\n      * @return The remote container id or {@code null}.\n      */\n-    default String getRemoteContainer() {\n+    default String getRemoteContainerId() {", "originalCommit": "1233efa7ac7bffae8b615733d8c504ffb85ba9dc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU1NjM0Mg==", "url": "https://github.com/eclipse/hono/pull/1861#discussion_r402556342", "bodyText": "I think we can remove the default implementation here - it was only added for compatibility reasons.", "author": "calohmn", "createdAt": "2020-04-02T19:23:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjE3Mjc3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjE3NjE3Ng==", "url": "https://github.com/eclipse/hono/pull/1861#discussion_r402176176", "bodyText": "this means that all connections produced by this factory share the same UUID, right? Doesn't it make more sense that each connection has a distinct UUID?", "author": "sophokles73", "createdAt": "2020-04-02T09:28:52Z", "path": "core/src/main/java/org/eclipse/hono/connection/impl/ConnectionFactoryImpl.java", "diffHunk": "@@ -44,6 +45,7 @@\n public final class ConnectionFactoryImpl implements ConnectionFactory {\n \n     private static final Logger logger = LoggerFactory.getLogger(ConnectionFactoryImpl.class);\n+    private final String containerIdUuidPart = UUID.randomUUID().toString();", "originalCommit": "1233efa7ac7bffae8b615733d8c504ffb85ba9dc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc3OTM1Mg==", "url": "https://github.com/eclipse/hono/pull/1861#discussion_r402779352", "bodyText": "In practise I guess we mostly use one factory instance only for one HonoConnection instance, that would mean a HonoConnection instance gets a distinct UUID. But you are right, it would make more sense to enforce this by keeping the UUID in the HonoConnection.\nI don't think we need a distinct UUID per ProtonConnection - see my other comment.", "author": "calohmn", "createdAt": "2020-04-03T07:13:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjE3NjE3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI5NzIzNQ==", "url": "https://github.com/eclipse/hono/pull/1861#discussion_r402297235", "bodyText": "FMPOV each connection created by this factory should have its own unique container ID, e.g.\nprivate String getContainerId() {\n  return String.format(\"%s-%s-%s\", config.getName(), config.getServerRole(), UUID.randomUUID())\n}", "author": "sophokles73", "createdAt": "2020-04-02T13:06:28Z", "path": "core/src/main/java/org/eclipse/hono/connection/impl/ConnectionFactoryImpl.java", "diffHunk": "@@ -82,6 +84,11 @@ public String getName() {\n         return config.getName();\n     }\n \n+    @Override\n+    public String getContainerId() {\n+        return String.format(\"%s-%s\", getName(), containerIdUuidPart);\n+    }\n+", "originalCommit": "1233efa7ac7bffae8b615733d8c504ffb85ba9dc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ5OTE0NQ==", "url": "https://github.com/eclipse/hono/pull/1861#discussion_r402499145", "bodyText": "Letting ConnectionFactoryImpl.connect() assign a new random container ID to each newly created ProtonConnection will prevent us from using it as the adapterInstanceId though. Otherwise a reconnect on the HonoConnection used by the ProtocolAdapterCommandConsumerFactory would cause the adapterInstanceId to be different from the container id.\nSticking to the plan of keeping adapterInstanceId and container id the same would mean having the container id stored in the HonoConnectionImpl instance and setting that same id on every ProtonConnection instance that gets created via the HonoConnectionImpl instance.\nI think that is a valid approach - the HonoConnection only has one open ProtonConnection at a time, so there wouldn't be 2 open ProtonConnections with the same container id.\nTo do this, I would add a ConnectionFactory.connect method with an extra container id parameter.", "author": "calohmn", "createdAt": "2020-04-02T17:45:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI5NzIzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc3NjgxMg==", "url": "https://github.com/eclipse/hono/pull/1861#discussion_r402776812", "bodyText": "I've committed the aforementioned changes. I've also removed ConnectionFactory.getName()  - its javadoc stated that the name is used in the container id - that is not necessarily the case anymore because the container id is now provided as an extra param to ConnectionFactory.connect().", "author": "calohmn", "createdAt": "2020-04-03T07:08:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI5NzIzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI5ODg4Nw==", "url": "https://github.com/eclipse/hono/pull/1861#discussion_r402298887", "bodyText": "FMPOV this should return the (local) container ID of the ProtonConnection instead ...", "author": "sophokles73", "createdAt": "2020-04-02T13:09:02Z", "path": "client/src/main/java/org/eclipse/hono/client/impl/HonoConnectionImpl.java", "diffHunk": "@@ -1043,13 +1043,18 @@ public final void disconnect(final Handler<AsyncResult<Void>> completionHandler)\n      * @return The remote container id or {@code null}.\n      */\n     @Override\n-    public String getRemoteContainer() {\n+    public String getRemoteContainerId() {\n         if (!isConnectedInternal()) {\n             return null;\n         }\n         return connection.getRemoteContainer();\n     }\n \n+    @Override\n+    public String getContainerId() {\n+        return connectionFactory.getContainerId();", "originalCommit": "1233efa7ac7bffae8b615733d8c504ffb85ba9dc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU0MjM2MA==", "url": "https://github.com/eclipse/hono/pull/1861#discussion_r402542360", "bodyText": "Presuming that we want to use the same container ID for all ProtonConnections created by this HonoConnectionImpl (see discussion on the other comment):\nUsing connection.getContainer() would complicate things for the scenario here as that would only work if the connection has already been established. I would rather define HonoConnection.getContainerId() as the container id that has been or that will be advertised to the remote peer. The implementation would simply return the value of a new HonoConnectionImpl.containerId field here.", "author": "calohmn", "createdAt": "2020-04-02T18:58:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI5ODg4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI5OTYzNA==", "url": "https://github.com/eclipse/hono/pull/1861#discussion_r402299634", "bodyText": "this is not needed FMPOV", "author": "sophokles73", "createdAt": "2020-04-02T13:10:07Z", "path": "core/src/main/java/org/eclipse/hono/connection/ConnectionFactory.java", "diffHunk": "@@ -28,12 +30,23 @@\n public interface ConnectionFactory {\n \n     /**\n-     * Gets the name being indicated as the <em>container-id</em> in the client's AMQP <em>Open</em> frame.\n+     * Gets the name being indicated as part of the <em>container-id</em> in the client's AMQP <em>Open</em> frame.\n      *\n      * @return The name or {@code null} if no name has been set.\n      */\n     String getName();\n \n+    /**\n+     * Gets the identifier being indicated as the <em>container-id</em> in the client's AMQP <em>Open</em> frame.\n+     * <p>\n+     * The identifier consists of the name returned by {@link #getName()} plus a UUID.\n+     *\n+     * @return The identifier.\n+     */\n+    default String getContainerId() {\n+        return String.format(\"%s-%s\", getName(), UUID.randomUUID());\n+    }\n+", "originalCommit": "1233efa7ac7bffae8b615733d8c504ffb85ba9dc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc3NDQ1OA==", "url": "https://github.com/eclipse/hono/pull/1861#discussion_r402774458", "bodyText": "I've removed it.", "author": "calohmn", "createdAt": "2020-04-03T07:02:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI5OTYzNA=="}], "type": "inlineReview"}, {"oid": "cdfe78edcf01307624fca54ae0f2d0ff9fb171ad", "url": "https://github.com/eclipse/hono/commit/cdfe78edcf01307624fca54ae0f2d0ff9fb171ad", "message": "[#1860] Use unique adapter instance id per consumer factory.\n\nThis fixes Command & Control errors if the protocol adapter\nis configured with hono.app.maxInstances > 1.\nFurthermore, a single HonoConnection now uses the same\ncontainer id in the AMQP open frame every time the connection\nis reestablished.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>", "committedDate": "2020-04-02T20:12:02Z", "type": "forcePushed"}, {"oid": "67f821a20b5077dccaf4a10cb7bfcb1f0144e693", "url": "https://github.com/eclipse/hono/commit/67f821a20b5077dccaf4a10cb7bfcb1f0144e693", "message": "[#1860] Use unique adapter instance id per consumer factory.\n\nThis fixes Command & Control errors if the protocol adapter\nis configured with hono.app.maxInstances > 1.\nFurthermore, a single HonoConnection now uses the same\ncontainer id in the AMQP open frame every time the connection\nis reestablished.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>", "committedDate": "2020-04-08T08:50:17Z", "type": "forcePushed"}, {"oid": "59e0bcff6bdbea661d760e817b2dd638d3d2fab7", "url": "https://github.com/eclipse/hono/commit/59e0bcff6bdbea661d760e817b2dd638d3d2fab7", "message": "[#1860] Use unique adapter instance id per consumer factory.\n\nThis fixes Command & Control errors if the protocol adapter\nis configured with hono.app.maxInstances > 1.\nFurthermore, a single HonoConnection now uses the same\ncontainer id in the AMQP open frame every time the connection\nis reestablished.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>", "committedDate": "2020-04-08T10:32:08Z", "type": "commit"}, {"oid": "59e0bcff6bdbea661d760e817b2dd638d3d2fab7", "url": "https://github.com/eclipse/hono/commit/59e0bcff6bdbea661d760e817b2dd638d3d2fab7", "message": "[#1860] Use unique adapter instance id per consumer factory.\n\nThis fixes Command & Control errors if the protocol adapter\nis configured with hono.app.maxInstances > 1.\nFurthermore, a single HonoConnection now uses the same\ncontainer id in the AMQP open frame every time the connection\nis reestablished.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>", "committedDate": "2020-04-08T10:32:08Z", "type": "forcePushed"}]}