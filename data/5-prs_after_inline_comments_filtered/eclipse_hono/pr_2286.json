{"pr_number": 2286, "pr_title": "[#2267] Add AMQP 1.0 based DeviceConnectionClient implementation", "pr_createdAt": "2020-11-09T09:29:46Z", "pr_url": "https://github.com/eclipse/hono/pull/2286", "timeline": [{"oid": "0bc19a08136b18748fe0fb0623813604e02b7fec", "url": "https://github.com/eclipse/hono/commit/0bc19a08136b18748fe0fb0623813604e02b7fec", "message": "[#2267] Add AMQP 1.0 based DeviceConnectionClient implementation\n\nAdded transport protocol agnostic DeviceConnectionClient interface to\nthe adapter client module.\nAdded AMQP 1.0 based implementation which simply wraps the existing\nvertx-proton based \"legacy\" DeviceConnectionClientImpl.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch.io>", "committedDate": "2020-11-09T09:28:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTY4MTk0MA==", "url": "https://github.com/eclipse/hono/pull/2286#discussion_r519681940", "bodyText": "A few lines below, the exception text\n\nDevice Connection client factory is not set\n\nshould be replaced.\nRegarding the isConnected() method in general:\nIt doesn't actually do what it proclaims in the javadoc anymore. The method is currently used in the MQTT adapter and in the registerReadinessChecks method of this class. I guess the invocation in the MQTT adapter isn't needed anymore (a missing connection will result in a failed future when using the respective clients anyway).\nI think since it's then only invoked from registerReadinessChecks, isConnected() can be renamed and turned into a private method, or possibly inlined into registerReadinessChecks.", "author": "calohmn", "createdAt": "2020-11-09T09:55:39Z", "path": "service-base/src/main/java/org/eclipse/hono/service/AbstractProtocolAdapterBase.java", "diffHunk": "@@ -1010,9 +993,9 @@ protected void onCommandConnectionEstablished(final HonoConnection commandConnec\n                 .map(client -> client.isConnected())\n                 .orElseGet(() -> Future.failedFuture(new ServerErrorException(\n                         HttpURLConnection.HTTP_UNAVAILABLE, \"Command & Control client factory is not set\"))));\n-        connections.add(Optional.ofNullable(deviceConnectionClientFactory)\n+        connections.add(Optional.ofNullable(deviceConnectionClient)\n                 .map(client -> {\n-                    if (deviceConnectionClientFactory instanceof ConnectionLifecycle) {\n+                    if (deviceConnectionClient instanceof ConnectionLifecycle) {", "originalCommit": "0bc19a08136b18748fe0fb0623813604e02b7fec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc4Njg3OQ==", "url": "https://github.com/eclipse/hono/pull/2286#discussion_r519786879", "bodyText": "yes, I forgot about that. Great suggestion! I will remove the isConnected method ...", "author": "sophokles73", "createdAt": "2020-11-09T12:57:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTY4MTk0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTcwMDQ3NQ==", "url": "https://github.com/eclipse/hono/pull/2286#discussion_r519700475", "bodyText": "Device Connection service", "author": "calohmn", "createdAt": "2020-11-09T10:24:02Z", "path": "clients/adapter-amqp/src/main/java/org/eclipse/hono/adapter/client/command/amqp/ProtonBasedDeviceConnectionClient.java", "diffHunk": "@@ -0,0 +1,193 @@\n+/**\n+ * Copyright (c) 2020 Contributors to the Eclipse Foundation\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+\n+\n+package org.eclipse.hono.adapter.client.command.amqp;\n+\n+import java.time.Duration;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+import org.eclipse.hono.adapter.client.amqp.AbstractRequestResponseClient;\n+import org.eclipse.hono.adapter.client.command.DeviceConnectionClient;\n+import org.eclipse.hono.client.HonoConnection;\n+import org.eclipse.hono.client.SendMessageSampler.Factory;\n+import org.eclipse.hono.client.impl.CachingClientFactory;\n+import org.eclipse.hono.client.impl.CredentialsClientImpl;\n+import org.eclipse.hono.client.impl.DeviceConnectionClientImpl;\n+import org.eclipse.hono.config.ProtocolAdapterProperties;\n+import org.eclipse.hono.util.Constants;\n+import org.eclipse.hono.util.DeviceConnectionConstants;\n+import org.eclipse.hono.util.DeviceConnectionResult;\n+\n+import io.opentracing.SpanContext;\n+import io.vertx.core.Future;\n+import io.vertx.core.eventbus.Message;\n+import io.vertx.core.json.JsonObject;\n+\n+\n+/**\n+ * A ProtonBasedDeviceConnectionClient.\n+ *\n+ */\n+public class ProtonBasedDeviceConnectionClient extends AbstractRequestResponseClient<DeviceConnectionResult>\n+        implements DeviceConnectionClient {\n+\n+    private final CachingClientFactory<org.eclipse.hono.client.DeviceConnectionClient> clientFactory;\n+\n+    /**\n+     * Creates a new client for a connection.\n+     *\n+     * @param connection The connection to the Credentials service.", "originalCommit": "0bc19a08136b18748fe0fb0623813604e02b7fec", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "723a5e5dfed5fa7f65eefe989074ac909fb432df", "url": "https://github.com/eclipse/hono/commit/723a5e5dfed5fa7f65eefe989074ac909fb432df", "message": "Incorporate feedback\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch.io>", "committedDate": "2020-11-09T13:52:47Z", "type": "commit"}]}