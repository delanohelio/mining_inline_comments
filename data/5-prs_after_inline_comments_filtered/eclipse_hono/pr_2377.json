{"pr_number": 2377, "pr_title": "Invoke assertRegistration before creating command consumer", "pr_createdAt": "2020-12-22T07:35:02Z", "pr_url": "https://github.com/eclipse/hono/pull/2377", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzEzMjUxMw==", "url": "https://github.com/eclipse/hono/pull/2377#discussion_r547132513", "bodyText": "I am not sure if the open handler will be invoked with a failed AsyncResult in any case. However, the closeHandler and/or the detachHandler should contain an error that we can assert.", "author": "sophokles73", "createdAt": "2020-12-22T08:18:23Z", "path": "tests/src/test/java/org/eclipse/hono/tests/amqp/CommandAndControlAmqpIT.java", "diffHunk": "@@ -849,6 +849,45 @@ public void testSendCommandFailsForCommandNotAcknowledgedByDevice(\n         }\n     }\n \n+    /**\n+     * Verifies that the adapter immediately closes the command receiver link of a gateway wanting\n+     * to receive commands of a device that doesn't have the gateway in its via-gateways.\n+     *\n+     * @param ctx The vert.x test context.\n+     */\n+    @Test\n+    @Timeout(timeUnit = TimeUnit.SECONDS, value = 20)\n+    public void testCommandReceiverCreationFailsForDeviceNotInViaGateways(\n+            final VertxTestContext ctx) {\n+\n+        final AmqpCommandEndpointConfiguration endpointConfig = new AmqpCommandEndpointConfiguration(\n+                SubscriberRole.GATEWAY_FOR_SINGLE_DEVICE);\n+\n+        final String otherDeviceId = helper.getRandomDeviceId(tenantId);\n+        helper.registry\n+                .addDeviceToTenant(tenantId, deviceId, password)\n+                .compose(ok -> helper.registry.addDeviceToTenant(tenantId, otherDeviceId, password))\n+                .compose(ok -> connectToAdapter(IntegrationTestSupport.getUsername(deviceId, tenantId), password))\n+                .compose(conAck -> {\n+                    final Promise<Void> result = Promise.promise();\n+                    context.runOnContext(go -> {\n+                        final ProtonReceiver recv = connection\n+                                .createReceiver(endpointConfig.getSubscriptionAddress(tenantId, otherDeviceId));\n+                        recv.setQoS(ProtonQoS.AT_LEAST_ONCE);\n+                        recv.openHandler(openResult -> {\n+                            ctx.verify(() -> {\n+                                assertThat(openResult.failed()).isTrue();", "originalCommit": "abca0ff6922efd26f951e75796a725c1699505f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE1OTc1MA==", "url": "https://github.com/eclipse/hono/pull/2377#discussion_r547159750", "bodyText": "Yes, I think in theory the open handler could succeed with the receiver link remote source being null. I'm not sure whether that can actually happen during a somehow delayed test run.\nIn any case, I've adapted the tests here accordingly.", "author": "calohmn", "createdAt": "2020-12-22T09:15:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzEzMjUxMw=="}], "type": "inlineReview"}, {"oid": "2db14b93edf3b997b95659e3828061fa9f8de84c", "url": "https://github.com/eclipse/hono/commit/2db14b93edf3b997b95659e3828061fa9f8de84c", "message": "Invoke assertRegistration before creating command consumer.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>", "committedDate": "2020-12-22T09:11:25Z", "type": "commit"}, {"oid": "2db14b93edf3b997b95659e3828061fa9f8de84c", "url": "https://github.com/eclipse/hono/commit/2db14b93edf3b997b95659e3828061fa9f8de84c", "message": "Invoke assertRegistration before creating command consumer.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>", "committedDate": "2020-12-22T09:11:25Z", "type": "forcePushed"}]}