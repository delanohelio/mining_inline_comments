{"pr_number": 3352, "pr_title": "ARTEMIS-2990 - alway be getBiased and only publish complete records a\u2026", "pr_createdAt": "2020-11-20T11:58:55Z", "pr_url": "https://github.com/apache/activemq-artemis/pull/3352", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzczNDk0Mg==", "url": "https://github.com/apache/activemq-artemis/pull/3352#discussion_r527734942", "bodyText": "it's just a personal thing with code:\nif (actualAddress != null) {\n    return actualAddress;\n}\n// from now one, slow path\nIt's helpful for the brain to not further reading the rest of code, if not needed\nand it allows to pack the slow path code into a specific (synchronized) method too", "author": "franz1981", "createdAt": "2020-11-20T14:38:28Z", "path": "artemis-server/src/main/java/org/apache/activemq/artemis/core/postoffice/impl/WildcardAddressManager.java", "diffHunk": "@@ -175,36 +175,38 @@ public void clear() {\n       wildCardAddresses.clear();\n    }\n \n-   private Address addAndUpdateAddressMap(final SimpleString address, boolean getBiased) {\n+   private Address addAndUpdateAddressMap(final SimpleString address) {\n       final boolean containsWildCard = address.containsEitherOf(wildcardConfiguration.getAnyWords(), wildcardConfiguration.getSingleWord());\n       final Map<SimpleString, Address> addressMap = containsWildCard ? wildCardAddresses : addresses;\n-      Address actualAddress = null;\n-      if (getBiased) {\n-         // CHM::get doesn't need to synchronize anything, so it's to be preferred for getBiased cases\n-         actualAddress = addressMap.get(address);\n-      }\n+      Address actualAddress = addressMap.get(address);\n       if (actualAddress == null) {", "originalCommit": "c335c7f8e9f7b2620ba629497d49febcb363da77", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc5NzYzMQ==", "url": "https://github.com/apache/activemq-artemis/pull/3352#discussion_r527797631", "bodyText": "true, that is better.", "author": "gtully", "createdAt": "2020-11-20T16:12:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzczNDk0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYwNTc0Nw==", "url": "https://github.com/apache/activemq-artemis/pull/3352#discussion_r528605747", "bodyText": "I looked at changing this, if I follow the same pattern on the get check inside the sync I end up with a method with 3 return statements. At the moment it has a single return, which i like.\nI thin the single return statement is better than 2 fast paths and one slow :-)", "author": "gtully", "createdAt": "2020-11-23T10:33:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzczNDk0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzczODI1Mg==", "url": "https://github.com/apache/activemq-artemis/pull/3352#discussion_r527738252", "bodyText": "Same here: https://github.com/apache/activemq-artemis/pull/3352/files#r527734942", "author": "franz1981", "createdAt": "2020-11-20T14:43:41Z", "path": "artemis-server/src/main/java/org/apache/activemq/artemis/core/postoffice/impl/WildcardAddressManager.java", "diffHunk": "@@ -175,36 +175,38 @@ public void clear() {\n       wildCardAddresses.clear();\n    }\n \n-   private Address addAndUpdateAddressMap(final SimpleString address, boolean getBiased) {\n+   private Address addAndUpdateAddressMap(final SimpleString address) {\n       final boolean containsWildCard = address.containsEitherOf(wildcardConfiguration.getAnyWords(), wildcardConfiguration.getSingleWord());\n       final Map<SimpleString, Address> addressMap = containsWildCard ? wildCardAddresses : addresses;\n-      Address actualAddress = null;\n-      if (getBiased) {\n-         // CHM::get doesn't need to synchronize anything, so it's to be preferred for getBiased cases\n-         actualAddress = addressMap.get(address);\n-      }\n+      Address actualAddress = addressMap.get(address);\n       if (actualAddress == null) {\n-         actualAddress = addressMap.computeIfAbsent(address, addressKey -> new AddressImpl(addressKey, wildcardConfiguration));\n-      }\n-      assert actualAddress.containsWildCard() == containsWildCard;\n-      synchronized (this) {\n-         if (containsWildCard) {\n-            for (Address destAdd : this.addresses.values()) {\n-               if (destAdd.matches(actualAddress)) {\n-                  destAdd.addLinkedAddress(actualAddress);\n-                  actualAddress.addLinkedAddress(destAdd);\n-               }\n-            }\n-         } else {\n-            for (Address destAdd : wildCardAddresses.values()) {\n-               if (actualAddress.matches(destAdd)) {\n-                  destAdd.addLinkedAddress(actualAddress);\n-                  actualAddress.addLinkedAddress(destAdd);\n+         synchronized (this) {\n+            actualAddress = addressMap.get(address);", "originalCommit": "c335c7f8e9f7b2620ba629497d49febcb363da77", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYwNjU4Mg==", "url": "https://github.com/apache/activemq-artemis/pull/3352#discussion_r528606582", "bodyText": "that is the crux, one fast return path is good. 2 now gives us in total 3 return paths. I think it is more readable with a single return path.", "author": "gtully", "createdAt": "2020-11-23T10:35:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzczODI1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc0OTcwOA==", "url": "https://github.com/apache/activemq-artemis/pull/3352#discussion_r527749708", "bodyText": "-1 having asserts, if it called twice it wont error but simply proceed. Is this really a good idea, risk breaking or erroring", "author": "michaelandrepearce", "createdAt": "2020-11-20T15:00:56Z", "path": "artemis-server/src/main/java/org/apache/activemq/artemis/core/postoffice/impl/AddressImpl.java", "diffHunk": "@@ -84,6 +84,7 @@ public void addLinkedAddress(final Address address) {\n       if (linkedAddresses == null) {\n          linkedAddresses = PlatformDependent.hasUnsafe() ? new NonBlockingHashSet<>() : new ConcurrentHashSet<>();\n       }\n+      assert !linkedAddresses.contains(address);", "originalCommit": "c335c7f8e9f7b2620ba629497d49febcb363da77", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc1MDQxNw==", "url": "https://github.com/apache/activemq-artemis/pull/3352#discussion_r527750417", "bodyText": "Im not feeling comfortable about this.", "author": "michaelandrepearce", "createdAt": "2020-11-20T15:01:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc0OTcwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc1OTM5Mw==", "url": "https://github.com/apache/activemq-artemis/pull/3352#discussion_r527759393", "bodyText": "Better to change return as boolean and simply return true or false if succeeded and if you care if it succeeded use that to subsequently handle. Set itself returns if an element was added or not when added so you simply just propagate this back via return", "author": "michaelandrepearce", "createdAt": "2020-11-20T15:15:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc0OTcwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc3NDA5Mg==", "url": "https://github.com/apache/activemq-artemis/pull/3352#discussion_r527774092", "bodyText": "I like this solution!", "author": "franz1981", "createdAt": "2020-11-20T15:37:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc0OTcwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc5NTU4MQ==", "url": "https://github.com/apache/activemq-artemis/pull/3352#discussion_r527795581", "bodyText": "I am not a fan of asserts generally, but in this case, if I added that assert with my original change, this PR would not be necessary. I think it serves a purpose. It forces a test failure on bad usage.", "author": "gtully", "createdAt": "2020-11-20T16:09:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc0OTcwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzgwMTM2OA==", "url": "https://github.com/apache/activemq-artemis/pull/3352#discussion_r527801368", "bodyText": "see the original pr: #3344 (comment)", "author": "gtully", "createdAt": "2020-11-20T16:18:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc0OTcwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzgwOTY2OQ==", "url": "https://github.com/apache/activemq-artemis/pull/3352#discussion_r527809669", "bodyText": "If you want to validate it, as noted and as per general collections  behaviour its normal to return true false if a change occured not error with an assert. I disagree with the original comment you reference advising you to add an assert.\nRaising runtime exceptions like assert does is not a great pattern. If we really want to throw an exception rather than return true false. Make a declared exception and throw that, then calling code will then at least expect it and handle it. (I still prefer using a boolean return here it follows the normal pattern used by collections)", "author": "michaelandrepearce", "createdAt": "2020-11-20T16:31:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc0OTcwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzgyOTgxNQ==", "url": "https://github.com/apache/activemq-artemis/pull/3352#discussion_r527829815", "bodyText": "I'm not advocating one way or the other here, but aren't assertions disabled by the JVM by default and must be enabled using -ea?", "author": "jbertram", "createdAt": "2020-11-20T16:59:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc0OTcwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzgzMDE4OQ==", "url": "https://github.com/apache/activemq-artemis/pull/3352#discussion_r527830189", "bodyText": "In this case what could be the proper action in case we see the linked address to be added twice? A log? An exception?\nI suppose both are poor to capture a performance need (more then a correctness thing). I am open to proposals here but I am not sure asserts are not (equally) good if the motivation behind their usage is to guide specific invariant to be checked with no cost at runtime, on tests, especially for performance reasons.", "author": "franz1981", "createdAt": "2020-11-20T17:00:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc0OTcwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzgzMTg5OA==", "url": "https://github.com/apache/activemq-artemis/pull/3352#discussion_r527831898", "bodyText": "Said that I think is not bad to return a boolean but we still need to choose what action to take in case of false branch: If not, I don't see a reason to add it to the API. Differently from a collection, that's a generic reusable piece of code, this one is domain code and isn't there to be reusable.", "author": "franz1981", "createdAt": "2020-11-20T17:03:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc0OTcwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzgzNjE2Ng==", "url": "https://github.com/apache/activemq-artemis/pull/3352#discussion_r527836166", "bodyText": "@jbertram yep and iirc surefire add it by default while running tests, that's why I have suggested that option", "author": "franz1981", "createdAt": "2020-11-20T17:10:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc0OTcwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg0MjA0NQ==", "url": "https://github.com/apache/activemq-artemis/pull/3352#discussion_r527842045", "bodyText": "We shouldnt be relying on code that only does something in tests as then at runtime we have different behaviour. As well we end up with runtime code littered and intermingled code just for tests that change behaviour", "author": "michaelandrepearce", "createdAt": "2020-11-20T17:19:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc0OTcwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg1MTQ5Ng==", "url": "https://github.com/apache/activemq-artemis/pull/3352#discussion_r527851496", "bodyText": "If you need something just for tests we would be better extracting interface and then in test injecting a mock or interception that checks the call count.", "author": "michaelandrepearce", "createdAt": "2020-11-20T17:30:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc0OTcwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYxNDEyMg==", "url": "https://github.com/apache/activemq-artemis/pull/3352#discussion_r528614122", "bodyText": "in this case, the different behaviour is correct, just a waste. The code now does the add/remove of linked addresses once, and if someone changes that, the assert will fire. When I made that optimisation without the assert, it was dropped in a few commits and none the wiser. an assert is a good win here imho. It is suggesting the contract but it is not a fatal flaw to insert the same value twice, just a waste.\n@michaelandrepearce are you -1 on asserts or just this assert ?", "author": "gtully", "createdAt": "2020-11-23T10:48:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc0OTcwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTUzODExOA==", "url": "https://github.com/apache/activemq-artemis/pull/3352#discussion_r529538118", "bodyText": "to progress this, the assert is gone!", "author": "gtully", "createdAt": "2020-11-24T13:19:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc0OTcwOA=="}], "type": "inlineReview"}, {"oid": "8fab62d5a723881a3dd1e5bb87d7348d1c178e37", "url": "https://github.com/apache/activemq-artemis/commit/8fab62d5a723881a3dd1e5bb87d7348d1c178e37", "message": "ARTEMIS-2990 - alway be getBiased and only publish complete records and only calculate linked addresses once ARTEMIS-2990", "committedDate": "2020-11-23T14:52:36Z", "type": "forcePushed"}, {"oid": "7d8dc5644bf41bbcb601ce517aab035f0371e831", "url": "https://github.com/apache/activemq-artemis/commit/7d8dc5644bf41bbcb601ce517aab035f0371e831", "message": "ARTEMIS-2990 - alway be getBiased and only publish complete records and only calculate linked addresses once ARTEMIS-2990", "committedDate": "2020-11-23T15:06:52Z", "type": "commit"}, {"oid": "7d8dc5644bf41bbcb601ce517aab035f0371e831", "url": "https://github.com/apache/activemq-artemis/commit/7d8dc5644bf41bbcb601ce517aab035f0371e831", "message": "ARTEMIS-2990 - alway be getBiased and only publish complete records and only calculate linked addresses once ARTEMIS-2990", "committedDate": "2020-11-23T15:06:52Z", "type": "forcePushed"}]}