{"pr_number": 2760, "pr_title": "feat: Context succeeding - Part 6 - topic-operator mockkube kafka-init api", "pr_createdAt": "2020-03-28T14:05:51Z", "pr_url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2760", "timeline": [{"oid": "103707b53f1c273f7f43b18c168f262ac12ab82c", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/103707b53f1c273f7f43b18c168f262ac12ab82c", "message": "feat: context-succeeding topic-operator\n\nSigned-off-by: Samuel Hawker <samuel.hawker@ibm.com>", "committedDate": "2020-03-20T20:57:36Z", "type": "commit"}, {"oid": "e579783f75917d49e2c63d83469e5d246194b6c3", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/e579783f75917d49e2c63d83469e5d246194b6c3", "message": "feat: Mockkube and user-operator\n\nSigned-off-by: Samuel Hawker <samuel.hawker@ibm.com>", "committedDate": "2020-03-20T21:58:59Z", "type": "commit"}, {"oid": "40e2398d2b05a664e3f1d0917ad1b7a6561ff8c4", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/40e2398d2b05a664e3f1d0917ad1b7a6561ff8c4", "message": "feat: Clean up kafka-init tests\n\nSigned-off-by: Samuel Hawker <samuel.hawker@ibm.com>", "committedDate": "2020-03-20T22:23:18Z", "type": "commit"}, {"oid": "abb757cf33c430e8925152f77c5c78102534735d", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/abb757cf33c430e8925152f77c5c78102534735d", "message": "feat: Api tests\n\nSigned-off-by: Samuel Hawker <samuel.hawker@ibm.com>", "committedDate": "2020-03-21T11:24:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY4OTc5Mg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2760#discussion_r399689792", "bodyText": "I know you didn't changed it, but should this be commented out?", "author": "scholzj", "createdAt": "2020-03-28T17:48:52Z", "path": "mockkube/src/test/java/io/strimzi/test/io/strimzi/test/mockkube/MockKubeTest.java", "diffHunk": "@@ -182,55 +179,51 @@ public void podNameScopedCreateListGetDelete(Class<RT> cls,\n         mixedOp.apply(client).withName(pod.getMetadata().getName()).create(pod);\n         assertThat(w.lastEvent().action, is(Watcher.Action.ADDED));\n         assertThat(w.lastEvent().resource, is(pod));\n-        try {\n-            mixedOp.apply(client).create(pod);\n-            fail();\n-        } catch (KubernetesClientException e) {\n-            assertThat(e.getMessage(), is(expectedResourceExistsMessage(pod)));\n-        }\n+        KubernetesClientException e = assertThrows(KubernetesClientException.class, () ->  mixedOp.apply(client).create(pod));\n+        assertThat(e.getMessage(), is(expectedResourceExistsMessage(pod)));\n \n         // List\n         List<RT> items = mixedOp.apply(client).list().getItems();\n-        assertThat(items.size(), is(1));\n+        assertThat(items, hasSize(1));\n         RT item = items.get(0);\n         item.getMetadata().setResourceVersion(null);\n         item.getMetadata().setGeneration(null);\n         assertThat(item, is(pod));\n \n         // List with namespace\n         items = mixedOp.apply(client).inNamespace(\"other\").list().getItems();\n-        // TODO assertEquals(0, items.size());\n+        // TODO assertThat(items.size(), is(0));", "originalCommit": "abb757cf33c430e8925152f77c5c78102534735d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY5MzkyNw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2760#discussion_r399693927", "bodyText": "I thought exactly this as well - I uncommented it out and the line fails.\nMy understanding is that this has been left commented out as a reminder that this should be passing but isn't...\nI.e. mixedOp.apply(client).inNamespace(\"other\").* should actually be behaving differently to how it currently is. (Incomplete work in the MockKube)\nSimilar for this other line in the same file:\n\n  \n    \n      strimzi-kafka-operator/mockkube/src/test/java/io/strimzi/test/io/strimzi/test/mockkube/MockKubeTest.java\n    \n    \n         Line 236\n      in\n      abb757c\n    \n    \n    \n    \n\n        \n          \n           // TODO assertNull(gotResource);", "author": "samuel-hawker", "createdAt": "2020-03-28T18:29:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY4OTc5Mg=="}], "type": "inlineReview"}]}