{"pr_number": 2353, "pr_title": "ST: Improve Kafka cluster rolling tests", "pr_createdAt": "2020-01-02T15:20:19Z", "pr_url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2353", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzExMjgwNw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2353#discussion_r363112807", "bodyText": "Is this comment still valid? You seem to have a cluster with 3 topics and topic with 3 replicas?", "author": "scholzj", "createdAt": "2020-01-05T19:40:50Z", "path": "systemtest/src/test/java/io/strimzi/systemtest/RollingUpdateST.java", "diffHunk": "@@ -218,11 +219,7 @@ void testKafkaAndZookeeperScaleUpScaleDown() throws Exception {\n         assertEquals(3, initialReplicas);\n \n         // Create topic before scale up to ensure no partitions created on last broker (which will mess up scale down)", "originalCommit": "38724841a2300de21dbdcee6186baa68e0935bfb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzIzMTAxMQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2353#discussion_r363231011", "bodyText": "Removed", "author": "Frawless", "createdAt": "2020-01-06T10:10:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzExMjgwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzExMjk3NA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2353#discussion_r363112974", "bodyText": "You don't seem to be doing anything between scale-up and the initial deployment. So why not just deploy the cluster with 4 nodes?", "author": "scholzj", "createdAt": "2020-01-05T19:44:17Z", "path": "systemtest/src/test/java/io/strimzi/systemtest/RollingUpdateST.java", "diffHunk": "@@ -269,6 +266,73 @@ void testKafkaAndZookeeperScaleUpScaleDown() throws Exception {\n         receiveMessagesExternal(NAMESPACE, topicName, messageCount);\n     }\n \n+    /**\n+     * This test cover case, when KafkaRoller will not roll Kafka pods, because created topic doesn't meet requirements for roll remaining pods\n+     * 1. Deploy kafka cluster with 3 pods\n+     * 2. Create topic with 4 replicas\n+     * 3. Scale kafka cluster to 7 replicas and wait, until all pods are ready\n+     * 4. Scale down kafka cluster to 3 replicas\n+     * 5. Trigger rolling update for Kafka cluster\n+     * 6. Rolling update will not be performed, because topic which we created had some replicas on deleted pods - manual fix is needed in that case\n+     */\n+    @Test\n+    void testKafkaWontRollUp() throws Exception {\n+        String topicName = \"test-topic-\" + new Random().nextInt(Integer.MAX_VALUE);\n+        timeMeasuringSystem.setOperationID(timeMeasuringSystem.startTimeMeasuring(Operation.CLUSTER_RECOVERY));\n+\n+        KafkaResource.kafkaPersistent(CLUSTER_NAME, 3)\n+            .editSpec()\n+                .editKafka()\n+                    .addToConfig(\"auto.create.topics.enable\", \"false\")\n+                .endKafka()\n+            .endSpec().done();\n+\n+        LOGGER.info(\"Running kafkaScaleUpScaleDown {}\", CLUSTER_NAME);\n+        final int initialReplicas = kubeClient().getStatefulSet(KafkaResources.kafkaStatefulSetName(CLUSTER_NAME)).getStatus().getReplicas();\n+        assertEquals(3, initialReplicas);\n+\n+        // scale up", "originalCommit": "38724841a2300de21dbdcee6186baa68e0935bfb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzIzMTExMA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2353#discussion_r363231110", "bodyText": "Removed scaleUp phase", "author": "Frawless", "createdAt": "2020-01-06T10:11:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzExMjk3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzExMjk5NA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2353#discussion_r363112994", "bodyText": "The comment does not seem to match with what is going on?", "author": "scholzj", "createdAt": "2020-01-05T19:44:36Z", "path": "systemtest/src/test/java/io/strimzi/systemtest/RollingUpdateST.java", "diffHunk": "@@ -269,6 +266,73 @@ void testKafkaAndZookeeperScaleUpScaleDown() throws Exception {\n         receiveMessagesExternal(NAMESPACE, topicName, messageCount);\n     }\n \n+    /**\n+     * This test cover case, when KafkaRoller will not roll Kafka pods, because created topic doesn't meet requirements for roll remaining pods\n+     * 1. Deploy kafka cluster with 3 pods\n+     * 2. Create topic with 4 replicas\n+     * 3. Scale kafka cluster to 7 replicas and wait, until all pods are ready\n+     * 4. Scale down kafka cluster to 3 replicas\n+     * 5. Trigger rolling update for Kafka cluster\n+     * 6. Rolling update will not be performed, because topic which we created had some replicas on deleted pods - manual fix is needed in that case\n+     */\n+    @Test\n+    void testKafkaWontRollUp() throws Exception {\n+        String topicName = \"test-topic-\" + new Random().nextInt(Integer.MAX_VALUE);\n+        timeMeasuringSystem.setOperationID(timeMeasuringSystem.startTimeMeasuring(Operation.CLUSTER_RECOVERY));\n+\n+        KafkaResource.kafkaPersistent(CLUSTER_NAME, 3)\n+            .editSpec()\n+                .editKafka()\n+                    .addToConfig(\"auto.create.topics.enable\", \"false\")\n+                .endKafka()\n+            .endSpec().done();\n+\n+        LOGGER.info(\"Running kafkaScaleUpScaleDown {}\", CLUSTER_NAME);\n+        final int initialReplicas = kubeClient().getStatefulSet(KafkaResources.kafkaStatefulSetName(CLUSTER_NAME)).getStatus().getReplicas();\n+        assertEquals(3, initialReplicas);\n+\n+        // scale up\n+        final int scaleTo = initialReplicas + 4;\n+        final int newPodId = initialReplicas;\n+        final String newPodName = KafkaResources.kafkaPodName(CLUSTER_NAME,  newPodId);\n+        LOGGER.info(\"Scaling up to {}\", scaleTo);\n+        // Create snapshot of current cluster\n+        String kafkaStsName = kafkaStatefulSetName(CLUSTER_NAME);\n+        KafkaResource.replaceKafkaResource(CLUSTER_NAME, k -> k.getSpec().getKafka().setReplicas(scaleTo));\n+        // No need to roll kafka cluster during scale up (no external listeners in Kafka)\n+        StatefulSetUtils.waitForAllStatefulSetPodsReady(KafkaResources.kafkaStatefulSetName(CLUSTER_NAME), scaleTo);\n+        Map<String, String> kafkaPods = StatefulSetUtils.ssSnapshot(kafkaStsName);\n+        LOGGER.info(\"Scaling to {} finished\", scaleTo);\n+\n+        // Create topic before scale up to ensure no partitions created on last broker (which will mess up scale down)", "originalCommit": "38724841a2300de21dbdcee6186baa68e0935bfb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzIzMTEzNg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2353#discussion_r363231136", "bodyText": "Removed", "author": "Frawless", "createdAt": "2020-01-06T10:11:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzExMjk5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzExMzU3NQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2353#discussion_r363113575", "bodyText": "What is expected to triger the rolling update here? And how do you check the 6.?", "author": "scholzj", "createdAt": "2020-01-05T19:55:38Z", "path": "systemtest/src/test/java/io/strimzi/systemtest/RollingUpdateST.java", "diffHunk": "@@ -269,6 +266,73 @@ void testKafkaAndZookeeperScaleUpScaleDown() throws Exception {\n         receiveMessagesExternal(NAMESPACE, topicName, messageCount);\n     }\n \n+    /**\n+     * This test cover case, when KafkaRoller will not roll Kafka pods, because created topic doesn't meet requirements for roll remaining pods\n+     * 1. Deploy kafka cluster with 3 pods\n+     * 2. Create topic with 4 replicas\n+     * 3. Scale kafka cluster to 7 replicas and wait, until all pods are ready\n+     * 4. Scale down kafka cluster to 3 replicas\n+     * 5. Trigger rolling update for Kafka cluster\n+     * 6. Rolling update will not be performed, because topic which we created had some replicas on deleted pods - manual fix is needed in that case\n+     */\n+    @Test\n+    void testKafkaWontRollUp() throws Exception {\n+        String topicName = \"test-topic-\" + new Random().nextInt(Integer.MAX_VALUE);\n+        timeMeasuringSystem.setOperationID(timeMeasuringSystem.startTimeMeasuring(Operation.CLUSTER_RECOVERY));\n+\n+        KafkaResource.kafkaPersistent(CLUSTER_NAME, 3)\n+            .editSpec()\n+                .editKafka()\n+                    .addToConfig(\"auto.create.topics.enable\", \"false\")\n+                .endKafka()\n+            .endSpec().done();\n+\n+        LOGGER.info(\"Running kafkaScaleUpScaleDown {}\", CLUSTER_NAME);\n+        final int initialReplicas = kubeClient().getStatefulSet(KafkaResources.kafkaStatefulSetName(CLUSTER_NAME)).getStatus().getReplicas();\n+        assertEquals(3, initialReplicas);\n+\n+        // scale up\n+        final int scaleTo = initialReplicas + 4;\n+        final int newPodId = initialReplicas;\n+        final String newPodName = KafkaResources.kafkaPodName(CLUSTER_NAME,  newPodId);\n+        LOGGER.info(\"Scaling up to {}\", scaleTo);\n+        // Create snapshot of current cluster\n+        String kafkaStsName = kafkaStatefulSetName(CLUSTER_NAME);\n+        KafkaResource.replaceKafkaResource(CLUSTER_NAME, k -> k.getSpec().getKafka().setReplicas(scaleTo));\n+        // No need to roll kafka cluster during scale up (no external listeners in Kafka)\n+        StatefulSetUtils.waitForAllStatefulSetPodsReady(KafkaResources.kafkaStatefulSetName(CLUSTER_NAME), scaleTo);\n+        Map<String, String> kafkaPods = StatefulSetUtils.ssSnapshot(kafkaStsName);\n+        LOGGER.info(\"Scaling to {} finished\", scaleTo);\n+\n+        // Create topic before scale up to ensure no partitions created on last broker (which will mess up scale down)\n+        KafkaTopicResource.topic(CLUSTER_NAME, topicName, 4, 4, 4).done();\n+\n+        //Test that the new pod does not have errors or failures in events\n+        String uid = kubeClient().getPodUid(newPodName);\n+        List<Event> events = kubeClient().listEvents(uid);\n+        assertThat(events, hasAllOfReasons(Scheduled, Pulled, Created, Started));\n+\n+        //Test that CO doesn't have any exceptions in log\n+        timeMeasuringSystem.stopOperation(timeMeasuringSystem.getOperationID());\n+        assertNoCoErrorsLogged(timeMeasuringSystem.getDurationInSecconds(testClass, testName, timeMeasuringSystem.getOperationID()));\n+\n+        // scale down\n+        LOGGER.info(\"Scaling down to {}\", initialReplicas);\n+        timeMeasuringSystem.setOperationID(timeMeasuringSystem.startTimeMeasuring(Operation.SCALE_DOWN));\n+        KafkaResource.replaceKafkaResource(CLUSTER_NAME, k -> k.getSpec().getKafka().setReplicas(initialReplicas));\n+\n+        PodUtils.waitUntilPodsCountIsPresent(KafkaResources.kafkaStatefulSetName(CLUSTER_NAME), 3);\n+        // Wait for first reconciliation\n+        StUtils.waitForReconciliation(testClass, testName, NAMESPACE);\n+        // Wait for second reconciliation and check that pods are not rollable\n+        StUtils.waitForReconciliation(testClass, testName, NAMESPACE);", "originalCommit": "38724841a2300de21dbdcee6186baa68e0935bfb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzIzMTc0MA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2353#discussion_r363231740", "bodyText": "After offline discussion added code for trigger rolling update manually and created issue for unexpected rolling update in that case.", "author": "Frawless", "createdAt": "2020-01-06T10:12:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzExMzU3NQ=="}], "type": "inlineReview"}, {"oid": "b706d4a6a8ad915d5fb4ddaba6a685c1a54b731b", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/b706d4a6a8ad915d5fb4ddaba6a685c1a54b731b", "message": "WIP: add new test case fow rolling\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>", "committedDate": "2020-01-08T14:20:45Z", "type": "commit"}, {"oid": "3697242419af655f2b6ed09f4725ad8db09dc2db", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/3697242419af655f2b6ed09f4725ad8db09dc2db", "message": "Add comments to test\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>", "committedDate": "2020-01-08T14:20:45Z", "type": "commit"}, {"oid": "826f80d03f6d78028ecb0ab3d53b5886b1a4fb5b", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/826f80d03f6d78028ecb0ab3d53b5886b1a4fb5b", "message": "fixup! Add comments to test\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>", "committedDate": "2020-01-08T14:20:45Z", "type": "commit"}, {"oid": "393e3d21200c45b98760de6fb408e4c686b116e2", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/393e3d21200c45b98760de6fb408e4c686b116e2", "message": "Work in some github comments and fix KafkaWontRollUp test\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>", "committedDate": "2020-01-08T14:20:45Z", "type": "commit"}, {"oid": "c6c2264f0448d579bc41fe252442c7e4ee7fdd0a", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/c6c2264f0448d579bc41fe252442c7e4ee7fdd0a", "message": "Extend timeout for annotation removal in case of manual rolling update\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>", "committedDate": "2020-01-08T14:20:45Z", "type": "commit"}, {"oid": "3390f148a2d14a30bba274bb5c4e198f8e9b745e", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/3390f148a2d14a30bba274bb5c4e198f8e9b745e", "message": "fixup! Extend timeout for annotation removal in case of manual rolling update\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>", "committedDate": "2020-01-08T14:20:45Z", "type": "commit"}, {"oid": "7ff8f7f4088496865c075795d8cf29f4cbdb023e", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/7ff8f7f4088496865c075795d8cf29f4cbdb023e", "message": "fixup! fixup! Extend timeout for annotation removal in case of manual rolling update\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>", "committedDate": "2020-01-08T16:09:51Z", "type": "commit"}, {"oid": "7ff8f7f4088496865c075795d8cf29f4cbdb023e", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/7ff8f7f4088496865c075795d8cf29f4cbdb023e", "message": "fixup! fixup! Extend timeout for annotation removal in case of manual rolling update\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>", "committedDate": "2020-01-08T16:09:51Z", "type": "forcePushed"}]}