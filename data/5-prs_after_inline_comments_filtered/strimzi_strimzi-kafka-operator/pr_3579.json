{"pr_number": 3579, "pr_title": "[systemtest][fixes] Some fixes and add method for listing deployed resources", "pr_createdAt": "2020-09-01T11:02:51Z", "pr_url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3579", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTEwNjQzMA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3579#discussion_r481106430", "bodyText": "why it's global constant if it's used in one test?", "author": "Frawless", "createdAt": "2020-09-01T12:40:31Z", "path": "systemtest/src/test/java/io/strimzi/systemtest/kafka/KafkaST.java", "diffHunk": "@@ -106,40 +106,39 @@\n class KafkaST extends AbstractST {\n \n     private static final Logger LOGGER = LogManager.getLogger(KafkaST.class);\n-\n+    private static final String TEMPLATE_PATH = TestUtils.USER_PATH + \"/../examples/templates/cluster-operator\";\n     public static final String NAMESPACE = \"kafka-cluster-test\";\n+    private static final String OPENSHIFT_CLUSTER_NAME = \"openshift-my-cluster\";", "originalCommit": "251bc74eda2e3bc365bf0e3d249451b50a8fd209", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTExMDM3Mg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3579#discussion_r481110372", "bodyText": "I used this for the deletion, if you don't agree, I can remove it.", "author": "im-konge", "createdAt": "2020-09-01T12:47:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTEwNjQzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTEwNjUyMw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3579#discussion_r481106523", "bodyText": "why it's global constant if it's used in one test?", "author": "Frawless", "createdAt": "2020-09-01T12:40:40Z", "path": "systemtest/src/test/java/io/strimzi/systemtest/kafka/KafkaST.java", "diffHunk": "@@ -106,40 +106,39 @@\n class KafkaST extends AbstractST {\n \n     private static final Logger LOGGER = LogManager.getLogger(KafkaST.class);\n-\n+    private static final String TEMPLATE_PATH = TestUtils.USER_PATH + \"/../examples/templates/cluster-operator\";", "originalCommit": "251bc74eda2e3bc365bf0e3d249451b50a8fd209", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTExMDQyNQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3579#discussion_r481110425", "bodyText": "Same as above", "author": "im-konge", "createdAt": "2020-09-01T12:47:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTEwNjUyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTEwNzQ1Nw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3579#discussion_r481107457", "bodyText": "Why is this moved from the one scenario where everything is deployed (and deleted) to afterEach?", "author": "Frawless", "createdAt": "2020-09-01T12:42:19Z", "path": "systemtest/src/test/java/io/strimzi/systemtest/kafka/KafkaST.java", "diffHunk": "@@ -1957,6 +1956,14 @@ void setup() throws Exception {\n     @Override\n     protected void tearDownEnvironmentAfterEach() throws Exception {\n         super.tearDownEnvironmentAfterEach();\n+        if (cluster.getListOfDeployedResources().contains(TEMPLATE_PATH)) {\n+            cluster.deleteCustomResources(TEMPLATE_PATH);\n+        }\n+\n+        kubeClient().listPods().stream()\n+            .filter(p -> p.getMetadata().getName().startsWith(OPENSHIFT_CLUSTER_NAME))\n+            .forEach(p -> PodUtils.deletePodWithWait(p.getMetadata().getName()));", "originalCommit": "251bc74eda2e3bc365bf0e3d249451b50a8fd209", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTEwOTg2Ng==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3579#discussion_r481109866", "bodyText": "If the test fails for example in Kafka creation (deploying), the resources are not deleted properly. This will ensure that all resources from the testDeployKafkaClusterViaTemplate will be removed and will not affect other tests.", "author": "im-konge", "createdAt": "2020-09-01T12:46:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTEwNzQ1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTExMjM0MQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3579#discussion_r481112341", "bodyText": "I was looking for some solution to be executed only for the testDeployKafkaClusterViaTemplate(), but there is no annotation for that. Only thing what I can add is the try{}catch{} block and that's not good approach from MPOV", "author": "im-konge", "createdAt": "2020-09-01T12:50:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTEwNzQ1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTEyMjQ1NQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3579#discussion_r481122455", "bodyText": "Oh make sense to me!", "author": "Frawless", "createdAt": "2020-09-01T13:06:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTEwNzQ1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTEyNDczMQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3579#discussion_r481124731", "bodyText": "Maybe we can talk to someone from JUnit to add anno to do something after specific test \ud83d\ude04", "author": "im-konge", "createdAt": "2020-09-01T13:10:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTEwNzQ1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTc4MTI1NQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3579#discussion_r481781255", "bodyText": "@after if testName = mySpecific test\nhttps://stackoverflow.com/a/41321322 ;-)", "author": "michalxo", "createdAt": "2020-09-02T06:25:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTEwNzQ1Nw=="}], "type": "inlineReview"}, {"oid": "20e0e1e85ad127203aa8db716803bf338379b366", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/20e0e1e85ad127203aa8db716803bf338379b366", "message": "fixes\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>", "committedDate": "2020-09-01T16:55:19Z", "type": "commit"}, {"oid": "3045a6815ca90ca772a6df6110a7753e6a9180b2", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/3045a6815ca90ca772a6df6110a7753e6a9180b2", "message": "fixup! fixes\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>", "committedDate": "2020-09-02T10:51:27Z", "type": "commit"}, {"oid": "3045a6815ca90ca772a6df6110a7753e6a9180b2", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/3045a6815ca90ca772a6df6110a7753e6a9180b2", "message": "fixup! fixes\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>", "committedDate": "2020-09-02T10:51:27Z", "type": "forcePushed"}, {"oid": "7b49d588d9240e5073d131e12c0c785e480587f7", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/7b49d588d9240e5073d131e12c0c785e480587f7", "message": "fixup! fixup! fixes\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>", "committedDate": "2020-09-03T09:18:16Z", "type": "commit"}]}