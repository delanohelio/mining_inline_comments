{"pr_number": 3106, "pr_title": "[MO] - [system test] - cruise control kafka rebalance resource", "pr_createdAt": "2020-05-27T13:53:28Z", "pr_url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3106", "timeline": [{"oid": "4459d855eaf906cbd798d836bd59cb7c7a1b3425", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/4459d855eaf906cbd798d836bd59cb7c7a1b3425", "message": "[MO] - [system test] -> cruise control rebalance resource\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>", "committedDate": "2020-06-03T20:50:24Z", "type": "forcePushed"}, {"oid": "76f71951ec5787cdf3a438c16e96431f4e006c66", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/76f71951ec5787cdf3a438c16e96431f4e006c66", "message": "[MO] - [system test] -> cruise control rebalance resource\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>", "committedDate": "2020-06-03T21:03:50Z", "type": "forcePushed"}, {"oid": "19cb1f8c34b54190d10d615b3199d8b7de0e9ae0", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/19cb1f8c34b54190d10d615b3199d8b7de0e9ae0", "message": "[MO] - [system test] -> cruise control rebalance resource\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>", "committedDate": "2020-06-08T15:32:10Z", "type": "commit"}, {"oid": "40a1c2897481a3c38408b906bebfa0b3dff80ad0", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/40a1c2897481a3c38408b906bebfa0b3dff80ad0", "message": "[MO] - update\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>", "committedDate": "2020-06-08T15:32:10Z", "type": "commit"}, {"oid": "94fc4984bc4393b2ea154ad80d6c3fdd4184b251", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/94fc4984bc4393b2ea154ad80d6c3fdd4184b251", "message": "update\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>", "committedDate": "2020-06-08T15:32:10Z", "type": "commit"}, {"oid": "94fc4984bc4393b2ea154ad80d6c3fdd4184b251", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/94fc4984bc4393b2ea154ad80d6c3fdd4184b251", "message": "update\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>", "committedDate": "2020-06-08T15:32:10Z", "type": "forcePushed"}, {"oid": "4d3b83063bb559b069557a79709086b33efecb71", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/4d3b83063bb559b069557a79709086b33efecb71", "message": "fix\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>", "committedDate": "2020-06-08T19:12:55Z", "type": "commit"}, {"oid": "5b15d9eaf3e3c82a51b1f1ea0949a7d1307fe74b", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/5b15d9eaf3e3c82a51b1f1ea0949a7d1307fe74b", "message": "fix\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>", "committedDate": "2020-06-09T07:10:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE4NjMyOQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3106#discussion_r437186329", "bodyText": "you are missing Stopped", "author": "ppatierno", "createdAt": "2020-06-09T07:15:22Z", "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/kafkaUtils/KafkaRebalanceUtils.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright Strimzi authors.\n+ * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n+ */\n+package io.strimzi.systemtest.utils.kafkaUtils;\n+\n+import io.strimzi.systemtest.Constants;\n+import io.strimzi.systemtest.resources.crd.KafkaRebalanceResource;\n+import io.strimzi.test.TestUtils;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import static io.strimzi.test.k8s.KubeClusterResource.kubeClient;\n+\n+public class KafkaRebalanceUtils {\n+\n+    private static final Logger LOGGER = LogManager.getLogger(KafkaRebalanceUtils.class);\n+\n+    private KafkaRebalanceUtils() {}\n+\n+    public enum KafkaRebalanceState {\n+        PendingProposal,\n+        ProposalReady,\n+        Rebalancing,\n+        Ready,\n+        NotReady", "originalCommit": "5b15d9eaf3e3c82a51b1f1ea0949a7d1307fe74b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIzMTA2Mg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3106#discussion_r437231062", "bodyText": "Done", "author": "see-quick", "createdAt": "2020-06-09T08:32:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE4NjMyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI3MjMzMg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3106#discussion_r437272332", "bodyText": "And that is why this should be part of the api ;-)", "author": "scholzj", "createdAt": "2020-06-09T09:29:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE4NjMyOQ=="}], "type": "inlineReview"}, {"oid": "77d094990b514b3c1aa5a196a8bcf4a49e17517e", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/77d094990b514b3c1aa5a196a8bcf4a49e17517e", "message": "update\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>", "committedDate": "2020-06-09T08:32:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI3ODExNQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3106#discussion_r437278115", "bodyText": "I saw a lot of line with this kinda useless log, do we really need it?", "author": "Frawless", "createdAt": "2020-06-09T09:38:26Z", "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/kafkaUtils/KafkaRebalanceUtils.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright Strimzi authors.\n+ * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n+ */\n+package io.strimzi.systemtest.utils.kafkaUtils;\n+\n+import io.strimzi.systemtest.Constants;\n+import io.strimzi.systemtest.resources.crd.KafkaRebalanceResource;\n+import io.strimzi.test.TestUtils;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import static io.strimzi.test.k8s.KubeClusterResource.kubeClient;\n+\n+public class KafkaRebalanceUtils {\n+\n+    private static final Logger LOGGER = LogManager.getLogger(KafkaRebalanceUtils.class);\n+\n+    private KafkaRebalanceUtils() {}\n+\n+    public enum KafkaRebalanceState {\n+        PendingProposal,\n+        ProposalReady,\n+        Rebalancing,\n+        Ready,\n+        NotReady,\n+        Stopped\n+    }\n+\n+    public static void waitForKafkaRebalanceCustomResourceState(String resourceName, KafkaRebalanceState state) {\n+        LOGGER.info(\"Waiting for KafkaRebalance will be in the {}\", state);\n+\n+        TestUtils.waitFor(\"Waiting for KafkaRebalance will be in the \" + state.name(), Constants.POLL_INTERVAL_FOR_RESOURCE_READINESS, Constants.TIMEOUT_FOR_RESOURCE_READINESS,\n+            () -> {\n+                LOGGER.info(\"Comparing: \" + KafkaRebalanceResource.kafkaRebalanceClient().inNamespace(kubeClient().getNamespace())", "originalCommit": "77d094990b514b3c1aa5a196a8bcf4a49e17517e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI4MjI3OA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3106#discussion_r437282278", "bodyText": "No, we don't. I will remove it", "author": "see-quick", "createdAt": "2020-06-09T09:45:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI3ODExNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI3ODc3Mw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3106#discussion_r437278773", "bodyText": "waiting string is already in waitFor", "author": "Frawless", "createdAt": "2020-06-09T09:39:33Z", "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/kafkaUtils/KafkaRebalanceUtils.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright Strimzi authors.\n+ * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n+ */\n+package io.strimzi.systemtest.utils.kafkaUtils;\n+\n+import io.strimzi.systemtest.Constants;\n+import io.strimzi.systemtest.resources.crd.KafkaRebalanceResource;\n+import io.strimzi.test.TestUtils;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import static io.strimzi.test.k8s.KubeClusterResource.kubeClient;\n+\n+public class KafkaRebalanceUtils {\n+\n+    private static final Logger LOGGER = LogManager.getLogger(KafkaRebalanceUtils.class);\n+\n+    private KafkaRebalanceUtils() {}\n+\n+    public enum KafkaRebalanceState {\n+        PendingProposal,\n+        ProposalReady,\n+        Rebalancing,\n+        Ready,\n+        NotReady,\n+        Stopped\n+    }\n+\n+    public static void waitForKafkaRebalanceCustomResourceState(String resourceName, KafkaRebalanceState state) {\n+        LOGGER.info(\"Waiting for KafkaRebalance will be in the {}\", state);\n+\n+        TestUtils.waitFor(\"Waiting for KafkaRebalance will be in the \" + state.name(), Constants.POLL_INTERVAL_FOR_RESOURCE_READINESS, Constants.TIMEOUT_FOR_RESOURCE_READINESS,", "originalCommit": "77d094990b514b3c1aa5a196a8bcf4a49e17517e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI4MDExNQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3106#discussion_r437280115", "bodyText": "Why you didn't use ResourceManager.waitForResourceStatus() ?", "author": "Frawless", "createdAt": "2020-06-09T09:41:46Z", "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/kafkaUtils/KafkaRebalanceUtils.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright Strimzi authors.\n+ * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n+ */\n+package io.strimzi.systemtest.utils.kafkaUtils;\n+\n+import io.strimzi.systemtest.Constants;\n+import io.strimzi.systemtest.resources.crd.KafkaRebalanceResource;\n+import io.strimzi.test.TestUtils;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import static io.strimzi.test.k8s.KubeClusterResource.kubeClient;\n+\n+public class KafkaRebalanceUtils {\n+\n+    private static final Logger LOGGER = LogManager.getLogger(KafkaRebalanceUtils.class);\n+\n+    private KafkaRebalanceUtils() {}\n+\n+    public enum KafkaRebalanceState {\n+        PendingProposal,\n+        ProposalReady,\n+        Rebalancing,\n+        Ready,\n+        NotReady,\n+        Stopped\n+    }\n+\n+    public static void waitForKafkaRebalanceCustomResourceState(String resourceName, KafkaRebalanceState state) {", "originalCommit": "77d094990b514b3c1aa5a196a8bcf4a49e17517e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI4NDY3NA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3106#discussion_r437284674", "bodyText": "Because KafkaRebalance resource did not match attributes with other resources such as Kafka, KafkaConnect etc.", "author": "see-quick", "createdAt": "2020-06-09T09:49:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI4MDExNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI4NjMxOA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3106#discussion_r437286318", "bodyText": "it's something we are going to revert back even because the OpenShift UI is not able to show the right status. @tomncooper are you still working on that?", "author": "ppatierno", "createdAt": "2020-06-09T09:52:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI4MDExNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ1NTY1NA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3106#discussion_r437455654", "bodyText": "Yes I am working on switching the state and type fields so that they are correct for the OCP UI.", "author": "tomncooper", "createdAt": "2020-06-09T14:13:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI4MDExNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI4MDUxNw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3106#discussion_r437280517", "bodyText": "ResourceManager.logCurrentResourceStatus() is not suitable here?", "author": "Frawless", "createdAt": "2020-06-09T09:42:27Z", "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/kafkaUtils/KafkaRebalanceUtils.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright Strimzi authors.\n+ * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n+ */\n+package io.strimzi.systemtest.utils.kafkaUtils;\n+\n+import io.strimzi.systemtest.Constants;\n+import io.strimzi.systemtest.resources.crd.KafkaRebalanceResource;\n+import io.strimzi.test.TestUtils;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import static io.strimzi.test.k8s.KubeClusterResource.kubeClient;\n+\n+public class KafkaRebalanceUtils {\n+\n+    private static final Logger LOGGER = LogManager.getLogger(KafkaRebalanceUtils.class);\n+\n+    private KafkaRebalanceUtils() {}\n+\n+    public enum KafkaRebalanceState {\n+        PendingProposal,\n+        ProposalReady,\n+        Rebalancing,\n+        Ready,\n+        NotReady,\n+        Stopped\n+    }\n+\n+    public static void waitForKafkaRebalanceCustomResourceState(String resourceName, KafkaRebalanceState state) {\n+        LOGGER.info(\"Waiting for KafkaRebalance will be in the {}\", state);\n+\n+        TestUtils.waitFor(\"Waiting for KafkaRebalance will be in the \" + state.name(), Constants.POLL_INTERVAL_FOR_RESOURCE_READINESS, Constants.TIMEOUT_FOR_RESOURCE_READINESS,\n+            () -> {\n+                LOGGER.info(\"Comparing: \" + KafkaRebalanceResource.kafkaRebalanceClient().inNamespace(kubeClient().getNamespace())\n+                    .withName(resourceName).get().getStatus().getConditions().get(0).getStatus() + \" - \" + state.name());\n+                return KafkaRebalanceResource.kafkaRebalanceClient().inNamespace(kubeClient().getNamespace())\n+                    .withName(resourceName).get().getStatus().getConditions().get(0).getStatus().equals(state.name());\n+            },\n+            () -> LOGGER.info(KafkaRebalanceResource.kafkaRebalanceClient().inNamespace(kubeClient().getNamespace()).withName(resourceName).get())", "originalCommit": "77d094990b514b3c1aa5a196a8bcf4a49e17517e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5489f821a8fbf11dc73d9b0e487593ad87020c2b", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/5489f821a8fbf11dc73d9b0e487593ad87020c2b", "message": "[MO] - commends\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>", "committedDate": "2020-06-09T09:54:49Z", "type": "commit"}, {"oid": "d6356e72da6f28c8e717edc793fdcfe52a4f37d7", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/d6356e72da6f28c8e717edc793fdcfe52a4f37d7", "message": "updarte\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>", "committedDate": "2020-06-09T10:01:55Z", "type": "commit"}]}