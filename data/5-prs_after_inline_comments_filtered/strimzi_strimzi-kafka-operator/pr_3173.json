{"pr_number": 3173, "pr_title": "Upgraded CC to 2.0.108 ", "pr_createdAt": "2020-06-08T17:41:53Z", "pr_url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3173", "timeline": [{"oid": "29eba83febc84f3dbba924ac0ebd1e444fa780c4", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/29eba83febc84f3dbba924ac0ebd1e444fa780c4", "message": "Upgraded CC to 2.0.108 and refactored CC client for new endpoint behaviour\n\nSigned-off-by: Thomas Cooper <tcooper@redhat.com>", "committedDate": "2020-06-08T17:42:57Z", "type": "forcePushed"}, {"oid": "01c08d0d31047b3ec3be89bce09b5c76515aed40", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/01c08d0d31047b3ec3be89bce09b5c76515aed40", "message": "Upgraded CC to 2.0.108 and refactored CC client for new endpoint behaviour\n\nSigned-off-by: Thomas Cooper <tcooper@redhat.com>", "committedDate": "2020-06-09T09:21:19Z", "type": "forcePushed"}, {"oid": "7f6d74e6885a428bb076258a06be1149a52b177f", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/7f6d74e6885a428bb076258a06be1149a52b177f", "message": "Upgraded CC to 2.0.108 and refactored CC client for new endpoint behaviour\n\nSigned-off-by: Thomas Cooper <tcooper@redhat.com>", "committedDate": "2020-06-09T09:29:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI4MzE5NQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3173#discussion_r437283195", "bodyText": "typo \"the status\"", "author": "ppatierno", "createdAt": "2020-06-09T09:47:01Z", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/cruisecontrol/CruiseControlApiImpl.java", "diffHunk": "@@ -204,36 +204,36 @@ public CruiseControlApiImpl(Vertx vertx, int idleTimeout) {\n                             JsonObject statusJson = new JsonObject();\n                             String taskStatus = jsonUserTask.getString(\"Status\");\n                             statusJson.put(\"Status\", taskStatus);\n-                            // The status could be ACTIVE in which case there will not be a \"summary\" so we check that we are\n-                            // in a state that actually has that key.\n-                            if (taskStatus.equals(CruiseControlUserTaskStatus.IN_EXECUTION.toString()) ||\n-                                    taskStatus.equals(CruiseControlUserTaskStatus.COMPLETED.toString())) {\n-                                // We now need to extract the original response which is in a raw string (not nicely formatted JSON)\n+\n+                            CruiseControlUserTaskResponse ccResponse;\n+                            if (taskStatus.equals(CruiseControlUserTaskStatus.IN_EXECUTION.toString()) || taskStatus.equals(CruiseControlUserTaskStatus.COMPLETED.toString())) {\n+                                // Tasks in execution will be rebalance tasks, so their original response will contain the summary of the rebalance they are executing\n+                                // Completed tasks likewise will have the original rebalance summary in their original response\n                                 statusJson.put(\"summary\", ((JsonObject) Json.decodeValue(jsonUserTask.getString(\"originalResponse\"))).getJsonObject(\"summary\"));\n+                                ccResponse = new CruiseControlUserTaskResponse(userTaskID, statusJson);\n+                            } else if (taskStatus.equals(CruiseControlUserTaskStatus.ACTIVE.toString())) {\n+                                // If he status is ACTIVE there will not be a \"summary\" so we skip pulling the summary key", "originalCommit": "01c08d0d31047b3ec3be89bce09b5c76515aed40", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3ccfe2d3e4243e0b53b4e0c93b8c9205bcc97be3", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/3ccfe2d3e4243e0b53b4e0c93b8c9205bcc97be3", "message": "Refactored CC client to remove need to use user tasks response subclass\n\nSigned-off-by: Thomas Cooper <tcooper@redhat.com>", "committedDate": "2020-06-09T13:41:52Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ1NTc2NA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3173#discussion_r437455764", "bodyText": "How is it reflected in the resource status? The user will see the \"summary\" with the original proposal and the final state will be Ready but no evidence that it's completed with error?", "author": "ppatierno", "createdAt": "2020-06-09T14:13:56Z", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/cruisecontrol/CruiseControlApiImpl.java", "diffHunk": "@@ -202,38 +202,40 @@ public CruiseControlApiImpl(Vertx vertx, int idleTimeout) {\n                                                 json.getString(CC_REST_API_ERROR_KEY)));\n                             }\n                             JsonObject statusJson = new JsonObject();\n-                            String taskStatus = jsonUserTask.getString(\"Status\");\n-                            statusJson.put(\"Status\", taskStatus);\n-                            // The status could be ACTIVE in which case there will not be a \"summary\" so we check that we are\n-                            // in a state that actually has that key.\n-                            if (taskStatus.equals(CruiseControlUserTaskStatus.IN_EXECUTION.toString()) ||\n-                                    taskStatus.equals(CruiseControlUserTaskStatus.COMPLETED.toString())) {\n-                                // We now need to extract the original response which is in a raw string (not nicely formatted JSON)\n-                                statusJson.put(\"summary\", ((JsonObject) Json.decodeValue(jsonUserTask.getString(\"originalResponse\"))).getJsonObject(\"summary\"));\n+                            String taskStatusStr = jsonUserTask.getString(\"Status\");\n+                            statusJson.put(\"Status\", taskStatusStr);\n+                            CruiseControlUserTaskStatus taskStatus = CruiseControlUserTaskStatus.lookup(taskStatusStr);\n+                            switch (taskStatus) {\n+                                case ACTIVE:\n+                                    // If the status is ACTIVE there will not be a \"summary\" so we skip pulling the summary key\n+                                    break;\n+                                case IN_EXECUTION:\n+                                    // Tasks in execution will be rebalance tasks, so their original response will contain the summary of the rebalance they are executing\n+                                    // We handle these in the same way as COMPLETED tasks so we drop down to that case.\n+                                case COMPLETED:\n+                                    // Completed tasks will have the original rebalance proposal summary in their original response\n+                                    statusJson.put(\"summary\", ((JsonObject) Json.decodeValue(jsonUserTask.getString(\"originalResponse\"))).getJsonObject(\"summary\"));\n+                                    break;\n+                                case COMPLETED_WITH_ERROR:\n+                                    // Completed with error tasks will have \"CompletedWithError\" as their original response, which is not Json.\n+                                    statusJson.put(\"summary\", jsonUserTask.getString(\"originalResponse\"));", "originalCommit": "3ccfe2d3e4243e0b53b4e0c93b8c9205bcc97be3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ1OTc2OQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3173#discussion_r437459769", "bodyText": "No the status of the field is still CompletedWithError and this will be picked up in the KRAO onRebalancing method  where the status will be set to NotReady.  We could just have a blank summary but in future this will hopefully contain details of the actual error (I have a rough idea for upstream CC PR to retain that info for the user task).", "author": "tomncooper", "createdAt": "2020-06-09T14:19:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ1NTc2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ2MjQ5OQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3173#discussion_r437462499", "bodyText": "No the status of the field is still CompletedWithError\n\nwhich status field? in the next sentence you said it's NotReady.\n\nand this will be picked up in the KRAO onRebalancing method where the status will be set to NotReady\n\nso you are saying that the KafkaRebalance will be in NotReady status but with a valid summary? I think it's really confusing for the user.", "author": "ppatierno", "createdAt": "2020-06-09T14:22:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ1NTc2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ2ODIwNA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3173#discussion_r437468204", "bodyText": "This is the CC client? It doesn't touch the KafkaReabalance status field. The KRAO does that in the onRebalancing method. The status field of the CruiseControlReponse's json is CompletedWithError which will trigger the appropriate branch in the KRAO which will not set a summary (which matches what it does currently).", "author": "tomncooper", "createdAt": "2020-06-09T14:29:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ1NTc2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ4MzQwMw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3173#discussion_r437483403", "bodyText": "You are right! I did too many reviews today! ;-)", "author": "ppatierno", "createdAt": "2020-06-09T14:49:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ1NTc2NA=="}], "type": "inlineReview"}, {"oid": "8ebe79d88835979d975eb71b7488f371e0fa96ef", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/8ebe79d88835979d975eb71b7488f371e0fa96ef", "message": "Refactored CC client to remove need to use user tasks response subclass\n\nSigned-off-by: Thomas Cooper <tcooper@redhat.com>", "committedDate": "2020-06-09T14:54:57Z", "type": "forcePushed"}, {"oid": "a611e63d213610b305718f0d0bf8d7540ac408a0", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/a611e63d213610b305718f0d0bf8d7540ac408a0", "message": "Refactored CC client to remove need to use user tasks response subclass\n\nSigned-off-by: Thomas Cooper <tcooper@redhat.com>", "committedDate": "2020-06-09T15:14:23Z", "type": "forcePushed"}, {"oid": "ef472fd364eb2b8440eaa67661fdbe87e6aa2293", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/ef472fd364eb2b8440eaa67661fdbe87e6aa2293", "message": "Refactored CC client to remove need to use user tasks response subclass\n\nSigned-off-by: Thomas Cooper <tcooper@redhat.com>", "committedDate": "2020-06-09T16:56:13Z", "type": "forcePushed"}, {"oid": "727259319118d3aacbc24917dd1ec8b33d27e602", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/727259319118d3aacbc24917dd1ec8b33d27e602", "message": "Refactored CC client to remove need to use user tasks response subclass\n\nSigned-off-by: Thomas Cooper <tcooper@redhat.com>", "committedDate": "2020-06-09T17:25:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk0ODQ2Ng==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3173#discussion_r437948466", "bodyText": "We use this Status string a few times, maybe worth making it a constant somewhere?", "author": "samuel-hawker", "createdAt": "2020-06-10T08:23:40Z", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/cruisecontrol/CruiseControlApiImpl.java", "diffHunk": "@@ -202,38 +202,40 @@ public CruiseControlApiImpl(Vertx vertx, int idleTimeout) {\n                                                 json.getString(CC_REST_API_ERROR_KEY)));\n                             }\n                             JsonObject statusJson = new JsonObject();\n-                            String taskStatus = jsonUserTask.getString(\"Status\");\n-                            statusJson.put(\"Status\", taskStatus);\n-                            // The status could be ACTIVE in which case there will not be a \"summary\" so we check that we are\n-                            // in a state that actually has that key.\n-                            if (taskStatus.equals(CruiseControlUserTaskStatus.IN_EXECUTION.toString()) ||\n-                                    taskStatus.equals(CruiseControlUserTaskStatus.COMPLETED.toString())) {\n-                                // We now need to extract the original response which is in a raw string (not nicely formatted JSON)\n-                                statusJson.put(\"summary\", ((JsonObject) Json.decodeValue(jsonUserTask.getString(\"originalResponse\"))).getJsonObject(\"summary\"));\n+                            String taskStatusStr = jsonUserTask.getString(\"Status\");", "originalCommit": "727259319118d3aacbc24917dd1ec8b33d27e602", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk1MTEzNQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3173#discussion_r437951135", "bodyText": "Missing a context.succeeding", "author": "samuel-hawker", "createdAt": "2020-06-10T08:27:55Z", "path": "cluster-operator/src/test/java/io/strimzi/operator/cluster/operator/assembly/KafkaRebalanceStateMachineTest.java", "diffHunk": "@@ -190,8 +192,8 @@ public String cruiseControlHost(String clusterName, String clusterNamespace) {\n         when(mockRebalanceOps.get(CLUSTER_NAMESPACE, RESOURCE_NAME)).thenReturn(kcRebalance);\n         when(mockRebalanceOps.getAsync(CLUSTER_NAMESPACE, RESOURCE_NAME)).thenReturn(Future.succeededFuture(kcRebalance));\n \n-        return kcrao.computeNextStatus(\n-                recon, HOST, client, kcRebalance, currentState, initialAnnotation, rbOptions).compose(result -> {\n+        return kcrao.computeNextStatus(recon, HOST, client, kcRebalance, currentState, initialAnnotation, rbOptions)\n+                .compose(result -> {", "originalCommit": "727259319118d3aacbc24917dd1ec8b33d27e602", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "fe9dd08c3146eaa811f52ac97785b1d71812b325", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/fe9dd08c3146eaa811f52ac97785b1d71812b325", "message": "Refactored CC client to remove need to use user tasks response subclass\n\nSigned-off-by: Thomas Cooper <tcooper@redhat.com>", "committedDate": "2020-06-10T10:22:04Z", "type": "commit"}, {"oid": "fe9dd08c3146eaa811f52ac97785b1d71812b325", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/fe9dd08c3146eaa811f52ac97785b1d71812b325", "message": "Refactored CC client to remove need to use user tasks response subclass\n\nSigned-off-by: Thomas Cooper <tcooper@redhat.com>", "committedDate": "2020-06-10T10:22:04Z", "type": "forcePushed"}]}