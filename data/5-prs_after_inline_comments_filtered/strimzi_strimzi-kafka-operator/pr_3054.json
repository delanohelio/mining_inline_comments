{"pr_number": 3054, "pr_title": "[systemtest][fixes] ListenersST, RollingUpdateST", "pr_createdAt": "2020-05-18T21:56:12Z", "pr_url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3054", "timeline": [{"oid": "462da1cc27a440988755dbce3e8a9f5bb70f266f", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/462da1cc27a440988755dbce3e8a9f5bb70f266f", "message": "split RollingUpdateST into two suites\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>", "committedDate": "2020-05-19T11:10:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIyMjQ5MQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3054#discussion_r427222491", "bodyText": "Do we rly need this wait? I just didn't had any issues with delete secret", "author": "Frawless", "createdAt": "2020-05-19T11:16:11Z", "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/kubeUtils/objects/SecretUtils.java", "diffHunk": "@@ -136,4 +137,14 @@ public static void waitForCertToChange(String originalCert, String secretName) {\n             }\n         });\n     }\n+\n+    public static void deleteSecretWithWait(String secretName, String namespace) {", "originalCommit": "462da1cc27a440988755dbce3e8a9f5bb70f266f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIyNTkzMA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3054#discussion_r427225930", "bodyText": "Maybe we don't, I tried to remove some race conditions by adding this wait. But I can remove it :) thanks for the comment", "author": "im-konge", "createdAt": "2020-05-19T11:22:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIyMjQ5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM3MDU4NA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3054#discussion_r427370584", "bodyText": "We discussed this offline -> we will keep this method, without it there is race condition -> creating secret when is in terminating state", "author": "im-konge", "createdAt": "2020-05-19T14:57:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIyMjQ5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMwMDkzNg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3054#discussion_r427300936", "bodyText": "I guess this will conflict with #3041?", "author": "scholzj", "createdAt": "2020-05-19T13:27:31Z", "path": "systemtest/src/test/java/io/strimzi/systemtest/rollingupdate/ManualRollingUpdateST.java", "diffHunk": "@@ -0,0 +1,252 @@\n+/*\n+ * Copyright Strimzi authors.\n+ * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n+ */\n+package io.strimzi.systemtest.rollingupdate;\n+\n+import io.fabric8.kubernetes.api.model.Event;\n+import io.strimzi.api.kafka.model.KafkaResources;\n+import io.strimzi.api.kafka.model.KafkaUser;\n+import io.strimzi.operator.common.Annotations;\n+import io.strimzi.systemtest.BaseST;\n+import io.strimzi.systemtest.Constants;\n+import io.strimzi.systemtest.kafkaclients.internalClients.InternalKafkaClient;\n+import io.strimzi.systemtest.resources.KubernetesResource;\n+import io.strimzi.systemtest.resources.ResourceManager;\n+import io.strimzi.systemtest.resources.crd.KafkaClientsResource;\n+import io.strimzi.systemtest.resources.crd.KafkaResource;\n+import io.strimzi.systemtest.resources.crd.KafkaTopicResource;\n+import io.strimzi.systemtest.resources.crd.KafkaUserResource;\n+import io.strimzi.systemtest.utils.kafkaUtils.KafkaTopicUtils;\n+import io.strimzi.systemtest.utils.kafkaUtils.KafkaUserUtils;\n+import io.strimzi.systemtest.utils.kubeUtils.controllers.StatefulSetUtils;\n+import io.strimzi.systemtest.utils.kubeUtils.objects.PodUtils;\n+import io.strimzi.test.TestUtils;\n+import io.strimzi.test.timemeasuring.Operation;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Tag;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Random;\n+\n+import static io.strimzi.systemtest.Constants.INTERNAL_CLIENTS_USED;\n+import static io.strimzi.systemtest.Constants.REGRESSION;\n+import static io.strimzi.systemtest.k8s.Events.Created;\n+import static io.strimzi.systemtest.k8s.Events.Pulled;\n+import static io.strimzi.systemtest.k8s.Events.Scheduled;\n+import static io.strimzi.systemtest.k8s.Events.Started;\n+import static io.strimzi.systemtest.matchers.Matchers.hasAllOfReasons;\n+import static io.strimzi.test.k8s.KubeClusterResource.kubeClient;\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.CoreMatchers.not;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.collection.IsMapContaining.hasEntry;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+@Tag(REGRESSION)\n+@Tag(INTERNAL_CLIENTS_USED)\n+class ManualRollingUpdateST extends BaseST {\n+\n+    private static final Logger LOGGER = LogManager.getLogger(RollingUpdateST.class);\n+\n+    static final String NAMESPACE = \"manual-rolling-update-cluster-test\";\n+\n+    /**\n+     * This test cover case, when KafkaRoller will not roll Kafka pods, because created topic doesn't meet requirements for roll remaining pods\n+     * 1. Deploy kafka cluster with 4 pods\n+     * 2. Create topic with 4 replicas\n+     * 3. Scale down kafka cluster to 3 replicas\n+     * 4. Trigger rolling update for Kafka cluster\n+     * 5. Rolling update will not be performed, because topic which we created had some replicas on deleted pods - manual fix is needed in that case\n+     */\n+    @Test\n+    void testKafkaWontRollUpBecauseTopic() {", "originalCommit": "ece127376658a3feefbbb581a2758eb1033886f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMxNzU1NA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3054#discussion_r427317554", "bodyText": "Yes I'm waiting for merge, then I'll resolve conflicts", "author": "im-konge", "createdAt": "2020-05-19T13:50:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMwMDkzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM1NTU5Ng==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3054#discussion_r427355596", "bodyText": "Yes. I am sure Lukas will deal with it :D", "author": "Frawless", "createdAt": "2020-05-19T14:39:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMwMDkzNg=="}], "type": "inlineReview"}, {"oid": "a47c898730901820402ac5803804dbfa3025cda9", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/a47c898730901820402ac5803804dbfa3025cda9", "message": "fixup! fixup! fixup! split RollingUpdateST into two suites\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>", "committedDate": "2020-05-20T06:45:41Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg2ODgyNw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3054#discussion_r427868827", "bodyText": "TBH, I'm not sure I like the name of this. It suggests that this is testing manual rolling updates. But in reality these are tests using manual rolling updates, but really testing other features, or?", "author": "scholzj", "createdAt": "2020-05-20T09:26:47Z", "path": "systemtest/src/test/java/io/strimzi/systemtest/rollingupdate/ManualRollingUpdateST.java", "diffHunk": "@@ -0,0 +1,239 @@\n+/*\n+ * Copyright Strimzi authors.\n+ * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n+ */\n+package io.strimzi.systemtest.rollingupdate;\n+\n+import io.fabric8.kubernetes.api.model.Event;\n+import io.strimzi.api.kafka.model.KafkaResources;\n+import io.strimzi.api.kafka.model.KafkaUser;\n+import io.strimzi.operator.common.Annotations;\n+import io.strimzi.systemtest.BaseST;\n+import io.strimzi.systemtest.Constants;\n+import io.strimzi.systemtest.kafkaclients.internalClients.InternalKafkaClient;\n+import io.strimzi.systemtest.resources.KubernetesResource;\n+import io.strimzi.systemtest.resources.ResourceManager;\n+import io.strimzi.systemtest.resources.crd.KafkaClientsResource;\n+import io.strimzi.systemtest.resources.crd.KafkaResource;\n+import io.strimzi.systemtest.resources.crd.KafkaTopicResource;\n+import io.strimzi.systemtest.resources.crd.KafkaUserResource;\n+import io.strimzi.systemtest.utils.kafkaUtils.KafkaTopicUtils;\n+import io.strimzi.systemtest.utils.kafkaUtils.KafkaUserUtils;\n+import io.strimzi.systemtest.utils.kubeUtils.controllers.StatefulSetUtils;\n+import io.strimzi.systemtest.utils.kubeUtils.objects.PodUtils;\n+import io.strimzi.test.TestUtils;\n+import io.strimzi.test.timemeasuring.Operation;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Tag;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Random;\n+\n+import static io.strimzi.systemtest.Constants.INTERNAL_CLIENTS_USED;\n+import static io.strimzi.systemtest.Constants.REGRESSION;\n+import static io.strimzi.systemtest.k8s.Events.Created;\n+import static io.strimzi.systemtest.k8s.Events.Pulled;\n+import static io.strimzi.systemtest.k8s.Events.Scheduled;\n+import static io.strimzi.systemtest.k8s.Events.Started;\n+import static io.strimzi.systemtest.matchers.Matchers.hasAllOfReasons;\n+import static io.strimzi.test.k8s.KubeClusterResource.kubeClient;\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.CoreMatchers.not;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+@Tag(REGRESSION)\n+@Tag(INTERNAL_CLIENTS_USED)\n+class ManualRollingUpdateST extends BaseST {", "originalCommit": "a47c898730901820402ac5803804dbfa3025cda9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk0MTk1Mg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3054#discussion_r427941952", "bodyText": "Well we wished that one of reviewers will have some comment on this name -> if you have some better idea, I'll really appreciate it.\nOne test is testing manual rolling update. Maybe name KafkaRollerST will be better.\nYour toughts @Frawless @see-quick?", "author": "im-konge", "createdAt": "2020-05-20T11:40:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg2ODgyNw=="}], "type": "inlineReview"}, {"oid": "c2e7f5712c02957fa4b858690e0a297749a78ba4", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/c2e7f5712c02957fa4b858690e0a297749a78ba4", "message": "split ManulRollingUpdateST to more suites and fix some issues\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>", "committedDate": "2020-05-20T21:25:23Z", "type": "forcePushed"}, {"oid": "f44a3ca9eae33752e7fc1f234d83b736b0e8726b", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/f44a3ca9eae33752e7fc1f234d83b736b0e8726b", "message": "fixes\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>", "committedDate": "2020-05-21T10:59:21Z", "type": "commit"}, {"oid": "291478ee039588ca355f9d329487e2ed5b6dccb1", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/291478ee039588ca355f9d329487e2ed5b6dccb1", "message": "split RollingUpdateST into two suites\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>", "committedDate": "2020-05-21T10:59:21Z", "type": "commit"}, {"oid": "cf4fcaeb695584ab94ef944e9c213b391e9e53dc", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/cf4fcaeb695584ab94ef944e9c213b391e9e53dc", "message": "fixup! split RollingUpdateST into two suites\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>", "committedDate": "2020-05-21T10:59:21Z", "type": "commit"}, {"oid": "063a674d4fd1ab86c5aefb4c58ff9fc58c16324e", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/063a674d4fd1ab86c5aefb4c58ff9fc58c16324e", "message": "fixup! fixup! split RollingUpdateST into two suites\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>", "committedDate": "2020-05-21T10:59:21Z", "type": "commit"}, {"oid": "2b54308c616dc575319e62f74dba8af092704588", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/2b54308c616dc575319e62f74dba8af092704588", "message": "fixup! fixup! fixup! split RollingUpdateST into two suites\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>", "committedDate": "2020-05-21T10:59:21Z", "type": "commit"}, {"oid": "a95b590e4bfbcc1553f9344bebd6028472dc4293", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/a95b590e4bfbcc1553f9344bebd6028472dc4293", "message": "split ManulRollingUpdateST to more suites and fix some issues\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>", "committedDate": "2020-05-21T10:59:21Z", "type": "commit"}, {"oid": "9b1471870075d2f6dab3d24dc171cc62e1f085f3", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/9b1471870075d2f6dab3d24dc171cc62e1f085f3", "message": "change operation timeout again\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>", "committedDate": "2020-05-21T10:59:21Z", "type": "commit"}, {"oid": "9b1471870075d2f6dab3d24dc171cc62e1f085f3", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/9b1471870075d2f6dab3d24dc171cc62e1f085f3", "message": "change operation timeout again\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>", "committedDate": "2020-05-21T10:59:21Z", "type": "forcePushed"}, {"oid": "e94166ca96f770dee74aa09f8b84ae74f84dc8e0", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/e94166ca96f770dee74aa09f8b84ae74f84dc8e0", "message": "fix indent\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>", "committedDate": "2020-05-21T12:35:54Z", "type": "commit"}]}