{"pr_number": 459, "pr_title": "[aws-datastore] Fix unhandled exceptions when no API is available", "pr_createdAt": "2020-05-13T21:42:53Z", "pr_url": "https://github.com/aws-amplify/amplify-android/pull/459", "timeline": [{"oid": "f83b06c2fd9b7daba117c62ac8298960167357c6", "url": "https://github.com/aws-amplify/amplify-android/commit/f83b06c2fd9b7daba117c62ac8298960167357c6", "message": "[aws-datastore] Prevent host app from crashing on unhandled exception", "committedDate": "2020-05-13T21:36:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc1MTQ2NA==", "url": "https://github.com/aws-amplify/amplify-android/pull/459#discussion_r424751464", "bodyText": "This can be a desirable behavior. As an SDK, we cant escalate errors back to the user, and let them decide what to do with them. If the user does catch (Throwable e) { /* gobble gobble */ } - well, that's their choice.", "author": "jamesonwilliams", "createdAt": "2020-05-13T21:50:04Z", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/AWSDataStorePlugin.java", "diffHunk": "@@ -83,6 +89,34 @@ private AWSDataStorePlugin(\n             @NonNull ModelSchemaRegistry modelSchemaRegistry,\n             @NonNull ApiCategory api,\n             @Nullable DataStoreConfiguration userProvidedConfiguration) {\n+        // See https://github.com/ReactiveX/RxJava/wiki/What's-different-in-2.0#error-handling\n+        // Without this, the host app crashes on an unhandled exception.", "originalCommit": "f83b06c2fd9b7daba117c62ac8298960167357c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTgwOTY1MQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/459#discussion_r425809651", "bodyText": "Removed", "author": "rjuliano", "createdAt": "2020-05-15T13:41:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc1MTQ2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc1MzQ5Mg==", "url": "https://github.com/aws-amplify/amplify-android/pull/459#discussion_r424753492", "bodyText": "I'm worried about including this, for two reasons.\n\nOperational Correctness.\n\na. I think we should let errors propagate to the user. If they come from our library, we address them as bugs. If they come from the user's usage, the user can easily identify them, and fix them. (Or, they can catch (Throwable e) { /* gobble gobble */}, but that's their choice, not our prescription.)\nb.  Is this the right time and place to be calling this RxJavaPlugins.setErrorHandler? What if the user also uses Rx (most do), and wants to call RxJavaPlugins.setErrorHandler in their app? What if we calls ours at time t1, and the they call theirs at time t2, and the relationship is difficult to detect and understand? Have we even picked the right t1?\n\nMaintainability.\n\na. This is a big list of different types of exceptions. There will be many types of exceptions. Each will come with some business rules. This code block will end up being a free for all where we encode business rules for unrelated software components.\nb. More basically, this shouldn't be inlined right into the plugin, it should be some external handler class. At most, the AWSDataStorePlugin might do RxJavaPlugins.setErrorHandler(DataStoreErrorHandler::handle)\nTo that point, should this not be the error handler callback that we just added with the config work? Instead of this custom, inline, handler?", "author": "jamesonwilliams", "createdAt": "2020-05-13T21:54:51Z", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/AWSDataStorePlugin.java", "diffHunk": "@@ -83,6 +89,34 @@ private AWSDataStorePlugin(\n             @NonNull ModelSchemaRegistry modelSchemaRegistry,\n             @NonNull ApiCategory api,\n             @Nullable DataStoreConfiguration userProvidedConfiguration) {\n+        // See https://github.com/ReactiveX/RxJava/wiki/What's-different-in-2.0#error-handling\n+        // Without this, the host app crashes on an unhandled exception.\n+        RxJavaPlugins.setErrorHandler(e -> {", "originalCommit": "f83b06c2fd9b7daba117c62ac8298960167357c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc4MjUxMA==", "url": "https://github.com/aws-amplify/amplify-android/pull/459#discussion_r424782510", "bodyText": "All fair points. I guess my thinking was that we wouldn't want to be the ones crashing the app because of an unhandled exception. I'm definitely not crazy about the pattern myself. I like the idea of perhaps passing something in. Let me circle back on this.", "author": "rjuliano", "createdAt": "2020-05-13T23:12:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc1MzQ5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTgwOTg1NQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/459#discussion_r425809855", "bodyText": "removed this guy too.", "author": "rjuliano", "createdAt": "2020-05-15T13:41:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc1MzQ5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc1NTA3NQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/459#discussion_r424755075", "bodyText": "At a high level, it might make sense to allow the system to continue operating, if the orchestrator cannot start.\nBut, this code is a little hard to follow. Why do you need the errorOccured flag? Wouldn't onErrorComplete() be ~approximately enough for this whole PR?", "author": "jamesonwilliams", "createdAt": "2020-05-13T21:58:46Z", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/Orchestrator.java", "diffHunk": "@@ -97,12 +101,28 @@ public Orchestrator(\n      */\n     @NonNull\n     public Completable start() {\n+        AtomicBoolean errorOccurred = new AtomicBoolean(false);\n         return Completable.fromAction(() -> {\n+            LOG.debug(\"Start observing changes made to local store.\");\n             storageObserver.startObservingStorageChanges();\n+            LOG.debug(\"Establishing subscriptions with remote data store.\");\n             subscriptionProcessor.startSubscriptions();\n-            syncProcessor.hydrate().blockingAwait();\n-            mutationProcessor.startDrainingMutationOutbox();\n-            subscriptionProcessor.startDrainingMutationBuffer();\n+            LOG.debug(\"Start initial sync from remote data store.\");\n+            syncProcessor\n+                .hydrate()\n+                .doOnError(error -> {\n+                    LOG.warn(\"Unable to perform initial synchronization.\", error);\n+                    errorOccurred.set(true);\n+                }).doOnComplete(() -> {\n+                    if (!errorOccurred.get()) {\n+                        LOG.debug(\"Starting MutationProcessor and SubscriptionProcessor.\");\n+                        mutationProcessor.startDrainingMutationOutbox();\n+                        subscriptionProcessor.startDrainingMutationBuffer();\n+                    }\n+                })\n+                // This will prevent the host app from crashing if no API is configured.\n+                .onErrorComplete()", "originalCommit": "f83b06c2fd9b7daba117c62ac8298960167357c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTgxMDk4MA==", "url": "https://github.com/aws-amplify/amplify-android/pull/459#discussion_r425810980", "bodyText": "Don't need this onErrorComplete here since we're handling the the errors for the individual steps.", "author": "rjuliano", "createdAt": "2020-05-15T13:43:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc1NTA3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc1NTIzNA==", "url": "https://github.com/aws-amplify/amplify-android/pull/459#discussion_r424755234", "bodyText": "Please use org.junit.Assert.assertEquals.", "author": "jamesonwilliams", "createdAt": "2020-05-13T21:59:05Z", "path": "aws-datastore/src/test/java/com/amplifyframework/datastore/AWSDataStorePluginTest.java", "diffHunk": "@@ -40,8 +43,14 @@\n \n import java.util.Collections;\n \n+import io.reactivex.Completable;\n+\n import static androidx.test.core.app.ApplicationProvider.getApplicationContext;\n+import static junit.framework.TestCase.assertEquals;", "originalCommit": "f83b06c2fd9b7daba117c62ac8298960167357c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTk1Nzk5Nw==", "url": "https://github.com/aws-amplify/amplify-android/pull/459#discussion_r425957997", "bodyText": "done", "author": "rjuliano", "createdAt": "2020-05-15T17:51:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc1NTIzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc1NTQxMQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/459#discussion_r424755411", "bodyText": "Where is the unchecked call in this method?", "author": "jamesonwilliams", "createdAt": "2020-05-13T21:59:29Z", "path": "aws-datastore/src/test/java/com/amplifyframework/datastore/AWSDataStorePluginTest.java", "diffHunk": "@@ -61,14 +69,14 @@\n      * the SyncProcessor is running. Otherwise, either the SyncProcessor is *not*\n      * running, or it is running but not functioning as we expect it to.\n      */\n+    @SuppressWarnings(\"unchecked\")", "originalCommit": "f83b06c2fd9b7daba117c62ac8298960167357c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTk1OTM1Mw==", "url": "https://github.com/aws-amplify/amplify-android/pull/459#discussion_r425959353", "bodyText": "For whatever reason, all of the .when(mockApiPlugin).<whatever> methods get marked as unchecked. If I explicitly cast it, I get dinged for something else :)", "author": "rjuliano", "createdAt": "2020-05-15T17:54:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc1NTQxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc1NjAyMw==", "url": "https://github.com/aws-amplify/amplify-android/pull/459#discussion_r424756023", "bodyText": "I think we should start splitting tests out into other classes. The ones I have in here right now are related to model synchronization. Probably AWSDataStorePluginTest was a bad name to begin with. All in all, the plugin does a lot of different stuff. I think we are ultimately funneling all of our high level tests into this class and its going to end up having a lot of unrelated stuff and being a bit of a maintenance issue.", "author": "jamesonwilliams", "createdAt": "2020-05-13T22:00:52Z", "path": "aws-datastore/src/test/java/com/amplifyframework/datastore/AWSDataStorePluginTest.java", "diffHunk": "@@ -52,7 +61,6 @@\n @RunWith(RobolectricTestRunner.class)\n public final class AWSDataStorePluginTest {", "originalCommit": "f83b06c2fd9b7daba117c62ac8298960167357c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTk2MTYzNQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/459#discussion_r425961635", "bodyText": "If it's ok, I'd like to undertake that as a separate effort. At the very least, we could break it up in API-mode tests vs non-API-mode tests, but it can be broken down much further.", "author": "rjuliano", "createdAt": "2020-05-15T17:58:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc1NjAyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTk2OTE4Nw==", "url": "https://github.com/aws-amplify/amplify-android/pull/459#discussion_r425969187", "bodyText": "Sounds good to me", "author": "jamesonwilliams", "createdAt": "2020-05-15T18:14:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc1NjAyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc1NjQ3NA==", "url": "https://github.com/aws-amplify/amplify-android/pull/459#discussion_r424756474", "bodyText": "You may find utility in the DataStoreCategoryConfigurator . Er, maybe thats in androidTest though isn't it...", "author": "jamesonwilliams", "createdAt": "2020-05-13T22:01:50Z", "path": "aws-datastore/src/test/java/com/amplifyframework/datastore/AWSDataStorePluginTest.java", "diffHunk": "@@ -79,8 +87,10 @@ public void setup() {\n     @Test\n     public void configureAndInitializeInLocalMode() throws AmplifyException {\n         //Configure DataStore with an empty config (All defaults)\n-        awsDataStorePlugin.configure(new JSONObject(), context);\n-        awsDataStorePlugin.initialize(context);\n+        ApiCategory emptyApiCategory = spy(ApiCategory.class);\n+        AWSDataStorePlugin standAloneDataStorePlugin = new AWSDataStorePlugin(modelProvider, emptyApiCategory);", "originalCommit": "f83b06c2fd9b7daba117c62ac8298960167357c6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc1NzQwNA==", "url": "https://github.com/aws-amplify/amplify-android/pull/459#discussion_r424757404", "bodyText": "I think you could do blockingGet(), save the return value, and then do if (returnedValue != null) throw returnedValue;", "author": "jamesonwilliams", "createdAt": "2020-05-13T22:04:04Z", "path": "aws-datastore/src/test/java/com/amplifyframework/datastore/AWSDataStorePluginTest.java", "diffHunk": "@@ -93,18 +103,57 @@ public void configureAndInitializeInLocalMode() throws AmplifyException {\n      */\n     @Test\n     public void configureAndInitializeInApiMode() throws JSONException, AmplifyException {\n-        Amplify.addPlugin(mockApiPlugin());\n-        JSONObject amplifyJson = new JSONObject().put(\"api\", new JSONObject());\n-        AmplifyConfiguration configuration = AmplifyConfiguration.fromJson(amplifyJson);\n-        Amplify.configure(configuration, context);\n-\n-        JSONObject pluginJson = new JSONObject()\n+        ApiCategory mockApiCategory = mockApiCategoryWithGraphQlApi();\n+        JSONObject dataStorePluginJson = new JSONObject()\n             .put(\"syncIntervalInMinutes\", 60);\n-        awsDataStorePlugin.configure(pluginJson, context);\n+        AWSDataStorePlugin awsDataStorePlugin = new AWSDataStorePlugin(modelProvider, mockApiCategory);\n+        awsDataStorePlugin.configure(dataStorePluginJson, context);\n         awsDataStorePlugin.initialize(context);\n         assertSyncProcessorStarted();\n     }\n \n+    /**\n+     * Simulate a situation where the user has added the API plugin, but it's\n+     * either not pushed or exceptions occur while trying to start up the sync processes.\n+     * The outcome is that the local store should still be available and the\n+     * host app should not crash.\n+     * @throws JSONException If an exception occurs while building the JSON configuration.\n+     * @throws AmplifyException If an exception occurs setting up the mock API\n+     */\n+    @Test\n+    public void configureAndInitializeInApiModeWithoutApi() throws JSONException, AmplifyException {\n+        ApiCategory mockApiCategory = mockApiPluginWithExceptions();\n+        JSONObject dataStorePluginJson = new JSONObject()\n+            .put(\"syncIntervalInMinutes\", 60);\n+        AWSDataStorePlugin awsDataStorePlugin = new AWSDataStorePlugin(modelProvider, mockApiCategory);\n+        awsDataStorePlugin.configure(dataStorePluginJson, context);\n+        awsDataStorePlugin.initialize(context);\n+\n+        // Trick the DataStore since it's not getting initialized as part of the Amplify.initialize call chain\n+        Amplify.Hub.publish(HubChannel.DATASTORE, HubEvent.create(InitializationStatus.SUCCEEDED));\n+\n+        Person person1 = createPerson(\"Test\", \"Dummy I\");\n+        Completable.fromSingle(single -> { // Save a record to local store\n+            awsDataStorePlugin.save(person1, itemSaved -> {\n+                assertNotNull(itemSaved.item().getId());\n+                assertEquals(person1.getLastName(), itemSaved.item().getLastName());\n+                single.onSuccess(true);\n+            }, single::onError);\n+        }).andThen(\n+            Completable.fromSingle(single -> { // Verify the record has been saved\n+                awsDataStorePlugin.query(Person.class, results -> {\n+                    Person actualPerson = results.next();\n+                    assertNotNull(actualPerson);\n+                    assertFalse(results.hasNext()); // We should only have one result.\n+                    assertEquals(person1, actualPerson);\n+                    single.onSuccess(true);\n+                }, single::onError);\n+            })\n+        ).doOnError(error -> {\n+            fail(error.getMessage());\n+        }).blockingAwait();", "originalCommit": "f83b06c2fd9b7daba117c62ac8298960167357c6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "590082c76d44100f35f54dab2a154509f9eb763c", "url": "https://github.com/aws-amplify/amplify-android/commit/590082c76d44100f35f54dab2a154509f9eb763c", "message": "Rollback first attempt", "committedDate": "2020-05-14T11:11:22Z", "type": "commit"}, {"oid": "9782914425b4fc850f8bafe7016cb66a77edeb97", "url": "https://github.com/aws-amplify/amplify-android/commit/9782914425b4fc850f8bafe7016cb66a77edeb97", "message": "[aws-datastore] Fix startup issues when in standalone mode", "committedDate": "2020-05-15T13:13:55Z", "type": "commit"}, {"oid": "4fcc442f4d3bcca61615430e00a38016a337c71f", "url": "https://github.com/aws-amplify/amplify-android/commit/4fcc442f4d3bcca61615430e00a38016a337c71f", "message": "Checkstyle and remote unnecessary change to Orchestrator", "committedDate": "2020-05-15T13:27:25Z", "type": "commit"}, {"oid": "2e407dfe3c64d021461d02d431c55ac497fe1325", "url": "https://github.com/aws-amplify/amplify-android/commit/2e407dfe3c64d021461d02d431c55ac497fe1325", "message": "Rebased and added error handler to SubscriptionProcessor", "committedDate": "2020-05-15T17:44:12Z", "type": "commit"}, {"oid": "5ca709c62217b32f7039dfef9464927713442638", "url": "https://github.com/aws-amplify/amplify-android/commit/5ca709c62217b32f7039dfef9464927713442638", "message": "deleted ghost file", "committedDate": "2020-05-15T17:48:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTk2NTU0OQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/459#discussion_r425965549", "bodyText": "super minor nit: \"datastore\" vs. \"data store\"", "author": "TrekSoft", "createdAt": "2020-05-15T18:06:38Z", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/SubscriptionProcessor.java", "diffHunk": "@@ -115,6 +115,14 @@ void startSubscriptions() {\n             ));\n             latch.await(SUBSCRIPTION_START_TIMEOUT_MS, TimeUnit.MILLISECONDS);\n         })\n+        .doOnError(exception -> {\n+            LOG.warn(\"An error occurred with one of the subscriptions to the remote data store for \" +", "originalCommit": "5ca709c62217b32f7039dfef9464927713442638", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTk2NzQxMA==", "url": "https://github.com/aws-amplify/amplify-android/pull/459#discussion_r425967410", "bodyText": "Actually, neither!\nIt's the DataStore.", "author": "jamesonwilliams", "createdAt": "2020-05-15T18:10:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTk2NTU0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTk2Nzc2OQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/459#discussion_r425967769", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        LOG.warn(\"An error occurred with one of the subscriptions to the remote data store for \" +\n          \n          \n            \n                        LOG.warn(\"An error occurred with one of the subscriptions to the remote DataStore for \" +", "author": "jamesonwilliams", "createdAt": "2020-05-15T18:11:20Z", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/SubscriptionProcessor.java", "diffHunk": "@@ -115,6 +115,14 @@ void startSubscriptions() {\n             ));\n             latch.await(SUBSCRIPTION_START_TIMEOUT_MS, TimeUnit.MILLISECONDS);\n         })\n+        .doOnError(exception -> {\n+            LOG.warn(\"An error occurred with one of the subscriptions to the remote data store for \" +", "originalCommit": "5ca709c62217b32f7039dfef9464927713442638", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTk2ODYzNg==", "url": "https://github.com/aws-amplify/amplify-android/pull/459#discussion_r425968636", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            \"model \"+clazz.getSimpleName()+\" \"+subscriptionType.name(),\n          \n          \n            \n                            \"model \" + clazz.getSimpleName() + \" \" + subscriptionType.name(),", "author": "jamesonwilliams", "createdAt": "2020-05-15T18:13:04Z", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/SubscriptionProcessor.java", "diffHunk": "@@ -115,6 +115,14 @@ void startSubscriptions() {\n             ));\n             latch.await(SUBSCRIPTION_START_TIMEOUT_MS, TimeUnit.MILLISECONDS);\n         })\n+        .doOnError(exception -> {\n+            LOG.warn(\"An error occurred with one of the subscriptions to the remote data store for \" +\n+                \"model \"+clazz.getSimpleName()+\" \"+subscriptionType.name(),", "originalCommit": "5ca709c62217b32f7039dfef9464927713442638", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTk2OTAxMQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/459#discussion_r425969011", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import static junit.framework.TestCase.assertEquals;\n          \n          \n            \n            import static org.junit.Assert.assertEquals;", "author": "jamesonwilliams", "createdAt": "2020-05-15T18:13:49Z", "path": "aws-datastore/src/test/java/com/amplifyframework/datastore/AWSDataStorePluginTest.java", "diffHunk": "@@ -40,8 +43,14 @@\n \n import java.util.Collections;\n \n+import io.reactivex.Completable;\n+\n import static androidx.test.core.app.ApplicationProvider.getApplicationContext;\n+import static junit.framework.TestCase.assertEquals;", "originalCommit": "5ca709c62217b32f7039dfef9464927713442638", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTk2OTkxMQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/459#discussion_r425969911", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @SuppressWarnings(\"unchecked\")\n          \n      \n    \n    \n  \n\nI'd expect it to be on the class, though -- or on one of the @Test. Here one the @Before, it doesn't seem like it suppressing anything inside of this particular method.", "author": "jamesonwilliams", "createdAt": "2020-05-15T18:15:48Z", "path": "aws-datastore/src/test/java/com/amplifyframework/datastore/AWSDataStorePluginTest.java", "diffHunk": "@@ -61,14 +69,14 @@\n      * the SyncProcessor is running. Otherwise, either the SyncProcessor is *not*\n      * running, or it is running but not functioning as we expect it to.\n      */\n+    @SuppressWarnings(\"unchecked\")", "originalCommit": "5ca709c62217b32f7039dfef9464927713442638", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTk3MTI1Nw==", "url": "https://github.com/aws-amplify/amplify-android/pull/459#discussion_r425971257", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    }).blockingAwait();\n          \n          \n            \n                    }).blockingAwait(OPERATION_TIMEOUT_MS, TimeUnit.MILLISECONDS);\n          \n      \n    \n    \n  \n\n^ This won't quite work via the \"accept a change\" UX, unfortunately.\nAnyway, this will help prevent our test from hanging indefinitely in case something goes wrong.", "author": "jamesonwilliams", "createdAt": "2020-05-15T18:18:32Z", "path": "aws-datastore/src/test/java/com/amplifyframework/datastore/AWSDataStorePluginTest.java", "diffHunk": "@@ -93,18 +103,57 @@ public void configureAndInitializeInLocalMode() throws AmplifyException {\n      */\n     @Test\n     public void configureAndInitializeInApiMode() throws JSONException, AmplifyException {\n-        Amplify.addPlugin(mockApiPlugin());\n-        JSONObject amplifyJson = new JSONObject().put(\"api\", new JSONObject());\n-        AmplifyConfiguration configuration = AmplifyConfiguration.fromJson(amplifyJson);\n-        Amplify.configure(configuration, context);\n-\n-        JSONObject pluginJson = new JSONObject()\n+        ApiCategory mockApiCategory = mockApiCategoryWithGraphQlApi();\n+        JSONObject dataStorePluginJson = new JSONObject()\n             .put(\"syncIntervalInMinutes\", 60);\n-        awsDataStorePlugin.configure(pluginJson, context);\n+        AWSDataStorePlugin awsDataStorePlugin = new AWSDataStorePlugin(modelProvider, mockApiCategory);\n+        awsDataStorePlugin.configure(dataStorePluginJson, context);\n         awsDataStorePlugin.initialize(context);\n         assertSyncProcessorStarted();\n     }\n \n+    /**\n+     * Simulate a situation where the user has added the API plugin, but it's\n+     * either not pushed or exceptions occur while trying to start up the sync processes.\n+     * The outcome is that the local store should still be available and the\n+     * host app should not crash.\n+     * @throws JSONException If an exception occurs while building the JSON configuration.\n+     * @throws AmplifyException If an exception occurs setting up the mock API\n+     */\n+    @Test\n+    public void configureAndInitializeInApiModeWithoutApi() throws JSONException, AmplifyException {\n+        ApiCategory mockApiCategory = mockApiPluginWithExceptions();\n+        JSONObject dataStorePluginJson = new JSONObject()\n+            .put(\"syncIntervalInMinutes\", 60);\n+        AWSDataStorePlugin awsDataStorePlugin = new AWSDataStorePlugin(modelProvider, mockApiCategory);\n+        awsDataStorePlugin.configure(dataStorePluginJson, context);\n+        awsDataStorePlugin.initialize(context);\n+\n+        // Trick the DataStore since it's not getting initialized as part of the Amplify.initialize call chain\n+        Amplify.Hub.publish(HubChannel.DATASTORE, HubEvent.create(InitializationStatus.SUCCEEDED));\n+\n+        Person person1 = createPerson(\"Test\", \"Dummy I\");\n+        Completable.fromSingle(single -> { // Save a record to local store\n+            awsDataStorePlugin.save(person1, itemSaved -> {\n+                assertNotNull(itemSaved.item().getId());\n+                assertEquals(person1.getLastName(), itemSaved.item().getLastName());\n+                single.onSuccess(true);\n+            }, single::onError);\n+        }).andThen(\n+            Completable.fromSingle(single -> { // Verify the record has been saved\n+                awsDataStorePlugin.query(Person.class, results -> {\n+                    Person actualPerson = results.next();\n+                    assertNotNull(actualPerson);\n+                    assertFalse(results.hasNext()); // We should only have one result.\n+                    assertEquals(person1, actualPerson);\n+                    single.onSuccess(true);\n+                }, single::onError);\n+            })\n+        ).doOnError(error -> {\n+            fail(error.getMessage());\n+        }).blockingAwait();", "originalCommit": "5ca709c62217b32f7039dfef9464927713442638", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ec40b11b32d53147a76f1043f17a471709a0e261", "url": "https://github.com/aws-amplify/amplify-android/commit/ec40b11b32d53147a76f1043f17a471709a0e261", "message": "Apply suggestions from code review\r\n\r\nminor PR fixes\n\nCo-authored-by: Jameson Williams <jhwill@amazon.com>", "committedDate": "2020-05-15T18:56:54Z", "type": "commit"}, {"oid": "a804eba4f824486645f65061c5bf23fbdb36d896", "url": "https://github.com/aws-amplify/amplify-android/commit/a804eba4f824486645f65061c5bf23fbdb36d896", "message": "Checkstyle and other minor tweaks", "committedDate": "2020-05-15T19:06:10Z", "type": "commit"}]}