{"pr_number": 1072, "pr_title": "fix(aws-api): dont fire error if rest op canceled", "pr_createdAt": "2020-12-23T22:28:15Z", "pr_url": "https://github.com/aws-amplify/amplify-android/pull/1072", "timeline": [{"oid": "ba8c9af9c364f9e91aee591950c99e2d5e551c2a", "url": "https://github.com/aws-amplify/amplify-android/commit/ba8c9af9c364f9e91aee591950c99e2d5e551c2a", "message": "fix(aws-api): dont fire error if rest op canceled\n\niOS doesn't fire any terminal event when a REST operation is canceled.\n\nWhen an Rx subscription is diposed, neither onError nor onComplete is\ncalled.\n\nIn those cases, there is no notification of cancelation/disposal.\n\nThis commit aligns Android's behavior, so that an operation will\nterminate silently, when canceled.", "committedDate": "2020-12-23T22:35:34Z", "type": "commit"}, {"oid": "ba8c9af9c364f9e91aee591950c99e2d5e551c2a", "url": "https://github.com/aws-amplify/amplify-android/commit/ba8c9af9c364f9e91aee591950c99e2d5e551c2a", "message": "fix(aws-api): dont fire error if rest op canceled\n\niOS doesn't fire any terminal event when a REST operation is canceled.\n\nWhen an Rx subscription is diposed, neither onError nor onComplete is\ncalled.\n\nIn those cases, there is no notification of cancelation/disposal.\n\nThis commit aligns Android's behavior, so that an operation will\nterminate silently, when canceled.", "committedDate": "2020-12-23T22:35:34Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODgzMTc0MQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/1072#discussion_r548831741", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void responseEmittedIfOperationWhenOperationSucceeds() throws ApiException {\n          \n          \n            \n                public void responseEmittedWhenOperationSucceeds() throws ApiException {", "author": "jamesonwilliams", "createdAt": "2020-12-25T08:22:55Z", "path": "aws-api/src/test/java/com/amplifyframework/api/aws/operation/AWSRestOperationTest.java", "diffHunk": "@@ -0,0 +1,124 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.api.aws.operation;\n+\n+import com.amplifyframework.api.ApiException;\n+import com.amplifyframework.api.rest.HttpMethod;\n+import com.amplifyframework.api.rest.RestOperationRequest;\n+import com.amplifyframework.api.rest.RestResponse;\n+import com.amplifyframework.testutils.Await;\n+\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import java.io.IOException;\n+import java.util.concurrent.Callable;\n+\n+import okhttp3.HttpUrl;\n+import okhttp3.OkHttpClient;\n+import okhttp3.mockwebserver.MockResponse;\n+import okhttp3.mockwebserver.MockWebServer;\n+\n+import static java.util.Collections.emptyMap;\n+import static org.junit.Assert.assertThrows;\n+import static org.junit.Assert.assertTrue;\n+\n+/**\n+ * Tests the {@link AWSRestOperation}.\n+ */\n+public final class AWSRestOperationTest {\n+    private MockWebServer server;\n+    private HttpUrl baseUrl;\n+    private OkHttpClient client;\n+\n+    /**\n+     * Sets up a mock web server to serve fake responses.\n+     * @throws IOException while starting the mock web server\n+     * @throws JSONException on failure to arrange response JSON\n+     */\n+    @Before\n+    public void setup() throws IOException, JSONException {\n+        server = new MockWebServer();\n+        server.start(8080);\n+        baseUrl = server.url(\"/\");\n+\n+        MockResponse response = new MockResponse()\n+            .setResponseCode(200)\n+            .setBody(new JSONObject()\n+                .put(\"message\", \"thanks!\")\n+                .toString()\n+            );\n+        server.enqueue(response);\n+\n+        client = new OkHttpClient();\n+    }\n+\n+    /**\n+     * Stop the {@link MockWebServer} that was started in {@link #setup()}.\n+     * @throws IOException On failure to shutdown the MockWebServer\n+     */\n+    @After\n+    public void cleanup() throws IOException {\n+        server.shutdown();\n+    }\n+\n+    /**\n+     * Tests the happy path, wherein the server returns a response, the\n+     * operation hasn't been canceled, and we get a {@link RestResponse}\n+     * at the end of it.\n+     * @throws ApiException\n+     *         A possible outcome of the operation. This is not\n+     *         expected, and would constitute a test failure.\n+     */\n+    @Test\n+    public void responseEmittedIfOperationWhenOperationSucceeds() throws ApiException {", "originalCommit": "ba8c9af9c364f9e91aee591950c99e2d5e551c2a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c27d74dc119d6f357e839f6ade2aea9603b151e6", "url": "https://github.com/aws-amplify/amplify-android/commit/c27d74dc119d6f357e839f6ade2aea9603b151e6", "message": "Update aws-api/src/test/java/com/amplifyframework/api/aws/operation/AWSRestOperationTest.java", "committedDate": "2020-12-25T08:23:00Z", "type": "commit"}]}