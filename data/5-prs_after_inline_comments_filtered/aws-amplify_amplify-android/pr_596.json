{"pr_number": 596, "pr_title": "GraphQLRequestFactory refactor & add owner based auth support to API category", "pr_createdAt": "2020-06-24T16:01:03Z", "pr_url": "https://github.com/aws-amplify/amplify-android/pull/596", "timeline": [{"oid": "9282510e91ae3bdd27d7e40bd0ea43cdf97b207a", "url": "https://github.com/aws-amplify/amplify-android/commit/9282510e91ae3bdd27d7e40bd0ea43cdf97b207a", "message": "Rename Quotes to Wrap and add a couple more helper methods", "committedDate": "2020-06-24T15:08:23Z", "type": "commit"}, {"oid": "bc411298dad9b61e63c9a7f238500fb96842ab1c", "url": "https://github.com/aws-amplify/amplify-android/commit/bc411298dad9b61e63c9a7f238500fb96842ab1c", "message": "feat(api): refactor GraphQlRequestFactory and add owner based auth", "committedDate": "2020-06-24T15:08:23Z", "type": "commit"}, {"oid": "2cb0042952b45cddea52c87ab0a9b9e18880275a", "url": "https://github.com/aws-amplify/amplify-android/commit/2cb0042952b45cddea52c87ab0a9b9e18880275a", "message": "Fix integration test failures", "committedDate": "2020-06-24T22:06:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIyNjgyNA==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r445226824", "bodyText": "Nice adaptation, here!!", "author": "jamesonwilliams", "createdAt": "2020-06-24T23:31:00Z", "path": "core/src/main/java/com/amplifyframework/util/Wrap.java", "diffHunk": "@@ -18,10 +18,10 @@\n import androidx.annotation.Nullable;\n \n /**\n- * A utility to wrap strings into quotes.\n+ * A utility to wrap strings.\n  */\n-public final class Quotes {\n-    private Quotes() {}\n+public final class Wrap {", "originalCommit": "2cb0042952b45cddea52c87ab0a9b9e18880275a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzcwMjYyNA==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r447702624", "bodyText": "Pretty clever indeed. \ud83d\udc4d", "author": "rjuliano", "createdAt": "2020-06-30T13:56:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIyNjgyNA=="}], "type": "inlineReview"}, {"oid": "08b00e98a5b47dbd2599cbc1f4ef8ebc7947d1e9", "url": "https://github.com/aws-amplify/amplify-android/commit/08b00e98a5b47dbd2599cbc1f4ef8ebc7947d1e9", "message": "Merge from main", "committedDate": "2020-06-29T22:01:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzY3NjU1NA==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r447676554", "bodyText": "Maybe a different name for this method?\nWhen I saw the call to this from the subscribe method, I assumed you were going to set the authProvider in the request object; however, that's already done in the constructor. If my understanding is correct, this method would be more like a setOwner (or something along those lines)", "author": "rjuliano", "createdAt": "2020-06-30T13:21:32Z", "path": "aws-api/src/main/java/com/amplifyframework/api/aws/AppSyncGraphQLRequest.java", "diffHunk": "@@ -0,0 +1,295 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.api.aws;\n+\n+import android.text.TextUtils;\n+import androidx.annotation.NonNull;\n+import androidx.core.util.ObjectsCompat;\n+\n+import com.amplifyframework.AmplifyException;\n+import com.amplifyframework.api.ApiException;\n+import com.amplifyframework.api.aws.appsync.GsonVariablesSerializer;\n+import com.amplifyframework.api.aws.sigv4.CognitoUserPoolsAuthProvider;\n+import com.amplifyframework.api.graphql.GraphQLRequest;\n+import com.amplifyframework.api.graphql.OperationType;\n+import com.amplifyframework.api.graphql.QueryType;\n+import com.amplifyframework.api.graphql.SubscriptionType;\n+import com.amplifyframework.core.model.AuthRule;\n+import com.amplifyframework.core.model.Model;\n+import com.amplifyframework.core.model.ModelOperation;\n+import com.amplifyframework.core.model.ModelSchema;\n+import com.amplifyframework.util.Casing;\n+import com.amplifyframework.util.Wrap;\n+\n+import java.lang.reflect.Type;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+/**\n+ * A request against an AppSync GraphQL endpoint.\n+ * @param <R> The type of data contained in the GraphQLResponse expected from this request.\n+ */\n+public final class AppSyncGraphQLRequest<R> extends GraphQLRequest<R> {\n+    private static final int DEFAULT_LEVEL_DEPTH = 2;\n+\n+    private final ModelSchema modelSchema;\n+    private final OperationType operationType;\n+    private final SelectionSet.Node selectionSet;\n+    private final Map<String, Object> variables;\n+    private final Map<String, String> variableTypes;\n+\n+    /**\n+     * Constructor for AppSyncGraphQLRequest.\n+     * @throw AmplifyException if a ModelSchema can't be derived from the provided model class\n+     */\n+    private AppSyncGraphQLRequest(Builder builder) throws AmplifyException {\n+        super(builder.responseType, new GsonVariablesSerializer());\n+        this.modelSchema = ModelSchema.fromModelClass(builder.modelClass);\n+        SelectionSet.Node set = SelectionSet.fromModelClass(builder.modelClass, DEFAULT_LEVEL_DEPTH);\n+        if (QueryType.LIST.equals(builder.operationType)) {\n+            set = SelectionSet.wrapPagination(set);\n+        }\n+        this.selectionSet = set;\n+        this.operationType = builder.operationType;\n+        this.variables = builder.variables;\n+        this.variableTypes = builder.variableTypes;\n+    }\n+\n+    /**\n+     * Copy constructor for an AppSyncGraphQLRequest.\n+     * @param request request to copy.\n+     * @param <R> response type.\n+     */\n+    public <R> AppSyncGraphQLRequest(AppSyncGraphQLRequest<R> request) {\n+        super(request);\n+        this.modelSchema = request.modelSchema;\n+        this.operationType = request.operationType;\n+        this.selectionSet = new SelectionSet.Node(request.selectionSet);\n+        this.variables = new HashMap<>(request.variables);\n+        this.variableTypes = new HashMap<>(request.variableTypes);\n+    }\n+\n+    @Override\n+    public <R> AppSyncGraphQLRequest<R> copy() {\n+        return new AppSyncGraphQLRequest<R>(this);\n+    }\n+\n+    @Override\n+    public Map<String, Object> getVariables() {\n+        return this.variables;\n+    }\n+\n+    /**\n+     * Used for setting a variable on the request.\n+     * @param key variable name\n+     * @param type type of variable value\n+     * @param value variable value\n+     */\n+    public void setVariable(String key, String type, String value) {\n+        this.variables.put(key, value);\n+        this.variableTypes.put(key, type);\n+    }\n+\n+    /**\n+     * Used to add owner argument from authProvider if needed.\n+     * @param authProvider CognitoUserPoolsAuthProvider for obtaining the username to set as the owner field.\n+     * @throws ApiException if request requires owner argument and authProvider or authProvider.getUsername() is null.\n+     */\n+    public void setAuthProvider(CognitoUserPoolsAuthProvider authProvider) throws ApiException {", "originalCommit": "08b00e98a5b47dbd2599cbc1f4ef8ebc7947d1e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY1NTQ0MQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r450655441", "bodyText": "Fair point, will change to setOwner.", "author": "richardmcclellan", "createdAt": "2020-07-07T07:12:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzY3NjU1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzcxNzY0Mw==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r447717643", "bodyText": "I noticed that nextToken was removed as an input from the query in one of the test cases (query-person-by-predicate.txt ) and I don't see that accounted for anywhere. Is that by design?", "author": "rjuliano", "createdAt": "2020-06-30T14:15:53Z", "path": "aws-api/src/main/java/com/amplifyframework/api/aws/AppSyncGraphQLRequest.java", "diffHunk": "@@ -0,0 +1,295 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.api.aws;\n+\n+import android.text.TextUtils;\n+import androidx.annotation.NonNull;\n+import androidx.core.util.ObjectsCompat;\n+\n+import com.amplifyframework.AmplifyException;\n+import com.amplifyframework.api.ApiException;\n+import com.amplifyframework.api.aws.appsync.GsonVariablesSerializer;\n+import com.amplifyframework.api.aws.sigv4.CognitoUserPoolsAuthProvider;\n+import com.amplifyframework.api.graphql.GraphQLRequest;\n+import com.amplifyframework.api.graphql.OperationType;\n+import com.amplifyframework.api.graphql.QueryType;\n+import com.amplifyframework.api.graphql.SubscriptionType;\n+import com.amplifyframework.core.model.AuthRule;\n+import com.amplifyframework.core.model.Model;\n+import com.amplifyframework.core.model.ModelOperation;\n+import com.amplifyframework.core.model.ModelSchema;\n+import com.amplifyframework.util.Casing;\n+import com.amplifyframework.util.Wrap;\n+\n+import java.lang.reflect.Type;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+/**\n+ * A request against an AppSync GraphQL endpoint.\n+ * @param <R> The type of data contained in the GraphQLResponse expected from this request.\n+ */\n+public final class AppSyncGraphQLRequest<R> extends GraphQLRequest<R> {\n+    private static final int DEFAULT_LEVEL_DEPTH = 2;\n+\n+    private final ModelSchema modelSchema;\n+    private final OperationType operationType;\n+    private final SelectionSet.Node selectionSet;\n+    private final Map<String, Object> variables;\n+    private final Map<String, String> variableTypes;\n+\n+    /**\n+     * Constructor for AppSyncGraphQLRequest.\n+     * @throw AmplifyException if a ModelSchema can't be derived from the provided model class\n+     */\n+    private AppSyncGraphQLRequest(Builder builder) throws AmplifyException {\n+        super(builder.responseType, new GsonVariablesSerializer());\n+        this.modelSchema = ModelSchema.fromModelClass(builder.modelClass);\n+        SelectionSet.Node set = SelectionSet.fromModelClass(builder.modelClass, DEFAULT_LEVEL_DEPTH);\n+        if (QueryType.LIST.equals(builder.operationType)) {\n+            set = SelectionSet.wrapPagination(set);\n+        }\n+        this.selectionSet = set;\n+        this.operationType = builder.operationType;\n+        this.variables = builder.variables;\n+        this.variableTypes = builder.variableTypes;\n+    }\n+\n+    /**\n+     * Copy constructor for an AppSyncGraphQLRequest.\n+     * @param request request to copy.\n+     * @param <R> response type.\n+     */\n+    public <R> AppSyncGraphQLRequest(AppSyncGraphQLRequest<R> request) {\n+        super(request);\n+        this.modelSchema = request.modelSchema;\n+        this.operationType = request.operationType;\n+        this.selectionSet = new SelectionSet.Node(request.selectionSet);\n+        this.variables = new HashMap<>(request.variables);\n+        this.variableTypes = new HashMap<>(request.variableTypes);\n+    }\n+\n+    @Override\n+    public <R> AppSyncGraphQLRequest<R> copy() {\n+        return new AppSyncGraphQLRequest<R>(this);\n+    }\n+\n+    @Override\n+    public Map<String, Object> getVariables() {\n+        return this.variables;\n+    }\n+\n+    /**\n+     * Used for setting a variable on the request.\n+     * @param key variable name\n+     * @param type type of variable value\n+     * @param value variable value\n+     */\n+    public void setVariable(String key, String type, String value) {\n+        this.variables.put(key, value);\n+        this.variableTypes.put(key, type);\n+    }\n+\n+    /**\n+     * Used to add owner argument from authProvider if needed.\n+     * @param authProvider CognitoUserPoolsAuthProvider for obtaining the username to set as the owner field.\n+     * @throws ApiException if request requires owner argument and authProvider or authProvider.getUsername() is null.\n+     */\n+    public void setAuthProvider(CognitoUserPoolsAuthProvider authProvider) throws ApiException {\n+        for (AuthRule authRule : modelSchema.getAuthRules()) {\n+            if (isOwnerArgumentRequired(authRule.getOperationsOrDefault())) {\n+                setVariable(authRule.getOwnerFieldOrDefault(), \"String!\", getUsername(authProvider));\n+            }\n+        }\n+    }\n+\n+    private String getUsername(CognitoUserPoolsAuthProvider authProvider) throws ApiException {\n+        if (authProvider == null) {\n+            throw new ApiException(\n+                    \"Attempted to subscribe to a model with owner based authorization without a Cognito provider\",\n+                    \"Did you add the AWSCognitoAuthPlugin to Amplify before configuring it?\"\n+            );\n+        }\n+        String username = authProvider.getUsername();\n+        if (username == null) {\n+            throw new ApiException(\n+                    \"Attempted to subscribe to a model with owner based authorization without a username\",\n+                    \"Make sure that a user is logged in before subscribing to a model with owner based auth\"\n+            );\n+        }\n+        return username;\n+    }\n+\n+    private boolean isOwnerArgumentRequired(List<ModelOperation> operations) {\n+        if (SubscriptionType.ON_CREATE.equals(operationType) && operations.contains(ModelOperation.CREATE)) {\n+            return true;\n+        }\n+        if (SubscriptionType.ON_UPDATE.equals(operationType) && operations.contains(ModelOperation.UPDATE)) {\n+            return true;\n+        }\n+        if (SubscriptionType.ON_DELETE.equals(operationType) && operations.contains(ModelOperation.DELETE)) {\n+            return true;\n+        }\n+        return false;\n+    }\n+\n+    /**\n+     *  Returns String value used for GraphQL \"query\" in HTTP request body.\n+     *\n+     *  Sample return value:\n+     *      subscription OnCreatePerson(owner: String!, nextToken: String) {\n+     *            onCreatePerson(owner: $owner, nextToken: $nextToken) {\n+     *               age dob first_name id last_name relationship owner\n+     *            }\n+     *       }\n+     *\n+     * @return String value used for GraphQL \"query\" in HTTP request body\n+     */\n+    @Override\n+    public String getQuery() {", "originalCommit": "08b00e98a5b47dbd2599cbc1f4ef8ebc7947d1e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAzMzk2Nw==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r448033967", "bodyText": "Good question - it is by design.  That test case is a request for a first page of results, so nextToken isn't needed.  For requesting subsequent pages, the nextToken variable is added in AppSyncPaginatedResultDeserializer.java when creating the requestForNextPage.\nPrior to this refactor, it was included within the request document String because the requestForNextPage used the same request document String, and just set the nextToken in the variables json object.  This is possible now because GraphQLRequest now knows how to add inputs and regenerate a document String after the object is created.", "author": "richardmcclellan", "createdAt": "2020-06-30T23:28:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzcxNzY0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEyNDQwNw==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r448124407", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            onSubscriptionFailure.accept(exception);\n          \n          \n            \n                            onSubscriptionFailure.accept(exception);\n          \n          \n            \n                            return new NoOpCancelable();\n          \n      \n    \n    \n  \n\n?", "author": "jamesonwilliams", "createdAt": "2020-07-01T05:32:57Z", "path": "aws-api/src/main/java/com/amplifyframework/api/aws/AWSApiPlugin.java", "diffHunk": "@@ -255,7 +257,20 @@ public void configure(\n             return null;\n         }\n \n-        SubscriptionOperation<T> operation = SubscriptionOperation.<T>builder()\n+        if (graphQLRequest instanceof AppSyncGraphQLRequest) {\n+            try {\n+                AppSyncGraphQLRequest<R> request = (AppSyncGraphQLRequest<R>) graphQLRequest;\n+                CognitoUserPoolsAuthProvider cognitoProvider = authProvider.getCognitoUserPoolsAuthProvider();\n+                if (cognitoProvider == null) {\n+                    cognitoProvider = new DefaultCognitoUserPoolsAuthProvider();\n+                }\n+                request.setAuthProvider(cognitoProvider);\n+            } catch (ApiException exception) {\n+                onSubscriptionFailure.accept(exception);", "originalCommit": "08b00e98a5b47dbd2599cbc1f4ef8ebc7947d1e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY1NzM0Nw==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r450657347", "bodyText": "Good catch!   Except that the return type for this method is GraphQLOperation, not Cancelable, so I will just return null here.", "author": "richardmcclellan", "createdAt": "2020-07-07T07:16:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEyNDQwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEyNDY3MQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r448124671", "bodyText": "Hm. I'd spect the factory to return a SelectionSet itself, not an inner type?\nYou could swap, and have a SelectionSet.Factory, an inner class that can create SelectionSet (what used to the be .Node bit)?", "author": "jamesonwilliams", "createdAt": "2020-07-01T05:33:58Z", "path": "aws-api/src/main/java/com/amplifyframework/api/aws/AppSyncGraphQLRequest.java", "diffHunk": "@@ -0,0 +1,295 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.api.aws;\n+\n+import android.text.TextUtils;\n+import androidx.annotation.NonNull;\n+import androidx.core.util.ObjectsCompat;\n+\n+import com.amplifyframework.AmplifyException;\n+import com.amplifyframework.api.ApiException;\n+import com.amplifyframework.api.aws.appsync.GsonVariablesSerializer;\n+import com.amplifyframework.api.aws.sigv4.CognitoUserPoolsAuthProvider;\n+import com.amplifyframework.api.graphql.GraphQLRequest;\n+import com.amplifyframework.api.graphql.OperationType;\n+import com.amplifyframework.api.graphql.QueryType;\n+import com.amplifyframework.api.graphql.SubscriptionType;\n+import com.amplifyframework.core.model.AuthRule;\n+import com.amplifyframework.core.model.Model;\n+import com.amplifyframework.core.model.ModelOperation;\n+import com.amplifyframework.core.model.ModelSchema;\n+import com.amplifyframework.util.Casing;\n+import com.amplifyframework.util.Wrap;\n+\n+import java.lang.reflect.Type;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+/**\n+ * A request against an AppSync GraphQL endpoint.\n+ * @param <R> The type of data contained in the GraphQLResponse expected from this request.\n+ */\n+public final class AppSyncGraphQLRequest<R> extends GraphQLRequest<R> {\n+    private static final int DEFAULT_LEVEL_DEPTH = 2;\n+\n+    private final ModelSchema modelSchema;\n+    private final OperationType operationType;\n+    private final SelectionSet.Node selectionSet;\n+    private final Map<String, Object> variables;\n+    private final Map<String, String> variableTypes;\n+\n+    /**\n+     * Constructor for AppSyncGraphQLRequest.\n+     * @throw AmplifyException if a ModelSchema can't be derived from the provided model class\n+     */\n+    private AppSyncGraphQLRequest(Builder builder) throws AmplifyException {\n+        super(builder.responseType, new GsonVariablesSerializer());\n+        this.modelSchema = ModelSchema.fromModelClass(builder.modelClass);\n+        SelectionSet.Node set = SelectionSet.fromModelClass(builder.modelClass, DEFAULT_LEVEL_DEPTH);", "originalCommit": "08b00e98a5b47dbd2599cbc1f4ef8ebc7947d1e9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEyNTA0MA==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r448125040", "bodyText": "Could you pass an OperationType into the factory method, and then have it figure this stuff out internally?\nLike:\nthis.selectionSet = SelectionSet.create(builder.modelClass, operationType, DEFAULT_LEVEL_DEPTH)", "author": "jamesonwilliams", "createdAt": "2020-07-01T05:35:11Z", "path": "aws-api/src/main/java/com/amplifyframework/api/aws/AppSyncGraphQLRequest.java", "diffHunk": "@@ -0,0 +1,295 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.api.aws;\n+\n+import android.text.TextUtils;\n+import androidx.annotation.NonNull;\n+import androidx.core.util.ObjectsCompat;\n+\n+import com.amplifyframework.AmplifyException;\n+import com.amplifyframework.api.ApiException;\n+import com.amplifyframework.api.aws.appsync.GsonVariablesSerializer;\n+import com.amplifyframework.api.aws.sigv4.CognitoUserPoolsAuthProvider;\n+import com.amplifyframework.api.graphql.GraphQLRequest;\n+import com.amplifyframework.api.graphql.OperationType;\n+import com.amplifyframework.api.graphql.QueryType;\n+import com.amplifyframework.api.graphql.SubscriptionType;\n+import com.amplifyframework.core.model.AuthRule;\n+import com.amplifyframework.core.model.Model;\n+import com.amplifyframework.core.model.ModelOperation;\n+import com.amplifyframework.core.model.ModelSchema;\n+import com.amplifyframework.util.Casing;\n+import com.amplifyframework.util.Wrap;\n+\n+import java.lang.reflect.Type;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+/**\n+ * A request against an AppSync GraphQL endpoint.\n+ * @param <R> The type of data contained in the GraphQLResponse expected from this request.\n+ */\n+public final class AppSyncGraphQLRequest<R> extends GraphQLRequest<R> {\n+    private static final int DEFAULT_LEVEL_DEPTH = 2;\n+\n+    private final ModelSchema modelSchema;\n+    private final OperationType operationType;\n+    private final SelectionSet.Node selectionSet;\n+    private final Map<String, Object> variables;\n+    private final Map<String, String> variableTypes;\n+\n+    /**\n+     * Constructor for AppSyncGraphQLRequest.\n+     * @throw AmplifyException if a ModelSchema can't be derived from the provided model class\n+     */\n+    private AppSyncGraphQLRequest(Builder builder) throws AmplifyException {\n+        super(builder.responseType, new GsonVariablesSerializer());\n+        this.modelSchema = ModelSchema.fromModelClass(builder.modelClass);\n+        SelectionSet.Node set = SelectionSet.fromModelClass(builder.modelClass, DEFAULT_LEVEL_DEPTH);\n+        if (QueryType.LIST.equals(builder.operationType)) {", "originalCommit": "08b00e98a5b47dbd2599cbc1f4ef8ebc7947d1e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY2MzE0Mg==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r450663142", "bodyText": "I like that idea.  Updated.", "author": "richardmcclellan", "createdAt": "2020-07-07T07:28:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEyNTA0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEyNjQ0NQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r448126445", "bodyText": "These are great recovery suggestions, nice.", "author": "jamesonwilliams", "createdAt": "2020-07-01T05:39:54Z", "path": "aws-api/src/main/java/com/amplifyframework/api/aws/AppSyncGraphQLRequest.java", "diffHunk": "@@ -0,0 +1,295 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.api.aws;\n+\n+import android.text.TextUtils;\n+import androidx.annotation.NonNull;\n+import androidx.core.util.ObjectsCompat;\n+\n+import com.amplifyframework.AmplifyException;\n+import com.amplifyframework.api.ApiException;\n+import com.amplifyframework.api.aws.appsync.GsonVariablesSerializer;\n+import com.amplifyframework.api.aws.sigv4.CognitoUserPoolsAuthProvider;\n+import com.amplifyframework.api.graphql.GraphQLRequest;\n+import com.amplifyframework.api.graphql.OperationType;\n+import com.amplifyframework.api.graphql.QueryType;\n+import com.amplifyframework.api.graphql.SubscriptionType;\n+import com.amplifyframework.core.model.AuthRule;\n+import com.amplifyframework.core.model.Model;\n+import com.amplifyframework.core.model.ModelOperation;\n+import com.amplifyframework.core.model.ModelSchema;\n+import com.amplifyframework.util.Casing;\n+import com.amplifyframework.util.Wrap;\n+\n+import java.lang.reflect.Type;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+/**\n+ * A request against an AppSync GraphQL endpoint.\n+ * @param <R> The type of data contained in the GraphQLResponse expected from this request.\n+ */\n+public final class AppSyncGraphQLRequest<R> extends GraphQLRequest<R> {\n+    private static final int DEFAULT_LEVEL_DEPTH = 2;\n+\n+    private final ModelSchema modelSchema;\n+    private final OperationType operationType;\n+    private final SelectionSet.Node selectionSet;\n+    private final Map<String, Object> variables;\n+    private final Map<String, String> variableTypes;\n+\n+    /**\n+     * Constructor for AppSyncGraphQLRequest.\n+     * @throw AmplifyException if a ModelSchema can't be derived from the provided model class\n+     */\n+    private AppSyncGraphQLRequest(Builder builder) throws AmplifyException {\n+        super(builder.responseType, new GsonVariablesSerializer());\n+        this.modelSchema = ModelSchema.fromModelClass(builder.modelClass);\n+        SelectionSet.Node set = SelectionSet.fromModelClass(builder.modelClass, DEFAULT_LEVEL_DEPTH);\n+        if (QueryType.LIST.equals(builder.operationType)) {\n+            set = SelectionSet.wrapPagination(set);\n+        }\n+        this.selectionSet = set;\n+        this.operationType = builder.operationType;\n+        this.variables = builder.variables;\n+        this.variableTypes = builder.variableTypes;\n+    }\n+\n+    /**\n+     * Copy constructor for an AppSyncGraphQLRequest.\n+     * @param request request to copy.\n+     * @param <R> response type.\n+     */\n+    public <R> AppSyncGraphQLRequest(AppSyncGraphQLRequest<R> request) {\n+        super(request);\n+        this.modelSchema = request.modelSchema;\n+        this.operationType = request.operationType;\n+        this.selectionSet = new SelectionSet.Node(request.selectionSet);\n+        this.variables = new HashMap<>(request.variables);\n+        this.variableTypes = new HashMap<>(request.variableTypes);\n+    }\n+\n+    @Override\n+    public <R> AppSyncGraphQLRequest<R> copy() {\n+        return new AppSyncGraphQLRequest<R>(this);\n+    }\n+\n+    @Override\n+    public Map<String, Object> getVariables() {\n+        return this.variables;\n+    }\n+\n+    /**\n+     * Used for setting a variable on the request.\n+     * @param key variable name\n+     * @param type type of variable value\n+     * @param value variable value\n+     */\n+    public void setVariable(String key, String type, String value) {\n+        this.variables.put(key, value);\n+        this.variableTypes.put(key, type);\n+    }\n+\n+    /**\n+     * Used to add owner argument from authProvider if needed.\n+     * @param authProvider CognitoUserPoolsAuthProvider for obtaining the username to set as the owner field.\n+     * @throws ApiException if request requires owner argument and authProvider or authProvider.getUsername() is null.\n+     */\n+    public void setAuthProvider(CognitoUserPoolsAuthProvider authProvider) throws ApiException {\n+        for (AuthRule authRule : modelSchema.getAuthRules()) {\n+            if (isOwnerArgumentRequired(authRule.getOperationsOrDefault())) {\n+                setVariable(authRule.getOwnerFieldOrDefault(), \"String!\", getUsername(authProvider));\n+            }\n+        }\n+    }\n+\n+    private String getUsername(CognitoUserPoolsAuthProvider authProvider) throws ApiException {\n+        if (authProvider == null) {\n+            throw new ApiException(\n+                    \"Attempted to subscribe to a model with owner based authorization without a Cognito provider\",\n+                    \"Did you add the AWSCognitoAuthPlugin to Amplify before configuring it?\"\n+            );\n+        }\n+        String username = authProvider.getUsername();\n+        if (username == null) {\n+            throw new ApiException(\n+                    \"Attempted to subscribe to a model with owner based authorization without a username\",\n+                    \"Make sure that a user is logged in before subscribing to a model with owner based auth\"", "originalCommit": "08b00e98a5b47dbd2599cbc1f4ef8ebc7947d1e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY1NTk2Ng==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r450655966", "bodyText": "Can't take credit, @TrekSoft wrote these!  I just moved them around a bit :).", "author": "richardmcclellan", "createdAt": "2020-07-07T07:13:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEyNjQ0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEyNzQzNA==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r448127434", "bodyText": "Since there are three repeated control flow stanzas, maybe it is time to reconsider the input data type, so that you can re-use the control flow.\nList<Pair<SubscriptionType, ModelOperation>> pairs = Arrays.asList(\n    Pair.create(SubscriptionType.ON_CREATE, ModelOperation.CREATE),\n    Pair.create(SubscriptionType.ON_UPDATE, ModelOperation.UPDATE),\n    Pair.create(SubscriptionType.ON_DELETE, ModelOperation.DELETE)\n);\nfor (Pair<SubscriptionType, ModelOperation> pair : pairs) {\n    if (pair.getFirst().equals(operationType) && operations.contains(pair.getSecond())) {\n        return true;\n    }\n}\nreturn false;\nActually, meh. DAMP, YAGNI, KISS... I think it's just more complicated.", "author": "jamesonwilliams", "createdAt": "2020-07-01T05:43:29Z", "path": "aws-api/src/main/java/com/amplifyframework/api/aws/AppSyncGraphQLRequest.java", "diffHunk": "@@ -0,0 +1,295 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.api.aws;\n+\n+import android.text.TextUtils;\n+import androidx.annotation.NonNull;\n+import androidx.core.util.ObjectsCompat;\n+\n+import com.amplifyframework.AmplifyException;\n+import com.amplifyframework.api.ApiException;\n+import com.amplifyframework.api.aws.appsync.GsonVariablesSerializer;\n+import com.amplifyframework.api.aws.sigv4.CognitoUserPoolsAuthProvider;\n+import com.amplifyframework.api.graphql.GraphQLRequest;\n+import com.amplifyframework.api.graphql.OperationType;\n+import com.amplifyframework.api.graphql.QueryType;\n+import com.amplifyframework.api.graphql.SubscriptionType;\n+import com.amplifyframework.core.model.AuthRule;\n+import com.amplifyframework.core.model.Model;\n+import com.amplifyframework.core.model.ModelOperation;\n+import com.amplifyframework.core.model.ModelSchema;\n+import com.amplifyframework.util.Casing;\n+import com.amplifyframework.util.Wrap;\n+\n+import java.lang.reflect.Type;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+/**\n+ * A request against an AppSync GraphQL endpoint.\n+ * @param <R> The type of data contained in the GraphQLResponse expected from this request.\n+ */\n+public final class AppSyncGraphQLRequest<R> extends GraphQLRequest<R> {\n+    private static final int DEFAULT_LEVEL_DEPTH = 2;\n+\n+    private final ModelSchema modelSchema;\n+    private final OperationType operationType;\n+    private final SelectionSet.Node selectionSet;\n+    private final Map<String, Object> variables;\n+    private final Map<String, String> variableTypes;\n+\n+    /**\n+     * Constructor for AppSyncGraphQLRequest.\n+     * @throw AmplifyException if a ModelSchema can't be derived from the provided model class\n+     */\n+    private AppSyncGraphQLRequest(Builder builder) throws AmplifyException {\n+        super(builder.responseType, new GsonVariablesSerializer());\n+        this.modelSchema = ModelSchema.fromModelClass(builder.modelClass);\n+        SelectionSet.Node set = SelectionSet.fromModelClass(builder.modelClass, DEFAULT_LEVEL_DEPTH);\n+        if (QueryType.LIST.equals(builder.operationType)) {\n+            set = SelectionSet.wrapPagination(set);\n+        }\n+        this.selectionSet = set;\n+        this.operationType = builder.operationType;\n+        this.variables = builder.variables;\n+        this.variableTypes = builder.variableTypes;\n+    }\n+\n+    /**\n+     * Copy constructor for an AppSyncGraphQLRequest.\n+     * @param request request to copy.\n+     * @param <R> response type.\n+     */\n+    public <R> AppSyncGraphQLRequest(AppSyncGraphQLRequest<R> request) {\n+        super(request);\n+        this.modelSchema = request.modelSchema;\n+        this.operationType = request.operationType;\n+        this.selectionSet = new SelectionSet.Node(request.selectionSet);\n+        this.variables = new HashMap<>(request.variables);\n+        this.variableTypes = new HashMap<>(request.variableTypes);\n+    }\n+\n+    @Override\n+    public <R> AppSyncGraphQLRequest<R> copy() {\n+        return new AppSyncGraphQLRequest<R>(this);\n+    }\n+\n+    @Override\n+    public Map<String, Object> getVariables() {\n+        return this.variables;\n+    }\n+\n+    /**\n+     * Used for setting a variable on the request.\n+     * @param key variable name\n+     * @param type type of variable value\n+     * @param value variable value\n+     */\n+    public void setVariable(String key, String type, String value) {\n+        this.variables.put(key, value);\n+        this.variableTypes.put(key, type);\n+    }\n+\n+    /**\n+     * Used to add owner argument from authProvider if needed.\n+     * @param authProvider CognitoUserPoolsAuthProvider for obtaining the username to set as the owner field.\n+     * @throws ApiException if request requires owner argument and authProvider or authProvider.getUsername() is null.\n+     */\n+    public void setAuthProvider(CognitoUserPoolsAuthProvider authProvider) throws ApiException {\n+        for (AuthRule authRule : modelSchema.getAuthRules()) {\n+            if (isOwnerArgumentRequired(authRule.getOperationsOrDefault())) {\n+                setVariable(authRule.getOwnerFieldOrDefault(), \"String!\", getUsername(authProvider));\n+            }\n+        }\n+    }\n+\n+    private String getUsername(CognitoUserPoolsAuthProvider authProvider) throws ApiException {\n+        if (authProvider == null) {\n+            throw new ApiException(\n+                    \"Attempted to subscribe to a model with owner based authorization without a Cognito provider\",\n+                    \"Did you add the AWSCognitoAuthPlugin to Amplify before configuring it?\"\n+            );\n+        }\n+        String username = authProvider.getUsername();\n+        if (username == null) {\n+            throw new ApiException(\n+                    \"Attempted to subscribe to a model with owner based authorization without a username\",\n+                    \"Make sure that a user is logged in before subscribing to a model with owner based auth\"\n+            );\n+        }\n+        return username;\n+    }\n+\n+    private boolean isOwnerArgumentRequired(List<ModelOperation> operations) {\n+        if (SubscriptionType.ON_CREATE.equals(operationType) && operations.contains(ModelOperation.CREATE)) {", "originalCommit": "08b00e98a5b47dbd2599cbc1f4ef8ebc7947d1e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY1ODQ1OA==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r450658458", "bodyText": ":). I kinda went down a similar train of thought, but I do think this way is the most readable.", "author": "richardmcclellan", "createdAt": "2020-07-07T07:18:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEyNzQzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEyODk2Mg==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r448128962", "bodyText": "We have the Empty utility in core:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (this.operations == null || this.operations.isEmpty()) {\n          \n          \n            \n                    if (Empty.check(this.operations)) {", "author": "jamesonwilliams", "createdAt": "2020-07-01T05:48:38Z", "path": "core/src/main/java/com/amplifyframework/core/model/AuthRule.java", "diffHunk": "@@ -100,16 +102,23 @@ public String getGroupClaim() {\n      * @return name of a {@link ModelField} of type String or array of Strings which specifies a group or list of groups\n      * which should have access.\n      */\n-    public String getGroupsField() {\n-        return this.groupsField;\n+    public String getGroupsFieldOrDefault() {\n+        return TextUtils.isEmpty(this.groupsField) ? \"groups\" : this.groupsField;\n     }\n \n     /**\n      * Specifies which {@link ModelOperation}s are protected by this {@link AuthRule}.  Any operations not included in\n      * the list are not protected by default.\n      * @return list of {@link ModelOperation}s for which this {@link AuthRule} should apply.\n      */\n-    public ModelOperation[] getOperations() {\n+    public List<ModelOperation> getOperationsOrDefault() {\n+        if (this.operations == null || this.operations.isEmpty()) {", "originalCommit": "08b00e98a5b47dbd2599cbc1f4ef8ebc7947d1e9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEzMDI4Ng==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r448130286", "bodyText": "Should the OperationType be an enum, if there is a constrained set of values that can be returned here?\nIf you need to maintain the interface for other purposes, perhaps you can do it likeso:\ninterface Operation {\n    OperationType getOperationType();\n}\n\nenum OperationType {\n    QUERY(\"query\"),\n    SUBSCRIPTION(\"subscription\"),\n    MuTATION(\"mutation\");\n}\n\n/* open */ class Mutation implements Operation {\n    @Override\n    public OperationType getOperationType() {\n        return OperationType.MUTATION;\n    }\n}\n...\nOr -- to get the per-operation-type enum involved, too:\ninterface Operation<E extends Enum<E>> {\n    E getOperationType();\n}\n\nabstract class Mutation implements Operation<MutationType> {\n    // Implementer must return MutationType.CREATE, etc.\n    abstract MutationType getOperationType();\n}\n\nenum MutationType {\n    // Like you have it right now\n}\n...", "author": "jamesonwilliams", "createdAt": "2020-07-01T05:52:53Z", "path": "core/src/main/java/com/amplifyframework/api/graphql/OperationType.java", "diffHunk": "@@ -0,0 +1,28 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.api.graphql;\n+\n+/**\n+ * Represents a GraphQL operation type.\n+ */\n+public interface OperationType {\n+    /**\n+     * Returns the name of the operation to be used in the GraphQL document (i.e. query, subscription, or mutation).", "originalCommit": "08b00e98a5b47dbd2599cbc1f4ef8ebc7947d1e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc4NTc0OA==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r451785748", "bodyText": "I like the idea to create an enum for the operations (query, mutation, subscription), so that the possible operations are constrained, so I've made that change.\nAs for the second part of this suggestion, I do see the benefit of guaranteeing that Operation is only implemented by an enum of a type constrained to a OperationType.   However, I think it's overly complicated for now, since we'd have to introduce a new set of objects (Query, Mutation, Subscription), that wrap the type enums (QueryType, MutationType, SubscriptionType).  Not opposed to exploring again in the future though.", "author": "richardmcclellan", "createdAt": "2020-07-08T19:46:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEzMDI4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEzMTgwOA==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r448131808", "bodyText": "A few opportunities for Wrap.inDoubleQuotes, here?", "author": "jamesonwilliams", "createdAt": "2020-07-01T05:57:52Z", "path": "core/src/main/java/com/amplifyframework/api/graphql/GraphQLRequest.java", "diffHunk": "@@ -86,73 +60,33 @@ public GraphQLRequest(\n      * @param <R> The type of data contained in the GraphQLResponse expected from this request.\n      * @return Copy of the GraphQLRequest object\n      */\n-    public <R> GraphQLRequest<R> copy() {\n-        return new GraphQLRequest<R>(this);\n-    }\n+    public abstract <R> GraphQLRequest<R> copy();\n \n     /**\n-     * Processes query parameters into a query string to\n-     * be used as HTTP request body.\n-     * @return processed query string\n+     * Returns the GraphQL document which is set as \"query\" in the request.\n+     * @return the GraphQL document which is set as \"query\" in the request.\n      */\n-    public String getContent() {\n-        final StringBuilder completeQuery = new StringBuilder();\n-        final StringBuilder realQuery = new StringBuilder();\n-\n-        completeQuery.append(\"{\\\"query\\\":\")\n-                .append(\"\\\"\");\n-\n-        realQuery.append(document\n-                .replace(\"\\\"\", \"\\\\\\\"\")\n-                .replace(\"\\n\", \"\\\\n\")\n-        );\n-\n-        for (String fragment : fragments) {\n-            realQuery\n-                    .append(\"fragment \")\n-                    .append(fragment);\n-        }\n-\n-        completeQuery.append(realQuery)\n-                .append(\"\\\"\")\n-                .append(\",\")\n-                .append(\"\\\"variables\\\":\");\n-\n-        if (variables.isEmpty()) {\n-            completeQuery.append(\"null\");\n-        } else {\n-            completeQuery.append(variablesSerializer.serialize(this.variables));\n-        }\n-\n-        completeQuery.append(\"}\");\n-        String contentString = completeQuery.toString();\n-\n-        while (contentString.contains(\"\\\\\\\\\")) {\n-            contentString = contentString.replace(\"\\\\\\\\\", \"\\\\\");\n-        }\n-\n-        return contentString + \"\\n\";\n-    }\n+    public abstract String getQuery();\n \n     /**\n-     * Attaches variable key-value pair.\n-     * @param key variable name\n-     * @param value variable value\n-     * @return this query object for chaining\n+     * Returns Map of variables to be serialized and set as \"variables\" in the request.\n+     * @return Map of variables to be serialized and set as \"variables\" in the request.\n      */\n-    public GraphQLRequest<R> putVariable(String key, Object value) {\n-        variables.put(key, value);\n-        return this;\n-    }\n+    public abstract Map<String, Object> getVariables();\n \n     /**\n-     * Attaches a fragment.\n-     * @param fragment fragment\n-     * @return this query object for chaining\n+     * Processes query parameters into a query string to\n+     * be used as HTTP request body.\n+     * @return processed query string\n      */\n-    public GraphQLRequest<R> addFragment(String fragment) {\n-        fragments.add(fragment);\n-        return this;\n+    public String getContent() {\n+        String query = getQuery()\n+                .replace(\"\\\"\", \"\\\\\\\"\")\n+                .replace(\"\\n\", \"\\\\n\");\n+\n+        return Wrap.inBraces(TextUtils.join(\", \", Arrays.asList(\n+            \"\\\"query\\\": \\\"\" + query + \"\\\"\",\n+            \"\\\"variables\\\": \" + (getVariables().isEmpty() ? null : variablesSerializer.serialize(getVariables())))));", "originalCommit": "08b00e98a5b47dbd2599cbc1f4ef8ebc7947d1e9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEzMjE3Mg==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r448132172", "bodyText": "Did you consider overriding the Object#clone()? Though, perhaps you can't enforce the extending class to implement it, since it is already present in Object as a non-abstract method?", "author": "jamesonwilliams", "createdAt": "2020-07-01T05:59:06Z", "path": "core/src/main/java/com/amplifyframework/api/graphql/GraphQLRequest.java", "diffHunk": "@@ -86,73 +60,33 @@ public GraphQLRequest(\n      * @param <R> The type of data contained in the GraphQLResponse expected from this request.\n      * @return Copy of the GraphQLRequest object\n      */\n-    public <R> GraphQLRequest<R> copy() {\n-        return new GraphQLRequest<R>(this);\n-    }\n+    public abstract <R> GraphQLRequest<R> copy();", "originalCommit": "08b00e98a5b47dbd2599cbc1f4ef8ebc7947d1e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTY1NTM3OQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r451655379", "bodyText": "Yeah, as you said, I think it's better to avoid clone() since I can't ensure subclasses will implement it.", "author": "richardmcclellan", "createdAt": "2020-07-08T16:00:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEzMjE3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEzMzAyMA==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r448133020", "bodyText": "Are you able to get rid of the .trim() by modifying the contents of the selection-set-post.txt?", "author": "jamesonwilliams", "createdAt": "2020-07-01T06:01:51Z", "path": "aws-api/src/test/java/com/amplifyframework/api/aws/SelectionSetTest.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.api.aws;\n+\n+import com.amplifyframework.AmplifyException;\n+import com.amplifyframework.testmodels.commentsblog.Post;\n+import com.amplifyframework.testmodels.ownerauth.OwnerAuth;\n+import com.amplifyframework.testutils.Resources;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.robolectric.RobolectricTestRunner;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+@RunWith(RobolectricTestRunner.class)\n+public class SelectionSetTest {\n+    /**\n+     * Test that selection set serialization works as expected.\n+     * @throws AmplifyException if a ModelSchema can't be derived from Post.class\n+     */\n+    @Test\n+    public void selectionSetSerializesToExpectedValue() throws AmplifyException {\n+        SelectionSet.Node selectionSet = SelectionSet.fromModelClass(Post.class, 2);\n+        assertEquals(Resources.readAsString(\"selection-set-post.txt\").trim(), selectionSet.toString().trim());", "originalCommit": "08b00e98a5b47dbd2599cbc1f4ef8ebc7947d1e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTY4MzE1OQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r451683159", "bodyText": "I was trimming the expected value because selection-set-post.txt has a newline at the end of the file, which can't be removed.  I just eliminated the need for this by appending \"\\n\" to the actual value.\nI was trimming the actual value because it had a single space at the beginning of the String.  I just eliminated the need for this by modifying the contents of selection-set-post.txt", "author": "richardmcclellan", "createdAt": "2020-07-08T16:43:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEzMzAyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEzMzI3Mw==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r448133273", "bodyText": "Can you add - chars to this file name, so its easier to read?", "author": "jamesonwilliams", "createdAt": "2020-07-01T06:02:43Z", "path": "aws-api/src/test/java/com/amplifyframework/api/aws/AWSApiPluginTest.java", "diffHunk": "@@ -222,6 +237,63 @@ public void graphQlMutationGetsResponse() throws JSONException, ApiException {\n         assertEquals(expectedName, actualResponse.getData().getName());\n     }\n \n+    /**\n+     * Test that owner variable is added to subscription when needed.\n+     * @throws JSONException from JSONAssert.assertEquals\n+     */\n+    @Test\n+    public void graphQlSubscriptionAddsOwnerVariable() throws JSONException {\n+        GraphQLRequest<OwnerAuth> request = ModelSubscription.onCreate(OwnerAuth.class);\n+        plugin.subscribe(request,\n+            subscriptionId -> { },\n+            response -> { },\n+            exception -> { },\n+            EmptyAction.instance());\n+\n+        JSONAssert.assertEquals(Resources.readAsString(\"request-ownerauth.json\"),\n+                request.getContent(),\n+                true);\n+    }\n+\n+    /**\n+     * Verify that the custom owner field variable is added to subscription when needed.\n+     * @throws JSONException from JSONAssert.assertEquals\n+     */\n+    @Test\n+    public void graphQLSubscriptionAddsCustomOwnerField() throws JSONException {\n+        GraphQLRequest<OwnerAuthCustomField> request = ModelSubscription.onUpdate(OwnerAuthCustomField.class);\n+        plugin.subscribe(request,\n+            subscriptionId -> { },\n+            response -> { },\n+            exception -> { },\n+            EmptyAction.instance());\n+\n+        JSONAssert.assertEquals(Resources.readAsString(\"request-ownerauthcustomfield.json\"),\n+                request.getContent(),\n+                true);\n+    }\n+\n+    /**\n+     * Verify that the `owner` variable is only added if the type of subscription (onCreate, onUpdate, onDelete) is\n+     * protected by owner based auth.  This test uses OwnerAuthReadUpdateOnly which protects create, and delete\n+     * operations, but not update, so an onUpdate subscription is not expected to include the `owner` variable.\n+     *\n+     * @throws JSONException from JSONAssert.assertEquals\n+     */\n+    @Test\n+    public void graphQLSubscriptionDoesntAddOwnerFieldIfTypeIsNotProtected() throws JSONException {\n+        GraphQLRequest<OwnerAuthReadUpdateOnly> request = ModelSubscription.onUpdate(OwnerAuthReadUpdateOnly.class);\n+        plugin.subscribe(request,\n+            subscriptionId -> { },\n+            response -> { },\n+            exception -> { },\n+            EmptyAction.instance());\n+\n+        JSONAssert.assertEquals(Resources.readAsString(\"request-ownerauthreadupdateonly.json\"),", "originalCommit": "08b00e98a5b47dbd2599cbc1f4ef8ebc7947d1e9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEzMzYzNA==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r448133634", "bodyText": "Do we have an EmptyConsumer or NoOpConsumer somewhere, right now? I think so. If you use the EmptyAction.instance(), it would be nice to keep all of these in a similar manner of expression. (Same for above, in this test file, too.)", "author": "jamesonwilliams", "createdAt": "2020-07-01T06:03:54Z", "path": "aws-api/src/test/java/com/amplifyframework/api/aws/AWSApiPluginTest.java", "diffHunk": "@@ -222,6 +237,63 @@ public void graphQlMutationGetsResponse() throws JSONException, ApiException {\n         assertEquals(expectedName, actualResponse.getData().getName());\n     }\n \n+    /**\n+     * Test that owner variable is added to subscription when needed.\n+     * @throws JSONException from JSONAssert.assertEquals\n+     */\n+    @Test\n+    public void graphQlSubscriptionAddsOwnerVariable() throws JSONException {\n+        GraphQLRequest<OwnerAuth> request = ModelSubscription.onCreate(OwnerAuth.class);\n+        plugin.subscribe(request,\n+            subscriptionId -> { },\n+            response -> { },\n+            exception -> { },\n+            EmptyAction.instance());\n+\n+        JSONAssert.assertEquals(Resources.readAsString(\"request-ownerauth.json\"),\n+                request.getContent(),\n+                true);\n+    }\n+\n+    /**\n+     * Verify that the custom owner field variable is added to subscription when needed.\n+     * @throws JSONException from JSONAssert.assertEquals\n+     */\n+    @Test\n+    public void graphQLSubscriptionAddsCustomOwnerField() throws JSONException {\n+        GraphQLRequest<OwnerAuthCustomField> request = ModelSubscription.onUpdate(OwnerAuthCustomField.class);\n+        plugin.subscribe(request,\n+            subscriptionId -> { },\n+            response -> { },\n+            exception -> { },\n+            EmptyAction.instance());", "originalCommit": "08b00e98a5b47dbd2599cbc1f4ef8ebc7947d1e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTY4NTkzNg==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r451685936", "bodyText": "I just found NoOpConsumer :). I've updated to use it.", "author": "richardmcclellan", "createdAt": "2020-07-08T16:48:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEzMzYzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEzNDA2NQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r448134065", "bodyText": "if (!Empty.check(nodes)) {", "author": "jamesonwilliams", "createdAt": "2020-07-01T06:05:20Z", "path": "aws-api/src/main/java/com/amplifyframework/api/aws/SelectionSet.java", "diffHunk": "@@ -0,0 +1,185 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.api.aws;\n+\n+import android.text.TextUtils;\n+import androidx.core.util.ObjectsCompat;\n+\n+import com.amplifyframework.AmplifyException;\n+import com.amplifyframework.core.model.AuthRule;\n+import com.amplifyframework.core.model.AuthStrategy;\n+import com.amplifyframework.core.model.Model;\n+import com.amplifyframework.core.model.ModelSchema;\n+import com.amplifyframework.util.FieldFinder;\n+import com.amplifyframework.util.Wrap;\n+\n+import java.lang.reflect.Field;\n+import java.lang.reflect.ParameterizedType;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+/**\n+ * Class for creating and serializing a selection set within a GraphQL document.\n+ */\n+final class SelectionSet {\n+    private static final String ITEMS_KEY = \"items\";\n+    private static final String NEXT_TOKEN_KEY = \"nextToken\";\n+\n+    // This class should not be instantiated\n+    private SelectionSet() {}\n+\n+    /**\n+     * Returns selection set containing the fields of the provided model class, as well as nested models.\n+     * @param modelClass model class\n+     * @return selection set containing all of the fields of the provided model class\n+     * @throws AmplifyException if a ModelSchema cannot be created from the provided model class.\n+     */\n+    public static Node fromModelClass(Class<? extends Model> modelClass, int depth) throws AmplifyException {\n+        return new Node(null, getModelFields(modelClass, depth));\n+    }\n+\n+    /**\n+     * Expects a {@link Node} containing {@link Model} fields as nodes, and returns a new root node with two children:\n+     *  - \"items\" with nodes being the children of the provided node.\n+     *  - \"nextToken\"\n+     *\n+     * @param node a root node, with a value of null, and pagination fields\n+     * @return\n+     */\n+    public static Node wrapPagination(Node node) {\n+        return new Node(null, wrapPagination(node.nodes));\n+    }\n+\n+    private static Set<Node> wrapPagination(Set<Node> nodes) {\n+        Set<Node> paginatedSet = new HashSet<>();\n+        paginatedSet.add(new Node(ITEMS_KEY, nodes));\n+        paginatedSet.add(new Node(NEXT_TOKEN_KEY, null));\n+        return paginatedSet;\n+    }\n+\n+    @SuppressWarnings(\"unchecked\") // Cast to Class<Model>\n+    private static Set<Node> getModelFields(Class<? extends Model> clazz, int depth)\n+            throws AmplifyException {\n+        if (depth < 0) {\n+            return new HashSet<>();\n+        }\n+\n+        Set<Node> result = new HashSet<>();\n+        ModelSchema schema = ModelSchema.fromModelClass(clazz);\n+        for (Field field : FieldFinder.findFieldsIn(clazz)) {\n+            String fieldName = field.getName();\n+            if (schema.getAssociations().containsKey(fieldName)) {\n+                if (List.class.isAssignableFrom(field.getType())) {\n+                    if (depth >= 1) {\n+                        ParameterizedType listType = (ParameterizedType) field.getGenericType();\n+                        Class<Model> listTypeClass = (Class<Model>) listType.getActualTypeArguments()[0];\n+                        Set<Node> fields = wrapPagination(getModelFields(listTypeClass, depth - 1));\n+                        result.add(new Node(fieldName, fields));\n+                    }\n+                } else if (depth >= 1) {\n+                    Set<Node> fields = getModelFields((Class<Model>) field.getType(), depth - 1);\n+                    result.add(new Node(fieldName, fields));\n+                }\n+            } else {\n+                result.add(new Node(fieldName, null));\n+            }\n+            for (AuthRule authRule : schema.getAuthRules()) {\n+                if (AuthStrategy.OWNER.equals(authRule.getAuthStrategy())) {\n+                    result.add(new Node(authRule.getOwnerFieldOrDefault(), null));\n+                    break;\n+                }\n+            }\n+        }\n+        return result;\n+    }\n+\n+    static final class Node {\n+        private final String value;\n+        private final Set<Node> nodes;\n+\n+        /**\n+         * Copy constructor.\n+         * @param node node to copy\n+         */\n+        Node(Node node) {\n+            this.value = node.value;\n+            this.nodes = new HashSet<>(node.nodes);\n+        }\n+\n+        private Node(String value, Set<Node> nodes) {\n+            this.value = value;\n+            this.nodes = nodes;\n+        }\n+\n+        /**\n+         * Generate the String value of the SelectionSet used in the GraphQL query document.\n+         *\n+         * Sample return value:\n+         *   items {\n+         *     foo\n+         *     bar\n+         *     modelName {\n+         *       foo\n+         *       bar\n+         *     }\n+         *   }\n+         *   nextToken\n+         *\n+         * @return String value of the selection set for a GraphQL query document.\n+         */\n+        @Override\n+        public String toString() {\n+            List<String> fieldsList = new ArrayList<>();\n+            StringBuilder builder = new StringBuilder();\n+\n+            if (value != null) {\n+                builder.append(value);\n+            }\n+\n+            if (nodes != null && nodes.size() > 0) {", "originalCommit": "08b00e98a5b47dbd2599cbc1f4ef8ebc7947d1e9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEzNDM4MQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r448134381", "bodyText": "Nice docs", "author": "jamesonwilliams", "createdAt": "2020-07-01T06:06:15Z", "path": "aws-api/src/main/java/com/amplifyframework/api/aws/SelectionSet.java", "diffHunk": "@@ -0,0 +1,185 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.api.aws;\n+\n+import android.text.TextUtils;\n+import androidx.core.util.ObjectsCompat;\n+\n+import com.amplifyframework.AmplifyException;\n+import com.amplifyframework.core.model.AuthRule;\n+import com.amplifyframework.core.model.AuthStrategy;\n+import com.amplifyframework.core.model.Model;\n+import com.amplifyframework.core.model.ModelSchema;\n+import com.amplifyframework.util.FieldFinder;\n+import com.amplifyframework.util.Wrap;\n+\n+import java.lang.reflect.Field;\n+import java.lang.reflect.ParameterizedType;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+/**\n+ * Class for creating and serializing a selection set within a GraphQL document.\n+ */\n+final class SelectionSet {\n+    private static final String ITEMS_KEY = \"items\";\n+    private static final String NEXT_TOKEN_KEY = \"nextToken\";\n+\n+    // This class should not be instantiated\n+    private SelectionSet() {}\n+\n+    /**\n+     * Returns selection set containing the fields of the provided model class, as well as nested models.\n+     * @param modelClass model class\n+     * @return selection set containing all of the fields of the provided model class\n+     * @throws AmplifyException if a ModelSchema cannot be created from the provided model class.\n+     */\n+    public static Node fromModelClass(Class<? extends Model> modelClass, int depth) throws AmplifyException {\n+        return new Node(null, getModelFields(modelClass, depth));\n+    }\n+\n+    /**\n+     * Expects a {@link Node} containing {@link Model} fields as nodes, and returns a new root node with two children:\n+     *  - \"items\" with nodes being the children of the provided node.\n+     *  - \"nextToken\"\n+     *\n+     * @param node a root node, with a value of null, and pagination fields\n+     * @return\n+     */\n+    public static Node wrapPagination(Node node) {\n+        return new Node(null, wrapPagination(node.nodes));\n+    }\n+\n+    private static Set<Node> wrapPagination(Set<Node> nodes) {\n+        Set<Node> paginatedSet = new HashSet<>();\n+        paginatedSet.add(new Node(ITEMS_KEY, nodes));\n+        paginatedSet.add(new Node(NEXT_TOKEN_KEY, null));\n+        return paginatedSet;\n+    }\n+\n+    @SuppressWarnings(\"unchecked\") // Cast to Class<Model>\n+    private static Set<Node> getModelFields(Class<? extends Model> clazz, int depth)\n+            throws AmplifyException {\n+        if (depth < 0) {\n+            return new HashSet<>();\n+        }\n+\n+        Set<Node> result = new HashSet<>();\n+        ModelSchema schema = ModelSchema.fromModelClass(clazz);\n+        for (Field field : FieldFinder.findFieldsIn(clazz)) {\n+            String fieldName = field.getName();\n+            if (schema.getAssociations().containsKey(fieldName)) {\n+                if (List.class.isAssignableFrom(field.getType())) {\n+                    if (depth >= 1) {\n+                        ParameterizedType listType = (ParameterizedType) field.getGenericType();\n+                        Class<Model> listTypeClass = (Class<Model>) listType.getActualTypeArguments()[0];\n+                        Set<Node> fields = wrapPagination(getModelFields(listTypeClass, depth - 1));\n+                        result.add(new Node(fieldName, fields));\n+                    }\n+                } else if (depth >= 1) {\n+                    Set<Node> fields = getModelFields((Class<Model>) field.getType(), depth - 1);\n+                    result.add(new Node(fieldName, fields));\n+                }\n+            } else {\n+                result.add(new Node(fieldName, null));\n+            }\n+            for (AuthRule authRule : schema.getAuthRules()) {\n+                if (AuthStrategy.OWNER.equals(authRule.getAuthStrategy())) {\n+                    result.add(new Node(authRule.getOwnerFieldOrDefault(), null));\n+                    break;\n+                }\n+            }\n+        }\n+        return result;\n+    }\n+\n+    static final class Node {\n+        private final String value;\n+        private final Set<Node> nodes;\n+\n+        /**\n+         * Copy constructor.\n+         * @param node node to copy\n+         */\n+        Node(Node node) {\n+            this.value = node.value;\n+            this.nodes = new HashSet<>(node.nodes);\n+        }\n+\n+        private Node(String value, Set<Node> nodes) {\n+            this.value = value;\n+            this.nodes = nodes;\n+        }\n+\n+        /**\n+         * Generate the String value of the SelectionSet used in the GraphQL query document.\n+         *\n+         * Sample return value:", "originalCommit": "08b00e98a5b47dbd2599cbc1f4ef8ebc7947d1e9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEzNDU2Ng==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r448134566", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        this.value = node.value;\n          \n          \n            \n                        this.nodes = new HashSet<>(node.nodes);\n          \n          \n            \n                        this(value, new HashSset<>(node.nodes));", "author": "jamesonwilliams", "createdAt": "2020-07-01T06:06:52Z", "path": "aws-api/src/main/java/com/amplifyframework/api/aws/SelectionSet.java", "diffHunk": "@@ -0,0 +1,185 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.api.aws;\n+\n+import android.text.TextUtils;\n+import androidx.core.util.ObjectsCompat;\n+\n+import com.amplifyframework.AmplifyException;\n+import com.amplifyframework.core.model.AuthRule;\n+import com.amplifyframework.core.model.AuthStrategy;\n+import com.amplifyframework.core.model.Model;\n+import com.amplifyframework.core.model.ModelSchema;\n+import com.amplifyframework.util.FieldFinder;\n+import com.amplifyframework.util.Wrap;\n+\n+import java.lang.reflect.Field;\n+import java.lang.reflect.ParameterizedType;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+/**\n+ * Class for creating and serializing a selection set within a GraphQL document.\n+ */\n+final class SelectionSet {\n+    private static final String ITEMS_KEY = \"items\";\n+    private static final String NEXT_TOKEN_KEY = \"nextToken\";\n+\n+    // This class should not be instantiated\n+    private SelectionSet() {}\n+\n+    /**\n+     * Returns selection set containing the fields of the provided model class, as well as nested models.\n+     * @param modelClass model class\n+     * @return selection set containing all of the fields of the provided model class\n+     * @throws AmplifyException if a ModelSchema cannot be created from the provided model class.\n+     */\n+    public static Node fromModelClass(Class<? extends Model> modelClass, int depth) throws AmplifyException {\n+        return new Node(null, getModelFields(modelClass, depth));\n+    }\n+\n+    /**\n+     * Expects a {@link Node} containing {@link Model} fields as nodes, and returns a new root node with two children:\n+     *  - \"items\" with nodes being the children of the provided node.\n+     *  - \"nextToken\"\n+     *\n+     * @param node a root node, with a value of null, and pagination fields\n+     * @return\n+     */\n+    public static Node wrapPagination(Node node) {\n+        return new Node(null, wrapPagination(node.nodes));\n+    }\n+\n+    private static Set<Node> wrapPagination(Set<Node> nodes) {\n+        Set<Node> paginatedSet = new HashSet<>();\n+        paginatedSet.add(new Node(ITEMS_KEY, nodes));\n+        paginatedSet.add(new Node(NEXT_TOKEN_KEY, null));\n+        return paginatedSet;\n+    }\n+\n+    @SuppressWarnings(\"unchecked\") // Cast to Class<Model>\n+    private static Set<Node> getModelFields(Class<? extends Model> clazz, int depth)\n+            throws AmplifyException {\n+        if (depth < 0) {\n+            return new HashSet<>();\n+        }\n+\n+        Set<Node> result = new HashSet<>();\n+        ModelSchema schema = ModelSchema.fromModelClass(clazz);\n+        for (Field field : FieldFinder.findFieldsIn(clazz)) {\n+            String fieldName = field.getName();\n+            if (schema.getAssociations().containsKey(fieldName)) {\n+                if (List.class.isAssignableFrom(field.getType())) {\n+                    if (depth >= 1) {\n+                        ParameterizedType listType = (ParameterizedType) field.getGenericType();\n+                        Class<Model> listTypeClass = (Class<Model>) listType.getActualTypeArguments()[0];\n+                        Set<Node> fields = wrapPagination(getModelFields(listTypeClass, depth - 1));\n+                        result.add(new Node(fieldName, fields));\n+                    }\n+                } else if (depth >= 1) {\n+                    Set<Node> fields = getModelFields((Class<Model>) field.getType(), depth - 1);\n+                    result.add(new Node(fieldName, fields));\n+                }\n+            } else {\n+                result.add(new Node(fieldName, null));\n+            }\n+            for (AuthRule authRule : schema.getAuthRules()) {\n+                if (AuthStrategy.OWNER.equals(authRule.getAuthStrategy())) {\n+                    result.add(new Node(authRule.getOwnerFieldOrDefault(), null));\n+                    break;\n+                }\n+            }\n+        }\n+        return result;\n+    }\n+\n+    static final class Node {\n+        private final String value;\n+        private final Set<Node> nodes;\n+\n+        /**\n+         * Copy constructor.\n+         * @param node node to copy\n+         */\n+        Node(Node node) {\n+            this.value = node.value;\n+            this.nodes = new HashSet<>(node.nodes);", "originalCommit": "08b00e98a5b47dbd2599cbc1f4ef8ebc7947d1e9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEzNDgwMg==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r448134802", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    private Map<String, Object> variables;\n          \n          \n            \n                    private Map<String, String> variableTypes;\n          \n          \n            \n                    private final Map<String, Object> variables;\n          \n          \n            \n                    private final Map<String, String> variableTypes;", "author": "jamesonwilliams", "createdAt": "2020-07-01T06:07:43Z", "path": "aws-api/src/main/java/com/amplifyframework/api/aws/AppSyncGraphQLRequest.java", "diffHunk": "@@ -0,0 +1,295 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.api.aws;\n+\n+import android.text.TextUtils;\n+import androidx.annotation.NonNull;\n+import androidx.core.util.ObjectsCompat;\n+\n+import com.amplifyframework.AmplifyException;\n+import com.amplifyframework.api.ApiException;\n+import com.amplifyframework.api.aws.appsync.GsonVariablesSerializer;\n+import com.amplifyframework.api.aws.sigv4.CognitoUserPoolsAuthProvider;\n+import com.amplifyframework.api.graphql.GraphQLRequest;\n+import com.amplifyframework.api.graphql.OperationType;\n+import com.amplifyframework.api.graphql.QueryType;\n+import com.amplifyframework.api.graphql.SubscriptionType;\n+import com.amplifyframework.core.model.AuthRule;\n+import com.amplifyframework.core.model.Model;\n+import com.amplifyframework.core.model.ModelOperation;\n+import com.amplifyframework.core.model.ModelSchema;\n+import com.amplifyframework.util.Casing;\n+import com.amplifyframework.util.Wrap;\n+\n+import java.lang.reflect.Type;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+/**\n+ * A request against an AppSync GraphQL endpoint.\n+ * @param <R> The type of data contained in the GraphQLResponse expected from this request.\n+ */\n+public final class AppSyncGraphQLRequest<R> extends GraphQLRequest<R> {\n+    private static final int DEFAULT_LEVEL_DEPTH = 2;\n+\n+    private final ModelSchema modelSchema;\n+    private final OperationType operationType;\n+    private final SelectionSet.Node selectionSet;\n+    private final Map<String, Object> variables;\n+    private final Map<String, String> variableTypes;\n+\n+    /**\n+     * Constructor for AppSyncGraphQLRequest.\n+     * @throw AmplifyException if a ModelSchema can't be derived from the provided model class\n+     */\n+    private AppSyncGraphQLRequest(Builder builder) throws AmplifyException {\n+        super(builder.responseType, new GsonVariablesSerializer());\n+        this.modelSchema = ModelSchema.fromModelClass(builder.modelClass);\n+        SelectionSet.Node set = SelectionSet.fromModelClass(builder.modelClass, DEFAULT_LEVEL_DEPTH);\n+        if (QueryType.LIST.equals(builder.operationType)) {\n+            set = SelectionSet.wrapPagination(set);\n+        }\n+        this.selectionSet = set;\n+        this.operationType = builder.operationType;\n+        this.variables = builder.variables;\n+        this.variableTypes = builder.variableTypes;\n+    }\n+\n+    /**\n+     * Copy constructor for an AppSyncGraphQLRequest.\n+     * @param request request to copy.\n+     * @param <R> response type.\n+     */\n+    public <R> AppSyncGraphQLRequest(AppSyncGraphQLRequest<R> request) {\n+        super(request);\n+        this.modelSchema = request.modelSchema;\n+        this.operationType = request.operationType;\n+        this.selectionSet = new SelectionSet.Node(request.selectionSet);\n+        this.variables = new HashMap<>(request.variables);\n+        this.variableTypes = new HashMap<>(request.variableTypes);\n+    }\n+\n+    @Override\n+    public <R> AppSyncGraphQLRequest<R> copy() {\n+        return new AppSyncGraphQLRequest<R>(this);\n+    }\n+\n+    @Override\n+    public Map<String, Object> getVariables() {\n+        return this.variables;\n+    }\n+\n+    /**\n+     * Used for setting a variable on the request.\n+     * @param key variable name\n+     * @param type type of variable value\n+     * @param value variable value\n+     */\n+    public void setVariable(String key, String type, String value) {\n+        this.variables.put(key, value);\n+        this.variableTypes.put(key, type);\n+    }\n+\n+    /**\n+     * Used to add owner argument from authProvider if needed.\n+     * @param authProvider CognitoUserPoolsAuthProvider for obtaining the username to set as the owner field.\n+     * @throws ApiException if request requires owner argument and authProvider or authProvider.getUsername() is null.\n+     */\n+    public void setAuthProvider(CognitoUserPoolsAuthProvider authProvider) throws ApiException {\n+        for (AuthRule authRule : modelSchema.getAuthRules()) {\n+            if (isOwnerArgumentRequired(authRule.getOperationsOrDefault())) {\n+                setVariable(authRule.getOwnerFieldOrDefault(), \"String!\", getUsername(authProvider));\n+            }\n+        }\n+    }\n+\n+    private String getUsername(CognitoUserPoolsAuthProvider authProvider) throws ApiException {\n+        if (authProvider == null) {\n+            throw new ApiException(\n+                    \"Attempted to subscribe to a model with owner based authorization without a Cognito provider\",\n+                    \"Did you add the AWSCognitoAuthPlugin to Amplify before configuring it?\"\n+            );\n+        }\n+        String username = authProvider.getUsername();\n+        if (username == null) {\n+            throw new ApiException(\n+                    \"Attempted to subscribe to a model with owner based authorization without a username\",\n+                    \"Make sure that a user is logged in before subscribing to a model with owner based auth\"\n+            );\n+        }\n+        return username;\n+    }\n+\n+    private boolean isOwnerArgumentRequired(List<ModelOperation> operations) {\n+        if (SubscriptionType.ON_CREATE.equals(operationType) && operations.contains(ModelOperation.CREATE)) {\n+            return true;\n+        }\n+        if (SubscriptionType.ON_UPDATE.equals(operationType) && operations.contains(ModelOperation.UPDATE)) {\n+            return true;\n+        }\n+        if (SubscriptionType.ON_DELETE.equals(operationType) && operations.contains(ModelOperation.DELETE)) {\n+            return true;\n+        }\n+        return false;\n+    }\n+\n+    /**\n+     *  Returns String value used for GraphQL \"query\" in HTTP request body.\n+     *\n+     *  Sample return value:\n+     *      subscription OnCreatePerson(owner: String!, nextToken: String) {\n+     *            onCreatePerson(owner: $owner, nextToken: $nextToken) {\n+     *               age dob first_name id last_name relationship owner\n+     *            }\n+     *       }\n+     *\n+     * @return String value used for GraphQL \"query\" in HTTP request body\n+     */\n+    @Override\n+    public String getQuery() {\n+        String inputTypeString = \"\";\n+        String inputParameterString = \"\";\n+        if (variableTypes.size() > 0) {\n+            List<String> inputKeys = new ArrayList<>(variableTypes.keySet());\n+            Collections.sort(inputKeys);\n+\n+            List<String> inputTypes = new ArrayList<>();\n+            List<String> inputParameters = new ArrayList<>();\n+            for (String key : inputKeys) {\n+                inputTypes.add(\"$\" + key + \": \" + variableTypes.get(key));\n+                inputParameters.add(key + \": $\" + key);\n+            }\n+\n+            inputTypeString = Wrap.inParentheses(TextUtils.join(\", \", inputTypes));\n+            inputParameterString = Wrap.inParentheses(TextUtils.join(\", \", inputParameters));\n+        }\n+\n+        String modelName = modelSchema.getName();\n+        String operationString = new StringBuilder()\n+                .append(Casing.from(Casing.CaseType.SCREAMING_SNAKE_CASE).to(Casing.CaseType.CAMEL_CASE)\n+                        .convert(operationType.toString()))\n+                .append(modelName)\n+                .append(QueryType.LIST.equals(operationType) ? \"s\" : \"\")\n+                .append(inputParameterString)\n+                .append(selectionSet.toString())\n+                .toString();\n+\n+        String queryString = new StringBuilder()\n+                .append(operationType.getOperationName())\n+                .append(\" \")\n+                .append(Casing.from(Casing.CaseType.SCREAMING_SNAKE_CASE).to(Casing.CaseType.PASCAL_CASE)\n+                        .convert(operationType.toString()))\n+                .append(modelName)\n+                .append(inputTypeString)\n+                .append(\" \")\n+                .append(Wrap.inBraces(operationString))\n+                .toString();\n+\n+        return queryString;\n+    }\n+\n+    @Override\n+    public boolean equals(Object object) {\n+        if (this == object) {\n+            return true;\n+        }\n+\n+        if (object == null || getClass() != object.getClass()) {\n+            return false;\n+        }\n+        if (!super.equals(object)) {\n+            return false;\n+        }\n+        AppSyncGraphQLRequest<?> that = (AppSyncGraphQLRequest<?>) object;\n+        return ObjectsCompat.equals(modelSchema, that.modelSchema) &&\n+                ObjectsCompat.equals(operationType, that.operationType) &&\n+                ObjectsCompat.equals(selectionSet, that.selectionSet) &&\n+                ObjectsCompat.equals(variables, that.variables) &&\n+                ObjectsCompat.equals(variableTypes, that.variableTypes);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return ObjectsCompat.hash(super.hashCode(), modelSchema, operationType, selectionSet, variables, variableTypes);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"AppSyncGraphQLRequest{\" +\n+                \"modelSchema=\" + modelSchema +\n+                \", operationType=\" + operationType +\n+                \", selectionSet=\" + selectionSet +\n+                \", variables=\" + variables +\n+                \", variableTypes=\" + variableTypes +\n+                super.toString() +\n+                '}';\n+    }\n+\n+    /**\n+     * Create a new AppSyncGraphQLRequest builder.\n+     * @return a new AppSyncGraphQLRequest builder.\n+     */\n+    public static AppSyncGraphQLRequest.Builder builder() {\n+        return new Builder();\n+    }\n+\n+    static final class Builder {\n+        private Class<? extends Model> modelClass;\n+        private OperationType operationType;\n+        private Type responseType;\n+        private Map<String, Object> variables;\n+        private Map<String, String> variableTypes;", "originalCommit": "08b00e98a5b47dbd2599cbc1f4ef8ebc7947d1e9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEzNTIzMA==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r448135230", "bodyText": "Hm, is this gonna work? It'll output something like GraphQLRequest { ... } in the middle. Would it be better to just access the super.fields directly to flatten them inline with these others?", "author": "jamesonwilliams", "createdAt": "2020-07-01T06:09:06Z", "path": "aws-api/src/main/java/com/amplifyframework/api/aws/AppSyncGraphQLRequest.java", "diffHunk": "@@ -0,0 +1,295 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.api.aws;\n+\n+import android.text.TextUtils;\n+import androidx.annotation.NonNull;\n+import androidx.core.util.ObjectsCompat;\n+\n+import com.amplifyframework.AmplifyException;\n+import com.amplifyframework.api.ApiException;\n+import com.amplifyframework.api.aws.appsync.GsonVariablesSerializer;\n+import com.amplifyframework.api.aws.sigv4.CognitoUserPoolsAuthProvider;\n+import com.amplifyframework.api.graphql.GraphQLRequest;\n+import com.amplifyframework.api.graphql.OperationType;\n+import com.amplifyframework.api.graphql.QueryType;\n+import com.amplifyframework.api.graphql.SubscriptionType;\n+import com.amplifyframework.core.model.AuthRule;\n+import com.amplifyframework.core.model.Model;\n+import com.amplifyframework.core.model.ModelOperation;\n+import com.amplifyframework.core.model.ModelSchema;\n+import com.amplifyframework.util.Casing;\n+import com.amplifyframework.util.Wrap;\n+\n+import java.lang.reflect.Type;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+/**\n+ * A request against an AppSync GraphQL endpoint.\n+ * @param <R> The type of data contained in the GraphQLResponse expected from this request.\n+ */\n+public final class AppSyncGraphQLRequest<R> extends GraphQLRequest<R> {\n+    private static final int DEFAULT_LEVEL_DEPTH = 2;\n+\n+    private final ModelSchema modelSchema;\n+    private final OperationType operationType;\n+    private final SelectionSet.Node selectionSet;\n+    private final Map<String, Object> variables;\n+    private final Map<String, String> variableTypes;\n+\n+    /**\n+     * Constructor for AppSyncGraphQLRequest.\n+     * @throw AmplifyException if a ModelSchema can't be derived from the provided model class\n+     */\n+    private AppSyncGraphQLRequest(Builder builder) throws AmplifyException {\n+        super(builder.responseType, new GsonVariablesSerializer());\n+        this.modelSchema = ModelSchema.fromModelClass(builder.modelClass);\n+        SelectionSet.Node set = SelectionSet.fromModelClass(builder.modelClass, DEFAULT_LEVEL_DEPTH);\n+        if (QueryType.LIST.equals(builder.operationType)) {\n+            set = SelectionSet.wrapPagination(set);\n+        }\n+        this.selectionSet = set;\n+        this.operationType = builder.operationType;\n+        this.variables = builder.variables;\n+        this.variableTypes = builder.variableTypes;\n+    }\n+\n+    /**\n+     * Copy constructor for an AppSyncGraphQLRequest.\n+     * @param request request to copy.\n+     * @param <R> response type.\n+     */\n+    public <R> AppSyncGraphQLRequest(AppSyncGraphQLRequest<R> request) {\n+        super(request);\n+        this.modelSchema = request.modelSchema;\n+        this.operationType = request.operationType;\n+        this.selectionSet = new SelectionSet.Node(request.selectionSet);\n+        this.variables = new HashMap<>(request.variables);\n+        this.variableTypes = new HashMap<>(request.variableTypes);\n+    }\n+\n+    @Override\n+    public <R> AppSyncGraphQLRequest<R> copy() {\n+        return new AppSyncGraphQLRequest<R>(this);\n+    }\n+\n+    @Override\n+    public Map<String, Object> getVariables() {\n+        return this.variables;\n+    }\n+\n+    /**\n+     * Used for setting a variable on the request.\n+     * @param key variable name\n+     * @param type type of variable value\n+     * @param value variable value\n+     */\n+    public void setVariable(String key, String type, String value) {\n+        this.variables.put(key, value);\n+        this.variableTypes.put(key, type);\n+    }\n+\n+    /**\n+     * Used to add owner argument from authProvider if needed.\n+     * @param authProvider CognitoUserPoolsAuthProvider for obtaining the username to set as the owner field.\n+     * @throws ApiException if request requires owner argument and authProvider or authProvider.getUsername() is null.\n+     */\n+    public void setAuthProvider(CognitoUserPoolsAuthProvider authProvider) throws ApiException {\n+        for (AuthRule authRule : modelSchema.getAuthRules()) {\n+            if (isOwnerArgumentRequired(authRule.getOperationsOrDefault())) {\n+                setVariable(authRule.getOwnerFieldOrDefault(), \"String!\", getUsername(authProvider));\n+            }\n+        }\n+    }\n+\n+    private String getUsername(CognitoUserPoolsAuthProvider authProvider) throws ApiException {\n+        if (authProvider == null) {\n+            throw new ApiException(\n+                    \"Attempted to subscribe to a model with owner based authorization without a Cognito provider\",\n+                    \"Did you add the AWSCognitoAuthPlugin to Amplify before configuring it?\"\n+            );\n+        }\n+        String username = authProvider.getUsername();\n+        if (username == null) {\n+            throw new ApiException(\n+                    \"Attempted to subscribe to a model with owner based authorization without a username\",\n+                    \"Make sure that a user is logged in before subscribing to a model with owner based auth\"\n+            );\n+        }\n+        return username;\n+    }\n+\n+    private boolean isOwnerArgumentRequired(List<ModelOperation> operations) {\n+        if (SubscriptionType.ON_CREATE.equals(operationType) && operations.contains(ModelOperation.CREATE)) {\n+            return true;\n+        }\n+        if (SubscriptionType.ON_UPDATE.equals(operationType) && operations.contains(ModelOperation.UPDATE)) {\n+            return true;\n+        }\n+        if (SubscriptionType.ON_DELETE.equals(operationType) && operations.contains(ModelOperation.DELETE)) {\n+            return true;\n+        }\n+        return false;\n+    }\n+\n+    /**\n+     *  Returns String value used for GraphQL \"query\" in HTTP request body.\n+     *\n+     *  Sample return value:\n+     *      subscription OnCreatePerson(owner: String!, nextToken: String) {\n+     *            onCreatePerson(owner: $owner, nextToken: $nextToken) {\n+     *               age dob first_name id last_name relationship owner\n+     *            }\n+     *       }\n+     *\n+     * @return String value used for GraphQL \"query\" in HTTP request body\n+     */\n+    @Override\n+    public String getQuery() {\n+        String inputTypeString = \"\";\n+        String inputParameterString = \"\";\n+        if (variableTypes.size() > 0) {\n+            List<String> inputKeys = new ArrayList<>(variableTypes.keySet());\n+            Collections.sort(inputKeys);\n+\n+            List<String> inputTypes = new ArrayList<>();\n+            List<String> inputParameters = new ArrayList<>();\n+            for (String key : inputKeys) {\n+                inputTypes.add(\"$\" + key + \": \" + variableTypes.get(key));\n+                inputParameters.add(key + \": $\" + key);\n+            }\n+\n+            inputTypeString = Wrap.inParentheses(TextUtils.join(\", \", inputTypes));\n+            inputParameterString = Wrap.inParentheses(TextUtils.join(\", \", inputParameters));\n+        }\n+\n+        String modelName = modelSchema.getName();\n+        String operationString = new StringBuilder()\n+                .append(Casing.from(Casing.CaseType.SCREAMING_SNAKE_CASE).to(Casing.CaseType.CAMEL_CASE)\n+                        .convert(operationType.toString()))\n+                .append(modelName)\n+                .append(QueryType.LIST.equals(operationType) ? \"s\" : \"\")\n+                .append(inputParameterString)\n+                .append(selectionSet.toString())\n+                .toString();\n+\n+        String queryString = new StringBuilder()\n+                .append(operationType.getOperationName())\n+                .append(\" \")\n+                .append(Casing.from(Casing.CaseType.SCREAMING_SNAKE_CASE).to(Casing.CaseType.PASCAL_CASE)\n+                        .convert(operationType.toString()))\n+                .append(modelName)\n+                .append(inputTypeString)\n+                .append(\" \")\n+                .append(Wrap.inBraces(operationString))\n+                .toString();\n+\n+        return queryString;\n+    }\n+\n+    @Override\n+    public boolean equals(Object object) {\n+        if (this == object) {\n+            return true;\n+        }\n+\n+        if (object == null || getClass() != object.getClass()) {\n+            return false;\n+        }\n+        if (!super.equals(object)) {\n+            return false;\n+        }\n+        AppSyncGraphQLRequest<?> that = (AppSyncGraphQLRequest<?>) object;\n+        return ObjectsCompat.equals(modelSchema, that.modelSchema) &&\n+                ObjectsCompat.equals(operationType, that.operationType) &&\n+                ObjectsCompat.equals(selectionSet, that.selectionSet) &&\n+                ObjectsCompat.equals(variables, that.variables) &&\n+                ObjectsCompat.equals(variableTypes, that.variableTypes);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return ObjectsCompat.hash(super.hashCode(), modelSchema, operationType, selectionSet, variables, variableTypes);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"AppSyncGraphQLRequest{\" +\n+                \"modelSchema=\" + modelSchema +\n+                \", operationType=\" + operationType +\n+                \", selectionSet=\" + selectionSet +\n+                \", variables=\" + variables +\n+                \", variableTypes=\" + variableTypes +\n+                super.toString() +", "originalCommit": "08b00e98a5b47dbd2599cbc1f4ef8ebc7947d1e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY2NzM2Ng==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r450667366", "bodyText": "It would work in the sense that it would print out all the properties, but I agree, with a weird nested GraphQLRequest { }.  I just updated it just print them all inline with the others.", "author": "richardmcclellan", "createdAt": "2020-07-07T07:36:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEzNTIzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEzNTgzMQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r448135831", "bodyText": "In hindsight, I was having too much fun when I made this Casing utility. But I think my intention was that you could import CaseType directly, for the most readability:\nCasing.from(CaseType.SCREAMING_SNAKE_CASE, ...)", "author": "jamesonwilliams", "createdAt": "2020-07-01T06:10:53Z", "path": "aws-api/src/main/java/com/amplifyframework/api/aws/AppSyncGraphQLRequest.java", "diffHunk": "@@ -0,0 +1,295 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.api.aws;\n+\n+import android.text.TextUtils;\n+import androidx.annotation.NonNull;\n+import androidx.core.util.ObjectsCompat;\n+\n+import com.amplifyframework.AmplifyException;\n+import com.amplifyframework.api.ApiException;\n+import com.amplifyframework.api.aws.appsync.GsonVariablesSerializer;\n+import com.amplifyframework.api.aws.sigv4.CognitoUserPoolsAuthProvider;\n+import com.amplifyframework.api.graphql.GraphQLRequest;\n+import com.amplifyframework.api.graphql.OperationType;\n+import com.amplifyframework.api.graphql.QueryType;\n+import com.amplifyframework.api.graphql.SubscriptionType;\n+import com.amplifyframework.core.model.AuthRule;\n+import com.amplifyframework.core.model.Model;\n+import com.amplifyframework.core.model.ModelOperation;\n+import com.amplifyframework.core.model.ModelSchema;\n+import com.amplifyframework.util.Casing;\n+import com.amplifyframework.util.Wrap;\n+\n+import java.lang.reflect.Type;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+/**\n+ * A request against an AppSync GraphQL endpoint.\n+ * @param <R> The type of data contained in the GraphQLResponse expected from this request.\n+ */\n+public final class AppSyncGraphQLRequest<R> extends GraphQLRequest<R> {\n+    private static final int DEFAULT_LEVEL_DEPTH = 2;\n+\n+    private final ModelSchema modelSchema;\n+    private final OperationType operationType;\n+    private final SelectionSet.Node selectionSet;\n+    private final Map<String, Object> variables;\n+    private final Map<String, String> variableTypes;\n+\n+    /**\n+     * Constructor for AppSyncGraphQLRequest.\n+     * @throw AmplifyException if a ModelSchema can't be derived from the provided model class\n+     */\n+    private AppSyncGraphQLRequest(Builder builder) throws AmplifyException {\n+        super(builder.responseType, new GsonVariablesSerializer());\n+        this.modelSchema = ModelSchema.fromModelClass(builder.modelClass);\n+        SelectionSet.Node set = SelectionSet.fromModelClass(builder.modelClass, DEFAULT_LEVEL_DEPTH);\n+        if (QueryType.LIST.equals(builder.operationType)) {\n+            set = SelectionSet.wrapPagination(set);\n+        }\n+        this.selectionSet = set;\n+        this.operationType = builder.operationType;\n+        this.variables = builder.variables;\n+        this.variableTypes = builder.variableTypes;\n+    }\n+\n+    /**\n+     * Copy constructor for an AppSyncGraphQLRequest.\n+     * @param request request to copy.\n+     * @param <R> response type.\n+     */\n+    public <R> AppSyncGraphQLRequest(AppSyncGraphQLRequest<R> request) {\n+        super(request);\n+        this.modelSchema = request.modelSchema;\n+        this.operationType = request.operationType;\n+        this.selectionSet = new SelectionSet.Node(request.selectionSet);\n+        this.variables = new HashMap<>(request.variables);\n+        this.variableTypes = new HashMap<>(request.variableTypes);\n+    }\n+\n+    @Override\n+    public <R> AppSyncGraphQLRequest<R> copy() {\n+        return new AppSyncGraphQLRequest<R>(this);\n+    }\n+\n+    @Override\n+    public Map<String, Object> getVariables() {\n+        return this.variables;\n+    }\n+\n+    /**\n+     * Used for setting a variable on the request.\n+     * @param key variable name\n+     * @param type type of variable value\n+     * @param value variable value\n+     */\n+    public void setVariable(String key, String type, String value) {\n+        this.variables.put(key, value);\n+        this.variableTypes.put(key, type);\n+    }\n+\n+    /**\n+     * Used to add owner argument from authProvider if needed.\n+     * @param authProvider CognitoUserPoolsAuthProvider for obtaining the username to set as the owner field.\n+     * @throws ApiException if request requires owner argument and authProvider or authProvider.getUsername() is null.\n+     */\n+    public void setAuthProvider(CognitoUserPoolsAuthProvider authProvider) throws ApiException {\n+        for (AuthRule authRule : modelSchema.getAuthRules()) {\n+            if (isOwnerArgumentRequired(authRule.getOperationsOrDefault())) {\n+                setVariable(authRule.getOwnerFieldOrDefault(), \"String!\", getUsername(authProvider));\n+            }\n+        }\n+    }\n+\n+    private String getUsername(CognitoUserPoolsAuthProvider authProvider) throws ApiException {\n+        if (authProvider == null) {\n+            throw new ApiException(\n+                    \"Attempted to subscribe to a model with owner based authorization without a Cognito provider\",\n+                    \"Did you add the AWSCognitoAuthPlugin to Amplify before configuring it?\"\n+            );\n+        }\n+        String username = authProvider.getUsername();\n+        if (username == null) {\n+            throw new ApiException(\n+                    \"Attempted to subscribe to a model with owner based authorization without a username\",\n+                    \"Make sure that a user is logged in before subscribing to a model with owner based auth\"\n+            );\n+        }\n+        return username;\n+    }\n+\n+    private boolean isOwnerArgumentRequired(List<ModelOperation> operations) {\n+        if (SubscriptionType.ON_CREATE.equals(operationType) && operations.contains(ModelOperation.CREATE)) {\n+            return true;\n+        }\n+        if (SubscriptionType.ON_UPDATE.equals(operationType) && operations.contains(ModelOperation.UPDATE)) {\n+            return true;\n+        }\n+        if (SubscriptionType.ON_DELETE.equals(operationType) && operations.contains(ModelOperation.DELETE)) {\n+            return true;\n+        }\n+        return false;\n+    }\n+\n+    /**\n+     *  Returns String value used for GraphQL \"query\" in HTTP request body.\n+     *\n+     *  Sample return value:\n+     *      subscription OnCreatePerson(owner: String!, nextToken: String) {\n+     *            onCreatePerson(owner: $owner, nextToken: $nextToken) {\n+     *               age dob first_name id last_name relationship owner\n+     *            }\n+     *       }\n+     *\n+     * @return String value used for GraphQL \"query\" in HTTP request body\n+     */\n+    @Override\n+    public String getQuery() {\n+        String inputTypeString = \"\";\n+        String inputParameterString = \"\";\n+        if (variableTypes.size() > 0) {\n+            List<String> inputKeys = new ArrayList<>(variableTypes.keySet());\n+            Collections.sort(inputKeys);\n+\n+            List<String> inputTypes = new ArrayList<>();\n+            List<String> inputParameters = new ArrayList<>();\n+            for (String key : inputKeys) {\n+                inputTypes.add(\"$\" + key + \": \" + variableTypes.get(key));\n+                inputParameters.add(key + \": $\" + key);\n+            }\n+\n+            inputTypeString = Wrap.inParentheses(TextUtils.join(\", \", inputTypes));\n+            inputParameterString = Wrap.inParentheses(TextUtils.join(\", \", inputParameters));\n+        }\n+\n+        String modelName = modelSchema.getName();\n+        String operationString = new StringBuilder()\n+                .append(Casing.from(Casing.CaseType.SCREAMING_SNAKE_CASE).to(Casing.CaseType.CAMEL_CASE)", "originalCommit": "08b00e98a5b47dbd2599cbc1f4ef8ebc7947d1e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY3MTU3MQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r450671571", "bodyText": "I'll go ahead and go a step further, and use static imports so I can just do this: Casing.from(SCREAMING_SNAKE_CASE).to(PASCAL_CASE).convert(operationType.toString()))", "author": "richardmcclellan", "createdAt": "2020-07-07T07:44:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEzNTgzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY4MDg0OA==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r450680848", "bodyText": "Hmm, our checkstyle rules don't allow static imports, so I'm gonna leave this as is for now.", "author": "richardmcclellan", "createdAt": "2020-07-07T08:02:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEzNTgzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODc1MTk0Ng==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r448751946", "bodyText": "So I can't explain why we have to set owner: String! and the value on graphQL document/variables. We already intercept the request with the token which contains all of this information, so shouldn't the service already know how to retrieve the token and check if the user is authorized? Why do both? @SwaySway tried to explain this to me once and it had something to do with how subscriptions work. There is the initial connection that contains the auth token on the request header and then on each subscription message, it probably requires the owner value to be used as a filter to check if the data can be passed back to the subscriber?\nSo from trying out different auth rules with \"allow: owner\", it turns out, as long as the operation is specified then the correlating operation's subscription requires the owner value to be present. This is what you have written here. The callout here is that this does not work for all auth rules. I don't think this should block this PR from shipping as this is just a limitation that we can document and increase in functionality later.\nThe problem is when there are auth rules with \"allow: groups, groups: [\"SomeGroup\"]\".\ntype ApprovedBlog @model @auth(rules: [{allow: groups, groups: [\"ApprovedBloggers\"], operations: [read, create]}]) {\n  id: ID!\n  blogId: String\n}\n\nApprovedBlog can only be read and created by users in the \"ApprovedBloggers\" group. (Uh, i'm not sure what this means for others not in the group, maybe they can update and delete ApprovedBlog objects if they have access to the id of the object? not sure)\nNone of the generated subscription operations require the owner field\nonCreateApprovedBlog: ApprovedBlog\nonUpdateApprovedBlog: ApprovedBlog\nonDeleteApprovedBlog: ApprovedBlog\n\nI have user1 not in the group and user2 in the group.\nBoth logged in users create a subscription without the owner:\nsubscription onCreaeApprovedBlog {\n\tonCreateApprovedBlog {\n    id\n    blogId\n  }  \n}\n\nuser1 fails with\nError: {\n    \"errors\": [\n        {\n            \"message\": \"Connection failed: {\\\"errors\\\":[{\\\"errorType\\\":\\\"Unauthorized\\\",\\\"message\\\":\\\"Not Authorized to access onCreateApprovedBlog on type Subscription\\\"}]}\"\n        }\n    ]\n}\n\nuser2 is able to create a subscription connection.\nSince models with static groups auth rules do not require the owner to be passed in, the check for isOwnerArgumentRequired should be: authRule's allow == owner && SubscriptionType match ModelOperation\non iOS it's done in decorateIfOwnerAuthStrategy and there are other related issues to keep in mind which may or may not be relevant on Android related to having both \"allow: owner\" and \"allow: groups\"", "author": "lawmicha", "createdAt": "2020-07-02T05:09:24Z", "path": "aws-api/src/main/java/com/amplifyframework/api/aws/AppSyncGraphQLRequest.java", "diffHunk": "@@ -0,0 +1,295 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.api.aws;\n+\n+import android.text.TextUtils;\n+import androidx.annotation.NonNull;\n+import androidx.core.util.ObjectsCompat;\n+\n+import com.amplifyframework.AmplifyException;\n+import com.amplifyframework.api.ApiException;\n+import com.amplifyframework.api.aws.appsync.GsonVariablesSerializer;\n+import com.amplifyframework.api.aws.sigv4.CognitoUserPoolsAuthProvider;\n+import com.amplifyframework.api.graphql.GraphQLRequest;\n+import com.amplifyframework.api.graphql.OperationType;\n+import com.amplifyframework.api.graphql.QueryType;\n+import com.amplifyframework.api.graphql.SubscriptionType;\n+import com.amplifyframework.core.model.AuthRule;\n+import com.amplifyframework.core.model.Model;\n+import com.amplifyframework.core.model.ModelOperation;\n+import com.amplifyframework.core.model.ModelSchema;\n+import com.amplifyframework.util.Casing;\n+import com.amplifyframework.util.Wrap;\n+\n+import java.lang.reflect.Type;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+/**\n+ * A request against an AppSync GraphQL endpoint.\n+ * @param <R> The type of data contained in the GraphQLResponse expected from this request.\n+ */\n+public final class AppSyncGraphQLRequest<R> extends GraphQLRequest<R> {\n+    private static final int DEFAULT_LEVEL_DEPTH = 2;\n+\n+    private final ModelSchema modelSchema;\n+    private final OperationType operationType;\n+    private final SelectionSet.Node selectionSet;\n+    private final Map<String, Object> variables;\n+    private final Map<String, String> variableTypes;\n+\n+    /**\n+     * Constructor for AppSyncGraphQLRequest.\n+     * @throw AmplifyException if a ModelSchema can't be derived from the provided model class\n+     */\n+    private AppSyncGraphQLRequest(Builder builder) throws AmplifyException {\n+        super(builder.responseType, new GsonVariablesSerializer());\n+        this.modelSchema = ModelSchema.fromModelClass(builder.modelClass);\n+        SelectionSet.Node set = SelectionSet.fromModelClass(builder.modelClass, DEFAULT_LEVEL_DEPTH);\n+        if (QueryType.LIST.equals(builder.operationType)) {\n+            set = SelectionSet.wrapPagination(set);\n+        }\n+        this.selectionSet = set;\n+        this.operationType = builder.operationType;\n+        this.variables = builder.variables;\n+        this.variableTypes = builder.variableTypes;\n+    }\n+\n+    /**\n+     * Copy constructor for an AppSyncGraphQLRequest.\n+     * @param request request to copy.\n+     * @param <R> response type.\n+     */\n+    public <R> AppSyncGraphQLRequest(AppSyncGraphQLRequest<R> request) {\n+        super(request);\n+        this.modelSchema = request.modelSchema;\n+        this.operationType = request.operationType;\n+        this.selectionSet = new SelectionSet.Node(request.selectionSet);\n+        this.variables = new HashMap<>(request.variables);\n+        this.variableTypes = new HashMap<>(request.variableTypes);\n+    }\n+\n+    @Override\n+    public <R> AppSyncGraphQLRequest<R> copy() {\n+        return new AppSyncGraphQLRequest<R>(this);\n+    }\n+\n+    @Override\n+    public Map<String, Object> getVariables() {\n+        return this.variables;\n+    }\n+\n+    /**\n+     * Used for setting a variable on the request.\n+     * @param key variable name\n+     * @param type type of variable value\n+     * @param value variable value\n+     */\n+    public void setVariable(String key, String type, String value) {\n+        this.variables.put(key, value);\n+        this.variableTypes.put(key, type);\n+    }\n+\n+    /**\n+     * Used to add owner argument from authProvider if needed.\n+     * @param authProvider CognitoUserPoolsAuthProvider for obtaining the username to set as the owner field.\n+     * @throws ApiException if request requires owner argument and authProvider or authProvider.getUsername() is null.\n+     */\n+    public void setAuthProvider(CognitoUserPoolsAuthProvider authProvider) throws ApiException {\n+        for (AuthRule authRule : modelSchema.getAuthRules()) {\n+            if (isOwnerArgumentRequired(authRule.getOperationsOrDefault())) {\n+                setVariable(authRule.getOwnerFieldOrDefault(), \"String!\", getUsername(authProvider));", "originalCommit": "08b00e98a5b47dbd2599cbc1f4ef8ebc7947d1e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE4NzUxOA==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r451187518", "bodyText": "Since models with static groups auth rules do not require the owner to be passed in, the check for isOwnerArgumentRequired should be: authRule's allow == owner && SubscriptionType match ModelOperation\n\nThanks for this clarification, I just added a check to make sure the owner argument is only added for the owner strategy.\n\nthere are other related issues to keep in mind which may or may not be relevant on Android related to having both \"allow: owner\" and \"allow: groups\"\n\nI will keep this in mind, as my next task is to incorporate the auth directive into DataStore.", "author": "richardmcclellan", "createdAt": "2020-07-07T22:51:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODc1MTk0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODc2NDUwNw==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r448764507", "bodyText": "on iOS, the selection set is only generated from the fields from the Model. We don't actually add it in based on the auth rule's owner field. The reason why we do not add it in is because it's up to the developer to decide whether that data is returned in their Model\nFor example\n\nDeveloper has annotated the Model with Auth directive with \"allow: owner\" and by default it sets ownerField to \"owner\". They do not add it to their model like\n\ntype Model @model @auth { allow: owner } {\n   id: ID!\n   content: String\n   // missing owner\n}\n\nModel only contains id and content, so if the selection set had the owner field added, it would just be dropped when deserializing\nDataStore sync to cloud does custom deserialization to separate out into Model and MutationSyncMetadata (containinig version and deleted). Even if ownerField is added to the selection set, and the value is returned in the response, it would just be ignored\n\nDeveloper sets it on their model\n\ntype Model @model @auth { allow: owner } {\n   id: ID!\n   content: String\n   owner: String\n}\n\nCodegen generates Model with id, content, and owner. SelectionSet contains all three fields because it's generated from the Model's fields. Does not care about the auth rules\n\nDeveloper sets a custom ownerField, but not on their model\n\ntype Model @model @auth { allow: owner, ownerField: \"customOwner\" } {\n   id: ID!\n   content: String\n   // missing customOwner\n}\n\nI don't think a developer would ever do this since they are trying to reference a custom owner field in the Model but have not specified it in their model. If they want a custom owner field, they should specify it like in scenario 4 below\n\nDeveloper sets a custom ownerField and adds it to the model\n\ntype Model @model @auth { allow: owner, ownerField: \"customOwner\" } {\n   id: ID!\n   content: String\n   customOwner: String\n}\n\nCodegen generates Model with id, content, and customOwner. SelectionSet contains all three fields because it's generated from the Model's fields. Does not care about the auth rules.\nowner field on the Model should be optional\nwhen you specify the owner field on the Model, whether it's \"owner\" or \"customOwner\", it has to be optional since it's automatically managed (API intercept the request with the token). Making it required means the caller needs to add it in the request somehow.\nFor scenario 2 and 4, does that mean this code is adding duplicate owner fields to the selection set?", "author": "lawmicha", "createdAt": "2020-07-02T05:57:02Z", "path": "aws-api/src/main/java/com/amplifyframework/api/aws/SelectionSet.java", "diffHunk": "@@ -0,0 +1,185 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.api.aws;\n+\n+import android.text.TextUtils;\n+import androidx.core.util.ObjectsCompat;\n+\n+import com.amplifyframework.AmplifyException;\n+import com.amplifyframework.core.model.AuthRule;\n+import com.amplifyframework.core.model.AuthStrategy;\n+import com.amplifyframework.core.model.Model;\n+import com.amplifyframework.core.model.ModelSchema;\n+import com.amplifyframework.util.FieldFinder;\n+import com.amplifyframework.util.Wrap;\n+\n+import java.lang.reflect.Field;\n+import java.lang.reflect.ParameterizedType;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+/**\n+ * Class for creating and serializing a selection set within a GraphQL document.\n+ */\n+final class SelectionSet {\n+    private static final String ITEMS_KEY = \"items\";\n+    private static final String NEXT_TOKEN_KEY = \"nextToken\";\n+\n+    // This class should not be instantiated\n+    private SelectionSet() {}\n+\n+    /**\n+     * Returns selection set containing the fields of the provided model class, as well as nested models.\n+     * @param modelClass model class\n+     * @return selection set containing all of the fields of the provided model class\n+     * @throws AmplifyException if a ModelSchema cannot be created from the provided model class.\n+     */\n+    public static Node fromModelClass(Class<? extends Model> modelClass, int depth) throws AmplifyException {\n+        return new Node(null, getModelFields(modelClass, depth));\n+    }\n+\n+    /**\n+     * Expects a {@link Node} containing {@link Model} fields as nodes, and returns a new root node with two children:\n+     *  - \"items\" with nodes being the children of the provided node.\n+     *  - \"nextToken\"\n+     *\n+     * @param node a root node, with a value of null, and pagination fields\n+     * @return\n+     */\n+    public static Node wrapPagination(Node node) {\n+        return new Node(null, wrapPagination(node.nodes));\n+    }\n+\n+    private static Set<Node> wrapPagination(Set<Node> nodes) {\n+        Set<Node> paginatedSet = new HashSet<>();\n+        paginatedSet.add(new Node(ITEMS_KEY, nodes));\n+        paginatedSet.add(new Node(NEXT_TOKEN_KEY, null));\n+        return paginatedSet;\n+    }\n+\n+    @SuppressWarnings(\"unchecked\") // Cast to Class<Model>\n+    private static Set<Node> getModelFields(Class<? extends Model> clazz, int depth)\n+            throws AmplifyException {\n+        if (depth < 0) {\n+            return new HashSet<>();\n+        }\n+\n+        Set<Node> result = new HashSet<>();\n+        ModelSchema schema = ModelSchema.fromModelClass(clazz);\n+        for (Field field : FieldFinder.findFieldsIn(clazz)) {\n+            String fieldName = field.getName();\n+            if (schema.getAssociations().containsKey(fieldName)) {\n+                if (List.class.isAssignableFrom(field.getType())) {\n+                    if (depth >= 1) {\n+                        ParameterizedType listType = (ParameterizedType) field.getGenericType();\n+                        Class<Model> listTypeClass = (Class<Model>) listType.getActualTypeArguments()[0];\n+                        Set<Node> fields = wrapPagination(getModelFields(listTypeClass, depth - 1));\n+                        result.add(new Node(fieldName, fields));\n+                    }\n+                } else if (depth >= 1) {\n+                    Set<Node> fields = getModelFields((Class<Model>) field.getType(), depth - 1);\n+                    result.add(new Node(fieldName, fields));\n+                }\n+            } else {\n+                result.add(new Node(fieldName, null));\n+            }\n+            for (AuthRule authRule : schema.getAuthRules()) {\n+                if (AuthStrategy.OWNER.equals(authRule.getAuthStrategy())) {\n+                    result.add(new Node(authRule.getOwnerFieldOrDefault(), null));\n+                    break;\n+                }", "originalCommit": "08b00e98a5b47dbd2599cbc1f4ef8ebc7947d1e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODc2ODIzNA==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r448768234", "bodyText": "this may not be relevant on Android depending on how the graphql variables are generated from the model instance, but on iOS, for scenario 2 and 4, we would generate the graphQL variables based on the model instance. Since the model instance contains the owner field, graphql variables would contain \"owner: null\", and the requests would fail\nModel instance created like let model = Model(id = \"111\", owner = nil) would generate a graphql variables like\n{\n   \"input\": {\n      \"id\": \"111\",\n      \"owner\": null\n   }\n}\n\nSo, we actually filter the owner out", "author": "lawmicha", "createdAt": "2020-07-02T06:07:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODc2NDUwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIyMDM2OA==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r451220368", "bodyText": "For scenario 2 and 4, does that mean this code is adding duplicate owner fields to the selection set?\n\nGood question - no, it doesn't allow duplicates because the data structure is a Set.\nThat said, thank you for that explanation.  I agree we should just allow the developer to decide whether to include the owner field in the selection set, so I've removed the logic I had for adding it.\n\nSo, we actually filter the owner out.\n\nThanks for sharing this.  I didn't have this before, but have added similar logic in this PR to filter out the owner field, if null, for mutations.", "author": "richardmcclellan", "createdAt": "2020-07-08T00:46:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODc2NDUwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODc3MDM4OA==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r448770388", "bodyText": "This is what iOS is currently doing as well, using the username as the identityClaim and we have opened a feature request to support more than just the default identityClaim type when using the auth directive", "author": "lawmicha", "createdAt": "2020-07-02T06:14:16Z", "path": "aws-api/src/main/java/com/amplifyframework/api/aws/AppSyncGraphQLRequest.java", "diffHunk": "@@ -0,0 +1,295 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.api.aws;\n+\n+import android.text.TextUtils;\n+import androidx.annotation.NonNull;\n+import androidx.core.util.ObjectsCompat;\n+\n+import com.amplifyframework.AmplifyException;\n+import com.amplifyframework.api.ApiException;\n+import com.amplifyframework.api.aws.appsync.GsonVariablesSerializer;\n+import com.amplifyframework.api.aws.sigv4.CognitoUserPoolsAuthProvider;\n+import com.amplifyframework.api.graphql.GraphQLRequest;\n+import com.amplifyframework.api.graphql.OperationType;\n+import com.amplifyframework.api.graphql.QueryType;\n+import com.amplifyframework.api.graphql.SubscriptionType;\n+import com.amplifyframework.core.model.AuthRule;\n+import com.amplifyframework.core.model.Model;\n+import com.amplifyframework.core.model.ModelOperation;\n+import com.amplifyframework.core.model.ModelSchema;\n+import com.amplifyframework.util.Casing;\n+import com.amplifyframework.util.Wrap;\n+\n+import java.lang.reflect.Type;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+/**\n+ * A request against an AppSync GraphQL endpoint.\n+ * @param <R> The type of data contained in the GraphQLResponse expected from this request.\n+ */\n+public final class AppSyncGraphQLRequest<R> extends GraphQLRequest<R> {\n+    private static final int DEFAULT_LEVEL_DEPTH = 2;\n+\n+    private final ModelSchema modelSchema;\n+    private final OperationType operationType;\n+    private final SelectionSet.Node selectionSet;\n+    private final Map<String, Object> variables;\n+    private final Map<String, String> variableTypes;\n+\n+    /**\n+     * Constructor for AppSyncGraphQLRequest.\n+     * @throw AmplifyException if a ModelSchema can't be derived from the provided model class\n+     */\n+    private AppSyncGraphQLRequest(Builder builder) throws AmplifyException {\n+        super(builder.responseType, new GsonVariablesSerializer());\n+        this.modelSchema = ModelSchema.fromModelClass(builder.modelClass);\n+        SelectionSet.Node set = SelectionSet.fromModelClass(builder.modelClass, DEFAULT_LEVEL_DEPTH);\n+        if (QueryType.LIST.equals(builder.operationType)) {\n+            set = SelectionSet.wrapPagination(set);\n+        }\n+        this.selectionSet = set;\n+        this.operationType = builder.operationType;\n+        this.variables = builder.variables;\n+        this.variableTypes = builder.variableTypes;\n+    }\n+\n+    /**\n+     * Copy constructor for an AppSyncGraphQLRequest.\n+     * @param request request to copy.\n+     * @param <R> response type.\n+     */\n+    public <R> AppSyncGraphQLRequest(AppSyncGraphQLRequest<R> request) {\n+        super(request);\n+        this.modelSchema = request.modelSchema;\n+        this.operationType = request.operationType;\n+        this.selectionSet = new SelectionSet.Node(request.selectionSet);\n+        this.variables = new HashMap<>(request.variables);\n+        this.variableTypes = new HashMap<>(request.variableTypes);\n+    }\n+\n+    @Override\n+    public <R> AppSyncGraphQLRequest<R> copy() {\n+        return new AppSyncGraphQLRequest<R>(this);\n+    }\n+\n+    @Override\n+    public Map<String, Object> getVariables() {\n+        return this.variables;\n+    }\n+\n+    /**\n+     * Used for setting a variable on the request.\n+     * @param key variable name\n+     * @param type type of variable value\n+     * @param value variable value\n+     */\n+    public void setVariable(String key, String type, String value) {\n+        this.variables.put(key, value);\n+        this.variableTypes.put(key, type);\n+    }\n+\n+    /**\n+     * Used to add owner argument from authProvider if needed.\n+     * @param authProvider CognitoUserPoolsAuthProvider for obtaining the username to set as the owner field.\n+     * @throws ApiException if request requires owner argument and authProvider or authProvider.getUsername() is null.\n+     */\n+    public void setAuthProvider(CognitoUserPoolsAuthProvider authProvider) throws ApiException {\n+        for (AuthRule authRule : modelSchema.getAuthRules()) {\n+            if (isOwnerArgumentRequired(authRule.getOperationsOrDefault())) {\n+                setVariable(authRule.getOwnerFieldOrDefault(), \"String!\", getUsername(authProvider));\n+            }\n+        }\n+    }\n+\n+    private String getUsername(CognitoUserPoolsAuthProvider authProvider) throws ApiException {", "originalCommit": "08b00e98a5b47dbd2599cbc1f4ef8ebc7947d1e9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "bab4cdd592eb95795f0cd6dff22d5324f30db36a", "url": "https://github.com/aws-amplify/amplify-android/commit/bab4cdd592eb95795f0cd6dff22d5324f30db36a", "message": "Merge branch 'main' into rm/ownerauth", "committedDate": "2020-07-07T01:27:09Z", "type": "commit"}, {"oid": "59018cdb7f0e9d7e253b6206dc8f0cba002fe141", "url": "https://github.com/aws-amplify/amplify-android/commit/59018cdb7f0e9d7e253b6206dc8f0cba002fe141", "message": "Rename setAuthProvider to setOwner", "committedDate": "2020-07-07T07:07:16Z", "type": "commit"}, {"oid": "961866975bac76962ce64276093c0bd5406eced3", "url": "https://github.com/aws-amplify/amplify-android/commit/961866975bac76962ce64276093c0bd5406eced3", "message": "Early return if failure instead of starting a GraphQLOperation", "committedDate": "2020-07-07T07:16:35Z", "type": "commit"}, {"oid": "a25e3c6230436b98b62866620061493fafa49c27", "url": "https://github.com/aws-amplify/amplify-android/commit/a25e3c6230436b98b62866620061493fafa49c27", "message": "Pass OperationType into SelectionSet so it can figure out when to wrap with pagination details internally", "committedDate": "2020-07-07T07:25:18Z", "type": "commit"}, {"oid": "7e48a5f9c83e2402ff8c55b5b4a44968cd3b70c5", "url": "https://github.com/aws-amplify/amplify-android/commit/7e48a5f9c83e2402ff8c55b5b4a44968cd3b70c5", "message": "Refactor SelectionSet.Node copy constructor to call other constructor", "committedDate": "2020-07-07T07:30:16Z", "type": "commit"}, {"oid": "29764599cd2da945a1a0fd13980acd347f8ec09d", "url": "https://github.com/aws-amplify/amplify-android/commit/29764599cd2da945a1a0fd13980acd347f8ec09d", "message": "Make variables final on AppSyncGraphQLRequest.Builder", "committedDate": "2020-07-07T07:33:15Z", "type": "commit"}, {"oid": "73c064cc0de31e807091af8084b1015c38825571", "url": "https://github.com/aws-amplify/amplify-android/commit/73c064cc0de31e807091af8084b1015c38825571", "message": "Fix AppSyncGraphQLRequest toString implementation", "committedDate": "2020-07-07T07:35:21Z", "type": "commit"}, {"oid": "16eabc24bb64e59d2ca01c0c4410ddfd1b7cbf53", "url": "https://github.com/aws-amplify/amplify-android/commit/16eabc24bb64e59d2ca01c0c4410ddfd1b7cbf53", "message": "Use static import to make casing conversion less verbose", "committedDate": "2020-07-07T07:44:06Z", "type": "commit"}, {"oid": "c6929030ed2b5892a3fb94f0de33d3c68303cfe6", "url": "https://github.com/aws-amplify/amplify-android/commit/c6929030ed2b5892a3fb94f0de33d3c68303cfe6", "message": "Fix SelectionSetTest failures", "committedDate": "2020-07-07T07:50:20Z", "type": "commit"}, {"oid": "235af37bb7fcb3585a3d1db16e9eb17b337df717", "url": "https://github.com/aws-amplify/amplify-android/commit/235af37bb7fcb3585a3d1db16e9eb17b337df717", "message": "checkstyle", "committedDate": "2020-07-07T08:01:04Z", "type": "commit"}, {"oid": "f3e879beb0b61359cbda571990acc9ade94aa1b9", "url": "https://github.com/aws-amplify/amplify-android/commit/f3e879beb0b61359cbda571990acc9ade94aa1b9", "message": "Revert \"Use static import to make casing conversion less verbose\"\n\nThis reverts commit 16eabc24bb64e59d2ca01c0c4410ddfd1b7cbf53.", "committedDate": "2020-07-07T08:01:13Z", "type": "commit"}, {"oid": "71a2e1b15bf9a6e6e2883ee68af9203487e0c7a6", "url": "https://github.com/aws-amplify/amplify-android/commit/71a2e1b15bf9a6e6e2883ee68af9203487e0c7a6", "message": "checkstyle", "committedDate": "2020-07-07T08:26:07Z", "type": "commit"}, {"oid": "c80f4624b4e5ada6f508bb1dab6406001fece689", "url": "https://github.com/aws-amplify/amplify-android/commit/c80f4624b4e5ada6f508bb1dab6406001fece689", "message": "Move factory methods to inner class of SelectionSet", "committedDate": "2020-07-07T17:52:31Z", "type": "commit"}, {"oid": "787dc8bed952dbe0487a07a65f393257e45528e2", "url": "https://github.com/aws-amplify/amplify-android/commit/787dc8bed952dbe0487a07a65f393257e45528e2", "message": "checkstyle", "committedDate": "2020-07-07T19:06:33Z", "type": "commit"}, {"oid": "884dd9c13dc0bb2e66858b5d492ac1e6ca4a9a25", "url": "https://github.com/aws-amplify/amplify-android/commit/884dd9c13dc0bb2e66858b5d492ac1e6ca4a9a25", "message": "Empty.check instead of isEmpty", "committedDate": "2020-07-07T21:04:54Z", "type": "commit"}, {"oid": "9d7cd964ad4fac23a45c2c1a618986469576c918", "url": "https://github.com/aws-amplify/amplify-android/commit/9d7cd964ad4fac23a45c2c1a618986469576c918", "message": "Added Empty.check String helper method", "committedDate": "2020-07-07T22:32:15Z", "type": "commit"}, {"oid": "2d72f886cde8a4afc109dbe13e46d26ea3f28662", "url": "https://github.com/aws-amplify/amplify-android/commit/2d72f886cde8a4afc109dbe13e46d26ea3f28662", "message": "Add check so that owner is only added for AuthStrategy.OWNER", "committedDate": "2020-07-07T22:33:18Z", "type": "commit"}, {"oid": "10ba2fd502d498bf9d25c9f5e59edbdf382ef4b0", "url": "https://github.com/aws-amplify/amplify-android/commit/10ba2fd502d498bf9d25c9f5e59edbdf382ef4b0", "message": "Add unit tests for adding owner field", "committedDate": "2020-07-07T22:33:42Z", "type": "commit"}, {"oid": "59b1f34358c56f36358e89fdfa2bd97e0cb57a64", "url": "https://github.com/aws-amplify/amplify-android/commit/59b1f34358c56f36358e89fdfa2bd97e0cb57a64", "message": "Remove addition of owner field to selection set per mdlaws feedback", "committedDate": "2020-07-07T22:34:59Z", "type": "commit"}, {"oid": "66d5d65ba21d7b2046180673f1fb1ed0458124a6", "url": "https://github.com/aws-amplify/amplify-android/commit/66d5d65ba21d7b2046180673f1fb1ed0458124a6", "message": "Add logic to filter out owner field if null for mutations", "committedDate": "2020-07-08T00:00:05Z", "type": "commit"}, {"oid": "64f2b284f89ea3509dc3ca35ef759abbb2873e37", "url": "https://github.com/aws-amplify/amplify-android/commit/64f2b284f89ea3509dc3ca35ef759abbb2873e37", "message": "Fix AWSApiPluginTests", "committedDate": "2020-07-08T00:30:03Z", "type": "commit"}, {"oid": "65a4652743e0919b3f177624a29bb08947a73294", "url": "https://github.com/aws-amplify/amplify-android/commit/65a4652743e0919b3f177624a29bb08947a73294", "message": "Fix checkstyle", "committedDate": "2020-07-08T00:34:06Z", "type": "commit"}, {"oid": "6c28a1d6cb9b189e47f59b562673f0b9f42405aa", "url": "https://github.com/aws-amplify/amplify-android/commit/6c28a1d6cb9b189e47f59b562673f0b9f42405aa", "message": "checkstyle", "committedDate": "2020-07-08T00:57:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIyNDMzNw==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r451224337", "bodyText": "The \"not mocked\" error can be fixed by using @RunWith(RobolectricTestRunner.class).\nThe Robolectric test runner includes a version of the Android APIs that can run on the host JVM -- not the phone's ART/JVM.\nThe downside is that Robolectric tests are slower.\nTo make this comment accurate, we should really go through hand update all references to TextUtils.isEmpty, and try to strip off the test-runners, to see if the tests will run after the change.\nOverall it seems reasonable -- avoiding TextUtils basically means faster unit tests (if the source code doesn't use any other Android-y stuff, and so Robolectric annotations could be removed from the class.)", "author": "jamesonwilliams", "createdAt": "2020-07-08T01:02:10Z", "path": "core/src/main/java/com/amplifyframework/util/Empty.java", "diffHunk": "@@ -49,9 +48,9 @@ public static boolean check(@Nullable Map<?, ?> map) {\n      * Returns true if str is null or empty.\n      *\n      * TextUtils.isEmpty() provides the same behavior, but throws an exception when called from a unit test, since the\n-     *  Android library is not available in unit tests.  Empty.check() is preferred to allow for unit testing.\n-     *\n-     * @see <a href=\"http://tools.android.com/tech-docs/unit-testing-support#TOC-Method-...-not-mocked.\">documentation</a> for more details.\n+     *  Android library is not available in unit tests.  Empty.check() is preferred to allow for unit testing.  See\n+     *  <a href=\"http://tools.android.com/tech-docs/unit-testing-support#TOC-Method-...-not-mocked.\">Android\n+     *  tools documentation</a> for details.", "originalCommit": "6c28a1d6cb9b189e47f59b562673f0b9f42405aa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTY4OTg3MQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r451689871", "bodyText": "Thanks for that explanation!   There were 3 other usages of TextUtils.isEmpty in the codebase, and I've updated them to use Empty.check.  As far as I can tell, those usages aren't covered by unit tests (unfortunately), so there aren't any related Robolectric annotations to be removed.", "author": "richardmcclellan", "createdAt": "2020-07-08T16:54:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIyNDMzNw=="}], "type": "inlineReview"}, {"oid": "54581b2527f1c7b08e282a0304bf470eefd3e0cf", "url": "https://github.com/aws-amplify/amplify-android/commit/54581b2527f1c7b08e282a0304bf470eefd3e0cf", "message": "Use Empty.check utility", "committedDate": "2020-07-08T06:04:30Z", "type": "commit"}, {"oid": "c4ef088b58bf9cc89c8342c3716c2496b60d831c", "url": "https://github.com/aws-amplify/amplify-android/commit/c4ef088b58bf9cc89c8342c3716c2496b60d831c", "message": "dashes in test resource file names for readability", "committedDate": "2020-07-08T14:48:28Z", "type": "commit"}, {"oid": "f12b652d29f0e35368f637658bb827bdbe5a5cdc", "url": "https://github.com/aws-amplify/amplify-android/commit/f12b652d29f0e35368f637658bb827bdbe5a5cdc", "message": "Use Wrap.inDoubleQuotes", "committedDate": "2020-07-08T15:15:13Z", "type": "commit"}, {"oid": "a54299117ce9a884cd560a540dcf7c14464d59af", "url": "https://github.com/aws-amplify/amplify-android/commit/a54299117ce9a884cd560a540dcf7c14464d59af", "message": "dont use trim in SelectionSetTest", "committedDate": "2020-07-08T16:39:41Z", "type": "commit"}, {"oid": "aba24dcfa7b5c02bda89bc622271c7eee7896b0e", "url": "https://github.com/aws-amplify/amplify-android/commit/aba24dcfa7b5c02bda89bc622271c7eee7896b0e", "message": "Use NoOpConsumer.create()", "committedDate": "2020-07-08T16:47:25Z", "type": "commit"}, {"oid": "5f33c7cf47ff1c6fb59e0eec4bc626c7283f19b9", "url": "https://github.com/aws-amplify/amplify-android/commit/5f33c7cf47ff1c6fb59e0eec4bc626c7283f19b9", "message": "Use Empty.check everywhere", "committedDate": "2020-07-08T16:50:00Z", "type": "commit"}, {"oid": "737ca35d7722c8272d268dd94a2c6f03d5a78ebb", "url": "https://github.com/aws-amplify/amplify-android/commit/737ca35d7722c8272d268dd94a2c6f03d5a78ebb", "message": "Create Operation enum representing GraphQL operations", "committedDate": "2020-07-08T19:44:46Z", "type": "commit"}, {"oid": "5854555b5199366fddd274c6f77ce5262bb4de1d", "url": "https://github.com/aws-amplify/amplify-android/commit/5854555b5199366fddd274c6f77ce5262bb4de1d", "message": "Merge branch 'main' into rm/ownerauth", "committedDate": "2020-07-08T23:38:48Z", "type": "commit"}, {"oid": "dc8f0f46783cf83e45956f115aac0bb8696504e2", "url": "https://github.com/aws-amplify/amplify-android/commit/dc8f0f46783cf83e45956f115aac0bb8696504e2", "message": "Capitalize first letter of modelName", "committedDate": "2020-07-11T03:23:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE1ODE3Ng==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r453158176", "bodyText": "We should remove all setters added in this PR. The style of the existing code base is to have:\nImmutableObject newCopy = oldCopy.builder().withSomeChange(newItemValue).build();", "author": "jamesonwilliams", "createdAt": "2020-07-11T05:25:57Z", "path": "aws-api/src/main/java/com/amplifyframework/api/aws/AWSApiPlugin.java", "diffHunk": "@@ -255,7 +257,21 @@ public void configure(\n             return null;\n         }\n \n-        SubscriptionOperation<T> operation = SubscriptionOperation.<T>builder()\n+        if (graphQLRequest instanceof AppSyncGraphQLRequest) {\n+            try {\n+                AppSyncGraphQLRequest<R> request = (AppSyncGraphQLRequest<R>) graphQLRequest;\n+                CognitoUserPoolsAuthProvider cognitoProvider = authProvider.getCognitoUserPoolsAuthProvider();\n+                if (cognitoProvider == null) {\n+                    cognitoProvider = new DefaultCognitoUserPoolsAuthProvider();\n+                }\n+                request.setOwner(cognitoProvider);", "originalCommit": "dc8f0f46783cf83e45956f115aac0bb8696504e2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk1NDEwNw==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r453954107", "bodyText": "I'm going to try and address this in #635.", "author": "richardmcclellan", "createdAt": "2020-07-13T21:48:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE1ODE3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE1ODIyMg==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r453158222", "bodyText": "Can you return a NoOpOperation or something? Or are the other ones already returning null, I forget?", "author": "jamesonwilliams", "createdAt": "2020-07-11T05:26:31Z", "path": "aws-api/src/main/java/com/amplifyframework/api/aws/AWSApiPlugin.java", "diffHunk": "@@ -255,7 +257,21 @@ public void configure(\n             return null;\n         }\n \n-        SubscriptionOperation<T> operation = SubscriptionOperation.<T>builder()\n+        if (graphQLRequest instanceof AppSyncGraphQLRequest) {\n+            try {\n+                AppSyncGraphQLRequest<R> request = (AppSyncGraphQLRequest<R>) graphQLRequest;\n+                CognitoUserPoolsAuthProvider cognitoProvider = authProvider.getCognitoUserPoolsAuthProvider();\n+                if (cognitoProvider == null) {\n+                    cognitoProvider = new DefaultCognitoUserPoolsAuthProvider();\n+                }\n+                request.setOwner(cognitoProvider);\n+            } catch (ApiException exception) {\n+                onSubscriptionFailure.accept(exception);\n+                return null;", "originalCommit": "dc8f0f46783cf83e45956f115aac0bb8696504e2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkzMzI2MQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r453933261", "bodyText": "All the others return null, so I'm leave this as is for now, but that could be done as a separate change.", "author": "richardmcclellan", "createdAt": "2020-07-13T21:07:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE1ODIyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE1ODMzNA==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r453158334", "bodyText": "setVariable -- a variable of a set? Or (the verb, 2p imperative) \"do set\" a thing called a variable? should this just be .variable, to match the style of the others?", "author": "jamesonwilliams", "createdAt": "2020-07-11T05:28:17Z", "path": "aws-api/src/main/java/com/amplifyframework/api/aws/AppSyncGraphQLRequest.java", "diffHunk": "@@ -0,0 +1,299 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.api.aws;\n+\n+import android.text.TextUtils;\n+import androidx.annotation.NonNull;\n+import androidx.core.util.ObjectsCompat;\n+\n+import com.amplifyframework.AmplifyException;\n+import com.amplifyframework.api.ApiException;\n+import com.amplifyframework.api.aws.appsync.GsonVariablesSerializer;\n+import com.amplifyframework.api.aws.sigv4.CognitoUserPoolsAuthProvider;\n+import com.amplifyframework.api.graphql.GraphQLRequest;\n+import com.amplifyframework.api.graphql.OperationType;\n+import com.amplifyframework.api.graphql.QueryType;\n+import com.amplifyframework.api.graphql.SubscriptionType;\n+import com.amplifyframework.core.model.AuthRule;\n+import com.amplifyframework.core.model.AuthStrategy;\n+import com.amplifyframework.core.model.Model;\n+import com.amplifyframework.core.model.ModelOperation;\n+import com.amplifyframework.core.model.ModelSchema;\n+import com.amplifyframework.util.Casing;\n+import com.amplifyframework.util.Wrap;\n+\n+import java.lang.reflect.Type;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+/**\n+ * A request against an AppSync GraphQL endpoint.\n+ * @param <R> The type of data contained in the GraphQLResponse expected from this request.\n+ */\n+public final class AppSyncGraphQLRequest<R> extends GraphQLRequest<R> {\n+    private static final int DEFAULT_DEPTH = 2;\n+\n+    private final ModelSchema modelSchema;\n+    private final OperationType operationType;\n+    private final SelectionSet selectionSet;\n+    private final Map<String, Object> variables;\n+    private final Map<String, String> variableTypes;\n+\n+    /**\n+     * Constructor for AppSyncGraphQLRequest.\n+     * @throw AmplifyException if a ModelSchema can't be derived from the provided model class\n+     */\n+    private AppSyncGraphQLRequest(Builder builder) throws AmplifyException {\n+        super(builder.responseType, new GsonVariablesSerializer());\n+        this.modelSchema = ModelSchema.fromModelClass(builder.modelClass);\n+        this.selectionSet = SelectionSet.Factory.fromModelClass(builder.modelClass,\n+                builder.operationType,\n+                DEFAULT_DEPTH);\n+        this.operationType = builder.operationType;\n+        this.variables = builder.variables;\n+        this.variableTypes = builder.variableTypes;\n+    }\n+\n+    /**\n+     * Copy constructor for an AppSyncGraphQLRequest.\n+     * @param request request to copy.\n+     * @param <R> response type.\n+     */\n+    public <R> AppSyncGraphQLRequest(AppSyncGraphQLRequest<R> request) {\n+        super(request);\n+        this.modelSchema = request.modelSchema;\n+        this.operationType = request.operationType;\n+        this.selectionSet = new SelectionSet(request.selectionSet);\n+        this.variables = new HashMap<>(request.variables);\n+        this.variableTypes = new HashMap<>(request.variableTypes);\n+    }\n+\n+    @Override\n+    public <R> AppSyncGraphQLRequest<R> copy() {\n+        return new AppSyncGraphQLRequest<R>(this);\n+    }\n+\n+    @Override\n+    public Map<String, Object> getVariables() {\n+        return this.variables;\n+    }\n+\n+    /**\n+     * Used for setting a variable on the request.\n+     * @param key variable name\n+     * @param type type of variable value\n+     * @param value variable value\n+     */\n+    public void setVariable(String key, String type, String value) {\n+        this.variables.put(key, value);\n+        this.variableTypes.put(key, type);\n+    }\n+\n+    /**\n+     * Used to add owner argument from authProvider if needed.\n+     * @param authProvider CognitoUserPoolsAuthProvider for obtaining the username to set as the owner field.\n+     * @throws ApiException if request requires owner argument and authProvider or authProvider.getUsername() is null.\n+     */\n+    public void setOwner(CognitoUserPoolsAuthProvider authProvider) throws ApiException {\n+        for (AuthRule authRule : modelSchema.getAuthRules()) {\n+            if (isOwnerArgumentRequired(authRule)) {\n+                setVariable(authRule.getOwnerFieldOrDefault(), \"String!\", getUsername(authProvider));\n+            }\n+        }\n+    }\n+\n+    private String getUsername(CognitoUserPoolsAuthProvider authProvider) throws ApiException {\n+        if (authProvider == null) {\n+            throw new ApiException(\n+                    \"Attempted to subscribe to a model with owner based authorization without a Cognito provider\",\n+                    \"Did you add the AWSCognitoAuthPlugin to Amplify before configuring it?\"\n+            );\n+        }\n+        String username = authProvider.getUsername();\n+        if (username == null) {\n+            throw new ApiException(\n+                    \"Attempted to subscribe to a model with owner based authorization without a username\",\n+                    \"Make sure that a user is logged in before subscribing to a model with owner based auth\"\n+            );\n+        }\n+        return username;\n+    }\n+\n+    private boolean isOwnerArgumentRequired(AuthRule authRule) {\n+        if (!AuthStrategy.OWNER.equals(authRule.getAuthStrategy())) {\n+            return false;\n+        }\n+        List<ModelOperation> operations = authRule.getOperationsOrDefault();\n+        if (SubscriptionType.ON_CREATE.equals(operationType) && operations.contains(ModelOperation.CREATE)) {\n+            return true;\n+        }\n+        if (SubscriptionType.ON_UPDATE.equals(operationType) && operations.contains(ModelOperation.UPDATE)) {\n+            return true;\n+        }\n+        if (SubscriptionType.ON_DELETE.equals(operationType) && operations.contains(ModelOperation.DELETE)) {\n+            return true;\n+        }\n+        return false;\n+    }\n+\n+    /**\n+     *  Returns String value used for GraphQL \"query\" in HTTP request body.\n+     *\n+     *  Sample return value:\n+     *      subscription OnCreatePerson(owner: String!, nextToken: String) {\n+     *            onCreatePerson(owner: $owner, nextToken: $nextToken) {\n+     *               age dob first_name id last_name relationship owner\n+     *            }\n+     *       }\n+     *\n+     * @return String value used for GraphQL \"query\" in HTTP request body\n+     */\n+    @Override\n+    public String getQuery() {\n+        String inputTypeString = \"\";\n+        String inputParameterString = \"\";\n+        if (variableTypes.size() > 0) {\n+            List<String> inputKeys = new ArrayList<>(variableTypes.keySet());\n+            Collections.sort(inputKeys);\n+\n+            List<String> inputTypes = new ArrayList<>();\n+            List<String> inputParameters = new ArrayList<>();\n+            for (String key : inputKeys) {\n+                inputTypes.add(\"$\" + key + \": \" + variableTypes.get(key));\n+                inputParameters.add(key + \": $\" + key);\n+            }\n+\n+            inputTypeString = Wrap.inParentheses(TextUtils.join(\", \", inputTypes));\n+            inputParameterString = Wrap.inParentheses(TextUtils.join(\", \", inputParameters));\n+        }\n+\n+        String modelName = Casing.capitalizeFirst(modelSchema.getName());\n+        String operationString = new StringBuilder()\n+                .append(Casing.from(Casing.CaseType.SCREAMING_SNAKE_CASE).to(Casing.CaseType.CAMEL_CASE)\n+                        .convert(operationType.toString()))\n+                .append(modelName)\n+                .append(QueryType.LIST.equals(operationType) ? \"s\" : \"\")\n+                .append(inputParameterString)\n+                .append(selectionSet.toString())\n+                .toString();\n+\n+        String queryString = new StringBuilder()\n+                .append(operationType.getOperation().getName())\n+                .append(\" \")\n+                .append(Casing.from(Casing.CaseType.SCREAMING_SNAKE_CASE).to(Casing.CaseType.PASCAL_CASE)\n+                        .convert(operationType.toString()))\n+                .append(modelName)\n+                .append(inputTypeString)\n+                .append(\" \")\n+                .append(Wrap.inBraces(operationString))\n+                .toString();\n+\n+        return queryString;\n+    }\n+\n+    @Override\n+    public boolean equals(Object object) {\n+        if (this == object) {\n+            return true;\n+        }\n+\n+        if (object == null || getClass() != object.getClass()) {\n+            return false;\n+        }\n+        if (!super.equals(object)) {\n+            return false;\n+        }\n+        AppSyncGraphQLRequest<?> that = (AppSyncGraphQLRequest<?>) object;\n+        return ObjectsCompat.equals(modelSchema, that.modelSchema) &&\n+                ObjectsCompat.equals(operationType, that.operationType) &&\n+                ObjectsCompat.equals(selectionSet, that.selectionSet) &&\n+                ObjectsCompat.equals(variables, that.variables) &&\n+                ObjectsCompat.equals(variableTypes, that.variableTypes);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return ObjectsCompat.hash(super.hashCode(), modelSchema, operationType, selectionSet, variables, variableTypes);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"AppSyncGraphQLRequest{\" +\n+                \"modelSchema=\" + modelSchema +\n+                \", operationType=\" + operationType +\n+                \", selectionSet=\" + selectionSet +\n+                \", variables=\" + variables +\n+                \", variableTypes=\" + variableTypes +\n+                \", responseType=\" + getResponseType() +\n+                \", variablesSerializer=\" + getVariablesSerializer() +\n+                '}';\n+    }\n+\n+    /**\n+     * Create a new AppSyncGraphQLRequest builder.\n+     * @return a new AppSyncGraphQLRequest builder.\n+     */\n+    public static AppSyncGraphQLRequest.Builder builder() {\n+        return new Builder();\n+    }\n+\n+    static final class Builder {\n+        private Class<? extends Model> modelClass;\n+        private OperationType operationType;\n+        private Type responseType;\n+        private final Map<String, Object> variables;\n+        private final Map<String, String> variableTypes;\n+\n+        Builder() {\n+            this.variables = new HashMap<>();\n+            this.variableTypes = new HashMap<>();\n+        }\n+\n+        Builder modelClass(@NonNull Class<? extends Model> modelClass) {\n+            this.modelClass = Objects.requireNonNull(modelClass);\n+            return Builder.this;\n+        }\n+\n+        Builder operationType(@NonNull OperationType operationType) {\n+            this.operationType = Objects.requireNonNull(operationType);\n+            return Builder.this;\n+        }\n+\n+        Builder responseType(@NonNull Type responseType) {\n+            this.responseType = Objects.requireNonNull(responseType);\n+            return Builder.this;\n+        }\n+\n+        Builder setVariable(@NonNull String key, String type, Object value) {", "originalCommit": "dc8f0f46783cf83e45956f115aac0bb8696504e2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk0MzUwMg==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r453943502", "bodyText": "Or (the verb, 2p imperative) \"do set\" a thing called a variable?\n\nThis one.  I agree, .variable makes sense, will change.", "author": "richardmcclellan", "createdAt": "2020-07-13T21:27:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE1ODMzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg2MjQ2OA==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r453862468", "bodyText": "Are these named in reverse? Should an Operation have a getOperationType(), which returns an OperationType.SUBSCRIPTION, etc.?", "author": "jamesonwilliams", "createdAt": "2020-07-13T18:55:00Z", "path": "core/src/main/java/com/amplifyframework/api/graphql/Operation.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.api.graphql;\n+\n+/**\n+ * Represents a GraphQL operation.\n+ */\n+public enum Operation {", "originalCommit": "dc8f0f46783cf83e45956f115aac0bb8696504e2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk0NjQ2MA==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r453946460", "bodyText": "I went back and forth on this as well, and can't remember why I landed where I did.  Thinking about it again now though, I think flipping them makes sense.  Will change.", "author": "richardmcclellan", "createdAt": "2020-07-13T21:33:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg2MjQ2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg2MjgwNw==", "url": "https://github.com/aws-amplify/amplify-android/pull/596#discussion_r453862807", "bodyText": "Collections.emptyMap()", "author": "jamesonwilliams", "createdAt": "2020-07-13T18:55:33Z", "path": "core/src/main/java/com/amplifyframework/api/graphql/SimpleGraphQLRequest.java", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.api.graphql;\n+\n+import androidx.core.util.ObjectsCompat;\n+\n+import java.lang.reflect.Type;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ * A basic implementation of GraphQLRequest, which takes a document String, and variables Map.\n+ * @param <R> Type of R, the data contained in the GraphQLResponse expected from this request\n+ */\n+public final class SimpleGraphQLRequest<R> extends GraphQLRequest<R> {\n+    private final String document;\n+    private final Map<String, Object> variables;\n+\n+    /**\n+     * Constructor for SimpleGraphQLRequest.\n+     * @param document document String for request\n+     * @param responseType Type of R, the data contained in the GraphQLResponse expected from this request\n+     * @param variablesSerializer an object which can take a map of variables and serialize it properly\n+     */\n+    public SimpleGraphQLRequest(\n+            String document,\n+            Type responseType,\n+            VariablesSerializer variablesSerializer\n+    ) {\n+        this(document, new HashMap<>(), responseType, variablesSerializer);", "originalCommit": "dc8f0f46783cf83e45956f115aac0bb8696504e2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "aac72dcd1dbee59ae12d558d6f95e269a52d42e4", "url": "https://github.com/aws-amplify/amplify-android/commit/aac72dcd1dbee59ae12d558d6f95e269a52d42e4", "message": "emptyMap instead of new HashMap", "committedDate": "2020-07-13T21:08:57Z", "type": "commit"}]}