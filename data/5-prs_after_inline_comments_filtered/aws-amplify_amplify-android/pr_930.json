{"pr_number": 930, "pr_title": "feature(aws-api): support custom group claim", "pr_createdAt": "2020-10-26T17:12:48Z", "pr_url": "https://github.com/aws-amplify/amplify-android/pull/930", "timeline": [{"oid": "15ed69e83c054970687fb01e78c95d9b5193818b", "url": "https://github.com/aws-amplify/amplify-android/commit/15ed69e83c054970687fb01e78c95d9b5193818b", "message": "support custom group claim", "committedDate": "2020-10-26T16:48:07Z", "type": "commit"}, {"oid": "902bb379f6a2fd2e60c5796cabb19849dfab3f69", "url": "https://github.com/aws-amplify/amplify-android/commit/902bb379f6a2fd2e60c5796cabb19849dfab3f69", "message": "update error message for groups getter", "committedDate": "2020-10-26T17:12:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE1MjA5NQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/930#discussion_r512152095", "bodyText": "The data type here is starting to look like a poor-man's data structure. Does it make sense to create a class ReadAuthorizedGroups, to encapsulate the data?", "author": "jamesonwilliams", "createdAt": "2020-10-26T17:44:12Z", "path": "aws-api/src/main/java/com/amplifyframework/api/aws/AWSApiPlugin.java", "diffHunk": "@@ -291,7 +292,7 @@ public String getVersion() {\n             try {\n                 AppSyncGraphQLRequest<R> appSyncRequest = (AppSyncGraphQLRequest<R>) request;\n                 AuthRule ownerRuleWithReadRestriction = null;\n-                ArrayList<String> readAuthorizedGroups = new ArrayList<>();\n+                Map<String, List<String>> readAuthorizedGroupsMap = new HashMap<>();", "originalCommit": "902bb379f6a2fd2e60c5796cabb19849dfab3f69", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE1NzQ4NA==", "url": "https://github.com/aws-amplify/amplify-android/pull/930#discussion_r512157484", "bodyText": "poor-man's data structure.\n\n\ud83e\udd23  yep that's exactly right. I can do that, but I think that \"map of lists\" is a common enough data structure that it is passable as is. I think the gains from creating an entirely new class for this will be very little in terms of readability and intuitiveness. what do you think?", "author": "raphkim", "createdAt": "2020-10-26T17:52:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE1MjA5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE3MTA5Mg==", "url": "https://github.com/aws-amplify/amplify-android/pull/930#discussion_r512171092", "bodyText": "Yea, it's not a big deal either way. Up to you. The benefit of doing the class is that you'll get to give a semantic label to the key and to the values. Looking at this readAuthorizedGroupsMap right now, I'm not certain what the key is, until I scroll down and look at the impl.", "author": "jamesonwilliams", "createdAt": "2020-10-26T18:14:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE1MjA5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI1Mjg0Ng==", "url": "https://github.com/aws-amplify/amplify-android/pull/930#discussion_r512252846", "bodyText": "Yeah I feel the benefit to seeing right away the structure of the data from the map outweighs the benefit of creating a custom class for naming purposes.", "author": "TrekSoft", "createdAt": "2020-10-26T20:37:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE1MjA5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE1MjYwMA==", "url": "https://github.com/aws-amplify/amplify-android/pull/930#discussion_r512152600", "bodyText": "How can we carve more of this logic out of the AWSApiPlugin?", "author": "jamesonwilliams", "createdAt": "2020-10-26T17:44:57Z", "path": "aws-api/src/main/java/com/amplifyframework/api/aws/AWSApiPlugin.java", "diffHunk": "@@ -361,65 +363,61 @@ private boolean isReadRestrictingOwner(AuthRule authRule) {\n \n     private boolean isReadRestrictingStaticGroup(AuthRule authRule) {\n         return AuthStrategy.GROUPS.equals(authRule.getAuthStrategy())\n-            && authRule.getGroups() != null && !authRule.getGroups().isEmpty()\n+            && !authRule.getGroups().isEmpty()\n             && authRule.getOperationsOrDefault().contains(ModelOperation.READ);\n     }\n \n     private String getIdentityValue(String identityClaim, AuthorizationType authType) throws ApiException {\n-        String identityValue = null;\n-\n         try {\n-            identityValue = CognitoJWTParser\n+            return CognitoJWTParser\n                     .getPayload(getAuthToken(authType))\n                     .getString(identityClaim);\n         } catch (JSONException | CognitoParameterInvalidException error) {\n-            // Could not read identity value from the token...\n-            // Exception will be thrown so do nothing for now\n-        }\n-\n-        if (identityValue == null || identityValue.isEmpty()) {\n             throw new ApiException(\n-                    \"Attempted to subscribe to a model with owner based authorization without \" + identityClaim + \" \" +\n-                    \"which was specified (or defaulted to) as the identity claim.\",\n+                    \"Attempted to subscribe to a model with owner-based authorization without \" + identityClaim + \" \" +\n+                            \"which was specified (or defaulted to) as the identity claim.\",\n                     \"If you did not specify a custom identityClaim in your schema, make sure you are logged in. If \" +\n                             \"you did, check that the value you specified in your schema is present in the access key.\"\n             );\n         }\n-\n-        return identityValue;\n     }\n \n-    private ArrayList<String> getUserGroups(AuthorizationType authType) throws ApiException {\n-        // Custom groups claim isn't supported yet.\n-        if (!AuthorizationType.AMAZON_COGNITO_USER_POOLS.equals(authType)) {\n-            throw new ApiException(\"Custom groups claim is not supported yet.\",\n-                    \"Please use Amazon Cognito User Pools to authorize your API.\");\n-        }\n-\n+    private ArrayList<String> getUserGroups(String groupClaim, AuthorizationType authType) throws ApiException {\n         ArrayList<String> groups = new ArrayList<>();\n-        final String GROUPS_KEY = \"cognito:groups\";\n-\n         try {\n-            JSONObject accessToken = CognitoJWTParser.getPayload(getAuthToken(authType));\n-\n-            if (accessToken.has(GROUPS_KEY)) {\n-                JSONArray jsonGroups = accessToken.getJSONArray(GROUPS_KEY);\n-\n-                for (int i = 0; i < jsonGroups.length(); i++) {\n-                    groups.add(jsonGroups.getString(i));\n+            JSONObject accessToken = CognitoJWTParser\n+                    .getPayload(getAuthToken(authType));\n+            if (accessToken.has(groupClaim)) {\n+                JSONArray jsonGroups = accessToken.getJSONArray(groupClaim);\n+                for (int index = 0; index < jsonGroups.length(); index++) {\n+                    groups.add(jsonGroups.getString(index));\n                 }\n             }\n         } catch (JSONException | CognitoParameterInvalidException error) {\n             throw new ApiException(\n-                    \"Failed to parse groups from auth rule.\",\n-                    error,\n-                    \"This should never happen - see attached exception for more details and report to us on GitHub.\"\n+                    \"Failed to parse group claim from the token.\",\n+                    AmplifyException.REPORT_BUG_TO_AWS_SUGGESTION\n             );\n         }\n \n         return groups;\n     }\n \n+    private boolean userNotInReadRestrictingGroups(", "originalCommit": "902bb379f6a2fd2e60c5796cabb19849dfab3f69", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE1ODMzOQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/930#discussion_r512158339", "bodyText": "this will have to be merge-conflicted in my other PR, ugh. This helper method will definitely not live in the plugin code for long.", "author": "raphkim", "createdAt": "2020-10-26T17:53:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE1MjYwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE3MDE4NA==", "url": "https://github.com/aws-amplify/amplify-android/pull/930#discussion_r512170184", "bodyText": "Ah right, I forgot that wasn't in, yet. I was like \"damn, I thought we moved some of this out already...\"\nSounds good. I remember you saying you'd rebase that one onto this. That plan works.", "author": "jamesonwilliams", "createdAt": "2020-10-26T18:12:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE1MjYwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE1MzQ1MQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/930#discussion_r512153451", "bodyText": "How are group A and B different? Can  you give semantic names, PRIVILEGED_GROUP, NO_ACCESS_GROUP Or ALICE_GROUP and BOB_GROUP, with a little comment about the security relationship between Alice and Bob?", "author": "jamesonwilliams", "createdAt": "2020-10-26T17:46:07Z", "path": "aws-api/src/test/java/com/amplifyframework/api/aws/auth/OwnerBasedAuthTest.java", "diffHunk": "@@ -68,6 +68,9 @@\n     private static final String GRAPHQL_API_WITH_COGNITO = \"graphQlApi_cognito\";\n     private static final String GRAPHQL_API_WITH_OIDC = \"graphQlApi_oidc\";\n \n+    private static final String GROUP_A = \"http://myapp1.com/claims/groups\";\n+    private static final String GROUP_B = \"http://myapp2.com/claims/groups\";", "originalCommit": "902bb379f6a2fd2e60c5796cabb19849dfab3f69", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE1ODk1Nw==", "url": "https://github.com/aws-amplify/amplify-android/pull/930#discussion_r512158957", "bodyText": "This actually doesn't get used at the moment, but snuck its way in the PR... I'll take out the unused items from the unit test.", "author": "raphkim", "createdAt": "2020-10-26T17:54:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE1MzQ1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI1NTQ5NA==", "url": "https://github.com/aws-amplify/amplify-android/pull/930#discussion_r512255494", "bodyText": "Why remove the null check?", "author": "TrekSoft", "createdAt": "2020-10-26T20:42:56Z", "path": "aws-api/src/main/java/com/amplifyframework/api/aws/AWSApiPlugin.java", "diffHunk": "@@ -361,65 +363,61 @@ private boolean isReadRestrictingOwner(AuthRule authRule) {\n \n     private boolean isReadRestrictingStaticGroup(AuthRule authRule) {\n         return AuthStrategy.GROUPS.equals(authRule.getAuthStrategy())\n-            && authRule.getGroups() != null && !authRule.getGroups().isEmpty()\n+            && !authRule.getGroups().isEmpty()", "originalCommit": "902bb379f6a2fd2e60c5796cabb19849dfab3f69", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc0NDQ1Nw==", "url": "https://github.com/aws-amplify/amplify-android/pull/930#discussion_r513744457", "bodyText": "It's redundant because AuthRule#getGroups() explicitly has @NonNull return value :)", "author": "raphkim", "createdAt": "2020-10-28T20:37:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI1NTQ5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjc3NzIwMw==", "url": "https://github.com/aws-amplify/amplify-android/pull/930#discussion_r512777203", "bodyText": "The reason this was done the way it was is because an error won't be thrown if the identityClaim key is present but empty. And it seemed to make sense to throw the error in that case.", "author": "TrekSoft", "createdAt": "2020-10-27T15:11:58Z", "path": "aws-api/src/main/java/com/amplifyframework/api/aws/AWSApiPlugin.java", "diffHunk": "@@ -361,65 +363,61 @@ private boolean isReadRestrictingOwner(AuthRule authRule) {\n \n     private boolean isReadRestrictingStaticGroup(AuthRule authRule) {\n         return AuthStrategy.GROUPS.equals(authRule.getAuthStrategy())\n-            && authRule.getGroups() != null && !authRule.getGroups().isEmpty()\n+            && !authRule.getGroups().isEmpty()\n             && authRule.getOperationsOrDefault().contains(ModelOperation.READ);\n     }\n \n     private String getIdentityValue(String identityClaim, AuthorizationType authType) throws ApiException {\n-        String identityValue = null;\n-\n         try {\n-            identityValue = CognitoJWTParser\n+            return CognitoJWTParser\n                     .getPayload(getAuthToken(authType))\n                     .getString(identityClaim);\n         } catch (JSONException | CognitoParameterInvalidException error) {\n-            // Could not read identity value from the token...\n-            // Exception will be thrown so do nothing for now\n-        }\n-\n-        if (identityValue == null || identityValue.isEmpty()) {", "originalCommit": "902bb379f6a2fd2e60c5796cabb19849dfab3f69", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc1MzIwMQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/930#discussion_r513753201", "bodyText": "i don't think that's something that should be caught in the client side. It should be treated the same as having an incorrect/non-existent username, which should be caught by the server.", "author": "raphkim", "createdAt": "2020-10-28T20:54:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjc3NzIwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc1Njk0NA==", "url": "https://github.com/aws-amplify/amplify-android/pull/930#discussion_r513756944", "bodyText": "Fair enough", "author": "TrekSoft", "createdAt": "2020-10-28T21:00:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjc3NzIwMw=="}], "type": "inlineReview"}, {"oid": "ae3a20507dd4a49258e740372fcd95e3fe22504b", "url": "https://github.com/aws-amplify/amplify-android/commit/ae3a20507dd4a49258e740372fcd95e3fe22504b", "message": "address pr comments", "committedDate": "2020-10-28T20:56:58Z", "type": "commit"}, {"oid": "e4335d9ac5ed8c31d8c100d7fdf2a8313e4b629d", "url": "https://github.com/aws-amplify/amplify-android/commit/e4335d9ac5ed8c31d8c100d7fdf2a8313e4b629d", "message": "Merge branch 'main' of https://github.com/aws-amplify/amplify-android into custom-groups-claim", "committedDate": "2020-10-28T20:57:10Z", "type": "commit"}]}