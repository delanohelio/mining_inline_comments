{"pr_number": 3093, "pr_title": "Add AdvancedSCMRepositoryClient for websocket notifications", "pr_createdAt": "2020-06-11T15:12:59Z", "pr_url": "https://github.com/project-ncl/pnc/pull/3093", "timeline": [{"oid": "331926c892021bfc9039323fca7d9c6ec7523549", "url": "https://github.com/project-ncl/pnc/commit/331926c892021bfc9039323fca7d9c6ec7523549", "message": "Add AdvancedSCMRepositoryClient for websocket notifications\n\nThis will handle websocket notifications for both success and failures\nof scm creation", "committedDate": "2020-06-11T15:44:49Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkwMzM2NQ==", "url": "https://github.com/project-ncl/pnc/pull/3093#discussion_r438903365", "bodyText": "I'd recommend attaching WS listener before making REST requests. You have a guarantee you'll avoid race condition of the WS message coming earlier than WS listeners being registered.", "author": "michalovjan", "createdAt": "2020-06-11T16:07:37Z", "path": "rest-client/src/main/java/org/jboss/pnc/restclient/AdvancedSCMRepositoryClient.java", "diffHunk": "@@ -0,0 +1,131 @@\n+/**\n+ * JBoss, Home of Professional Open Source.\n+ * Copyright 2014-2020 Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.jboss.pnc.restclient;\n+\n+import org.jboss.pnc.client.ClientException;\n+import org.jboss.pnc.client.Configuration;\n+import org.jboss.pnc.client.RemoteResourceException;\n+import org.jboss.pnc.client.SCMRepositoryClient;\n+import org.jboss.pnc.dto.notification.RepositoryCreationFailure;\n+import org.jboss.pnc.dto.notification.SCMRepositoryCreationSuccess;\n+import org.jboss.pnc.dto.requests.CreateAndSyncSCMRequest;\n+import org.jboss.pnc.dto.response.RepositoryCreationResponse;\n+import org.jboss.pnc.restclient.websocket.VertxWebSocketClient;\n+import org.jboss.pnc.restclient.websocket.WebSocketClient;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import static org.jboss.pnc.restclient.websocket.predicates.SCMRepositoryNotificationPredicates.withFailedTaskId;\n+import static org.jboss.pnc.restclient.websocket.predicates.SCMRepositoryNotificationPredicates.withSuccessTaskId;\n+\n+public class AdvancedSCMRepositoryClient extends SCMRepositoryClient {\n+\n+    private WebSocketClient webSocketClient = new VertxWebSocketClient();\n+\n+    public AdvancedSCMRepositoryClient(Configuration configuration) {\n+        super(configuration);\n+        webSocketClient.connect(\"ws://\" + configuration.getHost() + \"/pnc-rest-new/notifications\").join();\n+    }\n+\n+    private CompletableFuture<RepositoryCreationFailure> waitForScmCreationFailure(String taskId) {\n+\n+        return webSocketClient.catchRepositoryCreationFailure(withFailedTaskId(taskId))\n+                .whenComplete((x, y) -> webSocketClient.disconnect());\n+    }\n+\n+    private CompletableFuture<SCMRepositoryCreationSuccess> waitForScmCreationSuccess(String taskId) {\n+\n+        return webSocketClient.catchSCMRepositoryCreationSuccess(withSuccessTaskId(taskId))\n+                .whenComplete((x, y) -> webSocketClient.disconnect());\n+    }\n+\n+    /**\n+     * If the scm repository is already created and present in the Orch database, a RemoteResourceException is thrown.\n+     * It's recommended that you check the presence of the repository before creating it.\n+     *\n+     * @param request scm to create\n+     * @return CompletableFuture of the result, whether it was successful or not\n+     * @throws RemoteResourceException Most likely thrown if repository already exists\n+     * @throws ClientException if the response from the server is strange: both task id and scm repository is null\n+     */\n+    public CompletableFuture<SCMCreationResult> createNewAndWait(CreateAndSyncSCMRequest request)\n+            throws RemoteResourceException, ClientException {\n+\n+        RepositoryCreationResponse response = super.createNew(request);", "originalCommit": "331926c892021bfc9039323fca7d9c6ec7523549", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk1Nzg5NA==", "url": "https://github.com/project-ncl/pnc/pull/3093#discussion_r438957894", "bodyText": "I cannot do that since I need to listen to the task id :(", "author": "thescouser89", "createdAt": "2020-06-11T17:41:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkwMzM2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQwNzIyMA==", "url": "https://github.com/project-ncl/pnc/pull/3093#discussion_r439407220", "bodyText": "shite, you are right...", "author": "michalovjan", "createdAt": "2020-06-12T13:07:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkwMzM2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkwODY3OQ==", "url": "https://github.com/project-ncl/pnc/pull/3093#discussion_r438908679", "bodyText": "With using the join() in the constructor, you theoretically limit reusability. If one of the wait* methods disconnects from the client, then other wait* methods won't work.(not a problem in this case) On the other hand, calling join() more then once is harmless, that's why I've been putting them inside wait* methods.\nIf there is an issue with running join() concurrently, then adding synchronized keyword to join() method should fix that.", "author": "michalovjan", "createdAt": "2020-06-11T16:16:00Z", "path": "rest-client/src/main/java/org/jboss/pnc/restclient/AdvancedSCMRepositoryClient.java", "diffHunk": "@@ -0,0 +1,131 @@\n+/**\n+ * JBoss, Home of Professional Open Source.\n+ * Copyright 2014-2020 Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.jboss.pnc.restclient;\n+\n+import org.jboss.pnc.client.ClientException;\n+import org.jboss.pnc.client.Configuration;\n+import org.jboss.pnc.client.RemoteResourceException;\n+import org.jboss.pnc.client.SCMRepositoryClient;\n+import org.jboss.pnc.dto.notification.RepositoryCreationFailure;\n+import org.jboss.pnc.dto.notification.SCMRepositoryCreationSuccess;\n+import org.jboss.pnc.dto.requests.CreateAndSyncSCMRequest;\n+import org.jboss.pnc.dto.response.RepositoryCreationResponse;\n+import org.jboss.pnc.restclient.websocket.VertxWebSocketClient;\n+import org.jboss.pnc.restclient.websocket.WebSocketClient;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import static org.jboss.pnc.restclient.websocket.predicates.SCMRepositoryNotificationPredicates.withFailedTaskId;\n+import static org.jboss.pnc.restclient.websocket.predicates.SCMRepositoryNotificationPredicates.withSuccessTaskId;\n+\n+public class AdvancedSCMRepositoryClient extends SCMRepositoryClient {\n+\n+    private WebSocketClient webSocketClient = new VertxWebSocketClient();\n+\n+    public AdvancedSCMRepositoryClient(Configuration configuration) {\n+        super(configuration);\n+        webSocketClient.connect(\"ws://\" + configuration.getHost() + \"/pnc-rest-new/notifications\").join();", "originalCommit": "331926c892021bfc9039323fca7d9c6ec7523549", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk2MDMzNQ==", "url": "https://github.com/project-ncl/pnc/pull/3093#discussion_r438960335", "bodyText": "Do you recommend I create 2 websocket clients then? one for each wait method?", "author": "thescouser89", "createdAt": "2020-06-11T17:43:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkwODY3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQxMjAzMA==", "url": "https://github.com/project-ncl/pnc/pull/3093#discussion_r439412030", "bodyText": "I've made relevant comment below that could prevent this.", "author": "michalovjan", "createdAt": "2020-06-12T13:17:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkwODY3OQ=="}], "type": "inlineReview"}, {"oid": "c00bb1c9700bef90c674951b7d185b7f50caaf1b", "url": "https://github.com/project-ncl/pnc/commit/c00bb1c9700bef90c674951b7d185b7f50caaf1b", "message": "Add AdvancedSCMRepositoryClient for websocket notifications\n\nThis will handle websocket notifications for both success and failures\nof scm creation", "committedDate": "2020-06-11T18:57:46Z", "type": "forcePushed"}, {"oid": "c191ae5afecb348aac2bf9b14d12baac7eb38044", "url": "https://github.com/project-ncl/pnc/commit/c191ae5afecb348aac2bf9b14d12baac7eb38044", "message": "Add AdvancedSCMRepositoryClient for websocket notifications\n\nThis will handle websocket notifications for both success and failures\nof scm creation", "committedDate": "2020-06-11T21:30:06Z", "type": "forcePushed"}, {"oid": "a81c2c649cdf173ecada421f97769d11c2874e09", "url": "https://github.com/project-ncl/pnc/commit/a81c2c649cdf173ecada421f97769d11c2874e09", "message": "Add AdvancedSCMRepositoryClient for websocket notifications\n\nThis will handle websocket notifications for both success and failures\nof scm creation", "committedDate": "2020-06-16T21:13:04Z", "type": "forcePushed"}, {"oid": "656f6e737eb1b705702288d8c41f015b9b724b54", "url": "https://github.com/project-ncl/pnc/commit/656f6e737eb1b705702288d8c41f015b9b724b54", "message": "Add AdvancedSCMRepositoryClient for websocket notifications\n\nThis will handle websocket notifications for both success and failures\nof scm creation", "committedDate": "2020-06-17T18:40:02Z", "type": "commit"}, {"oid": "656f6e737eb1b705702288d8c41f015b9b724b54", "url": "https://github.com/project-ncl/pnc/commit/656f6e737eb1b705702288d8c41f015b9b724b54", "message": "Add AdvancedSCMRepositoryClient for websocket notifications\n\nThis will handle websocket notifications for both success and failures\nof scm creation", "committedDate": "2020-06-17T18:40:02Z", "type": "forcePushed"}]}