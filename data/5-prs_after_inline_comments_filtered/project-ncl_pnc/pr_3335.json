{"pr_number": 3335, "pr_title": "[NCL-5812] Update equals & hashCode on model entities to work with JPA", "pr_createdAt": "2020-10-01T15:22:04Z", "pr_url": "https://github.com/project-ncl/pnc/pull/3335", "timeline": [{"oid": "be886d4a46e4c9897bac6b611035b08793a27cce", "url": "https://github.com/project-ncl/pnc/commit/be886d4a46e4c9897bac6b611035b08793a27cce", "message": "[NCL-5812] Update equals & hashCode on model entities to work with JPA\n\nAn entity must be equal to itself across all JPA object states: transient,\nattached, detached, removed [1]\n\nThe entities should use business key (unique, unmodifiable fields) in equals &\nhashCode when possible, in the rest cases they can use primary key for equals\nand constant for hash code [2]\n\nEntities with business key:\nBuildEnvironment\nBuildRecordAttribute\nGenericSetting\nRepositoryConfiguration\nTargetRepository\nUser\n\nSome entities don't have business key but their ID is generated prior\npersistence to DB, so we can use the ID without problems:\nBuildConfiguration\nBuildRecord\nBuildRecordPushResult\nProductMilestoneRelease\n\nAudited classes are only read from DB so their ID is unmodifiable:\nArtifactAudited\nBuildConfigurationAudited\n\nEnitities that don't have business key and their ID is generated when stored to\nDB must have constat for their hash code:\nArtifact\nBuildConfigSetRecord\nBuildConfigurationSet\nProduct\nProductMilestone\nProductRelease\nProductVersion\nProject\n\n[1]: https://vladmihalcea.com/hibernate-facts-equals-and-hashcode/\n[2]: https://vladmihalcea.com/how-to-implement-equals-and-hashcode-using-the-jpa-entity-identifier/", "committedDate": "2020-10-05T10:20:51Z", "type": "forcePushed"}, {"oid": "ba888f7bdeae46ce91fee9daff752a23b8e514ca", "url": "https://github.com/project-ncl/pnc/commit/ba888f7bdeae46ce91fee9daff752a23b8e514ca", "message": "twst", "committedDate": "2020-10-05T11:48:36Z", "type": "forcePushed"}, {"oid": "4dc36ad9c111b04b34737d98a4a1c604579788cf", "url": "https://github.com/project-ncl/pnc/commit/4dc36ad9c111b04b34737d98a4a1c604579788cf", "message": "[NCL-5812] Update equals & hashCode on model entities to work with JPA\n\nAn entity must be equal to itself across all JPA object states: transient,\nattached, detached, removed [1]\n\nThe entities should use business key (unique, unmodifiable fields) in equals &\nhashCode when possible, in the rest cases they can use primary key for equals\nand constant for hash code [2]\n\nEntities with business key:\nBuildEnvironment\nBuildRecordAttribute\nGenericSetting\nRepositoryConfiguration\nTargetRepository\nUser\n\nSome entities don't have business key but their ID is generated prior\npersistence to DB, so we can use the ID without problems:\nBuildConfiguration\nBuildRecord\nBuildRecordPushResult\nProductMilestoneRelease\n\nAudited classes are only read from DB so their ID is unmodifiable:\nArtifactAudited\nBuildConfigurationAudited\n\nEnitities that don't have business key and their ID is generated when stored to\nDB must have constat for their hash code:\nArtifact\nBuildConfigSetRecord\nBuildConfigurationSet\nProduct\nProductMilestone\nProductRelease\nProductVersion\nProject\n\n[1]: https://vladmihalcea.com/hibernate-facts-equals-and-hashcode/\n[2]: https://vladmihalcea.com/how-to-implement-equals-and-hashcode-using-the-jpa-entity-identifier/", "committedDate": "2020-10-05T12:54:32Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcyNzU0MQ==", "url": "https://github.com/project-ncl/pnc/pull/3335#discussion_r499727541", "bodyText": "Isn't it idRev != null && idRev.equals(((ArtifactAudited) o).getIdRev()); ?", "author": "vibe13", "createdAt": "2020-10-05T16:33:17Z", "path": "model/src/main/java/org/jboss/pnc/model/ArtifactAudited.java", "diffHunk": "@@ -130,17 +131,14 @@ public String toString() {\n     public boolean equals(Object o) {\n         if (this == o)\n             return true;\n-        if (o == null || getClass() != o.getClass())\n+        if (!(o instanceof ArtifactAudited))\n             return false;\n-\n-        ArtifactAudited that = (ArtifactAudited) o;\n-\n-        return (idRev != null ? idRev.equals(that.getIdRev()) : false);\n+        return idRev != null && idRev.equals(((ArtifactAudited) o).getId());", "originalCommit": "4dc36ad9c111b04b34737d98a4a1c604579788cf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcyODU5OQ==", "url": "https://github.com/project-ncl/pnc/pull/3335#discussion_r499728599", "bodyText": "idRev != null && idRev.equals(((BuildConfigurationAudited) o).getIdRev());", "author": "vibe13", "createdAt": "2020-10-05T16:35:03Z", "path": "model/src/main/java/org/jboss/pnc/model/BuildConfigurationAudited.java", "diffHunk": "@@ -224,17 +225,14 @@ public String toString() {\n     public boolean equals(Object o) {\n         if (this == o)\n             return true;\n-        if (o == null || getClass() != o.getClass())\n+        if (!(o instanceof ArtifactAudited))\n             return false;\n-\n-        BuildConfigurationAudited that = (BuildConfigurationAudited) o;\n-\n-        return (idRev != null ? idRev.equals(that.getIdRev()) : false);\n+        return idRev != null && idRev.equals(((ArtifactAudited) o).getId());", "originalCommit": "4dc36ad9c111b04b34737d98a4a1c604579788cf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcyODc5Mg==", "url": "https://github.com/project-ncl/pnc/pull/3335#discussion_r499728792", "bodyText": "(!(o instanceof BuildConfigurationAudited))", "author": "vibe13", "createdAt": "2020-10-05T16:35:21Z", "path": "model/src/main/java/org/jboss/pnc/model/BuildConfigurationAudited.java", "diffHunk": "@@ -224,17 +225,14 @@ public String toString() {\n     public boolean equals(Object o) {\n         if (this == o)\n             return true;\n-        if (o == null || getClass() != o.getClass())\n+        if (!(o instanceof ArtifactAudited))", "originalCommit": "4dc36ad9c111b04b34737d98a4a1c604579788cf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcyOTc4Mw==", "url": "https://github.com/project-ncl/pnc/pull/3335#discussion_r499729783", "bodyText": "(!(o instanceof BuildConfigurationSet))", "author": "vibe13", "createdAt": "2020-10-05T16:37:06Z", "path": "model/src/main/java/org/jboss/pnc/model/BuildConfigurationSet.java", "diffHunk": "@@ -212,18 +212,16 @@ public void setArchived(boolean archived) {\n     public boolean equals(Object o) {\n         if (this == o)\n             return true;\n-        if (o == null || getClass() != o.getClass())\n+        if (!(o instanceof BuildConfigSetRecord))", "originalCommit": "4dc36ad9c111b04b34737d98a4a1c604579788cf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTczMDYwNQ==", "url": "https://github.com/project-ncl/pnc/pull/3335#discussion_r499730605", "bodyText": "I would also modify the unique constraint to be the same? systemImageId and systemImageRepositoryUrl", "author": "vibe13", "createdAt": "2020-10-05T16:38:33Z", "path": "model/src/main/java/org/jboss/pnc/model/BuildEnvironment.java", "diffHunk": "@@ -19,6 +19,7 @@\n \n import java.util.HashMap;\n import java.util.Map;\n+import java.util.Objects;", "originalCommit": "4dc36ad9c111b04b34737d98a4a1c604579788cf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc0MzM0OQ==", "url": "https://github.com/project-ncl/pnc/pull/3335#discussion_r499743349", "bodyText": "I don't know.\nThe systemImageId is already unique so paired with anything (e.g. systemImageRepositoryUrl) it's still unique. At first I wanted to use only the systemImageId in the equals thinking that systemImageRepositoryUrl will be added later when the BuildEnvironment is refactored. But then I thought that it is not a problem to add it now and we won't forget to add it later. But I didn't plan to do any DB changes in this PR.\nIf you think new unique constraint should be added (and the one from systemImageId removed?) I'll do it.", "author": "janinko", "createdAt": "2020-10-05T17:00:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTczMDYwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc0NjkwNw==", "url": "https://github.com/project-ncl/pnc/pull/3335#discussion_r499746907", "bodyText": "Yes it was more to catch 2 birds with 1 stone while you are making such changes. We might use the same systemimageID with different systemimagerepositoryurl soonish (for Quay). I am ok in making DB changes when they will be needed, it's just a bit strange that the code and DB have different uniqueness though.", "author": "vibe13", "createdAt": "2020-10-05T17:06:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTczMDYwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTczMjAwMw==", "url": "https://github.com/project-ncl/pnc/pull/3335#discussion_r499732003", "bodyText": "return id != null && id.equals(((Product) o).getId());", "author": "vibe13", "createdAt": "2020-10-05T16:40:59Z", "path": "model/src/main/java/org/jboss/pnc/model/Product.java", "diffHunk": "@@ -208,6 +208,22 @@ public boolean addVersion(ProductVersion version) {\n         return productVersions.add(version);\n     }\n \n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o)\n+            return true;\n+        if (!(o instanceof Product))\n+            return false;\n+        return id != null && id.equals(((BuildConfigSetRecord) o).getId());", "originalCommit": "4dc36ad9c111b04b34737d98a4a1c604579788cf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "fd10c657da25170b4e8d1db64047f3f663ae6d43", "url": "https://github.com/project-ncl/pnc/commit/fd10c657da25170b4e8d1db64047f3f663ae6d43", "message": "[NCL-5812] Update equals & hashCode on model entities to work with JPA\n\nAn entity must be equal to itself across all JPA object states: transient,\nattached, detached, removed [1]\n\nThe entities should use business key (unique, unmodifiable fields) in equals &\nhashCode when possible, in the rest cases they can use primary key for equals\nand constant for hash code [2]\n\nEntities with business key:\nBuildEnvironment\nBuildRecordAttribute\nGenericSetting\nRepositoryConfiguration\nTargetRepository\nUser\n\nSome entities don't have business key but their ID is generated prior\npersistence to DB, so we can use the ID without problems:\nBuildConfiguration\nBuildRecord\nBuildRecordPushResult\nProductMilestoneRelease\n\nAudited classes are only read from DB so their ID is unmodifiable:\nArtifactAudited\nBuildConfigurationAudited\n\nEnitities that don't have business key and their ID is generated when stored to\nDB must have constat for their hash code:\nArtifact\nBuildConfigSetRecord\nBuildConfigurationSet\nProduct\nProductMilestone\nProductRelease\nProductVersion\nProject\n\n[1]: https://vladmihalcea.com/hibernate-facts-equals-and-hashcode/\n[2]: https://vladmihalcea.com/how-to-implement-equals-and-hashcode-using-the-jpa-entity-identifier/", "committedDate": "2020-10-05T17:01:31Z", "type": "forcePushed"}, {"oid": "b7eaedd85220c00f3b5004b0c9c4579415ed19bb", "url": "https://github.com/project-ncl/pnc/commit/b7eaedd85220c00f3b5004b0c9c4579415ed19bb", "message": "[NCL-5812] Add unique constraint to Build Environment entity", "committedDate": "2020-10-06T15:23:53Z", "type": "forcePushed"}, {"oid": "faa0d5a59586e4751f0e26808005029e3f1a7e19", "url": "https://github.com/project-ncl/pnc/commit/faa0d5a59586e4751f0e26808005029e3f1a7e19", "message": "[NCL-5812] Add unique constraint to Build Environment entity", "committedDate": "2020-10-07T10:23:11Z", "type": "forcePushed"}, {"oid": "8195faf9b58eb8b5a44802769c52da083ee95d86", "url": "https://github.com/project-ncl/pnc/commit/8195faf9b58eb8b5a44802769c52da083ee95d86", "message": "[NCL-5812] Update equals & hashCode on model entities to work with JPA\n\nAn entity must be equal to itself across all JPA object states: transient,\nattached, detached, removed [1]\n\nThe entities should use business key (unique, unmodifiable fields) in equals &\nhashCode when possible, in the rest cases they can use primary key for equals\nand constant for hash code [2]\n\nEntities with business key:\nBuildEnvironment\nBuildRecordAttribute\nGenericSetting\nRepositoryConfiguration\nTargetRepository\nUser\n\nSome entities don't have business key but their ID is generated prior\npersistence to DB, so we can use the ID without problems:\nBuildConfiguration\nBuildRecord\nBuildRecordPushResult\nProductMilestoneRelease\n\nAudited classes are only read from DB so their ID is unmodifiable:\nArtifactAudited\nBuildConfigurationAudited\n\nEnitities that don't have business key and their ID is generated when stored to\nDB must have constat for their hash code:\nArtifact\nBuildConfigSetRecord\nBuildConfigurationSet\nProduct\nProductMilestone\nProductRelease\nProductVersion\nProject\n\n[1]: https://vladmihalcea.com/hibernate-facts-equals-and-hashcode/\n[2]: https://vladmihalcea.com/how-to-implement-equals-and-hashcode-using-the-jpa-entity-identifier/", "committedDate": "2020-10-07T11:37:40Z", "type": "commit"}, {"oid": "d3d9efb395def659be7d693662b4f1bd7e9c3e91", "url": "https://github.com/project-ncl/pnc/commit/d3d9efb395def659be7d693662b4f1bd7e9c3e91", "message": "[NCL-5812] Add unique constraint to Build Environment entity", "committedDate": "2020-10-07T11:37:40Z", "type": "forcePushed"}, {"oid": "9e7ddcb6fc4060f297e0cb1a0f6e067004bf9170", "url": "https://github.com/project-ncl/pnc/commit/9e7ddcb6fc4060f297e0cb1a0f6e067004bf9170", "message": "[NCL-5812] Add unique constraint to Build Environment entity", "committedDate": "2020-10-12T09:45:49Z", "type": "commit"}, {"oid": "9e7ddcb6fc4060f297e0cb1a0f6e067004bf9170", "url": "https://github.com/project-ncl/pnc/commit/9e7ddcb6fc4060f297e0cb1a0f6e067004bf9170", "message": "[NCL-5812] Add unique constraint to Build Environment entity", "committedDate": "2020-10-12T09:45:49Z", "type": "forcePushed"}]}