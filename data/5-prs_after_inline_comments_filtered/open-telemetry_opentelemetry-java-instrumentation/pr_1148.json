{"pr_number": 1148, "pr_title": "More decorators translated to tracers", "pr_createdAt": "2020-09-01T10:31:13Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1148", "timeline": [{"oid": "fb973658ee49397a54321405162d13da601f3a35", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/fb973658ee49397a54321405162d13da601f3a35", "message": "More decorators translated to tracers", "committedDate": "2020-09-01T10:28:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTc2NjU2MQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1148#discussion_r481766561", "bodyText": "Filed #1155", "author": "anuraaga", "createdAt": "2020-09-02T06:11:50Z", "path": "instrumentation/jdbc/src/main/java/io/opentelemetry/instrumentation/auto/jdbc/DataSourceInstrumentation.java", "diffHunk": "@@ -66,33 +65,35 @@ public boolean defaultEnabled() {\n   public static class GetConnectionAdvice {\n \n     @Advice.OnMethodEnter(suppress = Throwable.class)\n-    public static SpanWithScope start(@Advice.This DataSource ds) {\n+    public static void start(\n+        @Advice.This DataSource ds,\n+        @Advice.Local(\"otelSpan\") Span span,\n+        @Advice.Local(\"otelScope\") Scope scope) {\n+      // TODO this is very strange condition", "originalCommit": "fb973658ee49397a54321405162d13da601f3a35", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTc2OTUyMQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1148#discussion_r481769521", "bodyText": "Or remove status :-)", "author": "anuraaga", "createdAt": "2020-09-02T06:14:39Z", "path": "instrumentation/ratpack-1.4/src/main/java/io/opentelemetry/instrumentation/auto/ratpack/ErrorHandlerAdvice.java", "diffHunk": "@@ -29,7 +30,9 @@ public static void captureThrowable(\n       @Advice.Argument(0) Context ctx, @Advice.Argument(1) Throwable throwable) {\n     Optional<Span> span = ctx.maybeGet(Span.class);\n     if (span.isPresent()) {\n-      DECORATE.onError(span.get(), throwable);\n+      // TODO this emulates old behaviour of BaseDecorator. Has to review", "originalCommit": "fb973658ee49397a54321405162d13da601f3a35", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}