{"pr_number": 615, "pr_title": "Use gRPC Status for thrown exceptions too and remove redundant legacy\u2026", "pr_createdAt": "2020-06-30T07:05:40Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/615", "timeline": [{"oid": "f6fb9ab5f09fd2efacc9e4dffc0619406dd49090", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/f6fb9ab5f09fd2efacc9e4dffc0619406dd49090", "message": "Use gRPC Status for thrown exceptions too and remove redundant legacy status attributes.", "committedDate": "2020-06-30T07:03:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ2MDU4OQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/615#discussion_r447460589", "bodyText": "If there is throwable, you will end up calling setStatus twice. And it seems like second one will override one set in onError", "author": "iNikem", "createdAt": "2020-06-30T07:13:51Z", "path": "instrumentation/grpc-1.5/src/main/java/io/opentelemetry/auto/instrumentation/grpc/client/GrpcClientDecorator.java", "diffHunk": "@@ -28,12 +29,18 @@\n       OpenTelemetry.getTracerProvider().get(\"io.opentelemetry.auto.grpc-1.5\");\n \n   public Span onClose(final Span span, final io.grpc.Status status) {\n-\n-    span.setAttribute(\"status.code\", status.getCode().name());\n-    span.setAttribute(\"status.description\", status.getDescription());\n-\n-    onError(span, status.getCause());\n+    super.onError(span, status.getCause());\n     span.setStatus(GrpcHelper.statusFromGrpcStatus(status));", "originalCommit": "f6fb9ab5f09fd2efacc9e4dffc0619406dd49090", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ2NDQwNA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/615#discussion_r447464404", "bodyText": "It's a bit unclear - this is calling super.onError now. I added a comment but admit it's a bit unclear, couldn't come up with a way to refactor that would be clearer though. Any suggestion?", "author": "anuraaga", "createdAt": "2020-06-30T07:20:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ2MDU4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA2NTA1Ng==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/615#discussion_r448065056", "bodyText": "maybe adding an onError() overload in BaseDecorator that also takes (otel) Status might help?", "author": "trask", "createdAt": "2020-07-01T01:24:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ2MDU4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA3OTEzOA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/615#discussion_r448079138", "bodyText": "Thanks for the idea, looks a bit better.", "author": "anuraaga", "createdAt": "2020-07-01T02:21:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ2MDU4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ2MTQ5NQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/615#discussion_r447461495", "bodyText": "This looks strange to me without first checking if getCause() != null", "author": "iNikem", "createdAt": "2020-06-30T07:15:26Z", "path": "instrumentation/grpc-1.5/src/main/java/io/opentelemetry/auto/instrumentation/grpc/client/GrpcClientDecorator.java", "diffHunk": "@@ -28,12 +29,18 @@\n       OpenTelemetry.getTracerProvider().get(\"io.opentelemetry.auto.grpc-1.5\");\n \n   public Span onClose(final Span span, final io.grpc.Status status) {\n-\n-    span.setAttribute(\"status.code\", status.getCode().name());\n-    span.setAttribute(\"status.description\", status.getDescription());\n-\n-    onError(span, status.getCause());\n+    super.onError(span, status.getCause());", "originalCommit": "f6fb9ab5f09fd2efacc9e4dffc0619406dd49090", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ2NDE2Mg==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/615#discussion_r447464162", "bodyText": "Our previous code was doing that too, but I prefer to do null checks at callers too so added", "author": "anuraaga", "createdAt": "2020-06-30T07:20:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ2MTQ5NQ=="}], "type": "inlineReview"}, {"oid": "299127a9ad8675176b62e599f1571d455ae74871", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/299127a9ad8675176b62e599f1571d455ae74871", "message": "Clean up a little", "committedDate": "2020-06-30T07:20:21Z", "type": "commit"}, {"oid": "18984f8cc725b9a48cfb9893aaae42cc3235b481", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/18984f8cc725b9a48cfb9893aaae42cc3235b481", "message": "Cleanup", "committedDate": "2020-07-01T01:55:29Z", "type": "commit"}, {"oid": "6e00582bfc5842e185506862deb5cf694de64365", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/6e00582bfc5842e185506862deb5cf694de64365", "message": "Apply cleanup to server decorator too and add unit test.", "committedDate": "2020-07-01T02:21:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA4MDEwNQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/615#discussion_r448080105", "bodyText": "i think calling straight to onComplete here would be a bit clearer\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                onClose(span, Status.fromThrowable(throwable));\n          \n          \n            \n                onComplete(span, Status.fromThrowable(throwable), throwable);", "author": "trask", "createdAt": "2020-07-01T02:25:07Z", "path": "instrumentation/grpc-1.5/src/main/java/io/opentelemetry/auto/instrumentation/grpc/client/GrpcClientDecorator.java", "diffHunk": "@@ -28,12 +29,14 @@\n       OpenTelemetry.getTracerProvider().get(\"io.opentelemetry.auto.grpc-1.5\");\n \n   public Span onClose(final Span span, final io.grpc.Status status) {\n+    onComplete(span, GrpcHelper.statusFromGrpcStatus(status), status.getCause());\n+    return span;\n+  }\n \n-    span.setAttribute(\"status.code\", status.getCode().name());\n-    span.setAttribute(\"status.description\", status.getDescription());\n-\n-    onError(span, status.getCause());\n-    span.setStatus(GrpcHelper.statusFromGrpcStatus(status));\n+  @Override\n+  public Span onError(Span span, Throwable throwable) {\n+    assert span != null;\n+    onClose(span, Status.fromThrowable(throwable));", "originalCommit": "6e00582bfc5842e185506862deb5cf694de64365", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA4MDkwNg==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/615#discussion_r448080906", "bodyText": "Yeah not sure if I have a preference. Happy to make the change, but want to confirm you think it's better even though it needs to be this longer version (convert to otel status)?\nonComplete(span, GrpcHelper.statusFromGrpcStatus(Status.fromThrowable(throwable)), throwable);", "author": "anuraaga", "createdAt": "2020-07-01T02:28:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA4MDEwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA4Njg3OA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/615#discussion_r448086878", "bodyText": "oh yeah, that's not great, keep it as is \ud83d\udc4d", "author": "trask", "createdAt": "2020-07-01T02:53:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA4MDEwNQ=="}], "type": "inlineReview"}]}