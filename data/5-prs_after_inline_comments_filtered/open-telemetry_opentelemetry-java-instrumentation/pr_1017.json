{"pr_number": 1017, "pr_title": "Remove thread utils module", "pr_createdAt": "2020-08-16T17:50:32Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1017", "timeline": [{"oid": "8cea99e5ed408013709337fd1ff8318ce517cbe8", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/8cea99e5ed408013709337fd1ff8318ce517cbe8", "message": "Remove thread-utils module", "committedDate": "2020-08-16T17:42:58Z", "type": "commit"}, {"oid": "be3d016a1d419ff01bf7074185f317e794328917", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/be3d016a1d419ff01bf7074185f317e794328917", "message": "No need for extra thread pool", "committedDate": "2020-08-16T17:43:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE4NjI2NA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1017#discussion_r471186264", "bodyText": "Probably not for this PR but should use Futures.addCallback to avoid recording a wrapped exception.", "author": "anuraaga", "createdAt": "2020-08-17T01:08:33Z", "path": "instrumentation/cassandra/cassandra-3.0/src/main/java/io/opentelemetry/instrumentation/auto/cassandra/v3_0/TracingSession.java", "diffHunk": "@@ -150,7 +144,7 @@ public ResultSetFuture executeAsync(String query) {\n     Span span = TRACER.startSpan(session, query);\n     try (Scope ignored = TRACER.startScope(span)) {\n       ResultSetFuture future = session.executeAsync(query);\n-      future.addListener(createListener(span, future), EXECUTOR_SERVICE);\n+      future.addListener(createListener(span, future), SameThreadExecutor.INSTANCE);", "originalCommit": "be3d016a1d419ff01bf7074185f317e794328917", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}