{"pr_number": 1839, "pr_title": "Switch gRPC instrumentation to instrument public ServerBuilder class.", "pr_createdAt": "2020-12-07T03:34:25Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1839", "timeline": [{"oid": "d4c58ecde2a648cee433e00ef02cec0170362001", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/d4c58ecde2a648cee433e00ef02cec0170362001", "message": "Switch gRPC instrumentation to instrument public ServerBuilder class.", "committedDate": "2020-12-07T03:33:34Z", "type": "commit"}, {"oid": "58e54bc42f2e3818c51cdb9f9741ce01e522cc6d", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/58e54bc42f2e3818c51cdb9f9741ce01e522cc6d", "message": "A bit more readability (hopefully)", "committedDate": "2020-12-07T03:35:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI2NDk0Ng==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1839#discussion_r537264946", "bodyText": "this string will get shaded too \ud83d\ude04", "author": "trask", "createdAt": "2020-12-07T06:41:26Z", "path": "instrumentation/grpc-1.5/javaagent/src/main/java/io/opentelemetry/javaagent/instrumentation/grpc/v1_5/GrpcServerBuilderInstrumentation.java", "diffHunk": "@@ -21,33 +28,61 @@\n \n public class GrpcServerBuilderInstrumentation implements TypeInstrumentation {\n \n+  @Override\n+  public ElementMatcher<ClassLoader> classLoaderOptimization() {\n+    return hasClassesNamed(\"io.grpc.ServerBuilder\");\n+  }\n+\n   @Override\n   public ElementMatcher<TypeDescription> typeMatcher() {\n-    return named(\"io.grpc.internal.AbstractServerImplBuilder\");\n+    return safeHasSuperType(named(\"io.grpc.ServerBuilder\"));\n   }\n \n   @Override\n   public Map<? extends ElementMatcher<? super MethodDescription>, String> transformers() {\n-    return singletonMap(\n-        isMethod().and(named(\"build\")),\n-        GrpcServerBuilderInstrumentation.class.getName() + \"$AddInterceptorAdvice\");\n+    Map<ElementMatcher<MethodDescription>, String> transformers = new HashMap<>();\n+    transformers.put(\n+        isMethod()\n+            .and(isPublic())\n+            .and(named(\"intercept\"))\n+            .and(takesArgument(0, named(\"io.grpc.ServerInterceptor\"))),\n+        GrpcServerBuilderInstrumentation.class.getName() + \"$InterceptAdvice\");\n+    transformers.put(\n+        isMethod().and(isPublic()).and(named(\"build\")).and(takesArguments(0)),\n+        GrpcServerBuilderInstrumentation.class.getName() + \"$BuildAdvice\");\n+    return transformers;\n   }\n \n-  public static class AddInterceptorAdvice {\n+  public static class InterceptAdvice {\n \n     @Advice.OnMethodEnter(suppress = Throwable.class)\n-    public static void addInterceptor(\n-        @Advice.FieldValue(\"interceptors\") List<ServerInterceptor> interceptors) {\n-      boolean shouldRegister = true;\n-      for (ServerInterceptor interceptor : interceptors) {\n-        if (interceptor instanceof TracingServerInterceptor) {\n-          shouldRegister = false;\n-          break;\n-        }\n+    public static void onEnter(\n+        @Advice.This ServerBuilder<?> serverBuilder,\n+        @Advice.Argument(0) ServerInterceptor interceptor) {\n+      // Check against unshaded name.\n+      if (interceptor\n+          .getClass()\n+          .getName()\n+          .equals(\"io.opentelemetry.instrumentation.grpc.v1_5.server.TracingServerInterceptor\")) {", "originalCommit": "690c4ed707f2fa4d29a225cf4ba1e81b21130b85", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI3MTA2NA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1839#discussion_r537271064", "bodyText": "Oops - removed the check for now so we can come up with a better strategy globally", "author": "anuraaga", "createdAt": "2020-12-07T06:57:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI2NDk0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI3NzMzNQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1839#discussion_r537277335", "bodyText": "So, will we have multiple copies of TracingServerInterceptor?", "author": "iNikem", "createdAt": "2020-12-07T07:13:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI2NDk0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI4MTUwMQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1839#discussion_r537281501", "bodyText": "See #903", "author": "trask", "createdAt": "2020-12-07T07:23:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI2NDk0Ng=="}], "type": "inlineReview"}, {"oid": "37dc02410a20673b2573311b1954c9ae9cfe67e5", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/37dc02410a20673b2573311b1954c9ae9cfe67e5", "message": "hack", "committedDate": "2020-12-07T06:48:25Z", "type": "commit"}, {"oid": "e34e557cc6fc2750f7597c7cddb52fee6457dd15", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/e34e557cc6fc2750f7597c7cddb52fee6457dd15", "message": "Remove library dedupe for now since we need a better story.", "committedDate": "2020-12-07T06:56:40Z", "type": "commit"}, {"oid": "e34e557cc6fc2750f7597c7cddb52fee6457dd15", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/e34e557cc6fc2750f7597c7cddb52fee6457dd15", "message": "Remove library dedupe for now since we need a better story.", "committedDate": "2020-12-07T06:56:40Z", "type": "forcePushed"}]}