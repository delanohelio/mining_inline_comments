{"pr_number": 1447, "pr_title": "Replace `print` with log messages.", "pr_createdAt": "2020-10-21T20:52:37Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1447", "timeline": [{"oid": "069397e4ef3594beaf955aa702bce5c71674bfbb", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/069397e4ef3594beaf955aa702bce5c71674bfbb", "message": "Replace `print` with log messages.\n\n* Add `slf4j` compile time dependency to the `javaagent-exporters.logging` module\n* Replace `System.out.println` with log.debug messages\n\nFixes: #1328", "committedDate": "2020-10-21T21:03:40Z", "type": "commit"}, {"oid": "069397e4ef3594beaf955aa702bce5c71674bfbb", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/069397e4ef3594beaf955aa702bce5c71674bfbb", "message": "Replace `print` with log messages.\n\n* Add `slf4j` compile time dependency to the `javaagent-exporters.logging` module\n* Replace `System.out.println` with log.debug messages\n\nFixes: #1328", "committedDate": "2020-10-21T21:03:40Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTc4NzU2Ng==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1447#discussion_r509787566", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                              stringBuilder.append(key).append('=');\n          \n          \n            \n                              stringBuilder.append(key.getKey()).append('=');\n          \n      \n    \n    \n  \n\nThanks for bringing up the issue about toString, I think getKey should solve that", "author": "anuraaga", "createdAt": "2020-10-21T23:13:16Z", "path": "javaagent-exporters/logging/src/main/java/io/opentelemetry/javaagent/exporters/logging/LoggingExporter.java", "diffHunk": "@@ -21,28 +25,37 @@ public LoggingExporter(String prefix) {\n \n   @Override\n   public CompletableResultCode export(Collection<SpanData> list) {\n+    StringBuilder stringBuilder = new StringBuilder();\n     for (SpanData span : list) {\n-      System.out.print(\n-          prefix + \" \" + span.getName() + \" \" + span.getTraceId() + \" \" + span.getSpanId() + \" \");\n+\n+      stringBuilder\n+          .append(prefix)\n+          .append(\" \")\n+          .append(span.getName())\n+          .append(\" \")\n+          .append(span.getTraceId())\n+          .append(\" \")\n+          .append(span.getSpanId())\n+          .append(\" \");\n+\n       span.getAttributes()\n           .forEach(\n               new AttributeConsumer() {\n                 @Override\n                 public <T> void consume(AttributeKey<T> key, T value) {\n-                  System.out.print(key + \"=\");\n-                  switch (key.getType()) {\n-                    case STRING:\n-                      System.out.print('\"' + String.valueOf(value) + '\"');\n-                      break;\n-                    default:\n-                      System.out.print(value);\n-                      break;\n+\n+                  stringBuilder.append(key).append('=');", "originalCommit": "069397e4ef3594beaf955aa702bce5c71674bfbb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTc4Nzc0Ng==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1447#discussion_r509787746", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                log.debug(stringBuilder.toString());\n          \n          \n            \n                log.info(stringBuilder.toString());\n          \n      \n    \n    \n  \n\nThis exporter needs to be explicitly enabled so I think by default it should log something :)", "author": "anuraaga", "createdAt": "2020-10-21T23:13:48Z", "path": "javaagent-exporters/logging/src/main/java/io/opentelemetry/javaagent/exporters/logging/LoggingExporter.java", "diffHunk": "@@ -21,28 +25,37 @@ public LoggingExporter(String prefix) {\n \n   @Override\n   public CompletableResultCode export(Collection<SpanData> list) {\n+    StringBuilder stringBuilder = new StringBuilder();\n     for (SpanData span : list) {\n-      System.out.print(\n-          prefix + \" \" + span.getName() + \" \" + span.getTraceId() + \" \" + span.getSpanId() + \" \");\n+\n+      stringBuilder\n+          .append(prefix)\n+          .append(\" \")\n+          .append(span.getName())\n+          .append(\" \")\n+          .append(span.getTraceId())\n+          .append(\" \")\n+          .append(span.getSpanId())\n+          .append(\" \");\n+\n       span.getAttributes()\n           .forEach(\n               new AttributeConsumer() {\n                 @Override\n                 public <T> void consume(AttributeKey<T> key, T value) {\n-                  System.out.print(key + \"=\");\n-                  switch (key.getType()) {\n-                    case STRING:\n-                      System.out.print('\"' + String.valueOf(value) + '\"');\n-                      break;\n-                    default:\n-                      System.out.print(value);\n-                      break;\n+\n+                  stringBuilder.append(key).append('=');\n+\n+                  if (key.getType() == AttributeType.STRING) {\n+                    stringBuilder.append('\"').append(value).append('\"');\n+                  } else {\n+                    stringBuilder.append(value);\n                   }\n-                  System.out.print(\" \");\n+                  stringBuilder.append(' ');\n                 }\n               });\n     }\n-    System.out.println();\n+    log.debug(stringBuilder.toString());", "originalCommit": "069397e4ef3594beaf955aa702bce5c71674bfbb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "918fa4906f1ab97f9e7eafc599836e858c915e1d", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/918fa4906f1ab97f9e7eafc599836e858c915e1d", "message": "Replace `debug` with `info`\n\nCo-authored-by: Anuraag Agrawal <anuraaga@gmail.com>", "committedDate": "2020-10-22T20:26:07Z", "type": "commit"}, {"oid": "dd878b1621523341729fa0865e2d421bc37a2d95", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/dd878b1621523341729fa0865e2d421bc37a2d95", "message": "Use `getKey` to log key.\n\nCo-authored-by: Anuraag Agrawal <anuraaga@gmail.com>", "committedDate": "2020-10-22T20:26:30Z", "type": "commit"}]}