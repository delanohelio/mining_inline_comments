{"pr_number": 1297, "pr_title": "Messaging convention reviewed", "pr_createdAt": "2020-10-01T11:49:38Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1297", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODU0NjYzNQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1297#discussion_r498546635", "bodyText": "Are these only used as string constants? If so string constants in JMSTracer seems more natural", "author": "trask", "createdAt": "2020-10-01T22:40:29Z", "path": "instrumentation/jms-1.1/src/main/java/io/opentelemetry/instrumentation/auto/jms/Operation.java", "diffHunk": "@@ -0,0 +1,23 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.instrumentation.auto.jms;\n+\n+public enum Operation {\n+  send,\n+  receive,\n+  process\n+}", "originalCommit": "6a95e499b078f58f81623587d889efb4e2102da3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODYxNDc4NA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1297#discussion_r498614784", "bodyText": "Having string input parameter allows for passing any string. In this case only these 3 values are allowed by convention.", "author": "iNikem", "createdAt": "2020-10-02T04:32:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODU0NjYzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE2NzA5Mw==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1297#discussion_r499167093", "bodyText": "Makes sense \ud83d\udc4d\nBtw, the lowercase enum names are throwing me a bit, can we change to SEND(\"send\")? I think that's more conventional.", "author": "trask", "createdAt": "2020-10-03T17:39:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODU0NjYzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM1NjYxOA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1297#discussion_r499356618", "bodyText": "Can I answer you \"no\"? :) The \"convention\" to have enum elements all in uppercase baffles me. Why should we wrap desired values (lowercase in this case as per spec) in identical uppercase strings? What benefit that brings?", "author": "iNikem", "createdAt": "2020-10-05T05:47:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODU0NjYzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc4NTg5OA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1297#discussion_r499785898", "bodyText": "The \"convention\" to have enum elements all in uppercase baffles me\n\nCurious if you disagree that it is conventional for enums to be uppercase in Java? Or if you disagree that we should follow this convention?\nThe point of following convention is that it helps people reading the code. When I see Operation.send in code, it looks like direct non-constant field access, and takes me more time to understand than it's worth.\nAlso we document in CONTRIBUTING.md that we follow Google Java Style Guide so would suggest we lean on that for style / convention questions where possible.\nHappy to accept @anuraaga as tie-breaker vote either way though \ud83d\udc4d\ud83d\ude04", "author": "trask", "createdAt": "2020-10-05T18:19:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODU0NjYzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc5MTY3MA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1297#discussion_r499791670", "bodyText": "I find strange the notion \"constants should be UPPERCASE in Java\". But in general that is indeed, not important and we should just follow coding style.\nBut it is more important, IMO, when such coding style forces clumsier design. And I think that SEND(\"send\") is clumsy.", "author": "iNikem", "createdAt": "2020-10-05T18:30:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODU0NjYzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY0NDA3Ng==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1297#discussion_r498644076", "bodyText": "Why do we need to specify start timestamp to current time ourselves here?", "author": "anuraaga", "createdAt": "2020-10-02T06:54:34Z", "path": "instrumentation/kafka-clients-0.11/src/main/java/io/opentelemetry/instrumentation/auto/kafkaclients/KafkaConsumerTracer.java", "diffHunk": "@@ -0,0 +1,90 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.instrumentation.auto.kafkaclients;\n+\n+import static io.opentelemetry.instrumentation.api.decorator.BaseDecorator.extract;\n+import static io.opentelemetry.instrumentation.auto.kafkaclients.TextMapExtractAdapter.GETTER;\n+import static io.opentelemetry.trace.Span.Kind.CONSUMER;\n+\n+import io.grpc.Context;\n+import io.opentelemetry.instrumentation.api.tracer.BaseTracer;\n+import io.opentelemetry.trace.Span;\n+import io.opentelemetry.trace.attributes.SemanticAttributes;\n+import java.util.concurrent.TimeUnit;\n+import org.apache.kafka.clients.consumer.ConsumerRecord;\n+import org.apache.kafka.common.record.TimestampType;\n+\n+public class KafkaConsumerTracer extends BaseTracer {\n+  public static final KafkaConsumerTracer TRACER = new KafkaConsumerTracer();\n+\n+  public Span startSpan(ConsumerRecord<?, ?> record) {\n+    long now = System.currentTimeMillis();\n+\n+    Span span =\n+        tracer\n+            .spanBuilder(spanNameOnConsume(record))\n+            .setSpanKind(CONSUMER)\n+            .setParent(extractParent(record))\n+            .setStartTimestamp(TimeUnit.MILLISECONDS.toNanos(now))", "originalCommit": "6a95e499b078f58f81623587d889efb4e2102da3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY1NzY2NQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1297#discussion_r498657665", "bodyText": "It is used later in onConsume method to calculate record.queue_time_ms", "author": "iNikem", "createdAt": "2020-10-02T07:31:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY0NDA3Ng=="}], "type": "inlineReview"}, {"oid": "d8ff31755291f32e8b46c2bcf05c99dfde4257ec", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/d8ff31755291f32e8b46c2bcf05c99dfde4257ec", "message": "Kafka reviewed", "committedDate": "2020-10-02T10:40:28Z", "type": "commit"}, {"oid": "395b6b34cae1f73e4236ef8f9828e4256a358273", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/395b6b34cae1f73e4236ef8f9828e4256a358273", "message": "Kafka Streams reviewed", "committedDate": "2020-10-02T10:40:28Z", "type": "commit"}, {"oid": "3a9dced3199e9fec151bbf0cf3ee51d3e9d2a226", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/3a9dced3199e9fec151bbf0cf3ee51d3e9d2a226", "message": "JMS reviewed", "committedDate": "2020-10-02T10:40:28Z", "type": "commit"}, {"oid": "b6bd7879df25a8217f53be417e4a674ffbec78da", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/b6bd7879df25a8217f53be417e4a674ffbec78da", "message": "RabbitMQ reviewed", "committedDate": "2020-10-02T10:40:28Z", "type": "commit"}, {"oid": "637e030ad7ae6c836e1f40b786043d883e811d7b", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/637e030ad7ae6c836e1f40b786043d883e811d7b", "message": "Format", "committedDate": "2020-10-02T10:40:28Z", "type": "commit"}, {"oid": "924a2f802501d199668db18bf10122df4bf7e276", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/924a2f802501d199668db18bf10122df4bf7e276", "message": "Format", "committedDate": "2020-10-02T10:40:28Z", "type": "commit"}, {"oid": "e542abb72c4adf14cf9ffb91214231fc8d746f63", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/e542abb72c4adf14cf9ffb91214231fc8d746f63", "message": "Polish", "committedDate": "2020-10-02T10:40:28Z", "type": "commit"}, {"oid": "bef7b0ea4ccf2fc5469cb0b0f00a79df2e8719d3", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/bef7b0ea4ccf2fc5469cb0b0f00a79df2e8719d3", "message": "Add comments", "committedDate": "2020-10-02T10:40:28Z", "type": "commit"}, {"oid": "bef7b0ea4ccf2fc5469cb0b0f00a79df2e8719d3", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/bef7b0ea4ccf2fc5469cb0b0f00a79df2e8719d3", "message": "Add comments", "committedDate": "2020-10-02T10:40:28Z", "type": "forcePushed"}, {"oid": "c9d97e3bd07fbe0e053a14bcb5e6f6cef65e3105", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/c9d97e3bd07fbe0e053a14bcb5e6f6cef65e3105", "message": "Merge remote-tracking branch 'upstream/master' into messaging-convention", "committedDate": "2020-10-02T13:44:51Z", "type": "commit"}, {"oid": "89dfb39c3a807a7a6481488d9eb731c6c5063387", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/89dfb39c3a807a7a6481488d9eb731c6c5063387", "message": "Merge remote-tracking branch 'upstream/master' into messaging-convention", "committedDate": "2020-10-11T07:00:33Z", "type": "commit"}, {"oid": "89dfb39c3a807a7a6481488d9eb731c6c5063387", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/89dfb39c3a807a7a6481488d9eb731c6c5063387", "message": "Merge remote-tracking branch 'upstream/master' into messaging-convention", "committedDate": "2020-10-11T07:00:33Z", "type": "forcePushed"}, {"oid": "56f817037296160f3c617c8d65f03f34f07c627b", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/56f817037296160f3c617c8d65f03f34f07c627b", "message": "Update parents as per spec proposal", "committedDate": "2020-10-11T14:08:25Z", "type": "commit"}, {"oid": "c30ce6b8bdb4061c6c4e90e27567935b528bbdb3", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/c30ce6b8bdb4061c6c4e90e27567935b528bbdb3", "message": "Cleanup", "committedDate": "2020-10-11T14:37:28Z", "type": "commit"}, {"oid": "edcc518e0d9c3864b39352562dba0fcd86943719", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/edcc518e0d9c3864b39352562dba0fcd86943719", "message": "Remove Operation enum", "committedDate": "2020-10-12T14:07:32Z", "type": "commit"}, {"oid": "2b5570b89fa53ae1b937b2a8c891d1c2e454df78", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/2b5570b89fa53ae1b937b2a8c891d1c2e454df78", "message": "Merge remote-tracking branch 'upstream/master' into iNikem-messaging-convention", "committedDate": "2020-10-13T02:21:58Z", "type": "commit"}, {"oid": "53fb103fd1f1e95e76ff205e2441a2d19f331b00", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/53fb103fd1f1e95e76ff205e2441a2d19f331b00", "message": "muzzle", "committedDate": "2020-10-13T03:16:20Z", "type": "commit"}, {"oid": "23337bd6b69f6a7b7c5fd5b698110ca18305bbbc", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/23337bd6b69f6a7b7c5fd5b698110ca18305bbbc", "message": "Fix build", "committedDate": "2020-10-13T04:41:43Z", "type": "commit"}, {"oid": "a06e81ff11fb694a9a87e62da276dd7dcd3533e5", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/a06e81ff11fb694a9a87e62da276dd7dcd3533e5", "message": "Polish", "committedDate": "2020-10-13T04:54:52Z", "type": "commit"}, {"oid": "0e01ec0dc667ff4194f1a1f65d1c8e88bc943865", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/0e01ec0dc667ff4194f1a1f65d1c8e88bc943865", "message": "Merge branch 'messaging-convention' of github.com:iNikem/opentelemetry-java-instrumentation into messaging-convention", "committedDate": "2020-10-13T04:55:11Z", "type": "commit"}]}