{"pr_number": 971, "pr_title": "Use startScope() on all HttpClientTracers", "pr_createdAt": "2020-08-14T04:22:39Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/971", "timeline": [{"oid": "b8ef52f3b45c5afc80a1452c6cd8210b27d250fe", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/b8ef52f3b45c5afc80a1452c6cd8210b27d250fe", "message": "Tracers and Setters", "committedDate": "2020-08-14T04:20:27Z", "type": "commit"}, {"oid": "719f3ae513cd8d8e8a36865f92b845c2312674a8", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/719f3ae513cd8d8e8a36865f92b845c2312674a8", "message": "build", "committedDate": "2020-08-14T05:09:17Z", "type": "commit"}, {"oid": "22a41347ae82beea4b25527558ed63974f0f849b", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/22a41347ae82beea4b25527558ed63974f0f849b", "message": "build", "committedDate": "2020-08-14T05:29:16Z", "type": "commit"}, {"oid": "c7c48118a217458d12908acacf553941c6c52061", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/c7c48118a217458d12908acacf553941c6c52061", "message": "remove unused", "committedDate": "2020-08-14T05:39:06Z", "type": "commit"}, {"oid": "35507e38a37982e9af79631e2029f54a643b3e6e", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/35507e38a37982e9af79631e2029f54a643b3e6e", "message": "fix", "committedDate": "2020-08-14T05:42:12Z", "type": "commit"}, {"oid": "ecd0a4b94fb71ab575bdde93c26cfea281250429", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/ecd0a4b94fb71ab575bdde93c26cfea281250429", "message": "Merge remote-tracking branch 'upstream/master' into tracers-and-setters", "committedDate": "2020-08-14T05:54:04Z", "type": "commit"}, {"oid": "6b40b4728b9812ad6a0b89d0ec18a4e7450b8e12", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/6b40b4728b9812ad6a0b89d0ec18a4e7450b8e12", "message": "tests", "committedDate": "2020-08-14T06:25:00Z", "type": "commit"}, {"oid": "437cfe65f0480a044d6cc50b47f909a91b50c27b", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/437cfe65f0480a044d6cc50b47f909a91b50c27b", "message": "Merge remote-tracking branch 'upstream/master' into tracers-and-setters", "committedDate": "2020-08-14T19:28:04Z", "type": "commit"}, {"oid": "bc228a34bac45d65001037f946d8f695306b9efa", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/bc228a34bac45d65001037f946d8f695306b9efa", "message": "more", "committedDate": "2020-08-14T19:42:18Z", "type": "commit"}, {"oid": "4e59c229c3fc3dddd73dc4e3b558a2b813640c08", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/4e59c229c3fc3dddd73dc4e3b558a2b813640c08", "message": "more", "committedDate": "2020-08-14T20:03:53Z", "type": "commit"}, {"oid": "b80c09f7681bfb6310110f586ada761b7abd712c", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/b80c09f7681bfb6310110f586ada761b7abd712c", "message": "more", "committedDate": "2020-08-14T21:08:02Z", "type": "commit"}, {"oid": "bcfe8faf9c5b0a34ce895cacd7d77ec8b8f7d64c", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/bcfe8faf9c5b0a34ce895cacd7d77ec8b8f7d64c", "message": "muzzle", "committedDate": "2020-08-14T21:10:25Z", "type": "commit"}, {"oid": "c1d966e15c11043422b1ce105249c59f32651496", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/c1d966e15c11043422b1ce105249c59f32651496", "message": "muzzle", "committedDate": "2020-08-15T04:25:52Z", "type": "commit"}, {"oid": "766c804f438833b00632a2559b5e6da33a6a3bf7", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/766c804f438833b00632a2559b5e6da33a6a3bf7", "message": "Merge remote-tracking branch 'upstream/master' into tracers-and-setters", "committedDate": "2020-08-15T04:30:36Z", "type": "commit"}, {"oid": "8c67c988e1b116039a2656401417380aaab824bb", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/8c67c988e1b116039a2656401417380aaab824bb", "message": "Revert unrelated change", "committedDate": "2020-08-15T04:43:28Z", "type": "commit"}, {"oid": "8c67c988e1b116039a2656401417380aaab824bb", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/8c67c988e1b116039a2656401417380aaab824bb", "message": "Revert unrelated change", "committedDate": "2020-08-15T04:43:28Z", "type": "forcePushed"}, {"oid": "83b14a02d05afe60c2fa8116f1c5debb8baa8e85", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/83b14a02d05afe60c2fa8116f1c5debb8baa8e85", "message": "build", "committedDate": "2020-08-15T04:50:19Z", "type": "commit"}, {"oid": "9dd438e4e0e4c3d9b65da3834aecbbd2620371e3", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/9dd438e4e0e4c3d9b65da3834aecbbd2620371e3", "message": "Simplify google-http-client", "committedDate": "2020-08-15T04:58:55Z", "type": "commit"}, {"oid": "258bf1afcef8bbbd2eb077ede2ecfb1ed55247ea", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/258bf1afcef8bbbd2eb077ede2ecfb1ed55247ea", "message": "more", "committedDate": "2020-08-15T18:15:31Z", "type": "commit"}, {"oid": "57ac54b748b68f773cb09bd5b790877abac1d913", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/57ac54b748b68f773cb09bd5b790877abac1d913", "message": "more", "committedDate": "2020-08-15T18:44:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDkzNjk2NA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/971#discussion_r470936964", "bodyText": "this call was accidentally lost during conversion from decorator to tracer", "author": "trask", "createdAt": "2020-08-15T04:38:23Z", "path": "instrumentation-core/spring/spring-webflux-5.0/src/main/java/io/opentelemetry/instrumentation/spring/webflux/client/WebClientTracingFilter.java", "diffHunk": "@@ -66,6 +62,7 @@ public static void addFilter(\n               })\n           .doOnCancel(\n               () -> {\n+                TRACER.onCancel(span);", "originalCommit": "c1d966e15c11043422b1ce105249c59f32651496", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTA1MTAwOA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/971#discussion_r471051008", "bodyText": "Is it possible to add a unit test for it?", "author": "anuraaga", "createdAt": "2020-08-16T01:15:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDkzNjk2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTA2NDg1NQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/971#discussion_r471064855", "bodyText": "yeah, good idea, i created #1011 to track this", "author": "trask", "createdAt": "2020-08-16T04:47:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDkzNjk2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTA1MTUzNQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/971#discussion_r471051535", "bodyText": "Kubernetes client is a wrapper in okhttp instrumentation I think. We probably want to refactor this to inherit from the okhttp tracer at some point, assuming it's technical feasible", "author": "anuraaga", "createdAt": "2020-08-16T01:24:13Z", "path": "instrumentation/kubernetes-client-7.0/src/main/java/io/opentelemetry/instrumentation/auto/kubernetesclient/KubernetesClientTracer.java", "diffHunk": "@@ -55,6 +55,7 @@ protected String responseHeader(Response response, String name) {\n \n   @Override\n   protected Setter<Request> getSetter() {\n+    // TODO (trask) no propagation implemented yet?", "originalCommit": "57ac54b748b68f773cb09bd5b790877abac1d913", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTA2NTQ3NQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/971#discussion_r471065475", "bodyText": "Opened #1012", "author": "trask", "createdAt": "2020-08-16T04:55:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTA1MTUzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTA1MTY2MA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/971#discussion_r471051660", "bodyText": "Hmm I remember hoping to have removed this check but bringing it back but don't remember why. Will check it out to try to remember", "author": "anuraaga", "createdAt": "2020-08-16T01:26:05Z", "path": "instrumentation/netty/netty-3.8/src/main/java/io/opentelemetry/instrumentation/auto/netty/v3_8/client/NettyHttpClientTracer.java", "diffHunk": "@@ -22,19 +22,34 @@\n import static org.jboss.netty.handler.codec.http.HttpHeaders.Names.HOST;\n \n import io.grpc.Context;\n-import io.opentelemetry.OpenTelemetry;\n import io.opentelemetry.context.Scope;\n import io.opentelemetry.context.propagation.HttpTextFormat.Setter;\n import io.opentelemetry.instrumentation.api.tracer.HttpClientTracer;\n import io.opentelemetry.trace.Span;\n import java.net.URI;\n import java.net.URISyntaxException;\n+import org.jboss.netty.handler.codec.http.HttpHeaders;\n import org.jboss.netty.handler.codec.http.HttpRequest;\n import org.jboss.netty.handler.codec.http.HttpResponse;\n \n-public class NettyHttpClientTracer extends HttpClientTracer<HttpRequest, HttpResponse> {\n+public class NettyHttpClientTracer\n+    extends HttpClientTracer<HttpRequest, HttpHeaders, HttpResponse> {\n   public static final NettyHttpClientTracer TRACER = new NettyHttpClientTracer();\n \n+  @Override\n+  public Scope startScope(Span span, HttpHeaders headers) {\n+    if (!headers.contains(\"amz-sdk-invocation-id\")) {\n+      return super.startScope(span, headers);\n+    } else {\n+      // TODO (trask) if we move injection up to aws-sdk layer, and start suppressing nested netty", "originalCommit": "57ac54b748b68f773cb09bd5b790877abac1d913", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "facc0b394b35cd425acee05e40ad98afe1451d50", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/facc0b394b35cd425acee05e40ad98afe1451d50", "message": "Merge remote-tracking branch 'upstream/master' into tracers-and-setters", "committedDate": "2020-08-16T05:00:52Z", "type": "commit"}, {"oid": "6cff5407e870546e789023aa3f550af4e608ec68", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/6cff5407e870546e789023aa3f550af4e608ec68", "message": "Merge remote-tracking branch 'upstream/master' into tracers-and-setters", "committedDate": "2020-08-16T05:59:57Z", "type": "commit"}, {"oid": "48e0655ed7e37ae239422cd4fd0c01930f0bb777", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/48e0655ed7e37ae239422cd4fd0c01930f0bb777", "message": "Merge remote-tracking branch 'upstream/master' into tracers-and-setters", "committedDate": "2020-08-16T17:14:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU2NzMzNQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/971#discussion_r471567335", "bodyText": "Are you sure it wouldn't be better HttpClientTracer<Request, Request, Response>?", "author": "iNikem", "createdAt": "2020-08-17T15:42:01Z", "path": "instrumentation/grizzly-client-1.9/src/main/java/io/opentelemetry/instrumentation/auto/grizzly/client/GrizzlyClientTracer.java", "diffHunk": "@@ -16,14 +16,16 @@\n \n package io.opentelemetry.instrumentation.auto.grizzly.client;\n \n+import com.ning.http.client.FluentCaseInsensitiveStringsMap;\n import com.ning.http.client.Request;\n import com.ning.http.client.Response;\n import io.opentelemetry.context.propagation.HttpTextFormat.Setter;\n import io.opentelemetry.instrumentation.api.tracer.HttpClientTracer;\n import java.net.URI;\n import java.net.URISyntaxException;\n \n-public class GrizzlyClientTracer extends HttpClientTracer<Request, Response> {\n+public class GrizzlyClientTracer\n+    extends HttpClientTracer<Request, FluentCaseInsensitiveStringsMap, Response> {", "originalCommit": "48e0655ed7e37ae239422cd4fd0c01930f0bb777", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTY1ODExNg==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/971#discussion_r471658116", "bodyText": "FluentCaseInsensitiveStringsMap most closely represents the HEADERS type, but if you still prefer Request I don't mind and will change it", "author": "trask", "createdAt": "2020-08-17T17:48:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU2NzMzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTcwNzQzNw==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/971#discussion_r471707437", "bodyText": "Yeah, my comments probably actually mean \"are you sure that HEADERS is the best candidate for this new type parameter\"? I have review around half of the changed files and it seems to me that Request is actually enough for like 90%+ cases. Even if actually need a separate type parameter for those 10%, it does not make sense to force that HEADERS name to the letter and use such strange types.\nRename HEADER type to Carrier and use the simplest/most natural type?", "author": "iNikem", "createdAt": "2020-08-17T18:47:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU2NzMzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTcwODY3OA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/971#discussion_r471708678", "bodyText": "oh yes I like renaming HEADERS type to CARRIER will do", "author": "trask", "createdAt": "2020-08-17T18:50:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU2NzMzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg2MDY5MA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/971#discussion_r471860690", "bodyText": "done", "author": "trask", "createdAt": "2020-08-18T01:24:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU2NzMzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU2ODM0Ng==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/971#discussion_r471568346", "bodyText": "I am not sure this change made things better. Why replaces ClientRequest with MultivaluedMap<String, Object> here?", "author": "iNikem", "createdAt": "2020-08-17T15:43:26Z", "path": "instrumentation/jaxrs-client/jaxrs-client-1.1/src/main/java/io/opentelemetry/instrumentation/auto/jaxrsclient/v1_1/InjectAdapter.java", "diffHunk": "@@ -16,15 +16,15 @@\n \n package io.opentelemetry.instrumentation.auto.jaxrsclient.v1_1;\n \n-import com.sun.jersey.api.client.ClientRequest;\n import io.opentelemetry.context.propagation.HttpTextFormat;\n+import javax.ws.rs.core.MultivaluedMap;\n \n-public final class InjectAdapter implements HttpTextFormat.Setter<ClientRequest> {\n+public final class InjectAdapter implements HttpTextFormat.Setter<MultivaluedMap<String, Object>> {\n \n   public static final InjectAdapter SETTER = new InjectAdapter();\n \n   @Override\n-  public void set(ClientRequest clientRequest, String key, String value) {\n-    clientRequest.getHeaders().putSingle(key, value);\n+  public void set(MultivaluedMap<String, Object> carrier, String key, String value) {", "originalCommit": "48e0655ed7e37ae239422cd4fd0c01930f0bb777", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTY1ODE3NA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/971#discussion_r471658174", "bodyText": "same", "author": "trask", "createdAt": "2020-08-17T17:48:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU2ODM0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg2MDcyNQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/971#discussion_r471860725", "bodyText": "and done", "author": "trask", "createdAt": "2020-08-18T01:24:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU2ODM0Ng=="}], "type": "inlineReview"}, {"oid": "ce45ba0403638f165473fc7c8fecf02b18e3523f", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/ce45ba0403638f165473fc7c8fecf02b18e3523f", "message": "Rename HEADERS to CARRIER", "committedDate": "2020-08-17T19:25:17Z", "type": "commit"}, {"oid": "83ffab161cf5e7c4b54b3677069860ae1984dd01", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/83ffab161cf5e7c4b54b3677069860ae1984dd01", "message": "Don't use weird carrier types", "committedDate": "2020-08-17T19:28:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTkyNDQ3Nw==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/971#discussion_r471924477", "bodyText": "Carrier can be ClientRequestContext here as well", "author": "iNikem", "createdAt": "2020-08-18T05:33:59Z", "path": "instrumentation/jaxrs-client/jaxrs-client-2.0/src/main/java/io/opentelemetry/instrumentation/auto/jaxrsclient/v2_0/JaxRsClientTracer.java", "diffHunk": "@@ -16,14 +16,17 @@\n \n package io.opentelemetry.instrumentation.auto.jaxrsclient.v2_0;\n \n+import static io.opentelemetry.instrumentation.auto.jaxrsclient.v2_0.InjectAdapter.SETTER;\n+\n import io.opentelemetry.context.propagation.HttpTextFormat.Setter;\n import io.opentelemetry.instrumentation.api.tracer.HttpClientTracer;\n import java.net.URI;\n import javax.ws.rs.client.ClientRequestContext;\n import javax.ws.rs.client.ClientResponseContext;\n+import javax.ws.rs.core.MultivaluedMap;\n \n public class JaxRsClientTracer\n-    extends HttpClientTracer<ClientRequestContext, ClientResponseContext> {\n+    extends HttpClientTracer<ClientRequestContext, MultivaluedMap, ClientResponseContext> {", "originalCommit": "83ffab161cf5e7c4b54b3677069860ae1984dd01", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "225883fab365550195cc21c5647fb8e324953339", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/225883fab365550195cc21c5647fb8e324953339", "message": "Merge remote-tracking branch 'upstream/master' into tracers-and-setters", "committedDate": "2020-08-18T23:00:02Z", "type": "commit"}, {"oid": "9bfcb28885e27071afd13eb3ab2b4426cc9fd38a", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/9bfcb28885e27071afd13eb3ab2b4426cc9fd38a", "message": "feedback", "committedDate": "2020-08-18T23:01:12Z", "type": "commit"}, {"oid": "ce64a1eeeab73e89d6d09d03c22fba4572883374", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/ce64a1eeeab73e89d6d09d03c22fba4572883374", "message": "fix", "committedDate": "2020-08-18T23:07:38Z", "type": "commit"}]}