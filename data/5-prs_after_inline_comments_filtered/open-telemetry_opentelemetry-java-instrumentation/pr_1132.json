{"pr_number": 1132, "pr_title": "Add support for redisson instrumentation", "pr_createdAt": "2020-08-30T04:47:24Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1132", "timeline": [{"oid": "66d37c78baedd95b282045cf60635063b0c56500", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/66d37c78baedd95b282045cf60635063b0c56500", "message": "Add support for redisson instrumentation", "committedDate": "2020-08-30T04:46:24Z", "type": "commit"}, {"oid": "79d8790edf0bb79d2e6618d1495a178f6f36f37f", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/79d8790edf0bb79d2e6618d1495a178f6f36f37f", "message": "Fix ci", "committedDate": "2020-08-30T05:00:10Z", "type": "commit"}, {"oid": "d1864a995399939f956b97a887fd7fa585d1db57", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/d1864a995399939f956b97a887fd7fa585d1db57", "message": "Implement dbConnectionString", "committedDate": "2020-08-30T05:20:35Z", "type": "commit"}, {"oid": "bf5408666536aee79fdcb1f2b25847ba912ddd2e", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/bf5408666536aee79fdcb1f2b25847ba912ddd2e", "message": "Fix review", "committedDate": "2020-08-30T07:00:25Z", "type": "commit"}, {"oid": "1600ec6e51e6b01351b1c6d1ee065b5934e2cf3e", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/1600ec6e51e6b01351b1c6d1ee065b5934e2cf3e", "message": "Remove assertInverse = true", "committedDate": "2020-08-30T11:03:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTg0NjI4NQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1132#discussion_r479846285", "bodyText": "I don't think we do any truncation in other places, like Lettuce or DB instrumentation. It probably is a good idea but we should do it consistently for all the instrumentation, how about storing everything for now?", "author": "anuraaga", "createdAt": "2020-08-31T01:30:23Z", "path": "instrumentation/redisson-3.0/src/main/java/io/opentelemetry/instrumentation/auto/redisson/RedissonClientTracer.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.instrumentation.auto.redisson;\n+\n+import io.netty.channel.Channel;\n+import io.opentelemetry.instrumentation.api.tracer.DatabaseClientTracer;\n+import io.opentelemetry.instrumentation.auto.api.jdbc.DbSystem;\n+import java.net.InetSocketAddress;\n+import java.util.List;\n+import org.redisson.client.RedisConnection;\n+import org.redisson.client.protocol.CommandData;\n+import org.redisson.client.protocol.CommandsData;\n+\n+public class RedissonClientTracer extends DatabaseClientTracer<RedisConnection, Object> {\n+\n+  public static final RedissonClientTracer TRACER = new RedissonClientTracer();\n+\n+  @Override\n+  protected String getInstrumentationName() {\n+    return \"io.opentelemetry.auto.redisson-3.0\";\n+  }\n+\n+  @Override\n+  protected String normalizeQuery(Object args) {\n+    String commandName = \"Redis Command\";\n+    // get command\n+    if (args instanceof CommandsData) {\n+      List<CommandData<?, ?>> commands = ((CommandsData) args).getCommands();\n+      if (commands != null && !commands.isEmpty()) {\n+        commandName = commands.get(0).getCommand().getName() + \"... [bulk]\";", "originalCommit": "1600ec6e51e6b01351b1c6d1ee065b5934e2cf3e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTg4ODA0Mw==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1132#discussion_r479888043", "bodyText": "Java SDK already supports truncating too large attributes. So this better be left to them :)", "author": "iNikem", "createdAt": "2020-08-31T04:58:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTg0NjI4NQ=="}], "type": "inlineReview"}, {"oid": "ecb8e62275c92e68081ec6082334ac763de4f55d", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/ecb8e62275c92e68081ec6082334ac763de4f55d", "message": "Fix batch commands and Add Redisson Async Test", "committedDate": "2020-08-31T13:09:49Z", "type": "commit"}, {"oid": "c2baa5c958e7b3c4100c8bf935e763fcbadab461", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/c2baa5c958e7b3c4100c8bf935e763fcbadab461", "message": "Fix codenarcTest", "committedDate": "2020-08-31T13:17:02Z", "type": "commit"}]}