{"pr_number": 2195, "pr_title": "Form submissions Scheduling", "pr_createdAt": "2020-03-05T13:16:22Z", "pr_url": "https://github.com/dimagi/commcare-android/pull/2195", "timeline": [{"oid": "228ada6ee6feaaa9805381e132c3056fe8a8190a", "url": "https://github.com/dimagi/commcare-android/commit/228ada6ee6feaaa9805381e132c3056fe8a8190a", "message": "Merge pull request #2221 from dimagi/labelRequiredQuestion\n\nLabel required questions with a red asterisk", "committedDate": "2020-04-16T19:34:00Z", "type": "commit"}, {"oid": "39550bdf4f93888e17a0d74dd9e509a6603eabce", "url": "https://github.com/dimagi/commcare-android/commit/39550bdf4f93888e17a0d74dd9e509a6603eabce", "message": "Merge branch 'master' into formSubmissionsScheduling", "committedDate": "2020-04-18T10:54:01Z", "type": "commit"}, {"oid": "32aaf0774baec7fcb676ceaef1b22c96dbd48ed0", "url": "https://github.com/dimagi/commcare-android/commit/32aaf0774baec7fcb676ceaef1b22c96dbd48ed0", "message": "Set background work to be disabled for 36 hours after the heartbeat flag is set", "committedDate": "2020-04-18T11:13:05Z", "type": "commit"}, {"oid": "5eb5d03e189f67e2ebdd34ea2ee577ed7172bf9d", "url": "https://github.com/dimagi/commcare-android/commit/5eb5d03e189f67e2ebdd34ea2ee577ed7172bf9d", "message": "better constant", "committedDate": "2020-04-18T11:15:51Z", "type": "commit"}, {"oid": "b7da9ee95771d79bbf820316fd24c24da45ba455", "url": "https://github.com/dimagi/commcare-android/commit/b7da9ee95771d79bbf820316fd24c24da45ba455", "message": "Repackage ProcessAndSendTak in sync module", "committedDate": "2020-02-04T13:44:38Z", "type": "commit"}, {"oid": "003444348497b47ca2713cbbe5d2417bb039392f", "url": "https://github.com/dimagi/commcare-android/commit/003444348497b47ca2713cbbe5d2417bb039392f", "message": "Refactors ProcessAndSendTask to use FormSubmissionHelper", "committedDate": "2020-02-17T10:56:07Z", "type": "commit"}, {"oid": "bac133edb564396488f83e5ab67a835c22fa8252", "url": "https://github.com/dimagi/commcare-android/commit/bac133edb564396488f83e5ab67a835c22fa8252", "message": "Makes unsent records calculation part of the background work", "committedDate": "2020-02-20T04:23:06Z", "type": "commit"}, {"oid": "1ecdf9960b59a5b9a53fb95bc06ff240a524b644", "url": "https://github.com/dimagi/commcare-android/commit/1ecdf9960b59a5b9a53fb95bc06ff240a524b644", "message": "Schedules Form Submission Work Request", "committedDate": "2020-02-20T06:15:07Z", "type": "commit"}, {"oid": "0005d3fe6489b1c854a4fe6b1c8a46b8f4ff61d3", "url": "https://github.com/dimagi/commcare-android/commit/0005d3fe6489b1c854a4fe6b1c8a46b8f4ff61d3", "message": "Update notifcation from form submission worker", "committedDate": "2020-02-21T09:36:12Z", "type": "commit"}, {"oid": "7f8d987761a501aa0791075ed4ca5b8b19bb7bc5", "url": "https://github.com/dimagi/commcare-android/commit/7f8d987761a501aa0791075ed4ca5b8b19bb7bc5", "message": "corrects manifest version for backmerge", "committedDate": "2020-03-03T04:41:40Z", "type": "commit"}, {"oid": "0dc8784b1efbbb55f5c0fcbc654e15aa6f064d28", "url": "https://github.com/dimagi/commcare-android/commit/0dc8784b1efbbb55f5c0fcbc654e15aa6f064d28", "message": "corrects version for backmerge.", "committedDate": "2020-03-03T04:43:41Z", "type": "commit"}, {"oid": "c3647afb24a3d4802d2a467a811587cb79fe28a4", "url": "https://github.com/dimagi/commcare-android/commit/c3647afb24a3d4802d2a467a811587cb79fe28a4", "message": "Merge pull request #2189 from dimagi/commcare_2.47\n\nBackmerging 2.47.6 hotfix in Commcare 2.48", "committedDate": "2020-03-03T04:47:13Z", "type": "commit"}, {"oid": "2453a78aeb635eeb69086926904cf06972fb44b3", "url": "https://github.com/dimagi/commcare-android/commit/2453a78aeb635eeb69086926904cf06972fb44b3", "message": "Disable retries on rate limiting", "committedDate": "2020-03-03T06:13:43Z", "type": "commit"}, {"oid": "25c9b638de6cea1cd077c62ccc9d00c13c69aea2", "url": "https://github.com/dimagi/commcare-android/commit/25c9b638de6cea1cd077c62ccc9d00c13c69aea2", "message": "Merge pull request #2190 from dimagi/tuningUpdatesForRateLimiting\n\nDisable retries on getting rate limited on individual resource requests", "committedDate": "2020-03-03T16:42:53Z", "type": "commit"}, {"oid": "9f67708665c98a2679e1e92da86456908eb0a242", "url": "https://github.com/dimagi/commcare-android/commit/9f67708665c98a2679e1e92da86456908eb0a242", "message": "Fix an npe while trying to get data from null intent", "committedDate": "2020-03-04T07:28:52Z", "type": "commit"}, {"oid": "58b11115206038256d4af62a8549a09819ec9e00", "url": "https://github.com/dimagi/commcare-android/commit/58b11115206038256d4af62a8549a09819ec9e00", "message": "Merge branch 'master' into formSubmissionsScheduling", "committedDate": "2020-03-05T12:37:06Z", "type": "commit"}, {"oid": "ed89492e121dd2ca77f432614e652b408f49c934", "url": "https://github.com/dimagi/commcare-android/commit/ed89492e121dd2ca77f432614e652b408f49c934", "message": "removes syncPending var", "committedDate": "2020-03-05T12:40:45Z", "type": "commit"}, {"oid": "1650f8b21ebe7088a3524bcd06bee9781ec5cb55", "url": "https://github.com/dimagi/commcare-android/commit/1650f8b21ebe7088a3524bcd06bee9781ec5cb55", "message": "Give priority to the new sync flag", "committedDate": "2020-03-05T12:51:51Z", "type": "commit"}, {"oid": "8fc4466b53a74d54268d70109537c70b1e899cb3", "url": "https://github.com/dimagi/commcare-android/commit/8fc4466b53a74d54268d70109537c70b1e899cb3", "message": "Merge branch 'autoUpdateScheduling' into formSubmissionsScheduling", "committedDate": "2020-03-05T13:15:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI5MDczMg==", "url": "https://github.com/dimagi/commcare-android/pull/2195#discussion_r388290732", "bodyText": "Moved to formSubmissionHelper", "author": "shubham1g5", "createdAt": "2020-03-05T13:26:32Z", "path": "app/src/org/commcare/activities/FormAndDataSyncer.java", "diffHunk": "@@ -36,39 +36,29 @@\n  */\n public class FormAndDataSyncer {\n \n-    public FormAndDataSyncer() {\n+    protected FormAndDataSyncer() {\n     }\n \n-    /**\n-     * @return Were forms sent to the server by this method invocation?\n-     */\n-    public boolean checkAndStartUnsentFormsTask(SyncCapableCommCareActivity activity,\n-                                                final boolean syncAfterwards,\n-                                                boolean userTriggered) {\n-        SqlStorage<FormRecord> storage = CommCareApplication.instance().getUserStorage(FormRecord.class);\n-        FormRecord[] records = StorageUtils.getUnsentRecordsForCurrentApp(storage);\n+\n+    void startUnsentFormsTask(SyncCapableCommCareActivity activity,\n+                              final boolean syncAfterwards,\n+                              boolean userTriggered) {\n \n         // We only want to update the last upload sync time when it's a blocking sync\n         if (syncAfterwards) {\n             HiddenPreferences.updateLastUploadSyncAttemptTime();\n         }\n \n-        if (records.length > 0) {", "originalCommit": "8fc4466b53a74d54268d70109537c70b1e899cb3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI5MTQyNg==", "url": "https://github.com/dimagi/commcare-android/pull/2195#discussion_r388291426", "bodyText": "Moved to FormSubmissionHelper", "author": "shubham1g5", "createdAt": "2020-03-05T13:27:56Z", "path": "app/src/org/commcare/activities/FormAndDataSyncer.java", "diffHunk": "@@ -142,14 +132,9 @@ protected void handleCancellation(SyncCapableCommCareActivity receiver) {\n         }\n \n         processAndSendTask.connect(activity);\n-        processAndSendTask.executeParallel(records);\n+        processAndSendTask.executeParallel();\n     }\n \n-    private static String getFormPostURL(final Context context) {", "originalCommit": "8fc4466b53a74d54268d70109537c70b1e899cb3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI5ODAyNg==", "url": "https://github.com/dimagi/commcare-android/pull/2195#discussion_r388298026", "bodyText": "we now return a success result from upload forms task in case the # of forms to upload is 0 which in turn triggers the data pull.", "author": "shubham1g5", "createdAt": "2020-03-05T13:40:02Z", "path": "app/src/org/commcare/activities/SyncCapableCommCareActivity.java", "diffHunk": "@@ -75,15 +75,12 @@ public void onAttachedToWindow() {\n      * triggered after they are submitted. If no forms are sent, triggers a sync explicitly.\n      */\n     protected void sendFormsOrSync(boolean userTriggeredSync) {\n-        boolean formsSentToServer = checkAndStartUnsentFormsTask(true, userTriggeredSync);\n-        if (!formsSentToServer) {", "originalCommit": "8fc4466b53a74d54268d70109537c70b1e899cb3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a5d61dec3abb5d8ffa0b9d05194dce8fca501d03", "url": "https://github.com/dimagi/commcare-android/commit/a5d61dec3abb5d8ffa0b9d05194dce8fca501d03", "message": "Removes cancel on no filed found for the form as we may wanna continue to upload other forms", "committedDate": "2020-03-05T14:37:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM0MDA5NQ==", "url": "https://github.com/dimagi/commcare-android/pull/2195#discussion_r388340095", "bodyText": "Removed this since we should not cancel upload for all forms because of an error with a single form and allow code to follow the error handling here for this case.", "author": "shubham1g5", "createdAt": "2020-03-05T14:47:59Z", "path": "app/src/org/commcare/utils/FormUploadUtil.java", "diffHunk": "@@ -134,13 +128,12 @@ public static FormUploadResult sendInstance(int submissionNumber, File folder,\n         // If we're listening, figure out how much (roughly) we have to send\n         long bytes = estimateUploadBytes(files);\n \n-        if (hasListener) {\n-            myListener.startSubmission(submissionNumber, bytes);\n+        if (listener != null) {\n+            listener.startSubmission(submissionNumber, bytes);\n         }\n \n         if (files.length == 0) {\n             Log.e(TAG, \"no files to upload\");\n-            listener.cancel(true);", "originalCommit": "a5d61dec3abb5d8ffa0b9d05194dce8fca501d03", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM4OTU1Ng==", "url": "https://github.com/dimagi/commcare-android/pull/2195#discussion_r393389556", "bodyText": "Hey,\nI'm a bit confused about how your comment matches up with the code it's attached to.\nSpecifically: There are lots of situations where we should cancel an upload because of an error with a single form. If there's a form we're having issues with that we don't understand, if we block submission we retain the synchronicity between the mobile and the server until we can correct it. If we let stuff through we risk letting the phone and server drift significantly.\nIf what you're saying is that for this particular error we are going to end up moving on / quarantining/ otherwise deleting the record anyway, that makes sense to me for this just not being the right place to cancel the upload (but to let that logic propagate up the stack naturally).", "author": "ctsims", "createdAt": "2020-03-17T00:58:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM0MDA5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI4MTI0MA==", "url": "https://github.com/dimagi/commcare-android/pull/2195#discussion_r394281240", "bodyText": "Specifically: There are lots of situations where we should cancel an upload because of an error with a single form. If there's a form we're having issues with that we don't understand, if we block submission we retain the synchronicity between the mobile and the server until we can correct it. If we let stuff through we risk letting the phone and server drift significantly.\n\n@ctsims Agree that we might want to cancel the whole task in some specific error in a single form. Though talking specifically for this case, the error handling  (I put a wrong link earlier) seems more robust as it takes into account whether the FNF is due to storage not being available or not and halt/continue the form upload for all forms depending on that which seems more robust to me than cancelling the task in all cases. Would we still want to cancel the upload for all forms even if the issue is with one form for the sake of mobile server parity ?", "author": "shubham1g5", "createdAt": "2020-03-18T11:35:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM0MDA5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkyOTk3Nw==", "url": "https://github.com/dimagi/commcare-android/pull/2195#discussion_r400929977", "bodyText": "@ctsims  bump", "author": "shubham1g5", "createdAt": "2020-03-31T13:51:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM0MDA5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg2MzA4NA==", "url": "https://github.com/dimagi/commcare-android/pull/2195#discussion_r401863084", "bodyText": "@shubham1g5 You are right that it looks like the general form processing loop will catch a FileNotfound error correctly if storage isn't available, so agreed that we can let it propagate and not catch it redundantly..", "author": "ctsims", "createdAt": "2020-04-01T19:40:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM0MDA5NQ=="}], "type": "inlineReview"}, {"oid": "f7491b878487ac649d4d3e38a52cef73b6ae947a", "url": "https://github.com/dimagi/commcare-android/commit/f7491b878487ac649d4d3e38a52cef73b6ae947a", "message": "Merge pull request #2194 from dimagi/pendingSyncFix\n\nChanges Sync Pending calculation to give AUTO_SYNC_FREQUENCY priority over cc-auto-update", "committedDate": "2020-03-05T18:27:41Z", "type": "commit"}, {"oid": "d0c2462f19b91d380a052c7aaa4bcc5e1fac0bfc", "url": "https://github.com/dimagi/commcare-android/commit/d0c2462f19b91d380a052c7aaa4bcc5e1fac0bfc", "message": "Immediately update saved form when attachment is changed", "committedDate": "2020-03-05T20:22:56Z", "type": "commit"}, {"oid": "e484a929bab1d4c05041c8c2bb779ce8d9e35a4d", "url": "https://github.com/dimagi/commcare-android/commit/e484a929bab1d4c05041c8c2bb779ce8d9e35a4d", "message": "Update form to disk immediately when image is removed", "committedDate": "2020-03-05T20:22:56Z", "type": "commit"}, {"oid": "0f13ea48503681864721e131bbc418bbd4be242f", "url": "https://github.com/dimagi/commcare-android/commit/0f13ea48503681864721e131bbc418bbd4be242f", "message": "Add suggested changes", "committedDate": "2020-03-05T20:22:56Z", "type": "commit"}, {"oid": "6cb574e0eb19a5c293ded515a8468ab770591e21", "url": "https://github.com/dimagi/commcare-android/commit/6cb574e0eb19a5c293ded515a8468ab770591e21", "message": "Update saved form to disk everytime the image widget is changed", "committedDate": "2020-03-05T20:22:56Z", "type": "commit"}, {"oid": "30b371139ee2b883dd80ea67eac963862c104149", "url": "https://github.com/dimagi/commcare-android/commit/30b371139ee2b883dd80ea67eac963862c104149", "message": "Merge pull request #2192 from dimagi/fix-missing-attachment\n\nFix mismatched attachments while editing a saved form", "committedDate": "2020-03-05T21:21:27Z", "type": "commit"}, {"oid": "96c26ce226d5b1fdf448b9b23cb5d9e1e3917a58", "url": "https://github.com/dimagi/commcare-android/commit/96c26ce226d5b1fdf448b9b23cb5d9e1e3917a58", "message": "Fix tests", "committedDate": "2020-03-08T06:15:31Z", "type": "commit"}, {"oid": "7f85c618b7c43283aedd3e2e2795a14195f354d7", "url": "https://github.com/dimagi/commcare-android/commit/7f85c618b7c43283aedd3e2e2795a14195f354d7", "message": "Adds flag to disable work manager tasks", "committedDate": "2020-03-11T12:25:05Z", "type": "commit"}, {"oid": "f3e63e90eecd855a47579eada20948ef466c5738", "url": "https://github.com/dimagi/commcare-android/commit/f3e63e90eecd855a47579eada20948ef466c5738", "message": "Backs off in case of rate limiting", "committedDate": "2020-03-11T12:56:11Z", "type": "commit"}, {"oid": "e647fe50494e70945865f0e66980b13f7844a113", "url": "https://github.com/dimagi/commcare-android/commit/e647fe50494e70945865f0e66980b13f7844a113", "message": "Removes the explicit trigger for sending forms on login as it should be triggered by Work Manager in timely fashion now", "committedDate": "2020-03-11T13:51:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM4ODA3OA==", "url": "https://github.com/dimagi/commcare-android/pull/2195#discussion_r393388078", "bodyText": "How long does this last? Until the flag is reset?\nI think it might make sense for this to trigger a \"cooldown\" (IE: 1-7 day period where we don't try) rather than a permanent off switch, although I could see it working either way. Mostly it's sometimes harder than it seems for HQ to maintain state or update certain hooks, so the less we rely on them the better", "author": "ctsims", "createdAt": "2020-03-17T00:52:35Z", "path": "app/src/org/commcare/heartbeat/HeartbeatRequester.java", "diffHunk": "@@ -96,10 +98,20 @@ public void parseResponse(JSONObject responseAsJson) {\n             attemptApkUpdateParse(responseAsJson);\n             attemptCczUpdateParse(responseAsJson);\n             checkForForceLogs(responseAsJson);\n+            checkForDisableBackgroundWork(responseAsJson);\n         }\n         DriftHelper.clearMaxDriftSinceLastHeartbeat();\n     }\n \n+    private void checkForDisableBackgroundWork(JSONObject responseAsJson) {\n+        boolean disableBackgroundWork = responseAsJson.optBoolean(\"disable_background_work\", false);\n+        HiddenPreferences.setDisableBackgroundWork(disableBackgroundWork);", "originalCommit": "e647fe50494e70945865f0e66980b13f7844a113", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI4ODk0OQ==", "url": "https://github.com/dimagi/commcare-android/pull/2195#discussion_r394288949", "bodyText": "Right. it makes most sense then to enable these on next login in that case and then disable again if the flag in heartbeat still conveys that we should stop ?", "author": "shubham1g5", "createdAt": "2020-03-18T11:50:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM4ODA3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkzMDA5MA==", "url": "https://github.com/dimagi/commcare-android/pull/2195#discussion_r400930090", "bodyText": "@ctsims  bump", "author": "shubham1g5", "createdAt": "2020-03-31T13:51:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM4ODA3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg2NDUzNA==", "url": "https://github.com/dimagi/commcare-android/pull/2195#discussion_r401864534", "bodyText": "I'm not sure how many phones successfully get a heartbeat every day (and when in the day they get it if they do, some CAS users get their heartbeat in the afternoon), so it might be worth waiting slightly longer than a day, but the pattern you describe sounds right.", "author": "ctsims", "createdAt": "2020-04-01T19:42:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM4ODA3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY4NDg0NA==", "url": "https://github.com/dimagi/commcare-android/pull/2195#discussion_r410684844", "bodyText": "@ctsims Changed the behaviour for work to be disabled for 36 hours since the phone encounters the heartbeat flag to disable background work.", "author": "shubham1g5", "createdAt": "2020-04-18T11:18:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM4ODA3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM4ODYxNg==", "url": "https://github.com/dimagi/commcare-android/pull/2195#discussion_r393388616", "bodyText": "Increasingly it does seem like there's a lot of value to us splitting out the logic / workflow part of these async jobs from the actual async executor (the worker or the task), great job iterating and piloting that in the previous work. It's a good pattern for just o build on.\nCan you make sure to provide Javadocs for these classes spelling out those delegations of responsibility?", "author": "ctsims", "createdAt": "2020-03-17T00:54:57Z", "path": "app/src/org/commcare/sync/FormSubmissionHelper.java", "diffHunk": "@@ -1,628 +1,572 @@\n-package org.commcare.tasks;\r\n-\r\n-import android.content.Context;\r\n-import android.os.AsyncTask;\r\n-\r\n-import net.sqlcipher.database.SQLiteDatabase;\r\n-\r\n-import org.apache.commons.lang3.StringUtils;\r\n-import org.commcare.CommCareApplication;\r\n-import org.commcare.activities.SyncCapableCommCareActivity;\r\n-import org.commcare.android.database.user.models.FormRecord;\r\n-import org.commcare.models.FormRecordProcessor;\r\n-import org.commcare.suite.model.Profile;\r\n-import org.commcare.tasks.templates.CommCareTask;\r\n-import org.commcare.tasks.templates.CommCareTaskConnector;\r\n-import org.commcare.util.LogTypes;\r\n-import org.commcare.utils.FormUploadResult;\r\n-import org.commcare.utils.FormUploadUtil;\r\n-import org.commcare.utils.QuarantineUtil;\r\n-import org.commcare.utils.SessionUnavailableException;\r\n-import org.commcare.views.notifications.NotificationMessage;\r\n-import org.commcare.views.notifications.NotificationMessageFactory;\r\n-import org.commcare.views.notifications.ProcessIssues;\r\n-import org.javarosa.core.model.User;\r\n-import org.javarosa.core.services.Logger;\r\n-import org.javarosa.core.services.locale.Localization;\r\n-import org.javarosa.xml.util.InvalidStructureException;\r\n-import org.javarosa.xml.util.UnfullfilledRequirementsException;\r\n-import org.xmlpull.v1.XmlPullParserException;\r\n-\r\n-import java.io.ByteArrayOutputStream;\r\n-import java.io.File;\r\n-import java.io.FileNotFoundException;\r\n-import java.io.IOException;\r\n-import java.io.PrintStream;\r\n-import java.util.ArrayList;\r\n-import java.util.LinkedList;\r\n-import java.util.List;\r\n-import java.util.Queue;\r\n-\r\n-import javax.crypto.spec.SecretKeySpec;\r\n-\r\n-/**\r\n- * @author ctsims\r\n- */\r\n-public abstract class ProcessAndSendTask<R> extends CommCareTask<FormRecord, Long, FormUploadResult, R> implements DataSubmissionListener {\r\n-\r\n-    private String url;\r\n-    private FormUploadResult[] results;\r\n-\r\n-    private final int sendTaskId;\r\n-\r\n-    public static final int PROCESSING_PHASE_ID = 8;\r\n-    public static final int SEND_PHASE_ID = 9;\r\n-    public static final int PROCESSING_PHASE_ID_NO_DIALOG = -8;\r\n-    public static final int SEND_PHASE_ID_NO_DIALOG = -9;\r\n-\r\n-    public static final long PROGRESS_ALL_PROCESSED = 8;\r\n-\r\n-    public static final long SUBMISSION_BEGIN = 16;\r\n-    public static final long SUBMISSION_START = 32;\r\n-    public static final long SUBMISSION_NOTIFY = 64;\r\n-    public static final long SUBMISSION_DONE = 128;\r\n-\r\n-    private static final long SUBMISSION_SUCCESS = 1;\r\n-    private static final long SUBMISSION_FAIL = 0;\r\n-\r\n-    private FormSubmissionProgressBarListener progressBarListener;\r\n-    private List<DataSubmissionListener> formSubmissionListeners;\r\n-    private final FormRecordProcessor processor;\r\n-\r\n-    private static final int SUBMISSION_ATTEMPTS = 2;\r\n-\r\n-    private static final Queue<ProcessAndSendTask> processTasks = new LinkedList<>();\r\n-\r\n-    public ProcessAndSendTask(Context c, String url) {\r\n-        this(c, url, true);\r\n-    }\r\n-\r\n-    /**\r\n-     * @param inSyncMode blocks the user with a sync dialog\r\n-     */\r\n-    public ProcessAndSendTask(Context c, String url, boolean inSyncMode) {\r\n-        this.url = url;\r\n-        this.processor = new FormRecordProcessor(c);\r\n-        this.formSubmissionListeners = new ArrayList<>();\r\n-        if (inSyncMode) {\r\n-            this.sendTaskId = SEND_PHASE_ID;\r\n-            this.taskId = PROCESSING_PHASE_ID;\r\n-        } else {\r\n-            this.sendTaskId = SEND_PHASE_ID_NO_DIALOG;\r\n-            this.taskId = PROCESSING_PHASE_ID_NO_DIALOG;\r\n-        }\r\n-    }\r\n-\r\n-    @Override\r\n-    protected FormUploadResult doTaskBackground(FormRecord... records) {\r\n-        boolean wroteErrorToLogs = false;\r\n-        try {\r\n-            results = new FormUploadResult[records.length];\r\n-            for (int i = 0; i < records.length; ++i) {\r\n-                //Assume failure\r\n-                results[i] = FormUploadResult.FAILURE;\r\n-            }\r\n-            //The first thing we need to do is make sure everything is processed,\r\n-            //we can't actually proceed before that.\r\n-            try {\r\n-                wroteErrorToLogs = checkFormRecordStatus(records);\r\n-            } catch (FileNotFoundException e) {\r\n-                return FormUploadResult.PROGRESS_SDCARD_REMOVED;\r\n-            } catch (TaskCancelledException e) {\r\n-                return FormUploadResult.FAILURE;\r\n-            }\r\n-\r\n-\r\n-            this.publishProgress(PROGRESS_ALL_PROCESSED);\r\n-\r\n-            //Put us on the queue!\r\n-            synchronized (processTasks) {\r\n-                processTasks.add(this);\r\n-            }\r\n-            boolean needToRefresh;\r\n-            try {\r\n-                needToRefresh = blockUntilTopOfQueue();\r\n-            } catch (TaskCancelledException e) {\r\n-                return FormUploadResult.FAILURE;\r\n-            }\r\n-\r\n-\r\n-            if (needToRefresh) {\r\n-                //There was another activity before this one. Refresh our models in case\r\n-                //they were updated\r\n-                for (int i = 0; i < records.length; ++i) {\r\n-                    int dbId = records[i].getID();\r\n-                    records[i] = processor.getRecord(dbId);\r\n-                }\r\n-            }\r\n-\r\n-            // Ok, all forms are now processed. Time to focus on sending\r\n-            dispatchBeginSubmissionProcessToListeners(records.length);\r\n-\r\n-            try {\r\n-                sendForms(records);\r\n-            } catch (TaskCancelledException e) {\r\n-                return FormUploadResult.FAILURE;\r\n-            }\r\n-\r\n-            return FormUploadResult.getWorstResult(results);\r\n-        } catch (SessionUnavailableException sue) {\r\n-            this.cancel(false);\r\n-            return FormUploadResult.PROGRESS_LOGGED_OUT;\r\n-        } finally {\r\n-            boolean success =\r\n-                    FormUploadResult.FULL_SUCCESS.equals(FormUploadResult.getWorstResult(results));\r\n-            this.endSubmissionProcess(success);\r\n-\r\n-            synchronized (processTasks) {\r\n-                processTasks.remove(this);\r\n-            }\r\n-\r\n-            if (success || wroteErrorToLogs) {\r\n-                // Try to send logs if we either know we have a good connection, or know we wrote\r\n-                // an error to the logs during form submission attempt\r\n-                CommCareApplication.instance().notifyLogsPending();\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    private boolean checkFormRecordStatus(FormRecord[] records)\r\n-            throws FileNotFoundException, TaskCancelledException {\r\n-        boolean wroteErrorToLogs = false;\r\n-        processor.beginBulkSubmit();\r\n-        for (int i = 0; i < records.length; ++i) {\r\n-            if (isCancelled()) {\r\n-                throw new TaskCancelledException();\r\n-            }\r\n-            FormRecord record = records[i];\r\n-\r\n-            //If the form is complete, but unprocessed, process it.\r\n-            if (FormRecord.STATUS_COMPLETE.equals(record.getStatus())) {\r\n-                SQLiteDatabase userDb =\r\n-                        CommCareApplication.instance().getUserDbHandle();\r\n-                try {\r\n-                    userDb.beginTransaction();\r\n-                    try {\r\n-                        records[i] = processor.process(record);\r\n-                        userDb.setTransactionSuccessful();\r\n-                    } finally {\r\n-                        userDb.endTransaction();\r\n-                    }\r\n-                } catch (InvalidStructureException | XmlPullParserException |\r\n-                        UnfullfilledRequirementsException e) {\r\n-                    records[i] = handleExceptionFromFormProcessing(record, e);\r\n-                    wroteErrorToLogs = true;\r\n-                } catch (FileNotFoundException e) {\r\n-                    if (CommCareApplication.instance().isStorageAvailable()) {\r\n-                        //If storage is available generally, this is a bug in the app design\r\n-                        Logger.log(LogTypes.TYPE_ERROR_DESIGN,\r\n-                                \"Removing form record because file was missing|\" + getExceptionText(e));\r\n-                        record.logPendingDeletion(TAG,\r\n-                                \"the xml submission file associated with the record could not be found\");\r\n-                        FormRecordCleanupTask.wipeRecord(record);\r\n-                        records[i] = FormRecord.StandInForDeletedRecord();\r\n-                        wroteErrorToLogs = true;\r\n-                    } else {\r\n-                        CommCareApplication.notificationManager().reportNotificationMessage(\r\n-                                NotificationMessageFactory.message(ProcessIssues.StorageRemoved), true);\r\n-                        //Otherwise, the SD card just got removed, and we need to bail anyway.\r\n-                        throw e;\r\n-                    }\r\n-                } catch (IOException e) {\r\n-                    Logger.log(LogTypes.TYPE_ERROR_WORKFLOW, \"IO Issues processing a form. \" +\r\n-                            \"Tentatively not removing in case they are resolvable|\" + getExceptionText(e));\r\n-                    wroteErrorToLogs = true;\r\n-                }\r\n-            }\r\n-        }\r\n-        processor.closeBulkSubmit();\r\n-        return wroteErrorToLogs;\r\n-    }\r\n-\r\n-    private FormRecord handleExceptionFromFormProcessing(FormRecord record, Exception e) {\r\n-        String logMessage = \"\";\r\n-        if (e instanceof InvalidStructureException) {\r\n-            logMessage =\r\n-                    String.format(\"Quarantining form record with ID %s due to transaction data|\",\r\n-                            record.getInstanceID());\r\n-        } else if (e instanceof XmlPullParserException) {\r\n-            logMessage =\r\n-                    String.format(\"Quarantining form record with ID %s due to bad xml|\",\r\n-                            record.getInstanceID());\r\n-        } else if (e instanceof UnfullfilledRequirementsException) {\r\n-            logMessage =\r\n-                    String.format(\"Quarantining form record with ID %s due to bad requirements|\",\r\n-                            record.getInstanceID());\r\n-        }\r\n-        logMessage = logMessage + getExceptionText(e);\r\n-\r\n-        CommCareApplication.notificationManager().reportNotificationMessage(\r\n-                NotificationMessageFactory.message(ProcessIssues.BadTransactions), true);\r\n-        Logger.log(LogTypes.TYPE_ERROR_DESIGN, logMessage);\r\n-\r\n-        return quarantineRecord(record, FormRecord.QuarantineReason_LOCAL_PROCESSING_ERROR);\r\n-    }\r\n-\r\n-    private boolean blockUntilTopOfQueue() throws TaskCancelledException {\r\n-        boolean needToRefresh = false;\r\n-        while (true) {\r\n-            //See if it's our turn to go\r\n-            synchronized (processTasks) {\r\n-                if (isCancelled()) {\r\n-                    processTasks.remove(this);\r\n-                    throw new TaskCancelledException();\r\n-                }\r\n-                //Are we at the head of the queue?\r\n-                ProcessAndSendTask head = processTasks.peek();\r\n-                if (head == this) {\r\n-                    break;\r\n-                }\r\n-                //Otherwise, is the head of the queue busted?\r\n-                //*sigh*. Apparently Cancelled doesn't result in the task status being set\r\n-                //to !Running for reasons which baffle me.\r\n-                if (head.getStatus() != AsyncTask.Status.RUNNING || head.isCancelled()) {\r\n-                    //If so, get rid of it\r\n-                    processTasks.poll();\r\n-                }\r\n-            }\r\n-            //If it's not yet quite our turn, take a nap\r\n-            try {\r\n-                needToRefresh = true;\r\n-                Thread.sleep(500);\r\n-            } catch (InterruptedException e) {\r\n-                e.printStackTrace();\r\n-            }\r\n-        }\r\n-        return needToRefresh;\r\n-    }\r\n-\r\n-    private void sendForms(FormRecord[] records) throws TaskCancelledException {\r\n-        for (int i = 0; i < records.length; ++i) {\r\n-\r\n-            if (previousFailurePredictsFutureFailures(results, i)) {\r\n-                Logger.log(LogTypes.TYPE_WARNING_NETWORK,\r\n-                        \"Cancelling submission due to network errors. \" + (i - 1) + \" forms successfully sent.\");\r\n-                break;\r\n-            }\r\n-\r\n-            if (isCancelled()) {\r\n-                Logger.log(LogTypes.TYPE_USER, \"Cancelling submission due to a manual stop. \" + (i - 1) + \" forms succesfully sent.\");\r\n-                throw new TaskCancelledException();\r\n-            }\r\n-\r\n-            FormRecord record = records[i];\r\n-            try {\r\n-                if (FormRecord.STATUS_UNSENT.equals(record.getStatus())) {\r\n-                    File folder;\r\n-\r\n-                    //Good!\r\n-                    //Time to Send!\r\n-                    try {\r\n-                        try {\r\n-                            if (StringUtils.isEmpty(record.getFilePath())) {\r\n-                                throw new FileNotFoundException(\"File path empty for formrecord \" +\r\n-                                        record.getID() + \" with xmlns \" + record.getFormNamespace());\r\n-                            }\r\n-                            folder = new File(record.getFilePath()).getCanonicalFile().getParentFile();\r\n-                        } catch (FileNotFoundException e) {\r\n-                            //This will put us in the same \"Missing Form\" handling path as below\r\n-                            throw e;\r\n-                        } catch (IOException e) {\r\n-                            // Unexpected/Unknown IO Error path from cannonical file\r\n-                            Logger.log(LogTypes.TYPE_ERROR_WORKFLOW, \"Bizarre. Exception just getting the file reference. Not removing.\" + getExceptionText(e));\r\n-                            continue;\r\n-                        }\r\n-\r\n-                        User user = CommCareApplication.instance().getSession().getLoggedInUser();\r\n-                        int attemptsMade = 0;\r\n-                        logSubmissionAttempt(record);\r\n-                        while (attemptsMade < SUBMISSION_ATTEMPTS) {\r\n-\r\n-                            if (isCancelled()) {\r\n-                                Logger.log(LogTypes.TYPE_USER, \"Cancelling submission due to a manual stop. \" + (i - 1) + \" forms succesfully sent.\");\r\n-                                throw new TaskCancelledException();\r\n-                            }\r\n-\r\n-                            results[i] = FormUploadUtil.sendInstance(i, folder,\r\n-                                    new SecretKeySpec(record.getAesKey(), \"AES\"), url, this, user);\r\n-                            if (results[i] == FormUploadResult.FULL_SUCCESS) {\r\n-                                logSubmissionSuccess(record);\r\n-                                break;\r\n-                            } else if (results[i] == FormUploadResult.PROCESSING_FAILURE) {\r\n-                                // A processing failure indicates that there there is no point in\r\n-                                // trying that submission again immediately\r\n-                                break;\r\n-                            } else if (results[i] == FormUploadResult.RATE_LIMITED) {\r\n-                                // Don't keep retrying, the server is rate limiting submissions\r\n-                                break;\r\n-                            } else {\r\n-                                attemptsMade++;\r\n-                            }\r\n-                        }\r\n-                        if (results[i] == FormUploadResult.RECORD_FAILURE ||\r\n-                                results[i] == FormUploadResult.PROCESSING_FAILURE) {\r\n-                            quarantineRecord(record, results[i]);\r\n-                        }\r\n-                    } catch (FileNotFoundException e) {\r\n-                        if (CommCareApplication.instance().isStorageAvailable()) {\r\n-                            // If storage is available generally, this is a bug in the app design\r\n-                            // Log with multiple tags so we can track more easily\r\n-                            Logger.log(LogTypes.SOFT_ASSERT, String.format(\r\n-                                    \"Removed form record with id %s because file was missing| %s\",\r\n-                                    record.getInstanceID(), getExceptionText(e)));\r\n-                            Logger.log(LogTypes.TYPE_FORM_SUBMISSION, String.format(\r\n-                                    \"Removed form record with id %s because file was missing| %s\",\r\n-                                    record.getInstanceID(), getExceptionText(e)));\r\n-                            record.logPendingDeletion(TAG,\r\n-                                    \"the xml submission file associated with the record was missing\");\r\n-                            quarantineRecord(record,\r\n-                                    FormRecord.QuarantineReason_FILE_NOT_FOUND);\r\n-                            results[i] = FormUploadResult.RECORD_FAILURE;\r\n-                        } else {\r\n-                            // Otherwise, the SD card just got removed, and we need to bail anyway.\r\n-                            CommCareApplication.notificationManager().reportNotificationMessage(\r\n-                                    NotificationMessageFactory.message(ProcessIssues.StorageRemoved), true);\r\n-                            break;\r\n-                        }\r\n-                        continue;\r\n-                    }\r\n-\r\n-                    Profile p = CommCareApplication.instance().getCommCarePlatform().getCurrentProfile();\r\n-                    // Check for success\r\n-                    if (results[i] == FormUploadResult.FULL_SUCCESS) {\r\n-                        // Only delete if this device isn't set up to review.\r\n-                        if (p == null || !p.isFeatureActive(Profile.FEATURE_REVIEW)) {\r\n-                            FormRecordCleanupTask.wipeRecord(record);\r\n-                        } else {\r\n-                            // Otherwise save and move appropriately\r\n-                            processor.updateRecordStatus(record, FormRecord.STATUS_SAVED);\r\n-                        }\r\n-                    }\r\n-                } else if (FormRecord.STATUS_QUARANTINED.equals(record.getStatus()) ||\r\n-                        FormRecord.STATUS_JUST_DELETED.equals(record.getStatus())) {\r\n-                    // This record was either quarantined or deleted due to an error during the\r\n-                    // pre-processing phase\r\n-                    results[i] = FormUploadResult.RECORD_FAILURE;\r\n-                } else {\r\n-                    results[i] = FormUploadResult.FULL_SUCCESS;\r\n-                }\r\n-            } catch (SessionUnavailableException sue) {\r\n-                throw sue;\r\n-            } catch (Exception e) {\r\n-                //Just try to skip for now. Hopefully this doesn't wreck the model :/\r\n-                Logger.exception(\"Totally Unexpected Error during form submission: \" + getExceptionText(e), e);\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    /**\r\n-     * @param results      the array of submission results\r\n-     * @param currentIndex - the index of the submission we are about to attempt\r\n-     * @return true if there was a failure in submitting the previous form that indicates future\r\n-     * submission attempts will also fail. (We permit proceeding if there was a local problem with\r\n-     * a specific record, or a processing error with a specific record, since that is unrelated to\r\n-     * how future submissions will fair).\r\n-     */\r\n-    private boolean previousFailurePredictsFutureFailures(FormUploadResult[] results, int currentIndex) {\r\n-        if (currentIndex > 0) {\r\n-            FormUploadResult lastResult = results[currentIndex - 1];\r\n-            return !(lastResult == FormUploadResult.FULL_SUCCESS ||\r\n-                    lastResult == FormUploadResult.RECORD_FAILURE ||\r\n-                    lastResult == FormUploadResult.PROCESSING_FAILURE);\r\n-        }\r\n-        return false;\r\n-    }\r\n-\r\n-    private FormRecord quarantineRecord(FormRecord record, FormUploadResult uploadResult) {\r\n-        String reasonType =\r\n-                (uploadResult == FormUploadResult.RECORD_FAILURE) ?\r\n-                        FormRecord.QuarantineReason_RECORD_ERROR :\r\n-                        FormRecord.QuarantineReason_SERVER_PROCESSING_ERROR;\r\n-        record = processor.quarantineRecord(record, reasonType, uploadResult.getErrorMessage());\r\n-        logAndNotifyQuarantine(record);\r\n-        return record;\r\n-    }\r\n-\r\n-    private FormRecord quarantineRecord(FormRecord record, String quarantineReasonType) {\r\n-        record = processor.quarantineRecord(record, quarantineReasonType);\r\n-        logAndNotifyQuarantine(record);\r\n-        return record;\r\n-    }\r\n-\r\n-    private static void logAndNotifyQuarantine(FormRecord record) {\r\n-        Logger.log(LogTypes.TYPE_ERROR_STORAGE,\r\n-                String.format(\"Quarantining Form Record with id %s because: %s\",\r\n-                        record.getInstanceID(),\r\n-                        QuarantineUtil.getQuarantineReasonDisplayString(record, true)));\r\n-\r\n-        NotificationMessage m = QuarantineUtil.getQuarantineNotificationMessage(record);\r\n-        if (m != null) {\r\n-            CommCareApplication.notificationManager().reportNotificationMessage(m, true);\r\n-        }\r\n-    }\r\n-\r\n-    private static void logSubmissionAttempt(FormRecord record) {\r\n-        String attemptMesssage = String.format(\r\n-                \"Attempting to submit form with id %1$s and submission ordering number %2$s\",\r\n-                record.getInstanceID(),\r\n-                record.getSubmissionOrderingNumber());\r\n-        Logger.log(LogTypes.TYPE_FORM_SUBMISSION, attemptMesssage);\r\n-    }\r\n-\r\n-    private static void logSubmissionSuccess(FormRecord record) {\r\n-        String successMessage = String.format(\r\n-                \"Successfully submitted form with id %1$s and submission ordering number %2$s\",\r\n-                record.getInstanceID(),\r\n-                record.getSubmissionOrderingNumber());\r\n-        Logger.log(LogTypes.TYPE_FORM_SUBMISSION, successMessage);\r\n-    }\r\n-\r\n-    public static int pending() {\r\n-        synchronized (processTasks) {\r\n-            return processTasks.size();\r\n-        }\r\n-    }\r\n-\r\n-    @Override\r\n-    protected void onProgressUpdate(Long... values) {\r\n-        if (values.length == 1 && values[0] == PROGRESS_ALL_PROCESSED) {\r\n-            this.transitionPhase(sendTaskId);\r\n-        }\r\n-\r\n-        super.onProgressUpdate(values);\r\n-\r\n-        if (values.length > 0) {\r\n-            if (values[0] == SUBMISSION_BEGIN) {\r\n-                dispatchBeginSubmissionProcessToListeners(values[1].intValue());\r\n-            } else if (values[0] == SUBMISSION_START) {\r\n-                int item = values[1].intValue();\r\n-                long size = values[2];\r\n-                dispatchStartSubmissionToListeners(item, size);\r\n-            } else if (values[0] == SUBMISSION_NOTIFY) {\r\n-                int item = values[1].intValue();\r\n-                long progress = values[2];\r\n-                dispatchNotifyProgressToListeners(item, progress);\r\n-            } else if (values[0] == SUBMISSION_DONE) {\r\n-                dispatchEndSubmissionProcessToListeners(values[1] == SUBMISSION_SUCCESS);\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    public void addProgressBarSubmissionListener(FormSubmissionProgressBarListener listener) {\r\n-        this.progressBarListener = listener;\r\n-        addSubmissionListener(listener);\r\n-    }\r\n-\r\n-    public void addSubmissionListener(DataSubmissionListener submissionListener) {\r\n-        formSubmissionListeners.add(submissionListener);\r\n-    }\r\n-\r\n-    private void dispatchBeginSubmissionProcessToListeners(int totalItems) {\r\n-        for (DataSubmissionListener listener : formSubmissionListeners) {\r\n-            listener.beginSubmissionProcess(totalItems);\r\n-        }\r\n-    }\r\n-\r\n-    private void dispatchStartSubmissionToListeners(int itemNumber, long length) {\r\n-        for (DataSubmissionListener listener : formSubmissionListeners) {\r\n-            listener.startSubmission(itemNumber, length);\r\n-        }\r\n-    }\r\n-\r\n-    private void dispatchNotifyProgressToListeners(int itemNumber, long progress) {\r\n-        for (DataSubmissionListener listener : formSubmissionListeners) {\r\n-            listener.notifyProgress(itemNumber, progress);\r\n-        }\r\n-    }\r\n-\r\n-    private void dispatchEndSubmissionProcessToListeners(boolean success) {\r\n-        for (DataSubmissionListener listener : formSubmissionListeners) {\r\n-            listener.endSubmissionProcess(success);\r\n-        }\r\n-    }\r\n-\r\n-    @Override\r\n-    protected void onPostExecute(FormUploadResult result) {\r\n-        super.onPostExecute(result);\r\n-\r\n-        clearState();\r\n-    }\r\n-\r\n-    private void clearState() {\r\n-        url = null;\r\n-        results = null;\r\n-    }\r\n-\r\n-    protected int getSuccessfulSends() {\r\n-        int successes = 0;\r\n-        if (results != null) {\r\n-            for (FormUploadResult formResult : results) {\r\n-                if (formResult != null && FormUploadResult.FULL_SUCCESS == formResult) {\r\n-                    successes++;\r\n-                }\r\n-            }\r\n-        }\r\n-        return successes;\r\n-    }\r\n-\r\n-    protected String getLabelForFormsSent() {\r\n-        int successfulSends = getSuccessfulSends();\r\n-        String label;\r\n-        switch (successfulSends) {\r\n-            case 0:\r\n-                label = Localization.get(\"sync.success.sent.none\");\r\n-                break;\r\n-            case 1:\r\n-                label = Localization.get(\"sync.success.sent.singular\");\r\n-                break;\r\n-            default:\r\n-                label = Localization.get(\"sync.success.sent\",\r\n-                        new String[]{String.valueOf(successfulSends)});\r\n-        }\r\n-        return label;\r\n-    }\r\n-\r\n-\r\n-    //Wrappers for the internal stuff\r\n-    @Override\r\n-    public void beginSubmissionProcess(int totalItems) {\r\n-        this.publishProgress(SUBMISSION_BEGIN, (long)totalItems);\r\n-    }\r\n-\r\n-    @Override\r\n-    public void startSubmission(int itemNumber, long sizeOfItem) {\r\n-        this.publishProgress(SUBMISSION_START, (long)itemNumber, sizeOfItem);\r\n-    }\r\n-\r\n-    @Override\r\n-    public void notifyProgress(int itemNumber, long progress) {\r\n-        this.publishProgress(SUBMISSION_NOTIFY, (long)itemNumber, progress);\r\n-    }\r\n-\r\n-    @Override\r\n-    public void endSubmissionProcess(boolean success) {\r\n-        if (success) {\r\n-            this.publishProgress(SUBMISSION_DONE, SUBMISSION_SUCCESS);\r\n-        } else {\r\n-            this.publishProgress(SUBMISSION_DONE, SUBMISSION_FAIL);\r\n-        }\r\n-    }\r\n-\r\n-    private String getExceptionText(Exception e) {\r\n-        try {\r\n-            ByteArrayOutputStream bos = new ByteArrayOutputStream();\r\n-            e.printStackTrace(new PrintStream(bos));\r\n-            return new String(bos.toByteArray());\r\n-        } catch (Exception ex) {\r\n-            return null;\r\n-        }\r\n-    }\r\n-\r\n-    @Override\r\n-    protected void onCancelled() {\r\n-        super.onCancelled();\r\n-\r\n-        dispatchEndSubmissionProcessToListeners(false);\r\n-\r\n-        // If cancellation happened due to logout, notify user\r\n-        try {\r\n-            CommCareApplication.instance().getSession().getLoggedInUser();\r\n-        } catch (SessionUnavailableException e) {\r\n-            CommCareApplication.notificationManager().reportNotificationMessage(NotificationMessageFactory.message(ProcessIssues.LoggedOut));\r\n-        }\r\n-\r\n-        clearState();\r\n-    }\r\n-\r\n-    @Override\r\n-    public void connect(CommCareTaskConnector<R> connector) {\r\n-        super.connect(connector);\r\n-        if (progressBarListener != null) {\r\n-            progressBarListener.attachToNewActivity(\r\n-                    (SyncCapableCommCareActivity)connector.getReceiver());\r\n-        }\r\n-    }\r\n-\r\n-    private static class TaskCancelledException extends Exception {\r\n-    }\r\n-}\r\n+package org.commcare.sync;\n+\n+import android.content.Context;\n+import android.content.SharedPreferences;\n+\n+import net.sqlcipher.database.SQLiteDatabase;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.commcare.CommCareApplication;\n+import org.commcare.android.database.user.models.FormRecord;\n+import org.commcare.dalvik.R;\n+import org.commcare.models.FormRecordProcessor;\n+import org.commcare.preferences.ServerUrls;\n+import org.commcare.suite.model.Profile;\n+import org.commcare.tasks.DataSubmissionListener;\n+import org.commcare.tasks.FormRecordCleanupTask;\n+import org.commcare.util.LogTypes;\n+import org.commcare.utils.FormUploadResult;\n+import org.commcare.utils.FormUploadUtil;\n+import org.commcare.utils.QuarantineUtil;\n+import org.commcare.utils.SessionUnavailableException;\n+import org.commcare.utils.StorageUtils;\n+import org.commcare.views.notifications.NotificationMessage;\n+import org.commcare.views.notifications.NotificationMessageFactory;\n+import org.commcare.views.notifications.ProcessIssues;\n+import org.javarosa.core.model.User;\n+import org.javarosa.core.services.Logger;\n+import org.javarosa.xml.util.InvalidStructureException;\n+import org.javarosa.xml.util.UnfullfilledRequirementsException;\n+import org.xmlpull.v1.XmlPullParserException;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.File;\n+import java.io.FileNotFoundException;\n+import java.io.IOException;\n+import java.io.PrintStream;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Queue;\n+\n+import javax.crypto.spec.SecretKeySpec;\n+\n+public class FormSubmissionHelper implements DataSubmissionListener {", "originalCommit": "e647fe50494e70945865f0e66980b13f7844a113", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "791812b48de8305c0cf41d40393be9dd8468c27c", "url": "https://github.com/dimagi/commcare-android/commit/791812b48de8305c0cf41d40393be9dd8468c27c", "message": "Automated: adding hotfix version to AndroidManifest", "committedDate": "2020-03-17T10:54:32Z", "type": "commit"}, {"oid": "f8d677bae7e48d3519748be7bef3149ab4236cb8", "url": "https://github.com/dimagi/commcare-android/commit/f8d677bae7e48d3519748be7bef3149ab4236cb8", "message": "Merge pull request #2196 from dimagi/commcare_2.48\n\nCommcare 2.48", "committedDate": "2020-03-17T11:33:39Z", "type": "commit"}, {"oid": "6db06b2935d2b52b061e98f043db02223df6371d", "url": "https://github.com/dimagi/commcare-android/commit/6db06b2935d2b52b061e98f043db02223df6371d", "message": "Merge branch 'autoUpdateScheduling' into formSubmissionsScheduling", "committedDate": "2020-03-20T07:25:53Z", "type": "commit"}, {"oid": "f9c969223dbf989b51dba076ce228f15a207a925", "url": "https://github.com/dimagi/commcare-android/commit/f9c969223dbf989b51dba076ce228f15a207a925", "message": "Add java docs", "committedDate": "2020-03-20T08:01:33Z", "type": "commit"}, {"oid": "691f0f93aab52b684116865bb2ff3a3b585eb2b3", "url": "https://github.com/dimagi/commcare-android/commit/691f0f93aab52b684116865bb2ff3a3b585eb2b3", "message": "Automated hotfix version bump", "committedDate": "2020-03-21T05:52:59Z", "type": "commit"}, {"oid": "5b343d4d0edd9d2417026b33792cbf5693d04020", "url": "https://github.com/dimagi/commcare-android/commit/5b343d4d0edd9d2417026b33792cbf5693d04020", "message": "Fix for navigation of saved form\n\nIn case of validation condition on a non-required question, navigation of submitted form gives constraint violation error for validation error", "committedDate": "2020-03-21T05:57:59Z", "type": "commit"}, {"oid": "fdfdf292cc7d2808e88adae1aa98ca18c07300ce", "url": "https://github.com/dimagi/commcare-android/commit/fdfdf292cc7d2808e88adae1aa98ca18c07300ce", "message": "Merge pull request #2193 from dimagi/syncPendingCleanup\n\n[no op] Removes syncPending", "committedDate": "2020-03-23T05:11:14Z", "type": "commit"}, {"oid": "252cca18b5177cc0314d20fd93c0b74ef0649077", "url": "https://github.com/dimagi/commcare-android/commit/252cca18b5177cc0314d20fd93c0b74ef0649077", "message": "Remove FormEntryConstants for evaluating constraints", "committedDate": "2020-03-24T05:43:42Z", "type": "commit"}, {"oid": "31ab2a02fdadd8f810f7069a74d14861f045007e", "url": "https://github.com/dimagi/commcare-android/commit/31ab2a02fdadd8f810f7069a74d14861f045007e", "message": "Adds app version tag in app version", "committedDate": "2020-03-24T11:36:09Z", "type": "commit"}, {"oid": "78f7316027eef6412a9dd6caf8024a98dfb313d5", "url": "https://github.com/dimagi/commcare-android/commit/78f7316027eef6412a9dd6caf8024a98dfb313d5", "message": "Add forms with status complete to the unsent filter", "committedDate": "2020-03-24T14:30:11Z", "type": "commit"}, {"oid": "10916bdaab1f7021896f73c2c1be197d59c498bd", "url": "https://github.com/dimagi/commcare-android/commit/10916bdaab1f7021896f73c2c1be197d59c498bd", "message": "Merge pull request #2199 from dimagi/change-status-filter\n\nAdd forms with status complete to the unsent filter", "committedDate": "2020-03-24T19:11:58Z", "type": "commit"}, {"oid": "c5d7f49582fa5cedc213427801f02033f31dbc4c", "url": "https://github.com/dimagi/commcare-android/commit/c5d7f49582fa5cedc213427801f02033f31dbc4c", "message": "Merge pull request #2198 from dimagi/functionalReleaseVersion\n\nShows custom App Version Tag in About CommCare", "committedDate": "2020-03-24T19:12:21Z", "type": "commit"}, {"oid": "92c97742d8ed7432e5d61f241a0f8f18f3a22d64", "url": "https://github.com/dimagi/commcare-android/commit/92c97742d8ed7432e5d61f241a0f8f18f3a22d64", "message": "Merge pull request #2197 from dimagi/fix-saved-form-navigation\n\nFix for navigation of saved form", "committedDate": "2020-03-24T19:12:44Z", "type": "commit"}, {"oid": "465d3c553b4bf9540d5307a0798c7ea8096231e7", "url": "https://github.com/dimagi/commcare-android/commit/465d3c553b4bf9540d5307a0798c7ea8096231e7", "message": "Merge pull request #2200 from dimagi/commcare_2.48\n\nCommcare 2.48.1", "committedDate": "2020-03-26T10:38:53Z", "type": "commit"}, {"oid": "69ba2f23e5a306374332b616c0fa35935ed54cfd", "url": "https://github.com/dimagi/commcare-android/commit/69ba2f23e5a306374332b616c0fa35935ed54cfd", "message": "Automated hotfix version bump", "committedDate": "2020-03-26T19:41:13Z", "type": "commit"}, {"oid": "9fd803d08e03938c53391a477d6263cb4509c19d", "url": "https://github.com/dimagi/commcare-android/commit/9fd803d08e03938c53391a477d6263cb4509c19d", "message": "Sets Pre update Sync needed from the staged update", "committedDate": "2020-03-26T19:42:08Z", "type": "commit"}, {"oid": "ab42c9f4e20002eaf638986b078b795294b95528", "url": "https://github.com/dimagi/commcare-android/commit/ab42c9f4e20002eaf638986b078b795294b95528", "message": "Merge pull request #2201 from dimagi/preUpdateSyncIssue\n\nSets Pre update Sync needed from the staged update", "committedDate": "2020-03-27T03:43:43Z", "type": "commit"}, {"oid": "1eed8770e86458689f199a63fde94d1a012d3a19", "url": "https://github.com/dimagi/commcare-android/commit/1eed8770e86458689f199a63fde94d1a012d3a19", "message": "Corrects versionName", "committedDate": "2020-04-01T06:00:42Z", "type": "commit"}, {"oid": "0c23904ea4dac52980fb75b2b95372f6003d122c", "url": "https://github.com/dimagi/commcare-android/commit/0c23904ea4dac52980fb75b2b95372f6003d122c", "message": "Merge pull request #2203 from dimagi/commcare_2.48\n\nCommcare 2.48.2 Backmerge", "committedDate": "2020-04-01T06:30:51Z", "type": "commit"}, {"oid": "cf29c3c310dc9f41e68677c2e95c06f6dc5439f1", "url": "https://github.com/dimagi/commcare-android/commit/cf29c3c310dc9f41e68677c2e95c06f6dc5439f1", "message": "Fix improper reference to map activity check", "committedDate": "2020-04-03T19:31:15Z", "type": "commit"}, {"oid": "7be3bb3a60e9421630743800b3347c8b22538bd6", "url": "https://github.com/dimagi/commcare-android/commit/7be3bb3a60e9421630743800b3347c8b22538bd6", "message": "Automated hotfix version bump", "committedDate": "2020-04-04T08:42:50Z", "type": "commit"}, {"oid": "de313d3cc3815e55e22078950e468b41f80c76de", "url": "https://github.com/dimagi/commcare-android/commit/de313d3cc3815e55e22078950e468b41f80c76de", "message": "Fix improper reference to map activity check", "committedDate": "2020-04-04T08:45:11Z", "type": "commit"}, {"oid": "24ee690a75ed1c00d3f29dfbc38d5c7b6c496ce2", "url": "https://github.com/dimagi/commcare-android/commit/24ee690a75ed1c00d3f29dfbc38d5c7b6c496ce2", "message": "Merge pull request #2205 from dimagi/ctsims/map_check_update\n\nFix \"Choose point on Map\" functionality", "committedDate": "2020-04-04T09:28:10Z", "type": "commit"}, {"oid": "ae1e852b43a8c92a7c1a381500ca98a5eef0aaf0", "url": "https://github.com/dimagi/commcare-android/commit/ae1e852b43a8c92a7c1a381500ca98a5eef0aaf0", "message": "NPE fix", "committedDate": "2020-04-05T13:12:10Z", "type": "commit"}, {"oid": "83bbcef3dafee17ba7a7067d8d2175e359041fdc", "url": "https://github.com/dimagi/commcare-android/commit/83bbcef3dafee17ba7a7067d8d2175e359041fdc", "message": "Show detailed error for captive portal presense", "committedDate": "2020-04-06T10:05:28Z", "type": "commit"}, {"oid": "10e588e26bec944d64f0eb4f11c13444dea68191", "url": "https://github.com/dimagi/commcare-android/commit/10e588e26bec944d64f0eb4f11c13444dea68191", "message": "Focuses on last selected location", "committedDate": "2020-04-06T11:42:18Z", "type": "commit"}, {"oid": "269f44f99db012ea149db7501da57d1add39cecc", "url": "https://github.com/dimagi/commcare-android/commit/269f44f99db012ea149db7501da57d1add39cecc", "message": "Adds change layer button", "committedDate": "2020-04-06T12:58:20Z", "type": "commit"}, {"oid": "0d5104ed2ffffb20d586ceffe3c339553723dcd0", "url": "https://github.com/dimagi/commcare-android/commit/0d5104ed2ffffb20d586ceffe3c339553723dcd0", "message": "Correctly sets accuracy", "committedDate": "2020-04-06T12:58:56Z", "type": "commit"}, {"oid": "3e1f7b6a28fcb285f7521326bdebb4b93e45f766", "url": "https://github.com/dimagi/commcare-android/commit/3e1f7b6a28fcb285f7521326bdebb4b93e45f766", "message": "Adds a white background to the layer icon", "committedDate": "2020-04-06T13:47:34Z", "type": "commit"}, {"oid": "ead8a77b01c475bef18269405a68a9579326bd9d", "url": "https://github.com/dimagi/commcare-android/commit/ead8a77b01c475bef18269405a68a9579326bd9d", "message": "remove log", "committedDate": "2020-04-06T14:00:39Z", "type": "commit"}, {"oid": "875c56d981e93d4cbb7b5047076afb0da3be56ee", "url": "https://github.com/dimagi/commcare-android/commit/875c56d981e93d4cbb7b5047076afb0da3be56ee", "message": "Adds the default map layer setting", "committedDate": "2020-04-06T15:24:52Z", "type": "commit"}, {"oid": "0119f2959256ee07cef9e3d13f1372f3b8e6a604", "url": "https://github.com/dimagi/commcare-android/commit/0119f2959256ee07cef9e3d13f1372f3b8e6a604", "message": "correctly sets the MapLayer values", "committedDate": "2020-04-06T15:52:27Z", "type": "commit"}, {"oid": "d6d08afad29ed3081ba84f747a430e8ad6b46492", "url": "https://github.com/dimagi/commcare-android/commit/d6d08afad29ed3081ba84f747a430e8ad6b46492", "message": "resize layer icon", "committedDate": "2020-04-06T15:57:17Z", "type": "commit"}, {"oid": "41b17546d2a2df3313d8bf8ec38a19eb299638de", "url": "https://github.com/dimagi/commcare-android/commit/41b17546d2a2df3313d8bf8ec38a19eb299638de", "message": "maps layer button styling", "committedDate": "2020-04-06T16:18:30Z", "type": "commit"}, {"oid": "04776a52e9b459ffe97b25b3d29da7dfebb332d7", "url": "https://github.com/dimagi/commcare-android/commit/04776a52e9b459ffe97b25b3d29da7dfebb332d7", "message": "Cleanup", "committedDate": "2020-04-06T16:47:20Z", "type": "commit"}, {"oid": "2a675d1e44e784786e52b3b8e0ac36bae5a1ef88", "url": "https://github.com/dimagi/commcare-android/commit/2a675d1e44e784786e52b3b8e0ac36bae5a1ef88", "message": "Automated hotfix version bump", "committedDate": "2020-04-06T17:07:58Z", "type": "commit"}, {"oid": "3224a11e27fdbd51925bbf657e413d39feef5779", "url": "https://github.com/dimagi/commcare-android/commit/3224a11e27fdbd51925bbf657e413d39feef5779", "message": "Focuses on last selected location", "committedDate": "2020-04-06T17:10:15Z", "type": "commit"}, {"oid": "e02e7869e1e1154f835190bd9319f89fad501822", "url": "https://github.com/dimagi/commcare-android/commit/e02e7869e1e1154f835190bd9319f89fad501822", "message": "Correctly sets accuracy", "committedDate": "2020-04-06T17:10:22Z", "type": "commit"}, {"oid": "a1f199e9f36683c3df6d7bb048461b11043127ea", "url": "https://github.com/dimagi/commcare-android/commit/a1f199e9f36683c3df6d7bb048461b11043127ea", "message": "Adds change layer button", "committedDate": "2020-04-06T17:10:58Z", "type": "commit"}, {"oid": "599fe43a5453a3fcaf488a96915edf85cda46184", "url": "https://github.com/dimagi/commcare-android/commit/599fe43a5453a3fcaf488a96915edf85cda46184", "message": "Adds a white background to the layer icon", "committedDate": "2020-04-06T17:11:08Z", "type": "commit"}, {"oid": "b1a92a692602d4b1dc3a0b97ecf870bf6b3c2abe", "url": "https://github.com/dimagi/commcare-android/commit/b1a92a692602d4b1dc3a0b97ecf870bf6b3c2abe", "message": "remove log", "committedDate": "2020-04-06T17:11:15Z", "type": "commit"}, {"oid": "c4a8d3dd497106a66b3bb6ba6345fd1fc64c7820", "url": "https://github.com/dimagi/commcare-android/commit/c4a8d3dd497106a66b3bb6ba6345fd1fc64c7820", "message": "Adds the default map layer setting", "committedDate": "2020-04-06T17:11:22Z", "type": "commit"}, {"oid": "5ae4195d84f10a8d59ca5372f7ffd94f80fb9d42", "url": "https://github.com/dimagi/commcare-android/commit/5ae4195d84f10a8d59ca5372f7ffd94f80fb9d42", "message": "correctly sets the MapLayer values", "committedDate": "2020-04-06T17:11:28Z", "type": "commit"}, {"oid": "29d1613e67e856ccd4c258acecc32608d6a755d3", "url": "https://github.com/dimagi/commcare-android/commit/29d1613e67e856ccd4c258acecc32608d6a755d3", "message": "resize layer icon", "committedDate": "2020-04-06T17:11:34Z", "type": "commit"}, {"oid": "685479d95c4a7cb15bd51ad05abd2f5193ac7d11", "url": "https://github.com/dimagi/commcare-android/commit/685479d95c4a7cb15bd51ad05abd2f5193ac7d11", "message": "maps layer button styling", "committedDate": "2020-04-06T17:11:43Z", "type": "commit"}, {"oid": "a7ceab2278939f2102ed89e25390222145a54fa2", "url": "https://github.com/dimagi/commcare-android/commit/a7ceab2278939f2102ed89e25390222145a54fa2", "message": "Cleanup", "committedDate": "2020-04-06T17:11:49Z", "type": "commit"}, {"oid": "4de10ad843b067d24a7f4919a994a5d761703e4c", "url": "https://github.com/dimagi/commcare-android/commit/4de10ad843b067d24a7f4919a994a5d761703e4c", "message": "Only updates the GPS location if the accuracy is better than the last time", "committedDate": "2020-04-06T20:04:00Z", "type": "commit"}, {"oid": "dd66da8087f1f156e9c3ea96f34e242db9f56360", "url": "https://github.com/dimagi/commcare-android/commit/dd66da8087f1f156e9c3ea96f34e242db9f56360", "message": "Merge pull request #2207 from dimagi/gpsMapChanges\n\nGPS Maps: Focuses on last selected location", "committedDate": "2020-04-06T20:07:47Z", "type": "commit"}, {"oid": "f31eeb42fbed6c568e379fece9b9598bad46a0fc", "url": "https://github.com/dimagi/commcare-android/commit/f31eeb42fbed6c568e379fece9b9598bad46a0fc", "message": "Better code", "committedDate": "2020-04-06T20:20:34Z", "type": "commit"}, {"oid": "2b4a04a6b525a51f484d42ce382f53047a3483b2", "url": "https://github.com/dimagi/commcare-android/commit/2b4a04a6b525a51f484d42ce382f53047a3483b2", "message": "Merge pull request #2209 from dimagi/gpsFixes\n\nGPS: Only update location in case of better accuracy from Updates", "committedDate": "2020-04-07T04:32:28Z", "type": "commit"}, {"oid": "47b11a23be42f47243295cc37cb657be4f36668b", "url": "https://github.com/dimagi/commcare-android/commit/47b11a23be42f47243295cc37cb657be4f36668b", "message": "Merge pull request #2208 from dimagi/layerChange\n\nGPS Maps: Adds Layer change Button", "committedDate": "2020-04-07T06:47:01Z", "type": "commit"}, {"oid": "530e97a03560ab1a888c46e880f1e4496825567b", "url": "https://github.com/dimagi/commcare-android/commit/530e97a03560ab1a888c46e880f1e4496825567b", "message": "Merge branch 'master' into commcare_2.48", "committedDate": "2020-04-07T06:51:41Z", "type": "commit"}, {"oid": "7085453da492160ce3a293c2ac910a62d93035b5", "url": "https://github.com/dimagi/commcare-android/commit/7085453da492160ce3a293c2ac910a62d93035b5", "message": "Merge pull request #2210 from dimagi/commcare_2.48\n\nbackmerge Commcare 2.48.4", "committedDate": "2020-04-07T10:14:51Z", "type": "commit"}, {"oid": "998f0bbae8f9490014d4b3d6546f9980da18c87b", "url": "https://github.com/dimagi/commcare-android/commit/998f0bbae8f9490014d4b3d6546f9980da18c87b", "message": "Merge pull request #2212 from dimagi/deRegisterCrash\n\nFix for NPE while De-regestering Form", "committedDate": "2020-04-07T17:14:28Z", "type": "commit"}, {"oid": "47b51193db28280e601a1e7934f6efa950d3d81f", "url": "https://github.com/dimagi/commcare-android/commit/47b51193db28280e601a1e7934f6efa950d3d81f", "message": "Automated hotfix version bump", "committedDate": "2020-04-08T10:06:15Z", "type": "commit"}, {"oid": "6ea27d66212bc98f8524768a22531fb3e5574407", "url": "https://github.com/dimagi/commcare-android/commit/6ea27d66212bc98f8524768a22531fb3e5574407", "message": "Update fabric to the latest version\n\nFixes an issue which prevents Fabric API keys present in fabric.properties file from being read by the app", "committedDate": "2020-04-08T10:08:47Z", "type": "commit"}, {"oid": "644554c069def16057de56ce34c54762497f092b", "url": "https://github.com/dimagi/commcare-android/commit/644554c069def16057de56ce34c54762497f092b", "message": "Merge pull request #2214 from dimagi/update-crashlytics\n\nUpdate fabric to the latest version", "committedDate": "2020-04-08T10:20:12Z", "type": "commit"}, {"oid": "97c2e591b97388377cf12eed79b7ffa23dbb1ff4", "url": "https://github.com/dimagi/commcare-android/commit/97c2e591b97388377cf12eed79b7ffa23dbb1ff4", "message": "Merge branch 'master' into commcare_2.48", "committedDate": "2020-04-09T11:41:47Z", "type": "commit"}, {"oid": "a32dc26cc671001f96f6ff5916209b8acc490eaa", "url": "https://github.com/dimagi/commcare-android/commit/a32dc26cc671001f96f6ff5916209b8acc490eaa", "message": "Merge pull request #2215 from dimagi/commcare_2.48\n\nBackmerge Commcare 2.48", "committedDate": "2020-04-09T11:51:58Z", "type": "commit"}, {"oid": "c2adfc93857755e9ebfd281e97af623f97fd5423", "url": "https://github.com/dimagi/commcare-android/commit/c2adfc93857755e9ebfd281e97af623f97fd5423", "message": "Merge branch 'master' into formSubmissionsScheduling", "committedDate": "2020-04-09T11:55:10Z", "type": "commit"}, {"oid": "04b0b8d6ce64cc01a5b7dbaa2270cb212e3760f1", "url": "https://github.com/dimagi/commcare-android/commit/04b0b8d6ce64cc01a5b7dbaa2270cb212e3760f1", "message": "Catch captive portal while app installation", "committedDate": "2020-04-10T12:52:30Z", "type": "commit"}, {"oid": "0046a462924284eee3e47a605c035928e50d3b0c", "url": "https://github.com/dimagi/commcare-android/commit/0046a462924284eee3e47a605c035928e50d3b0c", "message": "Disable firebase_crashlytics_collection_enabled to get pass fabric build id missing bug for debug builds", "committedDate": "2020-04-13T06:39:03Z", "type": "commit"}, {"oid": "87a386e4079acd4e61e4ce33ca134980b0dca09c", "url": "https://github.com/dimagi/commcare-android/commit/87a386e4079acd4e61e4ce33ca134980b0dca09c", "message": "reference", "committedDate": "2020-04-13T06:41:30Z", "type": "commit"}, {"oid": "be0da5db786a6ba22a7d6f712299c2fecae8379c", "url": "https://github.com/dimagi/commcare-android/commit/be0da5db786a6ba22a7d6f712299c2fecae8379c", "message": "Merge pull request #2219 from dimagi/fabricDebugIssue\n\nFabric debug crash - The Crashlytics build ID is missing", "committedDate": "2020-04-13T07:51:57Z", "type": "commit"}, {"oid": "96d2dc2f02a4469e8e5da09cdd9d432eb2f89f73", "url": "https://github.com/dimagi/commcare-android/commit/96d2dc2f02a4469e8e5da09cdd9d432eb2f89f73", "message": "Assist Crash reports with device logs", "committedDate": "2020-04-13T10:17:42Z", "type": "commit"}, {"oid": "dc4027c46e3a9a03e24a9709c69d7b5de0648270", "url": "https://github.com/dimagi/commcare-android/commit/dc4027c46e3a9a03e24a9709c69d7b5de0648270", "message": "Merge pull request #2220 from dimagi/assistCrashWithSessionLogs\n\nAssist Crash reports with device logs", "committedDate": "2020-04-13T11:44:52Z", "type": "commit"}, {"oid": "235a28c6124a971fc879c84b1d33f96370d2118a", "url": "https://github.com/dimagi/commcare-android/commit/235a28c6124a971fc879c84b1d33f96370d2118a", "message": "Merge pull request #2206 from dimagi/captive-portal-check\n\nShow detailed error for captive portal presense", "committedDate": "2020-04-15T08:58:25Z", "type": "commit"}, {"oid": "0a1df13c741c1b477e04d656b4687303f5555b90", "url": "https://github.com/dimagi/commcare-android/commit/0a1df13c741c1b477e04d656b4687303f5555b90", "message": "Adds custom property to star required questions", "committedDate": "2020-04-16T09:32:38Z", "type": "commit"}, {"oid": "8035d54bbe4abdfb40c4b5e88dee71d4697aef5e", "url": "https://github.com/dimagi/commcare-android/commit/8035d54bbe4abdfb40c4b5e88dee71d4697aef5e", "message": "naming", "committedDate": "2020-04-16T09:37:51Z", "type": "commit"}]}