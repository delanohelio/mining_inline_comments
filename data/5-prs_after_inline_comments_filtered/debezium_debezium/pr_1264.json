{"pr_number": 1264, "pr_title": "DBZ-234 Create API module with engine API", "pr_createdAt": "2020-02-14T08:04:47Z", "pr_url": "https://github.com/debezium/debezium/pull/1264", "timeline": [{"oid": "0a560fa12c89530f34666fdd814b37ad8db82be5", "url": "https://github.com/debezium/debezium/commit/0a560fa12c89530f34666fdd814b37ad8db82be5", "message": "DBZ-234 Create API module with engine API", "committedDate": "2020-02-14T08:53:14Z", "type": "commit"}, {"oid": "0a560fa12c89530f34666fdd814b37ad8db82be5", "url": "https://github.com/debezium/debezium/commit/0a560fa12c89530f34666fdd814b37ad8db82be5", "message": "DBZ-234 Create API module with engine API", "committedDate": "2020-02-14T08:53:14Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI4OTEwMg==", "url": "https://github.com/debezium/debezium/pull/1264#discussion_r380289102", "bodyText": "The existing annotation should be dropped in favour of the new one.", "author": "gunnarmorling", "createdAt": "2020-02-17T16:55:19Z", "path": "debezium-api/src/main/java/io/debezium/annotation/Incubating.java", "diffHunk": "@@ -0,0 +1,23 @@\n+/*\n+ * Copyright Debezium Authors.\n+ *\n+ * Licensed under the Apache Software License version 2.0, available at http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package io.debezium.annotation;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+\n+/**\n+ * Marks the annotated element as incubating. The contract of incubating elements (e.g. packages, types, methods,\n+ * constants etc.) is under active development and may be incompatibly altered - or removed - in subsequent releases.\n+ * <p>\n+ * Usage of incubating API/SPI members is encouraged (so the development team can get feedback on these new features)\n+ * but you should be prepared for updating code which is using them as needed.\n+ *\n+ */\n+@Documented\n+@Retention(RetentionPolicy.CLASS)\n+public @interface Incubating {", "originalCommit": "0a560fa12c89530f34666fdd814b37ad8db82be5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQ1NTg3Mw==", "url": "https://github.com/debezium/debezium/pull/1264#discussion_r380455873", "bodyText": "@gunnarmorling Thanks that you've noticed :-). This was intended to lead to another question, what other annotations should move from core to API? Also should annotation like @ThreadSafe be used on the DebeziumEnginre as it is more implementation detail?", "author": "jpechane", "createdAt": "2020-02-18T05:00:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI4OTEwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDYwMTY3MQ==", "url": "https://github.com/debezium/debezium/pull/1264#discussion_r380601671", "bodyText": "Good question, from a quick glance I'd say @Incubating is the only one that's really user-facing. What I'm realizing now though is the fact that there's a split package between core and api now. That's something we should avoid, so to avoid issues with the JPMS in some future.", "author": "gunnarmorling", "createdAt": "2020-02-18T11:00:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI4OTEwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDYxMzY2NQ==", "url": "https://github.com/debezium/debezium/pull/1264#discussion_r380613665", "bodyText": "@gunnarmorling The only shared package is the annotation so we can use just a different name. How about using documenting as it does not have any real function and is just for documentation?", "author": "jpechane", "createdAt": "2020-02-18T11:26:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI4OTEwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc1Nzk1NA==", "url": "https://github.com/debezium/debezium/pull/1264#discussion_r380757954", "bodyText": "@gunnarmorling Package renamed", "author": "jpechane", "createdAt": "2020-02-18T15:46:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI4OTEwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI5MTUwOA==", "url": "https://github.com/debezium/debezium/pull/1264#discussion_r380291508", "bodyText": "I don't like the idea of such \"technical\" packages (it's ok for the annotations IMO, but I'd limit it otherwise). I'd suggest to move the engine exception to the engine package and the DebeziumException just to io.debezium.", "author": "gunnarmorling", "createdAt": "2020-02-17T17:00:31Z", "path": "debezium-api/src/main/java/io/debezium/errors/DebeziumException.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright Debezium Authors.\n+ *\n+ * Licensed under the Apache Software License version 2.0, available at http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package io.debezium.errors;", "originalCommit": "0a560fa12c89530f34666fdd814b37ad8db82be5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQ1NTUwOQ==", "url": "https://github.com/debezium/debezium/pull/1264#discussion_r380455509", "bodyText": "@gunnarmorling ok, both works for me. I've chosen this approach to follow Kafka API. Exceptions moved", "author": "jpechane", "createdAt": "2020-02-18T04:58:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI5MTUwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI5MjA4NA==", "url": "https://github.com/debezium/debezium/pull/1264#discussion_r380292084", "bodyText": "Why do we need this internal interface?", "author": "gunnarmorling", "createdAt": "2020-02-17T17:01:49Z", "path": "debezium-embedded/src/main/java/io/debezium/embedded/spi/OffsetCommitPolicy.java", "diffHunk": "@@ -18,7 +18,7 @@\n  * @author Randall Hauch\n  */\n @FunctionalInterface\n-public interface OffsetCommitPolicy {\n+public interface OffsetCommitPolicy extends io.debezium.engine.spi.OffsetCommitPolicy {", "originalCommit": "0a560fa12c89530f34666fdd814b37ad8db82be5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI5NTkxOQ==", "url": "https://github.com/debezium/debezium/pull/1264#discussion_r380295919", "bodyText": "The same question applies for the inner interfaces in EmbeddedEngine. Why do we have these pairs of public and internal interface now?", "author": "gunnarmorling", "createdAt": "2020-02-17T17:10:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI5MjA4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQ1MzYzMw==", "url": "https://github.com/debezium/debezium/pull/1264#discussion_r380453633", "bodyText": "@gunnarmorling Well, I know that we have not declared EmbeddedEngine to be a public API but still people are using it, so everything I did ensures full backward compatibility. My intent is to mark these \"internal\" interfaces as deprecated and remove them in future releases.\nIf we drop them right away the users code will not be compilable.", "author": "jpechane", "createdAt": "2020-02-18T04:48:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI5MjA4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDYwMjg0MA==", "url": "https://github.com/debezium/debezium/pull/1264#discussion_r380602840", "bodyText": "Ok, I see. So they should be marked with @Deprecated then. On backwards compat, I don't think that simply moving the types would be a breaking change strictly speaking. core pulls in api, so a user's code would compile just as before. The one issue to take care of would be the split package problem though, when only moving parts of a package.", "author": "gunnarmorling", "createdAt": "2020-02-18T11:02:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI5MjA4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDYxNDI2MA==", "url": "https://github.com/debezium/debezium/pull/1264#discussion_r380614260", "bodyText": "@gunnarmorling It is not just move among modules but in package name as well, hence my desire to keep the old ones.", "author": "jpechane", "createdAt": "2020-02-18T11:27:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI5MjA4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDYxNzkxOQ==", "url": "https://github.com/debezium/debezium/pull/1264#discussion_r380617919", "bodyText": "@gunnarmorling Deprecated annotations added", "author": "jpechane", "createdAt": "2020-02-18T11:36:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI5MjA4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI5MjkxMg==", "url": "https://github.com/debezium/debezium/pull/1264#discussion_r380292912", "bodyText": "I'd have expected existing tests to be adjusted to be coded against the new public interface?", "author": "gunnarmorling", "createdAt": "2020-02-17T17:03:14Z", "path": "debezium-embedded/src/test/java/io/debezium/embedded/EmbeddedEngineTest.java", "diffHunk": "@@ -149,6 +151,63 @@ public void shouldWorkToUseCustomChangeConsumer() throws Exception {\n         stopConnector();\n     }\n \n+    @Test\n+    public void shouldRunDebeziumEngine() throws Exception {", "originalCommit": "0a560fa12c89530f34666fdd814b37ad8db82be5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQ1Mzg4Ng==", "url": "https://github.com/debezium/debezium/pull/1264#discussion_r380453886", "bodyText": "@gunnarmorling And this again was intentional - to verify that there is no impact on backward compatbility. The test rewrite should go hand in hand with removing deprecated interfaces.\nAs the first step when this is released we should modify the examples using EmbeddedEngine API.", "author": "jpechane", "createdAt": "2020-02-18T04:49:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI5MjkxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDYwMjkxMw==", "url": "https://github.com/debezium/debezium/pull/1264#discussion_r380602913", "bodyText": "Ok, I see.", "author": "gunnarmorling", "createdAt": "2020-02-18T11:02:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI5MjkxMg=="}], "type": "inlineReview"}, {"oid": "7a81f90d3546aa71fd29c9ad0549192111ebb052", "url": "https://github.com/debezium/debezium/commit/7a81f90d3546aa71fd29c9ad0549192111ebb052", "message": "DBZ-234 Move exceptions out of separate package", "committedDate": "2020-02-18T04:56:41Z", "type": "commit"}, {"oid": "83dcfe2e41e3843259bd5cad07b80c1354626598", "url": "https://github.com/debezium/debezium/commit/83dcfe2e41e3843259bd5cad07b80c1354626598", "message": "DBZ-234 Incubating annotation moved to API", "committedDate": "2020-02-18T04:57:19Z", "type": "commit"}, {"oid": "5ed60aff455f0ab7ded3cb1ab8b75139ccdeba85", "url": "https://github.com/debezium/debezium/commit/5ed60aff455f0ab7ded3cb1ab8b75139ccdeba85", "message": "DBZ-234 Mark deprecated code", "committedDate": "2020-02-18T11:35:26Z", "type": "commit"}, {"oid": "3aaaa848ecefb3354a23993ade74ecff5eeb8981", "url": "https://github.com/debezium/debezium/commit/3aaaa848ecefb3354a23993ade74ecff5eeb8981", "message": "DBZ-234 Place Incubating into a unique package", "committedDate": "2020-02-18T15:46:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQ5MDIyNQ==", "url": "https://github.com/debezium/debezium/pull/1264#discussion_r383490225", "bodyText": "So here's the one tiny concern I have: what will happen if we want to add support for other formats down the road (essentially by invoking converters under the hood)? E.g. what should be passed for obtaining JSON Strings? Back in the Reactive PoC we had an indirection for that purpose, something like:\ninterface SerializationFormat<T> {}\n\ninterface Json extends SerializationFormat<String> {}\n\ninterface Connect extends SerializationFormat<SourceRecord> {}\n\nThen the usage could be like so:\n// <T extends SerializationFormat<V>, V> DebeziumEngine<V> create(T format)\nDebeziumEngine<SourceRecord> engine = DebeziumEngine.create(Connect.class)...\n\nMight wanna do this now to be prepared for the evolution down the road.", "author": "gunnarmorling", "createdAt": "2020-02-24T20:14:45Z", "path": "debezium-embedded/src/test/java/io/debezium/embedded/EmbeddedEngineTest.java", "diffHunk": "@@ -149,6 +151,63 @@ public void shouldWorkToUseCustomChangeConsumer() throws Exception {\n         stopConnector();\n     }\n \n+    @Test\n+    public void shouldRunDebeziumEngine() throws Exception {\n+        // Add initial content to the file ...\n+        appendLinesToSource(NUMBER_OF_LINES);\n+\n+        final Properties props = new Properties();\n+        props.setProperty(\"name\", \"debezium-engine\");\n+        props.setProperty(\"connector.class\", \"org.apache.kafka.connect.file.FileStreamSourceConnector\");\n+        props.setProperty(StandaloneConfig.OFFSET_STORAGE_FILE_FILENAME_CONFIG, OFFSET_STORE_PATH.toAbsolutePath().toString());\n+        props.setProperty(\"offset.flush.interval.ms\", \"0\");\n+        props.setProperty(\"file\", TEST_FILE_PATH.toAbsolutePath().toString());\n+        props.setProperty(\"topic\", \"topicX\");\n+\n+        CountDownLatch firstLatch = new CountDownLatch(1);\n+        CountDownLatch allLatch = new CountDownLatch(6);\n+\n+        // create an engine with our custom class\n+        final DebeziumEngine<SourceRecord> engine = DebeziumEngine.create(SourceRecord.class)", "originalCommit": "3aaaa848ecefb3354a23993ade74ecff5eeb8981", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg2MDQ0Ng==", "url": "https://github.com/debezium/debezium/pull/1264#discussion_r383860446", "bodyText": "@gunnarmorling Indirect format definition added", "author": "jpechane", "createdAt": "2020-02-25T12:55:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQ5MDIyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg2MjU0Mw==", "url": "https://github.com/debezium/debezium/pull/1264#discussion_r383862543", "bodyText": "Ok, thx. LGTM.", "author": "gunnarmorling", "createdAt": "2020-02-25T12:59:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQ5MDIyNQ=="}], "type": "inlineReview"}, {"oid": "aba87197c907db86a59eb204d42e987897c1511f", "url": "https://github.com/debezium/debezium/commit/aba87197c907db86a59eb204d42e987897c1511f", "message": "DBZ-234 Provide return type indirectly", "committedDate": "2020-02-25T12:54:15Z", "type": "commit"}, {"oid": "cca491c6c8484d522586b225303ee238027e645d", "url": "https://github.com/debezium/debezium/commit/cca491c6c8484d522586b225303ee238027e645d", "message": "DBZ-234 Fix API scope", "committedDate": "2020-02-25T13:04:39Z", "type": "commit"}]}