{"pr_number": 2022, "pr_title": "DBZ-2167 Use legacy parser for testing purposes only", "pr_createdAt": "2020-12-17T14:02:05Z", "pr_url": "https://github.com/debezium/debezium/pull/2022", "timeline": [{"oid": "64bdb03d74055a7ebb9f0d849aff9cc18f5130c4", "url": "https://github.com/debezium/debezium/commit/64bdb03d74055a7ebb9f0d849aff9cc18f5130c4", "message": "DBZ-2167 Use legacy parser for testing purposes only", "committedDate": "2020-12-17T14:05:28Z", "type": "commit"}, {"oid": "64bdb03d74055a7ebb9f0d849aff9cc18f5130c4", "url": "https://github.com/debezium/debezium/commit/64bdb03d74055a7ebb9f0d849aff9cc18f5130c4", "message": "DBZ-2167 Use legacy parser for testing purposes only", "committedDate": "2020-12-17T14:05:28Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTYyNDQ3MA==", "url": "https://github.com/debezium/debezium/pull/2022#discussion_r545624470", "bodyText": "Ugh :) Why again do we need TokenStream in main? And if it's truly needed over there (and not test-only), can't we extend?", "author": "gunnarmorling", "createdAt": "2020-12-18T07:42:00Z", "path": "debezium-core/src/test/java/io/debezium/util/parser/TokenStream.java", "diffHunk": "@@ -0,0 +1,2592 @@\n+/*\n+ * Copyright Debezium Authors.\n+ *\n+ * Licensed under the Apache Software License version 2.0, available at http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package io.debezium.util.parser;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.ListIterator;\n+import java.util.NoSuchElementException;\n+import java.util.Objects;\n+import java.util.function.IntConsumer;\n+import java.util.function.LongConsumer;\n+\n+import io.debezium.annotation.Immutable;\n+import io.debezium.annotation.NotThreadSafe;\n+import io.debezium.function.BooleanConsumer;\n+import io.debezium.text.ParsingException;\n+import io.debezium.text.Position;\n+import io.debezium.text.XmlCharacters;\n+import io.debezium.util.Strings;\n+\n+/**\n+ * A copy of {@link io.debezium.text.TokenStream} class that provides additional methods necessary for test parser.", "originalCommit": "64bdb03d74055a7ebb9f0d849aff9cc18f5130c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTYyOTEzNQ==", "url": "https://github.com/debezium/debezium/pull/2022#discussion_r545629135", "bodyText": "It is used in TableIdParser and in Strings.\nI was attemptin to do the extension first but that would need not insignificant changes including even generfication of the class which I thought is unnecessary complication. Hence I followed the path of the least resistence and made the copy so the original tokenizer is not polluted with SQL specific stuff.", "author": "jpechane", "createdAt": "2020-12-18T07:53:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTYyNDQ3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU1ODA3Mg==", "url": "https://github.com/debezium/debezium/pull/2022#discussion_r546558072", "bodyText": "How about moving the affected tests to the MySQL connector module then, so we could get rid of the Legacy parser impl altogether?", "author": "gunnarmorling", "createdAt": "2020-12-21T07:56:28Z", "path": "debezium-core/src/test/java/io/debezium/relational/history/KafkaDatabaseHistoryTest.java", "diffHunk": "@@ -29,11 +29,11 @@\n import io.debezium.doc.FixFor;\n import io.debezium.kafka.KafkaCluster;\n import io.debezium.relational.Tables;\n-import io.debezium.relational.ddl.DdlParserSql2003;\n-import io.debezium.relational.ddl.LegacyDdlParser;\n import io.debezium.text.ParsingException;\n import io.debezium.util.Collect;\n import io.debezium.util.Testing;\n+import io.debezium.util.parser.DdlParserSql2003;\n+import io.debezium.util.parser.LegacyDdlParser;", "originalCommit": "64bdb03d74055a7ebb9f0d849aff9cc18f5130c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjYxOTk5Nw==", "url": "https://github.com/debezium/debezium/pull/2022#discussion_r546619997", "bodyText": "@gunnarmorling Done. I am not sure if it is structurally clean but as a pragmatic solution it works.", "author": "jpechane", "createdAt": "2020-12-21T10:13:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU1ODA3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjYyOTQzNg==", "url": "https://github.com/debezium/debezium/pull/2022#discussion_r546629436", "bodyText": "Yes, it's a bit of a blurry line. But maintaining a whole parser impl only for testing seems like too much of an overhead to me. I think it's the better approach now.", "author": "gunnarmorling", "createdAt": "2020-12-21T10:32:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU1ODA3Mg=="}], "type": "inlineReview"}, {"oid": "e59fa6f7071621d24f35a5b3b5dac9da3270dfa0", "url": "https://github.com/debezium/debezium/commit/e59fa6f7071621d24f35a5b3b5dac9da3270dfa0", "message": "DBZ-2167 Remove legacy parser completely; tests depending on parser move to MySQL", "committedDate": "2020-12-21T10:11:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjYyODc5Mw==", "url": "https://github.com/debezium/debezium/pull/2022#discussion_r546628793", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    record(23, 1, \"CREATE TABLE\\nnperson ( name VARCHAR(22) NOT NULL );\", all, t3, t2, t1);\n          \n          \n            \n                    record(23, 1, \"CREATE TABLE\\nperson ( name VARCHAR(22) NOT NULL );\", all, t3, t2, t1);\n          \n      \n    \n    \n  \n\nOne \"n\" too much?", "author": "gunnarmorling", "createdAt": "2020-12-21T10:31:08Z", "path": "debezium-connector-mysql/src/test/java/io/debezium/relational/history/AbstractDatabaseHistoryTest.java", "diffHunk": "@@ -94,8 +94,8 @@ protected Tables recover(long pos, int entry) {\n     @Test\n     public void shouldRecordChangesAndRecoverToVariousPoints() {\n         record(01, 0, \"CREATE TABLE foo ( first VARCHAR(22) NOT NULL );\", all, t3, t2, t1, t0);\n-        record(23, 1, \"CREATE TABLE\\\\nperson ( name VARCHAR(22) NOT NULL );\", all, t3, t2, t1);\n-        record(30, 2, \"CREATE TABLE address\\\\n( street VARCHAR(22) NOT NULL );\", all, t3, t2);\n+        record(23, 1, \"CREATE TABLE\\nnperson ( name VARCHAR(22) NOT NULL );\", all, t3, t2, t1);", "originalCommit": "e59fa6f7071621d24f35a5b3b5dac9da3270dfa0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjYzMzU5OA==", "url": "https://github.com/debezium/debezium/pull/2022#discussion_r546633598", "bodyText": "ns are for free so I probably wanted to be generous with them before Christmas ;-)", "author": "jpechane", "createdAt": "2020-12-21T10:41:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjYyODc5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjYzNjU5Ng==", "url": "https://github.com/debezium/debezium/pull/2022#discussion_r546636596", "bodyText": "LOL :)", "author": "gunnarmorling", "createdAt": "2020-12-21T10:47:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjYyODc5Mw=="}], "type": "inlineReview"}, {"oid": "2150e9ad66e7ca73b41bee05287cf3c33315755f", "url": "https://github.com/debezium/debezium/commit/2150e9ad66e7ca73b41bee05287cf3c33315755f", "message": "DBZ-2167 Remove superfluous char\n\nCo-authored-by: Gunnar Morling <gunnar.morling@googlemail.com>", "committedDate": "2020-12-21T10:40:45Z", "type": "commit"}]}