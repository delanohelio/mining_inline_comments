{"pr_number": 1407, "pr_title": "DBZ-1962 Introduce column.whitelist for the Postgres connector", "pr_createdAt": "2020-04-10T16:08:26Z", "pr_url": "https://github.com/debezium/debezium/pull/1407", "timeline": [{"oid": "8c3346e4eb3c36f41800e0f5c6926b8491ecfa56", "url": "https://github.com/debezium/debezium/commit/8c3346e4eb3c36f41800e0f5c6926b8491ecfa56", "message": "DBZ-1962 Introduce column.whitelist for the Postgres connector", "committedDate": "2020-04-10T16:17:04Z", "type": "commit"}, {"oid": "694cf8872022940cd5d8a3aa55ee5784a0f22d6b", "url": "https://github.com/debezium/debezium/commit/694cf8872022940cd5d8a3aa55ee5784a0f22d6b", "message": "DBZ-1962 Remove TABLE_WHITELIST and TABLE_BLACKLIST in favor of definitions in RelationalDatabaseConnectorConfig", "committedDate": "2020-04-14T12:51:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM2NzI5Nw==", "url": "https://github.com/debezium/debezium/pull/1407#discussion_r409367297", "bodyText": "Could you add the @FixFor annotation?", "author": "gunnarmorling", "createdAt": "2020-04-16T08:16:05Z", "path": "debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/PostgresConnectorIT.java", "diffHunk": "@@ -768,6 +769,26 @@ public void shouldTakeBlacklistFiltersIntoAccount() throws Exception {\n         assertNoRecordsToConsume();\n     }\n \n+    @Test", "originalCommit": "8c3346e4eb3c36f41800e0f5c6926b8491ecfa56", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM2NzgxMg==", "url": "https://github.com/debezium/debezium/pull/1407#discussion_r409367812", "bodyText": "Could you also add another test case which ensures that a whitelisted column can be subject to column masking or truncating?", "author": "gunnarmorling", "createdAt": "2020-04-16T08:16:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM2NzI5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAxMzEwOA==", "url": "https://github.com/debezium/debezium/pull/1407#discussion_r410013108", "bodyText": "Done, extended the test", "author": "jhuiting", "createdAt": "2020-04-17T06:17:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM2NzI5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM2OTUwNA==", "url": "https://github.com/debezium/debezium/pull/1407#discussion_r409369504", "bodyText": "This validation should go to COLUMN_BLACKLIST, right? Would be nice to add a test asserting that validation.", "author": "gunnarmorling", "createdAt": "2020-04-16T08:19:35Z", "path": "debezium-core/src/main/java/io/debezium/relational/RelationalDatabaseConnectorConfig.java", "diffHunk": "@@ -181,6 +181,20 @@ public static DecimalHandlingMode parse(String value, String defaultValue) {\n             .withImportance(Importance.MEDIUM)\n             .withDescription(\"\");\n \n+    /**\n+     * A comma-separated list of regular expressions that match fully-qualified names of columns to be excluded from monitoring\n+     * and change messages. The exact form of fully qualified names for columns might vary between connector types.\n+     * For instance, they could be of the form {@code <databaseName>.<tableName>.<columnName>} or\n+     * {@code <schemaName>.<tableName>.<columnName>} or {@code <databaseName>.<schemaName>.<tableName>.<columnName>}.\n+     */\n+    public static final Field COLUMN_WHITELIST = Field.create(\"column.whitelist\")\n+            .withDisplayName(\"Include Columns\")\n+            .withType(Type.STRING)\n+            .withWidth(Width.LONG)\n+            .withImportance(Importance.MEDIUM)\n+            .withValidation(RelationalDatabaseConnectorConfig::validateColumnBlacklist)", "originalCommit": "8c3346e4eb3c36f41800e0f5c6926b8491ecfa56", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAxMzE2Mw==", "url": "https://github.com/debezium/debezium/pull/1407#discussion_r410013163", "bodyText": "Done, and added a test", "author": "jhuiting", "createdAt": "2020-04-17T06:17:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM2OTUwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM5MjIyMA==", "url": "https://github.com/debezium/debezium/pull/1407#discussion_r409392220", "bodyText": "Seems like this table s1.b is not used later on?", "author": "gunnarmorling", "createdAt": "2020-04-16T08:54:45Z", "path": "debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/PostgresConnectorIT.java", "diffHunk": "@@ -768,6 +769,26 @@ public void shouldTakeBlacklistFiltersIntoAccount() throws Exception {\n         assertNoRecordsToConsume();\n     }\n \n+    @Test\n+    public void shouldTakeColumnWhitelistFilterIntoAccount() throws Exception {\n+        String setupStmt = SETUP_TABLES_STMT +\n+                \"CREATE TABLE s1.b (pk SERIAL, aa integer, bb integer, PRIMARY KEY(pk));\" +", "originalCommit": "8c3346e4eb3c36f41800e0f5c6926b8491ecfa56", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAxMzIwMw==", "url": "https://github.com/debezium/debezium/pull/1407#discussion_r410013203", "bodyText": "Removed", "author": "jhuiting", "createdAt": "2020-04-17T06:17:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM5MjIyMA=="}], "type": "inlineReview"}, {"oid": "7b637a29472b83e0d474af4fa6e718726a42fdcf", "url": "https://github.com/debezium/debezium/commit/7b637a29472b83e0d474af4fa6e718726a42fdcf", "message": "DBZ-1962 Fix PR feedback", "committedDate": "2020-04-17T07:19:33Z", "type": "commit"}, {"oid": "70c51c6acb913a75ef4c08b24d08a62ecff6d7e1", "url": "https://github.com/debezium/debezium/commit/70c51c6acb913a75ef4c08b24d08a62ecff6d7e1", "message": "DBZ-1962 Adding option descriptions", "committedDate": "2020-04-17T13:23:18Z", "type": "commit"}]}