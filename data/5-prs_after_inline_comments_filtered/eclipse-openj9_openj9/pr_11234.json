{"pr_number": 11234, "pr_title": "Move native Thread.setNameImpl method after Thread initialize()", "pr_createdAt": "2020-11-19T21:51:07Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/11234", "timeline": [{"oid": "0b7cf926713981340ec44bf069ad3d8852d86556", "url": "https://github.com/eclipse-openj9/openj9/commit/0b7cf926713981340ec44bf069ad3d8852d86556", "message": "Move native Thread.setNameImpl method after Thread initialize()\n\nTo ensure proper Thread/ClassLoader initialization before binding the\nnative method java.lang.Thread.setNameImpl(threadRef, threadName), move\nit after initialize(booting, threadGroup, null, null, true) within the\nThread constructor;\nLimit the change to JDK15+.\n\n\nSigned-off-by: Jason Feng <fengj@ca.ibm.com>", "committedDate": "2020-11-20T00:19:14Z", "type": "forcePushed"}, {"oid": "44b07827802a5dd25e815640308eb4131001eb66", "url": "https://github.com/eclipse-openj9/openj9/commit/44b07827802a5dd25e815640308eb4131001eb66", "message": "Move native Thread.setNameImpl method after Thread initialize()\n\nTo ensure proper Thread/ClassLoader initialization before binding the\nnative method java.lang.Thread.setNameImpl(threadRef, threadName), move\nit after initialize(booting, threadGroup, null, null, true) within the\nThread constructor;\nLimit the change to JDK15+ booting stage.\n\n\nSigned-off-by: Jason Feng <fengj@ca.ibm.com>", "committedDate": "2020-11-20T13:00:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzczMjc2OQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/11234#discussion_r527732769", "bodyText": "Eventually we want to eliminate all the JavaNN flags in favour of using JAVA_SPEC_VERSION.\nRather than add new references to Java15, could you express this as:\n/*[IF JAVA_SPEC_VERSION < 15]*/", "author": "keithc-ca", "createdAt": "2020-11-20T14:35:15Z", "path": "jcl/src/java.base/share/classes/java/lang/Thread.java", "diffHunk": "@@ -156,7 +156,9 @@ private Thread(String vmName, Object vmThreadGroup, int vmPriority, boolean vmIs\n \tsuper();\n \n \tString threadName = (vmName == null) ? newName() : vmName;\n+\t/*[IF !Java15]*/", "originalCommit": "44b07827802a5dd25e815640308eb4131001eb66", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc0MDk5Mg==", "url": "https://github.com/eclipse-openj9/openj9/pull/11234#discussion_r527740992", "bodyText": "Updated accordingly.", "author": "JasonFengJ9", "createdAt": "2020-11-20T14:47:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzczMjc2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc0NTgwOQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/11234#discussion_r527745809", "bodyText": "Thanks.", "author": "keithc-ca", "createdAt": "2020-11-20T14:55:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzczMjc2OQ=="}], "type": "inlineReview"}, {"oid": "4350e06cea37e9fa64248242147f0e722e0988bf", "url": "https://github.com/eclipse-openj9/openj9/commit/4350e06cea37e9fa64248242147f0e722e0988bf", "message": "Move native Thread.setNameImpl method after Thread initialize()\n\nTo ensure proper Thread/ClassLoader initialization before binding the\nnative method java.lang.Thread.setNameImpl(threadRef, threadName), move\nit after initialize(booting, threadGroup, null, null, true) within the\nThread constructor;\nLimit the change to JDK15+ booting stage.\n\n\nSigned-off-by: Jason Feng <fengj@ca.ibm.com>", "committedDate": "2020-11-20T14:46:41Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzgxMTA2MA==", "url": "https://github.com/eclipse-openj9/openj9/pull/11234#discussion_r527811060", "bodyText": "Sorry, one more thing. Please add a comment to explain why the Java 15 code is different.", "author": "pshipton", "createdAt": "2020-11-20T16:33:13Z", "path": "jcl/src/java.base/share/classes/java/lang/Thread.java", "diffHunk": "@@ -180,6 +186,9 @@ private Thread(String vmName, Object vmThreadGroup, int vmPriority, boolean vmIs\n  \t\n \t/*[PR 100718] Initialize System.in after the main thread */\n \tif (booting) {\n+\t\t/*[IF JAVA_SPEC_VERSION >= 15]*/\n+\t\tsetNameImpl(threadRef, threadName);", "originalCommit": "4350e06cea37e9fa64248242147f0e722e0988bf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzgzMzUzNQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/11234#discussion_r527833535", "bodyText": "Added a comment to explain the rational of this change.", "author": "JasonFengJ9", "createdAt": "2020-11-20T17:06:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzgxMTA2MA=="}], "type": "inlineReview"}, {"oid": "c6702918104a97dd0c9bc1996c910b955d25b091", "url": "https://github.com/eclipse-openj9/openj9/commit/c6702918104a97dd0c9bc1996c910b955d25b091", "message": "Move native Thread.setNameImpl method after Thread initialize()\n\nTo ensure proper Thread/ClassLoader initialization before binding the\nnative method java.lang.Thread.setNameImpl(threadRef, threadName), move\nit after initialize(booting, threadGroup, null, null, true) within the\nThread constructor;\nLimit the change to JDK15+ booting stage.\n\n\nSigned-off-by: Jason Feng <fengj@ca.ibm.com>", "committedDate": "2020-11-20T17:04:17Z", "type": "commit"}, {"oid": "c6702918104a97dd0c9bc1996c910b955d25b091", "url": "https://github.com/eclipse-openj9/openj9/commit/c6702918104a97dd0c9bc1996c910b955d25b091", "message": "Move native Thread.setNameImpl method after Thread initialize()\n\nTo ensure proper Thread/ClassLoader initialization before binding the\nnative method java.lang.Thread.setNameImpl(threadRef, threadName), move\nit after initialize(booting, threadGroup, null, null, true) within the\nThread constructor;\nLimit the change to JDK15+ booting stage.\n\n\nSigned-off-by: Jason Feng <fengj@ca.ibm.com>", "committedDate": "2020-11-20T17:04:17Z", "type": "forcePushed"}]}