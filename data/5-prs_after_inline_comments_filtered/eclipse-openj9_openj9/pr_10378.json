{"pr_number": 10378, "pr_title": "Add unit test for simplifyBoundCheckWithThrowException", "pr_createdAt": "2020-08-12T17:23:06Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/10378", "timeline": [{"oid": "3e9d9e1ab17ee863ac31dde2d4242e360025717f", "url": "https://github.com/eclipse-openj9/openj9/commit/3e9d9e1ab17ee863ac31dde2d4242e360025717f", "message": "Add unit test for simplifyBoundCheckWithThrowException\n\nSimilar pattern like BNDCHK but with different exception is simplified\nby simplifyBoundCheckWithThrowException. This commit adds test cases\nfor the simplifier.\n\nSigned-off-by: Mohammad Nazmul Alam <mohammad.nazmul.alam@ibm.com>", "committedDate": "2020-08-13T20:34:55Z", "type": "forcePushed"}, {"oid": "2376df4e612758dcf8deab2c4881e2886b4c51f6", "url": "https://github.com/eclipse-openj9/openj9/commit/2376df4e612758dcf8deab2c4881e2886b4c51f6", "message": "Add unit test for simplifyBoundCheckWithThrowException\n\nSimilar pattern like BNDCHK but with different exception is simplified\nby simplifyBoundCheckWithThrowException. This commit adds test cases\nfor the simplifier.\n\nSigned-off-by: Mohammad Nazmul Alam <mohammad.nazmul.alam@ibm.com>", "committedDate": "2021-05-18T05:17:07Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNDQwMjUwNA==", "url": "https://github.com/eclipse-openj9/openj9/pull/10378#discussion_r634402504", "bodyText": "Some mixture of tabs and spaces here.", "author": "fjeremic", "createdAt": "2021-05-18T13:50:10Z", "path": "test/functional/JIT_Test/src/jit/test/tr/BNDCHKSimplify/BNDCHKSimplifyTest.java", "diffHunk": "@@ -0,0 +1,157 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020, 2021 IBM Corp. and others\n+ *\n+ * This program and the accompanying materials are made available under\n+ * the terms of the Eclipse Public License 2.0 which accompanies this\n+ * distribution and is available at https://www.eclipse.org/legal/epl-2.0/\n+ * or the Apache License, Version 2.0 which accompanies this distribution and\n+ * is available at https://www.apache.org/licenses/LICENSE-2.0.\n+ *\n+ * This Source Code may also be made available under the following\n+ * Secondary Licenses when the conditions for such availability set\n+ * forth in the Eclipse Public License, v. 2.0 are satisfied: GNU\n+ * General Public License, version 2 with the GNU Classpath\n+ * Exception [1] and GNU General Public License, version 2 with the\n+ * OpenJDK Assembly Exception [2].\n+ *\n+ * [1] https://www.gnu.org/software/classpath/license.html\n+ * [2] http://openjdk.java.net/legal/assembly-exception.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n+ *******************************************************************************/\n+package jit.test.tr.BNDCHKSimplify;\n+\n+import org.testng.annotations.Test;\n+import org.testng.AssertJUnit;\n+import java.util.concurrent.ThreadLocalRandom;\n+\n+@Test(groups = { \"level.sanity\",\"component.jit\" })\n+public class BNDCHKSimplifyTest{\n+\tint limit;\n+\tint dummy;\n+\tpublic int checkIndexV1(int index) {\n+        if (index < 0 || index >= limit)\n+\t\t\tthrow new IndexOutOfBoundsException();", "originalCommit": "2376df4e612758dcf8deab2c4881e2886b4c51f6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNDQwNDQ4NA==", "url": "https://github.com/eclipse-openj9/openj9/pull/10378#discussion_r634404484", "bodyText": "Typically we don't want non-determinism in our tests, so I'd like to avoid use of random values if at all possible. If you cannot get rid of it, or if hardcoding a value does not make sense here I'd like to see the random number printed in the assert message so that users are able to reproduce the test if it ever fails.", "author": "fjeremic", "createdAt": "2021-05-18T13:52:14Z", "path": "test/functional/JIT_Test/src/jit/test/tr/BNDCHKSimplify/BNDCHKSimplifyTest.java", "diffHunk": "@@ -0,0 +1,157 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020, 2021 IBM Corp. and others\n+ *\n+ * This program and the accompanying materials are made available under\n+ * the terms of the Eclipse Public License 2.0 which accompanies this\n+ * distribution and is available at https://www.eclipse.org/legal/epl-2.0/\n+ * or the Apache License, Version 2.0 which accompanies this distribution and\n+ * is available at https://www.apache.org/licenses/LICENSE-2.0.\n+ *\n+ * This Source Code may also be made available under the following\n+ * Secondary Licenses when the conditions for such availability set\n+ * forth in the Eclipse Public License, v. 2.0 are satisfied: GNU\n+ * General Public License, version 2 with the GNU Classpath\n+ * Exception [1] and GNU General Public License, version 2 with the\n+ * OpenJDK Assembly Exception [2].\n+ *\n+ * [1] https://www.gnu.org/software/classpath/license.html\n+ * [2] http://openjdk.java.net/legal/assembly-exception.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n+ *******************************************************************************/\n+package jit.test.tr.BNDCHKSimplify;\n+\n+import org.testng.annotations.Test;\n+import org.testng.AssertJUnit;\n+import java.util.concurrent.ThreadLocalRandom;\n+\n+@Test(groups = { \"level.sanity\",\"component.jit\" })\n+public class BNDCHKSimplifyTest{\n+\tint limit;\n+\tint dummy;\n+\tpublic int checkIndexV1(int index) {\n+        if (index < 0 || index >= limit)\n+\t\t\tthrow new IndexOutOfBoundsException();\n+\t\treturn index;\n+\t}\n+\n+\tpublic int checkIndexV2(int index) {\n+\t\tif (index >= 0 && index < limit)\n+\t\t\treturn index;\n+\t\tthrow new NullPointerException();\n+\t}\n+\n+\tpublic int checkIndexV3(int index) {\n+\t\tif (index < 0)\n+\t\t\tthrow new IllegalStateException();\n+\t\tif (index >= limit)\n+\t\t\tthrow new IllegalArgumentException();\n+\t\treturn index;\n+\t}\n+\n+\tpublic int checkIndexV4(int index) {\n+\t\tif (index < 0 || index >= limit)\n+\t\t\tthrow new StringIndexOutOfBoundsException();\n+\t\tdummy += index;\n+\t\treturn index;\n+\t}\n+\n+\tvoid setLimit(int limit) {\n+\t\tthis.limit = limit;\n+\t\tthis.dummy = 0;\n+\t}\n+\n+\t@Test\n+\tpublic void whenBoundsAreInRangeThenReturnWithoutAssert(){\n+\t\tfor (int i = 0; i < 20; ++i){\n+\t\t\tBNDCHKSimplifyTest obj = new BNDCHKSimplifyTest();\n+\t\t\tobj.setLimit(10);\n+\t\t\tfor (int j=0; j < 10; ++j) {\n+\t\t\t\tobj.checkIndexV1(j);\n+\t\t\t\tobj.checkIndexV2(j);\n+\t\t\t\tobj.checkIndexV3(j);\n+\t\t\t\tobj.checkIndexV4(j);\n+\t\t\t}\n+\t\t}\n+\t\tint random = ThreadLocalRandom.current().nextInt(0, 10000 + 1);\n+\t\tBNDCHKSimplifyTest objUnderTest = new BNDCHKSimplifyTest();\n+\t\tobjUnderTest.setLimit(random);\n+\t\tfor(int i = 0; i < random; ++i) {\n+\t\t\tint actualIdx = objUnderTest.checkIndexV1(i);\n+\t\t\tAssertJUnit.assertEquals(\"Mismatched index value\", i, actualIdx);\n+\t\t}", "originalCommit": "2376df4e612758dcf8deab2c4881e2886b4c51f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNDQwNDk1MQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/10378#discussion_r634404951", "bodyText": "Similarly elsewhere.", "author": "fjeremic", "createdAt": "2021-05-18T13:52:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNDQwNDQ4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNDQ0NjI3OA==", "url": "https://github.com/eclipse-openj9/openj9/pull/10378#discussion_r634446278", "bodyText": "I have changed the randomness to a fixed maxIndex value.", "author": "mnalam-p", "createdAt": "2021-05-18T14:35:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNDQwNDQ4NA=="}], "type": "inlineReview"}, {"oid": "1db2c45457ad829709b2eeb9fb826502d9e9ca67", "url": "https://github.com/eclipse-openj9/openj9/commit/1db2c45457ad829709b2eeb9fb826502d9e9ca67", "message": "Add unit test for simplifyBoundCheckWithThrowException\n\nSimilar pattern like BNDCHK but with different exception is simplified\nby simplifyBoundCheckWithThrowException. This commit adds test cases\nfor the simplifier.\n\nSigned-off-by: Mohammad Nazmul Alam <mohammad.nazmul.alam@ibm.com>", "committedDate": "2021-05-18T14:34:36Z", "type": "forcePushed"}, {"oid": "fd932cef05a0a186e7f1c4d5f699444bc6f4eea1", "url": "https://github.com/eclipse-openj9/openj9/commit/fd932cef05a0a186e7f1c4d5f699444bc6f4eea1", "message": "Add unit test for simplifyBoundCheckWithThrowException\n\nSimilar pattern like BNDCHK but with different exception is simplified\nby simplifyBoundCheckWithThrowException. This commit adds test cases\nfor the simplifier.\n\nSigned-off-by: Mohammad Nazmul Alam <mohammad.nazmul.alam@ibm.com>", "committedDate": "2021-06-29T02:15:45Z", "type": "forcePushed"}, {"oid": "5d64db91eda2f82f3d45ddc091f363b983545faa", "url": "https://github.com/eclipse-openj9/openj9/commit/5d64db91eda2f82f3d45ddc091f363b983545faa", "message": "Fix TR_DisableBatchClear behavior on PPC\n\nThe TR_DisableBatchClear prevents the heap to be zero initialized by\nthe GC and expects explict zero initialization by the jitted code.\nOn PPC this expected behavior was not seen and thus leading to crash.\n\nThis patch enables the explicit zero initialization if the\nTR_DisableBatchClear flag is set.", "committedDate": "2021-07-05T06:37:09Z", "type": "forcePushed"}, {"oid": "1db2c45457ad829709b2eeb9fb826502d9e9ca67", "url": "https://github.com/eclipse-openj9/openj9/commit/1db2c45457ad829709b2eeb9fb826502d9e9ca67", "message": "Add unit test for simplifyBoundCheckWithThrowException\n\nSimilar pattern like BNDCHK but with different exception is simplified\nby simplifyBoundCheckWithThrowException. This commit adds test cases\nfor the simplifier.\n\nSigned-off-by: Mohammad Nazmul Alam <mohammad.nazmul.alam@ibm.com>", "committedDate": "2021-05-18T14:34:36Z", "type": "forcePushed"}, {"oid": "720932708013711f575bf44824c1981a70b4c5d9", "url": "https://github.com/eclipse-openj9/openj9/commit/720932708013711f575bf44824c1981a70b4c5d9", "message": "Add unit test for simplifyBoundCheckWithThrowException\n\nSimilar pattern like BNDCHK but with different exception is simplified\nby simplifyBoundCheckWithThrowException. This commit adds test cases\nfor the simplifier.\n\nSigned-off-by: Mohammad Nazmul Alam <mohammad.nazmul.alam@ibm.com>", "committedDate": "2021-07-09T14:15:46Z", "type": "forcePushed"}, {"oid": "5883c3933d3e3b6aafcf71ce4662a8757f3a779f", "url": "https://github.com/eclipse-openj9/openj9/commit/5883c3933d3e3b6aafcf71ce4662a8757f3a779f", "message": "Add unit test for simplifyBoundCheckWithThrowException\n\nSimilar pattern like BNDCHK but with different exception is simplified\nby simplifyBoundCheckWithThrowException. This commit adds test cases\nfor the simplifier.\n\nSigned-off-by: Mohammad Nazmul Alam <mohammad.nazmul.alam@ibm.com>", "committedDate": "2021-07-13T04:20:45Z", "type": "forcePushed"}, {"oid": "aa2fbab5b952456eb4a9f420f2423ec3a6d1ae95", "url": "https://github.com/eclipse-openj9/openj9/commit/aa2fbab5b952456eb4a9f420f2423ec3a6d1ae95", "message": "Add unit test for simplifyBoundCheckWithThrowException\n\nSimilar pattern like BNDCHK but with different exception is simplified\nby simplifyBoundCheckWithThrowException. This commit adds test cases\nfor the simplifier.\n\nSigned-off-by: Mohammad Nazmul Alam <mohammad.nazmul.alam@ibm.com>", "committedDate": "2021-07-13T04:23:57Z", "type": "commit"}, {"oid": "aa2fbab5b952456eb4a9f420f2423ec3a6d1ae95", "url": "https://github.com/eclipse-openj9/openj9/commit/aa2fbab5b952456eb4a9f420f2423ec3a6d1ae95", "message": "Add unit test for simplifyBoundCheckWithThrowException\n\nSimilar pattern like BNDCHK but with different exception is simplified\nby simplifyBoundCheckWithThrowException. This commit adds test cases\nfor the simplifier.\n\nSigned-off-by: Mohammad Nazmul Alam <mohammad.nazmul.alam@ibm.com>", "committedDate": "2021-07-13T04:23:57Z", "type": "forcePushed"}]}