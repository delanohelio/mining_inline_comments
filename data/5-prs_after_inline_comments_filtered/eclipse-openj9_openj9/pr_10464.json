{"pr_number": 10464, "pr_title": "Rework the code with Thread.interrupt()", "pr_createdAt": "2020-08-27T00:01:55Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/10464", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzk4NjkwNA==", "url": "https://github.com/eclipse-openj9/openj9/pull/10464#discussion_r477986904", "bodyText": "Please indent this line properly with this change.", "author": "gacholio", "createdAt": "2020-08-27T02:52:36Z", "path": "jcl/src/java.base/share/classes/java/lang/Thread.java", "diffHunk": "@@ -712,12 +712,12 @@ public void interrupt() {\n \t\tsun.nio.ch.Interruptible localBlockOn = blockOn;\n \t\tif (localBlockOn != null) {\n \t\t\tlocalBlockOn.interrupt(this);\n-        }\n-        /*[IF Java14]*/\n-        if (!isAlive()) {\n+\t\t}\n+\t\t/*[IF Java14]*/\n+\t\tif (threadRef == NO_REF) {\n \t\tdeadInterrupt = true;", "originalCommit": "d684bcc1a233e55070f93527913e02986b1c95ba", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzk5MTkxMA==", "url": "https://github.com/eclipse-openj9/openj9/pull/10464#discussion_r477991910", "bodyText": "I'm also still not convinced this is correct on 32-bit platforms - if there's no lock or volatile on the threadRef access, there is the possibility of tearing (may not actually be possible, depending how the macros work).", "author": "gacholio", "createdAt": "2020-08-27T02:56:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzk4NjkwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODEyMTUzMQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/10464#discussion_r478121531", "bodyText": "Updated for the indentation.\n@pshipton,   do we still need to add volatile to threadRef to ensure the safety when accessing threadRef?", "author": "ChengJin01", "createdAt": "2020-08-27T05:02:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzk4NjkwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM4NjY3Ng==", "url": "https://github.com/eclipse-openj9/openj9/pull/10464#discussion_r478386676", "bodyText": "The code is inside synchronized(lock) which protects threadRef, this change doesn't require adding volatile.", "author": "pshipton", "createdAt": "2020-08-27T12:39:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzk4NjkwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM4NzMxNw==", "url": "https://github.com/eclipse-openj9/openj9/pull/10464#discussion_r478387317", "bodyText": "The original incorrect indentation made it look like the code wasn't inside the synchronized(lock), but it is.", "author": "pshipton", "createdAt": "2020-08-27T12:40:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzk4NjkwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM4OTkwMA==", "url": "https://github.com/eclipse-openj9/openj9/pull/10464#discussion_r478389900", "bodyText": "Similarly to the other change to check isAlive, there should be a comment that a method call is being avoided.", "author": "pshipton", "createdAt": "2020-08-27T12:44:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzk4NjkwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzk4ODA1Mg==", "url": "https://github.com/eclipse-openj9/openj9/pull/10464#discussion_r477988052", "bodyText": "I don't think this does anything - since you already own the lock, calling isAlive is identical to this code, which might make this solution incorrect.", "author": "gacholio", "createdAt": "2020-08-27T02:53:26Z", "path": "jcl/src/java.base/share/classes/java/lang/Thread.java", "diffHunk": "@@ -810,7 +810,7 @@ public final boolean isDaemon() {\n public boolean isInterrupted() {\n \tsynchronized(lock) {\n \t\t/*[IF Java14]*/\n-\t\tif (!isAlive()) {\n+\t\tif (threadRef == NO_REF) {", "originalCommit": "d684bcc1a233e55070f93527913e02986b1c95ba", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzk5ODEzNQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/10464#discussion_r477998135", "bodyText": "I suspect this will work by chance - the fact that we only release VM access on certain operations (like method enter) might save us.", "author": "gacholio", "createdAt": "2020-08-27T03:00:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzk4ODA1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM4NDY0OQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/10464#discussion_r478384649", "bodyText": "We should add a comment that we are testing for isAlive without calling the method.", "author": "pshipton", "createdAt": "2020-08-27T12:35:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzk4ODA1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM5MTU5Mw==", "url": "https://github.com/eclipse-openj9/openj9/pull/10464#discussion_r478391593", "bodyText": "If @gacholio isn't willing to accept this change with the addition of the comments, then the natives need to be modified to return and set deadInterrupt instead.", "author": "pshipton", "createdAt": "2020-08-27T12:47:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzk4ODA1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM5MTc0MQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/10464#discussion_r478391741", "bodyText": "Manually inlining the isAlive call here is very brittle.  There should be a detailed comment referencing isAlive & describing why we've manually inlined it here - namely to avoid anything that might check vmaccess", "author": "DanHeidinga", "createdAt": "2020-08-27T12:47:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzk4ODA1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQyMzg4NQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/10464#discussion_r478423885", "bodyText": "I'm not familiar with this code at all so forgive me if not a relevant suggestion, but wouldn't you also want a comment at isAlive to point at this code location, in case isAlive is ever updated with new semantics that would be also needed at this code location?", "author": "mstoodle", "createdAt": "2020-08-27T13:35:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzk4ODA1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ4MzA2NQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/10464#discussion_r478483065", "bodyText": "@pshipton It's not a matter of me \"not accepting\" the change - it obviously does nothing other than avoiding a method enter/async check.", "author": "gacholio", "createdAt": "2020-08-27T14:56:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzk4ODA1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ5MjQwOQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/10464#discussion_r478492409", "bodyText": "The VM will async check on any taken branch, which in this case means the check will occur if the thread is alive (the expected case). Even if this weren't the case, building this kind of knowledge into the java code is a terrible idea.", "author": "gacholio", "createdAt": "2020-08-27T15:09:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzk4ODA1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU0MTU1NQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/10464#discussion_r478541555", "bodyText": "ok, while the current code works and avoids the problems, it seems the consensus is to put the deadInterrupt code into the natives instead @ChengJin01", "author": "pshipton", "createdAt": "2020-08-27T16:21:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzk4ODA1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU1MDU3MA==", "url": "https://github.com/eclipse-openj9/openj9/pull/10464#discussion_r478550570", "bodyText": "If you really believe this fixes anything, go ahead and commit it as-is. The issue of suspending a thread while it holds any thread lock is general - it will show up in an number of other methods. This essentially can't be fixed without moving all the locking code into the natives, which is a large amount of work.", "author": "gacholio", "createdAt": "2020-08-27T16:35:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzk4ODA1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU1OTMyOQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/10464#discussion_r478559329", "bodyText": "Getting rid of the async check from calling isAlive() does appear to fix the issues caused by #9341. This PR also removes #9907 which introduced another problem. However as you say, it's fragile to do this in the java code. It won't be hard to move the deadInterrupt boolean logic into the natives so it's not so fragile. We can defer moving all the locking code, as this is a long standing problem that nobody is requesting be fixed atm.", "author": "pshipton", "createdAt": "2020-08-27T16:50:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzk4ODA1Mg=="}], "type": "inlineReview"}, {"oid": "e2dff7995d932f6d66fa8fc78745c08228d22713", "url": "https://github.com/eclipse-openj9/openj9/commit/e2dff7995d932f6d66fa8fc78745c08228d22713", "message": "Rework the code with Thread.interrupt()\n\nThe change is to remove the previous code\nin suspendThread() plus a few modifications\nin Thread to support Thread.interrupt().\n\nSigned-off-by: Cheng Jin <jincheng@ca.ibm.com>", "committedDate": "2020-08-27T04:56:57Z", "type": "forcePushed"}, {"oid": "1b2dad7b702158c330958fd49c67c58795ef3726", "url": "https://github.com/eclipse-openj9/openj9/commit/1b2dad7b702158c330958fd49c67c58795ef3726", "message": "Rework the code with Thread.interrupt()\n\nThe change is to remove the previous code\nin suspendThread() plus a few modifications\nin Thread to support Thread.interrupt().\n\nSigned-off-by: Cheng Jin <jincheng@ca.ibm.com>", "committedDate": "2020-08-27T22:08:40Z", "type": "forcePushed"}, {"oid": "71dc2a65385fb75d3bc26b70ef5dce56217ab03c", "url": "https://github.com/eclipse-openj9/openj9/commit/71dc2a65385fb75d3bc26b70ef5dce56217ab03c", "message": "Rework the code with Thread.interrupt()\n\nThe change is to remove the previous code\nin suspendThread() plus a few modifications\nin Thread to support Thread.interrupt().\n\nSigned-off-by: Cheng Jin <jincheng@ca.ibm.com>", "committedDate": "2020-08-27T23:23:34Z", "type": "forcePushed"}, {"oid": "1b7ab25e6655cf510e64b2918cf0c4d2408c092d", "url": "https://github.com/eclipse-openj9/openj9/commit/1b7ab25e6655cf510e64b2918cf0c4d2408c092d", "message": "Rework the code with Thread.interrupt()\n\nThe change is to remove the previous code\nin suspendThread() plus a few modifications\nin Thread to support Thread.interrupt().\n\nSigned-off-by: Cheng Jin <jincheng@ca.ibm.com>", "committedDate": "2020-08-28T01:31:22Z", "type": "commit"}, {"oid": "1b7ab25e6655cf510e64b2918cf0c4d2408c092d", "url": "https://github.com/eclipse-openj9/openj9/commit/1b7ab25e6655cf510e64b2918cf0c4d2408c092d", "message": "Rework the code with Thread.interrupt()\n\nThe change is to remove the previous code\nin suspendThread() plus a few modifications\nin Thread to support Thread.interrupt().\n\nSigned-off-by: Cheng Jin <jincheng@ca.ibm.com>", "committedDate": "2020-08-28T01:31:22Z", "type": "forcePushed"}]}