{"pr_number": 10882, "pr_title": "Remove references to Weak/SoftCleanable from CleanerShutdown", "pr_createdAt": "2020-10-14T03:31:19Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/10882", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY5MDYyNw==", "url": "https://github.com/eclipse-openj9/openj9/pull/10882#discussion_r504690627", "bodyText": "I think this should use weakRemove rather than phantomRemove.", "author": "keithc-ca", "createdAt": "2020-10-14T13:46:08Z", "path": "jcl/src/java.base/share/classes/jdk/internal/ref/CleanerShutdown.java", "diffHunk": "@@ -49,25 +49,31 @@ public static void shutdownCleaner() {\n \t\t\n \t\ttry {\n \t\t\tMethod phantomRemove = PhantomCleanable.class.getDeclaredMethod(\"remove\", (Class<?>[]) null); //$NON-NLS-1$\n+\t\t\t/*[IF !Java16]*/\n \t\t\tMethod weakRemove = WeakCleanable.class.getDeclaredMethod(\"remove\", (Class<?>[]) null); //$NON-NLS-1$\n \t\t\tMethod softRemove = SoftCleanable.class.getDeclaredMethod(\"remove\", (Class<?>[]) null); //$NON-NLS-1$\n+\t\t\t/*[ENDIF]*/\n \t\t\tAccessController.doPrivileged((PrivilegedAction<Void>) () -> {\n \t\t\t\tphantomRemove.setAccessible(true);\n+\t\t\t\t/*[IF !Java16]*/\n \t\t\t\tweakRemove.setAccessible(true);\n \t\t\t\tsoftRemove.setAccessible(true);\n+\t\t\t\t/*[ENDIF]*/\n \t\t\t\treturn null;\n \t\t\t});\n \t\t\twhile(!commonCleanerImpl.phantomCleanableList.isListEmpty()) {\n \t\t\t\tphantomRemove.invoke(commonCleanerImpl.phantomCleanableList, (Object[]) null);\n \t\t\t}\n \n+\t\t\t/*[IF !Java16]*/\n \t\t\twhile(!commonCleanerImpl.weakCleanableList.isListEmpty()) {\n \t\t\t\tphantomRemove.invoke(commonCleanerImpl.weakCleanableList, (Object[]) null);", "originalCommit": "66af842da19a9b34f3f1021d54fe98da9e8be813", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc4Mzk0OQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/10882#discussion_r504783949", "bodyText": "I think we should just delete the weak and soft code for all versions considering it has never worked properly. Thoughts?", "author": "pshipton", "createdAt": "2020-10-14T15:45:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY5MDYyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc5NjE1Mg==", "url": "https://github.com/eclipse-openj9/openj9/pull/10882#discussion_r504796152", "bodyText": "That seems reasonable: the broken code (if it ever executed) would throw IllegalArgumentException.", "author": "keithc-ca", "createdAt": "2020-10-14T16:02:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY5MDYyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY5MTAzNw==", "url": "https://github.com/eclipse-openj9/openj9/pull/10882#discussion_r504691037", "bodyText": "I think this should use softRemove rather than phantomRemove.", "author": "keithc-ca", "createdAt": "2020-10-14T13:46:31Z", "path": "jcl/src/java.base/share/classes/jdk/internal/ref/CleanerShutdown.java", "diffHunk": "@@ -49,25 +49,31 @@ public static void shutdownCleaner() {\n \t\t\n \t\ttry {\n \t\t\tMethod phantomRemove = PhantomCleanable.class.getDeclaredMethod(\"remove\", (Class<?>[]) null); //$NON-NLS-1$\n+\t\t\t/*[IF !Java16]*/\n \t\t\tMethod weakRemove = WeakCleanable.class.getDeclaredMethod(\"remove\", (Class<?>[]) null); //$NON-NLS-1$\n \t\t\tMethod softRemove = SoftCleanable.class.getDeclaredMethod(\"remove\", (Class<?>[]) null); //$NON-NLS-1$\n+\t\t\t/*[ENDIF]*/\n \t\t\tAccessController.doPrivileged((PrivilegedAction<Void>) () -> {\n \t\t\t\tphantomRemove.setAccessible(true);\n+\t\t\t\t/*[IF !Java16]*/\n \t\t\t\tweakRemove.setAccessible(true);\n \t\t\t\tsoftRemove.setAccessible(true);\n+\t\t\t\t/*[ENDIF]*/\n \t\t\t\treturn null;\n \t\t\t});\n \t\t\twhile(!commonCleanerImpl.phantomCleanableList.isListEmpty()) {\n \t\t\t\tphantomRemove.invoke(commonCleanerImpl.phantomCleanableList, (Object[]) null);\n \t\t\t}\n \n+\t\t\t/*[IF !Java16]*/\n \t\t\twhile(!commonCleanerImpl.weakCleanableList.isListEmpty()) {\n \t\t\t\tphantomRemove.invoke(commonCleanerImpl.weakCleanableList, (Object[]) null);\n \t\t\t}\n \n \t\t\twhile(!commonCleanerImpl.softCleanableList.isListEmpty()) {\n \t\t\t\tphantomRemove.invoke(commonCleanerImpl.softCleanableList, (Object[]) null);", "originalCommit": "66af842da19a9b34f3f1021d54fe98da9e8be813", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "51a043e4163504f4d4a975ee4f39f04eea7039eb", "url": "https://github.com/eclipse-openj9/openj9/commit/51a043e4163504f4d4a975ee4f39f04eea7039eb", "message": "Remove references to Weak/SoftCleanable from CleanerShutdown\n\nWeakCleanable and SoftCleanable are removed in JDK16. The cleanup code\nfor these never worked properly in older versions, obviously it's not\nneeded.\n\nIssue https://github.com/eclipse/openj9/issues/10881\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>", "committedDate": "2020-10-14T15:54:03Z", "type": "commit"}, {"oid": "51a043e4163504f4d4a975ee4f39f04eea7039eb", "url": "https://github.com/eclipse-openj9/openj9/commit/51a043e4163504f4d4a975ee4f39f04eea7039eb", "message": "Remove references to Weak/SoftCleanable from CleanerShutdown\n\nWeakCleanable and SoftCleanable are removed in JDK16. The cleanup code\nfor these never worked properly in older versions, obviously it's not\nneeded.\n\nIssue https://github.com/eclipse/openj9/issues/10881\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>", "committedDate": "2020-10-14T15:54:03Z", "type": "forcePushed"}]}