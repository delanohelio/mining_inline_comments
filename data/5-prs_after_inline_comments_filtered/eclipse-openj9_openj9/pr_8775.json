{"pr_number": 8775, "pr_title": "Improve JITServer functional tests and re-enable them", "pr_createdAt": "2020-03-06T16:29:21Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/8775", "timeline": [{"oid": "16d31df29fa6d7460cdadff40d7d19231a12f8c3", "url": "https://github.com/eclipse-openj9/openj9/commit/16d31df29fa6d7460cdadff40d7d19231a12f8c3", "message": "Loop compilation activity in JITServer tests\n\nThese JITServer tests are somewhat sensitive to timing because once\nthe client finishes its work it will exit, but some tests need a long\nrunning client that keeps generating compilation activity while they\nstart/stop/manipulate the server.\n\nThis patch modifies JarTester (the app the client runs) to loop\nforever. JarTester loads and compiles a list of classes via\nshort-lived classloader instances, so simply wrapping that code\nin a loop will allow it to keep generating compilation activity.\n\nSigned-off-by: Younes Manton <ymanton@ca.ibm.com>", "committedDate": "2020-03-06T16:41:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA0MjExMA==", "url": "https://github.com/eclipse-openj9/openj9/pull/8775#discussion_r389042110", "bodyText": "If the process runs forever, who shuts it down? Timeout?", "author": "mpirvu", "createdAt": "2020-03-06T17:32:27Z", "path": "test/functional/JIT_Test/src/jit/test/jar/ZipTester.java", "diffHunk": "@@ -53,23 +58,31 @@\n \tpublic static void main(String args[]) {\n \t\tnew ZipTester().run(args);\n \t}\n-\t\n+\n \tpublic void run(String args[]) {\n \t\tif (args.length < 1 || args[0].isEmpty()) {\n \t\t\tprintUsageText();\n \t\t\tAssert.fail();\n \t\t}\n \n-\t\tString classFilter = args[0];\n+\t\tString classFilter = \"\";\n+\t\tboolean loopForever = false;\n \t\tint zipFilenameIndex = 0;\n-\t\tif (!classFilter.startsWith(CLASS_FILTER_TAG))\n-\t\t\tclassFilter = \"\";\n-\t\telse {\n-\t\t\tclassFilter = classFilter.substring(CLASS_FILTER_TAG.length());\n-\t\t\tzipFilenameIndex = 1;\n+\n+\t\twhile (args[zipFilenameIndex].startsWith(TAG_PREFIX)) {\n+\t\t\tif (args[zipFilenameIndex].startsWith(CLASS_FILTER_TAG))\n+\t\t\t\tclassFilter = classFilter.substring(CLASS_FILTER_TAG.length());\n+\t\t\telse if (args[zipFilenameIndex].equals(LOOP_FOREVER_TAG))\n+\t\t\t\tloopForever = true;\n+\t\t\tzipFilenameIndex++;\n \t\t}\n \n-\t\tprocess(classFilter, args, zipFilenameIndex);\n+\t\tif (loopForever)\n+\t\t\tlogger.info(LOOP_FOREVER_TAG + \" was specified; test will run continuously until the JVM is terminated.\");\n+\n+\t\tdo {\n+\t\t\tprocess(classFilter, args, zipFilenameIndex);", "originalCommit": "16d31df29fa6d7460cdadff40d7d19231a12f8c3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA2OTIyNg==", "url": "https://github.com/eclipse-openj9/openj9/pull/8775#discussion_r389069226", "bodyText": "The harness which starts/stops the clients/servers sends a SIGTERM to stop them. The timing is driven by the harness not the client; the harness assumes the client is running some repetitive task that keeps generating compilation activity and runs clients and servers for various time periods, i.e. \"think time\".\nBy looping forever we just ensure that compilation activity is happening for the entire duration of the think time rather than the client finishing really quickly on a fast machine and leaving an idle server sitting around for the rest of the test time period.", "author": "ymanton", "createdAt": "2020-03-06T18:28:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA0MjExMA=="}], "type": "inlineReview"}, {"oid": "3f904def64874be1f75ae0d2c553fb169ea36ee9", "url": "https://github.com/eclipse-openj9/openj9/commit/3f904def64874be1f75ae0d2c553fb169ea36ee9", "message": "Improve JITServer test diagnostic messages\n\nThis patch prints more details when things fail and makes it easier\nto distinguish client and server log dumps in the output.\n\nSigned-off-by: Younes Manton <ymanton@ca.ibm.com>", "committedDate": "2020-03-19T14:24:12Z", "type": "commit"}, {"oid": "b93c66bb9072c792af35130697e2385eb3919360", "url": "https://github.com/eclipse-openj9/openj9/commit/b93c66bb9072c792af35130697e2385eb3919360", "message": "Handle quoted strings for JITServer test sub-procs\n\nSigned-off-by: Younes Manton <ymanton@ca.ibm.com>", "committedDate": "2020-03-19T14:24:12Z", "type": "commit"}, {"oid": "8339fd3981eae52e81cdc90f98590a26e9a5a39b", "url": "https://github.com/eclipse-openj9/openj9/commit/8339fd3981eae52e81cdc90f98590a26e9a5a39b", "message": "Loop compilation activity in JITServer tests\n\nThese JITServer tests are somewhat sensitive to timing because once\nthe client finishes its work it will exit, but some tests need a long\nrunning client that keeps generating compilation activity while they\nstart/stop/manipulate the server.\n\nThis patch modifies JarTester (the app the client runs) to loop\nforever. JarTester loads and compiles a list of classes via\nshort-lived classloader instances, so simply wrapping that code\nin a loop will allow it to keep generating compilation activity.\n\nSigned-off-by: Younes Manton <ymanton@ca.ibm.com>", "committedDate": "2020-03-19T14:24:12Z", "type": "commit"}, {"oid": "5116404df610618f90feed284df375bfdeb564d7", "url": "https://github.com/eclipse-openj9/openj9/commit/5116404df610618f90feed284df375bfdeb564d7", "message": "Re-enable JITServer functional tests\n\nThese tests were disabled temporarily while a large number of\nfailures were investigated. The suspected bug has since been\nfixed.\n\nSigned-off-by: Younes Manton <ymanton@ca.ibm.com>", "committedDate": "2020-03-19T14:25:44Z", "type": "commit"}, {"oid": "5116404df610618f90feed284df375bfdeb564d7", "url": "https://github.com/eclipse-openj9/openj9/commit/5116404df610618f90feed284df375bfdeb564d7", "message": "Re-enable JITServer functional tests\n\nThese tests were disabled temporarily while a large number of\nfailures were investigated. The suspected bug has since been\nfixed.\n\nSigned-off-by: Younes Manton <ymanton@ca.ibm.com>", "committedDate": "2020-03-19T14:25:44Z", "type": "forcePushed"}]}