{"pr_number": 9485, "pr_title": "Java 15 Use Unsafe.defineAnonyousClass() to define Hidden classes.", "pr_createdAt": "2020-05-07T16:05:50Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/9485", "timeline": [{"oid": "d67743b88a9e9680652405077eca323910119846", "url": "https://github.com/eclipse-openj9/openj9/commit/d67743b88a9e9680652405077eca323910119846", "message": "Java 15 BufferPool class has moved to a different package\n\n[ci skip]\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>", "committedDate": "2020-05-06T18:26:36Z", "type": "commit"}, {"oid": "4ef53540c99199cbd7f3f397924c16d533f357fe", "url": "https://github.com/eclipse-openj9/openj9/commit/4ef53540c99199cbd7f3f397924c16d533f357fe", "message": "Update Java 15 JVM_ Module functions parameters\n\nRelated to 8242452: During module definition, move conversion of\npackages from native to VM\n\nThe signature of JVM_DefineModule has been modified from `..., const\nchar* const* packages, jsize numPackages` to `..., jobjectArray\npackages`.\n\nAlso the package parameter of following has been modified from char* to\njstring.\nJVM_AddModuleExports\nJVM_AddModuleExportsToAllUnnamed\nJVM_AddModuleExportsToAll\n\nFixes #9293\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>", "committedDate": "2020-05-06T18:26:38Z", "type": "commit"}, {"oid": "779f063b73d2f8269164c9bd06866669fbe8ec8d", "url": "https://github.com/eclipse-openj9/openj9/commit/779f063b73d2f8269164c9bd06866669fbe8ec8d", "message": "Java 15 - stub in hidden class support\n\n[ci skip]\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>", "committedDate": "2020-05-06T18:26:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY1NDQwMw==", "url": "https://github.com/eclipse-openj9/openj9/pull/9485#discussion_r421654403", "bodyText": "Please add extra parentheses here and in similar tests on lines 391 amd 405.", "author": "keithc-ca", "createdAt": "2020-05-07T16:58:49Z", "path": "jcl/src/java.base/share/classes/java/lang/invoke/MethodHandles.java", "diffHunk": "@@ -369,7 +369,7 @@ private static boolean isSamePackage(Class<?> a, Class<?> b){\n \t\t}\n \t\t\n \t\tvoid checkAccess(MethodHandle handle, boolean skipAccessCheckPara) throws IllegalAccessException {\n-\t\t\tif (INTERNAL_PRIVILEGED == accessMode) {\n+\t\t\tif (INTERNAL_PRIVILEGED == accessMode || FULL_ACCESS_MASK == accessMode) {", "originalCommit": "171e3665ca4ef2c5da77cafbd7293d9718f22744", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY5Nzg4MA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9485#discussion_r421697880", "bodyText": "Fixed.", "author": "hangshao0", "createdAt": "2020-05-07T18:11:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY1NDQwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY1NDc4NQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9485#discussion_r421654785", "bodyText": "Please remove the unnecessary initialization.", "author": "keithc-ca", "createdAt": "2020-05-07T16:59:25Z", "path": "jcl/src/java.base/share/classes/java/lang/invoke/MethodHandles.java", "diffHunk": "@@ -2256,17 +2256,38 @@ public boolean hasFullPrivilegeAccess() {\n \t\t}\n \n \t\tstatic class ClassDefiner {\n-\t\t\tClass<?> defineClass(boolean option) {\n-\t\t\t\treturn null;\n+\t\t\tprivate byte[] classBytes;\n+\t\t\tprivate String className;\n+\t\t\tprivate Lookup lookup;\n+\t\t\tClassDefiner(String name, byte[] template, Lookup lookupObj) {\n+\t\t\t\tclassName = name;\n+\t\t\t\tclassBytes = template;\n+\t\t\t\tlookup = lookupObj;\n+\t\t\t}\n+\t\t\tClass<?> defineClass(boolean initOption) {\n+\t\t\t\tJavaLangAccess jlAccess = SharedSecrets.getJavaLangAccess();\n+\t\t\t\tClass<?> lookupClass = lookup.lookupClass();\n+\t\t\t\treturn jlAccess.defineClass(lookupClass.getClassLoader(), lookupClass, className, classBytes, jlAccess.protectionDomain(lookupClass), initOption, 0, null);\n \t\t\t}\n \t\t}\n \n \t\tpublic Lookup defineHiddenClass(byte[] bytes, boolean initOption, ClassOption... classOptions) {\n-\t\t\treturn null;\n+\t\t\tClassReader cr = null;", "originalCommit": "171e3665ca4ef2c5da77cafbd7293d9718f22744", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY5Nzk4Nw==", "url": "https://github.com/eclipse-openj9/openj9/pull/9485#discussion_r421697987", "bodyText": "Fixed.", "author": "hangshao0", "createdAt": "2020-05-07T18:11:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY1NDc4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY1NzMwMQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9485#discussion_r421657301", "bodyText": "The class and all its fields should be final.", "author": "keithc-ca", "createdAt": "2020-05-07T17:03:28Z", "path": "jcl/src/java.base/share/classes/java/lang/invoke/MethodHandles.java", "diffHunk": "@@ -2256,17 +2256,38 @@ public boolean hasFullPrivilegeAccess() {\n \t\t}\n \n \t\tstatic class ClassDefiner {\n-\t\t\tClass<?> defineClass(boolean option) {\n-\t\t\t\treturn null;\n+\t\t\tprivate byte[] classBytes;\n+\t\t\tprivate String className;\n+\t\t\tprivate Lookup lookup;", "originalCommit": "171e3665ca4ef2c5da77cafbd7293d9718f22744", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY5ODA0NA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9485#discussion_r421698044", "bodyText": "Fixed.", "author": "hangshao0", "createdAt": "2020-05-07T18:11:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY1NzMwMQ=="}], "type": "inlineReview"}, {"oid": "d819802c70261667a2876cbd9aaa3b0302e2ee3f", "url": "https://github.com/eclipse-openj9/openj9/commit/d819802c70261667a2876cbd9aaa3b0302e2ee3f", "message": "Use Unsafe.defineAnonyousClass() to define Hidden classes.\n\nAdd implementation of new Hidden class APIs to unblock the JDK15 builds.\n\nissue #9328\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>", "committedDate": "2020-05-07T18:10:55Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTcwNTkwMw==", "url": "https://github.com/eclipse-openj9/openj9/pull/9485#discussion_r421705903", "bodyText": "This should be defined in jcl/src/java.base/share/classes/com/ibm/oti/util/ExternalMessages-MasterIndex.properties.", "author": "pshipton", "createdAt": "2020-05-07T18:25:21Z", "path": "jcl/src/java.base/share/classes/java/lang/invoke/MethodHandles.java", "diffHunk": "@@ -2255,18 +2261,39 @@ public boolean hasFullPrivilegeAccess() {\n \t\t\tSTRONG\n \t\t}\n \n-\t\tstatic class ClassDefiner {\n-\t\t\tClass<?> defineClass(boolean option) {\n-\t\t\t\treturn null;\n+\t\tstatic final class ClassDefiner {\n+\t\t\tprivate final byte[] classBytes;\n+\t\t\tprivate final String className;\n+\t\t\tprivate final Lookup lookup;\n+\t\t\tClassDefiner(String name, byte[] template, Lookup lookupObj) {\n+\t\t\t\tclassName = name;\n+\t\t\t\tclassBytes = template;\n+\t\t\t\tlookup = lookupObj;\n+\t\t\t}\n+\t\t\tClass<?> defineClass(boolean initOption) {\n+\t\t\t\tJavaLangAccess jlAccess = SharedSecrets.getJavaLangAccess();\n+\t\t\t\tClass<?> lookupClass = lookup.lookupClass();\n+\t\t\t\treturn jlAccess.defineClass(lookupClass.getClassLoader(), lookupClass, className, classBytes, jlAccess.protectionDomain(lookupClass), initOption, 0, null);\n \t\t\t}\n \t\t}\n \n \t\tpublic Lookup defineHiddenClass(byte[] bytes, boolean initOption, ClassOption... classOptions) {\n-\t\t\treturn null;\n+\t\t\tClassReader cr;\n+\t\t\ttry {\n+\t\t\t\tcr = new ClassReader(bytes);\n+\t\t\t} catch (ArrayIndexOutOfBoundsException e) {\n+\t\t\t\t/*[MSG \"K065Y2\", \"The class byte array is corrupted\"]*/", "originalCommit": "d819802c70261667a2876cbd9aaa3b0302e2ee3f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTcxMTYxMA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9485#discussion_r421711610", "bodyText": "It is already there:\nhttps://github.com/eclipse/openj9/blob/master/jcl/src/java.base/share/classes/com/ibm/oti/util/ExternalMessages-MasterIndex.properties#L407", "author": "hangshao0", "createdAt": "2020-05-07T18:35:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTcwNTkwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ3MDUyNQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9485#discussion_r423470525", "bodyText": "@hangshao0 pls wrap this in an AccessController.doPrivileged() to fix some of the test failures.", "author": "pshipton", "createdAt": "2020-05-12T05:29:47Z", "path": "jcl/src/java.base/share/classes/java/lang/invoke/MethodHandles.java", "diffHunk": "@@ -2255,18 +2261,39 @@ public boolean hasFullPrivilegeAccess() {\n \t\t\tSTRONG\n \t\t}\n \n-\t\tstatic class ClassDefiner {\n-\t\t\tClass<?> defineClass(boolean option) {\n-\t\t\t\treturn null;\n+\t\tstatic final class ClassDefiner {\n+\t\t\tprivate final byte[] classBytes;\n+\t\t\tprivate final String className;\n+\t\t\tprivate final Lookup lookup;\n+\t\t\tClassDefiner(String name, byte[] template, Lookup lookupObj) {\n+\t\t\t\tclassName = name;\n+\t\t\t\tclassBytes = template;\n+\t\t\t\tlookup = lookupObj;\n+\t\t\t}\n+\t\t\tClass<?> defineClass(boolean initOption) {\n+\t\t\t\tJavaLangAccess jlAccess = SharedSecrets.getJavaLangAccess();\n+\t\t\t\tClass<?> lookupClass = lookup.lookupClass();\n+\t\t\t\treturn jlAccess.defineClass(lookupClass.getClassLoader(), lookupClass, className, classBytes, jlAccess.protectionDomain(lookupClass), initOption, 0, null);", "originalCommit": "d819802c70261667a2876cbd9aaa3b0302e2ee3f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA2NTg0Mg==", "url": "https://github.com/eclipse-openj9/openj9/pull/9485#discussion_r424065842", "bodyText": "Fixed.", "author": "hangshao0", "createdAt": "2020-05-12T22:17:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ3MDUyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzcwODIzMA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9485#discussion_r423708230", "bodyText": "Seems adding this is causing a number of test suite failures, even in jdk11.\nhttps://ci.eclipse.org/openj9/job/Test_openjdk11_j9_sanity.functional_s390x_linux_Personal/413", "author": "pshipton", "createdAt": "2020-05-12T12:53:39Z", "path": "jcl/src/java.base/share/classes/java/lang/invoke/MethodHandles.java", "diffHunk": "@@ -369,7 +369,9 @@ private static boolean isSamePackage(Class<?> a, Class<?> b){\n \t\t}\n \t\t\n \t\tvoid checkAccess(MethodHandle handle, boolean skipAccessCheckPara) throws IllegalAccessException {\n-\t\t\tif (INTERNAL_PRIVILEGED == accessMode) {\n+\t\t\tif ((INTERNAL_PRIVILEGED == accessMode)\n+\t\t\t\t|| (FULL_ACCESS_MASK == accessMode)", "originalCommit": "d819802c70261667a2876cbd9aaa3b0302e2ee3f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg2NDI3MA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9485#discussion_r423864270", "bodyText": "I added this line because OpenJ9 is throwing IllegalAccessException with message \"K0587\". The new Java 15 code from InnerClassLambdaMetafactory is passing in accessMode FULL_ACCESS_MASK. It is calling from findConstructor().", "author": "hangshao0", "createdAt": "2020-05-12T16:19:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzcwODIzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk1MjQ5OA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9485#discussion_r423952498", "bodyText": "OK, I seem to know what is going on. definingClass should be made nestmate of accessClass which is missing here.", "author": "hangshao0", "createdAt": "2020-05-12T18:40:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzcwODIzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA2ODc3MA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9485#discussion_r424068770", "bodyText": "I have removed the checks for FULL_ACCESS_MASK.\nI don't find an existing APIs (Java or native) that could let me make a class to be nestmate of another class. So I have changed the native implementation of getNestHost() to return the nesthost of the loopup class for hidden classes (which is defined by Unsafe.defineAnonyousClass()).\nI am able to build Java 15 with the current change.", "author": "hangshao0", "createdAt": "2020-05-12T22:25:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzcwODIzMA=="}], "type": "inlineReview"}, {"oid": "f4f8499a80154cdab447f1a798c01781a2f91452", "url": "https://github.com/eclipse-openj9/openj9/commit/f4f8499a80154cdab447f1a798c01781a2f91452", "message": "Use Unsafe.defineAnonyousClass() to define Hidden classes.\n\nAdd implementation of new Hidden class APIs to unblock the JDK15 builds.\n\nissue #9328\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>", "committedDate": "2020-05-12T22:16:06Z", "type": "forcePushed"}, {"oid": "dab142323c228b28f3ff65915c6af38a1962cb9c", "url": "https://github.com/eclipse-openj9/openj9/commit/dab142323c228b28f3ff65915c6af38a1962cb9c", "message": "Use Unsafe.defineAnonyousClass() to define Hidden classes.\n\nAdd implementation of new Hidden class APIs to unblock the JDK15 builds.\n\nissue #9328\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>", "committedDate": "2020-05-12T22:28:38Z", "type": "forcePushed"}, {"oid": "9d734583e83f1df12e0c082b1200ecc0aae06877", "url": "https://github.com/eclipse-openj9/openj9/commit/9d734583e83f1df12e0c082b1200ecc0aae06877", "message": "Use Unsafe.defineAnonyousClass() to define Hidden classes.\n\nAdd implementation of new Hidden class APIs to unblock the JDK15 builds.\n\nissue #9328\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>", "committedDate": "2020-05-13T18:17:28Z", "type": "commit"}, {"oid": "9d734583e83f1df12e0c082b1200ecc0aae06877", "url": "https://github.com/eclipse-openj9/openj9/commit/9d734583e83f1df12e0c082b1200ecc0aae06877", "message": "Use Unsafe.defineAnonyousClass() to define Hidden classes.\n\nAdd implementation of new Hidden class APIs to unblock the JDK15 builds.\n\nissue #9328\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>", "committedDate": "2020-05-13T18:17:28Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE5MzYwNw==", "url": "https://github.com/eclipse-openj9/openj9/pull/9485#discussion_r425193607", "bodyText": "This needs javadoc", "author": "DanHeidinga", "createdAt": "2020-05-14T14:45:06Z", "path": "jcl/src/java.base/share/classes/java/lang/invoke/MethodHandles.java", "diffHunk": "@@ -2245,7 +2246,57 @@ public boolean hasFullPrivilegeAccess() {\n \t\t\treturn (!isWeakenedLookup() && (MODULE == (accessMode & MODULE)));\n \t\t}\n \t\t/*[ENDIF] Java14*/\n-\t\t/*[ENDIF]*/\n+\t\t/*[ENDIF] Sidecar19-SE */\n+\t\t\n+\t\t/*[IF Java15]*/\n+\t\t// TODO: implement support for hidden classes.\n+\n+\t\tpublic enum ClassOption {", "originalCommit": "9d734583e83f1df12e0c082b1200ecc0aae06877", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQwODM5Nw==", "url": "https://github.com/eclipse-openj9/openj9/pull/9485#discussion_r425408397", "bodyText": "Javadoc added.", "author": "hangshao0", "createdAt": "2020-05-14T20:23:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE5MzYwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE5MzcxMw==", "url": "https://github.com/eclipse-openj9/openj9/pull/9485#discussion_r425193713", "bodyText": "this needs javadoc", "author": "DanHeidinga", "createdAt": "2020-05-14T14:45:15Z", "path": "jcl/src/java.base/share/classes/java/lang/invoke/MethodHandles.java", "diffHunk": "@@ -2245,7 +2246,57 @@ public boolean hasFullPrivilegeAccess() {\n \t\t\treturn (!isWeakenedLookup() && (MODULE == (accessMode & MODULE)));\n \t\t}\n \t\t/*[ENDIF] Java14*/\n-\t\t/*[ENDIF]*/\n+\t\t/*[ENDIF] Sidecar19-SE */\n+\t\t\n+\t\t/*[IF Java15]*/\n+\t\t// TODO: implement support for hidden classes.\n+\n+\t\tpublic enum ClassOption {\n+\t\t\tNESTMATE,\n+\t\t\tSTRONG\n+\t\t}\n+\n+\t\tstatic final class ClassDefiner {\n+\t\t\tprivate final byte[] classBytes;\n+\t\t\tprivate final String className;\n+\t\t\tprivate final Lookup lookup;\n+\t\t\tClassDefiner(String name, byte[] template, Lookup lookupObj) {\n+\t\t\t\tclassName = name;\n+\t\t\t\tclassBytes = template;\n+\t\t\t\tlookup = lookupObj;\n+\t\t\t}\n+\t\t\tClass<?> defineClass(boolean initOption) {\n+\t\t\t\tClass<?> ret = AccessController.doPrivileged(new PrivilegedAction<Class<?>>() {\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic Class<?> run() {\n+\t\t\t\t\t\tJavaLangAccess jlAccess = SharedSecrets.getJavaLangAccess();\n+\t\t\t\t\t\tClass<?> lookupClass = lookup.lookupClass();\n+\t\t\t\t\t\treturn jlAccess.defineClass(lookupClass.getClassLoader(), lookupClass, className, classBytes, jlAccess.protectionDomain(lookupClass), initOption, 0, null);\n+\t\t\t\t\t}\n+\t\t\t\t});\n+\t\t\t\treturn ret;\n+\t\t\t}\n+\t\t}\n+\n+\t\tpublic Lookup defineHiddenClass(byte[] bytes, boolean initOption, ClassOption... classOptions) {", "originalCommit": "9d734583e83f1df12e0c082b1200ecc0aae06877", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE5NTI3MQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9485#discussion_r425195271", "bodyText": "And I assume classOptions will be used later in the complete implementation?", "author": "DanHeidinga", "createdAt": "2020-05-14T14:47:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE5MzcxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQwODkwMg==", "url": "https://github.com/eclipse-openj9/openj9/pull/9485#discussion_r425408902", "bodyText": "Javadoc added.\n\nclassOptions will be used later in the complete implementation?\n\nYes.", "author": "hangshao0", "createdAt": "2020-05-14T20:24:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE5MzcxMw=="}], "type": "inlineReview"}, {"oid": "7409156e38579e03b0c51dda66d6e9d2921321c7", "url": "https://github.com/eclipse-openj9/openj9/commit/7409156e38579e03b0c51dda66d6e9d2921321c7", "message": "Use copyStringToUTF8Helper() to copy and covert packageName\n\nissue #9328\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>", "committedDate": "2020-05-14T20:19:11Z", "type": "forcePushed"}, {"oid": "b82465308095552ffedab48004b09f1900cc9dcd", "url": "https://github.com/eclipse-openj9/openj9/commit/b82465308095552ffedab48004b09f1900cc9dcd", "message": "Add Javadoc to ClassOption and defineHiddenClass()\nUse copyStringToUTF8Helper() to copy and covert packageName\n\nissue #9328\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>", "committedDate": "2020-05-14T20:21:26Z", "type": "forcePushed"}, {"oid": "daf4400f83b6f2780731f9af44285689cf8c4876", "url": "https://github.com/eclipse-openj9/openj9/commit/daf4400f83b6f2780731f9af44285689cf8c4876", "message": "Add Javadoc to ClassOption and defineHiddenClass()\n\n1. Add Javadoc to ClassOption and defineHiddenClass()\n2. Use copyStringToUTF8Helper() to copy and covert packageName\n\nissue #9328\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>", "committedDate": "2020-05-14T20:22:37Z", "type": "forcePushed"}, {"oid": "ffb52617650a012067b2a96d8c9d4e6eb6561e24", "url": "https://github.com/eclipse-openj9/openj9/commit/ffb52617650a012067b2a96d8c9d4e6eb6561e24", "message": "Add Javadoc to ClassOption and defineHiddenClass()\n\n1. Add Javadoc to ClassOption and defineHiddenClass()\n2. Use copyStringToUTF8Helper() to copy and covert packageName\n\nissue #9328\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>", "committedDate": "2020-05-14T20:35:20Z", "type": "forcePushed"}, {"oid": "01a489f2e358482ffcfacd7d9a39f53f94a33c7f", "url": "https://github.com/eclipse-openj9/openj9/commit/01a489f2e358482ffcfacd7d9a39f53f94a33c7f", "message": "Add Javadoc to ClassOption and defineHiddenClass()\n\n1. Add Javadoc to ClassOption and defineHiddenClass()\n2. Use copyStringToUTF8Helper() to copy and covert packageName\n\nissue #9328\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>", "committedDate": "2020-05-14T20:39:45Z", "type": "forcePushed"}, {"oid": "e3fe7d852f049455738ba053681d498f5d411d92", "url": "https://github.com/eclipse-openj9/openj9/commit/e3fe7d852f049455738ba053681d498f5d411d92", "message": "Add Javadoc to ClassOption and defineHiddenClass()\n\n1. Add Javadoc to ClassOption and defineHiddenClass()\n2. Use copyStringToUTF8Helper() to copy and covert packageName\n\nissue #9328\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>", "committedDate": "2020-05-14T20:59:33Z", "type": "forcePushed"}, {"oid": "c7af4815342fbca844bbfb7502dd257c016ac0c1", "url": "https://github.com/eclipse-openj9/openj9/commit/c7af4815342fbca844bbfb7502dd257c016ac0c1", "message": "Add Javadoc to ClassOption and defineHiddenClass()\n\n1. Add Javadoc to ClassOption and defineHiddenClass()\n2. Use copyStringToUTF8Helper() to copy and covert packageName\n\nissue #9328\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>", "committedDate": "2020-05-14T21:44:02Z", "type": "forcePushed"}, {"oid": "ce8f59bf90dbe10c1ddde6ff4793219870280a69", "url": "https://github.com/eclipse-openj9/openj9/commit/ce8f59bf90dbe10c1ddde6ff4793219870280a69", "message": "Add Javadoc to ClassOption and defineHiddenClass()\n\n1. Add Javadoc to ClassOption and defineHiddenClass()\n2. Use copyStringToUTF8Helper() to copy and covert packageName\n\nissue #9328\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>", "committedDate": "2020-05-14T22:31:48Z", "type": "forcePushed"}, {"oid": "7cd85a98229bff1358979e3c6331fd39850d1b54", "url": "https://github.com/eclipse-openj9/openj9/commit/7cd85a98229bff1358979e3c6331fd39850d1b54", "message": "Add Javadoc to ClassOption and defineHiddenClass()\n\n1. Add Javadoc to ClassOption and defineHiddenClass()\n2. Use copyStringToUTF8Helper() to copy and covert packageName\n\nissue #9328\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>", "committedDate": "2020-05-20T15:37:16Z", "type": "forcePushed"}, {"oid": "27972950b3d8f6d7d3ed6cd4f7e1a95645966b7c", "url": "https://github.com/eclipse-openj9/openj9/commit/27972950b3d8f6d7d3ed6cd4f7e1a95645966b7c", "message": "Add Javadoc to ClassOption and defineHiddenClass()\n\n1. Add Javadoc to ClassOption and defineHiddenClass()\n2. Use copyStringToUTF8Helper() to copy and covert packageName\n\nissue #9328\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>", "committedDate": "2020-05-20T19:55:51Z", "type": "forcePushed"}, {"oid": "f656f5705543449e2f6d8aa45af6d05ab48f0d3c", "url": "https://github.com/eclipse-openj9/openj9/commit/f656f5705543449e2f6d8aa45af6d05ab48f0d3c", "message": "Add Javadoc to ClassOption and defineHiddenClass()\n\n1. Add Javadoc to ClassOption and defineHiddenClass()\n2. Use copyStringToUTF8Helper() to copy and covert packageName\n\nissue #9328\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>", "committedDate": "2020-05-20T21:13:12Z", "type": "forcePushed"}, {"oid": "34cde16abf1fe10e8362652999ecc7da9cc7cf73", "url": "https://github.com/eclipse-openj9/openj9/commit/34cde16abf1fe10e8362652999ecc7da9cc7cf73", "message": "Replace JNI with VM helper API to convert package name. Add new Javadoc\nand implement new API in Java 15.\n\n1. Use copyStringToUTF8Helper() to copy and covert packageName\n2. Add Javadoc to ClassOption and defineHiddenClass().\n3. Add implementation of stringConcatInitialCoder() in Access.java\n\nissue #9328\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>", "committedDate": "2020-05-21T15:24:46Z", "type": "forcePushed"}, {"oid": "7f8ae5a87834531c11059e7eeffe3e7fe10803b6", "url": "https://github.com/eclipse-openj9/openj9/commit/7f8ae5a87834531c11059e7eeffe3e7fe10803b6", "message": "Use VM helper to convert package name. Implement new API in Java 15.\n\n1. Use copyStringToUTF8Helper() to copy and covert packageName\n2. Add Javadoc to ClassOption and defineHiddenClass().\n3. Add implementation of stringConcatInitialCoder() in Access.java\n\nissue #9328\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>", "committedDate": "2020-05-21T17:56:48Z", "type": "commit"}, {"oid": "7f8ae5a87834531c11059e7eeffe3e7fe10803b6", "url": "https://github.com/eclipse-openj9/openj9/commit/7f8ae5a87834531c11059e7eeffe3e7fe10803b6", "message": "Use VM helper to convert package name. Implement new API in Java 15.\n\n1. Use copyStringToUTF8Helper() to copy and covert packageName\n2. Add Javadoc to ClassOption and defineHiddenClass().\n3. Add implementation of stringConcatInitialCoder() in Access.java\n\nissue #9328\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>", "committedDate": "2020-05-21T17:56:48Z", "type": "forcePushed"}]}