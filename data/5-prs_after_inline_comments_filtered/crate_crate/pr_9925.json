{"pr_number": 9925, "pr_title": "Use the new function registry for the subscript_obj function.", "pr_createdAt": "2020-05-06T09:09:59Z", "pr_url": "https://github.com/crate/crate/pull/9925", "timeline": [{"oid": "cdec7ee20d85eea9103190e0ce82f0a4684968aa", "url": "https://github.com/crate/crate/commit/cdec7ee20d85eea9103190e0ce82f0a4684968aa", "message": "Use the new function registry for the subscript_obj function.", "committedDate": "2020-05-06T09:09:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDcxNjM2Nw==", "url": "https://github.com/crate/crate/pull/9925#discussion_r420716367", "bodyText": "There are no type variable constraints at the arguments or return types. what is this for?", "author": "seut", "createdAt": "2020-05-06T11:22:56Z", "path": "sql/src/main/java/io/crate/expression/scalar/SubscriptObjectFunction.java", "diffHunk": "@@ -26,51 +26,55 @@\n import io.crate.expression.symbol.Function;\n import io.crate.expression.symbol.Literal;\n import io.crate.expression.symbol.Symbol;\n-import io.crate.metadata.BaseFunctionResolver;\n import io.crate.metadata.FunctionIdent;\n-import io.crate.metadata.FunctionImplementation;\n import io.crate.metadata.FunctionInfo;\n import io.crate.metadata.Scalar;\n import io.crate.metadata.TransactionContext;\n-import io.crate.metadata.functions.params.FuncParams;\n-import io.crate.metadata.functions.params.Param;\n+import io.crate.metadata.functions.Signature;\n import io.crate.types.DataType;\n import io.crate.types.DataTypes;\n import io.crate.types.ObjectType;\n-import io.crate.types.StringType;\n \n import javax.annotation.Nullable;\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Map;\n \n+import static io.crate.metadata.functions.TypeVariableConstraint.typeVariable;\n+\n /**\n  * Scalar function to resolve elements inside a map.\n  */\n public class SubscriptObjectFunction extends Scalar<Object, Map<String, Object>> {\n \n     public static final String NAME = \"subscript_obj\";\n-    private static final FuncParams FUNCTION_PARAMS = FuncParams\n-        .builder(Param.of(ObjectType.untyped()), Param.of(StringType.INSTANCE))\n-        .withVarArgs(Param.of(StringType.INSTANCE))\n-        .build();\n \n-    private FunctionInfo info;\n+    public static final Signature SIGNATURE = Signature\n+        .scalar(\n+            NAME,\n+            ObjectType.untyped().getTypeSignature(),\n+            DataTypes.STRING.getTypeSignature(),\n+            DataTypes.UNDEFINED.getTypeSignature())\n+        .withVariableArity()\n+        .withTypeVariableConstraints(typeVariable(\"text\"));", "originalCommit": "cdec7ee20d85eea9103190e0ce82f0a4684968aa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDczMTI0OA==", "url": "https://github.com/crate/crate/pull/9925#discussion_r420731248", "bodyText": "as discussed, i'll, of course, remove it. it is just some impl artifact..", "author": "kovrus", "createdAt": "2020-05-06T11:52:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDcxNjM2Nw=="}], "type": "inlineReview"}]}