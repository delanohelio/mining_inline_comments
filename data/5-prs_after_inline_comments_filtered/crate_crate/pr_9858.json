{"pr_number": 9858, "pr_title": "Drop guava dependecy from sql-parser.", "pr_createdAt": "2020-04-14T13:08:09Z", "pr_url": "https://github.com/crate/crate/pull/9858", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI1NzAzNQ==", "url": "https://github.com/crate/crate/pull/9858#discussion_r408257035", "bodyText": "Could also use a StringBuilder or StringJoiner directly here and further above", "author": "mfussenegger", "createdAt": "2020-04-14T16:06:48Z", "path": "sql-parser/src/main/java/io/crate/sql/ExpressionFormatter.java", "diffHunk": "@@ -586,35 +584,35 @@ protected String visitTryCast(TryCast node, @Nullable List<Expression> parameter\n \n         @Override\n         protected String visitSearchedCaseExpression(SearchedCaseExpression node, @Nullable List<Expression> parameters) {\n-            ImmutableList.Builder<String> parts = ImmutableList.builder();\n+            ArrayList<String> parts = new ArrayList<>();\n             parts.add(\"CASE\");\n             for (WhenClause whenClause : node.getWhenClauses()) {\n                 parts.add(whenClause.accept(this, parameters));\n             }\n             if (node.getDefaultValue() != null) {\n-                parts.add(\"ELSE\")\n-                    .add(node.getDefaultValue().accept(this, parameters));\n+                parts.add(\"ELSE\");\n+                parts.add(node.getDefaultValue().accept(this, parameters));\n             }\n             parts.add(\"END\");\n \n-            return \"(\" + String.join(\" \", parts.build()) + \")\";\n+            return \"(\" + String.join(\" \", parts) + \")\";\n         }\n \n         @Override\n         protected String visitSimpleCaseExpression(SimpleCaseExpression node, @Nullable List<Expression> parameters) {\n-            ImmutableList.Builder<String> parts = ImmutableList.builder();\n-            parts.add(\"CASE\")\n-                .add(node.getOperand().accept(this, parameters));\n+            ArrayList<String> parts = new ArrayList<>();", "originalCommit": "95bd4cd1e991a18685cd846247835a99784283d9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM3Mzg4Mw==", "url": "https://github.com/crate/crate/pull/9858#discussion_r408373883", "bodyText": "i went for StringBuilder", "author": "kovrus", "createdAt": "2020-04-14T19:13:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI1NzAzNQ=="}], "type": "inlineReview"}, {"oid": "1f13ee935867f915200f24085397af663000b8d3", "url": "https://github.com/crate/crate/commit/1f13ee935867f915200f24085397af663000b8d3", "message": "Drop guava dependecy from sql-parser.\n\nRemove the Guava dependency from the sql-parser module.\n\nThe library was mainly used to check preconditions\n(checkNotNull, checkArgument), implement equals/hashCode/toString\nmethods, and as well provided a couple of util methods to join\nstrings, etc. Such as all of the above can be easily replaced with\n`java.base` there is no reason to depend on Guava in the sql-parser module.", "committedDate": "2020-04-14T18:59:09Z", "type": "commit"}, {"oid": "1f13ee935867f915200f24085397af663000b8d3", "url": "https://github.com/crate/crate/commit/1f13ee935867f915200f24085397af663000b8d3", "message": "Drop guava dependecy from sql-parser.\n\nRemove the Guava dependency from the sql-parser module.\n\nThe library was mainly used to check preconditions\n(checkNotNull, checkArgument), implement equals/hashCode/toString\nmethods, and as well provided a couple of util methods to join\nstrings, etc. Such as all of the above can be easily replaced with\n`java.base` there is no reason to depend on Guava in the sql-parser module.", "committedDate": "2020-04-14T18:59:09Z", "type": "forcePushed"}]}