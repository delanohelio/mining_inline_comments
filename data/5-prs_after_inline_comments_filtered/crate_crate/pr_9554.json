{"pr_number": 9554, "pr_title": "Insert from values/subquery inserts data into the same partition if the same partition by value (object[timestamp]) is used. (bp #9546)", "pr_createdAt": "2020-01-21T16:39:04Z", "pr_url": "https://github.com/crate/crate/pull/9554", "timeline": [{"oid": "43dc1e62c9a65d70550308d406b8be2ae29f14a9", "url": "https://github.com/crate/crate/commit/43dc1e62c9a65d70550308d406b8be2ae29f14a9", "message": "Add test for insert from subquery/values into the same partition.", "committedDate": "2020-01-22T10:54:48Z", "type": "forcePushed"}, {"oid": "fa78105f83d3c0aef829e7487377a69936de1664", "url": "https://github.com/crate/crate/commit/fa78105f83d3c0aef829e7487377a69936de1664", "message": "Pass the return type info as a second argument of cast functions.\n\nCurrently, it is not possible to resolve a function based on\nits return type. For instance, it won't be possible to generated\nan object cast function with the return type which inner types\nhave to be considered. Therefore, to bypass this limitation we\nencode the return type info as a second argument of a cast function\nand resolve the return type based on it.", "committedDate": "2020-01-29T11:14:53Z", "type": "forcePushed"}, {"oid": "b90711b15f0fdaea8b51104d19db9edd37b72c19", "url": "https://github.com/crate/crate/commit/b90711b15f0fdaea8b51104d19db9edd37b72c19", "message": "fixup! Implement equals, hashCode and isConvertableTo in ObjectType.", "committedDate": "2020-01-29T14:35:28Z", "type": "forcePushed"}, {"oid": "2c9c68311d7fb6b635e052455536e94d298dc454", "url": "https://github.com/crate/crate/commit/2c9c68311d7fb6b635e052455536e94d298dc454", "message": "fixup! Implement equals, hashCode and isConvertableTo in ObjectType.", "committedDate": "2020-01-29T14:36:15Z", "type": "forcePushed"}, {"oid": "db93358f895d2aef0dfb4408dcb580a7e47ed60c", "url": "https://github.com/crate/crate/commit/db93358f895d2aef0dfb4408dcb580a7e47ed60c", "message": "Add test for insert from subquery/values into the same partition.", "committedDate": "2020-01-29T15:54:33Z", "type": "forcePushed"}, {"oid": "0d76b4810f759445f510e2d64a2f10d4d1c44fbf", "url": "https://github.com/crate/crate/commit/0d76b4810f759445f510e2d64a2f10d4d1c44fbf", "message": "Add test for insert from subquery/values into the same partition.", "committedDate": "2020-01-29T16:31:07Z", "type": "forcePushed"}, {"oid": "3f362d30088b1f30c7fa9d722cea6e1c20b39331", "url": "https://github.com/crate/crate/commit/3f362d30088b1f30c7fa9d722cea6e1c20b39331", "message": "Add test for insert from subquery/values into the same partition.", "committedDate": "2020-01-29T16:56:40Z", "type": "forcePushed"}, {"oid": "5ef486cc7ec4ebaa3dc9862c7f6fd234e4fb2912", "url": "https://github.com/crate/crate/commit/5ef486cc7ec4ebaa3dc9862c7f6fd234e4fb2912", "message": "Add test for insert from subquery/values into the same partition.", "committedDate": "2020-01-29T18:00:23Z", "type": "forcePushed"}, {"oid": "8d568694fbc30fd58ec4ad5114729a3ff6577d06", "url": "https://github.com/crate/crate/commit/8d568694fbc30fd58ec4ad5114729a3ff6577d06", "message": "Add test for insert from subquery/values into the same partition.", "committedDate": "2020-01-29T18:02:18Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU5NTM1MA==", "url": "https://github.com/crate/crate/pull/9554#discussion_r372595350", "bodyText": "Isn't this the part for which we added a breaking changes entry in master?", "author": "mfussenegger", "createdAt": "2020-01-29T19:48:47Z", "path": "sql/src/main/java/io/crate/protocols/postgres/types/PGTypes.java", "diffHunk": "@@ -105,15 +105,21 @@ public static PGType get(DataType type) {\n             DataType<?> innerType = ((CollectionType) type).innerType();\n             if (innerType instanceof CollectionType) {\n                 // if this is a nested collection stream it as JSON because\n-                // postgres binary format doesn't support multidimensional arrays with sub-arrays of different length\n+                // postgres binary format doesn't support multidimensional arrays\n+                // with sub-arrays of different length\n                 // (something like [ [1, 2], [3] ] is not supported)\n                 return JsonType.INSTANCE;\n+            } else if (innerType.id() == ObjectType.ID) {\n+                return PGArray.JSON_ARRAY;", "originalCommit": "8d568694fbc30fd58ec4ad5114729a3ff6577d06", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjYwMTQ4OQ==", "url": "https://github.com/crate/crate/pull/9554#discussion_r372601489", "bodyText": "no, it is needed to resolve a pg type that corresponds to crate object or object array data type such as we implemented hashCode and equals in ObjectType and cannot use, for example, an instance of object data type with inner types to look up a pg type mapping in CRATE_TO_PG_TYPES.\nThese commits do not contain any breaking changes. The inner cast function signatures were changed, but it is still possible to resolve cast functions for the former signatures.", "author": "kovrus", "createdAt": "2020-01-29T20:01:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU5NTM1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjYwNDAyOA==", "url": "https://github.com/crate/crate/pull/9554#discussion_r372604028", "bodyText": "ah, but this line is wrong, it should be mapped to PGArray.JSON \n  \n    \n      crate/sql/src/main/java/io/crate/protocols/postgres/types/PGTypes.java\n    \n    \n         Line 69\n      in\n      8d56869\n    \n    \n    \n    \n\n        \n          \n           .put(new ArrayType(ObjectType.untyped()), JsonType.INSTANCE)", "author": "kovrus", "createdAt": "2020-01-29T20:07:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU5NTM1MA=="}], "type": "inlineReview"}, {"oid": "aa8f6a759a17f65fc1797bf8417f9d82c404cd1e", "url": "https://github.com/crate/crate/commit/aa8f6a759a17f65fc1797bf8417f9d82c404cd1e", "message": "Add test for insert from subquery/values into the same partition.", "committedDate": "2020-01-30T08:52:05Z", "type": "forcePushed"}, {"oid": "0de93bee8203374a2c9f053165724ff068091164", "url": "https://github.com/crate/crate/commit/0de93bee8203374a2c9f053165724ff068091164", "message": "Add test for insert from subquery/values into the same partition.", "committedDate": "2020-01-30T09:24:29Z", "type": "forcePushed"}, {"oid": "3db3114ff2b582c64e21b6780b44736252c3ef7f", "url": "https://github.com/crate/crate/commit/3db3114ff2b582c64e21b6780b44736252c3ef7f", "message": "Add test for insert from subquery/values into the same partition.", "committedDate": "2020-01-30T09:49:40Z", "type": "forcePushed"}, {"oid": "a086031733cb8ca5687134860b8a6ed73bbe5ab3", "url": "https://github.com/crate/crate/commit/a086031733cb8ca5687134860b8a6ed73bbe5ab3", "message": "Add test for insert from subquery/values into the same partition.", "committedDate": "2020-01-30T10:26:53Z", "type": "forcePushed"}, {"oid": "87a00a97f47896dbc19b4f8f5983f55ef07a8f83", "url": "https://github.com/crate/crate/commit/87a00a97f47896dbc19b4f8f5983f55ef07a8f83", "message": "Add missing inner object types to columns index metadata.", "committedDate": "2020-01-30T12:34:42Z", "type": "commit"}, {"oid": "11012d6da625fa42e5bbca58b3794cae8b78398d", "url": "https://github.com/crate/crate/commit/11012d6da625fa42e5bbca58b3794cae8b78398d", "message": "Implement equals, hashCode and isConvertableTo in ObjectType.", "committedDate": "2020-01-30T12:38:42Z", "type": "commit"}, {"oid": "f81a5dbf8292e8aab47329c1225c072548d5be38", "url": "https://github.com/crate/crate/commit/f81a5dbf8292e8aab47329c1225c072548d5be38", "message": "Merge CastFunction and TryCastFunction classes.", "committedDate": "2020-01-30T12:51:07Z", "type": "commit"}, {"oid": "65e1863337d4efd8d455b4b49b94083f38599cda", "url": "https://github.com/crate/crate/commit/65e1863337d4efd8d455b4b49b94083f38599cda", "message": "Pass the return type info as a second argument of cast functions.\n\nCurrently, it is not possible to resolve a function based on\nits return type. For instance, it won't be possible to generated\nan object cast function with the return type which inner types\nhave to be considered. Therefore, to bypass this limitation we\nencode the return type info as a second argument of a cast function\nand resolve the return type based on it.", "committedDate": "2020-01-30T12:55:19Z", "type": "commit"}, {"oid": "48379c5c3a6873bea732c2d49709cc1012d86e10", "url": "https://github.com/crate/crate/commit/48379c5c3a6873bea732c2d49709cc1012d86e10", "message": "Add test for insert from subquery/values into the same partition.", "committedDate": "2020-01-30T12:57:46Z", "type": "commit"}, {"oid": "48379c5c3a6873bea732c2d49709cc1012d86e10", "url": "https://github.com/crate/crate/commit/48379c5c3a6873bea732c2d49709cc1012d86e10", "message": "Add test for insert from subquery/values into the same partition.", "committedDate": "2020-01-30T12:57:46Z", "type": "forcePushed"}]}