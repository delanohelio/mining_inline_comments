{"pr_number": 9630, "pr_title": "Replace Nashorn with GraalVM JS engine in UDF.", "pr_createdAt": "2020-02-06T22:24:53Z", "pr_url": "https://github.com/crate/crate/pull/9630", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjEyMzY1NQ==", "url": "https://github.com/crate/crate/pull/9630#discussion_r376123655", "bodyText": "This and resolvePolyglotFunctionValue can be moved to the udf package of the sql module once we add support for more languages.", "author": "kovrus", "createdAt": "2020-02-06T22:43:37Z", "path": "enterprise/lang-js/src/main/java/io/crate/operation/language/PolyglotValuesConverter.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * This file is part of a module with proprietary Enterprise Features.\n+ *\n+ * Licensed to Crate.io Inc. (\"Crate.io\") under one or more contributor\n+ * license agreements.  See the NOTICE file distributed with this work for\n+ * additional information regarding copyright ownership.\n+ *\n+ * Unauthorized copying of this file, via any medium is strictly prohibited.\n+ *\n+ * To use this file, Crate.io must have given you permission to enable and\n+ * use such Enterprise Features and you must have a valid Enterprise or\n+ * Subscription Agreement with Crate.io.  If you enable or use the Enterprise\n+ * Features, you represent and warrant that you have a valid Enterprise or\n+ * Subscription Agreement with Crate.io.  Your use of the Enterprise Features\n+ * if governed by the terms and conditions of your Enterprise or Subscription\n+ * Agreement with Crate.io.\n+ */\n+\n+package io.crate.operation.language;\n+\n+import io.crate.data.Input;\n+import io.crate.types.ArrayType;\n+import io.crate.types.DataType;\n+import io.crate.types.DataTypes;\n+import io.crate.types.GeoPointType;\n+import io.crate.types.GeoShapeType;\n+import io.crate.types.ObjectType;\n+import org.graalvm.polyglot.TypeLiteral;\n+import org.graalvm.polyglot.Value;\n+\n+import java.util.ArrayList;\n+import java.util.Map;\n+\n+class PolyglotValuesConverter {", "originalCommit": "6105b8c3c57be33da86ecd2fccc5dc24f6a0029b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI5MjYyMw==", "url": "https://github.com/crate/crate/pull/9630#discussion_r376292623", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            ArrayList<Object> items = new ArrayList<>();\n          \n          \n            \n                            ArrayList<Object> items = new ArrayList<>(value.getArraySize());", "author": "mfussenegger", "createdAt": "2020-02-07T09:29:38Z", "path": "enterprise/lang-js/src/main/java/io/crate/operation/language/PolyglotValuesConverter.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * This file is part of a module with proprietary Enterprise Features.\n+ *\n+ * Licensed to Crate.io Inc. (\"Crate.io\") under one or more contributor\n+ * license agreements.  See the NOTICE file distributed with this work for\n+ * additional information regarding copyright ownership.\n+ *\n+ * Unauthorized copying of this file, via any medium is strictly prohibited.\n+ *\n+ * To use this file, Crate.io must have given you permission to enable and\n+ * use such Enterprise Features and you must have a valid Enterprise or\n+ * Subscription Agreement with Crate.io.  If you enable or use the Enterprise\n+ * Features, you represent and warrant that you have a valid Enterprise or\n+ * Subscription Agreement with Crate.io.  Your use of the Enterprise Features\n+ * if governed by the terms and conditions of your Enterprise or Subscription\n+ * Agreement with Crate.io.\n+ */\n+\n+package io.crate.operation.language;\n+\n+import io.crate.data.Input;\n+import io.crate.types.ArrayType;\n+import io.crate.types.DataType;\n+import io.crate.types.DataTypes;\n+import io.crate.types.GeoPointType;\n+import io.crate.types.GeoShapeType;\n+import io.crate.types.ObjectType;\n+import org.graalvm.polyglot.TypeLiteral;\n+import org.graalvm.polyglot.Value;\n+\n+import java.util.ArrayList;\n+import java.util.Map;\n+\n+class PolyglotValuesConverter {\n+\n+    private static final TypeLiteral<Number> NUMBER_TYPE_LITERAL = new TypeLiteral<>() {};\n+    private static final TypeLiteral<Map> MAP_TYPE_LITERAL = new TypeLiteral<>() {};\n+\n+    static Object toCrateObject(Value value, DataType<?> type) {\n+        if (value == null) {\n+            return null;\n+        }\n+        switch (type.id()) {\n+            case ArrayType.ID:\n+                ArrayList<Object> items = new ArrayList<>();", "originalCommit": "da421acfa41968fccc3671ba9a80ff2bef81662b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "dfd37dc44a67b8c0b77152fe567e91866d0f5eb9", "url": "https://github.com/crate/crate/commit/dfd37dc44a67b8c0b77152fe567e91866d0f5eb9", "message": "fixup! Update docs/general/user-defined-functions.rst", "committedDate": "2020-02-07T16:06:53Z", "type": "forcePushed"}, {"oid": "b9823e9a7525c83aafe255d5f5e594cdf98fef84", "url": "https://github.com/crate/crate/commit/b9823e9a7525c83aafe255d5f5e594cdf98fef84", "message": "Replace Nashorn with GraalVM JS engine in UDF.\n\nThis changes replaces the Nashorn with GraalVM JavaScript\nengine, such as Nashorn is scheduled for removal in the\nfuture JDK version, see https://openjdk.java.net/jeps/335.\n\nPlease note that we do  not use the GraalVM JIT compiler as the\noptimizing compile of the GraalVM JavaScript code, but instead\nthe GraalVM JavaScript engine is used to compile and execute\nJavaScript code.", "committedDate": "2020-02-10T09:35:38Z", "type": "forcePushed"}, {"oid": "afc67d932fef5dbac33c81aa9f132b31d1d2a037", "url": "https://github.com/crate/crate/commit/afc67d932fef5dbac33c81aa9f132b31d1d2a037", "message": "Replace Nashorn with GraalVM JS engine in UDF.\n\nThis changes replaces the Nashorn with GraalVM JavaScript\nengine, such as Nashorn is scheduled for removal in the\nfuture JDK version, see https://openjdk.java.net/jeps/335.\n\nPlease note that we do  not use the GraalVM JIT compiler as the\noptimizing compile of the GraalVM JavaScript code, but instead\nthe GraalVM JavaScript engine is used to compile and execute\nJavaScript code.", "committedDate": "2020-02-10T09:40:35Z", "type": "commit"}, {"oid": "afc67d932fef5dbac33c81aa9f132b31d1d2a037", "url": "https://github.com/crate/crate/commit/afc67d932fef5dbac33c81aa9f132b31d1d2a037", "message": "Replace Nashorn with GraalVM JS engine in UDF.\n\nThis changes replaces the Nashorn with GraalVM JavaScript\nengine, such as Nashorn is scheduled for removal in the\nfuture JDK version, see https://openjdk.java.net/jeps/335.\n\nPlease note that we do  not use the GraalVM JIT compiler as the\noptimizing compile of the GraalVM JavaScript code, but instead\nthe GraalVM JavaScript engine is used to compile and execute\nJavaScript code.", "committedDate": "2020-02-10T09:40:35Z", "type": "forcePushed"}]}