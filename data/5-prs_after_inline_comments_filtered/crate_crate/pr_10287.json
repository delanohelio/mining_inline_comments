{"pr_number": 10287, "pr_title": "Backport more engine changes from ES", "pr_createdAt": "2020-07-28T14:32:35Z", "pr_url": "https://github.com/crate/crate/pull/10287", "timeline": [{"oid": "acac66686e55c48916ff98d57152e4b08b41902b", "url": "https://github.com/crate/crate/commit/acac66686e55c48916ff98d57152e4b08b41902b", "message": "bp: Refactor IndexSearcherWrapper to disallow the wrapping of IndexSearcher\n\nhttps://github.com/elastic/elasticsearch/commit/fd4eb96d1c2ee7091d99b5a5069673de45833801", "committedDate": "2020-07-28T14:30:37Z", "type": "commit"}, {"oid": "12a88093ab5db9f5953d62282af55a5e33db59fb", "url": "https://github.com/crate/crate/commit/12a88093ab5db9f5953d62282af55a5e33db59fb", "message": "bp: Refactor index engines to manage readers instead of searchers\n\nhttps://github.com/elastic/elasticsearch/commit/399d53e5c03ae4157d9ba107d01fbecfed758972", "committedDate": "2020-07-29T08:00:37Z", "type": "commit"}, {"oid": "12a88093ab5db9f5953d62282af55a5e33db59fb", "url": "https://github.com/crate/crate/commit/12a88093ab5db9f5953d62282af55a5e33db59fb", "message": "bp: Refactor index engines to manage readers instead of searchers\n\nhttps://github.com/elastic/elasticsearch/commit/399d53e5c03ae4157d9ba107d01fbecfed758972", "committedDate": "2020-07-29T08:00:37Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjEyMTk2Nw==", "url": "https://github.com/crate/crate/pull/10287#discussion_r462121967", "bodyText": "The searchers are already ref-counted inside the engine. So it shouldn't be necessary to add another ref-counting layer on top.", "author": "mfussenegger", "createdAt": "2020-07-29T08:17:22Z", "path": "server/src/main/java/io/crate/execution/jobs/SharedShardContext.java", "diffHunk": "@@ -22,46 +22,40 @@\n \n package io.crate.execution.jobs;\n \n-import org.apache.lucene.search.IndexSearcher;\n+import java.util.function.UnaryOperator;\n+\n+import javax.annotation.concurrent.NotThreadSafe;\n+\n import org.elasticsearch.index.IndexNotFoundException;\n import org.elasticsearch.index.IndexService;\n import org.elasticsearch.index.engine.Engine;\n import org.elasticsearch.index.shard.IndexShard;\n import org.elasticsearch.index.shard.ShardId;\n import org.elasticsearch.indices.IndicesService;\n \n-import javax.annotation.concurrent.NotThreadSafe;\n-import java.util.function.UnaryOperator;\n-\n @NotThreadSafe\n public class SharedShardContext {\n \n     private final IndicesService indicesService;\n     private final ShardId shardId;\n     private final int readerId;\n-    private final UnaryOperator<IndexSearcher> wrapSearcher;\n+    private final UnaryOperator<Engine.Searcher> wrapSearcher;\n \n-    private RefCountSearcher searcher;\n     private IndexService indexService;\n     private IndexShard indexShard;\n \n     SharedShardContext(IndicesService indicesService,\n                        ShardId shardId,\n                        int readerId,\n-                       UnaryOperator<IndexSearcher> wrapSearcher) {\n+                       UnaryOperator<Engine.Searcher> wrapSearcher) {\n         this.indicesService = indicesService;\n         this.shardId = shardId;\n         this.readerId = readerId;\n         this.wrapSearcher = wrapSearcher;\n     }\n \n     public Engine.Searcher acquireSearcher(String source) throws IndexNotFoundException {\n-        if (searcher == null) {\n-            Engine.Searcher searcher = indexShard().acquireSearcher(source);\n-            this.searcher = new RefCountSearcher(shardId, searcher, wrapSearcher.apply(searcher.searcher()));\n-        }\n-        searcher.inc();\n-        return searcher;\n+        return wrapSearcher.apply(indexShard().acquireSearcher(source));", "originalCommit": "12a88093ab5db9f5953d62282af55a5e33db59fb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}