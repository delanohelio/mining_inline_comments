{"pr_number": 10142, "pr_title": "Fix class cast exception in the pg_catalog.pg_stat table.", "pr_createdAt": "2020-06-26T13:54:52Z", "pr_url": "https://github.com/crate/crate/pull/10142", "timeline": [{"oid": "99a9db8166e0ad6090f38aa9c338c5e021414779", "url": "https://github.com/crate/crate/commit/99a9db8166e0ad6090f38aa9c338c5e021414779", "message": "Fix class cast exception in the pg_catalog.pg_stat table.\n\nThe ``most_common_vals`` and ``histogram_bounds`` have the\n``array(text)`` data type. If any of these columns would\nhave the array or object value, the class cast exception will be\nthrown such as ``object::text`` and ``array::text`` operations\nare supported. This change addresses this issue.", "committedDate": "2020-06-26T14:40:38Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjI3NTQ3Mw==", "url": "https://github.com/crate/crate/pull/10142#discussion_r446275473", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw new IllegalArgumentException(e);\n          \n          \n            \n                        throw new UncheckedIOException(e);", "author": "mfussenegger", "createdAt": "2020-06-26T16:07:16Z", "path": "server/src/main/java/io/crate/types/ArrayType.java", "diffHunk": "@@ -128,6 +131,55 @@ public Precedence precedence() {\n         return convert(value, innerType::value);\n     }\n \n+    public List<String> fromAnyArray(Object[] values) throws IllegalArgumentException {\n+        if (values == null) {\n+            return null;\n+        } else {\n+            ArrayList<String> array = new ArrayList<>(values.length);\n+            for (var value : values) {\n+                array.add(anyValueToString(value));\n+            }\n+            return array;\n+        }\n+    }\n+\n+    public List<String> fromAnyArray(List<?> values) throws IllegalArgumentException {\n+        if (values == null) {\n+            return null;\n+        } else {\n+            ArrayList<String> array = new ArrayList<>(values.size());\n+            for (var value : values) {\n+                array.add(anyValueToString(value));\n+            }\n+            return array;\n+        }\n+    }\n+\n+    private String anyValueToString(Object value) {\n+        if (value == null) {\n+            return null;\n+        }\n+        try {\n+            if (value instanceof Map) {\n+                //noinspection unchecked\n+                return\n+                    Strings.toString(\n+                        XContentFactory.jsonBuilder().map((Map<String, ?>) value));\n+            } else if (value instanceof Collection) {\n+                var array = XContentFactory.jsonBuilder().startArray();\n+                for (var element : (Collection<?>) value) {\n+                    array.value(element);\n+                }\n+                array.endArray();\n+                return Strings.toString(array);\n+            } else {\n+                return value.toString();\n+            }\n+        } catch (IOException e) {\n+            throw new IllegalArgumentException(e);", "originalCommit": "99a9db8166e0ad6090f38aa9c338c5e021414779", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjI3Njg0OA==", "url": "https://github.com/crate/crate/pull/10142#discussion_r446276848", "bodyText": "maybe add this to https://github.com/crate/crate/blob/master/server/src/test/java/io/crate/integrationtests/AnalyzeITest.java\nOtherwise I  think it won't be clear which test cases should go to what test class as both are closely related", "author": "mfussenegger", "createdAt": "2020-06-26T16:09:52Z", "path": "server/src/test/java/io/crate/integrationtests/PgStatsTableTest.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to Crate under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.  Crate licenses this file\n+ * to you under the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.  You may\n+ * obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n+ * implied.  See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ *\n+ * However, if you have executed another commercial license agreement\n+ * with Crate these terms will supersede the license and you may use the\n+ * software solely pursuant to the terms of the relevant commercial\n+ * agreement.\n+ */\n+\n+package io.crate.integrationtests;\n+\n+import org.elasticsearch.test.ESIntegTestCase;\n+import org.junit.Test;\n+\n+import java.util.List;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+\n+@ESIntegTestCase.ClusterScope(numDataNodes = 1, numClientNodes = 0)\n+public class PgStatsTableTest extends SQLTransportIntegrationTest {\n+\n+    @Test\n+    public void test_select_from_pg_stats_when_most_common_vals_is_array_type_value() {", "originalCommit": "99a9db8166e0ad6090f38aa9c338c5e021414779", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c185359fe16c2d501e51118627a541bbab20b2c5", "url": "https://github.com/crate/crate/commit/c185359fe16c2d501e51118627a541bbab20b2c5", "message": "Fix class cast exception in the pg_catalog.pg_stat table.\n\nThe ``most_common_vals`` and ``histogram_bounds`` have the\n``array(text)`` data type. If any of these columns would\nhave the array or object value, the class cast exception will be\nthrown such as ``object::text`` and ``array::text`` operations\nare supported. This change addresses this issue.", "committedDate": "2020-06-29T08:16:41Z", "type": "forcePushed"}, {"oid": "c69e61df29df32447736e0ba5c4b564af51073a6", "url": "https://github.com/crate/crate/commit/c69e61df29df32447736e0ba5c4b564af51073a6", "message": "Fix class cast exception in the pg_catalog.pg_stat table.\n\nThe ``most_common_vals`` and ``histogram_bounds`` have the\n``array(text)`` data type. If any of these columns would\nhave the array or object value, the class cast exception will be\nthrown such as ``object::text`` and ``array::text`` operations\nare supported. This change addresses this issue.", "committedDate": "2020-06-29T09:00:26Z", "type": "commit"}, {"oid": "c69e61df29df32447736e0ba5c4b564af51073a6", "url": "https://github.com/crate/crate/commit/c69e61df29df32447736e0ba5c4b564af51073a6", "message": "Fix class cast exception in the pg_catalog.pg_stat table.\n\nThe ``most_common_vals`` and ``histogram_bounds`` have the\n``array(text)`` data type. If any of these columns would\nhave the array or object value, the class cast exception will be\nthrown such as ``object::text`` and ``array::text`` operations\nare supported. This change addresses this issue.", "committedDate": "2020-06-29T09:00:26Z", "type": "forcePushed"}]}