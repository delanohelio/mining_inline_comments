{"pr_number": 1735, "pr_title": "Modify attestation topic subscriber", "pr_createdAt": "2020-05-07T21:31:36Z", "pr_url": "https://github.com/ConsenSys/teku/pull/1735", "timeline": [{"oid": "f86b1f27b5ea705ce23c9d4c9d2fdb0e9b3673f6", "url": "https://github.com/ConsenSys/teku/commit/f86b1f27b5ea705ce23c9d4c9d2fdb0e9b3673f6", "message": "Implement StableSubnetSubscriber", "committedDate": "2020-05-01T22:00:48Z", "type": "commit"}, {"oid": "006e3f3b4472dc8724a537da4f3c9fae2e463721", "url": "https://github.com/ConsenSys/teku/commit/006e3f3b4472dc8724a537da4f3c9fae2e463721", "message": "Add tests", "committedDate": "2020-05-01T22:00:48Z", "type": "commit"}, {"oid": "375b82f4cf94ba53460e33a8307de7b1efbf3402", "url": "https://github.com/ConsenSys/teku/commit/375b82f4cf94ba53460e33a8307de7b1efbf3402", "message": "Run spotless", "committedDate": "2020-05-01T22:09:33Z", "type": "commit"}, {"oid": "b862339d9d82acccf94074b8b58333edf5c7c8b3", "url": "https://github.com/ConsenSys/teku/commit/b862339d9d82acccf94074b8b58333edf5c7c8b3", "message": "Merge branch 'master' of github.com:PegaSysEng/teku into implementStabilitySubnetSubscriber", "committedDate": "2020-05-04T23:30:04Z", "type": "commit"}, {"oid": "2a999da106f4ffdacf862bc5894fa1a86376a70f", "url": "https://github.com/ConsenSys/teku/commit/2a999da106f4ffdacf862bc5894fa1a86376a70f", "message": "Define SubnetSubscription class & change API function name", "committedDate": "2020-05-06T20:53:15Z", "type": "commit"}, {"oid": "342f3c9527c8eb949a504c40446fd2cb293f489e", "url": "https://github.com/ConsenSys/teku/commit/342f3c9527c8eb949a504c40446fd2cb293f489e", "message": "Create method to explicity update validator count", "committedDate": "2020-05-06T20:55:24Z", "type": "commit"}, {"oid": "70079615635740a245e72f383302e5d6bf8ab60b", "url": "https://github.com/ConsenSys/teku/commit/70079615635740a245e72f383302e5d6bf8ab60b", "message": "Merge branch 'master' into implementStabilitySubnetSubscriber", "committedDate": "2020-05-06T20:57:12Z", "type": "commit"}, {"oid": "331e276b4210fb34f56152e7da1e7a127a0c0efe", "url": "https://github.com/ConsenSys/teku/commit/331e276b4210fb34f56152e7da1e7a127a0c0efe", "message": "Update Exception message", "committedDate": "2020-05-06T21:05:15Z", "type": "commit"}, {"oid": "e5686f407d128edd06b9706ef7fec3fd846f31b3", "url": "https://github.com/ConsenSys/teku/commit/e5686f407d128edd06b9706ef7fec3fd846f31b3", "message": "Update Validator API", "committedDate": "2020-05-06T21:11:04Z", "type": "commit"}, {"oid": "3310e3fce23e077373f54ee650bac902e17e1217", "url": "https://github.com/ConsenSys/teku/commit/3310e3fce23e077373f54ee650bac902e17e1217", "message": "Merge branch 'master' into implementStabilitySubnetSubscriber", "committedDate": "2020-05-06T21:26:25Z", "type": "commit"}, {"oid": "cabd95f3b97ce6843a8f783d9a36b8d6c5de1a42", "url": "https://github.com/ConsenSys/teku/commit/cabd95f3b97ce6843a8f783d9a36b8d6c5de1a42", "message": "Add second comparison to TreeSet", "committedDate": "2020-05-07T16:16:09Z", "type": "commit"}, {"oid": "54cfac4f20d7102db35db0c32c59478dac3277ac", "url": "https://github.com/ConsenSys/teku/commit/54cfac4f20d7102db35db0c32c59478dac3277ac", "message": "Don't call onSlot at constructor", "committedDate": "2020-05-07T16:16:09Z", "type": "commit"}, {"oid": "6c32ccc87119e0d00d447195aa90d86a1e1f4f1c", "url": "https://github.com/ConsenSys/teku/commit/6c32ccc87119e0d00d447195aa90d86a1e1f4f1c", "message": "Remove items and add items to the list in seperate loops", "committedDate": "2020-05-07T16:16:09Z", "type": "commit"}, {"oid": "12e5dd9cef99541ee3e05ff53bf0dcc8b1c962fb", "url": "https://github.com/ConsenSys/teku/commit/12e5dd9cef99541ee3e05ff53bf0dcc8b1c962fb", "message": "Add tests for subscribing to all/no subnets", "committedDate": "2020-05-07T16:16:09Z", "type": "commit"}, {"oid": "940ec243dba7b518bc129b40b6ed9ef860cfe78f", "url": "https://github.com/ConsenSys/teku/commit/940ec243dba7b518bc129b40b6ed9ef860cfe78f", "message": "Inject the Random object and run spotless", "committedDate": "2020-05-07T16:16:09Z", "type": "commit"}, {"oid": "b08bd7fe09347d6bf6c4685b293d95b36b7ee6cc", "url": "https://github.com/ConsenSys/teku/commit/b08bd7fe09347d6bf6c4685b293d95b36b7ee6cc", "message": "Change method name", "committedDate": "2020-05-07T16:16:09Z", "type": "commit"}, {"oid": "712cf6a10a83556f5e682a62eec85e873478d0db", "url": "https://github.com/ConsenSys/teku/commit/712cf6a10a83556f5e682a62eec85e873478d0db", "message": "Run spotless", "committedDate": "2020-05-07T16:18:49Z", "type": "commit"}, {"oid": "4ab4487171d3e1182ed20d3c8758bb7ca386d97b", "url": "https://github.com/ConsenSys/teku/commit/4ab4487171d3e1182ed20d3c8758bb7ca386d97b", "message": "Merge branch 'master' into implementStabilitySubnetSubscriber", "committedDate": "2020-05-07T16:19:06Z", "type": "commit"}, {"oid": "0576936160311701db94834be0cac7ece32c557f", "url": "https://github.com/ConsenSys/teku/commit/0576936160311701db94834be0cac7ece32c557f", "message": "Fix subscription length bug & refactor test", "committedDate": "2020-05-07T17:45:24Z", "type": "commit"}, {"oid": "1cac1f1d52d6e0952236454001fb8282a63cb4e2", "url": "https://github.com/ConsenSys/teku/commit/1cac1f1d52d6e0952236454001fb8282a63cb4e2", "message": "Merge branch 'master' into implementStabilitySubnetSubscriber", "committedDate": "2020-05-07T21:01:29Z", "type": "commit"}, {"oid": "1be58de850ef68665cf005430b46a0c880aa0225", "url": "https://github.com/ConsenSys/teku/commit/1be58de850ef68665cf005430b46a0c880aa0225", "message": "Revert test to not depend on Set ordering", "committedDate": "2020-05-08T14:50:15Z", "type": "commit"}, {"oid": "d199a56521ad2d4fc3aedd9a1078a0dd4e0936d6", "url": "https://github.com/ConsenSys/teku/commit/d199a56521ad2d4fc3aedd9a1078a0dd4e0936d6", "message": "Merge branch 'master' into implementStabilitySubnetSubscriber", "committedDate": "2020-05-08T14:50:29Z", "type": "commit"}, {"oid": "e78c55b3924d73134d0763b59bb64ef532521001", "url": "https://github.com/ConsenSys/teku/commit/e78c55b3924d73134d0763b59bb64ef532521001", "message": "Run spotless", "committedDate": "2020-05-08T14:54:07Z", "type": "forcePushed"}, {"oid": "e08d59e0738abc453ed17cf2601c82a384354b9a", "url": "https://github.com/ConsenSys/teku/commit/e08d59e0738abc453ed17cf2601c82a384354b9a", "message": "Do not notify any change when validators decrease", "committedDate": "2020-05-08T19:35:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMyMzU2Mg==", "url": "https://github.com/ConsenSys/teku/pull/1735#discussion_r422323562", "bodyText": "What about:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            package tech.pegasys.teku.datastructures.networking.discovery;\n          \n          \n            \n            package tech.pegasys.teku.datastructures.validator;", "author": "mbaxter", "createdAt": "2020-05-08T19:15:16Z", "path": "ethereum/datastructures/src/main/java/tech/pegasys/teku/datastructures/networking/discovery/SubnetSubscription.java", "diffHunk": "@@ -11,7 +11,7 @@\n  * specific language governing permissions and limitations under the License.\n  */\n \n-package tech.pegasys.teku.validator.api;\n+package tech.pegasys.teku.datastructures.networking.discovery;", "originalCommit": "b10776daf6ee9d2cc8e5f094708c2bfc2c201667", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM3NjUzMQ==", "url": "https://github.com/ConsenSys/teku/pull/1735#discussion_r422376531", "bodyText": "yep that's way better. thank you", "author": "cemozerr", "createdAt": "2020-05-08T21:10:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMyMzU2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM3Njg1Mw==", "url": "https://github.com/ConsenSys/teku/pull/1735#discussion_r422376853", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-05-08T21:11:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMyMzU2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMyODA4Ng==", "url": "https://github.com/ConsenSys/teku/pull/1735#discussion_r422328086", "bodyText": "(optional) How about:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                for (SubnetSubscription subnetSubscription : newSubscriptions) {\n          \n          \n            \n                  int subnetId = subnetSubscription.getSubnetId();\n          \n          \n            \n                  if (!persistentSubnetIdSet.contains(subnetId)) {\n          \n          \n            \n                    persistentSubnetIdSet.add(subnetId);\n          \n          \n            \n                    shouldUpdateENR = true;\n          \n          \n            \n                  }\n          \n          \n            \n                shouldUpdateENR = subnetIds.stream().map(persistentSubnetIdSet::add).reduce((a,b) -> a || b)\n          \n      \n    \n    \n  \n\n\ud83d\ude04", "author": "mbaxter", "createdAt": "2020-05-08T19:24:26Z", "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/gossip/AttestationTopicSubscriber.java", "diffHunk": "@@ -36,25 +40,62 @@ public AttestationTopicSubscriber(final Eth2Network eth2Network) {\n   public synchronized void subscribeToCommitteeForAggregation(\n       final int committeeIndex, final UnsignedLong aggregationSlot) {\n     final int subnetId = committeeIndexToSubnetId(committeeIndex);\n-    final UnsignedLong currentUnsubscriptionSlot =\n-        unsubscriptionSlotBySubnetId.getOrDefault(subnetId, ZERO);\n+    final UnsignedLong currentUnsubscriptionSlot = allSubscriptions.getOrDefault(subnetId, ZERO);\n     if (currentUnsubscriptionSlot.equals(ZERO)) {\n       eth2Network.subscribeToAttestationSubnetId(subnetId);\n     }\n-    unsubscriptionSlotBySubnetId.put(subnetId, max(currentUnsubscriptionSlot, aggregationSlot));\n+    allSubscriptions.put(subnetId, max(currentUnsubscriptionSlot, aggregationSlot));\n+  }\n+\n+  public synchronized void subscribeToPersistentSubnets(\n+      final Set<SubnetSubscription> newSubscriptions) {\n+    boolean shouldUpdateENR = false;\n+\n+    for (SubnetSubscription subnetSubscription : newSubscriptions) {\n+      int subnetId = subnetSubscription.getSubnetId();\n+      if (!persistentSubnetIdSet.contains(subnetId)) {\n+        persistentSubnetIdSet.add(subnetId);\n+        shouldUpdateENR = true;\n+      }", "originalCommit": "b10776daf6ee9d2cc8e5f094708c2bfc2c201667", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM3OTI5Mw==", "url": "https://github.com/ConsenSys/teku/pull/1735#discussion_r422379293", "bodyText": "that's pretty cool", "author": "cemozerr", "createdAt": "2020-05-08T21:16:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMyODA4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMzMzcwNQ==", "url": "https://github.com/ConsenSys/teku/pull/1735#discussion_r422333705", "bodyText": "(optional) You could do everything in one compute operation:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      allSubscriptions.computeIfAbsent(\n          \n          \n            \n                          subnetId,\n          \n          \n            \n                          (key) -> {\n          \n          \n            \n                            eth2Network.subscribeToAttestationSubnetId(subnetId);\n          \n          \n            \n                            return ZERO;\n          \n          \n            \n                          });\n          \n          \n            \n            \n          \n          \n            \n                  allSubscriptions.put(\n          \n          \n            \n                      subnetId, max(existingUnsubscriptionSlot, subnetSubscription.getUnsubscriptionSlot()));\n          \n          \n            \n                      allSubscriptions.compute(\n          \n          \n            \n                          subnetId,\n          \n          \n            \n                          (key, currentValue) -> {\n          \n          \n            \n                            final UnsignedLong unsubscribeSlot = subnetSubscription.getUnsubscriptionSlot();\n          \n          \n            \n                            if (currentValue == null) {\n          \n          \n            \n                                eth2Network.subscribeToAttestationSubnetId(subnetId);\n          \n          \n            \n                                return unsubscribeSlot;\n          \n          \n            \n                            } else {\n          \n          \n            \n                                return max(existingUnsubscriptionSlot, unsubscribeSlot);\n          \n          \n            \n                            }\n          \n          \n            \n                          });", "author": "mbaxter", "createdAt": "2020-05-08T19:36:13Z", "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/gossip/AttestationTopicSubscriber.java", "diffHunk": "@@ -36,25 +40,62 @@ public AttestationTopicSubscriber(final Eth2Network eth2Network) {\n   public synchronized void subscribeToCommitteeForAggregation(\n       final int committeeIndex, final UnsignedLong aggregationSlot) {\n     final int subnetId = committeeIndexToSubnetId(committeeIndex);\n-    final UnsignedLong currentUnsubscriptionSlot =\n-        unsubscriptionSlotBySubnetId.getOrDefault(subnetId, ZERO);\n+    final UnsignedLong currentUnsubscriptionSlot = allSubscriptions.getOrDefault(subnetId, ZERO);\n     if (currentUnsubscriptionSlot.equals(ZERO)) {\n       eth2Network.subscribeToAttestationSubnetId(subnetId);\n     }\n-    unsubscriptionSlotBySubnetId.put(subnetId, max(currentUnsubscriptionSlot, aggregationSlot));\n+    allSubscriptions.put(subnetId, max(currentUnsubscriptionSlot, aggregationSlot));\n+  }\n+\n+  public synchronized void subscribeToPersistentSubnets(\n+      final Set<SubnetSubscription> newSubscriptions) {\n+    boolean shouldUpdateENR = false;\n+\n+    for (SubnetSubscription subnetSubscription : newSubscriptions) {\n+      int subnetId = subnetSubscription.getSubnetId();\n+      if (!persistentSubnetIdSet.contains(subnetId)) {\n+        persistentSubnetIdSet.add(subnetId);\n+        shouldUpdateENR = true;\n+      }\n+\n+      UnsignedLong existingUnsubscriptionSlot =\n+          allSubscriptions.computeIfAbsent(\n+              subnetId,\n+              (key) -> {\n+                eth2Network.subscribeToAttestationSubnetId(subnetId);\n+                return ZERO;\n+              });\n+\n+      allSubscriptions.put(\n+          subnetId, max(existingUnsubscriptionSlot, subnetSubscription.getUnsubscriptionSlot()));", "originalCommit": "b10776daf6ee9d2cc8e5f094708c2bfc2c201667", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMzNzI2Mg==", "url": "https://github.com/ConsenSys/teku/pull/1735#discussion_r422337262", "bodyText": "May be worth another couple of tests where we subscribe to the same persistent subnet with 2 different unsubscribe slots.", "author": "mbaxter", "createdAt": "2020-05-08T19:44:01Z", "path": "networking/eth2/src/test/java/tech/pegasys/teku/networking/eth2/gossip/AttestationTopicSubscriberTest.java", "diffHunk": "@@ -81,13 +83,81 @@ public void shouldPreserveLaterSubscriptionPeriodWhenEarlierSlotAdded() {\n     final UnsignedLong firstSlot = UnsignedLong.valueOf(10);\n     final UnsignedLong secondSlot = UnsignedLong.valueOf(15);\n \n-    subscriptions.subscribeToCommitteeForAggregation(subnetId, secondSlot);\n-    subscriptions.subscribeToCommitteeForAggregation(subnetId, firstSlot);\n+    subscriber.subscribeToCommitteeForAggregation(subnetId, secondSlot);\n+    subscriber.subscribeToCommitteeForAggregation(subnetId, firstSlot);\n \n-    subscriptions.onSlot(firstSlot.plus(ONE));\n+    subscriber.onSlot(firstSlot.plus(ONE));\n     verify(eth2Network, never()).unsubscribeFromAttestationSubnetId(subnetId);\n \n-    subscriptions.onSlot(secondSlot.plus(ONE));\n+    subscriber.onSlot(secondSlot.plus(ONE));\n+    verify(eth2Network).unsubscribeFromAttestationSubnetId(subnetId);\n+  }\n+\n+  @Test\n+  public void shouldSubscribeToNewSubnetsAndUpdateENR_forPersistentSubscriptions() {\n+    Set<SubnetSubscription> subnetSubscriptions =\n+        Set.of(\n+            new SubnetSubscription(1, UnsignedLong.valueOf(20)),\n+            new SubnetSubscription(2, UnsignedLong.valueOf(15)));\n+\n+    subscriber.subscribeToPersistentSubnets(subnetSubscriptions);\n+\n+    verify(eth2Network).setLongTermAttestationSubnetSubscriptions(Set.of(1, 2));\n+\n+    verify(eth2Network).subscribeToAttestationSubnetId(1);\n+    verify(eth2Network).subscribeToAttestationSubnetId(2);\n+  }\n+\n+  @Test\n+  public void shouldUpdateENRWhenNewSubnetIsSubscribedDueToPersistentSubscriptions() {\n+    UnsignedLong someSlot = valueOf(15);\n+    Set<SubnetSubscription> subnetSubscription = Set.of(new SubnetSubscription(2, someSlot));\n+\n+    subscriber.subscribeToCommitteeForAggregation(1, someSlot);\n+    subscriber.subscribeToCommitteeForAggregation(2, someSlot);\n+\n+    verify(eth2Network).subscribeToAttestationSubnetId(1);\n+    verify(eth2Network).subscribeToAttestationSubnetId(2);\n+\n+    subscriber.subscribeToPersistentSubnets(subnetSubscription);\n+\n+    verify(eth2Network).setLongTermAttestationSubnetSubscriptions(Set.of(2));\n+\n+    verify(eth2Network).subscribeToAttestationSubnetId(2);\n+  }\n+\n+  @Test\n+  public void shouldExtendSubscriptionPeriod_forPersistentSubscriptions() {\n+    final int subnetId = 3;\n+    final UnsignedLong firstSlot = UnsignedLong.valueOf(10);\n+    final UnsignedLong secondSlot = UnsignedLong.valueOf(15);\n+    Set<SubnetSubscription> subnetSubscriptions =\n+        Set.of(new SubnetSubscription(subnetId, secondSlot));\n+\n+    subscriber.subscribeToCommitteeForAggregation(subnetId, firstSlot);\n+    subscriber.subscribeToPersistentSubnets(subnetSubscriptions);\n+\n+    subscriber.onSlot(firstSlot.plus(ONE));\n+    verify(eth2Network, never()).unsubscribeFromAttestationSubnetId(subnetId);\n+\n+    subscriber.onSlot(secondSlot.plus(ONE));\n+    verify(eth2Network).unsubscribeFromAttestationSubnetId(subnetId);\n+  }\n+\n+  @Test\n+  public void shouldPreserveLaterSubscription_forPersistentSubscriptions() {", "originalCommit": "b10776daf6ee9d2cc8e5f094708c2bfc2c201667", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMzOTkwMQ==", "url": "https://github.com/ConsenSys/teku/pull/1735#discussion_r422339901", "bodyText": "Do these need to be concurrent collections?", "author": "mbaxter", "createdAt": "2020-05-08T19:50:03Z", "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/gossip/AttestationTopicSubscriber.java", "diffHunk": "@@ -19,14 +19,18 @@\n \n import com.google.common.primitives.UnsignedLong;\n import java.util.HashMap;\n+import java.util.HashSet;\n import java.util.Iterator;\n import java.util.Map;\n import java.util.Map.Entry;\n+import java.util.Set;\n+import tech.pegasys.teku.datastructures.networking.discovery.SubnetSubscription;\n import tech.pegasys.teku.networking.eth2.Eth2Network;\n import tech.pegasys.teku.util.time.channels.SlotEventsChannel;\n \n public class AttestationTopicSubscriber implements SlotEventsChannel {\n-  private final Map<Integer, UnsignedLong> unsubscriptionSlotBySubnetId = new HashMap<>();\n+  private final Map<Integer, UnsignedLong> allSubscriptions = new HashMap<>();\n+  private final Set<Integer> persistentSubnetIdSet = new HashSet<>();", "originalCommit": "b10776daf6ee9d2cc8e5f094708c2bfc2c201667", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM4MDQyNw==", "url": "https://github.com/ConsenSys/teku/pull/1735#discussion_r422380427", "bodyText": "All of the methods of this class are synchronized, so I believe collections don't need to be concurrent.", "author": "cemozerr", "createdAt": "2020-05-08T21:19:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMzOTkwMQ=="}], "type": "inlineReview"}, {"oid": "0e322240db132e33d11b1d7f01befdbaff17c7e1", "url": "https://github.com/ConsenSys/teku/commit/0e322240db132e33d11b1d7f01befdbaff17c7e1", "message": "Add more checks to the tests", "committedDate": "2020-05-08T21:04:23Z", "type": "commit"}, {"oid": "c251f8ea711ba90302f4951cac1d553ed9494342", "url": "https://github.com/ConsenSys/teku/commit/c251f8ea711ba90302f4951cac1d553ed9494342", "message": "Run spotless", "committedDate": "2020-05-08T21:05:07Z", "type": "commit"}, {"oid": "5374204387dab4a740b207f071f0d06108780999", "url": "https://github.com/ConsenSys/teku/commit/5374204387dab4a740b207f071f0d06108780999", "message": "Resolve comments", "committedDate": "2020-05-08T21:49:03Z", "type": "forcePushed"}, {"oid": "f2d7619b8896f166b174b80fd9b28e07a8383202", "url": "https://github.com/ConsenSys/teku/commit/f2d7619b8896f166b174b80fd9b28e07a8383202", "message": "Fix assemble warnings", "committedDate": "2020-05-08T21:56:06Z", "type": "commit"}, {"oid": "123bfe70c236cc8c7459dca711592332cd3a4cc1", "url": "https://github.com/ConsenSys/teku/commit/123bfe70c236cc8c7459dca711592332cd3a4cc1", "message": "Subscribe to random subnet ids", "committedDate": "2020-05-08T21:56:52Z", "type": "commit"}, {"oid": "aab97021a99dafc83ab63b716f87589f31a50479", "url": "https://github.com/ConsenSys/teku/commit/aab97021a99dafc83ab63b716f87589f31a50479", "message": "Fix enr updating issue", "committedDate": "2020-05-08T21:56:52Z", "type": "commit"}, {"oid": "d7abd48d57912e151cbcc75c5909c354195d7e1a", "url": "https://github.com/ConsenSys/teku/commit/d7abd48d57912e151cbcc75c5909c354195d7e1a", "message": "Remove ids from subscription maps", "committedDate": "2020-05-08T21:56:52Z", "type": "commit"}, {"oid": "285b1d6de4850da0cd19ca2a1be87173eed229f5", "url": "https://github.com/ConsenSys/teku/commit/285b1d6de4850da0cd19ca2a1be87173eed229f5", "message": "Run spotless", "committedDate": "2020-05-08T21:56:52Z", "type": "commit"}, {"oid": "ebd96ffd515546bfd8e8313c469ca382bb1f5852", "url": "https://github.com/ConsenSys/teku/commit/ebd96ffd515546bfd8e8313c469ca382bb1f5852", "message": "Refactor to simplify persistent subnet related work", "committedDate": "2020-05-08T21:56:52Z", "type": "commit"}, {"oid": "8104d190b96675d1ba94eafc0ec585dc7e312e5c", "url": "https://github.com/ConsenSys/teku/commit/8104d190b96675d1ba94eafc0ec585dc7e312e5c", "message": "Refactor test", "committedDate": "2020-05-08T21:56:52Z", "type": "commit"}, {"oid": "45aa0a53fd1b1c7da0bb3fc01bf99e48354d88d0", "url": "https://github.com/ConsenSys/teku/commit/45aa0a53fd1b1c7da0bb3fc01bf99e48354d88d0", "message": "Resolve comments", "committedDate": "2020-05-08T21:56:52Z", "type": "commit"}, {"oid": "45aa0a53fd1b1c7da0bb3fc01bf99e48354d88d0", "url": "https://github.com/ConsenSys/teku/commit/45aa0a53fd1b1c7da0bb3fc01bf99e48354d88d0", "message": "Resolve comments", "committedDate": "2020-05-08T21:56:52Z", "type": "forcePushed"}, {"oid": "04d711797a1eb506badf56159b8ea4eb69cf7082", "url": "https://github.com/ConsenSys/teku/commit/04d711797a1eb506badf56159b8ea4eb69cf7082", "message": "Merge branch 'master' into modifyAttestationTopicSubscriber", "committedDate": "2020-05-09T03:10:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEzODM3MA==", "url": "https://github.com/ConsenSys/teku/pull/1735#discussion_r423138370", "bodyText": "(nit) Another option to make this more succinct / efficient\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  if (!persistentSubnetIdSet.contains(subnetId)) {\n          \n          \n            \n                    persistentSubnetIdSet.add(subnetId);\n          \n          \n            \n                    shouldUpdateENR = true;\n          \n          \n            \n                  }\n          \n          \n            \n                  shouldUpdateENR = shouldUpdateENR || persistentSubnetIdSet.add(subnetId);", "author": "mbaxter", "createdAt": "2020-05-11T15:48:55Z", "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/gossip/AttestationTopicSubscriber.java", "diffHunk": "@@ -19,42 +19,83 @@\n \n import com.google.common.primitives.UnsignedLong;\n import java.util.HashMap;\n+import java.util.HashSet;\n import java.util.Iterator;\n import java.util.Map;\n import java.util.Map.Entry;\n+import java.util.Set;\n+import tech.pegasys.teku.datastructures.validator.SubnetSubscription;\n import tech.pegasys.teku.networking.eth2.Eth2Network;\n import tech.pegasys.teku.util.time.channels.SlotEventsChannel;\n \n public class AttestationTopicSubscriber implements SlotEventsChannel {\n-  private final Map<Integer, UnsignedLong> unsubscriptionSlotBySubnetId = new HashMap<>();\n+  private final Map<Integer, UnsignedLong> allSubscriptions = new HashMap<>();\n+  private final Set<Integer> persistentSubnetIdSet = new HashSet<>();\n   private final Eth2Network eth2Network;\n \n   public AttestationTopicSubscriber(final Eth2Network eth2Network) {\n     this.eth2Network = eth2Network;\n   }\n \n-  public synchronized void subscribeToCommittee(\n+  public synchronized void subscribeToCommitteeForAggregation(\n       final int committeeIndex, final UnsignedLong aggregationSlot) {\n     final int subnetId = committeeIndexToSubnetId(committeeIndex);\n-    final UnsignedLong currentUnsubscriptionSlot =\n-        unsubscriptionSlotBySubnetId.getOrDefault(subnetId, ZERO);\n+    final UnsignedLong currentUnsubscriptionSlot = allSubscriptions.getOrDefault(subnetId, ZERO);\n     if (currentUnsubscriptionSlot.equals(ZERO)) {\n       eth2Network.subscribeToAttestationSubnetId(subnetId);\n     }\n-    unsubscriptionSlotBySubnetId.put(subnetId, max(currentUnsubscriptionSlot, aggregationSlot));\n+    allSubscriptions.put(subnetId, max(currentUnsubscriptionSlot, aggregationSlot));\n+  }\n+\n+  public synchronized void subscribeToPersistentSubnets(\n+      final Set<SubnetSubscription> newSubscriptions) {\n+    boolean shouldUpdateENR = false;\n+\n+    for (SubnetSubscription subnetSubscription : newSubscriptions) {\n+      int subnetId = subnetSubscription.getSubnetId();\n+      if (!persistentSubnetIdSet.contains(subnetId)) {\n+        persistentSubnetIdSet.add(subnetId);\n+        shouldUpdateENR = true;\n+      }", "originalCommit": "04d711797a1eb506badf56159b8ea4eb69cf7082", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE2NjU3Ng==", "url": "https://github.com/ConsenSys/teku/pull/1735#discussion_r423166576", "bodyText": "I think if we did that persistentSubnetIdSet.add(Subnet) would not be called if shouldUpdateENR is true, right? Here we want it to be called regardless of shouldUpdateENR being true since we want to update persistenSubnetIdSet.", "author": "cemozerr", "createdAt": "2020-05-11T16:31:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEzODM3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE2ODYzNA==", "url": "https://github.com/ConsenSys/teku/pull/1735#discussion_r423168634", "bodyText": "good point!!  should be:\nshouldUpdateENR = persistentSubnetIdSet.add(subnetId) || shouldUpdateENR;", "author": "mbaxter", "createdAt": "2020-05-11T16:35:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEzODM3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE2OTE4Mg==", "url": "https://github.com/ConsenSys/teku/pull/1735#discussion_r423169182", "bodyText": "oh hahah. I totally missed that :D", "author": "cemozerr", "createdAt": "2020-05-11T16:36:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEzODM3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE2OTI1NA==", "url": "https://github.com/ConsenSys/teku/pull/1735#discussion_r423169254", "bodyText": "Thanks!", "author": "cemozerr", "createdAt": "2020-05-11T16:36:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEzODM3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE0MDYyMA==", "url": "https://github.com/ConsenSys/teku/pull/1735#discussion_r423140620", "bodyText": "I think the new name is more confusing - you have to read through the code to figure out what this map represents.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private final Map<Integer, UnsignedLong> allSubscriptions = new HashMap<>();\n          \n          \n            \n              private final Map<Integer, UnsignedLong> subnetIdToUnsubscribeSlot = new HashMap<>();", "author": "mbaxter", "createdAt": "2020-05-11T15:52:09Z", "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/gossip/AttestationTopicSubscriber.java", "diffHunk": "@@ -19,42 +19,83 @@\n \n import com.google.common.primitives.UnsignedLong;\n import java.util.HashMap;\n+import java.util.HashSet;\n import java.util.Iterator;\n import java.util.Map;\n import java.util.Map.Entry;\n+import java.util.Set;\n+import tech.pegasys.teku.datastructures.validator.SubnetSubscription;\n import tech.pegasys.teku.networking.eth2.Eth2Network;\n import tech.pegasys.teku.util.time.channels.SlotEventsChannel;\n \n public class AttestationTopicSubscriber implements SlotEventsChannel {\n-  private final Map<Integer, UnsignedLong> unsubscriptionSlotBySubnetId = new HashMap<>();\n+  private final Map<Integer, UnsignedLong> allSubscriptions = new HashMap<>();", "originalCommit": "04d711797a1eb506badf56159b8ea4eb69cf7082", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE2NjkzMQ==", "url": "https://github.com/ConsenSys/teku/pull/1735#discussion_r423166931", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-05-11T16:32:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE0MDYyMA=="}], "type": "inlineReview"}, {"oid": "4ba1723e1c55040011c0a4123ee12684e614477a", "url": "https://github.com/ConsenSys/teku/commit/4ba1723e1c55040011c0a4123ee12684e614477a", "message": "Rename map", "committedDate": "2020-05-11T16:35:09Z", "type": "commit"}, {"oid": "030c93145784b0c9451b87928832f921e55682a3", "url": "https://github.com/ConsenSys/teku/commit/030c93145784b0c9451b87928832f921e55682a3", "message": "Merge branch 'master' into modifyAttestationTopicSubscriber", "committedDate": "2020-05-11T16:35:21Z", "type": "commit"}, {"oid": "a89d3b35e24befac6161f5789453542c6476113a", "url": "https://github.com/ConsenSys/teku/commit/a89d3b35e24befac6161f5789453542c6476113a", "message": "Refactor updating enr flag", "committedDate": "2020-05-11T16:40:45Z", "type": "commit"}, {"oid": "54b8770d8955e0cc0cbec7efe5cc9cdb07877133", "url": "https://github.com/ConsenSys/teku/commit/54b8770d8955e0cc0cbec7efe5cc9cdb07877133", "message": "Merge remote-tracking branch 'remotes/origin/master' into modifyAttestationTopicSubscriber\n\n# Conflicts:\n#\tnetworking/eth2/src/test/java/tech/pegasys/teku/networking/eth2/gossip/AttestationTopicSubscriberTest.java\n#\tvalidator/client/src/main/java/tech/pegasys/teku/validator/client/StableSubnetSubscriber.java\n#\tvalidator/client/src/test/java/tech/pegasys/teku/validator/client/StableSubnetSubscriberTest.java\n#\tvalidator/coordinator/src/main/java/tech/pegasys/teku/validator/coordinator/ValidatorApiHandler.java", "committedDate": "2020-05-11T16:45:26Z", "type": "commit"}, {"oid": "262fe9097b83da1fa2be93be5f2b8562ba8b4530", "url": "https://github.com/ConsenSys/teku/commit/262fe9097b83da1fa2be93be5f2b8562ba8b4530", "message": "Fix merge conflicts", "committedDate": "2020-05-11T16:50:49Z", "type": "commit"}]}