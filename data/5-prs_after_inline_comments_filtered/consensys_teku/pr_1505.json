{"pr_number": 1505, "pr_title": "[Minor] Make LRUCache use LRU strategy", "pr_createdAt": "2020-03-30T23:04:44Z", "pr_url": "https://github.com/ConsenSys/teku/pull/1505", "timeline": [{"oid": "fe29262a2714c8d2e1c49088db34d6064ed9b5d9", "url": "https://github.com/ConsenSys/teku/commit/fe29262a2714c8d2e1c49088db34d6064ed9b5d9", "message": "Update LRUCache to use LRU strategy\n\nAdd ability to specify the limiting strategy for limited maps.", "committedDate": "2020-03-30T22:54:41Z", "type": "commit"}, {"oid": "bf62b1505141a18cdef177af0a12b8e5ba33d842", "url": "https://github.com/ConsenSys/teku/commit/bf62b1505141a18cdef177af0a12b8e5ba33d842", "message": "Make sure both LimitedMap and LimitedSet are thread-safe", "committedDate": "2020-03-30T23:01:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU1MTc5Ng==", "url": "https://github.com/ConsenSys/teku/pull/1505#discussion_r400551796", "bodyText": "I'm not sure we should move the synchronizedMap into here.  I think it makes sense to potentially have instances of LimitedMap that are only accessed by a single thread or where there are already other locking mechanisms in place.  It also follows the typical pattern of collection classes not being thread-safe unless they have Concurrent in the name.", "author": "ajsutton", "createdAt": "2020-03-30T23:19:53Z", "path": "util/src/main/java/tech/pegasys/artemis/util/collections/LimitedMap.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.util.collections;\n+\n+import java.util.Collections;\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+\n+public class LimitedMap {\n+  private LimitedMap() {}\n+\n+  /**\n+   * Creates a limited map with a default initial capacity.\n+   *\n+   * @param maxSize The maximum number of elements to keep in the map.\n+   * @param mode A mode that determines which element is evicted when the map exceeds its max size.\n+   * @param <K> The key type of the map.\n+   * @param <V> The value type of the map.\n+   * @return A thread-safe map that will evict elements when the max size is exceeded.\n+   */\n+  public static final <K, V> Map<K, V> create(final int maxSize, final LimitStrategy mode) {\n+    return create(16, maxSize, mode);\n+  }\n+\n+  /**\n+   * @param initialCapacity The initial size to allocate for the map.\n+   * @param maxSize The maximum number of elements to keep in the map.\n+   * @param mode A mode that determines which element is evicted when the map exceeds its max size.\n+   * @param <K> The key type of the map.\n+   * @param <V> The value type of the map.\n+   * @return A thread-safe map that will evict elements when the max size is exceeded.\n+   */\n+  public static final <K, V> Map<K, V> create(\n+      final int initialCapacity, final int maxSize, final LimitStrategy mode) {\n+    final boolean useAccessOrder = mode.equals(LimitStrategy.DROP_LEAST_RECENTLY_ACCESSED);\n+    return Collections.synchronizedMap(", "originalCommit": "bf62b1505141a18cdef177af0a12b8e5ba33d842", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU1Mjg1MA==", "url": "https://github.com/ConsenSys/teku/pull/1505#discussion_r400552850", "bodyText": "I see that we'd previously had the synchronizedSet applied automatically to LimitedSet so if we did move this we'd have to ensure we added that to each place LimitedSet is constructed.", "author": "ajsutton", "createdAt": "2020-03-30T23:23:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU1MTc5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc1NDM0OQ==", "url": "https://github.com/ConsenSys/teku/pull/1505#discussion_r400754349", "bodyText": "I agree with @ajsutton that synchronizing a collection would better to perform on a client side. This place is a good illustration: we need to make sure that the collection is synchronized here, but LimitedMap.create doesn't imply returning synchronized collection.\nAlternative option would be to have two factory variants like:\n\nLimitedMap.create\nLimitedMap.createSynchronized", "author": "Nashatyrev", "createdAt": "2020-03-31T09:04:00Z", "path": "ethereum/datastructures/src/main/java/tech/pegasys/artemis/datastructures/util/cache/LRUCache.java", "diffHunk": "@@ -42,12 +43,12 @@ public LRUCache(int capacity) {\n \n   private LRUCache(int capacity, Map<K, V> initialCachedContent) {\n     this.maxCapacity = capacity;\n-    LimitedHashMap<K, V> cacheMap = new LimitedHashMap<>(maxCapacity);\n+    Map<K, V> cacheMap = LimitedMap.create(maxCapacity, LimitStrategy.DROP_LEAST_RECENTLY_ACCESSED);\n     // copy safely, initialCachedContent is always a SynchronizedMap instance\n     synchronized (initialCachedContent) {", "originalCommit": "bf62b1505141a18cdef177af0a12b8e5ba33d842", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk2NDY4NA==", "url": "https://github.com/ConsenSys/teku/pull/1505#discussion_r400964684", "bodyText": "Good points!  I split up the helpers so we now have:\n\nLimitedMap.create\nConcurrentLimitedMap.create\nLimitedSet.create\nConcurrentLimitedSet.create", "author": "mbaxter", "createdAt": "2020-03-31T14:36:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc1NDM0OQ=="}], "type": "inlineReview"}, {"oid": "f2d510e21b566a6e5cb86b45e5e304983399b26c", "url": "https://github.com/ConsenSys/teku/commit/f2d510e21b566a6e5cb86b45e5e304983399b26c", "message": "Distinguish thread-safe from non-thread-safe limited collections", "committedDate": "2020-03-31T14:30:35Z", "type": "commit"}, {"oid": "9ea0aa04c68b1bf77554e2af2894850cc288fcaa", "url": "https://github.com/ConsenSys/teku/commit/9ea0aa04c68b1bf77554e2af2894850cc288fcaa", "message": "Merge branch 'master' into minor/make-lru-cache-use-lru-strategy", "committedDate": "2020-03-31T14:31:01Z", "type": "commit"}]}