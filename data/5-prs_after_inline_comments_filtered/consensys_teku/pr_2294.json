{"pr_number": 2294, "pr_title": "Regenerate checkpoint states on demand", "pr_createdAt": "2020-07-02T03:52:54Z", "pr_url": "https://github.com/ConsenSys/teku/pull/2294", "timeline": [{"oid": "af3089fc3892b68810d695df017f8960b5bbcdb2", "url": "https://github.com/ConsenSys/teku/commit/af3089fc3892b68810d695df017f8960b5bbcdb2", "message": "Don't store checkpoint states, regenerate on demand.", "committedDate": "2020-07-02T01:34:41Z", "type": "commit"}, {"oid": "e3bb7d87e43895f6ad0530f03f4bdd855f9123d6", "url": "https://github.com/ConsenSys/teku/commit/e3bb7d87e43895f6ad0530f03f4bdd855f9123d6", "message": "Merge branch 'master' of github.com:PegaSysEng/teku into drop-checkpoint-states", "committedDate": "2020-07-02T03:51:07Z", "type": "commit"}, {"oid": "16c4802e6bc92941e252469f7c8b42dd6fbd91d5", "url": "https://github.com/ConsenSys/teku/commit/16c4802e6bc92941e252469f7c8b42dd6fbd91d5", "message": "Improve metrics.", "committedDate": "2020-07-02T04:31:53Z", "type": "commit"}, {"oid": "816942a9b29787b571a1230c1f4221431ab160c6", "url": "https://github.com/ConsenSys/teku/commit/816942a9b29787b571a1230c1f4221431ab160c6", "message": "Fix tests.", "committedDate": "2020-07-02T04:48:05Z", "type": "commit"}, {"oid": "5a1e8d823e0e430dbefb1ef929096b8e99426c66", "url": "https://github.com/ConsenSys/teku/commit/5a1e8d823e0e430dbefb1ef929096b8e99426c66", "message": "Add test. Fix deadlock.", "committedDate": "2020-07-02T05:04:22Z", "type": "commit"}, {"oid": "f2f1d7f589b033c42c4bcbd78a9edafe619a4218", "url": "https://github.com/ConsenSys/teku/commit/f2f1d7f589b033c42c4bcbd78a9edafe619a4218", "message": "Add comments that checkpoint state columns are only for backwards compatibility. Delete a little more dead code.", "committedDate": "2020-07-02T06:19:53Z", "type": "commit"}, {"oid": "708877150f90fb7935f321968baca87a679a0588", "url": "https://github.com/ConsenSys/teku/commit/708877150f90fb7935f321968baca87a679a0588", "message": "Handle invalid checkpoint states correctly.", "committedDate": "2020-07-02T06:38:19Z", "type": "commit"}, {"oid": "708877150f90fb7935f321968baca87a679a0588", "url": "https://github.com/ConsenSys/teku/commit/708877150f90fb7935f321968baca87a679a0588", "message": "Handle invalid checkpoint states correctly.", "committedDate": "2020-07-02T06:38:19Z", "type": "forcePushed"}, {"oid": "5198ef9134f4a5407d2426fdbff0a9c085ad0aed", "url": "https://github.com/ConsenSys/teku/commit/5198ef9134f4a5407d2426fdbff0a9c085ad0aed", "message": "Spotless.", "committedDate": "2020-07-02T06:39:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA3MjI0Mg==", "url": "https://github.com/ConsenSys/teku/pull/2294#discussion_r449072242", "bodyText": "Is this supposed to be:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  if (baseState == null || baseState.getSlot().equals(checkpoint.getEpochStartSlot())) {\n          \n          \n            \n                  if (baseState != null || baseState.getSlot().equals(checkpoint.getEpochStartSlot())) {\n          \n      \n    \n    \n  \n\nI'm not sure why you would return a null pointer and then try to store that in checkpoint_states.", "author": "cemozerr", "createdAt": "2020-07-02T15:11:05Z", "path": "storage/src/main/java/tech/pegasys/teku/storage/store/Store.java", "diffHunk": "@@ -390,21 +379,49 @@ public BeaconState getBlockState(Bytes32 blockRoot) {\n \n   @Override\n   public BeaconState getCheckpointState(Checkpoint checkpoint) {\n+    return getCheckpointStateIfAvailable(checkpoint)\n+        .orElseGet(\n+            () -> {\n+              final BeaconState checkpointState =\n+                  regenerateCheckpointState(checkpoint, this::getBlockState);\n+              lock.writeLock().lock();\n+              try {\n+                checkpoint_states.put(checkpoint, checkpointState);\n+              } finally {\n+                lock.writeLock().unlock();\n+              }\n+              return checkpointState;\n+            });\n+  }\n+\n+  private Optional<BeaconState> getCheckpointStateIfAvailable(final Checkpoint checkpoint) {\n     readLock.lock();\n     try {\n-      return checkpoint_states.get(checkpoint);\n+      final BeaconState state = checkpoint_states.get(checkpoint);\n+      if (state != null) {\n+        checkpointStateRequestCachedCounter.inc();\n+        return Optional.of(state);\n+      } else {\n+        checkpointStateRequestMissCounter.inc();\n+        return Optional.empty();\n+      }\n     } finally {\n       readLock.unlock();\n     }\n   }\n \n-  @Override\n-  public boolean containsCheckpointState(Checkpoint checkpoint) {\n-    readLock.lock();\n+  private BeaconState regenerateCheckpointState(\n+      final Checkpoint checkpoint, Function<Bytes32, BeaconState> getBlockState) {\n     try {\n-      return checkpoint_states.containsKey(checkpoint);\n-    } finally {\n-      readLock.unlock();\n+      final BeaconState baseState = getBlockState.apply(checkpoint.getRoot());\n+      if (baseState == null || baseState.getSlot().equals(checkpoint.getEpochStartSlot())) {", "originalCommit": "5198ef9134f4a5407d2426fdbff0a9c085ad0aed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA3NDQ1MQ==", "url": "https://github.com/ConsenSys/teku/pull/2294#discussion_r449074451", "bodyText": "Actually I do see why you would check for null and return here, but in that scenario, we still have to deal with the null object in the caller method.", "author": "cemozerr", "createdAt": "2020-07-02T15:14:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA3MjI0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI3MjMwOA==", "url": "https://github.com/ConsenSys/teku/pull/2294#discussion_r449272308", "bodyText": "Good point, I've switched regenerateCheckpointState to return an Optional and flowed that around.", "author": "ajsutton", "createdAt": "2020-07-02T21:23:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA3MjI0Mg=="}], "type": "inlineReview"}, {"oid": "ff4e992176484de21aa63940f150e2b25fdab6dc", "url": "https://github.com/ConsenSys/teku/commit/ff4e992176484de21aa63940f150e2b25fdab6dc", "message": "Use more optional.", "committedDate": "2020-07-02T21:22:49Z", "type": "commit"}, {"oid": "1ebd1475fb0aac125bb6774a4cc79145c3ddc322", "url": "https://github.com/ConsenSys/teku/commit/1ebd1475fb0aac125bb6774a4cc79145c3ddc322", "message": "Merge branch 'master' of github.com:PegaSysEng/teku into drop-checkpoint-states", "committedDate": "2020-07-02T21:22:55Z", "type": "commit"}]}