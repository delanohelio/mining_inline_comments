{"pr_number": 3003, "pr_title": "Implement rest of standard API state endpoints", "pr_createdAt": "2020-10-17T02:51:46Z", "pr_url": "https://github.com/ConsenSys/teku/pull/3003", "timeline": [{"oid": "75c81ced1f4636aace42e4887bbbf645c6d69556", "url": "https://github.com/ConsenSys/teku/commit/75c81ced1f4636aace42e4887bbbf645c6d69556", "message": "Implement and test new get state root", "committedDate": "2020-10-15T18:53:29Z", "type": "commit"}, {"oid": "414e9a1e00fd902bb060da9c57e7845bde53264d", "url": "https://github.com/ConsenSys/teku/commit/414e9a1e00fd902bb060da9c57e7845bde53264d", "message": "Run spotless", "committedDate": "2020-10-15T18:54:01Z", "type": "commit"}, {"oid": "eee7b8012382124426b087ab79d3d0660cac465b", "url": "https://github.com/ConsenSys/teku/commit/eee7b8012382124426b087ab79d3d0660cac465b", "message": "Fix test function name", "committedDate": "2020-10-15T18:54:57Z", "type": "commit"}, {"oid": "5efc5dcff1f5a556d544541382d54dfe5ba891c8", "url": "https://github.com/ConsenSys/teku/commit/5efc5dcff1f5a556d544541382d54dfe5ba891c8", "message": "Run spotless", "committedDate": "2020-10-15T19:58:46Z", "type": "commit"}, {"oid": "daec6e28872d3e2a1ce407df6506f038769455ec", "url": "https://github.com/ConsenSys/teku/commit/daec6e28872d3e2a1ce407df6506f038769455ec", "message": "Add final keyword", "committedDate": "2020-10-15T20:19:29Z", "type": "commit"}, {"oid": "d9cb04eff5604837771f04443aa807ea28146563", "url": "https://github.com/ConsenSys/teku/commit/d9cb04eff5604837771f04443aa807ea28146563", "message": "Start implementing get finality checkpoints", "committedDate": "2020-10-15T20:24:50Z", "type": "commit"}, {"oid": "14738bb22399f538e89ba10e030cb58bc72f773c", "url": "https://github.com/ConsenSys/teku/commit/14738bb22399f538e89ba10e030cb58bc72f773c", "message": "Finish implemeting get state finality checkpoints handler", "committedDate": "2020-10-15T20:24:50Z", "type": "commit"}, {"oid": "e3271ad8f341fccb910719027976d9f29b0a77bb", "url": "https://github.com/ConsenSys/teku/commit/e3271ad8f341fccb910719027976d9f29b0a77bb", "message": "Run spotless", "committedDate": "2020-10-15T20:25:35Z", "type": "commit"}, {"oid": "ca11de3483c8dce1b70fa65b457a949b806afe83", "url": "https://github.com/ConsenSys/teku/commit/ca11de3483c8dce1b70fa65b457a949b806afe83", "message": "Start implementing validator_balances", "committedDate": "2020-10-15T20:32:10Z", "type": "commit"}, {"oid": "92c7494d976b82071aeba7c615e0f69830a2a8f7", "url": "https://github.com/ConsenSys/teku/commit/92c7494d976b82071aeba7c615e0f69830a2a8f7", "message": "Finish implementing and testing state validator balances", "committedDate": "2020-10-16T18:40:08Z", "type": "commit"}, {"oid": "2aae962637cd3fbfc87d625b50ab7d7288767423", "url": "https://github.com/ConsenSys/teku/commit/2aae962637cd3fbfc87d625b50ab7d7288767423", "message": "Start implementing get state epoch committees", "committedDate": "2020-10-16T18:58:21Z", "type": "commit"}, {"oid": "0555bc66715d72991344d7a8c37417bce56507fc", "url": "https://github.com/ConsenSys/teku/commit/0555bc66715d72991344d7a8c37417bce56507fc", "message": "Finish implementing and test get state epoch committees", "committedDate": "2020-10-16T21:49:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzQzNzE0OA==", "url": "https://github.com/ConsenSys/teku/pull/3003#discussion_r507437148", "bodyText": "needs a different response object here or openapi will be incorrect in the schema tag", "author": "rolfyone", "createdAt": "2020-10-19T04:18:56Z", "path": "data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/v1/beacon/GetStateEpochCommittees.java", "diffHunk": "@@ -0,0 +1,175 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.beaconrestapi.handlers.v1.beacon;\n+\n+import static javax.servlet.http.HttpServletResponse.SC_BAD_REQUEST;\n+import static javax.servlet.http.HttpServletResponse.SC_SERVICE_UNAVAILABLE;\n+import static tech.pegasys.teku.beaconrestapi.CacheControlUtils.getMaxAgeForSlot;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.COMMITTEE_INDEX;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.COMMITTEE_INDEX_QUERY_DESCRIPTION;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.EPOCH;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.INDEX;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.PARAM_EPOCH;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.PARAM_EPOCH_DESCRIPTION;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.PARAM_STATE_ID;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.PARAM_STATE_ID_DESCRIPTION;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_BAD_REQUEST;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_INTERNAL_ERROR;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_NOT_FOUND;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_OK;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_SERVICE_UNAVAILABLE;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.SERVICE_UNAVAILABLE;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.SLOT;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.SLOT_QUERY_DESCRIPTION;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.TAG_V1_BEACON;\n+import static tech.pegasys.teku.beaconrestapi.SingleQueryParameterUtils.INVALID_NUMERIC_VALUE;\n+\n+import io.javalin.core.util.Header;\n+import io.javalin.http.Context;\n+import io.javalin.http.Handler;\n+import io.javalin.plugin.openapi.annotations.HttpMethod;\n+import io.javalin.plugin.openapi.annotations.OpenApi;\n+import io.javalin.plugin.openapi.annotations.OpenApiContent;\n+import io.javalin.plugin.openapi.annotations.OpenApiParam;\n+import io.javalin.plugin.openapi.annotations.OpenApiResponse;\n+import java.util.Optional;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.jetbrains.annotations.NotNull;\n+import tech.pegasys.teku.api.ChainDataProvider;\n+import tech.pegasys.teku.api.DataProvider;\n+import tech.pegasys.teku.api.response.v1.beacon.GetStateEpochCommitteesResponse;\n+import tech.pegasys.teku.api.response.v1.beacon.GetStateRootResponse;\n+import tech.pegasys.teku.api.schema.BeaconHead;\n+import tech.pegasys.teku.beaconrestapi.handlers.AbstractHandler;\n+import tech.pegasys.teku.beaconrestapi.schema.BadRequest;\n+import tech.pegasys.teku.infrastructure.async.SafeFuture;\n+import tech.pegasys.teku.infrastructure.unsigned.UInt64;\n+import tech.pegasys.teku.provider.JsonProvider;\n+import tech.pegasys.teku.storage.client.ChainDataUnavailableException;\n+import tech.pegasys.teku.util.config.Constants;\n+\n+public class GetStateEpochCommittees extends AbstractHandler implements Handler {\n+  private static final Logger LOG = LogManager.getLogger();\n+  public static final String ROUTE = \"/eth/v1/beacon/states/:state_id/committees/:epoch\";\n+\n+  private final ChainDataProvider provider;\n+  private final StateValidatorsUtil stateValidatorsUtil = new StateValidatorsUtil();\n+\n+  public GetStateEpochCommittees(final DataProvider dataProvider, final JsonProvider jsonProvider) {\n+    super(jsonProvider);\n+    this.provider = dataProvider.getChainDataProvider();\n+  }\n+\n+  GetStateEpochCommittees(\n+      final ChainDataProvider chainDataProvider, final JsonProvider jsonProvider) {\n+    super(jsonProvider);\n+    this.provider = chainDataProvider;\n+  }\n+\n+  @OpenApi(\n+      path = ROUTE,\n+      method = HttpMethod.GET,\n+      summary = \"Get all committees for epoch\",\n+      tags = {TAG_V1_BEACON},\n+      description = \"Retrieves the committees for the given state at the given epoch.\",\n+      pathParams = {\n+        @OpenApiParam(name = PARAM_STATE_ID, description = PARAM_STATE_ID_DESCRIPTION),\n+        @OpenApiParam(name = PARAM_EPOCH, description = PARAM_EPOCH_DESCRIPTION)\n+      },\n+      queryParams = {\n+        @OpenApiParam(\n+            name = COMMITTEE_INDEX,\n+            description = COMMITTEE_INDEX_QUERY_DESCRIPTION,\n+            isRepeatable = false),\n+        @OpenApiParam(name = SLOT, description = SLOT_QUERY_DESCRIPTION, isRepeatable = false)\n+      },\n+      responses = {\n+        @OpenApiResponse(\n+            status = RES_OK,\n+            content = @OpenApiContent(from = GetStateRootResponse.class)),", "originalCommit": "0555bc66715d72991344d7a8c37417bce56507fc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkzMDYwOA==", "url": "https://github.com/ConsenSys/teku/pull/3003#discussion_r507930608", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-10-19T17:34:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzQzNzE0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzQzODEwMw==", "url": "https://github.com/ConsenSys/teku/pull/3003#discussion_r507438103", "bodyText": "state_id", "author": "rolfyone", "createdAt": "2020-10-19T04:20:50Z", "path": "data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/v1/beacon/GetStateFork.java", "diffHunk": "@@ -71,8 +71,7 @@ public GetStateFork(final DataProvider dataProvider, final JsonProvider jsonProv\n       method = HttpMethod.GET,\n       summary = \"Get state fork\",\n       tags = {TAG_V1_BEACON, TAG_VALIDATOR_REQUIRED},\n-      description =\n-          \"Request beacon node to provide all validators that are scheduled to propose a block in the given epoch.\",\n+      description = \"Returns Fork object for state with given 'stateId'.\",", "originalCommit": "0555bc66715d72991344d7a8c37417bce56507fc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkzMDg2NQ==", "url": "https://github.com/ConsenSys/teku/pull/3003#discussion_r507930865", "bodyText": "Fixed in the other PR, which this builds upon. Hoping to merge that one first.", "author": "cemozerr", "createdAt": "2020-10-19T17:34:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzQzODEwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzQzOTA1MA==", "url": "https://github.com/ConsenSys/teku/pull/3003#discussion_r507439050", "bodyText": "possible to make that a bit easier to digest?", "author": "rolfyone", "createdAt": "2020-10-19T04:22:47Z", "path": "data/provider/src/main/java/tech/pegasys/teku/api/ChainDataProvider.java", "diffHunk": "@@ -110,6 +112,48 @@ public GetForkResponse getForkInfo() {\n                             .collect(toList())));\n   }\n \n+  public SafeFuture<Optional<List<EpochCommitteeResponse>>> getCommitteesAtEpochV1(\n+      final UInt64 stateSlot,\n+      final UInt64 epoch,\n+      final Optional<UInt64> maybeSlot,\n+      final Optional<Integer> maybeIndex) {\n+    if (!combinedChainDataClient.isChainDataFullyAvailable()) {\n+      return chainUnavailable();\n+    }\n+\n+    final UInt64 earliestQueryableSlot =\n+        CommitteeUtil.getEarliestQueryableSlotForTargetEpoch(epoch);\n+    if (recentChainData.getHeadSlot().isLessThan(earliestQueryableSlot)) {\n+      return SafeFuture.completedFuture(Optional.empty());\n+    }\n+\n+    if (stateSlot.isLessThan(earliestQueryableSlot)) {\n+      return SafeFuture.completedFuture(Optional.empty());\n+    }\n+\n+    return combinedChainDataClient\n+        .getStateAtSlotExact(stateSlot)\n+        .thenApply(\n+            maybeResult ->\n+                maybeResult.map(\n+                    state ->\n+                        combinedChainDataClient.getCommitteesFromState(state, epoch).stream()\n+                            .filter(\n+                                committee ->\n+                                    maybeSlot\n+                                        .map(slot -> committee.getSlot().equals(slot))\n+                                        .orElse(true))\n+                            .filter(\n+                                committee ->\n+                                    maybeIndex\n+                                        .map(\n+                                            index ->\n+                                                committee.getCommitteeIndex().intValue() == index)\n+                                        .orElse(true))\n+                            .map(EpochCommitteeResponse::new)\n+                            .collect(toList())));", "originalCommit": "0555bc66715d72991344d7a8c37417bce56507fc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk1NjY5Mw==", "url": "https://github.com/ConsenSys/teku/pull/3003#discussion_r507956693", "bodyText": "Donne.", "author": "cemozerr", "createdAt": "2020-10-19T18:01:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzQzOTA1MA=="}], "type": "inlineReview"}, {"oid": "5de130c196b5d788cb42f2d7c3534be6b573faf2", "url": "https://github.com/ConsenSys/teku/commit/5de130c196b5d788cb42f2d7c3534be6b573faf2", "message": "Resolve comments", "committedDate": "2020-10-19T18:01:46Z", "type": "commit"}, {"oid": "472c5d5fb3aeb18e020a42d370049d38f861d59a", "url": "https://github.com/ConsenSys/teku/commit/472c5d5fb3aeb18e020a42d370049d38f861d59a", "message": "Handle optional epoch path param", "committedDate": "2020-10-19T18:26:22Z", "type": "commit"}, {"oid": "92e2c940decab4890c550b5200df8db70e4659a8", "url": "https://github.com/ConsenSys/teku/commit/92e2c940decab4890c550b5200df8db70e4659a8", "message": "Fix assemble issue", "committedDate": "2020-10-19T19:10:55Z", "type": "commit"}, {"oid": "58bdcd21f4714042aff922be809b962c32c0b0e6", "url": "https://github.com/ConsenSys/teku/commit/58bdcd21f4714042aff922be809b962c32c0b0e6", "message": "Merge remote-tracking branch 'remotes/origin/master' into implementStandardApiGetStateEpochCommittees\n\n# Conflicts:\n#\tdata/beaconrestapi/src/test/java/tech/pegasys/teku/beaconrestapi/BeaconRestApiV1Test.java", "committedDate": "2020-10-19T20:53:34Z", "type": "commit"}, {"oid": "93b550f4a57c557f4d2b4edacae6b9a7e04bbba9", "url": "https://github.com/ConsenSys/teku/commit/93b550f4a57c557f4d2b4edacae6b9a7e04bbba9", "message": "Fix path param description", "committedDate": "2020-10-19T20:59:16Z", "type": "commit"}, {"oid": "98ca2d820151f625377bc11e58a412cbd7ad34da", "url": "https://github.com/ConsenSys/teku/commit/98ca2d820151f625377bc11e58a412cbd7ad34da", "message": "Merge branch 'master' into implementStandardApiGetStateEpochCommittees\n\n# Conflicts:\n#\tdata/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/RestApiConstants.java\n#\tdata/beaconrestapi/src/test/java/tech/pegasys/teku/beaconrestapi/BeaconRestApiV1Test.java\n#\tdata/provider/src/main/java/tech/pegasys/teku/api/ChainDataProvider.java", "committedDate": "2020-10-19T21:12:17Z", "type": "commit"}, {"oid": "ec0f2b45bf30b34a4f80f36fce20f2e14e2cb73c", "url": "https://github.com/ConsenSys/teku/commit/ec0f2b45bf30b34a4f80f36fce20f2e14e2cb73c", "message": "Run spotless", "committedDate": "2020-10-19T21:13:24Z", "type": "commit"}, {"oid": "c12be31fb269b1a6a7b48dcba0b99e2507e6a462", "url": "https://github.com/ConsenSys/teku/commit/c12be31fb269b1a6a7b48dcba0b99e2507e6a462", "message": "Fix spotless issue", "committedDate": "2020-10-19T21:17:47Z", "type": "commit"}]}