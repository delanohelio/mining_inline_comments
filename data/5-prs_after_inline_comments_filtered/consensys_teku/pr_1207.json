{"pr_number": 1207, "pr_title": "refactor BeaconChainHeadHandler to do a single call to storage client", "pr_createdAt": "2020-02-20T01:46:53Z", "pr_url": "https://github.com/ConsenSys/teku/pull/1207", "timeline": [{"oid": "f5f28c43321d466a49c73801b9ef100c57928b7a", "url": "https://github.com/ConsenSys/teku/commit/f5f28c43321d466a49c73801b9ef100c57928b7a", "message": "refactor BeaconChainHeadHandler to do a single call to the storage client\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-02-20T01:42:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTY3MzkzMA==", "url": "https://github.com/ConsenSys/teku/pull/1207#discussion_r381673930", "bodyText": "I'd have expected that finalizedCheckpoint and justifiedCheckpoint are null not just the root inside them. But if we already have a BestBlockRoot then we must be post-genesis and so not need any null checks here (at genesis the justified and finalised checkpoints are set to the genesis state and they move forward from there).", "author": "ajsutton", "createdAt": "2020-02-20T02:16:58Z", "path": "data/beaconrestapi/src/main/java/tech/pegasys/artemis/beaconrestapi/beaconhandlers/BeaconChainHeadHandler.java", "diffHunk": "@@ -59,29 +59,32 @@ public BeaconChainHeadHandler(ChainStorageClient client) {\n   @Override\n   public void handle(Context ctx) {\n     Bytes32 head_block_root = client.getBestBlockRoot();\n+    if (head_block_root == null) {\n+      ctx.status(SC_NO_CONTENT);\n+      return;\n+    }\n \n-    UnsignedLong head_block_slot = client.getBestSlot();\n-    UnsignedLong finalized_epoch = client.getFinalizedEpoch();\n-    Bytes32 finalized_root = client.getFinalizedRoot();\n-    UnsignedLong justified_epoch = client.getJustifiedEpoch();\n-    Bytes32 justified_root = client.getJustifiedRoot();\n+    // derive all other state from the head_block_root\n+    BeaconState beaconState = client.getStore().getBlockState(head_block_root);\n+    Checkpoint finalizedCheckpoint = beaconState.getFinalized_checkpoint();\n+    Checkpoint justifiedCheckpoint = beaconState.getCurrent_justified_checkpoint();\n \n-    if (head_block_root == null || finalized_root == null || justified_root == null) {\n+    if (finalizedCheckpoint.getRoot() == null || justifiedCheckpoint.getRoot() == null) {", "originalCommit": "f5f28c43321d466a49c73801b9ef100c57928b7a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTY5OTQ4OQ==", "url": "https://github.com/ConsenSys/teku/pull/1207#discussion_r381699489", "bodyText": "removed that check", "author": "macfarla", "createdAt": "2020-02-20T03:05:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTY3MzkzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTY3NTE3Ng==", "url": "https://github.com/ConsenSys/teku/pull/1207#discussion_r381675176", "bodyText": "I generally wouldn't mock data objects like BeaconState.  Just use DataStructureUtil.randomBeaconState.", "author": "ajsutton", "createdAt": "2020-02-20T02:19:09Z", "path": "data/beaconrestapi/src/test/java/tech/pegasys/artemis/beaconrestapi/beaconhandlers/BeaconChainHeadHandlerTest.java", "diffHunk": "@@ -17,45 +17,43 @@\n import static org.mockito.Mockito.mock;\n import static org.mockito.Mockito.verify;\n import static org.mockito.Mockito.when;\n+import static tech.pegasys.artemis.datastructures.util.BeaconStateUtil.compute_epoch_at_slot;\n \n import com.google.common.primitives.UnsignedLong;\n import io.javalin.http.Context;\n import org.apache.tuweni.bytes.Bytes32;\n import org.junit.jupiter.api.Test;\n import tech.pegasys.artemis.beaconrestapi.schema.BeaconChainHeadResponse;\n-import tech.pegasys.artemis.datastructures.util.BeaconStateUtil;\n+import tech.pegasys.artemis.datastructures.state.BeaconState;\n+import tech.pegasys.artemis.datastructures.state.Checkpoint;\n import tech.pegasys.artemis.datastructures.util.DataStructureUtil;\n import tech.pegasys.artemis.provider.JsonProvider;\n import tech.pegasys.artemis.storage.ChainStorageClient;\n+import tech.pegasys.artemis.storage.Store;\n \n public class BeaconChainHeadHandlerTest {\n   private Context context = mock(Context.class);\n   private ChainStorageClient storageClient = mock(ChainStorageClient.class);\n+  private Store store = mock(Store.class);\n+  private BeaconState beaconState = mock(BeaconState.class);", "originalCommit": "f5f28c43321d466a49c73801b9ef100c57928b7a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTcwMjg4Ng==", "url": "https://github.com/ConsenSys/teku/pull/1207#discussion_r381702886", "bodyText": "fixed", "author": "macfarla", "createdAt": "2020-02-20T03:11:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTY3NTE3Ng=="}], "type": "inlineReview"}, {"oid": "0392f3351c3a11f887c3f542739a84ca1545605e", "url": "https://github.com/ConsenSys/teku/commit/0392f3351c3a11f887c3f542739a84ca1545605e", "message": "Merge branch 'master' of github.com:PegaSysEng/artemis into derive-state-refactor", "committedDate": "2020-02-20T03:02:35Z", "type": "commit"}, {"oid": "f3caef8d38dd05c725f257763a6067b83a1aa59d", "url": "https://github.com/ConsenSys/teku/commit/f3caef8d38dd05c725f257763a6067b83a1aa59d", "message": "remove mock to use a real BeaconState object\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-02-20T03:12:36Z", "type": "commit"}, {"oid": "32053b6481fa6752067776b28e63844b7f6934d7", "url": "https://github.com/ConsenSys/teku/commit/32053b6481fa6752067776b28e63844b7f6934d7", "message": "merge upstream\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-02-20T03:34:07Z", "type": "commit"}, {"oid": "96eacea3f101d31ebb95d004addff68ebf6389f4", "url": "https://github.com/ConsenSys/teku/commit/96eacea3f101d31ebb95d004addff68ebf6389f4", "message": "updated no content description\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-02-20T03:40:03Z", "type": "commit"}]}