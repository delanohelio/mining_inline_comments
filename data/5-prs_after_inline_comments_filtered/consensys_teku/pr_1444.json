{"pr_number": 1444, "pr_title": "Fuzz utils", "pr_createdAt": "2020-03-23T09:38:15Z", "pr_url": "https://github.com/ConsenSys/teku/pull/1444", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI0NTkzMQ==", "url": "https://github.com/ConsenSys/teku/pull/1444#discussion_r474245931", "bodyText": "Would you mind clearing out some of these TODO comments?  We should either implement the TODO's now or cut them.", "author": "mbaxter", "createdAt": "2020-08-20T20:12:43Z", "path": "fuzz/src/main/java/tech/pegasys/teku/fuzz/FuzzUtil.java", "diffHunk": "@@ -0,0 +1,281 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.fuzz;\n+\n+import java.nio.ByteBuffer;\n+import java.nio.ByteOrder;\n+import java.util.Optional;\n+import org.apache.tuweni.bytes.Bytes;\n+import org.apache.tuweni.bytes.Bytes32;\n+import tech.pegasys.teku.bls.BLSConstants;\n+import tech.pegasys.teku.core.BlockProcessorUtil;\n+import tech.pegasys.teku.core.StateTransition;\n+import tech.pegasys.teku.core.StateTransitionException;\n+import tech.pegasys.teku.core.exceptions.BlockProcessingException;\n+import tech.pegasys.teku.datastructures.state.BeaconState;\n+import tech.pegasys.teku.datastructures.util.BeaconStateUtil;\n+import tech.pegasys.teku.datastructures.util.CommitteeUtil;\n+import tech.pegasys.teku.datastructures.util.SimpleOffsetSerializer;\n+import tech.pegasys.teku.fuzz.input.AttestationFuzzInput;\n+import tech.pegasys.teku.fuzz.input.AttesterSlashingFuzzInput;\n+import tech.pegasys.teku.fuzz.input.BlockFuzzInput;\n+import tech.pegasys.teku.fuzz.input.BlockHeaderFuzzInput;\n+import tech.pegasys.teku.fuzz.input.DepositFuzzInput;\n+import tech.pegasys.teku.fuzz.input.ProposerSlashingFuzzInput;\n+import tech.pegasys.teku.fuzz.input.VoluntaryExitFuzzInput;\n+import tech.pegasys.teku.ssz.SSZTypes.SSZList;\n+import tech.pegasys.teku.ssz.sos.ReflectionInformation;\n+import tech.pegasys.teku.util.config.Constants;\n+\n+// TODO a Java FuzzHarness interface? - that way type safety can be checked at compile time", "originalCommit": "f58c17095bb04bdd53863e94d2e2272826ce1ee5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM1MjQ3NA==", "url": "https://github.com/ConsenSys/teku/pull/1444#discussion_r474352474", "bodyText": "Done! Sorry to leave them sitting around.", "author": "gnattishness", "createdAt": "2020-08-21T01:08:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI0NTkzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDc3MzM2NQ==", "url": "https://github.com/ConsenSys/teku/pull/1444#discussion_r474773365", "bodyText": "np - thanks for the clean up!", "author": "mbaxter", "createdAt": "2020-08-21T15:33:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI0NTkzMQ=="}], "type": "inlineReview"}, {"oid": "ff40d0b36c3da6b87a18ca0859b584a3841b771d", "url": "https://github.com/ConsenSys/teku/commit/ff40d0b36c3da6b87a18ca0859b584a3841b771d", "message": "Implement FuzzUtil - fuzzing target endpoints.\n\nThanks @mbaxter and @cemozerr for their assistance and contributions.\n(More detailed attribution below).\n\nCreates a FuzzUtil package that exercises relevant state transition\noperations, given XXXFuzzInput classes. A functional API that can\nbe targeted for fuzz-testing (including by beacon-fuzz differential\nfuzzing framework).\n\nAdds XXXFuzzInput classes that represent SSZ containers consistent with\nother clients. For block processing operations, these are in the form of\nContainer + BeaconState.\n\nThanks @mbaxter for:\n    - Moving the harnesses to a standalone package.\n    - Fix up XXXFuzzInput de/serialization and equality methods.\n    - Help with merge conflicts due to this long-lived PR!\n    - Make unit tests using reference test input.\n    - General assistance and advice!\n\nThanks @cemozerr for assistance with disabling BLS.", "committedDate": "2020-08-21T01:20:45Z", "type": "commit"}]}