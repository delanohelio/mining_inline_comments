{"pr_number": 1809, "pr_title": "Don't attempt to connect peers without correct eth2 ENR field", "pr_createdAt": "2020-05-18T23:15:34Z", "pr_url": "https://github.com/ConsenSys/teku/pull/1809", "timeline": [{"oid": "0fb64634610fe88fe0b97f1cf72606f5ddc2ab48", "url": "https://github.com/ConsenSys/teku/commit/0fb64634610fe88fe0b97f1cf72606f5ddc2ab48", "message": "Don't attempt to connect peers without correct eth2 ENR field", "committedDate": "2020-05-18T23:06:44Z", "type": "commit"}, {"oid": "646bd281f30344de7c5e858eab1f93478e8ad417", "url": "https://github.com/ConsenSys/teku/commit/646bd281f30344de7c5e858eab1f93478e8ad417", "message": "Update comment", "committedDate": "2020-05-18T23:13:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk0ODMwMw==", "url": "https://github.com/ConsenSys/teku/pull/1809#discussion_r426948303", "bodyText": "We've removed the predicate and left a period where we aren't filtering peers.  We probably need this to be a replacePredicate atomic operation.\nBut it's probably simpler to just register one predicate with the connection manager that looks at a volatile field which stores the current EnrForkId and filters on that.  Then when the fork ID is updated, it updates that field and the existing predicate begins using the new value.", "author": "ajsutton", "createdAt": "2020-05-18T23:35:44Z", "path": "networking/p2p/src/main/java/tech/pegasys/teku/networking/p2p/DiscoveryNetwork.java", "diffHunk": "@@ -156,6 +158,9 @@ public void setPreGenesisForkInfo() {\n   }\n \n   public void setForkInfo(final ForkInfo currentForkInfo, final Optional<Fork> nextForkInfo) {\n+    // Remove the old fork info peer predicate\n+    enrFieldPeerPredicateId.ifPresent(connectionManager::removePeerPredicate);", "originalCommit": "646bd281f30344de7c5e858eab1f93478e8ad417", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU4NzAyNA==", "url": "https://github.com/ConsenSys/teku/pull/1809#discussion_r427587024", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-05-19T20:42:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk0ODMwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk0ODQzNQ==", "url": "https://github.com/ConsenSys/teku/pull/1809#discussion_r426948435", "bodyText": "What happens when the peer doesn't include an eth2 field in it's ENR? I think we should not connect to them, but I think we'll get NullPointerException.", "author": "ajsutton", "createdAt": "2020-05-18T23:36:10Z", "path": "networking/p2p/src/main/java/tech/pegasys/teku/networking/p2p/DiscoveryNetwork.java", "diffHunk": "@@ -164,10 +169,21 @@ public void setForkInfo(final ForkInfo currentForkInfo, final Optional<Fork> nex\n     // If no future fork is planned, set next_fork_epoch = FAR_FUTURE_EPOCH to signal this\n     final UnsignedLong nextForkEpoch = nextForkInfo.map(Fork::getEpoch).orElse(FAR_FUTURE_EPOCH);\n \n-    final EnrForkId enrForkId =\n-        new EnrForkId(currentForkInfo.getForkDigest(), nextVersion, nextForkEpoch);\n-    discoveryService.updateCustomENRField(\n-        ETH2_ENR_FIELD, SimpleOffsetSerializer.serialize(enrForkId));\n+    final Bytes4 forkDigest = currentForkInfo.getForkDigest();\n+    final EnrForkId enrForkId = new EnrForkId(forkDigest, nextVersion, nextForkEpoch);\n+    final Bytes encodedEnrForkId = SimpleOffsetSerializer.serialize(enrForkId);\n+\n+    discoveryService.updateCustomENRField(ETH2_ENR_FIELD, encodedEnrForkId);\n+\n+    long newPeerPredicateId =\n+        connectionManager.addPeerPredicate(\n+            peer ->\n+                peer.getEnrForkId().equals(encodedEnrForkId)", "originalCommit": "646bd281f30344de7c5e858eab1f93478e8ad417", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU5NDUzNg==", "url": "https://github.com/ConsenSys/teku/pull/1809#discussion_r427594536", "bodyText": "Fixed.", "author": "cemozerr", "createdAt": "2020-05-19T20:55:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk0ODQzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU5ODUzNg==", "url": "https://github.com/ConsenSys/teku/pull/1809#discussion_r427598536", "bodyText": "Fixed this.", "author": "cemozerr", "createdAt": "2020-05-19T21:03:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk0ODQzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk0OTE2OQ==", "url": "https://github.com/ConsenSys/teku/pull/1809#discussion_r426949169", "bodyText": "Nice.  But I think you can use:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  return peerPredicates.values().stream()\n          \n          \n            \n                      .map(predicate -> predicate.applyPeer(peer))\n          \n          \n            \n                      .reduce(true, (a, b) -> a && b);\n          \n          \n            \n                  return peerPredicates.values().stream()\n          \n          \n            \n                      .allMatch(predicate -> predicate.applyPeer(peer));", "author": "ajsutton", "createdAt": "2020-05-18T23:38:43Z", "path": "networking/p2p/src/main/java/tech/pegasys/teku/networking/p2p/connection/ConnectionManager.java", "diffHunk": "@@ -171,4 +177,37 @@ private void createPersistentConnection(final PeerAddress peerAddress) {\n                   TimeUnit.MILLISECONDS);\n             });\n   }\n+\n+  public long addPeerPredicate(final PeerPredicate predicate) {\n+    return newPeerFilter.addPeerPredicate(predicate);\n+  }\n+\n+  public boolean removePeerPredicate(final long id) {\n+    return newPeerFilter.removePeerPredicate(id);\n+  }\n+\n+  public static class NewPeerFilter {\n+    private final AtomicLong predicateId = new AtomicLong();\n+    private final Map<Long, PeerPredicate> peerPredicates = new ConcurrentHashMap<>();\n+\n+    long addPeerPredicate(final PeerPredicate predicate) {\n+      final long id = predicateId.getAndIncrement();\n+      peerPredicates.put(id, predicate);\n+      return id;\n+    }\n+\n+    boolean removePeerPredicate(final long predicateId) {\n+      return peerPredicates.remove(predicateId) != null;\n+    }\n+\n+    boolean isPeerValid(DiscoveryPeer peer) {\n+      return peerPredicates.values().stream()\n+          .map(predicate -> predicate.applyPeer(peer))\n+          .reduce(true, (a, b) -> a && b);", "originalCommit": "646bd281f30344de7c5e858eab1f93478e8ad417", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU4OTU2Ng==", "url": "https://github.com/ConsenSys/teku/pull/1809#discussion_r427589566", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-05-19T20:46:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk0OTE2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU5ODQzNg==", "url": "https://github.com/ConsenSys/teku/pull/1809#discussion_r427598436", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-05-19T21:03:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk0OTE2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk0OTY0OA==", "url": "https://github.com/ConsenSys/teku/pull/1809#discussion_r426949648", "bodyText": "Definitely going to want to make this Optional to handle the field not being set.", "author": "ajsutton", "createdAt": "2020-05-18T23:40:16Z", "path": "networking/p2p/src/main/java/tech/pegasys/teku/networking/p2p/discovery/discv5/NodeRecordConverter.java", "diffHunk": "@@ -29,6 +29,9 @@\n \n   private static DiscoveryPeer socketAddressToDiscoveryPeer(\n       final NodeRecord nodeRecord, final InetSocketAddress address) {\n-    return new DiscoveryPeer(((Bytes) nodeRecord.get(EnrField.PKEY_SECP256K1)), address);\n+    return new DiscoveryPeer(\n+        ((Bytes) nodeRecord.get(EnrField.PKEY_SECP256K1)),\n+        address,\n+        ((Bytes) nodeRecord.get(\"eth2\")));", "originalCommit": "646bd281f30344de7c5e858eab1f93478e8ad417", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU5NDg1Mg==", "url": "https://github.com/ConsenSys/teku/pull/1809#discussion_r427594852", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-05-19T20:56:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk0OTY0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU5ODQwMg==", "url": "https://github.com/ConsenSys/teku/pull/1809#discussion_r427598402", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-05-19T21:03:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk0OTY0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk1MDI1OQ==", "url": "https://github.com/ConsenSys/teku/pull/1809#discussion_r426950259", "bodyText": "Worth adding a test for discovery peers with no enr fork ID.", "author": "ajsutton", "createdAt": "2020-05-18T23:42:26Z", "path": "networking/p2p/src/test/java/tech/pegasys/teku/networking/p2p/discovery/ConnectionManagerTest.java", "diffHunk": "@@ -43,18 +43,19 @@\n \n class ConnectionManagerTest {", "originalCommit": "646bd281f30344de7c5e858eab1f93478e8ad417", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU5OTMzOA==", "url": "https://github.com/ConsenSys/teku/pull/1809#discussion_r427599338", "bodyText": "I believe adding that test to DiscoveryNetworkTest.java would be better since the connection manager is agnostic for any Eth2 specific information, and the enr fork id predicates get added at DiscoveryNetwork.", "author": "cemozerr", "createdAt": "2020-05-19T21:05:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk1MDI1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk1MDU1Ng==", "url": "https://github.com/ConsenSys/teku/pull/1809#discussion_r426950556", "bodyText": "It's usually better not to mock data classes like DiscoveryPeer.  Just create a real one passing in the values you need it to return from it's getters.", "author": "ajsutton", "createdAt": "2020-05-18T23:43:33Z", "path": "networking/p2p/src/test/java/tech/pegasys/teku/networking/p2p/DiscoveryNetworkTest.java", "diffHunk": "@@ -174,6 +179,45 @@ public void setForkInfo_futureForkScheduled() {\n         .updateCustomENRField(\"eth2\", SimpleOffsetSerializer.serialize(expectedEnrForkId));\n   }\n \n+  @Test\n+  public void setForkInfoShouldAddPredicateToConnectionManager() {\n+    final ForkInfo currentForkInfo = dataStructureUtil.randomForkInfo();\n+    discoveryNetwork.setForkInfo(currentForkInfo, Optional.empty());\n+\n+    final EnrForkId expectedEnrForkId =\n+        new EnrForkId(\n+            currentForkInfo.getForkDigest(),\n+            currentForkInfo.getFork().getCurrent_version(),\n+            FAR_FUTURE_EPOCH);\n+    Bytes encodedForkId = SimpleOffsetSerializer.serialize(expectedEnrForkId);\n+    verify(discoveryService).updateCustomENRField(\"eth2\", encodedForkId);\n+    ArgumentCaptor<ConnectionManager.PeerPredicate> peerPredicateArgumentCaptor =\n+        ArgumentCaptor.forClass(ConnectionManager.PeerPredicate.class);\n+    verify(connectionManager).addPeerPredicate(peerPredicateArgumentCaptor.capture());\n+\n+    DiscoveryPeer peer1 = mock(DiscoveryPeer.class);", "originalCommit": "646bd281f30344de7c5e858eab1f93478e8ad417", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU5ODIyNQ==", "url": "https://github.com/ConsenSys/teku/pull/1809#discussion_r427598225", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-05-19T21:02:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk1MDU1Ng=="}], "type": "inlineReview"}, {"oid": "6052fc0980d1ad4b9fabfb7c6355b8e01cfd3487", "url": "https://github.com/ConsenSys/teku/commit/6052fc0980d1ad4b9fabfb7c6355b8e01cfd3487", "message": "Merge branch 'master' into dontConnectPeersWithoutCorrectEth2ENR", "committedDate": "2020-05-19T18:35:34Z", "type": "commit"}, {"oid": "f0f4aff17c4fd2a4370c90356762d6d3fb1dbfcd", "url": "https://github.com/ConsenSys/teku/commit/f0f4aff17c4fd2a4370c90356762d6d3fb1dbfcd", "message": "Use only one peer predicate that depends on changing enrForkId", "committedDate": "2020-05-19T20:44:21Z", "type": "commit"}, {"oid": "9d255174e8c4f6e2a6aba84de04cd6789bbc37c7", "url": "https://github.com/ConsenSys/teku/commit/9d255174e8c4f6e2a6aba84de04cd6789bbc37c7", "message": "Add more tests and make enrForkId optional on DiscoveryPeer", "committedDate": "2020-05-19T21:15:33Z", "type": "commit"}, {"oid": "37929c92e272f9a62ebf47a71a72a730b2d2c25a", "url": "https://github.com/ConsenSys/teku/commit/37929c92e272f9a62ebf47a71a72a730b2d2c25a", "message": "Merge branch 'master' into dontConnectPeersWithoutCorrectEth2ENR", "committedDate": "2020-05-19T21:15:50Z", "type": "commit"}, {"oid": "8100353fe246ccdac8d3a6bb5ebab26c24fc0ae2", "url": "https://github.com/ConsenSys/teku/commit/8100353fe246ccdac8d3a6bb5ebab26c24fc0ae2", "message": "Set forkId at start so that we can connect to bootNodes", "committedDate": "2020-05-19T21:31:13Z", "type": "commit"}, {"oid": "a558c298e7521f60a6a472ec5f4dbd0b1d1e56b9", "url": "https://github.com/ConsenSys/teku/commit/a558c298e7521f60a6a472ec5f4dbd0b1d1e56b9", "message": "Fix unit test", "committedDate": "2020-05-19T21:32:53Z", "type": "commit"}, {"oid": "ce00b27aae35da03fc98f6cced404152e834fb09", "url": "https://github.com/ConsenSys/teku/commit/ce00b27aae35da03fc98f6cced404152e834fb09", "message": "Merge branch 'master' into dontConnectPeersWithoutCorrectEth2ENR", "committedDate": "2020-05-19T23:38:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzY2MTc2Ng==", "url": "https://github.com/ConsenSys/teku/pull/1809#discussion_r427661766", "bodyText": "nit: maybe extract this as a private method rather than doing it inline to avoid all the wrapping.", "author": "ajsutton", "createdAt": "2020-05-19T23:44:51Z", "path": "networking/p2p/src/main/java/tech/pegasys/teku/networking/p2p/DiscoveryNetwork.java", "diffHunk": "@@ -70,6 +72,23 @@\n   public void initialize() {\n     setPreGenesisForkInfo();\n     getEnr().ifPresent(StatusLogger.STATUS_LOG::listeningForDiscv5PreGenesis);\n+\n+    // Set connection manager peer predicate so that we don't attempt to connect peers with\n+    // different fork digests\n+    connectionManager.addPeerPredicate(\n+        peer ->\n+            enrForkId\n+                .map(EnrForkId::getForkDigest)\n+                .flatMap(\n+                    forkDigest ->\n+                        peer.getEnrForkId()\n+                            .map(\n+                                peerEnrForkId ->\n+                                    SimpleOffsetSerializer.deserialize(\n+                                            peerEnrForkId, EnrForkId.class)\n+                                        .getForkDigest()\n+                                        .equals(forkDigest)))\n+                .orElse(false));", "originalCommit": "ce00b27aae35da03fc98f6cced404152e834fb09", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIwNTUxMg==", "url": "https://github.com/ConsenSys/teku/pull/1809#discussion_r428205512", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-05-20T18:02:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzY2MTc2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzY2MjMxMg==", "url": "https://github.com/ConsenSys/teku/pull/1809#discussion_r427662312", "bodyText": "Do we need this now?", "author": "ajsutton", "createdAt": "2020-05-19T23:46:19Z", "path": "networking/p2p/src/main/java/tech/pegasys/teku/networking/p2p/connection/ConnectionManager.java", "diffHunk": "@@ -171,4 +178,31 @@ private void createPersistentConnection(final PeerAddress peerAddress) {\n                   TimeUnit.MILLISECONDS);\n             });\n   }\n+\n+  public long addPeerPredicate(final Predicate<DiscoveryPeer> predicate) {\n+    return newPeerFilter.addPeerPredicate(predicate);\n+  }\n+\n+  public boolean removePeerPredicate(final long id) {\n+    return newPeerFilter.removePeerPredicate(id);\n+  }", "originalCommit": "ce00b27aae35da03fc98f6cced404152e834fb09", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIwNTU3MA==", "url": "https://github.com/ConsenSys/teku/pull/1809#discussion_r428205570", "bodyText": "Removed.", "author": "cemozerr", "createdAt": "2020-05-20T18:02:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzY2MjMxMg=="}], "type": "inlineReview"}, {"oid": "bc5b13a8ba4f4801b446af4c15141cfe531a4d5f", "url": "https://github.com/ConsenSys/teku/commit/bc5b13a8ba4f4801b446af4c15141cfe531a4d5f", "message": "Merge branch 'master' into dontConnectPeersWithoutCorrectEth2ENR", "committedDate": "2020-05-20T17:45:17Z", "type": "commit"}, {"oid": "28cf6565d073cc2a36566a3866aa278cbda7966d", "url": "https://github.com/ConsenSys/teku/commit/28cf6565d073cc2a36566a3866aa278cbda7966d", "message": "Remove redundant method & test\n\nAlso extract inlined function", "committedDate": "2020-05-20T18:20:26Z", "type": "commit"}]}