{"pr_number": 2432, "pr_title": "Publish attestations immediately after verified block", "pr_createdAt": "2020-07-23T21:01:53Z", "pr_url": "https://github.com/ConsenSys/teku/pull/2432", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc5MDkxNA==", "url": "https://github.com/ConsenSys/teku/pull/2432#discussion_r459790914", "bodyText": "Is there a reason we're using this instead of the existing ImportedBlockEvent. That already goes through to the validator.  We could potentially convert it to use event channels instead of eventBus but would be good to do a conversion rather than have multiple events.\nAlso why is this called \"verified block slot\"?", "author": "ajsutton", "createdAt": "2020-07-23T23:56:44Z", "path": "ethereum/statetransition/src/main/java/tech/pegasys/teku/statetransition/blockimport/BlockImporter.java", "diffHunk": "@@ -129,6 +131,12 @@ private void notifyBlockOperationSubscribers(SignedBeaconBlock block) {\n     voluntaryExitSubscribers.deliver(\n         VerifiedBlockOperationsListener::onOperationsFromBlock,\n         block.getMessage().getBody().getVoluntary_exits());\n+    verifiedBlockSlotSubscribers.deliver(\n+        VerifiedBlockSlotListener::onBlockImportedForSlot, block.getSlot());", "originalCommit": "2c14643a69415db5b818e6c2a1c0b19e43e6d352", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc5MjA0Nw==", "url": "https://github.com/ConsenSys/teku/pull/2432#discussion_r459792047", "bodyText": "I feel like the protection to avoid broadcasting attestations for the same slot twice should wind up in the validator client rather than the beacon chain.  That may be particularly important once its split out to a separate process if the connection winds up failing over to a different beacon chain node for some reason.\nSo I'd have probably had the same events coming out of the BeaconChainService but publish attestations early in DutyScheduler and have this check to ensure we don't perform the duty twice there. This same check would also probably be good to add for block production to make it even less likely we wind up doing that twice.", "author": "ajsutton", "createdAt": "2020-07-24T00:00:43Z", "path": "validator/coordinator/src/main/java/tech/pegasys/teku/validator/coordinator/BroadcastAttestationsHandler.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.validator.coordinator;\n+\n+import com.google.common.primitives.UnsignedLong;\n+import tech.pegasys.teku.sync.SyncService;\n+import tech.pegasys.teku.validator.api.BroadcastAttestationsChannel;\n+\n+public class BroadcastAttestationsHandler {\n+\n+  private BroadcastAttestationsChannel attestationChannel;\n+  private SyncService syncService;\n+  private volatile UnsignedLong lastBroadcastSingleAttestationSlot = UnsignedLong.ZERO;\n+\n+  public BroadcastAttestationsHandler(\n+      BroadcastAttestationsChannel channel, SyncService syncService) {\n+    this.attestationChannel = channel;\n+    this.syncService = syncService;\n+  }\n+\n+  public synchronized void broadcastSingleAttestations(UnsignedLong slot) {\n+    if (slot.compareTo(lastBroadcastSingleAttestationSlot) <= 0 || syncService.isSyncActive()) {\n+      return;\n+    }", "originalCommit": "2c14643a69415db5b818e6c2a1c0b19e43e6d352", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE4NTQzOA==", "url": "https://github.com/ConsenSys/teku/pull/2432#discussion_r460185438", "bodyText": "This actually makes a lot of sense to me. I'm working on this right now and it turns out to be way simpler too.", "author": "cemozerr", "createdAt": "2020-07-24T17:17:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc5MjA0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI2MzgyMw==", "url": "https://github.com/ConsenSys/teku/pull/2432#discussion_r460263823", "bodyText": "Since this new method of doing this was way simpler, I started with a clean slate and force pushed. FYI.", "author": "cemozerr", "createdAt": "2020-07-24T20:06:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc5MjA0Nw=="}], "type": "inlineReview"}, {"oid": "7b76cba5ef7241f2a0f061109f62228e231c6d5f", "url": "https://github.com/ConsenSys/teku/commit/7b76cba5ef7241f2a0f061109f62228e231c6d5f", "message": "Publish attestations immediately after receiving the verified block for the slot", "committedDate": "2020-07-24T20:05:54Z", "type": "commit"}, {"oid": "7b76cba5ef7241f2a0f061109f62228e231c6d5f", "url": "https://github.com/ConsenSys/teku/commit/7b76cba5ef7241f2a0f061109f62228e231c6d5f", "message": "Publish attestations immediately after receiving the verified block for the slot", "committedDate": "2020-07-24T20:05:54Z", "type": "forcePushed"}, {"oid": "d39eabfed1ebbcde0c1ef8f373c1dcff4842a919", "url": "https://github.com/ConsenSys/teku/commit/d39eabfed1ebbcde0c1ef8f373c1dcff4842a919", "message": "Merge branch 'master' into publishAttestationsAsapAfterVerifiedBlock", "committedDate": "2020-07-24T20:08:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY0NTk2NQ==", "url": "https://github.com/ConsenSys/teku/pull/2432#discussion_r460645965", "bodyText": "All events coming into this class are on a single thread so this doesn't need to be volatile.", "author": "ajsutton", "createdAt": "2020-07-27T04:54:11Z", "path": "validator/client/src/main/java/tech/pegasys/teku/validator/client/DutyScheduler.java", "diffHunk": "@@ -31,6 +31,7 @@\n   private final DutyLoader epochDutiesScheduler;\n   private final StableSubnetSubscriber stableSubnetSubscriber;\n   private final NavigableMap<UnsignedLong, DutyQueue> dutiesByEpoch = new TreeMap<>();\n+  private volatile UnsignedLong lastAttestationCreationSlot;", "originalCommit": "d39eabfed1ebbcde0c1ef8f373c1dcff4842a919", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY0NjAzNw==", "url": "https://github.com/ConsenSys/teku/pull/2432#discussion_r460646037", "bodyText": "and we don't need synchronized here.", "author": "ajsutton", "createdAt": "2020-07-27T04:54:28Z", "path": "validator/client/src/main/java/tech/pegasys/teku/validator/client/DutyScheduler.java", "diffHunk": "@@ -71,7 +72,13 @@ public void onBlockProductionDue(final UnsignedLong slot) {\n   }\n \n   @Override\n-  public void onAttestationCreationDue(final UnsignedLong slot) {\n+  public synchronized void onAttestationCreationDue(final UnsignedLong slot) {", "originalCommit": "d39eabfed1ebbcde0c1ef8f373c1dcff4842a919", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "46c3a1b4b607387ce07e1229542860aef5b439de", "url": "https://github.com/ConsenSys/teku/commit/46c3a1b4b607387ce07e1229542860aef5b439de", "message": "Resolve comments", "committedDate": "2020-07-27T17:30:21Z", "type": "commit"}, {"oid": "95a8c6ccabeac58acee1867137845b08b160985c", "url": "https://github.com/ConsenSys/teku/commit/95a8c6ccabeac58acee1867137845b08b160985c", "message": "Merge branch 'master' into publishAttestationsAsapAfterVerifiedBlock", "committedDate": "2020-07-27T17:31:07Z", "type": "commit"}]}