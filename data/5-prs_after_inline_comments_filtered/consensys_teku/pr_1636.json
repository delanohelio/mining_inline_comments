{"pr_number": 1636, "pr_title": "Introduce SignedAggregateAndProof", "pr_createdAt": "2020-04-22T01:32:01Z", "pr_url": "https://github.com/ConsenSys/teku/pull/1636", "timeline": [{"oid": "2d4115c2cc037681ad5c5a28354c7ed51c52fe95", "url": "https://github.com/ConsenSys/teku/commit/2d4115c2cc037681ad5c5a28354c7ed51c52fe95", "message": "Introduce SignedAggregateAndProof and require it when submitting aggregations to the ValidatorApiChannel.", "committedDate": "2020-04-22T01:30:49Z", "type": "commit"}, {"oid": "273b4e4928171dac22e240aeffeea70fdedce610", "url": "https://github.com/ConsenSys/teku/commit/273b4e4928171dac22e240aeffeea70fdedce610", "message": "Add SSZ reference test for aggregateAndProof and fix it's hash tree root.", "committedDate": "2020-04-22T01:56:03Z", "type": "commit"}, {"oid": "9dc28c066ca679185304766b327464806f2e8cc4", "url": "https://github.com/ConsenSys/teku/commit/9dc28c066ca679185304766b327464806f2e8cc4", "message": "Add reference tests for SignedAggregateAndProof SSZ.", "committedDate": "2020-04-22T01:59:01Z", "type": "commit"}, {"oid": "29d6bfb4a27fd6ff32f3805d26f02aa5da58db6d", "url": "https://github.com/ConsenSys/teku/commit/29d6bfb4a27fd6ff32f3805d26f02aa5da58db6d", "message": "Merge branch 'master' of github.com:PegaSysEng/teku into signed-aggregate-and-proof", "committedDate": "2020-04-22T02:44:58Z", "type": "commit"}, {"oid": "52a4244ed2b3d57db0e31df75e7ce82ddd13b8c1", "url": "https://github.com/ConsenSys/teku/commit/52a4244ed2b3d57db0e31df75e7ce82ddd13b8c1", "message": "Fix AggregateAndProof ssz serialization.", "committedDate": "2020-04-22T02:47:05Z", "type": "commit"}, {"oid": "37165202c9a62c9a011b15c9d64dab15abcbf488", "url": "https://github.com/ConsenSys/teku/commit/37165202c9a62c9a011b15c9d64dab15abcbf488", "message": "Merge branch 'master' into signed-aggregate-and-proof", "committedDate": "2020-04-22T03:03:04Z", "type": "commit"}, {"oid": "4ead9ac21bfbc83f37613913204c610d91ef7318", "url": "https://github.com/ConsenSys/teku/commit/4ead9ac21bfbc83f37613913204c610d91ef7318", "message": "Merge branch 'master' of github.com:PegaSysEng/teku into signed-aggregate-and-proof", "committedDate": "2020-04-22T03:26:45Z", "type": "commit"}, {"oid": "95a0b116b3ecbda0b3488ee294fa5fc51bd1208c", "url": "https://github.com/ConsenSys/teku/commit/95a0b116b3ecbda0b3488ee294fa5fc51bd1208c", "message": "Merge branch 'signed-aggregate-and-proof' of github.com:ajsutton/teku into signed-aggregate-and-proof", "committedDate": "2020-04-22T03:26:52Z", "type": "commit"}, {"oid": "02134e1e7c7231cc474eaed6ea22c9a015ed7ad4", "url": "https://github.com/ConsenSys/teku/commit/02134e1e7c7231cc474eaed6ea22c9a015ed7ad4", "message": "Rename tests to match proper style in other PR.", "committedDate": "2020-04-22T03:27:41Z", "type": "commit"}, {"oid": "00d162746ba0c9333ac9a6ee9a9319112fc7fa11", "url": "https://github.com/ConsenSys/teku/commit/00d162746ba0c9333ac9a6ee9a9319112fc7fa11", "message": "Don't run a validator as we don't want any blocks created.", "committedDate": "2020-04-22T03:33:08Z", "type": "commit"}, {"oid": "59cabfa810143a899951ad7c9b9f40d13514e45c", "url": "https://github.com/ConsenSys/teku/commit/59cabfa810143a899951ad7c9b9f40d13514e45c", "message": "Spotless.", "committedDate": "2020-04-22T03:37:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY0NjY4NA==", "url": "https://github.com/ConsenSys/teku/pull/1636#discussion_r412646684", "bodyText": "The only difference is that this pathToObject call was inlined so it only executes if it's not a .ssz file (which would fail and log a warning).", "author": "ajsutton", "createdAt": "2020-04-22T03:44:37Z", "path": "eth-tests/src/main/java/tech/pegasys/artemis/ethtests/TestSuite.java", "diffHunk": "@@ -159,28 +160,26 @@ public static Object pathToObject(Path path, List<TestObject> testObjects) {\n                   Streams.concat(\n                           testSet.getFileNames().stream()\n                               .flatMap(\n-                                  fileName -> {\n-                                    Object object =\n-                                        pathToObject(\n-                                            Path.of(walkPath, fileName),\n-                                            testSet.getTestObjectByFileName(fileName));\n-                                    return testSet.getTestObjectByFileName(fileName).stream()\n-                                        .map(\n-                                            testObject -> {\n-                                              if (fileName.contains(\".ssz\")) {\n-                                                Bytes objectBytes =\n-                                                    getSSZBytesFromPath(\n-                                                        Path.of(walkPath, fileName));\n-                                                return SimpleOffsetSerializer.deserialize(\n-                                                    objectBytes, testObject.getClassName());\n-                                              } else {\n-                                                return parseObjectFromFile(\n-                                                    testObject.getClassName(),\n-                                                    testObject.getPath(),\n-                                                    object);\n-                                              }\n-                                            });\n-                                  }),\n+                                  fileName ->\n+                                      testSet.getTestObjectByFileName(fileName).stream()\n+                                          .map(\n+                                              testObject -> {\n+                                                if (fileName.contains(\".ssz\")) {\n+                                                  Bytes objectBytes =\n+                                                      getSSZBytesFromPath(\n+                                                          Path.of(walkPath, fileName));\n+                                                  return SimpleOffsetSerializer.deserialize(\n+                                                      objectBytes, testObject.getClassName());\n+                                                } else {\n+                                                  return parseObjectFromFile(\n+                                                      testObject.getClassName(),\n+                                                      testObject.getPath(),\n+                                                      pathToObject(\n+                                                          Path.of(walkPath, fileName),\n+                                                          testSet.getTestObjectByFileName(\n+                                                              fileName)));", "originalCommit": "59cabfa810143a899951ad7c9b9f40d13514e45c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "39ab18b323fdc9d9fc61050128ffa4a4a44b03d5", "url": "https://github.com/ConsenSys/teku/commit/39ab18b323fdc9d9fc61050128ffa4a4a44b03d5", "message": "Gossip SignedAggregateAndProof instead of just AggregateAndProof.", "committedDate": "2020-04-22T04:25:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzExODcxMg==", "url": "https://github.com/ConsenSys/teku/pull/1636#discussion_r413118712", "bodyText": "If all thesesign<insertDataStructure>methods work on a Bytes object, do we really need multiple methods?", "author": "cemozerr", "createdAt": "2020-04-22T16:12:31Z", "path": "ethereum/core/src/main/java/tech/pegasys/artemis/core/signatures/LocalMessageSignerService.java", "diffHunk": "@@ -41,6 +41,11 @@ public LocalMessageSignerService(final BLSKeyPair keypair) {\n     return sign(signingRoot);\n   }\n \n+  @Override", "originalCommit": "39ab18b323fdc9d9fc61050128ffa4a4a44b03d5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM0ODEzNA==", "url": "https://github.com/ConsenSys/teku/pull/1636#discussion_r413348134", "bodyText": "Yes, the RemoteMessageSignerService sends them to different endpoints.  Ultimately more than just the signing root will likely be provided so that a slashing protection service can be dropped in (eg include the slot for a block).", "author": "ajsutton", "createdAt": "2020-04-22T21:32:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzExODcxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzEyMjY1NQ==", "url": "https://github.com/ConsenSys/teku/pull/1636#discussion_r413122655", "bodyText": "These tests are mostly congregated in DeserilizationTest file, although with all this keeping tests/constants central vs distributed issue, we're all over the place anyway...", "author": "cemozerr", "createdAt": "2020-04-22T16:17:39Z", "path": "ethereum/datastructures/src/test/java/tech/pegasys/artemis/datastructures/operations/SignedAggregateAndProofTest.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.datastructures.operations;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import org.apache.tuweni.bytes.Bytes;\n+import org.junit.jupiter.api.Test;\n+import tech.pegasys.artemis.datastructures.util.DataStructureUtil;\n+import tech.pegasys.artemis.datastructures.util.SimpleOffsetSerializer;\n+\n+class SignedAggregateAndProofTest {\n+  private final DataStructureUtil dataStructureUtil = new DataStructureUtil();\n+\n+  @Test\n+  public void shouldRoundTripViaSsz() {", "originalCommit": "39ab18b323fdc9d9fc61050128ffa4a4a44b03d5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM1ODk5OA==", "url": "https://github.com/ConsenSys/teku/pull/1636#discussion_r413358998", "bodyText": "I'll follow up and move all those tests to the class test cases where they belong. :)\nThe reason being, if you change BeaconBlock you naturally look for BeaconBlockTest and run it before committing to make sure things in the \"local area\" of your change still work.  If the relevant tests are off hiding in an unrelated test class you wind up having to run the full build to find them which lengthens the feedback cycle.", "author": "ajsutton", "createdAt": "2020-04-22T21:53:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzEyMjY1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzEyMzI4NA==", "url": "https://github.com/ConsenSys/teku/pull/1636#discussion_r413123284", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        compute_start_slot_at_epoch(aggregateAndProof.getAggregate().getData().getSlot()),\n          \n          \n            \n                        compute_epoch_at_slot(aggregateAndProof.getAggregate().getData().getSlot()),", "author": "mbaxter", "createdAt": "2020-04-22T16:18:33Z", "path": "ethereum/core/src/main/java/tech/pegasys/artemis/core/signatures/Signer.java", "diffHunk": "@@ -82,6 +84,18 @@ public Signer(final MessageSignerService signerService) {\n     return signerService.signAggregationSlot(signingRoot);\n   }\n \n+  public SafeFuture<BLSSignature> signAggregateAndProof(\n+      final AggregateAndProof aggregateAndProof, final ForkInfo forkInfo) {\n+    final Bytes domain =\n+        get_domain(\n+            Constants.DOMAIN_AGGREGATE_AND_PROOF,\n+            compute_start_slot_at_epoch(aggregateAndProof.getAggregate().getData().getSlot()),", "originalCommit": "39ab18b323fdc9d9fc61050128ffa4a4a44b03d5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzEzMTc0OQ==", "url": "https://github.com/ConsenSys/teku/pull/1636#discussion_r413131749", "bodyText": "good catch!", "author": "cemozerr", "createdAt": "2020-04-22T16:29:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzEyMzI4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM1OTE2Nw==", "url": "https://github.com/ConsenSys/teku/pull/1636#discussion_r413359167", "bodyText": "ooo, autocomplete got me.  Thanks.", "author": "ajsutton", "createdAt": "2020-04-22T21:53:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzEyMzI4NA=="}], "type": "inlineReview"}, {"oid": "5c38ffcbb08ccffbe1d6ac731b4fd62501a1502a", "url": "https://github.com/ConsenSys/teku/commit/5c38ffcbb08ccffbe1d6ac731b4fd62501a1502a", "message": "Merge branch 'master' of github.com:PegaSysEng/teku into signed-aggregate-and-proof", "committedDate": "2020-04-22T21:35:00Z", "type": "commit"}]}