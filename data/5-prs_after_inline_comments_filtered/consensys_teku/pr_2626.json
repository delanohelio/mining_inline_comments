{"pr_number": 2626, "pr_title": "Exit early if ports aren't available", "pr_createdAt": "2020-08-20T01:03:56Z", "pr_url": "https://github.com/ConsenSys/teku/pull/2626", "timeline": [{"oid": "96d6bc1937d8be2c3a26e38afd019f5cb9cb0449", "url": "https://github.com/ConsenSys/teku/commit/96d6bc1937d8be2c3a26e38afd019f5cb9cb0449", "message": "Exit early if ports aren't available\n\n - users should be told that a port is in use, and the process should not continue.\n\n - p2p and http ports are checked. Http failure used to result in a stack trace to command line, but now prints and exits.\n\n fixes #2388\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-08-20T00:54:46Z", "type": "commit"}, {"oid": "4111f3cadd091ea5ae5cc1ed94bd67d346665601", "url": "https://github.com/ConsenSys/teku/commit/4111f3cadd091ea5ae5cc1ed94bd67d346665601", "message": "Merge remote-tracking branch 'upstream/master' into 2328", "committedDate": "2020-08-20T01:04:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ5ODU3Mg==", "url": "https://github.com/ConsenSys/teku/pull/2626#discussion_r473498572", "bodyText": "Can we use try with resources for this?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                DatagramSocket datagramSocket = null;\n          \n          \n            \n                try {\n          \n          \n            \n                  datagramSocket = new DatagramSocket(port);\n          \n          \n            \n                DatagramSocket datagramSocket = null;\n          \n          \n            \n                try (DatagramSocket datagramSocket = new DatagramSocket(port)) {\n          \n          \n            \n                  datagramSocket = new DatagramSocket(port);", "author": "ajsutton", "createdAt": "2020-08-20T01:09:46Z", "path": "util/src/main/java/tech/pegasys/teku/util/config/PortAvailability.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.util.config;\n+\n+import java.io.IOException;\n+import java.net.DatagramSocket;\n+import java.net.ServerSocket;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+public class PortAvailability {\n+  private static final Logger LOG = LogManager.getLogger();\n+\n+  public static boolean isPortAvailableForTcp(final int port) {\n+    if (!isPortValid(port)) {\n+      return false;\n+    }\n+    ServerSocket serverSocket = null;\n+    try {\n+      serverSocket = new ServerSocket(port);\n+      serverSocket.setReuseAddress(true);\n+      return true;\n+    } catch (IOException ex) {\n+      LOG.trace(\"failed to open port for TCP\", ex);\n+    } finally {\n+      if (serverSocket != null) {\n+        try {\n+          serverSocket.close();\n+        } catch (IOException ex) {\n+          LOG.trace(\"failed to close port\", ex);\n+        }\n+      }\n+    }\n+    return false;\n+  }\n+\n+  public static boolean isPortAvailableForUdp(final int port) {\n+    if (!isPortValid(port)) {\n+      return false;\n+    }\n+    DatagramSocket datagramSocket = null;\n+    try {\n+      datagramSocket = new DatagramSocket(port);", "originalCommit": "4111f3cadd091ea5ae5cc1ed94bd67d346665601", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU2MjU5NQ==", "url": "https://github.com/ConsenSys/teku/pull/2626#discussion_r473562595", "bodyText": "fair point, i'll give that a go.", "author": "rolfyone", "createdAt": "2020-08-20T03:14:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ5ODU3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU1NTc2Nw==", "url": "https://github.com/ConsenSys/teku/pull/2626#discussion_r473555767", "bodyText": "We shouldn't be doing this check in the constructor.  Actually opening sockets is something that should be deliberately done, not just a side effect of creation. Probably better as a validate method that's specifically called as part of the startup sequence (or possibly just use the getters and keep the logic out of the config class).", "author": "ajsutton", "createdAt": "2020-08-20T02:48:00Z", "path": "networking/p2p/src/main/java/tech/pegasys/teku/networking/p2p/network/NetworkConfig.java", "diffHunk": "@@ -87,10 +89,24 @@ public NetworkConfig(\n     this.advertisedIp = advertisedIp.filter(ip -> !ip.isBlank());\n     this.targetSubnetSubscriberCount = targetSubnetSubscriberCount;\n     if (this.advertisedIp.map(ip -> !isInetAddress(ip)).orElse(false)) {\n-      throw new IllegalArgumentException(\"Advertised ip is set incorrectly.\");\n+      throw new InvalidConfigurationException(\n+          String.format(\n+              \"Advertised ip (%s) is set incorrectly.\", this.advertisedIp.orElse(\"EMPTY\")));\n     }\n \n-    this.listenPort = listenPort;\n+    if (listenPort == 0) {\n+      this.listenPort = listenPort;\n+    } else {\n+      if (PortAvailability.isPortAvailable(listenPort)) {\n+        this.listenPort = listenPort;\n+      } else {\n+        throw new InvalidConfigurationException(\n+            String.format(\n+                \"P2P Port %d (TCP/UDP) is already in use. \"\n+                    + \"Check for other processes using this port.\",\n+                listenPort));\n+      }\n+    }", "originalCommit": "4111f3cadd091ea5ae5cc1ed94bd67d346665601", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU1OTk0NA==", "url": "https://github.com/ConsenSys/teku/pull/2626#discussion_r473559944", "bodyText": "Also this will check if the port is in use at startup, but we need to also specifically handle when the port was free at startup and became in use before we actually opened the socket.  This would happen if you were tracking a chain prior to the genesis event being known and running either two Teku's or a Teku and a Lighthouse - both would use port 9000 for p2p by default and only start listening when genesis becomes known (after startup).", "author": "ajsutton", "createdAt": "2020-08-20T03:04:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU1NTc2Nw=="}], "type": "inlineReview"}, {"oid": "18e7fa1bff0aef59a05e9740cb89a3acb3a8b747", "url": "https://github.com/ConsenSys/teku/commit/18e7fa1bff0aef59a05e9740cb89a3acb3a8b747", "message": "review feedback\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-08-20T06:06:07Z", "type": "commit"}, {"oid": "e53fb76c9d229a31ab7007ceafd2c6d667dbdbaa", "url": "https://github.com/ConsenSys/teku/commit/e53fb76c9d229a31ab7007ceafd2c6d667dbdbaa", "message": "Merge remote-tracking branch 'upstream/master' into 2328", "committedDate": "2020-08-20T06:20:14Z", "type": "commit"}, {"oid": "166aa7f9ac6d0833547e04fe945bb47518499853", "url": "https://github.com/ConsenSys/teku/commit/166aa7f9ac6d0833547e04fe945bb47518499853", "message": "expand allowed lower bound to include port 0\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-08-20T06:32:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMwMjU4Nw==", "url": "https://github.com/ConsenSys/teku/pull/2626#discussion_r474302587", "bodyText": "Looking at the docs for setReuseAddress it looks like it needs to be set before the socket is bound to guarantee it works.  So we'd have to do something like:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                try (final DatagramSocket datagramSocket = new DatagramSocket(port)) {\n          \n          \n            \n                  datagramSocket.setReuseAddress(true);\n          \n          \n            \n                try (final DatagramSocket datagramSocket = new DatagramSocket()) {\n          \n          \n            \n                  datagramSocket.setReuseAddress(true);\n          \n          \n            \n                  datagramSocket.bind(new InetSocketAddress(port));\n          \n      \n    \n    \n  \n\nand the same above for TCP.", "author": "ajsutton", "createdAt": "2020-08-20T22:16:44Z", "path": "util/src/main/java/tech/pegasys/teku/util/config/PortAvailability.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.util.config;\n+\n+import java.io.IOException;\n+import java.net.DatagramSocket;\n+import java.net.ServerSocket;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+public class PortAvailability {\n+  private static final Logger LOG = LogManager.getLogger();\n+\n+  public static boolean isPortAvailableForTcp(final int port) {\n+    if (!isPortValid(port)) {\n+      return false;\n+    }\n+    try (final ServerSocket serverSocket = new ServerSocket(port)) {\n+      serverSocket.setReuseAddress(true);\n+      return true;\n+    } catch (IOException ex) {\n+      LOG.trace(\"failed to open port for TCP\", ex);\n+    }\n+    return false;\n+  }\n+\n+  public static boolean isPortAvailableForUdp(final int port) {\n+    if (!isPortValid(port)) {\n+      return false;\n+    }\n+    try (final DatagramSocket datagramSocket = new DatagramSocket(port)) {\n+      datagramSocket.setReuseAddress(true);", "originalCommit": "166aa7f9ac6d0833547e04fe945bb47518499853", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ca25c8a084f7a5bd12cd2215c869e4c4042db1ed", "url": "https://github.com/ConsenSys/teku/commit/ca25c8a084f7a5bd12cd2215c869e4c4042db1ed", "message": "fix the use of `setReuseAddress` to be in line with the spec.\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-08-20T22:48:51Z", "type": "commit"}, {"oid": "bf4767840163db299834afadd9cd122b83ba786d", "url": "https://github.com/ConsenSys/teku/commit/bf4767840163db299834afadd9cd122b83ba786d", "message": "Merge remote-tracking branch 'upstream/master' into 2328", "committedDate": "2020-08-20T23:25:40Z", "type": "commit"}, {"oid": "1b0d75741abba7d7376375e83237cb00c74156d7", "url": "https://github.com/ConsenSys/teku/commit/1b0d75741abba7d7376375e83237cb00c74156d7", "message": "Merge remote-tracking branch 'upstream/master' into 2328", "committedDate": "2020-08-20T23:27:20Z", "type": "commit"}]}