{"pr_number": 3409, "pr_title": "Retry ValidatorStatusLogger initial status check until beacon node is ready", "pr_createdAt": "2020-12-14T17:36:34Z", "pr_url": "https://github.com/ConsenSys/teku/pull/3409", "timeline": [{"oid": "4f73c926d82af18f269aa90049731db5f1bdf0a2", "url": "https://github.com/ConsenSys/teku/commit/4f73c926d82af18f269aa90049731db5f1bdf0a2", "message": "Run initial status check until beacon node is ready", "committedDate": "2020-12-14T17:35:15Z", "type": "commit"}, {"oid": "47feab5ab2374c12d330a210038aa1cca0feb239", "url": "https://github.com/ConsenSys/teku/commit/47feab5ab2374c12d330a210038aa1cca0feb239", "message": "Fix future return value warning", "committedDate": "2020-12-14T17:48:37Z", "type": "commit"}, {"oid": "d90ebb5d1dd3f932e7df9bc82b0d4ad259c65d68", "url": "https://github.com/ConsenSys/teku/commit/d90ebb5d1dd3f932e7df9bc82b0d4ad259c65d68", "message": "Report exceptions at the end of initial validator status check", "committedDate": "2020-12-14T17:55:29Z", "type": "commit"}, {"oid": "f80706c7989e5893df8ba337cf35f338d3aa6f0b", "url": "https://github.com/ConsenSys/teku/commit/f80706c7989e5893df8ba337cf35f338d3aa6f0b", "message": "Add test", "committedDate": "2020-12-14T18:32:22Z", "type": "commit"}, {"oid": "3a55547d5598a70afc07c728fbf2af5ecb2f6bd7", "url": "https://github.com/ConsenSys/teku/commit/3a55547d5598a70afc07c728fbf2af5ecb2f6bd7", "message": "Supress unchecked warnings", "committedDate": "2020-12-14T18:32:54Z", "type": "commit"}, {"oid": "d6d0a259d4558be46470794efe886cfcf333d18a", "url": "https://github.com/ConsenSys/teku/commit/d6d0a259d4558be46470794efe886cfcf333d18a", "message": "Add report exceptions to test", "committedDate": "2020-12-14T18:49:26Z", "type": "commit"}, {"oid": "95d9b42de5c83eacb8012ea96c36e3c08fe71ac3", "url": "https://github.com/ConsenSys/teku/commit/95d9b42de5c83eacb8012ea96c36e3c08fe71ac3", "message": "Merge branch 'master' into fixValidatorStatusLoggerConcurrencyIssue", "committedDate": "2020-12-14T19:55:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjc3NDk3MQ==", "url": "https://github.com/ConsenSys/teku/pull/3409#discussion_r542774971", "bodyText": "I recently added a retry utility (AsyncRunner.runWithRetry) that might be useful here.", "author": "mbaxter", "createdAt": "2020-12-14T20:55:47Z", "path": "validator/client/src/main/java/tech/pegasys/teku/validator/client/DefaultValidatorStatusLogger.java", "diffHunk": "@@ -19,48 +19,66 @@\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n+import java.util.Objects;\n import java.util.Optional;\n+import java.util.concurrent.TimeUnit;\n import java.util.concurrent.atomic.AtomicInteger;\n import java.util.concurrent.atomic.AtomicReference;\n import tech.pegasys.teku.api.response.v1.beacon.ValidatorStatus;\n import tech.pegasys.teku.bls.BLSPublicKey;\n+import tech.pegasys.teku.infrastructure.async.AsyncRunner;\n+import tech.pegasys.teku.infrastructure.async.SafeFuture;\n import tech.pegasys.teku.validator.api.ValidatorApiChannel;\n \n public class DefaultValidatorStatusLogger implements ValidatorStatusLogger {\n \n   private static final int VALIDATOR_KEYS_PRINT_LIMIT = 20;\n+  private static final long INITIAL_STATUS_CHECK_RETRY_PERIOD = 5; // seconds\n \n   final List<BLSPublicKey> validatorPublicKeys;\n   final ValidatorApiChannel validatorApiChannel;\n   final AtomicReference<Map<BLSPublicKey, ValidatorStatus>> latestValidatorStatuses =\n       new AtomicReference<>();\n+  final AsyncRunner asyncRunner;\n \n   public DefaultValidatorStatusLogger(\n-      List<BLSPublicKey> validatorPublicKeys, ValidatorApiChannel validatorApiChannel) {\n+      List<BLSPublicKey> validatorPublicKeys,\n+      ValidatorApiChannel validatorApiChannel,\n+      AsyncRunner asyncRunner) {\n     checkArgument(!validatorPublicKeys.isEmpty());\n     this.validatorPublicKeys = validatorPublicKeys;\n     this.validatorApiChannel = validatorApiChannel;\n+    this.asyncRunner = asyncRunner;\n   }\n \n   @Override\n-  public void printInitialValidatorStatuses() {\n-    validatorApiChannel\n+  public SafeFuture<Void> printInitialValidatorStatuses() {\n+    return validatorApiChannel\n         .getValidatorStatuses(validatorPublicKeys)\n-        .thenAccept(\n+        .thenCompose(", "originalCommit": "95d9b42de5c83eacb8012ea96c36e3c08fe71ac3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "914dfb398c9da8316579c412131116edcabe4660", "url": "https://github.com/ConsenSys/teku/commit/914dfb398c9da8316579c412131116edcabe4660", "message": "Merge branch 'master' into fixValidatorStatusLoggerConcurrencyIssue", "committedDate": "2020-12-14T21:26:05Z", "type": "commit"}, {"oid": "dcc1f9d9064ca1d4a56b4870a6a74230b14c9976", "url": "https://github.com/ConsenSys/teku/commit/dcc1f9d9064ca1d4a56b4870a6a74230b14c9976", "message": "Only keep retrying if the whole request returns empty", "committedDate": "2020-12-14T22:39:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjg5OTg1NA==", "url": "https://github.com/ConsenSys/teku/pull/3409#discussion_r542899854", "bodyText": "I'm very unclear how we got a ChainDataProvider in here - that should be part of the REST API implementation and the dependency should go the other way around where the providers call into ValidatorApiChannel.  We shouldn't be using the REST API in the internals of Teku like this (ideally that ValidatorResponse class shouldn't be accessible at all from here).  Actually same with ValidatorStatus, it shouldn't be used from here either.\nProbably need to rework this in a follow up PR and get the dependency chain right.", "author": "ajsutton", "createdAt": "2020-12-14T22:54:20Z", "path": "validator/coordinator/src/main/java/tech/pegasys/teku/validator/coordinator/ValidatorApiHandler.java", "diffHunk": "@@ -216,20 +216,22 @@ public ValidatorApiHandler(\n   @Override\n   public SafeFuture<Optional<Map<BLSPublicKey, ValidatorStatus>>> getValidatorStatuses(\n       List<BLSPublicKey> validatorIdentifiers) {\n-    return chainDataProvider\n-        .getStateValidators(\n-            \"head\",\n-            validatorIdentifiers.stream().map(BLSPublicKey::toString).collect(toList()),\n-            new HashSet<>())\n-        .thenApply(\n-            (maybeList) ->\n-                maybeList.map(\n-                    list ->\n-                        list.stream()\n-                            .collect(\n-                                toMap(\n-                                    ValidatorResponse::getPublicKey,\n-                                    ValidatorResponse::getStatus))));\n+    return isSyncActive()\n+        ? SafeFuture.completedFuture(Optional.empty())\n+        : chainDataProvider\n+            .getStateValidators(\n+                \"head\",\n+                validatorIdentifiers.stream().map(BLSPublicKey::toString).collect(toList()),\n+                new HashSet<>())", "originalCommit": "dcc1f9d9064ca1d4a56b4870a6a74230b14c9976", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjkyODczNA==", "url": "https://github.com/ConsenSys/teku/pull/3409#discussion_r542928734", "bodyText": "I believe I had inserted the ChainDataProvider to ValidatorApiHandler (we create a new one using combined chain data client and recent chain data client in BeaconChainController). The reason was that using ChainDataProvider methods made it easy to draw parallels when implementing the ValidatorApiChannel interface methods for the RemoteValidatorApiHandler and ValidatorApiHandler.", "author": "cemozerr", "createdAt": "2020-12-14T23:45:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjg5OTg1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjkyODkzNA==", "url": "https://github.com/ConsenSys/teku/pull/3409#discussion_r542928934", "bodyText": "I understand your point though and can revert that in another PR.", "author": "cemozerr", "createdAt": "2020-12-14T23:45:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjg5OTg1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjkwMjIyMQ==", "url": "https://github.com/ConsenSys/teku/pull/3409#discussion_r542902221", "bodyText": "nit:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  boolean requestSuccesful = validatorObjects.isPresent();\n          \n          \n            \n                  if (requestSuccesful) {\n          \n          \n            \n                    returnedObjects.putAll(validatorObjects.get());\n          \n          \n            \n                  } else {\n          \n          \n            \n                    return Optional.empty();\n          \n          \n            \n                  }\n          \n          \n            \n                  if (validatorObjects.isEmpty()) {\n          \n          \n            \n                    return Optional.empty();\n          \n          \n            \n                  }\n          \n          \n            \n                  returnedObjects.putAll(validatorObjects.get());", "author": "ajsutton", "createdAt": "2020-12-14T22:56:48Z", "path": "validator/remote/src/main/java/tech/pegasys/teku/validator/remote/RemoteValidatorApiHandler.java", "diffHunk": "@@ -100,25 +100,34 @@ public RemoteValidatorApiHandler(\n     if (publicKeys.isEmpty()) {\n       return SafeFuture.completedFuture(emptyMap());\n     }\n-    return sendRequest(() -> makeBatchedValidatorRequest(publicKeys, ValidatorResponse::getIndex));\n+    return sendRequest(\n+        () ->\n+            makeBatchedValidatorRequest(publicKeys, ValidatorResponse::getIndex)\n+                .orElse(emptyMap()));\n   }\n \n   @Override\n   public SafeFuture<Optional<Map<BLSPublicKey, ValidatorStatus>>> getValidatorStatuses(\n       List<BLSPublicKey> publicKeys) {\n-    return sendRequest(\n-        () -> Optional.of(makeBatchedValidatorRequest(publicKeys, ValidatorResponse::getStatus)));\n+    return sendRequest(() -> makeBatchedValidatorRequest(publicKeys, ValidatorResponse::getStatus));\n   }\n \n-  private <T> Map<BLSPublicKey, T> makeBatchedValidatorRequest(\n+  private <T> Optional<Map<BLSPublicKey, T>> makeBatchedValidatorRequest(\n       List<BLSPublicKey> publicKeys, Function<ValidatorResponse, T> valueExtractor) {\n     final Map<BLSPublicKey, T> returnedObjects = new HashMap<>();\n     for (int i = 0; i < publicKeys.size(); i += MAX_PUBLIC_KEY_BATCH_SIZE) {\n       final List<BLSPublicKey> batch =\n           publicKeys.subList(i, Math.min(publicKeys.size(), i + MAX_PUBLIC_KEY_BATCH_SIZE));\n-      requestValidatorObject(batch, valueExtractor).ifPresent(returnedObjects::putAll);\n+      Optional<Map<BLSPublicKey, T>> validatorObjects =\n+          requestValidatorObject(batch, valueExtractor);\n+      boolean requestSuccesful = validatorObjects.isPresent();\n+      if (requestSuccesful) {\n+        returnedObjects.putAll(validatorObjects.get());\n+      } else {\n+        return Optional.empty();\n+      }", "originalCommit": "dcc1f9d9064ca1d4a56b4870a6a74230b14c9976", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjkyNzEzMQ==", "url": "https://github.com/ConsenSys/teku/pull/3409#discussion_r542927131", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-12-14T23:41:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjkwMjIyMQ=="}], "type": "inlineReview"}, {"oid": "c7f4e85ac951ff3efdc2412c391320e9cf8ce5b0", "url": "https://github.com/ConsenSys/teku/commit/c7f4e85ac951ff3efdc2412c391320e9cf8ce5b0", "message": "Merge branch 'master' into fixValidatorStatusLoggerConcurrencyIssue", "committedDate": "2020-12-15T00:06:55Z", "type": "commit"}, {"oid": "43971d021cf8c961fb68cef0ca64a27798edfd69", "url": "https://github.com/ConsenSys/teku/commit/43971d021cf8c961fb68cef0ca64a27798edfd69", "message": "Refactor", "committedDate": "2020-12-15T00:07:38Z", "type": "commit"}, {"oid": "e0414c6578aa709f2cc3575a35ed32c4e20a52ee", "url": "https://github.com/ConsenSys/teku/commit/e0414c6578aa709f2cc3575a35ed32c4e20a52ee", "message": "Do not print validator status changes until logger startup is complete", "committedDate": "2020-12-15T17:50:22Z", "type": "commit"}, {"oid": "1047f431edd6d778ebe78dec84722f58a123188f", "url": "https://github.com/ConsenSys/teku/commit/1047f431edd6d778ebe78dec84722f58a123188f", "message": "Retry validator status check when beacon source event stream is closed", "committedDate": "2020-12-15T18:30:38Z", "type": "commit"}, {"oid": "9b8a98e545eb29efb4f29c5a65220281a28d2d06", "url": "https://github.com/ConsenSys/teku/commit/9b8a98e545eb29efb4f29c5a65220281a28d2d06", "message": "Merge branch 'master' into fixValidatorStatusLoggerConcurrencyIssue", "committedDate": "2020-12-15T19:19:38Z", "type": "commit"}]}