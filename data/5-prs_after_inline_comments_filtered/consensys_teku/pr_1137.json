{"pr_number": 1137, "pr_title": "Add metrics to EventChannel", "pr_createdAt": "2020-02-05T19:28:07Z", "pr_url": "https://github.com/ConsenSys/teku/pull/1137", "timeline": [{"oid": "4b764b0ab1553e52197e0a2b0cfc7dbb92c03919", "url": "https://github.com/ConsenSys/teku/commit/4b764b0ab1553e52197e0a2b0cfc7dbb92c03919", "message": "Add metrics for events published to and consumed from event channels.", "committedDate": "2020-02-04T02:22:23Z", "type": "commit"}, {"oid": "6b28e81a0408d1e7d5d6756a687636156ef838f2", "url": "https://github.com/ConsenSys/teku/commit/6b28e81a0408d1e7d5d6756a687636156ef838f2", "message": "Gradle dependencies.", "committedDate": "2020-02-05T19:16:51Z", "type": "commit"}, {"oid": "1f8daa6dc79a2401109e79f91efe551b4063f485", "url": "https://github.com/ConsenSys/teku/commit/1f8daa6dc79a2401109e79f91efe551b4063f485", "message": "Increment consumed counter even when a failure occurs.  Add failure counter.", "committedDate": "2020-02-05T19:27:48Z", "type": "commit"}, {"oid": "0ad9230e1b97b6b1e7e6b354d73f4fb4144cd635", "url": "https://github.com/ConsenSys/teku/commit/0ad9230e1b97b6b1e7e6b354d73f4fb4144cd635", "message": "Merge branch 'master' of github.com:PegaSysEng/artemis into event-metrics", "committedDate": "2020-02-05T19:29:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk3MDc3MA==", "url": "https://github.com/ConsenSys/teku/pull/1137#discussion_r375970770", "bodyText": "Should we include method.getName()?", "author": "mbaxter", "createdAt": "2020-02-06T17:17:49Z", "path": "events/src/main/java/tech/pegasys/artemis/events/DirectEventDeliverer.java", "diffHunk": "@@ -13,24 +13,58 @@\n \n package tech.pegasys.artemis.events;\n \n+import static tech.pegasys.artemis.metrics.ArtemisMetricCategory.EVENTBUS;\n+\n import java.lang.reflect.InvocationTargetException;\n import java.lang.reflect.Method;\n+import org.hyperledger.besu.plugin.services.MetricsSystem;\n+import org.hyperledger.besu.plugin.services.metrics.Counter;\n+import org.hyperledger.besu.plugin.services.metrics.LabelledMetric;\n \n class DirectEventDeliverer<T> extends EventDeliverer<T> {\n   private final ChannelExceptionHandler exceptionHandler;\n+  private final LabelledMetric<Counter> consumedEventCounter;\n+  private final LabelledMetric<Counter> failedEventCounter;\n \n-  DirectEventDeliverer(final ChannelExceptionHandler exceptionHandler) {\n+  DirectEventDeliverer(\n+      final ChannelExceptionHandler exceptionHandler, final MetricsSystem metricsSystem) {\n+    super(metricsSystem);\n     this.exceptionHandler = exceptionHandler;\n+    consumedEventCounter =\n+        metricsSystem.createLabelledCounter(\n+            EVENTBUS,\n+            \"event_consumed_count\",\n+            \"Total number of events consumed\",\n+            \"channel\",\n+            \"subscriber\");\n+    failedEventCounter =\n+        metricsSystem.createLabelledCounter(\n+            EVENTBUS,\n+            \"event_failed_count\",\n+            \"Number of events which failed to be processed\",\n+            \"channel\",\n+            \"subscriber\");\n   }\n \n   @Override\n   protected void deliverTo(final T subscriber, final Method method, final Object[] args) {\n     try {\n       method.invoke(subscriber, args);\n     } catch (IllegalAccessException e) {\n+      incrementCounter(failedEventCounter, subscriber, method);\n       exceptionHandler.handleException(e, subscriber, method, args);\n     } catch (InvocationTargetException e) {\n+      incrementCounter(failedEventCounter, subscriber, method);\n       exceptionHandler.handleException(e.getTargetException(), subscriber, method, args);\n+    } finally {\n+      incrementCounter(consumedEventCounter, subscriber, method);\n     }\n   }\n+\n+  private void incrementCounter(\n+      final LabelledMetric<Counter> counter, final T subscriber, final Method method) {\n+    counter\n+        .labels(method.getDeclaringClass().getSimpleName(), subscriber.getClass().getSimpleName())", "originalCommit": "0ad9230e1b97b6b1e7e6b354d73f4fb4144cd635", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjEzODYyNg==", "url": "https://github.com/ConsenSys/teku/pull/1137#discussion_r376138626", "bodyText": "Good question... I'm tempted to leave it out for now - every combination of label values introduces a whole new timeline to store so it would increase the storage required.  I suspect that most channels will only have a small number of highly related methods on them so we won't need that level of detail.  Previous experience with these kinds of events and monitoring lines up with that, but we won't know for sure until we use this to monitor actual nodes in production.", "author": "ajsutton", "createdAt": "2020-02-06T23:24:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk3MDc3MA=="}], "type": "inlineReview"}, {"oid": "3a326c9c5f8f7ad46ea1bcfb39dd9ff2cc5cb006", "url": "https://github.com/ConsenSys/teku/commit/3a326c9c5f8f7ad46ea1bcfb39dd9ff2cc5cb006", "message": "Merge branch 'master' into event-metrics", "committedDate": "2020-02-06T23:22:09Z", "type": "commit"}]}