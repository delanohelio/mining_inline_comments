{"pr_number": 593, "pr_title": "issue #280", "pr_createdAt": "2020-01-15T16:44:51Z", "pr_url": "https://github.com/IBM/FHIR/pull/593", "timeline": [{"oid": "f1f6db76bc7fb194e8a5ac3e56eb7ea49d522411", "url": "https://github.com/IBM/FHIR/commit/f1f6db76bc7fb194e8a5ac3e56eb7ea49d522411", "message": "issue 280\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-01-15T16:43:32Z", "type": "commit"}, {"oid": "1238d9343a102b28b66ed6832a74dd9831264059", "url": "https://github.com/IBM/FHIR/commit/1238d9343a102b28b66ed6832a74dd9831264059", "message": "issue 280\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-01-15T16:53:38Z", "type": "commit"}, {"oid": "2ca3795794dfa487a67aca29e0fa755d7b61396e", "url": "https://github.com/IBM/FHIR/commit/2ca3795794dfa487a67aca29e0fa755d7b61396e", "message": "issue 280\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-01-15T16:55:49Z", "type": "commit"}, {"oid": "1831c67fea4c0ad05c225f7760b0c4edbac85062", "url": "https://github.com/IBM/FHIR/commit/1831c67fea4c0ad05c225f7760b0c4edbac85062", "message": "issue 280\n\n- SQL for date-value changes\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-01-15T21:21:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzkyMDkwMA==", "url": "https://github.com/IBM/FHIR/pull/593#discussion_r367920900", "bodyText": "Its interesting to see that we DID have a case where we'd populate the Value and not the Start or End.  Good catch.", "author": "lmsurpre", "createdAt": "2020-01-17T12:53:16Z", "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/impl/FHIRPersistenceJDBCImpl.java", "diffHunk": "@@ -1236,7 +1236,7 @@ private ExtractedParameterValue processPrimitiveValue(FHIRPathSystemValue system\n             DateParmVal p = new DateParmVal();\n             TemporalAccessor v = systemValue.asTemporalValue().temporal();\n             java.time.Instant inst = DateTimeHandler.generateValue(v);\n-            p.setValueDate(DateTimeHandler.generateTimestamp(inst));", "originalCommit": "1831c67fea4c0ad05c225f7760b0c4edbac85062", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzkyMTM1Mw==", "url": "https://github.com/IBM/FHIR/pull/593#discussion_r367921353", "bodyText": "But actually, I think we should set both the Start and End values in this case.\nAnd since FHIRPath DateTimes can be partial (just like FHIR DateTimes), we should probably do some similar logic to compute the proper end time.\nAgree?", "author": "lmsurpre", "createdAt": "2020-01-17T12:54:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzkyMDkwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI4NTYwOA==", "url": "https://github.com/IBM/FHIR/pull/593#discussion_r370285608", "bodyText": "Yes, updated to set the same end time - as this is actually an Instant (at this point in the code)", "author": "prb112", "createdAt": "2020-01-23T18:33:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzkyMDkwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODAyNTk0OA==", "url": "https://github.com/IBM/FHIR/pull/593#discussion_r368025948", "bodyText": "Is this needed?  How would we get here if the SearchParamType isn't date?", "author": "lmsurpre", "createdAt": "2020-01-17T16:32:23Z", "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/util/JDBCQueryBuilder.java", "diffHunk": "@@ -925,13 +908,10 @@ private SqlQueryData processDateParm(Class<?> resourceType, QueryParameter query\n         final String METHODNAME = \"processDateParm\";\n         log.entering(CLASSNAME, METHODNAME, queryParm.toString());\n \n-        boolean isDateSearch = isDateSearch(resourceType, queryParm);\n-        boolean isDateRangeSearch = isDateRangeSearch(resourceType, queryParm);\n-\n-        if (log.isLoggable(Level.FINE)) {\n-            log.fine(\"isDateSearch=\" + isDateSearch + \"  isDateRangeSearch=\" + isDateRangeSearch);\n-        }\n-        if (!isDateSearch && !isDateRangeSearch) {\n+        // Check to see if this is of a type is date. \n+        String code = queryParm.getCode();\n+        SearchParamType type = SearchUtil.getSearchParameter(resourceType, code).getType();\n+        if (!SearchParamType.DATE.getValue().equals(type.getValue())) {", "originalCommit": "1831c67fea4c0ad05c225f7760b0c4edbac85062", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI5MDQ4OA==", "url": "https://github.com/IBM/FHIR/pull/593#discussion_r370290488", "bodyText": "Good point, I'm not sure where this originated. It's definitely not needed.", "author": "prb112", "createdAt": "2020-01-23T18:44:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODAyNTk0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODAyNjk4Ng==", "url": "https://github.com/IBM/FHIR/pull/593#discussion_r368026986", "bodyText": "this looks like its more related to that issue we were getting when _lastUpdate and _id weren't getting handled right.  i guess there still some case where we're failing to use those properly?  maybe we need to get this fix into 4.0.1?", "author": "lmsurpre", "createdAt": "2020-01-17T16:34:22Z", "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/util/SortedQuerySegmentAggregator.java", "diffHunk": "@@ -129,6 +122,15 @@ public SqlQueryData buildQuery() throws Exception {\n             // Build FROM clause\n             buildFromClause(sqlSortQuery, resourceType.getSimpleName());\n \n+            // Gather up all bind variables from the query segments\n+            // An important step here is to add _id and _lastUpdated\n+            List<Object> allBindVariables = new ArrayList<>();\n+            allBindVariables.addAll(idsObjects);\n+            allBindVariables.addAll(lastUpdatedObjects);\n+            for (SqlQueryData querySegment : this.querySegments) {\n+                allBindVariables.addAll(querySegment.getBindVariables());\n+            }", "originalCommit": "1831c67fea4c0ad05c225f7760b0c4edbac85062", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI4OTU3OA==", "url": "https://github.com/IBM/FHIR/pull/593#discussion_r370289578", "bodyText": "already in 4.0.1 :)", "author": "prb112", "createdAt": "2020-01-23T18:42:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODAyNjk4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODAyNzkyOA==", "url": "https://github.com/IBM/FHIR/pull/593#discussion_r368027928", "bodyText": "Is it ok to use DATE_START and no DATE_END?  I'm not sure if I really understand how this getValueAttributeNames is used...", "author": "lmsurpre", "createdAt": "2020-01-17T16:36:14Z", "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/util/SortedQuerySegmentAggregator.java", "diffHunk": "@@ -254,7 +256,7 @@ private String buildAggregateExpression(SortParameter sortParm, int sortParmInde\n             attributeNames.add(STR_VALUE);\n             break;\n         case DATE:\n-            attributeNames.add(DATE_VALUE);\n+            attributeNames.add(DATE_START);", "originalCommit": "1831c67fea4c0ad05c225f7760b0c4edbac85062", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI4MTM2Nw==", "url": "https://github.com/IBM/FHIR/pull/593#discussion_r370281367", "bodyText": "Yes, in this case it's for a consistent SORT order.  If you add DATE_END as well, it'll lead to very irregular sorts.", "author": "prb112", "createdAt": "2020-01-23T18:24:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODAyNzkyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODAzMjMwNQ==", "url": "https://github.com/IBM/FHIR/pull/593#discussion_r368032305", "bodyText": "Are you sure we need to treat integer search as \"special\"?\nIt seems like a lot of code just to fail something.  I don't think supporting \"eb\" and \"sa\" prefixes for integers would cause anyone any issue.", "author": "lmsurpre", "createdAt": "2020-01-17T16:45:21Z", "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/util/type/NumberParmBehaviorUtil.java", "diffHunk": "@@ -269,14 +284,7 @@ public static int calculateSignificantFigures(BigDecimal original) {\n     public static boolean checkIntegerSearchWithSaEb(Prefix prefix, Class<?> resourceType, QueryParameter queryParm,\n             BigDecimal originalNumber)\n             throws FHIRPersistenceException {\n-        boolean isIntegerSearch = false;\n-        try {\n-            isIntegerSearch = ValueTypesFactory.getValueTypesProcessor().isIntegerSearch(resourceType, queryParm);\n-        } catch (FHIRSearchException e) {\n-            log.log(Level.INFO, \"Caught exception while checking the value types for parameter '\"\n-                    + queryParm.getCode() + \"'; continuing...\", e);\n-            // do nothing\n-        }\n+        boolean isIntegerSearch = isIntegerSearch(resourceType, queryParm);", "originalCommit": "1831c67fea4c0ad05c225f7760b0c4edbac85062", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODAzMzIyNw==", "url": "https://github.com/IBM/FHIR/pull/593#discussion_r368033227", "bodyText": "The spec says sa (starts-after) and eb (ends-before) are not used with integer values but are used for decimals. which is why we had that check in the first place.  But to me, thats pretty weak.  I recommend removing.", "author": "lmsurpre", "createdAt": "2020-01-17T16:47:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODAzMjMwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODAzMzg4NQ==", "url": "https://github.com/IBM/FHIR/pull/593#discussion_r368033885", "bodyText": "FYI - it's a pretty drastic change.  would love to sync back to explain.  I'll save for post 4.0.1", "author": "prb112", "createdAt": "2020-01-17T16:48:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODAzMjMwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMwNzUwMQ==", "url": "https://github.com/IBM/FHIR/pull/593#discussion_r370307501", "bodyText": "removed, and changed per discussion with Lee", "author": "prb112", "createdAt": "2020-01-23T19:20:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODAzMjMwNQ=="}], "type": "inlineReview"}, {"oid": "fa0b72eea8bd5671db6c80fbaeedea54a37ddb39", "url": "https://github.com/IBM/FHIR/commit/fa0b72eea8bd5671db6c80fbaeedea54a37ddb39", "message": "issue 280\n\n- Updates per Code Review\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-01-23T18:46:18Z", "type": "commit"}, {"oid": "4b4f4db67408207064cbc6f4cf210eef01d969b0", "url": "https://github.com/IBM/FHIR/commit/4b4f4db67408207064cbc6f4cf210eef01d969b0", "message": "Merge branch 'master' into issue-280", "committedDate": "2020-01-23T18:46:45Z", "type": "commit"}, {"oid": "fcfaa1f4aa457b28dd7b8547eefdd641a274f2b7", "url": "https://github.com/IBM/FHIR/commit/fcfaa1f4aa457b28dd7b8547eefdd641a274f2b7", "message": "issue #280\n\n- Edit Conformance.md per discussion\n- Update NumberParmBehavior for consistent experience with number\nsearches\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-01-23T19:18:58Z", "type": "commit"}, {"oid": "a4a3dd5d9742ad805bf760cf835ee315f298ec3f", "url": "https://github.com/IBM/FHIR/commit/a4a3dd5d9742ad805bf760cf835ee315f298ec3f", "message": "issue #280\n\n- Update JDBC tests\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-01-23T19:52:38Z", "type": "commit"}, {"oid": "f6cd72b87511fea69c98e0a0f525896828622eb4", "url": "https://github.com/IBM/FHIR/commit/f6cd72b87511fea69c98e0a0f525896828622eb4", "message": "Apply suggestions from code review\r\n\r\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-01-27T14:53:16Z", "type": "commit"}, {"oid": "65320548a248aa5056be7884a6be5847a8102a67", "url": "https://github.com/IBM/FHIR/commit/65320548a248aa5056be7884a6be5847a8102a67", "message": "revert schema changes\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-01-30T18:45:34Z", "type": "commit"}]}