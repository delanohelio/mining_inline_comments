{"pr_number": 2763, "pr_title": "[Alter]Add wait time while doing alter options", "pr_createdAt": "2020-01-14T12:14:07Z", "pr_url": "https://github.com/apache/incubator-doris/pull/2763", "timeline": [{"oid": "f7f4fd603f6b584e64715e15682ed2c067bd7ca9", "url": "https://github.com/apache/incubator-doris/commit/f7f4fd603f6b584e64715e15682ed2c067bd7ca9", "message": "add wait time while doing alter", "committedDate": "2020-01-14T12:10:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjM3Mzk5OA==", "url": "https://github.com/apache/incubator-doris/pull/2763#discussion_r366373998", "bodyText": "First, olapTable.getState() != OlapTableState.NORMAL does not mean the table is unhealthy.\nSecond, it's not good to sleep here, it will block the client connection for a very long time.\nThird, I don't think its good idea to add priority repair here.  We should solve more why the table is often unhealthy, rather than increase the complexity here.", "author": "morningman", "createdAt": "2020-01-14T14:38:14Z", "path": "fe/src/main/java/org/apache/doris/alter/Alter.java", "diffHunk": "@@ -273,6 +276,18 @@ public void processAlterTable(AlterTableStmt stmt) throws UserException {\n                 throw new DdlException(\"table with empty parition cannot do schema change. [\" + tableName + \"]\");\n             }\n \n+            // if table state is unhealthy, change table repair priority, and wait until repair finish or exceed timeout\n+            if (olapTable.getState() != OlapTableState.NORMAL) {", "originalCommit": "f7f4fd603f6b584e64715e15682ed2c067bd7ca9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njc4MTg3Mw==", "url": "https://github.com/apache/incubator-doris/pull/2763#discussion_r366781873", "bodyText": "@morningman Yes, you're right, I change the waiting logic to runPendingJob.", "author": "WingsGo", "createdAt": "2020-01-15T09:51:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjM3Mzk5OA=="}], "type": "inlineReview"}, {"oid": "d3d2046eb7616219afb3092100e609110027a053", "url": "https://github.com/apache/incubator-doris/commit/d3d2046eb7616219afb3092100e609110027a053", "message": "fix last review", "committedDate": "2020-01-15T09:34:16Z", "type": "commit"}, {"oid": "d27085ea9039741f12106e3121bcfaaa28868971", "url": "https://github.com/apache/incubator-doris/commit/d27085ea9039741f12106e3121bcfaaa28868971", "message": "fix unused import", "committedDate": "2020-01-15T10:56:19Z", "type": "commit"}, {"oid": "f826c97a3594f505bdeb429a7005ec527486cd55", "url": "https://github.com/apache/incubator-doris/commit/f826c97a3594f505bdeb429a7005ec527486cd55", "message": "add UT", "committedDate": "2020-01-16T03:41:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQzNjQwMw==", "url": "https://github.com/apache/incubator-doris/pull/2763#discussion_r367436403", "bodyText": "You can add this error msg to the errMsg of the AlterJob, so that user can see what happen.\nAnd this log should contains job id for debugging. And in errMsg, it can be shorten, eg, \"table is unstable\".", "author": "morningman", "createdAt": "2020-01-16T14:09:14Z", "path": "fe/src/main/java/org/apache/doris/alter/SchemaChangeJobV2.java", "diffHunk": "@@ -184,13 +184,22 @@ protected void runPendingJob() throws AlterCancelException {\n                 totalReplicaNum += tablet.getReplicas().size();\n             }\n         }\n-        MarkedCountDownLatch<Long, Long> countDownLatch = new MarkedCountDownLatch<Long, Long>(totalReplicaNum);\n+        MarkedCountDownLatch<Long, Long> countDownLatch = new MarkedCountDownLatch<>(totalReplicaNum);\n         db.readLock();\n         try {\n             OlapTable tbl = (OlapTable) db.getTable(tableId);\n             if (tbl == null) {\n                 throw new AlterCancelException(\"Table \" + tableId + \" does not exist\");\n-            } \n+            }\n+\n+            boolean isStable = tbl.isStable(Catalog.getCurrentSystemInfo(),\n+                    Catalog.getCurrentCatalog().getTabletScheduler(),\n+                    db.getClusterName());\n+            if (!isStable) {\n+                LOG.warn(\"doing schema change job while table is not stable, wait until tablet to be repaired.\");", "originalCommit": "f826c97a3594f505bdeb429a7005ec527486cd55", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQzNzc4Mw==", "url": "https://github.com/apache/incubator-doris/pull/2763#discussion_r367437783", "bodyText": "Why not just pass the entire repairTabletInfo? instead of each field of repairTabletInfo?\nAnd addPrios() can be a private method.", "author": "morningman", "createdAt": "2020-01-16T14:11:50Z", "path": "fe/src/main/java/org/apache/doris/clone/TabletChecker.java", "diffHunk": "@@ -356,71 +368,72 @@ private void removePriosIfNecessary() {\n      * when being scheduled.\n      */\n     public void repairTable(AdminRepairTableStmt stmt) throws DdlException {\n-        Catalog catalog = Catalog.getCurrentCatalog();\n-        Database db = catalog.getDb(stmt.getDbName());\n-        if (db == null) {\n-            throw new DdlException(\"Database \" + stmt.getDbName() + \" does not exist\");\n-        }\n+        RepairTabletInfo repairTabletInfo = getRepairTabletInfo(stmt.getDbName(), stmt.getTblName(), stmt.getPartitions());\n+        addPrios(repairTabletInfo.dbId, repairTabletInfo.tblId, repairTabletInfo.partIds, stmt.getTimeoutS() * 1000);", "originalCommit": "f826c97a3594f505bdeb429a7005ec527486cd55", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQzNzkwOA==", "url": "https://github.com/apache/incubator-doris/pull/2763#discussion_r367437908", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    removePrios(repairTabletInfo.dbId, repairTabletInfo.tblId, repairTabletInfo.partIds);\n          \n          \n            \n                    removePrios(repairTabletInfo);", "author": "morningman", "createdAt": "2020-01-16T14:12:06Z", "path": "fe/src/main/java/org/apache/doris/clone/TabletChecker.java", "diffHunk": "@@ -356,71 +368,72 @@ private void removePriosIfNecessary() {\n      * when being scheduled.\n      */\n     public void repairTable(AdminRepairTableStmt stmt) throws DdlException {\n-        Catalog catalog = Catalog.getCurrentCatalog();\n-        Database db = catalog.getDb(stmt.getDbName());\n-        if (db == null) {\n-            throw new DdlException(\"Database \" + stmt.getDbName() + \" does not exist\");\n-        }\n+        RepairTabletInfo repairTabletInfo = getRepairTabletInfo(stmt.getDbName(), stmt.getTblName(), stmt.getPartitions());\n+        addPrios(repairTabletInfo.dbId, repairTabletInfo.tblId, repairTabletInfo.partIds, stmt.getTimeoutS() * 1000);\n+        LOG.info(\"repair database: {}, table: {}, partition: {}\", repairTabletInfo.dbId, repairTabletInfo.tblId, repairTabletInfo.partIds);\n+    }\n \n-        long dbId = db.getId();\n-        long tblId = -1;\n-        List<Long> partIds = Lists.newArrayList();\n-        db.readLock();\n-        try {\n-            Table tbl = db.getTable(stmt.getTblName());\n-            if (tbl == null || tbl.getType() != TableType.OLAP) {\n-                throw new DdlException(\"Table does not exist or is not OLAP table: \" + stmt.getTblName());\n+    /*\n+     * handle ADMIN CANCEL REPAIR TABLE stmt send by user.\n+     * This operation will remove the specified partitions from 'prios'\n+     */\n+    public void cancelRepairTable(AdminCancelRepairTableStmt stmt) throws DdlException {\n+        RepairTabletInfo repairTabletInfo = getRepairTabletInfo(stmt.getDbName(), stmt.getTblName(), stmt.getPartitions());\n+        removePrios(repairTabletInfo.dbId, repairTabletInfo.tblId, repairTabletInfo.partIds);", "originalCommit": "f826c97a3594f505bdeb429a7005ec527486cd55", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQzOTgyOA==", "url": "https://github.com/apache/incubator-doris/pull/2763#discussion_r367439828", "bodyText": "I think rollup job can be changed to same as schema change job.", "author": "morningman", "createdAt": "2020-01-16T14:15:52Z", "path": "fe/src/main/java/org/apache/doris/alter/Alter.java", "diffHunk": "@@ -276,8 +276,9 @@ public void processAlterTable(AlterTableStmt stmt) throws UserException {\n             if (olapTable.getState() != OlapTableState.NORMAL) {\n                 throw new DdlException(\"Table[\" + table.getName() + \"]'s state is not NORMAL. Do not allow doing ALTER ops\");\n             }\n-            \n-            if (needTableStable) {\n+\n+            // schema change job will wait until table become stable\n+            if (needTableStable && !hasSchemaChange) {", "originalCommit": "f826c97a3594f505bdeb429a7005ec527486cd55", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzUxMDMxNA==", "url": "https://github.com/apache/incubator-doris/pull/2763#discussion_r367510314", "bodyText": "@morningman Done", "author": "WingsGo", "createdAt": "2020-01-16T16:13:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQzOTgyOA=="}], "type": "inlineReview"}, {"oid": "6c566ddb988f548655d611313e49d8362b31efa2", "url": "https://github.com/apache/incubator-doris/commit/6c566ddb988f548655d611313e49d8362b31efa2", "message": "fix last review", "committedDate": "2020-01-16T16:12:53Z", "type": "commit"}, {"oid": "423805a00b2b7810cfe44dc20e7e8657067d200d", "url": "https://github.com/apache/incubator-doris/commit/423805a00b2b7810cfe44dc20e7e8657067d200d", "message": "Merge branch 'master' into fix_add_column", "committedDate": "2020-01-16T16:18:43Z", "type": "commit"}, {"oid": "09a00f4511e46f5db0b10e361704ea32cb21b3e9", "url": "https://github.com/apache/incubator-doris/commit/09a00f4511e46f5db0b10e361704ea32cb21b3e9", "message": "add UT for rollup", "committedDate": "2020-01-17T02:56:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIxNDgyNw==", "url": "https://github.com/apache/incubator-doris/pull/2763#discussion_r368214827", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            LOG.warn(\"doing rollup job: \" + jobId + \"while table is not stable.\");\n          \n          \n            \n                            LOG.warn(\"doing rollup job: \" + jobId + \" while table is not stable.\");", "author": "morningman", "createdAt": "2020-01-18T08:29:11Z", "path": "fe/src/main/java/org/apache/doris/alter/RollupJobV2.java", "diffHunk": "@@ -168,8 +168,17 @@ protected void runPendingJob() throws AlterCancelException {\n             if (tbl == null) {\n                 throw new AlterCancelException(\"Table \" + tableId + \" does not exist\");\n             }\n-            Preconditions.checkState(tbl.getState() == OlapTableState.ROLLUP);\n \n+            boolean isStable = tbl.isStable(Catalog.getCurrentSystemInfo(),\n+                    Catalog.getCurrentCatalog().getTabletScheduler(),\n+                    db.getClusterName());\n+            if (!isStable) {\n+                errMsg = \"table is unstable\";\n+                LOG.warn(\"doing rollup job: \" + jobId + \"while table is not stable.\");", "originalCommit": "09a00f4511e46f5db0b10e361704ea32cb21b3e9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIxNTA1MQ==", "url": "https://github.com/apache/incubator-doris/pull/2763#discussion_r368215051", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            LOG.warn(\"doing schema change job: \" + jobId + \"while table is not stable.\");\n          \n          \n            \n                            LOG.warn(\"doing schema change job: \" + jobId + \" while table is not stable.\");", "author": "morningman", "createdAt": "2020-01-18T08:35:25Z", "path": "fe/src/main/java/org/apache/doris/alter/SchemaChangeJobV2.java", "diffHunk": "@@ -184,13 +184,23 @@ protected void runPendingJob() throws AlterCancelException {\n                 totalReplicaNum += tablet.getReplicas().size();\n             }\n         }\n-        MarkedCountDownLatch<Long, Long> countDownLatch = new MarkedCountDownLatch<Long, Long>(totalReplicaNum);\n+        MarkedCountDownLatch<Long, Long> countDownLatch = new MarkedCountDownLatch<>(totalReplicaNum);\n         db.readLock();\n         try {\n             OlapTable tbl = (OlapTable) db.getTable(tableId);\n             if (tbl == null) {\n                 throw new AlterCancelException(\"Table \" + tableId + \" does not exist\");\n-            } \n+            }\n+\n+            boolean isStable = tbl.isStable(Catalog.getCurrentSystemInfo(),\n+                    Catalog.getCurrentCatalog().getTabletScheduler(),\n+                    db.getClusterName());\n+            if (!isStable) {\n+                errMsg = \"table is unstable\";\n+                LOG.warn(\"doing schema change job: \" + jobId + \"while table is not stable.\");", "originalCommit": "09a00f4511e46f5db0b10e361704ea32cb21b3e9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "eef70c1045bf6d7f4d036de89e815edff6590db2", "url": "https://github.com/apache/incubator-doris/commit/eef70c1045bf6d7f4d036de89e815edff6590db2", "message": "fix", "committedDate": "2020-01-18T09:48:59Z", "type": "commit"}]}