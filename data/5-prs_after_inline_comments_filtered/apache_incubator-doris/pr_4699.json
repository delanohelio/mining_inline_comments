{"pr_number": 4699, "pr_title": "Support Alter Table Clause For External Table", "pr_createdAt": "2020-10-06T02:30:28Z", "pr_url": "https://github.com/apache/incubator-doris/pull/4699", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQwMjkwMg==", "url": "https://github.com/apache/incubator-doris/pull/4699#discussion_r500402902", "bodyText": "use return instead of break is more clear", "author": "morningman", "createdAt": "2020-10-06T15:42:02Z", "path": "fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java", "diffHunk": "@@ -172,71 +256,18 @@ public void processAlterTable(AlterTableStmt stmt) throws UserException {\n                 ErrorReport.reportDdlException(ErrorCode.ERR_BAD_TABLE_ERROR, tableName);\n             }\n \n-            if (table.getType() != TableType.OLAP) {\n-                throw new DdlException(\"Do not support alter non-OLAP table[\" + tableName + \"]\");\n-            }\n-            OlapTable olapTable = (OlapTable) table;\n-            stmt.rewriteAlterClause(olapTable);\n-\n-            // check conflict alter ops first\n-            alterClauses = stmt.getOps();\n-            AlterOperations currentAlterOps = new AlterOperations();\n-            currentAlterOps.checkConflict(alterClauses);\n-\n-            // check cluster capacity and db quota, only need to check once.\n-            if (currentAlterOps.needCheckCapacity()) {\n-                Catalog.getCurrentSystemInfo().checkClusterCapacity(clusterName);\n-                db.checkQuota();\n-            }\n-\n-            if (olapTable.getState() != OlapTableState.NORMAL) {\n-                throw new DdlException(\n-                        \"Table[\" + table.getName() + \"]'s state is not NORMAL. Do not allow doing ALTER ops\");\n-            }\n-\n-            if (currentAlterOps.hasSchemaChangeOp()) {\n-                // if modify storage type to v2, do schema change to convert all related tablets to segment v2 format\n-                schemaChangeHandler.process(alterClauses, clusterName, db, olapTable);\n-            } else if (currentAlterOps.hasRollupOp()) {\n-                materializedViewHandler.process(alterClauses, clusterName, db, olapTable);\n-            } else if (currentAlterOps.hasPartitionOp()) {\n-                Preconditions.checkState(alterClauses.size() == 1);\n-                AlterClause alterClause = alterClauses.get(0);\n-                if (alterClause instanceof DropPartitionClause) {\n-                    if (!((DropPartitionClause) alterClause).isTempPartition()) {\n-                        DynamicPartitionUtil.checkAlterAllowed((OlapTable) db.getTable(tableName));\n-                    }\n-                    Catalog.getCurrentCatalog().dropPartition(db, olapTable, ((DropPartitionClause) alterClause));\n-                } else if (alterClause instanceof ReplacePartitionClause) {\n-                    Catalog.getCurrentCatalog().replaceTempPartition(db, tableName, (ReplacePartitionClause) alterClause);\n-                } else if (alterClause instanceof ModifyPartitionClause) {\n-                    ModifyPartitionClause clause = ((ModifyPartitionClause) alterClause);\n-                    // expand the partition names if it is 'Modify Partition(*)'\n-                    if (clause.isNeedExpand()) {\n-                        List<String> partitionNames = clause.getPartitionNames();\n-                        partitionNames.clear();\n-                        for (Partition partition : olapTable.getPartitions()) {\n-                            partitionNames.add(partition.getName());\n-                        }\n-                    }\n-                    Map<String, String> properties = clause.getProperties();\n-                    if (properties.containsKey(PropertyAnalyzer.PROPERTIES_INMEMORY)) {\n-                        needProcessOutsideDatabaseLock = true;\n-                    } else {\n-                        List<String> partitionNames = clause.getPartitionNames();\n-                        modifyPartitionsProperty(db, olapTable, partitionNames, properties);\n-                    }\n-                } else if (alterClause instanceof AddPartitionClause) {\n-                    needProcessOutsideDatabaseLock = true;\n-                } else {\n-                    throw new DdlException(\"Invalid alter operation: \" + alterClause.getOpType());\n-                }\n-            } else if (currentAlterOps.hasRenameOp()) {\n-                processRename(db, olapTable, alterClauses);\n-            } else if (currentAlterOps.contains(AlterOpType.MODIFY_TABLE_PROPERTY_SYNC)) {\n-                needProcessOutsideDatabaseLock = true;\n-            } else {\n-                throw new DdlException(\"Invalid alter operations: \" + currentAlterOps);\n+            switch (table.getType()) {\n+                case OLAP:\n+                    OlapTable olapTable = (OlapTable) table;\n+                    needProcessOutsideDatabaseLock = processAlterOlapTable(stmt, olapTable, alterClauses, clusterName, db);\n+                    break;\n+                case ODBC:\n+                case MYSQL:\n+                case ELASTICSEARCH:\n+                    processAlterExternalTable(stmt, table, db);\n+                    break;", "originalCommit": "b5550aac38c32f9dabed2ab5535bf2b2ca03a5af", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQwNTE1OA==", "url": "https://github.com/apache/incubator-doris/pull/4699#discussion_r500405158", "bodyText": "processExternalTable is more clear", "author": "morningman", "createdAt": "2020-10-06T15:45:03Z", "path": "fe/fe-core/src/main/java/org/apache/doris/alter/AlterHandler.java", "diffHunk": "@@ -380,6 +381,12 @@ public void start() {\n     public abstract void process(List<AlterClause> alterClauses, String clusterName, Database db, OlapTable olapTable)\n             throws UserException;\n \n+    /*\n+     * entry function. handle alter ops for external table\n+     */\n+    public void process(List<AlterClause> alterClauses, Database db, Table externalTable)", "originalCommit": "b5550aac38c32f9dabed2ab5535bf2b2ca03a5af", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQwNzY5Nw==", "url": "https://github.com/apache/incubator-doris/pull/4699#discussion_r500407697", "bodyText": "Should not set new schema to externalTable here directly.\nThe other alter clause may throw exception and the entire alter operation will fail, and you have to rollback all changes to the table.\nA correct way to to modify a \"copied\" schema of external table, and set the new schema at the end of all alter clauses.", "author": "morningman", "createdAt": "2020-10-06T15:48:28Z", "path": "fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java", "diffHunk": "@@ -132,6 +132,30 @@ private void processAddColumn(AddColumnClause alterClause, OlapTable olapTable,\n                           indexSchemaMap, newColNameSet);\n     }\n \n+    private void processAddColumn(AddColumnClause alterClause, Table externalTable) throws DdlException {\n+        Column column = alterClause.getColumn();\n+        ColumnPosition columnPos = alterClause.getColPos();\n+        Set<String> newColNameSet = Sets.newHashSet(column.getName());\n+\n+        List<Column> modIndexSchema = externalTable.getBaseSchema();\n+        addColumnInternal(externalTable, column, columnPos, modIndexSchema, newColNameSet);\n+        externalTable.setNewFullSchema(modIndexSchema);", "originalCommit": "b5550aac38c32f9dabed2ab5535bf2b2ca03a5af", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDcyMzExOA==", "url": "https://github.com/apache/incubator-doris/pull/4699#discussion_r500723118", "bodyText": "yes\uff0c it is a problem\u3002I will set the new schema at the end of alter external table.", "author": "HappenLee", "createdAt": "2020-10-07T03:56:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQwNzY5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQwODY3MA==", "url": "https://github.com/apache/incubator-doris/pull/4699#discussion_r500408670", "bodyText": "This is not a good way to alter external table.\nYou write 2 edit logs here, which will make this operation non-atomic\u3002", "author": "morningman", "createdAt": "2020-10-06T15:49:48Z", "path": "fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java", "diffHunk": "@@ -5045,6 +5046,36 @@ public void renameTable(Database db, OlapTable table, TableRenameClause tableRen\n         LOG.info(\"rename table[{}] to {}\", tableName, newTableName);\n     }\n \n+    public void renameTable(Database db, Table table, TableRenameClause tableRenameClause) throws DdlException {\n+        String tableName = table.getName();\n+        String newTableName = tableRenameClause.getNewTableName();\n+        if (tableName.equals(newTableName)) {\n+            throw new DdlException(\"Same table name\");\n+        }\n+\n+        // check if name is already used\n+        if (db.getTable(newTableName) != null) {\n+            throw new DdlException(\"Table name[\" + newTableName + \"] is already used\");\n+        }\n+\n+        table.setName(newTableName);\n+\n+        db.dropTable(tableName);\n+        db.createTable(table);\n+\n+        TableInfo tableInfo = TableInfo.createForTableRename(db.getId(), table.getId(), newTableName);\n+        editLog.logTableRename(tableInfo);\n+        LOG.info(\"rename table[{}] to {}\", tableName, newTableName);\n+    }\n+\n+    public void reflushTable(Database db, Table table) throws DdlException {", "originalCommit": "b5550aac38c32f9dabed2ab5535bf2b2ca03a5af", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDgxNjQ4NA==", "url": "https://github.com/apache/incubator-doris/pull/4699#discussion_r500816484", "bodyText": "yes\uff0cto make sure it is atomic. We may need add a new OperationType in edit log.", "author": "HappenLee", "createdAt": "2020-10-07T08:06:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQwODY3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc2MjE2Nw==", "url": "https://github.com/apache/incubator-doris/pull/4699#discussion_r502762167", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private void processRename(Database db, Table table, List<AlterClause> alterClauses) throws DdlException {\n          \n          \n            \n                private void processRenameAlterOperation(Database db, Table table, List<AlterClause> alterClauses) throws DdlException {", "author": "wuyunfeng", "createdAt": "2020-10-10T08:06:15Z", "path": "fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java", "diffHunk": "@@ -377,6 +408,17 @@ private void processRename(Database db, OlapTable table, List<AlterClause> alter\n         }\n     }\n \n+    private void processRename(Database db, Table table, List<AlterClause> alterClauses) throws DdlException {", "originalCommit": "d21ea632bd9bb9f3ca2c4b7d12d54fe5d25ae2d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc4NDE3Mw==", "url": "https://github.com/apache/incubator-doris/pull/4699#discussion_r502784173", "bodyText": "@wuyunfeng hi\uff0cyunfeng. I just want keep the function name same to the olaptable alter function name.", "author": "HappenLee", "createdAt": "2020-10-10T12:12:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc2MjE2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc2MjMzOQ==", "url": "https://github.com/apache/incubator-doris/pull/4699#discussion_r502762339", "bodyText": "just puzzled with the refresh?", "author": "wuyunfeng", "createdAt": "2020-10-10T08:08:03Z", "path": "fe/fe-core/src/main/java/org/apache/doris/persist/OperationType.java", "diffHunk": "@@ -182,4 +182,7 @@\n     // resource 276~290\n     public static final short OP_CREATE_RESOURCE = 276;\n     public static final short OP_DROP_RESOURCE = 277;\n+\n+    // alter external table\n+    public static final short OP_REFRESH_EXTERNAL_TABLE_SCHEMA = 280;", "originalCommit": "d21ea632bd9bb9f3ca2c4b7d12d54fe5d25ae2d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc2OTU3OA==", "url": "https://github.com/apache/incubator-doris/pull/4699#discussion_r502769578", "bodyText": "OK\uff0cI will change the name of this operationType", "author": "HappenLee", "createdAt": "2020-10-10T09:28:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc2MjMzOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc2MjYyMg==", "url": "https://github.com/apache/incubator-doris/pull/4699#discussion_r502762622", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private void processAddColumn(AddColumnClause alterClause, Table externalTable, List<Column> newSchema) throws DdlException {\n          \n          \n            \n                private void processAddCol{Alter}Operation(AddColumnClause alterClause, Table externalTable, List<Column> newSchema) throws DdlException {", "author": "wuyunfeng", "createdAt": "2020-10-10T08:10:47Z", "path": "fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java", "diffHunk": "@@ -132,6 +132,26 @@ private void processAddColumn(AddColumnClause alterClause, OlapTable olapTable,\n                           indexSchemaMap, newColNameSet);\n     }\n \n+    private void processAddColumn(AddColumnClause alterClause, Table externalTable, List<Column> newSchema) throws DdlException {", "originalCommit": "d21ea632bd9bb9f3ca2c4b7d12d54fe5d25ae2d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc4NDE4NQ==", "url": "https://github.com/apache/incubator-doris/pull/4699#discussion_r502784185", "bodyText": "hi\uff0cyunfeng. I just want keep the function name same to the olaptable alter function name.", "author": "HappenLee", "createdAt": "2020-10-10T12:12:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc2MjYyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzc3MTYxMQ==", "url": "https://github.com/apache/incubator-doris/pull/4699#discussion_r503771611", "bodyText": "That's ok", "author": "wuyunfeng", "createdAt": "2020-10-13T08:40:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc2MjYyMg=="}], "type": "inlineReview"}, {"oid": "1959144eede1fa35cde5b723cfd6186dd322dd9a", "url": "https://github.com/apache/incubator-doris/commit/1959144eede1fa35cde5b723cfd6186dd322dd9a", "message": "Support Alter Table Clause For External Table\n5 alter operation be supported:\n\n* RENAME\n* ADD COLUMN\n* DROP COLUMN\n* MODIFY COLUMN\n* REORDER COLUMN", "committedDate": "2020-10-13T03:07:30Z", "type": "commit"}, {"oid": "95b09439b6c1ef136849f8d98fd44235c0cbf5e5", "url": "https://github.com/apache/incubator-doris/commit/95b09439b6c1ef136849f8d98fd44235c0cbf5e5", "message": "fix some problem\n\n1. copy old schema to new schema before external table schema change\n2. add new operation of OP_REFRESH_EXTERNAL_TABLE_SCHEMA", "committedDate": "2020-10-13T03:07:30Z", "type": "commit"}, {"oid": "fb59c88edb1d26987a764c4ace41989d3fd256f5", "url": "https://github.com/apache/incubator-doris/commit/fb59c88edb1d26987a764c4ace41989d3fd256f5", "message": "change some code", "committedDate": "2020-10-13T03:07:30Z", "type": "commit"}, {"oid": "609e85d32f22d29125bcc375d92ae50f0a296d76", "url": "https://github.com/apache/incubator-doris/commit/609e85d32f22d29125bcc375d92ae50f0a296d76", "message": "change OP_REFRESH_EXTERNAL_TABLE_SCHEMA to OP_ALTER_EXTERNAL_TABLE_SCHEMA", "committedDate": "2020-10-13T03:07:30Z", "type": "commit"}, {"oid": "673ab758bc90cac42a7b90c0c880d9a46613e315", "url": "https://github.com/apache/incubator-doris/commit/673ab758bc90cac42a7b90c0c880d9a46613e315", "message": "Added a forbidden of delete the last column", "committedDate": "2020-10-13T03:07:30Z", "type": "commit"}, {"oid": "673ab758bc90cac42a7b90c0c880d9a46613e315", "url": "https://github.com/apache/incubator-doris/commit/673ab758bc90cac42a7b90c0c880d9a46613e315", "message": "Added a forbidden of delete the last column", "committedDate": "2020-10-13T03:07:30Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQzODUyNQ==", "url": "https://github.com/apache/incubator-doris/pull/4699#discussion_r506438525", "bodyText": "the param isReplay seems always true.", "author": "morningman", "createdAt": "2020-10-16T13:45:04Z", "path": "fe/fe-core/src/main/java/org/apache/doris/catalog/Database.java", "diffHunk": "@@ -305,6 +306,26 @@ public boolean createTableWithLock(Table table, boolean isReplay, boolean setIfN\n         }\n     }\n \n+    public void refreshTableSchemaWithLock(String tableName, List<Column> newSchema, boolean isReplay) throws DdlException{", "originalCommit": "673ab758bc90cac42a7b90c0c880d9a46613e315", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE1NDEzMw==", "url": "https://github.com/apache/incubator-doris/pull/4699#discussion_r507154133", "bodyText": "yes, so I will del it.", "author": "HappenLee", "createdAt": "2020-10-18T13:42:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQzODUyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQ0MDkyMg==", "url": "https://github.com/apache/incubator-doris/pull/4699#discussion_r506440922", "bodyText": "Use GSON", "author": "morningman", "createdAt": "2020-10-16T13:47:39Z", "path": "fe/fe-core/src/main/java/org/apache/doris/persist/RefreshExternalTableInfo.java", "diffHunk": "@@ -0,0 +1,102 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+package org.apache.doris.persist;\n+\n+import com.clearspring.analytics.util.Lists;\n+import org.apache.doris.catalog.Column;\n+import org.apache.doris.common.io.Writable;\n+import org.apache.doris.common.io.Text;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.DataInput;\n+import java.io.DataOutput;\n+import java.io.IOException;\n+import java.util.List;\n+\n+public class RefreshExternalTableInfo implements Writable {\n+    public static final Logger LOG = LoggerFactory.getLogger(RefreshExternalTableInfo.class);\n+\n+    private String dbName;", "originalCommit": "673ab758bc90cac42a7b90c0c880d9a46613e315", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE1NjQyMg==", "url": "https://github.com/apache/incubator-doris/pull/4699#discussion_r507156422", "bodyText": "Sorry, Firstly I try use GSON to do serialization. But failed when I need to deserialize the newSchema. It seems Column cause the problem.", "author": "HappenLee", "createdAt": "2020-10-18T13:50:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQ0MDkyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQ0MzAyOQ==", "url": "https://github.com/apache/incubator-doris/pull/4699#discussion_r506443029", "bodyText": "This method is just same as renameTable above?", "author": "morningman", "createdAt": "2020-10-16T13:49:17Z", "path": "fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java", "diffHunk": "@@ -5092,6 +5098,35 @@ public void renameTable(Database db, OlapTable table, TableRenameClause tableRen\n         LOG.info(\"rename table[{}] to {}\", tableName, newTableName);\n     }\n \n+    public void renameTable(Database db, Table table, TableRenameClause tableRenameClause) throws DdlException {", "originalCommit": "673ab758bc90cac42a7b90c0c880d9a46613e315", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE1NTIxMg==", "url": "https://github.com/apache/incubator-doris/pull/4699#discussion_r507155212", "bodyText": "yes, but the param is different. one is the olaptable, this is table", "author": "HappenLee", "createdAt": "2020-10-18T13:45:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQ0MzAyOQ=="}], "type": "inlineReview"}, {"oid": "8b6daa14547fbb2510e2349a302921ac41a2cb47", "url": "https://github.com/apache/incubator-doris/commit/8b6daa14547fbb2510e2349a302921ac41a2cb47", "message": "fix some mistake", "committedDate": "2020-10-18T14:42:27Z", "type": "commit"}, {"oid": "5a3ee73fe76186ec00694977ce1299f92cffce59", "url": "https://github.com/apache/incubator-doris/commit/5a3ee73fe76186ec00694977ce1299f92cffce59", "message": "use GJSON to do Serialize", "committedDate": "2020-10-20T03:38:23Z", "type": "commit"}]}