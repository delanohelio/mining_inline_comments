{"pr_number": 3819, "pr_title": "[Spark load][Fe 4/6] Add hive external table and update hive table syntax in loadstmt", "pr_createdAt": "2020-06-10T08:38:56Z", "pr_url": "https://github.com/apache/incubator-doris/pull/3819", "timeline": [{"oid": "4c2e73a5fef1dd44682701a64a27c08f616f3914", "url": "https://github.com/apache/incubator-doris/commit/4c2e73a5fef1dd44682701a64a27c08f616f3914", "message": "Add hive external table and update hive table syntax in loadstmt", "committedDate": "2020-06-10T08:32:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE4OTM2NA==", "url": "https://github.com/apache/incubator-doris/pull/3819#discussion_r438189364", "bodyText": "You can do it in  fromClause_.analyze(analyzer);", "author": "imay", "createdAt": "2020-06-10T14:57:10Z", "path": "fe/src/main/java/org/apache/doris/analysis/SelectStmt.java", "diffHunk": "@@ -341,6 +375,8 @@ public void analyze(Analyzer analyzer) throws AnalysisException, UserException {\n \n         fromClause_.setNeedToSql(needToSql);\n         fromClause_.analyze(analyzer);\n+        // TODO: remove when query from hive table is supported\n+        checkFromHiveTable(analyzer);", "originalCommit": "4c2e73a5fef1dd44682701a64a27c08f616f3914", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIwNTY4OQ==", "url": "https://github.com/apache/incubator-doris/pull/3819#discussion_r438205689", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    long tableId = Catalog.getCurrentCatalog().getNextId();\n          \n          \n            \n                    long tableId = getNextId();", "author": "morningman", "createdAt": "2020-06-10T15:19:27Z", "path": "fe/src/main/java/org/apache/doris/catalog/Catalog.java", "diffHunk": "@@ -3908,6 +3911,18 @@ private void createBrokerTable(Database db, CreateTableStmt stmt) throws DdlExce\n         return;\n     }\n \n+    private void createHiveTable(Database db, CreateTableStmt stmt) throws DdlException {\n+        String tableName = stmt.getTableName();\n+        List<Column> columns = stmt.getColumns();\n+        long tableId = Catalog.getCurrentCatalog().getNextId();", "originalCommit": "4c2e73a5fef1dd44682701a64a27c08f616f3914", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIwOTc3Nw==", "url": "https://github.com/apache/incubator-doris/pull/3819#discussion_r438209777", "bodyText": "Is this necessary?\nI think we can support that some of olap table's column does not exist in HIVE table, and can be filled by default value or null?", "author": "morningman", "createdAt": "2020-06-10T15:23:46Z", "path": "fe/src/main/java/org/apache/doris/load/BrokerFileGroup.java", "diffHunk": "@@ -165,6 +170,33 @@ public void parse(Database db, DataDescription dataDescription) throws DdlExcept\n \n         // FilePath\n         filePaths = dataDescription.getFilePaths();\n+\n+        if (dataDescription.isLoadFromTable()) {\n+            String srcTableName = dataDescription.getSrcTableName();\n+            // src table should be hive table\n+            Table srcTable = db.getTable(srcTableName);\n+            if (srcTable == null) {\n+                throw new DdlException(\"Unknown table \" + srcTableName + \" in database \" + db.getFullName());\n+            }\n+            if (!(srcTable instanceof HiveTable)) {\n+                throw new DdlException(\"Source table \" + srcTableName + \" is not HiveTable\");\n+            }\n+            // src table columns should include all columns of loaded table", "originalCommit": "4c2e73a5fef1dd44682701a64a27c08f616f3914", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI4OTc5Mw==", "url": "https://github.com/apache/incubator-doris/pull/3819#discussion_r439289793", "bodyText": "Support later", "author": "wyb", "createdAt": "2020-06-12T08:45:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIwOTc3Nw=="}], "type": "inlineReview"}, {"oid": "7f7ee63723ed4d1391537e20052b52761b8d6fb7", "url": "https://github.com/apache/incubator-doris/commit/7f7ee63723ed4d1391537e20052b52761b8d6fb7", "message": "Move check hive table from SelectStmt to FromClause and update doc", "committedDate": "2020-06-11T08:53:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM5NzkzMg==", "url": "https://github.com/apache/incubator-doris/pull/3819#discussion_r439397932", "bodyText": "Lock db before getting table", "author": "morningman", "createdAt": "2020-06-12T12:48:45Z", "path": "fe/src/main/java/org/apache/doris/analysis/FromClause.java", "diffHunk": "@@ -72,6 +78,39 @@ public int compare(TableRef tableref1, TableRef tableref2) {\n         });\n     }\n \n+    private void checkFromHiveTable(Analyzer analyzer) throws AnalysisException {\n+        for (TableRef tblRef : tableRefs_) {\n+            if (!(tblRef instanceof BaseTableRef)) {\n+                continue;\n+            }\n+\n+            TableName tableName = tblRef.getName();\n+            String dbName = tableName.getDb();\n+            if (Strings.isNullOrEmpty(dbName)) {\n+                dbName = analyzer.getDefaultDb();\n+            } else {\n+                dbName = ClusterNamespace.getFullName(analyzer.getClusterName(), tblRef.getName().getDb());\n+            }\n+            if (Strings.isNullOrEmpty(dbName)) {\n+                ErrorReport.reportAnalysisException(ErrorCode.ERR_NO_DB_ERROR);\n+            }\n+\n+            Database db = analyzer.getCatalog().getDb(dbName);\n+            if (db == null) {\n+                ErrorReport.reportAnalysisException(ErrorCode.ERR_BAD_DB_ERROR, dbName);\n+            }\n+\n+            String tblName = tableName.getTbl();\n+            Table table = db.getTable(tblName);", "originalCommit": "7f7ee63723ed4d1391537e20052b52761b8d6fb7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQyNDc2NQ==", "url": "https://github.com/apache/incubator-doris/pull/3819#discussion_r439424765", "bodyText": "Lock is acquired in StmtExecutor.analyze function.", "author": "wyb", "createdAt": "2020-06-12T13:41:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM5NzkzMg=="}], "type": "inlineReview"}, {"oid": "44dbdf49861bf6b1d8d0ba8fefce0f3653506014", "url": "https://github.com/apache/incubator-doris/commit/44dbdf49861bf6b1d8d0ba8fefce0f3653506014", "message": "Update hive external table en sql reference", "committedDate": "2020-06-12T13:38:05Z", "type": "commit"}]}