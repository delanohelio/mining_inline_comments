{"pr_number": 4445, "pr_title": "support StringLiteral try to cast BigInt", "pr_createdAt": "2020-08-25T06:52:36Z", "pr_url": "https://github.com/apache/incubator-doris/pull/4445", "timeline": [{"oid": "0e67efdb153a3c14e6f93adf692b41ad07651147", "url": "https://github.com/apache/incubator-doris/commit/0e67efdb153a3c14e6f93adf692b41ad07651147", "message": "support StringLiteral try to cast BigInt", "committedDate": "2020-08-25T06:49:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM2MTg4Mw==", "url": "https://github.com/apache/incubator-doris/pull/4445#discussion_r476361883", "bodyText": "Because we have NormalizeBinaryPredicatesRule. You could only consider slot in left and string Literal in right", "author": "kangkaisen", "createdAt": "2020-08-25T11:01:26Z", "path": "fe/fe-core/src/main/java/org/apache/doris/analysis/BinaryPredicate.java", "diffHunk": "@@ -307,6 +307,16 @@ private Type getCmpType() {\n             return Type.LARGEINT;\n         }\n \n+        // Try parse varchar to bigint\n+        if (t1 == PrimitiveType.BIGINT && t2 == PrimitiveType.VARCHAR) {", "originalCommit": "0e67efdb153a3c14e6f93adf692b41ad07651147", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM3MjEzMQ==", "url": "https://github.com/apache/incubator-doris/pull/4445#discussion_r476372131", "bodyText": "Because we have NormalizeBinaryPredicatesRule. You could only consider slot in left and string Literal in right\n\u4f46\u662f\u6211\u8bd5\u4e86\u4e00\u4e0b\uff0c\u5982\u679c\u6211\u6ce8\u91ca\u6389\u4ee3\u7801\u540e\uff0c\u5982\u679cSQL\u8fd9\u4e48\u5199\uff0c\u8fd8\u662f\u8f6c\u6210Double\u4e86\uff0c\u867d\u7136\u5f88\u5c11\u6709\u4eba\u8fd9\u4e48\u5199SQL\u3002\nexplain select count()\nfrom app_rt_flow_poi_intent_uv_price_v2\nwhere '20200730'=datekey\n\u6211\u770b\u4e86\u4e00\u4e0b\uff0c\u5728analyzeAndGenerateQueryPlan\u662f\u5148parsedStmt.analyze\u518dparsedStmt.rewriteExprs\u8fd9\u4e2a\u9690\u5f0f\u8f6c\u6362\u662f\u5728analyze\u91cc\u5b8c\u6210\u7684\u3002\u8fd9\u5757\u662f\u4e0d\u662f\u628arewrite\u63d0\u524d\u9762\u4e0d\u592a\u597d\u63d0- -\u3002", "author": "Astralidea", "createdAt": "2020-08-25T11:22:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM2MTg4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM4NTg0NQ==", "url": "https://github.com/apache/incubator-doris/pull/4445#discussion_r476385845", "bodyText": "Yes. you are right. Don't need change this.", "author": "kangkaisen", "createdAt": "2020-08-25T11:45:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM2MTg4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM3MDcxMg==", "url": "https://github.com/apache/incubator-doris/pull/4445#discussion_r476370712", "bodyText": "The method name and logic are a little strange. this method does two things: try to parse a string and decide the type. I think we could better split it.", "author": "kangkaisen", "createdAt": "2020-08-25T11:19:51Z", "path": "fe/fe-core/src/main/java/org/apache/doris/catalog/Type.java", "diffHunk": "@@ -386,6 +386,20 @@ public static Type getAssignmentCompatibleType(Type t1, Type t2, boolean strict)\n         return ScalarType.INVALID;\n     }\n \n+    /**\n+     * Returns Type.BIGINT if this type could parse to long, otherwise Type.DOUBLE.\n+     */\n+    public static Type tryParseToLong(Expr expectStringExpr){", "originalCommit": "0e67efdb153a3c14e6f93adf692b41ad07651147", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM4OTM2MQ==", "url": "https://github.com/apache/incubator-doris/pull/4445#discussion_r476389361", "bodyText": "The method name and logic are a little strange. this method does two things: try to parse a string and decide the type. I think we could better split it.\n\n\u611f\u8c22\u6307\u51fa\u95ee\u9898\uff0c\u6211\u6539\u4e86\u4e00\u4e0b\uff0c\u770b\u770b\u884c\u4e0d\u884c\uff0c\u662f\u5426\u8fd8\u6709\u95ee\u9898\u3002", "author": "Astralidea", "createdAt": "2020-08-25T11:52:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM3MDcxMg=="}], "type": "inlineReview"}, {"oid": "ae6639eccb2b38f6d9bf02aa184eeb9fa2a500ff", "url": "https://github.com/apache/incubator-doris/commit/ae6639eccb2b38f6d9bf02aa184eeb9fa2a500ff", "message": "support StringLiteral try to cast BigInt", "committedDate": "2020-08-25T11:51:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM5NDExNQ==", "url": "https://github.com/apache/incubator-doris/pull/4445#discussion_r476394115", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(expectStringExpr instanceof StringLiteral) {\n          \n          \n            \n                    if (expectStringExpr instanceof StringLiteral) {", "author": "kangkaisen", "createdAt": "2020-08-25T12:01:32Z", "path": "fe/fe-core/src/main/java/org/apache/doris/catalog/Type.java", "diffHunk": "@@ -386,6 +386,17 @@ public static Type getAssignmentCompatibleType(Type t1, Type t2, boolean strict)\n         return ScalarType.INVALID;\n     }\n \n+    /**\n+     * Returns Type.BIGINT if this type could parse to long, otherwise Type.DOUBLE.\n+     */\n+    public static Long tryParseToLong(Expr expectStringExpr){\n+        if(expectStringExpr instanceof StringLiteral) {", "originalCommit": "ae6639eccb2b38f6d9bf02aa184eeb9fa2a500ff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM5NDE4Ng==", "url": "https://github.com/apache/incubator-doris/pull/4445#discussion_r476394186", "bodyText": "update comment", "author": "kangkaisen", "createdAt": "2020-08-25T12:01:41Z", "path": "fe/fe-core/src/main/java/org/apache/doris/catalog/Type.java", "diffHunk": "@@ -386,6 +386,17 @@ public static Type getAssignmentCompatibleType(Type t1, Type t2, boolean strict)\n         return ScalarType.INVALID;\n     }\n \n+    /**\n+     * Returns Type.BIGINT if this type could parse to long, otherwise Type.DOUBLE.", "originalCommit": "ae6639eccb2b38f6d9bf02aa184eeb9fa2a500ff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM5NTA4MA==", "url": "https://github.com/apache/incubator-doris/pull/4445#discussion_r476395080", "bodyText": "would better add a comment to describe why do we want to convert string to bigint. add note this is compatible with Mysql", "author": "kangkaisen", "createdAt": "2020-08-25T12:03:32Z", "path": "fe/fe-core/src/main/java/org/apache/doris/analysis/BinaryPredicate.java", "diffHunk": "@@ -307,6 +307,22 @@ private Type getCmpType() {\n             return Type.LARGEINT;\n         }\n \n+        // Try parse varchar to bigint and decide type", "originalCommit": "ae6639eccb2b38f6d9bf02aa184eeb9fa2a500ff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c724e720460219519e8b7049528f25e79c2b8971", "url": "https://github.com/apache/incubator-doris/commit/c724e720460219519e8b7049528f25e79c2b8971", "message": "support StringLiteral try to cast BigInt", "committedDate": "2020-08-25T14:00:39Z", "type": "commit"}, {"oid": "cba46a9334103da7b5e83edf76326dbe2a823e02", "url": "https://github.com/apache/incubator-doris/commit/cba46a9334103da7b5e83edf76326dbe2a823e02", "message": "Update fe/fe-core/src/main/java/org/apache/doris/catalog/Type.java\n\nCo-authored-by: kangkaisen  <593110254@qq.com>", "committedDate": "2020-08-25T14:03:01Z", "type": "commit"}]}