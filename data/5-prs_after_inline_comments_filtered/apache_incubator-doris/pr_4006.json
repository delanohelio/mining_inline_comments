{"pr_number": 4006, "pr_title": "[Feature] Support InPredicate in delete statement", "pr_createdAt": "2020-07-02T14:09:30Z", "pr_url": "https://github.com/apache/incubator-doris/pull/4006", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg5MTI1NA==", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r449891254", "bodyText": "Why skipping the base index?\nIf there is no rollup index, the entire check will be skipped.", "author": "morningman", "createdAt": "2020-07-05T15:46:22Z", "path": "fe/src/main/java/org/apache/doris/load/DeleteHandler.java", "diffHunk": "@@ -516,25 +537,22 @@ private void checkDeleteV2(OlapTable table, Partition partition, List<Predicate>\n         }\n         Map<Long, List<Column>> indexIdToSchema = table.getIndexIdToSchema();\n         for (MaterializedIndex index : partition.getMaterializedIndices(MaterializedIndex.IndexExtState.VISIBLE)) {\n+            if (table.getBaseIndexId() == index.getId()) {\n+                continue;", "originalCommit": "b5dcece74379ed808ac4083a9612e0e684c30e6b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDIyMjg1MQ==", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r450222851", "bodyText": "I find here double check, because base schema is equal to  table schema? pre code has check table schema column 479 ~ 537", "author": "caiconghui", "createdAt": "2020-07-06T13:32:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg5MTI1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI4MDYyOQ==", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r450280629", "bodyText": "Oh I see.", "author": "morningman", "createdAt": "2020-07-06T14:57:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg5MTI1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg5MTY1NA==", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r449891654", "bodyText": "Is it better be a FE's config instead of a session variable?\nI think this should be a system-level restriction to prevent users from writing too many conditions, resulting in a reduction in the efficiency of reading and writing the underlying data in storage system.", "author": "morningman", "createdAt": "2020-07-05T15:50:48Z", "path": "fe/src/main/java/org/apache/doris/qe/SessionVariable.java", "diffHunk": "@@ -248,6 +249,8 @@\n     private int maxScanKeyNum = -1;\n     @VariableMgr.VarAttr(name = MAX_PUSHDOWN_CONDITIONS_PER_COLUMN)\n     private int maxPushdownConditionsPerColumn = -1;\n+    @VariableMgr.VarAttr(name = MAX_ALLOWED_IN_ELEMENT_NUM_OF_DELETE)\n+    private int maxAllowedInElementNumOfDelete = 1024;", "originalCommit": "b5dcece74379ed808ac4083a9612e0e684c30e6b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "105777771afca6e9ae09974f2520bf33339d31ad", "url": "https://github.com/apache/incubator-doris/commit/105777771afca6e9ae09974f2520bf33339d31ad", "message": "remove unused content from docs", "committedDate": "2020-07-06T15:50:18Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYyNzQwNw==", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r450627407", "bodyText": "the last loop is \u201c i == inPredicate.getInElementNum()\u201d, should \" i + 1 != inPredicate.getInElementNum()\" modify \"i != inPredicate.getInElementNum()\"?", "author": "wutiangan", "createdAt": "2020-07-07T05:57:34Z", "path": "fe/src/main/java/org/apache/doris/load/DeleteHandler.java", "diffHunk": "@@ -569,6 +587,19 @@ private void checkDeleteV2(OlapTable table, Partition partition, List<Predicate>\n                     sb.append(\" IS NULL\");\n                 }\n                 deleteConditions.add(sb.toString());\n+            } else if (condition instanceof InPredicate) {\n+                InPredicate inPredicate = (InPredicate) condition;\n+                SlotRef slotRef = (SlotRef) inPredicate.getChild(0);\n+                String columnName = slotRef.getColumnName();\n+                StringBuilder strBuilder = new StringBuilder();\n+                String notStr = inPredicate.isNotIn() ? \"NOT \" : \"\";\n+                strBuilder.append(columnName).append(\" \" + notStr + \"IN (\");\n+                for (int i = 1; i <= inPredicate.getInElementNum(); ++i) {\n+                    strBuilder.append(inPredicate.getChild(i).toSql());\n+                    strBuilder.append((i + 1 != inPredicate.getInElementNum()) ? \", \" : \"\");", "originalCommit": "105777771afca6e9ae09974f2520bf33339d31ad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY0NjUxOQ==", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r450646519", "bodyText": "oh\uff0c my bad\uff0cthanks\uff0cI will fix it", "author": "caiconghui", "createdAt": "2020-07-07T06:51:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYyNzQwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYyODQyMQ==", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r450628421", "bodyText": "can slotRef be the second child of binaryPreidicate?", "author": "wutiangan", "createdAt": "2020-07-07T06:01:00Z", "path": "fe/src/main/java/org/apache/doris/load/DeleteHandler.java", "diffHunk": "@@ -450,7 +451,22 @@ public DeleteJob getDeleteJob(long transactionId) {\n         return idToDeleteJob.get(transactionId);\n     }\n \n-    private void checkDeleteV2(OlapTable table, Partition partition, List<Predicate> conditions, List<String> deleteConditions, boolean preCheck)\n+    private SlotRef getSlotRef(Predicate condition) {\n+        SlotRef slotRef = null;\n+        if (condition instanceof BinaryPredicate) {\n+            BinaryPredicate binaryPredicate = (BinaryPredicate) condition;\n+            slotRef = (SlotRef) binaryPredicate.getChild(0);", "originalCommit": "105777771afca6e9ae09974f2520bf33339d31ad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYzODcwMA==", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r450638700", "bodyText": "not allowed", "author": "caiconghui", "createdAt": "2020-07-07T06:31:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYyODQyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYzMjE0MQ==", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r450632141", "bodyText": "what does the for loop do? LiteralExpr.create has no return value?", "author": "wutiangan", "createdAt": "2020-07-07T06:12:50Z", "path": "fe/src/main/java/org/apache/doris/load/DeleteHandler.java", "diffHunk": "@@ -507,7 +516,19 @@ private void checkDeleteV2(OlapTable table, Partition partition, List<Predicate>\n                     LiteralExpr.create(value, Type.fromPrimitiveType(column.getDataType()));\n                 } catch (AnalysisException e) {\n                     // ErrorReport.reportDdlException(ErrorCode.ERR_INVALID_VALUE, value);\n-                    throw new DdlException(\"Invalid column value[\" + value + \"]\");\n+                    throw new DdlException(\"Invalid column value[\" + value + \"] for column \" + columnName);\n+                }\n+            } else if (condition instanceof InPredicate) {\n+                String value = null;\n+                try {\n+                    InPredicate inPredicate = (InPredicate) condition;\n+                    for (int i = 1; i <= inPredicate.getInElementNum(); i++) {\n+                        value = ((LiteralExpr) inPredicate.getChild(i)).getStringValue();\n+                        LiteralExpr.create(value, Type.fromPrimitiveType(column.getDataType()));\n+                    }", "originalCommit": "105777771afca6e9ae09974f2520bf33339d31ad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYzNzAxNg==", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r450637016", "bodyText": "check valid or throw exception", "author": "caiconghui", "createdAt": "2020-07-07T06:26:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYzMjE0MQ=="}], "type": "inlineReview"}, {"oid": "ae4c78fd2841986e5e4d52e2d3040e3cd23d0cf1", "url": "https://github.com/apache/incubator-doris/commit/ae4c78fd2841986e5e4d52e2d3040e3cd23d0cf1", "message": "fix in predicate str error", "committedDate": "2020-07-28T06:02:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMxOTk4MQ==", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r462319981", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                throw new AnalysisException(\"Right expr of binary predicate should be value\");\n          \n          \n            \n                                throw new AnalysisException(\"Child of in predicate should be value\");", "author": "morningman", "createdAt": "2020-07-29T13:58:45Z", "path": "fe/fe-core/src/main/java/org/apache/doris/analysis/DeleteStmt.java", "diffHunk": "@@ -119,11 +120,29 @@ private void analyzePredicate(Expr predicate) throws AnalysisException {\n             IsNullPredicate isNullPredicate = (IsNullPredicate) predicate;\n             Expr leftExpr = isNullPredicate.getChild(0);\n             if (!(leftExpr instanceof SlotRef)) {\n-                throw new AnalysisException(\"Left expr should be column name\");\n+                throw new AnalysisException(\"Left expr of is_null predicate should be column name\");\n             }\n             deleteConditions.add(isNullPredicate);\n+        } else if (predicate instanceof InPredicate) {\n+            InPredicate inPredicate = (InPredicate) predicate;\n+            Expr leftExpr = inPredicate.getChild(0);\n+            if (!(leftExpr instanceof SlotRef)) {\n+                throw new AnalysisException(\"Left expr of in predicate should be column name\");\n+            }\n+            int inElementNum = inPredicate.getInElementNum();\n+            int maxAllowedInElementNumOfDelete = Config.max_allowed_in_element_num_of_delete;\n+            if (inElementNum > maxAllowedInElementNumOfDelete) {\n+                throw new AnalysisException(\"Element num of in predicate should not be more than \" + maxAllowedInElementNumOfDelete);\n+            }\n+            for (int i = 1; i <= inPredicate.getInElementNum(); i++) {\n+                Expr expr = inPredicate.getChild(i);\n+                if (!(expr instanceof LiteralExpr)) {\n+                    throw new AnalysisException(\"Right expr of binary predicate should be value\");", "originalCommit": "ae4c78fd2841986e5e4d52e2d3040e3cd23d0cf1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMyMDQwMw==", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r462320403", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw new AnalysisException(\"Where clause should be compound or binary predicate or is_null predicate or in predicate\");\n          \n          \n            \n                        throw new AnalysisException(\"Where clause only supports compound predicate, binary predicate, is_null predicate or in predicate\");", "author": "morningman", "createdAt": "2020-07-29T13:59:22Z", "path": "fe/fe-core/src/main/java/org/apache/doris/analysis/DeleteStmt.java", "diffHunk": "@@ -119,11 +120,29 @@ private void analyzePredicate(Expr predicate) throws AnalysisException {\n             IsNullPredicate isNullPredicate = (IsNullPredicate) predicate;\n             Expr leftExpr = isNullPredicate.getChild(0);\n             if (!(leftExpr instanceof SlotRef)) {\n-                throw new AnalysisException(\"Left expr should be column name\");\n+                throw new AnalysisException(\"Left expr of is_null predicate should be column name\");\n             }\n             deleteConditions.add(isNullPredicate);\n+        } else if (predicate instanceof InPredicate) {\n+            InPredicate inPredicate = (InPredicate) predicate;\n+            Expr leftExpr = inPredicate.getChild(0);\n+            if (!(leftExpr instanceof SlotRef)) {\n+                throw new AnalysisException(\"Left expr of in predicate should be column name\");\n+            }\n+            int inElementNum = inPredicate.getInElementNum();\n+            int maxAllowedInElementNumOfDelete = Config.max_allowed_in_element_num_of_delete;\n+            if (inElementNum > maxAllowedInElementNumOfDelete) {\n+                throw new AnalysisException(\"Element num of in predicate should not be more than \" + maxAllowedInElementNumOfDelete);\n+            }\n+            for (int i = 1; i <= inPredicate.getInElementNum(); i++) {\n+                Expr expr = inPredicate.getChild(i);\n+                if (!(expr instanceof LiteralExpr)) {\n+                    throw new AnalysisException(\"Right expr of binary predicate should be value\");\n+                }\n+            }\n+            deleteConditions.add(inPredicate);\n         } else {\n-            throw new AnalysisException(\"Where clause should be compound or binary predicate\");\n+            throw new AnalysisException(\"Where clause should be compound or binary predicate or is_null predicate or in predicate\");", "originalCommit": "ae4c78fd2841986e5e4d52e2d3040e3cd23d0cf1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMyMjQ4NQ==", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r462322485", "bodyText": "Remove unused code", "author": "morningman", "createdAt": "2020-07-29T14:02:13Z", "path": "fe/fe-core/src/main/java/org/apache/doris/load/DeleteHandler.java", "diffHunk": "@@ -507,7 +516,19 @@ private void checkDeleteV2(OlapTable table, Partition partition, List<Predicate>\n                     LiteralExpr.create(value, Type.fromPrimitiveType(column.getDataType()));\n                 } catch (AnalysisException e) {\n                     // ErrorReport.reportDdlException(ErrorCode.ERR_INVALID_VALUE, value);\n-                    throw new DdlException(\"Invalid column value[\" + value + \"]\");\n+                    throw new DdlException(\"Invalid column value[\" + value + \"] for column \" + columnName);\n+                }\n+            } else if (condition instanceof InPredicate) {\n+                String value = null;\n+                try {\n+                    InPredicate inPredicate = (InPredicate) condition;\n+                    for (int i = 1; i <= inPredicate.getInElementNum(); i++) {\n+                        value = ((LiteralExpr) inPredicate.getChild(i)).getStringValue();\n+                        LiteralExpr.create(value, Type.fromPrimitiveType(column.getDataType()));\n+                    }\n+                } catch (AnalysisException e) {\n+                    // ErrorReport.reportDdlException(ErrorCode.ERR_INVALID_VALUE, value);", "originalCommit": "ae4c78fd2841986e5e4d52e2d3040e3cd23d0cf1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQyMDI4Nw==", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r462420287", "bodyText": "done", "author": "caiconghui", "createdAt": "2020-07-29T16:13:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMyMjQ4NQ=="}], "type": "inlineReview"}, {"oid": "c28df3a3101c268c703510283fcf090df8355eb5", "url": "https://github.com/apache/incubator-doris/commit/c28df3a3101c268c703510283fcf090df8355eb5", "message": "small fix", "committedDate": "2020-07-30T02:42:41Z", "type": "forcePushed"}, {"oid": "28085aed599fed7e21cc11883d98f71afbeb086d", "url": "https://github.com/apache/incubator-doris/commit/28085aed599fed7e21cc11883d98f71afbeb086d", "message": "support in predicate in delete", "committedDate": "2020-07-30T05:04:54Z", "type": "commit"}, {"oid": "2b73213d1716c0faa219d065bfa7dcecc6b5c5bb", "url": "https://github.com/apache/incubator-doris/commit/2b73213d1716c0faa219d065bfa7dcecc6b5c5bb", "message": "support in predicate in delete stmt", "committedDate": "2020-07-30T05:04:54Z", "type": "commit"}, {"oid": "e1c81a9cca14a238cd1da30ba5f26d2e017e1454", "url": "https://github.com/apache/incubator-doris/commit/e1c81a9cca14a238cd1da30ba5f26d2e017e1454", "message": "Support in and not in predicate in be delete handler", "committedDate": "2020-07-30T05:04:54Z", "type": "commit"}, {"oid": "4cfbde55339a7da01d9496b1d93da6e88a5cf02f", "url": "https://github.com/apache/incubator-doris/commit/4cfbde55339a7da01d9496b1d93da6e88a5cf02f", "message": "Support delete with in predicate", "committedDate": "2020-07-30T05:04:55Z", "type": "commit"}, {"oid": "dd90e851340e7247ea636a5c169e9740b9c74cd9", "url": "https://github.com/apache/incubator-doris/commit/dd90e851340e7247ea636a5c169e9740b9c74cd9", "message": "remove some unused function and log", "committedDate": "2020-07-30T05:04:55Z", "type": "commit"}, {"oid": "1d98a7f9b79648b222c17f7e7618e952d54eeeed", "url": "https://github.com/apache/incubator-doris/commit/1d98a7f9b79648b222c17f7e7618e952d54eeeed", "message": "Add max_allowed_in_element_num_of_delete variable", "committedDate": "2020-07-30T05:04:55Z", "type": "commit"}, {"oid": "e8739b622918c099a00b995cb3f23ffb29c30b38", "url": "https://github.com/apache/incubator-doris/commit/e8739b622918c099a00b995cb3f23ffb29c30b38", "message": "Add doc content for max_allowed_in_element_num_of_delete variable", "committedDate": "2020-07-30T05:04:55Z", "type": "commit"}, {"oid": "a7387ab5174a60a53d7dd3d8d49c25e936c5a41a", "url": "https://github.com/apache/incubator-doris/commit/a7387ab5174a60a53d7dd3d8d49c25e936c5a41a", "message": "Improve performance of in predicate", "committedDate": "2020-07-30T05:04:55Z", "type": "commit"}, {"oid": "ad93769e2be04b28658b583540f2a117fe9ae240", "url": "https://github.com/apache/incubator-doris/commit/ad93769e2be04b28658b583540f2a117fe9ae240", "message": "Fix bug for in predicate", "committedDate": "2020-07-30T05:04:55Z", "type": "commit"}, {"oid": "b9a1e0dff3f109430ffff7b888be3b655d895509", "url": "https://github.com/apache/incubator-doris/commit/b9a1e0dff3f109430ffff7b888be3b655d895509", "message": "support fast delete filter with in predicate", "committedDate": "2020-07-30T05:04:55Z", "type": "commit"}, {"oid": "8773704a01c3fc6df28252df319a29f23323642e", "url": "https://github.com/apache/incubator-doris/commit/8773704a01c3fc6df28252df319a29f23323642e", "message": "fix", "committedDate": "2020-07-30T05:04:55Z", "type": "commit"}, {"oid": "27108afdbaeb39d2b93b03bb336de3e7b763ffa3", "url": "https://github.com/apache/incubator-doris/commit/27108afdbaeb39d2b93b03bb336de3e7b763ffa3", "message": "fix deletehandler unit test", "committedDate": "2020-07-30T05:04:55Z", "type": "commit"}, {"oid": "722737199ab4addedcada5e968f585b763c7c9bd", "url": "https://github.com/apache/incubator-doris/commit/722737199ab4addedcada5e968f585b763c7c9bd", "message": "add unit test for delete_handler", "committedDate": "2020-07-30T05:04:55Z", "type": "commit"}, {"oid": "e049558e622ed7aff9ef3d2d496ee5ac05982da8", "url": "https://github.com/apache/incubator-doris/commit/e049558e622ed7aff9ef3d2d496ee5ac05982da8", "message": "fix by review", "committedDate": "2020-07-30T05:07:54Z", "type": "commit"}, {"oid": "cafcb4170fa7e6f026219431627f2d31b223ddda", "url": "https://github.com/apache/incubator-doris/commit/cafcb4170fa7e6f026219431627f2d31b223ddda", "message": "remove unused content from docs", "committedDate": "2020-07-30T05:07:54Z", "type": "commit"}, {"oid": "1e7e2a9a167233628750f9e55ecd8fba35c2ff62", "url": "https://github.com/apache/incubator-doris/commit/1e7e2a9a167233628750f9e55ecd8fba35c2ff62", "message": "fix in predicate str error", "committedDate": "2020-07-30T05:07:54Z", "type": "commit"}, {"oid": "4d1c423d5d7872213c3bfe8cf19b8537a67fda85", "url": "https://github.com/apache/incubator-doris/commit/4d1c423d5d7872213c3bfe8cf19b8537a67fda85", "message": "fix by review", "committedDate": "2020-07-30T05:07:54Z", "type": "commit"}, {"oid": "ad3dc45050ba362f0fe971d66ae6312d55ac49ec", "url": "https://github.com/apache/incubator-doris/commit/ad3dc45050ba362f0fe971d66ae6312d55ac49ec", "message": "Add doc content about delete", "committedDate": "2020-07-30T05:07:54Z", "type": "commit"}, {"oid": "7fc8ae429810ced14cc6c084b912749681d5d340", "url": "https://github.com/apache/incubator-doris/commit/7fc8ae429810ced14cc6c084b912749681d5d340", "message": "small fix", "committedDate": "2020-07-30T05:07:54Z", "type": "commit"}, {"oid": "7fc8ae429810ced14cc6c084b912749681d5d340", "url": "https://github.com/apache/incubator-doris/commit/7fc8ae429810ced14cc6c084b912749681d5d340", "message": "small fix", "committedDate": "2020-07-30T05:07:54Z", "type": "forcePushed"}, {"oid": "2777547694b5cfb78149aaf96ed4660ca3eb0bea", "url": "https://github.com/apache/incubator-doris/commit/2777547694b5cfb78149aaf96ed4660ca3eb0bea", "message": "fix unit test failed", "committedDate": "2020-08-01T10:49:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk2MDAzMQ==", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r463960031", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @ConfField(mutable = true, masterOnly = true)\n          \n          \n            \n                @ConfField(mutable = true)\n          \n      \n    \n    \n  \n\nThis is not a \"master only\" config.", "author": "morningman", "createdAt": "2020-08-01T13:00:28Z", "path": "fe/fe-core/src/main/java/org/apache/doris/common/Config.java", "diffHunk": "@@ -1192,4 +1191,11 @@\n      */\n     @ConfField(mutable = true, masterOnly = false)\n     public static int cache_result_max_row_count = 3000;\n+    \n+    /**\n+     * Used to limit element num of InPredicate in delete statement.\n+     */\n+    @ConfField(mutable = true, masterOnly = true)", "originalCommit": "7fc8ae429810ced14cc6c084b912749681d5d340", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk2OTQ1NA==", "url": "https://github.com/apache/incubator-doris/pull/4006#discussion_r463969454", "bodyText": "delete operation need a txn which only master can execute ?", "author": "caiconghui", "createdAt": "2020-08-01T14:55:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk2MDAzMQ=="}], "type": "inlineReview"}, {"oid": "1858a94b0fcbe72748109f5e09134cde21655e5d", "url": "https://github.com/apache/incubator-doris/commit/1858a94b0fcbe72748109f5e09134cde21655e5d", "message": "Change all required to optional for InPredicatePB", "committedDate": "2020-08-03T07:20:20Z", "type": "commit"}, {"oid": "d090f678c34b49bdee76a6c62110139dc2796468", "url": "https://github.com/apache/incubator-doris/commit/d090f678c34b49bdee76a6c62110139dc2796468", "message": "fix be ut failed", "committedDate": "2020-08-03T11:18:52Z", "type": "commit"}]}