{"pr_number": 2958, "pr_title": "Auto Resume RoutineLoadJob", "pr_createdAt": "2020-02-20T12:57:31Z", "pr_url": "https://github.com/apache/incubator-doris/pull/2958", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA0NTYwNg==", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382045606", "bodyText": "Better in English", "author": "morningman", "createdAt": "2020-02-20T14:48:06Z", "path": "fe/src/main/java/org/apache/doris/load/routineload/ScheduleRule.java", "diffHunk": "@@ -0,0 +1,78 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+package org.apache.doris.load.routineload;\n+\n+import org.apache.doris.catalog.Catalog;\n+import org.apache.doris.common.InternalErrorCode;\n+import org.apache.doris.system.SystemInfoService;\n+\n+public class ScheduleRule {\n+\n+    private static int aliveBeCount(String clusterName) {\n+        SystemInfoService systemInfoService = Catalog.getCurrentSystemInfo();\n+        return systemInfoService.getClusterBackendIds(clusterName, true).size();\n+    }\n+    /**\n+     * \u662f\u5426\u5f00\u542f\u81ea\u52a8\u8c03\u5ea6\n+     * \u53ea\u9488\u5bf9\u72b6\u6001\u662fPAUSED JOB \u624d\u9700\u8981\u8fdb\u884c\u5224\u65ad \u5176\u4ed6\u90fd\u8fd4\u56defalse", "originalCommit": "1cf05c8768351ceb28096be9e250374d9e0eec41", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQwMzEwMg==", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382403102", "bodyText": "ok", "author": "worker24h", "createdAt": "2020-02-21T05:25:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA0NTYwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1MjUyOQ==", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382052529", "bodyText": "Code style, { should be after the last line", "author": "morningman", "createdAt": "2020-02-20T14:58:22Z", "path": "fe/src/main/java/org/apache/doris/common/InternalErrorCode.java", "diffHunk": "@@ -0,0 +1,72 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+package org.apache.doris.common;\n+\n+public class InternalErrorCode {\n+    private long code;\n+    private String msg;\n+    public static long NORMAL = 0;\n+\n+    // for common error\n+    public static long IMPOSSIBLE_ERROR_ERR = 1; // \u7528\u4e8e\u4e0d\u53ef\u80fd\u51fa\u73b0\u7684\u9519\u8bef\u7684\u5730\u65b9 \u51fa\u73b0\u4e86\u4e00\u4e2a\u9519\u8bef\n+    public static long INTERNAL_ERR = 2;\n+    public static long REPLICA_FEW_ERR = 3;\n+    public static long PARTITIONS_ERR = 4;\n+    public static long DB_ERR = 5;\n+    public static long TABLE_ERR = 6;\n+    public static long META_NOT_FOUND_ERR = 7;\n+\n+    // for load job error\n+    public static long MANUAL_PAUSE_ERR = 100;\n+    public static long MANUAL_STOP_ERR = 101;\n+    public static long TOO_MANY_FAILURE_ROWS_ERR = 102;\n+    public static long CREATE_TASKS_ERR = 103;\n+    public static long TASKS_ABORT_ERR = 104;\n+\n+    public InternalErrorCode()\n+    {", "originalCommit": "1cf05c8768351ceb28096be9e250374d9e0eec41", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQwMzEzOA==", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382403138", "bodyText": "I changed", "author": "worker24h", "createdAt": "2020-02-21T05:25:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1MjUyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1OTYyMA==", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382059620", "bodyText": "only replicationNum of BE alive is not enough. Consider we have 100 BEs in a cluster, only 3 alive is not enough.\nAnd the replicationNum will because 0 once FE restart or Master changing, cause you don't persist it.\nI didn't think about how many BE alive would be more suitable. Consider we have 100 BEs in a cluster\uff0c97 is alive, but the job may still fail because all replicas of a table may be on that 3 dead BE.\nMaybe we can add a config like min_alive_be_num_for_auto_resume ?\ndefault is 0. And here we judge like:\nmax(quorum of BE, min_alive_be_num_for_auto_resume) ?", "author": "morningman", "createdAt": "2020-02-20T15:09:07Z", "path": "fe/src/main/java/org/apache/doris/load/routineload/ScheduleRule.java", "diffHunk": "@@ -0,0 +1,78 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+package org.apache.doris.load.routineload;\n+\n+import org.apache.doris.catalog.Catalog;\n+import org.apache.doris.common.InternalErrorCode;\n+import org.apache.doris.system.SystemInfoService;\n+\n+public class ScheduleRule {\n+\n+    private static int aliveBeCount(String clusterName) {\n+        SystemInfoService systemInfoService = Catalog.getCurrentSystemInfo();\n+        return systemInfoService.getClusterBackendIds(clusterName, true).size();\n+    }\n+    /**\n+     * \u662f\u5426\u5f00\u542f\u81ea\u52a8\u8c03\u5ea6\n+     * \u53ea\u9488\u5bf9\u72b6\u6001\u662fPAUSED JOB \u624d\u9700\u8981\u8fdb\u884c\u5224\u65ad \u5176\u4ed6\u90fd\u8fd4\u56defalse\n+     * @param jobRoutine\n+     * @return\n+     */\n+    public static boolean isNeedAutoSchedule(RoutineLoadJob jobRoutine) {\n+        if (jobRoutine.state != RoutineLoadJob.JobState.PAUSED) {\n+            return false;\n+        }\n+        if (jobRoutine.autoResumeLock) {//\u8868\u793a\u53ea\u80fd\u624b\u52a8\u6062\u590d\n+            return false;\n+        }\n+        /**\n+         * \u8fd9\u79cd\u9519\u8bef\u662f BE\u6302\u6389\u624d\u4f1a\u51fa\u73b0\u7684\u573a\u666f\n+         * \u589e\u52a0\u8ba1\u6570\u5668\u3001\u6062\u590d\u9501\u5b9a\u529f\u80fd\u4e3b\u8981\u662f\u4e3a\u4e86\u907f\u514d\u65e0\u9650\u5236\u7684\u6062\u590d\n+         */\n+        if (jobRoutine.pauseReason.getCode() == InternalErrorCode.REPLICA_FEW_ERR) {\n+            int alive =  aliveBeCount(jobRoutine.clusterName);\n+            if (alive < jobRoutine.replicationNum) {// be\u5b58\u6d3b\u4e2a\u6570\u5c0f\u4e8e\u6700\u5c0f\u526f\u672c\u6570", "originalCommit": "1cf05c8768351ceb28096be9e250374d9e0eec41", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQwMzIxMQ==", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382403211", "bodyText": "Good idea", "author": "worker24h", "createdAt": "2020-02-21T05:25:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1OTYyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA2MDU3MQ==", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382060571", "bodyText": "Make the 5min configuration. Add it to Config.java.\nAnd I think we should add another config to disable this auto resume feature, in case we've got some bad cases.", "author": "morningman", "createdAt": "2020-02-20T15:10:28Z", "path": "fe/src/main/java/org/apache/doris/load/routineload/ScheduleRule.java", "diffHunk": "@@ -0,0 +1,78 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+package org.apache.doris.load.routineload;\n+\n+import org.apache.doris.catalog.Catalog;\n+import org.apache.doris.common.InternalErrorCode;\n+import org.apache.doris.system.SystemInfoService;\n+\n+public class ScheduleRule {\n+\n+    private static int aliveBeCount(String clusterName) {\n+        SystemInfoService systemInfoService = Catalog.getCurrentSystemInfo();\n+        return systemInfoService.getClusterBackendIds(clusterName, true).size();\n+    }\n+    /**\n+     * \u662f\u5426\u5f00\u542f\u81ea\u52a8\u8c03\u5ea6\n+     * \u53ea\u9488\u5bf9\u72b6\u6001\u662fPAUSED JOB \u624d\u9700\u8981\u8fdb\u884c\u5224\u65ad \u5176\u4ed6\u90fd\u8fd4\u56defalse\n+     * @param jobRoutine\n+     * @return\n+     */\n+    public static boolean isNeedAutoSchedule(RoutineLoadJob jobRoutine) {\n+        if (jobRoutine.state != RoutineLoadJob.JobState.PAUSED) {\n+            return false;\n+        }\n+        if (jobRoutine.autoResumeLock) {//\u8868\u793a\u53ea\u80fd\u624b\u52a8\u6062\u590d\n+            return false;\n+        }\n+        /**\n+         * \u8fd9\u79cd\u9519\u8bef\u662f BE\u6302\u6389\u624d\u4f1a\u51fa\u73b0\u7684\u573a\u666f\n+         * \u589e\u52a0\u8ba1\u6570\u5668\u3001\u6062\u590d\u9501\u5b9a\u529f\u80fd\u4e3b\u8981\u662f\u4e3a\u4e86\u907f\u514d\u65e0\u9650\u5236\u7684\u6062\u590d\n+         */\n+        if (jobRoutine.pauseReason.getCode() == InternalErrorCode.REPLICA_FEW_ERR) {\n+            int alive =  aliveBeCount(jobRoutine.clusterName);\n+            if (alive < jobRoutine.replicationNum) {// be\u5b58\u6d3b\u4e2a\u6570\u5c0f\u4e8e\u6700\u5c0f\u526f\u672c\u6570\n+                return false;\n+            }\n+            if (jobRoutine.firstResumeTimestamp == 0) {//\u8bf4\u660e\u7b2c\u4e00\u6b21\u81ea\u52a8\u6062\u590d\n+                jobRoutine.firstResumeTimestamp = System.currentTimeMillis();\n+                jobRoutine.autoResumeCount = 1;\n+                return true;\n+            } else {\n+                long current = System.currentTimeMillis();\n+                if (current - jobRoutine.firstResumeTimestamp < 5*60*1000) {//\u57285\u5206\u949f\u4e4b\u5185", "originalCommit": "1cf05c8768351ceb28096be9e250374d9e0eec41", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQwMzI2OQ==", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382403269", "bodyText": "I add a configuration for the time", "author": "worker24h", "createdAt": "2020-02-21T05:26:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA2MDU3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA2MzAzNw==", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382063037", "bodyText": "Code style", "author": "morningman", "createdAt": "2020-02-20T15:13:55Z", "path": "fe/src/main/java/org/apache/doris/load/routineload/KafkaRoutineLoadJob.java", "diffHunk": "@@ -299,7 +306,11 @@ protected boolean unprotectNeedReschedule() throws UserException {\n                     return true;\n                 }\n             }\n-        } else {\n+        }", "originalCommit": "1cf05c8768351ceb28096be9e250374d9e0eec41", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQwMzMxMg==", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382403312", "bodyText": "ok", "author": "worker24h", "createdAt": "2020-02-21T05:26:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA2MzAzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA2NzgzMQ==", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382067831", "bodyText": "It is strange to define a \"ErrorCode\" class with a msg in it.\nHow about just leave the \"code\" in InternalErrorCode, without the msg.\nAnd you can put the InternalErrorCode into an Exception class.\nAnd in routine load, you can also define a new class named ErrorReason with an InternalErrorCode and a msg in it.\nIf so, it would be more flexible to use the code everywhere we like.", "author": "morningman", "createdAt": "2020-02-20T15:20:53Z", "path": "fe/src/main/java/org/apache/doris/common/InternalErrorCode.java", "diffHunk": "@@ -0,0 +1,72 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+package org.apache.doris.common;\n+\n+public class InternalErrorCode {", "originalCommit": "1cf05c8768351ceb28096be9e250374d9e0eec41", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU4NTcyOQ==", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382585729", "bodyText": "Why not just using Enum?", "author": "morningman", "createdAt": "2020-02-21T13:40:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA2NzgzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA2ODI2Mg==", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382068262", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static long NORMAL = 0;\n          \n          \n            \n                public static long OK = 0;", "author": "morningman", "createdAt": "2020-02-20T15:21:35Z", "path": "fe/src/main/java/org/apache/doris/common/InternalErrorCode.java", "diffHunk": "@@ -0,0 +1,72 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+package org.apache.doris.common;\n+\n+public class InternalErrorCode {\n+    private long code;\n+    private String msg;\n+    public static long NORMAL = 0;", "originalCommit": "1cf05c8768351ceb28096be9e250374d9e0eec41", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQwMzM2MQ==", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382403361", "bodyText": "ok", "author": "worker24h", "createdAt": "2020-02-21T05:26:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA2ODI2Mg=="}], "type": "inlineReview"}, {"oid": "d00fb67bb5a6caee35bf9f1472e4d3fd2eafc4cd", "url": "https://github.com/apache/incubator-doris/commit/d00fb67bb5a6caee35bf9f1472e4d3fd2eafc4cd", "message": "Auto Resume RoutineLoadJob", "committedDate": "2020-02-21T12:49:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU4NDkyNw==", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382584927", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @ConfField(mutable = true)\n          \n          \n            \n                @ConfField(mutable = true, masterOnly = true)", "author": "morningman", "createdAt": "2020-02-21T13:38:50Z", "path": "fe/src/main/java/org/apache/doris/common/Config.java", "diffHunk": "@@ -999,5 +999,16 @@\n      */\n     @ConfField\n     public static boolean check_java_version = true;\n+\n+    \n+    @ConfField(mutable = true)", "originalCommit": "d00fb67bb5a6caee35bf9f1472e4d3fd2eafc4cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU4NTAyMg==", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382585022", "bodyText": "Also add comment for this config. Better to tell the user the best practice to set its value.", "author": "morningman", "createdAt": "2020-02-21T13:39:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU4NDkyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU4NjE2MQ==", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382586161", "bodyText": "English", "author": "morningman", "createdAt": "2020-02-21T13:41:32Z", "path": "fe/src/main/java/org/apache/doris/load/routineload/RoutineLoadJob.java", "diffHunk": "@@ -173,8 +175,12 @@ public boolean isFinalState() {\n     protected int currentTaskConcurrentNum;\n     protected RoutineLoadProgress progress;\n \n-    protected String pauseReason = \"\";\n-    protected String cancelReason = \"\";\n+    protected long firstResumeTimestamp; //\u7b2c\u4e00\u6b21\u6062\u590d\u65f6\u95f4\u6233", "originalCommit": "d00fb67bb5a6caee35bf9f1472e4d3fd2eafc4cd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU4NzAzMg==", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382587032", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    }catch (Exception e) {\n          \n          \n            \n                    } catch (Exception e) {", "author": "morningman", "createdAt": "2020-02-21T13:43:25Z", "path": "fe/src/main/java/org/apache/doris/load/routineload/RoutineLoadTaskScheduler.java", "diffHunk": "@@ -130,10 +131,15 @@ private void scheduleOneTask(RoutineLoadTaskInfo routineLoadTaskInfo) throws Exc\n                 // allocate failed, push it back to the queue to wait next scheduling\n                 needScheduleTasksQueue.put(routineLoadTaskInfo);\n             }\n-        } catch (Exception e) {\n+        } catch (UserException e) {\n+            routineLoadManager.getJob(routineLoadTaskInfo.getJobId()).\n+                    updateState(JobState.PAUSED,\n+                    new ErrorReason(e.getErrorCode().getCode(), e.getMessage()), false);\n+            throw e;\n+        }catch (Exception e) {", "originalCommit": "d00fb67bb5a6caee35bf9f1472e4d3fd2eafc4cd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU4NzI2OQ==", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382587269", "bodyText": "Add some comments for this class", "author": "morningman", "createdAt": "2020-02-21T13:43:50Z", "path": "fe/src/main/java/org/apache/doris/load/routineload/ScheduleRule.java", "diffHunk": "@@ -0,0 +1,81 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+package org.apache.doris.load.routineload;\n+\n+import org.apache.doris.catalog.Catalog;\n+import org.apache.doris.common.Config;\n+import org.apache.doris.common.InternalErrorCode;\n+import org.apache.doris.system.SystemInfoService;\n+\n+public class ScheduleRule {", "originalCommit": "d00fb67bb5a6caee35bf9f1472e4d3fd2eafc4cd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU4NzM0Nw==", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382587347", "bodyText": "English", "author": "morningman", "createdAt": "2020-02-21T13:44:01Z", "path": "fe/src/main/java/org/apache/doris/load/routineload/ScheduleRule.java", "diffHunk": "@@ -0,0 +1,81 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+package org.apache.doris.load.routineload;\n+\n+import org.apache.doris.catalog.Catalog;\n+import org.apache.doris.common.Config;\n+import org.apache.doris.common.InternalErrorCode;\n+import org.apache.doris.system.SystemInfoService;\n+\n+public class ScheduleRule {\n+\n+    private static int aliveBeCount(String clusterName) {\n+        SystemInfoService systemInfoService = Catalog.getCurrentSystemInfo();\n+        return systemInfoService.getClusterBackendIds(clusterName, true).size();\n+    }\n+\n+    /**\n+     * check if RoutineLoadJob is auto schedule\n+     * @param jobRoutine\n+     * @return\n+     */\n+    public static boolean isNeedAutoSchedule(RoutineLoadJob jobRoutine) {\n+        if (jobRoutine.state != RoutineLoadJob.JobState.PAUSED) {\n+            return false;\n+        }\n+        if (jobRoutine.autoResumeLock) {//only manual resume for unlock\n+            return false;\n+        }\n+        /**\n+         * \u8fd9\u79cd\u9519\u8bef\u662f BE\u6302\u6389\u624d\u4f1a\u51fa\u73b0\u7684\u573a\u666f", "originalCommit": "d00fb67bb5a6caee35bf9f1472e4d3fd2eafc4cd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "59b5e2c881ca139b1e0fbc31b481396bc1cad715", "url": "https://github.com/apache/incubator-doris/commit/59b5e2c881ca139b1e0fbc31b481396bc1cad715", "message": "Auto Resume RoutineLoadJob", "committedDate": "2020-02-22T13:46:37Z", "type": "forcePushed"}, {"oid": "ecfd0847e0ba9483dd66a08fc73971dacd504595", "url": "https://github.com/apache/incubator-doris/commit/ecfd0847e0ba9483dd66a08fc73971dacd504595", "message": "Auto Resume RoutineLoadJob", "committedDate": "2020-02-22T14:14:24Z", "type": "forcePushed"}, {"oid": "a57736b4569475b8c605a02c92502ae922024623", "url": "https://github.com/apache/incubator-doris/commit/a57736b4569475b8c605a02c92502ae922024623", "message": "Auto Resume RoutineLoadJob", "committedDate": "2020-02-27T06:59:21Z", "type": "forcePushed"}, {"oid": "f192cf4b936c2a83fd5248c4f299a63a56d2fbe4", "url": "https://github.com/apache/incubator-doris/commit/f192cf4b936c2a83fd5248c4f299a63a56d2fbe4", "message": "Auto Resume RoutineLoadJob", "committedDate": "2020-02-27T07:12:54Z", "type": "forcePushed"}, {"oid": "8d3cfa005587c1bc943a1b26383cbbfeae935465", "url": "https://github.com/apache/incubator-doris/commit/8d3cfa005587c1bc943a1b26383cbbfeae935465", "message": "Auto Resume RoutineLoadJob", "committedDate": "2020-02-27T14:43:42Z", "type": "commit"}, {"oid": "0f10e9322f614e0dc9fc201f14c08f55738efe2b", "url": "https://github.com/apache/incubator-doris/commit/0f10e9322f614e0dc9fc201f14c08f55738efe2b", "message": "FixBug: Access follower node by web is exception", "committedDate": "2020-02-27T14:43:42Z", "type": "forcePushed"}, {"oid": "8d3cfa005587c1bc943a1b26383cbbfeae935465", "url": "https://github.com/apache/incubator-doris/commit/8d3cfa005587c1bc943a1b26383cbbfeae935465", "message": "Auto Resume RoutineLoadJob", "committedDate": "2020-02-27T14:43:42Z", "type": "forcePushed"}]}