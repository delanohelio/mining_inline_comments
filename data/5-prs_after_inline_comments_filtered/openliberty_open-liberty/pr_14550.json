{"pr_number": 14550, "pr_title": "Release Configs on App Shutdown", "pr_createdAt": "2020-10-19T17:46:49Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/14550", "timeline": [{"oid": "1854bae1938bafc46dbbaacde44757d04f05823c", "url": "https://github.com/OpenLiberty/open-liberty/commit/1854bae1938bafc46dbbaacde44757d04f05823c", "message": "Release Configs on App Shutdown", "committedDate": "2020-10-19T17:49:17Z", "type": "forcePushed"}, {"oid": "7ea874e1da68dd7d9fc870223b71f3ca82a60afb", "url": "https://github.com/OpenLiberty/open-liberty/commit/7ea874e1da68dd7d9fc870223b71f3ca82a60afb", "message": "Simplify cache and enable existing FAT tests to work with SmallRye", "committedDate": "2020-10-20T13:26:03Z", "type": "forcePushed"}, {"oid": "6774c3af1fc0e0d8bbb65433ce1a1db0beee7b84", "url": "https://github.com/OpenLiberty/open-liberty/commit/6774c3af1fc0e0d8bbb65433ce1a1db0beee7b84", "message": "Simplify cache and enable existing FAT tests to work with SmallRye", "committedDate": "2020-10-20T13:34:34Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODUxMzEzMw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14550#discussion_r508513133", "bodyText": "Map.computeIfAbsent would be nicer here", "author": "Azquelt", "createdAt": "2020-10-20T13:41:16Z", "path": "dev/io.openliberty.io.smallrye.config/src/io/openliberty/microprofile/config/internal/extension/OLSmallRyeConfigProviderResolver.java", "diffHunk": "@@ -45,4 +68,103 @@ public SmallRyeConfigBuilder getBuilder() {\n         return new OLSmallRyeConfigBuilder().addDefaultInterceptors();\n     }\n \n+    @Override\n+    public void registerConfig(Config config, ClassLoader classLoader) {\n+        super.registerConfig(config, classLoader);\n+        registerConfig(config, classLoader, getApplicationName());\n+    }\n+\n+    /** {@inheritDoc} */\n+    @Override\n+    public Config getConfig(ClassLoader classLoader) {\n+        Config config = super.getConfig(classLoader);\n+        registerConfig(config, classLoader, getApplicationName());\n+\n+        return config;\n+    }\n+\n+    /**\n+     * Register this config as associated with this classloader and in use by this app\n+     *\n+     * @param config\n+     * @param classLoader\n+     * @param applicationName\n+     */\n+    private void registerConfig(Config config, ClassLoader classLoader, String applicationName) {\n+        synchronized (this.configCache) {\n+            ConfigWrapper wrapper = this.configCache.get(config);\n+            if (wrapper == null) {\n+                //create a new ConfigWrapper and put it in the cache\n+                wrapper = new ConfigWrapper(config);\n+                this.configCache.put(config, wrapper);\n+            }", "originalCommit": "6774c3af1fc0e0d8bbb65433ce1a1db0beee7b84", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODUxNzkzMg==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14550#discussion_r508517932", "bodyText": "Did you mean to keep this debug output? If you want to see what was in the cache in the failing case, it might be preferable to extract the whole map and then assert its size with a matcher - this should result in the map contents being included in the failure message.", "author": "Azquelt", "createdAt": "2020-10-20T13:46:29Z", "path": "dev/com.ibm.ws.microprofile.config.1.1_fat/test-applications/classLoaderCache.war/src/com/ibm/ws/microprofile/appConfig/classLoaderCache/test/ClassLoaderCacheTestServlet.java", "diffHunk": "@@ -68,4 +70,24 @@ private static ClassLoader getRootClassLoader() {\n         System.out.println(\"Root ClassLoader: \" + rootCL);\n         return rootCL;\n     }\n+\n+    private int getConfigCacheSize(ConfigProviderResolver resolver) throws IllegalAccessException, IllegalArgumentException, InvocationTargetException, NoSuchFieldException, SecurityException {\n+        int size = -1;\n+        try {\n+            Method getConfigCacheSizeMethod = resolver.getClass().getMethod(\"getConfigCacheSize\");\n+            size = (int) getConfigCacheSizeMethod.invoke(resolver);\n+        } catch (NoSuchMethodException e) {\n+            Field configsForClassLoaderField = resolver.getClass().getSuperclass().getDeclaredField(\"configsForClassLoader\");\n+            configsForClassLoaderField.setAccessible(true);\n+            @SuppressWarnings(\"unchecked\")\n+            Map<ClassLoader, Config> configsForClassLoader = (Map<ClassLoader, Config>) configsForClassLoaderField.get(resolver);\n+            size = configsForClassLoader.size();\n+\n+            for (Map.Entry<ClassLoader, Config> entry : configsForClassLoader.entrySet()) {\n+                System.out.println(\"CL: \" + entry.getKey() + \" Config: \" + entry.getValue());\n+            }", "originalCommit": "6774c3af1fc0e0d8bbb65433ce1a1db0beee7b84", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODUxODQ3NQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14550#discussion_r508518475", "bodyText": "Can we have comments so that we know which implementation classes this reflection is designed to act upon?", "author": "Azquelt", "createdAt": "2020-10-20T13:47:09Z", "path": "dev/com.ibm.ws.microprofile.config.1.1_fat/test-applications/classLoaderCache.war/src/com/ibm/ws/microprofile/appConfig/classLoaderCache/test/ClassLoaderCacheTestServlet.java", "diffHunk": "@@ -68,4 +70,24 @@ private static ClassLoader getRootClassLoader() {\n         System.out.println(\"Root ClassLoader: \" + rootCL);\n         return rootCL;\n     }\n+\n+    private int getConfigCacheSize(ConfigProviderResolver resolver) throws IllegalAccessException, IllegalArgumentException, InvocationTargetException, NoSuchFieldException, SecurityException {\n+        int size = -1;\n+        try {\n+            Method getConfigCacheSizeMethod = resolver.getClass().getMethod(\"getConfigCacheSize\");\n+            size = (int) getConfigCacheSizeMethod.invoke(resolver);\n+        } catch (NoSuchMethodException e) {\n+            Field configsForClassLoaderField = resolver.getClass().getSuperclass().getDeclaredField(\"configsForClassLoader\");\n+            configsForClassLoaderField.setAccessible(true);\n+            @SuppressWarnings(\"unchecked\")\n+            Map<ClassLoader, Config> configsForClassLoader = (Map<ClassLoader, Config>) configsForClassLoaderField.get(resolver);\n+            size = configsForClassLoader.size();", "originalCommit": "6774c3af1fc0e0d8bbb65433ce1a1db0beee7b84", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a91d67ac2854d2b8cfc5209ad9d15c169a8b64d5", "url": "https://github.com/OpenLiberty/open-liberty/commit/a91d67ac2854d2b8cfc5209ad9d15c169a8b64d5", "message": "Release Configs on App Shutdown", "committedDate": "2020-10-20T15:30:24Z", "type": "commit"}, {"oid": "ba47c69dee2c55ab690f6bb6be2d4b60588598c5", "url": "https://github.com/OpenLiberty/open-liberty/commit/ba47c69dee2c55ab690f6bb6be2d4b60588598c5", "message": "Simplify cache and enable existing FAT tests to work with SmallRye", "committedDate": "2020-10-20T15:30:24Z", "type": "commit"}, {"oid": "ba47c69dee2c55ab690f6bb6be2d4b60588598c5", "url": "https://github.com/OpenLiberty/open-liberty/commit/ba47c69dee2c55ab690f6bb6be2d4b60588598c5", "message": "Simplify cache and enable existing FAT tests to work with SmallRye", "committedDate": "2020-10-20T15:30:24Z", "type": "forcePushed"}]}