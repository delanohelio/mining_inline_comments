{"pr_number": 14182, "pr_title": "Ensure restfulWSClient-3.0 feature works", "pr_createdAt": "2020-09-26T03:26:06Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/14182", "timeline": [{"oid": "871a8bcb757624e751ec12d1cd9bb759234e9947", "url": "https://github.com/OpenLiberty/open-liberty/commit/871a8bcb757624e751ec12d1cd9bb759234e9947", "message": "Ensure restfulWSClient-3.0 feature works\n\nFor now the restfulWSClient will load everything that the server does\n- eventually we will split this up better.", "committedDate": "2020-09-29T17:30:17Z", "type": "forcePushed"}, {"oid": "b32e7e75498421e8d7dc10f6354fe815dc258b82", "url": "https://github.com/OpenLiberty/open-liberty/commit/b32e7e75498421e8d7dc10f6354fe815dc258b82", "message": "Ensure restfulWSClient-3.0 feature works", "committedDate": "2020-10-09T21:17:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY4MDkzNA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14182#discussion_r502680934", "bodyText": "\"ANDY\"", "author": "WhiteCat22", "createdAt": "2020-10-09T21:33:37Z", "path": "dev/io.openliberty.org.jboss.resteasy.common/src/io/openliberty/restfulWS/config/ConfigImpl.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package io.openliberty.restfulWS.config;\n+\n+import java.security.AccessController;\n+import java.security.PrivilegedAction;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.Set;\n+\n+import org.eclipse.microprofile.config.Config;\n+import org.eclipse.microprofile.config.spi.ConfigSource;\n+\n+public class ConfigImpl implements Config {\n+    private final Set<ConfigSource> configSources = Collections.singleton(new ConfigSourceImpl(this));\n+    private final Map<String, String> configProperties = new HashMap<>();\n+\n+    ConfigImpl() {\n+        if (ConfigProviderResolverImpl.java2SecurityEnabled) {\n+            AccessController.doPrivileged((PrivilegedAction<Void>) () -> {\n+                for (Object key : System.getProperties().keySet()) {\n+                    configProperties.put((String) key, System.getProperty((String)key));\n+                }\n+                return null;\n+            });\n+        }\n+        for (Object key : System.getProperties().keySet()) {\n+            configProperties.put((String) key, System.getProperty((String)key));\n+        }\n+    }\n+\n+    @Override\n+    public Iterable<ConfigSource> getConfigSources() {\n+        new Throwable(\"ANDY: Config.getConfigSources\").printStackTrace();", "originalCommit": "b32e7e75498421e8d7dc10f6354fe815dc258b82", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY4MTM4OQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14182#discussion_r502681389", "bodyText": "ANDY", "author": "WhiteCat22", "createdAt": "2020-10-09T21:34:57Z", "path": "dev/io.openliberty.org.jboss.resteasy.common/src/io/openliberty/restfulWS/config/ConfigProviderResolverImpl.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package io.openliberty.restfulWS.config;\n+\n+import java.security.AccessController;\n+import java.security.PrivilegedAction;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.WeakHashMap;\n+\n+import org.eclipse.microprofile.config.Config;\n+import org.eclipse.microprofile.config.spi.ConfigBuilder;\n+import org.eclipse.microprofile.config.spi.ConfigProviderResolver;\n+\n+public class ConfigProviderResolverImpl extends ConfigProviderResolver {\n+    \n+    static final boolean java2SecurityEnabled = System.getSecurityManager() != null;\n+\n+    static String getSysProp(String propName) {\n+        if (java2SecurityEnabled) {\n+            return AccessController.doPrivileged((PrivilegedAction<String>) () ->\n+                System.getProperty(propName));\n+        }\n+        return System.getProperty(propName);\n+    }\n+\n+    private static ClassLoader getThreadContextClassLoader() {\n+        if (java2SecurityEnabled) {\n+            return AccessController.doPrivileged((PrivilegedAction<ClassLoader>) () ->\n+                Thread.currentThread().getContextClassLoader());\n+        }\n+        return Thread.currentThread().getContextClassLoader();\n+    }\n+\n+    private static ClassLoader getParentClassLoader(ClassLoader loader) {\n+        if (java2SecurityEnabled) {\n+            return AccessController.doPrivileged((PrivilegedAction<ClassLoader>) () ->\n+                loader.getParent());\n+        }\n+        return loader.getParent();\n+    }\n+\n+    private final Map<ClassLoader, Config> configs = new WeakHashMap<>();\n+\n+    @Override\n+    public ConfigBuilder getBuilder() {\n+        new Throwable(\"ANDY: ConfigProviderResolverImpl.getBuilder\").printStackTrace();", "originalCommit": "b32e7e75498421e8d7dc10f6354fe815dc258b82", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY4MTQ0Mw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14182#discussion_r502681443", "bodyText": "ANDY", "author": "WhiteCat22", "createdAt": "2020-10-09T21:35:06Z", "path": "dev/io.openliberty.org.jboss.resteasy.common/src/io/openliberty/restfulWS/config/ConfigSourceImpl.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package io.openliberty.restfulWS.config;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.eclipse.microprofile.config.Config;\n+import org.eclipse.microprofile.config.spi.ConfigSource;\n+\n+public class ConfigSourceImpl implements ConfigSource {\n+    static final boolean java2SecurityEnabled = System.getSecurityManager() != null;\n+    private final Config config;\n+    \n+    ConfigSourceImpl(Config config) {\n+        this.config = config;\n+    }\n+    @Override\n+    public String getName() {\n+        new Throwable(\"ANDY: ConfigSourceImpl.getName\").printStackTrace();", "originalCommit": "b32e7e75498421e8d7dc10f6354fe815dc258b82", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "140c0ff6559891ada8b9a82916bbf8bec4510191", "url": "https://github.com/OpenLiberty/open-liberty/commit/140c0ff6559891ada8b9a82916bbf8bec4510191", "message": "Ensure restfulWSClient-3.0 feature works", "committedDate": "2020-10-09T21:39:32Z", "type": "forcePushed"}, {"oid": "a74f20ddcec9b39d2580fc01c1a31d3d2c92afe1", "url": "https://github.com/OpenLiberty/open-liberty/commit/a74f20ddcec9b39d2580fc01c1a31d3d2c92afe1", "message": "Ensure restfulWSClient-3.0 feature works", "committedDate": "2020-10-12T14:27:33Z", "type": "commit"}, {"oid": "cace74fe239ed42eac4f2cc111d6a050e0a1ca9b", "url": "https://github.com/OpenLiberty/open-liberty/commit/cace74fe239ed42eac4f2cc111d6a050e0a1ca9b", "message": "Switch to use `mail-2.0` feature and move that to beta", "committedDate": "2020-10-12T14:27:33Z", "type": "forcePushed"}, {"oid": "d77e660110594f6305f46f0f239b4051f83eac87", "url": "https://github.com/OpenLiberty/open-liberty/commit/d77e660110594f6305f46f0f239b4051f83eac87", "message": "Switch to use `mail-2.0` feature and move that to beta", "committedDate": "2020-10-12T15:07:52Z", "type": "forcePushed"}, {"oid": "2ae8a075853c524a51daa9b525dc057b8935207f", "url": "https://github.com/OpenLiberty/open-liberty/commit/2ae8a075853c524a51daa9b525dc057b8935207f", "message": "Switch to use `mail-2.0` feature and move that to beta", "committedDate": "2020-10-12T21:46:52Z", "type": "commit"}, {"oid": "2ae8a075853c524a51daa9b525dc057b8935207f", "url": "https://github.com/OpenLiberty/open-liberty/commit/2ae8a075853c524a51daa9b525dc057b8935207f", "message": "Switch to use `mail-2.0` feature and move that to beta", "committedDate": "2020-10-12T21:46:52Z", "type": "forcePushed"}]}