{"pr_number": 10716, "pr_title": "Enable postgres and sqlserver tests where able", "pr_createdAt": "2020-02-04T01:27:24Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/10716", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQzNTQ2Ng==", "url": "https://github.com/OpenLiberty/open-liberty/pull/10716#discussion_r374435466", "bodyText": "We no longer test against Informix so this logic can be cut out.", "author": "KyleAure", "createdAt": "2020-02-04T01:41:06Z", "path": "dev/com.ibm.ws.jdbc_fat/test-applications/basicfat/src/basicfat/DataSourceTestServlet.java", "diffHunk": "@@ -215,20 +215,36 @@\n      * Create the default table used by the tests.\n      */\n     private void createTable(DataSource ds) throws SQLException {\n-        Connection con = ds.getConnection();\n-        try {\n-            Statement st = con.createStatement();\n-            try {\n-                st.executeUpdate(\"drop table cities\");\n-            } catch (SQLException x) {\n+        try (Connection con = ds.getConnection()) {\n+            //See if cities table was already created\n+            DatabaseMetaData md = con.getMetaData();\n+            boolean tableFound = false;\n+            ResultSet rs = md.getTables(null, null, \"CITIES\", null); // Some DB providers require the table name in all upper case\n+            while (rs.next()) {\n+                if (rs.getString(\"TABLE_NAME\").equalsIgnoreCase(\"cities\")) {\n+                    tableFound = true;\n+                }\n+            }\n+\n+            if (!tableFound) {\n+                rs = md.getTables(null, null, \"cities\", null); // Other DB providers require the table name in all lower case\n+                while (rs.next()) {\n+                    if (rs.getString(\"TABLE_NAME\").equalsIgnoreCase(\"cities\")) {\n+                        tableFound = true;\n+                    }\n+                }\n+            }\n+\n+            try (Statement st = con.createStatement()) {\n+                if (tableFound) {\n+                    st.executeUpdate(\"drop table cities\");\n+                }\n+                String dbProductName = md.getDatabaseProductName().toUpperCase();\n+                if (dbProductName.contains(\"IDS\") || dbProductName.contains(\"INFORMIX\")) // Informix JCC and JDBC", "originalCommit": "7d9afef829ee4c1cb0d9435f934c60abcc2cb2ec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQzNjY4Mw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/10716#discussion_r374436683", "bodyText": "There are multiple places where Informix is referenced.  Should I remove them all in DataSourceTestServlet, or just the one you highlighted?", "author": "gjwatts", "createdAt": "2020-02-04T01:46:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQzNTQ2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDcxNjIzNw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/10716#discussion_r374716237", "bodyText": "Yeah we can remove anything that references Informix in this test bucket.  But, that can be done in a future commit.", "author": "KyleAure", "createdAt": "2020-02-04T14:52:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQzNTQ2Ng=="}], "type": "inlineReview"}, {"oid": "64ff25073bb71d00e289fde0c1d9d7e6cd6342fc", "url": "https://github.com/OpenLiberty/open-liberty/commit/64ff25073bb71d00e289fde0c1d9d7e6cd6342fc", "message": "Enable some Postgres test buckets\n\nPostgres fails in testXARecovery()\n\nPostgres fails in testXARecovery()\n\nTwo stalled SQLServer issues, one Postgres issue\n\nPostgres testing update, Kyle will finish", "committedDate": "2020-02-04T17:37:14Z", "type": "commit"}, {"oid": "64ff25073bb71d00e289fde0c1d9d7e6cd6342fc", "url": "https://github.com/OpenLiberty/open-liberty/commit/64ff25073bb71d00e289fde0c1d9d7e6cd6342fc", "message": "Enable some Postgres test buckets\n\nPostgres fails in testXARecovery()\n\nPostgres fails in testXARecovery()\n\nTwo stalled SQLServer issues, one Postgres issue\n\nPostgres testing update, Kyle will finish", "committedDate": "2020-02-04T17:37:14Z", "type": "forcePushed"}]}