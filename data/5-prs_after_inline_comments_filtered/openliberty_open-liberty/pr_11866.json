{"pr_number": 11866, "pr_title": "Fix single metric query for Prometheus format", "pr_createdAt": "2020-04-21T02:46:00Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/11866", "timeline": [{"oid": "9c7e9a5ec7394dce5e4b1a10fe6a178c8fc623ed", "url": "https://github.com/OpenLiberty/open-liberty/commit/9c7e9a5ec7394dce5e4b1a10fe6a178c8fc623ed", "message": "Fix single metric query for Prometheus format", "committedDate": "2020-04-21T02:44:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ3Njk0MA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11866#discussion_r412476940", "bodyText": "Should the empty check on crrentMetricMap move to line 114.  If it is empty, you don't need to compute description, unit, conversionFactory etc.", "author": "fmhwong", "createdAt": "2020-04-21T20:41:40Z", "path": "dev/com.ibm.ws.microprofile.metrics.2.0/src/com/ibm/ws/microprofile/metrics/writer/PrometheusMetricWriter.java", "diffHunk": "@@ -123,7 +123,10 @@ protected void writeMetricMapAsPrometheus(StringBuilder builder, String registry\n             double conversionFactor = conversionAppendEntry.getValue();\n             String appendUnit = conversionAppendEntry.getKey();\n \n-            if (metricMetadata.getTypeRaw().equals(MetricType.COUNTER)) {\n+            //If current metadata that we are parsing does not have a matching metric... skip\n+            if (currentMetricMap.isEmpty()) {", "originalCommit": "9c7e9a5ec7394dce5e4b1a10fe6a178c8fc623ed", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ3NzUwNg==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11866#discussion_r412477506", "bodyText": "Should the empty check on crrentMetricMap move to line 56. If it is empty, you don't need to compute description, unit, conversionFactory etc.", "author": "fmhwong", "createdAt": "2020-04-21T20:42:41Z", "path": "dev/com.ibm.ws.microprofile.metrics.2.3/src/com/ibm/ws/microprofile/metrics23/writer/PrometheusMetricWriter23.java", "diffHunk": "@@ -66,7 +66,10 @@ protected void writeMetricMapAsPrometheus(StringBuilder builder, String registry\n             double conversionFactor = conversionAppendEntry.getValue();\n             String appendUnit = conversionAppendEntry.getKey();\n \n-            if (metricMetadata.getTypeRaw().equals(MetricType.COUNTER)) {\n+            //If current metadata that we are parsing does not have a matching metric... skip\n+            if (currentMetricMap.isEmpty()) {", "originalCommit": "9c7e9a5ec7394dce5e4b1a10fe6a178c8fc623ed", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk3ODU4NQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11866#discussion_r413978585", "bodyText": "Uncomment the if statement", "author": "fmhwong", "createdAt": "2020-04-23T17:16:47Z", "path": "dev/com.ibm.ws.microprofile.metrics.2.3/src/com/ibm/ws/microprofile/metrics23/writer/PrometheusMetricWriter23.java", "diffHunk": "@@ -66,10 +70,7 @@ protected void writeMetricMapAsPrometheus(StringBuilder builder, String registry\n             double conversionFactor = conversionAppendEntry.getValue();\n             String appendUnit = conversionAppendEntry.getKey();\n \n-            //If current metadata that we are parsing does not have a matching metric... skip\n-            if (currentMetricMap.isEmpty()) {\n-                continue;\n-            } else if (metricMetadata.getTypeRaw().equals(MetricType.COUNTER)) {\n+            //if (metricMetadata.getTypeRaw().equals(MetricType.COUNTER)) {", "originalCommit": "cbf94acccfcc21467ff0ea34d767f0881ece43f8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk5MzIwNg==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11866#discussion_r413993206", "bodyText": "ah right, may have pushed that commit a little bit late in the day :D", "author": "Channyboy", "createdAt": "2020-04-23T17:38:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk3ODU4NQ=="}], "type": "inlineReview"}, {"oid": "c12fde8ffee07f8e5cbacf4c75a312d50abed7b5", "url": "https://github.com/OpenLiberty/open-liberty/commit/c12fde8ffee07f8e5cbacf4c75a312d50abed7b5", "message": "refactor to move if check further up", "committedDate": "2020-04-23T17:36:23Z", "type": "commit"}, {"oid": "c12fde8ffee07f8e5cbacf4c75a312d50abed7b5", "url": "https://github.com/OpenLiberty/open-liberty/commit/c12fde8ffee07f8e5cbacf4c75a312d50abed7b5", "message": "refactor to move if check further up", "committedDate": "2020-04-23T17:36:23Z", "type": "forcePushed"}]}