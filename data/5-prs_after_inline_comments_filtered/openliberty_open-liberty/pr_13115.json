{"pr_number": 13115, "pr_title": "launch wab module uninstall async", "pr_createdAt": "2020-07-21T09:46:08Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/13115", "timeline": [{"oid": "adcab428341dbf98723b83a7507daa392b51a112", "url": "https://github.com/OpenLiberty/open-liberty/commit/adcab428341dbf98723b83a7507daa392b51a112", "message": "launch wab module uninstall async", "committedDate": "2020-07-21T09:44:31Z", "type": "commit"}, {"oid": "26c59f15133765ba46c09bc7d17efe11d02a811f", "url": "https://github.com/OpenLiberty/open-liberty/commit/26c59f15133765ba46c09bc7d17efe11d02a811f", "message": "File-headers/comments updated", "committedDate": "2020-07-21T18:35:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM3MjUzOA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13115#discussion_r458372538", "bodyText": "should use ctx.getBundle(org.osgi.framework.Constants.SYSTEM_BUNDLE_LOCATION) instead of bundle ID 0 here to avoid calling of region framework hooks.", "author": "tjwatson", "createdAt": "2020-07-21T20:36:58Z", "path": "dev/com.ibm.ws.app.manager.wab/src/com/ibm/ws/app/manager/wab/internal/WABInstaller.java", "diffHunk": "@@ -568,9 +577,33 @@ protected boolean uninstallFromWebContainer(WAB wab) {\n                             wabGroupsLock.unlock();\n                         }\n                         if (wab.getCreatedApplicationInfo()) {\n+                            // system WABs get uninstalled here\n                             deployedApp.uninstallApp(wab);\n                         } else {\n-                            deployedApp.uninstallModule(wab);\n+                            final CountDownLatch latch = new CountDownLatch(1);\n+                            if (ctx.getBundle(0).getState() == Bundle.STOPPING) {", "originalCommit": "26c59f15133765ba46c09bc7d17efe11d02a811f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM3NDI1MA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13115#discussion_r458374250", "bodyText": "The latch is only used inside the following if.  Would be better to only construct it inside the if.", "author": "tjwatson", "createdAt": "2020-07-21T20:40:09Z", "path": "dev/com.ibm.ws.app.manager.wab/src/com/ibm/ws/app/manager/wab/internal/WABInstaller.java", "diffHunk": "@@ -568,9 +577,33 @@ protected boolean uninstallFromWebContainer(WAB wab) {\n                             wabGroupsLock.unlock();\n                         }\n                         if (wab.getCreatedApplicationInfo()) {\n+                            // system WABs get uninstalled here\n                             deployedApp.uninstallApp(wab);\n                         } else {\n-                            deployedApp.uninstallModule(wab);\n+                            final CountDownLatch latch = new CountDownLatch(1);", "originalCommit": "26c59f15133765ba46c09bc7d17efe11d02a811f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM3ODAxMQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13115#discussion_r458378011", "bodyText": "Typically the best practice is to do the following when you catch the InterruptedException and don't want to propagate any errors:\nThread.currentThread().interrupt();\n\nThis is to keep the thread interrupted so that anything else doing work has to exit quickly also.", "author": "tjwatson", "createdAt": "2020-07-21T20:47:38Z", "path": "dev/com.ibm.ws.app.manager.wab/src/com/ibm/ws/app/manager/wab/internal/WABInstaller.java", "diffHunk": "@@ -568,9 +577,33 @@ protected boolean uninstallFromWebContainer(WAB wab) {\n                             wabGroupsLock.unlock();\n                         }\n                         if (wab.getCreatedApplicationInfo()) {\n+                            // system WABs get uninstalled here\n                             deployedApp.uninstallApp(wab);\n                         } else {\n-                            deployedApp.uninstallModule(wab);\n+                            final CountDownLatch latch = new CountDownLatch(1);\n+                            if (ctx.getBundle(0).getState() == Bundle.STOPPING) {\n+                                // if shutting down, launch uninstallModule asynchronously and wait up\n+                                // to 30 secs. This avoids blocking server shutdown unduly.\n+                                executorService.getService().submit(new Runnable() {\n+                                    @Override\n+                                    public void run() {\n+                                        deployedApp.uninstallModule(wab);\n+                                        latch.countDown();\n+                                    }\n+                                }, Boolean.TRUE);\n+                                try {\n+                                    // If a quiesce has not been initiated then a force stop was called so\n+                                    // continue without waiting. Otherwise give the uninstallModule thread\n+                                    // time to unwind before proceeding with WAB removal.\n+                                    if (quiesceStarted.get()) {\n+                                        latch.await(30, TimeUnit.SECONDS);\n+                                    }\n+                                } catch (InterruptedException e) {\n+                                    // Continue with wab uninstall on this thread.", "originalCommit": "26c59f15133765ba46c09bc7d17efe11d02a811f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "201a31b240a112ff795a26c4fa215718c18e5b54", "url": "https://github.com/OpenLiberty/open-liberty/commit/201a31b240a112ff795a26c4fa215718c18e5b54", "message": "Make code review suggested changes", "committedDate": "2020-07-21T21:33:40Z", "type": "commit"}]}