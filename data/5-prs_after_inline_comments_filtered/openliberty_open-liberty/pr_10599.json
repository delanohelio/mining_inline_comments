{"pr_number": 10599, "pr_title": "Avoid calling `toString()` when tracing Java dynamic proxies", "pr_createdAt": "2020-01-27T19:24:10Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/10599", "timeline": [{"oid": "8cd5e386920697c2fd4e7f34791b51df28e97883", "url": "https://github.com/OpenLiberty/open-liberty/commit/8cd5e386920697c2fd4e7f34791b51df28e97883", "message": "Avoid calling `toString()` when tracing Java dynamic proxies", "committedDate": "2020-01-27T20:42:59Z", "type": "forcePushed"}, {"oid": "2439a41a0c9970d11e350b30dea6cb5b3391ec36", "url": "https://github.com/OpenLiberty/open-liberty/commit/2439a41a0c9970d11e350b30dea6cb5b3391ec36", "message": "Avoid calling `toString()` when tracing Java dynamic proxies", "committedDate": "2020-01-27T21:49:10Z", "type": "forcePushed"}, {"oid": "d2331a3fdaa47855e225bfc9d515bb2d1a34aba1", "url": "https://github.com/OpenLiberty/open-liberty/commit/d2331a3fdaa47855e225bfc9d515bb2d1a34aba1", "message": "Avoid calling `toString()` when tracing Java dynamic proxies", "committedDate": "2020-01-27T23:21:07Z", "type": "forcePushed"}, {"oid": "326af8ce6900e5276940cb504f775ca9ddbe6db2", "url": "https://github.com/OpenLiberty/open-liberty/commit/326af8ce6900e5276940cb504f775ca9ddbe6db2", "message": "Avoid calling `toString()` when tracing Java dynamic proxies", "committedDate": "2020-01-28T15:09:48Z", "type": "forcePushed"}, {"oid": "d19e4d452b2c2223bd174c7d85c6dbd6e543ec8c", "url": "https://github.com/OpenLiberty/open-liberty/commit/d19e4d452b2c2223bd174c7d85c6dbd6e543ec8c", "message": "Avoid calling `toString()` when tracing Java dynamic proxies", "committedDate": "2020-01-28T21:12:07Z", "type": "forcePushed"}, {"oid": "b2d4ce8be075534aea1cbef85371548f01c36ca8", "url": "https://github.com/OpenLiberty/open-liberty/commit/b2d4ce8be075534aea1cbef85371548f01c36ca8", "message": "Avoid calling `toString()` when tracing Java dynamic proxies", "committedDate": "2020-01-30T20:33:19Z", "type": "forcePushed"}, {"oid": "f1811b92f17feaf0de1e774f1933c6a0e41d76c1", "url": "https://github.com/OpenLiberty/open-liberty/commit/f1811b92f17feaf0de1e774f1933c6a0e41d76c1", "message": "Avoid calling `toString()` when tracing Java dynamic proxies", "committedDate": "2020-01-31T16:44:28Z", "type": "forcePushed"}, {"oid": "31c7662e50922a6bc801e32da6e6142768af8f79", "url": "https://github.com/OpenLiberty/open-liberty/commit/31c7662e50922a6bc801e32da6e6142768af8f79", "message": "Avoid calling `toString()` when tracing Java dynamic proxies", "committedDate": "2020-01-31T20:32:21Z", "type": "forcePushed"}, {"oid": "fa01f8b242cb0f874dca7fa9088edfb09e2f9569", "url": "https://github.com/OpenLiberty/open-liberty/commit/fa01f8b242cb0f874dca7fa9088edfb09e2f9569", "message": "Avoid calling `toString()` when tracing Java dynamic proxies", "committedDate": "2020-02-07T15:08:11Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM1OTQ3MA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/10599#discussion_r377359470", "bodyText": "This String does not make sense.  It does not give you the class of the object that is being proxied, so it would make more sense to me for it to just do the default toString() behavior:\nclassName + \"@\" + Integer.toHexString(System.identityHashCode(objs))", "author": "jhanders34", "createdAt": "2020-02-10T22:38:10Z", "path": "dev/com.ibm.ws.logging/src/com/ibm/ws/logging/internal/impl/BaseTraceFormatter.java", "diffHunk": "@@ -1001,6 +996,53 @@ public String formatObj(Object objs) {\n         return ans;\n     }\n \n+    private String formatObject(Object objs, int depth) {\n+        if (objs == null) {\n+            return null;\n+        }\n+        if (depth >= COLLECTION_DEPTH_LIMIT) {\n+            return \"Collection depth limit exceeded\";\n+        }\n+        if (objs instanceof Collection) {\n+            try {\n+                Iterator<?> iter = ((Collection<?>) objs).iterator();\n+                StringBuilder sb = new StringBuilder(\"[\");\n+                if (iter.hasNext()) {\n+                    sb.append(formatObject(iter.next(), depth + 1));\n+                }\n+                while (iter.hasNext()) {\n+                    sb.append(\", \").append(formatObject(iter.next(), depth + 1));\n+                }\n+                sb.append(\"]\");\n+                return sb.toString();\n+            } catch (Throwable t) {\n+                return \"[Caught \" + t.toString() + \" while logging collection type \" + objs.getClass().getName() + \"]\";\n+            }\n+        }\n+        if (objs instanceof Untraceable) {\n+            return objs.getClass().getName(); // Use only the class name of the object\n+        } else if (objs instanceof Traceable) {\n+            return formatTraceable((Traceable) objs);\n+        } else if (objs instanceof TruncatableThrowable) {\n+            return DataFormatHelper.throwableToString((TruncatableThrowable) objs);\n+        } else if (objs instanceof Throwable) {\n+            return DataFormatHelper.throwableToString(new TruncatableThrowable((Throwable) objs));\n+        }\n+        try { // Protect ourselves from badly behaved toString methods\n+            Class<?> cls = objs.getClass();\n+            String className = cls.getName();\n+            if (Proxy.isProxyClass(cls) || className.contains(\"$Proxy$_$$_Weld\")) {\n+                return \"Proxy for \" + className;", "originalCommit": "fa01f8b242cb0f874dca7fa9088edfb09e2f9569", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM4Mzc3MQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/10599#discussion_r377383771", "bodyText": "done", "author": "andymc12", "createdAt": "2020-02-10T23:45:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM1OTQ3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM2MDM2Ng==", "url": "https://github.com/OpenLiberty/open-liberty/pull/10599#discussion_r377360366", "bodyText": "This should return nullParamString not null", "author": "jhanders34", "createdAt": "2020-02-10T22:40:17Z", "path": "dev/com.ibm.ws.logging/src/com/ibm/ws/logging/internal/impl/BaseTraceFormatter.java", "diffHunk": "@@ -1001,6 +996,53 @@ public String formatObj(Object objs) {\n         return ans;\n     }\n \n+    private String formatObject(Object objs, int depth) {\n+        if (objs == null) {\n+            return null;", "originalCommit": "fa01f8b242cb0f874dca7fa9088edfb09e2f9569", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM4MzgxMw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/10599#discussion_r377383813", "bodyText": "done", "author": "andymc12", "createdAt": "2020-02-10T23:45:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM2MDM2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM2MzMzNA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/10599#discussion_r377363334", "bodyText": "Should this be changed to do something more like this?\nif (objs instanceof Collection) {\n    Object[] objArray = null;\n    while (objArray == null) {\n        try {\n            objArray = objs.toArray();\n        } catch (ConcurrentModificationException cme) {\n            // this exception is possible.  Need to retry until it doesn't happen any longer.\n        } catch (NoSuchElementException nsee) {\n            // this exception is possible.  Need to retry until it doesn't happen any longer.\n        } catch (Throwable t) {\n            return \"[Caught \" + t.toString() + \" while logging collection type \" + objs.getClass().getName() + \"]\";\n        }\n    }\n    StringBuilder sb = new StringBuilder(\"[\");\n    if (objArray.length != 0) {\n        sb.append(formatObject(objArray[0], depth + 1));\n    }\n    for (int i = 1; i < objArrays.length; ++i) {\n        sb.append(', ').append(formatObject(objArray[i], depth + 1));\n    }\n    sb.append(\"]\");\n    return sb.toString();\n}", "author": "jhanders34", "createdAt": "2020-02-10T22:47:30Z", "path": "dev/com.ibm.ws.logging/src/com/ibm/ws/logging/internal/impl/BaseTraceFormatter.java", "diffHunk": "@@ -1001,6 +996,53 @@ public String formatObj(Object objs) {\n         return ans;\n     }\n \n+    private String formatObject(Object objs, int depth) {\n+        if (objs == null) {\n+            return null;\n+        }\n+        if (depth >= COLLECTION_DEPTH_LIMIT) {\n+            return \"Collection depth limit exceeded\";\n+        }\n+        if (objs instanceof Collection) {\n+            try {", "originalCommit": "fa01f8b242cb0f874dca7fa9088edfb09e2f9569", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM4MzkzNg==", "url": "https://github.com/OpenLiberty/open-liberty/pull/10599#discussion_r377383936", "bodyText": "done - also added an \"out\" if >= 100 retryable exceptions occur on the same collection", "author": "andymc12", "createdAt": "2020-02-10T23:46:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM2MzMzNA=="}], "type": "inlineReview"}, {"oid": "23c8820f66dedf40b6877a9530ae1ed6a6fa5329", "url": "https://github.com/OpenLiberty/open-liberty/commit/23c8820f66dedf40b6877a9530ae1ed6a6fa5329", "message": "Code review comments", "committedDate": "2020-02-10T23:36:57Z", "type": "forcePushed"}, {"oid": "664f5ac6330aa9715355bc056c93e1445ca7448c", "url": "https://github.com/OpenLiberty/open-liberty/commit/664f5ac6330aa9715355bc056c93e1445ca7448c", "message": "Update collection impls in Liberty to use previous trace behavior", "committedDate": "2020-02-11T16:46:23Z", "type": "forcePushed"}, {"oid": "7d980afe6ec31c34855914a0eec40eb5706b3940", "url": "https://github.com/OpenLiberty/open-liberty/commit/7d980afe6ec31c34855914a0eec40eb5706b3940", "message": "Removing unmappable characters - causing problems with globalization", "committedDate": "2020-02-11T19:26:49Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg1ODYxOA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/10599#discussion_r377858618", "bodyText": "This is a behavior change to call toVerboseString instead of toString.  Any reason?", "author": "jhanders34", "createdAt": "2020-02-11T19:44:40Z", "path": "dev/com.ibm.ws.messaging.common/src/com/ibm/ws/sib/mfp/impl/SchemaSet.java", "diffHunk": "@@ -362,6 +363,10 @@ public String toVerboseString() {\n     return buf.toString();\n   }\n \n+  @Override\n+  public String toTraceString() {\n+      return toVerboseString();", "originalCommit": "ea1c8147400fa4960dc89683ab9e971b6f5a419f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg2NjMyOQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/10599#discussion_r377866329", "bodyText": "My thought was that it was more serviceable, but I have changed it to return toString instead to continue the previous behavior.", "author": "andymc12", "createdAt": "2020-02-11T19:59:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg1ODYxOA=="}], "type": "inlineReview"}, {"oid": "29d132e6ce8c9379733fa3503497a42c089232d1", "url": "https://github.com/OpenLiberty/open-liberty/commit/29d132e6ce8c9379733fa3503497a42c089232d1", "message": "Removing unmappable characters - causing problems with globalization", "committedDate": "2020-02-11T19:55:40Z", "type": "forcePushed"}, {"oid": "805c655b3c1d35194a8dccbd2f6c3a60836c6720", "url": "https://github.com/OpenLiberty/open-liberty/commit/805c655b3c1d35194a8dccbd2f6c3a60836c6720", "message": "Removing unmappable characters - causing problems with globalization", "committedDate": "2020-02-11T20:25:22Z", "type": "forcePushed"}, {"oid": "4c24f77a0cc208c7a05225bdbe6a7794eca35c08", "url": "https://github.com/OpenLiberty/open-liberty/commit/4c24f77a0cc208c7a05225bdbe6a7794eca35c08", "message": "Avoid calling `toString()` when tracing Java dynamic proxies", "committedDate": "2020-02-19T14:29:46Z", "type": "commit"}, {"oid": "ebea38cea54006fb3b834afacff5fa4c0ec253df", "url": "https://github.com/OpenLiberty/open-liberty/commit/ebea38cea54006fb3b834afacff5fa4c0ec253df", "message": "Code review comments", "committedDate": "2020-02-19T14:29:46Z", "type": "commit"}, {"oid": "a78959e1f6d08afaa8235268c068a20178a3126f", "url": "https://github.com/OpenLiberty/open-liberty/commit/a78959e1f6d08afaa8235268c068a20178a3126f", "message": "Update collection impls in Liberty to use previous trace behavior", "committedDate": "2020-02-19T14:29:46Z", "type": "commit"}, {"oid": "b9eb1fe2514c0e5b7fb1a19c344d6607beae1575", "url": "https://github.com/OpenLiberty/open-liberty/commit/b9eb1fe2514c0e5b7fb1a19c344d6607beae1575", "message": "Removing unmappable characters - causing problems with globalization", "committedDate": "2020-02-19T14:29:47Z", "type": "commit"}, {"oid": "b9eb1fe2514c0e5b7fb1a19c344d6607beae1575", "url": "https://github.com/OpenLiberty/open-liberty/commit/b9eb1fe2514c0e5b7fb1a19c344d6607beae1575", "message": "Removing unmappable characters - causing problems with globalization", "committedDate": "2020-02-19T14:29:47Z", "type": "forcePushed"}]}