{"pr_number": 14263, "pr_title": "Disable all features on conflict", "pr_createdAt": "2020-10-01T13:43:11Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/14263", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQyOTY3NQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14263#discussion_r498429675", "bodyText": "I think returning true whenever at least one candidate feature declares DAOC=true is not what we want here.  At this point there are no conflicts and all resolved features do not declare DAOC=true.  And from what you've (@tjwatson) advised, all of the features in the conflict chains sans the conflicting features are in the resolved set.  So... For this code to return true we can surmise that all resolved features declare DAOC=false or lack the DAOC header, there may multiple candidates per conflict feature, no conflict feature is a root feature, and at least one conflict feature candidate has DAOC=true.  Also, that the feature that declares the tolerated conflict feature with DAOC=true is new and does not have DAOC=true (e.g. new auto feature or new malformed feature.)  If the candidate was introduced by a new auto feature, we should not clear the resovled set.  So, I think this method should return true iff all candidates declare DAOC=true, and we handle future issues involving new malformed features as they come.", "author": "dazavala", "createdAt": "2020-10-01T18:12:25Z", "path": "dev/com.ibm.ws.kernel.feature.core/src/com/ibm/ws/kernel/feature/internal/FeatureManager.java", "diffHunk": "@@ -1786,12 +1786,47 @@ boolean reportErrors(Result result, Collection<String> restrictedAccessAttempts,\n             for (Chain chain : conflict.getValue()) {\n                 installStatus.addConflictFeature(chain.getFeatureRequirement());\n             }\n+        }\n \n+        if (disableAllOnConflict) {\n+            // Remove all features on conflicts\n+            Set<String> resolved = result.getResolvedFeatures();\n+            if (TraceComponent.isAnyTracingEnabled() && tc.isDebugEnabled()) {\n+                Tr.debug(tc, \"Conflicts found in feature set, no features will be enabled:\" + String.valueOf(sortedConflicts));\n+            }\n+            resolved.clear();\n+            Tr.warning(tc, \"UPDATE_DISABLED_FEATURES_ON_CONFLICT\");\n         }\n         return reportedErrors;\n \n     }\n \n+    private boolean disableAllOnConflict(Result result) {\n+        Map<String, Collection<Chain>> conflicts = result.getConflicts();\n+        if (conflicts.isEmpty()) {\n+            return false;\n+        }\n+        for (String featureName : result.getResolvedFeatures()) {\n+            if (shouldDisableOnConflict(featureName)) {\n+                return true;\n+            }\n+        }\n+        for (Entry<String, Collection<Chain>> conflict : conflicts.entrySet()) {", "originalCommit": "9cd51c2791e867287e66068a94e9639af01a018c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUxMzc2MQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14263#discussion_r498513761", "bodyText": "Fixed with latest", "author": "tjwatson", "createdAt": "2020-10-01T21:07:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQyOTY3NQ=="}], "type": "inlineReview"}, {"oid": "f58101e073ee978648573cd57a0fec396aaeeab0", "url": "https://github.com/OpenLiberty/open-liberty/commit/f58101e073ee978648573cd57a0fec396aaeeab0", "message": "Disable all features on conflict\n\nA new feature header is introduced\n\nWLP-DisableAllFeatures-OnConflict: true|false\n\nIf not specified the default is false.\n\nWhen the configured feature set has a singleton conflict\nand the resolved feature set or the conflicting candidates\nhas a feature with a value of true for this new heade then\nall features will be disabled.  In other words,\nno features will be installed for the server/client\ninstance.", "committedDate": "2020-10-01T21:03:08Z", "type": "forcePushed"}, {"oid": "e1ccaa68d1b6effa0e35ac9878d9078be3bd6ff1", "url": "https://github.com/OpenLiberty/open-liberty/commit/e1ccaa68d1b6effa0e35ac9878d9078be3bd6ff1", "message": "Disable all features on conflict\n\nA new feature header is introduced\n\nWLP-DisableAllFeatures-OnConflict: true|false\n\nIf not specified the default is false.\n\nWhen the configured feature set has a singleton conflict\nand the resolved feature set or the conflicting candidates\nhas a feature with a value of true for this new heade then\nall features will be disabled.  In other words,\nno features will be installed for the server/client\ninstance.", "committedDate": "2020-10-06T13:15:42Z", "type": "forcePushed"}, {"oid": "fe97554df6a41146b3336055f07a169f026f2ba6", "url": "https://github.com/OpenLiberty/open-liberty/commit/fe97554df6a41146b3336055f07a169f026f2ba6", "message": "Message updates after review.", "committedDate": "2020-10-07T15:05:59Z", "type": "forcePushed"}, {"oid": "3409aa10ced31cfb18114e01161593863594f383", "url": "https://github.com/OpenLiberty/open-liberty/commit/3409aa10ced31cfb18114e01161593863594f383", "message": "Disable all features on conflict\n\nA new feature header is introduced\n\nWLP-DisableAllFeatures-OnConflict: true|false\n\nIf not specified the default is false.\n\nWhen the configured feature set has a singleton conflict\nand the resolved feature set or the conflicting candidates\nhas a feature with a value of true for this new heade then\nall features will be disabled.  In other words,\nno features will be installed for the server/client\ninstance.", "committedDate": "2020-10-07T15:05:58Z", "type": "commit"}, {"oid": "e920d06fb095d73e7d275adcc7c7d4f30300b9a5", "url": "https://github.com/OpenLiberty/open-liberty/commit/e920d06fb095d73e7d275adcc7c7d4f30300b9a5", "message": "Update EECompatibilityTest for disable all on conflict", "committedDate": "2020-10-07T15:05:58Z", "type": "commit"}, {"oid": "fe97554df6a41146b3336055f07a169f026f2ba6", "url": "https://github.com/OpenLiberty/open-liberty/commit/fe97554df6a41146b3336055f07a169f026f2ba6", "message": "Message updates after review.", "committedDate": "2020-10-07T15:05:59Z", "type": "commit"}, {"oid": "c590b31d20cfb06de565f84aecf500e641be7329", "url": "https://github.com/OpenLiberty/open-liberty/commit/c590b31d20cfb06de565f84aecf500e641be7329", "message": "More fixes to messages after review.", "committedDate": "2020-10-07T18:06:48Z", "type": "commit"}, {"oid": "2d511451e372dab93d537f366ca73acac6ee1c86", "url": "https://github.com/OpenLiberty/open-liberty/commit/2d511451e372dab93d537f366ca73acac6ee1c86", "message": "Message fixes after review.", "committedDate": "2020-10-07T18:56:13Z", "type": "commit"}]}