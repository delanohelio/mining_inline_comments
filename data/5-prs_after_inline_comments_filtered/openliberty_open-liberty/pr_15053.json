{"pr_number": 15053, "pr_title": "update ws-security and opensaml prereq levels (preparation for jakarta ee9)", "pr_createdAt": "2020-11-19T17:22:05Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/15053", "timeline": [{"oid": "8ca91d94f75523c4e493cedcb8401f985eb6d3c0", "url": "https://github.com/OpenLiberty/open-liberty/commit/8ca91d94f75523c4e493cedcb8401f985eb6d3c0", "message": "update liberty wssecurity and saml sso prereqs", "committedDate": "2020-11-19T17:17:12Z", "type": "commit"}, {"oid": "aee0793b91c0df7e85c24bca60401efb32fd19eb", "url": "https://github.com/OpenLiberty/open-liberty/commit/aee0793b91c0df7e85c24bca60401efb32fd19eb", "message": "fix wss4j maven group id", "committedDate": "2020-11-19T21:04:30Z", "type": "commit"}, {"oid": "23dbb50ca8e843609aa2fd842dcf83dc097e7b7d", "url": "https://github.com/OpenLiberty/open-liberty/commit/23dbb50ca8e843609aa2fd842dcf83dc097e7b7d", "message": "specify version in ehcache bundle export statement", "committedDate": "2020-11-20T03:07:54Z", "type": "commit"}, {"oid": "4d68346acef55afaf4e521fb4cdaa5731c2dc7ee", "url": "https://github.com/OpenLiberty/open-liberty/commit/4d68346acef55afaf4e521fb4cdaa5731c2dc7ee", "message": "support multiple xmlsec jar versions in the repository", "committedDate": "2020-11-23T04:51:11Z", "type": "commit"}, {"oid": "3b0db77141724b1cd7ca522878e92bb5564874ce", "url": "https://github.com/OpenLiberty/open-liberty/commit/3b0db77141724b1cd7ca522878e92bb5564874ce", "message": "support multiple xmlsec versions", "committedDate": "2020-11-23T21:19:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTk1ODk0Nw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/15053#discussion_r529958947", "bodyText": "Is there anyway to mark what you've changed in CXF with a // Liberty Change comment?", "author": "neuwerk", "createdAt": "2020-11-24T22:44:12Z", "path": "dev/com.ibm.ws.org.apache.cxf-rt-ws-security.3.3/src/org/apache/cxf/ws/security/cache/CXFEHCacheReplayCache.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.cxf.ws.security.cache;\n+\n+import java.nio.file.Path;\n+\n+import org.apache.cxf.Bus;\n+import org.apache.cxf.buslifecycle.BusLifeCycleListener;\n+import org.apache.cxf.buslifecycle.BusLifeCycleManager;\n+import org.apache.wss4j.common.cache.EHCacheReplayCache;\n+import org.apache.wss4j.common.ext.WSSecurityException;\n+\n+/**\n+ * Wrap the default WSS4J EHCacheReplayCache in a BusLifeCycleListener, to make sure that\n+ * the cache is shutdown correctly.\n+ */\n+public class CXFEHCacheReplayCache extends EHCacheReplayCache implements BusLifeCycleListener {", "originalCommit": "3b0db77141724b1cd7ca522878e92bb5564874ce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDEwNjg3Mg==", "url": "https://github.com/OpenLiberty/open-liberty/pull/15053#discussion_r530106872", "bodyText": "nothing changed. I just had to recompile this class", "author": "arunavemulapalli", "createdAt": "2020-11-25T04:51:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTk1ODk0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTk1OTIxNg==", "url": "https://github.com/OpenLiberty/open-liberty/pull/15053#discussion_r529959216", "bodyText": "Is there anyway to mark what you've changed in CXF with a // Liberty Change comment?", "author": "neuwerk", "createdAt": "2020-11-24T22:44:26Z", "path": "dev/com.ibm.ws.org.apache.cxf-rt-ws-security.3.3/src/org/apache/cxf/ws/security/tokenstore/TokenStoreException.java", "diffHunk": "@@ -0,0 +1,28 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.cxf.ws.security.tokenstore;\n+\n+public class TokenStoreException extends Exception {", "originalCommit": "3b0db77141724b1cd7ca522878e92bb5564874ce", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTk1OTcyMw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/15053#discussion_r529959723", "bodyText": "Is there anyway to mark what you've changed in CXF with a // Liberty Change comment?", "author": "neuwerk", "createdAt": "2020-11-24T22:44:54Z", "path": "dev/com.ibm.ws.org.apache.cxf-rt-ws-security.3.3/src/org/apache/cxf/ws/security/wss4j/AbstractWSS4JInterceptor.java", "diffHunk": "@@ -0,0 +1,226 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.cxf.ws.security.wss4j;\n+\n+import java.net.URI;\n+import java.util.Collection;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+import javax.xml.namespace.QName;\n+\n+import org.apache.cxf.binding.soap.SoapMessage;\n+import org.apache.cxf.binding.soap.interceptor.SoapInterceptor;\n+import org.apache.cxf.interceptor.Fault;\n+import org.apache.cxf.message.Message;\n+import org.apache.cxf.message.MessageUtils;\n+import org.apache.cxf.phase.PhaseInterceptor;\n+import org.apache.cxf.rt.security.utils.SecurityUtils;\n+import org.apache.cxf.ws.security.SecurityConstants;\n+import org.apache.wss4j.common.ConfigurationConstants;\n+import org.apache.wss4j.common.WSS4JConstants;\n+import org.apache.wss4j.common.crypto.Crypto;\n+import org.apache.wss4j.common.crypto.PasswordEncryptor;\n+import org.apache.wss4j.common.ext.WSSecurityException;\n+import org.apache.wss4j.dom.handler.RequestData;\n+import org.apache.wss4j.dom.handler.WSHandler;\n+\n+public abstract class AbstractWSS4JInterceptor extends WSHandler implements SoapInterceptor,", "originalCommit": "3b0db77141724b1cd7ca522878e92bb5564874ce", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTk1OTg5OA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/15053#discussion_r529959898", "bodyText": "Is there anyway to mark what you've changed in CXF with a // Liberty Change comment?", "author": "neuwerk", "createdAt": "2020-11-24T22:45:04Z", "path": "dev/com.ibm.ws.org.apache.cxf-rt-ws-security.3.3/src/org/apache/cxf/ws/security/wss4j/AlgorithmSuiteTranslater.java", "diffHunk": "@@ -0,0 +1,191 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.cxf.ws.security.wss4j;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+\n+import org.apache.cxf.ws.policy.AssertionInfo;\n+import org.apache.cxf.ws.policy.AssertionInfoMap;\n+import org.apache.cxf.ws.security.policy.PolicyUtils;\n+import org.apache.wss4j.common.WSS4JConstants;\n+import org.apache.wss4j.common.crypto.AlgorithmSuite;\n+import org.apache.wss4j.common.ext.WSSecurityException;\n+import org.apache.wss4j.dom.handler.RequestData;\n+import org.apache.wss4j.policy.SPConstants;\n+import org.apache.wss4j.policy.model.AbstractBinding;\n+import org.apache.wss4j.policy.model.AbstractSecurityAssertion;\n+import org.apache.wss4j.policy.model.AlgorithmSuite.AlgorithmSuiteType;\n+import org.apache.wss4j.policy.model.SamlToken;\n+import org.apache.wss4j.policy.model.SupportingTokens;\n+\n+/**\n+ * Translate any AlgorithmSuite policy that may be operative into a WSS4J AlgorithmSuite object\n+ * to enforce what algorithms are allowed in a request.\n+ */\n+public final class AlgorithmSuiteTranslater {", "originalCommit": "3b0db77141724b1cd7ca522878e92bb5564874ce", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTk2MDA3Ng==", "url": "https://github.com/OpenLiberty/open-liberty/pull/15053#discussion_r529960076", "bodyText": "Is there anyway to mark what you've changed in CXF with a // Liberty Change comment?", "author": "neuwerk", "createdAt": "2020-11-24T22:45:15Z", "path": "dev/com.ibm.ws.org.apache.cxf-rt-ws-security.3.3/src/org/apache/cxf/ws/security/wss4j/PolicyBasedWSS4JInInterceptor.java", "diffHunk": "@@ -0,0 +1,662 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.cxf.ws.security.wss4j;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.logging.Logger;\n+\n+import javax.xml.namespace.QName;\n+import javax.xml.soap.SOAPException;\n+import javax.xml.stream.XMLStreamException;\n+\n+import org.w3c.dom.Attr;\n+import org.w3c.dom.Element;\n+\n+import org.apache.cxf.binding.soap.SoapFault;\n+import org.apache.cxf.binding.soap.SoapMessage;\n+import org.apache.cxf.common.i18n.Message;\n+import org.apache.cxf.common.logging.LogUtils;\n+import org.apache.cxf.headers.Header;\n+import org.apache.cxf.helpers.CastUtils;\n+import org.apache.cxf.interceptor.Fault;\n+import org.apache.cxf.message.MessageUtils;\n+import org.apache.cxf.rt.security.utils.SecurityUtils;\n+import org.apache.cxf.ws.policy.AssertionInfo;\n+import org.apache.cxf.ws.policy.AssertionInfoMap;\n+import org.apache.cxf.ws.security.SecurityConstants;\n+import org.apache.cxf.ws.security.policy.PolicyUtils;\n+import org.apache.cxf.ws.security.wss4j.policyvalidators.PolicyValidatorParameters;\n+import org.apache.cxf.ws.security.wss4j.policyvalidators.SecurityPolicyValidator;\n+import org.apache.cxf.ws.security.wss4j.policyvalidators.ValidatorUtils;\n+import org.apache.wss4j.common.ConfigurationConstants;\n+import org.apache.wss4j.common.WSS4JConstants;\n+import org.apache.wss4j.common.crypto.Crypto;\n+import org.apache.wss4j.common.crypto.PasswordEncryptor;\n+import org.apache.wss4j.common.ext.WSSecurityException;\n+import org.apache.wss4j.dom.WSConstants;\n+import org.apache.wss4j.dom.WSDataRef;\n+import org.apache.wss4j.dom.engine.WSSecurityEngineResult;\n+import org.apache.wss4j.dom.handler.RequestData;\n+import org.apache.wss4j.dom.handler.WSHandlerResult;\n+import org.apache.wss4j.dom.message.token.Timestamp;\n+import org.apache.wss4j.dom.util.WSSecurityUtil;\n+import org.apache.wss4j.policy.SP12Constants;\n+import org.apache.wss4j.policy.SP13Constants;\n+import org.apache.wss4j.policy.SPConstants;\n+import org.apache.wss4j.policy.model.AlgorithmSuite;\n+import org.apache.wss4j.policy.model.UsernameToken;\n+import org.apache.wss4j.policy.model.UsernameToken.PasswordType;\n+import org.apache.wss4j.policy.model.Wss11;\n+\n+/**\n+ *\n+ */\n+public class PolicyBasedWSS4JInInterceptor extends WSS4JInInterceptor {", "originalCommit": "3b0db77141724b1cd7ca522878e92bb5564874ce", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTk2MDMwMg==", "url": "https://github.com/OpenLiberty/open-liberty/pull/15053#discussion_r529960302", "bodyText": "Is there anyway to mark what you've changed in CXF with a // Liberty Change comment?", "author": "neuwerk", "createdAt": "2020-11-24T22:45:31Z", "path": "dev/com.ibm.ws.org.apache.cxf-rt-ws-security.3.3/src/org/apache/cxf/ws/security/wss4j/PolicyBasedWSS4JOutInterceptor.java", "diffHunk": "@@ -0,0 +1,234 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.cxf.ws.security.wss4j;\n+\n+import java.security.Provider;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.Set;\n+import java.util.logging.Logger;\n+\n+import javax.xml.soap.SOAPException;\n+import javax.xml.soap.SOAPMessage;\n+\n+import org.w3c.dom.Element;\n+\n+import org.apache.cxf.binding.soap.SoapFault;\n+import org.apache.cxf.binding.soap.SoapMessage;\n+import org.apache.cxf.binding.soap.saaj.SAAJOutInterceptor;\n+import org.apache.cxf.binding.soap.saaj.SAAJUtils;\n+import org.apache.cxf.common.i18n.Message;\n+import org.apache.cxf.common.logging.LogUtils;\n+import org.apache.cxf.interceptor.Fault;\n+import org.apache.cxf.message.MessageUtils;\n+import org.apache.cxf.phase.AbstractPhaseInterceptor;\n+import org.apache.cxf.phase.Phase;\n+import org.apache.cxf.phase.PhaseInterceptor;\n+import org.apache.cxf.ws.policy.AssertionInfoMap;\n+import org.apache.cxf.ws.security.SecurityConstants;\n+import org.apache.cxf.ws.security.policy.PolicyUtils;\n+import org.apache.cxf.ws.security.tokenstore.TokenStoreException;\n+import org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler;\n+import org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler;\n+import org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler;\n+import org.apache.neethi.Policy;\n+import org.apache.wss4j.common.ConfigurationConstants;\n+import org.apache.wss4j.common.crypto.ThreadLocalSecurityProvider;\n+import org.apache.wss4j.common.ext.WSSecurityException;\n+import org.apache.wss4j.dom.engine.WSSConfig;\n+import org.apache.wss4j.dom.message.WSSecHeader;\n+import org.apache.wss4j.policy.model.AbstractBinding;\n+import org.apache.wss4j.policy.model.AsymmetricBinding;\n+import org.apache.wss4j.policy.model.SymmetricBinding;\n+import org.apache.wss4j.policy.model.TransportBinding;\n+\n+public class PolicyBasedWSS4JOutInterceptor extends AbstractPhaseInterceptor<SoapMessage> {", "originalCommit": "3b0db77141724b1cd7ca522878e92bb5564874ce", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTk2MDUxOA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/15053#discussion_r529960518", "bodyText": "Is there anyway to mark what you've changed in CXF with a // Liberty Change comment?", "author": "neuwerk", "createdAt": "2020-11-24T22:45:43Z", "path": "dev/com.ibm.ws.org.apache.cxf-rt-ws-security.3.3/src/org/apache/cxf/ws/security/wss4j/StaxSerializer.java", "diffHunk": "@@ -0,0 +1,291 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.cxf.ws.security.wss4j;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStreamWriter;\n+import java.io.SequenceInputStream;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Vector;\n+\n+import javax.xml.namespace.NamespaceContext;\n+import javax.xml.soap.SOAPElement;\n+import javax.xml.soap.SOAPEnvelope;\n+import javax.xml.stream.XMLInputFactory;\n+import javax.xml.stream.XMLStreamException;\n+import javax.xml.stream.XMLStreamReader;\n+import javax.xml.stream.XMLStreamWriter;\n+import javax.xml.transform.dom.DOMResult;\n+\n+import org.w3c.dom.Document;\n+import org.w3c.dom.DocumentFragment;\n+import org.w3c.dom.Element;\n+import org.w3c.dom.NamedNodeMap;\n+import org.w3c.dom.Node;\n+\n+import org.xml.sax.InputSource;\n+\n+import org.apache.cxf.binding.soap.saaj.SAAJStreamWriter;\n+import org.apache.cxf.helpers.DOMUtils;\n+import org.apache.cxf.helpers.LoadingByteArrayOutputStream;\n+import org.apache.cxf.staxutils.OverlayW3CDOMStreamWriter;\n+import org.apache.cxf.staxutils.StaxUtils;\n+import org.apache.xml.security.c14n.Canonicalizer;\n+import org.apache.xml.security.c14n.InvalidCanonicalizerException;\n+import org.apache.xml.security.encryption.AbstractSerializer;\n+import org.apache.xml.security.encryption.XMLEncryptionException;\n+\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n+/**\n+ * Converts <code>String</code>s into <code>Node</code>s and visa versa using CXF's StaxUtils\n+ */\n+public class StaxSerializer extends AbstractSerializer {", "originalCommit": "3b0db77141724b1cd7ca522878e92bb5564874ce", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3a4dbdeeb7e80d77394ed924aa5d8e85eed69935", "url": "https://github.com/OpenLiberty/open-liberty/commit/3a4dbdeeb7e80d77394ed924aa5d8e85eed69935", "message": "review comments", "committedDate": "2020-11-25T22:04:33Z", "type": "commit"}, {"oid": "3a4dbdeeb7e80d77394ed924aa5d8e85eed69935", "url": "https://github.com/OpenLiberty/open-liberty/commit/3a4dbdeeb7e80d77394ed924aa5d8e85eed69935", "message": "review comments", "committedDate": "2020-11-25T22:04:33Z", "type": "forcePushed"}]}