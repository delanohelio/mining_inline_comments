{"pr_number": 12563, "pr_title": "Send Redirect to Relative URL", "pr_createdAt": "2020-06-10T15:39:03Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/12563", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIzNTMxNw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12563#discussion_r438235317", "bodyText": "This is a new class right? If so then we don't need a 2017 date range in it.", "author": "pnicolucci", "createdAt": "2020-06-10T15:59:10Z", "path": "dev/com.ibm.ws.webcontainer.servlet.4.0_fat/fat/src/com/ibm/ws/fat/wc/tests/WCSendRedirectRelativeURLDefault.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*******************************************************************************\n+ * Copyright (c) 2017, 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials", "originalCommit": "3fdcfae7a9ff4abd900e4a350284c24806080a74", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIzNTY2Nw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12563#discussion_r438235667", "bodyText": "New class don't see it necessary for a 2017 date range unless I'm missing something.", "author": "pnicolucci", "createdAt": "2020-06-10T15:59:38Z", "path": "dev/com.ibm.ws.webcontainer.servlet.4.0_fat/fat/src/com/ibm/ws/fat/wc/tests/WCSendRedirectRelativeURLTrue.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/*******************************************************************************\n+ * Copyright (c) 2017, 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials", "originalCommit": "3fdcfae7a9ff4abd900e4a350284c24806080a74", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIzNTkyOA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12563#discussion_r438235928", "bodyText": "Have you considered running this test in FULL mode vs LITE?", "author": "pnicolucci", "createdAt": "2020-06-10T16:00:01Z", "path": "dev/com.ibm.ws.webcontainer.servlet.4.0_fat/fat/src/com/ibm/ws/fat/wc/tests/WCSendRedirectRelativeURLTrue.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/*******************************************************************************\n+ * Copyright (c) 2017, 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package com.ibm.ws.fat.wc.tests;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.fail;\n+\n+import java.net.HttpURLConnection;\n+import java.net.URL;\n+import java.util.logging.Logger;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.ClassRule;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import com.ibm.ws.fat.util.LoggingTest;\n+import com.ibm.ws.fat.util.SharedServer;\n+import com.ibm.ws.fat.wc.WCApplicationHelper;\n+\n+import componenttest.custom.junit.runner.FATRunner;\n+\n+@RunWith(FATRunner.class)\n+public class WCSendRedirectRelativeURLTrue extends LoggingTest {\n+\n+    private static final Logger LOG = Logger.getLogger(WCAddJspFileTest.class.getName());\n+\n+    @ClassRule\n+    public static SharedServer SHARED_SERVER = new SharedServer(\"servlet40_sendRedirectURL_True\");\n+\n+    /*\n+     * (non-Javadoc)\n+     *\n+     * @see com.ibm.ws.fat.util.LoggingTest#getSharedServer()\n+     */\n+    @Override\n+    protected SharedServer getSharedServer() {\n+        return SHARED_SERVER;\n+    }\n+\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        LOG.info(\"Setup : add TestAddJspFile to the server if not already present.\");\n+\n+        WCApplicationHelper.addEarToServerDropins(SHARED_SERVER.getLibertyServer(), \"TestAddJspFile.ear\", false,\n+                                                  \"TestAddJspFile.war\", true, null, false, \"testaddjspfile.war.listeners\");\n+\n+        SHARED_SERVER.startIfNotStarted();\n+        WCApplicationHelper.waitForAppStart(\"TestAddJspFile\", WCAddJspFileTest.class.getName(), SHARED_SERVER.getLibertyServer());\n+        LOG.info(\"Setup : complete, ready for Tests\");\n+    }\n+\n+    @AfterClass\n+    public static void testCleanup() throws Exception {\n+        SHARED_SERVER.getLibertyServer().stopServer();\n+    }\n+\n+    /**\n+     * Test with WC property: redirecttorelativeurl = true.\n+     * Request to a JSP which generates sendRedirect(RelativeURL). //NOTE that this target RelativeURL does not actually exist.\n+     * Use the HttpURLConnection() with conn.setInstanceFollowRedirects(false) to stop following the redirect.\n+     * The test only interests in the 302 with Location header being set to the RelativeURL (i.e there is no http://host:port/ portion)\n+     * Most (if not all) modern browser agents should be able to redirect with the relative URL\n+     */\n+    @Test\n+    public void testResponseSendRedirectToRelativeURL_True() throws Exception {", "originalCommit": "3fdcfae7a9ff4abd900e4a350284c24806080a74", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI1MTkyOQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12563#discussion_r438251929", "bodyText": "FULL for both", "author": "pmd1nh", "createdAt": "2020-06-10T16:21:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIzNTkyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIzNjAyNw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12563#discussion_r438236027", "bodyText": "Have you considered running this test in FULL mode vs LITE?", "author": "pnicolucci", "createdAt": "2020-06-10T16:00:09Z", "path": "dev/com.ibm.ws.webcontainer.servlet.4.0_fat/fat/src/com/ibm/ws/fat/wc/tests/WCSendRedirectRelativeURLDefault.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*******************************************************************************\n+ * Copyright (c) 2017, 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package com.ibm.ws.fat.wc.tests;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n+\n+import java.net.HttpURLConnection;\n+import java.net.URL;\n+import java.util.logging.Logger;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.ClassRule;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import com.ibm.ws.fat.util.LoggingTest;\n+import com.ibm.ws.fat.util.SharedServer;\n+import com.ibm.ws.fat.wc.WCApplicationHelper;\n+\n+import componenttest.custom.junit.runner.FATRunner;\n+\n+@RunWith(FATRunner.class)\n+public class WCSendRedirectRelativeURLDefault extends LoggingTest {\n+\n+    private static final Logger LOG = Logger.getLogger(WCAddJspFileTest.class.getName());\n+\n+    @ClassRule\n+    public static SharedServer SHARED_SERVER = new SharedServer(\"servlet40_sendRedirectURL_Default\");\n+\n+    @Override\n+    protected SharedServer getSharedServer() {\n+        return SHARED_SERVER;\n+    }\n+\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        LOG.info(\"Setup : add TestAddJspFile to the server if not already present.\");\n+\n+        WCApplicationHelper.addEarToServerDropins(SHARED_SERVER.getLibertyServer(), \"TestAddJspFile.ear\", false,\n+                                                  \"TestAddJspFile.war\", true, null, false, \"testaddjspfile.war.listeners\");\n+\n+        SHARED_SERVER.startIfNotStarted();\n+        WCApplicationHelper.waitForAppStart(\"TestAddJspFile\", WCAddJspFileTest.class.getName(), SHARED_SERVER.getLibertyServer());\n+        LOG.info(\"Setup : complete, ready for Tests\");\n+    }\n+\n+    @AfterClass\n+    public static void testCleanup() throws Exception {\n+        SHARED_SERVER.getLibertyServer().stopServer();\n+    }\n+\n+    /**\n+     * Test default sendRedirect\n+     * Request to a JSP which generate sendRedirect(RelativeURL). //NOTE that this target RelativeURL does not actually exist.\n+     * Use the HttpURLConnection() with conn.setInstanceFollowRedirects(false) to stop following the redirect.\n+     * The test only interest in the 302 with Location header being set to absolute URL (i.e http://host:port/ portion)\n+     */\n+    @Test\n+    public void testResponseSendRedirectToRelativeURL_Default() throws Exception {", "originalCommit": "3fdcfae7a9ff4abd900e4a350284c24806080a74", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI1MTY2Mg==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12563#discussion_r438251662", "bodyText": "Set both in FULL", "author": "pmd1nh", "createdAt": "2020-06-10T16:21:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIzNjAyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIzNjc5NA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12563#discussion_r438236794", "bodyText": "This comment is for both test classes, any reason we're specifically using the SharedServer here vs just the standard LibertyServer?", "author": "pnicolucci", "createdAt": "2020-06-10T16:01:14Z", "path": "dev/com.ibm.ws.webcontainer.servlet.4.0_fat/fat/src/com/ibm/ws/fat/wc/tests/WCSendRedirectRelativeURLDefault.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*******************************************************************************\n+ * Copyright (c) 2017, 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package com.ibm.ws.fat.wc.tests;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n+\n+import java.net.HttpURLConnection;\n+import java.net.URL;\n+import java.util.logging.Logger;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.ClassRule;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import com.ibm.ws.fat.util.LoggingTest;\n+import com.ibm.ws.fat.util.SharedServer;\n+import com.ibm.ws.fat.wc.WCApplicationHelper;\n+\n+import componenttest.custom.junit.runner.FATRunner;\n+\n+@RunWith(FATRunner.class)\n+public class WCSendRedirectRelativeURLDefault extends LoggingTest {\n+\n+    private static final Logger LOG = Logger.getLogger(WCAddJspFileTest.class.getName());\n+\n+    @ClassRule\n+    public static SharedServer SHARED_SERVER = new SharedServer(\"servlet40_sendRedirectURL_Default\");\n+", "originalCommit": "3fdcfae7a9ff4abd900e4a350284c24806080a74", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI1MDE1OA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12563#discussion_r438250158", "bodyText": "no reason.  I'm reusing a current server and app setting thus staying with them for consistency.", "author": "pmd1nh", "createdAt": "2020-06-10T16:18:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIzNjc5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIzODIxMQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12563#discussion_r438238211", "bodyText": "If you're targeting the next release it should be 20.0.0.7", "author": "pnicolucci", "createdAt": "2020-06-10T16:03:26Z", "path": "dev/com.ibm.ws.webcontainer/src/com/ibm/wsspi/webcontainer/WCCustomProperties.java", "diffHunk": "@@ -312,6 +312,9 @@\n \n     //19.0.0.8\n     public static boolean GET_REAL_PATH_RETURNS_QUALIFIED_PATH;\n+    \n+    //20.0.0.6", "originalCommit": "3fdcfae7a9ff4abd900e4a350284c24806080a74", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI1MjY4OQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12563#discussion_r438252689", "bodyText": "Change to 20.0.0.7 as it may not make to 20.0.0.6 due to translation ...", "author": "pmd1nh", "createdAt": "2020-06-10T16:22:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIzODIxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIzODQ0MQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12563#discussion_r438238441", "bodyText": "20.0.0.7 if targeting the next release", "author": "pnicolucci", "createdAt": "2020-06-10T16:03:49Z", "path": "dev/com.ibm.ws.webcontainer/src/com/ibm/wsspi/webcontainer/WCCustomProperties.java", "diffHunk": "@@ -789,6 +792,10 @@ public static void setCustomPropertyVariables() {\n \n         // 19.0.0.8\n         GET_REAL_PATH_RETURNS_QUALIFIED_PATH = Boolean.valueOf(WebContainer.getWebContainerProperties().getProperty(\"com.ibm.ws.webcontainer.getrealpathreturnsqualifiedpath\", \"true\")).booleanValue();\n+        \n+        //20.0.0.6", "originalCommit": "3fdcfae7a9ff4abd900e4a350284c24806080a74", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMzODU3OA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12563#discussion_r438338578", "bodyText": "Actually looks like you'll need metatype translations so 20008 since those have been sent already for 20007.", "author": "pnicolucci", "createdAt": "2020-06-10T18:49:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIzODQ0MQ=="}], "type": "inlineReview"}, {"oid": "489e3907da9f8eab4d6e63bbec5674d59c1d0f3f", "url": "https://github.com/OpenLiberty/open-liberty/commit/489e3907da9f8eab4d6e63bbec5674d59c1d0f3f", "message": "Send Redirect to Relative URL", "committedDate": "2020-06-10T16:44:46Z", "type": "forcePushed"}, {"oid": "f51da0ca323f1aa5240188ed0b9990862ace98f5", "url": "https://github.com/OpenLiberty/open-liberty/commit/f51da0ca323f1aa5240188ed0b9990862ace98f5", "message": "Send Redirect to Relative URL", "committedDate": "2020-06-10T19:58:06Z", "type": "forcePushed"}, {"oid": "c67fafa50b714e548e78cf67c2b1a093d3cdb026", "url": "https://github.com/OpenLiberty/open-liberty/commit/c67fafa50b714e548e78cf67c2b1a093d3cdb026", "message": "Send Redirect to Relative URL", "committedDate": "2020-06-15T14:24:27Z", "type": "forcePushed"}, {"oid": "82ea07a1af7a31e1886043f843151e220bf89267", "url": "https://github.com/OpenLiberty/open-liberty/commit/82ea07a1af7a31e1886043f843151e220bf89267", "message": "Send Redirect to Relative URL", "committedDate": "2020-08-03T15:11:35Z", "type": "forcePushed"}, {"oid": "d4ee7b1302dc7b3ceb0d40cb58d48d8fbe78e2d1", "url": "https://github.com/OpenLiberty/open-liberty/commit/d4ee7b1302dc7b3ceb0d40cb58d48d8fbe78e2d1", "message": "Send Redirect to Relative URL", "committedDate": "2020-08-04T18:33:35Z", "type": "forcePushed"}, {"oid": "0fe2e77267ef1e863f7ceff0494c5275b52efba4", "url": "https://github.com/OpenLiberty/open-liberty/commit/0fe2e77267ef1e863f7ceff0494c5275b52efba4", "message": "Send Redirect to Relative URL", "committedDate": "2020-08-26T18:02:39Z", "type": "forcePushed"}, {"oid": "e2be326d8c339cc389d13a4253c90c00af5a0461", "url": "https://github.com/OpenLiberty/open-liberty/commit/e2be326d8c339cc389d13a4253c90c00af5a0461", "message": "Send Redirect to Relative URL", "committedDate": "2020-08-27T14:11:00Z", "type": "forcePushed"}, {"oid": "0c05b86c9575000a8cccc7d04c91ef16a661556f", "url": "https://github.com/OpenLiberty/open-liberty/commit/0c05b86c9575000a8cccc7d04c91ef16a661556f", "message": "Send Redirect to Relative URL", "committedDate": "2020-08-27T14:16:00Z", "type": "forcePushed"}, {"oid": "01d6a3afe2e2cd7692a80bb3b59b60123712c903", "url": "https://github.com/OpenLiberty/open-liberty/commit/01d6a3afe2e2cd7692a80bb3b59b60123712c903", "message": "Send Redirect to Relative URL", "committedDate": "2020-10-29T14:34:57Z", "type": "forcePushed"}, {"oid": "ecf510ca3f0ff8bd80c5d485a28551a5239b8ebd", "url": "https://github.com/OpenLiberty/open-liberty/commit/ecf510ca3f0ff8bd80c5d485a28551a5239b8ebd", "message": "Send Redirect to Relative URL", "committedDate": "2020-10-29T18:28:25Z", "type": "forcePushed"}, {"oid": "1f66b7adca84b48fbac049c9f5a268103b86a101", "url": "https://github.com/OpenLiberty/open-liberty/commit/1f66b7adca84b48fbac049c9f5a268103b86a101", "message": "Send Redirect to Relative URL", "committedDate": "2020-10-30T01:55:22Z", "type": "forcePushed"}, {"oid": "24d30bef290d5923219ab48648812a813c7434a6", "url": "https://github.com/OpenLiberty/open-liberty/commit/24d30bef290d5923219ab48648812a813c7434a6", "message": "Send Redirect to Relative URL", "committedDate": "2020-10-30T01:58:52Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk4OTI5OA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12563#discussion_r532989298", "bodyText": "Phu I think we need to update this comment to reflect whatever release this is going to make it into. Please check it out, update the comment, run a build and lets get this merged this week if we can.", "author": "pnicolucci", "createdAt": "2020-12-01T00:18:40Z", "path": "dev/com.ibm.ws.webcontainer/src/com/ibm/wsspi/webcontainer/WCCustomProperties.java", "diffHunk": "@@ -316,6 +316,9 @@\n     //20.0.0.8\n     public static boolean DECODE_URL_PLUS_SIGN;\n \n+    //20.0.0.12\n+    public static boolean REDIRECT_TO_RELATIVE_URL;", "originalCommit": "24d30bef290d5923219ab48648812a813c7434a6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk4OTM1NA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12563#discussion_r532989354", "bodyText": "Same goes for this comment", "author": "pnicolucci", "createdAt": "2020-12-01T00:18:50Z", "path": "dev/com.ibm.ws.webcontainer/src/com/ibm/wsspi/webcontainer/WCCustomProperties.java", "diffHunk": "@@ -792,6 +795,9 @@ public static void setCustomPropertyVariables() {\n         // 19.0.0.8\n         GET_REAL_PATH_RETURNS_QUALIFIED_PATH = Boolean.valueOf(WebContainer.getWebContainerProperties().getProperty(\"com.ibm.ws.webcontainer.getrealpathreturnsqualifiedpath\", \"true\")).booleanValue();\n         \n+        //20.0.0.12\n+        REDIRECT_TO_RELATIVE_URL = Boolean.valueOf(WebContainer.getWebContainerProperties().getProperty(\"com.ibm.ws.webcontainer.redirecttorelativeurl\", \"false\")).booleanValue();", "originalCommit": "24d30bef290d5923219ab48648812a813c7434a6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "22b32823202b61c2bd0b1aa715e714f92c88c901", "url": "https://github.com/OpenLiberty/open-liberty/commit/22b32823202b61c2bd0b1aa715e714f92c88c901", "message": "Send Redirect to Relative URL", "committedDate": "2020-12-01T21:28:03Z", "type": "commit"}, {"oid": "22b32823202b61c2bd0b1aa715e714f92c88c901", "url": "https://github.com/OpenLiberty/open-liberty/commit/22b32823202b61c2bd0b1aa715e714f92c88c901", "message": "Send Redirect to Relative URL", "committedDate": "2020-12-01T21:28:03Z", "type": "forcePushed"}]}