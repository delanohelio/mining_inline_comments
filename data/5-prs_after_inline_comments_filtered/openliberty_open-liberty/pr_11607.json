{"pr_number": 11607, "pr_title": "Use SmallRye GraphQL Implementation", "pr_createdAt": "2020-04-02T21:53:45Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/11607", "timeline": [{"oid": "83f1c1fbc5f135e8853bfc635ecbba6ed6a03751", "url": "https://github.com/OpenLiberty/open-liberty/commit/83f1c1fbc5f135e8853bfc635ecbba6ed6a03751", "message": "Additional SmallRye specific changes/updates", "committedDate": "2020-04-03T14:08:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA1OTgwNQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11607#discussion_r403059805", "bodyText": "ANDY", "author": "WhiteCat22", "createdAt": "2020-04-03T14:49:00Z", "path": "dev/com.ibm.ws.io.smallrye.graphql/src/com/ibm/ws/io/smallrye/graphql/component/GraphQLExtension.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package com.ibm.ws.io.smallrye.graphql.component;\n+\n+import java.security.AccessController;\n+import java.security.PrivilegedAction;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.WeakHashMap;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+\n+import javax.enterprise.event.Observes;\n+import javax.enterprise.inject.spi.AfterBeanDiscovery;\n+import javax.enterprise.inject.spi.Annotated;\n+import javax.enterprise.inject.spi.AnnotatedType;\n+import javax.enterprise.inject.spi.Bean;\n+import javax.enterprise.inject.spi.BeanManager;\n+import javax.enterprise.inject.spi.BeforeBeanDiscovery;\n+import javax.enterprise.inject.spi.Extension;\n+import javax.enterprise.inject.spi.ProcessBean;\n+\n+import com.ibm.ws.cdi.CDIServiceUtils;\n+import com.ibm.ws.cdi.extension.WebSphereCDIExtension;\n+\n+import org.eclipse.microprofile.graphql.GraphQLApi;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.ConfigurationPolicy;\n+\n+\n+@Component(configurationPolicy = ConfigurationPolicy.IGNORE,\n+immediate = true,\n+property = { \"api.classes=org.eclipse.microprofile.graphql.GraphQLApi\",\n+             \"bean.defining.annotations=org.eclipse.microprofile.graphql.GraphQLApi\",\n+             \"service.vendor=IBM\" })\n+public class GraphQLExtension implements Extension, WebSphereCDIExtension {\n+    private static final Logger LOG = Logger.getLogger(GraphQLExtension.class.getName());\n+    \n+    static Map<ClassLoader, BeanManager> beanManagers = new WeakHashMap<>();\n+\n+    static Map<ClassLoader, Set<Bean<?>>> graphQLApiBeans = new WeakHashMap<>();\n+\n+    public void beforeBeanDiscovery(@Observes BeforeBeanDiscovery beforeBeanDiscovery, BeanManager beanManager) {\n+        //register the tracing interceptor binding and the interceptor itself\n+        AnnotatedType<GraphQLApi> bindingType = beanManager.createAnnotatedType(GraphQLApi.class);\n+        beforeBeanDiscovery.addInterceptorBinding(bindingType);\n+        AnnotatedType<TracingInterceptor> interceptorType = beanManager.createAnnotatedType(TracingInterceptor.class);\n+        beforeBeanDiscovery.addAnnotatedType(interceptorType, CDIServiceUtils.getAnnotatedTypeIdentifier(interceptorType, this.getClass()));\n+    }\n+\n+    public <X> void detectGraphQLComponent(@Observes ProcessBean<X> event, BeanManager beanManager) {\n+        Annotated annotated = event.getAnnotated();\n+        if (annotated.isAnnotationPresent(GraphQLApi.class)) {\n+            Bean<?> bean = event.getBean();\n+            Class<?> beanClass = bean.getBeanClass();\n+            ClassLoader loader = getContextClassLoader();\n+            if (LOG.isLoggable(Level.FINEST)) {\n+                LOG.finest(\"class, \" + beanClass + \" loaded by TCCL \" + loader + \" has beanManager, \" + beanManager);\n+            }\n+            beanManagers.put(loader, beanManager);\n+            graphQLApiBeans.computeIfAbsent(loader, k -> new HashSet<>()).add(bean);\n+        }\n+    }\n+\n+    public void registerGraphQLBeans(@Observes AfterBeanDiscovery afterBeanDiscovery, BeanManager beanManager) {\n+        ClassLoader tccl = getContextClassLoader();\n+        Set<Bean<?>> beans = null;\n+        synchronized (graphQLApiBeans) {\n+            beans = graphQLApiBeans.get(tccl);\n+        }\n+        if (beans != null) {\n+            for (Bean<?> bean : beans) {\n+                if (LOG.isLoggable(Level.FINEST)) {\n+                    LOG.finest(\"ANDY adding Bean, \" + bean + \" to afterBeanDiscovery\");", "originalCommit": "83f1c1fbc5f135e8853bfc635ecbba6ed6a03751", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEyOTk4Mg==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11607#discussion_r403129982", "bodyText": "Can't a guy get a little credit for all his work?!  Sheesh!  ;-)  Good catch.", "author": "andymc12", "createdAt": "2020-04-03T16:31:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA1OTgwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA2NDM4Mg==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11607#discussion_r403064382", "bodyText": "empty comment block, missing copyright header", "author": "WhiteCat22", "createdAt": "2020-04-03T14:55:26Z", "path": "dev/com.ibm.ws.microprofile.graphql.1.0_fat/test-applications/defaultvalueApp/src/mpGraphQL10/defaultvalue/Variables.java", "diffHunk": "@@ -0,0 +1,8 @@\n+/**", "originalCommit": "83f1c1fbc5f135e8853bfc635ecbba6ed6a03751", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA2NDg5MA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11607#discussion_r403064890", "bodyText": "empty comment block, missing copyright header", "author": "WhiteCat22", "createdAt": "2020-04-03T14:56:05Z", "path": "dev/com.ibm.ws.microprofile.graphql.1.0_fat/test-applications/defaultvalueApp/src/mpGraphQL10/defaultvalue/VariablesAsString.java", "diffHunk": "@@ -0,0 +1,25 @@\n+/**", "originalCommit": "83f1c1fbc5f135e8853bfc635ecbba6ed6a03751", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA2NTA1MA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11607#discussion_r403065050", "bodyText": "empty comment block, missing copyright header", "author": "WhiteCat22", "createdAt": "2020-04-03T14:56:18Z", "path": "dev/com.ibm.ws.microprofile.graphql.1.0_fat/test-applications/defaultvalueApp/src/mpGraphQL10/defaultvalue/VariablesIndividualProps.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/**", "originalCommit": "83f1c1fbc5f135e8853bfc635ecbba6ed6a03751", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA2NTEzNA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11607#discussion_r403065134", "bodyText": "empty comment block, missing copyright header", "author": "WhiteCat22", "createdAt": "2020-04-03T14:56:26Z", "path": "dev/com.ibm.ws.microprofile.graphql.1.0_fat/test-applications/defaultvalueApp/src/mpGraphQL10/defaultvalue/VariablesWeightOnly.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/**", "originalCommit": "83f1c1fbc5f135e8853bfc635ecbba6ed6a03751", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "80c6c525a77ff94f5ccc7ccb94d03840213497df", "url": "https://github.com/OpenLiberty/open-liberty/commit/80c6c525a77ff94f5ccc7ccb94d03840213497df", "message": "Accounting for limitations in build and anno test", "committedDate": "2020-04-06T18:57:56Z", "type": "forcePushed"}, {"oid": "a9dd25045f7860b6a284342574151468e01315a2", "url": "https://github.com/OpenLiberty/open-liberty/commit/a9dd25045f7860b6a284342574151468e01315a2", "message": "Temporarily remove GraphQL Metrics support - waiting for SmallRye impl", "committedDate": "2020-04-07T13:56:02Z", "type": "forcePushed"}, {"oid": "d664e6101f6fb3d01d62ddd2a52f9c0ae17584cf", "url": "https://github.com/OpenLiberty/open-liberty/commit/d664e6101f6fb3d01d62ddd2a52f9c0ae17584cf", "message": "Temporarily remove GraphQL Metrics support - waiting for SmallRye impl", "committedDate": "2020-04-07T13:57:22Z", "type": "forcePushed"}, {"oid": "78de7e087d6b2a4f1ad2ca83ab209c198369b31e", "url": "https://github.com/OpenLiberty/open-liberty/commit/78de7e087d6b2a4f1ad2ca83ab209c198369b31e", "message": "Remove old graphql impl", "committedDate": "2020-04-17T19:30:10Z", "type": "commit"}, {"oid": "243b4a87992ec569f8e8a44b5d45c41228b5a296", "url": "https://github.com/OpenLiberty/open-liberty/commit/243b4a87992ec569f8e8a44b5d45c41228b5a296", "message": "Add in SmallRye GraphQL implementation\n\n- includes updated GraphQL-Java impl\n- includes updated TCK - passes TCK", "committedDate": "2020-04-17T19:31:35Z", "type": "commit"}, {"oid": "87b433d93927635966c6aae7c16af39ca02292db", "url": "https://github.com/OpenLiberty/open-liberty/commit/87b433d93927635966c6aae7c16af39ca02292db", "message": "WIP: Updates to FAT to account for changes in MP GraphQL impl (SmallRye)", "committedDate": "2020-04-17T19:31:36Z", "type": "commit"}, {"oid": "bff7106cc9d5000d16d6614d978229a4e2a8943f", "url": "https://github.com/OpenLiberty/open-liberty/commit/bff7106cc9d5000d16d6614d978229a4e2a8943f", "message": "Additional SmallRye specific changes/updates", "committedDate": "2020-04-17T19:31:36Z", "type": "commit"}, {"oid": "1bdce9407ebdcdd6fe11c8e7d21b840682bfb486", "url": "https://github.com/OpenLiberty/open-liberty/commit/1bdce9407ebdcdd6fe11c8e7d21b840682bfb486", "message": "Code review comments", "committedDate": "2020-04-17T19:31:37Z", "type": "commit"}, {"oid": "ca055c440d67c14cdcdf88ef4fa2b70a8e0543ca", "url": "https://github.com/OpenLiberty/open-liberty/commit/ca055c440d67c14cdcdf88ef4fa2b70a8e0543ca", "message": "Temporarily remove GraphQL Metrics support - waiting for SmallRye impl", "committedDate": "2020-04-17T19:31:37Z", "type": "commit"}, {"oid": "ca055c440d67c14cdcdf88ef4fa2b70a8e0543ca", "url": "https://github.com/OpenLiberty/open-liberty/commit/ca055c440d67c14cdcdf88ef4fa2b70a8e0543ca", "message": "Temporarily remove GraphQL Metrics support - waiting for SmallRye impl", "committedDate": "2020-04-17T19:31:37Z", "type": "forcePushed"}]}