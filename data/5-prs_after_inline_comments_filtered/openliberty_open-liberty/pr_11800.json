{"pr_number": 11800, "pr_title": "Allow the creation of the KafkaConsumer to be retried", "pr_createdAt": "2020-04-17T16:17:10Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/11800", "timeline": [{"oid": "7ddb3733a92a322d0040dfd163238d42991b27a9", "url": "https://github.com/OpenLiberty/open-liberty/commit/7ddb3733a92a322d0040dfd163238d42991b27a9", "message": "Retry obtaining KafkaConsumer\n\nWhen starting in a dynamic environment like Kubertnetes, it's possible\nfor the broker hostname to be unresolvable immediately at startup, which\ncauses the creation of the KafkaConsumer to fail.\n\nIntroduce a new parameter to allow the KafkaConsumer creation to be\nretried during server startup.", "committedDate": "2020-04-22T16:01:07Z", "type": "commit"}, {"oid": "e274d7c7932a0429f8b1c004c0d16fed0e9a9015", "url": "https://github.com/OpenLiberty/open-liberty/commit/e274d7c7932a0429f8b1c004c0d16fed0e9a9015", "message": "Add test for bad config\n\nCheck that app fails to start and that creation of the KafkaConsumer is\nretried if creation.retry.seconds is set.", "committedDate": "2020-04-22T16:01:07Z", "type": "commit"}, {"oid": "e274d7c7932a0429f8b1c004c0d16fed0e9a9015", "url": "https://github.com/OpenLiberty/open-liberty/commit/e274d7c7932a0429f8b1c004c0d16fed0e9a9015", "message": "Add test for bad config\n\nCheck that app fails to start and that creation of the KafkaConsumer is\nretried if creation.retry.seconds is set.", "committedDate": "2020-04-22T16:01:07Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY3NzIxMA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11800#discussion_r413677210", "bodyText": "Please extract this sleep time to a constant. Any thoughts on if it needs to be configurable?", "author": "tevans78", "createdAt": "2020-04-23T09:53:00Z", "path": "dev/com.ibm.ws.microprofile.reactive.messaging.kafka/src/com/ibm/ws/microprofile/reactive/messaging/kafka/KafkaIncomingConnector.java", "diffHunk": "@@ -135,4 +138,25 @@ private void shutdown() {\n         }\n     }\n \n+    private <K, V> KafkaConsumer<K, V> getKafkaConsumerWithRetry(Map<String, Object> consumerConfig, int retrySeconds, String channelName) throws InterruptedException {\n+        if (retrySeconds == 0) {\n+            return this.kafkaAdapterFactory.newKafkaConsumer(consumerConfig);\n+        }\n+\n+        long retryNs = Duration.ofSeconds(retrySeconds).toNanos();\n+        long startTime = System.nanoTime();\n+\n+        while (true) {\n+            try {\n+                return this.kafkaAdapterFactory.newKafkaConsumer(consumerConfig);\n+            } catch (KafkaAdapterException e) {\n+                if ((System.nanoTime() - startTime) > retryNs) {\n+                    throw e;\n+                }\n+                Tr.warning(tc, \"kafka.create.incoming.retry.CWMRX1009W\", channelName, e.getMessage());\n+            }\n+            Thread.sleep(1000);", "originalCommit": "e274d7c7932a0429f8b1c004c0d16fed0e9a9015", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY4NjI1Nw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11800#discussion_r413686257", "bodyText": "It's a fairly limited use case (broker hostname is not resolvable at startup) so I went for a simpler single option configuration, rather than two options (number of times to retry + delay between retries).", "author": "Azquelt", "createdAt": "2020-04-23T10:06:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY3NzIxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY4NjYyOA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11800#discussion_r413686628", "bodyText": "I'm not sure that extracting it into a constant actually helps anything here.", "author": "Azquelt", "createdAt": "2020-04-23T10:06:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY3NzIxMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY4MTM2Mw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11800#discussion_r413681363", "bodyText": "In SmallRye, the wait between the retry is 30s. https://smallrye.io/smallrye-reactive-messaging/smallrye-reactive-messaging/2/kafka/kafka.html I think the default should be 30s instead of 0.", "author": "Emily-Jiang", "createdAt": "2020-04-23T09:59:07Z", "path": "dev/com.ibm.ws.microprofile.reactive.messaging.kafka/src/com/ibm/ws/microprofile/reactive/messaging/kafka/KafkaIncomingConnector.java", "diffHunk": "@@ -96,6 +98,7 @@ private void shutdown() {\n             String topic = config.getOptionalValue(KafkaConnectorConstants.TOPIC, String.class).orElse(channelName);\n             int maxPollRecords = config.getOptionalValue(KafkaConnectorConstants.MAX_POLL_RECORDS, Integer.class).orElse(500);\n             int unackedLimit = config.getOptionalValue(KafkaConnectorConstants.UNACKED_LIMIT, Integer.class).orElse(maxPollRecords);\n+            int retrySeconds = config.getOptionalValue(KafkaConnectorConstants.CREATION_RETRY_SECONDS, Integer.class).orElse(0);", "originalCommit": "e274d7c7932a0429f8b1c004c0d16fed0e9a9015", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY4Mzk2Nw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11800#discussion_r413683967", "bodyText": "I disagree.\nWe can't tell the difference between a failure caused by the hostname not being resolvable and a failure caused by bad configuration.\nIf the user has configured the application wrongly, we want to app to fail to start as soon as possible, not pointlessly retry for 30s.\nAs far as we've seen so far, having the broker hostname not be resolvable is the only failure that Kafka treats this way, in most cases network failures are already retried automatically by the kafka client.", "author": "Azquelt", "createdAt": "2020-04-23T10:02:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY4MTM2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY4NTM0MQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11800#discussion_r413685341", "bodyText": "No-one should have to use this unless they're deploying in an environment where the kafka broker and the app are being brought up at the same time. (e.g. during a kubernetes deployment in a test environment)", "author": "Azquelt", "createdAt": "2020-04-23T10:05:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY4MTM2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY4MzU4Mw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11800#discussion_r413683583", "bodyText": "Can we sync up with SmallRye for the retry-max-wait, retry-attempts?", "author": "Emily-Jiang", "createdAt": "2020-04-23T10:02:23Z", "path": "dev/com.ibm.ws.microprofile.reactive.messaging.kafka/src/com/ibm/ws/microprofile/reactive/messaging/kafka/KafkaIncomingConnector.java", "diffHunk": "@@ -135,4 +138,25 @@ private void shutdown() {\n         }\n     }\n \n+    private <K, V> KafkaConsumer<K, V> getKafkaConsumerWithRetry(Map<String, Object> consumerConfig, int retrySeconds, String channelName) throws InterruptedException {\n+        if (retrySeconds == 0) {\n+            return this.kafkaAdapterFactory.newKafkaConsumer(consumerConfig);\n+        }\n+\n+        long retryNs = Duration.ofSeconds(retrySeconds).toNanos();\n+        long startTime = System.nanoTime();\n+\n+        while (true) {\n+            try {\n+                return this.kafkaAdapterFactory.newKafkaConsumer(consumerConfig);", "originalCommit": "e274d7c7932a0429f8b1c004c0d16fed0e9a9015", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY4NDM4OQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11800#discussion_r413684389", "bodyText": "I'm not sure what the point of those options are in smallrye, they don't seem to be the same as this one.\nThey talk about retrying the connection if it goes down, which is not what this change is doing.", "author": "Azquelt", "createdAt": "2020-04-23T10:03:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY4MzU4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY4ODczNg==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11800#discussion_r413688736", "bodyText": "I named the property creation.retry.seconds to emphasise that it's only the creation of the kafka client which is retried.\nOnce we have set up the kafka client, we leave it to do any retries itself.", "author": "Azquelt", "createdAt": "2020-04-23T10:10:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY4MzU4Mw=="}], "type": "inlineReview"}, {"oid": "66af0d2ae019875d93696074421d4e886edff520", "url": "https://github.com/OpenLiberty/open-liberty/commit/66af0d2ae019875d93696074421d4e886edff520", "message": "Message review changes for Kafka connector", "committedDate": "2020-04-23T14:07:16Z", "type": "commit"}, {"oid": "3747cdf6ce505b28e07705465c2097b1acca16f4", "url": "https://github.com/OpenLiberty/open-liberty/commit/3747cdf6ce505b28e07705465c2097b1acca16f4", "message": "Further message review changes for Kafka connector", "committedDate": "2020-05-05T17:06:44Z", "type": "commit"}, {"oid": "e941837a803e3479d5001111825a9fc23bae6d17", "url": "https://github.com/OpenLiberty/open-liberty/commit/e941837a803e3479d5001111825a9fc23bae6d17", "message": "Further message review changes for Kafka connector", "committedDate": "2020-05-13T11:02:27Z", "type": "commit"}]}