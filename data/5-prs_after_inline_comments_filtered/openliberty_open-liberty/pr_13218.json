{"pr_number": 13218, "pr_title": "6436 modernise third party fat bucket", "pr_createdAt": "2020-07-28T18:13:29Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/13218", "timeline": [{"oid": "ac5ffaeb565d424cf61f297140ee89dc10db5787", "url": "https://github.com/OpenLiberty/open-liberty/commit/ac5ffaeb565d424cf61f297140ee89dc10db5787", "message": "validate exported apps", "committedDate": "2020-07-29T09:36:38Z", "type": "forcePushed"}, {"oid": "c987db78913f4e6e0a3786d54e8f4d43dd20fe51", "url": "https://github.com/OpenLiberty/open-liberty/commit/c987db78913f4e6e0a3786d54e8f4d43dd20fe51", "message": "validate exported apps", "committedDate": "2020-08-07T09:57:51Z", "type": "forcePushed"}, {"oid": "910b770e4071b94f2711cb97a15347c34f05fbbd", "url": "https://github.com/OpenLiberty/open-liberty/commit/910b770e4071b94f2711cb97a15347c34f05fbbd", "message": "Modernise tests", "committedDate": "2020-08-10T14:13:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk0MjU1OQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13218#discussion_r467942559", "bodyText": "Where you've renamed the file, I think the original date should remain?", "author": "Azquelt", "createdAt": "2020-08-10T14:27:39Z", "path": "dev/com.ibm.ws.cdi.third.party_fat/fat/src/com/ibm/ws/cdi12/fat/tests/ThirdPartyTests.java", "diffHunk": "@@ -1,5 +1,5 @@\n /*******************************************************************************\n- * Copyright (c) 2015, 2018 IBM Corporation and others.\n+ * Copyright (c) 2020 IBM Corporation and others.", "originalCommit": "910b770e4071b94f2711cb97a15347c34f05fbbd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk0NjU4OA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13218#discussion_r467946588", "bodyText": "While I like the additional option to disable validation, I suspect that this change will break tests which aren't expecting this method to validate.\nThat isn't to say we shouldn't do it, just that I think we'll need a FULL mode run of every bucket which references this method to check we haven't broken something.\nAt the very least, we need to check the 133 references to it to see which are expecting the app to deploy correctly.", "author": "Azquelt", "createdAt": "2020-08-10T14:33:26Z", "path": "dev/fattest.simplicity/src/com/ibm/websphere/simplicity/ShrinkHelper.java", "diffHunk": "@@ -128,6 +137,13 @@ private static boolean serverOnly(DeployOptions[] options) {\n      */\n     public static void exportAppToServer(LibertyServer server, Archive<?> a, DeployOptions... options) throws Exception {\n         exportToServer(server, \"apps\", a, options);\n+\n+        String appName = a.getName();\n+        if (shouldValidate(options)) {\n+            String installedAppName = (appName.endsWith(\".war\") || appName.endsWith(\".ear\"))\n+                        ? appName.substring(0, appName.length() - 4) : appName;\n+            server.addInstalledAppForValidation(installedAppName);\n+        }", "originalCommit": "910b770e4071b94f2711cb97a15347c34f05fbbd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDc4ODgwOA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13218#discussion_r484788808", "bodyText": "Ben, did you check this?", "author": "tevans78", "createdAt": "2020-09-08T09:42:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk0NjU4OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk1MzA5NQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13218#discussion_r467953095", "bodyText": "I see you've added new files for the cdiThirdPartyServer, can the files for cdi12DeltaSpikeServer be deleted or is it still referenced elsewhere?", "author": "Azquelt", "createdAt": "2020-08-10T14:42:42Z", "path": "dev/com.ibm.ws.cdi.third.party_fat/fat/src/com/ibm/ws/cdi12/fat/tests/ThirdPartyTests.java", "diffHunk": "@@ -67,10 +87,21 @@ public static void setUp() throws Exception {\n                         .add(new FileAsset(new File(\"test-applications/deltaspikeTest.war/resources/META-INF/permissions.xml\")), \"/META-INF/permissions.xml\")\n                         .add(new FileAsset(new File(\"test-applications/deltaspikeTest.war/resources/WEB-INF/beans.xml\")), \"/WEB-INF/beans.xml\");\n \n-        server = LibertyServerFactory.getLibertyServer(\"cdi12DeltaSpikeServer\");\n+        server = LibertyServerFactory.getLibertyServer(\"cdiThirdPartyServer\");", "originalCommit": "910b770e4071b94f2711cb97a15347c34f05fbbd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "672caef1f3f9757a07ef1b7b388388a7c7c0092c", "url": "https://github.com/OpenLiberty/open-liberty/commit/672caef1f3f9757a07ef1b7b388388a7c7c0092c", "message": "Modernise tests", "committedDate": "2020-08-10T17:55:43Z", "type": "forcePushed"}, {"oid": "bf7b49b04653a680f2fc26d5770f626c0d49cfb2", "url": "https://github.com/OpenLiberty/open-liberty/commit/bf7b49b04653a680f2fc26d5770f626c0d49cfb2", "message": "Modernise tests", "committedDate": "2020-08-19T14:08:59Z", "type": "forcePushed"}, {"oid": "d9b8e4db4abf097e1ffd1ab32cc33c6472a9d9e7", "url": "https://github.com/OpenLiberty/open-liberty/commit/d9b8e4db4abf097e1ffd1ab32cc33c6472a9d9e7", "message": "Modernise tests", "committedDate": "2020-08-27T08:57:58Z", "type": "commit"}, {"oid": "34e495eaf70831183128b86952b844bad71a6ec5", "url": "https://github.com/OpenLiberty/open-liberty/commit/34e495eaf70831183128b86952b844bad71a6ec5", "message": "Add exemptions to apps that don't validate", "committedDate": "2020-08-27T08:57:58Z", "type": "forcePushed"}, {"oid": "58e8605e0268d823b4793a160eee736a73369bc3", "url": "https://github.com/OpenLiberty/open-liberty/commit/58e8605e0268d823b4793a160eee736a73369bc3", "message": "Add exemptions to apps that don't validate", "committedDate": "2020-08-28T09:01:15Z", "type": "forcePushed"}, {"oid": "554dfc595b985afcfd14fb58a200635970ecc33c", "url": "https://github.com/OpenLiberty/open-liberty/commit/554dfc595b985afcfd14fb58a200635970ecc33c", "message": "Add exemptions to apps that don't validate", "committedDate": "2020-08-28T09:03:33Z", "type": "forcePushed"}, {"oid": "7f87f1d14949786abb21d64c85d0dacd4b487d0b", "url": "https://github.com/OpenLiberty/open-liberty/commit/7f87f1d14949786abb21d64c85d0dacd4b487d0b", "message": "Add exemptions to apps that don't validate", "committedDate": "2020-09-04T09:31:55Z", "type": "forcePushed"}, {"oid": "293d425c31c23a88913575dec19b631b6168a6e6", "url": "https://github.com/OpenLiberty/open-liberty/commit/293d425c31c23a88913575dec19b631b6168a6e6", "message": "Update apps becuase ShrinkWrap now auto-validates on an additional method and some were timing out", "committedDate": "2020-09-04T09:40:34Z", "type": "forcePushed"}, {"oid": "87f2340cfb950ab4fc89a4d61a29d77c7f1de7d7", "url": "https://github.com/OpenLiberty/open-liberty/commit/87f2340cfb950ab4fc89a4d61a29d77c7f1de7d7", "message": "Update apps deployment becuase ShrinkWrap now auto-validates on an additional method and some were timing out", "committedDate": "2020-09-04T21:38:36Z", "type": "forcePushed"}, {"oid": "5b52d90bb0101f7204dcc251ac7f005630daf983", "url": "https://github.com/OpenLiberty/open-liberty/commit/5b52d90bb0101f7204dcc251ac7f005630daf983", "message": "Update apps deployment becuase ShrinkWrap now auto-validates on an additional method and some were timing out", "committedDate": "2020-09-07T10:00:12Z", "type": "commit"}, {"oid": "5b52d90bb0101f7204dcc251ac7f005630daf983", "url": "https://github.com/OpenLiberty/open-liberty/commit/5b52d90bb0101f7204dcc251ac7f005630daf983", "message": "Update apps deployment becuase ShrinkWrap now auto-validates on an additional method and some were timing out", "committedDate": "2020-09-07T10:00:12Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDc4MjQ2NA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13218#discussion_r484782464", "bodyText": "If possible please could you switch from a hard coded package name to a real package from one of the classes? That way it still works if things get moved.", "author": "tevans78", "createdAt": "2020-09-08T09:32:05Z", "path": "dev/com.ibm.ws.cdi.third.party_fat/fat/src/com/ibm/ws/cdi12/fat/tests/HibernateSearchTest.java", "diffHunk": "@@ -10,65 +10,70 @@\n  *******************************************************************************/\n package com.ibm.ws.cdi12.fat.tests;\n \n-import static componenttest.annotation.SkipForRepeat.NO_MODIFICATION;\n+import static componenttest.rules.repeater.EERepeatTests.EEVersion.EE8;\n+import static org.junit.Assert.assertFalse;\n \n import java.io.File;\n+import java.util.List;\n+\n+import org.junit.Assert;\n \n import org.jboss.shrinkwrap.api.ShrinkWrap;\n import org.jboss.shrinkwrap.api.asset.FileAsset;\n+import org.jboss.shrinkwrap.api.spec.EnterpriseArchive;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n import org.jboss.shrinkwrap.api.spec.WebArchive;\n import org.junit.AfterClass;\n import org.junit.Assert;\n import org.junit.BeforeClass;\n+import org.junit.ClassRule;\n import org.junit.Test;\n import org.junit.runner.RunWith;\n \n import com.ibm.websphere.simplicity.ShrinkHelper;\n-import com.ibm.ws.fat.util.LoggingTest;\n import com.ibm.ws.fat.util.SharedServer;\n import com.ibm.ws.fat.util.browser.WebBrowser;\n+import com.ibm.ws.fat.util.browser.WebBrowserFactory;\n import com.ibm.ws.fat.util.browser.WebResponse;\n \n-import componenttest.annotation.SkipForRepeat;\n+import componenttest.annotation.Server;\n+import componenttest.annotation.TestServlet;\n+import componenttest.annotation.TestServlets;\n import componenttest.custom.junit.runner.FATRunner;\n-import componenttest.custom.junit.runner.Mode;\n-import componenttest.custom.junit.runner.Mode.TestMode;\n import componenttest.topology.impl.LibertyServer;\n import componenttest.topology.impl.LibertyServerFactory;\n+import componenttest.rules.repeater.RepeatTests;\n+import componenttest.rules.repeater.EERepeatTests;\n+import componenttest.topology.utils.FATServletClient;\n \n-@Mode(TestMode.FULL)\n-@SkipForRepeat(NO_MODIFICATION)\n @RunWith(FATRunner.class)\n-public class HibernateSearchTest extends LoggingTest {\n+public class HibernateSearchTest extends FATServletClient {\n \n-    private static LibertyServer server;\n+    public static final String HIBERNATE_SEARCH_APP_NAME = \"hibernateSearchTest\";\n+    public static final String SERVER_NAME = \"cdi20HibernateSearchServer\";\n \n-    @Override\n-    protected SharedServer getSharedServer() {\n-        return null;\n-    }\n+    @Server(SERVER_NAME)\n+    @TestServlets({\n+                    @TestServlet(servlet = cdi.hibernate.test.web.SimpleTestServlet.class, contextRoot = HIBERNATE_SEARCH_APP_NAME) \n+    })\n+    public static LibertyServer server;\n+\n+    @ClassRule\n+    public static RepeatTests r = EERepeatTests.with(SERVER_NAME, EE8);\n \n     @BeforeClass\n     public static void setUp() throws Exception {\n \n-        WebArchive hibernateSearchTest = ShrinkWrap.create(WebArchive.class, \"hibernateSearchTest.war\")\n+        //Hibernate Search Test\n+        WebArchive hibernateSearchTest = ShrinkWrap.create(WebArchive.class, HIBERNATE_SEARCH_APP_NAME+\".war\")\n                         .addPackages(true, \"cdi.hibernate.test\")", "originalCommit": "5b52d90bb0101f7204dcc251ac7f005630daf983", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDc4NTYxNA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13218#discussion_r484785614", "bodyText": "Do you want to check the contents of the PrintWriter after the populate call? A PrintWriter probably isn't the best way to do it any more anyway?", "author": "tevans78", "createdAt": "2020-09-08T09:37:10Z", "path": "dev/com.ibm.ws.cdi.third.party_fat/test-applications/hibernateSearchTest.war/src/cdi/hibernate/test/web/SimpleTestServlet.java", "diffHunk": "@@ -49,23 +61,19 @@\n \n     private static boolean fieldBridgeCalled = false;\n     \n-    @Override\n-    protected void doGet(HttpServletRequest request, HttpServletResponse response)\n+    @Test\n+    @Mode(TestMode.FULL)\n+    @SkipForRepeat(NO_MODIFICATION)\n+    public void testHibernateSearch()\n             throws ServletException, IOException {\n-        final PrintWriter pw = response.getWriter();\n-        bean.getString();\n-        pw.println(\"<h1>JPA Simple Test Case</h1>\");\n-        pw.println(\"<hr>\");\n         try {\n-            // We trigger this method to indirectly call the field bridge.\n-            CommonTestCode.populate(request, response, em, tx);\n+            PrintWriter pw = new PrintWriter(new ByteArrayOutputStream());\n+            CommonTestCode.populate(pw, em, tx);", "originalCommit": "5b52d90bb0101f7204dcc251ac7f005630daf983", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}