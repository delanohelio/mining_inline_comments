{"pr_number": 11602, "pr_title": "Repeat the jsonp1.1_fat for jakarta ee9", "pr_createdAt": "2020-04-02T16:54:51Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/11602", "timeline": [{"oid": "8c52bfdae9f89dd547f92aa710ebed64675aad58", "url": "https://github.com/OpenLiberty/open-liberty/commit/8c52bfdae9f89dd547f92aa710ebed64675aad58", "message": "Repeat the jsonp1.1_fat for jakarta ee9", "committedDate": "2020-04-02T15:13:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ5NzM4NA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11602#discussion_r402497384", "bodyText": "Lets also include anno.toString() in this error message so that if a FAT has multiple @TestServlet annotations they can know which annotation had the bad servlet() value", "author": "aguibert", "createdAt": "2020-04-02T17:42:27Z", "path": "dev/fattest.simplicity/src/componenttest/annotation/processor/TestServletProcessor.java", "diffHunk": "@@ -98,6 +98,10 @@ private static String getQueryPath(TestServlet anno) {\n     }\n \n     private static Method[] getTestServletMethods(TestServlet anno) {\n+        if (!!!(javax.servlet.http.HttpServlet.class.isAssignableFrom(anno.servlet()) ||\n+                jakarta.servlet.http.HttpServlet.class.isAssignableFrom(anno.servlet()))) {\n+            throw new IllegalArgumentException(\"For the @TestServlet annotation, servlet() must be a subclass of javax.servlet.http.HttpServlet or jakarta.servlet.http.HttpServlet!\");", "originalCommit": "8c52bfdae9f89dd547f92aa710ebed64675aad58", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY0NjE3Nw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11602#discussion_r402646177", "bodyText": "I modified to the error message to be as clear as possible, including the annotation string of course, and provided a user-action.", "author": "dazavala", "createdAt": "2020-04-02T23:05:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ5NzM4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUwMTY2NQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11602#discussion_r402501665", "bodyText": "I don't think this will work on remote builds because generally only artifacts within the autoFVT.zip are accessible to the test at runtime. There are also a few other special cases like build.image, fattest.simplicity, ant_build, and test_build projects, but wlp-jakartaee-transform is not one of them.\nTo work around this, try adding some code to fattest.simplicity/build.gradle that copies these transform rules into autoFVT-templates/ at build time (see the assembleBoostrap task as a similar example). This will result in the transform rules being included in the autoFVT.zip so you can find them under user.dir at bucket runtime without needing to walk up any directories into unknown territory.", "author": "aguibert", "createdAt": "2020-04-02T17:49:36Z", "path": "dev/fattest.simplicity/src/componenttest/rules/repeater/JakartaEE9Action.java", "diffHunk": "@@ -178,33 +178,45 @@ public static void transformApp(Path appPath) {\n         //create backup directory\n         Path serverPath = appPath.getParent().getParent();\n         Path backupPath = serverPath.resolve(\"backup\");\n-            try {\n-                if(!Files.exists(backupPath)){\n-                    Files.createDirectory(backupPath); // throws IOException\n-                }\n-             } catch(IOException e){\n-                 Log.info(c, m, \"Unable to create backup directory.\");\n-                 Log.error(c, m, e);\n-                 throw new RuntimeException(e);\n-             }\n+        try {\n+            if (!Files.exists(backupPath)) {\n+                Files.createDirectory(backupPath); // throws IOException\n+            }\n+        } catch (IOException e) {\n+            Log.info(c, m, \"Unable to create backup directory.\");\n+            Log.error(c, m, e);\n+            throw new RuntimeException(e);\n+        }\n+\n+        String userDir = System.getProperty(\"user.dir\");\n+        String transformerRulesRoot = userDir.substring(0, userDir.lastIndexOf(\"/dev/\")) + \"/dev/wlp-jakartaee-transform/rules/\";", "originalCommit": "8c52bfdae9f89dd547f92aa710ebed64675aad58", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjczMTg0Nw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11602#discussion_r402731847", "bodyText": "Notice the solution in fat.gradle, which copies the transformer rules files along with the transformer jar.", "author": "dazavala", "createdAt": "2020-04-03T04:34:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUwMTY2NQ=="}], "type": "inlineReview"}, {"oid": "a72939d553f951d97817cfc9c2e422ca04e1610a", "url": "https://github.com/OpenLiberty/open-liberty/commit/a72939d553f951d97817cfc9c2e422ca04e1610a", "message": "Review updates", "committedDate": "2020-04-03T04:24:40Z", "type": "commit"}]}