{"pr_number": 12763, "pr_title": "Improve performance when no tracer is found", "pr_createdAt": "2020-06-23T22:49:52Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/12763", "timeline": [{"oid": "a3f23c7f61af136105b50ae44770f2ccacbfcdf9", "url": "https://github.com/OpenLiberty/open-liberty/commit/a3f23c7f61af136105b50ae44770f2ccacbfcdf9", "message": "Load tracer once only", "committedDate": "2020-06-23T22:39:36Z", "type": "forcePushed"}, {"oid": "f583b32d89b899bc53e245e7e7d92aeac9bb8fbc", "url": "https://github.com/OpenLiberty/open-liberty/commit/f583b32d89b899bc53e245e7e7d92aeac9bb8fbc", "message": "Load tracer once only", "committedDate": "2020-06-23T22:51:53Z", "type": "forcePushed"}, {"oid": "1570466789d836d8e24f8fcb3e3eb2b5abbf421b", "url": "https://github.com/OpenLiberty/open-liberty/commit/1570466789d836d8e24f8fcb3e3eb2b5abbf421b", "message": "Load tracer once only", "committedDate": "2020-07-02T20:57:44Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE2OTUzOQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12763#discussion_r451169539", "bodyText": "Do you need to \"unregister\" the Library listener on deactivate?  It all goes away maybe when deactivate is done?", "author": "jhanders34", "createdAt": "2020-07-07T22:02:40Z", "path": "dev/com.ibm.ws.opentracing.1.3/src/com/ibm/ws/opentracing/AppStateListener.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package com.ibm.ws.opentracing;\n+\n+import java.util.Dictionary;\n+import java.util.Hashtable;\n+import java.util.Map;\n+\n+import org.osgi.framework.BundleContext;\n+import org.osgi.framework.ServiceReference;\n+import org.osgi.service.component.ComponentContext;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.ConfigurationPolicy;\n+import org.osgi.service.component.annotations.Reference;\n+import org.osgi.service.component.annotations.ReferenceCardinality;\n+import org.osgi.service.component.annotations.ReferencePolicy;\n+\n+import com.ibm.ws.container.service.app.deploy.ApplicationInfo;\n+import com.ibm.ws.container.service.state.ApplicationStateListener;\n+import com.ibm.ws.container.service.state.StateChangeException;\n+import com.ibm.wsspi.kernel.service.utils.ConcurrentServiceReferenceSet;\n+import com.ibm.wsspi.library.Library;\n+import com.ibm.wsspi.library.LibraryChangeListener;\n+\n+@Component(service = { ApplicationStateListener.class }, configurationPolicy = ConfigurationPolicy.IGNORE, immediate = true, property = \"library=unbound\")\n+public class AppStateListener implements ApplicationStateListener, LibraryChangeListener {\n+\n+    private static final String LIBRARY = \"library\";\n+    private volatile ConcurrentServiceReferenceSet<Library> librarySet = new ConcurrentServiceReferenceSet<Library>(LIBRARY);\n+\n+    protected void activate(ComponentContext context, Map<String, Object> props) {\n+        librarySet.activate(context);\n+        for (ServiceReference<Library> ref : librarySet.references()) {\n+            registerLibraryListener(context.getBundleContext(), (String) ref.getProperty(\"id\"));\n+        }\n+    }\n+\n+    protected void deactivate(ComponentContext context) {\n+        librarySet.deactivate(context);", "originalCommit": "1570466789d836d8e24f8fcb3e3eb2b5abbf421b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE3MDExNw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12763#discussion_r451170117", "bodyText": "if appName is null this will also fail with a NullPointerException.", "author": "jhanders34", "createdAt": "2020-07-07T22:04:14Z", "path": "dev/com.ibm.ws.opentracing.1.3/src/com/ibm/ws/opentracing/OpentracingTracerManager.java", "diffHunk": "@@ -47,14 +50,21 @@ private static Tracer ensureTracer(String appName) {\n             Tr.entry(tc, methodName, appName);\n         }\n \n-        Tracer tracer = applicationTracers.get(appName);\n+        Tracer tracer = null;\n         boolean found = true;\n+        if (appName != null) {\n+            tracer = applicationTracers.get(appName);\n+        }\n \n         if (tracer == null) {\n             found = false;\n             tracer = applicationTracers.computeIfAbsent(appName, TracerCreator.INSTANCE);", "originalCommit": "1570466789d836d8e24f8fcb3e3eb2b5abbf421b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "92f4a9fbfe9e9180484b77b6fb3b115776dae9ac", "url": "https://github.com/OpenLiberty/open-liberty/commit/92f4a9fbfe9e9180484b77b6fb3b115776dae9ac", "message": "Load tracer once only", "committedDate": "2020-07-08T02:26:27Z", "type": "commit"}, {"oid": "92f4a9fbfe9e9180484b77b6fb3b115776dae9ac", "url": "https://github.com/OpenLiberty/open-liberty/commit/92f4a9fbfe9e9180484b77b6fb3b115776dae9ac", "message": "Load tracer once only", "committedDate": "2020-07-08T02:26:27Z", "type": "forcePushed"}]}