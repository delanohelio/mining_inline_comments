{"pr_number": 500, "pr_title": "XRDDEV-1027 adding duplicate access rights for a localgroup is prevented.", "pr_createdAt": "2020-05-14T12:11:26Z", "pr_url": "https://github.com/nordic-institute/X-Road/pull/500", "timeline": [{"oid": "cb83348fdd98982a28733dc0ceb3882496070cd5", "url": "https://github.com/nordic-institute/X-Road/commit/cb83348fdd98982a28733dc0ceb3882496070cd5", "message": "XRRDEV-1027: Add tests for adding duplicate accessrights for a localgroup", "committedDate": "2020-05-14T11:44:36Z", "type": "commit"}, {"oid": "123a823cd10c77c8c5b5d70e358dc7d79842d9ed", "url": "https://github.com/nordic-institute/X-Road/commit/123a823cd10c77c8c5b5d70e358dc7d79842d9ed", "message": "XRDDEV-1027: improve test", "committedDate": "2020-05-14T11:59:39Z", "type": "commit"}, {"oid": "10594d4a5c4a5edb318b5dad58f3ecac452908b2", "url": "https://github.com/nordic-institute/X-Road/commit/10594d4a5c4a5edb318b5dad58f3ecac452908b2", "message": "XRDDEV-1027: improve test", "committedDate": "2020-05-14T12:10:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk2MDIzNw==", "url": "https://github.com/nordic-institute/X-Road/pull/500#discussion_r427960237", "bodyText": "Missing @Test annotation so the test does not actually run", "author": "carohauta", "createdAt": "2020-05-20T12:15:17Z", "path": "src/proxy-ui-api/src/test/java/org/niis/xroad/restapi/openapi/ServicesApiControllerIntegrationTest.java", "diffHunk": "@@ -484,22 +484,45 @@ public void addAccessRights() {\n         assertEquals(calculatePrimeClientsBefore + 3, updatedServiceClients.size());\n     }\n \n-    @Test(expected = ConflictException.class)", "originalCommit": "10594d4a5c4a5edb318b5dad58f3ecac452908b2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAwMjMyNA==", "url": "https://github.com/nordic-institute/X-Road/pull/500#discussion_r428002324", "bodyText": "Oops. Added.", "author": "TJaakkola", "createdAt": "2020-05-20T13:18:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk2MDIzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk2MTk3MA==", "url": "https://github.com/nordic-institute/X-Road/pull/500#discussion_r427961970", "bodyText": "Could use fail() assertion here instead of throwing a plain Exception. It would better indicate that there was an actual assertion error and not an application error.", "author": "carohauta", "createdAt": "2020-05-20T12:17:58Z", "path": "src/proxy-ui-api/src/test/java/org/niis/xroad/restapi/openapi/ServicesApiControllerIntegrationTest.java", "diffHunk": "@@ -484,22 +484,45 @@ public void addAccessRights() {\n         assertEquals(calculatePrimeClientsBefore + 3, updatedServiceClients.size());\n     }\n \n-    @Test(expected = ConflictException.class)\n     @WithMockUser(authorities = { \"VIEW_SERVICE_ACL\", \"EDIT_SERVICE_ACL\" })\n-    public void addDuplicateAccessRight() {\n+    public void addDuplicateAccessRight() throws Exception {\n         when(globalConfService.clientsExist(any())).thenReturn(true);\n         when(globalConfService.globalGroupsExist(any())).thenReturn(true);\n         List<ServiceClient> serviceClients = servicesApiController.getServiceServiceClients(\n                 TestUtils.SS1_GET_RANDOM_V1).getBody();\n         assertEquals(SS1_GET_RANDOM_SERVICE_CLIENTS, serviceClients.size());\n \n+        // add subsystem TestUtils.CLIENT_ID_SS2 as duplicate\n         ServiceClients clientsToAdd = new ServiceClients()\n                 .addItemsItem(new ServiceClient().id(TestUtils.DB_LOCAL_GROUP_ID_2).serviceClientType(\n                         ServiceClientType.LOCALGROUP))\n                 .addItemsItem(new ServiceClient().id(TestUtils.CLIENT_ID_SS2).serviceClientType(\n                         ServiceClientType.SUBSYSTEM));\n+        try {\n+            servicesApiController.addServiceServiceClients(TestUtils.SS1_GET_RANDOM_V1, clientsToAdd);\n+            throw new Exception(\"Should throw Conflict exception in stead of this\");", "originalCommit": "10594d4a5c4a5edb318b5dad58f3ecac452908b2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAwMjQ2MQ==", "url": "https://github.com/nordic-institute/X-Road/pull/500#discussion_r428002461", "bodyText": "Changed.", "author": "TJaakkola", "createdAt": "2020-05-20T13:18:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk2MTk3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk2MjA4Mw==", "url": "https://github.com/nordic-institute/X-Road/pull/500#discussion_r427962083", "bodyText": "Same as above \ud83d\udc46", "author": "carohauta", "createdAt": "2020-05-20T12:18:11Z", "path": "src/proxy-ui-api/src/test/java/org/niis/xroad/restapi/openapi/ServicesApiControllerIntegrationTest.java", "diffHunk": "@@ -484,22 +484,45 @@ public void addAccessRights() {\n         assertEquals(calculatePrimeClientsBefore + 3, updatedServiceClients.size());\n     }\n \n-    @Test(expected = ConflictException.class)\n     @WithMockUser(authorities = { \"VIEW_SERVICE_ACL\", \"EDIT_SERVICE_ACL\" })\n-    public void addDuplicateAccessRight() {\n+    public void addDuplicateAccessRight() throws Exception {\n         when(globalConfService.clientsExist(any())).thenReturn(true);\n         when(globalConfService.globalGroupsExist(any())).thenReturn(true);\n         List<ServiceClient> serviceClients = servicesApiController.getServiceServiceClients(\n                 TestUtils.SS1_GET_RANDOM_V1).getBody();\n         assertEquals(SS1_GET_RANDOM_SERVICE_CLIENTS, serviceClients.size());\n \n+        // add subsystem TestUtils.CLIENT_ID_SS2 as duplicate\n         ServiceClients clientsToAdd = new ServiceClients()\n                 .addItemsItem(new ServiceClient().id(TestUtils.DB_LOCAL_GROUP_ID_2).serviceClientType(\n                         ServiceClientType.LOCALGROUP))\n                 .addItemsItem(new ServiceClient().id(TestUtils.CLIENT_ID_SS2).serviceClientType(\n                         ServiceClientType.SUBSYSTEM));\n+        try {\n+            servicesApiController.addServiceServiceClients(TestUtils.SS1_GET_RANDOM_V1, clientsToAdd);\n+            throw new Exception(\"Should throw Conflict exception in stead of this\");\n+        } catch (ConflictException e) { }\n \n-        servicesApiController.addServiceServiceClients(TestUtils.SS1_GET_RANDOM_V1, clientsToAdd);\n+        // try adding duplicate local group\n+        ServiceClients existingLocalGroup = new ServiceClients()\n+                        .addItemsItem(new ServiceClient().id(TestUtils.DB_LOCAL_GROUP_ID_1).serviceClientType(\n+                        ServiceClientType.LOCALGROUP));\n+        try {\n+            servicesApiController.addServiceServiceClients(TestUtils.SS1_GET_RANDOM_V1, existingLocalGroup);\n+            throw new Exception(\"Should throw Conflict exception in stead of this\");", "originalCommit": "10594d4a5c4a5edb318b5dad58f3ecac452908b2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAwMjY4MA==", "url": "https://github.com/nordic-institute/X-Road/pull/500#discussion_r428002680", "bodyText": "Changed.", "author": "TJaakkola", "createdAt": "2020-05-20T13:19:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk2MjA4Mw=="}], "type": "inlineReview"}, {"oid": "3270b78d134f7264fde48b73a114f4cf5401ff0d", "url": "https://github.com/nordic-institute/X-Road/commit/3270b78d134f7264fde48b73a114f4cf5401ff0d", "message": "XRDDEV-1027: Fixes to tests", "committedDate": "2020-05-20T13:27:47Z", "type": "commit"}]}