{"pr_number": 521, "pr_title": "XRDDEV-68", "pr_createdAt": "2020-05-27T05:42:36Z", "pr_url": "https://github.com/nordic-institute/X-Road/pull/521", "timeline": [{"oid": "0dfa50987f4fdc41a11e9e3785037b342edf6394", "url": "https://github.com/nordic-institute/X-Road/commit/0dfa50987f4fdc41a11e9e3785037b342edf6394", "message": "XRDDEV-68 change local variable usage", "committedDate": "2020-05-21T19:50:11Z", "type": "commit"}, {"oid": "58cbdaf590afea6ff9fa147a0b1683ef94ee290a", "url": "https://github.com/nordic-institute/X-Road/commit/58cbdaf590afea6ff9fa147a0b1683ef94ee290a", "message": "XRDDEV-68: code style fixes", "committedDate": "2020-05-26T08:22:33Z", "type": "commit"}, {"oid": "e8490b97d56f65ccda609d8c9d25d6574b195ae3", "url": "https://github.com/nordic-institute/X-Road/commit/e8490b97d56f65ccda609d8c9d25d6574b195ae3", "message": "XRDDEV-68: style issues", "committedDate": "2020-05-26T08:35:11Z", "type": "commit"}, {"oid": "6dbb84e2f38baa3bf2f18b2033c89e76b955037b", "url": "https://github.com/nordic-institute/X-Road/commit/6dbb84e2f38baa3bf2f18b2033c89e76b955037b", "message": "XRDDEV-68 Style fixes", "committedDate": "2020-05-27T05:38:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg5NDY0Mg==", "url": "https://github.com/nordic-institute/X-Road/pull/521#discussion_r431894642", "bodyText": "Suggestion: use the cache.get(key, loader). It also makes it possible to remove the synchronized modifier. something like\ntry {\n   final String key = ...\n   return RESPONSE_VALIDITY_CACHE.get(key, () -> verifyResponseValidity(response, subject, issuer));\n } catch (ExecutionException | UncheckedExecutionException e) {\n   throw (Exception)e.getCause();\n }", "author": "jhyoty", "createdAt": "2020-05-28T14:45:58Z", "path": "src/common-verifier/src/main/java/ee/ria/xroad/common/ocsp/OcspVerifier.java", "diffHunk": "@@ -184,11 +192,12 @@ private synchronized SingleResp verifyResponseValidityCached(OCSPResp response,\n                                                                  X509Certificate issuer)\n             throws Exception {\n         String key = SINGLE_RESP + response.hashCode() + subject.hashCode() + issuer.hashCode();\n-        if (!CACHE.isValid(key)) {\n-            CACHE.setValue(key, verifyResponseValidity(response, subject, issuer));\n+        SingleResp responseValidity = RESPONSE_VALIDITY_CACHE.getIfPresent(key);\n+        if (responseValidity == null) {\n+            responseValidity = verifyResponseValidity(response, subject, issuer);\n+            RESPONSE_VALIDITY_CACHE.put(key, responseValidity);", "originalCommit": "6dbb84e2f38baa3bf2f18b2033c89e76b955037b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "53955ab689f0e44ec846ba95ff7f0102356d3aa4", "url": "https://github.com/nordic-institute/X-Road/commit/53955ab689f0e44ec846ba95ff7f0102356d3aa4", "message": "XRDDEV-68 refactoring and adding the test", "committedDate": "2020-05-29T06:01:46Z", "type": "commit"}, {"oid": "0f2b2b6700164be61ec4f6d5858baafcc5a8e73e", "url": "https://github.com/nordic-institute/X-Road/commit/0f2b2b6700164be61ec4f6d5858baafcc5a8e73e", "message": "Merge branch 'develop' into XRDDEV-68-local-variables", "committedDate": "2020-05-29T06:17:09Z", "type": "commit"}, {"oid": "dbf4c832d350aeced1de31fd99f7952132f778f7", "url": "https://github.com/nordic-institute/X-Road/commit/dbf4c832d350aeced1de31fd99f7952132f778f7", "message": "XRDDEV-68 limit cache size", "committedDate": "2020-06-01T14:22:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODEwOTUyOQ==", "url": "https://github.com/nordic-institute/X-Road/pull/521#discussion_r438109529", "bodyText": "I think this method becomes unnecessary and we can just call GlobalConf.verifyValidity() instead.", "author": "iluwatar", "createdAt": "2020-06-10T13:11:29Z", "path": "src/op-monitor-daemon/src/main/java/ee/ria/xroad/opmonitordaemon/QueryRequestProcessor.java", "diffHunk": "@@ -78,11 +78,9 @@\n     }\n \n     /**\n-     * Saves the current configurations in thread local storage, to protect\n-     * against configuration reloads during message processing.\n+     * Verifies configuration validity\n      */\n     private void cacheConfigurationForCurrentThread() {\n-        GlobalConf.initForCurrentThread();\n         GlobalConf.verifyValidity();\n     }", "originalCommit": "dbf4c832d350aeced1de31fd99f7952132f778f7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODExMTQwNQ==", "url": "https://github.com/nordic-institute/X-Road/pull/521#discussion_r438111405", "bodyText": "Same here, having separate method for calling GlobalConf.verifyValidity() is unnecessary", "author": "iluwatar", "createdAt": "2020-06-10T13:14:29Z", "path": "src/proxy/src/main/java/ee/ria/xroad/proxy/util/MessageProcessorBase.java", "diffHunk": "@@ -72,14 +71,10 @@ protected MessageProcessorBase(HttpServletRequest servletRequest,\n     }\n \n     /**\n-     * Saves the current configurations in thread local storage, to protect\n-     * against configuration reloads during message processing.\n+     * Verifies validity\n      */\n     private void cacheConfigurationForCurrentThread() {\n-        GlobalConf.initForCurrentThread();\n         GlobalConf.verifyValidity();\n-\n-        KeyConf.initForCurrentThread();\n     }", "originalCommit": "dbf4c832d350aeced1de31fd99f7952132f778f7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1ed56fd5ef3bf576079e164df105b4a46b483410", "url": "https://github.com/nordic-institute/X-Road/commit/1ed56fd5ef3bf576079e164df105b4a46b483410", "message": "XRDDEV-68: removing unnecessary methods", "committedDate": "2020-06-12T06:41:25Z", "type": "commit"}, {"oid": "924613aa9d314290557efa882464244f32ebbf65", "url": "https://github.com/nordic-institute/X-Road/commit/924613aa9d314290557efa882464244f32ebbf65", "message": "XRDDEV-68 synchronized is used for this purpose", "committedDate": "2020-06-15T09:45:11Z", "type": "commit"}, {"oid": "9f9d731276c0fb69a41d5f71623667a56aa4ef90", "url": "https://github.com/nordic-institute/X-Road/commit/9f9d731276c0fb69a41d5f71623667a56aa4ef90", "message": "Merge branch 'develop' into XRDDEV-68-local-variables", "committedDate": "2020-06-15T10:13:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjAwNzEzNg==", "url": "https://github.com/nordic-institute/X-Road/pull/521#discussion_r442007136", "bodyText": "I think it should be kept volatile. It's similar case in class GlobalConf. See also https://stackoverflow.com/questions/16542402/lazy-initialization-singleton-class-with-volatile-variable", "author": "iluwatar", "createdAt": "2020-06-18T06:56:23Z", "path": "src/common-verifier/src/main/java/ee/ria/xroad/common/conf/globalconfextension/GlobalConfExtensions.java", "diffHunk": "@@ -37,25 +37,22 @@\n  */\n @Slf4j\n public final class GlobalConfExtensions {\n-\n-    // Instance per thread, same way as in GlobalGonf/GlobalConfImpl.\n-    // This way thread safety handling is same as in GlobalConf.\n-    private static final ThreadLocal<GlobalConfExtensions> INSTANCE = new ThreadLocal<GlobalConfExtensions>() {\n-        @Override\n-        protected GlobalConfExtensions initialValue() {\n-            return new GlobalConfExtensions();\n-        }\n-    };\n-\n     private OcspNextUpdate ocspNextUpdate;\n     private OcspFetchInterval ocspFetchInterval;\n+    private static GlobalConfExtensions instance = null;", "originalCommit": "9f9d731276c0fb69a41d5f71623667a56aa4ef90", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7b1b6f7cf4530e4e0590decfd76ac8d8f305ee16", "url": "https://github.com/nordic-institute/X-Road/commit/7b1b6f7cf4530e4e0590decfd76ac8d8f305ee16", "message": "XRDDEV-68 Restore volatile usage", "committedDate": "2020-06-22T11:03:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ4ODcxMA==", "url": "https://github.com/nordic-institute/X-Road/pull/521#discussion_r445488710", "bodyText": "These changes are not sound since the GlobalConfExtensions instance is not thread-safe, and now it is potentially shared by several concurrent threads. Since this task has been open quite some time, I suggest reverting these changes and creating a separate task of fixing GlobalConfExtensions.", "author": "jhyoty", "createdAt": "2020-06-25T11:26:29Z", "path": "src/common-verifier/src/main/java/ee/ria/xroad/common/conf/globalconfextension/GlobalConfExtensions.java", "diffHunk": "@@ -37,25 +37,22 @@\n  */\n @Slf4j\n public final class GlobalConfExtensions {\n-\n-    // Instance per thread, same way as in GlobalGonf/GlobalConfImpl.\n-    // This way thread safety handling is same as in GlobalConf.\n-    private static final ThreadLocal<GlobalConfExtensions> INSTANCE = new ThreadLocal<GlobalConfExtensions>() {\n-        @Override\n-        protected GlobalConfExtensions initialValue() {\n-            return new GlobalConfExtensions();\n-        }\n-    };\n-\n     private OcspNextUpdate ocspNextUpdate;\n     private OcspFetchInterval ocspFetchInterval;\n+    private static volatile GlobalConfExtensions instance = null;\n \n     /**\n      * @return instance\n      */\n     public static GlobalConfExtensions getInstance() {\n-        GlobalConfExtensions configuration = INSTANCE.get();\n-        return configuration;\n+        if (instance == null) {\n+            synchronized (GlobalConfExtensions.class) {\n+                if (instance == null) {\n+                    instance = new GlobalConfExtensions();\n+                }\n+            }\n+        }\n+        return instance;", "originalCommit": "7b1b6f7cf4530e4e0590decfd76ac8d8f305ee16", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "56cd3a864210d8c7c9b7107715452cd43cd98f95", "url": "https://github.com/nordic-institute/X-Road/commit/56cd3a864210d8c7c9b7107715452cd43cd98f95", "message": "XRDDEV-68 Restore original state for this file", "committedDate": "2020-06-30T06:37:04Z", "type": "commit"}]}