{"pr_number": 653, "pr_title": "XRDDEV-1268", "pr_createdAt": "2020-08-17T14:50:34Z", "pr_url": "https://github.com/nordic-institute/X-Road/pull/653", "timeline": [{"oid": "425d718cc35c97a9ab420371384a9c1553c7cddb", "url": "https://github.com/nordic-institute/X-Road/commit/425d718cc35c97a9ab420371384a9c1553c7cddb", "message": "XRDDEV-1268 Add exception handling to methods that access signer", "committedDate": "2020-08-17T14:30:52Z", "type": "commit"}, {"oid": "828cf68ba5de8ae2591419f76e1a6a4d53aed592", "url": "https://github.com/nordic-institute/X-Road/commit/828cf68ba5de8ae2591419f76e1a6a4d53aed592", "message": "XRDDEV-1268 Fix failing unit test", "committedDate": "2020-08-17T14:48:50Z", "type": "commit"}, {"oid": "f4e3c90425e26ed6f4f93f4b59ea96106c1519e2", "url": "https://github.com/nordic-institute/X-Road/commit/f4e3c90425e26ed6f4f93f4b59ea96106c1519e2", "message": "XRDDEV-1268 Remove package lock file", "committedDate": "2020-08-17T15:14:56Z", "type": "commit"}, {"oid": "418907469de43d3cb96160af0f587c5c386b32de", "url": "https://github.com/nordic-institute/X-Road/commit/418907469de43d3cb96160af0f587c5c386b32de", "message": "XRDDEV-1268 Remove unused import", "committedDate": "2020-08-17T15:22:05Z", "type": "commit"}, {"oid": "1e5399d38770c2a41f23aaf1cc44410cfb70f088", "url": "https://github.com/nordic-institute/X-Road/commit/1e5399d38770c2a41f23aaf1cc44410cfb70f088", "message": "XRDDEV-1268 Refactor implementation", "committedDate": "2020-08-17T15:29:59Z", "type": "commit"}, {"oid": "af0b4e72e4dcf5da615b3ed196ad75860870f5d3", "url": "https://github.com/nordic-institute/X-Road/commit/af0b4e72e4dcf5da615b3ed196ad75860870f5d3", "message": "XRDDEV-1268 Add logging", "committedDate": "2020-08-17T15:49:46Z", "type": "commit"}, {"oid": "defff3e37a152efa2de953fef116c36a0e64ef16", "url": "https://github.com/nordic-institute/X-Road/commit/defff3e37a152efa2de953fef116c36a0e64ef16", "message": "XRDDEV-1268 Refactor implementation\n\n- Remove @Transactional annotial from NotificationService.\n- Remove isSecurityServerFullyInitialized check from Notification service.\n- Update unit tests.", "committedDate": "2020-08-18T05:46:34Z", "type": "commit"}, {"oid": "9367172506d97e5b4033ce9de6bf0f6f2ebb654b", "url": "https://github.com/nordic-institute/X-Road/commit/9367172506d97e5b4033ce9de6bf0f6f2ebb654b", "message": "XRDDEV-1268 Add new properties to Alerts endpoint\n\n- Add new global_conf_valid_check_success property that indicates whether global conf validity check succeeded.\n- Add new soft_token_pin_entered_check_success property that indicates whether soft token pin entered check succeeded.\n- Update unit tests.", "committedDate": "2020-08-18T08:16:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjIzNDMwNw==", "url": "https://github.com/nordic-institute/X-Road/pull/653#discussion_r472234307", "bodyText": "This method now never returns false, since globalConfFacade.verifyValidity either returns true or throws CodedException?\na private boolean isGlobalConfValid that either returns true or throws exception is pretty nonstandard for a Java method, would be better to return true/false in un-exceptional cases. Maybe the old implementation was better after all?\nI may have posted misleading comments in the slack thread I guess the implementation should then inspect the exception to distinguish which case it is , as it looks like the implementation already did that (well, it did not inspect the error code vs X_OUTDATED_GLOBALCONF, so it was not completely flawless)?", "author": "jansu76", "createdAt": "2020-08-18T14:20:45Z", "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/NotificationService.java", "diffHunk": "@@ -79,35 +73,35 @@ public AlertStatus getAlerts() {\n             alertStatus.setBackupRestoreRunningSince(backupRestoreStartedAt);\n             alertStatus.setCurrentTime(OffsetDateTime.now(ZoneOffset.UTC));\n         }\n-        if (isSecurityServerFullyInitialized()) {\n+\n+        try {\n             alertStatus.setGlobalConfValid(isGlobalConfValid());\n-            alertStatus.setSoftTokenPinEntered(isSoftTokenPinEntered());\n-        } else {\n+            alertStatus.setGlobalConfValidCheckSuccess(true);\n+        } catch (CodedException e) {\n+            log.error(\"getting global conf status failed\");\n             alertStatus.setGlobalConfValid(false);\n+            alertStatus.setGlobalConfValidCheckSuccess(false);\n+        }\n+\n+        try {\n+            alertStatus.setSoftTokenPinEntered(isSoftTokenPinEntered());\n+            alertStatus.setSoftTokenPinEnteredCheckSuccess(true);\n+        } catch (Exception e) {\n+            log.error(\"getting soft token pin status failed\");\n             alertStatus.setSoftTokenPinEntered(false);\n+            alertStatus.setSoftTokenPinEnteredCheckSuccess(false);\n         }\n-        return alertStatus;\n-    }\n \n-    private boolean isSecurityServerFullyInitialized() {\n-        InitializationStatusDto initStatusDto = initializationService.getSecurityServerInitializationStatus();\n-        return initStatusDto.isAnchorImported()\n-                && initStatusDto.isServerCodeInitialized()\n-                && initStatusDto.isServerOwnerInitialized()\n-                && initStatusDto.isSoftwareTokenInitialized();\n+        return alertStatus;\n     }\n \n     /**\n      * Verifies that the global configuration is valid.\n      * @return\n      */\n     private boolean isGlobalConfValid() {\n-        try {\n-            globalConfFacade.verifyValidity();\n-            return true;\n-        } catch (CodedException e) {\n-            return false;\n-        }\n+        globalConfFacade.verifyValidity();\n+        return true;", "originalCommit": "9367172506d97e5b4033ce9de6bf0f6f2ebb654b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjY4NTcxNA==", "url": "https://github.com/nordic-institute/X-Road/pull/653#discussion_r472685714", "bodyText": "Yes, you're right, the old implementation was better. That is now restored. The logic of the global conf check now works so that when the check throws CodedException the response is:\nglobal_conf_valid: false\nglobal_conf_valid_check_success: true\n\nAnd the check throws any other exception the response is:\nglobal_conf_valid: false\nglobal_conf_valid_check_success: false", "author": "petkivim", "createdAt": "2020-08-19T04:42:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjIzNDMwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjIzODY1Mw==", "url": "https://github.com/nordic-institute/X-Road/pull/653#discussion_r472238653", "bodyText": "Should we just setSoftTokenPinEnteredCheckSuccess(false) if we know that backup restore is running? Since doing isSoftTokenPinEntered will likely fail doing restore, and possibly cause the \"could not list all tokens\" error to appear with some delay?", "author": "jansu76", "createdAt": "2020-08-18T14:26:47Z", "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/NotificationService.java", "diffHunk": "@@ -79,35 +73,35 @@ public AlertStatus getAlerts() {\n             alertStatus.setBackupRestoreRunningSince(backupRestoreStartedAt);\n             alertStatus.setCurrentTime(OffsetDateTime.now(ZoneOffset.UTC));\n         }\n-        if (isSecurityServerFullyInitialized()) {\n+\n+        try {\n             alertStatus.setGlobalConfValid(isGlobalConfValid());\n-            alertStatus.setSoftTokenPinEntered(isSoftTokenPinEntered());\n-        } else {\n+            alertStatus.setGlobalConfValidCheckSuccess(true);\n+        } catch (CodedException e) {\n+            log.error(\"getting global conf status failed\");\n             alertStatus.setGlobalConfValid(false);\n+            alertStatus.setGlobalConfValidCheckSuccess(false);\n+        }\n+\n+        try {\n+            alertStatus.setSoftTokenPinEntered(isSoftTokenPinEntered());", "originalCommit": "9367172506d97e5b4033ce9de6bf0f6f2ebb654b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjY4NjYyMA==", "url": "https://github.com/nordic-institute/X-Road/pull/653#discussion_r472686620", "bodyText": "That makes sense. Both soft_token_pin_entered and soft_token_pin_entered_check_success are now set to false always when backup / restore is running, and the actual check is skipped.", "author": "petkivim", "createdAt": "2020-08-19T04:44:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjIzODY1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjI0OTQwMg==", "url": "https://github.com/nordic-institute/X-Road/pull/653#discussion_r472249402", "bodyText": "Could just catch any Exception, probably only CodedExceptions should occur now, but we might not have realized a possibility of some other exceptions like RuntimeExceptions or some future changes may make that possible - and we probably want those to also result in setGlobalConfValidCheckSuccess(false)?", "author": "jansu76", "createdAt": "2020-08-18T14:40:53Z", "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/NotificationService.java", "diffHunk": "@@ -79,35 +73,35 @@ public AlertStatus getAlerts() {\n             alertStatus.setBackupRestoreRunningSince(backupRestoreStartedAt);\n             alertStatus.setCurrentTime(OffsetDateTime.now(ZoneOffset.UTC));\n         }\n-        if (isSecurityServerFullyInitialized()) {\n+\n+        try {\n             alertStatus.setGlobalConfValid(isGlobalConfValid());\n-            alertStatus.setSoftTokenPinEntered(isSoftTokenPinEntered());\n-        } else {\n+            alertStatus.setGlobalConfValidCheckSuccess(true);\n+        } catch (CodedException e) {", "originalCommit": "9367172506d97e5b4033ce9de6bf0f6f2ebb654b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjY4ODgxNg==", "url": "https://github.com/nordic-institute/X-Road/pull/653#discussion_r472688816", "bodyText": "The implementation was updated so that Exception is catched. It's possible that globalConfFacade.verifyValidity() throws other exceptions too (e.g. RuntimeException). Please see the first comment regarding the updated logic.", "author": "petkivim", "createdAt": "2020-08-19T04:47:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjI0OTQwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjI1NDE5Mg==", "url": "https://github.com/nordic-institute/X-Road/pull/653#discussion_r472254192", "bodyText": "If alerts are disabled, the status of all alerts true.\n\nIs this comment up to date? Does \"alerts are disabled\" refer to backupRestoreRunningSince?", "author": "jansu76", "createdAt": "2020-08-18T14:46:54Z", "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/NotificationService.java", "diffHunk": "@@ -47,23 +45,19 @@\n  */\n @Slf4j\n @Service\n-@Transactional\n @PreAuthorize(\"isAuthenticated()\")\n public class NotificationService {\n     private OffsetDateTime backupRestoreRunningSince;\n     private final GlobalConfFacade globalConfFacade;\n     private final TokenService tokenService;\n-    private final InitializationService initializationService;\n \n     /**\n      * constructor\n      */\n     @Autowired\n-    public NotificationService(GlobalConfFacade globalConfFacade, TokenService tokenService,\n-            InitializationService initializationService) {\n+    public NotificationService(GlobalConfFacade globalConfFacade, TokenService tokenService) {\n         this.globalConfFacade = globalConfFacade;\n         this.tokenService = tokenService;\n-        this.initializationService = initializationService;\n     }\n \n     /**", "originalCommit": "9367172506d97e5b4033ce9de6bf0f6f2ebb654b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjY4ODk5NQ==", "url": "https://github.com/nordic-institute/X-Road/pull/653#discussion_r472688995", "bodyText": "The comment was updated.", "author": "petkivim", "createdAt": "2020-08-19T04:48:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjI1NDE5Mg=="}], "type": "inlineReview"}, {"oid": "ec1ca74b2ef14c0023a95fb2bcd35d4e96b9a57f", "url": "https://github.com/nordic-institute/X-Road/commit/ec1ca74b2ef14c0023a95fb2bcd35d4e96b9a57f", "message": "XRDDEV-1269 Update implementation based on review comments", "committedDate": "2020-08-19T04:34:41Z", "type": "commit"}, {"oid": "90544875569e813d78d7875d66c0b7f5e932fad7", "url": "https://github.com/nordic-institute/X-Road/commit/90544875569e813d78d7875d66c0b7f5e932fad7", "message": "XRDDEV-1269 Update unit test name", "committedDate": "2020-08-19T04:37:22Z", "type": "commit"}, {"oid": "1233f5dab3db599556037b065f70dad0fa841ba2", "url": "https://github.com/nordic-institute/X-Road/commit/1233f5dab3db599556037b065f70dad0fa841ba2", "message": "XRDDEV-1269 Update unit tests", "committedDate": "2020-08-19T05:16:30Z", "type": "commit"}]}