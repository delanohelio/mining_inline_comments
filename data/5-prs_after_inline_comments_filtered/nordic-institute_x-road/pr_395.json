{"pr_number": 395, "pr_title": "XRDDEV-879", "pr_createdAt": "2020-03-01T07:44:56Z", "pr_url": "https://github.com/nordic-institute/X-Road/pull/395", "timeline": [{"oid": "41b4c17aa9a0cdca1c6295324df08029e4f54417", "url": "https://github.com/nordic-institute/X-Road/commit/41b4c17aa9a0cdca1c6295324df08029e4f54417", "message": "XRDDEV-879 API for getting configuration anchor details\n\n- Implement API for fetching configuration anchor details.\n- Implement unit tests.\n- Refactor system API controller unit tests.", "committedDate": "2020-02-29T15:22:53Z", "type": "commit"}, {"oid": "b2f14344dc787537d9c8950ff72fcd429511ee7a", "url": "https://github.com/nordic-institute/X-Road/commit/b2f14344dc787537d9c8950ff72fcd429511ee7a", "message": "XRDDEV-879 API for downloading configuration anchor\n\n- Implement API for downloading configuration anchor.\n- Update API design.\n- Refactor exception handling of getAnchor API.\n- Add unit tests.", "committedDate": "2020-03-01T07:43:06Z", "type": "commit"}, {"oid": "2f3badbf4420e9a1c88087012dfd87e82fd09e22", "url": "https://github.com/nordic-institute/X-Road/commit/2f3badbf4420e9a1c88087012dfd87e82fd09e22", "message": "XRDDEV-879 Refactor system service and API controller tests", "committedDate": "2020-03-01T08:41:35Z", "type": "commit"}, {"oid": "fb378851589b63f155e8d87bc8b3c8f04bb145bb", "url": "https://github.com/nordic-institute/X-Road/commit/fb378851589b63f155e8d87bc8b3c8f04bb145bb", "message": "XRDDEV-879 Fix typos unit test case names", "committedDate": "2020-03-01T08:47:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTUwOTI4Mg==", "url": "https://github.com/nordic-institute/X-Road/pull/395#discussion_r389509282", "bodyText": "Would it make sense to add an anchor filename field into AnchorFile dto and generate the filename in this getAnchorFile method?\nWith this current impl the filesystem gets two hits everytime the anchor is downloaded:\n\nonce when the anchor is read and the dto is populated\nagain when the filename is generated in getAnchorFilenameForDownload", "author": "carohauta", "createdAt": "2020-03-09T08:09:04Z", "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/SystemService.java", "diffHunk": "@@ -163,6 +179,55 @@ private String getExceptionMessage(String name, String url, String message) {\n         return csrBytes;\n     }\n \n+    /**\n+     * Get configuration anchor file\n+     * @return\n+     * @throws AnchorNotFoundException if anchor file is not found\n+     */\n+    public AnchorFile getAnchorFile() throws AnchorNotFoundException {\n+        AnchorFile anchorFile = new AnchorFile(calculateAnchorHexHash(readAnchorFile()));\n+        ConfigurationAnchorV2 anchor = anchorRepository.loadAnchorFromFile();\n+        anchorFile.setCreatedAt(FormatUtils.fromDateToOffsetDateTime(anchor.getGeneratedAt()));\n+        return anchorFile;", "originalCommit": "fb378851589b63f155e8d87bc8b3c8f04bb145bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU3Njc3Mg==", "url": "https://github.com/nordic-institute/X-Road/pull/395#discussion_r389576772", "bodyText": "Adding anchor filename into AnchorFile dto does not help much since the filename is never used when the dto is returned. The filename is used only when the anchor file is downloaded and in that case the service layer returns the file as byte[]. You're right that reading the file and getting the filename require two filesystem operations. However, downloading the anchor file is a relatively rare use case so the additional file system hit should not affect the performance.", "author": "petkivim", "createdAt": "2020-03-09T10:32:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTUwOTI4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYyMzgwOA==", "url": "https://github.com/nordic-institute/X-Road/pull/395#discussion_r389623808", "bodyText": "You are right it isn't used. Got confused about the reading and loading anchor from a file. Maybe the dto could be used in both cases by adding the bytes to it too.\nBut yeah the anchor download is a rare use case so this is good \ud83d\udc4d", "author": "carohauta", "createdAt": "2020-03-09T12:18:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTUwOTI4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTUxMzYxNQ==", "url": "https://github.com/nordic-institute/X-Road/pull/395#discussion_r389513615", "bodyText": "The hash formatting should probably be done in frontend.\nEdit:\nThere already is a filter in the frontend (filters.ts#colonize) that has been used in previous cases where the hash needs to be colonized -> no need to worry about the string format in backend", "author": "carohauta", "createdAt": "2020-03-09T08:21:26Z", "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/SystemService.java", "diffHunk": "@@ -163,6 +179,55 @@ private String getExceptionMessage(String name, String url, String message) {\n         return csrBytes;\n     }\n \n+    /**\n+     * Get configuration anchor file\n+     * @return\n+     * @throws AnchorNotFoundException if anchor file is not found\n+     */\n+    public AnchorFile getAnchorFile() throws AnchorNotFoundException {\n+        AnchorFile anchorFile = new AnchorFile(calculateAnchorHexHash(readAnchorFile()));\n+        ConfigurationAnchorV2 anchor = anchorRepository.loadAnchorFromFile();\n+        anchorFile.setCreatedAt(FormatUtils.fromDateToOffsetDateTime(anchor.getGeneratedAt()));\n+        return anchorFile;\n+    }\n+\n+    /**\n+     * Read anchor file's content\n+     * @return\n+     * @throws AnchorNotFoundException if anchor file is not found\n+     */\n+    public byte[] readAnchorFile() throws AnchorNotFoundException {\n+        try {\n+            return anchorRepository.readAnchorFile();\n+        } catch (NoSuchFileException e) {\n+            throw new AnchorNotFoundException(\"Anchor file not found\");\n+        }\n+    }\n+\n+    /**\n+     * Generate anchor file download name with the anchor file created at date/time. The name format is:\n+     * \"configuration_anchor_UTC_yyyy-MM-dd_HH_mm_ss.xml\".\n+     * @return\n+     */\n+    public String getAnchorFilenameForDownload() {\n+        DateFormat df = new SimpleDateFormat(ANCHOR_DOWNLOAD_DATE_TIME_FORMAT);\n+        ConfigurationAnchorV2 anchor = anchorRepository.loadAnchorFromFile();\n+        return ANCHOR_DOWNLOAD_FILENAME_PREFIX + df.format(anchor.getGeneratedAt()) + ANCHOR_DOWNLOAD_FILE_EXTENSION;\n+    }\n+\n+    /**\n+     * Return anchor file's hash as a colon delimited hex string\n+     * @return\n+     */\n+    private String calculateAnchorHexHash(byte[] anchor) {\n+        try {\n+            String hash = CryptoUtils.hexDigest(CryptoUtils.DEFAULT_ANCHOR_HASH_ALGORITHM_ID, anchor);\n+            return StringUtils.join(hash.toUpperCase().split(\"(?<=\\\\G.{2})\"), ':');", "originalCommit": "fb378851589b63f155e8d87bc8b3c8f04bb145bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU3NDIzMA==", "url": "https://github.com/nordic-institute/X-Road/pull/395#discussion_r389574230", "bodyText": "Removed formatting. Now the hash is returned as an upper case hex string.", "author": "petkivim", "createdAt": "2020-03-09T10:27:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTUxMzYxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTUzMDI4Ng==", "url": "https://github.com/nordic-institute/X-Road/pull/395#discussion_r389530286", "bodyText": "No need to create a new instance of NoSuchFileException here. Could be throw nsfe;", "author": "carohauta", "createdAt": "2020-03-09T09:00:39Z", "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/repository/AnchorRepository.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/**\n+ * The MIT License\n+ * Copyright (c) 2018 Estonian Information System Authority (RIA),\n+ * Nordic Institute for Interoperability Solutions (NIIS), Population Register Centre (VRK)\n+ * Copyright (c) 2015-2017 Estonian Information System Authority (RIA), Population Register Centre (VRK)\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package org.niis.xroad.restapi.repository;\n+\n+import ee.ria.xroad.common.SystemProperties;\n+import ee.ria.xroad.common.conf.globalconf.ConfigurationAnchorV2;\n+\n+import lombok.extern.slf4j.Slf4j;\n+import org.springframework.stereotype.Repository;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.NoSuchFileException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+\n+/**\n+ * Anchor repository\n+ */\n+@Slf4j\n+@Repository\n+public class AnchorRepository {\n+    private static final String CONFIGURATION_ANCHOR_FILENAME = SystemProperties.getConfigurationAnchorFile();\n+\n+    /**\n+     * Read anchor file's content\n+     * @return\n+     * @throws NoSuchFileException if anchor file does not exist\n+     */\n+    public byte[] readAnchorFile() throws NoSuchFileException {\n+        Path path = Paths.get(CONFIGURATION_ANCHOR_FILENAME);\n+        try {\n+            return Files.readAllBytes(path);\n+        } catch (NoSuchFileException nsfe) {\n+            log.error(\"anchor file does not exist (\" + path.toString() + \")\");\n+            throw new NoSuchFileException(nsfe.getMessage());", "originalCommit": "fb378851589b63f155e8d87bc8b3c8f04bb145bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU3NDMzNA==", "url": "https://github.com/nordic-institute/X-Road/pull/395#discussion_r389574334", "bodyText": "Fixed.", "author": "petkivim", "createdAt": "2020-03-09T10:27:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTUzMDI4Ng=="}], "type": "inlineReview"}, {"oid": "79de9aab96208a483dd351a9d964a580d9279623", "url": "https://github.com/nordic-institute/X-Road/commit/79de9aab96208a483dd351a9d964a580d9279623", "message": "XRDDEV-897 Updates based on review comments\n\n- Remove anchor hash formatting in the backend.\n- Minor updates.", "committedDate": "2020-03-09T10:25:46Z", "type": "commit"}, {"oid": "f1b6fc957cbe91456de5d40b187cb3548a304dfa", "url": "https://github.com/nordic-institute/X-Road/commit/f1b6fc957cbe91456de5d40b187cb3548a304dfa", "message": "Merge branch 'develop' into XRDDEV-879", "committedDate": "2020-03-09T12:36:03Z", "type": "commit"}, {"oid": "c3cf1c35e4a8968264fad52b992b8907966c162d", "url": "https://github.com/nordic-institute/X-Road/commit/c3cf1c35e4a8968264fad52b992b8907966c162d", "message": "Merge branch 'develop' into XRDDEV-879", "committedDate": "2020-03-09T13:42:51Z", "type": "commit"}]}