{"pr_number": 1453, "pr_title": "[eclipse/xtext#1679] converted Xtend code to Java", "pr_createdAt": "2020-04-24T09:09:23Z", "pr_url": "https://github.com/eclipse/xtext-core/pull/1453", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQyMDQ3OA==", "url": "https://github.com/eclipse/xtext-core/pull/1453#discussion_r414420478", "bodyText": "final", "author": "cdietrich", "createdAt": "2020-04-24T09:10:48Z", "path": "org.eclipse.xtext.xtext.generator/src/org/eclipse/xtext/xtext/generator/model/annotations/GeneratedClassAnnotation.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/**\n+ * Copyright (c) 2015, 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.eclipse.xtext.xtext.generator.model.annotations;\n+\n+import java.text.SimpleDateFormat;\n+import java.util.Date;\n+\n+import org.eclipse.xtext.util.Strings;\n+import org.eclipse.xtext.xtext.generator.XtextGenerator;\n+import org.eclipse.xtext.xtext.generator.model.JavaFileAccess;\n+import org.eclipse.xtext.xtext.generator.model.TypeReference;\n+\n+/**\n+ * A class annotation configuration for the <code>@Generated</code> annotation.\n+ */\n+public class GeneratedClassAnnotation implements IClassAnnotation {\n+\tprivate boolean includeDate = false;\n+\n+\tprivate String comment;\n+\n+\t@Override\n+\tpublic CharSequence generate() {\n+\t\tStringBuilder stringBuilder = new StringBuilder(\"@Generated(\");\n+\t\tif (includeDate || !Strings.isEmpty(comment)) {\n+\t\t\tstringBuilder.append(\"value = \");\n+\t\t}\n+\t\tstringBuilder.append(\"\\\"\");\n+\t\tstringBuilder.append(getGeneratorName());\n+\t\tstringBuilder.append(\"\\\"\");\n+\t\tif (includeDate) {\n+\t\t\tSimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd\\'T\\'HH:mmZ\");\n+\t\t\tString date = dateFormat.format(new Date());\n+\t\t\tstringBuilder.append(\", date = \\\"\");\n+\t\t\tstringBuilder.append(date);\n+\t\t\tstringBuilder.append(\"\\\"\");\n+\t\t}\n+\t\tif (!Strings.isEmpty(comment)) {\n+\t\t\tstringBuilder.append(\", comments = \\\"\");\n+\t\t\tstringBuilder.append(Strings.convertToJavaString(comment));\n+\t\t\tstringBuilder.append(\"\\\"\");\n+\t\t}\n+\t\tstringBuilder.append(\")\");\n+\t\treturn stringBuilder;\n+\t}\n+\n+\tprotected String getGeneratorName() {\n+\t\treturn XtextGenerator.class.getName();\n+\t}\n+\n+\t@Override\n+\tpublic boolean appliesTo(JavaFileAccess javaFile) {\n+\t\treturn javaFile.isMarkedAsGenerated();\n+\t}\n+\n+\t@Override\n+\tpublic TypeReference getAnnotationImport() {\n+\t\treturn new TypeReference(\"javax.annotation.Generated\");\n+\t}\n+\n+\t@Override\n+\tpublic String toString() {\n+\t\treturn generate().toString();\n+\t}\n+\n+\t@Override\n+\tpublic boolean equals(final Object obj) {", "originalCommit": "fe4adf22efa2896aac80bda1a501a93cc5f0099b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQyMDkyNw==", "url": "https://github.com/eclipse/xtext-core/pull/1453#discussion_r414420927", "bodyText": "this.", "author": "cdietrich", "createdAt": "2020-04-24T09:11:28Z", "path": "org.eclipse.xtext.xtext.generator/src/org/eclipse/xtext/xtext/generator/parser/antlr/AntlrGrammar.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/**\n+ * Copyright (c) 2015, 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.eclipse.xtext.xtext.generator.parser.antlr;\n+\n+public class AntlrGrammar {\n+\tprivate final String packageName;\n+\n+\tprivate final String simpleName;\n+\n+\tpublic String getName() {\n+\t\treturn packageName + \".\" + simpleName;\n+\t}\n+\n+\tpublic String getGrammarFileName() {\n+\t\treturn getName().replace('.', '/') + \".g\";\n+\t}\n+\n+\tpublic String getTokensFileName() {\n+\t\treturn getName().replace('.', '/') + \".tokens\";\n+\t}\n+\n+\t@Override\n+\tpublic String toString() {\n+\t\treturn this.getName();", "originalCommit": "fe4adf22efa2896aac80bda1a501a93cc5f0099b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0feb2d17a22e9d4d10d7cee539f4c0b3bc8ac847", "url": "https://github.com/eclipse/xtext-core/commit/0feb2d17a22e9d4d10d7cee539f4c0b3bc8ac847", "message": "[eclipse/xtext#1679] converted Xtend code to Java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>", "committedDate": "2020-04-24T09:12:44Z", "type": "commit"}, {"oid": "0feb2d17a22e9d4d10d7cee539f4c0b3bc8ac847", "url": "https://github.com/eclipse/xtext-core/commit/0feb2d17a22e9d4d10d7cee539f4c0b3bc8ac847", "message": "[eclipse/xtext#1679] converted Xtend code to Java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>", "committedDate": "2020-04-24T09:12:44Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQzODM0MQ==", "url": "https://github.com/eclipse/xtext-core/pull/1453#discussion_r414438341", "bodyText": "append(char) would relieve you from the escape sequence.", "author": "szarnekow", "createdAt": "2020-04-24T09:38:17Z", "path": "org.eclipse.xtext.xtext.generator/src/org/eclipse/xtext/xtext/generator/model/annotations/GeneratedClassAnnotation.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/**\n+ * Copyright (c) 2015, 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.eclipse.xtext.xtext.generator.model.annotations;\n+\n+import java.text.SimpleDateFormat;\n+import java.util.Date;\n+\n+import org.eclipse.xtext.util.Strings;\n+import org.eclipse.xtext.xtext.generator.XtextGenerator;\n+import org.eclipse.xtext.xtext.generator.model.JavaFileAccess;\n+import org.eclipse.xtext.xtext.generator.model.TypeReference;\n+\n+/**\n+ * A class annotation configuration for the <code>@Generated</code> annotation.\n+ */\n+public class GeneratedClassAnnotation implements IClassAnnotation {\n+\tprivate boolean includeDate = false;\n+\n+\tprivate String comment;\n+\n+\t@Override\n+\tpublic CharSequence generate() {\n+\t\tStringBuilder stringBuilder = new StringBuilder(\"@Generated(\");\n+\t\tif (includeDate || !Strings.isEmpty(comment)) {\n+\t\t\tstringBuilder.append(\"value = \");\n+\t\t}\n+\t\tstringBuilder.append(\"\\\"\");", "originalCommit": "0feb2d17a22e9d4d10d7cee539f4c0b3bc8ac847", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQzOTEwMg==", "url": "https://github.com/eclipse/xtext-core/pull/1453#discussion_r414439102", "bodyText": "Unrelated: Subclasses will have different hashCodes but answer true from equals.", "author": "szarnekow", "createdAt": "2020-04-24T09:39:26Z", "path": "org.eclipse.xtext.xtext.generator/src/org/eclipse/xtext/xtext/generator/model/annotations/GeneratedClassAnnotation.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/**\n+ * Copyright (c) 2015, 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.eclipse.xtext.xtext.generator.model.annotations;\n+\n+import java.text.SimpleDateFormat;\n+import java.util.Date;\n+\n+import org.eclipse.xtext.util.Strings;\n+import org.eclipse.xtext.xtext.generator.XtextGenerator;\n+import org.eclipse.xtext.xtext.generator.model.JavaFileAccess;\n+import org.eclipse.xtext.xtext.generator.model.TypeReference;\n+\n+/**\n+ * A class annotation configuration for the <code>@Generated</code> annotation.\n+ */\n+public class GeneratedClassAnnotation implements IClassAnnotation {\n+\tprivate boolean includeDate = false;\n+\n+\tprivate String comment;\n+\n+\t@Override\n+\tpublic CharSequence generate() {\n+\t\tStringBuilder stringBuilder = new StringBuilder(\"@Generated(\");\n+\t\tif (includeDate || !Strings.isEmpty(comment)) {\n+\t\t\tstringBuilder.append(\"value = \");\n+\t\t}\n+\t\tstringBuilder.append(\"\\\"\");\n+\t\tstringBuilder.append(getGeneratorName());\n+\t\tstringBuilder.append(\"\\\"\");\n+\t\tif (includeDate) {\n+\t\t\tSimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd\\'T\\'HH:mmZ\");\n+\t\t\tString date = dateFormat.format(new Date());\n+\t\t\tstringBuilder.append(\", date = \\\"\");\n+\t\t\tstringBuilder.append(date);\n+\t\t\tstringBuilder.append(\"\\\"\");\n+\t\t}\n+\t\tif (!Strings.isEmpty(comment)) {\n+\t\t\tstringBuilder.append(\", comments = \\\"\");\n+\t\t\tstringBuilder.append(Strings.convertToJavaString(comment));\n+\t\t\tstringBuilder.append(\"\\\"\");\n+\t\t}\n+\t\tstringBuilder.append(\")\");\n+\t\treturn stringBuilder;\n+\t}\n+\n+\tprotected String getGeneratorName() {\n+\t\treturn XtextGenerator.class.getName();\n+\t}\n+\n+\t@Override\n+\tpublic boolean appliesTo(JavaFileAccess javaFile) {\n+\t\treturn javaFile.isMarkedAsGenerated();\n+\t}\n+\n+\t@Override\n+\tpublic TypeReference getAnnotationImport() {\n+\t\treturn new TypeReference(\"javax.annotation.Generated\");\n+\t}\n+\n+\t@Override\n+\tpublic String toString() {\n+\t\treturn generate().toString();\n+\t}\n+\n+\t@Override\n+\tpublic boolean equals(Object obj) {\n+\t\treturn obj instanceof GeneratedClassAnnotation;", "originalCommit": "0feb2d17a22e9d4d10d7cee539f4c0b3bc8ac847", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQzOTk0MA==", "url": "https://github.com/eclipse/xtext-core/pull/1453#discussion_r414439940", "bodyText": "Splitter.on(',').trimResults()", "author": "szarnekow", "createdAt": "2020-04-24T09:40:44Z", "path": "org.eclipse.xtext.xtext.generator/src/org/eclipse/xtext/xtext/generator/model/annotations/SuppressWarningsAnnotation.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/**\n+ * Copyright (c) 2015, 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.eclipse.xtext.xtext.generator.model.annotations;\n+\n+import java.util.Arrays;\n+import java.util.stream.Collectors;\n+\n+import org.eclipse.xtext.xtext.generator.model.JavaFileAccess;\n+import org.eclipse.xtext.xtext.generator.model.TypeReference;\n+\n+/**\n+ * A class annotation configuration for the <code>@SuppressWarnings</code>\n+ * annotation.\n+ */\n+public class SuppressWarningsAnnotation implements IClassAnnotation {\n+\tprivate String suppress = \"all\";\n+\n+\t@Override\n+\tpublic CharSequence generate() {\n+\t\tStringBuilder stringBuilder = new StringBuilder(\"@SuppressWarnings(\");\n+\t\tString[] suppressedWarnings = suppress.split(\"\\\\s*,\\\\s*\");", "originalCommit": "0feb2d17a22e9d4d10d7cee539f4c0b3bc8ac847", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ0MjQ0Mw==", "url": "https://github.com/eclipse/xtext-core/pull/1453#discussion_r414442443", "bodyText": "Paranoid: '\"' + Strings.convertToJavaString(s) '\"'", "author": "szarnekow", "createdAt": "2020-04-24T09:44:37Z", "path": "org.eclipse.xtext.xtext.generator/src/org/eclipse/xtext/xtext/generator/model/annotations/SuppressWarningsAnnotation.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/**\n+ * Copyright (c) 2015, 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.eclipse.xtext.xtext.generator.model.annotations;\n+\n+import java.util.Arrays;\n+import java.util.stream.Collectors;\n+\n+import org.eclipse.xtext.xtext.generator.model.JavaFileAccess;\n+import org.eclipse.xtext.xtext.generator.model.TypeReference;\n+\n+/**\n+ * A class annotation configuration for the <code>@SuppressWarnings</code>\n+ * annotation.\n+ */\n+public class SuppressWarningsAnnotation implements IClassAnnotation {\n+\tprivate String suppress = \"all\";\n+\n+\t@Override\n+\tpublic CharSequence generate() {\n+\t\tStringBuilder stringBuilder = new StringBuilder(\"@SuppressWarnings(\");\n+\t\tString[] suppressedWarnings = suppress.split(\"\\\\s*,\\\\s*\");\n+\t\tif (suppressedWarnings.length != 1) {\n+\t\t\tstringBuilder.append(\"{\");\n+\t\t}\n+\t\tString value = Arrays.stream(suppressedWarnings).map((s)-> \"\\\"\" + s + \"\\\"\").collect(Collectors.joining( \", \" ));", "originalCommit": "0feb2d17a22e9d4d10d7cee539f4c0b3bc8ac847", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYwNDI0NQ==", "url": "https://github.com/eclipse/xtext-core/pull/1453#discussion_r414604245", "bodyText": "Objects.equal(grammar.getName(), languageID) -> grammar.getName().equals(languageID)", "author": "nbhusare", "createdAt": "2020-04-24T14:07:54Z", "path": "org.eclipse.xtext.xtext.generator/src/org/eclipse/xtext/xtext/generator/util/GrammarUtil2.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/**\n+ * Copyright (c) 2015, 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.eclipse.xtext.xtext.generator.util;\n+\n+import org.eclipse.xtext.Grammar;\n+import org.eclipse.xtext.GrammarUtil;\n+\n+import com.google.common.base.Objects;\n+\n+public class GrammarUtil2 extends GrammarUtil {\n+\tpublic static final String TERMINALS = \"org.eclipse.xtext.common.Terminals\";\n+\n+\tpublic static boolean inherits(Grammar grammar, String languageID) {\n+\t\tif (Objects.equal(grammar.getName(), languageID)) {", "originalCommit": "0feb2d17a22e9d4d10d7cee539f4c0b3bc8ac847", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}