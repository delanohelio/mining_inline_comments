{"pr_number": 3872, "pr_title": "[GSoC] Added Unit Tests and Fixed Landscape Mode Bug", "pr_createdAt": "2020-07-13T17:02:38Z", "pr_url": "https://github.com/commons-app/apps-android-commons/pull/3872", "timeline": [{"oid": "8b15863d7a5794be09308f0c3e592431b7c3a70b", "url": "https://github.com/commons-app/apps-android-commons/commit/8b15863d7a5794be09308f0c3e592431b7c3a70b", "message": "Fixes #3861 Use the APIs to fetch leaderboard\u2019s based on uploads via mobile app (all time) and display it in the Leaderboard screen.", "committedDate": "2020-07-04T15:29:42Z", "type": "commit"}, {"oid": "0104a76c52330c2f0343379ef48ddd06493941e6", "url": "https://github.com/commons-app/apps-android-commons/commit/0104a76c52330c2f0343379ef48ddd06493941e6", "message": "Merge remote-tracking branch 'upstream/leaderboard' into leaderboard", "committedDate": "2020-07-12T14:54:12Z", "type": "commit"}, {"oid": "089c1537f91fe7dfedb81a5340f140f11e30b3d1", "url": "https://github.com/commons-app/apps-android-commons/commit/089c1537f91fe7dfedb81a5340f140f11e30b3d1", "message": "Fixed Bug - missing data in landscape mode", "committedDate": "2020-07-12T15:22:16Z", "type": "commit"}, {"oid": "ce30c8f1f3c94cd304de05ec578b4e64332d6995", "url": "https://github.com/commons-app/apps-android-commons/commit/ce30c8f1f3c94cd304de05ec578b4e64332d6995", "message": "Added Unit Tests for Leaderboard", "committedDate": "2020-07-13T16:58:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAxMTcxMg==", "url": "https://github.com/commons-app/apps-android-commons/pull/3872#discussion_r454011712", "bodyText": "As a javadoc here, please say what class (or what method of what class) is being tested. Thanks!", "author": "nicolas-raoul", "createdAt": "2020-07-13T23:43:20Z", "path": "app/src/test/kotlin/fr/free/nrw/commons/leaderboard/LeaderboardApiTest.java", "diffHunk": "@@ -0,0 +1,83 @@\n+package fr.free.nrw.commons.leaderboard;\n+\n+import com.google.gson.Gson;\n+import fr.free.nrw.commons.profile.leaderboard.LeaderboardResponse;\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+import okhttp3.HttpUrl;\n+import okhttp3.OkHttpClient;\n+import okhttp3.Request;\n+import okhttp3.Request.Builder;\n+import okhttp3.Response;\n+import okhttp3.mockwebserver.MockResponse;\n+import okhttp3.mockwebserver.MockWebServer;\n+import org.junit.After;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class LeaderboardApiTest {\n+\n+    MockWebServer server;\n+    private static final String TEST_USERNAME = \"user\";\n+    private static final String TEST_AVATAR = \"avatar\";\n+    private static final int TEST_USER_RANK = 1;\n+    private static final int TEST_USER_COUNT = 0;\n+\n+    private static final String FILE_NAME = \"leaderboard_sample_response.json\";\n+    private static final String ENDPOINT = \"/leaderboard.py\";\n+\n+    @Before\n+    public void initTest() {\n+        server = new MockWebServer();\n+    }\n+\n+    @Before\n+    public void setUp() throws Exception {\n+\n+        String testResponseBody = convertStreamToString(getClass().getClassLoader().getResourceAsStream(FILE_NAME));\n+\n+        server.enqueue(new MockResponse().setBody(testResponseBody));\n+        server.start();\n+    }\n+\n+    private static String convertStreamToString(InputStream is) throws Exception {\n+        BufferedReader reader = new BufferedReader(new InputStreamReader(is));\n+        StringBuilder sb = new StringBuilder();\n+        String line;\n+        while ((line = reader.readLine()) != null) {\n+            sb.append(line).append(\"\\n\");\n+        }\n+        reader.close();\n+        return sb.toString();\n+    }\n+\n+    @Test", "originalCommit": "ce30c8f1f3c94cd304de05ec578b4e64332d6995", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDIyNjA3OQ==", "url": "https://github.com/commons-app/apps-android-commons/pull/3872#discussion_r454226079", "bodyText": "Please add Javadocs for all new classes that you create :) This applies for methods as well, although we tend to allow exceptions for simple methods like getters and setters.", "author": "misaochan", "createdAt": "2020-07-14T09:28:34Z", "path": "app/src/test/kotlin/fr/free/nrw/commons/leaderboard/LeaderboardApiTest.java", "diffHunk": "@@ -0,0 +1,83 @@\n+package fr.free.nrw.commons.leaderboard;\n+\n+import com.google.gson.Gson;\n+import fr.free.nrw.commons.profile.leaderboard.LeaderboardResponse;\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+import okhttp3.HttpUrl;\n+import okhttp3.OkHttpClient;\n+import okhttp3.Request;\n+import okhttp3.Request.Builder;\n+import okhttp3.Response;\n+import okhttp3.mockwebserver.MockResponse;\n+import okhttp3.mockwebserver.MockWebServer;\n+import org.junit.After;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+", "originalCommit": "ce30c8f1f3c94cd304de05ec578b4e64332d6995", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3fca9e940f1e9219ccd4df5fb645896164747439", "url": "https://github.com/commons-app/apps-android-commons/commit/3fca9e940f1e9219ccd4df5fb645896164747439", "message": "Added JavaDocs", "committedDate": "2020-07-14T13:06:42Z", "type": "commit"}, {"oid": "4b2b7ade203e043066766bf3dc35db26b471c1d3", "url": "https://github.com/commons-app/apps-android-commons/commit/4b2b7ade203e043066766bf3dc35db26b471c1d3", "message": "Updated JavaDocs", "committedDate": "2020-07-14T13:16:35Z", "type": "commit"}]}