{"pr_number": 4921, "pr_title": "Issue 4920: From noteTime api, throw exception rather than set the response code", "pr_createdAt": "2020-07-06T06:12:43Z", "pr_url": "https://github.com/pravega/pravega/pull/4921", "timeline": [{"oid": "d5b4a15f1948a3f39cb6ba418e642b4706bd7784", "url": "https://github.com/pravega/pravega/commit/d5b4a15f1948a3f39cb6ba418e642b4706bd7784", "message": "Issue 4920\n\nSigned-off-by: Shivesh Ranjan <shivesh.ranjan@gmail.com>", "committedDate": "2020-07-06T06:09:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAxMTUyMg==", "url": "https://github.com/pravega/pravega/pull/4921#discussion_r450011522", "bodyText": "Why can't you spy directly this controllerService variable?", "author": "eolivelli", "createdAt": "2020-07-06T06:38:34Z", "path": "controller/src/test/java/io/pravega/controller/server/v1/InMemoryControllerServiceImplTest.java", "diffHunk": "@@ -85,9 +86,10 @@ public void setup() throws Exception {\n \n         Cluster mockCluster = mock(Cluster.class);\n         when(mockCluster.getClusterMembers()).thenReturn(Collections.singleton(new Host(\"localhost\", 9090, null)));\n-        controllerService = new ControllerServiceImpl(", "originalCommit": "d5b4a15f1948a3f39cb6ba418e642b4706bd7784", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAxOTMwOA==", "url": "https://github.com/pravega/pravega/pull/4921#discussion_r450019308", "bodyText": "controllerService which is an instance of ControllerServiceImpl is what we are verifying in this test.", "author": "shiveshr", "createdAt": "2020-07-06T06:58:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAxMTUyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQwMDA1Nw==", "url": "https://github.com/pravega/pravega/pull/4921#discussion_r451400057", "bodyText": "I am not sure this is the right way. But unfortunately I don't have much time to suggest another approach.\nSo I am fine with keeping it.\nMaybe one day we could introduce PowerMock, that allows you to rewrite entire methods and constructors without introducing this intermediate objects.\nNow we are introducing this layer between the streamStore and the ControllerService, I don't have enough context, so I don't know if it may introduce some sort of difference from the behavior of the tests  and the execution at runtime in production (the risk is to not test the right thing).", "author": "eolivelli", "createdAt": "2020-07-08T09:14:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAxMTUyMg=="}], "type": "inlineReview"}, {"oid": "c41044ec41de601cb3f2d6e6963e173257a62570", "url": "https://github.com/pravega/pravega/commit/c41044ec41de601cb3f2d6e6963e173257a62570", "message": "coverage\n\nSigned-off-by: Shivesh Ranjan <shivesh.ranjan@gmail.com>", "committedDate": "2020-07-06T09:19:53Z", "type": "commit"}, {"oid": "02c5457596ec0cd12117688a950bc96f6516cd49", "url": "https://github.com/pravega/pravega/commit/02c5457596ec0cd12117688a950bc96f6516cd49", "message": "checkstyle\n\nSigned-off-by: Shivesh Ranjan <shivesh.ranjan@gmail.com>", "committedDate": "2020-07-06T12:01:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM4NjQzMQ==", "url": "https://github.com/pravega/pravega/pull/4921#discussion_r451386431", "bodyText": "Override should be fine here since io.pravega.controller.server.v1.ControllerServiceImplTest#tearDown method already has @after annotation right ? \n  \n    \n      pravega/controller/src/test/java/io/pravega/controller/server/v1/ControllerServiceImplTest.java\n    \n    \n        Lines 86 to 87\n      in\n      b81cf9e\n    \n    \n    \n    \n\n        \n          \n           @After \n        \n\n        \n          \n           public abstract void tearDown() throws Exception;", "author": "shrids", "createdAt": "2020-07-08T08:51:07Z", "path": "controller/src/test/java/io/pravega/controller/server/v1/InMemoryControllerServiceImplTest.java", "diffHunk": "@@ -85,12 +83,11 @@ public void setup() throws Exception {\n \n         Cluster mockCluster = mock(Cluster.class);\n         when(mockCluster.getClusterMembers()).thenReturn(Collections.singleton(new Host(\"localhost\", 9090, null)));\n-        controllerService = new ControllerServiceImpl(\n-                new ControllerService(streamStore, StreamStoreFactory.createInMemoryBucketStore(), streamMetadataTasks, streamTransactionMetadataTasks,\n-                                      SegmentHelperMock.getSegmentHelperMock(), executorService, mockCluster), GrpcAuthHelper.getDisabledAuthHelper(), requestTracker, true, 2);\n+        return new ControllerService(streamStore, StreamStoreFactory.createInMemoryBucketStore(), streamMetadataTasks, streamTransactionMetadataTasks,\n+                SegmentHelperMock.getSegmentHelperMock(), executorService, mockCluster);\n     }\n \n-    @Override", "originalCommit": "02c5457596ec0cd12117688a950bc96f6516cd49", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk0MzU3Mw==", "url": "https://github.com/pravega/pravega/pull/4921#discussion_r451943573", "bodyText": "its not overridden because its not defined in the base class.", "author": "shiveshr", "createdAt": "2020-07-09T03:30:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM4NjQzMQ=="}], "type": "inlineReview"}, {"oid": "337a5b766976673eeda7238aedef2899448632e0", "url": "https://github.com/pravega/pravega/commit/337a5b766976673eeda7238aedef2899448632e0", "message": "merge with master\n\nSigned-off-by: Shivesh Ranjan <shivesh.ranjan@gmail.com>", "committedDate": "2020-07-08T14:41:34Z", "type": "commit"}, {"oid": "54272fce3f58b94db8df93c91e8bc12a1be9c8fd", "url": "https://github.com/pravega/pravega/commit/54272fce3f58b94db8df93c91e8bc12a1be9c8fd", "message": "Merge branch 'master' into issue4920", "committedDate": "2020-07-09T03:32:51Z", "type": "commit"}]}