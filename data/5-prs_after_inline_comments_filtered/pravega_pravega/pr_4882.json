{"pr_number": 4882, "pr_title": "Issue 4875: Modify name resolution strategy of configuration properties for backward compatibility", "pr_createdAt": "2020-06-19T07:38:06Z", "pr_url": "https://github.com/pravega/pravega/pull/4882", "timeline": [{"oid": "786aaac886de3ce808bb3594f2c28ef5c9b81be3", "url": "https://github.com/pravega/pravega/commit/786aaac886de3ce808bb3594f2c28ef5c9b81be3", "message": "Modify the strategy for property load to legacy first\n\nSigned-off-by: Ravi Sharda <ravi.sharda@emc.com>", "committedDate": "2020-06-19T07:14:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk1ODA2OQ==", "url": "https://github.com/pravega/pravega/pull/4882#discussion_r442958069", "bodyText": "Let's add a log.warn to this code and notify users that they are using a deprecated property name.\nmaybe something like\nDeprecated property name '{}' used. Please use '{}' instead. Support for the old property name will be removed in a future version of Pravega.", "author": "andreipaduroiu", "createdAt": "2020-06-19T17:16:37Z", "path": "common/src/main/java/io/pravega/common/util/TypedProperties.java", "diffHunk": "@@ -125,27 +125,35 @@ public boolean getBoolean(Property<Boolean> property) throws ConfigurationExcept\n     }\n \n     private <T> T tryGet(Property<T> property, Function<String, T> converter) {\n-        String fullKeyName = this.keyPrefix + property.getName();\n+        String propNewName = this.keyPrefix + property.getName();\n+        String propOldName = this.keyPrefix + property.getLegacyName();\n+        String propValue = null;\n \n-        // Get value from config.\n-        String value = this.properties.getProperty(fullKeyName, null);\n+        if (property.hasLegacyName()) {\n+            // Value of property with old name\n+            propValue = this.properties.getProperty(propOldName, null);", "originalCommit": "786aaac886de3ce808bb3594f2c28ef5c9b81be3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzEyNjQ5Ng==", "url": "https://github.com/pravega/pravega/pull/4882#discussion_r443126496", "bodyText": "Yes, that makes sense. I've added this comment now.", "author": "ravisharda", "createdAt": "2020-06-20T12:14:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk1ODA2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk2NDIwMg==", "url": "https://github.com/pravega/pravega/pull/4882#discussion_r442964202", "bodyText": "Same here, please call out the exact property name being used.", "author": "kevinhan88", "createdAt": "2020-06-19T17:30:35Z", "path": "common/src/main/java/io/pravega/common/util/TypedProperties.java", "diffHunk": "@@ -125,27 +125,35 @@ public boolean getBoolean(Property<Boolean> property) throws ConfigurationExcept\n     }\n \n     private <T> T tryGet(Property<T> property, Function<String, T> converter) {\n-        String fullKeyName = this.keyPrefix + property.getName();\n+        String propNewName = this.keyPrefix + property.getName();\n+        String propOldName = this.keyPrefix + property.getLegacyName();\n+        String propValue = null;\n \n-        // Get value from config.\n-        String value = this.properties.getProperty(fullKeyName, null);\n+        if (property.hasLegacyName()) {\n+            // Value of property with old name\n+            propValue = this.properties.getProperty(propOldName, null);\n+        }\n \n-        if (value == null && property.hasLegacyName()) {\n-            value = this.properties.getProperty(this.keyPrefix + property.getLegacyName(), null);\n+        if (propValue == null) {\n+            // Value of property with new name\n+            propValue = this.properties.getProperty(propNewName, null);", "originalCommit": "786aaac886de3ce808bb3594f2c28ef5c9b81be3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk2NzMxMw==", "url": "https://github.com/pravega/pravega/pull/4882#discussion_r442967313", "bodyText": "Consider adding code to handle the scenario that both legacy and current properties are being defined.\nThis is the most confusing scenario, so please log it in details, e.g. \"both legacy and current properties defined as blah blah, and legacy properties is used.\"", "author": "kevinhan88", "createdAt": "2020-06-19T17:38:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk2NDIwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk2NzM3NQ==", "url": "https://github.com/pravega/pravega/pull/4882#discussion_r442967375", "bodyText": "I disagree. See below.\nJust log the most important thing, which is when you are still using something that will not be supported in the future.", "author": "andreipaduroiu", "createdAt": "2020-06-19T17:38:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk2NDIwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzEyNjUzNA==", "url": "https://github.com/pravega/pravega/pull/4882#discussion_r443126534", "bodyText": "I agree with @andreipaduroiu here.", "author": "ravisharda", "createdAt": "2020-06-20T12:15:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk2NDIwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk2NDQ4OQ==", "url": "https://github.com/pravega/pravega/pull/4882#discussion_r442964489", "bodyText": "Also call out in log that default value is being used.", "author": "kevinhan88", "createdAt": "2020-06-19T17:31:12Z", "path": "common/src/main/java/io/pravega/common/util/TypedProperties.java", "diffHunk": "@@ -125,27 +125,35 @@ public boolean getBoolean(Property<Boolean> property) throws ConfigurationExcept\n     }\n \n     private <T> T tryGet(Property<T> property, Function<String, T> converter) {\n-        String fullKeyName = this.keyPrefix + property.getName();\n+        String propNewName = this.keyPrefix + property.getName();\n+        String propOldName = this.keyPrefix + property.getLegacyName();\n+        String propValue = null;\n \n-        // Get value from config.\n-        String value = this.properties.getProperty(fullKeyName, null);\n+        if (property.hasLegacyName()) {\n+            // Value of property with old name\n+            propValue = this.properties.getProperty(propOldName, null);\n+        }\n \n-        if (value == null && property.hasLegacyName()) {\n-            value = this.properties.getProperty(this.keyPrefix + property.getLegacyName(), null);\n+        if (propValue == null) {\n+            // Value of property with new name\n+            propValue = this.properties.getProperty(propNewName, null);\n         }\n-        if (value == null) {\n-            // 2. Nothing in the configuration for this Property.\n+\n+        // A property with neither old not new name was defined, so the property value is still null\n+        if (propValue == null) {\n             if (property.hasDefaultValue()) {\n                 return property.getDefaultValue();", "originalCommit": "786aaac886de3ce808bb3594f2c28ef5c9b81be3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk2NzA0Nw==", "url": "https://github.com/pravega/pravega/pull/4882#discussion_r442967047", "bodyText": "No, there is no need to pollute the logs with this information. Both the Segment store and controller log the values so you should be able to see them if you parse the logs.\nNo point in adding noise to the logs.", "author": "andreipaduroiu", "createdAt": "2020-06-19T17:37:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk2NDQ4OQ=="}], "type": "inlineReview"}, {"oid": "f5882daf18639ccb892faea51b9b2fe992dba2c7", "url": "https://github.com/pravega/pravega/commit/f5882daf18639ccb892faea51b9b2fe992dba2c7", "message": "Add a comment\n\nSigned-off-by: Ravi Sharda <ravi.sharda@emc.com>", "committedDate": "2020-06-20T12:13:15Z", "type": "commit"}]}