{"pr_number": 4768, "pr_title": "Issue 4774: Optimize reader computations", "pr_createdAt": "2020-05-04T14:11:13Z", "pr_url": "https://github.com/pravega/pravega/pull/4768", "timeline": [{"oid": "6a3cf0f106d3a75e7cd4063adf1077196823dae6", "url": "https://github.com/pravega/pravega/commit/6a3cf0f106d3a75e7cd4063adf1077196823dae6", "message": "Reduce number of calls to doesReaderOwnTooManySegments\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-22T16:05:27Z", "type": "commit"}, {"oid": "49280700ad582291a307763ade2f86bf0aa1de9d", "url": "https://github.com/pravega/pravega/commit/49280700ad582291a307763ade2f86bf0aa1de9d", "message": "Relate the frequency of segment load checks to the reader group state update period\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-22T16:05:28Z", "type": "commit"}, {"oid": "674a28343fc0eb0879b81097050cbb5cf4fa81d0", "url": "https://github.com/pravega/pravega/commit/674a28343fc0eb0879b81097050cbb5cf4fa81d0", "message": "Exploit lazy evaluation to avoid extra executions of acquireSegmentsIfNeeded.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-22T16:05:28Z", "type": "commit"}, {"oid": "e04373f849fb3fe4c041f88d3093ea93a49c8342", "url": "https://github.com/pravega/pravega/commit/e04373f849fb3fe4c041f88d3093ea93a49c8342", "message": "Reduce number of getCheckpointForReader executions.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-22T16:05:29Z", "type": "commit"}, {"oid": "75dc939b0f312ffaca04da82e6f9e6e3562eea29", "url": "https://github.com/pravega/pravega/commit/75dc939b0f312ffaca04da82e6f9e6e3562eea29", "message": "Undo change in condition.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-22T16:05:30Z", "type": "commit"}, {"oid": "2b32b27de8b8197e5e3cac4e78aa5a86e8d2cf95", "url": "https://github.com/pravega/pravega/commit/2b32b27de8b8197e5e3cac4e78aa5a86e8d2cf95", "message": "Use release timer instead of fetchStateTimer, as it may not give opportunities for execution to doesReaderOwnTooManySegments.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-22T16:05:30Z", "type": "commit"}, {"oid": "f21982ddf6850a756c81db8e5d37f82d1e42b977", "url": "https://github.com/pravega/pravega/commit/f21982ddf6850a756c81db8e5d37f82d1e42b977", "message": "Add precondition check on the minimum amount of acquire time.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-22T16:05:31Z", "type": "commit"}, {"oid": "b223cacab5b7bb9d676692f26d788f366517135b", "url": "https://github.com/pravega/pravega/commit/b223cacab5b7bb9d676692f26d788f366517135b", "message": "Add a timer to control the number of doesReaderOwnTooManySegments executions.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-22T16:05:32Z", "type": "commit"}, {"oid": "51ba4a49ff4ea706b67c18e23eb9916fce889290", "url": "https://github.com/pravega/pravega/commit/51ba4a49ff4ea706b67c18e23eb9916fce889290", "message": "Reduce watermarking related compute cycles if watermarking is not enabled.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-22T16:05:32Z", "type": "commit"}, {"oid": "081c0b0ac446d0595fa985e1254ffd99e98e8426", "url": "https://github.com/pravega/pravega/commit/081c0b0ac446d0595fa985e1254ffd99e98e8426", "message": "Undo condition change based on watermarking readers.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-22T16:05:33Z", "type": "commit"}, {"oid": "9a7bcf83a14bb3be8f29e2015cff870156553923", "url": "https://github.com/pravega/pravega/commit/9a7bcf83a14bb3be8f29e2015cff870156553923", "message": "Cache result of doesReaderOwnTooManySegments to do not execute it so frequently.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-22T16:05:33Z", "type": "commit"}, {"oid": "5f432709d02031d350dda7f92e11539fe27dc7f0", "url": "https://github.com/pravega/pravega/commit/5f432709d02031d350dda7f92e11539fe27dc7f0", "message": "Fix comment.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-22T16:05:35Z", "type": "commit"}, {"oid": "0e070ae05b0eb724a23f186bbbac79079727dc66", "url": "https://github.com/pravega/pravega/commit/0e070ae05b0eb724a23f186bbbac79079727dc66", "message": "Removed unnecessary else in condition.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-22T16:05:36Z", "type": "commit"}, {"oid": "c5622a1e2e951144286b1e2ee44ff6b2f2b854e9", "url": "https://github.com/pravega/pravega/commit/c5622a1e2e951144286b1e2ee44ff6b2f2b854e9", "message": "Fix checkstyle.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-22T16:05:36Z", "type": "commit"}, {"oid": "9b0683907031998d373fadc518408280bc8bb41e", "url": "https://github.com/pravega/pravega/commit/9b0683907031998d373fadc518408280bc8bb41e", "message": "Test reusing last getPostion call.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-22T16:05:37Z", "type": "commit"}, {"oid": "254799955167e45a2af3e29e9965849de940228f", "url": "https://github.com/pravega/pravega/commit/254799955167e45a2af3e29e9965849de940228f", "message": "Update lastPosition upon a segment change in updateGroupStateIfNeeded().\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-22T16:05:37Z", "type": "commit"}, {"oid": "e64bf9696d1ed1e99286f75af7412d63b2f47ab9", "url": "https://github.com/pravega/pravega/commit/e64bf9696d1ed1e99286f75af7412d63b2f47ab9", "message": "Update last position after end of segment or segment truncated.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-22T16:05:38Z", "type": "commit"}, {"oid": "1d79279032c5df7ffaa8d829008825d9b9b52597", "url": "https://github.com/pravega/pravega/commit/1d79279032c5df7ffaa8d829008825d9b9b52597", "message": "Attempting some improvements on getCheckpointForReader and re-using segment ranges without creating new maps for every event.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-22T16:05:38Z", "type": "commit"}, {"oid": "af307dcf42d3b0816cb08c13934cd3e26176e657", "url": "https://github.com/pravega/pravega/commit/af307dcf42d3b0816cb08c13934cd3e26176e657", "message": "Fix tests.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-22T16:05:39Z", "type": "commit"}, {"oid": "5c239531c5fe2489c10452d1750ab9d820cc19f7", "url": "https://github.com/pravega/pravega/commit/5c239531c5fe2489c10452d1750ab9d820cc19f7", "message": "Most changes from PR comments.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-22T16:05:40Z", "type": "commit"}, {"oid": "faccb9438e07c67d04bbe01f4a2ac6adf6fe92ab", "url": "https://github.com/pravega/pravega/commit/faccb9438e07c67d04bbe01f4a2ac6adf6fe92ab", "message": "Minor changes.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-22T16:05:40Z", "type": "commit"}, {"oid": "4e3d424c8a99759e87f0c54d3b37aa23718c69a0", "url": "https://github.com/pravega/pravega/commit/4e3d424c8a99759e87f0c54d3b37aa23718c69a0", "message": "Fixed import.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-22T16:05:41Z", "type": "commit"}, {"oid": "699b3430d771f0e025a2626d0f83cb2b2af9ff47", "url": "https://github.com/pravega/pravega/commit/699b3430d771f0e025a2626d0f83cb2b2af9ff47", "message": "Changed precondition check based on PR comments.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-22T16:05:41Z", "type": "commit"}, {"oid": "e65350829153ad7064f757a64bfc65603989d53a", "url": "https://github.com/pravega/pravega/commit/e65350829153ad7064f757a64bfc65603989d53a", "message": "Fix checkstyle.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-22T16:05:42Z", "type": "commit"}, {"oid": "df31859f3010f1f51eca24d208c1203155864ca2", "url": "https://github.com/pravega/pravega/commit/df31859f3010f1f51eca24d208c1203155864ca2", "message": "Added test class for copy-on-write utility class.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-22T16:05:42Z", "type": "commit"}, {"oid": "e880adaa1457c4253e1c373078ccf50f22f69769", "url": "https://github.com/pravega/pravega/commit/e880adaa1457c4253e1c373078ccf50f22f69769", "message": "Exploratory analysis for batched segment offset updates.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-22T16:05:43Z", "type": "commit"}, {"oid": "dc78ecaa1ce78a2158d05fb665c142a8421be570", "url": "https://github.com/pravega/pravega/commit/dc78ecaa1ce78a2158d05fb665c142a8421be570", "message": "Continue working on lazy batched updates for offset segments.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-22T16:05:43Z", "type": "commit"}, {"oid": "51002fd47fa8ab5d81e16a32c4729e6585b131e7", "url": "https://github.com/pravega/pravega/commit/51002fd47fa8ab5d81e16a32c4729e6585b131e7", "message": "Fixed race condition in test.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-22T16:05:44Z", "type": "commit"}, {"oid": "e305d01921d5fb921add6c7cf271eff12093fbd3", "url": "https://github.com/pravega/pravega/commit/e305d01921d5fb921add6c7cf271eff12093fbd3", "message": "Make equals and hashcode in PositionImpl to apply segment offset updates if needed. Added PositionImpl tests.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-22T16:05:45Z", "type": "commit"}, {"oid": "e50cf7b32a0e8bd856f9be88f4f5bf6530615af4", "url": "https://github.com/pravega/pravega/commit/e50cf7b32a0e8bd856f9be88f4f5bf6530615af4", "message": "Fix checkstyle.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-22T16:05:45Z", "type": "commit"}, {"oid": "dff29578e25b5c6086e713ae9ee0c6ce7511c619", "url": "https://github.com/pravega/pravega/commit/dff29578e25b5c6086e713ae9ee0c6ce7511c619", "message": "Added new test for PositionImpl.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-22T16:05:46Z", "type": "commit"}, {"oid": "2514e2ede13ea2ed28d00fce87571f36eff42c91", "url": "https://github.com/pravega/pravega/commit/2514e2ede13ea2ed28d00fce87571f36eff42c91", "message": "Clean up ownedSegments and segmentOffsetUpdates on closeAt().\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-22T16:05:47Z", "type": "commit"}, {"oid": "2cb09eec2d2ed8bfc7f7ab7c83367cca26b62d83", "url": "https://github.com/pravega/pravega/commit/2cb09eec2d2ed8bfc7f7ab7c83367cca26b62d83", "message": "Added tests for Position object returned to application in EventStreamReaderImpl.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-22T16:05:47Z", "type": "commit"}, {"oid": "fbc73dcf64c79445eb655964b5ddd53f78bd270f", "url": "https://github.com/pravega/pravega/commit/fbc73dcf64c79445eb655964b5ddd53f78bd270f", "message": "Make objects passed to PositionImpl immutable.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-22T16:05:48Z", "type": "commit"}, {"oid": "2a02a05e98b73080ba765d440c65559baaae4973", "url": "https://github.com/pravega/pravega/commit/2a02a05e98b73080ba765d440c65559baaae4973", "message": "Make objects passed to PositionImpl immutable in the builder method itself.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-22T16:05:48Z", "type": "commit"}, {"oid": "61bf190bbe015145bc8670b4dfc50b0b458721dc", "url": "https://github.com/pravega/pravega/commit/61bf190bbe015145bc8670b4dfc50b0b458721dc", "message": "Fixed chackstyle.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-22T16:05:49Z", "type": "commit"}, {"oid": "9096ebf28f7b41e5cf0c41782d9aa66bd61275bb", "url": "https://github.com/pravega/pravega/commit/9096ebf28f7b41e5cf0c41782d9aa66bd61275bb", "message": "No need for AtomicReference in PositionImpl.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-22T16:05:49Z", "type": "commit"}, {"oid": "461d9f293d9cadb3fbd561bf2fe7dde97e0a3481", "url": "https://github.com/pravega/pravega/commit/461d9f293d9cadb3fbd561bf2fe7dde97e0a3481", "message": "Delete extra space.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-22T16:47:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ2NDY2NA==", "url": "https://github.com/pravega/pravega/pull/4768#discussion_r429464664", "bodyText": "These names are just uuids for the most part, this sort of sorting is meaningless. The time order is the order they are in the checkpoints list. If the list for each host can be maintained in this order (Should be easy as it is the natural order in which they are added) then there is no need to sort, and we can just get the first element every time.", "author": "tkaitchuck", "createdAt": "2020-05-22T21:46:00Z", "path": "client/src/main/java/io/pravega/client/stream/impl/CheckpointState.java", "diffHunk": "@@ -114,14 +109,14 @@ private void recomputeCheckpointIndex() {\n         for (Entry<String, List<String>> entry : uncheckpointedHosts.entrySet()) {\n             String checkpointId = entry.getKey();\n             for (String host : entry.getValue()) {\n-                List<String> checkpointsForHost = checkpointIndex.get(host);\n-                if (checkpointsForHost == null) {\n-                    checkpointsForHost = new ArrayList<>();\n-                    checkpointIndex.put(host, checkpointsForHost);\n-                }\n+                List<String> checkpointsForHost = checkpointIndex.computeIfAbsent(host, k -> new ArrayList<>());\n                 checkpointsForHost.add(checkpointId);\n             }\n         }\n+        // Sort checkpoints per reader so we have fast access based on time ordering.\n+        for (List<String> checkpointsForHost: checkpointIndex.values()) {\n+            checkpointsForHost.sort(String::compareTo);", "originalCommit": "461d9f293d9cadb3fbd561bf2fe7dde97e0a3481", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI1MDExMg==", "url": "https://github.com/pravega/pravega/pull/4768#discussion_r430250112", "bodyText": "Done.", "author": "RaulGracia", "createdAt": "2020-05-26T08:41:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ2NDY2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ3MTkwMw==", "url": "https://github.com/pravega/pravega/pull/4768#discussion_r429471903", "bodyText": "Given the constants you selected this is going to add ~30MB of memory overhead per reader in a user's application. I don't consider this tradeoff worthwhile. See above for how we can avoid this.", "author": "tkaitchuck", "createdAt": "2020-05-22T22:00:04Z", "path": "client/src/main/java/io/pravega/client/stream/impl/PositionImpl.java", "diffHunk": "@@ -22,23 +22,28 @@\n import java.nio.ByteBuffer;\n import java.util.Collections;\n import java.util.HashMap;\n+import java.util.List;\n import java.util.Map;\n import java.util.Map.Entry;\n+import java.util.Objects;\n import java.util.Set;\n import java.util.stream.Collectors;\n import lombok.Builder;\n-import lombok.EqualsAndHashCode;\n import lombok.SneakyThrows;\n \n import static io.pravega.common.io.serialization.RevisionDataOutput.COMPACT_LONG_MAX;\n \n-@EqualsAndHashCode(callSuper = false)\n public class PositionImpl extends PositionInternal {\n \n     private static final PositionSerializer SERIALIZER = new PositionSerializer();\n-    private final Map<Segment, Long> ownedSegments;\n+    private Map<Segment, Long> ownedSegments;\n     private final Map<Segment, Range> segmentRanges;\n \n+    // If this field is set, it means that we will need to apply the updates on the ownedSegments.\n+    private transient List<Entry<Segment, Long>> updatesToSegmentOffsets;", "originalCommit": "461d9f293d9cadb3fbd561bf2fe7dde97e0a3481", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI1MDAzOQ==", "url": "https://github.com/pravega/pravega/pull/4768#discussion_r430250039", "bodyText": "You are right in the case that the copy of the list is necessary, but I think that the current approach of referencing it may be feasible and is the one that provides the actual read throughput speedup.", "author": "RaulGracia", "createdAt": "2020-05-26T08:41:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ3MTkwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY5Mzk5Nw==", "url": "https://github.com/pravega/pravega/pull/4768#discussion_r430693997", "bodyText": "No. That map will be ~30mb and there is one per EventStreamReader.", "author": "tkaitchuck", "createdAt": "2020-05-26T20:37:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ3MTkwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ3MzM1Ng==", "url": "https://github.com/pravega/pravega/pull/4768#discussion_r429473356", "bodyText": "This computation is wrong. The updatesToSegmentOffsets list is passed in without copying it. This means that if a caller holds onto one position object, and then calls readNext the first position object will be updated and have the wrong value. Please add a test for this.", "author": "tkaitchuck", "createdAt": "2020-05-22T22:02:17Z", "path": "client/src/main/java/io/pravega/client/stream/impl/PositionImpl.java", "diffHunk": "@@ -55,37 +62,42 @@ public PositionImpl(Map<SegmentWithRange, Long> segments) {\n     }\n     \n     @Builder(builderClassName = \"PositionBuilder\")\n-    PositionImpl(Map<Segment, Long> ownedSegments, Map<Segment, Range> segmentRanges) {\n-        this.ownedSegments = ownedSegments;\n+    PositionImpl(Map<Segment, Long> ownedSegments, Map<Segment, Range> segmentRanges, List<Entry<Segment, Long>> updatesToSegmentOffsets) {\n+        this.ownedSegments = Collections.unmodifiableMap(ownedSegments);\n+        this.updatesToSegmentOffsets = Collections.unmodifiableList((updatesToSegmentOffsets == null) ? Collections.emptyList() : updatesToSegmentOffsets);", "originalCommit": "461d9f293d9cadb3fbd561bf2fe7dde97e0a3481", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI0OTUzMQ==", "url": "https://github.com/pravega/pravega/pull/4768#discussion_r430249531", "bodyText": "I have added an integration test to verify that the concurrent access and appends to updatesToSegmentOffsets. It shows that the optimization is safe and the offsets are correctly calculated.", "author": "RaulGracia", "createdAt": "2020-05-26T08:40:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ3MzM1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY5NjYzMQ==", "url": "https://github.com/pravega/pravega/pull/4768#discussion_r430696631", "bodyText": "Perhaps I am missing something, but I don't see any actual concurrency in the test.", "author": "tkaitchuck", "createdAt": "2020-05-26T20:43:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ3MzM1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA5MDM1Mg==", "url": "https://github.com/pravega/pravega/pull/4768#discussion_r432090352", "bodyText": "Now the new test (integration/ReadTest.java) involves different threads for writing events, reading events and checking positions objects, so all this activity should happen concurrently. If there is any issue in PositionImpl when reading the segmentOffsetUpdates list is also being used by EventStreamReaderImpl, the test should fail.", "author": "RaulGracia", "createdAt": "2020-05-28T20:00:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ3MzM1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ3MzY0Ng==", "url": "https://github.com/pravega/pravega/pull/4768#discussion_r429473646", "bodyText": "How?! This is all static methods?", "author": "tkaitchuck", "createdAt": "2020-05-22T22:03:25Z", "path": "common/src/main/java/io/pravega/common/util/CopyOnWriteMapUtils.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/**\n+ * Copyright (c) Dell Inc., or its subsidiaries. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package io.pravega.common.util;\n+\n+import javax.annotation.concurrent.NotThreadSafe;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ * Utils class that contains copy-on-write methods for maps.\n+ */\n+@NotThreadSafe", "originalCommit": "461d9f293d9cadb3fbd561bf2fe7dde97e0a3481", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI1MDE5NA==", "url": "https://github.com/pravega/pravega/pull/4768#discussion_r430250194", "bodyText": "Removed.", "author": "RaulGracia", "createdAt": "2020-05-26T08:41:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ3MzY0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ3NDQ1Nw==", "url": "https://github.com/pravega/pravega/pull/4768#discussion_r429474457", "bodyText": "The semantics of which of these collections are copied or not should be spelled out in a javadoc. It would avoid the bug below.", "author": "tkaitchuck", "createdAt": "2020-05-22T22:07:09Z", "path": "client/src/main/java/io/pravega/client/stream/impl/PositionImpl.java", "diffHunk": "@@ -55,37 +62,42 @@ public PositionImpl(Map<SegmentWithRange, Long> segments) {\n     }\n     \n     @Builder(builderClassName = \"PositionBuilder\")\n-    PositionImpl(Map<Segment, Long> ownedSegments, Map<Segment, Range> segmentRanges) {\n-        this.ownedSegments = ownedSegments;\n+    PositionImpl(Map<Segment, Long> ownedSegments, Map<Segment, Range> segmentRanges, List<Entry<Segment, Long>> updatesToSegmentOffsets) {", "originalCommit": "461d9f293d9cadb3fbd561bf2fe7dde97e0a3481", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI1MTMyMw==", "url": "https://github.com/pravega/pravega/pull/4768#discussion_r430251323", "bodyText": "Yes, I definitely can add javadoc explaining the main purpose of this builder and the way it is currently used. But I prefer to defer this task until we agree the final way to do this (whether passing updatesToSegmentOffsets is valid or not).", "author": "RaulGracia", "createdAt": "2020-05-26T08:43:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ3NDQ1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA5MDI4OA==", "url": "https://github.com/pravega/pravega/pull/4768#discussion_r432090288", "bodyText": "I have added javadoc to clarify the goal of the builder method.", "author": "RaulGracia", "createdAt": "2020-05-28T20:00:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ3NDQ1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ3NDk1Mw==", "url": "https://github.com/pravega/pravega/pull/4768#discussion_r429474953", "bodyText": "Because a copy is needed anyway (see comments below) this is actually going to make things slower. It would be better to simply in the getPosition() method iterate over the readers and construct the List<Entry<Segment, Long>> with only one entry per-segment. This is faster, avoids both of the need collections here, and the need to try to cache the position object.", "author": "tkaitchuck", "createdAt": "2020-05-22T22:09:37Z", "path": "client/src/main/java/io/pravega/client/stream/impl/EventStreamReaderImpl.java", "diffHunk": "@@ -60,6 +62,10 @@\n \n     // Base waiting time for a reader on an idle segment waiting for new data to be read.\n     private static final long BASE_READER_WAITING_TIME_MS = ReaderGroupStateManager.TIME_UNIT.toMillis();\n+    // As an optimization to do not generate Position objects on every event read, we define a base map of segments and\n+    // then a batch of updates to the offsets of these segments, one per event read. Internally, the Position object can\n+    // derive the right offsets at which the event was read by lazily replying such updates up to the point it was read.\n+    private static final long MAX_BUFFERED_SEGMENT_OFFSET_UPDATES = 1000;", "originalCommit": "461d9f293d9cadb3fbd561bf2fe7dde97e0a3481", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA5MDIyOA==", "url": "https://github.com/pravega/pravega/pull/4768#discussion_r432090228", "bodyText": "I have added a performance comparison comparing your suggestion with this PR. For 1 segment, your approach is at par with this PR in terms of speed. But as more segments are handled by the reader, the performance decreases, given that the list to copy is larger.", "author": "RaulGracia", "createdAt": "2020-05-28T20:00:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ3NDk1Mw=="}], "type": "inlineReview"}, {"oid": "2e24c4400fb98a32029d91c76a88d1abad63709a", "url": "https://github.com/pravega/pravega/commit/2e24c4400fb98a32029d91c76a88d1abad63709a", "message": "Address review comments.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-25T11:23:46Z", "type": "commit"}, {"oid": "2e0cd7c79e8ee73024742aab059d19a00e31fbd0", "url": "https://github.com/pravega/pravega/commit/2e0cd7c79e8ee73024742aab059d19a00e31fbd0", "message": "Address review comments.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-25T11:25:36Z", "type": "commit"}, {"oid": "74d69aafeca84ed43a0ec3907671866797ff8623", "url": "https://github.com/pravega/pravega/commit/74d69aafeca84ed43a0ec3907671866797ff8623", "message": "Make CopyOnWriteMapUtils final.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-25T11:26:11Z", "type": "commit"}, {"oid": "9508aba3c43c065ca91ea8a5b586983f93259810", "url": "https://github.com/pravega/pravega/commit/9508aba3c43c065ca91ea8a5b586983f93259810", "message": "Ensure that segmentOffsetUpdatesList is structurally immutable and improved test.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-28T11:26:46Z", "type": "commit"}, {"oid": "9508aba3c43c065ca91ea8a5b586983f93259810", "url": "https://github.com/pravega/pravega/commit/9508aba3c43c065ca91ea8a5b586983f93259810", "message": "Ensure that segmentOffsetUpdatesList is structurally immutable and improved test.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-28T11:26:46Z", "type": "forcePushed"}, {"oid": "a19c3981fd831b63f67cae159bc60057c1ef5008", "url": "https://github.com/pravega/pravega/commit/a19c3981fd831b63f67cae159bc60057c1ef5008", "message": "Add javadoc to builder method in PositionImpl.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-28T19:35:29Z", "type": "commit"}, {"oid": "a19c3981fd831b63f67cae159bc60057c1ef5008", "url": "https://github.com/pravega/pravega/commit/a19c3981fd831b63f67cae159bc60057c1ef5008", "message": "Add javadoc to builder method in PositionImpl.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-28T19:35:29Z", "type": "forcePushed"}, {"oid": "4b5e9b72c4836f140ed3f183df87124155d3a67b", "url": "https://github.com/pravega/pravega/commit/4b5e9b72c4836f140ed3f183df87124155d3a67b", "message": "Minor improvements in comments.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-29T06:48:30Z", "type": "commit"}, {"oid": "4b5e9b72c4836f140ed3f183df87124155d3a67b", "url": "https://github.com/pravega/pravega/commit/4b5e9b72c4836f140ed3f183df87124155d3a67b", "message": "Minor improvements in comments.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-29T06:48:30Z", "type": "forcePushed"}, {"oid": "22202507353957beebe2c36116476019e31bf5d2", "url": "https://github.com/pravega/pravega/commit/22202507353957beebe2c36116476019e31bf5d2", "message": "Cache in memory scoped segment name instead of constructing on each call as it is checked on each event read.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-05-29T18:15:18Z", "type": "commit"}, {"oid": "4bdee85459be6912be2d744e259344df52c02b5e", "url": "https://github.com/pravega/pravega/commit/4bdee85459be6912be2d744e259344df52c02b5e", "message": "Optimize lazy construction of PositionImpl object state.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-06-03T11:38:11Z", "type": "commit"}, {"oid": "4bdee85459be6912be2d744e259344df52c02b5e", "url": "https://github.com/pravega/pravega/commit/4bdee85459be6912be2d744e259344df52c02b5e", "message": "Optimize lazy construction of PositionImpl object state.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-06-03T11:38:11Z", "type": "forcePushed"}, {"oid": "6c509a43880596e4b386d49124c8a59318175352", "url": "https://github.com/pravega/pravega/commit/6c509a43880596e4b386d49124c8a59318175352", "message": "Fix spotbugs.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-06-03T13:28:14Z", "type": "commit"}, {"oid": "6c509a43880596e4b386d49124c8a59318175352", "url": "https://github.com/pravega/pravega/commit/6c509a43880596e4b386d49124c8a59318175352", "message": "Fix spotbugs.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-06-03T13:28:14Z", "type": "forcePushed"}, {"oid": "a940b202da3953dc2709778781a1942a911b65e4", "url": "https://github.com/pravega/pravega/commit/a940b202da3953dc2709778781a1942a911b65e4", "message": "Replaced CopyOnWriteMapUtils by a CopyOnWriteMap implementation. Removed GuardedBy annotation from ranges, ownedSegments and segmentOffsetUpdates as they may be (safely) accessed by PositionImpl objects.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-06-05T11:16:20Z", "type": "commit"}, {"oid": "a940b202da3953dc2709778781a1942a911b65e4", "url": "https://github.com/pravega/pravega/commit/a940b202da3953dc2709778781a1942a911b65e4", "message": "Replaced CopyOnWriteMapUtils by a CopyOnWriteMap implementation. Removed GuardedBy annotation from ranges, ownedSegments and segmentOffsetUpdates as they may be (safely) accessed by PositionImpl objects.\n\nSigned-off-by: Ra\u00fal Gracia <raul.gracia@emc.com>", "committedDate": "2020-06-05T11:16:20Z", "type": "forcePushed"}, {"oid": "d893db7f75b24d4355e58dfbc5bb4425b320b794", "url": "https://github.com/pravega/pravega/commit/d893db7f75b24d4355e58dfbc5bb4425b320b794", "message": "Merge branch 'master' into issue-reduce-segment-offload-calls", "committedDate": "2020-06-05T11:17:06Z", "type": "commit"}, {"oid": "d6083baf57ad00acec0b3a185b752d4c8600703c", "url": "https://github.com/pravega/pravega/commit/d6083baf57ad00acec0b3a185b752d4c8600703c", "message": "Merge branch 'master' into issue-reduce-segment-offload-calls", "committedDate": "2020-06-05T23:38:43Z", "type": "commit"}, {"oid": "26a7aa54b591bfe9da25b6732199104c263a2dab", "url": "https://github.com/pravega/pravega/commit/26a7aa54b591bfe9da25b6732199104c263a2dab", "message": "Merge branch 'master' into issue-reduce-segment-offload-calls", "committedDate": "2020-06-06T13:54:24Z", "type": "commit"}, {"oid": "0716c66578965c4ae5ee56bc948f77189057c5cc", "url": "https://github.com/pravega/pravega/commit/0716c66578965c4ae5ee56bc948f77189057c5cc", "message": "Merge branch 'master' into issue-reduce-segment-offload-calls", "committedDate": "2020-06-08T10:17:15Z", "type": "commit"}, {"oid": "bcc1a8079f20db280948ff617c6d45c5f132aaf9", "url": "https://github.com/pravega/pravega/commit/bcc1a8079f20db280948ff617c6d45c5f132aaf9", "message": "Merge branch 'master' into issue-reduce-segment-offload-calls", "committedDate": "2020-06-08T15:09:22Z", "type": "commit"}, {"oid": "84b10eb198c29aabb171e8ebf58491f2e5cfce27", "url": "https://github.com/pravega/pravega/commit/84b10eb198c29aabb171e8ebf58491f2e5cfce27", "message": "Merge branch 'master' into issue-reduce-segment-offload-calls", "committedDate": "2020-06-08T15:56:09Z", "type": "commit"}]}