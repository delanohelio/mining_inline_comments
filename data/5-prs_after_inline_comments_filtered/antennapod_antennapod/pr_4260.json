{"pr_number": 4260, "pr_title": "fixes #1215 replacing share menu by dialog", "pr_createdAt": "2020-06-23T22:29:01Z", "pr_url": "https://github.com/AntennaPod/AntennaPod/pull/4260", "timeline": [{"oid": "020d5859725b5322f85fbf3db6d4332c467b08ef", "url": "https://github.com/AntennaPod/AntennaPod/commit/020d5859725b5322f85fbf3db6d4332c467b08ef", "message": "fixes #1215 replacing share menu by dialog", "committedDate": "2020-06-23T22:15:41Z", "type": "commit"}, {"oid": "c78cb4e229a6d3c26cdcca2584d18fadda2a638a", "url": "https://github.com/AntennaPod/AntennaPod/commit/c78cb4e229a6d3c26cdcca2584d18fadda2a638a", "message": "fixing checkstyle", "committedDate": "2020-06-23T23:17:23Z", "type": "forcePushed"}, {"oid": "0d66e771fc473286fea3f28058fd7d74e8d3eb3c", "url": "https://github.com/AntennaPod/AntennaPod/commit/0d66e771fc473286fea3f28058fd7d74e8d3eb3c", "message": "fixing checkstyle", "committedDate": "2020-06-23T23:24:13Z", "type": "forcePushed"}, {"oid": "bddd5524e242d3394ba764d6034571af67307bc9", "url": "https://github.com/AntennaPod/AntennaPod/commit/bddd5524e242d3394ba764d6034571af67307bc9", "message": "fixing checkstyles", "committedDate": "2020-06-23T23:27:10Z", "type": "forcePushed"}, {"oid": "1bc3639a39facc4c730fc5e1e7f1ae68b92b899e", "url": "https://github.com/AntennaPod/AntennaPod/commit/1bc3639a39facc4c730fc5e1e7f1ae68b92b899e", "message": "fixing checkstyles", "committedDate": "2020-06-23T23:31:03Z", "type": "commit"}, {"oid": "1bc3639a39facc4c730fc5e1e7f1ae68b92b899e", "url": "https://github.com/AntennaPod/AntennaPod/commit/1bc3639a39facc4c730fc5e1e7f1ae68b92b899e", "message": "fixing checkstyles", "committedDate": "2020-06-23T23:31:03Z", "type": "forcePushed"}, {"oid": "1b57b00fb32940c1de0baeffc91f2ca92bd90822", "url": "https://github.com/AntennaPod/AntennaPod/commit/1b57b00fb32940c1de0baeffc91f2ca92bd90822", "message": "updating share episode dialog", "committedDate": "2020-06-26T15:58:37Z", "type": "commit"}, {"oid": "8d6fab6ead5a8d69456a0494e2df6fd90f54e1d4", "url": "https://github.com/AntennaPod/AntennaPod/commit/8d6fab6ead5a8d69456a0494e2df6fd90f54e1d4", "message": "adding episode dialog tests", "committedDate": "2020-06-26T15:59:02Z", "type": "commit"}, {"oid": "b36078b8f198d166c31863558198510cf574e656", "url": "https://github.com/AntennaPod/AntennaPod/commit/b36078b8f198d166c31863558198510cf574e656", "message": "adding shared preferences to ShareEpisodeDialog", "committedDate": "2020-06-26T21:38:08Z", "type": "commit"}, {"oid": "b36078b8f198d166c31863558198510cf574e656", "url": "https://github.com/AntennaPod/AntennaPod/commit/b36078b8f198d166c31863558198510cf574e656", "message": "adding shared preferences to ShareEpisodeDialog", "committedDate": "2020-06-26T21:38:08Z", "type": "forcePushed"}, {"oid": "79167e30b26498e6f970cd13a8fb221ad4920bfa", "url": "https://github.com/AntennaPod/AntennaPod/commit/79167e30b26498e6f970cd13a8fb221ad4920bfa", "message": "fixing tests and ShareEpisodeDialog", "committedDate": "2020-06-26T23:11:22Z", "type": "forcePushed"}, {"oid": "5363b09f0067a61db5451b4c794c9a3ab919ece6", "url": "https://github.com/AntennaPod/AntennaPod/commit/5363b09f0067a61db5451b4c794c9a3ab919ece6", "message": "fixing test and ShareEpisodeDialog", "committedDate": "2020-06-26T23:52:48Z", "type": "commit"}, {"oid": "5363b09f0067a61db5451b4c794c9a3ab919ece6", "url": "https://github.com/AntennaPod/AntennaPod/commit/5363b09f0067a61db5451b4c794c9a3ab919ece6", "message": "fixing test and ShareEpisodeDialog", "committedDate": "2020-06-26T23:52:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ5Njg0Nw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4260#discussion_r446496847", "bodyText": "I would move this to a dialogs package and name the class ShareDialogTest, so it is more modular", "author": "ByteHamster", "createdAt": "2020-06-27T07:30:10Z", "path": "app/src/androidTest/java/de/test/antennapod/ui/DialogsTest.java", "diffHunk": "@@ -0,0 +1,98 @@\n+package de.test.antennapod.ui;\n+\n+import android.content.Intent;\n+import android.view.View;\n+import androidx.test.espresso.Espresso;\n+import androidx.test.espresso.contrib.RecyclerViewActions;\n+import androidx.test.espresso.intent.rule.IntentsTestRule;\n+import androidx.test.runner.AndroidJUnit4;\n+import de.danoeh.antennapod.R;\n+import de.danoeh.antennapod.activity.MainActivity;\n+import de.danoeh.antennapod.fragment.AddFeedFragment;\n+import de.danoeh.antennapod.fragment.DownloadsFragment;\n+import de.danoeh.antennapod.fragment.QueueFragment;\n+import de.danoeh.antennapod.fragment.SubscriptionFragment;\n+import de.test.antennapod.EspressoTestUtils;\n+import org.hamcrest.Matcher;\n+import org.hamcrest.Matchers;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import static androidx.test.espresso.Espresso.onView;\n+import static androidx.test.espresso.action.ViewActions.clearText;\n+import static androidx.test.espresso.action.ViewActions.click;\n+import static androidx.test.espresso.action.ViewActions.closeSoftKeyboard;\n+import static androidx.test.espresso.action.ViewActions.scrollTo;\n+import static androidx.test.espresso.action.ViewActions.typeText;\n+import static androidx.test.espresso.assertion.ViewAssertions.matches;\n+import static androidx.test.espresso.matcher.RootMatchers.isDialog;\n+import static androidx.test.espresso.matcher.ViewMatchers.isDescendantOfA;\n+import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;\n+import static androidx.test.espresso.matcher.ViewMatchers.isRoot;\n+import static androidx.test.espresso.matcher.ViewMatchers.withClassName;\n+import static androidx.test.espresso.matcher.ViewMatchers.withContentDescription;\n+import static androidx.test.espresso.matcher.ViewMatchers.withId;\n+import static androidx.test.espresso.matcher.ViewMatchers.withText;\n+import static de.test.antennapod.EspressoTestUtils.waitForView;\n+import static de.test.antennapod.NthMatcher.first;\n+import static org.hamcrest.CoreMatchers.allOf;\n+import static org.hamcrest.CoreMatchers.endsWith;\n+\n+/**\n+ * User interface tests for queue fragment.\n+ */\n+@RunWith(AndroidJUnit4.class)\n+public class DialogsTest {", "originalCommit": "5363b09f0067a61db5451b4c794c9a3ab919ece6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjY4NzUxNQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4260#discussion_r446687515", "bodyText": "yes, you're right. I'm gonna fix it.", "author": "gerardolgvr", "createdAt": "2020-06-28T19:17:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ5Njg0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ5Njk1Ng==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4260#discussion_r446496956", "bodyText": "We already have a class UITestUtils that automatically adds and hosts a podcast. I would prefer that over a real podcast because it makes us less dependent on somebody else. See PlaybackTest for example usage.", "author": "ByteHamster", "createdAt": "2020-06-27T07:31:49Z", "path": "app/src/androidTest/java/de/test/antennapod/ui/DialogsTest.java", "diffHunk": "@@ -0,0 +1,98 @@\n+package de.test.antennapod.ui;\n+\n+import android.content.Intent;\n+import android.view.View;\n+import androidx.test.espresso.Espresso;\n+import androidx.test.espresso.contrib.RecyclerViewActions;\n+import androidx.test.espresso.intent.rule.IntentsTestRule;\n+import androidx.test.runner.AndroidJUnit4;\n+import de.danoeh.antennapod.R;\n+import de.danoeh.antennapod.activity.MainActivity;\n+import de.danoeh.antennapod.fragment.AddFeedFragment;\n+import de.danoeh.antennapod.fragment.DownloadsFragment;\n+import de.danoeh.antennapod.fragment.QueueFragment;\n+import de.danoeh.antennapod.fragment.SubscriptionFragment;\n+import de.test.antennapod.EspressoTestUtils;\n+import org.hamcrest.Matcher;\n+import org.hamcrest.Matchers;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import static androidx.test.espresso.Espresso.onView;\n+import static androidx.test.espresso.action.ViewActions.clearText;\n+import static androidx.test.espresso.action.ViewActions.click;\n+import static androidx.test.espresso.action.ViewActions.closeSoftKeyboard;\n+import static androidx.test.espresso.action.ViewActions.scrollTo;\n+import static androidx.test.espresso.action.ViewActions.typeText;\n+import static androidx.test.espresso.assertion.ViewAssertions.matches;\n+import static androidx.test.espresso.matcher.RootMatchers.isDialog;\n+import static androidx.test.espresso.matcher.ViewMatchers.isDescendantOfA;\n+import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;\n+import static androidx.test.espresso.matcher.ViewMatchers.isRoot;\n+import static androidx.test.espresso.matcher.ViewMatchers.withClassName;\n+import static androidx.test.espresso.matcher.ViewMatchers.withContentDescription;\n+import static androidx.test.espresso.matcher.ViewMatchers.withId;\n+import static androidx.test.espresso.matcher.ViewMatchers.withText;\n+import static de.test.antennapod.EspressoTestUtils.waitForView;\n+import static de.test.antennapod.NthMatcher.first;\n+import static org.hamcrest.CoreMatchers.allOf;\n+import static org.hamcrest.CoreMatchers.endsWith;\n+\n+/**\n+ * User interface tests for queue fragment.\n+ */\n+@RunWith(AndroidJUnit4.class)\n+public class DialogsTest {\n+\n+    @Rule\n+    public IntentsTestRule<MainActivity> activityRule = new IntentsTestRule<>(MainActivity.class, false, false);\n+\n+    @Before\n+    public void setUp() throws InterruptedException {\n+        EspressoTestUtils.clearPreferences();\n+        EspressoTestUtils.clearDatabase();\n+        EspressoTestUtils.setLastNavFragment(AddFeedFragment.TAG);\n+        activityRule.launchActivity(new Intent());\n+\n+        String url = \"https://omny.fm/shows/silence-is-not-an-option/why-not-being-racist-is-not-enough\";", "originalCommit": "5363b09f0067a61db5451b4c794c9a3ab919ece6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjY4ODQ1NA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4260#discussion_r446688454", "bodyText": "I'm gonna have a look in that to update the tests :)", "author": "gerardolgvr", "createdAt": "2020-06-28T19:27:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ5Njk1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ5NzEwMw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4260#discussion_r446497103", "bodyText": "Explicit sleep calls are usually not good for tests. It either makes them slow or it makes them fast but fails sometimes. Espresso should theoretically wait for the UI thread automatically.", "author": "ByteHamster", "createdAt": "2020-06-27T07:33:39Z", "path": "app/src/androidTest/java/de/test/antennapod/ui/DialogsTest.java", "diffHunk": "@@ -0,0 +1,98 @@\n+package de.test.antennapod.ui;\n+\n+import android.content.Intent;\n+import android.view.View;\n+import androidx.test.espresso.Espresso;\n+import androidx.test.espresso.contrib.RecyclerViewActions;\n+import androidx.test.espresso.intent.rule.IntentsTestRule;\n+import androidx.test.runner.AndroidJUnit4;\n+import de.danoeh.antennapod.R;\n+import de.danoeh.antennapod.activity.MainActivity;\n+import de.danoeh.antennapod.fragment.AddFeedFragment;\n+import de.danoeh.antennapod.fragment.DownloadsFragment;\n+import de.danoeh.antennapod.fragment.QueueFragment;\n+import de.danoeh.antennapod.fragment.SubscriptionFragment;\n+import de.test.antennapod.EspressoTestUtils;\n+import org.hamcrest.Matcher;\n+import org.hamcrest.Matchers;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import static androidx.test.espresso.Espresso.onView;\n+import static androidx.test.espresso.action.ViewActions.clearText;\n+import static androidx.test.espresso.action.ViewActions.click;\n+import static androidx.test.espresso.action.ViewActions.closeSoftKeyboard;\n+import static androidx.test.espresso.action.ViewActions.scrollTo;\n+import static androidx.test.espresso.action.ViewActions.typeText;\n+import static androidx.test.espresso.assertion.ViewAssertions.matches;\n+import static androidx.test.espresso.matcher.RootMatchers.isDialog;\n+import static androidx.test.espresso.matcher.ViewMatchers.isDescendantOfA;\n+import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;\n+import static androidx.test.espresso.matcher.ViewMatchers.isRoot;\n+import static androidx.test.espresso.matcher.ViewMatchers.withClassName;\n+import static androidx.test.espresso.matcher.ViewMatchers.withContentDescription;\n+import static androidx.test.espresso.matcher.ViewMatchers.withId;\n+import static androidx.test.espresso.matcher.ViewMatchers.withText;\n+import static de.test.antennapod.EspressoTestUtils.waitForView;\n+import static de.test.antennapod.NthMatcher.first;\n+import static org.hamcrest.CoreMatchers.allOf;\n+import static org.hamcrest.CoreMatchers.endsWith;\n+\n+/**\n+ * User interface tests for queue fragment.\n+ */\n+@RunWith(AndroidJUnit4.class)\n+public class DialogsTest {\n+\n+    @Rule\n+    public IntentsTestRule<MainActivity> activityRule = new IntentsTestRule<>(MainActivity.class, false, false);\n+\n+    @Before\n+    public void setUp() throws InterruptedException {\n+        EspressoTestUtils.clearPreferences();\n+        EspressoTestUtils.clearDatabase();\n+        EspressoTestUtils.setLastNavFragment(AddFeedFragment.TAG);\n+        activityRule.launchActivity(new Intent());\n+\n+        String url = \"https://omny.fm/shows/silence-is-not-an-option/why-not-being-racist-is-not-enough\";\n+\n+        onView(withId(R.id.btn_add_via_url)).perform(scrollTo()).perform(click());\n+        onView(withId(R.id.text)).perform(clearText(), typeText(url));\n+        onView(withText(R.string.confirm_label)).inRoot(isDialog())\n+                .check(matches(isDisplayed()))\n+                .perform(closeSoftKeyboard())\n+                .perform(scrollTo())\n+                .perform(click());\n+        Thread.sleep(5000);\n+        onView(withId(R.id.butSubscribe)).perform(click());\n+        Thread.sleep(5000);\n+        onView(withId(R.id.recyclerView))\n+                .perform(RecyclerViewActions.actionOnItemAtPosition(0, click()));\n+        Thread.sleep(3000);\n+        onView(first(EspressoTestUtils.actionBarOverflow())).perform(click());\n+    }\n+\n+    @Test\n+    public void testShareDialogDisplayed() {\n+        onView(withText(R.string.share_label)).perform(scrollTo()).perform(click());\n+        onView(allOf(isDisplayed(), withText(R.string.share_episode_label)));\n+    }\n+\n+    @Test\n+    public void testShareDialogShareButton() throws InterruptedException {\n+        onView(withText(R.string.share_label)).perform(scrollTo()).perform(click());\n+        onView(allOf(isDisplayed(), withText(R.string.share_label)));\n+        Thread.sleep(1000);\n+        onView(withText(R.string.share_episode_positive_label_button)).perform(scrollTo()).perform(click());\n+        Thread.sleep(2000);", "originalCommit": "5363b09f0067a61db5451b4c794c9a3ab919ece6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjcwMTg1OA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4260#discussion_r446701858", "bodyText": "thanks I updated the tests :)", "author": "gerardolgvr", "createdAt": "2020-06-28T21:43:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ5NzEwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ5NzM2NA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4260#discussion_r446497364", "bodyText": "Please use a preference store specifically for the dialog. This reduces the probability of name collisions. ctx.getSharedPreferences (SHARE_DIALOG_PREFS, Context.MODE_PRIVATE)", "author": "ByteHamster", "createdAt": "2020-06-27T07:36:59Z", "path": "app/src/main/java/de/danoeh/antennapod/dialog/ShareDialog.java", "diffHunk": "@@ -0,0 +1,121 @@\n+package de.danoeh.antennapod.dialog;\n+\n+import android.app.Dialog;\n+import android.content.Context;\n+import android.content.DialogInterface;\n+import android.content.SharedPreferences;\n+import android.os.Bundle;\n+import android.preference.PreferenceManager;\n+import android.view.View;\n+import android.widget.RadioButton;\n+import android.widget.RadioGroup;\n+import android.widget.Switch;\n+import android.widget.Toast;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.appcompat.app.AlertDialog;\n+import androidx.fragment.app.DialogFragment;\n+import de.danoeh.antennapod.R;\n+import de.danoeh.antennapod.core.feed.FeedItem;\n+import de.danoeh.antennapod.core.preferences.UserPreferences;\n+import de.danoeh.antennapod.core.util.ShareUtils;\n+\n+public class ShareDialog extends DialogFragment {\n+\n+    private static final String TAG = \"ShareDialog\";\n+    private final Context ctx;\n+    private FeedItem item;\n+\n+    private RadioGroup radioGroup;\n+    private RadioButton radioEpisodeWebsite;\n+    private RadioButton radioMediaFile;\n+    private Switch switchStartAt;\n+    private SharedPreferences prefs;\n+\n+    public ShareDialog(Context ctx, FeedItem item) {\n+        this.ctx = ctx;\n+        this.item = item;\n+        prefs = PreferenceManager.getDefaultSharedPreferences(ctx);", "originalCommit": "5363b09f0067a61db5451b4c794c9a3ab919ece6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjY4ODM0NA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4260#discussion_r446688344", "bodyText": "fixed for the next commit :)", "author": "gerardolgvr", "createdAt": "2020-06-28T19:25:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ5NzM2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ5NzQzNA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4260#discussion_r446497434", "bodyText": "Please decouple this from the UserPreferences class (that class is already huge). Just create the constants here -- they are not needed globally.", "author": "ByteHamster", "createdAt": "2020-06-27T07:37:48Z", "path": "app/src/main/java/de/danoeh/antennapod/dialog/ShareDialog.java", "diffHunk": "@@ -0,0 +1,121 @@\n+package de.danoeh.antennapod.dialog;\n+\n+import android.app.Dialog;\n+import android.content.Context;\n+import android.content.DialogInterface;\n+import android.content.SharedPreferences;\n+import android.os.Bundle;\n+import android.preference.PreferenceManager;\n+import android.view.View;\n+import android.widget.RadioButton;\n+import android.widget.RadioGroup;\n+import android.widget.Switch;\n+import android.widget.Toast;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.appcompat.app.AlertDialog;\n+import androidx.fragment.app.DialogFragment;\n+import de.danoeh.antennapod.R;\n+import de.danoeh.antennapod.core.feed.FeedItem;\n+import de.danoeh.antennapod.core.preferences.UserPreferences;\n+import de.danoeh.antennapod.core.util.ShareUtils;\n+\n+public class ShareDialog extends DialogFragment {\n+\n+    private static final String TAG = \"ShareDialog\";\n+    private final Context ctx;\n+    private FeedItem item;\n+\n+    private RadioGroup radioGroup;\n+    private RadioButton radioEpisodeWebsite;\n+    private RadioButton radioMediaFile;\n+    private Switch switchStartAt;\n+    private SharedPreferences prefs;\n+\n+    public ShareDialog(Context ctx, FeedItem item) {\n+        this.ctx = ctx;\n+        this.item = item;\n+        prefs = PreferenceManager.getDefaultSharedPreferences(ctx);\n+    }\n+\n+    @NonNull\n+    @Override\n+    public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {\n+        View content = View.inflate(ctx, R.layout.share_episode_dialog, null);\n+        AlertDialog.Builder builder = new AlertDialog.Builder(ctx);\n+        builder.setTitle(R.string.share_episode_label);\n+        builder.setView(content);\n+\n+        radioGroup = content.findViewById(R.id.share_dialog_radio_group);\n+        radioEpisodeWebsite = content.findViewById(R.id.share_episode_website_radio);\n+        radioMediaFile = content.findViewById(R.id.share_media_file_radio);\n+        switchStartAt = content.findViewById(R.id.share_start_at_timer_dialog);\n+\n+        setupOptions();\n+\n+        builder\n+                .setPositiveButton(R.string.share_episode_positive_label_button, new DialogInterface.OnClickListener() {\n+                    @Override\n+                    public void onClick(DialogInterface dialog, int id) {\n+                        if (radioEpisodeWebsite.isChecked()) {\n+                            if (switchStartAt.isChecked()) {\n+                                ShareUtils.shareFeedItemLink(ctx, item, true);\n+                                prefs.edit().putBoolean(UserPreferences.PREF_SHARE_EPISODE_START_AT, true).apply();", "originalCommit": "5363b09f0067a61db5451b4c794c9a3ab919ece6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjY4ODI5OA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4260#discussion_r446688298", "bodyText": "perfect, I have already update this for the next commit. Thanks", "author": "gerardolgvr", "createdAt": "2020-06-28T19:25:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ5NzQzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ5NzY0MA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4260#discussion_r446497640", "bodyText": "Can you please shorten this? These checks look pretty big and I think they can be simplified, eg. something like this:\nShareUtils.shareFeedItemDownloadLink(ctx, item, switchStartAt.isChecked());\nprefs.edit().putBoolean(UserPreferences.PREF_SHARE_EPISODE_START_AT, switchStartAt.isChecked()).apply();", "author": "ByteHamster", "createdAt": "2020-06-27T07:40:40Z", "path": "app/src/main/java/de/danoeh/antennapod/dialog/ShareDialog.java", "diffHunk": "@@ -0,0 +1,121 @@\n+package de.danoeh.antennapod.dialog;\n+\n+import android.app.Dialog;\n+import android.content.Context;\n+import android.content.DialogInterface;\n+import android.content.SharedPreferences;\n+import android.os.Bundle;\n+import android.preference.PreferenceManager;\n+import android.view.View;\n+import android.widget.RadioButton;\n+import android.widget.RadioGroup;\n+import android.widget.Switch;\n+import android.widget.Toast;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.appcompat.app.AlertDialog;\n+import androidx.fragment.app.DialogFragment;\n+import de.danoeh.antennapod.R;\n+import de.danoeh.antennapod.core.feed.FeedItem;\n+import de.danoeh.antennapod.core.preferences.UserPreferences;\n+import de.danoeh.antennapod.core.util.ShareUtils;\n+\n+public class ShareDialog extends DialogFragment {\n+\n+    private static final String TAG = \"ShareDialog\";\n+    private final Context ctx;\n+    private FeedItem item;\n+\n+    private RadioGroup radioGroup;\n+    private RadioButton radioEpisodeWebsite;\n+    private RadioButton radioMediaFile;\n+    private Switch switchStartAt;\n+    private SharedPreferences prefs;\n+\n+    public ShareDialog(Context ctx, FeedItem item) {\n+        this.ctx = ctx;\n+        this.item = item;\n+        prefs = PreferenceManager.getDefaultSharedPreferences(ctx);\n+    }\n+\n+    @NonNull\n+    @Override\n+    public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {\n+        View content = View.inflate(ctx, R.layout.share_episode_dialog, null);\n+        AlertDialog.Builder builder = new AlertDialog.Builder(ctx);\n+        builder.setTitle(R.string.share_episode_label);\n+        builder.setView(content);\n+\n+        radioGroup = content.findViewById(R.id.share_dialog_radio_group);\n+        radioEpisodeWebsite = content.findViewById(R.id.share_episode_website_radio);\n+        radioMediaFile = content.findViewById(R.id.share_media_file_radio);\n+        switchStartAt = content.findViewById(R.id.share_start_at_timer_dialog);\n+\n+        setupOptions();\n+\n+        builder\n+                .setPositiveButton(R.string.share_episode_positive_label_button, new DialogInterface.OnClickListener() {\n+                    @Override\n+                    public void onClick(DialogInterface dialog, int id) {\n+                        if (radioEpisodeWebsite.isChecked()) {\n+                            if (switchStartAt.isChecked()) {\n+                                ShareUtils.shareFeedItemLink(ctx, item, true);\n+                                prefs.edit().putBoolean(UserPreferences.PREF_SHARE_EPISODE_START_AT, true).apply();\n+                            } else {\n+                                ShareUtils.shareFeedItemLink(ctx, item);\n+                                prefs.edit().putBoolean(UserPreferences.PREF_SHARE_EPISODE_START_AT, false).apply();\n+                            }\n+                            prefs.edit().putBoolean(UserPreferences.PREF_SHARE_EPISODE_WEBSITE, true).apply();\n+                            prefs.edit().putBoolean(UserPreferences.PREF_SHARE_EPISODE_MEDIA, false).apply();\n+                        } else {\n+                            if (switchStartAt.isChecked()) {\n+                                ShareUtils.shareFeedItemDownloadLink(ctx, item, true);\n+                                prefs.edit().putBoolean(UserPreferences.PREF_SHARE_EPISODE_START_AT, true).apply();\n+                            } else {\n+                                ShareUtils.shareFeedItemDownloadLink(ctx, item);\n+                                prefs.edit().putBoolean(UserPreferences.PREF_SHARE_EPISODE_START_AT, false).apply();\n+                            }", "originalCommit": "5363b09f0067a61db5451b4c794c9a3ab919ece6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjY4ODIxNw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4260#discussion_r446688217", "bodyText": "sure, I have already update this for the next commit. Thanks for this observation", "author": "gerardolgvr", "createdAt": "2020-06-28T19:24:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ5NzY0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ5ODA2NQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4260#discussion_r446498065", "bodyText": "Please change the type of context instead of casting (fragment.getActivity()?). I fear that this could lead to runtime crashes otherwise.", "author": "ByteHamster", "createdAt": "2020-06-27T07:46:05Z", "path": "app/src/main/java/de/danoeh/antennapod/menuhandler/FeedItemMenuHandler.java", "diffHunk": "@@ -243,20 +235,9 @@ public static boolean onMenuItemClicked(@NonNull Fragment fragment, int menuItem\n             case R.id.visit_website_item:\n                 IntentUtils.openInBrowser(context, FeedItemUtil.getLinkWithFallback(selectedItem));\n                 break;\n-            case R.id.share_link_item:\n-                ShareUtils.shareFeedItemLink(context, selectedItem);\n-                break;\n-            case R.id.share_download_url_item:\n-                ShareUtils.shareFeedItemDownloadLink(context, selectedItem);\n-                break;\n-            case R.id.share_link_with_position_item:\n-                ShareUtils.shareFeedItemLink(context, selectedItem, true);\n-                break;\n-            case R.id.share_download_url_with_position_item:\n-                ShareUtils.shareFeedItemDownloadLink(context, selectedItem, true);\n-                break;\n-            case R.id.share_file:\n-                ShareUtils.shareFeedItemFile(context, selectedItem.getMedia());\n+            case R.id.share_item:\n+                new ShareDialog(context, selectedItem)\n+                        .show(((AppCompatActivity) context).getSupportFragmentManager(), \"ShareEpisodeDialog\");", "originalCommit": "5363b09f0067a61db5451b4c794c9a3ab919ece6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjY4NzYxNQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4260#discussion_r446687615", "bodyText": "thanks, I'm gonna update it. For the next commit", "author": "gerardolgvr", "createdAt": "2020-06-28T19:18:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ5ODA2NQ=="}], "type": "inlineReview"}, {"oid": "61df26aacdd053fb849fdfea4f8a00a035adf90b", "url": "https://github.com/AntennaPod/AntennaPod/commit/61df26aacdd053fb849fdfea4f8a00a035adf90b", "message": "updating ShareDialog according to code review", "committedDate": "2020-06-28T21:49:49Z", "type": "commit"}, {"oid": "5608336d0d2a334025fd290371d92f1d9889ed35", "url": "https://github.com/AntennaPod/AntennaPod/commit/5608336d0d2a334025fd290371d92f1d9889ed35", "message": "removing unused imports at ShareDialogTest", "committedDate": "2020-06-28T22:08:58Z", "type": "commit"}, {"oid": "a2dafc0aa589005cbfa9db47c8f253b802e28b38", "url": "https://github.com/AntennaPod/AntennaPod/commit/a2dafc0aa589005cbfa9db47c8f253b802e28b38", "message": "Adding submenu when Sharing a Podcast", "committedDate": "2020-06-28T22:22:27Z", "type": "commit"}, {"oid": "0cb17304e719789655ab252cc45b251561773214", "url": "https://github.com/AntennaPod/AntennaPod/commit/0cb17304e719789655ab252cc45b251561773214", "message": "updating strings xml for share dialog and share podcast", "committedDate": "2020-07-01T21:59:20Z", "type": "commit"}, {"oid": "0cb17304e719789655ab252cc45b251561773214", "url": "https://github.com/AntennaPod/AntennaPod/commit/0cb17304e719789655ab252cc45b251561773214", "message": "updating strings xml for share dialog and share podcast", "committedDate": "2020-07-01T21:59:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ3ODA4Ng==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4260#discussion_r450478086", "bodyText": "The comment is wrong :)", "author": "ByteHamster", "createdAt": "2020-07-06T21:01:58Z", "path": "app/src/androidTest/java/de/test/antennapod/dialogs/ShareDialogTest.java", "diffHunk": "@@ -0,0 +1,94 @@\n+package de.test.antennapod.dialogs;\n+\n+import android.content.Context;\n+import android.content.Intent;\n+import android.view.View;\n+\n+import org.hamcrest.Description;\n+import org.hamcrest.Matcher;\n+import org.hamcrest.Matchers;\n+import org.hamcrest.TypeSafeMatcher;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import java.util.List;\n+\n+import androidx.test.espresso.intent.rule.IntentsTestRule;\n+import androidx.test.platform.app.InstrumentationRegistry;\n+import androidx.test.runner.AndroidJUnit4;\n+import de.danoeh.antennapod.R;\n+import de.danoeh.antennapod.activity.MainActivity;\n+import de.danoeh.antennapod.core.feed.FeedItem;\n+import de.danoeh.antennapod.core.storage.DBReader;\n+import de.danoeh.antennapod.fragment.EpisodesFragment;\n+import de.test.antennapod.EspressoTestUtils;\n+import de.test.antennapod.ui.UITestUtils;\n+\n+import static androidx.test.espresso.Espresso.onView;\n+import static androidx.test.espresso.action.ViewActions.click;\n+import static androidx.test.espresso.action.ViewActions.scrollTo;\n+import static androidx.test.espresso.assertion.ViewAssertions.matches;\n+import static androidx.test.espresso.contrib.RecyclerViewActions.actionOnItemAtPosition;\n+import static androidx.test.espresso.matcher.ViewMatchers.hasMinimumChildCount;\n+import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;\n+import static androidx.test.espresso.matcher.ViewMatchers.isRoot;\n+import static androidx.test.espresso.matcher.ViewMatchers.withId;\n+import static androidx.test.espresso.matcher.ViewMatchers.withText;\n+import static de.test.antennapod.EspressoTestUtils.onDrawerItem;\n+import static de.test.antennapod.EspressoTestUtils.openNavDrawer;\n+import static de.test.antennapod.EspressoTestUtils.waitForView;\n+import static de.test.antennapod.NthMatcher.first;\n+import static org.hamcrest.CoreMatchers.allOf;\n+\n+/**\n+ * User interface tests for queue fragment.", "originalCommit": "0cb17304e719789655ab252cc45b251561773214", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU1ODQyNg==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4260#discussion_r452558426", "bodyText": "fixed :) , thanks for the observation", "author": "gerardolgvr", "createdAt": "2020-07-10T00:20:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ3ODA4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ3OTg4Ng==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4260#discussion_r450479886", "bodyText": "Instead of passing parameters, please use arguments (see https://stackoverflow.com/a/15459259/4193263). This prevents issues when the system recreates the fragment (after the app was in background, for example). We use the newInstance pattern in other parts of the app, too, so this would also be consistent.", "author": "ByteHamster", "createdAt": "2020-07-06T21:05:59Z", "path": "app/src/main/java/de/danoeh/antennapod/dialog/ShareDialog.java", "diffHunk": "@@ -0,0 +1,117 @@\n+package de.danoeh.antennapod.dialog;\n+\n+import android.app.Dialog;\n+import android.content.Context;\n+import android.content.DialogInterface;\n+import android.content.SharedPreferences;\n+import android.os.Bundle;\n+import android.preference.PreferenceManager;\n+import android.view.View;\n+import android.widget.RadioButton;\n+import android.widget.RadioGroup;\n+import android.widget.Switch;\n+import android.widget.Toast;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.appcompat.app.AlertDialog;\n+import androidx.fragment.app.DialogFragment;\n+import de.danoeh.antennapod.R;\n+import de.danoeh.antennapod.core.feed.FeedItem;\n+import de.danoeh.antennapod.core.preferences.UserPreferences;\n+import de.danoeh.antennapod.core.util.ShareUtils;\n+\n+public class ShareDialog extends DialogFragment {\n+\n+    private static final String TAG = \"ShareDialog\";\n+    private final Context ctx;\n+    private FeedItem item;\n+\n+    private static final String PREF_SHARE_EPISODE_WEBSITE = \"prefShareEpisodeWebsite\";\n+    private static final String PREF_SHARE_EPISODE_MEDIA = \"prefShareEpisodeMedia\";\n+    private static final String PREF_SHARE_EPISODE_START_AT = \"prefShareEpisodeStartAt\";\n+\n+    private RadioGroup radioGroup;\n+    private RadioButton radioEpisodeWebsite;\n+    private RadioButton radioMediaFile;\n+    private Switch switchStartAt;\n+    private SharedPreferences prefs;\n+\n+    public ShareDialog(Context ctx, FeedItem item) {", "originalCommit": "0cb17304e719789655ab252cc45b251561773214", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYyMDgxOQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4260#discussion_r452620819", "bodyText": "thanks, updated it.\nI didn't notice this. I was using SleepTimerDialog as example. I have updated it", "author": "gerardolgvr", "createdAt": "2020-07-10T04:51:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ3OTg4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ4MTU3MQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4260#discussion_r450481571", "bodyText": "Please use ShareDialog for the name. This is more consistent with the other preference files.", "author": "ByteHamster", "createdAt": "2020-07-06T21:09:51Z", "path": "app/src/main/java/de/danoeh/antennapod/dialog/ShareDialog.java", "diffHunk": "@@ -0,0 +1,117 @@\n+package de.danoeh.antennapod.dialog;\n+\n+import android.app.Dialog;\n+import android.content.Context;\n+import android.content.DialogInterface;\n+import android.content.SharedPreferences;\n+import android.os.Bundle;\n+import android.preference.PreferenceManager;\n+import android.view.View;\n+import android.widget.RadioButton;\n+import android.widget.RadioGroup;\n+import android.widget.Switch;\n+import android.widget.Toast;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.appcompat.app.AlertDialog;\n+import androidx.fragment.app.DialogFragment;\n+import de.danoeh.antennapod.R;\n+import de.danoeh.antennapod.core.feed.FeedItem;\n+import de.danoeh.antennapod.core.preferences.UserPreferences;\n+import de.danoeh.antennapod.core.util.ShareUtils;\n+\n+public class ShareDialog extends DialogFragment {\n+\n+    private static final String TAG = \"ShareDialog\";\n+    private final Context ctx;\n+    private FeedItem item;\n+\n+    private static final String PREF_SHARE_EPISODE_WEBSITE = \"prefShareEpisodeWebsite\";\n+    private static final String PREF_SHARE_EPISODE_MEDIA = \"prefShareEpisodeMedia\";\n+    private static final String PREF_SHARE_EPISODE_START_AT = \"prefShareEpisodeStartAt\";\n+\n+    private RadioGroup radioGroup;\n+    private RadioButton radioEpisodeWebsite;\n+    private RadioButton radioMediaFile;\n+    private Switch switchStartAt;\n+    private SharedPreferences prefs;\n+\n+    public ShareDialog(Context ctx, FeedItem item) {\n+        this.ctx = ctx;\n+        this.item = item;\n+        prefs = ctx.getSharedPreferences(\"SHARE_DIALOG_PREFS\", Context.MODE_PRIVATE);", "originalCommit": "0cb17304e719789655ab252cc45b251561773214", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYxMDAyMw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4260#discussion_r452610023", "bodyText": "added :)", "author": "gerardolgvr", "createdAt": "2020-07-10T04:00:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ4MTU3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ4MjcwOQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4260#discussion_r450482709", "bodyText": "Could you please remove the newline between builder and setPositiveButton and move the indentation of the listener to the left? I think checkstyle should be happy then, too, and it uses less horizontal space.", "author": "ByteHamster", "createdAt": "2020-07-06T21:12:23Z", "path": "app/src/main/java/de/danoeh/antennapod/dialog/ShareDialog.java", "diffHunk": "@@ -0,0 +1,117 @@\n+package de.danoeh.antennapod.dialog;\n+\n+import android.app.Dialog;\n+import android.content.Context;\n+import android.content.DialogInterface;\n+import android.content.SharedPreferences;\n+import android.os.Bundle;\n+import android.preference.PreferenceManager;\n+import android.view.View;\n+import android.widget.RadioButton;\n+import android.widget.RadioGroup;\n+import android.widget.Switch;\n+import android.widget.Toast;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.appcompat.app.AlertDialog;\n+import androidx.fragment.app.DialogFragment;\n+import de.danoeh.antennapod.R;\n+import de.danoeh.antennapod.core.feed.FeedItem;\n+import de.danoeh.antennapod.core.preferences.UserPreferences;\n+import de.danoeh.antennapod.core.util.ShareUtils;\n+\n+public class ShareDialog extends DialogFragment {\n+\n+    private static final String TAG = \"ShareDialog\";\n+    private final Context ctx;\n+    private FeedItem item;\n+\n+    private static final String PREF_SHARE_EPISODE_WEBSITE = \"prefShareEpisodeWebsite\";\n+    private static final String PREF_SHARE_EPISODE_MEDIA = \"prefShareEpisodeMedia\";\n+    private static final String PREF_SHARE_EPISODE_START_AT = \"prefShareEpisodeStartAt\";\n+\n+    private RadioGroup radioGroup;\n+    private RadioButton radioEpisodeWebsite;\n+    private RadioButton radioMediaFile;\n+    private Switch switchStartAt;\n+    private SharedPreferences prefs;\n+\n+    public ShareDialog(Context ctx, FeedItem item) {\n+        this.ctx = ctx;\n+        this.item = item;\n+        prefs = ctx.getSharedPreferences(\"SHARE_DIALOG_PREFS\", Context.MODE_PRIVATE);\n+    }\n+\n+    @NonNull\n+    @Override\n+    public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {\n+        View content = View.inflate(ctx, R.layout.share_episode_dialog, null);\n+        AlertDialog.Builder builder = new AlertDialog.Builder(ctx);\n+        builder.setTitle(R.string.share_label);\n+        builder.setView(content);\n+\n+        radioGroup = content.findViewById(R.id.share_dialog_radio_group);\n+        radioEpisodeWebsite = content.findViewById(R.id.share_episode_website_radio);\n+        radioMediaFile = content.findViewById(R.id.share_media_file_radio);\n+        switchStartAt = content.findViewById(R.id.share_start_at_timer_dialog);\n+\n+        setupOptions();\n+\n+        builder\n+                .setPositiveButton(R.string.share_label, new DialogInterface.OnClickListener() {", "originalCommit": "0cb17304e719789655ab252cc45b251561773214", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYyMjAxNg==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4260#discussion_r452622016", "bodyText": "yup, at the beginning I moved to a new line because I was worried about the length but I checked at the length of the line is 96, then I updated it . :)", "author": "gerardolgvr", "createdAt": "2020-07-10T04:57:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ4MjcwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ4MzIxMw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4260#discussion_r450483213", "bodyText": "Are those two preferences exclusive? If yes, it could be better to only store one preference.", "author": "ByteHamster", "createdAt": "2020-07-06T21:13:42Z", "path": "app/src/main/java/de/danoeh/antennapod/dialog/ShareDialog.java", "diffHunk": "@@ -0,0 +1,117 @@\n+package de.danoeh.antennapod.dialog;\n+\n+import android.app.Dialog;\n+import android.content.Context;\n+import android.content.DialogInterface;\n+import android.content.SharedPreferences;\n+import android.os.Bundle;\n+import android.preference.PreferenceManager;\n+import android.view.View;\n+import android.widget.RadioButton;\n+import android.widget.RadioGroup;\n+import android.widget.Switch;\n+import android.widget.Toast;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.appcompat.app.AlertDialog;\n+import androidx.fragment.app.DialogFragment;\n+import de.danoeh.antennapod.R;\n+import de.danoeh.antennapod.core.feed.FeedItem;\n+import de.danoeh.antennapod.core.preferences.UserPreferences;\n+import de.danoeh.antennapod.core.util.ShareUtils;\n+\n+public class ShareDialog extends DialogFragment {\n+\n+    private static final String TAG = \"ShareDialog\";\n+    private final Context ctx;\n+    private FeedItem item;\n+\n+    private static final String PREF_SHARE_EPISODE_WEBSITE = \"prefShareEpisodeWebsite\";\n+    private static final String PREF_SHARE_EPISODE_MEDIA = \"prefShareEpisodeMedia\";\n+    private static final String PREF_SHARE_EPISODE_START_AT = \"prefShareEpisodeStartAt\";\n+\n+    private RadioGroup radioGroup;\n+    private RadioButton radioEpisodeWebsite;\n+    private RadioButton radioMediaFile;\n+    private Switch switchStartAt;\n+    private SharedPreferences prefs;\n+\n+    public ShareDialog(Context ctx, FeedItem item) {\n+        this.ctx = ctx;\n+        this.item = item;\n+        prefs = ctx.getSharedPreferences(\"SHARE_DIALOG_PREFS\", Context.MODE_PRIVATE);\n+    }\n+\n+    @NonNull\n+    @Override\n+    public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {\n+        View content = View.inflate(ctx, R.layout.share_episode_dialog, null);\n+        AlertDialog.Builder builder = new AlertDialog.Builder(ctx);\n+        builder.setTitle(R.string.share_label);\n+        builder.setView(content);\n+\n+        radioGroup = content.findViewById(R.id.share_dialog_radio_group);\n+        radioEpisodeWebsite = content.findViewById(R.id.share_episode_website_radio);\n+        radioMediaFile = content.findViewById(R.id.share_media_file_radio);\n+        switchStartAt = content.findViewById(R.id.share_start_at_timer_dialog);\n+\n+        setupOptions();\n+\n+        builder\n+                .setPositiveButton(R.string.share_label, new DialogInterface.OnClickListener() {\n+                    @Override\n+                    public void onClick(DialogInterface dialog, int id) {\n+                        if (radioEpisodeWebsite.isChecked()) {\n+                            ShareUtils.shareFeedItemLink(ctx, item, switchStartAt.isChecked());\n+                            prefs.edit().putBoolean(PREF_SHARE_EPISODE_START_AT, switchStartAt.isChecked()).apply();\n+\n+                            prefs.edit().putBoolean(PREF_SHARE_EPISODE_WEBSITE, true).apply();\n+                            prefs.edit().putBoolean(PREF_SHARE_EPISODE_MEDIA, false).apply();\n+                        } else {\n+                            ShareUtils.shareFeedItemLink(ctx, item, switchStartAt.isChecked());\n+                            prefs.edit().putBoolean(PREF_SHARE_EPISODE_START_AT, switchStartAt.isChecked()).apply();\n+\n+                            prefs.edit().putBoolean(PREF_SHARE_EPISODE_WEBSITE, false).apply();\n+                            prefs.edit().putBoolean(PREF_SHARE_EPISODE_MEDIA, true).apply();", "originalCommit": "0cb17304e719789655ab252cc45b251561773214", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYzMzc0NQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4260#discussion_r452633745", "bodyText": "I decided to use a String instead of use 2 booleans, in this way I only have to check the value of the string and then activate or desactived the radio buttons :) . The code now is more clear and easy to understand. I'm gonna add the new commit", "author": "gerardolgvr", "createdAt": "2020-07-10T05:45:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ4MzIxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ4ODk3MQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4260#discussion_r450488971", "bodyText": "I think this shares the same link regardless of the checkbox now. Copy-paste error?\nswitchStartAt.isChecked() is called quite a few times. What about adding a variable boolean includePosition = switchStartAt.isChecked()?", "author": "ByteHamster", "createdAt": "2020-07-06T21:27:29Z", "path": "app/src/main/java/de/danoeh/antennapod/dialog/ShareDialog.java", "diffHunk": "@@ -0,0 +1,117 @@\n+package de.danoeh.antennapod.dialog;\n+\n+import android.app.Dialog;\n+import android.content.Context;\n+import android.content.DialogInterface;\n+import android.content.SharedPreferences;\n+import android.os.Bundle;\n+import android.preference.PreferenceManager;\n+import android.view.View;\n+import android.widget.RadioButton;\n+import android.widget.RadioGroup;\n+import android.widget.Switch;\n+import android.widget.Toast;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.appcompat.app.AlertDialog;\n+import androidx.fragment.app.DialogFragment;\n+import de.danoeh.antennapod.R;\n+import de.danoeh.antennapod.core.feed.FeedItem;\n+import de.danoeh.antennapod.core.preferences.UserPreferences;\n+import de.danoeh.antennapod.core.util.ShareUtils;\n+\n+public class ShareDialog extends DialogFragment {\n+\n+    private static final String TAG = \"ShareDialog\";\n+    private final Context ctx;\n+    private FeedItem item;\n+\n+    private static final String PREF_SHARE_EPISODE_WEBSITE = \"prefShareEpisodeWebsite\";\n+    private static final String PREF_SHARE_EPISODE_MEDIA = \"prefShareEpisodeMedia\";\n+    private static final String PREF_SHARE_EPISODE_START_AT = \"prefShareEpisodeStartAt\";\n+\n+    private RadioGroup radioGroup;\n+    private RadioButton radioEpisodeWebsite;\n+    private RadioButton radioMediaFile;\n+    private Switch switchStartAt;\n+    private SharedPreferences prefs;\n+\n+    public ShareDialog(Context ctx, FeedItem item) {\n+        this.ctx = ctx;\n+        this.item = item;\n+        prefs = ctx.getSharedPreferences(\"SHARE_DIALOG_PREFS\", Context.MODE_PRIVATE);\n+    }\n+\n+    @NonNull\n+    @Override\n+    public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {\n+        View content = View.inflate(ctx, R.layout.share_episode_dialog, null);\n+        AlertDialog.Builder builder = new AlertDialog.Builder(ctx);\n+        builder.setTitle(R.string.share_label);\n+        builder.setView(content);\n+\n+        radioGroup = content.findViewById(R.id.share_dialog_radio_group);\n+        radioEpisodeWebsite = content.findViewById(R.id.share_episode_website_radio);\n+        radioMediaFile = content.findViewById(R.id.share_media_file_radio);\n+        switchStartAt = content.findViewById(R.id.share_start_at_timer_dialog);\n+\n+        setupOptions();\n+\n+        builder\n+                .setPositiveButton(R.string.share_label, new DialogInterface.OnClickListener() {\n+                    @Override\n+                    public void onClick(DialogInterface dialog, int id) {\n+                        if (radioEpisodeWebsite.isChecked()) {\n+                            ShareUtils.shareFeedItemLink(ctx, item, switchStartAt.isChecked());", "originalCommit": "0cb17304e719789655ab252cc45b251561773214", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYyMjMyMA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4260#discussion_r452622320", "bodyText": "Sure! You're right. I have added it to the new commit. :)", "author": "gerardolgvr", "createdAt": "2020-07-10T04:58:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ4ODk3MQ=="}], "type": "inlineReview"}, {"oid": "3660f5255870e7056bacd35650eb530a15b05746", "url": "https://github.com/AntennaPod/AntennaPod/commit/3660f5255870e7056bacd35650eb530a15b05746", "message": "updated for share dialog and implementing new instance pattern", "committedDate": "2020-07-10T05:52:59Z", "type": "forcePushed"}, {"oid": "df19ca27410f35e65b51a7648ff64212499a2aca", "url": "https://github.com/AntennaPod/AntennaPod/commit/df19ca27410f35e65b51a7648ff64212499a2aca", "message": "updates for share dialog and implementing new instance pattern", "committedDate": "2020-07-10T05:57:18Z", "type": "commit"}, {"oid": "df19ca27410f35e65b51a7648ff64212499a2aca", "url": "https://github.com/AntennaPod/AntennaPod/commit/df19ca27410f35e65b51a7648ff64212499a2aca", "message": "updates for share dialog and implementing new instance pattern", "committedDate": "2020-07-10T05:57:18Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjY3MTY4OQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4260#discussion_r452671689", "bodyText": "Checkstyle complains here. If you just remove the line break between ) and ., it is happy :)", "author": "ByteHamster", "createdAt": "2020-07-10T07:29:33Z", "path": "app/src/main/java/de/danoeh/antennapod/dialog/ShareDialog.java", "diffHunk": "@@ -0,0 +1,121 @@\n+package de.danoeh.antennapod.dialog;\n+\n+import android.app.Dialog;\n+import android.content.Context;\n+import android.content.DialogInterface;\n+import android.content.SharedPreferences;\n+import android.os.Bundle;\n+import android.view.View;\n+import android.widget.CheckBox;\n+import android.widget.RadioButton;\n+import android.widget.RadioGroup;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.appcompat.app.AlertDialog;\n+import androidx.fragment.app.DialogFragment;\n+import de.danoeh.antennapod.R;\n+import de.danoeh.antennapod.core.feed.FeedItem;\n+import de.danoeh.antennapod.core.util.ShareUtils;\n+\n+public class ShareDialog extends DialogFragment {\n+\n+    private static final String ARGUMENT_FEED_ITEM = \"feedItem\";\n+\n+    private static final String TAG = \"ShareDialog\";\n+    private Context ctx;\n+    private FeedItem item;\n+\n+    private static final String PREF_SHARE_DIALOG_OPTION = \"prefShareDialogOption\";\n+    private static final String PREF_SHARE_EPISODE_START_AT = \"prefShareEpisodeStartAt\";\n+\n+    private RadioGroup radioGroup;\n+    private RadioButton radioEpisodeWebsite;\n+    private RadioButton radioMediaFile;\n+    private CheckBox checkBoxStartAt;\n+    private SharedPreferences prefs;\n+\n+    public ShareDialog() {\n+        // Empty constructor required for DialogFragment\n+    }\n+\n+    public static ShareDialog newInstance(FeedItem item) {\n+        Bundle arguments = new Bundle();\n+        arguments.putSerializable(ARGUMENT_FEED_ITEM, item);\n+        ShareDialog dialog = new ShareDialog();\n+        dialog.setArguments(arguments);\n+        return dialog;\n+    }\n+\n+    @NonNull\n+    @Override\n+    public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {\n+        if (getArguments() != null) {\n+            ctx = getActivity();\n+            item = (FeedItem) getArguments().getSerializable(ARGUMENT_FEED_ITEM);\n+            prefs = getActivity().getSharedPreferences(\"ShareDialog\", Context.MODE_PRIVATE);\n+        }\n+\n+        View content = View.inflate(ctx, R.layout.share_episode_dialog, null);\n+        AlertDialog.Builder builder = new AlertDialog.Builder(ctx);\n+        builder.setTitle(R.string.share_label);\n+        builder.setView(content);\n+\n+        radioGroup = content.findViewById(R.id.share_dialog_radio_group);\n+        radioEpisodeWebsite = content.findViewById(R.id.share_episode_website_radio);\n+        radioMediaFile = content.findViewById(R.id.share_media_file_radio);\n+        checkBoxStartAt = content.findViewById(R.id.share_start_at_timer_dialog);\n+\n+        setupOptions();\n+\n+        builder.setPositiveButton(R.string.share_label, new DialogInterface.OnClickListener() {\n+            @Override\n+            public void onClick(DialogInterface dialog, int id) {\n+                boolean includePlaybackPosition = checkBoxStartAt.isChecked();\n+                if (radioEpisodeWebsite.isChecked()) {\n+                    ShareUtils.shareFeedItemLink(ctx, item, includePlaybackPosition);\n+                    prefs.edit().putString(PREF_SHARE_DIALOG_OPTION, \"website\").apply();\n+                } else {\n+                    ShareUtils.shareFeedItemDownloadLink(ctx, item, includePlaybackPosition);\n+                    prefs.edit().putString(PREF_SHARE_DIALOG_OPTION, \"media\").apply();\n+                }\n+                prefs.edit().putBoolean(PREF_SHARE_EPISODE_START_AT, includePlaybackPosition).apply();\n+            }\n+        })\n+        .setNegativeButton(R.string.cancel_label, new DialogInterface.OnClickListener() {", "originalCommit": "df19ca27410f35e65b51a7648ff64212499a2aca", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk1NTM3Mg==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4260#discussion_r452955372", "bodyText": "fixed :)", "author": "gerardolgvr", "createdAt": "2020-07-10T16:43:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjY3MTY4OQ=="}], "type": "inlineReview"}, {"oid": "9d2c2d8f370af84922f8197e252ee4474d0c3acb", "url": "https://github.com/AntennaPod/AntennaPod/commit/9d2c2d8f370af84922f8197e252ee4474d0c3acb", "message": "adjustments for string share... at menus", "committedDate": "2020-07-10T16:42:03Z", "type": "commit"}]}