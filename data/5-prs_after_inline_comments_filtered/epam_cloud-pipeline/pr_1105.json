{"pr_number": 1105, "pr_title": "Issue #1036 Sensitive storage data transfer", "pr_createdAt": "2020-05-13T14:16:36Z", "pr_url": "https://github.com/epam/cloud-pipeline/pull/1105", "timeline": [{"oid": "78491c2ca4f3ea1e7e6ca9b41f2bdc5aa75544a2", "url": "https://github.com/epam/cloud-pipeline/commit/78491c2ca4f3ea1e7e6ca9b41f2bdc5aa75544a2", "message": "Issue #1036 Add `sensitive` attribute to AbstractDataStorage", "committedDate": "2020-05-13T12:16:17Z", "type": "commit"}, {"oid": "5e45cdcf32a3f0057aebc0b7e77e123b7be2d9e1", "url": "https://github.com/epam/cloud-pipeline/commit/5e45cdcf32a3f0057aebc0b7e77e123b7be2d9e1", "message": "Issue #1036 Restrict download and urlGeneration methods on content from `sensitive` buckets", "committedDate": "2020-05-13T14:00:18Z", "type": "commit"}, {"oid": "b0cb69372caaa3589abaa96a78bb751ab17958ce", "url": "https://github.com/epam/cloud-pipeline/commit/b0cb69372caaa3589abaa96a78bb751ab17958ce", "message": "Issue #1036 Update DataStorageDao to proceed `sensitive` attribute", "committedDate": "2020-05-13T16:19:12Z", "type": "commit"}, {"oid": "d1e7a35d4d31d4e266c92036f0aada7e0fe4e30a", "url": "https://github.com/epam/cloud-pipeline/commit/d1e7a35d4d31d4e266c92036f0aada7e0fe4e30a", "message": "Issue #1036 Introduce SensitiveStorageOperation annotation, implement aspect to proceed it", "committedDate": "2020-05-13T18:46:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE5MzI4Mg==", "url": "https://github.com/epam/cloud-pipeline/pull/1105#discussion_r425193282", "bodyText": "It would be great to return 403 code for such errors, please add a new exception class and it's handling in ExceptionHandlerAdvice class", "author": "mzueva", "createdAt": "2020-05-14T14:44:41Z", "path": "api/src/main/java/com/epam/pipeline/manager/datastorage/leakagepolicy/DataLeakagePolicyAspect.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright 2017-2020 EPAM Systems, Inc. (https://www.epam.com/)\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.epam.pipeline.manager.datastorage.leakagepolicy;\n+\n+import com.epam.pipeline.common.MessageConstants;\n+import com.epam.pipeline.common.MessageHelper;\n+import com.epam.pipeline.entity.datastorage.AbstractDataStorage;\n+import lombok.RequiredArgsConstructor;\n+import org.aspectj.lang.ProceedingJoinPoint;\n+import org.aspectj.lang.annotation.Around;\n+import org.aspectj.lang.annotation.Aspect;\n+import org.springframework.stereotype.Component;\n+\n+import java.util.stream.Stream;\n+\n+/**\n+ * This aspect controls 'data-leakage' policy\n+ */\n+@Aspect\n+@Component\n+@RequiredArgsConstructor\n+public class DataLeakagePolicyAspect {\n+\n+    private final MessageHelper messageHelper;\n+\n+    @Around(\"execution(@com.epam.pipeline.manager.datastorage.leakagepolicy.SensitiveStorageOperation * *(..))\")\n+    public void proceedSensitiveStorageOperation(final ProceedingJoinPoint joinPoint) throws Throwable {\n+        Stream.of(joinPoint.getArgs())\n+            .filter(AbstractDataStorage.class::isInstance)\n+            .map(AbstractDataStorage.class::cast)\n+            .forEach(this::assertStorageIsNotSensitive);\n+        joinPoint.proceed();\n+    }\n+\n+    public void assertStorageIsNotSensitive(final AbstractDataStorage storage) {\n+        if (storage.isSensitive()) {\n+            throw new IllegalArgumentException(messageHelper", "originalCommit": "d1e7a35d4d31d4e266c92036f0aada7e0fe4e30a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTIxNjk2Mw==", "url": "https://github.com/epam/cloud-pipeline/pull/1105#discussion_r425216963", "bodyText": "Done", "author": "Wedds", "createdAt": "2020-05-14T15:15:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE5MzI4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE5NjQ3Ng==", "url": "https://github.com/epam/cloud-pipeline/pull/1105#discussion_r425196476", "bodyText": "Move this file to aspect folder", "author": "mzueva", "createdAt": "2020-05-14T14:48:52Z", "path": "api/src/main/java/com/epam/pipeline/manager/datastorage/leakagepolicy/DataLeakagePolicyAspect.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*", "originalCommit": "d1e7a35d4d31d4e266c92036f0aada7e0fe4e30a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTIxNzAwMg==", "url": "https://github.com/epam/cloud-pipeline/pull/1105#discussion_r425217002", "bodyText": "Done", "author": "Wedds", "createdAt": "2020-05-14T15:15:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE5NjQ3Ng=="}], "type": "inlineReview"}, {"oid": "fcc15fabbc74f1c8d17e6bb2b8ba69da9eab539b", "url": "https://github.com/epam/cloud-pipeline/commit/fcc15fabbc74f1c8d17e6bb2b8ba69da9eab539b", "message": "Issue #1036 Move aspect to `aspect` package", "committedDate": "2020-05-14T14:54:56Z", "type": "commit"}, {"oid": "051eb1d649f3d0280803f1d50a5ecd8c5ba03e48", "url": "https://github.com/epam/cloud-pipeline/commit/051eb1d649f3d0280803f1d50a5ecd8c5ba03e48", "message": "Issue #1036 Return `403 Forbidden` code for requests violating `data-leak` policies", "committedDate": "2020-05-14T15:03:23Z", "type": "commit"}]}