{"pr_number": 344, "pr_title": "Add Tenant class and its create and update request classes.", "pr_createdAt": "2020-01-09T15:50:06Z", "pr_url": "https://github.com/firebase/firebase-admin-java/pull/344", "timeline": [{"oid": "893cd81282583e0842eb600988086fd3bc431906", "url": "https://github.com/firebase/firebase-admin-java/commit/893cd81282583e0842eb600988086fd3bc431906", "message": "Add Tenant class and AutoValue dependency.", "committedDate": "2020-01-09T15:28:17Z", "type": "commit"}, {"oid": "a3668e5f3fdad9eeff38943e4a2e1589f7958251", "url": "https://github.com/firebase/firebase-admin-java/commit/a3668e5f3fdad9eeff38943e4a2e1589f7958251", "message": "Fix javadoc comments in Tenant class and add newline char to end of file.", "committedDate": "2020-01-09T15:35:25Z", "type": "commit"}, {"oid": "1044c78c2b126b01f885b61f2b39f8ee3220e934", "url": "https://github.com/firebase/firebase-admin-java/commit/1044c78c2b126b01f885b61f2b39f8ee3220e934", "message": "Fixing some failing RTDB tests", "committedDate": "2020-01-09T15:38:14Z", "type": "commit"}, {"oid": "70c840e222466d129b2e4ce6103370f3e557c4f0", "url": "https://github.com/firebase/firebase-admin-java/commit/70c840e222466d129b2e4ce6103370f3e557c4f0", "message": "Using explicit options", "committedDate": "2020-01-09T15:41:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk1MDA0OQ==", "url": "https://github.com/firebase/firebase-admin-java/pull/344#discussion_r364950049", "bodyText": "I think we should make newBuilder() package-private. We don't expect clients to be able to use this builder directly, right?\nLooks like I already had made the Builder class package private, but it's methods are public, which should be changed as well.", "author": "micahstairs", "createdAt": "2020-01-09T20:41:18Z", "path": "src/main/java/com/google/firebase/auth/Tenant.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2019 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.firebase.auth;\n+\n+import com.google.auto.value.AutoValue;\n+\n+/**\n+ * Contains metadata associated with a Firebase tenant.\n+ * \n+ * <p>Instances of this class are immutable and thread safe.\n+ */\n+@AutoValue\n+public abstract class Tenant {\n+\n+  /**\n+   * Returns the ID of this tenant.\n+   *\n+   * @return a non-empty tenant ID string.\n+   */\n+  public abstract String getTenantId();\n+\n+  /**\n+   * Returns the display name of this tenant.\n+   *\n+   * @return a non-empty display name string.\n+   */\n+  public abstract String getDisplayName();\n+\n+  /**\n+   * Returns whether to allow email/password user authentication.\n+   *\n+   * @return true if a user can be authenticated using an email and password, and false otherwise.\n+   */\n+  public abstract boolean isPasswordSignUpAllowed();\n+\n+  /**\n+   * Returns whether to enable email link user authentication.\n+   *\n+   * @return true if a user can be authenticated using an email link, and false otherwise.\n+   */\n+  public abstract boolean isEmailLinkSignInEnabled();\n+\n+  /**\n+   * Returns a tenant builder.\n+   */\n+  public static Builder newBuilder() {", "originalCommit": "70c840e222466d129b2e4ce6103370f3e557c4f0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM4Nzg0MQ==", "url": "https://github.com/firebase/firebase-admin-java/pull/344#discussion_r365387841", "bodyText": "Actually, do we ever need to build an instance of Tenant? It looks like they always get constructed from the JSON responses sent by the Auth backend service, in which case we can just rely on the JSON deserialization support we have.", "author": "hiranya911", "createdAt": "2020-01-10T19:11:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk1MDA0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ1NDkzMA==", "url": "https://github.com/firebase/firebase-admin-java/pull/344#discussion_r366454930", "bodyText": "Are you suggesting that this class should look more like com.google.firebase.auth.UserRecord? And construct it with some sort of response and a JsonFactory? I'm not sure why this would mean we can't make it an AutoValue.\nAnd I still think the inner CreateRequest and UpdateRequest classes will also make sense as AutoValues.\nI don't think I have a good understanding of the API/JSON interaction yet. What is the best way to play around with the REST API and test sending various requests and getting reponses?", "author": "micahstairs", "createdAt": "2020-01-14T16:53:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk1MDA0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU0NTg1NA==", "url": "https://github.com/firebase/firebase-admin-java/pull/344#discussion_r366545854", "bodyText": "We use Google API client to marshal/unmarshal JSON to Java types. If you have a Tenant class defined as follows:\nclass Tenant {\n  @Key(\"tenantId\")\n  private String tenantId;\n  \n  @Key(\"displayName\")\n  private String displayName;\n}\n\n...then you can construct an instance of it from JSON as follows:\nTenant tenant = jsonFactory.createJsonParser(jsonString).parse(Tenant.class);\n\nSo AutoValue doesn't add anything to this flow as far as I can see. Create and Update classes are essentially builders, and I can see the value in using AutoValue for them.", "author": "hiranya911", "createdAt": "2020-01-14T20:03:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk1MDA0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE5NDU0MQ==", "url": "https://github.com/firebase/firebase-admin-java/pull/344#discussion_r370194541", "bodyText": "Alright, I've made the suggested changes.\nI got the JSON key names from the Go API (https://github.com/firebase/firebase-admin-go/blob/e088f55036154f0cccf661992f854abd8fb1333f/auth/tenant_mgt.go).", "author": "micahstairs", "createdAt": "2020-01-23T15:41:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk1MDA0OQ=="}], "type": "inlineReview"}, {"oid": "53667ea61fe3f6d43faf5534c63e59a6e3f07a45", "url": "https://github.com/firebase/firebase-admin-java/commit/53667ea61fe3f6d43faf5534c63e59a6e3f07a45", "message": "Fix indenting in pom.xml.", "committedDate": "2020-01-14T16:31:02Z", "type": "commit"}, {"oid": "78faaaa6cb0294f034930668645b027184e67fae", "url": "https://github.com/firebase/firebase-admin-java/commit/78faaaa6cb0294f034930668645b027184e67fae", "message": "Rename isPasswordSignUpAllowed to isPasswordSignInAllowed.", "committedDate": "2020-01-21T15:25:50Z", "type": "commit"}, {"oid": "2cc8dc540a51a3982035161c598eb20480af3d3b", "url": "https://github.com/firebase/firebase-admin-java/commit/2cc8dc540a51a3982035161c598eb20480af3d3b", "message": "Use JSON deserialization to construct Tenant and add CreateRequest and UpdateRequest autovalue classes.", "committedDate": "2020-01-23T15:26:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMwMTQzNg==", "url": "https://github.com/firebase/firebase-admin-java/pull/344#discussion_r370301436", "bodyText": "final", "author": "hiranya911", "createdAt": "2020-01-23T19:07:40Z", "path": "src/main/java/com/google/firebase/auth/Tenant.java", "diffHunk": "@@ -0,0 +1,138 @@\n+/*\n+ * Copyright 2019 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.firebase.auth;\n+\n+import com.google.api.client.util.Key;\n+import com.google.auto.value.AutoValue;\n+\n+/**\n+ * Contains metadata associated with a Firebase tenant.\n+ *\n+ * <p>Instances of this class are immutable and thread safe.\n+ */\n+public class Tenant {", "originalCommit": "2cc8dc540a51a3982035161c598eb20480af3d3b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "fcf1b717950f8bd447b1503a09d87a7511f4c5b5", "url": "https://github.com/firebase/firebase-admin-java/commit/fcf1b717950f8bd447b1503a09d87a7511f4c5b5", "message": "Make Tenant class final.", "committedDate": "2020-01-23T19:21:26Z", "type": "commit"}, {"oid": "40258ab0fd242c8815ad2c41c46540e822be2f36", "url": "https://github.com/firebase/firebase-admin-java/commit/40258ab0fd242c8815ad2c41c46540e822be2f36", "message": "Fix Tenant's final modifier.", "committedDate": "2020-01-23T19:30:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMxNzgzNA==", "url": "https://github.com/firebase/firebase-admin-java/pull/344#discussion_r370317834", "bodyText": "Should this now be 2020? Technically the file was created in 2019 :)", "author": "lahirumaramba", "createdAt": "2020-01-23T19:42:21Z", "path": "src/main/java/com/google/firebase/auth/Tenant.java", "diffHunk": "@@ -0,0 +1,138 @@\n+/*\n+ * Copyright 2019 Google LLC", "originalCommit": "40258ab0fd242c8815ad2c41c46540e822be2f36", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMyNzI0MA==", "url": "https://github.com/firebase/firebase-admin-java/pull/344#discussion_r370327240", "bodyText": "Done.", "author": "micahstairs", "createdAt": "2020-01-23T20:02:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMxNzgzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMxOTU5MQ==", "url": "https://github.com/firebase/firebase-admin-java/pull/344#discussion_r370319591", "bodyText": "<p> typo? or missing </p>?", "author": "lahirumaramba", "createdAt": "2020-01-23T19:46:07Z", "path": "src/main/java/com/google/firebase/auth/Tenant.java", "diffHunk": "@@ -0,0 +1,138 @@\n+/*\n+ * Copyright 2019 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.firebase.auth;\n+\n+import com.google.api.client.util.Key;\n+import com.google.auto.value.AutoValue;\n+\n+/**\n+ * Contains metadata associated with a Firebase tenant.\n+ *\n+ * <p>Instances of this class are immutable and thread safe.", "originalCommit": "40258ab0fd242c8815ad2c41c46540e822be2f36", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMyNTE2NQ==", "url": "https://github.com/firebase/firebase-admin-java/pull/344#discussion_r370325165", "bodyText": "Please ignore this. Just realized how it works in javadoc :)", "author": "lahirumaramba", "createdAt": "2020-01-23T19:58:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMxOTU5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMyNjg1MA==", "url": "https://github.com/firebase/firebase-admin-java/pull/344#discussion_r370326850", "bodyText": "This was intentional and adheres to standard Javadoc formatting.\nThe closing tag is unnecessary for certain tag types (e.g. , ): https://stackoverflow.com/questions/33787753/javadoc-closing-tags.", "author": "micahstairs", "createdAt": "2020-01-23T20:02:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMxOTU5MQ=="}], "type": "inlineReview"}, {"oid": "94a7a14745d5bf3b17a5daa0547cd6fc60e9fed2", "url": "https://github.com/firebase/firebase-admin-java/commit/94a7a14745d5bf3b17a5daa0547cd6fc60e9fed2", "message": "Update copyright notice to 2020.", "committedDate": "2020-01-23T20:02:24Z", "type": "commit"}, {"oid": "fd229c134bf71c25b7a7be3486a9c66d4d28eee6", "url": "https://github.com/firebase/firebase-admin-java/commit/fd229c134bf71c25b7a7be3486a9c66d4d28eee6", "message": "Fix merge conflicts with FirebaseDatabaseTest.", "committedDate": "2020-01-30T16:52:00Z", "type": "commit"}, {"oid": "ef994d8c58944d7268247552222a5f8f35bd1805", "url": "https://github.com/firebase/firebase-admin-java/commit/ef994d8c58944d7268247552222a5f8f35bd1805", "message": "Merge branch 'tenant-mgt' into micahstairs-autovalue-tenant", "committedDate": "2020-01-30T16:59:45Z", "type": "commit"}]}