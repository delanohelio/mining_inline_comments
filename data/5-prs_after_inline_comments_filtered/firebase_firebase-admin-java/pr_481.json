{"pr_number": 481, "pr_title": "Remote Config Refactor Public and Response types", "pr_createdAt": "2020-10-02T20:52:31Z", "pr_url": "https://github.com/firebase/firebase-admin-java/pull/481", "timeline": [{"oid": "7439447e564667369a51921afea618c8b28875d7", "url": "https://github.com/firebase/firebase-admin-java/commit/7439447e564667369a51921afea618c8b28875d7", "message": "Refactor Public and Response types", "committedDate": "2020-10-02T20:58:45Z", "type": "forcePushed"}, {"oid": "daceb34df2150620a3d9d375d4d5d8815e05c9b3", "url": "https://github.com/firebase/firebase-admin-java/commit/daceb34df2150620a3d9d375d4d5d8815e05c9b3", "message": "Refactor Public and Response types", "committedDate": "2020-10-02T21:00:12Z", "type": "commit"}, {"oid": "daceb34df2150620a3d9d375d4d5d8815e05c9b3", "url": "https://github.com/firebase/firebase-admin-java/commit/daceb34df2150620a3d9d375d4d5d8815e05c9b3", "message": "Refactor Public and Response types", "committedDate": "2020-10-02T21:00:12Z", "type": "forcePushed"}, {"oid": "a67f23bf58c8b3865995eec8a235d294baebf1e5", "url": "https://github.com/firebase/firebase-admin-java/commit/a67f23bf58c8b3865995eec8a235d294baebf1e5", "message": "reformat code", "committedDate": "2020-10-02T21:04:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA2NzQyMQ==", "url": "https://github.com/firebase/firebase-admin-java/pull/481#discussion_r499067421", "bodyText": "No access modifier to make it package-protected", "author": "hiranya911", "createdAt": "2020-10-02T21:59:08Z", "path": "src/main/java/com/google/firebase/remoteconfig/RemoteConfigTemplate.java", "diffHunk": "@@ -39,6 +39,17 @@ public RemoteConfigTemplate() {\n     parameters = new HashMap<>();\n   }\n \n+  protected RemoteConfigTemplate(@NonNull TemplateResponse templateResponse) {", "originalCommit": "a67f23bf58c8b3865995eec8a235d294baebf1e5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA2NzYzMA==", "url": "https://github.com/firebase/firebase-admin-java/pull/481#discussion_r499067630", "bodyText": "No access modifier", "author": "hiranya911", "createdAt": "2020-10-02T21:59:52Z", "path": "src/main/java/com/google/firebase/remoteconfig/RemoteConfigParameter.java", "diffHunk": "@@ -45,6 +44,21 @@ public RemoteConfigParameter() {\n     conditionalValues = new HashMap<>();\n   }\n \n+  protected RemoteConfigParameter(@NonNull ParameterResponse parameterResponse) {", "originalCommit": "a67f23bf58c8b3865995eec8a235d294baebf1e5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA2ODE0NQ==", "url": "https://github.com/firebase/firebase-admin-java/pull/481#discussion_r499068145", "bodyText": "I think this ought to be in the ParameterValue class. ParameterValue.fromParameterValueResponse() makes sense.", "author": "hiranya911", "createdAt": "2020-10-02T22:01:37Z", "path": "src/main/java/com/google/firebase/remoteconfig/RemoteConfigParameter.java", "diffHunk": "@@ -122,9 +136,21 @@ ParameterResponse toParameterResponse() {\n     for (Map.Entry<String, RemoteConfigParameterValue> entry : conditionalValues.entrySet()) {\n       conditionalResponseValues.put(entry.getKey(), entry.getValue().toParameterValueResponse());\n     }\n-    ParameterValueResponse parameterValueResponse = (defaultValue == null) ? null : defaultValue\n-            .toParameterValueResponse();\n-    return new ParameterResponse(parameterValueResponse, description,\n-            conditionalResponseValues);\n+    ParameterValueResponse defaultValueResponse = (defaultValue == null) ? null\n+            : defaultValue.toParameterValueResponse();\n+    return new ParameterResponse()\n+            .setDefaultValue(defaultValueResponse)\n+            .setDescription(description)\n+            .setConditionalValues(conditionalResponseValues);\n+  }\n+\n+  private RemoteConfigParameterValue fromParameterValueResponse(", "originalCommit": "a67f23bf58c8b3865995eec8a235d294baebf1e5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA2OTQyMA==", "url": "https://github.com/firebase/firebase-admin-java/pull/481#discussion_r499069420", "bodyText": "Use this. to indicate local members. Particularly useful in constructor implementations.", "author": "hiranya911", "createdAt": "2020-10-02T22:06:17Z", "path": "src/main/java/com/google/firebase/remoteconfig/RemoteConfigParameter.java", "diffHunk": "@@ -45,6 +44,21 @@ public RemoteConfigParameter() {\n     conditionalValues = new HashMap<>();\n   }\n \n+  protected RemoteConfigParameter(@NonNull ParameterResponse parameterResponse) {\n+    checkNotNull(parameterResponse);\n+    conditionalValues = new HashMap<>();\n+    if (parameterResponse.getConditionalValues() != null) {\n+      for (Map.Entry<String, ParameterValueResponse> entry\n+              : parameterResponse.getConditionalValues().entrySet()) {\n+        conditionalValues.put(entry.getKey(), fromParameterValueResponse(entry.getValue()));\n+      }\n+    }\n+    ParameterValueResponse responseDefaultValue = parameterResponse.getDefaultValue();\n+    defaultValue = (responseDefaultValue == null) ? null", "originalCommit": "a67f23bf58c8b3865995eec8a235d294baebf1e5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA3MDQ2NQ==", "url": "https://github.com/firebase/firebase-admin-java/pull/481#discussion_r499070465", "bodyText": "Remove redundant null assignments.", "author": "hiranya911", "createdAt": "2020-10-02T22:09:56Z", "path": "src/main/java/com/google/firebase/remoteconfig/RemoteConfigParameterValue.java", "diffHunk": "@@ -67,7 +67,9 @@ public String getValue() {\n \n     @Override\n     ParameterValueResponse toParameterValueResponse() {\n-      return ParameterValueResponse.ofValue(this.value);\n+      return new ParameterValueResponse()\n+              .setValue(this.value)\n+              .setInAppDefaultValue(null);", "originalCommit": "a67f23bf58c8b3865995eec8a235d294baebf1e5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA3MTM4Ng==", "url": "https://github.com/firebase/firebase-admin-java/pull/481#discussion_r499071386", "bodyText": "is***() methods should never return null. Instead change this to one of the following:\npublic Boolean getUseInAppDefault() {\n  return this.useInAppDefault;\n}\n\npublic boolean isUseInAppDefault() {\n  return Boolean.TRUE.equals(this.useInAppDefault);\n}", "author": "hiranya911", "createdAt": "2020-10-02T22:13:23Z", "path": "src/main/java/com/google/firebase/remoteconfig/internal/TemplateResponse.java", "diffHunk": "@@ -110,27 +96,22 @@ public RemoteConfigParameter toRemoteConfigParameter() {\n     @Key(\"useInAppDefault\")\n     private Boolean inAppDefaultValue;\n \n-    public ParameterValueResponse() {\n-    }\n-\n-    private ParameterValueResponse(String value, Boolean inAppDefaultValue) {\n-      this.value = value;\n-      this.inAppDefaultValue = inAppDefaultValue;\n+    public String getValue() {\n+      return value;\n     }\n \n-    public static ParameterValueResponse ofValue(String value) {\n-      return new ParameterValueResponse(value, null);\n+    public Boolean isInAppDefaultValue() {", "originalCommit": "a67f23bf58c8b3865995eec8a235d294baebf1e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTgyOTE2MQ==", "url": "https://github.com/firebase/firebase-admin-java/pull/481#discussion_r499829161", "bodyText": "Ah good point! Thanks!", "author": "lahirumaramba", "createdAt": "2020-10-05T19:41:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA3MTM4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA3MTQ0OQ==", "url": "https://github.com/firebase/firebase-admin-java/pull/481#discussion_r499071449", "bodyText": "useInAppDefault", "author": "hiranya911", "createdAt": "2020-10-02T22:13:36Z", "path": "src/main/java/com/google/firebase/remoteconfig/internal/TemplateResponse.java", "diffHunk": "@@ -110,27 +96,22 @@ public RemoteConfigParameter toRemoteConfigParameter() {\n     @Key(\"useInAppDefault\")\n     private Boolean inAppDefaultValue;", "originalCommit": "a67f23bf58c8b3865995eec8a235d294baebf1e5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA3MTYzNA==", "url": "https://github.com/firebase/firebase-admin-java/pull/481#discussion_r499071634", "bodyText": "Implement a setter that matches the getter you choose to implement.", "author": "hiranya911", "createdAt": "2020-10-02T22:14:16Z", "path": "src/main/java/com/google/firebase/remoteconfig/internal/TemplateResponse.java", "diffHunk": "@@ -110,27 +96,22 @@ public RemoteConfigParameter toRemoteConfigParameter() {\n     @Key(\"useInAppDefault\")\n     private Boolean inAppDefaultValue;\n \n-    public ParameterValueResponse() {\n-    }\n-\n-    private ParameterValueResponse(String value, Boolean inAppDefaultValue) {\n-      this.value = value;\n-      this.inAppDefaultValue = inAppDefaultValue;\n+    public String getValue() {\n+      return value;\n     }\n \n-    public static ParameterValueResponse ofValue(String value) {\n-      return new ParameterValueResponse(value, null);\n+    public Boolean isInAppDefaultValue() {\n+      return inAppDefaultValue;\n     }\n \n-    public static ParameterValueResponse ofInAppDefaultValue() {\n-      return new ParameterValueResponse(null, true);\n+    public ParameterValueResponse setValue(String value) {\n+      this.value = value;\n+      return this;\n     }\n \n-    public RemoteConfigParameterValue toRemoteConfigParameterValue() {\n-      if (this.inAppDefaultValue != null && this.inAppDefaultValue) {\n-        return RemoteConfigParameterValue.inAppDefault();\n-      }\n-      return RemoteConfigParameterValue.of(this.value);\n+    public ParameterValueResponse setInAppDefaultValue(Boolean inAppDefaultValue) {", "originalCommit": "a67f23bf58c8b3865995eec8a235d294baebf1e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTgzNDIxMA==", "url": "https://github.com/firebase/firebase-admin-java/pull/481#discussion_r499834210", "bodyText": "Should the getter take a boolean?", "author": "lahirumaramba", "createdAt": "2020-10-05T19:51:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA3MTYzNA=="}], "type": "inlineReview"}, {"oid": "8a781d3b5e69daaa83fa9cb78c1faee963e09b67", "url": "https://github.com/firebase/firebase-admin-java/commit/8a781d3b5e69daaa83fa9cb78c1faee963e09b67", "message": "Clean up code style", "committedDate": "2020-10-05T19:51:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkxNDUyOA==", "url": "https://github.com/firebase/firebase-admin-java/pull/481#discussion_r499914528", "bodyText": "Is this used anywhere? If not lets remove it. And also change the setter to accept boolean so it matches the getter.", "author": "hiranya911", "createdAt": "2020-10-05T22:52:33Z", "path": "src/main/java/com/google/firebase/remoteconfig/internal/TemplateResponse.java", "diffHunk": "@@ -108,29 +94,28 @@ public RemoteConfigParameter toRemoteConfigParameter() {\n     private String value;\n \n     @Key(\"useInAppDefault\")\n-    private Boolean inAppDefaultValue;\n+    private Boolean useInAppDefault;\n \n-    public ParameterValueResponse() {\n+    public String getValue() {\n+      return value;\n     }\n \n-    private ParameterValueResponse(String value, Boolean inAppDefaultValue) {\n-      this.value = value;\n-      this.inAppDefaultValue = inAppDefaultValue;\n+    public Boolean getUseInAppDefault() {", "originalCommit": "8a781d3b5e69daaa83fa9cb78c1faee963e09b67", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM3MTcwMA==", "url": "https://github.com/firebase/firebase-admin-java/pull/481#discussion_r500371700", "bodyText": "Good call. Updated!", "author": "lahirumaramba", "createdAt": "2020-10-06T15:08:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkxNDUyOA=="}], "type": "inlineReview"}, {"oid": "ce499f4880aa7e93ce3aaff0b7f536eb8e70c562", "url": "https://github.com/firebase/firebase-admin-java/commit/ce499f4880aa7e93ce3aaff0b7f536eb8e70c562", "message": "Remove getUseInAppDefault and use the value type in setter", "committedDate": "2020-10-06T15:10:19Z", "type": "commit"}]}