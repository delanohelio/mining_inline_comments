{"pr_number": 251, "pr_title": "unit test for sprintbootutil added", "pr_createdAt": "2020-06-18T13:48:54Z", "pr_url": "https://github.com/eclipse/jkube/pull/251", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjI1MTIwNA==", "url": "https://github.com/eclipse/jkube/pull/251#discussion_r442251204", "bodyText": "Please add license headers with mvn -N license:format", "author": "rohanKanojia", "createdAt": "2020-06-18T14:03:51Z", "path": "jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/SpringBootUtilTest.java", "diffHunk": "@@ -0,0 +1,114 @@\n+package org.eclipse.jkube.kit.common.util;", "originalCommit": "e1a5d4b891d6a7330fed56daff0bd59330a69172", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjI1MjUxMw==", "url": "https://github.com/eclipse/jkube/pull/251#discussion_r442252513", "bodyText": "I think it would be better if you use builders provided by Lombok", "author": "rohanKanojia", "createdAt": "2020-06-18T14:05:30Z", "path": "jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/SpringBootUtilTest.java", "diffHunk": "@@ -0,0 +1,114 @@\n+package org.eclipse.jkube.kit.common.util;\n+\n+import mockit.Expectations;\n+import mockit.Mocked;\n+import org.apache.commons.io.FileUtils;\n+import org.eclipse.jkube.kit.common.Dependency;\n+import org.eclipse.jkube.kit.common.JavaProject;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.net.URLClassLoader;\n+import java.util.Arrays;\n+import java.util.Optional;\n+import java.util.Properties;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n+public class SpringBootUtilTest {\n+    @Rule\n+    public TemporaryFolder temporaryFolder = new TemporaryFolder();\n+\n+    @Test\n+    public void testGetSpringBootApplicationProperties() throws IOException {\n+\n+        //Given\n+        File applicationProp =  new File(getClass().getResource(\"/application.properties\").getPath());\n+        String springActiveProfile = null;\n+        File targetFolder = temporaryFolder.newFolder(\"target\");\n+        File classesInTarget = new File(targetFolder, \"classes\");\n+        boolean isTargetClassesCreated = classesInTarget.mkdirs();\n+        File applicationPropertiesInsideTarget = new File(classesInTarget, \"application.properties\");\n+        FileUtils.copyFile(applicationProp, applicationPropertiesInsideTarget);\n+        URLClassLoader urlClassLoader = ClassUtil.createClassLoader(Arrays.asList(classesInTarget.getAbsolutePath(), applicationProp.getAbsolutePath()), classesInTarget.getAbsolutePath());\n+\n+        //When\n+        Properties result =  SpringBootUtil.getSpringBootApplicationProperties(springActiveProfile ,urlClassLoader);\n+\n+        //Then\n+        assertTrue(isTargetClassesCreated);\n+        assertEquals(\"demoservice\" ,result.getProperty(\"spring.application.name\"));\n+        assertEquals(\"9090\" ,result.getProperty(\"server.port\"));\n+    }\n+\n+    @Test\n+    public void testGetSpringBootDevToolsVersion(@Mocked JavaProject maven_project) {\n+\n+        //Given\n+        Dependency p = new Dependency();\n+        p.setGroupId(\"org.springframework.boot\");\n+        p.setVersion(\"1.6.3\");\n+        new Expectations() {{\n+            maven_project.getDependencies();\n+            result=p;\n+        }};\n+\n+        //when\n+        Optional<String> result = SpringBootUtil.getSpringBootDevToolsVersion(maven_project);\n+\n+        //Then\n+        assertEquals(\"1.6.3\",result.get());\n+\n+    }\n+\n+\n+    @Test\n+    public void testGetSpringBootVersion(@Mocked JavaProject maven_project) {\n+\n+        //Given\n+        Dependency p = new Dependency();", "originalCommit": "e1a5d4b891d6a7330fed56daff0bd59330a69172", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0c70de02c6603c8dc0c287d21f0b209dc04b427b", "url": "https://github.com/eclipse/jkube/commit/0c70de02c6603c8dc0c287d21f0b209dc04b427b", "message": "Unit test added for SpringBootUtil\n\nSigned-off-by: anandrkskd <anandrkskd@gmail.com>", "committedDate": "2020-06-22T05:14:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzMzOTcwMQ==", "url": "https://github.com/eclipse/jkube/pull/251#discussion_r443339701", "bodyText": "I don't understand how this can be working, getDependencies() method returns a List, your mock returns an instance of Dependency.", "author": "manusa", "createdAt": "2020-06-22T06:24:49Z", "path": "jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/SpringBootUtilTest.java", "diffHunk": "@@ -0,0 +1,125 @@\n+/**\n+ * Copyright (c) 2019 Red Hat, Inc.\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at:\n+ *\n+ *     https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *   Red Hat, Inc. - initial API and implementation\n+ */\n+package org.eclipse.jkube.kit.common.util;\n+\n+import mockit.Expectations;\n+import mockit.Mocked;\n+import org.apache.commons.io.FileUtils;\n+import org.eclipse.jkube.kit.common.Dependency;\n+import org.eclipse.jkube.kit.common.JavaProject;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.net.URLClassLoader;\n+import java.util.Arrays;\n+import java.util.Optional;\n+import java.util.Properties;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n+public class SpringBootUtilTest {\n+    @Rule\n+    public TemporaryFolder temporaryFolder = new TemporaryFolder();\n+\n+    @Test\n+    public void testGetSpringBootApplicationProperties() throws IOException {\n+\n+        //Given\n+        File applicationProp =  new File(getClass().getResource(\"/util/spring-boot-application.properties\").getPath());\n+        String springActiveProfile = null;\n+        File targetFolder = temporaryFolder.newFolder(\"target\");\n+        File classesInTarget = new File(targetFolder, \"classes\");\n+        boolean isTargetClassesCreated = classesInTarget.mkdirs();\n+        File applicationPropertiesInsideTarget = new File(classesInTarget, \"application.properties\");\n+        FileUtils.copyFile(applicationProp, applicationPropertiesInsideTarget);\n+        URLClassLoader urlClassLoader = ClassUtil.createClassLoader(Arrays.asList(classesInTarget.getAbsolutePath(), applicationProp.getAbsolutePath()), classesInTarget.getAbsolutePath());\n+\n+        //When\n+        Properties result =  SpringBootUtil.getSpringBootApplicationProperties(springActiveProfile ,urlClassLoader);\n+\n+        //Then\n+        assertTrue(isTargetClassesCreated);\n+        assertEquals(\"demoservice\" ,result.getProperty(\"spring.application.name\"));\n+        assertEquals(\"9090\" ,result.getProperty(\"server.port\"));\n+    }\n+\n+    @Test\n+    public void testGetSpringBootDevToolsVersion(@Mocked JavaProject maven_project) {\n+\n+        //Given\n+        Dependency p = new Dependency();\n+        p.setGroupId(\"org.springframework.boot\");\n+        p.setVersion(\"1.6.3\");\n+        new Expectations() {{\n+            maven_project.getDependencies();\n+            result=p;", "originalCommit": "0c70de02c6603c8dc0c287d21f0b209dc04b427b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "33402add3515d1f5e61ec3cc6e6f56be10ff0f75", "url": "https://github.com/eclipse/jkube/commit/33402add3515d1f5e61ec3cc6e6f56be10ff0f75", "message": "Unit test added for SpringBootUtil\n\nSigned-off-by: anandrkskd <anandrkskd@gmail.com>", "committedDate": "2020-06-22T07:18:24Z", "type": "forcePushed"}, {"oid": "78ce1e4ea3d2ce52ba54107973ee0eb290e44a1d", "url": "https://github.com/eclipse/jkube/commit/78ce1e4ea3d2ce52ba54107973ee0eb290e44a1d", "message": "Unit test added for SpringBootUtil\n\nSigned-off-by: anandrkskd <anandrkskd@gmail.com>", "committedDate": "2020-06-22T18:28:13Z", "type": "forcePushed"}, {"oid": "ac14ab3933c8e79a45eb9ca9446f57f94ecabfd4", "url": "https://github.com/eclipse/jkube/commit/ac14ab3933c8e79a45eb9ca9446f57f94ecabfd4", "message": "UT added for springbootutil\n\nSigned-off-by: anandrkskd <anandrkskd@gmail.com>", "committedDate": "2020-06-23T05:38:49Z", "type": "commit"}, {"oid": "ac14ab3933c8e79a45eb9ca9446f57f94ecabfd4", "url": "https://github.com/eclipse/jkube/commit/ac14ab3933c8e79a45eb9ca9446f57f94ecabfd4", "message": "UT added for springbootutil\n\nSigned-off-by: anandrkskd <anandrkskd@gmail.com>", "committedDate": "2020-06-23T05:38:49Z", "type": "forcePushed"}]}