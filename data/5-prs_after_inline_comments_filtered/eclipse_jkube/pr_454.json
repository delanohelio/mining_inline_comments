{"pr_number": 454, "pr_title": "Fix #146: ApplyMojo should use ApplyService in JKubeServiceHub", "pr_createdAt": "2020-10-29T13:20:39Z", "pr_url": "https://github.com/eclipse/jkube/pull/454", "timeline": [{"oid": "8543c817ba402303d43981536cc7f68b84f1e1de", "url": "https://github.com/eclipse/jkube/commit/8543c817ba402303d43981536cc7f68b84f1e1de", "message": "Fix #146: ApplyMojo should use ApplyService in JKubeServiceHub", "committedDate": "2020-10-29T15:51:59Z", "type": "forcePushed"}, {"oid": "bd749e7d80c16d808d7c77827f0e8b9ec2f471aa", "url": "https://github.com/eclipse/jkube/commit/bd749e7d80c16d808d7c77827f0e8b9ec2f471aa", "message": "Fix #146: ApplyMojo should use ApplyService in JKubeServiceHub", "committedDate": "2020-10-29T17:46:39Z", "type": "forcePushed"}, {"oid": "922671c064002ae589c5b699b14502e89120d3d2", "url": "https://github.com/eclipse/jkube/commit/922671c064002ae589c5b699b14502e89120d3d2", "message": "Fix #146: ApplyMojo should use ApplyService in JKubeServiceHub", "committedDate": "2020-10-30T06:12:07Z", "type": "forcePushed"}, {"oid": "2b45ed2b1cdb1828fe2c51a0c95f5c1767933b73", "url": "https://github.com/eclipse/jkube/commit/2b45ed2b1cdb1828fe2c51a0c95f5c1767933b73", "message": "Fix #146: ApplyMojo should use ApplyService in JKubeServiceHub", "committedDate": "2020-11-02T13:28:32Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDMwMTU2NA==", "url": "https://github.com/eclipse/jkube/pull/454#discussion_r524301564", "bodyText": "Why would this be exposed?", "author": "manusa", "createdAt": "2020-11-16T14:20:46Z", "path": "jkube-kit/config/service/src/main/java/org/eclipse/jkube/kit/config/service/ApplyService.java", "diffHunk": "@@ -307,6 +311,10 @@ public OpenShiftClient getOpenShiftClient() {\n         return OpenshiftHelper.asOpenShiftClient(kubernetesClient);\n     }\n \n+    public KubernetesClient getKubernetesClient() {\n+        return kubernetesClient;\n+    }", "originalCommit": "2b45ed2b1cdb1828fe2c51a0c95f5c1767933b73", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDMwMjIwMg==", "url": "https://github.com/eclipse/jkube/pull/454#discussion_r524302202", "bodyText": "This has no sense.\nYou have a private static method where you provide an instance of the containing class? Just remove the static modifier then.", "author": "manusa", "createdAt": "2020-11-16T14:21:40Z", "path": "jkube-kit/config/service/src/main/java/org/eclipse/jkube/kit/config/service/ApplyService.java", "diffHunk": "@@ -1390,4 +1398,55 @@ public void processCustomEntities(List<String> customResourceDefinitions, File r\n             }\n         }\n     }\n+\n+    public static void applyNamespaceOrProjectIfPresent(ApplyService applyService, Collection<HasMetadata> entities) {\n+        List<HasMetadata> projectOrNamespaceList = entities.stream()\n+                .filter(e -> e instanceof Namespace || e instanceof Project)\n+                .collect(Collectors.toList());\n+\n+        for (HasMetadata projectOrNamespace : projectOrNamespaceList) {\n+            if (projectOrNamespace instanceof Namespace) {\n+                Namespace ns = (Namespace) projectOrNamespace;\n+                applyService.applyNamespace(ns);\n+            } else if (projectOrNamespace instanceof Project) {\n+                Project project = (Project) projectOrNamespace;\n+                applyService.applyProject(project);\n+            }\n+        }\n+    }\n+\n+    public static void applyEntities(ApplyService applyService, String fileName, Set<HasMetadata> entities, KitLogger serviceLogger,\n+                                 long serviceUrlWaitTimeSeconds, ResourceConfig resources, File resourceDir,\n+                                 String environment) throws Exception {\n+        // Apply all items\n+        applyStandardEntities(applyService, fileName, entities);\n+        logExposeServiceUrl(applyService, entities, serviceLogger, serviceUrlWaitTimeSeconds);\n+        applyService.processCustomEntities(resources != null ? resources.getCustomResourceDefinitions() : null,\n+                resourceDir, environment, resources != null ? resources.getRemotes() : null);\n+    }\n+\n+    private static void logExposeServiceUrl(ApplyService applyService, Set<HasMetadata> entities, KitLogger serviceLogger, long serviceUrlWaitTimeSeconds) throws InterruptedException {", "originalCommit": "2b45ed2b1cdb1828fe2c51a0c95f5c1767933b73", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDMwMzQyMA==", "url": "https://github.com/eclipse/jkube/pull/454#discussion_r524303420", "bodyText": "Take this comment and apply it here https://github.com/eclipse/jkube/pull/454/files#r524302202\nIf you pass an instance of the enclosing class, then it really makes no sense to make this method static", "author": "manusa", "createdAt": "2020-11-16T14:23:22Z", "path": "jkube-kit/config/service/src/main/java/org/eclipse/jkube/kit/config/service/ApplyService.java", "diffHunk": "@@ -1390,4 +1398,55 @@ public void processCustomEntities(List<String> customResourceDefinitions, File r\n             }\n         }\n     }\n+\n+    public static void applyNamespaceOrProjectIfPresent(ApplyService applyService, Collection<HasMetadata> entities) {\n+        List<HasMetadata> projectOrNamespaceList = entities.stream()\n+                .filter(e -> e instanceof Namespace || e instanceof Project)\n+                .collect(Collectors.toList());\n+\n+        for (HasMetadata projectOrNamespace : projectOrNamespaceList) {\n+            if (projectOrNamespace instanceof Namespace) {\n+                Namespace ns = (Namespace) projectOrNamespace;\n+                applyService.applyNamespace(ns);\n+            } else if (projectOrNamespace instanceof Project) {\n+                Project project = (Project) projectOrNamespace;\n+                applyService.applyProject(project);\n+            }\n+        }\n+    }\n+\n+    public static void applyEntities(ApplyService applyService, String fileName, Set<HasMetadata> entities, KitLogger serviceLogger,", "originalCommit": "2b45ed2b1cdb1828fe2c51a0c95f5c1767933b73", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "58779130c8b0c2c2767f0b7f11705881830351d9", "url": "https://github.com/eclipse/jkube/commit/58779130c8b0c2c2767f0b7f11705881830351d9", "message": "Fix #146: ApplyMojo should use ApplyService in JKubeServiceHub", "committedDate": "2020-11-16T17:09:53Z", "type": "forcePushed"}, {"oid": "8dd2f6402f50606051a7f3db6e7666a9a1260857", "url": "https://github.com/eclipse/jkube/commit/8dd2f6402f50606051a7f3db6e7666a9a1260857", "message": "Fix #146: ApplyMojo should use ApplyService in JKubeServiceHub", "committedDate": "2020-11-16T19:03:02Z", "type": "forcePushed"}, {"oid": "b52e92851cb890b68f0829bfc891241aa2af37fb", "url": "https://github.com/eclipse/jkube/commit/b52e92851cb890b68f0829bfc891241aa2af37fb", "message": "Fix #146: ApplyMojo should use ApplyService in JKubeServiceHub", "committedDate": "2020-11-16T19:11:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTA3OTQzNg==", "url": "https://github.com/eclipse/jkube/pull/454#discussion_r525079436", "bodyText": "Same as the others. Static method which accepts an instance of the enclosing class.\n\n\nRemove static modifier and ApplyService instance parameter", "author": "manusa", "createdAt": "2020-11-17T11:22:29Z", "path": "jkube-kit/config/service/src/main/java/org/eclipse/jkube/kit/config/service/ApplyService.java", "diffHunk": "@@ -1390,4 +1394,55 @@ public void processCustomEntities(List<String> customResourceDefinitions, File r\n             }\n         }\n     }\n+\n+    public static void applyNamespaceOrProjectIfPresent(ApplyService applyService, Collection<HasMetadata> entities) {", "originalCommit": "b52e92851cb890b68f0829bfc891241aa2af37fb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "07b6a8f70788a2f5ffc1b4fe6bbf709bf94a8c0f", "url": "https://github.com/eclipse/jkube/commit/07b6a8f70788a2f5ffc1b4fe6bbf709bf94a8c0f", "message": "Fix #146: ApplyMojo should use ApplyService in JKubeServiceHub", "committedDate": "2020-11-17T13:24:34Z", "type": "forcePushed"}, {"oid": "894d273f84ae028edb894f9a4bff6bb3d2cd8e9f", "url": "https://github.com/eclipse/jkube/commit/894d273f84ae028edb894f9a4bff6bb3d2cd8e9f", "message": "Fix #146: ApplyMojo should use ApplyService in JKubeServiceHub", "committedDate": "2020-12-01T07:33:51Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTE2OTU3MA==", "url": "https://github.com/eclipse/jkube/pull/454#discussion_r535169570", "bodyText": "why not do a forEach here.\nYou are generating a list of HasMetadata, and then re-iterating over that list.", "author": "manusa", "createdAt": "2020-12-03T12:06:42Z", "path": "jkube-kit/config/service/src/main/java/org/eclipse/jkube/kit/config/service/ApplyService.java", "diffHunk": "@@ -1390,4 +1394,55 @@ public void processCustomEntities(List<String> customResourceDefinitions, File r\n             }\n         }\n     }\n+\n+    public void applyNamespaceOrProjectIfPresent(Collection<HasMetadata> entities) {\n+        List<HasMetadata> projectOrNamespaceList = entities.stream()\n+                .filter(e -> e instanceof Namespace || e instanceof Project)\n+                .collect(Collectors.toList());\n+\n+        for (HasMetadata projectOrNamespace : projectOrNamespaceList) {", "originalCommit": "894d273f84ae028edb894f9a4bff6bb3d2cd8e9f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTE3OTY4OA==", "url": "https://github.com/eclipse/jkube/pull/454#discussion_r535179688", "bodyText": "This is weird and unclear.\nCould you explain what's going on?\nWe retrieve the namespace, but the namespace is only set/configured later on in the method.\nIn addition, the invocation in line 188 (applyService.applyNamespaceOrProjectIfPresent) suggests we are already doing something here, but we only configure the namespace later on.\nThere's also a call configureApplyService in line 181. It feels that the namespace part should be really configured there.\nMy understanding is that if the namespace is configured later, is because it has something to do with the processing and it affects the end result.\nIf this is the case setNamespace should be completely removed and shifted to an argument of any method that performs processing.", "author": "manusa", "createdAt": "2020-12-03T12:16:40Z", "path": "kubernetes-maven-plugin/plugin/src/main/java/org/eclipse/jkube/maven/plugin/mojo/build/ApplyMojo.java", "diffHunk": "@@ -186,55 +178,18 @@ public void executeInternal() throws MojoExecutionException {\n             KubernetesResourceUtil.validateKubernetesMasterUrl(masterUrl);\n             log.info(\"Using %s at %s in namespace %s with manifest %s \", clusterKind, masterUrl, clusterAccess.getNamespace(), manifest);\n \n-            applyService.setAllowCreate(createNewResources);\n-            applyService.setServicesOnlyMode(servicesOnly);\n-            applyService.setIgnoreServiceMode(ignoreServices);\n-            applyService.setLogJsonDir(jsonLogDir);\n-            applyService.setBasedir(getRootProjectFolder());\n-            applyService.setIgnoreRunningOAuthClients(ignoreRunningOAuthClients);\n-            applyService.setProcessTemplatesLocally(processTemplatesLocally);\n-            applyService.setDeletePodsOnReplicationControllerUpdate(deletePodsOnReplicationControllerUpdate);\n-            applyService.setRollingUpgrade(rollingUpgrades);\n-            applyService.setRollingUpgradePreserveScale(isRollingUpgradePreserveScale());\n-            applyService.setRecreateMode(recreate);\n-\n-            boolean openShift = OpenshiftHelper.isOpenShift(kubernetes);\n-            if (openShift) {\n-                log.info(\"[[B]]OpenShift[[B]] platform detected\");\n-            } else {\n-                disableOpenShiftFeatures(applyService);\n-            }\n+            configureApplyService(kubernetes);\n \n             Set<HasMetadata> entities = KubernetesResourceUtil.loadResources(manifest);\n-\n+            // Configure Namespace: Check if new namespace needs to be created and create if\n+            // it's provided in manifests first. Then use that namespace for applying rest of\n+            // the manifests\n             String namespace = clusterAccess.getNamespace();\n-            boolean namespaceEntityExist = false;\n-\n-            for (HasMetadata entity: entities) {\n-                if (entity instanceof Namespace) {\n-                    Namespace ns = (Namespace)entity;\n-                    namespace = ns.getMetadata().getName();\n-                    applyService.applyNamespace((ns));\n-                    namespaceEntityExist = true;\n-                    entities.remove(entity);\n-                    break;\n-                }\n-                if (entity instanceof Project) {\n-                    Project project = (Project)entity;\n-                    namespace = project.getMetadata().getName();\n-                    applyService.applyProject(project);\n-                    namespaceEntityExist = true;\n-                    entities.remove(entity);\n-                    break;\n-                }\n-            }\n-\n-            if (!namespaceEntityExist) {\n-                applyService.applyNamespace(namespace);\n-            }\n-\n+            applyService.applyNamespaceOrProjectIfPresent(entities);", "originalCommit": "894d273f84ae028edb894f9a4bff6bb3d2cd8e9f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTE5NTQ5Mw==", "url": "https://github.com/eclipse/jkube/pull/454#discussion_r535195493", "bodyText": "I think this code handles the case when there is a Namespace present in entities. I think It handles the case when you want your resources to be created in a new namespace which would be created by jkube during apply phase. Namespace gets created first, then resources are applied in that particular namespace.\nokay, let me shift setNamespace to configureApplyService", "author": "rohanKanojia", "createdAt": "2020-12-03T12:41:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTE3OTY4OA=="}], "type": "inlineReview"}, {"oid": "e473b3a90497ebf1ff32d487466289052edda1c3", "url": "https://github.com/eclipse/jkube/commit/e473b3a90497ebf1ff32d487466289052edda1c3", "message": "Fix #146: ApplyMojo should use ApplyService in JKubeServiceHub", "committedDate": "2020-12-03T14:12:01Z", "type": "forcePushed"}, {"oid": "9a2c48a8edc995705d7bb63cd994e38547483871", "url": "https://github.com/eclipse/jkube/commit/9a2c48a8edc995705d7bb63cd994e38547483871", "message": "Fix #146: ApplyMojo should use ApplyService in JKubeServiceHub", "committedDate": "2020-12-03T14:33:44Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI4NTE1OA==", "url": "https://github.com/eclipse/jkube/pull/454#discussion_r535285158", "bodyText": "Sorry, but I'm still unsure why this method is not part of applyService#applyEntities logic.\nWhy do we have to call it separately?\nIs it something that applies specifically to Maven projects, or is this something we want for the Kit API?", "author": "manusa", "createdAt": "2020-12-03T14:40:33Z", "path": "kubernetes-maven-plugin/plugin/src/main/java/org/eclipse/jkube/maven/plugin/mojo/build/ApplyMojo.java", "diffHunk": "@@ -184,58 +176,15 @@ public void executeInternal() throws MojoExecutionException {\n                 clusterKind = \"OpenShift\";\n             }\n             KubernetesResourceUtil.validateKubernetesMasterUrl(masterUrl);\n-            log.info(\"Using %s at %s in namespace %s with manifest %s \", clusterKind, masterUrl, clusterAccess.getNamespace(), manifest);\n-\n-            applyService.setAllowCreate(createNewResources);\n-            applyService.setServicesOnlyMode(servicesOnly);\n-            applyService.setIgnoreServiceMode(ignoreServices);\n-            applyService.setLogJsonDir(jsonLogDir);\n-            applyService.setBasedir(getRootProjectFolder());\n-            applyService.setIgnoreRunningOAuthClients(ignoreRunningOAuthClients);\n-            applyService.setProcessTemplatesLocally(processTemplatesLocally);\n-            applyService.setDeletePodsOnReplicationControllerUpdate(deletePodsOnReplicationControllerUpdate);\n-            applyService.setRollingUpgrade(rollingUpgrades);\n-            applyService.setRollingUpgradePreserveScale(isRollingUpgradePreserveScale());\n-            applyService.setRecreateMode(recreate);\n-\n-            boolean openShift = OpenshiftHelper.isOpenShift(kubernetes);\n-            if (openShift) {\n-                log.info(\"[[B]]OpenShift[[B]] platform detected\");\n-            } else {\n-                disableOpenShiftFeatures(applyService);\n-            }\n-\n             Set<HasMetadata> entities = KubernetesResourceUtil.loadResources(manifest);\n+            log.info(\"Using %s at %s in namespace %s with manifest %s \", clusterKind, masterUrl, clusterAccess.getNamespace(), manifest);\n \n-            String namespace = clusterAccess.getNamespace();\n-            boolean namespaceEntityExist = false;\n-\n-            for (HasMetadata entity: entities) {\n-                if (entity instanceof Namespace) {\n-                    Namespace ns = (Namespace)entity;\n-                    namespace = ns.getMetadata().getName();\n-                    applyService.applyNamespace((ns));\n-                    namespaceEntityExist = true;\n-                    entities.remove(entity);\n-                    break;\n-                }\n-                if (entity instanceof Project) {\n-                    Project project = (Project)entity;\n-                    namespace = project.getMetadata().getName();\n-                    applyService.applyProject(project);\n-                    namespaceEntityExist = true;\n-                    entities.remove(entity);\n-                    break;\n-                }\n-            }\n-\n-            if (!namespaceEntityExist) {\n-                applyService.applyNamespace(namespace);\n-            }\n+            configureApplyService(kubernetes, entities);\n \n-            applyService.setNamespace(namespace);\n+            applyService.applyNamespaceOrProjectIfPresent(entities);", "originalCommit": "9a2c48a8edc995705d7bb63cd994e38547483871", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI4ODE5MQ==", "url": "https://github.com/eclipse/jkube/pull/454#discussion_r535288191", "bodyText": "It was added here to ensure that any Namespace/Project is applied before any resource. It was there in the Mojo already; I just moved logic to a method. I think you're right. It should be called from applyEntities() method.", "author": "rohanKanojia", "createdAt": "2020-12-03T14:43:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI4NTE1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI4OTYzNA==", "url": "https://github.com/eclipse/jkube/pull/454#discussion_r535289634", "bodyText": "Anyway, whatever it was supposed to do seems broken. I've created #511 for Namespace fragment creation issues. We might need to modify DefaultNamespaceEnricher a bit.", "author": "rohanKanojia", "createdAt": "2020-12-03T14:44:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI4NTE1OA=="}], "type": "inlineReview"}, {"oid": "3d66dd14f46d4878b1baccb7f89f598a93bb468c", "url": "https://github.com/eclipse/jkube/commit/3d66dd14f46d4878b1baccb7f89f598a93bb468c", "message": "Move applyNamespaceOrProjectIfPresent to ApplyService", "committedDate": "2020-12-04T13:17:27Z", "type": "forcePushed"}, {"oid": "4597143888d7df3ed86111229436b12391d7625c", "url": "https://github.com/eclipse/jkube/commit/4597143888d7df3ed86111229436b12391d7625c", "message": "Move applyNamespaceOrProjectIfPresent to ApplyService", "committedDate": "2020-12-08T07:56:42Z", "type": "forcePushed"}, {"oid": "f0cfa9d8652f2d4b67a4ec1b8a3bb9bd9771c94e", "url": "https://github.com/eclipse/jkube/commit/f0cfa9d8652f2d4b67a4ec1b8a3bb9bd9771c94e", "message": "Move applyNamespaceOrProjectIfPresent to ApplyService", "committedDate": "2020-12-23T19:05:23Z", "type": "forcePushed"}, {"oid": "b947e5db3608e04a59ce0784a72245acda1f4cda", "url": "https://github.com/eclipse/jkube/commit/b947e5db3608e04a59ce0784a72245acda1f4cda", "message": "Fix #146: ApplyMojo should use ApplyService in JKubeServiceHub", "committedDate": "2021-01-11T07:38:59Z", "type": "commit"}, {"oid": "2b9cb15a1f64dcbbe36942347188f3b4ba202f90", "url": "https://github.com/eclipse/jkube/commit/2b9cb15a1f64dcbbe36942347188f3b4ba202f90", "message": "Move applyNamespaceOrProjectIfPresent to ApplyService", "committedDate": "2021-01-11T07:39:00Z", "type": "commit"}, {"oid": "2b9cb15a1f64dcbbe36942347188f3b4ba202f90", "url": "https://github.com/eclipse/jkube/commit/2b9cb15a1f64dcbbe36942347188f3b4ba202f90", "message": "Move applyNamespaceOrProjectIfPresent to ApplyService", "committedDate": "2021-01-11T07:39:00Z", "type": "forcePushed"}]}