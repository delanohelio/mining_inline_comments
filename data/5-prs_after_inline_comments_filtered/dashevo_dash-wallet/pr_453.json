{"pr_number": 453, "pr_title": "NMA-506 Uphold Error Handling - Funds Availability", "pr_createdAt": "2020-07-02T19:33:46Z", "pr_url": "https://github.com/dashevo/dash-wallet/pull/453", "timeline": [{"oid": "8d2161baa3d8e226e4fd601bfa5ba207701a8903", "url": "https://github.com/dashevo/dash-wallet/commit/8d2161baa3d8e226e4fd601bfa5ba207701a8903", "message": "Custom handling of most common API errors", "committedDate": "2020-07-02T19:33:04Z", "type": "commit"}, {"oid": "6096074977f2b2fab517efcef204236e8748c202", "url": "https://github.com/dashevo/dash-wallet/commit/6096074977f2b2fab517efcef204236e8748c202", "message": "Final improvements of custom handling of most common Uphold API errors", "committedDate": "2020-07-03T08:52:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU3MDQwMw==", "url": "https://github.com/dashevo/dash-wallet/pull/453#discussion_r449570403", "bodyText": "It would be great if the time was formatted into a locale specific local time.", "author": "HashEngineering", "createdAt": "2020-07-03T12:57:39Z", "path": "uphold-integration/src/main/java/org/dash/wallet/integration/uphold/data/UpholdApiException.java", "diffHunk": "@@ -0,0 +1,179 @@\n+package org.dash.wallet.integration.uphold.data;\n+\n+\n+import android.content.Context;\n+\n+import org.dash.wallet.integration.uphold.R;\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+\n+import retrofit2.Response;\n+\n+public class UpholdApiException extends Exception {\n+\n+    public static final String IDENTITY_ERROR_KEY = \"identity\";\n+    public static final String TOKEN_ERROR_KEY = \"token\";\n+    public static final String LOCKED_FUNDS_KEY = \"sufficient_unlocked_funds\";\n+    public static final String AVAILABLE_AT_KEY = \"availableAt\";\n+\n+    private int httpStatusCode;\n+\n+    //{\n+    //    \"code\":\"sufficient_unlocked_funds\",\n+    //    \"message\":\"You will have sufficient funds by 2020-04-17T22:42:00.151Z\"\n+    //    \"args\":{\n+    //        \"availableAt\":\"2020-04-17T22:42:00.151Z\",\n+    //        \"missing\":\"1.03430005\",\n+    //        \"currency\":\"DASH\"\n+    //    },\n+    //}\n+    private JSONObject errorBody;\n+\n+    public UpholdApiException(Response response) {\n+        this.httpStatusCode = response.code();\n+        if (response.errorBody() != null) {\n+            try {\n+                errorBody = new JSONObject(response.errorBody().string());\n+            } catch (Exception e) {\n+                errorBody = null;\n+            }\n+        }\n+    }\n+\n+    public UpholdApiException(int httpStatusCode) {\n+        this.httpStatusCode = httpStatusCode;\n+    }\n+\n+    public String getErrorCode() {\n+        if (errorBody != null) {\n+            try {\n+                return errorBody.getString(\"code\");\n+            } catch (JSONException e) {\n+                // swallow\n+            }\n+        }\n+        return null;\n+    }\n+\n+    public JSONObject getErrors() {\n+        if (errorBody != null) {\n+            try {\n+                return errorBody.getJSONObject(\"errors\");\n+            } catch (JSONException e) {\n+                // swallow\n+            }\n+        }\n+        return null;\n+    }\n+\n+    private JSONObject getError(String errorKey) {\n+        JSONObject errors = getErrors();\n+        if (errors != null) {\n+            try {\n+                return errors.getJSONObject(errorKey);\n+            } catch (JSONException e) {\n+                // swallow\n+            }\n+        }\n+        return null;\n+    }\n+\n+    private String getErrorField(String errorKey, String errorField) {\n+        JSONObject error = getError(errorKey);\n+        if (error != null) {\n+            try {\n+                return error.getString(errorField);\n+            } catch (JSONException e) {\n+                // swallow\n+            }\n+        }\n+        return null;\n+    }\n+\n+    public String getErrorCode(String errorKey) {\n+        return getErrorField(errorKey, \"code\");\n+    }\n+\n+    public String getErrorMessage(String errorKey) {\n+        return getErrorField(errorKey, \"message\");\n+    }\n+\n+    public boolean hasError(String errorField) {\n+        JSONObject errors = getErrors();\n+        return (errors != null) && errors.has(errorField);\n+    }\n+\n+    public boolean isTokenError() {\n+        JSONObject errors = getErrors();\n+        return (errors != null) && errors.has(TOKEN_ERROR_KEY);\n+    }\n+\n+    public boolean isIdentityError() {\n+        JSONObject errors = getErrors();\n+        return (errors != null) && errors.has(IDENTITY_ERROR_KEY);\n+    }\n+\n+    private JSONObject getErrorArgs() {\n+        if (errorBody != null) {\n+            try {\n+                return errorBody.getJSONObject(\"args\");\n+            } catch (JSONException e) {\n+                // swallow\n+            }\n+        }\n+        return null;\n+    }\n+\n+    public String getErrorArg(String errorArgKey) {\n+        JSONObject errorArgs = getErrorArgs();\n+        if (errorArgs != null) {\n+            try {\n+                return errorArgs.getString(errorArgKey);\n+            } catch (JSONException e) {\n+                // swallow\n+            }\n+        }\n+        return null;\n+    }\n+\n+    public int getCode() {\n+        return httpStatusCode;\n+    }\n+\n+    public String getDescription(Context context, Object... formatArgs) {\n+        if (isIdentityError()) {\n+            return context.getString(R.string.uphold_api_error_identity);\n+        } else if (httpStatusCode == 400) {\n+            return context.getString(R.string.uphold_api_error_400_description, formatArgs);", "originalCommit": "6096074977f2b2fab517efcef204236e8748c202", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "bed7df346f5e92b4763fe2445682844687d66c95", "url": "https://github.com/dashevo/dash-wallet/commit/bed7df346f5e92b4763fe2445682844687d66c95", "message": "Debugging deploy.sh script", "committedDate": "2020-07-07T07:48:49Z", "type": "forcePushed"}, {"oid": "6096074977f2b2fab517efcef204236e8748c202", "url": "https://github.com/dashevo/dash-wallet/commit/6096074977f2b2fab517efcef204236e8748c202", "message": "Final improvements of custom handling of most common Uphold API errors", "committedDate": "2020-07-03T08:52:53Z", "type": "forcePushed"}, {"oid": "01bab282c18c40c67b13cf104f7e5d8aae8ae4f9", "url": "https://github.com/dashevo/dash-wallet/commit/01bab282c18c40c67b13cf104f7e5d8aae8ae4f9", "message": "Adding back skip_cleanup parameters\nIt seems that our Travis doesn't use the dpl v2 yet and without the skip_cleanup build files are removed before deploy.", "committedDate": "2020-07-07T10:39:31Z", "type": "commit"}, {"oid": "aba58fea1ca8bbe4d6a5deb5e22c68ef716a68c1", "url": "https://github.com/dashevo/dash-wallet/commit/aba58fea1ca8bbe4d6a5deb5e22c68ef716a68c1", "message": "Modify strings", "committedDate": "2020-07-08T23:04:50Z", "type": "commit"}]}