{"pr_number": 3175, "pr_title": "Use round trip latency data for ISL alive confirmation", "pr_createdAt": "2020-02-05T15:42:33Z", "pr_url": "https://github.com/telstra/open-kilda/pull/3175", "timeline": [{"oid": "691618b049598e9df7055535cc349120f1d825fd", "url": "https://github.com/telstra/open-kilda/commit/691618b049598e9df7055535cc349120f1d825fd", "message": "Use roundtrip latency data for isl alive confirmation\n\nNetwork topology design proposition.", "committedDate": "2020-02-06T16:12:28Z", "type": "forcePushed"}, {"oid": "676c7a02e3c836bfe9921388458fb90c3b89dd2b", "url": "https://github.com/telstra/open-kilda/commit/676c7a02e3c836bfe9921388458fb90c3b89dd2b", "message": "Use roundtrip latency data for isl alive confirmation\n\nNetwork topology design proposition.", "committedDate": "2020-02-07T10:43:14Z", "type": "forcePushed"}, {"oid": "3536655437274cfc983e356ea8889a2367f85c8f", "url": "https://github.com/telstra/open-kilda/commit/3536655437274cfc983e356ea8889a2367f85c8f", "message": "Use roundtrip latency data for isl alive confirmation\n\nRoute round trip latency notifications into network topology and treat\nthem and ISL alive confirmation (in both directions).\n\nThere is new config option `discovery.round.trip.status.interval` define\nhow offen ISL will receive round trip discovery status (round\ntrip lateny notification last seen time). This notification trigger ISL\nstatus (re)evaluation. So this is interval of how long ISL will stay\nactive after round trip discovery window have expired.\n\nRound trip discovery time window is equal to discovery timeout.", "committedDate": "2020-02-13T11:20:51Z", "type": "forcePushed"}, {"oid": "40f241e1acc4590541d3451dc5d79ae098508b11", "url": "https://github.com/telstra/open-kilda/commit/40f241e1acc4590541d3451dc5d79ae098508b11", "message": "Use roundtrip latency data for isl alive confirmation\n\nRoute round trip latency notifications into network topology and treat\nthem and ISL alive confirmation (in both directions).\n\nThere is new config option `discovery.round.trip.status.interval` define\nhow offen ISL will receive round trip discovery status (round\ntrip lateny notification last seen time). This notification trigger ISL\nstatus (re)evaluation. So this is interval of how long ISL will stay\nactive after round trip discovery window have expired.\n\nRound trip discovery time window is equal to discovery timeout.", "committedDate": "2020-02-18T12:36:07Z", "type": "forcePushed"}, {"oid": "06d1e0110aa0cbeaa713ae7f3b4f071f9b11e2c0", "url": "https://github.com/telstra/open-kilda/commit/06d1e0110aa0cbeaa713ae7f3b4f071f9b11e2c0", "message": "Use roundtrip latency data for isl alive confirmation\n\nRoute round trip latency notifications into network topology and treat\nthem and ISL alive confirmation (in both directions).\n\nThere is new config option `discovery.round.trip.status.interval` define\nhow offen ISL will receive round trip discovery status (round\ntrip lateny notification last seen time). This notification trigger ISL\nstatus (re)evaluation. So this is interval of how long ISL will stay\nactive after round trip discovery window have expired.\n\nRound trip discovery time window is equal to discovery timeout.", "committedDate": "2020-02-18T14:03:01Z", "type": "forcePushed"}, {"oid": "48cba0a37aaba4979823c967610dc03a591c7cf6", "url": "https://github.com/telstra/open-kilda/commit/48cba0a37aaba4979823c967610dc03a591c7cf6", "message": "Use roundtrip latency data for isl alive confirmation\n\nRoute round trip latency notifications into network topology and treat\nthem and ISL alive confirmation (in both directions).\n\nThere is new config option `discovery.round.trip.status.interval` define\nhow offen ISL will receive round trip discovery status (round\ntrip lateny notification last seen time). This notification trigger ISL\nstatus (re)evaluation. So this is interval of how long ISL will stay\nactive after round trip discovery window have expired.\n\nRound trip discovery time window is equal to discovery timeout.", "committedDate": "2020-02-19T17:14:52Z", "type": "forcePushed"}, {"oid": "df1490b068c20cb63212790742b2c87a99dd2a3e", "url": "https://github.com/telstra/open-kilda/commit/df1490b068c20cb63212790742b2c87a99dd2a3e", "message": "Use roundtrip latency data for isl alive confirmation\n\nRoute round trip latency notifications into network topology and treat\nthem and ISL alive confirmation (in both directions).\n\nThere is new config option `discovery.round.trip.status.interval` define\nhow offen ISL will receive round trip discovery status (round\ntrip lateny notification last seen time). This notification trigger ISL\nstatus (re)evaluation. So this is interval of how long ISL will stay\nactive after round trip discovery window have expired.\n\nRound trip discovery time window is equal to discovery timeout.", "committedDate": "2020-02-20T10:25:42Z", "type": "forcePushed"}, {"oid": "230072c2f4958948f47bb77dde4292532396b2c1", "url": "https://github.com/telstra/open-kilda/commit/230072c2f4958948f47bb77dde4292532396b2c1", "message": "Use roundtrip latency data for isl alive confirmation\n\nRoute round trip latency notifications into network topology and treat\nthem and ISL alive confirmation (in both directions).\n\nThere is new config option `discovery.round.trip.status.interval` define\nhow offen ISL will receive round trip discovery status (round\ntrip lateny notification last seen time). This notification trigger ISL\nstatus (re)evaluation. So this is interval of how long ISL will stay\nactive after round trip discovery window have expired.\n\nRound trip discovery time window is equal to discovery timeout.", "committedDate": "2020-02-20T10:53:15Z", "type": "forcePushed"}, {"oid": "7cf9a06427977fddcbebb3cff75cbacf55eb12fa", "url": "https://github.com/telstra/open-kilda/commit/7cf9a06427977fddcbebb3cff75cbacf55eb12fa", "message": "Use roundtrip latency data for isl alive confirmation\n\nRoute round trip latency notifications into network topology and treat\nthem and ISL alive confirmation (in both directions).\n\nThere is new config option `discovery.round.trip.status.interval` define\nhow offen ISL will receive round trip discovery status (round\ntrip lateny notification last seen time). This notification trigger ISL\nstatus (re)evaluation. So this is interval of how long ISL will stay\nactive after round trip discovery window have expired.\n\nRound trip discovery time window is equal to discovery timeout.", "committedDate": "2020-02-20T15:47:58Z", "type": "forcePushed"}, {"oid": "d758d3ce7cedb269104e3002844d8ec287883218", "url": "https://github.com/telstra/open-kilda/commit/d758d3ce7cedb269104e3002844d8ec287883218", "message": "Use roundtrip latency data for ISL liveness confirmation\n\nRoute round trip latency notifications into network topology and treat\nthem as ISL liveness confirmation (in both directions).\n\nThere is new config option `discovery.round.trip.status.interval` define\nhow often ISL will receive round trip discovery status (round trip\nlatency notification last seen time). This notification trigger ISL\nstatus (re)evaluation. So this interval defines how long ISL will stay\nactive after the round trip discovery window has expired.\n\nThe round trip discovery time window is equal to the discovery timeout.", "committedDate": "2020-03-02T14:44:21Z", "type": "forcePushed"}, {"oid": "f5395baa44615e7d9256155ee00c22cb2ff491cd", "url": "https://github.com/telstra/open-kilda/commit/f5395baa44615e7d9256155ee00c22cb2ff491cd", "message": "Use roundtrip latency data for ISL liveness confirmation\n\nRoute round trip latency notifications into network topology and treat\nthem as ISL liveness confirmation (in both directions).\n\nThere is new config option `discovery.round.trip.status.interval` define\nhow often ISL will receive round trip discovery status (round trip\nlatency notification last seen time). This notification trigger ISL\nstatus (re)evaluation. So this interval defines how long ISL will stay\nactive after the round trip discovery window has expired.\n\nThe round trip discovery time window is equal to the discovery timeout.", "committedDate": "2020-03-03T15:09:39Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTYyNjY5OQ==", "url": "https://github.com/telstra/open-kilda/pull/3175#discussion_r391626699", "bodyText": "Maybe instantiate this condition once as a static field and use for all FSM instances?", "author": "rozdy", "createdAt": "2020-03-12T13:40:10Z", "path": "src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/controller/isl/IslFsm.java", "diffHunk": "@@ -835,14 +947,38 @@ private static String makeInvalidMappingMessage(Class<?> from, Class<?> to, Obje\n \n \n             // UP\n+            final String upHandlePollEventMethod = \"upHandlePollEvent\";\n+\n+            builder.transition()\n+                    .from(IslFsmState.UP).to(IslFsmState.DOWN).on(IslFsmEvent._BECOME_DOWN);\n+            builder.onEntry(IslFsmState.UP)\n+                    .callMethod(\"upEnter\");\n             builder.transition()\n-                    .from(IslFsmState.UP).to(IslFsmState.DOWN).on(IslFsmEvent.ISL_DOWN);\n+                    .from(IslFsmState.UP).to(IslFsmState.DOWN).on(IslFsmEvent.ISL_DOWN)\n+                    .when(new Condition<IslFsmContext>() {", "originalCommit": "1504cd162ae2a9ac50a42b389d1379f5254de4d5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjkwNTY4MQ==", "url": "https://github.com/telstra/open-kilda/pull/3175#discussion_r402905681", "bodyText": "As far as I understand how the squirrelfoundation builds FSM instances, it is already shared across all potential FSM instances.", "author": "surabujin", "createdAt": "2020-04-03T10:19:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTYyNjY5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTYyNzMyNA==", "url": "https://github.com/telstra/open-kilda/pull/3175#discussion_r391627324", "bodyText": "Remove or add some description plz.", "author": "rozdy", "createdAt": "2020-03-12T13:41:11Z", "path": "src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/controller/isl/IslFsm.java", "diffHunk": "@@ -835,14 +947,38 @@ private static String makeInvalidMappingMessage(Class<?> from, Class<?> to, Obje\n \n \n             // UP\n+            final String upHandlePollEventMethod = \"upHandlePollEvent\";\n+\n+            builder.transition()\n+                    .from(IslFsmState.UP).to(IslFsmState.DOWN).on(IslFsmEvent._BECOME_DOWN);\n+            builder.onEntry(IslFsmState.UP)\n+                    .callMethod(\"upEnter\");\n             builder.transition()\n-                    .from(IslFsmState.UP).to(IslFsmState.DOWN).on(IslFsmEvent.ISL_DOWN);\n+                    .from(IslFsmState.UP).to(IslFsmState.DOWN).on(IslFsmEvent.ISL_DOWN)\n+                    .when(new Condition<IslFsmContext>() {\n+                        @Override\n+                        public boolean isSatisfied(IslFsmContext context) {\n+                            return IslDownReason.PORT_DOWN.equals(context.getDownReason());\n+                        }\n+\n+                        @Override\n+                        public String name() {\n+                            return \"isl-down-by-physical-port-down\";\n+                        }\n+                    })\n+                    .callMethod(\"upHandlePhysicalDown\");\n             builder.transition()\n-                    .from(IslFsmState.UP).to(IslFsmState.MOVED).on(IslFsmEvent.ISL_MOVE);\n+                    .from(IslFsmState.UP).to(IslFsmState.MOVED).on(IslFsmEvent.ISL_MOVE)\n+                    .callMethod(updateEndpointStatusMethod);\n+            // FIXME(surabujin): ???", "originalCommit": "1504cd162ae2a9ac50a42b389d1379f5254de4d5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjkwNzM1Ng==", "url": "https://github.com/telstra/open-kilda/pull/3175#discussion_r402907356", "bodyText": "done", "author": "surabujin", "createdAt": "2020-04-03T10:22:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTYyNzMyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTYyODk5MA==", "url": "https://github.com/telstra/open-kilda/pull/3175#discussion_r391628990", "bodyText": "Why do we have some event names with starting underscore?", "author": "rozdy", "createdAt": "2020-03-12T13:43:51Z", "path": "src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/controller/isl/IslFsm.java", "diffHunk": "@@ -920,7 +1058,8 @@ public static IslFsmContextBuilder builder(IIslCarrier output, Endpoint endpoint\n         NEXT,\n \n         HISTORY, _HISTORY_DOWN, _HISTORY_UP, _HISTORY_MOVED,\n-        ISL_UP, ISL_DOWN, ISL_MOVE,\n+        ISL_UP, ISL_DOWN, ISL_MOVE, ROUND_TRIP_STATUS,\n+        _BECOME_DOWN,", "originalCommit": "1504cd162ae2a9ac50a42b389d1379f5254de4d5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjkwNzk0Mw==", "url": "https://github.com/telstra/open-kilda/pull/3175#discussion_r402907943", "bodyText": "They are \"internal/service\" states i.e. used to implement conditional transitions and so on (not shown on FSM diagram).", "author": "surabujin", "createdAt": "2020-04-03T10:23:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTYyODk5MA=="}], "type": "inlineReview"}, {"oid": "3548a52b45bbb5bec47fd5d801dbae952dc497d5", "url": "https://github.com/telstra/open-kilda/commit/3548a52b45bbb5bec47fd5d801dbae952dc497d5", "message": "add test for isl alive confirmation via round trip latency (#3214)\n\n* add test for isl alive confirmation via round trip latency\n\n* add missing tags\n\n* fix URL for blocking fl via lab-api", "committedDate": "2020-04-03T09:53:19Z", "type": "forcePushed"}, {"oid": "94b63203d32773c7a1f6efdb1365d7436483ca68", "url": "https://github.com/telstra/open-kilda/commit/94b63203d32773c7a1f6efdb1365d7436483ca68", "message": "Use roundtrip latency data for ISL liveness confirmation\n\nRoute round trip latency notifications into network topology and treat\nthem as ISL liveness confirmation (in both directions).\n\nThere is new config option `discovery.round.trip.status.interval` define\nhow often ISL will receive round trip discovery status (round trip\nlatency notification last seen time). This notification trigger ISL\nstatus (re)evaluation. So this interval defines how long ISL will stay\nactive after the round trip discovery window has expired.\n\nThe round trip discovery time window is equal to the discovery timeout.", "committedDate": "2020-04-03T10:24:44Z", "type": "commit"}, {"oid": "78283b5da67127c045106a6195c400a705ae5377", "url": "https://github.com/telstra/open-kilda/commit/78283b5da67127c045106a6195c400a705ae5377", "message": "add test for isl alive confirmation via round trip latency (#3214)\n\n* add test for isl alive confirmation via round trip latency\n\n* add missing tags\n\n* fix URL for blocking fl via lab-api", "committedDate": "2020-04-03T10:24:44Z", "type": "commit"}, {"oid": "78283b5da67127c045106a6195c400a705ae5377", "url": "https://github.com/telstra/open-kilda/commit/78283b5da67127c045106a6195c400a705ae5377", "message": "add test for isl alive confirmation via round trip latency (#3214)\n\n* add test for isl alive confirmation via round trip latency\n\n* add missing tags\n\n* fix URL for blocking fl via lab-api", "committedDate": "2020-04-03T10:24:44Z", "type": "forcePushed"}]}