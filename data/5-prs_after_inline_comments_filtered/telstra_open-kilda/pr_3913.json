{"pr_number": 3913, "pr_title": "Moved ZkClient initialization out of constructor", "pr_createdAt": "2020-12-11T10:15:00Z", "pr_url": "https://github.com/telstra/open-kilda/pull/3913", "timeline": [{"oid": "a389df79c78793ab6a75d9e358038d2400e1ee9e", "url": "https://github.com/telstra/open-kilda/commit/a389df79c78793ab6a75d9e358038d2400e1ee9e", "message": "Moved ZkClient initialization out of constructor", "committedDate": "2020-12-11T11:15:53Z", "type": "forcePushed"}, {"oid": "a1f18cef74e0cada0fb4f06583784a4f63b1bdda", "url": "https://github.com/telstra/open-kilda/commit/a1f18cef74e0cada0fb4f06583784a4f63b1bdda", "message": "Moved ZkClient initialization out of constructor", "committedDate": "2020-12-11T12:05:08Z", "type": "commit"}, {"oid": "a1f18cef74e0cada0fb4f06583784a4f63b1bdda", "url": "https://github.com/telstra/open-kilda/commit/a1f18cef74e0cada0fb4f06583784a4f63b1bdda", "message": "Moved ZkClient initialization out of constructor", "committedDate": "2020-12-11T12:05:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTEzODgwMw==", "url": "https://github.com/telstra/open-kilda/pull/3913#discussion_r541138803", "bodyText": "Do you really need both init() and initZk()?", "author": "surabujin", "createdAt": "2020-12-11T18:19:37Z", "path": "src-java/base-topology/base-storm-topology/src/main/java/org/openkilda/wfm/share/zk/ZooKeeperBolt.java", "diffHunk": "@@ -72,14 +69,10 @@ protected void init() {\n     }\n \n     private void initZk() {", "originalCommit": "a1f18cef74e0cada0fb4f06583784a4f63b1bdda", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEyNDYwMA==", "url": "https://github.com/telstra/open-kilda/pull/3913#discussion_r542124600", "bodyText": "actually not. We can move initZk to init", "author": "niksv", "createdAt": "2020-12-14T05:39:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTEzODgwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE0ODIxNw==", "url": "https://github.com/telstra/open-kilda/pull/3913#discussion_r541148217", "bodyText": "It must be the responsibility of ZkClient...", "author": "surabujin", "createdAt": "2020-12-11T18:35:53Z", "path": "src-java/blue-green/src/main/java/org/openkilda/bluegreen/ZkWatchDog.java", "diffHunk": "@@ -61,38 +61,39 @@ public ZkWatchDog(String id, String serviceName, String connectionString,\n             signal = Signal.NONE;\n         }\n         this.signal = signal;\n-        initWatch();\n     }\n \n     @Override\n-    void validateNodes() throws KeeperException, InterruptedException {\n+    void validateNodes() throws KeeperException, InterruptedException, IOException {\n         super.validateNodes();\n         ensureZNode(serviceName, id, SIGNAL);\n         ensureZNode(DEFAULT_BUILD_VERSION.getBytes(), serviceName, id, BUILD_VERSION);\n+        nodesValidated = true;\n     }\n \n \n     @VisibleForTesting\n-    void subscribeSignal() throws KeeperException, InterruptedException {\n+    void subscribeSignal() {\n         checkData(signalPath);\n     }\n \n     @VisibleForTesting\n-    void subscribeBuildVersion() throws KeeperException, InterruptedException {\n+    void subscribeBuildVersion() {\n         checkData(buildVersionPath);\n     }\n \n-    private void checkData(String path) throws KeeperException, InterruptedException {\n+    private void checkData(String path) {\n         zookeeper.getData(path, this, this, null);\n     }\n \n     @Override\n-    void initWatch() {\n+    public void init() {\n         try {\n+            initZk();", "originalCommit": "a1f18cef74e0cada0fb4f06583784a4f63b1bdda", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEyNjkzNw==", "url": "https://github.com/telstra/open-kilda/pull/3913#discussion_r542126937", "bodyText": "initZk creates connection to ZK. The whole idea of this patch is to split creating of ZkClient instance and connecting to ZK.", "author": "niksv", "createdAt": "2020-12-14T05:46:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE0ODIxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE0ODk5Mw==", "url": "https://github.com/telstra/open-kilda/pull/3913#discussion_r541148993", "bodyText": "Terrible logic tangling between this class and it's parent. I can't propose anything to fix it right now... except removing this nodesValidated flag.", "author": "surabujin", "createdAt": "2020-12-11T18:37:15Z", "path": "src-java/blue-green/src/main/java/org/openkilda/bluegreen/ZkWatchDog.java", "diffHunk": "@@ -61,38 +61,39 @@ public ZkWatchDog(String id, String serviceName, String connectionString,\n             signal = Signal.NONE;\n         }\n         this.signal = signal;\n-        initWatch();\n     }\n \n     @Override\n-    void validateNodes() throws KeeperException, InterruptedException {\n+    void validateNodes() throws KeeperException, InterruptedException, IOException {\n         super.validateNodes();\n         ensureZNode(serviceName, id, SIGNAL);\n         ensureZNode(DEFAULT_BUILD_VERSION.getBytes(), serviceName, id, BUILD_VERSION);\n+        nodesValidated = true;", "originalCommit": "a1f18cef74e0cada0fb4f06583784a4f63b1bdda", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEyNjUyMQ==", "url": "https://github.com/telstra/open-kilda/pull/3913#discussion_r542126521", "bodyText": "I want to solve following problem.\nWe need to check that we connected to ZK and it works fine. We need to check not one, but on every action (when we receive tupple, when we reading massage from kafka, etc)\nSo this check must be fast. Current check method checks\n\nthat we connected to zk\nthat we able to create nodes and default nodes were created\n\nIf we will check just 1 it would be useless. Because clients wouldn't able to work with Zookeeper.\nMaybe I can rename isConnectionAlive method to something else. like isZooKeeperZeady ToWork", "author": "niksv", "createdAt": "2020-12-14T05:45:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE0ODk5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE1MTA0Mw==", "url": "https://github.com/telstra/open-kilda/pull/3913#discussion_r541151043", "bodyText": "Why we have !nodesValidated here? Especially when ZcClient is not controlling this flag value?", "author": "surabujin", "createdAt": "2020-12-11T18:41:05Z", "path": "src-java/blue-green/src/main/java/org/openkilda/bluegreen/ZkClient.java", "diffHunk": "@@ -93,12 +101,18 @@ protected void ensureZNode(byte[] value, String... path) throws KeeperException,\n         }\n     }\n \n-    void validateNodes() throws KeeperException, InterruptedException {\n+    void validateNodes() throws KeeperException, InterruptedException, IOException {\n         ensureZNode(serviceName);\n         ensureZNode(serviceName, id);\n     }\n \n+    /**\n+     * Checks that connection to zookeeper is alive and nodes were validated.\n+     */\n     public boolean isConnectionAlive() {\n+        if (zookeeper == null || !nodesValidated) {", "originalCommit": "a1f18cef74e0cada0fb4f06583784a4f63b1bdda", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEyNDkwMg==", "url": "https://github.com/telstra/open-kilda/pull/3913#discussion_r542124902", "bodyText": "To be ensured that nodes were validated. In ZkWatchDog and ZkClient", "author": "niksv", "createdAt": "2020-12-14T05:40:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE1MTA0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE1MjU4MA==", "url": "https://github.com/telstra/open-kilda/pull/3913#discussion_r541152580", "bodyText": "validateNodes() will never be called, if initZk() on previous line raise exception.", "author": "surabujin", "createdAt": "2020-12-11T18:43:53Z", "path": "src-java/blue-green/src/main/java/org/openkilda/bluegreen/ZkWriter.java", "diffHunk": "@@ -51,11 +48,21 @@ public void setState(int active) {\n         }\n     }\n \n+    @Override\n+    public void init() {\n+        try {\n+            initZk();\n+            validateNodes();", "originalCommit": "a1f18cef74e0cada0fb4f06583784a4f63b1bdda", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEyNzYxOA==", "url": "https://github.com/telstra/open-kilda/pull/3913#discussion_r542127618", "bodyText": "And what is the problem? nodesValidated wouldn't be set to true? If yes it exactly what I want. To return false in isCOnnectionAlive in this case", "author": "niksv", "createdAt": "2020-12-14T05:48:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE1MjU4MA=="}], "type": "inlineReview"}]}