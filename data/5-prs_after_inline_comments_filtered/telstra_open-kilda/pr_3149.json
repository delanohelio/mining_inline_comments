{"pr_number": 3149, "pr_title": "Added a reroute call when updating the maxLatency flow field.", "pr_createdAt": "2020-01-28T12:20:45Z", "pr_url": "https://github.com/telstra/open-kilda/pull/3149", "timeline": [{"oid": "d1e8ae7680a707a64051ddc634f12f8bd25f0d94", "url": "https://github.com/telstra/open-kilda/commit/d1e8ae7680a707a64051ddc634f12f8bd25f0d94", "message": "Added a reroute call when updating the maxLatency flow field.", "committedDate": "2020-01-28T12:25:14Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc3NzYwMQ==", "url": "https://github.com/telstra/open-kilda/pull/3149#discussion_r371777601", "bodyText": "strategyIsLMaxLatency", "author": "niksv", "createdAt": "2020-01-28T12:40:01Z", "path": "services/wfm/src/main/java/org/openkilda/wfm/topology/nbworker/services/FlowOperationsService.java", "diffHunk": "@@ -279,9 +288,43 @@ public UnidirectionalFlow updateFlow(FlowDto flow) throws FlowNotFoundException\n \n             flowRepository.createOrUpdate(currentFlow);\n \n-            return Optional.of(forwardFlow);\n+            return Optional.of(result.updatedFlow(forwardFlow).build());\n \n         }).orElseThrow(() -> new FlowNotFoundException(flow.getFlowId()));\n+\n+        if (updateFlowResult.isNeedRerouteFlow()) {\n+            Flow updatedFlow = updateFlowResult.getUpdatedFlow().getFlow();\n+            Set<PathId> pathIds = new HashSet<>(updatedFlow.getFlowPathIds());\n+            carrier.sendRerouteRequest(Collections.singletonMap(updatedFlow.getFlowId(), pathIds),\n+                    updateFlowResult.getRerouteReason());\n+        }\n+\n+        return updateFlowResult.getUpdatedFlow();\n+    }\n+\n+    @VisibleForTesting\n+    UpdateFlowResult.UpdateFlowResultBuilder prepareFlowUpdateResult(FlowDto flowDto, Flow flow) {\n+        boolean changedStrategy = flowDto.getPathComputationStrategy() != null\n+                && !flowDto.getPathComputationStrategy().equals(flow.getPathComputationStrategy());\n+        boolean changedMaxLatency = flowDto.getMaxLatency() != null\n+                && !flowDto.getMaxLatency().equals(flow.getMaxLatency());\n+        boolean strategyIsMaxLatency = flowDto.getPathComputationStrategy() != null", "originalCommit": "d1e8ae7680a707a64051ddc634f12f8bd25f0d94", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgxMDg1Nw==", "url": "https://github.com/telstra/open-kilda/pull/3149#discussion_r371810857", "bodyText": "noooooooo", "author": "rtretyak", "createdAt": "2020-01-28T13:47:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc3NzYwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTg0NTU4Ng==", "url": "https://github.com/telstra/open-kilda/pull/3149#discussion_r371845586", "bodyText": "oh. my bad. your name is correct", "author": "niksv", "createdAt": "2020-01-28T14:46:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc3NzYwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc4NDQ1NA==", "url": "https://github.com/telstra/open-kilda/pull/3149#discussion_r371784454", "bodyText": "it could be simplified\n boolean strategyIsMaxLatency = \n    PathComputationStrategy.MAX_LATENCY.equals(flowDto.getPathComputationStrategy())\n    || flowDto.getPathComputationStrategy() == null \n    && PathComputationStrategy.MAX_LATENCY.equals(flow.getPathComputationStrategy())", "author": "niksv", "createdAt": "2020-01-28T12:55:10Z", "path": "services/wfm/src/main/java/org/openkilda/wfm/topology/nbworker/services/FlowOperationsService.java", "diffHunk": "@@ -279,9 +288,43 @@ public UnidirectionalFlow updateFlow(FlowDto flow) throws FlowNotFoundException\n \n             flowRepository.createOrUpdate(currentFlow);\n \n-            return Optional.of(forwardFlow);\n+            return Optional.of(result.updatedFlow(forwardFlow).build());\n \n         }).orElseThrow(() -> new FlowNotFoundException(flow.getFlowId()));\n+\n+        if (updateFlowResult.isNeedRerouteFlow()) {\n+            Flow updatedFlow = updateFlowResult.getUpdatedFlow().getFlow();\n+            Set<PathId> pathIds = new HashSet<>(updatedFlow.getFlowPathIds());\n+            carrier.sendRerouteRequest(Collections.singletonMap(updatedFlow.getFlowId(), pathIds),\n+                    updateFlowResult.getRerouteReason());\n+        }\n+\n+        return updateFlowResult.getUpdatedFlow();\n+    }\n+\n+    @VisibleForTesting\n+    UpdateFlowResult.UpdateFlowResultBuilder prepareFlowUpdateResult(FlowDto flowDto, Flow flow) {\n+        boolean changedStrategy = flowDto.getPathComputationStrategy() != null\n+                && !flowDto.getPathComputationStrategy().equals(flow.getPathComputationStrategy());\n+        boolean changedMaxLatency = flowDto.getMaxLatency() != null\n+                && !flowDto.getMaxLatency().equals(flow.getMaxLatency());\n+        boolean strategyIsMaxLatency = flowDto.getPathComputationStrategy() != null\n+                && flowDto.getPathComputationStrategy().equals(PathComputationStrategy.MAX_LATENCY)\n+                || flowDto.getPathComputationStrategy() == null && flow.getPathComputationStrategy() != null\n+                && flow.getPathComputationStrategy().equals(PathComputationStrategy.MAX_LATENCY);", "originalCommit": "d1e8ae7680a707a64051ddc634f12f8bd25f0d94", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjIxMjg2MA==", "url": "https://github.com/telstra/open-kilda/pull/3149#discussion_r372212860", "bodyText": "Fixed.", "author": "dpoltavets", "createdAt": "2020-01-29T06:48:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc4NDQ1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc5MjI1NA==", "url": "https://github.com/telstra/open-kilda/pull/3149#discussion_r371792254", "bodyText": "I'm not sure about pathIds. I guess we must get pathIds for reroute from original flow.", "author": "niksv", "createdAt": "2020-01-28T13:11:38Z", "path": "services/wfm/src/main/java/org/openkilda/wfm/topology/nbworker/services/FlowOperationsService.java", "diffHunk": "@@ -279,9 +288,43 @@ public UnidirectionalFlow updateFlow(FlowDto flow) throws FlowNotFoundException\n \n             flowRepository.createOrUpdate(currentFlow);\n \n-            return Optional.of(forwardFlow);\n+            return Optional.of(result.updatedFlow(forwardFlow).build());\n \n         }).orElseThrow(() -> new FlowNotFoundException(flow.getFlowId()));\n+\n+        if (updateFlowResult.isNeedRerouteFlow()) {\n+            Flow updatedFlow = updateFlowResult.getUpdatedFlow().getFlow();\n+            Set<PathId> pathIds = new HashSet<>(updatedFlow.getFlowPathIds());", "originalCommit": "d1e8ae7680a707a64051ddc634f12f8bd25f0d94", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE5NTIwNQ==", "url": "https://github.com/telstra/open-kilda/pull/3149#discussion_r372195205", "bodyText": "This flow update does not affect the flow paths at this point.", "author": "dpoltavets", "createdAt": "2020-01-29T05:26:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc5MjI1NA=="}], "type": "inlineReview"}, {"oid": "b95ad6d4dc28b6a768c7700bcece82efc59c59ee", "url": "https://github.com/telstra/open-kilda/commit/b95ad6d4dc28b6a768c7700bcece82efc59c59ee", "message": "Added a reroute call when updating the maxLatency flow field.", "committedDate": "2020-01-29T06:42:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzkzNDc4NQ==", "url": "https://github.com/telstra/open-kilda/pull/3149#discussion_r373934785", "bodyText": "I think you need to add saving of getPathComputationStrategy() into currentFlow. like in lines 20 and 283", "author": "niksv", "createdAt": "2020-02-03T06:11:13Z", "path": "services/wfm/src/main/java/org/openkilda/wfm/topology/nbworker/services/FlowOperationsService.java", "diffHunk": "@@ -279,9 +288,42 @@ public UnidirectionalFlow updateFlow(FlowDto flow) throws FlowNotFoundException\n \n             flowRepository.createOrUpdate(currentFlow);\n \n-            return Optional.of(forwardFlow);\n+            return Optional.of(result.updatedFlow(forwardFlow).build());", "originalCommit": "b95ad6d4dc28b6a768c7700bcece82efc59c59ee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzkzNjE1Mw==", "url": "https://github.com/telstra/open-kilda/pull/3149#discussion_r373936153", "bodyText": "Saving of getPathComputationStrategy() is added here: #3036", "author": "dpoltavets", "createdAt": "2020-02-03T06:17:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzkzNDc4NQ=="}], "type": "inlineReview"}, {"oid": "d72513da4a6f363bf24031c75b6cf5ef86d08261", "url": "https://github.com/telstra/open-kilda/commit/d72513da4a6f363bf24031c75b6cf5ef86d08261", "message": "Added a reroute call when updating the maxLatency flow field.", "committedDate": "2020-02-10T11:02:43Z", "type": "forcePushed"}, {"oid": "1585a0754ece5dca5fa0246a7d762f8416707508", "url": "https://github.com/telstra/open-kilda/commit/1585a0754ece5dca5fa0246a7d762f8416707508", "message": "Added a reroute call when updating the maxLatency flow field.", "committedDate": "2020-02-10T12:38:46Z", "type": "forcePushed"}, {"oid": "8a4754256b4253bb2ad7c0c7e2015d112e65d3a0", "url": "https://github.com/telstra/open-kilda/commit/8a4754256b4253bb2ad7c0c7e2015d112e65d3a0", "message": "Added a reroute call when updating the maxLatency flow field.", "committedDate": "2020-02-18T11:27:55Z", "type": "forcePushed"}, {"oid": "6b8cb181f2ab7b3110af33ad96a8daa3e82ab101", "url": "https://github.com/telstra/open-kilda/commit/6b8cb181f2ab7b3110af33ad96a8daa3e82ab101", "message": "Added a reroute call when updating the maxLatency flow field.", "committedDate": "2020-03-02T06:20:40Z", "type": "commit"}, {"oid": "6b8cb181f2ab7b3110af33ad96a8daa3e82ab101", "url": "https://github.com/telstra/open-kilda/commit/6b8cb181f2ab7b3110af33ad96a8daa3e82ab101", "message": "Added a reroute call when updating the maxLatency flow field.", "committedDate": "2020-03-02T06:20:40Z", "type": "forcePushed"}]}