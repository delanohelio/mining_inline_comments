{"pr_number": 87, "pr_title": "FM2-84 : Additional properties to allergyIntolerance resource post-commit", "pr_createdAt": "2020-02-25T13:04:35Z", "pr_url": "https://github.com/openmrs/openmrs-module-fhir2/pull/87", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg4MTM1MA==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/87#discussion_r383881350", "bodyText": "I'd prefer if this constant was referenced from a constant location, even if it ends up in FhirConstants.\n\n\nInstead of calling getGlobalProperty() twice, call it once. This could be rewritten as globalPropertyService.getGlobalProperty(FhirConstants.ALLERGY_MILD, \"\").equals(severityConcept.getUuid()). This is because each call to getGlobalProperty() results in a query to the database.", "author": "ibacher", "createdAt": "2020-02-25T13:36:24Z", "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/AllergyIntoleranceTranslatorImpl.java", "diffHunk": "@@ -124,4 +167,75 @@ private boolean isAllergyInactive(CodeableConcept status) {\n \t\t        .anyMatch(c -> \"inactive\".equals(c.getCode()));\n \t}\n \t\n+\tprivate CodeableConcept getAllergySubstance(Allergen allergen) {\n+\t\tif (allergen.getCodedAllergen() == null) {\n+\t\t\treturn null;\n+\t\t}\n+\t\tCodeableConcept allergySubstance = new CodeableConcept();\n+\t\tCoding code = new Coding(FhirConstants.ALLERGY_SUBSTANCE_VALUE_SET_URI, allergen.getCodedAllergen().getUuid(),\n+\t\t        allergen.getNonCodedAllergen());\n+\t\tallergySubstance.addCoding(code);\n+\t\tallergySubstance.setText(\"allergen.getNonCodedAllergen()\");\n+\t\t\n+\t\treturn allergySubstance;\n+\t}\n+\t\n+\tprivate CodeableConcept getManifestation(List<AllergyReaction> reactions) {\n+\t\tCodeableConcept manifestations = new CodeableConcept();\n+\t\tfor (AllergyReaction reaction : reactions) {\n+\t\t\tCoding code = new Coding(FhirConstants.CLINICAL_FINDINGS_VALUE_SET_URI, reaction.getUuid(),\n+\t\t\t        reaction.getReactionNonCoded());\n+\t\t\tmanifestations.addCoding(code);\n+\t\t\tmanifestations.setText(reaction.getReactionNonCoded());\n+\t\t}\n+\t\t\n+\t\treturn manifestations;\n+\t}\n+\t\n+\tprivate AllergyIntolerance.AllergyIntoleranceSeverity getFhirSeverity(Concept severityConcept) {\n+\t\tif (severityConcept == null) {\n+\t\t\treturn null;\n+\t\t}\n+\t\tif (globalPropertyService.getGlobalProperty(\"allergy.concept.severity.mild\") != null && globalPropertyService", "originalCommit": "6493c7d3db7f6ad22d2b598628a40bac02433ad1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk1ODg4MQ==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/87#discussion_r383958881", "bodyText": "@ibacher i'm working on the tests, also i'll move those values to constant", "author": "jecihjoy", "createdAt": "2020-02-25T15:39:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg4MTM1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDAyMzU1Ng==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/87#discussion_r384023556", "bodyText": "@ibacher without this check globalPropertyService.getGlobalProperty(\"allergy.concept.severity.mild\") != null\ni'm getting  java.lang.NullPointerException", "author": "jecihjoy", "createdAt": "2020-02-25T17:34:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg4MTM1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA1MDg4Mg==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/87#discussion_r384050882", "bodyText": "Right, sorry, I forgot this was our GlobalProperty service. Add a method to it like this:\n@Override\n@Transactional(readOnly = true)\npublic String getGlobalProperty(String property, String defaultValue) throws APIException {\n\tString result = dao.getGlobalProperty(property);\n\treturn result == null ? defaultValue : result;\n}\nand use that. Alternatively, use this pattern:\nString gp = globalPropertyService.getGlobalProperty(...);\n\nif (gp != null && gp.equals(...)) {\n\t// ...\n}", "author": "ibacher", "createdAt": "2020-02-25T18:40:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg4MTM1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA1NTkwNQ==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/87#discussion_r384055905", "bodyText": "Actually, change that first suggestion. Instead, on the FhirGlobalProperty interface add this:\ndefault String getGlobalProperty(String property, String defaultValue) throws APIException {\n    String result = this.getGlobalProperty(property);\n    return result == null ? defaultValue : result;\n}\nThat way it works for any other implementations of FhirGlobalProperty without too much hassle.", "author": "ibacher", "createdAt": "2020-02-25T18:49:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg4MTM1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA4NjY4MQ==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/87#discussion_r384086681", "bodyText": "@jecihjoy I forgot about that. The equivalent is:\nservlet.setGlobalPropertyService(new FhirGlobalPropertyServiceImpl() {\n\t@Override\n    @Transactional(readOnly = true)\n    public String getGlobalProperty(String property) throws APIException {\n        switch (property) {\n\t\t\tcase FhirConstants.OPENMRS_FHIR_DEFAULT_PAGE_SIZE:\n\t\t\t\treturn \"10\";\n\t\t\tcase FhirConstants.OPENMRS_FHIR_MAXIMUM_PAGE_SIZE:\n\t\t\t\treturn \"100\";\n\t\t}\n    }\n});", "author": "ibacher", "createdAt": "2020-02-25T19:45:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg4MTM1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEyMTA5MQ==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/87#discussion_r384121091", "bodyText": "I'm actually doing the mocking\neg  this is where the tests starts failing if I remove the null check from the translator\nThe first element in the list, MILD works fine but the rest on the tests on severity won't pass", "author": "jecihjoy", "createdAt": "2020-02-25T20:56:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg4MTM1MA=="}], "type": "inlineReview"}, {"oid": "e880aa62004c5b3112cf2a70818d82479f058fbd", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/e880aa62004c5b3112cf2a70818d82479f058fbd", "message": "FM2-84 : Additional properties to allergyIntolerance resource post-commit", "committedDate": "2020-02-25T20:04:47Z", "type": "forcePushed"}, {"oid": "36501adfb9f8548f39e606f64e96ef73ef188d7e", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/36501adfb9f8548f39e606f64e96ef73ef188d7e", "message": "FM2-84 : Additional properties to allergyIntolerance resource post-commit", "committedDate": "2020-02-25T20:09:27Z", "type": "forcePushed"}, {"oid": "708dda5f884e51ce1610f5cd9b503552ad3dcc0d", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/708dda5f884e51ce1610f5cd9b503552ad3dcc0d", "message": "FM2-84 : Additional properties to allergyIntolerance resource post-commit", "committedDate": "2020-02-25T20:56:47Z", "type": "forcePushed"}, {"oid": "5239614ced9cfa3e5419047ba7a63322aa80568f", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/5239614ced9cfa3e5419047ba7a63322aa80568f", "message": "FM2-84 : Additional properties to allergyIntolerance resource post-commit", "committedDate": "2020-02-26T07:20:36Z", "type": "forcePushed"}, {"oid": "c8db8034ff1083afdb7d400ec8ea7463d6378603", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/c8db8034ff1083afdb7d400ec8ea7463d6378603", "message": "FM2-84 : Additional properties to allergyIntolerance resource post-commit", "committedDate": "2020-02-26T09:25:06Z", "type": "forcePushed"}, {"oid": "6f0663f6fc3b98c2a950523e575719cdfe8ec62a", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/6f0663f6fc3b98c2a950523e575719cdfe8ec62a", "message": "FM2-84 : Additional properties to allergyIntolerance resource post-commit", "committedDate": "2020-02-26T11:13:00Z", "type": "commit"}, {"oid": "6f0663f6fc3b98c2a950523e575719cdfe8ec62a", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/6f0663f6fc3b98c2a950523e575719cdfe8ec62a", "message": "FM2-84 : Additional properties to allergyIntolerance resource post-commit", "committedDate": "2020-02-26T11:13:00Z", "type": "forcePushed"}]}