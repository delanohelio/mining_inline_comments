{"pr_number": 84, "pr_title": "FM2-84 : Additional properties to allergyIntolerance resource", "pr_createdAt": "2020-02-21T22:32:00Z", "pr_url": "https://github.com/openmrs/openmrs-module-fhir2/pull/84", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg0MjU3Mg==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/84#discussion_r382842572", "bodyText": "@jecihjoy I was going through your PR to learn how to write better code, I guess that according to https://github.com/openmrs/openmrs-module-fhir2#development-principles we should not use services inside Translators rather we should use Dao. Maybe I am wrong but thought I should point it out", "author": "VaishSiddharth", "createdAt": "2020-02-21T22:48:08Z", "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/AllergyIntoleranceTranslatorImpl.java", "diffHunk": "@@ -9,21 +9,36 @@\n  */\n package org.openmrs.module.fhir2.api.translators.impl;\n \n+import javax.inject.Inject;\n+\n import lombok.AccessLevel;\n import lombok.Setter;\n import org.hl7.fhir.r4.model.AllergyIntolerance;\n import org.hl7.fhir.r4.model.CodeableConcept;\n import org.hl7.fhir.r4.model.Coding;\n+import org.hl7.fhir.r4.model.Reference;\n import org.openmrs.Allergen;\n import org.openmrs.AllergenType;\n import org.openmrs.Allergy;\n import org.openmrs.module.fhir2.FhirConstants;\n+import org.openmrs.module.fhir2.api.FhirPatientService;\n+import org.openmrs.module.fhir2.api.dao.FhirUserDao;\n import org.openmrs.module.fhir2.api.translators.AllergyIntoleranceTranslator;\n+import org.openmrs.module.fhir2.api.translators.PatientTranslator;\n import org.springframework.stereotype.Component;\n \n @Component\n @Setter(AccessLevel.PACKAGE)\n-public class AllergyIntoleranceTranslatorImpl implements AllergyIntoleranceTranslator {\n+public class AllergyIntoleranceTranslatorImpl extends AbstractReferenceHandlingTranslator implements AllergyIntoleranceTranslator {\n+\t\n+\t@Inject\n+\tprivate PatientTranslator patientTranslator;\n+\t\n+\t@Inject\n+\tprivate FhirPatientService patientService;", "originalCommit": "6a1cc6017130de13375bb59fac709d5758c7b523", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg0NDA5NA==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/84#discussion_r382844094", "bodyText": "@VaishSiddharth this standard is applicable when using OpenMrs services inside translators. However if the service and the translators for the specific resource being accessed in the Translator has already been created, the best approach is to have the fhir service layer calling Dao layer instead of accessing Dao directly. @ibacher can clarify more on this", "author": "jecihjoy", "createdAt": "2020-02-21T22:53:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg0MjU3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkxNjUwNg==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/84#discussion_r382916506", "bodyText": "@VaishSiddharth What @jechijoy said here is correct. We\u2019re trying to avoid dependency on the OpenMRS service layer, because my long term vision for this project is to develop a framework that can pulled out of an OpenMRS module and into its own service. I outlined what I think this should look like in this Talk post, though there\u2019s a lot of work necessary to make this possible.", "author": "ibacher", "createdAt": "2020-02-22T14:31:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg0MjU3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkxOTU2MQ==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/84#discussion_r382919561", "bodyText": "@jecihjoy @ibacher Thanks for clarifying  :)", "author": "VaishSiddharth", "createdAt": "2020-02-22T15:17:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg0MjU3Mg=="}], "type": "inlineReview"}, {"oid": "9357ba748cec98d510892c48e0c04e392b3a1c52", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/9357ba748cec98d510892c48e0c04e392b3a1c52", "message": "FM2-84 : Additional properties to allergyIntolerance resource", "committedDate": "2020-02-21T23:07:31Z", "type": "forcePushed"}, {"oid": "0acf84afc094170eacf075ec96da68585ac035cf", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/0acf84afc094170eacf075ec96da68585ac035cf", "message": "FM2-84 : Additional properties to allergyIntolerance resource", "committedDate": "2020-02-22T10:16:21Z", "type": "forcePushed"}, {"oid": "078fc18498e5fb727efc70eb4255301e4493f239", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/078fc18498e5fb727efc70eb4255301e4493f239", "message": "FM2-84 : Additional properties to allergyIntolerance resource", "committedDate": "2020-02-23T10:12:30Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzA5Mjc1Mw==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/84#discussion_r383092753", "bodyText": "Instead of doing this. Just inject practitionerRefereneceTranslator\n@Inject\nprivate PractitionerReferenceTranslator<User> practitionerReferenceTranslator;\nthen\ntoFhirResource\nallergy.setRecorder(practitionerReferenceTranslator.toFhirResource(omrsAllergy.getCreator()));\ntoOpenmrsType\nallergy.setCreator(practitionerReferenceTranslator.toOpenmrsType(fhirAllergy.getRecorder());", "author": "corneliouzbett", "createdAt": "2020-02-24T05:44:35Z", "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/AllergyIntoleranceTranslatorImpl.java", "diffHunk": "@@ -105,4 +134,21 @@ private boolean isAllergyInactive(CodeableConcept status) {\n \t\t        .filter(c -> FhirConstants.ALLERGY_INTOLERANCE_CLINICAL_STATUS_VALUE_SET.equals(c.getSystem()))\n \t\t        .anyMatch(c -> \"inactive\".equals(c.getCode()));\n \t}\n+\t\n+\tprivate org.openmrs.User getCreator(Reference userReference) {\n+\t\tif (userReference == null) {\n+\t\t\treturn null;\n+\t\t}\n+\t\t\n+\t\tif (userReference.getType() != null && !userReference.getType().equals(\"Practitioner\")) {\n+\t\t\tthrow new IllegalArgumentException(\"Reference must be to a Practitioner not a \" + userReference.getType());\n+\t\t}\n+\t\t\n+\t\tString uuid = getReferenceId(userReference);\n+\t\tif (uuid == null) {\n+\t\t\treturn null;\n+\t\t}\n+\t\t\n+\t\treturn userDao.getUserByUuid(uuid);\n+\t}\n }", "originalCommit": "078fc18498e5fb727efc70eb4255301e4493f239", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzA5MzMwOQ==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/84#discussion_r383093309", "bodyText": "Remove this\nInstead, use PatientReferenceTranslator", "author": "corneliouzbett", "createdAt": "2020-02-24T05:47:55Z", "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/AllergyIntoleranceTranslatorImpl.java", "diffHunk": "@@ -9,21 +9,36 @@\n  */\n package org.openmrs.module.fhir2.api.translators.impl;\n \n+import javax.inject.Inject;\n+\n import lombok.AccessLevel;\n import lombok.Setter;\n import org.hl7.fhir.r4.model.AllergyIntolerance;\n import org.hl7.fhir.r4.model.CodeableConcept;\n import org.hl7.fhir.r4.model.Coding;\n+import org.hl7.fhir.r4.model.Reference;\n import org.openmrs.Allergen;\n import org.openmrs.AllergenType;\n import org.openmrs.Allergy;\n import org.openmrs.module.fhir2.FhirConstants;\n+import org.openmrs.module.fhir2.api.FhirPatientService;\n+import org.openmrs.module.fhir2.api.dao.FhirUserDao;\n import org.openmrs.module.fhir2.api.translators.AllergyIntoleranceTranslator;\n+import org.openmrs.module.fhir2.api.translators.PatientTranslator;\n import org.springframework.stereotype.Component;\n \n @Component\n @Setter(AccessLevel.PACKAGE)\n-public class AllergyIntoleranceTranslatorImpl implements AllergyIntoleranceTranslator {\n+public class AllergyIntoleranceTranslatorImpl extends AbstractReferenceHandlingTranslator implements AllergyIntoleranceTranslator {\n+\t\n+\t@Inject\n+\tprivate PatientTranslator patientTranslator;\n+\t\n+\t@Inject\n+\tprivate FhirPatientService patientService;", "originalCommit": "078fc18498e5fb727efc70eb4255301e4493f239", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzA5MzkyOA==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/84#discussion_r383093928", "bodyText": "allergy.setPatient(patientReferenceTranslator.toOpenmrsType(fhirAllergy.getPatient()))", "author": "corneliouzbett", "createdAt": "2020-02-24T05:50:57Z", "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/AllergyIntoleranceTranslatorImpl.java", "diffHunk": "@@ -83,6 +106,11 @@ public Allergy toOpenmrsType(Allergy allergy, AllergyIntolerance fhirAllergy) {\n \t\t\t}\n \t\t}\n \t\tallergy.setVoided(isAllergyInactive(fhirAllergy.getClinicalStatus()));\n+\t\tallergy.setPatient(\n+\t\t    patientTranslator.toOpenmrsType(patientService.getPatientByUuid(getReferenceId(fhirAllergy.getPatient()))));", "originalCommit": "078fc18498e5fb727efc70eb4255301e4493f239", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzA5NDA5OQ==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/84#discussion_r383094099", "bodyText": "Of course, you have to inject patientReferenceTranslator\n@Inject\nprivate PatientReferenceTranslator patientReferenceTranslator;", "author": "corneliouzbett", "createdAt": "2020-02-24T05:51:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzA5MzkyOA=="}], "type": "inlineReview"}, {"oid": "89ed11b44ec565ab916ba83f7553439409171a0c", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/89ed11b44ec565ab916ba83f7553439409171a0c", "message": "FM2-84 : Additional properties to allergyIntolerance resource", "committedDate": "2020-02-24T13:41:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzMxMTk0NQ==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/84#discussion_r383311945", "bodyText": "I don't think this is a great mapping. There are lots of reasons the Allergy instance might get updated without that necessarily corresponding to an occurrence of the allergy. I would suggest that we propose the lastOccurrence date as something added to the OpenMRS core data model. In particular, it would probably be good to add something like a \"reactionDate\" property to AllergyReaction and calculate the lastOccurrence from that. For now, could we eliminate this mapping?\nOtherwise, this LGTM.", "author": "ibacher", "createdAt": "2020-02-24T14:55:27Z", "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/AllergyIntoleranceTranslatorImpl.java", "diffHunk": "@@ -50,6 +61,10 @@ public AllergyIntolerance toFhirResource(Allergy omrsAllergy) {\n \t\t\t}\n \t\t}\n \t\tallergy.setClinicalStatus(setClinicalStatus(omrsAllergy.getVoided()));\n+\t\tallergy.setPatient(patientReferenceTranslator.toFhirResource(omrsAllergy.getPatient()));\n+\t\tallergy.setRecorder(practitionerReferenceTranslator.toFhirResource(omrsAllergy.getCreator()));\n+\t\tallergy.setRecordedDate(omrsAllergy.getDateCreated());\n+\t\tallergy.setLastOccurrence(omrsAllergy.getDateLastUpdated());", "originalCommit": "89ed11b44ec565ab916ba83f7553439409171a0c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM0OTI0OA==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/84#discussion_r383349248", "bodyText": "@ibacher this makes sense, this  \"reactionDate\" would be a  better approach. Removing this for now. I'll post this on talk and see if they'll resolve to adding this property", "author": "jecihjoy", "createdAt": "2020-02-24T15:53:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzMxMTk0NQ=="}], "type": "inlineReview"}, {"oid": "55207a66b0a14784c11c718d85582d653dfab073", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/55207a66b0a14784c11c718d85582d653dfab073", "message": "FM2-84 : Additional properties to allergyIntolerance resource", "committedDate": "2020-02-24T15:59:05Z", "type": "commit"}, {"oid": "55207a66b0a14784c11c718d85582d653dfab073", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/55207a66b0a14784c11c718d85582d653dfab073", "message": "FM2-84 : Additional properties to allergyIntolerance resource", "committedDate": "2020-02-24T15:59:05Z", "type": "forcePushed"}]}