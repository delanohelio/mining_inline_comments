{"pr_number": 195, "pr_title": "FM2-167: Update AllergyIntolerance resource to support paging", "pr_createdAt": "2020-06-05T19:04:19Z", "pr_url": "https://github.com/openmrs/openmrs-module-fhir2/pull/195", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU5OTE2NQ==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/195#discussion_r436599165", "bodyText": "Can you add 2 or more tests, which test for complex queries i.e\n\ncombines two or more search parameters e.g by patientUuid(subject), severity, clinical status\ntwo or more plus sort", "author": "corneliouzbett", "createdAt": "2020-06-08T10:28:16Z", "path": "api/src/test/java/org/openmrs/module/fhir2/api/search/AllergyIntoleranceSearchQueryImplTest.java", "diffHunk": "@@ -0,0 +1,473 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.search;\n+\n+import static org.hamcrest.CoreMatchers.equalTo;\n+import static org.hamcrest.CoreMatchers.notNullValue;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.greaterThanOrEqualTo;\n+import static org.hamcrest.Matchers.hasItem;\n+import static org.hamcrest.Matchers.hasProperty;\n+import static org.mockito.Mockito.when;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+import ca.uhn.fhir.rest.api.server.IBundleProvider;\n+import ca.uhn.fhir.rest.param.ReferenceAndListParam;\n+import ca.uhn.fhir.rest.param.ReferenceOrListParam;\n+import ca.uhn.fhir.rest.param.ReferenceParam;\n+import ca.uhn.fhir.rest.param.TokenAndListParam;\n+import ca.uhn.fhir.rest.param.TokenOrListParam;\n+import ca.uhn.fhir.rest.param.TokenParam;\n+import org.hibernate.SessionFactory;\n+import org.hl7.fhir.instance.model.api.IBaseResource;\n+import org.hl7.fhir.r4.model.AllergyIntolerance;\n+import org.hl7.fhir.r4.model.Patient;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.mockito.Mock;\n+import org.openmrs.Allergy;\n+import org.openmrs.module.fhir2.FhirConstants;\n+import org.openmrs.module.fhir2.TestFhirSpringConfiguration;\n+import org.openmrs.module.fhir2.api.FhirGlobalPropertyService;\n+import org.openmrs.module.fhir2.api.dao.FhirAllergyIntoleranceDao;\n+import org.openmrs.module.fhir2.api.dao.impl.FhirAllergyIntoleranceDaoImpl;\n+import org.openmrs.module.fhir2.api.search.param.SearchParameterMap;\n+import org.openmrs.module.fhir2.api.translators.AllergyIntoleranceTranslator;\n+import org.openmrs.module.fhir2.api.translators.impl.AllergyIntoleranceSeverityTranslatorImpl;\n+import org.openmrs.test.BaseModuleContextSensitiveTest;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.test.context.ContextConfiguration;\n+\n+@ContextConfiguration(classes = TestFhirSpringConfiguration.class, inheritLocations = false)\n+public class AllergyIntoleranceSearchQueryImplTest extends BaseModuleContextSensitiveTest {", "originalCommit": "c5fc4b8c0af402ce455f62bf0dda748158851654", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYwOTE4MQ==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/195#discussion_r436609181", "bodyText": "Sure @corneliouzbett . Can we also change the access levels of getters and setters in all Dao classes because we might not get access in the search query test package ?", "author": "varung-31", "createdAt": "2020-06-08T10:48:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU5OTE2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc4MjIwMg==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/195#discussion_r436782202", "bodyText": "@ibacher  Can you take a look at my comment as well ?", "author": "varung-31", "createdAt": "2020-06-08T15:09:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU5OTE2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc4NTYyNA==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/195#discussion_r436785624", "bodyText": "@varung-31 What do you need access to that you don't already have access to from the search query? We want to keep the public interfaces as minimal as we can.", "author": "ibacher", "createdAt": "2020-06-08T15:14:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU5OTE2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc4ODYzMw==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/195#discussion_r436788633", "bodyText": "@ibacher  Sorry, I forgot to mention. I am having a problem mocking some objects in the test classes because of restricted access, like what happened with mocking GlobalPropertyService in case of AllergyIntolerance resource. I had to change the translator and BaseFhirDao setter access to PUBLIC.", "author": "varung-31", "createdAt": "2020-06-08T15:18:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU5OTE2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk4NjU5NA==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/195#discussion_r436986594", "bodyText": "@varung-31 I see. I think there's a cleaner way to handle this, which I've committed to this PR. The FhirGlobalPropertyService is (hopefully)  bit of a special case.", "author": "ibacher", "createdAt": "2020-06-08T20:38:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU5OTE2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMzODc3MA==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/195#discussion_r437338770", "bodyText": "Thanks @ibacher", "author": "varung-31", "createdAt": "2020-06-09T11:32:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU5OTE2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk2NzQ2NA==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/195#discussion_r437967464", "bodyText": "The build is failing because the module is unable to connect to openmrs database. Any idea why that is happening?\nThe tests are working locally, but on mvn clean install, this build failure pops up.", "author": "varung-31", "createdAt": "2020-06-10T08:54:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU5OTE2NQ=="}], "type": "inlineReview"}, {"oid": "e802001aa32ba1ccd776dbbdaf17cc5fe8e10892", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/e802001aa32ba1ccd776dbbdaf17cc5fe8e10892", "message": "FM2-167: Update AllergyIntolerance resource to support paging", "committedDate": "2020-06-08T20:31:33Z", "type": "commit"}, {"oid": "e802001aa32ba1ccd776dbbdaf17cc5fe8e10892", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/e802001aa32ba1ccd776dbbdaf17cc5fe8e10892", "message": "FM2-167: Update AllergyIntolerance resource to support paging", "committedDate": "2020-06-08T20:31:33Z", "type": "forcePushed"}, {"oid": "9306ca2f51f17fa5702c70c4ecbda35167d0ddc3", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/9306ca2f51f17fa5702c70c4ecbda35167d0ddc3", "message": "FM2-193: Generate default narratives provided by HAPI FHIR (#194)", "committedDate": "2020-06-09T16:19:46Z", "type": "commit"}, {"oid": "791581eedc5fcdd304a71df2deb1ea4fd5fd6ed9", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/791581eedc5fcdd304a71df2deb1ea4fd5fd6ed9", "message": "Some refactoring", "committedDate": "2020-06-09T17:52:38Z", "type": "commit"}, {"oid": "8c0c9ac2a15950bdc9382f0d4b8cf4ffe018e4dc", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/8c0c9ac2a15950bdc9382f0d4b8cf4ffe018e4dc", "message": "FM2-167: Update AllergyIntolerance resource to support paging", "committedDate": "2020-06-10T10:15:49Z", "type": "commit"}]}