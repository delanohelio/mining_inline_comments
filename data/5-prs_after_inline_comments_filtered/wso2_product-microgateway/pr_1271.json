{"pr_number": 1271, "pr_title": "Fix #1270 - Improve per API mutual ssl validation logic", "pr_createdAt": "2020-06-10T13:30:05Z", "pr_url": "https://github.com/wso2/product-microgateway/pull/1271", "timeline": [{"oid": "1e8ed85d1725d2b7b80eb8cb780b6f7cf177d675", "url": "https://github.com/wso2/product-microgateway/commit/1e8ed85d1725d2b7b80eb8cb780b6f7cf177d675", "message": "Fix #1270 - Improve per API mutual ssl validation logic", "committedDate": "2020-06-10T13:28:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY3NjM1OA==", "url": "https://github.com/wso2/product-microgateway/pull/1271#discussion_r438676358", "bodyText": "If when throwing the error here will also log the error msg, then calling log.error() again may not be needed.", "author": "AmaliMatharaarachchi", "createdAt": "2020-06-11T10:00:25Z", "path": "components/micro-gateway-core/src/main/java/org/wso2/micro/gateway/core/mutualssl/CertificateUtils.java", "diffHunk": "@@ -34,19 +37,24 @@\n  * This class is responsible for do certificate level functionalities.\n  */\n public class CertificateUtils {\n+    private static final Logger log = LogManager.getLogger(CertificateUtils.class);\n \n-    public static String getAliasFromHeaderCert(String base64EncodedCertificate) throws  KeyStoreException,\n-            java.security.cert.CertificateException, CertificateException {\n-        base64EncodedCertificate = URLDecoder.decode(base64EncodedCertificate).\n-                replaceAll(Constants.BEGIN_CERTIFICATE_STRING, \"\")\n-                .replaceAll(Constants.END_CERTIFICATE_STRING, \"\");\n-        byte[] bytes = Base64.decodeBase64(base64EncodedCertificate);\n-        InputStream inputStream = new ByteArrayInputStream(bytes);\n-        X509Certificate x509Certificate = X509Certificate.getInstance(inputStream);\n-        if (getAliasFromTrustStore(x509Certificate, LoadKeyStore.trustStore) != null) {\n-            return getAliasFromTrustStore(x509Certificate, LoadKeyStore.trustStore);\n-        } else {\n-            return \"\";\n+    public static String getAliasFromHeaderCert(String base64EncodedCertificate) {\n+        try {\n+            base64EncodedCertificate = URLDecoder.decode(base64EncodedCertificate).\n+                    replaceAll(Constants.BEGIN_CERTIFICATE_STRING, \"\").replaceAll(Constants.END_CERTIFICATE_STRING, \"\");\n+            byte[] bytes = Base64.decodeBase64(base64EncodedCertificate);\n+            InputStream inputStream = new ByteArrayInputStream(bytes);\n+            X509Certificate x509Certificate = X509Certificate.getInstance(inputStream);\n+            if (getAliasFromTrustStore(x509Certificate, LoadKeyStore.trustStore) != null) {\n+                return getAliasFromTrustStore(x509Certificate, LoadKeyStore.trustStore);\n+            } else {\n+                return \"\";\n+            }\n+        } catch (KeyStoreException | java.security.cert.CertificateException | CertificateException e) {\n+            String msg = \"Error while decoding certificate present in the header and validating with the trust store.\";\n+            log.error(msg, e);\n+            throw ErrorUtils.getBallerinaError(msg, e);", "originalCommit": "1e8ed85d1725d2b7b80eb8cb780b6f7cf177d675", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY4NTE5NQ==", "url": "https://github.com/wso2/product-microgateway/pull/1271#discussion_r438685195", "bodyText": "If we do not log error here, it would not log the stack trace properly. We need to log the error here properly, and pass the error to ballerina level to handle from there.", "author": "Rajith90", "createdAt": "2020-06-11T10:17:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY3NjM1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE3Njk2MQ==", "url": "https://github.com/wso2/product-microgateway/pull/1271#discussion_r439176961", "bodyText": "explicit else note required", "author": "praminda", "createdAt": "2020-06-12T02:41:49Z", "path": "components/micro-gateway-core/src/main/java/org/wso2/micro/gateway/core/mutualssl/CertificateUtils.java", "diffHunk": "@@ -69,17 +77,21 @@ public static String getAliasFromTrustStore(X509Certificate certificate, KeyStor\n     /**\n      * Used to get the certificate alias for a certificate which is get from the Request .\n      */\n-    public static String getAliasFromRequest(String certB64) throws java.security.cert.CertificateException,\n-            KeyStoreException {\n-        byte[] decoded = java.util.Base64.getDecoder().decode(certB64);\n-        java.security.cert.X509Certificate cert = (java.security.cert.X509Certificate)\n-                CertificateFactory.getInstance(\"X.509\")\n-                .generateCertificate(new ByteArrayInputStream(decoded));\n-        String certificateAlias = LoadKeyStore.trustStore.getCertificateAlias(cert);\n-        if (certificateAlias != null) {\n-            return certificateAlias;\n-        } else {\n-            return \"\";\n+    public static String getAliasFromRequest(String certB64) {\n+        try {\n+            byte[] decoded = java.util.Base64.getDecoder().decode(certB64);\n+            java.security.cert.X509Certificate cert = (java.security.cert.X509Certificate) CertificateFactory\n+                    .getInstance(\"X.509\").generateCertificate(new ByteArrayInputStream(decoded));\n+            String certificateAlias = LoadKeyStore.trustStore.getCertificateAlias(cert);\n+            if (certificateAlias != null) {\n+                return certificateAlias;\n+            } else {", "originalCommit": "1e8ed85d1725d2b7b80eb8cb780b6f7cf177d675", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE3NzAxOQ==", "url": "https://github.com/wso2/product-microgateway/pull/1271#discussion_r439177019", "bodyText": "explicit else not required", "author": "praminda", "createdAt": "2020-06-12T02:42:06Z", "path": "components/micro-gateway-core/src/main/java/org/wso2/micro/gateway/core/mutualssl/CertificateUtils.java", "diffHunk": "@@ -34,19 +37,24 @@\n  * This class is responsible for do certificate level functionalities.\n  */\n public class CertificateUtils {\n+    private static final Logger log = LogManager.getLogger(CertificateUtils.class);\n \n-    public static String getAliasFromHeaderCert(String base64EncodedCertificate) throws  KeyStoreException,\n-            java.security.cert.CertificateException, CertificateException {\n-        base64EncodedCertificate = URLDecoder.decode(base64EncodedCertificate).\n-                replaceAll(Constants.BEGIN_CERTIFICATE_STRING, \"\")\n-                .replaceAll(Constants.END_CERTIFICATE_STRING, \"\");\n-        byte[] bytes = Base64.decodeBase64(base64EncodedCertificate);\n-        InputStream inputStream = new ByteArrayInputStream(bytes);\n-        X509Certificate x509Certificate = X509Certificate.getInstance(inputStream);\n-        if (getAliasFromTrustStore(x509Certificate, LoadKeyStore.trustStore) != null) {\n-            return getAliasFromTrustStore(x509Certificate, LoadKeyStore.trustStore);\n-        } else {\n-            return \"\";\n+    public static String getAliasFromHeaderCert(String base64EncodedCertificate) {\n+        try {\n+            base64EncodedCertificate = URLDecoder.decode(base64EncodedCertificate).\n+                    replaceAll(Constants.BEGIN_CERTIFICATE_STRING, \"\").replaceAll(Constants.END_CERTIFICATE_STRING, \"\");\n+            byte[] bytes = Base64.decodeBase64(base64EncodedCertificate);\n+            InputStream inputStream = new ByteArrayInputStream(bytes);\n+            X509Certificate x509Certificate = X509Certificate.getInstance(inputStream);\n+            if (getAliasFromTrustStore(x509Certificate, LoadKeyStore.trustStore) != null) {\n+                return getAliasFromTrustStore(x509Certificate, LoadKeyStore.trustStore);\n+            } else {", "originalCommit": "1e8ed85d1725d2b7b80eb8cb780b6f7cf177d675", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9b9a928f6cb340aa861d5a89490e0662424046d4", "url": "https://github.com/wso2/product-microgateway/commit/9b9a928f6cb340aa861d5a89490e0662424046d4", "message": "Fix review suggestions", "committedDate": "2020-06-12T06:20:57Z", "type": "commit"}]}