{"pr_number": 89, "pr_title": "Style guide changes, API updates for android and PDF library replaced", "pr_createdAt": "2020-04-04T15:52:19Z", "pr_url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/89", "timeline": [{"oid": "8557874adb41f20cb46b3fe251f2c71a9033b193", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/8557874adb41f20cb46b3fe251f2c71a9033b193", "message": "1.itextPdf replaced with Pdfbox(Added PDFWriter class)\n2.Deactivate account api changes\n3.Offline sync issue fixes\n4.version checker code optimization(Added Version class)\n5.Branding changes(images and text changes)\n6.Removed unused codes\n7.Removed unused string file\n8.Removed unwanted commented code\n9.Removed unwanted dependencies", "committedDate": "2020-04-04T15:38:27Z", "type": "commit"}, {"oid": "1f4ee17fd5c67455c524758b82de1d5ffc1a1bd6", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/1f4ee17fd5c67455c524758b82de1d5ffc1a1bd6", "message": "Updated Google Copyright", "committedDate": "2020-04-04T15:49:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE1Nzc2NQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/89#discussion_r404157765", "bodyText": "should this log the error instead?", "author": "zohrehj", "createdAt": "2020-04-06T14:56:37Z", "path": "Android/app/src/main/java/com/harvard/studyappmodule/consent/CustomConsentViewTaskActivity.java", "diffHunk": "@@ -718,24 +713,20 @@ private String genarateConsentPDF() {\n       JSONObject lastNameResult = lastNameObj.getJSONObject(\"results\");\n       String lastName = lastNameResult.getString(\"answer\");\n \n+      try {\n+        StepResult result = taskResult.getStepResult(\"sharing\");\n+        if (result != null) {\n+          JSONObject resultObj = new JSONObject(result.getResults().toString());\n+          SharingConsent = resultObj.get(\"answer\").toString();\n+        }\n+      } catch (Exception e) {\n+        e.printStackTrace();", "originalCommit": "8557874adb41f20cb46b3fe251f2c71a9033b193", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY2OTE0Mg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/89#discussion_r405669142", "bodyText": "updated in the latest commit", "author": "naveenr-btc", "createdAt": "2020-04-08T16:50:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE1Nzc2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE1ODA0Mw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/89#discussion_r404158043", "bodyText": "please remove", "author": "zohrehj", "createdAt": "2020-04-06T14:56:58Z", "path": "Android/app/src/main/java/com/harvard/studyappmodule/consent/CustomConsentViewTaskActivity.java", "diffHunk": "@@ -783,95 +769,123 @@ private String genarateConsentPDF() {\n             docBuilder.append(\"</br>\");\n             docBuilder.append(\"</br>\");\n           }\n-          consentItem = new Paragraph(Html.fromHtml(docBuilder.toString()).toString());\n+          //          docBuilder.append(Html.fromHtml(docBuilder.toString()).toString());", "originalCommit": "8557874adb41f20cb46b3fe251f2c71a9033b193", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY2OTMwNw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/89#discussion_r405669307", "bodyText": "removed in the latest commit", "author": "naveenr-btc", "createdAt": "2020-04-08T16:51:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE1ODA0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE1OTY2NQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/89#discussion_r404159665", "bodyText": "all these printStackTrace lines should log unexpected errors instead.", "author": "zohrehj", "createdAt": "2020-04-06T14:58:56Z", "path": "Android/app/src/main/java/com/harvard/studyappmodule/consent/CustomConsentViewTaskActivity.java", "diffHunk": "@@ -783,95 +769,123 @@ private String genarateConsentPDF() {\n             docBuilder.append(\"</br>\");\n             docBuilder.append(\"</br>\");\n           }\n-          consentItem = new Paragraph(Html.fromHtml(docBuilder.toString()).toString());\n+          //          docBuilder.append(Html.fromHtml(docBuilder.toString()).toString());\n         } else {\n-          consentItem = new Paragraph(\"\");\n+          docBuilder.append(\"\");\n         }\n       } else {\n-        consentItem = new Paragraph(\"\");\n+        docBuilder.append(\"\");\n       }\n-      StringBuilder docBuilder =\n+      StringBuilder agreeBuilder =\n           new StringBuilder(\"</br><div style=\\\"padding: 10px 10px 10px 10px;\\\" class='header'>\");\n       String participant = getResources().getString(R.string.participant);\n-      docBuilder.append(String.format(\"<p style=\\\"text-align: center\\\">%1$s</p>\", participant));\n+      agreeBuilder.append(String.format(\"<p style=\\\"text-align: center\\\">%1$s</p>\", participant));\n       String detail = getResources().getString(R.string.agree_participate_research_study);\n-      docBuilder.append(String.format(\"<p style=\\\"text-align: center\\\">%1$s</p>\", detail));\n-      consentItem.add(Html.fromHtml(docBuilder.toString()).toString());\n-\n-      byte[] signatureBytes;\n-      Image myImg = null;\n-      if (signatureBase64 != null) {\n-        signatureBytes = Base64.decode(signatureBase64, Base64.DEFAULT);\n-        myImg = Image.getInstance(signatureBytes);\n-        myImg.setScaleToFitHeight(true);\n-        myImg.scalePercent(50f);\n+      agreeBuilder.append(String.format(\"<p style=\\\"text-align: center\\\">%1$s</p>\", detail));\n+\n+      PDFWriter pdfWriter = new PDFWriter(\"/data/data/\" + getPackageName() + \"/files/\", timeStamp);\n+      pdfWriter.createPdfFile(CustomConsentViewTaskActivity.this);\n+      String heading = \"\";\n+      StringBuffer pageText = new StringBuffer();\n+      String[] doc_string = docBuilder.toString().split(\"</br>\");\n+      if (doc_string.length > 0) {\n+        for (String s : doc_string) {\n+          pageText.append(Html.fromHtml(s).toString().replace(\"\\n\", \"\"));\n+          pageText.append(System.getProperty(\"line.separator\"));\n+        }\n       }\n \n-      PdfPTable table = new PdfPTable(3);\n-      table.setWidthPercentage(100);\n-      table.addCell(getCell(firstName + \" \" + lastName, PdfPCell.ALIGN_CENTER));\n-      table.addCell(getImage(myImg, PdfPCell.ALIGN_CENTER));\n-      table.addCell(getCell(signatureDate, PdfPCell.ALIGN_CENTER));\n-      consentItem.add(table);\n-\n-      PdfPTable table1 = new PdfPTable(3);\n-      table1.setWidthPercentage(100);\n-      table1.addCell(\n-          getCell(getResources().getString(R.string.participans_name), PdfPCell.ALIGN_CENTER));\n-      table1.addCell(\n-          getCell(\n-              getResources().getString(R.string.participants_signature), PdfPCell.ALIGN_CENTER));\n-      table1.addCell(getCell(getResources().getString(R.string.date), PdfPCell.ALIGN_CENTER));\n-      consentItem.add(table1);\n-\n-      document.add(consentItem);\n-      document.close();\n+      String[] agree_string = agreeBuilder.toString().split(\"</p>\");\n+      if (agree_string.length > 0) {\n+        for (String s : agree_string) {\n+          pageText.append(Html.fromHtml(s).toString().replace(\"\\n\", \"\"));\n+          pageText.append(System.getProperty(\"line.separator\"));\n+        }\n+      }\n+      pageText.append(System.getProperty(\"line.separator\"));\n+      pageText.append(System.getProperty(\"line.separator\"));\n+      pageText.append(\"------------------------------------\");\n+      pageText.append(System.getProperty(\"line.separator\"));\n+      pageText.append(System.getProperty(\"line.separator\"));\n+\n+      pageText\n+          .append(getResources().getString(R.string.participans_name))\n+          .append(\": \")\n+          .append(firstName)\n+          .append(\" \")\n+          .append(lastName);\n+      pageText.append(System.getProperty(\"line.separator\"));\n+      pageText.append(getResources().getString(R.string.date)).append(\": \").append(signatureDate);\n+      pageText.append(System.getProperty(\"line.separator\"));\n+      pageText.append(getResources().getString(R.string.participants_signature));\n+\n+      Bitmap bitmap =\n+          BitmapFactory.decodeByteArray(\n+              Base64.decode(signatureBase64, Base64.DEFAULT),\n+              0,\n+              Base64.decode(signatureBase64, Base64.DEFAULT).length);\n+      File sign = new File(\"/data/data/\" + getPackageName() + \"/files/\" + \"signature\" + \".png\");\n+      saveBitmap(sign, bitmap);\n+      pdfWriter.addPage(heading, pageText, sign.getPath());\n+      pdfWriter.saveAndClose();\n+      sign.delete();\n \n       // encrypt the genarated pdf\n       File encryptFile =\n           AppController.genarateEncryptedConsentPDF(\n-              \"/data/data/\" + getPackageName() + \"/files/\", mFileName);\n+              \"/data/data/\" + getPackageName() + \"/files/\", timeStamp);\n       filepath = encryptFile.getAbsolutePath();\n       // After encryption delete the pdf file\n       if (encryptFile != null) {\n-        File file = new File(\"/data/data/\" + getPackageName() + \"/files/\" + mFileName + \".pdf\");\n+        File file = new File(\"/data/data/\" + getPackageName() + \"/files/\" + timeStamp + \".pdf\");\n         file.delete();\n       }\n \n-    } catch (IOException | DocumentException e) {\n-      Toast.makeText(\n-              CustomConsentViewTaskActivity.this, R.string.not_able_create_pdf, Toast.LENGTH_SHORT)\n-          .show();\n-      Logger.log(e);\n-    } catch (JSONException e) {\n-      Logger.log(e);\n     } catch (Exception e) {\n       Logger.log(e);\n     }\n     return filepath;\n   }\n \n-  public PdfPCell getImage(Image image, int alignment) {\n-    PdfPCell cell;\n-    if (image != null) {\n-      cell = new PdfPCell(image);\n-    } else {\n-      cell = new PdfPCell();\n+  public void saveBitmap(File f, Bitmap mBitmap) {\n+\n+    FileOutputStream fOut = null;\n+    try {\n+      fOut = new FileOutputStream(f);\n+    } catch (FileNotFoundException e) {\n+      e.printStackTrace();", "originalCommit": "8557874adb41f20cb46b3fe251f2c71a9033b193", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY2OTM4OA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/89#discussion_r405669388", "bodyText": "updated in the latest commit", "author": "naveenr-btc", "createdAt": "2020-04-08T16:51:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE1OTY2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE2MDIyNg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/89#discussion_r404160226", "bodyText": "If this is a new file it should only have Google copyright header", "author": "zohrehj", "createdAt": "2020-04-06T14:59:37Z", "path": "Android/app/src/main/java/com/harvard/studyappmodule/consent/PDFWriter.java", "diffHunk": "@@ -0,0 +1,187 @@\n+/*\n+ * Copyright \u00a9 2017-2019 Harvard Pilgrim Health Care Institute (HPHCI) and its Contributors.", "originalCommit": "8557874adb41f20cb46b3fe251f2c71a9033b193", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY2OTg5NA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/89#discussion_r405669894", "bodyText": "This was already updated in the last commit", "author": "naveenr-btc", "createdAt": "2020-04-08T16:52:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE2MDIyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE2MzAyOQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/89#discussion_r404163029", "bodyText": "new files should only have Google copyright header", "author": "zohrehj", "createdAt": "2020-04-06T15:03:21Z", "path": "Android/app/src/main/java/com/harvard/utils/version/Version.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Copyright \u00a9 2017-2019 Harvard Pilgrim Health Care Institute (HPHCI) and its Contributors.\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and\n+ * associated documentation files (the \"Software\"), to deal in the Software without restriction, including\n+ * without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in all copies or substantial\n+ * portions of the Software.\n+ *\n+ * Funding Source: Food and Drug Administration (\u201cFunding Agency\u201d) effective 18 September 2014 as Contract no. HHSF22320140030I/HHSF22301006T (the \u201cPrime Contract\u201d).\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n+ */\n+\n+package com.harvard.utils.version;", "originalCommit": "8557874adb41f20cb46b3fe251f2c71a9033b193", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE2MzcwOA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/89#discussion_r404163708", "bodyText": "why was this flag changed?", "author": "zohrehj", "createdAt": "2020-04-06T15:04:15Z", "path": "Android/app/src/main/java/com/harvard/utils/version/VersionChecker.java", "diffHunk": "@@ -32,16 +30,14 @@\n public class VersionChecker extends AsyncTask<String, String, String> {\n \n   private String newVersion;\n-  private boolean force = false;\n+  private boolean force = true;", "originalCommit": "8557874adb41f20cb46b3fe251f2c71a9033b193", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY3MDY1MQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/89#discussion_r405670651", "bodyText": "for testing we had made this changes, reverted back to \"false\" in the latest commit", "author": "naveenr-btc", "createdAt": "2020-04-08T16:53:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE2MzcwOA=="}], "type": "inlineReview"}, {"oid": "48fb70b8c2ae997bef31d3ecb81e2b1205dbd856", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/48fb70b8c2ae997bef31d3ecb81e2b1205dbd856", "message": "1.File name changed to make it generic\n2.Removed duplicate strings\n3.Changed Lorem ipsum text to <Introductory content paragraph goes here>", "committedDate": "2020-04-08T16:38:27Z", "type": "commit"}, {"oid": "a6c9f297cbd700a9ec7ab5fa0e0369fd2a164657", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/a6c9f297cbd700a9ec7ab5fa0e0369fd2a164657", "message": "Merge branch 'early-access' into early-access-Android", "committedDate": "2020-04-08T17:28:11Z", "type": "commit"}]}