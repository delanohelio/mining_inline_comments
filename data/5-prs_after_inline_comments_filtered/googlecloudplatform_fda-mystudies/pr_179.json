{"pr_number": 179, "pr_title": "code push with below list of changes: Please find the latest PR descr\u2026", "pr_createdAt": "2020-04-20T14:59:07Z", "pr_url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179", "timeline": [{"oid": "7afa91b9d9c68725e003a9f4983a1d91730ddee5", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/7afa91b9d9c68725e003a9f4983a1d91730ddee5", "message": "code push with below list of changes: Please find the latest PR description:\n\n1. Tinymce text editor replacement with Bootstrap (MIT license) in Study Builder due to 3rd party library license of tinymce is restricted by Google Open source.\n2. Changes to send an Email stating your account has been locked when account is locked for WCP as part HIPAA Compliance.\n3. Internal QA issue fix for UpdateStudyState Api for bookmarked scenario in Enroll Mgmt bundle.\n4. Internal QA issue fix Study State Api to handle NullPointer Exception in Enroll Mgmt bundle.\n5. BO Changes in Enroll Mgmt and Consent Mgmt bundle to synch accross all 3 components.", "committedDate": "2020-04-20T14:52:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU5ODI4OA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r411598288", "bodyText": "please do not modify copyright format.", "author": "zohrehj", "createdAt": "2020-04-20T18:29:41Z", "path": "WCP/fdahpStudyDesigner/src/main/java/com/fdahpstudydesigner/dao/LoginDAOImpl.java", "diffHunk": "@@ -1,24 +1,23 @@\n /*\n  * Copyright \u00a9 2017-2018 Harvard Pilgrim Health Care Institute (HPHCI) and its Contributors.\n+ * Copyright 2020 Google LLC\n  * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and\n- * associated documentation files (the \"Software\"), to deal in the Software without restriction, including\n- * without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n- * of the Software, and to permit persons to whom the Software is furnished to do so, subject to the\n- * following conditions:\n+ * associated documentation files (the \"Software\"), to deal in the Software without restriction,", "originalCommit": "7afa91b9d9c68725e003a9f4983a1d91730ddee5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgzODA5Nw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r413838097", "bodyText": "@zohrehj modified the copy right text as the class had been modified to implement Account Locking of user for invalid login attempts with invalid credentials. However let us know if still needs to keep the original copyright text", "author": "aswinijena100", "createdAt": "2020-04-23T14:21:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU5ODI4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY4MTI4Mw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r414681283", "bodyText": "My comment was regarding the line break and format changes. Please do not change the format of the existing text. Let's keep them consistent across all files.", "author": "zohrehj", "createdAt": "2020-04-24T15:51:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU5ODI4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY4Mjc3NQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r414682775", "bodyText": "please revert the format changes only.\nAdding the google copyright line is the right decision and should not be reverted.", "author": "zohrehj", "createdAt": "2020-04-24T15:53:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU5ODI4OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU5OTY5OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r411599699", "bodyText": "I am not seeing oldEmail and type being used anywhere.", "author": "zohrehj", "createdAt": "2020-04-20T18:31:58Z", "path": "WCP/fdahpStudyDesigner/src/main/java/com/fdahpstudydesigner/service/LoginService.java", "diffHunk": "@@ -49,4 +48,7 @@ public String changePassword(\n \n   public String sendPasswordResetLinkToMail(\n       HttpServletRequest request, String email, String oldEmail, String type);\n+\n+  public String sendLockedAccountPasswordResetLinkToMail(\n+      String email, String oldEmail, String type);", "originalCommit": "7afa91b9d9c68725e003a9f4983a1d91730ddee5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgzODM0NQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r413838345", "bodyText": "Resolved", "author": "aswinijena100", "createdAt": "2020-04-23T14:21:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU5OTY5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYwMDM5MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r411600390", "bodyText": "what is type? please use a more descriptive name or add a comment.", "author": "zohrehj", "createdAt": "2020-04-20T18:33:06Z", "path": "WCP/fdahpStudyDesigner/src/main/java/com/fdahpstudydesigner/service/LoginServiceImpl.java", "diffHunk": "@@ -570,4 +569,88 @@ public String validateAccessCode(String securityToken, String accessCode) {\n     logger.info(\"LoginServiceImpl - checkSecurityToken() - Ends\");\n     return result;\n   }\n+\n+  @Override\n+  public String sendLockedAccountPasswordResetLinkToMail(\n+      String email, String oldEmail, String type) {", "originalCommit": "7afa91b9d9c68725e003a9f4983a1d91730ddee5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgzODc4Mw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r413838783", "bodyText": "Removed type , as not required in this case", "author": "aswinijena100", "createdAt": "2020-04-23T14:22:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYwMDM5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYwMTYxNg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r411601616", "bodyText": "keyValueForSubject2 is not used anywhere, please remove.", "author": "zohrehj", "createdAt": "2020-04-20T18:35:02Z", "path": "WCP/fdahpStudyDesigner/src/main/java/com/fdahpstudydesigner/service/LoginServiceImpl.java", "diffHunk": "@@ -570,4 +569,88 @@ public String validateAccessCode(String securityToken, String accessCode) {\n     logger.info(\"LoginServiceImpl - checkSecurityToken() - Ends\");\n     return result;\n   }\n+\n+  @Override\n+  public String sendLockedAccountPasswordResetLinkToMail(\n+      String email, String oldEmail, String type) {\n+\n+    logger.info(\"LoginServiceImpl - sendLockedAccountPasswordResetLinkToMail - Starts\");\n+    Map<String, String> propMap = FdahpStudyDesignerUtil.getAppProperties();\n+    String passwordResetToken = null;\n+    String message = propMap.get(\"user.forgot.error.msg\");\n+    boolean flag = false;\n+    UserBO userdetails = null;\n+    String accessCode = \"\";\n+    Map<String, String> keyValueForSubject = null;\n+    Map<String, String> keyValueForSubject2 = null;", "originalCommit": "7afa91b9d9c68725e003a9f4983a1d91730ddee5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgzOTAyNA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r413839024", "bodyText": "Removed keyValueForSubject2 , as not required in this case", "author": "aswinijena100", "createdAt": "2020-04-23T14:22:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYwMTYxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYwMjE2Mw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r411602163", "bodyText": "this check is not needed, considering passwordResetToken was created right above.", "author": "zohrehj", "createdAt": "2020-04-20T18:35:58Z", "path": "WCP/fdahpStudyDesigner/src/main/java/com/fdahpstudydesigner/service/LoginServiceImpl.java", "diffHunk": "@@ -570,4 +569,88 @@ public String validateAccessCode(String securityToken, String accessCode) {\n     logger.info(\"LoginServiceImpl - checkSecurityToken() - Ends\");\n     return result;\n   }\n+\n+  @Override\n+  public String sendLockedAccountPasswordResetLinkToMail(\n+      String email, String oldEmail, String type) {\n+\n+    logger.info(\"LoginServiceImpl - sendLockedAccountPasswordResetLinkToMail - Starts\");\n+    Map<String, String> propMap = FdahpStudyDesignerUtil.getAppProperties();\n+    String passwordResetToken = null;\n+    String message = propMap.get(\"user.forgot.error.msg\");\n+    boolean flag = false;\n+    UserBO userdetails = null;\n+    String accessCode = \"\";\n+    Map<String, String> keyValueForSubject = null;\n+    Map<String, String> keyValueForSubject2 = null;\n+    String dynamicContent = \"\";\n+    String acceptLinkMail = \"\";\n+    int passwordResetLinkExpirationInHour =\n+        Integer.parseInt(propMap.get(\"accountlocked.resetLink.expiration.in.hour\"));\n+    String customerCareMail = \"\";\n+    String contact = \"\";\n+    try {\n+      passwordResetToken = RandomStringUtils.randomAlphanumeric(10);\n+      accessCode = RandomStringUtils.randomAlphanumeric(6);\n+      if (!StringUtils.isEmpty(passwordResetToken)) {", "originalCommit": "7afa91b9d9c68725e003a9f4983a1d91730ddee5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgzOTM1Ng==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r413839356", "bodyText": "Resolved", "author": "aswinijena100", "createdAt": "2020-04-23T14:22:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYwMjE2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYwMzgyNQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r411603825", "bodyText": "looks like type can be either empty or \"USER_UPDATE\"; does it make more sense to pass a boolean value  instead?", "author": "zohrehj", "createdAt": "2020-04-20T18:38:41Z", "path": "WCP/fdahpStudyDesigner/src/main/java/com/fdahpstudydesigner/service/LoginServiceImpl.java", "diffHunk": "@@ -570,4 +569,88 @@ public String validateAccessCode(String securityToken, String accessCode) {\n     logger.info(\"LoginServiceImpl - checkSecurityToken() - Ends\");\n     return result;\n   }\n+\n+  @Override\n+  public String sendLockedAccountPasswordResetLinkToMail(\n+      String email, String oldEmail, String type) {\n+\n+    logger.info(\"LoginServiceImpl - sendLockedAccountPasswordResetLinkToMail - Starts\");\n+    Map<String, String> propMap = FdahpStudyDesignerUtil.getAppProperties();\n+    String passwordResetToken = null;\n+    String message = propMap.get(\"user.forgot.error.msg\");\n+    boolean flag = false;\n+    UserBO userdetails = null;\n+    String accessCode = \"\";\n+    Map<String, String> keyValueForSubject = null;\n+    Map<String, String> keyValueForSubject2 = null;\n+    String dynamicContent = \"\";\n+    String acceptLinkMail = \"\";\n+    int passwordResetLinkExpirationInHour =\n+        Integer.parseInt(propMap.get(\"accountlocked.resetLink.expiration.in.hour\"));\n+    String customerCareMail = \"\";\n+    String contact = \"\";\n+    try {\n+      passwordResetToken = RandomStringUtils.randomAlphanumeric(10);\n+      accessCode = RandomStringUtils.randomAlphanumeric(6);\n+      if (!StringUtils.isEmpty(passwordResetToken)) {\n+        userdetails = loginDAO.getValidUserByEmail(email);\n+        if (\"\".equals(type) && userdetails.getEmailChanged()) {\n+          userdetails = null;\n+        }\n+        if (null != userdetails) {\n+          userdetails.setSecurityToken(passwordResetToken);\n+          userdetails.setAccessCode(accessCode);\n+          userdetails.setTokenUsed(false);\n+          userdetails.setTokenExpiryDate(\n+              FdahpStudyDesignerUtil.addHours(\n+                  FdahpStudyDesignerUtil.getCurrentDateTime(), passwordResetLinkExpirationInHour));\n+\n+          if (!\"USER_UPDATE\".equals(type)) {", "originalCommit": "7afa91b9d9c68725e003a9f4983a1d91730ddee5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgzOTY1NA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r413839654", "bodyText": "Resolved", "author": "aswinijena100", "createdAt": "2020-04-23T14:23:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYwMzgyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYwNDg3Mg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r411604872", "bodyText": "what is this representing?\ne.g. if it's representing whether sendEmailNotification  has succeeded, it can be renamed success or emailSent instead.", "author": "zohrehj", "createdAt": "2020-04-20T18:40:26Z", "path": "WCP/fdahpStudyDesigner/src/main/java/com/fdahpstudydesigner/service/LoginServiceImpl.java", "diffHunk": "@@ -570,4 +569,88 @@ public String validateAccessCode(String securityToken, String accessCode) {\n     logger.info(\"LoginServiceImpl - checkSecurityToken() - Ends\");\n     return result;\n   }\n+\n+  @Override\n+  public String sendLockedAccountPasswordResetLinkToMail(\n+      String email, String oldEmail, String type) {\n+\n+    logger.info(\"LoginServiceImpl - sendLockedAccountPasswordResetLinkToMail - Starts\");\n+    Map<String, String> propMap = FdahpStudyDesignerUtil.getAppProperties();\n+    String passwordResetToken = null;\n+    String message = propMap.get(\"user.forgot.error.msg\");\n+    boolean flag = false;\n+    UserBO userdetails = null;\n+    String accessCode = \"\";\n+    Map<String, String> keyValueForSubject = null;\n+    Map<String, String> keyValueForSubject2 = null;\n+    String dynamicContent = \"\";\n+    String acceptLinkMail = \"\";\n+    int passwordResetLinkExpirationInHour =\n+        Integer.parseInt(propMap.get(\"accountlocked.resetLink.expiration.in.hour\"));\n+    String customerCareMail = \"\";\n+    String contact = \"\";\n+    try {\n+      passwordResetToken = RandomStringUtils.randomAlphanumeric(10);\n+      accessCode = RandomStringUtils.randomAlphanumeric(6);\n+      if (!StringUtils.isEmpty(passwordResetToken)) {\n+        userdetails = loginDAO.getValidUserByEmail(email);\n+        if (\"\".equals(type) && userdetails.getEmailChanged()) {\n+          userdetails = null;\n+        }\n+        if (null != userdetails) {\n+          userdetails.setSecurityToken(passwordResetToken);\n+          userdetails.setAccessCode(accessCode);\n+          userdetails.setTokenUsed(false);\n+          userdetails.setTokenExpiryDate(\n+              FdahpStudyDesignerUtil.addHours(\n+                  FdahpStudyDesignerUtil.getCurrentDateTime(), passwordResetLinkExpirationInHour));\n+\n+          if (!\"USER_UPDATE\".equals(type)) {\n+            message = loginDAO.updateUserForResetPassword(userdetails);\n+          } else {\n+            message = FdahpStudyDesignerConstants.SUCCESS;\n+          }\n+          if (FdahpStudyDesignerConstants.SUCCESS.equals(message)) {\n+            if (\"USER_EMAIL_UPDATE\".equalsIgnoreCase(type)) {\n+              acceptLinkMail = propMap.get(\"emailChangeLink\").trim();\n+            } else {\n+              acceptLinkMail = propMap.get(\"acceptLinkMail\").trim();\n+            }\n+            keyValueForSubject = new HashMap<String, String>();\n+            keyValueForSubject2 = new HashMap<String, String>();\n+            keyValueForSubject.put(\"$firstName\", userdetails.getFirstName());\n+            keyValueForSubject2.put(\"$firstName\", userdetails.getFirstName());\n+            keyValueForSubject.put(\"$lastName\", userdetails.getLastName());\n+            keyValueForSubject.put(\"$accessCode\", accessCode);\n+            keyValueForSubject.put(\"$passwordResetLink\", acceptLinkMail + passwordResetToken);\n+            customerCareMail = propMap.get(\"email.address.customer.service\");\n+            keyValueForSubject.put(\"$customerCareMail\", customerCareMail);\n+            keyValueForSubject2.put(\"$customerCareMail\", customerCareMail);\n+            keyValueForSubject.put(\"$newUpdatedMail\", userdetails.getUserEmail());\n+            keyValueForSubject2.put(\"$newUpdatedMail\", userdetails.getUserEmail());\n+            keyValueForSubject.put(\"$oldMail\", oldEmail);\n+            contact = propMap.get(\"phone.number.to\");\n+            keyValueForSubject.put(\"$contact\", contact);\n+\n+            dynamicContent =\n+                FdahpStudyDesignerUtil.genarateEmailContent(\n+                    \"accountLockedContent\", keyValueForSubject);\n+            flag =", "originalCommit": "7afa91b9d9c68725e003a9f4983a1d91730ddee5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgzOTkxMA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r413839910", "bodyText": "Resolved", "author": "aswinijena100", "createdAt": "2020-04-23T14:23:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYwNDg3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYwNTc0MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r411605740", "bodyText": "please do not modify copyright header's format.\nthis has happened a few times, please update your IDE settings to prevent this automated formatting from happening.", "author": "zohrehj", "createdAt": "2020-04-20T18:41:46Z", "path": "WCP/fdahpStudyDesigner/src/main/java/com/fdahpstudydesigner/dao/LoginDAO.java", "diffHunk": "@@ -1,24 +1,23 @@\n /*\n  * Copyright \u00a9 2017-2018 Harvard Pilgrim Health Care Institute (HPHCI) and its Contributors.\n+ * Copyright 2020 Google LLC\n  * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and\n- * associated documentation files (the \"Software\"), to deal in the Software without restriction, including\n- * without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n- * of the Software, and to permit persons to whom the Software is furnished to do so, subject to the\n- * following conditions:\n+ * associated documentation files (the \"Software\"), to deal in the Software without restriction,\n+ * including without limitation the rights to use, copy, modify, merge, publish, distribute,", "originalCommit": "7afa91b9d9c68725e003a9f4983a1d91730ddee5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzg0MDE2MQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r413840161", "bodyText": "modified the copy right text as the class had been modified to implement Account Locking of user for invalid login attempts with invalid credentials. However let us know if still needs to keep the original copyright text", "author": "aswinijena100", "createdAt": "2020-04-23T14:23:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYwNTc0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYwNjk3MQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r411606971", "bodyText": "where is this method called?\nPlease add a comment to describe what's being updated, and why it's needed.", "author": "zohrehj", "createdAt": "2020-04-20T18:43:44Z", "path": "WCP/fdahpStudyDesigner/src/main/java/com/fdahpstudydesigner/dao/LoginDAOImpl.java", "diffHunk": "@@ -537,4 +540,29 @@ public String updateUser(UserBO userBO) {\n     logger.info(\"LoginDAOImpl - updateUser() - Ends\");\n     return result;\n   }\n+\n+  @Override\n+  public String updateUserForResetPassword(UserBO userBO) {", "originalCommit": "7afa91b9d9c68725e003a9f4983a1d91730ddee5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzg0MDMyOQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r413840329", "bodyText": "Resolved", "author": "aswinijena100", "createdAt": "2020-04-23T14:24:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYwNjk3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYwODgzMA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r411608830", "bodyText": "rollback would never get called in this code, because transaction variable is defined within the try block and is not accessible in the catch block.", "author": "zohrehj", "createdAt": "2020-04-20T18:46:45Z", "path": "WCP/fdahpStudyDesigner/src/main/java/com/fdahpstudydesigner/dao/LoginDAOImpl.java", "diffHunk": "@@ -537,4 +540,29 @@ public String updateUser(UserBO userBO) {\n     logger.info(\"LoginDAOImpl - updateUser() - Ends\");\n     return result;\n   }\n+\n+  @Override\n+  public String updateUserForResetPassword(UserBO userBO) {\n+    logger.info(\"LoginDAOImpl - updateUserForResetPassword() - Starts\");\n+    Session session = null;\n+    String result = FdahpStudyDesignerConstants.FAILURE;\n+    try {\n+      session = hibernateTemplate.getSessionFactory().openSession();\n+      transaction = session.beginTransaction();\n+      session.saveOrUpdate(userBO);\n+      transaction.commit();\n+      result = FdahpStudyDesignerConstants.SUCCESS;\n+    } catch (Exception e) {\n+      if (transaction != null) {\n+        transaction.rollback();", "originalCommit": "7afa91b9d9c68725e003a9f4983a1d91730ddee5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzg0MTIxNg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r413841216", "bodyText": "Transaction variable declared as a global variable, hence it can be accessible in the catch block as well.", "author": "aswinijena100", "createdAt": "2020-04-23T14:25:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYwODgzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYwOTI5NA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r411609294", "bodyText": "same here, please revert the format changes.", "author": "zohrehj", "createdAt": "2020-04-20T18:47:35Z", "path": "WCP/fdahpStudyDesigner/src/main/java/com/fdahpstudydesigner/service/NotificationServiceImpl.java", "diffHunk": "@@ -1,29 +1,30 @@\n /*\n  * Copyright \u00a9 2017-2018 Harvard Pilgrim Health Care Institute (HPHCI) and its Contributors.\n+ * Copyright 2020 Google LLC\n  * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and\n- * associated documentation files (the \"Software\"), to deal in the Software without restriction, including\n- * without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n- * of the Software, and to permit persons to whom the Software is furnished to do so, subject to the\n- * following conditions:\n+ * associated documentation files (the \"Software\"), to deal in the Software without restriction,\n+ * including without limitation the rights to use, copy, modify, merge, publish, distribute,\n+ * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is", "originalCommit": "7afa91b9d9c68725e003a9f4983a1d91730ddee5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzg0MTQzMg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r413841432", "bodyText": "modified the copy right text as the class had been modified to implement Account Locking of user for invalid login attempts with invalid credentials. However let us know if still needs to keep the original copyright text", "author": "aswinijena100", "createdAt": "2020-04-23T14:25:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYwOTI5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYxMzc2NQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r411613765", "bodyText": "same here, please revert the format changes to copyright headers.", "author": "zohrehj", "createdAt": "2020-04-20T18:54:42Z", "path": "WCP/fdahpStudyDesigner/src/main/java/com/fdahpstudydesigner/util/LimitLoginAuthenticationProvider.java", "diffHunk": "@@ -1,24 +1,23 @@\n /*\n  * Copyright \u00a9 2017-2018 Harvard Pilgrim Health Care Institute (HPHCI) and its Contributors.\n+ * Copyright 2020 Google LLC\n  * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and\n- * associated documentation files (the \"Software\"), to deal in the Software without restriction, including\n- * without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n- * of the Software, and to permit persons to whom the Software is furnished to do so, subject to the\n- * following conditions:\n+ * associated documentation files (the \"Software\"), to deal in the Software without restriction,\n+ * including without limitation the rights to use, copy, modify, merge, publish, distribute,\n+ * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:", "originalCommit": "7afa91b9d9c68725e003a9f4983a1d91730ddee5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzg0MTYxNw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r413841617", "bodyText": "@zohrehj modified the copy right text as the class had been modified to implement Account Locking of user for invalid login attempts with invalid credentials. However let us know if still needs to keep the original copyright text", "author": "aswinijena100", "createdAt": "2020-04-23T14:25:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYxMzc2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYzNjAzMA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r411636030", "bodyText": "Can this be rewritten with \"try-with\"?", "author": "nikklassen", "createdAt": "2020-04-20T19:32:03Z", "path": "WCP/fdahpStudyDesigner/src/main/java/com/fdahpstudydesigner/dao/LoginDAOImpl.java", "diffHunk": "@@ -537,4 +540,29 @@ public String updateUser(UserBO userBO) {\n     logger.info(\"LoginDAOImpl - updateUser() - Ends\");\n     return result;\n   }\n+\n+  @Override\n+  public String updateUserForResetPassword(UserBO userBO) {\n+    logger.info(\"LoginDAOImpl - updateUserForResetPassword() - Starts\");\n+    Session session = null;\n+    String result = FdahpStudyDesignerConstants.FAILURE;\n+    try {\n+      session = hibernateTemplate.getSessionFactory().openSession();\n+      transaction = session.beginTransaction();\n+      session.saveOrUpdate(userBO);\n+      transaction.commit();\n+      result = FdahpStudyDesignerConstants.SUCCESS;\n+    } catch (Exception e) {\n+      if (transaction != null) {\n+        transaction.rollback();\n+      }\n+      logger.error(\"LoginDAOImpl - updateUserForResetPassword() - ERROR \", e);\n+    } finally {", "originalCommit": "7afa91b9d9c68725e003a9f4983a1d91730ddee5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzg1MTcxNg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r413851716", "bodyText": "studybuilder using older version of Hibernate( 3.5.5)  , which does not support this.", "author": "aswinijena100", "createdAt": "2020-04-23T14:37:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYzNjAzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYzODYyNQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r411638625", "bodyText": "Combine allocation and initialization, none of these variable are used outside of the try", "author": "nikklassen", "createdAt": "2020-04-20T19:36:26Z", "path": "WCP/fdahpStudyDesigner/src/main/java/com/fdahpstudydesigner/service/LoginServiceImpl.java", "diffHunk": "@@ -570,4 +569,88 @@ public String validateAccessCode(String securityToken, String accessCode) {\n     logger.info(\"LoginServiceImpl - checkSecurityToken() - Ends\");\n     return result;\n   }\n+\n+  @Override\n+  public String sendLockedAccountPasswordResetLinkToMail(\n+      String email, String oldEmail, String type) {\n+\n+    logger.info(\"LoginServiceImpl - sendLockedAccountPasswordResetLinkToMail - Starts\");\n+    Map<String, String> propMap = FdahpStudyDesignerUtil.getAppProperties();\n+    String passwordResetToken = null;", "originalCommit": "7afa91b9d9c68725e003a9f4983a1d91730ddee5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzg1MTgzNw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r413851837", "bodyText": "Resolved", "author": "aswinijena100", "createdAt": "2020-04-23T14:37:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYzODYyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYzOTUzOQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r411639539", "bodyText": "It looks like this should just be the conditional for line 600, since you are asserting userdetails in non-null on this line, so it can only be null if this condition is true.", "author": "nikklassen", "createdAt": "2020-04-20T19:37:56Z", "path": "WCP/fdahpStudyDesigner/src/main/java/com/fdahpstudydesigner/service/LoginServiceImpl.java", "diffHunk": "@@ -570,4 +569,88 @@ public String validateAccessCode(String securityToken, String accessCode) {\n     logger.info(\"LoginServiceImpl - checkSecurityToken() - Ends\");\n     return result;\n   }\n+\n+  @Override\n+  public String sendLockedAccountPasswordResetLinkToMail(\n+      String email, String oldEmail, String type) {\n+\n+    logger.info(\"LoginServiceImpl - sendLockedAccountPasswordResetLinkToMail - Starts\");\n+    Map<String, String> propMap = FdahpStudyDesignerUtil.getAppProperties();\n+    String passwordResetToken = null;\n+    String message = propMap.get(\"user.forgot.error.msg\");\n+    boolean flag = false;\n+    UserBO userdetails = null;\n+    String accessCode = \"\";\n+    Map<String, String> keyValueForSubject = null;\n+    Map<String, String> keyValueForSubject2 = null;\n+    String dynamicContent = \"\";\n+    String acceptLinkMail = \"\";\n+    int passwordResetLinkExpirationInHour =\n+        Integer.parseInt(propMap.get(\"accountlocked.resetLink.expiration.in.hour\"));\n+    String customerCareMail = \"\";\n+    String contact = \"\";\n+    try {\n+      passwordResetToken = RandomStringUtils.randomAlphanumeric(10);\n+      accessCode = RandomStringUtils.randomAlphanumeric(6);\n+      if (!StringUtils.isEmpty(passwordResetToken)) {\n+        userdetails = loginDAO.getValidUserByEmail(email);\n+        if (\"\".equals(type) && userdetails.getEmailChanged()) {", "originalCommit": "7afa91b9d9c68725e003a9f4983a1d91730ddee5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzg1MTk3NA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r413851974", "bodyText": "resolved", "author": "aswinijena100", "createdAt": "2020-04-23T14:37:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYzOTUzOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY0MDIyMA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r411640220", "bodyText": "Can you extract the contents of this block to a function so you can return instead of having deeply nested if statements with no else?", "author": "nikklassen", "createdAt": "2020-04-20T19:39:01Z", "path": "WCP/fdahpStudyDesigner/src/main/java/com/fdahpstudydesigner/service/LoginServiceImpl.java", "diffHunk": "@@ -570,4 +569,88 @@ public String validateAccessCode(String securityToken, String accessCode) {\n     logger.info(\"LoginServiceImpl - checkSecurityToken() - Ends\");\n     return result;\n   }\n+\n+  @Override\n+  public String sendLockedAccountPasswordResetLinkToMail(\n+      String email, String oldEmail, String type) {\n+\n+    logger.info(\"LoginServiceImpl - sendLockedAccountPasswordResetLinkToMail - Starts\");\n+    Map<String, String> propMap = FdahpStudyDesignerUtil.getAppProperties();\n+    String passwordResetToken = null;\n+    String message = propMap.get(\"user.forgot.error.msg\");\n+    boolean flag = false;\n+    UserBO userdetails = null;\n+    String accessCode = \"\";\n+    Map<String, String> keyValueForSubject = null;\n+    Map<String, String> keyValueForSubject2 = null;\n+    String dynamicContent = \"\";\n+    String acceptLinkMail = \"\";\n+    int passwordResetLinkExpirationInHour =\n+        Integer.parseInt(propMap.get(\"accountlocked.resetLink.expiration.in.hour\"));\n+    String customerCareMail = \"\";\n+    String contact = \"\";\n+    try {", "originalCommit": "7afa91b9d9c68725e003a9f4983a1d91730ddee5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzg1MjM2Nw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r413852367", "bodyText": "Simplified nested if statement by removing unwanted checks.", "author": "aswinijena100", "createdAt": "2020-04-23T14:37:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY0MDIyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY0MzI2OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r411643269", "bodyText": "Why convert to a hashset and then back to a list?", "author": "nikklassen", "createdAt": "2020-04-20T19:44:08Z", "path": "WCP/fdahpStudyDesigner/src/main/java/com/fdahpstudydesigner/service/NotificationServiceImpl.java", "diffHunk": "@@ -177,7 +178,21 @@ public void setStudyDAO(StudyDAO studyDAO) {\n   @Override\n   public List<String> getGatwayAppList() {\n     logger.info(\"NotificationServiceImpl - saveOrUpdateNotification - Starts\");\n-    List<String> gatewayAppList = new ArrayList<>(new HashSet(notificationDAO.getGatwayAppList()));\n+    List<String> gatewayAppList = null;\n+    try {\n+      gatewayAppList = new ArrayList<>(new HashSet(notificationDAO.getGatwayAppList()));", "originalCommit": "7afa91b9d9c68725e003a9f4983a1d91730ddee5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzg1Mjg0MQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r413852841", "bodyText": "Not in the current scope , hence removed .", "author": "aswinijena100", "createdAt": "2020-04-23T14:38:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY0MzI2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk5Njg2MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r413996860", "bodyText": "The try .. catch should also be removed to revert this change.", "author": "nikklassen", "createdAt": "2020-04-23T17:43:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY0MzI2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY0NDg1NQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r411644855", "bodyText": "Are you expecting studies with duplicate names? Otherwise you just just define a Comparator that uses getName in its compare function", "author": "nikklassen", "createdAt": "2020-04-20T19:46:45Z", "path": "WCP/fdahpStudyDesigner/src/main/java/com/fdahpstudydesigner/service/StudyServiceImpl.java", "diffHunk": "@@ -245,14 +248,33 @@ public boolean deleteStudyByCustomStudyId(String customStudyId) {\n   @Override\n   public List<StudyBo> getAllStudyList() {\n     logger.info(\"StudyServiceImpl - getAllStudyList() - Starts\");\n-    List<StudyBo> studyBOList = null;\n+    List<StudyBo> studyBOList = null, sortedStudyBOList = new ArrayList<>();\n+    HashMap<String, StudyBo> studyMap = new HashMap<>();\n+    ArrayList<String> studyNamelist = null;\n+\n     try {\n       studyBOList = studyDAO.getAllStudyList();\n+\n+      for (StudyBo study : studyBOList) {\n+        studyMap.put(study.getName(), study);", "originalCommit": "7afa91b9d9c68725e003a9f4983a1d91730ddee5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzg1NDc1Nw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r413854757", "bodyText": "Not in the current scope , hence removed .", "author": "aswinijena100", "createdAt": "2020-04-23T14:40:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY0NDg1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY0NTA5Mw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r411645093", "bodyText": "Combine declaration and initialization", "author": "nikklassen", "createdAt": "2020-04-20T19:47:10Z", "path": "WCP/fdahpStudyDesigner/src/main/java/com/fdahpstudydesigner/service/StudyServiceImpl.java", "diffHunk": "@@ -245,14 +248,33 @@ public boolean deleteStudyByCustomStudyId(String customStudyId) {\n   @Override\n   public List<StudyBo> getAllStudyList() {\n     logger.info(\"StudyServiceImpl - getAllStudyList() - Starts\");\n-    List<StudyBo> studyBOList = null;\n+    List<StudyBo> studyBOList = null, sortedStudyBOList = new ArrayList<>();\n+    HashMap<String, StudyBo> studyMap = new HashMap<>();\n+    ArrayList<String> studyNamelist = null;", "originalCommit": "7afa91b9d9c68725e003a9f4983a1d91730ddee5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzg1NTAxOQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r413855019", "bodyText": "Resolved", "author": "aswinijena100", "createdAt": "2020-04-23T14:40:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY0NTA5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjI1MzY2OA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r412253668", "bodyText": "This line is now executed unconditionally. You should always use curly braces for if statements to avoid this.", "author": "nikklassen", "createdAt": "2020-04-21T14:50:14Z", "path": "user-registration-server-ws/enroll-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/StudyStateServiceImpl.java", "diffHunk": "@@ -120,8 +120,10 @@ public StudyStateRespBean saveParticipantStudies(\n           }\n         }\n         if (!isExists) {\n-          if (studiesBean.getStudyId() != null && StringUtils.isNotEmpty(studiesBean.getStudyId()))\n-            participantStudyBo.setStudyInfo(studyInfo);\n+          if (studiesBean.getStudyId() != null\n+              && StringUtils.isNotEmpty(studiesBean.getStudyId())\n+              && studyInfo != null) participantStudyBo.setStudyInfo(studyInfo);\n+          participantStudyBo.setStudyInfo(studyInfo);", "originalCommit": "7afa91b9d9c68725e003a9f4983a1d91730ddee5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzg2NDkyOQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r413864929", "bodyText": "resolved", "author": "aswinijena100", "createdAt": "2020-04-23T14:51:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjI1MzY2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjI1NDAyOQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r412254029", "bodyText": "curly braces", "author": "nikklassen", "createdAt": "2020-04-21T14:50:38Z", "path": "user-registration-server-ws/enroll-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/StudyStateServiceImpl.java", "diffHunk": "@@ -205,8 +207,8 @@ public StudyStateRespBean saveParticipantStudies(\n                 studyStateBean.setHashedToken(\n                     EnrollmentManagementUtil.getHashedValue(enrolledTokenVal));\n               }\n-\n-              studyStateBean.setStudyId(participantStudiesBO.getStudyInfo().getCustomId());\n+              if (participantStudiesBO.getStudyInfo() != null)", "originalCommit": "7afa91b9d9c68725e003a9f4983a1d91730ddee5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzg2NTAyMA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r413865020", "bodyText": "Resolved", "author": "aswinijena100", "createdAt": "2020-04-23T14:52:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjI1NDAyOQ=="}], "type": "inlineReview"}, {"oid": "782ed5dc66d8d3b700959f046b0412d3f5cd4bc9", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/782ed5dc66d8d3b700959f046b0412d3f5cd4bc9", "message": "Merge branch 'early-access' into early-access-build", "committedDate": "2020-04-21T16:39:42Z", "type": "commit"}, {"oid": "704ce80a0bb71dfdefd08db00fffb3be2d647ecf", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/704ce80a0bb71dfdefd08db00fffb3be2d647ecf", "message": "Merge branch 'early-access' into early-access-build", "committedDate": "2020-04-22T12:58:18Z", "type": "commit"}, {"oid": "46ed1cc49d76d7b712d4e8e068f7044bcaa0667a", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/46ed1cc49d76d7b712d4e8e068f7044bcaa0667a", "message": "Merge branch 'early-access' into early-access-build", "committedDate": "2020-04-23T12:22:58Z", "type": "commit"}, {"oid": "6619e5d7a80723a41d8e5b7a4e4dcd8f77596e15", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/6619e5d7a80723a41d8e5b7a4e4dcd8f77596e15", "message": "Issue fixes based on the PR #179 comments", "committedDate": "2020-04-23T14:14:07Z", "type": "commit"}, {"oid": "9152f799c946000f4656145440234bfbf9fcafab", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/9152f799c946000f4656145440234bfbf9fcafab", "message": "Merge branch 'early-access-build' of https://github.com/GoogleCloudPlatform/fda-mystudies into early-access-build", "committedDate": "2020-04-23T14:14:41Z", "type": "commit"}, {"oid": "4c493888c6cbeb263b8b55eb57f492df03f7c2b0", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/4c493888c6cbeb263b8b55eb57f492df03f7c2b0", "message": "Merge branch 'early-access' into early-access-build", "committedDate": "2020-04-23T17:01:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk5MTE5OA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r413991198", "bodyText": "You are still initializing these variables before you use them. A variable should never be written twice before it's ever used. Java doesn't need to declare all variables at the beginning of a block", "author": "nikklassen", "createdAt": "2020-04-23T17:34:54Z", "path": "WCP/fdahpStudyDesigner/src/main/java/com/fdahpstudydesigner/service/LoginServiceImpl.java", "diffHunk": "@@ -571,86 +571,56 @@ public String validateAccessCode(String securityToken, String accessCode) {\n   }\n \n   @Override\n-  public String sendLockedAccountPasswordResetLinkToMail(\n-      String email, String oldEmail, String type) {\n-\n+  // Send mail to user when account locked due to invalid login credentials\n+  public void sendLockedAccountPasswordResetLinkToMail(String email) {\n     logger.info(\"LoginServiceImpl - sendLockedAccountPasswordResetLinkToMail - Starts\");\n-    Map<String, String> propMap = FdahpStudyDesignerUtil.getAppProperties();\n+    Map<String, String> propMap = null;\n     String passwordResetToken = null;\n-    String message = propMap.get(\"user.forgot.error.msg\");\n-    boolean flag = false;\n+    String message = null;", "originalCommit": "6619e5d7a80723a41d8e5b7a4e4dcd8f77596e15", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ1MDgwMg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r414450802", "bodyText": "Resolved", "author": "aswinijena100", "createdAt": "2020-04-24T09:57:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk5MTE5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk5MTUwNA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r413991504", "bodyText": "This value is never read", "author": "nikklassen", "createdAt": "2020-04-23T17:35:22Z", "path": "WCP/fdahpStudyDesigner/src/main/java/com/fdahpstudydesigner/service/LoginServiceImpl.java", "diffHunk": "@@ -571,86 +571,56 @@ public String validateAccessCode(String securityToken, String accessCode) {\n   }\n \n   @Override\n-  public String sendLockedAccountPasswordResetLinkToMail(\n-      String email, String oldEmail, String type) {\n-\n+  // Send mail to user when account locked due to invalid login credentials\n+  public void sendLockedAccountPasswordResetLinkToMail(String email) {\n     logger.info(\"LoginServiceImpl - sendLockedAccountPasswordResetLinkToMail - Starts\");\n-    Map<String, String> propMap = FdahpStudyDesignerUtil.getAppProperties();\n+    Map<String, String> propMap = null;\n     String passwordResetToken = null;\n-    String message = propMap.get(\"user.forgot.error.msg\");\n-    boolean flag = false;\n+    String message = null;\n     UserBO userdetails = null;\n     String accessCode = \"\";\n     Map<String, String> keyValueForSubject = null;\n-    Map<String, String> keyValueForSubject2 = null;\n     String dynamicContent = \"\";\n     String acceptLinkMail = \"\";\n-    int passwordResetLinkExpirationInHour =\n-        Integer.parseInt(propMap.get(\"accountlocked.resetLink.expiration.in.hour\"));\n+    int passwordResetLinkExpirationInHour = 0;\n     String customerCareMail = \"\";\n-    String contact = \"\";\n     try {\n+      propMap = FdahpStudyDesignerUtil.getAppProperties();\n+      message = propMap.get(\"user.forgot.error.msg\");", "originalCommit": "6619e5d7a80723a41d8e5b7a4e4dcd8f77596e15", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ1MDkyNQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/179#discussion_r414450925", "bodyText": "Resolved", "author": "aswinijena100", "createdAt": "2020-04-24T09:58:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk5MTUwNA=="}], "type": "inlineReview"}, {"oid": "e769c976595832d2a52ec645cbb057084b7f3661", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/e769c976595832d2a52ec645cbb057084b7f3661", "message": "Merge branch 'early-access' into early-access-build", "committedDate": "2020-04-24T06:31:32Z", "type": "commit"}, {"oid": "ca3489950c47259efeb8da204f8b142102ca875e", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/ca3489950c47259efeb8da204f8b142102ca875e", "message": "Github Comments[ Dated: 23/04/20202] issue fixes  and removed unused styles", "committedDate": "2020-04-24T09:57:31Z", "type": "commit"}, {"oid": "3fcbf7f34f875f1a58c697498b2c57095eb2e1ff", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/3fcbf7f34f875f1a58c697498b2c57095eb2e1ff", "message": "Merge branch 'early-access' into early-access-build", "committedDate": "2020-04-24T12:34:03Z", "type": "commit"}, {"oid": "297cbfecfdfe08682f36e60e9b0b8d973f57ee67", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/297cbfecfdfe08682f36e60e9b0b8d973f57ee67", "message": "Merge branch 'early-access' into early-access-build", "committedDate": "2020-04-24T15:52:10Z", "type": "commit"}]}