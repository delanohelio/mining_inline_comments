{"pr_number": 734, "pr_title": "Participant Manager Service [POST]  Setup account endpoint implementation", "pr_createdAt": "2020-08-10T16:01:58Z", "pr_url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/734", "timeline": [{"oid": "0ae3ff85acf1cb65da450df915811a1b570196fe", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/0ae3ff85acf1cb65da450df915811a1b570196fe", "message": "POST Setup account end point implementation with integration test cases\n\nPOST Setup account end point implementation with integration test cases", "committedDate": "2020-08-10T15:59:25Z", "type": "commit"}, {"oid": "9ef39ad5dbc02fb5d186fbfe8cdf9e035d4960cf", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/9ef39ad5dbc02fb5d186fbfe8cdf9e035d4960cf", "message": "Removed test cases to reduce LOC\n\nRemoved test cases to reduce LOC", "committedDate": "2020-08-10T16:08:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODIwMDExMw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/734#discussion_r468200113", "bodyText": "emailId->email", "author": "saminguyen", "createdAt": "2020-08-10T21:36:50Z", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/common/ErrorCode.java", "diffHunk": "@@ -110,13 +108,26 @@\n \n   CUSTOM_ID_EXISTS(400, \"EC_883\", Constants.BAD_REQUEST, \"customId already exists\"),\n \n-  USER_NOT_ACTIVE(400, \"EC_93\", Constants.BAD_REQUEST, \"User not Active\");\n+  USER_NOT_ACTIVE(400, \"EC_93\", Constants.BAD_REQUEST, \"User not Active\"),\n+\n+  USER_NOT_INVITED(\n+      400, \"EC-869\", Constants.BAD_REQUEST, \"Provided emailId not exists or user not invited\");", "originalCommit": "9ef39ad5dbc02fb5d186fbfe8cdf9e035d4960cf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODM0NDcwNA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/734#discussion_r468344704", "bodyText": "Changed emailId to email", "author": "Kantharajut-btc", "createdAt": "2020-08-11T06:01:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODIwMDExMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODIwOTU4Mg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/734#discussion_r468209582", "bodyText": "you have too many extra backslash that are not needed.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  \"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!\\\\\\\\\\\\\\\"#$%&'()*+,-.:;<=>?@\\\\\\\\\\\\\\\\[\\\\\\\\\\\\\\\\]^_`{|}~]).{8,64}$\";\n          \n          \n            \n                       \"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!\\\\\\\"#$%&'()*+,-.:;<=>?@\\\\[\\\\]^_`{|}~]).{8,64}$\";", "author": "saminguyen", "createdAt": "2020-08-10T21:58:50Z", "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/SetUpAccountRequest.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package com.google.cloud.healthcare.fdamystudies.beans;\n+\n+import javax.validation.constraints.Email;\n+import javax.validation.constraints.NotBlank;\n+import javax.validation.constraints.NotNull;\n+import javax.validation.constraints.Pattern;\n+import javax.validation.constraints.Size;\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.ToString;\n+import org.springframework.context.annotation.Scope;\n+import org.springframework.stereotype.Component;\n+\n+@Getter\n+@Setter\n+@ToString\n+@Component\n+@Scope(value = \"prototype\")\n+public class SetUpAccountRequest {\n+\n+  private static final String PASSWORD_REGEX =\n+      \"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!\\\\\\\\\\\\\\\"#$%&'()*+,-.:;<=>?@\\\\\\\\\\\\\\\\[\\\\\\\\\\\\\\\\]^_`{|}~]).{8,64}$\";", "originalCommit": "9ef39ad5dbc02fb5d186fbfe8cdf9e035d4960cf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODM0NTEzMA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/734#discussion_r468345130", "bodyText": "fixed review comment", "author": "Kantharajut-btc", "createdAt": "2020-08-11T06:02:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODIwOTU4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODIzMTU4OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/734#discussion_r468231589", "bodyText": "Don't you have to call setErrorHandler on restTemplate to make sure your custom RestResponseErrorHandler above will work to catch all the exceptions by restTemplate?\nRefer to the answer in: https://stackoverflow.com/questions/46367039/how-to-handle-httpclientexception-properly/46368179#46368179", "author": "saminguyen", "createdAt": "2020-08-10T23:00:13Z", "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserProfileServiceImpl.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import com.google.cloud.healthcare.fdamystudies.beans.AuthUserRequest;\n+import com.google.cloud.healthcare.fdamystudies.beans.SetUpAccountRequest;\n+import com.google.cloud.healthcare.fdamystudies.beans.SetUpAccountResponse;\n+import com.google.cloud.healthcare.fdamystudies.beans.UserResponse;\n+import com.google.cloud.healthcare.fdamystudies.common.ErrorCode;\n+import com.google.cloud.healthcare.fdamystudies.common.MessageCode;\n+import com.google.cloud.healthcare.fdamystudies.common.UserAccountStatus;\n+import com.google.cloud.healthcare.fdamystudies.common.UserStatus;\n+import com.google.cloud.healthcare.fdamystudies.config.AppPropertyConfig;\n+import com.google.cloud.healthcare.fdamystudies.model.UserRegAdminEntity;\n+import com.google.cloud.healthcare.fdamystudies.repository.UserRegAdminRepository;\n+import java.util.Optional;\n+import org.slf4j.ext.XLogger;\n+import org.slf4j.ext.XLoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpEntity;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.stereotype.Service;\n+import org.springframework.transaction.annotation.Transactional;\n+import org.springframework.web.client.RestTemplate;\n+\n+@Service\n+public class UserProfileServiceImpl implements UserProfileService {\n+\n+  private XLogger logger = XLoggerFactory.getXLogger(UserProfileServiceImpl.class.getName());\n+\n+  @Autowired private UserRegAdminRepository userRegAdminRepository;\n+\n+  @Autowired private AppPropertyConfig appPropertyConfig;\n+\n+  @Autowired private RestTemplate restTemplate;\n+\n+  @Autowired private OAuthService oauthService;\n+\n+  @Override\n+  @Transactional\n+  public SetUpAccountResponse saveUser(SetUpAccountRequest setUpAccountRequest) {\n+    logger.entry(\"saveUser\");\n+\n+    Optional<UserRegAdminEntity> optUsers =\n+        userRegAdminRepository.findByEmail(setUpAccountRequest.getEmail());\n+    if (!optUsers.isPresent()) {\n+      return new SetUpAccountResponse(ErrorCode.USER_NOT_INVITED);\n+    }\n+\n+    // Bad request and errors handled in RestResponseErrorHandler class\n+    UserResponse authRegistrationResponse = registerUserInAuthServer(setUpAccountRequest);\n+\n+    UserRegAdminEntity userRegAdminUser = optUsers.get();\n+    userRegAdminUser.setUrAdminAuthId(authRegistrationResponse.getUserId());\n+    userRegAdminUser.setFirstName(setUpAccountRequest.getFirstName());\n+    userRegAdminUser.setLastName(setUpAccountRequest.getLastName());\n+    userRegAdminUser.setStatus(UserStatus.ACTIVE.getValue());\n+    userRegAdminUser = userRegAdminRepository.saveAndFlush(userRegAdminUser);\n+\n+    SetUpAccountResponse setUpAccountResponse =\n+        new SetUpAccountResponse(\n+            userRegAdminUser.getId(),\n+            authRegistrationResponse.getTempRegId(),\n+            authRegistrationResponse.getUserId(),\n+            MessageCode.SET_UP_ACCOUNT_SUCCESS);\n+\n+    logger.exit(MessageCode.SET_UP_ACCOUNT_SUCCESS);\n+    return setUpAccountResponse;\n+  }\n+\n+  private UserResponse registerUserInAuthServer(SetUpAccountRequest setUpAccountRequest) {\n+    logger.entry(\"registerUserInAuthServer()\");\n+\n+    AuthUserRequest userRequest =\n+        new AuthUserRequest(\n+            \"PARTICIPANT MANAGER\",\n+            setUpAccountRequest.getEmail(),\n+            setUpAccountRequest.getPassword(),\n+            UserAccountStatus.ACTIVE.getStatus());\n+\n+    HttpHeaders headers = new HttpHeaders();\n+    headers.add(\"Authorization\", \"Bearer \" + oauthService.getAccessToken());\n+\n+    HttpEntity<AuthUserRequest> requestEntity = new HttpEntity<>(userRequest, headers);\n+\n+    ResponseEntity<UserResponse> response =\n+        restTemplate.postForEntity(", "originalCommit": "9ef39ad5dbc02fb5d186fbfe8cdf9e035d4960cf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODM0NjQ4MQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/734#discussion_r468346481", "bodyText": "Added below line in CommonModuleConfiguration\nrestTemplate.setErrorHandler(new RestResponseErrorHandler());", "author": "Kantharajut-btc", "createdAt": "2020-08-11T06:06:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODIzMTU4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODIzNDcwNw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/734#discussion_r468234707", "bodyText": "just a small suggestion, these changes should be in the integration test PR next time if you do split the PRs.", "author": "saminguyen", "createdAt": "2020-08-10T23:10:15Z", "path": "participant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/helper/TestDataHelper.java", "diffHunk": "@@ -43,6 +44,12 @@\n \n   public static final String EMAIL_VALUE = \"mockit_email@grr.la\";\n \n+  public static final String ADMIN_LAST_NAME = \"mockito_last_name\";\n+\n+  public static final String ADMIN_FIRST_NAME = \"mockito\";\n+\n+  protected static final String VALID_BEARER_TOKEN = \"Bearer 7fd50c2c-d618-493c-89d6-f1887e3e4bb8\";", "originalCommit": "9ef39ad5dbc02fb5d186fbfe8cdf9e035d4960cf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODM0NzI4NA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/734#discussion_r468347284", "bodyText": "Okay", "author": "Kantharajut-btc", "createdAt": "2020-08-11T06:09:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODIzNDcwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODIzNTczMQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/734#discussion_r468235731", "bodyText": "nit: Move these to TestConstants.java and have TestDataHelper only have functions for generating test entity objects, etc.", "author": "saminguyen", "createdAt": "2020-08-10T23:13:29Z", "path": "participant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/helper/TestDataHelper.java", "diffHunk": "@@ -43,6 +44,12 @@\n \n   public static final String EMAIL_VALUE = \"mockit_email@grr.la\";\n \n+  public static final String ADMIN_LAST_NAME = \"mockito_last_name\";\n+\n+  public static final String ADMIN_FIRST_NAME = \"mockito\";\n+\n+  protected static final String VALID_BEARER_TOKEN = \"Bearer 7fd50c2c-d618-493c-89d6-f1887e3e4bb8\";", "originalCommit": "9ef39ad5dbc02fb5d186fbfe8cdf9e035d4960cf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODM0NzA3NA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/734#discussion_r468347074", "bodyText": "fixed review comment", "author": "Kantharajut-btc", "createdAt": "2020-08-11T06:08:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODIzNTczMQ=="}], "type": "inlineReview"}, {"oid": "89d1e5b35dd9053c73fe79b5157c690766fdcfbe", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/89d1e5b35dd9053c73fe79b5157c690766fdcfbe", "message": "Fixed PR comments\n\nFixed PR comments", "committedDate": "2020-08-11T06:10:16Z", "type": "commit"}, {"oid": "b851e06327b3db00a8975c07df730fbae01b3f2e", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/b851e06327b3db00a8975c07df730fbae01b3f2e", "message": "Merge branch 'develop' into participant-manager-setup-account", "committedDate": "2020-08-11T14:18:26Z", "type": "commit"}, {"oid": "1c405e38491ee120c6b39e1cbfe6d9a2fac578d1", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/1c405e38491ee120c6b39e1cbfe6d9a2fac578d1", "message": "Merge branch 'develop' into participant-manager-setup-account", "committedDate": "2020-08-11T14:19:15Z", "type": "commit"}, {"oid": "ead17eb5bc39f77c1a066826382fd72acda512fd", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/ead17eb5bc39f77c1a066826382fd72acda512fd", "message": "Resolved merge conflicts\n\nResolved merge conflicts", "committedDate": "2020-08-11T14:29:53Z", "type": "commit"}, {"oid": "fff329fbdba390f6aa59f60b24e7978f78ed714c", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/fff329fbdba390f6aa59f60b24e7978f78ed714c", "message": "Merge branch 'develop' into participant-manager-setup-account", "committedDate": "2020-08-11T18:15:52Z", "type": "commit"}, {"oid": "10896ff61ea3034526b173c6801fe25bfd599dec", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/10896ff61ea3034526b173c6801fe25bfd599dec", "message": "fix build", "committedDate": "2020-08-11T21:20:48Z", "type": "commit"}]}