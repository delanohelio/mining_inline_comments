{"pr_number": 721, "pr_title": "Participant Manager [GET] /sites endpoint implementation with integration tests", "pr_createdAt": "2020-08-03T16:00:08Z", "pr_url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/721", "timeline": [{"oid": "1d3bedab6000cfc4211ab71164187a2189332f5f", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/1d3bedab6000cfc4211ab71164187a2189332f5f", "message": "GET /sites endpoint implementation with integration tests\n\nGET /sites endpoint implementation with integration tests", "committedDate": "2020-08-03T15:58:03Z", "type": "commit"}, {"oid": "e63887645385486dd0fc941eabda9e9af6ef7c65", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/e63887645385486dd0fc941eabda9e9af6ef7c65", "message": "Removed comment\n\nRemoved comment", "committedDate": "2020-08-04T02:57:28Z", "type": "commit"}, {"oid": "d043999b0199e62963c5750c4962af3a664eff93", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/d043999b0199e62963c5750c4962af3a664eff93", "message": "Fixed build issue\n\nFixed build issue", "committedDate": "2020-08-04T05:25:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg2NDk0MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/721#discussion_r465864940", "bodyText": "Isn't this the same as the function findStudyPermissionsOfUserByStudyIds() above.", "author": "saminguyen", "createdAt": "2020-08-05T16:49:01Z", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/StudyPermissionRepository.java", "diffHunk": "@@ -51,4 +51,10 @@\n \n   @Query(\"SELECT sp from StudyPermissionEntity sp where sp.urAdminUser.id=:adminId\")\n   public List<StudyPermissionEntity> findByAdminUser(String adminId);\n+\n+  @Query(\n+      \"SELECT sp FROM StudyPermissionEntity sp \"\n+          + \"WHERE  sp.study.id IN (:usersStudyIds) and  sp.urAdminUser.id=:userId\")\n+  public List<StudyPermissionEntity> findByStudyIds(", "originalCommit": "d043999b0199e62963c5750c4962af3a664eff93", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE2ODQ3MQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/721#discussion_r466168471", "bodyText": "Removed findStudyPermissionsOfUserByStudyIds and reused findByStudyIds method", "author": "Kantharajut-btc", "createdAt": "2020-08-06T06:13:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg2NDk0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg2NTk5MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/721#discussion_r465865990", "bodyText": "empty line after each field", "author": "saminguyen", "createdAt": "2020-08-05T16:50:35Z", "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/Site.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.beans;\n+\n+import lombok.Getter;\n+import lombok.NoArgsConstructor;\n+import lombok.Setter;\n+\n+@Getter\n+@Setter\n+@NoArgsConstructor\n+public class Site {\n+  private String id;", "originalCommit": "d043999b0199e62963c5750c4962af3a664eff93", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE2OTY5MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/721#discussion_r466169690", "bodyText": "Added empty lines", "author": "Kantharajut-btc", "createdAt": "2020-08-06T06:17:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg2NTk5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg2NjI2NQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/721#discussion_r465866265", "bodyText": "Name this SiteDetails just for consistency?", "author": "saminguyen", "createdAt": "2020-08-05T16:51:02Z", "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/Site.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.beans;\n+\n+import lombok.Getter;\n+import lombok.NoArgsConstructor;\n+import lombok.Setter;\n+\n+@Getter\n+@Setter\n+@NoArgsConstructor\n+public class Site {", "originalCommit": "d043999b0199e62963c5750c4962af3a664eff93", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE2OTgxNQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/721#discussion_r466169815", "bodyText": "Changed to SiteDetails", "author": "Kantharajut-btc", "createdAt": "2020-08-06T06:17:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg2NjI2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk1MTQ4NA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/721#discussion_r465951484", "bodyText": "is it easier just to set null values to 0L in the function that gets the count", "author": "saminguyen", "createdAt": "2020-08-05T19:24:35Z", "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/SiteServiceImpl.java", "diffHunk": "@@ -858,4 +864,128 @@ public ParticipantStatusResponse updateOnboardingStatus(\n             participantStatusRequest.getSiteId()));\n     return new ParticipantStatusResponse(MessageCode.UPDATE_STATUS_SUCCESS);\n   }\n+\n+  @Override\n+  @Transactional(readOnly = true)\n+  public SiteDetailsResponse getSites(String userId) {\n+    logger.entry(\"getSites(userId)\");\n+\n+    List<SitePermissionEntity> sitePermissions =\n+        sitePermissionRepository.findSitePermissionByUserId(userId);\n+    if (CollectionUtils.isEmpty(sitePermissions)) {\n+      logger.exit(ErrorCode.SITE_NOT_FOUND);\n+      return new SiteDetailsResponse(ErrorCode.SITE_NOT_FOUND);\n+    }\n+\n+    List<String> siteIds =\n+        sitePermissions\n+            .stream()\n+            .map(s -> s.getSite().getId())\n+            .distinct()\n+            .collect(Collectors.toList());\n+\n+    Map<String, Long> invitedCountBySiteIdMap = getInvitedCountBySiteId(siteIds);\n+\n+    Map<String, Long> enrolledCountBySiteIdMap = getEnrolledCountBySiteId(siteIds);\n+\n+    Map<StudyEntity, List<SitePermissionEntity>> sitePermissionsByStudy =\n+        sitePermissions.stream().collect(Collectors.groupingBy(SitePermissionEntity::getStudy));\n+\n+    Map<String, StudyPermissionEntity> studyPermissionsByStudyInfoId =\n+        getStudyPermissionsByStudyId(userId, sitePermissions);\n+\n+    List<StudyDetails> studies = new ArrayList<>();\n+    for (Map.Entry<StudyEntity, List<SitePermissionEntity>> entry :\n+        sitePermissionsByStudy.entrySet()) {\n+      StudyEntity study = entry.getKey();\n+      StudyDetails studyDetail = StudyMapper.toStudyDetails(studyPermissionsByStudyInfoId, study);\n+\n+      addSites(invitedCountBySiteIdMap, enrolledCountBySiteIdMap, study, studyDetail);\n+      studyDetail.setSitesCount((long) studyDetail.getSites().size());\n+\n+      studies.add(studyDetail);\n+    }\n+\n+    logger.exit(String.format(\"%d studies found\", studies.size()));\n+    return new SiteDetailsResponse(studies, MessageCode.GET_SITES_SUCCESS);\n+  }\n+\n+  private Map<String, StudyPermissionEntity> getStudyPermissionsByStudyId(\n+      String userId, List<SitePermissionEntity> sitePermissions) {\n+    List<String> usersStudyIds =\n+        sitePermissions\n+            .stream()\n+            .distinct()\n+            .map(studyEntity -> studyEntity.getStudy().getId())\n+            .collect(Collectors.toList());\n+\n+    List<StudyPermissionEntity> studyPermissions =\n+        studyPermissionRepository.findByStudyIds(usersStudyIds, userId);\n+\n+    Map<String, StudyPermissionEntity> studyPermissionsByStudyInfoId = new HashMap<>();\n+    if (CollectionUtils.isNotEmpty(studyPermissions)) {\n+      studyPermissionsByStudyInfoId =\n+          studyPermissions\n+              .stream()\n+              .collect(Collectors.toMap(e -> e.getStudy().getId(), Function.identity()));\n+    }\n+    return studyPermissionsByStudyInfoId;\n+  }\n+\n+  private Map<String, Long> getInvitedCountBySiteId(List<String> usersSiteIds) {\n+    List<ParticipantRegistrySiteEntity> participantRegistry =\n+        participantRegistrySiteRepository.findBySiteIds(usersSiteIds);\n+\n+    return participantRegistry\n+        .stream()\n+        .collect(\n+            Collectors.groupingBy(\n+                e -> e.getSite().getId(),\n+                Collectors.summingLong(ParticipantRegistrySiteEntity::getInvitationCount)));\n+  }\n+\n+  private Map<String, Long> getEnrolledCountBySiteId(List<String> usersSiteIds) {\n+    List<ParticipantStudyEntity> participantsEnrollments =\n+        participantStudyRepository.findBySiteIds(usersSiteIds);\n+\n+    return participantsEnrollments\n+        .stream()\n+        .collect(Collectors.groupingBy(e -> e.getSite().getId(), Collectors.counting()));\n+  }\n+\n+  private void addSites(\n+      Map<String, Long> invitedCountBySiteIdMap,\n+      Map<String, Long> enrolledCountBySiteIdMap,\n+      StudyEntity study,\n+      StudyDetails studyDetail) {\n+    for (SiteEntity siteEntity : study.getSites()) {\n+      Long invitedCount =\n+          invitedCountBySiteIdMap.get(siteEntity.getId()) == null\n+              ? 0L", "originalCommit": "d043999b0199e62963c5750c4962af3a664eff93", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE3MTk1NA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/721#discussion_r466171954", "bodyText": "InvitationCount in Entity is 0 by default hence removed null checking", "author": "Kantharajut-btc", "createdAt": "2020-08-06T06:23:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk1MTQ4NA=="}], "type": "inlineReview"}, {"oid": "9589e5d497ca391ab0f1f12fbdd42da73a533f29", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/9589e5d497ca391ab0f1f12fbdd42da73a533f29", "message": "Fixed PR comments\n\nFixed PR comments", "committedDate": "2020-08-06T06:05:19Z", "type": "commit"}, {"oid": "522c7f007fe20fe38048e345ad8ef78dba54218b", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/522c7f007fe20fe38048e345ad8ef78dba54218b", "message": "Merge branch 'participant-manager-site-update-status' into participant-manager-get-sites", "committedDate": "2020-08-06T06:27:22Z", "type": "commit"}, {"oid": "5634acf5ffade7ca0805ca617ed247f7065cbe4e", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/5634acf5ffade7ca0805ca617ed247f7065cbe4e", "message": "Fixed build issue", "committedDate": "2020-08-06T06:40:36Z", "type": "commit"}, {"oid": "10bc0715b35fec22f74575b72524c11139d416d0", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/10bc0715b35fec22f74575b72524c11139d416d0", "message": "Merge branch 'participant-manager-site-update-status' into participant-manager-get-sites", "committedDate": "2020-08-06T06:42:49Z", "type": "commit"}, {"oid": "5e007a023f856d7324c79ad62a0cea79df1eab63", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/5e007a023f856d7324c79ad62a0cea79df1eab63", "message": "Merge branch 'develop' into participant-manager-get-sites", "committedDate": "2020-08-19T15:20:37Z", "type": "commit"}, {"oid": "26427765a7141ec6c2c22272b7420158034ad80f", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/26427765a7141ec6c2c22272b7420158034ad80f", "message": "Resolved merge conflicts\n\nResolved merge conflicts", "committedDate": "2020-08-19T15:27:01Z", "type": "commit"}]}