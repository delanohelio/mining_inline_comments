{"pr_number": 622, "pr_title": "Participant manager /sites endpoint integration test cases", "pr_createdAt": "2020-07-13T13:27:37Z", "pr_url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/622", "timeline": [{"oid": "6f78c34447f0bf5d4bf0135a67219571f976f676", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/6f78c34447f0bf5d4bf0135a67219571f976f676", "message": "participant manager /sites end point integration test cases\n\nparticipant manager /sites end point integration test cases", "committedDate": "2020-07-13T13:26:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE0NjIxNA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/622#discussion_r456146214", "bodyText": "Use constants for these strings TEST_STUDY_NAME, TEST_STUDY_SPONSOR, etc", "author": "saminguyen", "createdAt": "2020-07-17T00:10:11Z", "path": "participant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/helper/TestDataHelper.java", "diffHunk": "@@ -0,0 +1,112 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.helper;\n+\n+import static com.google.cloud.healthcare.fdamystudies.util.Constants.EDIT_VALUE;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+import com.google.cloud.healthcare.fdamystudies.model.AppEntity;\n+import com.google.cloud.healthcare.fdamystudies.model.AppPermissionEntity;\n+import com.google.cloud.healthcare.fdamystudies.model.LocationEntity;\n+import com.google.cloud.healthcare.fdamystudies.model.StudyEntity;\n+import com.google.cloud.healthcare.fdamystudies.model.StudyPermissionEntity;\n+import com.google.cloud.healthcare.fdamystudies.model.UserRegAdminEntity;\n+import com.google.cloud.healthcare.fdamystudies.repository.AppPermissionRepository;\n+import com.google.cloud.healthcare.fdamystudies.repository.AppRepository;\n+import com.google.cloud.healthcare.fdamystudies.repository.LocationRepository;\n+import com.google.cloud.healthcare.fdamystudies.repository.SitePermissionRepository;\n+import com.google.cloud.healthcare.fdamystudies.repository.StudyPermissionRepository;\n+import com.google.cloud.healthcare.fdamystudies.repository.StudyRepository;\n+import com.google.cloud.healthcare.fdamystudies.repository.UserRegAdminRepository;\n+\n+import lombok.Getter;\n+\n+@Getter\n+@Component\n+public class TestDataHelper {\n+\n+  private static final String ADMIN_AUTH_ID_VALUE =\n+      \"TuKUeFdyWz4E2A1-LqQcoYKBpMsfLnl-KjiuRFuxWcM3sQg\";\n+\n+  public static final String EMAIL_VALUE = \"mockit_email@grr.la\";\n+\n+  @Autowired private UserRegAdminRepository userRegAdminRepository;\n+\n+  @Autowired private StudyRepository studyRepository;\n+\n+  @Autowired private LocationRepository locationRepository;\n+\n+  @Autowired private StudyPermissionRepository studyPermissionRepository;\n+\n+  @Autowired SitePermissionRepository sitePermissionRepository;\n+\n+  @Autowired AppPermissionRepository appPermissionRepository;\n+\n+  @Autowired AppRepository appRepository;\n+\n+  public UserRegAdminEntity newUserRegAdminEntity() {\n+    UserRegAdminEntity userRegAdminEntity = new UserRegAdminEntity();\n+    userRegAdminEntity.setEmail(EMAIL_VALUE);\n+    userRegAdminEntity.setFirstName(\"mockito\");\n+    userRegAdminEntity.setLastName(\"mockito_last_name\");\n+    userRegAdminEntity.setManageLocations(2);\n+    userRegAdminEntity.setStatus(1);\n+    userRegAdminEntity.setUrAdminAuthId(ADMIN_AUTH_ID_VALUE);\n+    userRegAdminEntity.setSuperAdmin(true);\n+    return userRegAdminEntity;\n+  }\n+\n+  public StudyEntity newStudyEntity() {\n+    StudyEntity studyEntity = new StudyEntity();\n+    studyEntity.setCustomId(\"StudyID01\");\n+    studyEntity.setCategory(\"Public Health\");\n+    studyEntity.setEnrolling(\"Yes\");\n+    studyEntity.setStatus(\"Active\");\n+    studyEntity.setName(\"Covid19\");\n+    studyEntity.setSponsor(\"FDA\");", "originalCommit": "6f78c34447f0bf5d4bf0135a67219571f976f676", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIyMTgyNQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/622#discussion_r456221825", "bodyText": "We are using SonarLint to improve the code quality, it'll suggest us to extract the string values to constants  if values appeared more than once.", "author": "Kantharajut-btc", "createdAt": "2020-07-17T05:12:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE0NjIxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE0NzY3Ng==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/622#discussion_r456147676", "bodyText": "There should be another test here for SITE_EXISTS error", "author": "saminguyen", "createdAt": "2020-07-17T00:15:12Z", "path": "participant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/SitesControllerTest.java", "diffHunk": "@@ -0,0 +1,187 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static com.google.cloud.healthcare.fdamystudies.common.JsonUtils.readJsonFile;\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.CoreMatchers.notNullValue;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;\n+import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+\n+import java.util.Collections;\n+import java.util.Optional;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.skyscreamer.jsonassert.JSONAssert;\n+import org.skyscreamer.jsonassert.JSONCompareMode;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.MediaType;\n+import org.springframework.test.web.servlet.MvcResult;\n+\n+import com.google.cloud.healthcare.fdamystudies.beans.SiteRequest;\n+import com.google.cloud.healthcare.fdamystudies.common.ApiEndpoint;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;\n+import com.google.cloud.healthcare.fdamystudies.common.ErrorCode;\n+import com.google.cloud.healthcare.fdamystudies.common.JsonUtils;\n+import com.google.cloud.healthcare.fdamystudies.common.MessageCode;\n+import com.google.cloud.healthcare.fdamystudies.controller.SiteController;\n+import com.google.cloud.healthcare.fdamystudies.helper.TestDataHelper;\n+import com.google.cloud.healthcare.fdamystudies.model.AppEntity;\n+import com.google.cloud.healthcare.fdamystudies.model.AppPermissionEntity;\n+import com.google.cloud.healthcare.fdamystudies.model.LocationEntity;\n+import com.google.cloud.healthcare.fdamystudies.model.SiteEntity;\n+import com.google.cloud.healthcare.fdamystudies.model.SitePermissionEntity;\n+import com.google.cloud.healthcare.fdamystudies.model.StudyEntity;\n+import com.google.cloud.healthcare.fdamystudies.model.StudyPermissionEntity;\n+import com.google.cloud.healthcare.fdamystudies.model.UserRegAdminEntity;\n+import com.google.cloud.healthcare.fdamystudies.repository.SiteRepository;\n+import com.google.cloud.healthcare.fdamystudies.service.SiteService;\n+import com.google.cloud.healthcare.fdamystudies.util.Constants;\n+import com.jayway.jsonpath.JsonPath;\n+\n+public class SitesControllerTest extends BaseMockIT {\n+\n+  private static String siteId;\n+\n+  @Autowired private SiteController controller;\n+  @Autowired private SiteService siteService;\n+  @Autowired private TestDataHelper testDataHelper;\n+  @Autowired private SiteRepository siteRepository;\n+\n+  private UserRegAdminEntity userRegAdminEntity;\n+  private StudyEntity studyEntity;\n+  private LocationEntity locationEntity;\n+  private AppEntity appEntity;\n+\n+  @BeforeEach\n+  public void setUp() {\n+    locationEntity = testDataHelper.createLocation();\n+    userRegAdminEntity = testDataHelper.createUserRegAdminEntity();\n+    appEntity = testDataHelper.createAppEntity(userRegAdminEntity);\n+    studyEntity = testDataHelper.createStudyEntity(userRegAdminEntity, appEntity);\n+  }\n+\n+  @Test\n+  public void contextLoads() {\n+    assertNotNull(controller);\n+    assertNotNull(mockMvc);\n+    assertNotNull(siteService);\n+  }\n+\n+  @Test\n+  public void shouldReturnBadRequestForAddNewSite() throws Exception {\n+    HttpHeaders headers = newCommonHeaders();\n+    SiteRequest siteRequest = new SiteRequest();\n+    MvcResult result =\n+        mockMvc\n+            .perform(\n+                post(ApiEndpoint.ADD_NEW_SITE.getPath())\n+                    .content(JsonUtils.asJsonString(siteRequest))\n+                    .headers(headers)\n+                    .contextPath(getContextPath()))\n+            .andDo(print())\n+            .andExpect(status().isBadRequest())\n+            .andExpect(jsonPath(\"$.violations\").isArray())\n+            .andReturn();\n+\n+    String actualResponse = result.getResponse().getContentAsString();\n+    String expectedResponse = readJsonFile(\"/responses/add_site_bad_request.json\");\n+    JSONAssert.assertEquals(expectedResponse, actualResponse, JSONCompareMode.NON_EXTENSIBLE);\n+  }\n+\n+  @Test\n+  public void shouldReturnSitePermissionAccessDeniedForAddNewSite() throws Exception {\n+    // pre-condition: deny study permission\n+    StudyPermissionEntity studyPermissionEntity = studyEntity.getStudyPermissions().get(0);\n+    studyPermissionEntity.setEdit(Constants.VIEW_VALUE);\n+    studyEntity = testDataHelper.getStudyRepository().saveAndFlush(studyEntity);\n+\n+    // pre-condition: deny app permission\n+    AppPermissionEntity appPermissionEntity = appEntity.getAppPermissions().get(0);\n+    appPermissionEntity.setEdit(Constants.VIEW_VALUE);\n+    appEntity = testDataHelper.getAppRepository().saveAndFlush(appEntity);\n+    HttpHeaders headers = newCommonHeaders();\n+    SiteRequest siteRequest = newSiteRequest();\n+\n+    mockMvc\n+        .perform(\n+            post(ApiEndpoint.ADD_NEW_SITE.getPath())\n+                .content(JsonUtils.asJsonString(siteRequest))\n+                .headers(headers)\n+                .contextPath(getContextPath()))\n+        .andDo(print())\n+        .andExpect(status().isForbidden())\n+        .andExpect(\n+            jsonPath(\n+                \"$.error_description\",\n+                is(ErrorCode.SITE_PERMISSION_ACEESS_DENIED.getDescription())));\n+  }\n+", "originalCommit": "6f78c34447f0bf5d4bf0135a67219571f976f676", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI2NDUzNw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/622#discussion_r456264537", "bodyText": "Added shouldReturnSiteExistsError() test, please review", "author": "Kantharajut-btc", "createdAt": "2020-07-17T07:21:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE0NzY3Ng=="}], "type": "inlineReview"}, {"oid": "3b7002f10fe0bf77021f0b82400297714aba5e9f", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/3b7002f10fe0bf77021f0b82400297714aba5e9f", "message": "added integration test case for SITE_EXISTS scenario\n\nadded integration test case for SITE_EXISTS scenario", "committedDate": "2020-07-17T06:26:41Z", "type": "commit"}, {"oid": "ce4c4ca3e66f9c6e563fb99fbac53b556b7f235a", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/ce4c4ca3e66f9c6e563fb99fbac53b556b7f235a", "message": " Added shouldReturnSiteExistsError() test\n\n Added shouldReturnSiteExistsError() test", "committedDate": "2020-07-17T07:19:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk2NDg2Mg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/622#discussion_r456964862", "bodyText": "This method is currently not used", "author": "saminguyen", "createdAt": "2020-07-19T22:46:01Z", "path": "participant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/helper/TestDataHelper.java", "diffHunk": "@@ -102,11 +110,41 @@ public AppEntity createAppEntity(UserRegAdminEntity userEntity) {\n \n   public StudyEntity createStudyEntity(UserRegAdminEntity userEntity, AppEntity appEntity) {\n     StudyEntity studyEntity = new StudyEntity();\n+    studyEntity.setType(\"CLOSE\");\n     StudyPermissionEntity studyPermissionEntity = new StudyPermissionEntity();\n     studyPermissionEntity.setUrAdminUser(userEntity);\n     studyPermissionEntity.setEdit(EDIT_VALUE);\n     studyPermissionEntity.setAppInfo(appEntity);\n     studyEntity.addStudyPermissionEntity(studyPermissionEntity);\n     return studyRepository.saveAndFlush(studyEntity);\n   }\n+\n+  public SiteEntity newSiteEntity() {\n+    SiteEntity siteEntity = new SiteEntity();\n+    siteEntity.setName(\"siteName\");\n+\n+    return siteEntity;\n+  }\n+\n+  public SiteEntity createSiteEntity(\n+      StudyEntity studyEntity, UserRegAdminEntity urAdminUser, AppEntity appEntity) {\n+    SiteEntity siteEntity = newSiteEntity();\n+    SitePermissionEntity sitePermissionEntity = new SitePermissionEntity();\n+    sitePermissionEntity.setStudy(studyEntity);\n+    sitePermissionEntity.setUrAdminUser(urAdminUser);\n+    sitePermissionEntity.setAppInfo(appEntity);\n+    siteEntity.addSitePermissionEntity(sitePermissionEntity);\n+    return siteRepository.saveAndFlush(siteEntity);\n+  }\n+\n+  public SiteEntity createSiteEntitywithStudy(\n+      UserRegAdminEntity userRegAdminEntity, StudyEntity studyEntity) {\n+    SiteEntity siteEntity = newSiteEntity();\n+    SitePermissionEntity sitePermissionEntity = new SitePermissionEntity();\n+    sitePermissionEntity.setStudy(studyEntity);\n+    sitePermissionEntity.setUrAdminUser(userRegAdminEntity);\n+    sitePermissionEntity.setSite(siteEntity);\n+    siteEntity.addSitePermissionEntity(sitePermissionEntity);\n+    return siteRepository.saveAndFlush(siteEntity);\n+  }", "originalCommit": "ce4c4ca3e66f9c6e563fb99fbac53b556b7f235a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA4MjU5OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/622#discussion_r457082599", "bodyText": "Removed unused method", "author": "Kantharajut-btc", "createdAt": "2020-07-20T06:07:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk2NDg2Mg=="}], "type": "inlineReview"}, {"oid": "07fdf7e28c4d4cc7e1fb8ee253cb1e68a8551323", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/07fdf7e28c4d4cc7e1fb8ee253cb1e68a8551323", "message": "Removed unused mehod\n\nRemoved unused mehod", "committedDate": "2020-07-20T06:13:17Z", "type": "commit"}, {"oid": "c4961d7e3c72069cc43ae6e527da432ece4cb5cd", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/c4961d7e3c72069cc43ae6e527da432ece4cb5cd", "message": "Merge branch 'participant-manager-service-sites-end-point' into participant-manager-service-sites-integration-test-cases", "committedDate": "2020-07-20T10:55:40Z", "type": "commit"}, {"oid": "bf8a4d4734302093bf9c3164863951a085c6449b", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/bf8a4d4734302093bf9c3164863951a085c6449b", "message": "PR comment fixes\n\nPR comment fixes", "committedDate": "2020-07-20T11:32:42Z", "type": "commit"}, {"oid": "95890c2c6c6fe1a73e250fd471b3745f6b602e37", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/95890c2c6c6fe1a73e250fd471b3745f6b602e37", "message": "Merge branch 'develop' into participant-manager-service-sites-integration-test-cases", "committedDate": "2020-08-08T08:15:06Z", "type": "commit"}, {"oid": "146c76d21d173efabd92bacf3c686d456a1bf135", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/146c76d21d173efabd92bacf3c686d456a1bf135", "message": "Merge branch 'develop' into participant-manager-service-sites-integration-test-cases", "committedDate": "2020-08-10T05:27:12Z", "type": "commit"}]}