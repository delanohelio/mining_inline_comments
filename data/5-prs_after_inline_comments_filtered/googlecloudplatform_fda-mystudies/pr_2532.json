{"pr_number": 2532, "pr_title": "Enroll Management Service: Server side validation", "pr_createdAt": "2020-12-22T15:38:05Z", "pr_url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/2532", "timeline": [{"oid": "50fbd65a4644d6b5de369daa60bf0bf67a658f64", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/50fbd65a4644d6b5de369daa60bf0bf67a658f64", "message": "enroll-server-side-validation", "committedDate": "2020-12-22T15:34:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM0NzI4OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/2532#discussion_r547347289", "bodyText": "[enroll-mgmt Checks] reported by reviewdog \ud83d\udc36\n'}' at column 5 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).", "author": "github-actions", "createdAt": "2020-12-22T15:38:49Z", "path": "participant-datastore/enroll-mgmt-module/enroll-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/EnrollmentTokenController.java", "diffHunk": "@@ -61,76 +62,61 @@\n   @PostMapping(value = \"/validateEnrollmentToken\", produces = MediaType.APPLICATION_JSON_VALUE)\n   public ResponseEntity<?> validateEnrollmentToken(\n       @RequestHeader(\"userId\") String userId,\n-      @RequestBody EnrollmentBean enrollmentBean,\n+      @Valid @RequestBody EnrollmentBean enrollmentBean,\n       @Context HttpServletResponse response,\n       @Context HttpServletRequest request) {\n     logger.info(\"ValidateEnrollmentTokenController validateEnrollmentToken() - Starts \");\n     ErrorBean errorBean = null;\n     AuditLogEventRequest auditRequest = AuditEventMapper.fromHttpServletRequest(request);\n     auditRequest.setUserId(userId);\n \n-    if (enrollmentBean != null) {\n-      if (StringUtils.isEmpty(enrollmentBean.getStudyId())) {\n+    if (!enrollmentTokenfService.studyExists(enrollmentBean.getStudyId())) {\n+      ErrorResponseUtil.getFailureResponse(\n+          ErrorResponseUtil.ErrorCodes.STATUS_103.getValue(),\n+          ErrorResponseUtil.ErrorCodes.INVALID_INPUT.getValue(),\n+          ErrorResponseUtil.ErrorCodes.STUDYID_NOT_EXIST.getValue(),\n+          response);\n+      return null;\n+    } else if (!StringUtils.isEmpty(enrollmentBean.getToken())) {\n+      if (enrollmentTokenfService.hasParticipant(\n+          enrollmentBean.getStudyId(), enrollmentBean.getToken())) {\n         ErrorResponseUtil.getFailureResponse(\n-            ErrorResponseUtil.ErrorCodes.STATUS_102.getValue(),\n+            ErrorResponseUtil.ErrorCodes.STATUS_103.getValue(),\n             ErrorResponseUtil.ErrorCodes.INVALID_INPUT.getValue(),\n-            ErrorResponseUtil.ErrorCodes.ERROR_REQUIRED.getValue(),\n+            ErrorResponseUtil.ErrorCodes.TOKEN_ALREADY_USE.getValue(),\n             response);\n         return null;\n-      } else if (!enrollmentTokenfService.studyExists(enrollmentBean.getStudyId())) {\n+      } else if (!enrollManagementUtil.isChecksumValid(enrollmentBean.getToken())) {\n         ErrorResponseUtil.getFailureResponse(\n-            ErrorResponseUtil.ErrorCodes.STATUS_103.getValue(),\n+            ErrorResponseUtil.ErrorCodes.STATUS_102.getValue(),\n             ErrorResponseUtil.ErrorCodes.INVALID_INPUT.getValue(),\n-            ErrorResponseUtil.ErrorCodes.STUDYID_NOT_EXIST.getValue(),\n+            ErrorResponseUtil.ErrorCodes.INVALID_TOKEN.getValue(),\n             response);\n+        enrollAuditEventHelper.logEvent(ENROLLMENT_TOKEN_FOUND_INVALID, auditRequest);\n         return null;\n-      } else if (!StringUtils.isEmpty(enrollmentBean.getToken())) {\n-        if (enrollmentTokenfService.hasParticipant(\n-            enrollmentBean.getStudyId(), enrollmentBean.getToken())) {\n-          ErrorResponseUtil.getFailureResponse(\n-              ErrorResponseUtil.ErrorCodes.STATUS_103.getValue(),\n-              ErrorResponseUtil.ErrorCodes.INVALID_INPUT.getValue(),\n-              ErrorResponseUtil.ErrorCodes.TOKEN_ALREADY_USE.getValue(),\n-              response);\n-          return null;\n-        } else if (!enrollManagementUtil.isChecksumValid(enrollmentBean.getToken())) {\n-          ErrorResponseUtil.getFailureResponse(\n-              ErrorResponseUtil.ErrorCodes.STATUS_102.getValue(),\n-              ErrorResponseUtil.ErrorCodes.INVALID_INPUT.getValue(),\n-              ErrorResponseUtil.ErrorCodes.INVALID_TOKEN.getValue(),\n-              response);\n-          enrollAuditEventHelper.logEvent(ENROLLMENT_TOKEN_FOUND_INVALID, auditRequest);\n-          return null;\n-        } else if (!enrollmentTokenfService.isValidStudyToken(\n-            enrollmentBean.getToken(), enrollmentBean.getStudyId(), userId)) {\n-          ErrorResponseUtil.getFailureResponse(\n-              ErrorResponseUtil.ErrorCodes.STATUS_102.getValue(),\n-              ErrorResponseUtil.ErrorCodes.INVALID_INPUT.getValue(),\n-              ErrorResponseUtil.ErrorCodes.UNKNOWN_TOKEN.getValue(),\n-              response);\n-\n-          enrollAuditEventHelper.logEvent(ENROLLMENT_TOKEN_FOUND_INVALID, auditRequest);\n-          return null;\n-        }\n-      }\n-      // Allow for the possibility that someone can enroll without using an enrollment\n-      // token\n-      else if (enrollmentTokenfService.enrollmentTokenRequired(enrollmentBean.getStudyId())) {\n+      } else if (!enrollmentTokenfService.isValidStudyToken(\n+          enrollmentBean.getToken(), enrollmentBean.getStudyId(), userId)) {\n         ErrorResponseUtil.getFailureResponse(\n             ErrorResponseUtil.ErrorCodes.STATUS_102.getValue(),\n             ErrorResponseUtil.ErrorCodes.INVALID_INPUT.getValue(),\n-            ErrorResponseUtil.ErrorCodes.TOKEN_REQUIRED.getValue(),\n+            ErrorResponseUtil.ErrorCodes.UNKNOWN_TOKEN.getValue(),\n             response);\n+\n+        enrollAuditEventHelper.logEvent(ENROLLMENT_TOKEN_FOUND_INVALID, auditRequest);\n         return null;\n       }\n-    } else {\n+    }", "originalCommit": "50fbd65a4644d6b5de369daa60bf0bf67a658f64", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM1NTgzNA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/2532#discussion_r547355834", "bodyText": "Fixed the comment.", "author": "navya-BTC", "createdAt": "2020-12-22T15:54:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM0NzI4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM0NzI5NA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/2532#discussion_r547347294", "bodyText": "[enroll-mgmt Checks] reported by reviewdog \ud83d\udc36\nAbbreviation in name 'participantStudiesBO' must contain no more than '1' consecutive capital letters.", "author": "github-actions", "createdAt": "2020-12-22T15:38:50Z", "path": "participant-datastore/enroll-mgmt-module/enroll-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/StudyStateServiceImpl.java", "diffHunk": "@@ -208,43 +208,41 @@ public StudyStateRespBean saveParticipantStudies(\n \n     List<StudyStateBean> serviceResponseList = new ArrayList<>();\n \n-    if (userId != null) {\n-      UserDetailsEntity userDetailsEntity = userRegAdminUserDao.getRecord(userId);\n-      if (userDetailsEntity == null) {\n-        throw new ErrorCodeException(ErrorCode.USER_NOT_FOUND);\n-      }\n+    UserDetailsEntity userDetailsEntity = userRegAdminUserDao.getRecord(userId);\n+    if (userDetailsEntity == null) {\n+      throw new ErrorCodeException(ErrorCode.USER_NOT_FOUND);\n+    }\n \n-      List<ParticipantStudyEntity> participantStudiesList =\n-          participantStudiesInfoDao.getParticipantStudiesInfo(userDetailsEntity.getUserId());\n-      if (participantStudiesList != null && !participantStudiesList.isEmpty()) {\n-        for (ParticipantStudyEntity participantStudiesBO : participantStudiesList) {\n-          StudyStateBean studyStateBean = BeanUtil.getBean(StudyStateBean.class);\n-          if (participantStudiesBO.getParticipantRegistrySite() != null) {\n-            String enrolledTokenVal =\n-                studyStateDao.getEnrollTokenForParticipant(\n-                    participantStudiesBO.getParticipantRegistrySite().getId());\n-            studyStateBean.setHashedToken(\n-                EnrollmentManagementUtil.getHashedValue(enrolledTokenVal.toUpperCase()));\n-          }\n-          if (participantStudiesBO.getStudy() != null) {\n-            studyStateBean.setStudyId(participantStudiesBO.getStudy().getCustomId());\n-          }\n-          studyStateBean.setStatus(participantStudiesBO.getStatus());\n-          if (participantStudiesBO.getParticipantId() != null) {\n-            studyStateBean.setParticipantId(participantStudiesBO.getParticipantId());\n-          }\n-          studyStateBean.setCompletion(participantStudiesBO.getCompletion());\n-          studyStateBean.setBookmarked(participantStudiesBO.getBookmark());\n-          studyStateBean.setAdherence(participantStudiesBO.getAdherence());\n-          if (participantStudiesBO.getEnrolledDate() != null) {\n-            studyStateBean.setEnrolledDate(\n-                MyStudiesUserRegUtil.getIsoDateFormat(participantStudiesBO.getEnrolledDate()));\n-          }\n-          if (participantStudiesBO.getSite() != null) {\n-            studyStateBean.setSiteId(participantStudiesBO.getSite().getId().toString());\n-          }\n-          serviceResponseList.add(studyStateBean);\n+    List<ParticipantStudyEntity> participantStudiesList =\n+        participantStudiesInfoDao.getParticipantStudiesInfo(userDetailsEntity.getUserId());\n+    if (participantStudiesList != null && !participantStudiesList.isEmpty()) {\n+      for (ParticipantStudyEntity participantStudiesBO : participantStudiesList) {", "originalCommit": "50fbd65a4644d6b5de369daa60bf0bf67a658f64", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM1NTk2NA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/2532#discussion_r547355964", "bodyText": "Fixed the comment.", "author": "navya-BTC", "createdAt": "2020-12-22T15:54:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM0NzI5NA=="}], "type": "inlineReview"}, {"oid": "b1c08cf480305d246e662da5fd068fb676e77385", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/b1c08cf480305d246e662da5fd068fb676e77385", "message": "Fixed the comment", "committedDate": "2020-12-22T15:44:03Z", "type": "commit"}, {"oid": "399aab9d84e4d3bc692ac5c270905e0615b0508f", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/399aab9d84e4d3bc692ac5c270905e0615b0508f", "message": "Merge branch 'develop' into enroll-server-side-validation", "committedDate": "2020-12-23T04:57:01Z", "type": "commit"}, {"oid": "903255944f6e5bd74a961f36670c1dd28223a5c1", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/903255944f6e5bd74a961f36670c1dd28223a5c1", "message": "Resolved conflict", "committedDate": "2020-12-23T05:06:04Z", "type": "commit"}, {"oid": "d697c902e3701ab525336ce482ec8599f63f06ea", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/d697c902e3701ab525336ce482ec8599f63f06ea", "message": "Merge branch 'develop' into enroll-server-side-validation", "committedDate": "2020-12-28T08:09:03Z", "type": "commit"}]}