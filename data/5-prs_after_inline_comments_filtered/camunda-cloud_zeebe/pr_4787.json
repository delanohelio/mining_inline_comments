{"pr_number": 4787, "pr_title": "fix(exporters/elasticsearch-exporter): avoid OOM when retrying", "pr_createdAt": "2020-06-22T13:05:56Z", "pr_url": "https://github.com/camunda-cloud/zeebe/pull/4787", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU5MzE5OA==", "url": "https://github.com/camunda-cloud/zeebe/pull/4787#discussion_r443593198", "bodyText": "We could add a comment here why we're filtering it out. I think it is not so obvious.", "author": "saig0", "createdAt": "2020-06-22T14:20:23Z", "path": "exporters/elasticsearch-exporter/src/main/java/io/zeebe/exporter/ElasticsearchClient.java", "diffHunk": "@@ -118,7 +125,10 @@ public void bulk(final Map<String, Object> command, final Record<?> record) {\n           \"Failed to serialize bulk request command to JSON\", e);\n     }\n \n-    bulkRequest.add(serializedCommand + \"\\n\" + record.toJson());\n+    final String jsonCommand = serializedCommand + \"\\n\" + record.toJson();\n+    if (bulkRequest.isEmpty() || !bulkRequest.get(bulkRequest.size() - 1).equals(jsonCommand)) {", "originalCommit": "d04ef3425f04be022802f0bc583fb3fa273c0a13", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU5NTQ4OA==", "url": "https://github.com/camunda-cloud/zeebe/pull/4787#discussion_r443595488", "bodyText": "A new-line could improve the reading flow.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                when(recordMock.toJson()).thenReturn(\"{}\");\n          \n          \n            \n                client.index(recordMock);\n          \n          \n            \n                when(recordMock.toJson()).thenReturn(\"{}\");\n          \n          \n            \n                \n          \n          \n            \n                client.index(recordMock);", "author": "saig0", "createdAt": "2020-06-22T14:23:02Z", "path": "exporters/elasticsearch-exporter/src/test/java/io/zeebe/exporter/ElasticsearchClientTest.java", "diffHunk": "@@ -143,4 +145,22 @@ public void shouldThrowExceptionIfFailToFlushBulk() {\n             \"mapper_parsing_exception\",\n             \"failed to parse\");\n   }\n+\n+  @Test\n+  public void shouldIgnoreRecordIfDuplicateOfLast() {\n+    // given\n+    final Record<VariableRecordValue> recordMock = mock(Record.class);\n+    when(recordMock.getPartitionId()).thenReturn(1);\n+    when(recordMock.getValueType()).thenReturn(ValueType.WORKFLOW_INSTANCE);\n+    when(recordMock.getKey()).thenReturn(RECORD_KEY + 1);\n+    when(recordMock.toJson()).thenReturn(\"{}\");\n+    client.index(recordMock);", "originalCommit": "d04ef3425f04be022802f0bc583fb3fa273c0a13", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "991653322e6d3b046eff4d8eb9c387eab38a6f8a", "url": "https://github.com/camunda-cloud/zeebe/commit/991653322e6d3b046eff4d8eb9c387eab38a6f8a", "message": "fix(exporters/elasticsearch-exporter): avoid OOM when retrying", "committedDate": "2020-06-22T15:14:30Z", "type": "commit"}, {"oid": "991653322e6d3b046eff4d8eb9c387eab38a6f8a", "url": "https://github.com/camunda-cloud/zeebe/commit/991653322e6d3b046eff4d8eb9c387eab38a6f8a", "message": "fix(exporters/elasticsearch-exporter): avoid OOM when retrying", "committedDate": "2020-06-22T15:14:30Z", "type": "forcePushed"}]}