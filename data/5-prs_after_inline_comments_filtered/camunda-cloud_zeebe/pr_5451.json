{"pr_number": 5451, "pr_title": "[Backport 0.24] Admin api for brokers", "pr_createdAt": "2020-10-01T09:12:32Z", "pr_url": "https://github.com/camunda-cloud/zeebe/pull/5451", "timeline": [{"oid": "84e9c9d2117189998a0382f42386e0e3de43b0a5", "url": "https://github.com/camunda-cloud/zeebe/commit/84e9c9d2117189998a0382f42386e0e3de43b0a5", "message": "chore(engine): enable stream processor to be paused and resumed on command", "committedDate": "2020-09-25T08:35:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODEwNzUxNA==", "url": "https://github.com/camunda-cloud/zeebe/pull/5451#discussion_r498107514", "bodyText": "I added this test to test the follower status. It is not in original PR. Once this is reviewed, I will port it to develop.", "author": "deepthidevaki", "createdAt": "2020-10-01T09:28:38Z", "path": "qa/integration-tests/src/test/java/io/zeebe/broker/it/system/BrokerAdminServiceTest.java", "diffHunk": "@@ -0,0 +1,169 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.0. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.0.\n+ */\n+package io.zeebe.broker.it.system;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import io.atomix.raft.RaftServer.Role;\n+import io.zeebe.broker.Broker;\n+import io.zeebe.broker.it.clustering.ClusteringRule;\n+import io.zeebe.broker.it.util.GrpcClientRule;\n+import io.zeebe.broker.system.management.BrokerAdminService;\n+import io.zeebe.engine.processor.StreamProcessor.Phase;\n+import org.awaitility.Awaitility;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.RuleChain;\n+import org.junit.rules.Timeout;\n+\n+public class BrokerAdminServiceTest {\n+  private final Timeout testTimeout = Timeout.seconds(60);\n+  private final ClusteringRule clusteringRule =\n+      new ClusteringRule(\n+          1,\n+          3,\n+          3,\n+          cfg -> {\n+            cfg.getData().setLogIndexDensity(1);\n+          });\n+  private final GrpcClientRule clientRule = new GrpcClientRule(clusteringRule);\n+\n+  @Rule\n+  public RuleChain ruleChain =\n+      RuleChain.outerRule(testTimeout).around(clusteringRule).around(clientRule);\n+\n+  private BrokerAdminService leaderAdminService;\n+  private Broker leader;\n+\n+  @Before\n+  public void before() {\n+    leader = clusteringRule.getBroker(clusteringRule.getLeaderForPartition(1).getNodeId());\n+    leaderAdminService = leader.getBrokerAdminService();\n+  }\n+\n+  @Test\n+  public void shouldReportPartitionStatus() {", "originalCommit": "acc5880c667f11cf6b5c825188386a23e659245f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f9d94622f63f6c9735bcb457b2f74232198ba8e3", "url": "https://github.com/camunda-cloud/zeebe/commit/f9d94622f63f6c9735bcb457b2f74232198ba8e3", "message": "chore(broker): add admin service to trigger snapshots and pause processing", "committedDate": "2020-10-02T06:50:35Z", "type": "commit"}, {"oid": "a7be0cc77148952fb8280ceabee78228ed652b0c", "url": "https://github.com/camunda-cloud/zeebe/commit/a7be0cc77148952fb8280ceabee78228ed652b0c", "message": "feat(broker): expose webendpoints to trigger snapshots and pause processing externally", "committedDate": "2020-10-02T06:50:39Z", "type": "commit"}, {"oid": "a7be0cc77148952fb8280ceabee78228ed652b0c", "url": "https://github.com/camunda-cloud/zeebe/commit/a7be0cc77148952fb8280ceabee78228ed652b0c", "message": "feat(broker): expose webendpoints to trigger snapshots and pause processing externally", "committedDate": "2020-10-02T06:50:39Z", "type": "forcePushed"}]}