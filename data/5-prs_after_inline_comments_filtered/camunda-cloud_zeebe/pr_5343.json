{"pr_number": 5343, "pr_title": "feat(clients/go, clients/java): Add message key to the response of publish message", "pr_createdAt": "2020-09-12T19:52:59Z", "pr_url": "https://github.com/camunda-cloud/zeebe/pull/5343", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk3NDY5Ng==", "url": "https://github.com/camunda-cloud/zeebe/pull/5343#discussion_r489974696", "bodyText": "Please add some JavaDoc.\nFor example, Returns the record key of the message that was published.", "author": "saig0", "createdAt": "2020-09-17T05:12:30Z", "path": "clients/java/src/main/java/io/zeebe/client/api/response/PublishMessageResponse.java", "diffHunk": "@@ -15,4 +15,7 @@\n  */\n package io.zeebe.client.api.response;\n \n-public interface PublishMessageResponse {}\n+public interface PublishMessageResponse {\n+\n+  long messageKey();", "originalCommit": "c30f7eb1cb58d075d04d4966bf8ae1aa15fc500b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk3NjA2NQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/5343#discussion_r489976065", "bodyText": "Let's make the class final.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class PublishMessageResponseImpl implements PublishMessageResponse {\n          \n          \n            \n            public final class PublishMessageResponseImpl implements PublishMessageResponse {", "author": "saig0", "createdAt": "2020-09-17T05:17:30Z", "path": "clients/java/src/main/java/io/zeebe/client/impl/response/PublishMessageResponseImpl.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Copyright \u00a9 2017 camunda services GmbH (info@camunda.com)\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.zeebe.client.impl.response;\n+\n+import io.zeebe.client.api.response.PublishMessageResponse;\n+import io.zeebe.gateway.protocol.GatewayOuterClass;\n+\n+public class PublishMessageResponseImpl implements PublishMessageResponse {", "originalCommit": "c30f7eb1cb58d075d04d4966bf8ae1aa15fc500b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5ca8908ed1f126ef93a29db1eb62e09e10110573", "url": "https://github.com/camunda-cloud/zeebe/commit/5ca8908ed1f126ef93a29db1eb62e09e10110573", "message": "feat(clients/go, clients/java): Add message key to the response of publish message", "committedDate": "2020-09-18T06:40:21Z", "type": "forcePushed"}, {"oid": "4486b2955c3285d6032b51665f66b3248ee60f9b", "url": "https://github.com/camunda-cloud/zeebe/commit/4486b2955c3285d6032b51665f66b3248ee60f9b", "message": "feat(clients/go, clients/java): Add message key to the response of publish message", "committedDate": "2020-09-18T07:21:00Z", "type": "forcePushed"}, {"oid": "15356a755b1f99988a837a9897d4980877596964", "url": "https://github.com/camunda-cloud/zeebe/commit/15356a755b1f99988a837a9897d4980877596964", "message": "feat(clients/go, clients/java): Add message key to the response of publish message", "committedDate": "2020-09-28T04:57:18Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg3ODI0MA==", "url": "https://github.com/camunda-cloud/zeebe/pull/5343#discussion_r495878240", "bodyText": "Align the method name with the other responses.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              long messageKey();\n          \n          \n            \n              long getMessageKey();", "author": "saig0", "createdAt": "2020-09-28T11:46:10Z", "path": "clients/java/src/main/java/io/zeebe/client/api/response/PublishMessageResponse.java", "diffHunk": "@@ -15,4 +15,12 @@\n  */\n package io.zeebe.client.api.response;\n \n-public interface PublishMessageResponse {}\n+public interface PublishMessageResponse {\n+\n+  /**\n+   * Returns the record key of the message that was published.\n+   *\n+   * @return record key of the message.\n+   */\n+  long messageKey();", "originalCommit": "15356a755b1f99988a837a9897d4980877596964", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5af68ae406a023710049b900991785c31be5ccdf", "url": "https://github.com/camunda-cloud/zeebe/commit/5af68ae406a023710049b900991785c31be5ccdf", "message": "feat(clients/go, clients/java): Add message key to the response of publish message", "committedDate": "2020-09-29T06:44:35Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY0ODY1MA==", "url": "https://github.com/camunda-cloud/zeebe/pull/5343#discussion_r496648650", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public void shouldReturnNonZeroMessageKey() {\n          \n          \n            \n              public void shouldReturnTheMessageKey() {", "author": "saig0", "createdAt": "2020-09-29T11:40:48Z", "path": "qa/integration-tests/src/test/java/io/zeebe/broker/it/client/command/MessageCorrelationTest.java", "diffHunk": "@@ -174,4 +174,20 @@ public void shouldRejectMessageWithSameId() {\n         .hasMessageContaining(\n             \"Expected to publish a new message with id 'foo', but a message with that id was already published\");\n   }\n+\n+  @Test\n+  public void shouldReturnNonZeroMessageKey() {", "originalCommit": "5af68ae406a023710049b900991785c31be5ccdf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY1NTA3Mg==", "url": "https://github.com/camunda-cloud/zeebe/pull/5343#discussion_r496655072", "bodyText": "We can compare the response key with the record key on the log stream.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                assertThat(response.getMessageKey()).isNotZero();\n          \n          \n            \n                final var messagePublished =\n          \n          \n            \n                    RecordingExporter.messageRecords(MessageIntent.PUBLISHED).getFirst();\n          \n          \n            \n            \n          \n          \n            \n                assertThat(response.getMessageKey()).isEqualTo(messagePublished.getKey());", "author": "saig0", "createdAt": "2020-09-29T11:52:57Z", "path": "qa/integration-tests/src/test/java/io/zeebe/broker/it/client/command/MessageCorrelationTest.java", "diffHunk": "@@ -174,4 +174,20 @@ public void shouldRejectMessageWithSameId() {\n         .hasMessageContaining(\n             \"Expected to publish a new message with id 'foo', but a message with that id was already published\");\n   }\n+\n+  @Test\n+  public void shouldReturnNonZeroMessageKey() {\n+    // when\n+    final PublishMessageResponse response =\n+        CLIENT_RULE\n+            .getClient()\n+            .newPublishMessageCommand()\n+            .messageName(MESSAGE_NAME)\n+            .correlationKey(correlationValue)\n+            .send()\n+            .join();\n+\n+    // then\n+    assertThat(response.getMessageKey()).isNotZero();", "originalCommit": "5af68ae406a023710049b900991785c31be5ccdf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY4Mzg0Mg==", "url": "https://github.com/camunda-cloud/zeebe/pull/5343#discussion_r496683842", "bodyText": "Let's check that we return the correct key.\nFirst, we need to instrument the gateway:\n    // given\n    final long messageKey = 123L;\n    gatewayService.onPublishMessageRequest(messageKey);\n\nWhen we can check the response:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                assertThat(response.getMessageKey()).isZero();\n          \n          \n            \n                assertThat(response.getMessageKey()).isEqualTo(messageKey);\n          \n      \n    \n    \n  \n\nIn io.zeebe.client.util.RecordingGatewayService, we need to add the new method to control the response:\n  public void onPublishMessageRequest(final long key) {\n    addRequestHandler(\n        PublishMessageRequest.class,\n        request -> PublishMessageResponse.newBuilder().setKey(key).build());\n  }", "author": "saig0", "createdAt": "2020-09-29T12:41:32Z", "path": "clients/java/src/test/java/io/zeebe/client/workflow/PublishMessageTest.java", "diffHunk": "@@ -34,21 +35,23 @@\n   @Test\n   public void shouldPublishMessage() {\n     // when\n-    client\n-        .newPublishMessageCommand()\n-        .messageName(\"name\")\n-        .correlationKey(\"key\")\n-        .timeToLive(Duration.ofDays(1))\n-        .messageId(\"theId\")\n-        .send()\n-        .join();\n+    final PublishMessageResponse response =\n+        client\n+            .newPublishMessageCommand()\n+            .messageName(\"name\")\n+            .correlationKey(\"key\")\n+            .timeToLive(Duration.ofDays(1))\n+            .messageId(\"theId\")\n+            .send()\n+            .join();\n \n     // then\n     final PublishMessageRequest request = gatewayService.getLastRequest();\n     assertThat(request.getName()).isEqualTo(\"name\");\n     assertThat(request.getCorrelationKey()).isEqualTo(\"key\");\n     assertThat(request.getMessageId()).isEqualTo(\"theId\");\n     assertThat(request.getTimeToLive()).isEqualTo(Duration.ofDays(1).toMillis());\n+    assertThat(response.getMessageKey()).isZero();", "originalCommit": "5af68ae406a023710049b900991785c31be5ccdf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b707c42bd0de7e9fc79b6f099eed3ebaad33066f", "url": "https://github.com/camunda-cloud/zeebe/commit/b707c42bd0de7e9fc79b6f099eed3ebaad33066f", "message": "feat(clients/go, clients/java): Add message key to the response of publish message", "committedDate": "2020-09-29T13:24:25Z", "type": "commit"}, {"oid": "b707c42bd0de7e9fc79b6f099eed3ebaad33066f", "url": "https://github.com/camunda-cloud/zeebe/commit/b707c42bd0de7e9fc79b6f099eed3ebaad33066f", "message": "feat(clients/go, clients/java): Add message key to the response of publish message", "committedDate": "2020-09-29T13:24:25Z", "type": "forcePushed"}]}