{"pr_number": 3955, "pr_title": "Don't create ZeebeState on compaction", "pr_createdAt": "2020-02-28T12:32:16Z", "pr_url": "https://github.com/camunda-cloud/zeebe/pull/3955", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY4MjEzMQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/3955#discussion_r385682131", "bodyText": "These method names mirror the methods in ZeebeState but I think here they can be shortened to be less redudant. So instead of LastProcessedState#getLastSuccessfulProcessedRecordPosition() something like LastProcessedState#getPosition. I think you get the same information from both. What do you think?", "author": "MiguelPires", "createdAt": "2020-02-28T13:00:23Z", "path": "engine/src/main/java/io/zeebe/engine/state/LastProcessedState.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.0. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.0.\n+ */\n+package io.zeebe.engine.state;\n+\n+import io.zeebe.db.ColumnFamily;\n+import io.zeebe.db.DbContext;\n+import io.zeebe.db.ZeebeDb;\n+import io.zeebe.db.impl.DbLong;\n+import io.zeebe.db.impl.DbString;\n+\n+public final class LastProcessedState {\n+\n+  private static final String LAST_PROCESSED_EVENT_KEY = \"LAST_PROCESSED_EVENT_KEY\";\n+  private static final long NO_EVENTS_PROCESSED = -1L;\n+\n+  private final DbString lastProcessedEventKey;\n+  private final DbLong lastProcessedEventPosition;\n+  private final ColumnFamily<DbString, DbLong> lastProcessedRecordPositionColumnFamily;\n+\n+  public LastProcessedState(final ZeebeDb<ZbColumnFamilies> zeebeDb, final DbContext dbContext) {\n+    lastProcessedEventKey = new DbString();\n+    lastProcessedEventKey.wrapString(LAST_PROCESSED_EVENT_KEY);\n+    lastProcessedEventPosition = new DbLong();\n+    lastProcessedRecordPositionColumnFamily =\n+        zeebeDb.createColumnFamily(\n+            ZbColumnFamilies.DEFAULT, dbContext, lastProcessedEventKey, lastProcessedEventPosition);\n+  }\n+\n+  public void markAsProcessed(final long position) {\n+    lastProcessedEventPosition.wrapLong(position);\n+    lastProcessedRecordPositionColumnFamily.put(lastProcessedEventKey, lastProcessedEventPosition);\n+  }\n+\n+  public long getLastSuccessfulProcessedRecordPosition() {", "originalCommit": "4f40077e73bbf8cfe44d31eb008f96c236a791ad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY5NjI4Mg==", "url": "https://github.com/camunda-cloud/zeebe/pull/3955#discussion_r385696282", "bodyText": "I think you are right. I will change it.", "author": "Zelldon", "createdAt": "2020-02-28T13:32:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY4MjEzMQ=="}], "type": "inlineReview"}, {"oid": "2e4fbcd535a27c05d14172e46e2f45a29313894b", "url": "https://github.com/camunda-cloud/zeebe/commit/2e4fbcd535a27c05d14172e46e2f45a29313894b", "message": "chore(broker): create a LastProcessedState\n\n Introduces a LastProcessState, which can be used by the ZeebeState and the StatePositionSupplier.\n This avoids to creating the ZeebeState in the StatePositionSupplier, which does a lot otherthings like creating FeelEngine etc.", "committedDate": "2020-02-28T15:15:07Z", "type": "commit"}, {"oid": "2e4fbcd535a27c05d14172e46e2f45a29313894b", "url": "https://github.com/camunda-cloud/zeebe/commit/2e4fbcd535a27c05d14172e46e2f45a29313894b", "message": "chore(broker): create a LastProcessedState\n\n Introduces a LastProcessState, which can be used by the ZeebeState and the StatePositionSupplier.\n This avoids to creating the ZeebeState in the StatePositionSupplier, which does a lot otherthings like creating FeelEngine etc.", "committedDate": "2020-02-28T15:15:07Z", "type": "forcePushed"}]}