{"pr_number": 4303, "pr_title": "Replace array with list", "pr_createdAt": "2020-04-14T08:19:07Z", "pr_url": "https://github.com/camunda-cloud/zeebe/pull/4303", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzk1NjYwNQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/4303#discussion_r407956605", "bodyText": "I'm not sure about this line. The comment says that we should copy the subscripts to avoid concurrent access. With this change, the subscriptions are not copied any more. Do you need to care about it?", "author": "saig0", "createdAt": "2020-04-14T08:27:29Z", "path": "util/src/main/java/io/zeebe/util/sched/ActorTask.java", "diffHunk": "@@ -331,7 +329,7 @@ boolean tryWait() {\n     // take copy of subscriptions list: once we set the state to WAITING, the task could be woken up\n     // by another\n     // thread. That thread could modify the subscriptions array.\n-    final ActorSubscription[] subscriptionsCopy = this.subscriptions;\n+    final List<ActorSubscription> subscriptionsRef = this.subscriptions;", "originalCommit": "484826a55c07922f1a88da91db8fd98989511922", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzk1ODA2OA==", "url": "https://github.com/camunda-cloud/zeebe/pull/4303#discussion_r407958068", "bodyText": "Actually this was never a copy. This just stores the reference and this is the same as before, except that the list is not always replaced. But I think it might make sense to just use a thread safe data structure here", "author": "Zelldon", "createdAt": "2020-04-14T08:29:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzk1NjYwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAwODkxMg==", "url": "https://github.com/camunda-cloud/zeebe/pull/4303#discussion_r408008912", "bodyText": "As discussed I copy the elements on the tryWait. Furthermore I added an check for the thread on add and removing subscriptions", "author": "Zelldon", "createdAt": "2020-04-14T09:49:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzk1NjYwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA2ODExOQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/4303#discussion_r408068119", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                ensureCalledFromActorThread(\"removeSubscription(ActorSubscription)\");\n          \n          \n            \n                ensureCalledFromActorThread(\"addSubscription(ActorSubscription)\");", "author": "saig0", "createdAt": "2020-04-14T11:36:35Z", "path": "util/src/main/java/io/zeebe/util/sched/ActorTask.java", "diffHunk": "@@ -489,10 +489,12 @@ public ActorLifecyclePhase getLifecyclePhase() {\n   }\n \n   public void addSubscription(final ActorSubscription subscription) {\n+    ensureCalledFromActorThread(\"removeSubscription(ActorSubscription)\");", "originalCommit": "728ff43bc2bc95f83e8fad5b2acd578490f3bd7d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5e9d9327e77b42b8f114b50289e5bf50ed805108", "url": "https://github.com/camunda-cloud/zeebe/commit/5e9d9327e77b42b8f114b50289e5bf50ed805108", "message": "chore(util/actor): replace array with list\n\n Instead of using an array for the actor subscriptions and implementing\n the resizing by our self we using now a datastructure which is widely\n used for that: an ArrayList...\n\n On tryWait we want to verify the current subscriptions for that case we\n create a copy.\n\n We check the thread and make sure it is an actor thread on removing and\n adding a subscription.", "committedDate": "2020-04-14T12:57:58Z", "type": "commit"}, {"oid": "5e9d9327e77b42b8f114b50289e5bf50ed805108", "url": "https://github.com/camunda-cloud/zeebe/commit/5e9d9327e77b42b8f114b50289e5bf50ed805108", "message": "chore(util/actor): replace array with list\n\n Instead of using an array for the actor subscriptions and implementing\n the resizing by our self we using now a datastructure which is widely\n used for that: an ArrayList...\n\n On tryWait we want to verify the current subscriptions for that case we\n create a copy.\n\n We check the thread and make sure it is an actor thread on removing and\n adding a subscription.", "committedDate": "2020-04-14T12:57:58Z", "type": "forcePushed"}]}