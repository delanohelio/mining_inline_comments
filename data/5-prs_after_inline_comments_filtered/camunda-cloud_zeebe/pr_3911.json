{"pr_number": 3911, "pr_title": "Test message upgradability", "pr_createdAt": "2020-02-24T10:48:05Z", "pr_url": "https://github.com/camunda-cloud/zeebe/pull/3911", "timeline": [{"oid": "7322467bea4c4e9588fe8cb0427fd9d7d8549072", "url": "https://github.com/camunda-cloud/zeebe/commit/7322467bea4c4e9588fe8cb0427fd9d7d8549072", "message": "chore(upgrade-tests): cover message upgradability", "committedDate": "2020-02-25T10:40:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIxMzAwOA==", "url": "https://github.com/camunda-cloud/zeebe/pull/3911#discussion_r388213008", "bodyText": "We could compact the loop with the check a bit. For example:\nArrays.stream(lines).anyMatch(line -> Arrays.stream(pieces).allMatch(line::contains))", "author": "saig0", "createdAt": "2020-03-05T10:43:53Z", "path": "upgrade-tests/src/test/java/io/zeebe/test/ContainerStateRule.java", "diffHunk": "@@ -99,11 +100,24 @@ private void log(final String type, final String log) {\n    *     false\n    */\n   public boolean hasElementInState(final String elementId, final String intent) {\n+    return findLogContaining(\n+        String.format(\"\\\"elementId\\\":\\\"%s\\\"\", elementId),\n+        String.format(\"\\\"intent\\\":\\\"%s\\\"\", intent));\n+  }\n+\n+  /** @return true if the message was found in the specified intent. Otherwise, returns false */\n+  public boolean hasMessageInState(final String name, final String intent) {\n+    return findLogContaining(\n+        String.format(\"\\\"name\\\":\\\"%s\\\"\", name), String.format(\"\\\"intent\\\":\\\"%s\\\"\", intent));\n+  }\n+\n+  // returns true if it finds a line that contains every piece.\n+  boolean findLogContaining(final String... piece) {\n     final String[] lines = broker.getLogs().split(\"\\n\");\n \n     for (int i = lines.length - 1; i >= 0; --i) {\n-      if (lines[i].contains(String.format(\"\\\"elementId\\\":\\\"%s\\\"\", elementId))\n-          && lines[i].contains(String.format(\"\\\"intent\\\":\\\"%s\\\"\", intent))) {\n+      final int finalI = i;\n+      if (Arrays.stream(piece).allMatch(p -> lines[finalI].contains(p))) {", "originalCommit": "7322467bea4c4e9588fe8cb0427fd9d7d8549072", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIyMjEyOA==", "url": "https://github.com/camunda-cloud/zeebe/pull/3911#discussion_r388222128", "bodyText": "I considered that but I thought it was harder to read. I guess it's a matter of preference, I can change it", "author": "MiguelPires", "createdAt": "2020-03-05T11:01:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIxMzAwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIxNDc2Mg==", "url": "https://github.com/camunda-cloud/zeebe/pull/3911#discussion_r388214762", "bodyText": "IMO: a full name is easier to read. So messageWorkflow() instead of msgWorkflow(). But it is more of a personal preference.", "author": "saig0", "createdAt": "2020-03-05T10:47:10Z", "path": "upgrade-tests/src/test/java/io/zeebe/test/UpgradeTest.java", "diffHunk": "@@ -152,6 +161,36 @@ private static BpmnModelInstance jobWorkflow() {\n         state.client().newCompleteCommand(key).send().join();\n   }\n \n+  private static BpmnModelInstance msgWorkflow() {", "originalCommit": "7322467bea4c4e9588fe8cb0427fd9d7d8549072", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIxNTA2NQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/3911#discussion_r388215065", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private static final String MSG = \"msg\";\n          \n          \n            \n              private static final String MESSAGE_NAME = \"message\";", "author": "saig0", "createdAt": "2020-03-05T10:47:45Z", "path": "upgrade-tests/src/test/java/io/zeebe/test/UpgradeTest.java", "diffHunk": "@@ -42,6 +43,7 @@\n   private static final String CURRENT_VERSION = \"current-test\";\n   private static final String PROCESS_ID = \"process\";\n   private static final String TASK = \"task\";\n+  private static final String MSG = \"msg\";", "originalCommit": "7322467bea4c4e9588fe8cb0427fd9d7d8549072", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIxNjE5NQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/3911#discussion_r388216195", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private static Function<ContainerStateRule, Long> messageSubscription() {\n          \n          \n            \n              private static Function<ContainerStateRule, Long> awaitOpenMessageSubscription() {", "author": "saig0", "createdAt": "2020-03-05T10:49:53Z", "path": "upgrade-tests/src/test/java/io/zeebe/test/UpgradeTest.java", "diffHunk": "@@ -152,6 +161,36 @@ private static BpmnModelInstance jobWorkflow() {\n         state.client().newCompleteCommand(key).send().join();\n   }\n \n+  private static BpmnModelInstance msgWorkflow() {\n+    return Bpmn.createExecutableProcess(PROCESS_ID)\n+        .startEvent()\n+        .intermediateCatchEvent(\n+            \"catch\", b -> b.message(m -> m.name(MSG).zeebeCorrelationKey(\"key\")))\n+        .endEvent()\n+        .done();\n+  }\n+\n+  private static Function<ContainerStateRule, Long> messageSubscription() {", "originalCommit": "7322467bea4c4e9588fe8cb0427fd9d7d8549072", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3c172efaa8f7970ca100b654ba06f571981aa5ea", "url": "https://github.com/camunda-cloud/zeebe/commit/3c172efaa8f7970ca100b654ba06f571981aa5ea", "message": "chore(upgrade-tests): cover message upgradability", "committedDate": "2020-03-05T11:58:00Z", "type": "commit"}, {"oid": "3c172efaa8f7970ca100b654ba06f571981aa5ea", "url": "https://github.com/camunda-cloud/zeebe/commit/3c172efaa8f7970ca100b654ba06f571981aa5ea", "message": "chore(upgrade-tests): cover message upgradability", "committedDate": "2020-03-05T11:58:00Z", "type": "forcePushed"}]}