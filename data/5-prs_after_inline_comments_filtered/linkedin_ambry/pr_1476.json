{"pr_number": 1476, "pr_title": "Command line tool to reset replica tokens in Azure", "pr_createdAt": "2020-04-16T20:06:10Z", "pr_url": "https://github.com/linkedin/ambry/pull/1476", "timeline": [{"oid": "6eec7661de73d46b87feb1331446debb7f55c0a9", "url": "https://github.com/linkedin/ambry/commit/6eec7661de73d46b87feb1331446debb7f55c0a9", "message": "Command line tool to reset replica tokens in Azure", "committedDate": "2020-04-16T19:50:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY1NjQ3Mg==", "url": "https://github.com/linkedin/ambry/pull/1476#discussion_r411656472", "bodyText": "Maybe we can either remove Default from here, or change it to empty string.", "author": "ankagrawal", "createdAt": "2020-04-20T20:06:19Z", "path": "ambry-api/src/main/java/com/github/ambry/config/ClusterMapConfig.java", "diffHunk": "@@ -128,25 +133,25 @@\n   /**\n    * The name of the associated cluster for this node.\n    */\n-  @Config(\"clustermap.cluster.name\")\n+  @Config(CLUSTERMAP_CLUSTER_NAME)\n   public final String clusterMapClusterName;\n \n   /**\n    * The name of the associated datacenter for this node.\n    */\n-  @Config(\"clustermap.datacenter.name\")\n+  @Config(CLUSTERMAP_DATACENTER_NAME)\n   public final String clusterMapDatacenterName;\n \n   /**\n    * The host name associated with this node.\n    */\n-  @Config(\"clustermap.host.name\")\n+  @Config(CLUSTERMAP_HOST_NAME)\n   public final String clusterMapHostName;\n \n   /**\n    * The port number associated with this node.\n    */\n-  @Config(\"clustermap.port\")\n+  @Config(CLUSTERMAP_PORT)\n   @Default(\"null\")", "originalCommit": "6eec7661de73d46b87feb1331446debb7f55c0a9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI3Mjc5NQ==", "url": "https://github.com/linkedin/ambry/pull/1476#discussion_r416272795", "bodyText": "I don't know why it's there, but I'd prefer not to touch it right now.", "author": "lightningrob", "createdAt": "2020-04-28T02:04:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY1NjQ3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY1NzQ4MA==", "url": "https://github.com/linkedin/ambry/pull/1476#discussion_r411657480", "bodyText": "javadocs.", "author": "ankagrawal", "createdAt": "2020-04-20T20:08:02Z", "path": "ambry-cloud/src/main/java/com/github/ambry/cloud/azure/AzureBlobDataAccessor.java", "diffHunk": "@@ -129,6 +129,10 @@\n     batchTimeout = null;\n   }\n \n+  public BlobServiceClient getStorageClient() {", "originalCommit": "6eec7661de73d46b87feb1331446debb7f55c0a9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY2Mzk4Ng==", "url": "https://github.com/linkedin/ambry/pull/1476#discussion_r411663986", "bodyText": "Nit: Not sure about how we maintain javadocs for tools. But if we maintain it like prod code, then we might need javadocs for methods in this class.", "author": "ankagrawal", "createdAt": "2020-04-20T20:19:07Z", "path": "ambry-tools/src/main/java/com/github/ambry/tools/admin/AzureTokenResetTool.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/**\n+ * Copyright 2020 LinkedIn Corp. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ */\n+package com.github.ambry.tools.admin;\n+\n+import com.azure.storage.blob.BlobServiceClient;\n+import com.azure.storage.blob.models.BlobStorageException;\n+import com.azure.storage.blob.models.ListBlobContainersOptions;\n+import com.azure.storage.blob.specialized.BlockBlobClient;\n+import com.codahale.metrics.MetricRegistry;\n+import com.github.ambry.cloud.azure.AzureBlobDataAccessor;\n+import com.github.ambry.cloud.azure.AzureBlobLayoutStrategy;\n+import com.github.ambry.cloud.azure.AzureCloudConfig;\n+import com.github.ambry.cloud.azure.AzureMetrics;\n+import com.github.ambry.config.CloudConfig;\n+import com.github.ambry.config.ClusterMapConfig;\n+import com.github.ambry.config.ReplicationConfig;\n+import com.github.ambry.config.VerifiableProperties;\n+import com.github.ambry.tools.util.ToolUtils;\n+import java.util.concurrent.atomic.AtomicInteger;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+\n+/**\n+ * Utility to delete the replica tokens for all partitions.\n+ * Very dangerous tool.  Please know what you're doing and wear a hard hat at all times.\n+ * Required properties:\n+ *  - \"azure.storage.connection.string\" for the storage account.\n+ *  - \"cosmos.endpoint\", \"cosmos.collection.link\", \"cosmos.key\" (set to any nonempty value)\n+ *  - \"clustermap.cluster.name\" used to restrict blob container name search (e.g. \"main-123\")\n+ * Optional properties:\n+ *  - \"vcr.proxy.host\" name of the proxy host to tunnel through.\n+ *  - \"azure.blob.container.strategy\" if the account is sharded by container instead of partition.\n+ */\n+public class AzureTokenResetTool {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(AzureTokenResetTool.class);\n+  private static BlobServiceClient storageClient;\n+\n+  public static void main(String[] args) {\n+    String commandName = AzureTokenResetTool.class.getSimpleName();\n+    try {\n+      VerifiableProperties verifiableProperties = ToolUtils.getVerifiableProperties(args);\n+      String clusterName = verifiableProperties.getString(ClusterMapConfig.CLUSTERMAP_CLUSTER_NAME);\n+      CloudConfig cloudConfig = new CloudConfig(verifiableProperties);\n+      AzureCloudConfig azureCloudConfig = new AzureCloudConfig(verifiableProperties);\n+      AzureMetrics azureMetrics = new AzureMetrics(new MetricRegistry());\n+      AzureBlobLayoutStrategy blobLayoutStrategy = new AzureBlobLayoutStrategy(clusterName, azureCloudConfig);\n+      AzureBlobDataAccessor dataAccessor =\n+          new AzureBlobDataAccessor(cloudConfig, azureCloudConfig, blobLayoutStrategy, azureMetrics);\n+      storageClient = dataAccessor.getStorageClient();\n+\n+      int tokensDeleted = resetTokens(clusterName);\n+      logger.info(\"Deleted tokens for {} partitions\", tokensDeleted);\n+    } catch (Exception ex) {\n+      ex.printStackTrace();\n+      logger.error(\"Command {} failed\", commandName, ex);\n+      System.exit(1);\n+    }\n+  }\n+\n+  // Reset the offset token by deleting the blob from the container", "originalCommit": "6eec7661de73d46b87feb1331446debb7f55c0a9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY2NTI0OA==", "url": "https://github.com/linkedin/ambry/pull/1476#discussion_r411665248", "bodyText": "Curious as to why we need AtomicInteger here? Does forEachRemaining for PagedIterable's returned by listBlobContainers, return a parallel stream?", "author": "ankagrawal", "createdAt": "2020-04-20T20:21:21Z", "path": "ambry-tools/src/main/java/com/github/ambry/tools/admin/AzureTokenResetTool.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/**\n+ * Copyright 2020 LinkedIn Corp. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ */\n+package com.github.ambry.tools.admin;\n+\n+import com.azure.storage.blob.BlobServiceClient;\n+import com.azure.storage.blob.models.BlobStorageException;\n+import com.azure.storage.blob.models.ListBlobContainersOptions;\n+import com.azure.storage.blob.specialized.BlockBlobClient;\n+import com.codahale.metrics.MetricRegistry;\n+import com.github.ambry.cloud.azure.AzureBlobDataAccessor;\n+import com.github.ambry.cloud.azure.AzureBlobLayoutStrategy;\n+import com.github.ambry.cloud.azure.AzureCloudConfig;\n+import com.github.ambry.cloud.azure.AzureMetrics;\n+import com.github.ambry.config.CloudConfig;\n+import com.github.ambry.config.ClusterMapConfig;\n+import com.github.ambry.config.ReplicationConfig;\n+import com.github.ambry.config.VerifiableProperties;\n+import com.github.ambry.tools.util.ToolUtils;\n+import java.util.concurrent.atomic.AtomicInteger;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+\n+/**\n+ * Utility to delete the replica tokens for all partitions.\n+ * Very dangerous tool.  Please know what you're doing and wear a hard hat at all times.\n+ * Required properties:\n+ *  - \"azure.storage.connection.string\" for the storage account.\n+ *  - \"cosmos.endpoint\", \"cosmos.collection.link\", \"cosmos.key\" (set to any nonempty value)\n+ *  - \"clustermap.cluster.name\" used to restrict blob container name search (e.g. \"main-123\")\n+ * Optional properties:\n+ *  - \"vcr.proxy.host\" name of the proxy host to tunnel through.\n+ *  - \"azure.blob.container.strategy\" if the account is sharded by container instead of partition.\n+ */\n+public class AzureTokenResetTool {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(AzureTokenResetTool.class);\n+  private static BlobServiceClient storageClient;\n+\n+  public static void main(String[] args) {\n+    String commandName = AzureTokenResetTool.class.getSimpleName();\n+    try {\n+      VerifiableProperties verifiableProperties = ToolUtils.getVerifiableProperties(args);\n+      String clusterName = verifiableProperties.getString(ClusterMapConfig.CLUSTERMAP_CLUSTER_NAME);\n+      CloudConfig cloudConfig = new CloudConfig(verifiableProperties);\n+      AzureCloudConfig azureCloudConfig = new AzureCloudConfig(verifiableProperties);\n+      AzureMetrics azureMetrics = new AzureMetrics(new MetricRegistry());\n+      AzureBlobLayoutStrategy blobLayoutStrategy = new AzureBlobLayoutStrategy(clusterName, azureCloudConfig);\n+      AzureBlobDataAccessor dataAccessor =\n+          new AzureBlobDataAccessor(cloudConfig, azureCloudConfig, blobLayoutStrategy, azureMetrics);\n+      storageClient = dataAccessor.getStorageClient();\n+\n+      int tokensDeleted = resetTokens(clusterName);\n+      logger.info(\"Deleted tokens for {} partitions\", tokensDeleted);\n+    } catch (Exception ex) {\n+      ex.printStackTrace();\n+      logger.error(\"Command {} failed\", commandName, ex);\n+      System.exit(1);\n+    }\n+  }\n+\n+  // Reset the offset token by deleting the blob from the container\n+  public static int resetTokens(String containerPrefix) throws BlobStorageException {\n+    AtomicInteger tokensDeleted = new AtomicInteger(0);", "originalCommit": "6eec7661de73d46b87feb1331446debb7f55c0a9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI3NDA0MQ==", "url": "https://github.com/linkedin/ambry/pull/1476#discussion_r416274041", "bodyText": "I had it as an int but the compiler complained that I couldn't pass a non-final variable to a lambda, and this seemed like the easiest way to work around it.", "author": "lightningrob", "createdAt": "2020-04-28T02:07:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY2NTI0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjEzNTM1OA==", "url": "https://github.com/linkedin/ambry/pull/1476#discussion_r416135358", "bodyText": "minor: in future PR, we can replace all config names with string constants (like what you did in this PR to make them consistent)", "author": "jsjtzyy", "createdAt": "2020-04-27T20:45:03Z", "path": "ambry-api/src/main/java/com/github/ambry/config/ClusterMapConfig.java", "diffHunk": "@@ -282,10 +287,10 @@ public ClusterMapConfig(VerifiableProperties verifiableProperties) {\n     clusterMapClusterChangeHandlerType =\n         verifiableProperties.getString(\"clustermap.cluster.change.handler.type\", \"SimpleClusterChangeHandler\");\n     clusterMapDcsZkConnectStrings = verifiableProperties.getString(\"clustermap.dcs.zk.connect.strings\", \"\");", "originalCommit": "6eec7661de73d46b87feb1331446debb7f55c0a9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjIzNDQ4Mw==", "url": "https://github.com/linkedin/ambry/pull/1476#discussion_r416234483", "bodyText": "Yes.  I didn't do it in this PR to keep the scope limited.", "author": "lightningrob", "createdAt": "2020-04-28T00:12:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjEzNTM1OA=="}], "type": "inlineReview"}, {"oid": "7ee25c4b20656048099144653595a94e9a72a45e", "url": "https://github.com/linkedin/ambry/commit/7ee25c4b20656048099144653595a94e9a72a45e", "message": "Add javadocs", "committedDate": "2020-04-28T02:47:42Z", "type": "commit"}]}