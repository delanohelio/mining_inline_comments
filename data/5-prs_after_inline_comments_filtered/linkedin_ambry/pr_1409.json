{"pr_number": 1409, "pr_title": "Passing netty ByteBuf from NettyRequest to ByteBufferAsyncWritableChannel", "pr_createdAt": "2020-03-02T21:43:23Z", "pr_url": "https://github.com/linkedin/ambry/pull/1409", "timeline": [{"oid": "e3a2e6e7bdc0eb32bb55991c9c4d5c9f71d6c7d4", "url": "https://github.com/linkedin/ambry/commit/e3a2e6e7bdc0eb32bb55991c9c4d5c9f71d6c7d4", "message": "Passing netty ByteBuf from NettyRequest to ByteBufferAsyncWritableChannel", "committedDate": "2020-03-04T19:58:58Z", "type": "commit"}, {"oid": "6179acfbae04360234ae76323897f3a12fc55e08", "url": "https://github.com/linkedin/ambry/commit/6179acfbae04360234ae76323897f3a12fc55e08", "message": "Fix the test", "committedDate": "2020-03-04T19:58:59Z", "type": "commit"}, {"oid": "6179acfbae04360234ae76323897f3a12fc55e08", "url": "https://github.com/linkedin/ambry/commit/6179acfbae04360234ae76323897f3a12fc55e08", "message": "Fix the test", "committedDate": "2020-03-04T19:58:59Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk4NDEzNQ==", "url": "https://github.com/linkedin/ambry/pull/1409#discussion_r387984135", "bodyText": "double space here", "author": "cgtz", "createdAt": "2020-03-04T22:55:59Z", "path": "ambry-rest/src/main/java/com.github.ambry.rest/NettyRequest.java", "diffHunk": "@@ -453,56 +454,36 @@ protected boolean isMultipart() {\n    */\n   protected void writeContent(AsyncWritableChannel writeChannel, ReadIntoCallbackWrapper callbackWrapper,\n       HttpContent httpContent) {\n-    boolean retained = false;\n     ByteBuffer[] contentBuffers;\n-    Callback<Long>[] writeCallbacks;\n     // LastHttpContent in the end marker in netty http world.\n     boolean isLast = httpContent instanceof LastHttpContent;\n     if (isLast) {\n       setAutoRead(true);\n     }\n     if (httpContent.content().nioBufferCount() > 0) {\n-      // not a copy.\n-      httpContent = ReferenceCountUtil.retain(httpContent);\n-      retained = true;\n       contentBuffers = httpContent.content().nioBuffers();\n-      writeCallbacks = new ContentWriteCallback[contentBuffers.length];\n-      int i = 0;\n-      for (; i < contentBuffers.length - 1; i++) {\n-        writeCallbacks[i] = new ContentWriteCallback(null, false, callbackWrapper);\n-      }\n-      writeCallbacks[i] = new ContentWriteCallback(httpContent, isLast, callbackWrapper);\n     } else {\n       // this will not happen (looking at current implementations of ByteBuf in Netty), but if it does, we cannot avoid\n       // a copy (or we can introduce a read(GatheringByteChannel) method in ReadableStreamChannel if required).\n       nettyMetrics.contentCopyCount.inc();\n+      ByteBuf  content = httpContent.content();", "originalCommit": "6179acfbae04360234ae76323897f3a12fc55e08", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk4OTY5MQ==", "url": "https://github.com/linkedin/ambry/pull/1409#discussion_r387989691", "bodyText": "Remove this ^", "author": "cgtz", "createdAt": "2020-03-04T23:11:05Z", "path": "ambry-rest/src/test/java/com.github.ambry.rest/NettyRequestTest.java", "diffHunk": "@@ -293,6 +293,7 @@ public void operationsAfterCloseTest() throws Exception {\n   }\n \n   /**\n+   * sed(line('.')) < 0) ? 'zc' : 'zo')<CR></CR>", "originalCommit": "6179acfbae04360234ae76323897f3a12fc55e08", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b6007ff075fcfae76e61cea3a6f0dfac446cfdba", "url": "https://github.com/linkedin/ambry/commit/b6007ff075fcfae76e61cea3a6f0dfac446cfdba", "message": "casey comments", "committedDate": "2020-03-04T23:14:03Z", "type": "commit"}]}