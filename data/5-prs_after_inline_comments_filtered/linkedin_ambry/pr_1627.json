{"pr_number": 1627, "pr_title": "[Container scalability] Implementation of backup file logic for MySqlAccountService and addition of LMT field to Accounts/Containers", "pr_createdAt": "2020-09-22T05:39:40Z", "pr_url": "https://github.com/linkedin/ambry/pull/1627", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA0MDAzMA==", "url": "https://github.com/linkedin/ambry/pull/1627#discussion_r493040030", "bodyText": "MySqlBackupFileManager.  Also, this class is big enough to be in its own file.\nIt is also a generic backup manager, nothing specific to Mysql.  You don't need to pass the entire  MySqlAccountServiceConfig just for the backupDir.", "author": "lightningrob", "createdAt": "2020-09-22T21:19:28Z", "path": "ambry-account/src/main/java/com/github/ambry/account/MySqlAccountService.java", "diffHunk": "@@ -307,4 +342,126 @@ private void updateContainersWithMySqlStore(short accountId, Collection<Containe\n       }\n     }\n   }\n+\n+  public static class MySqlBackupFileManager {\n+    private static final Logger logger = LoggerFactory.getLogger(BackupFileManager.class);", "originalCommit": "599024c74d021275fbb9bd262050c45abe365cc8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzE5MjYzNA==", "url": "https://github.com/linkedin/ambry/pull/1627#discussion_r493192634", "bodyText": "you might want to also add a begin anchor of \"^\" for your pattern. Something like\n\"^\" + BACKUP_FILE_NAME + \"......\"", "author": "justinlin-linkedin", "createdAt": "2020-09-23T04:39:26Z", "path": "ambry-account/src/main/java/com/github/ambry/account/MySqlAccountService.java", "diffHunk": "@@ -307,4 +359,134 @@ private void updateContainersWithMySqlStore(short accountId, Collection<Containe\n       }\n     }\n   }\n+\n+  public static class MySqlBackupFileManager {\n+    private static final Logger logger = LoggerFactory.getLogger(BackupFileManager.class);\n+    private static final String BACKUP_FILE_NAME = \"MySqlAccountMetadataCopy\";\n+    private final AccountServiceMetrics accountServiceMetrics;\n+    static final String TEMP_FILE_SUFFIX = \"tmp\";\n+    static final String SEP = \".\";\n+    static final DateTimeFormatter TIMESTAMP_FORMATTER = DateTimeFormatter.ofPattern(\"yyyyMMdd'T'HHmmss\");\n+    static final ZoneOffset zoneOffset = ZoneId.systemDefault().getRules().getOffset(LocalDateTime.now());\n+    static final Pattern filenamePattern = Pattern.compile(BACKUP_FILE_NAME + \"\\\\.(\\\\d{8}T\\\\d{6})$\");", "originalCommit": "6e1a269f1b7d30faf5e4ac9b040556ece19e13d7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc3NDg1NQ==", "url": "https://github.com/linkedin/ambry/pull/1627#discussion_r493774855", "bodyText": "Minor: I think this can just be \"pathname -> ...\"", "author": "lightningrob", "createdAt": "2020-09-23T17:43:40Z", "path": "ambry-account/src/main/java/com/github/ambry/account/MySqlAccountService.java", "diffHunk": "@@ -406,16 +423,21 @@ void persistAccounts(Collection<String> accounts) {\n       if (backupDirPath == null) {\n         return null;\n       }\n-      Path filepath = backupDirPath.resolve(BACKUP_FILE_NAME);\n+\n+      FileFilter versionFileFilter = (File pathname) -> filenamePattern.matcher(pathname.getName()).find();", "originalCommit": "6e1a269f1b7d30faf5e4ac9b040556ece19e13d7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc3ODEwOQ==", "url": "https://github.com/linkedin/ambry/pull/1627#discussion_r493778109", "bodyText": "Why change from switch to if/else?", "author": "lightningrob", "createdAt": "2020-09-23T17:49:07Z", "path": "ambry-api/src/main/java/com/github/ambry/account/Account.java", "diffHunk": "@@ -122,26 +125,24 @@ private Account(JSONObject metadata) throws JSONException {\n       throw new IllegalArgumentException(\"metadata cannot be null.\");\n     }\n     short metadataVersion = (short) metadata.getInt(JSON_VERSION_KEY);\n-    switch (metadataVersion) {", "originalCommit": "6e1a269f1b7d30faf5e4ac9b040556ece19e13d7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc4MjA2OA==", "url": "https://github.com/linkedin/ambry/pull/1627#discussion_r493782068", "bodyText": "I think it's useful to cache the calculated value, so the whole map doesn't need to be scanned on every refresh.", "author": "lightningrob", "createdAt": "2020-09-23T17:55:32Z", "path": "ambry-account/src/main/java/com/github/ambry/account/AccountInfoMap.java", "diffHunk": "@@ -40,8 +40,6 @@\n   private final static Logger logger = LoggerFactory.getLogger(AccountInfoMap.class);\n   private final Map<String, Account> nameToAccountMap;\n   private final Map<Short, Account> idToAccountMap;\n-  // used to track last modified time of the accounts and containers in this cache\n-  private long lastModifiedTime = 0;", "originalCommit": "6e1a269f1b7d30faf5e4ac9b040556ece19e13d7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc4MjYwNQ==", "url": "https://github.com/linkedin/ambry/pull/1627#discussion_r493782605", "bodyText": "This will change infrequently.  Perhaps can use cached value?", "author": "lightningrob", "createdAt": "2020-09-23T17:56:19Z", "path": "ambry-account/src/main/java/com/github/ambry/account/MySqlAccountService.java", "diffHunk": "@@ -127,8 +128,20 @@ private void fetchAndUpdateCache() {\n       // Retry connection to mysql if we couldn't set up previously\n       createMySqlAccountStore();\n \n-      // TODO: Find max LMT of Accounts and containers in cache.\n+      // Find max LMT of Accounts and containers in cache.", "originalCommit": "6e1a269f1b7d30faf5e4ac9b040556ece19e13d7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "be61c19f220ef297890af1d80b5419ab5895c815", "url": "https://github.com/linkedin/ambry/commit/be61c19f220ef297890af1d80b5419ab5895c815", "message": "Changes to:\n1. Use BackupFileManager in MySqlAccountService to persist and get account metadata from backup files locally.\n2. Add 'lastModifiedTime' field to Account and Container classes and use it to sync added/modified records from db.", "committedDate": "2020-09-24T22:23:47Z", "type": "commit"}, {"oid": "be61c19f220ef297890af1d80b5419ab5895c815", "url": "https://github.com/linkedin/ambry/commit/be61c19f220ef297890af1d80b5419ab5895c815", "message": "Changes to:\n1. Use BackupFileManager in MySqlAccountService to persist and get account metadata from backup files locally.\n2. Add 'lastModifiedTime' field to Account and Container classes and use it to sync added/modified records from db.", "committedDate": "2020-09-24T22:23:47Z", "type": "forcePushed"}, {"oid": "5a51298f6be5835ad2e36a7ac18713a9969e0bfe", "url": "https://github.com/linkedin/ambry/commit/5a51298f6be5835ad2e36a7ac18713a9969e0bfe", "message": "Fix unintended changes in BackupFileManager logger trace messages", "committedDate": "2020-09-25T00:01:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDcyNjg1MQ==", "url": "https://github.com/linkedin/ambry/pull/1627#discussion_r494726851", "bodyText": "minor: I guess you wanted to set 10 here.", "author": "jsjtzyy", "createdAt": "2020-09-25T03:29:09Z", "path": "ambry-api/src/main/java/com/github/ambry/config/MySqlAccountServiceConfig.java", "diffHunk": "@@ -73,6 +74,14 @@\n   @Default(\"\")\n   public final String backupDir;\n \n+  /**\n+   * The maximum number of local backup files kept in disk. When account service exceeds this count, every time it creates\n+   * a new backup file, it will remove the oldest one.\n+   */\n+  @Config(MAX_BACKUP_FILE_COUNT)\n+  @Default(\"100\")", "originalCommit": "5a51298f6be5835ad2e36a7ac18713a9969e0bfe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDcyODU5NA==", "url": "https://github.com/linkedin/ambry/pull/1627#discussion_r494728594", "bodyText": "This import can be removed.", "author": "jsjtzyy", "createdAt": "2020-09-25T03:36:11Z", "path": "ambry-account/src/test/java/com/github/ambry/account/BackupFileManagerTest.java", "diffHunk": "@@ -16,6 +16,7 @@\n import com.codahale.metrics.MetricRegistry;\n import com.github.ambry.config.HelixAccountServiceConfig;\n import com.github.ambry.config.VerifiableProperties;\n+import com.github.ambry.utils.SystemTime;", "originalCommit": "5a51298f6be5835ad2e36a7ac18713a9969e0bfe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "15d412ea4b226895fc622f05e627648166c9e591", "url": "https://github.com/linkedin/ambry/commit/15d412ea4b226895fc622f05e627648166c9e591", "message": "Changes to add unit tests and address review comments", "committedDate": "2020-09-25T04:16:18Z", "type": "commit"}, {"oid": "faf246b8083cf622f25a9392155cc7ee382471e8", "url": "https://github.com/linkedin/ambry/commit/faf246b8083cf622f25a9392155cc7ee382471e8", "message": "Fix unit test failures in AccountsDaoTest and ContainerDaoTest", "committedDate": "2020-09-25T04:41:40Z", "type": "commit"}, {"oid": "d78c7f1c78d012c8df25f6cf0ac79503c2631e6d", "url": "https://github.com/linkedin/ambry/commit/d78c7f1c78d012c8df25f6cf0ac79503c2631e6d", "message": "Fix AccountContainerTest by adding lastModifiedTime field to reference json objects", "committedDate": "2020-09-25T17:32:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEzODM0OA==", "url": "https://github.com/linkedin/ambry/pull/1627#discussion_r495138348", "bodyText": "Is this needed in the old version?", "author": "lightningrob", "createdAt": "2020-09-25T17:41:02Z", "path": "ambry-api/src/test/java/com/github/ambry/account/AccountContainerTest.java", "diffHunk": "@@ -1041,6 +1044,7 @@ private JSONObject buildContainerJson(Container container) throws JSONException\n         containerJson.put(DESCRIPTION_KEY, container.getDescription());\n         containerJson.put(IS_PRIVATE_KEY, !container.isCacheable());\n         containerJson.put(PARENT_ACCOUNT_ID_KEY, container.getParentAccountId());\n+        containerJson.put(LAST_MODIFIED_TIME_KEY, container.getLastModifiedTime());", "originalCommit": "d78c7f1c78d012c8df25f6cf0ac79503c2631e6d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEzOTEzOA==", "url": "https://github.com/linkedin/ambry/pull/1627#discussion_r495139138", "bodyText": "Not sure this was really needed.  Could have referenced it by class.", "author": "lightningrob", "createdAt": "2020-09-25T17:42:39Z", "path": "ambry-api/src/test/java/com/github/ambry/account/AccountContainerTest.java", "diffHunk": "@@ -34,6 +35,7 @@\n \n import static com.github.ambry.account.Account.*;\n import static com.github.ambry.account.Container.*;\n+import static com.github.ambry.account.Container.LAST_MODIFIED_TIME_KEY;", "originalCommit": "d78c7f1c78d012c8df25f6cf0ac79503c2631e6d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}