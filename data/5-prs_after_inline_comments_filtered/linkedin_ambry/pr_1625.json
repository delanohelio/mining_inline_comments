{"pr_number": 1625, "pr_title": "Remove prefetch configuration", "pr_createdAt": "2020-09-12T03:03:28Z", "pr_url": "https://github.com/linkedin/ambry/pull/1625", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzk3NjczMA==", "url": "https://github.com/linkedin/ambry/pull/1625#discussion_r487976730", "bodyText": "we could rename this method to fetchDataFromDisk, since that is its primary job now.", "author": "cgtz", "createdAt": "2020-09-14T14:28:57Z", "path": "ambry-messageformat/src/main/java/com/github/ambry/messageformat/MessageFormatSend.java", "diffHunk": "@@ -104,9 +104,8 @@ public MessageFormatSend(MessageReadSet readSet, MessageFormatFlags flag, Messag\n   /**\n    * Calculates the offsets from the MessageReadSet that needs to be sent over the network\n    * based on the type of data requested as indicated by the flags\n-   * @param enableDataPrefetch do data prefetch if this is true.\n    */\n-  private void calculateOffsets(boolean enableDataPrefetch) throws IOException, MessageFormatException {\n+  private void calculateOffsets() throws IOException, MessageFormatException {", "originalCommit": "5b62456e96fd5cb6f9b774941ac2210a74d8ea32", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODA4MjM5MA==", "url": "https://github.com/linkedin/ambry/pull/1625#discussion_r488082390", "bodyText": "+1", "author": "zzmao", "createdAt": "2020-09-14T16:53:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzk3NjczMA=="}], "type": "inlineReview"}, {"oid": "681b8c41cfe8ed72e1cc3861b8bb7338c7a0efea", "url": "https://github.com/linkedin/ambry/commit/681b8c41cfe8ed72e1cc3861b8bb7338c7a0efea", "message": "Address comments", "committedDate": "2020-09-14T19:08:20Z", "type": "forcePushed"}, {"oid": "beb82874ab3a18c0c300b92d664d6254fd3b0a2e", "url": "https://github.com/linkedin/ambry/commit/beb82874ab3a18c0c300b92d664d6254fd3b0a2e", "message": "Remove prefetch configuration", "committedDate": "2020-09-14T20:34:10Z", "type": "commit"}, {"oid": "7c423403a20ff0e9a78a85ade68adb814b63d46a", "url": "https://github.com/linkedin/ambry/commit/7c423403a20ff0e9a78a85ade68adb814b63d46a", "message": "Address comments", "committedDate": "2020-09-14T20:34:10Z", "type": "commit"}, {"oid": "7c423403a20ff0e9a78a85ade68adb814b63d46a", "url": "https://github.com/linkedin/ambry/commit/7c423403a20ff0e9a78a85ade68adb814b63d46a", "message": "Address comments", "committedDate": "2020-09-14T20:34:10Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg2MDg5OA==", "url": "https://github.com/linkedin/ambry/pull/1625#discussion_r488860898", "bodyText": "nit: add a space in networkbased", "author": "cgtz", "createdAt": "2020-09-15T17:59:08Z", "path": "ambry-messageformat/src/main/java/com/github/ambry/messageformat/MessageFormatSend.java", "diffHunk": "@@ -88,25 +88,24 @@ public long sizetoSend() {\n   }\n \n   public MessageFormatSend(MessageReadSet readSet, MessageFormatFlags flag, MessageFormatMetrics metrics,\n-      StoreKeyFactory storeKeyFactory, boolean enableDataPrefetch) throws IOException, MessageFormatException {\n+      StoreKeyFactory storeKeyFactory) throws IOException, MessageFormatException {\n     this.readSet = readSet;\n     this.flag = flag;\n     this.storeKeyFactory = storeKeyFactory;\n     totalSizeToWrite = 0;\n     long startTime = SystemTime.getInstance().milliseconds();\n-    calculateOffsets(enableDataPrefetch);\n+    fetchDataFromReadSet();\n     metrics.calculateOffsetMessageFormatSendTime.update(SystemTime.getInstance().milliseconds() - startTime);\n     sizeWritten = 0;\n     currentWriteIndex = 0;\n     sizeWrittenFromCurrentIndex = 0;\n   }\n \n   /**\n-   * Calculates the offsets from the MessageReadSet that needs to be sent over the network\n-   * based on the type of data requested as indicated by the flags\n-   * @param enableDataPrefetch do data prefetch if this is true.\n+   * Fetch data from the MessageReadSet that needs to be sent over the networkbased on the type of data requested as", "originalCommit": "7c423403a20ff0e9a78a85ade68adb814b63d46a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}